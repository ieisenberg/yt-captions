[
  {
    "text": "welcome to the talk on the hunt of for hcd data inconsistencies",
    "start": "9920",
    "end": "16379"
  },
  {
    "text": "and data inconsistencies are pretty it's Unique animal so finding them is more",
    "start": "16379",
    "end": "23460"
  },
  {
    "text": "than an art than strict science at least yet so hopefully",
    "start": "23460",
    "end": "29820"
  },
  {
    "text": "after the talk you will have a better understanding of the topic and be able to find",
    "start": "29820",
    "end": "36260"
  },
  {
    "text": "inconsistencies in your own system I'm Mark sarkovich I work at Google and I'm",
    "start": "36260",
    "end": "42239"
  },
  {
    "text": "one of the HD maintainers so topic for the day is I would like to",
    "start": "42239",
    "end": "48600"
  },
  {
    "text": "Define what are data inconsistencies what tools we use to hand them and how",
    "start": "48600",
    "end": "55739"
  },
  {
    "text": "hcd has adapted to to to find the problems that we had",
    "start": "55739",
    "end": "62539"
  },
  {
    "text": "with inconsistencies so at the end I will do a short demo showing you how how",
    "start": "62539",
    "end": "68939"
  },
  {
    "text": "it works in practice uh so hcd implements uh so-called",
    "start": "68939",
    "end": "76200"
  },
  {
    "text": "distributed consensus it means that multiple units processes work as a or multiple",
    "start": "76200",
    "end": "84900"
  },
  {
    "text": "processes of hcd server run as a single unit a cluster that can cause",
    "start": "84900",
    "end": "91380"
  },
  {
    "text": "consistently respond to user requests so any user can observe the same data any",
    "start": "91380",
    "end": "99720"
  },
  {
    "text": "write by a user can be observed by all the users so what is the inconsistency",
    "start": "99720",
    "end": "107000"
  },
  {
    "text": "inconsistency is when one of the one of the instances breaks loose and starts",
    "start": "107000",
    "end": "115020"
  },
  {
    "text": "spilling nonsense no matter how cool your free head dragon is it doesn't it's",
    "start": "115020",
    "end": "121200"
  },
  {
    "text": "stopped working when one of the one of the heads goes berserk",
    "start": "121200",
    "end": "127580"
  },
  {
    "text": "to give you more concrete example here is a real production case that I noticed",
    "start": "127580",
    "end": "135660"
  },
  {
    "text": "and tried to document a where hcd inconsistency",
    "start": "135660",
    "end": "142379"
  },
  {
    "text": "caused problems with HD cluster kubernetes cluster using it",
    "start": "142379",
    "end": "149220"
  },
  {
    "text": "[Music] in this case at CD or kubernetes nodes",
    "start": "149220",
    "end": "154819"
  },
  {
    "text": "were flapping from status ready and not ready there were random failures random",
    "start": "154819",
    "end": "162239"
  },
  {
    "text": "timeouts authorization didn't work sometimes sometimes it worked so how do",
    "start": "162239",
    "end": "168599"
  },
  {
    "text": "you know what is happening atoms were crashing um yeah basically because of like",
    "start": "168599",
    "end": "175860"
  },
  {
    "text": "architecture one of the API servers were structurally misbehaving and what was",
    "start": "175860",
    "end": "180900"
  },
  {
    "text": "the root cause it was just missing one exactly one right so",
    "start": "180900",
    "end": "186680"
  },
  {
    "text": "as you see on the graph missing one right can",
    "start": "186680",
    "end": "192060"
  },
  {
    "text": "cause the the revision of hcd to totally diverge this is because how kubernetes",
    "start": "192060",
    "end": "198720"
  },
  {
    "text": "uses at CD and its revision is pretty crucial for kubernetes correctness",
    "start": "198720",
    "end": "206940"
  },
  {
    "text": "um to to explain revision is like Global counter for each change that happened is",
    "start": "206940",
    "end": "213959"
  },
  {
    "text": "happening in the cluster and revision is used by kubernetes for optimistic",
    "start": "213959",
    "end": "220260"
  },
  {
    "text": "concurrency control so",
    "start": "220260",
    "end": "225959"
  },
  {
    "text": "um the example above was unrelated but why",
    "start": "225959",
    "end": "231959"
  },
  {
    "text": "I'm talking to you today is about the state of HCG 3.5.0",
    "start": "231959",
    "end": "239819"
  },
  {
    "text": "the release was done after a long time with a lot of changes in the project",
    "start": "240420",
    "end": "247040"
  },
  {
    "text": "including total change of maintainers and loss of a lot of",
    "start": "247040",
    "end": "252860"
  },
  {
    "text": "knowledge that was Unwritten between maintainers and not past",
    "start": "252860",
    "end": "259040"
  },
  {
    "text": "at the like we the work motivate that motivated",
    "start": "260040",
    "end": "265860"
  },
  {
    "text": "hcd to to to to look into the problem further was uh to to let's say",
    "start": "265860",
    "end": "273780"
  },
  {
    "text": "inconsistencies or correctness issues one was Data inconsistency on Crash so your instance",
    "start": "273780",
    "end": "281460"
  },
  {
    "text": "of hcd server could be happily running and then I know it um or your VM brands",
    "start": "281460",
    "end": "288240"
  },
  {
    "text": "of memory or tombs or skilled HD could mate make incorrect rights that results",
    "start": "288240",
    "end": "296220"
  },
  {
    "text": "in it's this one instance being inconsistent with other members and second case apparently no one",
    "start": "296220",
    "end": "303840"
  },
  {
    "text": "noticed that hcd for a long time what didn't provide durability in some cases",
    "start": "303840",
    "end": "311000"
  },
  {
    "text": "yeah and we got and are still mostly not have not full explanation for",
    "start": "311580",
    "end": "319800"
  },
  {
    "text": "multiple reports that are currently",
    "start": "319800",
    "end": "325698"
  },
  {
    "text": "very hard to reproduce and understand we are trying to to to build tools to to",
    "start": "326100",
    "end": "332639"
  },
  {
    "text": "understand them but at the current state we have multiple reports that are",
    "start": "332639",
    "end": "337880"
  },
  {
    "text": "unconfirmed unverified but also not and fully understand understood",
    "start": "337880",
    "end": "344880"
  },
  {
    "text": "the problem underlying this is hcd doesn't have a test suit that is capable",
    "start": "344880",
    "end": "351000"
  },
  {
    "text": "to detect this class of issues I expect most of the problem projects and",
    "start": "351000",
    "end": "357060"
  },
  {
    "text": "databases don't have these kinds of tests but compared to most databases they're",
    "start": "357060",
    "end": "364919"
  },
  {
    "text": "done build for for ecosystem so no matter what anyone says",
    "start": "364919",
    "end": "370759"
  },
  {
    "text": "hcd is the building block for kubernetes which is the building block for fall",
    "start": "370759",
    "end": "376800"
  },
  {
    "text": "Cloud native infrastructure like we can at night we need to do better like as a",
    "start": "376800",
    "end": "382259"
  },
  {
    "text": "project like we cannot we cannot like let this slide",
    "start": "382259",
    "end": "388740"
  },
  {
    "text": "so how do we have how do we hunt for",
    "start": "388740",
    "end": "394319"
  },
  {
    "text": "inconsistencies uh what is the previous art so",
    "start": "394319",
    "end": "399660"
  },
  {
    "text": "previously at CD was using functional tests so functional tests that are",
    "start": "399660",
    "end": "406080"
  },
  {
    "text": "pretty simple they just run at CD instance they do some failure injection",
    "start": "406080",
    "end": "412259"
  },
  {
    "text": "and maybe when they finish verify if is the state consistent between the members",
    "start": "412259",
    "end": "418800"
  },
  {
    "text": "uh there were multiple problems with them",
    "start": "418800",
    "end": "424080"
  },
  {
    "text": "like May one main thing it was they were written by one person and when this person left the project no one knew how",
    "start": "424080",
    "end": "430319"
  },
  {
    "text": "to use it no one understood them they didn't work like they run like most of the time they reflect also a lot",
    "start": "430319",
    "end": "437940"
  },
  {
    "text": "but the pro it was not solving the issue",
    "start": "437940",
    "end": "444060"
  },
  {
    "text": "directly as it didn't solve like the issue end to end it just gave us a signal that was",
    "start": "444060",
    "end": "450960"
  },
  {
    "text": "very flaky that if you go into state of the art you",
    "start": "450960",
    "end": "456419"
  },
  {
    "text": "can find jabson so uh Kyle Kingsbury is a person that is",
    "start": "456419",
    "end": "463740"
  },
  {
    "text": "really interested in correctness of databases so he built fall I would say",
    "start": "463740",
    "end": "469740"
  },
  {
    "text": "project and community that validates safety of distributed databases and",
    "start": "469740",
    "end": "475380"
  },
  {
    "text": "verify like checks if there guarantees that they are saying that they're giving checks",
    "start": "475380",
    "end": "481860"
  },
  {
    "text": "is those guarantees truth or is the database lying or selling their or is",
    "start": "481860",
    "end": "489000"
  },
  {
    "text": "the is it selling more than the the reality is and there were multiple time times",
    "start": "489000",
    "end": "497340"
  },
  {
    "text": "used successfully to validate hcd project but",
    "start": "497340",
    "end": "502620"
  },
  {
    "text": "the this solution is also not perfect for an open source project",
    "start": "502620",
    "end": "507860"
  },
  {
    "text": "that is written in go has limited capacity and doesn't want to learn new",
    "start": "507860",
    "end": "516000"
  },
  {
    "text": "language be forced to work on AWS or learn a whole new domain domain like for",
    "start": "516000",
    "end": "524880"
  },
  {
    "text": "from distributed systems which are known to be pretty hard they were also never designed to run in",
    "start": "524880",
    "end": "532260"
  },
  {
    "text": "CI so if they are if hcd changes anything in API",
    "start": "532260",
    "end": "538440"
  },
  {
    "text": "and it breaks the tests it cannot be easily verified someone needs to run them manually to on every time we make a",
    "start": "538440",
    "end": "545820"
  },
  {
    "text": "change so they cannot be cons used for continuous",
    "start": "545820",
    "end": "551459"
  },
  {
    "text": "validation and at the end like maybe personal opinion but we",
    "start": "551459",
    "end": "557279"
  },
  {
    "text": "couldn't reach out to even ask cncf to pay the the owner of the of",
    "start": "557279",
    "end": "563940"
  },
  {
    "text": "the system to to help us so what we what the tools that we need",
    "start": "563940",
    "end": "571080"
  },
  {
    "text": "need to what are the requirements so",
    "start": "571080",
    "end": "576120"
  },
  {
    "text": "what we need to build is something that is adequate by this I mean it not only",
    "start": "576120",
    "end": "582380"
  },
  {
    "text": "reproduces all historical issues that we know of and in",
    "start": "582380",
    "end": "588899"
  },
  {
    "text": "every like represents them easily and every time and and we can use that to always validate",
    "start": "588899",
    "end": "595680"
  },
  {
    "text": "correctness of the tests not only but also is able to go through all the generic properties of",
    "start": "595680",
    "end": "602940"
  },
  {
    "text": "LCD and find new issues that we haven't thought of",
    "start": "602940",
    "end": "607940"
  },
  {
    "text": "the the tools need to be also accurate so there cannot be a",
    "start": "607980",
    "end": "615680"
  },
  {
    "text": "they cannot be just run and not return anything and maybe",
    "start": "615680",
    "end": "622320"
  },
  {
    "text": "they work maybe they don't work they need to be strict so they every time that we validate you know killing a",
    "start": "622320",
    "end": "629459"
  },
  {
    "text": "machine or killing the process they need to validate that it happened and never",
    "start": "629459",
    "end": "634500"
  },
  {
    "text": "see the responded because I know someone changes the some code that it no longer skills the process and process that",
    "start": "634500",
    "end": "640920"
  },
  {
    "text": "lives and we stop validating which happened to functionality tests that at",
    "start": "640920",
    "end": "646140"
  },
  {
    "text": "the end they didn't validate because sometimes they didn't test or run the run the disruption that they",
    "start": "646140",
    "end": "653820"
  },
  {
    "text": "were meant to do and accurate we need to know",
    "start": "653820",
    "end": "660600"
  },
  {
    "text": "who if there is a failure we need to be able to attribute it is it a problem",
    "start": "660600",
    "end": "666300"
  },
  {
    "text": "with the test or is it the problem with hcd like if if we don't have it like we",
    "start": "666300",
    "end": "672300"
  },
  {
    "text": "flip a coin and in finding the issue or interpreting or picking the issue and we flip a coin",
    "start": "672300",
    "end": "679500"
  },
  {
    "text": "when when someone like spends a lot of time to try to reproduce it or understand it",
    "start": "679500",
    "end": "686100"
  },
  {
    "text": "instead of getting a clear signal is it it's what who is what to blame",
    "start": "686100",
    "end": "693480"
  },
  {
    "text": "the tools also need to be maintainable so they need to be run Always by",
    "start": "693480",
    "end": "699300"
  },
  {
    "text": "everyone they can they need to be run on each PR they need to be able to be run",
    "start": "699300",
    "end": "705779"
  },
  {
    "text": "every day for a long time for a long time",
    "start": "705779",
    "end": "710660"
  },
  {
    "text": "um part of the hcd testing is using the end-to-end suit which is just like",
    "start": "711600",
    "end": "718980"
  },
  {
    "text": "wrapper for starting a process with configuration but reusing the existing",
    "start": "718980",
    "end": "724440"
  },
  {
    "text": "framework which would save us pure amount of Maintenance costs because we",
    "start": "724440",
    "end": "730079"
  },
  {
    "text": "just need to run LCD like we don't need magic we just need to have an LCD",
    "start": "730079",
    "end": "735360"
  },
  {
    "text": "instance and check if it behaves correctly",
    "start": "735360",
    "end": "741620"
  },
  {
    "text": "um yeah so for that I would want to go to",
    "start": "742680",
    "end": "751339"
  },
  {
    "text": "robustness which is how I want to Define what we are trying to validate so",
    "start": "751339",
    "end": "759660"
  },
  {
    "text": "robustness is ability of the system to maintain correctness under any condition",
    "start": "759660",
    "end": "765139"
  },
  {
    "text": "so correctness is any guarantee that we are saying saying to our users that we",
    "start": "765139",
    "end": "771480"
  },
  {
    "text": "give them and the any condition is any condition",
    "start": "771480",
    "end": "776760"
  },
  {
    "text": "is it a cloud failure is it a process problem or disk or bytes",
    "start": "776760",
    "end": "785040"
  },
  {
    "text": "get flipped we don't care this is we just need a correct system",
    "start": "785040",
    "end": "791540"
  },
  {
    "text": "so to give a detail here is like high level",
    "start": "791760",
    "end": "797100"
  },
  {
    "text": "or over you with guessing how frequent the issues could be happening but this is the level of granularity that we want",
    "start": "797100",
    "end": "805139"
  },
  {
    "text": "to consider so outside of normal operations which are the trivial case we need to know if",
    "start": "805139",
    "end": "813899"
  },
  {
    "text": "there is a problem if there is a normal packet loss that happens every day we need to know if during upgrades is there",
    "start": "813899",
    "end": "821760"
  },
  {
    "text": "an issue and are we still correct even if people",
    "start": "821760",
    "end": "827880"
  },
  {
    "text": "pick unsupported or not as obvious upgrade paths",
    "start": "827880",
    "end": "834320"
  },
  {
    "text": "we need to also take account of standard failures like people just shutting down",
    "start": "834320",
    "end": "841440"
  },
  {
    "text": "their machines it's not always obvious that at every code line the",
    "start": "841440",
    "end": "848100"
  },
  {
    "text": "if the process is killed at any code line it will be still correct",
    "start": "848100",
    "end": "853500"
  },
  {
    "text": "and going into more obscure failures that happen pretty rare even this is",
    "start": "853500",
    "end": "860459"
  },
  {
    "text": "more number from on premise but when multiple bit flips occur you can get",
    "start": "860459",
    "end": "866720"
  },
  {
    "text": "data corruption data Corruptions of memory that",
    "start": "866720",
    "end": "872279"
  },
  {
    "text": "fulfill the CRC code so they seem from process correct they could be random",
    "start": "872279",
    "end": "878339"
  },
  {
    "text": "sometimes randomly flipped what does correctness mean here at CD",
    "start": "878339",
    "end": "886579"
  },
  {
    "text": "Promises to the user two types of guarantees one is about key value API",
    "start": "886579",
    "end": "892920"
  },
  {
    "text": "and second one is about watch they are separated because one",
    "start": "892920",
    "end": "899040"
  },
  {
    "text": "is um requests it one is request response like",
    "start": "899040",
    "end": "904680"
  },
  {
    "text": "and second one is more subscribe subscribing to some changes so one is by",
    "start": "904680",
    "end": "910620"
  },
  {
    "text": "delayed by definition so key value changes needs to be need to",
    "start": "910620",
    "end": "917579"
  },
  {
    "text": "be Atomic so either a transaction succeeds fully or it never happened",
    "start": "917579",
    "end": "925079"
  },
  {
    "text": "key value changes needs to be durable so if I make a right this right is",
    "start": "925079",
    "end": "930839"
  },
  {
    "text": "permanent for forever and no matter if your desk like disk fails or uh yeah if",
    "start": "930839",
    "end": "940800"
  },
  {
    "text": "process shutdown new if I restart the LCD it should have the data that I've wrote",
    "start": "940800",
    "end": "947339"
  },
  {
    "text": "and API instability linearizable I will go into that further but it basically",
    "start": "947339",
    "end": "953399"
  },
  {
    "text": "means that every change is ordered by the real-time",
    "start": "953399",
    "end": "959300"
  },
  {
    "text": "real-time counterparts so you can order the changes and buy time",
    "start": "959300",
    "end": "966980"
  },
  {
    "text": "um the word guarantees mean that what guarantees gives you a global order so",
    "start": "967740",
    "end": "975420"
  },
  {
    "text": "at CD all the changes to LCD have a revision number which is a global number",
    "start": "975420",
    "end": "980820"
  },
  {
    "text": "and all the changes on the watch should be ordered by this number hcd changes needs to be a HD Watch needs",
    "start": "980820",
    "end": "988620"
  },
  {
    "text": "to be reliable so it never it should never drop any sub",
    "start": "988620",
    "end": "993720"
  },
  {
    "text": "um any events or Sub sub um yeah any part of stream within so you should",
    "start": "993720",
    "end": "1002120"
  },
  {
    "text": "get all the revisions and HD and watch needs to be atomic",
    "start": "1002120",
    "end": "1009440"
  },
  {
    "text": "which means if there is transaction that changes multiple keys they should be",
    "start": "1009440",
    "end": "1014959"
  },
  {
    "text": "sent out within as one unit within one response instead of being split between",
    "start": "1014959",
    "end": "1020240"
  },
  {
    "text": "multiple responses so basically you should observe every time you get an even or response you",
    "start": "1020240",
    "end": "1027500"
  },
  {
    "text": "should observe all the events that happened within this revision",
    "start": "1027500",
    "end": "1032720"
  },
  {
    "text": "so how do we validate correctness we can take the part from",
    "start": "1032720",
    "end": "1038240"
  },
  {
    "text": "the functional tests which is we take some scenario we run",
    "start": "1038240",
    "end": "1044319"
  },
  {
    "text": "hcd we inject some failures and we send some traffic but",
    "start": "1044319",
    "end": "1050540"
  },
  {
    "text": "how do we validate the correctness this is the the hard part what do we",
    "start": "1050540",
    "end": "1056720"
  },
  {
    "text": "take or what do we read from hcd or failures or traffic",
    "start": "1056720",
    "end": "1063440"
  },
  {
    "text": "to to make a decision how do we validate it",
    "start": "1063440",
    "end": "1069080"
  },
  {
    "text": "so this comes to to uh",
    "start": "1069080",
    "end": "1075020"
  },
  {
    "text": "a broader topic of fact that we cannot use",
    "start": "1075020",
    "end": "1080780"
  },
  {
    "text": "traditional testing that is scripted",
    "start": "1080780",
    "end": "1085820"
  },
  {
    "text": "so tests like you you need tests functional tests",
    "start": "1085820",
    "end": "1090940"
  },
  {
    "text": "integration tests they all follow a trajectory and they for all follow some",
    "start": "1090940",
    "end": "1096559"
  },
  {
    "text": "script that someone defined and cannot never derive and the moment that the tests are",
    "start": "1096559",
    "end": "1103039"
  },
  {
    "text": "the what you're testing derives from what you expect the test fails so we",
    "start": "1103039",
    "end": "1108320"
  },
  {
    "text": "can't use those how do we Tax test generic properties so for help here comes exploratory",
    "start": "1108320",
    "end": "1116179"
  },
  {
    "text": "testing so if you ever did Fast testing or ever tested did property testing this",
    "start": "1116179",
    "end": "1124220"
  },
  {
    "text": "is what I'm talking about so not testing a scenario testing some invariant",
    "start": "1124220",
    "end": "1129620"
  },
  {
    "text": "testing some property of what of the system",
    "start": "1129620",
    "end": "1134780"
  },
  {
    "text": "but the problem is how do we like Okay so we have a",
    "start": "1134780",
    "end": "1140419"
  },
  {
    "text": "approach how do we do validation Here Comes model based testing so",
    "start": "1140419",
    "end": "1147980"
  },
  {
    "text": "a model is a simplified implementation that is",
    "start": "1147980",
    "end": "1153740"
  },
  {
    "text": "easy to understand by anyone should fit in",
    "start": "1153740",
    "end": "1158960"
  },
  {
    "text": "a couple couple let's say 100 lines and behaves like that full system",
    "start": "1158960",
    "end": "1167179"
  },
  {
    "text": "through full fancy multi multi-distributed multiple notes system should at the end",
    "start": "1167179",
    "end": "1175100"
  },
  {
    "text": "behave like a simple 100 line code structure or class",
    "start": "1175100",
    "end": "1183140"
  },
  {
    "text": "and model tests or using model testing",
    "start": "1183140",
    "end": "1189080"
  },
  {
    "text": "requires us to collect operation history and from real system and valid replay it on",
    "start": "1189080",
    "end": "1198080"
  },
  {
    "text": "the model so if the model represents correct and",
    "start": "1198080",
    "end": "1203120"
  },
  {
    "text": "desired behavior of the system replaying the same the history should give us",
    "start": "1203120",
    "end": "1208280"
  },
  {
    "text": "answer is the system behaving as it's supposed to be",
    "start": "1208280",
    "end": "1213980"
  },
  {
    "text": "so for hcd it's this simple key Value Store like how can why cannot we use a",
    "start": "1213980",
    "end": "1220580"
  },
  {
    "text": "hash map with a counter that's all but there is another problem",
    "start": "1220580",
    "end": "1228799"
  },
  {
    "text": "which order like here we have set of requests that were executed by multiple",
    "start": "1228799",
    "end": "1235340"
  },
  {
    "text": "users multiple their concurrent requests that",
    "start": "1235340",
    "end": "1241400"
  },
  {
    "text": "are done they there are different types of requests",
    "start": "1241400",
    "end": "1246799"
  },
  {
    "text": "how do we know what order they came in",
    "start": "1246799",
    "end": "1252799"
  },
  {
    "text": "at CD knows but as when we test we don't know what is happening at city so how do",
    "start": "1252799",
    "end": "1259039"
  },
  {
    "text": "we know there and here comes the linearizability testing",
    "start": "1259039",
    "end": "1265160"
  },
  {
    "text": "or linear linearizability tracker which",
    "start": "1265160",
    "end": "1271520"
  },
  {
    "text": "which is a tool that can take operation history and the model and find the order",
    "start": "1271520",
    "end": "1280039"
  },
  {
    "text": "so it's basically on the for the image here it basically goes through every",
    "start": "1280039",
    "end": "1286880"
  },
  {
    "text": "operation and creates a line that is consistent",
    "start": "1286880",
    "end": "1292100"
  },
  {
    "text": "with how model would behave so we don't know what order of the operations happen",
    "start": "1292100",
    "end": "1297980"
  },
  {
    "text": "on LCD we can just based on history derive one way it could do this that is",
    "start": "1297980",
    "end": "1305360"
  },
  {
    "text": "correct if there is if there is no way to collect the connect the lines that is",
    "start": "1305360",
    "end": "1311419"
  },
  {
    "text": "correct it means hcd is incorrect or at least something is like at least",
    "start": "1311419",
    "end": "1318740"
  },
  {
    "text": "the test fail and you can then go there and validate is the hcd or the model",
    "start": "1318740",
    "end": "1324500"
  },
  {
    "text": "incorrect so this gives us a full solution the hcd",
    "start": "1324500",
    "end": "1331460"
  },
  {
    "text": "robustness tests is as described the part that starts the",
    "start": "1331460",
    "end": "1336620"
  },
  {
    "text": "cluster inject some failures generate some traffic then collects the",
    "start": "1336620",
    "end": "1342380"
  },
  {
    "text": "history of both operations which are like key value put get and watch History",
    "start": "1342380",
    "end": "1350659"
  },
  {
    "text": "the operations combined with the model can give us can be passed to",
    "start": "1350659",
    "end": "1355760"
  },
  {
    "text": "linearizability tracker we can which gives us answer is it correct or is it not watch History it's a little bit",
    "start": "1355760",
    "end": "1362659"
  },
  {
    "text": "simpler because we already it's ordered we already know the order of this results we can just",
    "start": "1362659",
    "end": "1369559"
  },
  {
    "text": "write simple functions to validate validated so",
    "start": "1369559",
    "end": "1376039"
  },
  {
    "text": "when we when we started this or when I started this effort we we quickly figured out",
    "start": "1376039",
    "end": "1383120"
  },
  {
    "text": "that no one knows how hcd is used by kubernetes",
    "start": "1383120",
    "end": "1387880"
  },
  {
    "text": "so we me with Han Kang",
    "start": "1389360",
    "end": "1394780"
  },
  {
    "text": "we worked on defining the contract because without the exact contract how",
    "start": "1394780",
    "end": "1400100"
  },
  {
    "text": "do we know what we test uh there were",
    "start": "1400100",
    "end": "1405799"
  },
  {
    "text": "Unwritten assumptions done long time time ago that",
    "start": "1405799",
    "end": "1410960"
  },
  {
    "text": "are technically correct but no one wrote them down",
    "start": "1410960",
    "end": "1418220"
  },
  {
    "text": "and we discovered properties like renewability or what's being renewable",
    "start": "1418220",
    "end": "1424520"
  },
  {
    "text": "which means that kubernetes supports bookmarks and it it uses it to save progress",
    "start": "1424520",
    "end": "1434419"
  },
  {
    "text": "but if it's those those safe or bookmarks to be sent",
    "start": "1434419",
    "end": "1440440"
  },
  {
    "text": "when they are sent they need to guarantee that all the events before the",
    "start": "1440440",
    "end": "1445460"
  },
  {
    "text": "bookmark were sent and if not kubernetes will start from incorrect",
    "start": "1445460",
    "end": "1452780"
  },
  {
    "text": "point it will go either far forward or far far before",
    "start": "1452780",
    "end": "1458419"
  },
  {
    "text": "instead of the current last change and we discovered that it was broken in",
    "start": "1458419",
    "end": "1463880"
  },
  {
    "text": "at CD in some cases so what are the results",
    "start": "1463880",
    "end": "1470440"
  },
  {
    "text": "[Music] and we found as as of today free issues",
    "start": "1470440",
    "end": "1477860"
  },
  {
    "text": "uh mostly I mean related to different parts surprisingly even their their much rarer",
    "start": "1477860",
    "end": "1488360"
  },
  {
    "text": "or there was one behavior that no one ever tested which is a HD recovering its",
    "start": "1488360",
    "end": "1494780"
  },
  {
    "text": "state from other members and we found out that watch can travel back in time",
    "start": "1494780",
    "end": "1500980"
  },
  {
    "text": "we found yeah duplicated events we found",
    "start": "1501140",
    "end": "1506600"
  },
  {
    "text": "that diffract can cause an inconsistency it was just really really rare",
    "start": "1506600",
    "end": "1514580"
  },
  {
    "text": "so what we will be doing next",
    "start": "1514580",
    "end": "1520460"
  },
  {
    "text": "or what are what I'm working on what is the next steps for us like we we had the results",
    "start": "1520460",
    "end": "1526640"
  },
  {
    "text": "how what what we should do next we need to codify for the whole contract like we",
    "start": "1526640",
    "end": "1532159"
  },
  {
    "text": "just touched it like it it's not nearly done",
    "start": "1532159",
    "end": "1538778"
  },
  {
    "text": "and we need to make that tests or failure injections much more much more advanced",
    "start": "1540020",
    "end": "1546860"
  },
  {
    "text": "like we don't test uh disk crash disk disconnection or",
    "start": "1546860",
    "end": "1552799"
  },
  {
    "text": "basically yeah this mostly this crashing and",
    "start": "1552799",
    "end": "1558200"
  },
  {
    "text": "kernel losing the data that was unsynced um we are already working on bolt which",
    "start": "1558200",
    "end": "1566360"
  },
  {
    "text": "is the embedded key value star to to uh to have the same test suit or same",
    "start": "1566360",
    "end": "1574700"
  },
  {
    "text": "approach for testing to find really really obscure failures that look like",
    "start": "1574700",
    "end": "1580039"
  },
  {
    "text": "style and data Corruptions which means it's just problem that most people don't",
    "start": "1580039",
    "end": "1585860"
  },
  {
    "text": "discover and",
    "start": "1585860",
    "end": "1592400"
  },
  {
    "text": "uh yeah we can also validate the history in we can use the history validation in",
    "start": "1592400",
    "end": "1599299"
  },
  {
    "text": "every tests because every test that makes it is an",
    "start": "1599299",
    "end": "1604400"
  },
  {
    "text": "API test so it tests goes goes to API or end-to-end test go to API",
    "start": "1604400",
    "end": "1610340"
  },
  {
    "text": "is doing some operations generating some history we can validate the history that",
    "start": "1610340",
    "end": "1616159"
  },
  {
    "text": "the tests are correct we can check if our tests are like correct or not",
    "start": "1616159",
    "end": "1623080"
  },
  {
    "text": "um and the last thing when we have contract and fully tested on SD we can bring this",
    "start": "1623299",
    "end": "1629000"
  },
  {
    "text": "contract Implement its in the modern implemented in the model we have a model",
    "start": "1629000",
    "end": "1635539"
  },
  {
    "text": "that fully implements the contract maybe with some changes to make it more efficient we can move it to kubernetes",
    "start": "1635539",
    "end": "1641900"
  },
  {
    "text": "and have kubernetes verified back what is happening and thus speeding up",
    "start": "1641900",
    "end": "1647299"
  },
  {
    "text": "kubernetes testing much more because it doesn't need those heads start full hcd",
    "start": "1647299",
    "end": "1652400"
  },
  {
    "text": "instance it can be just a process level test",
    "start": "1652400",
    "end": "1658880"
  },
  {
    "text": "so let's see how it works in practice",
    "start": "1659000",
    "end": "1663640"
  },
  {
    "text": "so here I have already command that I can run which basically",
    "start": "1664580",
    "end": "1671440"
  },
  {
    "text": "does three things as described and it's so fast",
    "start": "1671440",
    "end": "1677179"
  },
  {
    "text": "so what is happening here is we are starting HD server we are checking its",
    "start": "1677179",
    "end": "1684679"
  },
  {
    "text": "Health we inject the failed point we inject the fail point which is uh",
    "start": "1684679",
    "end": "1691279"
  },
  {
    "text": "which is a maintainer put or maintainers put in",
    "start": "1691279",
    "end": "1697039"
  },
  {
    "text": "the HD code base failed points first in the code base or comments that work as Five Points in HD",
    "start": "1697039",
    "end": "1704299"
  },
  {
    "text": "codebase that can be later that are in critical points and can be later used by",
    "start": "1704299",
    "end": "1711260"
  },
  {
    "text": "this test suit to with use of special Library they can be",
    "start": "1711260",
    "end": "1717020"
  },
  {
    "text": "used to say to hcd hey crash at this point and we have many of those",
    "start": "1717020",
    "end": "1724700"
  },
  {
    "text": "and we then do a strict validation is the like if we set up the the fail Point",
    "start": "1724700",
    "end": "1730880"
  },
  {
    "text": "exact here in wrapped before saved which is a raft someplace when we call draft",
    "start": "1730880",
    "end": "1738380"
  },
  {
    "text": "we expect it to exit and if it doesn't exit the test also fails because we want to test that fail Pond worked so we we",
    "start": "1738380",
    "end": "1746000"
  },
  {
    "text": "should be strict here the member exited as expected",
    "start": "1746000",
    "end": "1752320"
  },
  {
    "text": "and this can be the recorded history we can text recorded history here to",
    "start": "1752419",
    "end": "1758500"
  },
  {
    "text": "2400 something operations and with some average traffic so we can",
    "start": "1758500",
    "end": "1765440"
  },
  {
    "text": "simulate and do require minimal traffic QPS so not only test log traffic like I",
    "start": "1765440",
    "end": "1771020"
  },
  {
    "text": "know playing around with that CD but also pretty verified that traffic that we are",
    "start": "1771020",
    "end": "1777020"
  },
  {
    "text": "getting is as high that we've seen in some cases",
    "start": "1777020",
    "end": "1782059"
  },
  {
    "text": "and then validate it and what the test does is says thus model is in not",
    "start": "1782059",
    "end": "1787580"
  },
  {
    "text": "linearizable which is incorrect or it means that there is a problem of hcd",
    "start": "1787580",
    "end": "1792919"
  },
  {
    "text": "here I specifically took I specifically specifically took an",
    "start": "1792919",
    "end": "1800659"
  },
  {
    "text": "existing issue an existing and hcd version that was vulnerable to this issue and I reproduced it with one",
    "start": "1800659",
    "end": "1808340"
  },
  {
    "text": "command and it took five seconds at the end of the test the test reports",
    "start": "1808340",
    "end": "1815120"
  },
  {
    "text": "all the important information that anyone can use to validate is it the",
    "start": "1815120",
    "end": "1820520"
  },
  {
    "text": "test is the problem with hcd or is it problem with the test suit or the model",
    "start": "1820520",
    "end": "1827360"
  },
  {
    "text": "so we can take this URL that is here",
    "start": "1827360",
    "end": "1832720"
  },
  {
    "text": "I have it prepared but for demo sake I will refresh it and we get this",
    "start": "1836679",
    "end": "1841940"
  },
  {
    "text": "visualization we can click drop to jump to First error and we see that",
    "start": "1841940",
    "end": "1847360"
  },
  {
    "text": "visualization has reported an issue here we are using on the top on the the name",
    "start": "1847360",
    "end": "1855140"
  },
  {
    "text": "of the page is porcupine this is the linear linearization Checker that we are using and gives us",
    "start": "1855140",
    "end": "1862159"
  },
  {
    "text": "this this HTML file and it shows the durability issue I described which is",
    "start": "1862159",
    "end": "1869659"
  },
  {
    "text": "there was a put request that sets revision 601 next",
    "start": "1869659",
    "end": "1876140"
  },
  {
    "text": "there is a next put request set revision 600 true and then",
    "start": "1876140",
    "end": "1881659"
  },
  {
    "text": "it was never persisted so all the following requests have a revision that",
    "start": "1881659",
    "end": "1887779"
  },
  {
    "text": "is lower than that's what client recorded which means we the model",
    "start": "1887779",
    "end": "1894380"
  },
  {
    "text": "doesn't allow us to connect those to find any connection to the next operation and proves that and proves",
    "start": "1894380",
    "end": "1903020"
  },
  {
    "text": "that or gives the proof that a human can verify and read that there is a problem",
    "start": "1903020",
    "end": "1909620"
  },
  {
    "text": "okay so when you should use a model based",
    "start": "1909620",
    "end": "1918020"
  },
  {
    "text": "testing we can validate it's great for testing generic approaches to to correctness",
    "start": "1918020",
    "end": "1925940"
  },
  {
    "text": "it separates validation phase from the",
    "start": "1925940",
    "end": "1931720"
  },
  {
    "text": "execution phase which means we can generate the report verified that the operations or the",
    "start": "1931720",
    "end": "1939559"
  },
  {
    "text": "model we can check is the modeling correct or that CD if the XD is incorrect we have a proof if it's the",
    "start": "1939559",
    "end": "1946220"
  },
  {
    "text": "model we can fix the model and we run it on the same history we will it should work like we fix the issue we can verify",
    "start": "1946220",
    "end": "1953240"
  },
  {
    "text": "that we fix the issue and as I mentioned model is very usable so we can plug it in any one that wants HD fast",
    "start": "1953240",
    "end": "1962480"
  },
  {
    "text": "of course it no no not everyone needs 100 correctness",
    "start": "1962480",
    "end": "1967580"
  },
  {
    "text": "I mean I hope you do but I don't know",
    "start": "1967580",
    "end": "1973419"
  },
  {
    "text": "um model I simplified the model it can get",
    "start": "1973520",
    "end": "1978620"
  },
  {
    "text": "really complicated mainly because it needs to assume that",
    "start": "1978620",
    "end": "1984440"
  },
  {
    "text": "client can observe a data loss and this data loss not necessarily is lost",
    "start": "1984440",
    "end": "1990740"
  },
  {
    "text": "server can crash before it responds the client even though it persisted the response this means the as the next",
    "start": "1990740",
    "end": "1998840"
  },
  {
    "text": "Point mentions it it's an NP complete problem we the the state increases",
    "start": "1998840",
    "end": "2007000"
  },
  {
    "text": "exponentially or validating linearizability cost of this increases exponentially",
    "start": "2007000",
    "end": "2015039"
  },
  {
    "text": "making the test pretty fragile if you have any any bugs or any an optimization",
    "start": "2015039",
    "end": "2021760"
  },
  {
    "text": "so it's it's not a like one tool for everything",
    "start": "2021760",
    "end": "2027340"
  },
  {
    "text": "so if anything of anything in this presentation make you interested in the",
    "start": "2027340",
    "end": "2034000"
  },
  {
    "text": "topic we this is public you can go to HD code read read it and contribute new fail",
    "start": "2034000",
    "end": "2041380"
  },
  {
    "text": "points at the end maybe I would think about generalizing it so not only at CD it can can be validated",
    "start": "2041380",
    "end": "2049859"
  },
  {
    "text": "um that's the end of presentation if you want to give me any feedback you're welcome to take this make a screenshot",
    "start": "2050740",
    "end": "2058060"
  },
  {
    "text": "and send it whatever and let me know that's",
    "start": "2058060",
    "end": "2063158"
  },
  {
    "text": "that's all thank you [Applause]",
    "start": "2063159",
    "end": "2074359"
  },
  {
    "text": "do you have do we have any questions",
    "start": "2075280",
    "end": "2079440"
  },
  {
    "text": "ing question what's the maximum size you would test actually against a number of",
    "start": "2085980",
    "end": "2091060"
  },
  {
    "text": "objects what's that size the 10 000 it's a hundred thousands more",
    "start": "2091060",
    "end": "2099160"
  },
  {
    "text": "the size doesn't like really like for the robustness that it doesn't really matter it's about QPS so if you have SSD",
    "start": "2099160",
    "end": "2107260"
  },
  {
    "text": "and it can like the mark UPS you'd simulate you the higher the probability",
    "start": "2107260",
    "end": "2112599"
  },
  {
    "text": "you will find the issue so it's I mean the faster like you can test even in",
    "start": "2112599",
    "end": "2118359"
  },
  {
    "text": "memory like you don't need to be persistent assuming that memory is you trust the member that this person so it",
    "start": "2118359",
    "end": "2124660"
  },
  {
    "text": "could be really really fast but I don't care about how because it could be fully certain memory to make that test faster",
    "start": "2124660",
    "end": "2131380"
  },
  {
    "text": "okay thank you",
    "start": "2131380",
    "end": "2134519"
  },
  {
    "text": "oh the mic the mic is on this side so if you have questions it would be faster",
    "start": "2140500",
    "end": "2146520"
  },
  {
    "text": "yeah oh okay sir hi Mark thank you so much I was just wondering whether you",
    "start": "2146520",
    "end": "2153040"
  },
  {
    "text": "have already any plan like for testing Network latency and things like that because I see that right now you're",
    "start": "2153040",
    "end": "2159040"
  },
  {
    "text": "using like these fall points that you inject into the code base but what about like testing these other like external",
    "start": "2159040",
    "end": "2164500"
  },
  {
    "text": "conditions which are not necessarily like in the code like crushes we are testing latency I mean latency is not an",
    "start": "2164500",
    "end": "2171400"
  },
  {
    "text": "interesting part because raft is validated to be correct but an interesting point we found",
    "start": "2171400",
    "end": "2178980"
  },
  {
    "text": "problems related to it's more behaving like data manipulation because if the packet",
    "start": "2178980",
    "end": "2186160"
  },
  {
    "text": "is halfly cast cut you cannot detect that if the packet matches the block and",
    "start": "2186160",
    "end": "2192160"
  },
  {
    "text": "then you lose one block because it's Json you could it's correct but there is no right like",
    "start": "2192160",
    "end": "2199540"
  },
  {
    "text": "the missing the case I expect this is the case will be missing one right like you could cut if you there's probably",
    "start": "2199540",
    "end": "2206680"
  },
  {
    "text": "that it cuts traffic is cut in a way that allows requests to be missing and",
    "start": "2206680",
    "end": "2212380"
  },
  {
    "text": "rap doesn't account for that do you have any specific techniques",
    "start": "2212380",
    "end": "2217500"
  },
  {
    "text": "we have a like for functional tests they implemented already a proxy with very",
    "start": "2217500",
    "end": "2222700"
  },
  {
    "text": "naive implementation it's not great and we",
    "start": "2222700",
    "end": "2227740"
  },
  {
    "text": "yeah I I'm there is something that I would want to improve to something generic like there is a custom solution",
    "start": "2227740",
    "end": "2233260"
  },
  {
    "text": "which is not very Advanced but yeah we are simulating Network partition delaying and and uh",
    "start": "2233260",
    "end": "2241839"
  },
  {
    "text": "packets dropped uh hello",
    "start": "2241839",
    "end": "2248260"
  },
  {
    "text": "thank you a lot for your speech uh there is a question uh Veris was slight which",
    "start": "2248260",
    "end": "2255160"
  },
  {
    "text": "told us about Al known AWS setup was broken",
    "start": "2255160",
    "end": "2262240"
  },
  {
    "text": "and the question is uh is there a more stable setup configuration or something",
    "start": "2262240",
    "end": "2269079"
  },
  {
    "text": "else I think so I we needed to fix or I had a",
    "start": "2269079",
    "end": "2276520"
  },
  {
    "text": "contributor and that was trying to use Docker and they apparently made because",
    "start": "2276520",
    "end": "2283660"
  },
  {
    "text": "they knew no closer they fixed some parts of it and apparently they were",
    "start": "2283660",
    "end": "2288820"
  },
  {
    "text": "able to get results but because they change their projects I",
    "start": "2288820",
    "end": "2295300"
  },
  {
    "text": "don't know if they they've left the like hcd community so I don't know if they contributed the",
    "start": "2295300",
    "end": "2302440"
  },
  {
    "text": "changes in like Jepsen and infrastructure is set up back to the",
    "start": "2302440",
    "end": "2307540"
  },
  {
    "text": "docker so and like AWS apparently worked great but nothing else",
    "start": "2307540",
    "end": "2313839"
  },
  {
    "text": "like it's proven to",
    "start": "2313839",
    "end": "2317220"
  },
  {
    "text": "however um I'd just like to ask about um performance of LCD with splitting out",
    "start": "2324640",
    "end": "2330820"
  },
  {
    "text": "we running um an on-prem where uh",
    "start": "2330820",
    "end": "2336780"
  },
  {
    "text": "is running on one disk and we've been advised to look at splitting up the",
    "start": "2337200",
    "end": "2344200"
  },
  {
    "text": "world and data into separate drives because it's all VMS we can't exactly split that onto ssds what other",
    "start": "2344200",
    "end": "2351520"
  },
  {
    "text": "performance tuning tips are there I I'm I my most of my work is incorrectness I",
    "start": "2351520",
    "end": "2359440"
  },
  {
    "text": "cannot say about performance there is a talk on kubecon about tuning at CD I would encourage to go there",
    "start": "2359440",
    "end": "2366579"
  },
  {
    "text": "I mean I could give you examples from Cooper so what I give is",
    "start": "2366579",
    "end": "2372040"
  },
  {
    "text": "usually look at kubernetes scalability tests they support 5000 nodes if someone",
    "start": "2372040",
    "end": "2378280"
  },
  {
    "text": "claims that hcd is in performance they haven't even read open source code that",
    "start": "2378280",
    "end": "2383859"
  },
  {
    "text": "gives you ready at CD configuration that is like the kubernetes",
    "start": "2383859",
    "end": "2389619"
  },
  {
    "text": "guarantees 5000 nodes PR release will be not cut if it doesn't separate 5000 notes like if you need more",
    "start": "2389619",
    "end": "2397420"
  },
  {
    "text": "we can ask kubernetes but it's it is it's ready configuration",
    "start": "2397420",
    "end": "2402820"
  },
  {
    "text": "there is no magic like as some yeah",
    "start": "2402820",
    "end": "2408119"
  },
  {
    "text": "um sqlite is famous for having one of the most comprehensive",
    "start": "2410020",
    "end": "2415079"
  },
  {
    "text": "testing for correctness uh CI I don't know I wonder if you looked at like the",
    "start": "2415079",
    "end": "2422200"
  },
  {
    "text": "difference in practice if you could get inspiration from that or if it's too different",
    "start": "2422200",
    "end": "2428099"
  },
  {
    "text": "uh it's I read the call or I watched the presentation by Kyle I read some code I",
    "start": "2428940",
    "end": "2436300"
  },
  {
    "text": "understood some part of it collecting history is the same what is",
    "start": "2436300",
    "end": "2441820"
  },
  {
    "text": "done or what traffic is sent and what is verified is a little bit different it's more advanced it's like even in some",
    "start": "2441820",
    "end": "2449859"
  },
  {
    "text": "ways more advanced because it does it's not as fragile as what I the model best tasting I described it more validates",
    "start": "2449859",
    "end": "2457740"
  },
  {
    "text": "let's say for The Limited model it validates some",
    "start": "2457740",
    "end": "2463260"
  },
  {
    "text": "distributed system properties and if it can because of limited traffic type",
    "start": "2463260",
    "end": "2469900"
  },
  {
    "text": "or limited operation I can like send you to the what on the page of LCD or",
    "start": "2469900",
    "end": "2475359"
  },
  {
    "text": "reports from HDD The Limited traffic allows you to make some assumptions about like setting a variable or like or",
    "start": "2475359",
    "end": "2484119"
  },
  {
    "text": "append only traffic can gives you give you properties that you can verify that if you there is append on the operations",
    "start": "2484119",
    "end": "2490900"
  },
  {
    "text": "it means that it should always grow and some traffic suffix properties",
    "start": "2490900",
    "end": "2498280"
  },
  {
    "text": "um but outside of that it's much more and it's",
    "start": "2498280",
    "end": "2503320"
  },
  {
    "text": "or it's more like more advanced and more more reliable but I don't know if it's",
    "start": "2503320",
    "end": "2509380"
  },
  {
    "text": "like yeah and that's all I'm mostly",
    "start": "2509380",
    "end": "2514420"
  },
  {
    "text": "okay thank you if you have any questions I can still answer them here",
    "start": "2514420",
    "end": "2521039"
  }
]