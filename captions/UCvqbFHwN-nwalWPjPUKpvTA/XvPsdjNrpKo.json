[
  {
    "text": "hello everyone glad to see so many people here glad you make it I made it also here we",
    "start": "179",
    "end": "7080"
  },
  {
    "text": "made uh yeah it was close to not making it here we got stuck in the elevator for a second and then it worked again",
    "start": "7080",
    "end": "15360"
  },
  {
    "text": "okay um for today we have a few steps prepared um in case you have",
    "start": "15360",
    "end": "21180"
  },
  {
    "text": "any questions during the tutorial uh just wave raise your hand and then one of those beautiful people will come by",
    "start": "21180",
    "end": "27539"
  },
  {
    "text": "and help you um for those who are virtual here you",
    "start": "27539",
    "end": "32578"
  },
  {
    "text": "can just reach us on slack and just ping Us in the channel um so what we do first is we will",
    "start": "32579",
    "end": "39780"
  },
  {
    "text": "quickly wrap up what is observability then we um continue with the open",
    "start": "39780",
    "end": "45480"
  },
  {
    "text": "Telemetry project and then we just start with the tutorial",
    "start": "45480",
    "end": "50760"
  },
  {
    "text": "oh and the prerequisites so um in case you want to participate",
    "start": "50760",
    "end": "56640"
  },
  {
    "text": "you need to have a terminal have access to a kubernetes cluster and um",
    "start": "56640",
    "end": "62760"
  },
  {
    "text": "yeah we talk our apartment to run some containers if you have no",
    "start": "62760",
    "end": "68640"
  },
  {
    "text": "um access to not access to kubernetes Cluster you can use kind we have also uh",
    "start": "68640",
    "end": "74580"
  },
  {
    "text": "described in the tutorial steps how this works so we can set it up all together",
    "start": "74580",
    "end": "80180"
  },
  {
    "text": "um all right so what is observability um observability is basically",
    "start": "80520",
    "end": "85860"
  },
  {
    "text": "or when people speak about observability they want to know that no things about the system they don't really know which",
    "start": "85860",
    "end": "92340"
  },
  {
    "text": "me what does it mean it means we have a",
    "start": "92340",
    "end": "96859"
  },
  {
    "text": "I'm a bit stuck um it's basically when",
    "start": "98119",
    "end": "104100"
  },
  {
    "text": "we have our the",
    "start": "104100",
    "end": "110040"
  },
  {
    "text": "probably you can explain it for me",
    "start": "110040",
    "end": "114619"
  },
  {
    "text": "yes yes sorry so yeah the observability is about understanding our applications",
    "start": "115079",
    "end": "121079"
  },
  {
    "text": "right and we do that by looking at certain data which are either metrics",
    "start": "121079",
    "end": "127320"
  },
  {
    "text": "logs and traces and this tutorial we will try to use all of them on",
    "start": "127320",
    "end": "133020"
  },
  {
    "text": "kubernetes by using the open Telemetry technology yeah right so the thing is usually",
    "start": "133020",
    "end": "139500"
  },
  {
    "text": "people come with different solutions and then it's hard to correlate them but open Telemetry can help us with this so",
    "start": "139500",
    "end": "145680"
  },
  {
    "text": "he who is here a bit familiar with open Telemetry so he played with it or something like this",
    "start": "145680",
    "end": "151620"
  },
  {
    "text": "it's not too many people so who used it in production",
    "start": "151620",
    "end": "156800"
  },
  {
    "text": "it's probably the people who also played with it okay so um open Telemetry itself is an",
    "start": "157020",
    "end": "163620"
  },
  {
    "text": "open source project Su or well most of you probably know it's from the cncf and",
    "start": "163620",
    "end": "168720"
  },
  {
    "text": "it's when your neutral approach to ship Telemetry data it is a bit an overloaded",
    "start": "168720",
    "end": "174239"
  },
  {
    "text": "term it comes with a specification an API an SDK a data model",
    "start": "174239",
    "end": "179760"
  },
  {
    "text": "a lot of other tools to generate traces to Auto instrumentate your applications",
    "start": "179760",
    "end": "185160"
  },
  {
    "text": "and a collector and this collector is the thing we will speak about first",
    "start": "185160",
    "end": "191819"
  },
  {
    "text": "um yeah you can run this collector on or if the entire things on kubernetes or on",
    "start": "191819",
    "end": "198239"
  },
  {
    "text": "openshift you can run it on your PC itself and that's what we will do now so we go",
    "start": "198239",
    "end": "205500"
  },
  {
    "text": "first to the open television collector figure out how the configuration Works what we can do with it then probably",
    "start": "205500",
    "end": "211440"
  },
  {
    "text": "will show you how the operator works and then Severin and power will go and",
    "start": "211440",
    "end": "216599"
  },
  {
    "text": "continue with an instrumentation for it they will also show you the auto instrumentation next Christina goes and",
    "start": "216599",
    "end": "223799"
  },
  {
    "text": "shows how we can integrate with using the open Telemetry operator",
    "start": "223799",
    "end": "228840"
  },
  {
    "text": "with Premier toys especially with the CRS and then finally Yuri comes and",
    "start": "228840",
    "end": "235379"
  },
  {
    "text": "shows us how it works with locks so how we can get logs from our nodes and yeah",
    "start": "235379",
    "end": "241980"
  },
  {
    "text": "what's next so you need to open up this link it will lead you to a repository from Power",
    "start": "241980",
    "end": "248760"
  },
  {
    "text": "and there we will find all the instructions should I let it there for a moment so",
    "start": "248760",
    "end": "254580"
  },
  {
    "text": "that everyone can open it",
    "start": "254580",
    "end": "257959"
  },
  {
    "text": "or you can go to my GitHub account uh on the top well you don't see the URL but if you",
    "start": "270600",
    "end": "276900"
  },
  {
    "text": "scroll up then uh scroll up the other way",
    "start": "276900",
    "end": "282360"
  },
  {
    "text": "yeah this one it's it's pinned uh so you will see it",
    "start": "282360",
    "end": "287940"
  },
  {
    "text": "and we will follow the readmiss that are in this Repository",
    "start": "287940",
    "end": "293099"
  },
  {
    "text": "okay so what we will find here is aside from the abstract and the slides",
    "start": "295560",
    "end": "300660"
  },
  {
    "text": "the prerequisites so let's jump on setting up a cluster I hope most of you have installed Cube",
    "start": "300660",
    "end": "307620"
  },
  {
    "text": "CTL and in case you don't have kind which that's what we use here you can",
    "start": "307620",
    "end": "312960"
  },
  {
    "text": "quickly install it if you have go otherwise you can also download the binary over here",
    "start": "312960",
    "end": "318180"
  },
  {
    "text": "and um let's see if I can use a MacBook",
    "start": "318180",
    "end": "324440"
  },
  {
    "text": "so this will set up our cluster",
    "start": "329340",
    "end": "333139"
  },
  {
    "text": "and then you can type for example Cube CTL get nodes to just see if it's up and running",
    "start": "352919",
    "end": "358680"
  },
  {
    "text": "um here we see the node is not ready yet but now it is",
    "start": "358680",
    "end": "366080"
  },
  {
    "text": "okay um later in case you don't use the containerized version of telemetry gen",
    "start": "368400",
    "end": "375419"
  },
  {
    "text": "to generate some Trace data you can also use",
    "start": "375419",
    "end": "381360"
  },
  {
    "text": "and you should install it um via go but it's not required",
    "start": "381360",
    "end": "388520"
  },
  {
    "text": "so next we need to set up a few things for the admission Web book of the open Telemetry operator",
    "start": "390240",
    "end": "395460"
  },
  {
    "text": "we need to install cert manager",
    "start": "395460",
    "end": "400580"
  },
  {
    "text": "oops",
    "start": "400620",
    "end": "403160"
  },
  {
    "text": "um so Bene is a Linux user and this is a MacBook",
    "start": "407639",
    "end": "413360"
  },
  {
    "text": "believe me it's way quicker than it was when we tested it yesterday he managed to broke it even",
    "start": "415620",
    "end": "422960"
  },
  {
    "text": "monsie right okay and then Ctrl V",
    "start": "423780",
    "end": "430940"
  },
  {
    "text": "command V",
    "start": "431280",
    "end": "433940"
  },
  {
    "text": "once right then yeah",
    "start": "436380",
    "end": "441479"
  },
  {
    "text": "hey [Applause]",
    "start": "441479",
    "end": "449580"
  },
  {
    "text": "okay so next we can deploy an observability backend we just glued something together it's um consists out",
    "start": "449580",
    "end": "456780"
  },
  {
    "text": "of me and mere Loki and tempo",
    "start": "456780",
    "end": "460280"
  },
  {
    "text": "it worked okay so and now we should be able to see",
    "start": "462780",
    "end": "468539"
  },
  {
    "text": "in grafana dashboard which is also directly pre-configured I will open up a new tab",
    "start": "468539",
    "end": "474860"
  },
  {
    "text": "not this one here I recommend opening a new tab so that",
    "start": "474900",
    "end": "481680"
  },
  {
    "text": "you don't um I need to forward the ports always",
    "start": "481680",
    "end": "489319"
  },
  {
    "text": "I guess it's there now pending",
    "start": "493800",
    "end": "501379"
  },
  {
    "text": "okay so the back end deploys a couple of grafana projects to to store and visual",
    "start": "510720",
    "end": "517500"
  },
  {
    "text": "to store Trace data metric data and logs and so it takes them some time to to get",
    "start": "517500",
    "end": "524279"
  },
  {
    "text": "it up and running",
    "start": "524279",
    "end": "527120"
  },
  {
    "text": "oops it's not only the MacBook it's also the",
    "start": "532800",
    "end": "538740"
  },
  {
    "text": "keyboard layout",
    "start": "538740",
    "end": "541339"
  },
  {
    "text": "okay so we have no data but it's up and running",
    "start": "547019",
    "end": "552260"
  },
  {
    "text": "okay aside from that um let's see if I can get it on the screen",
    "start": "553260",
    "end": "558600"
  },
  {
    "text": "so that's an image you will find when you go to the open Telemetry collector",
    "start": "558600",
    "end": "563959"
  },
  {
    "text": "documentation and um it displays basically the architecture",
    "start": "563959",
    "end": "570420"
  },
  {
    "text": "of it and we can see it has three major parts on the left we have the receiving side which is here The otlp Collector",
    "start": "570420",
    "end": "577200"
  },
  {
    "text": "the eggo collector and the parameters receiver and they are slightly different for",
    "start": "577200",
    "end": "583260"
  },
  {
    "text": "example The otop Collector is a passive one it waits for messages and listens on a",
    "start": "583260",
    "end": "589560"
  },
  {
    "text": "specific port and the parameters one is an active one which just scrapes data um that's basically the types you will",
    "start": "589560",
    "end": "595920"
  },
  {
    "text": "get there and next we have the processors the processors are then used",
    "start": "595920",
    "end": "601019"
  },
  {
    "text": "to filter data enrich your data with the kubernetes attributes you will see it afterwards",
    "start": "601019",
    "end": "606720"
  },
  {
    "text": "and finally we can then export the data to different data stores that's what we also do today we send data to Miami we",
    "start": "606720",
    "end": "613260"
  },
  {
    "text": "send data to low key and they all use different exporting formats there are a few more components you will",
    "start": "613260",
    "end": "619800"
  },
  {
    "text": "find when you go to the documentation for example extensions those are used",
    "start": "619800",
    "end": "624839"
  },
  {
    "text": "for handling identification or connectors which are used to for example generate traces uh metrics out of traces",
    "start": "624839",
    "end": "633600"
  },
  {
    "text": "and yeah by default the open temperature collector is available in the docker",
    "start": "633600",
    "end": "641580"
  },
  {
    "text": "Repository it's maintained by the open Telemetry core maintainer team and for concrete",
    "start": "641580",
    "end": "648779"
  },
  {
    "text": "there is basically everything included you will find in a country Repository um in case you don't",
    "start": "648779",
    "end": "655560"
  },
  {
    "text": "uh the core thing is not sufficient for you and you don't you shouldn't probably use",
    "start": "655560",
    "end": "661019"
  },
  {
    "text": "the contract one because it includes all the things you don't need you can also build your own collector",
    "start": "661019",
    "end": "666300"
  },
  {
    "text": "there is the open tele to be open Telemetry collector Builder available",
    "start": "666300",
    "end": "671519"
  },
  {
    "text": "and this is a manifest how it looks like so we can just put together what we would like to have in our distribution",
    "start": "671519",
    "end": "677100"
  },
  {
    "text": "and then go ahead finally there is a configuration that's",
    "start": "677100",
    "end": "682800"
  },
  {
    "text": "what we have seen on top so we it's divided into these three parts we have the receiving part here it's accepts",
    "start": "682800",
    "end": "688920"
  },
  {
    "text": "grpc on a specific endpoint which is um yeah the default one I just placed it",
    "start": "688920",
    "end": "695279"
  },
  {
    "text": "there so that you see which board is used and um then we use a batch processor to just say save some overhead",
    "start": "695279",
    "end": "702720"
  },
  {
    "text": "and the logging exporter to see on the console when Telemetry data is arriving",
    "start": "702720",
    "end": "708120"
  },
  {
    "text": "finally we need to specify pipelines this is basically which receiver",
    "start": "708120",
    "end": "714180"
  },
  {
    "text": "um gets Tel interview data and where should it go so we can have different database destinations we can have",
    "start": "714180",
    "end": "719940"
  },
  {
    "text": "different kinds of databases what we have later on um so you can try and get this",
    "start": "719940",
    "end": "726959"
  },
  {
    "text": "configuration using the scrolling or just copy it and then running a collector is also",
    "start": "726959",
    "end": "733740"
  },
  {
    "text": "quite easy we have this Docker command here so we just run it locally um it forwards the ports",
    "start": "733740",
    "end": "740700"
  },
  {
    "text": "gets the collector configuration mounted in and then just sets it as a parameter",
    "start": "740700",
    "end": "747000"
  },
  {
    "text": "so how does it look like when such a thing runs let me open a new terminal",
    "start": "747000",
    "end": "754040"
  },
  {
    "text": "I hope I'm in the right photo no I'm not just download this thing",
    "start": "756300",
    "end": "764120"
  },
  {
    "text": "directory",
    "start": "770639",
    "end": "773420"
  },
  {
    "text": "so now here should be the collector configuration this looks good",
    "start": "783899",
    "end": "789980"
  },
  {
    "text": "and there it is so it shows us um the exporters are loaded",
    "start": "796560",
    "end": "801779"
  },
  {
    "text": "and now now it's waiting so next",
    "start": "801779",
    "end": "807620"
  },
  {
    "text": "we can generate some traces in case you installed it locally and you are not on a MacBook I think there is something",
    "start": "807720",
    "end": "812880"
  },
  {
    "text": "different you can create another container which then",
    "start": "812880",
    "end": "817980"
  },
  {
    "text": "does the same what we see here on top calling Telemetry gen setting what it should generate and send data there",
    "start": "817980",
    "end": "825720"
  },
  {
    "text": "so we just pick here traces",
    "start": "825720",
    "end": "829519"
  },
  {
    "text": "and this was Again The Collector",
    "start": "833579",
    "end": "838639"
  },
  {
    "text": "item it's like I picked metrics not traces",
    "start": "850200",
    "end": "856260"
  },
  {
    "text": "yeah but we know we see here the metrics arrive so in case we want to see",
    "start": "856260",
    "end": "861600"
  },
  {
    "text": "more details we can then just go up again in the configuration and change",
    "start": "861600",
    "end": "866760"
  },
  {
    "text": "the verbosity which is there somewhere um yeah that's so far it and now public",
    "start": "866760",
    "end": "873959"
  },
  {
    "text": "will show you how to get those things up and running on kubernetes yeah so so we started with the collector",
    "start": "873959",
    "end": "880199"
  },
  {
    "text": "to kind of show you how to use the collector locally to to play with it",
    "start": "880199",
    "end": "885360"
  },
  {
    "text": "because by playing with it locally you will get uh you can get it very quickly",
    "start": "885360",
    "end": "890820"
  },
  {
    "text": "up and running and you will see if your configuration is correct or not correct so if you are starting with the",
    "start": "890820",
    "end": "896760"
  },
  {
    "text": "collector I would definitely recommend you to first run it as a Docker container and then use the operator",
    "start": "896760",
    "end": "905839"
  },
  {
    "text": "um so for the operator [Music] first of all I would like to talk about like why what what is the kubernetes",
    "start": "906060",
    "end": "912300"
  },
  {
    "text": "operator right and um the kubernetes operator is a component that you can deploy to your",
    "start": "912300",
    "end": "918360"
  },
  {
    "text": "cluster and it will kind of expose new functionality to your to your users on",
    "start": "918360",
    "end": "925260"
  },
  {
    "text": "kubernetes right it's uh it's this functionality then is is exposed sorry as a custom resource definition",
    "start": "925260",
    "end": "932820"
  },
  {
    "text": "and it usually hides complexity of the application in this case the open Telemetry collector",
    "start": "932820",
    "end": "940339"
  },
  {
    "text": "and the operator usually supports kind of the the application upgrades it can",
    "start": "940339",
    "end": "946980"
  },
  {
    "text": "as well fix any kind of breaking changes of that application so let's say if the auto collector like kind of breaks the",
    "start": "946980",
    "end": "954420"
  },
  {
    "text": "configuration the operator is able to to fix that on your behalf and it's as well",
    "start": "954420",
    "end": "959940"
  },
  {
    "text": "kind of allows you to scale the application uh a bit more easier",
    "start": "959940",
    "end": "966120"
  },
  {
    "text": "the open Telemetry operator then kind of offers free or solves free",
    "start": "966120",
    "end": "972899"
  },
  {
    "text": "use cases it can deploy the open Telemetry collector right deploy provision and scale it up then it can",
    "start": "972899",
    "end": "979740"
  },
  {
    "text": "allow you to instrument your business applications on kubernetes there is",
    "start": "979740",
    "end": "985560"
  },
  {
    "text": "right now support for instrumenting java.net node.js and python",
    "start": "985560",
    "end": "991560"
  },
  {
    "text": "and last but not least it integrates with the Prometheus ecosystem it can read the Pod and service monitors",
    "start": "991560",
    "end": "999560"
  },
  {
    "text": "and distribute the scrape targets across deployed collectors",
    "start": "999560",
    "end": "1004940"
  },
  {
    "text": "uh we'll see that in the in the metrics section later",
    "start": "1004940",
    "end": "1010240"
  },
  {
    "text": "so for the crds that the auto operator kind of manages there are two of them the first one is for the collector and",
    "start": "1011120",
    "end": "1017420"
  },
  {
    "text": "the second one is for the instrumentation the operator itself uh it's a deployment",
    "start": "1017420",
    "end": "1023959"
  },
  {
    "text": "right we have to deploy to the cluster and we have to create the crds as well",
    "start": "1023959",
    "end": "1029980"
  },
  {
    "text": "we can deploy it by kind of uh creating or",
    "start": "1029980",
    "end": "1037418"
  },
  {
    "text": "applying the operator manifest files from the",
    "start": "1037419",
    "end": "1044900"
  },
  {
    "text": "open Telemetry operator release page or we can install the operator through the",
    "start": "1044900",
    "end": "1051740"
  },
  {
    "text": "operator Hub there is like an install button or on openshift there is directory operator Hub where you can",
    "start": "1051740",
    "end": "1057919"
  },
  {
    "text": "just type in I want to install the auto operator and just click a button",
    "start": "1057919",
    "end": "1064059"
  },
  {
    "text": "the auto operator uses this thread manager that we already installed",
    "start": "1064340",
    "end": "1071260"
  },
  {
    "text": "and so we're gonna just install the operator the third major step you can",
    "start": "1071480",
    "end": "1077000"
  },
  {
    "text": "skip I'm not a Mac User either so I have to figure out how to change uh to terminal",
    "start": "1077000",
    "end": "1085659"
  },
  {
    "text": "how do I call this command one",
    "start": "1086059",
    "end": "1091520"
  },
  {
    "text": "okay so let's",
    "start": "1091520",
    "end": "1097720"
  },
  {
    "text": "okay it seems it's there and we're gonna check the installation by getting the",
    "start": "1097880",
    "end": "1103760"
  },
  {
    "text": "pods from the operator system namespace this is the namespace where the operator",
    "start": "1103760",
    "end": "1109460"
  },
  {
    "text": "is installed",
    "start": "1109460",
    "end": "1112480"
  },
  {
    "text": "okay it's up and running control one again",
    "start": "1114740",
    "end": "1119080"
  },
  {
    "text": "how do I kill this Ctrl C a Ctrl c not command C okay",
    "start": "1119840",
    "end": "1128380"
  },
  {
    "text": "uh okay so and now I would like to speak about the The Collector crd and then",
    "start": "1129039",
    "end": "1135500"
  },
  {
    "text": "about the instrumentation crd uh so what you can see here is the collector CR one",
    "start": "1135500",
    "end": "1142640"
  },
  {
    "text": "kind of instance of the crd and there's a couple of configuration options that you can set",
    "start": "1142640",
    "end": "1148220"
  },
  {
    "text": "the most important one is the config and that's the place where you can put the",
    "start": "1148220",
    "end": "1153620"
  },
  {
    "text": "entire collector configuration that we saw from the you know the step that Banner showed us",
    "start": "1153620",
    "end": "1159860"
  },
  {
    "text": "um then there is config for the image and this is the place where you can",
    "start": "1159860",
    "end": "1165200"
  },
  {
    "text": "configure your distribution of The Collector or use the contrib or the core one from the open Telemetry Upstream",
    "start": "1165200",
    "end": "1173240"
  },
  {
    "text": "then there is a mode where we say the operator how we want to deploy",
    "start": "1173240",
    "end": "1178760"
  },
  {
    "text": "The Collector if it should be a deployment state will set demon set or Sidecar",
    "start": "1178760",
    "end": "1183919"
  },
  {
    "text": "and there's configuration as well for sampling for sorry for auto scaling or exposing the collector outside the",
    "start": "1183919",
    "end": "1190520"
  },
  {
    "text": "cluster for the sidecar if we create a CR with",
    "start": "1190520",
    "end": "1195919"
  },
  {
    "text": "the mode sidecar the operator will not deploy The Collector",
    "start": "1195919",
    "end": "1201520"
  },
  {
    "text": "then you have to use The annotation and put it on the Pod spec of your",
    "start": "1201520",
    "end": "1207380"
  },
  {
    "text": "application and the operator will inject the collector's sidecar to your to your",
    "start": "1207380",
    "end": "1212900"
  },
  {
    "text": "application so now I'm gonna create a collector CR",
    "start": "1212900",
    "end": "1218860"
  },
  {
    "text": "so this is the um the spec",
    "start": "1218860",
    "end": "1224919"
  },
  {
    "text": "it's pretty much what we saw in the previous example but in this case",
    "start": "1225500",
    "end": "1231580"
  },
  {
    "text": "there's a couple of exporters we're going to export through otlp to to Tempo mimir and Loki",
    "start": "1231580",
    "end": "1242660"
  },
  {
    "text": "uh and you know Loki is a lock system so logs gonna go to Lockheed uh metrics to",
    "start": "1242660",
    "end": "1250280"
  },
  {
    "text": "mimir and traces to Tempo",
    "start": "1250280",
    "end": "1255640"
  },
  {
    "text": "okay",
    "start": "1257960",
    "end": "1260200"
  },
  {
    "text": "and now we're gonna check if the collector pot was created",
    "start": "1274039",
    "end": "1280120"
  },
  {
    "text": "and we see it's up and running",
    "start": "1280520",
    "end": "1283900"
  },
  {
    "text": "d the operator is on not only like creates",
    "start": "1290480",
    "end": "1297799"
  },
  {
    "text": "The Collector deployment but it well creates the the service for the for the",
    "start": "1297799",
    "end": "1303440"
  },
  {
    "text": "collector so now I'm gonna get the the service",
    "start": "1303440",
    "end": "1309100"
  },
  {
    "text": "and we see it exposes the otlp for receiving grpc and http",
    "start": "1314720",
    "end": "1321940"
  },
  {
    "text": "now we're gonna change the CR by using cubectl edit and we're going to add the",
    "start": "1323240",
    "end": "1328640"
  },
  {
    "text": "Jaeger receiver then we're going to apply the change and we're going to see that the operator will expose the Jager",
    "start": "1328640",
    "end": "1335539"
  },
  {
    "text": "ports on the service",
    "start": "1335539",
    "end": "1338440"
  },
  {
    "text": "that's a run command I don't know",
    "start": "1347179",
    "end": "1350860"
  },
  {
    "text": "oh no it's here okay",
    "start": "1353720",
    "end": "1356980"
  },
  {
    "text": "yeah I'm gonna enable just the grpc I'm not going to write all these Thrift protocols so I have added the",
    "start": "1376460",
    "end": "1384020"
  },
  {
    "text": "um Diego receiver to the receiver sections uh but by doing this it the the receiver",
    "start": "1384020",
    "end": "1390320"
  },
  {
    "text": "is not enabled I have to as well add it to the to the service section of the config",
    "start": "1390320",
    "end": "1396799"
  },
  {
    "text": "and to the traces pipeline because Jaeger Works only on traces",
    "start": "1396799",
    "end": "1403059"
  },
  {
    "text": "I'm going to save the config and we're gonna get the the services",
    "start": "1405140",
    "end": "1413860"
  },
  {
    "text": "of The Collector copied",
    "start": "1414559",
    "end": "1420880"
  },
  {
    "text": "foreign port for jaeger grpc",
    "start": "1426380",
    "end": "1434659"
  },
  {
    "text": "okay so this is one kind of functionality of the collector of the operator the The Collector CR and the",
    "start": "1434659",
    "end": "1440600"
  },
  {
    "text": "second CR is the instrumentation as I mentioned before the instrumentation allows you to instrument your your",
    "start": "1440600",
    "end": "1446780"
  },
  {
    "text": "business applications and this is the the CR how it looks like",
    "start": "1446780",
    "end": "1453260"
  },
  {
    "text": "the most important config option here is the exporter where we Define the otlp",
    "start": "1453260",
    "end": "1459020"
  },
  {
    "text": "endpoint of The Collector the operator doesn't automatically you know configure this for you you have to",
    "start": "1459020",
    "end": "1465440"
  },
  {
    "text": "create first The Collector and then set the the collect run point in the instrumentation",
    "start": "1465440",
    "end": "1471200"
  },
  {
    "text": "then there is configuration for the open Telemetry SDK",
    "start": "1471200",
    "end": "1476780"
  },
  {
    "text": "which is you know the sampling configuration or the propagators or you can as well configure the the",
    "start": "1476780",
    "end": "1484580"
  },
  {
    "text": "instrumentation to to set any kind of resource attributes we will see that",
    "start": "1484580",
    "end": "1489740"
  },
  {
    "text": "later in the demo okay and we're gonna use the more the",
    "start": "1489740",
    "end": "1495500"
  },
  {
    "text": "instrumentation CR in The Next Step uh but first Severin will start with the",
    "start": "1495500",
    "end": "1500900"
  },
  {
    "text": "manual instrumentation so now we're gonna be instrumenting the",
    "start": "1500900",
    "end": "1506000"
  },
  {
    "text": "application uh we're gonna use the manual instrumentation and later the auto instrumentation so you see you know",
    "start": "1506000",
    "end": "1513080"
  },
  {
    "text": "what are the differences and you will understand how the auto instrumentation can",
    "start": "1513080",
    "end": "1518720"
  },
  {
    "text": "dramatically simplify the instrumentation work that you have to do if you want to get Telemetry data",
    "start": "1518720",
    "end": "1526419"
  },
  {
    "text": "foreign yeah let's talk about the um the",
    "start": "1528140",
    "end": "1535460"
  },
  {
    "text": "application let me drink a little bit first I could could also make some music here",
    "start": "1535460",
    "end": "1541220"
  },
  {
    "text": "like that's five classes so",
    "start": "1541220",
    "end": "1545080"
  },
  {
    "text": "I'm in between entertainment so um I will talk a little bit about the application first and about the the",
    "start": "1547340",
    "end": "1553520"
  },
  {
    "text": "instrumentation itself so actually if you really want to stand up for a few minutes and just listen in and then do",
    "start": "1553520",
    "end": "1559279"
  },
  {
    "text": "that um so what we need of course now is a is a sample application right we need",
    "start": "1559279",
    "end": "1564440"
  },
  {
    "text": "something that we run in our cluster I just want you to give you quickly like how this how this application works it's",
    "start": "1564440",
    "end": "1570919"
  },
  {
    "text": "not fairly complicated so think about it it's that it's a game of dices right so you have two back-end services and they",
    "start": "1570919",
    "end": "1577340"
  },
  {
    "text": "choose a number between one and six most of the time and they give back this number to a front-end service and this",
    "start": "1577340",
    "end": "1583940"
  },
  {
    "text": "front-end service then just simply tells us like hey the winner of this game is Bob or the winner of this game is Alice",
    "start": "1583940",
    "end": "1589700"
  },
  {
    "text": "depending on the people playing this game uh this app also comes with a load generator so this will make sure that we",
    "start": "1589700",
    "end": "1595700"
  },
  {
    "text": "have a lot of traffic going on um in in our application in our environment right",
    "start": "1595700",
    "end": "1602059"
  },
  {
    "text": "okay so let's let's talk about instrumentation first so so what what do we mean when we talk about instrumentation so when we talk about",
    "start": "1602059",
    "end": "1608659"
  },
  {
    "text": "instrumentation this is really the moment where you take your code and you add in logs traces and metrics right so",
    "start": "1608659",
    "end": "1615140"
  },
  {
    "text": "you weave that into your application to make it observable um there's now two ways how you can do",
    "start": "1615140",
    "end": "1620240"
  },
  {
    "text": "this you can do this manually this is the more let's say developer-centric approach and we will walk through this in a minute as well so what you really",
    "start": "1620240",
    "end": "1626900"
  },
  {
    "text": "do is you initialize your SDK you tell the SDK where to send the data you even",
    "start": "1626900",
    "end": "1632480"
  },
  {
    "text": "can go down and say like okay here I want to start a span here I want to end this pan here I want to add a metric so",
    "start": "1632480",
    "end": "1638059"
  },
  {
    "text": "this is really a sad a manual process where you do all of those things yourself and the big advantage of that",
    "start": "1638059",
    "end": "1643460"
  },
  {
    "text": "is really you can really decide yourself what you want to monitor what you want to observe and what you want to add in",
    "start": "1643460",
    "end": "1649460"
  },
  {
    "text": "the other approach is automatic instrumentation one of the big advantages and you will see this in a",
    "start": "1649460",
    "end": "1654679"
  },
  {
    "text": "minute is that it's working just immediately right so you can attach it to your application for most of the",
    "start": "1654679",
    "end": "1661760"
  },
  {
    "text": "language just it's even working without changing any code so think about it Java for example can use bytecode",
    "start": "1661760",
    "end": "1667340"
  },
  {
    "text": "instrumentation for that in node.js we can do some monkey patching for that so you have a lot of approaches that that",
    "start": "1667340",
    "end": "1672919"
  },
  {
    "text": "can be used here and this is especially for example useful if you have a huge deployment of applications that are not",
    "start": "1672919",
    "end": "1679159"
  },
  {
    "text": "instrumented and then you can use something like the operator to just say like hey instrument all the applications",
    "start": "1679159",
    "end": "1684980"
  },
  {
    "text": "running on my cluster so think about this more like something you would need if you're an application operator since",
    "start": "1684980",
    "end": "1690140"
  },
  {
    "text": "you're like hey I don't really know what is in this application but I want to have traces metrics and logs emitted by",
    "start": "1690140",
    "end": "1695779"
  },
  {
    "text": "it right uh when we now go into the manual instrumentation maybe to to send this up",
    "start": "1695779",
    "end": "1701360"
  },
  {
    "text": "front right so we will do some some node.js programming now I don't know if if all of you are are good in node.js",
    "start": "1701360",
    "end": "1707539"
  },
  {
    "text": "I'm not um that's not a problem because later when we will then use the automatic instrumentation and run it",
    "start": "1707539",
    "end": "1713840"
  },
  {
    "text": "directly in the cluster we will just use the version that is done for you this is really more now the next few minutes for",
    "start": "1713840",
    "end": "1719480"
  },
  {
    "text": "you to just get a feeling how manual instrumentation works right so what we have prepared for that is that is a",
    "start": "1719480",
    "end": "1726020"
  },
  {
    "text": "front-end application I will start this in a minute if you don't have again node.js installed on your machine uh you",
    "start": "1726020",
    "end": "1733159"
  },
  {
    "text": "can you can use Docker for that so you can again bring it up in Docker and you can run the same commands in inside a",
    "start": "1733159",
    "end": "1739340"
  },
  {
    "text": "Docker container right",
    "start": "1739340",
    "end": "1742240"
  },
  {
    "text": "okay let's see here's the app front-end right so let's",
    "start": "1745880",
    "end": "1751039"
  },
  {
    "text": "go back and and copy out the thing here",
    "start": "1751039",
    "end": "1755620"
  },
  {
    "text": "[Music] right so we go into the app",
    "start": "1758450",
    "end": "1765500"
  },
  {
    "text": "still it's there everything is there so we say now and PX node mon so node mon",
    "start": "1765500",
    "end": "1770779"
  },
  {
    "text": "is such a watching service right so it's taking care of it now when we change the code every time it's just restarting",
    "start": "1770779",
    "end": "1777380"
  },
  {
    "text": "that service um and it's now starting that that very simple application so let's now go over",
    "start": "1777380",
    "end": "1783620"
  },
  {
    "text": "into into the source code so you see like here's this this application so it's not fairly complicated uh you have",
    "start": "1783620",
    "end": "1790580"
  },
  {
    "text": "here at the bottom your your requests being being uh being done and it calls",
    "start": "1790580",
    "end": "1796159"
  },
  {
    "text": "those two backend services and then there's like uh yeah hey um player one rolls this number player",
    "start": "1796159",
    "end": "1802399"
  },
  {
    "text": "two rolls this number but actually I don't really care about that what I want to do now here at the top is really initialize my my node SDK and then use",
    "start": "1802399",
    "end": "1810320"
  },
  {
    "text": "the instrumentation library for Express and HTTP to to get all of that done for me automatically right",
    "start": "1810320",
    "end": "1817220"
  },
  {
    "text": "um what we do for that we go into the open Telemetry documentation",
    "start": "1817220",
    "end": "1823580"
  },
  {
    "text": "uh so let's go there in a minute right so we go here into the JavaScript",
    "start": "1823580",
    "end": "1830299"
  },
  {
    "text": "getting started node.js instrumentation we can skip a few things because instead we have already our sample application",
    "start": "1830299",
    "end": "1836000"
  },
  {
    "text": "so we can skip the top part where you can just have a very simple express application we have this already uh in",
    "start": "1836000",
    "end": "1843140"
  },
  {
    "text": "the very first step we install those dependencies this should work fairly",
    "start": "1843140",
    "end": "1848179"
  },
  {
    "text": "quick because in that node we are running let me find it again",
    "start": "1848179",
    "end": "1854179"
  },
  {
    "text": "it's this one right um no where's my",
    "start": "1854179",
    "end": "1860539"
  },
  {
    "text": "I needed to put it yeah I'm sorry where's the",
    "start": "1860539",
    "end": "1866899"
  },
  {
    "text": "this one I just need to stop of course the process and and put this in here",
    "start": "1866899",
    "end": "1872299"
  },
  {
    "text": "uh yeah",
    "start": "1872299",
    "end": "1875559"
  },
  {
    "text": "so this installs Sid SDK the API some Auto instrumentation libraries",
    "start": "1879919",
    "end": "1885740"
  },
  {
    "text": "um and and some some SDK again for the metrics and then in the next step I said we can",
    "start": "1885740",
    "end": "1891440"
  },
  {
    "text": "make use of that in the application itself so the documentation here says like hey create",
    "start": "1891440",
    "end": "1897500"
  },
  {
    "text": "an independent file of doing that and use required to load that module from the steel I but you can also really copy",
    "start": "1897500",
    "end": "1903500"
  },
  {
    "text": "that out what we see here uh just just take it and put it into into your source",
    "start": "1903500",
    "end": "1909380"
  },
  {
    "text": "code now let me jump over here again so you go to the top of this index file and",
    "start": "1909380",
    "end": "1914899"
  },
  {
    "text": "you put it here and you see like let's load all the modules we need node SDK the exporters the auto instrumentation",
    "start": "1914899",
    "end": "1921260"
  },
  {
    "text": "and then also let's initialize all of that so for for this start we use a console exporter for traces and metrics",
    "start": "1921260",
    "end": "1928100"
  },
  {
    "text": "we use all the instrumentation libraries and then we just say like yeah start the SDK so let's save this again and then",
    "start": "1928100",
    "end": "1936020"
  },
  {
    "text": "let's see if it's working so let's do the um Note 1 again",
    "start": "1936020",
    "end": "1943039"
  },
  {
    "text": "if we are lucky this is not taking a little bit",
    "start": "1943039",
    "end": "1948398"
  },
  {
    "text": "a little bit longer",
    "start": "1950179",
    "end": "1953140"
  },
  {
    "text": "okay so and you already see like it's dumping out a bunch of traces that are just generated in the beginning by the",
    "start": "1959419",
    "end": "1965840"
  },
  {
    "text": "instrumentation of the fs module uh but what we can now easily do in another terminal we can send now a request to",
    "start": "1965840",
    "end": "1972919"
  },
  {
    "text": "that I hope that goes well now right so",
    "start": "1972919",
    "end": "1978500"
  },
  {
    "text": "yeah don't worry about the internal server internal server error because the thing is there there's no back-end",
    "start": "1978500",
    "end": "1984200"
  },
  {
    "text": "service so it's complaining about that but what we should see now here right so you see now traces or spans specifically",
    "start": "1984200",
    "end": "1991640"
  },
  {
    "text": "being dropped to the 3D console and and now of course the next step is we want to have that emitted to to the open",
    "start": "1991640",
    "end": "1998419"
  },
  {
    "text": "Telemetry to the open Telemetry collector right and what we do for that we need to replace the span exporter and",
    "start": "1998419",
    "end": "2005860"
  },
  {
    "text": "the metric exporter here to something that uses otlp um let me go back to the docs there's a",
    "start": "2005860",
    "end": "2013480"
  },
  {
    "text": "documentation there now as well that gives you all those exporters right so here in the case of of node.js it's It's",
    "start": "2013480",
    "end": "2019360"
  },
  {
    "text": "the otlp exporters and the the sipkin exporters and again we we can simply copy out a little bit of that code so we",
    "start": "2019360",
    "end": "2026919"
  },
  {
    "text": "take the things here at top um and we go back to the",
    "start": "2026919",
    "end": "2032019"
  },
  {
    "text": "to the code yeah Scrolls in the wrong direction sometimes",
    "start": "2032019",
    "end": "2038500"
  },
  {
    "text": "sorry for that um and you see like I just add those those modules in the only difference we",
    "start": "2038500",
    "end": "2045220"
  },
  {
    "text": "make we use grpc right so there's different modes how you can use open Telemetry or the open Telemetry exporter",
    "start": "2045220",
    "end": "2051700"
  },
  {
    "text": "but we will use here the the grpc right uh here's the let's copy that the trace",
    "start": "2051700",
    "end": "2059980"
  },
  {
    "text": "exporter uh the metric exporter also put it like",
    "start": "2059980",
    "end": "2065260"
  },
  {
    "text": "that and then we should be able to to send that back to the",
    "start": "2065260",
    "end": "2072040"
  },
  {
    "text": "um to to the how is it quality The Collector right so the only thing we",
    "start": "2072040",
    "end": "2078820"
  },
  {
    "text": "have to do now differently we need to set the right environment variable uh which I don't have in my head right now",
    "start": "2078820",
    "end": "2085179"
  },
  {
    "text": "let me check this real quick in the code again or we can do it like that so we can",
    "start": "2085179",
    "end": "2092138"
  },
  {
    "text": "simply change the configuration of for example the the trace and the metric",
    "start": "2092139",
    "end": "2097839"
  },
  {
    "text": "exporter like that so we can put this here inside our collector is running under the name",
    "start": "2097839",
    "end": "2106900"
  },
  {
    "text": "yeah where's the slash there it is Hotel collector",
    "start": "2106900",
    "end": "2113980"
  },
  {
    "text": "ACM normally using a German key layout numbers up and down",
    "start": "2113980",
    "end": "2120460"
  },
  {
    "text": "um and then the same for the metric exporter right so we can put it here this should work just fine for for both",
    "start": "2120460",
    "end": "2127060"
  },
  {
    "text": "of them they just used the same endpoint um oh yeah we need to set the port of",
    "start": "2127060",
    "end": "2132880"
  },
  {
    "text": "course which is four three one seven",
    "start": "2132880",
    "end": "2138640"
  },
  {
    "text": "uh and four three one seven here as well I think we should remove the we want",
    "start": "2138640",
    "end": "2145000"
  },
  {
    "text": "traces here for grpc um let me do this real quick",
    "start": "2145000",
    "end": "2151359"
  },
  {
    "text": "um and then we yeah restart the application with that",
    "start": "2151359",
    "end": "2158880"
  },
  {
    "text": "give it some time to start up again",
    "start": "2165339",
    "end": "2169560"
  },
  {
    "text": "yeah let's see it's not sending anything here where's the collector and you see now",
    "start": "2170380",
    "end": "2177220"
  },
  {
    "text": "the collectors now here's receiving spans right so if you look here it's",
    "start": "2177220",
    "end": "2182500"
  },
  {
    "text": "receiving those spans we can also uh send some some requests using curl again",
    "start": "2182500",
    "end": "2187780"
  },
  {
    "text": "to to that service it's again still giving us this internal server error uh",
    "start": "2187780",
    "end": "2193420"
  },
  {
    "text": "we don't see the the spans anymore here on the console what we see a little bit",
    "start": "2193420",
    "end": "2198520"
  },
  {
    "text": "hidden here is that the span ID and the trace ID are injected into into my log",
    "start": "2198520",
    "end": "2203980"
  },
  {
    "text": "lines and at the same time you see like the span so the 27 spans you see here at",
    "start": "2203980",
    "end": "2209740"
  },
  {
    "text": "the bottom are the ones I just generated uh using curl right [Music]",
    "start": "2209740",
    "end": "2215200"
  },
  {
    "text": "um called quickly again here's the source code it's fairly simple so you really",
    "start": "2215200",
    "end": "2220960"
  },
  {
    "text": "just initialize the SDK using all those distress exporters and here this get",
    "start": "2220960",
    "end": "2226180"
  },
  {
    "text": "node Auto instrumentation is is doing most of the magic for you right it's loading a lot of instrumentation",
    "start": "2226180",
    "end": "2232000"
  },
  {
    "text": "libraries but what you then also can do if you go down a little bit in the source code you can add in your own open",
    "start": "2232000",
    "end": "2239920"
  },
  {
    "text": "Telemetry metrics for example so we can add in here some some counters for how",
    "start": "2239920",
    "end": "2245079"
  },
  {
    "text": "often has the game been played or how often which player has has won we can",
    "start": "2245079",
    "end": "2250720"
  },
  {
    "text": "also add some some additional span attributes so there's things you can then do while while manual",
    "start": "2250720",
    "end": "2256599"
  },
  {
    "text": "instrumentation I left in some to-do's for you we will not go through them but if you then maybe review all of that",
    "start": "2256599",
    "end": "2262540"
  },
  {
    "text": "later for yourself then then you can play around with it and say like okay how can I replicate those things",
    "start": "2262540",
    "end": "2269980"
  },
  {
    "text": "right um I think the next step that then remains",
    "start": "2269980",
    "end": "2275260"
  },
  {
    "text": "is um that we then deploy our application to the cluster right so this was now",
    "start": "2275260",
    "end": "2281619"
  },
  {
    "text": "said the way how you do manual instrumentation and now the situation we want just to introduce you to is that we",
    "start": "2281619",
    "end": "2287920"
  },
  {
    "text": "have to front end now manually instrumented instrumented I said we will use something we prepared but but you",
    "start": "2287920",
    "end": "2293560"
  },
  {
    "text": "could technically now use the code you created in a new container image and then for the other applications",
    "start": "2293560",
    "end": "2300460"
  },
  {
    "text": "later we will see the auto instrumentation right so let me now deploy everything to to the cluster",
    "start": "2300460",
    "end": "2308200"
  },
  {
    "text": "um let me go into the right direction again I think I can finish the application now",
    "start": "2308200",
    "end": "2314800"
  },
  {
    "text": "we don't need it anymore so we have um have deployed all the the",
    "start": "2314800",
    "end": "2320079"
  },
  {
    "text": "applications right let me go back and then let's see how everything looks like",
    "start": "2320079",
    "end": "2328019"
  },
  {
    "text": "right so you see like there's the two back ends the front end uh the load generator so all of that is being",
    "start": "2330400",
    "end": "2337660"
  },
  {
    "text": "created right now it takes a little bit um and then we should be happy and up and",
    "start": "2337660",
    "end": "2343780"
  },
  {
    "text": "running you could now start also an additional proxy to expose the front-end service",
    "start": "2343780",
    "end": "2349000"
  },
  {
    "text": "and play some games on your own but since we have the load generator running we don't need that uh yeah and the next",
    "start": "2349000",
    "end": "2355180"
  },
  {
    "text": "part is to now how can we Auto instrument uh the remaining services",
    "start": "2355180",
    "end": "2360960"
  },
  {
    "text": "yeah and for the auto instrumentation we're gonna use the the crd but what",
    "start": "2367660",
    "end": "2373119"
  },
  {
    "text": "dcrd actually does it uses the open Telemetry Auto instrumentation and agents",
    "start": "2373119",
    "end": "2378579"
  },
  {
    "text": "and it just injects them into our workloads but we're gonna see that in a",
    "start": "2378579",
    "end": "2383740"
  },
  {
    "text": "minute so let's first create the instrumentation resource so this is how",
    "start": "2383740",
    "end": "2390700"
  },
  {
    "text": "it looks like I set the exporter endpoints to our auto collector that we deployed earlier in",
    "start": "2390700",
    "end": "2397540"
  },
  {
    "text": "the observability backend namespace and that's that's pretty much it and we're gonna sample all the requests so",
    "start": "2397540",
    "end": "2404320"
  },
  {
    "text": "we're gonna keep all the Telemetry data",
    "start": "2404320",
    "end": "2408240"
  },
  {
    "text": "let's go to instrumentation step",
    "start": "2413740",
    "end": "2418079"
  },
  {
    "text": "so the CR has been created",
    "start": "2423880",
    "end": "2428099"
  },
  {
    "text": "and now we're going to instrument the the front end back-end one and back into but",
    "start": "2429820",
    "end": "2436960"
  },
  {
    "text": "the front end is already instrumented but it's not configured so right now if",
    "start": "2436960",
    "end": "2442720"
  },
  {
    "text": "I take a look at logs right they should be it should be printing the something to the",
    "start": "2442720",
    "end": "2448240"
  },
  {
    "text": "standard output",
    "start": "2448240",
    "end": "2450960"
  },
  {
    "text": "what is the namespace there's a tutorial application",
    "start": "2454540",
    "end": "2462099"
  },
  {
    "text": "so maybe I can write something like this",
    "start": "2466839",
    "end": "2471180"
  },
  {
    "text": "foreign we see",
    "start": "2484480",
    "end": "2492240"
  },
  {
    "text": "we see actually logs",
    "start": "2495220",
    "end": "2498660"
  },
  {
    "text": "but you have to trust me that the the application is instrumenting just sending the Telemetry to to the console",
    "start": "2500859",
    "end": "2507700"
  },
  {
    "text": "um so now we're gonna use the operator to inject the SDK configuration",
    "start": "2507700",
    "end": "2513760"
  },
  {
    "text": "um so we're gonna apply the so first of all we're gonna first take a",
    "start": "2513760",
    "end": "2520599"
  },
  {
    "text": "look at the edit pot of the front-end application",
    "start": "2520599",
    "end": "2525760"
  },
  {
    "text": "how it looks like and as you can see",
    "start": "2525760",
    "end": "2531520"
  },
  {
    "text": "the auto instrumentation is named enabled and then we are just setting the the URLs for the backend one and backend",
    "start": "2531520",
    "end": "2538300"
  },
  {
    "text": "two and there is no other configuration for the open Telemetry SDK",
    "start": "2538300",
    "end": "2544320"
  },
  {
    "text": "and now we're gonna apply the instrumentation annotation",
    "start": "2545099",
    "end": "2552640"
  },
  {
    "text": "with value true which means the operator will use uh kind of the only CR the only",
    "start": "2552640",
    "end": "2560140"
  },
  {
    "text": "instrumentation CR that we created in the namespace and the the The annotation is inject SDK",
    "start": "2560140",
    "end": "2568359"
  },
  {
    "text": "which tells the operator to just inject the SDK configuration it will not change the deployment and it will not",
    "start": "2568359",
    "end": "2576940"
  },
  {
    "text": "it will not inject any kind of like libraries into this uh container it will",
    "start": "2576940",
    "end": "2582339"
  },
  {
    "text": "just inject the configuration so let me go back uh apply The annotation if I apply The annotation to",
    "start": "2582339",
    "end": "2589119"
  },
  {
    "text": "the Pod spec in the deployment kubernetes will restart the pod now I will get the pods back again",
    "start": "2589119",
    "end": "2598260"
  },
  {
    "text": "and we're gonna see what operator configured",
    "start": "2598720",
    "end": "2603480"
  },
  {
    "text": "so the operator in this case",
    "start": "2605980",
    "end": "2609780"
  },
  {
    "text": "let me take a look",
    "start": "2616359",
    "end": "2619500"
  },
  {
    "text": "it seems like it didn't do anything",
    "start": "2624700",
    "end": "2628560"
  },
  {
    "text": "uh okay so maybe there is some",
    "start": "2630720",
    "end": "2635520"
  },
  {
    "text": "why there's two thoughts yeah the old one is still there yeah so",
    "start": "2637359",
    "end": "2642460"
  },
  {
    "text": "it's the output has like a list of like two parts for the front end and so this",
    "start": "2642460",
    "end": "2648400"
  },
  {
    "text": "is the second this is the one that has changed and we see",
    "start": "2648400",
    "end": "2653680"
  },
  {
    "text": "um that the operator configures the open television series name which is the the",
    "start": "2653680",
    "end": "2659079"
  },
  {
    "text": "front-end deployment name the end point for to sending the otlp data",
    "start": "2659079",
    "end": "2667240"
  },
  {
    "text": "and then the kubernetes resource attributes which are in this environment variable and as well",
    "start": "2667240",
    "end": "2674380"
  },
  {
    "text": "the the propagators and the sampling configuration so now I should be able to access traces",
    "start": "2674380",
    "end": "2681099"
  },
  {
    "text": "in grafana",
    "start": "2681099",
    "end": "2684240"
  },
  {
    "text": "yeah and we are getting some traces for the front-end application right now there is only a single span",
    "start": "2688839",
    "end": "2697020"
  },
  {
    "text": "and we see that in the resources we are getting the kubernetes resource attributes to describe you know what is",
    "start": "2697300",
    "end": "2703960"
  },
  {
    "text": "the container name deployment name namespace and so on",
    "start": "2703960",
    "end": "2710280"
  },
  {
    "text": "okay now let's instrument the back end one service which is a python uh and",
    "start": "2711640",
    "end": "2719380"
  },
  {
    "text": "we're gonna do the same workflow we're gonna get the pods back and see how it looks like",
    "start": "2719380",
    "end": "2725980"
  },
  {
    "text": "there is no pretty much there is no configuration",
    "start": "2725980",
    "end": "2731760"
  },
  {
    "text": "and we're gonna apply again the inject annotation but in this case we're gonna choose to inject python",
    "start": "2732700",
    "end": "2739119"
  },
  {
    "text": "so the operator in this case will inject the python instrumentation libraries but as well we'll configure the SDK",
    "start": "2739119",
    "end": "2747420"
  },
  {
    "text": "foreign",
    "start": "2755500",
    "end": "2757680"
  },
  {
    "text": "and so how does it how does it work right like how are the instrumentation",
    "start": "2764560",
    "end": "2770560"
  },
  {
    "text": "libraries injected they are injected by using the init container so the operator will inject will change the pods back",
    "start": "2770560",
    "end": "2777460"
  },
  {
    "text": "we'll add the init container and this init container just copies the",
    "start": "2777460",
    "end": "2783160"
  },
  {
    "text": "Auto instrumentation libraries for python into the directory called Hotel",
    "start": "2783160",
    "end": "2789240"
  },
  {
    "text": "Dash instrumentation which is a volume that is as well mounted to your",
    "start": "2789240",
    "end": "2794579"
  },
  {
    "text": "application container and then it configures python runtime to",
    "start": "2794579",
    "end": "2800140"
  },
  {
    "text": "use those libraries and so python will start with load Auto instrumentation and",
    "start": "2800140",
    "end": "2805359"
  },
  {
    "text": "then we'll load your application so it's using the python path in this case",
    "start": "2805359",
    "end": "2810960"
  },
  {
    "text": "to to tell the python the that it has to load the libraries and then again the",
    "start": "2810960",
    "end": "2817060"
  },
  {
    "text": "same Hotel SDK config we can access traces",
    "start": "2817060",
    "end": "2825660"
  },
  {
    "text": "for the backend one yeah we see there are some traces already",
    "start": "2827800",
    "end": "2832619"
  },
  {
    "text": "uh in Java very similarly I will not get the the original Port we're gonna just",
    "start": "2836940",
    "end": "2843040"
  },
  {
    "text": "apply the inject annotation and see how how it configures jvm",
    "start": "2843040",
    "end": "2851460"
  },
  {
    "text": "thank you so it's again a list of PODS so the",
    "start": "2856900",
    "end": "2863680"
  },
  {
    "text": "first one should be the one that has changed [Music]",
    "start": "2863680",
    "end": "2868900"
  },
  {
    "text": "and again like we see the init container with copying that is copying the Java agent",
    "start": "2868900",
    "end": "2876599"
  },
  {
    "text": "and then the operator is configuring the Java",
    "start": "2877420",
    "end": "2882579"
  },
  {
    "text": "tool options uh environment variable and jvm uses this environment variable to to",
    "start": "2882579",
    "end": "2889480"
  },
  {
    "text": "configure the jvm right and in this case we are setting the Java agent um Java agent again it's loaded into",
    "start": "2889480",
    "end": "2896260"
  },
  {
    "text": "memory and then it will see all the classes as are being loaded or you know",
    "start": "2896260",
    "end": "2901839"
  },
  {
    "text": "from for the application all right and now we have instrumented",
    "start": "2901839",
    "end": "2906940"
  },
  {
    "text": "all the applications so we should see the entire Trace",
    "start": "2906940",
    "end": "2914280"
  },
  {
    "text": "starting in front end and finishing in back end",
    "start": "2916720",
    "end": "2922260"
  },
  {
    "text": "we don't see the front-end service yeah but it should it should show up",
    "start": "2935020",
    "end": "2940240"
  },
  {
    "text": "here anyway on the left",
    "start": "2940240",
    "end": "2943560"
  },
  {
    "text": "six minutes ago so we are not getting any traces from the front end",
    "start": "2947440",
    "end": "2952920"
  },
  {
    "text": "maybe two",
    "start": "2953140",
    "end": "2956578"
  },
  {
    "text": "let's take a look front end seems to be running",
    "start": "2959560",
    "end": "2964859"
  },
  {
    "text": "let's take a look",
    "start": "2971579",
    "end": "2975119"
  },
  {
    "text": "it has the config for Auto",
    "start": "2982359",
    "end": "2986279"
  },
  {
    "text": "the end point looks good",
    "start": "2991599",
    "end": "2995160"
  },
  {
    "text": "the sampling looks okay as well",
    "start": "2997900",
    "end": "3001880"
  },
  {
    "text": "I will just try to delete it",
    "start": "3003240",
    "end": "3006859"
  },
  {
    "text": "20 seconds okay mm-hmm",
    "start": "3020839",
    "end": "3027359"
  },
  {
    "text": "this one",
    "start": "3029940",
    "end": "3032660"
  },
  {
    "text": "yeah so it seems to work maybe maybe there is a delay uh in like",
    "start": "3038099",
    "end": "3045300"
  },
  {
    "text": "getting these spans you know through the collector and then to uh to Tempo and",
    "start": "3045300",
    "end": "3051180"
  },
  {
    "text": "then maybe um it just takes some time to to propagate them and make them available for query",
    "start": "3051180",
    "end": "3058640"
  },
  {
    "text": "okay so yeah okay and so we ended up with this",
    "start": "3062760",
    "end": "3069599"
  },
  {
    "text": "architecture uh we have the front-end service backend the backend one",
    "start": "3069599",
    "end": "3075000"
  },
  {
    "text": "and all of those are reporting Telemetry data to our hotel collector that is then sending each individual single signal to",
    "start": "3075000",
    "end": "3083520"
  },
  {
    "text": "two different backend so for for metrics to mimir for logs to Loki and for traces to Tempo",
    "start": "3083520",
    "end": "3091940"
  },
  {
    "text": "so we we already seen this in the in grafana",
    "start": "3094079",
    "end": "3101599"
  },
  {
    "text": "and now we're going to take a look at like different use cases how we can kind of improve our our instrumentation",
    "start": "3105240",
    "end": "3112619"
  },
  {
    "text": "and get a bit more value or kind of solve different use cases and we're",
    "start": "3112619",
    "end": "3117900"
  },
  {
    "text": "going to start with the resource attributes which are very important so on kubernetes",
    "start": "3117900",
    "end": "3125220"
  },
  {
    "text": "environment we we should understand like from where the data is coming from right so we should",
    "start": "3125220",
    "end": "3131760"
  },
  {
    "text": "be getting attributes for to identify what was the deployment name what was the",
    "start": "3131760",
    "end": "3137700"
  },
  {
    "text": "um the container name what was the uh the Pod name the Pod uid and all these kind",
    "start": "3137700",
    "end": "3144180"
  },
  {
    "text": "of kubernetes attributes there is different ways how we can do that if we use the instrumentation CR the operator",
    "start": "3144180",
    "end": "3150960"
  },
  {
    "text": "knows the port and it can figure out all this data for you and it will inject those",
    "start": "3150960",
    "end": "3156599"
  },
  {
    "text": "uh those resource attributes as environment variable to the application container",
    "start": "3156599",
    "end": "3161880"
  },
  {
    "text": "so we are using this approach you know in the in the demo the second approach is to use the collector CR and configure",
    "start": "3161880",
    "end": "3169859"
  },
  {
    "text": "the kubernetes attributes processor so in this case we can deploy The Collector as a deployment and you know have",
    "start": "3169859",
    "end": "3177300"
  },
  {
    "text": "multiple pods sending data to this collector and the attribute processor",
    "start": "3177300",
    "end": "3182339"
  },
  {
    "text": "will kind of recognize from where the data is coming and we'll call the API server and get the",
    "start": "3182339",
    "end": "3189480"
  },
  {
    "text": "attributes for you the last approach is when you're using",
    "start": "3189480",
    "end": "3196319"
  },
  {
    "text": "again collector CR but deployed as a sidecar in this case the operator will",
    "start": "3196319",
    "end": "3202559"
  },
  {
    "text": "set again the Atri the attributes as environment variable and you just need",
    "start": "3202559",
    "end": "3208260"
  },
  {
    "text": "to configure the resource detection processor to kind of use that environment variable",
    "start": "3208260",
    "end": "3214200"
  },
  {
    "text": "and set the attributes to uh and to kind of consume them and set them on data",
    "start": "3214200",
    "end": "3220859"
  },
  {
    "text": "there's as well a link for a blog post that describes how to set it up",
    "start": "3220859",
    "end": "3225900"
  },
  {
    "text": "what we're gonna do right now is to update the instrumentation CR and we're",
    "start": "3225900",
    "end": "3232500"
  },
  {
    "text": "going to enable a collection of the kubernetes uid attributes so we are getting the the Pod name deployment name",
    "start": "3232500",
    "end": "3239040"
  },
  {
    "text": "but we are not getting the the uid ones",
    "start": "3239040",
    "end": "3244040"
  },
  {
    "text": "so we need to go to the resource",
    "start": "3252960",
    "end": "3257300"
  },
  {
    "text": "all right I think it's this one and",
    "start": "3258359",
    "end": "3265440"
  },
  {
    "text": "I'm gonna just copy it",
    "start": "3265920",
    "end": "3269420"
  },
  {
    "text": "I have changed it but actually nothing happens because the",
    "start": "3279540",
    "end": "3284579"
  },
  {
    "text": "the change is not propagated to the workloads because the the configuration or the the attributes",
    "start": "3284579",
    "end": "3291900"
  },
  {
    "text": "are set as the environment variable right so we need to restart our applications to to let the operator",
    "start": "3291900",
    "end": "3300180"
  },
  {
    "text": "uh you know change the environment variable and inject the new new configuration",
    "start": "3300180",
    "end": "3306260"
  },
  {
    "text": "and now we can go again to grafana",
    "start": "3312420",
    "end": "3316640"
  },
  {
    "text": "but let me just first check if everything looks okay",
    "start": "3329760",
    "end": "3336558"
  },
  {
    "text": "the new ports are running",
    "start": "3341819",
    "end": "3345500"
  },
  {
    "text": "yeah let's try this for instance and now in the resource attributes I",
    "start": "3353059",
    "end": "3359460"
  },
  {
    "text": "should see the uid attributes yeah we are getting for the deployment Port replica set",
    "start": "3359460",
    "end": "3368839"
  },
  {
    "text": "okay the next kind of use case is sampling",
    "start": "3373140",
    "end": "3378660"
  },
  {
    "text": "and a sampling is a technique how we choose our how we decide what like what",
    "start": "3378660",
    "end": "3386040"
  },
  {
    "text": "amount of data we want to store and send to to backend",
    "start": "3386040",
    "end": "3391400"
  },
  {
    "text": "so in our previous setup we we were using 100 sampling so we are storing all",
    "start": "3391400",
    "end": "3398160"
  },
  {
    "text": "the Telemetry data that we are collecting we're gonna change that and you know save only 25 percent",
    "start": "3398160",
    "end": "3406880"
  },
  {
    "text": "so if you're gonna again edit the instrumentation CR",
    "start": "3407880",
    "end": "3414140"
  },
  {
    "text": "and in the sampling sampler we're going to edit the argument",
    "start": "3416220",
    "end": "3423359"
  },
  {
    "text": "and set it to 0.25 and again like the sampling",
    "start": "3423359",
    "end": "3428940"
  },
  {
    "text": "configuration is on the SDK is configured through the environment variable so we have to again restart the",
    "start": "3428940",
    "end": "3435480"
  },
  {
    "text": "workloads",
    "start": "3435480",
    "end": "3438200"
  },
  {
    "text": "seems okay",
    "start": "3456240",
    "end": "3459140"
  },
  {
    "text": "if you would like to to see like what are all the possible configuration options for the type and argument there",
    "start": "3461720",
    "end": "3469740"
  },
  {
    "text": "is a link to the SDK SDK config now I'm gonna open grafana dashboard for",
    "start": "3469740",
    "end": "3478319"
  },
  {
    "text": "The Collector and we should hopefully see that the amount of received traces uh",
    "start": "3478319",
    "end": "3485940"
  },
  {
    "text": "decreased",
    "start": "3485940",
    "end": "3488480"
  },
  {
    "text": "so this is the success",
    "start": "3503400",
    "end": "3506960"
  },
  {
    "text": "make sure it's last 15 minutes",
    "start": "3511859",
    "end": "3515900"
  },
  {
    "text": "and we see that is receiving less and less traces",
    "start": "3517980",
    "end": "3523040"
  },
  {
    "text": "and yeah over time it should stabilize in like for 25 of the original value",
    "start": "3529619",
    "end": "3537680"
  },
  {
    "text": "this approach works and you will probably have to experiment with sampling quite a bit when you kind of",
    "start": "3541319",
    "end": "3547380"
  },
  {
    "text": "deploy or when you instrument your applications and like restarting your workloads is",
    "start": "3547380",
    "end": "3553380"
  },
  {
    "text": "not ideal and in Auto project there is a sampler called Jaeger remote sampler",
    "start": "3553380",
    "end": "3559680"
  },
  {
    "text": "which allows you to set the sampling without the the restart the way it works",
    "start": "3559680",
    "end": "3565799"
  },
  {
    "text": "that is that you deploy the auto collector and there you configure extension with the sampling",
    "start": "3565799",
    "end": "3572040"
  },
  {
    "text": "configuration and then the SDK will connect the collector and will you know",
    "start": "3572040",
    "end": "3577619"
  },
  {
    "text": "can receive and update the sampling config all right so the last topic I want to",
    "start": "3577619",
    "end": "3584460"
  },
  {
    "text": "cover here is the kind of data manipulation as Bena showed us the collector can it's a pipeline right and",
    "start": "3584460",
    "end": "3591780"
  },
  {
    "text": "in the in the middle uh there is you can configure processor and in these processors there is a lot of",
    "start": "3591780",
    "end": "3598020"
  },
  {
    "text": "functionality and what they usually do is that they can manipulate the data",
    "start": "3598020",
    "end": "3603680"
  },
  {
    "text": "which can be super useful for you know removing any sensitive data or you can",
    "start": "3603680",
    "end": "3611040"
  },
  {
    "text": "kind of extract new data from already existing attributes",
    "start": "3611040",
    "end": "3617000"
  },
  {
    "text": "there's a couple of processors that will kind of offers you this functionality but we're going to use the attributes",
    "start": "3618059",
    "end": "3624119"
  },
  {
    "text": "processor and we're going to use it to extract the player name from the HTTP",
    "start": "3624119",
    "end": "3630059"
  },
  {
    "text": "Target attribute so maybe let's go back to to grafana and see how the HTTP Target",
    "start": "3630059",
    "end": "3638220"
  },
  {
    "text": "looks like it's not in the resource attributes it's in the attributes",
    "start": "3638220",
    "end": "3646160"
  },
  {
    "text": "so in this case you know this is the the root endpoint there is your slash but if",
    "start": "3647760",
    "end": "3653280"
  },
  {
    "text": "I go I believe to back end there should be",
    "start": "3653280",
    "end": "3658440"
  },
  {
    "text": "uh it it will look like this roll dice player equals Christina and we want to",
    "start": "3658440",
    "end": "3665339"
  },
  {
    "text": "just extract the Christina into separate new attribute and this could be useful for",
    "start": "3665339",
    "end": "3671640"
  },
  {
    "text": "if we need to then you know query the the player name",
    "start": "3671640",
    "end": "3677119"
  },
  {
    "text": "so I'm gonna edit the collector CR",
    "start": "3680880",
    "end": "3686780"
  },
  {
    "text": "AP and just copy the the config into processor section",
    "start": "3691740",
    "end": "3699740"
  },
  {
    "text": "and I have to as well put the attributes processor into the pipeline for traces",
    "start": "3718020",
    "end": "3725119"
  },
  {
    "text": "and let's see if the collector uh was restarted",
    "start": "3740400",
    "end": "3747680"
  },
  {
    "text": "it looks perfect",
    "start": "3756660",
    "end": "3759920"
  },
  {
    "text": "now we can go again to grafana",
    "start": "3764460",
    "end": "3768559"
  },
  {
    "text": "and we should see player attribute somewhere",
    "start": "3781500",
    "end": "3788339"
  },
  {
    "text": "yeah it's actually me that's cool",
    "start": "3788339",
    "end": "3792079"
  },
  {
    "text": "okay so yeah but I want to show you here essentially that the collector is like",
    "start": "3796079",
    "end": "3802260"
  },
  {
    "text": "highly configurable and um there is a bunch of processors that give you a lot of functionality to",
    "start": "3802260",
    "end": "3810059"
  },
  {
    "text": "manipulate the data and in the next section we will see how you can even use",
    "start": "3810059",
    "end": "3815099"
  },
  {
    "text": "the processor to extract the metrics we'll show that to extract metrics from uh from traces",
    "start": "3815099",
    "end": "3822780"
  },
  {
    "text": "foreign",
    "start": "3822780",
    "end": "3825780"
  },
  {
    "text": "hi everyone so before we extract metrics from traces um we're going to look at the auto",
    "start": "3828839",
    "end": "3835680"
  },
  {
    "text": "instrumentation that we did earlier I'll close a few tabs",
    "start": "3835680",
    "end": "3843799"
  },
  {
    "text": "so when we added Auto instrumentation it didn't just affect traces we also got logs and metrics from that so these are",
    "start": "3846000",
    "end": "3852900"
  },
  {
    "text": "the metrics that we are now getting because of the auto instrumentation we added before",
    "start": "3852900",
    "end": "3858480"
  },
  {
    "text": "uh front end actually has some instrumentation so these games we can",
    "start": "3858480",
    "end": "3863579"
  },
  {
    "text": "see as well as who is winning how many times they're also nobody can win we can tie",
    "start": "3863579",
    "end": "3872780"
  },
  {
    "text": "but from the auto instrumentation we mostly see these HTTP metrics",
    "start": "3872780",
    "end": "3879440"
  },
  {
    "text": "for both front end back end one and back end two",
    "start": "3879440",
    "end": "3884940"
  },
  {
    "text": "we can see our server responses which are 200 which is great as well as the request duration",
    "start": "3884940",
    "end": "3892200"
  },
  {
    "text": "um and then for back into week since it's using jvm we also get some CPU and",
    "start": "3892200",
    "end": "3898079"
  },
  {
    "text": "memory usage one thing you might notice is back in one has Prometheus metrics but since",
    "start": "3898079",
    "end": "3905099"
  },
  {
    "text": "we're not currently scraping back in one we're not getting those metrics in grafana",
    "start": "3905099",
    "end": "3911359"
  },
  {
    "text": "so the collector can collect metrics using a scrape config like you can see here where we list the job name we",
    "start": "3920040",
    "end": "3927780"
  },
  {
    "text": "provide targets and then the collector goes and scrapes them but if you're deploying a lot of",
    "start": "3927780",
    "end": "3933480"
  },
  {
    "text": "services or your service makeup is changing often you probably don't want",
    "start": "3933480",
    "end": "3939480"
  },
  {
    "text": "to go in modify the configuration and redeploy your collector every time so Prometheus has something called",
    "start": "3939480",
    "end": "3945780"
  },
  {
    "text": "service and pod monitors which allow you to watch your services in pods and then",
    "start": "3945780",
    "end": "3951059"
  },
  {
    "text": "it updates The Collector so it knows what to scrape",
    "start": "3951059",
    "end": "3956900"
  },
  {
    "text": "so in order to use the Pod and service monitors we just need to install the",
    "start": "3957000",
    "end": "3962280"
  },
  {
    "text": "crds so we'll do that quickly now",
    "start": "3962280",
    "end": "3966980"
  },
  {
    "text": "and then when we check our crds we can see both pod monitors and service",
    "start": "3979440",
    "end": "3985859"
  },
  {
    "text": "monitors there so the way that we use the collector to",
    "start": "3985859",
    "end": "3994039"
  },
  {
    "text": "the way that we use the collector and service and pod monitors together is with a service called the target",
    "start": "3994039",
    "end": "3999960"
  },
  {
    "text": "allocator it uses the monitors to discover targets and then it splits up",
    "start": "3999960",
    "end": "4006020"
  },
  {
    "text": "those targets among all of the collectors in the stateful set",
    "start": "4006020",
    "end": "4010960"
  },
  {
    "text": "so previously when we deployed The Collector it was as a deployment so the",
    "start": "4014720",
    "end": "4021020"
  },
  {
    "text": "main difference in the crd that we're going to deploy now is it's a staple set",
    "start": "4021020",
    "end": "4026359"
  },
  {
    "text": "as well as various configuration for the Target allocator so we need to enable the target allocator there are a few",
    "start": "4026359",
    "end": "4033559"
  },
  {
    "text": "different allocation strategies for how you want various targets from the scrape configs to be allocated to the",
    "start": "4033559",
    "end": "4040819"
  },
  {
    "text": "collectors um and then things like the image number of replicas",
    "start": "4040819",
    "end": "4047119"
  },
  {
    "text": "Prometheus CR is important that's what enables watching the service and pod",
    "start": "4047119",
    "end": "4053420"
  },
  {
    "text": "monitors and using that in the target allocator",
    "start": "4053420",
    "end": "4058299"
  },
  {
    "text": "another important piece is we need to use the Prometheus receiver in the",
    "start": "4059119",
    "end": "4064940"
  },
  {
    "text": "collector itself that we're deploying so we want to set that up as well as it has",
    "start": "4064940",
    "end": "4070160"
  },
  {
    "text": "a Target allocator configuration we just need to tell it what endpoint to hit to",
    "start": "4070160",
    "end": "4075680"
  },
  {
    "text": "get its scrape config from the target allocator",
    "start": "4075680",
    "end": "4079900"
  },
  {
    "text": "foreign so when we apply this chart we'll deploy",
    "start": "4082039",
    "end": "4087319"
  },
  {
    "text": "our new collector as well as the target allocator for it and we also need a",
    "start": "4087319",
    "end": "4092720"
  },
  {
    "text": "special cluster role that grants the permissions that the target allocator needs to see the um the service and pod",
    "start": "4092720",
    "end": "4099980"
  },
  {
    "text": "monitors",
    "start": "4099980",
    "end": "4102520"
  },
  {
    "text": "oh yeah so we also need service monitors and we'll add those here",
    "start": "4107319",
    "end": "4112580"
  },
  {
    "text": "we are monitoring um the back in one service which we know",
    "start": "4112580",
    "end": "4117620"
  },
  {
    "text": "has the Prometheus metrics as well as you can monitor uh The Collector and",
    "start": "4117620",
    "end": "4125900"
  },
  {
    "text": "Target allocator as well so we'll be doing that",
    "start": "4125900",
    "end": "4133239"
  },
  {
    "text": "so um now that we've deployed everything",
    "start": "4139400",
    "end": "4145239"
  },
  {
    "text": "we can see our new hotel collector is called Hotel prom CR collector we have",
    "start": "4147980",
    "end": "4155719"
  },
  {
    "text": "three of them in our staple set as well as two target allocators",
    "start": "4155719",
    "end": "4161000"
  },
  {
    "text": "um yeah and everything's running so we can check oh we should check our service monitors",
    "start": "4161000",
    "end": "4167060"
  },
  {
    "text": "too",
    "start": "4167060",
    "end": "4169420"
  },
  {
    "text": "Yep they're all here one for the collector one for the Target allocator and one for back in one service",
    "start": "4172520",
    "end": "4179719"
  },
  {
    "text": "so now when we go back well this may take a few seconds",
    "start": "4179719",
    "end": "4185319"
  },
  {
    "text": "usually I see it first in the collector graphs",
    "start": "4187520",
    "end": "4193460"
  },
  {
    "text": "we have a scrapes graph so previously the hotel collector that we first",
    "start": "4193460",
    "end": "4198500"
  },
  {
    "text": "deployed was scraping just itself but now we can see additional",
    "start": "4198500",
    "end": "4204140"
  },
  {
    "text": "scrapes to new targets that we've just added",
    "start": "4204140",
    "end": "4210280"
  },
  {
    "text": "although it's very small on your screen",
    "start": "4210800",
    "end": "4215679"
  },
  {
    "text": "yeah so we can see scrapes as well as a slight increase in Prometheus metrics",
    "start": "4224120",
    "end": "4231100"
  },
  {
    "text": "scrape duration and",
    "start": "4231100",
    "end": "4236500"
  },
  {
    "text": "just other collector metrics when we go back",
    "start": "4237679",
    "end": "4244159"
  },
  {
    "text": "to our app oh there we go now we can see metrics from back in one",
    "start": "4244159",
    "end": "4251360"
  },
  {
    "text": "so somebody has already come in and had Prometheus metrics running on this",
    "start": "4251360",
    "end": "4257000"
  },
  {
    "text": "backend one and now we can see them in grafana so you can see what dice rolls we're",
    "start": "4257000",
    "end": "4263900"
  },
  {
    "text": "getting per second the numbers we can see that some people",
    "start": "4263900",
    "end": "4269480"
  },
  {
    "text": "are cheating with sevens and Eights on our six sided die",
    "start": "4269480",
    "end": "4275120"
  },
  {
    "text": "um and we also get some just regular python garbage collection and CPU metrics",
    "start": "4275120",
    "end": "4282520"
  },
  {
    "text": "since we're also scrape uh scraping the target allocator we also get metrics from that",
    "start": "4292040",
    "end": "4297920"
  },
  {
    "text": "so we can see any events that happen for service Discovery or failures",
    "start": "4297920",
    "end": "4305840"
  },
  {
    "text": "um the targets per collector so",
    "start": "4305840",
    "end": "4310540"
  },
  {
    "text": "so it's pretty evenly split um between our three collectors that are running how many targets they scrape",
    "start": "4313460",
    "end": "4320600"
  },
  {
    "text": "um we've found all three collectors which is great and",
    "start": "4320600",
    "end": "4326840"
  },
  {
    "text": "everything's looking good",
    "start": "4326840",
    "end": "4330219"
  },
  {
    "text": "so the final thing we want to look at for metrics is in the collector you may",
    "start": "4340400",
    "end": "4346040"
  },
  {
    "text": "notice that there are spam metrics graphs but we don't have those metrics yet",
    "start": "4346040",
    "end": "4351500"
  },
  {
    "text": "span metrics is a connector that we can configure in the hotel collector that",
    "start": "4351500",
    "end": "4358159"
  },
  {
    "text": "can transform spans into request error and duration metrics a connector is just a special component",
    "start": "4358159",
    "end": "4365360"
  },
  {
    "text": "that can consume data as an exporter in one Pipeline and then act as a receiver",
    "start": "4365360",
    "end": "4370400"
  },
  {
    "text": "in another pipeline so in this case it'll be an exporter in the traces pipeline but then a receiver in the",
    "start": "4370400",
    "end": "4377060"
  },
  {
    "text": "metrics pipeline",
    "start": "4377060",
    "end": "4379840"
  },
  {
    "text": "so um right now all of our traces are going to",
    "start": "4382580",
    "end": "4387860"
  },
  {
    "text": "the original Hotel collector that we deployed so that's what we want to modify to add the span metrics connector",
    "start": "4387860",
    "end": "4396340"
  },
  {
    "text": "and then we need to add it to the pipelines so",
    "start": "4424580",
    "end": "4430280"
  },
  {
    "text": "it's an exporter and a receiver",
    "start": "4430280",
    "end": "4435520"
  },
  {
    "text": "yep so now that we've modified this we just",
    "start": "4442520",
    "end": "4448280"
  },
  {
    "text": "need to restart our collector and then hopefully we will see new",
    "start": "4448280",
    "end": "4454400"
  },
  {
    "text": "metrics",
    "start": "4454400",
    "end": "4457000"
  },
  {
    "text": "just wait a few moments",
    "start": "4459800",
    "end": "4463059"
  },
  {
    "text": "oh here they are",
    "start": "4489679",
    "end": "4492880"
  },
  {
    "text": "foreign",
    "start": "4494960",
    "end": "4497960"
  },
  {
    "text": "so now from the spans we saw before you could see the get on roll dice",
    "start": "4508580",
    "end": "4513860"
  },
  {
    "text": "um on our backend servers as well as the get slash for front end",
    "start": "4513860",
    "end": "4519159"
  },
  {
    "text": "and then we can also see backend one since we've added scraping on the",
    "start": "4519159",
    "end": "4524780"
  },
  {
    "text": "metrics endpoint we also see that in our server calls as well",
    "start": "4524780",
    "end": "4530000"
  },
  {
    "text": "and then client calls our only client is the front end so that's what we see here",
    "start": "4530000",
    "end": "4538000"
  },
  {
    "text": "and then other internal calls are also included basically any spans that it can convert",
    "start": "4539179",
    "end": "4544820"
  },
  {
    "text": "um the it will and then you can see them as metrics",
    "start": "4544820",
    "end": "4551320"
  },
  {
    "text": "so next Yuri is going to talk about opportunities for logs",
    "start": "4562219",
    "end": "4568480"
  },
  {
    "text": "okay thank you Christina",
    "start": "4572900",
    "end": "4580100"
  },
  {
    "text": "before um yeah we start talking about logs let",
    "start": "4580100",
    "end": "4585560"
  },
  {
    "text": "me just close oh you just close the tabs okay thank you [Laughter]",
    "start": "4585560",
    "end": "4591219"
  },
  {
    "text": "as metrics in Trace are covered uh as the open Telemetry is capable",
    "start": "4591219",
    "end": "4598540"
  },
  {
    "text": "to handle the logs flows I",
    "start": "4598540",
    "end": "4604520"
  },
  {
    "text": "give in that example file log receiver which can be",
    "start": "4604520",
    "end": "4610640"
  },
  {
    "text": "configured to read logs from a file lock receiver is just an example of many",
    "start": "4610640",
    "end": "4619280"
  },
  {
    "text": "different receivers that we have on the open Telemetry collector country repo",
    "start": "4619280",
    "end": "4625159"
  },
  {
    "text": "let me just open to have a look",
    "start": "4625159",
    "end": "4629500"
  },
  {
    "text": "as you can see we have a different folders divided by exporters receivers",
    "start": "4631940",
    "end": "4640100"
  },
  {
    "text": "and if you go to the receiver folder you can see you are like a patch receiver",
    "start": "4640100",
    "end": "4646780"
  },
  {
    "text": "crony and and so on and so forth and we open the file log receiver folder",
    "start": "4646780",
    "end": "4654380"
  },
  {
    "text": "you're going to see uh basically a dark how to use it and",
    "start": "4654380",
    "end": "4660739"
  },
  {
    "text": "you can see we are the definition uh in the part of the page",
    "start": "4660739",
    "end": "4666860"
  },
  {
    "text": "like okay you have to Define uh which file will be included and your receiver",
    "start": "4666860",
    "end": "4674860"
  },
  {
    "text": "basically defining your collector instance and how you use the regular",
    "start": "4674860",
    "end": "4681679"
  },
  {
    "text": "expression to read the logs from going back to the example I just",
    "start": "4681679",
    "end": "4689060"
  },
  {
    "text": "designed this diagram we have a file input a regular expression in the middle",
    "start": "4689060",
    "end": "4695239"
  },
  {
    "text": "and then basically the logs will go out will flow to the lock instance that we",
    "start": "4695239",
    "end": "4701960"
  },
  {
    "text": "just deployed with the colleagues",
    "start": "4701960",
    "end": "4707800"
  },
  {
    "text": "we have why the file log has this parser",
    "start": "4708040",
    "end": "4713300"
  },
  {
    "text": "as a regular expression because a log scan differs by uh the container runtime",
    "start": "4713300",
    "end": "4719420"
  },
  {
    "text": "and you can configure the regular expression for which container runtime",
    "start": "4719420",
    "end": "4724840"
  },
  {
    "text": "you are using running your workload",
    "start": "4724840",
    "end": "4730179"
  },
  {
    "text": "uh I will use I will deploy a new instance for our collector our open",
    "start": "4730179",
    "end": "4738620"
  },
  {
    "text": "Telemetry collector using now uh the deployment mode as a demon set",
    "start": "4738620",
    "end": "4745460"
  },
  {
    "text": "let me just apply that",
    "start": "4745460",
    "end": "4749500"
  },
  {
    "text": "okay",
    "start": "4758960",
    "end": "4761260"
  },
  {
    "text": "okay as we can see we have a new Gmail site running on the observability",
    "start": "4772400",
    "end": "4779960"
  },
  {
    "text": "backend name space",
    "start": "4779960",
    "end": "4783219"
  },
  {
    "text": "and uh if you yeah want to check the Gmail search for any but yeah just check",
    "start": "4785179",
    "end": "4793040"
  },
  {
    "text": "it out through this command that is described on the repo okay",
    "start": "4793040",
    "end": "4798940"
  },
  {
    "text": "just have a look so there we go then we should see right",
    "start": "4800620",
    "end": "4809000"
  },
  {
    "text": "now uh the logs on the grafana dashboard and coming from the old Charlie ping",
    "start": "4809000",
    "end": "4815780"
  },
  {
    "text": "stance uh configured by this file log receiver",
    "start": "4815780",
    "end": "4821540"
  },
  {
    "text": "let's go to the dashboard",
    "start": "4821540",
    "end": "4825760"
  },
  {
    "text": "we have here",
    "start": "4828860",
    "end": "4831880"
  },
  {
    "text": "and if I open for example when I roll the dice",
    "start": "4836300",
    "end": "4841580"
  },
  {
    "text": "I have all that information",
    "start": "4841580",
    "end": "4846880"
  },
  {
    "text": "just to yeah give you also an option because I mentioned a lot regarding this",
    "start": "4846880",
    "end": "4853280"
  },
  {
    "text": "file log receiver but otlp is also capable to receive interest",
    "start": "4853280",
    "end": "4859520"
  },
  {
    "text": "meat logs using the native protocol or glp and then if you",
    "start": "4859520",
    "end": "4865760"
  },
  {
    "text": "simply don't want to read the logs from from a file then you can use the old LP",
    "start": "4865760",
    "end": "4873380"
  },
  {
    "text": "protocol",
    "start": "4873380",
    "end": "4875800"
  },
  {
    "text": "it's basically what I have for the logs and after that I will just give some",
    "start": "4879679",
    "end": "4888380"
  },
  {
    "text": "bullets regarding what we have what is coming from the open telemeter operator",
    "start": "4888380",
    "end": "4897400"
  },
  {
    "text": "uh we have five uh four uh actually here uh different topics or different uh",
    "start": "4900020",
    "end": "4906739"
  },
  {
    "text": "challenge for the open Telemetry operator uh nowadays we have Auto instrumentation for dotnet uh Python and",
    "start": "4906739",
    "end": "4917440"
  },
  {
    "text": "Java node.js yeah Java node.js applications and we are planning to",
    "start": "4917440",
    "end": "4925219"
  },
  {
    "text": "release the alt instrumentation for uh goaling applications okay",
    "start": "4925219",
    "end": "4931000"
  },
  {
    "text": "and uh also as a second challenge we have this open agent management protocol",
    "start": "4931000",
    "end": "4938440"
  },
  {
    "text": "Bridge which great genius team is working also and then yeah and then we",
    "start": "4938440",
    "end": "4945920"
  },
  {
    "text": "are getting this a second challenge as a",
    "start": "4945920",
    "end": "4951980"
  },
  {
    "text": "second uh look at",
    "start": "4951980",
    "end": "4958159"
  },
  {
    "text": "a second ball for the road map sorry I forgot just the road I missed the the point and uh for me uh the third one uh",
    "start": "4958159",
    "end": "4967940"
  },
  {
    "text": "the simplifying uh the operator crgs when we have a CR configured for The Collector",
    "start": "4967940",
    "end": "4976159"
  },
  {
    "text": "instance we have to Define uh the whole config uh included the receivers",
    "start": "4976159",
    "end": "4981560"
  },
  {
    "text": "processors and the pipelines exporters and what we are trying as a concept uh",
    "start": "4981560",
    "end": "4989239"
  },
  {
    "text": "we are trying to develop zip develop some opinion related",
    "start": "4989239",
    "end": "4994540"
  },
  {
    "text": "crgs with the awareness receiving us CR with the receiver configuration another",
    "start": "4994540",
    "end": "5001239"
  },
  {
    "text": "CR for uh export the configuration and so on and so forth but for now is we are",
    "start": "5001239",
    "end": "5011020"
  },
  {
    "text": "just accepting new ideas and I'd like also to invite any one of you uh yeah to",
    "start": "5011020",
    "end": "5017500"
  },
  {
    "text": "help us developing that simplification of our CRS crgs",
    "start": "5017500",
    "end": "5025600"
  },
  {
    "text": "and also we have as Pavel mentioned we have four different deployments we have",
    "start": "5025600",
    "end": "5031960"
  },
  {
    "text": "sidecar State full set deployment and uh",
    "start": "5031960",
    "end": "5037000"
  },
  {
    "text": "the demons hat uh all of them accept sidecar when we",
    "start": "5037000",
    "end": "5044500"
  },
  {
    "text": "change the configuration doesn't get reloaded and as a final",
    "start": "5044500",
    "end": "5051719"
  },
  {
    "text": "bullet for our roadmap we are developing when we deploy a collector as a sidecar",
    "start": "5051719",
    "end": "5059940"
  },
  {
    "text": "we will reload The Collector instance okay then this is our challenge for yeah",
    "start": "5059940",
    "end": "5068739"
  },
  {
    "text": "the next month and I'd like to invite you anyone again if you want to",
    "start": "5068739",
    "end": "5073960"
  },
  {
    "text": "contribute we have the open Telemetry operator repo",
    "start": "5073960",
    "end": "5080699"
  },
  {
    "text": "and and I guess that's it thank you all",
    "start": "5080699",
    "end": "5087179"
  },
  {
    "text": "thank you questions",
    "start": "5089820",
    "end": "5096480"
  },
  {
    "text": "do you have any questions",
    "start": "5096820",
    "end": "5099780"
  },
  {
    "text": "sorry yes I noticed there's a lot of time the versions but specified for the",
    "start": "5107800",
    "end": "5113380"
  },
  {
    "text": "collectors I assume if I upgrade open Telemetry I would have to go through the",
    "start": "5113380",
    "end": "5119620"
  },
  {
    "text": "individual collectors check their versions and maybe update them too I guess right uh yeah so do you mean the image right",
    "start": "5119620",
    "end": "5127360"
  },
  {
    "text": "for the collection yes yeah so the operator if you don't specify the image it will use the default one which is the",
    "start": "5127360",
    "end": "5134260"
  },
  {
    "text": "the one for the core distribution right and this one is set as a flag I think on",
    "start": "5134260",
    "end": "5142120"
  },
  {
    "text": "the operator deployment so you can override it with the with the contribute",
    "start": "5142120",
    "end": "5148360"
  },
  {
    "text": "distribution as a flag on the operator and once you update the operator then all the instances will be uh you don't",
    "start": "5148360",
    "end": "5155560"
  },
  {
    "text": "have to then you know go and change the the image filter so it would be awesome if it would be possible just to override",
    "start": "5155560",
    "end": "5162280"
  },
  {
    "text": "the image name not dtag so I could get this auto update feature but use my own",
    "start": "5162280",
    "end": "5168520"
  },
  {
    "text": "repository exactly here you just specify the The Collector Distribution on the operator I think it's on the Fly okay",
    "start": "5168520",
    "end": "5175179"
  },
  {
    "text": "okay that's awesome thank you",
    "start": "5175179",
    "end": "5178980"
  },
  {
    "text": "any other question yeah there is one",
    "start": "5181840",
    "end": "5185520"
  },
  {
    "text": "thank you for uh explaining the and the whole structure of the project and I",
    "start": "5188440",
    "end": "5194080"
  },
  {
    "text": "have a question regarding the crds responsible for injecting instrumentation into the",
    "start": "5194080",
    "end": "5200440"
  },
  {
    "text": "into the pods is there a possibility of using the",
    "start": "5200440",
    "end": "5207280"
  },
  {
    "text": "extensions or with custom custom instrumentation as well",
    "start": "5207280",
    "end": "5213520"
  },
  {
    "text": "in these crds for example in case of uh in case of java when we have jar with",
    "start": "5213520",
    "end": "5219219"
  },
  {
    "text": "the agent we also need separate jars with our develop extensions at least",
    "start": "5219219",
    "end": "5225159"
  },
  {
    "text": "that's how I approach it in my project is there like a dedicated field in crd or plan to introduce that there isn't",
    "start": "5225159",
    "end": "5232480"
  },
  {
    "text": "one but the instrumentation CR has option to configure the init container",
    "start": "5232480",
    "end": "5239500"
  },
  {
    "text": "image that contains the agent so you can build your own init container image with",
    "start": "5239500",
    "end": "5244900"
  },
  {
    "text": "Java instrumentation and your extensions uh but it's not going to work because",
    "start": "5244900",
    "end": "5251260"
  },
  {
    "text": "the operator will copy just the Java agents would no the answer is no it's not gonna work if the if the extension",
    "start": "5251260",
    "end": "5257980"
  },
  {
    "text": "is a separate jar right now there is no way to do it but if one embeds and this",
    "start": "5257980",
    "end": "5264520"
  },
  {
    "text": "into the extension and compiles their own agent then it would work so there is a field to customize something like this",
    "start": "5264520",
    "end": "5270219"
  },
  {
    "text": "yeah there is a field to customize the init container with the Java agent okay so if yeah but it's a good proposal",
    "start": "5270219",
    "end": "5276040"
  },
  {
    "text": "maybe if you open issue on the operator we can take it from there all right thank you",
    "start": "5276040",
    "end": "5282480"
  },
  {
    "text": "any other questions",
    "start": "5283480",
    "end": "5286500"
  },
  {
    "text": "yeah hi thank you for the presentation I have a question about serverless like",
    "start": "5293500",
    "end": "5298719"
  },
  {
    "text": "you know how open Telemetry collector can play with for example node.js AWS Lambda application like what would be",
    "start": "5298719",
    "end": "5305500"
  },
  {
    "text": "the approach to I don't know flash uh batch processors plans and I send them to the collector",
    "start": "5305500",
    "end": "5311199"
  },
  {
    "text": "and is there any out of the box solution that supports serverless",
    "start": "5311199",
    "end": "5317080"
  },
  {
    "text": "ly um so with with the operator there's",
    "start": "5317080",
    "end": "5322120"
  },
  {
    "text": "nothing related to that but there isn't project right now really looking also into serverless instrumentation uh I I",
    "start": "5322120",
    "end": "5328960"
  },
  {
    "text": "would recommend that that you reach out to that project so there's a lot of things going on right now",
    "start": "5328960",
    "end": "5334480"
  },
  {
    "text": "um that's the best answer I can give you right now so look into the I think it's called Hotel",
    "start": "5334480",
    "end": "5339940"
  },
  {
    "text": "fast slack Channel over in cncf slack they are highly",
    "start": "5339940",
    "end": "5346060"
  },
  {
    "text": "looking for people asking those kinds of questions and giving feedback on that",
    "start": "5346060",
    "end": "5351280"
  },
  {
    "text": "all right thank you but I believe the SDK should flush the the in-flight Data",
    "start": "5351280",
    "end": "5357340"
  },
  {
    "text": "before it shuts down",
    "start": "5357340",
    "end": "5360599"
  },
  {
    "text": "I tried this and the Lambda doesn't wait for the flash even if I try to wait for",
    "start": "5364020",
    "end": "5369699"
  },
  {
    "text": "Flash function so I did try this and yeah I use passport processor but I'm",
    "start": "5369699",
    "end": "5375280"
  },
  {
    "text": "not sure why it's not you know waiting actually right I did see some tickets about this that's why I wanted like you",
    "start": "5375280",
    "end": "5382060"
  },
  {
    "text": "know best practice approach to AWS anyway to serverless thanks",
    "start": "5382060",
    "end": "5388860"
  },
  {
    "text": "very much and thank you for the talk I was wondering um first of all I think",
    "start": "5395199",
    "end": "5401020"
  },
  {
    "text": "most of the time we want like automatic and manual installation right so we want the basic automatic information but also",
    "start": "5401020",
    "end": "5407980"
  },
  {
    "text": "custom business metrics for example um in that case would I have to or what would I have to do to get both",
    "start": "5407980",
    "end": "5414699"
  },
  {
    "text": "do you have to just um deploy the automatic information at that manual metrics somehow or do I just",
    "start": "5414699",
    "end": "5420940"
  },
  {
    "text": "have to do the manual approach so if you look at the the front-end application",
    "start": "5420940",
    "end": "5426580"
  },
  {
    "text": "that we created in the demo it already has some open Telemetry in it even",
    "start": "5426580",
    "end": "5431739"
  },
  {
    "text": "before we did the instrumentation with the node SDK and this is actually what you can do so so the API when you call",
    "start": "5431739",
    "end": "5438159"
  },
  {
    "text": "it and no SDK is loaded you should just nothing should happen right so and you can even combine this with the auto",
    "start": "5438159",
    "end": "5444219"
  },
  {
    "text": "instrumentation so I think also if you look in the we have the open Telemetry demo so if you go into the open",
    "start": "5444219",
    "end": "5449440"
  },
  {
    "text": "Telemetry docs and look at the open Telemetry demo some of them do are doing act actually that right so there's some",
    "start": "5449440",
    "end": "5456219"
  },
  {
    "text": "Java applications there's some business metrics and business attributes being collected and then the Java agent is",
    "start": "5456219",
    "end": "5462460"
  },
  {
    "text": "used for the for the automatic instrumentation so you can do some mixing of that there is sometimes some",
    "start": "5462460",
    "end": "5468040"
  },
  {
    "text": "situations where things let's say work not as you might expect it but then I ask you to rely on the documentation to",
    "start": "5468040",
    "end": "5475120"
  },
  {
    "text": "reach out to today individual project and ask for that okay thank you very much and just one",
    "start": "5475120",
    "end": "5480760"
  },
  {
    "text": "more thing um I was wondering so we just added a lot of components and but we also had",
    "start": "5480760",
    "end": "5486400"
  },
  {
    "text": "logs and metrics in the beginning of the setup without adding the collectors I was wondering how that worked",
    "start": "5486400",
    "end": "5492820"
  },
  {
    "text": "so we kind of had metrics in the grafana dashboard in mimir before adding the Prometheus stuff and yeah okay uh so the",
    "start": "5492820",
    "end": "5502239"
  },
  {
    "text": "the the most of the languages right now are exposing already a bunch of traces",
    "start": "5502239",
    "end": "5507699"
  },
  {
    "text": "and metrics right so if you look at Python and node.js they give you eight uh some HTTP metrics for for some",
    "start": "5507699",
    "end": "5514900"
  },
  {
    "text": "standard Frameworks just out of the box but we also wanted to show you is the with the Prometheus work is that you can",
    "start": "5514900",
    "end": "5521980"
  },
  {
    "text": "mix and match then right because this is one very important part of open Telemetry that that it really helps you",
    "start": "5521980",
    "end": "5527139"
  },
  {
    "text": "on on your journey with observability and if you already have something like Prometheus then you can just tank that",
    "start": "5527139",
    "end": "5532780"
  },
  {
    "text": "and the really cool thing is I think with the the Java agent is doing this already it's also giving you lock auto",
    "start": "5532780",
    "end": "5538659"
  },
  {
    "text": "instrumentation right so it's looking into your code and it's looking for your lock framework and then turning that",
    "start": "5538659",
    "end": "5545380"
  },
  {
    "text": "into into otlp as well so this is also something stay tuned the next few days",
    "start": "5545380",
    "end": "5550540"
  },
  {
    "text": "and weeks some some more stuff on that will will will come and and make those things a lot easier for you great thank",
    "start": "5550540",
    "end": "5557080"
  },
  {
    "text": "you",
    "start": "5557080",
    "end": "5559260"
  },
  {
    "text": "so I want to make that clear Auto instrumentation is what allowed us to get any of those app metrics all we had",
    "start": "5564280",
    "end": "5570460"
  },
  {
    "text": "were collector metrics from collector scraping itself",
    "start": "5570460",
    "end": "5575280"
  },
  {
    "text": "same for logs Yuri says yeah",
    "start": "5576639",
    "end": "5581260"
  },
  {
    "text": "so one more question can you say something about workloads on Virtual machines how to get the locks into the",
    "start": "5586120",
    "end": "5594460"
  },
  {
    "text": "collector I'm sure there is a approach we don't",
    "start": "5594460",
    "end": "5602380"
  },
  {
    "text": "work with the virtual machines all right thanks I I mean what what you can of",
    "start": "5602380",
    "end": "5608500"
  },
  {
    "text": "course use is the the file lock Receiver right that Yuri showed you you can of course also use this on a virtual",
    "start": "5608500",
    "end": "5614560"
  },
  {
    "text": "machine and if you go into the collector concept repository there's a few other lock receivers as well right so so",
    "start": "5614560",
    "end": "5621219"
  },
  {
    "text": "that's really the same with the metrics you can use different protocols that you",
    "start": "5621219",
    "end": "5626739"
  },
  {
    "text": "have already to to scrape those those files or any any other source of locks",
    "start": "5626739",
    "end": "5632320"
  },
  {
    "text": "that you have that not only locks there are also um what is it called",
    "start": "5632320",
    "end": "5637960"
  },
  {
    "text": "a host metrics receiver which is extracts metrics for you from the host and this yeah you can enable something",
    "start": "5637960",
    "end": "5643540"
  },
  {
    "text": "like this",
    "start": "5643540",
    "end": "5646080"
  },
  {
    "text": "and you also can mount the the file log as a as a volume and basically",
    "start": "5649300",
    "end": "5657760"
  },
  {
    "text": "tells you the Gmail side of the collector hey look uh read the file from",
    "start": "5657760",
    "end": "5662800"
  },
  {
    "text": "this volume no",
    "start": "5662800",
    "end": "5666239"
  },
  {
    "text": "I'm just gonna use it um yeah first of all thank you for the",
    "start": "5670420",
    "end": "5676659"
  },
  {
    "text": "Cool Tools and the comprehensive tutorial and even though it's a Friday afternoon this was great",
    "start": "5676659",
    "end": "5684400"
  },
  {
    "text": "um one question regarding the auto instrumentation I've been listening to the uh what was it I guess Pixies talk",
    "start": "5684400",
    "end": "5690639"
  },
  {
    "text": "earlier and they are doing this with uh ebpf I guess I just wanted to know if",
    "start": "5690639",
    "end": "5695860"
  },
  {
    "text": "you could like compare the um Solutions or the yeah what's the pros and cons in",
    "start": "5695860",
    "end": "5703120"
  },
  {
    "text": "regarding so I prefer this approach that you presented to be honest and I'm",
    "start": "5703120",
    "end": "5708280"
  },
  {
    "text": "already using it and I just wanted to know if you see maybe some pros or cons in this",
    "start": "5708280",
    "end": "5713739"
  },
  {
    "text": "thanks I think it depends on the language so for instance the golang auto",
    "start": "5713739",
    "end": "5721239"
  },
  {
    "text": "instrumentation from hotel is based on the ebpf right but go along is natively compiled",
    "start": "5721239",
    "end": "5727300"
  },
  {
    "text": "language like for Java it's like doesn't make sense to me to write ebpf agents because",
    "start": "5727300",
    "end": "5734380"
  },
  {
    "text": "then you would have to understand how the virtual machine works and it's just much easier to write the the bytecode",
    "start": "5734380",
    "end": "5740560"
  },
  {
    "text": "manipulation for that which is the technology that the current job agent uses",
    "start": "5740560",
    "end": "5747340"
  },
  {
    "text": "it's important in the auto instrumentation to kind of get the",
    "start": "5747340",
    "end": "5752920"
  },
  {
    "text": "context from the runtime so understand you know what is the Handler name what",
    "start": "5752920",
    "end": "5759100"
  },
  {
    "text": "is the the HTTP path and all this data right and like at ebtf level maybe it's",
    "start": "5759100",
    "end": "5765400"
  },
  {
    "text": "it's going to be way more trickier than um than on the on the jvm level",
    "start": "5765400",
    "end": "5772840"
  },
  {
    "text": "if you're just you know comparing like Java and APF yes okay thanks yeah and you can",
    "start": "5772840",
    "end": "5781719"
  },
  {
    "text": "and if you don't use the alt instrumentation you can also customize",
    "start": "5781719",
    "end": "5787260"
  },
  {
    "text": "uh how rich your data are and then basically this is I would say the the",
    "start": "5787260",
    "end": "5795400"
  },
  {
    "text": "pros and Trunks okay thanks",
    "start": "5795400",
    "end": "5801960"
  },
  {
    "text": "thank you any more questions",
    "start": "5804340",
    "end": "5809940"
  },
  {
    "text": "So yeah thank you very much [Applause]",
    "start": "5812560",
    "end": "5819539"
  }
]