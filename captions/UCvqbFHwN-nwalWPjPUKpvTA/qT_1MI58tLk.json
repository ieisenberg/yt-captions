[
  {
    "start": "0",
    "end": "135000"
  },
  {
    "text": "alright the numbers seem to be stabilizing Sony has started my name's Mark Coleman and I'm the marketing",
    "start": "30",
    "end": "6000"
  },
  {
    "text": "chairperson to the CN CF today we've got your skirt oh if I said that correctly who's on the observability team at uber",
    "start": "6000",
    "end": "12420"
  },
  {
    "text": "in New York he's gonna be telling us all about Jaeger 1.0 I'm gonna drop a link",
    "start": "12420",
    "end": "17880"
  },
  {
    "text": "to the github in there so you can add even more stars now if you haven't been",
    "start": "17880",
    "end": "22949"
  },
  {
    "text": "on one of these webinars before first I just dropped the link into the chat for everybody so you can see all the",
    "start": "22949",
    "end": "28830"
  },
  {
    "text": "previous ones that we've done recorded in case any of those are interesting for you we will take questions throughout",
    "start": "28830",
    "end": "34860"
  },
  {
    "text": "but none of you can speak so just drop me questions into either the Q&A or the chat window and I will find opportune",
    "start": "34860",
    "end": "41190"
  },
  {
    "text": "moments when EURion asking those questions Yuri are you are you ready yes",
    "start": "41190",
    "end": "47100"
  },
  {
    "text": "I am okay take it away all right thank you so we will be introducing Jaeger the",
    "start": "47100",
    "end": "55230"
  },
  {
    "text": "supersaturation system a member of CMC F is an agenda I will briefly talk about",
    "start": "55230",
    "end": "60449"
  },
  {
    "text": "what distributed tracing is I will show you a demo of Jaeger on with a sample",
    "start": "60449",
    "end": "65970"
  },
  {
    "text": "application we'll look under the hood in terms of architecture and some of the",
    "start": "65970",
    "end": "71270"
  },
  {
    "text": "sort of technical details of the system I will talk about what is in 1.0 release",
    "start": "71270",
    "end": "79409"
  },
  {
    "text": "what features etc I'll briefly talk about like the future work that we plan",
    "start": "79409",
    "end": "84810"
  },
  {
    "text": "in situ and about the project governance and setup as well as we'll have a time",
    "start": "84810",
    "end": "91829"
  },
  {
    "text": "for Q&A if you if the answer it's like if your questions are not answered during the presentation we'll have",
    "start": "91829",
    "end": "97530"
  },
  {
    "text": "plenty of time at the end to discuss so don't worry about it just brief intro",
    "start": "97530",
    "end": "103020"
  },
  {
    "text": "about myself I am engineer tuber Mike mentioned I am working on that",
    "start": "103020",
    "end": "108329"
  },
  {
    "text": "variability team our team deals with things like metrics alerts logs and",
    "start": "108329",
    "end": "115770"
  },
  {
    "text": "traces and other stuff around that and also the founder of Jaeger it started",
    "start": "115770",
    "end": "122430"
  },
  {
    "text": "here at Auburn few years back and they also offer up on tracing specification which is an API",
    "start": "122430",
    "end": "128459"
  },
  {
    "text": "that's over in libraries in da girl I've recently met so let's kick in so this is a sort of",
    "start": "128459",
    "end": "137250"
  },
  {
    "start": "135000",
    "end": "195000"
  },
  {
    "text": "like a snapshot or a part of the service dependency graph the TA governorates for",
    "start": "137250",
    "end": "143670"
  },
  {
    "text": "uber and when you think about when you use them let's say uber app to order a",
    "start": "143670",
    "end": "149790"
  },
  {
    "text": "car then what happens in inside the circuit exits a microsphere attack",
    "start": "149790",
    "end": "155400"
  },
  {
    "text": "system every request sort of looks like this it's not just hitting one single",
    "start": "155400",
    "end": "160950"
  },
  {
    "text": "services kitten like dozens of different services and hundreds of instances so",
    "start": "160950",
    "end": "166620"
  },
  {
    "text": "it's very typical for us to get a trace which contains maybe I don't know 200 service calls within that within a",
    "start": "166620",
    "end": "173370"
  },
  {
    "text": "single transaction and that happens like billions of times a day because every every second your office is telling",
    "start": "173370",
    "end": "179700"
  },
  {
    "text": "something to children by consistency and this is where the car is going with like the road conditions are etc so as the",
    "start": "179700",
    "end": "187470"
  },
  {
    "text": "engineers if we want to sort of maintain this system this complex system operational and monitor it how do you do",
    "start": "187470",
    "end": "194220"
  },
  {
    "text": "that right so how do we know what's actually going on whether everything is working correctly and the typical answer",
    "start": "194220",
    "end": "201060"
  },
  {
    "start": "195000",
    "end": "235000"
  },
  {
    "text": "is we monitor tools that's what my team is doing the observability team the",
    "start": "201060",
    "end": "206100"
  },
  {
    "text": "classical monitor",
    "start": "206100",
    "end": "208940"
  },
  {
    "text": "you",
    "start": "214550",
    "end": "216610"
  },
  {
    "text": "however the these tools have been designed in the in the days when like",
    "start": "233040",
    "end": "240209"
  },
  {
    "start": "235000",
    "end": "350000"
  },
  {
    "text": "distributed systems and especially systems built on micro services weren't that widespread and so this problems",
    "start": "240209",
    "end": "246120"
  },
  {
    "text": "this systems have a problem with actually dealing with the complexity introduced by micro services this is an",
    "start": "246120",
    "end": "252480"
  },
  {
    "text": "example that I recently got like I was destroying some coal program and it crashed with this line and I was like",
    "start": "252480",
    "end": "259169"
  },
  {
    "text": "there's no step trace or anything a very unusual for go actually to crash in this way so my point is here if we use in",
    "start": "259169",
    "end": "267300"
  },
  {
    "text": "traditional monitoring tools like coal can and metrics what they're telling us is there is something about one",
    "start": "267300",
    "end": "273870"
  },
  {
    "text": "individual instance in this whole whole graph but they don't tell us what the context of that of that event that we",
    "start": "273870",
    "end": "280530"
  },
  {
    "text": "observe right and so rather than today monitoring sort of every instance of the",
    "start": "280530",
    "end": "286830"
  },
  {
    "text": "service separately which is what logs in metrics tattooin is like debugging your whole application without any single",
    "start": "286830",
    "end": "293760"
  },
  {
    "text": "stack trace anywhere and what we really want to monitor are distribute the transactions that transpired within that",
    "start": "293760",
    "end": "299970"
  },
  {
    "text": "system and involve multiple services in one request and also distribute the tracing systems do in a nutshell if we",
    "start": "299970",
    "end": "308130"
  },
  {
    "text": "just to introduce what they ideal the trace and let's say we have a like a top service that the requests enter into our",
    "start": "308130",
    "end": "314130"
  },
  {
    "text": "system as soon as the request enters we assign it the unique ID and we store",
    "start": "314130",
    "end": "319949"
  },
  {
    "text": "that ID in the thing that we usually refer to as the context that context is a request scope that it travels with",
    "start": "319949",
    "end": "326160"
  },
  {
    "text": "that request with that transaction throughout all the other service calls that this request turns though if",
    "start": "326160",
    "end": "332639"
  },
  {
    "text": "service a called here is B then we pass the context around with the request if it's called to more services we",
    "start": "332639",
    "end": "338940"
  },
  {
    "text": "continued buys in that context and because we have this unique ID we can do various things with it we can collect",
    "start": "338940",
    "end": "347520"
  },
  {
    "text": "the time sequence diagram sorry to interrupt you it seems some",
    "start": "347520",
    "end": "352710"
  },
  {
    "start": "350000",
    "end": "432000"
  },
  {
    "text": "people on the strength screen and actually I've got the same thing we can only see your face and not the slides",
    "start": "352710",
    "end": "357750"
  },
  {
    "text": "could you could you perhaps try reshare in the slides I think there was a interruption in service I'll be there",
    "start": "357750",
    "end": "365100"
  },
  {
    "text": "[Music] actually how about that yeah yeah you",
    "start": "365100",
    "end": "374919"
  },
  {
    "text": "can smell that it's full screen and we should be good again all right it was actually that when anyone watching please please let me",
    "start": "374919",
    "end": "381880"
  },
  {
    "text": "know thanks Yuri so yeah so as we",
    "start": "381880",
    "end": "388150"
  },
  {
    "text": "basically is the request Traverse is our architecture and multiple services we keep passing the context around which",
    "start": "388150",
    "end": "394449"
  },
  {
    "text": "contains the unique ID or trace idea and we keep building the time sequence diagram on the right side which also",
    "start": "394449",
    "end": "400479"
  },
  {
    "text": "captures things like what's the causality of individual requests that specifically the call to e service came",
    "start": "400479",
    "end": "407169"
  },
  {
    "text": "from a and not from something else and it came after BC and D service requests",
    "start": "407169",
    "end": "412690"
  },
  {
    "text": "already finished so we can we can view this this understanding of what happens within there within the request so",
    "start": "412690",
    "end": "419710"
  },
  {
    "text": "that's the basic idea of the distributed Tracey it's not very difficult it's not",
    "start": "419710",
    "end": "425139"
  },
  {
    "text": "very difficult to implement and it has been around for quite a while but hasn't caught up until recently so now I want",
    "start": "425139",
    "end": "432550"
  },
  {
    "text": "to jump to the Gemma part of this talk and I will show you so let me edit this",
    "start": "432550",
    "end": "441460"
  },
  {
    "text": "is full screen can you see the the monitor is on the terminal yes",
    "start": "441460",
    "end": "448919"
  },
  {
    "text": "so I'm here in the Jager repository so I'm going around to two applications one",
    "start": "448919",
    "end": "456550"
  },
  {
    "text": "is the standalone version of Jaeger which includes all kinds of bytom's",
    "start": "456550",
    "end": "461620"
  },
  {
    "text": "components in 1.3 just so it's easy to run even it also includes the UI so when",
    "start": "461620",
    "end": "468250"
  },
  {
    "text": "I run it we will see that it is starting",
    "start": "468250",
    "end": "473500"
  },
  {
    "text": "a number of services for example it says starting Jaeger collector it's also",
    "start": "473500",
    "end": "479050"
  },
  {
    "text": "starting yoga query there's also a good agent somewhere we will talk about this one I talked about the architecture but",
    "start": "479050",
    "end": "486030"
  },
  {
    "text": "anyway this is this is Rian so if I go back to the website - the Jaeger UI I",
    "start": "486030",
    "end": "493210"
  },
  {
    "text": "can sort of load this UI from that process so it's accomplished and the",
    "start": "493210",
    "end": "498729"
  },
  {
    "text": "other application which is also included in the in the Jaeger poetry it's like under examples hot rod so it's a Jemma",
    "start": "498729",
    "end": "506139"
  },
  {
    "text": "application that illustrates the features of open tracing and India as",
    "start": "506139",
    "end": "511870"
  },
  {
    "text": "well so when I start that one one thing I want to point out that it also contains multiple services even though",
    "start": "511870",
    "end": "518289"
  },
  {
    "text": "it's one binary you could actually start these services independently if you wanted like I'm saying all but they",
    "start": "518289",
    "end": "524169"
  },
  {
    "text": "could be started one at a time and so there are a number of services we need within this app they all talk to each",
    "start": "524169",
    "end": "530680"
  },
  {
    "text": "other using some remote codes over network and so that obligation also has",
    "start": "530680",
    "end": "538240"
  },
  {
    "text": "the front-end and it looks like this so now just a quick intro to this front-end",
    "start": "538240",
    "end": "546010"
  },
  {
    "start": "540000",
    "end": "720000"
  },
  {
    "text": "so what we have here is basically it's a right on demand a mock application you",
    "start": "546010",
    "end": "551170"
  },
  {
    "text": "you click a button it the backends sort of says I'm dispatching a car it finds",
    "start": "551170",
    "end": "557140"
  },
  {
    "text": "the closest car with the license plate it says when it's arriving and it gives us some debugging information like the",
    "start": "557140",
    "end": "563410"
  },
  {
    "text": "unique request ID and how long this request took on the back end and I will",
    "start": "563410",
    "end": "569079"
  },
  {
    "text": "come back to this web session ID later there are interesting uses for that so",
    "start": "569079",
    "end": "575339"
  },
  {
    "text": "the first thing I want to sort of ask myself when I'm looking at the",
    "start": "575339",
    "end": "580570"
  },
  {
    "text": "application is what is there detect application right and since we're talking about tracing is a monitoring",
    "start": "580570",
    "end": "586540"
  },
  {
    "text": "tool I want to use tools rather than go in and talk to the whoever created that application to understand and so by",
    "start": "586540",
    "end": "593890"
  },
  {
    "text": "executing one single request let me try",
    "start": "593890",
    "end": "602529"
  },
  {
    "text": "again let me restart everything something something went in correctly",
    "start": "602529",
    "end": "608550"
  },
  {
    "text": "you",
    "start": "616920",
    "end": "618980"
  },
  {
    "text": "all right started stirring this one this",
    "start": "622780",
    "end": "629860"
  },
  {
    "text": "day the old one sort of the standalone Jaeger it keeps a memory storage rather",
    "start": "629860",
    "end": "635020"
  },
  {
    "text": "than any persistent store so that's why when every startled the data is lost and that's what I want actually",
    "start": "635020",
    "end": "640600"
  },
  {
    "text": "so again executing one single request and then go into this diagram and now we",
    "start": "640600",
    "end": "648910"
  },
  {
    "text": "get this so it just laid out incorrectly in the in the previous thing so by",
    "start": "648910",
    "end": "655420"
  },
  {
    "text": "observing the behavior through traces of that application we already sort of got",
    "start": "655420",
    "end": "661510"
  },
  {
    "text": "an idea of the architecture of that application you can see that there is a front-end service there's the route",
    "start": "661510",
    "end": "668020"
  },
  {
    "text": "service customer driver and the customers ticket to the MySQL database right so we haven't needed to understand",
    "start": "668020",
    "end": "676540"
  },
  {
    "text": "anything about like going into the details of the application however it doesn't still tell us what exactly how",
    "start": "676540",
    "end": "682120"
  },
  {
    "text": "the application itself is he and what's what's the logic within it like we can look at the logs of this application",
    "start": "682120",
    "end": "689730"
  },
  {
    "text": "there's lots of logs as usual and so this is a typical problem with logs is",
    "start": "689730",
    "end": "695350"
  },
  {
    "text": "that they seem like a good idea but as soon as you start trying in any real service especially micro services based",
    "start": "695350",
    "end": "701440"
  },
  {
    "text": "on the amount of work becomes overwhelming and we can't really make sense in yes so even though we saw the",
    "start": "701440",
    "end": "706839"
  },
  {
    "text": "same like the beginning the same service names here being started but really to understand what the application is doing",
    "start": "706839",
    "end": "712990"
  },
  {
    "text": "a credit card so that's why if we go to the actual traces screens so here I have",
    "start": "712990",
    "end": "722530"
  },
  {
    "start": "720000",
    "end": "890000"
  },
  {
    "text": "a few traces already and captured by a system this some of them are are just",
    "start": "722530",
    "end": "729070"
  },
  {
    "text": "from the front-end I think if we look at this oh this is just like loading the front page of the of the service but",
    "start": "729070",
    "end": "735850"
  },
  {
    "text": "here is the interest one that is the this one is actually the the request to the application itself that produced is",
    "start": "735850",
    "end": "744160"
  },
  {
    "text": "right for us and that's what we're interested in and so when we look at that first of all we see this this",
    "start": "744160",
    "end": "751410"
  },
  {
    "text": "sequence diagram that I was showing in the slide before so it shows us what going on within this call microservice",
    "start": "751410",
    "end": "759110"
  },
  {
    "text": "based application we can see that for example a front-end made a call to customer which made a call to my scale",
    "start": "759110",
    "end": "765529"
  },
  {
    "text": "then front and medical to driver service then it made a bunch of calls to the",
    "start": "765529",
    "end": "770779"
  },
  {
    "text": "route service so already we are getting some idea of the actual business logic",
    "start": "770779",
    "end": "777890"
  },
  {
    "text": "but in this application we also can drill down into the logs which are",
    "start": "777890",
    "end": "783050"
  },
  {
    "text": "captured within the trace but these logs are slightly different from what we see in the standard out because these logs",
    "start": "783050",
    "end": "788660"
  },
  {
    "text": "are attached to individual spans within the trace right so this top-level span is really the different requests that",
    "start": "788660",
    "end": "796250"
  },
  {
    "text": "came to the to the top application to the dispatch route whereas other ones",
    "start": "796250",
    "end": "802130"
  },
  {
    "text": "they can represent individual operations done by experience and so like this one",
    "start": "802130",
    "end": "807140"
  },
  {
    "text": "doesn't have the logs if I go to my SQL query then I do have a box and like acquiring some book with a",
    "start": "807140",
    "end": "813710"
  },
  {
    "text": "transaction I'm also seeing in the tags of the span I can navigate and say okay",
    "start": "813710",
    "end": "819140"
  },
  {
    "text": "well this is the SQL query that was executed by the separation captured automatically by the trace",
    "start": "819140",
    "end": "824540"
  },
  {
    "text": "instrumentation so what this provides us as sort of like what why is it different",
    "start": "824540",
    "end": "830240"
  },
  {
    "text": "from logs and there is like one big difference is that this even though this this tool can also show you the logs",
    "start": "830240",
    "end": "836180"
  },
  {
    "text": "these logs are contextualized to the individual operations in the service so no longer you looking at kind of this",
    "start": "836180",
    "end": "842680"
  },
  {
    "text": "bunch of aggregated log statements across all your services in no particular order you are looking at the",
    "start": "842680",
    "end": "849260"
  },
  {
    "text": "very specific sequence of events which is much easy to understand it tells us exactly what happens within this step of",
    "start": "849260",
    "end": "855560"
  },
  {
    "text": "day of the transaction processing and we actually if we follow it we will see the exact same thing what I described like",
    "start": "855560",
    "end": "860990"
  },
  {
    "text": "getting a customer find the nearest drivers and then finding the shortest",
    "start": "860990",
    "end": "866029"
  },
  {
    "text": "route to to the like to the shorter so the me nearest driver so another thing",
    "start": "866029",
    "end": "872750"
  },
  {
    "text": "that distributed trace and so this is kind of sort of the understanding of what what the application is doing but really as a monitoring tool we also want",
    "start": "872750",
    "end": "879320"
  },
  {
    "text": "to see well what are the problems within the my applications let me do some other request",
    "start": "879320",
    "end": "885730"
  },
  {
    "text": "and search for that okay here's another",
    "start": "885939",
    "end": "891529"
  },
  {
    "start": "890000",
    "end": "1180000"
  },
  {
    "text": "one so notice it says two errors happened so this one we can see it so I",
    "start": "891529",
    "end": "900410"
  },
  {
    "text": "just want to go through this sort of what if you represent so the mini-map just allows us to zoom in on certain",
    "start": "900410",
    "end": "906410"
  },
  {
    "text": "segments of the execution easily it is typical a navigation tool the main",
    "start": "906410",
    "end": "912589"
  },
  {
    "text": "timeline here shows this is basically each service represented by a span by in",
    "start": "912589",
    "end": "918259"
  },
  {
    "text": "operations in the service and it gives the latency of that individual operation and and also they sort of the hierarchy",
    "start": "918259",
    "end": "924259"
  },
  {
    "text": "on the Left provides you causality of which operation cost which other",
    "start": "924259",
    "end": "929269"
  },
  {
    "text": "iterations so we can see for example that a call from front end to driver",
    "start": "929269",
    "end": "935769"
  },
  {
    "text": "find near separation but that iteration itself consisted of find all driver ID",
    "start": "935769",
    "end": "942259"
  },
  {
    "text": "is equal to radius apparently and then a bunch of course to get driver and point",
    "start": "942259",
    "end": "947809"
  },
  {
    "text": "and rate all like some implementation of Redis and so we we can we can you can",
    "start": "947809",
    "end": "955670"
  },
  {
    "text": "see also the performance profile of this request as it happened in the architects right so we can see that for example the",
    "start": "955670",
    "end": "962300"
  },
  {
    "text": "SQL query to what almost like thirty forty percent of the request so if you",
    "start": "962300",
    "end": "967370"
  },
  {
    "text": "were to optimize this thing let's say our latency user visible data suddenly went up this is something that very easy",
    "start": "967370",
    "end": "973670"
  },
  {
    "text": "to see even in the stress but yeah well this is definitely problem we need to dive into that and understand why this SQL statement takes so long another",
    "start": "973670",
    "end": "981350"
  },
  {
    "text": "problem we can see again just not really diving into a lot of details just looking at the time sequence diagram we",
    "start": "981350",
    "end": "987170"
  },
  {
    "text": "can see that IKEA will find nearest drivers there also find all driver IDs",
    "start": "987170",
    "end": "993199"
  },
  {
    "text": "and then for each driver we go and the query individual driver ID and",
    "start": "993199",
    "end": "998509"
  },
  {
    "text": "apparently getting some information with location of the driver in fact we can [Music]",
    "start": "998509",
    "end": "1004529"
  },
  {
    "text": "there's not much info here unfortunately I wonder if this game so you can find",
    "start": "1004529",
    "end": "1010899"
  },
  {
    "text": "driver ideas there is a log statement I just said okay found drivers not that useful but one thing I want to point out",
    "start": "1010899",
    "end": "1018129"
  },
  {
    "text": "is that we you can see the staircase pattern where every night next request sort of starts after the previous request in it and",
    "start": "1018129",
    "end": "1025520"
  },
  {
    "text": "that obviously adds to the latency of the overall operation because in theory",
    "start": "1025520",
    "end": "1031490"
  },
  {
    "text": "like if we know what this application is doing better we would probably confess that all this driver get driver requests",
    "start": "1031490",
    "end": "1037790"
  },
  {
    "text": "could be done in parallel and that would reduce the latency of this from 200 milliseconds to whatever the longest one",
    "start": "1037790",
    "end": "1043100"
  },
  {
    "text": "is and there are also some errors here we see marked in red those are basically",
    "start": "1043100",
    "end": "1049429"
  },
  {
    "text": "ready timeout so we can see in the local that the information so again they also",
    "start": "1049429",
    "end": "1054919"
  },
  {
    "text": "contribute to the agency actually it's proportionately compared to the a successful request and the last final",
    "start": "1054919",
    "end": "1061250"
  },
  {
    "text": "part about the lecture to the Timeline view that I want to point out is that let's look at the last segment of the",
    "start": "1061250",
    "end": "1069140"
  },
  {
    "text": "trace where front-end calls the route service so remember what the business",
    "start": "1069140",
    "end": "1074360"
  },
  {
    "text": "logic here is that we got all the drivers will get their locations and then for every allegation we say in the",
    "start": "1074360",
    "end": "1079970"
  },
  {
    "text": "cable from that location to my customer what's the shortest route and once we get all the all ten routes we would pick",
    "start": "1079970",
    "end": "1087200"
  },
  {
    "text": "the shortest one and say okay this is a driver we want to send to the customer",
    "start": "1087200",
    "end": "1092440"
  },
  {
    "text": "but the behavior here we can see is that there is this three parallel requests",
    "start": "1092440",
    "end": "1099559"
  },
  {
    "text": "going on apparently two to the route service which is the good news I mean there's some parallelism however",
    "start": "1099559",
    "end": "1105740"
  },
  {
    "text": "it's just three even though we had ten drive radius and so we can also see that",
    "start": "1105740",
    "end": "1111919"
  },
  {
    "text": "once all these requests finish watch it once one of them finishes diety the",
    "start": "1111919",
    "end": "1117440"
  },
  {
    "text": "other one starts because in this case they ironically were like very close in time but these ones are different in",
    "start": "1117440",
    "end": "1123559"
  },
  {
    "text": "time and so we can see that this longer one prevented anything from starting idea this point right and so really what",
    "start": "1123559",
    "end": "1130250"
  },
  {
    "text": "we've seen in the in the time sequence is that there is some contention still within this sort of get root operation",
    "start": "1130250",
    "end": "1137720"
  },
  {
    "text": "which prevents the parallelism to just three requests at a time and in fact I",
    "start": "1137720",
    "end": "1143120"
  },
  {
    "text": "can demonstrate that if I do this so I'm sending a lot of requests simultaneously",
    "start": "1143120",
    "end": "1149049"
  },
  {
    "text": "and then if I go and pick the this request and by the way let me find the request by specifically this one so",
    "start": "1149049",
    "end": "1156000"
  },
  {
    "text": "I can grab the license plate because it's a tag that is stored in the span",
    "start": "1156000",
    "end": "1162090"
  },
  {
    "text": "and I can say driver wait I think we",
    "start": "1162090",
    "end": "1174299"
  },
  {
    "text": "change this index recently okay so this",
    "start": "1174299",
    "end": "1179460"
  },
  {
    "text": "is just this long request remember it was 1.5 seconds so this is exactly what it is so if we look at this last segment",
    "start": "1179460",
    "end": "1190039"
  },
  {
    "start": "1180000",
    "end": "1325000"
  },
  {
    "text": "well unfortunately we still cannot see the behavior and but what we can can see",
    "start": "1190039",
    "end": "1197399"
  },
  {
    "text": "is that the my SQL statement now takes almost a second so there is a definitely",
    "start": "1197399",
    "end": "1203039"
  },
  {
    "text": "bottleneck in s application not only it takes so long but it also the more request the system is scanning",
    "start": "1203039",
    "end": "1208200"
  },
  {
    "text": "concurrently the longer this thing takes right and so this is obviously something that we need to optimize by what I was",
    "start": "1208200",
    "end": "1214649"
  },
  {
    "text": "was trying to show is that these individual requests like if you if you have many concurrent requests to the",
    "start": "1214649",
    "end": "1220470"
  },
  {
    "text": "system then you're not even gonna catch three at a time executed but it could be sometimes there is even nothing is",
    "start": "1220470",
    "end": "1226679"
  },
  {
    "text": "executed because the whatever the executor pool that system is using this is limited by three and that's what's",
    "start": "1226679",
    "end": "1233009"
  },
  {
    "text": "brought in this whole thing but actually since we have time I can actually show",
    "start": "1233009",
    "end": "1239159"
  },
  {
    "text": "you some way to hack into this application and fix some of the",
    "start": "1239159",
    "end": "1244740"
  },
  {
    "text": "performance issues so for example they mask your statement this application is the test application so it doesn't",
    "start": "1244740",
    "end": "1251669"
  },
  {
    "text": "actually have database is it's like database is simulated so the customer is",
    "start": "1251669",
    "end": "1257879"
  },
  {
    "text": "called and I think well actually so if",
    "start": "1257879",
    "end": "1275909"
  },
  {
    "text": "we look at what the",
    "start": "1275909",
    "end": "1279110"
  },
  {
    "text": "database right so the database implementation is just it smoking sort of the my SQL statement and this is what",
    "start": "1281210",
    "end": "1287849"
  },
  {
    "text": "we see here we can see that there is actually a lock taken just to simulate",
    "start": "1287849",
    "end": "1292950"
  },
  {
    "text": "the misconfigured connection pool right and so if we take out this lock then we",
    "start": "1292950",
    "end": "1299129"
  },
  {
    "text": "will unblock the parallelism in this particular step and so if I go back I can restart the application and I",
    "start": "1299129",
    "end": "1305279"
  },
  {
    "text": "execute a bunch of requests concurrently start again so let's do them so it still",
    "start": "1305279",
    "end": "1328229"
  },
  {
    "start": "1325000",
    "end": "1640000"
  },
  {
    "text": "takes a while in some cases let's look at the longer one but now we see that the my SQL",
    "start": "1328229",
    "end": "1333779"
  },
  {
    "text": "statement no longer actually blocks the overall request even though the whole latency still increases the more",
    "start": "1333779",
    "end": "1340109"
  },
  {
    "text": "requests are going on and in fact the reason why this latency increases is",
    "start": "1340109",
    "end": "1345619"
  },
  {
    "text": "again this part as well plus this part as I mentioned is the sequential execution of like radius calls really",
    "start": "1345619",
    "end": "1353580"
  },
  {
    "text": "needs to be fixed by using some sort of a thread pool or a number of concurrent",
    "start": "1353580",
    "end": "1359129"
  },
  {
    "text": "requests there is another one another thing that I can fix as they because",
    "start": "1359129",
    "end": "1365339"
  },
  {
    "text": "they might still delay is actually simulated so and I can go and change",
    "start": "1365339",
    "end": "1370349"
  },
  {
    "text": "that delay from 300 milliseconds he wants to make it like even faster we",
    "start": "1370349",
    "end": "1376739"
  },
  {
    "text": "pretend that we just fixed the performance issue with the MySQL storage in some way right and so if we again go",
    "start": "1376739",
    "end": "1384719"
  },
  {
    "text": "and is it get a bunch of requests",
    "start": "1384719",
    "end": "1389749"
  },
  {
    "text": "something all right well I wonder if",
    "start": "1389899",
    "end": "1395070"
  },
  {
    "text": "something is I think it's unusual the zoom is taken my CPU time more than my",
    "start": "1395070",
    "end": "1402149"
  },
  {
    "text": "application actually simulate the latency so again searching for this one",
    "start": "1402149",
    "end": "1408960"
  },
  {
    "text": "so now my skill was very short right one is kind of the same as before but",
    "start": "1408960",
    "end": "1414660"
  },
  {
    "text": "this is what I was mentioning earlier now remember we used to have a concurrency here of three at a time now",
    "start": "1414660",
    "end": "1421170"
  },
  {
    "text": "we don't even get one at a time and because multiple requests they all contend for the same thread pool where",
    "start": "1421170",
    "end": "1426930"
  },
  {
    "text": "it's beautiful and so again the point of this exercise is that I'm not really",
    "start": "1426930",
    "end": "1434010"
  },
  {
    "text": "doing any deep analysis of the application then you sort of profiling and looking at the function calls I'm",
    "start": "1434010",
    "end": "1439260"
  },
  {
    "text": "looking at just a time sequence of the trace and I can solve performance issues and well at least understand what the",
    "start": "1439260",
    "end": "1445320"
  },
  {
    "text": "performance bottlenecks are within this system so let me restore this URI with",
    "start": "1445320",
    "end": "1453840"
  },
  {
    "text": "the speaker time for question or not yeah it could be the time so Alex AG",
    "start": "1453840",
    "end": "1459560"
  },
  {
    "text": "asks he wants you to break the app basically I asked him to be more specific and he said he'd like to see if",
    "start": "1459560",
    "end": "1466200"
  },
  {
    "text": "Jay can catch exceptions for example if the database server is not reachable I'd",
    "start": "1466200",
    "end": "1471780"
  },
  {
    "text": "like to see in the UI is that is that possible well so I mean this is I guess",
    "start": "1471780",
    "end": "1478740"
  },
  {
    "text": "the this application is not really written like this because there's no database service here but it's really I",
    "start": "1478740",
    "end": "1487110"
  },
  {
    "text": "think this is an example of a request which tries to go to pretend the database and it fails because it's not",
    "start": "1487110",
    "end": "1493770"
  },
  {
    "text": "available at the time and so what happens is really we still our I mean it's also depends on how the application",
    "start": "1493770",
    "end": "1500100"
  },
  {
    "text": "is written this application is written in such a way that it's tolerant of Redis timeouts right so it just retry is",
    "start": "1500100",
    "end": "1505320"
  },
  {
    "text": "the same iteration but it does log expand and it says there was an error so",
    "start": "1505320",
    "end": "1510330"
  },
  {
    "text": "if your investigation is something you can even search for for this errors it",
    "start": "1510330",
    "end": "1515340"
  },
  {
    "text": "wouldn't the spend and it will show which show me the traces which contain error right so that's how I would say",
    "start": "1515340",
    "end": "1521580"
  },
  {
    "text": "how you would you would find something being unavailable like another thing is",
    "start": "1521580",
    "end": "1526980"
  },
  {
    "text": "that if there's a stack trace then currently Yaeger doesn't really capture stack traces in full fidelity if you use",
    "start": "1526980",
    "end": "1535860"
  },
  {
    "text": "instrumentation which you can log a stack trace into the trace and it will show up in the logs but the formatting problem is not going",
    "start": "1535860",
    "end": "1542280"
  },
  {
    "text": "to be super great this is something that we can work on future we we want to take some lessons",
    "start": "1542280",
    "end": "1547740"
  },
  {
    "text": "from sentry open-source application which captures likes tetris isn't much by the way and basically it's really",
    "start": "1547740",
    "end": "1554160"
  },
  {
    "text": "just a matter of displaying them better but it will catch them and represent them in the trace like again this the",
    "start": "1554160",
    "end": "1562020"
  },
  {
    "text": "like I showed this this kind of works right so these blocks at the top so",
    "start": "1562020",
    "end": "1567780"
  },
  {
    "text": "there's a tons of logs in this span and so there are errors they would do they can be captured as well here I hope that",
    "start": "1567780",
    "end": "1574590"
  },
  {
    "text": "ends in the question thank you Alex had a follow-up question which is is it possible to instrument JavaScript",
    "start": "1574590",
    "end": "1580050"
  },
  {
    "text": "with Jake agent good question so it is possible to instrument nodejs servers",
    "start": "1580050",
    "end": "1586980"
  },
  {
    "text": "the javascript version is currently being worked on so we were originally released only the node.js version of",
    "start": "1586980",
    "end": "1593850"
  },
  {
    "text": "jäger client so that one works fine for servers for javascript for the front end",
    "start": "1593850",
    "end": "1599580"
  },
  {
    "text": "we just need you to do some work on that node client so that it can be compatible",
    "start": "1599580",
    "end": "1604770"
  },
  {
    "text": "with the browser JavaScript sanctuary Alex a fantastic answer your question",
    "start": "1604770",
    "end": "1610530"
  },
  {
    "text": "just add some more details on the chat we'll come back to it later all right so",
    "start": "1610530",
    "end": "1617190"
  },
  {
    "text": "last thing oh maybe not last thing actually so one thing I just did I I rebooted my changes to again reintroduce",
    "start": "1617190",
    "end": "1624600"
  },
  {
    "text": "the SQL bottleneck and so what I want to do is when I request to this multiple",
    "start": "1624600",
    "end": "1632130"
  },
  {
    "text": "requests again we see in the two latency is climbing so if I go and search for for this traces again and the one I want",
    "start": "1632130",
    "end": "1641010"
  },
  {
    "start": "1640000",
    "end": "2180000"
  },
  {
    "text": "to pick one of the long ones this is probably the longest right and I want to look at the log of this thing and so",
    "start": "1641010",
    "end": "1652830"
  },
  {
    "text": "this is an interesting blog so obviously I remember in the source code there was",
    "start": "1652830",
    "end": "1658320"
  },
  {
    "text": "this blog and it's not a normal go log",
    "start": "1658320",
    "end": "1663390"
  },
  {
    "text": "it's it's an instrumented lock which takes a context and the reason it takes a context is because context is where",
    "start": "1663390",
    "end": "1668640"
  },
  {
    "text": "the the trace information is stored and propagated through within the application so it's a slight",
    "start": "1668640",
    "end": "1674820"
  },
  {
    "text": "modification of the log but what it does it able to tell us not only that okay we're",
    "start": "1674820",
    "end": "1680860"
  },
  {
    "text": "working on this particular look but it also captures which transactions we have broken behind right and and gives us",
    "start": "1680860",
    "end": "1687430"
  },
  {
    "text": "this transaction IDs and so what is the transaction ID that's actually we've",
    "start": "1687430",
    "end": "1692620"
  },
  {
    "text": "seen it here and these are the transaction IDs however what's",
    "start": "1692620",
    "end": "1697810"
  },
  {
    "text": "interesting about this is that if we look at the so it happens within the",
    "start": "1697810",
    "end": "1703600"
  },
  {
    "text": "customer service right customer service is called mysql' so if you look at the URL request of that customer service it",
    "start": "1703600",
    "end": "1711490"
  },
  {
    "text": "looked like this it says give me a customer with customer ID one two three that's fine but there's no information",
    "start": "1711490",
    "end": "1718870"
  },
  {
    "text": "here about the transaction ID so how suddenly the service which is",
    "start": "1718870",
    "end": "1724210"
  },
  {
    "text": "like a database below this customer service and well below the front-end knows this transaction ID which was",
    "start": "1724210",
    "end": "1731410"
  },
  {
    "text": "available only in the front end here so we have the session IDs just occurred every time I reload the page I get a",
    "start": "1731410",
    "end": "1737680"
  },
  {
    "text": "random unique accession ID which is sticky for the HTML page and then each request is sort of unique with that",
    "start": "1737680",
    "end": "1745480"
  },
  {
    "text": "number and that's what I'm seeing in the book and seeing these IDs here right so first of all why is it important what's",
    "start": "1745480",
    "end": "1751750"
  },
  {
    "text": "important because I can actually investigate as well okay I was waiting on the lock on some contention really Oh",
    "start": "1751750",
    "end": "1759100"
  },
  {
    "text": "on the resource so maybe I'm doing some large work but most likely because I'm",
    "start": "1759100",
    "end": "1765490"
  },
  {
    "text": "just waiting most likely it's the other guys who are doing some work is work and that's why I'm working on the queue",
    "start": "1765490",
    "end": "1771610"
  },
  {
    "text": "right and so I can go and find out these transactions and investigate what happened to them why did they take so",
    "start": "1771610",
    "end": "1776890"
  },
  {
    "text": "long so that's one why that's why it's important to have this but it does",
    "start": "1776890",
    "end": "1783160"
  },
  {
    "text": "important part is that like this this whole idea of transaction ID is really not even available at the API of either",
    "start": "1783160",
    "end": "1791020"
  },
  {
    "text": "these services either the customer service doesn't get it in the URL the my skill of visit doesn't get it anywhere",
    "start": "1791020",
    "end": "1797160"
  },
  {
    "text": "because it can't pass that information here but it still knows about it and that's a feature of not just Yaeger it's",
    "start": "1797160",
    "end": "1804400"
  },
  {
    "text": "a feature of opens recently in general it's called baggage so if you remember my",
    "start": "1804400",
    "end": "1810020"
  },
  {
    "text": "with the services I said we propagate the context throughout the kold-draft",
    "start": "1810020",
    "end": "1815929"
  },
  {
    "text": "right well I said we pass a unique idea within that context but that's not just the only thing we can pass we can",
    "start": "1815929",
    "end": "1821450"
  },
  {
    "text": "essentially pass any random key value pairs and make them available throughout",
    "start": "1821450",
    "end": "1826670"
  },
  {
    "text": "the whole call graph just by using this like transparent context propagation mechanism and one of those key value",
    "start": "1826670",
    "end": "1833240"
  },
  {
    "text": "pairs in my example is this transaction ID which is really created by the front-end application it sticks it in",
    "start": "1833240",
    "end": "1839900"
  },
  {
    "text": "the request in the context and that context is becomes available to every single node within the application right",
    "start": "1839900",
    "end": "1846830"
  },
  {
    "text": "this is super powerful feature because not only it allows you to do things like just this lock contention but it also",
    "start": "1846830",
    "end": "1854360"
  },
  {
    "text": "allows a lot of other things and maybe I'll speak to that later a bit and and",
    "start": "1854360",
    "end": "1861380"
  },
  {
    "text": "just to illustrate the same point with another example of this by the way it's",
    "start": "1861380",
    "end": "1867380"
  },
  {
    "text": "called baggage very not mentioned so this is called like key value pair within the context is called baggage",
    "start": "1867380",
    "end": "1872809"
  },
  {
    "text": "because you really care with your request as an extra pile load but take a route service route service again",
    "start": "1872809",
    "end": "1879920"
  },
  {
    "text": "conceptually is just the function well it's a it's a service which says given",
    "start": "1879920",
    "end": "1885020"
  },
  {
    "text": "two locations find the shortest route and give me back some information about right so again it does know anything",
    "start": "1885020",
    "end": "1891830"
  },
  {
    "text": "about the customer doesn't here it doesn't know anything about this transaction idea that was somewhere at the top because it doesn't care however",
    "start": "1891830",
    "end": "1899570"
  },
  {
    "text": "if we look at the metrics emitted by this particular service so I have this X",
    "start": "1899570",
    "end": "1906110"
  },
  {
    "text": "bar which is a functionality that allows me to sort of have a web page showing",
    "start": "1906110",
    "end": "1912140"
  },
  {
    "text": "the metrics so this route service it means these two metrics where it says I spent this many seconds on behalf of",
    "start": "1912140",
    "end": "1919010"
  },
  {
    "text": "this customer and this many seconds on production ID so magic again how does",
    "start": "1919010",
    "end": "1924350"
  },
  {
    "text": "the route service know anything about the customer transaction ID if I didn't have that as part of its API right and",
    "start": "1924350",
    "end": "1930740"
  },
  {
    "text": "the answer is it got them through the baggage and it's able to calculate the centrality resource consumption a Thomas",
    "start": "1930740",
    "end": "1936860"
  },
  {
    "text": "tree service attributed to an ocean or to a piece of data which is only available at the bear",
    "start": "1936860",
    "end": "1942850"
  },
  {
    "text": "top level of the request to enter into the system right so aduba we're using",
    "start": "1942850",
    "end": "1948850"
  },
  {
    "text": "this for various things I know that Google for example also uses that for",
    "start": "1948850",
    "end": "1953920"
  },
  {
    "text": "quite a while so if you're cover what's a big table request all the requests to",
    "start": "1953920",
    "end": "1959260"
  },
  {
    "text": "BigTable actually come with attribution to a particular Google top-level app like Gmail or Google Docs and again the",
    "start": "1959260",
    "end": "1965650"
  },
  {
    "text": "context propagation is what really drives that behavior biased by attaching this information to all the requests",
    "start": "1965650",
    "end": "1971860"
  },
  {
    "text": "with on the on the call graph so super powerful teacher and yes",
    "start": "1971860",
    "end": "1978490"
  },
  {
    "text": "Yeager's fully supports it in all our clients and all languages so what what",
    "start": "1978490",
    "end": "1984580"
  },
  {
    "text": "else can I show you in the demo I guess",
    "start": "1984580",
    "end": "1989970"
  },
  {
    "text": "one other thing I can show you is is just to dive a bit more into the metrics",
    "start": "1990760",
    "end": "1996710"
  },
  {
    "text": "and this is not necessarily the feature jäger backend it's more of a feature of of Jaeger client libraries so again",
    "start": "1996710",
    "end": "2004900"
  },
  {
    "text": "looking at this output this debug web page I can see that they're a bunch of metrics which look like metrics from my",
    "start": "2004900",
    "end": "2011560"
  },
  {
    "text": "service right so it's a service name the metrics name HTTP request so how many requests received at which endpoint",
    "start": "2011560",
    "end": "2019960"
  },
  {
    "text": "which is like slash customer endpoint and for each status code right and so this is the counter you can get the same",
    "start": "2019960",
    "end": "2027460"
  },
  {
    "text": "exact information in the form as Prometheus metrics if you want to it just like a configuration switched application it also gives you a latency",
    "start": "2027460",
    "end": "2034120"
  },
  {
    "text": "of errors or successes and it does it for every service so it's not so unusual",
    "start": "2034120",
    "end": "2041350"
  },
  {
    "text": "to have these metrics you can get it by many other ways what is unusual is that the application itself is actually not",
    "start": "2041350",
    "end": "2047950"
  },
  {
    "text": "doing these metrics any of the services the way they am human that they're not limiting the",
    "start": "2047950",
    "end": "2053740"
  },
  {
    "text": "metrics and neither are the RDC frameworks that they used by the what's",
    "start": "2053740",
    "end": "2060040"
  },
  {
    "text": "emitting this matrix is actually Yeager client because and if you think about what open tration EDI is it's it's a way",
    "start": "2060040",
    "end": "2066700"
  },
  {
    "text": "of describing your transaction with an application right so it happened to be called tracing and it's used primarily",
    "start": "2066700",
    "end": "2073000"
  },
  {
    "text": "filtration but it doesn't have to be you can implement an open tracing tracer",
    "start": "2073000",
    "end": "2078179"
  },
  {
    "text": "simply by immediate metrics from the trace and do nothing else right and and that's like a wrapper really what he",
    "start": "2078179",
    "end": "2084490"
  },
  {
    "text": "what Yaga tracing contains an extra feature which says oh and by the way if you ask a community metrics on for you",
    "start": "2084490",
    "end": "2092200"
  },
  {
    "text": "automatically because really instrumentation will open tracing is a superset of normal metrics",
    "start": "2092200",
    "end": "2097570"
  },
  {
    "text": "instrumentation you'll really count how much each request to in terms of label see how many errors are there common",
    "start": "2097570",
    "end": "2103810"
  },
  {
    "text": "requests in total so it's very easy to actually meet this metrics using trace instrumentation so if you use a Yaeger",
    "start": "2103810",
    "end": "2110530"
  },
  {
    "text": "client you're going to get them for free and enable this thing and one since we",
    "start": "2110530",
    "end": "2115870"
  },
  {
    "text": "are on this on this topic of metrics this is analysis so this page was from 803 83 this is the",
    "start": "2115870",
    "end": "2123010"
  },
  {
    "text": "hot rod application itself so like I said it's not currently configured to send date in the parameters format but",
    "start": "2123010",
    "end": "2130480"
  },
  {
    "text": "if you look at the at the help of it it says that here is metric you can you can",
    "start": "2130480",
    "end": "2137020"
  },
  {
    "text": "say Explorer parameters so so far we're looking at from expire and I can switch it to prometheus but the Yeager back-end itself this this",
    "start": "2137020",
    "end": "2144220"
  },
  {
    "text": "one that I was running it is configured by default with Prometheus metrics and this is what we get and this is the port",
    "start": "2144220",
    "end": "2150910"
  },
  {
    "text": "where the UI is running both all the whole back-end so it gives me similar things also similarities in metrics but",
    "start": "2150910",
    "end": "2159190"
  },
  {
    "text": "it also gives me all bunch of metrics about Jaeger itself about individual Jaeger components like agent Jaeger",
    "start": "2159190",
    "end": "2166120"
  },
  {
    "text": "query service somewhere downstream collector etc so you don't have to do",
    "start": "2166120",
    "end": "2171670"
  },
  {
    "text": "anything it's really like if your character mrs. Runyon you just point it to this URL and you can feel charts and alerts and that's probably monetary acre",
    "start": "2171670",
    "end": "2177970"
  },
  {
    "text": "I think this is a this is all I have in",
    "start": "2177970",
    "end": "2183490"
  },
  {
    "start": "2180000",
    "end": "2659000"
  },
  {
    "text": "terms of the demo I can pause here and for another set of questions great so",
    "start": "2183490",
    "end": "2190810"
  },
  {
    "text": "we've got a couple coming in let's mix up the order a bit Rangaswamy asks does",
    "start": "2190810",
    "end": "2196860"
  },
  {
    "text": "Yaga make use of go templates by a chance no it is not simple questions",
    "start": "2196860",
    "end": "2204850"
  },
  {
    "text": "simple answer there we go Alex has come back with another question which is you Lee if you have a choice between",
    "start": "2204850",
    "end": "2210990"
  },
  {
    "text": "dynaTrace and app D what do you prefer Y and a related question did you hear",
    "start": "2210990",
    "end": "2217090"
  },
  {
    "text": "anything by the open source APM's called pinpoints and inspect it so I don't have",
    "start": "2217090",
    "end": "2225580"
  },
  {
    "text": "an opinion about dynaTrace versus up dynamics I assume because I done the",
    "start": "2225580",
    "end": "2230830"
  },
  {
    "text": "products I cannot use them myself I know that well these specific ones actually I",
    "start": "2230830",
    "end": "2236890"
  },
  {
    "text": "did I don't recall them coming up with support for pond tracing but a lot of other vendors came out with support for",
    "start": "2236890",
    "end": "2243370"
  },
  {
    "text": "open tracing standard what that means is that if let's say you have this hot rod",
    "start": "2243370",
    "end": "2248410"
  },
  {
    "text": "application right it's currently a sentient races to Jaeger but if we look at the source code this application there's only one single",
    "start": "2248410",
    "end": "2254950"
  },
  {
    "text": "place in this qualification that actually binds to the Jaeger if you want to bind it to any other vendor like",
    "start": "2254950",
    "end": "2261720"
  },
  {
    "text": "whatever was what are the vendors like in Stannah data dog New Relic they all",
    "start": "2261720",
    "end": "2269110"
  },
  {
    "text": "came out with support for open tracing so if you want to send trace instead to those tenders you can easily do that",
    "start": "2269110",
    "end": "2274720"
  },
  {
    "text": "with sin usually changing one single line within this application I'm getting similar behavior within there you eyes",
    "start": "2274720",
    "end": "2281070"
  },
  {
    "text": "as far as the ins I forgot was it in inspected I have not looked into that",
    "start": "2281070",
    "end": "2287680"
  },
  {
    "text": "one I know that it's open source but it's also a vendor they also support the con tracing so again yeah you can use",
    "start": "2287680",
    "end": "2293590"
  },
  {
    "text": "that as well Jager is just yet another version I don't know how actually Jager compares",
    "start": "2293590",
    "end": "2298960"
  },
  {
    "text": "with expected thanks Ranga I just saw your last question come in if if that I",
    "start": "2298960",
    "end": "2307540"
  },
  {
    "text": "feel like that did answer your question about New Relic and Splunk if it didn't then please put another question in there Alex asks any plans for PHP Apache",
    "start": "2307540",
    "end": "2316660"
  },
  {
    "text": "agents not for agents so there is",
    "start": "2316660",
    "end": "2324010"
  },
  {
    "text": "actually an open tracing generic Java agent which allows instruments various",
    "start": "2324010",
    "end": "2331450"
  },
  {
    "text": "things so you could use that again it can work with any tracer PHP Jager does",
    "start": "2331450",
    "end": "2337930"
  },
  {
    "text": "have a PHP client libraries kernel on developing it's not official it's still the community contribution at this point",
    "start": "2337930",
    "end": "2343860"
  },
  {
    "text": "so I think that it okay got it",
    "start": "2343860",
    "end": "2350770"
  },
  {
    "text": "the covenants they confessed so let's sum of the Alex s a game about using",
    "start": "2350770",
    "end": "2356050"
  },
  {
    "text": "Jager instrumentation in Java SE apps specifically running custom homegrown",
    "start": "2356050",
    "end": "2362710"
  },
  {
    "text": "protocols okay so the the way a",
    "start": "2362710",
    "end": "2369040"
  },
  {
    "text": "distributed tracing in general works is that it can work over any protocol as long as that protocol allows you to pass",
    "start": "2369040",
    "end": "2376240"
  },
  {
    "text": "some sort of metadata usually as key value pairs right in fact this",
    "start": "2376240",
    "end": "2382270"
  },
  {
    "text": "particular application pattern is using the such such custom product multichannel that overdeveloped long",
    "start": "2382270",
    "end": "2388510"
  },
  {
    "text": "time ago we kind of moving away from it but it is custom it's a binary format but it does support key value pairs as",
    "start": "2388510",
    "end": "2394630"
  },
  {
    "text": "part of the request and so tracing just works and so any other custom protocol",
    "start": "2394630",
    "end": "2400750"
  },
  {
    "text": "which allows sort of tracing from it all like not even traces it's like a metadata information to be attached to",
    "start": "2400750",
    "end": "2406450"
  },
  {
    "text": "the request those protocols can be traced like for example Cassandra Cassandra has a proprietary protocol but it can still",
    "start": "2406450",
    "end": "2413079"
  },
  {
    "text": "be traced it over Tracy thanks Shirley one more here let me just scroll back up",
    "start": "2413079",
    "end": "2418450"
  },
  {
    "text": "find it again yang asks after his new relic question",
    "start": "2418450",
    "end": "2425140"
  },
  {
    "text": "which you already answered yes also is this insolence on the sto service mesh",
    "start": "2425140",
    "end": "2431549"
  },
  {
    "text": "so Easter service mesh currently can",
    "start": "2431549",
    "end": "2437260"
  },
  {
    "text": "work with Jaeger there even you can find example talks about doing this so I'm",
    "start": "2437260",
    "end": "2443619"
  },
  {
    "text": "not sure what yes the Easter is independent really it's the only thing about I should say about serious matters",
    "start": "2443619",
    "end": "2450039"
  },
  {
    "text": "is that they are not magic bullets for tracing because the if you you can",
    "start": "2450039",
    "end": "2455170"
  },
  {
    "text": "actually maybe find my talk at cloud native corn in December where I talked about this the difficult part of",
    "start": "2455170",
    "end": "2465339"
  },
  {
    "text": "distribute the trace in the space and the context within the application that's like passing the context between",
    "start": "2465339",
    "end": "2470380"
  },
  {
    "text": "the application is actually the easy part it just sticks and some grain HTTP headers or something like that but within the application sometimes you",
    "start": "2470380",
    "end": "2476770"
  },
  {
    "text": "need to write your code in a careful way so that the context is not lost right and therefore if you use your service",
    "start": "2476770",
    "end": "2483730"
  },
  {
    "text": "mash then services can take care of all the things like oh I'm gonna create a spans on the server on the client to the",
    "start": "2483730",
    "end": "2491200"
  },
  {
    "text": "causality alter the headers etc but if your application does not actually propagate those headers then you don't",
    "start": "2491200",
    "end": "2497589"
  },
  {
    "text": "you don't get any tracing with service lashes right got you that people may not realize and so there is also another",
    "start": "2497589",
    "end": "2504970"
  },
  {
    "text": "talk at cloud native where we show that how you can get tracing with easier and",
    "start": "2504970",
    "end": "2511109"
  },
  {
    "text": "with easier and open trace instrumentation simulation application and that the second example shows you",
    "start": "2511109",
    "end": "2517180"
  },
  {
    "text": "how much richer the traces become if you if you actually bought like there's a little service and within the service",
    "start": "2517180",
    "end": "2523900"
  },
  {
    "text": "match the service mares can give you very basic tracing thanks Sheree I'm",
    "start": "2523900",
    "end": "2529359"
  },
  {
    "text": "just putting the link to your talk from cube comp in chat now one more question",
    "start": "2529359",
    "end": "2535329"
  },
  {
    "text": "coming in so look do you plans from Alex",
    "start": "2535329",
    "end": "2542109"
  },
  {
    "text": "again do you plan to add plug-in support so that you can collect forms metrics and different apps I JVM metrics over",
    "start": "2542109",
    "end": "2548440"
  },
  {
    "text": "JMX or operating system performance counters so Jaeger is not meant to be a",
    "start": "2548440",
    "end": "2557259"
  },
  {
    "text": "metric system I think a lot of dust is really pretty she's already doing all of",
    "start": "2557259",
    "end": "2562989"
  },
  {
    "text": "these things the Jaeger is really about collecting performance of transactions",
    "start": "2562989",
    "end": "2569979"
  },
  {
    "text": "rather than individual pieces of the application so I'm just rereading this",
    "start": "2569979",
    "end": "2576719"
  },
  {
    "text": "question right no so well I guess one",
    "start": "2576719",
    "end": "2581859"
  },
  {
    "text": "other thing that we do have plans is is to you have some sort of custom metrics",
    "start": "2581859",
    "end": "2587319"
  },
  {
    "text": "within the span where you can like if let's say your application wants to measure one particular thing but make it",
    "start": "2587319",
    "end": "2593920"
  },
  {
    "text": "a contextual measure rather than just plain metric so like if you read Facebook's can it be paper they have",
    "start": "2593920",
    "end": "2600459"
  },
  {
    "text": "example so that so that way is something that we are considering but there is no active okay this one Alex I think we",
    "start": "2600459",
    "end": "2611559"
  },
  {
    "text": "should just like give you each other's phone numbers Alex another question coming it's already",
    "start": "2611559",
    "end": "2617229"
  },
  {
    "text": "plaid actually can you just read them there is their plan to session storage",
    "start": "2617229",
    "end": "2622299"
  },
  {
    "text": "so the team can trace back particular transaction well I mean I see so I guess",
    "start": "2622299",
    "end": "2632079"
  },
  {
    "text": "I'm not sure what's what's meant by session storage I mean traces are definitely stored and",
    "start": "2632079",
    "end": "2637229"
  },
  {
    "text": "in in Cassandra you can have any retention period we also store them like an HDFS at or internally so if you want",
    "start": "2637229",
    "end": "2644019"
  },
  {
    "text": "to keep them for roughly here and them go and blame people so yeah Jagr support",
    "start": "2644019",
    "end": "2649569"
  },
  {
    "text": "persistent trace storage cool thanks Cherie thanks Alex thanks",
    "start": "2649569",
    "end": "2654880"
  },
  {
    "text": "Mona and thanks Brenda okay back over to Yuri alright so I will",
    "start": "2654880",
    "end": "2660430"
  },
  {
    "start": "2659000",
    "end": "3161000"
  },
  {
    "text": "have to hurry up now because we spend a lot of time on questions which is good so let me go back to my presentation I",
    "start": "2660430",
    "end": "2671470"
  },
  {
    "text": "will try to speak fast and cover a bunch of stuff here so what we've seen so far in the demo is that we can do this",
    "start": "2671470",
    "end": "2678040"
  },
  {
    "text": "through the transaction monitor right you can see how transaction progressed with architecture we can do root-cause",
    "start": "2678040",
    "end": "2683080"
  },
  {
    "text": "analysis I've shown how you can analyze why a particular spend within a transaction is slow or where the air is",
    "start": "2683080",
    "end": "2689200"
  },
  {
    "text": "coming from like the greatest time house when we can do performance and lightness that mutations by figuring out what the",
    "start": "2689200",
    "end": "2694630"
  },
  {
    "text": "critical path is what really needs to be optimized first and finally the very first screenshot of the service",
    "start": "2694630",
    "end": "2701440"
  },
  {
    "text": "dependency kind of gives us understanding of architecture and we saw how the baggage or distributed context",
    "start": "2701440",
    "end": "2707050"
  },
  {
    "text": "propagation helps with a lot of other like powerful features that usually not enable with a monitoring traditional",
    "start": "2707050",
    "end": "2715210"
  },
  {
    "text": "monitoring tools so just a few words about Jaeger itself we started it at",
    "start": "2715210",
    "end": "2721180"
  },
  {
    "text": "uber in like two years ago two and a half years ago now open source web in April it's been cnc official projects",
    "start": "2721180",
    "end": "2728350"
  },
  {
    "text": "since last year and it has full operation support including client libraries and the backend on the",
    "start": "2728350",
    "end": "2735250"
  },
  {
    "text": "community side we have about 10 full-time people working on it both at uber and rat-head and we have plenty of",
    "start": "2735250",
    "end": "2741970"
  },
  {
    "text": "contributors on that it happened in used in production by companies already on",
    "start": "2741970",
    "end": "2747370"
  },
  {
    "text": "the technology side - all back in components implemented can go as I mentioned we have like persistent",
    "start": "2747370",
    "end": "2753220"
  },
  {
    "text": "storage back-end we officially support cassandra in elasticsearch the the example I ran here uses in memory",
    "start": "2753220",
    "end": "2759700"
  },
  {
    "text": "storage so it's gone when you started the web front-end is implemented in react and JavaScript and the open",
    "start": "2759700",
    "end": "2766060"
  },
  {
    "text": "tration instrumentation libraries are available in the five languages from here and plus PHP and Ruby are in sort",
    "start": "2766060",
    "end": "2772900"
  },
  {
    "text": "of a community development phase right now the open tration api for those is not finalized either yeah now this might",
    "start": "2772900",
    "end": "2781150"
  },
  {
    "text": "be interesting their detector so imagine this is your application granules cause per container so we typically",
    "start": "2781150",
    "end": "2786920"
  },
  {
    "text": "recommend the sidecar model where there is a Java agent Ryan on the cost as the",
    "start": "2786920",
    "end": "2792170"
  },
  {
    "text": "demon set in communities or any other way you can run on a cost and the reason",
    "start": "2792170",
    "end": "2797869"
  },
  {
    "text": "is so that when the application basically sends traces it sends them over UDP and then that makes the Java",
    "start": "2797869",
    "end": "2804799"
  },
  {
    "text": "client to be not aware of any so the routing concerns or transport protocol",
    "start": "2804799",
    "end": "2809930"
  },
  {
    "text": "concerns you don't have to bring a lot of dependencies in the application because like it is available in every",
    "start": "2809930",
    "end": "2815690"
  },
  {
    "text": "language and we can do very lightweight clients for that and then the Jaeger agent is the one that actually knows how",
    "start": "2815690",
    "end": "2821359"
  },
  {
    "text": "to like 80-acre collector in the backend communicate to them and also there's a feedback loop that's usually used for",
    "start": "2821359",
    "end": "2827210"
  },
  {
    "text": "adapt to something that they'll talk on and on the collector side collectors are",
    "start": "2827210",
    "end": "2832430"
  },
  {
    "text": "fully stateless so you can scale them any way you want and the the persistence is really",
    "start": "2832430",
    "end": "2838220"
  },
  {
    "text": "nothing that Big Data data stores like a sander in elasticsearch people are experimenting also with influx to be",
    "start": "2838220",
    "end": "2844069"
  },
  {
    "text": "silly to be there's a Amazon to be NDP I think someone asked for so we do not",
    "start": "2844069",
    "end": "2851000"
  },
  {
    "text": "officially support those but we're working on the blogging system where people can basically just contribute",
    "start": "2851000",
    "end": "2856400"
  },
  {
    "text": "those as plugins on run side by side with the main Jaeger binary and then",
    "start": "2856400",
    "end": "2861519"
  },
  {
    "text": "Jaeger career is another component we start to freeze the database and format it to the area and the data pipeline is",
    "start": "2861519",
    "end": "2870109"
  },
  {
    "text": "not something that's in open-source yet but we're working on that this is where all the obligations that opinion and",
    "start": "2870109",
    "end": "2876500"
  },
  {
    "text": "like the dependencies diagrams I built the I was keep the data model so",
    "start": "2876500",
    "end": "2883220"
  },
  {
    "text": "I was keep the well actually I want to say a few words about so something is a very important topic to understand so",
    "start": "2883220",
    "end": "2890809"
  },
  {
    "text": "the amount of data that traces capture from transactions can actually sometimes exceed the business record right because",
    "start": "2890809",
    "end": "2897349"
  },
  {
    "text": "it depends on how heavily instrumented applications come when you lock you right into traces so most most racy",
    "start": "2897349",
    "end": "2904250"
  },
  {
    "text": "systems they do not persist all the data in storage because that just too expensive and instead we sample them",
    "start": "2904250",
    "end": "2910549"
  },
  {
    "text": "however sampling doesn't mean that you can just randomly flip sound spans into",
    "start": "2910549",
    "end": "2915589"
  },
  {
    "text": "the storage and some throw away because you want to consistently portray so if you sample one spend of the trace you want all",
    "start": "2915589",
    "end": "2922010"
  },
  {
    "text": "trays expand within the trace to be sample not as well otherwise you just gonna get garbage data as a trace and",
    "start": "2922010",
    "end": "2927320"
  },
  {
    "text": "there are two techniques head by sampling where you make a sound a decision right the beginning of the",
    "start": "2927320",
    "end": "2932930"
  },
  {
    "text": "trace and then give it respect by all the services or you collect all the data first in some temporary storage maybe in",
    "start": "2932930",
    "end": "2939860"
  },
  {
    "text": "memory and and then you make it sampling decision at the end so eager supports the first model that's a classic tapper",
    "start": "2939860",
    "end": "2945620"
  },
  {
    "text": "model there are vendors which do tell by something actually only one lifestyle I",
    "start": "2945620",
    "end": "2950810"
  },
  {
    "text": "know but we are considering that is for Yeager's well it it's like for our",
    "start": "2950810",
    "end": "2956030"
  },
  {
    "text": "traffic duper it was a bit challenging to do full a hundred percent collection",
    "start": "2956030",
    "end": "2961220"
  },
  {
    "text": "even in a temporary storage that's why we haven't done it yet so on day one",
    "start": "2961220",
    "end": "2967550"
  },
  {
    "text": "going to what what did we release right so well we officially really support for Cassandra in elasticsearch we wait made",
    "start": "2967550",
    "end": "2974960"
  },
  {
    "text": "a bunch of improvements to the UI we enabled metrics we have the kubernetes exploit templates and also there's a",
    "start": "2974960",
    "end": "2982430"
  },
  {
    "text": "culture that people developed an open source so that it actually pretty easy",
    "start": "2982430",
    "end": "2987640"
  },
  {
    "text": "instrumentation libraries I mentioned and then there is a backwards compatibility layer with simcha so that",
    "start": "2987640",
    "end": "2992810"
  },
  {
    "text": "if you're already invested in specific instrumentation which is generally not open tracing compliant so you cannot",
    "start": "2992810",
    "end": "2998900"
  },
  {
    "text": "really just go and switch the traces to Jaeger but you can still use those zipping libraries and just configure",
    "start": "2998900",
    "end": "3004720"
  },
  {
    "text": "them to send data to Jaeger pack and then we can accept Pacific and formatted spans and represent them in a Jaeger",
    "start": "3004720",
    "end": "3011920"
  },
  {
    "text": "data so this is I mentioned to a storage format in the UI one of the notable",
    "start": "3011920",
    "end": "3017320"
  },
  {
    "text": "thing is that we've spent a lot of time on performance so that you can go to very life stages like we've tried up to",
    "start": "3017320",
    "end": "3022810"
  },
  {
    "text": "80,000 spans like dual eh don't implementation is kind of sorry company",
    "start": "3022810",
    "end": "3028690"
  },
  {
    "text": "don't in the browser is a bit challenging but we made it work with some tricks",
    "start": "3028690",
    "end": "3035220"
  },
  {
    "text": "mention Zipkin metrics like I said the all the Jaeger components come up with premises by default all the metrics but",
    "start": "3035660",
    "end": "3043400"
  },
  {
    "text": "you can switch to other ones and we actually internally have support for even more metrics but so I think",
    "start": "3043400",
    "end": "3048440"
  },
  {
    "text": "involves the B's current already compiled but we're not focusing too much on that is seriously possible but once",
    "start": "3048440",
    "end": "3054710"
  },
  {
    "text": "we have the plugin systems it might support those better so roadmap is I think an interesting thing so adaptor",
    "start": "3054710",
    "end": "3060829"
  },
  {
    "text": "something that we already have a dragon introduction into word but it's not open source yet the point here that as I",
    "start": "3060829",
    "end": "3068210"
  },
  {
    "text": "mentioned we do upfront sampling and one of the challenges with that is that usually the same thing was done as like",
    "start": "3068210",
    "end": "3074930"
  },
  {
    "text": "one probability per service but if your service has multiple endpoints with different GPS then that one permeability",
    "start": "3074930",
    "end": "3081559"
  },
  {
    "text": "is good for one and not so good follow kpo some point and vice versa and so we adapt if something actually breaks it",
    "start": "3081559",
    "end": "3087890"
  },
  {
    "text": "apart to be per endpoint and the secondly why is it adaptive is because the backend actually keeps track of from",
    "start": "3087890",
    "end": "3094430"
  },
  {
    "text": "I stated its resilience from every service and every endpoint and feeds back the information back to the client saying you should adjust the probability",
    "start": "3094430",
    "end": "3101390"
  },
  {
    "text": "because you're not sending an update or you send it to my state so this is like allows us to control how much day to be",
    "start": "3101390",
    "end": "3107510"
  },
  {
    "text": "getting into a curve back end from old uber services for example the date applied pipeline is our biggest focus",
    "start": "3107510",
    "end": "3114260"
  },
  {
    "text": "for this year is is really so far I've been showing you examples in the demo where I look at once race at the time",
    "start": "3114260",
    "end": "3120770"
  },
  {
    "text": "right and it's useful provided that you can find that race but at uber way like getting several billion",
    "start": "3120770",
    "end": "3127339"
  },
  {
    "text": "races a day and so there's no way anyone can actually look at all of them right so we would by the way snow the state or",
    "start": "3127339",
    "end": "3134480"
  },
  {
    "text": "not being able to find what we want to find so aggregations can come and play here work and we can actually do data",
    "start": "3134480",
    "end": "3140510"
  },
  {
    "text": "mining and say ok we we see in this kind of problem maybe like a long latency tale on this particular service and",
    "start": "3140510",
    "end": "3147230"
  },
  {
    "text": "these are the sample traces so Google look at them so that's a much more viable approach to investigating for",
    "start": "3147230",
    "end": "3153049"
  },
  {
    "text": "most and trying to find this individual traces using just around ensures that you can use in an eager UI and some of",
    "start": "3153049",
    "end": "3161839"
  },
  {
    "start": "3161000",
    "end": "3526000"
  },
  {
    "text": "the examples of this so this is a another rendering pretty but you can actually get this",
    "start": "3161839",
    "end": "3170369"
  },
  {
    "text": "picture with just like Network sniffing because all it really does it just measures how each service talk to each",
    "start": "3170369",
    "end": "3177300"
  },
  {
    "text": "other right this is a pairwise connection is really what it doesn't show you is deeper connections and",
    "start": "3177300",
    "end": "3182760"
  },
  {
    "text": "that's what we have here so in this example so let's let's pick this three",
    "start": "3182760",
    "end": "3188220"
  },
  {
    "text": "services so we see that this made-up name of the services so the service makes a call to shrink so it depends on",
    "start": "3188220",
    "end": "3194430"
  },
  {
    "text": "that service and then shrink makes a call to dog they also demanded it but that's actually this thing you service",
    "start": "3194430",
    "end": "3199589"
  },
  {
    "text": "depends on talk or not from the from this diagram the previous one you can",
    "start": "3199589",
    "end": "3204630"
  },
  {
    "text": "tell that I mean even from this one you can but the tool that we have working on",
    "start": "3204630",
    "end": "3210510"
  },
  {
    "text": "internally is that you can actually just type a search st. Ingo and it will show you it will hide the other services and",
    "start": "3210510",
    "end": "3217140"
  },
  {
    "text": "you will see where there is actually a path from dingo to dog or not and that allows it to do again even deeper",
    "start": "3217140",
    "end": "3223020"
  },
  {
    "text": "dependency analysis of the Sherry's is saying like oh what's my SLA for the service what's my latency SLA all part it maybe",
    "start": "3223020",
    "end": "3231030"
  },
  {
    "text": "I need to look at all my downstream services to kind of figure that out and if you don't know what you're dancing",
    "start": "3231030",
    "end": "3236910"
  },
  {
    "text": "really from previous diagram you only know this thing but with with the more",
    "start": "3236910",
    "end": "3241980"
  },
  {
    "text": "passed by this diagram skip and actually show complete full depth links and this",
    "start": "3241980",
    "end": "3247799"
  },
  {
    "text": "I'm actually one minute so another way is we cannot again finding problematic",
    "start": "3247799",
    "end": "3255630"
  },
  {
    "text": "traces and looking at the latency histograms rather than looking for traces by tags and what we've built here",
    "start": "3255630",
    "end": "3261150"
  },
  {
    "text": "is that so it drove you a latency so I mean the an endpoint",
    "start": "3261150",
    "end": "3266160"
  },
  {
    "text": "I doesn't show here so I filled this sort of another service and it shows me",
    "start": "3266160",
    "end": "3271770"
  },
  {
    "text": "the the diagram and it's interesting because it's it's multimodal right so distribution normally you would hope to",
    "start": "3271770",
    "end": "3278670"
  },
  {
    "text": "have like wondrous calm but here we have a very low range distribution of latency",
    "start": "3278670",
    "end": "3286079"
  },
  {
    "text": "but then there's another hump around like slightly longer and then there is a much worse come over here where is a",
    "start": "3286079",
    "end": "3292079"
  },
  {
    "text": "very really long tail comparatively and so what this diagram allows do is just drill down into this one and",
    "start": "3292079",
    "end": "3298350"
  },
  {
    "text": "say no yeah this is the actual traces that represent this this long tail and you can go and investigate them and",
    "start": "3298350",
    "end": "3304620"
  },
  {
    "text": "those who shows which upstream colors are responsible for most of those traces so again this information could be",
    "start": "3304620",
    "end": "3310620"
  },
  {
    "text": "rather useful so if you were like if you're interested in contributing to Jaeger then we have plenty of issues",
    "start": "3310620",
    "end": "3317340"
  },
  {
    "text": "open and very easy for you to attack like either bonded or beginner to ask for documentation and so really we don't",
    "start": "3317340",
    "end": "3324840"
  },
  {
    "text": "have any CLA you just agree into a certificate of origin which is the linux approach you just need to sign your",
    "start": "3324840",
    "end": "3332340"
  },
  {
    "text": "community with the dashes which puts your name and email address in the commit and blend your work around to go",
    "start": "3332340",
    "end": "3338250"
  },
  {
    "text": "around here and finally this is just a reference page so if you want to get involved if you have any more questions",
    "start": "3338250",
    "end": "3343470"
  },
  {
    "text": "you can come to this chat room on get ur Jaeger tracing there's always people",
    "start": "3343470",
    "end": "3348660"
  },
  {
    "text": "hanging around there so if you have more questions after the seminar feel free to ask them there or on the mailing list we",
    "start": "3348660",
    "end": "3355800"
  },
  {
    "text": "have a blog on the medium with a bunch of posts about Jaeger and also if you",
    "start": "3355800",
    "end": "3362160"
  },
  {
    "text": "interested even more video calls every other Friday so there's a link and the",
    "start": "3362160",
    "end": "3369060"
  },
  {
    "text": "slides I'll share this flight afterwards where so yeah you can join the basically",
    "start": "3369060",
    "end": "3374430"
  },
  {
    "text": "video ghost people to the maintainer listen what we're working on and what kind of project we are doing and so just",
    "start": "3374430",
    "end": "3380940"
  },
  {
    "text": "a few more minutes if you have any more questions",
    "start": "3380940",
    "end": "3385190"
  },
  {
    "text": "so where do we start I'm not sure what come worthless but",
    "start": "3390499",
    "end": "3396660"
  },
  {
    "text": "there is a count chart that you can basically run ho Jaeger installation with a single command is it possible to",
    "start": "3396660",
    "end": "3405630"
  },
  {
    "text": "trace apps that use Kafka yes especially in the latest Kafka the",
    "start": "3405630",
    "end": "3411930"
  },
  {
    "text": "protocol now supports metadata as part of like Generic metadata so it's possible to instrument that and and yeah",
    "start": "3411930",
    "end": "3419369"
  },
  {
    "text": "and trace all the message passing there's really nothing that's preventing there might be some like funny issues",
    "start": "3419369",
    "end": "3425699"
  },
  {
    "text": "with the time scale because most of the traces that happen in RTC world they're very short",
    "start": "3425699",
    "end": "3431099"
  },
  {
    "text": "whereas in Kafka you can calculate of Mesa Tempe that are so the UI might look funny a bit we don't focus on that",
    "start": "3431099",
    "end": "3439789"
  },
  {
    "text": "okay what is the price so overhead is a",
    "start": "3443930",
    "end": "3449059"
  },
  {
    "text": "question that is very difficult to answer because it's completely dependent on your application",
    "start": "3449059",
    "end": "3455480"
  },
  {
    "text": "all right and the workload and the cpu capacity that you have allocated at our",
    "start": "3455480",
    "end": "3460849"
  },
  {
    "text": "application so you can you can essentially get any number and so any number I feel is meaningless but I just",
    "start": "3460849",
    "end": "3468170"
  },
  {
    "text": "can say that in production the more traffic we get the lower probability of",
    "start": "3468170",
    "end": "3473210"
  },
  {
    "text": "sampling we use overall and so with beauty there is no nodes overhead especially in the languages which are",
    "start": "3473210",
    "end": "3479869"
  },
  {
    "text": "like sort of efficient like Java and go where is for example in Python we use",
    "start": "3479869",
    "end": "3486289"
  },
  {
    "text": "internet' the framework it's event will place this framework and there are two paths the context we're using the",
    "start": "3486289",
    "end": "3491809"
  },
  {
    "text": "tornado native stack context that actually adds water for get but it's not really sort of thing ager over get it's",
    "start": "3491809",
    "end": "3498230"
  },
  {
    "text": "just the overhead of the frame or profession the context around all right",
    "start": "3498230",
    "end": "3503240"
  },
  {
    "text": "that's all we got time for we're going to stop now thank you very much Yuri for that fantastic webinar thank you to",
    "start": "3503240",
    "end": "3509390"
  },
  {
    "text": "everyone in the chat for being very active with questions that was good if you want to keep an eye on upcoming",
    "start": "3509390",
    "end": "3515990"
  },
  {
    "text": "events I've just put the CN CF events in there that's all we got time for now",
    "start": "3515990",
    "end": "3521000"
  },
  {
    "text": "thank you very much and goodbye you can bang",
    "start": "3521000",
    "end": "3526299"
  }
]