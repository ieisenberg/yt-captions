[
  {
    "text": "hey everyone we're going to talk about data science for infrastructure um so three steps we think are the three steps observe",
    "start": "160",
    "end": "6480"
  },
  {
    "text": "understand and automate um before we get started uh just a really quick overview uh i'm zane and",
    "start": "6480",
    "end": "12559"
  },
  {
    "text": "this is natalie i'm a gm at new relic and formerly the co-founder and ceo of pixie labs",
    "start": "12559",
    "end": "18400"
  },
  {
    "text": "we got acquired by new relic and both of us are working on the pixie project now and natalie is a prince engineer on our",
    "start": "18400",
    "end": "25199"
  },
  {
    "text": "team so we're both machine learning people by my background and have basically spent",
    "start": "25199",
    "end": "30640"
  },
  {
    "text": "the last decade building scalable data and machine learning systems and we really wanted to try to understand how",
    "start": "30640",
    "end": "36640"
  },
  {
    "text": "to apply our our knowledge from that space into observability and infrastructure",
    "start": "36640",
    "end": "42239"
  },
  {
    "text": "so when we started um you know in the space we started to think that this is just another data problem it's easy for",
    "start": "42239",
    "end": "48320"
  },
  {
    "text": "machines to really you know very quickly generate gigabytes of data but it's really hard for us to actually get",
    "start": "48320",
    "end": "53360"
  },
  {
    "text": "complete coverage especially in distributed environments where it's hard to instrument all your applications",
    "start": "53360",
    "end": "59680"
  },
  {
    "text": "it's also hard to make sure that all the data you collect is relevant and it is difficult to then distill this",
    "start": "59680",
    "end": "65518"
  },
  {
    "text": "information into something that's usable to automate workflows",
    "start": "65519",
    "end": "70560"
  },
  {
    "text": "so we wanted to take what we learned from the data space and um apply it to the infrastructure",
    "start": "70960",
    "end": "78560"
  },
  {
    "text": "and we kind of realized that there's a few different problems that need to get solved so one of them you know i think you've",
    "start": "78560",
    "end": "84479"
  },
  {
    "text": "probably heard about this from everybody is collecting the right data is is very difficult and you know we say it's half",
    "start": "84479",
    "end": "89520"
  },
  {
    "text": "the battle here but in reality it could be way more than half the battle um",
    "start": "89520",
    "end": "94640"
  },
  {
    "text": "and one of the other takeaways from you know our data and machine learning days as that",
    "start": "94640",
    "end": "100640"
  },
  {
    "text": "simple models on good data or relevant data usually outperform very complex models that are built on like skewed or",
    "start": "100640",
    "end": "107200"
  },
  {
    "text": "inaccurate and accurate data the other thing we really learned is that it's really important to be able to",
    "start": "107200",
    "end": "113439"
  },
  {
    "text": "audit and understand what's happening in your data pipelines and that you don't just have like ad hoc systems uh running",
    "start": "113439",
    "end": "119200"
  },
  {
    "text": "your infrastructure so for this we kind of think about how",
    "start": "119200",
    "end": "124799"
  },
  {
    "text": "to break down the steps into three different three different stages the first step is to unders observe your data the next step is to understand it",
    "start": "124799",
    "end": "131360"
  },
  {
    "text": "and the third steps to automate and we'll kind of walk through each of the steps and see what that means",
    "start": "131360",
    "end": "136800"
  },
  {
    "text": "so for data-driven automation the first step is that you gather the raw data so this might be something like",
    "start": "136800",
    "end": "142879"
  },
  {
    "text": "getting the cpu utilization it might be capturing request information",
    "start": "142879",
    "end": "148800"
  },
  {
    "text": "it might be like trying to understand like what are specific parameters in your request and how they impact your latency",
    "start": "148800",
    "end": "154720"
  },
  {
    "text": "in reality most of the time is actually spent over here even though a lot of coverage is given to the next two steps",
    "start": "154720",
    "end": "161200"
  },
  {
    "text": "we'll talk about so the next thing you typically do after you gather the data is you do some kind",
    "start": "161200",
    "end": "166879"
  },
  {
    "text": "of data transformation and this actually gets the most disproportionate emphasis a lot of times people talk about machine learning",
    "start": "166879",
    "end": "172879"
  },
  {
    "text": "models and all sorts of sophisticated tools that can build over here um you know and something over here could",
    "start": "172879",
    "end": "178879"
  },
  {
    "text": "be a simple uh statistical machine learning model it could be a regular expression it could be aggregates there's a whole gamut of",
    "start": "178879",
    "end": "185920"
  },
  {
    "text": "things that it could actually be and the goal over here is to be able to transform the raw data",
    "start": "185920",
    "end": "191440"
  },
  {
    "text": "into some signal that can be usable downstream an example of this is you basically take",
    "start": "191440",
    "end": "197200"
  },
  {
    "text": "let's say cpu information for a bunch of different replicas of your application running and you say oh like",
    "start": "197200",
    "end": "203440"
  },
  {
    "text": "look this particular replica is extremely high relative to the others what's going on",
    "start": "203440",
    "end": "209120"
  },
  {
    "text": "um and the third step is that you take these signals and then you do something",
    "start": "209120",
    "end": "215040"
  },
  {
    "text": "to automate it so you know it's pretty common to be able to generate limits and alerts",
    "start": "215040",
    "end": "220879"
  },
  {
    "text": "um with existing tools but one of the things that we've been pretty excited by and we'll talk about",
    "start": "220879",
    "end": "225920"
  },
  {
    "text": "over here is the possibilities by using the kubernetes api to really connect the",
    "start": "225920",
    "end": "231280"
  },
  {
    "text": "first two steps and then close the loop and by doing that you can ultimately take data all the way",
    "start": "231280",
    "end": "237840"
  },
  {
    "text": "to the entire pipeline have kubernetes go adjust the",
    "start": "237840",
    "end": "243599"
  },
  {
    "text": "actual application parameters and then go back into the cycle gather data transform it and automate you can create",
    "start": "243599",
    "end": "249280"
  },
  {
    "text": "like a full closed loop system",
    "start": "249280",
    "end": "253319"
  },
  {
    "text": "so there are a lot of steps over here um and i don't really want to go into the",
    "start": "255120",
    "end": "260160"
  },
  {
    "text": "details of exactly what types of metrics or what types of information is relevant but just quickly for raw data typically",
    "start": "260160",
    "end": "267440"
  },
  {
    "text": "people are looking at logs metrics and requests for transformations you're looking at",
    "start": "267440",
    "end": "272960"
  },
  {
    "text": "aggregates anomaly detection regular expressions and",
    "start": "272960",
    "end": "278880"
  },
  {
    "text": "on the the signal based stuff you're basically looking at trying to update some systems or be able to do things like allocate",
    "start": "278880",
    "end": "284639"
  },
  {
    "text": "more resources uh there are a bunch more things you can do that will leave for a reference but not that important for",
    "start": "284639",
    "end": "290400"
  },
  {
    "text": "this particular talk so there's a lot of stuff to do over here and how do we actually build a system",
    "start": "290400",
    "end": "296800"
  },
  {
    "text": "that can handle this so you know when we started to build pixie our goal was to build",
    "start": "296800",
    "end": "304000"
  },
  {
    "text": "a data system that we could deploy on clusters to really understand what's going on and then automate",
    "start": "304000",
    "end": "309520"
  },
  {
    "text": "workflows so fixie was built to solve these problems we're gonna have three core principles that you follow the first one",
    "start": "309520",
    "end": "315759"
  },
  {
    "text": "is to try to do as much automated telemetry as possible and we utilize this new kernel technology or maybe a",
    "start": "315759",
    "end": "321440"
  },
  {
    "text": "relatively new kernel technology called ebpf um and there are other talks that talk about this i'm not going to go to",
    "start": "321440",
    "end": "327120"
  },
  {
    "text": "details but in a nutshell it kind of allows you to go insert code dynamically into the kernel",
    "start": "327120",
    "end": "332720"
  },
  {
    "text": "to be able to observe applications the second thing we really wanted to do is make everything scriptable and api",
    "start": "332720",
    "end": "338639"
  },
  {
    "text": "driven uh so you can actually write scripts that can work with the data that's captured automatically",
    "start": "338639",
    "end": "343759"
  },
  {
    "text": "and the third thing is to have a kubernetes native system so that we can actually understand the entities",
    "start": "343759",
    "end": "349840"
  },
  {
    "text": "and be able to work on that so just a quick overview of the features",
    "start": "349840",
    "end": "355520"
  },
  {
    "text": "or feature set of the project um yeah i think i forgot to mention but pixi is an open source",
    "start": "355520",
    "end": "362160"
  },
  {
    "text": "cnc of sandbox project so you can check it out but in terms of auto telemetry using ebpf we can capture",
    "start": "362160",
    "end": "369759"
  },
  {
    "text": "application network and infrastructure data this includes things like application profiles and full body requests and we have pretty low overhead",
    "start": "369759",
    "end": "376639"
  },
  {
    "text": "while doing this you know we say under five percent usually under two percent uh cpu",
    "start": "376639",
    "end": "382800"
  },
  {
    "text": "overhead uh we we basically understand all the kubernetes entities and connect things together",
    "start": "382800",
    "end": "388560"
  },
  {
    "text": "and the third thing which we'll spend a little bit more time on in this talk because it's relevant to the latter part of natalie we'll be",
    "start": "388560",
    "end": "394560"
  },
  {
    "text": "working through some demos is that it's 100 scriptable and api driven",
    "start": "394560",
    "end": "399600"
  },
  {
    "text": "so we really think about this as infrastructure as code we can basically write code to",
    "start": "399600",
    "end": "404960"
  },
  {
    "text": "um to be able to generate all the all the metrics we need to automate and then",
    "start": "404960",
    "end": "411280"
  },
  {
    "text": "this can be accessed to the api so instead of pixie everything is a script our ui actually runs the script as well",
    "start": "411280",
    "end": "417120"
  },
  {
    "text": "um and we can easily integrate in the downstream tools through our api and they're pretty active uh grafana",
    "start": "417120",
    "end": "423599"
  },
  {
    "text": "plugins and plugins for other sas products for pixie",
    "start": "423599",
    "end": "428800"
  },
  {
    "text": "so like i said we'll talk a little bit more in detail about about pixel which provides which is pixies like",
    "start": "428800",
    "end": "435280"
  },
  {
    "text": "language uh that provides us with the capability of building these data science uh like tools",
    "start": "435280",
    "end": "440800"
  },
  {
    "text": "so we kind of have like three principles when we're starting to think about what pixel would be the first thing is we really wanted to be",
    "start": "440800",
    "end": "446720"
  },
  {
    "text": "able to use the query data and build workflows the second is we wanted to be able to automate some more data",
    "start": "446720",
    "end": "451919"
  },
  {
    "text": "collection that we didn't think about a priority and the third thing is we really did not want to invent a new language um because",
    "start": "451919",
    "end": "459280"
  },
  {
    "text": "you know everyone starts off starting to write a new language and it gets very very complex for for users to use",
    "start": "459280",
    "end": "464800"
  },
  {
    "text": "so you can actually see a little snippet of pixel code on this i guess on the right side for everybody",
    "start": "464800",
    "end": "471599"
  },
  {
    "text": "and that particular code and not to go into the details but it's based on",
    "start": "471599",
    "end": "476960"
  },
  {
    "text": "a python uh it's based on python it's actually 100 compiled python and it's based on this library called pandas",
    "start": "476960",
    "end": "483520"
  },
  {
    "text": "which is for data processing and it's very commonly used in data science and",
    "start": "483520",
    "end": "489280"
  },
  {
    "text": "you can basically see over there we're saying oh look at all the http events for the last uh 30 30 seconds and then capture what pod",
    "start": "489280",
    "end": "496879"
  },
  {
    "text": "information is there and then you know pick out some specific columns um i don't really want to watch",
    "start": "496879",
    "end": "502879"
  },
  {
    "text": "the details of the language but you know it basically gives like a pretty simple way to work with data in your system",
    "start": "502879",
    "end": "508879"
  },
  {
    "text": "um so just to recap pixel's an embedded dsl so it is still like a domain specific language it doesn't work like",
    "start": "508879",
    "end": "514159"
  },
  {
    "text": "generic python but it is valid python uh and in particular it is valid pandas",
    "start": "514159",
    "end": "521440"
  },
  {
    "text": "which is very common in data science um and it's built for data analysis and machine learning so we have core",
    "start": "521440",
    "end": "527279"
  },
  {
    "text": "capabilities like you know running tensorflow models inside a pixel or being able to run aggregates",
    "start": "527279",
    "end": "533920"
  },
  {
    "text": "and joins and stuff pretty quickly in particular you know just to go into one more level of detail pixel is what",
    "start": "533920",
    "end": "540320"
  },
  {
    "text": "people call a data flow language so it specifies what is a logical flow of data",
    "start": "540320",
    "end": "546720"
  },
  {
    "text": "and it's really pixi's job to figure out how to optimize and execute this so that it's efficient in your system",
    "start": "546720",
    "end": "554000"
  },
  {
    "text": "um so the next step you're probably interested in is what can pixel actually do so",
    "start": "554000",
    "end": "559600"
  },
  {
    "text": "pixel scripts can be used to transform and analyze your data just some of the things we support",
    "start": "559600",
    "end": "565360"
  },
  {
    "text": "our aggregates joins filters there are a lot more things to do but the good thing about pixel is that it is",
    "start": "565360",
    "end": "572720"
  },
  {
    "text": "composable so it's a declarative spec which means that you know it's kind of like sql you say like these are the",
    "start": "572720",
    "end": "577760"
  },
  {
    "text": "stuffs that are done um it is fully functional with no implicit side effects uh which means that you can build workflows off of off",
    "start": "577760",
    "end": "584320"
  },
  {
    "text": "of each other um and if you take a look at you know pixies ui if you get a chance to check that out you'll actually see that we",
    "start": "584320",
    "end": "589839"
  },
  {
    "text": "pretty much compose multiple scripts together to be able to generate our entire user interface",
    "start": "589839",
    "end": "596399"
  },
  {
    "text": "um so to recap you know pixel provides an interface to work with data it allows us to construct powerful composable",
    "start": "596480",
    "end": "602720"
  },
  {
    "text": "workflows um and the next step over here is that we have",
    "start": "602720",
    "end": "608320"
  },
  {
    "text": "a couple of demos that will actually demonstrate those capability that natalie will walk through so the first one",
    "start": "608320",
    "end": "615519"
  },
  {
    "text": "is doing slack alert on sql injection attacks so it's like we'll not only will talk to what sql injection is but if",
    "start": "615519",
    "end": "621680"
  },
  {
    "text": "there's a sql injection attack in your cluster we'll be able to flag that and generate a slack alert uh the second demo we'll actually take a look at http",
    "start": "621680",
    "end": "628720"
  },
  {
    "text": "request throughput and auto scale your kubernetes cluster um",
    "start": "628720",
    "end": "634640"
  },
  {
    "text": "uh these are thank you um so these are all like pretty simple",
    "start": "634640",
    "end": "641519"
  },
  {
    "text": "simple examples right but our goal is to be able to you know build these up and get more feedback on what we can do",
    "start": "641519",
    "end": "648560"
  },
  {
    "text": "with that i'll hand it over to natalie for the demos great thanks zane",
    "start": "648560",
    "end": "654800"
  },
  {
    "text": "okay sounds like this mic works so as he said i'm natalie i'm going to be taking you through some of",
    "start": "654800",
    "end": "660640"
  },
  {
    "text": "these demos that are kind of meant to be proofs of concept to illustrate some of the principles he was talking about",
    "start": "660640",
    "end": "666480"
  },
  {
    "text": "before about how we can automate more of our workflows using the raw telemetry data that exists in all of our",
    "start": "666480",
    "end": "672720"
  },
  {
    "text": "applications um first we would need to deploy pixie to a",
    "start": "672720",
    "end": "678640"
  },
  {
    "text": "cluster uh this takes about three minutes so i've created a video to kind of fast",
    "start": "678640",
    "end": "684320"
  },
  {
    "text": "forward that for you um but i think what we're trying to illustrate here is you know how we're",
    "start": "684320",
    "end": "690000"
  },
  {
    "text": "trying to set a path where it's much easier to collect data with ebpf instead of",
    "start": "690000",
    "end": "695600"
  },
  {
    "text": "spending a lot of time manually instrumenting your application you can just run something like pxdeploy or",
    "start": "695600",
    "end": "701519"
  },
  {
    "text": "other ebpf-based tools and automatically start collecting this raw data from your cluster",
    "start": "701519",
    "end": "708880"
  },
  {
    "text": "okay so as in said the first demo is going to be creating a slack alert in order to",
    "start": "711760",
    "end": "718079"
  },
  {
    "text": "detect or creating uh sorry creating a pipeline to detect and do a slack alert",
    "start": "718079",
    "end": "724000"
  },
  {
    "text": "when we think that there may be a possible sql injection attack so for this demo before i get into what",
    "start": "724000",
    "end": "731040"
  },
  {
    "text": "a sql injection attack is we're going to be using dvwa which is a well-known",
    "start": "731040",
    "end": "738320"
  },
  {
    "text": "security project and i'm just going to pop up for you",
    "start": "738320",
    "end": "745639"
  },
  {
    "text": "i think my port forward has stopped let me just get that back up",
    "start": "749440",
    "end": "755600"
  },
  {
    "text": "basically this is a kind of like a test security application that is used in the security industry",
    "start": "757760",
    "end": "764079"
  },
  {
    "text": "that has a lot of known vulnerabilities in it and so um basically it is",
    "start": "764079",
    "end": "769600"
  },
  {
    "text": "intentionally built to be insecure and so people can use it as a testing ground",
    "start": "769600",
    "end": "774639"
  },
  {
    "text": "for running different kinds of attacks so basically",
    "start": "774639",
    "end": "780480"
  },
  {
    "text": "you know we're using this in order to you know demonstrate uh you know",
    "start": "780480",
    "end": "787120"
  },
  {
    "text": "the sql injection uh detection that we're doing",
    "start": "787120",
    "end": "791760"
  },
  {
    "text": "um i guess i'll go back to sharing",
    "start": "793920",
    "end": "799680"
  },
  {
    "text": "oh actually uh one thing first so um",
    "start": "799680",
    "end": "805600"
  },
  {
    "text": "just to kind of you know show some of the data that pixie can collect let's run a sql query with dvwa that isn't",
    "start": "805600",
    "end": "813519"
  },
  {
    "text": "actually a sql injection so let's say i just want to run a single sql command",
    "start": "813519",
    "end": "822480"
  },
  {
    "text": "it should have executed now i'm actually going to use pixi in order to",
    "start": "822480",
    "end": "828560"
  },
  {
    "text": "you know see that this query has been executed and this is a very simple view in pixi",
    "start": "828560",
    "end": "835040"
  },
  {
    "text": "but it basically collects all the mysql data on your cluster so uh i guess i should say that we've",
    "start": "835040",
    "end": "841519"
  },
  {
    "text": "deployed this dvwa application to our kubernetes cluster so that's how pixi's collecting this data",
    "start": "841519",
    "end": "848320"
  },
  {
    "text": "so if we were to kind of inspect this row we could see that we're actually able to capture the full sql request that i just",
    "start": "848320",
    "end": "856560"
  },
  {
    "text": "executed right here in pixie the font may be a little small but that is the fubar 123 that i just",
    "start": "856560",
    "end": "863519"
  },
  {
    "text": "executed so",
    "start": "863519",
    "end": "869360"
  },
  {
    "text": "let's go back to what actually is a sql injection um well i didn't want to come up with a",
    "start": "869360",
    "end": "875519"
  },
  {
    "text": "definition for you because security experts are much much better about that but the way we think about it is it's",
    "start": "875519",
    "end": "881199"
  },
  {
    "text": "just a way to for people to try to run malicious sql in your application in order to get information that they're",
    "start": "881199",
    "end": "887199"
  },
  {
    "text": "not meant to have access to so just to take a very very simple example",
    "start": "887199",
    "end": "893680"
  },
  {
    "text": "it's worth noting there are many many kinds of sql injections so this is not a cohesive you know complete example there",
    "start": "893680",
    "end": "900800"
  },
  {
    "text": "are many kinds but an example one would be let's say i have an endpoint where i pass a user id like the one i just",
    "start": "900800",
    "end": "907279"
  },
  {
    "text": "showed you in dvwa so i pass in user id equals one two three",
    "start": "907279",
    "end": "913839"
  },
  {
    "text": "on the back end my application executes select star from users where user id equals one two three this is intended to",
    "start": "913839",
    "end": "920880"
  },
  {
    "text": "give me the information for that user but a malicious actor put something that",
    "start": "920880",
    "end": "927440"
  },
  {
    "text": "isn't an id in there let's see what happens when that occurs",
    "start": "927440",
    "end": "933600"
  },
  {
    "text": "the application would execute if it was naively implemented select star from users where user id equals one two three",
    "start": "934639",
    "end": "941600"
  },
  {
    "text": "or one equals one this would effectively return all of the user co users in the table",
    "start": "941600",
    "end": "948720"
  },
  {
    "text": "this would be really bad so i'm going to talk about sql injection",
    "start": "948720",
    "end": "954160"
  },
  {
    "text": "detection which we think is really important because no application is perfect and free from vulnerabilities but it's worth",
    "start": "954160",
    "end": "961440"
  },
  {
    "text": "noting that prevention is really really important when it comes to sql injections so",
    "start": "961440",
    "end": "967279"
  },
  {
    "text": "detection is only part of the story we really want to be as application developers thinking about security and",
    "start": "967279",
    "end": "973199"
  },
  {
    "text": "doing prevention as a first step but let's say that we have an application out in the wild and we want",
    "start": "973199",
    "end": "979680"
  },
  {
    "text": "to make sure it's not running any sql injection attacks there's two main ways that we can do",
    "start": "979680",
    "end": "985199"
  },
  {
    "text": "this once we have a list of all the sql statements that the code is running the first is a rules-based approach",
    "start": "985199",
    "end": "992079"
  },
  {
    "text": "you might say i'm going to parse all my sql queries and make sure that it's not actually using any syntax that i have",
    "start": "992079",
    "end": "999279"
  },
  {
    "text": "deemed prohibited such as unions",
    "start": "999279",
    "end": "1004000"
  },
  {
    "text": "you could also use regax's to detect this type of syntax there's a complication with this",
    "start": "1005040",
    "end": "1010880"
  },
  {
    "text": "approach which is what if there is a legitimate use of that type of syntax in your query",
    "start": "1010880",
    "end": "1018560"
  },
  {
    "text": "another way you can do it is using machine learning you can train your model on real world examples of things that are legitimate",
    "start": "1019600",
    "end": "1026558"
  },
  {
    "text": "queries and things that are sql injection attacks that could theoretically learn that",
    "start": "1026559",
    "end": "1032160"
  },
  {
    "text": "using a union in this scenario is okay but using it in a different scenario is not okay",
    "start": "1032160",
    "end": "1038160"
  },
  {
    "text": "a major complication with this is where to get the data set you have to have a list of data that",
    "start": "1038160",
    "end": "1044959"
  },
  {
    "text": "you know has known sql injection attacks that reflect your application so this can actually be a major blocker to doing",
    "start": "1044959",
    "end": "1050960"
  },
  {
    "text": "something like the machine learning based approach um and so",
    "start": "1050960",
    "end": "1057120"
  },
  {
    "text": "uh for this uh demo i'm actually just going to be doing a rules based approach with regex's but as the instead pixel",
    "start": "1057120",
    "end": "1064480"
  },
  {
    "text": "supports running tensorflow models so if you were to have the data set available to train a model on",
    "start": "1064480",
    "end": "1070080"
  },
  {
    "text": "detecting sql injection attacks using machine learning you could easily you know plug that in instead of the regex based approach",
    "start": "1070080",
    "end": "1078720"
  },
  {
    "text": "just want to call out in addition to dvwa a tool that is helping this demo is",
    "start": "1079280",
    "end": "1084400"
  },
  {
    "text": "sql map it's a really cool command line utility that basically tries to attack your",
    "start": "1084400",
    "end": "1090000"
  },
  {
    "text": "database and figure out are there vulnerabilities in it that exist and so we're going to be using that today",
    "start": "1090000",
    "end": "1097679"
  },
  {
    "text": "okay so let us get started",
    "start": "1100880",
    "end": "1106919"
  },
  {
    "text": "first off we want to have the script that actually detects the sql injection attack so what this script is doing right here",
    "start": "1109280",
    "end": "1116160"
  },
  {
    "text": "is it's actually just showing you hey what are the sql queries that exist in my cluster but we actually want one that",
    "start": "1116160",
    "end": "1123840"
  },
  {
    "text": "runs pattern matching to detect what one could be a sql query or a sql injection",
    "start": "1123840",
    "end": "1129039"
  },
  {
    "text": "so let's first populate the uh table with some sql injection attacks",
    "start": "1129039",
    "end": "1136080"
  },
  {
    "text": "using sql map like we just said i'm going to point it at my dvwa",
    "start": "1136080",
    "end": "1144960"
  },
  {
    "text": "i'm going to say yes to various things",
    "start": "1146480",
    "end": "1151160"
  },
  {
    "text": "now it's running a bunch of tests it's trying to attack the it's trying to attack the database and execute malicious code",
    "start": "1154559",
    "end": "1161840"
  },
  {
    "text": "the data tends to pop up pretty quickly so what we can see here is that the sql commands that this thing has been",
    "start": "1163760",
    "end": "1169600"
  },
  {
    "text": "running are showing up in this view",
    "start": "1169600",
    "end": "1173120"
  },
  {
    "text": "so i've written a script or i have not written a script we have written a script we asked usually the help of a",
    "start": "1174960",
    "end": "1180080"
  },
  {
    "text": "security team who wrote a great blog about this guest blog on our blog website",
    "start": "1180080",
    "end": "1185760"
  },
  {
    "text": "to basically look at all the request bodies for the sql queries and try to",
    "start": "1186000",
    "end": "1191360"
  },
  {
    "text": "label them like which rule has it broken so what we're going to do is instead of",
    "start": "1191360",
    "end": "1197760"
  },
  {
    "text": "the script that was running here that's querying the mysql data we're going to add a little bit more functionality to this script and actually",
    "start": "1197760",
    "end": "1204559"
  },
  {
    "text": "try to classify possible injections",
    "start": "1204559",
    "end": "1208960"
  },
  {
    "text": "so basically this script has successfully given us a list of these injections",
    "start": "1209679",
    "end": "1216400"
  },
  {
    "text": "now some of these might be legitimate queries but you know we just want to flag things",
    "start": "1216400",
    "end": "1221600"
  },
  {
    "text": "that are breaking the rules that we've said aren't allowed so what we can see right here is that",
    "start": "1221600",
    "end": "1226880"
  },
  {
    "text": "someone wrote a very someone aka sql map wrote a very suspicious looking query",
    "start": "1226880",
    "end": "1231919"
  },
  {
    "text": "right here this does not look like a user id to me",
    "start": "1231919",
    "end": "1236720"
  },
  {
    "text": "and we have the rule broken unmatched single quotes but the thing is that i don't want to",
    "start": "1237440",
    "end": "1243679"
  },
  {
    "text": "have to actually try to manually run these queries every time i want to actually be",
    "start": "1243679",
    "end": "1248960"
  },
  {
    "text": "alerted when there is a sql vulnerability in my application so because pixi has an api",
    "start": "1248960",
    "end": "1256080"
  },
  {
    "text": "we've actually created a slack bot that will",
    "start": "1256080",
    "end": "1261280"
  },
  {
    "text": "alert my slack when there is a problem",
    "start": "1261280",
    "end": "1266720"
  },
  {
    "text": "that looks like it could be a sql injection so basically the slackbot took the exact same script that i just showed you and",
    "start": "1266720",
    "end": "1273840"
  },
  {
    "text": "it's going to use pixi's api to ping slack or to to create the data set that will then ping",
    "start": "1273840",
    "end": "1280240"
  },
  {
    "text": "slack if we see an attack",
    "start": "1280240",
    "end": "1284400"
  },
  {
    "text": "so we're going to let's first create some more attacks",
    "start": "1286720",
    "end": "1293120"
  },
  {
    "text": "and if the demo gods are with me we should see oh",
    "start": "1300159",
    "end": "1305360"
  },
  {
    "text": "it's detected a possible sql injection so this thing has told me that the you",
    "start": "1305360",
    "end": "1310400"
  },
  {
    "text": "know a symbol or i guess it just always runs this one first unmatched single quote",
    "start": "1310400",
    "end": "1316639"
  },
  {
    "text": "it's running this one a few times and so what we can see now is that i have a full data pipeline that is looking at my",
    "start": "1317039",
    "end": "1324559"
  },
  {
    "text": "sql data and pinging me on slack whenever it detects a possible injection so here's a new one comment dashes this",
    "start": "1324559",
    "end": "1332320"
  },
  {
    "text": "definitely looks suspicious",
    "start": "1332320",
    "end": "1335600"
  },
  {
    "text": "so to recap we've basically applied the same thing that zane has talked about which is we use pixi to gather raw data and",
    "start": "1339919",
    "end": "1346880"
  },
  {
    "text": "transform it into a signal by collecting these raw sql events and using a script to try to",
    "start": "1346880",
    "end": "1353360"
  },
  {
    "text": "use regexes to establish which ones might be sql injections and then we're doing something based on",
    "start": "1353360",
    "end": "1358880"
  },
  {
    "text": "the signal which is pinging slack because we see that there's been a problem",
    "start": "1358880",
    "end": "1364399"
  },
  {
    "text": "all right let's move into the next demo for a completely different use case which is basically workload scaling",
    "start": "1364799",
    "end": "1372480"
  },
  {
    "text": "so i think a lot of us who use kubernetes might run into these questions often how big should my deployment be how many",
    "start": "1373120",
    "end": "1380159"
  },
  {
    "text": "pods are necessary for the service how many pods are necessary for this service if they",
    "start": "1380159",
    "end": "1386799"
  },
  {
    "text": "have a lot of cpu and memory associated with them both the size of the pot itself in terms",
    "start": "1386799",
    "end": "1392960"
  },
  {
    "text": "of the resources it gets and the number of pods are important factors in sizing and deployment",
    "start": "1392960",
    "end": "1399440"
  },
  {
    "text": "it's also worth noting that the size that my deployment needs might not be the same all the time 2 a.m in my time",
    "start": "1400080",
    "end": "1406559"
  },
  {
    "text": "zone versus like black friday or something like that i might have completely different needs for the size of my deployment",
    "start": "1406559",
    "end": "1413679"
  },
  {
    "text": "so there's various things that we could use to size these deployments one of the most common ones is using the",
    "start": "1413679",
    "end": "1419840"
  },
  {
    "text": "cpu and memory usage of the pod if my cpu and memory usage of my pot is high i should probably add more pods because",
    "start": "1419840",
    "end": "1426159"
  },
  {
    "text": "that one looks over taxed i might want to look at things like request latency this request is taking",
    "start": "1426159",
    "end": "1432320"
  },
  {
    "text": "too long maybe the pod has some kind of resource utilization issue",
    "start": "1432320",
    "end": "1438000"
  },
  {
    "text": "maybe i want to look at the latency of my downstream dependencies maybe i want to look at my number of",
    "start": "1438240",
    "end": "1443440"
  },
  {
    "text": "outbound connections maybe i want to look at application specific metrics like how long this",
    "start": "1443440",
    "end": "1448559"
  },
  {
    "text": "particular function is taking there's so many things that we could use in order to drive the auto scaling of",
    "start": "1448559",
    "end": "1454960"
  },
  {
    "text": "the deployments also um all of these slides are are par are uploaded to the session so if you",
    "start": "1454960",
    "end": "1461120"
  },
  {
    "text": "want to look at them for reference later they're available kubernetes is amazing it has such an api",
    "start": "1461120",
    "end": "1468720"
  },
  {
    "text": "driven approach and it makes auto scaling based on these complex factors possible",
    "start": "1468720",
    "end": "1474559"
  },
  {
    "text": "right off the bat it supports both horizontal and vertical auto scaling horizontal basically increases the",
    "start": "1474559",
    "end": "1480240"
  },
  {
    "text": "number of pods in a deployment vertical increases the amount of resources allocated to a pod",
    "start": "1480240",
    "end": "1487840"
  },
  {
    "text": "so built in it has the ability to auto scale on cpu and memory like i said",
    "start": "1487840",
    "end": "1493440"
  },
  {
    "text": "these are very common ones to use and they're very valuable but it also allows you to define your",
    "start": "1493440",
    "end": "1499840"
  },
  {
    "text": "own custom metrics things that you know your deployment cares about something like cpu or memory applies to",
    "start": "1499840",
    "end": "1506320"
  },
  {
    "text": "everyone but you may have something very specific for your application that you need to scale on the custom metrics api is really useful",
    "start": "1506320",
    "end": "1513600"
  },
  {
    "text": "because you can hook in your own metric into the auto scaler to add more pods or add more resources to a pod",
    "start": "1513600",
    "end": "1520720"
  },
  {
    "text": "we're going to be using a very sophisticated demo app",
    "start": "1521200",
    "end": "1525440"
  },
  {
    "text": "it's basically just an echo server but it is enough to kind of make the point about auto scaling",
    "start": "1526320",
    "end": "1533440"
  },
  {
    "text": "that was meant to be a joke people anyway um you know the kubernetes sig did this",
    "start": "1533520",
    "end": "1540640"
  },
  {
    "text": "amazing uh basically like demo app of how to make a custom",
    "start": "1540640",
    "end": "1546080"
  },
  {
    "text": "kubernetes metrics api server so we're really appreciative of the work they did in putting that together because we",
    "start": "1546080",
    "end": "1551919"
  },
  {
    "text": "based this example off that api server if you want to build your own you should totally use this project as a starting",
    "start": "1551919",
    "end": "1558080"
  },
  {
    "text": "point also we're using uh the tool called hey for http load testing uh rackle aka yana",
    "start": "1558080",
    "end": "1565600"
  },
  {
    "text": "who's one of the board members of the pixie project created this tool and it's really easy to use",
    "start": "1565600",
    "end": "1572799"
  },
  {
    "text": "so let's go into it",
    "start": "1572799",
    "end": "1577000"
  },
  {
    "text": "i'm going to go into canines of course",
    "start": "1586480",
    "end": "1590799"
  },
  {
    "text": "and i see that i'm running this echo service on this external ip",
    "start": "1595520",
    "end": "1601919"
  },
  {
    "text": "and these are the number of pods that it's running it's just one pod right now and i've deployed this echo service with",
    "start": "1603840",
    "end": "1609039"
  },
  {
    "text": "an auto scaler that basically uses pixie metrics in order to say i would like",
    "start": "1609039",
    "end": "1615440"
  },
  {
    "text": "more pods when my application is serving a lot of requests so i'm going to launch this and then show you a little bit more about how",
    "start": "1615440",
    "end": "1621360"
  },
  {
    "text": "that works let's give it some load let's give it a lot of requests to the same endpoint",
    "start": "1621360",
    "end": "1627120"
  },
  {
    "text": "that we just saw",
    "start": "1627120",
    "end": "1629840"
  },
  {
    "text": "and while we do that we'll keep it over here in the background we can see that these containers have just been created",
    "start": "1635279",
    "end": "1641520"
  },
  {
    "text": "in response to the request so how does this look basically",
    "start": "1641520",
    "end": "1647679"
  },
  {
    "text": "we have this horizontal pod auto scaler that we've defined it says i don't want any more than 10 pods so",
    "start": "1647679",
    "end": "1654960"
  },
  {
    "text": "this is the max it's kind of like a switch in case you accidentally scale to 300 pods or something crazy like that",
    "start": "1654960",
    "end": "1661360"
  },
  {
    "text": "and i want to use this custom metric i've defined which is px http requests per second",
    "start": "1661360",
    "end": "1667279"
  },
  {
    "text": "and i've set this target value to be 20 and so what happened was this pod saw that it was getting a lot more than 20",
    "start": "1667279",
    "end": "1673679"
  },
  {
    "text": "requests so the auto scaler decided to add a lot more pots the load has died down so now we see",
    "start": "1673679",
    "end": "1680080"
  },
  {
    "text": "that these paws that were just spin up are terminating and you can configure using the auto scaler api the amount of",
    "start": "1680080",
    "end": "1686559"
  },
  {
    "text": "seconds and you know how many pods can get added or taken off at once i just made it really fast for the purposes of",
    "start": "1686559",
    "end": "1692559"
  },
  {
    "text": "this demo the metric provider that we have is pretty simple",
    "start": "1692559",
    "end": "1698640"
  },
  {
    "text": "it basically takes this pixel script which computes the average number of http requests by pod",
    "start": "1698640",
    "end": "1704480"
  },
  {
    "text": "over the time window and it fulfills these endpoints",
    "start": "1704480",
    "end": "1710480"
  },
  {
    "text": "these are defined on the custom metrics api get metric by name and get metric by",
    "start": "1710480",
    "end": "1715520"
  },
  {
    "text": "selector and list all metrics so you can see that in just about 200 lines of code i've easily created a metric server that",
    "start": "1715520",
    "end": "1722720"
  },
  {
    "text": "will auto scale my request based on or auto scale my deployment based on the number of requests",
    "start": "1722720",
    "end": "1729278"
  },
  {
    "text": "so to summarize what we just saw we collected the raw http requests in pxe although you could do this with anything",
    "start": "1731520",
    "end": "1737039"
  },
  {
    "text": "that taps into your http requests we've calculated the request per second by pod and we've plugged that into the",
    "start": "1737039",
    "end": "1743440"
  },
  {
    "text": "kubernetes api to auto scale or deployment i'm passing it back off to zane thank",
    "start": "1743440",
    "end": "1749520"
  },
  {
    "text": "you awesome well thanks for those demos natalie um so in these demos natalie",
    "start": "1749520",
    "end": "1755200"
  },
  {
    "text": "basically showed how you can take some simple uh data run some simple data workflows on pixi",
    "start": "1755200",
    "end": "1760799"
  },
  {
    "text": "uh in particular for the sql injection there's a blog post on pixi's open source blog that goes into a lot more",
    "start": "1760799",
    "end": "1766640"
  },
  {
    "text": "detail if you're interested on it and then we're going to be posting a blog on the auto scaling um auto scaling project next week which",
    "start": "1766640",
    "end": "1774399"
  },
  {
    "text": "will have a lot more of the technical details about how this works and code that you can look at oh actually",
    "start": "1774399",
    "end": "1779600"
  },
  {
    "text": "sorry is it uh one quick thing is that these examples are in our pixie demos repo today if you want to check it out",
    "start": "1779600",
    "end": "1785039"
  },
  {
    "text": "but as you said the blog will be coming correct so they're already all in the public but there's a blog post coming",
    "start": "1785039",
    "end": "1790240"
  },
  {
    "text": "next week that i'll talk through the information in more detail um so what are we working on next that we're",
    "start": "1790240",
    "end": "1795679"
  },
  {
    "text": "working on doing some stuff with uh cross-site scripting detection um using pixel and really what we want to do is",
    "start": "1795679",
    "end": "1802880"
  },
  {
    "text": "uh learn from all of you about more use cases and things that we're interested in seeing you can find us on github or",
    "start": "1802880",
    "end": "1809440"
  },
  {
    "text": "slack and either create an issue or send us a message on github that could either be the cnc of github",
    "start": "1809440",
    "end": "1815279"
  },
  {
    "text": "or sorry the cncf slack or the pixie slack and that's it thanks a lot for listening",
    "start": "1815279",
    "end": "1821520"
  },
  {
    "text": "and we'll take questions thank you",
    "start": "1821520",
    "end": "1829120"
  }
]