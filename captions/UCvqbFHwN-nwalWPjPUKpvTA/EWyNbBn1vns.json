[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "hello good morning and welcome to the first session of the surface mesh tract",
    "start": "30",
    "end": "5310"
  },
  {
    "text": "for today I'm Rita Mars linker team maintainer and tract host for this session and I'm here to introduce our",
    "start": "5310",
    "end": "12000"
  },
  {
    "text": "next speakers they are Anil artillery and my notes Jason Webb and they are",
    "start": "12000",
    "end": "24510"
  },
  {
    "text": "software engineers add into it and they're going to talk about into its path to the service mesh and also about",
    "start": "24510",
    "end": "30000"
  },
  {
    "text": "Amaral an open source project that they maintain please welcome them yeah thank",
    "start": "30000",
    "end": "50850"
  },
  {
    "text": "you for coming to our talk stitching service mesh across hundreds of discreet networks so we were friend to it so",
    "start": "50850",
    "end": "58920"
  },
  {
    "text": "Intuit has three main product lines TurboTax mint and QuickBooks and we",
    "start": "58920",
    "end": "66119"
  },
  {
    "text": "support about 5,000 developers and 50 million customers so why were we",
    "start": "66119",
    "end": "73140"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "interested in service mesh at Intuit so in the beginning we started out in our",
    "start": "73140",
    "end": "78960"
  },
  {
    "text": "monolithic era right where we had applications that supported our big business units that didn't quite have",
    "start": "78960",
    "end": "84840"
  },
  {
    "text": "enough velocity and they needed to be broken up they're too thick so we started to move into our micro services",
    "start": "84840",
    "end": "92220"
  },
  {
    "text": "error where we started to decompose all of these services so as we went through that decomposition the cost of authoring",
    "start": "92220",
    "end": "99780"
  },
  {
    "text": "any one service was still too high right so setting up the hosting the monitoring",
    "start": "99780",
    "end": "106560"
  },
  {
    "text": "operating the service so we never quite were able to break everything down as much as we wanted to so a couple years",
    "start": "106560",
    "end": "113189"
  },
  {
    "text": "ago we really started to lean into kubernetes and as we as we progress on",
    "start": "113189",
    "end": "118350"
  },
  {
    "text": "our kubernetes journey and our MSS platform where we sits together a lot of automation we're able to create a lot",
    "start": "118350",
    "end": "123479"
  },
  {
    "text": "more services and be able to and be able",
    "start": "123479",
    "end": "128550"
  },
  {
    "text": "to so I lost my train of thought and so is that so we were we were able",
    "start": "128550",
    "end": "135500"
  },
  {
    "text": "to actually create a lot more service in and get a lot more velocity but the biggest problem was as we started to",
    "start": "135500",
    "end": "141110"
  },
  {
    "text": "really look at how these services connect with each other we really needed to evaluate the infrastructure that we were providing and how we could utilize",
    "start": "141110",
    "end": "148220"
  },
  {
    "text": "stuff in industry to make that connection better so that's where we",
    "start": "148220",
    "end": "154550"
  },
  {
    "text": "really started to look at service mesh and sto and how we could bring that service mesh into our enterprise so just",
    "start": "154550",
    "end": "163220"
  },
  {
    "text": "kind of a quick sample of what a service mesh might look like so in this particular deployment we have a some toy",
    "start": "163220",
    "end": "169850"
  },
  {
    "text": "services a book order or book info service and a product info service and then a payment service so the book and",
    "start": "169850",
    "end": "176239"
  },
  {
    "text": "post service is going to talk to these other two services so we have a single cluster here and we have a SEO control",
    "start": "176239",
    "end": "182360"
  },
  {
    "text": "plane installed in this cluster and then in between the different services",
    "start": "182360",
    "end": "188209"
  },
  {
    "text": "communicating through a proxy we can establish mutual TLS so in this picture - we left an API gateway as the ingress",
    "start": "188209",
    "end": "194870"
  },
  {
    "text": "point as browser traffic comes into the cluster it'll probably use a different authentication protocol maybe OAuth or",
    "start": "194870",
    "end": "201230"
  },
  {
    "text": "some JA authentication so we still having a controlled ingress point but",
    "start": "201230",
    "end": "206450"
  },
  {
    "text": "this gives us the ability to get observability and intelligent routing inside of our clusters which is great",
    "start": "206450",
    "end": "212380"
  },
  {
    "text": "but our enterprise is a little bit more complicated than kind of this simple",
    "start": "212380",
    "end": "219380"
  },
  {
    "start": "217000",
    "end": "217000"
  },
  {
    "text": "diagram right so some of the complexities that we ran into as we look to bring the service mesh into our",
    "start": "219380",
    "end": "225470"
  },
  {
    "text": "ecosystem was that we actually ran a lot of kubernetes clusters I ran those",
    "start": "225470",
    "end": "231980"
  },
  {
    "text": "clusters for four different reasons right we wanted isolation in between our different business units we wanted our",
    "start": "231980",
    "end": "237680"
  },
  {
    "text": "business units to be able to have autonomy between them if they had different seasonality and sometimes they",
    "start": "237680",
    "end": "242690"
  },
  {
    "text": "wanted to take certain have more caution in different parts of the year we wanted them to not impact each other and",
    "start": "242690",
    "end": "249019"
  },
  {
    "text": "there's also compliance reasons right so if we're hosting services that are underneath maybe a PCI audit we want to",
    "start": "249019",
    "end": "255110"
  },
  {
    "text": "limit the scope of those audits we don't want to have everything involved in an audit and then also just for",
    "start": "255110",
    "end": "261349"
  },
  {
    "text": "environments right so there's different pre prod environments maybe a dev environment a perf environment",
    "start": "261349",
    "end": "266510"
  },
  {
    "text": "and then also as we look at hosting services across multiple regions those services will be hosted in independent",
    "start": "266510",
    "end": "273680"
  },
  {
    "text": "clusters within maybe the east or west region of the cloud but we not only do",
    "start": "273680",
    "end": "282590"
  },
  {
    "text": "we have a lot of clusters but also all of these clusters don't have l3 l4 connectivity between the pods right so",
    "start": "282590",
    "end": "288680"
  },
  {
    "text": "they're actually island there kind of island networks in between each other so as we want to have any services",
    "start": "288680",
    "end": "295490"
  },
  {
    "text": "communicate with each other we have to be able to ingress and egress out of these clusters so and just to kind of",
    "start": "295490",
    "end": "306530"
  },
  {
    "start": "305000",
    "end": "305000"
  },
  {
    "text": "put some statistics on what this actually looks like so we run about 160 clusters and roughly almost 5,400",
    "start": "306530",
    "end": "314300"
  },
  {
    "text": "namespaces so the unique thing about these namespaces is that they're actually globally unique so every",
    "start": "314300",
    "end": "320600"
  },
  {
    "text": "namespace that gets provision is unique across all of the clusters and that",
    "start": "320600",
    "end": "325970"
  },
  {
    "text": "becomes important and sort of how we decide to stitch together the mesh in the future here so if we take our toy",
    "start": "325970",
    "end": "336260"
  },
  {
    "start": "334000",
    "end": "334000"
  },
  {
    "text": "that we started with and actually tried to overlay it and does something that's a little bit more realistic of a",
    "start": "336260",
    "end": "342200"
  },
  {
    "text": "topology remind the where we'll end up with a topology that looks a little bit more like this where we have three clusters hosting",
    "start": "342200",
    "end": "349040"
  },
  {
    "text": "these different services we've isolated our API gateway into one cluster that",
    "start": "349040",
    "end": "355280"
  },
  {
    "text": "gateway happens to be a multi-tenant system so it supports a lot of the business units so we don't want it coupled with any set of deployments for",
    "start": "355280",
    "end": "362210"
  },
  {
    "text": "any of the other clusters in this particular use case for the product info service in the book order service are",
    "start": "362210",
    "end": "368390"
  },
  {
    "text": "actually maintained by the same business unit so that went into one independent cluster with itself and this payment",
    "start": "368390",
    "end": "374960"
  },
  {
    "text": "service because it's gonna be part of an audit we broke it out and stuck it into a separate cluster",
    "start": "374960",
    "end": "382780"
  },
  {
    "start": "385000",
    "end": "385000"
  },
  {
    "text": "so as we look to sort of overlay a mesh onto this more distributed cluster",
    "start": "385590",
    "end": "392669"
  },
  {
    "text": "topology what do we actually need out of the mesh to be able to make this happen so the first thing we need to be able to",
    "start": "392669",
    "end": "400860"
  },
  {
    "text": "support is we need some sort of identity of what a service means and we need this",
    "start": "400860",
    "end": "405960"
  },
  {
    "text": "to be able to support HADR deployments right so because we have globally unique namespaces across all of these clusters",
    "start": "405960",
    "end": "412110"
  },
  {
    "text": "I need to be able to know that the same binary is being deployed in two regions even though they're in unique namespaces",
    "start": "412110",
    "end": "419550"
  },
  {
    "text": "so we need some mechanism to do that we also don't want to lose strong",
    "start": "419550",
    "end": "426180"
  },
  {
    "text": "point-to-point authentication that the mesh gives you with mutual TLS we want to keep that functionality and we also",
    "start": "426180",
    "end": "433050"
  },
  {
    "text": "want to keep end-to-end encryption so we don't want to have any man in the Middle's across the ecosystem we want strong TLS encryption between all the",
    "start": "433050",
    "end": "440790"
  },
  {
    "text": "nodes in between all the east-west services service communication we also",
    "start": "440790",
    "end": "446580"
  },
  {
    "text": "want to eliminate single points of failure so we've we've created this ecosystem of all of these clusters for different isolation purposes and",
    "start": "446580",
    "end": "452760"
  },
  {
    "text": "autonomy we don't want to then introduce another layer on top of that that causes",
    "start": "452760",
    "end": "457950"
  },
  {
    "text": "us to bring that all back together and break that level of isolation and points",
    "start": "457950",
    "end": "463440"
  },
  {
    "text": "of failure and then this particular one so by default the DNS name that",
    "start": "463440",
    "end": "470760"
  },
  {
    "text": "kubernetes is going to give you has the name space and the cluster suffix put into it that sort of starts a couple the",
    "start": "470760",
    "end": "477810"
  },
  {
    "text": "service discovery of how you locate the service with what we would consider the administration boundary of the service",
    "start": "477810",
    "end": "483870"
  },
  {
    "text": "right so if that service changes ownership or moves in between different namespaces we wouldn't want all the",
    "start": "483870",
    "end": "489660"
  },
  {
    "text": "clients to have to update how they addressed that service so we want those two things to be decoupled from each other and then also we want to keep the",
    "start": "489660",
    "end": "499710"
  },
  {
    "text": "developers experience intact right so we don't want to have configuration",
    "start": "499710",
    "end": "506510"
  },
  {
    "text": "separate from the services actual hosting configuration we want that to be one package that can be plumbed into",
    "start": "506510",
    "end": "513120"
  },
  {
    "text": "their CI CD pipelines and it's easy to troubleshoot and easy them to be able to see what they're",
    "start": "513120",
    "end": "518740"
  },
  {
    "text": "actually operating on so looking at",
    "start": "518740",
    "end": "525279"
  },
  {
    "start": "523000",
    "end": "523000"
  },
  {
    "text": "these requirements we started a look at what's available in sto to be able to map these requirements on to sto so she",
    "start": "525279",
    "end": "533110"
  },
  {
    "text": "has a lot of different multi cluster functionality in it there's a lot of good stuff there and be able to",
    "start": "533110",
    "end": "538630"
  },
  {
    "text": "connecting so the first one we looked at was using a shared control plane so in this particular use case or this",
    "start": "538630",
    "end": "545620"
  },
  {
    "text": "particular topology we can see these red lines all the proxies will connect up",
    "start": "545620",
    "end": "550630"
  },
  {
    "text": "into one shared control plane between all the clusters so we can still have",
    "start": "550630",
    "end": "555760"
  },
  {
    "text": "mutual TLS in between the services going across the clusters and we can do that",
    "start": "555760",
    "end": "562900"
  },
  {
    "text": "by sharing an intermediary intermediary CA that trusts the same route CA that's deployed and Citadelle in those clusters",
    "start": "562900",
    "end": "568990"
  },
  {
    "text": "that's the open-source way to do it internally we have an internal CA that we use that we've extracted away from",
    "start": "568990",
    "end": "575380"
  },
  {
    "text": "all the mesh deployments so and we can ingress and egress through the networks",
    "start": "575380",
    "end": "582959"
  },
  {
    "text": "pretty well but it's just this set up didn't quite meet all of our requirements so we didn't do anything",
    "start": "582959",
    "end": "589990"
  },
  {
    "text": "here to sort of be able to identify a workload that's being deployed in separate namespaces actually with some",
    "start": "589990",
    "end": "596529"
  },
  {
    "text": "of the mesh network functionality we actually forced that we want the way it's employed it actually wants you to",
    "start": "596529",
    "end": "602380"
  },
  {
    "text": "keep those things the same but we got that as a point-to-point authentication and end-to-end encryption with this",
    "start": "602380",
    "end": "608980"
  },
  {
    "text": "deployment the single point of failure is kind of a warning sign so technically",
    "start": "608980",
    "end": "614440"
  },
  {
    "text": "you can make that shared control plane high availability and have multiple",
    "start": "614440",
    "end": "620020"
  },
  {
    "text": "deployments of it but it's something you're going to put a lot of care and time into making sure that doesn't break because if any of the clusters can't",
    "start": "620020",
    "end": "626770"
  },
  {
    "text": "connect into that control plane to get configuration for their proxies then you won't be able to Auto scale effectively",
    "start": "626770",
    "end": "633010"
  },
  {
    "text": "in the cluster and then also we didn't do anything to necessarily decouple the",
    "start": "633010",
    "end": "638110"
  },
  {
    "text": "naming scheme from the namespace and now our the way we author our SEO configuration is in a control plane",
    "start": "638110",
    "end": "644500"
  },
  {
    "text": "that's separate from the service goes control plane which makes things a little bit awkward for developers",
    "start": "644500",
    "end": "650790"
  },
  {
    "text": "but there's another option so in this particular option is having multiple control planes so this would be just",
    "start": "652760",
    "end": "658610"
  },
  {
    "text": "applying a coober or a sto control plane along with every kubernetes cluster that",
    "start": "658610",
    "end": "666050"
  },
  {
    "text": "we have so in this particular case all of the proxies that are running within each one of these clusters can go and",
    "start": "666050",
    "end": "673220"
  },
  {
    "text": "get their configuration from their local seo control plane and we can still get",
    "start": "673220",
    "end": "678530"
  },
  {
    "text": "all the same mutual TLS going in between the clusters themselves but you end up",
    "start": "678530",
    "end": "683840"
  },
  {
    "text": "with a little bit of a problem here is how do you manage the configuration between all these different clusters right because now we've partitioned the",
    "start": "683840",
    "end": "690050"
  },
  {
    "text": "service discovery so how can the order the book order service know that the",
    "start": "690050",
    "end": "695240"
  },
  {
    "text": "payment service is actually deployed in another cluster and how does they get routing to get over to that cluster there's configuration and SEO to be able",
    "start": "695240",
    "end": "702530"
  },
  {
    "text": "to do that and author that set up but there's no way to have it be automatic",
    "start": "702530",
    "end": "708080"
  },
  {
    "text": "and someone has to manually go in and edit that so someone has to go and find hit a load balancer of the payments",
    "start": "708080",
    "end": "713630"
  },
  {
    "text": "cluster and put it into a service entry that's being deployed in the same cluster as the one that the book order",
    "start": "713630",
    "end": "720770"
  },
  {
    "text": "is in but as we look across the points",
    "start": "720770",
    "end": "727490"
  },
  {
    "text": "that we wanted out of this we got a couple more boxes out of it but we didn't really solve this problem of",
    "start": "727490",
    "end": "732710"
  },
  {
    "text": "having this single identity of a service that can span namespaces that are globally unique and we didn't really",
    "start": "732710",
    "end": "739820"
  },
  {
    "text": "decouple the service the namespace from the from the service discovery but we",
    "start": "739820",
    "end": "747740"
  },
  {
    "text": "were able but we did eliminate a single point of failure now that we have a control plane with every cluster from a",
    "start": "747740",
    "end": "753140"
  },
  {
    "text": "global services ecosystem there's no one system now it's all distributed which prevents that single point of failure",
    "start": "753140",
    "end": "759200"
  },
  {
    "text": "and now any developer would offer configuration local to their cluster so",
    "start": "759200",
    "end": "764360"
  },
  {
    "text": "it would seem very natural with the rest of their kubernetes deployment and also in our evaluation of this a lot of the",
    "start": "764360",
    "end": "770500"
  },
  {
    "text": "just the features with SEO work better within one cluster as things go between",
    "start": "770500",
    "end": "775610"
  },
  {
    "text": "separate clusters there's certain features that might work better or not as well so it's kind of a more",
    "start": "775610",
    "end": "781450"
  },
  {
    "text": "stable deployment of of the control plane so - kind of - so we had this",
    "start": "781450",
    "end": "791500"
  },
  {
    "text": "appointment of multi cluster but we had this problem of how to manage that configuration across all of these clusters so that's where we came up with",
    "start": "791500",
    "end": "798160"
  },
  {
    "text": "this project Admiral so the multi cluster deployments that we do use Admiral to do this higher-level",
    "start": "798160",
    "end": "805770"
  },
  {
    "text": "configuration management and so really what Admiral is doing is it's going in",
    "start": "805770",
    "end": "812440"
  },
  {
    "text": "and syncing the configuration in all of these different clusters to enable the",
    "start": "812440",
    "end": "817810"
  },
  {
    "text": "services to be able to communicate with each other and what Admiral will do is",
    "start": "817810",
    "end": "824980"
  },
  {
    "text": "based off of labels that can be added into the different deployments it can be able to create a globally unique name",
    "start": "824980",
    "end": "832170"
  },
  {
    "text": "that services can use and then it can be able to set up the routing to those",
    "start": "832170",
    "end": "837580"
  },
  {
    "text": "deployments that decouples the namespaces the namespace topology from the service configuration and then the",
    "start": "837580",
    "end": "847810"
  },
  {
    "text": "other thing we created it to be able to do is be able to have multiple names for",
    "start": "847810",
    "end": "853210"
  },
  {
    "text": "the same service so and to be able to make the create those names easy so a",
    "start": "853210",
    "end": "858400"
  },
  {
    "text": "lot of times you would want maybe a end to end environment that could be pinned within different regional routing so I",
    "start": "858400",
    "end": "864370"
  },
  {
    "text": "want an antenna environment to be pinned to an East region or a West region because that may be I want to run regression Suites in different regions",
    "start": "864370",
    "end": "870460"
  },
  {
    "text": "of that deployment as I'm as I'm migrating my deployment across my fleet",
    "start": "870460",
    "end": "877800"
  },
  {
    "start": "878000",
    "end": "878000"
  },
  {
    "text": "so the way Admiral actually plugs into this multi cluster deployment is it actually sits basically on top of these",
    "start": "878280",
    "end": "885250"
  },
  {
    "text": "deployments as a controller of control planes is the way we define it and so",
    "start": "885250",
    "end": "891820"
  },
  {
    "text": "what it's doing is watching these different clusters and then looking at as things come up and come down it can",
    "start": "891820",
    "end": "897070"
  },
  {
    "text": "then provision SEO configuration as a way to be able to facilitate these different clusters",
    "start": "897070",
    "end": "904380"
  },
  {
    "text": "and I guess one more opponent here and Admiral itself doesn't actually hold any",
    "start": "906330",
    "end": "913450"
  },
  {
    "text": "runtime State it's just sinking basically sto states so all of the state that's used to run these clusters is",
    "start": "913450",
    "end": "919510"
  },
  {
    "text": "actually pushed down into every individual cluster itself and so that means that if Admiral goes away you're",
    "start": "919510",
    "end": "926050"
  },
  {
    "text": "left with the current running state of all of the meshes that are across the fleet so it can't really it doesn't",
    "start": "926050",
    "end": "932410"
  },
  {
    "text": "impact any of the runtime deployment so if we look at the kind of things that we",
    "start": "932410",
    "end": "939370"
  },
  {
    "text": "wanted to accomplish with the multiple control planes and Admiral sinking configuration and we're able to solve",
    "start": "939370",
    "end": "946150"
  },
  {
    "text": "all the problems that we wanted to be able to roll this out across the enterprise so Neal is gonna do a demo of",
    "start": "946150",
    "end": "956220"
  },
  {
    "start": "953000",
    "end": "953000"
  },
  {
    "text": "Admiral for a a che or an a demo with Admiral of an H a TR deployment thanks",
    "start": "956220",
    "end": "963310"
  },
  {
    "text": "Jason okay so today we would like to demo the global traffic routing",
    "start": "963310",
    "end": "968700"
  },
  {
    "text": "capability that's powered by Admiral so first we'll look into like the same type problem that Jason was talking",
    "start": "968700",
    "end": "975730"
  },
  {
    "text": "about so here if you see on the right-hand side there's like a payments micro service it",
    "start": "975730",
    "end": "981310"
  },
  {
    "text": "has been deployed in both US questioned us east regions and that is for their",
    "start": "981310",
    "end": "986350"
  },
  {
    "text": "disaster recovery issue and then you have a book order service that's",
    "start": "986350",
    "end": "991420"
  },
  {
    "text": "deployed in another cluster that that actually calls a payment service for the",
    "start": "991420",
    "end": "996459"
  },
  {
    "text": "payment processing and then if you see like each of these clusters have sto in",
    "start": "996459",
    "end": "1002070"
  },
  {
    "text": "them and sto already supports something called locality load balancing which",
    "start": "1002070",
    "end": "1007740"
  },
  {
    "text": "makes the which makes the locality based routing possible basically like you",
    "start": "1007740",
    "end": "1013350"
  },
  {
    "text": "route the traffic to the nearest region first and then if that fails you route the traffic to the next available region",
    "start": "1013350",
    "end": "1019470"
  },
  {
    "text": "or next closest region so given this and Admiral is obviously like watching all these flusters it can",
    "start": "1019470",
    "end": "1026688"
  },
  {
    "text": "it can watch the sto configurations and also the services that are getting deployed are to these clusters and then",
    "start": "1026689",
    "end": "1033900"
  },
  {
    "text": "it can create this global traffic policies or use",
    "start": "1033900",
    "end": "1039180"
  },
  {
    "text": "basically to route the traffic or like to control the traffic in individual",
    "start": "1039180",
    "end": "1044430"
  },
  {
    "text": "clusters okay so let's go back to the",
    "start": "1044430",
    "end": "1050940"
  },
  {
    "text": "command line so what I want to show is so this custom CRD the custom resource",
    "start": "1050940",
    "end": "1057900"
  },
  {
    "text": "definition that admiral understands which is a global traffic policy we will",
    "start": "1057900",
    "end": "1063930"
  },
  {
    "text": "look at like what that looks like so if",
    "start": "1063930",
    "end": "1074820"
  },
  {
    "text": "you look at this so it has a DNS name in it so this is a DNS name that Admiral",
    "start": "1074820",
    "end": "1080430"
  },
  {
    "text": "would create for payments and that would be available across all the clusters so let's say like tomorrow it's not just",
    "start": "1080430",
    "end": "1086700"
  },
  {
    "text": "the ordered service it might be some other service in a different cluster that's going to use payments this name",
    "start": "1086700",
    "end": "1092490"
  },
  {
    "text": "is going to remain the same and then the and then this micro service owner of like the owner of the payment service",
    "start": "1092490",
    "end": "1099270"
  },
  {
    "text": "can actually control this configuration from their own cluster so that they can",
    "start": "1099270",
    "end": "1104810"
  },
  {
    "text": "control how the clients actually route traffic to their service so if you look",
    "start": "1104810",
    "end": "1110340"
  },
  {
    "text": "at here you see the DNS name of course and then like you see the region so what",
    "start": "1110340",
    "end": "1115410"
  },
  {
    "text": "we are saying here is any any at any time if someone calls default payments toward global you would route 80% of",
    "start": "1115410",
    "end": "1121950"
  },
  {
    "text": "traffic to us for us to and then 20% no traffic to your C's - so and then if you",
    "start": "1121950",
    "end": "1127620"
  },
  {
    "text": "see the the other interesting thing here is so there's a selector so you apply this global traffic policy to the names",
    "start": "1127620",
    "end": "1135240"
  },
  {
    "text": "or like the deployments that have this label which is the identity label so the",
    "start": "1135240",
    "end": "1141930"
  },
  {
    "text": "identity is like the unique identifier for that micro service in your entire company so given that what I would like",
    "start": "1141930",
    "end": "1152550"
  },
  {
    "text": "to do is go back to the slide that I am showing so if you look at this so this is like a browser or like a desktop on",
    "start": "1152550",
    "end": "1159330"
  },
  {
    "text": "the left hand side so that's calling a book order service and bukata service is in turn calling the payment service so",
    "start": "1159330",
    "end": "1165330"
  },
  {
    "text": "now we have built some UI where the payment service first of all like the",
    "start": "1165330",
    "end": "1170610"
  },
  {
    "text": "payment service returns the look information based on which payments",
    "start": "1170610",
    "end": "1176470"
  },
  {
    "text": "instance is serving that request so if the payments request was served from West you would get a locality headed",
    "start": "1176470",
    "end": "1182440"
  },
  {
    "text": "back that would say us West and and the same applies to you via C's so that will",
    "start": "1182440",
    "end": "1187840"
  },
  {
    "text": "help us plot a diagram on the front end that's what I'm going to show right now",
    "start": "1187840",
    "end": "1193950"
  },
  {
    "text": "so what you're looking at here is so once we start the request we are going",
    "start": "1201390",
    "end": "1208270"
  },
  {
    "text": "to see the distribution of traffic that is being served but from the payment",
    "start": "1208270",
    "end": "1213730"
  },
  {
    "text": "service from us West and us East and based on this proportion like how much",
    "start": "1213730",
    "end": "1219420"
  },
  {
    "text": "how many requests are serving getting served from east and west these images",
    "start": "1219420",
    "end": "1224500"
  },
  {
    "text": "are going to shrink or grow in size so let me start the request so right now we",
    "start": "1224500",
    "end": "1230020"
  },
  {
    "text": "have the distribution of 80/20 so if you",
    "start": "1230020",
    "end": "1235540"
  },
  {
    "text": "see a it will stabilize in a little while so you can see that eighty percent of traffic roughly is going to us first",
    "start": "1235540",
    "end": "1242290"
  },
  {
    "text": "and twenty percent is going to us east now what we are going to try is go edit",
    "start": "1242290",
    "end": "1249130"
  },
  {
    "text": "this global traffic policy record and flip it so let's do 20 and 80 and then",
    "start": "1249130",
    "end": "1257560"
  },
  {
    "text": "I'm going to save this and then go back",
    "start": "1257560",
    "end": "1262890"
  },
  {
    "text": "now you should see that this reverses and then you see that the traffic being",
    "start": "1262890",
    "end": "1269440"
  },
  {
    "text": "served from us is two for the payments has like the image has grown in size so",
    "start": "1269440",
    "end": "1278370"
  },
  {
    "text": "let's stop this so now I would like to explain like what's actually going on so",
    "start": "1278370",
    "end": "1285570"
  },
  {
    "text": "now what's happening here is so whenever",
    "start": "1286590",
    "end": "1292450"
  },
  {
    "text": "we apply whenever we update the global traffic policy see our custom resource",
    "start": "1292450",
    "end": "1297640"
  },
  {
    "text": "Admiral is watching it and what it's doing is it's actually picking all the clusters where this payment service is",
    "start": "1297640",
    "end": "1305529"
  },
  {
    "text": "being consumed from and then it's going to go ahead and update update something",
    "start": "1305529",
    "end": "1312009"
  },
  {
    "text": "called a destination rule which is a sto custom resource to make sure that",
    "start": "1312009",
    "end": "1317679"
  },
  {
    "text": "whatever you have specified in your global traffic policy is applied to apply to in that cluster in that cluster",
    "start": "1317679",
    "end": "1324639"
  },
  {
    "text": "for the like the sto configuration in the cluster so that would make the book order service proxy get the necessary",
    "start": "1324639",
    "end": "1331360"
  },
  {
    "text": "configuration for it to basically load balance or distribute the traffic so",
    "start": "1331360",
    "end": "1337330"
  },
  {
    "text": "let's get into the actual edited or like the modified so I have created a aliases",
    "start": "1337330",
    "end": "1345429"
  },
  {
    "text": "pardon me I want to say like seconds like whenever I don't want to type like cubes ETL every time so if you look at",
    "start": "1345429",
    "end": "1352899"
  },
  {
    "text": "the destination rule so we looked at the global traffic policy so this is a destination rule the ISTE registration",
    "start": "1352899",
    "end": "1358720"
  },
  {
    "text": "rule in the cluster where order service is running so if you see the host is the",
    "start": "1358720",
    "end": "1363759"
  },
  {
    "text": "default dot payments not global which is which which the order service is calling and then you see this locality load",
    "start": "1363759",
    "end": "1370269"
  },
  {
    "text": "balancer setting so that is basically being translated from the global traffic policy that we just saw which our world",
    "start": "1370269",
    "end": "1377649"
  },
  {
    "text": "understands into the destination rule that is Tiana's times or the proxy gets",
    "start": "1377649",
    "end": "1382990"
  },
  {
    "text": "configuration from and that's the destination rule the other thing is the",
    "start": "1382990",
    "end": "1389620"
  },
  {
    "text": "service entry so default dot payments are global is the service name that has been created it's not the kubernetes",
    "start": "1389620",
    "end": "1397539"
  },
  {
    "text": "service name which is bound to the namespace this is namespace agnostic which jason was talking about so we need",
    "start": "1397539",
    "end": "1403750"
  },
  {
    "text": "the namespace agnostic names because tomorrow if the service moves away from that namespace we still want to have",
    "start": "1403750",
    "end": "1410080"
  },
  {
    "text": "like we don't want the clients to change the service name that they're calling so let's look and and the cool part about",
    "start": "1410080",
    "end": "1416620"
  },
  {
    "text": "admiral is it does the contextual configuration so let's say tomorrow the payment service for whatever reason",
    "start": "1416620",
    "end": "1423340"
  },
  {
    "text": "moves into the same cluster as where orders service is running then you don't",
    "start": "1423340",
    "end": "1428559"
  },
  {
    "text": "want like that communication is local within the cluster so admiral is",
    "start": "1428559",
    "end": "1434080"
  },
  {
    "text": "responsible for delivering the contextual configuration depending on where the",
    "start": "1434080",
    "end": "1439259"
  },
  {
    "text": "where these services and their dependencies are running so that said let me show the service entry so service",
    "start": "1439259",
    "end": "1446729"
  },
  {
    "text": "entry is like bringing your owns so sto watches East your watch East your",
    "start": "1446729",
    "end": "1453899"
  },
  {
    "text": "monitor so kubernetes api server updates and it watches all the services that are being deployed in the kinetics lustre now if you want to bring in like your",
    "start": "1453899",
    "end": "1461220"
  },
  {
    "text": "custom services into sto service entry is is the configuration that you would",
    "start": "1461220",
    "end": "1466349"
  },
  {
    "text": "do since default or global payments or global is a service name that admiral",
    "start": "1466349",
    "end": "1472320"
  },
  {
    "text": "generated it's going to use something called a service entry which is a co customer resource to do that so if you",
    "start": "1472320",
    "end": "1479599"
  },
  {
    "text": "look at this so so this is the hostname so whenever someone accesses this",
    "start": "1479599",
    "end": "1486210"
  },
  {
    "text": "hostname what's actually happening is you have defined a couple of endpoints right so this is all automated by the",
    "start": "1486210",
    "end": "1491639"
  },
  {
    "text": "way so this is all being generated by Admiral you see the address so this address is basically the load balancers",
    "start": "1491639",
    "end": "1497820"
  },
  {
    "text": "of the clusters where payment services are running so this is a cross cluster communication that's happening and then",
    "start": "1497820",
    "end": "1505169"
  },
  {
    "text": "if you see like there is also a locality",
    "start": "1505169",
    "end": "1509988"
  },
  {
    "text": "information that is being specified for each of these and and endpoints so this",
    "start": "1510679",
    "end": "1516090"
  },
  {
    "text": "is also done by admiral because admiral knows where these clusters are deployed based on the nodes so admiral is going",
    "start": "1516090",
    "end": "1522299"
  },
  {
    "text": "to attach this locality labels and and that's what is making this locality load-balancing possible across the",
    "start": "1522299",
    "end": "1528389"
  },
  {
    "text": "clusters cool okay so",
    "start": "1528389",
    "end": "1539269"
  },
  {
    "text": "Admiral is open source so we thought like based on our learnings from the",
    "start": "1539630",
    "end": "1545320"
  },
  {
    "start": "1541000",
    "end": "1541000"
  },
  {
    "text": "multi cluster service mesh journey we have we open-source this product so that",
    "start": "1545320",
    "end": "1552170"
  },
  {
    "text": "like it the SEO community can benefit from it and not just history community the service mesh community in general so",
    "start": "1552170",
    "end": "1558800"
  },
  {
    "text": "we would love the feedback and any like the contributions to the project so I'm",
    "start": "1558800",
    "end": "1565640"
  },
  {
    "text": "going to like go to the Admiral project so Admiral project by the way is open so",
    "start": "1565640",
    "end": "1571790"
  },
  {
    "text": "standard SEO ecosystems is tak eco system consists of the some projects that aid those are the like the tools",
    "start": "1571790",
    "end": "1579860"
  },
  {
    "text": "for the SEO service mesh so if you so",
    "start": "1579860",
    "end": "1586640"
  },
  {
    "text": "that we have like a cool example for like a single cluster setup you guys should definitely try that",
    "start": "1586640",
    "end": "1592310"
  },
  {
    "text": "and then we also have like all the architecture and how Admiral works and",
    "start": "1592310",
    "end": "1601250"
  },
  {
    "text": "then like also defining whatever I just talked about which is the global traffic policy stuff",
    "start": "1601250",
    "end": "1609429"
  },
  {
    "text": "okay so so if you if you guys have any questions and if you guys have any",
    "start": "1615700",
    "end": "1623510"
  },
  {
    "start": "1618000",
    "end": "1618000"
  },
  {
    "text": "questions related to Admiral or in do it please stop by our booth s 47 and and we",
    "start": "1623510",
    "end": "1630320"
  },
  {
    "text": "are hiring [Applause]",
    "start": "1630320",
    "end": "1643089"
  },
  {
    "text": "I I may have missed it but how do the Admirals find each other so how do we",
    "start": "1652620",
    "end": "1660330"
  },
  {
    "text": "they know that if you add a new cluster how do you special them specify that for the Admiral instances cool so the",
    "start": "1660330",
    "end": "1668460"
  },
  {
    "text": "question is how does the Admiral know if there is a new cluster so so kubernetes",
    "start": "1668460",
    "end": "1674460"
  },
  {
    "text": "api server works off secret so what we do is whenever there's a new cluster created the cluster provisioning piece",
    "start": "1674460",
    "end": "1682200"
  },
  {
    "text": "of it basically creates such secret that is required to talk to that kubernetes",
    "start": "1682200",
    "end": "1687389"
  },
  {
    "text": "api server and it drops it in a central namespace where admiral is running so",
    "start": "1687389",
    "end": "1693659"
  },
  {
    "text": "that's how admiral knows that there is a new cluster and from that point on it's going to watch the cluster and it's",
    "start": "1693659",
    "end": "1700169"
  },
  {
    "text": "going to do whatever is one of the",
    "start": "1700169",
    "end": "1705179"
  },
  {
    "text": "reasons you mentioned in the beginning why you have multi cluster multiple clusters in your organization is one of",
    "start": "1705179",
    "end": "1711960"
  },
  {
    "text": "the reasons was compliance so let's say if the payment system is sitting in compliant area and some other random",
    "start": "1711960",
    "end": "1717509"
  },
  {
    "text": "service is sitting in some other non compliant area and the the CA that you",
    "start": "1717509",
    "end": "1723210"
  },
  {
    "text": "mentioned is compromised in non-compliant area how will it impact the service sitting in the complaint",
    "start": "1723210",
    "end": "1729809"
  },
  {
    "text": "area because it seems like if they are under also CA some same route CA then",
    "start": "1729809",
    "end": "1735539"
  },
  {
    "text": "the non compact area compromise could impact the the complaint a yes from the",
    "start": "1735539",
    "end": "1741899"
  },
  {
    "text": "isolation of the the trust domains within it yeah so that's a really good really good question",
    "start": "1741899",
    "end": "1748639"
  },
  {
    "text": "so in general we've used the same credential basis across the across those",
    "start": "1748639",
    "end": "1756450"
  },
  {
    "text": "spaces for for a fairly long time but",
    "start": "1756450",
    "end": "1761999"
  },
  {
    "text": "the within the intermediary CA as long as they trust the same route CA you could rotate the CA that was issuing",
    "start": "1761999",
    "end": "1768629"
  },
  {
    "text": "their credentials into the into the compliance side",
    "start": "1768629",
    "end": "1774679"
  },
  {
    "text": "that does the traffic from the book order to payments just go through the",
    "start": "1777200",
    "end": "1782930"
  },
  {
    "text": "ingress gateway of the next cluster the yes so the there's an ingress gateway an",
    "start": "1782930",
    "end": "1790460"
  },
  {
    "text": "in-studio ingress gateway that's acting as a layer for load balancer that's routing off of it's doing the s and I",
    "start": "1790460",
    "end": "1796220"
  },
  {
    "text": "based routing which is the kind of the connected it's the the Gateway connected",
    "start": "1796220",
    "end": "1802430"
  },
  {
    "text": "example I think in the sto documentation cervix uses that technique and we use the same technique we just automate the",
    "start": "1802430",
    "end": "1808580"
  },
  {
    "text": "configuration for that technique just a two-part question first one is regarding",
    "start": "1808580",
    "end": "1815390"
  },
  {
    "text": "the ID middle that you mentioned where if if the service is in the same cluster",
    "start": "1815390",
    "end": "1822080"
  },
  {
    "text": "it knows that it will send the request to the same cluster I saw this ERD you",
    "start": "1822080",
    "end": "1828740"
  },
  {
    "text": "mentioning the location where the service should route like 80 20 whatever",
    "start": "1828740",
    "end": "1833990"
  },
  {
    "text": "so how does I know you know in the same cluster so it knows it because it's also",
    "start": "1833990",
    "end": "1842990"
  },
  {
    "text": "watching the kubernetes api server so when it gets when it it's it's watching",
    "start": "1842990",
    "end": "1849290"
  },
  {
    "text": "the deployments and the services just like the sto like the SEO control plane so when it when it's generating the",
    "start": "1849290",
    "end": "1856430"
  },
  {
    "text": "entries for like let us say the payment service it's it's going to know that",
    "start": "1856430",
    "end": "1861920"
  },
  {
    "text": "like so it has the configuration or like the state of like what services and",
    "start": "1861920",
    "end": "1867140"
  },
  {
    "text": "deployments are running in that cluster so it's going to know that auto service and payment service are in the same",
    "start": "1867140",
    "end": "1872960"
  },
  {
    "text": "cluster so it will overwrite your specification of 80/20 or it will not so",
    "start": "1872960",
    "end": "1879080"
  },
  {
    "text": "it will it so in our case within the company like we use some annotations to",
    "start": "1879080",
    "end": "1884420"
  },
  {
    "text": "help admiral like like basically defined that global identifier that Jason was talking about but you can map in any",
    "start": "1884420",
    "end": "1890900"
  },
  {
    "text": "labels that you want and then admiral would use those labels to identify your services you don't have to yeah modify",
    "start": "1890900",
    "end": "1896900"
  },
  {
    "text": "yourself just one another question not the same is about you mentioned about",
    "start": "1896900",
    "end": "1903260"
  },
  {
    "text": "service entry need to be created in your use case where the names needed to be",
    "start": "1903260",
    "end": "1908840"
  },
  {
    "text": "different than the knee space generated by kubernetes right does service entry that your short example",
    "start": "1908840",
    "end": "1916120"
  },
  {
    "text": "yes manually need to be created or because I saw that the load balancer name a table is broadband so name that",
    "start": "1916120",
    "end": "1922540"
  },
  {
    "text": "you had to provide was obviously lengthy and stuff yeah so the way that is done",
    "start": "1922540",
    "end": "1928059"
  },
  {
    "text": "today is like I mean so the exactly yeah you have to set up set that up manually",
    "start": "1928059",
    "end": "1934809"
  },
  {
    "text": "if you were to like there isn't a tool today that will do that so Admiral will do that it will discover the load",
    "start": "1934809",
    "end": "1939940"
  },
  {
    "text": "balancers and it will automatically update you know I thank you for a good",
    "start": "1939940",
    "end": "1948880"
  },
  {
    "text": "presentation what was the main use case for using sto inside a particular",
    "start": "1948880",
    "end": "1956470"
  },
  {
    "text": "cluster you spoke about multi cluster is to your set up there but within the same",
    "start": "1956470",
    "end": "1963130"
  },
  {
    "text": "cluster what was the key use case for using history of their so it co is",
    "start": "1963130",
    "end": "1969450"
  },
  {
    "text": "implementation of service mesh right like this like yes some said like we we",
    "start": "1969450",
    "end": "1974760"
  },
  {
    "text": "like in the micro services journey and service mesh would bring in a lot of capabilities and sto is one such",
    "start": "1974760",
    "end": "1981640"
  },
  {
    "text": "implementation so we picked it co based on our evaluation internally within the company as well like which service",
    "start": "1981640",
    "end": "1986980"
  },
  {
    "text": "finish our technology we should use and then given that based like based off",
    "start": "1986980",
    "end": "1992380"
  },
  {
    "text": "that we develop Admiral which would automatic inflation of Li Jason can add",
    "start": "1992380",
    "end": "2000500"
  },
  {
    "text": "yeah I think some of the some of the routing capabilities were pretty useful the telemetry collection being able to",
    "start": "2000500",
    "end": "2007799"
  },
  {
    "text": "get the point-to-point mutual TLS with the certificate rotation I think that's",
    "start": "2007799",
    "end": "2013140"
  },
  {
    "text": "something that we've have a lot of application teams implementing security protocols",
    "start": "2013140",
    "end": "2018240"
  },
  {
    "text": "so being able to externalize some of those security protocols so we can enforce credential rotation is a pretty",
    "start": "2018240",
    "end": "2023460"
  },
  {
    "text": "useful feature so those are some of the things that made it pretty attractive to us",
    "start": "2023460",
    "end": "2028730"
  },
  {
    "text": "is admiral just a layer on top of sto or his and is steel like the way you guys",
    "start": "2031780",
    "end": "2038169"
  },
  {
    "text": "deploy it is it highly customized or REO deployment right or is it admiral doing",
    "start": "2038169",
    "end": "2045220"
  },
  {
    "text": "all the customization yeah add admiral is really tailoring sto to our needs",
    "start": "2045220",
    "end": "2050919"
  },
  {
    "text": "I would say I mean we do have a forked sto internally but it's pretty close to the actual main line other than like we",
    "start": "2050919",
    "end": "2059440"
  },
  {
    "text": "said we don't use Citadel literally we use an internal CA so there's some modifications that we do to the",
    "start": "2059440",
    "end": "2064898"
  },
  {
    "text": "installation to set up some of the trust across the control plane to use an internal CA but that's the main change",
    "start": "2064899",
    "end": "2071618"
  },
  {
    "text": "that we keep it does the demo we just did use this Citadel well how often do",
    "start": "2071619",
    "end": "2079929"
  },
  {
    "text": "you keep a blow-up dated to the don't latest releases of this do though and",
    "start": "2079929",
    "end": "2086080"
  },
  {
    "text": "the one you're running off of us I think is off of is Joe's master right yeah so just to give some context also the sto",
    "start": "2086080",
    "end": "2092560"
  },
  {
    "text": "had capability to like do this locality base load balancing the destination rules that I showed where something like",
    "start": "2092560",
    "end": "2099010"
  },
  {
    "text": "that we submitted a PR twist here because it's your team support service name level locality load balancing it",
    "start": "2099010",
    "end": "2106450"
  },
  {
    "text": "used to support only the cluster wide meaning like all services would use that",
    "start": "2106450",
    "end": "2112420"
  },
  {
    "text": "80/20 distribution or none of them right and then to support like to get this",
    "start": "2112420",
    "end": "2118030"
  },
  {
    "text": "capability in Admiral we have to first go do some work in each tier itself to",
    "start": "2118030",
    "end": "2123310"
  },
  {
    "text": "override that and support like upper DNS name locality based load balancing so",
    "start": "2123310",
    "end": "2129940"
  },
  {
    "text": "whatever demo we just showed that that feature is getting released in 1.5 HP oh-- and the latest Admiral of course",
    "start": "2129940",
    "end": "2140220"
  },
  {
    "text": "so others are going to run on eks or like another kubernetes cluster right",
    "start": "2144260",
    "end": "2150570"
  },
  {
    "text": "here separate govern this cluster alright so it also runs in a kubernetes cluster okay but how is your setup like",
    "start": "2150570",
    "end": "2158360"
  },
  {
    "text": "we use like we have internal kubernetes",
    "start": "2158360",
    "end": "2163700"
  },
  {
    "text": "like cluster management we have and like we are moving to e case but not yet okay",
    "start": "2163700",
    "end": "2170550"
  },
  {
    "text": "and does it support like if I have plus row between eks OpenShift",
    "start": "2170550",
    "end": "2176070"
  },
  {
    "text": "does still support it is there any challenge you guys can see so it really",
    "start": "2176070",
    "end": "2181560"
  },
  {
    "text": "depends on so one key thing here is the load balancer names that we have shown so those are like the cloud native not",
    "start": "2181560",
    "end": "2189420"
  },
  {
    "text": "the cloner let the provider native names that get created so as long as you have",
    "start": "2189420",
    "end": "2194970"
  },
  {
    "text": "the support for the issuing this gateway to get a public-facing dns name I think",
    "start": "2194970",
    "end": "2200430"
  },
  {
    "text": "you should be good yeah and note like that parole is running like it needs to access to all the clusters right so in",
    "start": "2200430",
    "end": "2207060"
  },
  {
    "text": "this case like the IM rod or the instance profile should be like much more higher like you know access to this",
    "start": "2207060",
    "end": "2213150"
  },
  {
    "text": "so do you have anywhere like document it like you know what are the types of policies you'll be using in that row so",
    "start": "2213150",
    "end": "2221130"
  },
  {
    "text": "yeah yeah you can in the in that example there's role definitions for the access",
    "start": "2221130",
    "end": "2229200"
  },
  {
    "text": "that admiral needs in general the admiral only has it reads different",
    "start": "2229200",
    "end": "2236190"
  },
  {
    "text": "information from the cluster but it only writes some of the sto configuration so",
    "start": "2236190",
    "end": "2241320"
  },
  {
    "start": "2239000",
    "end": "2239000"
  },
  {
    "text": "it has write access based it's to a configuration but reads some of the kubernetes types and sto configuration",
    "start": "2241320",
    "end": "2246720"
  },
  {
    "text": "but it's the rule the rules are fairly well locked down as tight as we can make",
    "start": "2246720",
    "end": "2253530"
  },
  {
    "text": "em at least it seems that you sort of build like service discovery like you",
    "start": "2253530",
    "end": "2258600"
  },
  {
    "text": "build some sort of global service discovery right what what what was the",
    "start": "2258600",
    "end": "2264990"
  },
  {
    "text": "reason to not use a service registry for that other than just like kubernetes here DISA register because you map for",
    "start": "2264990",
    "end": "2270690"
  },
  {
    "text": "cod2 a few Lelo balances right that will then use sni to",
    "start": "2270690",
    "end": "2276030"
  },
  {
    "text": "and as a segue how would this work if the call was not coming from for example",
    "start": "2276030",
    "end": "2282300"
  },
  {
    "text": "the books but coming directly to the payments through Oh gob right well the",
    "start": "2282300",
    "end": "2289470"
  },
  {
    "text": "wait still be applied things like that or its yeah because in the perspective",
    "start": "2289470",
    "end": "2294570"
  },
  {
    "text": "of the owner right I want like my perspective as an application owner for payments I want the knowledge of the balance it",
    "start": "2294570",
    "end": "2302130"
  },
  {
    "text": "doesn't matter like necessarily who is calling me yeah yeah yeah so so this particular",
    "start": "2302130",
    "end": "2310320"
  },
  {
    "text": "implementation implements that name and that locality routing is all native within the mesh itself right so it",
    "start": "2310320",
    "end": "2315780"
  },
  {
    "text": "doesn't have any it's not outside of any of the there's no visibility outside of",
    "start": "2315780",
    "end": "2322050"
  },
  {
    "text": "it so if you address that that payment service from a point that was outside of the mesh that would need an external DNS",
    "start": "2322050",
    "end": "2329520"
  },
  {
    "text": "name certificates that match it and so on and so forth right so internal to the",
    "start": "2329520",
    "end": "2335220"
  },
  {
    "text": "mesh we're able to manage that and then allow on board to give us that layer seven control over the global routing",
    "start": "2335220",
    "end": "2340890"
  },
  {
    "text": "pieces of it so yeah and the external traffic would be coming through the API gateway which would be in part way",
    "start": "2340890",
    "end": "2348270"
  },
  {
    "text": "participating in the mesh as well so that would solve that problem basically thank you great presentation okay thank",
    "start": "2348270",
    "end": "2361830"
  },
  {
    "text": "you",
    "start": "2361830",
    "end": "2363890"
  }
]