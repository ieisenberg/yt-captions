[
  {
    "text": "welcome everyone thank you for joining for this Friday afternoon session uh",
    "start": "280",
    "end": "5799"
  },
  {
    "text": "today we are going to have stop kubernetes revolving doors and some tutorial to secure a cuetes cluster so",
    "start": "5799",
    "end": "12400"
  },
  {
    "text": "my name is May I'm working as a software engineer at isov villance uh let me",
    "start": "12400",
    "end": "18400"
  },
  {
    "text": "introduce Savita thank you thank you mah My name is Savita ragunan I am a senior software engineer at redart I also work",
    "start": "18400",
    "end": "26880"
  },
  {
    "text": "with Mah and Reay on the SEC kuity Sig Security Group I'm the lead for six",
    "start": "26880",
    "end": "33480"
  },
  {
    "text": "security documentations of project and now I'll pass it over to Ray hey folks",
    "start": "33480",
    "end": "39800"
  },
  {
    "text": "my name is Ray Lano I'm a Solutions architect at Red ha hats I'm also uh one of the co-chairs of kubernetes Sig docs",
    "start": "39800",
    "end": "47360"
  },
  {
    "text": "I'm also one of the sub project leads for Sig security so I help run the external security audit of for the",
    "start": "47360",
    "end": "56399"
  },
  {
    "text": "project and if you don't know um Upstream kubernetes by default is not",
    "start": "56440",
    "end": "62280"
  },
  {
    "text": "secure guard rails are not in place when you install Upstream kubernetes so that means pods can freely talk to other pods",
    "start": "62280",
    "end": "69759"
  },
  {
    "text": "even on other nodes uh if we could easily Traverse across namespaces as well uh if a user has somehow breached a",
    "start": "69759",
    "end": "78040"
  },
  {
    "text": "pod or container they can also be able to access the the cube API server and also the the worker node itself so here",
    "start": "78040",
    "end": "86000"
  },
  {
    "text": "we're talk we're here to talk about how to secure kubernetes and we did publish an upstream security guide checklist on",
    "start": "86000",
    "end": "93439"
  },
  {
    "text": "how to do that thanks Ray uh yeah the security check list was merged almost two years",
    "start": "93439",
    "end": "99680"
  },
  {
    "text": "ago now you can see in this picture that many people actually participated in its creation you have a bunch of reviewers a",
    "start": "99680",
    "end": "106640"
  },
  {
    "text": "bunch of authors on the on the pr and we had a lot of discussion around this like uh we created some draft and then we had",
    "start": "106640",
    "end": "113280"
  },
  {
    "text": "like something like 200 uh conversation on this uh PR so the idea the goal was",
    "start": "113280",
    "end": "119240"
  },
  {
    "text": "to provide the Community with like a basic but solid official checklist uh",
    "start": "119240",
    "end": "124479"
  },
  {
    "text": "that is not maybe sufficient but it's it's a nice start for starting your security Journey with kubernetes and",
    "start": "124479",
    "end": "131280"
  },
  {
    "text": "because quite often um so it looks like that uh quite often the question about",
    "start": "131280",
    "end": "137040"
  },
  {
    "text": "Security in kubernetes is like where to start so this checklist give you a bunch",
    "start": "137040",
    "end": "143319"
  },
  {
    "text": "of list of pain points and how to De deep into like this uh",
    "start": "143319",
    "end": "150920"
  },
  {
    "text": "pain point and and learn more details directly in the kubernetes",
    "start": "150920",
    "end": "156239"
  },
  {
    "text": "documentation right once again there's a link to this kuet security checklist uh like myad said it is uh a basic security",
    "start": "157239",
    "end": "164200"
  },
  {
    "text": "guidance uh it may not and is not sufficient for production but it is a good starting point uh so some of the",
    "start": "164200",
    "end": "171239"
  },
  {
    "text": "sections of that security checklist is authentication and authorization uh we're going to go a little bit high",
    "start": "171239",
    "end": "177000"
  },
  {
    "text": "level and we're going to go dive deep in the tutorial so we want want to go into the tutorial uh pretty quick to get",
    "start": "177000",
    "end": "182319"
  },
  {
    "text": "folks started in the workshop so with the security checklist topics we have authentication authorization like to",
    "start": "182319",
    "end": "188640"
  },
  {
    "text": "make sure uh service accounts are being used by your workloads making sure the super User Group uh system Masters is",
    "start": "188640",
    "end": "195040"
  },
  {
    "text": "not used and if it is used why there might be why so we have to take a look in the workshop uh make sure the arback",
    "start": "195040",
    "end": "201720"
  },
  {
    "text": "good practices are actually uh use there is an arback good practice guide as well",
    "start": "201720",
    "end": "206879"
  },
  {
    "text": "then we'll go into network security uh make sure to you can or you are using uh a cni plugin that uh that can do Network",
    "start": "206879",
    "end": "214560"
  },
  {
    "text": "policies so we so we can secure Nam spaces uh as well uh make sure we have",
    "start": "214560",
    "end": "219760"
  },
  {
    "text": "default deny all uh Network policies as well we can control the Ingress and egress also we want to make sure we",
    "start": "219760",
    "end": "226519"
  },
  {
    "text": "don't expose uh ETD or the API server or the CU API out to the internet then",
    "start": "226519",
    "end": "231959"
  },
  {
    "text": "we'll go into pod security uh we'll learn how to uh create arbac or use arbac to create uh to use like a pod",
    "start": "231959",
    "end": "238879"
  },
  {
    "text": "viewer role and to make sure only the the folks that actually need the crate",
    "start": "238879",
    "end": "244120"
  },
  {
    "text": "uh ability or the patch ability the delete ability actually have those uh next we'll go into Mission controllers",
    "start": "244120",
    "end": "250280"
  },
  {
    "text": "we'll take a look at the Pod security Mission controller and take a look at pod security standards as well which",
    "start": "250280",
    "end": "255879"
  },
  {
    "text": "replace pod security policy uh what we we won't go through all of the sections through today's tutorial we won't we",
    "start": "255879",
    "end": "262440"
  },
  {
    "text": "won't go through logs and auditing uh but if you do have uh audit logs enabled",
    "start": "262440",
    "end": "267560"
  },
  {
    "text": "to make sure that they are protected from General access we will do pod placements so we'll take a look on how",
    "start": "267560",
    "end": "273479"
  },
  {
    "text": "to uh Place pods uh securely into or to isolate to to isolate your highly",
    "start": "273479",
    "end": "280639"
  },
  {
    "text": "sensitive applications uh running on nodes we'll also take a look on how to",
    "start": "280639",
    "end": "285800"
  },
  {
    "text": "place pods on specific nodes as well uh we won't go into secrets too much because well we're not going to do an",
    "start": "285800",
    "end": "291639"
  },
  {
    "text": "external Secret store and we won't go through uh images like like scanning for scanning your",
    "start": "291639",
    "end": "298240"
  },
  {
    "text": "images so for this tutorial we are going to use kind um we have developed in such",
    "start": "298240",
    "end": "304880"
  },
  {
    "text": "a way that it can run in your local machine um so you can try it out later",
    "start": "304880",
    "end": "311400"
  },
  {
    "text": "if you want to go home and you know have a refresher or you want to pass it on to your friends you can we have the repo",
    "start": "311400",
    "end": "318639"
  },
  {
    "text": "shared in the um little paper that we have put there and we will also upload",
    "start": "318639",
    "end": "323960"
  },
  {
    "text": "the slides um the prerequisites for this is doer and kind is Essen e communities",
    "start": "323960",
    "end": "330600"
  },
  {
    "text": "in Docker so each notes runs as a Docker container and we have provision the kind",
    "start": "330600",
    "end": "337840"
  },
  {
    "text": "cluster with celium celium is going to help us do the network policies and um",
    "start": "337840",
    "end": "345240"
  },
  {
    "text": "kind is also a kubernetes project and it is used for local development and",
    "start": "345240",
    "end": "350960"
  },
  {
    "text": "integration testing and everything it's a really cool project if you want to test new features it's always up to date",
    "start": "350960",
    "end": "356680"
  },
  {
    "text": "so I think Whenever there is a kues releases made the next day or immediately the updated version of kind",
    "start": "356680",
    "end": "363600"
  },
  {
    "text": "is available so it's cool um we are also going to use instrict um as our platform",
    "start": "363600",
    "end": "370319"
  },
  {
    "text": "this is a browser BL browser based platform which lets you do copy paste or",
    "start": "370319",
    "end": "376479"
  },
  {
    "text": "click and run so that uh to provide a really good um experience for you all",
    "start": "376479",
    "end": "383400"
  },
  {
    "text": "today going to go on here and we are going to pause here for a few minutes so",
    "start": "383400",
    "end": "389039"
  },
  {
    "text": "please um feel free to log on U and if you have any questions or",
    "start": "389039",
    "end": "395560"
  },
  {
    "text": "anything please let us know all right so there's going to be eight modules we'll give some folks some",
    "start": "395560",
    "end": "402360"
  },
  {
    "text": "time to log in uh there are sheets uh with the same login or the same short uh",
    "start": "402360",
    "end": "408479"
  },
  {
    "text": "URL link and with the QR code as well so please feel free to log in as well so",
    "start": "408479",
    "end": "413800"
  },
  {
    "text": "we're going to try to go through slowly uh the steps as well uh but you can go on your own pace uh there are eight",
    "start": "413800",
    "end": "420440"
  },
  {
    "text": "modules like I mentioned uh so I will go through hopefully I'll I can enlarge",
    "start": "420440",
    "end": "426360"
  },
  {
    "text": "this I'm going just going to start uh wait a few more minutes to get uh to wait for folks",
    "start": "426360",
    "end": "432360"
  },
  {
    "text": "to okay got",
    "start": "432360",
    "end": "435960"
  },
  {
    "text": "it and does anyone need a copy of the access let me put it go back to that",
    "start": "441039",
    "end": "447360"
  },
  {
    "text": "slide for now",
    "start": "447360",
    "end": "450918"
  },
  {
    "text": "okay all right sounds good looks like we have a fair amount of people logged in",
    "start": "457400",
    "end": "462479"
  },
  {
    "text": "um so we'll start and like I mentioned I'm going to try we're going to try to go through this slowly uh and explain",
    "start": "462479",
    "end": "468960"
  },
  {
    "text": "some of the concepts as well and there are some loading times as",
    "start": "468960",
    "end": "477520"
  },
  {
    "text": "well so I'm going to go to starts you have your terminal on the left let's see how it looks okay on the screen and you",
    "start": "477520",
    "end": "484879"
  },
  {
    "text": "have instructions on the right uh so the format is there's some concept explanation uh what each module is going",
    "start": "484879",
    "end": "491800"
  },
  {
    "text": "to cover in terms of the of the security checklist uh and also some steps and",
    "start": "491800",
    "end": "497479"
  },
  {
    "text": "there is a click to run functionality as well uh there are some modules that does have checks so you do have to make sure",
    "start": "497479",
    "end": "503560"
  },
  {
    "text": "that you do all the steps uh in that module so the first one is authentic and",
    "start": "503560",
    "end": "510080"
  },
  {
    "text": "authorization about the system Masters group so uh one uh such default group is",
    "start": "510080",
    "end": "516880"
  },
  {
    "text": "a system Masters and uh the security checklist says make sure that we're not using system Masters uh for any user or",
    "start": "516880",
    "end": "525519"
  },
  {
    "text": "uh in a group uh for for authentication after bootstrapping and to also make sure the uh role based Access Control",
    "start": "525519",
    "end": "532440"
  },
  {
    "text": "good practices are followed for guidance uh so in that same arbac practice guide",
    "start": "532440",
    "end": "537720"
  },
  {
    "text": "uh we have a concept of granting lease privilege so we want to make sure that there is minimal rback rights given and",
    "start": "537720",
    "end": "543480"
  },
  {
    "text": "there is a module on how to create those minimal rback rights so if you don't know system Masters group is a hardcoded",
    "start": "543480",
    "end": "550200"
  },
  {
    "text": "group and uh it actually bypasses all all authorization checks so it gives uh",
    "start": "550200",
    "end": "557040"
  },
  {
    "text": "someone who is using or in the system Master groups uh super user rights uh in the ku9 cluster so you are cluster",
    "start": "557040",
    "end": "565839"
  },
  {
    "text": "admin a little bit more into uh some Concepts on how kubernetes does uh rolls",
    "start": "565839",
    "end": "571519"
  },
  {
    "text": "and uh roll bindings uh so uh kubernetes does use rback by default um so we with",
    "start": "571519",
    "end": "579720"
  },
  {
    "text": "our back there are uh four types of kubernetes objects uh two are namespace two are not Nam space uh so uh roles and",
    "start": "579720",
    "end": "587800"
  },
  {
    "text": "cluster roles is where we actually Define the set of permissions uh and the permissions are addtive there's no deny",
    "start": "587800",
    "end": "594120"
  },
  {
    "text": "roles to them roles are Nam space cluster roles are not Nam space",
    "start": "594120",
    "end": "599880"
  },
  {
    "text": "and to actually Grant a user uh or a group those defined roles in a in a role",
    "start": "599880",
    "end": "606800"
  },
  {
    "text": "or cluster role uh we use a um binding so they could be a role binding which is",
    "start": "606800",
    "end": "613399"
  },
  {
    "text": "namespace or a cluster role binding so with cluster Ro binding or or Ro binding",
    "start": "613399",
    "end": "618519"
  },
  {
    "text": "is what we will use to Grant permission defined in those roles or cluster roles to users groups or service",
    "start": "618519",
    "end": "626720"
  },
  {
    "text": "accounts and a role binding uh we're going to go through some of the concepts",
    "start": "628320",
    "end": "633560"
  },
  {
    "text": "here it's used to Grant uh the Pod reader role to user if we do create a role called pod reader for like get",
    "start": "633560",
    "end": "640560"
  },
  {
    "text": "watch and list and then we could apply that bind it with a role binding so back to the security",
    "start": "640560",
    "end": "646959"
  },
  {
    "text": "checklist we're going to check to see if the system Masters group uh is actually being used and we'll verify it uh with",
    "start": "646959",
    "end": "653040"
  },
  {
    "text": "if any cluster Ro bindings or role bindings Grant those permissions to a group so first one is indirect to",
    "start": "653040",
    "end": "660920"
  },
  {
    "text": "inspect the cluster R bindings and and roll bindings so we're going to uh take",
    "start": "660920",
    "end": "666040"
  },
  {
    "text": "a look to see what the cluster roll bindings are actually created in the",
    "start": "666040",
    "end": "671200"
  },
  {
    "text": "cluster with key control get cluster roll bindings and these are cluster these are cluster",
    "start": "671200",
    "end": "678399"
  },
  {
    "text": "wide so we see a very uh long list here of cluster roll",
    "start": "678639",
    "end": "685399"
  },
  {
    "text": "bindings I'm not going to go through all of it so there is a long list cluster Ro binding so we're going to try to find uh",
    "start": "685399",
    "end": "691839"
  },
  {
    "text": "better ways on how to actually find to see uh if the uh if the system Masters group is being",
    "start": "691839",
    "end": "699000"
  },
  {
    "text": "used so we're going to check the description of one of these cluster Ro bindings the system Public public info",
    "start": "699000",
    "end": "707320"
  },
  {
    "text": "viewer and we see here uh the expected outputs here on the left here we do Cube",
    "start": "707519",
    "end": "713160"
  },
  {
    "text": "control describe on that cluster Ro binding on system public info viewer so we can see the name we see see the the",
    "start": "713160",
    "end": "720040"
  },
  {
    "text": "role that it's binding and we see the name of that role as well and as we see the subjects here we",
    "start": "720040",
    "end": "727600"
  },
  {
    "text": "have the system authenticated and system",
    "start": "727600",
    "end": "732800"
  },
  {
    "text": "unauthenticated so with this we see the cluster Ro binding here binds the permissions uh that are set in the",
    "start": "732920",
    "end": "738440"
  },
  {
    "text": "system public info viewer uh to two groups that system authenticated and system",
    "start": "738440",
    "end": "744959"
  },
  {
    "text": "unauthenticated and both the system authenticated and system un ticated are",
    "start": "744959",
    "end": "750160"
  },
  {
    "text": "builting groups so we're going to now check the",
    "start": "750160",
    "end": "755839"
  },
  {
    "text": "Manifest of the same cluster rule binding here of the public info",
    "start": "755839",
    "end": "762040"
  },
  {
    "text": "viewer and we got a bigl file here uh we could also same get the same manifest in",
    "start": "762040",
    "end": "768000"
  },
  {
    "text": "Json as",
    "start": "768000",
    "end": "770760"
  },
  {
    "text": "well so with uh the ability to use Json we could use a command line uh Json",
    "start": "773600",
    "end": "780120"
  },
  {
    "text": "processor called JQ to use to par to search for any cluster Ro bindings and R",
    "start": "780120",
    "end": "785839"
  },
  {
    "text": "Bindings that bind that system Masters group so we're going to try to find a",
    "start": "785839",
    "end": "791720"
  },
  {
    "text": "way to retrieve that easily so first let's get all cluster R bindings in Json so this is all the cluster roll bindings",
    "start": "791720",
    "end": "797880"
  },
  {
    "text": "in Json so it's a lot to go through we're not going to go through all of it of course but it's a little bit much to",
    "start": "797880",
    "end": "803639"
  },
  {
    "text": "uh to go through all of them",
    "start": "803639",
    "end": "807639"
  },
  {
    "text": "so the way we're going to actually find to see if the cluster Ro binding binds the system Master groups uh we're going",
    "start": "810399",
    "end": "815720"
  },
  {
    "text": "to use GP it's simple to use so we're going to do the same thing uh get the cluster all cluster Ro bindings the",
    "start": "815720",
    "end": "822800"
  },
  {
    "text": "outputs to Json and just grap for system Masters to see if it's actually being used and we see it actually being",
    "start": "822800",
    "end": "829800"
  },
  {
    "text": "used so do we expect that maybe so we'll take a look and see uh what is what role",
    "start": "829800",
    "end": "836399"
  },
  {
    "text": "or what group is using the system Masters so to verify uh if this output is",
    "start": "836399",
    "end": "843920"
  },
  {
    "text": "correct uh or to get more info we're going to use a the before context with",
    "start": "843920",
    "end": "850519"
  },
  {
    "text": "grap and we get some nice trace on here so now we can see that the cluster admin",
    "start": "852120",
    "end": "858920"
  },
  {
    "text": "cluster roll binding binds the cluster admin cluster roll to the system Masters",
    "start": "858920",
    "end": "864399"
  },
  {
    "text": "group and uh and the cluster admin uh is a default uh one of the default cluster",
    "start": "864399",
    "end": "870959"
  },
  {
    "text": "roles and it is supposed to use the system Masters",
    "start": "870959",
    "end": "876160"
  },
  {
    "text": "group so it's typically used uh during the bootstrapping",
    "start": "876160",
    "end": "881480"
  },
  {
    "text": "process so we're going to check to see if cluster roll bindings or R bindings",
    "start": "882079",
    "end": "888079"
  },
  {
    "text": "uh that bind to the system Master groups with using JQ so here we're going to J use JQ get",
    "start": "888079",
    "end": "895320"
  },
  {
    "text": "all the cluster Ro bindings again and Json uh we're going to use J J J Q to iterate over the items and we're going",
    "start": "895320",
    "end": "902079"
  },
  {
    "text": "to use the select function in J Q to uh to find if the group if there is a group",
    "start": "902079",
    "end": "908120"
  },
  {
    "text": "that equals system",
    "start": "908120",
    "end": "911079"
  },
  {
    "text": "Masters so we do have an output of course we have that cluster admin uh that we",
    "start": "913759",
    "end": "920759"
  },
  {
    "text": "expect uh so there is an error as well which we uh we cannot iterate over null",
    "start": "920759",
    "end": "926199"
  },
  {
    "text": "uh and we get that error because uh there are cluster Ro by that do not have Subs uh so we could actually fix that if",
    "start": "926199",
    "end": "932560"
  },
  {
    "text": "you want to make it more cleaner we could add a question mark uh to any of the the close bra open and close",
    "start": "932560",
    "end": "937680"
  },
  {
    "text": "brackets uh so we could we to not output that",
    "start": "937680",
    "end": "943079"
  },
  {
    "text": "error now we have a clean outputs that we can use for further",
    "start": "943240",
    "end": "949519"
  },
  {
    "text": "iteration so now we could now we know how to parse using JQ now we could uh",
    "start": "949519",
    "end": "954880"
  },
  {
    "text": "take a look with using Cube control and using custom columns and using subshell",
    "start": "954880",
    "end": "960360"
  },
  {
    "text": "we could make a nice pretty output of custom columns to see if there are any cluster roll Bindings that uh used and",
    "start": "960360",
    "end": "966720"
  },
  {
    "text": "the bind system Masters and we could take a look at that and we do have the cluster roll binding as we expect uh",
    "start": "966720",
    "end": "972839"
  },
  {
    "text": "with cluster admin uh which binds the cluster admin cluster roll to the system",
    "start": "972839",
    "end": "979360"
  },
  {
    "text": "Masters so now it's easy to use uh we have easy to read columns so we could we could use further",
    "start": "979959",
    "end": "986399"
  },
  {
    "text": "on now we could also take a look to see for the cluster uh for for cluster BR",
    "start": "986399",
    "end": "992000"
  },
  {
    "text": "bindings as well and we use the same we use JQ to",
    "start": "992000",
    "end": "997199"
  },
  {
    "text": "iterate and we do expect the cluster admin which we do",
    "start": "998680",
    "end": "1004360"
  },
  {
    "text": "expect now we could also use the subshell with that same query to Output the names of the cluster R Bindings that",
    "start": "1004360",
    "end": "1010680"
  },
  {
    "text": "have the system Masters group in the sub and the subject uh to the C control command that outputs to the custom",
    "start": "1010680",
    "end": "1017680"
  },
  {
    "text": "columns and and we have a command that outputs the cluster R bindings with the assistant Masters groups in the subject",
    "start": "1017680",
    "end": "1024558"
  },
  {
    "text": "and also outputs the name of the cluster Ro bindings in the cluster role and we can also add uh in any subjects possible",
    "start": "1024559",
    "end": "1031600"
  },
  {
    "text": "subjects and also any labels so here we do have the nice",
    "start": "1031600",
    "end": "1039000"
  },
  {
    "text": "outputs of the cluster roll cluster roll biting with a subject system Masters any possible labels as well that actually",
    "start": "1039000",
    "end": "1046558"
  },
  {
    "text": "tell us that it's actually used for bootstrapping and part of the rback",
    "start": "1046559",
    "end": "1051600"
  },
  {
    "text": "defaults now we have a cluster Ro binding but there might be a ro binding that actually uses system master so",
    "start": "1053640",
    "end": "1059840"
  },
  {
    "text": "let's use that same Curry to see if we have any Ro Bindings that might uh use system Masters which it should not and",
    "start": "1059840",
    "end": "1066720"
  },
  {
    "text": "we do not so we have that as your expected output uh just to summarize so system",
    "start": "1066720",
    "end": "1072720"
  },
  {
    "text": "masteress is a special super user group that is uh used for bootstrapping and should not uh be used by any cluster",
    "start": "1072720",
    "end": "1079640"
  },
  {
    "text": "roll binding or any R binding outside of the default and to check it uh we have",
    "start": "1079640",
    "end": "1085320"
  },
  {
    "text": "we use JQ to iterate uh over all the cluster roll bindings and also all the r bindings as",
    "start": "1085320",
    "end": "1093000"
  },
  {
    "text": "well all right so I'm going to it's going to take a few seconds for the next module to load up so we'll give some",
    "start": "1095360",
    "end": "1102240"
  },
  {
    "text": "time yeah I wanted to ask thank you right I wanted to ask like does anybody",
    "start": "1102240",
    "end": "1108120"
  },
  {
    "text": "uh have any isue joining the workshop is it",
    "start": "1108120",
    "end": "1114480"
  },
  {
    "text": "me oh",
    "start": "1114480",
    "end": "1117960"
  },
  {
    "text": "yeah no yes yes you can actually uh do an Opa",
    "start": "1124400",
    "end": "1129919"
  },
  {
    "text": "policy um as your external admission controller as well so you can prevent uh any cluster rooll bindings Ro bindings",
    "start": "1129919",
    "end": "1137000"
  },
  {
    "text": "to use system master and that's probably very advisable to",
    "start": "1137000",
    "end": "1143320"
  },
  {
    "text": "them so yeah I assume that it works for everyone in the room yeah nobody has an",
    "start": "1144400",
    "end": "1150600"
  },
  {
    "text": "issue joining the thing just want to make a note it's not just open use keboard and",
    "start": "1150600",
    "end": "1156400"
  },
  {
    "text": "kyber other admission controllers as",
    "start": "1156400",
    "end": "1160600"
  },
  {
    "text": "well all right then let's move on to the next one so here we're going to see",
    "start": "1161440",
    "end": "1167360"
  },
  {
    "text": "about applying netor Network policies and it is from the network security section of the checklist so we're going",
    "start": "1167360",
    "end": "1174960"
  },
  {
    "text": "to see how to apply Ingress and egress Network policies and default Network",
    "start": "1174960",
    "end": "1182760"
  },
  {
    "text": "policies within each Nam space selecting all parts denying everything or in place",
    "start": "1182760",
    "end": "1188960"
  },
  {
    "text": "um to give a little bit of background given the distributed nature of kubernetes networking is a critical",
    "start": "1188960",
    "end": "1196039"
  },
  {
    "text": "component there is container to container communication part to part communication part to service service to",
    "start": "1196039",
    "end": "1203360"
  },
  {
    "text": "external and YC versa so there is a lot of networking to deal with um in this",
    "start": "1203360",
    "end": "1209480"
  },
  {
    "text": "section we're going to see how to apply Network policies on part toart",
    "start": "1209480",
    "end": "1215159"
  },
  {
    "text": "Communications so in a typical cluster there could be a number of name spaces",
    "start": "1215159",
    "end": "1221240"
  },
  {
    "text": "and each name space can pertain to a team or a critical",
    "start": "1221240",
    "end": "1227200"
  },
  {
    "text": "workload and we would want to ensure that they stay safe if something is",
    "start": "1227200",
    "end": "1233440"
  },
  {
    "text": "going to expose uh pii information we want to make sure only the authenticator only the allowed Parts can reach out to",
    "start": "1233440",
    "end": "1240480"
  },
  {
    "text": "this one um where we can get that information that is the use of network",
    "start": "1240480",
    "end": "1246200"
  },
  {
    "text": "policies and it can go beyond that uh in this we are just going to see very simple how to apply it between two parts",
    "start": "1246200",
    "end": "1254240"
  },
  {
    "text": "running in a source name space and a Target name space we're going to create two name space is first and we are going",
    "start": "1254240",
    "end": "1260360"
  },
  {
    "text": "to create two anic spots and then we are going to create a service for each of",
    "start": "1260360",
    "end": "1265400"
  },
  {
    "text": "those spots so that they can be accessible and then we're going to see if we can reach out from one part to the",
    "start": "1265400",
    "end": "1272440"
  },
  {
    "text": "another so let's get started here I'm going to first create a",
    "start": "1272440",
    "end": "1279520"
  },
  {
    "text": "source Nam space and then a Target name",
    "start": "1279520",
    "end": "1284760"
  },
  {
    "text": "space and I'm also going to create a um",
    "start": "1284760",
    "end": "1291520"
  },
  {
    "text": "pod that runs engine X 1.27 image it's a very simple web server part and I'm",
    "start": "1291520",
    "end": "1298760"
  },
  {
    "text": "going to create another one in the Target name space running which is going to run the same um",
    "start": "1298760",
    "end": "1304880"
  },
  {
    "text": "image and now that we have all the parts running let's just verify it yes we have",
    "start": "1304880",
    "end": "1311400"
  },
  {
    "text": "the parts running in the source name space same goes the target name",
    "start": "1311400",
    "end": "1317240"
  },
  {
    "text": "space and and uh let's create services on each of the namespace",
    "start": "1317240",
    "end": "1324039"
  },
  {
    "text": "so that these parts can be accessible so when we create a service it's going to create a a good um friendly DNS um URL",
    "start": "1324039",
    "end": "1334559"
  },
  {
    "text": "for us which uses the cluster DNS that can be accessed in general the format",
    "start": "1334559",
    "end": "1340440"
  },
  {
    "text": "the part name the um uh Nam space and",
    "start": "1340440",
    "end": "1345480"
  },
  {
    "text": "SVC do there there is a format for it I think that cluster. local and um let me",
    "start": "1345480",
    "end": "1354200"
  },
  {
    "text": "see if I did the target let me just do the source as well yes we have two of",
    "start": "1354200",
    "end": "1360159"
  },
  {
    "text": "the services created going to see if it's",
    "start": "1360159",
    "end": "1368080"
  },
  {
    "text": "up all right okay so this is a format that we have um service. namespace SVC",
    "start": "1370360",
    "end": "1376520"
  },
  {
    "text": "cluster. looc and now that we have these two up and",
    "start": "1376520",
    "end": "1382320"
  },
  {
    "text": "running let's see if we could um reach from the andine next SP that's running",
    "start": "1382320",
    "end": "1387720"
  },
  {
    "text": "in the source name space to the one that's running in the Target name space we are just going to use Cube gutle exit",
    "start": "1387720",
    "end": "1395159"
  },
  {
    "text": "and then just do a simple call so yes it can reach there is no",
    "start": "1395159",
    "end": "1402120"
  },
  {
    "text": "network policies in place and every part can reach out to every other part using",
    "start": "1402120",
    "end": "1407960"
  },
  {
    "text": "services now let's get started by applying a",
    "start": "1407960",
    "end": "1413320"
  },
  {
    "text": "simple Network policy in the Target name space what we're going to do is we are going to um deny all traffic Ingress",
    "start": "1413320",
    "end": "1421919"
  },
  {
    "text": "egress Ingress is any traffic that comes into the part from external entities and",
    "start": "1421919",
    "end": "1427840"
  },
  {
    "text": "then ESS is any top any traffic that goes of the part to external entities so",
    "start": "1427840",
    "end": "1433320"
  },
  {
    "text": "we're going to deny all of them so none of the part should be able able to reach out to any",
    "start": "1433320",
    "end": "1439919"
  },
  {
    "text": "parts running in the Target name space let's create this network",
    "start": "1439919",
    "end": "1446080"
  },
  {
    "text": "policy once we have that we are going to run the same command that we ran before",
    "start": "1446080",
    "end": "1451200"
  },
  {
    "text": "we're going to try and reach out to this part in the Target name space from the one in the source name",
    "start": "1451200",
    "end": "1458000"
  },
  {
    "text": "space so you have a time out of 10 seconds",
    "start": "1458000",
    "end": "1463960"
  },
  {
    "text": "and should not be able to reach to that yes the connection Ed out and we",
    "start": "1463960",
    "end": "1469440"
  },
  {
    "text": "shouldn't be able to reach out that is because we already have a policy in place what we're going to do is now we",
    "start": "1469440",
    "end": "1476880"
  },
  {
    "text": "are going to create another policy to just allow Ingress from The Source um",
    "start": "1476880",
    "end": "1484399"
  },
  {
    "text": "name space to the Target name space here you can see we are creating a",
    "start": "1484399",
    "end": "1489640"
  },
  {
    "text": "policy in Target name space and then the type is ingress and then we are um",
    "start": "1489640",
    "end": "1496399"
  },
  {
    "text": "adding a namespace selector saying that anything from the source name space any part from the known source name space",
    "start": "1496399",
    "end": "1502679"
  },
  {
    "text": "should be able to reach out to the ones and the target name space let's go ahead and create",
    "start": "1502679",
    "end": "1508039"
  },
  {
    "text": "this and see that the policy is created and let's",
    "start": "1508039",
    "end": "1516000"
  },
  {
    "text": "now do the same test and yeah so now we are able to",
    "start": "1516000",
    "end": "1521880"
  },
  {
    "text": "reach out because the policies are in place um that's great let's just test",
    "start": "1521880",
    "end": "1527720"
  },
  {
    "text": "this by Crea creating a new namespace called new source and we will re repeat the same",
    "start": "1527720",
    "end": "1535240"
  },
  {
    "text": "process we did create a pod expose the Pod using a service so that it's",
    "start": "1535240",
    "end": "1540799"
  },
  {
    "text": "accessible and from that pod we will try and reach out to the Target name space just to verify if you're are able to",
    "start": "1540799",
    "end": "1547240"
  },
  {
    "text": "reach out uh to anything in Target name space since we have two Network policies",
    "start": "1547240",
    "end": "1553320"
  },
  {
    "text": "there created that and I think the part is",
    "start": "1553320",
    "end": "1561720"
  },
  {
    "text": "ready going to",
    "start": "1562520",
    "end": "1566080"
  },
  {
    "text": "just out and",
    "start": "1568840",
    "end": "1572480"
  },
  {
    "text": "see yeah so this confirms that we are able to apply the network policies the",
    "start": "1574799",
    "end": "1582919"
  },
  {
    "text": "network policies that we applied are working as intended so if we just redo the test again from our source to the",
    "start": "1582919",
    "end": "1590159"
  },
  {
    "text": "Target uh the pods from The Source name space to the one in the Target name space we should be able to",
    "start": "1590159",
    "end": "1597520"
  },
  {
    "text": "access the data so now we have a two policies a",
    "start": "1597520",
    "end": "1604760"
  },
  {
    "text": "default deny Ingress and egress from the target name space so any of the traffic",
    "start": "1604760",
    "end": "1612840"
  },
  {
    "text": "that is going out of the target name space to any of the name space should",
    "start": "1612840",
    "end": "1618039"
  },
  {
    "text": "not not work because we already have uh we are blocking the egis let's just",
    "start": "1618039",
    "end": "1624799"
  },
  {
    "text": "confirm that so in this we are reaching from the pod in the Target name space to",
    "start": "1624799",
    "end": "1632200"
  },
  {
    "text": "the pod in the source name space so we see that this errors out and",
    "start": "1632200",
    "end": "1640360"
  },
  {
    "text": "now let's go ahead and create the policy that we did before but this time we are",
    "start": "1640360",
    "end": "1646440"
  },
  {
    "text": "going to say it's an e type and we will select the source name space so once we",
    "start": "1646440",
    "end": "1652559"
  },
  {
    "text": "have this policy technically we should be able to reach out to the part in the",
    "start": "1652559",
    "end": "1659080"
  },
  {
    "text": "source name space let's go and repeat our",
    "start": "1659080",
    "end": "1666320"
  },
  {
    "text": "test so we are again reaching from the T part in the Target name space to the one",
    "start": "1666320",
    "end": "1672519"
  },
  {
    "text": "the source name space it's taking a while it shouldn't take a while it should be able to we",
    "start": "1672519",
    "end": "1679440"
  },
  {
    "text": "should be able to access we have all the policies in place so let's try and um",
    "start": "1679440",
    "end": "1687399"
  },
  {
    "text": "do take a step back and think why this might be happening this could be because it's not able to disolve the DNS um",
    "start": "1687399",
    "end": "1695320"
  },
  {
    "text": "records Let's test our Theory by getting the IP of the part in",
    "start": "1695320",
    "end": "1702960"
  },
  {
    "text": "the source name space and we will use that IP to",
    "start": "1702960",
    "end": "1708279"
  },
  {
    "text": "reach out to from the part in the targetting space so we are able to do it so it is",
    "start": "1708279",
    "end": "1715720"
  },
  {
    "text": "definitely DNS like always um the reason why it is not working here is that all",
    "start": "1715720",
    "end": "1723159"
  },
  {
    "text": "the core components of the kuties get gets deployed in the cube system that's",
    "start": "1723159",
    "end": "1728720"
  },
  {
    "text": "where whatever the DNS service that you're using like by default it comes",
    "start": "1728720",
    "end": "1734760"
  },
  {
    "text": "with codan you can have your own uh other softwares that you can use um",
    "start": "1734760",
    "end": "1744880"
  },
  {
    "text": "and since we don't have any Ingress or ESS that is uh going out uh from the",
    "start": "1744880",
    "end": "1752720"
  },
  {
    "text": "target name space to the cube system we are not able to access the DNS records",
    "start": "1752720",
    "end": "1758320"
  },
  {
    "text": "so the if you try this out in your kind local cluster you might also see another",
    "start": "1758320",
    "end": "1764360"
  },
  {
    "text": "error saying that could not resolve the host but in this plat form we are",
    "start": "1764360",
    "end": "1769399"
  },
  {
    "text": "getting the timed out error so in case if you're trying it out on your own and if you see that error that is also a",
    "start": "1769399",
    "end": "1775399"
  },
  {
    "text": "valid error that it is much more straightforward so here we are going to create a network policy that's going to",
    "start": "1775399",
    "end": "1781840"
  },
  {
    "text": "allow Ingress and ESS from the target name space to the cube system so let's go ahead and create that",
    "start": "1781840",
    "end": "1789399"
  },
  {
    "text": "one once it's created now we can go ahead and test um again that if we are",
    "start": "1789399",
    "end": "1796960"
  },
  {
    "text": "able to reach out to the source namespace part from the target namespace",
    "start": "1796960",
    "end": "1804279"
  },
  {
    "text": "part so yes we are so in this little exercise that we learned how to apply",
    "start": "1804279",
    "end": "1812279"
  },
  {
    "text": "basic Network policies and we have also seen um how the networking works that in",
    "start": "1812279",
    "end": "1819679"
  },
  {
    "text": "order to Sol DNS it needs to have access to the cube system um so that is lot of",
    "start": "1819679",
    "end": "1826679"
  },
  {
    "text": "something and after this it's going to be Port security yeah so yeah Port security so",
    "start": "1826679",
    "end": "1833600"
  },
  {
    "text": "the idea behind Port Security is to restrict like the most sensitive Fields uh that PO can use and like that could",
    "start": "1833600",
    "end": "1841279"
  },
  {
    "text": "decrease the security posture of your cluster um and also like to enforce the",
    "start": "1841279",
    "end": "1847120"
  },
  {
    "text": "best uh security uh the best practice on on the port so you may be familiar with the",
    "start": "1847120",
    "end": "1854039"
  },
  {
    "text": "port security policies it was actually the admission controller that was REM moved in kubernetes",
    "start": "1854039",
    "end": "1860200"
  },
  {
    "text": "125 let me just do that skip this one all right um it mostly was removed",
    "start": "1860200",
    "end": "1868080"
  },
  {
    "text": "because uh it was very INF famous for being very uh hard to use and very challenging so it was replaced actually",
    "start": "1868080",
    "end": "1875480"
  },
  {
    "text": "by two things so there is now this thing called Port security",
    "start": "1875480",
    "end": "1880559"
  },
  {
    "text": "standards um you can see about that here uh there are like three uh security",
    "start": "1880559",
    "end": "1886519"
  },
  {
    "text": "standards privileged Baseline and restricted so these things are actually",
    "start": "1886519",
    "end": "1892120"
  },
  {
    "text": "very generic you can Implement that with any uh admission controllers those are just like specification on which field",
    "start": "1892120",
    "end": "1898760"
  },
  {
    "text": "should be allowed or which field should be used on a specific uh pod um the good",
    "start": "1898760",
    "end": "1905000"
  },
  {
    "text": "thing is that the kubernetes organization also implemented an admission controller on themselves which is called the Pod uh security admission",
    "start": "1905000",
    "end": "1912519"
  },
  {
    "text": "that is really easy to use basically you can just like label uh your namespace to",
    "start": "1912519",
    "end": "1918039"
  },
  {
    "text": "uh do three different things oh sorry for the",
    "start": "1918039",
    "end": "1922759"
  },
  {
    "text": "noise all right um You can use it in enforcement so uh every violation will",
    "start": "1924240",
    "end": "1931240"
  },
  {
    "text": "be rejected in audit mode just to see like what would happened and in word mode uh so that users receive a warning",
    "start": "1931240",
    "end": "1939480"
  },
  {
    "text": "directly so we'll go to this uh in this",
    "start": "1939480",
    "end": "1945000"
  },
  {
    "text": "challenge oh sorry",
    "start": "1945000",
    "end": "1949320"
  },
  {
    "text": "all right so first we'll use the Baseline policy in one mode so you can",
    "start": "1951120",
    "end": "1956320"
  },
  {
    "text": "see uh the Baseline thing like host name SPAC are disallowed privilege container are disallowed this is the basic stuff",
    "start": "1956320",
    "end": "1963639"
  },
  {
    "text": "like um many of the specification of like this Baseline security",
    "start": "1963639",
    "end": "1969440"
  },
  {
    "text": "configuration so uh yeah let's do it so we we'll first",
    "start": "1969440",
    "end": "1976320"
  },
  {
    "text": "do with one mode so so first thing we create a namespace called secure namespace right and then what we do is",
    "start": "1976320",
    "end": "1983559"
  },
  {
    "text": "we actually label that namespace the SEC namespace with PO security. kubernetes doio with one equal",
    "start": "1983559",
    "end": "1991880"
  },
  {
    "text": "Baseline it's labed and now if we want to create a pod that actually uh um",
    "start": "1992399",
    "end": "1998960"
  },
  {
    "text": "violate that Baseline policy so this one will just try to create a privilege pod",
    "start": "1998960",
    "end": "2005360"
  },
  {
    "text": "um what will happen is that the pod should be created but like the user will",
    "start": "2005360",
    "end": "2010519"
  },
  {
    "text": "receive a warning um like that this pod will violate like the post security basine latest uh because of like the",
    "start": "2010519",
    "end": "2018000"
  },
  {
    "text": "security cons. privilege equal true so this is really nice for your uh cluster",
    "start": "2018000",
    "end": "2023440"
  },
  {
    "text": "users to have like some uh actual feedback on what they do before applying the policy for",
    "start": "2023440",
    "end": "2030240"
  },
  {
    "text": "real um again we can see that the Pod is created and that it worked so let's",
    "start": "2030240",
    "end": "2036880"
  },
  {
    "text": "select that pod now all right so now uh for enforcement is",
    "start": "2036880",
    "end": "2044200"
  },
  {
    "text": "as simple as the previous one we just like override the label with the enforce",
    "start": "2044200",
    "end": "2050158"
  },
  {
    "text": "uh equal Baseline label so the namespace is",
    "start": "2050159",
    "end": "2056638"
  },
  {
    "text": "labeled and now if we create exactly the same p with exactly the same security context with privilege equal true what",
    "start": "2056639",
    "end": "2063480"
  },
  {
    "text": "happens is that it gets rejected so this is like the same thing as before but then like any violation actually rejects",
    "start": "2063480",
    "end": "2070599"
  },
  {
    "text": "the action so you can see it's forbidden and if we if we check the Pod running in",
    "start": "2070599",
    "end": "2075960"
  },
  {
    "text": "the space we don't found any resources",
    "start": "2075960",
    "end": "2081839"
  },
  {
    "text": "great so now if we create a pod that satisfies actually the Baseline policy by setting privilege mode uh to force",
    "start": "2081839",
    "end": "2089320"
  },
  {
    "text": "explicitly and we create the P the Pod is",
    "start": "2089320",
    "end": "2095040"
  },
  {
    "text": "created again we can verify right [Music] and then delete the",
    "start": "2095399",
    "end": "2101520"
  },
  {
    "text": "Pod all right so now we can move on to like restricted uh restricted will be uh",
    "start": "2101520",
    "end": "2108400"
  },
  {
    "text": "more restricted as the name say and uh as usual it's the same you just like use one equal restricted and overwrite the",
    "start": "2108400",
    "end": "2114599"
  },
  {
    "text": "label on the namespace we can even like see the label on the namespace um right you can see",
    "start": "2114599",
    "end": "2122440"
  },
  {
    "text": "enforce Baseline and Oneal restricted",
    "start": "2122440",
    "end": "2127800"
  },
  {
    "text": "so in this mode basically you enforce like the basic stuff but you can warn your users on like what it would be if",
    "start": "2127800",
    "end": "2135040"
  },
  {
    "text": "we switch eventually to the restricted mode so now if we create that same pod",
    "start": "2135040",
    "end": "2140760"
  },
  {
    "text": "with the privilege container equal",
    "start": "2140760",
    "end": "2144640"
  },
  {
    "text": "false we could see that the Pod was created but it would violate the restricted uh uh standards restricted",
    "start": "2151040",
    "end": "2160240"
  },
  {
    "text": "profile can check that the Pod is running again and delete the",
    "start": "2160240",
    "end": "2165480"
  },
  {
    "text": "Pod all right uh now there is one other thing uh it's called dry run um because",
    "start": "2165480",
    "end": "2172960"
  },
  {
    "text": "most of the time what happens is that when you cre label a namespace you already have like a few pods running in",
    "start": "2172960",
    "end": "2178000"
  },
  {
    "text": "that namespace so what we will do here is that we will dry run on the server",
    "start": "2178000",
    "end": "2183119"
  },
  {
    "text": "side so on the kubernetes API side and overwrite um",
    "start": "2183119",
    "end": "2188280"
  },
  {
    "text": "the label with like enforce restricted to see what will happen and so if we do that we can see",
    "start": "2188280",
    "end": "2197079"
  },
  {
    "text": "that like existing pods will actually violate that uh that uh restrict sorry",
    "start": "2197079",
    "end": "2204359"
  },
  {
    "text": "some pods in the Nam space would actually violate this uh enforcement so workload will be",
    "start": "2204359",
    "end": "2212480"
  },
  {
    "text": "affected so conclusion like um I think the bo security standards",
    "start": "2212480",
    "end": "2217960"
  },
  {
    "text": "Define uh like very easy to use policies uh for like deploying pods uh the PO",
    "start": "2217960",
    "end": "2227160"
  },
  {
    "text": "security admission make it very easy to actually apply that to any namespace just by labeling a namespace so yeah",
    "start": "2227160",
    "end": "2233680"
  },
  {
    "text": "that is that is pretty Endy and you could actually use these standards with different admission controllers like",
    "start": "2233680",
    "end": "2239160"
  },
  {
    "text": "kerno Opa and things like that those are implemented by the port security",
    "start": "2239160",
    "end": "2244200"
  },
  {
    "text": "admission but yeah did you have have a question I no okay",
    "start": "2244200",
    "end": "2251520"
  },
  {
    "text": "sorry so yeah we're good anybody has a question",
    "start": "2251520",
    "end": "2259240"
  },
  {
    "text": "maybe so I guess we can move on to the next one let's",
    "start": "2264839",
    "end": "2272720"
  },
  {
    "text": "check so the next one is SE comp so I will try to do a bit of explanation",
    "start": "2276000",
    "end": "2284920"
  },
  {
    "text": "before starting so yeah pods are containers containers are regular processes on the Linux we are just using",
    "start": "2284920",
    "end": "2292599"
  },
  {
    "text": "a lot of mechanism to restrict the view of the system and their access to the resources and system Calles are the main",
    "start": "2292599",
    "end": "2299520"
  },
  {
    "text": "interface between the processes and the operating system so they are used to",
    "start": "2299520",
    "end": "2305400"
  },
  {
    "text": "perform like all the basic actions like uh opening a file creating a network socket mounting a file system creating a",
    "start": "2305400",
    "end": "2312640"
  },
  {
    "text": "new process etc etc um containers already restrict this uh the access to",
    "start": "2312640",
    "end": "2318400"
  },
  {
    "text": "the H file system by uh restricting uh the resources like CPU memory by using",
    "start": "2318400",
    "end": "2324839"
  },
  {
    "text": "actually like c groups uh they are restricting the view of um the H by",
    "start": "2324839",
    "end": "2330079"
  },
  {
    "text": "using name spaces and uh some system calls are already like uh uh restricted",
    "start": "2330079",
    "end": "2336280"
  },
  {
    "text": "right but um as you may know like because system",
    "start": "2336280",
    "end": "2341359"
  },
  {
    "text": "calls are the interface between these processes and the operating system uh it",
    "start": "2341359",
    "end": "2346960"
  },
  {
    "text": "it it might happen that they have like a bug and because like the operating system actually controls the hardware",
    "start": "2346960",
    "end": "2353119"
  },
  {
    "text": "like uh if those are subject to bugs it can be eventually exploited for abuse so",
    "start": "2353119",
    "end": "2359280"
  },
  {
    "text": "a very good idea is to actually try to restrict which system calls uh the process in our kubernetes pods",
    "start": "2359280",
    "end": "2365839"
  },
  {
    "text": "containers can call um to restrict the potential attack of phace",
    "start": "2365839",
    "end": "2371720"
  },
  {
    "text": "so how we can do that um a mechanis to to do that is called SE",
    "start": "2371720",
    "end": "2377920"
  },
  {
    "text": "comp it's pretty old in the Linux canel and it has like two mods uh there is like the stre mod which is very",
    "start": "2377920",
    "end": "2384160"
  },
  {
    "text": "restrictive you can only access like the read right and exit system code so you",
    "start": "2384160",
    "end": "2389359"
  },
  {
    "text": "can't really do much with like uh workload with that but there is the filter mode uh the filter mode permit to",
    "start": "2389359",
    "end": "2395640"
  },
  {
    "text": "use something called cbpf so classic BPF",
    "start": "2395640",
    "end": "2401079"
  },
  {
    "text": "not to be confused with ebpf extended BPF right so this is just like very",
    "start": "2401079",
    "end": "2406599"
  },
  {
    "text": "simple filters to allow arbitrary uh system calls so it is often referred as",
    "start": "2406599",
    "end": "2413520"
  },
  {
    "text": "SEC comp BPF um my colleague Duffy and Natalia just gave a talk I think just before about like the difference between",
    "start": "2413520",
    "end": "2420040"
  },
  {
    "text": "SEC comp and BPF but yeah and and the thing is that like writing your",
    "start": "2420040",
    "end": "2426119"
  },
  {
    "text": "own filters might be tricky because you need to know the cises you need to know like which cises are the most sensitive",
    "start": "2426119",
    "end": "2433640"
  },
  {
    "text": "uh all the details about this Cs and everything so the very good thing is that the",
    "start": "2433640",
    "end": "2439480"
  },
  {
    "text": "container run times uh Docker started that but now like on on container the cryo you you can find um like runtime uh",
    "start": "2439480",
    "end": "2447960"
  },
  {
    "text": "defaults so those are like a most more restricted uh filter that you can apply",
    "start": "2447960",
    "end": "2453040"
  },
  {
    "text": "for all your workloads and that is already installed uh on each nodes and",
    "start": "2453040",
    "end": "2458280"
  },
  {
    "text": "that you can use directly so what are the CIS call they restrict in this set so um most like some of the calls are",
    "start": "2458280",
    "end": "2465480"
  },
  {
    "text": "like obsolete CS that nobody use anyway but are just for compatibility so we just like restrict them because we don't",
    "start": "2465480",
    "end": "2471040"
  },
  {
    "text": "really need them some of them are like non-n spaced resource on Old kernels like the date time or carrying like the",
    "start": "2471040",
    "end": "2478880"
  },
  {
    "text": "Kel carrying uh it change on recent canels but like on Old canels it's still like noname space so it kind of breaks",
    "start": "2478880",
    "end": "2484640"
  },
  {
    "text": "like the isolation given by containers and uh the rest of the calls are",
    "start": "2484640",
    "end": "2490079"
  },
  {
    "text": "actually mostly like highly privileged operations like uh uh most of them",
    "start": "2490079",
    "end": "2495359"
  },
  {
    "text": "already guarded by capabilities like mounting creating a new namespace like loading a canel module loading like a",
    "start": "2495359",
    "end": "2500800"
  },
  {
    "text": "BPF program these kind of things so this can be useful for certain workloads but most of your workloads will not use that",
    "start": "2500800",
    "end": "2506599"
  },
  {
    "text": "so a good idea is to use this default profile to um reduce this uh surface so",
    "start": "2506599",
    "end": "2513640"
  },
  {
    "text": "let's do that so here you have a bit of explanation in Secom BF you have a few",
    "start": "2513640",
    "end": "2519400"
  },
  {
    "text": "modes you can use act allow and act know to specify like what is allow or what",
    "start": "2519400",
    "end": "2525760"
  },
  {
    "text": "like cisola explicitly denied depending on how you want to write your",
    "start": "2525760",
    "end": "2531640"
  },
  {
    "text": "filters uh yeah runtime default so this is basically what I explained those are",
    "start": "2531640",
    "end": "2537440"
  },
  {
    "text": "implemented by the container run times because they usually need um to access some of the c c during the creation of",
    "start": "2537440",
    "end": "2544200"
  },
  {
    "text": "the containers so those are specific to the the Run",
    "start": "2544200",
    "end": "2549119"
  },
  {
    "text": "so how to do that it's actually pretty simple so here we just like create a new namespace as",
    "start": "2549400",
    "end": "2554760"
  },
  {
    "text": "usual and we will do two things we will deploy like a normal Pod without any",
    "start": "2554760",
    "end": "2560200"
  },
  {
    "text": "restricted S profile this is just like a normal one right and we will deploy another one",
    "start": "2560200",
    "end": "2567920"
  },
  {
    "text": "that has like a security context uh enforcing like this second profile the runtime default so if we do that it was",
    "start": "2567920",
    "end": "2576119"
  },
  {
    "text": "created as well we can check that they are both",
    "start": "2576119",
    "end": "2582520"
  },
  {
    "text": "running and what you can see if you describe the Pod with the profile we",
    "start": "2582880",
    "end": "2588240"
  },
  {
    "text": "should be able to see that",
    "start": "2588240",
    "end": "2592440"
  },
  {
    "text": "uh uh where it should be somewhere here second profile runtime",
    "start": "2593760",
    "end": "2600920"
  },
  {
    "text": "default so let's try first into the one that is",
    "start": "2600920",
    "end": "2607200"
  },
  {
    "text": "not using the runtime default so if you check uh we can Cil exact into that pod",
    "start": "2607200",
    "end": "2612960"
  },
  {
    "text": "uh with like a shell we run ID we are running as root and we can use like the",
    "start": "2612960",
    "end": "2618640"
  },
  {
    "text": "unshare binary that will use the unshare system code that is actually restricted by the runtime default second profile so",
    "start": "2618640",
    "end": "2625680"
  },
  {
    "text": "if we run it you see that the shell uh changed uh it actually worked we went",
    "start": "2625680",
    "end": "2631760"
  },
  {
    "text": "from like ID route to uh ID nobody which is like uh 65 uh",
    "start": "2631760",
    "end": "2638960"
  },
  {
    "text": "540 uh 34 sorry so it was successfully executed and if you want to exit you",
    "start": "2638960",
    "end": "2644920"
  },
  {
    "text": "need to exit twice you need to like go out of the shell inside the username space and go out from the cube C pods so",
    "start": "2644920",
    "end": "2653480"
  },
  {
    "text": "now what will happen if we do the same into the one that has like the second profile that is runtime",
    "start": "2653480",
    "end": "2661160"
  },
  {
    "text": "default immediately if we just like try to un user we end up with like operation not not permitted so like the the good",
    "start": "2661160",
    "end": "2667599"
  },
  {
    "text": "thing is that seom just like uh overrided like the return value of that CIS and return minus one in this",
    "start": "2667599",
    "end": "2676040"
  },
  {
    "text": "case so yeah you can read more about like the unshare user common um this is",
    "start": "2676359",
    "end": "2682599"
  },
  {
    "text": "just an example it's actually restricting a lot of other cises like I said like for example like reboot",
    "start": "2682599",
    "end": "2689119"
  },
  {
    "text": "loading BPF program and things like that so in conclusion by following this",
    "start": "2689119",
    "end": "2695119"
  },
  {
    "text": "step you can use like this runtime default that is always like that it's basically effortless you just need to add like this little field in your citus",
    "start": "2695119",
    "end": "2702640"
  },
  {
    "text": "deployment and uh it will actually reduce quite well the attack surface so",
    "start": "2702640",
    "end": "2708040"
  },
  {
    "text": "in case of like vulnerability in the future on some culls if you block them you are basically pretty",
    "start": "2708040",
    "end": "2715599"
  },
  {
    "text": "safe here we are so does anybody has a question on that",
    "start": "2715680",
    "end": "2722200"
  },
  {
    "text": "maybe Ray you want to",
    "start": "2729240",
    "end": "2732119"
  },
  {
    "text": "join all right all right next we'll go over some",
    "start": "2745559",
    "end": "2752280"
  },
  {
    "text": "arback so it's part of the uh security good practice guide to uh the use the",
    "start": "2754119",
    "end": "2760640"
  },
  {
    "text": "concept of lease privilege so make sure that uh you're not freely using Create",
    "start": "2760640",
    "end": "2766160"
  },
  {
    "text": "update patch delete or not granting those rights uh to uh just anyone so you",
    "start": "2766160",
    "end": "2772559"
  },
  {
    "text": "want to make sure you want limit access of create update patch delete so we're actually not going to",
    "start": "2772559",
    "end": "2779480"
  },
  {
    "text": "use those we're going to create a viewer role and we're going to go through the steps on how to create a pod viewer role",
    "start": "2779480",
    "end": "2785559"
  },
  {
    "text": "so we'll use both all four rolls uh cluster rolls R bindings and cluster R bindings on how to do that so we're",
    "start": "2785559",
    "end": "2793160"
  },
  {
    "text": "create a new Nam space because we're going to create a a CL a ro binding that's actually be namespace so let's",
    "start": "2793160",
    "end": "2799680"
  },
  {
    "text": "create a new namespace the rback namespace so once the namespace is",
    "start": "2799680",
    "end": "2806319"
  },
  {
    "text": "created uh just a review roles are namespace cluster rols are cluster wide",
    "start": "2806319",
    "end": "2811480"
  },
  {
    "text": "but you could actually use uh roll bindings for cluster rolls even though you don't have to use cluster roll",
    "start": "2811480",
    "end": "2817319"
  },
  {
    "text": "bindings for cluster rols so we're going to define a set of",
    "start": "2817319",
    "end": "2824119"
  },
  {
    "text": "permissions in our cluster role and it's going to be a we're going to call it the Pod viewer role and we're going to give",
    "start": "2824119",
    "end": "2830680"
  },
  {
    "text": "it uh the rights to get watch and list and once we actually create it and",
    "start": "2830680",
    "end": "2836440"
  },
  {
    "text": "use it we're going to test to make sure it could only do get watch and list as well so once the Pod viewer role or",
    "start": "2836440",
    "end": "2843720"
  },
  {
    "text": "cluster role is created that means this role is available cluster Ro wide we'll use a ro binding now it's namespaced to",
    "start": "2843720",
    "end": "2851559"
  },
  {
    "text": "bind that pod viewer cluster role to user just called Dev comp in the Pod View group so we're going to use uh dual",
    "start": "2851559",
    "end": "2858720"
  },
  {
    "text": "roll binding uh for that we're going to call it view pods as well and that same namespace we're going to use a user",
    "start": "2858720",
    "end": "2865400"
  },
  {
    "text": "we're going to use a a group as well called pod View and we're going to use that cluster rle that we just created",
    "start": "2865400",
    "end": "2871040"
  },
  {
    "text": "called pod viewer and we're going to test this out so we created that Ro bindings now",
    "start": "2871040",
    "end": "2878280"
  },
  {
    "text": "it's namespace that namespace and we're going to test it out we're going to do Cube control and you can do the-- as",
    "start": "2878280",
    "end": "2885079"
  },
  {
    "text": "command for a user or do the D- as- group uh option as well for to use to",
    "start": "2885079",
    "end": "2891200"
  },
  {
    "text": "use a group so we could test out uh our back here so we're going to use the Pod View group and the dev comp user uh try",
    "start": "2891200",
    "end": "2897880"
  },
  {
    "text": "to do a get pods on the same namespace so we should we should be able to do this and we and we can we don't have any",
    "start": "2897880",
    "end": "2903680"
  },
  {
    "text": "running pods right now so we're going to do uh different tests we're going to use",
    "start": "2903680",
    "end": "2909119"
  },
  {
    "text": "the same group uh same user but on a different namespace the cube system namespace we're going to try to use uh",
    "start": "2909119",
    "end": "2915680"
  },
  {
    "text": "do a get pods with the Pod view uh group and depc user uh on the cube system",
    "start": "2915680",
    "end": "2921079"
  },
  {
    "text": "names space so we expect this not to work and it is not working so we get an",
    "start": "2921079",
    "end": "2926160"
  },
  {
    "text": "error uh forbidden so now let's go check to see",
    "start": "2926160",
    "end": "2932160"
  },
  {
    "text": "the same do the similar same test if we could get pods in the default namespace",
    "start": "2932160",
    "end": "2937359"
  },
  {
    "text": "so we're going to use a the Pod View group use uh the dev comp user and see if we get pods on the default namespace",
    "start": "2937359",
    "end": "2944599"
  },
  {
    "text": "and we don't because we use that uh that role binding which is namespace even though we use that cluster roll uh which",
    "start": "2944599",
    "end": "2951040"
  },
  {
    "text": "is uh cluster wide it is still uh restricted to that specific Nam",
    "start": "2951040",
    "end": "2957599"
  },
  {
    "text": "space so let's make sure that this user cannot actually create a pod remember",
    "start": "2958040",
    "end": "2963720"
  },
  {
    "text": "this is a pod viewer user uh so this this user should only be able to uh to",
    "start": "2963720",
    "end": "2969480"
  },
  {
    "text": "to watch and get and list pods so should not be able to create a pod so we will use the C control run command that will",
    "start": "2969480",
    "end": "2976240"
  },
  {
    "text": "immediately it's the imperative command to create a pod so Cube control run uh the name of the Pod and the image and",
    "start": "2976240",
    "end": "2982599"
  },
  {
    "text": "with the namespace and with the options the D- as as a user the def comp user D-",
    "start": "2982599",
    "end": "2987920"
  },
  {
    "text": "as- group the Pod View group so we should actually we should expect this to",
    "start": "2987920",
    "end": "2993640"
  },
  {
    "text": "not to run and we actually get the error that it is forbidden we actually tells",
    "start": "2993640",
    "end": "2999640"
  },
  {
    "text": "you the user cannot create the resource pods in this Nam space so great it's",
    "start": "2999640",
    "end": "3005920"
  },
  {
    "text": "working so let's create a Creator role let's say so someone actually does need",
    "start": "3005920",
    "end": "3011160"
  },
  {
    "text": "to create a pod so now let's create a role now this",
    "start": "3011160",
    "end": "3016480"
  },
  {
    "text": "is the namespace the Pod Creator role uh we give it this is for both pods and deployment so uh and we give it uh the",
    "start": "3016480",
    "end": "3024359"
  },
  {
    "text": "get what list watch create an update uh permissions so let's create this uh role",
    "start": "3024359",
    "end": "3030920"
  },
  {
    "text": "which is namespace to the rback namespace so once that uh Ro is created",
    "start": "3030920",
    "end": "3036880"
  },
  {
    "text": "uh like you know just to review this rooll is actually doesn't actually work unless we have some kind of binding a",
    "start": "3036880",
    "end": "3042520"
  },
  {
    "text": "roll binding or cluster Ro binding uh so we're going to do the create the role binding that binds a pod creat a role to",
    "start": "3042520",
    "end": "3048680"
  },
  {
    "text": "the the same uh user uh but to a different",
    "start": "3048680",
    "end": "3053440"
  },
  {
    "text": "group so once that Ro binding uh so let's uh test this as well so let's",
    "start": "3054920",
    "end": "3060640"
  },
  {
    "text": "create a pod now in this namespace we're using the same user but as as a different",
    "start": "3060640",
    "end": "3066760"
  },
  {
    "text": "group and this is just restricted to users and groups it could also be applied to service accounts which we'll",
    "start": "3066760",
    "end": "3072359"
  },
  {
    "text": "go over uh last or next module so this pod is created now we",
    "start": "3072359",
    "end": "3079359"
  },
  {
    "text": "have uh the ability to create a pod in this namespace and just some quick uh helpful",
    "start": "3079359",
    "end": "3086280"
  },
  {
    "text": "command comms as well uh Cube control off Ki is one of my favorite commands uh it tells you explicitly if you can",
    "start": "3086280",
    "end": "3092559"
  },
  {
    "text": "actually do certain things like Cube control off can I get pods in a specific namespace add a user adds a group um and",
    "start": "3092559",
    "end": "3101200"
  },
  {
    "text": "we'll take a look and it's simple yes or no so I can actually get pods as this",
    "start": "3101200",
    "end": "3106520"
  },
  {
    "text": "user devcom as a group pod view now we'll see if we could actually",
    "start": "3106520",
    "end": "3112280"
  },
  {
    "text": "delete pods in this namespace uh using that same user using that same group",
    "start": "3112280",
    "end": "3117440"
  },
  {
    "text": "using Cube control off can I delete pods and this namespace and we have an",
    "start": "3117440",
    "end": "3122839"
  },
  {
    "text": "explicit no so yes you could iterate through all the different uh commands with Cube",
    "start": "3122839",
    "end": "3130280"
  },
  {
    "text": "control with C control aleni but you could actually list it out so U so Cube control off can I list D- list we could",
    "start": "3130280",
    "end": "3137960"
  },
  {
    "text": "actually list out what we can or can't",
    "start": "3137960",
    "end": "3142680"
  },
  {
    "text": "do so one of my favorite commands to use to see if and if my if the user in question uh can or cannot uh do certain",
    "start": "3143240",
    "end": "3151359"
  },
  {
    "text": "task to summarize uh make sure to use a principal leas privilege as uh uh",
    "start": "3151359",
    "end": "3157079"
  },
  {
    "text": "throughout your kubernetes cluster uh make sure to not uh to explicitly only",
    "start": "3157079",
    "end": "3162240"
  },
  {
    "text": "you create roles and cluster roles with the create and update and delete um",
    "start": "3162240",
    "end": "3167599"
  },
  {
    "text": "command or WR uh only for specific groups or users or service accounts that actually can do those",
    "start": "3167599",
    "end": "3175040"
  },
  {
    "text": "actions all right next one is going to be pretty quick it's about uh service",
    "start": "3175040",
    "end": "3180079"
  },
  {
    "text": "accounts uh I'll just go through the concepts of the service account and so",
    "start": "3180079",
    "end": "3185559"
  },
  {
    "text": "we want to use service accounts so uh service accounts are used to provide identity for your workloads so your",
    "start": "3185559",
    "end": "3192040"
  },
  {
    "text": "workloads have identity in a cluster they can actually do certain actions so they could uh Reach the the kubernetes",
    "start": "3192040",
    "end": "3198520"
  },
  {
    "text": "API server uh and they might be able need to to do certain actions so they might so uh think of as instance",
    "start": "3198520",
    "end": "3205160"
  },
  {
    "text": "kubernetes is uh we use kubernetes with many many microservices that have to talk to each other so uh so certain",
    "start": "3205160",
    "end": "3212480"
  },
  {
    "text": "microservers need certain information from let's say the cube API server or from uh other uh pods in certain",
    "start": "3212480",
    "end": "3219200"
  },
  {
    "text": "namespaces or other microservices so we could give the same or similar um rights",
    "start": "3219200",
    "end": "3225799"
  },
  {
    "text": "to this to the servers accounts uh servers accounts so should be used and so in this uh scenario or this uh",
    "start": "3225799",
    "end": "3232599"
  },
  {
    "text": "checklist security checklist item is to make sure that your Cube control controller manager is running with the",
    "start": "3232599",
    "end": "3238440"
  },
  {
    "text": "used service account credentials enabled so this is a fairly fast uh simple module just to make sure that service",
    "start": "3238440",
    "end": "3244720"
  },
  {
    "text": "counts are actually used by default and uh taking a look to see if a service count is being",
    "start": "3244720",
    "end": "3251160"
  },
  {
    "text": "used so uh let's say for since we do have a cluster up and running already uh",
    "start": "3252240",
    "end": "3257640"
  },
  {
    "text": "let's take a look at where the cube controller uh manager is and how we can actually take a look uh if you're using",
    "start": "3257640",
    "end": "3264200"
  },
  {
    "text": "QBE ADM uh to uh to install your kubernetes cluster it would normally be",
    "start": "3264200",
    "end": "3270000"
  },
  {
    "text": "in a file called Etc kubernetes Cube controller manager. in your control",
    "start": "3270000",
    "end": "3275599"
  },
  {
    "text": "plane node uh in a kind cluster and in many other distributions of kubernetes",
    "start": "3275599",
    "end": "3281240"
  },
  {
    "text": "you may not have access to that yaml file uh so we need to explore uh through",
    "start": "3281240",
    "end": "3286880"
  },
  {
    "text": "the CBE controller manager pod so this lab or this module goes",
    "start": "3286880",
    "end": "3292480"
  },
  {
    "text": "through on how to check and how to explore through that Cube controller manager pod and just to verify that service counts are being used so the",
    "start": "3292480",
    "end": "3299760"
  },
  {
    "text": "cube controller pod should live in the cube system namespace so we'll uh do Cube control uh get pod in that Cube",
    "start": "3299760",
    "end": "3305680"
  },
  {
    "text": "system namespace for that Cube controller uh manager pod and in this case we're using kind it's named a",
    "start": "3305680",
    "end": "3311440"
  },
  {
    "text": "little bit different and it is running we have one pod",
    "start": "3311440",
    "end": "3317000"
  },
  {
    "text": "running now like I mentioned other distributions this pod can be called something else so it's typically uh uh",
    "start": "3317480",
    "end": "3325000"
  },
  {
    "text": "it's typically something with cpon controller manager but uh this is we do have a query here using uh JQ uh we",
    "start": "3325000",
    "end": "3332520"
  },
  {
    "text": "could do c control get pods and we could pipe it to JQ uh to actually take a look",
    "start": "3332520",
    "end": "3337839"
  },
  {
    "text": "to see if there is any pod with the name uh Q controller manager it might have a",
    "start": "3337839",
    "end": "3343160"
  },
  {
    "text": "different uh prefix or suffix but this this is a quick oneliner just to like take a look to see if there is any pods",
    "start": "3343160",
    "end": "3350400"
  },
  {
    "text": "uh with Cube controller manager and yes we do and it's called CBE controller manager kind Dash control",
    "start": "3350400",
    "end": "3358160"
  },
  {
    "text": "plane so now we should check what options are set um with the key controller manager and uh a lot of this",
    "start": "3358160",
    "end": "3365319"
  },
  {
    "text": "exercise as well is also can be helpful to use uh if you have any feature Gates",
    "start": "3365319",
    "end": "3370520"
  },
  {
    "text": "you want to use or see if any feature gates are uh actually enabled or not enabled we would go through the same",
    "start": "3370520",
    "end": "3377160"
  },
  {
    "text": "steps but with the cube API server pod as well uh since you may not have access to the yam manifest of the QB API",
    "start": "3377160",
    "end": "3384359"
  },
  {
    "text": "certified uh you need to inspect that Cube API server pod just like how we're inspecting the cube controller manager",
    "start": "3384359",
    "end": "3391839"
  },
  {
    "text": "pod so we're going to take a look uh in this Cube controller manager pod just to see what options are Set uh in the cube",
    "start": "3391839",
    "end": "3399119"
  },
  {
    "text": "controller manager pod so we're going to uh out output uh this into",
    "start": "3399119",
    "end": "3405960"
  },
  {
    "text": "yaml uh it's great we could it's a lot of it's a lot of yaml to digest uh and",
    "start": "3406400",
    "end": "3412200"
  },
  {
    "text": "we could parse this manually of course to look through all the options uh and we see options here and of course we're",
    "start": "3412200",
    "end": "3419920"
  },
  {
    "text": "going to go through easier way or another uh U I like making these fun",
    "start": "3419920",
    "end": "3425319"
  },
  {
    "text": "queries on liners to make it easy to actually uh to to look for this option so C controller manager is the command",
    "start": "3425319",
    "end": "3432359"
  },
  {
    "text": "and we have many options that are used uh in uh for this C controller",
    "start": "3432359",
    "end": "3438160"
  },
  {
    "text": "manager and this keep controller manager we could just par it check to see if the Das use service accounts credentials and",
    "start": "3442440",
    "end": "3449599"
  },
  {
    "text": "it is uh set to true so that's great we're using service accounts uh so we do satisfy that security checklist item and",
    "start": "3449599",
    "end": "3455839"
  },
  {
    "text": "like I said we have a quick oneliner uh to just to check to see what those options are uh in the command keep",
    "start": "3455839",
    "end": "3462520"
  },
  {
    "text": "controller manager the container it's in also the options so we get pared for this used service accounts uh right here",
    "start": "3462520",
    "end": "3469720"
  },
  {
    "text": "credentials is true so let's to actually check to make",
    "start": "3469720",
    "end": "3475119"
  },
  {
    "text": "sure how service accounts are actually if it's being used uh as well so let's",
    "start": "3475119",
    "end": "3480160"
  },
  {
    "text": "create a a namespace uh called service- accounts so there's a brand new namespace we haven't done anything to",
    "start": "3480160",
    "end": "3487039"
  },
  {
    "text": "it we're going to uh get a service account like I mentioned we just created this service account is there a service",
    "start": "3487039",
    "end": "3493880"
  },
  {
    "text": "a default service accounts yes there is we it was created 9 seconds ago when we created this",
    "start": "3493880",
    "end": "3499480"
  },
  {
    "text": "namespace so let's see if we actually run a pod in this namespace uh let's run an enginex pod here we'll do the impera",
    "start": "3499480",
    "end": "3506200"
  },
  {
    "text": "of command uh we just imply just the namespace not anything",
    "start": "3506200",
    "end": "3511720"
  },
  {
    "text": "else and we could retrieve the Pod info and of course there's a lot of yaml",
    "start": "3512359",
    "end": "3517480"
  },
  {
    "text": "here but if you take a look to see uh we could actually take a look to see there is a a field here for service accounts",
    "start": "3517480",
    "end": "3523880"
  },
  {
    "text": "so it's inpec do containers and service accounts that's are",
    "start": "3523880",
    "end": "3531000"
  },
  {
    "text": "conditions speec do containers and service accounts where is",
    "start": "3532839",
    "end": "3539680"
  },
  {
    "text": "that here default and you could actually set this to any service account that you create if you don't set it uh a service",
    "start": "3539680",
    "end": "3546960"
  },
  {
    "text": "count it will use that default service count so it's best to actually create service counts in advance with the right",
    "start": "3546960",
    "end": "3553520"
  },
  {
    "text": "permissions uh as you did with roles and Ro bindings and cluster roles and cluster Ro bindings and use those",
    "start": "3553520",
    "end": "3559640"
  },
  {
    "text": "service accounts to make sure that the application that you're using has the right permissions uh to do whatever it's",
    "start": "3559640",
    "end": "3565319"
  },
  {
    "text": "necessary for that application and so just to summarize uh",
    "start": "3565319",
    "end": "3572000"
  },
  {
    "text": "there is a default uh service account uh that is used by pods if you don't spec",
    "start": "3572000",
    "end": "3578359"
  },
  {
    "text": "specify and we could actually access the kuber API with that default service account as well uh do you need any other",
    "start": "3578359",
    "end": "3585160"
  },
  {
    "text": "permissions uh you would need to create a a new uh service account for that pod or if you want to restrict permissions",
    "start": "3585160",
    "end": "3591200"
  },
  {
    "text": "which is even better uh you would want to create a service account so most folks would create service count to",
    "start": "3591200",
    "end": "3597039"
  },
  {
    "text": "restrict permissions and only Grant uh the permission they want for that",
    "start": "3597039",
    "end": "3602079"
  },
  {
    "text": "workload all right that's it for this module any",
    "start": "3602079",
    "end": "3607119"
  },
  {
    "text": "questions all right the next thing that we going to see is about certificate experation this is an",
    "start": "3609440",
    "end": "3616400"
  },
  {
    "text": "educational uh section um in this it says the checklist says the intermediate",
    "start": "3616400",
    "end": "3622039"
  },
  {
    "text": "and the leave certificates have an expiry date no more than three years in the future so if you have used QB adum",
    "start": "3622039",
    "end": "3627720"
  },
  {
    "text": "or kind to provision your cluster you get to leave the intermediate certificates issued for about an year",
    "start": "3627720",
    "end": "3634799"
  },
  {
    "text": "and if you look at the CSS on the other hand they are issued for a default of 10",
    "start": "3634799",
    "end": "3641599"
  },
  {
    "text": "years the main reason is it's really um uh hard to rotate those certificates",
    "start": "3641599",
    "end": "3649280"
  },
  {
    "text": "so they are issued for 10 years and uh whenever a cluster is updated using Q QB",
    "start": "3649280",
    "end": "3657039"
  },
  {
    "text": "ADM it automatically rotates the certificates for you and if you have used some manage service managed",
    "start": "3657039",
    "end": "3664559"
  },
  {
    "text": "communities providers the certificates main the ca certificates could be there for like the validity would be for like",
    "start": "3664559",
    "end": "3671440"
  },
  {
    "text": "30 years or so but at least the intermediate and leave certificates the validity would always be one year um so",
    "start": "3671440",
    "end": "3680119"
  },
  {
    "text": "let's go ahead and check in this um section you're going to see where the certificates are stored and how we can",
    "start": "3680119",
    "end": "3687039"
  },
  {
    "text": "check the validity so generally the when whenever a cluster is provision using QB",
    "start": "3687039",
    "end": "3692319"
  },
  {
    "text": "ADM tool the certificates stored in Etsy kues pki and uh the use certificates would be",
    "start": "3692319",
    "end": "3700440"
  },
  {
    "text": "in ETC kues and um in the section um the the",
    "start": "3700440",
    "end": "3706400"
  },
  {
    "text": "cube adum as a nice little utility built into it you can just check Cub adum s",
    "start": "3706400",
    "end": "3711440"
  },
  {
    "text": "it's check expiration it's going to spit out uh list of of certificates the",
    "start": "3711440",
    "end": "3717839"
  },
  {
    "text": "expiration uh date printed next door work but since our uh environment is",
    "start": "3717839",
    "end": "3724680"
  },
  {
    "text": "provision using kind we are going to see how we can um we can list the",
    "start": "3724680",
    "end": "3731359"
  },
  {
    "text": "certificates available in our control plane and how we can U check the",
    "start": "3731359",
    "end": "3736839"
  },
  {
    "text": "validity first we going to see the notes um that are running and we have like two",
    "start": "3736839",
    "end": "3742680"
  },
  {
    "text": "worker nodes in one control plane control plane is the one that's going to",
    "start": "3742680",
    "end": "3748359"
  },
  {
    "text": "have the certificate stored we going to um the the the ones the API the server",
    "start": "3748359",
    "end": "3753680"
  },
  {
    "text": "the client certificate stored so we're going to go look into it more it will also have the hcd certificate stored and",
    "start": "3753680",
    "end": "3762480"
  },
  {
    "text": "um since these are deployed the nodes are deployed as Docker containers let's",
    "start": "3762480",
    "end": "3768480"
  },
  {
    "text": "just check what is running here so you can see there is a control plane here a",
    "start": "3768480",
    "end": "3775640"
  },
  {
    "text": "kind kind worker and um another kind worker",
    "start": "3775640",
    "end": "3780920"
  },
  {
    "text": "so let's just do this much more cleaner um so you can see like three of",
    "start": "3780920",
    "end": "3787240"
  },
  {
    "text": "three containers corresponds to the three notes in the client cluster for us so we're going to exit into the control",
    "start": "3787240",
    "end": "3792520"
  },
  {
    "text": "plane and then we are going to just list this directory to see what are the",
    "start": "3792520",
    "end": "3797760"
  },
  {
    "text": "certificates available and you can see like there is",
    "start": "3797760",
    "end": "3803279"
  },
  {
    "text": "this API server s API server key and then there's going to be like a caer ca",
    "start": "3803279",
    "end": "3810440"
  },
  {
    "text": "key and so on the ET CD s it's going to be stored in this atcd directory right",
    "start": "3810440",
    "end": "3817000"
  },
  {
    "text": "here we'll get to it um in a while so",
    "start": "3817000",
    "end": "3822599"
  },
  {
    "text": "here um so you can see the each certificate has um its own purpose the",
    "start": "3822599",
    "end": "3829520"
  },
  {
    "text": "API server HD client is used authenticate to hcd and so on and let's",
    "start": "3829520",
    "end": "3836240"
  },
  {
    "text": "just exit into the part and we going to fetch the API server at client s and",
    "start": "3836240",
    "end": "3844279"
  },
  {
    "text": "just going to cut it out so you can see a bunch of things printed here um thir",
    "start": "3844279",
    "end": "3850160"
  },
  {
    "text": "data but we don't get to see the validity from here so for that we going",
    "start": "3850160",
    "end": "3855760"
  },
  {
    "text": "to use an um open SSL tool and we are",
    "start": "3855760",
    "end": "3862000"
  },
  {
    "text": "just going to uh list the start and um",
    "start": "3862000",
    "end": "3867359"
  },
  {
    "text": "we going to make it list the start and end date for us and there are like three options um for it not before not after",
    "start": "3867359",
    "end": "3875720"
  },
  {
    "text": "and then like the start date end date and the um let me just quickly see start dat end date and the no out option no",
    "start": "3875720",
    "end": "3881680"
  },
  {
    "text": "out is just not going to print the certificate for us so if we go ahead and",
    "start": "3881680",
    "end": "3886760"
  },
  {
    "text": "do that here you can just see um that there is the certificate that just got",
    "start": "3886760",
    "end": "3892920"
  },
  {
    "text": "issued when we started this lab today and this one expires right in like one",
    "start": "3892920",
    "end": "3900039"
  },
  {
    "text": "year so it is as a validity of one year if you go and check um the certificates you would be",
    "start": "3900039",
    "end": "3906319"
  },
  {
    "text": "able to see um all of them will have a validity of one here let's go and check the one",
    "start": "3906319",
    "end": "3913599"
  },
  {
    "text": "for the API server cuet client s um so it's the same so there's bunch",
    "start": "3913599",
    "end": "3920480"
  },
  {
    "text": "of similar things listed out here and can try it out",
    "start": "3920480",
    "end": "3927119"
  },
  {
    "text": "and the ETD certificates so ETD uses certificates for all kinds of",
    "start": "3927119",
    "end": "3933359"
  },
  {
    "text": "communications between the HD members between the server client and between um",
    "start": "3933359",
    "end": "3938920"
  },
  {
    "text": "also for authenticating the request client request so it is actually located",
    "start": "3938920",
    "end": "3944440"
  },
  {
    "text": "in the ETC communi pki pki ETD folder",
    "start": "3944440",
    "end": "3949680"
  },
  {
    "text": "let's go ahead just list those certificates out",
    "start": "3949680",
    "end": "3955440"
  },
  {
    "text": "okay okay yeah so we can see a bunch of um the issuing the CSR tier and then like",
    "start": "3955440",
    "end": "3963240"
  },
  {
    "text": "pier and the server here if we go and C the um",
    "start": "3963240",
    "end": "3970079"
  },
  {
    "text": "healthcheck client certificate and check the validity for it so we can see that it is listed for",
    "start": "3970079",
    "end": "3978400"
  },
  {
    "text": "about in here the validity is about in here so this is mostly educational so if you are already using any tool it will",
    "start": "3978400",
    "end": "3986480"
  },
  {
    "text": "by default provision the leave an intermediary for about one year this just to see how you can um check um on",
    "start": "3986480",
    "end": "3995039"
  },
  {
    "text": "your own if you're interested and um that's it in this",
    "start": "3995039",
    "end": "4001520"
  },
  {
    "text": "um yeah do you want to add as so I've I've I I've worked with many end users",
    "start": "4001520",
    "end": "4006760"
  },
  {
    "text": "and I've have seen many clusters have expired Sears and that stops the functionality of kubernets uh so you",
    "start": "4006760",
    "end": "4013799"
  },
  {
    "text": "should be aware of when your searchs expire uh and as to be to mention when you upgrade kubernetes it'll rotate your",
    "start": "4013799",
    "end": "4019960"
  },
  {
    "text": "searchs as well so uh folks should also upgrade kubernetes corlink there's uh lots of updates and CV patches uh with",
    "start": "4019960",
    "end": "4028039"
  },
  {
    "text": "kubernetes so when they do upgrade kubernetes uh does rotate their the Sears as well and also that we have",
    "start": "4028039",
    "end": "4034920"
  },
  {
    "text": "three releases per year and at any given point of time only like uh three versions are supported three right the",
    "start": "4034920",
    "end": "4041880"
  },
  {
    "text": "current and the uh three versions are supported so it is almost like an year",
    "start": "4041880",
    "end": "4047119"
  },
  {
    "text": "so if you are keeping up with your upgrade cycle you're automatically rotating your",
    "start": "4047119",
    "end": "4053559"
  },
  {
    "text": "certificates and if you're using the manage service provider they take care of that for you when you upgrade your",
    "start": "4054680",
    "end": "4061880"
  },
  {
    "text": "cluster there was also an interesting discussion on um one of the um Cub adum",
    "start": "4061880",
    "end": "4070640"
  },
  {
    "text": "that I saw like someone had asked for the extension of Cort for like 100 years",
    "start": "4070640",
    "end": "4076480"
  },
  {
    "text": "or so you know but um you can have like if you are going to have 100 100 Years",
    "start": "4076480",
    "end": "4081760"
  },
  {
    "text": "of expiration for a CER but you're not going to upgrade your communities you're going to run into a lot of uh security",
    "start": "4081760",
    "end": "4087880"
  },
  {
    "text": "issues and there would be no patches for the versions that are not supported",
    "start": "4087880",
    "end": "4093079"
  },
  {
    "text": "anymore um yeah that is a little thing that I learned today um any questions on",
    "start": "4093079",
    "end": "4100440"
  },
  {
    "text": "this okay moving on all right so the last module is on uh pod",
    "start": "4102440",
    "end": "4110798"
  },
  {
    "text": "placements so uh when you do have applications running pods uh and if",
    "start": "4110799",
    "end": "4117480"
  },
  {
    "text": "they're sensitive uh applications and you want to isolate them on nodes or",
    "start": "4117480",
    "end": "4122520"
  },
  {
    "text": "specific nodes uh we can use taints on those nodes uh so that'll prevent any",
    "start": "4122520",
    "end": "4128480"
  },
  {
    "text": "new pods or running on those nodes and we could use and if you do want uh those",
    "start": "4128480",
    "end": "4134238"
  },
  {
    "text": "sensitive applications running on those isolated nodes on those tainted nodes you use a toleration and that Toleration",
    "start": "4134239",
    "end": "4140600"
  },
  {
    "text": "should match the taint in order for the application uh to run on that isolated",
    "start": "4140600",
    "end": "4146120"
  },
  {
    "text": "node or that tainted node uh and we'll also look into how we place pods uh using the node selector so in case if",
    "start": "4146120",
    "end": "4153040"
  },
  {
    "text": "you have uh pods that need to run on spef on specific nodes with uh with",
    "start": "4153040",
    "end": "4158440"
  },
  {
    "text": "access to to spec to specific Hardware like gpus uh you could use uh node",
    "start": "4158440",
    "end": "4164880"
  },
  {
    "text": "selector or maybe a node has a certain security guard wheel set up for that",
    "start": "4164880",
    "end": "4170318"
  },
  {
    "text": "node you could use a node selector so since AI is big in kubernetes right now",
    "start": "4170319",
    "end": "4175679"
  },
  {
    "text": "there is a feature called the node feature Discovery it's uh external to it's external to the kubernetes project",
    "start": "4175679",
    "end": "4181838"
  },
  {
    "text": "but uh folks use the node feature Discovery to see and find what Hardware",
    "start": "4181839",
    "end": "4186880"
  },
  {
    "text": "is attached to those nodes and the node feature Discovery applies a label on",
    "start": "4186880",
    "end": "4192359"
  },
  {
    "text": "those nodes and pods that need access to to that Hardware can use a node selector",
    "start": "4192359",
    "end": "4198040"
  },
  {
    "text": "uh on that node that node feature Discovery applied to that node and also another uh use case or to",
    "start": "4198040",
    "end": "4205600"
  },
  {
    "text": "use to make sure that we're using pod placement uh is is still on the principle of zero trust uh to make sure",
    "start": "4205600",
    "end": "4212600"
  },
  {
    "text": "that we always assume that there will be a breach uh and to minimize the blast radius uh so we want to make sure uh if",
    "start": "4212600",
    "end": "4219800"
  },
  {
    "text": "you if there is a breach in your in your in a container you want to make sure it's not running alongside on the same",
    "start": "4219800",
    "end": "4226360"
  },
  {
    "text": "node that is running on the control plane of your kubernetes cluster so we'll look at node selectors",
    "start": "4226360",
    "end": "4233960"
  },
  {
    "text": "taints and tolerations in this module so let's take a look uh at our cluster itself so we have three nodes one",
    "start": "4233960",
    "end": "4239600"
  },
  {
    "text": "control plane and two worker nodes as we expect we're going to create a new uh namespace to uh create our pods in the",
    "start": "4239600",
    "end": "4246800"
  },
  {
    "text": "Pod placement Nam space uh we'll create a Damon Set uh so Damon set is used in cases where we want",
    "start": "4246800",
    "end": "4254120"
  },
  {
    "text": "a pod a to run on every node in the cluster so this is used for like log",
    "start": "4254120",
    "end": "4259679"
  },
  {
    "text": "collection storage or monitoring so we'll create a Damon set",
    "start": "4259679",
    "end": "4264760"
  },
  {
    "text": "here just using engine x uh and we're just this is the PO template so this is just pretty basic just using engine X",
    "start": "4264760",
    "end": "4271000"
  },
  {
    "text": "and exposing Port 80 so we have a Damon Set uh created so",
    "start": "4271000",
    "end": "4276320"
  },
  {
    "text": "uh what do we expect we should uh expect this pod or a pod a copy of the Pod from",
    "start": "4276320",
    "end": "4282159"
  },
  {
    "text": "the stam set to run on uh every node in the cluster so let's take a look of course uh we only see them",
    "start": "4282159",
    "end": "4289320"
  },
  {
    "text": "running on the worker nodes so we see two pods running uh in the cluster and",
    "start": "4289320",
    "end": "4294880"
  },
  {
    "text": "we could take a look at why of course and like I mentioned taints allow a node",
    "start": "4294880",
    "end": "4299920"
  },
  {
    "text": "to repel pods uh and while the Toleration allows those pods to uh to be scheduled with those matching",
    "start": "4299920",
    "end": "4307920"
  },
  {
    "text": "taints uh and we could imperi uh do use a command Cube control taint to actually",
    "start": "4308760",
    "end": "4314560"
  },
  {
    "text": "taint uh a a node and it there's a format of key equals value it does not need a value and the effect and we'll",
    "start": "4314560",
    "end": "4321440"
  },
  {
    "text": "take a look at what is used and what the possible effects uh are so we're going to just use a cube control command here",
    "start": "4321440",
    "end": "4328440"
  },
  {
    "text": "to cube control get nodes using custom columns uh to see uh there is a A taints",
    "start": "4328440",
    "end": "4333679"
  },
  {
    "text": "in the in the spec of the nodes so we could take a look at them uh see what the effects are uh and see what the",
    "start": "4333679",
    "end": "4340080"
  },
  {
    "text": "taint key is and if there's value there is no no value for this one so I didn't add it in here",
    "start": "4340080",
    "end": "4345840"
  },
  {
    "text": "so we do see the taint on the control plane node uh and so that's why the Damon set was not is not running on the",
    "start": "4345840",
    "end": "4351600"
  },
  {
    "text": "control plane node so the taint is uh no schedule uh so no schedule means that's",
    "start": "4351600",
    "end": "4356639"
  },
  {
    "text": "not going to affect any Runing nodes currently when that taint was affected on that on that node uh and it's going",
    "start": "4356639",
    "end": "4362520"
  },
  {
    "text": "to uh the taint uses the key node roll uh kubernetes doio control",
    "start": "4362520",
    "end": "4368400"
  },
  {
    "text": "Plan and there's other three total effects as well uh so the no executes if",
    "start": "4368400",
    "end": "4373880"
  },
  {
    "text": "this was no executes and that means if there were any running pods in this uh in this node then it will actually evict",
    "start": "4373880",
    "end": "4380000"
  },
  {
    "text": "those running pods unless they had a matching Toleration uh so in this one with no schedule it does in fact running",
    "start": "4380000",
    "end": "4385600"
  },
  {
    "text": "pods only uh new pods and prefer not uh no schedule meaning that there's a preference so",
    "start": "4385600",
    "end": "4391800"
  },
  {
    "text": "this just a soft version of no schedule uh so there's no other place to place the Pod the Pod it will actually place",
    "start": "4391800",
    "end": "4397719"
  },
  {
    "text": "it there and kind as we see here default suain the control plane node uh Cube ADM",
    "start": "4397719",
    "end": "4404600"
  },
  {
    "text": "does the same as well so if you start a QBE ADM cluster from Upstream it will also Tain the control plane node as well",
    "start": "4404600",
    "end": "4411520"
  },
  {
    "text": "because we don't want uh any application uh to be running on the same uh know that our control plane is running in",
    "start": "4411520",
    "end": "4418159"
  },
  {
    "text": "case there is a container Escape uh from the application and they have access to the kubernetes control plane",
    "start": "4418159",
    "end": "4425000"
  },
  {
    "text": "components so we're going to delete uh this Damon set here uh and let's actually use um uh",
    "start": "4425000",
    "end": "4433080"
  },
  {
    "text": "let's actually deploy a dam set that actually tolerates the taint on the control plan now this is typically a big",
    "start": "4433080",
    "end": "4439000"
  },
  {
    "text": "no no but this is just to uh uh to uh to to show how we can use a toleration uh",
    "start": "4439000",
    "end": "4445760"
  },
  {
    "text": "on this Damon set or in this pod for this Damon set here so we see that here in this in the spec field here under",
    "start": "4445760",
    "end": "4452520"
  },
  {
    "text": "tolerations uh it matches that same key that we see in the tank key here uh no-roll do kubernetes do icontrol plane",
    "start": "4452520",
    "end": "4460920"
  },
  {
    "text": "uh and it just you want to make sure it just exists and the effect is mat has to match as well no",
    "start": "4460920",
    "end": "4466560"
  },
  {
    "text": "schedule so let's take a look to see if this St set is actually running now on",
    "start": "4466560",
    "end": "4472560"
  },
  {
    "text": "all three nodes and since we have the Toleration we do expect it and we do see it uh running in all three nodes",
    "start": "4472560",
    "end": "4479239"
  },
  {
    "text": "here so let's delete that D sets uh so now because we're not supposed to be running applications um other",
    "start": "4479239",
    "end": "4485360"
  },
  {
    "text": "applications on the control plan node so now we're going to look into a a node selector uh and we could use node",
    "start": "4485360",
    "end": "4492199"
  },
  {
    "text": "selector to make sure pods are placed on specific nodes or group of nodes since we're using labels and labels are a way",
    "start": "4492199",
    "end": "4499719"
  },
  {
    "text": "to identify and group things like nodes or pods or other kues objects",
    "start": "4499719",
    "end": "4505880"
  },
  {
    "text": "here so we look at uh node labels since the labels the the node selector uses",
    "start": "4505880",
    "end": "4511719"
  },
  {
    "text": "labels we'll see the existing labels uh on the nodes here uh and labels are",
    "start": "4511719",
    "end": "4516760"
  },
  {
    "text": "often used for we could identify the architecture uh we could do the the type",
    "start": "4516760",
    "end": "4522040"
  },
  {
    "text": "of of os as well we see Linux here uh the host name as well and there are",
    "start": "4522040",
    "end": "4527199"
  },
  {
    "text": "other things like node feature discovery that will actually add labels to tell uh to tell the user or the cluster what",
    "start": "4527199",
    "end": "4533920"
  },
  {
    "text": "Hardware is accessible on that node as well so now we're going to add a label",
    "start": "4533920",
    "end": "4540639"
  },
  {
    "text": "uh two labels here we're going to label one of the workers uh security equals low because the label is a key value",
    "start": "4540639",
    "end": "4546040"
  },
  {
    "text": "pair so we're going to say the first worker node it has low security I'm going to say the the second node uh the",
    "start": "4546040",
    "end": "4553159"
  },
  {
    "text": "second worker node has high security and the labels do not prevent pods from",
    "start": "4553159",
    "end": "4559120"
  },
  {
    "text": "being scheduled on noes it's just a it just used to identify and group nodes so let's just confirm the labels are",
    "start": "4559120",
    "end": "4565480"
  },
  {
    "text": "created with uh Cube control get nodes D- show- labels and we see those labels",
    "start": "4565480",
    "end": "4572840"
  },
  {
    "text": "here in the very bottom and we're going to assign let's say a pod that we deem high security so",
    "start": "4572840",
    "end": "4581080"
  },
  {
    "text": "it should be running on a node that has certain guard wh uh that we deem has high security as",
    "start": "4581080",
    "end": "4587760"
  },
  {
    "text": "well so here we have a pod manifest here uh and we have a node selector uh which",
    "start": "4587760",
    "end": "4595199"
  },
  {
    "text": "and which under node selector has a key value pair SEC security equals high so with this with node selector here we",
    "start": "4595199",
    "end": "4601679"
  },
  {
    "text": "expect it to run uh only on the second worker node where we have the matching label uh security equals high and so",
    "start": "4601679",
    "end": "4609400"
  },
  {
    "text": "let's uh since that pod is created let's go take a look and get uh check where that pod is placed",
    "start": "4609400",
    "end": "4616040"
  },
  {
    "text": "it looks like it's correct here it's on worker node 2 here so we do expect uh",
    "start": "4616040",
    "end": "4621520"
  },
  {
    "text": "where we do have that pod running here uh and let me see here did that",
    "start": "4621520",
    "end": "4629679"
  },
  {
    "text": "check and we're going to do a little clean up here uh can we'll delete the Pod and delete the the Nam space as",
    "start": "4629679",
    "end": "4638320"
  },
  {
    "text": "well and just to summarize here um always have the concept of zero trust uh",
    "start": "4641199",
    "end": "4647520"
  },
  {
    "text": "uh whenever you are creating pods or you're placing pods you want to minimize that blast radius uh always assume that",
    "start": "4647520",
    "end": "4654040"
  },
  {
    "text": "there will be a a container Escape uh so you want to make sure that the uh the high highly sensitive applications are",
    "start": "4654040",
    "end": "4661639"
  },
  {
    "text": "are either isolated on nodes or or other applic or other pods are not scheduled",
    "start": "4661639",
    "end": "4667280"
  },
  {
    "text": "on the same node as those a highly sensitive application",
    "start": "4667280",
    "end": "4673040"
  },
  {
    "text": "so all right uh so thank you everyone for joining I hope you learn a few",
    "start": "4673040",
    "end": "4678400"
  },
  {
    "text": "things following this workshop and uh I wanted to say a little thanks to isent",
    "start": "4678400",
    "end": "4683600"
  },
  {
    "text": "for providing the instruct like infrastructure and uh again like the the workshop will not you will not be able",
    "start": "4683600",
    "end": "4690920"
  },
  {
    "text": "to like retake this Workshop specifically on instruct but you can use the repository that is like at the bottom of the little uh page we",
    "start": "4690920",
    "end": "4698400"
  },
  {
    "text": "distributed to replay those uh things locally on your cler so yeah the repository is not public so thank you",
    "start": "4698400",
    "end": "4705360"
  },
  {
    "text": "very much for your time thank you for attending",
    "start": "4705360",
    "end": "4709800"
  }
]