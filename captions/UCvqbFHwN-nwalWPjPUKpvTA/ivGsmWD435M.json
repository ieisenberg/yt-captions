[
  {
    "text": "thank you I'm sure many people will be interested in rubberbanks Adventures in the cloud",
    "start": "0",
    "end": "5160"
  },
  {
    "text": "for now we have Christian vacative from solo",
    "start": "5160",
    "end": "11179"
  },
  {
    "text": "give it up for Christian please [Applause]",
    "start": "11179",
    "end": "19800"
  },
  {
    "text": "uh sorry we're having a little problem with this buzz sound",
    "start": "25140",
    "end": "30240"
  },
  {
    "text": "it's not in the room it's in your ears it's being worked out and uh it will I'm",
    "start": "30240",
    "end": "37980"
  },
  {
    "text": "sorry for the overall loss all right good morning everyone",
    "start": "37980",
    "end": "46379"
  },
  {
    "text": "this presentation will be about evpf I'm not sure how many of you are already familiar with eppf",
    "start": "46379",
    "end": "52860"
  },
  {
    "text": "yes if you could raise your hand please oh nearly everyone are there any ebpf experts in the audience Maybe",
    "start": "52860",
    "end": "60800"
  },
  {
    "text": "there are some lights coming in but I cannot see any last time I gave this talk that for that",
    "start": "61199",
    "end": "68820"
  },
  {
    "text": "cube hudder in Edinburgh last at the end of last year and there were lots of EVP",
    "start": "68820",
    "end": "74820"
  },
  {
    "text": "after all there and yeah that was almost an ebps Summit because there were multiple talks but here it's uh I didn't",
    "start": "74820",
    "end": "83280"
  },
  {
    "text": "see that many so hopefully this will be something interesting For You especially",
    "start": "83280",
    "end": "88500"
  },
  {
    "text": "if you are just starting out to dbf or you want to find a new way to experiment",
    "start": "88500",
    "end": "93900"
  },
  {
    "text": "with dbpf itself so first some introduction my name is",
    "start": "93900",
    "end": "99540"
  },
  {
    "text": "Christian fakete I'm a field engineer at solo.io you can find the contact information",
    "start": "99540",
    "end": "105320"
  },
  {
    "text": "of me on this slide the company itself we are an application",
    "start": "105320",
    "end": "111240"
  },
  {
    "text": "networking company founded not that long ago we are based in Cambridge Massachusetts in the us but we have",
    "start": "111240",
    "end": "117600"
  },
  {
    "text": "multiple locations we are all working remotely around the globe we are doing mostly application",
    "start": "117600",
    "end": "124020"
  },
  {
    "text": "networking related stuff but that's a quite extensive field so we are nowadays",
    "start": "124020",
    "end": "132080"
  },
  {
    "text": "covering multiple layers in the application networking stack starting",
    "start": "132080",
    "end": "137700"
  },
  {
    "text": "from the kernel and ending at the um regular traditional application",
    "start": "137700",
    "end": "143580"
  },
  {
    "text": "networking layer application layer that is layer 7 in the oci model",
    "start": "143580",
    "end": "150319"
  },
  {
    "text": "our products are open core Enterprise application model but we also have a few",
    "start": "150319",
    "end": "156599"
  },
  {
    "text": "open source completely open source project as well for example bumblebee",
    "start": "156599",
    "end": "161640"
  },
  {
    "text": "that that I will talk about quite soon we have many happy customers we are well",
    "start": "161640",
    "end": "166680"
  },
  {
    "text": "funded we are also hiring so if this is something interesting for you please reach out",
    "start": "166680",
    "end": "173160"
  },
  {
    "text": "well and come and say hi at our booth and enter to win adrone",
    "start": "173160",
    "end": "180560"
  },
  {
    "text": "so first my background because this presentation has a title of how I like",
    "start": "180599",
    "end": "186780"
  },
  {
    "text": "to how I get to know and love ebpf itself so it makes sense to include a",
    "start": "186780",
    "end": "193140"
  },
  {
    "text": "little bit of background of me first as you can see I was mostly six times",
    "start": "193140",
    "end": "199280"
  },
  {
    "text": "infrastructure devops SRE personal engineer over professional life I was mostly doing the same thing",
    "start": "199280",
    "end": "205580"
  },
  {
    "text": "in all of my positions producer positions but you can see the trend how",
    "start": "205580",
    "end": "210599"
  },
  {
    "text": "the name of the position changed over the years my main focus is invoice of celebrity",
    "start": "210599",
    "end": "217319"
  },
  {
    "text": "most of the time so I designed and operated off the royalty solutions for",
    "start": "217319",
    "end": "222360"
  },
  {
    "text": "video streaming clusters hundreds of VMS in on-premise data centers across the globe and these were",
    "start": "222360",
    "end": "229260"
  },
  {
    "text": "serving millions of users I was an SRE at a password manager company that's",
    "start": "229260",
    "end": "235260"
  },
  {
    "text": "quite famous nowadays maybe you can guess the name and I was also operating",
    "start": "235260",
    "end": "241220"
  },
  {
    "text": "clusters planning kubernetes and istio",
    "start": "241220",
    "end": "246659"
  },
  {
    "text": "ebpf is quite a hard topic nowadays as you also know it also has a steep",
    "start": "246659",
    "end": "252599"
  },
  {
    "text": "learning curve and fast forward to last April when I joined solo.io I got to get",
    "start": "252599",
    "end": "259139"
  },
  {
    "text": "familiar with this technology I was able to make some contribution to our bumblebee project and to to the BCC",
    "start": "259139",
    "end": "266720"
  },
  {
    "text": "framework as well which as you will see is basically the",
    "start": "266720",
    "end": "273620"
  },
  {
    "text": "the the first generation of evpf based tools out there",
    "start": "273620",
    "end": "279900"
  },
  {
    "text": "I was also able to create a developing GBP application Workshop if you go to solo.io and",
    "start": "279900",
    "end": "286199"
  },
  {
    "text": "to the events page you can find workshops that we frequently do and",
    "start": "286199",
    "end": "292560"
  },
  {
    "text": "there are some ebpf specific versions there as well so first let's see what ebpf is ebpf is",
    "start": "292560",
    "end": "301560"
  },
  {
    "text": "basically a flexible safe and fast way to inject custom logic into the kernel",
    "start": "301560",
    "end": "307759"
  },
  {
    "text": "the origins are dating back to the days of DCP dump if you are around for a long",
    "start": "307759",
    "end": "314820"
  },
  {
    "text": "time you might have already used TCP Dam to to troubleshoot networking issues that was using that was using originally",
    "start": "314820",
    "end": "321199"
  },
  {
    "text": "BPF which is a processor of ebpf",
    "start": "321199",
    "end": "326759"
  },
  {
    "text": "multiple use cases regarding EVPs this can be sorted into four main families",
    "start": "327060",
    "end": "333720"
  },
  {
    "text": "for example security tracing profiling networking Authority monitoring security is quite real because evpf as you want",
    "start": "333720",
    "end": "341460"
  },
  {
    "text": "to already know is based on kernel events so you are able to track actual C",
    "start": "341460",
    "end": "348479"
  },
  {
    "text": "scores happening in your in your system tracing and profiling is also quite important because you can get a unified",
    "start": "348479",
    "end": "355560"
  },
  {
    "text": "overview of your actual process running in the user space and you can get some",
    "start": "355560",
    "end": "361740"
  },
  {
    "text": "information about this process from the kernel space there are multiple providers tools currently that are quite",
    "start": "361740",
    "end": "367979"
  },
  {
    "text": "popular these are nowadays the more modern ones are based on ebpf as well for example Parker",
    "start": "367979",
    "end": "374940"
  },
  {
    "text": "um networking use case you can do for example layer 4 load balancing and other",
    "start": "374940",
    "end": "380100"
  },
  {
    "text": "similar things with ebpf again",
    "start": "380100",
    "end": "386100"
  },
  {
    "text": "via radical so this can be quite performant and and safe to do so so",
    "start": "386100",
    "end": "391680"
  },
  {
    "text": "that's that's another great use case for example psyllium can come to mind if you are familiar with that open source",
    "start": "391680",
    "end": "398039"
  },
  {
    "text": "project and the last family is observability and monitoring and this is that I will cover in this talk this is",
    "start": "398039",
    "end": "405780"
  },
  {
    "text": "also a quite nice area because evpf can solve observative challenges that cannot",
    "start": "405780",
    "end": "412080"
  },
  {
    "text": "really be solved otherwise this diagram is probably my favorite",
    "start": "412080",
    "end": "418580"
  },
  {
    "text": "eppr diagram because it's quite simple but still it's I think the best way to",
    "start": "418580",
    "end": "424979"
  },
  {
    "text": "understand what evpf is and how it works in your system on the left hand side you",
    "start": "424979",
    "end": "430680"
  },
  {
    "text": "can see the user program on the right you can see the kernel Space Program when you have an ebpf program you have",
    "start": "430680",
    "end": "437400"
  },
  {
    "text": "to um take into consideration both sides because the user space program is the",
    "start": "437400",
    "end": "443220"
  },
  {
    "text": "one that the user will interact with this will display the statistics for",
    "start": "443220",
    "end": "448440"
  },
  {
    "text": "example if you are getting some statistics out of out of the kernel and the kernel side logic is basically where",
    "start": "448440",
    "end": "455819"
  },
  {
    "text": "your actual ebpf logic is so first it looks like that the user program is",
    "start": "455819",
    "end": "463919"
  },
  {
    "text": "responsible for generating the BPF byte code this is just some life cycle management for reactor BPF code",
    "start": "463919",
    "end": "471360"
  },
  {
    "text": "but this also has to be done by the by the user Space Program then after the BPF byte code is",
    "start": "471360",
    "end": "478319"
  },
  {
    "text": "generated it will load into the kernel and as I mentioned ebpf is safe there's a verifier in on a kernel site and you",
    "start": "478319",
    "end": "487199"
  },
  {
    "text": "are only able to run custom logic into on in your kernel if it passed the",
    "start": "487199",
    "end": "493139"
  },
  {
    "text": "verifier it's fixed thank you",
    "start": "493139",
    "end": "500720"
  },
  {
    "text": "so after the verifier is passed you have that BPF rectangular there that's your",
    "start": "501539",
    "end": "507479"
  },
  {
    "text": "actual BPF logic uh ebpf BPF is basically event based so you can specify",
    "start": "507479",
    "end": "515580"
  },
  {
    "text": "multiple events k-probes Europe's Race points in your kernel and then",
    "start": "515580",
    "end": "523099"
  },
  {
    "text": "these points are being reached in the kernel you can trigger your custom logic",
    "start": "523099",
    "end": "528720"
  },
  {
    "text": "which is the BPF rectangle there the last piece in the car on the",
    "start": "528720",
    "end": "533940"
  },
  {
    "text": "Cardinal side are maps maps is a way to exchange data between kernel space and",
    "start": "533940",
    "end": "540240"
  },
  {
    "text": "userspace so once you have your data that you are interested in in the kernel you have to populate your various BPF",
    "start": "540240",
    "end": "548940"
  },
  {
    "text": "maps in the on the calendar side and from these Maps you will be able to read",
    "start": "548940",
    "end": "554760"
  },
  {
    "text": "the data from the user program and this is basically how you for example visualize this data",
    "start": "554760",
    "end": "563360"
  },
  {
    "text": "okay so now we know that what evpf is to some extent we know that but why is why",
    "start": "564360",
    "end": "571920"
  },
  {
    "text": "it's important as I mentioned it's important because it can be a solution to impossible tasks",
    "start": "571920",
    "end": "578820"
  },
  {
    "text": "and scaling issues scaling issues I mentioned that when I was talking about Network day networking use case category",
    "start": "578820",
    "end": "587040"
  },
  {
    "text": "ABC has quite common performance it's it's in the kernel um for example you can do some really",
    "start": "587040",
    "end": "596339"
  },
  {
    "text": "effective copy operations that way between your network interfaces so if",
    "start": "596339",
    "end": "603899"
  },
  {
    "text": "you are operating at a real relaxed scale regarding networking for example you are a cloud provider it might make",
    "start": "603899",
    "end": "609600"
  },
  {
    "text": "sense to to look into ebpf it can be also solution for other impossible tasks for example Authority",
    "start": "609600",
    "end": "617399"
  },
  {
    "text": "related ones if there are some sres here I guess you",
    "start": "617399",
    "end": "623580"
  },
  {
    "text": "had some hard time to catch out of memory exceptions in kubernetes clusters",
    "start": "623580",
    "end": "629040"
  },
  {
    "text": "because there are very there are a few error problems to to catch those if you",
    "start": "629040",
    "end": "634380"
  },
  {
    "text": "want to export those as Primitives metrics then you have an you might haven't even heard this time",
    "start": "634380",
    "end": "641220"
  },
  {
    "text": "because there are no real exporters you have to either Mount the docker socket someplace",
    "start": "641220",
    "end": "648720"
  },
  {
    "text": "and get data from there the fee advisor doesn't really cover all of the use",
    "start": "648720",
    "end": "655079"
  },
  {
    "text": "cases of out of memory exceptions so it's quite hard to get it right for example this is a great example where",
    "start": "655079",
    "end": "661620"
  },
  {
    "text": "ebpf can have and it's important because there are multiple personals for example application developers SRX device",
    "start": "661620",
    "end": "667680"
  },
  {
    "text": "engineers and network operators who could benefit from this in this presentation I will focus on the essay",
    "start": "667680",
    "end": "673440"
  },
  {
    "text": "leader of the engineered Parts because back in the day I was also",
    "start": "673440",
    "end": "678680"
  },
  {
    "text": "okay by ebpf is query because some can think that it's scary because",
    "start": "678779",
    "end": "685579"
  },
  {
    "text": "basically it's the kernel and that that just doesn't have a quite nice ring",
    "start": "685579",
    "end": "693060"
  },
  {
    "text": "to it nowadays everyone is speeding up new web applications",
    "start": "693060",
    "end": "698940"
  },
  {
    "text": "microservices and kubernetes clusters everyone is parsing Json you might have",
    "start": "698940",
    "end": "704880"
  },
  {
    "text": "a Kafka queue in the middle of your stack but basically most of the engineers nowadays are not quite used to",
    "start": "704880",
    "end": "712579"
  },
  {
    "text": "do some low-level systems engineering work so when they hear that ABP is",
    "start": "712579",
    "end": "719040"
  },
  {
    "text": "something related to together aside to Kernel it can be scary",
    "start": "719040",
    "end": "726259"
  },
  {
    "text": "can be also scary because of the lack of the documentation I'm not saying that there's no documentation there are some",
    "start": "726380",
    "end": "733200"
  },
  {
    "text": "it's getting better and better but you have to either seek out Arcane",
    "start": "733200",
    "end": "738660"
  },
  {
    "text": "blog post by various ebpf Outdoors or you have to check out the",
    "start": "738660",
    "end": "747000"
  },
  {
    "text": "um the kernel mailing lists and the user experiences is not that under the great most of the people again are not really",
    "start": "747000",
    "end": "753420"
  },
  {
    "text": "used to check out the kernel mailing list if if you want to troubleshoot a",
    "start": "753420",
    "end": "758940"
  },
  {
    "text": "bug in your Json parser web application",
    "start": "758940",
    "end": "763760"
  },
  {
    "text": "ebpf can be also scary because people don't really know where they can start to get familiar with it there are lots",
    "start": "764040",
    "end": "770339"
  },
  {
    "text": "of emerging tools there's a new ebpf based tool every other week so it can be quite daunting to to find the right one",
    "start": "770339",
    "end": "777180"
  },
  {
    "text": "there where you can get familiar with this technology and I mentioned it already is the kernel",
    "start": "777180",
    "end": "784079"
  },
  {
    "text": "and I think that this is the uh this is the the thing that that can be discouraged of all",
    "start": "784079",
    "end": "791639"
  },
  {
    "text": "let's take a look at the BPF landscape on the slide you can see the application",
    "start": "791639",
    "end": "798260"
  },
  {
    "text": "landscape of of ebpf this logo collection is from the end of last week",
    "start": "798260",
    "end": "804360"
  },
  {
    "text": "when I last gave this presentation I was thinking about updating it with the new logos but it was also quite hard to get",
    "start": "804360",
    "end": "812399"
  },
  {
    "text": "this on this slide so I decided not to there are a few new tools out there but",
    "start": "812399",
    "end": "818459"
  },
  {
    "text": "as you can see it's a it's a quite extensive landscape so again it can be quite hard where to",
    "start": "818459",
    "end": "825120"
  },
  {
    "text": "start with getting familiar with this technology",
    "start": "825120",
    "end": "829760"
  },
  {
    "text": "to make it simpler let's focus on obserability and for obserability we can",
    "start": "830459",
    "end": "836339"
  },
  {
    "text": "follow the advice of Brandon Gregg some of you might might have heard of him he was he is a great contributor one of the",
    "start": "836339",
    "end": "843540"
  },
  {
    "text": "biggest contributors to the evpf ecosystem this quote means that you should not",
    "start": "843540",
    "end": "851220"
  },
  {
    "text": "reinvent the wheel all the time you should not start from sketch you should",
    "start": "851220",
    "end": "856260"
  },
  {
    "text": "not program your way to everything if there are tools available let's just use",
    "start": "856260",
    "end": "862320"
  },
  {
    "text": "them because people spend hard hours to get to the point where those tools are",
    "start": "862320",
    "end": "869820"
  },
  {
    "text": "are working properly and we should really benefit from using those in the",
    "start": "869820",
    "end": "875399"
  },
  {
    "text": "first place on the slide you can see the the BCC uh",
    "start": "875399",
    "end": "881399"
  },
  {
    "text": "screenshot of BCC there are multiple uh basically they'll uh multiple layers are",
    "start": "881399",
    "end": "889139"
  },
  {
    "text": "here and there are some BCC ebpf tools attached to all these layers",
    "start": "889139",
    "end": "897120"
  },
  {
    "text": "so for example if you want to troubleshoot let's say um",
    "start": "897120",
    "end": "902820"
  },
  {
    "text": "system libraries then for example qsnoop can be a good solution to to get started",
    "start": "902820",
    "end": "909019"
  },
  {
    "text": "finding performance issues or troubleshoot issues then there are multiplier programs targeting different",
    "start": "909019",
    "end": "916560"
  },
  {
    "text": "areas this is basically a GitHub repository so you can go to github.com",
    "start": "916560",
    "end": "921860"
  },
  {
    "text": "and find a business repository and you should you should find all these all",
    "start": "921860",
    "end": "928019"
  },
  {
    "text": "these traditional VCC tools in the in the tools folder if you want to run this you have to do",
    "start": "928019",
    "end": "936540"
  },
  {
    "text": "it like this first you write a single group Python program and that single Python program will contain the user",
    "start": "936540",
    "end": "943740"
  },
  {
    "text": "Space Program I was talking about that's written in Python and the cardinal space program that's written in C",
    "start": "943740",
    "end": "950339"
  },
  {
    "text": "uh but how is that possible how can two languages be in a single program",
    "start": "950339",
    "end": "956699"
  },
  {
    "text": "it's possible because the C program is basically a string and uh yes this is",
    "start": "956699",
    "end": "961980"
  },
  {
    "text": "one of the reasons why ebpf can be have to have to start with you can see a",
    "start": "961980",
    "end": "967079"
  },
  {
    "text": "screenshot here this is actually the room killer uh troubleshooting Tool uh",
    "start": "967079",
    "end": "972660"
  },
  {
    "text": "you can see uh the BPF code written in C inside the Python program",
    "start": "972660",
    "end": "979680"
  },
  {
    "text": "that's this was the traditional way to get started with dbpf then during execution BCC will call",
    "start": "979680",
    "end": "987120"
  },
  {
    "text": "clang llvm and platform had a lookup to know where the certain points in the",
    "start": "987120",
    "end": "992639"
  },
  {
    "text": "kernel are um VM and the kernel headers have to be",
    "start": "992639",
    "end": "998279"
  },
  {
    "text": "present on the target machine where you would execute for your program then you have to compile your code at",
    "start": "998279",
    "end": "1005480"
  },
  {
    "text": "runtime but this can be quite problematic because let's say you are operating",
    "start": "1005480",
    "end": "1011480"
  },
  {
    "text": "um let's say VMS in production and you don't like to underutilize these VMS so",
    "start": "1011480",
    "end": "1018860"
  },
  {
    "text": "let's say these VMS are consuming uh I don't know 70 percent of the available",
    "start": "1018860",
    "end": "1025938"
  },
  {
    "text": "resources for example CPU or memory and if you let's say you want to troubleshoot something so for example",
    "start": "1025939",
    "end": "1032540"
  },
  {
    "text": "try to catch out of our receptions so we go sshing to the machine deploy the",
    "start": "1032540",
    "end": "1039260"
  },
  {
    "text": "script you have clang llvm there that's quite huge you have the current headers available but you have to compile your",
    "start": "1039260",
    "end": "1046220"
  },
  {
    "text": "program and you have a virtual machine that is basically",
    "start": "1046220",
    "end": "1051320"
  },
  {
    "text": "consuming the proper amount of resources but if you compile your traditional BCC",
    "start": "1051320",
    "end": "1057980"
  },
  {
    "text": "code on that production machine the SRA teams will be at your door at your door",
    "start": "1057980",
    "end": "1064179"
  },
  {
    "text": "in a few seconds because those machines can easily tip over",
    "start": "1064179",
    "end": "1070220"
  },
  {
    "text": "because you were operating at the at the desired resource utilization and now you are",
    "start": "1070220",
    "end": "1077840"
  },
  {
    "text": "performing a very resource heavy operation so it's it might not be a good fit for for collection use cases",
    "start": "1077840",
    "end": "1084980"
  },
  {
    "text": "that is a better way to do this and this is by following the BPF core methodology",
    "start": "1084980",
    "end": "1090400"
  },
  {
    "text": "core means compilations run everywhere for this uh",
    "start": "1090400",
    "end": "1095840"
  },
  {
    "text": "you have to have the BTF type information available this is usually done by having a VM linux.h header file",
    "start": "1095840",
    "end": "1102919"
  },
  {
    "text": "available on your system this will make sure that you can run this everywhere you will still use Clank",
    "start": "1102919",
    "end": "1109940"
  },
  {
    "text": "as a compiler and the libbf user space loader Linker Library",
    "start": "1109940",
    "end": "1116440"
  },
  {
    "text": "and if you have all these things together you are on the route to create portable",
    "start": "1116440",
    "end": "1123280"
  },
  {
    "text": "and better more modern evpf programs the kernel and the user",
    "start": "1123280",
    "end": "1128900"
  },
  {
    "text": "space code in this case are both written in C which is great so no more python no",
    "start": "1128900",
    "end": "1134419"
  },
  {
    "text": "more injecting code AS SSC as assisting and you can even compile it in advance",
    "start": "1134419",
    "end": "1141440"
  },
  {
    "text": "so after that you don't need to have Clank to be available on the target machine you can just compile it in",
    "start": "1141440",
    "end": "1148400"
  },
  {
    "text": "advance ship to the Target machine where you want to execute it and as long as the requirements are met you can easily",
    "start": "1148400",
    "end": "1156860"
  },
  {
    "text": "run an abpf code in a quite efficient manner on a production system",
    "start": "1156860",
    "end": "1163100"
  },
  {
    "text": "but we can do even better than this you could only it's also possible to focus",
    "start": "1163100",
    "end": "1168200"
  },
  {
    "text": "on only on the cardinal space program as you would imagine the Canada space program is where the really exciting and",
    "start": "1168200",
    "end": "1174860"
  },
  {
    "text": "interesting uh surface is the user space is basically just Plumping you have to",
    "start": "1174860",
    "end": "1180620"
  },
  {
    "text": "manage the life cycle of of loading the code and cleaning up then visualizing the data that's not something that",
    "start": "1180620",
    "end": "1187460"
  },
  {
    "text": "that's very interesting so um focusing on the cardinal space",
    "start": "1187460",
    "end": "1192559"
  },
  {
    "text": "program can be can be much more interesting so back to the original question we have",
    "start": "1192559",
    "end": "1199100"
  },
  {
    "text": "to start to learn evpf the answer can be for example with the Bumblebee project which is an open source project by",
    "start": "1199100",
    "end": "1206419"
  },
  {
    "text": "solo.io you can go to brandberry.io or find the repository under the solo IO",
    "start": "1206419",
    "end": "1213260"
  },
  {
    "text": "organization basically it's fully open source there are multiple",
    "start": "1213260",
    "end": "1218799"
  },
  {
    "text": "examples there so it's a great way to to get started with abpf",
    "start": "1218799",
    "end": "1224000"
  },
  {
    "text": "what bumblebees bumblebee can help you to build run and distribute ebpf",
    "start": "1224000",
    "end": "1229520"
  },
  {
    "text": "programs as oci compatible images and it can even expose these events as",
    "start": "1229520",
    "end": "1236720"
  },
  {
    "text": "Prometheus compatible metrics which is quite nice because you most probably already have Primitives so it's quite",
    "start": "1236720",
    "end": "1242660"
  },
  {
    "text": "real to hook it into Primitives and visualize your your data that way and if",
    "start": "1242660",
    "end": "1247820"
  },
  {
    "text": "you are talking about the authority use case it's also quite true to use the the factor standards",
    "start": "1247820",
    "end": "1254860"
  },
  {
    "text": "um it's working like um taking the existing libertarian space",
    "start": "1255440",
    "end": "1261980"
  },
  {
    "text": "code and generating the user space code for you without even knowing what that",
    "start": "1261980",
    "end": "1268580"
  },
  {
    "text": "user effect would will be and we also wanted to focus on the user experience and the developer experience so with",
    "start": "1268580",
    "end": "1276500"
  },
  {
    "text": "bumblebee you have a Docker like experience meaning you can use basically",
    "start": "1276500",
    "end": "1281780"
  },
  {
    "text": "very similar comments then that you would use with Docker for example you can do the build be run be push to push",
    "start": "1281780",
    "end": "1290299"
  },
  {
    "text": "the images to pull the images to to build the oci images for a video code",
    "start": "1290299",
    "end": "1296000"
  },
  {
    "text": "and and that's basically a really nice way to distribute these programs as well",
    "start": "1296000",
    "end": "1304480"
  },
  {
    "text": "you can see a very short video of Bumblebee in action you can see an example it's a C file that's the kernel",
    "start": "1305120",
    "end": "1312799"
  },
  {
    "text": "space logic that's all you need after you have the file you can do something like B build and use the local file",
    "start": "1312799",
    "end": "1320000"
  },
  {
    "text": "there after that the image is built you can push it into a local or remote",
    "start": "1320000",
    "end": "1325100"
  },
  {
    "text": "registry after it's pushed you can just run it and it even has a user interface",
    "start": "1325100",
    "end": "1331220"
  },
  {
    "text": "like this if you don't want to expose the",
    "start": "1331220",
    "end": "1336340"
  },
  {
    "text": "Matrix and just for developing local developing you just want to see what the",
    "start": "1336340",
    "end": "1342080"
  },
  {
    "text": "output will be",
    "start": "1342080",
    "end": "1345340"
  },
  {
    "text": "um basically for this it's quite nice because you can use the if you go to the",
    "start": "1347659",
    "end": "1353840"
  },
  {
    "text": "VCC repository you can find the lib PF tools folder inside this",
    "start": "1353840",
    "end": "1362320"
  },
  {
    "text": "repository and there you find most of the time two files per tool and",
    "start": "1362320",
    "end": "1370520"
  },
  {
    "text": "these files are basically Rewritten to use the core principle which is quite nice these are the more modern",
    "start": "1370520",
    "end": "1376240"
  },
  {
    "text": "equivalent of the traditional tools and you can take examples from this folder",
    "start": "1376240",
    "end": "1382520"
  },
  {
    "text": "and pour these into bumblebee for this currently you only have to",
    "start": "1382520",
    "end": "1388410"
  },
  {
    "text": "[Music] um take care of a single thing and that is you have to",
    "start": "1388410",
    "end": "1394520"
  },
  {
    "text": "have compatible map types with with bumblebee currently only hashmap and",
    "start": "1394520",
    "end": "1400039"
  },
  {
    "text": "ring buffer is supported so there are a few tools that are using perv buffer that was on the traditional map type you",
    "start": "1400039",
    "end": "1407780"
  },
  {
    "text": "have to pour that to ring buffer first but after that you can basically just put it into",
    "start": "1407780",
    "end": "1413720"
  },
  {
    "text": "um Bumblebee and your code will work and you have Prometheus metrics with the exposed data",
    "start": "1413720",
    "end": "1420020"
  },
  {
    "text": "on this slide you can see a few differences between purple foreign buffer one of them is using buffers per",
    "start": "1420020",
    "end": "1426320"
  },
  {
    "text": "CP with the other one is using a share buffer there are performance differences the event ordering is is much better",
    "start": "1426320",
    "end": "1432200"
  },
  {
    "text": "these developer experiences also much better there's a reserve submit API to make sure that you can",
    "start": "1432200",
    "end": "1438860"
  },
  {
    "text": "write more write better code the requirements are to have a fairly new",
    "start": "1438860",
    "end": "1446059"
  },
  {
    "text": "Linux version but most of the I think most of the cloud providers are already shipping links versions",
    "start": "1446059",
    "end": "1452480"
  },
  {
    "text": "newer than this so it these are not really hard requirements",
    "start": "1452480",
    "end": "1459080"
  },
  {
    "text": "I would have a demo but I will skip this uh please find me if you are interested",
    "start": "1459080",
    "end": "1464240"
  },
  {
    "text": "in a live demo I can do it at our booths or somewhere around here I will just",
    "start": "1464240",
    "end": "1470900"
  },
  {
    "text": "skip this to to go to the finishing slides you can see the reward map for",
    "start": "1470900",
    "end": "1476679"
  },
  {
    "text": "bumblebee here we are trying to keep up to date with Libby BF there's an active",
    "start": "1476679",
    "end": "1482000"
  },
  {
    "text": "development going on with the Libby PF tools there's for example a new compact layer that can make it",
    "start": "1482000",
    "end": "1488559"
  },
  {
    "text": "that can abstract away the the actual map type that you would use",
    "start": "1488559",
    "end": "1495200"
  },
  {
    "text": "so for example if you are using if you are running your code on an older Linux where or only path buffer the the older",
    "start": "1495200",
    "end": "1502220"
  },
  {
    "text": "map type is supported then it will fall back on that if a newer one for example",
    "start": "1502220",
    "end": "1507320"
  },
  {
    "text": "ring buffer is available it will use that so these are quite nice improvements and we are aiming to keep",
    "start": "1507320",
    "end": "1514220"
  },
  {
    "text": "bumblebee updated to to be able to use these changes we are also working on tighter",
    "start": "1514220",
    "end": "1520280"
  },
  {
    "text": "kubernetes integration for example to get correlation with pod names easier and there's an operator work already in",
    "start": "1520280",
    "end": "1527960"
  },
  {
    "text": "progress basically that can enable you to have bumblebee deployed into",
    "start": "1527960",
    "end": "1533120"
  },
  {
    "text": "kubernetes clusters as a demon set uh and that demonstrate can load the OCR",
    "start": "1533120",
    "end": "1539299"
  },
  {
    "text": "images into itself and Export the data um as it as it goes along currently it's already possible to use Bumblebee with",
    "start": "1539299",
    "end": "1546559"
  },
  {
    "text": "um with kubernetes clusters for that you just have to package it as a demon Set uh the the original CLI tool can be",
    "start": "1546559",
    "end": "1554299"
  },
  {
    "text": "packaged as a demo set and it's and it's working quite well if you are interested in a demo please find and find us at our",
    "start": "1554299",
    "end": "1560720"
  },
  {
    "text": "booth and I can show it to you we are supplying to a new map ties we also plan",
    "start": "1560720",
    "end": "1565820"
  },
  {
    "text": "to have logging integration so you can for example um",
    "start": "1565820",
    "end": "1570919"
  },
  {
    "text": "log all the events that you would want to expose and you can inject these locks in just these logs into your logging",
    "start": "1570919",
    "end": "1578480"
  },
  {
    "text": "platform we are don't currently support histogram metrics types for the events",
    "start": "1578480",
    "end": "1584360"
  },
  {
    "text": "we just only support gauges and counters but histogram is something we are also working on and we are all the time",
    "start": "1584360",
    "end": "1591620"
  },
  {
    "text": "working on adding new libypf examples to the Bumblebee Repository and you are also all welcomed to to",
    "start": "1591620",
    "end": "1598760"
  },
  {
    "text": "contribute to to those examples my key takeaways from learning ebpf with",
    "start": "1598760",
    "end": "1604340"
  },
  {
    "text": "bumblebee are can be seen here basically I know that I know the tbpo is really a game",
    "start": "1604340",
    "end": "1610460"
  },
  {
    "text": "changer uh focusing on only the kernel space is fun it's much better than doing",
    "start": "1610460",
    "end": "1615740"
  },
  {
    "text": "all the plumbing with the user space code integration is key because for example for observability it's really",
    "start": "1615740",
    "end": "1621980"
  },
  {
    "text": "nice to have integration with with promotics right away and we are just getting started and we",
    "start": "1621980",
    "end": "1628700"
  },
  {
    "text": "would like to um we would like to all of you to benefit from the edpf ecosystem so feel",
    "start": "1628700",
    "end": "1634880"
  },
  {
    "text": "free to um take bumblebee for a ride and please reach out if you have further questions",
    "start": "1634880",
    "end": "1642520"
  },
  {
    "text": "you can enjoy nice luck and come to our boost to enter two in a drone thank you",
    "start": "1644059",
    "end": "1649640"
  },
  {
    "text": "very much beautiful thank you very much Christian",
    "start": "1649640",
    "end": "1655580"
  },
  {
    "text": "I before you before you get off uh I I actually have a question that is not",
    "start": "1655580",
    "end": "1661700"
  },
  {
    "text": "evpf do you know when ambient mesh will be made production ready",
    "start": "1661700",
    "end": "1668299"
  },
  {
    "text": "excellent question ambient just got merged Upstream last week I think or",
    "start": "1668299",
    "end": "1674360"
  },
  {
    "text": "maybe this week I don't know I think it was last week and uh I have to double check it but I think the next fto",
    "start": "1674360",
    "end": "1681020"
  },
  {
    "text": "version istio 118 will include this profile so you can already",
    "start": "1681020",
    "end": "1688039"
  },
  {
    "text": "um it's it's basically yeah you can if you go to the uh istio repository you can",
    "start": "1688039",
    "end": "1694700"
  },
  {
    "text": "find the ambient specific part of the readme you can download the artifact there if you if you want to try it out",
    "start": "1694700",
    "end": "1700340"
  },
  {
    "text": "you can also check out the academic throw that I O website where we have a",
    "start": "1700340",
    "end": "1705860"
  },
  {
    "text": "virtual environment running it's a free course you can take mbn for a ride there",
    "start": "1705860",
    "end": "1711080"
  },
  {
    "text": "as well but I think the next if you release will already include ambient as a profile so that's that's also a quite",
    "start": "1711080",
    "end": "1718279"
  },
  {
    "text": "nice way to experiment with it thank you very much do we have any questions for",
    "start": "1718279",
    "end": "1723919"
  },
  {
    "text": "Christian",
    "start": "1723919",
    "end": "1726100"
  },
  {
    "text": "my question is can we monitor uh from in the",
    "start": "1731360",
    "end": "1736700"
  },
  {
    "text": "observability space of ebbf can we only see L3 L4 level metrics or we can also",
    "start": "1736700",
    "end": "1744200"
  },
  {
    "text": "see L7 level metrics and if it is l3l4 only",
    "start": "1744200",
    "end": "1750760"
  },
  {
    "text": "then will it be my primary observability or will it be my default level",
    "start": "1750760",
    "end": "1757580"
  },
  {
    "text": "observability if nothing can capture then evvf captures",
    "start": "1757580",
    "end": "1763059"
  },
  {
    "text": "I don't know if I make sense yeah yeah that absolutely makes sense ebpf can use for relax of things and it can also it",
    "start": "1763100",
    "end": "1770659"
  },
  {
    "text": "can even parse user space logic as well and it can also uh it's also possible to",
    "start": "1770659",
    "end": "1776899"
  },
  {
    "text": "generate layer 7 Matrix basically so it's definitely possible",
    "start": "1776899",
    "end": "1781940"
  },
  {
    "text": "you just have to think about the most efficient way to to do things and you",
    "start": "1781940",
    "end": "1788179"
  },
  {
    "text": "also have to take maintainability into considerations so if there are tools",
    "start": "1788179",
    "end": "1793279"
  },
  {
    "text": "available that are that might not already use ebpf but are solving your",
    "start": "1793279",
    "end": "1798620"
  },
  {
    "text": "problem then it might make sense to to use that for that purpose but for example let's say if you if you take",
    "start": "1798620",
    "end": "1805399"
  },
  {
    "text": "monitoring as an example in The Primitives ecosystem node exporter is is",
    "start": "1805399",
    "end": "1810559"
  },
  {
    "text": "the default standard to monitor host that can solve a lot of problems that you might already have but for example",
    "start": "1810559",
    "end": "1816799"
  },
  {
    "text": "out of number exceptions is a problem that it that it cannot uh so it may it might make sense to use ebpf for that",
    "start": "1816799",
    "end": "1823820"
  },
  {
    "text": "one or let's say you cannot use node export for some reason and you will but",
    "start": "1823820",
    "end": "1829100"
  },
  {
    "text": "you only need a subset of the features that um that know the spot and can provide then it's also possible to to",
    "start": "1829100",
    "end": "1836120"
  },
  {
    "text": "write some ebpf code and with covering those features that you are interested",
    "start": "1836120",
    "end": "1842000"
  },
  {
    "text": "in so you can have a more lightweight and efficient lightweight yeah",
    "start": "1842000",
    "end": "1848000"
  },
  {
    "text": "node exporter based on ebpf if if that's what you wish",
    "start": "1848000",
    "end": "1853419"
  },
  {
    "text": "any more questions",
    "start": "1855740",
    "end": "1858640"
  },
  {
    "text": "thank you for your presentation I have a question um so you presented a lot of cases where",
    "start": "1864140",
    "end": "1870200"
  },
  {
    "text": "you could use evpf but what would you what would be the use case that you would not where you would not recommend",
    "start": "1870200",
    "end": "1876799"
  },
  {
    "text": "using EBT",
    "start": "1876799",
    "end": "1879580"
  },
  {
    "text": "oh excellent question let me think",
    "start": "1883520",
    "end": "1887679"
  },
  {
    "text": "hmm for example there might be some cases",
    "start": "1889760",
    "end": "1895340"
  },
  {
    "text": "where security is taken quite seriously and running ebpf might require Advanced",
    "start": "1895340",
    "end": "1903860"
  },
  {
    "text": "privileges there are improvements happening on this area as well so there's currently a",
    "start": "1903860",
    "end": "1909980"
  },
  {
    "text": "capability that is that is aiming to provide the least",
    "start": "1909980",
    "end": "1916580"
  },
  {
    "text": "necessary privileges that are needed to run the mvpf code so we are getting there but",
    "start": "1916580",
    "end": "1922580"
  },
  {
    "text": "there are still some security Concepts maybe that might",
    "start": "1922580",
    "end": "1927860"
  },
  {
    "text": "raise some security eyebrows if you want to to run ebpf in those cases",
    "start": "1927860",
    "end": "1933100"
  },
  {
    "text": "another example would be might be I'm not sure um but the first the the previous",
    "start": "1933100",
    "end": "1939140"
  },
  {
    "text": "question about layer 7 metrics that that's basically solved with layer 7",
    "start": "1939140",
    "end": "1945380"
  },
  {
    "text": "components for example invoy proxies if you're running a service mesh you get observability out of box to",
    "start": "1945380",
    "end": "1952340"
  },
  {
    "text": "cover all these metrics this can be solved with dbps to some extent but for example",
    "start": "1952340",
    "end": "1959480"
  },
  {
    "text": "um invoice and the steel sidecars are are great and well adopted fit for this use",
    "start": "1959480",
    "end": "1966980"
  },
  {
    "text": "case as well I I would work mainly with dbpf I would focus on really hard observability",
    "start": "1966980",
    "end": "1973880"
  },
  {
    "text": "challenges because I think this is the area where ebpf can shine and if you",
    "start": "1973880",
    "end": "1979940"
  },
  {
    "text": "have fine integration with with the authority ecosystem then again it's it's",
    "start": "1979940",
    "end": "1985399"
  },
  {
    "text": "a great fit to to solve these challenges running little dbbf programs and",
    "start": "1985399",
    "end": "1990500"
  },
  {
    "text": "exporting those as permutix Matrix is quite lightweight and quite efficient the code for these Logics is basically",
    "start": "1990500",
    "end": "1998059"
  },
  {
    "text": "just I don't know 10 20 lines of C code so it's also not too hard to maintain so",
    "start": "1998059",
    "end": "2003760"
  },
  {
    "text": "I would say that's the best use case for evpf in my opinion thank you",
    "start": "2003760",
    "end": "2010600"
  },
  {
    "text": "anymore we have one more question",
    "start": "2010600",
    "end": "2015778"
  },
  {
    "text": "well I'll take it then I have one question uh Christian no one more",
    "start": "2018580",
    "end": "2024820"
  },
  {
    "text": "so I have I have had the chance of trying to play around with ebpf and try on maybe 20 or 21 of the most common 25",
    "start": "2024820",
    "end": "2031720"
  },
  {
    "text": "sys calls uh and I saw the Bumblebee makes things a little bit easier preparing the framework for the type of",
    "start": "2031720",
    "end": "2038620"
  },
  {
    "text": "program that I have to run uh but still I think it's a very steep",
    "start": "2038620",
    "end": "2043840"
  },
  {
    "text": "learning curve and a very hard adoption for consumers of tech it does solo plan to make it even easier",
    "start": "2043840",
    "end": "2051700"
  },
  {
    "text": "than with Bumblebee yeah so for example this is our product",
    "start": "2051700",
    "end": "2057520"
  },
  {
    "text": "is using kbpf to some extent under the hood for example to accelerate the service mesh we are also generating",
    "start": "2057520",
    "end": "2063339"
  },
  {
    "text": "metrics based on eBay ebpf and we are using some part of the open source",
    "start": "2063339",
    "end": "2069220"
  },
  {
    "text": "bumblebee code in our product to to do that but we open source bumblebee for",
    "start": "2069220",
    "end": "2074260"
  },
  {
    "text": "this exact reason to make it all easier and we are not yes as you mentioned it's",
    "start": "2074260",
    "end": "2080919"
  },
  {
    "text": "it's it's still not the the best user experience and developer experience that it's it's quite steep still but for",
    "start": "2080919",
    "end": "2087158"
  },
  {
    "text": "example on the roadmap you can see that we want to have for example better",
    "start": "2087159",
    "end": "2093179"
  },
  {
    "text": "entire kubernetes integration and that's that's for example one area where we",
    "start": "2093179",
    "end": "2099220"
  },
  {
    "text": "still have some work to do operator is a great step in that direction but being able to correlate to actual",
    "start": "2099220",
    "end": "2105880"
  },
  {
    "text": "Port names can always make make it easier because without this uh you still",
    "start": "2105880",
    "end": "2111820"
  },
  {
    "text": "to do some user space Plumbing on your own to to get the actual data so the answer is yes we are still working on",
    "start": "2111820",
    "end": "2119320"
  },
  {
    "text": "improving uh Bumblebee and it's open source so if you have any idea or feature request feel free to to fire",
    "start": "2119320",
    "end": "2125859"
  },
  {
    "text": "GitHub issue or even contribute to the project it's it's quite a small project still and it's I think it's it's one of",
    "start": "2125859",
    "end": "2132820"
  },
  {
    "text": "the easiest way to get started with dbps so we are happy to onboard you to the open source project if you if you are",
    "start": "2132820",
    "end": "2139060"
  },
  {
    "text": "interested in that thank you very much Christian I am sure that everyone was very interested and no",
    "start": "2139060",
    "end": "2146079"
  },
  {
    "text": "one there to say that they were ebpf experts um",
    "start": "2146079",
    "end": "2151660"
  },
  {
    "text": "thanks Christian please give it up for Kristen",
    "start": "2151660",
    "end": "2156119"
  },
  {
    "text": "we are going to have a little bit uh 20 minutes 21 minutes break we are going to",
    "start": "2159040",
    "end": "2164440"
  },
  {
    "text": "start again",
    "start": "2164440",
    "end": "2166680"
  }
]