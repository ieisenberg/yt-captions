[
  {
    "text": "hopefully everybody had a good lunch um his name is John Howard he's a software",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "engineer extraordinaire I think you guys have already talked with him my name is Amir aboss I'm a product manager at",
    "start": "5040",
    "end": "10360"
  },
  {
    "text": "Google today we're going to talk about reliability uh I did a talk last year in Amsterdam this is a variant of that",
    "start": "10360",
    "end": "16198"
  },
  {
    "text": "we'll put a little bit more ISO Spin and talk about some architecture patterns that we're seeing and some best practices um but I I know it's after",
    "start": "16199",
    "end": "23439"
  },
  {
    "text": "lunch everybody's had food and dessert but I wanted to start with a you know a thought-provoking question can you build",
    "start": "23439",
    "end": "30039"
  },
  {
    "text": "49 services on 39",
    "start": "30039",
    "end": "34360"
  },
  {
    "text": "infrastructure and what's interesting about this question yeah you can take it as rhetorical or not is the answer is",
    "start": "35600",
    "end": "41239"
  },
  {
    "text": "not important and I think like many thought-provoking questions the answer is it depends but what's interesting is",
    "start": "41239",
    "end": "47160"
  },
  {
    "text": "that usually when I ask this question the room is split into half some people think yes you can some people think yes you can't even a room full of srees",
    "start": "47160",
    "end": "54559"
  },
  {
    "text": "there's a split between them and I think it really just kind of depends upon what school of thoughts you're coming from so",
    "start": "54559",
    "end": "60199"
  },
  {
    "text": "if we look at traditional ways of building software you have data centers you have redundant power supplies you",
    "start": "60199",
    "end": "66439"
  },
  {
    "text": "have comp you know you have compute and then you have you know hypervisors",
    "start": "66439",
    "end": "71520"
  },
  {
    "text": "containerization and then you have your application sitting on top right the why the it looks like an right side up",
    "start": "71520",
    "end": "77240"
  },
  {
    "text": "pyramid from a reliability perspective each layer inherits reliability from the layer underneath couple of things are",
    "start": "77240",
    "end": "83000"
  },
  {
    "text": "happening it's first of all it's very easy mental model to understand right if the computer is more reliable the thing",
    "start": "83000",
    "end": "88520"
  },
  {
    "text": "that is running on top of that computer is is going to be a little bit less reliable because it inherits the reliability from the computer the only",
    "start": "88520",
    "end": "94320"
  },
  {
    "text": "the other thing is that the entire onus of reliability relies or is is put on the IT team right it's put on that and",
    "start": "94320",
    "end": "101960"
  },
  {
    "text": "the application teams just don't have to worry about it uh in the cloud it's reversed in the cloud they look like upside down pyramid and you probably are",
    "start": "101960",
    "end": "108280"
  },
  {
    "text": "wondering why did we even do that and the answer is scale first which is written on this the second one is cost right it's very hard to run scalable",
    "start": "108280",
    "end": "114920"
  },
  {
    "text": "applications on very reliable infrastructure but it does two things first it flips the mental model we have",
    "start": "114920",
    "end": "120799"
  },
  {
    "text": "to start thinking about architecting applications a little bit differently but it also puts the onus of reliability also on the development team on the",
    "start": "120799",
    "end": "127920"
  },
  {
    "text": "application team so this is how all sort of globally scalable consumer apps run on these sort of distributed",
    "start": "127920",
    "end": "134920"
  },
  {
    "text": "models the the key is to pick one or the other if we don't assign veilance to this if one is not better than the other",
    "start": "134920",
    "end": "140879"
  },
  {
    "text": "I'm not here to argue that obviously I think we are here in cucon we probably tend more towards the right side of this",
    "start": "140879",
    "end": "146920"
  },
  {
    "text": "this diagram but regardless of where you sit just know which school of thought you're coming from the biggest mistake",
    "start": "146920",
    "end": "153440"
  },
  {
    "text": "people make when they're doing a lift and shift let's say to the cloud if they're doing it for the purpose of reliability you know without",
    "start": "153440",
    "end": "159080"
  },
  {
    "text": "architecting your application you may not get that a lot of the times you know at Google Cloud for example our VMS have",
    "start": "159080",
    "end": "165560"
  },
  {
    "text": "a 2 and a half n uh SLA so a lot of the times a customer asked me it's like can I give you more money to give me a much",
    "start": "165560",
    "end": "172080"
  },
  {
    "text": "more reliable VMS and we said no you have to start thinking in this particular realm so we're going to talk",
    "start": "172080",
    "end": "177879"
  },
  {
    "text": "about reliability and you can't really talk talk about reliability without talking about failure domains and before we even talk about failure domains I I",
    "start": "177879",
    "end": "184120"
  },
  {
    "text": "really just sort of back up and talk about what are the needs of a service and I think every service sort of",
    "start": "184120",
    "end": "189640"
  },
  {
    "text": "uncontroversially needs these four things so every service needs to be uh you know resilient both to known and",
    "start": "189640",
    "end": "195680"
  },
  {
    "text": "unknown failures so if something goes down it should be it should remain alive every service needs to be scalable you",
    "start": "195680",
    "end": "201080"
  },
  {
    "text": "want to run it on many many computers and clusters and zones and regions uh every service needs to be manageable you",
    "start": "201080",
    "end": "207280"
  },
  {
    "text": "want to be able to get Telemetry and plays and those types of things and every service needs to have some way of",
    "start": "207280",
    "end": "213400"
  },
  {
    "text": "developing a policy framework that you can enforce right and when you start thinking about the frame the footprint",
    "start": "213400",
    "end": "220159"
  },
  {
    "text": "of this service so let's say you're just running this in a single cluster you can always get two or three of these things",
    "start": "220159",
    "end": "225560"
  },
  {
    "text": "but it's very hard to get all four right so in this case let's say I'm just running this service a front end as just a single deployment maybe even a single",
    "start": "225560",
    "end": "232280"
  },
  {
    "text": "pod it's running in a single zone in a single cluster yes it's very very manageable",
    "start": "232280",
    "end": "237519"
  },
  {
    "text": "because as a single pot I can manage that it's also probably very easy to secure right it's it's easy to manage I can think think in those terms but it's",
    "start": "237519",
    "end": "243840"
  },
  {
    "text": "not scalable and it's not resilient so singlet tons are not good so how do we adapt these new patterns of distributed",
    "start": "243840",
    "end": "251239"
  },
  {
    "text": "systems without losing the manageability and without losing policy and that's sort of the the problem we're trying to",
    "start": "251239",
    "end": "257519"
  },
  {
    "text": "solve in Cloud at least we think of failure domains we simplify it in just these two Realms so failure domains are",
    "start": "257519",
    "end": "263440"
  },
  {
    "text": "either regions or zones zones are akin to data centers or campuses of data",
    "start": "263440",
    "end": "268639"
  },
  {
    "text": "centers that are collocated and regions are simply collections of zones that are geographically near one",
    "start": "268639",
    "end": "273800"
  },
  {
    "text": "another yes there are other things like you know kubernetes clusters or VMS and databases and so on and so forth but",
    "start": "273800",
    "end": "279759"
  },
  {
    "text": "everything resides in one of these two locations and if you think in those terms and if you think you know these are the things that I want to go",
    "start": "279759",
    "end": "286120"
  },
  {
    "text": "resilient against then it's a lot easier within those regions and zones you have products or you have Services I should",
    "start": "286120",
    "end": "291600"
  },
  {
    "text": "say that are running depending upon you know where you're running in which cloud or Data Center and they have their own",
    "start": "291600",
    "end": "296880"
  },
  {
    "text": "sort of domain right so VM for example is zonal right so it relies on the zone that it lives in if it goes down it",
    "start": "296880",
    "end": "303479"
  },
  {
    "text": "doesn't affect anything else but a zonal outage can take down a zonal resource a kubernetes cluster could maybe span",
    "start": "303479",
    "end": "310120"
  },
  {
    "text": "zones it could be a zonal cluster it could might span zones and what that means is that within a region a kubernetes cluster can withstand uh a",
    "start": "310120",
    "end": "316960"
  },
  {
    "text": "zonal outage one or more zonal outages and then you even have you know Global Services that run in multiple regions",
    "start": "316960",
    "end": "322400"
  },
  {
    "text": "like load balancers or databases and so on and so forth when it comes to kubernetes clusters the largest",
    "start": "322400",
    "end": "328560"
  },
  {
    "text": "footprint of a single kubernetes cluster today at least it Still Remains a region so as customers start getting into",
    "start": "328560",
    "end": "335360"
  },
  {
    "text": "multicluster architecture patterns uh this is where sort of things start to start to get a little bit more",
    "start": "335360",
    "end": "340840"
  },
  {
    "text": "challenging and kubernetes folks are doing a really good job in making multicluster a little bit easier uh but",
    "start": "340840",
    "end": "347440"
  },
  {
    "text": "I think with isio we've got some we've got some really good patterns that we're doing yeah so I mean you know to",
    "start": "347440",
    "end": "353160"
  },
  {
    "text": "architect things reliably we often need multicluster and there's a lot of good features of EO that can be leverage to",
    "start": "353160",
    "end": "360400"
  },
  {
    "text": "help out here um and we're going to go into some more concrete examples of how you can use these for different architectures in a bit but some of the",
    "start": "360400",
    "end": "367400"
  },
  {
    "text": "main features EO offers here to help is uh you know we've got service Discovery",
    "start": "367400",
    "end": "373000"
  },
  {
    "text": "so EO can connect multiple clusters we saw a bit about that in some previous talks um and even multiple different",
    "start": "373000",
    "end": "379160"
  },
  {
    "text": "networks and allow communication between all of them uh just like as if it was a single",
    "start": "379160",
    "end": "385160"
  },
  {
    "text": "cluster uh on top of that it can also do traffic management that includes all the standard EO things like Canary rules or",
    "start": "385160",
    "end": "392919"
  },
  {
    "text": "header manipulation routing you know you name it but there's also all sorts of aspects that are specifically related to",
    "start": "392919",
    "end": "399560"
  },
  {
    "text": "multicluster such as location aware uh rules so we can keep traffic within a zone or within a region uh automatic",
    "start": "399560",
    "end": "406440"
  },
  {
    "text": "failover between zones uh things of that nature uh We've also got security and",
    "start": "406440",
    "end": "411759"
  },
  {
    "text": "policies this is not super traditionally related to reliability but if your",
    "start": "411759",
    "end": "416919"
  },
  {
    "text": "application is compromised by an attacker for example that could hurt reliability um and the policies and",
    "start": "416919",
    "end": "422759"
  },
  {
    "text": "security um that EA provides also uh carries over across multiple clusters",
    "start": "422759",
    "end": "428160"
  },
  {
    "text": "which differs a lot from something like Network policy which is generally only applying to a single",
    "start": "428160",
    "end": "433240"
  },
  {
    "text": "cluster and finally we have observability again observability is not the thing that's giving reliability but",
    "start": "433240",
    "end": "439639"
  },
  {
    "text": "it's very important to be able to observe your system so you can actually understand if it is reliable and if you're seeing errors and what those",
    "start": "439639",
    "end": "445599"
  },
  {
    "text": "errors are and why um and EO can provide kind of a single pain of last to observe",
    "start": "445599",
    "end": "450759"
  },
  {
    "text": "all your applications even if they're across multiple clusters yeah on observability I get",
    "start": "450759",
    "end": "456720"
  },
  {
    "text": "asked question a lot that I have Services running on multiple clusters even multiple regions I just want to see you know just a global view Global",
    "start": "456720",
    "end": "463720"
  },
  {
    "text": "metrics view of how everything is running before I can dive into individual clusters uh I want to",
    "start": "463720",
    "end": "469240"
  },
  {
    "text": "introduce this concept of archetypes we talked about it in last cucon as well uh but just just to kind of give you sort",
    "start": "469240",
    "end": "475479"
  },
  {
    "text": "of a model of how to think about running distributed applications we start with archetypes archetype is nothing it's",
    "start": "475479",
    "end": "482120"
  },
  {
    "text": "just a fancy word for an an abstract model so it is infrastructure agnostic and it is also product agnostic so here",
    "start": "482120",
    "end": "488720"
  },
  {
    "text": "you start thinking about things like you know what ises my replication strategy what does my Dr flow look like what are",
    "start": "488720",
    "end": "494080"
  },
  {
    "text": "my recovery points and times per application you start looking at an application and you just decide what are the things that it needs what model",
    "start": "494080",
    "end": "500879"
  },
  {
    "text": "would it fit under you haven't even chose chosen a runtime or a database or any of or a cicd strategy any of that",
    "start": "500879",
    "end": "507280"
  },
  {
    "text": "you're just starting to just think about big picture high level from a reliability perspective what each Services needs from there you get into",
    "start": "507280",
    "end": "514640"
  },
  {
    "text": "architectures and architecture just basically takes that archetype model and then start implementing products and",
    "start": "514640",
    "end": "520640"
  },
  {
    "text": "services in there so this is where you say for runtime I'm going to use kubernetes for service mesh I'm going to",
    "start": "520640",
    "end": "525680"
  },
  {
    "text": "use sto and for cicd I'm going to use blah blah blah right for databases that match that archetype archetypes are",
    "start": "525680",
    "end": "532720"
  },
  {
    "text": "Universal so you can switch between runtimes and or between Services you",
    "start": "532720",
    "end": "537880"
  },
  {
    "text": "know going from ISO to a different one or going from kubernetes to Cloud you know to some sort of a server list technology your archetypes remain the",
    "start": "537880",
    "end": "544200"
  },
  {
    "text": "same on top of your architectures is your applications and applications are constantly evolving obviously the",
    "start": "544200",
    "end": "549440"
  },
  {
    "text": "application you're adding features to that but it also is evolving in in the matter of footprint and what that means",
    "start": "549440",
    "end": "554600"
  },
  {
    "text": "is where the application is deployed right you again you might start with a Singleton you're running the application in a single cluster and then you may",
    "start": "554600",
    "end": "560519"
  },
  {
    "text": "decide that it needs to be multi- Regional and then it needs to you know grow globally and so on and so forth and you have to start thinking about it and",
    "start": "560519",
    "end": "566480"
  },
  {
    "text": "then when you start managing that application we manage that using slos and this is a quantitative way of",
    "start": "566480",
    "end": "572200"
  },
  {
    "text": "measuring the health of every service it's contracted between your consumers or anybody that is using your",
    "start": "572200",
    "end": "578519"
  },
  {
    "text": "applications so uh We've published this paper this is the only link I think in the entire presentation that if you want",
    "start": "578519",
    "end": "584480"
  },
  {
    "text": "to write down it's a bitly slapp archetypes there's there's tons of archetypes it goes into much more detail",
    "start": "584480",
    "end": "590360"
  },
  {
    "text": "on how it is but from a reliability perspective it really is a variant of you know zonal multizonal Regional",
    "start": "590360",
    "end": "596079"
  },
  {
    "text": "multi-regional Global hybrid multicloud we're going to not talk about hybrid and multicloud just for the sake of time and",
    "start": "596079",
    "end": "602240"
  },
  {
    "text": "we've picked five of these archetypes that we believe majority of the applications will fall into one or",
    "start": "602240",
    "end": "608959"
  },
  {
    "text": "another and we're just going to talk a little bit about those all right the first one up uh kind",
    "start": "608959",
    "end": "615360"
  },
  {
    "text": "of skipping over the most basic archetype of a Singleton uh is this active passive zones and what this looks",
    "start": "615360",
    "end": "621800"
  },
  {
    "text": "like is um you know we take the full application stack and replicate it into a separate Zone but we don't send any",
    "start": "621800",
    "end": "629360"
  },
  {
    "text": "traffic there and if there's an issue then we do kind of a manual failover action and start sending traffic to our",
    "start": "629360",
    "end": "636240"
  },
  {
    "text": "replicas um so this is kind of a manual operation generally when an issue is",
    "start": "636240",
    "end": "641720"
  },
  {
    "text": "detected traffic is manually operated by uh you know human uh SRE over to the",
    "start": "641720",
    "end": "647480"
  },
  {
    "text": "other uh Zone and eventually when the issue is resolved they can bring it back um so when evaluating this archetype and",
    "start": "647480",
    "end": "654200"
  },
  {
    "text": "others like there's a few areas we want to look at is kind of what are the operations that a human has to do in",
    "start": "654200",
    "end": "660000"
  },
  {
    "text": "order when we Face errors is what kinds of failures are we resilient to like is",
    "start": "660000",
    "end": "665200"
  },
  {
    "text": "the Zone uh going down is the region going down what kind of availability we",
    "start": "665200",
    "end": "670320"
  },
  {
    "text": "can get what is the cost what's the complexity right um so in this case the complexity is fairly low right there's",
    "start": "670320",
    "end": "677440"
  },
  {
    "text": "in the typical flow we just have kind of a single zone there's nothing fancy going on the main complexity risk here",
    "start": "677440",
    "end": "684160"
  },
  {
    "text": "is that the passive Zone becomes uh stale because it's not you know actively",
    "start": "684160",
    "end": "689399"
  },
  {
    "text": "tested at all times um the cost is also fairly High because we need to fully",
    "start": "689399",
    "end": "694600"
  },
  {
    "text": "replicate the entire application that can be improved a bit by you know having fewer replicas of some of the services",
    "start": "694600",
    "end": "701480"
  },
  {
    "text": "um in terms of what failures were resilient to we can survive the one active Zone going down but if the entire",
    "start": "701480",
    "end": "708360"
  },
  {
    "text": "region goes down then we'll have issues because the passive uh set is in the same region uh one thing that's kind of",
    "start": "708360",
    "end": "715279"
  },
  {
    "text": "unique about this approach though is for licensed software because the passive uh",
    "start": "715279",
    "end": "720720"
  },
  {
    "text": "applications aren't serving any traffic uh generally it's possible to actually reduce costs in some sense uh because",
    "start": "720720",
    "end": "727360"
  },
  {
    "text": "the passive Zone doesn't need to have the license activated until uh the failover",
    "start": "727360",
    "end": "733639"
  },
  {
    "text": "occurs um so we have a bit of math here if you want to go into way detail about",
    "start": "734320",
    "end": "740320"
  },
  {
    "text": "all the the math uh you can check out the talk from Amsterdam I believe or last year um yeah but the the general",
    "start": "740320",
    "end": "746560"
  },
  {
    "text": "Trend here is that by having two different zones that are kind of in parallel we kind of aggregate the availability of them and we're able to",
    "start": "746560",
    "end": "753240"
  },
  {
    "text": "get more reliability than any single zone so here on here and in future ones",
    "start": "753240",
    "end": "758720"
  },
  {
    "text": "we're showing uh SLA numbers from GK and Cloud SQL just to give concrete numbers",
    "start": "758720",
    "end": "764360"
  },
  {
    "text": "uh but you could find similar from any other cloud provider I assume uh in terms of implementing this",
    "start": "764360",
    "end": "769880"
  },
  {
    "text": "one in EO it's actually generally you're probably not going to use EO for this uh and the load balancer would be something",
    "start": "769880",
    "end": "776199"
  },
  {
    "text": "external EO but if you were using EO to do as a load balancer um you know Easter",
    "start": "776199",
    "end": "781320"
  },
  {
    "text": "has a variety of ways to Route traffic like this so one example would be to use the locality load balancing to specify",
    "start": "781320",
    "end": "787680"
  },
  {
    "text": "which zone the traffic should go to when there's an incident that would go be changed by the SRE to flip from 100% in",
    "start": "787680",
    "end": "795279"
  },
  {
    "text": "zone one to 100% in the other Zone yeah I was talking to I was having",
    "start": "795279",
    "end": "801360"
  },
  {
    "text": "drinks with an SRE and I said you know what do you call an action that you do when something fails and then he came up",
    "start": "801360",
    "end": "806800"
  },
  {
    "text": "with this term fail Ops so we just put words in front of Ops and just call them something it's just basically just means do you need to do anything or not uh",
    "start": "806800",
    "end": "813720"
  },
  {
    "text": "this is the second archetype the first one was active passive this one is active active or in this case it's active active active depending upon how",
    "start": "813720",
    "end": "820320"
  },
  {
    "text": "many copies you want a little bit of refactoring is needed this is where you start to separate state from State lessness you know maybe not license",
    "start": "820320",
    "end": "827560"
  },
  {
    "text": "applications maybe not CS application typical consumer web front ends web applications work uh cost actually goes",
    "start": "827560",
    "end": "833680"
  },
  {
    "text": "down a little bit here if you want to do the math if it's a three Zone environment and you want to design for a",
    "start": "833680",
    "end": "840000"
  },
  {
    "text": "single zone failure so imagine that you're serving 50 5050 in all three of these so when one zone goes down you",
    "start": "840000",
    "end": "846160"
  },
  {
    "text": "still have 100% of the traffic that can be served uh Global load balancer automatically fails over in gke it would",
    "start": "846160",
    "end": "853240"
  },
  {
    "text": "look very similar to the last one only in this case you you are splitting the traffic from the initial load balancer",
    "start": "853240",
    "end": "858279"
  },
  {
    "text": "across all three clusters the numbers remain the same and in the iso implementation it would look just like a",
    "start": "858279",
    "end": "864639"
  },
  {
    "text": "very simple destination rule with locality turned on you don't put any manual fail in there and sto",
    "start": "864639",
    "end": "870560"
  },
  {
    "text": "automatically determines the closest Zone and then moves to the next closest and then the next and so",
    "start": "870560",
    "end": "876480"
  },
  {
    "text": "on in this one we did want to mention with ISO there's a couple of ways to do this so in the archetype picture there's",
    "start": "876639",
    "end": "882519"
  },
  {
    "text": "a concept of an internal load balancer between every single layer because we're in multiple zones so you need to send it",
    "start": "882519",
    "end": "887720"
  },
  {
    "text": "to some sort of a some sort of a load balancer that can send traffic between one zone and another with this Doo you",
    "start": "887720",
    "end": "892880"
  },
  {
    "text": "have both models you with the sidecar model you don't need that internal load balance the side car does sort of act as",
    "start": "892880",
    "end": "898560"
  },
  {
    "text": "that internal load balancer so the front end in zone a can talk to all three back ends a b and c and it'll just fail over",
    "start": "898560",
    "end": "905440"
  },
  {
    "text": "automatically or if you're using you know something like an ambient mode then it would look very similar to with an internal load balancer which would be",
    "start": "905440",
    "end": "911920"
  },
  {
    "text": "your Waypoint proxy yeah extending uh kind of the",
    "start": "911920",
    "end": "918800"
  },
  {
    "text": "first and second archetype we slap these together and we have this active passive region uh very very similar to the other",
    "start": "918800",
    "end": "925120"
  },
  {
    "text": "two except that instead of failing over to a different Zone we're failing over to an entire different region that would",
    "start": "925120",
    "end": "930800"
  },
  {
    "text": "be doing the zonal deployment there um so very similar um on both of these",
    "start": "930800",
    "end": "936720"
  },
  {
    "text": "typically how this would be done uh in terms of the top layer would be something like DNS doing kind of uh",
    "start": "936720",
    "end": "942839"
  },
  {
    "text": "geare or not geare DNS that's coming later uh you know do the failover policy",
    "start": "942839",
    "end": "948519"
  },
  {
    "text": "at the DNS layer or there could be multiple tiers of load balancers um so the benefit of this one",
    "start": "948519",
    "end": "954319"
  },
  {
    "text": "is that it can survive an entire region going down because we fail over to the other region",
    "start": "954319",
    "end": "960839"
  },
  {
    "text": "um so again the math here is is quite nice um very high availability because",
    "start": "960839",
    "end": "966000"
  },
  {
    "text": "we're uh you know with two regions it's quite unlikely that both regions go down at the same time I",
    "start": "966000",
    "end": "973560"
  },
  {
    "text": "hope by the way just to be clear these numbers here are the maximum that really can be achieved here I was going to say",
    "start": "973560",
    "end": "979480"
  },
  {
    "text": "uh there's many ways that you can have lower reliability um so in terms of the E",
    "start": "979480",
    "end": "986560"
  },
  {
    "text": "implementation here there's there's generally not actually much eal involvement here generally each of these regions would be entirely separate",
    "start": "986560",
    "end": "992720"
  },
  {
    "text": "meshes they would not know about each other so in the EO multicluster terminology you probably would not link",
    "start": "992720",
    "end": "998560"
  },
  {
    "text": "these clusters together at all all of the routing into which cluster or which region or which mesh should be used is",
    "start": "998560",
    "end": "1005160"
  },
  {
    "text": "at a higher level outside of EO and then within uh once the mesh is chosen then",
    "start": "1005160",
    "end": "1010480"
  },
  {
    "text": "it can go into the standard Easter routing which is kind of more like the previous archetype where we would use the locality load balancing to keep",
    "start": "1010480",
    "end": "1016800"
  },
  {
    "text": "things within the zone as much as possible but fail over when necessary yeah I believe there was a",
    "start": "1016800",
    "end": "1023040"
  },
  {
    "text": "talk this morning that actually talked a variant of this archetype this was just interesting whereas previous one there's",
    "start": "1023040",
    "end": "1029438"
  },
  {
    "text": "no sort of Ingress and egress control you can just manually fail over and maybe the manual fail over is because the data is not fully replicated and you",
    "start": "1029439",
    "end": "1035678"
  },
  {
    "text": "need to be able to manually decide when to to move things over this one is isolated regions where you just cannot",
    "start": "1035679",
    "end": "1041839"
  },
  {
    "text": "move serving traffic over between regions so it's very very similar to the last one in this case you can create two",
    "start": "1041839",
    "end": "1047400"
  },
  {
    "text": "separate trust domains for myo in each of these uh this is for regulated Industries when I talk to AIA customers",
    "start": "1047400",
    "end": "1052960"
  },
  {
    "text": "this comes up quite a bit I want traffic to be localized in a specific region uh in this case you have a choice whether",
    "start": "1052960",
    "end": "1058480"
  },
  {
    "text": "you want to just archive data in a different environment but the serving is always served from one and then you have",
    "start": "1058480",
    "end": "1064200"
  },
  {
    "text": "the manual control over DNS so imagine that you're sending your you know Amia traffic to Amia regions and APAC traffic",
    "start": "1064200",
    "end": "1071400"
  },
  {
    "text": "to APAC regions so if something goes down it's only going to affect half of the of the traffic and yes you can use",
    "start": "1071400",
    "end": "1077679"
  },
  {
    "text": "each other for as back backups if you'd like but it just totally depends upon you know totally depends upon the",
    "start": "1077679",
    "end": "1083039"
  },
  {
    "text": "regulation uh and in the kubernetes SLO world it would look exactly the same as",
    "start": "1083039",
    "end": "1088280"
  },
  {
    "text": "the last one except the sto trust domains will be separate another thing I want to just point out that yes the numbers have gone up but you can also",
    "start": "1088280",
    "end": "1094200"
  },
  {
    "text": "see the complexity goes up right so there's Cloud DN or some sort of a DNS and then there's Regional load balancers",
    "start": "1094200",
    "end": "1099679"
  },
  {
    "text": "and then there's six clusters to manage those types of things so you're you know your Ops cost kind of goes up but you do",
    "start": "1099679",
    "end": "1105320"
  },
  {
    "text": "get a much higher reliability um and would look extremely similar to the last one you would have",
    "start": "1105320",
    "end": "1111799"
  },
  {
    "text": "two isical meshes in two different environments that don't know about each other and if you do need to do any cross",
    "start": "1111799",
    "end": "1117200"
  },
  {
    "text": "cluster sort of a thing you would just use Ingress patterns otherwise it's identical uh to the to the",
    "start": "1117200",
    "end": "1123600"
  },
  {
    "text": "same all right the last one up is the global pattern I think this is the uh most fun and interesting one this is",
    "start": "1123600",
    "end": "1130200"
  },
  {
    "text": "like uh what you know something like YouTube or Google search or any other you know large scale consumer",
    "start": "1130200",
    "end": "1136520"
  },
  {
    "text": "application that's highly available highly replicated with run as um there's a lot lot going on here so kind of at",
    "start": "1136520",
    "end": "1143320"
  },
  {
    "text": "the top of the stack we have a global an cast load balcer that can accept traffic",
    "start": "1143320",
    "end": "1148640"
  },
  {
    "text": "from anywhere in the world and kind of send it to a load balcer instance that's close to",
    "start": "1148640",
    "end": "1155200"
  },
  {
    "text": "the user so they can reduce latency um next up at kind of the bottom",
    "start": "1155200",
    "end": "1160960"
  },
  {
    "text": "we would have uh a global datab base something like a spanner or cockroach DB or something similar that can be",
    "start": "1160960",
    "end": "1166960"
  },
  {
    "text": "accessed again from anywhere in the globe uh but generally we'll do some uh awareness of the region so that it",
    "start": "1166960",
    "end": "1173120"
  },
  {
    "text": "doesn't increase latency cost too much then we have multiple regions with multiple different clusters and at each",
    "start": "1173120",
    "end": "1180840"
  },
  {
    "text": "uh each service is replicated across all these different regions and zones and clusters uh and at each hop from say",
    "start": "1180840",
    "end": "1186960"
  },
  {
    "text": "front end to back end to you know multiple tiers of applications the traffic can flow between any of these",
    "start": "1186960",
    "end": "1194159"
  },
  {
    "text": "and so this is something that esto will help facilitate and you know we generally this will be done in a zone or",
    "start": "1194159",
    "end": "1200440"
  },
  {
    "text": "location aware way such that we're not sending traffic you know from us to Europe to Asia back and forth and have",
    "start": "1200440",
    "end": "1207240"
  },
  {
    "text": "crazy latency costs right but we're able to if there's failures or some you know",
    "start": "1207240",
    "end": "1212600"
  },
  {
    "text": "uh services are going down in one zone we can easily fail over um so the cost here is is uh higher but it depends on",
    "start": "1212600",
    "end": "1221440"
  },
  {
    "text": "exactly how much higher based on how much you're replicating the data right so in this case we have the front end is",
    "start": "1221440",
    "end": "1227559"
  },
  {
    "text": "replicated across different zones three regions six zones six clusters um so",
    "start": "1227559",
    "end": "1233000"
  },
  {
    "text": "that replication cost is fairly high but we also get a uh corresponding High",
    "start": "1233000",
    "end": "1238480"
  },
  {
    "text": "availability out of this the complexity here is also again fairly high but again it comes with um a lot of nice",
    "start": "1238480",
    "end": "1245640"
  },
  {
    "text": "properties um in particular unlike some of the other modes there's no fail Ops",
    "start": "1245640",
    "end": "1250799"
  },
  {
    "text": "required right when a particular backend goes down ISO can detect that and",
    "start": "1250799",
    "end": "1256120"
  },
  {
    "text": "automatically fail over um so we don't need to page S3 in the middle of night and say hey go you know trigger the rule",
    "start": "1256120",
    "end": "1262080"
  },
  {
    "text": "to start sending traffic to the new Zone like that's all Automatic by",
    "start": "1262080",
    "end": "1267320"
  },
  {
    "text": "EO um so again this looks something like this we'd have six clusters here in parallel uh we can choose at each hop",
    "start": "1267679",
    "end": "1274919"
  },
  {
    "text": "along the way which cluster which workload to go to based on the health uh and latency of each",
    "start": "1274919",
    "end": "1282799"
  },
  {
    "text": "hop okay so as you can see the complexity goes up you get more reliability but also the cost goes up so",
    "start": "1283000",
    "end": "1288360"
  },
  {
    "text": "then people ask like well how do I use these archetypes to my service so the way we think about it is a service belongs to one archetype a service let's",
    "start": "1288360",
    "end": "1295279"
  },
  {
    "text": "just say for the sake of this conversation is a kubernetes service an application can have a collection of services and you can put services in",
    "start": "1295279",
    "end": "1301080"
  },
  {
    "text": "different archetypes and then you're probably saying well why would you want to do that and the reason is obviously to to save costs but you also want to do",
    "start": "1301080",
    "end": "1306679"
  },
  {
    "text": "that to architect for what we call Graceful degradation so let's say in this example service D is just some low",
    "start": "1306679",
    "end": "1313000"
  },
  {
    "text": "priority service maybe it's an email service that just sends an email out and if it's down it's not going to affect anybody you're just going to get delayed",
    "start": "1313000",
    "end": "1318720"
  },
  {
    "text": "emails the rest of the application can continue to work you can save some cost uh so when you build an architecture it",
    "start": "1318720",
    "end": "1324559"
  },
  {
    "text": "would look something like this with multiple uh Services here you have service a running AS Global maybe that's",
    "start": "1324559",
    "end": "1330120"
  },
  {
    "text": "your front end service B running as Regional maybe that's some catalog that's regionally significant and then service D that is U you know maybe not",
    "start": "1330120",
    "end": "1337159"
  },
  {
    "text": "as important yeah so some of the benefits of this as mentioned like because we",
    "start": "1337159",
    "end": "1343080"
  },
  {
    "text": "don't necessarily need every single service to have the highest amount of availability which increases cost cost",
    "start": "1343080",
    "end": "1348760"
  },
  {
    "text": "and increases complexity sometimes it's the right choice to run in some of the kind of lower tiers of uh the archetypes",
    "start": "1348760",
    "end": "1356720"
  },
  {
    "text": "that are less available but they're simpler to operate and they have less cost and what that does is free up a lot",
    "start": "1356720",
    "end": "1362360"
  },
  {
    "text": "of capacity for other services to run so if we had some fancy new Al or AI or ml",
    "start": "1362360",
    "end": "1368880"
  },
  {
    "text": "workload that we wanted to try out we've got room in these green clusters because we didn't make service B and service C",
    "start": "1368880",
    "end": "1376120"
  },
  {
    "text": "more available than we actually required I just want to say for the record we waited 23 minutes to say AI all right so",
    "start": "1376120",
    "end": "1382840"
  },
  {
    "text": "let's sum it up thank you let's sum this up uh so basically what we're saying is",
    "start": "1382840",
    "end": "1389559"
  },
  {
    "text": "most people start with architectures they're immediately like oh we need to put stuff on kubernetes and we need esto",
    "start": "1389559",
    "end": "1394679"
  },
  {
    "text": "and we need Argo and those types of things we we recommend you starting with archetypes and you can by the way use archetypes at different dimensions maybe",
    "start": "1394679",
    "end": "1401039"
  },
  {
    "text": "there are security archetypes and Regulatory this we we talked about it from the lens of reliability so look at",
    "start": "1401039",
    "end": "1407159"
  },
  {
    "text": "it from that particular perspective read the paper I'll show show the link here again uh then you can go into the uh",
    "start": "1407159",
    "end": "1412279"
  },
  {
    "text": "architectures we think ISO and multicluster kubernetes you know match made in heaven works really really well",
    "start": "1412279",
    "end": "1417440"
  },
  {
    "text": "it's been working well for a number of years kubernetes is doing a great job but you can use ISO to accomplish majority of these uh as we talked about",
    "start": "1417440",
    "end": "1424120"
  },
  {
    "text": "it individually you know sto on a single cluster is great but sto on multic cluster is is a is a very very good",
    "start": "1424120",
    "end": "1430360"
  },
  {
    "text": "experience here are the links you can learn more about multicluster on .io or bitly app- archetypes if you're",
    "start": "1430360",
    "end": "1437640"
  },
  {
    "text": "listening to this on YouTube later uh I will say that out otherwise uh thank you so much for coming to our talk thanks",
    "start": "1437640",
    "end": "1445720"
  },
  {
    "text": "everyone one minute do we have time for questions",
    "start": "1445919",
    "end": "1451799"
  },
  {
    "text": "maybe we have five minutes for questions hi",
    "start": "1451799",
    "end": "1458039"
  },
  {
    "text": "Lynn I guess we can all right we will be here for five minutes if people have",
    "start": "1460960",
    "end": "1466880"
  },
  {
    "text": "questions I think we've got over here oh we your",
    "start": "1466880",
    "end": "1471440"
  },
  {
    "text": "questions archetype",
    "start": "1475840",
    "end": "1479398"
  },
  {
    "text": "five no but I could hear when you shouted I'll repeat the question oh I think you're good",
    "start": "1485760",
    "end": "1492720"
  },
  {
    "text": "now",
    "start": "1497320",
    "end": "1500320"
  },
  {
    "text": "as of Lego right bunch of laws make us to make weird decisions uh when you",
    "start": "1505520",
    "end": "1512720"
  },
  {
    "text": "disable their service in that region or in one of the this uh you get an",
    "start": "1512720",
    "end": "1518720"
  },
  {
    "text": "imbalance in the other tr in the other regions as well so do you have like an",
    "start": "1518720",
    "end": "1525120"
  },
  {
    "text": "approach to solve this imbalancing because yeah it's complicated to to to solve it",
    "start": "1525120",
    "end": "1532240"
  },
  {
    "text": "now because this still doesn't support Advanced load balancing weights or any other thing um yeah it it in many ways",
    "start": "1532240",
    "end": "1539880"
  },
  {
    "text": "depends on the application um ideally so there's always kind of this",
    "start": "1539880",
    "end": "1545520"
  },
  {
    "text": "trade-off if I have a few a small number of local instances or a large number of remote instances which one should I send",
    "start": "1545520",
    "end": "1552360"
  },
  {
    "text": "it to right I know that from the location standpoint it's better to send to the local ones but I may overwhelm",
    "start": "1552360",
    "end": "1559600"
  },
  {
    "text": "them and it may be counterproductive right so there's a few ways to handle this EO has recently changed it default",
    "start": "1559600",
    "end": "1566279"
  },
  {
    "text": "to be kind of the least request load balancing which to some extent helps solve this by being kind of latency",
    "start": "1566279",
    "end": "1572039"
  },
  {
    "text": "aware the faster service will finish request faster then we'll have less requests so it will have traffic",
    "start": "1572039",
    "end": "1578120"
  },
  {
    "text": "preference there um some other tools are kind of outlier detection for example so",
    "start": "1578120",
    "end": "1583360"
  },
  {
    "text": "you could say if the latency of this service has exceeded this amount or if it's starting to return errors",
    "start": "1583360",
    "end": "1588960"
  },
  {
    "text": "uh that's no longer healthy even if it's passing the traditional kubernetes probes and so that will kind of evict it",
    "start": "1588960",
    "end": "1594559"
  },
  {
    "text": "from the pool and encourage uh sending traffic to the remote endpoints um those are kind of the two primary tools um for",
    "start": "1594559",
    "end": "1603880"
  },
  {
    "text": "that",
    "start": "1604520",
    "end": "1607520"
  },
  {
    "text": "yep",
    "start": "1617240",
    "end": "1620240"
  },
  {
    "text": "so I mostly had a question about uh say you have multiple control planes in the same region so you're not as much",
    "start": "1622919",
    "end": "1629120"
  },
  {
    "text": "worried about Regional failures or even zonal failures um but you're more worried about uh someone doing something",
    "start": "1629120",
    "end": "1635960"
  },
  {
    "text": "to a control plane and you just want to make sure your control plane fill over well not necessarily fill over but you",
    "start": "1635960",
    "end": "1642120"
  },
  {
    "text": "have redundant control planes or redundant clusters even within the same Zone uh I suppose that's also where you",
    "start": "1642120",
    "end": "1648960"
  },
  {
    "text": "would make your meshes or your networks connect together in a multimaster setup",
    "start": "1648960",
    "end": "1654000"
  },
  {
    "text": "so even if you're not going to multi- region or even multis Zone you would still be able to employ the say the last",
    "start": "1654000",
    "end": "1659440"
  },
  {
    "text": "diagram in the series for that um yeah so I um that's a good a very good point",
    "start": "1659440",
    "end": "1666200"
  },
  {
    "text": "so we didn't really talk about running the EO control plan here but there's a lot of similar uh decisions to be made",
    "start": "1666200",
    "end": "1671880"
  },
  {
    "text": "of how many of them you run how do you replicate them per Zone per region per cluster e allows you that flexib",
    "start": "1671880",
    "end": "1679480"
  },
  {
    "text": "um and probably could be a bit more opinionated on suggestions on which one you should run in which cases but in",
    "start": "1679480",
    "end": "1686279"
  },
  {
    "text": "many ways like running your own application it's about the trade-off of complexity to availability requirements",
    "start": "1686279",
    "end": "1692559"
  },
  {
    "text": "uh on Which choice is kind of best for you I did want to add one thing to this so the reason we talked about two",
    "start": "1692559",
    "end": "1697600"
  },
  {
    "text": "failure domains regions and zones is most people aren't even doing that I know they're kind of the reason is because you can go Fairly granular and",
    "start": "1697600",
    "end": "1704039"
  },
  {
    "text": "you can start doing resiliency and redundancy for every single component infrastructure component control planes",
    "start": "1704039",
    "end": "1709840"
  },
  {
    "text": "API servers and stuff like that there's a there's a concept in SRE called generic mitigations and what that means is that if there is a problem with the",
    "start": "1709840",
    "end": "1716240"
  },
  {
    "text": "control plane you just route the traffic somewhere else at a bigger at a higher",
    "start": "1716240",
    "end": "1721320"
  },
  {
    "text": "failure domain and zones and regions just fall really well within that so if you just archite architect for zonal",
    "start": "1721320",
    "end": "1728120"
  },
  {
    "text": "failures and Regional failures everything just gets subsumed within that um those are those are great points",
    "start": "1728120",
    "end": "1733720"
  },
  {
    "text": "but let's say there is a failure within a sub component within that Zone you",
    "start": "1733720",
    "end": "1738880"
  },
  {
    "text": "just simply assume that it's a zonal failure and then you just move over and then you can fix that and figure out what it what's going on but I don't",
    "start": "1738880",
    "end": "1744519"
  },
  {
    "text": "think it's worth your Ops effort to just make every single component duplicated",
    "start": "1744519",
    "end": "1750919"
  },
  {
    "text": "that's question what about State full",
    "start": "1751559",
    "end": "1758000"
  },
  {
    "text": "applications do you have this applies to State full applications as well or only two stateless application yes we didn't",
    "start": "1758000",
    "end": "1765279"
  },
  {
    "text": "we didn't hit on the state full part as much because we wanted to first of all we had 20 minutes and we wanted to stick stay closer to the iso uh if you read",
    "start": "1765279",
    "end": "1771720"
  },
  {
    "text": "the paper papers it will talk about exactly which database Technologies do what certain archetypes are actually",
    "start": "1771720",
    "end": "1777159"
  },
  {
    "text": "architected based on the database technology for example the active passive ones because we know the replication time might be too too long",
    "start": "1777159",
    "end": "1784320"
  },
  {
    "text": "where you can't just automatically move an application over and you also have to do you know uh the replica switch over",
    "start": "1784320",
    "end": "1790600"
  },
  {
    "text": "to make sure that that becomes now the the the main so yes the paper talks a lot more about databases and stateful",
    "start": "1790600",
    "end": "1798399"
  },
  {
    "text": "stuff as well we just didn't hit on it yeah the paper is pretty good too it's very approachable the the paper is",
    "start": "1798399",
    "end": "1805640"
  },
  {
    "text": "yeah it's it's it's actually part of the",
    "start": "1805640",
    "end": "1810880"
  },
  {
    "text": "Google Cloud docs so that link just takes you to like a architecture Center and yes I mean feel free to go to it",
    "start": "1810880",
    "end": "1816679"
  },
  {
    "text": "right now and you should and it's very approachable in a sense that it's divided into I want to build zonal apps what are some of the archetypes I want",
    "start": "1816679",
    "end": "1822600"
  },
  {
    "text": "to build Regional apps what are some of the archetypes and what type of applications what's my database strategy and it doesn't tell any product so you",
    "start": "1822600",
    "end": "1828880"
  },
  {
    "text": "can use them with any any products you like yes I can go back what did I do",
    "start": "1828880",
    "end": "1835600"
  },
  {
    "text": "with the one slide back",
    "start": "1835600",
    "end": "1840960"
  },
  {
    "text": "yeah we'll I think we'll be in the back I think we're out of time but thank you so much we'll be in the back for more",
    "start": "1846240",
    "end": "1851360"
  },
  {
    "text": "questions ex run",
    "start": "1851360",
    "end": "1856120"
  }
]