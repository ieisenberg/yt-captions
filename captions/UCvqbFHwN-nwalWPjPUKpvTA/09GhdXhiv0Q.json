[
  {
    "text": "okay today we'll take a deep dive into the complexity surrounding identity propagation and API Security in",
    "start": "240",
    "end": "6560"
  },
  {
    "text": "microservices environment we'll explore our current workarounds and their issues",
    "start": "6560",
    "end": "11840"
  },
  {
    "text": "then we'll see how a novel relatively unknown and under implemented extension of o2 might help us to solve our",
    "start": "11840",
    "end": "18359"
  },
  {
    "text": "problems at the end we'll also demo this solution so my name is Alit and I'm Yara",
    "start": "18359",
    "end": "26800"
  },
  {
    "text": "and we're both from T an open source API Gateway and management platform I've been here for coming on seven years",
    "start": "26800",
    "end": "32360"
  },
  {
    "text": "now uh starting as a Consulting engineer for our prospects and customers and then um moved into product leadership and now",
    "start": "32360",
    "end": "39399"
  },
  {
    "text": "my focus is on R&D where my team and I are looking a little further ahead strategically uh to help shape the",
    "start": "39399",
    "end": "45960"
  },
  {
    "text": "future of our product offering I was a SAS developer most of my career but I needed a change and decided to cross the",
    "start": "45960",
    "end": "52719"
  },
  {
    "text": "lines and work with users directly I joined T three weeks before",
    "start": "52719",
    "end": "58920"
  },
  {
    "text": "IIT and also also as a Consulting engineer later on I moved into product",
    "start": "58920",
    "end": "64439"
  },
  {
    "text": "leadership as well as a head of developer experience we're focusing on creating sdks CIS and other Dev tools to",
    "start": "64439",
    "end": "71240"
  },
  {
    "text": "enhance our users experience okay let's get",
    "start": "71240",
    "end": "77000"
  },
  {
    "text": "started when I visit an online service an online store and wish to place an order as far as I'm concerned I'm just",
    "start": "77119",
    "end": "84360"
  },
  {
    "text": "placing an order via some web app I'm completely oblivious to the different chains of event and communication",
    "start": "84360",
    "end": "90759"
  },
  {
    "text": "between services or different providers that are involved in order to fulfill my",
    "start": "90759",
    "end": "96520"
  },
  {
    "text": "transaction if we zoom in a little bit this slide shows what the world",
    "start": "96520",
    "end": "101799"
  },
  {
    "text": "looks like from perspective of a service which is responsible for processing an order a service such as an order",
    "start": "101799",
    "end": "110119"
  },
  {
    "text": "microservice can use and consume many other services some internal ones like",
    "start": "110119",
    "end": "115399"
  },
  {
    "text": "inventory pricing and user account and other third apis such as for Checker",
    "start": "115399",
    "end": "122000"
  },
  {
    "text": "shipping CRM and",
    "start": "122000",
    "end": "125399"
  },
  {
    "text": "payments some Services um sorry but there are other services",
    "start": "133519",
    "end": "139440"
  },
  {
    "text": "that might benefit sorry I'm a bit nervous some services such as shipping",
    "start": "139440",
    "end": "145000"
  },
  {
    "text": "services are happy to just accept an a simple API key in order to integrate with the that service they don't need to",
    "start": "145000",
    "end": "151800"
  },
  {
    "text": "know anything about the user apart from perhaps the deliver postcode but other services might benefit from knowing who",
    "start": "151800",
    "end": "158080"
  },
  {
    "text": "the user is perhaps would include a this would include a CRM or a for Checker some services such as shipping",
    "start": "158080",
    "end": "165440"
  },
  {
    "text": "need need the user's address book to add to book a delivery or make a payment",
    "start": "165440",
    "end": "170519"
  },
  {
    "text": "While others third parties like a fraud Checker that are on less trusted domain would need to be downgraded to read only",
    "start": "170519",
    "end": "177280"
  },
  {
    "text": "access rights we can see that that the microservice environment is complicated and convoluted with diverse security and",
    "start": "177280",
    "end": "184000"
  },
  {
    "text": "users needs let's dig in a little deeper into this so identity",
    "start": "184000",
    "end": "192120"
  },
  {
    "text": "propagation refers to the process of maintaining consistent user identity across various systems services or",
    "start": "192120",
    "end": "199000"
  },
  {
    "text": "components within a software application or a network environment in distributed systems or microservice architectures",
    "start": "199000",
    "end": "205720"
  },
  {
    "text": "where different if I can hear myself echoing I'm going a swap over",
    "start": "205720",
    "end": "211080"
  },
  {
    "text": "where sorry consistent user identities um across various systems services or",
    "start": "211080",
    "end": "216159"
  },
  {
    "text": "components within a software application or a networked environment in distributed systems or microservice",
    "start": "216159",
    "end": "221640"
  },
  {
    "text": "architectures where different Services might be responsible for different uh for handling different various parts of",
    "start": "221640",
    "end": "227200"
  },
  {
    "text": "a user's interaction it's crucial to ensure that the user's identity is accurately propagated throughout the",
    "start": "227200",
    "end": "233000"
  },
  {
    "text": "system and this allows each service to uh properly authenticate and authorize",
    "start": "233000",
    "end": "238319"
  },
  {
    "text": "the user without repeating ly prompting for credentials identity propagation",
    "start": "238319",
    "end": "243360"
  },
  {
    "text": "typically involves mechanisms such as or tokens where users are authenticated by",
    "start": "243360",
    "end": "248959"
  },
  {
    "text": "some Central Authority which issues tokens like a Json web token or an ool token representing their identity and",
    "start": "248959",
    "end": "256400"
  },
  {
    "text": "then these tokens are typically passed between different services to prove that user's identity we also have single sign on",
    "start": "256400",
    "end": "263360"
  },
  {
    "text": "systems which enable users to log in once and access multiple related systems",
    "start": "263360",
    "end": "269120"
  },
  {
    "text": "without having to reauthenticate the user's identity is propagated seamlessly across the various Services integrated",
    "start": "269120",
    "end": "276080"
  },
  {
    "text": "with that single sign on solution then finally sessions are established upon uh",
    "start": "276080",
    "end": "281600"
  },
  {
    "text": "user authentication and a session identifier is used to maintain that user's identity as they interact with",
    "start": "281600",
    "end": "287520"
  },
  {
    "text": "the different parts of the system so session management ensures that the user's identity remains consistent",
    "start": "287520",
    "end": "294160"
  },
  {
    "text": "within that same session now middleware components like API gateways and service MH data planes",
    "start": "294160",
    "end": "300800"
  },
  {
    "text": "they intercept requests and add identity related information before forwarding them to Upstream services and this um",
    "start": "300800",
    "end": "308400"
  },
  {
    "text": "ensures that each service has access to the user's identity without explicitly passing it in every request so along",
    "start": "308400",
    "end": "315680"
  },
  {
    "text": "with identity um there's contextual information related to the user session or request like roles permissions",
    "start": "315680",
    "end": "322600"
  },
  {
    "text": "permissions preferences Etc and they may also need to be propagated across the",
    "start": "322600",
    "end": "328319"
  },
  {
    "text": "system to ensure cons consistent behavior and proper authorization decisions identity propagation is",
    "start": "328319",
    "end": "335080"
  },
  {
    "text": "essential for maintaining security providing a seamless user experience and enabling effective authorization and",
    "start": "335080",
    "end": "341759"
  },
  {
    "text": "access control mechanisms in distributed systems so how do we go about propagating identity across our",
    "start": "341759",
    "end": "350160"
  },
  {
    "text": "systems oh we've gone back yeah next oh back",
    "start": "350639",
    "end": "358440"
  },
  {
    "text": "okay okay now in this slide we'll discuss entitled workarounds and hex",
    "start": "358639",
    "end": "364199"
  },
  {
    "text": "many of these approaches could actually be okay depending on the situation and use case but there are a few approaches",
    "start": "364199",
    "end": "369599"
  },
  {
    "text": "which we have seen out in the wild first one is user ID token as access token Amit what's wrong with",
    "start": "369599",
    "end": "377440"
  },
  {
    "text": "that so we've all seen many tutorials and implementations um on the internet",
    "start": "377440",
    "end": "383160"
  },
  {
    "text": "which have recommended this approach this approach is probably one of the simplest to implement because once the",
    "start": "383160",
    "end": "388800"
  },
  {
    "text": "user has auth authenticated and a client has obtained an ID token then they're able to use that token in order to",
    "start": "388800",
    "end": "394759"
  },
  {
    "text": "access the protected resource but there are several reasons why it's not best practice to use an ID token in this way",
    "start": "394759",
    "end": "401080"
  },
  {
    "text": "like the first one is the purpose ID tokens and access tokens serve different purposes in the open ID connect and o",
    "start": "401080",
    "end": "408560"
  },
  {
    "text": "two protocols ID tokens are intended to provide information about the authenticated user well access tokens",
    "start": "408560",
    "end": "416440"
  },
  {
    "text": "are are used to protect uh are used to access protected resources on behalf of",
    "start": "416440",
    "end": "422319"
  },
  {
    "text": "the user so mixing their purposes can lead to confusion and potential security",
    "start": "422319",
    "end": "428520"
  },
  {
    "text": "vulnerabilities access tokens also they typically have a shorter lifespan um",
    "start": "428520",
    "end": "433840"
  },
  {
    "text": "than ID tokens and they may have different security requirements for example access tokens they might need to",
    "start": "433840",
    "end": "439680"
  },
  {
    "text": "be refreshed um they might need to be re revok in the case of the user logging",
    "start": "439680",
    "end": "444919"
  },
  {
    "text": "out or maybe a security incident or um or have specific soaps Scopes and",
    "start": "444919",
    "end": "450199"
  },
  {
    "text": "permissions associated with them access tokens are used to authorize",
    "start": "450199",
    "end": "455520"
  },
  {
    "text": "access to specific resources or apis based on the Scopes granted during the",
    "start": "455520",
    "end": "461120"
  },
  {
    "text": "authentication process and ID tokens don't provide the same level of authorization information that are",
    "start": "461120",
    "end": "467720"
  },
  {
    "text": "primarily focused on authentication using ID tokens as access tokens could result in improper",
    "start": "467720",
    "end": "474240"
  },
  {
    "text": "authorization decisions okay so now I'm convinced we will use our ACC tokens in",
    "start": "474240",
    "end": "480240"
  },
  {
    "text": "order to in order to for client to access protected resources but why can't",
    "start": "480240",
    "end": "485599"
  },
  {
    "text": "we just embed all the all the all the required identity claims into an access",
    "start": "485599",
    "end": "490879"
  },
  {
    "text": "token and share that and share that same access token between all the",
    "start": "490879",
    "end": "496360"
  },
  {
    "text": "microservices so the JWT specification specifies um azp and AUD claims which",
    "start": "496360",
    "end": "503199"
  },
  {
    "text": "enable us to control and understand who the authorized party is and who the",
    "start": "503199",
    "end": "508400"
  },
  {
    "text": "intended recipients are sharing access tokens is like sharing your password",
    "start": "508400",
    "end": "513800"
  },
  {
    "text": "with everybody you talk to and then trusting that the recipients will be good citizens from the recipient's",
    "start": "513800",
    "end": "520159"
  },
  {
    "text": "perspective the access token is private to that intended recipient or audience and as a recipient you should be",
    "start": "520159",
    "end": "526519"
  },
  {
    "text": "checking that the token was in fact intended for you",
    "start": "526519",
    "end": "531920"
  },
  {
    "text": "um because if it's not then that token shouldn't be authorized to access the protected resources that you're serving",
    "start": "531920",
    "end": "538880"
  },
  {
    "text": "so by sharing sharing access tokens even between trusted Services you could be granting overly permissive rights in our",
    "start": "538880",
    "end": "545399"
  },
  {
    "text": "e-commerce store should a random service like I don't know let's take a a product inventory service be able to access or",
    "start": "545399",
    "end": "552680"
  },
  {
    "text": "even perhaps modify user resource should it be pay capable of initiating",
    "start": "552680",
    "end": "558959"
  },
  {
    "text": "payments okay so we won't share the same access token with other microservices like a hot potato fine so if every",
    "start": "559519",
    "end": "567519"
  },
  {
    "text": "microservice has the ability to authorize itself then what's wrong with propagating identity and other",
    "start": "567519",
    "end": "572880"
  },
  {
    "text": "contextual information as request headers well this is better and it's not",
    "start": "572880",
    "end": "579320"
  },
  {
    "text": "necessarily bad per se but then how do you go about verifying that a client didn't self self- declare their",
    "start": "579320",
    "end": "585680"
  },
  {
    "text": "administrative permissions how do you verify that headers haven't been manipulated or um there's there's a lot",
    "start": "585680",
    "end": "592120"
  },
  {
    "text": "of manual checks and balances like you know header request signing and these are complex and they're nonstandard",
    "start": "592120",
    "end": "598320"
  },
  {
    "text": "approaches which might just about work but they're difficult to scale a small change could open up um a completely new",
    "start": "598320",
    "end": "605040"
  },
  {
    "text": "attack Vector these approaches might have work",
    "start": "605040",
    "end": "610519"
  },
  {
    "text": "might have worked when we cared about the perimeter security when we took monolithic approach but when we with the",
    "start": "610519",
    "end": "616560"
  },
  {
    "text": "introduction of microservices and consum consumptions of S Services the perimeter can no longer be well defined we may we",
    "start": "616560",
    "end": "623959"
  },
  {
    "text": "have to we have to aim to achieve zero trust architecture in a consistent and scalable",
    "start": "623959",
    "end": "631320"
  },
  {
    "text": "away so we think that the token exchange can solve this for us and this",
    "start": "631920",
    "end": "637399"
  },
  {
    "text": "specification extends the oof2 protocol to enable clients to exchange one access",
    "start": "637399",
    "end": "642680"
  },
  {
    "text": "token with another via an authorization server and why would we want to do that and what does token exchange enable for",
    "start": "642680",
    "end": "650680"
  },
  {
    "text": "us so we have a few use cases first one enableing user impersonation a client",
    "start": "650680",
    "end": "657880"
  },
  {
    "text": "can impersonate as a user this is useful when an administrator needs to rerun a task if as if they were",
    "start": "657880",
    "end": "664480"
  },
  {
    "text": "a user next one is internal to internal token exchange a client can exchange an",
    "start": "664480",
    "end": "670639"
  },
  {
    "text": "existing token created for a specific client for a new token targeted for a different client this could be useful in",
    "start": "670639",
    "end": "677920"
  },
  {
    "text": "case you want less permissive access rights when the service is calling another service internal token internal to",
    "start": "677920",
    "end": "685440"
  },
  {
    "text": "external token exchange a client can exchange an existing token for an external token",
    "start": "685440",
    "end": "692040"
  },
  {
    "text": "such as a linked Google account and the last one external token to internal",
    "start": "692040",
    "end": "697399"
  },
  {
    "text": "token exchange a client can exchange an external minted externally minted token for internally minted token this is very",
    "start": "697399",
    "end": "704760"
  },
  {
    "text": "useful when your resource server does not understand your issuer the issuer of your access token or when you need to",
    "start": "704760",
    "end": "710920"
  },
  {
    "text": "convert a Sul to JWT and even enrich the access token with new user",
    "start": "710920",
    "end": "718160"
  },
  {
    "text": "claims okay so now let's go through the sequence diagram to see to see how the",
    "start": "718240",
    "end": "724360"
  },
  {
    "text": "token exchange Works do you want to point please yeah",
    "start": "724360",
    "end": "730079"
  },
  {
    "text": "okay so um before the exchange an O client has already received an initial",
    "start": "730079",
    "end": "735560"
  },
  {
    "text": "token that represent the user authorization this may have been via client credential flow or an",
    "start": "735560",
    "end": "741120"
  },
  {
    "text": "authorization code or another mechanism this is written in in um in green the",
    "start": "741120",
    "end": "747720"
  },
  {
    "text": "client then the Cent request token exchange from the authorization server this request includes that",
    "start": "747720",
    "end": "755079"
  },
  {
    "text": "initial token and May and may specify desired Scopes and intended audience or",
    "start": "755079",
    "end": "760399"
  },
  {
    "text": "other properties for the new token then the author the authorization server validates the token exchange the token",
    "start": "760399",
    "end": "767199"
  },
  {
    "text": "exchange request this involves authenticating the user if required and then authorizing the the token exchange",
    "start": "767199",
    "end": "774000"
  },
  {
    "text": "based on the initial token and the requested parameters if the request is valid and authorized the authorization",
    "start": "774000",
    "end": "780079"
  },
  {
    "text": "server will issue a new token for the client this new token will have different might have different Scopes",
    "start": "780079",
    "end": "786519"
  },
  {
    "text": "different audience and other properties based on the exchange parameters if the request is invalid or",
    "start": "786519",
    "end": "792440"
  },
  {
    "text": "unauthorized and the authorization server will respond with an error and at",
    "start": "792440",
    "end": "797480"
  },
  {
    "text": "the end the client now can use the new access the new exchange token to access the protected",
    "start": "797480",
    "end": "803600"
  },
  {
    "text": "resource from the resource server so now if the demog goods are",
    "start": "803600",
    "end": "809160"
  },
  {
    "text": "willing ahed will show us how to manually perform the token",
    "start": "809160",
    "end": "815800"
  },
  {
    "text": "exchange okay so um I'm going to show can you guys see my mouse that's might",
    "start": "818199",
    "end": "824079"
  },
  {
    "text": "be easier yeah so I'm going to show you an example a token exchange request the",
    "start": "824079",
    "end": "829240"
  },
  {
    "text": "request um gets sent to the Token mpoint um of the authorization server and in",
    "start": "829240",
    "end": "835360"
  },
  {
    "text": "this case we use because we're at and",
    "start": "835360",
    "end": "840560"
  },
  {
    "text": "um the the request contains the client ID um and the client secret of the",
    "start": "840560",
    "end": "847680"
  },
  {
    "text": "client performing The Exchange and you'll see that we have a new Grant type um called I'm just going to call it",
    "start": "847680",
    "end": "854040"
  },
  {
    "text": "token exchange for short but it's Grant type URF prams or Grant type token",
    "start": "854040",
    "end": "860560"
  },
  {
    "text": "exchange and finally we've included the subject token which is the access token",
    "start": "860560",
    "end": "865959"
  },
  {
    "text": "that we initially received in order to um to access this service now let's um let's go ahead and",
    "start": "865959",
    "end": "873320"
  },
  {
    "text": "see this working in action we're going to do it manually hopefully um the demo gods are on my side can you tell me if",
    "start": "873320",
    "end": "880199"
  },
  {
    "text": "this is large enough for you um larer make it larger right let's hope I",
    "start": "880199",
    "end": "887279"
  },
  {
    "text": "can is that better okay and is this okay or is that",
    "start": "887279",
    "end": "892639"
  },
  {
    "text": "too big or is that's that's fine that's fine perfect okay so um before we do the",
    "start": "892639",
    "end": "898279"
  },
  {
    "text": "token Exchange we have to um authenticate the you know the very first um request needs to be authenticated and",
    "start": "898279",
    "end": "905279"
  },
  {
    "text": "authorized so we have to I've already set up keycloak here with my own uh",
    "start": "905279",
    "end": "910560"
  },
  {
    "text": "users let's log back in then where I've got super insecure credentials but I'm on Local Host so um",
    "start": "910560",
    "end": "918560"
  },
  {
    "text": "I've already got a user setup here and so um I've configured a client inside keycloak and it's just um called web app",
    "start": "918560",
    "end": "926440"
  },
  {
    "text": "and this is the I suppose the um I suppose the browser application and we're going to be using or or or Postman",
    "start": "926440",
    "end": "933040"
  },
  {
    "text": "in this in this use case and this is a um an authorization code we're going to",
    "start": "933040",
    "end": "938839"
  },
  {
    "text": "be doing the authorization code flow and the client which is going to be performing The Token exchange is what we",
    "start": "938839",
    "end": "944240"
  },
  {
    "text": "call tight Gateway and i' the way that I've set it up like this is because of the the following demos after um so so",
    "start": "944240",
    "end": "953040"
  },
  {
    "text": "yeah so that's basically it if we head over um we're going to just log in via the web app so this is just the",
    "start": "953040",
    "end": "958959"
  },
  {
    "text": "authorization code flow and I'm going to make that a little bit bigger so we can",
    "start": "958959",
    "end": "964000"
  },
  {
    "text": "see what's going on here and under or we can see that I'm configuring um I",
    "start": "964000",
    "end": "969519"
  },
  {
    "text": "can if I scroll up you can see it's just a regular um authorization code flow",
    "start": "969519",
    "end": "976560"
  },
  {
    "text": "with u Postman as the um callback URL and then um we have the regular",
    "start": "976560",
    "end": "983800"
  },
  {
    "text": "authorization uh URL and the token URL there and it's the client ID so it's the web app that's um um that's",
    "start": "983800",
    "end": "990440"
  },
  {
    "text": "authenticating so this is just a regular authorization code flow I go ahead and get a new access token and then I'm askk",
    "start": "990440",
    "end": "996920"
  },
  {
    "text": "to sign in so let's go ahead and do",
    "start": "996920",
    "end": "1000800"
  },
  {
    "text": "that and go ahead and log in woohoo it worked and proceed and I",
    "start": "1003440",
    "end": "1009519"
  },
  {
    "text": "now have an access token so let's go ahead and have a look at what this access token looks like",
    "start": "1009519",
    "end": "1017279"
  },
  {
    "text": "inside and copy that and we can paste that into JW",
    "start": "1017839",
    "end": "1024480"
  },
  {
    "text": "T.I and we can see in this access token does that need zooming in as",
    "start": "1025360",
    "end": "1031079"
  },
  {
    "text": "well is that okay one more one more cool um and what we can see is that",
    "start": "1031079",
    "end": "1038760"
  },
  {
    "text": "when we generated this access token this is because of the way that we've configured uh keycloak already um that",
    "start": "1038760",
    "end": "1045480"
  },
  {
    "text": "the authorized party is the web app we've got my identity um in here in this",
    "start": "1045480",
    "end": "1051919"
  },
  {
    "text": "access token and the intended audience for this token is tight Gateway so that",
    "start": "1051919",
    "end": "1057720"
  },
  {
    "text": "means that tight Gateway is allowed to accept this um this client is allowed to accept this access token um and now what",
    "start": "1057720",
    "end": "1066400"
  },
  {
    "text": "we want to do is perform a token exchange and we're going to do that manually so let's go ahead and copy this",
    "start": "1066400",
    "end": "1074880"
  },
  {
    "text": "token and we're going to do an exchange of this access token",
    "start": "1074919",
    "end": "1080360"
  },
  {
    "text": "with the body bear with me for a moment I'm going to I might have to just zoom",
    "start": "1080360",
    "end": "1085880"
  },
  {
    "text": "out a little bit because I don't have much real estate here and I'm going to replace that sub",
    "start": "1085880",
    "end": "1093280"
  },
  {
    "text": "uh the token in here with the new access token that we received and we're using in here the credentials of the um uh uh",
    "start": "1093280",
    "end": "1101679"
  },
  {
    "text": "different credentials of the client and we can go ahead and send that request and you'll see that now the Cent",
    "start": "1101679",
    "end": "1109000"
  },
  {
    "text": "has performed the token exchange and obtained a completely new access token so if we copy this um access",
    "start": "1109000",
    "end": "1118159"
  },
  {
    "text": "token well let's hope it copied or not I'll copy it",
    "start": "1118559",
    "end": "1124720"
  },
  {
    "text": "again no I'm suffering",
    "start": "1125760",
    "end": "1131000"
  },
  {
    "text": "here copy that and we paste that in there and you",
    "start": "1133039",
    "end": "1138559"
  },
  {
    "text": "can see that now the authorized party is the Tike Gateway so this is a completely",
    "start": "1138559",
    "end": "1143720"
  },
  {
    "text": "different um client that um that's authorized so but we've managed to",
    "start": "1143720",
    "end": "1148960"
  },
  {
    "text": "propagate the identity of the um of my user when I authenticated um so that's",
    "start": "1148960",
    "end": "1155720"
  },
  {
    "text": "the the most basic use case of the token exchange do you want to jump ahead now",
    "start": "1155720",
    "end": "1163159"
  },
  {
    "text": "and we can now build on this a little bit more",
    "start": "1163159",
    "end": "1170720"
  },
  {
    "text": "Okay Okay so we've seen how the mechanism work works for this talk Amit and I also created a native middleware",
    "start": "1173480",
    "end": "1180679"
  },
  {
    "text": "for Tha Gateway which which can perform for us this token exchange automatically",
    "start": "1180679",
    "end": "1185919"
  },
  {
    "text": "rather than passing around the web app's access token the Gateway as the API gate",
    "start": "1185919",
    "end": "1191640"
  },
  {
    "text": "the Gateway as the API Gateway performs token exchange using its own credentials and because of because of the way in",
    "start": "1191640",
    "end": "1198799"
  },
  {
    "text": "which it has been set up in Kick loog we're able to automatically secure and propagate the user identity into the",
    "start": "1198799",
    "end": "1205159"
  },
  {
    "text": "gateways access token using this impersonation semantics it is also it is almost as if the user",
    "start": "1205159",
    "end": "1212159"
  },
  {
    "text": "who originally gave permission to the web app has actually given permissions to the",
    "start": "1212159",
    "end": "1217640"
  },
  {
    "text": "Gateway so this Json document represent the a configuration of Ty a",
    "start": "1220000",
    "end": "1225720"
  },
  {
    "text": "configuration for Ty API Gateway which tells Ty to validate an inbound access",
    "start": "1225720",
    "end": "1230799"
  },
  {
    "text": "token and then exchange that for for a new token you can see",
    "start": "1230799",
    "end": "1235880"
  },
  {
    "text": "here um as as part of the API definition the token exchange option",
    "start": "1235880",
    "end": "1241440"
  },
  {
    "text": "object and we can see minimal setting required for performing token exchange against kickl the authorization server",
    "start": "1241440",
    "end": "1249120"
  },
  {
    "text": "the target URL in this example is HTTP bin service this service is an echos",
    "start": "1249120",
    "end": "1255080"
  },
  {
    "text": "server which helps us with this demo as it allows us to see the content of their request when it received from the",
    "start": "1255080",
    "end": "1262880"
  },
  {
    "text": "Gateway okay and okay perfect so we're going to go",
    "start": "1265919",
    "end": "1272480"
  },
  {
    "text": "ahead and show us um how this how this is working now so let's open up my next collection which is um login and",
    "start": "1272480",
    "end": "1281559"
  },
  {
    "text": "request and I'm going to close that collection to give us a bit more space and make that a little bit",
    "start": "1281559",
    "end": "1290960"
  },
  {
    "text": "smaller authorization this is really difficult now okay so let's go ahead and do that",
    "start": "1292559",
    "end": "1300679"
  },
  {
    "text": "get new access token to authenticate oh hold on a minute I've done it wrong",
    "start": "1300679",
    "end": "1305760"
  },
  {
    "text": "already bear with me for a let's log out my user do I need to log out for this",
    "start": "1305760",
    "end": "1312039"
  },
  {
    "text": "example no I don't do I sorry and we can go ahead and use that token in our",
    "start": "1312039",
    "end": "1317360"
  },
  {
    "text": "request and what done is pasted the token here and we're going to access the",
    "start": "1317360",
    "end": "1322760"
  },
  {
    "text": "HTTP bin service via um via the Gateway so now when we send the request and the",
    "start": "1322760",
    "end": "1329480"
  },
  {
    "text": "Gateway has now received the request it's uh validated our initial access token that was issued by keycloak",
    "start": "1329480",
    "end": "1336440"
  },
  {
    "text": "exchanged that token for a new token and then proxied that request onto HTTP bin",
    "start": "1336440",
    "end": "1342120"
  },
  {
    "text": "and we can now see that we've got uh a different access token here and this access token that was received by um",
    "start": "1342120",
    "end": "1349120"
  },
  {
    "text": "HTTP bin if we paste that into",
    "start": "1349120",
    "end": "1356640"
  },
  {
    "text": "jw. um so we can see that the Gateway in fact was the authorized party so using",
    "start": "1358520",
    "end": "1364320"
  },
  {
    "text": "this it's really really seamless and we recommend or we we would like to see more gateways and more service mesh um",
    "start": "1364320",
    "end": "1371640"
  },
  {
    "text": "um Services implementing these kinds of capabilities okay",
    "start": "1371640",
    "end": "1380440"
  },
  {
    "text": "this one okay um so in our previous example we",
    "start": "1381840",
    "end": "1387679"
  },
  {
    "text": "used the gateway to protect the perimeter and exchange an inbow access token for a new token which could be",
    "start": "1387679",
    "end": "1394279"
  },
  {
    "text": "used internally it's also possible to exchange a kick loog token for an",
    "start": "1394279",
    "end": "1399320"
  },
  {
    "text": "external token minted by an externally identity provider consider a situation where our",
    "start": "1399320",
    "end": "1405679"
  },
  {
    "text": "web app application possess an accent so an access token issued by a default identity provider our keycloak which is",
    "start": "1405679",
    "end": "1413120"
  },
  {
    "text": "in a trusted domain but now our application needs to access Google Calendar apis which which",
    "start": "1413120",
    "end": "1421039"
  },
  {
    "text": "as sorry which as we all know is residing in Google's domain and secured by",
    "start": "1421039",
    "end": "1428520"
  },
  {
    "text": "Google our application must obtain a secure token from Google to access the",
    "start": "1428520",
    "end": "1433840"
  },
  {
    "text": "the Google API this is another great use case for token exchange Grant type just",
    "start": "1433840",
    "end": "1438960"
  },
  {
    "text": "that this one involves two identity providers which requires existence of a trust relationship between the two the",
    "start": "1438960",
    "end": "1445600"
  },
  {
    "text": "two of them so let's quickly go through this flow first the user authenticate with",
    "start": "1445600",
    "end": "1455480"
  },
  {
    "text": "kylo then keycloak issues an access token to the web",
    "start": "1455480",
    "end": "1461000"
  },
  {
    "text": "app and you can see the the issuer is kloog then the web app sending is using",
    "start": "1461000",
    "end": "1468200"
  },
  {
    "text": "the cloak and and making an API call to the API that sits behind Tai Gateway",
    "start": "1468200",
    "end": "1474760"
  },
  {
    "text": "using the access token it got from from kloak then in number four the Gateway is",
    "start": "1474760",
    "end": "1481840"
  },
  {
    "text": "doing a token exchange against kloak which is its own its identity provider",
    "start": "1481840",
    "end": "1487120"
  },
  {
    "text": "and it's using that original k kick loog token kick loog on its and in its turn",
    "start": "1487120",
    "end": "1494320"
  },
  {
    "text": "exchange does a token exchange again against Google and Google Returns the",
    "start": "1494320",
    "end": "1500000"
  },
  {
    "text": "the Google token and then propagate it to the to kick loock and kick loock to the Gateway with that the Gateway can",
    "start": "1500000",
    "end": "1507440"
  },
  {
    "text": "reverse proxy to the service that is now using is using the Google token and can",
    "start": "1507440",
    "end": "1514200"
  },
  {
    "text": "access the Google Calendar and now we can see this in",
    "start": "1514200",
    "end": "1522320"
  },
  {
    "text": "action so here we have an API definition it looks almost like the previous one",
    "start": "1522880",
    "end": "1528919"
  },
  {
    "text": "but with the exception of the target of the URL pointing to",
    "start": "1528919",
    "end": "1534170"
  },
  {
    "text": "[Music] Google no it doesn't work",
    "start": "1534170",
    "end": "1539320"
  },
  {
    "text": "here okay um and then you will see in this H from the screenshot",
    "start": "1539320",
    "end": "1547120"
  },
  {
    "text": "here um that we have configured Google as an external identity provider inside",
    "start": "1547120",
    "end": "1552279"
  },
  {
    "text": "kick Lo and here on the right bottom we set",
    "start": "1552279",
    "end": "1557559"
  },
  {
    "text": "up kick loak as an oath client in Google also note that we have introduced",
    "start": "1557559",
    "end": "1564919"
  },
  {
    "text": "a new parameter for this to in order for this to work we're basically telling kickl that during the token exchange it",
    "start": "1564919",
    "end": "1571840"
  },
  {
    "text": "needs to use an external identity provider Google as the external",
    "start": "1571840",
    "end": "1577640"
  },
  {
    "text": "issuer okay so this is the one where I have to actually make sure I'm logged out um bear with me for a moment",
    "start": "1582000",
    "end": "1589159"
  },
  {
    "text": "so as my user I'm going to kill my session okay so there's no users for",
    "start": "1589159",
    "end": "1595440"
  },
  {
    "text": "this session but what you will see is and for this for this to to work you have to ensure that under identity",
    "start": "1595440",
    "end": "1601600"
  },
  {
    "text": "provider links um you've got Google as the um that Google has been associated",
    "start": "1601600",
    "end": "1607880"
  },
  {
    "text": "with the user here now in this example um we're going to open up the collection the",
    "start": "1607880",
    "end": "1614600"
  },
  {
    "text": "collections and this is demo three and I'm going to close that to give a bit",
    "start": "1614600",
    "end": "1620640"
  },
  {
    "text": "more room I think I'm showing the end before I should so what we're going to do is um obtain a new access token just",
    "start": "1620640",
    "end": "1629480"
  },
  {
    "text": "like before and now I'm going to be signing in with Google signing into keycloak with",
    "start": "1629480",
    "end": "1636200"
  },
  {
    "text": "Google let's see if it works and I'm going to choose my Google account and now Google needs um now",
    "start": "1636840",
    "end": "1644559"
  },
  {
    "text": "Google wants to know that it's allowed to access my uh calendar so I'm going to allow that and",
    "start": "1644559",
    "end": "1654399"
  },
  {
    "text": "proceed and now we have a new access token here so despite the um you will",
    "start": "1654399",
    "end": "1660200"
  },
  {
    "text": "have seen that um Google has authorized um so i' I've allowed um my app to have",
    "start": "1660200",
    "end": "1666720"
  },
  {
    "text": "access sorry Google i' I've granted permission for my app to have access to my calendar and now I've got an access",
    "start": "1666720",
    "end": "1673320"
  },
  {
    "text": "token so let's have a look at what this access token looks like",
    "start": "1673320",
    "end": "1680120"
  },
  {
    "text": "okay you'll see just like before it's a regular keycloak access token there's nothing um nothing different about it so",
    "start": "1681760",
    "end": "1690120"
  },
  {
    "text": "because my um services within my infrastructure doesn't understand Google tokens they only understand keycloak",
    "start": "1690120",
    "end": "1697159"
  },
  {
    "text": "tokens and now I can go ahead and use that token and um because the Gateway",
    "start": "1697159",
    "end": "1703080"
  },
  {
    "text": "has been configured to talk to Google's apis I can now browse the body of the request and maybe I want to have access",
    "start": "1703080",
    "end": "1709760"
  },
  {
    "text": "to my calendar for example so I can now send a request let's see if that works",
    "start": "1709760",
    "end": "1715039"
  },
  {
    "text": "fingers crossed and now I'm able to see using the free busy endpoint of the Google API",
    "start": "1715039",
    "end": "1721640"
  },
  {
    "text": "via the Gateway I'm able to have access to my",
    "start": "1721640",
    "end": "1726518"
  },
  {
    "text": "calendar okay so token exchange within keycloak",
    "start": "1731640",
    "end": "1737399"
  },
  {
    "text": "is in techn ology preview key token exchange implementation is Loosely based",
    "start": "1737399",
    "end": "1742679"
  },
  {
    "text": "on the o token exchange specification at thef and whilst it extends some aspects",
    "start": "1742679",
    "end": "1748519"
  },
  {
    "text": "it also ignores and Loosely interprets other parts of the specification and we do have some",
    "start": "1748519",
    "end": "1753760"
  },
  {
    "text": "observations for the um for the implementers so developer experience",
    "start": "1753760",
    "end": "1760440"
  },
  {
    "text": "we're not kick CL experts but neither are we complete New Biz configuring kylo",
    "start": "1760440",
    "end": "1765840"
  },
  {
    "text": "for token exchange is far from a simple task creating policies client Scopes and mappers and enabling token exchange for",
    "start": "1765840",
    "end": "1772799"
  },
  {
    "text": "client is very time consuming ER prone and could greatly benefit from a simpler",
    "start": "1772799",
    "end": "1779559"
  },
  {
    "text": "workflow from building out our demo for this talk today we found out that for internal to internal tokens we've not",
    "start": "1779799",
    "end": "1787279"
  },
  {
    "text": "yet been able to control the desired audience of the exchange token we've gone through the documentation we've",
    "start": "1787279",
    "end": "1793480"
  },
  {
    "text": "tried to run through examples and there's not much that there aren't any tutorials online that are you know that",
    "start": "1793480",
    "end": "1799480"
  },
  {
    "text": "are that are comprehensive and even the documentation it does have warnings but I think there's something that we're doing quite you know a little bit wrong",
    "start": "1799480",
    "end": "1806320"
  },
  {
    "text": "it's really difficult to configure it um properly and you know we're not able to control that audience and we'd love to",
    "start": "1806320",
    "end": "1812279"
  },
  {
    "text": "be able to do that we just failed we just found miserably",
    "start": "1812279",
    "end": "1817320"
  },
  {
    "text": "um yeah in addition scope support is on the road map but not yet implemented",
    "start": "1817320",
    "end": "1823320"
  },
  {
    "text": "scope support is important because it enables us to Define fine gr permissions to an access",
    "start": "1823320",
    "end": "1828799"
  },
  {
    "text": "stoken and last one yeah lastly from what we see with the keycloak",
    "start": "1828799",
    "end": "1833840"
  },
  {
    "text": "implementation tight Gateway by exchanging the token has been able to impersonate the user but it would also",
    "start": "1833840",
    "end": "1840679"
  },
  {
    "text": "be useful if the web app would be able to delegate rights to the Gateway um in",
    "start": "1840679",
    "end": "1846080"
  },
  {
    "text": "other words typ Gateway would like to be able to act on behalf of the web app um",
    "start": "1846080",
    "end": "1851519"
  },
  {
    "text": "and we'd like to be able to see this as part of maybe a composite to as part of maybe a composite token support as part",
    "start": "1851519",
    "end": "1858000"
  },
  {
    "text": "as per the specifications this is because the user delegated rights to the web app and has",
    "start": "1858000",
    "end": "1863639"
  },
  {
    "text": "no knowledge of the tight",
    "start": "1863639",
    "end": "1866799"
  },
  {
    "text": "Gateway okay so um first of all thank you very much for listening to our talk",
    "start": "1871360",
    "end": "1876960"
  },
  {
    "text": "um you're welcome to come and see us in l14 Booth but uh and say hi but first of",
    "start": "1876960",
    "end": "1882799"
  },
  {
    "text": "all if you have some questions you can go to the mics on the on the Isles and",
    "start": "1882799",
    "end": "1889120"
  },
  {
    "text": "ask us something we still have [Applause]",
    "start": "1889120",
    "end": "1898210"
  },
  {
    "text": "[Music] time does anyone have any",
    "start": "1898210",
    "end": "1904200"
  },
  {
    "text": "questions yeah yeah to the to the mic yeah just in the middle yeah don't",
    "start": "1904200",
    "end": "1911440"
  },
  {
    "text": "fight okay so hopefully this is not too difficult of a question but I was thinking to myself as you were talking",
    "start": "1911440",
    "end": "1917480"
  },
  {
    "text": "about all these mechanisms to refresh tokens and exchange tokens what if I what if my system is simple enough that",
    "start": "1917480",
    "end": "1923399"
  },
  {
    "text": "I only really have one service does all of this still apply or is there like a simpler setup that makes",
    "start": "1923399",
    "end": "1929000"
  },
  {
    "text": "sense so I think I can answer that um if you've only got one service then you're not needing to propagate the identity",
    "start": "1929000",
    "end": "1935240"
  },
  {
    "text": "anywhere but that one service does it need to talk to third party SAS services or anything like that um or if it has an",
    "start": "1935240",
    "end": "1943360"
  },
  {
    "text": "API Gateway in front of it yeah should should that Gateway have be able to pass",
    "start": "1943360",
    "end": "1949039"
  },
  {
    "text": "that access token around how does the Gateway know what's going to happen to it after it's left um after it's proxied",
    "start": "1949039",
    "end": "1954880"
  },
  {
    "text": "the request elsewhere and I I'm I'm struggling to believe that there's only one service because you are using other",
    "start": "1954880",
    "end": "1961880"
  },
  {
    "text": "third parties like ammed said for sure and you're checking other stuff even if it's just an API call it's a different",
    "start": "1961880",
    "end": "1968679"
  },
  {
    "text": "it's in a different trusted domain so potentially you will improve your",
    "start": "1968679",
    "end": "1973799"
  },
  {
    "text": "service you'll add just something you know like just another thing and you will find yourself passing on user user",
    "start": "1973799",
    "end": "1981639"
  },
  {
    "text": "information thank you hi nice talk that was super super",
    "start": "1981639",
    "end": "1987919"
  },
  {
    "text": "good um so my question regarding kind of performance and latency uh increases and",
    "start": "1987919",
    "end": "1994720"
  },
  {
    "text": "things so uh with the current authentication authorization flows that we might already have if you've got",
    "start": "1994720",
    "end": "2000639"
  },
  {
    "text": "multiple chains like be on the Gateway and a single service and then that service calls other services and it goes",
    "start": "2000639",
    "end": "2006240"
  },
  {
    "text": "back you probably want to do these sort of token exchanges on each call between",
    "start": "2006240",
    "end": "2011320"
  },
  {
    "text": "each services to make sure that maybe like service C in the chain then needs",
    "start": "2011320",
    "end": "2016720"
  },
  {
    "text": "to call service D and it doesn't want to pass on and do privilege sort of passing the privilege of the token um what sort",
    "start": "2016720",
    "end": "2023440"
  },
  {
    "text": "of measurable have you looked into performance issues of like doing all of these calls plus your own maybe",
    "start": "2023440",
    "end": "2030159"
  },
  {
    "text": "authorization calls to your own authorization system take it um yeah",
    "start": "2030159",
    "end": "2035919"
  },
  {
    "text": "yeah go so so um yes so we we haven't measured the latency or anything like",
    "start": "2035919",
    "end": "2042080"
  },
  {
    "text": "that um but what from for our for our proof of concept and this um this",
    "start": "2042080",
    "end": "2047440"
  },
  {
    "text": "middleware that we created we um we implemented caching so um so we we're",
    "start": "2047440",
    "end": "2054560"
  },
  {
    "text": "caching the um the signature of the initial access token and we're looking up that we're using it as the cash key",
    "start": "2054560",
    "end": "2061480"
  },
  {
    "text": "so that way you're not having to reperform The Exchange when you receive the same initial access token over and",
    "start": "2061480",
    "end": "2067240"
  },
  {
    "text": "over again so then it's much much faster quick okay um yeah thanks okay from from",
    "start": "2067240",
    "end": "2074599"
  },
  {
    "text": "that side because hi uh thanks for the presentations and for the demos I was wondering if you have any news about you",
    "start": "2074599",
    "end": "2081280"
  },
  {
    "text": "know um token exchange being still in preview is a preview feature in keylo since long time do you have any news",
    "start": "2081280",
    "end": "2088358"
  },
  {
    "text": "when this could become a supported feature we're we're not in the keycloak",
    "start": "2088359",
    "end": "2094118"
  },
  {
    "text": "team so but they are here um so well hope to hear you just behind",
    "start": "2094119",
    "end": "2101240"
  },
  {
    "text": "you but I I was wondering if you know anything about it like um yeah we're not",
    "start": "2101240",
    "end": "2106640"
  },
  {
    "text": "sure uh we're not sure yet so we're we're keen to see it move on and you know I'd love to help the keycloak team",
    "start": "2106640",
    "end": "2112640"
  },
  {
    "text": "to to make it um you know to to make it G and raise more awareness about the",
    "start": "2112640",
    "end": "2118640"
  },
  {
    "text": "about the protocol as well so yeah thanks yeah hi my name is Thomas uh",
    "start": "2118640",
    "end": "2125800"
  },
  {
    "text": "thank you very much for your talk uh I'm one of the Kik maintainers and we are currently working on",
    "start": "2125800",
    "end": "2131520"
  },
  {
    "text": "reising uh the token exchange support and getting it out of preview and solving a lot of the issues that you",
    "start": "2131520",
    "end": "2137480"
  },
  {
    "text": "mentioned there so love to talk to you I'm going to come and see you I'd",
    "start": "2137480",
    "end": "2142560"
  },
  {
    "text": "love to help [Applause] so yeah um I've got a question about",
    "start": "2142560",
    "end": "2148520"
  },
  {
    "text": "your middleware how closely does it follow the RFC because obviously keycloak is",
    "start": "2148520",
    "end": "2154680"
  },
  {
    "text": "very handy but whe if you want to write your own token exchange C sorry did you say how how closely does",
    "start": "2154680",
    "end": "2160880"
  },
  {
    "text": "keycloak follow the RFC no how clely how closely does your middleware follow the",
    "start": "2160880",
    "end": "2166640"
  },
  {
    "text": "RS okay we literally just built the middleware for the purposes of this talk right okay so it does follow it it and",
    "start": "2166640",
    "end": "2173480"
  },
  {
    "text": "it works with keycloak so we haven't tried it with any other identity providers or anything like that it works",
    "start": "2173480",
    "end": "2179119"
  },
  {
    "text": "well with keycloak it's a p request in draft mode so it's not um it's not",
    "start": "2179119",
    "end": "2184960"
  },
  {
    "text": "bulletproof yet but we're you know we want to move it forward and get the community um playing with it using it",
    "start": "2184960",
    "end": "2192599"
  },
  {
    "text": "and um seeing if it works for them so come and see us boo L4 and we can kind of talk about that and maybe give you a",
    "start": "2192599",
    "end": "2199560"
  },
  {
    "text": "demo as well about it you know um and discuss your use case as",
    "start": "2199560",
    "end": "2205400"
  },
  {
    "text": "well hi I have I have a question do you happen to have any scale uh scalability",
    "start": "2206000",
    "end": "2213040"
  },
  {
    "text": "data on this how well it works at what scale have you uh seen it work",
    "start": "2213040",
    "end": "2219520"
  },
  {
    "text": "so well it's well I think we were asked that before we built that as a PC we do",
    "start": "2219560",
    "end": "2225720"
  },
  {
    "text": "have cach in I hope I understood your your question correctly but we have cash",
    "start": "2225720",
    "end": "2231000"
  },
  {
    "text": "in for for the token exchange and for example if you",
    "start": "2231000",
    "end": "2237599"
  },
  {
    "text": "implement if you think about for example um service mesh where you have a Gateway",
    "start": "2237599",
    "end": "2242920"
  },
  {
    "text": "fronting an API so every API call will",
    "start": "2242920",
    "end": "2248160"
  },
  {
    "text": "will go through the Gateway and the Gateway is implementing the caching so it it is an extra hope but then it",
    "start": "2248160",
    "end": "2254520"
  },
  {
    "text": "depends on find tuneing the cach in right I was looking for like uh how many services have you tried with this uh",
    "start": "2254520",
    "end": "2261599"
  },
  {
    "text": "like in the number of services micros Services you mean in a chain of uh chain",
    "start": "2261599",
    "end": "2267720"
  },
  {
    "text": "of calls yeah yes it will add up it depends on uh the connection to the",
    "start": "2267720",
    "end": "2273079"
  },
  {
    "text": "authorization server however there is value for that in terms of security so",
    "start": "2273079",
    "end": "2278560"
  },
  {
    "text": "it really depends on what you're doing and you know if you need to to make an",
    "start": "2278560",
    "end": "2284160"
  },
  {
    "text": "API call to a less trusted domain then it might be worth it right okay thank",
    "start": "2284160",
    "end": "2290960"
  },
  {
    "text": "you and it will be faster than calling out to Google so because obviously keycloak will be in your own",
    "start": "2290960",
    "end": "2296440"
  },
  {
    "text": "infrastructure so that will be you know local network latency as opposed to going you know out over the Internet",
    "start": "2296440",
    "end": "2302119"
  },
  {
    "text": "into the cloud somewhere thank you for the great talk and it was very useful because it also",
    "start": "2302119",
    "end": "2309280"
  },
  {
    "text": "directly relates to what we are facing right now uh and figuring out that this option exists was an amazing thing thank",
    "start": "2309280",
    "end": "2316960"
  },
  {
    "text": "you uh but I have a question regarding longlasting operations or whenever your",
    "start": "2316960",
    "end": "2322480"
  },
  {
    "text": "gateway would need to schedule something happening in a long time away from the",
    "start": "2322480",
    "end": "2327720"
  },
  {
    "text": "point that the request was made scheduling it it might exchange the token right away and get a access token",
    "start": "2327720",
    "end": "2334760"
  },
  {
    "text": "and a refresh token but it will still need to push it somewhere for for the duration",
    "start": "2334760",
    "end": "2342200"
  },
  {
    "text": "um and the refresh token or the excess token duration might expire during that",
    "start": "2342200",
    "end": "2347680"
  },
  {
    "text": "time how would you advise handling a situation like this okay just we just got a message",
    "start": "2347680",
    "end": "2355040"
  },
  {
    "text": "that we have to finish but it's a really good question um I don't if I'm remember",
    "start": "2355040",
    "end": "2360400"
  },
  {
    "text": "correctly it's not part of the RFC so whatever you'll do depends on you know",
    "start": "2360400",
    "end": "2366119"
  },
  {
    "text": "specific implementation it is really good idea to to think about that I agree",
    "start": "2366119",
    "end": "2372720"
  },
  {
    "text": "and yeah maybe we can think about it together I'll drop by the booth yeah yeah",
    "start": "2372720",
    "end": "2379318"
  },
  {
    "text": "cool um so in the demo that you gave uh you signed in as Google um in order to",
    "start": "2380920",
    "end": "2387520"
  },
  {
    "text": "exchange for a Google token is is it possible to um have the identity",
    "start": "2387520",
    "end": "2393720"
  },
  {
    "text": "provider that you sign in and the third party service that you're exchanging for be different or they have to be the same",
    "start": "2393720",
    "end": "2400079"
  },
  {
    "text": "uh identity I think that's dependent on the",
    "start": "2400079",
    "end": "2405119"
  },
  {
    "text": "identity providers or that's dependent on keycloak and I think it's worth speaking to the guys that are here to",
    "start": "2405119",
    "end": "2412079"
  },
  {
    "text": "understand how the the mechanics of that works exactly okay um because we have to",
    "start": "2412079",
    "end": "2417400"
  },
  {
    "text": "ensure that the Google accounts are linked in order to be able to access the um to to to access that calendar right",
    "start": "2417400",
    "end": "2425599"
  },
  {
    "text": "so this is specific to kick Lo and not according you know it's not a standard and um different providers will",
    "start": "2425599",
    "end": "2432839"
  },
  {
    "text": "implement it in a different way yeah and that part isn't and the way that it's been implemented within keyo isn't",
    "start": "2432839",
    "end": "2439280"
  },
  {
    "text": "actually part of that token exchange spec it's just how they've leveraged those capabilities to enable this this",
    "start": "2439280",
    "end": "2445599"
  },
  {
    "text": "kind of feature right okay thank you so thanks very much",
    "start": "2445599",
    "end": "2451440"
  },
  {
    "text": "slides are on the QR code if you're interested",
    "start": "2451440",
    "end": "2458760"
  }
]