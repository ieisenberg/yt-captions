[
  {
    "text": "hello everyone welcome to this session uh my name is aris Ste uh I'm A Cloud",
    "start": "120",
    "end": "6240"
  },
  {
    "text": "software engineer from Intel so my focus is try to accelerate and secure s smesh",
    "start": "6240",
    "end": "13400"
  },
  {
    "text": "while unleashing the underlying Hardware capabilities um my I'm currently a East",
    "start": "13400",
    "end": "19240"
  },
  {
    "text": "maintainer and seing in the East steering commune member uh so together",
    "start": "19240",
    "end": "24400"
  },
  {
    "text": "with me is facila so faila would you please introduce yourself hello everyone I'm facila I work as a cloud native",
    "start": "24400",
    "end": "31240"
  },
  {
    "text": "developer at ericon software technology uh where my primary responsibility is prioritizing the 5G",
    "start": "31240",
    "end": "38920"
  },
  {
    "text": "TCO requirements in all the different open- Source communities uh I'm a steering committee member and maintainer",
    "start": "38920",
    "end": "46120"
  },
  {
    "text": "at ISO and um recently I'm a cncf Ambassador for the latest 2023 group as",
    "start": "46120",
    "end": "53840"
  },
  {
    "text": "well so here is a quick overview of the agenda whatever we are planning to cover",
    "start": "53840",
    "end": "59000"
  },
  {
    "text": "today so I iris iris is a security maintainer at hiso so she will be",
    "start": "59000",
    "end": "64559"
  },
  {
    "text": "talking about an overview of the certificates in hiso service mesh uh",
    "start": "64559",
    "end": "70000"
  },
  {
    "text": "different types of certificates and uh the different plug-in mechanisms for the",
    "start": "70000",
    "end": "75159"
  },
  {
    "text": "same and she will also touch upon a little bit about confidential Computing and her work related to that in Intel",
    "start": "75159",
    "end": "83320"
  },
  {
    "text": "and after that I will uh dig a little bit deeper into the certificate revocation list and ocsp stapling",
    "start": "83320",
    "end": "89920"
  },
  {
    "text": "support in ISO we will also talk about the different extended TLS",
    "start": "89920",
    "end": "95600"
  },
  {
    "text": "configurations that ISO supports um and then Since U my experience is basically",
    "start": "95600",
    "end": "102520"
  },
  {
    "text": "in the 5G Telco security so we will just talk in brief about the 5G um Telco",
    "start": "102520",
    "end": "111320"
  },
  {
    "text": "security overview and then different traffic scenarios in the same and the different uh certificate configurations",
    "start": "111320",
    "end": "118840"
  },
  {
    "text": "for the same as well now over to you Iris to get started thank you Fila so uh let's first",
    "start": "118840",
    "end": "126039"
  },
  {
    "text": "take overw our Al certificate in E service mesh so as you know uh security",
    "start": "126039",
    "end": "132440"
  },
  {
    "text": "and mutal TI are very key functions for service MH so um for most end users",
    "start": "132440",
    "end": "138959"
  },
  {
    "text": "actually when they Landing service mesh in their in their environment the MS",
    "start": "138959",
    "end": "144560"
  },
  {
    "text": "might be the first choice of the feature they want to utilize so to a the mut TI",
    "start": "144560",
    "end": "151599"
  },
  {
    "text": "uh actually for each of the workload you need a certificate and a private key to do the TS communication so as showed in",
    "start": "151599",
    "end": "159040"
  },
  {
    "text": "this picture in this green um Arrow here this is the workload certificate and",
    "start": "159040",
    "end": "165800"
  },
  {
    "text": "also in the mesh Edge side either in the Ingress Gateway direction or the ESS Gateway Direction you need a several",
    "start": "165800",
    "end": "172959"
  },
  {
    "text": "different uh certificate as well for example you need to do the T termination",
    "start": "172959",
    "end": "178280"
  },
  {
    "text": "in the Ingress Direction or in the erress Declaration you also need the certificate to the TRS origination so",
    "start": "178280",
    "end": "185599"
  },
  {
    "text": "you might also for example expose multiple backend Services through the Gateway so in this case you might config",
    "start": "185599",
    "end": "193239"
  },
  {
    "text": "multiple Gateway and uh certificate and private key for your gateway so this is",
    "start": "193239",
    "end": "198519"
  },
  {
    "text": "another place in service match that the certificate is heavily used then to",
    "start": "198519",
    "end": "203640"
  },
  {
    "text": "achieve the mutal communication between the workload you actually need a you know root of trust for your workload so",
    "start": "203640",
    "end": "211159"
  },
  {
    "text": "to achieve this purpose um basically you need a certificate of Serv server and",
    "start": "211159",
    "end": "216879"
  },
  {
    "text": "another key component in the E control plan is the registration Authority",
    "start": "216879",
    "end": "222040"
  },
  {
    "text": "server so um both of them will have certificate typically the certific for",
    "start": "222040",
    "end": "228000"
  },
  {
    "text": "the I server and the C server is the same but they can also be different so",
    "start": "228000",
    "end": "234120"
  },
  {
    "text": "we can see some more details for this later um so let's First Take a look at",
    "start": "234120",
    "end": "240360"
  },
  {
    "text": "the workload certificate so for workload certificate actually it's related about",
    "start": "240360",
    "end": "245959"
  },
  {
    "text": "how the anual proxy get the related certificate then when the data plan traffic comes it can utilize this kind",
    "start": "245959",
    "end": "253599"
  },
  {
    "text": "of certificate to do the MTI con communication so uh when you I mean when",
    "start": "253599",
    "end": "259799"
  },
  {
    "text": "you unboard in the in service MH um there will be en proxy injected as",
    "start": "259799",
    "end": "265800"
  },
  {
    "text": "alongside your workload we call it a side car so when n in bootstrapped it",
    "start": "265800",
    "end": "271479"
  },
  {
    "text": "actually will get a bootstrap configuration so in this bootstrap configuration it will get a default uh",
    "start": "271479",
    "end": "278800"
  },
  {
    "text": "SDS uh GPC server configuration so it will be served as uh on a very fixed uh",
    "start": "278800",
    "end": "287039"
  },
  {
    "text": "Unix domain socet so the address is fixed is under slw SL run SL secret SL",
    "start": "287039",
    "end": "294600"
  },
  {
    "text": "workload spy UDS SL soet so it means um",
    "start": "294600",
    "end": "300080"
  },
  {
    "text": "by default in this picture and show here the E agent itself will acting at the",
    "start": "300080",
    "end": "306680"
  },
  {
    "text": "SDS server and will s all the N proxy through this UDS socket so uh for the E",
    "start": "306680",
    "end": "313960"
  },
  {
    "text": "agent side for for himself it has two ways to gather the private key and the",
    "start": "313960",
    "end": "319720"
  },
  {
    "text": "third and then deliver it through the SDS channel to the N proxy uh so one",
    "start": "319720",
    "end": "325280"
  },
  {
    "text": "option is option one it's also the default option for the ET proxy I mean if you you know install using all the",
    "start": "325280",
    "end": "332759"
  },
  {
    "text": "default option this the option one is the default option so in this case uh",
    "start": "332759",
    "end": "338400"
  },
  {
    "text": "the E agent will acting both as the SD server and also as a C client so it will",
    "start": "338400",
    "end": "345919"
  },
  {
    "text": "you know um generate the certificate signing request and send it to the C",
    "start": "345919",
    "end": "351240"
  },
  {
    "text": "certificate Authority server so we will see more details later for this option",
    "start": "351240",
    "end": "356479"
  },
  {
    "text": "uh for option two is some kind I you know you plug in your key andert",
    "start": "356479",
    "end": "362039"
  },
  {
    "text": "directly for the workload so I mean for the E agent so it can consume all this",
    "start": "362039",
    "end": "367759"
  },
  {
    "text": "pluged in key andert this is a very uh popular scenario for especially for the",
    "start": "367759",
    "end": "373840"
  },
  {
    "text": "5G so facila we show you more details for this option later um then last not",
    "start": "373840",
    "end": "380240"
  },
  {
    "text": "the least um is you know since m is it will you know send the SDS request",
    "start": "380240",
    "end": "386919"
  },
  {
    "text": "through this fixed UDS circuit it also means you know it opens a door for",
    "start": "386919",
    "end": "392120"
  },
  {
    "text": "external word to implement your own SDS server for example spare is um you know",
    "start": "392120",
    "end": "399440"
  },
  {
    "text": "very popular um you know um uh theor",
    "start": "399440",
    "end": "404560"
  },
  {
    "text": "trust uh standard so it also utilize this uh fixed UDS socket and Implement",
    "start": "404560",
    "end": "411639"
  },
  {
    "text": "SDS protocol here so it Implement a SP SDS server so in this way it can plug in",
    "start": "411639",
    "end": "417800"
  },
  {
    "text": "and integrate with e to provide the workload certificate in your case I mean",
    "start": "417800",
    "end": "423680"
  },
  {
    "text": "if you have your B your own business needed a requirement you can also Implement your own SDS server here just",
    "start": "423680",
    "end": "431199"
  },
  {
    "text": "to make sure you know listen to this UDS soet because this is fixed and then follow the SS protocol then you will you",
    "start": "431199",
    "end": "438440"
  },
  {
    "text": "know plug in your own SS implementation here so this is the detailed look about",
    "start": "438440",
    "end": "446479"
  },
  {
    "text": "option one like the E agent in this case we're acting as a C client so now the",
    "start": "446479",
    "end": "453800"
  },
  {
    "text": "total flow is like when the en BL STP it will send the SS request to the E agent",
    "start": "453800",
    "end": "459879"
  },
  {
    "text": "because it's a SS server so after e agent get the request it will generate the briide private key locally it can it",
    "start": "459879",
    "end": "467919"
  },
  {
    "text": "will also generate a certificate signing request and will send the certificate signing request through the TS and the J",
    "start": "467919",
    "end": "475159"
  },
  {
    "text": "token to the regist trans uh Authority server which is running in the E control",
    "start": "475159",
    "end": "480639"
  },
  {
    "text": "plan so the regist Au Serv server is purpose is to verify the incoming",
    "start": "480639",
    "end": "487159"
  },
  {
    "text": "certific request is valid to make sure only the authorized workload can get the",
    "start": "487159",
    "end": "492560"
  },
  {
    "text": "SE signed from me so it will approve I mean if after is it has done all the",
    "start": "492560",
    "end": "499039"
  },
  {
    "text": "authentication and authorization work it will approve if the CSR is coming from a",
    "start": "499039",
    "end": "504560"
  },
  {
    "text": "valid workload it will approve it and then after the CSI has has been approved",
    "start": "504560",
    "end": "510759"
  },
  {
    "text": "then afterward the certificate author server will come on board and take care",
    "start": "510759",
    "end": "515959"
  },
  {
    "text": "and we signing the incoming certificate signing request and sign the thir back and finally it will deliver the",
    "start": "515959",
    "end": "522880"
  },
  {
    "text": "certificate to the E agent and the E agent will send the certificate and the private key uh to the m proxy so this is",
    "start": "522880",
    "end": "531640"
  },
  {
    "text": "the whole flow here so you can see now finally the Eno proxy has got its third",
    "start": "531640",
    "end": "536920"
  },
  {
    "text": "sign back okay so next we will take a look about",
    "start": "536920",
    "end": "543920"
  },
  {
    "text": "the certificate Authority Ser certificate so you can you can see there",
    "start": "543920",
    "end": "549600"
  },
  {
    "text": "multiple options as well so let's take a look one by one the first option option",
    "start": "549600",
    "end": "556800"
  },
  {
    "text": "one is also the default option for EO so it means when you install EO um by",
    "start": "556800",
    "end": "562920"
  },
  {
    "text": "default it will create a self-signed c server in it e control plan so it will",
    "start": "562920",
    "end": "569839"
  },
  {
    "text": "generate the private key in his memory locally it also will you know generate",
    "start": "569839",
    "end": "574880"
  },
  {
    "text": "its certificate it also will St all this C prate key root thir third CH c key and",
    "start": "574880",
    "end": "581480"
  },
  {
    "text": "C3 into a kued secret it's called in- C- secret so um in the future when the when",
    "start": "581480",
    "end": "590399"
  },
  {
    "text": "the Cs are coming it will assign the Certificate request using this C PRI key and aert and then finally deliver to the",
    "start": "590399",
    "end": "597600"
  },
  {
    "text": "uh Pro enal proxy this is option one so this also the S the the simp simplest",
    "start": "597600",
    "end": "604320"
  },
  {
    "text": "way and the quickest way to unball to e but it also means you will delegate all",
    "start": "604320",
    "end": "609839"
  },
  {
    "text": "your workload root of trust to e d so for example if your organization have",
    "start": "609839",
    "end": "615680"
  },
  {
    "text": "your own you know Key Management key management system um this might not be",
    "start": "615680",
    "end": "621399"
  },
  {
    "text": "um you know a good option for you then option two for example you have the C",
    "start": "621399",
    "end": "627320"
  },
  {
    "text": "and root thir generated outside through another system in this case you can",
    "start": "627320",
    "end": "633000"
  },
  {
    "text": "upload them to the to a equaled secet it's called CER and up make sure to",
    "start": "633000",
    "end": "638760"
  },
  {
    "text": "upload all the kind of material like the root CT the SE chain the c key and the",
    "start": "638760",
    "end": "644399"
  },
  {
    "text": "CT then after that you install and when started it will detect whether such kind",
    "start": "644399",
    "end": "651720"
  },
  {
    "text": "of s exist if it exist it will not do the self sign work anymore it will",
    "start": "651720",
    "end": "657600"
  },
  {
    "text": "utilize this kind of root thir and the private key directly to sign the certificate for all the you know the",
    "start": "657600",
    "end": "663839"
  },
  {
    "text": "workload so this is another option um the option three you know um this is a",
    "start": "663839",
    "end": "670680"
  },
  {
    "text": "very you know um I mean very useful option uh especially uh kubernetes",
    "start": "670680",
    "end": "677279"
  },
  {
    "text": "certificate signing request this API has been in has been very stable recently so",
    "start": "677279",
    "end": "683200"
  },
  {
    "text": "it means we can rely heavily on this kind of API so in this case the server",
    "start": "683200",
    "end": "689600"
  },
  {
    "text": "function can be totally disabled in the E control plan so it means that only the",
    "start": "689600",
    "end": "695040"
  },
  {
    "text": "registration Authority server will be there will be there up and running it will authoriz the incoming CSR and make",
    "start": "695040",
    "end": "702639"
  },
  {
    "text": "sure you know all the CSR is valid and then it will do some kind of conversion",
    "start": "702639",
    "end": "708639"
  },
  {
    "text": "work convert the incoming e CSR to a kubernetes CSR and try and make sure you",
    "start": "708639",
    "end": "715360"
  },
  {
    "text": "know the kuet CSR has been approved at the general generate a related kubernetes CSR customer results in the",
    "start": "715360",
    "end": "722399"
  },
  {
    "text": "kubernetes cluster so in this case any um third party uh which can consume",
    "start": "722399",
    "end": "728680"
  },
  {
    "text": "kubernetes certificate signing request can handle the incoming uh certificate signing request and the sign the",
    "start": "728680",
    "end": "735199"
  },
  {
    "text": "certificate to the related work clows so this also opens adults for the better",
    "start": "735199",
    "end": "740320"
  },
  {
    "text": "multi- tendency support we we can see a picture later so the first the first",
    "start": "740320",
    "end": "746040"
  },
  {
    "text": "option is external CA so in this case um you can Define some environment variable",
    "start": "746040",
    "end": "752519"
  },
  {
    "text": "when you start e so in this case the E agent will directly talk to the external",
    "start": "752519",
    "end": "758240"
  },
  {
    "text": "C server so it will totally ignore the you know the control plan part it will",
    "start": "758240",
    "end": "763360"
  },
  {
    "text": "go through the external C server so this is very suitable for example you already",
    "start": "763360",
    "end": "768440"
  },
  {
    "text": "have a very matured um established C server in your organization so in this",
    "start": "768440",
    "end": "773920"
  },
  {
    "text": "case just leverage your existing asset and integrate with e",
    "start": "773920",
    "end": "780360"
  },
  {
    "text": "so uh as we said options through uh actually uh opens a door for you to give",
    "start": "780360",
    "end": "786839"
  },
  {
    "text": "you better multi-tenant support so this is an example here so in this diagram",
    "start": "786839",
    "end": "791959"
  },
  {
    "text": "you can see there are two tenants tenant one and tenant two so for each of the",
    "start": "791959",
    "end": "797120"
  },
  {
    "text": "tenant um when the you mean when the E agent generated the CSR it's actually",
    "start": "797120",
    "end": "803079"
  },
  {
    "text": "can carry a signal information for example for tenant one all my workload I",
    "start": "803079",
    "end": "808399"
  },
  {
    "text": "want it all my workload certif certificate it's signing from this signer like tenant one and for tenant",
    "start": "808399",
    "end": "815959"
  },
  {
    "text": "two all my CSR is sign is sign from sign 102 then using the kubernetes CSR",
    "start": "815959",
    "end": "823079"
  },
  {
    "text": "integration method you can you know generate different kubernetes CSR signing request in the kubernetes CSR",
    "start": "823079",
    "end": "830199"
  },
  {
    "text": "signing request customer results there is a fi the called the signer so the um",
    "start": "830199",
    "end": "835600"
  },
  {
    "text": "kuber the HL registration of s server can grab the uh sign information from",
    "start": "835600",
    "end": "842079"
  },
  {
    "text": "workload dynamically and fill in the sign information to the CSR and then",
    "start": "842079",
    "end": "847639"
  },
  {
    "text": "finally in the right side you can have different standard for different uh",
    "start": "847639",
    "end": "853160"
  },
  {
    "text": "tenant like in this example I can have a sign operator here uh for one tenant I",
    "start": "853160",
    "end": "859199"
  },
  {
    "text": "can leverage a set manager uh to sign uh for other workload so in this way you",
    "start": "859199",
    "end": "864680"
  },
  {
    "text": "can see even in the single service match you can have multiple C and also it",
    "start": "864680",
    "end": "869959"
  },
  {
    "text": "means um the communication between different ten workload will be broken",
    "start": "869959",
    "end": "875360"
  },
  {
    "text": "because they are not signed from the same root of",
    "start": "875360",
    "end": "880240"
  },
  {
    "text": "trust um then the last scenario uh you know which heavily uses the certificate",
    "start": "880680",
    "end": "886360"
  },
  {
    "text": "AG Gateway so for Gateway also two options here option one the default",
    "start": "886360",
    "end": "891959"
  },
  {
    "text": "option so in this case um estd itself we acting as the SDS server so for and",
    "start": "891959",
    "end": "899000"
  },
  {
    "text": "users what you need to do is you need to upload your private key and search to",
    "start": "899000",
    "end": "905040"
  },
  {
    "text": "this uh to different kuet secret so for example there is a service credential",
    "start": "905040",
    "end": "910320"
  },
  {
    "text": "secret one then you can Define your own uh e Gateway customer resource or even",
    "start": "910320",
    "end": "915800"
  },
  {
    "text": "you you know you know leverage the kubernetes uh Gateway API to define a Gateway customer resource in the Gateway",
    "start": "915800",
    "end": "922759"
  },
  {
    "text": "customer results you define a credential this credential will appon to this secret so in this case the estd S server",
    "start": "922759",
    "end": "930959"
  },
  {
    "text": "will watch all this kind of secret and try to convert the secret to the SDS",
    "start": "930959",
    "end": "937079"
  },
  {
    "text": "response and it will send the certificate and the priority PB back",
    "start": "937079",
    "end": "942160"
  },
  {
    "text": "through the E agent and finally go to the N proxy in this case it's the Gateway the another option is here",
    "start": "942160",
    "end": "949839"
  },
  {
    "text": "option two so actually uh n is also listening on this UDS soet is called v/",
    "start": "949839",
    "end": "958040"
  },
  {
    "text": "run SL secret SL credential UDS soet so it also means uh you can Implement your",
    "start": "958040",
    "end": "965000"
  },
  {
    "text": "own s server and make sure you know serve on this UDS socket so you in this",
    "start": "965000",
    "end": "971040"
  },
  {
    "text": "way you can you can see you can also provide your own SDS implementations SDS",
    "start": "971040",
    "end": "977240"
  },
  {
    "text": "implementation to serve your Ingress Gateway or even ESS Gateway so this is",
    "start": "977240",
    "end": "982839"
  },
  {
    "text": "something you can check about um then um",
    "start": "982839",
    "end": "988680"
  },
  {
    "text": "so you know alth those M TI give you a lot of benefit here but in current",
    "start": "988680",
    "end": "994240"
  },
  {
    "text": "Upstream implementation uh as I said third and also private key a very key um component",
    "start": "994240",
    "end": "1002480"
  },
  {
    "text": "when you do the TRS communication especially T handshake right so currently Al private key is St in clear",
    "start": "1002480",
    "end": "1009920"
  },
  {
    "text": "text for all both all these three scenarios like the C case uh if you see",
    "start": "1009920",
    "end": "1016480"
  },
  {
    "text": "in the left bottom part you can see you can using this simp simple kado command",
    "start": "1016480",
    "end": "1022880"
  },
  {
    "text": "to very easily grab the C pride Key so it also means the attacker can grab the",
    "start": "1022880",
    "end": "1029160"
  },
  {
    "text": "private key and break your hom mat traffic and also for mut Tis the the you",
    "start": "1029160",
    "end": "1035038"
  },
  {
    "text": "know the private key is in clear text in memory is also dangerous so how to Sol",
    "start": "1035039",
    "end": "1041640"
  },
  {
    "text": "solve this problem uh in Intel we have a solution which is called in Intel software guard extension so it provides",
    "start": "1041640",
    "end": "1049640"
  },
  {
    "text": "a process based trusted execution environment for you and this technology",
    "start": "1049640",
    "end": "1054960"
  },
  {
    "text": "is is totally based on CPU itself it means no additional Hardware is needed",
    "start": "1054960",
    "end": "1060880"
  },
  {
    "text": "here like some Hardware security module you you don't not you do not need them you can purely rely on the CPU here so",
    "start": "1060880",
    "end": "1068559"
  },
  {
    "text": "this capability is available starting from our Cen uh Intel the young processor so in this case um the sdx",
    "start": "1068559",
    "end": "1077559"
  },
  {
    "text": "will provide the you um confidential memory region so in in this picture you",
    "start": "1077559",
    "end": "1083320"
  },
  {
    "text": "can see the application has been divided into two part The Trusted part and the untrusted part Only The Trusted part can",
    "start": "1083320",
    "end": "1090520"
  },
  {
    "text": "access this memory region for other applications or other software even you",
    "start": "1090520",
    "end": "1095600"
  },
  {
    "text": "are operating system or buyers or firmware you are not allowed to access this memory region so in in in the",
    "start": "1095600",
    "end": "1102880"
  },
  {
    "text": "service man scenario we actually put all these private key in the sdx enklave and",
    "start": "1102880",
    "end": "1109520"
  },
  {
    "text": "for in another word this this this secured memory region is called sgx enave so we have three cases here so we",
    "start": "1109520",
    "end": "1117760"
  },
  {
    "text": "can start the private keys for Gateway for workload for C server in The sdx",
    "start": "1117760",
    "end": "1123000"
  },
  {
    "text": "Enclave so in this case after if you're using this solution if you go to the",
    "start": "1123000",
    "end": "1129000"
  },
  {
    "text": "cluster and you want try to get the secret now uh if you try to grab the C",
    "start": "1129000",
    "end": "1134280"
  },
  {
    "text": "priority key here you can see you can get nothing because all the priority key is gardened in the in this sdx Enclave",
    "start": "1134280",
    "end": "1142440"
  },
  {
    "text": "so this solution has been totally upstreamed so open sourced so if you are",
    "start": "1142440",
    "end": "1147760"
  },
  {
    "text": "interested uh make sure you check out these two rle here the first one HSM SDS",
    "start": "1147760",
    "end": "1154080"
  },
  {
    "text": "server uh this is work for the Gateway and workload certificate The Trusted",
    "start": "1154080",
    "end": "1160159"
  },
  {
    "text": "certificate isure this actually a set manager you know it can coexist with",
    "start": "1160159",
    "end": "1165200"
  },
  {
    "text": "your set manager um uh environment so it's actually uh just a set manager Ure",
    "start": "1165200",
    "end": "1171520"
  },
  {
    "text": "but it will make sure your sa PR key has been gued in The sdx",
    "start": "1171520",
    "end": "1176960"
  },
  {
    "text": "Enclave uh so next I will hand over to faila to work you through more",
    "start": "1176960",
    "end": "1182600"
  },
  {
    "text": "details thank you Aris thanks uh for the great uh presentation so far um about",
    "start": "1182600",
    "end": "1189840"
  },
  {
    "text": "the service mesh security overview um yeah so there were a lot of",
    "start": "1189840",
    "end": "1195320"
  },
  {
    "text": "options shown by Iris so don't think it it's like very complicated with sto but",
    "start": "1195320",
    "end": "1200919"
  },
  {
    "text": "it's more like all the complex things are made possible for you so that all",
    "start": "1200919",
    "end": "1206480"
  },
  {
    "text": "the different scenarios are working as expected so now let's take a look at",
    "start": "1206480",
    "end": "1212600"
  },
  {
    "text": "some additional extended features supported in STO security architecture",
    "start": "1212600",
    "end": "1218000"
  },
  {
    "text": "so basically outside of a certificate's natural life uh there are two main ways",
    "start": "1218000",
    "end": "1224240"
  },
  {
    "text": "a CA can take a non-expired certificate out of service and make it invalid so",
    "start": "1224240",
    "end": "1232799"
  },
  {
    "text": "those two mechanisms are like crl that is the certificate revocation list and",
    "start": "1232799",
    "end": "1238720"
  },
  {
    "text": "the other one is ocsp online certificate status protocol so let's",
    "start": "1238720",
    "end": "1246159"
  },
  {
    "text": "first um see about the crls so crls are basically like",
    "start": "1246159",
    "end": "1253240"
  },
  {
    "text": "um if you see here it's it's like a list of revoked",
    "start": "1253240",
    "end": "1259200"
  },
  {
    "text": "certificates um it's maintained by the C CA in a c distribution point which which",
    "start": "1259200",
    "end": "1266640"
  },
  {
    "text": "can be residing outside and the peers are meant to request this list uh from",
    "start": "1266640",
    "end": "1272640"
  },
  {
    "text": "the ca during the TLs handshake and uh verify whether the certificate is still",
    "start": "1272640",
    "end": "1278679"
  },
  {
    "text": "valid or invalid so it's basically like a blacklist of certificates that a CA",
    "start": "1278679",
    "end": "1284840"
  },
  {
    "text": "revokes prior to their assigned certificate expiration dates so this",
    "start": "1284840",
    "end": "1290080"
  },
  {
    "text": "diagram gives you an overall picture of how the crl implementation is done in",
    "start": "1290080",
    "end": "1296799"
  },
  {
    "text": "esto uh so at Ingress Gateway we want to check the revocation status of client",
    "start": "1296799",
    "end": "1302320"
  },
  {
    "text": "certificates uh so we should check at the server side if the client certificate is valid similarly at egress",
    "start": "1302320",
    "end": "1308799"
  },
  {
    "text": "Gateway the revocation status U um of the um received server certificate could",
    "start": "1308799",
    "end": "1316760"
  },
  {
    "text": "be checked so this the solution is not just limited to the gateways if the side",
    "start": "1316760",
    "end": "1321840"
  },
  {
    "text": "cars are supporting TLS termination or origination so we can use this at side",
    "start": "1321840",
    "end": "1327000"
  },
  {
    "text": "car as well for the external traffic and we can have the crl check enabled in a",
    "start": "1327000",
    "end": "1333000"
  },
  {
    "text": "similar fashion as the gateways uh so this comes for us as a 3gpp 5G",
    "start": "1333000",
    "end": "1340480"
  },
  {
    "text": "specification requirement for security so many of the other Enterprise use",
    "start": "1340480",
    "end": "1345919"
  },
  {
    "text": "cases may not need it but yeah on the 5G world we have the 3gpp standard where",
    "start": "1345919",
    "end": "1351840"
  },
  {
    "text": "there are additional security requirements and it states like the crl status check should be supported for",
    "start": "1351840",
    "end": "1358480"
  },
  {
    "text": "external certificate validation so this is one such scenario is still also",
    "start": "1358480",
    "end": "1364400"
  },
  {
    "text": "supports the ocsp steppling so ocsp is like a protocol used to check the",
    "start": "1364400",
    "end": "1369679"
  },
  {
    "text": "revocation status of individual certificates so previously we talked about crl which was like a list of",
    "start": "1369679",
    "end": "1376159"
  },
  {
    "text": "revoked certificates uh but here it's like applied to a single certificate rather than a list so a peer upon",
    "start": "1376159",
    "end": "1383640"
  },
  {
    "text": "receiving the certificate communicates with the ca to check uh the status of that particular certificate so in Isa we",
    "start": "1383640",
    "end": "1391279"
  },
  {
    "text": "not implement the basic overall ocsp support rather only ocsp stapling so in",
    "start": "1391279",
    "end": "1398360"
  },
  {
    "text": "stapling it's like instead of each client having to request the revocation status of the certificate uh the server",
    "start": "1398360",
    "end": "1405400"
  },
  {
    "text": "which ons the certificate and serves the content that requests the ca for its validity",
    "start": "1405400",
    "end": "1411640"
  },
  {
    "text": "and sense its on status in the form of ass signed time stamped add-on so the",
    "start": "1411640",
    "end": "1418240"
  },
  {
    "text": "server can present both the certificate and the Staple in in the response to the",
    "start": "1418240",
    "end": "1423640"
  },
  {
    "text": "client so in STO what we have is uh the ocsp stapling support at the Ingress",
    "start": "1423640",
    "end": "1429880"
  },
  {
    "text": "Gateway uh so that's what we do now is also allows you to configure",
    "start": "1429880",
    "end": "1438000"
  },
  {
    "text": "additional TLS parameters in some of the scenarios based on the requirements so it's a bit unstructured currently so",
    "start": "1438000",
    "end": "1446919"
  },
  {
    "text": "maybe certain parameters are supported only on the Ingress side certain other parameters are there on the egress side",
    "start": "1446919",
    "end": "1453360"
  },
  {
    "text": "but the documentation clarifies that uh so it's like for example there is an option to configure the cipher suits",
    "start": "1453360",
    "end": "1460480"
  },
  {
    "text": "ecdh curves of and even the signature schemes if Cipher suits is specified the",
    "start": "1460480",
    "end": "1466840"
  },
  {
    "text": "TLs listener will will only support those specified SP ciper list but it's",
    "start": "1466840",
    "end": "1472440"
  },
  {
    "text": "like only in TLS 1.2 as you know TLS 1.3 does not allow this configuration",
    "start": "1472440",
    "end": "1479240"
  },
  {
    "text": "similarly ecdh curves as well but yes based on the requirements that have come",
    "start": "1479240",
    "end": "1484320"
  },
  {
    "text": "in um we have ecdh cures support only for the mesh external configuration mesh",
    "start": "1484320",
    "end": "1490559"
  },
  {
    "text": "external means the traffic that's coming from outside the mesh to the to inside",
    "start": "1490559",
    "end": "1495679"
  },
  {
    "text": "the mesh um signature schemes also can be configured but envoice supports",
    "start": "1495679",
    "end": "1500799"
  },
  {
    "text": "configuring signature schemes but there are no standard sto apis for configuring the same thing but yes we can use the",
    "start": "1500799",
    "end": "1508760"
  },
  {
    "text": "Eno filter provided by sto to configure the signature",
    "start": "1508760",
    "end": "1514480"
  },
  {
    "text": "schemes now let's take a quick look at the overall 5G Telco system architecture before I",
    "start": "1515720",
    "end": "1523000"
  },
  {
    "text": "talk about the specific traffic scenarios um we don't have to go into detail about it but just we will just",
    "start": "1523000",
    "end": "1530000"
  },
  {
    "text": "explain how this can be translated to the service mesh use cases so many of",
    "start": "1530000",
    "end": "1536080"
  },
  {
    "text": "these things will be already covered by Iris but yeah it makes sense to explain a little bit on how service mesh applies",
    "start": "1536080",
    "end": "1543159"
  },
  {
    "text": "in the 5G core so the 5G Telco World it",
    "start": "1543159",
    "end": "1549120"
  },
  {
    "text": "uses the same elements as the previous generations like 4G so you have a user",
    "start": "1549120",
    "end": "1554440"
  },
  {
    "text": "equipment and then the radio Access Network which is the RAM and then yes",
    "start": "1554440",
    "end": "1559640"
  },
  {
    "text": "you have the 5G core Network so in the figure here the user",
    "start": "1559640",
    "end": "1565520"
  },
  {
    "text": "plane has the network functions and elements involved in the transport of",
    "start": "1565520",
    "end": "1571039"
  },
  {
    "text": "user data um that's drawn at the bottom level in the yellow background and in the blue background whatever is there it",
    "start": "1571039",
    "end": "1577600"
  },
  {
    "text": "consists of all the network functions in the signaling plane or the control plane so the S the the network functions are",
    "start": "1577600",
    "end": "1585679"
  },
  {
    "text": "like uh the application in a kubernetes cluster so they have if",
    "start": "1585679",
    "end": "1591440"
  },
  {
    "text": "you see the blue background ones they have http2 interfaces and the service",
    "start": "1591440",
    "end": "1596559"
  },
  {
    "text": "mesh or sto service mesh basically comes to apply only in that area in the",
    "start": "1596559",
    "end": "1602720"
  },
  {
    "text": "signaling plane because of course you know that whenever service machine introduced there is some latency",
    "start": "1602720",
    "end": "1610039"
  },
  {
    "text": "compromises which we have to do which is not possible in the data plane and not acceptable in the data plane for real",
    "start": "1610039",
    "end": "1617679"
  },
  {
    "text": "World traffic like the 5G scenario so we use uh service mesh only",
    "start": "1617679",
    "end": "1623039"
  },
  {
    "text": "in the control plane so at the same time in the same blue",
    "start": "1623039",
    "end": "1628200"
  },
  {
    "text": "background there can be some Services which are on boarded to service mesh some others which are not on boarded um",
    "start": "1628200",
    "end": "1635120"
  },
  {
    "text": "so it's like in the same kubernetes cluster you will have some applications with side cars and some without side",
    "start": "1635120",
    "end": "1641679"
  },
  {
    "text": "cars so all these different combinations lead to different traffic scenarios",
    "start": "1641679",
    "end": "1648159"
  },
  {
    "text": "which we will explain in this slide so she Iris already explained",
    "start": "1648159",
    "end": "1653240"
  },
  {
    "text": "about how the certificates are configured within the mesh but uh additionally she also talked",
    "start": "1653240",
    "end": "1659840"
  },
  {
    "text": "about the Gateway certificates so we already know how external to service mesh traffic works and also mesh to",
    "start": "1659840",
    "end": "1666720"
  },
  {
    "text": "external traffic Works in this diagram but as I told before there can be",
    "start": "1666720",
    "end": "1671799"
  },
  {
    "text": "certain cases like within the cluster we can have a mesh external service which",
    "start": "1671799",
    "end": "1677679"
  },
  {
    "text": "is basically like an application without a sidecar container it has to talk to another application or service with a",
    "start": "1677679",
    "end": "1685200"
  },
  {
    "text": "sidecar so overall this results in like uh four different",
    "start": "1685200",
    "end": "1692080"
  },
  {
    "text": "scenarios and uh there are applications within the cluster which have to talk to",
    "start": "1692080",
    "end": "1698159"
  },
  {
    "text": "Applications with side car and it doesn't make sense to come through an Ingress Gateway or egress Gateway for",
    "start": "1698159",
    "end": "1704760"
  },
  {
    "text": "applications within the same cluster itself so to solve such cases we will",
    "start": "1704760",
    "end": "1709919"
  },
  {
    "text": "have to use side car based TLS termination and",
    "start": "1709919",
    "end": "1715720"
  },
  {
    "text": "origination so this slide yes it talks about so the different the four types of",
    "start": "1715720",
    "end": "1721960"
  },
  {
    "text": "traffic which I talked talked about currently so it can be like external to",
    "start": "1721960",
    "end": "1727200"
  },
  {
    "text": "service mesh through an Ingress Gateway service mesh to external through an",
    "start": "1727200",
    "end": "1732880"
  },
  {
    "text": "erress Gateway or service mesh to Cluster internal without a gateway directly the side car uh will terminate",
    "start": "1732880",
    "end": "1740600"
  },
  {
    "text": "the TLs or the cluster internal to service mesh without an erress Gateway",
    "start": "1740600",
    "end": "1745799"
  },
  {
    "text": "where the side car will originate the TLs so total four cases and it just",
    "start": "1745799",
    "end": "1751440"
  },
  {
    "text": "talks about what are the different sto custom resources that can be used to configure these certificates in those",
    "start": "1751440",
    "end": "1758840"
  },
  {
    "text": "different scenarios so yeah that's all we had to discuss about and then if if",
    "start": "1758840",
    "end": "1767360"
  },
  {
    "text": "if you know about the sto user survey yeah we are inviting feedback",
    "start": "1767360",
    "end": "1772519"
  },
  {
    "text": "from sto users about the usability of the different features so please scan",
    "start": "1772519",
    "end": "1778120"
  },
  {
    "text": "the QR code on the left hand side to give us feedback uh for ISU and on the right",
    "start": "1778120",
    "end": "1785240"
  },
  {
    "text": "hand side it's the feedback about the session and yes if you have any",
    "start": "1785240",
    "end": "1790880"
  },
  {
    "text": "questions we can take it now thank you",
    "start": "1790880",
    "end": "1799320"
  },
  {
    "text": "[Applause]",
    "start": "1799330",
    "end": "1802429"
  },
  {
    "text": "thank you so I had a I had a question um",
    "start": "1806039",
    "end": "1812039"
  },
  {
    "text": "certificates in service mesh seem kind of like a Choose Your Own Adventure book if you understand that",
    "start": "1812039",
    "end": "1818559"
  },
  {
    "text": "reference um in that there's lots of different ways to do them and it's seemingly lots of different ways to do",
    "start": "1818559",
    "end": "1824760"
  },
  {
    "text": "them badly do you like your Infinite Wisdom of the people on the stage have",
    "start": "1824760",
    "end": "1830720"
  },
  {
    "text": "recommendations on what you would suggest as the purest or simplest route",
    "start": "1830720",
    "end": "1838559"
  },
  {
    "text": "to pursue certificates in a service smash",
    "start": "1838559",
    "end": "1843679"
  },
  {
    "text": "environment is a is the question about which option",
    "start": "1843679",
    "end": "1849760"
  },
  {
    "text": "here is the simplest and easiest in ISO or you're asking about all the different service measures okay okay so which",
    "start": "1849760",
    "end": "1857799"
  },
  {
    "text": "which scenario are you talking about the C part or the workload or the Gateway because it's",
    "start": "1857799",
    "end": "1865679"
  },
  {
    "text": "different oh I mean",
    "start": "1865840",
    "end": "1871039"
  },
  {
    "text": "okay so um because there are several places that has certificate like the C",
    "start": "1871039",
    "end": "1877039"
  },
  {
    "text": "server the Gateway the workload so what are you you know specific asking you are",
    "start": "1877039",
    "end": "1882240"
  },
  {
    "text": "asking the C what's the best option for C or workload or or Gateway",
    "start": "1882240",
    "end": "1888320"
  },
  {
    "text": "best option load",
    "start": "1888320",
    "end": "1892879"
  },
  {
    "text": "aa's your um you know it depends it's hard to",
    "start": "1895480",
    "end": "1900880"
  },
  {
    "text": "answer it because every organization have different situation for example if your organizer has already a very mature",
    "start": "1900880",
    "end": "1908159"
  },
  {
    "text": "C solution and your mature key management system maybe the external C1",
    "start": "1908159",
    "end": "1913399"
  },
  {
    "text": "is the best for you because you can reze re reutilize all your existing",
    "start": "1913399",
    "end": "1918760"
  },
  {
    "text": "investment just to integrate with E is good enough if you are not under this",
    "start": "1918760",
    "end": "1923799"
  },
  {
    "text": "case um I might support you like using the plug insert um but in this case you",
    "start": "1923799",
    "end": "1929600"
  },
  {
    "text": "need to take care all the rotation by yourself because all this certificate is plugged in by yourself so you need to",
    "start": "1929600",
    "end": "1936960"
  },
  {
    "text": "make sure um the certificate and private key in the secret is up to date and then",
    "start": "1936960",
    "end": "1942880"
  },
  {
    "text": "D can pick it up then the other option like if you are already the set manager",
    "start": "1942880",
    "end": "1948519"
  },
  {
    "text": "like such kind of ecosystem solution maybe the kubernetes CSI is a good choice for you yeah thank you thank",
    "start": "1948519",
    "end": "1958799"
  },
  {
    "text": "you any further questions yeah sure hi um I was just wondering if you could go",
    "start": "1959960",
    "end": "1965639"
  },
  {
    "text": "back to the slide about the why the kubernetes secret was um insecure and",
    "start": "1965639",
    "end": "1971519"
  },
  {
    "text": "the command you used to get the private key I was just curious and if you could just unpack that again is this the one",
    "start": "1971519",
    "end": "1979279"
  },
  {
    "text": "which one he just wants to go back to the",
    "start": "1979279",
    "end": "1983760"
  },
  {
    "text": "slide um it was the one about why the the kubernetes secret uh for uh the itdo",
    "start": "1985039",
    "end": "1991840"
  },
  {
    "text": "was insecure this one I think it was",
    "start": "1991840",
    "end": "1998158"
  },
  {
    "text": "few",
    "start": "2005960",
    "end": "2008960"
  },
  {
    "text": "yeah so what's the question is like how you GA this private key here right yeah",
    "start": "2013440",
    "end": "2021240"
  },
  {
    "text": "I just wanted to take a picture of the slid oh oh just want to take a picture",
    "start": "2021240",
    "end": "2026320"
  },
  {
    "text": "okay got",
    "start": "2026320",
    "end": "2029559"
  },
  {
    "text": "you thank",
    "start": "2035960",
    "end": "2041120"
  },
  {
    "text": "you",
    "start": "2044440",
    "end": "2047440"
  }
]