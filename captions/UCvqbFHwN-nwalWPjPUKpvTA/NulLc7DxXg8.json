[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "hi welcome to kubecon this is uh the multi-cloud the test over network",
    "start": "80",
    "end": "5759"
  },
  {
    "text": "service mesh joint talk between network service mesh and the tess",
    "start": "5759",
    "end": "11920"
  },
  {
    "text": "i'm tim swanson uh senior tech lead from emerging technologies and innovation at",
    "start": "14880",
    "end": "20080"
  },
  {
    "text": "cisco and i'm john watson a slight reliability engineer",
    "start": "20080",
    "end": "25599"
  },
  {
    "text": "for the plant scale db with planetscale uh so today we're going to go through",
    "start": "25599",
    "end": "33200"
  },
  {
    "start": "29000",
    "end": "87000"
  },
  {
    "text": "the integration of the test with network service mesh and virtual layer 3 deployment so we're",
    "start": "33200",
    "end": "40079"
  },
  {
    "text": "going to start off by highlighting the pertinent use cases for why you would",
    "start": "40079",
    "end": "45360"
  },
  {
    "text": "want to integrate with these two comp these two projects and then we're going to",
    "start": "45360",
    "end": "51600"
  },
  {
    "text": "describe the tessa's architecture so we can understand what components are involved when we do",
    "start": "51600",
    "end": "58160"
  },
  {
    "text": "this deployment and then we're going to talk about how some of the details for network service",
    "start": "58160",
    "end": "63840"
  },
  {
    "text": "mesh virtual layer 3 inter domain and how it works and",
    "start": "63840",
    "end": "69680"
  },
  {
    "text": "some of the benefits and then we'll go into the integration between the the tests deployment on a uh",
    "start": "69680",
    "end": "77280"
  },
  {
    "text": "enabled system or a multi-cloud system with uh with nsm inter domain",
    "start": "77280",
    "end": "84320"
  },
  {
    "text": "and we'll do a demonstration",
    "start": "84320",
    "end": "87840"
  },
  {
    "text": "the tessa's core philosophy is to facilitate the scaling of applications by managing the complexity of scaling",
    "start": "90880",
    "end": "96320"
  },
  {
    "text": "databases with little to no interference with application development for example",
    "start": "96320",
    "end": "101520"
  },
  {
    "text": "the tess multi-cloud can be used to efficient effortlessly provide a homogeneous interface to your database",
    "start": "101520",
    "end": "108479"
  },
  {
    "text": "in any cloud provider thus preventing vendor lock-in while increasing the availability and durability of the",
    "start": "108479",
    "end": "113920"
  },
  {
    "text": "database too",
    "start": "113920",
    "end": "116719"
  },
  {
    "text": "test provides durability by replicating shards across cells and for replication to work the test",
    "start": "120240",
    "end": "126079"
  },
  {
    "text": "needs to be able to securely communicate across availability zones regions and or cloud providers",
    "start": "126079",
    "end": "133440"
  },
  {
    "text": "another vitesse multi-cloud use case is able to comply with data location regulations",
    "start": "137599",
    "end": "143280"
  },
  {
    "text": "without re-architecting your application the test sharding will handle routing data and traffic to the appropriate",
    "start": "143280",
    "end": "149840"
  },
  {
    "text": "jurisdiction with little to no changes to your applications",
    "start": "149840",
    "end": "157840"
  },
  {
    "text": "the test is already built with availability in mind by replicating shards across failure",
    "start": "159519",
    "end": "165680"
  },
  {
    "text": "domains the test multi-cloud takes this concept and applies it to whole cloud providers",
    "start": "165680",
    "end": "173200"
  },
  {
    "text": "infotes a failed domain is mapped to a cell each cell usually contains a set of",
    "start": "174239",
    "end": "180159"
  },
  {
    "text": "tablets vt gates and application servers",
    "start": "180159",
    "end": "185840"
  },
  {
    "text": "with multiple cells the local vtgate will handle routing traffic to the designated charge and the",
    "start": "189680",
    "end": "195360"
  },
  {
    "text": "appropriate cell and the tablets will handle replicating the shard data across cells",
    "start": "195360",
    "end": "202720"
  },
  {
    "text": "the tests multi-cloud is cells across cloud providers instead of just regions",
    "start": "205120",
    "end": "211280"
  },
  {
    "text": "or availability zones",
    "start": "211280",
    "end": "214560"
  },
  {
    "text": "the test relies on the networking provided by the infrastructure it's deployed on in the",
    "start": "218560",
    "end": "224239"
  },
  {
    "text": "case of crew readies that's the cni of the cloud provider and it's pod for multi-cloud networking we need to",
    "start": "224239",
    "end": "230159"
  },
  {
    "text": "securely connect multiple connectivity bands together unfortunately applying an organization's",
    "start": "230159",
    "end": "235599"
  },
  {
    "text": "networking and security requirements usually entails toil since it requires using a cloud specific apis",
    "start": "235599",
    "end": "241280"
  },
  {
    "text": "and per kubernetes cluster network policies to allow access to only specific workloads",
    "start": "241280",
    "end": "248319"
  },
  {
    "text": "okay as um john was saying in the last section about the takeaways for implications of",
    "start": "249439",
    "end": "256799"
  },
  {
    "text": "multi-cloud networking the toil that's involved in cloud's",
    "start": "256799",
    "end": "262880"
  },
  {
    "text": "provider specific network connectivity between other clouds and being managed",
    "start": "262880",
    "end": "271199"
  },
  {
    "text": "in bespoke ways is is is just something that we're trying to get away",
    "start": "271199",
    "end": "278160"
  },
  {
    "text": "from and we're trying to create the that's a kind of a goal of the network service mesh",
    "start": "278160",
    "end": "284400"
  },
  {
    "text": "uh inter-domain project um and nsm with virtual layer three",
    "start": "284400",
    "end": "291040"
  },
  {
    "text": "uh is is built to kind of alleviate a lot of those use cases",
    "start": "291040",
    "end": "298080"
  },
  {
    "text": "those toil in those use cases for application administrators",
    "start": "298080",
    "end": "304960"
  },
  {
    "text": "so this brings up what what is msm really um so nsm in a nutshell",
    "start": "305759",
    "end": "313199"
  },
  {
    "text": "is managing connections between clients and client workloads and network",
    "start": "313199",
    "end": "319759"
  },
  {
    "text": "services that are provided by one or more network service endpoints",
    "start": "319759",
    "end": "325759"
  },
  {
    "text": "and network service endpoints are um the abstraction in the nsm world",
    "start": "325759",
    "end": "332639"
  },
  {
    "text": "for different types of network functions so as a network function provider",
    "start": "332639",
    "end": "340240"
  },
  {
    "text": "you can perform you can you can implement a network service endpoint and",
    "start": "340479",
    "end": "346320"
  },
  {
    "text": "have a administrator provide that as a network",
    "start": "346320",
    "end": "351520"
  },
  {
    "text": "service to any of the client workloads in in their domain their nsm deployment",
    "start": "351520",
    "end": "359440"
  },
  {
    "text": "so um how does this work so nsm",
    "start": "359440",
    "end": "366000"
  },
  {
    "text": "handles requests from clients so there's a there's a network service request api that um gets",
    "start": "366000",
    "end": "373520"
  },
  {
    "text": "handled by the network service manager and the client initiates that and the network service",
    "start": "373520",
    "end": "379360"
  },
  {
    "text": "manager uh when to handle that it it uses um",
    "start": "379360",
    "end": "384800"
  },
  {
    "text": "it it consults a network service registry to just to find any endpoints that are uh registered for",
    "start": "384800",
    "end": "393120"
  },
  {
    "text": "that type of network service and it decides which network service endpoint",
    "start": "393120",
    "end": "399199"
  },
  {
    "text": "that it got back from the registry to um to to connect the client to and then",
    "start": "399199",
    "end": "405600"
  },
  {
    "text": "it it's forwards the request to the network service endpoint that it shows and um if every and then",
    "start": "405600",
    "end": "412639"
  },
  {
    "text": "it negotiates the connection parameters and does the actual connection set up to the client so",
    "start": "412639",
    "end": "418960"
  },
  {
    "text": "that's the the gist of uh the nsm model for connection managing connections so",
    "start": "418960",
    "end": "427120"
  },
  {
    "text": "you applied to a kubernetes environment which we refer to as a single kubernetes",
    "start": "427120",
    "end": "433120"
  },
  {
    "text": "environment is a what we refer to as a domain in msm",
    "start": "433120",
    "end": "438319"
  },
  {
    "text": "and the domain is is the nsm kubernetes domain has",
    "start": "438319",
    "end": "445039"
  },
  {
    "text": "a network service manager on each node so it it's able to coordinate",
    "start": "445039",
    "end": "452080"
  },
  {
    "text": "connectivity between nodes between clients on one node and endpoints on other nodes",
    "start": "452080",
    "end": "459440"
  },
  {
    "text": "so the same work same basic flow as the previous slide but it's triggered by uh nsm has an",
    "start": "459440",
    "end": "467280"
  },
  {
    "text": "admission controller that pays attention to annotations on pods or deployments and um that that",
    "start": "467280",
    "end": "475520"
  },
  {
    "text": "causes a knit container to be added to that client's deployment and that is what is doing the actual",
    "start": "475520",
    "end": "483919"
  },
  {
    "text": "request initiation to the network service mesh uh control plane and the network",
    "start": "483919",
    "end": "490160"
  },
  {
    "text": "service mesh control plane does the um the actual lookup of the nses for that network service",
    "start": "490160",
    "end": "497280"
  },
  {
    "text": "chooses which nse and then forwards the request",
    "start": "497280",
    "end": "502639"
  },
  {
    "text": "to the ns manager that's local to that nse and that ns manager will then uh forward",
    "start": "502639",
    "end": "510080"
  },
  {
    "text": "the request to the actual nsc so there's there's kind of layers of connection parameters being",
    "start": "510080",
    "end": "515839"
  },
  {
    "text": "also exchanged here the clients are saying what type of connection that they",
    "start": "515839",
    "end": "521440"
  },
  {
    "text": "would would be able to handle and the ns managers are saying are",
    "start": "521440",
    "end": "526560"
  },
  {
    "text": "indicating what kind of connections that um can go between the nodes and like a vxlan tunnel",
    "start": "526560",
    "end": "533600"
  },
  {
    "text": "or in the um actual ns manager on the node to the nsc is also",
    "start": "533600",
    "end": "539440"
  },
  {
    "text": "uh in negotiating their side of the connection so um there there's a lot of connection",
    "start": "539440",
    "end": "546720"
  },
  {
    "text": "parameter exchange in this flow and that that's a lot of that provides a lot of power you can see",
    "start": "546720",
    "end": "552080"
  },
  {
    "text": "there's no centralization here it's just um the the central central component is",
    "start": "552080",
    "end": "557760"
  },
  {
    "text": "the network service registry and that is really just pointing at available network service endpoints",
    "start": "557760",
    "end": "566480"
  },
  {
    "text": "so when we go inter-domain you can see how this model extends because the same",
    "start": "567519",
    "end": "574240"
  },
  {
    "text": "idea can be used to carry out the connection across",
    "start": "574240",
    "end": "580560"
  },
  {
    "text": "domain boundaries or cluster boundaries the the detail of how that connection",
    "start": "580560",
    "end": "585760"
  },
  {
    "text": "between the between the nodes in different clusters is the is the",
    "start": "585760",
    "end": "592560"
  },
  {
    "text": "is the difference of this environment versus the single cluster",
    "start": "592560",
    "end": "598640"
  },
  {
    "text": "but on a node level the uh the control plane flow is is the same",
    "start": "598640",
    "end": "606720"
  },
  {
    "text": "and then between clusters the control plane flow is basically the same but the",
    "start": "606720",
    "end": "612079"
  },
  {
    "text": "parameters in that connection message are um and they're made and there are",
    "start": "612079",
    "end": "617279"
  },
  {
    "text": "possibly our intermediaries to help get the control plane um message",
    "start": "617279",
    "end": "622959"
  },
  {
    "text": "to the actual other uh network service manager in the other cluster",
    "start": "622959",
    "end": "628240"
  },
  {
    "text": "but but all that logically is is is just um essentially like proxying uh",
    "start": "628240",
    "end": "635760"
  },
  {
    "text": "the same message to a uh to the to the right destination and then the",
    "start": "635760",
    "end": "641680"
  },
  {
    "text": "the exchange of the actual uh parameters required for the layers of",
    "start": "641680",
    "end": "647040"
  },
  {
    "text": "the connections to enable the connection between the actual",
    "start": "647040",
    "end": "652160"
  },
  {
    "text": "client in one cluster to the to the network service endpoint in another cluster that's all figured out in the context of",
    "start": "652160",
    "end": "659600"
  },
  {
    "text": "that control plane message exchange so it looks exactly the same",
    "start": "659600",
    "end": "664640"
  },
  {
    "text": "from a from a flow patent point of view and this and the details of that",
    "start": "664640",
    "end": "669680"
  },
  {
    "text": "connection pipe are going to be different but um the at the",
    "start": "669680",
    "end": "675200"
  },
  {
    "text": "setup logical view it's it's the same and the other thing take away here is",
    "start": "675200",
    "end": "680880"
  },
  {
    "text": "the network service registry and inter domain has to be able to know um which endpoints are",
    "start": "680880",
    "end": "689600"
  },
  {
    "text": "a part of the inter-domain environment and i'm showing one block as the network",
    "start": "689600",
    "end": "695839"
  },
  {
    "text": "service registry but that that also could be you know a distributed",
    "start": "695839",
    "end": "701120"
  },
  {
    "text": "kind of registry as well so in that in the virtual layer three um",
    "start": "701120",
    "end": "708079"
  },
  {
    "start": "703000",
    "end": "906000"
  },
  {
    "text": "what we're doing is we're implementing a different a specific type of nse and that nse",
    "start": "708079",
    "end": "713200"
  },
  {
    "text": "is functioning as a layer three gateway router so it's from the point of view of the",
    "start": "713200",
    "end": "720079"
  },
  {
    "text": "client workload pods and it's connecting to the the pier its peer nses",
    "start": "720079",
    "end": "727839"
  },
  {
    "text": "so the other types of the other vl3 nfcs in the inter-domain environment",
    "start": "727839",
    "end": "733200"
  },
  {
    "text": "it's connecting to those via nsm so it's using nsm to find the other ones",
    "start": "733200",
    "end": "738480"
  },
  {
    "text": "other peers and it's using uh so using ns the network service registry for for",
    "start": "738480",
    "end": "743519"
  },
  {
    "text": "that purposes and then using nsm inter-domain connection setup",
    "start": "743519",
    "end": "748720"
  },
  {
    "text": "to connect to its peers and exchange l3 route information and ipam",
    "start": "748720",
    "end": "756839"
  },
  {
    "text": "information so um the model is is pretty",
    "start": "756839",
    "end": "762320"
  },
  {
    "text": "in this picture in this picture we're trying to show the the same flow but with the l3 nse",
    "start": "762320",
    "end": "769200"
  },
  {
    "text": "as the specific um how it specifically works so um in the",
    "start": "769200",
    "end": "776079"
  },
  {
    "text": "in the case of the vl3 and nse we have a annotation the same model where we apply",
    "start": "776079",
    "end": "783920"
  },
  {
    "text": "an annotation for a network service the dating notation corresponds to the actual connectivity domain network",
    "start": "783920",
    "end": "790560"
  },
  {
    "text": "server of the network service so um in this case it's",
    "start": "790560",
    "end": "795920"
  },
  {
    "text": "the connectivity domain called green and that um that nse that it's connecting to has a",
    "start": "795920",
    "end": "803600"
  },
  {
    "text": "mapping of um of of that uh is configured to connect to the network service registry",
    "start": "803600",
    "end": "810800"
  },
  {
    "text": "for that connectivity domain so that network service registry knows about the other",
    "start": "810800",
    "end": "816639"
  },
  {
    "text": "nses in the connectivity domain and when that happens when that",
    "start": "816639",
    "end": "823760"
  },
  {
    "text": "connection happens from the client the nse will find the",
    "start": "823760",
    "end": "829040"
  },
  {
    "text": "other nfcs that are in that connectivity domain and trigger connection requests",
    "start": "829040",
    "end": "834720"
  },
  {
    "text": "to form the actual peering between the other nses so it and and cause the nsm implementation to",
    "start": "834720",
    "end": "842720"
  },
  {
    "text": "create the data plane connectivity between those nses across the cloud boundaries or cluster",
    "start": "842720",
    "end": "849199"
  },
  {
    "text": "boundaries so when there another client comes up in in the",
    "start": "849199",
    "end": "855040"
  },
  {
    "text": "cluster two this in this case in the flow that we just described that",
    "start": "855040",
    "end": "861199"
  },
  {
    "text": "actual connectivity domain is already up and all that is happening is that client is",
    "start": "861199",
    "end": "866639"
  },
  {
    "text": "just getting connected to the nse and then it is now a part of the l3 network that",
    "start": "866639",
    "end": "873279"
  },
  {
    "text": "makes up that connectivity domain so the client and cluster one can reach the",
    "start": "873279",
    "end": "878320"
  },
  {
    "text": "client and cluster two and vice versa as if they were um you know in the same cluster or",
    "start": "878320",
    "end": "884480"
  },
  {
    "text": "you know just via the same layer just a single layer three network they things out the pods outside of this",
    "start": "884480",
    "end": "892160"
  },
  {
    "text": "uh that are in those clusters that are not part of this connectivity domain cannot reach things across the",
    "start": "892160",
    "end": "899519"
  },
  {
    "text": "uh cluster boundary because they are not enabled um they're not connected to the nse",
    "start": "899519",
    "end": "907279"
  },
  {
    "start": "906000",
    "end": "929000"
  },
  {
    "text": "so connectivity domains are a totally an opt-in approach to uh to connect to joining um",
    "start": "907440",
    "end": "914560"
  },
  {
    "text": "to multi-cloud connectivity um there only the workloads that are part of the connected activity domain are a part of that so",
    "start": "914560",
    "end": "922000"
  },
  {
    "text": "there's no need for extra multi inter-cluster network policy so",
    "start": "922000",
    "end": "930000"
  },
  {
    "start": "929000",
    "end": "1061000"
  },
  {
    "text": "this is um now we're going to transition into the how the tess and nsm are integrated",
    "start": "930000",
    "end": "936959"
  },
  {
    "text": "with the virtual layer 3 nses so like in the previous slide um",
    "start": "936959",
    "end": "943600"
  },
  {
    "text": "with about the with the example for the nfcs we have now of the test deployment that's",
    "start": "943600",
    "end": "949120"
  },
  {
    "text": "that's in the connectivity domain that is between multiple clusters and the test",
    "start": "949120",
    "end": "955279"
  },
  {
    "text": "deployment has multiple pods and there's multiple reasons for those pods",
    "start": "955279",
    "end": "961680"
  },
  {
    "text": "to be able to communicate with the other clusters instances of different pods",
    "start": "961680",
    "end": "968320"
  },
  {
    "text": "so all of those in our uh in the deployment are all the content in in these the tests",
    "start": "968320",
    "end": "975600"
  },
  {
    "text": "deployments are a part of the connectivity domain and then the connectivity domain also",
    "start": "975600",
    "end": "981360"
  },
  {
    "text": "has some additional services like uh dns that is um",
    "start": "981360",
    "end": "986720"
  },
  {
    "text": "dns only for the the workloads that are connected in that",
    "start": "986720",
    "end": "992000"
  },
  {
    "text": "connectivity domain so there's a dns representation for service for the service workload for the",
    "start": "992000",
    "end": "998720"
  },
  {
    "text": "workloads that are in in that connectivity domain um so this is a kind of a breakout of",
    "start": "998720",
    "end": "1006880"
  },
  {
    "text": "which the pods are deployed where um in in this example um the the",
    "start": "1006880",
    "end": "1014800"
  },
  {
    "text": "planet scale operator deploys uh vtga vt tablet in in both uh clusters put it at xcd in a",
    "start": "1014800",
    "end": "1022399"
  },
  {
    "text": "single cluster and the vt gates can reach either any vt tablet so that that kind of",
    "start": "1022399",
    "end": "1029600"
  },
  {
    "text": "fulfills your data location uh use case so since you can",
    "start": "1029600",
    "end": "1036959"
  },
  {
    "text": "localize shards or tables according to your regulations location regulations",
    "start": "1036959",
    "end": "1044400"
  },
  {
    "text": "and then the vt tablets can reach each other across the connectivity domain and that would solve your data replication",
    "start": "1044400",
    "end": "1051360"
  },
  {
    "text": "multi-site data replication use cases so both of these use cases are",
    "start": "1051360",
    "end": "1056640"
  },
  {
    "text": "solved just by the singular type of deployment okay so we're going to do the an actual",
    "start": "1056640",
    "end": "1064080"
  },
  {
    "start": "1061000",
    "end": "1373000"
  },
  {
    "text": "demo where we show the pre what deployment like what the previous slide showed",
    "start": "1064080",
    "end": "1070400"
  },
  {
    "text": "so the details of this demo are a two kubernetes cluster setup with nsm",
    "start": "1071440",
    "end": "1078840"
  },
  {
    "text": "installed the nse control services that i showed in the previous slide",
    "start": "1078840",
    "end": "1084080"
  },
  {
    "text": "where with for dns and ipam and um and the registry are in",
    "start": "1084080",
    "end": "1089120"
  },
  {
    "text": "a third cluster so they're not going to be shown but they're they're there um and then the the actual",
    "start": "1089120",
    "end": "1096480"
  },
  {
    "text": "demo flow uh we're going to set up um the virtual layer three network service",
    "start": "1096480",
    "end": "1102960"
  },
  {
    "text": "endpoints in each cluster and that's gonna be a script that does that so it's gonna be hard to follow but",
    "start": "1102960",
    "end": "1108880"
  },
  {
    "text": "the gist is that it it installs the nses and it has them registered as",
    "start": "1108880",
    "end": "1115919"
  },
  {
    "text": "a network service named vitesse and and they're configured to be a part",
    "start": "1115919",
    "end": "1122160"
  },
  {
    "text": "of the connectivity domain with the same name so they're going to be configured to point back at those",
    "start": "1122160",
    "end": "1128320"
  },
  {
    "text": "uh nse services that are in the control of the other third cluster",
    "start": "1128320",
    "end": "1137840"
  },
  {
    "text": "then we're going to deploy the test pause to both clusters as virtual l3 ns clients we're going to be using the",
    "start": "1144720",
    "end": "1152880"
  },
  {
    "text": "the test operator for kubernetes to do the handle the test deployment because it not only",
    "start": "1152880",
    "end": "1158320"
  },
  {
    "text": "automates the deployment of the test it will automate the management of a test on kubernetes as well",
    "start": "1158320",
    "end": "1165200"
  },
  {
    "text": "then we will use for test to create a database table and shard config that will illustrate the um",
    "start": "1165200",
    "end": "1173840"
  },
  {
    "text": "connectivity domains and then we'll show the shards are split between the clusters um via use of separate",
    "start": "1174000",
    "end": "1182160"
  },
  {
    "text": "the test cells and then we will show replication across this clusters by uh using uh a control a",
    "start": "1182160",
    "end": "1189919"
  },
  {
    "text": "planned failover has a way of illustrating that there's inter-cluster network provided",
    "start": "1189919",
    "end": "1196559"
  },
  {
    "text": "through the virtual l3 connectivity domain",
    "start": "1196559",
    "end": "1201039"
  },
  {
    "text": "so now we here we are with a demo and we are going to have an installer cluster uh in the in europe cluster in",
    "start": "1204559",
    "end": "1212080"
  },
  {
    "text": "the americas um and each of those are going to be a not only of a test cell but a cluster in",
    "start": "1212080",
    "end": "1218840"
  },
  {
    "text": "nsm and then we'll start off with installing the virtual l3 nfcs in both clusters um",
    "start": "1218840",
    "end": "1227440"
  },
  {
    "text": "this will take a few seconds and then wall of text but no it comes through",
    "start": "1227440",
    "end": "1234720"
  },
  {
    "text": "and there we go we now have nfc running in both clusters",
    "start": "1234720",
    "end": "1239440"
  },
  {
    "text": "and next up we are going to install the test in the americas region this will be our primary region so we are going to",
    "start": "1239840",
    "end": "1245120"
  },
  {
    "text": "put our topology servers running on ncd and in the americas regions um we are using the tess uh",
    "start": "1245120",
    "end": "1252559"
  },
  {
    "text": "kubernetes operator to handle all of this um we just feed it a cluster configuration and the test and",
    "start": "1252559",
    "end": "1258799"
  },
  {
    "text": "the operator then handles bringing up each of the cds the tablets",
    "start": "1258799",
    "end": "1264000"
  },
  {
    "text": "and the control plane as well and then follow that up with the bt gates which provide the",
    "start": "1264000",
    "end": "1269600"
  },
  {
    "text": "connectivity to not only this local cluster this local cell it will also provide connectivity to the other cell",
    "start": "1269600",
    "end": "1277440"
  },
  {
    "text": "here we go with europe we told the operator to apply the nsm",
    "start": "1277440",
    "end": "1283840"
  },
  {
    "text": "connectivity domain annotation to all pods in the vites cluster and since the operator is also managing",
    "start": "1283840",
    "end": "1289120"
  },
  {
    "text": "the tablets with just a couple lines of code it extends the annotation so nsm registers a service for each tablet",
    "start": "1289120",
    "end": "1295919"
  },
  {
    "text": "so they can communicate across the clouds using the nsm connectivity domain",
    "start": "1295919",
    "end": "1302000"
  },
  {
    "text": "and then now that all tablets are ready that means they are connected and they're um it has now",
    "start": "1302000",
    "end": "1308240"
  },
  {
    "text": "chosen a master and the replicas are connected um",
    "start": "1308240",
    "end": "1313679"
  },
  {
    "text": "and each region has both both things and we can see the nsm network",
    "start": "1313679",
    "end": "1322640"
  },
  {
    "text": "services are now configured with the virtual ll3s",
    "start": "1322640",
    "end": "1333840"
  },
  {
    "text": "and here's our ns endpoints as well as the annotation that shows us",
    "start": "1334480",
    "end": "1341919"
  },
  {
    "text": "attaching the deployment to the connectivity domain",
    "start": "1341919",
    "end": "1347840"
  },
  {
    "text": "and same thing in the europe cluster",
    "start": "1353039",
    "end": "1360080"
  },
  {
    "text": "the same network surface endpoints as well as the annotations that tells the uh",
    "start": "1360080",
    "end": "1367840"
  },
  {
    "text": "injects the um the the sidecar into our pods",
    "start": "1368320",
    "end": "1374880"
  },
  {
    "start": "1373000",
    "end": "1759000"
  },
  {
    "text": "here's our test control panel we have two shards in the user database",
    "start": "1374880",
    "end": "1380080"
  },
  {
    "text": "hyphen 40 where we have the americas has the master and a replica in europe",
    "start": "1380080",
    "end": "1389520"
  },
  {
    "text": "as well as a second chart of uh everything greater than 40 is only in europe um because we will map all",
    "start": "1389520",
    "end": "1397679"
  },
  {
    "text": "uh european all non-america's users into the european cluster here is our",
    "start": "1397679",
    "end": "1405760"
  },
  {
    "text": "table and we will have a full name national id",
    "start": "1405760",
    "end": "1413280"
  },
  {
    "text": "and country we will use country as our way of routing our users",
    "start": "1413280",
    "end": "1419360"
  },
  {
    "text": "we tell the test to use a a the index based on the",
    "start": "1419360",
    "end": "1426400"
  },
  {
    "text": "the country that is provided by the user",
    "start": "1426400",
    "end": "1431840"
  },
  {
    "text": "we have a static mapping in a json file that is just says country name of a country to a sharding",
    "start": "1432000",
    "end": "1438960"
  },
  {
    "text": "key and that charting key then is applies to the key space of being less than 40 or greater than",
    "start": "1438960",
    "end": "1446320"
  },
  {
    "text": "40. here you can see this the same two shards in the",
    "start": "1446320",
    "end": "1453120"
  },
  {
    "text": "hyphen 40 key space and here's our the european equivalent",
    "start": "1453120",
    "end": "1460159"
  },
  {
    "text": "showing that they're only in europe",
    "start": "1460159",
    "end": "1463679"
  },
  {
    "text": "and the control panel also gives us the same detail and shows us that each tablet",
    "start": "1467760",
    "end": "1472880"
  },
  {
    "text": "which table it is and which one is the current master",
    "start": "1472880",
    "end": "1476960"
  },
  {
    "text": "we are now going to watch the query logs of each of the tablets so that we can see how the test is",
    "start": "1479600",
    "end": "1485440"
  },
  {
    "text": "routing the queries locally and across the connectivity domain",
    "start": "1485440",
    "end": "1492799"
  },
  {
    "text": "so now we're going to start a mysql client that is not just attached to the connectivity domain and it will not",
    "start": "1496799",
    "end": "1503200"
  },
  {
    "text": "allow us to use the special nse that we created for the vtga",
    "start": "1503200",
    "end": "1515120"
  },
  {
    "text": "however since we did not disable the local kubernetes service definition there is still the the",
    "start": "1515120",
    "end": "1520960"
  },
  {
    "text": "kubernetes um service cluster service that is is created for the vt-gates for local",
    "start": "1520960",
    "end": "1529039"
  },
  {
    "text": "services to connect to",
    "start": "1529039",
    "end": "1531919"
  },
  {
    "text": "and that is still available to use",
    "start": "1539039",
    "end": "1543840"
  },
  {
    "text": "however if we do start a mysql client within the connectivity domain",
    "start": "1548880",
    "end": "1553919"
  },
  {
    "text": "then it will be able to use the connectivity and service name to connect",
    "start": "1553919",
    "end": "1559200"
  },
  {
    "text": "and we'll be able to disable the vt gate service kubernetes service entirely so that only connectivity domain",
    "start": "1559200",
    "end": "1565840"
  },
  {
    "text": "pods can be there so now we're inserting some data making uh one into the us and one with a french",
    "start": "1565840",
    "end": "1572640"
  },
  {
    "text": "a french national and you'll see that um it only went the us citizen went to the",
    "start": "1572640",
    "end": "1578960"
  },
  {
    "text": "america's master the french citizen went into the european master",
    "start": "1578960",
    "end": "1585279"
  },
  {
    "text": "we'll now do a select query you can see we were able to to get the data from both by from both masters",
    "start": "1585279",
    "end": "1592960"
  },
  {
    "text": "in in both different regions",
    "start": "1592960",
    "end": "1599840"
  },
  {
    "text": "then we can instruct the vtga to only direct queries to a single cell in this case we're saying we're going to",
    "start": "1602400",
    "end": "1608480"
  },
  {
    "text": "query only the american shard so now we only see the u.s system we inserted",
    "start": "1608480",
    "end": "1614640"
  },
  {
    "text": "and then we can do the same thing with the european chart",
    "start": "1617120",
    "end": "1621200"
  },
  {
    "text": "and now we can only see the french",
    "start": "1624799",
    "end": "1628559"
  },
  {
    "text": "citizen",
    "start": "1638840",
    "end": "1641840"
  },
  {
    "text": "so now we are going to do a failover of the uh america's master into the",
    "start": "1646240",
    "end": "1653120"
  },
  {
    "text": "european region say if you wanted to do some maintenance and with your in the americas region we can",
    "start": "1653120",
    "end": "1659279"
  },
  {
    "text": "now do a plan repair which is a planned failover that your application would not notice",
    "start": "1659279",
    "end": "1666640"
  },
  {
    "text": "at all because the vt gate will pause the query while this repair occurs",
    "start": "1666640",
    "end": "1672799"
  },
  {
    "text": "so now we can see that the master is now in the european cell and the americas is",
    "start": "1679919",
    "end": "1686720"
  },
  {
    "text": "now a replica and while still connected to the the",
    "start": "1686720",
    "end": "1692159"
  },
  {
    "text": "america's vt gate we can see that it routed the query to the european replica",
    "start": "1692159",
    "end": "1698240"
  },
  {
    "text": "through the connectivity domain",
    "start": "1698240",
    "end": "1701360"
  },
  {
    "text": "and then we can still perform normal scatter gather queries in this case now in both replica",
    "start": "1703919",
    "end": "1710080"
  },
  {
    "text": "shards are entirely in the uh european cell we'll now fail back",
    "start": "1710080",
    "end": "1715679"
  },
  {
    "text": "um to the to the americas uh cell for the american shard um",
    "start": "1715679",
    "end": "1722880"
  },
  {
    "text": "and we can show that is we are now failed back over",
    "start": "1723120",
    "end": "1729360"
  },
  {
    "text": "we can insert more data to show that it the insert now goes to the america shard",
    "start": "1730799",
    "end": "1739840"
  },
  {
    "text": "and we'll do another scouting guide to show that the data we inserted while the european chart was",
    "start": "1740559",
    "end": "1745679"
  },
  {
    "text": "masters there as well as the the last insert of the canadian citizen um after we failed back to the americas",
    "start": "1745679",
    "end": "1753840"
  },
  {
    "text": "uh so that was that's our talk um for references the nsm there's some links here for",
    "start": "1760080",
    "end": "1767120"
  },
  {
    "text": "the nsm project and the virtual layer 3 nse that we've worked on at cisco",
    "start": "1767120",
    "end": "1774640"
  },
  {
    "text": "and the vitesse project and their planet scale operator that you saw live",
    "start": "1774640",
    "end": "1779760"
  },
  {
    "text": "in the demo that was what was orchestrating the whole the test installation",
    "start": "1779760",
    "end": "1785200"
  },
  {
    "text": "this is the remaining the test schedule",
    "start": "1785200",
    "end": "1790398"
  },
  {
    "text": "some of these have happened but they're interesting talks that you may want to check out recordings of and similarly",
    "start": "1791279",
    "end": "1798080"
  },
  {
    "text": "the nsm con was a day zero event that had a couple of",
    "start": "1798080",
    "end": "1806240"
  },
  {
    "text": "talks that would be directly useful if you're interested in nsm",
    "start": "1806240",
    "end": "1811919"
  },
  {
    "text": "interdomain and virtual layer 3. and the keynote",
    "start": "1811919",
    "end": "1818559"
  },
  {
    "text": "was on the previous slide would have discussed it a little bit and then there's a talk coming up on thursday that's going",
    "start": "1818720",
    "end": "1826559"
  },
  {
    "text": "to have a lot more of the new the latest and greatest details for the network service mesh project",
    "start": "1826559",
    "end": "1834639"
  },
  {
    "text": "um thank you and this is uh our contact information and",
    "start": "1834720",
    "end": "1841760"
  },
  {
    "text": "have a great conference thanks thank you everybody",
    "start": "1841760",
    "end": "1848960"
  }
]