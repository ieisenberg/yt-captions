[
  {
    "text": "preparations in the legacy days got it right pro quo I'm trying to get paid chillin out maxin then deploying I'll",
    "start": "0",
    "end": "6690"
  },
  {
    "text": "cool got FTP to the server pool when a couple configs they were drifting a miss",
    "start": "6690",
    "end": "12030"
  },
  {
    "text": "trying to get sleep got paged on this how to work all words and then where's Whistler finally sit up one of those hot",
    "start": "12030",
    "end": "18930"
  },
  {
    "text": "Kate clusters first-class declarative apps drinking mounting jus out of a",
    "start": "18930",
    "end": "24029"
  },
  {
    "text": "champagne glass is this what the people at Google a living like hey this might",
    "start": "24029",
    "end": "29279"
  },
  {
    "text": "be alright roll out of version and the app reels fast things looking great on the metrics graft deploy in all day like",
    "start": "29279",
    "end": "36930"
  },
  {
    "text": "NBD check the logs users get in 503 got",
    "start": "36930",
    "end": "51390"
  },
  {
    "text": "a little too hype there I guess alright",
    "start": "51390",
    "end": "57110"
  },
  {
    "text": "so this this is not something that's super great right anybody ever seen this",
    "start": "57530",
    "end": "63390"
  },
  {
    "text": "page before as a user or more mortifyingly as an operator right alright so talk today is about the",
    "start": "63390",
    "end": "71520"
  },
  {
    "text": "gotchas of zero downtime traffic on kubernetes cuz I gotta tell you the",
    "start": "71520",
    "end": "76650"
  },
  {
    "text": "defaults are not gonna take you to where you want to go but before we get too",
    "start": "76650",
    "end": "82200"
  },
  {
    "text": "deep into heavy crazy llam√≥ definitions and the long really really really long",
    "start": "82200",
    "end": "88290"
  },
  {
    "text": "words like termination grace period I just want to talk a little bit about what it means to deploy with zero",
    "start": "88290",
    "end": "94290"
  },
  {
    "text": "downtime because we've been doing this for a long time kubernetes is not a new thing it captures patterns that we've",
    "start": "94290",
    "end": "100140"
  },
  {
    "text": "been sharing with each other in the community for you know quite a while years and years and years on several platforms",
    "start": "100140",
    "end": "105570"
  },
  {
    "text": "you know people writing deployment scripts on ec2 you know in your VMware cloud and so if you've got two verses of",
    "start": "105570",
    "end": "113430"
  },
  {
    "text": "an app save blue and green the first thing that you should be very aware of especially if you work on a software",
    "start": "113430",
    "end": "119549"
  },
  {
    "text": "team here is that as you're shifting traffic over in between versions your",
    "start": "119549",
    "end": "127530"
  },
  {
    "text": "code needs to be able to serve traffic from multiple versions at the same time the second thing I could talk about is",
    "start": "127530",
    "end": "133659"
  },
  {
    "text": "screens like this right so normally when you deploy an app you get your server's up and then you spin up that second set",
    "start": "133659",
    "end": "139579"
  },
  {
    "text": "of servers and then the first thing you're gonna do is you're going to look at the HTTP box right so we got SSH",
    "start": "139579",
    "end": "146540"
  },
  {
    "text": "we're getting in we're checking engine X we're seeing our users they're happy they're looking at our service except",
    "start": "146540",
    "end": "153920"
  },
  {
    "text": "you're a pro so you don't just look at like one log you've got like six terminals open there's the empty ones",
    "start": "153920",
    "end": "159310"
  },
  {
    "text": "right yeah yeah everyone there's some people here have done this and you're",
    "start": "159310",
    "end": "165590"
  },
  {
    "text": "expecting you're gonna shift this traffic over right from the top once to the bottom once you got the a group in",
    "start": "165590",
    "end": "171230"
  },
  {
    "text": "the B group so all of your applications are up and ready they didn't start that",
    "start": "171230",
    "end": "176870"
  },
  {
    "text": "way you had to wait for them to start up because we're using Java and then um you're shifting the traffic over right",
    "start": "176870",
    "end": "182480"
  },
  {
    "text": "you're in the low balancer config like sending a cig to engine X and now you're",
    "start": "182480",
    "end": "189319"
  },
  {
    "text": "in the connection draining period right because you know it's like when you actually update that config there's still stuff going to those old servers",
    "start": "189319",
    "end": "197079"
  },
  {
    "text": "then once everything's kind of done you can send this magical signal to your",
    "start": "197079",
    "end": "202190"
  },
  {
    "text": "application maybe it's a sig term maybe it's a huff or something and then you tell the app okay nothing is coming",
    "start": "202190",
    "end": "207620"
  },
  {
    "text": "anymore but if you're still working on any Kress requests like maybe there's",
    "start": "207620",
    "end": "213199"
  },
  {
    "text": "like a 30 second latency on some crazy service you have make sure to finish that I'm gonna send you a graceful",
    "start": "213199",
    "end": "218720"
  },
  {
    "text": "signal give you a chance to shut yourself down and if something's gone really wrong you know after a really",
    "start": "218720",
    "end": "224359"
  },
  {
    "text": "long time it's like in five minutes you just got to go send those things that kill now you're on the B group right",
    "start": "224359",
    "end": "229699"
  },
  {
    "text": "great so we've been talking about kubernetes mostly at this conference a",
    "start": "229699",
    "end": "237319"
  },
  {
    "text": "lot of other great technologies but many of us are concerned with the quality of the platform that we put onto these",
    "start": "237319",
    "end": "243409"
  },
  {
    "text": "servers running this new project community run captures really great patterns and kubernetes has a couple of",
    "start": "243409",
    "end": "250519"
  },
  {
    "text": "API objects the major one is the pod each pod gets an IP you also have",
    "start": "250519",
    "end": "256010"
  },
  {
    "text": "services services are built up of a label select they're usually on a end",
    "start": "256010",
    "end": "261950"
  },
  {
    "text": "point list right so those IPS that those pods have the service has its own individual",
    "start": "261950",
    "end": "267200"
  },
  {
    "text": "virtual IP and then it points to all the end points that endpoints API is really",
    "start": "267200",
    "end": "272930"
  },
  {
    "text": "important and then we have this component called coop proxy that runs on the nodes and updates it to make their",
    "start": "272930",
    "end": "279950"
  },
  {
    "text": "sure that cluster IVs work additionally ingress controllers are super interested in endpoints right so",
    "start": "279950",
    "end": "288919"
  },
  {
    "text": "the service controller updates to the endpoints list with a bunch of pot IPS and the ingress is responsible for",
    "start": "288919",
    "end": "294650"
  },
  {
    "text": "configuring that load balancer right in the previous diagram we've had Engine x over on the far left and then we have",
    "start": "294650",
    "end": "302990"
  },
  {
    "text": "like other load balancers you have the solo I you go glue you have envoy a all of these things right and the load",
    "start": "302990",
    "end": "309680"
  },
  {
    "text": "balancers job is to distribute all of the requests that are coming in in some kind of central or distributed place to",
    "start": "309680",
    "end": "316010"
  },
  {
    "text": "your backends so when you're changing the backend list that API is changing",
    "start": "316010",
    "end": "321850"
  },
  {
    "text": "there's another diagram it's really not that book but this is the coop proxy thing right so you've got coup proxy",
    "start": "321850",
    "end": "329060"
  },
  {
    "text": "looking into the API server and then grabbing the endpoints list and configuring the notes so what happens",
    "start": "329060",
    "end": "336080"
  },
  {
    "text": "then when we say want to turn one of those old backends off kuba API servers",
    "start": "336080",
    "end": "343490"
  },
  {
    "text": "receives a delete from something pod should no longer exist and it goes",
    "start": "343490",
    "end": "349220"
  },
  {
    "text": "through the state machine I'm gonna mark the pot as terminating and as a async",
    "start": "349220",
    "end": "355010"
  },
  {
    "text": "consequence of the pod being marked terminating the service controller will",
    "start": "355010",
    "end": "360860"
  },
  {
    "text": "remove the endpoint from the list that means that at some point your ingress controller is gonna stop routing things",
    "start": "360860",
    "end": "367580"
  },
  {
    "text": "there right at that same time any pre stop hooks are gonna run you might not",
    "start": "367580",
    "end": "374510"
  },
  {
    "text": "know about life cycle and priests top hooks yet and then the first process inside of the",
    "start": "374510",
    "end": "381110"
  },
  {
    "text": "container will receive a sig term you cannot really change this much in",
    "start": "381110",
    "end": "387440"
  },
  {
    "text": "kubernetes officially then the termination grace period starts so your",
    "start": "387440",
    "end": "394669"
  },
  {
    "text": "application now has by default 30 seconds to gracefully shut itself down in the",
    "start": "394669",
    "end": "401280"
  },
  {
    "text": "polite way right it's like kubernetes hey I'll give you some time and then if the termination grace period passes and",
    "start": "401280",
    "end": "407550"
  },
  {
    "text": "the app hasn't fully exited paid ones still running inside of the container then kubernetes will politely rip the",
    "start": "407550",
    "end": "415800"
  },
  {
    "text": "process table out from the kernel so all right so here's the gotcha number one",
    "start": "415800",
    "end": "423620"
  },
  {
    "text": "let's just talk about signal handling for a second say you write a docker file and then you just write command and like",
    "start": "423620",
    "end": "430979"
  },
  {
    "text": "some random string you don't use the array syntax well that guy rats that gets wrapped in a shell and shells like",
    "start": "430979",
    "end": "438240"
  },
  {
    "text": "SH and bash they don't pass signals like",
    "start": "438240",
    "end": "443490"
  },
  {
    "text": "you would expect them to so this is not something that you want to do in images",
    "start": "443490",
    "end": "449909"
  },
  {
    "text": "you kind of want to lint your docker files to make sure that you are using these array syntax such as this entry",
    "start": "449909",
    "end": "455999"
  },
  {
    "text": "point where you have the quoted brackets if you're gonna use a shell I would do",
    "start": "455999",
    "end": "461669"
  },
  {
    "text": "it explicitly you know an invoke a script like a docker entry point SH you see that commonly and that script ax can",
    "start": "461669",
    "end": "468719"
  },
  {
    "text": "then pass signals and do traps and all that kind of stuff if you need to do scripting so the second thing is I",
    "start": "468719",
    "end": "476189"
  },
  {
    "text": "talked about stop signal and I mentioned that you can't officially override this thing in kubernetes kubernetes is",
    "start": "476189",
    "end": "481409"
  },
  {
    "text": "documented and will always kind of just send that sig if you're using docker and container D",
    "start": "481409",
    "end": "488509"
  },
  {
    "text": "and I believe I don't know cryo may support this as well you can override in",
    "start": "488509",
    "end": "494099"
  },
  {
    "text": "your image a stop signal and this will be respected so instead of sending a cig",
    "start": "494099",
    "end": "500339"
  },
  {
    "text": "if say you're running engine x4 serving static assets inside of your cluster you",
    "start": "500339",
    "end": "506069"
  },
  {
    "text": "may need to override the image to be stopped with sig hub right for a formal",
    "start": "506069",
    "end": "512159"
  },
  {
    "text": "graceful shutdown or you whiskey does some other really insane stuff when you send it a sig term and there are some",
    "start": "512159",
    "end": "518789"
  },
  {
    "text": "ways to configure around that but basically not all apps are gonna behave in the same kind of semantics when you",
    "start": "518789",
    "end": "526350"
  },
  {
    "text": "send them a signal what else did I write here",
    "start": "526350",
    "end": "532010"
  },
  {
    "text": "yeah it's not it's not clear to me whether this directive is formally supported by CRI like if I put a stop",
    "start": "532010",
    "end": "538230"
  },
  {
    "text": "signal inside of my image if anyone knows the answer to that and whether there's like a OCI standard thing I'd",
    "start": "538230",
    "end": "543750"
  },
  {
    "text": "love to hear so it's there's no documentation so and the next thing is",
    "start": "543750",
    "end": "551070"
  },
  {
    "text": "we've heard sometimes that you got to use readiness probes liveness probes as well Henning Jacobs has a great post",
    "start": "551070",
    "end": "558210"
  },
  {
    "text": "about liveness probes I wouldn't recommend to using them right",
    "start": "558210",
    "end": "564300"
  },
  {
    "text": "out of the bat they're pretty dangerous and I can talk about some reasons why but the readiness probe if you're using",
    "start": "564300",
    "end": "570030"
  },
  {
    "text": "an HTTP service to serve your customers is very important we talked a little bit",
    "start": "570030",
    "end": "576330"
  },
  {
    "text": "about pod shut down readiness probes I would say are more important for pod start-up sometimes especially again if",
    "start": "576330",
    "end": "583290"
  },
  {
    "text": "you're using an application that has a long warmup period like something that runs on the JVM you may have a",
    "start": "583290",
    "end": "590180"
  },
  {
    "text": "significant period of time where your applications either not possible to",
    "start": "590180",
    "end": "595380"
  },
  {
    "text": "serve a connection or it may not be appropriate because it's not warm yet and so having a readiness probe with a",
    "start": "595380",
    "end": "602100"
  },
  {
    "text": "delay period initially and then using it to make sure that the application is",
    "start": "602100",
    "end": "607350"
  },
  {
    "text": "responding the couplet will run the readiness probes for you before something sends traffic to it before",
    "start": "607350",
    "end": "613440"
  },
  {
    "text": "it's marked as ready and put into your load balancer is very necessary and I've",
    "start": "613440",
    "end": "618870"
  },
  {
    "text": "marked here to be very intentional with timeouts and periods one of the reasons why liveness probes are so dangerous is",
    "start": "618870",
    "end": "625470"
  },
  {
    "text": "if your application fails aliveness probe for whatever threshold you set it",
    "start": "625470",
    "end": "631320"
  },
  {
    "text": "kills your pod and when your pod is forcefully terminated like that if you",
    "start": "631320",
    "end": "637230"
  },
  {
    "text": "can imagine your application under load then you may get some interesting behaviors it can cause cause cascading",
    "start": "637230",
    "end": "644520"
  },
  {
    "text": "failures the other thing is that probe defaults are a little bit destructive here if you have the default behavior",
    "start": "644520",
    "end": "652260"
  },
  {
    "text": "set for your liveness and readiness probe and you should go check this in your deployments please",
    "start": "652260",
    "end": "658550"
  },
  {
    "text": "then as soon as your application becomes unready it also becomes on alive",
    "start": "658550",
    "end": "664720"
  },
  {
    "text": "so that's something to watch out for you want that liveness group to be way longer of a period than your readiness",
    "start": "664720",
    "end": "671410"
  },
  {
    "text": "and to only kick out kick in very infrequently as a last resort and then",
    "start": "671410",
    "end": "678160"
  },
  {
    "text": "we talked a little bit about that shutdown lifecycle so this is where we",
    "start": "678160",
    "end": "683320"
  },
  {
    "text": "get into some semantics with kubernetes api decisions pod lifecycle is part of a",
    "start": "683320",
    "end": "691120"
  },
  {
    "text": "compute api and services and endpoints are a networking style api not every",
    "start": "691120",
    "end": "699670"
  },
  {
    "text": "compute service has to do networking the overwhelming majority of them do but",
    "start": "699670",
    "end": "704740"
  },
  {
    "text": "it's completely separate as far as a concern is going but if it's no important to us when we're doing a zero",
    "start": "704740",
    "end": "711910"
  },
  {
    "text": "downtime deploy to have this kind of orchestration of state between networking and compute it might strike",
    "start": "711910",
    "end": "719770"
  },
  {
    "text": "you as a little bit weird to know that there's really not any synchronization",
    "start": "719770",
    "end": "725040"
  },
  {
    "text": "happening between services and points and pod lifecycle for termination and so",
    "start": "725040",
    "end": "732400"
  },
  {
    "text": "one of the things that we can do is use an in-app integration or a pre stop like",
    "start": "732400",
    "end": "740170"
  },
  {
    "text": "a life cycle hook basically you can say to kubernetes hey before you actually send my APIs signal telling it to",
    "start": "740170",
    "end": "747070"
  },
  {
    "text": "politely shutdown could you please make it do something first and consider that as part of the shutdown face and you can",
    "start": "747070",
    "end": "755080"
  },
  {
    "text": "do things here like sleep the the thing to understand is that when you're pre",
    "start": "755080",
    "end": "760330"
  },
  {
    "text": "stop hook is running with the majority of network topologies but think the",
    "start": "760330",
    "end": "766360"
  },
  {
    "text": "kinds of ways that we route traffic to services in kubernetes your app is",
    "start": "766360",
    "end": "771370"
  },
  {
    "text": "likely still receiving connections and those connections are probably either by",
    "start": "771370",
    "end": "777640"
  },
  {
    "text": "proxy or directly from your users and so this means that like during a when a",
    "start": "777640",
    "end": "784810"
  },
  {
    "text": "priest stopped hook would run that is a critical point in your business you're trying to deploy new functionality",
    "start": "784810",
    "end": "790030"
  },
  {
    "text": "because you're shutting old pods down and then you may not know maybe you're",
    "start": "790030",
    "end": "796690"
  },
  {
    "text": "not at a point where you have a serve ability and metrics and what kinds of response codes you're receiving you're not tracking those things on",
    "start": "796690",
    "end": "803440"
  },
  {
    "text": "deploy and you're deploying 15 times a day now injecting this window",
    "start": "803440",
    "end": "810029"
  },
  {
    "text": "deterministically into your pod life cycle where they are receiving",
    "start": "810029",
    "end": "815170"
  },
  {
    "text": "connections and denying them basically here's a diagram we've got an active pod",
    "start": "815170",
    "end": "823410"
  },
  {
    "text": "the service and end points are feeding your node routing and your ingress controller the pot is alive and happy",
    "start": "823410",
    "end": "829829"
  },
  {
    "text": "but then you send the delete asynchronously or well the pod is marked",
    "start": "829829",
    "end": "837040"
  },
  {
    "text": "is terminating and then asynchronously the endpoints list gets updated it's now removed from endpoint consideration but",
    "start": "837040",
    "end": "845769"
  },
  {
    "text": "it might take a little bit before the nodes start realizing that that endpoint",
    "start": "845769",
    "end": "850899"
  },
  {
    "text": "is gone because they're controlling on the API server and then the pod decides",
    "start": "850899",
    "end": "856990"
  },
  {
    "text": "to shut down and the ingress controller that's still sending traffic and some node in the cluster is kind of acting a",
    "start": "856990",
    "end": "862600"
  },
  {
    "text": "little bit slow the IP tables list on that thing is just super long and it's",
    "start": "862600",
    "end": "867790"
  },
  {
    "text": "still receiving traffic this is not a good place to be and so to make that distinction when you initiate",
    "start": "867790",
    "end": "875220"
  },
  {
    "text": "termination on a pod you need to realize that you're not you don't want to stop",
    "start": "875220",
    "end": "881380"
  },
  {
    "text": "receiving connections and this is the way that a large majority of web server frameworks and applications behave you",
    "start": "881380",
    "end": "889149"
  },
  {
    "text": "want to modify your deployments so that it starts draining the connections so",
    "start": "889149",
    "end": "895529"
  },
  {
    "text": "and here's some examples you whiskey basically when you send it a turn a sig",
    "start": "895529",
    "end": "901839"
  },
  {
    "text": "term it actually restarts all of its workers and it it does so in what it calls brutally restarting them right so",
    "start": "901839",
    "end": "909939"
  },
  {
    "text": "sig term from kubernetes restart everything and drop all connections not",
    "start": "909939",
    "end": "915250"
  },
  {
    "text": "a great behavior there's a way to override that you could check this issue comment all these slides are updated on",
    "start": "915250",
    "end": "921009"
  },
  {
    "text": "the talk and then with Engine X I mentioned that you would want to override the stop signal in your docker image to be sig hub you should be",
    "start": "921009",
    "end": "927910"
  },
  {
    "text": "careful and aware that that used to be sig hub in the official upstream and then they released an update and",
    "start": "927910",
    "end": "933900"
  },
  {
    "text": "reverted it back to sig term because it was causing an issue for somebody so both of these load balancers when you",
    "start": "933900",
    "end": "942540"
  },
  {
    "text": "implement these fixes also need sleep priests top hooks in order to not drop",
    "start": "942540",
    "end": "948510"
  },
  {
    "text": "connections because they're incapable of receiving a configuration that drains for a certain period of time when",
    "start": "948510",
    "end": "954420"
  },
  {
    "text": "receiving a signal you can program your app to be this way but that does leak",
    "start": "954420",
    "end": "960630"
  },
  {
    "text": "the platform of abstraction that kubernetes has in its kind of dissonance of API synchronization between compute",
    "start": "960630",
    "end": "967890"
  },
  {
    "text": "and networking into your apps details so you should make sure that it's configurable if you decide to run it",
    "start": "967890",
    "end": "972960"
  },
  {
    "text": "that way one issue here is that you're saying oh well lis you want you're telling me to run bin sleep but I don't",
    "start": "972960",
    "end": "979140"
  },
  {
    "text": "have that in my application container sorry maybe add it I do think that we",
    "start": "979140",
    "end": "987540"
  },
  {
    "text": "should modify we should add in a handler to the life cycle hook API to have just",
    "start": "987540",
    "end": "993840"
  },
  {
    "text": "a fixed sleep so that you don't have to exec anything to get this kind of behavior so if anyone wants to write a",
    "start": "993840",
    "end": "999960"
  },
  {
    "text": "kept with me that would be great now I'm gonna do a demo I got 15 minutes thank",
    "start": "999960",
    "end": "1009230"
  },
  {
    "text": "you all right so I have a kind cluster",
    "start": "1009230",
    "end": "1014300"
  },
  {
    "text": "here if you don't know about kind it's a way to run kubernetes in docker and I prefer",
    "start": "1014300",
    "end": "1019970"
  },
  {
    "text": "this for both development of kubernetes and playing around just like this so it's a little go program and then I am",
    "start": "1019970",
    "end": "1029600"
  },
  {
    "text": "going to show you so I have a repo that was the repo that was linked in the slide it's stealthy box slash zero",
    "start": "1029600",
    "end": "1036620"
  },
  {
    "text": "downtime you can go ahead and look at this manifest and patches later I'm",
    "start": "1036620",
    "end": "1041839"
  },
  {
    "text": "using customized to get everything to kind of meld together",
    "start": "1041839",
    "end": "1047350"
  },
  {
    "text": "so I have a deployment and then there's also a service and I'm using a traffic",
    "start": "1050110",
    "end": "1055779"
  },
  {
    "text": "load balancer inside of coop system you can see so if I go ahead and do a apply",
    "start": "1055779",
    "end": "1066809"
  },
  {
    "text": "and I'm using the - k flag here cube CTL supports customize inside of it for",
    "start": "1068370",
    "end": "1075610"
  },
  {
    "text": "reasons and I'm just going to apply the kate's directory so here we can see that",
    "start": "1075610",
    "end": "1083260"
  },
  {
    "text": "kubernetes is now inactive and deployment I have for engine X pods running you can see that there's an end",
    "start": "1083260",
    "end": "1088389"
  },
  {
    "text": "points list in the bottom right corner and if traffic is working I can go ahead",
    "start": "1088389",
    "end": "1095500"
  },
  {
    "text": "and start sending connections to those four pods it's getting load balance",
    "start": "1095500",
    "end": "1101769"
  },
  {
    "text": "through the traffic load balancer on my local host so what happens man then if I",
    "start": "1101769",
    "end": "1109480"
  },
  {
    "text": "go in and I just changed something about the pods let's say I want to go to back",
    "start": "1109480",
    "end": "1115240"
  },
  {
    "text": "to version a let's go ahead and do the deploy of the Kate's directory and here",
    "start": "1115240",
    "end": "1121600"
  },
  {
    "text": "you can see this is the default behavior that kubernetes does so you can see it's doing that rolling deployment in the",
    "start": "1121600",
    "end": "1127120"
  },
  {
    "text": "bottom but if you look at that stream of connections that the two users on my laptops were sending concurrently to",
    "start": "1127120",
    "end": "1133899"
  },
  {
    "text": "those applicants to those application pods I immediately got five oh twos and then",
    "start": "1133899",
    "end": "1139630"
  },
  {
    "text": "it's also hung it's not sending any requests now if we just like wait around",
    "start": "1139630",
    "end": "1147130"
  },
  {
    "text": "for a while didn't like something spooky you will happen whoa what just happened well that",
    "start": "1147130",
    "end": "1153820"
  },
  {
    "text": "was a TCP timeout so the key here the connections timed out and the clients",
    "start": "1153820",
    "end": "1159519"
  },
  {
    "text": "were saying it that happens in a user's browser that's not a good thing you got a check for this stuff so let's try to",
    "start": "1159519",
    "end": "1166360"
  },
  {
    "text": "fix the problem I am going to patch in using customize",
    "start": "1166360",
    "end": "1173860"
  },
  {
    "text": "this custom probes patch right here so this has a readiness probe and aliveness probe you can see that I've commented",
    "start": "1173860",
    "end": "1180370"
  },
  {
    "text": "that the liveness probe is kind of dangerous and I have an initial delay that's much more significant right I",
    "start": "1180370",
    "end": "1186850"
  },
  {
    "text": "don't really want the liveness probe running a lot I want it to run in a larger period for sure then the entire",
    "start": "1186850",
    "end": "1193450"
  },
  {
    "text": "failure threshold of the readiness probe right so three times three is nine my period seconds for the liveness probe is",
    "start": "1193450",
    "end": "1199870"
  },
  {
    "text": "ten just kind of some little details there these are both just hitting the",
    "start": "1199870",
    "end": "1206080"
  },
  {
    "text": "main endpoint but ideally you would have a liveness and reading this endpoint here you can send headers I'm gonna go",
    "start": "1206080",
    "end": "1215350"
  },
  {
    "text": "ahead and patch that in so instead of just doing the Kate's directory I will customize them let's get a deployment",
    "start": "1215350",
    "end": "1222700"
  },
  {
    "text": "running so this is just probes wait for",
    "start": "1222700",
    "end": "1233500"
  },
  {
    "text": "our termination here there we go start a siege so we got the application running",
    "start": "1233500",
    "end": "1240129"
  },
  {
    "text": "of serving requests now let's do a deployment of a new version of the application let's call it now we have a",
    "start": "1240129",
    "end": "1252429"
  },
  {
    "text": "new version that's coming in with probes already in the previous pods still",
    "start": "1252429",
    "end": "1258100"
  },
  {
    "text": "getting failures it's less it's because you're no longer getting failures on the",
    "start": "1258100",
    "end": "1263139"
  },
  {
    "text": "application startup but we're still having issues on this shutdown face okay",
    "start": "1263139",
    "end": "1271590"
  },
  {
    "text": "you see the app is now up again right but that was obviously not a zero downtime deployment so the final bit",
    "start": "1271590",
    "end": "1279549"
  },
  {
    "text": "here is in addition to the probes patch we have the bin sleep twenty seconds pre",
    "start": "1279549",
    "end": "1289269"
  },
  {
    "text": "stop life cycle hook right here this is production ready right here no joke I'm not even joking",
    "start": "1289269",
    "end": "1295300"
  },
  {
    "text": "yeah that is why I have totally deployed that imp rod before you should write a open policy agent policy on this is very",
    "start": "1295300",
    "end": "1301390"
  },
  {
    "text": "important for anything that's too user facing well I think that like the only",
    "start": "1301390",
    "end": "1306790"
  },
  {
    "text": "more complicated thing you could do here is like actually query the endpoints with like coops ETL or something and",
    "start": "1306790",
    "end": "1313240"
  },
  {
    "text": "then you would have to have our back and all that other is really not good yeah write your own API synchronization so",
    "start": "1313240",
    "end": "1320500"
  },
  {
    "text": "this is much better and let's just go",
    "start": "1320500",
    "end": "1326650"
  },
  {
    "text": "ahead and make sure that that is deployed I'm always making sure that",
    "start": "1326650",
    "end": "1332560"
  },
  {
    "text": "when I'm demoing this that the pods are deployed beforehand in the same",
    "start": "1332560",
    "end": "1337630"
  },
  {
    "text": "configuration because we're changing life cycle right and so we want that shutdown stuff to be also applied when",
    "start": "1337630",
    "end": "1344110"
  },
  {
    "text": "we're doing the experiment and you can run this exact experiment with seed docker kind and coops if y'all on your",
    "start": "1344110",
    "end": "1350890"
  },
  {
    "text": "laptop so go clone the repo play with it okay well all our pods are running so",
    "start": "1350890",
    "end": "1358560"
  },
  {
    "text": "hopefully we get a zero downtime deployment here let's see we will go and",
    "start": "1358560",
    "end": "1367020"
  },
  {
    "text": "[Music] put a different string yeah zero",
    "start": "1367020",
    "end": "1373600"
  },
  {
    "text": "downtime try not to spell like a cat I",
    "start": "1373600",
    "end": "1378790"
  },
  {
    "text": "guess here yeah sure let's put that in there alright cool so let's go ahead and",
    "start": "1378790",
    "end": "1388180"
  },
  {
    "text": "get that up oh no I wasn't running the seats yes somebody said it so we'll do it again firstly we got to wait now",
    "start": "1388180",
    "end": "1398880"
  },
  {
    "text": "you can add more meows for the next planet here we go all right sweet oops",
    "start": "1409450",
    "end": "1423460"
  },
  {
    "text": "spellchecker use a spell checker all right you guys ready it's up we're",
    "start": "1423460",
    "end": "1431389"
  },
  {
    "text": "sending requests probes and a pre stop hook so here you see the rolling update",
    "start": "1431389",
    "end": "1439639"
  },
  {
    "text": "and going out we got four pods in terminating state they're running a pre stop hook they're inside of a sleep",
    "start": "1439639",
    "end": "1445429"
  },
  {
    "text": "right now they're sleepy very sleepy traffic our ingress controller is",
    "start": "1445429",
    "end": "1451250"
  },
  {
    "text": "noticing now the endpoints of a synchronously dropped out of the list the load balancer back-end gets updated",
    "start": "1451250",
    "end": "1458710"
  },
  {
    "text": "now that now the pods are shutting down they became unready engine X gracefully",
    "start": "1458710",
    "end": "1464750"
  },
  {
    "text": "dropped any connections that it was currently handling still running that's",
    "start": "1464750",
    "end": "1470510"
  },
  {
    "text": "good check that out to hundreds across the board I didn't see any red zero",
    "start": "1470510",
    "end": "1476659"
  },
  {
    "text": "downtime too [Applause]",
    "start": "1476659",
    "end": "1483760"
  },
  {
    "text": "Thanks we did it together so all right let's go back get some other gotchas",
    "start": "1483760",
    "end": "1489740"
  },
  {
    "text": "here this is I'm not done good good yeah",
    "start": "1489740",
    "end": "1500090"
  },
  {
    "text": "gotcha five so this one is a little bit less of a problem now well you should",
    "start": "1500090",
    "end": "1505520"
  },
  {
    "text": "audit your repos a lot of people are still on my kubernetes 113 114 in",
    "start": "1505520",
    "end": "1510650"
  },
  {
    "text": "production you're in a good place if you're running coop and like older versions of kubernetes still that means you got important stuff and you don't",
    "start": "1510650",
    "end": "1516650"
  },
  {
    "text": "know how to upgrade that's good I work with weave works we got get ups we'll teach you how to do that so yeah",
    "start": "1516650",
    "end": "1522820"
  },
  {
    "text": "all right so a rolling update there's this field called max unavailable it",
    "start": "1522820",
    "end": "1528260"
  },
  {
    "text": "controls basically how many pods can be unavailable during a deployment right so",
    "start": "1528260",
    "end": "1535280"
  },
  {
    "text": "you can speed things up by increasing the number and if you only have a",
    "start": "1535280",
    "end": "1541610"
  },
  {
    "text": "singleton right like say you have a stateful application that is using some",
    "start": "1541610",
    "end": "1547160"
  },
  {
    "text": "strange patterns it's like from some legacy architecture it's probably adding value to your business it's important",
    "start": "1547160",
    "end": "1553040"
  },
  {
    "text": "that that thing runs correctly what you can do is if it's zero downtime end",
    "start": "1553040",
    "end": "1558530"
  },
  {
    "text": "supports like kind of swapping some some things you either set it to one or zero",
    "start": "1558530",
    "end": "1564200"
  },
  {
    "text": "and yeah it's a bit difficult to explain like why this is necessary the default",
    "start": "1564200",
    "end": "1572450"
  },
  {
    "text": "for this change to support this edge case in apps v1 beta one but you may be",
    "start": "1572450",
    "end": "1579350"
  },
  {
    "text": "using an older version of an API I know because this bit me in broad a year ago",
    "start": "1579350",
    "end": "1584750"
  },
  {
    "text": "so go audit your all of your deployments in your repos make sure you're using the",
    "start": "1584750",
    "end": "1590480"
  },
  {
    "text": "most up-to-date apps be one we just deprecated the extensions versions of these apex please upgrade you can see",
    "start": "1590480",
    "end": "1599120"
  },
  {
    "text": "the pull request where we change the default here as well as all the reasoning six this one's way more",
    "start": "1599120",
    "end": "1606440"
  },
  {
    "text": "nuanced right so now you've got everything working you got the pod startup lifecycle happening correctly you have you",
    "start": "1606440",
    "end": "1612980"
  },
  {
    "text": "understand that you got this deployment ready sleep pretty stuff productions workaround solution for the",
    "start": "1612980",
    "end": "1619020"
  },
  {
    "text": "API design and now you're trying to control how many users are sending",
    "start": "1619020",
    "end": "1625880"
  },
  {
    "text": "requests to your apps as they start to roll out and you can start to change the",
    "start": "1625880",
    "end": "1634140"
  },
  {
    "text": "rollout strategy with men ready seconds progress deadlines seconds and the",
    "start": "1634140",
    "end": "1640470"
  },
  {
    "text": "rolling update field for max surge so max surge if you have the capacity in",
    "start": "1640470",
    "end": "1645690"
  },
  {
    "text": "your cluster and Airbnb had a story about this two days ago where they make sure that they watch the surge because a",
    "start": "1645690",
    "end": "1652770"
  },
  {
    "text": "lot of developers like things to happen super way too fast and your capacity team doesn't have the nodes ready for",
    "start": "1652770",
    "end": "1658559"
  },
  {
    "text": "all of the extra pods that your deployment wants you may want a very conservative surge the defaults are very",
    "start": "1658559",
    "end": "1665880"
  },
  {
    "text": "conservative but people like to crank that number up you watch for capacity if",
    "start": "1665880",
    "end": "1672929"
  },
  {
    "text": "you have it you can speed it up and then you want to make sure that your application rolls out appropriately with",
    "start": "1672929",
    "end": "1679290"
  },
  {
    "text": "regard to their in-memory caches or if you're rolling your cache then you need to keep those things warm hopefully that",
    "start": "1679290",
    "end": "1685559"
  },
  {
    "text": "makes sense it's really more of a data design performance thing and then the other bit",
    "start": "1685559",
    "end": "1693299"
  },
  {
    "text": "this one's a really gnarly gotcha it's a signal lifecycle we've been talking",
    "start": "1693299",
    "end": "1699809"
  },
  {
    "text": "about pods as if they only have one container inside of them and the documentation we we have a lot of work",
    "start": "1699809",
    "end": "1706350"
  },
  {
    "text": "to do in the kubernetes project in finding all of the places where we accidentally assumed this when talking",
    "start": "1706350",
    "end": "1711960"
  },
  {
    "text": "about pods the lifecycle documentation is not super clear about how signal handling and readiness like works and",
    "start": "1711960",
    "end": "1718740"
  },
  {
    "text": "we're constantly improving those if you're in sigdoc thank you so much but",
    "start": "1718740",
    "end": "1725880"
  },
  {
    "text": "basically here's an example you're running cloud sequel proxy you're in a in Google Cloud you have this database",
    "start": "1725880",
    "end": "1732990"
  },
  {
    "text": "proxy as a sidecar to your normal application you configured your application with the pre stop hook but",
    "start": "1732990",
    "end": "1740220"
  },
  {
    "text": "the cloud sequel proxy doesn't have a pre stop hook so what happens is the",
    "start": "1740220",
    "end": "1745230"
  },
  {
    "text": "cloud sequel proxy receives a sig term way before your application receives the sig",
    "start": "1745230",
    "end": "1750450"
  },
  {
    "text": "which means your applications up its receiving requests and it can't talk to",
    "start": "1750450",
    "end": "1755639"
  },
  {
    "text": "its database because the pot already shut the sidecar down so you got to make sure right I even like to add a little",
    "start": "1755639",
    "end": "1762929"
  },
  {
    "text": "bit of a buffer I like the sidecar to shut down like way after the application and again I I'd say that probably the",
    "start": "1762929",
    "end": "1771960"
  },
  {
    "text": "easiest way if you don't want to write crazy synchronization logic with a volume mount that's shared and then an",
    "start": "1771960",
    "end": "1777480"
  },
  {
    "text": "empty derp that's a tempo fest between multiple containers that are messaging each other through a file and some",
    "start": "1777480",
    "end": "1783960"
  },
  {
    "text": "random directory that you configure in your apps and the proxy is wrapped in a shell script and anyway don't do that",
    "start": "1783960",
    "end": "1790619"
  },
  {
    "text": "just you sleep please right sleep sleep longer on the sidecar where",
    "start": "1790619",
    "end": "1796470"
  },
  {
    "text": "she maybe maybe maybe maybe feature shipping a feature in 118",
    "start": "1796470",
    "end": "1801480"
  },
  {
    "text": "to kind of help with this problem but yeah i gets racy and there's that gotcha and we end up with what I call like the",
    "start": "1801480",
    "end": "1811470"
  },
  {
    "text": "seven rules of uptime I don't know a trademark so your entry point you got to",
    "start": "1811470",
    "end": "1817919"
  },
  {
    "text": "watch that your containers are configured correctly if you're wrapping things and scripts pass the signals to",
    "start": "1817919",
    "end": "1824840"
  },
  {
    "text": "your stop signal may need to be changed and in a way that is unclear whether or",
    "start": "1824840",
    "end": "1831239"
  },
  {
    "text": "not it's compatible with CRI but it works trust me three not just",
    "start": "1831239",
    "end": "1839429"
  },
  {
    "text": "different periods but use a greater set of periods and latencies and delays for",
    "start": "1839429",
    "end": "1844440"
  },
  {
    "text": "your liveness probes if you decide to use liveness probes which are very dangerous and make sure that your",
    "start": "1844440",
    "end": "1850409"
  },
  {
    "text": "readiness probes are appropriately configured for most important one if",
    "start": "1850409",
    "end": "1856499"
  },
  {
    "text": "there's anything that anybody can take away from this make sure all of your user facing anything that you don't want",
    "start": "1856499",
    "end": "1863909"
  },
  {
    "text": "to ship of 500 to another front end unintentionally it's gotta have a pre",
    "start": "1863909",
    "end": "1869609"
  },
  {
    "text": "stop hook and I would recommend you just sleep in it 5 update to apps if you want",
    "start": "1869609",
    "end": "1875820"
  },
  {
    "text": "on your deployments it's got a nice edge case thing that's uses a percentage now for the replica count",
    "start": "1875820",
    "end": "1881690"
  },
  {
    "text": "six keep your app warm during the rolling update right and so you may have to edit the time and then just kind of",
    "start": "1881690",
    "end": "1889250"
  },
  {
    "text": "eat the fact that it actually does take 15 minutes to deploy your application that's not that's just something you can",
    "start": "1889250",
    "end": "1894380"
  },
  {
    "text": "rip down into 20 seconds in fact if you have a very large number of replicas",
    "start": "1894380",
    "end": "1900380"
  },
  {
    "text": "sets with high replicas thing you may be deploying for an hour on kubernetes in order to do it safely and then seven",
    "start": "1900380",
    "end": "1907730"
  },
  {
    "text": "make sure you synchronize the shutdown of your sidecars and that includes service meshes and connections to databases education proxies and all that",
    "start": "1907730",
    "end": "1914840"
  },
  {
    "text": "so hopefully that's helpful the repo is",
    "start": "1914840",
    "end": "1921170"
  },
  {
    "text": "up on github feel free to clone it it's got a very small number of dependencies I encourage",
    "start": "1921170",
    "end": "1926750"
  },
  {
    "text": "you to try it out on your laptop so that you understand why those lifecycle patches are important for all of your",
    "start": "1926750",
    "end": "1933290"
  },
  {
    "text": "user facing deployments they're simple but they're not default and the reasons",
    "start": "1933290",
    "end": "1938630"
  },
  {
    "text": "why those simple patches need to apply themselves to all of your deployments in order to keep your users safe and it'll",
    "start": "1938630",
    "end": "1945590"
  },
  {
    "text": "keep delivering value to your business with a high SLA those reasons are not simple they're part of a legacy of",
    "start": "1945590",
    "end": "1953210"
  },
  {
    "text": "pragmatic design choices that separate concerns between compute and networking and we've also just learned a lot more",
    "start": "1953210",
    "end": "1961480"
  },
  {
    "text": "on how to operate kubernetes in a production-ready way that keeps",
    "start": "1961480",
    "end": "1966680"
  },
  {
    "text": "everything working correctly so my Twitter and my github are here feel free",
    "start": "1966680",
    "end": "1972770"
  },
  {
    "text": "to reach out to me my DMS are open I'm on the kubernetes slack and I'd love to be your friend",
    "start": "1972770",
    "end": "1977900"
  },
  {
    "text": "me to learn about you of what you're doing Thanks [Applause]",
    "start": "1977900",
    "end": "1991359"
  }
]