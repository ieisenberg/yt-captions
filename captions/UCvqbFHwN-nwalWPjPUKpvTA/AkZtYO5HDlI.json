[
  {
    "text": "hi thanks for coming to this webinar on building your API platforms with backstage and",
    "start": "280",
    "end": "5440"
  },
  {
    "text": "graphql my name is Michael Watson and I lead developer advocacy at Apollo I've been obsessed with graphc ever since I",
    "start": "5440",
    "end": "12200"
  },
  {
    "text": "started using it back in 2018 and I truly believe graphel makes your apis",
    "start": "12200",
    "end": "17400"
  },
  {
    "text": "better I have a lot of other online talks where I go into more detail of why I believe that and I've worked with a",
    "start": "17400",
    "end": "24199"
  },
  {
    "text": "lot of different Enterprises on their graph kill adoption and a lot of those have been in the context of an internal",
    "start": "24199",
    "end": "29359"
  },
  {
    "text": "developer port and the developer experience behind graphql is fantastic and the context of",
    "start": "29359",
    "end": "36320"
  },
  {
    "text": "an internal developer portal really you can enable self-service workflows around consuming and contributing to your",
    "start": "36320",
    "end": "43079"
  },
  {
    "text": "platform apis so my goal for this webinar today is is to share you know",
    "start": "43079",
    "end": "48440"
  },
  {
    "text": "what I've seen successful at other companies and that starts with graphql and the architecture of your API",
    "start": "48440",
    "end": "54600"
  },
  {
    "text": "platform and then we'll come move into you know how to integrate things uh and the API into",
    "start": "54600",
    "end": "60960"
  },
  {
    "text": "backstage so let's talk about the agenda today right so I intend to give a backstage demo but we need to discuss",
    "start": "60960",
    "end": "68400"
  },
  {
    "text": "and digress a little bit into graphql just so we're all on the same page um",
    "start": "68400",
    "end": "73560"
  },
  {
    "text": "this includes a little discussion around the architecture um an architecture that we've seen successful and proven inside",
    "start": "73560",
    "end": "79920"
  },
  {
    "text": "of uh platforms built on top of graphql uh then we'll actually get into",
    "start": "79920",
    "end": "85040"
  },
  {
    "text": "backstage and um we'll show some tips of exactly how you can configure backstage for graphql there's also a repo that",
    "start": "85040",
    "end": "92280"
  },
  {
    "text": "I'll share at the end of this that contains all the code and examples and screens I show today so what is graphql um a common",
    "start": "92280",
    "end": "100640"
  },
  {
    "text": "misconception I find is people think that graphql is a database well graphql",
    "start": "100640",
    "end": "105799"
  },
  {
    "text": "is not a database um it's actually a query language there's a spec behind it um this was created in 2015 or it was",
    "start": "105799",
    "end": "113040"
  },
  {
    "text": "open sourc in 2015 by Facebook and uh graph kill is really what Facebook used",
    "start": "113040",
    "end": "118439"
  },
  {
    "text": "to create their graph and how face Facebook their website talked with their back end um later on Facebook donated uh",
    "start": "118439",
    "end": "125479"
  },
  {
    "text": "graphql to the Linux foundation in 2019 and fast forward to today um we have the graph kill foundation so this is similar",
    "start": "125479",
    "end": "132760"
  },
  {
    "text": "to the cncf foundation you know both of them are a part of the Linux foundation and I've been trying to personally work",
    "start": "132760",
    "end": "138840"
  },
  {
    "text": "on connecting more of the graph kill world with the cloud native World um because May of the large Enterprises I",
    "start": "138840",
    "end": "144760"
  },
  {
    "text": "have worked with uh not only did they adopt graph Gill they also kind of went the path of trusted CN c f projects",
    "start": "144760",
    "end": "151200"
  },
  {
    "text": "right so they adopted kubernetes or open tetri or backstage alongside with",
    "start": "151200",
    "end": "157480"
  },
  {
    "text": "graphql so graph kill lets us approach requests in uh for data in a more",
    "start": "157480",
    "end": "162519"
  },
  {
    "text": "natural way and I like to think of this as three simple pieces one which is",
    "start": "162519",
    "end": "167599"
  },
  {
    "text": "queries for fetching data mutations are for creating or changing data and",
    "start": "167599",
    "end": "174319"
  },
  {
    "text": "subscriptions are for real-time data now all this is defined in a strongly typed",
    "start": "174319",
    "end": "179480"
  },
  {
    "text": "schema and this acts as a contract between your clients and the server and the schema and API start to",
    "start": "179480",
    "end": "186599"
  },
  {
    "text": "provide a single place for all of your app devs to go get the data they need and that helps Drive uh product",
    "start": "186599",
    "end": "194560"
  },
  {
    "text": "mindset as well you have a much more expressive schema here and what I like to tell people is think of your graph",
    "start": "194560",
    "end": "200959"
  },
  {
    "text": "kill API as a digital representation of your product or your business and one of the things people",
    "start": "200959",
    "end": "208360"
  },
  {
    "text": "love about graph kill is clients simply select the fields that they want to fetch inside of the query so this allows",
    "start": "208360",
    "end": "215159"
  },
  {
    "text": "the client to get only the data they want for that query and adding additional Fields is just adding",
    "start": "215159",
    "end": "221120"
  },
  {
    "text": "additional fields to the query so really simple and uh features that are put out there can be adopted by multiple clients",
    "start": "221120",
    "end": "227640"
  },
  {
    "text": "at the same time now you may be asking this question yourself or you might have heard this a",
    "start": "227640",
    "end": "233280"
  },
  {
    "text": "little bit yourself you know what about rest versus graphql or is one replace",
    "start": "233280",
    "end": "238480"
  },
  {
    "text": "the other um to be honest we've seen them work together and uh graphql really",
    "start": "238480",
    "end": "243760"
  },
  {
    "text": "is just rest at the heart of it right it's a post request and you can actually see the uh query for the graphql",
    "start": "243760",
    "end": "250760"
  },
  {
    "text": "operation is just in the body of that post request now graphql also does support get request as well um this is called",
    "start": "250760",
    "end": "258359"
  },
  {
    "text": "persisted queries and it's where the operation is actually hashed into an ID and then URL encoded into the string and",
    "start": "258359",
    "end": "265600"
  },
  {
    "text": "enables you to do things like CDN caching so overall graphql simplifies",
    "start": "265600",
    "end": "271039"
  },
  {
    "text": "the rest details for clients and how they get data um we see teams move from",
    "start": "271039",
    "end": "276320"
  },
  {
    "text": "rest to graphql for platform apis because it provides a single consumer experience that's self-documented you",
    "start": "276320",
    "end": "283320"
  },
  {
    "text": "know instead of having to discover into the apis available on the platform devs",
    "start": "283320",
    "end": "288560"
  },
  {
    "text": "can explore the schema and write a graph query that's strongly typed with validation so they get little things",
    "start": "288560",
    "end": "294800"
  },
  {
    "text": "like red squiggles you know underneath uh problem areas",
    "start": "294800",
    "end": "300520"
  },
  {
    "text": "and overall it really just simplifies your apis um I think it actually makes things very easy for backend developers",
    "start": "300520",
    "end": "306880"
  },
  {
    "text": "as well and we're going to cover some of those details shortly around those self-service workflows so let's actually get into",
    "start": "306880",
    "end": "314240"
  },
  {
    "text": "some backstage so here here on the screen we have just the default new created",
    "start": "314240",
    "end": "320240"
  },
  {
    "text": "backstage app and we have this apis tab right so we're talking about apis and",
    "start": "320240",
    "end": "325360"
  },
  {
    "text": "what would that things actually look like for graphql to live in this world well first before that let's actually",
    "start": "325360",
    "end": "331000"
  },
  {
    "text": "talk about what it looked like before that so open API right if we have an open API definition this is actually",
    "start": "331000",
    "end": "336120"
  },
  {
    "text": "what that looks like in backstage we're just using the simple pet stores um open API definition",
    "start": "336120",
    "end": "342240"
  },
  {
    "text": "example but what's really nice is in the definitions you get all of that documentation right so now a developer",
    "start": "342240",
    "end": "348600"
  },
  {
    "text": "can come through look through apis and then actually start to understand and you know what is the shape of those apis",
    "start": "348600",
    "end": "354840"
  },
  {
    "text": "what is the the surface area and they can start um self- exploring into this world",
    "start": "354840",
    "end": "360440"
  },
  {
    "text": "so how does graphc actually fit in and like is it any better well before we jump into that I think we need to talk a",
    "start": "360440",
    "end": "367240"
  },
  {
    "text": "little bit of like what's graphql architecturally look like inside of a platform of",
    "start": "367240",
    "end": "372960"
  },
  {
    "text": "apis right so I know this is an oversimplification but generally",
    "start": "372960",
    "end": "378319"
  },
  {
    "text": "speaking API teams are generally creating services that use things provided by the platform team and the",
    "start": "378319",
    "end": "385240"
  },
  {
    "text": "API team's goals are really to meet the needs of the application developers right and so is a common Choice by these",
    "start": "385240",
    "end": "391080"
  },
  {
    "text": "API platform teams um and like I said it's over simplification this might not",
    "start": "391080",
    "end": "396639"
  },
  {
    "text": "be how you have things structured you know it might be that you have the API teams actually own the domain apis and the platform teams really just providing",
    "start": "396639",
    "end": "403000"
  },
  {
    "text": "more of the infrastructure um it aspected or some other way for the sake",
    "start": "403000",
    "end": "408240"
  },
  {
    "text": "of today's webinar let's just say things are generally architected this way and the architecture shows app teams and API",
    "start": "408240",
    "end": "414400"
  },
  {
    "text": "teams separately but those also might be you know maybe a full stack team where that um BFF is actually you know tightly",
    "start": "414400",
    "end": "420759"
  },
  {
    "text": "coupled with that client application um and there's good reasons for each one of",
    "start": "420759",
    "end": "425840"
  },
  {
    "text": "these different architectures in in each one of these scenarios right but platforms built with rest Technologies like open API they",
    "start": "425840",
    "end": "432879"
  },
  {
    "text": "naturally create an architecture that really gives client applications two choices one orchestrate you know rest",
    "start": "432879",
    "end": "439879"
  },
  {
    "text": "API calls with inside of the client most teams don't want to do that and then the",
    "start": "439879",
    "end": "445080"
  },
  {
    "text": "other is create an API service where the client can make one request to that API service and then that orchestrates all",
    "start": "445080",
    "end": "450479"
  },
  {
    "text": "the rest of the requests right and that's a pretty common pattern with inside of BFF",
    "start": "450479",
    "end": "455520"
  },
  {
    "text": "models right and this can actually lead a little bit to API sprawl and it kind of leaves the uh question of reusability",
    "start": "455520",
    "end": "462680"
  },
  {
    "text": "across apis you know not really a high chance of that happening and devs still",
    "start": "462680",
    "end": "468960"
  },
  {
    "text": "need to write some finite code to orchestrate those calls across the apis and maybe some new services so graphql",
    "start": "468960",
    "end": "477039"
  },
  {
    "text": "Federation provides a better architecture for Debs to contribute capabilities to the platform right and so what would graph",
    "start": "477039",
    "end": "485159"
  },
  {
    "text": "look like if we had just put a single monolith inside of the platform infrastructure right most likely in",
    "start": "485159",
    "end": "491479"
  },
  {
    "text": "these scenarios what we've seen is maybe a single client application team adopts that graphc API directly maybe you have",
    "start": "491479",
    "end": "499080"
  },
  {
    "text": "some of those backend for front ends or other API services start calling the",
    "start": "499080",
    "end": "504280"
  },
  {
    "text": "graph K API versus those domain apis but it doesn't really give an exp for API",
    "start": "504280",
    "end": "510400"
  },
  {
    "text": "teams to really contribute their capabilities to the platform they're really just consuming the platform right",
    "start": "510400",
    "end": "517919"
  },
  {
    "text": "and in reality you actually might get something a little more like this where you have a lot of different things",
    "start": "517919",
    "end": "523919"
  },
  {
    "text": "happening right API teams don't really have necessarily the reason to switch to graphql so they continue to use a lot of",
    "start": "523919",
    "end": "529720"
  },
  {
    "text": "their existing things inside of there right and the platform team really should enable an a pattern an",
    "start": "529720",
    "end": "535360"
  },
  {
    "text": "architecture where teams can contribute in a self-service way to that overall platform and that's",
    "start": "535360",
    "end": "542160"
  },
  {
    "text": "really what graph kill Federation provides right so with graph kill Federation we're really exposing those",
    "start": "542160",
    "end": "547480"
  },
  {
    "text": "same apis just with graphql and we compose them together into a single",
    "start": "547480",
    "end": "552519"
  },
  {
    "text": "artifact a graphql Gateway is able to take a composed schema and construct a query plan to execute operations and",
    "start": "552519",
    "end": "559920"
  },
  {
    "text": "Route them across you know the various apis and those apis can be written in any language they just have to be",
    "start": "559920",
    "end": "565880"
  },
  {
    "text": "graphql and there's lots of production uh ready Library uh that you could use to really use any",
    "start": "565880",
    "end": "571720"
  },
  {
    "text": "language that you want today um the platform teams can provide graphical apis that really expose the entities and",
    "start": "571720",
    "end": "577920"
  },
  {
    "text": "the domains of the business and then teams can build experience apis that",
    "start": "577920",
    "end": "583079"
  },
  {
    "text": "really extend off of these core entity domain experiences that the platform team's providing and this is removing",
    "start": "583079",
    "end": "590920"
  },
  {
    "text": "the need for any of that finite code of like how do I orchestrate requests how do I get the product from that product",
    "start": "590920",
    "end": "598120"
  },
  {
    "text": "thing over there um this is now actually coming in the form of of that query plan",
    "start": "598120",
    "end": "603440"
  },
  {
    "text": "so wait hold up what's this graphel Gateway thing right that's a a new piece",
    "start": "603440",
    "end": "608800"
  },
  {
    "text": "so what is this graphi Gateway the graph Gateway is really responsible for routing those requests",
    "start": "608800",
    "end": "615519"
  },
  {
    "text": "across all those available services and so clients are going to send their requests to that Gateway that Gateway is",
    "start": "615519",
    "end": "621360"
  },
  {
    "text": "going to generate a query plan I like to think of this as explain in SQL it tells you exactly how is everything to be",
    "start": "621360",
    "end": "627720"
  },
  {
    "text": "executed across the requests so one client requests can be n number of Downstream requests to other services",
    "start": "627720",
    "end": "635839"
  },
  {
    "text": "and that's all determined by an optimized query plan now a lot of teams will integrate external processes into",
    "start": "635839",
    "end": "642560"
  },
  {
    "text": "their graph kill Gateway things like authorization authentication um things around security",
    "start": "642560",
    "end": "648079"
  },
  {
    "text": "Integrations maybe that's like rate limiting other things that might be integrated the Gateway also can export",
    "start": "648079",
    "end": "654560"
  },
  {
    "text": "open Telemetry data right and so you can actually have an understanding of your graphs usage that could be provided as",
    "start": "654560",
    "end": "661440"
  },
  {
    "text": "part of that platform experience um there's also a way you can tap into the life cycle events of each request coming",
    "start": "661440",
    "end": "668160"
  },
  {
    "text": "into that Gateway and you could do things like trimming a query plan based on the authenticated user Scopes and",
    "start": "668160",
    "end": "675040"
  },
  {
    "text": "policies that are provided right so we have these external processes that we might integrate into there um and after",
    "start": "675040",
    "end": "681839"
  },
  {
    "text": "that the Gateway is going to execute the query plan and send those requests to the necessary Downstream apis it's going",
    "start": "681839",
    "end": "687560"
  },
  {
    "text": "to then combine all of those results into the expected response for the client finally the Gateway sends all",
    "start": "687560",
    "end": "693760"
  },
  {
    "text": "that data back to the client so great easy right but wait hold up how's that",
    "start": "693760",
    "end": "698880"
  },
  {
    "text": "query plan actually get made well the query plan is really going to be",
    "start": "698880",
    "end": "703920"
  },
  {
    "text": "dependent on the Gateway and the schema that composed artifact that's being provided to it and the Gateway has to",
    "start": "703920",
    "end": "711079"
  },
  {
    "text": "know about all of our apis and all of those schemas right and so that all gets composed together into a single schema",
    "start": "711079",
    "end": "717440"
  },
  {
    "text": "that we provide to the Gateway and this is really what that composed artifact looks like I like to think of",
    "start": "717440",
    "end": "723360"
  },
  {
    "text": "it as a computer readable version of the schema that contains you know all of our schemas for all of our apis along with",
    "start": "723360",
    "end": "730000"
  },
  {
    "text": "some metadata and some hints of you know where those things live and this also",
    "start": "730000",
    "end": "735399"
  },
  {
    "text": "helps us maximize uptime for our Gateway because our Gateway is no longer dependent uh for startup on are our",
    "start": "735399",
    "end": "741680"
  },
  {
    "text": "Downstream services available right it's now dependent on this artifact that we can have created in cicd pipelines right",
    "start": "741680",
    "end": "749560"
  },
  {
    "text": "um what I'm showing here over um that is a a PO CLI tool it's free it's out there open source um that has uh a composition",
    "start": "749560",
    "end": "758800"
  },
  {
    "text": "uh command that you can use to compose all these artifacts um you can head over the Apollo documentation to download",
    "start": "758800",
    "end": "764639"
  },
  {
    "text": "that but really the graphical Gateway is using the metadata within a composed schema to generate query plans right so",
    "start": "764639",
    "end": "771800"
  },
  {
    "text": "the Gateway plans operations and executes them but how's it going to",
    "start": "771800",
    "end": "777720"
  },
  {
    "text": "update right when those stream Services change that router that Gateway that thing that's going to need update",
    "start": "777720",
    "end": "784440"
  },
  {
    "text": "right so one thing that's really nice here is graph actually uh helps us with",
    "start": "784440",
    "end": "790279"
  },
  {
    "text": "this architecture right so it's going to need to fetch its initial schema on Startup right and this is something we",
    "start": "790279",
    "end": "796600"
  },
  {
    "text": "can ship in the docker image with the router maybe we have a we can also have a secondary process that we run in that",
    "start": "796600",
    "end": "802720"
  },
  {
    "text": "Docker image where it's actually fetching that composed artifact from a remote Source this is most commonly done",
    "start": "802720",
    "end": "808480"
  },
  {
    "text": "with like a cloud storage um some aspect that they have in there and one of the best practices",
    "start": "808480",
    "end": "815199"
  },
  {
    "text": "that's popped up in industry is having a schema registry and really this scheme of registry is something you want to",
    "start": "815199",
    "end": "821199"
  },
  {
    "text": "have because you might want to do things around roll backs or something in the future and this is going to enable that and make that a lot",
    "start": "821199",
    "end": "827240"
  },
  {
    "text": "simpler and there's a lot of Open Source offerings out there for schema Registries there's manage paid offerings",
    "start": "827240",
    "end": "833320"
  },
  {
    "text": "out there um and a lot of uh other companies have the option of creating their own scheme registry right they use",
    "start": "833320",
    "end": "840199"
  },
  {
    "text": "something like S3 some cloud storage and they create a service in front of it that's able to ingest a schema and",
    "start": "840199",
    "end": "847120"
  },
  {
    "text": "create this composed artifact and put it out there for the router so you really you'll need a place",
    "start": "847120",
    "end": "853759"
  },
  {
    "text": "for Individual Services to publish their schema when it's changing um this is commonly referred to as a schema",
    "start": "853759",
    "end": "860000"
  },
  {
    "text": "pipeline right and this is basically devops workflows around your schema and part of the magic that helps enable",
    "start": "860000",
    "end": "866480"
  },
  {
    "text": "self-service API creation and updates right so Downstream apis are going to publish their schema into the pipeline",
    "start": "866480",
    "end": "873519"
  },
  {
    "text": "using cicd and that's typically some service that's going to process that single schema with the context of the rest of",
    "start": "873519",
    "end": "880920"
  },
  {
    "text": "the apis of the organization and so the first step of that pipeline is checks right and this",
    "start": "880920",
    "end": "886839"
  },
  {
    "text": "is where the schema is checked to ensure it follows some certain set of rules and it really enables API developers to have",
    "start": "886839",
    "end": "894399"
  },
  {
    "text": "you know some little check that happens inside of their uh pull requests where",
    "start": "894399",
    "end": "899680"
  },
  {
    "text": "they can have things fail if it's failing some of the rules of the organization or those checks right and",
    "start": "899680",
    "end": "905880"
  },
  {
    "text": "those checks are really going to be dependent on your your organization your use case there are some common ones that",
    "start": "905880",
    "end": "911639"
  },
  {
    "text": "have come out there things like linting um things like doing a static analysis on the change for a schema making sure",
    "start": "911639",
    "end": "918639"
  },
  {
    "text": "that that isn't going to break known operations that are running in production these are all examples of",
    "start": "918639",
    "end": "923920"
  },
  {
    "text": "checks that you might want to have run right now if all those checks pass and everything",
    "start": "923920",
    "end": "929600"
  },
  {
    "text": "this is where we're going to want to have composition happen and create uh that new updated API schema um and put",
    "start": "929600",
    "end": "937600"
  },
  {
    "text": "that into our registry right so after that successful composition that's going to get uploaded into our",
    "start": "937600",
    "end": "944440"
  },
  {
    "text": "registry and then the Gateway Should hot reload based on that upload artifact in the scheme of registry and this is where",
    "start": "944440",
    "end": "951319"
  },
  {
    "text": "you can run that secondary Docker process to pull your scheme of registry for updates then provide it to the",
    "start": "951319",
    "end": "956600"
  },
  {
    "text": "Gateway um to have a hot reload EXP experience now I know this might all",
    "start": "956600",
    "end": "962199"
  },
  {
    "text": "seem like a lot adopting new technologies always have some level of this feeling we're showing you how to",
    "start": "962199",
    "end": "968920"
  },
  {
    "text": "roll your own basically here obviously there's some considerations here that we're not going to be able to cover in",
    "start": "968920",
    "end": "974560"
  },
  {
    "text": "this amount of time this is also you know what Apollo does helps scale things",
    "start": "974560",
    "end": "979720"
  },
  {
    "text": "out so you can focus on your API platform um so if you wanted to get into",
    "start": "979720",
    "end": "985120"
  },
  {
    "text": "that more you can always reach out to us at Apollo um happy to talk more more and you can also click this link to",
    "start": "985120",
    "end": "992759"
  },
  {
    "text": "join our Discord Community um or uh contact Apollo and if you want you can",
    "start": "992759",
    "end": "998440"
  },
  {
    "text": "always reach out to me and I I'll do my best to help guide you along the right path okay so we took a little detour",
    "start": "998440",
    "end": "1004680"
  },
  {
    "text": "here uh talk about some architectural pieces but I think it was important review um I've worked with a lot of",
    "start": "1004680",
    "end": "1010480"
  },
  {
    "text": "teams on their internal developer portals with graphql and they end up having to tackle different teams owning",
    "start": "1010480",
    "end": "1016560"
  },
  {
    "text": "services that are exposed in a single common graph um you definitely can be successful with a monolithic graphql representation but",
    "start": "1016560",
    "end": "1024520"
  },
  {
    "text": "for the internal developer portal platform API use case uh a Federated",
    "start": "1024520",
    "end": "1029918"
  },
  {
    "text": "architecture is going to U be more beneficial for contributors to that API",
    "start": "1029919",
    "end": "1035480"
  },
  {
    "text": "platform so now let's get back to Backstage right so um we talked about",
    "start": "1035480",
    "end": "1040839"
  },
  {
    "text": "how the API platform is something that supports really applications and API developers so first we're going to",
    "start": "1040839",
    "end": "1046520"
  },
  {
    "text": "continue focusing on the teams contributing to the platform right and so we had that tab right how should",
    "start": "1046520",
    "end": "1053720"
  },
  {
    "text": "things be actually listed in here for um our various apis so first we need to define a system",
    "start": "1053720",
    "end": "1060600"
  },
  {
    "text": "right for our graph heeld Gateway now I'm using the term super graph here um",
    "start": "1060600",
    "end": "1065720"
  },
  {
    "text": "and superg graph really is just something that's caught on in the graph k Community and it refers to a Gateway",
    "start": "1065720",
    "end": "1071520"
  },
  {
    "text": "that's using a composed schema and and really the composed schema is what powers that super graph um this is the",
    "start": "1071520",
    "end": "1078360"
  },
  {
    "text": "system we're going to use to relate all of our apis to now this is a basic configuration for",
    "start": "1078360",
    "end": "1085520"
  },
  {
    "text": "uh an API a graph API um we can add this into our backstage URL but we're missing",
    "start": "1085520",
    "end": "1092919"
  },
  {
    "text": "the spec definitions for this and and in backstage that's the actual graphql schema here now just real quick sidebar",
    "start": "1092919",
    "end": "1101840"
  },
  {
    "text": "um you may have noticed this like Spotify showcase inside of here uh I just wanted to point out um I'm using",
    "start": "1101840",
    "end": "1108760"
  },
  {
    "text": "Grau apis from a demo I've worked on in the past it's called the Apollo Spotify showcase um it's a Spotify clone that",
    "start": "1108760",
    "end": "1115200"
  },
  {
    "text": "uses their rest API and creates a graph kill API representation of it um so all",
    "start": "1115200",
    "end": "1120280"
  },
  {
    "text": "the code is available here open source um it's a more detailed example of what we're getting into here so if you wanted",
    "start": "1120280",
    "end": "1125400"
  },
  {
    "text": "to check anything out after this this a great resource so in that demo we have our",
    "start": "1125400",
    "end": "1132320"
  },
  {
    "text": "scheme of files next to our catalog info now we can simply point at that schema file in in our catalog info but you",
    "start": "1132320",
    "end": "1139360"
  },
  {
    "text": "might also have a code first framework that you're using as a library for building out you know your graph kill",
    "start": "1139360",
    "end": "1144919"
  },
  {
    "text": "apis and that means you don't have necessarily that schema file um or maybe you're using a server library that",
    "start": "1144919",
    "end": "1151000"
  },
  {
    "text": "actually does some things to the schema on Startup maybe it's like adding some things into the schema and it's not 100%",
    "start": "1151000",
    "end": "1158720"
  },
  {
    "text": "right when you have it um either way you might need a process the schema file and",
    "start": "1158720",
    "end": "1164320"
  },
  {
    "text": "you can do this fairly easy in graphql um first we need to read in the schema and the catalog info um if you",
    "start": "1164320",
    "end": "1170400"
  },
  {
    "text": "had your code first framework you'd just need to run an introspection request against that server and uh you'd replace",
    "start": "1170400",
    "end": "1176120"
  },
  {
    "text": "that schema here um most of the libraries out there actually support exporting the schema to a flat file and",
    "start": "1176120",
    "end": "1182320"
  },
  {
    "text": "you'd be able to just use that um next we need to build the schema and print the definition to a string um",
    "start": "1182320",
    "end": "1189200"
  },
  {
    "text": "there's things for building a schema and printing a schema that are available in any of the community graph kill",
    "start": "1189200",
    "end": "1194240"
  },
  {
    "text": "libraries it's just part of what's available through what's uh described in the spe",
    "start": "1194240",
    "end": "1199880"
  },
  {
    "text": "ification and lastly we just need to update the catalog info with that schema",
    "start": "1199880",
    "end": "1205280"
  },
  {
    "text": "and this of course is something that we are going to want to do inside of our cicd right so here's just an example of",
    "start": "1205280",
    "end": "1212360"
  },
  {
    "text": "a real quick and dirty GitHub action that that runs you know anytime that that scheme of files chains and commits",
    "start": "1212360",
    "end": "1218880"
  },
  {
    "text": "an update to that catalog info and now backstage is going to be able to refresh and stay up todate with",
    "start": "1218880",
    "end": "1225480"
  },
  {
    "text": "that API repos catalog info perfect and so the Spotify showcase actually has",
    "start": "1225480",
    "end": "1231640"
  },
  {
    "text": "two apis and here's how they both look inside of Backstage when they've been uh entered",
    "start": "1231640",
    "end": "1236880"
  },
  {
    "text": "in and similar to open API we get a docs Explorer for graphql and this enables",
    "start": "1236880",
    "end": "1243600"
  },
  {
    "text": "you to browse all the types in the schema along with any comments associated with them so when people say",
    "start": "1243600",
    "end": "1249360"
  },
  {
    "text": "graph K self-documenting this is actually the part of or one of the parts of what they're talking about here right",
    "start": "1249360",
    "end": "1256000"
  },
  {
    "text": "API developers now add comments to their schema and those are now just inside and",
    "start": "1256000",
    "end": "1262520"
  },
  {
    "text": "provided into our tooling and one hint uh if you have any",
    "start": "1262520",
    "end": "1268320"
  },
  {
    "text": "entities defined in your API schema you can quickly view them by just selecting The Entity um in that definition",
    "start": "1268320",
    "end": "1274840"
  },
  {
    "text": "Explorer which is really nice now I'm not talking about backstage entities I'm talking about entities you're defining",
    "start": "1274840",
    "end": "1281240"
  },
  {
    "text": "inside of your apis inside of those schemas um and we don't have these entities registered in backstage as like",
    "start": "1281240",
    "end": "1287600"
  },
  {
    "text": "backstage entities but you could imagine doing something like that in the future and maybe",
    "start": "1287600",
    "end": "1293120"
  },
  {
    "text": "quering backstage's API for all the available entities in your platform right so there's a lot of stuff you",
    "start": "1293120",
    "end": "1299480"
  },
  {
    "text": "could do with that but this is kind of the the starting point um you also get a nice clean way",
    "start": "1299480",
    "end": "1305200"
  },
  {
    "text": "to show you know what are the various apis that are part of that super graph along with their owners you know this is",
    "start": "1305200",
    "end": "1311720"
  },
  {
    "text": "of course something you get out of the box um but you know now that we're associating all these apis with that",
    "start": "1311720",
    "end": "1317039"
  },
  {
    "text": "super graph we now can have content text into that now we talked a little bit about",
    "start": "1317039",
    "end": "1323320"
  },
  {
    "text": "you know how should we get those services to start to look like in backstage but what about creating new",
    "start": "1323320",
    "end": "1330279"
  },
  {
    "text": "Services right what what are we going to be doing there right and this really is templates you know self-service API",
    "start": "1330279",
    "end": "1336400"
  },
  {
    "text": "creation is going to require that you have templates where those teams are going to need everything they need to get from you know new template to",
    "start": "1336400",
    "end": "1343600"
  },
  {
    "text": "production and this includes things like registering the schema you know using that cicd environment whatever you have",
    "start": "1343600",
    "end": "1349799"
  },
  {
    "text": "set up right and so you can use any language to write your service with but",
    "start": "1349799",
    "end": "1355440"
  },
  {
    "text": "like realistically you you just can't support any language it's just too much to handle right and we typically see",
    "start": "1355440",
    "end": "1361559"
  },
  {
    "text": "companies standardize on about two to three languages um and we recommend having a gold standard template right if",
    "start": "1361559",
    "end": "1368760"
  },
  {
    "text": "someone was going to come to you and ask you know what language should I use or like what's the best happy path you",
    "start": "1368760",
    "end": "1375240"
  },
  {
    "text": "should have that recommended template and have that called out so you can increase adoption in that world you know",
    "start": "1375240",
    "end": "1381600"
  },
  {
    "text": "there are a lot of common server language options we see out there um typescript Java",
    "start": "1381600",
    "end": "1387640"
  },
  {
    "text": "cinnet go python those are all popular ones um there are plenty of other available options just those are the",
    "start": "1387640",
    "end": "1394279"
  },
  {
    "text": "more popular ones I've seen now your templates like I said",
    "start": "1394279",
    "end": "1400279"
  },
  {
    "text": "they're going to have to do all of those things in the devops workflow and Publishing into that scheme of registry",
    "start": "1400279",
    "end": "1406159"
  },
  {
    "text": "um here's a simple example uh from that repo where we're actually using graphos as the scheme of registry but the idea",
    "start": "1406159",
    "end": "1413159"
  },
  {
    "text": "is you should really have a service that you're able to send um a schema to in just a a single Command right and that's",
    "start": "1413159",
    "end": "1419880"
  },
  {
    "text": "something that's going to need to be able to run in your cicd um environment now like I said there's open source",
    "start": "1419880",
    "end": "1426120"
  },
  {
    "text": "options out there for schema registries you can build something yourself but you're going to need to have for that",
    "start": "1426120",
    "end": "1431600"
  },
  {
    "text": "self-service API creation workflow you're going to need to have each one of those apis registering their schema into",
    "start": "1431600",
    "end": "1437480"
  },
  {
    "text": "a place now if you don't have a template or a starting point um we created some that",
    "start": "1437480",
    "end": "1443880"
  },
  {
    "text": "you could use uh so that Rover CL that I've mentioned a couple times that",
    "start": "1443880",
    "end": "1448919"
  },
  {
    "text": "actually has templates available in it for a couple different languages inside of there um so you can install that CLI",
    "start": "1448919",
    "end": "1454679"
  },
  {
    "text": "with our Universal installer that's in our docs and and in the the slide notes here um but that can give you a starting",
    "start": "1454679",
    "end": "1461600"
  },
  {
    "text": "point it has everything you need uh around the graphql aspects for that language it also includes Docker file",
    "start": "1461600",
    "end": "1467600"
  },
  {
    "text": "for that uh specific service should be able to just install packages startup and then it also has a little test Suite",
    "start": "1467600",
    "end": "1473919"
  },
  {
    "text": "to kind of get you started off on the right pattern now that we've covered some",
    "start": "1473919",
    "end": "1479000"
  },
  {
    "text": "workflows around API creators let's turn over to application developers right so",
    "start": "1479000",
    "end": "1484080"
  },
  {
    "text": "consuming data in the graph is important and the good news is we have a lot of great options for doing this right in",
    "start": "1484080",
    "end": "1491120"
  },
  {
    "text": "backstage graphical is one of the things that has been around for a very long time in the graph kill Community um it's",
    "start": "1491120",
    "end": "1497480"
  },
  {
    "text": "a graph kill Foundation project supported by the community um and it has everything you need to make graph kill",
    "start": "1497480",
    "end": "1503080"
  },
  {
    "text": "requests um it's a free plugin uh in the backstage repo fairly simple to configure um you can support multiple",
    "start": "1503080",
    "end": "1509480"
  },
  {
    "text": "environments through tabs which is really nice um so you can have things like pre-prod staging all easily",
    "start": "1509480",
    "end": "1515000"
  },
  {
    "text": "accessible next to a production environment and you can also provide your own fetch API so maybe you have",
    "start": "1515000",
    "end": "1521200"
  },
  {
    "text": "some authentication scenarios or maybe you want to use uh you know one of your logged in backstage authentication",
    "start": "1521200",
    "end": "1526520"
  },
  {
    "text": "providers to generate a token behind the scenes sces and inject that into the requests that's going on here um that's",
    "start": "1526520",
    "end": "1533320"
  },
  {
    "text": "a nice experience and say that's pretty easily capable um Apollo explore is another",
    "start": "1533320",
    "end": "1538919"
  },
  {
    "text": "free plugin option available to you um that's also in the main backstage plug-in repository uh the plugin has the",
    "start": "1538919",
    "end": "1545080"
  },
  {
    "text": "option of connecting to an Apollo account but that's not required um I'm of course a little biased here but I",
    "start": "1545080",
    "end": "1551200"
  },
  {
    "text": "think Explorer has just a better developer experience in my opinion um it has everything that graphic graphical",
    "start": "1551200",
    "end": "1557320"
  },
  {
    "text": "offers um and it it has a couple additional things in there uh so you can",
    "start": "1557320",
    "end": "1562960"
  },
  {
    "text": "actually click to add Fields into a graph kill query and there's a little bit of a better searching experience",
    "start": "1562960",
    "end": "1569159"
  },
  {
    "text": "inside of Explorer and um I found that that's pretty important when you start getting into very large schemas that's",
    "start": "1569159",
    "end": "1575000"
  },
  {
    "text": "part of like a platform API um and you know one of the other things is really the the sharing options uh inside of",
    "start": "1575000",
    "end": "1582679"
  },
  {
    "text": "there um so it it has a lot of options of you know how you might want to uh",
    "start": "1582679",
    "end": "1588640"
  },
  {
    "text": "share an operation copy an operation format an operation um one of my favorite is actually um doing the uh",
    "start": "1588640",
    "end": "1596880"
  },
  {
    "text": "copy to curl command I mean if you look at this example of this curl command you know this it's pretty intense right and",
    "start": "1596880",
    "end": "1605640"
  },
  {
    "text": "sometimes I like to test things simply and like try and remove all of the factors and a curl command is actually",
    "start": "1605640",
    "end": "1611799"
  },
  {
    "text": "really nice to be able to do that right so I can just like create whatever operation or maybe find an operation",
    "start": "1611799",
    "end": "1617080"
  },
  {
    "text": "that's been running in production copy that to a curl command and then just run that in my terminal and that's just",
    "start": "1617080",
    "end": "1623600"
  },
  {
    "text": "perfect it can also handle uh requests auth requests and you know um handling",
    "start": "1623600",
    "end": "1629399"
  },
  {
    "text": "custom uh uh functions on any requests coming from the API just like what graphical has um so that's a a nice",
    "start": "1629399",
    "end": "1637360"
  },
  {
    "text": "thing that I'd recommend integrating either of these plugins whatever option another thing is uh Explorer has",
    "start": "1637360",
    "end": "1645039"
  },
  {
    "text": "context for query plans so you can actually see the query plan with which is pretty nice when you're trying to debug things um especially if you're for",
    "start": "1645039",
    "end": "1652520"
  },
  {
    "text": "example trying to uh break apart a service maybe you're trying to remove a",
    "start": "1652520",
    "end": "1658760"
  },
  {
    "text": "type into its own API uh you'll actually be able to take a known operation and",
    "start": "1658760",
    "end": "1665120"
  },
  {
    "text": "see that query plan change based off of that schema and maybe like a local or Dev environment right so now each",
    "start": "1665120",
    "end": "1672240"
  },
  {
    "text": "developers kind of has this great experience of quering the graph and although the best part is it's all",
    "start": "1672240",
    "end": "1678159"
  },
  {
    "text": "completely visible as needed it's all just a single graphel endpoint for application developers and",
    "start": "1678159",
    "end": "1684279"
  },
  {
    "text": "that's great right it just like any other graphc endpoint so we've gone through a lot",
    "start": "1684279",
    "end": "1690039"
  },
  {
    "text": "this session and we learned a little bit about what graphc actually is um we also talked about the architecture with",
    "start": "1690039",
    "end": "1696159"
  },
  {
    "text": "Federated graphql and how it fits within an internal developer portal powering an API",
    "start": "1696159",
    "end": "1702559"
  },
  {
    "text": "platform then we kind of jumped into backstage and we showed what it could look like with some simple config",
    "start": "1702559",
    "end": "1708080"
  },
  {
    "text": "configurations and that kind of broke down to three areas one cataloging our graph K apis in backstage and having it",
    "start": "1708080",
    "end": "1715279"
  },
  {
    "text": "have a look that's similar to what we get with uh open API and then creating",
    "start": "1715279",
    "end": "1720399"
  },
  {
    "text": "templates for applications and apis you know teams need to be able to create new apps and services and you can provide a",
    "start": "1720399",
    "end": "1726880"
  },
  {
    "text": "happy path for them with that if you don't have a graph template remember we have templates available through Rover",
    "start": "1726880",
    "end": "1732880"
  },
  {
    "text": "it's a great place to start they're all free and open source and third you can consume graphql",
    "start": "1732880",
    "end": "1740120"
  },
  {
    "text": "apis right in backstage right through graphical or Apollo Explorer they're both great free available options uh",
    "start": "1740120",
    "end": "1746799"
  },
  {
    "text": "with some simple plug-in configuration for your backstage instance now if you want to check out",
    "start": "1746799",
    "end": "1752360"
  },
  {
    "text": "the code for the backstage instance I was showing or anything else you can find in this repo right here and if",
    "start": "1752360",
    "end": "1759320"
  },
  {
    "text": "there were some you know additional learning I collected all the links and the various resources we went through today and put them on this slide um if",
    "start": "1759320",
    "end": "1766799"
  },
  {
    "text": "you want to talk to Apollo about scaling out your graphql um in your platform API",
    "start": "1766799",
    "end": "1772159"
  },
  {
    "text": "efforts this link can get you in touch with our team um I also added a link to a free trial if you wanted to try out",
    "start": "1772159",
    "end": "1778720"
  },
  {
    "text": "our manage scheme of registry without talking to anyone um you can connect all of that to the Spotify showcase demo if",
    "start": "1778720",
    "end": "1784840"
  },
  {
    "text": "you want to Fork that project play around all the instructions are inside that repo thank you so much for taking the",
    "start": "1784840",
    "end": "1791600"
  },
  {
    "text": "time to watch this webinar I hope you found it helpful and if there are any questions at all or maybe something that",
    "start": "1791600",
    "end": "1797720"
  },
  {
    "text": "you're hoping to figure out feel free to reach out to me have a great day",
    "start": "1797720",
    "end": "1804080"
  }
]