[
  {
    "start": "0",
    "end": "61000"
  },
  {
    "text": "hey everyone welcome we're coming live",
    "start": "80",
    "end": "1920"
  },
  {
    "text": "to you from amsterdam my name is remko",
    "start": "1920",
    "end": "3760"
  },
  {
    "text": "overdyke",
    "start": "3760",
    "end": "4480"
  },
  {
    "text": "i've been at balticom as a systems",
    "start": "4480",
    "end": "6080"
  },
  {
    "text": "engineer for over three years now and",
    "start": "6080",
    "end": "7759"
  },
  {
    "text": "i'm currently working in our compute",
    "start": "7759",
    "end": "9200"
  },
  {
    "text": "infrastructure team",
    "start": "9200",
    "end": "11040"
  },
  {
    "text": "our team deals with all types of",
    "start": "11040",
    "end": "13599"
  },
  {
    "text": "infrastructure",
    "start": "13599",
    "end": "15280"
  },
  {
    "text": "especially compute ranging from bare",
    "start": "15280",
    "end": "16960"
  },
  {
    "text": "metal and virtual machines in our data",
    "start": "16960",
    "end": "18960"
  },
  {
    "text": "centers",
    "start": "18960",
    "end": "19760"
  },
  {
    "text": "up to kubernetes in google cloud and",
    "start": "19760",
    "end": "22640"
  },
  {
    "text": "everything in between",
    "start": "22640",
    "end": "24560"
  },
  {
    "text": "we also play a pivotal role in the",
    "start": "24560",
    "end": "26240"
  },
  {
    "text": "transformation of our infrastructure to",
    "start": "26240",
    "end": "28320"
  },
  {
    "text": "public cloud",
    "start": "28320",
    "end": "29519"
  },
  {
    "text": "which not quite coincidentally is also",
    "start": "29519",
    "end": "31599"
  },
  {
    "text": "the stepping stone for today's story",
    "start": "31599",
    "end": "34640"
  },
  {
    "text": "hi i'm james brooke and i'm a solutions",
    "start": "34640",
    "end": "37040"
  },
  {
    "text": "architect to google cloud",
    "start": "37040",
    "end": "39440"
  },
  {
    "text": "my team works with some of google's",
    "start": "39440",
    "end": "40879"
  },
  {
    "text": "largest customers and we help them to",
    "start": "40879",
    "end": "42559"
  },
  {
    "text": "solve difficult and interesting",
    "start": "42559",
    "end": "43920"
  },
  {
    "text": "engineering problems",
    "start": "43920",
    "end": "45680"
  },
  {
    "text": "i'm also a service mesh enthusiast and",
    "start": "45680",
    "end": "48000"
  },
  {
    "text": "i've been following the technology",
    "start": "48000",
    "end": "49760"
  },
  {
    "text": "from the very beginning i'm not actually",
    "start": "49760",
    "end": "52320"
  },
  {
    "text": "part of a team working directly on",
    "start": "52320",
    "end": "53840"
  },
  {
    "text": "service mesh",
    "start": "53840",
    "end": "55039"
  },
  {
    "text": "but i have been involved with the",
    "start": "55039",
    "end": "56160"
  },
  {
    "text": "service mesh project at bowl.com",
    "start": "56160",
    "end": "58559"
  },
  {
    "text": "from the first planning meetings right",
    "start": "58559",
    "end": "60079"
  },
  {
    "text": "up until today",
    "start": "60079",
    "end": "61680"
  },
  {
    "start": "61000",
    "end": "121000"
  },
  {
    "text": "bald economist company needs little",
    "start": "61680",
    "end": "63359"
  },
  {
    "text": "introduction for people living in the",
    "start": "63359",
    "end": "64799"
  },
  {
    "text": "netherlands",
    "start": "64799",
    "end": "65439"
  },
  {
    "text": "since we're a familiar name in dutch",
    "start": "65439",
    "end": "67119"
  },
  {
    "text": "e-commerce",
    "start": "67119",
    "end": "68479"
  },
  {
    "text": "with a large number of partners selling",
    "start": "68479",
    "end": "70320"
  },
  {
    "text": "their ware through our platform combined",
    "start": "70320",
    "end": "72320"
  },
  {
    "text": "with a rather large selection of",
    "start": "72320",
    "end": "73760"
  },
  {
    "text": "products of our own",
    "start": "73760",
    "end": "74799"
  },
  {
    "text": "we're the first stop in online shopping",
    "start": "74799",
    "end": "76799"
  },
  {
    "text": "for a large version",
    "start": "76799",
    "end": "78080"
  },
  {
    "text": "of dutch and belgian customers enjoying",
    "start": "78080",
    "end": "80400"
  },
  {
    "text": "same and next day delivery",
    "start": "80400",
    "end": "81759"
  },
  {
    "text": "and excellent customer support being a",
    "start": "81759",
    "end": "84880"
  },
  {
    "text": "major e-commerce platform",
    "start": "84880",
    "end": "86479"
  },
  {
    "text": "takes a lot of hard work and",
    "start": "86479",
    "end": "87920"
  },
  {
    "text": "infrastructure",
    "start": "87920",
    "end": "89520"
  },
  {
    "text": "we've experienced a steady growth in the",
    "start": "89520",
    "end": "91280"
  },
  {
    "text": "past allowing us to employ an",
    "start": "91280",
    "end": "93200"
  },
  {
    "text": "ever-increasing number of people",
    "start": "93200",
    "end": "94960"
  },
  {
    "text": "many of them focusing their attention on",
    "start": "94960",
    "end": "97520"
  },
  {
    "text": "solving i.t related problems",
    "start": "97520",
    "end": "99759"
  },
  {
    "text": "to stay ahead in this competitive market",
    "start": "99759",
    "end": "102880"
  },
  {
    "text": "with the amount of teams we employ",
    "start": "102880",
    "end": "104560"
  },
  {
    "text": "staying agile is key",
    "start": "104560",
    "end": "106960"
  },
  {
    "text": "as such we feel it's important for our",
    "start": "106960",
    "end": "109200"
  },
  {
    "text": "featured teams to be able to work",
    "start": "109200",
    "end": "110720"
  },
  {
    "text": "independently",
    "start": "110720",
    "end": "111680"
  },
  {
    "text": "without having to wait on platform teams",
    "start": "111680",
    "end": "113840"
  },
  {
    "text": "to deliver or maintain their",
    "start": "113840",
    "end": "115280"
  },
  {
    "text": "infrastructure for them for example",
    "start": "115280",
    "end": "117759"
  },
  {
    "text": "that's why we believe that self-service",
    "start": "117759",
    "end": "119759"
  },
  {
    "text": "infrastructure is the future for us",
    "start": "119759",
    "end": "121840"
  },
  {
    "start": "121000",
    "end": "288000"
  },
  {
    "text": "at bolicom we're used to doing things",
    "start": "121840",
    "end": "123840"
  },
  {
    "text": "ourselves",
    "start": "123840",
    "end": "125040"
  },
  {
    "text": "much of our infrastructure still lives",
    "start": "125040",
    "end": "126719"
  },
  {
    "text": "in our private data centers",
    "start": "126719",
    "end": "128720"
  },
  {
    "text": "and being in online retail there's",
    "start": "128720",
    "end": "131599"
  },
  {
    "text": "obviously",
    "start": "131599",
    "end": "132560"
  },
  {
    "text": "very significant seasonal variation in",
    "start": "132560",
    "end": "134800"
  },
  {
    "text": "both our business",
    "start": "134800",
    "end": "135680"
  },
  {
    "text": "and traffic historically we've been",
    "start": "135680",
    "end": "139200"
  },
  {
    "text": "statically skilled for the busiest day",
    "start": "139200",
    "end": "140959"
  },
  {
    "text": "of the year plus",
    "start": "140959",
    "end": "142400"
  },
  {
    "text": "a little safety margin we do have lots",
    "start": "142400",
    "end": "145760"
  },
  {
    "text": "of automation",
    "start": "145760",
    "end": "146640"
  },
  {
    "text": "and manage our machines using puppet",
    "start": "146640",
    "end": "149760"
  },
  {
    "text": "software development teams can deploy",
    "start": "149760",
    "end": "151599"
  },
  {
    "text": "their applications in our data centers",
    "start": "151599",
    "end": "153440"
  },
  {
    "text": "using automation",
    "start": "153440",
    "end": "155040"
  },
  {
    "text": "but all of the infrastructure",
    "start": "155040",
    "end": "156720"
  },
  {
    "text": "interaction on their behalf",
    "start": "156720",
    "end": "158160"
  },
  {
    "text": "is left to site reliability teams we",
    "start": "158160",
    "end": "161120"
  },
  {
    "text": "really believe in devops",
    "start": "161120",
    "end": "162480"
  },
  {
    "text": "and we want to allow teams to really",
    "start": "162480",
    "end": "164080"
  },
  {
    "text": "focus on building applications",
    "start": "164080",
    "end": "165920"
  },
  {
    "text": "and not all the other stuff in a data",
    "start": "165920",
    "end": "168640"
  },
  {
    "text": "center",
    "start": "168640",
    "end": "169120"
  },
  {
    "text": "self-service is partially possible but",
    "start": "169120",
    "end": "171360"
  },
  {
    "text": "it's a bit obscure",
    "start": "171360",
    "end": "172480"
  },
  {
    "text": "and inflexible our philosophy is you",
    "start": "172480",
    "end": "174720"
  },
  {
    "text": "build it you run it",
    "start": "174720",
    "end": "176160"
  },
  {
    "text": "you love it to further embrace that",
    "start": "176160",
    "end": "178080"
  },
  {
    "text": "mantra we try to increase the level of",
    "start": "178080",
    "end": "180239"
  },
  {
    "text": "self-service we offer",
    "start": "180239",
    "end": "182319"
  },
  {
    "text": "granting autonomy and sharing ownership",
    "start": "182319",
    "end": "184560"
  },
  {
    "text": "and a true devops way of working",
    "start": "184560",
    "end": "186480"
  },
  {
    "text": "turned out to be hard in our current",
    "start": "186480",
    "end": "187920"
  },
  {
    "text": "setup separation of concern",
    "start": "187920",
    "end": "190640"
  },
  {
    "text": "was a real issue we just couldn't find a",
    "start": "190640",
    "end": "193599"
  },
  {
    "text": "way to hand over the pagers to",
    "start": "193599",
    "end": "195280"
  },
  {
    "text": "application teams",
    "start": "195280",
    "end": "197440"
  },
  {
    "text": "so how could we get more autonomous",
    "start": "197440",
    "end": "200080"
  },
  {
    "text": "teams",
    "start": "200080",
    "end": "201440"
  },
  {
    "text": "we started by integrating public cloud",
    "start": "201440",
    "end": "203519"
  },
  {
    "text": "into our platform catalog",
    "start": "203519",
    "end": "205519"
  },
  {
    "text": "the idea here was to combine elastically",
    "start": "205519",
    "end": "207680"
  },
  {
    "text": "scaling infrastructure with a truly",
    "start": "207680",
    "end": "209920"
  },
  {
    "text": "programmable interface with apis that",
    "start": "209920",
    "end": "212080"
  },
  {
    "text": "could cleanly separate concerns for",
    "start": "212080",
    "end": "213440"
  },
  {
    "text": "developers as well",
    "start": "213440",
    "end": "215519"
  },
  {
    "text": "newer applications nowadays are deployed",
    "start": "215519",
    "end": "218159"
  },
  {
    "text": "to google kubernetes engine",
    "start": "218159",
    "end": "219840"
  },
  {
    "text": "a managed kubernetes cluster on top of",
    "start": "219840",
    "end": "222080"
  },
  {
    "text": "the google cloud",
    "start": "222080",
    "end": "224000"
  },
  {
    "text": "the applications that we deploy are",
    "start": "224000",
    "end": "226239"
  },
  {
    "text": "built or rebuilt",
    "start": "226239",
    "end": "227519"
  },
  {
    "text": "specifically to take advantage of the",
    "start": "227519",
    "end": "229360"
  },
  {
    "text": "cloud and kubernetes",
    "start": "229360",
    "end": "231040"
  },
  {
    "text": "our ecosystem of automated platform",
    "start": "231040",
    "end": "233120"
  },
  {
    "text": "tools now is first clear",
    "start": "233120",
    "end": "234799"
  },
  {
    "text": "first class support for the way we use",
    "start": "234799",
    "end": "236480"
  },
  {
    "text": "cloud services as well",
    "start": "236480",
    "end": "238480"
  },
  {
    "text": "developers get to write a",
    "start": "238480",
    "end": "239680"
  },
  {
    "text": "kubernetes-like manifest to deploy a",
    "start": "239680",
    "end": "241920"
  },
  {
    "text": "rich set of gcp resources",
    "start": "241920",
    "end": "244000"
  },
  {
    "text": "which in turn are deployed by a",
    "start": "244000",
    "end": "245519"
  },
  {
    "text": "centralized tool",
    "start": "245519",
    "end": "247680"
  },
  {
    "text": "application teams can build their own ci",
    "start": "247680",
    "end": "249680"
  },
  {
    "text": "cd pipelines in gitlab",
    "start": "249680",
    "end": "251439"
  },
  {
    "text": "and mix and match support of gcp",
    "start": "251439",
    "end": "253120"
  },
  {
    "text": "products based on their requirements",
    "start": "253120",
    "end": "255599"
  },
  {
    "text": "moving to the cloud together with",
    "start": "255599",
    "end": "257840"
  },
  {
    "text": "regulations like gdpr",
    "start": "257840",
    "end": "259600"
  },
  {
    "text": "also affected the way we needed to think",
    "start": "259600",
    "end": "261840"
  },
  {
    "text": "about security",
    "start": "261840",
    "end": "263520"
  },
  {
    "text": "the platform gives freedom but it also",
    "start": "263520",
    "end": "266080"
  },
  {
    "text": "enforces policy guard rails at the same",
    "start": "266080",
    "end": "268080"
  },
  {
    "text": "time given the scalability of kubernetes",
    "start": "268080",
    "end": "271840"
  },
  {
    "text": "the original idea we had was to have a",
    "start": "271840",
    "end": "274240"
  },
  {
    "text": "single cluster per environment in order",
    "start": "274240",
    "end": "276240"
  },
  {
    "text": "to reduce the overhead",
    "start": "276240",
    "end": "278400"
  },
  {
    "text": "these multi-tenant clusters house all of",
    "start": "278400",
    "end": "281120"
  },
  {
    "text": "the different applications",
    "start": "281120",
    "end": "282160"
  },
  {
    "text": "and services isolated into namespaces",
    "start": "282160",
    "end": "285040"
  },
  {
    "text": "and are able to connect to each other",
    "start": "285040",
    "end": "286720"
  },
  {
    "text": "using network policies this worked well",
    "start": "286720",
    "end": "288880"
  },
  {
    "start": "288000",
    "end": "481000"
  },
  {
    "text": "for a while",
    "start": "288880",
    "end": "290320"
  },
  {
    "text": "but some mistakes were made along the",
    "start": "290320",
    "end": "292320"
  },
  {
    "text": "way one",
    "start": "292320",
    "end": "293600"
  },
  {
    "text": "in particular since we want our gcp",
    "start": "293600",
    "end": "296320"
  },
  {
    "text": "services to be reachable from our data",
    "start": "296320",
    "end": "298000"
  },
  {
    "text": "centers and vice versa",
    "start": "298000",
    "end": "299840"
  },
  {
    "text": "they're using private interconnects to",
    "start": "299840",
    "end": "301680"
  },
  {
    "text": "form a large private network",
    "start": "301680",
    "end": "303680"
  },
  {
    "text": "sharing the same class a network this",
    "start": "303680",
    "end": "306880"
  },
  {
    "text": "also means that we had to use our ip",
    "start": "306880",
    "end": "308800"
  },
  {
    "text": "subnet space sparingly",
    "start": "308800",
    "end": "311280"
  },
  {
    "text": "given that we had around 400",
    "start": "311280",
    "end": "313120"
  },
  {
    "text": "microservices in the data center",
    "start": "313120",
    "end": "315199"
  },
  {
    "text": "at that time initially we figured that",
    "start": "315199",
    "end": "317840"
  },
  {
    "text": "having 1024 services in a single",
    "start": "317840",
    "end": "320479"
  },
  {
    "text": "kubernetes cluster",
    "start": "320479",
    "end": "321680"
  },
  {
    "text": "would be plenty and as such",
    "start": "321680",
    "end": "324800"
  },
  {
    "text": "we set up the gke clusters with a slash",
    "start": "324800",
    "end": "327360"
  },
  {
    "text": "22 subnet for services",
    "start": "327360",
    "end": "328960"
  },
  {
    "text": "allowing for 20 000 1024 services",
    "start": "328960",
    "end": "333280"
  },
  {
    "text": "at that time though we overlooked the",
    "start": "333280",
    "end": "334960"
  },
  {
    "text": "fact that almost everything",
    "start": "334960",
    "end": "336479"
  },
  {
    "text": "including monitoring requires a service",
    "start": "336479",
    "end": "338479"
  },
  {
    "text": "in kubernetes",
    "start": "338479",
    "end": "340400"
  },
  {
    "text": "we also underestimated the popularity of",
    "start": "340400",
    "end": "343520"
  },
  {
    "text": "the self-service model",
    "start": "343520",
    "end": "344960"
  },
  {
    "text": "and soon we saw a rampant growth of new",
    "start": "344960",
    "end": "346880"
  },
  {
    "text": "services being used",
    "start": "346880",
    "end": "348160"
  },
  {
    "text": "for all kinds of proof of concepts and",
    "start": "348160",
    "end": "350560"
  },
  {
    "text": "new microservices",
    "start": "350560",
    "end": "352400"
  },
  {
    "text": "this ended up being a bit of a crisis in",
    "start": "352400",
    "end": "354320"
  },
  {
    "text": "the end we came very close to hitting",
    "start": "354320",
    "end": "356319"
  },
  {
    "text": "the surface limit",
    "start": "356319",
    "end": "357440"
  },
  {
    "text": "effectively halting the creation of new",
    "start": "357440",
    "end": "359120"
  },
  {
    "text": "services in that environment",
    "start": "359120",
    "end": "362479"
  },
  {
    "text": "unfortunately though one of the clusters",
    "start": "362479",
    "end": "365199"
  },
  {
    "text": "once the clusters were created",
    "start": "365199",
    "end": "366639"
  },
  {
    "text": "it was not possible to increase the size",
    "start": "366639",
    "end": "368639"
  },
  {
    "text": "of an assigned subnet without recreating",
    "start": "368639",
    "end": "370960"
  },
  {
    "text": "the entire cluster",
    "start": "370960",
    "end": "372880"
  },
  {
    "text": "moving all over hundreds of workloads to",
    "start": "372880",
    "end": "374639"
  },
  {
    "text": "a bigger cluster would have been a major",
    "start": "374639",
    "end": "376319"
  },
  {
    "text": "project",
    "start": "376319",
    "end": "377039"
  },
  {
    "text": "and still wouldn't be completely future",
    "start": "377039",
    "end": "378880"
  },
  {
    "text": "proof since extremely large kubernetes",
    "start": "378880",
    "end": "381360"
  },
  {
    "text": "clusters are certainly possible",
    "start": "381360",
    "end": "383280"
  },
  {
    "text": "but come with a new set of scaling",
    "start": "383280",
    "end": "384880"
  },
  {
    "text": "challenges so we concluded that we",
    "start": "384880",
    "end": "387440"
  },
  {
    "text": "needed multiple clusters per environment",
    "start": "387440",
    "end": "389680"
  },
  {
    "text": "and treat them as cattle rather than",
    "start": "389680",
    "end": "391280"
  },
  {
    "text": "pets",
    "start": "391280",
    "end": "392880"
  },
  {
    "text": "i guess that's our first lesson to share",
    "start": "392880",
    "end": "394479"
  },
  {
    "text": "today put plenty of thought into your ip",
    "start": "394479",
    "end": "396960"
  },
  {
    "text": "subnet allocation strategy",
    "start": "396960",
    "end": "398800"
  },
  {
    "text": "believe it or not this was actually the",
    "start": "398800",
    "end": "400560"
  },
  {
    "text": "primary reason for looking at the",
    "start": "400560",
    "end": "401919"
  },
  {
    "text": "service mesh in the first place",
    "start": "401919",
    "end": "404400"
  },
  {
    "text": "so we knew we needed multiple clusters",
    "start": "404400",
    "end": "407280"
  },
  {
    "text": "we had quite separate doubt on the",
    "start": "407280",
    "end": "408960"
  },
  {
    "text": "cloud and data center worlds we had many",
    "start": "408960",
    "end": "411199"
  },
  {
    "text": "different ways to load balance",
    "start": "411199",
    "end": "412479"
  },
  {
    "text": "and discover services and there wasn't",
    "start": "412479",
    "end": "414560"
  },
  {
    "text": "even really an easy way to find a",
    "start": "414560",
    "end": "416400"
  },
  {
    "text": "service either",
    "start": "416400",
    "end": "418160"
  },
  {
    "text": "now service mesh definitely seems to be",
    "start": "418160",
    "end": "421199"
  },
  {
    "text": "somewhere on the hype circle",
    "start": "421199",
    "end": "422720"
  },
  {
    "text": "or at least it was a year ago but we",
    "start": "422720",
    "end": "425199"
  },
  {
    "text": "really did not",
    "start": "425199",
    "end": "426319"
  },
  {
    "text": "set out to justify having a service",
    "start": "426319",
    "end": "428240"
  },
  {
    "text": "match because we thought it was cool",
    "start": "428240",
    "end": "430960"
  },
  {
    "text": "in fact quite the opposite we were a",
    "start": "430960",
    "end": "432880"
  },
  {
    "text": "little scared of the idea",
    "start": "432880",
    "end": "434720"
  },
  {
    "text": "we did everything in our power to go",
    "start": "434720",
    "end": "436240"
  },
  {
    "text": "multi-cluster without service mesh",
    "start": "436240",
    "end": "439199"
  },
  {
    "text": "service mesh is definitely complex it's",
    "start": "439199",
    "end": "442160"
  },
  {
    "text": "not a mature technology either",
    "start": "442160",
    "end": "444080"
  },
  {
    "text": "we had experience with that from",
    "start": "444080",
    "end": "445680"
  },
  {
    "text": "gambling on kubernetes when it was still",
    "start": "445680",
    "end": "447280"
  },
  {
    "text": "young",
    "start": "447280",
    "end": "449120"
  },
  {
    "text": "but we started to think seriously about",
    "start": "449120",
    "end": "451280"
  },
  {
    "text": "the service mesh and some bonus features",
    "start": "451280",
    "end": "453759"
  },
  {
    "text": "started to become quite apparent like",
    "start": "453759",
    "end": "456160"
  },
  {
    "text": "strong identity",
    "start": "456160",
    "end": "457440"
  },
  {
    "text": "mutual tls authentication and",
    "start": "457440",
    "end": "459120"
  },
  {
    "text": "authorization for services would make it",
    "start": "459120",
    "end": "461039"
  },
  {
    "text": "much easier to please our security teams",
    "start": "461039",
    "end": "464080"
  },
  {
    "text": "we read about mesh expansion the idea of",
    "start": "464080",
    "end": "466319"
  },
  {
    "text": "seamlessly expanding the mesh to",
    "start": "466319",
    "end": "467840"
  },
  {
    "text": "machines in our data centers",
    "start": "467840",
    "end": "469120"
  },
  {
    "text": "really appeals to us as well we worry a",
    "start": "469120",
    "end": "472400"
  },
  {
    "text": "lot about data exfiltration",
    "start": "472400",
    "end": "474319"
  },
  {
    "text": "and the concept of filtering outbound",
    "start": "474319",
    "end": "475840"
  },
  {
    "text": "traffic based on request urls using",
    "start": "475840",
    "end": "477919"
  },
  {
    "text": "egress gateways",
    "start": "477919",
    "end": "478960"
  },
  {
    "text": "seemed promising we approached applying",
    "start": "478960",
    "end": "482639"
  },
  {
    "start": "481000",
    "end": "558000"
  },
  {
    "text": "a feasibility research very carefully",
    "start": "482639",
    "end": "485039"
  },
  {
    "text": "and appointed the project manager and",
    "start": "485039",
    "end": "486639"
  },
  {
    "text": "from cross-functional working groups to",
    "start": "486639",
    "end": "488400"
  },
  {
    "text": "figure out particular details",
    "start": "488400",
    "end": "490960"
  },
  {
    "text": "key criteria for selecting a product",
    "start": "490960",
    "end": "493120"
  },
  {
    "text": "included",
    "start": "493120",
    "end": "494160"
  },
  {
    "text": "multi-cluster support mesh expansion",
    "start": "494160",
    "end": "497520"
  },
  {
    "text": "since eventually we want to incorporate",
    "start": "497520",
    "end": "499120"
  },
  {
    "text": "our data centers into the same mesh",
    "start": "499120",
    "end": "502319"
  },
  {
    "text": "it should support egress gateways",
    "start": "502319",
    "end": "504160"
  },
  {
    "text": "because egress gateways would provide",
    "start": "504160",
    "end": "505919"
  },
  {
    "text": "the support needed for filtering",
    "start": "505919",
    "end": "507280"
  },
  {
    "text": "outbound traffic",
    "start": "507280",
    "end": "509599"
  },
  {
    "text": "and a strong community we evaluated all",
    "start": "509599",
    "end": "512880"
  },
  {
    "text": "the available options at the time",
    "start": "512880",
    "end": "515200"
  },
  {
    "text": "but this being about 18 months ago istio",
    "start": "515200",
    "end": "518000"
  },
  {
    "text": "was really the only",
    "start": "518000",
    "end": "519360"
  },
  {
    "text": "product that provided both multi-cluster",
    "start": "519360",
    "end": "521919"
  },
  {
    "text": "support",
    "start": "521919",
    "end": "523120"
  },
  {
    "text": "and ticked all the boxes or would have",
    "start": "523120",
    "end": "525440"
  },
  {
    "text": "upcoming support for those wishes on a",
    "start": "525440",
    "end": "527519"
  },
  {
    "text": "relatively short term our close",
    "start": "527519",
    "end": "530320"
  },
  {
    "text": "cooperation with google",
    "start": "530320",
    "end": "531760"
  },
  {
    "text": "also meant that we had access to istio",
    "start": "531760",
    "end": "533760"
  },
  {
    "text": "developers which proved to be very",
    "start": "533760",
    "end": "535440"
  },
  {
    "text": "useful i will touch on",
    "start": "535440",
    "end": "536800"
  },
  {
    "text": "we'll touch on that later as well",
    "start": "536800",
    "end": "539279"
  },
  {
    "text": "service tax",
    "start": "539279",
    "end": "540160"
  },
  {
    "text": "service mesh technology has come a long",
    "start": "540160",
    "end": "541920"
  },
  {
    "text": "way in these past 18 months",
    "start": "541920",
    "end": "543680"
  },
  {
    "text": "any available options are now more",
    "start": "543680",
    "end": "545519"
  },
  {
    "text": "mature more diverse and tailored to",
    "start": "545519",
    "end": "547600"
  },
  {
    "text": "specific",
    "start": "547600",
    "end": "548160"
  },
  {
    "text": "scenarios as well linker d for example",
    "start": "548160",
    "end": "551040"
  },
  {
    "text": "recently launched multi-cluster support",
    "start": "551040",
    "end": "553200"
  },
  {
    "text": "so make sure that you do a proper",
    "start": "553200",
    "end": "554640"
  },
  {
    "text": "product selection based on your",
    "start": "554640",
    "end": "555920"
  },
  {
    "text": "requirements before diving in head first",
    "start": "555920",
    "end": "558800"
  },
  {
    "start": "558000",
    "end": "783000"
  },
  {
    "text": "okay we said this wasn't going to be a",
    "start": "558800",
    "end": "561040"
  },
  {
    "text": "what is service",
    "start": "561040",
    "end": "562000"
  },
  {
    "text": "mesh talk but we are going to deep dive",
    "start": "562000",
    "end": "564560"
  },
  {
    "text": "into some of the things that were",
    "start": "564560",
    "end": "565760"
  },
  {
    "text": "particularly relevant to the journey",
    "start": "565760",
    "end": "568480"
  },
  {
    "text": "as you probably know istio's data plane",
    "start": "568480",
    "end": "570720"
  },
  {
    "text": "is made up of envoy proxies",
    "start": "570720",
    "end": "573279"
  },
  {
    "text": "so typically on kubernetes an envoy",
    "start": "573279",
    "end": "575440"
  },
  {
    "text": "proxy gets injected into each of your",
    "start": "575440",
    "end": "577360"
  },
  {
    "text": "application pods",
    "start": "577360",
    "end": "579440"
  },
  {
    "text": "you see the envoy referred to as the",
    "start": "579440",
    "end": "581360"
  },
  {
    "text": "service proxy",
    "start": "581360",
    "end": "582640"
  },
  {
    "text": "or the site car the istio control plane",
    "start": "582640",
    "end": "586160"
  },
  {
    "text": "watches the kubernetes api server and",
    "start": "586160",
    "end": "588800"
  },
  {
    "text": "maintains a registry of all the services",
    "start": "588800",
    "end": "590640"
  },
  {
    "text": "in the mesh",
    "start": "590640",
    "end": "592000"
  },
  {
    "text": "and it uses that registry along with the",
    "start": "592000",
    "end": "594160"
  },
  {
    "text": "istio configuration that you provide",
    "start": "594160",
    "end": "596399"
  },
  {
    "text": "to manage envoy proxies using the envoy",
    "start": "596399",
    "end": "598880"
  },
  {
    "text": "xds apis",
    "start": "598880",
    "end": "600720"
  },
  {
    "text": "and that's how a load of separate envoys",
    "start": "600720",
    "end": "602880"
  },
  {
    "text": "are formed into a single",
    "start": "602880",
    "end": "604000"
  },
  {
    "text": "mesh once services have an envoysight",
    "start": "604000",
    "end": "607600"
  },
  {
    "text": "car",
    "start": "607600",
    "end": "608399"
  },
  {
    "text": "the proxies become directly responsible",
    "start": "608399",
    "end": "610480"
  },
  {
    "text": "for all of the routing of your service",
    "start": "610480",
    "end": "612079"
  },
  {
    "text": "to service traffic",
    "start": "612079",
    "end": "614000"
  },
  {
    "text": "for the client-side load balancers envoy",
    "start": "614000",
    "end": "616480"
  },
  {
    "text": "maintains",
    "start": "616480",
    "end": "617360"
  },
  {
    "text": "clusters of healthy endpoints that's not",
    "start": "617360",
    "end": "620320"
  },
  {
    "text": "kubernetes clusters",
    "start": "620320",
    "end": "622079"
  },
  {
    "text": "so it's definitely useful to have a",
    "start": "622079",
    "end": "623440"
  },
  {
    "text": "pretty good understanding of envoy",
    "start": "623440",
    "end": "624959"
  },
  {
    "text": "terminology",
    "start": "624959",
    "end": "626000"
  },
  {
    "text": "if you're serious about doing mesh each",
    "start": "626000",
    "end": "629120"
  },
  {
    "text": "endpoint in a cluster is simply the",
    "start": "629120",
    "end": "630800"
  },
  {
    "text": "destination ip address for a port",
    "start": "630800",
    "end": "632880"
  },
  {
    "text": "and a port the traffic flows between pod",
    "start": "632880",
    "end": "635920"
  },
  {
    "text": "ip addresses",
    "start": "635920",
    "end": "637200"
  },
  {
    "text": "and doesn't follow the usual ip tables",
    "start": "637200",
    "end": "639200"
  },
  {
    "text": "routing which is programmed by cube",
    "start": "639200",
    "end": "640720"
  },
  {
    "text": "proxy and kubernetes",
    "start": "640720",
    "end": "643040"
  },
  {
    "text": "by having a service mesh running across",
    "start": "643040",
    "end": "644880"
  },
  {
    "text": "multiple kubernetes clusters we hope to",
    "start": "644880",
    "end": "646720"
  },
  {
    "text": "make the cluster boundary",
    "start": "646720",
    "end": "648320"
  },
  {
    "text": "much less significant client-side load",
    "start": "648320",
    "end": "651279"
  },
  {
    "text": "balancing",
    "start": "651279",
    "end": "651920"
  },
  {
    "text": "is one of the most powerful concepts in",
    "start": "651920",
    "end": "653760"
  },
  {
    "text": "service mesh",
    "start": "653760",
    "end": "655519"
  },
  {
    "text": "and the bulb.com gke clusters are set up",
    "start": "655519",
    "end": "657760"
  },
  {
    "text": "to use vpc native networking",
    "start": "657760",
    "end": "660160"
  },
  {
    "text": "which basically means the pods get an ip",
    "start": "660160",
    "end": "662640"
  },
  {
    "text": "address from a reserved",
    "start": "662640",
    "end": "664000"
  },
  {
    "text": "subnet in the vpc and all of the pod ip",
    "start": "664000",
    "end": "667040"
  },
  {
    "text": "addresses in all of the clusters are",
    "start": "667040",
    "end": "668640"
  },
  {
    "text": "directly routable",
    "start": "668640",
    "end": "669600"
  },
  {
    "text": "in a flat network with client-side load",
    "start": "669600",
    "end": "672560"
  },
  {
    "text": "balancing",
    "start": "672560",
    "end": "673680"
  },
  {
    "text": "envoy proxies can seamlessly send",
    "start": "673680",
    "end": "675440"
  },
  {
    "text": "traffic to endpoints on any gke cluster",
    "start": "675440",
    "end": "677839"
  },
  {
    "text": "that is in the mesh",
    "start": "677839",
    "end": "679120"
  },
  {
    "text": "as well as other network locations that",
    "start": "679120",
    "end": "681120"
  },
  {
    "text": "are part of the mesh",
    "start": "681120",
    "end": "682560"
  },
  {
    "text": "and a nice side effect of that is a lot",
    "start": "682560",
    "end": "685040"
  },
  {
    "text": "of separately managed internal load",
    "start": "685040",
    "end": "686560"
  },
  {
    "text": "balancers can now be deleted",
    "start": "686560",
    "end": "689839"
  },
  {
    "text": "so zero trust networking",
    "start": "689839",
    "end": "692880"
  },
  {
    "text": "we originally expected to hear an",
    "start": "692880",
    "end": "694160"
  },
  {
    "text": "audible groan when we heard this",
    "start": "694160",
    "end": "695920"
  },
  {
    "text": "when you heard this jargon mentioned",
    "start": "695920",
    "end": "697600"
  },
  {
    "text": "that this talk's recorded so it doesn't",
    "start": "697600",
    "end": "699440"
  },
  {
    "text": "matter now",
    "start": "699440",
    "end": "700720"
  },
  {
    "text": "it sounds like jargon and marketing hype",
    "start": "700720",
    "end": "703360"
  },
  {
    "text": "but it's important",
    "start": "703360",
    "end": "704959"
  },
  {
    "text": "security is really important to bold.com",
    "start": "704959",
    "end": "707920"
  },
  {
    "text": "especially in these days of gdpr",
    "start": "707920",
    "end": "709839"
  },
  {
    "text": "regulation",
    "start": "709839",
    "end": "711760"
  },
  {
    "text": "here is how istio and envoy help",
    "start": "711760",
    "end": "715360"
  },
  {
    "text": "each service gets its own identity and",
    "start": "715360",
    "end": "717680"
  },
  {
    "text": "the important thing about that identity",
    "start": "717680",
    "end": "720079"
  },
  {
    "text": "is that it truly represents the",
    "start": "720079",
    "end": "721600"
  },
  {
    "text": "application unlike an ip address",
    "start": "721600",
    "end": "724240"
  },
  {
    "text": "which in the kubernetes world is",
    "start": "724240",
    "end": "725600"
  },
  {
    "text": "something very ephemeral",
    "start": "725600",
    "end": "727839"
  },
  {
    "text": "we want applications to be able to",
    "start": "727839",
    "end": "729120"
  },
  {
    "text": "communicate with each other but we need",
    "start": "729120",
    "end": "730639"
  },
  {
    "text": "a way for applications",
    "start": "730639",
    "end": "732079"
  },
  {
    "text": "to trust each other based on their",
    "start": "732079",
    "end": "734000"
  },
  {
    "text": "identity and not an ip",
    "start": "734000",
    "end": "736320"
  },
  {
    "text": "and for that to happen we need a few",
    "start": "736320",
    "end": "737760"
  },
  {
    "text": "other things credentials",
    "start": "737760",
    "end": "739920"
  },
  {
    "text": "so these come in the form of tls",
    "start": "739920",
    "end": "742839"
  },
  {
    "text": "certificates mutual tls provides the",
    "start": "742839",
    "end": "745360"
  },
  {
    "text": "means of",
    "start": "745360",
    "end": "745920"
  },
  {
    "text": "authentication and for those of you",
    "start": "745920",
    "end": "748959"
  },
  {
    "text": "who haven't run into mutual tls it's",
    "start": "748959",
    "end": "750639"
  },
  {
    "text": "very simple it just uses an optional",
    "start": "750639",
    "end": "753040"
  },
  {
    "text": "feature of the standard tls handshake",
    "start": "753040",
    "end": "755440"
  },
  {
    "text": "so that the client also presents a",
    "start": "755440",
    "end": "757360"
  },
  {
    "text": "certificate and the server verifies it",
    "start": "757360",
    "end": "760560"
  },
  {
    "text": "and of course mutual tls gives you",
    "start": "760560",
    "end": "762639"
  },
  {
    "text": "encryption too",
    "start": "762639",
    "end": "764560"
  },
  {
    "text": "and then finally authorization now that",
    "start": "764560",
    "end": "767360"
  },
  {
    "text": "we have identity",
    "start": "767360",
    "end": "768560"
  },
  {
    "text": "and authentication we have a policy api",
    "start": "768560",
    "end": "771760"
  },
  {
    "text": "to say which services are allowed to",
    "start": "771760",
    "end": "773440"
  },
  {
    "text": "talk to each other",
    "start": "773440",
    "end": "775760"
  },
  {
    "text": "later on we found that there were some",
    "start": "775760",
    "end": "777920"
  },
  {
    "text": "caveats to xero trust",
    "start": "777920",
    "end": "779920"
  },
  {
    "text": "with service mesh alone and we'll get to",
    "start": "779920",
    "end": "782240"
  },
  {
    "text": "that soon",
    "start": "782240",
    "end": "783279"
  },
  {
    "start": "783000",
    "end": "834000"
  },
  {
    "text": "so it's clear that this was not a",
    "start": "783279",
    "end": "784959"
  },
  {
    "text": "so-called green field deployment",
    "start": "784959",
    "end": "786959"
  },
  {
    "text": "that would have been a wonderful luxury",
    "start": "786959",
    "end": "789839"
  },
  {
    "text": "ball.com are running hundreds of",
    "start": "789839",
    "end": "791440"
  },
  {
    "text": "applications using all sorts of",
    "start": "791440",
    "end": "793360"
  },
  {
    "text": "different technologies",
    "start": "793360",
    "end": "795360"
  },
  {
    "text": "being able to migrate incrementally was",
    "start": "795360",
    "end": "797279"
  },
  {
    "text": "a serious concern and it turns out",
    "start": "797279",
    "end": "799360"
  },
  {
    "text": "rightly so",
    "start": "799360",
    "end": "800959"
  },
  {
    "text": "this was the hardest and most",
    "start": "800959",
    "end": "802320"
  },
  {
    "text": "time-consuming part of the project",
    "start": "802320",
    "end": "804639"
  },
  {
    "text": "and this is what we are getting at when",
    "start": "804639",
    "end": "806000"
  },
  {
    "text": "we talk about weaving the mesh",
    "start": "806000",
    "end": "808800"
  },
  {
    "text": "an application becomes part of the mesh",
    "start": "808800",
    "end": "810639"
  },
  {
    "text": "when an invoice service proxy is",
    "start": "810639",
    "end": "812320"
  },
  {
    "text": "injected as a side car",
    "start": "812320",
    "end": "814240"
  },
  {
    "text": "and the pods network is programmed so",
    "start": "814240",
    "end": "816079"
  },
  {
    "text": "that all traffic entering and leaving",
    "start": "816079",
    "end": "817760"
  },
  {
    "text": "the application",
    "start": "817760",
    "end": "818880"
  },
  {
    "text": "is handled by envoy in this project we",
    "start": "818880",
    "end": "822079"
  },
  {
    "text": "were",
    "start": "822079",
    "end": "822399"
  },
  {
    "text": "only focused on enabling the sidecar",
    "start": "822399",
    "end": "825600"
  },
  {
    "text": "don't start using any of the features",
    "start": "825600",
    "end": "827040"
  },
  {
    "text": "yet only when you've got the side cars",
    "start": "827040",
    "end": "829519"
  },
  {
    "text": "in",
    "start": "829519",
    "end": "830160"
  },
  {
    "text": "then start using features and realizing",
    "start": "830160",
    "end": "832399"
  },
  {
    "text": "the benefits",
    "start": "832399",
    "end": "834160"
  },
  {
    "start": "834000",
    "end": "875000"
  },
  {
    "text": "at a really high level we plan several",
    "start": "834160",
    "end": "836000"
  },
  {
    "text": "phases to weave the mesh",
    "start": "836000",
    "end": "838240"
  },
  {
    "text": "lots of preparation enabling side cars",
    "start": "838240",
    "end": "841199"
  },
  {
    "text": "in permissive",
    "start": "841199",
    "end": "842000"
  },
  {
    "text": "mutual tls mode with something called",
    "start": "842000",
    "end": "844240"
  },
  {
    "text": "auto mtls turned on",
    "start": "844240",
    "end": "846639"
  },
  {
    "text": "enabling authorization policy switching",
    "start": "846639",
    "end": "850079"
  },
  {
    "text": "mutual tls to strict mode disallowing",
    "start": "850079",
    "end": "853120"
  },
  {
    "text": "plain text connections",
    "start": "853120",
    "end": "854959"
  },
  {
    "text": "and then eventually cleaning up all the",
    "start": "854959",
    "end": "856720"
  },
  {
    "text": "loose ends and start adding more",
    "start": "856720",
    "end": "858800"
  },
  {
    "text": "features",
    "start": "858800",
    "end": "861120"
  },
  {
    "text": "broadly each step depended on the",
    "start": "861120",
    "end": "862639"
  },
  {
    "text": "previous step for the whole mesh",
    "start": "862639",
    "end": "865360"
  },
  {
    "text": "we knew the adoption would have to",
    "start": "865360",
    "end": "867120"
  },
  {
    "text": "happen incrementally",
    "start": "867120",
    "end": "868399"
  },
  {
    "text": "namespace by namespace or even by",
    "start": "868399",
    "end": "871120"
  },
  {
    "text": "workload",
    "start": "871120",
    "end": "872320"
  },
  {
    "text": "and we would depend on lots of different",
    "start": "872320",
    "end": "874079"
  },
  {
    "text": "application teams",
    "start": "874079",
    "end": "875440"
  },
  {
    "start": "875000",
    "end": "968000"
  },
  {
    "text": "initially developers were given the",
    "start": "875440",
    "end": "876880"
  },
  {
    "text": "option to opt in to having the sidecar",
    "start": "876880",
    "end": "878720"
  },
  {
    "text": "in their workloads",
    "start": "878720",
    "end": "880160"
  },
  {
    "text": "emails were sent documentation was",
    "start": "880160",
    "end": "882079"
  },
  {
    "text": "shared people were nagged",
    "start": "882079",
    "end": "884000"
  },
  {
    "text": "at some point the majority of",
    "start": "884000",
    "end": "885680"
  },
  {
    "text": "applications had been migrated",
    "start": "885680",
    "end": "887760"
  },
  {
    "text": "and after that site cars were injected",
    "start": "887760",
    "end": "889440"
  },
  {
    "text": "by default",
    "start": "889440",
    "end": "890800"
  },
  {
    "text": "developers still had the option to opt",
    "start": "890800",
    "end": "892399"
  },
  {
    "text": "out if they really needed to",
    "start": "892399",
    "end": "894000"
  },
  {
    "text": "so what's the big deal about enabling",
    "start": "894000",
    "end": "895920"
  },
  {
    "text": "the sidecar",
    "start": "895920",
    "end": "897040"
  },
  {
    "text": "surely you just need to label a",
    "start": "897040",
    "end": "898720"
  },
  {
    "text": "namespace or a deployment",
    "start": "898720",
    "end": "901120"
  },
  {
    "text": "it turned out that enabling the sidecar",
    "start": "901120",
    "end": "903440"
  },
  {
    "text": "was messier than expected",
    "start": "903440",
    "end": "906320"
  },
  {
    "text": "more effort went into rolling out",
    "start": "906320",
    "end": "907760"
  },
  {
    "text": "service proxies to the existing",
    "start": "907760",
    "end": "909279"
  },
  {
    "text": "applications",
    "start": "909279",
    "end": "910399"
  },
  {
    "text": "than any other part of the project",
    "start": "910399",
    "end": "913040"
  },
  {
    "text": "remember there are approximately 500",
    "start": "913040",
    "end": "914720"
  },
  {
    "text": "services using all kinds of different",
    "start": "914720",
    "end": "916639"
  },
  {
    "text": "technologies and protocols",
    "start": "916639",
    "end": "919040"
  },
  {
    "text": "so we're going to talk a bit in more",
    "start": "919040",
    "end": "920320"
  },
  {
    "text": "detail about some of the things you need",
    "start": "920320",
    "end": "921839"
  },
  {
    "text": "to think about",
    "start": "921839",
    "end": "922639"
  },
  {
    "text": "when adding side cars to your",
    "start": "922639",
    "end": "924000"
  },
  {
    "text": "applications there are some simple",
    "start": "924000",
    "end": "926480"
  },
  {
    "text": "things that you just have to get done",
    "start": "926480",
    "end": "928720"
  },
  {
    "text": "for example if you want http related",
    "start": "928720",
    "end": "931519"
  },
  {
    "text": "functionality",
    "start": "931519",
    "end": "932639"
  },
  {
    "text": "istio needs to be able to figure out",
    "start": "932639",
    "end": "934160"
  },
  {
    "text": "that you're using the http protocol",
    "start": "934160",
    "end": "936720"
  },
  {
    "text": "you need to prefix the port names in",
    "start": "936720",
    "end": "938320"
  },
  {
    "text": "your kubernetes service with protocol",
    "start": "938320",
    "end": "941839"
  },
  {
    "text": "envoy seems to do some http response",
    "start": "941839",
    "end": "944320"
  },
  {
    "text": "validation",
    "start": "944320",
    "end": "945519"
  },
  {
    "text": "a malformed response header could",
    "start": "945519",
    "end": "947120"
  },
  {
    "text": "trigger a 503 error",
    "start": "947120",
    "end": "948959"
  },
  {
    "text": "so that just comes down to testing and",
    "start": "948959",
    "end": "950880"
  },
  {
    "text": "fixing",
    "start": "950880",
    "end": "953279"
  },
  {
    "text": "our applications are monitored with",
    "start": "953279",
    "end": "955120"
  },
  {
    "text": "prometheus and the logs go to",
    "start": "955120",
    "end": "956720"
  },
  {
    "text": "elasticsearch",
    "start": "956720",
    "end": "958560"
  },
  {
    "text": "when you enable restrictive policies you",
    "start": "958560",
    "end": "960720"
  },
  {
    "text": "have to make sure your observability",
    "start": "960720",
    "end": "962160"
  },
  {
    "text": "tools just keep working",
    "start": "962160",
    "end": "964399"
  },
  {
    "text": "and probably the most obvious thing is",
    "start": "964399",
    "end": "966320"
  },
  {
    "text": "that sidecars don't come for free",
    "start": "966320",
    "end": "968959"
  },
  {
    "start": "968000",
    "end": "1020000"
  },
  {
    "text": "there are thousands of pods in the",
    "start": "968959",
    "end": "970480"
  },
  {
    "text": "clusters so so that we knew that there",
    "start": "970480",
    "end": "972480"
  },
  {
    "text": "would be thousands of extra containers",
    "start": "972480",
    "end": "974720"
  },
  {
    "text": "and that's overhead you need to plan for",
    "start": "974720",
    "end": "977120"
  },
  {
    "text": "you can see it as a tax you get to pay",
    "start": "977120",
    "end": "978880"
  },
  {
    "text": "for the benefits of service mesh",
    "start": "978880",
    "end": "981199"
  },
  {
    "text": "and there are ways you can minimize it",
    "start": "981199",
    "end": "983120"
  },
  {
    "text": "just like tax",
    "start": "983120",
    "end": "984240"
  },
  {
    "text": "and there are various related things to",
    "start": "984240",
    "end": "985759"
  },
  {
    "text": "watch out for",
    "start": "985759",
    "end": "987440"
  },
  {
    "text": "you need to think about what happens",
    "start": "987440",
    "end": "988880"
  },
  {
    "text": "when your parts start and stop",
    "start": "988880",
    "end": "991440"
  },
  {
    "text": "things were not as we expected here and",
    "start": "991440",
    "end": "993279"
  },
  {
    "text": "we'll talk about that",
    "start": "993279",
    "end": "994959"
  },
  {
    "text": "and what if your application just",
    "start": "994959",
    "end": "996320"
  },
  {
    "text": "doesn't work well with service mesh",
    "start": "996320",
    "end": "998720"
  },
  {
    "text": "you probably don't want to compromise on",
    "start": "998720",
    "end": "1000399"
  },
  {
    "text": "your zero trust ideals",
    "start": "1000399",
    "end": "1002720"
  },
  {
    "text": "so we ended up accepting that exceptions",
    "start": "1002720",
    "end": "1004959"
  },
  {
    "text": "are a reality and we found an",
    "start": "1004959",
    "end": "1006480"
  },
  {
    "text": "interesting way to solve that",
    "start": "1006480",
    "end": "1008959"
  },
  {
    "text": "but before we dive into some of that",
    "start": "1008959",
    "end": "1010480"
  },
  {
    "text": "there was another major issue we ran",
    "start": "1010480",
    "end": "1012079"
  },
  {
    "text": "into",
    "start": "1012079",
    "end": "1012800"
  },
  {
    "text": "that luckily you don't need to worry",
    "start": "1012800",
    "end": "1014560"
  },
  {
    "text": "about now and we picked up a couple of",
    "start": "1014560",
    "end": "1016720"
  },
  {
    "text": "best practices",
    "start": "1016720",
    "end": "1018000"
  },
  {
    "text": "remco is going to tell you all about",
    "start": "1018000",
    "end": "1019440"
  },
  {
    "text": "that we deployed",
    "start": "1019440",
    "end": "1021120"
  },
  {
    "start": "1020000",
    "end": "1141000"
  },
  {
    "text": "our gke test environment on google",
    "start": "1021120",
    "end": "1022959"
  },
  {
    "text": "preventable vms",
    "start": "1022959",
    "end": "1024240"
  },
  {
    "text": "which can disappear with a few seconds",
    "start": "1024240",
    "end": "1026319"
  },
  {
    "text": "notice",
    "start": "1026319",
    "end": "1028000"
  },
  {
    "text": "this turned out to have an unexpected",
    "start": "1028000",
    "end": "1029839"
  },
  {
    "text": "benefit",
    "start": "1029839",
    "end": "1031678"
  },
  {
    "text": "they served as an excellent chaos monkey",
    "start": "1031679",
    "end": "1035038"
  },
  {
    "text": "when a service proxy comes up as a",
    "start": "1035039",
    "end": "1037678"
  },
  {
    "text": "sidecar inside a bug",
    "start": "1037679",
    "end": "1039678"
  },
  {
    "text": "by default istio uses an init container",
    "start": "1039679",
    "end": "1042079"
  },
  {
    "text": "to reprogram the bot's network",
    "start": "1042079",
    "end": "1044480"
  },
  {
    "text": "so that all tcp traffic in and out of",
    "start": "1044480",
    "end": "1046798"
  },
  {
    "text": "the bot is handled by the proxy",
    "start": "1046799",
    "end": "1049840"
  },
  {
    "text": "we decided not to use the default",
    "start": "1049840",
    "end": "1051520"
  },
  {
    "text": "network capture mechanism",
    "start": "1051520",
    "end": "1053039"
  },
  {
    "text": "because we had concerns about privileges",
    "start": "1053039",
    "end": "1056400"
  },
  {
    "text": "because the init container needs",
    "start": "1056400",
    "end": "1057919"
  },
  {
    "text": "netadmin capability to modify iptables",
    "start": "1057919",
    "end": "1061120"
  },
  {
    "text": "that basically meant that we would have",
    "start": "1061120",
    "end": "1063360"
  },
  {
    "text": "need to grant that privilege to",
    "start": "1063360",
    "end": "1065280"
  },
  {
    "text": "anyone and anything that could make a",
    "start": "1065280",
    "end": "1067520"
  },
  {
    "text": "deployment onto our kubernetes clusters",
    "start": "1067520",
    "end": "1070960"
  },
  {
    "text": "luckily there was an alternative an",
    "start": "1070960",
    "end": "1072960"
  },
  {
    "text": "istio cni plugin",
    "start": "1072960",
    "end": "1075679"
  },
  {
    "text": "which does not need those elevated",
    "start": "1075679",
    "end": "1077520"
  },
  {
    "text": "privileges",
    "start": "1077520",
    "end": "1079039"
  },
  {
    "text": "unfortunately our preemptible chaos",
    "start": "1079039",
    "end": "1081840"
  },
  {
    "text": "monkey exposed the problem",
    "start": "1081840",
    "end": "1084080"
  },
  {
    "text": "pods on a vm that just got preempted",
    "start": "1084080",
    "end": "1086480"
  },
  {
    "text": "would often come up without the iptable",
    "start": "1086480",
    "end": "1088880"
  },
  {
    "text": "rules being properly updated",
    "start": "1088880",
    "end": "1091600"
  },
  {
    "text": "not necessarily an issue if you don't",
    "start": "1091600",
    "end": "1093440"
  },
  {
    "text": "use preemptable",
    "start": "1093440",
    "end": "1094640"
  },
  {
    "text": "vms in production but the issue might",
    "start": "1094640",
    "end": "1096880"
  },
  {
    "text": "occur there as well",
    "start": "1096880",
    "end": "1097919"
  },
  {
    "text": "under other circumstances another piece",
    "start": "1097919",
    "end": "1101280"
  },
  {
    "text": "of luck here is that we happened to be",
    "start": "1101280",
    "end": "1103120"
  },
  {
    "text": "at cubecon san diego at the time when we",
    "start": "1103120",
    "end": "1105120"
  },
  {
    "text": "noticed the problem",
    "start": "1105120",
    "end": "1106960"
  },
  {
    "text": "james was there as well and he tracked",
    "start": "1106960",
    "end": "1108640"
  },
  {
    "text": "down some seo contributors",
    "start": "1108640",
    "end": "1110320"
  },
  {
    "text": "and we managed to find the cost by",
    "start": "1110320",
    "end": "1112000"
  },
  {
    "text": "sitting at while sitting at the booth",
    "start": "1112000",
    "end": "1114400"
  },
  {
    "text": "it turned out to be a race condition",
    "start": "1114400",
    "end": "1115840"
  },
  {
    "text": "with galico when",
    "start": "1115840",
    "end": "1117520"
  },
  {
    "text": "new nodes came up that issue is solved",
    "start": "1117520",
    "end": "1120720"
  },
  {
    "text": "upstream now so it won't bother anyone",
    "start": "1120720",
    "end": "1122720"
  },
  {
    "text": "anymore",
    "start": "1122720",
    "end": "1124400"
  },
  {
    "text": "so there's two suggestions here you",
    "start": "1124400",
    "end": "1127039"
  },
  {
    "text": "could use the istio c9 plugin for",
    "start": "1127039",
    "end": "1129039"
  },
  {
    "text": "network capture",
    "start": "1129039",
    "end": "1130240"
  },
  {
    "text": "rather than the default behavior and",
    "start": "1130240",
    "end": "1133600"
  },
  {
    "text": "do some chaos testing preemptable vms",
    "start": "1133600",
    "end": "1136320"
  },
  {
    "text": "helped us in the beginning",
    "start": "1136320",
    "end": "1137440"
  },
  {
    "text": "but we ended up deploying a tool to",
    "start": "1137440",
    "end": "1139120"
  },
  {
    "text": "randomly kill parts in the end as well",
    "start": "1139120",
    "end": "1141360"
  },
  {
    "start": "1141000",
    "end": "1243000"
  },
  {
    "text": "let's talk about the overhead of the",
    "start": "1141360",
    "end": "1142720"
  },
  {
    "text": "data plane when the sidecar container is",
    "start": "1142720",
    "end": "1145120"
  },
  {
    "text": "injected",
    "start": "1145120",
    "end": "1145760"
  },
  {
    "text": "some resource requests and limits are",
    "start": "1145760",
    "end": "1147919"
  },
  {
    "text": "set",
    "start": "1147919",
    "end": "1148880"
  },
  {
    "text": "as you can see from these tables",
    "start": "1148880",
    "end": "1150640"
  },
  {
    "text": "ultimately we were able to substantially",
    "start": "1150640",
    "end": "1152720"
  },
  {
    "text": "reduce the default limits that each",
    "start": "1152720",
    "end": "1154480"
  },
  {
    "text": "other sets",
    "start": "1154480",
    "end": "1156080"
  },
  {
    "text": "one thing to watch out for resource",
    "start": "1156080",
    "end": "1158240"
  },
  {
    "text": "quotas are used on the namespaces at",
    "start": "1158240",
    "end": "1159919"
  },
  {
    "text": "bold.com",
    "start": "1159919",
    "end": "1160960"
  },
  {
    "text": "and adding a bunch of side by side cars",
    "start": "1160960",
    "end": "1163200"
  },
  {
    "text": "could easily push",
    "start": "1163200",
    "end": "1164000"
  },
  {
    "text": "a team above its limits so be prepared",
    "start": "1164000",
    "end": "1166240"
  },
  {
    "text": "to adjust these",
    "start": "1166240",
    "end": "1167360"
  },
  {
    "text": "or you might not be even be able to",
    "start": "1167360",
    "end": "1169120"
  },
  {
    "text": "start pods",
    "start": "1169120",
    "end": "1171440"
  },
  {
    "text": "the proxies don't buffer traffic and the",
    "start": "1171440",
    "end": "1173600"
  },
  {
    "text": "potential throughput in requests per",
    "start": "1173600",
    "end": "1175280"
  },
  {
    "text": "second",
    "start": "1175280",
    "end": "1175679"
  },
  {
    "text": "is generally determined by the available",
    "start": "1175679",
    "end": "1177520"
  },
  {
    "text": "cpu",
    "start": "1177520",
    "end": "1179280"
  },
  {
    "text": "our limit of 0.4 cpu per proxy gets us",
    "start": "1179280",
    "end": "1182480"
  },
  {
    "text": "about 700 requests per second",
    "start": "1182480",
    "end": "1185760"
  },
  {
    "text": "one thing that made a dramatic",
    "start": "1185760",
    "end": "1187360"
  },
  {
    "text": "difference to memory consumption",
    "start": "1187360",
    "end": "1189120"
  },
  {
    "text": "was limiting the configuration scope of",
    "start": "1189120",
    "end": "1191039"
  },
  {
    "text": "the proxies by segmenting the mesh",
    "start": "1191039",
    "end": "1193679"
  },
  {
    "text": "more about that in a moment",
    "start": "1193679",
    "end": "1196720"
  },
  {
    "text": "if you use the horizontal pod autoscaler",
    "start": "1196720",
    "end": "1199440"
  },
  {
    "text": "you need to think about that",
    "start": "1199440",
    "end": "1200480"
  },
  {
    "text": "too it works by summing cpu requests for",
    "start": "1200480",
    "end": "1204080"
  },
  {
    "text": "all the containers in pods",
    "start": "1204080",
    "end": "1206320"
  },
  {
    "text": "adding the side car can easily skew the",
    "start": "1206320",
    "end": "1208559"
  },
  {
    "text": "thresholds at which",
    "start": "1208559",
    "end": "1209679"
  },
  {
    "text": "auto scaling kicks in so you may need to",
    "start": "1209679",
    "end": "1212320"
  },
  {
    "text": "tune your auto scalers",
    "start": "1212320",
    "end": "1213840"
  },
  {
    "text": "to avoid not scaling soon enough or",
    "start": "1213840",
    "end": "1216159"
  },
  {
    "text": "wasting resources",
    "start": "1216159",
    "end": "1219200"
  },
  {
    "text": "obviously not every application is the",
    "start": "1219200",
    "end": "1221280"
  },
  {
    "text": "same",
    "start": "1221280",
    "end": "1222400"
  },
  {
    "text": "because of that we needed an easy way to",
    "start": "1222400",
    "end": "1224320"
  },
  {
    "text": "tune proxy resources",
    "start": "1224320",
    "end": "1226080"
  },
  {
    "text": "per deployment for example we might have",
    "start": "1226080",
    "end": "1229280"
  },
  {
    "text": "applications that do",
    "start": "1229280",
    "end": "1230559"
  },
  {
    "text": "lots of heavy processing but don't",
    "start": "1230559",
    "end": "1232720"
  },
  {
    "text": "handle many requests",
    "start": "1232720",
    "end": "1234159"
  },
  {
    "text": "or vice versa istio supports resource",
    "start": "1234159",
    "end": "1237360"
  },
  {
    "text": "annotations",
    "start": "1237360",
    "end": "1238400"
  },
  {
    "text": "which teams can simply add to their",
    "start": "1238400",
    "end": "1239840"
  },
  {
    "text": "deployments to tune requests and limits",
    "start": "1239840",
    "end": "1242240"
  },
  {
    "text": "for resources",
    "start": "1242240",
    "end": "1243679"
  },
  {
    "start": "1243000",
    "end": "1322000"
  },
  {
    "text": "we just explained that we were able to",
    "start": "1243679",
    "end": "1245760"
  },
  {
    "text": "use roughly half the memory per side",
    "start": "1245760",
    "end": "1247760"
  },
  {
    "text": "card that istio would request by default",
    "start": "1247760",
    "end": "1251039"
  },
  {
    "text": "in the most simple flat mesh every envoy",
    "start": "1251039",
    "end": "1253919"
  },
  {
    "text": "is programmed with load balancing config",
    "start": "1253919",
    "end": "1256159"
  },
  {
    "text": "for every other envoy in the mesh and",
    "start": "1256159",
    "end": "1258320"
  },
  {
    "text": "when you have a big mesh",
    "start": "1258320",
    "end": "1259440"
  },
  {
    "text": "that can blow up very quickly luckily",
    "start": "1259440",
    "end": "1262400"
  },
  {
    "text": "there is a solution",
    "start": "1262400",
    "end": "1263919"
  },
  {
    "text": "istio provides a kubernetes custom",
    "start": "1263919",
    "end": "1266080"
  },
  {
    "text": "resource called",
    "start": "1266080",
    "end": "1267120"
  },
  {
    "text": "sidecar this resource lets you limit",
    "start": "1267120",
    "end": "1270000"
  },
  {
    "text": "which services are configured as",
    "start": "1270000",
    "end": "1271440"
  },
  {
    "text": "destination endpoints in the client-side",
    "start": "1271440",
    "end": "1273440"
  },
  {
    "text": "load balancing config",
    "start": "1273440",
    "end": "1275520"
  },
  {
    "text": "so you can use it to segment your mesh",
    "start": "1275520",
    "end": "1277520"
  },
  {
    "text": "by namespace",
    "start": "1277520",
    "end": "1278640"
  },
  {
    "text": "or even with fine grained workload",
    "start": "1278640",
    "end": "1280400"
  },
  {
    "text": "selectors",
    "start": "1280400",
    "end": "1282159"
  },
  {
    "text": "then the proxies are only programmed",
    "start": "1282159",
    "end": "1284159"
  },
  {
    "text": "with config for the destinations that",
    "start": "1284159",
    "end": "1286159"
  },
  {
    "text": "they need to know about this greatly",
    "start": "1286159",
    "end": "1288799"
  },
  {
    "text": "reduces config bloat",
    "start": "1288799",
    "end": "1290240"
  },
  {
    "text": "and the memory consumption of proxies",
    "start": "1290240",
    "end": "1292320"
  },
  {
    "text": "but also the demands on the control",
    "start": "1292320",
    "end": "1294080"
  },
  {
    "text": "plane",
    "start": "1294080",
    "end": "1295760"
  },
  {
    "text": "it's completely essential to do this at",
    "start": "1295760",
    "end": "1298000"
  },
  {
    "text": "any real scale",
    "start": "1298000",
    "end": "1300159"
  },
  {
    "text": "bol.com used the sidecar resource to",
    "start": "1300159",
    "end": "1302159"
  },
  {
    "text": "segment their mesh from the beginning of",
    "start": "1302159",
    "end": "1303760"
  },
  {
    "text": "the roll",
    "start": "1303760",
    "end": "1304240"
  },
  {
    "text": "out so we don't have a nice graph like",
    "start": "1304240",
    "end": "1306720"
  },
  {
    "text": "the one in this tweet",
    "start": "1306720",
    "end": "1308000"
  },
  {
    "text": "from carl stoney at autotrader uk",
    "start": "1308000",
    "end": "1312080"
  },
  {
    "text": "it was actually possible to generate all",
    "start": "1312080",
    "end": "1314000"
  },
  {
    "text": "of the sidecar config",
    "start": "1314000",
    "end": "1315679"
  },
  {
    "text": "because the existing platform automation",
    "start": "1315679",
    "end": "1317520"
  },
  {
    "text": "at ball had",
    "start": "1317520",
    "end": "1319039"
  },
  {
    "text": "a graph of all the dependencies between",
    "start": "1319039",
    "end": "1320960"
  },
  {
    "text": "the services",
    "start": "1320960",
    "end": "1322080"
  },
  {
    "start": "1322000",
    "end": "1428000"
  },
  {
    "text": "another fun issue we ran into while",
    "start": "1322080",
    "end": "1324080"
  },
  {
    "text": "enabling sidecars is the fact that",
    "start": "1324080",
    "end": "1325760"
  },
  {
    "text": "currently a sidecar",
    "start": "1325760",
    "end": "1327039"
  },
  {
    "text": "isn't actually a sidecar in kubernetes",
    "start": "1327039",
    "end": "1329520"
  },
  {
    "text": "it's just another container running",
    "start": "1329520",
    "end": "1331360"
  },
  {
    "text": "inside the same pot",
    "start": "1331360",
    "end": "1333120"
  },
  {
    "text": "they're all first class citizens while",
    "start": "1333120",
    "end": "1336000"
  },
  {
    "text": "this can be problematic for all types of",
    "start": "1336000",
    "end": "1337760"
  },
  {
    "text": "workloads",
    "start": "1337760",
    "end": "1338799"
  },
  {
    "text": "the problem with this particularly",
    "start": "1338799",
    "end": "1340799"
  },
  {
    "text": "impacts cron jobs",
    "start": "1340799",
    "end": "1342799"
  },
  {
    "text": "since a cron job is supposed to",
    "start": "1342799",
    "end": "1344320"
  },
  {
    "text": "terminate once the work is done",
    "start": "1344320",
    "end": "1346000"
  },
  {
    "text": "kubernetes depends on a container",
    "start": "1346000",
    "end": "1347760"
  },
  {
    "text": "exiting with either",
    "start": "1347760",
    "end": "1349039"
  },
  {
    "text": "an error or zero to determine the",
    "start": "1349039",
    "end": "1351520"
  },
  {
    "text": "successful completion of such a cron job",
    "start": "1351520",
    "end": "1354400"
  },
  {
    "text": "but since the android proxy is just",
    "start": "1354400",
    "end": "1356400"
  },
  {
    "text": "another container",
    "start": "1356400",
    "end": "1357600"
  },
  {
    "text": "it will remain running once the main",
    "start": "1357600",
    "end": "1359600"
  },
  {
    "text": "container is done",
    "start": "1359600",
    "end": "1361280"
  },
  {
    "text": "effectively keeping the chrome job",
    "start": "1361280",
    "end": "1362880"
  },
  {
    "text": "running",
    "start": "1362880",
    "end": "1364400"
  },
  {
    "text": "the same holds true for starting",
    "start": "1364400",
    "end": "1365840"
  },
  {
    "text": "workloads many applications require",
    "start": "1365840",
    "end": "1368400"
  },
  {
    "text": "network connectivity during their",
    "start": "1368400",
    "end": "1369760"
  },
  {
    "text": "initialization",
    "start": "1369760",
    "end": "1371360"
  },
  {
    "text": "that's a problem if the sidecar isn't",
    "start": "1371360",
    "end": "1373039"
  },
  {
    "text": "ready yet",
    "start": "1373039",
    "end": "1374640"
  },
  {
    "text": "native support for sidecars is a feature",
    "start": "1374640",
    "end": "1377039"
  },
  {
    "text": "that the kubernetes team is currently",
    "start": "1377039",
    "end": "1378640"
  },
  {
    "text": "working on",
    "start": "1378640",
    "end": "1379440"
  },
  {
    "text": "but due to the many prerequisites it",
    "start": "1379440",
    "end": "1381360"
  },
  {
    "text": "might take some time for the particular",
    "start": "1381360",
    "end": "1383039"
  },
  {
    "text": "feature to appear in a release",
    "start": "1383039",
    "end": "1385440"
  },
  {
    "text": "given our current problems we weren't",
    "start": "1385440",
    "end": "1387840"
  },
  {
    "text": "able to wait that out so we needed a",
    "start": "1387840",
    "end": "1389679"
  },
  {
    "text": "temporary solution",
    "start": "1389679",
    "end": "1391440"
  },
  {
    "text": "cue scuttle scuttle is a lightweight",
    "start": "1391440",
    "end": "1394159"
  },
  {
    "text": "wrapper",
    "start": "1394159",
    "end": "1394720"
  },
  {
    "text": "for the main container in a pod that",
    "start": "1394720",
    "end": "1396799"
  },
  {
    "text": "blocks until the sidecar proxy is ready",
    "start": "1396799",
    "end": "1399200"
  },
  {
    "text": "to handle traffic",
    "start": "1399200",
    "end": "1400400"
  },
  {
    "text": "and it will shut down the proxy once the",
    "start": "1400400",
    "end": "1402720"
  },
  {
    "text": "main process terminates",
    "start": "1402720",
    "end": "1405440"
  },
  {
    "text": "this addressed the problem with chrome",
    "start": "1405440",
    "end": "1406960"
  },
  {
    "text": "jobs as cuddle is currently recommended",
    "start": "1406960",
    "end": "1409360"
  },
  {
    "text": "for all sidecar enabled workloads within",
    "start": "1409360",
    "end": "1411520"
  },
  {
    "text": "our setup",
    "start": "1411520",
    "end": "1412799"
  },
  {
    "text": "unfortunately that also meant that most",
    "start": "1412799",
    "end": "1414799"
  },
  {
    "text": "container images had to be updated to",
    "start": "1414799",
    "end": "1416640"
  },
  {
    "text": "include scuttle",
    "start": "1416640",
    "end": "1418240"
  },
  {
    "text": "which was a job that needed to be",
    "start": "1418240",
    "end": "1419840"
  },
  {
    "text": "executed by the featured teams",
    "start": "1419840",
    "end": "1421440"
  },
  {
    "text": "since they were the ones building",
    "start": "1421440",
    "end": "1422720"
  },
  {
    "text": "containers in addition to the work they",
    "start": "1422720",
    "end": "1424880"
  },
  {
    "text": "had to perform to make their apps",
    "start": "1424880",
    "end": "1427039"
  },
  {
    "text": "mesh enabled in the first place one of",
    "start": "1427039",
    "end": "1429120"
  },
  {
    "start": "1428000",
    "end": "1568000"
  },
  {
    "text": "the first benefits",
    "start": "1429120",
    "end": "1430240"
  },
  {
    "text": "of having a majority of the workloads",
    "start": "1430240",
    "end": "1432640"
  },
  {
    "text": "now being equipped with a sidecar",
    "start": "1432640",
    "end": "1434799"
  },
  {
    "text": "was the automatic use of mutual tls for",
    "start": "1434799",
    "end": "1437360"
  },
  {
    "text": "service to service traffic",
    "start": "1437360",
    "end": "1439679"
  },
  {
    "text": "the sidecars when they were injected",
    "start": "1439679",
    "end": "1441279"
  },
  {
    "text": "were configured to use permissive mode",
    "start": "1441279",
    "end": "1443520"
  },
  {
    "text": "with mutual tls that meant that service",
    "start": "1443520",
    "end": "1446000"
  },
  {
    "text": "proxies could accept both",
    "start": "1446000",
    "end": "1447760"
  },
  {
    "text": "mutual tls and plaintext connections",
    "start": "1447760",
    "end": "1451039"
  },
  {
    "text": "allowing both regular and sidecar",
    "start": "1451039",
    "end": "1453200"
  },
  {
    "text": "enabled services to communicate with",
    "start": "1453200",
    "end": "1454880"
  },
  {
    "text": "them",
    "start": "1454880",
    "end": "1456320"
  },
  {
    "text": "initially we thought that we would need",
    "start": "1456320",
    "end": "1457840"
  },
  {
    "text": "to configure which routes",
    "start": "1457840",
    "end": "1459360"
  },
  {
    "text": "should use mutual tls and then a feature",
    "start": "1459360",
    "end": "1462000"
  },
  {
    "text": "called auto mtls appeared",
    "start": "1462000",
    "end": "1464799"
  },
  {
    "text": "auto mtls uses the information in the",
    "start": "1464799",
    "end": "1467919"
  },
  {
    "text": "meshes service registry and will",
    "start": "1467919",
    "end": "1470240"
  },
  {
    "text": "automatically use mutual tls",
    "start": "1470240",
    "end": "1472000"
  },
  {
    "text": "connections wherever they are supported",
    "start": "1472000",
    "end": "1474799"
  },
  {
    "text": "and that saved us a lot of extra",
    "start": "1474799",
    "end": "1476400"
  },
  {
    "text": "manual configuration hassle and while",
    "start": "1476400",
    "end": "1479679"
  },
  {
    "text": "this is a great feature to allow for a",
    "start": "1479679",
    "end": "1481279"
  },
  {
    "text": "seamless migration",
    "start": "1481279",
    "end": "1482960"
  },
  {
    "text": "at some point the plan is to enable",
    "start": "1482960",
    "end": "1484640"
  },
  {
    "text": "strict mode for most of the applications",
    "start": "1484640",
    "end": "1487039"
  },
  {
    "text": "to ensure security of in-flight data on",
    "start": "1487039",
    "end": "1489279"
  },
  {
    "text": "all of the connections",
    "start": "1489279",
    "end": "1490640"
  },
  {
    "text": "between services there are all sorts of",
    "start": "1490640",
    "end": "1493440"
  },
  {
    "text": "applications out there",
    "start": "1493440",
    "end": "1494960"
  },
  {
    "text": "we've said a bit about needing to",
    "start": "1494960",
    "end": "1496240"
  },
  {
    "text": "customize resource requests for service",
    "start": "1496240",
    "end": "1498240"
  },
  {
    "text": "proxies",
    "start": "1498240",
    "end": "1499360"
  },
  {
    "text": "we've also found that the reality is",
    "start": "1499360",
    "end": "1501360"
  },
  {
    "text": "that sometimes",
    "start": "1501360",
    "end": "1502559"
  },
  {
    "text": "you'll need to bypass the proxy for",
    "start": "1502559",
    "end": "1504320"
  },
  {
    "text": "certain ports",
    "start": "1504320",
    "end": "1505919"
  },
  {
    "text": "in particular.com use some technologies",
    "start": "1505919",
    "end": "1508240"
  },
  {
    "text": "like hazelcast and zookeeper",
    "start": "1508240",
    "end": "1511200"
  },
  {
    "text": "these both have some sort of discovery",
    "start": "1511200",
    "end": "1513200"
  },
  {
    "text": "and clustering mechanism",
    "start": "1513200",
    "end": "1515120"
  },
  {
    "text": "they want to announce their pod ips",
    "start": "1515120",
    "end": "1516880"
  },
  {
    "text": "directly to each other",
    "start": "1516880",
    "end": "1518400"
  },
  {
    "text": "and that doesn't work properly with the",
    "start": "1518400",
    "end": "1520080"
  },
  {
    "text": "service proxy in the middle",
    "start": "1520080",
    "end": "1522480"
  },
  {
    "text": "the solution was to exclude certain",
    "start": "1522480",
    "end": "1524799"
  },
  {
    "text": "ingress ports from being captured by the",
    "start": "1524799",
    "end": "1526840"
  },
  {
    "text": "proxy",
    "start": "1526840",
    "end": "1528159"
  },
  {
    "text": "and luckily istio provides annotations",
    "start": "1528159",
    "end": "1530080"
  },
  {
    "text": "to do that",
    "start": "1530080",
    "end": "1531520"
  },
  {
    "text": "and bol.com teams can use those on their",
    "start": "1531520",
    "end": "1534080"
  },
  {
    "text": "deployments",
    "start": "1534080",
    "end": "1535919"
  },
  {
    "text": "so if the proxy can be bypassed what",
    "start": "1535919",
    "end": "1538480"
  },
  {
    "text": "happens to the whole",
    "start": "1538480",
    "end": "1539520"
  },
  {
    "text": "zero trust thing to fill those gaps we",
    "start": "1539520",
    "end": "1542720"
  },
  {
    "text": "decided to fall back on",
    "start": "1542720",
    "end": "1544400"
  },
  {
    "text": "network policy-based bulkheads and of",
    "start": "1544400",
    "end": "1547360"
  },
  {
    "text": "course",
    "start": "1547360",
    "end": "1547840"
  },
  {
    "text": "that needed to be automated the bol.com",
    "start": "1547840",
    "end": "1550799"
  },
  {
    "text": "team built custom kubernetes controller",
    "start": "1550799",
    "end": "1553360"
  },
  {
    "text": "to watch for deployments with certain",
    "start": "1553360",
    "end": "1555039"
  },
  {
    "text": "annotations and then",
    "start": "1555039",
    "end": "1556480"
  },
  {
    "text": "automatically create the the necessary",
    "start": "1556480",
    "end": "1559039"
  },
  {
    "text": "network policies",
    "start": "1559039",
    "end": "1561440"
  },
  {
    "text": "a network policy was also used to block",
    "start": "1561440",
    "end": "1563440"
  },
  {
    "text": "udp traffic between these namespaces",
    "start": "1563440",
    "end": "1565760"
  },
  {
    "text": "because",
    "start": "1565760",
    "end": "1566240"
  },
  {
    "text": "istio only intercepts tcp traffic and",
    "start": "1566240",
    "end": "1568880"
  },
  {
    "start": "1568000",
    "end": "1601000"
  },
  {
    "text": "that brings us to the current",
    "start": "1568880",
    "end": "1570000"
  },
  {
    "text": "state of affairs it's been an epic",
    "start": "1570000",
    "end": "1572320"
  },
  {
    "text": "journey so far",
    "start": "1572320",
    "end": "1573360"
  },
  {
    "text": "and we're nearing the end of the",
    "start": "1573360",
    "end": "1574559"
  },
  {
    "text": "migration as discussed today",
    "start": "1574559",
    "end": "1577039"
  },
  {
    "text": "at the time of this recording we have",
    "start": "1577039",
    "end": "1579120"
  },
  {
    "text": "the envoy sidecar enabled for over",
    "start": "1579120",
    "end": "1581520"
  },
  {
    "text": "91 of all of our workloads across all",
    "start": "1581520",
    "end": "1584320"
  },
  {
    "text": "environments",
    "start": "1584320",
    "end": "1585279"
  },
  {
    "text": "totaling roughly 3 500 bots",
    "start": "1585279",
    "end": "1589120"
  },
  {
    "text": "not all of the workloads have mtls and",
    "start": "1589120",
    "end": "1591919"
  },
  {
    "text": "authorization enabled yet",
    "start": "1591919",
    "end": "1594000"
  },
  {
    "text": "but since those migrations are left up",
    "start": "1594000",
    "end": "1595919"
  },
  {
    "text": "to the teams we're hoping to have the",
    "start": "1595919",
    "end": "1597440"
  },
  {
    "text": "majority",
    "start": "1597440",
    "end": "1598159"
  },
  {
    "text": "taking full advantage of the mesh",
    "start": "1598159",
    "end": "1599600"
  },
  {
    "text": "benefits by the end of august",
    "start": "1599600",
    "end": "1601760"
  },
  {
    "start": "1601000",
    "end": "1666000"
  },
  {
    "text": "here's a final summary of some things",
    "start": "1601760",
    "end": "1603520"
  },
  {
    "text": "that we think are best practices",
    "start": "1603520",
    "end": "1606159"
  },
  {
    "text": "be very incremental prepare and",
    "start": "1606159",
    "end": "1609279"
  },
  {
    "text": "educate application teams they need to",
    "start": "1609279",
    "end": "1611279"
  },
  {
    "text": "be on board",
    "start": "1611279",
    "end": "1613039"
  },
  {
    "text": "understand envoy and its configuration",
    "start": "1613039",
    "end": "1616240"
  },
  {
    "text": "use the istio cni plugin for injection",
    "start": "1616240",
    "end": "1619840"
  },
  {
    "text": "keep a careful eye on data plane",
    "start": "1619840",
    "end": "1621760"
  },
  {
    "text": "resource usage",
    "start": "1621760",
    "end": "1623120"
  },
  {
    "text": "avoid config bloat and segment with the",
    "start": "1623120",
    "end": "1625760"
  },
  {
    "text": "sidecar resource",
    "start": "1625760",
    "end": "1628080"
  },
  {
    "text": "and allow developers to tune service",
    "start": "1628080",
    "end": "1630000"
  },
  {
    "text": "proxy resource usage for their",
    "start": "1630000",
    "end": "1631760"
  },
  {
    "text": "applications",
    "start": "1631760",
    "end": "1633600"
  },
  {
    "text": "test everything carefully and",
    "start": "1633600",
    "end": "1636480"
  },
  {
    "text": "chaotically",
    "start": "1636480",
    "end": "1638480"
  },
  {
    "text": "expect to deal with exceptions",
    "start": "1638480",
    "end": "1641600"
  },
  {
    "text": "we've learned a lot during this",
    "start": "1641600",
    "end": "1643200"
  },
  {
    "text": "implementation and migration",
    "start": "1643200",
    "end": "1645279"
  },
  {
    "text": "most of which we've already mentioned in",
    "start": "1645279",
    "end": "1646720"
  },
  {
    "text": "detail during this talk",
    "start": "1646720",
    "end": "1648880"
  },
  {
    "text": "but one last thing to remember is that",
    "start": "1648880",
    "end": "1650399"
  },
  {
    "text": "service measures are a relatively young",
    "start": "1650399",
    "end": "1652240"
  },
  {
    "text": "technology",
    "start": "1652240",
    "end": "1653520"
  },
  {
    "text": "and development on most of them is fast",
    "start": "1653520",
    "end": "1655919"
  },
  {
    "text": "paced as well",
    "start": "1655919",
    "end": "1657200"
  },
  {
    "text": "so you should be prepared to keep up",
    "start": "1657200",
    "end": "1658559"
  },
  {
    "text": "with those developments in order to make",
    "start": "1658559",
    "end": "1660480"
  },
  {
    "text": "the most out of your implementation",
    "start": "1660480",
    "end": "1662880"
  },
  {
    "text": "even if that means adjusting your plans",
    "start": "1662880",
    "end": "1664559"
  },
  {
    "text": "a couple of times along the way",
    "start": "1664559",
    "end": "1666799"
  },
  {
    "start": "1666000",
    "end": "1714000"
  },
  {
    "text": "even though we spent quite some time and",
    "start": "1666799",
    "end": "1668720"
  },
  {
    "text": "preparation to get the service mesh in",
    "start": "1668720",
    "end": "1670399"
  },
  {
    "text": "its current state",
    "start": "1670399",
    "end": "1671360"
  },
  {
    "text": "we realize we're only at the beginning",
    "start": "1671360",
    "end": "1673279"
  },
  {
    "text": "of the journey with so many options to",
    "start": "1673279",
    "end": "1675360"
  },
  {
    "text": "explore",
    "start": "1675360",
    "end": "1677600"
  },
  {
    "text": "but those futures adventurers will have",
    "start": "1677600",
    "end": "1680240"
  },
  {
    "text": "to wait for another",
    "start": "1680240",
    "end": "1681360"
  },
  {
    "text": "cubecomp presentation at a later date",
    "start": "1681360",
    "end": "1684159"
  },
  {
    "text": "for now",
    "start": "1684159",
    "end": "1684960"
  },
  {
    "text": "i'd like to conclude this talk today by",
    "start": "1684960",
    "end": "1687520"
  },
  {
    "text": "thanking james and google",
    "start": "1687520",
    "end": "1689200"
  },
  {
    "text": "for their continued support as well as",
    "start": "1689200",
    "end": "1691279"
  },
  {
    "text": "the cncf",
    "start": "1691279",
    "end": "1692480"
  },
  {
    "text": "all contributors and the community for",
    "start": "1692480",
    "end": "1694960"
  },
  {
    "text": "enabling us to build our foundation",
    "start": "1694960",
    "end": "1697279"
  },
  {
    "text": "on awesome products like kubernetes",
    "start": "1697279",
    "end": "1699520"
  },
  {
    "text": "envoy",
    "start": "1699520",
    "end": "1700399"
  },
  {
    "text": "istio prometheus and the open policy",
    "start": "1700399",
    "end": "1703200"
  },
  {
    "text": "agent",
    "start": "1703200",
    "end": "1704320"
  },
  {
    "text": "none of this would be possible without",
    "start": "1704320",
    "end": "1706159"
  },
  {
    "text": "them",
    "start": "1706159",
    "end": "1707600"
  },
  {
    "text": "thanks so much for joining us today and",
    "start": "1707600",
    "end": "1709600"
  },
  {
    "text": "we're happy to answer your questions now",
    "start": "1709600",
    "end": "1712240"
  },
  {
    "text": "thank you",
    "start": "1712240",
    "end": "1716158"
  }
]