[
  {
    "start": "0",
    "end": "136000"
  },
  {
    "text": "okay good morning and thanks for joining us today for this session on network",
    "start": "420",
    "end": "5580"
  },
  {
    "text": "security at scale I am Bernard vanderwaal I'm a principal",
    "start": "5580",
    "end": "11280"
  },
  {
    "text": "software engineer at splink and I work on operationalizing at scale kubernetes",
    "start": "11280",
    "end": "16320"
  },
  {
    "text": "istio and Envoy I used to do this at Cruise previously and my role career was in between",
    "start": "16320",
    "end": "22699"
  },
  {
    "text": "networking and software engineering and my name is Mitch Connors I'm a",
    "start": "22699",
    "end": "28320"
  },
  {
    "text": "principal software engineer at aviatrix where I am working on the istio project I've been a member of the istio project",
    "start": "28320",
    "end": "35399"
  },
  {
    "text": "since 2018 currently serving on the technical oversight committee I'm also a local here to Seattle which means that I",
    "start": "35399",
    "end": "42600"
  },
  {
    "text": "can give you istio swag I can answer any questions you have about the project about aviatrix where I work or I can",
    "start": "42600",
    "end": "48059"
  },
  {
    "text": "give you really good restaurant recommendations for the area so come chat with me after",
    "start": "48059",
    "end": "53340"
  },
  {
    "text": "very nice and so today we want to talk to you about Splunk load and the story",
    "start": "53340",
    "end": "58559"
  },
  {
    "text": "behind it so splint cloud is basically a re-design of Splunk to be Cloud native",
    "start": "58559",
    "end": "64018"
  },
  {
    "text": "so we wanted to standardize it on the kubernetes API and we wanted to be Cloud agnostic as",
    "start": "64019",
    "end": "70680"
  },
  {
    "text": "much as possible and today we run both in AWS and gcp mainly in AWS",
    "start": "70680",
    "end": "76439"
  },
  {
    "text": "we run in about 35 clusters all over the world in all regions of AWS pretty much",
    "start": "76439",
    "end": "82799"
  },
  {
    "text": "and the tech stack we are going to talk about today is kubernetes istio and Envoy mainly",
    "start": "82799",
    "end": "90240"
  },
  {
    "text": "and so if you look at the agenda I think our goal today is to tell you a generic",
    "start": "90240",
    "end": "95700"
  },
  {
    "text": "story and go in detail into each of the layers um that you deal with when you manage",
    "start": "95700",
    "end": "101880"
  },
  {
    "text": "the network of such a cloud deployment and I think it's especially confusing because to some level you can configure",
    "start": "101880",
    "end": "108900"
  },
  {
    "text": "networking policies on the cloud provider on your VPC you can also configure Network policies on kubernetes",
    "start": "108900",
    "end": "115380"
  },
  {
    "text": "and you can do that on istio as well right so I think what we want to do today is to go into each of those layers",
    "start": "115380",
    "end": "121320"
  },
  {
    "text": "and explore what you can do our goal today is to make it as generic as possible so it's not really tied to",
    "start": "121320",
    "end": "127860"
  },
  {
    "text": "Splunk even though it's what we use okay so let's start with the cloud",
    "start": "127860",
    "end": "134160"
  },
  {
    "text": "provider level this is first AWS and gcp so we deploy",
    "start": "134160",
    "end": "139800"
  },
  {
    "start": "136000",
    "end": "136000"
  },
  {
    "text": "our clusters into standard vpcs so we use a cookie cutter VPC one cluster per",
    "start": "139800",
    "end": "146400"
  },
  {
    "text": "VPC typically and the goal is it gives us some level of networking sandbox for",
    "start": "146400",
    "end": "151560"
  },
  {
    "text": "clusters um we deploy your vpcs with three different set of subnets so we got",
    "start": "151560",
    "end": "157800"
  },
  {
    "text": "typically a bunch of private subnets which will be used for the kubernetes workloads that's where we want with our",
    "start": "157800",
    "end": "165000"
  },
  {
    "text": "nodes running and I don't have the data pods as well we do this because we want the private subnet as the name says to",
    "start": "165000",
    "end": "171720"
  },
  {
    "text": "be fully isolated from anything else and then we got public subnets for internet connectivity and that's where",
    "start": "171720",
    "end": "177959"
  },
  {
    "text": "we want anything Ingress or egress coming from internet to go to and we got internal subnets for connectivity inside",
    "start": "177959",
    "end": "184800"
  },
  {
    "text": "Splinter to other clusters and this brings me to the first knob",
    "start": "184800",
    "end": "191280"
  },
  {
    "start": "189000",
    "end": "189000"
  },
  {
    "text": "that you can use for security which is Network ACLS so pretty much every cloud provider supports this those are very",
    "start": "191280",
    "end": "198900"
  },
  {
    "text": "low level crude ACLS they are stateless so they don't really take into account already opened connections and the issue",
    "start": "198900",
    "end": "207060"
  },
  {
    "text": "is they get applied to sublets which means you pretty much need to allow",
    "start": "207060",
    "end": "213000"
  },
  {
    "text": "everything that any of your instances will eventually require because you can only apply",
    "start": "213000",
    "end": "218159"
  },
  {
    "text": "on the subnet level you cannot specify specific instances they give you very basic layer 2 and",
    "start": "218159",
    "end": "224700"
  },
  {
    "text": "layer 4 capabilities meaning you can match on ipn ports both on the source and destination and I pretty much see",
    "start": "224700",
    "end": "231180"
  },
  {
    "text": "them as a kind of casual Last Resort set of rules the way we use them for example is on",
    "start": "231180",
    "end": "237420"
  },
  {
    "text": "the internal subnet you never want to see anything else than the IP IP private",
    "start": "237420",
    "end": "242760"
  },
  {
    "text": "range like 10 8 the RFC 19 18 IP range so we default we by default we deny",
    "start": "242760",
    "end": "249659"
  },
  {
    "text": "everything except traffic with those Source IPS we do the same thing for the private",
    "start": "249659",
    "end": "255299"
  },
  {
    "text": "subnets and we also explicitly allow some traffic coming from internet from specific parts for anything English like",
    "start": "255299",
    "end": "261720"
  },
  {
    "text": "443 okay so on the private subnets we will",
    "start": "261720",
    "end": "268560"
  },
  {
    "start": "265000",
    "end": "265000"
  },
  {
    "text": "deploy node groups those are the kubernetes nodes typically and we will group them into different functions into",
    "start": "268560",
    "end": "275880"
  },
  {
    "text": "those node groups for example we got Ingress node groups that's where we want to deploy our Ingress gateways where we",
    "start": "275880",
    "end": "283380"
  },
  {
    "text": "will run Envoy eventually we'll talk more about this later we also got some generic node groups and workload",
    "start": "283380",
    "end": "290940"
  },
  {
    "text": "specific node groups all of those get deployed into a private IP space because again we never want",
    "start": "290940",
    "end": "297180"
  },
  {
    "text": "anything outside which which you know directly to those node groups",
    "start": "297180",
    "end": "303020"
  },
  {
    "start": "303000",
    "end": "303000"
  },
  {
    "text": "and so doing this gives you the ability to use something else that most Cloud providers support which is security",
    "start": "303540",
    "end": "308639"
  },
  {
    "text": "groups so security groups are kind of network ACLS plus plus first of all they",
    "start": "308639",
    "end": "314759"
  },
  {
    "text": "are stateful so the the support connection based um you can also apply them for instance",
    "start": "314759",
    "end": "321120"
  },
  {
    "text": "which means you can do more fine-grained things like this we want for example to fully isolate the",
    "start": "321120",
    "end": "327840"
  },
  {
    "text": "generic node groups and only allow Connection in through the Ingress node group and so what we do is we apply a",
    "start": "327840",
    "end": "334919"
  },
  {
    "text": "very locked down Security Group to the generic node groups and a slightly relaxed Security Group to the Ingress",
    "start": "334919",
    "end": "341639"
  },
  {
    "text": "node groups and so this basically forces anything coming into the cluster to transit to those English node groups",
    "start": "341639",
    "end": "349620"
  },
  {
    "text": "and the other good thing with security groups is they allow you to use a slightly higher level syntax you can use",
    "start": "349620",
    "end": "357240"
  },
  {
    "text": "other security groups as Source or destinations",
    "start": "357240",
    "end": "361940"
  },
  {
    "start": "362000",
    "end": "362000"
  },
  {
    "text": "for Ingress connectivity we want everything to go to rnlb and Ingress",
    "start": "363620",
    "end": "368820"
  },
  {
    "text": "gateways and Ingress node groups so what we do is we deploy basically a bunch of nlbs into those public and internal",
    "start": "368820",
    "end": "375600"
  },
  {
    "text": "subnets the public nlbs are obviously made for public internet connectivity and we use",
    "start": "375600",
    "end": "381840"
  },
  {
    "text": "internal internal nlbs for anything that needs to be reached from inside Splunk",
    "start": "381840",
    "end": "387240"
  },
  {
    "text": "those will be iped on the 10-8 IP space obviously and what they do is they basically",
    "start": "387240",
    "end": "393360"
  },
  {
    "text": "Target the Ingress node group and the Ingress node group will run the envoy gateways that will terminate connections",
    "start": "393360",
    "end": "400319"
  },
  {
    "text": "and proxy traffic Upstream inside the cluster",
    "start": "400319",
    "end": "405800"
  },
  {
    "start": "406000",
    "end": "406000"
  },
  {
    "text": "so for internal traffic once you've hit the NLB inside the internal subnet you",
    "start": "406259",
    "end": "411419"
  },
  {
    "text": "still need a way to get to another cluster another cluster lives in another VPC so uh for that they're using",
    "start": "411419",
    "end": "419220"
  },
  {
    "text": "AWS Transit gateways those are advertising only the internal subnet Source IPS so those private subnet",
    "start": "419220",
    "end": "426300"
  },
  {
    "text": "public subnet IPS are not getting advertised across that Transit Gateway and of course this transits through the",
    "start": "426300",
    "end": "431759"
  },
  {
    "text": "Splunk firewall where security rules can be applied in addition there's a number of shared",
    "start": "431759",
    "end": "437100"
  },
  {
    "start": "435000",
    "end": "435000"
  },
  {
    "text": "services that every cluster needs to be able to access and they need to be able to access it without transiting an NLB",
    "start": "437100",
    "end": "442860"
  },
  {
    "text": "so for for these cases uh Splunk is using aviatrix aviatrix apply allows a",
    "start": "442860",
    "end": "449220"
  },
  {
    "text": "flat Network at layer three where all of the Clusters directly from their private subnets can access those shared services",
    "start": "449220",
    "end": "456479"
  },
  {
    "text": "across the aviatrix transit Gateway and of course once you've established a",
    "start": "456479",
    "end": "462360"
  },
  {
    "text": "peering so that your pods can access those shared services aviatrix by default would allow those pods to",
    "start": "462360",
    "end": "468599"
  },
  {
    "text": "communicate with one another which of course would bypass all of the rules that we've set up in our internal subnet so in order to prevent that Splunk has",
    "start": "468599",
    "end": "475680"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "used aviatrix's um Network domains feature which simply allows you to say this VPC can talk to",
    "start": "475680",
    "end": "483120"
  },
  {
    "text": "that VPC that VPC can talk to the other but certain vpcs can't so in this case",
    "start": "483120",
    "end": "488460"
  },
  {
    "text": "you see a diagram where like the blue cannot talk to the green and the green cannot talk to the blue but we have a",
    "start": "488460",
    "end": "493620"
  },
  {
    "text": "number of shared vpcs that are both blue and green that are accessible from all and that's the setup that Splunk is",
    "start": "493620",
    "end": "499199"
  },
  {
    "text": "using there okay um so let's look at the next layer which is",
    "start": "499199",
    "end": "505620"
  },
  {
    "text": "kubernetes so first of all or kubernetes deployment that's blank we treat it as a full",
    "start": "505620",
    "end": "511740"
  },
  {
    "start": "507000",
    "end": "507000"
  },
  {
    "text": "self-service platform which means that teams own namespace they can they can do",
    "start": "511740",
    "end": "517080"
  },
  {
    "text": "whatever they want with the kubernetes API they can provision objects CRVs or",
    "start": "517080",
    "end": "522300"
  },
  {
    "text": "steel etc etc um our goal as a platform team is to provide some level of Base capabilities",
    "start": "522300",
    "end": "529500"
  },
  {
    "text": "like networking security observability Etc one of the things we try to do obviously",
    "start": "529500",
    "end": "535620"
  },
  {
    "text": "is for the service teams not shoot themselves into the foods I'm going to show you a couple of examples on how we",
    "start": "535620",
    "end": "541560"
  },
  {
    "text": "do that first of all one of the things we mended is any Ingress connectivity",
    "start": "541560",
    "end": "547640"
  },
  {
    "text": "both internal or external needs to go to our nlbs Ingress nodes and Ingress",
    "start": "547640",
    "end": "553019"
  },
  {
    "text": "Gateway that's a way for us to apply security into a central point",
    "start": "553019",
    "end": "558300"
  },
  {
    "text": "um another note as well is once you get to the kubernetes layer you do put-to-pot communication as well this is",
    "start": "558300",
    "end": "565019"
  },
  {
    "text": "mainly invisible to the cloud provider right most of the time is tunneling services like Galaxy or psyllium and",
    "start": "565019",
    "end": "573120"
  },
  {
    "text": "yeah that adds some level of complexity so one thing we do we use quite heavily",
    "start": "573120",
    "end": "579839"
  },
  {
    "start": "577000",
    "end": "577000"
  },
  {
    "text": "some validating web hooks so the goal of a validating web Hook is it's basically",
    "start": "579839",
    "end": "585420"
  },
  {
    "text": "a callback from kubernetes API whenever a code create updates or delete of a",
    "start": "585420",
    "end": "591779"
  },
  {
    "text": "specific object is being performed and so we use this in order to validate that users use those objects correctly a",
    "start": "591779",
    "end": "599399"
  },
  {
    "text": "typical example is for a service of type load balancer You by default kubernetes will create an",
    "start": "599399",
    "end": "607680"
  },
  {
    "text": "NLB if you use a service of title balancer we absolutely want to block this right since again we want to force",
    "start": "607680",
    "end": "614339"
  },
  {
    "text": "traffic to go to our NLB and Ingress nodes and so we use those validating my books that's just one example in order",
    "start": "614339",
    "end": "621180"
  },
  {
    "text": "to enforce those things and there are plenty of open implementations of those validating",
    "start": "621180",
    "end": "627420"
  },
  {
    "text": "workbooks Opa is one example I used to use cable at Cruz which is a good open",
    "start": "627420",
    "end": "632580"
  },
  {
    "text": "source alternative in this case we we create our own ones but they're pretty easy to implement",
    "start": "632580",
    "end": "639500"
  },
  {
    "start": "640000",
    "end": "640000"
  },
  {
    "text": "okay so next thing is Network policies on kubernetes so those Network policies and kubernetes",
    "start": "640200",
    "end": "647700"
  },
  {
    "text": "are very kubernetes Centric you it's basically a crd defined inside kubernetes",
    "start": "647700",
    "end": "654000"
  },
  {
    "text": "um they allow you to use the kubernetes syntax which means you can use labels in order to select pods so that you don't",
    "start": "654000",
    "end": "660480"
  },
  {
    "text": "have to explicitly Define the eyepiece of each pod you want to match on those are by default implemented by your",
    "start": "660480",
    "end": "667500"
  },
  {
    "text": "cni plugin something like cilium or Calico and a typical example is something like this right in which you",
    "start": "667500",
    "end": "673740"
  },
  {
    "text": "have a two-tier application and you want the back end to be able to be reached from inside its own namespace and you",
    "start": "673740",
    "end": "680640"
  },
  {
    "text": "maybe want as well connectivity from a front end right and so you you are able to select",
    "start": "680640",
    "end": "686579"
  },
  {
    "text": "namespaces and pods based on labels and you can end up with something like this",
    "start": "686579",
    "end": "693019"
  },
  {
    "text": "all right so far we've talked about from VPC level layer three up to kubernetes",
    "start": "695160",
    "end": "700860"
  },
  {
    "text": "policy how security is applied at each of these layers to scale up to the level that Splunk requires now we're going to",
    "start": "700860",
    "end": "707519"
  },
  {
    "text": "look at layer seven and for that it Splunk is using the istio project if",
    "start": "707519",
    "end": "712740"
  },
  {
    "start": "711000",
    "end": "711000"
  },
  {
    "text": "you're unfamiliar with istio it's a service mesh and lots of people have attempted to explain what a service mesh",
    "start": "712740",
    "end": "718320"
  },
  {
    "text": "is it can all seem very confusing and hype at a fundamental layer this allows",
    "start": "718320",
    "end": "723720"
  },
  {
    "text": "application near application layer networking abstractions over your network so if you want to talk about",
    "start": "723720",
    "end": "730500"
  },
  {
    "text": "your network not in terms of this IP and Port can talk to that IP and Port but instead in terms of this service",
    "start": "730500",
    "end": "737040"
  },
  {
    "text": "identity can talk to that service identity you want a service mesh if you",
    "start": "737040",
    "end": "742200"
  },
  {
    "text": "want something that can globally collect Telemetry and say something along the lines of HTTP requests with this path",
    "start": "742200",
    "end": "748500"
  },
  {
    "text": "and this verb are succeeding this percent of the time you want application",
    "start": "748500",
    "end": "753660"
  },
  {
    "text": "layer networking abstractions you want a service mesh um you can also play with routing a little",
    "start": "753660",
    "end": "760260"
  },
  {
    "text": "bit and say perhaps our premium tier users are routed to a subset of this service which we know to run on a little",
    "start": "760260",
    "end": "766380"
  },
  {
    "text": "bit better hardware and be a little bit faster that's what istio does we're",
    "start": "766380",
    "end": "771720"
  },
  {
    "text": "going to talk a little bit about how istio does this and then we're going to look at how Splunk is leveraging istio",
    "start": "771720",
    "end": "777000"
  },
  {
    "text": "well all of the magic of istio comes from Envoy we insert an Envoy sidecar",
    "start": "777000",
    "end": "783120"
  },
  {
    "text": "into every single application pod which means that this diagram isn't quite correct if we were to correct it it",
    "start": "783120",
    "end": "788760"
  },
  {
    "text": "would probably look a little bit more like this there's a lot of application pods in",
    "start": "788760",
    "end": "794880"
  },
  {
    "text": "your average service mesh which means there's a lot of envoy sidecars we're running Envoy everywhere but the",
    "start": "794880",
    "end": "800880"
  },
  {
    "text": "advantage is that means that we have control over all of the network traffic we can collect Telemetry over all of the",
    "start": "800880",
    "end": "806040"
  },
  {
    "text": "networking traffic and so the trade-offs in splunk's case have been worthwhile",
    "start": "806040",
    "end": "811800"
  },
  {
    "text": "uh one of the key things that istio offers for Splunk is in transit encryption without any need to modify",
    "start": "811800",
    "end": "818279"
  },
  {
    "text": "applications so the applications are sending plain text to http as far as they know the envoy sidecar will",
    "start": "818279",
    "end": "824279"
  },
  {
    "text": "intercept and apply Mutual TLS to that traffic so that it may not be intercepted or modified in transit",
    "start": "824279",
    "end": "832620"
  },
  {
    "text": "um you can run istio in strict mode which requires that mtls apply to all traffic occasionally you'll run into",
    "start": "832620",
    "end": "839040"
  },
  {
    "text": "some hiccups there so Splunk runs in permissive mode which means it will attempt to use mtls and fail back to",
    "start": "839040",
    "end": "845940"
  },
  {
    "text": "plain text if necessary and then they have this fancy alert setup that lets them know when there's traffic that's",
    "start": "845940",
    "end": "852480"
  },
  {
    "text": "happening in plain text so that they can alert their security team rather than blocking it proactively they'd rather have developers respond to that plain",
    "start": "852480",
    "end": "860040"
  },
  {
    "text": "text and correct the problem yep so I think one interesting thing to talk",
    "start": "860040",
    "end": "866820"
  },
  {
    "start": "862000",
    "end": "862000"
  },
  {
    "text": "about is the way we provision gateways in our English story because this is going to be the the Ingress point for",
    "start": "866820",
    "end": "873720"
  },
  {
    "text": "anything into the cluster right so as we said before we want anything that comes in to go to nlbs because that",
    "start": "873720",
    "end": "881160"
  },
  {
    "text": "allows us to nlbs and Ingress gateways because then we can apply a new uniform security",
    "start": "881160",
    "end": "887160"
  },
  {
    "text": "policy to it what we do is we deploy basically nlbs and gateways together so the gateways",
    "start": "887160",
    "end": "893220"
  },
  {
    "text": "will be Envoy running on Ingress nodes based on the source of the traffic you want to ingest for example if you want a",
    "start": "893220",
    "end": "900360"
  },
  {
    "text": "public traffic you obviously will deploy your NLB on the public subnets for the internal traffic your NLB needs to be on",
    "start": "900360",
    "end": "906839"
  },
  {
    "text": "the internal subnets what we also do obviously for security reasons and blast radius reasons is",
    "start": "906839",
    "end": "912540"
  },
  {
    "text": "sometimes we deploy nlbn gateways for very critical applications we also shared tenants sometimes across multiple",
    "start": "912540",
    "end": "919500"
  },
  {
    "text": "nlbs when we reach a critical mass and we do this so that in case gateways",
    "start": "919500",
    "end": "925019"
  },
  {
    "text": "go down hopefully it doesn't happen too often it doesn't take down the whole cluster",
    "start": "925019",
    "end": "930360"
  },
  {
    "text": "those gateways are managed by us as a platform team we run them into the istio gateway namespace and it's basically a",
    "start": "930360",
    "end": "937199"
  },
  {
    "text": "capability that we offer to everyone into the the cluster they can basically plug into it",
    "start": "937199",
    "end": "943440"
  },
  {
    "text": "and the way we do this is what we use this steel um we set up Gateway so istio is going",
    "start": "943440",
    "end": "950040"
  },
  {
    "start": "944000",
    "end": "944000"
  },
  {
    "text": "to program Envoy as a Gateway and we set up those gateways through the istiocrds",
    "start": "950040",
    "end": "955800"
  },
  {
    "text": "like Gateway crb so Gateway crd will basically Define which hostname and",
    "start": "955800",
    "end": "960899"
  },
  {
    "text": "which Port you expect traffic on we also provisioned those Gateway service with certificates so that we",
    "start": "960899",
    "end": "967980"
  },
  {
    "text": "enforce TLS by default right and then we allow our users into the into the",
    "start": "967980",
    "end": "974339"
  },
  {
    "text": "cluster to plug into those gateways again this is gated to a validating",
    "start": "974339",
    "end": "979440"
  },
  {
    "text": "workbook so that not any namespace can connect on any hostname they need to be pre-validated in some ways",
    "start": "979440",
    "end": "985740"
  },
  {
    "text": "again we want everything to be self-service except the critical Parts like the those hostname and ports open",
    "start": "985740",
    "end": "992760"
  },
  {
    "text": "to internet and so we quickly realized something",
    "start": "992760",
    "end": "998339"
  },
  {
    "start": "996000",
    "end": "996000"
  },
  {
    "text": "which is that users had to to create and provision a lot of crds and objects on",
    "start": "998339",
    "end": "1004820"
  },
  {
    "text": "kubernetes and this was leading us to see a lot of mini security incidents I",
    "start": "1004820",
    "end": "1010100"
  },
  {
    "text": "will say in which people will configure things wrongly so we've moved forward by creating a service abstraction layer",
    "start": "1010100",
    "end": "1016639"
  },
  {
    "text": "which is essentially a controller which will attempt to configure everything for",
    "start": "1016639",
    "end": "1021680"
  },
  {
    "text": "you all those complex objects the way we did it is we allowed teams to",
    "start": "1021680",
    "end": "1026720"
  },
  {
    "text": "provision an open API stack and this controller is going to scrape that spec and create the virtual Services",
    "start": "1026720",
    "end": "1033380"
  },
  {
    "text": "destination rules Gateway all the kubernetes objects you require to get end-to-end networking connectivity",
    "start": "1033380",
    "end": "1040160"
  },
  {
    "text": "it will also manage certificates so generate a certificate for your hostname if it's allowed and setup DNS that goes",
    "start": "1040160",
    "end": "1047360"
  },
  {
    "text": "directly to the right NLB so this is pretty much first one click deploy solution for the network end-to-end if",
    "start": "1047360",
    "end": "1054440"
  },
  {
    "text": "you use those specs that we defined and we see it as a way to make our clusters",
    "start": "1054440",
    "end": "1061280"
  },
  {
    "text": "more secure since it reduce configuration errors",
    "start": "1061280",
    "end": "1066039"
  },
  {
    "start": "1067000",
    "end": "1067000"
  },
  {
    "text": "okay something else I would like to talk about is some level of layer 7",
    "start": "1068059",
    "end": "1073820"
  },
  {
    "text": "authentication so we wanted to provide inner clusters a standard way to do",
    "start": "1073820",
    "end": "1078980"
  },
  {
    "text": "hotel so authentication we do this by leveraging a spec from Envoy called x2z",
    "start": "1078980",
    "end": "1087260"
  },
  {
    "text": "so x dot Z is defined by the envoy project so we do this outside this year",
    "start": "1087260",
    "end": "1092799"
  },
  {
    "text": "it's basically a way to get a sync call whenever you hit Envoy",
    "start": "1092799",
    "end": "1099320"
  },
  {
    "text": "um where you reach out to next to the server with the headers of the request and next to This Server will decide if",
    "start": "1099320",
    "end": "1106039"
  },
  {
    "text": "it's allowed denied or in some case you can even modify the request headers",
    "start": "1106039",
    "end": "1111799"
  },
  {
    "text": "so what we did is we developed a bunch of x2d proxies that we that act as the",
    "start": "1111799",
    "end": "1117200"
  },
  {
    "text": "next to this server and those will allow a bunch of plugins to plug in and so we",
    "start": "1117200",
    "end": "1122360"
  },
  {
    "text": "develop those plugins based on what alternants need for example we have an authentication plugin which will",
    "start": "1122360",
    "end": "1127400"
  },
  {
    "text": "validate in some cases your better token for HTTP we got some JWT talk plugins",
    "start": "1127400",
    "end": "1133280"
  },
  {
    "text": "and we got things like Kota plugins which will make sure that a specific tunnel doesn't issue more than a",
    "start": "1133280",
    "end": "1140059"
  },
  {
    "text": "specific amount of RPS the good thing is this is enforced on the Gateway before going into the",
    "start": "1140059",
    "end": "1146059"
  },
  {
    "text": "cluster our goal is to basically develop any bogus request because before they",
    "start": "1146059",
    "end": "1151340"
  },
  {
    "text": "get Upstream further into the cluster um I mean I highly recommend XT it was a",
    "start": "1151340",
    "end": "1158419"
  },
  {
    "text": "super easy protocol to implement um the workloads Upstream into the bud",
    "start": "1158419",
    "end": "1164900"
  },
  {
    "text": "still need to re-verify the identity though this is just a way for us to stop large-scale ddoses in some ways or to",
    "start": "1164900",
    "end": "1172580"
  },
  {
    "text": "block anything that should not get into the cluster",
    "start": "1172580",
    "end": "1176620"
  },
  {
    "text": "other things we use istio 4 is we also use some level of network policies",
    "start": "1177980",
    "end": "1183799"
  },
  {
    "text": "um some alloy lists once you reach the istio level you can",
    "start": "1183799",
    "end": "1188840"
  },
  {
    "text": "basically start mixing and matching layer 4 and layer 7 Concepts and we do this quite often it's not super clean",
    "start": "1188840",
    "end": "1195500"
  },
  {
    "text": "but it allows us to do things like defining us a bunch of source IPS that should be able to go to specific paths",
    "start": "1195500",
    "end": "1203360"
  },
  {
    "text": "and host names for a service for example so the higher level you go into the stack the more Concepts you can use to",
    "start": "1203360",
    "end": "1210679"
  },
  {
    "text": "provide those Network policies other things that some of our tenants do",
    "start": "1210679",
    "end": "1216380"
  },
  {
    "text": "on the cluster is they use some request authentication crds to Define some GWT",
    "start": "1216380",
    "end": "1223220"
  },
  {
    "text": "odds and validate that any requests coming into their workload is got a",
    "start": "1223220",
    "end": "1229460"
  },
  {
    "text": "correct token Associated into the headers",
    "start": "1229460",
    "end": "1233919"
  },
  {
    "text": "and so yeah for this at this point I want to take a step back and look at the",
    "start": "1234980",
    "end": "1240320"
  },
  {
    "start": "1235000",
    "end": "1235000"
  },
  {
    "text": "life of an Ingress request so this is basically an end-to-end request coming to our gateways going",
    "start": "1240320",
    "end": "1246880"
  },
  {
    "text": "to the envoy extra Z and then being epoxy to the Upstream workload so if we",
    "start": "1246880",
    "end": "1255440"
  },
  {
    "text": "if we take a step back any policies applied on the VPC and kubernetes level are applied for connections any policies",
    "start": "1255440",
    "end": "1263179"
  },
  {
    "text": "on istio are applied per requests pretty much so your client when they send us a",
    "start": "1263179",
    "end": "1269539"
  },
  {
    "text": "request they first open a connection to our NLB the NLB will layer three proxies to one of our Ingress nodes this will",
    "start": "1269539",
    "end": "1276799"
  },
  {
    "text": "end up into our Envoy Gateway that will terminate TLS and then we'll inspect the request on a layer 7. they will use x2z",
    "start": "1276799",
    "end": "1284660"
  },
  {
    "text": "to validate that it's a correct request and it should get into the cluster if it's allowed the envoy Gateway will",
    "start": "1284660",
    "end": "1291559"
  },
  {
    "text": "proxate Upstream at that point the network policies from",
    "start": "1291559",
    "end": "1296780"
  },
  {
    "text": "kubernetes will kick in again to make sure that this proxying to the Upstream Port is allowed and then the Upstream",
    "start": "1296780",
    "end": "1303140"
  },
  {
    "text": "sidecar on the workload will again look at the layer 7 requests and if allowed",
    "start": "1303140",
    "end": "1308360"
  },
  {
    "text": "it will be decapsulated and sent to the workload in clear text",
    "start": "1308360",
    "end": "1313460"
  },
  {
    "text": "when we do this we use a public certificate on the front end that's what your clients will see typically to Let's",
    "start": "1313460",
    "end": "1320059"
  },
  {
    "text": "encrypt or a bunch of other providers we use and we use fully mtls in transit",
    "start": "1320059",
    "end": "1326059"
  },
  {
    "text": "encryption inside our clusters we use a Splunk internal ca for that",
    "start": "1326059",
    "end": "1331658"
  },
  {
    "text": "all right so that was a lot of layers of security and as you can imagine not all",
    "start": "1332960",
    "end": "1339620"
  },
  {
    "text": "of it is as wonderful as one might expect let's talk about a couple of particular pain points in this security",
    "start": "1339620",
    "end": "1345860"
  },
  {
    "text": "stack and what we're doing to resolve them uh that slide that we had earlier with like a million Envoy instances on it it",
    "start": "1345860",
    "end": "1353780"
  },
  {
    "start": "1347000",
    "end": "1347000"
  },
  {
    "text": "looked bad and that's on purpose um running one proxy per instance of your",
    "start": "1353780",
    "end": "1359360"
  },
  {
    "text": "application you're going to run into scalability problems for one compute cost is very substantial for that many",
    "start": "1359360",
    "end": "1367039"
  },
  {
    "text": "proxies for two in some cases you're going to want some Envoy incidences to",
    "start": "1367039",
    "end": "1372620"
  },
  {
    "text": "have more resources than others that's very difficult to pull off with this deal today and to get the tuning done",
    "start": "1372620",
    "end": "1379760"
  },
  {
    "text": "right um obviously we need to capture all traffic but there may be more efficient ways and",
    "start": "1379760",
    "end": "1386960"
  },
  {
    "text": "we'll look at that in a little bit that we can capture all of the track traffic across",
    "start": "1386960",
    "end": "1392240"
  },
  {
    "text": "um envoys there's also a lot of magic involved in istio today I've pulled this uh quote",
    "start": "1392240",
    "end": "1399440"
  },
  {
    "start": "1393000",
    "end": "1393000"
  },
  {
    "text": "from the istio.io documentation site and this last sentence here any new pods",
    "start": "1399440",
    "end": "1404720"
  },
  {
    "text": "that are created in that namespace will automatically have a sidecar added to them it's magic it's really cool what",
    "start": "1404720",
    "end": "1412100"
  },
  {
    "text": "about the old pods um okay well we don't do anything to those those pods are immutable we can't",
    "start": "1412100",
    "end": "1418760"
  },
  {
    "text": "do anything to those pods so you've got to go through every time you change something about what's going to get injected in a pod or a namespace you've",
    "start": "1418760",
    "end": "1425539"
  },
  {
    "text": "got to go through and restart that workload don't miss a workload you might be rolling out a critical vulnerability",
    "start": "1425539",
    "end": "1430640"
  },
  {
    "text": "fix that you're going to rely on and if you forget to restart your workload your istio upgrade will have succeeded",
    "start": "1430640",
    "end": "1435919"
  },
  {
    "text": "everything looks good and you're still 100 vulnerable on The Wire um so we we think we could do better",
    "start": "1435919",
    "end": "1442940"
  },
  {
    "text": "also just answering the question which Envoy am I running where can be",
    "start": "1442940",
    "end": "1448400"
  },
  {
    "text": "challenging so the istio project is aware of these challenges and we believe that we have a",
    "start": "1448400",
    "end": "1454100"
  },
  {
    "start": "1451000",
    "end": "1451000"
  },
  {
    "text": "solution for them we are developing ambient mode for istio where all of our",
    "start": "1454100",
    "end": "1460159"
  },
  {
    "text": "layer 4 technology all of that mtls magic that we talked about will happen in a Daemon set that runs on every node",
    "start": "1460159",
    "end": "1466880"
  },
  {
    "text": "and serves every pod on the Node so no more sidecar all of the traffic capture happens outside of the application pod",
    "start": "1466880",
    "end": "1474580"
  },
  {
    "text": "that Z tunnel should do very little only layer 4 functionality which means it",
    "start": "1474580",
    "end": "1480260"
  },
  {
    "text": "should be much less susceptible to cves much less susceptible to upgrade breakages Etc should be safer to run",
    "start": "1480260",
    "end": "1486860"
  },
  {
    "text": "then if you want layer 7 magic as well you can still run an Envoy but it won't",
    "start": "1486860",
    "end": "1492500"
  },
  {
    "text": "run as a sidecar it'll run as its own deployment in the namespace the Z tunnel will take care of redirecting traffic",
    "start": "1492500",
    "end": "1498320"
  },
  {
    "text": "from whatever application needs it into the envoy side car where we can apply all of the L7 magic that you've come to",
    "start": "1498320",
    "end": "1504860"
  },
  {
    "text": "know and love from istio but not one per instance you can scale that Envoy",
    "start": "1504860",
    "end": "1510500"
  },
  {
    "text": "installation independently of the application scale you can adjust its resource utilization or allocation",
    "start": "1510500",
    "end": "1517240"
  },
  {
    "text": "our pods will match our deployment spec finally which doesn't really happen with",
    "start": "1517240",
    "end": "1523340"
  },
  {
    "text": "injection today if you'd like more information on ambient or you're interested in getting involved you can check out the blog post below",
    "start": "1523340",
    "end": "1532100"
  },
  {
    "text": "all right so let's let's look in the rear view mirror this was a lot of information to cover in a pretty short",
    "start": "1532279",
    "end": "1537380"
  },
  {
    "text": "time we're doing good on time uh at every single layer of the network from",
    "start": "1537380",
    "end": "1543320"
  },
  {
    "start": "1539000",
    "end": "1539000"
  },
  {
    "text": "the cloud provider and VPC level and layer three to the kubernetes policy to",
    "start": "1543320",
    "end": "1548600"
  },
  {
    "text": "istio at layer seven we have to solve for identity policy and observability",
    "start": "1548600",
    "end": "1554799"
  },
  {
    "text": "now this looks redundant right we've already done identity at layer three why",
    "start": "1554799",
    "end": "1560659"
  },
  {
    "text": "are we doing it again at layer four and then again at layer seven that's computationally expensive um the reason for that is uh that",
    "start": "1560659",
    "end": "1568940"
  },
  {
    "text": "security is about layers every layer is always going to have holes and and this",
    "start": "1568940",
    "end": "1574820"
  },
  {
    "text": "is your slide so I'll let you take it from there yeah I mean I think one of the key things is that we learned over time is",
    "start": "1574820",
    "end": "1581419"
  },
  {
    "text": "defense in depth so what we want to do is if we speed up on things you can",
    "start": "1581419",
    "end": "1586880"
  },
  {
    "text": "color in each layers the best way is to close them down each the most you can and to make sense so that you have that",
    "start": "1586880",
    "end": "1592700"
  },
  {
    "text": "swiss cheese model right in which um if by mistake one secret incident",
    "start": "1592700",
    "end": "1598940"
  },
  {
    "text": "happened at one layer hopefully the next layer is going to catch it um the things we learn as well is",
    "start": "1598940",
    "end": "1605659"
  },
  {
    "text": "um that self-service platforms are really hard so the best thing you can do is to put safeguards in place to avoid",
    "start": "1605659",
    "end": "1612200"
  },
  {
    "text": "your users doing stupid things most of the security incidents we've seen is basically users misconfiguring things so",
    "start": "1612200",
    "end": "1619520"
  },
  {
    "text": "over time what we try to do is to block those things one by one the one way to do this is to provide the",
    "start": "1619520",
    "end": "1625159"
  },
  {
    "text": "golden path that will avoid those configurations that's what we did with a self-service abstraction layer so that",
    "start": "1625159",
    "end": "1631880"
  },
  {
    "text": "we can kind of ensure that people do the right thing by default finally I will close by saying that for",
    "start": "1631880",
    "end": "1638779"
  },
  {
    "text": "us observability was key that's how we detect secret incidents with a bunch of",
    "start": "1638779",
    "end": "1644299"
  },
  {
    "text": "alerts we get paid if any public traffic is discovered in some vpcs for example it's also very useful for helping your",
    "start": "1644299",
    "end": "1651799"
  },
  {
    "text": "users debug at the end of the day because there are so many layers and nobody understands all of them",
    "start": "1651799",
    "end": "1658179"
  },
  {
    "text": "I think that's pretty much it I think this goes to a feedback form if you want and we'll take some questions",
    "start": "1659120",
    "end": "1666559"
  },
  {
    "text": "also give a brief plug if you're an istio user we're going to have our first ever istio day at kubecon Europe as a",
    "start": "1666559",
    "end": "1673279"
  },
  {
    "text": "co-located event and the the request call for papers is currently open for another week and a half so uh submit",
    "start": "1673279",
    "end": "1679400"
  },
  {
    "text": "your talks [Applause]",
    "start": "1679400",
    "end": "1690979"
  },
  {
    "text": "yeah Rob uh for now you mentioned that there are some Minis",
    "start": "1691820",
    "end": "1697778"
  },
  {
    "text": "directly can you talk about how you identified those things maybe the people I learned in place let you know when that good",
    "start": "1699020",
    "end": "1704240"
  },
  {
    "text": "thing happens yeah I mean a typical example is I it's not really mini secret incident but it's so if it's still you",
    "start": "1704240",
    "end": "1711380"
  },
  {
    "text": "can for example look at your pass through cluster if you don't use a fully strict encryption in transit and you",
    "start": "1711380",
    "end": "1719360"
  },
  {
    "text": "will see anything that doesn't use ntls go to that cluster right and so that's how we identify those as soon as we see",
    "start": "1719360",
    "end": "1725240"
  },
  {
    "text": "some traffic on this we alert I mean Alexis",
    "start": "1725240",
    "end": "1730240"
  },
  {
    "text": "um it's it's a weird trade-off between productivity you don't want to block people doing what they need to do but",
    "start": "1730640",
    "end": "1736100"
  },
  {
    "text": "also being secure right so this we are looking at moving to strict um but at this time we are like still in",
    "start": "1736100",
    "end": "1741919"
  },
  {
    "text": "permissive yeah yeah yes in the back",
    "start": "1741919",
    "end": "1748900"
  },
  {
    "text": "um that's a really good question I have as well to be honest um I think it's a mix of historical reasons",
    "start": "1755539",
    "end": "1763220"
  },
  {
    "text": "and validation webhook being really easy to to deploy yourself I mean it's the code is really simple but yes we are",
    "start": "1763220",
    "end": "1770659"
  },
  {
    "text": "maybe looking at consolidating that's why I mentioned it to appear I think I",
    "start": "1770659",
    "end": "1775760"
  },
  {
    "text": "used Gabriel in the past as well which is also a similar project which is very kubernetes Centric",
    "start": "1775760",
    "end": "1781899"
  },
  {
    "text": "any other questions on the stack yeah",
    "start": "1787220",
    "end": "1791080"
  },
  {
    "text": "to maybe make things easier to adopt one",
    "start": "1807559",
    "end": "1813020"
  },
  {
    "text": "of those services um yeah that's that's a good point I",
    "start": "1813020",
    "end": "1819440"
  },
  {
    "text": "mean we try to keep or close deployments on layers so",
    "start": "1819440",
    "end": "1824539"
  },
  {
    "text": "we don't use things like layers and gateways on the cloud for example everything comes into",
    "start": "1824539",
    "end": "1829820"
  },
  {
    "text": "or Android when we do everything at that level yeah I mean I guess we're always looking at",
    "start": "1829820",
    "end": "1836779"
  },
  {
    "text": "what could be done but at this point yes we yeah we try really strongly to be Cloud agnostic so that's the kubernetes API is",
    "start": "1836779",
    "end": "1844460"
  },
  {
    "text": "our point of reference here and that actually is how aviatrix achieves a lot of its features within the networking",
    "start": "1844460",
    "end": "1851299"
  },
  {
    "text": "stack is by providing one Central abstraction over the cloud provider specific implementations of security",
    "start": "1851299",
    "end": "1857779"
  },
  {
    "text": "yeah",
    "start": "1857779",
    "end": "1860260"
  },
  {
    "text": "all right well thank you all for coming to our talk uh we'll be around for questions or restaurant recommendations",
    "start": "1866419",
    "end": "1872480"
  },
  {
    "text": "after [Applause]",
    "start": "1872480",
    "end": "1878569"
  }
]