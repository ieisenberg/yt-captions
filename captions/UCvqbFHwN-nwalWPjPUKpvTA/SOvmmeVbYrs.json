[
  {
    "start": "0",
    "end": "11000"
  },
  {
    "text": "hi everybody this is the API Machinery sig deep dive i'm daniel smith this is",
    "start": "30",
    "end": "6509"
  },
  {
    "text": "david eats we've got sea yeah this is",
    "start": "6509",
    "end": "11519"
  },
  {
    "start": "11000",
    "end": "11000"
  },
  {
    "text": "our agenda first up I'm gonna have my colleague Jenny talk about apply since",
    "start": "11519",
    "end": "17460"
  },
  {
    "text": "she's been working on that then we'll go to control playing fairness I'll say something and then David's gonna talk",
    "start": "17460",
    "end": "23039"
  },
  {
    "text": "about certs and then that's probably enough so I'll probably take questions there and say the series and in case",
    "start": "23039",
    "end": "30750"
  },
  {
    "text": "everybody is like really ready for more stuff so ok with that here Jenny",
    "start": "30750",
    "end": "38360"
  },
  {
    "text": "thank you I'm just gonna talk really",
    "start": "38780",
    "end": "44010"
  },
  {
    "text": "briefly about server-side apply because it's an alpha right now and we're gonna",
    "start": "44010",
    "end": "49110"
  },
  {
    "text": "be moving into beta soon thanks",
    "start": "49110",
    "end": "54680"
  },
  {
    "start": "54000",
    "end": "54000"
  },
  {
    "text": "so yeah server side apply if you don't know is we are moving the logic from Q",
    "start": "54680",
    "end": "61170"
  },
  {
    "text": "control apply into the server so won't use strategic merge patch anymore and",
    "start": "61170",
    "end": "66479"
  },
  {
    "text": "most of that is pretty straightforward the if you send a resource to the endpoint it's gonna do the same thing as",
    "start": "66479",
    "end": "73590"
  },
  {
    "text": "if you had run the client-side apply on it but there's a few differences and I'm",
    "start": "73590",
    "end": "79500"
  },
  {
    "text": "just gonna talk about those for a little bit this is all the stuff that's the same it accepts a partially specified",
    "start": "79500",
    "end": "85770"
  },
  {
    "text": "object and it knows the structure of the resource from open API but we we",
    "start": "85770",
    "end": "91799"
  },
  {
    "text": "actually built a different schema format for server side apply so it won't be tied to open API v2 or anything and",
    "start": "91799",
    "end": "99570"
  },
  {
    "text": "that's all housed in a separate repo so for client side apply the way one thing",
    "start": "99570",
    "end": "107579"
  },
  {
    "text": "apply needs is a sort of history of the requests that have been made in the past and for clients that apply the way we",
    "start": "107579",
    "end": "115020"
  },
  {
    "text": "did this was with an annotation that would store the entire copy of the",
    "start": "115020",
    "end": "120719"
  },
  {
    "text": "applied object and this worked for that because it only has a single user but when we wanted to move this to the",
    "start": "120719",
    "end": "127439"
  },
  {
    "text": "server we know we needed to support multiple users applying and if we just scaled this by copying it",
    "start": "127439",
    "end": "135020"
  },
  {
    "text": "for each user it wouldn't work because the size of the object is gonna go up linearly so",
    "start": "135020",
    "end": "140980"
  },
  {
    "text": "instead we need to put something in there per user that is the size of one",
    "start": "140980",
    "end": "147140"
  },
  {
    "text": "over the number of users so we had to find something that would fit that",
    "start": "147140",
    "end": "153010"
  },
  {
    "text": "requirement so this is if we just copied it yeah once for every user so in order",
    "start": "153010",
    "end": "163400"
  },
  {
    "text": "to make it smaller we removed so we have each field will only show up once in the",
    "start": "163400",
    "end": "170150"
  },
  {
    "text": "sum of all of these all of these last applied configuration things and and",
    "start": "170150",
    "end": "177680"
  },
  {
    "text": "once we split it out like that we realized we could actually remove the values too because the information that",
    "start": "177680",
    "end": "184570"
  },
  {
    "text": "was necessary to decide whether you had the current version of that field could",
    "start": "184570",
    "end": "190790"
  },
  {
    "text": "be gathered from whether or not your your set of fields contained the fields",
    "start": "190790",
    "end": "196970"
  },
  {
    "text": "you're updating so then so we had this concept of a field set and this is all",
    "start": "196970",
    "end": "203180"
  },
  {
    "text": "in a this is all built in a repo structured merged if under six Kate's i/o so we have some basic methods that",
    "start": "203180",
    "end": "211220"
  },
  {
    "text": "convert an object into field sets or multiple objects into field sets and",
    "start": "211220",
    "end": "216739"
  },
  {
    "start": "216000",
    "end": "216000"
  },
  {
    "text": "then some other things that operate on field sets themselves and you could see",
    "start": "216739",
    "end": "221780"
  },
  {
    "text": "how these operations could be combined into some apply behavior pretty easily",
    "start": "221780",
    "end": "227030"
  },
  {
    "text": "but there's one more thing that's different between client side apply and server side apply that's pretty complicated and it's multiple versions",
    "start": "227030",
    "end": "233690"
  },
  {
    "start": "233000",
    "end": "233000"
  },
  {
    "text": "so when you convert between versions what actually happens one thing that",
    "start": "233690",
    "end": "238700"
  },
  {
    "text": "could happen is the field name can change and this is an example of that just changing the field name changing",
    "start": "238700",
    "end": "245600"
  },
  {
    "text": "the value that would be pretty easy to handle but it's not that simple we could also have a field turn into multiple",
    "start": "245600",
    "end": "251870"
  },
  {
    "text": "fields or the other way around or you could have two fields turn into three fields and then turn back into two",
    "start": "251870",
    "end": "258109"
  },
  {
    "text": "fields but in like a little bit of a different way so this two fields actually yeah they get",
    "start": "258109",
    "end": "264450"
  },
  {
    "text": "all mixed up it's end-to-end but it's even worse because you could also have a",
    "start": "264450",
    "end": "269640"
  },
  {
    "text": "field value become a list item which is like can be or a map key so this is like",
    "start": "269640",
    "end": "278310"
  },
  {
    "text": "a pretty common thing in the kubernetes api's when you forgot that you needed a list and then the next version you just",
    "start": "278310",
    "end": "285960"
  },
  {
    "text": "add additional letters to the old version so since conversion is a black box for",
    "start": "285960",
    "end": "291900"
  },
  {
    "text": "apply we're gonna well what we do is we have a convert function that's exposed",
    "start": "291900",
    "end": "297060"
  },
  {
    "text": "to the apply repo and all it knows is that it can convert full objects",
    "start": "297060",
    "end": "302730"
  },
  {
    "text": "you can't convert the field sets and you can't convert those partially specified objects and you can and you have to be",
    "start": "302730",
    "end": "310980"
  },
  {
    "text": "in the same version for two field sets so it gets really complicated to do the logic for apply now but luckily it's in",
    "start": "310980",
    "end": "318150"
  },
  {
    "text": "a different repo so we could test it really well and and it's decoupled from",
    "start": "318150",
    "end": "323400"
  },
  {
    "text": "kubernetes that's all its going to talk about cool thanks Jenny",
    "start": "323400",
    "end": "331970"
  },
  {
    "start": "328000",
    "end": "328000"
  },
  {
    "text": "[Applause] all right that's awesome we'll take some questions afterwards but",
    "start": "331970",
    "end": "339060"
  },
  {
    "text": "right now I wanted to talk about flow control which is basically the the problem is if you make a bunch of",
    "start": "339060",
    "end": "344940"
  },
  {
    "text": "requests of API server it will fall over and that's not good so we want to fix",
    "start": "344940",
    "end": "352230"
  },
  {
    "text": "that because like right now you basically can't you can't drive to the edge of what your API server is possible",
    "start": "352230",
    "end": "358860"
  },
  {
    "text": "because there's no offense and you'll just fall over so we want to put up a fence so that you can increase your utilization like provision you're your",
    "start": "358860",
    "end": "365790"
  },
  {
    "text": "master or your your control plane nodes provision those better yeah so we have",
    "start": "365790",
    "end": "371100"
  },
  {
    "text": "the we have a few goals with this effort a prioritization some requests are more",
    "start": "371100",
    "end": "377160"
  },
  {
    "text": "important than others and we want to make sure that those get more of the throughput to examples our system",
    "start": "377160",
    "end": "382740"
  },
  {
    "text": "requests might be more important than user requests but even within system requests some requests are more",
    "start": "382740",
    "end": "387930"
  },
  {
    "text": "important than others like leader election is more important than adding a random event right fairness that's the",
    "start": "387930",
    "end": "395400"
  },
  {
    "text": "other major property is like within a priority band if two people or two agents are sending requests we want them",
    "start": "395400",
    "end": "402660"
  },
  {
    "text": "to get honored about the same so and then I'd say like our other goals are",
    "start": "402660",
    "end": "411060"
  },
  {
    "text": "like let's protect the CPU let's protect RAM at least while actively processing a request there's a yeah so in order to",
    "start": "411060",
    "end": "421560"
  },
  {
    "text": "get something out in a reasonable amount of time we took on some non goals this",
    "start": "421560",
    "end": "426600"
  },
  {
    "text": "is not a solution for a hostile das for prevention because it doesn't like the",
    "start": "426600",
    "end": "432060"
  },
  {
    "text": "the it doesn't protect the SSL handshaking or like the the queue itself so we're not quite all the way there to",
    "start": "432060",
    "end": "440010"
  },
  {
    "text": "the to solving that problem but hopefully you don't have your yeah hopeful you don't have that problem yet",
    "start": "440010",
    "end": "445080"
  },
  {
    "text": "eventually eventually we've all and yeah yeah so we're not protecting like the",
    "start": "445080",
    "end": "451320"
  },
  {
    "text": "RAM from queuing the requests we're not protecting CPU from SSL handshaking because you gotta answer the SSL",
    "start": "451320",
    "end": "457770"
  },
  {
    "text": "handshake whether or not you're gonna answer the request you don't know at that point so maybe in the future but",
    "start": "457770",
    "end": "464640"
  },
  {
    "text": "not for the first take also not addressing the like of a load balancing like problems like you could",
    "start": "464640",
    "end": "470960"
  },
  {
    "text": "make requests of you've got three API servers running to get all your throughput you're gonna have to talk to",
    "start": "470960",
    "end": "476210"
  },
  {
    "text": "all three of them sorry maybe next next take will will add a like a balancing layer or something and a future goal I",
    "start": "476210",
    "end": "484010"
  },
  {
    "text": "think an important future goal is to make it automatically tune itself so it like is monitoring like how much CPU am",
    "start": "484010",
    "end": "490130"
  },
  {
    "text": "I using increase the concurrency yeah how does it work",
    "start": "490130",
    "end": "496220"
  },
  {
    "text": "so this is sort of the the design that we've sketched out and this has been the",
    "start": "496220",
    "end": "501440"
  },
  {
    "text": "people working on this have been min who's sitting right there and David EADS and myself and Michael sprites are and a",
    "start": "501440",
    "end": "510530"
  },
  {
    "text": "few other people but that's been that's been the most of the participants in the",
    "start": "510530",
    "end": "515930"
  },
  {
    "text": "conversation oh yeah and my teammate Aaron so we're adding two API objects a",
    "start": "515930",
    "end": "525650"
  },
  {
    "text": "flow schema and a priority level configuration and basically a yeah so a",
    "start": "525650",
    "end": "534010"
  },
  {
    "text": "schema is going to describe how to map a request into a queue and a priority",
    "start": "534010",
    "end": "539779"
  },
  {
    "text": "level configuration is going to like list how important the queues are so",
    "start": "539779",
    "end": "546910"
  },
  {
    "text": "this this graph here is kind of illustrating how this works",
    "start": "546910",
    "end": "552490"
  },
  {
    "text": "so let's start ups at the so up at the",
    "start": "552490",
    "end": "563930"
  },
  {
    "text": "top there's a request all right and well",
    "start": "563930",
    "end": "569180"
  },
  {
    "text": "let me back up the basic idea here is shuffle charting so we're gonna make a number of queues and the idea is we're",
    "start": "569180",
    "end": "575779"
  },
  {
    "text": "gonna hash the request in some way that we select a few queues we take the",
    "start": "575779",
    "end": "582620"
  },
  {
    "text": "shortest one and put the request there and then separately we DQ that's that's",
    "start": "582620",
    "end": "589250"
  },
  {
    "text": "the overall scheme let's zoom in just a little bit so we have a request we compute some sort of distinguisher the",
    "start": "589250",
    "end": "598310"
  },
  {
    "text": "distinguisher is part of the fluor schema it's the way of computing",
    "start": "598310",
    "end": "603570"
  },
  {
    "text": "it we use the distinguisher to hash so the distinguisher is going to be like",
    "start": "603570",
    "end": "608940"
  },
  {
    "text": "the namespace or the user and we might add some more in the future are you gonna you're gonna take this hash it and",
    "start": "608940",
    "end": "616290"
  },
  {
    "text": "that lets you decide how some number of queues the level configuration gives you",
    "start": "616290",
    "end": "624540"
  },
  {
    "text": "a hand size and a total number of queues right so you might have like 128 queues and you're gonna pick a hand size of",
    "start": "624540",
    "end": "630900"
  },
  {
    "text": "like 8 8 cards so you so the the the shuffle sharding step gives you eight",
    "start": "630900",
    "end": "637740"
  },
  {
    "text": "choices of queues and then you pick the one that's the shortest so what what this does is if you've got you've got",
    "start": "637740",
    "end": "647360"
  },
  {
    "text": "someone who's or some agent who's sending requests let's say it's by namespace and it's this one namespace is",
    "start": "647360",
    "end": "654180"
  },
  {
    "text": "sending you gobs and gobs of requests this will confine them to just eight queues and and they'll fill up those",
    "start": "654180",
    "end": "662100"
  },
  {
    "text": "queues completely but that leaves so many other queues and if you if you do the math it's like really good like the",
    "start": "662100",
    "end": "669270"
  },
  {
    "text": "percentage of queues that'll be free and the the chance of those those eight queues completely overlapping with with",
    "start": "669270",
    "end": "675510"
  },
  {
    "text": "agent that's just trying to send a few requests is very low so yeah this is I'm",
    "start": "675510",
    "end": "681450"
  },
  {
    "text": "really excited about this this is my contribution to the design so yeah so",
    "start": "681450",
    "end": "686940"
  },
  {
    "text": "that's great and then then then let's talk about the the D queuing step which",
    "start": "686940",
    "end": "693720"
  },
  {
    "text": "I think I have one more slide yeah yeah so the D queueing step here is like each",
    "start": "693720",
    "end": "699510"
  },
  {
    "text": "priority level has its own set of cues right and so they're more or less full",
    "start": "699510",
    "end": "705480"
  },
  {
    "text": "the D queuing step is using a thing called fair queuing micro sprites are",
    "start": "705480",
    "end": "711180"
  },
  {
    "text": "helped us adapt this and so it's basically going to go on a loop and and this is where the prioritization comes",
    "start": "711180",
    "end": "716640"
  },
  {
    "text": "in because the the priority level has a number of shares so yeah so if one has",
    "start": "716640",
    "end": "726330"
  },
  {
    "text": "like 30 shares and the other one has like ten shares and then you know you get a certain percentage of",
    "start": "726330",
    "end": "732569"
  },
  {
    "text": "the over of the overall throughput yeah so and then the the D queuing just basically goes in the circle while it's",
    "start": "732569",
    "end": "738239"
  },
  {
    "text": "got the capacity to handle another request like pull it out and service it yeah so I'm not sure if I'm gonna make",
    "start": "738239",
    "end": "747239"
  },
  {
    "text": "alpha for this release but soon hopefully we're still sketching out the yeah we're still sketching out the API",
    "start": "747239",
    "end": "754980"
  },
  {
    "text": "we're close but I'm excited that we're gonna arrive at a pretty great design",
    "start": "754980",
    "end": "761009"
  },
  {
    "start": "761000",
    "end": "761000"
  },
  {
    "text": "here so with that I'm gonna turn it over to David and we're can I hear about shirts thank you",
    "start": "761009",
    "end": "773459"
  },
  {
    "text": "everybody loves the cert so before I get started quick show of hands who listen to the cube API server without hookups",
    "start": "773459",
    "end": "780389"
  },
  {
    "text": "talk all right I've got to her a few more all right so so certificate",
    "start": "780389",
    "end": "787259"
  },
  {
    "text": "settings today we do know that we have a lot of them if you start trying to",
    "start": "787259",
    "end": "792629"
  },
  {
    "text": "collect them all you end up with a chart like this that doesn't fit even at the",
    "start": "792629",
    "end": "800279"
  },
  {
    "text": "smallest possible font size and you may think these are some some mad mad",
    "start": "800279",
    "end": "807269"
  },
  {
    "text": "scientist's and and he is but the rest of us are trying to figure out how to",
    "start": "807269",
    "end": "815759"
  },
  {
    "text": "handle em TLS connections between multiple sources so when you actually",
    "start": "815759",
    "end": "822269"
  },
  {
    "text": "break it down it's not as bad as it initially seems right it it's a few",
    "start": "822269",
    "end": "828449"
  },
  {
    "start": "823000",
    "end": "823000"
  },
  {
    "text": "specific kinds of connections so I've gone ahead and listed them here and I'm",
    "start": "828449",
    "end": "833730"
  },
  {
    "text": "gonna go ahead and get into some detail so you have at C D and you need to be",
    "start": "833730",
    "end": "839069"
  },
  {
    "text": "able to have the cube API server know that it's speaking to the correct that C D and you have to have at C D be sure",
    "start": "839069",
    "end": "847439"
  },
  {
    "text": "that it's the cube API server trying to write and not just some other agent that actually takes several flags to do right",
    "start": "847439",
    "end": "853499"
  },
  {
    "text": "you have the same kind of connection with the queue API server when you're trying to serve a quick show hands",
    "start": "853499",
    "end": "859019"
  },
  {
    "text": "cluster admins people who actually try to configure this right so you guys are familiar problem than was setting up SNI you know that",
    "start": "859019",
    "end": "866250"
  },
  {
    "text": "you have to set several flags to pass us that cert that you bought and you have to set several others you may not care",
    "start": "866250",
    "end": "872460"
  },
  {
    "text": "about but then you have client certificates right and this is a way for",
    "start": "872460",
    "end": "877700"
  },
  {
    "text": "the queue API server to terminate the connections and identify users from them",
    "start": "877700",
    "end": "884640"
  },
  {
    "text": "and the two most important ones that you see are for end-user connections where",
    "start": "884640",
    "end": "890100"
  },
  {
    "text": "if you have a PKI infrastructure your signing certificates for users and you",
    "start": "890100",
    "end": "895590"
  },
  {
    "text": "want them to be able to use their certain key to talk and the other one that is really common is cubelets right",
    "start": "895590",
    "end": "902790"
  },
  {
    "text": "cubelets should use a short-lived certificate that uniquely identifies",
    "start": "902790",
    "end": "908310"
  },
  {
    "text": "which particular couplet is speaking you have to be able to terminate both the next one is a front proxy certificate so",
    "start": "908310",
    "end": "916310"
  },
  {
    "text": "there are actually two uses for this one is to set up your own front proxy",
    "start": "916310",
    "end": "921930"
  },
  {
    "text": "actually of the cluster admin how many of you guys actually do set up an identification front proxy in your",
    "start": "921930",
    "end": "927750"
  },
  {
    "text": "clusters okay then the other use of it since you guys don't do that is for",
    "start": "927750",
    "end": "933210"
  },
  {
    "text": "aggregation right so you're familiar with the metrics server probably the most commonly used one you have to be",
    "start": "933210",
    "end": "939900"
  },
  {
    "text": "able to authenticate users and the way it works as a request comes in to the queue API server and it's forwarded with",
    "start": "939900",
    "end": "945510"
  },
  {
    "text": "identity and you again have to have that mutual TLS connection cubelets serving has to be trusted by the cube API server",
    "start": "945510",
    "end": "953270"
  },
  {
    "text": "cubelet clients have to be have to be trusted and the cubelet has to be able",
    "start": "953270",
    "end": "959970"
  },
  {
    "text": "to terminate connections from the cube api server that one's a little less obvious people don't always know that",
    "start": "959970",
    "end": "966270"
  },
  {
    "text": "one the last two are also related to are also flags for the controller manager so",
    "start": "966270",
    "end": "972480"
  },
  {
    "text": "we have the service service account search that is used to",
    "start": "972480",
    "end": "978600"
  },
  {
    "text": "sign a shot so it's a signed token the details of which you may or may not be",
    "start": "978600",
    "end": "984930"
  },
  {
    "text": "aware of but it's yet another interrelated cert that you have and then",
    "start": "984930",
    "end": "990240"
  },
  {
    "text": "finally the CSR endpoint so does everyone already know how the M TLS",
    "start": "990240",
    "end": "996450"
  },
  {
    "start": "993000",
    "end": "993000"
  },
  {
    "text": "connections work I see a couple but I will go ahead and and briefly cover it so what happens is",
    "start": "996450",
    "end": "1005150"
  },
  {
    "text": "that you have a client who needs to be able to identify itself to a server and so it has a certain a key and those are",
    "start": "1005150",
    "end": "1011120"
  },
  {
    "text": "the key is secret and it identifies itself to the server who terminates using this client see a bundle right so",
    "start": "1011120",
    "end": "1019190"
  },
  {
    "text": "we're up to three flags already and then your server is gonna have two sets of",
    "start": "1019190",
    "end": "1024709"
  },
  {
    "text": "starts to identifying itself back to the client it's gonna have a default cert and it's gonna have sni certs so that",
    "start": "1024709",
    "end": "1031970"
  },
  {
    "text": "you can specify different names and get the correct certificate serve with it and then the client uses the server see",
    "start": "1031970",
    "end": "1038900"
  },
  {
    "text": "a bundle to trust on the other side so you can see here we have what one two three four five six flags you have",
    "start": "1038900",
    "end": "1047300"
  },
  {
    "text": "enough of these connections and they do start to add up so a few of you are",
    "start": "1047300",
    "end": "1053480"
  },
  {
    "text": "probably sitting here thinking I have my own PKI infrastructure I verify all the",
    "start": "1053480",
    "end": "1061040"
  },
  {
    "text": "certs before I sign them I want to use what I have I have a single root CA that I'm gonna use for all this and why do",
    "start": "1061040",
    "end": "1070160"
  },
  {
    "text": "you have all of these different chains and the answer is that you do but for",
    "start": "1070160",
    "end": "1077330"
  },
  {
    "text": "every one of you there are somebody else who doesn't and they just want their connections to work right and they want",
    "start": "1077330",
    "end": "1083390"
  },
  {
    "text": "them to be secure and they don't want to worry about it and so having distinct chains of trust",
    "start": "1083390",
    "end": "1088490"
  },
  {
    "text": "it's not a perfect way but it limits the blast radius should something go wrong",
    "start": "1088490",
    "end": "1095350"
  },
  {
    "text": "so I'm gonna give a few examples and I've labeled all these pictures so if anyone's looking later they can actually",
    "start": "1095350",
    "end": "1103250"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "see all the different flag names related to the connections they have so you can see you have cube control and talking to",
    "start": "1103250",
    "end": "1110360"
  },
  {
    "text": "the cube API server and those flags on the queue API server are the actual ones",
    "start": "1110360",
    "end": "1115429"
  },
  {
    "text": "you set for this purpose so I'm not going to go through all of them because you can read them but you have cube",
    "start": "1115429",
    "end": "1122480"
  },
  {
    "text": "control to the queue API server cube API server to add CD a duplicate the",
    "start": "1122480",
    "end": "1128600"
  },
  {
    "text": "cubelets to the cube api server so this is when cubelet is asking for pods and services",
    "start": "1128600",
    "end": "1134639"
  },
  {
    "text": "volumes PVS it asks for a bunch of stuff then you also have the cube api server",
    "start": "1134639",
    "end": "1140830"
  },
  {
    "text": "back to the cubelet this is the one that happens when you're trying to do a cube control logs right that's actually a",
    "start": "1140830",
    "end": "1146860"
  },
  {
    "text": "proxied call so you're you're making a call to the QB API server queue API server then makes a different request on",
    "start": "1146860",
    "end": "1153759"
  },
  {
    "text": "your behalf to the cubelet because you don't necessarily have network connectivity and your cert isn't good to",
    "start": "1153759",
    "end": "1159970"
  },
  {
    "text": "terminate there and it has to be able to verify it's talking to a real cute lit",
    "start": "1159970",
    "end": "1166859"
  },
  {
    "start": "1166000",
    "end": "1166000"
  },
  {
    "text": "now we have a slightly different case it's not just a straight request to the",
    "start": "1166859",
    "end": "1172450"
  },
  {
    "text": "queue API server of a certificate that one will normally terminate and give a",
    "start": "1172450",
    "end": "1178210"
  },
  {
    "text": "user identity on the request that is related to the cert that you used there's another case where you have a",
    "start": "1178210",
    "end": "1184210"
  },
  {
    "text": "front proxy set up and this is what I was talking about with aggregation so you have a front proxy which terminates",
    "start": "1184210",
    "end": "1192429"
  },
  {
    "text": "TLS and it decides which user you should be and makes another request proxied",
    "start": "1192429",
    "end": "1199960"
  },
  {
    "text": "through that asserts the identity on that request so if deads 2k makes a request to the",
    "start": "1199960",
    "end": "1207340"
  },
  {
    "text": "server he would make a request to the cube aggregator which is built into the",
    "start": "1207340",
    "end": "1212679"
  },
  {
    "text": "queue API server for metrics the queue API server says yep I recognize this somehow this is deads 2k and I'm going",
    "start": "1212679",
    "end": "1221590"
  },
  {
    "text": "to assert it to the metric server and so the metric server has to confirm not",
    "start": "1221590",
    "end": "1226659"
  },
  {
    "text": "that it's dad's to K because des Duque didn't make the request right the one that it sees is actually from the queue",
    "start": "1226659",
    "end": "1232690"
  },
  {
    "text": "API server it needs to see isn't really the queue API server talking to me does the cube API server have the power to",
    "start": "1232690",
    "end": "1239379"
  },
  {
    "text": "assert identity okay yes it does and it is deads to que speaking to so there's",
    "start": "1239379",
    "end": "1246519"
  },
  {
    "start": "1244000",
    "end": "1244000"
  },
  {
    "text": "two common ways you'll see this in clusters someone apparently not uncommon Leigh will use Apache with semat off and",
    "start": "1246519",
    "end": "1255009"
  },
  {
    "text": "they will have Apache terminate the connection Apache will decide which user",
    "start": "1255009",
    "end": "1260139"
  },
  {
    "text": "it is and then send it on to the queue API server asserting identity and in the other case which is common if",
    "start": "1260139",
    "end": "1266350"
  },
  {
    "text": "you're going to be using if you're going to be using metrics is to have the cube",
    "start": "1266350",
    "end": "1273520"
  },
  {
    "text": "aggregator send it through and there are a few other aggregated API service service catalogs an example OpenShift",
    "start": "1273520",
    "end": "1279580"
  },
  {
    "text": "has an aggregated api server as well all right so search CSRs and cubelets it's",
    "start": "1279580",
    "end": "1289300"
  },
  {
    "start": "1283000",
    "end": "1283000"
  },
  {
    "text": "important to always remember the relationships that you have between the components and this can be kind of",
    "start": "1289300",
    "end": "1296050"
  },
  {
    "text": "difficult as in this example we have a set of three binaries total of six flags",
    "start": "1296050",
    "end": "1301210"
  },
  {
    "text": "and they are all related they have to move together if you're gonna turn on cubelet rotation you need to be sure",
    "start": "1301210",
    "end": "1308320"
  },
  {
    "text": "that your cube controller manager is actually going to sign those certificates so you have to pass the",
    "start": "1308320",
    "end": "1314200"
  },
  {
    "text": "flags for the cube controller manager or you get cubelets that don't go anywhere",
    "start": "1314200",
    "end": "1319210"
  },
  {
    "text": "they get stuck waiting for their cert to be signed and then even after you've done that you need to make sure that",
    "start": "1319210",
    "end": "1325480"
  },
  {
    "text": "your queue API server has the CSR serve they use to sign from the controller",
    "start": "1325480",
    "end": "1330970"
  },
  {
    "text": "manager in its clients EA bundle and inside of the Hulett certificate",
    "start": "1330970",
    "end": "1338230"
  },
  {
    "text": "authority I had to look I don't remember that flag the Cubitt certificate authority and if you forget any of those",
    "start": "1338230",
    "end": "1344290"
  },
  {
    "text": "pieces if you forget the cube API server pieces you can have cubelets that can't get a list of their pods that run on",
    "start": "1344290",
    "end": "1349809"
  },
  {
    "text": "them they'll get 401's back or if you forget the cubelet certificate authority you'll get a cubelet that you can't get",
    "start": "1349809",
    "end": "1357190"
  },
  {
    "text": "logs from I I guess I can admit that I have hit that before and it is quite",
    "start": "1357190",
    "end": "1363220"
  },
  {
    "text": "frustrating to debug and yeah we will actually pause here for questions if you",
    "start": "1363220",
    "end": "1370780"
  },
  {
    "text": "have them yeah thanks David any any questions on",
    "start": "1370780",
    "end": "1377429"
  },
  {
    "text": "anything it doesn't have to be limited yeah this may go",
    "start": "1377429",
    "end": "1383400"
  },
  {
    "text": "No so the question was is this thing that I've discussed here the situation",
    "start": "1393190",
    "end": "1399129"
  },
  {
    "text": "where you have six flags that are all interrelated that span multiple binaries is this the objective of the component",
    "start": "1399129",
    "end": "1405789"
  },
  {
    "text": "config to solve and the answer is no the component config is trying to solve the",
    "start": "1405789",
    "end": "1411639"
  },
  {
    "text": "problem of how do I represent the configuration for an individual binary but it's not going to be opinionated",
    "start": "1411639",
    "end": "1416769"
  },
  {
    "text": "about how that configuration is distributed not all distributions or",
    "start": "1416769",
    "end": "1422979"
  },
  {
    "text": "configurations are going to agree on exactly how that says so the way I want to config is the common denominator I'd",
    "start": "1422979",
    "end": "1429849"
  },
  {
    "text": "even go so far as to say in the short term it'll probably make it worse because you'll have like files and flags that both work at the same time it will",
    "start": "1429849",
    "end": "1437320"
  },
  {
    "text": "make it a little bit more difficult you'll have a priority to remember I do think it's going to be worth it in the transition yeah yeah and an additional",
    "start": "1437320",
    "end": "1444399"
  },
  {
    "text": "complication to think about is like if you've got three API servers in your setup that's three possible places for",
    "start": "1444399",
    "end": "1450700"
  },
  {
    "text": "this flag to be wrong so it it is and component config may help with that",
    "start": "1450700",
    "end": "1457450"
  },
  {
    "text": "eventually yeah although yeah yeah from here to there is gonna be fairly long it'll help with that because we'll have",
    "start": "1457450",
    "end": "1462519"
  },
  {
    "text": "to figure it out to make it work for a server at all probably any other",
    "start": "1462519",
    "end": "1468489"
  },
  {
    "text": "questions about any piece of API machinery all right nothing",
    "start": "1468489",
    "end": "1477830"
  },
  {
    "text": "we're DS we can we can talk about Co DS up just before I do though this is",
    "start": "1477830",
    "end": "1484409"
  },
  {
    "text": "similar to Stefan's the end of Stefan's talk about open API publishing what",
    "start": "1484409",
    "end": "1491009"
  },
  {
    "text": "percentage you guys were here for that a fair percentage I'll buzz through it",
    "start": "1491009",
    "end": "1498450"
  },
  {
    "text": "real quick so there are a few pieces that are going to be important for CRTs",
    "start": "1498450",
    "end": "1503460"
  },
  {
    "text": "to go to GA we want the behavioral changes related to CRTs to all land",
    "start": "1503460",
    "end": "1510200"
  },
  {
    "text": "before we make a GA and Beyond by default that doesn't necessarily mean GA themselves some of them will probably",
    "start": "1510200",
    "end": "1516120"
  },
  {
    "text": "still be beta but on by default for behavioral changes and so on this slide",
    "start": "1516120",
    "end": "1521250"
  },
  {
    "text": "those behavioral changes are open API publishing pruning and defaulting those",
    "start": "1521250",
    "end": "1527399"
  },
  {
    "text": "are the ones that I can think of right off the top of my head so pruning seems a little weird when you first see it if",
    "start": "1527399",
    "end": "1534000"
  },
  {
    "text": "you have a non-existent field then you submit it to any normal API resource it",
    "start": "1534000",
    "end": "1539970"
  },
  {
    "text": "will actually be removed on its path to Etsy D it gets removed because I think",
    "start": "1539970",
    "end": "1546779"
  },
  {
    "text": "very originally that was just what golang did and Daniel let it happen yeah yeah that was yeah and so it has a",
    "start": "1546779",
    "end": "1554399"
  },
  {
    "text": "couple side effects one good and one maybe not as good so we'll go not as",
    "start": "1554399",
    "end": "1559649"
  },
  {
    "start": "1558000",
    "end": "1558000"
  },
  {
    "text": "good first veggies first what happens is if you're trying to do a create of a",
    "start": "1559649",
    "end": "1566100"
  },
  {
    "text": "cool new feature and you happen to use this manifest against an older server we've probably all done this it gets",
    "start": "1566100",
    "end": "1574019"
  },
  {
    "text": "created without your feature it's really really frustrating client-side",
    "start": "1574019",
    "end": "1580139"
  },
  {
    "text": "validation helps with that and when you can use it it helps when you have a",
    "start": "1580139",
    "end": "1587309"
  },
  {
    "text": "client that doesn't use client-side validation like they don't all use it you can end up annoyed then there's the",
    "start": "1587309",
    "end": "1596129"
  },
  {
    "text": "good half of this field squatting so if you have some special new field maybe it",
    "start": "1596129",
    "end": "1602850"
  },
  {
    "text": "didn't exist in release on a13 but you added an it containers",
    "start": "1602850",
    "end": "1609610"
  },
  {
    "text": "and you had someone who was smart enough to create an entire piece inside of of",
    "start": "1609610",
    "end": "1617530"
  },
  {
    "text": "their pod before you upgraded the cluster you upgrade the cluster and suddenly there's an an it container that",
    "start": "1617530",
    "end": "1624250"
  },
  {
    "text": "gets created that shouldn't be it's super privileged somehow in it container",
    "start": "1624250",
    "end": "1629740"
  },
  {
    "text": "and it owns your cluster you would be very unhappy this is the good part about pruning right it prevents this from",
    "start": "1629740",
    "end": "1636130"
  },
  {
    "text": "happening but as Daniel admitted he wasn't smart enough to predict it they just happened yeah yeah this is this is",
    "start": "1636130",
    "end": "1642790"
  },
  {
    "text": "totally like we just used the standard go JSON on Marshall er and that's just the way it worked and like if absolutely",
    "start": "1642790",
    "end": "1649630"
  },
  {
    "text": "if we were doing this again I would I would reject fields that aren't",
    "start": "1649630",
    "end": "1655419"
  },
  {
    "text": "understand instead of sight as a dropper you give an option to reject or ignore yeah it's not really a live question",
    "start": "1655419",
    "end": "1662860"
  },
  {
    "text": "right but yeah and it doesn't matter so much but the other thing that is going",
    "start": "1662860",
    "end": "1668140"
  },
  {
    "start": "1665000",
    "end": "1665000"
  },
  {
    "text": "to be a behavioral change is defaulting so we're all familiar with the easy case of defaulting you create an object you",
    "start": "1668140",
    "end": "1674710"
  },
  {
    "text": "want to default value you write to the server it gets written debt CD with the defaulted value you do the read and it",
    "start": "1674710",
    "end": "1680470"
  },
  {
    "text": "comes back out this is the case that people see and they all think well I can just do defaulting in my own mutating",
    "start": "1680470",
    "end": "1686380"
  },
  {
    "text": "admission web hook right and for this case you are correct if you have",
    "start": "1686380",
    "end": "1691450"
  },
  {
    "text": "absolutely no data you can do this but if you made or decide to add a field",
    "start": "1691450",
    "end": "1697679"
  },
  {
    "start": "1694000",
    "end": "1694000"
  },
  {
    "text": "then you cannot do it with a mutating admission web hook because defaulting happens on reads the example that we",
    "start": "1697679",
    "end": "1704919"
  },
  {
    "text": "have here is of a stored pod it came in in a previous version it does not have",
    "start": "1704919",
    "end": "1711100"
  },
  {
    "text": "this neat defaulted field right but when we upgrade and we have defaulting when",
    "start": "1711100",
    "end": "1717280"
  },
  {
    "text": "we do the read we will get that fancy new default of field on the read we don't have to rewrite the resource at CD",
    "start": "1717280",
    "end": "1723940"
  },
  {
    "text": "still has it empty and it happens on the read side there's no admission on reads you can't reproduce this functionality",
    "start": "1723940",
    "end": "1732780"
  },
  {
    "start": "1733000",
    "end": "1733000"
  },
  {
    "text": "arbitrary sub resources is something that I'd like to see on the roadmap",
    "start": "1733860",
    "end": "1739080"
  },
  {
    "text": "and I do not believe it is required for GA though and the reason I don't think",
    "start": "1739080",
    "end": "1744780"
  },
  {
    "text": "it's required for GA is that it's not going to change the behavior of existing functionality right if you look at",
    "start": "1744780",
    "end": "1750600"
  },
  {
    "text": "pruning it changes what's actually stored if you look at the faulting it changes what you actually read but this",
    "start": "1750600",
    "end": "1756390"
  },
  {
    "text": "is just an additive change that allows you to have more power right and the idea here so you could do something like",
    "start": "1756390",
    "end": "1762890"
  },
  {
    "text": "logs or port forwarding right if you know how a logs requests work and I sort",
    "start": "1762890",
    "end": "1769110"
  },
  {
    "text": "of mentioned it you had go through a queue API server which has a bunch of logic to decide can I proxy where do i",
    "start": "1769110",
    "end": "1775830"
  },
  {
    "text": "proxy to then I use my identity to proxy it using some of the flags that you just",
    "start": "1775830",
    "end": "1782640"
  },
  {
    "text": "talked about yes anyway does all those things you we can't realistically build",
    "start": "1782640",
    "end": "1789180"
  },
  {
    "text": "this in to the queue API server that logic we can't we can't allow someone to",
    "start": "1789180",
    "end": "1795240"
  },
  {
    "text": "write that program and have us run it for them but maybe something like API aggregation we haven't thought about",
    "start": "1795240",
    "end": "1800250"
  },
  {
    "text": "exactly how we would do it but I think we both agree that it's a functionality we'd like to have yeah yeah it'd be",
    "start": "1800250",
    "end": "1806760"
  },
  {
    "text": "super awesome I'd actually like to take all the all of that functionality and get it out of API server yeah I think",
    "start": "1806760",
    "end": "1812880"
  },
  {
    "text": "that would be good too yeah and then the last one that I came up with was",
    "start": "1812880",
    "end": "1818430"
  },
  {
    "start": "1816000",
    "end": "1816000"
  },
  {
    "text": "priority if you've worked a lot with CRTs you may have hit this some names",
    "start": "1818430",
    "end": "1823680"
  },
  {
    "text": "are just popular policy it's not policy",
    "start": "1823680",
    "end": "1829260"
  },
  {
    "text": "no matter what it is is not policy because what happens is somebody else will have policy you will try to get a policy and you won't get the one you",
    "start": "1829260",
    "end": "1835320"
  },
  {
    "text": "want so the example I have here is a foo and it's in two different groups and you",
    "start": "1835320",
    "end": "1840780"
  },
  {
    "text": "do a cube control get foo and which foo should you get right now the results is",
    "start": "1840780",
    "end": "1847490"
  },
  {
    "text": "predictable lays the same but for the life of me I can't remember what it is and and I think we need to come up with",
    "start": "1847490",
    "end": "1855690"
  },
  {
    "text": "a way for people to wait and balance them part of the problem is that everyone will believe it there's is the",
    "start": "1855690",
    "end": "1861750"
  },
  {
    "text": "most important I mean clearly you want my policy not Daniels policy",
    "start": "1861750",
    "end": "1868510"
  },
  {
    "text": "so like the one consistent rule that absolutely everyone agrees to no CRD should ever get to override a core",
    "start": "1868510",
    "end": "1875410"
  },
  {
    "text": "kubernetes resource so we're not going to allow that to be possible but I think we'll be trying to add functionality for",
    "start": "1875410",
    "end": "1882130"
  },
  {
    "text": "this at some point still I would say in your scripts the standard advice is",
    "start": "1882130",
    "end": "1888160"
  },
  {
    "text": "always there always specify your entire resource version group when you specify",
    "start": "1888160",
    "end": "1895510"
  },
  {
    "text": "it so that you get consistent serialization as you try to do something like output the JSON yeah that's just",
    "start": "1895510",
    "end": "1902770"
  },
  {
    "text": "super important at one point we had talked about making keep control detect whether a terminal was attached and like",
    "start": "1902770",
    "end": "1908650"
  },
  {
    "text": "reject short names if that was gosh that was like 2015 with Brian right yeah it's",
    "start": "1908650",
    "end": "1916900"
  },
  {
    "text": "not likely to happen yeah but useful names and your scripts yeah all right",
    "start": "1916900",
    "end": "1923500"
  },
  {
    "text": "did that kick loose any questions for anybody else",
    "start": "1923500",
    "end": "1927780"
  },
  {
    "text": "so for those of us where who are for",
    "start": "1935270",
    "end": "1940830"
  },
  {
    "text": "example we have need for sub resources that aren't supported and custom resource definitions we've been trying",
    "start": "1940830",
    "end": "1947670"
  },
  {
    "text": "to make use of the queue builder alpha project what's the roadmap or the future",
    "start": "1947670",
    "end": "1953970"
  },
  {
    "text": "with the sorry the API builder project builder project one of Phil's yeah",
    "start": "1953970",
    "end": "1962190"
  },
  {
    "text": "builder alpha I think they call it it's an incubator we can both be embarrassed",
    "start": "1962190",
    "end": "1970020"
  },
  {
    "text": "to say I don't I don't know if I know that one but it looks like I'm in did",
    "start": "1970020",
    "end": "1976910"
  },
  {
    "text": "you just mean the passive observer it's an good good idea for a",
    "start": "1977780",
    "end": "1984600"
  },
  {
    "text": "transformation oh yeah I'm running it it's almost it's exhausting wait yeah",
    "start": "1984600",
    "end": "1995660"
  },
  {
    "text": "for now we didn't have a better SDK builder for the API so builder",
    "start": "1995660",
    "end": "2001570"
  },
  {
    "text": "obligation but yeah mmm we are still putting some manpower into maintaining",
    "start": "2001570",
    "end": "2007550"
  },
  {
    "text": "it so what was her problem",
    "start": "2007550",
    "end": "2011500"
  },
  {
    "text": "yes",
    "start": "2021250",
    "end": "2023880"
  },
  {
    "text": "oh yeah I suspect that so so there was a the overall conversation just for the",
    "start": "2031190",
    "end": "2037880"
  },
  {
    "text": "record was about I think what project would we use to try to create something",
    "start": "2037880",
    "end": "2043580"
  },
  {
    "text": "to serve CRD sub-resources or similar api server",
    "start": "2043580",
    "end": "2048590"
  },
  {
    "text": "I suspect that once we actually create the ability to serve CRT sub resources",
    "start": "2048590",
    "end": "2055280"
  },
  {
    "text": "there will be more interest in creating compatible servers to that end we actually created the kate's io api",
    "start": "2055280",
    "end": "2063470"
  },
  {
    "text": "server repo with primitives that would make this possible it's not necessarily",
    "start": "2063470",
    "end": "2070250"
  },
  {
    "text": "easy today but I think that once the CRT feature comes we're gonna see more so so",
    "start": "2070250",
    "end": "2076040"
  },
  {
    "text": "speaking of sub resources there's two categories of sub resources there's things like the scale sub resource which",
    "start": "2076040",
    "end": "2083149"
  },
  {
    "text": "is like I took some fields and I manipulated them in some way and now I've got this this type that I can serve",
    "start": "2083150",
    "end": "2089240"
  },
  {
    "text": "from multiple places and multiple multiple people can understand it the other kind of sub resources like logs is",
    "start": "2089240",
    "end": "2096500"
  },
  {
    "text": "exact attach port forward where it's like some completely non kubernetes specific or kubernetes specific and",
    "start": "2096500",
    "end": "2106400"
  },
  {
    "text": "strange protocol which is not like a declarative thing so those two cases are quite different",
    "start": "2106400",
    "end": "2113410"
  },
  {
    "text": "yeah they are different there's a third one it's a controlled escalation if you",
    "start": "2113410",
    "end": "2118970"
  },
  {
    "text": "look at say pod bind yeah yeah I grouped that in with the with the scale sub",
    "start": "2118970",
    "end": "2124940"
  },
  {
    "text": "resource that you can you can permission them differently right you can permission it differently but since you",
    "start": "2124940",
    "end": "2130040"
  },
  {
    "text": "can do anything inside of it yeah I think the the namespace name space",
    "start": "2130040",
    "end": "2136010"
  },
  {
    "text": "finalize errs are the same yeah yeah thank you again so certainly the logs",
    "start": "2136010",
    "end": "2143750"
  },
  {
    "text": "attached port forward that that sort of stuff I think that needs to be implemented in the front door like the",
    "start": "2143750",
    "end": "2149360"
  },
  {
    "text": "aggregator if we want to customize that so it'd be like you're registering for it in the API service object I we",
    "start": "2149360",
    "end": "2155870"
  },
  {
    "text": "haven't actually designed this yet yeah the",
    "start": "2155870",
    "end": "2160840"
  },
  {
    "text": "yeah yeah yeah yeah I groove verbs I",
    "start": "2161110",
    "end": "2166520"
  },
  {
    "text": "don't know that I see us doing I think",
    "start": "2166520",
    "end": "2171890"
  },
  {
    "text": "the the statement is that things like this are effectively extra verbs oh okay",
    "start": "2171890",
    "end": "2177290"
  },
  {
    "text": "yeah I I would actually discourage the heavy use of things like this I like",
    "start": "2177290",
    "end": "2182630"
  },
  {
    "text": "would often encourage you like to model the process as a object like just like",
    "start": "2182630",
    "end": "2190100"
  },
  {
    "text": "we have a CSR a resource type like a certificate signing request like you",
    "start": "2190100",
    "end": "2195500"
  },
  {
    "text": "might think that request is a verb but actually we made a noun to to track the whole process because I think a lot of",
    "start": "2195500",
    "end": "2203860"
  },
  {
    "text": "requests are actually not simple requests and like there's various things",
    "start": "2203860",
    "end": "2209030"
  },
  {
    "text": "that can go wrong and even if it is you think of it as a single flow like you may actually want multiple actors to get",
    "start": "2209030",
    "end": "2215540"
  },
  {
    "text": "involved like like again to use CSR as a example like there's a there's a signer and an approver and like these are",
    "start": "2215540",
    "end": "2221750"
  },
  {
    "text": "separate and maybe a human stands in to approve some things so so I encourage",
    "start": "2221750",
    "end": "2228530"
  },
  {
    "text": "you to to think hard about maybe that maybe there's another way to represent it yeah okay oh do we have time for more",
    "start": "2228530",
    "end": "2239630"
  },
  {
    "text": "yeah okay one more last question",
    "start": "2239630",
    "end": "2243369"
  },
  {
    "text": "I could actually upon ask about the server-side applied is the server sizes",
    "start": "2246080",
    "end": "2251990"
  },
  {
    "text": "a plan to works with customized resources yes all right we're done",
    "start": "2251990",
    "end": "2272350"
  },
  {
    "text": "yeah we're gonna make it work with with custom resources - yeah that's this that's important yeah okay thank you",
    "start": "2272350",
    "end": "2278510"
  },
  {
    "text": "everybody [Applause]",
    "start": "2278510",
    "end": "2285389"
  }
]