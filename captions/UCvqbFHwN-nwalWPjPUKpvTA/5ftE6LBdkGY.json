[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "okay thanks everyone for coming also for staying so late on the last day today",
    "start": "500",
    "end": "7560"
  },
  {
    "text": "I'm gonna basically going to cover a bit about service operations so basically our service operations",
    "start": "7560",
    "end": "13410"
  },
  {
    "text": "aren't different from existing operation but see existing develops operations basically how can you use them",
    "start": "13410",
    "end": "20010"
  },
  {
    "text": "personally and benefit from them so basically this these lessons I became",
    "start": "20010",
    "end": "25920"
  },
  {
    "text": "I'm going to share with you are basically things we've been learning top by talking to our costs our users from",
    "start": "25920",
    "end": "32790"
  },
  {
    "text": "fishing and fishing which is basically a open source fast service platform on",
    "start": "32790",
    "end": "38370"
  },
  {
    "text": "communities for which basically I work at last nine okay so big room so I'm not",
    "start": "38370",
    "end": "46920"
  },
  {
    "text": "sure I am sure some of you have already got an introduction to surplice I just don't have a quick recap but trust me",
    "start": "46920",
    "end": "53640"
  },
  {
    "start": "47000",
    "end": "47000"
  },
  {
    "text": "it'll be quick so why service I think that's based on three characteristics one is the",
    "start": "53640",
    "end": "59789"
  },
  {
    "text": "operational model and so basically there it's about the Q as a user the first so",
    "start": "59789",
    "end": "66720"
  },
  {
    "text": "much of your operate so as much as possible your operational logic to the cloud provider so basically only an",
    "start": "66720",
    "end": "72869"
  },
  {
    "text": "interview should only need to focus on your actual business logic actual actual code that you care about a lot of things",
    "start": "72869",
    "end": "77939"
  },
  {
    "text": "should be referred to as much possible through a cloud provider and then in return you get a lot of things for free",
    "start": "77939",
    "end": "83430"
  },
  {
    "text": "back so one of this is the that the cloud provider does the out scaling for",
    "start": "83430",
    "end": "89820"
  },
  {
    "text": "you and all the things I ski cat you get for free is basically monitoring health checking out that sort the other next",
    "start": "89820",
    "end": "96960"
  },
  {
    "text": "the operational model you have to cost model and that's maybe the one thing is more more famous for service than the",
    "start": "96960",
    "end": "102479"
  },
  {
    "text": "outer scaling part I was basically only pay for extra research that you use and you don't pay basically for reserving",
    "start": "102479",
    "end": "109100"
  },
  {
    "text": "machine instances that you don't fully utilize in the next round",
    "start": "109100",
    "end": "114840"
  },
  {
    "text": "you also don't pay any up front cost or barely cost that are not directly correlated to your usage and finally",
    "start": "114840",
    "end": "121140"
  },
  {
    "text": "even if you do use your your service application you paid so you do so in a",
    "start": "121140",
    "end": "126840"
  },
  {
    "text": "very granular way so you pay for it by the millisecond instead of by the hour day or month in more today",
    "start": "126840",
    "end": "132260"
  },
  {
    "text": "no cloud models and finally you have the development model we're basically in",
    "start": "132260",
    "end": "138069"
  },
  {
    "text": "in-service you really try to focus you you're working on as close as possible to the business logic so we also knew",
    "start": "138069",
    "end": "144230"
  },
  {
    "text": "using high-level abstractions such as functions or queries and next that also",
    "start": "144230",
    "end": "150349"
  },
  {
    "text": "the cloud productized tries to provide you with as much services as possible so if you don't have to do grunt work of",
    "start": "150349",
    "end": "155480"
  },
  {
    "text": "integrating with a storage service or with a message queue and finally service",
    "start": "155480",
    "end": "160940"
  },
  {
    "text": "is really about being also being language agnostic there's no real language specific",
    "start": "160940",
    "end": "166010"
  },
  {
    "text": "features that you're using so basically can fit the language that you're that you need to the business product problem",
    "start": "166010",
    "end": "172010"
  },
  {
    "text": "you're trying to solve so romantic isn't quite still quite abstract and there are",
    "start": "172010",
    "end": "178069"
  },
  {
    "text": "a lot of these service systems that fit surface models that fit this description",
    "start": "178069",
    "end": "183489"
  },
  {
    "text": "from service containers to service databases but today I'm going to focus",
    "start": "183489",
    "end": "188690"
  },
  {
    "start": "188000",
    "end": "188000"
  },
  {
    "text": "fully on function as a service or just fast and the idea of fast is basically",
    "start": "188690",
    "end": "194780"
  },
  {
    "text": "thank you as a developer you express your business logic in functions and these functions you submit to the fast",
    "start": "194780",
    "end": "200900"
  },
  {
    "text": "that form which is basically up which operators by an operator and this operator can be public it can be a",
    "start": "200900",
    "end": "206329"
  },
  {
    "text": "double yes it can be Google it can also be an internal DevOps team which basically manages a self deployed as",
    "start": "206329",
    "end": "213199"
  },
  {
    "text": "self deploy it's a fast platform and the whole goal is fast that's basically turn your functions into function instances",
    "start": "213199",
    "end": "218959"
  },
  {
    "text": "which are basically workers that process your events for these functions and",
    "start": "218959",
    "end": "224120"
  },
  {
    "text": "execute the function for it and this basically this allows you to to serve a certain number of users which base heat",
    "start": "224120",
    "end": "232370"
  },
  {
    "text": "form the workload whether they are actual users or maybe just downstream services and I might be wondering this",
    "start": "232370",
    "end": "238790"
  },
  {
    "text": "seems very simple while entire talk about service operations the problem",
    "start": "238790",
    "end": "244730"
  },
  {
    "text": "here is that you don't when you're using servlets you don't just use a single function anyway when you start investing",
    "start": "244730",
    "end": "251060"
  },
  {
    "start": "246000",
    "end": "246000"
  },
  {
    "text": "into service our structures you the the",
    "start": "251060",
    "end": "256329"
  },
  {
    "text": "the small bases the constrain model of a function it's basically forced you sort of to keep your phone's very small and",
    "start": "256329",
    "end": "262820"
  },
  {
    "text": "also the cost of adding a new function is very cheap so as you can see between the recent",
    "start": "262820",
    "end": "267890"
  },
  {
    "text": "survey an idea worse the users we have",
    "start": "267890",
    "end": "274690"
  },
  {
    "text": "more health usually have more than function without some some live hundreds and others have thousands of functions",
    "start": "274690",
    "end": "281600"
  },
  {
    "text": "you can imagine that once you have this number of functions tens hundreds or going all being deployed on concurrent",
    "start": "281600",
    "end": "288380"
  },
  {
    "text": "of being upgraded being defecated but suddenly it becomes much more complex to actually manage this overall picture can",
    "start": "288380",
    "end": "293930"
  },
  {
    "text": "get a good insight in this in what's happening in your system for this we",
    "start": "293930",
    "end": "299240"
  },
  {
    "text": "need actual structure operational processes and luckily there's of course",
    "start": "299240",
    "end": "305210"
  },
  {
    "start": "302000",
    "end": "302000"
  },
  {
    "text": "a lot of existing work on this so we have this traditional distributional devil lifecycle which you probably have",
    "start": "305210",
    "end": "311840"
  },
  {
    "text": "seen in some variation this evening even on this conference but two ways give",
    "start": "311840",
    "end": "317360"
  },
  {
    "text": "occupy key fluid whiskey after this development loop where are you a secure as you develop your you're making a",
    "start": "317360",
    "end": "323210"
  },
  {
    "text": "change you're implementing a feature you're basically constantly there's a constant interplay between coding and then trying to run a couple of tests to",
    "start": "323210",
    "end": "329540"
  },
  {
    "text": "see if you actually if your program program still runs and if it does what it should and then basically once you're",
    "start": "329540",
    "end": "337220"
  },
  {
    "text": "done you move to the operation layer operation loop where you build it tested",
    "start": "337220",
    "end": "342380"
  },
  {
    "text": "but I'm far bigger test shoot and then release it risky or commit it into your",
    "start": "342380",
    "end": "348530"
  },
  {
    "text": "code base and your code base and basically from there your basic deploy or your functions to the extra",
    "start": "348530",
    "end": "355220"
  },
  {
    "text": "production environment and from there you start operating and monitoring it and based of course when you're going to",
    "start": "355220",
    "end": "360860"
  },
  {
    "text": "monitor is if you find new feet new parks new performance issues and missing features which is basically then again",
    "start": "360860",
    "end": "367040"
  },
  {
    "text": "start this development loop in turn so now you might wonder like how does this change in surplice completing this this",
    "start": "367040",
    "end": "373820"
  },
  {
    "text": "basically step of loop lucky luckily it doesn't basically the core",
    "start": "373820",
    "end": "379280"
  },
  {
    "start": "376000",
    "end": "376000"
  },
  {
    "text": "principles of this data loop should remain the same for service up your service computing you going to have this",
    "start": "379280",
    "end": "384530"
  },
  {
    "text": "serve your surplice applications fit into your workflow into your your",
    "start": "384530",
    "end": "389600"
  },
  {
    "text": "processes instead of adapting oil process to this one single Oh catchphrase so but of course you can",
    "start": "389600",
    "end": "399300"
  },
  {
    "text": "imagine that even within these these stages there are still a lot of differences there's a lot of practices",
    "start": "399300",
    "end": "404970"
  },
  {
    "text": "that are a bit different in serve list and also serve practice that are specific to service so today I'm going",
    "start": "404970",
    "end": "411390"
  },
  {
    "text": "to drain the rest of the talk and with this guy I'm gonna share a few whiskey",
    "start": "411390",
    "end": "416520"
  },
  {
    "text": "for each of these stages basically what what's different in service of what you should watch for and basically what are",
    "start": "416520",
    "end": "423900"
  },
  {
    "text": "good practices in general when using a service so first up the development",
    "start": "423900",
    "end": "430890"
  },
  {
    "text": "loops always give real now who is he changing our feature implementing a feature and killed the key thing of this",
    "start": "430890",
    "end": "438030"
  },
  {
    "start": "437000",
    "end": "437000"
  },
  {
    "text": "develop and basically this holds for any application not just the service one is that you should keep it as small and as",
    "start": "438030",
    "end": "444390"
  },
  {
    "text": "fast as possible basically to keep is this feedback to the user as far almost",
    "start": "444390",
    "end": "449850"
  },
  {
    "text": "instant and in for service is also the same but also there's also a bit more a",
    "start": "449850",
    "end": "455940"
  },
  {
    "text": "bit more tricky part to the to service because because you generally when you",
    "start": "455940",
    "end": "462480"
  },
  {
    "text": "start I've started using service you use this create account on I do gas or cool clouds and you start by using their",
    "start": "462480",
    "end": "469410"
  },
  {
    "text": "services and those are not really fitted for fast and scalable development so now",
    "start": "469410",
    "end": "475620"
  },
  {
    "text": "instead of actually having this by we're waiting for your count equal to a poly now you're waiting for your code to be",
    "start": "475620",
    "end": "480990"
  },
  {
    "text": "uploaded for to be deployed and to be exposed to your V PC for example and",
    "start": "480990",
    "end": "488730"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "it's not of course sorry not not to say that it's not the good place to start these online editors that basically all",
    "start": "488730",
    "end": "496230"
  },
  {
    "text": "fast riders show have sorry we are a good great point to start exploring",
    "start": "496230",
    "end": "503250"
  },
  {
    "text": "service to basically tight bits maybe for a small hackathon to create quickly set up some features but there are some",
    "start": "503250",
    "end": "509820"
  },
  {
    "text": "limitations to these online editors and basically they're there couple so one is",
    "start": "509820",
    "end": "515760"
  },
  {
    "text": "team that are limited that I have limited functionality some time most of",
    "start": "515760",
    "end": "521219"
  },
  {
    "text": "times the API of your fast platform has more functionality than is presented in",
    "start": "521220",
    "end": "526860"
  },
  {
    "text": "the editor and accidentally the they also just missing there they're missing the",
    "start": "526860",
    "end": "532589"
  },
  {
    "text": "typical IDE functionality ID",
    "start": "532589",
    "end": "538889"
  },
  {
    "text": "functionality like what your favorite ID has advanced typing your your self",
    "start": "538889",
    "end": "546870"
  },
  {
    "text": "defined macros and so forth and finally the also these editors also missing a",
    "start": "546870",
    "end": "553050"
  },
  {
    "text": "bit of a good good version control because they're they're not present you cannot really get them from there into",
    "start": "553050",
    "end": "559649"
  },
  {
    "text": "your own version control system so you're basically dependent on any OBS to infinite this for you and I do i do",
    "start": "559649",
    "end": "567029"
  },
  {
    "text": "create some for example I could do create a snapshot for every time your function that gets deployed but the",
    "start": "567029",
    "end": "572040"
  },
  {
    "text": "still risky this is a disconnect between your own processes or your own version control system and that of eight of us",
    "start": "572040",
    "end": "578879"
  },
  {
    "text": "and of course and of course the answer",
    "start": "578879",
    "end": "587279"
  },
  {
    "start": "582000",
    "end": "582000"
  },
  {
    "text": "is very simple just developed locally and luckily these functions that we defined servers are not special they",
    "start": "587279",
    "end": "593579"
  },
  {
    "text": "don't require some special API they can just be developed in your own IDE and",
    "start": "593579",
    "end": "598800"
  },
  {
    "text": "are some project actually help you further develop your surface",
    "start": "598800",
    "end": "603959"
  },
  {
    "text": "applications so for example a give us some surface application model which basically allows you to also specify the",
    "start": "603959",
    "end": "611309"
  },
  {
    "text": "code the function configuration in code for will receive like that you have the function and the configuration in the",
    "start": "611309",
    "end": "616769"
  },
  {
    "text": "same environment you basically upload them to a base in the same package and",
    "start": "616769",
    "end": "623059"
  },
  {
    "text": "serve the service framework does the same thing but it also tries to be a bit more agnostic so that they try to if you",
    "start": "623059",
    "end": "630179"
  },
  {
    "text": "define your function for anyways it's relatively easier to also convert it to a and measure function so that's",
    "start": "630179",
    "end": "638279"
  },
  {
    "text": "basically started basically develop your analysis developing locally myself we're testing our functions and we still",
    "start": "638279",
    "end": "644009"
  },
  {
    "text": "always have to upload them twenty twenty others to Google clouds and that takes a",
    "start": "644009",
    "end": "651449"
  },
  {
    "text": "lot of time so there are a couple options here to actually also speed this this part of the local developer",
    "start": "651449",
    "end": "657449"
  },
  {
    "start": "653000",
    "end": "653000"
  },
  {
    "text": "experience up one s whiskey was using a fast emulator so much every managed fast platform has",
    "start": "657449",
    "end": "664920"
  },
  {
    "text": "one or multiple emulators which basically well they implement the same",
    "start": "664920",
    "end": "670410"
  },
  {
    "text": "API is a reverse but are far far simpler are open source advice key are good a",
    "start": "670410",
    "end": "676050"
  },
  {
    "text": "good way to actually test your functions of line but of course if you're if you",
    "start": "676050",
    "end": "681929"
  },
  {
    "text": "have your functions you if you have if your functions that they typically like glue codes are they they're interacting",
    "start": "681929",
    "end": "688259"
  },
  {
    "text": "with services so you're still if you want to fully test those you still have to sort of",
    "start": "688259",
    "end": "693899"
  },
  {
    "text": "interact with the cloud now you can you can go even further and say basically I",
    "start": "693899",
    "end": "699660"
  },
  {
    "start": "698000",
    "end": "698000"
  },
  {
    "text": "want to emulate everything and there's a nice project called local stack that actually tries to do this basically",
    "start": "699660",
    "end": "706439"
  },
  {
    "text": "they've basically emulated at least a claim I haven't really checked it that I",
    "start": "706439",
    "end": "711740"
  },
  {
    "text": "Emily basic entire ap the entire API of a Tobias leather but problem versus",
    "start": "711740",
    "end": "718499"
  },
  {
    "text": "these systems is and if you've been around in cloud computing for longer than you've recognized at least these",
    "start": "718499",
    "end": "725730"
  },
  {
    "text": "attempts have been made of multiple tiers also is that basically they this",
    "start": "725730",
    "end": "733249"
  },
  {
    "text": "these projects are quite difficult to do because you have to constantly this this local sagas consti has to keep in sync",
    "start": "733249",
    "end": "740279"
  },
  {
    "text": "with AWS and basically constantly keep a sync radio where's Davis it's constantly",
    "start": "740279",
    "end": "746420"
  },
  {
    "text": "evolving of course so it's difficult to keep these these two in sync and similarly you could try to do a diverse",
    "start": "746420",
    "end": "754110"
  },
  {
    "text": "em local which also is an emulator for files but also for some of these",
    "start": "754110",
    "end": "759569"
  },
  {
    "text": "services that are related to this as though it's far smaller than the local stack scope but it's but it's at least",
    "start": "759569",
    "end": "767610"
  },
  {
    "text": "it's it's it's developed by a aware so that's the the chance that I are keeping sync will be bigger but still use the",
    "start": "767610",
    "end": "774120"
  },
  {
    "text": "users RF also has to be in sync so you have to comes people surely here and using the latest version of Adobe Sam",
    "start": "774120",
    "end": "779759"
  },
  {
    "text": "local so it's tricky but you can try to explore if if you think it's useful so",
    "start": "779759",
    "end": "785730"
  },
  {
    "text": "the third option is using an open source fast platform so that restricts you bit in what you can choose but the advantage",
    "start": "785730",
    "end": "791879"
  },
  {
    "text": "of these fast platforms of the job you're faster in the name of course you can deploy them anywhere so you can basically",
    "start": "791879",
    "end": "797700"
  },
  {
    "text": "deploy the same except the exact same version you're in your production and in your development so by keeping your",
    "start": "797700",
    "end": "803970"
  },
  {
    "text": "development environment and your collection environment in sync so now",
    "start": "803970",
    "end": "810870"
  },
  {
    "text": "basically we're developing locally with testing maybe at least a unit test locally we can go even further so this",
    "start": "810870",
    "end": "818310"
  },
  {
    "text": "is something where we can take a look at the the front-end community they're",
    "start": "818310",
    "end": "823590"
  },
  {
    "text": "basically like when you're working on your website if you have many many tools which basically what your file system",
    "start": "823590",
    "end": "829170"
  },
  {
    "text": "and once you make changes to your website your source code you immediately get basically music's real compiled and",
    "start": "829170",
    "end": "836340"
  },
  {
    "text": "deployed to get to a local website and your project gets refreshed this is",
    "start": "836340",
    "end": "842480"
  },
  {
    "text": "actually pretty nice if we can rapidly can actually try to replicate this in a",
    "start": "842480",
    "end": "850140"
  },
  {
    "start": "847000",
    "end": "847000"
  },
  {
    "text": "file in fast so we can do this basically using a very simple do-it-yourself type",
    "start": "850140",
    "end": "858780"
  },
  {
    "text": "of thing where you just watch your file system deploy in you for your functions when it changes but also there are more",
    "start": "858780",
    "end": "867270"
  },
  {
    "text": "and more service platform to actually try to also move towards this kind of",
    "start": "867270",
    "end": "872760"
  },
  {
    "text": "developer experience so to our bit related natalie phi insight which are",
    "start": "872760",
    "end": "878340"
  },
  {
    "text": "both basically service platforms that focus really on making service web applications so they really try to",
    "start": "878340",
    "end": "884670"
  },
  {
    "text": "follow this front-end workflow and also",
    "start": "884670",
    "end": "889770"
  },
  {
    "text": "using us this life this life reloading in fashion we have also a feature for",
    "start": "889770",
    "end": "895110"
  },
  {
    "text": "this but here which basically builds and deploys your functions in communities as you were working on them ok so now we",
    "start": "895110",
    "end": "901890"
  },
  {
    "text": "have place skin ok ok yes so now we have",
    "start": "901890",
    "end": "909330"
  },
  {
    "text": "the with basically our change so we're not really trying we're trying to basically put it into the operation loop",
    "start": "909330",
    "end": "915300"
  },
  {
    "text": "so we refers to to build this ok ok so",
    "start": "915300",
    "end": "922950"
  },
  {
    "start": "921000",
    "end": "921000"
  },
  {
    "text": "the basically built by the build stage is basically about turning your function sources into",
    "start": "922950",
    "end": "928440"
  },
  {
    "text": "actual deployables and this event depends a bit on how fast lettering uses some use a darker darker images some use",
    "start": "928440",
    "end": "935660"
  },
  {
    "text": "archives but the core principle remains the same so does the defendant so also",
    "start": "935660",
    "end": "941220"
  },
  {
    "text": "this built pipeline except implementation depends really on the language you use so for example in Google Cloud functions if you are using",
    "start": "941220",
    "end": "948570"
  },
  {
    "text": "no chess and you place a packaged adjacent file with your dependency head",
    "start": "948570",
    "end": "953610"
  },
  {
    "text": "in the bill type line of Google they will try to resolve your dependencies",
    "start": "953610",
    "end": "959400"
  },
  {
    "text": "but when you're deploying your function yeah so that's cool I also for example",
    "start": "959400",
    "end": "966870"
  },
  {
    "text": "ok native as this as this project called built which is also is the goal of this",
    "start": "966870",
    "end": "972600"
  },
  {
    "text": "is also to provide a very high level diesel for pressure for creating your",
    "start": "972600",
    "end": "978120"
  },
  {
    "text": "build pipelines yeah and some other",
    "start": "978120",
    "end": "983700"
  },
  {
    "text": "cases your in some other cases the serve platforms we encourage you to do it",
    "start": "983700",
    "end": "988980"
  },
  {
    "text": "yourself to build your own docker images and even in that case I should really try to focus on making it automated to",
    "start": "988980",
    "end": "995910"
  },
  {
    "text": "avoid it to exceed these manual changes which become tedious at some point so",
    "start": "995910",
    "end": "1002620"
  },
  {
    "text": "moving on to be built this deployable function so we now again we we enter this this testing loop which is this",
    "start": "1002620",
    "end": "1008600"
  },
  {
    "text": "this time far larger than the the test that we did in the development",
    "start": "1008600",
    "end": "1013880"
  },
  {
    "text": "environment because certainly we don't have to care whether it's going for",
    "start": "1013880",
    "end": "1020030"
  },
  {
    "text": "around whether it's going fast so this yeah you've probably noticed this experiment assessing parents in",
    "start": "1020030",
    "end": "1027740"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "service some argue that some argument is the same some argue that it should be more like an Aztek their pyramid",
    "start": "1027740",
    "end": "1035990"
  },
  {
    "text": "thickness we're basically are far more integration tests and tests which makes",
    "start": "1035990",
    "end": "1041300"
  },
  {
    "text": "sense because your function typically are very simple but they offer a lot of integrations so this is an example I",
    "start": "1041300",
    "end": "1048260"
  },
  {
    "text": "gave this small function which integrates is to free services I'm going to encore",
    "start": "1048260",
    "end": "1053940"
  },
  {
    "text": "one way to do this integration test is to make it to write your function such a",
    "start": "1053940",
    "end": "1059980"
  },
  {
    "text": "ways you can start out these the services one by one so you can refocus your your integration tests on between",
    "start": "1059980",
    "end": "1067450"
  },
  {
    "text": "your function and one service so basically you have one free integration",
    "start": "1067450",
    "end": "1074200"
  },
  {
    "text": "tests for each of the dependencies or the the survey which are integrated and",
    "start": "1074200",
    "end": "1081180"
  },
  {
    "text": "the message that I scale so this allows you to keep your tests simple and also allows you to root cause which service",
    "start": "1081180",
    "end": "1087370"
  },
  {
    "text": "has change has become incompatible with your function and some other some",
    "start": "1087370",
    "end": "1093790"
  },
  {
    "text": "smaller tips reach out so using this try to avoid hard scoring any sir in any",
    "start": "1093790",
    "end": "1099880"
  },
  {
    "text": "service lay the details really focus with separate your testing from your",
    "start": "1099880",
    "end": "1105840"
  },
  {
    "text": "production environment so use different Atos accounts use different commands",
    "start": "1105840",
    "end": "1110950"
  },
  {
    "text": "clusters and in your testing environments be careful set limits set",
    "start": "1110950",
    "end": "1116170"
  },
  {
    "text": "alerts at some monitoring because you don't want to have some runaway function",
    "start": "1116170",
    "end": "1121360"
  },
  {
    "text": "triggering all kinds of expensive services",
    "start": "1121360",
    "end": "1126300"
  },
  {
    "text": "okay so we basically thank Becky built our function we've tested it so now it's",
    "start": "1131130",
    "end": "1138000"
  },
  {
    "start": "1132000",
    "end": "1132000"
  },
  {
    "text": "ready we can actually start focusing on the release of getting it into the codebase and releasing a new version of",
    "start": "1138000",
    "end": "1143100"
  },
  {
    "text": "our function and for this yeah I've seen this introduction for forget up of times",
    "start": "1143100",
    "end": "1149970"
  },
  {
    "text": "even at this conference so I'm disconnected it's very simple but the",
    "start": "1149970",
    "end": "1155760"
  },
  {
    "text": "idea of qdubs is basically that you put everything with everything ready to your application ready to the deployment in",
    "start": "1155760",
    "end": "1161730"
  },
  {
    "text": "the in the same git repo so basically it becomes a single source of truth in your",
    "start": "1161730",
    "end": "1167480"
  },
  {
    "text": "your system or in your architecture and from from the sketch we probe your CD",
    "start": "1167480",
    "end": "1174630"
  },
  {
    "text": "tooling watches for for changes watch for new commits and basically gets triggered to redeploy so the question of",
    "start": "1174630",
    "end": "1182309"
  },
  {
    "text": "course is because you have this this deployment configuration the question of course how do you actually represent",
    "start": "1182309",
    "end": "1189330"
  },
  {
    "start": "1184000",
    "end": "1184000"
  },
  {
    "text": "this I we actually store this in your gaze repo and so one option is to do",
    "start": "1189330",
    "end": "1194730"
  },
  {
    "text": "imperatively so basically having small batch script which basically deploys your your function but there are two",
    "start": "1194730",
    "end": "1200280"
  },
  {
    "text": "issues with this one is that basically it's it's basically littered with implicit operational details because",
    "start": "1200280",
    "end": "1207450"
  },
  {
    "text": "suddenly now if you ask me now to know that you need to deploy it in this order so you need to deploy the environment",
    "start": "1207450",
    "end": "1212700"
  },
  {
    "text": "often before the before the function and the trigger before after the the function and the other issue with this",
    "start": "1212700",
    "end": "1220740"
  },
  {
    "text": "especially is very brittle because your your CD pipeline can not do much more",
    "start": "1220740",
    "end": "1226500"
  },
  {
    "text": "than just deploy your function sort and just run this script and if it some",
    "start": "1226500",
    "end": "1232500"
  },
  {
    "text": "fails it doesn't know how to recover so the alternative is which because it's because it's coupon everyone knows right",
    "start": "1232500",
    "end": "1240000"
  },
  {
    "start": "1236000",
    "end": "1236000"
  },
  {
    "text": "now is to use declarative configuration so similar to community specs so here's an example of",
    "start": "1240000",
    "end": "1247020"
  },
  {
    "text": "basically the same operation button in declarative whisk in declarative way so",
    "start": "1247020",
    "end": "1253799"
  },
  {
    "text": "basically I think the key the key advantage of this approach basically hue lose the first issue I had mentioned",
    "start": "1253799",
    "end": "1259770"
  },
  {
    "text": "earlier so that the operations so the debases you don't have to worry",
    "start": "1259770",
    "end": "1265100"
  },
  {
    "text": "you don't have to worry about the operations inside your configuration so",
    "start": "1265100",
    "end": "1270440"
  },
  {
    "text": "instead you declare the desired state of your system and the system itself does",
    "start": "1270440",
    "end": "1277400"
  },
  {
    "text": "the operations to try to reconcile the there hit the current states to this desired state yeah I think most service",
    "start": "1277400",
    "end": "1286550"
  },
  {
    "start": "1284000",
    "end": "1284000"
  },
  {
    "text": "most search lots of projects understand these disadvantages and they basically",
    "start": "1286550",
    "end": "1291560"
  },
  {
    "text": "are fun every system has a declarative at least a declarative way to specify your configuration so it was some surf a",
    "start": "1291560",
    "end": "1299270"
  },
  {
    "text": "framework and basically every open source fast platform that's on top of Cuban at ease because they want to",
    "start": "1299270",
    "end": "1305330"
  },
  {
    "text": "integrate the communities you're sort of forced to use declarative configuration which is good thing move down so we have",
    "start": "1305330",
    "end": "1314120"
  },
  {
    "start": "1313000",
    "end": "1313000"
  },
  {
    "text": "this we basically have merged our changes into the actual code base and we",
    "start": "1314120",
    "end": "1320270"
  },
  {
    "text": "are now by ski bred to deploy the rebound base cube ready to deploy the",
    "start": "1320270",
    "end": "1325640"
  },
  {
    "text": "application or the function for this we can actually we can actually take a bit",
    "start": "1325640",
    "end": "1332570"
  },
  {
    "start": "1329000",
    "end": "1329000"
  },
  {
    "text": "of a detour and we do committed unto how a fastest from deploy C functions I know",
    "start": "1332570",
    "end": "1338510"
  },
  {
    "text": "I said you need to know and if any operational logic of the fastest form but it's actually kind of useful to know",
    "start": "1338510",
    "end": "1345350"
  },
  {
    "text": "so bear with me so in the fast platform there's a router component which basically is the problem",
    "start": "1345350",
    "end": "1350810"
  },
  {
    "text": "which decides where to send your your friend to so if there's a function instance it's all sent there otherwise",
    "start": "1350810",
    "end": "1356720"
  },
  {
    "text": "it so basically issued to the lawyer expressed for a certain function instance this deploy basically knows",
    "start": "1356720",
    "end": "1362630"
  },
  {
    "text": "besides how a function should be deployed what kind of resources should should use and it all flows actual",
    "start": "1362630",
    "end": "1369200"
  },
  {
    "text": "scheduling and deployment of these dysfunctions doing which manager and of course this is communities and",
    "start": "1369200",
    "end": "1376340"
  },
  {
    "text": "communities basically takes the function from the function store and deploys it as a function instance so now we have",
    "start": "1376340",
    "end": "1382730"
  },
  {
    "text": "this function instance and we can merely rather basically cannon browse this event to the function instance for",
    "start": "1382730",
    "end": "1388130"
  },
  {
    "text": "processing and this whole display ski is",
    "start": "1388130",
    "end": "1394160"
  },
  {
    "text": "long psycho or long process is basically what we call a cold start it's basically in",
    "start": "1394160",
    "end": "1399509"
  },
  {
    "text": "the worst case possible path like your excuse you can take to be executed executed so in contrast when we have now",
    "start": "1399509",
    "end": "1406739"
  },
  {
    "text": "a second event coming in and we have we still have this function instance around so we can immediately for these events",
    "start": "1406739",
    "end": "1413369"
  },
  {
    "text": "to the function instance and this basic",
    "start": "1413369",
    "end": "1420769"
  },
  {
    "text": "okay this is called oh it's not doesn't really have a name it's basically it's",
    "start": "1422119",
    "end": "1427739"
  },
  {
    "text": "of warm execution the risk is the opposite of a cold start and basically with this knowledge we can actually do",
    "start": "1427739",
    "end": "1433379"
  },
  {
    "text": "some some pretty interesting things to optimize your performance your functions and that's basically to do some caching",
    "start": "1433379",
    "end": "1440339"
  },
  {
    "text": "inside your functions because functions are stateless they can't hold any persistent state but it can hold some",
    "start": "1440339",
    "end": "1445679"
  },
  {
    "text": "non persistent state like caching so imagine okay so imagine that you have",
    "start": "1445679",
    "end": "1462089"
  },
  {
    "text": "this ESP go back to the previous slide where we have this function instance",
    "start": "1462089",
    "end": "1468029"
  },
  {
    "text": "being deployed we can when we deploy things we deploy the function we of",
    "start": "1468029",
    "end": "1473639"
  },
  {
    "text": "course load the extra modules in your in this function instance so what you can do especially you can put some codes",
    "start": "1473639",
    "end": "1478799"
  },
  {
    "text": "outside of your function handlers about outside of the function itself into the package level and which capacity gets",
    "start": "1478799",
    "end": "1485549"
  },
  {
    "text": "executed when the function gets deployed so this allows you to ready do some some premature caching some maybe some",
    "start": "1485549",
    "end": "1491999"
  },
  {
    "text": "setting up of database connections if you're fast but you must do that for you and the same way the same thing you can",
    "start": "1491999",
    "end": "1499049"
  },
  {
    "text": "do when you actually when you have these multiple events coming to the same function instance because now you can",
    "start": "1499049",
    "end": "1505739"
  },
  {
    "text": "basically now you can because they're using the same function instance you can",
    "start": "1505739",
    "end": "1511589"
  },
  {
    "text": "catch some resolve because you can simply write to a static variable",
    "start": "1511589",
    "end": "1516970"
  },
  {
    "text": "the results of the early operation and look him up when they when the same request occurs again",
    "start": "1516970",
    "end": "1523770"
  },
  {
    "text": "so let's because the small dieter through to deployment optimizations not",
    "start": "1523770",
    "end": "1531460"
  },
  {
    "text": "extra backed basic busted back to a bit of a combination of the deployment and the testing so when you deploy your",
    "start": "1531460",
    "end": "1538330"
  },
  {
    "text": "functions use even though you have tested them you can't really guarantee that you actually have a fool like you",
    "start": "1538330",
    "end": "1544420"
  },
  {
    "text": "have if you could kind of have full confidence that you actually have a working function so you still need to",
    "start": "1544420",
    "end": "1549940"
  },
  {
    "text": "monitor it when it's really deploy it that it actually works and it works as it should and you can do it manually but",
    "start": "1549940",
    "end": "1557230"
  },
  {
    "text": "when you have these tens or hundreds of functions you it quickly becomes far too",
    "start": "1557230",
    "end": "1563500"
  },
  {
    "text": "tedious part in difficult to actually keep track of which functions you should watch which functions are already longer running which are more stable so that's",
    "start": "1563500",
    "end": "1570340"
  },
  {
    "text": "why you start to ultimate is these deployments are using connect canary",
    "start": "1570340",
    "end": "1576430"
  },
  {
    "text": "canary deployments and I did ask if current of poems is very simple what you do is basically you deploy the new",
    "start": "1576430",
    "end": "1583240"
  },
  {
    "text": "version next to the old version shifts a bit of traffic from the 2ds this new version and basically monitor this new",
    "start": "1583240",
    "end": "1590470"
  },
  {
    "text": "version with a song with some monitoring tool and based on this based on these",
    "start": "1590470",
    "end": "1596470"
  },
  {
    "text": "metrics you you generates a in error rate so for example if you're if you're",
    "start": "1596470",
    "end": "1601560"
  },
  {
    "text": "watching an HP service you watch for 400 or 500 in the HP status code and based",
    "start": "1601560",
    "end": "1609850"
  },
  {
    "text": "on this this error rate to set the threshold and your canary the kind of canary controller either shifts more and",
    "start": "1609850",
    "end": "1616810"
  },
  {
    "text": "more traffic to this new new version or if the error rate is above the threshold",
    "start": "1616810",
    "end": "1622150"
  },
  {
    "text": "it will roll back the changes aborted deployment and to give you an example of",
    "start": "1622150",
    "end": "1628300"
  },
  {
    "start": "1628000",
    "end": "1628000"
  },
  {
    "text": "this of this canary deployment style this is an example of fission of the",
    "start": "1628300",
    "end": "1635110"
  },
  {
    "text": "fission Clara deployments an innovation and see an example of a succeeded canary",
    "start": "1635110",
    "end": "1641620"
  },
  {
    "text": "canary deployment where in Green Bay skeeters one the new version is getting more and more traffic as the red one",
    "start": "1641620",
    "end": "1647440"
  },
  {
    "text": "decreases in traffic and Kenner departments are getting more",
    "start": "1647440",
    "end": "1653470"
  },
  {
    "text": "and more adopted by service platforms so at least I know it was Linda supports is",
    "start": "1653470",
    "end": "1659169"
  },
  {
    "text": "by using by combining it with a US code deploy and with in service meshes",
    "start": "1659169",
    "end": "1665259"
  },
  {
    "text": "basically carry permits are almost one of the standard features so basically when a fast platform",
    "start": "1665259",
    "end": "1671070"
  },
  {
    "text": "depends on a built on top of a service mesh it will support current deployment",
    "start": "1671070",
    "end": "1677470"
  },
  {
    "text": "such as sky native so that brings us to",
    "start": "1677470",
    "end": "1682570"
  },
  {
    "text": "the last part the loop which basically",
    "start": "1682570",
    "end": "1688749"
  },
  {
    "start": "1685000",
    "end": "1685000"
  },
  {
    "text": "no you have to applaud your functions now it knows the last time to actually take the dong long road and operate and",
    "start": "1688749",
    "end": "1696009"
  },
  {
    "text": "monitor them and unfortunately yes you still have to monitor your service",
    "start": "1696009",
    "end": "1701830"
  },
  {
    "start": "1698000",
    "end": "1698000"
  },
  {
    "text": "applications because the cloud party cannot do anything for you the cloud private does manage a lot of",
    "start": "1701830",
    "end": "1709210"
  },
  {
    "text": "the mention a lot of the system level",
    "start": "1709210",
    "end": "1714450"
  },
  {
    "text": "measurement of the system level metrics but at a higher level the clock burden",
    "start": "1714450",
    "end": "1720999"
  },
  {
    "text": "can never know whether your functions operate actually actually intended and whether they meet internal isolate of",
    "start": "1720999",
    "end": "1727269"
  },
  {
    "text": "course the service the service platforms do help with this so they do provide material metric monitoring log",
    "start": "1727269",
    "end": "1732549"
  },
  {
    "text": "aggregation storage and distributing but",
    "start": "1732549",
    "end": "1737739"
  },
  {
    "text": "and this this a few from another lot of development issues development trouble to actually set up this and set of this",
    "start": "1737739",
    "end": "1743590"
  },
  {
    "text": "monitoring infrastructure yourself but there are some pitfalls also especially when you're using managed",
    "start": "1743590",
    "end": "1749769"
  },
  {
    "text": "fast platforms because this monitoring is not free you still get paid it gets charged for for example how many",
    "start": "1749769",
    "end": "1757479"
  },
  {
    "text": "locks you're sending to the to the lock service and also there's a bit of a I",
    "start": "1757479",
    "end": "1765450"
  },
  {
    "text": "personally think it's a bit of a vendor lock-in in this this part of service because you're you don't we have a",
    "start": "1765450",
    "end": "1772269"
  },
  {
    "text": "choice which monitoring stack you're using so when you using it with lambda you using cloud watch when",
    "start": "1772269",
    "end": "1778299"
  },
  {
    "text": "using go cloud functions you're using stack driver and if you even if you're using an open source faster",
    "start": "1778299",
    "end": "1783820"
  },
  {
    "text": "from generally days they still assume a certain monitoring stack and it's hard to actually use a different one",
    "start": "1783820",
    "end": "1789820"
  },
  {
    "text": "and so the basically the remainder of this this talk I want to spend a bit on",
    "start": "1789820",
    "end": "1795370"
  },
  {
    "text": "things that you can likely to find when you're when you start operating and monitoring your function for a longer",
    "start": "1795370",
    "end": "1801220"
  },
  {
    "text": "time so the first one is basically that the memory allocation actually impacts",
    "start": "1801220",
    "end": "1808990"
  },
  {
    "start": "1804000",
    "end": "1804000"
  },
  {
    "text": "also the CPU and the i/o of your function so generally when using a device Landa your you can only set the",
    "start": "1808990",
    "end": "1815860"
  },
  {
    "text": "the resource allocation the resource allocation for your function so that",
    "start": "1815860",
    "end": "1822790"
  },
  {
    "text": "might sound with where them to to sudden get more memory to a function it's in",
    "start": "1822790",
    "end": "1828670"
  },
  {
    "text": "principle CPU intensive such as the fibonacci example here but because they",
    "start": "1828670",
    "end": "1835270"
  },
  {
    "text": "basically because under the hood the the fast provider does link the memory",
    "start": "1835270",
    "end": "1840520"
  },
  {
    "text": "allocation to the CPU shares an IO share almost linearly you see that basically even in these cpu intensive functions",
    "start": "1840520",
    "end": "1848140"
  },
  {
    "text": "you kind of performance books another performance issue or former Foreman's",
    "start": "1848140",
    "end": "1855790"
  },
  {
    "start": "1853000",
    "end": "1853000"
  },
  {
    "text": "opportunity is basically that you can opt for to not scale down to zero and it",
    "start": "1855790",
    "end": "1861490"
  },
  {
    "text": "goes a bit against the surface principles of not not paying for things you don't use but ideas basically if you",
    "start": "1861490",
    "end": "1869560"
  },
  {
    "text": "if you're willing to pay more for your functions you might consider just leaving them running for a lot for for",
    "start": "1869560",
    "end": "1877480"
  },
  {
    "text": "basically always and this is not really well supported yet in fast platform so",
    "start": "1877480",
    "end": "1882730"
  },
  {
    "text": "for example I firstly I only know that that sure sports is using the minimal instances of the premium plan thing but",
    "start": "1882730",
    "end": "1891850"
  },
  {
    "text": "in it is very well supported in the open source fasted forms because for the better reverse you have full control of",
    "start": "1891850",
    "end": "1899110"
  },
  {
    "text": "the configuration of your fast platform yeah so the final form is issue that I",
    "start": "1899110",
    "end": "1911080"
  },
  {
    "start": "1908000",
    "end": "1908000"
  },
  {
    "text": "found Percy very interesting because I actually went into it myself it's basically the language actually does",
    "start": "1911080",
    "end": "1916420"
  },
  {
    "text": "matter because I used to figure very of course I go might be a bit faster than Python",
    "start": "1916420",
    "end": "1922549"
  },
  {
    "text": "but for a single simple function with with just a single single thread it",
    "start": "1922549",
    "end": "1929809"
  },
  {
    "text": "shouldn't really matter that much but in practice actually it doesn't matter and the reason for this is not because the",
    "start": "1929809",
    "end": "1935389"
  },
  {
    "text": "language is because of the language if it's more about the language implementation so I actually rented into",
    "start": "1935389",
    "end": "1941839"
  },
  {
    "text": "it when I was running Python on Azure and I've found out all kinds of weird",
    "start": "1941839",
    "end": "1948289"
  },
  {
    "text": "limitations to Python which turned out to be which is obviously basically",
    "start": "1948289",
    "end": "1953570"
  },
  {
    "text": "because of the typhoon was in a more better stage so as this notation is not to say that -",
    "start": "1953570",
    "end": "1961580"
  },
  {
    "text": "if you'd never use Python as morally to say even when you're using you're starting to evaluate a service platform",
    "start": "1961580",
    "end": "1967039"
  },
  {
    "text": "or thinking of switching do read the actual documentation to find out which",
    "start": "1967039",
    "end": "1972769"
  },
  {
    "text": "approaches are supported better than better than the others or and run some",
    "start": "1972769",
    "end": "1978679"
  },
  {
    "text": "small benchmarks to see which languages you can use and which use which languages you'd better keep away from",
    "start": "1978679",
    "end": "1985669"
  },
  {
    "text": "for a while so that basically concludes",
    "start": "1985669",
    "end": "1991429"
  },
  {
    "start": "1990000",
    "end": "1990000"
  },
  {
    "text": "the products basically the lifecycle and also it brings an end to this talk I try",
    "start": "1991429",
    "end": "1998330"
  },
  {
    "text": "to summarize VD basically lessons learned as I present this presentation",
    "start": "1998330",
    "end": "2005039"
  },
  {
    "text": "but I think the main takeaway of this presentation is first one is that",
    "start": "2005039",
    "end": "2010570"
  },
  {
    "text": "basically servlet does still have this still have ops and especially when",
    "start": "2010570",
    "end": "2017979"
  },
  {
    "text": "you're running basically when you're running service at scale Yuri you really need structured operational processes",
    "start": "2017979",
    "end": "2023710"
  },
  {
    "text": "and for this the DevOps lifecycle is still very relevant in service and that's a good thing",
    "start": "2023710",
    "end": "2029669"
  },
  {
    "text": "Thanks [Applause]",
    "start": "2029669",
    "end": "2037949"
  }
]