[
  {
    "text": "so I'm Karen Jacks I'm a Senior",
    "start": "60",
    "end": "2820"
  },
  {
    "text": "Solutions architect at crunchy data and",
    "start": "2820",
    "end": "5940"
  },
  {
    "text": "I'm here to talk to you about running",
    "start": "5940",
    "end": "7919"
  },
  {
    "text": "Mission critical postgres databases on",
    "start": "7919",
    "end": "10440"
  },
  {
    "text": "kubernetes it is such an honor to be",
    "start": "10440",
    "end": "12900"
  },
  {
    "text": "here to talk to you I'm really",
    "start": "12900",
    "end": "15059"
  },
  {
    "text": "amazed that there's such a a crowd",
    "start": "15059",
    "end": "17820"
  },
  {
    "text": "interested in database on kubernetes you",
    "start": "17820",
    "end": "20100"
  },
  {
    "text": "know just a few years ago that would",
    "start": "20100",
    "end": "21300"
  },
  {
    "text": "have been unheard of so it's fantastic",
    "start": "21300",
    "end": "25080"
  },
  {
    "text": "so I've described this talk as suitable",
    "start": "25080",
    "end": "26699"
  },
  {
    "text": "for get for beginners so I will go over",
    "start": "26699",
    "end": "28920"
  },
  {
    "text": "some basic concepts but",
    "start": "28920",
    "end": "31320"
  },
  {
    "text": "um I'm assuming that most people in this",
    "start": "31320",
    "end": "32880"
  },
  {
    "text": "room actually know more about kubernetes",
    "start": "32880",
    "end": "34500"
  },
  {
    "text": "than I do so I'm not going to try and",
    "start": "34500",
    "end": "36360"
  },
  {
    "text": "teach you kubernetes I'm just going to",
    "start": "36360",
    "end": "39260"
  },
  {
    "text": "go quickly over and recap some of the",
    "start": "39260",
    "end": "41879"
  },
  {
    "text": "basic concepts as they're relevant to",
    "start": "41879",
    "end": "44040"
  },
  {
    "text": "the topic at hand",
    "start": "44040",
    "end": "46879"
  },
  {
    "text": "we're good",
    "start": "52200",
    "end": "53700"
  },
  {
    "text": "no it doesn't want to work hard over the",
    "start": "53700",
    "end": "55860"
  },
  {
    "text": "old-fashioned I did start my time I",
    "start": "55860",
    "end": "58739"
  },
  {
    "text": "think",
    "start": "58739",
    "end": "60239"
  },
  {
    "text": "it doesn't want to do that come on you",
    "start": "60239",
    "end": "63000"
  },
  {
    "text": "can do it",
    "start": "63000",
    "end": "64500"
  },
  {
    "text": "right we'll try again so um this is the",
    "start": "64500",
    "end": "67500"
  },
  {
    "text": "shape of my career so far very database",
    "start": "67500",
    "end": "69720"
  },
  {
    "text": "shaped so that's why I'm saying that you",
    "start": "69720",
    "end": "71400"
  },
  {
    "text": "probably know a lot more about",
    "start": "71400",
    "end": "72360"
  },
  {
    "text": "kubernetes than I do I'm talking about",
    "start": "72360",
    "end": "74460"
  },
  {
    "text": "the one subject that I know about and",
    "start": "74460",
    "end": "76619"
  },
  {
    "text": "that's databases I don't really like my",
    "start": "76619",
    "end": "79619"
  },
  {
    "text": "current title Solutions architect",
    "start": "79619",
    "end": "81420"
  },
  {
    "text": "because I don't think it really says",
    "start": "81420",
    "end": "82799"
  },
  {
    "text": "much I quite liked the fact that I was a",
    "start": "82799",
    "end": "84659"
  },
  {
    "text": "DBA I knew where I was I knew knew where",
    "start": "84659",
    "end": "86880"
  },
  {
    "text": "I stood",
    "start": "86880",
    "end": "88320"
  },
  {
    "text": "um",
    "start": "88320",
    "end": "89159"
  },
  {
    "text": "so that's uh that's me just to kind of",
    "start": "89159",
    "end": "93060"
  },
  {
    "text": "give a bit of background",
    "start": "93060",
    "end": "95780"
  },
  {
    "text": "so as a Solutions architect I have kind",
    "start": "96060",
    "end": "98700"
  },
  {
    "text": "of come a little bit out of my database",
    "start": "98700",
    "end": "100619"
  },
  {
    "text": "bubble and I've come to recognize that",
    "start": "100619",
    "end": "102420"
  },
  {
    "text": "there is an ecosystem that goes around",
    "start": "102420",
    "end": "104820"
  },
  {
    "text": "the database but I'm still I I help my",
    "start": "104820",
    "end": "108240"
  },
  {
    "text": "customers to implement database",
    "start": "108240",
    "end": "109799"
  },
  {
    "text": "Solutions I'm still very much focused on",
    "start": "109799",
    "end": "112200"
  },
  {
    "text": "the database at the heart of the system",
    "start": "112200",
    "end": "115619"
  },
  {
    "text": "and if anyone ever wants to talk to me",
    "start": "115619",
    "end": "117659"
  },
  {
    "text": "about it I'm also doing a part-time PhD",
    "start": "117659",
    "end": "119460"
  },
  {
    "text": "in computer science",
    "start": "119460",
    "end": "122298"
  },
  {
    "text": "I give up on that",
    "start": "123720",
    "end": "126799"
  },
  {
    "text": "so we'll briefly look at the evolution",
    "start": "127979",
    "end": "130140"
  },
  {
    "text": "of database architecture how things were",
    "start": "130140",
    "end": "132720"
  },
  {
    "text": "deployed how databases are currently",
    "start": "132720",
    "end": "135720"
  },
  {
    "text": "deployed how things are changing how",
    "start": "135720",
    "end": "137580"
  },
  {
    "text": "things might change",
    "start": "137580",
    "end": "139200"
  },
  {
    "text": "remind ourselves what containers are why",
    "start": "139200",
    "end": "142379"
  },
  {
    "text": "they might be useful",
    "start": "142379",
    "end": "144840"
  },
  {
    "text": "where container orchestration comes in",
    "start": "144840",
    "end": "146940"
  },
  {
    "text": "just so that we can then understand",
    "start": "146940",
    "end": "149660"
  },
  {
    "text": "why where and how we might want to",
    "start": "149660",
    "end": "152520"
  },
  {
    "text": "deploy databases in general and postgres",
    "start": "152520",
    "end": "154860"
  },
  {
    "text": "in particular on kubernetes",
    "start": "154860",
    "end": "158040"
  },
  {
    "text": "and then finally the best way to explain",
    "start": "158040",
    "end": "161160"
  },
  {
    "text": "these things is via edema",
    "start": "161160",
    "end": "164840"
  },
  {
    "text": "so I'm not going to go back too far in",
    "start": "167340",
    "end": "169019"
  },
  {
    "text": "the history of databases just about 25",
    "start": "169019",
    "end": "170879"
  },
  {
    "text": "years to the start of my career as a DBA",
    "start": "170879",
    "end": "173340"
  },
  {
    "text": "so I think that qualifies me as a",
    "start": "173340",
    "end": "175080"
  },
  {
    "text": "vintage DBA now",
    "start": "175080",
    "end": "178040"
  },
  {
    "text": "so that time most databases were",
    "start": "179340",
    "end": "182099"
  },
  {
    "text": "deployed on bare metal physical servers",
    "start": "182099",
    "end": "185099"
  },
  {
    "text": "we didn't really call it bare metal it",
    "start": "185099",
    "end": "186780"
  },
  {
    "text": "was just a server",
    "start": "186780",
    "end": "189620"
  },
  {
    "text": "if you wanted to deploy multiple",
    "start": "190920",
    "end": "192480"
  },
  {
    "text": "databases you could do that you could",
    "start": "192480",
    "end": "194280"
  },
  {
    "text": "deploy multiple databases on a server",
    "start": "194280",
    "end": "196140"
  },
  {
    "text": "but you had to accept that they aren't",
    "start": "196140",
    "end": "198900"
  },
  {
    "text": "really isolated and they'll be competing",
    "start": "198900",
    "end": "201060"
  },
  {
    "text": "for resources on your server",
    "start": "201060",
    "end": "204739"
  },
  {
    "text": "if you wanted isolation you deploy each",
    "start": "205200",
    "end": "207599"
  },
  {
    "text": "of your databases to a separate physical",
    "start": "207599",
    "end": "209640"
  },
  {
    "text": "server but obviously that gives you high",
    "start": "209640",
    "end": "212280"
  },
  {
    "text": "overheads you've got many servers to",
    "start": "212280",
    "end": "214860"
  },
  {
    "text": "manage",
    "start": "214860",
    "end": "215840"
  },
  {
    "text": "deploying databases to bare metal is",
    "start": "215840",
    "end": "218340"
  },
  {
    "text": "still a perfectly valid and well-used",
    "start": "218340",
    "end": "220739"
  },
  {
    "text": "architecture for for databases",
    "start": "220739",
    "end": "225440"
  },
  {
    "text": "but then from about the mid 2000s",
    "start": "225720",
    "end": "229620"
  },
  {
    "text": "virtualization in the form of VMS",
    "start": "229620",
    "end": "231599"
  },
  {
    "text": "started to become popular for deploying",
    "start": "231599",
    "end": "233760"
  },
  {
    "text": "databases virtualization have been",
    "start": "233760",
    "end": "236159"
  },
  {
    "text": "around already for at least a couple of",
    "start": "236159",
    "end": "237659"
  },
  {
    "text": "decades by then but it became popular",
    "start": "237659",
    "end": "240000"
  },
  {
    "text": "for deploying databases",
    "start": "240000",
    "end": "243319"
  },
  {
    "text": "um so now we could split up an",
    "start": "243420",
    "end": "245580"
  },
  {
    "text": "individual server or physical machines",
    "start": "245580",
    "end": "247379"
  },
  {
    "text": "to have multiple VMS",
    "start": "247379",
    "end": "250140"
  },
  {
    "text": "um",
    "start": "250140",
    "end": "250739"
  },
  {
    "text": "we've got isolation there but we do have",
    "start": "250739",
    "end": "253920"
  },
  {
    "text": "high overheads we're looking in the",
    "start": "253920",
    "end": "255420"
  },
  {
    "text": "order of gigabytes for each of our VMS",
    "start": "255420",
    "end": "257760"
  },
  {
    "text": "we've got the hypervisor and the guest",
    "start": "257760",
    "end": "259199"
  },
  {
    "text": "OS to consider",
    "start": "259199",
    "end": "261600"
  },
  {
    "text": "it's not ideal",
    "start": "261600",
    "end": "264500"
  },
  {
    "text": "okay so if you want isolation between",
    "start": "269639",
    "end": "272520"
  },
  {
    "text": "your databases you can now just deploy",
    "start": "272520",
    "end": "274440"
  },
  {
    "text": "each one to a separate via",
    "start": "274440",
    "end": "276780"
  },
  {
    "text": "VMS are fairly easy to spin up and down",
    "start": "276780",
    "end": "279000"
  },
  {
    "text": "and that's still a very popular database",
    "start": "279000",
    "end": "281940"
  },
  {
    "text": "architecture whether you're deploying",
    "start": "281940",
    "end": "283440"
  },
  {
    "text": "on-premises or in the cloud",
    "start": "283440",
    "end": "286639"
  },
  {
    "text": "doesn't want to do it",
    "start": "290520",
    "end": "293418"
  },
  {
    "text": "so fast forward to 2023 and now most of",
    "start": "293520",
    "end": "297540"
  },
  {
    "text": "the customers I work with or in fact all",
    "start": "297540",
    "end": "299580"
  },
  {
    "text": "of the customers I work with are running",
    "start": "299580",
    "end": "301520"
  },
  {
    "text": "some or all of their postgres databases",
    "start": "301520",
    "end": "305280"
  },
  {
    "text": "on kubernetes",
    "start": "305280",
    "end": "306960"
  },
  {
    "text": "which as I said would have been",
    "start": "306960",
    "end": "308699"
  },
  {
    "text": "absolutely unheard of even five years",
    "start": "308699",
    "end": "310560"
  },
  {
    "text": "ago",
    "start": "310560",
    "end": "312479"
  },
  {
    "text": "so just a few years ago most people",
    "start": "312479",
    "end": "315419"
  },
  {
    "text": "thought that the idea of running a",
    "start": "315419",
    "end": "316860"
  },
  {
    "text": "production database on kubernetes was",
    "start": "316860",
    "end": "318660"
  },
  {
    "text": "absolutely ridiculous I remember at a",
    "start": "318660",
    "end": "321479"
  },
  {
    "text": "database conference",
    "start": "321479",
    "end": "323460"
  },
  {
    "text": "probably 10 years ago someone did a joke",
    "start": "323460",
    "end": "327720"
  },
  {
    "text": "presentation they ran a database in a",
    "start": "327720",
    "end": "330600"
  },
  {
    "text": "container and everybody thought that was",
    "start": "330600",
    "end": "332100"
  },
  {
    "text": "hilarious the idea that we might do that",
    "start": "332100",
    "end": "336020"
  },
  {
    "text": "so what's changed and why do a lot of",
    "start": "337259",
    "end": "341300"
  },
  {
    "text": "database administrators now think that",
    "start": "341300",
    "end": "344280"
  },
  {
    "text": "running postgres on database running",
    "start": "344280",
    "end": "347039"
  },
  {
    "text": "postgres databases on kubernetes is",
    "start": "347039",
    "end": "349139"
  },
  {
    "text": "actually a sensible architecture",
    "start": "349139",
    "end": "352400"
  },
  {
    "text": "so we'll just take a quick step back and",
    "start": "354360",
    "end": "356520"
  },
  {
    "text": "remind ourselves what containers are and",
    "start": "356520",
    "end": "359160"
  },
  {
    "text": "why they might be useful",
    "start": "359160",
    "end": "362639"
  },
  {
    "text": "so as we know a container is a",
    "start": "362639",
    "end": "364560"
  },
  {
    "text": "lightweight self-contained executable",
    "start": "364560",
    "end": "366479"
  },
  {
    "text": "software package that we can deploy",
    "start": "366479",
    "end": "367979"
  },
  {
    "text": "pretty much anywhere",
    "start": "367979",
    "end": "369900"
  },
  {
    "text": "we're using features like namespaces and",
    "start": "369900",
    "end": "373080"
  },
  {
    "text": "c groups so that we can share the host",
    "start": "373080",
    "end": "375539"
  },
  {
    "text": "OS",
    "start": "375539",
    "end": "377520"
  },
  {
    "text": "but we've got isolation between those",
    "start": "377520",
    "end": "379560"
  },
  {
    "text": "containers",
    "start": "379560",
    "end": "381240"
  },
  {
    "text": "containers are stateless",
    "start": "381240",
    "end": "383039"
  },
  {
    "text": "so we lose any changes made to our",
    "start": "383039",
    "end": "385860"
  },
  {
    "text": "container when we stop it and they're",
    "start": "385860",
    "end": "388259"
  },
  {
    "text": "ephemeral so the data only lasts as long",
    "start": "388259",
    "end": "391680"
  },
  {
    "text": "as the container now as you can imagine",
    "start": "391680",
    "end": "393360"
  },
  {
    "text": "those last two words stateless and",
    "start": "393360",
    "end": "395220"
  },
  {
    "text": "ephemeral strike fear into the heart of",
    "start": "395220",
    "end": "397259"
  },
  {
    "text": "any database administrator",
    "start": "397259",
    "end": "400460"
  },
  {
    "text": "well I'm going to get crossed with this",
    "start": "404699",
    "end": "407520"
  },
  {
    "text": "so why of DBA started to look past these",
    "start": "407520",
    "end": "410580"
  },
  {
    "text": "slight inconveniences and consider",
    "start": "410580",
    "end": "412860"
  },
  {
    "text": "containers containerized environments",
    "start": "412860",
    "end": "415620"
  },
  {
    "text": "for their databases well obviously",
    "start": "415620",
    "end": "418100"
  },
  {
    "text": "containers have advantages as we all",
    "start": "418100",
    "end": "420240"
  },
  {
    "text": "know they're lightweight we're looking",
    "start": "420240",
    "end": "421560"
  },
  {
    "text": "at megabytes usually instead of",
    "start": "421560",
    "end": "423419"
  },
  {
    "text": "gigabytes as compared to a VM",
    "start": "423419",
    "end": "426600"
  },
  {
    "text": "they're scalable we can just spin up and",
    "start": "426600",
    "end": "429680"
  },
  {
    "text": "stop containers as we need to we can",
    "start": "429680",
    "end": "432919"
  },
  {
    "text": "cluster nodes together we can cluster",
    "start": "432919",
    "end": "435360"
  },
  {
    "text": "service together to get more capacity",
    "start": "435360",
    "end": "438199"
  },
  {
    "text": "they're portable we can move things",
    "start": "438199",
    "end": "440460"
  },
  {
    "text": "around and we've got that isolation that",
    "start": "440460",
    "end": "442979"
  },
  {
    "text": "we spoke about",
    "start": "442979",
    "end": "445460"
  },
  {
    "text": "of course once you start managing more",
    "start": "448139",
    "end": "450419"
  },
  {
    "text": "than just a few development databases",
    "start": "450419",
    "end": "453539"
  },
  {
    "text": "and containers it's going to start to",
    "start": "453539",
    "end": "454979"
  },
  {
    "text": "feel a little bit like herding cats",
    "start": "454979",
    "end": "457620"
  },
  {
    "text": "so you're going to want some kind of",
    "start": "457620",
    "end": "459360"
  },
  {
    "text": "container orchestration",
    "start": "459360",
    "end": "462319"
  },
  {
    "text": "other container orchestration tools are",
    "start": "464940",
    "end": "466919"
  },
  {
    "text": "available but given the name of this",
    "start": "466919",
    "end": "469199"
  },
  {
    "text": "conference and given the name of this",
    "start": "469199",
    "end": "470940"
  },
  {
    "text": "talk obviously I'm going to talk about",
    "start": "470940",
    "end": "472620"
  },
  {
    "text": "kubernetes",
    "start": "472620",
    "end": "475220"
  },
  {
    "text": "doesn't want to play the game today",
    "start": "480900",
    "end": "484199"
  },
  {
    "text": "so this is a list of some of the",
    "start": "484199",
    "end": "486300"
  },
  {
    "text": "container life cycle management tasks",
    "start": "486300",
    "end": "488400"
  },
  {
    "text": "that a container orchestration tools",
    "start": "488400",
    "end": "490919"
  },
  {
    "text": "such as kubernetes can do for us",
    "start": "490919",
    "end": "493500"
  },
  {
    "text": "so it's looking after provisioning",
    "start": "493500",
    "end": "495120"
  },
  {
    "text": "deployment configuring our containers",
    "start": "495120",
    "end": "497099"
  },
  {
    "text": "allocating resources making sure things",
    "start": "497099",
    "end": "499500"
  },
  {
    "text": "are available monitoring and alerting",
    "start": "499500",
    "end": "501800"
  },
  {
    "text": "networking security it's doing a whole",
    "start": "501800",
    "end": "505379"
  },
  {
    "text": "list of things for us and as luck would",
    "start": "505379",
    "end": "507419"
  },
  {
    "text": "have it that's actually a very similar",
    "start": "507419",
    "end": "509160"
  },
  {
    "text": "list to the things that a DBA might want",
    "start": "509160",
    "end": "512219"
  },
  {
    "text": "to look after when looking after a",
    "start": "512219",
    "end": "514560"
  },
  {
    "text": "production database cluster",
    "start": "514560",
    "end": "518300"
  },
  {
    "text": "so to make use of this new architecture",
    "start": "524279",
    "end": "526740"
  },
  {
    "text": "obviously the Vintage DBA had to learn",
    "start": "526740",
    "end": "528660"
  },
  {
    "text": "some new terminology so I had to learn",
    "start": "528660",
    "end": "531240"
  },
  {
    "text": "how to deploy to kubernetes clusters",
    "start": "531240",
    "end": "534000"
  },
  {
    "text": "rather than to physical servers or VMS",
    "start": "534000",
    "end": "537980"
  },
  {
    "text": "had to learn about pods containing one",
    "start": "538140",
    "end": "540420"
  },
  {
    "text": "or more containers had to learn about",
    "start": "540420",
    "end": "542040"
  },
  {
    "text": "deployments with one or more replicas or",
    "start": "542040",
    "end": "545940"
  },
  {
    "text": "copies of a pod and learned that those",
    "start": "545940",
    "end": "549420"
  },
  {
    "text": "were interchangeable",
    "start": "549420",
    "end": "551580"
  },
  {
    "text": "and that just like magic if a pod's",
    "start": "551580",
    "end": "553920"
  },
  {
    "text": "destroyed then another one will pop up",
    "start": "553920",
    "end": "555480"
  },
  {
    "text": "to take its place",
    "start": "555480",
    "end": "558260"
  },
  {
    "text": "but what about the elephant in the room",
    "start": "564060",
    "end": "566100"
  },
  {
    "text": "so to speak and I'm assuming everybody",
    "start": "566100",
    "end": "567779"
  },
  {
    "text": "knows postgres and knows that that is uh",
    "start": "567779",
    "end": "570300"
  },
  {
    "text": "slonic the the postgres logo",
    "start": "570300",
    "end": "573899"
  },
  {
    "text": "so we're talking about running postgres",
    "start": "573899",
    "end": "575339"
  },
  {
    "text": "databases on kubernetes obviously the",
    "start": "575339",
    "end": "578040"
  },
  {
    "text": "most important thing about a database is",
    "start": "578040",
    "end": "579899"
  },
  {
    "text": "the data in it",
    "start": "579899",
    "end": "582000"
  },
  {
    "text": "but I thought that containers were",
    "start": "582000",
    "end": "584160"
  },
  {
    "text": "ephemeral and stateless so we don't have",
    "start": "584160",
    "end": "586860"
  },
  {
    "text": "persistent data",
    "start": "586860",
    "end": "589500"
  },
  {
    "text": "but you know it's it's all well and good",
    "start": "589500",
    "end": "591540"
  },
  {
    "text": "if um if pod's going to be spun up again",
    "start": "591540",
    "end": "594839"
  },
  {
    "text": "if it disappears but that's no good to",
    "start": "594839",
    "end": "596700"
  },
  {
    "text": "me if I um if I lose my data",
    "start": "596700",
    "end": "599580"
  },
  {
    "text": "which is one of the main reasons that",
    "start": "599580",
    "end": "601500"
  },
  {
    "text": "for many years containers weren't seen",
    "start": "601500",
    "end": "603240"
  },
  {
    "text": "as a viable option for running databases",
    "start": "603240",
    "end": "607220"
  },
  {
    "text": "well to the dba's huge relief kubernetes",
    "start": "610800",
    "end": "613200"
  },
  {
    "text": "already thought of that",
    "start": "613200",
    "end": "615240"
  },
  {
    "text": "so we've got persistent volumes",
    "start": "615240",
    "end": "616800"
  },
  {
    "text": "obviously that allow the DBA to attach",
    "start": "616800",
    "end": "618779"
  },
  {
    "text": "storage to a container that's going to",
    "start": "618779",
    "end": "620760"
  },
  {
    "text": "remain available after the container no",
    "start": "620760",
    "end": "623880"
  },
  {
    "text": "longer exists",
    "start": "623880",
    "end": "626600"
  },
  {
    "text": "and not all databases are created equal",
    "start": "627480",
    "end": "629820"
  },
  {
    "text": "what about standby or replica databases",
    "start": "629820",
    "end": "632279"
  },
  {
    "text": "in a production environment we're very",
    "start": "632279",
    "end": "634019"
  },
  {
    "text": "unlikely to want just a single",
    "start": "634019",
    "end": "636000"
  },
  {
    "text": "Standalone database we're going to have",
    "start": "636000",
    "end": "638100"
  },
  {
    "text": "a primary database and one or more",
    "start": "638100",
    "end": "640740"
  },
  {
    "text": "replica or standby databases that we can",
    "start": "640740",
    "end": "643860"
  },
  {
    "text": "use for either High availability or",
    "start": "643860",
    "end": "645779"
  },
  {
    "text": "potentially rescaling after all",
    "start": "645779",
    "end": "647720"
  },
  {
    "text": "scalability is one of the use cases that",
    "start": "647720",
    "end": "650100"
  },
  {
    "text": "we said of containers",
    "start": "650100",
    "end": "653300"
  },
  {
    "text": "puts in a deployment are interchangeable",
    "start": "653600",
    "end": "656160"
  },
  {
    "text": "but our databases aren't interchangeable",
    "start": "656160",
    "end": "658800"
  },
  {
    "text": "we need kubernetes to understand that",
    "start": "658800",
    "end": "661620"
  },
  {
    "text": "the primary and standby databases aren't",
    "start": "661620",
    "end": "663480"
  },
  {
    "text": "the same",
    "start": "663480",
    "end": "665899"
  },
  {
    "text": "well the DBA was obviously relieved to",
    "start": "667440",
    "end": "670440"
  },
  {
    "text": "find out that kubernetes thought of that",
    "start": "670440",
    "end": "672240"
  },
  {
    "text": "as well",
    "start": "672240",
    "end": "673740"
  },
  {
    "text": "and that stateful sets can be used for",
    "start": "673740",
    "end": "677279"
  },
  {
    "text": "this type of situation",
    "start": "677279",
    "end": "680339"
  },
  {
    "text": "uh so even though the pods that did you",
    "start": "680339",
    "end": "683339"
  },
  {
    "text": "find um on an identical spec they've got",
    "start": "683339",
    "end": "686519"
  },
  {
    "text": "their own identifiers so that",
    "start": "686519",
    "end": "689600"
  },
  {
    "text": "we keep the existing volume even if we",
    "start": "689600",
    "end": "692700"
  },
  {
    "text": "lose the putt so that's quite a relief",
    "start": "692700",
    "end": "695640"
  },
  {
    "text": "to the DBA I'm going to read this bit",
    "start": "695640",
    "end": "698100"
  },
  {
    "text": "because I forget so amongst other things",
    "start": "698100",
    "end": "699540"
  },
  {
    "text": "the kubernetes documentation tells us",
    "start": "699540",
    "end": "701399"
  },
  {
    "text": "that stateful sets are valuable for",
    "start": "701399",
    "end": "703260"
  },
  {
    "text": "applications that need staple persistent",
    "start": "703260",
    "end": "705720"
  },
  {
    "text": "storage ordered graceful deployment and",
    "start": "705720",
    "end": "708360"
  },
  {
    "text": "scaling and ordered automated rolling",
    "start": "708360",
    "end": "711240"
  },
  {
    "text": "updates which sounds very much like what",
    "start": "711240",
    "end": "713339"
  },
  {
    "text": "we want from a high availability",
    "start": "713339",
    "end": "714600"
  },
  {
    "text": "database cluster",
    "start": "714600",
    "end": "717740"
  },
  {
    "text": "sidecars those helper containers that",
    "start": "718519",
    "end": "720899"
  },
  {
    "text": "are tightly coupled with the main",
    "start": "720899",
    "end": "722279"
  },
  {
    "text": "container in a pod turn out to be really",
    "start": "722279",
    "end": "724079"
  },
  {
    "text": "helpful for database Administration as",
    "start": "724079",
    "end": "725880"
  },
  {
    "text": "well in addition to our main database",
    "start": "725880",
    "end": "728100"
  },
  {
    "text": "container we can also have containers",
    "start": "728100",
    "end": "730860"
  },
  {
    "text": "for things like metrics exporting and",
    "start": "730860",
    "end": "733500"
  },
  {
    "text": "for database backups",
    "start": "733500",
    "end": "737779"
  },
  {
    "text": "so why might you want to deploy postgres",
    "start": "740339",
    "end": "742620"
  },
  {
    "text": "on day on kubernetes we mentioned some",
    "start": "742620",
    "end": "746760"
  },
  {
    "text": "of the advantages of containers in",
    "start": "746760",
    "end": "748560"
  },
  {
    "text": "general",
    "start": "748560",
    "end": "750180"
  },
  {
    "text": "um our customers have lots of different",
    "start": "750180",
    "end": "751620"
  },
  {
    "text": "reasons and use cases for running",
    "start": "751620",
    "end": "753180"
  },
  {
    "text": "postgres on kubernetes in no particular",
    "start": "753180",
    "end": "756060"
  },
  {
    "text": "order these are some of them so",
    "start": "756060",
    "end": "758160"
  },
  {
    "text": "multi-tenancy particularly where they've",
    "start": "758160",
    "end": "759839"
  },
  {
    "text": "got a database as a service type",
    "start": "759839",
    "end": "761579"
  },
  {
    "text": "offering",
    "start": "761579",
    "end": "762779"
  },
  {
    "text": "where they have microservices often",
    "start": "762779",
    "end": "765839"
  },
  {
    "text": "because they're already using kubernetes",
    "start": "765839",
    "end": "768000"
  },
  {
    "text": "in their application stack because they",
    "start": "768000",
    "end": "769740"
  },
  {
    "text": "know kubernetes",
    "start": "769740",
    "end": "771920"
  },
  {
    "text": "and because they want to automate things",
    "start": "771920",
    "end": "774660"
  },
  {
    "text": "and enable them to deploy at scale one",
    "start": "774660",
    "end": "777660"
  },
  {
    "text": "of the anti-use cases that I haven't",
    "start": "777660",
    "end": "779459"
  },
  {
    "text": "mentioned is",
    "start": "779459",
    "end": "781320"
  },
  {
    "text": "um",
    "start": "781320",
    "end": "782420"
  },
  {
    "text": "where you just want to use kubernetes",
    "start": "782420",
    "end": "786620"
  },
  {
    "text": "and we do see a lot of our customers",
    "start": "786620",
    "end": "790019"
  },
  {
    "text": "doing just a lift and shift of their",
    "start": "790019",
    "end": "792120"
  },
  {
    "text": "existing multi sometimes multi-tensive",
    "start": "792120",
    "end": "794579"
  },
  {
    "text": "terabyte database into kubernetes",
    "start": "794579",
    "end": "796320"
  },
  {
    "text": "without making any changes that's not",
    "start": "796320",
    "end": "799320"
  },
  {
    "text": "one of the one of the use cases that I",
    "start": "799320",
    "end": "801779"
  },
  {
    "text": "would recommend",
    "start": "801779",
    "end": "804380"
  },
  {
    "text": "I also quite like the answer that Joe",
    "start": "804600",
    "end": "806459"
  },
  {
    "text": "Conway gave in his in a blog that I read",
    "start": "806459",
    "end": "809459"
  },
  {
    "text": "a couple of years ago of his where he",
    "start": "809459",
    "end": "811260"
  },
  {
    "text": "says resistance to Containers is futile",
    "start": "811260",
    "end": "814560"
  },
  {
    "text": "um so I've left the link there in the",
    "start": "814560",
    "end": "816600"
  },
  {
    "text": "slides but I won't go into that",
    "start": "816600",
    "end": "819800"
  },
  {
    "text": "okay so you've looked at why where can",
    "start": "819839",
    "end": "822779"
  },
  {
    "text": "you Deploy postgres on kubernetes well",
    "start": "822779",
    "end": "824700"
  },
  {
    "text": "pretty much anywhere you like and",
    "start": "824700",
    "end": "826139"
  },
  {
    "text": "certainly anywhere that you can deploy",
    "start": "826139",
    "end": "827639"
  },
  {
    "text": "kubernetes so",
    "start": "827639",
    "end": "829800"
  },
  {
    "text": "um on premises in the clouds as a",
    "start": "829800",
    "end": "832500"
  },
  {
    "text": "managed Service as a self-managed",
    "start": "832500",
    "end": "834899"
  },
  {
    "text": "deployment using your choice of",
    "start": "834899",
    "end": "836639"
  },
  {
    "text": "kubernetes distribution and platform",
    "start": "836639",
    "end": "840920"
  },
  {
    "text": "so once you've decided where you're",
    "start": "842399",
    "end": "843839"
  },
  {
    "text": "going to run kubernetes the obvious",
    "start": "843839",
    "end": "845579"
  },
  {
    "text": "question then is how are you going to do",
    "start": "845579",
    "end": "847200"
  },
  {
    "text": "that",
    "start": "847200",
    "end": "848940"
  },
  {
    "text": "to run postgres on kubernetes you need a",
    "start": "848940",
    "end": "851339"
  },
  {
    "text": "lot of knowledge or expert knowledge in",
    "start": "851339",
    "end": "853560"
  },
  {
    "text": "two different domains you need expert",
    "start": "853560",
    "end": "855180"
  },
  {
    "text": "knowledge of postgres and you need",
    "start": "855180",
    "end": "856620"
  },
  {
    "text": "expert knowledge of kubernetes and it's",
    "start": "856620",
    "end": "858420"
  },
  {
    "text": "hard enough finding someone with expert",
    "start": "858420",
    "end": "860220"
  },
  {
    "text": "knowledge in one of those domains let",
    "start": "860220",
    "end": "861839"
  },
  {
    "text": "alone someone that knows both of those",
    "start": "861839",
    "end": "864000"
  },
  {
    "text": "things",
    "start": "864000",
    "end": "866100"
  },
  {
    "text": "since kubernetes doesn't naturally",
    "start": "866100",
    "end": "868519"
  },
  {
    "text": "natively speak postgres we need some way",
    "start": "868519",
    "end": "871440"
  },
  {
    "text": "of interpreting what we want we need to",
    "start": "871440",
    "end": "873839"
  },
  {
    "text": "tell kubernetes how to manage a postgres",
    "start": "873839",
    "end": "876839"
  },
  {
    "text": "database is we need to tell it how to do",
    "start": "876839",
    "end": "878579"
  },
  {
    "text": "things like replication High",
    "start": "878579",
    "end": "880079"
  },
  {
    "text": "availability backup and restore",
    "start": "880079",
    "end": "881760"
  },
  {
    "text": "monitoring",
    "start": "881760",
    "end": "884300"
  },
  {
    "text": "so you could write some logic to some",
    "start": "884300",
    "end": "887699"
  },
  {
    "text": "code to handle all of that yourself",
    "start": "887699",
    "end": "890880"
  },
  {
    "text": "but",
    "start": "890880",
    "end": "892440"
  },
  {
    "text": "to the dba's great relief once again",
    "start": "892440",
    "end": "894540"
  },
  {
    "text": "kubernetes has already thought of that",
    "start": "894540",
    "end": "897300"
  },
  {
    "text": "so we can create an operator to extend",
    "start": "897300",
    "end": "899399"
  },
  {
    "text": "the kubernetes functionality and allow",
    "start": "899399",
    "end": "901920"
  },
  {
    "text": "us to manage our postgres databases",
    "start": "901920",
    "end": "906620"
  },
  {
    "text": "this will mainly use custom resources",
    "start": "907639",
    "end": "910199"
  },
  {
    "text": "and the control Loop to watch the state",
    "start": "910199",
    "end": "912600"
  },
  {
    "text": "of our cluster and make changes as",
    "start": "912600",
    "end": "914760"
  },
  {
    "text": "needed to bring it closer to our desired",
    "start": "914760",
    "end": "916620"
  },
  {
    "text": "state",
    "start": "916620",
    "end": "918800"
  },
  {
    "text": "so as we said a postgres operator",
    "start": "919320",
    "end": "921660"
  },
  {
    "text": "combines that detailed postgres and",
    "start": "921660",
    "end": "924240"
  },
  {
    "text": "kubernetes knowledge into one place",
    "start": "924240",
    "end": "926899"
  },
  {
    "text": "extending the functionality of",
    "start": "926899",
    "end": "928800"
  },
  {
    "text": "kubernetes so that it speaks postgres",
    "start": "928800",
    "end": "932100"
  },
  {
    "text": "and it automates the management of your",
    "start": "932100",
    "end": "934760"
  },
  {
    "text": "cluster life cycles so some of the",
    "start": "934760",
    "end": "936959"
  },
  {
    "text": "things that you'll want it to do are",
    "start": "936959",
    "end": "939480"
  },
  {
    "text": "here so we refer to it often as",
    "start": "939480",
    "end": "942120"
  },
  {
    "text": "knowledge in code or a virtual DBA so",
    "start": "942120",
    "end": "944519"
  },
  {
    "text": "it's doing things like creating managing",
    "start": "944519",
    "end": "946860"
  },
  {
    "text": "and dropping databases taking care of",
    "start": "946860",
    "end": "949620"
  },
  {
    "text": "your database storage performing",
    "start": "949620",
    "end": "951300"
  },
  {
    "text": "database backups and restores",
    "start": "951300",
    "end": "954240"
  },
  {
    "text": "implementing database High availability",
    "start": "954240",
    "end": "956160"
  },
  {
    "text": "failovers if there's a problem with your",
    "start": "956160",
    "end": "958199"
  },
  {
    "text": "primary database monitoring the cluster",
    "start": "958199",
    "end": "960839"
  },
  {
    "text": "and alerting if something goes wrong and",
    "start": "960839",
    "end": "963300"
  },
  {
    "text": "automating database upgrades",
    "start": "963300",
    "end": "966920"
  },
  {
    "text": "the easiest way as I said to explain a",
    "start": "968760",
    "end": "971339"
  },
  {
    "text": "lot of these Concepts is with a",
    "start": "971339",
    "end": "973500"
  },
  {
    "text": "demonstration so I'm going to",
    "start": "973500",
    "end": "975120"
  },
  {
    "text": "demonstrate deploying postgres on",
    "start": "975120",
    "end": "977519"
  },
  {
    "text": "kubernetes using one of the available",
    "start": "977519",
    "end": "979920"
  },
  {
    "text": "operators there was a talk this morning",
    "start": "979920",
    "end": "982560"
  },
  {
    "text": "um about the database operator landscape",
    "start": "982560",
    "end": "986040"
  },
  {
    "text": "there are multiple operators both for",
    "start": "986040",
    "end": "988740"
  },
  {
    "text": "postgres and for other databases and I",
    "start": "988740",
    "end": "992760"
  },
  {
    "text": "know that the data on kubernetes group",
    "start": "992760",
    "end": "995279"
  },
  {
    "text": "is working to put together a matrix of",
    "start": "995279",
    "end": "998339"
  },
  {
    "text": "the features of those to make life",
    "start": "998339",
    "end": "999779"
  },
  {
    "text": "easier for people when they're looking",
    "start": "999779",
    "end": "1001279"
  },
  {
    "text": "at those and choosing which one to use",
    "start": "1001279",
    "end": "1003139"
  },
  {
    "text": "I'm going to demonstrate the one that I",
    "start": "1003139",
    "end": "1005360"
  },
  {
    "text": "know because it's the one that my",
    "start": "1005360",
    "end": "1007579"
  },
  {
    "text": "company develops and uses but",
    "start": "1007579",
    "end": "1010940"
  },
  {
    "text": "um",
    "start": "1010940",
    "end": "1012019"
  },
  {
    "text": "the basic concepts are the same the",
    "start": "1012019",
    "end": "1014300"
  },
  {
    "text": "different operators will Implement",
    "start": "1014300",
    "end": "1015860"
  },
  {
    "text": "things in a different way they will have",
    "start": "1015860",
    "end": "1017660"
  },
  {
    "text": "slightly different functionality but the",
    "start": "1017660",
    "end": "1019339"
  },
  {
    "text": "idea is that it's managing your database",
    "start": "1019339",
    "end": "1021199"
  },
  {
    "text": "lifecycle for you",
    "start": "1021199",
    "end": "1024278"
  },
  {
    "text": "so we'll deploy the postgres operator",
    "start": "1025400",
    "end": "1028100"
  },
  {
    "text": "deploy a high availability postgres",
    "start": "1028100",
    "end": "1029900"
  },
  {
    "text": "cluster scale up and down perform a",
    "start": "1029900",
    "end": "1033140"
  },
  {
    "text": "minor postgres upgrade and deploy the",
    "start": "1033140",
    "end": "1036020"
  },
  {
    "text": "monitoring stack so I'm not brave enough",
    "start": "1036020",
    "end": "1038418"
  },
  {
    "text": "to do a fully live demo I've attempted",
    "start": "1038419",
    "end": "1041480"
  },
  {
    "text": "to record the demo in advance and I will",
    "start": "1041480",
    "end": "1044418"
  },
  {
    "text": "just",
    "start": "1044419",
    "end": "1045558"
  },
  {
    "text": "explain what's going on now let me",
    "start": "1045559",
    "end": "1049640"
  },
  {
    "text": "see how this is going",
    "start": "1049640",
    "end": "1052580"
  },
  {
    "text": "so",
    "start": "1052580",
    "end": "1054140"
  },
  {
    "text": "is that",
    "start": "1054140",
    "end": "1056539"
  },
  {
    "text": "visible",
    "start": "1056539",
    "end": "1058940"
  },
  {
    "text": "I'm hoping okay it's very small I'm",
    "start": "1058940",
    "end": "1062000"
  },
  {
    "text": "afraid but I'll just",
    "start": "1062000",
    "end": "1063620"
  },
  {
    "text": "um explain what's happening so I've got",
    "start": "1063620",
    "end": "1065840"
  },
  {
    "text": "a three node kubernetes cluster that I'm",
    "start": "1065840",
    "end": "1068179"
  },
  {
    "text": "deploying to",
    "start": "1068179",
    "end": "1070240"
  },
  {
    "text": "the operator is cloud agnostic it really",
    "start": "1070240",
    "end": "1073100"
  },
  {
    "text": "sorry",
    "start": "1073100",
    "end": "1073800"
  },
  {
    "text": "[Music]",
    "start": "1073800",
    "end": "1074179"
  },
  {
    "text": "um",
    "start": "1074179",
    "end": "1076179"
  },
  {
    "text": "um",
    "start": "1076460",
    "end": "1078520"
  },
  {
    "text": "kubernetes platform agnostic it really",
    "start": "1078860",
    "end": "1081919"
  },
  {
    "text": "doesn't matter where you're deploying or",
    "start": "1081919",
    "end": "1083480"
  },
  {
    "text": "what you're deploying to I've just got a",
    "start": "1083480",
    "end": "1085340"
  },
  {
    "text": "three node gke cluster there so I'm just",
    "start": "1085340",
    "end": "1089240"
  },
  {
    "text": "uh I forked the postgres operator",
    "start": "1089240",
    "end": "1092720"
  },
  {
    "text": "examples repository and I have just",
    "start": "1092720",
    "end": "1096320"
  },
  {
    "text": "cloned that",
    "start": "1096320",
    "end": "1098980"
  },
  {
    "text": "oh I apologize it's gone back to the the",
    "start": "1100580",
    "end": "1102679"
  },
  {
    "text": "beginning okay so I've cloned my",
    "start": "1102679",
    "end": "1104539"
  },
  {
    "text": "Repository",
    "start": "1104539",
    "end": "1107539"
  },
  {
    "text": "you'll see how bad I am at typing and",
    "start": "1111020",
    "end": "1114020"
  },
  {
    "text": "that kind of thing Okay so we've got",
    "start": "1114020",
    "end": "1116480"
  },
  {
    "text": "some examples script in there we've got",
    "start": "1116480",
    "end": "1118160"
  },
  {
    "text": "Helm charts and we've got",
    "start": "1118160",
    "end": "1120679"
  },
  {
    "text": "um customized manifests because I know",
    "start": "1120679",
    "end": "1123380"
  },
  {
    "text": "customize and it's there in Cube cuddle",
    "start": "1123380",
    "end": "1126559"
  },
  {
    "text": "I'm just using that first of all I'm",
    "start": "1126559",
    "end": "1128960"
  },
  {
    "text": "just going to create myself a namespace",
    "start": "1128960",
    "end": "1131299"
  },
  {
    "text": "that I'm going to do my deployment in so",
    "start": "1131299",
    "end": "1133220"
  },
  {
    "text": "I've created myself a postgres operator",
    "start": "1133220",
    "end": "1135580"
  },
  {
    "text": "namespace set it as my default because",
    "start": "1135580",
    "end": "1138080"
  },
  {
    "text": "I'm lazy and I don't want to have to",
    "start": "1138080",
    "end": "1139400"
  },
  {
    "text": "keep typing that",
    "start": "1139400",
    "end": "1142059"
  },
  {
    "text": "and then I'm",
    "start": "1142340",
    "end": "1144620"
  },
  {
    "text": "doing a server-side apply so that's now",
    "start": "1144620",
    "end": "1148660"
  },
  {
    "text": "installed the postgres operator it's",
    "start": "1148660",
    "end": "1150980"
  },
  {
    "text": "created my custom resource sorry I'll",
    "start": "1150980",
    "end": "1153620"
  },
  {
    "text": "pause briefly whilst that we're trying",
    "start": "1153620",
    "end": "1156380"
  },
  {
    "text": "to explain uh it's created my me my",
    "start": "1156380",
    "end": "1158539"
  },
  {
    "text": "customer resource and the the various",
    "start": "1158539",
    "end": "1160280"
  },
  {
    "text": "different things that I need to run my",
    "start": "1160280",
    "end": "1162980"
  },
  {
    "text": "operator I've got my operator pod there",
    "start": "1162980",
    "end": "1165919"
  },
  {
    "text": "and I've also got an upgrade pod for",
    "start": "1165919",
    "end": "1168080"
  },
  {
    "text": "when I want to perform upgrades later",
    "start": "1168080",
    "end": "1171860"
  },
  {
    "text": "I'm just going to leave that get pods",
    "start": "1171860",
    "end": "1174799"
  },
  {
    "text": "running on the left there",
    "start": "1174799",
    "end": "1176660"
  },
  {
    "text": "so this is my manifest where I'm going",
    "start": "1176660",
    "end": "1178880"
  },
  {
    "text": "to create my postgres cluster custom",
    "start": "1178880",
    "end": "1181280"
  },
  {
    "text": "resource I'm calling my cluster kubecon",
    "start": "1181280",
    "end": "1183980"
  },
  {
    "text": "I'm just setting that to postgres 15.1",
    "start": "1183980",
    "end": "1188059"
  },
  {
    "text": "just so that I can",
    "start": "1188059",
    "end": "1191000"
  },
  {
    "text": "just so that I can demonstrate a minor",
    "start": "1191000",
    "end": "1193400"
  },
  {
    "text": "postgres upgrade later",
    "start": "1193400",
    "end": "1196480"
  },
  {
    "text": "and I'm setting replicas to two so that",
    "start": "1196880",
    "end": "1199039"
  },
  {
    "text": "I've got a primary database and a",
    "start": "1199039",
    "end": "1200720"
  },
  {
    "text": "standby",
    "start": "1200720",
    "end": "1202460"
  },
  {
    "text": "okay so now if I apply that",
    "start": "1202460",
    "end": "1206240"
  },
  {
    "text": "I should on the left hopefully see my",
    "start": "1206240",
    "end": "1208460"
  },
  {
    "text": "cluster deploy I say hopefully obviously",
    "start": "1208460",
    "end": "1210380"
  },
  {
    "text": "I I do know because I did it yesterday",
    "start": "1210380",
    "end": "1214340"
  },
  {
    "text": "okay so I've got my repo host that's my",
    "start": "1214340",
    "end": "1218000"
  },
  {
    "text": "backup repository you might have noticed",
    "start": "1218000",
    "end": "1219799"
  },
  {
    "text": "in my manifest I had a PG backrest",
    "start": "1219799",
    "end": "1222080"
  },
  {
    "text": "section so that's the backup tool that",
    "start": "1222080",
    "end": "1224120"
  },
  {
    "text": "we use and I've got two instance pods",
    "start": "1224120",
    "end": "1227419"
  },
  {
    "text": "there the first one is already up and",
    "start": "1227419",
    "end": "1229820"
  },
  {
    "text": "running and now it's initializing my",
    "start": "1229820",
    "end": "1231860"
  },
  {
    "text": "second one which will contain my replica",
    "start": "1231860",
    "end": "1234020"
  },
  {
    "text": "database",
    "start": "1234020",
    "end": "1235820"
  },
  {
    "text": "and it will start me an initial backup",
    "start": "1235820",
    "end": "1238760"
  },
  {
    "text": "as well",
    "start": "1238760",
    "end": "1241240"
  },
  {
    "text": "no",
    "start": "1245000",
    "end": "1246440"
  },
  {
    "text": "um let me pause if I can now that's not",
    "start": "1246440",
    "end": "1249500"
  },
  {
    "text": "going to work so the operator itself is",
    "start": "1249500",
    "end": "1251419"
  },
  {
    "text": "a deployment",
    "start": "1251419",
    "end": "1253220"
  },
  {
    "text": "and the postgres cluster uses a stateful",
    "start": "1253220",
    "end": "1256400"
  },
  {
    "text": "set",
    "start": "1256400",
    "end": "1258640"
  },
  {
    "text": "um right",
    "start": "1262400",
    "end": "1263900"
  },
  {
    "text": "I'll leave that running",
    "start": "1263900",
    "end": "1266860"
  },
  {
    "text": "okay so where are we up to",
    "start": "1271220",
    "end": "1275080"
  },
  {
    "text": "okay so that's me",
    "start": "1277700",
    "end": "1280039"
  },
  {
    "text": "um deleting my primary database pod you",
    "start": "1280039",
    "end": "1282620"
  },
  {
    "text": "can see oh and I apologize for the",
    "start": "1282620",
    "end": "1284000"
  },
  {
    "text": "terminology here the um",
    "start": "1284000",
    "end": "1286220"
  },
  {
    "text": "the uh the master and replica comes",
    "start": "1286220",
    "end": "1289039"
  },
  {
    "text": "directly from petroni they've updated",
    "start": "1289039",
    "end": "1290840"
  },
  {
    "text": "the documentation but not yet the code",
    "start": "1290840",
    "end": "1292820"
  },
  {
    "text": "itself so you can see that straight away",
    "start": "1292820",
    "end": "1295039"
  },
  {
    "text": "did a failover",
    "start": "1295039",
    "end": "1296539"
  },
  {
    "text": "um so that I had a new primary database",
    "start": "1296539",
    "end": "1298220"
  },
  {
    "text": "come up",
    "start": "1298220",
    "end": "1300020"
  },
  {
    "text": "um and then it rebuilt the replica based",
    "start": "1300020",
    "end": "1302720"
  },
  {
    "text": "on that new primary",
    "start": "1302720",
    "end": "1304580"
  },
  {
    "text": "so I can scale up if I want to add more",
    "start": "1304580",
    "end": "1307039"
  },
  {
    "text": "replica databases I've just changed",
    "start": "1307039",
    "end": "1308960"
  },
  {
    "text": "replicas to four now",
    "start": "1308960",
    "end": "1310700"
  },
  {
    "text": "so if I apply that it will create me two",
    "start": "1310700",
    "end": "1312799"
  },
  {
    "text": "new replica databases",
    "start": "1312799",
    "end": "1316120"
  },
  {
    "text": "obviously this is all fairly",
    "start": "1316400",
    "end": "1318700"
  },
  {
    "text": "instantaneous because I haven't actually",
    "start": "1318700",
    "end": "1320659"
  },
  {
    "text": "put anything into my database I'm not",
    "start": "1320659",
    "end": "1322340"
  },
  {
    "text": "trying to hide anything from you",
    "start": "1322340",
    "end": "1324039"
  },
  {
    "text": "recreating a replica database will take",
    "start": "1324039",
    "end": "1328220"
  },
  {
    "text": "longer than that if you've actually got",
    "start": "1328220",
    "end": "1330380"
  },
  {
    "text": "a reasonable amount of data in there",
    "start": "1330380",
    "end": "1333740"
  },
  {
    "text": "so it's initializing those and bringing",
    "start": "1333740",
    "end": "1335480"
  },
  {
    "text": "them into our cluster as new replica",
    "start": "1335480",
    "end": "1337159"
  },
  {
    "text": "databases so I'm just going to scale",
    "start": "1337159",
    "end": "1338659"
  },
  {
    "text": "that back down to",
    "start": "1338659",
    "end": "1340340"
  },
  {
    "text": "two again so that I don't have to wait",
    "start": "1340340",
    "end": "1342140"
  },
  {
    "text": "as long for the the next bits of the",
    "start": "1342140",
    "end": "1344059"
  },
  {
    "text": "demo to happen",
    "start": "1344059",
    "end": "1346539"
  },
  {
    "text": "okay so here I'm just um executing into",
    "start": "1360260",
    "end": "1363080"
  },
  {
    "text": "my primary database pod and selecting",
    "start": "1363080",
    "end": "1366260"
  },
  {
    "text": "the postgres version so you can see",
    "start": "1366260",
    "end": "1367940"
  },
  {
    "text": "we're currently on 15.1",
    "start": "1367940",
    "end": "1370280"
  },
  {
    "text": "I'm going to change the image so that it",
    "start": "1370280",
    "end": "1372440"
  },
  {
    "text": "uses the 15.2 image",
    "start": "1372440",
    "end": "1377139"
  },
  {
    "text": "I get the associated PG backrest image",
    "start": "1377419",
    "end": "1379760"
  },
  {
    "text": "there",
    "start": "1379760",
    "end": "1382000"
  },
  {
    "text": "so if I apply that it's going to do a",
    "start": "1382280",
    "end": "1384679"
  },
  {
    "text": "rolling upgrade of postgres so it'll",
    "start": "1384679",
    "end": "1386360"
  },
  {
    "text": "upgrade my replica database First Once",
    "start": "1386360",
    "end": "1388340"
  },
  {
    "text": "that's been up upgraded it will do a",
    "start": "1388340",
    "end": "1391220"
  },
  {
    "text": "switch over and then it will do the",
    "start": "1391220",
    "end": "1393679"
  },
  {
    "text": "other one",
    "start": "1393679",
    "end": "1394760"
  },
  {
    "text": "so there I can see it's taken my replica",
    "start": "1394760",
    "end": "1398480"
  },
  {
    "text": "database down so it's upgrading that",
    "start": "1398480",
    "end": "1402640"
  },
  {
    "text": "okay so that's back up and running and",
    "start": "1406340",
    "end": "1408380"
  },
  {
    "text": "now it's already failed over switched",
    "start": "1408380",
    "end": "1410299"
  },
  {
    "text": "over to that one and I can see that",
    "start": "1410299",
    "end": "1411919"
  },
  {
    "text": "we're on the version 15.2 of postgres",
    "start": "1411919",
    "end": "1417100"
  },
  {
    "text": "and then it will do the same on the",
    "start": "1417380",
    "end": "1418940"
  },
  {
    "text": "replica and bring that back in",
    "start": "1418940",
    "end": "1422320"
  },
  {
    "text": "which I remember what I did next",
    "start": "1426320",
    "end": "1429020"
  },
  {
    "text": "okay so in the backup section we can set",
    "start": "1429020",
    "end": "1433400"
  },
  {
    "text": "any of the or pretty much any of the PG",
    "start": "1433400",
    "end": "1436400"
  },
  {
    "text": "backrest settings that we want I'm just",
    "start": "1436400",
    "end": "1438320"
  },
  {
    "text": "going to hear I'm going to set a um a",
    "start": "1438320",
    "end": "1441080"
  },
  {
    "text": "backup schedule",
    "start": "1441080",
    "end": "1443740"
  },
  {
    "text": "so I set it to do a weekly full backup",
    "start": "1443900",
    "end": "1447020"
  },
  {
    "text": "and daily incrementals",
    "start": "1447020",
    "end": "1449360"
  },
  {
    "text": "and if I apply that I should then see",
    "start": "1449360",
    "end": "1451280"
  },
  {
    "text": "those in",
    "start": "1451280",
    "end": "1452900"
  },
  {
    "text": "Micron tab",
    "start": "1452900",
    "end": "1455860"
  },
  {
    "text": "okay",
    "start": "1456799",
    "end": "1459158"
  },
  {
    "text": "and then the final thing that I wanted",
    "start": "1463100",
    "end": "1464539"
  },
  {
    "text": "to do is show how easy it is to set up a",
    "start": "1464539",
    "end": "1467360"
  },
  {
    "text": "monitoring stack so that there's a",
    "start": "1467360",
    "end": "1469220"
  },
  {
    "text": "Prometheus and",
    "start": "1469220",
    "end": "1471020"
  },
  {
    "text": "grafana monitoring stack there which has",
    "start": "1471020",
    "end": "1474860"
  },
  {
    "text": "um some initial",
    "start": "1474860",
    "end": "1476740"
  },
  {
    "text": "metrics and alerts configured for you",
    "start": "1476740",
    "end": "1479840"
  },
  {
    "text": "you can set your own dashboards and",
    "start": "1479840",
    "end": "1482120"
  },
  {
    "text": "alerts metrics Etc so we can see those",
    "start": "1482120",
    "end": "1485600"
  },
  {
    "text": "now we can see the associated pods",
    "start": "1485600",
    "end": "1488480"
  },
  {
    "text": "what I also need to do is to add the",
    "start": "1488480",
    "end": "1491780"
  },
  {
    "text": "exporter side car into my database pod",
    "start": "1491780",
    "end": "1496159"
  },
  {
    "text": "so I'm just going to add the monitoring",
    "start": "1496159",
    "end": "1497900"
  },
  {
    "text": "section into my manifest",
    "start": "1497900",
    "end": "1501039"
  },
  {
    "text": "and that again will do a rolling upgrade",
    "start": "1501440",
    "end": "1504440"
  },
  {
    "text": "of my sorry a rolling update",
    "start": "1504440",
    "end": "1508480"
  },
  {
    "text": "oh there's one product there with an",
    "start": "1521600",
    "end": "1524840"
  },
  {
    "text": "error I just wanted to show that's just",
    "start": "1524840",
    "end": "1526820"
  },
  {
    "text": "the initial backup that it took",
    "start": "1526820",
    "end": "1528440"
  },
  {
    "text": "sometimes the initial backups still",
    "start": "1528440",
    "end": "1530480"
  },
  {
    "text": "happening whilst other things are coming",
    "start": "1530480",
    "end": "1532400"
  },
  {
    "text": "up if that's the case it will just run",
    "start": "1532400",
    "end": "1534440"
  },
  {
    "text": "another one to make sure that we've got",
    "start": "1534440",
    "end": "1535820"
  },
  {
    "text": "a successful initial backup",
    "start": "1535820",
    "end": "1539320"
  },
  {
    "text": "okay",
    "start": "1540620",
    "end": "1542299"
  },
  {
    "text": "okay uh did I just",
    "start": "1542299",
    "end": "1544640"
  },
  {
    "text": "no we're good",
    "start": "1544640",
    "end": "1547400"
  },
  {
    "text": "so up there I've just patched my grafana",
    "start": "1547400",
    "end": "1550039"
  },
  {
    "text": "service because by default the services",
    "start": "1550039",
    "end": "1551960"
  },
  {
    "text": "are cluster IP I wanted to make it load",
    "start": "1551960",
    "end": "1554299"
  },
  {
    "text": "balancer so that I've got an external IP",
    "start": "1554299",
    "end": "1555980"
  },
  {
    "text": "address and I can connect to grafana",
    "start": "1555980",
    "end": "1558200"
  },
  {
    "text": "just to show you",
    "start": "1558200",
    "end": "1560900"
  },
  {
    "text": "some of those default dashboards",
    "start": "1560900",
    "end": "1566179"
  },
  {
    "text": "and whilst I wait for that I'm just",
    "start": "1566320",
    "end": "1569900"
  },
  {
    "text": "generating some data in my database I'm",
    "start": "1569900",
    "end": "1572179"
  },
  {
    "text": "using PG bench which is a simple client",
    "start": "1572179",
    "end": "1575000"
  },
  {
    "text": "tool that allows us to initialize some",
    "start": "1575000",
    "end": "1576799"
  },
  {
    "text": "tables and then run some activity",
    "start": "1576799",
    "end": "1578360"
  },
  {
    "text": "against them",
    "start": "1578360",
    "end": "1580960"
  },
  {
    "text": "generating some activity otherwise the",
    "start": "1582980",
    "end": "1584900"
  },
  {
    "text": "dashboards aren't very interesting to",
    "start": "1584900",
    "end": "1586340"
  },
  {
    "text": "look at if there's nothing happening",
    "start": "1586340",
    "end": "1589658"
  },
  {
    "text": "oh it's bright",
    "start": "1590779",
    "end": "1593720"
  },
  {
    "text": "okay please ignore my appalling lack of",
    "start": "1593720",
    "end": "1596900"
  },
  {
    "text": "security I'm using the default admin",
    "start": "1596900",
    "end": "1599059"
  },
  {
    "text": "admin username and password I'm not",
    "start": "1599059",
    "end": "1601700"
  },
  {
    "text": "resetting it when it suggests I'm just",
    "start": "1601700",
    "end": "1603500"
  },
  {
    "text": "skipping that bit obviously I wouldn't",
    "start": "1603500",
    "end": "1605480"
  },
  {
    "text": "expect you to do that in production",
    "start": "1605480",
    "end": "1609039"
  },
  {
    "text": "so we've got some dashboards that are",
    "start": "1609620",
    "end": "1611539"
  },
  {
    "text": "already set up obviously you can use",
    "start": "1611539",
    "end": "1613760"
  },
  {
    "text": "um",
    "start": "1613760",
    "end": "1615200"
  },
  {
    "text": "grafana as you please to to create your",
    "start": "1615200",
    "end": "1618980"
  },
  {
    "text": "own dashboards based on any of those",
    "start": "1618980",
    "end": "1620600"
  },
  {
    "text": "metrics that are exposed",
    "start": "1620600",
    "end": "1624278"
  },
  {
    "text": "so because I'm almost out of time I will",
    "start": "1624320",
    "end": "1627620"
  },
  {
    "text": "stop that and then just move on to the",
    "start": "1627620",
    "end": "1631279"
  },
  {
    "text": "conclusion slides so",
    "start": "1631279",
    "end": "1633500"
  },
  {
    "text": "um kubernetes can give you a flexible",
    "start": "1633500",
    "end": "1637039"
  },
  {
    "text": "scalable database architecture",
    "start": "1637039",
    "end": "1640039"
  },
  {
    "text": "I highly recommend that you benefit from",
    "start": "1640039",
    "end": "1642799"
  },
  {
    "text": "the expert knowledge of postgres and",
    "start": "1642799",
    "end": "1644419"
  },
  {
    "text": "kubernetes and use a database operator",
    "start": "1644419",
    "end": "1647600"
  },
  {
    "text": "and the great thing is that your",
    "start": "1647600",
    "end": "1650059"
  },
  {
    "text": "day-to-day DBA tasks can be automated",
    "start": "1650059",
    "end": "1652820"
  },
  {
    "text": "which obviously makes things more",
    "start": "1652820",
    "end": "1656059"
  },
  {
    "text": "reliable but also frees you up to do",
    "start": "1656059",
    "end": "1658340"
  },
  {
    "text": "more interesting tasks",
    "start": "1658340",
    "end": "1662260"
  },
  {
    "text": "keep getting that doesn't want to work",
    "start": "1663320",
    "end": "1667120"
  },
  {
    "text": "so thank you very much",
    "start": "1670159",
    "end": "1671810"
  },
  {
    "text": "[Applause]",
    "start": "1671810",
    "end": "1679400"
  }
]