[
  {
    "text": "okay uh welcome to the last session of the conference",
    "start": "179",
    "end": "6120"
  },
  {
    "text": "um I'm surprised there's this many people in the room room so hope it hopefully I can live up to the expectations",
    "start": "6120",
    "end": "12240"
  },
  {
    "text": "um this presentation is just buzzer real bite uh evpf and Cloud native",
    "start": "12240",
    "end": "17580"
  },
  {
    "text": "um if you don't know me I'm Bill Mulligan I'm a community pollinator at I surveillance I say pollinator because",
    "start": "17580",
    "end": "24439"
  },
  {
    "text": "evpf we like to talk about bees and I help communities grow and flourish especially around ebpf and psyllium",
    "start": "24439",
    "end": "33360"
  },
  {
    "text": "so we thought um so who recognizes like this logo right now like Intel inside",
    "start": "33360",
    "end": "40260"
  },
  {
    "text": "right and when you see this logo you think of like right Intel inside and",
    "start": "40260",
    "end": "46140"
  },
  {
    "text": "this is a great marketing thing but how many people actually understood what the technology meant right so when you're",
    "start": "46140",
    "end": "53940"
  },
  {
    "text": "giving somebody a laptop and you say oh there's Intel inside how many people actually understand that",
    "start": "53940",
    "end": "59039"
  },
  {
    "text": "not that many but because it's a brand and people think that Intel Inside makes",
    "start": "59039",
    "end": "64198"
  },
  {
    "text": "it better people want to buy that right so it's not about the technology but it's about what they think the technology will do for them",
    "start": "64199",
    "end": "71700"
  },
  {
    "text": "and I would actually argue that evpf is quite similar right it's something",
    "start": "71700",
    "end": "78240"
  },
  {
    "text": "you're going to want because of what it enables what it allows you to do what it's giving to your technology but you",
    "start": "78240",
    "end": "85020"
  },
  {
    "text": "don't necessarily have to understand or care about what's underneath the covers this session will give you like a brief",
    "start": "85020",
    "end": "91320"
  },
  {
    "text": "introduction into what ebpf is and some of those advantages it will bring but",
    "start": "91320",
    "end": "96780"
  },
  {
    "text": "you're not going to be have to writing code to take advantage of those benefits right so just like you don't need to",
    "start": "96780",
    "end": "102840"
  },
  {
    "text": "know exactly how the hardware Works to get the benefits of Intel Inside having",
    "start": "102840",
    "end": "107880"
  },
  {
    "text": "evpf inside will allow you to do things like faster networking or low over",
    "start": "107880",
    "end": "113340"
  },
  {
    "text": "observability low overhead observability but you get all those benefits without",
    "start": "113340",
    "end": "118560"
  },
  {
    "text": "having to understand all the technology hopefully after this presentation you'll understand a little bit what's going on",
    "start": "118560",
    "end": "124560"
  },
  {
    "text": "and that's kind of the goal of this so to kind of like set the stage of",
    "start": "124560",
    "end": "130020"
  },
  {
    "text": "where evpf was coming from there's kind of this Paradox between kernel space and",
    "start": "130020",
    "end": "135540"
  },
  {
    "text": "user space so if you're in the Linux kernel you have complete system",
    "start": "135540",
    "end": "140640"
  },
  {
    "text": "awareness because you're basically um have the interface between the software",
    "start": "140640",
    "end": "146340"
  },
  {
    "text": "and the actual Hardware but because of this it kind of like lacks the flexibility right it's a very",
    "start": "146340",
    "end": "152640"
  },
  {
    "text": "important thing the Linux kernel is deployed on billions of devices worldwide it kind of has a like slow",
    "start": "152640",
    "end": "160500"
  },
  {
    "text": "Innovation cycle and it doesn't really have the flexibility of user space right",
    "start": "160500",
    "end": "165900"
  },
  {
    "text": "and in user space it's extremely programmable it's where we do all of our things but it doesn't actually have",
    "start": "165900",
    "end": "172080"
  },
  {
    "text": "access to those kernel structures or resources um and so in user space you have this",
    "start": "172080",
    "end": "179700"
  },
  {
    "text": "flexibility in kernel space you have you know performance and visibility but you",
    "start": "179700",
    "end": "185519"
  },
  {
    "text": "don't really have kind of like both of them anywhere and there was or I guess",
    "start": "185519",
    "end": "190680"
  },
  {
    "text": "there is Kernel modules but they come with their own set of problems where they're difficult to code they have the",
    "start": "190680",
    "end": "198239"
  },
  {
    "text": "potential to crash the kernel and they're not always stable which obviously you don't want if you're running a mission critical system",
    "start": "198239",
    "end": "205920"
  },
  {
    "text": "so how can we kind of overcome this Challenge and get the best out of both can we enable programmability in the",
    "start": "205920",
    "end": "214500"
  },
  {
    "text": "kernel and how will this benefit the cloud native world",
    "start": "214500",
    "end": "219900"
  },
  {
    "text": "and that's where evpf comes along so what is ebpf",
    "start": "219900",
    "end": "225840"
  },
  {
    "text": "ebpf at an extremely high level makes the Linux kernel and actually a lot of",
    "start": "225840",
    "end": "232459"
  },
  {
    "text": "Kernel systems programmable it's beyond just Linux now but it helps provide that",
    "start": "232459",
    "end": "238019"
  },
  {
    "text": "flexibility in the kernel in the kernel and what it does is it makes it",
    "start": "238019",
    "end": "244440"
  },
  {
    "text": "programmable in both the secure and efficient way and I'll dive into kind of like each of these aspects later on but",
    "start": "244440",
    "end": "251040"
  },
  {
    "text": "I think that's like the next thing so one example that uh was kind of popular popularized to explain what evpf",
    "start": "251040",
    "end": "258840"
  },
  {
    "text": "is doing is that uh what the JavaScript",
    "start": "258840",
    "end": "263880"
  },
  {
    "text": "is to the browser ebpf is to Linux kernel right so if you think about before JavaScript came to the internet",
    "start": "263880",
    "end": "270000"
  },
  {
    "text": "you had these static web pages where you're essentially just consuming information off of them but once we had",
    "start": "270000",
    "end": "276000"
  },
  {
    "text": "JavaScript suddenly we had an interactive environment you could have things you that you could click on you",
    "start": "276000",
    "end": "281100"
  },
  {
    "text": "had forms that you could submit right all of a sudden these Pages came to life and you were able to interact with it",
    "start": "281100",
    "end": "287340"
  },
  {
    "text": "and that's exactly what ebpf is doing to the Linux kernel too it's making it interactive it's making programmable so",
    "start": "287340",
    "end": "294060"
  },
  {
    "text": "we can use it in new and interesting ways that we couldn't do before",
    "start": "294060",
    "end": "299419"
  },
  {
    "text": "and so uh this quote from Linus who obviously started Linux is like BPF has",
    "start": "299520",
    "end": "306120"
  },
  {
    "text": "actually been really useful and the real power of it is it allows people to do specialized code that isn't enabled",
    "start": "306120",
    "end": "313020"
  },
  {
    "text": "until it's asked for right it's this programmability aspect and what it allows you to do is to",
    "start": "313020",
    "end": "320220"
  },
  {
    "text": "dynamically outrun time change the kernel Behavior and so this is a nice uh kind of cartoon",
    "start": "320220",
    "end": "328460"
  },
  {
    "text": "of what it's like this Paradox I was talking about before between kernel",
    "start": "328460",
    "end": "333479"
  },
  {
    "text": "space and user space before we had ebpf what it be like so application developer is going along and they want to do have",
    "start": "333479",
    "end": "341340"
  },
  {
    "text": "a new feature to observe their application so they go and talk to their friendly kernel developer and he said",
    "start": "341340",
    "end": "347039"
  },
  {
    "text": "hey I don't want to get involved in Linux kernel mailing lists would you be able to add this feature to the Linux",
    "start": "347039",
    "end": "352800"
  },
  {
    "text": "kernel for me and the developer is like sure it's just going to convince take a year to",
    "start": "352800",
    "end": "358500"
  },
  {
    "text": "convince everybody in the community that it's a good idea and one year later you finally have it merged into the Upstream",
    "start": "358500",
    "end": "364979"
  },
  {
    "text": "kernel and it's like great but then you actually need it to come from the Upstream latest kernel to the one you're",
    "start": "364979",
    "end": "372300"
  },
  {
    "text": "actually running in production which for some people maybe five years later so",
    "start": "372300",
    "end": "377460"
  },
  {
    "text": "you're looking at a six-year development cycle to get your new feature into the kernel and to have it into production",
    "start": "377460",
    "end": "384259"
  },
  {
    "text": "and by that time if you know anything about technology Everything's changed",
    "start": "384259",
    "end": "390300"
  },
  {
    "text": "right and so this isn't a very good way to get new features and functionality that you need into like the Linux kernel",
    "start": "390300",
    "end": "398340"
  },
  {
    "text": "but now with ebpf because we can dynamically add new functionality right at runtime your application developer",
    "start": "398340",
    "end": "404400"
  },
  {
    "text": "can say hey I want this new feature to observe my application and the evpf developer can say hey no",
    "start": "404400",
    "end": "412139"
  },
  {
    "text": "problem like let me just quickly solve this with ebpf and a couple days later",
    "start": "412139",
    "end": "417360"
  },
  {
    "text": "they can add the program into their running kernel system it will anatomically add it and you don't even",
    "start": "417360",
    "end": "424800"
  },
  {
    "text": "have to reboot your machine suddenly you have a completely new functionality added into your system running in",
    "start": "424800",
    "end": "430680"
  },
  {
    "text": "production and you can have it almost immediately and that's really what the",
    "start": "430680",
    "end": "435720"
  },
  {
    "text": "power of evpf is it's shortening this Innovation cycle on the Linux kernel",
    "start": "435720",
    "end": "441060"
  },
  {
    "text": "which is a 30 year old technology and bringing it Forward into the cloud native world into a faster pace of",
    "start": "441060",
    "end": "446759"
  },
  {
    "text": "technological change so evpf programs what they do when we",
    "start": "446759",
    "end": "453900"
  },
  {
    "text": "were saying um that the running so they're running on events so they hook into different",
    "start": "453900",
    "end": "460259"
  },
  {
    "text": "points within the kernel things like K probes or uprobes system calls and when",
    "start": "460259",
    "end": "466620"
  },
  {
    "text": "that is invoked then the evpf program runs so it's watching everything that's",
    "start": "466620",
    "end": "472319"
  },
  {
    "text": "happening and then it's running a specific program based off of those triggers in the kernel and that's kind",
    "start": "472319",
    "end": "477900"
  },
  {
    "text": "of like the whole idea behind ebpf and as Brendan Gregg likes to say this",
    "start": "477900",
    "end": "483660"
  },
  {
    "text": "really gives you superpowers uh to Linux because it allows you to add new",
    "start": "483660",
    "end": "489360"
  },
  {
    "text": "functionality at any point in the kernel uh whenever you want to",
    "start": "489360",
    "end": "494660"
  },
  {
    "text": "um right and so the Linux kernel as I was saying before is a very important system right because it's controlling",
    "start": "494759",
    "end": "499800"
  },
  {
    "text": "this interface between software and hardware and so you don't really want to mess it up uh like causing your kernel",
    "start": "499800",
    "end": "506220"
  },
  {
    "text": "to crash or Panic is really bad so the important part is it's also safe and",
    "start": "506220",
    "end": "513000"
  },
  {
    "text": "performant changes to Kernel Behavior you're not just changing it as you want you want to be able to do it in a safe",
    "start": "513000",
    "end": "519419"
  },
  {
    "text": "and efficient manner too and so ebpf kind of uh knew that and so",
    "start": "519419",
    "end": "525120"
  },
  {
    "text": "built things in around that too so the first and probably like most important thing is like the safety so before your",
    "start": "525120",
    "end": "532080"
  },
  {
    "text": "evpf program can be loaded into the kernel is actually has to pass through the ebpf verifier",
    "start": "532080",
    "end": "539240"
  },
  {
    "text": "and basically the verifier checks that the programs will run all the way to completion they won't make the kernel",
    "start": "539240",
    "end": "545640"
  },
  {
    "text": "hang they won't crash or like harm the system in a way that is kind of like",
    "start": "545640",
    "end": "551120"
  },
  {
    "text": "irrecoverable and so the verifier helps make sure that your programs aren't",
    "start": "551120",
    "end": "556380"
  },
  {
    "text": "going to harm the kernel or harm your whole kind of like infrastructure",
    "start": "556380",
    "end": "561600"
  },
  {
    "text": "uh the second part um that is really important for a lot of people is the performance right if",
    "start": "561600",
    "end": "566880"
  },
  {
    "text": "you're running something in the kernel you want to be very performant and so it what ebpf does is it takes kind of like",
    "start": "566880",
    "end": "573899"
  },
  {
    "text": "the byte code of these programs and compiles it into machine machine specific construction instruction set",
    "start": "573899",
    "end": "581700"
  },
  {
    "text": "um and you're running it in the kernel so these programs basically run as efficiently as natively compiled Linux",
    "start": "581700",
    "end": "589080"
  },
  {
    "text": "kernel code so instead of having to like run something in user space you can now",
    "start": "589080",
    "end": "596040"
  },
  {
    "text": "run it directly in the kernel and so that speeds up a lot of things and also you're saving the cost of having to",
    "start": "596040",
    "end": "602519"
  },
  {
    "text": "switch the contacts from user space into kernel space and back again and so you get a lot of performance benefits out of",
    "start": "602519",
    "end": "609420"
  },
  {
    "text": "evpf2 now uh you're not just making user space",
    "start": "609420",
    "end": "614700"
  },
  {
    "text": "go away with evpf so you still need to interact with it and so ebpf also has",
    "start": "614700",
    "end": "619800"
  },
  {
    "text": "the concept of maps and so essentially what these are is shared memory that",
    "start": "619800",
    "end": "625320"
  },
  {
    "text": "between user space and kernel space where they can pass information back and forth between them so as your ebpf",
    "start": "625320",
    "end": "632519"
  },
  {
    "text": "program is running say observability and collecting information on events that are happening in in the kernel it can",
    "start": "632519",
    "end": "638519"
  },
  {
    "text": "then pass those like events into user space for processing for saving for",
    "start": "638519",
    "end": "644820"
  },
  {
    "text": "whatever you want to do and so the great thing about Maps is they they aren't",
    "start": "644820",
    "end": "649860"
  },
  {
    "text": "losing data and they're they're more performant too so that's like the extremely brief",
    "start": "649860",
    "end": "657120"
  },
  {
    "text": "overview of evpf obviously there's a lot more if you really want to dive into it but now I guess this is a cloud native",
    "start": "657120",
    "end": "665940"
  },
  {
    "text": "conference so how does ebpf and all this relate to Cloud native",
    "start": "665940",
    "end": "672060"
  },
  {
    "text": "right and so when we're thinking about like what cloud native is is it's kind of bringing all these resources into",
    "start": "672060",
    "end": "679579"
  },
  {
    "text": "running on a single host right we're running lots of containers on a single host and so when we're talking about",
    "start": "679579",
    "end": "685980"
  },
  {
    "text": "ebpf right it's these multiple different applications are all connecting from",
    "start": "685980",
    "end": "691740"
  },
  {
    "text": "user space down into kernel space things like running processes reading files or making a network call and it's all doing",
    "start": "691740",
    "end": "698399"
  },
  {
    "text": "it on the same host and the kernel is aware of everything that's happening on that host right",
    "start": "698399",
    "end": "704220"
  },
  {
    "text": "everything that needs to happen needs to go through the kernel and all of these pods that are running are all um",
    "start": "704220",
    "end": "710820"
  },
  {
    "text": "accessing everything through the same kernel right and this is what's cool about ebpf",
    "start": "710820",
    "end": "716040"
  },
  {
    "text": "right so since everything's going into a shared kernel if you put an UPF program",
    "start": "716040",
    "end": "721140"
  },
  {
    "text": "on this host it can see everything that's happening it has complete context of everything that's happening in your",
    "start": "721140",
    "end": "728579"
  },
  {
    "text": "kubernetes cluster it's not going to be missing anything because everything has to go through the kernel to do that right so if you're using something like",
    "start": "728579",
    "end": "735060"
  },
  {
    "text": "a a sidecar and user space it's only connected to a single pod right and if you I don't know a malicious actor comes",
    "start": "735060",
    "end": "741839"
  },
  {
    "text": "in and starts spinning up pods that are outside your cluster you're sorry containers that are like outside your cluster it's not a your a",
    "start": "741839",
    "end": "749880"
  },
  {
    "text": "lot of user space things are going to miss that but since everything is going through the kernel ebpf has complete",
    "start": "749880",
    "end": "755279"
  },
  {
    "text": "visibility over that and the other thing is you don't need to",
    "start": "755279",
    "end": "760380"
  },
  {
    "text": "do any changes to your code and configuration because it's running kernel space anything that's calling into kernel space will be seen by evpf",
    "start": "760380",
    "end": "767639"
  },
  {
    "text": "so it's like kind of a no instrumentation which is a really big benefit too",
    "start": "767639",
    "end": "773820"
  },
  {
    "text": "so what ebpf does by moving into kernel space is it allows you to like kind of",
    "start": "773820",
    "end": "780420"
  },
  {
    "text": "use the all the benefits around performance and visibility that the Linux kernel has but now finally add in",
    "start": "780420",
    "end": "787800"
  },
  {
    "text": "that flexibility aspect and speed up the Innovation cycle and make ebpf ready for",
    "start": "787800",
    "end": "794160"
  },
  {
    "text": "the cloud native world so it provides safety performance observability programmability into this 30 year old",
    "start": "794160",
    "end": "801000"
  },
  {
    "text": "technology and the great thing is now it ebpf is available on most kernels that",
    "start": "801000",
    "end": "806820"
  },
  {
    "text": "people are running in production so let's dive into some of the cloud native use cases that we have",
    "start": "806820",
    "end": "813300"
  },
  {
    "text": "so the first one is networking so ebpf is actually from a",
    "start": "813300",
    "end": "819180"
  },
  {
    "text": "packet filtering background and it's not just for networking ways but this is like really the roots of the",
    "start": "819180",
    "end": "825720"
  },
  {
    "text": "technology and the two like big projects around that are psyllium and Hubble and",
    "start": "825720",
    "end": "831899"
  },
  {
    "text": "this is providing high performance uh networking based on evpf we're seeing",
    "start": "831899",
    "end": "837600"
  },
  {
    "text": "other projects start to like pick up networking or networking with ebpf2 and",
    "start": "837600",
    "end": "843240"
  },
  {
    "text": "it's great to see that Innovation happening the second really big use case",
    "start": "843240",
    "end": "849240"
  },
  {
    "text": "um is around observability right so ebpf has complete context and visibility into",
    "start": "849240",
    "end": "855360"
  },
  {
    "text": "everything that's happening on the host and so you can see uh understand what",
    "start": "855360",
    "end": "861120"
  },
  {
    "text": "all of your applications are doing or even the applications that aren't yours that are running on the host so there's",
    "start": "861120",
    "end": "867180"
  },
  {
    "text": "different projects like Inspector Gadget Hubble for Network visibility open",
    "start": "867180",
    "end": "872880"
  },
  {
    "text": "Telemetry just add an ebpf collector pack of where are you for debugging Network traces and also pixie so if you",
    "start": "872880",
    "end": "881940"
  },
  {
    "text": "want to check out like how ebpf is related to observability I would check out some of these projects",
    "start": "881940",
    "end": "887339"
  },
  {
    "text": "the next big area is around security I think this is a really",
    "start": "887339",
    "end": "894260"
  },
  {
    "text": "Rising use case um I think knowing kind of like the ecosystem the most use cases or the most",
    "start": "894260",
    "end": "900600"
  },
  {
    "text": "projects I've seen so far have been around networking and a lot around observability and I think we're really",
    "start": "900600",
    "end": "905880"
  },
  {
    "text": "starting to see The Innovation happening around security right now too right and",
    "start": "905880",
    "end": "910980"
  },
  {
    "text": "so the reason why that is is because I think a little bit based off of The Observer observability piece where",
    "start": "910980",
    "end": "917399"
  },
  {
    "text": "you're able to observe everything that's happening on your system right and that's how you secure a system is you",
    "start": "917399",
    "end": "922920"
  },
  {
    "text": "need to know what's going on otherwise you have a bunch of unknown unknowns right and so with evpf you're able to",
    "start": "922920",
    "end": "929519"
  },
  {
    "text": "understand what's happening on the whole host and based off of that you can secure your systems so we're seeing a",
    "start": "929519",
    "end": "936300"
  },
  {
    "text": "lot of interesting projects that you can create security profiles based off of what you know that's happening from ebpf",
    "start": "936300",
    "end": "943320"
  },
  {
    "text": "programs and you can also do things like runtime enforcement so say there's a malicious program or actor on your",
    "start": "943320",
    "end": "950639"
  },
  {
    "text": "machine and you can see it based on the profile you're collecting then ebpf",
    "start": "950639",
    "end": "956459"
  },
  {
    "text": "since it's running in the kernel can kill that process or or stop it so I",
    "start": "956459",
    "end": "961800"
  },
  {
    "text": "think security is a very big space to watch in the next couple of years around for ebpf",
    "start": "961800",
    "end": "969000"
  },
  {
    "text": "and then the last big area is in profiling and tracing",
    "start": "969000",
    "end": "975660"
  },
  {
    "text": "um so being able to track everything that's happening and how performer or",
    "start": "975660",
    "end": "980880"
  },
  {
    "text": "how applications are working you can basically track everything that is doing on the system and through that",
    "start": "980880",
    "end": "986820"
  },
  {
    "text": "understand exactly how the application is performing or also isn't performing",
    "start": "986820",
    "end": "993120"
  },
  {
    "text": "and optimize that so there's a lot of projects that are doing continuous profiling like Pike parka pyroscope and",
    "start": "993120",
    "end": "1002480"
  },
  {
    "text": "pixie that enable you to understand the performance characteristics of your",
    "start": "1002480",
    "end": "1007639"
  },
  {
    "text": "application and also improve them I thought one really cool collaboration that happened is the Parker project",
    "start": "1007639",
    "end": "1014660"
  },
  {
    "text": "actually profiled psyllium and they're able to reduce our like",
    "start": "1014660",
    "end": "1021820"
  },
  {
    "text": "memory overhead by like 30 so it was it's quite cool to see kind of the",
    "start": "1021820",
    "end": "1027260"
  },
  {
    "text": "benefits that you can have from that and it's not just about the projects",
    "start": "1027260",
    "end": "1032839"
  },
  {
    "text": "like I said I'm a community pollinator so let's talk a little bit about the community what's happening in the evpf space right now",
    "start": "1032839",
    "end": "1040339"
  },
  {
    "text": "um there's uh if you go to evpf.io there's a landscape of all the different",
    "start": "1040339",
    "end": "1045918"
  },
  {
    "text": "projects that are happening so I wasn't able to kind of like dive into every single project in this short",
    "start": "1045919",
    "end": "1051080"
  },
  {
    "text": "presentation it's just a brief overview of the use cases but there's lots of projects happening",
    "start": "1051080",
    "end": "1057140"
  },
  {
    "text": "um in the evpf ecosystem so these are like the major applications as we like",
    "start": "1057140",
    "end": "1062480"
  },
  {
    "text": "to say but there's even more emerging ones um I know in Cloud native we like to",
    "start": "1062480",
    "end": "1068240"
  },
  {
    "text": "joke about the cncf landscape ebpf isn't quite there yet but I think it's well on",
    "start": "1068240",
    "end": "1073340"
  },
  {
    "text": "the trajectory to get to somewhere because I'm adding projects to this landscape all the time and a lot of new",
    "start": "1073340",
    "end": "1078980"
  },
  {
    "text": "and interesting use cases too besides just like the applications there's a lot happening on the",
    "start": "1078980",
    "end": "1084559"
  },
  {
    "text": "infrastructure side so obviously like the Linux kernel different compilers for your ebpf programs and different",
    "start": "1084559",
    "end": "1091460"
  },
  {
    "text": "libraries to load and unload um ebpf programs into and out of the",
    "start": "1091460",
    "end": "1096799"
  },
  {
    "text": "kernel too so if you're interested in they actually like coding of the",
    "start": "1096799",
    "end": "1101900"
  },
  {
    "text": "programs I would check out some of these projects the kernel Community ebpf is actually",
    "start": "1101900",
    "end": "1108200"
  },
  {
    "text": "one of the fastest growing subsystem in the Linux kernel mailing list this is actually the original email of",
    "start": "1108200",
    "end": "1116120"
  },
  {
    "text": "submitting the patch set to First merge ebpf in Daniel borkman who is one of my",
    "start": "1116120",
    "end": "1122539"
  },
  {
    "text": "colleagues at I surveillance is super nice and he's one of the co-maintainers with some people at Mata 2 and there's a",
    "start": "1122539",
    "end": "1129080"
  },
  {
    "text": "lot of active active development in the kernel community in terms of like the market perspective",
    "start": "1129080",
    "end": "1135799"
  },
  {
    "text": "and the Acquisitions so we're seeing kind of Acquisitions across all these different use cases from security",
    "start": "1135799",
    "end": "1143020"
  },
  {
    "text": "observability like uh profiling so and I think we're going to see this pick up",
    "start": "1143020",
    "end": "1148520"
  },
  {
    "text": "more and more as more companies are both leveraging evpf in their products and like larger companies that want to",
    "start": "1148520",
    "end": "1156160"
  },
  {
    "text": "innovate more to there's also as I was saying before it's not just about Linux anymore it's uh",
    "start": "1156160",
    "end": "1163580"
  },
  {
    "text": "ebpf can be running in a lot of different contexts ebpf is actually being ported to Windows right now and",
    "start": "1163580",
    "end": "1170059"
  },
  {
    "text": "they're actually also working on standardizing the ebpf instruction set",
    "start": "1170059",
    "end": "1175100"
  },
  {
    "text": "in the ietf so the discussions are just beginning for that too right now",
    "start": "1175100",
    "end": "1181039"
  },
  {
    "text": "however it's not just a Magic Bullet I don't want to say it's like all like sunshine rainbows Fairy Tales",
    "start": "1181039",
    "end": "1187640"
  },
  {
    "text": "um obviously no technology is perfect right so it's evpf is just a technology",
    "start": "1187640",
    "end": "1194000"
  },
  {
    "text": "there's things that it's good at there's things that aren't bad at and it's not applicable to every single use case so a",
    "start": "1194000",
    "end": "1201500"
  },
  {
    "text": "lot of the I guess quote unquote like evpf projects um like could be done with more simple",
    "start": "1201500",
    "end": "1207020"
  },
  {
    "text": "Technologies right it's the same thing like not everything needs to run on kubernetes there's different",
    "start": "1207020",
    "end": "1212059"
  },
  {
    "text": "Technologies for different use cases and when you're thinking don't think everything has to be an evpf just like",
    "start": "1212059",
    "end": "1218179"
  },
  {
    "text": "not everything has to run on kubernetes but there's a lot of great reasons to do it so if you're looking at ebpf projects",
    "start": "1218179",
    "end": "1224419"
  },
  {
    "text": "or ebf Technologies look at the outcome rather than the technology I think the",
    "start": "1224419",
    "end": "1229580"
  },
  {
    "text": "technology you're going to be seeing a lot driving a lot of the use cases coming up in cloud native will be ebpf",
    "start": "1229580",
    "end": "1234980"
  },
  {
    "text": "but and but that's because of the benefits that it brings rather than kind of the underlying Tech technology itself",
    "start": "1234980",
    "end": "1242000"
  },
  {
    "text": "like I don't think you should think of ebpf as a check box right there's right ways to do in the wrong ways to do it",
    "start": "1242000",
    "end": "1247460"
  },
  {
    "text": "just like any other technology so if this got you a little bit",
    "start": "1247460",
    "end": "1252799"
  },
  {
    "text": "interested in ebpf um where should you go next uh one is uh Wikipedia right uh the the",
    "start": "1252799",
    "end": "1260720"
  },
  {
    "text": "favorite source of the internet um the ebpf Wikipedia page recently got",
    "start": "1260720",
    "end": "1266179"
  },
  {
    "text": "added and it gives a nice overview of it uh there's also as I mentioned before",
    "start": "1266179",
    "end": "1271419"
  },
  {
    "text": "evpf.io that's where you can find the project landscape and also a little bit more in-depth overview of what evpf",
    "start": "1271419",
    "end": "1279679"
  },
  {
    "text": "actually is if you want to dive in more and that also provides you links to resources for further reading and",
    "start": "1279679",
    "end": "1285799"
  },
  {
    "text": "further learning ebpf.io is also being translated into",
    "start": "1285799",
    "end": "1291140"
  },
  {
    "text": "different languages so you can see the French translation right here and I'm",
    "start": "1291140",
    "end": "1296240"
  },
  {
    "text": "actually looking for help right now for translating the website into Chinese so if you're interested in helping out and",
    "start": "1296240",
    "end": "1301880"
  },
  {
    "text": "learning about ebpf and getting a jump start to contributing to the ecosystem come talk to me I'd love to see you help",
    "start": "1301880",
    "end": "1309020"
  },
  {
    "text": "translate the website into Chinese there's also labs to get started so if",
    "start": "1309020",
    "end": "1314780"
  },
  {
    "text": "you want to learn a little bit more about programming ebpf Labs there's Labs on the ebpf website",
    "start": "1314780",
    "end": "1320780"
  },
  {
    "text": "and there's also actually four years now ebpf Summit all the videos are on",
    "start": "1320780",
    "end": "1327320"
  },
  {
    "text": "YouTube lots of great talks from lots of different speakers seeing how their",
    "start": "1327320",
    "end": "1333380"
  },
  {
    "text": "company or their project or their technology is benefiting from evpf",
    "start": "1333380",
    "end": "1338840"
  },
  {
    "text": "uh Shameless self-promotion I also run an ebpf newsletter that goes out bi-weekly you can sign up on the website",
    "start": "1338840",
    "end": "1346039"
  },
  {
    "text": "and this is actually not publicly released yet um so you because you're here today you get a little bit of a",
    "start": "1346039",
    "end": "1352039"
  },
  {
    "text": "sneak preview but we're actually going to be doing a documentary on evpf and",
    "start": "1352039",
    "end": "1357679"
  },
  {
    "text": "it's going to be launching at kubecon cloudnativecon in Chicago",
    "start": "1357679",
    "end": "1363020"
  },
  {
    "text": "um the actual trailer for it is going to be launching on Monday so you get a couple days early just because you're in this room right now",
    "start": "1363020",
    "end": "1369280"
  },
  {
    "text": "I've seen the trailer it's pretty awesome very biased but I think it'll be really",
    "start": "1369280",
    "end": "1376880"
  },
  {
    "text": "cool and I think the story behind ebpf is really compelling too",
    "start": "1376880",
    "end": "1383480"
  },
  {
    "text": "uh at coupon will also be doing in Illustrated children's guide to ebpf if you saw the one for kubernetes it'll be",
    "start": "1383480",
    "end": "1390200"
  },
  {
    "text": "very similar I'm excited about this because I'm writing this with one of my co-workers",
    "start": "1390200",
    "end": "1396500"
  },
  {
    "text": "yeah so those are some of the resources of where to go next so I guess to kind of like wrap the whole presentation up",
    "start": "1396500",
    "end": "1403220"
  },
  {
    "text": "I'll bring it back to where we were at the beginning so this whole vision for evpf inside",
    "start": "1403220",
    "end": "1409100"
  },
  {
    "text": "right we want new technologies not because of like what they are fundamentally but because of what they",
    "start": "1409100",
    "end": "1415700"
  },
  {
    "text": "enable right people wanted Intel inside because they it they thought it would give them a better computer something",
    "start": "1415700",
    "end": "1421280"
  },
  {
    "text": "that would able to that would be able to allow them to do more things with it you",
    "start": "1421280",
    "end": "1426919"
  },
  {
    "text": "know have a better system a more performance system a more scalable system whatever it is I think that's",
    "start": "1426919",
    "end": "1432620"
  },
  {
    "text": "where we're going to see ebpf going it's going to be the technology inside of a lot of projects a lot of Technologies a",
    "start": "1432620",
    "end": "1438980"
  },
  {
    "text": "lot of companies that's really driving the next wave of innovation in Cloud native and not because it's the of the",
    "start": "1438980",
    "end": "1445520"
  },
  {
    "text": "underlying technology ebpf isn't just a marketing thing right I didn't say it's a silver bullet for every single",
    "start": "1445520",
    "end": "1450679"
  },
  {
    "text": "solution but it does provide a lot of benefits it provides this programmability the safety these",
    "start": "1450679",
    "end": "1456380"
  },
  {
    "text": "performance benefits and because of that people will be leveraging it in their applications because of what it enables",
    "start": "1456380",
    "end": "1463760"
  },
  {
    "text": "I guess a similar thing is like when you're thinking about your like mobile phone",
    "start": "1463760",
    "end": "1470480"
  },
  {
    "text": "right so before we had smartphones you just had whatever software came on the",
    "start": "1470480",
    "end": "1476600"
  },
  {
    "text": "actual app on the phone whatever the manufacturer told you this is what you're going to need right but then when",
    "start": "1476600",
    "end": "1483860"
  },
  {
    "text": "Apple came out with the uh the iPhone right suddenly you had an application",
    "start": "1483860",
    "end": "1490580"
  },
  {
    "text": "store where you could decide what applications were useful for you to have",
    "start": "1490580",
    "end": "1496400"
  },
  {
    "text": "on your phone right so as I came here to kubecon China right I downloaded uh alipace that I was able to pay people",
    "start": "1496400",
    "end": "1503179"
  },
  {
    "text": "here right and I could make a decision about what things were and I think that's the great thing about ebpf is",
    "start": "1503179",
    "end": "1509179"
  },
  {
    "text": "allowing us to add new functionality to a decade's old technology allowing us to",
    "start": "1509179",
    "end": "1514400"
  },
  {
    "text": "do a lot of interesting things and I think people love their smartphones because it's able to",
    "start": "1514400",
    "end": "1521720"
  },
  {
    "text": "let them do new things that they weren't able to do before by choosing what software is on it right I think that's",
    "start": "1521720",
    "end": "1528080"
  },
  {
    "text": "what ebpf is in locking in the cloud native ecosystem it was why it's going to be so important going forwards",
    "start": "1528080",
    "end": "1534380"
  },
  {
    "text": "so thank you for coming today if you want to check out more go to ebpf.io",
    "start": "1534380",
    "end": "1540320"
  },
  {
    "text": "connect with me on Twitter and we also have two books what is ebpf and learning",
    "start": "1540320",
    "end": "1545840"
  },
  {
    "text": "evpf available for download on the I surveillance website and with that I think I have a couple minutes for",
    "start": "1545840",
    "end": "1551480"
  },
  {
    "text": "questions thank you",
    "start": "1551480",
    "end": "1554980"
  },
  {
    "text": "thank you uh thank you for a great talk so uh I have just a very simple question",
    "start": "1561460",
    "end": "1566779"
  },
  {
    "text": "so uh you on some slide you said that this program uh the byte code for for",
    "start": "1566779",
    "end": "1572240"
  },
  {
    "text": "the ebpf is first verified and then it's compelled or I'm just wondering like how",
    "start": "1572240",
    "end": "1579260"
  },
  {
    "text": "it differs from the kernel module when you can put every single instruction and then break the system so this",
    "start": "1579260",
    "end": "1585320"
  },
  {
    "text": "verification is uh how is it doing that you cannot break the the Linux kernel is",
    "start": "1585320",
    "end": "1591799"
  },
  {
    "text": "it running in sandbox is it a virtual machine or is it just a binary code that",
    "start": "1591799",
    "end": "1597080"
  },
  {
    "text": "can do anything but it's verified somehow how does it work that it cannot break the kernel",
    "start": "1597080",
    "end": "1603679"
  },
  {
    "text": "yeah so the verifier is a very complex piece of software",
    "start": "1603679",
    "end": "1609260"
  },
  {
    "text": "um and it's it could be a whole like presentation and conference on its own um I think like the big things is is",
    "start": "1609260",
    "end": "1616159"
  },
  {
    "text": "making sure that you're not like so you can't have like unbounded Loops um in there you the program has to run the",
    "start": "1616159",
    "end": "1622520"
  },
  {
    "text": "completion uh like there's uh it doesn't um I guess like leave any memory like",
    "start": "1622520",
    "end": "1629120"
  },
  {
    "text": "hang so it does a lot of checks and I guess that's the role of the verifier yeah okay I understand but for example",
    "start": "1629120",
    "end": "1637039"
  },
  {
    "text": "let's say you have a malicious malicious cbpf program that is",
    "start": "1637039",
    "end": "1642260"
  },
  {
    "text": "sometimes only sometimes based on something doing an endless loop for example or something like this so your",
    "start": "1642260",
    "end": "1648080"
  },
  {
    "text": "validator is not catching this and then when you return from the system call for example",
    "start": "1648080",
    "end": "1653179"
  },
  {
    "text": "something bad happens and you can handle the system so like how can you ensure that this is a safe",
    "start": "1653179",
    "end": "1659600"
  },
  {
    "text": "solution because this runs in a kernel space yeah so make sure every single like there are limitations on the",
    "start": "1659600",
    "end": "1666860"
  },
  {
    "text": "complexity of programs to avoid exactly that issue so the verifier will actually unroll like every single like",
    "start": "1666860",
    "end": "1673760"
  },
  {
    "text": "um like decision for like the whole program and it'll make sure every single one",
    "start": "1673760",
    "end": "1679159"
  },
  {
    "text": "ends yeah and the one final thing so the final com the final code is compile and",
    "start": "1679159",
    "end": "1685460"
  },
  {
    "text": "this is a native code or is it executed by some internal virtual machine it's by",
    "start": "1685460",
    "end": "1691159"
  },
  {
    "text": "internal virtual machine okay that that's all thank you very much yeah thanks",
    "start": "1691159",
    "end": "1697360"
  },
  {
    "text": "tax bill for the presentation it's simple and to the point I have a couple of questions for you so can you please",
    "start": "1698900",
    "end": "1704659"
  },
  {
    "text": "touch on some of the use cases that using ebbf is not a good fit and my",
    "start": "1704659",
    "end": "1710240"
  },
  {
    "text": "second question is to Echo is is his concern from you know the field some",
    "start": "1710240",
    "end": "1715520"
  },
  {
    "text": "many end users are concerned about the security so is it safe to say",
    "start": "1715520",
    "end": "1720799"
  },
  {
    "text": "um you know whatever code we're gonna run over based on ebbf would be as safe",
    "start": "1720799",
    "end": "1726200"
  },
  {
    "text": "as the underlying Linux host because if the checkers are going to stop those calls it has to be built in in the in",
    "start": "1726200",
    "end": "1732320"
  },
  {
    "text": "the Linux kernel itself okay yeah so I'll take those one at a time so the first one is is there any",
    "start": "1732320",
    "end": "1737480"
  },
  {
    "text": "use cases that ebpf isn't good for um I would say like when I was talking",
    "start": "1737480",
    "end": "1743000"
  },
  {
    "text": "about like Balinese kernel Tech is like you know a decades-old technology so it's not like people haven't been aware",
    "start": "1743000",
    "end": "1749120"
  },
  {
    "text": "of like challenges and limitations and they haven't tried to build tooling around it right the the kernel has a lot",
    "start": "1749120",
    "end": "1755419"
  },
  {
    "text": "of tooling built in and there's things that you can already use so if there's a tool already there you don't need to",
    "start": "1755419",
    "end": "1760940"
  },
  {
    "text": "write your own programs for it right that's I think like uh part of the Tweet is",
    "start": "1760940",
    "end": "1767240"
  },
  {
    "text": "right like a lot of these things could be replaced by simple things like shell scripts right and so it if you have like",
    "start": "1767240",
    "end": "1775520"
  },
  {
    "text": "a more simple use case like you don't need to go to ebpf um there's a lot of",
    "start": "1775520",
    "end": "1780620"
  },
  {
    "text": "challenges that are already solved and it's I think when you're going to more of these complex use cases like right so",
    "start": "1780620",
    "end": "1786740"
  },
  {
    "text": "psyllium is built on ebpf because it's trying to bring networking into the cloud native world where things are a",
    "start": "1786740",
    "end": "1793460"
  },
  {
    "text": "lot more Dynamic they're a lot more scalable and so that's what the benefit that ebpf kind of brings where things",
    "start": "1793460",
    "end": "1799520"
  },
  {
    "text": "like traditional things like IP tables wouldn't work right and so it really depends like on your use case and what",
    "start": "1799520",
    "end": "1805580"
  },
  {
    "text": "you're trying to do and so I'd really look at what the use case is and then on the security aspect I guess",
    "start": "1805580",
    "end": "1811580"
  },
  {
    "text": "there's a lot sorry can you repeat that because I there's a lot of different parts of security yeah so in the field",
    "start": "1811580",
    "end": "1817580"
  },
  {
    "text": "for you know organizations or team to adopt ebbf they're always the first question would be how about the security",
    "start": "1817580",
    "end": "1822980"
  },
  {
    "text": "about this so I try to kind of educate them this there is a Linux Checker so the system calls are not just going to",
    "start": "1822980",
    "end": "1829460"
  },
  {
    "text": "go on one right away it's going to go through um you know the Linux kernel to Checker so that is if something already you",
    "start": "1829460",
    "end": "1836899"
  },
  {
    "text": "write code or application that's going to pass that already from a tuber security hole in the Linux kernel it's",
    "start": "1836899",
    "end": "1843080"
  },
  {
    "text": "gonna already pass it doesn't matter if you have ebbf or not right but that's that's those are the challenges I see in",
    "start": "1843080",
    "end": "1850039"
  },
  {
    "text": "the field for people pushing back against ppf yeah I guess on the security aspect",
    "start": "1850039",
    "end": "1855559"
  },
  {
    "text": "um I would say like General Security advice is like don't run untrusted code on your machine like don't just like let",
    "start": "1855559",
    "end": "1862700"
  },
  {
    "text": "random things and I think the same advice applies to ebpf2 um so by default like like",
    "start": "1862700",
    "end": "1870580"
  },
  {
    "text": "ebpf is like a privileged only only privileged users can do it and so like",
    "start": "1870580",
    "end": "1877100"
  },
  {
    "text": "you need to have like root or like admin access to be able to load and unload ebpf programs um and if you're loading",
    "start": "1877100",
    "end": "1883640"
  },
  {
    "text": "ebpf programs right you're loading something into the kernel so you should think about what you're loading into the kernel you shouldn't just be I'm not",
    "start": "1883640",
    "end": "1890779"
  },
  {
    "text": "trying to advocate for just like loading a bunch of evpf programs and seeing what happens like you should know what you're",
    "start": "1890779",
    "end": "1896179"
  },
  {
    "text": "you're putting into your kernel or like a lot of people are relying on higher level applications that they trust right",
    "start": "1896179",
    "end": "1901340"
  },
  {
    "text": "so psyllium is doing the loading and unloading of the evpf programs because it's a like application that you trust",
    "start": "1901340",
    "end": "1908720"
  },
  {
    "text": "and so you should basically only use EPF programs that you trust",
    "start": "1908720",
    "end": "1914480"
  },
  {
    "text": "yeah thank you that's all yeah",
    "start": "1914480",
    "end": "1918100"
  },
  {
    "text": "and I have a lot of work to troubleshooting the host and the",
    "start": "1927580",
    "end": "1932840"
  },
  {
    "text": "containers and you know uh we made uh how a lot of network issues if we have a",
    "start": "1932840",
    "end": "1939980"
  },
  {
    "text": "24 by 7 High uh High availability system",
    "start": "1939980",
    "end": "1945279"
  },
  {
    "text": "so uh with this is use cases if we want",
    "start": "1945279",
    "end": "1950779"
  },
  {
    "text": "to troubleshooting uh the um what's uh the programming based on",
    "start": "1950779",
    "end": "1957039"
  },
  {
    "text": "ebpf you will recommend it to me yeah yeah so I guess it depends on like what",
    "start": "1957039",
    "end": "1964399"
  },
  {
    "text": "you're trying to like troubleshoot so there's I guess like a bunch of these different like",
    "start": "1964399",
    "end": "1971059"
  },
  {
    "text": "observability um Technologies like if it's not working um like pack it where are you is like",
    "start": "1971059",
    "end": "1976940"
  },
  {
    "text": "probably a good place to start because that will Trace like all the packets going to the kernel",
    "start": "1976940",
    "end": "1982340"
  },
  {
    "text": "um if it's other thing uh like Inspector Gadget allows you to like see what's",
    "start": "1982340",
    "end": "1987380"
  },
  {
    "text": "happening in your application um I guess my recommendation would be like I think most people aren't going to",
    "start": "1987380",
    "end": "1993980"
  },
  {
    "text": "be writing their own evpf programs what they're going to be doing is leveraging applications that are running evpf right",
    "start": "1993980",
    "end": "2000340"
  },
  {
    "text": "and so like I would look for a tool that's using ebpf because it allows you",
    "start": "2000340",
    "end": "2005860"
  },
  {
    "text": "to have kind of like this complete observability to start debugging your issue rather than thinking about like what's the evpf program that I can write",
    "start": "2005860",
    "end": "2012399"
  },
  {
    "text": "to solve my issue because it's not easy to write evpf programs but you're going to want to be using the tools and the",
    "start": "2012399",
    "end": "2018580"
  },
  {
    "text": "technologies that leverage evpf because of the benefits in observability that it will bring it'll make it easier to",
    "start": "2018580",
    "end": "2024279"
  },
  {
    "text": "troubleshoot debug and solve your issue yeah okay thank you",
    "start": "2024279",
    "end": "2031200"
  },
  {
    "text": "hi Bill thanks um I'm curious are there maybe some",
    "start": "2042820",
    "end": "2048820"
  },
  {
    "text": "kernel uh build flags or uh like kernel config options uh that might be uh kind",
    "start": "2048820",
    "end": "2058599"
  },
  {
    "text": "of there might be a trade-off uh or a superior implementation that you could",
    "start": "2058599",
    "end": "2064780"
  },
  {
    "text": "maybe benefit from but you know maybe turning this off and then implementing that in an ebpf program are there",
    "start": "2064780",
    "end": "2071440"
  },
  {
    "text": "examples of that kind of thing it's just listening to you has me thinking about that so you're talking about like Performance",
    "start": "2071440",
    "end": "2077020"
  },
  {
    "text": "Tuning of the Linux kernel yeah I mean it's like uh it's not easy to write an ebpf program but it's also like",
    "start": "2077020",
    "end": "2083080"
  },
  {
    "text": "incredibly difficult to like modify the Linux kernel yeah and I'm kind of wondering if there's existing kernel",
    "start": "2083080",
    "end": "2089980"
  },
  {
    "text": "features uh that have sort of been I mean at the high level right like",
    "start": "2089980",
    "end": "2095020"
  },
  {
    "text": "psyllium's like a great example of just like reworking the entire networking stack to publish a bunch of interesting",
    "start": "2095020",
    "end": "2101440"
  },
  {
    "text": "information and map it out to other systems um but like I'm kind of curious if there's other maybe more trivial uh",
    "start": "2101440",
    "end": "2108040"
  },
  {
    "text": "things where it's like there was a device flag but it had a really awkward interface or it didn't work properly and",
    "start": "2108040",
    "end": "2113140"
  },
  {
    "text": "instead of modifying the Linux kernel you know um they just wrote a device driver and ebpf or something yeah I mean",
    "start": "2113140",
    "end": "2120880"
  },
  {
    "text": "there's a lot of interesting use cases like this like one example would be like human interface devices so I know that I",
    "start": "2120880",
    "end": "2128140"
  },
  {
    "text": "think it was like the Microsoft Surface like touchpad they weren't able to like Implement like some of the stuff in the",
    "start": "2128140",
    "end": "2134619"
  },
  {
    "text": "device drivers they add an evpf program so that some of the input functional quality that was available like on the",
    "start": "2134619",
    "end": "2141099"
  },
  {
    "text": "actual like device what it could actually be like supported by the Linux kernel right and that was an easier way",
    "start": "2141099",
    "end": "2147520"
  },
  {
    "text": "to do it that rather than trying to like rewrite the whole driver so that that's one way to do it yeah",
    "start": "2147520",
    "end": "2154480"
  },
  {
    "text": "that that's hilarious and ridiculous thank you yeah exactly right and so I mean ebpf is being applied in a lot of",
    "start": "2154480",
    "end": "2161200"
  },
  {
    "text": "different use cases and I yeah we've seen it a lot of different places um from like NYX to uh human interface",
    "start": "2161200",
    "end": "2169420"
  },
  {
    "text": "devices um I would actually if you want to dive more into this uh Brendan Greg gave a talk at ebpf Summit one of the Keynotes",
    "start": "2169420",
    "end": "2176680"
  },
  {
    "text": "that this past year and he's kind of talking about like performance tuning",
    "start": "2176680",
    "end": "2181839"
  },
  {
    "text": "and how ebpf is enabling to do that and he's talking about it's called fast by Friday and he kind of like walks through",
    "start": "2181839",
    "end": "2187540"
  },
  {
    "text": "the different things you're going to want to think about if you're trying to performance tune an application running on Linux",
    "start": "2187540",
    "end": "2194700"
  },
  {
    "text": "okay uh if there's no more questions I guess this is the last session too so",
    "start": "2201880",
    "end": "2207099"
  },
  {
    "text": "thank you for coming to kubecon open source Summit in China and see you maybe",
    "start": "2207099",
    "end": "2212920"
  },
  {
    "text": "in Chicago or anywhere else yeah thank you",
    "start": "2212920",
    "end": "2217260"
  }
]