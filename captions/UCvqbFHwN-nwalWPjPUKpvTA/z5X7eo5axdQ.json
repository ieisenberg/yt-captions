[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "hello everyone welcome to this session on machine learning at scale using kubeflow with uh amazon eks and amazon",
    "start": "480",
    "end": "7520"
  },
  {
    "text": "efs my name is suman davnat i'm a developer advocate with uh on the",
    "start": "7520",
    "end": "12559"
  },
  {
    "text": "efs product team and i'm super excited to share a few of the uh insights about",
    "start": "12559",
    "end": "18000"
  },
  {
    "text": "how you can run your machine learning workflow now using an open source tool called qflow uh so",
    "start": "18000",
    "end": "24000"
  },
  {
    "text": "what we are going to do in next 30 minutes or so we are going to talk about uh what machine why machine",
    "start": "24000",
    "end": "30960"
  },
  {
    "text": "learning on containers because that might be little uh odd to many of you if you are new to uh you know container",
    "start": "30960",
    "end": "38239"
  },
  {
    "text": "space and we will then dive a little bit around queue flow and then we will straight away jump into the demo which",
    "start": "38239",
    "end": "45360"
  },
  {
    "text": "is more interesting rather than uh there's boring slides so first thing first why machine learning",
    "start": "45360",
    "end": "53120"
  },
  {
    "start": "49000",
    "end": "315000"
  },
  {
    "text": "with containers so if you think about it uh you know it's not only about machine learning",
    "start": "53120",
    "end": "59680"
  },
  {
    "text": "we get the flexibility and all the benefits that any application can get with containers",
    "start": "59680",
    "end": "67520"
  },
  {
    "text": "so if you look at the whole machine learning stack there are different tools like",
    "start": "67520",
    "end": "72880"
  },
  {
    "text": "tensorflow pytorch and we need different kinds of infrastructure",
    "start": "72880",
    "end": "78000"
  },
  {
    "text": "to run this training so things gets very complicated when you think about different packages",
    "start": "78000",
    "end": "84720"
  },
  {
    "text": "dependencies and configurations so what containers helps us to do is you know it",
    "start": "84720",
    "end": "90159"
  },
  {
    "text": "packages our training code along with all the dependencies in a much modular way and that way you know our ml",
    "start": "90159",
    "end": "97520"
  },
  {
    "text": "environment gets very light weighted and it's very much uh gets portable right so you can",
    "start": "97520",
    "end": "103119"
  },
  {
    "text": "run your machine learning uh training jobs or other tasks you know independent",
    "start": "103119",
    "end": "108399"
  },
  {
    "text": "of the platform so one of the reason that why uh it is even",
    "start": "108399",
    "end": "115119"
  },
  {
    "text": "better to run it on kubernetes is uh you know first which is uh composibility so basically you you are",
    "start": "115119",
    "end": "122399"
  },
  {
    "text": "uh you know defining your training jobs or you are defining your uh machine learning task",
    "start": "122399",
    "end": "128479"
  },
  {
    "text": "in a granular way and so that you know you can always run it at different places and if you want to",
    "start": "128479",
    "end": "134560"
  },
  {
    "text": "make some changes it doesn't affect you know the other jobs in your pipeline the other thing is you can start today",
    "start": "134560",
    "end": "141920"
  },
  {
    "text": "on-prem uh in your kubernetes environment and you don't have to change it in future if you want to migrate it",
    "start": "141920",
    "end": "148000"
  },
  {
    "text": "to aws and run the same training job on the cloud so since it is",
    "start": "148000",
    "end": "154000"
  },
  {
    "text": "created at the container on kubernetes it gets very much portable as we have",
    "start": "154000",
    "end": "159200"
  },
  {
    "text": "just discussed a while back and obviously you don't have to think about the scale",
    "start": "159200",
    "end": "164640"
  },
  {
    "text": "because kubernetes will take care of the infrastructure so whether you need two instances to run the training job or",
    "start": "164640",
    "end": "171519"
  },
  {
    "text": "three instances or ten instances since the training job is running as a container you don't have to worry about",
    "start": "171519",
    "end": "177280"
  },
  {
    "text": "the backend infrastructure which is very much valuable for any machine learning engineer or even",
    "start": "177280",
    "end": "183920"
  },
  {
    "text": "for any infrastructure engineer and the best part about this is you don't",
    "start": "183920",
    "end": "189840"
  },
  {
    "text": "have to worry about managing this kubernetes cluster so you may like to use amazon eks which is our uh",
    "start": "189840",
    "end": "198000"
  },
  {
    "text": "managed kubernetes service on aws which helps you to give to give you the control plane where you can",
    "start": "198000",
    "end": "204879"
  },
  {
    "text": "attach your data plane or compute nodes and it supports you know",
    "start": "204879",
    "end": "210239"
  },
  {
    "text": "you can always get your uh you know kubernetes upstream experience uh and you can uh uh",
    "start": "210239",
    "end": "216400"
  },
  {
    "text": "decide which version of kubernetes you want but uh you know you can negatively get the upstream uh kubernetes",
    "start": "216400",
    "end": "222400"
  },
  {
    "text": "experience so it's it will look you know it will feel exactly the same as how",
    "start": "222400",
    "end": "227680"
  },
  {
    "text": "it is if you if you have to install and configure kubernetes",
    "start": "227680",
    "end": "232879"
  },
  {
    "text": "on-prem or in your managed uh you know ec2 instances",
    "start": "232879",
    "end": "238000"
  },
  {
    "text": "and it gets integrated with lot of other aw services and which we are going to see in a while where we will we are",
    "start": "238000",
    "end": "244319"
  },
  {
    "text": "going to uh you know um run machine learning job um using kubeflow onycast",
    "start": "244319",
    "end": "249920"
  },
  {
    "text": "and we are going to save our training data sets on efs",
    "start": "249920",
    "end": "255360"
  },
  {
    "text": "and one of the other thing is uh irrespective of kubernetes is you don't have to build",
    "start": "255360",
    "end": "263040"
  },
  {
    "text": "all those training container images from scratch so we do offer a lot of",
    "start": "263040",
    "end": "268560"
  },
  {
    "text": "pre-packaged docker container images which are fully configured and validated",
    "start": "268560",
    "end": "273759"
  },
  {
    "text": "and you know uh tested rigorously so you are always",
    "start": "273759",
    "end": "278960"
  },
  {
    "text": "get the best uh configuration and image which you can make use of so you can just what you can",
    "start": "278960",
    "end": "284400"
  },
  {
    "text": "do is you can just create your own training script or use the training scripts that we have as a template and",
    "start": "284400",
    "end": "291040"
  },
  {
    "text": "make the relevant changes based on your need and requirement you can always uh customize uh those",
    "start": "291040",
    "end": "297360"
  },
  {
    "text": "container images um and we support different frameworks like tensorflow mxnet python dots and so on",
    "start": "297360",
    "end": "304160"
  },
  {
    "text": "and the best part is uh you know you can use these uh deep learning containers uh",
    "start": "304160",
    "end": "309199"
  },
  {
    "text": "not only with eks but with ecs amazon stage maker and ec2 instances",
    "start": "309199",
    "end": "316560"
  },
  {
    "start": "315000",
    "end": "772000"
  },
  {
    "text": "so let's talk a little bit about queue flow before we jump into the demo so keyflow is basically uh you can think",
    "start": "316560",
    "end": "323840"
  },
  {
    "text": "of it as a machine learning toolkit for kubernetes so it's it comprises of you know various other uh projects uh like",
    "start": "323840",
    "end": "332000"
  },
  {
    "text": "jupiter notebook uh pipeline uh training services um and inference uh you know or",
    "start": "332000",
    "end": "337360"
  },
  {
    "text": "serving so basically if you have ever seen uh",
    "start": "337360",
    "end": "342400"
  },
  {
    "text": "amazon sagemaker it's kind of a similar platform that you will get here it may not have all those fancy features",
    "start": "342400",
    "end": "349759"
  },
  {
    "text": "that stagemaker offers but if you want to run your machine learning workflow on",
    "start": "349759",
    "end": "355360"
  },
  {
    "text": "kubernetes and if you want to have a control over uh your workflow even at a",
    "start": "355360",
    "end": "361440"
  },
  {
    "text": "more granular level uh then maybe you can make use of a queue flow and it's an open source project so you can always uh",
    "start": "361440",
    "end": "368319"
  },
  {
    "text": "contribute to that and we're going to see in the demo that how you can create a jupyter notebook and how you can start",
    "start": "368319",
    "end": "375120"
  },
  {
    "text": "a training job on queue flow now one important uh advantage of uh",
    "start": "375120",
    "end": "382080"
  },
  {
    "text": "using your own aws is uh you are going to get a lot of flexibilities and leverage the",
    "start": "382080",
    "end": "390319"
  },
  {
    "text": "integration that aws has with other services so when you are running q flow on eks you get all the goodness of",
    "start": "390319",
    "end": "397759"
  },
  {
    "text": "uh you know this service integration that we have with eks so in this case we are going to",
    "start": "397759",
    "end": "403520"
  },
  {
    "text": "use efs with queue flow but if you see here we have a good ecosystem where you can",
    "start": "403520",
    "end": "410240"
  },
  {
    "text": "integrate other managed services that we have for better experience for your machine",
    "start": "410240",
    "end": "415919"
  },
  {
    "text": "learning workflow when you are running on queue flow so since we are going to use efs in our",
    "start": "415919",
    "end": "423120"
  },
  {
    "text": "workflow so let's talk about efs a little bit right because we uh we learned a little bit about eks which is",
    "start": "423120",
    "end": "430080"
  },
  {
    "text": "a managed service for kubernetes so let's spend a couple of minutes on efs so efs is a simple serverless and set",
    "start": "430080",
    "end": "436960"
  },
  {
    "text": "and forget kind of file system which we just created and you don't have to mention the size of the file system and",
    "start": "436960",
    "end": "443520"
  },
  {
    "text": "you can just use it uh you know anywhere so it you can access that file system uh from your on premise",
    "start": "443520",
    "end": "451039"
  },
  {
    "text": "you know machine or you can access it from ec2 instance from a lambda function",
    "start": "451039",
    "end": "456560"
  },
  {
    "text": "uh or from a kubernetes cluster and we are going to use efs",
    "start": "456560",
    "end": "461919"
  },
  {
    "text": "for saving the training data set for our machine learning workflow but it's very much",
    "start": "461919",
    "end": "468080"
  },
  {
    "text": "elastic and performant we recently announced a sub millisecond read latency so that means",
    "start": "468080",
    "end": "474319"
  },
  {
    "text": "in general you will get a latency of 600 uh you know uh microseconds uh for your",
    "start": "474319",
    "end": "480960"
  },
  {
    "text": "read workload which is pretty amazing when you think about a shared file system on the cloud",
    "start": "480960",
    "end": "486879"
  },
  {
    "text": "and it's highly available and durable and we have different classes of storage that you can select from",
    "start": "486879",
    "end": "493840"
  },
  {
    "text": "so as we discussed uh you know efs has an integration with you can access efs from various",
    "start": "494479",
    "end": "500879"
  },
  {
    "text": "different compute services so one is on-prem or ec2 but we don't stop it there you can always use efs with your",
    "start": "500879",
    "end": "508319"
  },
  {
    "text": "any of your containers which are running on ecs which is our managed container service or on eks which we are going to",
    "start": "508319",
    "end": "514959"
  },
  {
    "text": "use uh you know in our demo so how to get started with the efs uh",
    "start": "514959",
    "end": "521279"
  },
  {
    "text": "with kubernetes so now we are not talking about qfl in general because we are going to do that in the demo but i",
    "start": "521279",
    "end": "526560"
  },
  {
    "text": "just want to give you an overview of how you can get started with efs with kubernetes",
    "start": "526560",
    "end": "532480"
  },
  {
    "text": "so the first thing is you need a kubernetes cluster so in this case uh you know we",
    "start": "532480",
    "end": "537920"
  },
  {
    "text": "are creating an amazon eks cluster but this could be very much your own",
    "start": "537920",
    "end": "543279"
  },
  {
    "text": "installation of kubernetes on a bunch of ec2 instances where you are managing the kubernetes cluster but you know this we",
    "start": "543279",
    "end": "550880"
  },
  {
    "text": "are just taking this example where you know we are creating and managed uh eks cluster",
    "start": "550880",
    "end": "557600"
  },
  {
    "text": "what that means is you don't have to manage the cluster by yourself uh all the pack you know patching uh you know",
    "start": "557600",
    "end": "564320"
  },
  {
    "text": "uh version control and all of that update updates is taken care by uh amazon",
    "start": "564320",
    "end": "570000"
  },
  {
    "text": "so first you need to create that eks cluster and second if you need to create a security group so that you know the",
    "start": "570000",
    "end": "576320"
  },
  {
    "text": "effs file system can be accessed from the eks cluster and then",
    "start": "576320",
    "end": "581920"
  },
  {
    "text": "you have to create an efs file system now we are going to do this uh through the code",
    "start": "581920",
    "end": "587440"
  },
  {
    "text": "in a while but this is how the workflow would look like and the most important thing is you need",
    "start": "587440",
    "end": "593920"
  },
  {
    "text": "to install the efs csi driver uh so",
    "start": "593920",
    "end": "599600"
  },
  {
    "text": "uh this storage driver doesn't come out of the box so once you have your eks",
    "start": "599600",
    "end": "605440"
  },
  {
    "text": "cluster uh if you want to attach efs storage uh you need to you know install",
    "start": "605440",
    "end": "610480"
  },
  {
    "text": "this uh csi driver right so it's this is also an open source project if you would like to contribute if you to contribute",
    "start": "610480",
    "end": "617279"
  },
  {
    "text": "on this project it's uh you know we have done a lot of improvements in our csi driver in the recent past so please have",
    "start": "617279",
    "end": "624160"
  },
  {
    "text": "a look so once you have created this eks cluster you have created the file system",
    "start": "624160",
    "end": "629839"
  },
  {
    "text": "and you have installed the csi driver on the case cluster um what you can do is you can define a storage class right so",
    "start": "629839",
    "end": "637600"
  },
  {
    "text": "in the storage class definition you will provide that file system id which we have just uh created",
    "start": "637600",
    "end": "643279"
  },
  {
    "text": "and that's all right so after this you can run your application by creating a persistent volume claim",
    "start": "643279",
    "end": "650399"
  },
  {
    "text": "and you will define uh the same storage class which you have used before so here if you see the storage",
    "start": "650399",
    "end": "657120"
  },
  {
    "text": "class name that we have given is efs hyphen sc you just refer to the same storage class in your pvc definition and",
    "start": "657120",
    "end": "664000"
  },
  {
    "text": "once that is done you can mount that uh pvc in your application or in your in",
    "start": "664000",
    "end": "670640"
  },
  {
    "text": "your pod right so in this case we are just using the same position volume claim whose name is efs claim and if you",
    "start": "670640",
    "end": "678160"
  },
  {
    "text": "see this this is the same claim name that we have used to create this pvc so that's all so",
    "start": "678160",
    "end": "683839"
  },
  {
    "text": "next time if you want to run another application you will just create another pvc and use it in your pot so you don't",
    "start": "683839",
    "end": "689440"
  },
  {
    "text": "have to go back to the storage over and again right so because we are using the dynamic provisioning and the csi driver",
    "start": "689440",
    "end": "695760"
  },
  {
    "text": "will take care of creating uh those access points which is the technology behind provisioning this uh",
    "start": "695760",
    "end": "704640"
  },
  {
    "text": "uh these uh pvcs right so that's uh about uh you know how",
    "start": "704640",
    "end": "710720"
  },
  {
    "text": "a little bit about how you can make use of efs with kubernetes so before we jump into the demo this is",
    "start": "710720",
    "end": "715839"
  },
  {
    "text": "what the architecture of our demo so we are going to use efs uh to",
    "start": "715839",
    "end": "721760"
  },
  {
    "text": "uh storing our training data set so in our demo we are going to download the training data set",
    "start": "721760",
    "end": "726800"
  },
  {
    "text": "and we are going to run some training job on queue flow",
    "start": "726800",
    "end": "732160"
  },
  {
    "text": "and that a training job is going to access the storage uh from efs using the csi",
    "start": "732160",
    "end": "738160"
  },
  {
    "text": "driver and for our training job we are going to build an image and then we will push it to ecr which is",
    "start": "738160",
    "end": "745600"
  },
  {
    "text": "our container registry which is kind of uh docker hub but it's within aws and then we will",
    "start": "745600",
    "end": "753120"
  },
  {
    "text": "start the training job on our uh eks cluster using q flow and it is going to",
    "start": "753120",
    "end": "758160"
  },
  {
    "text": "pull uh the image from ecr run the training job on",
    "start": "758160",
    "end": "763200"
  },
  {
    "text": "the training data set which is saved in efs okay so let's jump into the demo and see it all",
    "start": "763200",
    "end": "770880"
  },
  {
    "text": "in action okay so i have already opened my aws console and",
    "start": "770880",
    "end": "777680"
  },
  {
    "text": "if you see um i am inside cloud9 so we are going to use a cloud9 which is an",
    "start": "777680",
    "end": "783440"
  },
  {
    "text": "ide for writing uh your code on aws so it will give you a a nice uh",
    "start": "783440",
    "end": "789920"
  },
  {
    "text": "ide kind of environment which runs on an ec2 instance uh but it's very easy for you to write code as you go along you",
    "start": "789920",
    "end": "796959"
  },
  {
    "text": "don't have the dependency to carry your laptop or you know workstation you can just uh you know write your code from",
    "start": "796959",
    "end": "802959"
  },
  {
    "text": "anywhere as long as you have the internet connectivity so if you come here",
    "start": "802959",
    "end": "808160"
  },
  {
    "start": "806000",
    "end": "1114000"
  },
  {
    "text": "and you can see that i have two environments so i have already opened this environment you can always create",
    "start": "808160",
    "end": "814000"
  },
  {
    "text": "your own environment by clicking on create environment and it will ask you just a few questions what type of ec2 instance you need what",
    "start": "814000",
    "end": "821279"
  },
  {
    "text": "operating system and you are all set so this is the ide environment that i",
    "start": "821279",
    "end": "826639"
  },
  {
    "text": "have you know if you come here and click on open ide you will",
    "start": "826639",
    "end": "831680"
  },
  {
    "text": "land onto this page so i have a lot of code here you know i have cloned view of the github repo which i'm going to share",
    "start": "831680",
    "end": "838720"
  },
  {
    "text": "in a while but you will get this kind of interface okay so first thing first so i already",
    "start": "838720",
    "end": "844639"
  },
  {
    "text": "have an kubernetes cluster up and running and we can see that",
    "start": "844639",
    "end": "849839"
  },
  {
    "text": "if you run cube ctrl get nodes and we have an eks",
    "start": "849839",
    "end": "854880"
  },
  {
    "text": "cluster with five nodes i have also installed um kubeflow and if you want to",
    "start": "854880",
    "end": "861360"
  },
  {
    "text": "see that we can see all the parts running as part of keyflow",
    "start": "861360",
    "end": "866399"
  },
  {
    "text": "because qflo as we have learned a while back it's a collection of different services right so we have all those uh",
    "start": "866399",
    "end": "872880"
  },
  {
    "text": "you know parts running which supports uh which are actually uh running a queue flow",
    "start": "872880",
    "end": "878720"
  },
  {
    "text": "so the first thing is we need to create an eff file system at this point we don't have any effs file system created",
    "start": "878720",
    "end": "886320"
  },
  {
    "text": "and if you see cube ctl get storage class or sc you see that the default",
    "start": "886320",
    "end": "892480"
  },
  {
    "text": "storage which is an ebs volume which is by default when you create an kubernetes cluster",
    "start": "892480",
    "end": "898959"
  },
  {
    "text": "on aws uh now the first thing we need to do is we need to create the eff file system",
    "start": "898959",
    "end": "905920"
  },
  {
    "text": "and then install the driver and create a storage class so we don't have to do it all manually",
    "start": "905920",
    "end": "912480"
  },
  {
    "text": "we have created a script which is located inside this directory and it has some",
    "start": "912480",
    "end": "919440"
  },
  {
    "text": "dependencies so if you see this uh you know auto efs setup of",
    "start": "919440",
    "end": "926079"
  },
  {
    "text": "script we have some you know we are using some external uh libraries uh so for that we have one uh",
    "start": "926079",
    "end": "935040"
  },
  {
    "text": "requirement.text file so first let's install uh all the packages",
    "start": "935160",
    "end": "940480"
  },
  {
    "text": "so i have it installed so it will just escape all of the installation so next",
    "start": "940480",
    "end": "945839"
  },
  {
    "text": "is we need to run this script so let me just run this script and then we can go over",
    "start": "945839",
    "end": "952160"
  },
  {
    "text": "what the script is doing so the before i hit enter i just want to show you a few parameters that we are passing along one",
    "start": "952160",
    "end": "958880"
  },
  {
    "text": "is the region that means in which region we are uh creating this uh file system which is obviously in the same region",
    "start": "958880",
    "end": "965360"
  },
  {
    "text": "where i am going i have my eks cluster so i'm just giving the cluster name which i've saved in the environmental",
    "start": "965360",
    "end": "971279"
  },
  {
    "text": "variable and then the file system name right so before i hit enter if you come to",
    "start": "971279",
    "end": "976959"
  },
  {
    "text": "efs uh console and hit refresh we see that there is no file system so hopefully after this",
    "start": "976959",
    "end": "983600"
  },
  {
    "text": "uh you know script gets executed we will have a new file system so by the time",
    "start": "983600",
    "end": "989839"
  },
  {
    "text": "this runs uh let me just quickly show you what the script is doing so if you see the script is doing uh",
    "start": "989839",
    "end": "996399"
  },
  {
    "text": "just three basic things one is it is checking few of the predict with it and what is needed and then uh it is",
    "start": "996399",
    "end": "1001759"
  },
  {
    "text": "creating the uh i am roles uh so that the cluster can access the efs file",
    "start": "1001759",
    "end": "1007199"
  },
  {
    "text": "system uh then it is going to install that csi driver which we just talked about uh you know in the presentation",
    "start": "1007199",
    "end": "1014000"
  },
  {
    "text": "that it needed to uh you know um install the csi driver so that the kubernetes cluster can talk to uh efs and then we",
    "start": "1014000",
    "end": "1021680"
  },
  {
    "text": "are just creating a file system and after that we are creating a storage class and this is the",
    "start": "1021680",
    "end": "1028079"
  },
  {
    "text": "storage class which we are going to use in the queue flow for training our job",
    "start": "1028079",
    "end": "1034720"
  },
  {
    "text": "or even for the notebooks to creating a different uh data stores for keeping our training",
    "start": "1034720",
    "end": "1041038"
  },
  {
    "text": "data sets okay so uh creating a file system and creating a storage class is something that you can",
    "start": "1041039",
    "end": "1047199"
  },
  {
    "text": "repeatably do as then when you need but uh this uh setting up the uh you know csi",
    "start": "1047199",
    "end": "1054080"
  },
  {
    "text": "driver and all of that is just um your one time activity so it will take couple of minutes so",
    "start": "1054080",
    "end": "1059760"
  },
  {
    "text": "let's wait for this to complete okay as we can see uh it has created a",
    "start": "1059760",
    "end": "1067280"
  },
  {
    "text": "file system also it has created the amount targets and it has provisioned a storage class",
    "start": "1067280",
    "end": "1073280"
  },
  {
    "text": "so to see that we can just run cube ctl get sc so",
    "start": "1073280",
    "end": "1078720"
  },
  {
    "text": "we can see that the storage class which has been created right and it is still",
    "start": "1078720",
    "end": "1084240"
  },
  {
    "text": "not the default one so if we create any anything on queue flow uh let's say jupiter notebook it will use this",
    "start": "1084240",
    "end": "1090480"
  },
  {
    "text": "storage but if you explicitly mention this storage class it will carve out storage",
    "start": "1090480",
    "end": "1095600"
  },
  {
    "text": "from here okay so now before we uh go ahead if we go to",
    "start": "1095600",
    "end": "1100799"
  },
  {
    "text": "efs and click on refresh and you will see that the file system got created my efs1 and",
    "start": "1100799",
    "end": "1107120"
  },
  {
    "text": "this is exactly the name that we have given uh you know while uh parsing the efs file system name in",
    "start": "1107120",
    "end": "1113600"
  },
  {
    "text": "the script so we are all good now and if you come inside this file system and come to",
    "start": "1113600",
    "end": "1118640"
  },
  {
    "start": "1114000",
    "end": "1203000"
  },
  {
    "text": "access point which is the entry point um for the application to efs you see that",
    "start": "1118640",
    "end": "1124000"
  },
  {
    "text": "there is no access point created because we haven't uh we have just created the storage class but there is no pvc uh we",
    "start": "1124000",
    "end": "1131360"
  },
  {
    "text": "have uh claimed or created so the next thing would be",
    "start": "1131360",
    "end": "1136480"
  },
  {
    "text": "let's go ahead and create a jupyter notebook so to do so first we need to",
    "start": "1136480",
    "end": "1142559"
  },
  {
    "text": "run the i think it's already running but let me just stop and",
    "start": "1143120",
    "end": "1149440"
  },
  {
    "text": "start it again so this is the dashboard service or basically uh st low uh service and now if i just go to preview",
    "start": "1149440",
    "end": "1158559"
  },
  {
    "text": "and open the app in a separate uh not here maybe",
    "start": "1158559",
    "end": "1165520"
  },
  {
    "text": "so i'm just closing this off and going back here so",
    "start": "1165520",
    "end": "1170799"
  },
  {
    "text": "now the uh dashboard is you know up and running and we can see that",
    "start": "1170799",
    "end": "1176320"
  },
  {
    "text": "here and if you see here we have notebook tensor uh tensorboard volumes",
    "start": "1176320",
    "end": "1181360"
  },
  {
    "text": "and all of that pipelines everything so this is kind of uh uh you know if you have seen uh",
    "start": "1181360",
    "end": "1186720"
  },
  {
    "text": "sagemaker on aws it's kind of same but it has uh sagemaker has a lot of",
    "start": "1186720",
    "end": "1191760"
  },
  {
    "text": "different uh flexibility and features but this is kind of a nice environment for you to manage you know inside out so",
    "start": "1191760",
    "end": "1198080"
  },
  {
    "text": "you have more granularity and it's all running on kubernetes which is great so",
    "start": "1198080",
    "end": "1203440"
  },
  {
    "start": "1203000",
    "end": "1232000"
  },
  {
    "text": "now if you see here we don't have any volume so let's create a volume and this is the volume which we are going to use",
    "start": "1203440",
    "end": "1209120"
  },
  {
    "text": "for our for keeping our training dataset so let's give some name",
    "start": "1209120",
    "end": "1214799"
  },
  {
    "text": "and let's give some size let's say 100 gb and here we can select uh",
    "start": "1217039",
    "end": "1222240"
  },
  {
    "text": "the storage class and we can have access mode as maybe read write many which efs",
    "start": "1222240",
    "end": "1227679"
  },
  {
    "text": "supports that means you can access this volume from multiple parts",
    "start": "1227679",
    "end": "1233039"
  },
  {
    "start": "1232000",
    "end": "1350000"
  },
  {
    "text": "so let's create it and it is going to be in pending state because we have not yet uh you know uh we are not yet uh",
    "start": "1233039",
    "end": "1240000"
  },
  {
    "text": "attached uh this volume to any of the jupyter notebook or any of the other uh",
    "start": "1240000",
    "end": "1245120"
  },
  {
    "text": "training jobs so let's go ahead and create a jupyter notebook",
    "start": "1245120",
    "end": "1250320"
  },
  {
    "text": "let's give some name let's say notebook 1",
    "start": "1250320",
    "end": "1255600"
  },
  {
    "text": "and here we can select the image but let it be the default and it is going to create a",
    "start": "1255600",
    "end": "1262880"
  },
  {
    "text": "a volume for its own use basically the home directory for this notebook and since our default uh",
    "start": "1262880",
    "end": "1270640"
  },
  {
    "text": "storage class is ebs so it is going to create that",
    "start": "1270640",
    "end": "1276400"
  },
  {
    "text": "pvc from this storage volume uh or gp2 or type of storage class",
    "start": "1276400",
    "end": "1282159"
  },
  {
    "text": "but we are going to attach uh the x one external volume which is going to be",
    "start": "1282159",
    "end": "1288799"
  },
  {
    "text": "the data set efs volume which we have just created so let's",
    "start": "1288799",
    "end": "1294320"
  },
  {
    "text": "attach this and click on launch",
    "start": "1294320",
    "end": "1299559"
  },
  {
    "text": "so if you see it's already got created uh and if i come to volume now you will see that the data set is",
    "start": "1320320",
    "end": "1327440"
  },
  {
    "text": "also the status is now bonded and we also have a another volume",
    "start": "1327440",
    "end": "1332799"
  },
  {
    "text": "which is for the home directory and this is coming from gp2 and now if i come to efs and click on",
    "start": "1332799",
    "end": "1339280"
  },
  {
    "text": "refresh here you will see one access point which got created dynamically by the csi driver so let's go back to our",
    "start": "1339280",
    "end": "1346080"
  },
  {
    "text": "notebook and connect to our notebook and what we are going to do now is uh we",
    "start": "1346080",
    "end": "1353039"
  },
  {
    "start": "1350000",
    "end": "1945000"
  },
  {
    "text": "are going to run a training job but before that we need to have some data set right so",
    "start": "1353039",
    "end": "1358159"
  },
  {
    "text": "what we are going to do is we are going to create a jupiter notebook and we are going to download some uh",
    "start": "1358159",
    "end": "1365039"
  },
  {
    "text": "data set so i already have the location of the data set and it is",
    "start": "1365039",
    "end": "1370960"
  },
  {
    "text": "basically a simple uh",
    "start": "1370960",
    "end": "1375840"
  },
  {
    "text": "data set which contains uh you know images of different flowers and what we are going to do is we will run a cnn job",
    "start": "1377280",
    "end": "1384960"
  },
  {
    "text": "or basically a deep learning um uh training job which will identify the",
    "start": "1384960",
    "end": "1392159"
  },
  {
    "text": "type of flowers uh you know given an image of a flower so this is a very tiny",
    "start": "1392159",
    "end": "1397360"
  },
  {
    "text": "uh uh training data set and the focus is not on the machine learning part but the idea is what i really want",
    "start": "1397360",
    "end": "1404320"
  },
  {
    "text": "to uh you know give you is how you can make use of queue flow to run your training jobs so if you uh get inside",
    "start": "1404320",
    "end": "1410880"
  },
  {
    "text": "this data set and this data set is coming from the ess storage if you",
    "start": "1410880",
    "end": "1417039"
  },
  {
    "text": "get inside this you will see different types of flowers rose sunflower and so",
    "start": "1417039",
    "end": "1422159"
  },
  {
    "text": "on so let's wait for this to get downloaded and once this is over what we",
    "start": "1422159",
    "end": "1427200"
  },
  {
    "text": "will do is we will go to q flow and start a training job",
    "start": "1427200",
    "end": "1433919"
  },
  {
    "text": "so as you can see the training data set have been downloaded and we have images",
    "start": "1438159",
    "end": "1443760"
  },
  {
    "text": "uh saved inside uh this uh efs data set uh share right so we are",
    "start": "1443760",
    "end": "1451120"
  },
  {
    "text": "all good to start the uh training job so let me close this jupyter notebook because we don't need",
    "start": "1451120",
    "end": "1457520"
  },
  {
    "text": "that the only idea uh you know only thing we wanted to do is to download the dataset which is now stored in uh you",
    "start": "1457520",
    "end": "1464000"
  },
  {
    "text": "know in this eff file system via this access point so now let's go back to our",
    "start": "1464000",
    "end": "1469440"
  },
  {
    "text": "console and let's start the training job so just to recap where are we now uh if we open this uh this",
    "start": "1469440",
    "end": "1477279"
  },
  {
    "text": "architecture we have saved the training data set on efs and all all we need to do is you know run",
    "start": "1477279",
    "end": "1484720"
  },
  {
    "text": "this training job and for this i already created a uh deep learning uh image which contains",
    "start": "1484720",
    "end": "1490799"
  },
  {
    "text": "the uh you know the code for uh running that training job and uh we we have to",
    "start": "1490799",
    "end": "1496799"
  },
  {
    "text": "build it locally on cloud9 instance and then i pushed it to ecr repository which i'm going to show you",
    "start": "1496799",
    "end": "1503679"
  },
  {
    "text": "and then we can simply go ahead and run a training job on queue flow where i have",
    "start": "1503679",
    "end": "1509919"
  },
  {
    "text": "specified the training data set location as the data set which we have created and the image to use is the same image",
    "start": "1509919",
    "end": "1517360"
  },
  {
    "text": "which is in ecr right so let me show you uh the image first so if you see if we run",
    "start": "1517360",
    "end": "1524400"
  },
  {
    "text": "docker image ls you will see that we have",
    "start": "1524400",
    "end": "1530080"
  },
  {
    "text": "one image or a repository inside that we have this image uh saved and all this",
    "start": "1530080",
    "end": "1535760"
  },
  {
    "text": "code um like all the docker file for this um it's there in the github repo which i'm",
    "start": "1535760",
    "end": "1542080"
  },
  {
    "text": "going to share um with you you know uh towards the end but if you want to quickly look into that docker",
    "start": "1542080",
    "end": "1547600"
  },
  {
    "text": "file it's simply uh you know we are just pulling one a tensorflow base image we are copying this training",
    "start": "1547600",
    "end": "1554640"
  },
  {
    "text": "script which is located here and we are just uh you know uh giving this as an entry",
    "start": "1554640",
    "end": "1560320"
  },
  {
    "text": "point that's all it's nothing fancy and inside this uh training script we are uh",
    "start": "1560320",
    "end": "1565760"
  },
  {
    "text": "running that machine learning training so",
    "start": "1565760",
    "end": "1571120"
  },
  {
    "text": "let's go to eclr and this is my repository my repo",
    "start": "1571120",
    "end": "1577200"
  },
  {
    "text": "and if you see here this is the same repository right in my account and",
    "start": "1577200",
    "end": "1583919"
  },
  {
    "text": "inside that we have our image right this is the image that we are going to use",
    "start": "1583919",
    "end": "1590559"
  },
  {
    "text": "so let's uh let's run it so",
    "start": "1590559",
    "end": "1597039"
  },
  {
    "text": "so the training job is basically we have to we are going to run on a queue flow",
    "start": "1597039",
    "end": "1602320"
  },
  {
    "text": "so it's also defined as a yaml file uh so this is",
    "start": "1602320",
    "end": "1608159"
  },
  {
    "text": "inside this notebooks uh inside this so",
    "start": "1608159",
    "end": "1614960"
  },
  {
    "text": "one second yeah inside this training samples in the tf job.yaml so if i just open this up",
    "start": "1614960",
    "end": "1623120"
  },
  {
    "text": "you will see uh you know this is a tensorflow job uh this is the name of",
    "start": "1623120",
    "end": "1628159"
  },
  {
    "text": "the uh job and uh we are going to create two",
    "start": "1628159",
    "end": "1633440"
  },
  {
    "text": "replicas that means when we execute this you will see uh two parts getting created for this training job and",
    "start": "1633440",
    "end": "1641200"
  },
  {
    "text": "if you see here this is the image we are using and the most important part the training",
    "start": "1641200",
    "end": "1646640"
  },
  {
    "text": "data set because we have this training will be running on some data right and this is the same data set which we have",
    "start": "1646640",
    "end": "1653039"
  },
  {
    "text": "downloaded a while back uh inside this uh data set pvc so if we run this cube ctl get",
    "start": "1653039",
    "end": "1663279"
  },
  {
    "text": "pvc uh let me just grab the",
    "start": "1663279",
    "end": "1669840"
  },
  {
    "text": "namespace if you see this this is the dataset",
    "start": "1671120",
    "end": "1679360"
  },
  {
    "text": "pvc and this is the same pvc which we are mounting on this uh uh",
    "start": "1679360",
    "end": "1686320"
  },
  {
    "text": "training chart right so this training job is going to create the pod right and that part we will have our",
    "start": "1686320",
    "end": "1693360"
  },
  {
    "text": "efs storage uh attached and mounted and it will be mounted inside this uh you know train directory and in our training",
    "start": "1693360",
    "end": "1700880"
  },
  {
    "text": "script we have mentioned you know uh that uh go and read this directory for your",
    "start": "1700880",
    "end": "1706240"
  },
  {
    "text": "training job so let me open this training dot py and if you see it here",
    "start": "1706240",
    "end": "1711840"
  },
  {
    "text": "we are mentioning where is our training a data set located okay so let me go",
    "start": "1711840",
    "end": "1717600"
  },
  {
    "text": "back to our cli and let's run this job so",
    "start": "1717600",
    "end": "1725039"
  },
  {
    "text": "we are inside this ml folder and the training uh job is uh inside this training samples directory",
    "start": "1725039",
    "end": "1732080"
  },
  {
    "text": "so we can simply run this keep ctl apply and the training uh you know and the location of our uh",
    "start": "1732080",
    "end": "1738880"
  },
  {
    "text": "definition file uh so now if we see uh uh the training job and it it is now uh",
    "start": "1738880",
    "end": "1747039"
  },
  {
    "text": "in the bot creation phase it is yet to start the training but we see that there",
    "start": "1747039",
    "end": "1752320"
  },
  {
    "text": "are two parts which it created so we can even run cube",
    "start": "1752320",
    "end": "1758159"
  },
  {
    "text": "ctl get part minus n",
    "start": "1758159",
    "end": "1765960"
  },
  {
    "text": "the name space and you will see that these two these",
    "start": "1766320",
    "end": "1771440"
  },
  {
    "text": "are the two parts uh which are running and these are the exact same two parts which we have name that we have given",
    "start": "1771440",
    "end": "1778240"
  },
  {
    "text": "image classification pvc so it's worker 0 and worker 1 because the replica is 2.",
    "start": "1778240",
    "end": "1784559"
  },
  {
    "text": "so now what we can do is we can even see the logs by getting into one of these",
    "start": "1784559",
    "end": "1790320"
  },
  {
    "text": "workers so let's run this and if you see the training job is already completed",
    "start": "1790320",
    "end": "1795760"
  },
  {
    "text": "because it was a tiny data set and we just run it for two epochs and if you",
    "start": "1795760",
    "end": "1801039"
  },
  {
    "text": "see that the accuracy is not at all great but that's okay so the idea is basically to show you how you can make",
    "start": "1801039",
    "end": "1808080"
  },
  {
    "text": "use of uh you know kevlar to run your training job you know without any hindrance",
    "start": "1808080",
    "end": "1813840"
  },
  {
    "text": "so our training job got over and now if you see the parts you see that it's in",
    "start": "1813840",
    "end": "1819919"
  },
  {
    "text": "not ready state i mean meaning it's not running now so it's already over and what we can do is we can even uh you",
    "start": "1819919",
    "end": "1826559"
  },
  {
    "text": "know delete uh this uh you know whole deployment so by just",
    "start": "1826559",
    "end": "1832000"
  },
  {
    "text": "you know we can just copy this and maybe to delete this job you can just say",
    "start": "1832000",
    "end": "1837279"
  },
  {
    "text": "delete and let's copy this and run it right so",
    "start": "1837279",
    "end": "1842880"
  },
  {
    "text": "if you see uh here we what kubeflow allows us to do is",
    "start": "1842880",
    "end": "1848640"
  },
  {
    "text": "it allows us to scale our uh machine learning workflow uh you know dynamically so we don't have to worry",
    "start": "1848640",
    "end": "1855440"
  },
  {
    "text": "about the infrastructure that is needed for your uh ml uh training and uh with efs you get the flexibility",
    "start": "1855440",
    "end": "1863279"
  },
  {
    "text": "to attach or use the storage for your",
    "start": "1863279",
    "end": "1868559"
  },
  {
    "text": "team for different data scientists or maybe for different users saving your training data set in one",
    "start": "1868559",
    "end": "1875120"
  },
  {
    "text": "central location which can be accessed by you know uh different uh people right",
    "start": "1875120",
    "end": "1880720"
  },
  {
    "text": "so if you see here in the efs uh this is the place where i have",
    "start": "1880720",
    "end": "1885840"
  },
  {
    "text": "my training data set so you can not only access this from your uh you know keep",
    "start": "1885840",
    "end": "1891360"
  },
  {
    "text": "flow uh users but also you can let's say for troubleshooting you want to uh you know attach this to an ec2 instance and",
    "start": "1891360",
    "end": "1898159"
  },
  {
    "text": "want to explore you know something so maybe you want to see uh you know what the training data set",
    "start": "1898159",
    "end": "1904080"
  },
  {
    "text": "is for some ad hoc uh you know our task so you can always click on attach and uh",
    "start": "1904080",
    "end": "1909840"
  },
  {
    "text": "you know copy this command and mount this file system as an nfs uh storage",
    "start": "1909840",
    "end": "1915360"
  },
  {
    "text": "into your ec2 instance and provided that you have all the permissions granted uh so the idea here is uh when you use efs",
    "start": "1915360",
    "end": "1922880"
  },
  {
    "text": "the same storage you can access from the you know containers from your ec2 instances lambda functions and all of",
    "start": "1922880",
    "end": "1929519"
  },
  {
    "text": "that which gives you a lot of flexibility right so and it you don't have to provision it beforehand so if you",
    "start": "1929519",
    "end": "1935840"
  },
  {
    "text": "mention if you see here uh nowhere you know we uh we mentioned the size of the file system right so it will scale up",
    "start": "1935840",
    "end": "1942399"
  },
  {
    "text": "and scale down uh you know automatically uh also when we created this a volume uh",
    "start": "1942399",
    "end": "1948559"
  },
  {
    "text": "we have we we mentioned the size uh just to make kubernetes happy because uh for q flow",
    "start": "1948559",
    "end": "1955200"
  },
  {
    "text": "or for kubernetes in general um you need to mention the size of the pvcs but that",
    "start": "1955200",
    "end": "1960559"
  },
  {
    "text": "is not from the ek standpoint of from efs standpoint uh you know it is just",
    "start": "1960559",
    "end": "1966720"
  },
  {
    "text": "ignored because there is no requirement for size right so that's all about it",
    "start": "1966720",
    "end": "1972080"
  },
  {
    "text": "and if you want to go through this whole demo uh this is the uh location so you can get into amazon efs",
    "start": "1972080",
    "end": "1978960"
  },
  {
    "text": "developer zone uh inside that uh we have a machine learning with kubeflow uh on",
    "start": "1978960",
    "end": "1984000"
  },
  {
    "text": "eks with efs section and uh you know this is uh you know this tutorial will guide you through a",
    "start": "1984000",
    "end": "1990880"
  },
  {
    "text": "setting of the whole environment on cloud nine and also the training job and few other things",
    "start": "1990880",
    "end": "1996559"
  },
  {
    "text": "so if you want to try out uh feel free to go over here and give it a try and to",
    "start": "1996559",
    "end": "2002399"
  },
  {
    "text": "come to this page um you can go into this uh landing page uh yeah amazon efs",
    "start": "2002399",
    "end": "2008640"
  },
  {
    "text": "developer zone and if you scroll down you will get some information about efs uh like what it is how it works in",
    "start": "2008640",
    "end": "2015200"
  },
  {
    "text": "little bit of details and if you scroll down you will see a section of different",
    "start": "2015200",
    "end": "2022080"
  },
  {
    "text": "integration so this is amazon efs with containers and here you can see uh",
    "start": "2022080",
    "end": "2027440"
  },
  {
    "text": "machine learning at scale using your flow so you can always click here and you will go to that page which we have",
    "start": "2027440",
    "end": "2032480"
  },
  {
    "text": "just seen and uh you know give uh you know do it in your account",
    "start": "2032480",
    "end": "2037679"
  },
  {
    "text": "okay so uh that's about it so let's go back to our slide",
    "start": "2037679",
    "end": "2043440"
  },
  {
    "text": "all right so um now that you have learned a little bit about you know how you can make use of efs with the ks4",
    "start": "2043679",
    "end": "2050638"
  },
  {
    "text": "queue flow uh there are plenty of other uh you know kubernetes or container",
    "start": "2050639",
    "end": "2056240"
  },
  {
    "text": "specific tutorials which are available on amazon efs developer zone which we have just seen a while back during the",
    "start": "2056240",
    "end": "2062960"
  },
  {
    "text": "demo but feel free to access this page and you know share your experience and if you would like to contribute you know",
    "start": "2062960",
    "end": "2069919"
  },
  {
    "text": "you know maybe you can send a pr request with your demo and we",
    "start": "2069919",
    "end": "2075440"
  },
  {
    "text": "will uh add that in the repository um so thank you so much for your time uh",
    "start": "2075440",
    "end": "2081040"
  },
  {
    "text": "i hope you uh you learned a little bit uh about qflow eks and efs and i look",
    "start": "2081040",
    "end": "2087599"
  },
  {
    "text": "forward to you know hear from you about your feedback once you you know",
    "start": "2087599",
    "end": "2093040"
  },
  {
    "text": "do this in your account and share your experience thank you so much once again and uh have a wonderful day ahead",
    "start": "2093040",
    "end": "2102319"
  }
]