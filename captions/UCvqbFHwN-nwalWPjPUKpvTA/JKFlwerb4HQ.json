[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hello everyone my name is ryan turner and i'm a software engineer at uber and a contributor to this fire project",
    "start": "2560",
    "end": "8800"
  },
  {
    "text": "and i'm excited to talk to you today about some of the extensions and integrations available with spire",
    "start": "8800",
    "end": "15200"
  },
  {
    "text": "and how you can leverage those to distribute workload identity in a uniform way across your environments",
    "start": "15200",
    "end": "23600"
  },
  {
    "text": "so first i kind of want to just touch on some common integration challenges that i think many of you probably relate to so you",
    "start": "24560",
    "end": "31519"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "may be using multiple environments and those may be private or public clouds they may be on-prem",
    "start": "31519",
    "end": "36960"
  },
  {
    "text": "infrastructure you could be running in a variety of environments you may have",
    "start": "36960",
    "end": "42239"
  },
  {
    "text": "your own in-house tooling that is proprietary and not open source you may have some open source tooling",
    "start": "42239",
    "end": "48320"
  },
  {
    "text": "you may be using cloud native tooling so all these different systems are in play",
    "start": "48320",
    "end": "54239"
  },
  {
    "text": "you may have a mix of legacy and cloud native applications so things that are designed to run",
    "start": "54239",
    "end": "60800"
  },
  {
    "text": "natively in one public cloud or potentially that run a kubernetes cluster",
    "start": "60800",
    "end": "66880"
  },
  {
    "text": "or you may have legacy workloads which don't use these newer technologies yet",
    "start": "66880",
    "end": "72720"
  },
  {
    "text": "and so how do you actually provide identity to all of these kinds of environments and applications and how",
    "start": "72720",
    "end": "79600"
  },
  {
    "text": "do you enforce uniform authentication across all your remote procedure calls which would be",
    "start": "79600",
    "end": "87200"
  },
  {
    "text": "happening in your microservice ecosystem so i am excited to tell you that spiffy",
    "start": "87200",
    "end": "93360"
  },
  {
    "text": "inspire can provide consistent strong identity and help you solve",
    "start": "93360",
    "end": "98640"
  },
  {
    "text": "your identity needs in all these use cases",
    "start": "98640",
    "end": "103040"
  },
  {
    "text": "so what are we going to talk about today first i'd like to just give a brief overview of what spiffy and",
    "start": "104320",
    "end": "109759"
  },
  {
    "text": "spire are for those who are not too familiar and just kind of talk about some of the terminology that we'll be",
    "start": "109759",
    "end": "115040"
  },
  {
    "text": "using throughout the talk then i'm going to go into some of the integrations that's fire provides",
    "start": "115040",
    "end": "120560"
  },
  {
    "text": "and some of the external systems that spire can integrate with",
    "start": "120560",
    "end": "125600"
  },
  {
    "text": "then i'm going to talk about different ways that spire can be extended and the kind of functionality that you",
    "start": "125600",
    "end": "131680"
  },
  {
    "text": "can customize in your deployment of spire then i'm going to talk about",
    "start": "131680",
    "end": "137040"
  },
  {
    "text": "downstream integrations so how spire can be used once it's up and running in your",
    "start": "137040",
    "end": "142080"
  },
  {
    "text": "environment how you can actually enforce authentication across your ecosystem with spire issued",
    "start": "142080",
    "end": "148000"
  },
  {
    "text": "identities and then i'm going to open up to q a at the end",
    "start": "148000",
    "end": "153519"
  },
  {
    "text": "so let's go ahead and get started so first of all what is spiffy spiffy is the secure",
    "start": "153599",
    "end": "159920"
  },
  {
    "text": "production identity framework for everyone so it's a cool acronym what it really is",
    "start": "159920",
    "end": "165040"
  },
  {
    "text": "though is that it defines three key things one is an identifier format which is",
    "start": "165040",
    "end": "170720"
  },
  {
    "text": "called a spiffy id and this is a uri-based format which",
    "start": "170720",
    "end": "175840"
  },
  {
    "text": "has a scheme component that just is called spiffy and then you have this trust domain",
    "start": "175840",
    "end": "181200"
  },
  {
    "text": "concept which is a logical way to organize identities in an organization",
    "start": "181200",
    "end": "187360"
  },
  {
    "text": "and then some path which has no semantic value but something that you can define for your",
    "start": "187360",
    "end": "192720"
  },
  {
    "text": "own use cases to distinguish different workloads from other workloads in your system",
    "start": "192720",
    "end": "200400"
  },
  {
    "text": "then the second part of the specification it defines an identity document standard so how",
    "start": "200400",
    "end": "206560"
  },
  {
    "text": "does this identity get represented uh and this is what we refer to as an svid",
    "start": "206560",
    "end": "211920"
  },
  {
    "text": "so that stands for spiffy verifiable identity document and that comes in two different forms",
    "start": "211920",
    "end": "217840"
  },
  {
    "text": "one is an x509 certificate and another is a json web token",
    "start": "217840",
    "end": "223519"
  },
  {
    "text": "and then the third part of the spiffy specification is this workload api which talks about",
    "start": "223519",
    "end": "230239"
  },
  {
    "text": "how to retrieve and issue s-vids throughout an environment",
    "start": "230239",
    "end": "236640"
  },
  {
    "text": "so next what is spire so spire is the spiffy runtime environment and",
    "start": "237760",
    "end": "243920"
  },
  {
    "start": "238000",
    "end": "238000"
  },
  {
    "text": "it's an open source implementation of the spiffy specification so it implements those identity",
    "start": "243920",
    "end": "251599"
  },
  {
    "text": "primitives that are defined in the spec it is essentially a control plane",
    "start": "251599",
    "end": "256639"
  },
  {
    "text": "uh what we like to call an identity plane for a managing distribution and rotation",
    "start": "256639",
    "end": "262560"
  },
  {
    "text": "of identities throughout an environment and it's designed as a scalable distributed system which",
    "start": "262560",
    "end": "268160"
  },
  {
    "text": "is intended to meet the needs of large environments and with many applications and",
    "start": "268160",
    "end": "273759"
  },
  {
    "text": "microservices running concurrently",
    "start": "273759",
    "end": "277199"
  },
  {
    "text": "so just quickly want to talk about what is the architecture of spire at a high level there are two components",
    "start": "278880",
    "end": "284960"
  },
  {
    "text": "inspire there's a server and an agent the server is responsible for managing",
    "start": "284960",
    "end": "290400"
  },
  {
    "text": "identity registrations and issuing identities through",
    "start": "290400",
    "end": "295600"
  },
  {
    "text": "the form of an s-vid an x-509 or a gwt so it's essentially a certificate",
    "start": "295600",
    "end": "301520"
  },
  {
    "text": "authority which provisions these identities and two different agents that run throughout",
    "start": "301520",
    "end": "307840"
  },
  {
    "text": "an environment so this agent component is the second component of spire which talks to the server and requests",
    "start": "307840",
    "end": "316240"
  },
  {
    "text": "different identities that it can manage on the host and so how does the user's workloads come into",
    "start": "316240",
    "end": "324160"
  },
  {
    "text": "the picture here so the workloads will connect to the workload api which was defined in",
    "start": "324160",
    "end": "329440"
  },
  {
    "text": "the 50 specification and inspire it's exposed as a unix domain socket today",
    "start": "329440",
    "end": "335120"
  },
  {
    "text": "on the host and so that the unix domain socket is publicly available",
    "start": "335120",
    "end": "340160"
  },
  {
    "text": "to anything on the host it and the workload connects to it and the agent tries to identify what",
    "start": "340160",
    "end": "347199"
  },
  {
    "text": "that workload is and match it against a set of registrations that is authorized to issue identities for if any of those",
    "start": "347199",
    "end": "354080"
  },
  {
    "text": "identities uh match the workload that is trying to",
    "start": "354080",
    "end": "359360"
  },
  {
    "text": "receive an identity then those identities are distributed to the workload over the workload api",
    "start": "359360",
    "end": "367840"
  },
  {
    "text": "so i just want to show like a big picture here there's a lot going on it's the details are not super important",
    "start": "368960",
    "end": "375120"
  },
  {
    "text": "here but i just want to kind of hammer home that spire can really be versatile and work in a variety of environments",
    "start": "375120",
    "end": "381759"
  },
  {
    "text": "here so i'm just showing like one example maybe you have deployments in different private and",
    "start": "381759",
    "end": "387759"
  },
  {
    "text": "public clouds so here i have pictured an aws deployment where you have kubernetes cluster",
    "start": "387759",
    "end": "393600"
  },
  {
    "text": "with some nodes running different workloads and those workloads are docker based workloads",
    "start": "393600",
    "end": "399759"
  },
  {
    "text": "and so in that environment spire can function it has a spire server deployed in the",
    "start": "399759",
    "end": "405280"
  },
  {
    "text": "kubernetes cluster and then there are agents which are deployed on all the nodes in that cluster",
    "start": "405280",
    "end": "410880"
  },
  {
    "text": "and the workloads connect to those agents on those nodes uh maybe you also have a deployment in",
    "start": "410880",
    "end": "416800"
  },
  {
    "text": "microsoft azure for example and in azure you're just using it as more of an infrastructure as a service",
    "start": "416800",
    "end": "423360"
  },
  {
    "text": "platform so you're not really doing things in necessarily a cloud-native way but you have workloads running there in",
    "start": "423360",
    "end": "429280"
  },
  {
    "text": "virtual machines so spire also supports this kind of use case",
    "start": "429280",
    "end": "434639"
  },
  {
    "text": "and so and here imagine you have some virtual machine running spire server which is um you know addressable and",
    "start": "434639",
    "end": "443120"
  },
  {
    "text": "routable from other virtual machines in that environment and then the agents on different virtual",
    "start": "443120",
    "end": "448800"
  },
  {
    "text": "machines can connect to the server and receive the identities for the workloads that run and the vms",
    "start": "448800",
    "end": "455280"
  },
  {
    "text": "and they could be a variety of different kinds of workloads some docker maybe or maybe they're just native unix",
    "start": "455280",
    "end": "460560"
  },
  {
    "text": "processes and then similar story here for on-prem uh",
    "start": "460560",
    "end": "465680"
  },
  {
    "text": "you may just have bare metal hosts running in a data center and so how do you manage",
    "start": "465680",
    "end": "472160"
  },
  {
    "text": "spire there well spire can also work there you can have different hosts running spire server",
    "start": "472160",
    "end": "478560"
  },
  {
    "text": "and then you can have agents running on the hosts in your infrastructure and again you can support a variety of these workloads so",
    "start": "478560",
    "end": "485599"
  },
  {
    "text": "it's very adaptable so i want to talk about what are the",
    "start": "485599",
    "end": "492160"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "different types of integrations available with spire so really we can categorize these",
    "start": "492160",
    "end": "497759"
  },
  {
    "text": "into two different buckets uh one is integrations that enable the operations",
    "start": "497759",
    "end": "502879"
  },
  {
    "text": "of spire so this is controlling some of the key functionality and behavior of spire",
    "start": "502879",
    "end": "508560"
  },
  {
    "text": "and some of the security properties as well to meet the compliance requirements that you may",
    "start": "508560",
    "end": "513680"
  },
  {
    "text": "have or your own internal requirements um and then so really that's all about",
    "start": "513680",
    "end": "519360"
  },
  {
    "text": "getting spire up and running that's just how do i manage spire and make it work in my infrastructure",
    "start": "519360",
    "end": "524800"
  },
  {
    "text": "in the secure way that you know i'm comfortable with the second part here is how do you",
    "start": "524800",
    "end": "531120"
  },
  {
    "text": "actually consume spire issued identities in a way that's seamless so uh ideally not every workload needs",
    "start": "531120",
    "end": "539360"
  },
  {
    "text": "to implement their own integration with spire just to get their identity and get bootstrapped maybe that works in a small environment",
    "start": "539360",
    "end": "545680"
  },
  {
    "text": "where you just have you know very few number of services or applications and you can make those code changes and",
    "start": "545680",
    "end": "552320"
  },
  {
    "text": "all the services to get identity but as you scale further up and you have more and more services in your",
    "start": "552320",
    "end": "558160"
  },
  {
    "text": "environment that becomes very difficult to manage and so how do we actually propagate",
    "start": "558160",
    "end": "563279"
  },
  {
    "text": "these s vids across remote procedure called boundaries and provide secure authentication across",
    "start": "563279",
    "end": "570320"
  },
  {
    "text": "our service requests and then how do you use svids",
    "start": "570320",
    "end": "575680"
  },
  {
    "text": "outside of your own ecosystem for requests to external services so i'm going to talk a little bit about",
    "start": "575680",
    "end": "581680"
  },
  {
    "text": "how you might be able to do that as well",
    "start": "581680",
    "end": "585600"
  },
  {
    "text": "so first operations integrations what are some things that we might want to control with respect to house",
    "start": "586720",
    "end": "593279"
  },
  {
    "text": "fire functions so one is that you may have in your organization",
    "start": "593279",
    "end": "599519"
  },
  {
    "text": "already some public key infrastructure likely you do and that might be a public",
    "start": "599519",
    "end": "604800"
  },
  {
    "text": "web pki uh chained to some well-known trusted ca on the internet uh or it",
    "start": "604800",
    "end": "611200"
  },
  {
    "text": "might be a private pki um so you may have your own root ca in your infrastructure or your organization and",
    "start": "611200",
    "end": "618880"
  },
  {
    "text": "you have processes around how it's managed and maybe you want to manage all of your workload identities",
    "start": "618880",
    "end": "624079"
  },
  {
    "text": "in your environment such that they're all chained to this pki so this is a very common",
    "start": "624079",
    "end": "632000"
  },
  {
    "text": "integration point with spire another integration point we have to",
    "start": "632000",
    "end": "637120"
  },
  {
    "text": "consider here is we have this distributed system architecture where there are agents",
    "start": "637120",
    "end": "642720"
  },
  {
    "text": "running across different hosts vms virtual nodes throughout infrastructure",
    "start": "642720",
    "end": "648240"
  },
  {
    "text": "so how do we securely identify those agents and the nodes that they're running on so",
    "start": "648240",
    "end": "653680"
  },
  {
    "text": "that we can trust those agents with the identities that spire server will distribute",
    "start": "653680",
    "end": "659760"
  },
  {
    "text": "so this is all about kind of linking your host identity system to spire and establishing that bridge of",
    "start": "659760",
    "end": "665920"
  },
  {
    "text": "trust next another key integration",
    "start": "665920",
    "end": "671600"
  },
  {
    "text": "here is how you manage your identity registrations so this is something that we call host",
    "start": "671600",
    "end": "679200"
  },
  {
    "text": "categorization so this enables creating identity registrations",
    "start": "679200",
    "end": "684560"
  },
  {
    "text": "that we call node alias registrations and essentially what these node alias registrations are for are to give you",
    "start": "684560",
    "end": "691200"
  },
  {
    "text": "logical groupings of registrations per host or maybe for a group of hosts so that",
    "start": "691200",
    "end": "698160"
  },
  {
    "text": "identities are not globally available throughout your entire infrastructure you may scope those identities to certain",
    "start": "698160",
    "end": "704079"
  },
  {
    "text": "nodes running in your environment so this is about providing the host of",
    "start": "704079",
    "end": "710560"
  },
  {
    "text": "some additional metadata to be able to create these kind of node alias registrations for grouping registrations",
    "start": "710560",
    "end": "718399"
  },
  {
    "text": "another key functionality we might want to control is key management so how spire maintains its own private keys its ca",
    "start": "718639",
    "end": "725760"
  },
  {
    "text": "private key how it does signing operations and those kinds of things",
    "start": "725760",
    "end": "731839"
  },
  {
    "text": "another important integration point here is how workloads are securely identified",
    "start": "734160",
    "end": "741440"
  },
  {
    "text": "in the system so how does the agent actually determine that a given workload is uh something",
    "start": "741440",
    "end": "747839"
  },
  {
    "text": "that is trusted and has a registered identity in the platform um so we call this",
    "start": "747839",
    "end": "753519"
  },
  {
    "text": "workload attestation inspire and so this is all about clearing runtime attributes of a workload",
    "start": "753519",
    "end": "760800"
  },
  {
    "text": "to identify it against a set of registrations already inspired",
    "start": "760800",
    "end": "767839"
  },
  {
    "text": "and then lastly there are some event hooks so you may have some downstream processes or downstream",
    "start": "767839",
    "end": "774160"
  },
  {
    "text": "storage that you may want to link different key events inspire to",
    "start": "774160",
    "end": "780639"
  },
  {
    "text": "some workflows or you know storage and so this is kind of providing you these hooks so that you",
    "start": "780639",
    "end": "786399"
  },
  {
    "text": "can plug into the event life cycle of different things that happen inspire",
    "start": "786399",
    "end": "792399"
  },
  {
    "text": "so how does this all work um so spire has this plug-in framework which it uses um",
    "start": "793760",
    "end": "801040"
  },
  {
    "text": "throughout all these different operations and these plugins are defined with",
    "start": "801040",
    "end": "806720"
  },
  {
    "text": "interfaces in protocol buffer language and these plugins kind of are grouped into",
    "start": "806720",
    "end": "814160"
  },
  {
    "text": "two different categories there's like built-in plugins and those are plugins that are natively",
    "start": "814160",
    "end": "819519"
  },
  {
    "text": "available inspire so if you go deploy aspire with uh you know today from",
    "start": "819519",
    "end": "825040"
  },
  {
    "text": "the latest release you'll get a set of different plugins that you can configure and so you just need to specify in your",
    "start": "825040",
    "end": "831440"
  },
  {
    "text": "configuration file for the server and the agent what plugins you want to use in your environment",
    "start": "831440",
    "end": "838000"
  },
  {
    "text": "and then there are these external plugins which are things that you can develop or things that you can source from the",
    "start": "838000",
    "end": "843920"
  },
  {
    "text": "open source community if other people have already developed a plug-in for a specific operation that you are",
    "start": "843920",
    "end": "849839"
  },
  {
    "text": "interested in you can leverage that uh using this external plug-in and loading mechanism",
    "start": "849839",
    "end": "856399"
  },
  {
    "text": "and the way that this plug-in framework works is it links like the core business logic of spire",
    "start": "856399",
    "end": "861760"
  },
  {
    "text": "to these plugins over a grpc interface so that's what enables both the in-memory and external plug-ins",
    "start": "861760",
    "end": "870560"
  },
  {
    "text": "and these plugins are all designed on top of this framework called apache",
    "start": "870560",
    "end": "876240"
  },
  {
    "text": "corp goblet plugin and that's a pretty commonly used plugin",
    "start": "876240",
    "end": "881760"
  },
  {
    "text": "system available in go and is used widely in hashicorp and by other uh",
    "start": "881760",
    "end": "888240"
  },
  {
    "text": "projects in the open source community so i have a link to the reference for that project later on in the slides if",
    "start": "888240",
    "end": "894160"
  },
  {
    "text": "you're interested in looking into that more so i want to kind of just touch on what",
    "start": "894160",
    "end": "900800"
  },
  {
    "text": "are the different plug-in types for each of these components we talked about inspire the server and the agent",
    "start": "900800",
    "end": "906399"
  },
  {
    "text": "so this is just kind of uh intended to be an illustration i'm going to dive into all these different plug-in types more",
    "start": "906399",
    "end": "912079"
  },
  {
    "text": "detail here coming up um this diagram is slightly outdated in",
    "start": "912079",
    "end": "917519"
  },
  {
    "text": "that the plug-in on the left there the data store plug-in doesn't exist anymore so you can kind of ignore that part",
    "start": "917519",
    "end": "922720"
  },
  {
    "text": "uh and there should also be a notifier plug-in in here as well but overall these are the plugins that are",
    "start": "922720",
    "end": "928800"
  },
  {
    "text": "available today in the server there's the key manager and upstream authority which is kind of how you link to your",
    "start": "928800",
    "end": "934720"
  },
  {
    "text": "pki and i'll talk about that later and then these node plugins called nodatester node resolver",
    "start": "934720",
    "end": "941040"
  },
  {
    "text": "which are used to authenticate nodes in your environment and also label them with",
    "start": "941040",
    "end": "946560"
  },
  {
    "text": "different key metadata and then the agent has its own set of",
    "start": "946560",
    "end": "952720"
  },
  {
    "text": "plugins available as well and these are the three that are supported today the noda tester",
    "start": "952720",
    "end": "958399"
  },
  {
    "text": "which pairs with server node tester plug-in the workload tester plugin which",
    "start": "958399",
    "end": "964079"
  },
  {
    "text": "identifies workloads that connect to the workload api in the host and then the key manager which also manages the private keys and signing",
    "start": "964079",
    "end": "970720"
  },
  {
    "text": "operations in agent",
    "start": "970720",
    "end": "975279"
  },
  {
    "start": "975000",
    "end": "975000"
  },
  {
    "text": "so upstream authority is the first plugin i'll talk about here and this applies to aspire server",
    "start": "976160",
    "end": "982800"
  },
  {
    "text": "so this is how you control the integration with spires certificate authority to the",
    "start": "982800",
    "end": "989120"
  },
  {
    "text": "chain of trust that you may already have in your organization and so this authority establishes an",
    "start": "989120",
    "end": "996079"
  },
  {
    "text": "interface uh this plugin establishes an interface that allows fire to chain to upstream certificate",
    "start": "996079",
    "end": "1003199"
  },
  {
    "text": "authorities it also allows spire to publish gwt",
    "start": "1003199",
    "end": "1008560"
  },
  {
    "text": "signing keys that it has generated or um you know and publish those to some",
    "start": "1008560",
    "end": "1014000"
  },
  {
    "text": "third-party store um it also can handle the certificate signing requests for this buyer ca",
    "start": "1014000",
    "end": "1020560"
  },
  {
    "text": "so if you want to avoid or off uh avoid that signing operation happening in the",
    "start": "1020560",
    "end": "1027360"
  },
  {
    "text": "spire server process itself um or you want to offload that to some other system you can do that",
    "start": "1027360",
    "end": "1033120"
  },
  {
    "text": "these are the available built-in plugins today there is a way to provide an upstream trust bundle and private key on disk",
    "start": "1033120",
    "end": "1040558"
  },
  {
    "text": "that's kind of like the simplest way to get going you can also use some third-party secret stores for this as well",
    "start": "1040559",
    "end": "1047600"
  },
  {
    "text": "and the services that we support natively today are aws pca and aw secret manager we also support",
    "start": "1047600",
    "end": "1055600"
  },
  {
    "text": "hashicorp vault natively and spire is also an additional plugin that's",
    "start": "1055600",
    "end": "1061440"
  },
  {
    "text": "supported so you can have this nested spire deployment where you have kind of a central fire that",
    "start": "1061440",
    "end": "1067039"
  },
  {
    "text": "manages children's fire deployments and all those children inspired appointments",
    "start": "1067039",
    "end": "1072240"
  },
  {
    "text": "chain up to some root inspired appointment so if you want to handle everything with",
    "start": "1072240",
    "end": "1078640"
  },
  {
    "text": "inspire you can do that as well",
    "start": "1078640",
    "end": "1081840"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "the next type of plugin here is the node tester and this applies to the server and the agent",
    "start": "1084080",
    "end": "1089360"
  },
  {
    "text": "and the this is something that implements kind of a challenge response protocol so",
    "start": "1089360",
    "end": "1095600"
  },
  {
    "text": "you can define how the agent provides a map station material to the server to prove that",
    "start": "1095600",
    "end": "1100640"
  },
  {
    "text": "it's a trusted node in the system and that could be a physical node",
    "start": "1100640",
    "end": "1105840"
  },
  {
    "text": "like an actual bare metal host or it could be a virtual node like a kubernetes node or a virtual",
    "start": "1105840",
    "end": "1112400"
  },
  {
    "text": "machine running in your on-prem or public cloud wherever",
    "start": "1112400",
    "end": "1117919"
  },
  {
    "text": "so this defines the bridge of trust between your host identity system and spire so this is how you authenticate",
    "start": "1117919",
    "end": "1124320"
  },
  {
    "text": "nodes in your system and so that these are the different plugins which are supported",
    "start": "1124320",
    "end": "1129440"
  },
  {
    "text": "right now we have native plugins for aws azure and gcp virtual machines",
    "start": "1129440",
    "end": "1136080"
  },
  {
    "text": "and these generally all work by querying a local metadata endpoint in the virtual machine and using a",
    "start": "1136080",
    "end": "1142799"
  },
  {
    "text": "trustline first use security model to provide that identity metadata to",
    "start": "1142799",
    "end": "1148400"
  },
  {
    "text": "aspire server and spire server can authenticate that and i'll show you an example",
    "start": "1148400",
    "end": "1153520"
  },
  {
    "text": "flow of that after this slide some of the other plugins that are",
    "start": "1153520",
    "end": "1158799"
  },
  {
    "text": "supported today are join token this is essentially a one-time pre-shared key",
    "start": "1158799",
    "end": "1164320"
  },
  {
    "text": "that you can generate and you provide that key to the agent and then the server",
    "start": "1164320",
    "end": "1170240"
  },
  {
    "text": "knows about it because it was the one that generated the key and so that's just a simple way to",
    "start": "1170240",
    "end": "1175520"
  },
  {
    "text": "authenticate a node there's also native integration with kubernetes um there's a couple different ways this",
    "start": "1175520",
    "end": "1181840"
  },
  {
    "text": "can work one is through a projected service account token which is kind of the recommended way there's also kind of a more legacy",
    "start": "1181840",
    "end": "1187919"
  },
  {
    "text": "plug-in for service count tokens such as the older wave providing a node identity",
    "start": "1187919",
    "end": "1195360"
  },
  {
    "text": "in kubernetes and then we also have ssh and x509 proof of possession",
    "start": "1195360",
    "end": "1202799"
  },
  {
    "text": "plug-ins as well so if you are running on bare metal and you have some other host identity",
    "start": "1202799",
    "end": "1209360"
  },
  {
    "text": "system like an ssh certificate authority and or maybe some",
    "start": "1209360",
    "end": "1214480"
  },
  {
    "text": "out of band x 509 host identity then you can use those as",
    "start": "1214480",
    "end": "1219840"
  },
  {
    "text": "out-of-station material as well so this is just an example of how the",
    "start": "1219840",
    "end": "1225039"
  },
  {
    "text": "noda tester works for aws so when the agent comes online its node",
    "start": "1225039",
    "end": "1230159"
  },
  {
    "text": "tester plug-in is configured here to be aws and that aws plugin",
    "start": "1230159",
    "end": "1235360"
  },
  {
    "text": "reaches out to the aws instance identity service on the host and that",
    "start": "1235360",
    "end": "1241840"
  },
  {
    "text": "provides some identity to the agent which is signed by the es using its um its private keys",
    "start": "1241840",
    "end": "1250480"
  },
  {
    "text": "and so server can will receive that identity from the agent and it'll validate that it was",
    "start": "1250480",
    "end": "1257840"
  },
  {
    "text": "a valid identity provided by aws and if it's able to validate this successfully it will return an x509svid",
    "start": "1257840",
    "end": "1265200"
  },
  {
    "text": "to the agent which represents the identity of the agent and then the agent is then authorized to manage identities and distribute",
    "start": "1265200",
    "end": "1272080"
  },
  {
    "text": "identities to other workloads on that host so node resolver is the next plug-in",
    "start": "1272080",
    "end": "1279200"
  },
  {
    "start": "1276000",
    "end": "1276000"
  },
  {
    "text": "here and this kind of it comes from the attestation flow which i just showed you so once that attestation completes",
    "start": "1279200",
    "end": "1287440"
  },
  {
    "text": "uh in the server you can configure these node resolver plugins which append additional metadata about those",
    "start": "1287440",
    "end": "1293039"
  },
  {
    "text": "nodes inspire and so why would you want to do this so the reason why this becomes useful",
    "start": "1293039",
    "end": "1299440"
  },
  {
    "text": "is because it allows you to define registrations inspire that act as",
    "start": "1299440",
    "end": "1306240"
  },
  {
    "text": "node aliases which serve as kind of a parent of different workloads that you want to",
    "start": "1306240",
    "end": "1312159"
  },
  {
    "text": "group together on a specific subset of hosts so you can control these",
    "start": "1312159",
    "end": "1317520"
  },
  {
    "text": "aliases kind of at the node level and say like host a is able to serve identities for uh workloads one",
    "start": "1317520",
    "end": "1324640"
  },
  {
    "text": "two and three and host b is able to serve identities for four workloads four five and six etc so this",
    "start": "1324640",
    "end": "1331039"
  },
  {
    "text": "gives you some controls to actually manage where identities are distributed throughout the system",
    "start": "1331039",
    "end": "1339200"
  },
  {
    "text": "so here's kind of like an example of how you might do that so let if you look at the top registration here",
    "start": "1340080",
    "end": "1346640"
  },
  {
    "text": "this is a node alias registration and you see that spiffy id is for my domain slash host",
    "start": "1346640",
    "end": "1353600"
  },
  {
    "text": "a so this is we're calling this host a in her infrastructure and the selectors here",
    "start": "1353600",
    "end": "1361039"
  },
  {
    "text": "are appended by the node resolver which um i've let's say i've created some node resolver in this example it's",
    "start": "1361039",
    "end": "1367280"
  },
  {
    "text": "called my fancy node resolver and so it depends this selector which says hey i know something about this",
    "start": "1367280",
    "end": "1373600"
  },
  {
    "text": "host it's called host a so i'm going to give it this selector so what this means is when an",
    "start": "1373600",
    "end": "1381120"
  },
  {
    "text": "agent comes to retrieve its identity registrations from spire server it's first going to be matched against",
    "start": "1381120",
    "end": "1387600"
  },
  {
    "text": "this node alias registration and then any registrations which are specifying this regis",
    "start": "1387600",
    "end": "1394000"
  },
  {
    "text": "this node alias registration as its parent will also be sent back to that agent",
    "start": "1394000",
    "end": "1399120"
  },
  {
    "text": "and so we can define these workloads with parent ids of spiffy my domain host a for workloads a",
    "start": "1399120",
    "end": "1406000"
  },
  {
    "text": "and b and then that allows us to scope only the amb workload identities to this host a",
    "start": "1406000",
    "end": "1416640"
  },
  {
    "start": "1415000",
    "end": "1415000"
  },
  {
    "text": "so next is the workload of tester and this is an agent side plug-in and so it's responsibility is to reach",
    "start": "1416640",
    "end": "1424000"
  },
  {
    "text": "out to some trusted authority and interrogate it for some process selector metadata that we can",
    "start": "1424000",
    "end": "1430080"
  },
  {
    "text": "use to match against registrations in spire server",
    "start": "1430080",
    "end": "1435840"
  },
  {
    "text": "so some what are some example authorities that we trust inspire uh might be an operating system",
    "start": "1435840",
    "end": "1441919"
  },
  {
    "text": "kernel like the linux kernel it might be some sort of orchestration platform and",
    "start": "1441919",
    "end": "1447039"
  },
  {
    "text": "so here are the examples of the plugins that we support today we support docker and kubernetes and",
    "start": "1447039",
    "end": "1453520"
  },
  {
    "text": "unix-based workloads so workloads that are just native processes on a host",
    "start": "1453520",
    "end": "1460240"
  },
  {
    "text": "and so this is how the workload of tester flow works at a high level just to give you an idea so at the top here this green box is",
    "start": "1461840",
    "end": "1469039"
  },
  {
    "text": "your workload and it connects to the workload api running on the unix domain sockets",
    "start": "1469039",
    "end": "1474880"
  },
  {
    "text": "by inspire agent on that host that work really api basically has uh one api",
    "start": "1474880",
    "end": "1481200"
  },
  {
    "text": "which says give me an identity and so that's what the workload calls and it says i'd like an svid to identify",
    "start": "1481200",
    "end": "1488240"
  },
  {
    "text": "myself to other actors within my system",
    "start": "1488240",
    "end": "1493679"
  },
  {
    "text": "inspireagent then uses this workload tester system and looks for all the configured",
    "start": "1493679",
    "end": "1498799"
  },
  {
    "text": "workload tester plugins that it has and it interrogates each of those external systems",
    "start": "1498799",
    "end": "1504799"
  },
  {
    "text": "to try to discover attributes about this process that's running this",
    "start": "1504799",
    "end": "1514159"
  },
  {
    "text": "kubernetes workload testers uh configured on this particular agent and so both of these",
    "start": "1514159",
    "end": "1521520"
  },
  {
    "text": "are interrogated and we find some selectors from each of them through the linux kernel uh and through",
    "start": "1521520",
    "end": "1527200"
  },
  {
    "text": "the kublet api and so those give us some additional metadata and based on that metadata we",
    "start": "1527200",
    "end": "1533360"
  },
  {
    "text": "translate that into something called a selector which is uh part of an identity registration",
    "start": "1533360",
    "end": "1538559"
  },
  {
    "text": "inspire and so if the registrations and if there's any",
    "start": "1538559",
    "end": "1543600"
  },
  {
    "text": "registrations inspire which match the set of selectors returned from these third-party systems then we can",
    "start": "1543600",
    "end": "1551600"
  },
  {
    "text": "issue an identity for this workload based on that registration",
    "start": "1551600",
    "end": "1557840"
  },
  {
    "start": "1558000",
    "end": "1558000"
  },
  {
    "text": "next is a key manager plugin here and this applies to the server and the agent components",
    "start": "1559200",
    "end": "1564799"
  },
  {
    "text": "so this is responsible for managing the private key operations and storage of private keys throughout",
    "start": "1564799",
    "end": "1570880"
  },
  {
    "text": "spire um and so some of the key things that we want to",
    "start": "1570880",
    "end": "1576480"
  },
  {
    "text": "manage here are the private key generation so how it gets generated what kind of a key it is and then also",
    "start": "1576480",
    "end": "1583200"
  },
  {
    "text": "um doing things like computing digital signatures on uh different identity documents that",
    "start": "1583200",
    "end": "1590960"
  },
  {
    "text": "we make is something we may want to offload to a third party system uh and so or the built-in plug-ins today",
    "start": "1590960",
    "end": "1598480"
  },
  {
    "text": "for the key manager are the disk and memory plug-ins so you can store the keys on disk",
    "start": "1598480",
    "end": "1603919"
  },
  {
    "text": "which allows you to retrieve them on the host after the server or the agent",
    "start": "1603919",
    "end": "1610720"
  },
  {
    "text": "um you know goes down and comes back up it can retrieve its identity back from disk memory is",
    "start": "1610720",
    "end": "1617200"
  },
  {
    "text": "another option so if you want to just keep the keys in memory that's also possible",
    "start": "1617200",
    "end": "1623039"
  },
  {
    "text": "and then the last plugin here we'll talk about is the notifier plugin and this is a server side plugin today",
    "start": "1624960",
    "end": "1631360"
  },
  {
    "text": "what this does is it publishes notifications of different key operations in spire and",
    "start": "1631360",
    "end": "1638399"
  },
  {
    "text": "it currently is only used to publish trust bundle events so when a bundle is changed um",
    "start": "1638399",
    "end": "1645120"
  },
  {
    "text": "you can publish that new bundle out to some third-party storage uh so the plugins that you're supporting",
    "start": "1645120",
    "end": "1650480"
  },
  {
    "text": "here today are google cloud storage or in kubernetes bundle um where you can write out this bundle",
    "start": "1650480",
    "end": "1657200"
  },
  {
    "text": "submit to some external storage",
    "start": "1657200",
    "end": "1661039"
  },
  {
    "start": "1662000",
    "end": "1662000"
  },
  {
    "text": "uh so how would you actually implement aspire plug-in so say maybe like you have some use case",
    "start": "1662320",
    "end": "1667600"
  },
  {
    "text": "that is not solved by these built-in plug-ins and you need to extend spire for",
    "start": "1667600",
    "end": "1672640"
  },
  {
    "text": "that case um so what you would need to do is in the github repository for spire",
    "start": "1672640",
    "end": "1679440"
  },
  {
    "text": "there are these plug-in interfaces defined at this proto spire location and then",
    "start": "1679440",
    "end": "1684720"
  },
  {
    "text": "under that there's an agent in the server directory uh and then different plug-in types underneath that um and",
    "start": "1684720",
    "end": "1691600"
  },
  {
    "text": "then so for whatever plug-in that you need to implement you would find that interface for the component",
    "start": "1691600",
    "end": "1698720"
  },
  {
    "text": "that you're trying to extend and you would implement that interface and then you would add a config stanza",
    "start": "1698720",
    "end": "1706399"
  },
  {
    "text": "in whatever component that you're implementing the plugin for and so this",
    "start": "1706399",
    "end": "1711919"
  },
  {
    "text": "is kind of one example like let's say you have a custom noda tester plug-in and you have called this my node tester this",
    "start": "1711919",
    "end": "1719200"
  },
  {
    "text": "is kind of how the config might look in whatever um and but i guess in this",
    "start": "1719200",
    "end": "1724799"
  },
  {
    "text": "case no tester applies to both server and agent so here the node tester is specified by",
    "start": "1724799",
    "end": "1731279"
  },
  {
    "text": "its name which is called node tester my node is ester and then there are three key things to",
    "start": "1731279",
    "end": "1737440"
  },
  {
    "text": "point out here one is you have a plug-in command which is a path to the binary on the host",
    "start": "1737440",
    "end": "1743600"
  },
  {
    "text": "that the spire server inspire agent processes can launch and then you can optionally provide a",
    "start": "1743600",
    "end": "1749840"
  },
  {
    "text": "sha-256 checks from of that binary so that you can",
    "start": "1749840",
    "end": "1754960"
  },
  {
    "text": "know that that binary is something that you expected and not something that's been modified on the host and then whatever data is",
    "start": "1754960",
    "end": "1763600"
  },
  {
    "text": "required for that plug-in you can provide in this plugin data section which is customizable for",
    "start": "1763600",
    "end": "1769840"
  },
  {
    "text": "whatever plugin that you are implementing okay so i want to quickly touch on also",
    "start": "1769840",
    "end": "1777039"
  },
  {
    "start": "1774000",
    "end": "1774000"
  },
  {
    "text": "some downstream integrations so this is kind of the second category of integrations that we're",
    "start": "1777039",
    "end": "1782320"
  },
  {
    "text": "talking about here so once you have fire up and running how do you actually use these identities",
    "start": "1782320",
    "end": "1787440"
  },
  {
    "text": "effectively so a very common paradigm now is this idea of the",
    "start": "1787440",
    "end": "1793440"
  },
  {
    "text": "service mesh where you have these proxies which manage the network connectivity and routing between",
    "start": "1793440",
    "end": "1799840"
  },
  {
    "text": "different services in your environment and you you know center you know the logging and you know centralized",
    "start": "1799840",
    "end": "1806399"
  },
  {
    "text": "operations of authentication and things like that so spire actually has a native integration with envoy",
    "start": "1806399",
    "end": "1812559"
  },
  {
    "text": "uh it implements the envoy secret discovery service it's called sds and so that's implemented by this",
    "start": "1812559",
    "end": "1819520"
  },
  {
    "text": "fireworkload api today and so what this means is you can transparently enable mutual tls",
    "start": "1819520",
    "end": "1826159"
  },
  {
    "text": "and using envoy through envoy configuration so when you have this deployment up and",
    "start": "1826159",
    "end": "1831600"
  },
  {
    "text": "running all you have to do is add this additional configuration which is documented and spot aspire documentation and you",
    "start": "1831600",
    "end": "1838159"
  },
  {
    "text": "can get mutual tls setup in your environment another example here is how do you use",
    "start": "1838159",
    "end": "1845760"
  },
  {
    "text": "an svid outside of your own infrastructure so if you have external services which are part of your environment which is",
    "start": "1845760",
    "end": "1852799"
  },
  {
    "text": "probably pretty likely if that supports open id connect federation you can",
    "start": "1852799",
    "end": "1858480"
  },
  {
    "text": "set up federation with inspire it supports federation and so there's an example that has been",
    "start": "1858480",
    "end": "1864240"
  },
  {
    "text": "put together it's pretty cool that actually shows how you can authenticate to aws management apis",
    "start": "1864240",
    "end": "1871519"
  },
  {
    "text": "using svids uh so in this case it's using a jwts fed",
    "start": "1871519",
    "end": "1878080"
  },
  {
    "text": "and there's more links later on for all this",
    "start": "1878080",
    "end": "1883440"
  },
  {
    "start": "1880000",
    "end": "1880000"
  },
  {
    "text": "so what are some future extensions we're considering there's a proposal going out currently called",
    "start": "1883440",
    "end": "1890320"
  },
  {
    "text": "in age list mode where you're able to request uh spire issued identity directly from",
    "start": "1890320",
    "end": "1896080"
  },
  {
    "text": "the server uh as opposed to from the agent um so this kind of enables things like the",
    "start": "1896080",
    "end": "1901200"
  },
  {
    "text": "serverless use case where you don't have like a dedicated node where the process is running it's",
    "start": "1901200",
    "end": "1906880"
  },
  {
    "text": "something that you know comes up and it's transparent to you you don't have control of that node entirely and then we also have",
    "start": "1906880",
    "end": "1915120"
  },
  {
    "text": "uh started exploring some integrations with apache data projects so in that hadoop kind of ecosystem",
    "start": "1915120",
    "end": "1921760"
  },
  {
    "text": "there's kerberos based identity so how do we translate the kerberos based identity",
    "start": "1921760",
    "end": "1927120"
  },
  {
    "text": "into spiffy identities and make that coexist in this",
    "start": "1927120",
    "end": "1932840"
  },
  {
    "text": "environment so to conclude here we",
    "start": "1932840",
    "end": "1938880"
  },
  {
    "text": "showed how spire can be extended for different use cases and bring identity to complex environments that may have a variety of",
    "start": "1938880",
    "end": "1945760"
  },
  {
    "text": "proprietary or open source or cloud native tooling and we showed how this plug-in model",
    "start": "1945760",
    "end": "1951360"
  },
  {
    "text": "inspire enables you to develop your own internal proprietary extensions or open source",
    "start": "1951360",
    "end": "1956640"
  },
  {
    "text": "extensions that other people can consume as well",
    "start": "1956640",
    "end": "1963120"
  },
  {
    "text": "and so here are the the links to reach out to the community we'd love to hear from you if you have input",
    "start": "1963120",
    "end": "1968240"
  },
  {
    "text": "on any potential future plugins or you know if you have questions about some of the existing plugins or what's available",
    "start": "1968240",
    "end": "1974880"
  },
  {
    "text": "uh we're very happy to engage with you further we have a website here and these are our",
    "start": "1974880",
    "end": "1980399"
  },
  {
    "text": "github links we also have a slack and a twitter if you're interested in subscribing to some of the news around",
    "start": "1980399",
    "end": "1986080"
  },
  {
    "text": "the spiffy inspired projects so thank you very much for attending",
    "start": "1986080",
    "end": "1992480"
  },
  {
    "text": "this talk and we'll turn it over now to q a",
    "start": "1992480",
    "end": "1999519"
  }
]