[
  {
    "start": "0",
    "end": "144000"
  },
  {
    "text": "thanks everyone uh sounds like we're",
    "start": "4860",
    "end": "7799"
  },
  {
    "text": "live yeah thanks for coming uh like she",
    "start": "7799",
    "end": "10800"
  },
  {
    "text": "said I'm going to be talking about",
    "start": "10800",
    "end": "12559"
  },
  {
    "text": "extending psyllium with ebpf to expose",
    "start": "12559",
    "end": "16039"
  },
  {
    "text": "HTTP golden metrics",
    "start": "16039",
    "end": "19320"
  },
  {
    "text": "so before I dive in I just want to give",
    "start": "19320",
    "end": "21000"
  },
  {
    "text": "you a little bit of background on me I",
    "start": "21000",
    "end": "23039"
  },
  {
    "text": "work at solo for those of you that",
    "start": "23039",
    "end": "24840"
  },
  {
    "text": "aren't aware of solo they're a startup",
    "start": "24840",
    "end": "26400"
  },
  {
    "text": "that essentially do a big part of them",
    "start": "26400",
    "end": "28980"
  },
  {
    "text": "is a managed istio so they do kind of",
    "start": "28980",
    "end": "32700"
  },
  {
    "text": "istio for larger deployments multiple",
    "start": "32700",
    "end": "36059"
  },
  {
    "text": "clusters that kind of thing and as you",
    "start": "36059",
    "end": "37920"
  },
  {
    "text": "can imagine there are a lot of",
    "start": "37920",
    "end": "38700"
  },
  {
    "text": "networking challenges as a part of that",
    "start": "38700",
    "end": "40280"
  },
  {
    "text": "before I was at solo I was at nginx",
    "start": "40280",
    "end": "42960"
  },
  {
    "text": "working on their service best solution",
    "start": "42960",
    "end": "44820"
  },
  {
    "text": "writing modules to help service their",
    "start": "44820",
    "end": "47100"
  },
  {
    "text": "use case",
    "start": "47100",
    "end": "48480"
  },
  {
    "text": "um and and I kind of jumped at the",
    "start": "48480",
    "end": "50160"
  },
  {
    "text": "opportunity to be able to work nxtp to",
    "start": "50160",
    "end": "53120"
  },
  {
    "text": "essentially service this UDP redirection",
    "start": "53120",
    "end": "56100"
  },
  {
    "text": "mechanism and I kind of took that I",
    "start": "56100",
    "end": "59520"
  },
  {
    "text": "discovered kind of a passion for BPF",
    "start": "59520",
    "end": "61800"
  },
  {
    "text": "started thinking about how we might be",
    "start": "61800",
    "end": "63239"
  },
  {
    "text": "able to do the same for TCP redirection",
    "start": "63239",
    "end": "65580"
  },
  {
    "text": "and offload some of the responsibility",
    "start": "65580",
    "end": "67260"
  },
  {
    "text": "off of what the proxy was doing at the",
    "start": "67260",
    "end": "69119"
  },
  {
    "text": "time and ended up enjoying joining solo",
    "start": "69119",
    "end": "72180"
  },
  {
    "text": "and they had some interesting kind of",
    "start": "72180",
    "end": "74520"
  },
  {
    "text": "work with what was kind of going on with",
    "start": "74520",
    "end": "77340"
  },
  {
    "text": "with kind of as the the process is",
    "start": "77340",
    "end": "79680"
  },
  {
    "text": "evolving the the role of ebpf is kind of",
    "start": "79680",
    "end": "82560"
  },
  {
    "text": "really interesting there and I've been",
    "start": "82560",
    "end": "83820"
  },
  {
    "text": "looking at what we might be able to do",
    "start": "83820",
    "end": "85680"
  },
  {
    "text": "with ebpf in terms of servicing metrics",
    "start": "85680",
    "end": "89880"
  },
  {
    "text": "so before I begin I just wanted to give",
    "start": "89880",
    "end": "91740"
  },
  {
    "text": "a quick shout out",
    "start": "91740",
    "end": "93180"
  },
  {
    "text": "um this document was really helpful",
    "start": "93180",
    "end": "95939"
  },
  {
    "text": "getting started and has kind of served",
    "start": "95939",
    "end": "97860"
  },
  {
    "text": "as the Holy Grail",
    "start": "97860",
    "end": "99200"
  },
  {
    "text": "in a way for for BPF and XDP especially",
    "start": "99200",
    "end": "102960"
  },
  {
    "text": "and it's just really awesome to see the",
    "start": "102960",
    "end": "106439"
  },
  {
    "text": "community evolve in terms of you know",
    "start": "106439",
    "end": "108799"
  },
  {
    "text": "documentation and support and interest",
    "start": "108799",
    "end": "111600"
  },
  {
    "text": "and and all of that and it's it's really",
    "start": "111600",
    "end": "113520"
  },
  {
    "text": "cool modern to be presenting in front of",
    "start": "113520",
    "end": "115799"
  },
  {
    "text": "in front of you all today",
    "start": "115799",
    "end": "118740"
  },
  {
    "text": "so the agenda I have for you is",
    "start": "118740",
    "end": "121020"
  },
  {
    "text": "essentially just talking about a",
    "start": "121020",
    "end": "122280"
  },
  {
    "text": "background on on kind of what we're",
    "start": "122280",
    "end": "123659"
  },
  {
    "text": "trying to achieve as well as what's kind",
    "start": "123659",
    "end": "126540"
  },
  {
    "text": "of been going on what's what's the",
    "start": "126540",
    "end": "127979"
  },
  {
    "text": "current state of the world uh for for",
    "start": "127979",
    "end": "130619"
  },
  {
    "text": "Golden metrics HTTP metrics using BPF uh",
    "start": "130619",
    "end": "134459"
  },
  {
    "text": "I'm going to talk about the concept and",
    "start": "134459",
    "end": "136020"
  },
  {
    "text": "then the execution of attempting to",
    "start": "136020",
    "end": "138780"
  },
  {
    "text": "expose these metrics purely in in BPF",
    "start": "138780",
    "end": "142800"
  },
  {
    "text": "so the background",
    "start": "142800",
    "end": "144720"
  },
  {
    "start": "144000",
    "end": "144000"
  },
  {
    "text": "so most of you are probably familiar",
    "start": "144720",
    "end": "146700"
  },
  {
    "text": "with with these golden metrics Google",
    "start": "146700",
    "end": "148200"
  },
  {
    "text": "defines it as if you can only focus on",
    "start": "148200",
    "end": "150720"
  },
  {
    "text": "on a certain set of metrics you would",
    "start": "150720",
    "end": "153239"
  },
  {
    "text": "want to kind of focus on these the the",
    "start": "153239",
    "end": "155340"
  },
  {
    "text": "traffic number of requests errors in",
    "start": "155340",
    "end": "157860"
  },
  {
    "text": "terms of Response Code bucketed by 2xx",
    "start": "157860",
    "end": "159780"
  },
  {
    "text": "3xx and then latency which is uh will",
    "start": "159780",
    "end": "163860"
  },
  {
    "text": "end up being the most complex to support",
    "start": "163860",
    "end": "165720"
  },
  {
    "text": "which I'll talk about it's a really",
    "start": "165720",
    "end": "166860"
  },
  {
    "text": "interesting problem to solve and then",
    "start": "166860",
    "end": "168780"
  },
  {
    "text": "saturation which I'm not really going to",
    "start": "168780",
    "end": "170160"
  },
  {
    "text": "be talking about too much today just",
    "start": "170160",
    "end": "171720"
  },
  {
    "text": "because it's kind of outside the scope",
    "start": "171720",
    "end": "173099"
  },
  {
    "text": "of what I find interesting in these",
    "start": "173099",
    "end": "174840"
  },
  {
    "text": "golden metrics in terms of kind of",
    "start": "174840",
    "end": "176280"
  },
  {
    "text": "collecting",
    "start": "176280",
    "end": "177599"
  },
  {
    "text": "um you know data as as networks or or",
    "start": "177599",
    "end": "180180"
  },
  {
    "text": "packets are flowing through the network",
    "start": "180180",
    "end": "182060"
  },
  {
    "text": "and you can get it pretty easily through",
    "start": "182060",
    "end": "184500"
  },
  {
    "text": "the kubernetes metrics server or or",
    "start": "184500",
    "end": "187140"
  },
  {
    "text": "however you might get CPU utilization",
    "start": "187140",
    "end": "189120"
  },
  {
    "text": "memory utilization off of the Linux",
    "start": "189120",
    "end": "190800"
  },
  {
    "text": "machine and then I'm going to just show",
    "start": "190800",
    "end": "192480"
  },
  {
    "text": "quickly how you might be able to export",
    "start": "192480",
    "end": "194540"
  },
  {
    "text": "something if you're using this",
    "start": "194540",
    "end": "196379"
  },
  {
    "text": "architecture to to you know export it",
    "start": "196379",
    "end": "199080"
  },
  {
    "text": "using Prometheus and integrate it with",
    "start": "199080",
    "end": "200700"
  },
  {
    "text": "with existing tooling",
    "start": "200700",
    "end": "203280"
  },
  {
    "start": "203000",
    "end": "203000"
  },
  {
    "text": "so when we were looking at psyllium we",
    "start": "203280",
    "end": "205440"
  },
  {
    "text": "noticed um for our use cases at least",
    "start": "205440",
    "end": "207360"
  },
  {
    "text": "that there were a couple gaps in terms",
    "start": "207360",
    "end": "209340"
  },
  {
    "text": "of for instance like not being able to",
    "start": "209340",
    "end": "210840"
  },
  {
    "text": "get like the number of bytes that were",
    "start": "210840",
    "end": "212040"
  },
  {
    "text": "sent",
    "start": "212040",
    "end": "213060"
  },
  {
    "text": "um or or kind of L7 traffic",
    "start": "213060",
    "end": "214920"
  },
  {
    "text": "classification we noticed that psyllium",
    "start": "214920",
    "end": "217080"
  },
  {
    "text": "did have L7 metrics exposed but you had",
    "start": "217080",
    "end": "219840"
  },
  {
    "text": "to have a policy enforcement using that",
    "start": "219840",
    "end": "221879"
  },
  {
    "text": "Envoy proxy in order to get it and so we",
    "start": "221879",
    "end": "224940"
  },
  {
    "text": "started thinking about how else we could",
    "start": "224940",
    "end": "227040"
  },
  {
    "text": "kind of get these get these metrics out",
    "start": "227040",
    "end": "229379"
  },
  {
    "text": "of out of psyllium",
    "start": "229379",
    "end": "230760"
  },
  {
    "text": "or or you know in a psyllium ecosystem",
    "start": "230760",
    "end": "233280"
  },
  {
    "text": "kind of get these metrics so pixie is",
    "start": "233280",
    "end": "236099"
  },
  {
    "start": "235000",
    "end": "235000"
  },
  {
    "text": "doing really interesting work it's it's",
    "start": "236099",
    "end": "237720"
  },
  {
    "text": "really cool what they what they have",
    "start": "237720",
    "end": "239040"
  },
  {
    "text": "going they use you know as people have",
    "start": "239040",
    "end": "240959"
  },
  {
    "text": "been talking about K probes um they're",
    "start": "240959",
    "end": "242819"
  },
  {
    "text": "they're tracing these these ciscalls on",
    "start": "242819",
    "end": "244440"
  },
  {
    "text": "entry and exit collecting information",
    "start": "244440",
    "end": "246379"
  },
  {
    "text": "classifying the the request and the",
    "start": "246379",
    "end": "248459"
  },
  {
    "text": "response as well as determining latency",
    "start": "248459",
    "end": "251519"
  },
  {
    "text": "um one interesting thing though is that",
    "start": "251519",
    "end": "253019"
  },
  {
    "text": "they kind of uh they parse the ethernet",
    "start": "253019",
    "end": "256019"
  },
  {
    "text": "frame that's that's getting sent and",
    "start": "256019",
    "end": "258180"
  },
  {
    "text": "they they send it to user space for for",
    "start": "258180",
    "end": "260459"
  },
  {
    "text": "processing and that's where they do",
    "start": "260459",
    "end": "261720"
  },
  {
    "text": "their latency calculation",
    "start": "261720",
    "end": "263699"
  },
  {
    "text": "um and it makes a lot of sense to be",
    "start": "263699",
    "end": "266220"
  },
  {
    "text": "able to to do that because you have a",
    "start": "266220",
    "end": "268020"
  },
  {
    "text": "lot less restriction in terms of you",
    "start": "268020",
    "end": "270660"
  },
  {
    "text": "know what you can do the verifier places",
    "start": "270660",
    "end": "273000"
  },
  {
    "text": "a lot of restrictions there as well as",
    "start": "273000",
    "end": "274500"
  },
  {
    "text": "it's outside the the data paths you're",
    "start": "274500",
    "end": "276240"
  },
  {
    "text": "not adding extra latency from that",
    "start": "276240",
    "end": "277800"
  },
  {
    "text": "calculation so it makes sense but there",
    "start": "277800",
    "end": "279419"
  },
  {
    "text": "are potential like drawbacks of you know",
    "start": "279419",
    "end": "281639"
  },
  {
    "text": "if you're sending a bunch of events",
    "start": "281639",
    "end": "282840"
  },
  {
    "text": "through a map to user space you have",
    "start": "282840",
    "end": "285000"
  },
  {
    "text": "potential like permissions",
    "start": "285000",
    "end": "287340"
  },
  {
    "text": "um if if a bad actor were to kind of",
    "start": "287340",
    "end": "289440"
  },
  {
    "text": "read the data on that map",
    "start": "289440",
    "end": "291240"
  },
  {
    "text": "um they could potentially get access to",
    "start": "291240",
    "end": "292800"
  },
  {
    "text": "that data of course there's you know",
    "start": "292800",
    "end": "294300"
  },
  {
    "text": "when you're thinking about permissions",
    "start": "294300",
    "end": "295940"
  },
  {
    "text": "if they had permissions to read that map",
    "start": "295940",
    "end": "298199"
  },
  {
    "text": "they could probably kind of do their own",
    "start": "298199",
    "end": "299400"
  },
  {
    "text": "tracing so",
    "start": "299400",
    "end": "300900"
  },
  {
    "text": "um you know there's an argument to be",
    "start": "300900",
    "end": "302280"
  },
  {
    "text": "made there but also when you're sending",
    "start": "302280",
    "end": "304320"
  },
  {
    "text": "so many events to user space and you",
    "start": "304320",
    "end": "307139"
  },
  {
    "text": "have the potential for kind of",
    "start": "307139",
    "end": "308280"
  },
  {
    "text": "overflowing that that centralized",
    "start": "308280",
    "end": "310020"
  },
  {
    "text": "aggregator and potentially dropping",
    "start": "310020",
    "end": "312120"
  },
  {
    "text": "events so it's just kind of interesting",
    "start": "312120",
    "end": "314759"
  },
  {
    "text": "to think about what we might be able to",
    "start": "314759",
    "end": "316680"
  },
  {
    "text": "do in ebpf itself instead of kind of",
    "start": "316680",
    "end": "319139"
  },
  {
    "text": "sending a bunch of data to to user space",
    "start": "319139",
    "end": "323660"
  },
  {
    "text": "um so in terms of psyllium we were",
    "start": "323940",
    "end": "326100"
  },
  {
    "text": "looking at psyllium again it's a it's a",
    "start": "326100",
    "end": "327600"
  },
  {
    "text": "really cool product and and it's really",
    "start": "327600",
    "end": "329100"
  },
  {
    "text": "interesting how they kind of own the",
    "start": "329100",
    "end": "330419"
  },
  {
    "text": "entire networking ecosystem inside of a",
    "start": "330419",
    "end": "332280"
  },
  {
    "text": "cluster you can imagine traffic coming",
    "start": "332280",
    "end": "334320"
  },
  {
    "text": "outside of outside of the cluster itself",
    "start": "334320",
    "end": "336419"
  },
  {
    "text": "or from another node or another local",
    "start": "336419",
    "end": "339479"
  },
  {
    "text": "pod on the Node you're wanting to",
    "start": "339479",
    "end": "341340"
  },
  {
    "text": "reference all of those have different",
    "start": "341340",
    "end": "343020"
  },
  {
    "text": "nuances that you have to kind of deal",
    "start": "343020",
    "end": "344580"
  },
  {
    "text": "with",
    "start": "344580",
    "end": "345419"
  },
  {
    "text": "um in terms of tracking the network",
    "start": "345419",
    "end": "347100"
  },
  {
    "text": "flowing through a system and psyllium is",
    "start": "347100",
    "end": "349919"
  },
  {
    "text": "really cool in that it manages all of",
    "start": "349919",
    "end": "351479"
  },
  {
    "text": "this and it provides a a essentially an",
    "start": "351479",
    "end": "355620"
  },
  {
    "text": "attachment point where you can run your",
    "start": "355620",
    "end": "357180"
  },
  {
    "text": "own custom BPF programs to add in your",
    "start": "357180",
    "end": "359759"
  },
  {
    "text": "own custom functionality so that's what",
    "start": "359759",
    "end": "361139"
  },
  {
    "text": "we're going to be talking about this",
    "start": "361139",
    "end": "362220"
  },
  {
    "text": "custom data path I'm gonna and it and it",
    "start": "362220",
    "end": "364860"
  },
  {
    "text": "does this through the use of BPF tail",
    "start": "364860",
    "end": "366840"
  },
  {
    "text": "calls",
    "start": "366840",
    "end": "368639"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "so in terms of the concept what we're",
    "start": "368639",
    "end": "370680"
  },
  {
    "text": "trying to do you guys are familiar with",
    "start": "370680",
    "end": "372120"
  },
  {
    "text": "BPF you're familiar with with what",
    "start": "372120",
    "end": "374580"
  },
  {
    "text": "traditionally has been kind of done with",
    "start": "374580",
    "end": "375840"
  },
  {
    "text": "it and when I was kind of looking at it",
    "start": "375840",
    "end": "378300"
  },
  {
    "text": "um it the way I kind of see it is when",
    "start": "378300",
    "end": "380220"
  },
  {
    "text": "you're operating at these lower levels",
    "start": "380220",
    "end": "382380"
  },
  {
    "text": "um when you're when you're trying to",
    "start": "382380",
    "end": "384060"
  },
  {
    "text": "look like the IP header TCP header",
    "start": "384060",
    "end": "385680"
  },
  {
    "text": "there's a there's a you know a kernel",
    "start": "385680",
    "end": "387120"
  },
  {
    "text": "structure to be able to reference and",
    "start": "387120",
    "end": "389160"
  },
  {
    "text": "then you can just kind of get the offset",
    "start": "389160",
    "end": "390660"
  },
  {
    "text": "in uh into that packet and expose",
    "start": "390660",
    "end": "394680"
  },
  {
    "text": "whatever information you're wanting to",
    "start": "394680",
    "end": "396600"
  },
  {
    "text": "user space it also enables really",
    "start": "396600",
    "end": "398580"
  },
  {
    "text": "interesting use cases say you're wanting",
    "start": "398580",
    "end": "401280"
  },
  {
    "text": "to like alter the destination of traffic",
    "start": "401280",
    "end": "403460"
  },
  {
    "text": "to a sidecar that's wanting to operate",
    "start": "403460",
    "end": "406620"
  },
  {
    "text": "differently based on the different",
    "start": "406620",
    "end": "407699"
  },
  {
    "text": "protocols or something it enables really",
    "start": "407699",
    "end": "409199"
  },
  {
    "text": "interesting use cases but as soon as you",
    "start": "409199",
    "end": "410759"
  },
  {
    "text": "get to kind of HTTP this is more",
    "start": "410759",
    "end": "413280"
  },
  {
    "text": "traditionally you know dealt with by",
    "start": "413280",
    "end": "415740"
  },
  {
    "text": "user space applications there's not a",
    "start": "415740",
    "end": "417900"
  },
  {
    "text": "you know there's no respective kernel",
    "start": "417900",
    "end": "420300"
  },
  {
    "text": "structure that you can kind of reference",
    "start": "420300",
    "end": "421800"
  },
  {
    "text": "in order to be able to operate on this",
    "start": "421800",
    "end": "424080"
  },
  {
    "text": "on this data so we have to fall back to",
    "start": "424080",
    "end": "426900"
  },
  {
    "text": "kind of the RFC you know there's still a",
    "start": "426900",
    "end": "428340"
  },
  {
    "text": "structure sure but you're operating now",
    "start": "428340",
    "end": "430199"
  },
  {
    "text": "on characters you have to kind of",
    "start": "430199",
    "end": "431639"
  },
  {
    "text": "iterate through in order to get that",
    "start": "431639",
    "end": "432660"
  },
  {
    "text": "information rather than like a bit wise",
    "start": "432660",
    "end": "434819"
  },
  {
    "text": "you know something efficient or",
    "start": "434819",
    "end": "436319"
  },
  {
    "text": "something easily accessible like a",
    "start": "436319",
    "end": "438539"
  },
  {
    "text": "kernel structure",
    "start": "438539",
    "end": "440520"
  },
  {
    "start": "440000",
    "end": "440000"
  },
  {
    "text": "and there's an element of complexity",
    "start": "440520",
    "end": "442740"
  },
  {
    "text": "that comes with with trying to deal with",
    "start": "442740",
    "end": "444479"
  },
  {
    "text": "the latency of the latency aspect of",
    "start": "444479",
    "end": "446160"
  },
  {
    "text": "golden metrics",
    "start": "446160",
    "end": "447599"
  },
  {
    "text": "um so this isn't a like a simple example",
    "start": "447599",
    "end": "450259"
  },
  {
    "text": "where you know t0 a client sends a",
    "start": "450259",
    "end": "453300"
  },
  {
    "text": "request the server receives it calls any",
    "start": "453300",
    "end": "456180"
  },
  {
    "text": "dependent backends does any processing",
    "start": "456180",
    "end": "458099"
  },
  {
    "text": "and then it sends it back and we can say",
    "start": "458099",
    "end": "460979"
  },
  {
    "text": "that the latency here is it's three",
    "start": "460979",
    "end": "462599"
  },
  {
    "text": "units whatever you're wanting to talk",
    "start": "462599",
    "end": "464400"
  },
  {
    "text": "about",
    "start": "464400",
    "end": "465599"
  },
  {
    "text": "but a more useful example of latency is",
    "start": "465599",
    "end": "468000"
  },
  {
    "start": "466000",
    "end": "466000"
  },
  {
    "text": "this for example I I know with nginx",
    "start": "468000",
    "end": "470699"
  },
  {
    "text": "they send the response headers in the",
    "start": "470699",
    "end": "472319"
  },
  {
    "text": "body separately if you have a large",
    "start": "472319",
    "end": "473940"
  },
  {
    "text": "response body it's going to be",
    "start": "473940",
    "end": "475199"
  },
  {
    "text": "fragmented so you're not going to have",
    "start": "475199",
    "end": "476580"
  },
  {
    "text": "one response per request you're going to",
    "start": "476580",
    "end": "478500"
  },
  {
    "text": "have to have a bit more of a you know",
    "start": "478500",
    "end": "480660"
  },
  {
    "text": "you're gonna have to track the state as",
    "start": "480660",
    "end": "482940"
  },
  {
    "text": "multiple responses or packets are kind",
    "start": "482940",
    "end": "486300"
  },
  {
    "text": "of sent in response to that request so",
    "start": "486300",
    "end": "488039"
  },
  {
    "text": "it's going to add some complexity and",
    "start": "488039",
    "end": "490800"
  },
  {
    "text": "how we're going to end up having to you",
    "start": "490800",
    "end": "492720"
  },
  {
    "text": "know support this is by essentially",
    "start": "492720",
    "end": "495300"
  },
  {
    "text": "tracking the content links that's that's",
    "start": "495300",
    "end": "497099"
  },
  {
    "text": "sent in that response header and then",
    "start": "497099",
    "end": "499560"
  },
  {
    "text": "tracking the receive content as it's",
    "start": "499560",
    "end": "501120"
  },
  {
    "text": "coming in to be able to ensure that it's",
    "start": "501120",
    "end": "503039"
  },
  {
    "text": "equal to that content link specified",
    "start": "503039",
    "end": "504720"
  },
  {
    "text": "just how HTTP kind of operates",
    "start": "504720",
    "end": "508680"
  },
  {
    "text": "in terms of how this can be executed so",
    "start": "508680",
    "end": "512640"
  },
  {
    "text": "again going back if you're looking",
    "start": "512640",
    "end": "514080"
  },
  {
    "text": "wanting to look at something like the",
    "start": "514080",
    "end": "515279"
  },
  {
    "text": "number of connections this is really",
    "start": "515279",
    "end": "516779"
  },
  {
    "text": "straightforward in in ebpf you can just",
    "start": "516779",
    "end": "519360"
  },
  {
    "text": "kind of you know operate on if it's a",
    "start": "519360",
    "end": "522120"
  },
  {
    "text": "classified program on the socket buffer",
    "start": "522120",
    "end": "525240"
  },
  {
    "text": "um and then just kind of submit",
    "start": "525240",
    "end": "526380"
  },
  {
    "text": "something user space but there's not the",
    "start": "526380",
    "end": "527760"
  },
  {
    "text": "same kind of it's not as straightforward",
    "start": "527760",
    "end": "530040"
  },
  {
    "text": "and HTTP",
    "start": "530040",
    "end": "531600"
  },
  {
    "text": "um",
    "start": "531600",
    "end": "532680"
  },
  {
    "start": "532000",
    "end": "532000"
  },
  {
    "text": "so that's kind of what we're gonna we're",
    "start": "532680",
    "end": "535019"
  },
  {
    "text": "gonna try and solve here so the idea",
    "start": "535019",
    "end": "536700"
  },
  {
    "text": "here is that we're going to place two",
    "start": "536700",
    "end": "538380"
  },
  {
    "text": "different BPF programs to help service",
    "start": "538380",
    "end": "540899"
  },
  {
    "text": "the use case both on the on the if we're",
    "start": "540899",
    "end": "543420"
  },
  {
    "text": "per client whatever we're trying to get",
    "start": "543420",
    "end": "544920"
  },
  {
    "text": "metrics for we would attach on the",
    "start": "544920",
    "end": "546480"
  },
  {
    "text": "egress side as well as the Ingress side",
    "start": "546480",
    "end": "549000"
  },
  {
    "text": "to to first on the on the send side the",
    "start": "549000",
    "end": "551640"
  },
  {
    "text": "egress side we're going to catch HTTP",
    "start": "551640",
    "end": "553200"
  },
  {
    "text": "requests to submit that to get that",
    "start": "553200",
    "end": "555060"
  },
  {
    "text": "first kind of element of the golden",
    "start": "555060",
    "end": "556920"
  },
  {
    "text": "metrics the the HTTP requests the number",
    "start": "556920",
    "end": "560040"
  },
  {
    "text": "of requests and then we're going to",
    "start": "560040",
    "end": "561120"
  },
  {
    "text": "begin latency capture",
    "start": "561120",
    "end": "562920"
  },
  {
    "text": "and then on the response side we're",
    "start": "562920",
    "end": "564779"
  },
  {
    "text": "going to catch that HTTP response to",
    "start": "564779",
    "end": "567720"
  },
  {
    "text": "bucket the number the in the response",
    "start": "567720",
    "end": "570480"
  },
  {
    "text": "code in a 2xx 3xx that kind of thing uh",
    "start": "570480",
    "end": "573600"
  },
  {
    "text": "and then what we're going to do is we're",
    "start": "573600",
    "end": "575100"
  },
  {
    "text": "going to determine the content length",
    "start": "575100",
    "end": "577260"
  },
  {
    "text": "that's in that HTTP header and then",
    "start": "577260",
    "end": "579420"
  },
  {
    "text": "track response track the response so",
    "start": "579420",
    "end": "583500"
  },
  {
    "text": "that we can ensure that what we've",
    "start": "583500",
    "end": "584820"
  },
  {
    "text": "received is equal to what is specified",
    "start": "584820",
    "end": "586740"
  },
  {
    "text": "by by the what's the server sending and",
    "start": "586740",
    "end": "589019"
  },
  {
    "text": "then we're going to log that latency",
    "start": "589019",
    "end": "591060"
  },
  {
    "text": "so again these are the the golden",
    "start": "591060",
    "end": "592800"
  },
  {
    "text": "metrics that we're going to kind of",
    "start": "592800",
    "end": "594180"
  },
  {
    "text": "looking for traffic number of requests",
    "start": "594180",
    "end": "595980"
  },
  {
    "text": "error rate in in response time",
    "start": "595980",
    "end": "599580"
  },
  {
    "start": "599000",
    "end": "599000"
  },
  {
    "text": "so as it turns out the number of",
    "start": "599580",
    "end": "601380"
  },
  {
    "text": "requests is is really straightforward if",
    "start": "601380",
    "end": "603959"
  },
  {
    "text": "you're just operating on on the request",
    "start": "603959",
    "end": "606420"
  },
  {
    "text": "line of an HTTP request you just look at",
    "start": "606420",
    "end": "609060"
  },
  {
    "text": "get you can see in the the RFC",
    "start": "609060",
    "end": "612000"
  },
  {
    "text": "um you can just support these these",
    "start": "612000",
    "end": "613620"
  },
  {
    "text": "different kind of methods and then",
    "start": "613620",
    "end": "615540"
  },
  {
    "text": "what's really nice is it's at the very",
    "start": "615540",
    "end": "617160"
  },
  {
    "text": "beginning of the user data so there's no",
    "start": "617160",
    "end": "618600"
  },
  {
    "text": "complexity in being able to get this you",
    "start": "618600",
    "end": "620640"
  },
  {
    "text": "just essentially you know check the the",
    "start": "620640",
    "end": "622860"
  },
  {
    "text": "character array at zero index zero one",
    "start": "622860",
    "end": "625140"
  },
  {
    "text": "two",
    "start": "625140",
    "end": "626279"
  },
  {
    "text": "um it's really straightforward to get",
    "start": "626279",
    "end": "628560"
  },
  {
    "text": "um",
    "start": "628560",
    "end": "629160"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "and then submitting to user space you",
    "start": "629160",
    "end": "631320"
  },
  {
    "text": "could just key it what's what's",
    "start": "631320",
    "end": "632519"
  },
  {
    "text": "interesting to call out here is that",
    "start": "632519",
    "end": "634320"
  },
  {
    "text": "when you're operating within like a",
    "start": "634320",
    "end": "635640"
  },
  {
    "text": "silly uh the psyllium system",
    "start": "635640",
    "end": "638399"
  },
  {
    "text": "um the destination address I've found is",
    "start": "638399",
    "end": "640920"
  },
  {
    "text": "not necessarily reliable for instance if",
    "start": "640920",
    "end": "643440"
  },
  {
    "text": "they're trying to redirect to an L7",
    "start": "643440",
    "end": "645959"
  },
  {
    "text": "proxy for policy enforcement that",
    "start": "645959",
    "end": "647700"
  },
  {
    "text": "destination address might get changed so",
    "start": "647700",
    "end": "649740"
  },
  {
    "text": "I had to key it based off of server",
    "start": "649740",
    "end": "652800"
  },
  {
    "text": "identity which is going to be it's going",
    "start": "652800",
    "end": "655800"
  },
  {
    "text": "to be consistent when you're dealing",
    "start": "655800",
    "end": "657540"
  },
  {
    "text": "with when you're dealing with an egress",
    "start": "657540",
    "end": "659880"
  },
  {
    "text": "program here",
    "start": "659880",
    "end": "661560"
  },
  {
    "text": "so that's the that's the kind of key",
    "start": "661560",
    "end": "663420"
  },
  {
    "text": "that we use and then we use the client",
    "start": "663420",
    "end": "664800"
  },
  {
    "text": "address and then we have to choose a BPF",
    "start": "664800",
    "end": "668100"
  },
  {
    "start": "665000",
    "end": "665000"
  },
  {
    "text": "map so kind of iterating through",
    "start": "668100",
    "end": "670560"
  },
  {
    "text": "um I started with a with a hash map",
    "start": "670560",
    "end": "672060"
  },
  {
    "text": "which which makes sense whenever you're",
    "start": "672060",
    "end": "673620"
  },
  {
    "text": "kind of collecting metrics but that is",
    "start": "673620",
    "end": "675480"
  },
  {
    "text": "lock implications uh because all the",
    "start": "675480",
    "end": "677880"
  },
  {
    "text": "CPUs are going to be kind of",
    "start": "677880",
    "end": "680040"
  },
  {
    "text": "um",
    "start": "680040",
    "end": "681660"
  },
  {
    "text": "kind of you know trying to add to that",
    "start": "681660",
    "end": "684000"
  },
  {
    "text": "hash map at the same time so there's the",
    "start": "684000",
    "end": "685920"
  },
  {
    "text": "introduction of the CPU the per CPU hash",
    "start": "685920",
    "end": "688740"
  },
  {
    "text": "but that has disadvantages in terms of",
    "start": "688740",
    "end": "691380"
  },
  {
    "text": "the back end gather that you have to do",
    "start": "691380",
    "end": "694740"
  },
  {
    "text": "which is you know pretty straightforward",
    "start": "694740",
    "end": "696300"
  },
  {
    "text": "but still something to be aware of",
    "start": "696300",
    "end": "697620"
  },
  {
    "text": "there's also kind of a Nuance that's",
    "start": "697620",
    "end": "699300"
  },
  {
    "text": "interesting in that whenever a pod gets",
    "start": "699300",
    "end": "702240"
  },
  {
    "text": "kind of restarted and there's a new pod",
    "start": "702240",
    "end": "704760"
  },
  {
    "text": "that comes up with a different IP",
    "start": "704760",
    "end": "706019"
  },
  {
    "text": "because that key is is using the",
    "start": "706019",
    "end": "708480"
  },
  {
    "text": "identity and psyllium maintains that",
    "start": "708480",
    "end": "710399"
  },
  {
    "text": "identity",
    "start": "710399",
    "end": "712880"
  },
  {
    "text": "um essentially uh you're gonna have",
    "start": "712920",
    "end": "715920"
  },
  {
    "text": "requests that were attributed to that",
    "start": "715920",
    "end": "717660"
  },
  {
    "text": "last pod be be attributed to the the new",
    "start": "717660",
    "end": "721140"
  },
  {
    "text": "pod that comes up so it's it's just kind",
    "start": "721140",
    "end": "723600"
  },
  {
    "text": "of an interesting thing if if your",
    "start": "723600",
    "end": "725040"
  },
  {
    "text": "granularity is on a workload level that",
    "start": "725040",
    "end": "727019"
  },
  {
    "text": "might not be too too big of a deal or",
    "start": "727019",
    "end": "729240"
  },
  {
    "text": "like a service level but if you're",
    "start": "729240",
    "end": "730560"
  },
  {
    "text": "wanting to kind of get an accurate gauge",
    "start": "730560",
    "end": "732480"
  },
  {
    "text": "of which requests to go to which pod",
    "start": "732480",
    "end": "733980"
  },
  {
    "text": "that's going to be a problem and that",
    "start": "733980",
    "end": "735660"
  },
  {
    "text": "can be alleviated by the use of",
    "start": "735660",
    "end": "737100"
  },
  {
    "text": "something like a like a ring buff where",
    "start": "737100",
    "end": "739680"
  },
  {
    "text": "you're just sending events uh as they",
    "start": "739680",
    "end": "741899"
  },
  {
    "text": "happen to some sort of collector I kind",
    "start": "741899",
    "end": "744000"
  },
  {
    "text": "of like how pixie does it um",
    "start": "744000",
    "end": "747660"
  },
  {
    "text": "so errors is going to be very similar",
    "start": "747660",
    "end": "750600"
  },
  {
    "text": "this is now operating on the response",
    "start": "750600",
    "end": "752220"
  },
  {
    "text": "code again it's very straightforward",
    "start": "752220",
    "end": "753839"
  },
  {
    "text": "because you have the user data",
    "start": "753839",
    "end": "757100"
  },
  {
    "text": "and at the very beginning of the user",
    "start": "757100",
    "end": "759480"
  },
  {
    "text": "data if it's a HTTP response you're",
    "start": "759480",
    "end": "761160"
  },
  {
    "text": "going to have this you know standard",
    "start": "761160",
    "end": "763019"
  },
  {
    "text": "HTTP response line you can just check",
    "start": "763019",
    "end": "766380"
  },
  {
    "text": "you can essentially check for the HTTP",
    "start": "766380",
    "end": "768300"
  },
  {
    "text": "string and then check for the the number",
    "start": "768300",
    "end": "770720"
  },
  {
    "text": "so the 2 and 200 and then and then",
    "start": "770720",
    "end": "773579"
  },
  {
    "text": "bucket it that way and you can see a",
    "start": "773579",
    "end": "775320"
  },
  {
    "text": "little bit of the code on the right how",
    "start": "775320",
    "end": "777720"
  },
  {
    "text": "simple it is to kind of check for that",
    "start": "777720",
    "end": "779279"
  },
  {
    "text": "string and then some code for for",
    "start": "779279",
    "end": "781019"
  },
  {
    "text": "submitting it to a map so both of those",
    "start": "781019",
    "end": "782700"
  },
  {
    "text": "are are really straightforward to",
    "start": "782700",
    "end": "784500"
  },
  {
    "text": "support what What's",
    "start": "784500",
    "end": "786420"
  },
  {
    "start": "786000",
    "end": "786000"
  },
  {
    "text": "um oh and then you can see kind of the",
    "start": "786420",
    "end": "788880"
  },
  {
    "text": "something similar not exactly the same",
    "start": "788880",
    "end": "790440"
  },
  {
    "text": "because we're operating on Ingress now",
    "start": "790440",
    "end": "792300"
  },
  {
    "text": "it's now the source identity rather than",
    "start": "792300",
    "end": "794940"
  },
  {
    "text": "the servers but but it's still talking",
    "start": "794940",
    "end": "797579"
  },
  {
    "text": "about like kind of the remote identity",
    "start": "797579",
    "end": "799380"
  },
  {
    "text": "and then that destination address is the",
    "start": "799380",
    "end": "801060"
  },
  {
    "text": "client",
    "start": "801060",
    "end": "802019"
  },
  {
    "start": "802000",
    "end": "802000"
  },
  {
    "text": "so latency is where a lot of the",
    "start": "802019",
    "end": "803820"
  },
  {
    "text": "complexity actually comes in and",
    "start": "803820",
    "end": "805200"
  },
  {
    "text": "supporting a solution like this of being",
    "start": "805200",
    "end": "807060"
  },
  {
    "text": "able to do that calculation in ebpf",
    "start": "807060",
    "end": "809040"
  },
  {
    "text": "itself",
    "start": "809040",
    "end": "811200"
  },
  {
    "text": "um so the complexity comes from on that",
    "start": "811200",
    "end": "814380"
  },
  {
    "text": "received side getting the content",
    "start": "814380",
    "end": "816839"
  },
  {
    "text": "lengths header which is anywhere in that",
    "start": "816839",
    "end": "818579"
  },
  {
    "text": "response header itself and then tracking",
    "start": "818579",
    "end": "821459"
  },
  {
    "text": "the response body as as these packets",
    "start": "821459",
    "end": "823740"
  },
  {
    "text": "start flowing in so essentially let's",
    "start": "823740",
    "end": "826980"
  },
  {
    "text": "see",
    "start": "826980",
    "end": "828360"
  },
  {
    "text": "there's something that we're going to",
    "start": "828360",
    "end": "829680"
  },
  {
    "text": "have something like this where we have a",
    "start": "829680",
    "end": "831600"
  },
  {
    "text": "state that's maintained throughout the",
    "start": "831600",
    "end": "833880"
  },
  {
    "text": "the connection as the requests are going",
    "start": "833880",
    "end": "835380"
  },
  {
    "text": "in starting with with essentially this",
    "start": "835380",
    "end": "837600"
  },
  {
    "text": "this start time that is that is",
    "start": "837600",
    "end": "839820"
  },
  {
    "text": "indicated by the egress program and then",
    "start": "839820",
    "end": "842760"
  },
  {
    "text": "when we receive that first response",
    "start": "842760",
    "end": "845040"
  },
  {
    "text": "we're going to look for that content",
    "start": "845040",
    "end": "846240"
  },
  {
    "text": "length",
    "start": "846240",
    "end": "847440"
  },
  {
    "text": "um the string inside that header and",
    "start": "847440",
    "end": "849839"
  },
  {
    "text": "then as the receive content is flowing",
    "start": "849839",
    "end": "852000"
  },
  {
    "text": "in we're going to essentially match it",
    "start": "852000",
    "end": "853860"
  },
  {
    "text": "until we equal the content length and",
    "start": "853860",
    "end": "855899"
  },
  {
    "text": "then we're going to submit an event to",
    "start": "855899",
    "end": "857339"
  },
  {
    "text": "to user space",
    "start": "857339",
    "end": "860240"
  },
  {
    "text": "so the reason this is so complex is",
    "start": "860519",
    "end": "863579"
  },
  {
    "text": "because there is restrictions placed by",
    "start": "863579",
    "end": "866639"
  },
  {
    "text": "the verifier to ensure that you know the",
    "start": "866639",
    "end": "868260"
  },
  {
    "text": "BPF program is is safe to run and in",
    "start": "868260",
    "end": "870779"
  },
  {
    "text": "order to do that it needs to evaluate",
    "start": "870779",
    "end": "872399"
  },
  {
    "text": "instructions and these instructions grow",
    "start": "872399",
    "end": "875399"
  },
  {
    "text": "um quite quickly when you're operating",
    "start": "875399",
    "end": "876720"
  },
  {
    "text": "when you're trying to do something like",
    "start": "876720",
    "end": "878100"
  },
  {
    "text": "this as I'll kind of get into but",
    "start": "878100",
    "end": "880019"
  },
  {
    "text": "essentially the complexity of trying to",
    "start": "880019",
    "end": "882000"
  },
  {
    "text": "get that content length and that that",
    "start": "882000",
    "end": "883860"
  },
  {
    "text": "end of the header so that we know when",
    "start": "883860",
    "end": "885839"
  },
  {
    "text": "the receive content starts say that the",
    "start": "885839",
    "end": "888240"
  },
  {
    "text": "response header and the response body",
    "start": "888240",
    "end": "890100"
  },
  {
    "text": "share a packet you need to know that",
    "start": "890100",
    "end": "891839"
  },
  {
    "text": "boundary so you can accurately track",
    "start": "891839",
    "end": "894079"
  },
  {
    "text": "that that received content that's coming",
    "start": "894079",
    "end": "896279"
  },
  {
    "text": "in",
    "start": "896279",
    "end": "897740"
  },
  {
    "text": "it adds some complexity and then I was",
    "start": "897740",
    "end": "900420"
  },
  {
    "text": "kind of thinking as I was creating the",
    "start": "900420",
    "end": "901980"
  },
  {
    "text": "solution I didn't you know want to have",
    "start": "901980",
    "end": "904800"
  },
  {
    "text": "any artificial restrictions one benefit",
    "start": "904800",
    "end": "906540"
  },
  {
    "text": "of passing to user space is that you",
    "start": "906540",
    "end": "908880"
  },
  {
    "text": "don't really have any restrictions you",
    "start": "908880",
    "end": "910620"
  },
  {
    "text": "can you know you don't have that",
    "start": "910620",
    "end": "911639"
  },
  {
    "text": "verifier complexity limit so even though",
    "start": "911639",
    "end": "915899"
  },
  {
    "text": "you know this is only like a 200 header",
    "start": "915899",
    "end": "917820"
  },
  {
    "text": "200 character header response header I",
    "start": "917820",
    "end": "919860"
  },
  {
    "text": "wanted to be able to support more than",
    "start": "919860",
    "end": "921899"
  },
  {
    "text": "that",
    "start": "921899",
    "end": "923339"
  },
  {
    "start": "923000",
    "end": "923000"
  },
  {
    "text": "so I have the code on the right if in",
    "start": "923339",
    "end": "925620"
  },
  {
    "text": "case anyone wants to try and read it but",
    "start": "925620",
    "end": "927120"
  },
  {
    "text": "that's just in case you want to try and",
    "start": "927120",
    "end": "928320"
  },
  {
    "text": "parse it for later essentially this is a",
    "start": "928320",
    "end": "930420"
  },
  {
    "text": "first pass iteration of trying to check",
    "start": "930420",
    "end": "932699"
  },
  {
    "text": "for headers that for the header that was",
    "start": "932699",
    "end": "934740"
  },
  {
    "text": "coming in the different lines",
    "start": "934740",
    "end": "935820"
  },
  {
    "text": "essentially look for the content length",
    "start": "935820",
    "end": "937800"
  },
  {
    "text": "string and then when we find that match",
    "start": "937800",
    "end": "940380"
  },
  {
    "text": "we're we're just going to essentially",
    "start": "940380",
    "end": "942680"
  },
  {
    "text": "look for the the numbers associated with",
    "start": "942680",
    "end": "945720"
  },
  {
    "text": "that content link so that we can add it",
    "start": "945720",
    "end": "947040"
  },
  {
    "text": "into our state and be able to kind of",
    "start": "947040",
    "end": "949199"
  },
  {
    "text": "accurately account for that",
    "start": "949199",
    "end": "951300"
  },
  {
    "text": "um you know pretty complex but but",
    "start": "951300",
    "end": "953040"
  },
  {
    "text": "you'll kind of see how that worked out",
    "start": "953040",
    "end": "955260"
  },
  {
    "text": "so as I was trying to load this into the",
    "start": "955260",
    "end": "958320"
  },
  {
    "text": "the you know load this into the kernel",
    "start": "958320",
    "end": "961199"
  },
  {
    "text": "um I found that at 15 loop iterations I",
    "start": "961199",
    "end": "963420"
  },
  {
    "text": "had 131 000 instructions that were you",
    "start": "963420",
    "end": "966899"
  },
  {
    "text": "know uh at the verifier the states",
    "start": "966899",
    "end": "969240"
  },
  {
    "text": "essentially that the verifier verified",
    "start": "969240",
    "end": "971220"
  },
  {
    "text": "and then at 17 iterations it was a 570",
    "start": "971220",
    "end": "974760"
  },
  {
    "text": "000 so a Forex increased and then a 19 I",
    "start": "974760",
    "end": "976800"
  },
  {
    "text": "hit that million instruction limit",
    "start": "976800",
    "end": "979320"
  },
  {
    "text": "um and as you guys are probably aware uh",
    "start": "979320",
    "end": "981899"
  },
  {
    "text": "at a million instructions the the",
    "start": "981899",
    "end": "983699"
  },
  {
    "text": "verifier just kind of gives up and says",
    "start": "983699",
    "end": "985440"
  },
  {
    "text": "that it's not going to continue working",
    "start": "985440",
    "end": "986940"
  },
  {
    "text": "so this clearly isn't um a solution that",
    "start": "986940",
    "end": "990180"
  },
  {
    "text": "that works there's no header that's",
    "start": "990180",
    "end": "992579"
  },
  {
    "text": "going to be you know useful that is 19",
    "start": "992579",
    "end": "994560"
  },
  {
    "text": "characters long",
    "start": "994560",
    "end": "995940"
  },
  {
    "text": "um so I had to kind of figure out in",
    "start": "995940",
    "end": "998279"
  },
  {
    "text": "depth of what was going on and try and",
    "start": "998279",
    "end": "999959"
  },
  {
    "text": "get some efficiencies out of this code",
    "start": "999959",
    "end": "1002360"
  },
  {
    "text": "to be able to parse longer headers",
    "start": "1002360",
    "end": "1005180"
  },
  {
    "text": "um and and the tools that I worked with",
    "start": "1005180",
    "end": "1006800"
  },
  {
    "text": "were that BPF Prague load essentially",
    "start": "1006800",
    "end": "1009920"
  },
  {
    "text": "the devote the the verbose",
    "start": "1009920",
    "end": "1012860"
  },
  {
    "text": "um verifier log was really helpful as",
    "start": "1012860",
    "end": "1014959"
  },
  {
    "text": "well as getting a debuggable kernel to",
    "start": "1014959",
    "end": "1016519"
  },
  {
    "text": "be able to check um the various States",
    "start": "1016519",
    "end": "1018440"
  },
  {
    "text": "the verifier was in uh in order uh at",
    "start": "1018440",
    "end": "1021680"
  },
  {
    "text": "various execution points",
    "start": "1021680",
    "end": "1023839"
  },
  {
    "text": "um and then as you'll see uh making use",
    "start": "1023839",
    "end": "1025699"
  },
  {
    "text": "of BPF tail calls",
    "start": "1025699",
    "end": "1028959"
  },
  {
    "text": "so the reason that this",
    "start": "1029179",
    "end": "1031520"
  },
  {
    "text": "um verifier kind of balloon to",
    "start": "1031520",
    "end": "1033260"
  },
  {
    "text": "complexity was because as you guys know",
    "start": "1033260",
    "end": "1035000"
  },
  {
    "text": "if statements or branches and the",
    "start": "1035000",
    "end": "1036860"
  },
  {
    "text": "verifier so the verifier needs to",
    "start": "1036860",
    "end": "1039079"
  },
  {
    "text": "evaluate both of these branches whenever",
    "start": "1039079",
    "end": "1040699"
  },
  {
    "text": "they occur to make sure both are safe to",
    "start": "1040699",
    "end": "1042558"
  },
  {
    "text": "run and that adds to complexity",
    "start": "1042559",
    "end": "1045620"
  },
  {
    "text": "especially given the context of a loop",
    "start": "1045620",
    "end": "1048319"
  },
  {
    "text": "so these branches are going to be",
    "start": "1048319",
    "end": "1049580"
  },
  {
    "text": "exacerbated every time you Loop and it's",
    "start": "1049580",
    "end": "1051380"
  },
  {
    "text": "just going to balloon in terms of the",
    "start": "1051380",
    "end": "1052760"
  },
  {
    "text": "number of instructions they need to get",
    "start": "1052760",
    "end": "1054440"
  },
  {
    "text": "evaluated State pruning does help in",
    "start": "1054440",
    "end": "1057559"
  },
  {
    "text": "this scenario",
    "start": "1057559",
    "end": "1058960"
  },
  {
    "text": "where essentially it'll prune a state if",
    "start": "1058960",
    "end": "1061460"
  },
  {
    "text": "at a certain instruction it's seen the",
    "start": "1061460",
    "end": "1062960"
  },
  {
    "text": "registers before the register values",
    "start": "1062960",
    "end": "1065240"
  },
  {
    "text": "before but again you saw how much the",
    "start": "1065240",
    "end": "1068120"
  },
  {
    "text": "instruction the number of instructions",
    "start": "1068120",
    "end": "1070460"
  },
  {
    "text": "balloon so it's not going to save us",
    "start": "1070460",
    "end": "1073160"
  },
  {
    "start": "1073000",
    "end": "1073000"
  },
  {
    "text": "so this is a reprised architecture that",
    "start": "1073160",
    "end": "1075620"
  },
  {
    "text": "I came up with in order to be able to",
    "start": "1075620",
    "end": "1077240"
  },
  {
    "text": "support this in in BPF essentially",
    "start": "1077240",
    "end": "1079220"
  },
  {
    "text": "starting from the top left if an egress",
    "start": "1079220",
    "end": "1081200"
  },
  {
    "text": "program creates our start time and and",
    "start": "1081200",
    "end": "1084020"
  },
  {
    "text": "maintains some sort of header State",
    "start": "1084020",
    "end": "1085340"
  },
  {
    "text": "because we're going to have to maintain",
    "start": "1085340",
    "end": "1086720"
  },
  {
    "text": "State across these different blocks",
    "start": "1086720",
    "end": "1088760"
  },
  {
    "text": "we're going to have a base program that",
    "start": "1088760",
    "end": "1091280"
  },
  {
    "text": "essentially parses the status but then",
    "start": "1091280",
    "end": "1092960"
  },
  {
    "text": "calls these other blocks and a Saving",
    "start": "1092960",
    "end": "1095299"
  },
  {
    "text": "Grace in all of this was the the idea of",
    "start": "1095299",
    "end": "1097580"
  },
  {
    "text": "using BPF tail calls to essentially",
    "start": "1097580",
    "end": "1100039"
  },
  {
    "text": "reset the verifier state for those of",
    "start": "1100039",
    "end": "1102260"
  },
  {
    "text": "you that don't know tail calls when you",
    "start": "1102260",
    "end": "1104600"
  },
  {
    "text": "when you make it essentially resets it's",
    "start": "1104600",
    "end": "1107059"
  },
  {
    "text": "essentially essentially an independent",
    "start": "1107059",
    "end": "1108799"
  },
  {
    "text": "program so that's going to reset the",
    "start": "1108799",
    "end": "1110780"
  },
  {
    "text": "state that the verifier is in and and as",
    "start": "1110780",
    "end": "1113900"
  },
  {
    "text": "you go kind of go through this you have",
    "start": "1113900",
    "end": "1115100"
  },
  {
    "text": "a header manager that calls and the idea",
    "start": "1115100",
    "end": "1118400"
  },
  {
    "text": "is to kind of take away as much",
    "start": "1118400",
    "end": "1120380"
  },
  {
    "text": "complexity as possible away from these",
    "start": "1120380",
    "end": "1122000"
  },
  {
    "text": "parsers because that's where most of the",
    "start": "1122000",
    "end": "1123919"
  },
  {
    "text": "kind of ballooning happens you have tail",
    "start": "1123919",
    "end": "1126080"
  },
  {
    "text": "calls then to the header parser and then",
    "start": "1126080",
    "end": "1128780"
  },
  {
    "text": "the content length parser",
    "start": "1128780",
    "end": "1131299"
  },
  {
    "text": "um in order to get that content length",
    "start": "1131299",
    "end": "1134140"
  },
  {
    "text": "string or content length number into our",
    "start": "1134140",
    "end": "1137780"
  },
  {
    "text": "state so the header parser is going to",
    "start": "1137780",
    "end": "1139160"
  },
  {
    "text": "find the end of the header which is",
    "start": "1139160",
    "end": "1140299"
  },
  {
    "text": "going to create a Bound for uh for where",
    "start": "1140299",
    "end": "1143660"
  },
  {
    "text": "to look for that content link string and",
    "start": "1143660",
    "end": "1145460"
  },
  {
    "text": "then the content link header is going to",
    "start": "1145460",
    "end": "1146720"
  },
  {
    "text": "be found inside of that",
    "start": "1146720",
    "end": "1149360"
  },
  {
    "start": "1149000",
    "end": "1149000"
  },
  {
    "text": "so the BPF tail calls helped a lot",
    "start": "1149360",
    "end": "1152960"
  },
  {
    "text": "um but another efficiency was just kind",
    "start": "1152960",
    "end": "1155299"
  },
  {
    "text": "of the using the the vervose verifier",
    "start": "1155299",
    "end": "1158780"
  },
  {
    "text": "output",
    "start": "1158780",
    "end": "1160340"
  },
  {
    "text": "uh at so this is kind of a reprised bit",
    "start": "1160340",
    "end": "1163760"
  },
  {
    "text": "of code that had less branches but you",
    "start": "1163760",
    "end": "1166340"
  },
  {
    "text": "could still see at 30 iterations so",
    "start": "1166340",
    "end": "1168140"
  },
  {
    "text": "we've made some improvements that we had",
    "start": "1168140",
    "end": "1169580"
  },
  {
    "text": "514 000 instructions",
    "start": "1169580",
    "end": "1172580"
  },
  {
    "text": "um and so it just kind of took some time",
    "start": "1172580",
    "end": "1174559"
  },
  {
    "text": "to iterate through and look at why this",
    "start": "1174559",
    "end": "1177679"
  },
  {
    "text": "was happening so I bolded register three",
    "start": "1177679",
    "end": "1180260"
  },
  {
    "text": "and as you can see register three",
    "start": "1180260",
    "end": "1181880"
  },
  {
    "text": "correlates to this match variable and it",
    "start": "1181880",
    "end": "1184880"
  },
  {
    "text": "was saying that this match could be up",
    "start": "1184880",
    "end": "1187100"
  },
  {
    "text": "to here it was 67 even though the",
    "start": "1187100",
    "end": "1190340"
  },
  {
    "text": "purpose of this match variable is to",
    "start": "1190340",
    "end": "1192320"
  },
  {
    "text": "make sure or is to check that the",
    "start": "1192320",
    "end": "1195679"
  },
  {
    "text": "essentially the the length of the match",
    "start": "1195679",
    "end": "1197780"
  },
  {
    "text": "string and we're looking for the content",
    "start": "1197780",
    "end": "1199340"
  },
  {
    "text": "link string is if it's equal to 14 we",
    "start": "1199340",
    "end": "1201740"
  },
  {
    "text": "know that we've we've found our found",
    "start": "1201740",
    "end": "1203419"
  },
  {
    "text": "our match so the fact that it's 67 means",
    "start": "1203419",
    "end": "1205580"
  },
  {
    "text": "that the verifier isn't aware that this",
    "start": "1205580",
    "end": "1207679"
  },
  {
    "text": "is you know is in a state that we can",
    "start": "1207679",
    "end": "1209179"
  },
  {
    "text": "actually get to so this is a good",
    "start": "1209179",
    "end": "1211160"
  },
  {
    "text": "example of us needing to add explicit",
    "start": "1211160",
    "end": "1213260"
  },
  {
    "text": "boundaries in order to prevent the",
    "start": "1213260",
    "end": "1216200"
  },
  {
    "text": "verifier from kind of ballooning that so",
    "start": "1216200",
    "end": "1217700"
  },
  {
    "text": "after I added a boundary here that that",
    "start": "1217700",
    "end": "1220280"
  },
  {
    "text": "verifier complexity went down to 18 000",
    "start": "1220280",
    "end": "1223340"
  },
  {
    "text": "instructions so in 97 percent decrease",
    "start": "1223340",
    "end": "1225679"
  },
  {
    "text": "in in terms of the size",
    "start": "1225679",
    "end": "1229059"
  },
  {
    "text": "so using this reprised architecture and",
    "start": "1229220",
    "end": "1231740"
  },
  {
    "text": "and finding some of those those that",
    "start": "1231740",
    "end": "1233660"
  },
  {
    "text": "that increased complexity",
    "start": "1233660",
    "end": "1235580"
  },
  {
    "text": "um or and and finding some of the",
    "start": "1235580",
    "end": "1237440"
  },
  {
    "text": "finding some of those unbounded",
    "start": "1237440",
    "end": "1239360"
  },
  {
    "text": "variables",
    "start": "1239360",
    "end": "1240500"
  },
  {
    "text": "um I was able to get a Content length",
    "start": "1240500",
    "end": "1242240"
  },
  {
    "text": "parser of 600 characters per program and",
    "start": "1242240",
    "end": "1244760"
  },
  {
    "text": "then a header parser of 1024 characters",
    "start": "1244760",
    "end": "1248600"
  },
  {
    "text": "um that was just limited by memsat as",
    "start": "1248600",
    "end": "1250820"
  },
  {
    "text": "soon as you go above that that built-in",
    "start": "1250820",
    "end": "1252200"
  },
  {
    "text": "men's set wasn't wasn't working I'm sure",
    "start": "1252200",
    "end": "1253760"
  },
  {
    "text": "you could get it more",
    "start": "1253760",
    "end": "1255320"
  },
  {
    "text": "um but my thinking is that because these",
    "start": "1255320",
    "end": "1258080"
  },
  {
    "text": "are now independent programs",
    "start": "1258080",
    "end": "1260960"
  },
  {
    "text": "um tail call you can actually tail call",
    "start": "1260960",
    "end": "1262760"
  },
  {
    "text": "itself so this 600 character can just",
    "start": "1262760",
    "end": "1264799"
  },
  {
    "text": "keep iterating as long as if you have a",
    "start": "1264799",
    "end": "1266720"
  },
  {
    "text": "massive header and be able to actually",
    "start": "1266720",
    "end": "1268820"
  },
  {
    "text": "service any kind of use case you could",
    "start": "1268820",
    "end": "1270440"
  },
  {
    "text": "see if you had like a jumbo frame it",
    "start": "1270440",
    "end": "1272419"
  },
  {
    "text": "would take like 15 tail calls I have a",
    "start": "1272419",
    "end": "1274940"
  },
  {
    "text": "slide after this that I that I didn't",
    "start": "1274940",
    "end": "1276919"
  },
  {
    "text": "actually include just because of time",
    "start": "1276919",
    "end": "1278480"
  },
  {
    "text": "that goes into kind of the latency",
    "start": "1278480",
    "end": "1281000"
  },
  {
    "text": "implications the the you know",
    "start": "1281000",
    "end": "1282679"
  },
  {
    "text": "performance of these tail calls and and",
    "start": "1282679",
    "end": "1284539"
  },
  {
    "text": "it's been improving throughout the",
    "start": "1284539",
    "end": "1286400"
  },
  {
    "text": "kernels but that that is a consideration",
    "start": "1286400",
    "end": "1288020"
  },
  {
    "text": "but with this",
    "start": "1288020",
    "end": "1289520"
  },
  {
    "text": "architecture you should be able to",
    "start": "1289520",
    "end": "1291260"
  },
  {
    "text": "support it",
    "start": "1291260",
    "end": "1293600"
  },
  {
    "text": "um and and this is kind of just a a",
    "start": "1293600",
    "end": "1295640"
  },
  {
    "text": "review of what we're kind of doing here",
    "start": "1295640",
    "end": "1298220"
  },
  {
    "text": "so I've blocked the content length we we",
    "start": "1298220",
    "end": "1300799"
  },
  {
    "text": "get this content links header as the",
    "start": "1300799",
    "end": "1302780"
  },
  {
    "text": "packets are going in and then as the",
    "start": "1302780",
    "end": "1304220"
  },
  {
    "text": "received content is flowing in we just",
    "start": "1304220",
    "end": "1306919"
  },
  {
    "text": "match it against that content length",
    "start": "1306919",
    "end": "1308480"
  },
  {
    "text": "that's the responsibility of that",
    "start": "1308480",
    "end": "1310039"
  },
  {
    "text": "receive base prog and then as soon as",
    "start": "1310039",
    "end": "1312799"
  },
  {
    "text": "it's it's matched we just send send an",
    "start": "1312799",
    "end": "1314780"
  },
  {
    "text": "event to user space",
    "start": "1314780",
    "end": "1318100"
  },
  {
    "start": "1318000",
    "end": "1318000"
  },
  {
    "text": "so then now we have",
    "start": "1319159",
    "end": "1322039"
  },
  {
    "text": "um exported metrics so if you guys want",
    "start": "1322039",
    "end": "1323780"
  },
  {
    "text": "to check it out",
    "start": "1323780",
    "end": "1324919"
  },
  {
    "text": "um bumblebee is a really cool tool for",
    "start": "1324919",
    "end": "1327260"
  },
  {
    "text": "being able to work with with these kinds",
    "start": "1327260",
    "end": "1330140"
  },
  {
    "text": "of programs and be able to actually",
    "start": "1330140",
    "end": "1331880"
  },
  {
    "text": "visualize these metrics and Prometheus",
    "start": "1331880",
    "end": "1334100"
  },
  {
    "text": "it just takes data that is existing in",
    "start": "1334100",
    "end": "1336260"
  },
  {
    "text": "maps",
    "start": "1336260",
    "end": "1337520"
  },
  {
    "text": "um and and essentially export them so",
    "start": "1337520",
    "end": "1340039"
  },
  {
    "text": "they're they're viewable you can see the",
    "start": "1340039",
    "end": "1343340"
  },
  {
    "text": "number of requests the response codes as",
    "start": "1343340",
    "end": "1345380"
  },
  {
    "text": "well as the the latency that gets",
    "start": "1345380",
    "end": "1348620"
  },
  {
    "text": "exported right now the keys are the",
    "start": "1348620",
    "end": "1350780"
  },
  {
    "text": "client Adder that",
    "start": "1350780",
    "end": "1353200"
  },
  {
    "text": "10.0.0.97 which you can see at the in",
    "start": "1353200",
    "end": "1356360"
  },
  {
    "text": "the middle boxes correlates to this L7",
    "start": "1356360",
    "end": "1358400"
  },
  {
    "text": "metrics pod which I was just running a",
    "start": "1358400",
    "end": "1360020"
  },
  {
    "text": "curl request from and then that server",
    "start": "1360020",
    "end": "1362240"
  },
  {
    "text": "identity which which psyllium maintains",
    "start": "1362240",
    "end": "1364700"
  },
  {
    "text": "a state of so you can imagine kind of",
    "start": "1364700",
    "end": "1366500"
  },
  {
    "text": "translating these Keys into whatever",
    "start": "1366500",
    "end": "1368059"
  },
  {
    "text": "granularity you want",
    "start": "1368059",
    "end": "1369980"
  },
  {
    "text": "um and and kind of using psyllium's kind",
    "start": "1369980",
    "end": "1372380"
  },
  {
    "text": "of built-in",
    "start": "1372380",
    "end": "1373480"
  },
  {
    "text": "mechanism",
    "start": "1373480",
    "end": "1375760"
  },
  {
    "text": "cylinder's built-in state to be able to",
    "start": "1375760",
    "end": "1377780"
  },
  {
    "text": "kind of translate it to whatever you",
    "start": "1377780",
    "end": "1379159"
  },
  {
    "text": "you'd like to do",
    "start": "1379159",
    "end": "1381200"
  },
  {
    "start": "1381000",
    "end": "1381000"
  },
  {
    "text": "so there are some limitations to this",
    "start": "1381200",
    "end": "1383120"
  },
  {
    "text": "approach it doesn't right now support",
    "start": "1383120",
    "end": "1385400"
  },
  {
    "text": "HTTP pipelining it's it's you know it it",
    "start": "1385400",
    "end": "1388220"
  },
  {
    "text": "uses the fact that there's one response",
    "start": "1388220",
    "end": "1390020"
  },
  {
    "text": "per request which I'm sure could be",
    "start": "1390020",
    "end": "1392000"
  },
  {
    "text": "improved it's just not something that",
    "start": "1392000",
    "end": "1393380"
  },
  {
    "text": "this architecture supports it's not",
    "start": "1393380",
    "end": "1395179"
  },
  {
    "text": "supporting transferring coding chunked",
    "start": "1395179",
    "end": "1397820"
  },
  {
    "text": "um and and it doesn't work with with TOS",
    "start": "1397820",
    "end": "1400700"
  },
  {
    "text": "since the data is all encrypted pixie",
    "start": "1400700",
    "end": "1402799"
  },
  {
    "text": "has a really cool mechanism and the",
    "start": "1402799",
    "end": "1406340"
  },
  {
    "text": "previous talk was talking about you know",
    "start": "1406340",
    "end": "1407900"
  },
  {
    "text": "you probes and being able to hook in",
    "start": "1407900",
    "end": "1409520"
  },
  {
    "text": "there in order to support encrypted data",
    "start": "1409520",
    "end": "1411980"
  },
  {
    "text": "that's that's really cool and pixies",
    "start": "1411980",
    "end": "1413179"
  },
  {
    "text": "doing some really cool work there in",
    "start": "1413179",
    "end": "1414679"
  },
  {
    "text": "order to support that",
    "start": "1414679",
    "end": "1416659"
  },
  {
    "start": "1416000",
    "end": "1416000"
  },
  {
    "text": "but uh in conclusion",
    "start": "1416659",
    "end": "1419240"
  },
  {
    "text": "um there are quite a few considerations",
    "start": "1419240",
    "end": "1421340"
  },
  {
    "text": "whenever you're trying to kind of move",
    "start": "1421340",
    "end": "1423440"
  },
  {
    "text": "responsibility away from user space into",
    "start": "1423440",
    "end": "1425600"
  },
  {
    "text": "BPF and it's very difficult to do",
    "start": "1425600",
    "end": "1427640"
  },
  {
    "text": "especially with the complexity limits",
    "start": "1427640",
    "end": "1429440"
  },
  {
    "text": "that the verifier places but",
    "start": "1429440",
    "end": "1432200"
  },
  {
    "text": "um being able to check out that verbose",
    "start": "1432200",
    "end": "1434960"
  },
  {
    "text": "verifier as well as utilize BPF tail",
    "start": "1434960",
    "end": "1438140"
  },
  {
    "text": "calls",
    "start": "1438140",
    "end": "1439179"
  },
  {
    "text": "we are able to move Solutions into the",
    "start": "1439179",
    "end": "1442460"
  },
  {
    "text": "kernel and be able to essentially like",
    "start": "1442460",
    "end": "1444559"
  },
  {
    "text": "service more complex use cases which is",
    "start": "1444559",
    "end": "1446480"
  },
  {
    "text": "exciting if we're wanting to kind of do",
    "start": "1446480",
    "end": "1448280"
  },
  {
    "text": "things more you know dynamically",
    "start": "1448280",
    "end": "1452120"
  },
  {
    "text": "um and but there are you know there's",
    "start": "1452120",
    "end": "1453919"
  },
  {
    "text": "there's both pros and cons to this",
    "start": "1453919",
    "end": "1455659"
  },
  {
    "text": "you're not having to iterate the entire",
    "start": "1455659",
    "end": "1457460"
  },
  {
    "text": "packet in order to support this um but",
    "start": "1457460",
    "end": "1459919"
  },
  {
    "text": "you are adding kind of latency to the",
    "start": "1459919",
    "end": "1462200"
  },
  {
    "text": "data path by by doing this um which is",
    "start": "1462200",
    "end": "1465200"
  },
  {
    "text": "you know non-zero and something",
    "start": "1465200",
    "end": "1466640"
  },
  {
    "text": "definitely to consider but the result is",
    "start": "1466640",
    "end": "1469100"
  },
  {
    "text": "is golden metrics done purely in in ebpf",
    "start": "1469100",
    "end": "1472220"
  },
  {
    "text": "and then exported to user space just for",
    "start": "1472220",
    "end": "1475340"
  },
  {
    "text": "um you know uh just for Prometheus",
    "start": "1475340",
    "end": "1477559"
  },
  {
    "text": "essentially integrating with Prometheus",
    "start": "1477559",
    "end": "1479419"
  },
  {
    "text": "tooling but that is it thanks so much",
    "start": "1479419",
    "end": "1482480"
  },
  {
    "text": "everyone",
    "start": "1482480",
    "end": "1483440"
  },
  {
    "text": "um yeah appreciate it",
    "start": "1483440",
    "end": "1485910"
  },
  {
    "text": "[Applause]",
    "start": "1485910",
    "end": "1490749"
  }
]