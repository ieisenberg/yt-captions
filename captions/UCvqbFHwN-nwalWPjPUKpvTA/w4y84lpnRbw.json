[
  {
    "text": "hello",
    "start": "560",
    "end": "2520"
  },
  {
    "text": "everyone um I'm Marco Yorio i'm uh",
    "start": "2520",
    "end": "6160"
  },
  {
    "text": "working at isovalent at Cisco and today",
    "start": "6160",
    "end": "8639"
  },
  {
    "text": "I'm with Arthur uh from Ledger to talk",
    "start": "8639",
    "end": "11679"
  },
  {
    "text": "about multicluster networking with",
    "start": "11679",
    "end": "13920"
  },
  {
    "text": "selium and MCS API so uh let me jump",
    "start": "13920",
    "end": "18640"
  },
  {
    "text": "right into what cluster mesh is and in a",
    "start": "18640",
    "end": "21520"
  },
  {
    "text": "nutshell cluster mesh extends the Celium",
    "start": "21520",
    "end": "24000"
  },
  {
    "text": "data puff and the Celium functionalities",
    "start": "24000",
    "end": "26320"
  },
  {
    "text": "you are used to to a multicluster",
    "start": "26320",
    "end": "28880"
  },
  {
    "text": "scenario",
    "start": "28880",
    "end": "30400"
  },
  {
    "text": "um speaking a bit about the architecture",
    "start": "30400",
    "end": "33200"
  },
  {
    "text": "the main takeaway here is that uh we",
    "start": "33200",
    "end": "36559"
  },
  {
    "text": "have the agents which need to pull",
    "start": "36559",
    "end": "38559"
  },
  {
    "text": "information from the other clusters and",
    "start": "38559",
    "end": "41520"
  },
  {
    "text": "they do this um typically via the",
    "start": "41520",
    "end": "44079"
  },
  {
    "text": "cluster mesh API server which",
    "start": "44079",
    "end": "46399"
  },
  {
    "text": "essentially provides a cached view of",
    "start": "46399",
    "end": "48640"
  },
  {
    "text": "selected information from the Kubernetes",
    "start": "48640",
    "end": "50879"
  },
  {
    "text": "API server of the other clusters um it",
    "start": "50879",
    "end": "54000"
  },
  {
    "text": "synchronizes them into CD from which uh",
    "start": "54000",
    "end": "57360"
  },
  {
    "text": "the agents can either directly pull or",
    "start": "57360",
    "end": "60320"
  },
  {
    "text": "go through uh cache uh which is provided",
    "start": "60320",
    "end": "63120"
  },
  {
    "text": "by KV store",
    "start": "63120",
    "end": "65000"
  },
  {
    "text": "mesh um so the main abstraction in the",
    "start": "65000",
    "end": "69600"
  },
  {
    "text": "context of cluster mesh and in the",
    "start": "69600",
    "end": "71600"
  },
  {
    "text": "context of multicluster services with",
    "start": "71600",
    "end": "74119"
  },
  {
    "text": "selium is the global service the idea is",
    "start": "74119",
    "end": "77759"
  },
  {
    "text": "that a global service is a service which",
    "start": "77759",
    "end": "80000"
  },
  {
    "text": "can load balance to backends which are",
    "start": "80000",
    "end": "82240"
  },
  {
    "text": "spread across multiple",
    "start": "82240",
    "end": "84520"
  },
  {
    "text": "clusters and it's basically a normal",
    "start": "84520",
    "end": "87840"
  },
  {
    "text": "service which exists identically in",
    "start": "87840",
    "end": "90640"
  },
  {
    "text": "multiple clusters and whose behavior is",
    "start": "90640",
    "end": "93680"
  },
  {
    "text": "controlled via annotations speaking of",
    "start": "93680",
    "end": "96320"
  },
  {
    "text": "annotations the most important one is",
    "start": "96320",
    "end": "99040"
  },
  {
    "text": "the global annotation which essentially",
    "start": "99040",
    "end": "101360"
  },
  {
    "text": "has two meanings on the one end it um",
    "start": "101360",
    "end": "105040"
  },
  {
    "text": "advertises the backends of the local",
    "start": "105040",
    "end": "107360"
  },
  {
    "text": "service to the other clusters and on the",
    "start": "107360",
    "end": "110159"
  },
  {
    "text": "other it enables the local service to",
    "start": "110159",
    "end": "113360"
  },
  {
    "text": "load balance to backends which are",
    "start": "113360",
    "end": "115680"
  },
  {
    "text": "advertised by the other",
    "start": "115680",
    "end": "118200"
  },
  {
    "text": "clusters then you can tune a bit more",
    "start": "118200",
    "end": "120719"
  },
  {
    "text": "this behavior via other annotations one",
    "start": "120719",
    "end": "123439"
  },
  {
    "text": "is the shared one which essentially if",
    "start": "123439",
    "end": "126079"
  },
  {
    "text": "you set that to false it allows to",
    "start": "126079",
    "end": "128479"
  },
  {
    "text": "disable um advertising your own local um",
    "start": "128479",
    "end": "133680"
  },
  {
    "text": "backends to the other clusters but still",
    "start": "133680",
    "end": "136160"
  },
  {
    "text": "use the ones advertised by the other",
    "start": "136160",
    "end": "138400"
  },
  {
    "text": "clusters as in this case by cluster 2 um",
    "start": "138400",
    "end": "142879"
  },
  {
    "text": "and finally there's defininity one which",
    "start": "142879",
    "end": "145599"
  },
  {
    "text": "you can set to either local or remote to",
    "start": "145599",
    "end": "148080"
  },
  {
    "text": "favor the local or remote backends as",
    "start": "148080",
    "end": "150640"
  },
  {
    "text": "long as one of them is healthy and then",
    "start": "150640",
    "end": "153200"
  },
  {
    "text": "fall back to the others only if none of",
    "start": "153200",
    "end": "155360"
  },
  {
    "text": "the preferred ones is",
    "start": "155360",
    "end": "157800"
  },
  {
    "text": "available so on the bright side of",
    "start": "157800",
    "end": "160720"
  },
  {
    "text": "global services they are straightforward",
    "start": "160720",
    "end": "162800"
  },
  {
    "text": "to configure you just create the",
    "start": "162800",
    "end": "164480"
  },
  {
    "text": "services apply an annotation and that's",
    "start": "164480",
    "end": "167040"
  },
  {
    "text": "done they are fully integrated in selium",
    "start": "167040",
    "end": "169680"
  },
  {
    "text": "so they work with ingress with gateway",
    "start": "169680",
    "end": "172080"
  },
  {
    "text": "API and so on and they don't pose any",
    "start": "172080",
    "end": "174879"
  },
  {
    "text": "overhead on Kubernetes we are not",
    "start": "174879",
    "end": "176560"
  },
  {
    "text": "creating any additional resource there",
    "start": "176560",
    "end": "179440"
  },
  {
    "text": "yet they also come with some charcomings",
    "start": "179440",
    "end": "182239"
  },
  {
    "text": "and the most important one is that they",
    "start": "182239",
    "end": "184400"
  },
  {
    "text": "are not a standard API which means they",
    "start": "184400",
    "end": "187120"
  },
  {
    "text": "don't really play well with some",
    "start": "187120",
    "end": "189519"
  },
  {
    "text": "third-party software so um this is where",
    "start": "189519",
    "end": "193440"
  },
  {
    "text": "endpoint slice synchronization enters",
    "start": "193440",
    "end": "195519"
  },
  {
    "text": "and let me reiterate briefly on the why",
    "start": "195519",
    "end": "198879"
  },
  {
    "text": "we do need this so here we have two",
    "start": "198879",
    "end": "201760"
  },
  {
    "text": "examples on the left we have the fact",
    "start": "201760",
    "end": "204480"
  },
  {
    "text": "that global services historically didn't",
    "start": "204480",
    "end": "206879"
  },
  {
    "text": "play well um with headless services and",
    "start": "206879",
    "end": "210400"
  },
  {
    "text": "the reason is that headless services are",
    "start": "210400",
    "end": "212560"
  },
  {
    "text": "a bit special as cord DNS is providing",
    "start": "212560",
    "end": "215920"
  },
  {
    "text": "directly the list of backends rather",
    "start": "215920",
    "end": "218000"
  },
  {
    "text": "than the AP of the service itself on the",
    "start": "218000",
    "end": "221040"
  },
  {
    "text": "right we see that uh global services",
    "start": "221040",
    "end": "224080"
  },
  {
    "text": "don't again historically didn't play",
    "start": "224080",
    "end": "226720"
  },
  {
    "text": "well with ingress and ginics or other",
    "start": "226720",
    "end": "229360"
  },
  {
    "text": "thirdparty um ingress controllers um so",
    "start": "229360",
    "end": "233200"
  },
  {
    "text": "that they weren't actually benefiting",
    "start": "233200",
    "end": "235680"
  },
  {
    "text": "from the remote backends um associated",
    "start": "235680",
    "end": "238799"
  },
  {
    "text": "with a given service targeted by the",
    "start": "238799",
    "end": "241799"
  },
  {
    "text": "ingress so why aren't gold bus services",
    "start": "241799",
    "end": "245120"
  },
  {
    "text": "enough in this case and the common",
    "start": "245120",
    "end": "246799"
  },
  {
    "text": "denominator is that both these um tools",
    "start": "246799",
    "end": "250239"
  },
  {
    "text": "actually leverage the endpoint slices to",
    "start": "250239",
    "end": "253120"
  },
  {
    "text": "directly uh know all the backends rather",
    "start": "253120",
    "end": "256000"
  },
  {
    "text": "than going through the service and while",
    "start": "256000",
    "end": "258720"
  },
  {
    "text": "Selium knows internally about both local",
    "start": "258720",
    "end": "261840"
  },
  {
    "text": "and remote backends that's not the case",
    "start": "261840",
    "end": "264160"
  },
  {
    "text": "for the endpoint slices which only",
    "start": "264160",
    "end": "266160"
  },
  {
    "text": "include the local backends so here is",
    "start": "266160",
    "end": "269600"
  },
  {
    "text": "where endpoint slice synchronization",
    "start": "269600",
    "end": "272280"
  },
  {
    "text": "enters and the idea is that the selium",
    "start": "272280",
    "end": "275120"
  },
  {
    "text": "operator then automatically creates in",
    "start": "275120",
    "end": "278160"
  },
  {
    "text": "the local cluster endpoint slices",
    "start": "278160",
    "end": "280720"
  },
  {
    "text": "targeting the backends which are in the",
    "start": "280720",
    "end": "282720"
  },
  {
    "text": "remote clusters this is a new feature",
    "start": "282720",
    "end": "285520"
  },
  {
    "text": "available starting in selium 116 it's",
    "start": "285520",
    "end": "288479"
  },
  {
    "text": "behind a feature flag but then if you",
    "start": "288479",
    "end": "290720"
  },
  {
    "text": "enable that it's enabled by default for",
    "start": "290720",
    "end": "293440"
  },
  {
    "text": "headless services because that's",
    "start": "293440",
    "end": "295440"
  },
  {
    "text": "required to make them work and it's",
    "start": "295440",
    "end": "297759"
  },
  {
    "text": "optin for all the other classes of",
    "start": "297759",
    "end": "299759"
  },
  {
    "text": "services the reason being that you may",
    "start": "299759",
    "end": "302240"
  },
  {
    "text": "want to enable it if necessary you may",
    "start": "302240",
    "end": "304720"
  },
  {
    "text": "not want otherwise to avoid adding",
    "start": "304720",
    "end": "307199"
  },
  {
    "text": "additional overhead on the Kubernetes",
    "start": "307199",
    "end": "309360"
  },
  {
    "text": "API",
    "start": "309360",
    "end": "310759"
  },
  {
    "text": "server so let me jump right into a demo",
    "start": "310759",
    "end": "314160"
  },
  {
    "text": "to show uh the behavior here and we",
    "start": "314160",
    "end": "317039"
  },
  {
    "text": "start with this a setup which has three",
    "start": "317039",
    "end": "319520"
  },
  {
    "text": "clusters we already have our application",
    "start": "319520",
    "end": "322120"
  },
  {
    "text": "deployed and we start by creating a",
    "start": "322120",
    "end": "325520"
  },
  {
    "text": "global service which targets the rebel",
    "start": "325520",
    "end": "327759"
  },
  {
    "text": "base",
    "start": "327759",
    "end": "329160"
  },
  {
    "text": "application and here we see that uh",
    "start": "329160",
    "end": "332400"
  },
  {
    "text": "again the endpoint slices only mention",
    "start": "332400",
    "end": "334880"
  },
  {
    "text": "the local endpoints selium is aware of",
    "start": "334880",
    "end": "337280"
  },
  {
    "text": "all of them and indeed if we try curling",
    "start": "337280",
    "end": "340560"
  },
  {
    "text": "the service it gets responses from",
    "start": "340560",
    "end": "343440"
  },
  {
    "text": "backends from all the clusters",
    "start": "343440",
    "end": "346240"
  },
  {
    "text": "we now create an ingress um using the",
    "start": "346240",
    "end": "349280"
  },
  {
    "text": "ingress and ginext class uh and we",
    "start": "349280",
    "end": "351840"
  },
  {
    "text": "target again the same service and we see",
    "start": "351840",
    "end": "354000"
  },
  {
    "text": "that by default we only get responses",
    "start": "354000",
    "end": "357360"
  },
  {
    "text": "from the local cluster even though the",
    "start": "357360",
    "end": "359360"
  },
  {
    "text": "service is actually global so we now",
    "start": "359360",
    "end": "361840"
  },
  {
    "text": "enable endpoint slice synchronization",
    "start": "361840",
    "end": "364160"
  },
  {
    "text": "with the annotation again we see um that",
    "start": "364160",
    "end": "367440"
  },
  {
    "text": "we get endpoint slices from all the",
    "start": "367440",
    "end": "369440"
  },
  {
    "text": "clusters and now the replies come from",
    "start": "369440",
    "end": "372479"
  },
  {
    "text": "all the clusters indeed so finally let's",
    "start": "372479",
    "end": "376160"
  },
  {
    "text": "create also an edless service targeting",
    "start": "376160",
    "end": "378560"
  },
  {
    "text": "again the same um set of backends we see",
    "start": "378560",
    "end": "382720"
  },
  {
    "text": "that now the endpoint slices get",
    "start": "382720",
    "end": "384800"
  },
  {
    "text": "automatically created for all the",
    "start": "384800",
    "end": "386919"
  },
  {
    "text": "backends and if we dig the service then",
    "start": "386919",
    "end": "390560"
  },
  {
    "text": "um we can see that the list of backends",
    "start": "390560",
    "end": "393360"
  },
  {
    "text": "returned includes both the local and the",
    "start": "393360",
    "end": "395759"
  },
  {
    "text": "remote",
    "start": "395759",
    "end": "397319"
  },
  {
    "text": "ones so let me dig a bit into how all of",
    "start": "397319",
    "end": "401360"
  },
  {
    "text": "this works under the hood and this is",
    "start": "401360",
    "end": "403520"
  },
  {
    "text": "the PR from Arthur which introduced",
    "start": "403520",
    "end": "406080"
  },
  {
    "text": "actually the feature um architecturally",
    "start": "406080",
    "end": "409120"
  },
  {
    "text": "speaking the main difference is that now",
    "start": "409120",
    "end": "411440"
  },
  {
    "text": "the operator also knows needs to know",
    "start": "411440",
    "end": "414400"
  },
  {
    "text": "about the remote cluster information and",
    "start": "414400",
    "end": "416560"
  },
  {
    "text": "so it's also connected um to the cluster",
    "start": "416560",
    "end": "419759"
  },
  {
    "text": "mesh uh control plane",
    "start": "419759",
    "end": "422199"
  },
  {
    "text": "logic so um reconciling endpoint slices",
    "start": "422199",
    "end": "426080"
  },
  {
    "text": "is actually a bit tricky there are",
    "start": "426080",
    "end": "428160"
  },
  {
    "text": "there's some caveats in the logic uh",
    "start": "428160",
    "end": "430560"
  },
  {
    "text": "which is fairly advanced mainly due to",
    "start": "430560",
    "end": "433639"
  },
  {
    "text": "batching and like splitting the the",
    "start": "433639",
    "end": "437120"
  },
  {
    "text": "endpoints like endpoints in in batches",
    "start": "437120",
    "end": "439520"
  },
  {
    "text": "again and the reason is u they need to",
    "start": "439520",
    "end": "442400"
  },
  {
    "text": "play well in terms of performance and",
    "start": "442400",
    "end": "444599"
  },
  {
    "text": "scaling and so why don't we reuse um the",
    "start": "444599",
    "end": "448639"
  },
  {
    "text": "logic which is already available there",
    "start": "448639",
    "end": "450639"
  },
  {
    "text": "in Kubernetes it it's already there so",
    "start": "450639",
    "end": "453599"
  },
  {
    "text": "we could reuse it um in this case as",
    "start": "453599",
    "end": "457440"
  },
  {
    "text": "And that's what we did it's obviously",
    "start": "457440",
    "end": "459840"
  },
  {
    "text": "easier said than done and the reason is",
    "start": "459840",
    "end": "462160"
  },
  {
    "text": "that um the main difference here is we",
    "start": "462160",
    "end": "465280"
  },
  {
    "text": "are not actually retrieving information",
    "start": "465280",
    "end": "467759"
  },
  {
    "text": "from Kubernetes but uh from the cluster",
    "start": "467759",
    "end": "470720"
  },
  {
    "text": "mesh control plane logic and so we see",
    "start": "470720",
    "end": "473759"
  },
  {
    "text": "here that the endpoint slice controller",
    "start": "473759",
    "end": "476319"
  },
  {
    "text": "is actually um taking information from",
    "start": "476319",
    "end": "479360"
  },
  {
    "text": "four different sources only the endpoint",
    "start": "479360",
    "end": "482080"
  },
  {
    "text": "slices come directly from Kubernetes uh",
    "start": "482080",
    "end": "485199"
  },
  {
    "text": "via an informer while all the others are",
    "start": "485199",
    "end": "487919"
  },
  {
    "text": "sort of mocked informers which bridge",
    "start": "487919",
    "end": "490319"
  },
  {
    "text": "the information from the cluster mesh",
    "start": "490319",
    "end": "492400"
  },
  {
    "text": "control plane into the controller",
    "start": "492400",
    "end": "495039"
  },
  {
    "text": "there's also a bit of extra logic um",
    "start": "495039",
    "end": "498240"
  },
  {
    "text": "before and after processing the endpoint",
    "start": "498240",
    "end": "500319"
  },
  {
    "text": "slices themselves so to make sure that",
    "start": "500319",
    "end": "503120"
  },
  {
    "text": "everything plays nice um with these",
    "start": "503120",
    "end": "507160"
  },
  {
    "text": "adaptations and with that let me hand it",
    "start": "507160",
    "end": "510000"
  },
  {
    "text": "over to Arthur to talk about MCS",
    "start": "510000",
    "end": "513399"
  },
  {
    "text": "API so um if you remember the the title",
    "start": "513399",
    "end": "518399"
  },
  {
    "text": "of this talk was simplifying",
    "start": "518399",
    "end": "520240"
  },
  {
    "text": "multicluster networking with selium and",
    "start": "520240",
    "end": "522880"
  },
  {
    "text": "MCS API and we are finally getting to",
    "start": "522880",
    "end": "526880"
  },
  {
    "text": "the MCS API part but what is even MCS",
    "start": "526880",
    "end": "531560"
  },
  {
    "text": "API so the full name of MCS API is",
    "start": "531560",
    "end": "535200"
  },
  {
    "text": "multicluster um service API it's",
    "start": "535200",
    "end": "538240"
  },
  {
    "text": "basically a standard that aim to extend",
    "start": "538240",
    "end": "540720"
  },
  {
    "text": "the service but across multiple clusters",
    "start": "540720",
    "end": "544240"
  },
  {
    "text": "it defined two new custom resources one",
    "start": "544240",
    "end": "547360"
  },
  {
    "text": "is service export it's a very very",
    "start": "547360",
    "end": "549760"
  },
  {
    "text": "simple resources that tag a service of",
    "start": "549760",
    "end": "552640"
  },
  {
    "text": "the same name as to be exported across",
    "start": "552640",
    "end": "555519"
  },
  {
    "text": "clusters and you also have the service",
    "start": "555519",
    "end": "558720"
  },
  {
    "text": "import resource uh which is a more",
    "start": "558720",
    "end": "561760"
  },
  {
    "text": "complex one but it it is created for you",
    "start": "561760",
    "end": "564640"
  },
  {
    "text": "it aim to replace a service but in a",
    "start": "564640",
    "end": "568000"
  },
  {
    "text": "multicluster",
    "start": "568000",
    "end": "569399"
  },
  {
    "text": "scenario and finally uh one last thing",
    "start": "569399",
    "end": "572880"
  },
  {
    "text": "about MSS API is that the DNS domain",
    "start": "572880",
    "end": "577040"
  },
  {
    "text": "won't be uh your usual cluster local",
    "start": "577040",
    "end": "579680"
  },
  {
    "text": "domain it would be uh cluster set local",
    "start": "579680",
    "end": "583440"
  },
  {
    "text": "but we will see that in a bit",
    "start": "583440",
    "end": "586320"
  },
  {
    "text": "um so MCS APIs on a high level view uh",
    "start": "586320",
    "end": "590800"
  },
  {
    "text": "looks like that so you have a service uh",
    "start": "590800",
    "end": "594800"
  },
  {
    "text": "a service export of the same name so you",
    "start": "594800",
    "end": "596800"
  },
  {
    "text": "tag it to be exported and then there is",
    "start": "596800",
    "end": "599760"
  },
  {
    "text": "something that takes all the exported",
    "start": "599760",
    "end": "603040"
  },
  {
    "text": "services from all your clusters merge it",
    "start": "603040",
    "end": "607200"
  },
  {
    "text": "and the aggregated resource with all",
    "start": "607200",
    "end": "609920"
  },
  {
    "text": "those um properties will be created into",
    "start": "609920",
    "end": "613680"
  },
  {
    "text": "the service import resource and it will",
    "start": "613680",
    "end": "616560"
  },
  {
    "text": "be created in all clusters as long as",
    "start": "616560",
    "end": "619360"
  },
  {
    "text": "the names exist and this is super",
    "start": "619360",
    "end": "622160"
  },
  {
    "text": "important because before we had to",
    "start": "622160",
    "end": "624320"
  },
  {
    "text": "create the service manually if even if",
    "start": "624320",
    "end": "627120"
  },
  {
    "text": "we were just consuming it with any part",
    "start": "627120",
    "end": "630399"
  },
  {
    "text": "backing it um so this address a major",
    "start": "630399",
    "end": "635120"
  },
  {
    "text": "pain point into the usage of selenium",
    "start": "635120",
    "end": "638160"
  },
  {
    "text": "cluster",
    "start": "638160",
    "end": "639160"
  },
  {
    "text": "mesh and regarding DNS now um so here",
    "start": "639160",
    "end": "645120"
  },
  {
    "text": "you see that uh the cluster set local",
    "start": "645120",
    "end": "647839"
  },
  {
    "text": "domain is mainly uh about the same as",
    "start": "647839",
    "end": "651279"
  },
  {
    "text": "the cluster local domain it is the exact",
    "start": "651279",
    "end": "653519"
  },
  {
    "text": "same format as you see on the bottom of",
    "start": "653519",
    "end": "655600"
  },
  {
    "text": "the schema um the other difference is",
    "start": "655600",
    "end": "658959"
  },
  {
    "text": "that it will take its IP from the",
    "start": "658959",
    "end": "661360"
  },
  {
    "text": "service import resource and not the",
    "start": "661360",
    "end": "663600"
  },
  {
    "text": "service resource and the IP can also be",
    "start": "663600",
    "end": "666320"
  },
  {
    "text": "different across uh multiple",
    "start": "666320",
    "end": "669240"
  },
  {
    "text": "clusters now for LS services it works as",
    "start": "669240",
    "end": "673279"
  },
  {
    "text": "you might expect so exact same uh format",
    "start": "673279",
    "end": "676000"
  },
  {
    "text": "of the DNS resource um and it returns uh",
    "start": "676000",
    "end": "680640"
  },
  {
    "text": "the IP of the pods of every pods in your",
    "start": "680640",
    "end": "687160"
  },
  {
    "text": "clusters there is some uh",
    "start": "687160",
    "end": "689839"
  },
  {
    "text": "particularities with stateful set now as",
    "start": "689839",
    "end": "692800"
  },
  {
    "text": "you might know um if you have a stateful",
    "start": "692800",
    "end": "695600"
  },
  {
    "text": "set the governing services of a stateful",
    "start": "695600",
    "end": "698800"
  },
  {
    "text": "set can set host name and you can find",
    "start": "698800",
    "end": "701760"
  },
  {
    "text": "that in um DNS resources and in that",
    "start": "701760",
    "end": "706000"
  },
  {
    "text": "case uh for the cluster set local domain",
    "start": "706000",
    "end": "708560"
  },
  {
    "text": "we also integrate the cluster ID so you",
    "start": "708560",
    "end": "712160"
  },
  {
    "text": "really know that this is this exact pod",
    "start": "712160",
    "end": "714640"
  },
  {
    "text": "and there is no ambiguity of where that",
    "start": "714640",
    "end": "717360"
  },
  {
    "text": "pod is because buzz one here could be in",
    "start": "717360",
    "end": "719839"
  },
  {
    "text": "cluster one and cluster two But here you",
    "start": "719839",
    "end": "721839"
  },
  {
    "text": "have the cluster ID so you",
    "start": "721839",
    "end": "724279"
  },
  {
    "text": "know and I wanted to finish off this",
    "start": "724279",
    "end": "728600"
  },
  {
    "text": "um general MCS API presentation by",
    "start": "728600",
    "end": "731920"
  },
  {
    "text": "shouting out uh all those amazing",
    "start": "731920",
    "end": "734639"
  },
  {
    "text": "project that integrate NCS API it could",
    "start": "734639",
    "end": "738000"
  },
  {
    "text": "be uh a full implementation or just um",
    "start": "738000",
    "end": "742079"
  },
  {
    "text": "third party integration like gateway API",
    "start": "742079",
    "end": "744560"
  },
  {
    "text": "for instance so you have many cloud",
    "start": "744560",
    "end": "746560"
  },
  {
    "text": "provider and many other projects if you",
    "start": "746560",
    "end": "748959"
  },
  {
    "text": "are interested in to says API uh you can",
    "start": "748959",
    "end": "751519"
  },
  {
    "text": "check those folks out uh but we are at",
    "start": "751519",
    "end": "755279"
  },
  {
    "text": "selium con and this is selium right so",
    "start": "755279",
    "end": "758079"
  },
  {
    "text": "we will talk a bit more um about selon",
    "start": "758079",
    "end": "761320"
  },
  {
    "text": "specifically so",
    "start": "761320",
    "end": "764000"
  },
  {
    "text": "um mcs API is supported as of beta state",
    "start": "764000",
    "end": "769200"
  },
  {
    "text": "uh starting last release so couple",
    "start": "769200",
    "end": "771200"
  },
  {
    "text": "months ago uh this is the 1.17 release",
    "start": "771200",
    "end": "775200"
  },
  {
    "text": "and as you will see in a second it takes",
    "start": "775200",
    "end": "777440"
  },
  {
    "text": "full advantage of the uh existing",
    "start": "777440",
    "end": "780480"
  },
  {
    "text": "cluster mesh infrastructure and features",
    "start": "780480",
    "end": "782480"
  },
  {
    "text": "that Marco presented you and um so to",
    "start": "782480",
    "end": "786480"
  },
  {
    "text": "install it you need to have a cluster",
    "start": "786480",
    "end": "789279"
  },
  {
    "text": "mesh ready but also install the MS API",
    "start": "789279",
    "end": "793120"
  },
  {
    "text": "CRDs about service import and export and",
    "start": "793120",
    "end": "797200"
  },
  {
    "text": "the last annoying part is that you need",
    "start": "797200",
    "end": "799600"
  },
  {
    "text": "to install the multicluster plug-in in",
    "start": "799600",
    "end": "802680"
  },
  {
    "text": "Cords uh this is a bit annoying because",
    "start": "802680",
    "end": "805680"
  },
  {
    "text": "it's an external plugin and as of every",
    "start": "805680",
    "end": "809600"
  },
  {
    "text": "external plugin you need to recompile",
    "start": "809600",
    "end": "811959"
  },
  {
    "text": "cords and we don't do that for you for",
    "start": "811959",
    "end": "814760"
  },
  {
    "text": "now but um this is something that we",
    "start": "814760",
    "end": "818000"
  },
  {
    "text": "want to address mainly uh possibly by",
    "start": "818000",
    "end": "821040"
  },
  {
    "text": "integrating this functionality directly",
    "start": "821040",
    "end": "822800"
  },
  {
    "text": "into coordinates we are already talking",
    "start": "822800",
    "end": "825440"
  },
  {
    "text": "with the maintainers and doing that uh",
    "start": "825440",
    "end": "828720"
  },
  {
    "text": "but this might happen or not we'll",
    "start": "828720",
    "end": "832040"
  },
  {
    "text": "see and now regarding the art part which",
    "start": "832040",
    "end": "835839"
  },
  {
    "text": "is well the implementation of it um this",
    "start": "835839",
    "end": "839199"
  },
  {
    "text": "is well a schema uh representing the",
    "start": "839199",
    "end": "842079"
  },
  {
    "text": "view of a local cluster essentially um",
    "start": "842079",
    "end": "845519"
  },
  {
    "text": "on the left part you have um how you get",
    "start": "845519",
    "end": "849600"
  },
  {
    "text": "info about all your exported services",
    "start": "849600",
    "end": "854519"
  },
  {
    "text": "um and uh basically this will reach uh",
    "start": "854519",
    "end": "858800"
  },
  {
    "text": "the cluster mesh API servers of uh the",
    "start": "858800",
    "end": "862320"
  },
  {
    "text": "remote clusters i can point it with the",
    "start": "862320",
    "end": "865440"
  },
  {
    "text": "cursor so here and then we will gather",
    "start": "865440",
    "end": "868800"
  },
  {
    "text": "um info of the exported service in the",
    "start": "868800",
    "end": "871519"
  },
  {
    "text": "local cluster mesh API servers and then",
    "start": "871519",
    "end": "874160"
  },
  {
    "text": "the operator here can basically read all",
    "start": "874160",
    "end": "877519"
  },
  {
    "text": "the info from the remote clusters but",
    "start": "877519",
    "end": "881600"
  },
  {
    "text": "also from the local clusters via simply",
    "start": "881600",
    "end": "884560"
  },
  {
    "text": "reading the Kubernetes API server and",
    "start": "884560",
    "end": "887600"
  },
  {
    "text": "then we create this service import",
    "start": "887600",
    "end": "890720"
  },
  {
    "text": "resources",
    "start": "890720",
    "end": "892480"
  },
  {
    "text": "um and we could be done with it because",
    "start": "892480",
    "end": "896240"
  },
  {
    "text": "the service import um is meant to",
    "start": "896240",
    "end": "898959"
  },
  {
    "text": "replace a service but here come the",
    "start": "898959",
    "end": "902160"
  },
  {
    "text": "tricky part uh because we don't really",
    "start": "902160",
    "end": "905199"
  },
  {
    "text": "want to replace every instance of the",
    "start": "905199",
    "end": "908079"
  },
  {
    "text": "service import",
    "start": "908079",
    "end": "910120"
  },
  {
    "text": "um in the selenium codebase because this",
    "start": "910120",
    "end": "913279"
  },
  {
    "text": "is a major major change it will need to",
    "start": "913279",
    "end": "916160"
  },
  {
    "text": "replace any load balancing logic um",
    "start": "916160",
    "end": "919440"
  },
  {
    "text": "allocate the service IP and much more so",
    "start": "919440",
    "end": "923680"
  },
  {
    "text": "what we do and other implementation also",
    "start": "923680",
    "end": "926480"
  },
  {
    "text": "does that is that we create a DRI",
    "start": "926480",
    "end": "929240"
  },
  {
    "text": "service so this DRI service on the",
    "start": "929240",
    "end": "931839"
  },
  {
    "text": "schema has a funky name because it's",
    "start": "931839",
    "end": "934639"
  },
  {
    "text": "essentially ash so uh it allows you that",
    "start": "934639",
    "end": "937839"
  },
  {
    "text": "the service name is exactly the same",
    "start": "937839",
    "end": "940000"
  },
  {
    "text": "across all the cluster for given",
    "start": "940000",
    "end": "942680"
  },
  {
    "text": "services and it's also marked as global",
    "start": "942680",
    "end": "947600"
  },
  {
    "text": "so here now magically everything should",
    "start": "947600",
    "end": "950320"
  },
  {
    "text": "work because we have the service of the",
    "start": "950320",
    "end": "952639"
  },
  {
    "text": "same name we mark it as global so",
    "start": "952639",
    "end": "955920"
  },
  {
    "text": "everything customer related and service",
    "start": "955920",
    "end": "958880"
  },
  {
    "text": "related in general is working and we",
    "start": "958880",
    "end": "962480"
  },
  {
    "text": "also can sync endpoint slice with the",
    "start": "962480",
    "end": "965519"
  },
  {
    "text": "endpoint sync feature that Marco has",
    "start": "965519",
    "end": "967759"
  },
  {
    "text": "presented you and now the selium job is",
    "start": "967759",
    "end": "971920"
  },
  {
    "text": "basically done um there is one more",
    "start": "971920",
    "end": "974720"
  },
  {
    "text": "thing though which is the coordinates",
    "start": "974720",
    "end": "976800"
  },
  {
    "text": "multicluster plug-in that I was talking",
    "start": "976800",
    "end": "979199"
  },
  {
    "text": "about earlier and what it will just do",
    "start": "979199",
    "end": "982959"
  },
  {
    "text": "is reading the info on the IP server",
    "start": "982959",
    "end": "986480"
  },
  {
    "text": "about service import and the local point",
    "start": "986480",
    "end": "989680"
  },
  {
    "text": "slice at no point it will connect to",
    "start": "989680",
    "end": "992959"
  },
  {
    "text": "remote clusters to get those info",
    "start": "992959",
    "end": "995040"
  },
  {
    "text": "because it's already all there in the",
    "start": "995040",
    "end": "997040"
  },
  {
    "text": "Kubernetes CPI server and it also um",
    "start": "997040",
    "end": "1000959"
  },
  {
    "text": "something that we don't have to",
    "start": "1000959",
    "end": "1002480"
  },
  {
    "text": "integrate into Celium so any",
    "start": "1002480",
    "end": "1004720"
  },
  {
    "text": "implementation of MCS API can use",
    "start": "1004720",
    "end": "1009639"
  },
  {
    "text": "those and now we will finish the talk",
    "start": "1009639",
    "end": "1014160"
  },
  {
    "text": "off by doing a small",
    "start": "1014160",
    "end": "1017560"
  },
  {
    "text": "demo um yeah so we have a few pods",
    "start": "1017560",
    "end": "1023360"
  },
  {
    "text": "running um I didn't show it here but we",
    "start": "1023360",
    "end": "1026319"
  },
  {
    "text": "have two clusters with the same pods",
    "start": "1026319",
    "end": "1029199"
  },
  {
    "text": "um and we define a very simple services",
    "start": "1029199",
    "end": "1032520"
  },
  {
    "text": "here um it has nothing to do with",
    "start": "1032520",
    "end": "1035360"
  },
  {
    "text": "cluster mesh as you might see and we",
    "start": "1035360",
    "end": "1038959"
  },
  {
    "text": "also have service export so uh we",
    "start": "1038959",
    "end": "1043280"
  },
  {
    "text": "essentially export these services and uh",
    "start": "1043280",
    "end": "1046319"
  },
  {
    "text": "there's also a cool new feature in the",
    "start": "1046319",
    "end": "1048480"
  },
  {
    "text": "next s version that I wanted to show you",
    "start": "1048480",
    "end": "1050880"
  },
  {
    "text": "here which is that you can export labels",
    "start": "1050880",
    "end": "1053760"
  },
  {
    "text": "and annotations this is super super",
    "start": "1053760",
    "end": "1056480"
  },
  {
    "text": "useful because these annotation and",
    "start": "1056480",
    "end": "1059360"
  },
  {
    "text": "labels will be able to get up to the",
    "start": "1059360",
    "end": "1061679"
  },
  {
    "text": "service import but also to the DR",
    "start": "1061679",
    "end": "1063600"
  },
  {
    "text": "service so any annotation that can um",
    "start": "1063600",
    "end": "1066960"
  },
  {
    "text": "change the service behavior can go there",
    "start": "1066960",
    "end": "1069679"
  },
  {
    "text": "so for instance there's the uh local",
    "start": "1069679",
    "end": "1072520"
  },
  {
    "text": "affinity oop sorry here or the sync and",
    "start": "1072520",
    "end": "1077280"
  },
  {
    "text": "bone slice or any other like layer seven",
    "start": "1077280",
    "end": "1080799"
  },
  {
    "text": "load balancing annotation in selium and",
    "start": "1080799",
    "end": "1083039"
  },
  {
    "text": "much more",
    "start": "1083039",
    "end": "1084799"
  },
  {
    "text": "so we are going to create those",
    "start": "1084799",
    "end": "1087400"
  },
  {
    "text": "resources and I'm going to show you what",
    "start": "1087400",
    "end": "1090559"
  },
  {
    "text": "the what those look like so here the",
    "start": "1090559",
    "end": "1094000"
  },
  {
    "text": "service export that we just created uh",
    "start": "1094000",
    "end": "1096480"
  },
  {
    "text": "there is some status here about if the",
    "start": "1096480",
    "end": "1099280"
  },
  {
    "text": "export is valid or not uh there might be",
    "start": "1099280",
    "end": "1102000"
  },
  {
    "text": "some case where you export the service",
    "start": "1102000",
    "end": "1104720"
  },
  {
    "text": "and it has different properties across",
    "start": "1104720",
    "end": "1107000"
  },
  {
    "text": "clusters which will result in a conflict",
    "start": "1107000",
    "end": "1109840"
  },
  {
    "text": "and if that happens it will show you",
    "start": "1109840",
    "end": "1112360"
  },
  {
    "text": "here um and there is also the service",
    "start": "1112360",
    "end": "1115360"
  },
  {
    "text": "import that is autocreated for you and",
    "start": "1115360",
    "end": "1118320"
  },
  {
    "text": "basically there's a bunch of general",
    "start": "1118320",
    "end": "1120080"
  },
  {
    "text": "info about the services we also find the",
    "start": "1120080",
    "end": "1122320"
  },
  {
    "text": "annotation and labels that I was uh",
    "start": "1122320",
    "end": "1125760"
  },
  {
    "text": "telling you earlier that we export and",
    "start": "1125760",
    "end": "1128799"
  },
  {
    "text": "there is also all the list of the",
    "start": "1128799",
    "end": "1131039"
  },
  {
    "text": "clusters below that export this",
    "start": "1131039",
    "end": "1134360"
  },
  {
    "text": "service and we have the um derived",
    "start": "1134360",
    "end": "1138840"
  },
  {
    "text": "services which is here um we also find",
    "start": "1138840",
    "end": "1144000"
  },
  {
    "text": "the annotation and label that we were",
    "start": "1144000",
    "end": "1146840"
  },
  {
    "text": "exporting and this is the magic part we",
    "start": "1146840",
    "end": "1150320"
  },
  {
    "text": "have this global annotation and",
    "start": "1150320",
    "end": "1152240"
  },
  {
    "text": "basically then it will work there is",
    "start": "1152240",
    "end": "1155360"
  },
  {
    "text": "also a tree of the resources here so you",
    "start": "1155360",
    "end": "1158000"
  },
  {
    "text": "see service import dive service and the",
    "start": "1158000",
    "end": "1160320"
  },
  {
    "text": "endpoint slice so basically what I was",
    "start": "1160320",
    "end": "1162799"
  },
  {
    "text": "telling you about and now we can uh yeah",
    "start": "1162799",
    "end": "1167200"
  },
  {
    "text": "show the IP so",
    "start": "1167200",
    "end": "1171360"
  },
  {
    "text": "uh here's the DRL IP so 171",
    "start": "1171360",
    "end": "1175200"
  },
  {
    "text": "uh this IP is put into the service",
    "start": "1175200",
    "end": "1177559"
  },
  {
    "text": "import and if we uh do a DNS query over",
    "start": "1177559",
    "end": "1181840"
  },
  {
    "text": "the cluster set local domain we find",
    "start": "1181840",
    "end": "1185200"
  },
  {
    "text": "this IP and we have also uh the same",
    "start": "1185200",
    "end": "1189600"
  },
  {
    "text": "over the other cluster but with a",
    "start": "1189600",
    "end": "1192640"
  },
  {
    "text": "different IP basically",
    "start": "1192640",
    "end": "1195039"
  },
  {
    "text": "now if we query uh these services you",
    "start": "1195039",
    "end": "1198720"
  },
  {
    "text": "see that uh you get answer from both",
    "start": "1198720",
    "end": "1201360"
  },
  {
    "text": "clusters so essent is it essentially",
    "start": "1201360",
    "end": "1204000"
  },
  {
    "text": "work and it's over the cluster set local",
    "start": "1204000",
    "end": "1207480"
  },
  {
    "text": "domain we can also do that via gateway",
    "start": "1207480",
    "end": "1210440"
  },
  {
    "text": "API um so here's the gateway API",
    "start": "1210440",
    "end": "1214960"
  },
  {
    "text": "implemented by selium and we define a",
    "start": "1214960",
    "end": "1218240"
  },
  {
    "text": "super simple HTTP route that has a",
    "start": "1218240",
    "end": "1220880"
  },
  {
    "text": "backend uh with the service import",
    "start": "1220880",
    "end": "1225880"
  },
  {
    "text": "oops",
    "start": "1225880",
    "end": "1227480"
  },
  {
    "text": "um and we can apply this and query",
    "start": "1227480",
    "end": "1233240"
  },
  {
    "text": "it and yeah we get answer from Busher so",
    "start": "1233240",
    "end": "1237280"
  },
  {
    "text": "yeah it",
    "start": "1237280",
    "end": "1238520"
  },
  {
    "text": "works and that's it for our presentation",
    "start": "1238520",
    "end": "1242000"
  },
  {
    "text": "you have a QR code on the top left if",
    "start": "1242000",
    "end": "1244240"
  },
  {
    "text": "you want to give us feedback and we can",
    "start": "1244240",
    "end": "1246720"
  },
  {
    "text": "take any questions if you have any thank",
    "start": "1246720",
    "end": "1249440"
  },
  {
    "text": "you",
    "start": "1249440",
    "end": "1252440"
  },
  {
    "text": "hello uh great talk uh one question does",
    "start": "1258880",
    "end": "1261679"
  },
  {
    "text": "it actually work with other",
    "start": "1261679",
    "end": "1262880"
  },
  {
    "text": "implementations of gateway API like uh",
    "start": "1262880",
    "end": "1265520"
  },
  {
    "text": "envoy gateway class for instance um so",
    "start": "1265520",
    "end": "1269120"
  },
  {
    "text": "that's a very good question it actually",
    "start": "1269120",
    "end": "1271720"
  },
  {
    "text": "relies on a datation that is",
    "start": "1271720",
    "end": "1275559"
  },
  {
    "text": "semi-standard so um it might not work",
    "start": "1275559",
    "end": "1279760"
  },
  {
    "text": "with a way with every gateway API",
    "start": "1279760",
    "end": "1282679"
  },
  {
    "text": "implementations um and also if they rely",
    "start": "1282679",
    "end": "1285840"
  },
  {
    "text": "on the service IP it works uh if they",
    "start": "1285840",
    "end": "1288400"
  },
  {
    "text": "rely on the endpoint it should support",
    "start": "1288400",
    "end": "1290320"
  },
  {
    "text": "this",
    "start": "1290320",
    "end": "1291400"
  },
  {
    "text": "annotation basically",
    "start": "1291400",
    "end": "1295039"
  },
  {
    "text": "oh no sorry wait this um so I I took the",
    "start": "1295039",
    "end": "1300000"
  },
  {
    "text": "question in the wrong way so um it will",
    "start": "1300000",
    "end": "1302799"
  },
  {
    "text": "work with every gateway API",
    "start": "1302799",
    "end": "1304440"
  },
  {
    "text": "implementation but the opposite is not",
    "start": "1304440",
    "end": "1307360"
  },
  {
    "text": "uh necessarily true um so",
    "start": "1307360",
    "end": "1311960"
  },
  {
    "text": "yeah G it's complicated because there is",
    "start": "1311960",
    "end": "1315600"
  },
  {
    "text": "the coupling you can replace any MCS API",
    "start": "1315600",
    "end": "1319000"
  },
  {
    "text": "implementation and with this um the",
    "start": "1319000",
    "end": "1322720"
  },
  {
    "text": "selium gateway might not work but the",
    "start": "1322720",
    "end": "1324640"
  },
  {
    "text": "opposite",
    "start": "1324640",
    "end": "1326360"
  },
  {
    "text": "uh should not work well it",
    "start": "1326360",
    "end": "1329720"
  },
  {
    "text": "depends",
    "start": "1329720",
    "end": "1332720"
  },
  {
    "text": "sorry but it's written in the",
    "start": "1332840",
    "end": "1335120"
  },
  {
    "text": "documentation",
    "start": "1335120",
    "end": "1338120"
  },
  {
    "text": "hi yes how will it pan out if I have",
    "start": "1338559",
    "end": "1341039"
  },
  {
    "text": "multiple clusters let's say if I have 20",
    "start": "1341039",
    "end": "1343360"
  },
  {
    "text": "clusters with the service export and the",
    "start": "1343360",
    "end": "1345120"
  },
  {
    "text": "service import sorry c can you say that",
    "start": "1345120",
    "end": "1347919"
  },
  {
    "text": "again if I have 20 clusters and I want",
    "start": "1347919",
    "end": "1350720"
  },
  {
    "text": "the cluster mesh uh with the service",
    "start": "1350720",
    "end": "1352880"
  },
  {
    "text": "export and the service import how will",
    "start": "1352880",
    "end": "1354640"
  },
  {
    "text": "it pan out like how will my setup look",
    "start": "1354640",
    "end": "1358640"
  },
  {
    "text": "like oh uh well you have your regular",
    "start": "1358640",
    "end": "1361919"
  },
  {
    "text": "cluster mesh um setup and then you just",
    "start": "1361919",
    "end": "1365840"
  },
  {
    "text": "have your regular service you apply some",
    "start": "1365840",
    "end": "1368000"
  },
  {
    "text": "service export and then that's about it",
    "start": "1368000",
    "end": "1370960"
  },
  {
    "text": "uh you can query your service via the",
    "start": "1370960",
    "end": "1373120"
  },
  {
    "text": "cluster local cluster set local domain",
    "start": "1373120",
    "end": "1375919"
  },
  {
    "text": "and yeah and there is a there is a",
    "start": "1375919",
    "end": "1378400"
  },
  {
    "text": "cluster list that you provided with the",
    "start": "1378400",
    "end": "1380640"
  },
  {
    "text": "list of clusters so do I need to specify",
    "start": "1380640",
    "end": "1383520"
  },
  {
    "text": "all the clusters there on each of the",
    "start": "1383520",
    "end": "1387480"
  },
  {
    "text": "definition um you got it um so right now",
    "start": "1387480",
    "end": "1394000"
  },
  {
    "text": "like if you specify a cluster export um",
    "start": "1394000",
    "end": "1397600"
  },
  {
    "text": "that means that that's like a service",
    "start": "1397600",
    "end": "1400320"
  },
  {
    "text": "export that service gets exported to all",
    "start": "1400320",
    "end": "1402480"
  },
  {
    "text": "the clusters um so right now it's not",
    "start": "1402480",
    "end": "1405840"
  },
  {
    "text": "like if you have multiple clusters all",
    "start": "1405840",
    "end": "1408480"
  },
  {
    "text": "the clusters will see uh like we'll get",
    "start": "1408480",
    "end": "1411679"
  },
  {
    "text": "uh the corresponding service import so",
    "start": "1411679",
    "end": "1414640"
  },
  {
    "text": "get um the possibility to access the",
    "start": "1414640",
    "end": "1418240"
  },
  {
    "text": "service as long as the the name space",
    "start": "1418240",
    "end": "1420799"
  },
  {
    "text": "corresponding to that service export",
    "start": "1420799",
    "end": "1424039"
  },
  {
    "text": "exists thank you",
    "start": "1424039",
    "end": "1428200"
  },
  {
    "text": "thank you for the talk how do you secure",
    "start": "1434880",
    "end": "1437360"
  },
  {
    "text": "the link um between different cluster",
    "start": "1437360",
    "end": "1440320"
  },
  {
    "text": "when you use um MCS",
    "start": "1440320",
    "end": "1444158"
  },
  {
    "text": "API um so",
    "start": "1444919",
    "end": "1447480"
  },
  {
    "text": "essentially it doesn't change anything",
    "start": "1447480",
    "end": "1451039"
  },
  {
    "text": "in terms of how you secure um the the",
    "start": "1451039",
    "end": "1454320"
  },
  {
    "text": "communication compared to normal global",
    "start": "1454320",
    "end": "1456320"
  },
  {
    "text": "services so the idea is you can use uh",
    "start": "1456320",
    "end": "1459440"
  },
  {
    "text": "network policies so network policies are",
    "start": "1459440",
    "end": "1461760"
  },
  {
    "text": "cluster aware and you can then configure",
    "start": "1461760",
    "end": "1465200"
  },
  {
    "text": "okay I want this workload in this",
    "start": "1465200",
    "end": "1467360"
  },
  {
    "text": "cluster to be able to reach the back",
    "start": "1467360",
    "end": "1469360"
  },
  {
    "text": "ends in the other cluster or you can and",
    "start": "1469360",
    "end": "1472640"
  },
  {
    "text": "then you'll be uh like preventing other",
    "start": "1472640",
    "end": "1476000"
  },
  {
    "text": "clusters for instance to access the same",
    "start": "1476000",
    "end": "1478240"
  },
  {
    "text": "backends if you want to do like only you",
    "start": "1478240",
    "end": "1481279"
  },
  {
    "text": "have only a subset of clusters that can",
    "start": "1481279",
    "end": "1483360"
  },
  {
    "text": "access that service and why",
    "start": "1483360",
    "end": "1486640"
  },
  {
    "text": "um so that's for the like um securing",
    "start": "1486640",
    "end": "1491279"
  },
  {
    "text": "who can access what and then as Arthur",
    "start": "1491279",
    "end": "1493600"
  },
  {
    "text": "was mentioning so you can uh use IPC or",
    "start": "1493600",
    "end": "1497120"
  },
  {
    "text": "wire guard as usual in selium so that",
    "start": "1497120",
    "end": "1499200"
  },
  {
    "text": "you also secure um the the data in",
    "start": "1499200",
    "end": "1502000"
  },
  {
    "text": "transit actually so that's on the other",
    "start": "1502000",
    "end": "1505120"
  },
  {
    "text": "um from the other point of view thank",
    "start": "1505120",
    "end": "1508000"
  },
  {
    "text": "you",
    "start": "1508000",
    "end": "1510919"
  },
  {
    "text": "welcome so I guess we have time for one",
    "start": "1510919",
    "end": "1513840"
  },
  {
    "text": "more question uh hi thank you for the",
    "start": "1513840",
    "end": "1516400"
  },
  {
    "text": "talk uh I was wondering how Does Celium",
    "start": "1516400",
    "end": "1519200"
  },
  {
    "text": "handle the network policies or if the",
    "start": "1519200",
    "end": "1522159"
  },
  {
    "text": "Celium network policy handle any like",
    "start": "1522159",
    "end": "1524080"
  },
  {
    "text": "network security because MCS doesn't say",
    "start": "1524080",
    "end": "1527279"
  },
  {
    "text": "anything about the implementation of",
    "start": "1527279",
    "end": "1528799"
  },
  {
    "text": "network policy um so yeah uh essentially",
    "start": "1528799",
    "end": "1533080"
  },
  {
    "text": "selium so selium implements policy based",
    "start": "1533080",
    "end": "1536159"
  },
  {
    "text": "on the concept of identities um and",
    "start": "1536159",
    "end": "1539440"
  },
  {
    "text": "identities are one of those types of",
    "start": "1539440",
    "end": "1541760"
  },
  {
    "text": "classes of information that gets shared",
    "start": "1541760",
    "end": "1543679"
  },
  {
    "text": "across clusters and so they they are",
    "start": "1543679",
    "end": "1546880"
  },
  {
    "text": "essentially in different spaces so you",
    "start": "1546880",
    "end": "1549440"
  },
  {
    "text": "have the identity which is scoped by ID",
    "start": "1549440",
    "end": "1551679"
  },
  {
    "text": "of the cluster and then um so you can",
    "start": "1551679",
    "end": "1555200"
  },
  {
    "text": "you can write policies as I was",
    "start": "1555200",
    "end": "1557200"
  },
  {
    "text": "mentioning before uh and use one special",
    "start": "1557200",
    "end": "1560159"
  },
  {
    "text": "label which targets the cluster name um",
    "start": "1560159",
    "end": "1563120"
  },
  {
    "text": "so then you can say yeah uh allow",
    "start": "1563120",
    "end": "1566080"
  },
  {
    "text": "traffic to that workload based on the",
    "start": "1566080",
    "end": "1569200"
  },
  {
    "text": "labels plus one additional label which",
    "start": "1569200",
    "end": "1572159"
  },
  {
    "text": "says this is the cluster and internally",
    "start": "1572159",
    "end": "1575600"
  },
  {
    "text": "at the data path level all of these gets",
    "start": "1575600",
    "end": "1577679"
  },
  {
    "text": "converted into this concept of identity",
    "start": "1577679",
    "end": "1580559"
  },
  {
    "text": "uh so a numerical identity um which um",
    "start": "1580559",
    "end": "1584880"
  },
  {
    "text": "again is sort of synchronized across all",
    "start": "1584880",
    "end": "1588080"
  },
  {
    "text": "the clusters so this is normal like it",
    "start": "1588080",
    "end": "1591840"
  },
  {
    "text": "works this way for porttood",
    "start": "1591840",
    "end": "1593600"
  },
  {
    "text": "communication for global services and",
    "start": "1593600",
    "end": "1596000"
  },
  {
    "text": "the same for MCS API so MCS API uh",
    "start": "1596000",
    "end": "1599440"
  },
  {
    "text": "builds on top of all the concepts that",
    "start": "1599440",
    "end": "1601600"
  },
  {
    "text": "are already there um for serum",
    "start": "1601600",
    "end": "1603840"
  },
  {
    "text": "essentially uh normally in cluster mesh",
    "start": "1603840",
    "end": "1606799"
  },
  {
    "text": "okay thank",
    "start": "1606799",
    "end": "1609400"
  },
  {
    "text": "you thanks again everyone",
    "start": "1609400",
    "end": "1612630"
  },
  {
    "text": "[Applause]",
    "start": "1612630",
    "end": "1616130"
  }
]