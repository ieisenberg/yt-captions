[
  {
    "text": "okay folks are you ready so we can get started uh this is the talk about uh",
    "start": "480",
    "end": "8040"
  },
  {
    "text": "notary project this is the main maintainer Tru talk um my name is tor",
    "start": "8040",
    "end": "13280"
  },
  {
    "text": "mov uh today what we're going to talk about is uh enabling the software supply",
    "start": "13280",
    "end": "19720"
  },
  {
    "text": "chain ecosystem with notary project so if you attended previous talks about notary project it was more about the",
    "start": "19720",
    "end": "25599"
  },
  {
    "text": "project what the project does today actually I have uh two of our part Partners they will talk about their",
    "start": "25599",
    "end": "31279"
  },
  {
    "text": "experience working with notary project and implementing functionalities on their",
    "start": "31279",
    "end": "36840"
  },
  {
    "text": "side uh as he mentioned I'm to mov I'm a maintainer of the notary project um and",
    "start": "36840",
    "end": "44239"
  },
  {
    "text": "also I work for Microsoft and I deal with container security for the last more than actually two and a half years",
    "start": "44239",
    "end": "51000"
  },
  {
    "text": "uh shuting want to introduce yourself sure um hey everyone this is shoting zal",
    "start": "51000",
    "end": "56239"
  },
  {
    "text": "and I'm a govern tener and a staff engineer of uh namada so today I'm here",
    "start": "56239",
    "end": "62120"
  },
  {
    "text": "to demon the uh demo the integration of b caverno as well as um notation project",
    "start": "62120",
    "end": "69920"
  },
  {
    "text": "and Ivan is from venafi yep thank you uh and so yeah Ian Wall's uh architect at",
    "start": "69920",
    "end": "75159"
  },
  {
    "text": "at venafi focusing on uh uh software supply chain security and a lot of background in in Key Management crypto",
    "start": "75159",
    "end": "82280"
  },
  {
    "text": "uh pki and um really here to to kind of give some uh some learning experiences",
    "start": "82280",
    "end": "87560"
  },
  {
    "text": "um and also demo uh the signing part of of of this uh integration so thank you",
    "start": "87560",
    "end": "93920"
  },
  {
    "text": "and our agenda for today will be like first uh only one slide what happened",
    "start": "93920",
    "end": "99759"
  },
  {
    "text": "with not project uh since uh cucon North America in October last year after that",
    "start": "99759",
    "end": "106520"
  },
  {
    "text": "we'll go through the demos that uh uh shooting and inan will uh show you uh",
    "start": "106520",
    "end": "112560"
  },
  {
    "text": "and uh at the end we'll talk what's coming next with the notary",
    "start": "112560",
    "end": "118039"
  },
  {
    "text": "project so very briefly what happened since uh uh October last year the first",
    "start": "118039",
    "end": "124320"
  },
  {
    "text": "thing is like we really clean up The Branding for notary project so officially the name is notary project",
    "start": "124320",
    "end": "131120"
  },
  {
    "text": "now and uh the tooling that we have currently available is called notation",
    "start": "131120",
    "end": "137040"
  },
  {
    "text": "if you are interested we have a full fq where you can read about all the terminology and what we use in the",
    "start": "137040",
    "end": "142640"
  },
  {
    "text": "specification and so on uh we also have a uh update of the notary project uh not",
    "start": "142640",
    "end": "150239"
  },
  {
    "text": "libraries as well as the CLI so we have a revision of the first version that we",
    "start": "150239",
    "end": "155720"
  },
  {
    "text": "released last year in August uh we actually um recently released updates to",
    "start": "155720",
    "end": "162319"
  },
  {
    "text": "that version with more functionalities and uh uh better user experience we",
    "start": "162319",
    "end": "168440"
  },
  {
    "text": "implemented also uh GitHub actions and also uh Ado tasks that you can use and",
    "start": "168440",
    "end": "174920"
  },
  {
    "text": "we are working with other cicd tools to add more actually automation with notary",
    "start": "174920",
    "end": "180560"
  },
  {
    "text": "project and as you can see our adopters are growing so uh not only kind of uh",
    "start": "180560",
    "end": "187000"
  },
  {
    "text": "the big uh maintainers that are on the project but we also have a a lot of",
    "start": "187000",
    "end": "192319"
  },
  {
    "text": "projects looking at notary project implementation as well as customers uh using it so I'll hand it over to Ian to",
    "start": "192319",
    "end": "201000"
  },
  {
    "text": "uh go over the uh plug-in framework which was one of the big improvements that we did over the last couple of",
    "start": "201000",
    "end": "207159"
  },
  {
    "text": "months Ian yep thank you T so I think you know in in general if you've already uh if you played with a lot of these um",
    "start": "207159",
    "end": "213239"
  },
  {
    "text": "Enterprise tooling one of the I think the measure of of success is the ability",
    "start": "213239",
    "end": "219239"
  },
  {
    "text": "for these tools to have a very extensible uh plugin framework so I was really excited to see when when kind of",
    "start": "219239",
    "end": "225720"
  },
  {
    "text": "uh the notary project started um looking into notation um that you know here's",
    "start": "225720",
    "end": "230840"
  },
  {
    "text": "here's a framework where we can uh allow um a lot of our you know Partners ecosystem Partners to be able to to",
    "start": "230840",
    "end": "237360"
  },
  {
    "text": "deliver kind of that that experience for their customers and so um on this",
    "start": "237360",
    "end": "242519"
  },
  {
    "text": "particular slide is really kind of shows the overall you know plug-in framework um so obviously we have the ability to",
    "start": "242519",
    "end": "250159"
  },
  {
    "text": "uh perform both the the signing and it's really pointless to have the signing",
    "start": "250159",
    "end": "255480"
  },
  {
    "text": "unless you can properly verify um a lot of these uh the the",
    "start": "255480",
    "end": "260560"
  },
  {
    "text": "software artifacts um so essentially what we have here is um um think of it the the first step is to obviously get",
    "start": "260560",
    "end": "267320"
  },
  {
    "text": "the tooling installed uh then to be able to install the a a plugin such as the",
    "start": "267320",
    "end": "272600"
  },
  {
    "text": "one from from from AWS from Azure key Vault from from Veni and that allows you",
    "start": "272600",
    "end": "278800"
  },
  {
    "text": "the ability to offload I think the most important and the critical Parts uh for the Enterprise is to be able to to be",
    "start": "278800",
    "end": "285520"
  },
  {
    "text": "able to sign with a a trusted identity and so you're you're seeing that here with uh with that Enterprise uh code",
    "start": "285520",
    "end": "291720"
  },
  {
    "text": "signing platform which there's a lot of different solutions including ones from from Veni um so we get we essentially sign",
    "start": "291720",
    "end": "299240"
  },
  {
    "text": "that um if you're already familiar with with signing or code signing in general typically we take the digest of that",
    "start": "299240",
    "end": "305600"
  },
  {
    "text": "artifact um that basically provides the authenticity and the Integrity around that particular artifact and then we",
    "start": "305600",
    "end": "312560"
  },
  {
    "text": "push that to the uh to the registry and at that point um when it comes to uh you know what shooting is going to be",
    "start": "312560",
    "end": "318479"
  },
  {
    "text": "showing is on the verification right so we have a a sign container image and we",
    "start": "318479",
    "end": "324120"
  },
  {
    "text": "want to run this in production so we want to know it's coming from a trusted um trusted uh you know uh source and so",
    "start": "324120",
    "end": "331680"
  },
  {
    "text": "think of it the reverse so we ver so the the the system uh wants to be able to to",
    "start": "331680",
    "end": "337240"
  },
  {
    "text": "pull down a an image so we pull down the uh the signature and I think really the the nice thing with notation is that not",
    "start": "337240",
    "end": "343960"
  },
  {
    "text": "only does it provide the ability to sign with you know with with the plugins but also be able um has the ability to",
    "start": "343960",
    "end": "350479"
  },
  {
    "text": "extend what um normally happens with verification where we EV validate the chain we check uh revocation there's a",
    "start": "350479",
    "end": "357759"
  },
  {
    "text": "Tim stamp um and so so the plugin for the way that Veni U implemented was uh",
    "start": "357759",
    "end": "363880"
  },
  {
    "text": "basically going back to the um to a that code signning solution which is that source of record so we know where that",
    "start": "363880",
    "end": "370800"
  },
  {
    "text": "signing identity came from uh and we can also do things like timestamp checking we can also uh check the the status the",
    "start": "370800",
    "end": "379080"
  },
  {
    "text": "rication status of a particular uh signing identity um and so really um",
    "start": "379080",
    "end": "386240"
  },
  {
    "text": "kind of end to end right and we'll show you here that U that shortly um but basically uh plugins can extend",
    "start": "386240",
    "end": "392880"
  },
  {
    "text": "the verification uh based on the The Trusted identity and revocation status and so I think that's a kind of a",
    "start": "392880",
    "end": "400319"
  },
  {
    "text": "good uh overview and you know I think when when I started to to to to kind of",
    "start": "400319",
    "end": "405639"
  },
  {
    "text": "see what the functionality would be it was always always about you know if you've if you've ever built something",
    "start": "405639",
    "end": "411160"
  },
  {
    "text": "without looking at you know like a recipe or something right you try to bake a cake and you're like what is this actually supposed to look",
    "start": "411160",
    "end": "417039"
  },
  {
    "text": "like um so you have to be able to have a reference implementation so at the time I think I think it was just the Azure",
    "start": "417039",
    "end": "423479"
  },
  {
    "text": "keol implementation go go L you know limited I'm like okay how do I there's some basic Scaffolding in there there's",
    "start": "423479",
    "end": "429919"
  },
  {
    "text": "a there's a somewhat of a template um so that was a kind of an interesting experience um I think U one of the",
    "start": "429919",
    "end": "436840"
  },
  {
    "text": "things that that we've we've added as an additional repo is that there's a kind of a notation plug-in framework so a",
    "start": "436840",
    "end": "443240"
  },
  {
    "text": "little bit more um Consolidated and I think also if you all",
    "start": "443240",
    "end": "448919"
  },
  {
    "text": "if you've seen kind of the the the deeper um parts of the of what the library supports U of course we have a",
    "start": "448919",
    "end": "455720"
  },
  {
    "text": "you know going back to that the analogy of you know building something you need a spec so I think you know one of the",
    "start": "455720",
    "end": "462960"
  },
  {
    "text": "things compared to other other types of signing Solutions out there um is that a very detailed spec so both from a",
    "start": "462960",
    "end": "469919"
  },
  {
    "text": "signature generator so what uh what options do you have for being able to uh to to serialize the data uh protect the",
    "start": "469919",
    "end": "477759"
  },
  {
    "text": "payload and then also down to um what what about as as I mentioned in the previous slide um how do we verify that",
    "start": "477759",
    "end": "485159"
  },
  {
    "text": "signature uh and so that allows us to to extend that into uh Enterprise code",
    "start": "485159",
    "end": "490319"
  },
  {
    "text": "signing Solutions such as the ones from Veni and others um and I think you know",
    "start": "490319",
    "end": "496440"
  },
  {
    "text": "so Lessons Learned there uh obviously if you're already familiar with with um revocation and some other checks uh",
    "start": "496440",
    "end": "503479"
  },
  {
    "text": "especially in some of these production environments there's obviously that performance trade-off so we have to consider when we I know there's there's",
    "start": "503479",
    "end": "510240"
  },
  {
    "text": "caching that can take place um but we need to that that that kind of performance trade-off with a real-time",
    "start": "510240",
    "end": "517039"
  },
  {
    "text": "verification uh of these uh these signing identities so I think you know initial um right areas that uh kind of",
    "start": "517039",
    "end": "524720"
  },
  {
    "text": "help steer the direction of of the project was U and I know there's still some kind of ongoing things we can",
    "start": "524720",
    "end": "530040"
  },
  {
    "text": "improve uh how do we debug how do we troubleshoot plugins um and so initial",
    "start": "530040",
    "end": "536279"
  },
  {
    "text": "challenges with how do we uh create the necessary payload and how do we serialize that data especially when it",
    "start": "536279",
    "end": "542200"
  },
  {
    "text": "uh when dealing with a a thir third party solution and as tody mentioned um",
    "start": "542200",
    "end": "547560"
  },
  {
    "text": "a big Improvement in terms of that uh user experience uh how do I how do I get",
    "start": "547560",
    "end": "552640"
  },
  {
    "text": "notation first of all installed and then how do I plug that into my environment right so I can start leveraging some of",
    "start": "552640",
    "end": "558680"
  },
  {
    "text": "these um some of my infrastructure uh especially for signing so uh that was a",
    "start": "558680",
    "end": "564000"
  },
  {
    "text": "a so at that point I think every plug-in had to basically create their own documentation um and then also I think",
    "start": "564000",
    "end": "571040"
  },
  {
    "text": "you know with 1.1 um we introduced the the plug-in management part so um so with that said",
    "start": "571040",
    "end": "579640"
  },
  {
    "text": "we're going to kind of go to the the",
    "start": "579640",
    "end": "583959"
  },
  {
    "text": "demo all right so I have already kind of pre-recorded this one so um it's basically we're going to be running",
    "start": "589200",
    "end": "595279"
  },
  {
    "text": "through a um a signing example and I know I know shooting has got kind of walk through the other part of it which",
    "start": "595279",
    "end": "601519"
  },
  {
    "text": "is going to be that that verification um uh experience in for for caverno so",
    "start": "601519",
    "end": "607560"
  },
  {
    "text": "let's go ahead and get that going so the way that's so yeah running",
    "start": "607560",
    "end": "613959"
  },
  {
    "text": "the script um this the latest version of notation and we're going to then at this",
    "start": "613959",
    "end": "621640"
  },
  {
    "text": "point um start uh the the [Music] installation so notice here obviously",
    "start": "621640",
    "end": "628519"
  },
  {
    "text": "with 1.1 uh being able to securely download the uh latest version of the plug-in uh from",
    "start": "628519",
    "end": "636040"
  },
  {
    "text": "a um your plug-in repo so that's I think a big Improvement right from that",
    "start": "636040",
    "end": "641240"
  },
  {
    "text": "experience as I mentioned so we can see that listed now on the developer the build",
    "start": "641240",
    "end": "646880"
  },
  {
    "text": "system and then at this point uh if you've already played with notation now",
    "start": "646880",
    "end": "652079"
  },
  {
    "text": "you need to be able to start configuring right what uh signing Identity or certificate you're going to be using so",
    "start": "652079",
    "end": "658880"
  },
  {
    "text": "in this case um this is relative to a a Veni type of deployment uh so obviously",
    "start": "658880",
    "end": "665399"
  },
  {
    "text": "there's a backend stuff we're not going to go into detail here um such as how do I you know how do I point to that code",
    "start": "665399",
    "end": "672160"
  },
  {
    "text": "signing Service uh and and also you know what are some of the the details there so at",
    "start": "672160",
    "end": "679480"
  },
  {
    "text": "this point um we're going to be running the notation sign command so as you can see here we're we're referencing that uh",
    "start": "679480",
    "end": "686480"
  },
  {
    "text": "specific identity uh and this is just a sample image that I just I put together",
    "start": "686480",
    "end": "691720"
  },
  {
    "text": "um and that's going off to the Veni service and signing that digest and so",
    "start": "691720",
    "end": "697600"
  },
  {
    "text": "successfully signed and then uh if you're familiar with notation uh you can run the inspect command you can see that",
    "start": "697600",
    "end": "704120"
  },
  {
    "text": "um right all the details of what that signature is from the signed attributes",
    "start": "704120",
    "end": "709320"
  },
  {
    "text": "all the way to that trust chain which is going to be very important as you'll see with the enforcement side with with",
    "start": "709320",
    "end": "715920"
  },
  {
    "text": "policy um and you can see here uh for for notation obviously it has its own",
    "start": "715920",
    "end": "721519"
  },
  {
    "text": "kind of policy management so as you can see here um we have uh just a very very",
    "start": "721519",
    "end": "727480"
  },
  {
    "text": "um simple example um with a strict signature verification uh we're pinning",
    "start": "727480",
    "end": "732839"
  },
  {
    "text": "off of a specific uh trusted identity um and then we're going to import that and",
    "start": "732839",
    "end": "738279"
  },
  {
    "text": "then finally um very simple right so you can imagine kind of end to endend uh before this gets released we can verify",
    "start": "738279",
    "end": "746000"
  },
  {
    "text": "uh the the signature against what's in the in the Reg indry and um that's um",
    "start": "746000",
    "end": "752279"
  },
  {
    "text": "pretty much uh for the for the",
    "start": "752279",
    "end": "756880"
  },
  {
    "text": "demo so I'll pass it over to shooting all right thanks Ivon uh let me",
    "start": "758959",
    "end": "765160"
  },
  {
    "text": "switch to the next slide so next I'll be demonstrating um how cerno integrates",
    "start": "765160",
    "end": "770519"
  },
  {
    "text": "with the notation Veni plugin to verify images within your kubernetes cluster",
    "start": "770519",
    "end": "776320"
  },
  {
    "text": "right and so we have built this um nada extension service that runs inside of",
    "start": "776320",
    "end": "781920"
  },
  {
    "text": "your kubernetes cluster to verify the images um using the notation manfi",
    "start": "781920",
    "end": "787480"
  },
  {
    "text": "plugin that Ian just demonstrated so it internally embeds the plugin and it runs",
    "start": "787480",
    "end": "793639"
  },
  {
    "text": "inside the kubernetes cluster and let's say now you're trying to send a request",
    "start": "793639",
    "end": "799040"
  },
  {
    "text": "to create some workloads that request will first reach to the API server and",
    "start": "799040",
    "end": "804880"
  },
  {
    "text": "if you have CNO running in place let's say um here CNO runs at as an emission",
    "start": "804880",
    "end": "809959"
  },
  {
    "text": "controller and with the coral policy deployed um running in place the",
    "start": "809959",
    "end": "815560"
  },
  {
    "text": "emission request will be forwarded to cerno and then cerno parses the image",
    "start": "815560",
    "end": "821480"
  },
  {
    "text": "data um from that emission request and I'll forward the image data to the extension service right and once the",
    "start": "821480",
    "end": "828639"
  },
  {
    "text": "extension service received that image data it'll use the notation of veni",
    "start": "828639",
    "end": "834240"
  },
  {
    "text": "plugin to verify the images and return that res results back to the cerno and",
    "start": "834240",
    "end": "840199"
  },
  {
    "text": "then that result is f the uh returned back to the API server along with the ad",
    "start": "840199",
    "end": "846040"
  },
  {
    "text": "admission responses and then you are able to block um your workload if your",
    "start": "846040",
    "end": "852399"
  },
  {
    "text": "workload is running some of the on sign or insecure image right so that's basic",
    "start": "852399",
    "end": "857600"
  },
  {
    "text": "uh the workflow of how that works in the commun cluster and just give you a",
    "start": "857600",
    "end": "863240"
  },
  {
    "text": "little bit more context of the extension service um edit cannot be used can not",
    "start": "863240",
    "end": "869720"
  },
  {
    "text": "only be used to verify the image signatures but also to verify the attestations right and you can also",
    "start": "869720",
    "end": "876759"
  },
  {
    "text": "mutate the image digest for your resources on the Fly and we have introduced this caching",
    "start": "876759",
    "end": "883639"
  },
  {
    "text": "mechanism um into this extension service which stores the verification outcomes",
    "start": "883639",
    "end": "890000"
  },
  {
    "text": "like the results of your image signatures or the attestations and this",
    "start": "890000",
    "end": "895079"
  },
  {
    "text": "is the inmemory TTL based cache and the cache uh entry will be cleared out once",
    "start": "895079",
    "end": "901839"
  },
  {
    "text": "it's once it expires or if there's any change to your trust policies or the",
    "start": "901839",
    "end": "907240"
  },
  {
    "text": "trust doors right and those are the resources that are used um when you do the verification with the notation",
    "start": "907240",
    "end": "914160"
  },
  {
    "text": "CI and more over to that if you're running on a shared cluster it is possible to configure multiple trust",
    "start": "914160",
    "end": "921320"
  },
  {
    "text": "policies and Trust stores to isolate the verification flow in the shared cluster",
    "start": "921320",
    "end": "927320"
  },
  {
    "text": "and um you know depend on your use cases uh especially if we're running in a large scale you are able to scale out",
    "start": "927320",
    "end": "935040"
  },
  {
    "text": "the extension service by increasing the replicas so that um the verification",
    "start": "935040",
    "end": "941160"
  },
  {
    "text": "request will be distributed to all running instances and you can you know",
    "start": "941160",
    "end": "946319"
  },
  {
    "text": "by allocating more resources to the extension service you are able to increase the combined",
    "start": "946319",
    "end": "953720"
  },
  {
    "text": "throughput so with that let me dive into the demo uh we'll see how the",
    "start": "953720",
    "end": "959880"
  },
  {
    "text": "verification works in your kubernetes",
    "start": "959880",
    "end": "964440"
  },
  {
    "text": "cluster okay so this is the conal one and um you know just this to introduce",
    "start": "972759",
    "end": "978440"
  },
  {
    "text": "this setup here I have a single node kind cluster",
    "start": "978440",
    "end": "984120"
  },
  {
    "text": "running and um with the to verify the images you have to install CNO in place",
    "start": "984120",
    "end": "990440"
  },
  {
    "text": "and also the extension service so I'm running I'm deploying caverno using this",
    "start": "990440",
    "end": "995759"
  },
  {
    "text": "ham command um this is a pre-release so I use that with the D- Devo",
    "start": "995759",
    "end": "1001120"
  },
  {
    "text": "command and after let's wait and see CNO is",
    "start": "1001120",
    "end": "1007519"
  },
  {
    "text": "installed it's going to take some time but um once cerno is in place um it'll",
    "start": "1009240",
    "end": "1015000"
  },
  {
    "text": "be you know here it'll be installed um the control emission control controller will be installed into your cluster with",
    "start": "1015000",
    "end": "1021279"
  },
  {
    "text": "all the rest of the uh controllers and um next I'm going to install the",
    "start": "1021279",
    "end": "1027360"
  },
  {
    "text": "extension service this is you know open source you can fetch it from the GitHub repo I'm installing from my local",
    "start": "1027360",
    "end": "1034520"
  },
  {
    "text": "manifest and let's verify that extension service is running in place and then um",
    "start": "1034520",
    "end": "1041600"
  },
  {
    "text": "you know as I said you have to deploy Cal policies in order to receive those admission request and let's quickly",
    "start": "1041600",
    "end": "1048360"
  },
  {
    "text": "inspect cernal policies here so I have a cluster policy here that matching on the",
    "start": "1048360",
    "end": "1056039"
  },
  {
    "text": "resource kind pod in a specific testing name space which is called test veny and",
    "start": "1056039",
    "end": "1062440"
  },
  {
    "text": "here if you inspect the context entries I have two entries here first it fetches",
    "start": "1062440",
    "end": "1068400"
  },
  {
    "text": "the um certificate um so that it can send the request to the extension uh",
    "start": "1068400",
    "end": "1073840"
  },
  {
    "text": "service end point right and then the second entry here I'm building the image",
    "start": "1073840",
    "end": "1079039"
  },
  {
    "text": "variable this is happening inside of cerno and then I'm doing a post call to",
    "start": "1079039",
    "end": "1084440"
  },
  {
    "text": "the extension service so I can send that image data over to the extension service",
    "start": "1084440",
    "end": "1090679"
  },
  {
    "text": "and then along with the information of the trust policy so the extension will know which trust policy to look at when",
    "start": "1090679",
    "end": "1097240"
  },
  {
    "text": "I do the verification right and moreover to that I'm doing a mutation as I mentioned",
    "start": "1097240",
    "end": "1103520"
  },
  {
    "text": "earlier you can replace the image tag by the image digest that is returned um",
    "start": "1103520",
    "end": "1109480"
  },
  {
    "text": "from the extension service right so next let's deploy that policy into your",
    "start": "1109480",
    "end": "1116440"
  },
  {
    "text": "cluster by cop Cado crate 8 and then let's make sure the policy is",
    "start": "1116440",
    "end": "1124440"
  },
  {
    "text": "ready yeah it's now in ready status so it means you can um it can be applied to",
    "start": "1124440",
    "end": "1130400"
  },
  {
    "text": "your emmission request and um you know this is the trust policy that Ivan has",
    "start": "1130400",
    "end": "1136280"
  },
  {
    "text": "showed uh earlier and it just wrapped up in a custom resource so that you can create it create it into your kubernetes",
    "start": "1136280",
    "end": "1144240"
  },
  {
    "text": "cluster it has the trust policy name and um all the rest of the data um this is",
    "start": "1144240",
    "end": "1150280"
  },
  {
    "text": "just a simple example of your trust policy and then let's deploy that into",
    "start": "1150280",
    "end": "1155559"
  },
  {
    "text": "your cluster again verifies that it has been",
    "start": "1155559",
    "end": "1160880"
  },
  {
    "text": "created successfully okay now similarly um I",
    "start": "1160880",
    "end": "1167480"
  },
  {
    "text": "will install the trust Stores um in the in the policy in into the cluster and similarly",
    "start": "1167480",
    "end": "1175280"
  },
  {
    "text": "again let's inspect that so it is also wrapped in the custom resource and it",
    "start": "1175280",
    "end": "1180559"
  },
  {
    "text": "has the name to that trust store Vis the C Bondo embedded in the spec of the",
    "start": "1180559",
    "end": "1186520"
  },
  {
    "text": "resource and if you create that to the [Music]",
    "start": "1186520",
    "end": "1193359"
  },
  {
    "text": "cluster and let's make sure it's created",
    "start": "1194480",
    "end": "1200640"
  },
  {
    "text": "successfully okay and with all those um resources in place you are now be able",
    "start": "1200640",
    "end": "1206080"
  },
  {
    "text": "to verify the images let's let's use the image that um Ian has uh showed um has",
    "start": "1206080",
    "end": "1212360"
  },
  {
    "text": "signed earlier so I'm trying to create a pod into this newly created test vanify",
    "start": "1212360",
    "end": "1218600"
  },
  {
    "text": "Nam space with the image um you know the the data from GHC container",
    "start": "1218600",
    "end": "1225640"
  },
  {
    "text": "registry with the image tag V1 and doing a server side dry",
    "start": "1225640",
    "end": "1232360"
  },
  {
    "text": "run and what happens internally is that you know the emission request has been",
    "start": "1232679",
    "end": "1238360"
  },
  {
    "text": "sent the API server forwarded that to Cal and then cernal parses the image",
    "start": "1238360",
    "end": "1243559"
  },
  {
    "text": "data send it over to the extension service and that extension service",
    "start": "1243559",
    "end": "1249000"
  },
  {
    "text": "internally leverages the notation benify plugin fetches the image data verifies",
    "start": "1249000",
    "end": "1254960"
  },
  {
    "text": "the signatures and um has the result turned back to the cerno and then um further",
    "start": "1254960",
    "end": "1261720"
  },
  {
    "text": "back to the emission to the API server now you can see that the Pod can be created",
    "start": "1261720",
    "end": "1268360"
  },
  {
    "text": "successfully because this is the signed image and next I'm going to run this command again just to Showcase you the",
    "start": "1268360",
    "end": "1275520"
  },
  {
    "text": "caching how the caching works right so if I run that command you can see the",
    "start": "1275520",
    "end": "1280640"
  },
  {
    "text": "Pod is created nearly immediately right so the verification results has been",
    "start": "1280640",
    "end": "1286440"
  },
  {
    "text": "cached um in the extension service so that you don't need to fetch everything again and you know with that",
    "start": "1286440",
    "end": "1293279"
  },
  {
    "text": "long delay when you do the verification and similarly if you're running an onsign image of course um",
    "start": "1293279",
    "end": "1300799"
  },
  {
    "text": "it'll be blocked by cerno because when IFI fails to when ify plugin fails to",
    "start": "1300799",
    "end": "1306200"
  },
  {
    "text": "verify the image and the request will be blocked so you'll see that in a",
    "start": "1306200",
    "end": "1314200"
  },
  {
    "text": "minute",
    "start": "1317520",
    "end": "1320520"
  },
  {
    "text": "okay now so you see the message that making sure your image has been signed successfully otherwise your uh creation",
    "start": "1327000",
    "end": "1333919"
  },
  {
    "text": "request will be blocked okay with that let me switch back to the",
    "start": "1333919",
    "end": "1340480"
  },
  {
    "text": "slide and hand over to toddy uh thank you shink um as you can see so uh we enabled",
    "start": "1342440",
    "end": "1351600"
  },
  {
    "text": "ways for actually uh to create extensions not only on the signing side but also on the verification side and we",
    "start": "1351600",
    "end": "1359120"
  },
  {
    "text": "are very happy to work with Partners like uh Beni and kerno in order to extend uh uh the capabilities so we have",
    "start": "1359120",
    "end": "1366960"
  },
  {
    "text": "the core part in in U uh notation and if you have any specific needs uh either we",
    "start": "1366960",
    "end": "1374520"
  },
  {
    "text": "can work with you to actually uh extend it or you can go through the documentation the same way like uh Ian",
    "start": "1374520",
    "end": "1381720"
  },
  {
    "text": "and uh implement it yourself uh what's coming next for notary projects so uh a",
    "start": "1381720",
    "end": "1387400"
  },
  {
    "text": "couple of things that we are working um we are working on signing and verifying arbitrary blobs uh which will allow us",
    "start": "1387400",
    "end": "1394000"
  },
  {
    "text": "to not only actually sign uh binaries",
    "start": "1394000",
    "end": "1399039"
  },
  {
    "text": "that are different from container images but also uh the actual binaries that you",
    "start": "1399039",
    "end": "1404200"
  },
  {
    "text": "download for let's say notation or any other uh software uh we are also working uh on this",
    "start": "1404200",
    "end": "1411919"
  },
  {
    "text": "because most of the time you want to sign the things before you push them to the registry so we want to sign as bombs",
    "start": "1411919",
    "end": "1417440"
  },
  {
    "text": "we want to sign uh other information that's related to your software before you push it to either uh the registry or",
    "start": "1417440",
    "end": "1426320"
  },
  {
    "text": "or whenever you will use it um the",
    "start": "1426320",
    "end": "1432159"
  },
  {
    "text": "uh I think we have repetition on the slides uh we are also working on time",
    "start": "1432159",
    "end": "1437760"
  },
  {
    "text": "stamp uh uh protocol support uh which will be built into uh for example",
    "start": "1437760",
    "end": "1443400"
  },
  {
    "text": "notation core which means that the time stamp support doesn't need to be implemented for example in uh the the",
    "start": "1443400",
    "end": "1450200"
  },
  {
    "text": "plugins and one of the big things that we are working on is really integration with attestation so we are engaging with",
    "start": "1450200",
    "end": "1456320"
  },
  {
    "text": "the Ino Community and uh we're looking to actually add attestation signing uh",
    "start": "1456320",
    "end": "1461799"
  },
  {
    "text": "into uh uh notation and also work on some standard attestations that we believe will be important for the",
    "start": "1461799",
    "end": "1468360"
  },
  {
    "text": "software supply chain uh we have 1 minute and I think I can sneak in one more demo uh inside and this demo is",
    "start": "1468360",
    "end": "1477399"
  },
  {
    "text": "actually uh with Docker Hub so far we've been doing our demos only with GHC but",
    "start": "1477399",
    "end": "1483159"
  },
  {
    "text": "uh uh recently thanks to the efforts that Docker put now we can push notation uh signatures into Docker Hub so very",
    "start": "1483159",
    "end": "1490840"
  },
  {
    "text": "quickly I I will go through that",
    "start": "1490840",
    "end": "1494559"
  },
  {
    "text": "demo uh there will be some some repetition here just to set kind of the environment",
    "start": "1497320",
    "end": "1502880"
  },
  {
    "text": "I have a a test repository which is in dockerhub and uh I am a python uh",
    "start": "1502880",
    "end": "1509039"
  },
  {
    "text": "developer so I mostly actually use pythons for demo uh what we going to do is we'll",
    "start": "1509039",
    "end": "1515039"
  },
  {
    "text": "create a signing key this is kind of similar to what Ian did for the um uh",
    "start": "1515039",
    "end": "1520360"
  },
  {
    "text": "venafi one uh this test key is created and now I am signing into",
    "start": "1520360",
    "end": "1526000"
  },
  {
    "text": "Docker and the only thing that I need need to do is to say notation sign signature format and as you can see the",
    "start": "1526000",
    "end": "1533480"
  },
  {
    "text": "image is successfully signed uh of course uh validation also",
    "start": "1533480",
    "end": "1539960"
  },
  {
    "text": "works uh uh the the uh standard way that",
    "start": "1539960",
    "end": "1545200"
  },
  {
    "text": "we do that is uh we create the policy uh we pull the image we validate it and as",
    "start": "1545200",
    "end": "1551960"
  },
  {
    "text": "you can see the policy is created specifically for the test repository",
    "start": "1551960",
    "end": "1557480"
  },
  {
    "text": "which is in in Docker Hub so when I verify the image again it tells me that",
    "start": "1557480",
    "end": "1563080"
  },
  {
    "text": "uh Docker IO image is verifiable uh from now on we'll be very happy that actually we'll be able to do",
    "start": "1563080",
    "end": "1569640"
  },
  {
    "text": "our demos with Docker Hub so thank you Docker and",
    "start": "1569640",
    "end": "1576640"
  },
  {
    "text": "uh I believe that's everything so uh we are open for any questions and please",
    "start": "1577760",
    "end": "1583880"
  },
  {
    "text": "provide any feedback to the session",
    "start": "1583880",
    "end": "1590240"
  },
  {
    "text": "any questions from the",
    "start": "1595360",
    "end": "1598880"
  },
  {
    "text": "audience I",
    "start": "1608080",
    "end": "1611278"
  },
  {
    "text": "can uh hey thanks for the talk um my question is about um Cavo with the um",
    "start": "1614080",
    "end": "1619559"
  },
  {
    "text": "the mar extension um my question is um do do you support like a mtls connection",
    "start": "1619559",
    "end": "1626320"
  },
  {
    "text": "between um caverno and the like the the extension service um and is that easily",
    "start": "1626320",
    "end": "1631799"
  },
  {
    "text": "configurable and how do you how do you achieve that yes so uh let me switch back to if I can uh to the ca policy I",
    "start": "1631799",
    "end": "1640520"
  },
  {
    "text": "have two comp contacts entry defined in the policy itself and the first one I",
    "start": "1640520",
    "end": "1645600"
  },
  {
    "text": "don't know if you have noticed that okay I think this is the [Music]",
    "start": "1645600",
    "end": "1651720"
  },
  {
    "text": "one right this um the first contacts named TLS search it actually fetch the",
    "start": "1651720",
    "end": "1658399"
  },
  {
    "text": "certificate from the secrets that is created by the extension service and then use that to forward uh to be able",
    "start": "1658399",
    "end": "1665720"
  },
  {
    "text": "to post request to the extension service okay cool sorry I missed that thank you",
    "start": "1665720",
    "end": "1671640"
  },
  {
    "text": "yep any other",
    "start": "1671720",
    "end": "1675278"
  },
  {
    "text": "questions",
    "start": "1677120",
    "end": "1680120"
  },
  {
    "text": "what about performance",
    "start": "1687279",
    "end": "1693679"
  },
  {
    "text": "performance for for the mechanism",
    "start": "1693679",
    "end": "1698840"
  },
  {
    "text": "itself well I guess we have overall performance with um with when signing or",
    "start": "1699679",
    "end": "1705080"
  },
  {
    "text": "with the the verifying the ver the verification yeah right right right uh very good question uh let me switch to",
    "start": "1705080",
    "end": "1711840"
  },
  {
    "text": "the this slides so at the last point you can see we in uh support High availability of this",
    "start": "1711840",
    "end": "1719360"
  },
  {
    "text": "extension service and you can either like I mentioned you can scale out by increasing the replica numbers of the",
    "start": "1719360",
    "end": "1725880"
  },
  {
    "text": "Run instances so the ver verification request will be distributed to all the Run instances or by allocating more",
    "start": "1725880",
    "end": "1733519"
  },
  {
    "text": "resources to that um you know configured instance so that you can increase is the",
    "start": "1733519",
    "end": "1739039"
  },
  {
    "text": "uh throughput of the uh the whole extension service so that is U",
    "start": "1739039",
    "end": "1744919"
  },
  {
    "text": "supported I hope that answers your question yeah and just one one note so also um especially when when when doing",
    "start": "1744919",
    "end": "1751320"
  },
  {
    "text": "verifying it's a third party um identity service from for the for the signing certificate so I think you know I think",
    "start": "1751320",
    "end": "1757960"
  },
  {
    "text": "a good thing with with at least with this integration is the ability for it to cash so you have the verification outcome so you're not going back to",
    "start": "1757960",
    "end": "1763640"
  },
  {
    "text": "check verification status um checking that the signing identity is in fact where it comes from right so that's",
    "start": "1763640",
    "end": "1770120"
  },
  {
    "text": "another I think a good part of it um hi uh just a question here uh",
    "start": "1770120",
    "end": "1778519"
  },
  {
    "text": "it's it's about the best practice so here in the demo uh you show us how to",
    "start": "1778519",
    "end": "1784519"
  },
  {
    "text": "sign locally uh but in like a real environment we want to sign the image",
    "start": "1784519",
    "end": "1791640"
  },
  {
    "text": "inside pipelines to upload them on registry however we do not want to have",
    "start": "1791640",
    "end": "1798240"
  },
  {
    "text": "those certificate available on all the projects so do you have best practice on",
    "start": "1798240",
    "end": "1804760"
  },
  {
    "text": "how to handle the the signature part inside the",
    "start": "1804760",
    "end": "1810840"
  },
  {
    "text": "pipelines yeah it's a great great question so uh best practices around um right the the signing and um that whole",
    "start": "1810840",
    "end": "1819200"
  },
  {
    "text": "process so that you're you're limiting the exposure of the signing certificates and keys right so so that's exactly what",
    "start": "1819200",
    "end": "1827279"
  },
  {
    "text": "where getting into more on the solutioning so at least veny um so our",
    "start": "1827279",
    "end": "1832799"
  },
  {
    "text": "our job is to basically um reduce eliminate the need for a local",
    "start": "1832799",
    "end": "1838919"
  },
  {
    "text": "certificate and at least the private signing key to be on the build system so what happens with our our integration is",
    "start": "1838919",
    "end": "1845360"
  },
  {
    "text": "that we we send that the digest uh the plugin does sends it off into the the Veni code signing service and that the",
    "start": "1845360",
    "end": "1853760"
  },
  {
    "text": "private key is either in the Veni um database or on a Hardware security",
    "start": "1853760",
    "end": "1859039"
  },
  {
    "text": "module so this is where more Enterprise side of it yeah and that way yeah once",
    "start": "1859039",
    "end": "1864159"
  },
  {
    "text": "again uh limiting the the the the compromise the key compromise",
    "start": "1864159",
    "end": "1869600"
  },
  {
    "text": "potential and just to add to that like we we uh have the GitHub action right so",
    "start": "1869600",
    "end": "1875240"
  },
  {
    "text": "you can get the uh notation CLI together with let's say the venafi plugin in the",
    "start": "1875240",
    "end": "1881679"
  },
  {
    "text": "kup action with very simple configuration uh so you can run it inside let's say GitHub action s or Ado",
    "start": "1881679",
    "end": "1889840"
  },
  {
    "text": "tasks uh so any other",
    "start": "1889840",
    "end": "1895278"
  },
  {
    "text": "questions thank you hi uh question for notar SDK which programming language do",
    "start": "1902880",
    "end": "1909679"
  },
  {
    "text": "you support I can answer that so notation",
    "start": "1909679",
    "end": "1916279"
  },
  {
    "text": "right now is implemented in uh go uh we are looking for other",
    "start": "1916279",
    "end": "1921760"
  },
  {
    "text": "languages to other other languages but right now go is the only",
    "start": "1921760",
    "end": "1927518"
  },
  {
    "text": "one anything else more questions so notation strongly relies on",
    "start": "1928080",
    "end": "1936200"
  },
  {
    "text": "the subject reference uh feature of the oi specification um there are still some",
    "start": "1936200",
    "end": "1943039"
  },
  {
    "text": "registry not supporting it do you have some work grounds or is just completely are of scope to support",
    "start": "1943039",
    "end": "1950840"
  },
  {
    "text": "them so um that is true certain regist do not support it like for example as we",
    "start": "1950840",
    "end": "1957480"
  },
  {
    "text": "mentioned Docker until recently does not Docker cup I mean until recently did not support that but they support it right",
    "start": "1957480",
    "end": "1964159"
  },
  {
    "text": "now now that the oci specification is actually uh released and stable uh we",
    "start": "1964159",
    "end": "1970120"
  },
  {
    "text": "expect actually every registry to report uh support it um uh we like majority of",
    "start": "1970120",
    "end": "1977080"
  },
  {
    "text": "the registries uh support uh one or the other way of actually doing referrals so there is a",
    "start": "1977080",
    "end": "1984399"
  },
  {
    "text": "uh backwards compatibility to oci 1.0 that uses manifest index in order to support the referrers or the new one 1.1",
    "start": "1984399",
    "end": "1992720"
  },
  {
    "text": "oci specification uses the referral API notary supports kind of both of those",
    "start": "1992720",
    "end": "1998200"
  },
  {
    "text": "and can work with each one of them uh honestly at the moment I it's escaping",
    "start": "1998200",
    "end": "2004480"
  },
  {
    "text": "from my mind which of the Registries do not support either one or the other so",
    "start": "2004480",
    "end": "2009720"
  },
  {
    "text": "theoretically all major registries you should be able to to use",
    "start": "2009720",
    "end": "2015240"
  },
  {
    "text": "it any more questions or I think we are almost at time actually we have one more",
    "start": "2015840",
    "end": "2024120"
  },
  {
    "text": "minute no Tom no okay thank you very much appreciate",
    "start": "2028480",
    "end": "2034399"
  },
  {
    "text": "your time thank you oh",
    "start": "2034399",
    "end": "2041120"
  }
]