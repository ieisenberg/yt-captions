[
  {
    "text": "hi everyone thank you for staying with us for so long uh last presentation of the day yeah hi everyone good to meet",
    "start": "719",
    "end": "6600"
  },
  {
    "text": "you all let's get started okay so this presentation is titled taming your application environments we uh plan for",
    "start": "6600",
    "end": "14440"
  },
  {
    "text": "a very complex presentation covering a lot of topics but we try to simplify it at the end yeah hopefully it's going to",
    "start": "14440",
    "end": "20720"
  },
  {
    "text": "be something different to what you've been seeing today so we are really trying to inspire you with new ideas so",
    "start": "20720",
    "end": "26000"
  },
  {
    "text": "we'll see how it goes let's do it y all right so my name is Marco I'm a software engineer at dager I'm Mauricio I'm a",
    "start": "26000",
    "end": "32719"
  },
  {
    "text": "software engineer at diag so what are we going to be talking about first and foremost um what is an",
    "start": "32719",
    "end": "41399"
  },
  {
    "text": "environment uh what makes or what can make your application cross environments and ultimately we're going to be showing",
    "start": "41399",
    "end": "47800"
  },
  {
    "text": "you a demo Hands-On demo on how you can actually make a a unified experience",
    "start": "47800",
    "end": "52960"
  },
  {
    "text": "that works across all the environments so before we start uh I did",
    "start": "52960",
    "end": "58440"
  },
  {
    "text": "this at application development con but if you didn't attend that event please take a screenshot here uh this is a",
    "start": "58440",
    "end": "64960"
  },
  {
    "text": "survey that we created as part of the application development working group and we want to get information we want",
    "start": "64960",
    "end": "70600"
  },
  {
    "text": "to get your opinions about uh the tools that developers are using nowadays so if you're an application developer please",
    "start": "70600",
    "end": "77119"
  },
  {
    "text": "fill the survey if you can this will help a lot and if you are like not a software like not a developer please",
    "start": "77119",
    "end": "82799"
  },
  {
    "text": "share it with your developers inside your company so what is an environment",
    "start": "82799",
    "end": "88159"
  },
  {
    "text": "uh the question is really difficult right right because it really depends on many things and especially in your",
    "start": "88159",
    "end": "93360"
  },
  {
    "text": "context and in your organization so probably my an environment in my company it's very different to an environment in",
    "start": "93360",
    "end": "98720"
  },
  {
    "text": "your company right yeah exactly I mean we usually tend to like standardize this across like testing staging production",
    "start": "98720",
    "end": "104479"
  },
  {
    "text": "and all that but there's way more many things that can actually make an environment in this uh sample image that",
    "start": "104479",
    "end": "110240"
  },
  {
    "text": "you can see here we have like a typical architecture we have maybe like two applications that communicate with each other and then there's some",
    "start": "110240",
    "end": "116600"
  },
  {
    "text": "infrastructure and then some tooling that actually Provisions these applications that actually make part of this environment but if we try to think",
    "start": "116600",
    "end": "123960"
  },
  {
    "text": "a little bit more about it is also my local environment my local machine and environment is maybe about my Docker",
    "start": "123960",
    "end": "130000"
  },
  {
    "text": "composer environment as well what about the kind cluster VMS CI Pipeline and",
    "start": "130000",
    "end": "135480"
  },
  {
    "text": "ultimately maybe some of you never thought about this but what about a PR right so when I open a PR against a repo",
    "start": "135480",
    "end": "141959"
  },
  {
    "text": "that PR may contain some manifest and software delivery artifacts that may be an environmental not so we're going to",
    "start": "141959",
    "end": "148080"
  },
  {
    "text": "expand on this a bit later during the demo and the question is to this uh the answer to this question sorry is like uh",
    "start": "148080",
    "end": "154680"
  },
  {
    "text": "well yes maybe I don't know uh the reality like any other answer to any uh",
    "start": "154680",
    "end": "159840"
  },
  {
    "text": "computer science question it's like it depends or yes maybe right and it depends on um basically your",
    "start": "159840",
    "end": "165879"
  },
  {
    "text": "organization right uh similarly to the Conway's law of software engineering we could say the same thing with",
    "start": "165879",
    "end": "170920"
  },
  {
    "text": "environments right it really depends what you and your team and maybe your your requirements are actually uh impli",
    "start": "170920",
    "end": "177760"
  },
  {
    "text": "that that that means and it really depends on the tools and the way that you are working so in order to make this",
    "start": "177760",
    "end": "184640"
  },
  {
    "text": "want to say anything no no go for it in order to say to um to be like less abstract and to try to like make a",
    "start": "184640",
    "end": "191080"
  },
  {
    "text": "concrete example of this we're going to take a real example and Maro is going to take it from here yeah so basically like we try to create an example of course we",
    "start": "191080",
    "end": "197480"
  },
  {
    "text": "like to have demos and in order to create a demo we need to basically create like the most simple distributed application that we can so we have two",
    "start": "197480",
    "end": "204400"
  },
  {
    "text": "different applications two Services they are communicating between each other and they are using this concept around like",
    "start": "204400",
    "end": "209840"
  },
  {
    "text": "know synchronous communication using HTTP or asynchronous Communications using rabid mq you can see that if you",
    "start": "209840",
    "end": "215879"
  },
  {
    "text": "have these kind of applications no matter the language probably if you are just developing the services you will need to have something like Docker",
    "start": "215879",
    "end": "222000"
  },
  {
    "text": "compos to start all the application infrastructure like in this case rabid mq that it's needed there it can be",
    "start": "222000",
    "end": "227360"
  },
  {
    "text": "Kafka it can be any other message broker that you want but also you need to be aware that inside the application you will have some dependencies to this",
    "start": "227360",
    "end": "233599"
  },
  {
    "text": "infrastructure so this is kind of like the typical setup for a developer right and we can take a look at the application so we can see kind the",
    "start": "233599",
    "end": "239959"
  },
  {
    "text": "application in action uh we just implemented this so then we can just show all the tools and how they work so",
    "start": "239959",
    "end": "245560"
  },
  {
    "text": "basically here we have the producer and the consumer and we have two ways of communicating kind of like the",
    "start": "245560",
    "end": "250920"
  },
  {
    "text": "synchronous way so if you start clicking there you will be sending synchronous uh request to the other application and",
    "start": "250920",
    "end": "255959"
  },
  {
    "text": "then the asynchronous way of communicating you are sending in messages via a message broker in this case right so you can see like you know",
    "start": "255959",
    "end": "262320"
  },
  {
    "text": "the the communication between the two services in this case this is probably running in an environment as we were defining before so we will take a look",
    "start": "262320",
    "end": "269479"
  },
  {
    "text": "into to that so imagine that you a developer you're probably running these two Services locally right uh if you are",
    "start": "269479",
    "end": "276240"
  },
  {
    "text": "a company like you know if if you are a company you are working for a company you are also hosting that into a more serious environment that it's running",
    "start": "276240",
    "end": "282039"
  },
  {
    "text": "against your customers but it's very possible that you also have some CI pipelines right like that will do more",
    "start": "282039",
    "end": "288160"
  },
  {
    "text": "things than what developers are doing in this case like you're running a pipeline that is going to basically set up a",
    "start": "288160",
    "end": "293360"
  },
  {
    "text": "bunch of tools so it can build the services and test that the developer making changes is not breaking anything",
    "start": "293360",
    "end": "299199"
  },
  {
    "text": "you have here different options you can use Docker compost for starting the same infrastructure that the developer was",
    "start": "299199",
    "end": "304400"
  },
  {
    "text": "starting but it will be a little bit different or you can have shared infrastructure where your pipelines can",
    "start": "304400",
    "end": "309720"
  },
  {
    "text": "connect and use these you know these resources uh and then you go to the more serious environments the ones that are",
    "start": "309720",
    "end": "316039"
  },
  {
    "text": "not that ephemeral right like these are Long Live environments like staging or production as as Marcus mentioned before",
    "start": "316039",
    "end": "322160"
  },
  {
    "text": "in this case there are more resources that you need uh and in this case is where like you can install more things",
    "start": "322160",
    "end": "327600"
  },
  {
    "text": "on top of your kubernetes clusters where this will be running but for this what you need is you need some Jamal files",
    "start": "327600",
    "end": "333919"
  },
  {
    "text": "you need some containers that at some point will need to be produced right so the question is going back to",
    "start": "333919",
    "end": "341240"
  },
  {
    "text": "what is an environment is like now what are all these environments sharing in common right we looked at the",
    "start": "341240",
    "end": "347199"
  },
  {
    "text": "application developer that works in their machine with their tools then the CI pipelines and then the more serious",
    "start": "347199",
    "end": "352360"
  },
  {
    "text": "environments right all of them they give your application a place to run right and that basically has some contracts",
    "start": "352360",
    "end": "358759"
  },
  {
    "text": "around it you need in this case for kubernetes you need containers for running your application locally maybe",
    "start": "358759",
    "end": "363880"
  },
  {
    "text": "you just need the runtime of that application then you need infrastructure right like you need all the applic all the components that the application",
    "start": "363880",
    "end": "369720"
  },
  {
    "text": "needs to run in our example that was rabid mq I'm pretty sure that in your examples it's a bunch of other",
    "start": "369720",
    "end": "374840"
  },
  {
    "text": "components like authentication services and a bunch of other things that the application will need and then you need",
    "start": "374840",
    "end": "380080"
  },
  {
    "text": "someone to configure this infrastructure so everything works and ultimately I need to orchestrate the management",
    "start": "380080",
    "end": "386800"
  },
  {
    "text": "creation and tear down of these envir environments as well so what do all these environments have in common is",
    "start": "386800",
    "end": "392120"
  },
  {
    "text": "basically all these items that is here yeah and no matter the shape or size we actually need to do two things think",
    "start": "392120",
    "end": "399319"
  },
  {
    "text": "about how we can make these applications less dependent on the environment and then think about how we can build",
    "start": "399319",
    "end": "404560"
  },
  {
    "text": "experiences to make sure that working across these environments and moving the application across environments is as",
    "start": "404560",
    "end": "410080"
  },
  {
    "text": "smooth as possible so we can deliver more software yep so how do we do that",
    "start": "410080",
    "end": "415680"
  },
  {
    "text": "yeah yeah how do we do that I mean imagine that it is your task as Engineers or devops or platform Engineers to actually uh come up with",
    "start": "415680",
    "end": "421400"
  },
  {
    "text": "this uh solution right someone basically gives you the task of okay can you please create an experience where",
    "start": "421400",
    "end": "427039"
  },
  {
    "text": "creating and managing these environments it's as smooth and as good as possible well you would ask it to nlm right like",
    "start": "427039",
    "end": "433599"
  },
  {
    "text": "we all do today CH GPT exactly or anthropic and in this case uh we would",
    "start": "433599",
    "end": "438720"
  },
  {
    "text": "say Okay create a workflow to build test Anda an application to either um run it locally and in coordin clusters and as",
    "start": "438720",
    "end": "445440"
  },
  {
    "text": "you can probably imagine the answer to this question is going to be something like this right so so on the right you",
    "start": "445440",
    "end": "450840"
  },
  {
    "text": "can see that you have like your software software Factory which is made out of glue or duct tape sorry in this case uh",
    "start": "450840",
    "end": "458440"
  },
  {
    "text": "and what's going to come out of the llm is going to be a ton of re non-reusable boiler plate so the LM is going to",
    "start": "458440",
    "end": "464759"
  },
  {
    "text": "probably give you a lot of terraform and a lot of bash scripts and a lot of maybe pumi or I don't know maybe a lot of",
    "start": "464759",
    "end": "470479"
  },
  {
    "text": "tools it's going to be very hard to verify that output because there's no way that you're going to have everything",
    "start": "470479",
    "end": "475840"
  },
  {
    "text": "installed to actually make that work right and of course it's going very hard as well because it's impossible to know",
    "start": "475840",
    "end": "481720"
  },
  {
    "text": "if that actually works even before running it uh because you don't know if there's a typo maybe the uh llm",
    "start": "481720",
    "end": "487639"
  },
  {
    "text": "hallucinated maybe some resources that do not exist there's going to be a mix of uh outdated and new practices right",
    "start": "487639",
    "end": "495159"
  },
  {
    "text": "towards this uh and ultimately uh this um basically means that llms are not yet",
    "start": "495159",
    "end": "501599"
  },
  {
    "text": "good at at this because what we're trying to do here is create a new experience right and llms are usually good when you know where where you want",
    "start": "501599",
    "end": "508360"
  },
  {
    "text": "to go right so when you have an idea on what you want but if you try to tell it hey create me a new experience which I",
    "start": "508360",
    "end": "514518"
  },
  {
    "text": "don't know how that's going to look like then you're probably going to end up with a thing like things like this so",
    "start": "514519",
    "end": "519880"
  },
  {
    "text": "the way to solve that if you ask any developer is basically just creating apis putting an API between you know",
    "start": "519880",
    "end": "525040"
  },
  {
    "text": "your applications and the infrastructure and making sure that those apis are consistent across environments and",
    "start": "525040",
    "end": "530440"
  },
  {
    "text": "that's the main reason why I wanted to quickly talk to you about like the Dapper project that comes next that just",
    "start": "530440",
    "end": "536440"
  },
  {
    "text": "graduated this week so we are extremely excited because this project is is pretty much doing that it's putting a layer between your applications and the",
    "start": "536440",
    "end": "543440"
  },
  {
    "text": "infrastructure that is there providing developers apis that not only abstract the infrastructure but also provide",
    "start": "543440",
    "end": "549079"
  },
  {
    "text": "Cloud native distributed patterns on top of it so Dapper gives you can of that like no matter the language that you're",
    "start": "549079",
    "end": "554800"
  },
  {
    "text": "using you kind like get some kind of like runtime freedom for your applications because again you rely on apis that will be consistent across",
    "start": "554800",
    "end": "561760"
  },
  {
    "text": "environments so even if you don't use Dapper like using the idea of exposing apis that will give you common",
    "start": "561760",
    "end": "567959"
  },
  {
    "text": "functionality across environments I think it's a good idea with Dapper in this case we are using two apis the",
    "start": "567959",
    "end": "573160"
  },
  {
    "text": "service to service communication and the publishes And subscribe uh apis this uh",
    "start": "573160",
    "end": "578680"
  },
  {
    "text": "not only give you these functionalities but also all the cross cutting concerns behind the apis like observability",
    "start": "578680",
    "end": "584279"
  },
  {
    "text": "security and resiliency and as you can see down below the the diagram here you can swap providers right like in this",
    "start": "584279",
    "end": "590720"
  },
  {
    "text": "case again the example is using rabid mq we can swap that out because now daa is exposing apis to the application to do",
    "start": "590720",
    "end": "597160"
  },
  {
    "text": "the asynchronous communication path so if we go back to the example diagram that we have for our producer and",
    "start": "597160",
    "end": "603360"
  },
  {
    "text": "consumer how Dapper works is that you install Dapper the control plane into your cluster and then Dapper will inject",
    "start": "603360",
    "end": "609279"
  },
  {
    "text": "these you know side cars very close to your applications exposing your apis so in this case the applications will be",
    "start": "609279",
    "end": "615160"
  },
  {
    "text": "using the Dapper apis to communicate synchronously and asynchronously and you can configure all the infrastructure",
    "start": "615160",
    "end": "620839"
  },
  {
    "text": "down there right again we are just making this a little bit more uh abstracted from the infrastructure so",
    "start": "620839",
    "end": "626600"
  },
  {
    "text": "you can swap like like that bottom layer for other components and other implementations if you want to can we",
    "start": "626600",
    "end": "632240"
  },
  {
    "text": "take a quick a quick look about like the application view that we can get from Dapper yep of course so if you go to the",
    "start": "632240",
    "end": "639839"
  },
  {
    "text": "yeah there so basically this is a a tool called conductor that basically will give you this Dapper view of the",
    "start": "639839",
    "end": "645600"
  },
  {
    "text": "application and in this case again it's showing you that you have a producer and a consumer and that they are exchanging",
    "start": "645600",
    "end": "651399"
  },
  {
    "text": "data both synchronously and as synchronously one asynchronously going through psab in this case you can see",
    "start": "651399",
    "end": "657560"
  },
  {
    "text": "that there is a component there and this case that's been using rabid mq you can move this application to a different",
    "start": "657560",
    "end": "663320"
  },
  {
    "text": "environment by just swapping rabid mq by something different like Google psab or Amazon sqs uh and the application",
    "start": "663320",
    "end": "670120"
  },
  {
    "text": "doesn't need to change at all one more thing that I want to show is that because we are using high level apis",
    "start": "670120",
    "end": "675440"
  },
  {
    "text": "here you can go to uh see which are these apis that we are using and here you can see two different graphs the",
    "start": "675440",
    "end": "681440"
  },
  {
    "text": "first one is showing all the synchronous Communications like all the things that are happening in there uh via synchronous Communications and then the",
    "start": "681440",
    "end": "687800"
  },
  {
    "text": "puffs up like every time that we PP a message in an a synchronous way you can see all those kind like application",
    "start": "687800",
    "end": "693399"
  },
  {
    "text": "behaviors from a very high level so this is not networking information but it's more like what behaviors is my",
    "start": "693399",
    "end": "699920"
  },
  {
    "text": "application using and consuming here and Dapper also gives you the advantage that",
    "start": "699920",
    "end": "705440"
  },
  {
    "text": "it's not only kubernetes right like you can have a very very very different very",
    "start": "705440",
    "end": "710480"
  },
  {
    "text": "uh big environment with on Prem workloads and kubernetes workloads and then you can connect these applications",
    "start": "710480",
    "end": "717200"
  },
  {
    "text": "together by abstracting away how this applications communicate cool that takes us to the",
    "start": "717200",
    "end": "723959"
  },
  {
    "text": "next step right like how do we build experiences when we have this complexity on the tools yeah exactly thank you for",
    "start": "723959",
    "end": "729720"
  },
  {
    "text": "that Mauricio so Mauricio just told us how we can abstract infrastructure by actually using Dapper right because it",
    "start": "729720",
    "end": "735199"
  },
  {
    "text": "allow us to basically move our applications whatever we want and we can build our apid driven uh communication",
    "start": "735199",
    "end": "741959"
  },
  {
    "text": "across them right but the thing is that with any new tool that we bring to our",
    "start": "741959",
    "end": "747240"
  },
  {
    "text": "tool set then there's a new set of problems that we have to tackle which is okay how do we make this Tool Work in",
    "start": "747240",
    "end": "753360"
  },
  {
    "text": "our environments right uh in our case for example if you if we bringing Dapper",
    "start": "753360",
    "end": "758480"
  },
  {
    "text": "Dapper has a specific way of working which is via side cards as Mar was showing in the images but then you would have to make that work in your local",
    "start": "758480",
    "end": "764839"
  },
  {
    "text": "machine and in C and multiple places because you're are adding a new component and then your whole Factory",
    "start": "764839",
    "end": "770360"
  },
  {
    "text": "which as I was showing before becomes a bit slower right in order to iterate because you need to like integrate all",
    "start": "770360",
    "end": "776079"
  },
  {
    "text": "these tools in your current tooling which might be I don't know make fil St compost files uh whatever CI yam format",
    "start": "776079",
    "end": "782600"
  },
  {
    "text": "you're currently handling so let's try to find a solution for that and I think that just to add on top of that like here we are just showing Dapper but what",
    "start": "782600",
    "end": "788920"
  },
  {
    "text": "about if you use K native for serverless or what about if you use open feature for feature flagging like the more tools",
    "start": "788920",
    "end": "795199"
  },
  {
    "text": "that you add into this ecosystem the more like you need like a unified experience that wraps it all for all the",
    "start": "795199",
    "end": "800399"
  },
  {
    "text": "environments for local development for CI for you know production so for that I'm going to be showcasing dagger which",
    "start": "800399",
    "end": "806959"
  },
  {
    "text": "is an a API code first programmable CI engine that runs everything everything",
    "start": "806959",
    "end": "812079"
  },
  {
    "text": "in containers which allows you to run the same experience both locally and in any CI PRI that you want",
    "start": "812079",
    "end": "817839"
  },
  {
    "text": "MH okay so this is probably your company like your little Factory which is like very nice and and colory and as you can",
    "start": "817839",
    "end": "824959"
  },
  {
    "text": "see you're probably producing containers today right you're are shipping like a be you know like make making your customers happy everything's good but if",
    "start": "824959",
    "end": "831440"
  },
  {
    "text": "you pick a little bit inside your factory it might look something like this in reality right uh so your",
    "start": "831440",
    "end": "837440"
  },
  {
    "text": "software delivery process today is probably made of a of a bunch of glue",
    "start": "837440",
    "end": "843120"
  },
  {
    "text": "and a bunch of like duct tape as I showed before mostly because uh there's several tool chains per teams right like",
    "start": "843120",
    "end": "849759"
  },
  {
    "text": "there's no unified process to actually sh ship software then we live in this world of pain where something works in",
    "start": "849759",
    "end": "855639"
  },
  {
    "text": "my Dev machine but then something doesn't work in CI for whatever reason and then we enter in this Loop of like",
    "start": "855639",
    "end": "861720"
  },
  {
    "text": "okay uh because I can't run what CI actually does then I have to actually uh push my code wait for CI I don't know",
    "start": "861720",
    "end": "868600"
  },
  {
    "text": "five 2 10 20 minutes to become either green or red and if it becomes red then it's the worst day of my of my life",
    "start": "868600",
    "end": "874560"
  },
  {
    "text": "because I need to go back to my computer make a little type of fix and then push the code again and do all the thing all",
    "start": "874560",
    "end": "879639"
  },
  {
    "text": "over all over again and that's part of the experience right like the experience that we talking about here yeah and um",
    "start": "879639",
    "end": "885160"
  },
  {
    "text": "the thing about this is like if we think about it we are kind of like suffering the same problems that we suffered with",
    "start": "885160",
    "end": "890560"
  },
  {
    "text": "applications 10 years ago when Dockers and containers became popular right because we are uh seeing that companies",
    "start": "890560",
    "end": "897759"
  },
  {
    "text": "have a really hard time today actually making that software Factory and that delivery pip pipeline work and",
    "start": "897759",
    "end": "904160"
  },
  {
    "text": "especially deliver a unified experience and why is this right and we believe that the reason that this happens is",
    "start": "904160",
    "end": "909680"
  },
  {
    "text": "because there's no unified tool right that actually allows allows us to encode",
    "start": "909680",
    "end": "914720"
  },
  {
    "text": "all this complexity and run them everywhere the same way which is what dagger actually does so what we would like to have right",
    "start": "914720",
    "end": "922600"
  },
  {
    "text": "is this kind of factory right we would like all our companies to become something like this where you have like",
    "start": "922600",
    "end": "928199"
  },
  {
    "text": "a like a real real standardized and modularized Factory where you can ship fast while at the same time uh making",
    "start": "928199",
    "end": "934880"
  },
  {
    "text": "sure that your applications are built with a safe and all the best practices that we uh usually",
    "start": "934880",
    "end": "941120"
  },
  {
    "text": "want so how does lger dagger look in a in a nutshell as I mentioned before",
    "start": "941120",
    "end": "947160"
  },
  {
    "text": "dagger is an API first uh tool right that allows you to encode your pipelines with actual real code which support like",
    "start": "947160",
    "end": "954560"
  },
  {
    "text": "SD for typescript node and and go at this moment sorry typescript Python and go at this moment and if you look at the",
    "start": "954560",
    "end": "961759"
  },
  {
    "text": "left you're going to see that your make file factor is something would be similar uh similar to the image that you",
    "start": "961759",
    "end": "967720"
  },
  {
    "text": "see there which is basically you generally start your do compose and then you have scripts today that either wait",
    "start": "967720",
    "end": "973560"
  },
  {
    "text": "for something to be ready and then you maybe you test or bu your applications and then you have some more scripts to",
    "start": "973560",
    "end": "978800"
  },
  {
    "text": "actually grab the output of that and hopefully if the thing that run before actually produced the right output then",
    "start": "978800",
    "end": "983959"
  },
  {
    "text": "everything is going to work with dagger on the other hand you can actually encode all these logic in an actual",
    "start": "983959",
    "end": "990199"
  },
  {
    "text": "programming language where you have proper types right so your factories is",
    "start": "990199",
    "end": "995279"
  },
  {
    "text": "becoming like a like an API type kind of factory right you have functions that",
    "start": "995279",
    "end": "1000480"
  },
  {
    "text": "you can reuse from uh previous uh definitions in your in your dger modules then you can also at the same",
    "start": "1000480",
    "end": "1007720"
  },
  {
    "text": "time similarly to your make file Factory you can also like bind services for this particular test function to pass and",
    "start": "1007720",
    "end": "1014000"
  },
  {
    "text": "then ultimately you have like proper types first class citizens so in this case I'm basically getting the file out",
    "start": "1014000",
    "end": "1019720"
  },
  {
    "text": "of that test result and returning like a like a concrete type that anyone else in",
    "start": "1019720",
    "end": "1024959"
  },
  {
    "text": "the company can actually make use of because they're actually being able to run this uh test function as I said",
    "start": "1024959",
    "end": "1030120"
  },
  {
    "text": "before take into account that dagger since dagger uh runs everything in containers I'm able to run this locally",
    "start": "1030120",
    "end": "1035720"
  },
  {
    "text": "and inci and we're going to see the demo about this in a minute so for me I really like this as I really like that",
    "start": "1035720",
    "end": "1042438"
  },
  {
    "text": "as as a developer because again I can encode using like building blocks an API first approach my setup for different",
    "start": "1042439",
    "end": "1049240"
  },
  {
    "text": "environments so I think that what Marcos is going to show now is basically how do we run this application like in different places right yeah exactly so",
    "start": "1049240",
    "end": "1056080"
  },
  {
    "text": "we're going to take Mauricio application which is an open source repository that we're going to give you the link at the end of of the presentation and as you",
    "start": "1056080",
    "end": "1062799"
  },
  {
    "text": "can see here I have both my uh consumer app and producer app which are Java apps",
    "start": "1062799",
    "end": "1069039"
  },
  {
    "text": "and we are going to note that we have like a dagger. Json at the top of my repo here and if I print it you're going",
    "start": "1069039",
    "end": "1075720"
  },
  {
    "text": "to see that it has a basically a name it has an n that the dagger application has",
    "start": "1075720",
    "end": "1080880"
  },
  {
    "text": "been dagger pipeline has been specified in and then a set of dependencies that uh we're going to see what that's about",
    "start": "1080880",
    "end": "1086039"
  },
  {
    "text": "in a bit once I'm in this application I can actually say dagger functions and",
    "start": "1086039",
    "end": "1091280"
  },
  {
    "text": "this is going to return what functions so what's available in my application right to be able to perform in this case",
    "start": "1091280",
    "end": "1098440"
  },
  {
    "text": "you can see that I can either call the uh app function right which basically starts both the consumer and the",
    "start": "1098440",
    "end": "1104200"
  },
  {
    "text": "producer I can either handle some things about the producer I can also handle things about the uh sorry the consumer",
    "start": "1104200",
    "end": "1110120"
  },
  {
    "text": "and then the producer as well and we are going to see what we are going to do with the cube function a bit later if we",
    "start": "1110120",
    "end": "1116120"
  },
  {
    "text": "actually go and check this application let me go here you're going to see uh in in GitHub that I have like",
    "start": "1116120",
    "end": "1124440"
  },
  {
    "text": "a dagger folder right uh it's here and then if I",
    "start": "1124440",
    "end": "1131320"
  },
  {
    "text": "go to the main. go which is the entry point of my pipelines because this is code right it's very important uh about",
    "start": "1131320",
    "end": "1138120"
  },
  {
    "text": "the fact that dger allows you to encode your pipelines as code you can immediately reuse all the ecosystem of",
    "start": "1138120",
    "end": "1144039"
  },
  {
    "text": "Tools around code and in this case I'm using basically a symbol feature of Gab actions and I can immediately see what",
    "start": "1144039",
    "end": "1149799"
  },
  {
    "text": "the pipelines of this application is currently providing me right so I can see that I have like these functions that I've showed you in the D functions",
    "start": "1149799",
    "end": "1155320"
  },
  {
    "text": "output before and then if I see here I can see that the producer function actually returns a producer type and if",
    "start": "1155320",
    "end": "1161559"
  },
  {
    "text": "I click on the producer type I can see that the producer. go is actually enabling me to perform all these",
    "start": "1161559",
    "end": "1167880"
  },
  {
    "text": "capabilities right okay so uh going back to the terminal I'm going to I'm going to do um",
    "start": "1167880",
    "end": "1175039"
  },
  {
    "text": "let's give you an example I'm going to do dagger call and then the producer",
    "start": "1175039",
    "end": "1180159"
  },
  {
    "text": "function uh producer sorry uh and then I have I can do help and what this is",
    "start": "1180159",
    "end": "1185600"
  },
  {
    "text": "going to do is basically going to give me okay these are all the things that you can do on the producer so let's let's build the producer Java",
    "start": "1185600",
    "end": "1192000"
  },
  {
    "text": "application I'm going to say build and if we look at the um at the",
    "start": "1192000",
    "end": "1197679"
  },
  {
    "text": "code that this this actually does which is going to be very similar to the code that I've showed you in the slides before as you can see that this build",
    "start": "1197679",
    "end": "1204000"
  },
  {
    "text": "function returns a file which is a first class pipeline construct and then if we",
    "start": "1204000",
    "end": "1210120"
  },
  {
    "text": "go of course this is like a generic function that other like the consumer also uses because they share a lot of things in common if I go to the",
    "start": "1210120",
    "end": "1216200"
  },
  {
    "text": "definition thank you um code first pipelines and and GitHub you're going to see that in this case I'm actually",
    "start": "1216200",
    "end": "1222919"
  },
  {
    "text": "calling a Java function from the dagger ecosystem I'm selecting the SDK the Java",
    "start": "1222919",
    "end": "1228080"
  },
  {
    "text": "SDK 17 I'm basically mounting my source code which is a source code that this",
    "start": "1228080",
    "end": "1233320"
  },
  {
    "text": "this function receiv receives V arguments I'm setting a cash Mount this is so when I run this multiple times I",
    "start": "1233320",
    "end": "1238679"
  },
  {
    "text": "can actually reuse whatever is downloaded by uh Maven and then I'm actually packaging the application and",
    "start": "1238679",
    "end": "1244200"
  },
  {
    "text": "returning the target file that get gets built inside of this container that dger",
    "start": "1244200",
    "end": "1249320"
  },
  {
    "text": "executes uh once I have the output which is what I what I run before what I run",
    "start": "1249320",
    "end": "1254679"
  },
  {
    "text": "before was here dger called build this gives me a file right it's already",
    "start": "1254679",
    "end": "1260600"
  },
  {
    "text": "telling me okay you have this file and I can tell dagger then what to do with this file in a multiple ways in this",
    "start": "1260600",
    "end": "1266000"
  },
  {
    "text": "case for example let's say that I want my file uh in my local machine and then I'm going to give it the same name so",
    "start": "1266000",
    "end": "1272559"
  },
  {
    "text": "I'm just going to call this you're going to see that this is very fast because I already run this before and it's everything is cached so if I do l l",
    "start": "1272559",
    "end": "1280279"
  },
  {
    "text": "sorry you're going to see that the file is in my local machine right and this is already giving me some um Universal",
    "start": "1280279",
    "end": "1286799"
  },
  {
    "text": "execution because any anyone that runs this command that I just run don't even need to have Java installed because",
    "start": "1286799",
    "end": "1293279"
  },
  {
    "text": "dagger handles basically all the bootstrapping and all the container execution of all this these definitions right so I don't even need to do like",
    "start": "1293279",
    "end": "1299799"
  },
  {
    "text": "Java install or anything at all because dagger takes care of that for me I think it's really important to highlight that",
    "start": "1299799",
    "end": "1305360"
  },
  {
    "text": "he basically codify the build process of this application in particular and that can be reused and shared with other",
    "start": "1305360",
    "end": "1311960"
  },
  {
    "text": "teams that have similar applications in this case we have two Services we are using the same code to build in the second one as a library right",
    "start": "1311960",
    "end": "1319200"
  },
  {
    "text": "yep now let's see like an example a a little bit more complex where I run both",
    "start": "1319200",
    "end": "1324520"
  },
  {
    "text": "of the applications right I have Mauricio showed that he was using um the",
    "start": "1324520",
    "end": "1329600"
  },
  {
    "text": "consumer the producer then he had like Dapper and then rabit inq service so let's see how that looks in in dagger",
    "start": "1329600",
    "end": "1336760"
  },
  {
    "text": "I'm going to go back to my module right so if I go to the main. go here you're",
    "start": "1336760",
    "end": "1342559"
  },
  {
    "text": "going to see that this module has a function that is called app right can you make it bigger bigger a little bit",
    "start": "1342559",
    "end": "1347919"
  },
  {
    "text": "bigger yeah sorry sorry there you go there we have a function that is called app as you can see I'm reusing the same",
    "start": "1347919",
    "end": "1355360"
  },
  {
    "text": "function that I showed before right I'm basically calling my producer function right I'm getting a producer here I'm",
    "start": "1355360",
    "end": "1361640"
  },
  {
    "text": "getting a consumer here which are going to are going to give are going to give me a container then I start a rabbit service",
    "start": "1361640",
    "end": "1368480"
  },
  {
    "text": "which is the service that both applications are going to need then I call the producer service and then I",
    "start": "1368480",
    "end": "1374440"
  },
  {
    "text": "pass this rabbit service that I injected I do the same uh same thing with the consumer sorry and once I have both of",
    "start": "1374440",
    "end": "1382080"
  },
  {
    "text": "these Services if I look at this service function that you have here this service function returns like a dagger service",
    "start": "1382080",
    "end": "1389520"
  },
  {
    "text": "which is a first class type to actually say that this is something that is going to be running and exposing a port right",
    "start": "1389520",
    "end": "1395679"
  },
  {
    "text": "and once I have those two Services I basically tell dagger okay give me a reverse proxy to these services so I can",
    "start": "1395679",
    "end": "1401279"
  },
  {
    "text": "actually connect and basically uh browsing right and browse the application one last thing that I want to show you before starting this is that",
    "start": "1401279",
    "end": "1407880"
  },
  {
    "text": "if I go to the producer service you're going to see that here I basically create like a producer container with",
    "start": "1407880",
    "end": "1414960"
  },
  {
    "text": "this function that that that you can see here and then I basically inject Dapper to this producer service so what you're",
    "start": "1414960",
    "end": "1421840"
  },
  {
    "text": "seeing here is that I'm basically using the same building blocks for both of the applications because in this case they share a lot of core components but then",
    "start": "1421840",
    "end": "1428760"
  },
  {
    "text": "I'm actually building my pipeline little by little and uh in a type Safeway so I can actually run all those things",
    "start": "1428760",
    "end": "1435480"
  },
  {
    "text": "locally in my machine and for me this is extremely important because again he's bringing some of the functionality that will be only available in a cluster like",
    "start": "1435480",
    "end": "1442200"
  },
  {
    "text": "running in a COR cluster when you use a tool like Dapper that you install in a cluster closer to the you know to the",
    "start": "1442200",
    "end": "1447600"
  },
  {
    "text": "development environment in this case and it's codified so anyone else using Dapper can use the same function for",
    "start": "1447600",
    "end": "1452799"
  },
  {
    "text": "wood strapping Dapper right besides the services yeah if you had to do something like this uh without a tool like this",
    "start": "1452799",
    "end": "1458559"
  },
  {
    "text": "you would probably have to do like a lot of make file SL bash starts and a bunch",
    "start": "1458559",
    "end": "1463679"
  },
  {
    "text": "of other things Docker compost and encoding like health checks and for",
    "start": "1463679",
    "end": "1468720"
  },
  {
    "text": "things and injecting services in those uh tools is not generally like the the most Pleasant uh path to actually do it",
    "start": "1468720",
    "end": "1474880"
  },
  {
    "text": "but it works um so let let me show you how you can run this so if I do dger call uh up this is going to give me a",
    "start": "1474880",
    "end": "1482320"
  },
  {
    "text": "service so with a service I can basically say up and as you can see now I this is",
    "start": "1482320",
    "end": "1488320"
  },
  {
    "text": "basically resolving the applications it's like starting rabbit here as you can see here starting the rabbit service",
    "start": "1488320",
    "end": "1493960"
  },
  {
    "text": "it's going to be waiting uh in this case it's uh yeah rabbit mq as you can see here [Music]",
    "start": "1493960",
    "end": "1499520"
  },
  {
    "text": "let me show you this then it's uh starting the consumer service it's as",
    "start": "1499520",
    "end": "1505200"
  },
  {
    "text": "you can see it's doing like Maven package it's basically creating the containers of uh both the producer and",
    "start": "1505200",
    "end": "1510880"
  },
  {
    "text": "the consumer uh it's putting that into a um Java runtime container and then it's uh",
    "start": "1510880",
    "end": "1517399"
  },
  {
    "text": "starting the proxy that I uh showed you before which is an engine X that has the reverse proxy engine X is going to wait",
    "start": "1517399",
    "end": "1525240"
  },
  {
    "text": "so basically I need to start the Java apps as you can see here it says like ja Java start so the engx service is going",
    "start": "1525240",
    "end": "1530760"
  },
  {
    "text": "to wait for the Java app to be happy and now everything is ready so I should be able to go to the browser now and do uh",
    "start": "1530760",
    "end": "1538039"
  },
  {
    "text": "Cube up 8080 and the application is running and",
    "start": "1538039",
    "end": "1543640"
  },
  {
    "text": "then I can do Cube up 8080 8081 and the same application that",
    "start": "1543640",
    "end": "1549799"
  },
  {
    "text": "Mauricio was showing you before that was deployed in kubernetes with Dapper and a bunch of things I have it running",
    "start": "1549799",
    "end": "1555399"
  },
  {
    "text": "locally now and as you can see everything is connected everything is like you know sending messages from one place to the other one and everything is",
    "start": "1555399",
    "end": "1562159"
  },
  {
    "text": "happy to wrap it up because we have a little bit of time yep uh we're going to",
    "start": "1562159",
    "end": "1567399"
  },
  {
    "text": "do like a final very complex example which is we're going to try to run uh",
    "start": "1567399",
    "end": "1573720"
  },
  {
    "text": "the same setup that Mar did in kubernetes but locally in my machine so I'm going to start a kubernetes cluster",
    "start": "1573720",
    "end": "1578799"
  },
  {
    "text": "I'm going to deploy the rabbit Helm chart the daer chem chart yep uh and",
    "start": "1578799",
    "end": "1584240"
  },
  {
    "text": "then I'm going to basically build these containers and uh create the uh manifest in order for work before that I I've",
    "start": "1584240",
    "end": "1590559"
  },
  {
    "text": "heard that you didn't like the UI that much should we try like a PO request what about like a PO request is a",
    "start": "1590559",
    "end": "1596159"
  },
  {
    "text": "request on environment remember yeah exactly so do you remember that initially at the beginning we told you hey what about P requests could a p",
    "start": "1596159",
    "end": "1602880"
  },
  {
    "text": "request VI an environment so in this particular case I open the pool request to Mauricio saying hey we actually need",
    "start": "1602880",
    "end": "1610440"
  },
  {
    "text": "to merge this which is like a super important change as you can see here well it's actually a lot of HTML you",
    "start": "1610440",
    "end": "1616600"
  },
  {
    "text": "formatted my HTML come but the the important thing the important thing is somewhere around here you can show it",
    "start": "1616600",
    "end": "1623360"
  },
  {
    "text": "yeah I'm going to show it show it uh okay it's going to be a mystery but the thing is that imagine that I have to uh",
    "start": "1623360",
    "end": "1630360"
  },
  {
    "text": "work on this P request what I have to do is I have to like uh check out the code uh",
    "start": "1630360",
    "end": "1636120"
  },
  {
    "text": "basically go to the branch recompile the applications and do all that all over again and that actually takes a lot of",
    "start": "1636120",
    "end": "1641399"
  },
  {
    "text": "time the good thing about uh environments is that this uh pull",
    "start": "1641399",
    "end": "1646559"
  },
  {
    "text": "request basically it's actually like a branch somewhere that has all the necessary artifacts for me to actually",
    "start": "1646559",
    "end": "1652720"
  },
  {
    "text": "build and test the application that I've showed you before right because because this is a branch I already have all the dagger descriptors that I show you",
    "start": "1652720",
    "end": "1658399"
  },
  {
    "text": "before the dagger code to actually build this it's already there right so it will be amazing if for example I go to like a",
    "start": "1658399",
    "end": "1667360"
  },
  {
    "text": "like here in like another folder MH right I go to a folder where nothing is",
    "start": "1667360",
    "end": "1672559"
  },
  {
    "text": "here it would be amazing if I even without having the code checked out I could actually run that environment in my local machine",
    "start": "1672559",
    "end": "1678640"
  },
  {
    "text": "well dagger actually supports this so instead of running like a local dagger module which is what you saw before I",
    "start": "1678640",
    "end": "1685120"
  },
  {
    "text": "can tell dagger hey dagger instead of using my local uh code to run the the",
    "start": "1685120",
    "end": "1691880"
  },
  {
    "text": "pipelines get the pipelines from this uh URL right as you can see here this is like basically like a g URL plus the",
    "start": "1691880",
    "end": "1699600"
  },
  {
    "text": "pool three merge uh branch and then call the same function that I called before",
    "start": "1699600",
    "end": "1705440"
  },
  {
    "text": "and start everything what dger is going to do is going to treat that pull request as an environment it's going to",
    "start": "1705440",
    "end": "1712080"
  },
  {
    "text": "basically do the same thing that I did before in my local machine it's going to basically clone the code start the ramum cube server start uper and do all the",
    "start": "1712080",
    "end": "1719120"
  },
  {
    "text": "other things and basically provide provide me like with this unified experience that no matter where the code",
    "start": "1719120",
    "end": "1725519"
  },
  {
    "text": "lives I can actually like Point dagger to it and tell dagger hey just make use of that environment that it is defined",
    "start": "1725519",
    "end": "1730600"
  },
  {
    "text": "there in that specific com yeah uh all this is starting it's going to take a",
    "start": "1730600",
    "end": "1736120"
  },
  {
    "text": "little bit and uh once this is done as should be done now if I try",
    "start": "1736120",
    "end": "1742279"
  },
  {
    "text": "the cube up 8080 so for me I think that this is a great example of how you can",
    "start": "1742279",
    "end": "1748480"
  },
  {
    "text": "create an experience here right you are creating some sort of like preview environment in a local machine and",
    "start": "1748480",
    "end": "1753760"
  },
  {
    "text": "removing the kind like all the boiler plate of developers needing to know where to fork and get the right data and",
    "start": "1753760",
    "end": "1759200"
  },
  {
    "text": "the right so this is up and if everything worked you're going to see Rockets here which you didn't see before you saw like little like yeah males",
    "start": "1759200",
    "end": "1766600"
  },
  {
    "text": "rocket emojis there you go who",
    "start": "1766600",
    "end": "1771679"
  },
  {
    "text": "requests awesome nice yeah we have like a few more minutes and uh just to wrap up this",
    "start": "1771679",
    "end": "1778240"
  },
  {
    "text": "presentation as I showed you before we're going to do like a very complex example which means instead of only",
    "start": "1778240",
    "end": "1783279"
  },
  {
    "text": "running the applications we're going to actually run a kubernetes cluster so let me show you the code a little bit a little bit first so you can actually see",
    "start": "1783279",
    "end": "1788760"
  },
  {
    "text": "what I'm talking about so going back to the main repo we're going to go to the dagger module I told you that we have a",
    "start": "1788760",
    "end": "1794519"
  },
  {
    "text": "cube function which is defined here right Cube this Cube function makes use of uh",
    "start": "1794519",
    "end": "1802840"
  },
  {
    "text": "what we call a dagger module which is like a k3s module by the way small parenthesis",
    "start": "1802840",
    "end": "1808320"
  },
  {
    "text": "dagger has like a catalog of modules that you can find here on dagger vers of Dev and what the one that I'm",
    "start": "1808320",
    "end": "1813840"
  },
  {
    "text": "particularly using now is this one that that is featured um where you can see",
    "start": "1813840",
    "end": "1819360"
  },
  {
    "text": "this module basically gives you like different functions that you can you can run uh the one that is usually the most",
    "start": "1819360",
    "end": "1825039"
  },
  {
    "text": "common is like this one the server which basically starts uh like a K3 server and then you here you have an example on how",
    "start": "1825039",
    "end": "1830720"
  },
  {
    "text": "you can actually uh use this both in go Python and typescript so uh going back to the code",
    "start": "1830720",
    "end": "1836640"
  },
  {
    "text": "I'm going to say dagger call Cube and then this returns let's",
    "start": "1836640",
    "end": "1841880"
  },
  {
    "text": "see what this returns yeah I need to I need to be in the uh application repo so dagger call",
    "start": "1841880",
    "end": "1849799"
  },
  {
    "text": "Cube and let's see what this returns and this is going to take a bit because it needs to like do all the um",
    "start": "1849799",
    "end": "1856559"
  },
  {
    "text": "deployment and waiting as as you can see I have a service function so let's call that that Cube service",
    "start": "1856559",
    "end": "1862480"
  },
  {
    "text": "up and going back to the code while this runs a little bit uh you are going to",
    "start": "1862480",
    "end": "1867600"
  },
  {
    "text": "see that Cube here sorry wrong window uh Cube",
    "start": "1867600",
    "end": "1873279"
  },
  {
    "text": "here uh it's a it's a type right similarly to what I show you before with a producer and consumer that has a",
    "start": "1873279",
    "end": "1878720"
  },
  {
    "text": "service function right and in this case I'm basically starting k3s right I'm",
    "start": "1878720",
    "end": "1883880"
  },
  {
    "text": "starting the service here k3s then I call deploy which basically what deploy",
    "start": "1883880",
    "end": "1889639"
  },
  {
    "text": "does we can see actually the definition of this function what deploy does is basically creates an Alpine container",
    "start": "1889639",
    "end": "1895600"
  },
  {
    "text": "right and then uh installs all the qctl required tools and the Q config from the",
    "start": "1895600",
    "end": "1901039"
  },
  {
    "text": "K3 server that I just pawned and then it installs uh Ravid mq it installs uh",
    "start": "1901039",
    "end": "1907720"
  },
  {
    "text": "Dapper and then ultimately it applies the manifests of my applications that",
    "start": "1907720",
    "end": "1913760"
  },
  {
    "text": "live on this repository particularly on the k3s folder which are the Manifest of",
    "start": "1913760",
    "end": "1919399"
  },
  {
    "text": "my basically uh um rabid mq and consumer and producer applications so going back",
    "start": "1919399",
    "end": "1924840"
  },
  {
    "text": "to the terminal and to wrap it up as you can see everything is running now you're",
    "start": "1924840",
    "end": "1930440"
  },
  {
    "text": "you're probably thinking okay you're running cor here but how do I travel shoot it there's an amazing feature in",
    "start": "1930440",
    "end": "1935559"
  },
  {
    "text": "dagger where you can actually do dagger call Cube I need to go to this folder",
    "start": "1935559",
    "end": "1942480"
  },
  {
    "text": "dagger Co cube the cube uh module also the",
    "start": "1942480",
    "end": "1948080"
  },
  {
    "text": "function sorry also gave me the capability of run of running interactive applications so in this case I can say",
    "start": "1948080",
    "end": "1954039"
  },
  {
    "text": "K9 test terminal M and when this is going to do this is going to this is",
    "start": "1954039",
    "end": "1959440"
  },
  {
    "text": "going to run K9 T 9s sorry inside of dagger and then it's going to connect to",
    "start": "1959440",
    "end": "1965360"
  },
  {
    "text": "the cluster that I run uh in the in the upper Pane and as you can see all the pods are coming up right it's like rabit",
    "start": "1965360",
    "end": "1972080"
  },
  {
    "text": "and Q is already running Dapper and the producer is like reconcilia because he needed to wait for RAB and Q to be ready",
    "start": "1972080",
    "end": "1977919"
  },
  {
    "text": "so if we give it like 10 more seconds it should this should become happy so now",
    "start": "1977919",
    "end": "1983799"
  },
  {
    "text": "this is running now this is running and hopefully if the",
    "start": "1983799",
    "end": "1988919"
  },
  {
    "text": "demo gos are with us I can go to the browser and do local um Cube up 8080 One",
    "start": "1988919",
    "end": "1996120"
  },
  {
    "text": "Last Time ah almost wait I forgot a p I forgot a p Cube up 8080 ah there you go",
    "start": "1996120",
    "end": "2002120"
  },
  {
    "text": "and we have our application running in kubernetes with rmq with Dapper m",
    "start": "2002120",
    "end": "2007799"
  },
  {
    "text": "everything locally and I can run this the same way anywhere I can run it on CI I can run it on my local machine I can",
    "start": "2007799",
    "end": "2013279"
  },
  {
    "text": "run it on SDM somewhere in the cloud uh because zagger is currently giving giving us that experience so before we",
    "start": "2013279",
    "end": "2020080"
  },
  {
    "text": "wrap it up I guess that like something that I like to mention to this community is that I keep chasing Marcos and the dagger folks to build the functions for",
    "start": "2020080",
    "end": "2027600"
  },
  {
    "text": "CNC like not CN like Cloud native projects right like let's say we want to install K native I want to be able to install that as a function using an API",
    "start": "2027600",
    "end": "2034799"
  },
  {
    "text": "if I want to install open feature or crossplane I want that as a function to use there like so we can just consume",
    "start": "2034799",
    "end": "2040960"
  },
  {
    "text": "those instead of thinking about how to install these tools right y so I guess that the main take ways from this",
    "start": "2040960",
    "end": "2046240"
  },
  {
    "text": "presentation is environments will be different no matter the company that you work and they will come in different shape and forms you need to find a way",
    "start": "2046240",
    "end": "2052919"
  },
  {
    "text": "to actually manage them try to manage them in the same way and the way to do that is usually thinking about which",
    "start": "2052919",
    "end": "2059240"
  },
  {
    "text": "apis and interfaces and contracts you're going to Define to separate your application from your environments and",
    "start": "2059240",
    "end": "2064358"
  },
  {
    "text": "which APS are you going to use to build like these experiences y software factories basically exactly uh software",
    "start": "2064359",
    "end": "2070919"
  },
  {
    "text": "delivery pipelines are applications so whenever someone comes to you and tells you hey how does your cicd looks like",
    "start": "2070919",
    "end": "2077398"
  },
  {
    "text": "maybe you have a solution to tell them today is not a set of yam scripts it's actually applications right I have like proper types proper uh proper pipelines",
    "start": "2077399",
    "end": "2084398"
  },
  {
    "text": "and something that runs anywhere uh then adapt the tools to your needs right uh most of us are currently being hostage",
    "start": "2084399",
    "end": "2090480"
  },
  {
    "text": "of our CI provider because we need to encode our delivery pipeline in their language which is not ideal because",
    "start": "2090480",
    "end": "2095919"
  },
  {
    "text": "we're basically if we want to get get away then it's very difficult and painful and ultimately have fun and it's",
    "start": "2095919",
    "end": "2102040"
  },
  {
    "text": "okay to brag about your software Factory so hopefully next cucon you come and tell us hey I built like a super amazing software Factory using Dapper and Dagger",
    "start": "2102040",
    "end": "2108960"
  },
  {
    "text": "and I'm proud to actually show it out good stuff thank you very much thank you so",
    "start": "2108960",
    "end": "2114599"
  },
  {
    "text": "much one second there you go um both Dapper and Dagger has have booths at the",
    "start": "2115640",
    "end": "2121320"
  },
  {
    "text": "Showcase uh space so please if you have any questions or want want to chat about more about this we yeah yeah thank you",
    "start": "2121320",
    "end": "2128160"
  },
  {
    "text": "so much thanks",
    "start": "2128160",
    "end": "2131720"
  }
]