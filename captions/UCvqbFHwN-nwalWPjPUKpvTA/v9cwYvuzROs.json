[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "cool I guess we can get started yeah all right everybody thanks for coming to",
    "start": "560",
    "end": "5730"
  },
  {
    "text": "deep dive into virtual cubelet I'm Jeremy I work at Microsoft hi and a Jung",
    "start": "5730",
    "end": "11820"
  },
  {
    "text": "you can call me Hari and I work for Ali Baba Khalid so why are we here today we're gonna talk about what virtual",
    "start": "11820",
    "end": "18570"
  },
  {
    "start": "15000",
    "end": "40000"
  },
  {
    "text": "cubelet is and how you can use it how you can build a provider but before we",
    "start": "18570",
    "end": "23580"
  },
  {
    "text": "do that let's define what a cubelet is so a cubelet is an agent that runs on",
    "start": "23580",
    "end": "29580"
  },
  {
    "text": "every node in your cluster and it's responsible for watching the kubernetes api and figuring out what pods need to",
    "start": "29580",
    "end": "36270"
  },
  {
    "text": "run and make sure that that state happens the way it works is kind of like",
    "start": "36270",
    "end": "41430"
  },
  {
    "start": "40000",
    "end": "96000"
  },
  {
    "text": "this so you've got a cubelet running on some node and it says hey api server i'm",
    "start": "41430",
    "end": "47789"
  },
  {
    "text": "a node and then you as a user creates some sort of pods back through a",
    "start": "47789",
    "end": "53160"
  },
  {
    "text": "deployment or some other mechanism and the scheduler will say what nodes do I",
    "start": "53160",
    "end": "58170"
  },
  {
    "text": "have available where can I assign this thing and it's gonna assign it to a node so the pod spec will be updated and the",
    "start": "58170",
    "end": "64049"
  },
  {
    "text": "pod spec will say I am gonna go to node X or whatevs and then meantime and meanwhile the",
    "start": "64049",
    "end": "72049"
  },
  {
    "text": "cubelet is doing a watch specifically for speck that node name equals node",
    "start": "72049",
    "end": "77520"
  },
  {
    "text": "name and when it sees that it's gonna go ahead and reconcile the state to figure out is this a new pod do I want to",
    "start": "77520",
    "end": "83490"
  },
  {
    "text": "create it is a existing pod do I need to do some sort of update like change the image and once it does that it'll use",
    "start": "83490",
    "end": "90030"
  },
  {
    "text": "the container runtime interface to say create the container update again or delete the container whatever it needs to do so what is a virtual cubelet a",
    "start": "90030",
    "end": "98810"
  },
  {
    "start": "96000",
    "end": "120000"
  },
  {
    "text": "virtual cubelet is a you can think of it as a controller that acts as a virtual",
    "start": "98810",
    "end": "104130"
  },
  {
    "text": "node there is no physical node backing it but it appears as a node to",
    "start": "104130",
    "end": "109200"
  },
  {
    "text": "kubernetes it'll have all the things associated with that like resources that are available memory CPU and you can use",
    "start": "109200",
    "end": "116670"
  },
  {
    "text": "it to schedule mods so when should you",
    "start": "116670",
    "end": "121890"
  },
  {
    "start": "120000",
    "end": "160000"
  },
  {
    "text": "use it if you're going to be using something that looks traditionally like a node it's probably not the best case because it doesn't have all of the",
    "start": "121890",
    "end": "127380"
  },
  {
    "text": "capabilities that a regular cube would but if you're gonna do anything else it can be an attractive use case",
    "start": "127380",
    "end": "133590"
  },
  {
    "text": "so something like bursting into a cloud or container as a service provider like as your container instances or AWS",
    "start": "133590",
    "end": "139170"
  },
  {
    "text": "Fargate bridge into other orchestrators like maybe you want to schedule some containers on nomads there's a provider",
    "start": "139170",
    "end": "145739"
  },
  {
    "text": "to do that if you want to schedule to Internet of Things control planes that's another use case we've seen and then at",
    "start": "145739",
    "end": "152220"
  },
  {
    "text": "a workshop last year somebody built a provider that ordered pizza with the Domino's API when when pods were created",
    "start": "152220",
    "end": "158190"
  },
  {
    "text": "it was pretty funny so how does it work obviously it's magic but it's not",
    "start": "158190",
    "end": "166080"
  },
  {
    "start": "160000",
    "end": "168000"
  },
  {
    "text": "actually magic it's really the same thing that we just saw so virtual cubelet starts up has a daemon process",
    "start": "166080",
    "end": "172620"
  },
  {
    "start": "168000",
    "end": "215000"
  },
  {
    "text": "and it says hey Cooper and his API I'm a node and Cobra doesn't know that it's not a node it just knows that somebody",
    "start": "172620",
    "end": "178470"
  },
  {
    "text": "said hey I'm a node and then you create a pod spec the scheduler says this pods",
    "start": "178470",
    "end": "184530"
  },
  {
    "text": "been or this pod should go on this node which is going to be virtual cubelet so",
    "start": "184530",
    "end": "191819"
  },
  {
    "text": "then virtual couplets doing the same thing that the cubelet is it's watching the API for any pods that are scheduled",
    "start": "191819",
    "end": "197160"
  },
  {
    "text": "to it just like any node would and then it reconciles state just like a cubelet would but then instead of talking to the",
    "start": "197160",
    "end": "204299"
  },
  {
    "text": "container runtime it's really talking to something called a provider and the provider is responsible for doing that",
    "start": "204299",
    "end": "209310"
  },
  {
    "text": "bridge between what the pod is and where it needs to end up some external service",
    "start": "209310",
    "end": "215510"
  },
  {
    "start": "215000",
    "end": "241000"
  },
  {
    "text": "this is what the anatomy of VK really looks like there are really three parts one of them is the daemon part at the",
    "start": "215510",
    "end": "222690"
  },
  {
    "text": "top then there's a framework and the framework has all of the stuff that's really reusable it's going to have the reconciliation of state it's going to",
    "start": "222690",
    "end": "229530"
  },
  {
    "text": "have a definition of an API and that providers have to implement and then providers implement the actual calls",
    "start": "229530",
    "end": "235350"
  },
  {
    "text": "back to those cloud providers or whatever they're going to schedule to",
    "start": "235350",
    "end": "241010"
  },
  {
    "start": "241000",
    "end": "267000"
  },
  {
    "text": "the framework works from a shared Informer a the state reconciliation the",
    "start": "241160",
    "end": "246810"
  },
  {
    "text": "cubelet has a couple of HTTP endpoints that you're gonna like exec into a container or try to get log those go through an HTTP endpoint like if you do",
    "start": "246810",
    "end": "252750"
  },
  {
    "text": "a cube CTL exec so the original cubelet exposes that and figures out how to invoke the provider and the provider is",
    "start": "252750",
    "end": "259289"
  },
  {
    "text": "responsible for translating that back down it does things like tracing a logging so you can get good information about what's happened",
    "start": "259289",
    "end": "266930"
  },
  {
    "start": "267000",
    "end": "302000"
  },
  {
    "text": "so what's a provider the provider is that mapping from the actual you know",
    "start": "267100",
    "end": "273890"
  },
  {
    "text": "you said you want a pod to it running somewhere in a cloud provider like KCI",
    "start": "273890",
    "end": "279550"
  },
  {
    "text": "it doesn't have direct access to the kubernetes api so it's really gonna leverage virtual cubelet to get things",
    "start": "279550",
    "end": "286310"
  },
  {
    "text": "like secrets of config maps and it's gonna leverage VK the framework to handle all the state reconciliation all",
    "start": "286310",
    "end": "293420"
  },
  {
    "text": "the things that are necessary it just follows an interface and makes whatever that interface asked for happen so",
    "start": "293420",
    "end": "302810"
  },
  {
    "start": "302000",
    "end": "324000"
  },
  {
    "text": "here's some current providers that we have there's quite a few of them Alibaba uses it pretty extensively Asscher uses",
    "start": "302810",
    "end": "309320"
  },
  {
    "text": "it for a CI which is our container as a service tool we use it for providing",
    "start": "309320",
    "end": "316310"
  },
  {
    "text": "virtual nodes inside of aks you can see a whole bunch of other ones like AWS and",
    "start": "316310",
    "end": "321620"
  },
  {
    "text": "hash your carpet Nomad I'll turn it over to Harry to talk about how they use",
    "start": "321620",
    "end": "327290"
  },
  {
    "start": "324000",
    "end": "451000"
  },
  {
    "text": "virtual key would yeah thank you so I want reduce to very interesting user",
    "start": "327290",
    "end": "332390"
  },
  {
    "text": "case of how Alibaba is even virtual kool-aid so the first user case as you can show here is just like what",
    "start": "332390",
    "end": "338960"
  },
  {
    "text": "Microsoft or Fargate is doing and actually we are using word to collate to build over one of the most important",
    "start": "338960",
    "end": "345230"
  },
  {
    "text": "product which name is third is kubernetes so whenever you are you need servers kubernetes on Alibaba cloud we",
    "start": "345230",
    "end": "351500"
  },
  {
    "text": "actually create a control panel for you but there's no nodes as there are notes and whenever you want to have a nose for",
    "start": "351500",
    "end": "358010"
  },
  {
    "text": "example you tear apart the underserviced kubernetes will be triggered to create a virtual node for you the mercial node is",
    "start": "358010",
    "end": "364370"
  },
  {
    "text": "actually provided by a project which name is widely a waiking project is actually a wrapper of virtual kool-aid",
    "start": "364370",
    "end": "371150"
  },
  {
    "text": "but in order to handle more complicated user cases for example the coop epoxied",
    "start": "371150",
    "end": "376460"
  },
  {
    "text": "to be honest and to support an ingress they use Viking to handle restore things besides what it were to cooperate doing",
    "start": "376460",
    "end": "382790"
  },
  {
    "text": "today so in order to make it happen so the server's kubernetes is basically",
    "start": "382790",
    "end": "388670"
  },
  {
    "text": "will give you the infinite result pool and this resource pool is actually provided by the elastic container Intel",
    "start": "388670",
    "end": "394580"
  },
  {
    "text": "instance service including Alibaba cloud which is basically like market or SDI from Microsoft and the an",
    "start": "394580",
    "end": "402680"
  },
  {
    "text": "indicia instance is actually actually works machine but this virtual machine is not either fast and in this virtual",
    "start": "402680",
    "end": "408319"
  },
  {
    "text": "machine first of all we have content Iran inside and then we have a waiking engine to handle the request from or",
    "start": "408319",
    "end": "414080"
  },
  {
    "text": "chocolate and to help and to withstand request through the monetary service load balancer or DNS service in Alibaba",
    "start": "414080",
    "end": "420560"
  },
  {
    "text": "cloud so you can see here who are using our universe crew blade and we have the Viking engine to handle rest of the",
    "start": "420560",
    "end": "425840"
  },
  {
    "text": "request design your pod will be delivered to this ECI instance and that",
    "start": "425840",
    "end": "431509"
  },
  {
    "text": "is how we create a service kubernetes for every user of Alibaba cloud and these user do not care about which",
    "start": "431509",
    "end": "437599"
  },
  {
    "text": "machines or hosts I do not need to care about their resource resource boundary because they're logically they have unlimited",
    "start": "437599",
    "end": "444830"
  },
  {
    "text": "resource poor here so that is how big we are doing the work the service kubernetes stuff a second example is how",
    "start": "444830",
    "end": "453919"
  },
  {
    "start": "451000",
    "end": "622000"
  },
  {
    "text": "we we are using work to cooperate inside Alibaba so a little bit very interesting because first of all it's offering public house public cloud product just",
    "start": "453919",
    "end": "461810"
  },
  {
    "text": "like I said before and also we are supporting the whole Alibaba ecommerce platform things that Alibaba so in order",
    "start": "461810",
    "end": "468620"
  },
  {
    "text": "to do that we are actually using a very interesting architecture here because we are using a multi-tenant",
    "start": "468620",
    "end": "474020"
  },
  {
    "text": "kubernetes cluster but in this kubernetes cluster which is shared by",
    "start": "474020",
    "end": "479180"
  },
  {
    "text": "all the tenants from Alibaba will actually create a so-called virtual cluster for every tenant that that means",
    "start": "479180",
    "end": "484729"
  },
  {
    "text": "every tenant will have a dedicated control plan that we have their own cookie API server they have their own",
    "start": "484729",
    "end": "491689"
  },
  {
    "text": "Kuby control manager but as you can see here for this work a cluster how the",
    "start": "491689",
    "end": "497210"
  },
  {
    "text": "healthier they have their nose come from actually these nodes come from two different approaches the first approach",
    "start": "497210",
    "end": "503389"
  },
  {
    "text": "way is from the real cluster on the lighting cluster and actually from tenant of view the only server so not",
    "start": "503389",
    "end": "510259"
  },
  {
    "text": "they do not know about VAR d its version of come from because virtual node is basically a API object which is credit",
    "start": "510259",
    "end": "516768"
  },
  {
    "text": "by version of the ancient or the word recuperate so what's the difference the difference it is like this whenever the",
    "start": "516769",
    "end": "524360"
  },
  {
    "text": "10 in the credit pod it will actually be delivered to the real kubernetes cluster and this real corporate cluster is",
    "start": "524360",
    "end": "531070"
  },
  {
    "text": "running on top of the bare metal machines so this is a most common case in a vapor cloud in Alabama in inside",
    "start": "531070",
    "end": "536710"
  },
  {
    "text": "alibaba Club but also we have some very interest in either cases for example for",
    "start": "536710",
    "end": "542230"
  },
  {
    "text": "the Alibaba double 11 we don't we don't need to handle like 500 thousands",
    "start": "542230",
    "end": "547330"
  },
  {
    "text": "transactions per second during the midnight of W level that is an November 11th of every year so then we need to",
    "start": "547330",
    "end": "554470"
  },
  {
    "text": "borrow resources from the from the from this firm from other teams cluster we",
    "start": "554470",
    "end": "559780"
  },
  {
    "text": "need to pour resources and how we connect to the other teams cluster then we will use a virtual cluster for example in that case we will use worship",
    "start": "559780",
    "end": "566710"
  },
  {
    "text": "cluster to borrow resource from for example the ECI service which is not the",
    "start": "566710",
    "end": "571750"
  },
  {
    "text": "resource pool we have but we can borrow resource from them and also we can even use virtual couplet to borrow resource",
    "start": "571750",
    "end": "576880"
  },
  {
    "text": "from other teams we who have who also have kubernetes runny inside Alibaba club so we can pour resources from",
    "start": "576880",
    "end": "583630"
  },
  {
    "text": "different teams by using word recruitment so this is the lesson we learn of how we use or chocolate inside Alibaba so first of all what recuperated",
    "start": "583630",
    "end": "591520"
  },
  {
    "text": "very interesting project which can help you which can make you to borrow resource from unlimited resource pool",
    "start": "591520",
    "end": "597190"
  },
  {
    "text": "that is how we handle some bursts of the requested requests during like table xi",
    "start": "597190",
    "end": "603220"
  },
  {
    "text": "events or other like sales events in Alibaba cloud and also what recuperate is also a very interesting protocol you",
    "start": "603220",
    "end": "610000"
  },
  {
    "text": "to implement a virtual cluster based multi-tenancy here Montanans model here so this is actually",
    "start": "610000",
    "end": "615850"
  },
  {
    "text": "what we are using with russia club with what you're creating is an alabama club cool thank you that's really interesting",
    "start": "615850",
    "end": "621780"
  },
  {
    "text": "so let's take a look at what it would look like if you want to build a provider so I'm gonna switch over to visual studio code and we'll walk",
    "start": "621780",
    "end": "628180"
  },
  {
    "text": "through some code right now actually let",
    "start": "628180",
    "end": "634600"
  },
  {
    "text": "me go to the browser and we will look at the repo real",
    "start": "634600",
    "end": "640920"
  },
  {
    "text": "half a million tabs open so you can find virtual cubelet at github comm slash",
    "start": "646430",
    "end": "654360"
  },
  {
    "text": "virtual cubelet yeah I'm gonna share it once again",
    "start": "654360",
    "end": "661430"
  },
  {
    "text": "[Music] display settings here we go",
    "start": "665600",
    "end": "670930"
  },
  {
    "text": "mirror okay so let's go back to this",
    "start": "670930",
    "end": "681470"
  },
  {
    "text": "window now okay so there's virtual couplet you can find it at virtual cubelet slash virtual",
    "start": "681470",
    "end": "687470"
  },
  {
    "start": "683000",
    "end": "1031000"
  },
  {
    "text": "cubelet and inside of here you'll find a bunch of code right now that does a few things you can find in the CMD virtual",
    "start": "687470",
    "end": "695089"
  },
  {
    "text": "cubelet folder this is where the daemon is defined so you can go in there and that's really the entry point so when you're going to run DK you're gonna run",
    "start": "695089",
    "end": "700910"
  },
  {
    "text": "that process and you can use that as a way to kind of dig around to the where the rest of the code is located inside",
    "start": "700910",
    "end": "707210"
  },
  {
    "text": "of the providers folder you can find implementations of all the current providers so we can see there's Alibaba",
    "start": "707210",
    "end": "712490"
  },
  {
    "text": "cloud AWS a couple of different azure ones highway Nomad OpenStack and we have",
    "start": "712490",
    "end": "718880"
  },
  {
    "text": "a REST API for scheduling things these are gonna actually move out of the tree",
    "start": "718880",
    "end": "724550"
  },
  {
    "text": "soon we're trying to work right now towards doing a 1.0 release this week and it's part of that one natto released",
    "start": "724550",
    "end": "730339"
  },
  {
    "text": "we want to make things a little bit more maintainable so we've been trying to harmonize and figure out what the exact API for the provider should look like",
    "start": "730339",
    "end": "736100"
  },
  {
    "text": "and we've gone through and you can see like there was a commit that touched almost everything in here where we actually updated this to what we think",
    "start": "736100",
    "end": "744020"
  },
  {
    "text": "the one dot a P I is gonna look like and then in the V cubelet directory this is",
    "start": "744020",
    "end": "753080"
  },
  {
    "text": "where the magic actually lives so there's some things in here like pod control or no-go and these are these",
    "start": "753080",
    "end": "759110"
  },
  {
    "text": "files are gonna define all the logic that's necessary for like faking out a node and reconciling the state inside of",
    "start": "759110",
    "end": "764990"
  },
  {
    "text": "the pod controller defining interfaces things like that okay so let me jump back to the real studio code now and",
    "start": "764990",
    "end": "770720"
  },
  {
    "text": "we'll actually look through that stuff in an IDE is a little bit better so the",
    "start": "770720",
    "end": "777170"
  },
  {
    "text": "most important thing in here oops is V",
    "start": "777170",
    "end": "784190"
  },
  {
    "text": "cubelet so right now the server piece acts as the main lifecycle for VK inside",
    "start": "784190",
    "end": "791990"
  },
  {
    "text": "of that you can see a couple of things there's a Kate's client and that's how it's gonna actually talk to the kubernetes api",
    "start": "791990",
    "end": "797320"
  },
  {
    "text": "using client go you can see things like provider resource manager and those are things that are gonna be what's actually",
    "start": "797320",
    "end": "804160"
  },
  {
    "text": "talking to the provider and figuring out how to schedule those things then if you scroll down a little more",
    "start": "804160",
    "end": "810100"
  },
  {
    "text": "I just information on how to construct that thing in pod controller the really",
    "start": "810100",
    "end": "815410"
  },
  {
    "text": "important piece of how you would implement your own provider 4vk starts with the pod lifecycle handler inside of",
    "start": "815410",
    "end": "821830"
  },
  {
    "text": "that these are the methods that are actually necessary for implementing a provider so create pod update pod delete",
    "start": "821830",
    "end": "828430"
  },
  {
    "text": "pod get pod and so on and thereafter they're actually operating at the pod level so not individual containers it's",
    "start": "828430",
    "end": "836080"
  },
  {
    "text": "gonna take the pod spec and pass that to the provider and the provider is really responsible for figuring out how to take",
    "start": "836080",
    "end": "841360"
  },
  {
    "text": "that pod spec and turn it into the necessary calls that go along with that and then inside of API you can find",
    "start": "841360",
    "end": "848890"
  },
  {
    "text": "server go and server go is where the HTTP handlers are defined right now so",
    "start": "848890",
    "end": "854280"
  },
  {
    "text": "for example slash exact name space pod container that I'll end up calling back",
    "start": "854280",
    "end": "859810"
  },
  {
    "text": "to a handler function those things are defined right here and that's what",
    "start": "859810",
    "end": "865360"
  },
  {
    "text": "you're going to implement inside of your provider so as an example we'll look at the ACI provider to show you what this",
    "start": "865360",
    "end": "871030"
  },
  {
    "text": "might look like right here so inside of",
    "start": "871030",
    "end": "879850"
  },
  {
    "text": "here you can see there's a whole bunch of methods that have collapsed because they're not super interesting for this case but let's look at the create pod",
    "start": "879850",
    "end": "886270"
  },
  {
    "text": "method just right here so on that method",
    "start": "886270",
    "end": "891520"
  },
  {
    "text": "let's hide this window so you can see in here is that we get the pod spec itself",
    "start": "891520",
    "end": "897220"
  },
  {
    "text": "and this is just a kubernetes pod definition just the normal object you",
    "start": "897220",
    "end": "902410"
  },
  {
    "text": "get from the API server like that and we start to iterate through it so we get a",
    "start": "902410",
    "end": "907420"
  },
  {
    "text": "list of all the containers that are in that pod we figure out what image pool secrets are necessary for those",
    "start": "907420",
    "end": "912460"
  },
  {
    "text": "containers we get volumes that are attached with those from the provider itself and we start to build things up",
    "start": "912460",
    "end": "918850"
  },
  {
    "text": "the way you would schedule something in a CI is really analogous to a pot so we have something called the container",
    "start": "918850",
    "end": "924550"
  },
  {
    "text": "group and in that container group you defined one two and containers so really what we're gonna do here is turn that call in or",
    "start": "924550",
    "end": "931449"
  },
  {
    "text": "that pods back into a call to create a container group and a CI we're gonna populate all the things that are",
    "start": "931449",
    "end": "937000"
  },
  {
    "text": "necessary to make that happen and then with you know we keep going down here",
    "start": "937000",
    "end": "942490"
  },
  {
    "text": "and eventually we are going to call the",
    "start": "942490",
    "end": "947949"
  },
  {
    "text": "ACI clan so we've gone through and we've translated all of that pots back into the necessary implementation of asher",
    "start": "947949",
    "end": "955089"
  },
  {
    "text": "and then we call the client and the client actually makes that happen for us then we update status and we move on so",
    "start": "955089",
    "end": "962319"
  },
  {
    "text": "later on if we want to update something update so back in the pod controller",
    "start": "962319",
    "end": "974459"
  },
  {
    "text": "this is where the reconciliation is happening oh this is gonna get invoked and once it determines that something",
    "start": "974459",
    "end": "980949"
  },
  {
    "text": "needs to be deleted or created or updated it's going to invoke those necessary methods back in the provider so in this case we're making a pod we're",
    "start": "980949",
    "end": "988300"
  },
  {
    "text": "going to invoke that create create pod method you know it's gonna come through this logic and right here it'll say",
    "start": "988300",
    "end": "995199"
  },
  {
    "text": "server create or update pod and that's what's gonna turn into the call back to the provider and invoke this method",
    "start": "995199",
    "end": "1003779"
  },
  {
    "text": "eventually and you can see in here there's examples of how to do the same thing for deleting and getting pods all",
    "start": "1003779",
    "end": "1011250"
  },
  {
    "text": "the lifecycle operations you have to do to implement that provider yourself all",
    "start": "1011250",
    "end": "1018990"
  },
  {
    "text": "right back to the slideshow",
    "start": "1018990",
    "end": "1026650"
  },
  {
    "text": "so super exciting virtual cubelet it's gonna hit 100 this week and what that means is that the API is pretty much",
    "start": "1030839",
    "end": "1037420"
  },
  {
    "text": "stable some things we're gonna do going forward are again break out those providers so they're not living in the tree and it's a little bit easier to",
    "start": "1037420",
    "end": "1043870"
  },
  {
    "text": "maintain the the virtual cubelet daemon for a specific cloud provider a lot of the configuration and stuff right now is",
    "start": "1043870",
    "end": "1049870"
  },
  {
    "text": "kind of split amongst all of those things so it makes the helm chart slightly hard to maintain a little",
    "start": "1049870",
    "end": "1055900"
  },
  {
    "text": "complicated so we're moving towards stability and having a little bit better maintainability of everything I showed",
    "start": "1055900",
    "end": "1063550"
  },
  {
    "text": "you the github repo earlier so here's a link to it again if you're interested if you have questions you want to ask about",
    "start": "1063550",
    "end": "1069370"
  },
  {
    "text": "VK you can find us on the kubernetes slack in the virtual culet channel we also have community meetings every other",
    "start": "1069370",
    "end": "1076270"
  },
  {
    "text": "week on Tuesdays at 11:00 that happens on slack our on zoom' if we go to the",
    "start": "1076270",
    "end": "1082830"
  },
  {
    "text": "website you can find that page you can",
    "start": "1082830",
    "end": "1088480"
  },
  {
    "text": "find recordings of previous ones as well continue so right here Oh am i show you",
    "start": "1088480",
    "end": "1101950"
  },
  {
    "text": "oh sorry switch back",
    "start": "1101950",
    "end": "1107700"
  },
  {
    "text": "so you find information like how to contribute and who the maintainer czar currently for each of the providers if",
    "start": "1117980",
    "end": "1124700"
  },
  {
    "text": "you have issues what our lifecycle looks like for accepting patches all that good information you'll be able to find",
    "start": "1124700",
    "end": "1129889"
  },
  {
    "text": "inside of here we obviously followed the CN CF code of conduct and come back here",
    "start": "1129889",
    "end": "1136929"
  },
  {
    "text": "again so we have community meetings every other week on Tuesdays at 11:00 Pacific time and CN CF has accepted",
    "start": "1147220",
    "end": "1154789"
  },
  {
    "text": "virtual cubelet as a sandbox project that happened right before coop con last year so that's why we're here today to",
    "start": "1154789",
    "end": "1159830"
  },
  {
    "text": "talk to you about it and we built a bunch of time and asked to answer questions so I'll move on to that now",
    "start": "1159830",
    "end": "1165320"
  },
  {
    "text": "and if we don't have questions I'll show you some more code so open up to questions now anybody have questions go",
    "start": "1165320",
    "end": "1173210"
  },
  {
    "text": "for it repeat the question Torrey to or you can use mic I get that it kind of",
    "start": "1173210",
    "end": "1181580"
  },
  {
    "text": "looks feels and smells a bit like a node mhm but when I deploy nodes at the",
    "start": "1181580",
    "end": "1187279"
  },
  {
    "text": "moment I have to think about things like availability and spreading them across fault domains have to think about things",
    "start": "1187279",
    "end": "1194090"
  },
  {
    "text": "like performance and virtual cubelet",
    "start": "1194090",
    "end": "1199730"
  },
  {
    "text": "deal with things like that or is that something that will come on so particulate itself won't deal with that",
    "start": "1199730",
    "end": "1204889"
  },
  {
    "text": "virtual cubelets providing the interface for you to connect to some other thing",
    "start": "1204889",
    "end": "1210529"
  },
  {
    "text": "they will handle that for you so in the case of like a CI you you're gonna know when you configure virtual couplets use",
    "start": "1210529",
    "end": "1217100"
  },
  {
    "text": "a CI what regional like what Billy's own will be in same things for Fargate so if",
    "start": "1217100",
    "end": "1222260"
  },
  {
    "text": "you want to handle like a cross fault zone so you can scan create multiple VK instances it would be in multiple",
    "start": "1222260",
    "end": "1227750"
  },
  {
    "text": "availability zones you can handle that by just assuming that you know this it's",
    "start": "1227750",
    "end": "1233000"
  },
  {
    "text": "a cloud provider service and there'll be some level of guaranteed SLA okay inside",
    "start": "1233000",
    "end": "1239179"
  },
  {
    "text": "of it assuming that I just say let's balance across to fault domains so that",
    "start": "1239179",
    "end": "1245990"
  },
  {
    "text": "would just literally be two virtual cubelets one point to each I don't have to think I need",
    "start": "1245990",
    "end": "1251610"
  },
  {
    "text": "five virtual cubelets in this fault domain for a really simple use case no yeah it's gonna depend it will depend on",
    "start": "1251610",
    "end": "1258690"
  },
  {
    "text": "the backing provider right so if you are having a provider that's maybe spinning up virtual machines and then scheduling",
    "start": "1258690",
    "end": "1265500"
  },
  {
    "text": "containers on the virtual machines you have to worry about where those virtual machines end up but if it's something",
    "start": "1265500",
    "end": "1270900"
  },
  {
    "text": "like VMware's are sorry as you're a sea I know it's gonna have kind of like an",
    "start": "1270900",
    "end": "1277650"
  },
  {
    "text": "endless whatever your subscription accounts for supply of stuff right so",
    "start": "1277650",
    "end": "1282930"
  },
  {
    "text": "that one you don't necessarily need to think about how much capacity I have because it's not going to be tied to the",
    "start": "1282930",
    "end": "1288660"
  },
  {
    "text": "number of virtual cubelets it's going to be tied to whatever the backing providers sorts of services well you",
    "start": "1288660",
    "end": "1299280"
  },
  {
    "text": "could ask the question and I'll just repeat it so we go to the Mike's way not to run back and forth",
    "start": "1299280",
    "end": "1304130"
  },
  {
    "text": "yeah you can we we have a couple of demos where we have used things like",
    "start": "1318510",
    "end": "1324580"
  },
  {
    "text": "admission controllers and an HPA to do that kind of Burstein scenario where we some one of the things that I didn't",
    "start": "1324580",
    "end": "1331750"
  },
  {
    "text": "mention is that virtual cubelet taints itself as a node so to actually schedule things by default you have to apply that",
    "start": "1331750",
    "end": "1338320"
  },
  {
    "text": "toleration so that don't get scheduled there so you can use you know through",
    "start": "1338320",
    "end": "1345309"
  },
  {
    "text": "that you can make it kind of go that way the HPA will scale because it's just",
    "start": "1345309",
    "end": "1351130"
  },
  {
    "text": "gonna create new pods right like when the HPA decides that it needs to make another replica that's going to just create a new pod and BK will just pick",
    "start": "1351130",
    "end": "1357909"
  },
  {
    "text": "that up assuming that it has the Toleration applied to it the answer",
    "start": "1357909",
    "end": "1363520"
  },
  {
    "text": "question",
    "start": "1363520",
    "end": "1365820"
  },
  {
    "text": "yeah so it would allow them there's not a way to really you can't really force the scheduler to say like only go here",
    "start": "1383540",
    "end": "1390210"
  },
  {
    "text": "you can say tolerate that node so it can get scheduled there I guess it really",
    "start": "1390210",
    "end": "1398550"
  },
  {
    "text": "depends on what the scheduler defines our sizes available so I guess the",
    "start": "1398550",
    "end": "1405180"
  },
  {
    "text": "answer to question is no you can't just say you only go to VK you can do like static pods or anything where it's just gonna end up on a single node but that",
    "start": "1405180",
    "end": "1414810"
  },
  {
    "text": "is the use case we see people like using it for on like a hybrid call situation where it's on Prime and when they run out of capacity burst into the provider",
    "start": "1414810",
    "end": "1423260"
  },
  {
    "text": "yeah yeah it was a very large number so",
    "start": "1423260",
    "end": "1440490"
  },
  {
    "text": "like 4 terabytes so the only above a cloud we definitely have vertical to report the whole resource capacity of",
    "start": "1440490",
    "end": "1447750"
  },
  {
    "text": "this cluster it's very huge yeah yeah so it could be the provider is really good",
    "start": "1447750",
    "end": "1454170"
  },
  {
    "text": "to report that back so in your provider you could basically report an infinite number you could report it back out",
    "start": "1454170",
    "end": "1460290"
  },
  {
    "text": "realistic number to whatever the real capacity is to take advantage of the scheduler when you are using something",
    "start": "1460290",
    "end": "1465840"
  },
  {
    "text": "like a CI or what alibaba's doing when it appears that's an infinite no things will just keep going to that that node",
    "start": "1465840",
    "end": "1473010"
  },
  {
    "text": "over and over again",
    "start": "1473010",
    "end": "1475760"
  },
  {
    "text": "so the question was does are there any limitations when using virtual cubelet",
    "start": "1493940",
    "end": "1499320"
  },
  {
    "text": "versus a regular note is that summary yeah so there are virtual people it doesn't conform to a regular node there",
    "start": "1499320",
    "end": "1506400"
  },
  {
    "text": "are things that will never really be true about something that's not over physical node like having attached",
    "start": "1506400",
    "end": "1511770"
  },
  {
    "text": "storage necessarily welcome map to every use case VK itself doesn't try to impose",
    "start": "1511770",
    "end": "1516840"
  },
  {
    "text": "any of those things they're gonna end up being limitations of the provider so things like resource constraints you",
    "start": "1516840",
    "end": "1522240"
  },
  {
    "text": "know it's not gonna really decide some of that is the scheduler just ayane like well this can only get so much but those",
    "start": "1522240",
    "end": "1528840"
  },
  {
    "text": "things will be passed down to the whatever the provider does so in the case of a CI we do honor constraints",
    "start": "1528840",
    "end": "1536700"
  },
  {
    "text": "like if you only want to run like a one gigabyte of RAM in a container yeah",
    "start": "1536700",
    "end": "1545550"
  },
  {
    "start": "1543000",
    "end": "1780000"
  },
  {
    "text": "so the go back to the code real quick let's jump out of here so in your create",
    "start": "1545550",
    "end": "1553800"
  },
  {
    "text": "pod so this is getting the entire pot object so like when VK says I need to go create",
    "start": "1553800",
    "end": "1560550"
  },
  {
    "text": "that pod it's gonna pass the whole thing down and inside of here you know we're looking at things like what is the",
    "start": "1560550",
    "end": "1567000"
  },
  {
    "text": "operating system type what's the restart policy containers let's go to that so",
    "start": "1567000",
    "end": "1575880"
  },
  {
    "text": "inside of here what ports are defined it's gonna get the entire spec and figure out what it can do with that spec as its operating go let's go back in the",
    "start": "1575880",
    "end": "1585300"
  },
  {
    "text": "blue shirt first",
    "start": "1585300",
    "end": "1587750"
  },
  {
    "text": "we haven't really built so the question was is there just is there a provider",
    "start": "1604950",
    "end": "1610560"
  },
  {
    "text": "right now that'll do like kubernetes and kubernetes so we don't have that right now you could build something like that",
    "start": "1610560",
    "end": "1616020"
  },
  {
    "text": "we've been mostly focused on providing different kind of use cases then that you know connecting to external",
    "start": "1616020",
    "end": "1621660"
  },
  {
    "text": "resources doing that kind of bridge where there's not that traditional like there's no cubelet of a lor you try to",
    "start": "1621660",
    "end": "1628650"
  },
  {
    "text": "bridge to another scheduler type but it totally be possible to do that you could build the provider to do almost anything",
    "start": "1628650",
    "end": "1635930"
  },
  {
    "text": "as long as it's conforming to that that air phase okay green shirt",
    "start": "1635930",
    "end": "1643370"
  },
  {
    "text": "do we really do we support daemon sets right now yeah so there's some limitations right now with you can",
    "start": "1650760",
    "end": "1657360"
  },
  {
    "text": "daemon sets is one of those things where it doesn't automatically pick up and schedule because there's not really the",
    "start": "1657360",
    "end": "1662640"
  },
  {
    "text": "concept of the providers don't have I mean they're faking a notes for they're not really a node so some things like",
    "start": "1662640",
    "end": "1669840"
  },
  {
    "text": "Damon's headstone don't get implemented yet may or may not get implemented in the future but in general it's gonna",
    "start": "1669840",
    "end": "1680490"
  },
  {
    "text": "handle things as a node would send answer your question yeah the log",
    "start": "1680490",
    "end": "1687810"
  },
  {
    "text": "collection so when you are gonna so there's two two forms of logging there's the logging 4vk itself that's available",
    "start": "1687810",
    "end": "1693990"
  },
  {
    "text": "and then inside of the interface here for the back down to server one of the",
    "start": "1693990",
    "end": "1702300"
  },
  {
    "text": "things you do to get logs that comes in through the HTTP endpoint that the cubelet has so that's handled here as",
    "start": "1702300",
    "end": "1708750"
  },
  {
    "text": "well and then the providers are responsible for fetching that and streaming it back to VK for VK to report",
    "start": "1708750",
    "end": "1714780"
  },
  {
    "text": "back to you get back there in the back",
    "start": "1714780",
    "end": "1720680"
  },
  {
    "text": "can I mention a virtual cubelet for Windows I can so question was can I imagine a virtual cube for Windows and I",
    "start": "1723590",
    "end": "1729990"
  },
  {
    "text": "don't really have to imagine that because we can do that with with a CI and with sort of service metric so there",
    "start": "1729990",
    "end": "1738360"
  },
  {
    "text": "you could write a provider to schedule anywhere right so if you have a service that can run Windows containers like",
    "start": "1738360",
    "end": "1744510"
  },
  {
    "text": "service abric you can make a provider for that and we have some use cases where we are some some demos in software",
    "start": "1744510",
    "end": "1751560"
  },
  {
    "text": "we've seen Windows containers running alongside Linux there's say again",
    "start": "1751560",
    "end": "1757260"
  },
  {
    "text": "yet someone has tried that yeah so the",
    "start": "1757260",
    "end": "1766350"
  },
  {
    "text": "question was has some they actually tried that and the answer is yes we actually see at Microsoft we see a lot of actually windows container usage",
    "start": "1766350",
    "end": "1773910"
  },
  {
    "text": "for kubernetes via virtual cupola and some of our backing services it is",
    "start": "1773910",
    "end": "1783179"
  },
  {
    "start": "1780000",
    "end": "2072000"
  },
  {
    "text": "obviously there's some limitations so like with virtual nodes for aks can't do Windows nodes right now because it",
    "start": "1783179",
    "end": "1789090"
  },
  {
    "text": "doesn't support V Mets correctly for virtual nodes and I guess you have to have V Nets to have the ability to talk",
    "start": "1789090",
    "end": "1794730"
  },
  {
    "text": "back and forth between pods go again are",
    "start": "1794730",
    "end": "1802320"
  },
  {
    "text": "there any complications so question was are there any complications with GPU support and it's gonna come down to the provider so you can use like a CIO for",
    "start": "1802320",
    "end": "1811799"
  },
  {
    "text": "example has GPU support you could schedule things - assuming the node reported back that it supported that",
    "start": "1811799",
    "end": "1818130"
  },
  {
    "text": "capability",
    "start": "1818130",
    "end": "1820490"
  },
  {
    "text": "can you replace all of the a kiss nose of original notes not yet I saw somebody",
    "start": "1824299",
    "end": "1829759"
  },
  {
    "text": "on Twitter tweeted that they used so they were they were trying to run",
    "start": "1829759",
    "end": "1835099"
  },
  {
    "text": "virtual cubelet as a container in ACI on a vita cluster that had a V net and then",
    "start": "1835099",
    "end": "1842330"
  },
  {
    "text": "they scaled down the node like it was a one node cluster and they scaled it down and it was kind of working but it's not",
    "start": "1842330",
    "end": "1848599"
  },
  {
    "text": "a supported thing yet yeah it's a hacky thing but like you could envision like a like a node less cluster as long as you",
    "start": "1848599",
    "end": "1856129"
  },
  {
    "text": "can live with the limit thank you know the fact that it's not gonna have 100% compatibility with a regular cubelet but",
    "start": "1856129",
    "end": "1861440"
  },
  {
    "text": "like it unlocks a lot of cool stuff because it's gonna give you the ability to do non-traditional things",
    "start": "1861440",
    "end": "1868299"
  },
  {
    "text": "[Music] the question was what about running virtual cubelet outside of the cluster",
    "start": "1876080",
    "end": "1883600"
  },
  {
    "text": "as long as the so BK has to have connectivity to the API server and as",
    "start": "1883600",
    "end": "1888649"
  },
  {
    "text": "long as it has connectivity to the API server you could do that you would have",
    "start": "1888649",
    "end": "1896210"
  },
  {
    "text": "to solve that externally okay but like as long as you could make all of those complicated things happen it would be",
    "start": "1896210",
    "end": "1902360"
  },
  {
    "text": "possible any more questions",
    "start": "1902360",
    "end": "1907390"
  },
  {
    "text": "go for it [Applause]",
    "start": "1907390",
    "end": "1912499"
  },
  {
    "text": "say it say one more time does we use a",
    "start": "1914380",
    "end": "1925159"
  },
  {
    "text": "CI does virtual qulet automatically deploy on to it so you have to deploy in virtual people into your cluster first and configure it to point to that a CI",
    "start": "1925159",
    "end": "1931520"
  },
  {
    "text": "instance it doesn't there's not an automatic switch that just thought it comes for free with a CI all the time",
    "start": "1931520",
    "end": "1938149"
  },
  {
    "text": "it's gonna be a situation where you're going to configure your cluster to have VK as a any number of PK nodes but",
    "start": "1938149",
    "end": "1945130"
  },
  {
    "text": "something that you have to configure to to wire up where does the first people",
    "start": "1945130",
    "end": "1952490"
  },
  {
    "text": "that run by default it's gonna run on the cluster so like if we go back here",
    "start": "1952490",
    "end": "1957710"
  },
  {
    "text": "for a second one way to install it just generically is to use the helm chart and the Helen",
    "start": "1957710",
    "end": "1963649"
  },
  {
    "text": "chart is gonna create a deployment for virtual cubelet so just a regular kubernetes deployment it will start up",
    "start": "1963649",
    "end": "1971120"
  },
  {
    "text": "that daemon that registers itself as a node you could run it externally from",
    "start": "1971120",
    "end": "1976789"
  },
  {
    "text": "the cluster as well assuming you can handle all of the TLS and the authentication and connectivity between",
    "start": "1976789",
    "end": "1982250"
  },
  {
    "text": "VK and the API server",
    "start": "1982250",
    "end": "1986110"
  },
  {
    "text": "any limitations over with service mesh solutions I don't know we haven't really",
    "start": "1990620",
    "end": "1997140"
  },
  {
    "text": "tried it with a lot of mesh solution we try this on about the cloud you can actually use East Hill on top of virtual",
    "start": "1997140",
    "end": "2004850"
  },
  {
    "text": "cooperate best coordinates it works very well yeah the only issue it'll fix is about the DNS part that's why we said we",
    "start": "2004850",
    "end": "2011690"
  },
  {
    "text": "have the waiking project to handle the ingress thing guy stuff that's only blocker that's pretty cool let's try",
    "start": "2011690",
    "end": "2019610"
  },
  {
    "text": "that any more questions no all right go",
    "start": "2019610",
    "end": "2028160"
  },
  {
    "text": "for it we don't do static pods I had that",
    "start": "2028160",
    "end": "2033410"
  },
  {
    "text": "question when we were in in Seattle there's nothing that really would",
    "start": "2033410",
    "end": "2038419"
  },
  {
    "text": "prevent us from supporting static pods you could probably call VK directly and",
    "start": "2038419",
    "end": "2043790"
  },
  {
    "text": "try to create something that was analogous to a static pod but since it's really driven from the API server and",
    "start": "2043790",
    "end": "2049580"
  },
  {
    "text": "the static pods don't end up in the API server I mean it'll try to create like mirror pots and stuff but you don't create them via the API server to go to",
    "start": "2049580",
    "end": "2056628"
  },
  {
    "text": "the cuboid the same way so it's really driven by the API server right now like a controller would be from some other",
    "start": "2056629",
    "end": "2062720"
  },
  {
    "text": "resource cool well thank you so much for",
    "start": "2062720",
    "end": "2069888"
  },
  {
    "text": "coming today [Applause]",
    "start": "2069889",
    "end": "2073809"
  }
]