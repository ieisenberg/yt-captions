[
  {
    "text": "hi hello welcome to proxies pods and",
    "start": "799",
    "end": "3760"
  },
  {
    "text": "ports",
    "start": "3760",
    "end": "4880"
  },
  {
    "text": "i'm aaron alpar with capstone by veeam",
    "start": "4880",
    "end": "7839"
  },
  {
    "text": "castin makes backup products we're",
    "start": "7839",
    "end": "9599"
  },
  {
    "text": "currently number one in kubernetes",
    "start": "9599",
    "end": "12080"
  },
  {
    "text": "backup",
    "start": "12080",
    "end": "13360"
  },
  {
    "text": "my name is aaron alpar i've been working",
    "start": "13360",
    "end": "15920"
  },
  {
    "text": "with kubernetes since approximately",
    "start": "15920",
    "end": "17760"
  },
  {
    "text": "2016.",
    "start": "17760",
    "end": "19840"
  },
  {
    "text": "today i'm going to be talking to you",
    "start": "19840",
    "end": "21840"
  },
  {
    "text": "about various ways of accessing",
    "start": "21840",
    "end": "24880"
  },
  {
    "text": "pods",
    "start": "24880",
    "end": "26720"
  },
  {
    "text": "couple has",
    "start": "26720",
    "end": "28400"
  },
  {
    "text": "provides various means of getting access",
    "start": "28400",
    "end": "30720"
  },
  {
    "text": "to a pod i'll be talking about those and",
    "start": "30720",
    "end": "33200"
  },
  {
    "text": "this is going to be a wide-ranging",
    "start": "33200",
    "end": "34880"
  },
  {
    "text": "presentation and my focus is going to be",
    "start": "34880",
    "end": "37520"
  },
  {
    "text": "on covering",
    "start": "37520",
    "end": "39120"
  },
  {
    "text": "uh most all the ways there are to do",
    "start": "39120",
    "end": "41440"
  },
  {
    "text": "that i'll probably almost all of these",
    "start": "41440",
    "end": "43520"
  },
  {
    "text": "will be familiar uh what i'm hoping is",
    "start": "43520",
    "end": "46000"
  },
  {
    "text": "is you'll pick up little bits and pieces",
    "start": "46000",
    "end": "48719"
  },
  {
    "text": "that you may not have known",
    "start": "48719",
    "end": "50640"
  },
  {
    "text": "along the way so this will be a good",
    "start": "50640",
    "end": "53440"
  },
  {
    "text": "overview of the available methods as",
    "start": "53440",
    "end": "55840"
  },
  {
    "text": "well as getting into some details that",
    "start": "55840",
    "end": "58320"
  },
  {
    "text": "may be interesting",
    "start": "58320",
    "end": "61199"
  },
  {
    "text": "so",
    "start": "61600",
    "end": "62399"
  },
  {
    "text": "uh",
    "start": "62399",
    "end": "63199"
  },
  {
    "text": "pods have various access points uh using",
    "start": "63199",
    "end": "65600"
  },
  {
    "text": "couple",
    "start": "65600",
    "end": "66799"
  },
  {
    "text": "they can be accessed through the api",
    "start": "66799",
    "end": "68479"
  },
  {
    "text": "server i'll be talking about methods of",
    "start": "68479",
    "end": "70400"
  },
  {
    "text": "doing that",
    "start": "70400",
    "end": "71920"
  },
  {
    "text": "i'll be talking about using port",
    "start": "71920",
    "end": "74400"
  },
  {
    "text": "forwarding",
    "start": "74400",
    "end": "75520"
  },
  {
    "text": "to access pod ports directly and i'll be",
    "start": "75520",
    "end": "78240"
  },
  {
    "text": "talking about the standard streams",
    "start": "78240",
    "end": "80159"
  },
  {
    "text": "standard in standard out and standard",
    "start": "80159",
    "end": "82080"
  },
  {
    "text": "error i'll be talking a little bit about",
    "start": "82080",
    "end": "84640"
  },
  {
    "text": "logs",
    "start": "84640",
    "end": "85680"
  },
  {
    "text": "as well",
    "start": "85680",
    "end": "87119"
  },
  {
    "text": "so just just for complete coverage",
    "start": "87119",
    "end": "89920"
  },
  {
    "text": "what i'll be talking about first is the",
    "start": "89920",
    "end": "91600"
  },
  {
    "text": "api server proxy the api server proxy",
    "start": "91600",
    "end": "94640"
  },
  {
    "text": "allows direct access to the api server",
    "start": "94640",
    "end": "97200"
  },
  {
    "text": "by http proxy here you can act access",
    "start": "97200",
    "end": "100479"
  },
  {
    "text": "the api server by using a local port",
    "start": "100479",
    "end": "102560"
  },
  {
    "text": "http",
    "start": "102560",
    "end": "104560"
  },
  {
    "text": "to access the api endpoints and",
    "start": "104560",
    "end": "106560"
  },
  {
    "text": "kubernetes this is really valuable for",
    "start": "106560",
    "end": "108640"
  },
  {
    "text": "scripting",
    "start": "108640",
    "end": "109840"
  },
  {
    "text": "for debugging and in some cases",
    "start": "109840",
    "end": "112000"
  },
  {
    "text": "accessing alpha beta features that don't",
    "start": "112000",
    "end": "114240"
  },
  {
    "text": "yet have integration with coop cuddle",
    "start": "114240",
    "end": "117280"
  },
  {
    "text": "this is similar to using raw the wrought",
    "start": "117280",
    "end": "119200"
  },
  {
    "text": "option on coop cuddle if you're not",
    "start": "119200",
    "end": "120719"
  },
  {
    "text": "familiar with it that's okay i'll be",
    "start": "120719",
    "end": "122880"
  },
  {
    "text": "talking about that more",
    "start": "122880",
    "end": "125680"
  },
  {
    "text": "this presentation is going to use plenty",
    "start": "125680",
    "end": "127920"
  },
  {
    "text": "of command examples these command",
    "start": "127920",
    "end": "130000"
  },
  {
    "text": "examples are going to be executed",
    "start": "130000",
    "end": "132000"
  },
  {
    "text": "against a deployment and a service",
    "start": "132000",
    "end": "135040"
  },
  {
    "text": "here i've provided the yaml for both the",
    "start": "135040",
    "end": "136959"
  },
  {
    "text": "deployment and the service and here's",
    "start": "136959",
    "end": "138800"
  },
  {
    "text": "the deployment a very simple x engine x",
    "start": "138800",
    "end": "141760"
  },
  {
    "text": "deployment with an nginx container",
    "start": "141760",
    "end": "144879"
  },
  {
    "text": "the service allows network access to",
    "start": "144879",
    "end": "147599"
  },
  {
    "text": "that nginx container",
    "start": "147599",
    "end": "150080"
  },
  {
    "text": "on port 80.",
    "start": "150080",
    "end": "152239"
  },
  {
    "text": "here's service yaml for that",
    "start": "152239",
    "end": "156560"
  },
  {
    "text": "the first topic i'm going to talk about",
    "start": "156560",
    "end": "158560"
  },
  {
    "text": "is the api server proxy the api server",
    "start": "158560",
    "end": "161680"
  },
  {
    "text": "proxy allows direct access to the api",
    "start": "161680",
    "end": "164239"
  },
  {
    "text": "server via http connection",
    "start": "164239",
    "end": "166800"
  },
  {
    "text": "from a local port",
    "start": "166800",
    "end": "168800"
  },
  {
    "text": "this is very useful for debugging or",
    "start": "168800",
    "end": "170640"
  },
  {
    "text": "executing commands that uh are in alpha",
    "start": "170640",
    "end": "173519"
  },
  {
    "text": "beta and not fully supported in couple",
    "start": "173519",
    "end": "176400"
  },
  {
    "text": "uh forward connections are forwarded to",
    "start": "176400",
    "end": "178720"
  },
  {
    "text": "connections are automatically amended",
    "start": "178720",
    "end": "180159"
  },
  {
    "text": "with authentication state so there's no",
    "start": "180159",
    "end": "182560"
  },
  {
    "text": "need to",
    "start": "182560",
    "end": "184400"
  },
  {
    "text": "provide additional authentication",
    "start": "184400",
    "end": "187760"
  },
  {
    "text": "when forwarding connections",
    "start": "187760",
    "end": "191040"
  },
  {
    "text": "uh here's how you start up an api server",
    "start": "192159",
    "end": "194480"
  },
  {
    "text": "proxy it's very simp simple kubeco proxy",
    "start": "194480",
    "end": "198560"
  },
  {
    "text": "there are other options here for",
    "start": "198560",
    "end": "199920"
  },
  {
    "text": "specifying local ports or hosts to",
    "start": "199920",
    "end": "202080"
  },
  {
    "text": "listen to",
    "start": "202080",
    "end": "203120"
  },
  {
    "text": "in this case we're just going to go with",
    "start": "203120",
    "end": "204640"
  },
  {
    "text": "the default options this will start up a",
    "start": "204640",
    "end": "207040"
  },
  {
    "text": "proxy that listens on 8 port 8001 on",
    "start": "207040",
    "end": "210560"
  },
  {
    "text": "localhost",
    "start": "210560",
    "end": "212319"
  },
  {
    "text": "in this example below i'm testing it out",
    "start": "212319",
    "end": "215599"
  },
  {
    "text": "by",
    "start": "215599",
    "end": "216480"
  },
  {
    "text": "getting the root for the api server",
    "start": "216480",
    "end": "218799"
  },
  {
    "text": "which will show me a list of paths that",
    "start": "218799",
    "end": "220799"
  },
  {
    "text": "are available on the api server",
    "start": "220799",
    "end": "225640"
  },
  {
    "text": "here i'll show you a couple of examples",
    "start": "226879",
    "end": "228959"
  },
  {
    "text": "of",
    "start": "228959",
    "end": "230159"
  },
  {
    "text": "coupe cuddle commands",
    "start": "230159",
    "end": "232080"
  },
  {
    "text": "and how you might represent those as",
    "start": "232080",
    "end": "234560"
  },
  {
    "text": "curl commands once you're using the api",
    "start": "234560",
    "end": "237120"
  },
  {
    "text": "server proxy",
    "start": "237120",
    "end": "238879"
  },
  {
    "text": "so here i'm getting all the name spaces",
    "start": "238879",
    "end": "240959"
  },
  {
    "text": "listed as a table",
    "start": "240959",
    "end": "242400"
  },
  {
    "text": "and here i can do an equivalent uh by",
    "start": "242400",
    "end": "245519"
  },
  {
    "text": "accessing uh localhost 8001 api v1",
    "start": "245519",
    "end": "249120"
  },
  {
    "text": "namespaces and that will list out the",
    "start": "249120",
    "end": "251200"
  },
  {
    "text": "namespaces",
    "start": "251200",
    "end": "253920"
  },
  {
    "text": "here's an example of getting a singular",
    "start": "253920",
    "end": "256079"
  },
  {
    "text": "pod",
    "start": "256079",
    "end": "257519"
  },
  {
    "text": "uh in this case the nginx deployment pod",
    "start": "257519",
    "end": "260239"
  },
  {
    "text": "and here is a curl example",
    "start": "260239",
    "end": "263040"
  },
  {
    "text": "that i might use using the api server",
    "start": "263040",
    "end": "265600"
  },
  {
    "text": "proxy",
    "start": "265600",
    "end": "268600"
  },
  {
    "text": "now the api server proxy not only allows",
    "start": "271120",
    "end": "273600"
  },
  {
    "text": "you to",
    "start": "273600",
    "end": "275120"
  },
  {
    "text": "access resources",
    "start": "275120",
    "end": "277600"
  },
  {
    "text": "but it allows you to access ports on",
    "start": "277600",
    "end": "280080"
  },
  {
    "text": "pods and services so talking a little",
    "start": "280080",
    "end": "282639"
  },
  {
    "text": "bit about that",
    "start": "282639",
    "end": "284000"
  },
  {
    "text": "and specifically i'll be talking about",
    "start": "284000",
    "end": "286160"
  },
  {
    "text": "service services and accessing service",
    "start": "286160",
    "end": "288479"
  },
  {
    "text": "points ports first",
    "start": "288479",
    "end": "290320"
  },
  {
    "text": "so",
    "start": "290320",
    "end": "291360"
  },
  {
    "text": "assuming of course that you have a",
    "start": "291360",
    "end": "293919"
  },
  {
    "text": "api server proxy running locally",
    "start": "293919",
    "end": "296960"
  },
  {
    "text": "here's a curl command to go through that",
    "start": "296960",
    "end": "299440"
  },
  {
    "text": "and you'll see here",
    "start": "299440",
    "end": "301520"
  },
  {
    "text": "that i'm accessing a service in",
    "start": "301520",
    "end": "303759"
  },
  {
    "text": "namespace demo one",
    "start": "303759",
    "end": "305520"
  },
  {
    "text": "the service is called nginx",
    "start": "305520",
    "end": "307520"
  },
  {
    "text": "service this is the service that i",
    "start": "307520",
    "end": "309360"
  },
  {
    "text": "showed you earlier in the ammo file",
    "start": "309360",
    "end": "312240"
  },
  {
    "text": "uh note on the end",
    "start": "312240",
    "end": "315280"
  },
  {
    "text": "it has http",
    "start": "315280",
    "end": "317440"
  },
  {
    "text": "so for services this http that's on the",
    "start": "317440",
    "end": "320800"
  },
  {
    "text": "end is the service name the port rather",
    "start": "320800",
    "end": "324160"
  },
  {
    "text": "the port name in the service that i want",
    "start": "324160",
    "end": "326639"
  },
  {
    "text": "to proxy through",
    "start": "326639",
    "end": "329440"
  },
  {
    "text": "at the end you put slash proxy and",
    "start": "329440",
    "end": "332800"
  },
  {
    "text": "that is the api server's indication that",
    "start": "332800",
    "end": "336160"
  },
  {
    "text": "you wish to proxy through this port",
    "start": "336160",
    "end": "339120"
  },
  {
    "text": "uh as you can see below once i proxy",
    "start": "339120",
    "end": "342080"
  },
  {
    "text": "through that port it's actually",
    "start": "342080",
    "end": "343520"
  },
  {
    "text": "accessing the nginx server uh that's",
    "start": "343520",
    "end": "346479"
  },
  {
    "text": "behind that service so",
    "start": "346479",
    "end": "348800"
  },
  {
    "text": "this is a really handy way of proxying",
    "start": "348800",
    "end": "351759"
  },
  {
    "text": "to services without actually through the",
    "start": "351759",
    "end": "354400"
  },
  {
    "text": "api through the api server proxy without",
    "start": "354400",
    "end": "357199"
  },
  {
    "text": "having to set up a separate proxy",
    "start": "357199",
    "end": "359600"
  },
  {
    "text": "of course this is only going to work for",
    "start": "359600",
    "end": "361199"
  },
  {
    "text": "http or https connections",
    "start": "361199",
    "end": "365360"
  },
  {
    "text": "at the end of that proxy url you can add",
    "start": "365360",
    "end": "368960"
  },
  {
    "text": "any other uh",
    "start": "368960",
    "end": "371520"
  },
  {
    "text": "additional url uh path options as well",
    "start": "371520",
    "end": "374560"
  },
  {
    "text": "as a",
    "start": "374560",
    "end": "375520"
  },
  {
    "text": "query parameters",
    "start": "375520",
    "end": "377680"
  },
  {
    "text": "in the case that i showed you in this",
    "start": "377680",
    "end": "380080"
  },
  {
    "text": "case it's yaml i showed you earlier",
    "start": "380080",
    "end": "383039"
  },
  {
    "text": "uh where the port has a name http",
    "start": "383039",
    "end": "386560"
  },
  {
    "text": "and you can see that that's the same",
    "start": "386560",
    "end": "388880"
  },
  {
    "text": "that maps the same name that's in the",
    "start": "388880",
    "end": "390800"
  },
  {
    "text": "url",
    "start": "390800",
    "end": "392960"
  },
  {
    "text": "here's the full form for that um",
    "start": "392960",
    "end": "395840"
  },
  {
    "text": "if you're using a api server proxy",
    "start": "395840",
    "end": "398880"
  },
  {
    "text": "and you wish to access a specific",
    "start": "398880",
    "end": "401680"
  },
  {
    "text": "service port this is how you'd go about",
    "start": "401680",
    "end": "403759"
  },
  {
    "text": "doing it",
    "start": "403759",
    "end": "405360"
  },
  {
    "text": "again",
    "start": "405360",
    "end": "406400"
  },
  {
    "text": "additional ul url path parameters can be",
    "start": "406400",
    "end": "409360"
  },
  {
    "text": "added onto the end as well as query",
    "start": "409360",
    "end": "411120"
  },
  {
    "text": "parameters",
    "start": "411120",
    "end": "413680"
  },
  {
    "text": "so if you'd like to do the same",
    "start": "414319",
    "end": "416479"
  },
  {
    "text": "similarly for pod you can do that",
    "start": "416479",
    "end": "419599"
  },
  {
    "text": "the form is very similar",
    "start": "419599",
    "end": "421599"
  },
  {
    "text": "in this case i'm using curl against the",
    "start": "421599",
    "end": "424240"
  },
  {
    "text": "api server proxy",
    "start": "424240",
    "end": "426479"
  },
  {
    "text": "to access",
    "start": "426479",
    "end": "427680"
  },
  {
    "text": "port 80 on a on a pod",
    "start": "427680",
    "end": "430800"
  },
  {
    "text": "in this case it's a pod in my deployment",
    "start": "430800",
    "end": "433840"
  },
  {
    "text": "nginx deployment and you can see here",
    "start": "433840",
    "end": "436800"
  },
  {
    "text": "that i'm accessing a port 80 on the pod",
    "start": "436800",
    "end": "440960"
  },
  {
    "text": "so once again",
    "start": "440960",
    "end": "443199"
  },
  {
    "text": "just like the service example",
    "start": "443199",
    "end": "445360"
  },
  {
    "text": "this shows that i'm accessing nginx",
    "start": "445360",
    "end": "448880"
  },
  {
    "text": "i'm accessing nginx that's running on",
    "start": "448880",
    "end": "451199"
  },
  {
    "text": "that pod on port 80.",
    "start": "451199",
    "end": "454960"
  },
  {
    "text": "so",
    "start": "455199",
    "end": "456319"
  },
  {
    "text": "uh",
    "start": "456319",
    "end": "457360"
  },
  {
    "text": "similarly if we actually go and look at",
    "start": "457360",
    "end": "459440"
  },
  {
    "text": "that pod we can see that the container",
    "start": "459440",
    "end": "461280"
  },
  {
    "text": "port is exposed on port 80",
    "start": "461280",
    "end": "465039"
  },
  {
    "text": "and that's how i would get access to it",
    "start": "465039",
    "end": "469120"
  },
  {
    "text": "here's the form it's very similar to the",
    "start": "470720",
    "end": "472879"
  },
  {
    "text": "services",
    "start": "472879",
    "end": "474879"
  },
  {
    "text": "except that you specify a port number as",
    "start": "474879",
    "end": "477120"
  },
  {
    "text": "opposed to a port name",
    "start": "477120",
    "end": "480319"
  },
  {
    "text": "so",
    "start": "482319",
    "end": "483120"
  },
  {
    "text": "couple proxy uh offers the ability to",
    "start": "483120",
    "end": "486479"
  },
  {
    "text": "access resource definitions within the",
    "start": "486479",
    "end": "489520"
  },
  {
    "text": "kubernetes api in the kubernetes api",
    "start": "489520",
    "end": "492720"
  },
  {
    "text": "server not only that but it allows you",
    "start": "492720",
    "end": "495120"
  },
  {
    "text": "to access pods and service endpoints",
    "start": "495120",
    "end": "497919"
  },
  {
    "text": "very useful for debugging i'll talk a",
    "start": "497919",
    "end": "500000"
  },
  {
    "text": "little bit about that",
    "start": "500000",
    "end": "502400"
  },
  {
    "text": "next",
    "start": "502400",
    "end": "504800"
  },
  {
    "text": "so you can use the uh couple proxy to",
    "start": "504800",
    "end": "507840"
  },
  {
    "text": "get access to the api server",
    "start": "507840",
    "end": "510160"
  },
  {
    "text": "and uh",
    "start": "510160",
    "end": "511680"
  },
  {
    "text": "basically use it for debugging and",
    "start": "511680",
    "end": "513200"
  },
  {
    "text": "something that's valuable uh is to use a",
    "start": "513200",
    "end": "517200"
  },
  {
    "text": "couple v9",
    "start": "517200",
    "end": "519839"
  },
  {
    "text": "v is the verbose option",
    "start": "519839",
    "end": "522880"
  },
  {
    "text": "and then followed by an integer and you",
    "start": "522880",
    "end": "525040"
  },
  {
    "text": "can",
    "start": "525040",
    "end": "526560"
  },
  {
    "text": "specify",
    "start": "526560",
    "end": "527680"
  },
  {
    "text": "an integer always from 0 to 9.",
    "start": "527680",
    "end": "531120"
  },
  {
    "text": "the lower the value the less debugging",
    "start": "531120",
    "end": "533120"
  },
  {
    "text": "information the higher the value the",
    "start": "533120",
    "end": "534880"
  },
  {
    "text": "more debugging information",
    "start": "534880",
    "end": "537120"
  },
  {
    "text": "what's special about v9 is that it",
    "start": "537120",
    "end": "540240"
  },
  {
    "text": "outputs curl commands that can then be",
    "start": "540240",
    "end": "542720"
  },
  {
    "text": "modified and used",
    "start": "542720",
    "end": "545040"
  },
  {
    "text": "to access resources through proxy server",
    "start": "545040",
    "end": "548399"
  },
  {
    "text": "so in this example i'm simply getting",
    "start": "548399",
    "end": "550959"
  },
  {
    "text": "all the pods from all the name spaces",
    "start": "550959",
    "end": "553839"
  },
  {
    "text": "and i'm specifying verbose9 on the",
    "start": "553839",
    "end": "556720"
  },
  {
    "text": "command line",
    "start": "556720",
    "end": "558160"
  },
  {
    "text": "uh here's the output from that and this",
    "start": "558160",
    "end": "560320"
  },
  {
    "text": "is the first few lines here are all",
    "start": "560320",
    "end": "562320"
  },
  {
    "text": "debugging output",
    "start": "562320",
    "end": "563839"
  },
  {
    "text": "and what's buried in there is a curl",
    "start": "563839",
    "end": "565839"
  },
  {
    "text": "command",
    "start": "565839",
    "end": "567519"
  },
  {
    "text": "so this curl command is the curl",
    "start": "567519",
    "end": "570080"
  },
  {
    "text": "is the equivalent",
    "start": "570080",
    "end": "571680"
  },
  {
    "text": "uh if if cube cuddle was using curl it",
    "start": "571680",
    "end": "574399"
  },
  {
    "text": "would be the occur equivalent of uh the",
    "start": "574399",
    "end": "577440"
  },
  {
    "text": "url",
    "start": "577440",
    "end": "579200"
  },
  {
    "text": "or the endpoint that it accessed in the",
    "start": "579200",
    "end": "581680"
  },
  {
    "text": "in the api server",
    "start": "581680",
    "end": "584959"
  },
  {
    "text": "this can be modified",
    "start": "585680",
    "end": "588000"
  },
  {
    "text": "and used uh to then execute that",
    "start": "588000",
    "end": "592320"
  },
  {
    "text": "uh against the api server once again you",
    "start": "592320",
    "end": "595279"
  },
  {
    "text": "would set up a",
    "start": "595279",
    "end": "597360"
  },
  {
    "text": "an api server proxy in order to get",
    "start": "597360",
    "end": "599279"
  },
  {
    "text": "access to that",
    "start": "599279",
    "end": "600720"
  },
  {
    "text": "so",
    "start": "600720",
    "end": "601519"
  },
  {
    "text": "it's very useful to use this in",
    "start": "601519",
    "end": "603200"
  },
  {
    "text": "conjunction uh with kubecuttle",
    "start": "603200",
    "end": "606560"
  },
  {
    "text": "to v9 to see what the urls that the",
    "start": "606560",
    "end": "609839"
  },
  {
    "text": "coupe cuddle is actually accessing in",
    "start": "609839",
    "end": "611440"
  },
  {
    "text": "the api server",
    "start": "611440",
    "end": "613360"
  },
  {
    "text": "and then you can do some debugging using",
    "start": "613360",
    "end": "615120"
  },
  {
    "text": "the proxy so",
    "start": "615120",
    "end": "619160"
  },
  {
    "text": "um",
    "start": "619200",
    "end": "620160"
  },
  {
    "text": "what this offer you is non-truncated",
    "start": "620160",
    "end": "622480"
  },
  {
    "text": "debugging output uh for coop cuddle",
    "start": "622480",
    "end": "624800"
  },
  {
    "text": "which is very valuable",
    "start": "624800",
    "end": "626480"
  },
  {
    "text": "uh it's useful for also getting those",
    "start": "626480",
    "end": "628240"
  },
  {
    "text": "curl commands uh for the api server",
    "start": "628240",
    "end": "630880"
  },
  {
    "text": "equivalents to coop cuddle commands",
    "start": "630880",
    "end": "634000"
  },
  {
    "text": "and",
    "start": "634000",
    "end": "635200"
  },
  {
    "text": "if you like you can use values less than",
    "start": "635200",
    "end": "637680"
  },
  {
    "text": "nine to output less",
    "start": "637680",
    "end": "640320"
  },
  {
    "text": "eight truncates output uh seven just",
    "start": "640320",
    "end": "643279"
  },
  {
    "text": "provides headers so on and so forth",
    "start": "643279",
    "end": "647839"
  },
  {
    "text": "so",
    "start": "647920",
    "end": "648800"
  },
  {
    "text": "that's that is it uh for the api server",
    "start": "648800",
    "end": "652160"
  },
  {
    "text": "proxy",
    "start": "652160",
    "end": "653279"
  },
  {
    "text": "um what i wanted to talk to you about",
    "start": "653279",
    "end": "655600"
  },
  {
    "text": "next is something that's similar which",
    "start": "655600",
    "end": "657760"
  },
  {
    "text": "is the raw option on couple",
    "start": "657760",
    "end": "662000"
  },
  {
    "text": "get create and delete all offer dash",
    "start": "662399",
    "end": "665839"
  },
  {
    "text": "dash raw option",
    "start": "665839",
    "end": "668399"
  },
  {
    "text": "this allows you to submit",
    "start": "668399",
    "end": "670640"
  },
  {
    "text": "api server urls using kubecuttle",
    "start": "670640",
    "end": "674720"
  },
  {
    "text": "and it provides json output so i'll show",
    "start": "674720",
    "end": "677760"
  },
  {
    "text": "you",
    "start": "677760",
    "end": "679680"
  },
  {
    "text": "here's an example of using dash dash raw",
    "start": "679680",
    "end": "682880"
  },
  {
    "text": "here i'm using kucoget but instead of",
    "start": "682880",
    "end": "685440"
  },
  {
    "text": "telling it what resource i'm looking for",
    "start": "685440",
    "end": "687760"
  },
  {
    "text": "i'm going to give it a dash dash raw",
    "start": "687760",
    "end": "689519"
  },
  {
    "text": "option and then this should look",
    "start": "689519",
    "end": "691680"
  },
  {
    "text": "familiar the api v1 namespaces this is",
    "start": "691680",
    "end": "694959"
  },
  {
    "text": "going to list all the namespaces that",
    "start": "694959",
    "end": "696959"
  },
  {
    "text": "are available in my api server",
    "start": "696959",
    "end": "700480"
  },
  {
    "text": "if you're not familiar with jq i",
    "start": "700480",
    "end": "702480"
  },
  {
    "text": "recommend you get familiar with it here",
    "start": "702480",
    "end": "704160"
  },
  {
    "text": "i'm piping it through jq this is just",
    "start": "704160",
    "end": "706480"
  },
  {
    "text": "going to format the json for me nicely",
    "start": "706480",
    "end": "709680"
  },
  {
    "text": "uh and",
    "start": "709680",
    "end": "710959"
  },
  {
    "text": "below you'll see that i'm getting a list",
    "start": "710959",
    "end": "712800"
  },
  {
    "text": "of namespaces out",
    "start": "712800",
    "end": "716760"
  },
  {
    "text": "uh of course this can be used for",
    "start": "716959",
    "end": "718639"
  },
  {
    "text": "basically any endpoint that you could",
    "start": "718639",
    "end": "720480"
  },
  {
    "text": "normally uh use with the api server",
    "start": "720480",
    "end": "723120"
  },
  {
    "text": "proxy",
    "start": "723120",
    "end": "724320"
  },
  {
    "text": "uh here i'm getting uh uh the service uh",
    "start": "724320",
    "end": "727920"
  },
  {
    "text": "nginx service",
    "start": "727920",
    "end": "729920"
  },
  {
    "text": "and piping it through jq again and",
    "start": "729920",
    "end": "731920"
  },
  {
    "text": "there's the json for it",
    "start": "731920",
    "end": "734079"
  },
  {
    "text": "being being output",
    "start": "734079",
    "end": "737760"
  },
  {
    "text": "so",
    "start": "739519",
    "end": "740720"
  },
  {
    "text": "those are examples of get now i'm going",
    "start": "740720",
    "end": "742959"
  },
  {
    "text": "to show you an example of a delete and a",
    "start": "742959",
    "end": "745040"
  },
  {
    "text": "create and in order to do that",
    "start": "745040",
    "end": "748160"
  },
  {
    "text": "i'm going to be using this service.json",
    "start": "748160",
    "end": "750639"
  },
  {
    "text": "file all this is is the service that i",
    "start": "750639",
    "end": "753440"
  },
  {
    "text": "had earlier",
    "start": "753440",
    "end": "754880"
  },
  {
    "text": "in json instead of yaml",
    "start": "754880",
    "end": "758000"
  },
  {
    "text": "so here we go",
    "start": "758000",
    "end": "760160"
  },
  {
    "text": "if i go ahead and i can go ahead and",
    "start": "760160",
    "end": "762800"
  },
  {
    "text": "cuddle delete",
    "start": "762800",
    "end": "764240"
  },
  {
    "text": "i use the raw option and specify the api",
    "start": "764240",
    "end": "767920"
  },
  {
    "text": "server url",
    "start": "767920",
    "end": "770720"
  },
  {
    "text": "for the resource that i'd like to delete",
    "start": "770720",
    "end": "772880"
  },
  {
    "text": "uh i have to specify a full name here",
    "start": "772880",
    "end": "775920"
  },
  {
    "text": "and in this case is i'm gonna delete the",
    "start": "775920",
    "end": "778079"
  },
  {
    "text": "uh nginx service so i get the json",
    "start": "778079",
    "end": "781440"
  },
  {
    "text": "response that says that it worked",
    "start": "781440",
    "end": "784399"
  },
  {
    "text": "um i can then go ahead and recreate that",
    "start": "784399",
    "end": "787200"
  },
  {
    "text": "using coop cuddle create",
    "start": "787200",
    "end": "789279"
  },
  {
    "text": "dash dash raw",
    "start": "789279",
    "end": "791120"
  },
  {
    "text": "um specify the the resource name or",
    "start": "791120",
    "end": "793839"
  },
  {
    "text": "resource type that i'd like to create",
    "start": "793839",
    "end": "796720"
  },
  {
    "text": "um",
    "start": "796720",
    "end": "797760"
  },
  {
    "text": "give it the file for the json and it'll",
    "start": "797760",
    "end": "800639"
  },
  {
    "text": "create it and if it successfully creates",
    "start": "800639",
    "end": "803200"
  },
  {
    "text": "it it'll output the service back to me",
    "start": "803200",
    "end": "807680"
  },
  {
    "text": "you can pass in query options when using",
    "start": "808560",
    "end": "811279"
  },
  {
    "text": "raw here's an example of using the limit",
    "start": "811279",
    "end": "814639"
  },
  {
    "text": "to limit the number of results that come",
    "start": "814639",
    "end": "816320"
  },
  {
    "text": "back",
    "start": "816320",
    "end": "818560"
  },
  {
    "text": "so the raw option on coupe cuddle allows",
    "start": "820880",
    "end": "823519"
  },
  {
    "text": "you to get access to get post and delete",
    "start": "823519",
    "end": "825839"
  },
  {
    "text": "methods in the api server from couple",
    "start": "825839",
    "end": "829040"
  },
  {
    "text": "without the need for setting up a api",
    "start": "829040",
    "end": "831360"
  },
  {
    "text": "server proxy it's rather handy that way",
    "start": "831360",
    "end": "835760"
  },
  {
    "text": "you can add",
    "start": "835760",
    "end": "836959"
  },
  {
    "text": "url query arguments to do things like",
    "start": "836959",
    "end": "839360"
  },
  {
    "text": "limit the number of records that come",
    "start": "839360",
    "end": "841519"
  },
  {
    "text": "back uh set continuation tokens uh so on",
    "start": "841519",
    "end": "845519"
  },
  {
    "text": "and so forth so this is a",
    "start": "845519",
    "end": "847920"
  },
  {
    "text": "very good tool to have in your toolbox",
    "start": "847920",
    "end": "852160"
  },
  {
    "text": "so",
    "start": "854399",
    "end": "855440"
  },
  {
    "text": "that's that's pretty much covers it in",
    "start": "855440",
    "end": "857920"
  },
  {
    "text": "terms of ways to access the api server",
    "start": "857920",
    "end": "861040"
  },
  {
    "text": "or the apis using couple either by the",
    "start": "861040",
    "end": "864320"
  },
  {
    "text": "api",
    "start": "864320",
    "end": "865279"
  },
  {
    "text": "api server proxy or by using raw",
    "start": "865279",
    "end": "868800"
  },
  {
    "text": "that'll give you access to",
    "start": "868800",
    "end": "871279"
  },
  {
    "text": "basically any endpoint there on the api",
    "start": "871279",
    "end": "873600"
  },
  {
    "text": "server for getting resource metadata",
    "start": "873600",
    "end": "877040"
  },
  {
    "text": "there's another way of",
    "start": "877040",
    "end": "878800"
  },
  {
    "text": "accessing your ports and services and of",
    "start": "878800",
    "end": "881760"
  },
  {
    "text": "course that's through port forwarding",
    "start": "881760",
    "end": "883519"
  },
  {
    "text": "i'm sure most of you have already used",
    "start": "883519",
    "end": "885279"
  },
  {
    "text": "this",
    "start": "885279",
    "end": "886079"
  },
  {
    "text": "i'm going to be giving you a very short",
    "start": "886079",
    "end": "888160"
  },
  {
    "text": "overview of uh",
    "start": "888160",
    "end": "889920"
  },
  {
    "text": "port forwarding basically for",
    "start": "889920",
    "end": "891519"
  },
  {
    "text": "completeness",
    "start": "891519",
    "end": "893920"
  },
  {
    "text": "to show you that it's here",
    "start": "893920",
    "end": "895920"
  },
  {
    "text": "and discuss a couple of limitations of",
    "start": "895920",
    "end": "897920"
  },
  {
    "text": "it",
    "start": "897920",
    "end": "898880"
  },
  {
    "text": "uh port forwarding forwards tcp ports to",
    "start": "898880",
    "end": "901920"
  },
  {
    "text": "uh pods and services",
    "start": "901920",
    "end": "904320"
  },
  {
    "text": "um",
    "start": "904320",
    "end": "906000"
  },
  {
    "text": "containers specifically",
    "start": "906000",
    "end": "907920"
  },
  {
    "text": "uh it can only do tcp it can't do udp",
    "start": "907920",
    "end": "911839"
  },
  {
    "text": "it uses http 2 streams to go ahead and",
    "start": "911839",
    "end": "915199"
  },
  {
    "text": "do this",
    "start": "915199",
    "end": "916560"
  },
  {
    "text": "which can create some difficulty if",
    "start": "916560",
    "end": "918880"
  },
  {
    "text": "you're if you have a proxy server or",
    "start": "918880",
    "end": "920720"
  },
  {
    "text": "reverse proxy rather",
    "start": "920720",
    "end": "922720"
  },
  {
    "text": "between you and the server that you're",
    "start": "922720",
    "end": "924560"
  },
  {
    "text": "trying to access",
    "start": "924560",
    "end": "926880"
  },
  {
    "text": "this is uh really uh",
    "start": "926880",
    "end": "929759"
  },
  {
    "text": "really handy if you want to browse the",
    "start": "929759",
    "end": "932480"
  },
  {
    "text": "contents using a web browser",
    "start": "932480",
    "end": "935199"
  },
  {
    "text": "in one of your pods or containers so",
    "start": "935199",
    "end": "937839"
  },
  {
    "text": "it's handy",
    "start": "937839",
    "end": "939279"
  },
  {
    "text": "um and you can use this to uh",
    "start": "939279",
    "end": "942720"
  },
  {
    "text": "pass through any tcp protocol uh",
    "start": "942720",
    "end": "946079"
  },
  {
    "text": "uh not just http and https as you would",
    "start": "946079",
    "end": "950160"
  },
  {
    "text": "get with the uh",
    "start": "950160",
    "end": "952240"
  },
  {
    "text": "the api server proxy uh http and https",
    "start": "952240",
    "end": "956000"
  },
  {
    "text": "endpoints so any tcp protocol will work",
    "start": "956000",
    "end": "960079"
  },
  {
    "text": "uh this is fairly straightforward to set",
    "start": "960079",
    "end": "962079"
  },
  {
    "text": "up it's basically very similar in",
    "start": "962079",
    "end": "964399"
  },
  {
    "text": "operation to api",
    "start": "964399",
    "end": "966880"
  },
  {
    "text": "excuse me coop cuddle proxy",
    "start": "966880",
    "end": "969519"
  },
  {
    "text": "uh coupe cuddle port forwarding uh here",
    "start": "969519",
    "end": "972320"
  },
  {
    "text": "it is uh all you do is specify the pod",
    "start": "972320",
    "end": "976160"
  },
  {
    "text": "uh or the service which you wish to",
    "start": "976160",
    "end": "978399"
  },
  {
    "text": "access on the other end this is an",
    "start": "978399",
    "end": "980000"
  },
  {
    "text": "example with a pod",
    "start": "980000",
    "end": "982480"
  },
  {
    "text": "and the target port that you wish colon",
    "start": "982480",
    "end": "984800"
  },
  {
    "text": "and the target port that you wish to",
    "start": "984800",
    "end": "986399"
  },
  {
    "text": "access in this case port 80.",
    "start": "986399",
    "end": "989759"
  },
  {
    "text": "note i'm it's i'm not specifying a",
    "start": "989759",
    "end": "992800"
  },
  {
    "text": "number on the left hand side i'm only",
    "start": "992800",
    "end": "994720"
  },
  {
    "text": "specifying a number on the right hand",
    "start": "994720",
    "end": "996639"
  },
  {
    "text": "side of the colon which is port 80.",
    "start": "996639",
    "end": "999199"
  },
  {
    "text": "what this will do is it'll assign a",
    "start": "999199",
    "end": "1000959"
  },
  {
    "text": "random local port to forward to that",
    "start": "1000959",
    "end": "1003680"
  },
  {
    "text": "port 80. and in this case that random",
    "start": "1003680",
    "end": "1006320"
  },
  {
    "text": "local port that i identified was 54.6",
    "start": "1006320",
    "end": "1011440"
  },
  {
    "text": "so here it's porting for port forwarding",
    "start": "1011440",
    "end": "1014399"
  },
  {
    "text": "that randomly selected port to port 80.",
    "start": "1014399",
    "end": "1017199"
  },
  {
    "text": "i could specify a port on the left hand",
    "start": "1017199",
    "end": "1019759"
  },
  {
    "text": "side in which case it would forward that",
    "start": "1019759",
    "end": "1021839"
  },
  {
    "text": "local port to port 80.",
    "start": "1021839",
    "end": "1024720"
  },
  {
    "text": "i'm not going to be discussing any of",
    "start": "1024720",
    "end": "1026480"
  },
  {
    "text": "the details in the options again this is",
    "start": "1026480",
    "end": "1028720"
  },
  {
    "text": "provided for completeness mostly",
    "start": "1028720",
    "end": "1032000"
  },
  {
    "text": "here i go ahead and do a curl command",
    "start": "1032000",
    "end": "1034240"
  },
  {
    "text": "against that using http and i'm",
    "start": "1034240",
    "end": "1037120"
  },
  {
    "text": "accessing my nginx server on the other",
    "start": "1037120",
    "end": "1039280"
  },
  {
    "text": "end",
    "start": "1039280",
    "end": "1041600"
  },
  {
    "text": "so",
    "start": "1042959",
    "end": "1043760"
  },
  {
    "text": "that once again a very brief overview of",
    "start": "1043760",
    "end": "1046480"
  },
  {
    "text": "uh",
    "start": "1046480",
    "end": "1047678"
  },
  {
    "text": "credible port forwarding",
    "start": "1047679",
    "end": "1049840"
  },
  {
    "text": "this is something i'm going to cover",
    "start": "1049840",
    "end": "1051280"
  },
  {
    "text": "briefly which is logging",
    "start": "1051280",
    "end": "1053919"
  },
  {
    "text": "logs",
    "start": "1053919",
    "end": "1054960"
  },
  {
    "text": "in kubernetes are simply",
    "start": "1054960",
    "end": "1057200"
  },
  {
    "text": "output to standard out or standard error",
    "start": "1057200",
    "end": "1059280"
  },
  {
    "text": "from your pods and containers",
    "start": "1059280",
    "end": "1061200"
  },
  {
    "text": "all of this is routed into the logging",
    "start": "1061200",
    "end": "1063120"
  },
  {
    "text": "subsystem which is then stored on disk",
    "start": "1063120",
    "end": "1066320"
  },
  {
    "text": "uh standard out and standard error are",
    "start": "1066320",
    "end": "1068160"
  },
  {
    "text": "merged together into one stream",
    "start": "1068160",
    "end": "1071039"
  },
  {
    "text": "uh the stream",
    "start": "1071039",
    "end": "1073520"
  },
  {
    "text": "is rotated regularly typically it goes",
    "start": "1073520",
    "end": "1076480"
  },
  {
    "text": "through five rotations uh either by time",
    "start": "1076480",
    "end": "1079200"
  },
  {
    "text": "or by size uh on the on the node",
    "start": "1079200",
    "end": "1082799"
  },
  {
    "text": "so",
    "start": "1082799",
    "end": "1084000"
  },
  {
    "text": "uh kubecon logs only accesses the last",
    "start": "1084000",
    "end": "1087360"
  },
  {
    "text": "log in the rotation so that's something",
    "start": "1087360",
    "end": "1089679"
  },
  {
    "text": "important to know",
    "start": "1089679",
    "end": "1091280"
  },
  {
    "text": "um logs also can be retrieved for the",
    "start": "1091280",
    "end": "1093840"
  },
  {
    "text": "previous container instance which is",
    "start": "1093840",
    "end": "1095919"
  },
  {
    "text": "handy",
    "start": "1095919",
    "end": "1096960"
  },
  {
    "text": "if the previous container happened to",
    "start": "1096960",
    "end": "1098720"
  },
  {
    "text": "fail due to an error you can access the",
    "start": "1098720",
    "end": "1101039"
  },
  {
    "text": "previous container's logs to perform",
    "start": "1101039",
    "end": "1102799"
  },
  {
    "text": "debugging",
    "start": "1102799",
    "end": "1105360"
  },
  {
    "text": "here are some examples",
    "start": "1105600",
    "end": "1107919"
  },
  {
    "text": "of",
    "start": "1107919",
    "end": "1109039"
  },
  {
    "text": "here's some examples of retrieving logs",
    "start": "1109039",
    "end": "1111840"
  },
  {
    "text": "on the nodes the first one is simply",
    "start": "1111840",
    "end": "1115760"
  },
  {
    "text": "simply getting the logs out",
    "start": "1115760",
    "end": "1117919"
  },
  {
    "text": "for",
    "start": "1117919",
    "end": "1119360"
  },
  {
    "text": "my nginx deployment",
    "start": "1119360",
    "end": "1122000"
  },
  {
    "text": "in this case it's getting all containers",
    "start": "1122000",
    "end": "1124000"
  },
  {
    "text": "within the nginx deployment which is uh",
    "start": "1124000",
    "end": "1126720"
  },
  {
    "text": "which is handy",
    "start": "1126720",
    "end": "1128320"
  },
  {
    "text": "keep in mind that you can use label",
    "start": "1128320",
    "end": "1130880"
  },
  {
    "text": "label matching",
    "start": "1130880",
    "end": "1132640"
  },
  {
    "text": "for",
    "start": "1132640",
    "end": "1134640"
  },
  {
    "text": "for logging uh so in this",
    "start": "1134640",
    "end": "1137280"
  },
  {
    "text": "next example",
    "start": "1137280",
    "end": "1138960"
  },
  {
    "text": "uh what i'm doing is uh i'm getting logs",
    "start": "1138960",
    "end": "1142240"
  },
  {
    "text": "uh for all uh containers uh with the uh",
    "start": "1142240",
    "end": "1146960"
  },
  {
    "text": "label of app engine x",
    "start": "1146960",
    "end": "1150000"
  },
  {
    "text": "i'm adding a prefix on that so i know",
    "start": "1150000",
    "end": "1152000"
  },
  {
    "text": "exactly which container it's coming from",
    "start": "1152000",
    "end": "1154240"
  },
  {
    "text": "and i get the output so",
    "start": "1154240",
    "end": "1156960"
  },
  {
    "text": "that's handy if you're looking at a",
    "start": "1156960",
    "end": "1158160"
  },
  {
    "text": "group of containers that are associated",
    "start": "1158160",
    "end": "1160480"
  },
  {
    "text": "with a particular application for",
    "start": "1160480",
    "end": "1162080"
  },
  {
    "text": "instance",
    "start": "1162080",
    "end": "1165080"
  },
  {
    "text": "next i'm going to talk to you about coop",
    "start": "1166559",
    "end": "1168320"
  },
  {
    "text": "cuddle attach",
    "start": "1168320",
    "end": "1169840"
  },
  {
    "text": "like logs couple attach allows you to",
    "start": "1169840",
    "end": "1172240"
  },
  {
    "text": "deal with the output from standard out",
    "start": "1172240",
    "end": "1174160"
  },
  {
    "text": "and standard error",
    "start": "1174160",
    "end": "1176000"
  },
  {
    "text": "unlike logs it allows you to deal with",
    "start": "1176000",
    "end": "1178640"
  },
  {
    "text": "standard out and standard errors",
    "start": "1178640",
    "end": "1180080"
  },
  {
    "text": "separately as well as gives you access",
    "start": "1180080",
    "end": "1182240"
  },
  {
    "text": "to standard in",
    "start": "1182240",
    "end": "1183600"
  },
  {
    "text": "so you can use coupe pedal attached to",
    "start": "1183600",
    "end": "1185600"
  },
  {
    "text": "get access to",
    "start": "1185600",
    "end": "1187200"
  },
  {
    "text": "all three of these standard streams",
    "start": "1187200",
    "end": "1189520"
  },
  {
    "text": "for terminal access or for separate",
    "start": "1189520",
    "end": "1192559"
  },
  {
    "text": "access to standard out and standard",
    "start": "1192559",
    "end": "1194400"
  },
  {
    "text": "error",
    "start": "1194400",
    "end": "1195520"
  },
  {
    "text": "you'll be given the option to allocate a",
    "start": "1195520",
    "end": "1197440"
  },
  {
    "text": "tty uh which allows full interactive",
    "start": "1197440",
    "end": "1200640"
  },
  {
    "text": "access to",
    "start": "1200640",
    "end": "1201840"
  },
  {
    "text": "shell for example that's",
    "start": "1201840",
    "end": "1204640"
  },
  {
    "text": "running in your pod",
    "start": "1204640",
    "end": "1207679"
  },
  {
    "text": "uh here's a very simple example of coop",
    "start": "1207679",
    "end": "1210320"
  },
  {
    "text": "cuddle attach",
    "start": "1210320",
    "end": "1211840"
  },
  {
    "text": "uh here i'm running cue cuddle attached",
    "start": "1211840",
    "end": "1214240"
  },
  {
    "text": "to redirect standard out in standard air",
    "start": "1214240",
    "end": "1217120"
  },
  {
    "text": "uh from my nginx deployment pod",
    "start": "1217120",
    "end": "1220880"
  },
  {
    "text": "in namespace demo one",
    "start": "1220880",
    "end": "1224400"
  },
  {
    "text": "so",
    "start": "1224960",
    "end": "1225840"
  },
  {
    "text": "i'm going to take a slight digression",
    "start": "1225840",
    "end": "1228240"
  },
  {
    "text": "and talk about coop cuddle run",
    "start": "1228240",
    "end": "1231600"
  },
  {
    "text": "talk about kubeco run because this is",
    "start": "1231600",
    "end": "1234720"
  },
  {
    "text": "closely related to coop cuddle attach",
    "start": "1234720",
    "end": "1237760"
  },
  {
    "text": "so",
    "start": "1237760",
    "end": "1239360"
  },
  {
    "text": "here in this example i'm using coop",
    "start": "1239360",
    "end": "1241679"
  },
  {
    "text": "cuddle run",
    "start": "1241679",
    "end": "1243039"
  },
  {
    "text": "to",
    "start": "1243039",
    "end": "1244159"
  },
  {
    "text": "run a pod couple run is basically a",
    "start": "1244159",
    "end": "1246159"
  },
  {
    "text": "quick way of getting a pod up and",
    "start": "1246159",
    "end": "1247679"
  },
  {
    "text": "running",
    "start": "1247679",
    "end": "1248480"
  },
  {
    "text": "for a specific container",
    "start": "1248480",
    "end": "1250320"
  },
  {
    "text": "in this case it's just running busy box",
    "start": "1250320",
    "end": "1254240"
  },
  {
    "text": "here i can specify",
    "start": "1254240",
    "end": "1257039"
  },
  {
    "text": "dash the options dash i and dash t",
    "start": "1257039",
    "end": "1260480"
  },
  {
    "text": "i allocate standard in",
    "start": "1260480",
    "end": "1262640"
  },
  {
    "text": "uh dash t",
    "start": "1262640",
    "end": "1264400"
  },
  {
    "text": "uh allocates a tty",
    "start": "1264400",
    "end": "1267360"
  },
  {
    "text": "and here i can see the effects of uh",
    "start": "1267360",
    "end": "1270559"
  },
  {
    "text": "specifying the dash t",
    "start": "1270559",
    "end": "1272720"
  },
  {
    "text": "below",
    "start": "1272720",
    "end": "1274480"
  },
  {
    "text": "so once i do the couple run uh it's",
    "start": "1274480",
    "end": "1277280"
  },
  {
    "text": "going to log me in",
    "start": "1277280",
    "end": "1279280"
  },
  {
    "text": "uh to the container uh give me a command",
    "start": "1279280",
    "end": "1282400"
  },
  {
    "text": "prompt and i can go ahead and type tty",
    "start": "1282400",
    "end": "1285440"
  },
  {
    "text": "um",
    "start": "1285440",
    "end": "1287039"
  },
  {
    "text": "here you can see that i have a tty",
    "start": "1287039",
    "end": "1289120"
  },
  {
    "text": "allocated on",
    "start": "1289120",
    "end": "1290559"
  },
  {
    "text": "pts zero",
    "start": "1290559",
    "end": "1292320"
  },
  {
    "text": "and if i take a look at the file",
    "start": "1292320",
    "end": "1294159"
  },
  {
    "text": "descriptors for my first process you can",
    "start": "1294159",
    "end": "1296960"
  },
  {
    "text": "see that all of these are routed to ttys",
    "start": "1296960",
    "end": "1299919"
  },
  {
    "text": "or rather to the tty",
    "start": "1299919",
    "end": "1302640"
  },
  {
    "text": "that i've allocated",
    "start": "1302640",
    "end": "1305280"
  },
  {
    "text": "this is a slightly different version of",
    "start": "1305280",
    "end": "1308080"
  },
  {
    "text": "coop cuddle run",
    "start": "1308080",
    "end": "1309440"
  },
  {
    "text": "and you can see here i've left off the t",
    "start": "1309440",
    "end": "1312000"
  },
  {
    "text": "option but i left the eye option on",
    "start": "1312000",
    "end": "1314799"
  },
  {
    "text": "so i go ahead and run busy box and it's",
    "start": "1314799",
    "end": "1317679"
  },
  {
    "text": "going to attach to it once again",
    "start": "1317679",
    "end": "1319760"
  },
  {
    "text": "and hit enter a few times and this is",
    "start": "1319760",
    "end": "1322559"
  },
  {
    "text": "going to allow me to execute commands",
    "start": "1322559",
    "end": "1325440"
  },
  {
    "text": "here i'm going to run tty just as i did",
    "start": "1325440",
    "end": "1328159"
  },
  {
    "text": "in the previous example",
    "start": "1328159",
    "end": "1330159"
  },
  {
    "text": "and you can see",
    "start": "1330159",
    "end": "1331440"
  },
  {
    "text": "not a tty since i haven't allocated a",
    "start": "1331440",
    "end": "1334080"
  },
  {
    "text": "tty",
    "start": "1334080",
    "end": "1335440"
  },
  {
    "text": "and if i look for my file descriptors uh",
    "start": "1335440",
    "end": "1337840"
  },
  {
    "text": "for the first process you can see that",
    "start": "1337840",
    "end": "1340159"
  },
  {
    "text": "these file descriptors are all forwarded",
    "start": "1340159",
    "end": "1342240"
  },
  {
    "text": "pipes these pipes presumably go over the",
    "start": "1342240",
    "end": "1344400"
  },
  {
    "text": "network to my local client",
    "start": "1344400",
    "end": "1346720"
  },
  {
    "text": "which allows us access",
    "start": "1346720",
    "end": "1350080"
  },
  {
    "text": "so",
    "start": "1350880",
    "end": "1351840"
  },
  {
    "text": "now",
    "start": "1351840",
    "end": "1352640"
  },
  {
    "text": "coupe cuddle uh run actually uh you can",
    "start": "1352640",
    "end": "1355840"
  },
  {
    "text": "think of it as executing two commands",
    "start": "1355840",
    "end": "1358000"
  },
  {
    "text": "the run command itself and a separate",
    "start": "1358000",
    "end": "1360000"
  },
  {
    "text": "attach",
    "start": "1360000",
    "end": "1361520"
  },
  {
    "text": "so here i can use run coupe cuddle run",
    "start": "1361520",
    "end": "1364720"
  },
  {
    "text": "with the same options but at the very",
    "start": "1364720",
    "end": "1366640"
  },
  {
    "text": "end i'm going to say attach equals false",
    "start": "1366640",
    "end": "1370159"
  },
  {
    "text": "this tells kubeco run",
    "start": "1370159",
    "end": "1372640"
  },
  {
    "text": "not to run and attach after you've run",
    "start": "1372640",
    "end": "1374799"
  },
  {
    "text": "the pod",
    "start": "1374799",
    "end": "1376000"
  },
  {
    "text": "uh this will just run the pod in the",
    "start": "1376000",
    "end": "1377679"
  },
  {
    "text": "background and wait for an attach which",
    "start": "1377679",
    "end": "1380640"
  },
  {
    "text": "i'm doing here",
    "start": "1380640",
    "end": "1383280"
  },
  {
    "text": "here i can go ahead and attach to it",
    "start": "1383280",
    "end": "1385679"
  },
  {
    "text": "again i specify my pod and",
    "start": "1385679",
    "end": "1389280"
  },
  {
    "text": "as before i can go ahead and",
    "start": "1389280",
    "end": "1391840"
  },
  {
    "text": "run commands in that pod",
    "start": "1391840",
    "end": "1395200"
  },
  {
    "text": "so",
    "start": "1395679",
    "end": "1397520"
  },
  {
    "text": "i'm going to show you a couple examples",
    "start": "1397520",
    "end": "1399200"
  },
  {
    "text": "that show you the various effects of uh",
    "start": "1399200",
    "end": "1403280"
  },
  {
    "text": "of the options",
    "start": "1403280",
    "end": "1404799"
  },
  {
    "text": "uh from coo cuddle run on coop cuddle",
    "start": "1404799",
    "end": "1406720"
  },
  {
    "text": "attach",
    "start": "1406720",
    "end": "1408720"
  },
  {
    "text": "so here i'm running coop cuddle run uh",
    "start": "1408720",
    "end": "1411760"
  },
  {
    "text": "dash int so i'm allocating standard n",
    "start": "1411760",
    "end": "1414559"
  },
  {
    "text": "and a tty",
    "start": "1414559",
    "end": "1416720"
  },
  {
    "text": "i'm going to run that pod in the",
    "start": "1416720",
    "end": "1418799"
  },
  {
    "text": "background with attach equals false and",
    "start": "1418799",
    "end": "1421200"
  },
  {
    "text": "then later on i'll go ahead and attach",
    "start": "1421200",
    "end": "1423120"
  },
  {
    "text": "to it",
    "start": "1423120",
    "end": "1424159"
  },
  {
    "text": "and in this case i'm going to attach to",
    "start": "1424159",
    "end": "1426000"
  },
  {
    "text": "it",
    "start": "1426000",
    "end": "1426720"
  },
  {
    "text": "but i'm going to redirect standard out",
    "start": "1426720",
    "end": "1428559"
  },
  {
    "text": "and standard error to separate files",
    "start": "1428559",
    "end": "1432559"
  },
  {
    "text": "i run that i hit return a couple times",
    "start": "1433440",
    "end": "1436559"
  },
  {
    "text": "and since i've",
    "start": "1436559",
    "end": "1438159"
  },
  {
    "text": "attached standard in i can type commands",
    "start": "1438159",
    "end": "1441279"
  },
  {
    "text": "so in this first example i'm going to",
    "start": "1441279",
    "end": "1443840"
  },
  {
    "text": "echo the string standard out",
    "start": "1443840",
    "end": "1446080"
  },
  {
    "text": "to standard out",
    "start": "1446080",
    "end": "1448240"
  },
  {
    "text": "i'm going to echo standard error out to",
    "start": "1448240",
    "end": "1451840"
  },
  {
    "text": "a",
    "start": "1451840",
    "end": "1452960"
  },
  {
    "text": "file descriptor 2 which is standard",
    "start": "1452960",
    "end": "1454720"
  },
  {
    "text": "error",
    "start": "1454720",
    "end": "1455520"
  },
  {
    "text": "and then i'm going to log out by hitting",
    "start": "1455520",
    "end": "1457600"
  },
  {
    "text": "control d",
    "start": "1457600",
    "end": "1458720"
  },
  {
    "text": "so",
    "start": "1458720",
    "end": "1459600"
  },
  {
    "text": "i can then inspect",
    "start": "1459600",
    "end": "1461840"
  },
  {
    "text": "the standard out and standard error",
    "start": "1461840",
    "end": "1464400"
  },
  {
    "text": "files to see what was actually put in",
    "start": "1464400",
    "end": "1466320"
  },
  {
    "text": "there",
    "start": "1466320",
    "end": "1467279"
  },
  {
    "text": "and you can see here in standard out it",
    "start": "1467279",
    "end": "1469760"
  },
  {
    "text": "got both the output uh from standard out",
    "start": "1469760",
    "end": "1473279"
  },
  {
    "text": "and standard error",
    "start": "1473279",
    "end": "1475200"
  },
  {
    "text": "um and if i can't if i cat standard",
    "start": "1475200",
    "end": "1477840"
  },
  {
    "text": "error you can see that it only says if",
    "start": "1477840",
    "end": "1480640"
  },
  {
    "text": "you see this command prompt try to press",
    "start": "1480640",
    "end": "1482320"
  },
  {
    "text": "enter if you don't see command prompt",
    "start": "1482320",
    "end": "1483600"
  },
  {
    "text": "try to press enter",
    "start": "1483600",
    "end": "1486480"
  },
  {
    "text": "so here by specifying the t option it's",
    "start": "1486880",
    "end": "1489679"
  },
  {
    "text": "folded",
    "start": "1489679",
    "end": "1490960"
  },
  {
    "text": "standard out and standard error",
    "start": "1490960",
    "end": "1493360"
  },
  {
    "text": "into the same stream",
    "start": "1493360",
    "end": "1495360"
  },
  {
    "text": "that is the standard out stream",
    "start": "1495360",
    "end": "1498880"
  },
  {
    "text": "if i leave off the t option uh here",
    "start": "1499200",
    "end": "1503279"
  },
  {
    "text": "when i run when i",
    "start": "1503279",
    "end": "1505520"
  },
  {
    "text": "run the pod and then i do the same as i",
    "start": "1505520",
    "end": "1508000"
  },
  {
    "text": "did before with the redirections",
    "start": "1508000",
    "end": "1510640"
  },
  {
    "text": "and run the same commands you can see",
    "start": "1510640",
    "end": "1513039"
  },
  {
    "text": "here that the output and the files are",
    "start": "1513039",
    "end": "1514880"
  },
  {
    "text": "going to be different this actually",
    "start": "1514880",
    "end": "1516640"
  },
  {
    "text": "separates standard out and standard",
    "start": "1516640",
    "end": "1518480"
  },
  {
    "text": "error",
    "start": "1518480",
    "end": "1519440"
  },
  {
    "text": "so i can treat each stream separately",
    "start": "1519440",
    "end": "1521840"
  },
  {
    "text": "very handy for debugging",
    "start": "1521840",
    "end": "1525120"
  },
  {
    "text": "so couple attach allows you to forward",
    "start": "1525679",
    "end": "1528960"
  },
  {
    "text": "your standard streams locally to your",
    "start": "1528960",
    "end": "1531200"
  },
  {
    "text": "client which is very handy",
    "start": "1531200",
    "end": "1533840"
  },
  {
    "text": "if",
    "start": "1533840",
    "end": "1535039"
  },
  {
    "text": "you'd like to be able to split out",
    "start": "1535039",
    "end": "1536559"
  },
  {
    "text": "standard error in standard out",
    "start": "1536559",
    "end": "1538799"
  },
  {
    "text": "then you should not use the terminal",
    "start": "1538799",
    "end": "1541360"
  },
  {
    "text": "allocation",
    "start": "1541360",
    "end": "1542559"
  },
  {
    "text": "in the pod",
    "start": "1542559",
    "end": "1543840"
  },
  {
    "text": "either in the tty options within the pod",
    "start": "1543840",
    "end": "1547360"
  },
  {
    "text": "or when you use something like color run",
    "start": "1547360",
    "end": "1549760"
  },
  {
    "text": "or couple exactly",
    "start": "1549760",
    "end": "1552799"
  },
  {
    "text": "so that's it uh proxies pods and ports",
    "start": "1555440",
    "end": "1559200"
  },
  {
    "text": "uh what a",
    "start": "1559200",
    "end": "1561279"
  },
  {
    "text": "very cursory overview of what i've",
    "start": "1561279",
    "end": "1562960"
  },
  {
    "text": "covered today",
    "start": "1562960",
    "end": "1564240"
  },
  {
    "text": "uh is that uh cuddle proxy gives you",
    "start": "1564240",
    "end": "1566960"
  },
  {
    "text": "direct access to your api server which",
    "start": "1566960",
    "end": "1569600"
  },
  {
    "text": "can be very handy uh",
    "start": "1569600",
    "end": "1572320"
  },
  {
    "text": "proxy not only gives you direct access",
    "start": "1572320",
    "end": "1574080"
  },
  {
    "text": "to your api server but allows you",
    "start": "1574080",
    "end": "1577039"
  },
  {
    "text": "to access http and https endpoints on",
    "start": "1577039",
    "end": "1581039"
  },
  {
    "text": "your pods and services which is very",
    "start": "1581039",
    "end": "1582840"
  },
  {
    "text": "handy um",
    "start": "1582840",
    "end": "1584880"
  },
  {
    "text": "coupe cable v9 uh can be used uh in",
    "start": "1584880",
    "end": "1588720"
  },
  {
    "text": "combination with uh the coop color proxy",
    "start": "1588720",
    "end": "1592080"
  },
  {
    "text": "uh and",
    "start": "1592080",
    "end": "1593279"
  },
  {
    "text": "just color commands for debugging uh it",
    "start": "1593279",
    "end": "1596080"
  },
  {
    "text": "outputs curl commands onto",
    "start": "1596080",
    "end": "1599760"
  },
  {
    "text": "into the log so you can copy and paste",
    "start": "1599760",
    "end": "1601919"
  },
  {
    "text": "those curl commands",
    "start": "1601919",
    "end": "1604000"
  },
  {
    "text": "for testing",
    "start": "1604000",
    "end": "1606640"
  },
  {
    "text": "so you can use uh couple with dash dash",
    "start": "1606720",
    "end": "1610159"
  },
  {
    "text": "raw which gives you very similar effect",
    "start": "1610159",
    "end": "1613120"
  },
  {
    "text": "to using the kukula proxy command uh",
    "start": "1613120",
    "end": "1616240"
  },
  {
    "text": "without having to start a proxy",
    "start": "1616240",
    "end": "1618799"
  },
  {
    "text": "this gives you access to",
    "start": "1618799",
    "end": "1620799"
  },
  {
    "text": "http",
    "start": "1620799",
    "end": "1622480"
  },
  {
    "text": "get delete and post methods which is",
    "start": "1622480",
    "end": "1624880"
  },
  {
    "text": "nice as before it also allows you to get",
    "start": "1624880",
    "end": "1629120"
  },
  {
    "text": "access to http and https endpoints on",
    "start": "1629120",
    "end": "1633200"
  },
  {
    "text": "your pods and services",
    "start": "1633200",
    "end": "1636559"
  },
  {
    "text": "couple of statch",
    "start": "1636720",
    "end": "1638399"
  },
  {
    "text": "allows you to forward standard streams",
    "start": "1638399",
    "end": "1640960"
  },
  {
    "text": "to your client",
    "start": "1640960",
    "end": "1642320"
  },
  {
    "text": "uh if you wish to split out standard",
    "start": "1642320",
    "end": "1644320"
  },
  {
    "text": "error in standard out uh remember that",
    "start": "1644320",
    "end": "1647200"
  },
  {
    "text": "to not allocate a tty on your pod or",
    "start": "1647200",
    "end": "1649919"
  },
  {
    "text": "container",
    "start": "1649919",
    "end": "1652919"
  },
  {
    "text": "so and last but not least uh port",
    "start": "1654159",
    "end": "1656559"
  },
  {
    "text": "forwarding forwards uh tcp traffic",
    "start": "1656559",
    "end": "1659840"
  },
  {
    "text": "uh by http uh two uh from a pod or",
    "start": "1659840",
    "end": "1664080"
  },
  {
    "text": "service",
    "start": "1664080",
    "end": "1665039"
  },
  {
    "text": "um the http2 sometimes can get in the",
    "start": "1665039",
    "end": "1667840"
  },
  {
    "text": "way of using proxies so be mindful of",
    "start": "1667840",
    "end": "1670480"
  },
  {
    "text": "that and it will not forward udp traffic",
    "start": "1670480",
    "end": "1674799"
  },
  {
    "text": "so that's it i hope you enjoyed the",
    "start": "1674799",
    "end": "1677360"
  },
  {
    "text": "presentation",
    "start": "1677360",
    "end": "1678640"
  },
  {
    "text": "uh here are a couple references um",
    "start": "1678640",
    "end": "1683200"
  },
  {
    "text": "one covers uh proxies and the last one",
    "start": "1683200",
    "end": "1685919"
  },
  {
    "text": "is quite good it's all about cluster",
    "start": "1685919",
    "end": "1688320"
  },
  {
    "text": "access a similar topic to this",
    "start": "1688320",
    "end": "1690320"
  },
  {
    "text": "presentation",
    "start": "1690320",
    "end": "1691919"
  },
  {
    "text": "so thank you i hope it was helpful",
    "start": "1691919",
    "end": "1696840"
  }
]