[
  {
    "text": "good afternoon everyone my name is omkar bhatt i am an engineering manager at castin by veeam",
    "start": "80",
    "end": "6879"
  },
  {
    "text": "my focus has been in the areas of authentication role-based access control multi-cluster management for the",
    "start": "6879",
    "end": "13679"
  },
  {
    "text": "purposes of data protection of applications in kubernetes",
    "start": "13679",
    "end": "18960"
  },
  {
    "text": "this is through our product k10 that we've built at castin",
    "start": "18960",
    "end": "24640"
  },
  {
    "text": "really grateful to be here in person today to be during doing this tutorial in front of all of you",
    "start": "25199",
    "end": "31119"
  },
  {
    "text": "super grateful to the reviewers and committee that spent so much time reviewing the proposals and accepting my",
    "start": "31119",
    "end": "37760"
  },
  {
    "text": "proposal so very happy to be here i'm a first time speaker at kubecon",
    "start": "37760",
    "end": "44440"
  },
  {
    "text": "now before i move ahead to the other slides for the tutorial today a few",
    "start": "44960",
    "end": "50160"
  },
  {
    "text": "things i want to um highlight you'll see that there's a qr code at the bottom right corner of my intro slide so do",
    "start": "50160",
    "end": "59120"
  },
  {
    "text": "make use of that to access the github repo that i've created for the purposes of today's tutorial",
    "start": "59120",
    "end": "65680"
  },
  {
    "text": "it has a lot of prerequisites that you you should set up in order to go through today's tutorial",
    "start": "65680",
    "end": "72799"
  },
  {
    "text": "so that's one there's also a url there right at the bottom which will take you to the same link",
    "start": "72799",
    "end": "80000"
  },
  {
    "text": "the next thing i want to highlight is i will pause about three times for 10 minutes in",
    "start": "80000",
    "end": "86560"
  },
  {
    "text": "various stages of the tutorial to help unblock you guys if you have questions and if you're stuck",
    "start": "86560",
    "end": "93439"
  },
  {
    "text": "and lucky me i have my team from castin who's going to help the audience here as",
    "start": "93439",
    "end": "99680"
  },
  {
    "text": "well so during the breaks i'll walk down and we'll help you if you if you're stuck somewhere so i",
    "start": "99680",
    "end": "106159"
  },
  {
    "text": "have sylvan and matt from the product team at castin and i have tom and lee from the engineering team at castle so",
    "start": "106159",
    "end": "112880"
  },
  {
    "text": "thank you so much guys for helping out today",
    "start": "112880",
    "end": "116640"
  },
  {
    "text": "all right so let's go to the agenda next so today i'll talk about why",
    "start": "120479",
    "end": "125600"
  },
  {
    "text": "you might want to attend this tutorial hopefully some of you have already seen the proposal and that's why you're here",
    "start": "125600",
    "end": "132480"
  },
  {
    "text": "but i'll double click on that a little and then i'll talk about what are active directory and ldap",
    "start": "132480",
    "end": "139360"
  },
  {
    "text": "we'll introduce the application that we're going to be deploying today for today's tutorial that's the application",
    "start": "139360",
    "end": "145599"
  },
  {
    "text": "that we're going to secure i'll cover open ldap dex",
    "start": "145599",
    "end": "151800"
  },
  {
    "text": "oauth2proxy which is another open source project we'll then go through the prerequisites",
    "start": "151800",
    "end": "157280"
  },
  {
    "text": "again and we'll set up open ldap decks",
    "start": "157280",
    "end": "162959"
  },
  {
    "text": "over through proxy and the application as part of the tutorial i will show a demo i will be going",
    "start": "162959",
    "end": "169440"
  },
  {
    "text": "through the same steps just like you guys today and i'll show you a demo of what secure access to that application looks",
    "start": "169440",
    "end": "176319"
  },
  {
    "text": "like at the end of the tutorial and then we'll do more q a",
    "start": "176319",
    "end": "181680"
  },
  {
    "text": "so that's the agenda",
    "start": "181680",
    "end": "185239"
  },
  {
    "text": "all right so why attend this tutorial you might be in that class of users",
    "start": "186800",
    "end": "192959"
  },
  {
    "text": "who's thinking about migrating applications to kubernetes and you're thinking about hey i don't",
    "start": "192959",
    "end": "198959"
  },
  {
    "text": "want to reinvent the wheel when it comes to authentication you might have standardized on using",
    "start": "198959",
    "end": "205360"
  },
  {
    "text": "active directory in your organization and you might want to use that for meeting your authentication needs in a",
    "start": "205360",
    "end": "212239"
  },
  {
    "text": "kubernetes cluster as well if that's the case then you're in the",
    "start": "212239",
    "end": "217280"
  },
  {
    "text": "right tutorial you might be in another class of users who's not interested in migration but",
    "start": "217280",
    "end": "224480"
  },
  {
    "text": "you're just deploying new applications in kubernetes and you want to leverage your active directory server",
    "start": "224480",
    "end": "230959"
  },
  {
    "text": "for authenticating access to that app",
    "start": "230959",
    "end": "235439"
  },
  {
    "text": "if yes then you're in the right tutorial if not yeah you can get out of the room",
    "start": "236400",
    "end": "242319"
  },
  {
    "text": "i'm just kidding i'm just kidding just you know stick around",
    "start": "242319",
    "end": "247200"
  },
  {
    "text": "and i want to touch a little bit upon why am i doing doing this tutorial today",
    "start": "247920",
    "end": "253680"
  },
  {
    "text": "so i've been with casting for about a little more than two years in my time at castin i work with multiple",
    "start": "253680",
    "end": "259120"
  },
  {
    "text": "organizations to install our product k-10 with active directory based",
    "start": "259120",
    "end": "264240"
  },
  {
    "text": "authentication enabled so in when the requirement came up initially while i was at castin i was",
    "start": "264240",
    "end": "271199"
  },
  {
    "text": "the engineer responsible for integrating the open source project decks in order",
    "start": "271199",
    "end": "276479"
  },
  {
    "text": "to meet this active directory authentication requirement and so i want to use this opportunity",
    "start": "276479",
    "end": "282080"
  },
  {
    "text": "today to share what i've learned um through my experiences of configuring",
    "start": "282080",
    "end": "287680"
  },
  {
    "text": "and using decks for this and and so i'm really excited about being able to do that today",
    "start": "287680",
    "end": "295479"
  },
  {
    "text": "right so what is active directory it's a directory service developed by microsoft for windows domain networks",
    "start": "297040",
    "end": "305440"
  },
  {
    "text": "it uses the lightweight directory access protocol and other services like kerberos and dns",
    "start": "305440",
    "end": "311919"
  },
  {
    "text": "but we're not going to dive deep into that in today's session",
    "start": "311919",
    "end": "317280"
  },
  {
    "text": "and so the next question is what is that lightweight directory access protocol in short it's called ldap",
    "start": "319280",
    "end": "325280"
  },
  {
    "text": "it's an open vendor neutral standard for accessing and maintaining a",
    "start": "325280",
    "end": "330800"
  },
  {
    "text": "directory service a distributed directory service so you can think of an active directory",
    "start": "330800",
    "end": "337039"
  },
  {
    "text": "server or ldap server containing the usernames and passwords for users",
    "start": "337039",
    "end": "342880"
  },
  {
    "text": "and a client application can authenticate access to it",
    "start": "342880",
    "end": "348160"
  },
  {
    "text": "by talking to this ldap server or active directory server so they can validate users that are trying to access that",
    "start": "348160",
    "end": "354560"
  },
  {
    "text": "application and so i told you in the agenda that",
    "start": "354560",
    "end": "361120"
  },
  {
    "text": "we'll be talking about openldac so open ldap is an open source implementation of",
    "start": "361120",
    "end": "366400"
  },
  {
    "text": "ldap now for today's tutorial we'll be using an open ldap server as a stand-in for an",
    "start": "366400",
    "end": "372800"
  },
  {
    "text": "active directory server so i'm going to show you the kubernetes yaml for an open ldap deployment an",
    "start": "372800",
    "end": "379840"
  },
  {
    "text": "open-end app service we'll work through deploying that and that's going to be your ldap server for the purposes of",
    "start": "379840",
    "end": "386560"
  },
  {
    "text": "today's tutorial and demo all right so now we introduce the super",
    "start": "386560",
    "end": "393919"
  },
  {
    "text": "critical application that we want to secure and that's pacman so at the end of this tutorial you will have",
    "start": "393919",
    "end": "400319"
  },
  {
    "text": "pac-man installed on your machines and we'll be securing access to it by",
    "start": "400319",
    "end": "407039"
  },
  {
    "text": "authenticating against an open ldap server running in your kubernetes cluster too",
    "start": "407039",
    "end": "413599"
  },
  {
    "text": "all right so we know that's our goal we have pac-man application and we want to",
    "start": "417280",
    "end": "422560"
  },
  {
    "text": "secure access to it so i'm going to go and talk about option one first and will eventually lead to",
    "start": "422560",
    "end": "428479"
  },
  {
    "text": "option three which is our final solution so in option one you can rewrite the pacman application so that anytime",
    "start": "428479",
    "end": "436479"
  },
  {
    "text": "someone tries to access it you can send an ldap request to the open",
    "start": "436479",
    "end": "441759"
  },
  {
    "text": "ldap server and have pacman process ldap responses that are being sent by that ldap server",
    "start": "441759",
    "end": "450160"
  },
  {
    "text": "right it's possible we can spend time on looking at the code rewriting it but that's not the goal for today's tutorial",
    "start": "450160",
    "end": "457840"
  },
  {
    "text": "for to for today we want to not rewrite the application at all in order to secure access to it so that's",
    "start": "457840",
    "end": "464400"
  },
  {
    "text": "our goal so let's look at the pros and cons of option one here right",
    "start": "464400",
    "end": "469680"
  },
  {
    "text": "what's the pro here you have a nicely packaged open ldap server there's a container image you can deploy it in a",
    "start": "469680",
    "end": "475680"
  },
  {
    "text": "kubernetes cluster and now you have a server to authenticate against",
    "start": "475680",
    "end": "481280"
  },
  {
    "text": "but the con here is you have to rewrite the app and we want to avoid that",
    "start": "481280",
    "end": "486800"
  },
  {
    "text": "so that takes us to option two so in option two i've",
    "start": "486800",
    "end": "493599"
  },
  {
    "text": "introduced a new box here called dex in the middle dex",
    "start": "493599",
    "end": "499280"
  },
  {
    "text": "is an identity service that uses open id connect in short called oidc you'll hear that very often",
    "start": "499280",
    "end": "507440"
  },
  {
    "text": "it uses oidc to do authentication on behalf of other applications",
    "start": "507440",
    "end": "514479"
  },
  {
    "text": "so over here as you know i told you the disadvantage of option one was you had to rewrite the pacman app so that it can",
    "start": "514479",
    "end": "522159"
  },
  {
    "text": "speak ldap so we've solved that problem here by offloading that problem to dex so dex is",
    "start": "522159",
    "end": "528320"
  },
  {
    "text": "going to be the one that's going to send and receive ldap requests and responses",
    "start": "528320",
    "end": "534640"
  },
  {
    "text": "so so far so good that solves one part of the problem but the disadvantage in option two is you still have to rewrite",
    "start": "534640",
    "end": "541120"
  },
  {
    "text": "the pacman app so that it can talk oauth or oidc with dex so there's still some",
    "start": "541120",
    "end": "547680"
  },
  {
    "text": "work to be done and we're super lazy in this room today we're not going to rewrite the app at all",
    "start": "547680",
    "end": "553839"
  },
  {
    "text": "and and obviously you know there's an option three coming to solve this problem as well",
    "start": "553839",
    "end": "560680"
  },
  {
    "text": "so i touched upon a few terms oidc and oauth which i haven't introduced yet so",
    "start": "562000",
    "end": "567200"
  },
  {
    "text": "that i'm going to do that before i move to option three so or 2.0 is an industry standard for",
    "start": "567200",
    "end": "575200"
  },
  {
    "text": "authorization think of the situation where an application wants",
    "start": "575200",
    "end": "581519"
  },
  {
    "text": "to authorize a second application to access its data or features in the",
    "start": "581519",
    "end": "587600"
  },
  {
    "text": "first application so that's where oauth 2.0 comes in it acts as an authorization layer",
    "start": "587600",
    "end": "595760"
  },
  {
    "text": "now openid connect is a thin layer on top of oauth 2.0",
    "start": "595760",
    "end": "600800"
  },
  {
    "text": "which allows an application to obtain login and profile information about the",
    "start": "600800",
    "end": "605920"
  },
  {
    "text": "user right so you have the authorization layer in the form of oauth 2.0 and you",
    "start": "605920",
    "end": "611200"
  },
  {
    "text": "have open id connect which acts as the identity authentication layer so that's",
    "start": "611200",
    "end": "616240"
  },
  {
    "text": "the difference between the two",
    "start": "616240",
    "end": "619839"
  },
  {
    "text": "right so this brings us to option three right we have four boxes over here we",
    "start": "621920",
    "end": "627120"
  },
  {
    "text": "have the pacman app and in order to solve the problem in option",
    "start": "627120",
    "end": "632800"
  },
  {
    "text": "2 what if i told you we could use a reverse proxy to handle authentication and",
    "start": "632800",
    "end": "638399"
  },
  {
    "text": "authorization for us so the answer is yes that's another open source project project called oauth 2",
    "start": "638399",
    "end": "645279"
  },
  {
    "text": "proxy which we will be deploying in our tutorial today so or2 proxy",
    "start": "645279",
    "end": "651680"
  },
  {
    "text": "is the one that we offload the oauth work to all we have to do",
    "start": "651680",
    "end": "656959"
  },
  {
    "text": "is redirect http requests meant for pacman to the oauth2 proxy",
    "start": "656959",
    "end": "663600"
  },
  {
    "text": "which will start the authentication flow as the authentication flow goes to dex",
    "start": "663600",
    "end": "669360"
  },
  {
    "text": "and the ldap server if the user entered the right credentials and if they were authenticated successfully",
    "start": "669360",
    "end": "676320"
  },
  {
    "text": "then the flow will go back all the way to decks to work to proxy and then we re redirect the user back to",
    "start": "676320",
    "end": "683200"
  },
  {
    "text": "the application so so there you have it you you have not you've met our goal of not rewriting the",
    "start": "683200",
    "end": "690240"
  },
  {
    "text": "application by deploying two open source projects that we'll be double clicking on in",
    "start": "690240",
    "end": "696720"
  },
  {
    "text": "today's tutorial",
    "start": "696720",
    "end": "700120"
  },
  {
    "text": "all right so for the prerequisites um you know note that today's tutorial will",
    "start": "706240",
    "end": "712480"
  },
  {
    "text": "work only on x864 or amd 64 based machines so unfortunately arm is not supported by",
    "start": "712480",
    "end": "719920"
  },
  {
    "text": "the pacman app that we're going to install in today's lab",
    "start": "719920",
    "end": "725680"
  },
  {
    "text": "now the packages that you want to install are all accessible in the url or qr code that i've pointed to here so i'd",
    "start": "725680",
    "end": "732959"
  },
  {
    "text": "suggest if you don't have your laptops out yet get them out get started on installing",
    "start": "732959",
    "end": "740160"
  },
  {
    "text": "the prerequisites for today's tutorial so this is a good point to take a 10",
    "start": "740160",
    "end": "747519"
  },
  {
    "text": "minute break a 5 to 10 minute break to let you guys install all that's required",
    "start": "747519",
    "end": "754320"
  },
  {
    "text": "so i'm going to just go ahead and do that please feel free to raise your hand if you have any questions",
    "start": "754320",
    "end": "760639"
  },
  {
    "text": "while downloading the prereqs and one of us will come over to you",
    "start": "760639",
    "end": "768279"
  },
  {
    "text": "so while you're doing that i'll talk a little bit about kind so kind represents kubernetes in docker",
    "start": "774160",
    "end": "781600"
  },
  {
    "text": "it's a quick and easy way to install a kubernetes cluster inside a set of docker containers",
    "start": "781600",
    "end": "787519"
  },
  {
    "text": "you can use brew install kind if you are on mac if you are on windows then you can",
    "start": "787519",
    "end": "793680"
  },
  {
    "text": "use the choco package manager to install kind or use your favorite linux package",
    "start": "793680",
    "end": "800240"
  },
  {
    "text": "manager if you are on linux",
    "start": "800240",
    "end": "804440"
  },
  {
    "text": "is",
    "start": "832639",
    "end": "835639"
  },
  {
    "text": "in case you don't have a laptop today then it's a good opportunity to connect with people in your community",
    "start": "848160",
    "end": "855040"
  },
  {
    "text": "use your buddy's laptop to go through the tutorial",
    "start": "855040",
    "end": "859800"
  },
  {
    "text": "hello yep okay so i'm going to proceed on to the next part of the tutorial",
    "start": "1029439",
    "end": "1034640"
  },
  {
    "text": "um i will take another break once we get to a certain point and we can unblock",
    "start": "1034640",
    "end": "1040558"
  },
  {
    "text": "you if you're stuck on the prerequisites but but now as you can see on the screen",
    "start": "1040559",
    "end": "1046880"
  },
  {
    "text": "i've highlighted just the open ldap box here our first step in in this lab",
    "start": "1046880",
    "end": "1052799"
  },
  {
    "text": "is going to be about setting up just the open ldap service",
    "start": "1052799",
    "end": "1058399"
  },
  {
    "text": "so we will deploy it in a kubernetes cluster we'll add users and groups to the ldap",
    "start": "1059919",
    "end": "1066160"
  },
  {
    "text": "server and we will use ldap utilities for interacting with this server so you'll",
    "start": "1066160",
    "end": "1072240"
  },
  {
    "text": "be able to add a group using the utility command ldap add and you will also use ldap",
    "start": "1072240",
    "end": "1079520"
  },
  {
    "text": "search to search for users and groups in this ldap server",
    "start": "1079520",
    "end": "1085360"
  },
  {
    "text": "all right so if you haven't seen it yet this is the page that the qr code takes you to",
    "start": "1092720",
    "end": "1097919"
  },
  {
    "text": "um all the prereqs are over here so i'm going to go ahead and start with",
    "start": "1097919",
    "end": "1104240"
  },
  {
    "text": "the open ldap part of our tutorial",
    "start": "1104240",
    "end": "1108840"
  },
  {
    "text": "so to begin with we are going to use kind in order to create a cluster on my",
    "start": "1112320",
    "end": "1117760"
  },
  {
    "text": "laptop so you can use kind create cluster",
    "start": "1117760",
    "end": "1123600"
  },
  {
    "text": "dash dash name and hand over the name of the cluster that you want to create in this case it's kubecon",
    "start": "1123600",
    "end": "1133160"
  },
  {
    "text": "you can use kind get clusters to list the clusters that you have created also note that once this cluster is",
    "start": "1140320",
    "end": "1147600"
  },
  {
    "text": "created your tube config will be set up appropriately so that a cubecut will get",
    "start": "1147600",
    "end": "1153280"
  },
  {
    "text": "namespaces is against the new kind cluster that you just created",
    "start": "1153280",
    "end": "1159120"
  },
  {
    "text": "so once the cluster is created i went ahead and cloned the github repository that we are going to use for today's",
    "start": "1159120",
    "end": "1165520"
  },
  {
    "text": "tutorial i created a namespace named openldap",
    "start": "1165520",
    "end": "1172799"
  },
  {
    "text": "and then i'm creating a secret of a generic secret named openldap and there are three fields that",
    "start": "1172799",
    "end": "1179679"
  },
  {
    "text": "are going to be present in the secret the first one is the admin password for",
    "start": "1179679",
    "end": "1184960"
  },
  {
    "text": "the ldap admin the second is a field called users and i've added three users in this command",
    "start": "1184960",
    "end": "1193360"
  },
  {
    "text": "so that's production admin production basic and production config",
    "start": "1193360",
    "end": "1199120"
  },
  {
    "text": "and then the third field of the secret is a field called passwords that contains the passwords for the",
    "start": "1199120",
    "end": "1205120"
  },
  {
    "text": "three users",
    "start": "1205120",
    "end": "1207840"
  },
  {
    "text": "right so the secret has been created and the next step that i've executed is i've done a cat of the open ldap",
    "start": "1215840",
    "end": "1223120"
  },
  {
    "text": "deployment that we're going to be working with today so let's take a look at that before we",
    "start": "1223120",
    "end": "1229679"
  },
  {
    "text": "proceed there's a metadata section there's a specs section the key thing i want to",
    "start": "1229679",
    "end": "1235039"
  },
  {
    "text": "highlight in the open ldap deployment is that in the specs section for the containers we have set up a few",
    "start": "1235039",
    "end": "1241919"
  },
  {
    "text": "environment variables the first one is the ldap admin username that's called admin the other three",
    "start": "1241919",
    "end": "1248960"
  },
  {
    "text": "environment variables are sourced from the secret that we created in the previous step",
    "start": "1248960",
    "end": "1255360"
  },
  {
    "text": "so that's why you'll see a secret key ref and the name of the secret is the open ldap secret",
    "start": "1255360",
    "end": "1263720"
  },
  {
    "text": "i then run cubecuttle create dash and open ldap dash f open ldap deployment to",
    "start": "1263760",
    "end": "1269440"
  },
  {
    "text": "create this deployment next let's look at the service",
    "start": "1269440",
    "end": "1277200"
  },
  {
    "text": "definition for the openld app service",
    "start": "1277200",
    "end": "1281519"
  },
  {
    "text": "so you'll see here it's a service named open ldap of type cluster ip we're not",
    "start": "1283280",
    "end": "1288400"
  },
  {
    "text": "interested in exposing this service outside of our cluster today so it's of type cluster ip",
    "start": "1288400",
    "end": "1295120"
  },
  {
    "text": "it's going to be listening on port 1389 and the target port is also 1389 which",
    "start": "1295120",
    "end": "1301679"
  },
  {
    "text": "matches with the deployments container port as well",
    "start": "1301679",
    "end": "1306880"
  },
  {
    "text": "now i then run quick cuddle create dash f using that file to create the open ldap service",
    "start": "1307120",
    "end": "1314158"
  },
  {
    "text": "let's watch for the pods until they come up everything's good so far it's in running",
    "start": "1317039",
    "end": "1322559"
  },
  {
    "text": "state and all the pods are ready",
    "start": "1322559",
    "end": "1326799"
  },
  {
    "text": "so next we are going to run the port forward command to make sure that the openldap service is",
    "start": "1331360",
    "end": "1338159"
  },
  {
    "text": "listening on the localhost ip address on port 1389",
    "start": "1338159",
    "end": "1344080"
  },
  {
    "text": "okay so the service is up we finished the first stage of our tutorial we're almost there we're going",
    "start": "1345440",
    "end": "1351679"
  },
  {
    "text": "to interact with this ldap server next",
    "start": "1351679",
    "end": "1355840"
  },
  {
    "text": "right so next what we're going to look at is we'll create a new group so you notice",
    "start": "1359280",
    "end": "1365679"
  },
  {
    "text": "that we've already created three users while we were creating the open ldap deployment",
    "start": "1365679",
    "end": "1371120"
  },
  {
    "text": "now we're going to create a group called pacman admins so the way you do this with",
    "start": "1371120",
    "end": "1377440"
  },
  {
    "text": "anything to do with ldap is you create a file with the dot ldif format",
    "start": "1377440",
    "end": "1383280"
  },
  {
    "text": "and i'll get into what ldif is in just a bit",
    "start": "1383280",
    "end": "1388960"
  },
  {
    "text": "there are multiple lines here you'll see a dn representing the distinguished name",
    "start": "1388960",
    "end": "1397520"
  },
  {
    "text": "of the record that represents a group in the ldap server the common name cn is pacman admins",
    "start": "1397520",
    "end": "1406080"
  },
  {
    "text": "and there are two members in this group there's production admin and production basic so notice i haven't",
    "start": "1406080",
    "end": "1413520"
  },
  {
    "text": "added the production config user to this group we have three users and only two out of them are members of the pacman",
    "start": "1413520",
    "end": "1420159"
  },
  {
    "text": "admins group so ldif stands for ldap data interchange",
    "start": "1420159",
    "end": "1426480"
  },
  {
    "text": "format it's plain text format that's used for representing directory content",
    "start": "1426480",
    "end": "1432159"
  },
  {
    "text": "and update requests in this case our update request is about the addition of a group",
    "start": "1432159",
    "end": "1440919"
  },
  {
    "text": "you know as i described earlier we went through dn and cn so i've copied just one line from the",
    "start": "1444640",
    "end": "1451600"
  },
  {
    "text": "ldif file to describe what each field is we have already covered distinguished name and",
    "start": "1451600",
    "end": "1456720"
  },
  {
    "text": "common name there's also a field called ou which represents an organizational",
    "start": "1456720",
    "end": "1462000"
  },
  {
    "text": "unit that the user is a member of and then there's dc which represents",
    "start": "1462000",
    "end": "1467279"
  },
  {
    "text": "domain components so if for example your organization's website or domain name is",
    "start": "1467279",
    "end": "1474400"
  },
  {
    "text": "www.example.org then your domain components would say dc equal to www comma dc equal to example",
    "start": "1474400",
    "end": "1483200"
  },
  {
    "text": "comma dc equal to org",
    "start": "1483200",
    "end": "1487240"
  },
  {
    "text": "so let's carry on with the next part of the tutorial so",
    "start": "1494000",
    "end": "1499520"
  },
  {
    "text": "we are now going to interact with this ldap server",
    "start": "1499520",
    "end": "1504080"
  },
  {
    "text": "so you'll see i'm chatting the pacman admin group.ldif file we've already looked at that",
    "start": "1508400",
    "end": "1515840"
  },
  {
    "text": "so next i'm running the ldap add command the dash x represents simple",
    "start": "1516880",
    "end": "1522240"
  },
  {
    "text": "authentication the uppercase h represents the ldap server that we're talking to",
    "start": "1522240",
    "end": "1529039"
  },
  {
    "text": "and as you know we've already started a port forward command that's why it's listening on localhost colon 1389.",
    "start": "1529039",
    "end": "1537840"
  },
  {
    "text": "the uppercase d represents the distinguished name of the admin user",
    "start": "1537840",
    "end": "1544640"
  },
  {
    "text": "which is cn equal to admin dc called example dc equal to org so think of that",
    "start": "1544960",
    "end": "1550240"
  },
  {
    "text": "as the username of the ldap admin that's interacting with the with the",
    "start": "1550240",
    "end": "1555440"
  },
  {
    "text": "ldap server the lowercase w is that admins password",
    "start": "1555440",
    "end": "1560799"
  },
  {
    "text": "and you'll remember this admin password was the password we created when we deployed openldap",
    "start": "1560799",
    "end": "1567919"
  },
  {
    "text": "and the dash f accepts a file in this case it's the ldif file",
    "start": "1567919",
    "end": "1573279"
  },
  {
    "text": "you'll see a message from our ldap server that says the entry has been added",
    "start": "1573279",
    "end": "1579919"
  },
  {
    "text": "so next we're going to use the ldap search command against the same ldap server",
    "start": "1581120",
    "end": "1587279"
  },
  {
    "text": "most of the arguments are the same here the only difference is the lower case b",
    "start": "1587279",
    "end": "1593279"
  },
  {
    "text": "so what the lowercase b tells ldap search is the route at which to perform",
    "start": "1593279",
    "end": "1598559"
  },
  {
    "text": "the search of records in this case the lowercase b is set to dc equal to",
    "start": "1598559",
    "end": "1605840"
  },
  {
    "text": "example comma dc equal to org which means we're searching for records all the records under that domain",
    "start": "1605840",
    "end": "1613840"
  },
  {
    "text": "so you'll see in the output there's a distinguished name for the organizational unit named users",
    "start": "1614559",
    "end": "1623360"
  },
  {
    "text": "there are three records there's one record for the production admin user",
    "start": "1623360",
    "end": "1628480"
  },
  {
    "text": "a record for the production basic user a third one for the production config",
    "start": "1628480",
    "end": "1634240"
  },
  {
    "text": "user there's a group called readers that was created by default when the open ldap",
    "start": "1634240",
    "end": "1640960"
  },
  {
    "text": "server was deployed it has all three users inside it so make note of that because you'll see you'll",
    "start": "1640960",
    "end": "1647440"
  },
  {
    "text": "you'll see the groups show up eventually when we perform authentication successfully",
    "start": "1647440",
    "end": "1654000"
  },
  {
    "text": "so keep keep in mind that all members are in the group readers but only two",
    "start": "1654000",
    "end": "1659120"
  },
  {
    "text": "members are in the group named pacman admins and this output is also confirmation",
    "start": "1659120",
    "end": "1664559"
  },
  {
    "text": "that the ldap ad actually worked",
    "start": "1664559",
    "end": "1669000"
  },
  {
    "text": "[Music] all right so",
    "start": "1682460",
    "end": "1688559"
  },
  {
    "text": "okay so we've reached that part of our tutorial where everything related to the open ldap box",
    "start": "1691120",
    "end": "1697600"
  },
  {
    "text": "is is all set up for us we're next going to move to deploying",
    "start": "1697600",
    "end": "1703760"
  },
  {
    "text": "decks notice that my red box is a little bit extended because",
    "start": "1703760",
    "end": "1709520"
  },
  {
    "text": "while configuring decks we are going to be adding configuration that's related",
    "start": "1709520",
    "end": "1714960"
  },
  {
    "text": "to the open ldap as well as the oauth 2 proxy which is a client of dex",
    "start": "1714960",
    "end": "1722919"
  },
  {
    "text": "now before i run through the commands i wanted to highlight the values file that i'm going",
    "start": "1725679",
    "end": "1731440"
  },
  {
    "text": "to be using to install dex so i'm going to be using helm for for dex",
    "start": "1731440",
    "end": "1737200"
  },
  {
    "text": "helm accepts a values file and that's what i'm showing here on the screen right now",
    "start": "1737200",
    "end": "1743360"
  },
  {
    "text": "lots of values here i've sort of come decomposed it into three pieces which",
    "start": "1743360",
    "end": "1749200"
  },
  {
    "text": "i've listed on the left there's an ldap connector piece which tells dex that it",
    "start": "1749200",
    "end": "1754559"
  },
  {
    "text": "should communicate with the ldap server that's the dex issuer config which is about dex itself",
    "start": "1754559",
    "end": "1761200"
  },
  {
    "text": "and then there's the client config which is about the oauth 2 proxy that talks to dex",
    "start": "1761200",
    "end": "1767840"
  },
  {
    "text": "so let's focus on just the ldap connected config",
    "start": "1767919",
    "end": "1772960"
  },
  {
    "text": "so you'll see there's a host config that points to the ldap server that we have deployed on localhost but i'm not",
    "start": "1774399",
    "end": "1781520"
  },
  {
    "text": "using localhost ip here i'm using kubernetes's naming convention for a service which is",
    "start": "1781520",
    "end": "1787600"
  },
  {
    "text": "servicename.namespacename and then the port number that it's listening",
    "start": "1787600",
    "end": "1792840"
  },
  {
    "text": "on there's an ssl section which is not relevant for today it's it's all demo so",
    "start": "1792840",
    "end": "1798240"
  },
  {
    "text": "we're not going to care about ssl but you should definitely care about it in production",
    "start": "1798240",
    "end": "1804720"
  },
  {
    "text": "we have the bind dn and bind password up top over here so that represents the admin",
    "start": "1805039",
    "end": "1811520"
  },
  {
    "text": "credentials for the purposes of today's demo so it's the bind",
    "start": "1811520",
    "end": "1816720"
  },
  {
    "text": "distinguished name and bind password for the ldap admin",
    "start": "1816720",
    "end": "1822000"
  },
  {
    "text": "next we have two sections that we'll cover user search and group search",
    "start": "1822000",
    "end": "1827120"
  },
  {
    "text": "so let's start with user search here so the user search config is telling dex",
    "start": "1827120",
    "end": "1832480"
  },
  {
    "text": "how to look for users in the ldap server",
    "start": "1832480",
    "end": "1837840"
  },
  {
    "text": "there's a base dn and an optional filter so the base dn tells dex you know where",
    "start": "1837840",
    "end": "1844320"
  },
  {
    "text": "do i start my search in the ldap server it's it's the root of the search or",
    "start": "1844320",
    "end": "1850399"
  },
  {
    "text": "bayes distinguished name in other words the optional filter lets you filter down",
    "start": "1850399",
    "end": "1856320"
  },
  {
    "text": "the records that are being returned by the server so instead of getting overwhelmed by too many records you can",
    "start": "1856320",
    "end": "1862399"
  },
  {
    "text": "use the filter to reduce that the username",
    "start": "1862399",
    "end": "1867760"
  },
  {
    "text": "field here tells dex that the uid field in the ldap record",
    "start": "1867760",
    "end": "1873760"
  },
  {
    "text": "should be treated as a username so in an active directory environment this might typically be something like a",
    "start": "1873760",
    "end": "1880080"
  },
  {
    "text": "sam account name or i think that's uh user principle as well so this is",
    "start": "1880080",
    "end": "1885279"
  },
  {
    "text": "something where you should discuss your active directory team should get involved and they will give you the best",
    "start": "1885279",
    "end": "1892000"
  },
  {
    "text": "practices for your organization about which field is the right username field but since we're using openldap for today",
    "start": "1892000",
    "end": "1900000"
  },
  {
    "text": "as a stand-in we're just using uid as the username",
    "start": "1900000",
    "end": "1906000"
  },
  {
    "text": "next you'll see uh email id name and preferred username so keep in",
    "start": "1906000",
    "end": "1911600"
  },
  {
    "text": "mind if you remember i said dex is an openid connect provider it's going to generate a json",
    "start": "1911600",
    "end": "1919039"
  },
  {
    "text": "web token for you every time you successfully authenticate with it",
    "start": "1919039",
    "end": "1924240"
  },
  {
    "text": "this token is going to have fields like email id name and preferred username",
    "start": "1924240",
    "end": "1930320"
  },
  {
    "text": "matter and all you're saying telling dex is to use the uid of a user's record to",
    "start": "1930320",
    "end": "1936159"
  },
  {
    "text": "populate the json token when authentication is successful",
    "start": "1936159",
    "end": "1941679"
  },
  {
    "text": "so similarly you have a group section that tells dex how to search for groups",
    "start": "1941679",
    "end": "1946880"
  },
  {
    "text": "that a user is a member of and once again just like the user search you have a base dn and a filter",
    "start": "1946880",
    "end": "1953519"
  },
  {
    "text": "and then you have this matching criteria that tells decks how to match a group",
    "start": "1953519",
    "end": "1959200"
  },
  {
    "text": "with a user record so if in our case if production admin is present in the",
    "start": "1959200",
    "end": "1965519"
  },
  {
    "text": "pacman admins group as a member then we are going to get a hit there and dex is going to return that group",
    "start": "1965519",
    "end": "1972480"
  },
  {
    "text": "so that was everything related to the ldap connector next let's move on to the dex config as",
    "start": "1973440",
    "end": "1980159"
  },
  {
    "text": "an issuer so the issuer url is the url where dex is going to be",
    "start": "1980159",
    "end": "1985760"
  },
  {
    "text": "available on as an oidc provider so in this case again i've used the",
    "start": "1985760",
    "end": "1992080"
  },
  {
    "text": "kubernetes naming convention of service name dot name space name",
    "start": "1992080",
    "end": "1997440"
  },
  {
    "text": "there's logging format it's just info level in this config so for storage types dex supports",
    "start": "1997440",
    "end": "2004559"
  },
  {
    "text": "multiple storage types for persistent storage there are database options you can look at dex's documentation to",
    "start": "2004559",
    "end": "2011600"
  },
  {
    "text": "learn more about it but for today's tutorial i'm just using the in-memory type implementation",
    "start": "2011600",
    "end": "2019360"
  },
  {
    "text": "and then you have the web config which indicates the clients that it allows",
    "start": "2019360",
    "end": "2025360"
  },
  {
    "text": "to connect to dex in this case we're allowing all clients to connect to decks",
    "start": "2025360",
    "end": "2030880"
  },
  {
    "text": "and it's going to listen on port 8080 okay so let's get to the last piece of",
    "start": "2030880",
    "end": "2037440"
  },
  {
    "text": "the helm values file and then we'll go and deploy dex so the last piece is the static client",
    "start": "2037440",
    "end": "2042960"
  },
  {
    "text": "config configuration so we're registering the oauth 2 proxy as a",
    "start": "2042960",
    "end": "2048560"
  },
  {
    "text": "client of dex here you have an id a secret and a redirect uri so the",
    "start": "2048560",
    "end": "2054800"
  },
  {
    "text": "redirect uri is important here what this is telling dex is if authentication is successful redirect to",
    "start": "2054800",
    "end": "2061440"
  },
  {
    "text": "this specific uri to continue the flow",
    "start": "2061440",
    "end": "2067078"
  },
  {
    "text": "okay so over here i'm going to continue the steps for deploying decks i've done a cat of the dex values file",
    "start": "2092960",
    "end": "2101040"
  },
  {
    "text": "you know this is inside the github repo that we have cloned under secure dash pacman dex",
    "start": "2101040",
    "end": "2107839"
  },
  {
    "text": "we've already gone through all the values let's proceed",
    "start": "2107839",
    "end": "2113119"
  },
  {
    "text": "so we're going to create a namespace called dex we're using helm as i mentioned earlier",
    "start": "2115599",
    "end": "2121280"
  },
  {
    "text": "so we're doing a helm repo ad dex with the url for dex's chart",
    "start": "2121280",
    "end": "2128079"
  },
  {
    "text": "and helm repo update dex to pull in the latest chart from there",
    "start": "2128079",
    "end": "2134240"
  },
  {
    "text": "so there's one thing left to do before we proceed to actually run helm install",
    "start": "2134800",
    "end": "2141119"
  },
  {
    "text": "in the helm values file that i have in the my github repo i haven't updated the bind password so",
    "start": "2141119",
    "end": "2148560"
  },
  {
    "text": "let's you know set the buy and password that before we proceed",
    "start": "2148560",
    "end": "2155800"
  },
  {
    "text": "having some trouble editing this file",
    "start": "2200079",
    "end": "2204680"
  },
  {
    "text": "yeah so it's it's not editing this file right now kind of",
    "start": "2219119",
    "end": "2224800"
  },
  {
    "text": "like as if it's stuck",
    "start": "2224800",
    "end": "2228599"
  },
  {
    "text": "okay let's just do that",
    "start": "2235680",
    "end": "2240920"
  },
  {
    "text": "yep edit anyway here",
    "start": "2252079",
    "end": "2258800"
  },
  {
    "text": "okay that works let's just try that",
    "start": "2258800",
    "end": "2264119"
  },
  {
    "text": "okay i could probably just continue from the",
    "start": "2296240",
    "end": "2301359"
  },
  {
    "text": "other shelf",
    "start": "2301359",
    "end": "2303920"
  },
  {
    "text": "working okay thanks",
    "start": "2307920",
    "end": "2314320"
  },
  {
    "text": "all right so i edited the values file so that i entered the admin password for",
    "start": "2315200",
    "end": "2320400"
  },
  {
    "text": "the ldap admin and it the it went it made progress and run helm",
    "start": "2320400",
    "end": "2326320"
  },
  {
    "text": "install using the updated values file we ran a watch on coupe cuddle get",
    "start": "2326320",
    "end": "2332640"
  },
  {
    "text": "pods in the text name space and that's what is running right now it's in running state",
    "start": "2332640",
    "end": "2339760"
  },
  {
    "text": "so we're good so far so good",
    "start": "2339760",
    "end": "2344359"
  },
  {
    "text": "i think that was affecting the screen a little because of zooming in",
    "start": "2364079",
    "end": "2371200"
  },
  {
    "text": "all right so thanks so we have po dex port forwarded so that it's listening on",
    "start": "2372160",
    "end": "2377920"
  },
  {
    "text": "localhost and port 5556 now",
    "start": "2377920",
    "end": "2383799"
  },
  {
    "text": "all right so that's stage two for us in in among the four boxes that we have in",
    "start": "2399599",
    "end": "2404960"
  },
  {
    "text": "our end-to-end flow we have deployed open ldap and we've deployed decks they're both",
    "start": "2404960",
    "end": "2410400"
  },
  {
    "text": "accepting connections um so this is a good point to",
    "start": "2410400",
    "end": "2416640"
  },
  {
    "text": "is does anyone want to pause at this point are you stuck",
    "start": "2416640",
    "end": "2421680"
  },
  {
    "text": "can you make progress i guess i'll just keep",
    "start": "2421680",
    "end": "2427599"
  },
  {
    "text": "going forward then don't see any hands raised okay so let's just keep going",
    "start": "2427599",
    "end": "2434680"
  },
  {
    "text": "okay so the next uh thing we are going to deploy is oauth through proxy",
    "start": "2440240",
    "end": "2446960"
  },
  {
    "text": "um so as i said it's a reverse proxy for handling",
    "start": "2447760",
    "end": "2452800"
  },
  {
    "text": "oauth for us we're going to have dex as the oidc provider that oauth through proxy",
    "start": "2452800",
    "end": "2459040"
  },
  {
    "text": "interacts with and once authentication is successful oauth2",
    "start": "2459040",
    "end": "2464319"
  },
  {
    "text": "proxy will redirect to pacman",
    "start": "2464319",
    "end": "2468920"
  },
  {
    "text": "okay so over here we're going to create the namespace pacman where our application is going to live but before",
    "start": "2491599",
    "end": "2498720"
  },
  {
    "text": "we deploy the application we're going to deploy oauth to proxy first",
    "start": "2498720",
    "end": "2503760"
  },
  {
    "text": "so you'll see i have cd into the oauth 2 proxy directory of our github repo",
    "start": "2503760",
    "end": "2509760"
  },
  {
    "text": "and i've done a cat on the oauth 2 proxy deployment",
    "start": "2509760",
    "end": "2514800"
  },
  {
    "text": "and then i've executed quick cuddle create f of the deployment file so before we",
    "start": "2514800",
    "end": "2520400"
  },
  {
    "text": "proceed let me explain what the deployment looks like and what you know what's important over here for",
    "start": "2520400",
    "end": "2527040"
  },
  {
    "text": "configuring oauth to proxy appropriately",
    "start": "2527040",
    "end": "2531520"
  },
  {
    "text": "the key thing to look at here is under the spec for the containers we have",
    "start": "2533200",
    "end": "2539040"
  },
  {
    "text": "the provider set to oidc which and the",
    "start": "2539040",
    "end": "2544560"
  },
  {
    "text": "url for that provider is represented by the oidc issuer url here you'll see it's set to",
    "start": "2544560",
    "end": "2551280"
  },
  {
    "text": "dex.dex which is running in our kubernetes cluster already",
    "start": "2551280",
    "end": "2556560"
  },
  {
    "text": "the next important piece of config is the oauth 2 client id the oauth 2 client",
    "start": "2558880",
    "end": "2564319"
  },
  {
    "text": "secret and the redirect url so this represents what to proxy as a",
    "start": "2564319",
    "end": "2570079"
  },
  {
    "text": "client and if you remember from our dex values file we had registered an oauth 2 client there so",
    "start": "2570079",
    "end": "2576720"
  },
  {
    "text": "i want to highlight that over here right now because it's important for",
    "start": "2576720",
    "end": "2582400"
  },
  {
    "text": "the client config index to match with the oauth client config you're seeing here",
    "start": "2582400",
    "end": "2588160"
  },
  {
    "text": "for the authentication to flow to work successfully so if you are facing some problems this is a good place to go and",
    "start": "2588160",
    "end": "2594560"
  },
  {
    "text": "debug later the last piece of config that i want to",
    "start": "2594560",
    "end": "2600480"
  },
  {
    "text": "point out before we move ahead is the upstream config you'll see that it's set to pacman dash actual dot pacman",
    "start": "2600480",
    "end": "2608800"
  },
  {
    "text": "so when authentication is successful from oauth to proxy's point of view the upstream url is the url that it's going",
    "start": "2608800",
    "end": "2615440"
  },
  {
    "text": "to redirect to or rather proxy to and we're going to set up the pacman",
    "start": "2615440",
    "end": "2621760"
  },
  {
    "text": "actual service uh towards the end of the demo",
    "start": "2621760",
    "end": "2626560"
  },
  {
    "text": "so we have done the deployment let's look at the or2 proxy service yaml it's of type cluster ip we're not",
    "start": "2631520",
    "end": "2638560"
  },
  {
    "text": "exposing it outside the cluster the port number is four one eight zero",
    "start": "2638560",
    "end": "2644240"
  },
  {
    "text": "we ran cubecuttle create dash f using the service file",
    "start": "2644240",
    "end": "2650880"
  },
  {
    "text": "let's watch for the pods and wait for them to be ready",
    "start": "2652880",
    "end": "2657599"
  },
  {
    "text": "so so far so good over here oauth2 proxy is running",
    "start": "2658400",
    "end": "2663838"
  },
  {
    "text": "and next we're going to port forward the oauth to proxy service as well it's going to be listening on localhost",
    "start": "2666160",
    "end": "2672640"
  },
  {
    "text": "ip and port number 4180",
    "start": "2672640",
    "end": "2676838"
  },
  {
    "text": "all right so we finished the third box now before we proceed",
    "start": "2682880",
    "end": "2689680"
  },
  {
    "text": "this is a step that we have to complete for this end-to-end flow to work",
    "start": "2689680",
    "end": "2696240"
  },
  {
    "text": "we want to edit the system's hosts file so that if the user",
    "start": "2696240",
    "end": "2701520"
  },
  {
    "text": "or when the user accesses the pacman app through the browser the browser will be able to redirect to",
    "start": "2701520",
    "end": "2707359"
  },
  {
    "text": "the local host address where the servers that is listening so",
    "start": "2707359",
    "end": "2712800"
  },
  {
    "text": "you know that we have deployed dex we have deployed oauth to proxy we have run port forward for both of",
    "start": "2712800",
    "end": "2718560"
  },
  {
    "text": "them and they're listening on the local host ip but how do you tell a browser to access those services you know there's",
    "start": "2718560",
    "end": "2724960"
  },
  {
    "text": "no we're not using dns to do that we're using the hosts file to do that redirection for us",
    "start": "2724960",
    "end": "2732240"
  },
  {
    "text": "so there are two lines one for decks and the other for the word to proxy service",
    "start": "2732240",
    "end": "2739560"
  },
  {
    "text": "so i'm going to go back to our github repo where we have our steps",
    "start": "2749440",
    "end": "2756359"
  },
  {
    "text": "so let's look at the hosts file and you'll see i have already added",
    "start": "2762480",
    "end": "2768560"
  },
  {
    "text": "lines for dex.dex and oauth2proxy.pacman",
    "start": "2768560",
    "end": "2773319"
  },
  {
    "text": "all right so now we're getting closer uh to the final workable demo we're going to install",
    "start": "2779359",
    "end": "2786319"
  },
  {
    "text": "pacman now using helm",
    "start": "2786319",
    "end": "2790560"
  },
  {
    "text": "so i'm going to run helm repo ad pacman with the url for the chart where we have",
    "start": "2797200",
    "end": "2803359"
  },
  {
    "text": "this app running",
    "start": "2803359",
    "end": "2806240"
  },
  {
    "text": "since i've already added it previously it says it exists i'm going to run helm repo update for",
    "start": "2808400",
    "end": "2814800"
  },
  {
    "text": "this particular helm project",
    "start": "2814800",
    "end": "2819920"
  },
  {
    "text": "everything looks good we'll now run helm install pac-man",
    "start": "2819920",
    "end": "2825839"
  },
  {
    "text": "in the pac-man name space so you you'll see helm dump and output",
    "start": "2825839",
    "end": "2833280"
  },
  {
    "text": "about the status of the installation",
    "start": "2833280",
    "end": "2837400"
  },
  {
    "text": "let's watch for the pods to come up so over here you'll see that the first entry is the oauth 2 proxy",
    "start": "2844880",
    "end": "2851680"
  },
  {
    "text": "pod that we deployed previously in the pacman namespace the second one is the pacman app that",
    "start": "2851680",
    "end": "2857599"
  },
  {
    "text": "has the logic for the game and the third one is about storing persistent data related to that",
    "start": "2857599",
    "end": "2864559"
  },
  {
    "text": "pacman application",
    "start": "2864559",
    "end": "2868040"
  },
  {
    "text": "so while we wait for that to complete let's talk about the next few steps here",
    "start": "2880880",
    "end": "2888880"
  },
  {
    "text": "once the pods are all ready i'm going to run port forward for the pacman application",
    "start": "2888880",
    "end": "2894160"
  },
  {
    "text": "and then try to access it from my browser without authentication right so we've set up the pieces",
    "start": "2894160",
    "end": "2900400"
  },
  {
    "text": "but there's some glue work still left and i'll show you that i can access it without authentication for now and we'll",
    "start": "2900400",
    "end": "2906480"
  },
  {
    "text": "fix it eventually so that it works with authentication",
    "start": "2906480",
    "end": "2911279"
  },
  {
    "text": "all right so we have all three parts running at this point",
    "start": "2913440",
    "end": "2918920"
  },
  {
    "text": "so i executed port forward of the service pacman and it's listening on port 1990",
    "start": "2929119",
    "end": "2935280"
  },
  {
    "text": "so any http traffic that i open on my browser is going to be forwarded to",
    "start": "2935280",
    "end": "2941359"
  },
  {
    "text": "port 1990",
    "start": "2941520",
    "end": "2944480"
  },
  {
    "text": "all right so you see that the pacman app is right now up and running i'm able to access it without authentication but the",
    "start": "2954640",
    "end": "2961599"
  },
  {
    "text": "whole goal of today was to secure access to this highly critical pacman app",
    "start": "2961599",
    "end": "2968760"
  },
  {
    "text": "and so that takes us to our next step",
    "start": "2972960",
    "end": "2977040"
  },
  {
    "text": "so if you remember from the diagram what i had mentioned was any http",
    "start": "2979280",
    "end": "2984960"
  },
  {
    "text": "traffic meant for pacman needs to be redirected to oauth to proxy and and to do that we're going to update",
    "start": "2984960",
    "end": "2991839"
  },
  {
    "text": "the pacman service to redirect it to port 4180 instead of the original port",
    "start": "2991839",
    "end": "2997119"
  },
  {
    "text": "8080 so i have these patch commands",
    "start": "2997119",
    "end": "3004000"
  },
  {
    "text": "ready here for doing this",
    "start": "3004000",
    "end": "3008640"
  },
  {
    "text": "let's stop the port forward for now so you'll see in the patch command it's",
    "start": "3010640",
    "end": "3015760"
  },
  {
    "text": "scoop cuddle patch service followed by the service name pacman pacma in the pacman namespace the type",
    "start": "3015760",
    "end": "3023119"
  },
  {
    "text": "of patch we're going to run is a json patch the operation",
    "start": "3023119",
    "end": "3028480"
  },
  {
    "text": "is the replace and what we are replacing is the path meant for the port of the service which",
    "start": "3028480",
    "end": "3034559"
  },
  {
    "text": "is slash spec slash port 0 slash target port and i'm setting it to the value of",
    "start": "3034559",
    "end": "3040200"
  },
  {
    "text": "4180 instead of the original 8080",
    "start": "3040200",
    "end": "3045359"
  },
  {
    "text": "the other the other thing that we have to update in the service",
    "start": "3046640",
    "end": "3052480"
  },
  {
    "text": "is the selector um that's that's going to be present in the service the select",
    "start": "3052480",
    "end": "3058000"
  },
  {
    "text": "is responsible for where which deployment that traffic has to be routed to",
    "start": "3058000",
    "end": "3064880"
  },
  {
    "text": "and so we're routing that traffic to oauth to proxy instead of the actual pacman app",
    "start": "3065359",
    "end": "3072960"
  },
  {
    "text": "so let's run port forward again and see what happens this time",
    "start": "3074880",
    "end": "3080160"
  },
  {
    "text": "let's go back to my tab and reload this and you'll see",
    "start": "3080800",
    "end": "3086240"
  },
  {
    "text": "so this is open id connects login page we have been redirected to the second",
    "start": "3086240",
    "end": "3091599"
  },
  {
    "text": "box in our flow since or2 proxy is configured with dex",
    "start": "3091599",
    "end": "3097200"
  },
  {
    "text": "as an open id connect provider you see a button show up here sign in with open id",
    "start": "3097200",
    "end": "3102559"
  },
  {
    "text": "connect so when i click here the flow is going to take me to dex's",
    "start": "3102559",
    "end": "3107680"
  },
  {
    "text": "login page right so i've come to a new window here",
    "start": "3107680",
    "end": "3114400"
  },
  {
    "text": "you'll see dex's logo show up here by default you'll see dex.dex here on in in the",
    "start": "3114400",
    "end": "3122000"
  },
  {
    "text": "browser tab on the top and notice the reason this works is because we updated the hosts file so that when",
    "start": "3122000",
    "end": "3128960"
  },
  {
    "text": "the browser accesses dex.dex it's being redirected to the local host port number",
    "start": "3128960",
    "end": "3134400"
  },
  {
    "text": "5556 where dex is listening",
    "start": "3134400",
    "end": "3139078"
  },
  {
    "text": "so i'm going to enter the credentials for our production admin user which we added in our ldap server",
    "start": "3139520",
    "end": "3147760"
  },
  {
    "text": "the password is test password admin",
    "start": "3147760",
    "end": "3153079"
  },
  {
    "text": "a quick login so hold off on the 403 for now and i'll explain a little bit about that later",
    "start": "3153119",
    "end": "3159839"
  },
  {
    "text": "but what has happened now is i did get authenticated successfully the flow came all the way back to earth to proxy",
    "start": "3159839",
    "end": "3168640"
  },
  {
    "text": "i just have to redo this flow again",
    "start": "3168800",
    "end": "3173599"
  },
  {
    "text": "all right so so this is where i want uh to reach as at this stage of the tutorial",
    "start": "3178319",
    "end": "3185440"
  },
  {
    "text": "so you saw the traffic redirected from pacman to auth to proxy",
    "start": "3186000",
    "end": "3191359"
  },
  {
    "text": "you saw the dex login screen i entered the production admins credentials which was correct",
    "start": "3191359",
    "end": "3198000"
  },
  {
    "text": "i got redirected back to dex and then to oauth to proxy and i got a fiver to bad",
    "start": "3198000",
    "end": "3203680"
  },
  {
    "text": "gateway error because we still have one step remaining which is the",
    "start": "3203680",
    "end": "3209920"
  },
  {
    "text": "arrow over here we still haven't completed this part of the puzzle we need to deploy a service that oauth",
    "start": "3209920",
    "end": "3217680"
  },
  {
    "text": "to proxy can redirect to and so that's going to be the last step to see the demo working end to end",
    "start": "3217680",
    "end": "3226680"
  },
  {
    "text": "so let's take a look at the final service that is going to help bridge everything that we need",
    "start": "3245119",
    "end": "3250960"
  },
  {
    "text": "so this service is called pacman actual which is the actual service that's going to serve traffic",
    "start": "3250960",
    "end": "3257920"
  },
  {
    "text": "it's of type cluster ip and the port is 8080",
    "start": "3257920",
    "end": "3263480"
  },
  {
    "text": "so i want to show you the oauth 2 proxy config again so that it puts things into context over",
    "start": "3264480",
    "end": "3271839"
  },
  {
    "text": "here so if you remember from the deployment",
    "start": "3271839",
    "end": "3277280"
  },
  {
    "text": "we have an upstream field that says it's going to redirect to the pacman actual service",
    "start": "3277280",
    "end": "3283440"
  },
  {
    "text": "on port 8080 so that's the service that we're deploying here",
    "start": "3283440",
    "end": "3289440"
  },
  {
    "text": "which is the final piece of this puzzle where we want to fix this part of the traffic flow",
    "start": "3289440",
    "end": "3297040"
  },
  {
    "text": "so let's create the pacman actual service",
    "start": "3304960",
    "end": "3310400"
  },
  {
    "text": "and then let's port forward again i'll go back to my browser and restart",
    "start": "3310400",
    "end": "3318079"
  },
  {
    "text": "the authentication flow",
    "start": "3318079",
    "end": "3322160"
  },
  {
    "text": "right so just repeating all the steps in the flow again i've been redirected to oauth to proxy",
    "start": "3323280",
    "end": "3330079"
  },
  {
    "text": "let's sign in i've been redirected to dex",
    "start": "3330079",
    "end": "3335480"
  },
  {
    "text": "i've entered the admins credentials just ignore for that for now i will",
    "start": "3339680",
    "end": "3345440"
  },
  {
    "text": "explain what's happening there again after a few slides",
    "start": "3345440",
    "end": "3350400"
  },
  {
    "text": "right so this time the flow went all the way from dex to oauth 2 and it went to the",
    "start": "3356720",
    "end": "3362079"
  },
  {
    "text": "upstream service called pacman actual and i can finally play pacman happily",
    "start": "3362079",
    "end": "3369440"
  },
  {
    "text": "without knowing that there's secure access to it nobody can really go and maybe delete my scores",
    "start": "3369440",
    "end": "3375680"
  },
  {
    "text": "maybe the high scores are really important",
    "start": "3375680",
    "end": "3380119"
  },
  {
    "text": "right so i just want to highlight that redirection part again where we changed the port 8080 to 4180",
    "start": "3391280",
    "end": "3399119"
  },
  {
    "text": "and the selectors in the pacman service to or to proxies deployment for the redirection to happen to earth",
    "start": "3399119",
    "end": "3405920"
  },
  {
    "text": "to proxy we saw the fiber to bad gateway and we",
    "start": "3405920",
    "end": "3413040"
  },
  {
    "text": "fixed that by deploying that last service called pacman actual",
    "start": "3413040",
    "end": "3419839"
  },
  {
    "text": "and then we went through the whole flow so now i just want to go back to",
    "start": "3422559",
    "end": "3427839"
  },
  {
    "text": "the 403 that we were seeing and to explain what was happening there",
    "start": "3427839",
    "end": "3435200"
  },
  {
    "text": "so you you've already noticed twice that during the login process i saw a 403",
    "start": "3436559",
    "end": "3441680"
  },
  {
    "text": "this is to do with the token that's being stored in the session",
    "start": "3441680",
    "end": "3448240"
  },
  {
    "text": "remember initially during my slides i said we don't want to rewrite the pacman app at all well that was mostly true",
    "start": "3448240",
    "end": "3455200"
  },
  {
    "text": "you do want to in if it's pac-man or any application that you want to deploy in your cluster",
    "start": "3455200",
    "end": "3460880"
  },
  {
    "text": "you have to have sign out and sign back in flows so your sign out flow is going to clear",
    "start": "3460880",
    "end": "3467920"
  },
  {
    "text": "sessions for you so that future sign ins don't hit errors such as the 403 that we",
    "start": "3467920",
    "end": "3473440"
  },
  {
    "text": "were seeing now the way you want to do that is over to proxy for example",
    "start": "3473440",
    "end": "3481520"
  },
  {
    "text": "has something called uh slash oauth 2. maybe this is",
    "start": "3481680",
    "end": "3488160"
  },
  {
    "text": "not very visible but in my url here i have slash or2 sign out so or2 proxy as a",
    "start": "3488160",
    "end": "3496640"
  },
  {
    "text": "service supports certain end points that let you handle this",
    "start": "3496640",
    "end": "3501760"
  },
  {
    "text": "sign out makes sure that the session is cleared so once i go to sign out it takes me to",
    "start": "3501760",
    "end": "3508559"
  },
  {
    "text": "oauth's login screen this time",
    "start": "3508559",
    "end": "3513920"
  },
  {
    "text": "if everything worked as i expected it shouldn't show me the 403 this time",
    "start": "3513920",
    "end": "3520880"
  },
  {
    "text": "if i log in so you see that i don't get a 403 this time because i cleared this session that i had previously and",
    "start": "3524079",
    "end": "3530559"
  },
  {
    "text": "i don't see that anymore and i'm redirected to pacman on successful login",
    "start": "3530559",
    "end": "3536799"
  },
  {
    "text": "alright so we're almost there i wanted to highlight the logs that you'll see in",
    "start": "3540960",
    "end": "3546559"
  },
  {
    "text": "decks that will help you understand what's happening index's back end",
    "start": "3546559",
    "end": "3551680"
  },
  {
    "text": "and and to also find out if the configuration that you made index is actually doing what it's supposed to",
    "start": "3551680",
    "end": "3557520"
  },
  {
    "text": "the logs will be useful for that purpose so here i have",
    "start": "3557520",
    "end": "3562720"
  },
  {
    "text": "four log messages that got generated when i logged in as the production admin",
    "start": "3562720",
    "end": "3569200"
  },
  {
    "text": "user so the first log here here is telling you how dex is performing a user search",
    "start": "3569200",
    "end": "3578079"
  },
  {
    "text": "you have the base dn from your dex config you have the optional filter called inet",
    "start": "3578799",
    "end": "3586240"
  },
  {
    "text": "org person and you have the uid set to the username that i entered on dex's login screen",
    "start": "3586240",
    "end": "3594720"
  },
  {
    "text": "the second log message here shows that dex was able to map the",
    "start": "3595280",
    "end": "3600400"
  },
  {
    "text": "production admin username to an actual ldap record with a distinguished name that looks",
    "start": "3600400",
    "end": "3606960"
  },
  {
    "text": "like this and you you'll remember this from the ldap search that we did against the open",
    "start": "3606960",
    "end": "3613119"
  },
  {
    "text": "ldap server so this is an example of a log when login is successful",
    "start": "3613119",
    "end": "3619680"
  },
  {
    "text": "the third log here is an info level log again that's showing how dex is doing a group search",
    "start": "3619680",
    "end": "3627599"
  },
  {
    "text": "this is again based on the config in the dex values file we have the base dn",
    "start": "3627599",
    "end": "3634480"
  },
  {
    "text": "and the optional filter from the group search section of dex's config",
    "start": "3634480",
    "end": "3640160"
  },
  {
    "text": "and we're looking for the member that we just found in the previous step",
    "start": "3640160",
    "end": "3645520"
  },
  {
    "text": "the last log is showing that login was successful a user was found and noticed the groups",
    "start": "3645520",
    "end": "3653839"
  },
  {
    "text": "readers and pacman admins is present in as per dex's logs which means it's going",
    "start": "3653839",
    "end": "3660240"
  },
  {
    "text": "to include it in the json web token that's going back to the client",
    "start": "3660240",
    "end": "3666000"
  },
  {
    "text": "you know my next slide is it's very identical to the previous one the difference is it's a different user",
    "start": "3667359",
    "end": "3673280"
  },
  {
    "text": "named production config and the other big difference is uh",
    "start": "3673280",
    "end": "3678559"
  },
  {
    "text": "remember i told you that there were two groups in the ldap server a group called readers that had all",
    "start": "3678559",
    "end": "3684480"
  },
  {
    "text": "three users and the group that we added today called pacman admins which had only two",
    "start": "3684480",
    "end": "3690799"
  },
  {
    "text": "so since the config user is not part of that pacman admins group you see just one group show up over here",
    "start": "3690799",
    "end": "3699160"
  },
  {
    "text": "all right so having gone through today's tutorial you've deployed open ldap decks",
    "start": "3702720",
    "end": "3709200"
  },
  {
    "text": "and over through proxy to sort of get a hands-on experience about how you can",
    "start": "3709200",
    "end": "3714480"
  },
  {
    "text": "authenticate access to applications using an open ldap server",
    "start": "3714480",
    "end": "3719520"
  },
  {
    "text": "when you are ready to move this to production you will want to figure out how to configure",
    "start": "3719520",
    "end": "3725680"
  },
  {
    "text": "decks so that it can talk to an active directory server maybe so a few things to highlight here when",
    "start": "3725680",
    "end": "3731359"
  },
  {
    "text": "you're when you are ready to do that and hopefully you walk away from here being confident enough to do that",
    "start": "3731359",
    "end": "3738160"
  },
  {
    "text": "you'll want to talk to your active directory team about the host and port number that the active directory server is",
    "start": "3738160",
    "end": "3744559"
  },
  {
    "text": "available on you definitely want to fix your ssl config so that it is secure and most",
    "start": "3744559",
    "end": "3750559"
  },
  {
    "text": "likely our active directory team is going to mandate that you do that",
    "start": "3750559",
    "end": "3756960"
  },
  {
    "text": "the other thing is you remember we used ldap admin credentials that's not a best practice in production",
    "start": "3756960",
    "end": "3764799"
  },
  {
    "text": "your active directory team will create a user for the purposes of",
    "start": "3764799",
    "end": "3770559"
  },
  {
    "text": "dex talking to the active directory server so you should use that dn and password up here",
    "start": "3770559",
    "end": "3778160"
  },
  {
    "text": "and i briefly touched upon this earlier too we said username uid here but in an",
    "start": "3778160",
    "end": "3784240"
  },
  {
    "text": "active directory scenario this would be something like sam account name",
    "start": "3784240",
    "end": "3789359"
  },
  {
    "text": "or i think it's principal name",
    "start": "3789359",
    "end": "3793279"
  },
  {
    "text": "i think that's everything uh active directory specific that i wanted to bring up here",
    "start": "3795119",
    "end": "3802000"
  },
  {
    "text": "all right so a few links for further reading we have dex idp dot io which is the",
    "start": "3802400",
    "end": "3809119"
  },
  {
    "text": "official dex website that has additional documentation so dex supports lots of other connectors not just ldap",
    "start": "3809119",
    "end": "3817200"
  },
  {
    "text": "you can do github-based authentication google saml connectors and and there's a long",
    "start": "3817200",
    "end": "3823280"
  },
  {
    "text": "list that you can go look up depending on your users needs or your own needs",
    "start": "3823280",
    "end": "3828799"
  },
  {
    "text": "there's a slack channel where the maintainers of decks are active and they will answer questions so highly",
    "start": "3828799",
    "end": "3835599"
  },
  {
    "text": "recommend joining that channel i have links for the or2 proxy project",
    "start": "3835599",
    "end": "3841039"
  },
  {
    "text": "as well that has great documentation about some of the configuration that i've shown you",
    "start": "3841039",
    "end": "3846880"
  },
  {
    "text": "in the oauth 2 proxy deployment we have the link for open ldap",
    "start": "3846880",
    "end": "3852720"
  },
  {
    "text": "and the last link is my github repo it's it's a public repo it'll always stay that way",
    "start": "3852720",
    "end": "3858400"
  },
  {
    "text": "uh if you want to go back and run through these steps all the prerequisites and the steps from",
    "start": "3858400",
    "end": "3863520"
  },
  {
    "text": "today's tutorial are present there",
    "start": "3863520",
    "end": "3867839"
  },
  {
    "text": "and that's and that's the tutorial for today hope you all enjoyed this and i'll keep it open for q a",
    "start": "3869680",
    "end": "3875839"
  },
  {
    "text": "if you want to come up to the mic and ask any questions i'll be happy to answer them or if you're stuck somewhere right now",
    "start": "3875839",
    "end": "3882720"
  },
  {
    "text": "in the tutorial we'll be happy to unblock you",
    "start": "3882720",
    "end": "3887119"
  },
  {
    "text": "the the last thing i want to touch on is at casting we are hiring you can look at",
    "start": "3888240",
    "end": "3893760"
  },
  {
    "text": "our castle dot io careers page if you are interested in working with us we have roles in the",
    "start": "3893760",
    "end": "3899200"
  },
  {
    "text": "backend team front end team automation and we have cloud native position open",
    "start": "3899200",
    "end": "3905599"
  },
  {
    "text": "as well so if you're interested come talk to me after the tutorial or even at castin's",
    "start": "3905599",
    "end": "3911280"
  },
  {
    "text": "booth and we'd love to connect with you um thank you everyone so it's a pleasure",
    "start": "3911280",
    "end": "3918240"
  },
  {
    "text": "being here",
    "start": "3918240",
    "end": "3921480"
  },
  {
    "text": "so if i wanted to can you hear me um can you check if the mic works up front",
    "start": "3926079",
    "end": "3932240"
  },
  {
    "text": "here yeah i think it's working yep there we go",
    "start": "3932240",
    "end": "3937520"
  },
  {
    "text": "so if i wanted to deploy donkey kong for example do i need to deploy another dex server and another uh proxy",
    "start": "3937520",
    "end": "3945280"
  },
  {
    "text": "a good question so you can reuse your dex server you remember i created it in a separate",
    "start": "3945280",
    "end": "3951839"
  },
  {
    "text": "name space you'd have to deploy a separate oauth to proxy though",
    "start": "3951839",
    "end": "3957440"
  },
  {
    "text": "for the donkey kong app you'd have to register it as a client index so there's a bit of config that",
    "start": "3957440",
    "end": "3963760"
  },
  {
    "text": "you have to update in the existing deck server notice from the values file",
    "start": "3963760",
    "end": "3969599"
  },
  {
    "text": "the static clients is an array so it can accept multiple clients so all you need to do is deploy donkey kong",
    "start": "3969599",
    "end": "3976319"
  },
  {
    "text": "a separate oauth 2 proxy for it and just update your dex config and that that will do",
    "start": "3976319",
    "end": "3982559"
  },
  {
    "text": "thank you thanks for the question yeah",
    "start": "3982559",
    "end": "3987240"
  },
  {
    "text": "all right so i think that's uh that's time then thank you very much for uh attending this tutorial i hope that this",
    "start": "3993440",
    "end": "4000160"
  },
  {
    "text": "was useful and you're walking away uh confident about how to deploy these projects",
    "start": "4000160",
    "end": "4005920"
  },
  {
    "text": "thank you so much for your time and have an awesome coupon everyone [Applause]",
    "start": "4005920",
    "end": "4014619"
  }
]