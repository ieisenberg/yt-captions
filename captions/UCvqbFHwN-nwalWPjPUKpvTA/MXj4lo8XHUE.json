[
  {
    "start": "0",
    "end": "153000"
  },
  {
    "text": "okay let's get ahead and get started",
    "start": "30",
    "end": "6080"
  },
  {
    "text": "hi everyone my name is Christian Jones and welcome today to today's CNC of webinar up here",
    "start": "6919",
    "end": "13650"
  },
  {
    "text": "operating an open-source fling and beam runtime on kubernetes again my name is Chris I'm cloud consultant at level 25",
    "start": "13650",
    "end": "20279"
  },
  {
    "text": "and a CNC F ambassador I'll be moderating today's webinar so we would like to welcome our presenters today",
    "start": "20279",
    "end": "26130"
  },
  {
    "text": "Anna captain Keshe engineering manager at Google and the gangways software engineer at Google",
    "start": "26130",
    "end": "31669"
  },
  {
    "text": "just a few house.i housekeeping items before we get started during the webinar",
    "start": "31669",
    "end": "36780"
  },
  {
    "text": "you are not able to talk as an attendee there is a QA box at the bottom of your screen please feel free to drop your",
    "start": "36780",
    "end": "43350"
  },
  {
    "text": "questions in there and we will get us to as many as we can in the end again this",
    "start": "43350",
    "end": "48510"
  },
  {
    "text": "is an official webinar of the CNC F and this Dutch is subject to the CNC of Code",
    "start": "48510",
    "end": "53610"
  },
  {
    "text": "of Conduct please do not add anything to the chatter questions that would be in violation of that code of conduct",
    "start": "53610",
    "end": "60120"
  },
  {
    "text": "basically please be respectful of all of your fellow participants and presenters and with all that I'll hand it over to",
    "start": "60120",
    "end": "67229"
  },
  {
    "text": "aniket in the gang to kick off today's presentation",
    "start": "67229",
    "end": "71659"
  },
  {
    "text": "hey thanks Chris so hi everyone my name is aniket mukashi welcome to this",
    "start": "72530",
    "end": "79130"
  },
  {
    "text": "webinar on the Apache fling con kubernetes operator so this is an open",
    "start": "79130",
    "end": "85729"
  },
  {
    "text": "source and open source project my team has build and we are here do I'm here with the gang we who is a software",
    "start": "85729",
    "end": "91729"
  },
  {
    "text": "engineer take lead on the cloud data proc team and he is also the primary contributor to the flink operator so",
    "start": "91729",
    "end": "98930"
  },
  {
    "text": "together we are gonna present various aspects of this project so and before we",
    "start": "98930",
    "end": "106190"
  },
  {
    "text": "get started I want to also introduce cloud data proc so both of us work on the cloud data problem and data proc is",
    "start": "106190",
    "end": "113320"
  },
  {
    "text": "is a managed service for running open source analytic software such as Hadoop",
    "start": "113320",
    "end": "119830"
  },
  {
    "text": "spark presto if even fling on Google Cloud in conjunction with the the GCP",
    "start": "119830",
    "end": "128269"
  },
  {
    "text": "services such as cloud storage and bigquery so essentially we the service",
    "start": "128269",
    "end": "134450"
  },
  {
    "text": "provides you an ability to deploy various data processing clusters and",
    "start": "134450",
    "end": "141049"
  },
  {
    "text": "then we also provide interoperability with Google cloud services services that",
    "start": "141049",
    "end": "147590"
  },
  {
    "text": "are offered on the clock so moving ahead in this talk we we will basically",
    "start": "147590",
    "end": "155329"
  },
  {
    "start": "153000",
    "end": "288000"
  },
  {
    "text": "initially discuss why we need the flink operator why we have built it and then",
    "start": "155329",
    "end": "160880"
  },
  {
    "text": "the gang will dive deeper into architecture and features of the operator and then towards lastly we will",
    "start": "160880",
    "end": "168140"
  },
  {
    "text": "also talk give an example of the running a beam application on the flink operator",
    "start": "168140",
    "end": "174820"
  },
  {
    "text": "so so let's get started so the one of",
    "start": "174820",
    "end": "181730"
  },
  {
    "text": "the reasons or so before I get into the more details like one of the reasons we",
    "start": "181730",
    "end": "187040"
  },
  {
    "text": "have built this operator is we want to enable enable our customers to run these",
    "start": "187040",
    "end": "193549"
  },
  {
    "text": "data processing application across clouds or and also on their on-premise environment so that is one of the",
    "start": "193549",
    "end": "200299"
  },
  {
    "text": "motivation of having having something running on kubernetes so before we dive",
    "start": "200299",
    "end": "205970"
  },
  {
    "text": "deeper to deeper into the talk let's first talk about kubernetes so you most of you",
    "start": "205970",
    "end": "211730"
  },
  {
    "text": "would already already know kubernetes is an is an open source container",
    "start": "211730",
    "end": "219170"
  },
  {
    "text": "orchestration system for automating application deployment scaling and",
    "start": "219170",
    "end": "224800"
  },
  {
    "text": "management so it was originally designed by designed by Google and then now",
    "start": "224800",
    "end": "231100"
  },
  {
    "text": "cognitive computing computing foundation CN CF maintains this this product and so",
    "start": "231100",
    "end": "239410"
  },
  {
    "text": "what kubernetes essentially is is it's a general-purpose cluster manager for running containerized applications",
    "start": "239410",
    "end": "246850"
  },
  {
    "text": "applications it's so it is domain agnostic so which makes it really portable too which makes it ProTaper",
    "start": "246850",
    "end": "254390"
  },
  {
    "text": "which makes it a portable platform to run your applications on public clouds as well as your on-premise environment",
    "start": "254390",
    "end": "261430"
  },
  {
    "text": "and so kubernetes basically allows you",
    "start": "261430",
    "end": "266510"
  },
  {
    "text": "constructs such as pods services deployments and persistent volumes so",
    "start": "266510",
    "end": "271910"
  },
  {
    "text": "that you don't have to deal with the low low level system of system constructs",
    "start": "271910",
    "end": "278180"
  },
  {
    "text": "and you can just define your applications with these standard constructs so so that's an advantage of",
    "start": "278180",
    "end": "285200"
  },
  {
    "text": "overnighters so what we have seen over the last few years is that there is a lot of momentum",
    "start": "285200",
    "end": "293330"
  },
  {
    "start": "288000",
    "end": "380000"
  },
  {
    "text": "in the industry about kubernetes so more and more data processing applications are moving from moving from like the",
    "start": "293330",
    "end": "301520"
  },
  {
    "text": "standard or from the hadoop beyond deployment model to kubernetes model so",
    "start": "301520",
    "end": "307400"
  },
  {
    "text": "all these applications including hadoop mapreduce spark of hive were initially built to",
    "start": "307400",
    "end": "316130"
  },
  {
    "text": "run on yarn and yarn is essentially a resource negotiator for for Hadoop",
    "start": "316130",
    "end": "323090"
  },
  {
    "text": "ecosystem applications and it acts as a so it mostly works well with the JVM or",
    "start": "323090",
    "end": "330050"
  },
  {
    "text": "Java based applications but but it it basically has a couple of challenges one",
    "start": "330050",
    "end": "337580"
  },
  {
    "text": "of it is that since it java-based you can basically get into challenges of handling Java dependency",
    "start": "337580",
    "end": "346009"
  },
  {
    "text": "conflicts so so that's one of the challenge also make extending it to for",
    "start": "346009",
    "end": "351770"
  },
  {
    "text": "generic applications beyond Java is challenging but that's where kubernetes",
    "start": "351770",
    "end": "358189"
  },
  {
    "text": "has advantage because kubernetes sees users containerization which makes it much more easy to manage your",
    "start": "358189",
    "end": "365229"
  },
  {
    "text": "dependencies and also have habit to work with applications that are not just Java",
    "start": "365229",
    "end": "371539"
  },
  {
    "text": "based so so it's fundamentally better",
    "start": "371539",
    "end": "377029"
  },
  {
    "text": "than the the approach that had to be on has taken so also want to give a little",
    "start": "377029",
    "end": "382909"
  },
  {
    "start": "380000",
    "end": "425000"
  },
  {
    "text": "bit of history on how what we have done so far in the on the kubernetes side so",
    "start": "382909",
    "end": "389800"
  },
  {
    "text": "last year we have last couple of years we have put a lot of attention into",
    "start": "389800",
    "end": "395029"
  },
  {
    "text": "making kubernetes a platform to run this distributed data processing applications",
    "start": "395029",
    "end": "401029"
  },
  {
    "text": "so beginning of the last year January of 2019 we open source spark operator to",
    "start": "401029",
    "end": "407719"
  },
  {
    "text": "run spark applications on natively on kubernetes and later in the year in",
    "start": "407719",
    "end": "413089"
  },
  {
    "text": "September now we have built the flink operator and also open source state so",
    "start": "413089",
    "end": "419180"
  },
  {
    "text": "that users can run flink of applications on kubernetes so moving ahead now let's",
    "start": "419180",
    "end": "428479"
  },
  {
    "start": "425000",
    "end": "567000"
  },
  {
    "text": "talk about how you can how you can run applications on Cooper it is so cool",
    "start": "428479",
    "end": "433759"
  },
  {
    "text": "kubernetes gives you these abilities provides this constructs to design your",
    "start": "433759",
    "end": "439909"
  },
  {
    "text": "application or define how your application will be deployed on the uncovered notice but for any complex",
    "start": "439909",
    "end": "445939"
  },
  {
    "text": "application you need some kind of a control plane in order to manage your application and so one of the things you",
    "start": "445939",
    "end": "455810"
  },
  {
    "text": "need is like a to provide a higher level API so for example if you if you want to",
    "start": "455810",
    "end": "461360"
  },
  {
    "text": "deploy your web application or your my sequel instance on kubernetes instead of defining all your dependencies through",
    "start": "461360",
    "end": "469399"
  },
  {
    "text": "the through the basic kubernetes constructs you would want to user mode higher level API such as you",
    "start": "469399",
    "end": "475820"
  },
  {
    "text": "can say you just want to say that I need a my sequel instance along with my HTTP server or something like that so being",
    "start": "475820",
    "end": "482930"
  },
  {
    "text": "able to define with the high level API makes it much easy to use secondly in",
    "start": "482930",
    "end": "488750"
  },
  {
    "text": "addition to just the ABI you you want to also store some kind of application state for example you want to know",
    "start": "488750",
    "end": "495620"
  },
  {
    "text": "whether your application is just starting or has it started is it ready to serve traffic or not and",
    "start": "495620",
    "end": "501500"
  },
  {
    "text": "and and things like also and then make this big make decision based on the state of the application if it is in the",
    "start": "501500",
    "end": "506960"
  },
  {
    "text": "failed state you want to restart it or take any other action on it so being able to manage this application state is",
    "start": "506960",
    "end": "513409"
  },
  {
    "text": "also important and the third I think the purpose of the control brain is to",
    "start": "513410",
    "end": "518659"
  },
  {
    "text": "manage the lifecycle of the kubernetes resources so basically you as your as as",
    "start": "518660",
    "end": "527210"
  },
  {
    "text": "your application makes progress you may want to scale it up or scale it scale it down or provision additional kubernetes",
    "start": "527210",
    "end": "533810"
  },
  {
    "text": "resources so handling lifecycle of those is also important so so far there is",
    "start": "533810",
    "end": "538880"
  },
  {
    "text": "like no standard around how this is done there are developers are using various ways including different like",
    "start": "538880",
    "end": "546170"
  },
  {
    "text": "programming languages and api's and c lies and monitoring and logging tools in",
    "start": "546170",
    "end": "552380"
  },
  {
    "text": "order to build their complex applications but the downside of that is then because it's not standard your",
    "start": "552380",
    "end": "559550"
  },
  {
    "text": "users get different experiences based on the control plane that is built around",
    "start": "559550",
    "end": "565040"
  },
  {
    "text": "the application so so as so there are",
    "start": "565040",
    "end": "570050"
  },
  {
    "text": "multi like I mentioned there are multiple ways to build this control fin and one of the ways a way is the or the",
    "start": "570050",
    "end": "576110"
  },
  {
    "text": "simplest way possible is to build like a write a script to launch your application so this is also simple it",
    "start": "576110",
    "end": "583040"
  },
  {
    "text": "has also a couple of challenges one is that with a script there is no way for you to to track on track application",
    "start": "583040",
    "end": "591080"
  },
  {
    "text": "state so although script can provide ways to take an action it cannot it",
    "start": "591080",
    "end": "596870"
  },
  {
    "text": "cannot easily provide a way to track the current status of the current status of",
    "start": "596870",
    "end": "602060"
  },
  {
    "text": "the application and then any building anything much more complex with the script also very challenging so so so this is",
    "start": "602060",
    "end": "609800"
  },
  {
    "text": "this this is an alternative but it's not a it's not an ideal one then the second",
    "start": "609800",
    "end": "615920"
  },
  {
    "text": "alternative you have as of now is user kind like a control control in in the",
    "start": "615920",
    "end": "621860"
  },
  {
    "text": "cloud or user managed service such as Google Cloud Data proc to run your application so this is this also has a",
    "start": "621860",
    "end": "629180"
  },
  {
    "text": "lot of benefits that that it has it comes with some some support and very",
    "start": "629180",
    "end": "634399"
  },
  {
    "text": "standard api but then downside of this would be that you you will be you'll be",
    "start": "634399",
    "end": "641180"
  },
  {
    "text": "using a specific proprietary api of a provider and and then portability there",
    "start": "641180",
    "end": "649279"
  },
  {
    "text": "will be very little or very less portability across clouds or or your on-prem but if you if we deep down like",
    "start": "649279",
    "end": "656839"
  },
  {
    "text": "driver type deep into what how these control planes look like they can't they essentially come come with some kind of",
    "start": "656839",
    "end": "663680"
  },
  {
    "text": "a controller which takes in takes an api service api request from the end-user and then and hence make a store some",
    "start": "663680",
    "end": "671569"
  },
  {
    "text": "state or lookup some state in the you know in a database and then based on that the mate decides to make decide",
    "start": "671569",
    "end": "680240"
  },
  {
    "text": "decide an action and then there is on the on the on the data plane side or the",
    "start": "680240",
    "end": "685339"
  },
  {
    "text": "on the coop kubernetes side there is typically an agent running which then pulls through as a different control api",
    "start": "685339",
    "end": "692620"
  },
  {
    "text": "pulls this controller and asks for more ik as for commands or a report status so",
    "start": "692620",
    "end": "699110"
  },
  {
    "text": "that it can the controller can track the status of the application or actually",
    "start": "699110",
    "end": "704839"
  },
  {
    "text": "take a take some action so so this is a typical architecture of a control plane",
    "start": "704839",
    "end": "712720"
  },
  {
    "text": "but if we compare these two alternatives there are on various parameters we can",
    "start": "712930",
    "end": "719389"
  },
  {
    "text": "clearly we can see that it is no clear winner between these two like for example both of these are typically not",
    "start": "719389",
    "end": "726560"
  },
  {
    "text": "open source they are scripts are a little bit not",
    "start": "726560",
    "end": "733160"
  },
  {
    "text": "not as rich as managed services in terms of features the development cost can basically be",
    "start": "733160",
    "end": "739960"
  },
  {
    "text": "very low like relatively low for scripts but significantly high for building your",
    "start": "739960",
    "end": "745360"
  },
  {
    "text": "own managed service then like then then support is for scripts is you through",
    "start": "745360",
    "end": "753010"
  },
  {
    "text": "your own like it self supported control pain versus managed services are",
    "start": "753010",
    "end": "759130"
  },
  {
    "text": "supported supported through the cloud provider and then the there is a there's",
    "start": "759130",
    "end": "764260"
  },
  {
    "text": "a price consideration between using one on one or the other and as I mentioned",
    "start": "764260",
    "end": "769780"
  },
  {
    "text": "before they and they may not be necessarily a portable so so then then",
    "start": "769780",
    "end": "776050"
  },
  {
    "text": "that brings us to a question that is there a third alternative we can use and that's where the kubernetes operators",
    "start": "776050",
    "end": "783040"
  },
  {
    "start": "781000",
    "end": "868000"
  },
  {
    "text": "are effective so is essentially what kubernetes operators are they are they",
    "start": "783040",
    "end": "790120"
  },
  {
    "text": "are the they are control planes they they are control planes in on kubernetes",
    "start": "790120",
    "end": "796750"
  },
  {
    "text": "so an operator essentially so an",
    "start": "796750",
    "end": "803710"
  },
  {
    "text": "operator is essentially consists of like a custom resource definition and a",
    "start": "803710",
    "end": "809290"
  },
  {
    "text": "custom resource controller so similar to the diagram we saw for a control plane",
    "start": "809290",
    "end": "815440"
  },
  {
    "text": "in cloud this is that this our operator also has a similar architecture it uses",
    "start": "815440",
    "end": "822190"
  },
  {
    "text": "the kubernetes infrastructure components such as resource model and api and there",
    "start": "822190",
    "end": "828310"
  },
  {
    "text": "is the reconciliation loop so that it the architecture of the architecture of",
    "start": "828310",
    "end": "834940"
  },
  {
    "text": "the operator can be can can be made very easy be with the with the constructs to",
    "start": "834940",
    "end": "840700"
  },
  {
    "text": "Pilatus offers and so makes it relatively easy for developer to build and maintain these operators and also",
    "start": "840700",
    "end": "848560"
  },
  {
    "text": "allows users to use higher level higher level constructs to to deploy or to deal",
    "start": "848560",
    "end": "855340"
  },
  {
    "text": "to deal with the application and we'll see a few examples in in context of flink in the later in this talk so so",
    "start": "855340",
    "end": "863710"
  },
  {
    "text": "that's essentially the the architecture of the kubernetes operator so if you go",
    "start": "863710",
    "end": "869080"
  },
  {
    "text": "back to our table again and to see the operator is it's much more like green in that sense that it is it",
    "start": "869080",
    "end": "877850"
  },
  {
    "text": "is open source and it is portable it's it is also since it's open source it",
    "start": "877850",
    "end": "883429"
  },
  {
    "text": "could also be free they support it you can get support through community the development cost because it uses",
    "start": "883429",
    "end": "889730"
  },
  {
    "text": "standard kubernetes features the development cost could be relatively lower compared to managed services and",
    "start": "889730",
    "end": "897139"
  },
  {
    "text": "it we it is rich in terms of its features so so so that's so that's",
    "start": "897139",
    "end": "905689"
  },
  {
    "text": "that's from the introduction side now I will give it to the Dogon to to talk about the architectures and the features",
    "start": "905689",
    "end": "911929"
  },
  {
    "text": "of the link operator and I'll give you an example on beam okay",
    "start": "911929",
    "end": "917329"
  },
  {
    "text": "Thank You anacott let me share my screen",
    "start": "917329",
    "end": "922209"
  },
  {
    "text": "can you stop sharing I can start",
    "start": "928610",
    "end": "933310"
  },
  {
    "text": "you",
    "start": "935440",
    "end": "937500"
  },
  {
    "text": "you okay now so before we talk about the",
    "start": "940529",
    "end": "950529"
  },
  {
    "start": "946000",
    "end": "1108000"
  },
  {
    "text": "operator itself and its first take a brief look at two three attach projects",
    "start": "950529",
    "end": "957019"
  },
  {
    "text": "which he related the chiara operator the first one is apache spark which is a",
    "start": "957019",
    "end": "963320"
  },
  {
    "text": "general-purpose distributed computing energy it's built on top of the",
    "start": "963320",
    "end": "969260"
  },
  {
    "text": "abstraction of RTD the photo tolerance mechanism is based on the computing RDD",
    "start": "969260",
    "end": "975980"
  },
  {
    "text": "if something goes wrong sparks ability computes the RDD and at",
    "start": "975980",
    "end": "982760"
  },
  {
    "text": "first it only supported the batch processing but then it added support for",
    "start": "982760",
    "end": "988070"
  },
  {
    "text": "streaming processing but under the hood it's still a batch based it just",
    "start": "988070",
    "end": "994670"
  },
  {
    "text": "simulates streaming with micro patches that's how spark works on the other hand",
    "start": "994670",
    "end": "1001510"
  },
  {
    "text": "we have Apache flink Apache finger is a distributor to state for computing",
    "start": "1001510",
    "end": "1007660"
  },
  {
    "text": "engine over Ambani's and Bundy the data streams unlike spark flink started with",
    "start": "1007660",
    "end": "1014740"
  },
  {
    "text": "streaming model patch is just a special case of streaming link the fault",
    "start": "1014740",
    "end": "1021459"
  },
  {
    "text": "tolerance mechanism is also quite different from spark it's based on checkpoints instead of computing RDD so",
    "start": "1021459",
    "end": "1031240"
  },
  {
    "text": "basically the general perception now is that spark is still better at patch and",
    "start": "1031240",
    "end": "1038558"
  },
  {
    "text": "fling is better at streaming although spark can do streaming and fringer can do batch but as they are not",
    "start": "1038559",
    "end": "1046270"
  },
  {
    "text": "good at add to the order so both engines are still very popular these days we",
    "start": "1046270",
    "end": "1052390"
  },
  {
    "text": "don't see one replacing the other in all use cases that's why we have the third",
    "start": "1052390",
    "end": "1057520"
  },
  {
    "text": "project Apache beam it's developed by Google which is a basically a unified",
    "start": "1057520",
    "end": "1065860"
  },
  {
    "text": "programming model for us patch and streaming it is support various programming languages like Java Python",
    "start": "1065860",
    "end": "1073929"
  },
  {
    "text": "code and runs any execution engine such as spark Flint",
    "start": "1073929",
    "end": "1080409"
  },
  {
    "text": "and the Google cloud dataflow so Bing wants to combine the best of spark and",
    "start": "1080409",
    "end": "1085929"
  },
  {
    "text": "Frink allows users to choose the languages they like just nerve one API",
    "start": "1085929",
    "end": "1092190"
  },
  {
    "text": "for both batch and streaming at the same high but unfortunately the architecture",
    "start": "1092190",
    "end": "1098289"
  },
  {
    "text": "is much more complex sometimes the users find it difficult to set up so when we started the flink",
    "start": "1098289",
    "end": "1111970"
  },
  {
    "start": "1108000",
    "end": "1188000"
  },
  {
    "text": "operator project we had several goals in our mind first of course we wanted to",
    "start": "1111970",
    "end": "1118419"
  },
  {
    "text": "support and managing the lifecycle of link applications users should be able",
    "start": "1118419",
    "end": "1124690"
  },
  {
    "text": "to use the operator to create such encruster as well as job caster users",
    "start": "1124690",
    "end": "1131080"
  },
  {
    "text": "should be able to take same points automatically manually viewers can set",
    "start": "1131080",
    "end": "1136720"
  },
  {
    "text": "different job restore policies it's Sara that's for freeing itself but second we",
    "start": "1136720",
    "end": "1144130"
  },
  {
    "text": "also want to support to run in being Python jobs with the operator it should be very easy to set up third we also",
    "start": "1144130",
    "end": "1152559"
  },
  {
    "text": "want you integrated with major cloud services such as Google Cloud Storage",
    "start": "1152559",
    "end": "1159010"
  },
  {
    "text": "that's because many Frink users live around their finger jobs in cloud",
    "start": "1159010",
    "end": "1164620"
  },
  {
    "text": "environment they're freeing jobs need to work with other cloud services so",
    "start": "1164620",
    "end": "1170100"
  },
  {
    "text": "particularly the integration part is tedious and time-consuming users need to",
    "start": "1170100",
    "end": "1175929"
  },
  {
    "text": "read lots of talks asking many questions and then work out so we want you help",
    "start": "1175929",
    "end": "1183070"
  },
  {
    "text": "our users",
    "start": "1183070",
    "end": "1185610"
  },
  {
    "text": "to take a quick look at how to install the operator what is the user experience",
    "start": "1189100",
    "end": "1195600"
  },
  {
    "text": "feels like so basically as the whole operator is described by a huge",
    "start": "1195600",
    "end": "1201809"
  },
  {
    "text": "kubernetes manifest Yama file the Yama file essentially includes two major",
    "start": "1201809",
    "end": "1208480"
  },
  {
    "text": "components the first one is the CRD it divides the Frink cluster customer",
    "start": "1208480",
    "end": "1215980"
  },
  {
    "text": "resource what the US can specify is restricted by Darcy Rd and also",
    "start": "1215980",
    "end": "1224080"
  },
  {
    "text": "expressed by the CR D the second part is a container controller the controller",
    "start": "1224080",
    "end": "1230129"
  },
  {
    "text": "watches keeps of watching the customer resource events if a resource is added",
    "start": "1230129",
    "end": "1237279"
  },
  {
    "text": "credits or deleted updated it will load his list",
    "start": "1237279",
    "end": "1242289"
  },
  {
    "text": "it is rustic rockin CD loop to continuously drive the observe the state",
    "start": "1242289",
    "end": "1247480"
  },
  {
    "text": "to the desired States after we have the",
    "start": "1247480",
    "end": "1255279"
  },
  {
    "start": "1252000",
    "end": "1347000"
  },
  {
    "text": "operator installed in the cluster the kubernetes api now is extended it is not",
    "start": "1255279",
    "end": "1262659"
  },
  {
    "text": "only understands the primitive constructs like part services",
    "start": "1262659",
    "end": "1269700"
  },
  {
    "text": "deployments it now also understand what finger cluster is so instead of creating",
    "start": "1269700",
    "end": "1277080"
  },
  {
    "text": "pod services these primitive you construct so one by one you can now",
    "start": "1277080",
    "end": "1283269"
  },
  {
    "text": "simply say I want to create a fling job cluster to run my job so mmm your finger",
    "start": "1283269",
    "end": "1291009"
  },
  {
    "text": "job is described also by Yama file with the CR based on the CR d essentially",
    "start": "1291009",
    "end": "1299470"
  },
  {
    "text": "there are several parts you need to specify the first part is the resource",
    "start": "1299470",
    "end": "1304679"
  },
  {
    "text": "how many number of community number of",
    "start": "1304679",
    "end": "1309779"
  },
  {
    "text": "replicas of your task manager how much memory and the CPU you want you give",
    "start": "1309779",
    "end": "1315279"
  },
  {
    "text": "your job manager and task manager these are resource",
    "start": "1315279",
    "end": "1321100"
  },
  {
    "text": "the second part is software what freeing the image you want to use what's your",
    "start": "1321100",
    "end": "1327070"
  },
  {
    "text": "job jar file job has named arguments etc the third part is your config you how do",
    "start": "1327070",
    "end": "1335290"
  },
  {
    "text": "you want to configure your finger properties under the knife aside we have a resemble example of a job caster you",
    "start": "1335290",
    "end": "1345040"
  },
  {
    "text": "can see after creating the finger caster",
    "start": "1345040",
    "end": "1351490"
  },
  {
    "start": "1347000",
    "end": "1400000"
  },
  {
    "text": "customer resource you can check the job status and the events by simply",
    "start": "1351490",
    "end": "1356530"
  },
  {
    "text": "describing the customer resource in the standards it shows not only the overall",
    "start": "1356530",
    "end": "1363930"
  },
  {
    "text": "state of the caster in this example we can see the overall state is stopped it",
    "start": "1363930",
    "end": "1370900"
  },
  {
    "text": "has finished you can also see its components tatters if something goes",
    "start": "1370900",
    "end": "1377230"
  },
  {
    "text": "wrong for example if the job manager deployment cannot get up running",
    "start": "1377230",
    "end": "1382660"
  },
  {
    "text": "correctly you can find its name and somebody described its check is log and",
    "start": "1382660",
    "end": "1389640"
  },
  {
    "text": "you can figure out the wire so this is the status of the customer resource now",
    "start": "1389640",
    "end": "1402430"
  },
  {
    "start": "1400000",
    "end": "1480000"
  },
  {
    "text": "it's time to the internals of the operator we assume the operator has been",
    "start": "1402430",
    "end": "1410020"
  },
  {
    "text": "deployed to the communities or caster as c rd and the controller are all in place",
    "start": "1410020",
    "end": "1416730"
  },
  {
    "text": "now let's walk through a life cycle of a",
    "start": "1416730",
    "end": "1422020"
  },
  {
    "text": "flink job so the first step the user runs cube control apply my job cluster",
    "start": "1422020",
    "end": "1430330"
  },
  {
    "text": "diamo this sends a finger class respect to the coronaries api server the api",
    "start": "1430330",
    "end": "1438640"
  },
  {
    "text": "server first validates and also apply",
    "start": "1438640",
    "end": "1444700"
  },
  {
    "text": "some default values to the user spec it's based on web books and if you it's",
    "start": "1444700",
    "end": "1453640"
  },
  {
    "text": "valid it it's a finger caster customer resource and stores",
    "start": "1453640",
    "end": "1459220"
  },
  {
    "text": "it's either Sadie after that a a D the event will be triggered by kubernetes",
    "start": "1459220",
    "end": "1466720"
  },
  {
    "text": "and it also dispatches the event to the finger controller so fling camp owner",
    "start": "1466720",
    "end": "1473830"
  },
  {
    "text": "will know all the user created a finger caster customer resource and then the",
    "start": "1473830",
    "end": "1482290"
  },
  {
    "start": "1480000",
    "end": "1574000"
  },
  {
    "text": "flamebook controller after receiving the event it also knows the properties of",
    "start": "1482290",
    "end": "1489670"
  },
  {
    "text": "the finger caster cosmo resource so it",
    "start": "1489670",
    "end": "1494770"
  },
  {
    "text": "analyzed it and it based on the user specified the properties it calls the",
    "start": "1494770",
    "end": "1502050"
  },
  {
    "text": "API server to create the underlying primitive resources typically in a fling",
    "start": "1502050",
    "end": "1510280"
  },
  {
    "text": "cluster we have one job manager service one job manual deployments and one task",
    "start": "1510280",
    "end": "1517060"
  },
  {
    "text": "manager deployment as well as we have configure map I did initially it's in",
    "start": "1517060",
    "end": "1523690"
  },
  {
    "text": "this picture so the controller after",
    "start": "1523690",
    "end": "1529660"
  },
  {
    "text": "creates these underlying primitive resources it keeps watching the status",
    "start": "1529660",
    "end": "1535690"
  },
  {
    "text": "change for example if you the job manager deployment is ready it notices",
    "start": "1535690",
    "end": "1544180"
  },
  {
    "text": "this event and the controller will update the standard fields of the",
    "start": "1544180",
    "end": "1549280"
  },
  {
    "text": "customer resource accordingly it continuously take actions to drive the",
    "start": "1549280",
    "end": "1554950"
  },
  {
    "text": "preservative state to the desired the states when needed for example if you manually delete the job manager service",
    "start": "1554950",
    "end": "1562890"
  },
  {
    "text": "wrinkle controller will do this OH the service is missing so I need to take",
    "start": "1562890",
    "end": "1568930"
  },
  {
    "text": "action to recreate it this is done automatically",
    "start": "1568930",
    "end": "1574530"
  },
  {
    "start": "1574000",
    "end": "1647000"
  },
  {
    "text": "then after all its components are up and running the controller will create a",
    "start": "1575100",
    "end": "1582600"
  },
  {
    "text": "finger job Scimitar the job some meter itself is a kubernetes job",
    "start": "1582600",
    "end": "1589480"
  },
  {
    "text": "so it's machines get to some it's their job to fling a REST API through the job",
    "start": "1589480",
    "end": "1597070"
  },
  {
    "text": "manager service after the job some meter some it's the job it keeps holding the",
    "start": "1597070",
    "end": "1603129"
  },
  {
    "text": "job Stanners from the flink arrest api when the job is done either failed or",
    "start": "1603129",
    "end": "1609009"
  },
  {
    "text": "succeeded it finishes itself the job",
    "start": "1609009",
    "end": "1614379"
  },
  {
    "text": "submitter finishes itself and also the consumer will be notified with the",
    "start": "1614379",
    "end": "1621279"
  },
  {
    "text": "status changes if everything is done the controller deletes all the resources job",
    "start": "1621279",
    "end": "1628809"
  },
  {
    "text": "manager task manager but the deal will keep the metadata so you can still",
    "start": "1628809",
    "end": "1634330"
  },
  {
    "text": "describe the metadata after the job is done but they don't consume any computing and storage resources by job",
    "start": "1634330",
    "end": "1643509"
  },
  {
    "text": "manager and task manager okay now let's walk through several",
    "start": "1643509",
    "end": "1650850"
  },
  {
    "start": "1647000",
    "end": "1707000"
  },
  {
    "text": "major features of the operator first in this operator where we support the post",
    "start": "1650850",
    "end": "1658020"
  },
  {
    "text": "creating session cluster and job cluster",
    "start": "1658020",
    "end": "1663679"
  },
  {
    "text": "the two types of clusters supported us through the same ceoddi flink cluster",
    "start": "1664309",
    "end": "1672299"
  },
  {
    "text": "the difference is only in whether a job spec is provided or not so if you want a",
    "start": "1672299",
    "end": "1681900"
  },
  {
    "text": "long-running session cluster it can be used by reused by many jobs you simply",
    "start": "1681900",
    "end": "1688890"
  },
  {
    "text": "don't specify the job spec otherwise if you a job specs is provided it becomes a",
    "start": "1688890",
    "end": "1697860"
  },
  {
    "text": "ephemeral job caster after the job is done the cluster will be deleted automatically this is the first feature",
    "start": "1697860",
    "end": "1707570"
  },
  {
    "start": "1707000",
    "end": "1767000"
  },
  {
    "text": "the second feature is about elite containers and the remote job jar so you",
    "start": "1707570",
    "end": "1713100"
  },
  {
    "text": "will need to run a job cluster a finger users needed to build a custom pakery",
    "start": "1713100",
    "end": "1721110"
  },
  {
    "text": "image which is based on the link image and it includes their job jar file this",
    "start": "1721110",
    "end": "1727169"
  },
  {
    "text": "is not convenient because every time you have a new job jar you need to review",
    "start": "1727169",
    "end": "1732870"
  },
  {
    "text": "the image so in this operator we decided we want to support reduce free image and",
    "start": "1732870",
    "end": "1741770"
  },
  {
    "text": "the way we support it through in either container we can use a you need a",
    "start": "1741770",
    "end": "1748830"
  },
  {
    "text": "container to tango to the remove the job jar to a shared directory and then the",
    "start": "1748830",
    "end": "1754860"
  },
  {
    "text": "job submitter could submit it from the local path so you don't need to rebuild",
    "start": "1754860",
    "end": "1761419"
  },
  {
    "text": "single image every time you have a new job jar you can use remove the job jar",
    "start": "1761419",
    "end": "1768860"
  },
  {
    "start": "1767000",
    "end": "1822000"
  },
  {
    "text": "another feature is about taking save points",
    "start": "1769030",
    "end": "1774640"
  },
  {
    "text": "taking save points is tedious but critical for freeing applications in",
    "start": "1774640",
    "end": "1782050"
  },
  {
    "text": "this operator if you specify autosave you auto save point seconds and the same",
    "start": "1782050",
    "end": "1788830"
  },
  {
    "text": "points of the directory these two properties the operator could take save points automatically create for you and",
    "start": "1788830",
    "end": "1795480"
  },
  {
    "text": "after you to take a save point the information about that save point will",
    "start": "1795480",
    "end": "1803350"
  },
  {
    "text": "be recorded in the status field so you can see it so by describing the customer",
    "start": "1803350",
    "end": "1809980"
  },
  {
    "text": "resource and if you want you restart your job you can use that same appointed",
    "start": "1809980",
    "end": "1817630"
  },
  {
    "text": "occasion to do so provided it's a to your new job but what usually happens is if you have",
    "start": "1817630",
    "end": "1826450"
  },
  {
    "start": "1822000",
    "end": "1877000"
  },
  {
    "text": "a long-running finger job it could fail for various reason you typically once",
    "start": "1826450",
    "end": "1833320"
  },
  {
    "text": "you restart it and also we started from the latest same points for entry itself",
    "start": "1833320",
    "end": "1840010"
  },
  {
    "text": "time to help you to automate this process it done even though what an it",
    "start": "1840010",
    "end": "1845050"
  },
  {
    "text": "is the same point means but with this operator if you specify two properties",
    "start": "1845050",
    "end": "1851820"
  },
  {
    "text": "restart policy you say that you from same point and failure and you have",
    "start": "1851820",
    "end": "1857950"
  },
  {
    "text": "enabled auto setting points so the operator could automatically pick the",
    "start": "1857950",
    "end": "1866470"
  },
  {
    "text": "latest the same points and the restart will fail the job so this feature is",
    "start": "1866470",
    "end": "1871840"
  },
  {
    "text": "very convenient for long-running jobs you",
    "start": "1871840",
    "end": "1878080"
  },
  {
    "start": "1877000",
    "end": "1927000"
  },
  {
    "text": "you",
    "start": "1878080",
    "end": "1880140"
  },
  {
    "text": "another feature is side the current containers basically you can run sidecar",
    "start": "1883960",
    "end": "1889510"
  },
  {
    "text": "containers with the task manager fling the task manager containers a URI you",
    "start": "1889510",
    "end": "1895930"
  },
  {
    "text": "want to use it to provide services or proxies for your job it is accessible to",
    "start": "1895930",
    "end": "1903250"
  },
  {
    "text": "localhost basically a sidecar container is a pattern of kubernetes this is also the",
    "start": "1903250",
    "end": "1911620"
  },
  {
    "text": "enabling feature for running bean jobs and flink operator okay",
    "start": "1911620",
    "end": "1920860"
  },
  {
    "text": "next we will talk about how to run bean jobs and blink operator so first we need",
    "start": "1920860",
    "end": "1931720"
  },
  {
    "text": "to talk about a little bit about how being runs the code unlink runner",
    "start": "1931720",
    "end": "1940690"
  },
  {
    "text": "so basically when the user submits a Python job to being the Python job",
    "start": "1940690",
    "end": "1946900"
  },
  {
    "text": "essentially includes two parts one part defines the overall structure of the job",
    "start": "1946900",
    "end": "1953530"
  },
  {
    "text": "it's a MapReduce like structure of the job this part can be usually translated",
    "start": "1953530",
    "end": "1962530"
  },
  {
    "text": "at you fling the Java Java because it's a structure one structure to another",
    "start": "1962530",
    "end": "1968440"
  },
  {
    "text": "structure translation but there's another part it's a Euler defied function in Python",
    "start": "1968440",
    "end": "1975670"
  },
  {
    "text": "for example you have some transformation it it's in Python code this Python these",
    "start": "1975670",
    "end": "1984490"
  },
  {
    "text": "Python UDF's cannot be translated to freeing the Java code they have to be",
    "start": "1984490",
    "end": "1992080"
  },
  {
    "text": "run by the bean Python SDK wronger workers so this is actually the",
    "start": "1992080",
    "end": "1999210"
  },
  {
    "text": "challenge of running being on shrink runner",
    "start": "1999210",
    "end": "2005390"
  },
  {
    "text": "being provides several modes to run deep in Python SDK worker one mode is process",
    "start": "2006090",
    "end": "2013659"
  },
  {
    "text": "mode being runner in each link task manager will automatically launch a",
    "start": "2013659",
    "end": "2019029"
  },
  {
    "text": "being SDK worker process this requires a custom link image which being SDK",
    "start": "2019029",
    "end": "2026110"
  },
  {
    "text": "built-in it's not so user-friendly and the second mode is darker mode pin",
    "start": "2026110",
    "end": "2032799"
  },
  {
    "text": "router in each finger Pascal manager will automatically launch it being SDK",
    "start": "2032799",
    "end": "2038139"
  },
  {
    "text": "worker container but this requires running suckering darker kubernetes this",
    "start": "2038139",
    "end": "2044649"
  },
  {
    "text": "is not subordinate by default not so easy to setup the third option is",
    "start": "2044649",
    "end": "2051990"
  },
  {
    "text": "external mode being run at Antonacci being sdk worker by itself but it is",
    "start": "2051990",
    "end": "2058780"
  },
  {
    "text": "sends a requested to an external rocker pool service to now shuwa this is also",
    "start": "2058780",
    "end": "2064299"
  },
  {
    "text": "the mode we choose to run being paisan jobs with the operator so let's walk",
    "start": "2064299",
    "end": "2072970"
  },
  {
    "start": "2069000",
    "end": "2126000"
  },
  {
    "text": "through these steps when you run a pin python job with the fleeing operator",
    "start": "2072970",
    "end": "2079030"
  },
  {
    "text": "first you need to create a session cluster with ping Python SDK worker",
    "start": "2079030",
    "end": "2086919"
  },
  {
    "text": "outside the car containers with the Finke task manager containers just as",
    "start": "2086919",
    "end": "2092648"
  },
  {
    "text": "the example on the left side you can see we divide a sidecar which is based on",
    "start": "2092649",
    "end": "2102250"
  },
  {
    "text": "the ping Python SDK image and it started",
    "start": "2102250",
    "end": "2108400"
  },
  {
    "text": "the worker pool at one time it could receive requests from the bin runner in",
    "start": "2108400",
    "end": "2115210"
  },
  {
    "text": "task manager this is the first step we create a link cluster with SDK worker as",
    "start": "2115210",
    "end": "2123609"
  },
  {
    "text": "sidecar after we have the custard the second",
    "start": "2123609",
    "end": "2129440"
  },
  {
    "start": "2126000",
    "end": "2219000"
  },
  {
    "text": "step is we need to create a beam job Scimitar the beam job star meter itself",
    "start": "2129440",
    "end": "2136190"
  },
  {
    "text": "is a kubernetes job it's um it's the pink Python jog to the flink accession",
    "start": "2136190",
    "end": "2142040"
  },
  {
    "text": "cluster as we can see in this example it",
    "start": "2142040",
    "end": "2147950"
  },
  {
    "text": "used the image she also used a ping SDK Python SDK image and the common line",
    "start": "2147950",
    "end": "2155620"
  },
  {
    "text": "arguments there are several important ones first it needs to use linker runner",
    "start": "2155620",
    "end": "2162680"
  },
  {
    "text": "you need to give it gives a link master",
    "start": "2162680",
    "end": "2168800"
  },
  {
    "text": "address to the link master flag it's the",
    "start": "2168800",
    "end": "2174230"
  },
  {
    "text": "job better service and also the environment the type you need to specify",
    "start": "2174230",
    "end": "2180530"
  },
  {
    "text": "it as external and also the it's",
    "start": "2180530",
    "end": "2186620"
  },
  {
    "text": "localhost and 50,000 that's the port the",
    "start": "2186620",
    "end": "2192170"
  },
  {
    "text": "SDK work earnestly and by default so after that you have created the job",
    "start": "2192170",
    "end": "2201340"
  },
  {
    "text": "you know automatically submitted to the flink Custer after that you can change",
    "start": "2201340",
    "end": "2207640"
  },
  {
    "text": "the job status and it's not the way you check it is simply describes a job",
    "start": "2207640",
    "end": "2213190"
  },
  {
    "text": "object you can describe it with your Kube control",
    "start": "2213190",
    "end": "2219900"
  },
  {
    "start": "2219000",
    "end": "2566000"
  },
  {
    "text": "yeah that's my talk thank you",
    "start": "2220340",
    "end": "2226330"
  },
  {
    "text": "awesome thank you so much and great presentation we now have some time for",
    "start": "2229359",
    "end": "2234770"
  },
  {
    "text": "questions so if you have any questions that you'd like to ask please feel free to drop it in the Q&A tab at the bottom",
    "start": "2234770",
    "end": "2240650"
  },
  {
    "text": "we already have to do a few questions on the Q&A yeah yeah Palfrey me do you",
    "start": "2240650",
    "end": "2256250"
  },
  {
    "text": "support s3 as a safe pointed directory the answer is yes",
    "start": "2256250",
    "end": "2262250"
  },
  {
    "text": "but you need that you use a customary image it's the same as how we support",
    "start": "2262250",
    "end": "2268700"
  },
  {
    "text": "Jesus as the directory it should be very simple you create a customer image based",
    "start": "2268700",
    "end": "2275839"
  },
  {
    "text": "on the Flickr image and you add library config for GCS or s3 connector but the",
    "start": "2275839",
    "end": "2285770"
  },
  {
    "text": "project now we don't see people contribute for s3 connector so if you",
    "start": "2285770",
    "end": "2296089"
  },
  {
    "text": "are interested you can use our file a feature request or we also work on your",
    "start": "2296089",
    "end": "2302750"
  },
  {
    "text": "contribution it should be easy",
    "start": "2302750",
    "end": "2306520"
  },
  {
    "text": "the second question how that restart with auto save points differ from this",
    "start": "2314960",
    "end": "2320539"
  },
  {
    "text": "starting supported by shrink with checkpoints checkpoints not supported the answer is there are different types",
    "start": "2320539",
    "end": "2329479"
  },
  {
    "text": "of restart so basically if link itself supports a checkpoint abased restart but",
    "start": "2329479",
    "end": "2337369"
  },
  {
    "text": "sometimes when some error happens in the cluster the whole job fails it partner",
    "start": "2337369",
    "end": "2343759"
  },
  {
    "text": "even restart the job just the fails there in this case it could restart from",
    "start": "2343759",
    "end": "2351170"
  },
  {
    "text": "the same point not only the checkpoint I think in some cases it can restart from",
    "start": "2351170",
    "end": "2358460"
  },
  {
    "text": "checkpoints it's the flink of supports the checkpoints we didn't change anything on",
    "start": "2358460",
    "end": "2363890"
  },
  {
    "text": "the data play it's just a convenient way for you to long a long-running job for",
    "start": "2363890",
    "end": "2370670"
  },
  {
    "text": "you to restart from autosave points",
    "start": "2370670",
    "end": "2375640"
  },
  {
    "text": "yeah just just to add to that I think one other like there is a difference between checkpoints and same points at",
    "start": "2379750",
    "end": "2386270"
  },
  {
    "text": "checkpoints are more lightweight versus save points are we used to you know deploy application across even code",
    "start": "2386270",
    "end": "2394280"
  },
  {
    "text": "changes and fling versions so so this autosave point feature essentially makes",
    "start": "2394280",
    "end": "2400100"
  },
  {
    "text": "it easy even if you have to tear down the leaf link cluster itself to be",
    "start": "2400100",
    "end": "2406130"
  },
  {
    "text": "really like to deploy another cluster from the save a same save point so",
    "start": "2406130",
    "end": "2411800"
  },
  {
    "text": "that's a feature better yeah definitely I'd like John mentioned all the features of linker untouched checkpoints are also",
    "start": "2411800",
    "end": "2417500"
  },
  {
    "text": "automatically supported since since we",
    "start": "2417500",
    "end": "2426710"
  },
  {
    "text": "have no more questions I think that's that's all from our side Chris do you",
    "start": "2426710",
    "end": "2432500"
  },
  {
    "text": "want to take over from here well there is another question just that just came",
    "start": "2432500",
    "end": "2438020"
  },
  {
    "text": "in so we have enough time maybe you wanna answer that Oh looks like there is another question so the question is is",
    "start": "2438020",
    "end": "2445340"
  },
  {
    "text": "there any plan to support fling security related features like TLS certificates",
    "start": "2445340",
    "end": "2450830"
  },
  {
    "text": "to job manager web UI or Kerberos I am",
    "start": "2450830",
    "end": "2456710"
  },
  {
    "text": "assuming that for that you may need to mount kubernetes secrets in your operator lifecycle so currently the",
    "start": "2456710",
    "end": "2468260"
  },
  {
    "text": "finger security features is not supported as a first-class a feature of",
    "start": "2468260",
    "end": "2473840"
  },
  {
    "text": "the operator but you can specify do it",
    "start": "2473840",
    "end": "2479660"
  },
  {
    "text": "outside of the operator IPD and going forward if we have feature requests for",
    "start": "2479660",
    "end": "2488660"
  },
  {
    "text": "this we may make it as a first-class or feature of the operator makes it easy to",
    "start": "2488660",
    "end": "2494200"
  },
  {
    "text": "for user to specify properties for euler's to use but now it's not a",
    "start": "2494200",
    "end": "2500810"
  },
  {
    "text": "first-class feature yeah I definitely feel free to file a",
    "start": "2500810",
    "end": "2506860"
  },
  {
    "text": "feature request and we will we once we get to it we'll pick it up so in general",
    "start": "2506860",
    "end": "2512620"
  },
  {
    "text": "I think from data proc side we do support curb or like coverage clusters",
    "start": "2512620",
    "end": "2519250"
  },
  {
    "text": "so we are definitely going to look into it at some point",
    "start": "2519250",
    "end": "2526380"
  },
  {
    "text": "okay guys any more questions we have some time left",
    "start": "2527970",
    "end": "2533520"
  },
  {
    "text": "well I think that's all so great thank you aniket undergone great presentation",
    "start": "2538600",
    "end": "2545310"
  },
  {
    "text": "so yeah thanks for joining us today this webinar has been recorded and the slides will be online just as much as a",
    "start": "2545310",
    "end": "2552550"
  },
  {
    "text": "presentation later today we are looking forward seeing you at a future CN CF webinar and have a great day thank you",
    "start": "2552550",
    "end": "2560100"
  },
  {
    "text": "thank you",
    "start": "2560100",
    "end": "2563160"
  }
]