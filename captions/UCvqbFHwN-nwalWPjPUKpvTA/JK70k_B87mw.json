[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "okay so welcome to our talk on security and kubernetes clusters with no three and tough we're going to talk about by",
    "start": "30",
    "end": "7580"
  },
  {
    "text": "ensuring the security of container workloads using trusted images that's kind of the notary part of things then",
    "start": "7580",
    "end": "13110"
  },
  {
    "text": "we're gonna talk about how you would go about applying this to your cuban entities clusters we can introduce our",
    "start": "13110",
    "end": "18570"
  },
  {
    "text": "open source solution to solve this problem and then we're going to go through a bit of a demo of it in action",
    "start": "18570",
    "end": "24740"
  },
  {
    "text": "so my name is Liam white I'm a software engineer at IBM cloud I work on the IBM",
    "start": "24740",
    "end": "30449"
  },
  {
    "text": "cloud container registry team so that's dr. registry as a service offering for",
    "start": "30449",
    "end": "35489"
  },
  {
    "text": "IBM clients and I'm also a core contributor on sto - its handles up",
    "start": "35489",
    "end": "42149"
  },
  {
    "text": "there if you've got any feedback on the talk let me know and if it's my call to let me juice himself cool my name is",
    "start": "42149",
    "end": "48600"
  },
  {
    "text": "Michael I'm on the same team as Liam and I've contributed to the notary project",
    "start": "48600",
    "end": "53699"
  },
  {
    "text": "as my Twitter and github credentials feel free to send me messages if you",
    "start": "53699",
    "end": "59789"
  },
  {
    "text": "have any questions or anything okay so I want to kick off with a simple statement",
    "start": "59789",
    "end": "64860"
  },
  {
    "text": "security is hard it's a really challenging problem to solve effectively",
    "start": "64860",
    "end": "70400"
  },
  {
    "start": "65000",
    "end": "195000"
  },
  {
    "text": "with security you get a balancing act between control and freedom the more towards control you go little slower you",
    "start": "70400",
    "end": "77970"
  },
  {
    "text": "can move and there's potentially big problems if you get that wrong there's",
    "start": "77970",
    "end": "83340"
  },
  {
    "text": "no one-size-fits-all solution for it either finding the right balance is up to you and your company",
    "start": "83340",
    "end": "88939"
  },
  {
    "text": "containers have improved freedom and velocity but does that come at the cost",
    "start": "88939",
    "end": "94229"
  },
  {
    "text": "of control if you're running containers in your production environments how can",
    "start": "94229",
    "end": "99540"
  },
  {
    "text": "you make sure that the apps that run inside your production environments are what you think they are then that you",
    "start": "99540",
    "end": "105780"
  },
  {
    "text": "trust the content inside them I'm not talking about who's deploying here I'm",
    "start": "105780",
    "end": "111810"
  },
  {
    "text": "talking about what the problem of who deploys things solve by our back",
    "start": "111810",
    "end": "117600"
  },
  {
    "text": "configuration inside your cluster and controlling who has access to perform operations but if you've got multiple",
    "start": "117600",
    "end": "124740"
  },
  {
    "text": "people deploying to production that doesn't control what they deploy",
    "start": "124740",
    "end": "130080"
  },
  {
    "text": "you have multiple clusters maybe for your development and your staging in",
    "start": "130080",
    "end": "135120"
  },
  {
    "text": "your production what's to stop somebody who's allowed to deploy stuff to production accidentally deploying dev",
    "start": "135120",
    "end": "140310"
  },
  {
    "text": "code there or a third-party app that hasn't been properly audited speaking of",
    "start": "140310",
    "end": "147870"
  },
  {
    "text": "which if you've got requirements that code needs to be vetted by certain teams like security or QA before it goes to",
    "start": "147870",
    "end": "155700"
  },
  {
    "text": "production how can they sign off on a release before that goes to production and is there a digital footprint of that",
    "start": "155700",
    "end": "162360"
  },
  {
    "text": "that your cluster can verify and assert that that's been carried out before allowing that to be deployed and that",
    "start": "162360",
    "end": "170040"
  },
  {
    "text": "the content that's being deployed is the content that was reviewed in the first place that didn't work",
    "start": "170040",
    "end": "177770"
  },
  {
    "text": "died okay what about the bad guys as well if you have malicious third parties",
    "start": "177770",
    "end": "183900"
  },
  {
    "text": "that get access to your container registry how can you protect against them being able to replace your",
    "start": "183900",
    "end": "189480"
  },
  {
    "text": "production app code with something nasty the answer to that is to digitally sign",
    "start": "189480",
    "end": "195360"
  },
  {
    "start": "195000",
    "end": "310000"
  },
  {
    "text": "it trust a digital contents a solved problem you use a digital signature but",
    "start": "195360",
    "end": "203580"
  },
  {
    "text": "where do you store those signatures for container images inter notary notary is",
    "start": "203580",
    "end": "209550"
  },
  {
    "text": "a CNC F project that allows you to sign stuff it first started out as being part of the docker trust content trust stack",
    "start": "209550",
    "end": "216260"
  },
  {
    "text": "and it allows you to store content trusted data and allows you to verify",
    "start": "216260",
    "end": "222090"
  },
  {
    "text": "who has approved it it implements a specification called the update framework which is designed for secure",
    "start": "222090",
    "end": "230400"
  },
  {
    "text": "yet flexible verification of production assets it's got handy stuff for outage free",
    "start": "230400",
    "end": "237709"
  },
  {
    "text": "verification of things so you can rotate your keys easily and things like that it's good to check that out the website",
    "start": "237980",
    "end": "244470"
  },
  {
    "text": "was in the keynotes I think it was the update framework Daioh now the content that we store in this",
    "start": "244470",
    "end": "250830"
  },
  {
    "text": "case is docker image digests a doctor image digest is the sha-256 hash of the",
    "start": "250830",
    "end": "257910"
  },
  {
    "text": "image content now at the moment there's no known vulnerabilities that in sha-256 that allow you to",
    "start": "257910",
    "end": "264800"
  },
  {
    "text": "replace the content inside something with something that has gives the same hash all the vulnerabilities that I'm",
    "start": "264800",
    "end": "272660"
  },
  {
    "text": "aware of at least have allow you to replace a hash thing with some other",
    "start": "272660",
    "end": "279710"
  },
  {
    "text": "beta but basically if you've got a hash and you know that you know that that content is the same when you have a tag",
    "start": "279710",
    "end": "288229"
  },
  {
    "text": "for a docker image that's a human readable link to a sha-256 digest but",
    "start": "288229",
    "end": "294979"
  },
  {
    "text": "that's not immutable you can change what that link points to if you replace latest on your dot on your registry",
    "start": "294979",
    "end": "303380"
  },
  {
    "text": "that's what you're doing you're just pushing a new link to a different digest so how do that's really not working",
    "start": "303380",
    "end": "312130"
  },
  {
    "start": "310000",
    "end": "485000"
  },
  {
    "text": "normally when you pull an image docker queries the registry for the digest",
    "start": "312130",
    "end": "318199"
  },
  {
    "text": "associated with the content of that image in this case I'm using simplified",
    "start": "318199",
    "end": "324039"
  },
  {
    "text": "language but the daemon asks the registry for the digest for have been to",
    "start": "324039",
    "end": "329840"
  },
  {
    "text": "latest the registry gives you that and then it sends a subsequent request to",
    "start": "329840",
    "end": "335900"
  },
  {
    "text": "the registry to pull the content for that repository at that digest at that",
    "start": "335900",
    "end": "341720"
  },
  {
    "text": "point the demon knows that it's expecting the content to have a certain hash and so it can verify that when it",
    "start": "341720",
    "end": "349729"
  },
  {
    "text": "pulls the image that that is complete when Notary fits in is that instead of",
    "start": "349729",
    "end": "358099"
  },
  {
    "text": "going to the registry it can go there the daka daemon can go to notary instead",
    "start": "358099",
    "end": "364810"
  },
  {
    "text": "that way when notary responds it can give you the signed content and also all",
    "start": "364810",
    "end": "370789"
  },
  {
    "text": "the signatures of it and so where your doctor daemon trusts a certain person",
    "start": "370789",
    "end": "375979"
  },
  {
    "text": "they can verify that their signature checks out before then sending the",
    "start": "375979",
    "end": "381440"
  },
  {
    "text": "request to the registry to pull the content",
    "start": "381440",
    "end": "385510"
  },
  {
    "text": "now why not just use docker content trust as it comes in your cluster you can go on to your cluster workers and",
    "start": "387349",
    "end": "393689"
  },
  {
    "text": "restart the docker daemon just with the flag - for Stockert wanted trusts to be turned on the big problem with doing",
    "start": "393689",
    "end": "400740"
  },
  {
    "text": "that is that docker content trust is an on or an off option if it's on",
    "start": "400740",
    "end": "406740"
  },
  {
    "text": "everything has to be signed if it's off it doesn't verify anything but what if there's other people that you trust some",
    "start": "406740",
    "end": "415050"
  },
  {
    "text": "things like the coolest images aren't necessarily signed but you still want to be able to run them in your cluster if",
    "start": "415050",
    "end": "421830"
  },
  {
    "text": "you want to run Prometheus or things like that they might not be signed or at least the latest versions might not you",
    "start": "421830",
    "end": "427349"
  },
  {
    "text": "might need to decide whether you want to copy those into your own namespaces and",
    "start": "427349",
    "end": "432539"
  },
  {
    "text": "sign them yourselves and we'll audit them that way but yeah it's out and out",
    "start": "432539",
    "end": "438750"
  },
  {
    "text": "of the box install of kubernetes won't behave very well if you just turn docker content trusts on but simply dr. Content",
    "start": "438750",
    "end": "447689"
  },
  {
    "text": "Trust isn't powerful enough for kubernetes kubernetes is a powerful tool that deserves powerful trust management",
    "start": "447689",
    "end": "454669"
  },
  {
    "text": "and more control over what you can deploy and where rather than just disabling dct on you're not sorry",
    "start": "454669",
    "end": "461250"
  },
  {
    "text": "enabling DCT on your nodes so we need an application that enables the clusters to",
    "start": "461250",
    "end": "466439"
  },
  {
    "text": "communicate with the trust server before deploying your workload now conveniently kubernetes has an API to do that and",
    "start": "466439",
    "end": "474029"
  },
  {
    "text": "it's called an admission controller and I'm gonna hand over to Liam who's going to dive into how those work how we can",
    "start": "474029",
    "end": "480149"
  },
  {
    "text": "apply it we done a clicker I mean you can try it okay works again Lee it's my",
    "start": "480149",
    "end": "489479"
  },
  {
    "start": "485000",
    "end": "580000"
  },
  {
    "text": "clicker maybe only works for me so admission controllers admission trollers are basically web hooks that you're",
    "start": "489479",
    "end": "495930"
  },
  {
    "text": "triggered during these resource creation so if you go into the background of what happens when you create a resource in",
    "start": "495930",
    "end": "501509"
  },
  {
    "text": "coop or workloads or pod something like that you create the resource with cube seats you'll apply the API server",
    "start": "501509",
    "end": "507330"
  },
  {
    "text": "receives that request request it adds some mutates information into that request so things like if you're using",
    "start": "507330",
    "end": "514140"
  },
  {
    "text": "service accounts to register your image pool secrets or mutate that information into there at that point",
    "start": "514140",
    "end": "519768"
  },
  {
    "text": "then stalls or persists that information in sed and then the Kubla checks against",
    "start": "519769",
    "end": "524869"
  },
  {
    "text": "the API server and then actions what the API server tells tells that that node should look like so recently you have",
    "start": "524869",
    "end": "533569"
  },
  {
    "text": "added the ability to add custom admission controllers so these customer mission controllers",
    "start": "533569",
    "end": "538999"
  },
  {
    "text": "work in the same way that the built-in ones work it's that trigger during the creation of",
    "start": "538999",
    "end": "544399"
  },
  {
    "text": "the object by the API server so after after authentication and authorization against the API server the cube AP the",
    "start": "544399",
    "end": "551839"
  },
  {
    "text": "cube api serve and then reach out to some of these admission web hooks and they'll respond with the correct or",
    "start": "551839",
    "end": "558319"
  },
  {
    "text": "they'll respond with their the relevant information the customization of a c or",
    "start": "558319",
    "end": "564799"
  },
  {
    "text": "additional acs allows you to add the custom mutation so that's that's how you",
    "start": "564799",
    "end": "570230"
  },
  {
    "text": "would go ahead and fix the digest so there are two types of workbooks this me",
    "start": "570230",
    "end": "576949"
  },
  {
    "text": "buzzing there are two types of web hooks that are interest to us so we've got",
    "start": "576949",
    "end": "585259"
  },
  {
    "start": "580000",
    "end": "640000"
  },
  {
    "text": "validates commission web hooks which were added in coupon a and validates commission web hooks are basically a yes",
    "start": "585259",
    "end": "590299"
  },
  {
    "text": "or no you can't deploy this thing and then we've got mutate commission web hooks and mutating admission web hooks",
    "start": "590299",
    "end": "596209"
  },
  {
    "text": "are basically a yes you can deploy this if you apply these patches or no you're not allowed to deploy this at all so how",
    "start": "596209",
    "end": "603170"
  },
  {
    "text": "does this relate to notary well like Michael mentioned earlier when you create generally when you create an",
    "start": "603170",
    "end": "608720"
  },
  {
    "text": "workload in communities you're going to give it the full image name with the tag and like again like Michael said that's",
    "start": "608720",
    "end": "616069"
  },
  {
    "text": "not immutable that's just a pointer to a digest somewhere and how to add so how do we know someone hasn't pushed over",
    "start": "616069",
    "end": "621649"
  },
  {
    "text": "top of this what we want is something immutable so what we want is something looks like that which is the digest and",
    "start": "621649",
    "end": "627579"
  },
  {
    "text": "preferably we want to be able to ask notary we want where we want some kind",
    "start": "627579",
    "end": "633379"
  },
  {
    "text": "of secure guarantee that the digest itself is correct and it hasn't been tampered with and that's where notary comes into this equation so if you",
    "start": "633379",
    "end": "644509"
  },
  {
    "start": "640000",
    "end": "700000"
  },
  {
    "text": "install the mutating web book this is kind of the flow you would do with no true so resource creation request comes",
    "start": "644509",
    "end": "650629"
  },
  {
    "text": "in the API server will call out to your mutating in webhook the mutating emission webhook",
    "start": "650629",
    "end": "656550"
  },
  {
    "text": "will ask notary for the trust information for all of that image repository so for every tag basic",
    "start": "656550",
    "end": "664079"
  },
  {
    "text": "basically it will give you a collection of digests back and it will send the",
    "start": "664079",
    "end": "669149"
  },
  {
    "text": "signatures back like micro mentions the mutating webhook will then look for the most recent trusted digest and mutate",
    "start": "669149",
    "end": "675829"
  },
  {
    "text": "the sent back a mutation request to the API server so what do these look like",
    "start": "675829",
    "end": "684140"
  },
  {
    "text": "this is kind of this is generic admission or mutation emission webhook",
    "start": "684140",
    "end": "689940"
  },
  {
    "text": "requests or general requests I think is all admission across right yeah so if",
    "start": "689940",
    "end": "695310"
  },
  {
    "text": "you wanted to use your own you can use some of this information as well but I'm gonna give it a specific example of what we're doing so this is the API server",
    "start": "695310",
    "end": "703860"
  },
  {
    "start": "700000",
    "end": "820000"
  },
  {
    "text": "calling out to the web hook it has a UID as that it has a kind and a resource",
    "start": "703860",
    "end": "709320"
  },
  {
    "text": "which is bottom pods in this case as the namespace the requester workloads being",
    "start": "709320",
    "end": "714959"
  },
  {
    "text": "deployed into and that it has the operation so this is a create and then it has the object which is the Jason bye",
    "start": "714959",
    "end": "721440"
  },
  {
    "text": "slice of the actual objects you're trying to create so what basically this request is saying is someone is trying",
    "start": "721440",
    "end": "729209"
  },
  {
    "text": "to create a pods in the default namespace our response is this an",
    "start": "729209",
    "end": "735269"
  },
  {
    "text": "omission response struct it looks something like this so we've got the UID again that will have to match the UID of the admission",
    "start": "735269",
    "end": "741120"
  },
  {
    "text": "request we've got a large this is the true or false yes you're allowed to deploy this if you're not allowed to",
    "start": "741120",
    "end": "748290"
  },
  {
    "text": "deploy this it's usually useful to give a to give the API server a message to give back to the user so this particular",
    "start": "748290",
    "end": "755699"
  },
  {
    "text": "one isn't a very useful image message because just as on Trust image we usually give better error messages than",
    "start": "755699",
    "end": "760860"
  },
  {
    "text": "that but this is just an example and we're gonna return the four or one code though now it'll also have to contain a",
    "start": "760860",
    "end": "768149"
  },
  {
    "text": "patch type so this is Jason patch widths which is an ITF standard and the patch",
    "start": "768149",
    "end": "775110"
  },
  {
    "text": "itself which is a white slice of a slice of patches so what does a patch look",
    "start": "775110",
    "end": "780690"
  },
  {
    "text": "like again this is just the ICF Jason Pat standard we've got the operation",
    "start": "780690",
    "end": "786990"
  },
  {
    "text": "which is replace we're saying to the API server I want you to replace the first",
    "start": "786990",
    "end": "794640"
  },
  {
    "text": "container in the pots back and the image field in that first container that's what that container / 0 / images and",
    "start": "794640",
    "end": "802230"
  },
  {
    "text": "then the value I want you to replace it with so what we've now effectively done is we've taken the tag that you asked to",
    "start": "802230",
    "end": "809610"
  },
  {
    "text": "be created and we've verified with notary that this is the digest you",
    "start": "809610",
    "end": "814890"
  },
  {
    "text": "actually wanted and that's what we're going to deploy so we've come up with an",
    "start": "814890",
    "end": "819930"
  },
  {
    "text": "open source solution for this problem it's called port CRS port CRS means gatekeeper in Greek because all good",
    "start": "819930",
    "end": "825510"
  },
  {
    "start": "820000",
    "end": "875000"
  },
  {
    "text": "kubernetes projects have to be in Greek it's open source and available here on",
    "start": "825510",
    "end": "830790"
  },
  {
    "text": "github.com / y vm / port tiaras currently we only support the IBM cloud",
    "start": "830790",
    "end": "836610"
  },
  {
    "text": "notary server but we're happy to work with people to support your your notary",
    "start": "836610",
    "end": "842040"
  },
  {
    "text": "instances the reason that this isn't necessarily a trivial task is because you have to map the notary server to the",
    "start": "842040",
    "end": "848820"
  },
  {
    "text": "registry that it talks to and that's obviously going to be via the image name",
    "start": "848820",
    "end": "853980"
  },
  {
    "text": "and with with our own one we obviously know how how that maps and that type of",
    "start": "853980",
    "end": "859020"
  },
  {
    "text": "thing but with more generic solutions we need to come up with a more for more generic notary server instances we need",
    "start": "859020",
    "end": "864510"
  },
  {
    "text": "to come up with a more generic solution so like I said we're happy to work with other people that support your support",
    "start": "864510",
    "end": "870690"
  },
  {
    "text": "others know treants notary instances so as a security tool that was designed",
    "start": "870690",
    "end": "875970"
  },
  {
    "start": "875000",
    "end": "980000"
  },
  {
    "text": "with security in mind so if you haven't got any policies in any of so if you",
    "start": "875970",
    "end": "882720"
  },
  {
    "text": "haven't defined any policies we're just going to blanket block everything the idea is you have the whitelist images so",
    "start": "882720",
    "end": "890300"
  },
  {
    "text": "that's general security best practice of whitelisting rather than blacklisting we",
    "start": "890300",
    "end": "896190"
  },
  {
    "text": "fell close so this prevents someone from basically breaking through and deploying something if portiere esters down so 40",
    "start": "896190",
    "end": "903540"
  },
  {
    "text": "errors might be down for a configuration issue or some malicious actor has intentionally taken it down by tossing",
    "start": "903540",
    "end": "909510"
  },
  {
    "text": "it in order to deploy their stuff or maybe a bug hopefully not but maybe",
    "start": "909510",
    "end": "916480"
  },
  {
    "text": "we also have namespace or cluster wide granularity so if you have running if",
    "start": "916480",
    "end": "922120"
  },
  {
    "text": "you're managing a multi-tenant cluster for a group of developers you can define specific policies for specific",
    "start": "922120",
    "end": "928480"
  },
  {
    "text": "namespaces kind of like you do with cluster rolls and rolls this similar thing and we've written it in a way so",
    "start": "928480",
    "end": "935440"
  },
  {
    "text": "that it's easier to build other image checks on top of it so what this means is if you want to do other image",
    "start": "935440",
    "end": "941139"
  },
  {
    "text": "validation you can reuse a lot of our libraries and our code and that type of",
    "start": "941139",
    "end": "946720"
  },
  {
    "text": "things so internally the IBM cloud registry has a vulnerability advisor internally we have code that reuses a",
    "start": "946720",
    "end": "954730"
  },
  {
    "text": "lot of the open source code and then it builds on top of the CID you have to do",
    "start": "954730",
    "end": "960579"
  },
  {
    "text": "some CID regeneration regeneration of the client set code so people who have written controllers before know that",
    "start": "960579",
    "end": "966820"
  },
  {
    "text": "there's a CID generation for the client set so you'd have to do that and then obviously you have to write your own",
    "start": "966820",
    "end": "971949"
  },
  {
    "text": "custom code to handle that policy when it comes in but it's relatively easy",
    "start": "971949",
    "end": "978990"
  },
  {
    "text": "so this is our cluster image policy definition so basic cube CID",
    "start": "978990",
    "end": "986740"
  },
  {
    "text": "we've got a policy spec and the",
    "start": "986740",
    "end": "992069"
  },
  {
    "text": "repositories field or the repositories here which is a slice of basically",
    "start": "992069",
    "end": "997120"
  },
  {
    "text": "docker repository repository sorry so what this one is basically saying is I",
    "start": "997120",
    "end": "1003829"
  },
  {
    "text": "want oak cluster wide I only want images from the limb white slash Kubik on",
    "start": "1003829",
    "end": "1010139"
  },
  {
    "text": "docker hub namespace as long as they've been signed by someone there's no trust pinning here this is just a blanket",
    "start": "1010139",
    "end": "1015569"
  },
  {
    "text": "someone has signed them that's not very realistic example so it's gone to more",
    "start": "1015569",
    "end": "1021079"
  },
  {
    "text": "realistic example so again cluster white image policy and what this one basically says is I want",
    "start": "1021079",
    "end": "1028410"
  },
  {
    "text": "to be able to deploy anything from the Liam white namespace on docker hub as long as it has been signed by this",
    "start": "1028410",
    "end": "1036350"
  },
  {
    "text": "public key in this secret so that's what that sign of secrets field is there and the secret name so this is what the",
    "start": "1036350",
    "end": "1042630"
  },
  {
    "text": "secret will look like this is obviously just create a normal cube secret the",
    "start": "1042630",
    "end": "1048048"
  },
  {
    "text": "metadata name has to match a sign a secret name that was listed in",
    "start": "1048049",
    "end": "1053550"
  },
  {
    "text": "the classroom each policy so that's secret name there so we can find it and then the data itself so the name has to",
    "start": "1053550",
    "end": "1060150"
  },
  {
    "text": "be the sign of role that you're looking for so that might be the QA team the security team that's that type of thing",
    "start": "1060150",
    "end": "1066060"
  },
  {
    "text": "that's we need to check for and then the public key is their public key that matches obviously the private key pair",
    "start": "1066060",
    "end": "1072140"
  },
  {
    "text": "or it matches the private key of the person who's actually signed the image",
    "start": "1072140",
    "end": "1077660"
  },
  {
    "text": "now if you want some kubernetes namespace granularity as opposed to the",
    "start": "1077660",
    "end": "1082890"
  },
  {
    "text": "registry namespace which is a slightly different concept so if you want to be able to enforce on just a specific",
    "start": "1082890",
    "end": "1088320"
  },
  {
    "text": "namespace then you would define something like this this is exactly the same cluster wide policy but now we're",
    "start": "1088320",
    "end": "1094500"
  },
  {
    "text": "just enforcing it on a single namespace so partly due to time constraints but",
    "start": "1094500",
    "end": "1099540"
  },
  {
    "text": "mostly because we're cowards we've got a pre-recorded demo so I'll hand over to Michael and Michael can graduate to it",
    "start": "1099540",
    "end": "1106320"
  },
  {
    "text": "you don't need that okay good start",
    "start": "1106320",
    "end": "1117860"
  },
  {
    "text": "okay so Porteous is a home chart so the",
    "start": "1117860",
    "end": "1123300"
  },
  {
    "text": "first thing I'm going to do is install helm and initialize it to install tiller then I'm gonna clone the github port ers",
    "start": "1123300",
    "end": "1131430"
  },
  {
    "text": "project to just change directory to where the Helms is next thing I'm gonna",
    "start": "1131430",
    "end": "1138270"
  },
  {
    "text": "do is install the channel that's just a helm install you can dive a little bit",
    "start": "1138270",
    "end": "1143280"
  },
  {
    "text": "more into what this is doing in the top left that's cube CTL get or just to show",
    "start": "1143280",
    "end": "1148410"
  },
  {
    "text": "everything happening bottom left is our jobs just to show you our C IDs and",
    "start": "1148410",
    "end": "1153810"
  },
  {
    "text": "things like that being created top right is the CRTs themselves and the bottom right is that image of Mission config",
    "start": "1153810",
    "end": "1160080"
  },
  {
    "text": "that's our mutating admission web hook right there so the jobs are all done so",
    "start": "1160080",
    "end": "1165540"
  },
  {
    "text": "that's pretty much done and ready to switch back cool and you get a nice",
    "start": "1165540",
    "end": "1172440"
  },
  {
    "text": "message to say when done install so never look more into that mutating web",
    "start": "1172440",
    "end": "1178920"
  },
  {
    "text": "app we create a figuration called image admission convict we're looking at us all the way",
    "start": "1178920",
    "end": "1187840"
  },
  {
    "text": "down here create an update on a whole bunch of resources there's that failure policy to say fail that will tell the",
    "start": "1187840",
    "end": "1194650"
  },
  {
    "text": "cube API server that if it's not there to respond to a request to deny it",
    "start": "1194650",
    "end": "1200010"
  },
  {
    "text": "okay let's start deploying some stuff first let's have a look at that cluster",
    "start": "1200010",
    "end": "1206380"
  },
  {
    "text": "image policy so we install a cluster image policy by default and the requirements on that are to enforce",
    "start": "1206380",
    "end": "1213610"
  },
  {
    "text": "trust for every image so you've got name star Trust enabled tree so if I go and",
    "start": "1213610",
    "end": "1222430"
  },
  {
    "text": "have a look at a workload and just move into my playground and look at Liberty",
    "start": "1222430",
    "end": "1229680"
  },
  {
    "text": "so Liberty is a IBM application server it's just a handy image to pull from at",
    "start": "1229680",
    "end": "1235240"
  },
  {
    "text": "the moment that's pulling from my private unsigned image of IBM Liberty so",
    "start": "1235240",
    "end": "1240370"
  },
  {
    "text": "if I quit that and then issue a cube apply I've aliased keep CTL to a plot to",
    "start": "1240370",
    "end": "1247000"
  },
  {
    "text": "K because I'm lazy but you see no valid trust data for unsigned unsigned it's",
    "start": "1247000",
    "end": "1253330"
  },
  {
    "text": "that tag at the end but it's just handy that fits there so now if I go and edit",
    "start": "1253330",
    "end": "1259060"
  },
  {
    "text": "the cluster image policy and go and disable that so Trust to disabled I'll set that to",
    "start": "1259060",
    "end": "1265900"
  },
  {
    "text": "false now when I try to issue that same deployment again so I'm just gonna K",
    "start": "1265900",
    "end": "1274120"
  },
  {
    "text": "apply Liberty Gamal again without changing the file that's all that's allowed you need to keep an eye out and",
    "start": "1274120",
    "end": "1280570"
  },
  {
    "text": "make sure that you put proper are back on your policies because of that in this case I'm gonna go have a look at to that",
    "start": "1280570",
    "end": "1286600"
  },
  {
    "text": "pod and just show down at the bottom in the logs you can see that that has not actually changed the image at all",
    "start": "1286600",
    "end": "1292900"
  },
  {
    "text": "because it hasn't actually gone and looked up the trust data because it's disabled cool",
    "start": "1292900",
    "end": "1300340"
  },
  {
    "text": "so let's enable Trost again so you're just going to go back into the cluster image policy and set that false back to",
    "start": "1300340",
    "end": "1305770"
  },
  {
    "text": "tree and man I type slowly so now I'm",
    "start": "1305770",
    "end": "1317110"
  },
  {
    "text": "going to deploy a signed workload now IBM's public images are all signed so",
    "start": "1317110",
    "end": "1322960"
  },
  {
    "text": "that's a really handy image to use so I'm going to use the IBM Liberty public",
    "start": "1322960",
    "end": "1328600"
  },
  {
    "text": "image from the bluemix registry so I've just changed that - yeah the different",
    "start": "1328600",
    "end": "1335530"
  },
  {
    "text": "image that is now signed I'll apply that and that's deployed so with trusts",
    "start": "1335530",
    "end": "1342070"
  },
  {
    "text": "enabled and signed image gets deployed and when I then should go and show the",
    "start": "1342070",
    "end": "1347590"
  },
  {
    "text": "container that one has been mutated so container image that digests well in",
    "start": "1347590",
    "end": "1353380"
  },
  {
    "text": "this case it was also present on the machine but there you go it's using that specific image at that specific digest",
    "start": "1353380",
    "end": "1361170"
  },
  {
    "text": "we want to do something more cool we want to push our own signed workloads so",
    "start": "1361170",
    "end": "1366280"
  },
  {
    "text": "first we're going to need to push assigned workload so - that will enable docker content trust on our local",
    "start": "1366280",
    "end": "1372580"
  },
  {
    "text": "machine and now I'm going to do bxc our login let's just log into the bluemix container registry cuz when you've got",
    "start": "1372580",
    "end": "1379210"
  },
  {
    "text": "trust and able to gives you a handy printout to target the right trust server and now we're gonna push the",
    "start": "1379210",
    "end": "1385750"
  },
  {
    "text": "image so that's just a docker push is exactly the same way as before but this",
    "start": "1385750",
    "end": "1391960"
  },
  {
    "text": "time after pushing the image it's also going to push on trust data into the",
    "start": "1391960",
    "end": "1397390"
  },
  {
    "text": "notary server so that will prompt me to generate some keys excellent",
    "start": "1397390",
    "end": "1403630"
  },
  {
    "text": "and now that's a signed image and that's signed in my private in my private namespace in the container registry and",
    "start": "1403630",
    "end": "1409510"
  },
  {
    "text": "I can edit that deployment put that signed image into the deployment and deploy that with the trust verification",
    "start": "1409510",
    "end": "1417160"
  },
  {
    "text": "enabled so that's now set to my signed Liberty and now I'll apply that just to",
    "start": "1417160",
    "end": "1425860"
  },
  {
    "text": "show that happens and that's allowed and so that gives me that that deployment was configured",
    "start": "1425860",
    "end": "1432909"
  },
  {
    "text": "let's go one step further though and do proper trust pinning so firstly we need",
    "start": "1432909",
    "end": "1438980"
  },
  {
    "text": "a signer keeper so for that let's generate one we use docker trust key",
    "start": "1438980",
    "end": "1445250"
  },
  {
    "text": "generate the dr. trois commands anew in docker 1712 I think and they've just",
    "start": "1445250",
    "end": "1451370"
  },
  {
    "text": "come out of experimental but they handy to interact with notary so I've created",
    "start": "1451370",
    "end": "1456679"
  },
  {
    "text": "a public key pair there's the public key the private key automatically gets injected into my daughter trust chain",
    "start": "1456679",
    "end": "1462740"
  },
  {
    "text": "and I don't need to worry about it I'm going to add that signer on to my",
    "start": "1462740",
    "end": "1467809"
  },
  {
    "text": "repository that will issue that will tell docker to go and push that into the",
    "start": "1467809",
    "end": "1472940"
  },
  {
    "text": "notary I need to give it the name mol pitch inside its trust sign add more pitch in that's the name of the role and",
    "start": "1472940",
    "end": "1479120"
  },
  {
    "text": "then the key is bold Fijian table that's what I generated just so happens that I like more pigeons just a thing that",
    "start": "1479120",
    "end": "1486020"
  },
  {
    "text": "asked me for the repository key just to prove that I have the ability to add signers into that repository it's sort",
    "start": "1486020",
    "end": "1492830"
  },
  {
    "text": "of an authentication by keys and now I'll just issue a sign command because",
    "start": "1492830",
    "end": "1498679"
  },
  {
    "text": "I've got that private key on my machine I can issue a sign and this time it's asked me for the mole pigeon key so now",
    "start": "1498679",
    "end": "1506539"
  },
  {
    "text": "that image that we pushed before is signed using my mole pigeon key just to",
    "start": "1506539",
    "end": "1512390"
  },
  {
    "text": "prove that I was going to do docker trust inspect you have to give that the",
    "start": "1512390",
    "end": "1517940"
  },
  {
    "text": "pretty command now to make it not Jason but they go and they go so that shows",
    "start": "1517940",
    "end": "1524390"
  },
  {
    "text": "that the latest tag up there has that digest and has been signed by Moulton",
    "start": "1524390",
    "end": "1530929"
  },
  {
    "text": "it's me and there's my key just to prove that that is the right key for reference",
    "start": "1530929",
    "end": "1537559"
  },
  {
    "text": "I'm also going to inspect the IBM public image which is signed in a slightly",
    "start": "1537559",
    "end": "1543320"
  },
  {
    "text": "different way we're not using a specific sign a role for that we're just using",
    "start": "1543320",
    "end": "1549350"
  },
  {
    "text": "the repository admin key and so it'll tell you that that on the signers that's the repository Abner",
    "start": "1549350",
    "end": "1557320"
  },
  {
    "text": "okay so let's get that key into the cluster we're gonna do cube CCL create",
    "start": "1557340",
    "end": "1564059"
  },
  {
    "text": "secret to avoid writing samyama I'll call it my key and I'll give it the name",
    "start": "1564059",
    "end": "1570330"
  },
  {
    "text": "is more pidgin that was the sign of role that I created and I'll give it my",
    "start": "1570330",
    "end": "1576149"
  },
  {
    "text": "public key so that creates the secret puts it into the cluster excellent and",
    "start": "1576149",
    "end": "1586409"
  },
  {
    "text": "now I can put that into an image policy to ensure I'm gonna do a namespace",
    "start": "1586409",
    "end": "1593730"
  },
  {
    "text": "policy so an image policy not a cluster image policy here just because I can't and I just add the sign of secrets",
    "start": "1593730",
    "end": "1601259"
  },
  {
    "text": "section to this and I give that the name with my key that's the name of the",
    "start": "1601259",
    "end": "1607889"
  },
  {
    "text": "secret that I created okay so now if I",
    "start": "1607889",
    "end": "1615269"
  },
  {
    "text": "were to go and look at the workload that I was pushing before that's working off",
    "start": "1615269",
    "end": "1621509"
  },
  {
    "text": "of the trust the signed public image that's not signed by me so when I equip",
    "start": "1621509",
    "end": "1629460"
  },
  {
    "text": "this and I apply that into the cluster that's rejected with a slightly less",
    "start": "1629460",
    "end": "1635610"
  },
  {
    "text": "pleasant message but there you go but you can see at the bottom no signature found for role null pigeon in other words I haven't signed that",
    "start": "1635610",
    "end": "1642330"
  },
  {
    "text": "image and so if I then change that in my",
    "start": "1642330",
    "end": "1649769"
  },
  {
    "text": "deployment to deploy off of the image that I just pushed this one works",
    "start": "1649769",
    "end": "1662778"
  },
  {
    "text": "and that's all that's what I've got and that will show that that that pod has",
    "start": "1662900",
    "end": "1668660"
  },
  {
    "text": "been mutated you can use that configuration to basically set that as fine-grained or not fine-grained as much",
    "start": "1668660",
    "end": "1676280"
  },
  {
    "text": "as you want it anywhere in your cluster if you have multiple namespaces that's weird",
    "start": "1676280",
    "end": "1681590"
  },
  {
    "start": "1680000",
    "end": "2067000"
  },
  {
    "text": "if you have multiple next phases you can add different policies for different",
    "start": "1681590",
    "end": "1688400"
  },
  {
    "text": "teams to scale up to whatever size Enterprise you've got okay so that's the",
    "start": "1688400",
    "end": "1696290"
  },
  {
    "text": "end of our talk I'll toot answers on there if you have any feedback or further questions on poor TRS we can",
    "start": "1696290",
    "end": "1702590"
  },
  {
    "text": "probably also answer some questions on notary as well we like to ask you to go get another",
    "start": "1702590",
    "end": "1708260"
  },
  {
    "text": "play around with it if they're only you've got if you come across any issues or you have any feature requests just",
    "start": "1708260",
    "end": "1713660"
  },
  {
    "text": "raising it on github and with that we'll take questions [Applause]",
    "start": "1713660",
    "end": "1726919"
  },
  {
    "text": "there is but we'll repeat it",
    "start": "1727149",
    "end": "1730990"
  },
  {
    "text": "okay that's David isn't it yeah David down here I was just pointing out when I said",
    "start": "1751120",
    "end": "1758180"
  },
  {
    "text": "that that was two of when you added the signer and it asked me for the repository key and that was also",
    "start": "1758180",
    "end": "1764860"
  },
  {
    "text": "decrypting the repository key on disks so that it can be used yes",
    "start": "1764860",
    "end": "1774400"
  },
  {
    "text": "under the covers out there we go yeah under the covers the docker trust",
    "start": "1814340",
    "end": "1822490"
  },
  {
    "text": "signers is basically creating a delegation role in notary they are the same thing the question was how would we",
    "start": "1822490",
    "end": "1840380"
  },
  {
    "text": "integrate it with a CID CI CD pipeline so basically you just install it into",
    "start": "1840380",
    "end": "1847669"
  },
  {
    "text": "your cluster and as long as your CI CD is sending request queue API server or",
    "start": "1847669",
    "end": "1855010"
  },
  {
    "text": "doing coop CTL apply or things like that and then the emission webhook will run",
    "start": "1855010",
    "end": "1861730"
  },
  {
    "text": "yeah it's the same installation policy as before everything goes through the",
    "start": "1861730",
    "end": "1867200"
  },
  {
    "text": "mission webhook you didn't make sure you sign the images when you push it into the registry though that's the other thing",
    "start": "1867200",
    "end": "1874240"
  },
  {
    "text": "yeah they yeah then in that case you have to have docker content trust turned on in order to push the images and you",
    "start": "1875559",
    "end": "1883370"
  },
  {
    "text": "have to give your CI the signing keys as well so ah sorry the public images in",
    "start": "1883370",
    "end": "1892460"
  },
  {
    "text": "the bluemix registry are pushed using say ICD the CI just has a key that we",
    "start": "1892460",
    "end": "1899419"
  },
  {
    "text": "pull in from store you know back in yes",
    "start": "1899419",
    "end": "1908440"
  },
  {
    "text": "so if your CI city gentle Jamie's container eyes",
    "start": "1913100",
    "end": "1918610"
  },
  {
    "text": "you can use a notary seal on ladies big yeah you can I use the notary CLI to",
    "start": "1926030",
    "end": "1932330"
  },
  {
    "text": "sign the image but if you have enough access to some docker content in order",
    "start": "1932330",
    "end": "1937980"
  },
  {
    "text": "to push the in order to instruct something to push the image then you",
    "start": "1937980",
    "end": "1942990"
  },
  {
    "text": "probably have enough to get it to sign the image actually no all the signing stuff is client-side so that's what I",
    "start": "1942990",
    "end": "1973920"
  },
  {
    "text": "did with the daca trust sign command that image was already in the registry and that wasn't adjusted as long as the",
    "start": "1973920",
    "end": "1979590"
  },
  {
    "text": "local machine is aware of that being the signed image and it has the latest trust",
    "start": "1979590",
    "end": "1984900"
  },
  {
    "text": "data so in other words if you turned up a Content trust on before you pull the image in order to run your tests then",
    "start": "1984900",
    "end": "1992100"
  },
  {
    "text": "you can yeah then you can run docker",
    "start": "1992100",
    "end": "1997140"
  },
  {
    "text": "trust sign afterwards you can't run the docker trust sign command inside a",
    "start": "1997140",
    "end": "2002930"
  },
  {
    "text": "container yes you can run docker trust",
    "start": "2002930",
    "end": "2008660"
  },
  {
    "text": "because it's compared clients yes client it doesn't interact with the dock edema yeah that's it yeah yeah no",
    "start": "2008660",
    "end": "2021110"
  },
  {
    "text": "it's true you can use the notary seal as well yeah that's why we spoke about it",
    "start": "2021110",
    "end": "2028520"
  },
  {
    "text": "that's what we found as well",
    "start": "2028520",
    "end": "2031780"
  },
  {
    "text": "yes yep it's a slice other than race you can just require as many as you want",
    "start": "2034909",
    "end": "2041658"
  },
  {
    "text": "it's all of the what so if you specify the sign of secrets in your policy",
    "start": "2045470",
    "end": "2050520"
  },
  {
    "text": "it requires that all of those are present there can be more but it requires that all of the ones in the",
    "start": "2050520",
    "end": "2056310"
  },
  {
    "text": "science secrets are present okay if there any more questions we'll be outside to answer them so thanks very",
    "start": "2056310",
    "end": "2063599"
  },
  {
    "text": "much [Applause]",
    "start": "2063599",
    "end": "2069019"
  }
]