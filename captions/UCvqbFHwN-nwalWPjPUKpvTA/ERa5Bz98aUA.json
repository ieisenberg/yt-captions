[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "all right gang um i suppose we'll go ahead and get started um we're a minute over um",
    "start": "799",
    "end": "8559"
  },
  {
    "text": "cool so real quick we're at surface smash con i'm sure you guys know that um uh",
    "start": "8559",
    "end": "14480"
  },
  {
    "text": "uh congratulations on surviving uh the apocalypse as well um anyways um real quick this is a talk",
    "start": "14480",
    "end": "22000"
  },
  {
    "text": "about k-native eventing um and more specifically what i'd like to refer to as a cloud native event bus",
    "start": "22000",
    "end": "27920"
  },
  {
    "text": "um think old-school esbs but um it's 2021 and we're going to present us something a little bit different than a",
    "start": "27920",
    "end": "34239"
  },
  {
    "text": "monolithic esp um we're going to inject issio into this to attempt to get give ourselves some",
    "start": "34239",
    "end": "40640"
  },
  {
    "text": "notion of governance um which k-native eventing may kind of lack um about me",
    "start": "40640",
    "end": "46399"
  },
  {
    "text": "i'm a senior architect of red hat i work in an emerging technologies practice um in services you can check me out at",
    "start": "46399",
    "end": "53360"
  },
  {
    "text": "entropic.me about or you can go to mike uh cosplay.com so",
    "start": "53360",
    "end": "60160"
  },
  {
    "text": "on and so forth um all right uh let's uh get started so",
    "start": "60160",
    "end": "67040"
  },
  {
    "start": "64000",
    "end": "157000"
  },
  {
    "text": "we've got two sessions as a workshop um we're gonna uh initially introduce the workshop we're going to talk about the",
    "start": "67040",
    "end": "73680"
  },
  {
    "text": "rise of cloud native architecture and why that's important we're going to get into what governance is like you know",
    "start": "73680",
    "end": "79920"
  },
  {
    "text": "it's uh typically what i would call a bad word but um we'll see why it's important in this particular context",
    "start": "79920",
    "end": "86320"
  },
  {
    "text": "we're going to talk about what how k-native provides governance why that's important in and of itself and",
    "start": "86320",
    "end": "92240"
  },
  {
    "text": "then why we would use something like seo we're going to do a k-native deep dive",
    "start": "92240",
    "end": "97520"
  },
  {
    "text": "we need to kind of go figure out how k native works with issio um k native eventing uh",
    "start": "97520",
    "end": "103680"
  },
  {
    "text": "doesn't work right out of the box with istio so um uh we'll definitely want to do a little bit of a deep dive",
    "start": "103680",
    "end": "110000"
  },
  {
    "text": "because we've got some things to do which you guys will see in the repo i'll point you towards speaking of which um",
    "start": "110000",
    "end": "115680"
  },
  {
    "text": "if you guys go to github.com uh my coslo okay native event examples this is where",
    "start": "115680",
    "end": "120719"
  },
  {
    "text": "everything's going to happen i'm going to say that again in a second in case you didn't get it we're going to talk about governing",
    "start": "120719",
    "end": "126719"
  },
  {
    "text": "knativ we're going to do a demo um where we're actually going to walk through some of this we're going to",
    "start": "126719",
    "end": "131840"
  },
  {
    "text": "discuss what happened we're going to talk about some of the things some of the governance items uh",
    "start": "131840",
    "end": "138080"
  },
  {
    "text": "and then in session two we'll come back we'll ask the existential question how",
    "start": "138080",
    "end": "143520"
  },
  {
    "text": "did it go um and then um of course uh there's probably some more things we could do",
    "start": "143520",
    "end": "149360"
  },
  {
    "text": "with issio that we're not demonstrating here um so we'll talk about some of those things as well so there's a little bait",
    "start": "149360",
    "end": "154720"
  },
  {
    "text": "on the hook for you guys to come back to session two all right so the workshop intro",
    "start": "154720",
    "end": "160080"
  },
  {
    "start": "157000",
    "end": "287000"
  },
  {
    "text": "um again as promised there is that github earl again um please go there um follow the instructions it's gonna",
    "start": "160080",
    "end": "166959"
  },
  {
    "text": "take a while in fact it's gonna take um quite a long while it's going to take so long that we're",
    "start": "166959",
    "end": "172319"
  },
  {
    "text": "going to get into theory and talk about why we're doing this to begin with um for a while and then uh we'll check back",
    "start": "172319",
    "end": "178480"
  },
  {
    "text": "in um what we're using we're using a kubernetes system in my case uh i'm using openshift48 you",
    "start": "178480",
    "end": "185040"
  },
  {
    "text": "don't need to use openshift in fact um you could really use any kubernetes cicero um as long as we're talking about",
    "start": "185040",
    "end": "191440"
  },
  {
    "text": "um a version past 119 or something like that um and seo 2x just around in my",
    "start": "191440",
    "end": "197760"
  },
  {
    "text": "case i'm using maestra it's the red hat operator however generally speaking what",
    "start": "197760",
    "end": "203040"
  },
  {
    "text": "you'll find is the primitives we're using are issue primitives there's nothing mostly nothing specific",
    "start": "203040",
    "end": "210319"
  },
  {
    "text": "that's going to happen that is meister specific um so you can probably get away with just about any seo distro as long",
    "start": "210319",
    "end": "217040"
  },
  {
    "text": "as it's a 2x um disarm we're gonna um uh use k native in my case again i'm using",
    "start": "217040",
    "end": "224480"
  },
  {
    "text": "uh openshift serverless however um you don't need to use openshift serverless we're only using",
    "start": "224480",
    "end": "230319"
  },
  {
    "text": "k-native serving and k-native eventing primitives um really you could use most",
    "start": "230319",
    "end": "235680"
  },
  {
    "text": "recent distros of k-natives so if you guys don't have um a if you don't have a",
    "start": "235680",
    "end": "242000"
  },
  {
    "text": "open shift available with all the openshift uh fun you can really just use like i said any kubernetes cistro most",
    "start": "242000",
    "end": "248640"
  },
  {
    "text": "issio operators uh most k native operators so on and so forth right um",
    "start": "248640",
    "end": "254480"
  },
  {
    "text": "and then i'm going to use something to demonstrate k native services and how we",
    "start": "254480",
    "end": "259519"
  },
  {
    "text": "kind of get on the cloud native event bus i'm going to use something called",
    "start": "259519",
    "end": "264560"
  },
  {
    "text": "camel k totally immaterial to what we're doing here um as we'll note um what we're",
    "start": "264560",
    "end": "271280"
  },
  {
    "text": "really after are these k native serving primitives such as a subscription we're into uh we're going to be looking at",
    "start": "271280",
    "end": "277680"
  },
  {
    "text": "like channels these sorts of things so you don't need camel k i just happened",
    "start": "277680",
    "end": "283040"
  },
  {
    "text": "to be a little too fond of it and um it was laying around so um",
    "start": "283040",
    "end": "289199"
  },
  {
    "start": "287000",
    "end": "430000"
  },
  {
    "text": "uh we're using it here so real quick um let's talk about the rise of cloud native architecture let's",
    "start": "289199",
    "end": "295440"
  },
  {
    "text": "uh and why it's important more specifically let's take a little trip through history we'll kind of find how",
    "start": "295440",
    "end": "300880"
  },
  {
    "text": "we got here so um initially we had main uh we had mainframe computing um kind of give way",
    "start": "300880",
    "end": "307520"
  },
  {
    "text": "to client server approaches that was um pretty cool if you guys will remember vividly the late 90s",
    "start": "307520",
    "end": "313360"
  },
  {
    "text": "mid 90s um so this was really cool because it democratized compute you didn't need to go buy a",
    "start": "313360",
    "end": "320560"
  },
  {
    "text": "million dollar mainframe you could go buy something um uh much smaller one small problem these things tended to",
    "start": "320560",
    "end": "327520"
  },
  {
    "text": "be at least our initial client server implementations tended to be a little heavy weight um we started moving to",
    "start": "327520",
    "end": "333919"
  },
  {
    "text": "things that uh and you know uh what we're talking about are things like uh um you know fat clients stuff like this",
    "start": "333919",
    "end": "340880"
  },
  {
    "text": "it was really quite difficult to go out and distribute software like this um and so what we started doing is moving this",
    "start": "340880",
    "end": "346240"
  },
  {
    "text": "uh more distributed uh software techniques um this beca as mentioned this became",
    "start": "346240",
    "end": "352400"
  },
  {
    "text": "unwieldy right um and uh some of the um distributed uh techniques we moved to like rpc corba so",
    "start": "352400",
    "end": "360240"
  },
  {
    "text": "on and so forth they're a little ugly i think many of us have stubbed our knees um and toes and got quite bloody because",
    "start": "360240",
    "end": "367840"
  },
  {
    "text": "of corba um uh really really painful stuff um if you were doing uh rmi in the",
    "start": "367840",
    "end": "373199"
  },
  {
    "text": "late 90s and early odd years so we started publishing a variety of tool sets to kind of accommodate this right",
    "start": "373199",
    "end": "379919"
  },
  {
    "text": "um we started thinking about things like asynchronous messaging which um fit quite nicely with",
    "start": "379919",
    "end": "386319"
  },
  {
    "text": "some of the mainframe concepts we'd had in the past we um",
    "start": "386319",
    "end": "391680"
  },
  {
    "text": "we started um coming up with these things that were patterns that we noticed emerging everywhere so um uh",
    "start": "392000",
    "end": "399759"
  },
  {
    "text": "right uh you know 10 years ago 15 years ago very buzzy",
    "start": "399759",
    "end": "405199"
  },
  {
    "text": "we uh we started coming up with a survey a service oriented architecture we started uh um uh coming up with things",
    "start": "405199",
    "end": "412560"
  },
  {
    "text": "like enterprise integration patterns where we would say hey we notice uh some of these behaviors that happen quite a",
    "start": "412560",
    "end": "417680"
  },
  {
    "text": "bit um and uh we we actually want to encode this in uh",
    "start": "417680",
    "end": "422960"
  },
  {
    "text": "a practice and advocate usage of the pattern so that was really cool right we got",
    "start": "422960",
    "end": "429199"
  },
  {
    "text": "there but um uh oh yeah and before we uh talk about that so initially we kind of have",
    "start": "429199",
    "end": "436080"
  },
  {
    "start": "430000",
    "end": "494000"
  },
  {
    "text": "these point-to-point remote invocations we have thing a calling thing b",
    "start": "436080",
    "end": "441199"
  },
  {
    "text": "um and uh that moved uh we may have uh even had web services or various other",
    "start": "441199",
    "end": "446720"
  },
  {
    "text": "rpc things one thing called the next um we moved away from that and as mentioned",
    "start": "446720",
    "end": "452720"
  },
  {
    "text": "previously we moved to something called uh an enterprise service bus this was hot hot hot",
    "start": "452720",
    "end": "458880"
  },
  {
    "text": "in the mid uh odd years um and uh we we found you know as you guys probably well",
    "start": "458880",
    "end": "465360"
  },
  {
    "text": "know um over the next decade or so those types of monolithic implementations where everything is",
    "start": "465360",
    "end": "471919"
  },
  {
    "text": "coupled to a central bus are great and all until we need to change",
    "start": "471919",
    "end": "477280"
  },
  {
    "text": "so we started looking at things like microservices and starting and started advancing our paradigm a little bit more",
    "start": "477280",
    "end": "482720"
  },
  {
    "text": "right where we got independent pipe independent deployment pipelines we could change a little quicker a little",
    "start": "482720",
    "end": "488960"
  },
  {
    "text": "faster without necessarily causing ourselves a ton of heartache",
    "start": "488960",
    "end": "495120"
  },
  {
    "start": "494000",
    "end": "679000"
  },
  {
    "text": "but over the last few years we all had this ginormous edict whether it came on high",
    "start": "495120",
    "end": "500720"
  },
  {
    "text": "from our uh ceos or it was just something that we thought um",
    "start": "500720",
    "end": "506400"
  },
  {
    "text": "sounded like a good idea um we began to move to the cloud um that caused us a whole new list of",
    "start": "506400",
    "end": "514880"
  },
  {
    "text": "concerns what in the cloud of course um we can't have point-to-point",
    "start": "514880",
    "end": "520000"
  },
  {
    "text": "communication per se we have to expect our infrastructure to fail there needs to be something to accommodate um uh",
    "start": "520000",
    "end": "526880"
  },
  {
    "text": "ephemeral uh compute ephemeral storage um so on and so forth we had multi uh",
    "start": "526880",
    "end": "534560"
  },
  {
    "text": "and hybrid cloud designers remember we've still got all this stuff right from all uh",
    "start": "534560",
    "end": "540080"
  },
  {
    "text": "from the little scroll through history we just took we still got all this stuff stuck in a data center we didn't want to",
    "start": "540080",
    "end": "545519"
  },
  {
    "text": "go to the cloud and not be able to exploit those things so we had to start coming up with ways where we would say",
    "start": "545519",
    "end": "552080"
  },
  {
    "text": "hey i want to be hybrid cloud we also probably had some edict from again somebody on high saying thou shalt be",
    "start": "552080",
    "end": "558800"
  },
  {
    "text": "multi-cloud right they didn't want to get stuck in aws they wanted they had dreams of being able to go off to",
    "start": "558800",
    "end": "565360"
  },
  {
    "text": "um azure and all of the rest of the cloud providers we needed to distribute uh we our compute density and efficiency",
    "start": "565360",
    "end": "572480"
  },
  {
    "text": "are front and center right when this edict was made thou shalt go to the cloud nobody thought we were going to be",
    "start": "572480",
    "end": "579360"
  },
  {
    "text": "actually more expensive right we as we decompose things into micro services we started to notice a big explosion of",
    "start": "579360",
    "end": "585760"
  },
  {
    "text": "compute and all of a sudden we were getting aws bills that were quite high i remember about 10 years ago having a",
    "start": "585760",
    "end": "591839"
  },
  {
    "text": "discussion with our cfo and he was like hey man i could have bought a new data center for the run rate that we were",
    "start": "591839",
    "end": "597360"
  },
  {
    "text": "doing in a quarter right uh painful stuff and it became front end this",
    "start": "597360",
    "end": "602640"
  },
  {
    "text": "that becomes front and center in this move to the cloud so we also want to distribute our architecture across availability zones",
    "start": "602640",
    "end": "609120"
  },
  {
    "text": "what we really mean by that is we don't want to be stuck in a single um we don't",
    "start": "609120",
    "end": "614160"
  },
  {
    "text": "want to be stuck in a single location that was one of the problems that we always had in the past right our dc goes down we don't really have a",
    "start": "614160",
    "end": "621440"
  },
  {
    "text": "great way to move to some sort of passive data center a redundant data center avalo bang there goes our slas",
    "start": "621440",
    "end": "627680"
  },
  {
    "text": "there goes most of our use cases the business stops so we started to take on container",
    "start": "627680",
    "end": "632959"
  },
  {
    "text": "platforms as a means to abstract this move to the cloud so that we could um deploy things to the cloud",
    "start": "632959",
    "end": "639760"
  },
  {
    "text": "that weren't necessarily specific to a particular cloud provider right if i am",
    "start": "639760",
    "end": "645200"
  },
  {
    "text": "only using aws managed services perhaps i might like to call myself cloud native",
    "start": "645200",
    "end": "650320"
  },
  {
    "text": "but i'm not really cloud native i'm an aws native right if i go take these things off to another cloud and i go do",
    "start": "650320",
    "end": "656720"
  },
  {
    "text": "the multi-cloud thing that i'm being asked or even hybrid cloud thing that i'm being asked to do i've gotta i don't quite have a lift and",
    "start": "656720",
    "end": "663040"
  },
  {
    "text": "shift i have something uh far bigger than that right it's quite likely that",
    "start": "663040",
    "end": "668079"
  },
  {
    "text": "um it'll be uh quite difficult to replicate what i was doing there um uh in another uh",
    "start": "668079",
    "end": "676399"
  },
  {
    "text": "in a uh another uh cloud all right so",
    "start": "676399",
    "end": "681680"
  },
  {
    "text": "what does that mean so we went from point to point we had you know um this rmi stuff happening in the late",
    "start": "681680",
    "end": "687680"
  },
  {
    "text": "90s early aught years we took on some soa concepts write web services that",
    "start": "687680",
    "end": "692800"
  },
  {
    "text": "kind of morphed into these soa concepts like an esb we decomposed that",
    "start": "692800",
    "end": "698079"
  },
  {
    "text": "part of the pun and we found ourselves with microservices right and now that we've gone to um the cloud we are",
    "start": "698079",
    "end": "706160"
  },
  {
    "text": "attempting to take on these cloud native architectures and some of the things that we want to take on with cloud native architectures",
    "start": "706160",
    "end": "712399"
  },
  {
    "text": "um are things like we want to be able to scale to zero remember that resource and compute efficiency thing right",
    "start": "712399",
    "end": "718240"
  },
  {
    "text": "became front and center if i go say hey i'm going to go take the monolith and i'm going to break it into 40 parts",
    "start": "718240",
    "end": "723279"
  },
  {
    "text": "right it's very difficult to go say to my boss or or my checkbook hey you know that's i've",
    "start": "723279",
    "end": "730560"
  },
  {
    "text": "added in tremendous amounts of overhead my bills are quite high um uh it's not a great look we want to",
    "start": "730560",
    "end": "736800"
  },
  {
    "text": "optimize uh resource usage and we also want to avoid random arbitrary workload",
    "start": "736800",
    "end": "742560"
  },
  {
    "text": "um problems so for instance what we really mean by that is um if i'm dealing with",
    "start": "742560",
    "end": "747839"
  },
  {
    "text": "ephemeral compute if i know that my i may lose machine instances i know that i may um i may lose an entire availability",
    "start": "747839",
    "end": "755760"
  },
  {
    "text": "zone i.e uh what we used to call a data center need to be able to handle this um",
    "start": "755760",
    "end": "760800"
  },
  {
    "text": "and that is kind of some of the tenets of what makes us cloud native so",
    "start": "760800",
    "end": "766639"
  },
  {
    "start": "764000",
    "end": "992000"
  },
  {
    "text": "what does cloud native mean right if this is the architectural jump",
    "start": "766639",
    "end": "771920"
  },
  {
    "text": "or leap we're making we've actually spent quite a bit of time defining this it's rather laborious if",
    "start": "771920",
    "end": "777839"
  },
  {
    "text": "you have if you need to go to sleep tonight i would read from this earl we get",
    "start": "777839",
    "end": "783440"
  },
  {
    "text": "really really really into why we're suggesting there are these cloud native characteristics but some of",
    "start": "783440",
    "end": "789519"
  },
  {
    "text": "the cloud native characteristics that we need to take on to have a cloud-native architecture are things like we need to",
    "start": "789519",
    "end": "795760"
  },
  {
    "text": "be uh we need to have uh elasticity we need to be scalable on demand we need to be resilient remember we have to survive",
    "start": "795760",
    "end": "802880"
  },
  {
    "text": "a loss of an uh availability zone we simply can't say oh well um that's tough uh",
    "start": "802880",
    "end": "809519"
  },
  {
    "text": "um my particular availability zone in u.s east is down sorry sorry slas can't",
    "start": "809519",
    "end": "815120"
  },
  {
    "text": "do anything about that we need to be observable and manageable right it's easy enough to say hey i'm going to",
    "start": "815120",
    "end": "822000"
  },
  {
    "text": "go decompose things i'm going to go put them in the cloud but if i lose visibility and i lose observability the",
    "start": "822000",
    "end": "827600"
  },
  {
    "text": "same sorts of observability that i had in my my more traditional legacy data centers well that's not really a",
    "start": "827600",
    "end": "834880"
  },
  {
    "text": "good place to be we also need to be location agnostic remember our computers ephemeral things are moving around we",
    "start": "834880",
    "end": "841920"
  },
  {
    "text": "can't necessarily say hey i'm gonna go send this http request at ten dot so on and so forth um that's not really um a",
    "start": "841920",
    "end": "850160"
  },
  {
    "text": "viable promise we need to be able to um invoke uh invoke an http request it's uh",
    "start": "850160",
    "end": "857839"
  },
  {
    "text": "completely agnostic of the um physical place that this thing lives we want to be api centric one of the reasons we",
    "start": "857839",
    "end": "865040"
  },
  {
    "text": "want to be api centric is one um again in the cloud native uh integration",
    "start": "865040",
    "end": "870320"
  },
  {
    "text": "github uh earl that's there we um we we're in a container platform we're",
    "start": "870320",
    "end": "876480"
  },
  {
    "text": "in something that is api driven and uh api and event driven for our things to come and go they exist in this api",
    "start": "876480",
    "end": "883680"
  },
  {
    "text": "driven api centric world right so we need our things to do something fairly similar and we also",
    "start": "883680",
    "end": "891519"
  },
  {
    "text": "because things are coming and going and because this can be sometimes happening quite fast we want well-defined apis and",
    "start": "891519",
    "end": "897600"
  },
  {
    "text": "we need to be able to handle event-driven premises such as asynchronicification",
    "start": "897600",
    "end": "904160"
  },
  {
    "text": "so on and so forth remember taking on a cloud-native architecture",
    "start": "904160",
    "end": "909519"
  },
  {
    "text": "doesn't just mean hey i plop this thing into aws or gcp",
    "start": "909519",
    "end": "914880"
  },
  {
    "text": "um or digitalocean if we rely solely on their apis remember",
    "start": "914880",
    "end": "920639"
  },
  {
    "text": "as we were just discussing we've got a big headache waiting for us we want to abstract that some way",
    "start": "920639",
    "end": "928560"
  },
  {
    "text": "the way that we would recommend generally speaking abstracting it again uh we get really into this um in that",
    "start": "928560",
    "end": "934720"
  },
  {
    "text": "url the way we would want to abstract that is via a container platform or some notion of abstraction whether that is",
    "start": "934720",
    "end": "941600"
  },
  {
    "text": "mesos kubernetes so on and so forth it's really a material right it's the abstraction itself that's important um i",
    "start": "941600",
    "end": "947920"
  },
  {
    "text": "would argue that kubernetes seems to have won the day in this regard however um let's not get too hung up on",
    "start": "947920",
    "end": "953920"
  },
  {
    "text": "kubernetes as much as we get uh recognize we need this abstraction and kubernetes and containers alone aren't",
    "start": "953920",
    "end": "961040"
  },
  {
    "text": "enough we we need a couple of things right we need uh things to care and feed for our deployments i don't want to spend uh one",
    "start": "961040",
    "end": "968480"
  },
  {
    "text": "of the things we i used to spend quite a bit of my time doing once upon a time was um",
    "start": "968480",
    "end": "974000"
  },
  {
    "text": "configuration in fact generally speaking we'll find developers who are shipping microservices right now that don't rely",
    "start": "974000",
    "end": "980800"
  },
  {
    "text": "on some cloud native abstractions and cloud native architectures spend quite a bit of time figuring out how do i",
    "start": "980800",
    "end": "988240"
  },
  {
    "text": "configure my deployment and runtime to work in this world all right",
    "start": "988240",
    "end": "994160"
  },
  {
    "start": "992000",
    "end": "1058000"
  },
  {
    "text": "so what does that mean right as we're on this kind of uh um stroll through history and we come to",
    "start": "994160",
    "end": "1001199"
  },
  {
    "text": "the present where everything is moving to the cloud so you know the net that next logical iteration isn't just uh",
    "start": "1001199",
    "end": "1009360"
  },
  {
    "text": "cloud native or this cloud native term isn't meaningless right we actually are after something and one",
    "start": "1009360",
    "end": "1016240"
  },
  {
    "text": "of the things we would uh uh we or i the royal uh we uh or the royal eye um would",
    "start": "1016240",
    "end": "1022959"
  },
  {
    "text": "argue for is that serverless fits this uh paradigm quite well in fact um serverless this uh serverless um",
    "start": "1022959",
    "end": "1029918"
  },
  {
    "text": "conceptually promises us things uh like scaling to zero resource optimization um",
    "start": "1029919",
    "end": "1036959"
  },
  {
    "text": "and again we want to uh avoid arbitrary workload prediction by that i mean i don't uh again i don't want to say hey",
    "start": "1036959",
    "end": "1044798"
  },
  {
    "text": "i feel like we need three pods i want something that actually scales to uh bursts the skills uh ideally",
    "start": "1044799",
    "end": "1053280"
  },
  {
    "text": "algorithmically right based on some uh common constructs",
    "start": "1053280",
    "end": "1059520"
  },
  {
    "text": "cool so there's a lot of obviously service implementations out there as you guys",
    "start": "1059600",
    "end": "1065280"
  },
  {
    "text": "probably guessed from the title of the talk we're going to talk about k native um",
    "start": "1065280",
    "end": "1070480"
  },
  {
    "text": "the native uh so k native uh uh is two kind of just uh separate things uh one of",
    "start": "1070480",
    "end": "1077600"
  },
  {
    "text": "which relies on the other so the the main thing that um key native is is something called",
    "start": "1077600",
    "end": "1084000"
  },
  {
    "text": "pardon me k native survey and that provides us some components that enable rapid um deployment of serverless",
    "start": "1084000",
    "end": "1089600"
  },
  {
    "text": "containers auto scaling including scaling pods down to zero this is based on sampling um",
    "start": "1089600",
    "end": "1096480"
  },
  {
    "text": "either from a kpa or hba perspective and will actually sit there and say hey",
    "start": "1096480",
    "end": "1102400"
  },
  {
    "text": "every so often right i'm going to determine based on the samplings that i have",
    "start": "1102400",
    "end": "1108160"
  },
  {
    "text": "whether or not we've passed some threshold and i need to scale up down so on and so forth or potentially even",
    "start": "1108160",
    "end": "1113679"
  },
  {
    "text": "scale to zero um it has support for multiple networking layers such as ambassador contour courier that's what",
    "start": "1113679",
    "end": "1120720"
  },
  {
    "text": "openshift serverless ships with but we don't want to use that as we'll explain later um uh glue",
    "start": "1120720",
    "end": "1127679"
  },
  {
    "text": "and seo for integration into existing environments we also have point in time snapshots of",
    "start": "1127679",
    "end": "1133679"
  },
  {
    "text": "deployed coding configurations you get re in fact i can spend the rest of the day talking about k native serving we",
    "start": "1133679",
    "end": "1138880"
  },
  {
    "text": "can get really really into what that last thing means and why it's important but if we look at the schematic on the uh my right-hand side um i think your",
    "start": "1138880",
    "end": "1146480"
  },
  {
    "text": "right-hand side too um we'll notice that as we take in revisions or uh things",
    "start": "1146480",
    "end": "1152960"
  },
  {
    "text": "that are running one of the things we'll do is we'll actually spin those revisions up see if they're viable the cont uh k native will",
    "start": "1152960",
    "end": "1160880"
  },
  {
    "text": "actually inspect them go see if they actually ran do they respond to health checks so on and so forth and shelve it",
    "start": "1160880",
    "end": "1167280"
  },
  {
    "text": "um bring down our prior revision and then bring back up our uh current revision so that we can engage in this",
    "start": "1167280",
    "end": "1174720"
  },
  {
    "text": "sorts of change without uh and role change without really having to do too much it's baked into the framework",
    "start": "1174720",
    "end": "1182320"
  },
  {
    "start": "1181000",
    "end": "1410000"
  },
  {
    "text": "so what is key native eventing and this is what this talk is actually about all right um",
    "start": "1182400",
    "end": "1188240"
  },
  {
    "text": "so canadian inventing is something that enables developers to use event driven architecture with serverless",
    "start": "1188240",
    "end": "1193440"
  },
  {
    "text": "applications so as we take on our cloud-native architectures what we one of the things we notice is um uh we need",
    "start": "1193440",
    "end": "1200160"
  },
  {
    "text": "to be event driven we need to be uh uh we need to be location agnostic so on and so forth right um event driven",
    "start": "1200160",
    "end": "1207280"
  },
  {
    "text": "architecture specifically this the sorts of pub sub behavior that you see um on the right-hand side um are actually",
    "start": "1207280",
    "end": "1214080"
  },
  {
    "text": "quite good at this um uh the event-driven architecture the k-native offending uh um",
    "start": "1214080",
    "end": "1220960"
  },
  {
    "text": "espouses um we have uh event producers and consumers that can come and go um they are of",
    "start": "1220960",
    "end": "1226880"
  },
  {
    "text": "course uh location agnostic they will see that uh um coming up um and we",
    "start": "1226880",
    "end": "1233760"
  },
  {
    "text": "essentially have um a sort of we our dichotomy if you will is neatly put um as source and sync",
    "start": "1233760",
    "end": "1241440"
  },
  {
    "text": "right something is a source we'll talk about the things that can be a source in a second um and something is the same",
    "start": "1241440",
    "end": "1247600"
  },
  {
    "text": "some of the things that can be a source uh our event sources are um primarily event producers an event producer",
    "start": "1247600",
    "end": "1254080"
  },
  {
    "text": "however may be something like kafka right um so what we'll do is we create a an event",
    "start": "1254080",
    "end": "1261039"
  },
  {
    "text": "source that actually interrogates uh in k native eventing that it interrogates our source and then emits http if we",
    "start": "1261039",
    "end": "1268080"
  },
  {
    "text": "look here on the schematic on the right hand what we'll see is source one and source two we have a logical abstraction",
    "start": "1268080",
    "end": "1274480"
  },
  {
    "text": "we refer to as a channel and then we have a logical abstraction that we refer to as a subscription the",
    "start": "1274480",
    "end": "1281600"
  },
  {
    "text": "our syncs subscribe to channels the channels are a logical representation of",
    "start": "1281600",
    "end": "1287520"
  },
  {
    "text": "our event sources some of these event sources um could be uh any number of things i think we get into that in a",
    "start": "1287520",
    "end": "1294240"
  },
  {
    "text": "second but um for the moment we'll just say they could be things like uh just something we just uh created in memory a",
    "start": "1294240",
    "end": "1302320"
  },
  {
    "text": "a broker that we created in memory it could be something like a real actual kafka breaker or gnats or",
    "start": "1302320",
    "end": "1308640"
  },
  {
    "text": "um any number of different things canadian vending as well as k native uh serving uses standard http uh uh posts",
    "start": "1308640",
    "end": "1317120"
  },
  {
    "text": "um and it it kind of sends uh as we go create um this thing that we see on the",
    "start": "1317120",
    "end": "1323600"
  },
  {
    "text": "right-hand side right we're informing the k-native advantage and native uh serving components um over http now you",
    "start": "1323600",
    "end": "1331440"
  },
  {
    "text": "can kind of see where a service mesh might fit in we've essentially created ourselves an http",
    "start": "1331440",
    "end": "1336799"
  },
  {
    "text": "based control plane to engage in this sort of cloud native architectural stuff that we want like",
    "start": "1336799",
    "end": "1343280"
  },
  {
    "text": "scale to zero so on and so forth or put more succinctly serverless one of",
    "start": "1343280",
    "end": "1349360"
  },
  {
    "text": "the things that i think is really really cool and i'm going to bang this drum really loud um in a few slides um",
    "start": "1349360",
    "end": "1356240"
  },
  {
    "text": "is the events that are emitted over this event bus or",
    "start": "1356240",
    "end": "1364000"
  },
  {
    "text": "conform to something called the cloud event specification what the cloud event specification is is a",
    "start": "1364000",
    "end": "1370159"
  },
  {
    "text": "a type of message payload that we always have over our um over our event bus",
    "start": "1370159",
    "end": "1377039"
  },
  {
    "text": "implementation that means that um we have a canonical payload normally",
    "start": "1377039",
    "end": "1382240"
  },
  {
    "text": "generally speaking i would say stay away from canonical payloads uh bad sauce change is really difficult however what",
    "start": "1382240",
    "end": "1388799"
  },
  {
    "text": "we'll notice with the cloud event specification is it's really just something that holds any number of",
    "start": "1388799",
    "end": "1393840"
  },
  {
    "text": "different other types in fact it has a an event registry so on and so forth and i think it's a",
    "start": "1393840",
    "end": "1399840"
  },
  {
    "text": "really critical part of knowing what's happening what can happen and what can",
    "start": "1399840",
    "end": "1405360"
  },
  {
    "text": "flow across our hybrid and multi-cloud implementations",
    "start": "1405360",
    "end": "1410559"
  },
  {
    "start": "1410000",
    "end": "1549000"
  },
  {
    "text": "cool so there's a big word at the",
    "start": "1410559",
    "end": "1416799"
  },
  {
    "text": "beginning of the title of this talk um called governing and it implies governance right so let's uh and generally speaking in",
    "start": "1416799",
    "end": "1423679"
  },
  {
    "text": "software this is a dirty word right we all hate the governance guys to come down and say",
    "start": "1423679",
    "end": "1429760"
  },
  {
    "text": "thou shalt not do everything you're doing because there's some uh magical governance theory um that we've offended",
    "start": "1429760",
    "end": "1437840"
  },
  {
    "text": "so um mit took this on um and i think these are actually this is actually a pretty good definition of what",
    "start": "1437840",
    "end": "1443760"
  },
  {
    "text": "governance is we want to centralize information about our digital initiative so instead of having n bespoke systems",
    "start": "1443760",
    "end": "1450640"
  },
  {
    "text": "all over the place right i actually want to give myself some way to cobble these things all together in a centralized",
    "start": "1450640",
    "end": "1456400"
  },
  {
    "text": "fashion i want to move from from centralized to decentralized governance",
    "start": "1456400",
    "end": "1462080"
  },
  {
    "text": "of digital initiatives meaning i can't necessarily run everything in the same place i have to allow people to be able",
    "start": "1462080",
    "end": "1468400"
  },
  {
    "text": "to go out and do the things that they need to do these could be any uh different run",
    "start": "1468400",
    "end": "1473520"
  },
  {
    "text": "times different languages so on and so forth however i still want that centralized information piece and i",
    "start": "1473520",
    "end": "1479679"
  },
  {
    "text": "still want some means of exercising control in a centralized way while handing over power to my developers and",
    "start": "1479679",
    "end": "1487039"
  },
  {
    "text": "let them do their thing i want to decentralize ideation but centralize idea evaluation and prioritization i",
    "start": "1487039",
    "end": "1493600"
  },
  {
    "text": "want to make sure my kpis are meaningful i want to make sure my uh i want to avoid kind of siloed",
    "start": "1493600",
    "end": "1500480"
  },
  {
    "text": "solutions or these bespoke things that we see all over everybody's enterprise right now where we have 7000 things",
    "start": "1500480",
    "end": "1507120"
  },
  {
    "text": "providing off oz we have just about every sort of way to go about this we",
    "start": "1507120",
    "end": "1512240"
  },
  {
    "text": "need some notions of technical consistency across um how we do these things most noticeably uh notably um",
    "start": "1512240",
    "end": "1521200"
  },
  {
    "text": "in a distributed computing context we want centralized and consistent means of",
    "start": "1521200",
    "end": "1527520"
  },
  {
    "text": "incompatible means of wire protocols of the schemas uh or rather the payloads",
    "start": "1527520",
    "end": "1533679"
  },
  {
    "text": "that are happening over the wire and we also want some way to do handshakes and stuff like that in a",
    "start": "1533679",
    "end": "1539679"
  },
  {
    "text": "meaningful and of course um the idea here behind governance isn't necessarily as uh this",
    "start": "1539679",
    "end": "1547440"
  },
  {
    "text": "white paper points out isn't really to say hey i've stopped you",
    "start": "1547440",
    "end": "1552480"
  },
  {
    "start": "1549000",
    "end": "1799000"
  },
  {
    "text": "from doing something but it's rather to get all of the basic building blocks out of your way so that you can go leverage",
    "start": "1552480",
    "end": "1559600"
  },
  {
    "text": "the things that you need to do to deliver to the business use case or if you're just having fun the features",
    "start": "1559600",
    "end": "1565919"
  },
  {
    "text": "you're after um while we deliver software so one of the first things you know we might think to",
    "start": "1565919",
    "end": "1572480"
  },
  {
    "text": "ourselves is well you know uh kubernetes might be enough right in and of itself um",
    "start": "1572480",
    "end": "1578080"
  },
  {
    "text": "i have uh service accounts um uh those things uh that were run my uh ultimate",
    "start": "1578080",
    "end": "1584480"
  },
  {
    "text": "or pods or runtimes um we we certainly don't hand out anything service accounts",
    "start": "1584480",
    "end": "1590559"
  },
  {
    "text": "uh generally speaking willy-nilly right we also have some notion of our back there there are",
    "start": "1590559",
    "end": "1596320"
  },
  {
    "text": "um uh we have cluster admin we have developer roles so on and so forth um we",
    "start": "1596320",
    "end": "1602240"
  },
  {
    "text": "have oauth proxies right so we go likely um in our kubernetes uh destroyer depending on which one you're using we",
    "start": "1602240",
    "end": "1608400"
  },
  {
    "text": "may go out to an external oauth provider right we may construct our own oauth provider",
    "start": "1608400",
    "end": "1613600"
  },
  {
    "text": "inside of the cluster this gives us a common way of authenticating our runtimes",
    "start": "1613600",
    "end": "1619360"
  },
  {
    "text": "ensuring that they can actually do the things that they want to do in kubernetes we have some ingress",
    "start": "1619360",
    "end": "1624480"
  },
  {
    "text": "governance right we've gone beyond the node port at this point we're not just saying hey go find a port on one of your",
    "start": "1624480",
    "end": "1630320"
  },
  {
    "text": "nodes and hook up to it um we have meaningful uh ways of ingress",
    "start": "1630320",
    "end": "1636000"
  },
  {
    "text": "we have mtls uh capabilities tls capabilities so on and so forth we have centralized monitoring and logging",
    "start": "1636000",
    "end": "1642399"
  },
  {
    "text": "capabilities and most distributions right remember some of the things we were just after um that white paper",
    "start": "1642399",
    "end": "1648559"
  },
  {
    "text": "suggested we should be after it's kind of mostly taken care of there and we have an event driven api control plane",
    "start": "1648559",
    "end": "1655120"
  },
  {
    "text": "right um all over http and generally speaking we have some technical consistency here between our our back",
    "start": "1655120",
    "end": "1662000"
  },
  {
    "text": "approaches how we do things over the wire who gets to do what how they authenticate and authorize with each",
    "start": "1662000",
    "end": "1667760"
  },
  {
    "text": "other um but [Music] this provides a pretty basic level of governance and rudimentary notions of",
    "start": "1667760",
    "end": "1674480"
  },
  {
    "text": "auth odds from a runtime perspective right so for ins a classic example of this is well yeah my service account",
    "start": "1674480",
    "end": "1680320"
  },
  {
    "text": "presents a shot to the next guy and the next guy may have be hooked up to an external oauth provider",
    "start": "1680320",
    "end": "1687120"
  },
  {
    "text": "and i may have been pretty good and got my service accounts in there so yeah i'm authorized and we had something do that",
    "start": "1687120",
    "end": "1692640"
  },
  {
    "text": "in a meaningful way but the thing that i'm actually doing in my pod or my runtime is hooking up to nats or kafka",
    "start": "1692640",
    "end": "1699279"
  },
  {
    "text": "or i'm hooking up to a database right that level of authorization and authentication is not addressed by",
    "start": "1699279",
    "end": "1706080"
  },
  {
    "text": "kubernetes alone we need something more than that we have communications protocol schemas and standards there's",
    "start": "1706080",
    "end": "1712080"
  },
  {
    "text": "nothing per se saying the things that are traveling over the wire will necessarily do anything but adhere to",
    "start": "1712080",
    "end": "1718960"
  },
  {
    "text": "the kubernetes api if they want to do kubernetes stuff but as i go speak from",
    "start": "1718960",
    "end": "1724080"
  },
  {
    "text": "one as i go let's say from one system to the next there's nothing saying that i will be carrying a certain particular",
    "start": "1724080",
    "end": "1730960"
  },
  {
    "text": "payload there's nothing saying that i will adhere to any particular standards other than maybe some uh basic uh um tls",
    "start": "1730960",
    "end": "1738880"
  },
  {
    "text": "type stuff so on and so forth um i generally speaking have bespoke runtime visibility right",
    "start": "1738880",
    "end": "1745200"
  },
  {
    "text": "i see this non-stop almost everywhere i go um uh",
    "start": "1745200",
    "end": "1750559"
  },
  {
    "text": "and uh talk to people i'll notice that they've got some other means of monitoring just about every system in uh",
    "start": "1750559",
    "end": "1757919"
  },
  {
    "text": "that they have right um their services generally speaking um uh may one uh one",
    "start": "1757919",
    "end": "1763919"
  },
  {
    "text": "group may be using prime prometheus one group maybe using app dynamics so on and so forth um the uh um what we'll notice",
    "start": "1763919",
    "end": "1772000"
  },
  {
    "text": "in many uh kubernetes clusters is that this uh notion of runtime visibility is",
    "start": "1772000",
    "end": "1777440"
  },
  {
    "text": "all over the shop um and then we also have bespoke carrying and feeding we'll notice that some people are just doing a",
    "start": "1777440",
    "end": "1782960"
  },
  {
    "text": "plain old kubernetes deployment some people are using an operator and maybe that has some level of maturity in how it cares and",
    "start": "1782960",
    "end": "1789200"
  },
  {
    "text": "fees for things right but it lacks total consistency there's no",
    "start": "1789200",
    "end": "1795200"
  },
  {
    "text": "one way that we go about this so we know that kubernetes in and of itself isn't enough to go",
    "start": "1795200",
    "end": "1801440"
  },
  {
    "start": "1799000",
    "end": "1980000"
  },
  {
    "text": "after those governance characteristics that our white people are stated well another question you know i",
    "start": "1801440",
    "end": "1807520"
  },
  {
    "text": "probably didn't prime the pump enough for you guys to answer this question but another question that we have we",
    "start": "1807520",
    "end": "1813200"
  },
  {
    "text": "probably have at this point is well is k native enough",
    "start": "1813200",
    "end": "1819360"
  },
  {
    "text": "well k native kind of is right like we probably have a good deal of governance",
    "start": "1819360",
    "end": "1824720"
  },
  {
    "text": "just from k native we have service routing we have revision visibility right we have load balancing blue green",
    "start": "1824720",
    "end": "1831919"
  },
  {
    "text": "a b out of the box this is all happening in a centralized way in a technically consistent way many of the features that",
    "start": "1831919",
    "end": "1837440"
  },
  {
    "text": "we'd even get out of issue we're sitting there in k native we have auto scaling via common means in hba and a kpa scaler",
    "start": "1837440",
    "end": "1844480"
  },
  {
    "text": "i can definitely allow people to instrument hpa or kpa in ways that they want right but um you know generally",
    "start": "1844480",
    "end": "1852320"
  },
  {
    "text": "speaking i've at least said hey here are two um constructs that we'll allow into our",
    "start": "1852320",
    "end": "1857760"
  },
  {
    "text": "organization i have central ingress into services um i have uh we'll get into",
    "start": "1857760",
    "end": "1863200"
  },
  {
    "text": "this in a second but i have an activator and auto scaler these things are actually going to talk to my services",
    "start": "1863200",
    "end": "1868320"
  },
  {
    "text": "and that is how traffic is getting directed there at least some of the time right so and i also have the cloud event",
    "start": "1868320",
    "end": "1874559"
  },
  {
    "text": "specification uh we'll get into more on that in a second like i promised you guys i was gonna bang that drum but um",
    "start": "1874559",
    "end": "1882080"
  },
  {
    "text": "we don't we just don't have enough to complete the governance picture here either",
    "start": "1882080",
    "end": "1887519"
  },
  {
    "text": "something else is needed to guarantee mtls between components it may happen to be the case that your",
    "start": "1887519",
    "end": "1894399"
  },
  {
    "text": "canadian operator distribution is using uh has some means of wiring up",
    "start": "1894399",
    "end": "1900159"
  },
  {
    "text": "mtls but you've probably got something else for the next thing you're doing and",
    "start": "1900159",
    "end": "1905279"
  },
  {
    "text": "something else for the next thing you're doing so on and so forth we don't really have a consistent uh means of doing this",
    "start": "1905279",
    "end": "1910559"
  },
  {
    "text": "we certainly don't have a centralized way of doing this this just becomes uh another uh bolted on appendix",
    "start": "1910559",
    "end": "1916080"
  },
  {
    "text": "frankenstein style appendage we um the service notification between our components does not uh apply off oz",
    "start": "1916080",
    "end": "1923360"
  },
  {
    "text": "so we're kind of left up to ourselves to um uh handle whether or not something",
    "start": "1923360",
    "end": "1929919"
  },
  {
    "text": "can or should uh uh call us so we need something else for visibility",
    "start": "1929919",
    "end": "1935840"
  },
  {
    "text": "into the performance of our components right we could hook up something like prometheus um so on and so forth but um",
    "start": "1935840",
    "end": "1943679"
  },
  {
    "text": "uh we just simply in and of itself don't have um enough there",
    "start": "1943679",
    "end": "1949760"
  },
  {
    "text": "um oh yeah and canadian in and of itself does not provide a set of rules for who",
    "start": "1949760",
    "end": "1955600"
  },
  {
    "text": "gets to do what um uh per se right um k native in and of itself will say",
    "start": "1955600",
    "end": "1962080"
  },
  {
    "text": "hey um uh you get to hook up to the event bus you um uh can send uh um as a result",
    "start": "1962080",
    "end": "1970159"
  },
  {
    "text": "things can go over here but there's nothing to say um hey i laid down a particular channel implementation and",
    "start": "1970159",
    "end": "1976399"
  },
  {
    "text": "i'm per i'm authorized to do that um out of the box",
    "start": "1976399",
    "end": "1982240"
  },
  {
    "start": "1980000",
    "end": "2121000"
  },
  {
    "text": "so one thing we do have and this is uh the drum i keep uh promising to bang um",
    "start": "1982240",
    "end": "1987360"
  },
  {
    "text": "is the cloud event specification this is a core governance capability that we want to take on in our um uh cloud",
    "start": "1987360",
    "end": "1994880"
  },
  {
    "text": "native architectures um what cloud with a cloud event specification is i think i described",
    "start": "1994880",
    "end": "2000960"
  },
  {
    "text": "this a little bit previously but we described data event data in common formats to provide interoperability",
    "start": "2000960",
    "end": "2006799"
  },
  {
    "text": "across services platforms and systems we know what's going to come in our cloud event specification even though we may",
    "start": "2006799",
    "end": "2013760"
  },
  {
    "text": "have avro we may have protobuf so on and so forth we may just have jason where heck",
    "start": "2013760",
    "end": "2019440"
  },
  {
    "text": "in some cases we may just have um a uh um an encoded uh string",
    "start": "2019440",
    "end": "2024640"
  },
  {
    "text": "we um uh we have something around that a payload uh uh an envelo uh a not to use",
    "start": "2024640",
    "end": "2031120"
  },
  {
    "text": "a soap term but an envelope that describes the uh payload that's coming uh that's being shipped in between these",
    "start": "2031120",
    "end": "2037200"
  },
  {
    "text": "services this is the canonical payload of k-node k-native eventing everything",
    "start": "2037200",
    "end": "2042320"
  },
  {
    "text": "is a uh um cloud event um uh we could have as we'll notice previous uh",
    "start": "2042320",
    "end": "2048638"
  },
  {
    "text": "um we could this could be um amqp this could be avro jason kafka mktt nats websockets",
    "start": "2048639",
    "end": "2056480"
  },
  {
    "text": "protobuf the um picture keeps um uh emerging what this allows us to do",
    "start": "2056480",
    "end": "2061919"
  },
  {
    "text": "because of the event registry of k-native offending is say hey we have um a particular payload types",
    "start": "2061919",
    "end": "2068240"
  },
  {
    "text": "that are associated to particular channels for instance if i have a nats channel right",
    "start": "2068240",
    "end": "2074480"
  },
  {
    "text": "um i'm going to have a cloud event uh specific cloud event spec type type of",
    "start": "2074480",
    "end": "2079599"
  },
  {
    "text": "gnats right and what this allows us to do is to move away from these bespoke incongruous",
    "start": "2079599",
    "end": "2087358"
  },
  {
    "text": "means of communication over the wire right and to say hey at minimum i have",
    "start": "2087359",
    "end": "2092720"
  },
  {
    "text": "governance um and i know what is what is going over the wire and i can uh say hey",
    "start": "2092720",
    "end": "2100160"
  },
  {
    "text": "or i shouldn't be able to say hey why are you guys doing oh like why are",
    "start": "2100160",
    "end": "2106640"
  },
  {
    "text": "you guys doing this really strange thing over http um as uh it's not possible because of um",
    "start": "2106640",
    "end": "2113839"
  },
  {
    "text": "rk native uh eventing uh constructs specifically the event registry",
    "start": "2113839",
    "end": "2121359"
  },
  {
    "start": "2121000",
    "end": "2429000"
  },
  {
    "text": "so why not just use k native then right i you know i kind of mentioned maybe you",
    "start": "2122640",
    "end": "2128560"
  },
  {
    "text": "know don't take care of everything but um the default ingress per vehicle is courier",
    "start": "2128560",
    "end": "2134000"
  },
  {
    "text": "courier is a plain old envoy proxy and it lacks a lot of advanced capabilities that seo um does not for instance uh",
    "start": "2134000",
    "end": "2142000"
  },
  {
    "text": "there is no concept of um uh destination rules so on and so forth yeah we could probably ship an envoy filter there but",
    "start": "2142000",
    "end": "2149200"
  },
  {
    "text": "there's a whole lot of constructs and primitives from issio that we just simply don't have um we're not wiring up",
    "start": "2149200",
    "end": "2154720"
  },
  {
    "text": "mtls out of the box we remember something else needs to handle this issue all depending on how we go about",
    "start": "2154720",
    "end": "2160800"
  },
  {
    "text": "things we'll handle this out of the box for us um canadian eventing also leaves some",
    "start": "2160800",
    "end": "2167520"
  },
  {
    "text": "governance pieces wanting while many of the canadian vetting sources provide means of authentication and",
    "start": "2167520",
    "end": "2173200"
  },
  {
    "text": "authorization that's bespoke by component by that what i mean is hey",
    "start": "2173200",
    "end": "2179520"
  },
  {
    "text": "are you sure i can go talk to my kafka brokers if i lay down a kafka channel and i can figure myself with some sort",
    "start": "2179520",
    "end": "2185359"
  },
  {
    "text": "of auth right and um uh all depending i may",
    "start": "2185359",
    "end": "2191599"
  },
  {
    "text": "uh uh if i've wired up kafka correctly to handle the thing that's calling it",
    "start": "2191599",
    "end": "2196640"
  },
  {
    "text": "right i may have some notion of authorization there but i have no consistent central means of going about",
    "start": "2196640",
    "end": "2202400"
  },
  {
    "text": "a centralized means of going about this the next time i do this is going to be something different so on and so forth what we'll notice is we have an",
    "start": "2202400",
    "end": "2208320"
  },
  {
    "text": "explosion of these bespoke activities over our enterprise without using something like seo",
    "start": "2208320",
    "end": "2215440"
  },
  {
    "text": "all right and i think i've covered oh yeah and you know some of the things that we have in seo and um uh it's an",
    "start": "2215440",
    "end": "2222079"
  },
  {
    "text": "advanced concept that we won't show here but we will make a recommendation later there's no advanced authorization such",
    "start": "2222079",
    "end": "2229280"
  },
  {
    "text": "as opa right we can we aren't able to leverage any of these things with k-native we're kind of stuck with what",
    "start": "2229280",
    "end": "2235520"
  },
  {
    "text": "we got um or we can go say hey um amk or uh let's say streams or kafka",
    "start": "2235520",
    "end": "2242240"
  },
  {
    "text": "hey you go figure out the opa thing based on the oauth um and jot that was provided to",
    "start": "2242240",
    "end": "2248560"
  },
  {
    "text": "you well again that's going to be the same shot every time because it's coming from the same k",
    "start": "2248560",
    "end": "2254560"
  },
  {
    "text": "native component i can't really do much with that right i certainly can't um",
    "start": "2254560",
    "end": "2259839"
  },
  {
    "text": "uh give myself the acls that i would like to give myself um",
    "start": "2259839",
    "end": "2266160"
  },
  {
    "text": "in something like kafka right i uh again a topic i could go on and on and",
    "start": "2266160",
    "end": "2271520"
  },
  {
    "text": "on about so um let's do a k-native deep dive right because",
    "start": "2271520",
    "end": "2277440"
  },
  {
    "text": "that's what we're here to do we're here to talk about um uh istio and k-native together so um i'm gonna uh do this um",
    "start": "2277440",
    "end": "2286880"
  },
  {
    "text": "so uh if you guys will notice maybe i'll come down here and point to some stuff",
    "start": "2286880",
    "end": "2292000"
  },
  {
    "text": "hopefully uh my screen doesn't go blank on us so here is kind of our the lay of our",
    "start": "2292000",
    "end": "2297599"
  },
  {
    "text": "land right um we have a little legend over here um uh maybe somewhat useful but here's",
    "start": "2297599",
    "end": "2304240"
  },
  {
    "text": "what's really going on here we have an ingress gateway in our particular case if we want to expose ourselves um to the",
    "start": "2304240",
    "end": "2311280"
  },
  {
    "text": "outside world um we're probably creating a virtual service initiative the things that are really really really",
    "start": "2311280",
    "end": "2317440"
  },
  {
    "text": "important um in k-natives and this is a look at k-native serving pretty much exclusively but it um",
    "start": "2317440",
    "end": "2325040"
  },
  {
    "text": "you'll see quickly why this applies to canadian vetting we have an activator so when a",
    "start": "2325040",
    "end": "2330720"
  },
  {
    "text": "an http call comes into um uh my ingress gateway for instance here",
    "start": "2330720",
    "end": "2337359"
  },
  {
    "text": "um via istio one of the first things it's going to do is it's going to hit the activator assuming i'm scaled to",
    "start": "2337359",
    "end": "2343119"
  },
  {
    "text": "zero that means it's going to start bringing instances up the um",
    "start": "2343119",
    "end": "2348240"
  },
  {
    "text": "our controller and dispatcher will actually continue talking to um uh",
    "start": "2348240",
    "end": "2354480"
  },
  {
    "text": "to our auto scaler as well so the activator is going to bring stuff up it",
    "start": "2354480",
    "end": "2359520"
  },
  {
    "text": "may uh say hey by the buy auto scaler um i'm at zero i'm at one so on and so",
    "start": "2359520",
    "end": "2366000"
  },
  {
    "text": "forth we'll notice that we also have um uh uh here we uh represent uh a",
    "start": "2366000",
    "end": "2372800"
  },
  {
    "text": "um uh kpa what that would mean is i've got some metrics like concurrency or",
    "start": "2372800",
    "end": "2378320"
  },
  {
    "text": "something like that that actually does this uh scaling for me we um we're",
    "start": "2378320",
    "end": "2383920"
  },
  {
    "text": "we're constantly referencing this deployment while um our auto scaler is uh running and as you",
    "start": "2383920",
    "end": "2390480"
  },
  {
    "text": "can notice here we're gonna push metrics to the auto scaler and the autoscaler will actually bring these guys up and down all based on those things right",
    "start": "2390480",
    "end": "2397920"
  },
  {
    "text": "inevitably what will uh continue happening is these http requests as um the activator and uh",
    "start": "2397920",
    "end": "2404880"
  },
  {
    "text": "auto scaler are kind of doing their thing hey do you need to come up hey do you need more guys right",
    "start": "2404880",
    "end": "2410560"
  },
  {
    "text": "um we're going to be sending uh um things into our actual deployment and that's going to be actually",
    "start": "2410560",
    "end": "2416800"
  },
  {
    "text": "doing the stuff that we want to do in our case doing the stuff that we want to do maybe something as simple as hello",
    "start": "2416800",
    "end": "2422480"
  },
  {
    "text": "world hey i'm uh i'm a rest service um could be something a little bit more complex um",
    "start": "2422480",
    "end": "2428640"
  },
  {
    "text": "that we'll show later so the k native serving components we have our activator um again that's",
    "start": "2428640",
    "end": "2435040"
  },
  {
    "start": "2429000",
    "end": "2553000"
  },
  {
    "text": "what's responsible for receiving and buffering requests for inactive revisions we've got it reports to the",
    "start": "2435040",
    "end": "2441119"
  },
  {
    "text": "auto scaler as we mentioned we have the auto scaler that is going to take in our metrics and adjust the number of pods",
    "start": "2441119",
    "end": "2447520"
  },
  {
    "text": "required to handle the load of traffic right we could go up and down the service controller is going to reconcile um uh",
    "start": "2447520",
    "end": "2454319"
  },
  {
    "text": "the object the cr or crs that are coming in and it's going to do something if i",
    "start": "2454319",
    "end": "2459359"
  },
  {
    "text": "say hey i've got a k native this is a k-native service um here's your image so on and",
    "start": "2459359",
    "end": "2464480"
  },
  {
    "text": "so forth the surface controller is going to be the thing that says okay cool i know what to do with that and um i'm",
    "start": "2464480",
    "end": "2471520"
  },
  {
    "text": "going to go ahead and k native serving i'm going to go ahead and create some revisions i'm going to test them out i'm going to mark them viable or not viable",
    "start": "2471520",
    "end": "2478240"
  },
  {
    "text": "so on and so forth by that i mean in k-native serving if i roll change out to k-native surveying and that exchange",
    "start": "2478240",
    "end": "2484960"
  },
  {
    "text": "does not work he native serving isn't going to stop answering it's just going to maintain the current revision right which is um",
    "start": "2484960",
    "end": "2492319"
  },
  {
    "text": "kind of gives us some uh a notion of a canary release out of the box um we also have our uh we also have a uh dynamic",
    "start": "2492319",
    "end": "2499920"
  },
  {
    "text": "admissions webhook what this is going to do is it takes in that that initial cr right and says hey",
    "start": "2499920",
    "end": "2506960"
  },
  {
    "text": "um you know i you gave me a kubernetes service thing and um that's cool like uh",
    "start": "2506960",
    "end": "2512640"
  },
  {
    "text": "you're able to i'll admit you but um it's i'm sorry i just uh go back",
    "start": "2512640",
    "end": "2518640"
  },
  {
    "text": "there's two flavors there's two parts to our web hook we have an admissions configuration and we also",
    "start": "2518640",
    "end": "2524319"
  },
  {
    "text": "have a validation configuration the admissions configuration will say hey okay cool like i got the cr from the",
    "start": "2524319",
    "end": "2529359"
  },
  {
    "text": "cube api um yeah you know you're allowed to do this uh your particular jot from your particular service account that's cool",
    "start": "2529359",
    "end": "2536640"
  },
  {
    "text": "the validation um uh configuration will then say hey wait a second yeah you kind of screwed up your configuration of your",
    "start": "2536640",
    "end": "2543119"
  },
  {
    "text": "um k-native service um i'm actually going to reject you you want the cr will not be successful in the cube api server",
    "start": "2543119",
    "end": "2550319"
  },
  {
    "text": "will not get a admissions response that um",
    "start": "2550319",
    "end": "2556160"
  },
  {
    "start": "2553000",
    "end": "2635000"
  },
  {
    "text": "is meaningful and tells it hey i need to launch this pod we're going to start going a little",
    "start": "2556160",
    "end": "2562079"
  },
  {
    "text": "faster because we're running out of time and i want to get to the demo before such uh at least part of the demo before session two",
    "start": "2562079",
    "end": "2568240"
  },
  {
    "text": "this will help though um so key native serving um integrates with",
    "start": "2568240",
    "end": "2573520"
  },
  {
    "text": "issio out of the box what we'll see here is right under our um right under the spec",
    "start": "2573520",
    "end": "2579599"
  },
  {
    "text": "part of our yaml we'll notice that we have issio enabled right however",
    "start": "2579599",
    "end": "2585200"
  },
  {
    "text": "if we just remembered what we were looking at um a couple of slides ago there's a few things that have to happen",
    "start": "2585200",
    "end": "2590640"
  },
  {
    "text": "be after ingress right i have to go to the activator i've got the auto scaler likely also involved right so we're",
    "start": "2590640",
    "end": "2598400"
  },
  {
    "text": "going to have to for those who participate um uh in in a service mesh we actually need to inject a proxy there",
    "start": "2598400",
    "end": "2605119"
  },
  {
    "text": "as well i'm i like i said using maestra generally speaking this is a good",
    "start": "2605119",
    "end": "2610640"
  },
  {
    "text": "approach but we want to opt into um sidecar injection we don't just want to label a namespace and have sidecars",
    "start": "2610640",
    "end": "2617520"
  },
  {
    "text": "injected all over the place there's a reason for that there's a bunch of other things in k native serving that don't",
    "start": "2617520",
    "end": "2622960"
  },
  {
    "text": "actually need to um say car injected we certainly wouldn't want to add that sort of",
    "start": "2622960",
    "end": "2628880"
  },
  {
    "text": "overhead so on and so forth um to everything that's going on there um",
    "start": "2628880",
    "end": "2634319"
  },
  {
    "text": "unless we uh need to all right so k native eventing",
    "start": "2634319",
    "end": "2640079"
  },
  {
    "start": "2635000",
    "end": "2730000"
  },
  {
    "text": "here is so that was key native serving as you guys see um it's good stuff but",
    "start": "2640079",
    "end": "2645200"
  },
  {
    "text": "we need to do a little bit more with our operator and our crs to be able to get ourselves to the point where we're using",
    "start": "2645200",
    "end": "2650960"
  },
  {
    "text": "issio we um canadian eventing is um what we're actually after canadian eventing is um",
    "start": "2650960",
    "end": "2657760"
  },
  {
    "text": "uh going to create a pub sub construct for us based on this notion of a",
    "start": "2657760",
    "end": "2662880"
  },
  {
    "text": "broker and a trigger a broker logically speaking anyways is going to be something uh might just be an",
    "start": "2662880",
    "end": "2669599"
  },
  {
    "text": "in-memory broker or it could be something like kafka nats so",
    "start": "2669599",
    "end": "2674720"
  },
  {
    "text": "on and so forth the trigger is what is actually making our subscription um to",
    "start": "2674720",
    "end": "2679920"
  },
  {
    "text": "this particular uh this particular broker the broker will define what the backing with the backing channels are",
    "start": "2679920",
    "end": "2686560"
  },
  {
    "text": "that we'll be looking at you'll see a better example of that in a second on the next slide",
    "start": "2686560",
    "end": "2691839"
  },
  {
    "text": "right and we have a filter here we may not want all the events that um are",
    "start": "2691839",
    "end": "2697119"
  },
  {
    "text": "being emitted out of this broker and then that's where our last few slides come in once we say hey you know i i've",
    "start": "2697119",
    "end": "2704160"
  },
  {
    "text": "got a subscription here going to your broker um i'm filtering maybe i'm not um maybe",
    "start": "2704160",
    "end": "2710560"
  },
  {
    "text": "i just want you to give me all events um either way that is actually going to call our k-native service right",
    "start": "2710560",
    "end": "2717599"
  },
  {
    "text": "and that is what we've just put um of that particular k-native service should be injected with a side car",
    "start": "2717599",
    "end": "2724160"
  },
  {
    "text": "remember it's also we've also got a few other things that's interacting with it that are also injected with a sidecar",
    "start": "2724160",
    "end": "2730240"
  },
  {
    "start": "2730000",
    "end": "2874000"
  },
  {
    "text": "and are performing uh mtls and potentially authorization policies all the goodness we've got out of uh",
    "start": "2730240",
    "end": "2737520"
  },
  {
    "text": "all the goodness we get out of istio so in our most simple uh sense what that",
    "start": "2737520",
    "end": "2742640"
  },
  {
    "text": "really implies is this kind of source of service simple delivery what we're going to see in our demo is",
    "start": "2742640",
    "end": "2748160"
  },
  {
    "text": "something a little bit more it's we're not going to get too complex sorry but it's something a little bit more complex",
    "start": "2748160",
    "end": "2753359"
  },
  {
    "text": "so that that source is uh that broker is actually be what it really is is a",
    "start": "2753359",
    "end": "2759760"
  },
  {
    "text": "event source where it's uh i shouldn't say that the broker is",
    "start": "2759760",
    "end": "2765599"
  },
  {
    "text": "defining what this channel implementation is an event source is the thing that it's emitting things into the",
    "start": "2765599",
    "end": "2772640"
  },
  {
    "text": "broker or into our channels what we'll notice here is we have a subscription um that we talked about previously",
    "start": "2772640",
    "end": "2779280"
  },
  {
    "text": "logically and physically this is a trigger resource",
    "start": "2779280",
    "end": "2784480"
  },
  {
    "text": "but we also have the logical construct of a subscription unfortunately you can't wire one up without a trigger but",
    "start": "2784480",
    "end": "2790000"
  },
  {
    "text": "the two things um uh aren't necessarily the same thing um what that will do as a result as",
    "start": "2790000",
    "end": "2796720"
  },
  {
    "text": "we're um as our offense source is emitting these things our broker has wired up our particular channel",
    "start": "2796720",
    "end": "2802560"
  },
  {
    "text": "for um in a namespace to handle things in a certain way for instance this could",
    "start": "2802560",
    "end": "2808800"
  },
  {
    "text": "be again an in-memory channel it could be a gnats channel it could be a kafka channel the subscription is going to say",
    "start": "2808800",
    "end": "2814480"
  },
  {
    "text": "hey you're my sync service and i actually want to um i'm going to",
    "start": "2814480",
    "end": "2821440"
  },
  {
    "text": "uh subs i'm going to subscribe um to the thing that's publishing um events",
    "start": "2821440",
    "end": "2827839"
  },
  {
    "text": "and inevitably i uh i have my source sync dichotomy or my",
    "start": "2827839",
    "end": "2832880"
  },
  {
    "text": "pub sub uh dichotomy as well again it's really really important to note that this guy here is in our mesh and needs",
    "start": "2832880",
    "end": "2839920"
  },
  {
    "text": "to be injected that means that some of these other things are probably need to be in our mesh and",
    "start": "2839920",
    "end": "2845920"
  },
  {
    "text": "probably need to be injected as they can't talk to each other or complete the handshake without being injected that's",
    "start": "2845920",
    "end": "2852480"
  },
  {
    "text": "a pretty important thing um because we don't necessarily want uh",
    "start": "2852480",
    "end": "2857920"
  },
  {
    "text": "anybody being able to admit anything to any particular service we also don't want it to be if you guys will remember",
    "start": "2857920",
    "end": "2864880"
  },
  {
    "text": "our governance talk we really really really don't want to have 10 000 bespoke ways of doing this",
    "start": "2864880",
    "end": "2870400"
  },
  {
    "text": "it would be great if we had one technically consistent approach",
    "start": "2870400",
    "end": "2875280"
  },
  {
    "text": "cool and this is again um another uh kind of uh this is a physical view of",
    "start": "2875440",
    "end": "2881040"
  },
  {
    "text": "what's happening in um canada vetting hopefully this is big enough for you guys to see but again we",
    "start": "2881040",
    "end": "2887040"
  },
  {
    "text": "have our event source we have something in uh here's we have k native serving and here we have k native eventing in",
    "start": "2887040",
    "end": "2893760"
  },
  {
    "text": "canada vetting i'm going to wire up a dispatcher that's going to talk to my uh",
    "start": "2893760",
    "end": "2899520"
  },
  {
    "text": "that's going to talk to my event source the that's going to create my logical broker",
    "start": "2899520",
    "end": "2904640"
  },
  {
    "text": "construct that exists in um a particular application namespace right",
    "start": "2904640",
    "end": "2911040"
  },
  {
    "text": "um when we lay in a channel um uh into our application name space",
    "start": "2911040",
    "end": "2917520"
  },
  {
    "text": "that's actually going to call our that dynamic admissions web hook that i talked about that is then going to say hey yay or nay",
    "start": "2917520",
    "end": "2924480"
  },
  {
    "text": "you're good to go it'll let this guy in and our controller is going to start doing some stuff",
    "start": "2924480",
    "end": "2930880"
  },
  {
    "text": "we our subscription is based on the things that the controllers decided to do and again",
    "start": "2930880",
    "end": "2937040"
  },
  {
    "text": "our dispatcher is going to do a little bit more um or uh",
    "start": "2937040",
    "end": "2942720"
  },
  {
    "text": "then just talk to our event source it's actually going to come over here into our k native serving ingress",
    "start": "2942720",
    "end": "2949920"
  },
  {
    "text": "the [Music] ingress controller then at that point decides to activate or potentially um",
    "start": "2949920",
    "end": "2957119"
  },
  {
    "text": "uh this is drawn a little bit incorrectly it should be like this is going to activate or potentially just",
    "start": "2957119",
    "end": "2962720"
  },
  {
    "text": "send on the uh traffic to the service right and auto the auto scaler will also be",
    "start": "2962720",
    "end": "2969119"
  },
  {
    "text": "talking to our k-dative service as well this guy is going to be injected as part of our service mesh and remember we",
    "start": "2969119",
    "end": "2974319"
  },
  {
    "text": "injected both of these guys the autoscaler and the activator because this guy is talking to this guy as well",
    "start": "2974319",
    "end": "2979680"
  },
  {
    "text": "so we know that nothing the thing that showed up and talked to arcane native service didn't just come",
    "start": "2979680",
    "end": "2985599"
  },
  {
    "text": "out of nowhere there was a handshake that was governed by us we did that in a centralized way via issue",
    "start": "2985599",
    "end": "2993119"
  },
  {
    "text": "all right cool all right bikini to vetting",
    "start": "2994240",
    "end": "2999520"
  },
  {
    "start": "2995000",
    "end": "3033000"
  },
  {
    "text": "unfortunately unlike a native serving doesn't work right out of the box there's a bunch of different things we",
    "start": "2999520",
    "end": "3004640"
  },
  {
    "text": "need to do um we need to inject some side cards here notably um you'll see here and um",
    "start": "3004640",
    "end": "3010720"
  },
  {
    "text": "this is well covered in the repo that uh we saw earlier we need to have uh we need to inject our",
    "start": "3010720",
    "end": "3017119"
  },
  {
    "text": "vending controller we need to inject our vetting web hook um so on and so forth we have a couple of different flavors",
    "start": "3017119",
    "end": "3023520"
  },
  {
    "text": "here of controller and dispatcher um uh specifically the in this particular cr",
    "start": "3023520",
    "end": "3030559"
  },
  {
    "text": "our um in-memory con broker is being um",
    "start": "3030559",
    "end": "3036400"
  },
  {
    "start": "3033000",
    "end": "3120000"
  },
  {
    "text": "injected so this all comes uh i think i'm going to have enough time for this this all comes",
    "start": "3036400",
    "end": "3043200"
  },
  {
    "text": "down to our um uh our demo and so our what our demo is attempting",
    "start": "3043200",
    "end": "3050240"
  },
  {
    "text": "to do is take really fully take on those cloud native constructs um",
    "start": "3050240",
    "end": "3056400"
  },
  {
    "text": "that we saw previously um this is uh um a uh i'm sure everybody here is",
    "start": "3056400",
    "end": "3062960"
  },
  {
    "text": "familiar with aleister cockburn if you're not google it immediately and read everything he's ever written",
    "start": "3062960",
    "end": "3069040"
  },
  {
    "text": "but uh this is something that we refer to as hexagonal architecture and that's why it's depicted in this uh",
    "start": "3069040",
    "end": "3075920"
  },
  {
    "text": "fashion what hexagonal architecture is also called is ports and adapters meaning that the way we would like to",
    "start": "3075920",
    "end": "3082240"
  },
  {
    "text": "construct our software architectures according to aleister cockburn is that we want to have adapters out here on on",
    "start": "3082240",
    "end": "3088880"
  },
  {
    "text": "the outside and ports into our actual um of the things that actually happen in",
    "start": "3088880",
    "end": "3094319"
  },
  {
    "text": "our business so um here we'll notice we have event stream processors we have an",
    "start": "3094319",
    "end": "3100079"
  },
  {
    "text": "event sync and inevitably we have an event store in the middle there that is where our business is happening right",
    "start": "3100079",
    "end": "3106079"
  },
  {
    "text": "the event store could be something like kafka heck maybe it's a database so on and so forth",
    "start": "3106079",
    "end": "3112319"
  },
  {
    "text": "um uh so on and so forth but this is what we're after with this particular um uh",
    "start": "3112319",
    "end": "3120240"
  },
  {
    "start": "3120000",
    "end": "3599000"
  },
  {
    "text": "with this particular uh um uh demo so real quick let's do it",
    "start": "3120240",
    "end": "3128078"
  },
  {
    "text": "all right so um i'm more of a cli guy i hope you guys don't mind",
    "start": "3133119",
    "end": "3139838"
  },
  {
    "text": "can everybody see this or is it too small it's pretty small",
    "start": "3144960",
    "end": "3151359"
  },
  {
    "text": "attitude",
    "start": "3151359",
    "end": "3154359"
  },
  {
    "text": "that's going to be maybe too big cool so if you've been working along and",
    "start": "3167680",
    "end": "3174480"
  },
  {
    "text": "doing the demo uh you'll notice we've got a few things here um we've got uh well let's start maybe a little more",
    "start": "3174480",
    "end": "3180880"
  },
  {
    "text": "slim play",
    "start": "3180880",
    "end": "3183440"
  },
  {
    "text": "sorry oh yeah sorry i'll uh stop being a red hatter",
    "start": "3190800",
    "end": "3197680"
  },
  {
    "text": "cool",
    "start": "3202000",
    "end": "3205000"
  },
  {
    "text": "it's a origin client um",
    "start": "3209680",
    "end": "3214359"
  },
  {
    "text": "cool here is my seo system namespace um you'll notice i have a few things wired up we're using is we're using a seo 2x",
    "start": "3222319",
    "end": "3229119"
  },
  {
    "text": "uh with maestra so you'll notice seod there in my particular case i call the k native governance um we have in there",
    "start": "3229119",
    "end": "3236880"
  },
  {
    "text": "are a couple of differences with maestra versus other um uh versus other",
    "start": "3236880",
    "end": "3242480"
  },
  {
    "text": "issue distributions um we have a couple of different objects a service mesh control",
    "start": "3242480",
    "end": "3248000"
  },
  {
    "text": "plan",
    "start": "3248000",
    "end": "3251000"
  },
  {
    "text": "and you'll notice this is a meister specific but you could easily get there with issio cuddle um",
    "start": "3260079",
    "end": "3266000"
  },
  {
    "text": "what this does is a few different things it wires up uh the things that we see here are ingress",
    "start": "3266000",
    "end": "3271119"
  },
  {
    "text": "gateway um jager kiali so on and so forth right um prometheus as well um uh",
    "start": "3271119",
    "end": "3276880"
  },
  {
    "text": "grafana um uh as well as we have um a few other things",
    "start": "3276880",
    "end": "3282000"
  },
  {
    "text": "going on in the background meister will also go out and lay network policies down for us um if we you get into the",
    "start": "3282000",
    "end": "3288000"
  },
  {
    "text": "nuts and bolts of the actual uh um workshop um uh",
    "start": "3288000",
    "end": "3293359"
  },
  {
    "text": "if you get into the nuts and bolts of the actual workshop you'll notice um uh that we actually need to go um uh lay",
    "start": "3293359",
    "end": "3299599"
  },
  {
    "text": "some things out um so on and so forth it also defines something called",
    "start": "3299599",
    "end": "3307078"
  },
  {
    "text": "um service mesh member roles and again this is a meister specific concept but we don't need maestro to get there right",
    "start": "3312079",
    "end": "3317920"
  },
  {
    "text": "we could easily get there with istio cuddle and network policies so on and so forth but what essentially this does is",
    "start": "3317920",
    "end": "3324160"
  },
  {
    "text": "our service match member roles will be things that we've said hey you are",
    "start": "3324160",
    "end": "3331200"
  },
  {
    "text": "a part of our mesh and in our case um we have a few different things we have amkey streams",
    "start": "3331440",
    "end": "3337440"
  },
  {
    "text": "canadian vetting high native serving and our application namespace for our particular demo is going to be service",
    "start": "3337440",
    "end": "3343680"
  },
  {
    "text": "mesh con as you guys can tell i'm quite creative cool so let's take a peek at what we",
    "start": "3343680",
    "end": "3349920"
  },
  {
    "text": "have in",
    "start": "3349920",
    "end": "3352640"
  },
  {
    "text": "um uh canadian survey well as we talked about previously we have an activator we have",
    "start": "3355040",
    "end": "3360720"
  },
  {
    "text": "an auto scaler there's a few other interesting things that are going on here um we'll notice that we also have",
    "start": "3360720",
    "end": "3365760"
  },
  {
    "text": "an istio webhook right because remember we didn't just take full-on k-native serving out of the box with courier we said hey we want you",
    "start": "3365760",
    "end": "3372880"
  },
  {
    "text": "to use something else for ingress we want you to use issio what we'll notice here is we have an istio web hook that's going to also be uh providing these",
    "start": "3372880",
    "end": "3380000"
  },
  {
    "text": "sorts of admissions and validation control over the things that are allowed to come in right we've got some networking um that's being done as well",
    "start": "3380000",
    "end": "3387440"
  },
  {
    "text": "as our standard k native web hook as well noticeably our standard k native web hook is not um",
    "start": "3387440",
    "end": "3393920"
  },
  {
    "text": "injected that doesn't mean everything can get to it",
    "start": "3393920",
    "end": "3399880"
  },
  {
    "text": "this is one of the drums we uh bang in the um",
    "start": "3409359",
    "end": "3414720"
  },
  {
    "text": "this is one of the drums we bang in our actual instructions but um uh",
    "start": "3414720",
    "end": "3420799"
  },
  {
    "text": "what uh um sorry um what you may need to do um if you're using another seo operator so you",
    "start": "3420799",
    "end": "3427440"
  },
  {
    "text": "may need to go lay down some network policies what we'll notice here is we have a bunch of different network policies these are all laid out by our",
    "start": "3427440",
    "end": "3434240"
  },
  {
    "text": "particular seo operator um and what this is going to say is hey some things can come here some things can't generally",
    "start": "3434240",
    "end": "3440640"
  },
  {
    "text": "speaking that service mesh member roles object we just looked at that's going to define the things that can uh talk to",
    "start": "3440640",
    "end": "3446079"
  },
  {
    "text": "each other we've actually blocked all traffic from outside of this namespace unless you're labeled in a particular",
    "start": "3446079",
    "end": "3452160"
  },
  {
    "text": "way right um we'll depend on the cube our kubernetes are back to enforce some",
    "start": "3452160",
    "end": "3457359"
  },
  {
    "text": "notion of governance there not everybody hopefully in your org can label a namespace um if they can you've got",
    "start": "3457359",
    "end": "3462559"
  },
  {
    "text": "problems however um all right so we're up on uh that's uh we're up on",
    "start": "3462559",
    "end": "3469520"
  },
  {
    "text": "the end of the first session um the second session um we're actually going",
    "start": "3469520",
    "end": "3474640"
  },
  {
    "text": "to see more of the demo we'll walk through k native eventing what we did there why we needed to do",
    "start": "3474640",
    "end": "3480319"
  },
  {
    "text": "those things in k-native eventing maybe we'll do that real quick",
    "start": "3480319",
    "end": "3485880"
  },
  {
    "text": "cool and uh real quick in our last minute we'll notice that we have a bunch of stuff in canada vetting that's wired",
    "start": "3492559",
    "end": "3497760"
  },
  {
    "text": "up uh uh with issue as well inside it right um if we'll remember the schematics we were looking at um",
    "start": "3497760",
    "end": "3504559"
  },
  {
    "text": "when we get an invocation um via an event source it's going to hit these guys first",
    "start": "3504559",
    "end": "3510480"
  },
  {
    "text": "right because we've injected these guys we'll be able to and because we're both members of the service mesh we'll be",
    "start": "3510480",
    "end": "3516720"
  },
  {
    "text": "actually able to call each other so what we'll see inevitably",
    "start": "3516720",
    "end": "3522559"
  },
  {
    "text": "is we have two k-native services",
    "start": "3529680",
    "end": "3534440"
  },
  {
    "text": "and that give that a second and it should spit out some stuff",
    "start": "3550000",
    "end": "3555040"
  },
  {
    "text": "oh no it didn't smell anything",
    "start": "3555040",
    "end": "3559640"
  },
  {
    "text": "what's to do today",
    "start": "3565520",
    "end": "3569960"
  },
  {
    "text": "cool that took way too long so um those two integration things that i just spoke about as i said i'm using camel k it's",
    "start": "3574640",
    "end": "3581280"
  },
  {
    "text": "just making my life a little bit easier but we have these 2k native services these are going to be sitting in our",
    "start": "3581280",
    "end": "3586640"
  },
  {
    "text": "service mesh con event in our service mesh con namespace what we'll notice right now is um which we",
    "start": "3586640",
    "end": "3593599"
  },
  {
    "text": "just saw up here one of them is scale to zero the other one is scaled to one what",
    "start": "3593599",
    "end": "3598640"
  },
  {
    "text": "we'll do i'm over by a minute so i got i probably should stop but what we'll do when we come back is um we'll actually",
    "start": "3598640",
    "end": "3605839"
  },
  {
    "text": "uh get rid of that event sync integration we'll start it up that'll start uh spraying messages to our channels and",
    "start": "3605839",
    "end": "3612400"
  },
  {
    "text": "that then we'll notice that event bus transformation integration scale from zero up up right all depending on uh how",
    "start": "3612400",
    "end": "3618799"
  },
  {
    "text": "much traffic we're bringing in so we'll all and then we'll go and look in kiali a notice um uh or we'll actually scratch",
    "start": "3618799",
    "end": "3626480"
  },
  {
    "text": "out we'll go into jaeger and notice hey this actually got the imc dispatcher called the activator called the auto",
    "start": "3626480",
    "end": "3632960"
  },
  {
    "text": "scaler came back and called the k native service",
    "start": "3632960",
    "end": "3638240"
  },
  {
    "text": "uh avala governance so on and so forth anyways guys um please come back for session two um because we'll be out of",
    "start": "3638960",
    "end": "3645760"
  },
  {
    "text": "theory and into the actual bits a little bit more and then we'll also talk about some uh next steps once we get past these basic",
    "start": "3645760",
    "end": "3653040"
  },
  {
    "text": "authors concepts cool thanks guys",
    "start": "3653040",
    "end": "3658559"
  },
  {
    "text": "and see you later",
    "start": "3658559",
    "end": "3662280"
  }
]