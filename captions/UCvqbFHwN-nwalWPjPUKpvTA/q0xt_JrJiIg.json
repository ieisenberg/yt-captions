[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hello i'm derek mcgowan i'm a maintainer",
    "start": "160",
    "end": "2240"
  },
  {
    "text": "on the container d",
    "start": "2240",
    "end": "3040"
  },
  {
    "text": "project i'm joined today by phil estes",
    "start": "3040",
    "end": "5120"
  },
  {
    "text": "from ibm who is also a maintainer of",
    "start": "5120",
    "end": "6799"
  },
  {
    "text": "container d",
    "start": "6799",
    "end": "7680"
  },
  {
    "text": "we are going to give you an introduction",
    "start": "7680",
    "end": "8960"
  },
  {
    "text": "to container d today most of you have",
    "start": "8960",
    "end": "10800"
  },
  {
    "text": "already heard of container d",
    "start": "10800",
    "end": "12320"
  },
  {
    "text": "but today we will focus on the decisions",
    "start": "12320",
    "end": "14320"
  },
  {
    "text": "that you might make as a container to",
    "start": "14320",
    "end": "15839"
  },
  {
    "text": "user",
    "start": "15839",
    "end": "16320"
  },
  {
    "text": "or a potential contributor firstly phil",
    "start": "16320",
    "end": "19199"
  },
  {
    "text": "will go through what container d",
    "start": "19199",
    "end": "20480"
  },
  {
    "text": "is where it came from and what problems",
    "start": "20480",
    "end": "22480"
  },
  {
    "text": "it is solving",
    "start": "22480",
    "end": "23680"
  },
  {
    "text": "then he will go into why you might be",
    "start": "23680",
    "end": "25119"
  },
  {
    "text": "using containity today or want to use it",
    "start": "25119",
    "end": "27199"
  },
  {
    "text": "in the future",
    "start": "27199",
    "end": "28640"
  },
  {
    "text": "after that i will discuss how to",
    "start": "28640",
    "end": "30480"
  },
  {
    "text": "contribute to continuity",
    "start": "30480",
    "end": "31840"
  },
  {
    "text": "we will go through the high level",
    "start": "31840",
    "end": "32960"
  },
  {
    "text": "architecture of container d and discuss",
    "start": "32960",
    "end": "34960"
  },
  {
    "text": "the different parts which you may want",
    "start": "34960",
    "end": "36160"
  },
  {
    "text": "to contribute to",
    "start": "36160",
    "end": "37440"
  },
  {
    "text": "lastly we'll discuss what's coming up in",
    "start": "37440",
    "end": "39360"
  },
  {
    "text": "container d all right let me hand it",
    "start": "39360",
    "end": "41360"
  },
  {
    "text": "over to phil",
    "start": "41360",
    "end": "42559"
  },
  {
    "text": "thanks for that intro derek um and hi",
    "start": "42559",
    "end": "44960"
  },
  {
    "text": "everyone it's um",
    "start": "44960",
    "end": "46640"
  },
  {
    "text": "obviously it would be a lot more fun to",
    "start": "46640",
    "end": "48719"
  },
  {
    "text": "be together at kubecon",
    "start": "48719",
    "end": "50320"
  },
  {
    "text": "like we have for the past few years like",
    "start": "50320",
    "end": "52640"
  },
  {
    "text": "many of you it's one of my favorite",
    "start": "52640",
    "end": "54879"
  },
  {
    "text": "conferences where i see tons of",
    "start": "54879",
    "end": "58000"
  },
  {
    "text": "friends and colleagues across the",
    "start": "58000",
    "end": "60559"
  },
  {
    "text": "container world",
    "start": "60559",
    "end": "62719"
  },
  {
    "text": "but we're going to do the best we can",
    "start": "62719",
    "end": "64158"
  },
  {
    "text": "and hopefully",
    "start": "64159",
    "end": "66400"
  },
  {
    "text": "give you some details on container d",
    "start": "66400",
    "end": "68799"
  },
  {
    "text": "that are valuable to you",
    "start": "68799",
    "end": "70000"
  },
  {
    "text": "and your current role and hopefully in",
    "start": "70000",
    "end": "72000"
  },
  {
    "text": "the future we'll see you again",
    "start": "72000",
    "end": "73360"
  },
  {
    "text": "at a conference in the future but let me",
    "start": "73360",
    "end": "77119"
  },
  {
    "text": "try and get us all on the same page and",
    "start": "77119",
    "end": "79360"
  },
  {
    "text": "answer this question",
    "start": "79360",
    "end": "80720"
  },
  {
    "text": "what is container d and sure you know",
    "start": "80720",
    "end": "83600"
  },
  {
    "text": "the default",
    "start": "83600",
    "end": "84560"
  },
  {
    "text": "uh response is while it's container",
    "start": "84560",
    "end": "86880"
  },
  {
    "text": "runtime",
    "start": "86880",
    "end": "88400"
  },
  {
    "text": "but we all know that that term is fairly",
    "start": "88400",
    "end": "91119"
  },
  {
    "text": "overloaded and so",
    "start": "91119",
    "end": "92400"
  },
  {
    "text": "maybe it's easiest to see container d as",
    "start": "92400",
    "end": "95200"
  },
  {
    "text": "being",
    "start": "95200",
    "end": "95680"
  },
  {
    "text": "below certain things and we maybe call",
    "start": "95680",
    "end": "98320"
  },
  {
    "text": "those platforms like docker or",
    "start": "98320",
    "end": "100079"
  },
  {
    "text": "kubernetes",
    "start": "100079",
    "end": "101840"
  },
  {
    "text": "but above a lower layer of what",
    "start": "101840",
    "end": "104880"
  },
  {
    "text": "might be the actual container runtimes",
    "start": "104880",
    "end": "107520"
  },
  {
    "text": "you think of like run c",
    "start": "107520",
    "end": "108960"
  },
  {
    "text": "or even some of the other isolators you",
    "start": "108960",
    "end": "110960"
  },
  {
    "text": "may have heard about like cata",
    "start": "110960",
    "end": "112320"
  },
  {
    "text": "containers",
    "start": "112320",
    "end": "113439"
  },
  {
    "text": "or firecracker or g-visor and so",
    "start": "113439",
    "end": "116240"
  },
  {
    "text": "container d really fits in this middle",
    "start": "116240",
    "end": "118159"
  },
  {
    "text": "spot",
    "start": "118159",
    "end": "118960"
  },
  {
    "text": "below these more feature-rich platforms",
    "start": "118960",
    "end": "122640"
  },
  {
    "text": "but above the lower layer runtimes which",
    "start": "122640",
    "end": "124719"
  },
  {
    "text": "actually do the work",
    "start": "124719",
    "end": "126560"
  },
  {
    "text": "of executing your container in some",
    "start": "126560",
    "end": "128479"
  },
  {
    "text": "environment whether linux",
    "start": "128479",
    "end": "130479"
  },
  {
    "text": "kernel features or qmu kvm",
    "start": "130479",
    "end": "135440"
  },
  {
    "text": "so obviously if we sit in that space",
    "start": "135440",
    "end": "137599"
  },
  {
    "text": "where you could also think of us",
    "start": "137599",
    "end": "139440"
  },
  {
    "text": "as a resource manager so again we're",
    "start": "139440",
    "end": "142959"
  },
  {
    "text": "doing the work on behalf of a platform",
    "start": "142959",
    "end": "145920"
  },
  {
    "text": "and there's another process below us",
    "start": "145920",
    "end": "147760"
  },
  {
    "text": "managing the the discrete",
    "start": "147760",
    "end": "150000"
  },
  {
    "text": "processes itself we sit in that middle",
    "start": "150000",
    "end": "153120"
  },
  {
    "text": "space and become this resource manager",
    "start": "153120",
    "end": "155200"
  },
  {
    "text": "for those processes for their life cycle",
    "start": "155200",
    "end": "157840"
  },
  {
    "text": "handling start stop pause etc",
    "start": "157840",
    "end": "161440"
  },
  {
    "text": "and again we we deal with the artifacts",
    "start": "161440",
    "end": "163680"
  },
  {
    "text": "you're going to need to even",
    "start": "163680",
    "end": "164879"
  },
  {
    "text": "start a container so talking to a",
    "start": "164879",
    "end": "167120"
  },
  {
    "text": "registry pulling the manifest getting",
    "start": "167120",
    "end": "169120"
  },
  {
    "text": "the config and the layers",
    "start": "169120",
    "end": "171920"
  },
  {
    "text": "unpacking that into file system",
    "start": "171920",
    "end": "173519"
  },
  {
    "text": "snapshots",
    "start": "173519",
    "end": "175120"
  },
  {
    "text": "so container d supports several file",
    "start": "175120",
    "end": "177760"
  },
  {
    "text": "systems butter fs",
    "start": "177760",
    "end": "179120"
  },
  {
    "text": "overlay mapper and so container d",
    "start": "179120",
    "end": "182720"
  },
  {
    "text": "is that resource manager of you've",
    "start": "182720",
    "end": "185200"
  },
  {
    "text": "pulled an image and now you need to",
    "start": "185200",
    "end": "186959"
  },
  {
    "text": "turn it into a file system snapshot that",
    "start": "186959",
    "end": "189840"
  },
  {
    "text": "can be used by the driver you're using",
    "start": "189840",
    "end": "192959"
  },
  {
    "text": "all these resources need have some",
    "start": "192959",
    "end": "194800"
  },
  {
    "text": "metadata they've got dependencies they",
    "start": "194800",
    "end": "197040"
  },
  {
    "text": "have name spaces and other",
    "start": "197040",
    "end": "198959"
  },
  {
    "text": "ways to to administratively separate",
    "start": "198959",
    "end": "201440"
  },
  {
    "text": "them",
    "start": "201440",
    "end": "202080"
  },
  {
    "text": "and so container d again handles these",
    "start": "202080",
    "end": "204159"
  },
  {
    "text": "for you",
    "start": "204159",
    "end": "205120"
  },
  {
    "text": "and when derek comes back you'll see",
    "start": "205120",
    "end": "207760"
  },
  {
    "text": "this",
    "start": "207760",
    "end": "208159"
  },
  {
    "text": "in an architectural diagram that",
    "start": "208159",
    "end": "209680"
  },
  {
    "text": "hopefully helps you see how it all fits",
    "start": "209680",
    "end": "212000"
  },
  {
    "text": "together the other aspect that's",
    "start": "212000",
    "end": "214400"
  },
  {
    "text": "important to know about container d",
    "start": "214400",
    "end": "215840"
  },
  {
    "text": "is that we're a tightly scoped run time",
    "start": "215840",
    "end": "218879"
  },
  {
    "text": "it takes a 100 percent maintainer",
    "start": "218879",
    "end": "220480"
  },
  {
    "text": "approval to change",
    "start": "220480",
    "end": "222319"
  },
  {
    "text": "increase our scope so far the only major",
    "start": "222319",
    "end": "226239"
  },
  {
    "text": "change we've made and it's been several",
    "start": "226239",
    "end": "227840"
  },
  {
    "text": "years now",
    "start": "227840",
    "end": "228799"
  },
  {
    "text": "is to bring in the cri implementation so",
    "start": "228799",
    "end": "231440"
  },
  {
    "text": "kubernetes has this container runtime",
    "start": "231440",
    "end": "233360"
  },
  {
    "text": "interface",
    "start": "233360",
    "end": "235280"
  },
  {
    "text": "there was an implementation started",
    "start": "235280",
    "end": "236879"
  },
  {
    "text": "separately that used container d",
    "start": "236879",
    "end": "238879"
  },
  {
    "text": "we've brought that within the project",
    "start": "238879",
    "end": "240560"
  },
  {
    "text": "and it's been that way for several years",
    "start": "240560",
    "end": "243360"
  },
  {
    "text": "a couple quick highlights um you may",
    "start": "243360",
    "end": "246400"
  },
  {
    "text": "have",
    "start": "246400",
    "end": "247040"
  },
  {
    "text": "heard about them already at past",
    "start": "247040",
    "end": "249840"
  },
  {
    "text": "conferences",
    "start": "249840",
    "end": "251519"
  },
  {
    "text": "but we're the fifth project to graduate",
    "start": "251519",
    "end": "253280"
  },
  {
    "text": "with within the cncf there are others",
    "start": "253280",
    "end": "255920"
  },
  {
    "text": "who have graduated more recently",
    "start": "255920",
    "end": "258320"
  },
  {
    "text": "it's been over a year now since we",
    "start": "258320",
    "end": "259919"
  },
  {
    "text": "graduated",
    "start": "259919",
    "end": "261919"
  },
  {
    "text": "in the past year we've grown in",
    "start": "261919",
    "end": "264560"
  },
  {
    "text": "contributors and more companies",
    "start": "264560",
    "end": "266560"
  },
  {
    "text": "and so we now have over 250 unique",
    "start": "266560",
    "end": "268800"
  },
  {
    "text": "contributors to the project",
    "start": "268800",
    "end": "270880"
  },
  {
    "text": "we support linux and windows our windows",
    "start": "270880",
    "end": "273120"
  },
  {
    "text": "support has grown",
    "start": "273120",
    "end": "275040"
  },
  {
    "text": "and we also support multiple",
    "start": "275040",
    "end": "276479"
  },
  {
    "text": "architectures",
    "start": "276479",
    "end": "278160"
  },
  {
    "text": "and we've added more recently governed",
    "start": "278160",
    "end": "280080"
  },
  {
    "text": "sub projects like a rust lang",
    "start": "280080",
    "end": "282720"
  },
  {
    "text": "implementation of the ttrpc protocol",
    "start": "282720",
    "end": "286720"
  },
  {
    "text": "container encryption lazy image pull",
    "start": "286720",
    "end": "289440"
  },
  {
    "text": "support as an external snapshotter",
    "start": "289440",
    "end": "292080"
  },
  {
    "text": "and so again a lot of things have",
    "start": "292080",
    "end": "293520"
  },
  {
    "text": "happened in the last year or two with",
    "start": "293520",
    "end": "295040"
  },
  {
    "text": "container d",
    "start": "295040",
    "end": "296000"
  },
  {
    "text": "so if you aren't up to speed there's",
    "start": "296000",
    "end": "297680"
  },
  {
    "text": "also a great project",
    "start": "297680",
    "end": "299360"
  },
  {
    "text": "journey report that was put out early",
    "start": "299360",
    "end": "301120"
  },
  {
    "text": "this year you can find that on the cncf",
    "start": "301120",
    "end": "303520"
  },
  {
    "text": "website or just by searching for",
    "start": "303520",
    "end": "305199"
  },
  {
    "text": "container d project journey",
    "start": "305199",
    "end": "307360"
  },
  {
    "text": "so hopefully that gives us kind of a",
    "start": "307360",
    "end": "308880"
  },
  {
    "text": "level set of",
    "start": "308880",
    "end": "310720"
  },
  {
    "text": "what is container d what are kind of the",
    "start": "310720",
    "end": "313520"
  },
  {
    "text": "main components of it",
    "start": "313520",
    "end": "315680"
  },
  {
    "text": "and what's been happening in the last",
    "start": "315680",
    "end": "317360"
  },
  {
    "text": "year so let's move on from there",
    "start": "317360",
    "end": "319520"
  },
  {
    "start": "319000",
    "end": "460000"
  },
  {
    "text": "we talked about what continuity is now",
    "start": "319520",
    "end": "322080"
  },
  {
    "text": "let's talk a little bit about where",
    "start": "322080",
    "end": "323600"
  },
  {
    "text": "container d came from",
    "start": "323600",
    "end": "325520"
  },
  {
    "text": "it was originally built up alongside",
    "start": "325520",
    "end": "327440"
  },
  {
    "text": "docker it wasn't forked or inherited",
    "start": "327440",
    "end": "329840"
  },
  {
    "text": "from the docker code base it was a new",
    "start": "329840",
    "end": "331440"
  },
  {
    "text": "project",
    "start": "331440",
    "end": "332720"
  },
  {
    "text": "developed around the same time that the",
    "start": "332720",
    "end": "334560"
  },
  {
    "text": "oci was formed and run c was created",
    "start": "334560",
    "end": "337199"
  },
  {
    "text": "and so it was initially that process",
    "start": "337199",
    "end": "338880"
  },
  {
    "text": "supervisor that sat between",
    "start": "338880",
    "end": "340880"
  },
  {
    "text": "the full docker runtime and run c",
    "start": "340880",
    "end": "345360"
  },
  {
    "text": "over the years it's grown in scope from",
    "start": "345360",
    "end": "347199"
  },
  {
    "text": "that initial just process supervisor",
    "start": "347199",
    "end": "349680"
  },
  {
    "text": "to a full run time along the way again",
    "start": "349680",
    "end": "353520"
  },
  {
    "text": "even though some of those capabilities",
    "start": "353520",
    "end": "355520"
  },
  {
    "text": "in container d overlapped with the",
    "start": "355520",
    "end": "357039"
  },
  {
    "text": "docker code base the decision was",
    "start": "357039",
    "end": "359440"
  },
  {
    "text": "to create new interfaces to take what we",
    "start": "359440",
    "end": "361919"
  },
  {
    "text": "learned from",
    "start": "361919",
    "end": "363440"
  },
  {
    "text": "those initial years of building the",
    "start": "363440",
    "end": "365120"
  },
  {
    "text": "docker engine",
    "start": "365120",
    "end": "366720"
  },
  {
    "text": "and come up with a cleaner api and",
    "start": "366720",
    "end": "368479"
  },
  {
    "text": "better separation",
    "start": "368479",
    "end": "370240"
  },
  {
    "text": "for the management of containers and",
    "start": "370240",
    "end": "371919"
  },
  {
    "text": "images",
    "start": "371919",
    "end": "373759"
  },
  {
    "text": "i mentioned this already but the cri was",
    "start": "373759",
    "end": "377199"
  },
  {
    "text": "originally this out of process",
    "start": "377199",
    "end": "378639"
  },
  {
    "text": "plug-in and so that was kind of the last",
    "start": "378639",
    "end": "380319"
  },
  {
    "text": "piece that came into container d",
    "start": "380319",
    "end": "382720"
  },
  {
    "text": "so again this growth over years from the",
    "start": "382720",
    "end": "385360"
  },
  {
    "text": "supervisor",
    "start": "385360",
    "end": "386400"
  },
  {
    "text": "to this full run time and then adding in",
    "start": "386400",
    "end": "388639"
  },
  {
    "text": "the cri to be a runtime for kubernetes",
    "start": "388639",
    "end": "392319"
  },
  {
    "text": "that happened over a number of years",
    "start": "392319",
    "end": "393840"
  },
  {
    "text": "within that time frame it was donated to",
    "start": "393840",
    "end": "396000"
  },
  {
    "text": "the cncf",
    "start": "396000",
    "end": "397919"
  },
  {
    "text": "a lot of times there is a desire to",
    "start": "397919",
    "end": "399520"
  },
  {
    "text": "compare container d with creo",
    "start": "399520",
    "end": "402319"
  },
  {
    "text": "creo actually uses parts of the docker",
    "start": "402319",
    "end": "405199"
  },
  {
    "text": "code base unlike what i just said about",
    "start": "405199",
    "end": "406960"
  },
  {
    "text": "container d",
    "start": "406960",
    "end": "408319"
  },
  {
    "text": "and forked for example the graph drivers",
    "start": "408319",
    "end": "410800"
  },
  {
    "text": "uh all the overlay and device mapper and",
    "start": "410800",
    "end": "413199"
  },
  {
    "text": "other",
    "start": "413199",
    "end": "414160"
  },
  {
    "text": "drivers and used that as the starting",
    "start": "414160",
    "end": "417360"
  },
  {
    "text": "point for creo",
    "start": "417360",
    "end": "418960"
  },
  {
    "text": "whereas container d started um with",
    "start": "418960",
    "end": "422160"
  },
  {
    "text": "learnings from that initial docker code",
    "start": "422160",
    "end": "424319"
  },
  {
    "text": "base but",
    "start": "424319",
    "end": "425120"
  },
  {
    "text": "initially and continued to create",
    "start": "425120",
    "end": "428160"
  },
  {
    "text": "completely new interfaces so that gives",
    "start": "428160",
    "end": "431120"
  },
  {
    "text": "you a bit of the history",
    "start": "431120",
    "end": "432800"
  },
  {
    "text": "of where we came from how the project",
    "start": "432800",
    "end": "434880"
  },
  {
    "text": "started",
    "start": "434880",
    "end": "436240"
  },
  {
    "text": "and where we are today with the the full",
    "start": "436240",
    "end": "438479"
  },
  {
    "text": "cri added to that",
    "start": "438479",
    "end": "440240"
  },
  {
    "text": "uh full run time with registry",
    "start": "440240",
    "end": "442960"
  },
  {
    "text": "interaction with container lifecycle",
    "start": "442960",
    "end": "444880"
  },
  {
    "text": "management",
    "start": "444880",
    "end": "446639"
  },
  {
    "text": "so of course the million dollar question",
    "start": "446639",
    "end": "449280"
  },
  {
    "text": "is great should i use container d",
    "start": "449280",
    "end": "452160"
  },
  {
    "text": "um of course you're asking the",
    "start": "452160",
    "end": "453680"
  },
  {
    "text": "maintainers of the project who",
    "start": "453680",
    "end": "455680"
  },
  {
    "text": "have spent the last four years building",
    "start": "455680",
    "end": "457360"
  },
  {
    "text": "and of course the answer is yes",
    "start": "457360",
    "end": "460160"
  },
  {
    "start": "460000",
    "end": "560000"
  },
  {
    "text": "but you're probably looking for a more",
    "start": "460160",
    "end": "461919"
  },
  {
    "text": "nuanced answer of",
    "start": "461919",
    "end": "463360"
  },
  {
    "text": "well why would i use container d so",
    "start": "463360",
    "end": "465919"
  },
  {
    "text": "here's a few",
    "start": "465919",
    "end": "466639"
  },
  {
    "text": "aspects before we dig even further",
    "start": "466639",
    "end": "470960"
  },
  {
    "text": "coming at it from different perspectives",
    "start": "471440",
    "end": "474160"
  },
  {
    "text": "for example are you using kubernetes",
    "start": "474160",
    "end": "476720"
  },
  {
    "text": "container d is a stable well supported",
    "start": "476720",
    "end": "479520"
  },
  {
    "text": "very mature run time for kubernetes",
    "start": "479520",
    "end": "482240"
  },
  {
    "text": "and as you'll see in a few minutes most",
    "start": "482240",
    "end": "483919"
  },
  {
    "text": "major cloud providers",
    "start": "483919",
    "end": "485919"
  },
  {
    "text": "have a kubernetes offering that uses",
    "start": "485919",
    "end": "487680"
  },
  {
    "text": "container d today",
    "start": "487680",
    "end": "490080"
  },
  {
    "text": "what about for development both docker",
    "start": "490080",
    "end": "493120"
  },
  {
    "text": "and build kit",
    "start": "493120",
    "end": "494400"
  },
  {
    "text": "that would be our recommended tools for",
    "start": "494400",
    "end": "497199"
  },
  {
    "text": "a developer facing",
    "start": "497199",
    "end": "498720"
  },
  {
    "text": "a workflow but those are using container",
    "start": "498720",
    "end": "501039"
  },
  {
    "text": "d already today",
    "start": "501039",
    "end": "502080"
  },
  {
    "text": "so maybe you're using docker or build",
    "start": "502080",
    "end": "504160"
  },
  {
    "text": "kit and therefore you're already using",
    "start": "504160",
    "end": "505680"
  },
  {
    "text": "container d today",
    "start": "505680",
    "end": "508319"
  },
  {
    "text": "you're interested in edge container d is",
    "start": "508319",
    "end": "511280"
  },
  {
    "text": "the most memory efficient and stable",
    "start": "511280",
    "end": "513039"
  },
  {
    "text": "runtime",
    "start": "513039",
    "end": "514479"
  },
  {
    "text": "look at rancher's k3s and they",
    "start": "514479",
    "end": "517919"
  },
  {
    "text": "chose container d again for that reason",
    "start": "517919",
    "end": "520719"
  },
  {
    "text": "for this",
    "start": "520719",
    "end": "521599"
  },
  {
    "text": "minimize kubernetes functions as a",
    "start": "521599",
    "end": "524640"
  },
  {
    "text": "service if that's an area you're",
    "start": "524640",
    "end": "526080"
  },
  {
    "text": "interested in",
    "start": "526080",
    "end": "527680"
  },
  {
    "text": "again container d's performance and",
    "start": "527680",
    "end": "530560"
  },
  {
    "text": "efficiency",
    "start": "530560",
    "end": "532399"
  },
  {
    "text": "have caused it to be selected by the",
    "start": "532399",
    "end": "534480"
  },
  {
    "text": "open fads for the fasd project",
    "start": "534480",
    "end": "536959"
  },
  {
    "text": "uh ibm cloud functions uh uses container",
    "start": "536959",
    "end": "539680"
  },
  {
    "text": "d as the runtime under the covers as",
    "start": "539680",
    "end": "541600"
  },
  {
    "text": "well",
    "start": "541600",
    "end": "542399"
  },
  {
    "text": "so these are these are aspects um",
    "start": "542399",
    "end": "545600"
  },
  {
    "text": "you know maybe you're using container d",
    "start": "545600",
    "end": "547200"
  },
  {
    "text": "already because you're using a popular",
    "start": "547200",
    "end": "549600"
  },
  {
    "text": "cloud provider's kubernetes offering but",
    "start": "549600",
    "end": "552320"
  },
  {
    "text": "these are all the kind of aspects that",
    "start": "552320",
    "end": "553920"
  },
  {
    "text": "we see where people are using",
    "start": "553920",
    "end": "555839"
  },
  {
    "text": "container d and it's important to think",
    "start": "555839",
    "end": "558720"
  },
  {
    "text": "about this in terms of stability we",
    "start": "558720",
    "end": "561519"
  },
  {
    "start": "560000",
    "end": "669000"
  },
  {
    "text": "initially in 2016 and 2017 talked about",
    "start": "561519",
    "end": "565920"
  },
  {
    "text": "container d being this core stable run",
    "start": "565920",
    "end": "568560"
  },
  {
    "text": "time",
    "start": "568560",
    "end": "569279"
  },
  {
    "text": "but stability means different things to",
    "start": "569279",
    "end": "571040"
  },
  {
    "text": "different people",
    "start": "571040",
    "end": "572480"
  },
  {
    "text": "there's process stability so again if",
    "start": "572480",
    "end": "575360"
  },
  {
    "text": "you're if you're running a demon like",
    "start": "575360",
    "end": "577040"
  },
  {
    "text": "kubernetes or docker or some other demon",
    "start": "577040",
    "end": "579600"
  },
  {
    "text": "you want process stability and that that",
    "start": "579600",
    "end": "581839"
  },
  {
    "text": "that demon process doesn't crash on you",
    "start": "581839",
    "end": "584240"
  },
  {
    "text": "corrupt your data you don't lose",
    "start": "584240",
    "end": "586160"
  },
  {
    "text": "containers",
    "start": "586160",
    "end": "587360"
  },
  {
    "text": "that's one aspect of stability we",
    "start": "587360",
    "end": "589200"
  },
  {
    "text": "focused on in container d",
    "start": "589200",
    "end": "591680"
  },
  {
    "text": "uh stability around resource use you",
    "start": "591680",
    "end": "594399"
  },
  {
    "text": "don't want a runaway process a runaway",
    "start": "594399",
    "end": "596399"
  },
  {
    "text": "daemon",
    "start": "596399",
    "end": "597600"
  },
  {
    "text": "that uses all your memory or eats up",
    "start": "597600",
    "end": "599519"
  },
  {
    "text": "your cpu",
    "start": "599519",
    "end": "600880"
  },
  {
    "text": "and so we focused and done have done a",
    "start": "600880",
    "end": "603440"
  },
  {
    "text": "lot of testing around",
    "start": "603440",
    "end": "605279"
  },
  {
    "text": "memory usage around cpu usage making",
    "start": "605279",
    "end": "608160"
  },
  {
    "text": "sure",
    "start": "608160",
    "end": "608720"
  },
  {
    "text": "we don't have spiky uh resource use",
    "start": "608720",
    "end": "611760"
  },
  {
    "text": "and having the smallest possible",
    "start": "611760",
    "end": "613680"
  },
  {
    "text": "overhead for each container",
    "start": "613680",
    "end": "615360"
  },
  {
    "text": "about how much extra memory and cpu is",
    "start": "615360",
    "end": "617519"
  },
  {
    "text": "required",
    "start": "617519",
    "end": "618640"
  },
  {
    "text": "for the life cycle management around",
    "start": "618640",
    "end": "620480"
  },
  {
    "text": "containers and so",
    "start": "620480",
    "end": "622399"
  },
  {
    "text": "the ttrpc protocol was one way",
    "start": "622399",
    "end": "625839"
  },
  {
    "text": "to to notice that memory usage could be",
    "start": "625839",
    "end": "628720"
  },
  {
    "text": "quite large for that",
    "start": "628720",
    "end": "629920"
  },
  {
    "text": "management supervisory process",
    "start": "629920",
    "end": "633279"
  },
  {
    "text": "and so we created an additional sub",
    "start": "633279",
    "end": "635519"
  },
  {
    "text": "project",
    "start": "635519",
    "end": "636399"
  },
  {
    "text": "that solved that problem and dropped our",
    "start": "636399",
    "end": "638480"
  },
  {
    "text": "memory use per container",
    "start": "638480",
    "end": "641040"
  },
  {
    "text": "again file system use we have garbage",
    "start": "641040",
    "end": "644480"
  },
  {
    "text": "collection and container d",
    "start": "644480",
    "end": "645839"
  },
  {
    "text": "which handles uh and accounts for that",
    "start": "645839",
    "end": "648480"
  },
  {
    "text": "issue of",
    "start": "648480",
    "end": "649360"
  },
  {
    "text": "of image artifacts and layers uh",
    "start": "649360",
    "end": "652800"
  },
  {
    "text": "being cleaned up when they're not being",
    "start": "652800",
    "end": "654240"
  },
  {
    "text": "used and so these aspects of stability",
    "start": "654240",
    "end": "656959"
  },
  {
    "text": "are things we've focused on in container",
    "start": "656959",
    "end": "658720"
  },
  {
    "text": "d",
    "start": "658720",
    "end": "659440"
  },
  {
    "text": "and made progress on over the years and",
    "start": "659440",
    "end": "661680"
  },
  {
    "text": "have caused it",
    "start": "661680",
    "end": "663040"
  },
  {
    "text": "to be one reason to be a popular choice",
    "start": "663040",
    "end": "666240"
  },
  {
    "text": "in various avenues of use today",
    "start": "666240",
    "end": "669760"
  },
  {
    "start": "669000",
    "end": "764000"
  },
  {
    "text": "so we've talked about our focus on",
    "start": "669760",
    "end": "671680"
  },
  {
    "text": "stability",
    "start": "671680",
    "end": "672800"
  },
  {
    "text": "and on the use cases that exist for",
    "start": "672800",
    "end": "675839"
  },
  {
    "text": "container run times",
    "start": "675839",
    "end": "677600"
  },
  {
    "text": "and so naturally uh what you'll find is",
    "start": "677600",
    "end": "680640"
  },
  {
    "text": "that container d",
    "start": "680640",
    "end": "681839"
  },
  {
    "text": "because of this focus is really widely",
    "start": "681839",
    "end": "684240"
  },
  {
    "text": "used in production today and",
    "start": "684240",
    "end": "686160"
  },
  {
    "text": "so there's a handful of logos here there",
    "start": "686160",
    "end": "688320"
  },
  {
    "text": "could be many more",
    "start": "688320",
    "end": "690320"
  },
  {
    "text": "but these are all places where container",
    "start": "690320",
    "end": "692240"
  },
  {
    "text": "d is used in production today and",
    "start": "692240",
    "end": "694560"
  },
  {
    "text": "of course you'll see cloud providers",
    "start": "694560",
    "end": "696240"
  },
  {
    "text": "you'll see various kubernetes use cases",
    "start": "696240",
    "end": "698880"
  },
  {
    "text": "and and of course docker",
    "start": "698880",
    "end": "701279"
  },
  {
    "text": "and then people have used container d to",
    "start": "701279",
    "end": "702880"
  },
  {
    "text": "build higher level systems so",
    "start": "702880",
    "end": "705920"
  },
  {
    "text": "containers as a service via fargate or",
    "start": "705920",
    "end": "708720"
  },
  {
    "text": "google cloud run",
    "start": "708720",
    "end": "710240"
  },
  {
    "text": "or aws's bottle rocket or firecracker",
    "start": "710240",
    "end": "713519"
  },
  {
    "text": "or weaveworks ignite all these",
    "start": "713519",
    "end": "717040"
  },
  {
    "text": "tools and systems and frameworks and",
    "start": "717040",
    "end": "719519"
  },
  {
    "text": "built on top of container d",
    "start": "719519",
    "end": "722000"
  },
  {
    "text": "and each one of these use cases is well",
    "start": "722000",
    "end": "724800"
  },
  {
    "text": "supported by the container d",
    "start": "724800",
    "end": "727040"
  },
  {
    "text": "framework and model of having a clean",
    "start": "727040",
    "end": "728880"
  },
  {
    "text": "api clean separation",
    "start": "728880",
    "end": "731200"
  },
  {
    "text": "people can use various aspects of",
    "start": "731200",
    "end": "732880"
  },
  {
    "text": "container d without using others",
    "start": "732880",
    "end": "735120"
  },
  {
    "text": "and so we've seen a huge growth over the",
    "start": "735120",
    "end": "737440"
  },
  {
    "text": "years in",
    "start": "737440",
    "end": "739279"
  },
  {
    "text": "both continuity as a building block but",
    "start": "739279",
    "end": "742320"
  },
  {
    "text": "also leading to",
    "start": "742320",
    "end": "743440"
  },
  {
    "text": "a wide use of containerity and",
    "start": "743440",
    "end": "745279"
  },
  {
    "text": "production",
    "start": "745279",
    "end": "746560"
  },
  {
    "text": "and that's led to even a lot of",
    "start": "746560",
    "end": "747839"
  },
  {
    "text": "contribution so the device mapper",
    "start": "747839",
    "end": "750720"
  },
  {
    "text": "snapshotter from the firecracker team",
    "start": "750720",
    "end": "753839"
  },
  {
    "text": "or other features that have been",
    "start": "753839",
    "end": "755279"
  },
  {
    "text": "contributed or developed or",
    "start": "755279",
    "end": "757440"
  },
  {
    "text": "external projects building around",
    "start": "757440",
    "end": "759200"
  },
  {
    "text": "container d that you can find today",
    "start": "759200",
    "end": "762480"
  },
  {
    "text": "so again given that it's natural that",
    "start": "762480",
    "end": "765760"
  },
  {
    "start": "764000",
    "end": "794000"
  },
  {
    "text": "you'll see",
    "start": "765760",
    "end": "766880"
  },
  {
    "text": "when you look at the cncf annual survey",
    "start": "766880",
    "end": "769839"
  },
  {
    "text": "or",
    "start": "769839",
    "end": "770160"
  },
  {
    "text": "systig's annual container report",
    "start": "770160",
    "end": "773279"
  },
  {
    "text": "the use of container d especially in",
    "start": "773279",
    "end": "775440"
  },
  {
    "text": "production has grown",
    "start": "775440",
    "end": "776560"
  },
  {
    "text": "year over year every time the surveys",
    "start": "776560",
    "end": "779440"
  },
  {
    "text": "have come out",
    "start": "779440",
    "end": "780800"
  },
  {
    "text": "and you'll see that given we know docker",
    "start": "780800",
    "end": "783040"
  },
  {
    "text": "uses container d when you combine",
    "start": "783040",
    "end": "785440"
  },
  {
    "text": "container d and docker usage together it",
    "start": "785440",
    "end": "788320"
  },
  {
    "text": "is the lion's share",
    "start": "788320",
    "end": "789920"
  },
  {
    "text": "of container runtime use in the industry",
    "start": "789920",
    "end": "792720"
  },
  {
    "text": "today",
    "start": "792720",
    "end": "794399"
  },
  {
    "start": "794000",
    "end": "857000"
  },
  {
    "text": "so i talked about this a few minutes ago",
    "start": "794399",
    "end": "797200"
  },
  {
    "text": "but",
    "start": "797200",
    "end": "798399"
  },
  {
    "text": "effectively because of all these use",
    "start": "798399",
    "end": "800480"
  },
  {
    "text": "cases because of all these",
    "start": "800480",
    "end": "801920"
  },
  {
    "text": "implementations",
    "start": "801920",
    "end": "803839"
  },
  {
    "text": "if you're running containers you maybe",
    "start": "803839",
    "end": "805839"
  },
  {
    "text": "already are using container d in some",
    "start": "805839",
    "end": "807600"
  },
  {
    "text": "way are you using docker then yes you're",
    "start": "807600",
    "end": "809600"
  },
  {
    "text": "using container d",
    "start": "809600",
    "end": "811200"
  },
  {
    "text": "if you're using build kit that then",
    "start": "811200",
    "end": "813519"
  },
  {
    "text": "you're already using the container to",
    "start": "813519",
    "end": "814959"
  },
  {
    "text": "api",
    "start": "814959",
    "end": "816480"
  },
  {
    "text": "are you running containers in a cloud",
    "start": "816480",
    "end": "818480"
  },
  {
    "text": "context as a service like fargate or",
    "start": "818480",
    "end": "821440"
  },
  {
    "text": "google cloud run then you're already",
    "start": "821440",
    "end": "823440"
  },
  {
    "text": "using container d",
    "start": "823440",
    "end": "824639"
  },
  {
    "text": "and we've of course mentioned the the",
    "start": "824639",
    "end": "827600"
  },
  {
    "text": "common",
    "start": "827600",
    "end": "828000"
  },
  {
    "text": "kubernetes use case so all the cloud",
    "start": "828000",
    "end": "830399"
  },
  {
    "text": "providers",
    "start": "830399",
    "end": "831920"
  },
  {
    "text": "manage service offerings use container d",
    "start": "831920",
    "end": "835040"
  },
  {
    "text": "and so",
    "start": "835040",
    "end": "836399"
  },
  {
    "text": "you probably may already be using",
    "start": "836399",
    "end": "838240"
  },
  {
    "text": "container d today",
    "start": "838240",
    "end": "839839"
  },
  {
    "text": "if you have a use case that hasn't been",
    "start": "839839",
    "end": "841519"
  },
  {
    "text": "represented here we'd love to hear from",
    "start": "841519",
    "end": "843120"
  },
  {
    "text": "you",
    "start": "843120",
    "end": "844639"
  },
  {
    "text": "and hear how you're using container d",
    "start": "844639",
    "end": "847519"
  },
  {
    "text": "but at this point",
    "start": "847519",
    "end": "848320"
  },
  {
    "text": "be a great time to transition back to",
    "start": "848320",
    "end": "850079"
  },
  {
    "text": "derek to talk about not just using",
    "start": "850079",
    "end": "852399"
  },
  {
    "text": "container d but contributing to it",
    "start": "852399",
    "end": "854320"
  },
  {
    "text": "so pass it back to you derek thank you",
    "start": "854320",
    "end": "858399"
  },
  {
    "start": "857000",
    "end": "888000"
  },
  {
    "text": "all right let's discuss how to get",
    "start": "858399",
    "end": "859839"
  },
  {
    "text": "started contributing to continuity",
    "start": "859839",
    "end": "861600"
  },
  {
    "text": "most of you are already using container",
    "start": "861600",
    "end": "863040"
  },
  {
    "text": "d in some form we're still happy if your",
    "start": "863040",
    "end": "865120"
  },
  {
    "text": "only contribution to container d is",
    "start": "865120",
    "end": "866639"
  },
  {
    "text": "attending this session",
    "start": "866639",
    "end": "867920"
  },
  {
    "text": "and learning more about container d we",
    "start": "867920",
    "end": "870000"
  },
  {
    "text": "hope you never encounter issues while",
    "start": "870000",
    "end": "871440"
  },
  {
    "text": "using container d",
    "start": "871440",
    "end": "872320"
  },
  {
    "text": "but we all know that's inevitable with",
    "start": "872320",
    "end": "873600"
  },
  {
    "text": "any software please contribute by filing",
    "start": "873600",
    "end": "875839"
  },
  {
    "text": "those issues on github",
    "start": "875839",
    "end": "877519"
  },
  {
    "text": "we also recently opened up github",
    "start": "877519",
    "end": "879199"
  },
  {
    "text": "discussions for container d",
    "start": "879199",
    "end": "880800"
  },
  {
    "text": "this operates in place of a developer",
    "start": "880800",
    "end": "882480"
  },
  {
    "text": "mailing list and is a good place to ask",
    "start": "882480",
    "end": "884240"
  },
  {
    "text": "and answer questions",
    "start": "884240",
    "end": "885760"
  },
  {
    "text": "all maintainers are also available on",
    "start": "885760",
    "end": "887519"
  },
  {
    "text": "slack for guidance",
    "start": "887519",
    "end": "889440"
  },
  {
    "start": "888000",
    "end": "933000"
  },
  {
    "text": "even if you are just following issues it",
    "start": "889440",
    "end": "891440"
  },
  {
    "text": "is good to understand the architecture",
    "start": "891440",
    "end": "892959"
  },
  {
    "text": "of container d",
    "start": "892959",
    "end": "894480"
  },
  {
    "text": "it will not only help you diagnose",
    "start": "894480",
    "end": "896160"
  },
  {
    "text": "problems but also",
    "start": "896160",
    "end": "897600"
  },
  {
    "text": "help you understand what components may",
    "start": "897600",
    "end": "899440"
  },
  {
    "text": "be affected by your issue",
    "start": "899440",
    "end": "901279"
  },
  {
    "text": "if you want to contribute code knowing",
    "start": "901279",
    "end": "903279"
  },
  {
    "text": "the high level architecture will help",
    "start": "903279",
    "end": "904720"
  },
  {
    "text": "you understand where to contribute",
    "start": "904720",
    "end": "906560"
  },
  {
    "text": "it may also help you align your",
    "start": "906560",
    "end": "908079"
  },
  {
    "text": "particular interests with different",
    "start": "908079",
    "end": "909760"
  },
  {
    "text": "parts of continuity",
    "start": "909760",
    "end": "911360"
  },
  {
    "text": "if you are integrating with kubernetes",
    "start": "911360",
    "end": "913120"
  },
  {
    "text": "the cri plug-in is a good place to",
    "start": "913120",
    "end": "914720"
  },
  {
    "text": "contribute",
    "start": "914720",
    "end": "915760"
  },
  {
    "text": "if you like lower level system",
    "start": "915760",
    "end": "917120"
  },
  {
    "text": "development runtimes are a good place to",
    "start": "917120",
    "end": "919199"
  },
  {
    "text": "start",
    "start": "919199",
    "end": "920160"
  },
  {
    "text": "if you'd just like to hack around with",
    "start": "920160",
    "end": "921680"
  },
  {
    "text": "container technologies or have a new",
    "start": "921680",
    "end": "923519"
  },
  {
    "text": "feature you want to try out",
    "start": "923519",
    "end": "925040"
  },
  {
    "text": "the container d client provides good",
    "start": "925040",
    "end": "926639"
  },
  {
    "text": "flexibility for that",
    "start": "926639",
    "end": "928320"
  },
  {
    "text": "usually contributing to the client is",
    "start": "928320",
    "end": "929839"
  },
  {
    "text": "the best place to start that is where",
    "start": "929839",
    "end": "931680"
  },
  {
    "text": "you can get started pretty quickly",
    "start": "931680",
    "end": "933759"
  },
  {
    "start": "933000",
    "end": "982000"
  },
  {
    "text": "as a user of container d the client is",
    "start": "933759",
    "end": "935839"
  },
  {
    "text": "the first place you will interact with",
    "start": "935839",
    "end": "937839"
  },
  {
    "text": "if you are building a system on top of",
    "start": "937839",
    "end": "939360"
  },
  {
    "text": "container d the client is what you will",
    "start": "939360",
    "end": "941279"
  },
  {
    "text": "be working with",
    "start": "941279",
    "end": "942399"
  },
  {
    "text": "you can see in the diagram that some",
    "start": "942399",
    "end": "943680"
  },
  {
    "text": "core functionality that is often",
    "start": "943680",
    "end": "945199"
  },
  {
    "text": "associated with container runtimes",
    "start": "945199",
    "end": "946880"
  },
  {
    "text": "is implemented here in the client an",
    "start": "946880",
    "end": "949360"
  },
  {
    "text": "example of this is container management",
    "start": "949360",
    "end": "951120"
  },
  {
    "text": "which handles creation of the oci",
    "start": "951120",
    "end": "953279"
  },
  {
    "text": "specification",
    "start": "953279",
    "end": "954320"
  },
  {
    "text": "preparing the container snapshots as",
    "start": "954320",
    "end": "956320"
  },
  {
    "text": "well as starting individual container",
    "start": "956320",
    "end": "958079"
  },
  {
    "text": "tasks",
    "start": "958079",
    "end": "959199"
  },
  {
    "text": "image pulling is also completely",
    "start": "959199",
    "end": "960800"
  },
  {
    "text": "implemented inside the client",
    "start": "960800",
    "end": "962800"
  },
  {
    "text": "because of this approach clients are",
    "start": "962800",
    "end": "964240"
  },
  {
    "text": "mostly limited to using our go library",
    "start": "964240",
    "end": "966800"
  },
  {
    "text": "even though python java or another",
    "start": "966800",
    "end": "968560"
  },
  {
    "text": "language could talk to the container d",
    "start": "968560",
    "end": "970639"
  },
  {
    "text": "api using grpc basic functionality would",
    "start": "970639",
    "end": "973440"
  },
  {
    "text": "need to be re-implemented",
    "start": "973440",
    "end": "974880"
  },
  {
    "text": "to use the full runtime the cri",
    "start": "974880",
    "end": "977440"
  },
  {
    "text": "interface is probably",
    "start": "977440",
    "end": "978720"
  },
  {
    "text": "much easier to work with if you are not",
    "start": "978720",
    "end": "980399"
  },
  {
    "text": "implementing your project in go",
    "start": "980399",
    "end": "982959"
  },
  {
    "start": "982000",
    "end": "1031000"
  },
  {
    "text": "one of the first things you'll come",
    "start": "982959",
    "end": "984079"
  },
  {
    "text": "across in the client is the options",
    "start": "984079",
    "end": "985839"
  },
  {
    "text": "pattern",
    "start": "985839",
    "end": "986560"
  },
  {
    "text": "we realize not everyone is a fan of this",
    "start": "986560",
    "end": "988320"
  },
  {
    "text": "pattern and we always appreciate",
    "start": "988320",
    "end": "990240"
  },
  {
    "text": "feedback and pull requests to make the",
    "start": "990240",
    "end": "991759"
  },
  {
    "text": "client better",
    "start": "991759",
    "end": "992959"
  },
  {
    "text": "any software can get complex really",
    "start": "992959",
    "end": "994560"
  },
  {
    "text": "quickly sometimes adding simplicity in",
    "start": "994560",
    "end": "996560"
  },
  {
    "text": "one part can lead to complexity in",
    "start": "996560",
    "end": "998000"
  },
  {
    "text": "another part",
    "start": "998000",
    "end": "998880"
  },
  {
    "text": "with container d we chose to keep the",
    "start": "998880",
    "end": "1000639"
  },
  {
    "text": "core as simple as possible",
    "start": "1000639",
    "end": "1002320"
  },
  {
    "text": "by defining clean simple interfaces",
    "start": "1002320",
    "end": "1004399"
  },
  {
    "text": "inside the core",
    "start": "1004399",
    "end": "1005440"
  },
  {
    "text": "that meant the client had to have more",
    "start": "1005440",
    "end": "1006800"
  },
  {
    "text": "functionality and configurability",
    "start": "1006800",
    "end": "1009040"
  },
  {
    "text": "in the container decor there may just be",
    "start": "1009040",
    "end": "1010959"
  },
  {
    "text": "generic variatic options on a core type",
    "start": "1010959",
    "end": "1013440"
  },
  {
    "text": "but in the client you will see these",
    "start": "1013440",
    "end": "1014800"
  },
  {
    "text": "width options used on these types to",
    "start": "1014800",
    "end": "1017279"
  },
  {
    "text": "implement a feature",
    "start": "1017279",
    "end": "1018639"
  },
  {
    "text": "you will commonly see this used for",
    "start": "1018639",
    "end": "1020880"
  },
  {
    "text": "example for labeling or filtering",
    "start": "1020880",
    "end": "1023120"
  },
  {
    "text": "on the different types we were also",
    "start": "1023120",
    "end": "1025360"
  },
  {
    "text": "hoping this would allow clients to",
    "start": "1025360",
    "end": "1026720"
  },
  {
    "text": "include their own opinions rather than",
    "start": "1026720",
    "end": "1028160"
  },
  {
    "text": "be forced to work around opinions in the",
    "start": "1028160",
    "end": "1030000"
  },
  {
    "text": "container daemon",
    "start": "1030000",
    "end": "1032000"
  },
  {
    "start": "1031000",
    "end": "1107000"
  },
  {
    "text": "the core of container d contains the",
    "start": "1032000",
    "end": "1033760"
  },
  {
    "text": "components we consider most critical in",
    "start": "1033760",
    "end": "1035600"
  },
  {
    "text": "terms of stability",
    "start": "1035600",
    "end": "1037038"
  },
  {
    "text": "here we define the main data types and",
    "start": "1037039",
    "end": "1038880"
  },
  {
    "text": "interfaces used by container d",
    "start": "1038880",
    "end": "1041438"
  },
  {
    "text": "if you think container d overuses",
    "start": "1041439",
    "end": "1043120"
  },
  {
    "text": "interfaces this is",
    "start": "1043120",
    "end": "1044640"
  },
  {
    "text": "partially intentional we want data and",
    "start": "1044640",
    "end": "1047280"
  },
  {
    "text": "operations flowing through the core",
    "start": "1047280",
    "end": "1049360"
  },
  {
    "text": "and everything else wrapping those types",
    "start": "1049360",
    "end": "1051360"
  },
  {
    "text": "or using data that is tracked by the",
    "start": "1051360",
    "end": "1053280"
  },
  {
    "text": "core",
    "start": "1053280",
    "end": "1054240"
  },
  {
    "text": "the core has the main implementation of",
    "start": "1054240",
    "end": "1055919"
  },
  {
    "text": "these interfaces and these interfaces",
    "start": "1055919",
    "end": "1057840"
  },
  {
    "text": "are extended and used all the way to the",
    "start": "1057840",
    "end": "1059679"
  },
  {
    "text": "client",
    "start": "1059679",
    "end": "1060640"
  },
  {
    "text": "the design is such that all data flows",
    "start": "1060640",
    "end": "1062720"
  },
  {
    "text": "through the core",
    "start": "1062720",
    "end": "1063679"
  },
  {
    "text": "so that plugins and other components",
    "start": "1063679",
    "end": "1065600"
  },
  {
    "text": "don't need to store data",
    "start": "1065600",
    "end": "1067120"
  },
  {
    "text": "this is important because we have",
    "start": "1067120",
    "end": "1068320"
  },
  {
    "text": "implemented garbage collection inside",
    "start": "1068320",
    "end": "1070000"
  },
  {
    "text": "the core metadata store",
    "start": "1070000",
    "end": "1071679"
  },
  {
    "text": "so if data is being used somewhere else",
    "start": "1071679",
    "end": "1074160"
  },
  {
    "text": "it is really hard to track that data",
    "start": "1074160",
    "end": "1076000"
  },
  {
    "text": "and make sure that it is removed when it",
    "start": "1076000",
    "end": "1077679"
  },
  {
    "text": "is no longer needed this makes",
    "start": "1077679",
    "end": "1079360"
  },
  {
    "text": "continuity stable by keeping storage and",
    "start": "1079360",
    "end": "1081200"
  },
  {
    "text": "memory usage stable",
    "start": "1081200",
    "end": "1082880"
  },
  {
    "text": "it also helps avoid data inconsistency",
    "start": "1082880",
    "end": "1085120"
  },
  {
    "text": "and random crashes",
    "start": "1085120",
    "end": "1087919"
  },
  {
    "text": "we don't expect as many changes in the",
    "start": "1087919",
    "end": "1089600"
  },
  {
    "text": "core relative to other parts of",
    "start": "1089600",
    "end": "1090960"
  },
  {
    "text": "container d",
    "start": "1090960",
    "end": "1092000"
  },
  {
    "text": "features generally aren't implemented",
    "start": "1092000",
    "end": "1093600"
  },
  {
    "text": "inside the core however some features",
    "start": "1093600",
    "end": "1095679"
  },
  {
    "text": "may require some core changes",
    "start": "1095679",
    "end": "1098160"
  },
  {
    "text": "if you have a high level feature which",
    "start": "1098160",
    "end": "1099679"
  },
  {
    "text": "requires a bunch of changes to the core",
    "start": "1099679",
    "end": "1101280"
  },
  {
    "text": "to implement it",
    "start": "1101280",
    "end": "1102080"
  },
  {
    "text": "that is usually not the right design",
    "start": "1102080",
    "end": "1104160"
  },
  {
    "text": "however some features require small",
    "start": "1104160",
    "end": "1105840"
  },
  {
    "text": "changes inside the core",
    "start": "1105840",
    "end": "1107760"
  },
  {
    "start": "1107000",
    "end": "1150000"
  },
  {
    "text": "so for example we recently added a",
    "start": "1107760",
    "end": "1109600"
  },
  {
    "text": "feature to support remote snapshotters",
    "start": "1109600",
    "end": "1111840"
  },
  {
    "text": "the high level feature of remote",
    "start": "1111840",
    "end": "1113039"
  },
  {
    "text": "snapshotters is not something that the",
    "start": "1113039",
    "end": "1114960"
  },
  {
    "text": "core knows anything about",
    "start": "1114960",
    "end": "1116640"
  },
  {
    "text": "but one functionality we did add to the",
    "start": "1116640",
    "end": "1118720"
  },
  {
    "text": "core was the ability for the",
    "start": "1118720",
    "end": "1119840"
  },
  {
    "text": "snapshotters themselves to report that",
    "start": "1119840",
    "end": "1121600"
  },
  {
    "text": "they already know about a snapshot",
    "start": "1121600",
    "end": "1123440"
  },
  {
    "text": "as it is flowing through the core so",
    "start": "1123440",
    "end": "1125679"
  },
  {
    "text": "when you go to create a new snapshot",
    "start": "1125679",
    "end": "1127760"
  },
  {
    "text": "you can pass information that says this",
    "start": "1127760",
    "end": "1129840"
  },
  {
    "text": "is the target snapshot that i'm trying",
    "start": "1129840",
    "end": "1131280"
  },
  {
    "text": "to create",
    "start": "1131280",
    "end": "1131919"
  },
  {
    "text": "and it will pass that to the backend the",
    "start": "1131919",
    "end": "1134080"
  },
  {
    "text": "backend now can actually communicate",
    "start": "1134080",
    "end": "1135520"
  },
  {
    "text": "back up to the core",
    "start": "1135520",
    "end": "1136640"
  },
  {
    "text": "to let it know that it already has that",
    "start": "1136640",
    "end": "1138320"
  },
  {
    "text": "snapshot that allows the client to know",
    "start": "1138320",
    "end": "1140720"
  },
  {
    "text": "the snapshot is already available as a",
    "start": "1140720",
    "end": "1142559"
  },
  {
    "text": "remote snapshot",
    "start": "1142559",
    "end": "1143679"
  },
  {
    "text": "when it sees the core report the",
    "start": "1143679",
    "end": "1145200"
  },
  {
    "text": "snapshot as already existing",
    "start": "1145200",
    "end": "1147280"
  },
  {
    "text": "meanwhile the core has no knowledge of",
    "start": "1147280",
    "end": "1149120"
  },
  {
    "text": "what a remote snapshot is",
    "start": "1149120",
    "end": "1151280"
  },
  {
    "start": "1150000",
    "end": "1165000"
  },
  {
    "text": "it is really important for us to keep",
    "start": "1151280",
    "end": "1152880"
  },
  {
    "text": "the core of container d unopinionated to",
    "start": "1152880",
    "end": "1154799"
  },
  {
    "text": "make sure we don't get feature creep",
    "start": "1154799",
    "end": "1156400"
  },
  {
    "text": "showing up in the container d",
    "start": "1156400",
    "end": "1157600"
  },
  {
    "text": "daemon we also don't want opinions to",
    "start": "1157600",
    "end": "1159760"
  },
  {
    "text": "show up in the daemon so that later on",
    "start": "1159760",
    "end": "1161679"
  },
  {
    "text": "new features or requirements are limited",
    "start": "1161679",
    "end": "1163360"
  },
  {
    "text": "by previous opinions added to the core",
    "start": "1163360",
    "end": "1165919"
  },
  {
    "start": "1165000",
    "end": "1229000"
  },
  {
    "text": "for the underlying run time there is a",
    "start": "1165919",
    "end": "1167520"
  },
  {
    "text": "component in the container de-damon",
    "start": "1167520",
    "end": "1169280"
  },
  {
    "text": "and an external shim for managing",
    "start": "1169280",
    "end": "1170880"
  },
  {
    "text": "container processes",
    "start": "1170880",
    "end": "1172720"
  },
  {
    "text": "the runtime in the daemon is responsible",
    "start": "1172720",
    "end": "1174480"
  },
  {
    "text": "for starting up new runtime shims",
    "start": "1174480",
    "end": "1176880"
  },
  {
    "text": "it will pass through the oci",
    "start": "1176880",
    "end": "1178240"
  },
  {
    "text": "specification and all the commands to",
    "start": "1178240",
    "end": "1180480"
  },
  {
    "text": "the shim",
    "start": "1180480",
    "end": "1181360"
  },
  {
    "text": "the runtime shims are the boxes on the",
    "start": "1181360",
    "end": "1183280"
  },
  {
    "text": "right side these shims are what actually",
    "start": "1183280",
    "end": "1185280"
  },
  {
    "text": "own the container processes",
    "start": "1185280",
    "end": "1187039"
  },
  {
    "text": "the containers are parented directly to",
    "start": "1187039",
    "end": "1188799"
  },
  {
    "text": "the shim the container d daemon will",
    "start": "1188799",
    "end": "1190880"
  },
  {
    "text": "talk to the shims using the lightweight",
    "start": "1190880",
    "end": "1192240"
  },
  {
    "text": "grpc protocol called ttrpc",
    "start": "1192240",
    "end": "1194960"
  },
  {
    "text": "we use this lightweight rpc to reduce",
    "start": "1194960",
    "end": "1197280"
  },
  {
    "text": "the memory footprint of the shim",
    "start": "1197280",
    "end": "1199200"
  },
  {
    "text": "if container d gets restarted it will",
    "start": "1199200",
    "end": "1200960"
  },
  {
    "text": "reconnect to the shims in order to send",
    "start": "1200960",
    "end": "1202640"
  },
  {
    "text": "commands to the container",
    "start": "1202640",
    "end": "1204799"
  },
  {
    "text": "there are many different runtime shim",
    "start": "1204799",
    "end": "1206320"
  },
  {
    "text": "implementations the run c implementation",
    "start": "1206320",
    "end": "1208880"
  },
  {
    "text": "is the most common",
    "start": "1208880",
    "end": "1210559"
  },
  {
    "text": "there is run hcs for running on windows",
    "start": "1210559",
    "end": "1213440"
  },
  {
    "text": "there's also a few sandbox shims",
    "start": "1213440",
    "end": "1215200"
  },
  {
    "text": "such as for firecracker or kata",
    "start": "1215200",
    "end": "1217120"
  },
  {
    "text": "containers",
    "start": "1217120",
    "end": "1218480"
  },
  {
    "text": "since the shims only implement this rpc",
    "start": "1218480",
    "end": "1220320"
  },
  {
    "text": "interface anyone can implement their own",
    "start": "1220320",
    "end": "1222640"
  },
  {
    "text": "shim to be used by container d pretty",
    "start": "1222640",
    "end": "1224320"
  },
  {
    "text": "easily",
    "start": "1224320",
    "end": "1225280"
  },
  {
    "text": "container d just needs to know about the",
    "start": "1225280",
    "end": "1226720"
  },
  {
    "text": "shim binary in order to use it to run",
    "start": "1226720",
    "end": "1228720"
  },
  {
    "text": "containers",
    "start": "1228720",
    "end": "1230080"
  },
  {
    "start": "1229000",
    "end": "1256000"
  },
  {
    "text": "plugins can call into the core of",
    "start": "1230080",
    "end": "1231440"
  },
  {
    "text": "container d and the core can call out to",
    "start": "1231440",
    "end": "1233280"
  },
  {
    "text": "different back-ends",
    "start": "1233280",
    "end": "1234320"
  },
  {
    "text": "the back-ends themselves are also",
    "start": "1234320",
    "end": "1236000"
  },
  {
    "text": "pluggable for example",
    "start": "1236000",
    "end": "1237760"
  },
  {
    "text": "all snapshotters are implemented as",
    "start": "1237760",
    "end": "1239520"
  },
  {
    "text": "plug-ins each plug-in can define their",
    "start": "1239520",
    "end": "1241679"
  },
  {
    "text": "own configuration which gets included",
    "start": "1241679",
    "end": "1243440"
  },
  {
    "text": "with containerd's global configuration",
    "start": "1243440",
    "end": "1245200"
  },
  {
    "text": "object",
    "start": "1245200",
    "end": "1246240"
  },
  {
    "text": "if you have a grpc service it can be",
    "start": "1246240",
    "end": "1248320"
  },
  {
    "text": "added as a plugin",
    "start": "1248320",
    "end": "1249280"
  },
  {
    "text": "and call into the core services directly",
    "start": "1249280",
    "end": "1251840"
  },
  {
    "text": "cri",
    "start": "1251840",
    "end": "1252400"
  },
  {
    "text": "is shown in the diagram as a plugin it",
    "start": "1252400",
    "end": "1254480"
  },
  {
    "text": "is just registered as a grpc service",
    "start": "1254480",
    "end": "1256400"
  },
  {
    "start": "1256000",
    "end": "1292000"
  },
  {
    "text": "plugin",
    "start": "1256400",
    "end": "1257280"
  },
  {
    "text": "even though cri is very important and",
    "start": "1257280",
    "end": "1259120"
  },
  {
    "text": "big enough to have its own core",
    "start": "1259120",
    "end": "1261039"
  },
  {
    "text": "we don't include it as part of container",
    "start": "1261039",
    "end": "1262640"
  },
  {
    "text": "diese core this is because cri consumes",
    "start": "1262640",
    "end": "1265039"
  },
  {
    "text": "the core services but today it is",
    "start": "1265039",
    "end": "1266880"
  },
  {
    "text": "implemented completely outside the core",
    "start": "1266880",
    "end": "1268640"
  },
  {
    "text": "code base",
    "start": "1268640",
    "end": "1269760"
  },
  {
    "text": "in continuity 1.5 we are looking into",
    "start": "1269760",
    "end": "1272240"
  },
  {
    "text": "bringing the cri code base into the main",
    "start": "1272240",
    "end": "1274159"
  },
  {
    "text": "container d repository this will allow",
    "start": "1274159",
    "end": "1276400"
  },
  {
    "text": "us to merge some of the core components",
    "start": "1276400",
    "end": "1278080"
  },
  {
    "text": "of cri",
    "start": "1278080",
    "end": "1278960"
  },
  {
    "text": "such as pod sandboxes with the core",
    "start": "1278960",
    "end": "1281280"
  },
  {
    "text": "components of container d",
    "start": "1281280",
    "end": "1282960"
  },
  {
    "text": "this may lead to new types and",
    "start": "1282960",
    "end": "1284400"
  },
  {
    "text": "interfaces inside the core related to",
    "start": "1284400",
    "end": "1286240"
  },
  {
    "text": "sandboxes",
    "start": "1286240",
    "end": "1287520"
  },
  {
    "text": "in fact there is already a proposal to",
    "start": "1287520",
    "end": "1289360"
  },
  {
    "text": "add a sandbox api to container d and 1.5",
    "start": "1289360",
    "end": "1292799"
  },
  {
    "text": "including your own snapshotter plugin is",
    "start": "1292799",
    "end": "1294400"
  },
  {
    "text": "pretty easy you can compile in the",
    "start": "1294400",
    "end": "1296559"
  },
  {
    "text": "snapshotter and register it as a plugin",
    "start": "1296559",
    "end": "1298640"
  },
  {
    "text": "just like every other built-in",
    "start": "1298640",
    "end": "1299840"
  },
  {
    "text": "snapshotter or you can implement your",
    "start": "1299840",
    "end": "1301919"
  },
  {
    "text": "snapshotter as a proxy plugin",
    "start": "1301919",
    "end": "1304080"
  },
  {
    "text": "a proxy plugin allows a snapshotter to",
    "start": "1304080",
    "end": "1306159"
  },
  {
    "text": "just implement container d's snapshot or",
    "start": "1306159",
    "end": "1308159"
  },
  {
    "text": "grpc",
    "start": "1308159",
    "end": "1309120"
  },
  {
    "text": "api and configure container d to talk to",
    "start": "1309120",
    "end": "1311679"
  },
  {
    "text": "your plugin over a unix socket",
    "start": "1311679",
    "end": "1313760"
  },
  {
    "text": "the proxy plugin approach is great for",
    "start": "1313760",
    "end": "1315520"
  },
  {
    "text": "experimenting with plugins",
    "start": "1315520",
    "end": "1316880"
  },
  {
    "text": "without having to compile container d or",
    "start": "1316880",
    "end": "1318960"
  },
  {
    "text": "ship your own binaries to include your",
    "start": "1318960",
    "end": "1320640"
  },
  {
    "text": "plugin",
    "start": "1320640",
    "end": "1322240"
  },
  {
    "start": "1321000",
    "end": "1382000"
  },
  {
    "text": "in the client there are many options for",
    "start": "1322240",
    "end": "1323840"
  },
  {
    "text": "customization by default the container d",
    "start": "1323840",
    "end": "1326400"
  },
  {
    "text": "client will use the proxy services",
    "start": "1326400",
    "end": "1328480"
  },
  {
    "text": "which communicate with the continuity",
    "start": "1328480",
    "end": "1329919"
  },
  {
    "text": "daemon through the grpc api",
    "start": "1329919",
    "end": "1332480"
  },
  {
    "text": "however a client can be instantiated",
    "start": "1332480",
    "end": "1334640"
  },
  {
    "text": "with any custom implementation",
    "start": "1334640",
    "end": "1336480"
  },
  {
    "text": "of a service even allowing clients to",
    "start": "1336480",
    "end": "1338559"
  },
  {
    "text": "operate completely without a daemon",
    "start": "1338559",
    "end": "1340960"
  },
  {
    "text": "you can also add your own resolvers",
    "start": "1340960",
    "end": "1342880"
  },
  {
    "text": "resolvers are what are used to push and",
    "start": "1342880",
    "end": "1344559"
  },
  {
    "text": "pull",
    "start": "1344559",
    "end": "1344880"
  },
  {
    "text": "images to container d the default",
    "start": "1344880",
    "end": "1346960"
  },
  {
    "text": "implementation communicates with a",
    "start": "1346960",
    "end": "1348320"
  },
  {
    "text": "docker registry using the standard oci",
    "start": "1348320",
    "end": "1350480"
  },
  {
    "text": "distribution api",
    "start": "1350480",
    "end": "1351679"
  },
  {
    "text": "however you can implement your own very",
    "start": "1351679",
    "end": "1353200"
  },
  {
    "text": "easily if you have a different or faster",
    "start": "1353200",
    "end": "1354960"
  },
  {
    "text": "way to distribute images",
    "start": "1354960",
    "end": "1356960"
  },
  {
    "text": "okay going back to the whole continuity",
    "start": "1356960",
    "end": "1358799"
  },
  {
    "text": "diagram you can see how operations flow",
    "start": "1358799",
    "end": "1360880"
  },
  {
    "text": "from the client on the left",
    "start": "1360880",
    "end": "1362080"
  },
  {
    "text": "all the way to the runtime and back ends",
    "start": "1362080",
    "end": "1363679"
  },
  {
    "text": "on the right the components on the left",
    "start": "1363679",
    "end": "1365840"
  },
  {
    "text": "tend to be more stateless",
    "start": "1365840",
    "end": "1367280"
  },
  {
    "text": "the components on the right have more",
    "start": "1367280",
    "end": "1368960"
  },
  {
    "text": "state even though our garbage collector",
    "start": "1368960",
    "end": "1370720"
  },
  {
    "text": "is in the middle it tracks resources",
    "start": "1370720",
    "end": "1372159"
  },
  {
    "text": "used by all the",
    "start": "1372159",
    "end": "1373039"
  },
  {
    "text": "ends but it operates completely",
    "start": "1373039",
    "end": "1374720"
  },
  {
    "text": "invisible to the client",
    "start": "1374720",
    "end": "1376159"
  },
  {
    "text": "our end goal is to track any resource",
    "start": "1376159",
    "end": "1377919"
  },
  {
    "text": "which may be used by container d",
    "start": "1377919",
    "end": "1379360"
  },
  {
    "text": "to guarantee the long term stability of",
    "start": "1379360",
    "end": "1380960"
  },
  {
    "text": "the runtime continuity 1.4 has recently",
    "start": "1380960",
    "end": "1383919"
  },
  {
    "start": "1382000",
    "end": "1458000"
  },
  {
    "text": "been released and you can start using it",
    "start": "1383919",
    "end": "1385440"
  },
  {
    "text": "today",
    "start": "1385440",
    "end": "1386080"
  },
  {
    "text": "it includes support for c-groups v2",
    "start": "1386080",
    "end": "1388000"
  },
  {
    "text": "improved se linux support",
    "start": "1388000",
    "end": "1389679"
  },
  {
    "text": "support for remote snapshotters and",
    "start": "1389679",
    "end": "1391600"
  },
  {
    "text": "support for cri on windows",
    "start": "1391600",
    "end": "1393679"
  },
  {
    "text": "if you want to hear more about remote",
    "start": "1393679",
    "end": "1394880"
  },
  {
    "text": "snapshotters attend the deep dive",
    "start": "1394880",
    "end": "1396720"
  },
  {
    "text": "session for container d",
    "start": "1396720",
    "end": "1398400"
  },
  {
    "text": "the container d 1.5 roadmap is currently",
    "start": "1398400",
    "end": "1400720"
  },
  {
    "text": "being decided on as i mentioned before",
    "start": "1400720",
    "end": "1403120"
  },
  {
    "text": "a large item will be merging the cri",
    "start": "1403120",
    "end": "1404960"
  },
  {
    "text": "code base with the main container",
    "start": "1404960",
    "end": "1406320"
  },
  {
    "text": "decodebase",
    "start": "1406320",
    "end": "1407440"
  },
  {
    "text": "we also have ongoing work to introduce a",
    "start": "1407440",
    "end": "1409200"
  },
  {
    "text": "new sandbox api",
    "start": "1409200",
    "end": "1410480"
  },
  {
    "text": "and core sandbox interfaces this will",
    "start": "1410480",
    "end": "1412799"
  },
  {
    "text": "not only allow for better integration",
    "start": "1412799",
    "end": "1414640"
  },
  {
    "text": "with",
    "start": "1414640",
    "end": "1415120"
  },
  {
    "text": "virtual machine sandboxes but also allow",
    "start": "1415120",
    "end": "1417360"
  },
  {
    "text": "us to clean up the way pods are managed",
    "start": "1417360",
    "end": "1418880"
  },
  {
    "text": "by container d",
    "start": "1418880",
    "end": "1420240"
  },
  {
    "text": "there's also work going on to improve",
    "start": "1420240",
    "end": "1421679"
  },
  {
    "text": "the way system resources are managed by",
    "start": "1421679",
    "end": "1423600"
  },
  {
    "text": "the runtime",
    "start": "1423600",
    "end": "1424640"
  },
  {
    "text": "this relates to improving interactions",
    "start": "1424640",
    "end": "1426320"
  },
  {
    "text": "with resources and tying them into the",
    "start": "1426320",
    "end": "1428080"
  },
  {
    "text": "container lifecycle more cleanly",
    "start": "1428080",
    "end": "1430240"
  },
  {
    "text": "feel free to join the discussions today",
    "start": "1430240",
    "end": "1432080"
  },
  {
    "text": "for container d 1.6",
    "start": "1432080",
    "end": "1434000"
  },
  {
    "text": "there are discussions about a new node",
    "start": "1434000",
    "end": "1436159"
  },
  {
    "text": "resource interface which operates in the",
    "start": "1436159",
    "end": "1438080"
  },
  {
    "text": "container lifecycle similar to cni",
    "start": "1438080",
    "end": "1440240"
  },
  {
    "text": "there's also discussions about the",
    "start": "1440240",
    "end": "1441440"
  },
  {
    "text": "possibility of introducing a new version",
    "start": "1441440",
    "end": "1443520"
  },
  {
    "text": "of the cri api so if this is something",
    "start": "1443520",
    "end": "1445679"
  },
  {
    "text": "that interests you",
    "start": "1445679",
    "end": "1446720"
  },
  {
    "text": "come join the conversation all right",
    "start": "1446720",
    "end": "1448720"
  },
  {
    "text": "that's all we have for you today",
    "start": "1448720",
    "end": "1450080"
  },
  {
    "text": "thank you for joining i also like to",
    "start": "1450080",
    "end": "1451520"
  },
  {
    "text": "give a shout out to sue mcgowan for",
    "start": "1451520",
    "end": "1452880"
  },
  {
    "text": "helping film and edit this session",
    "start": "1452880",
    "end": "1454880"
  },
  {
    "text": "bye bye now",
    "start": "1454880",
    "end": "1459840"
  }
]