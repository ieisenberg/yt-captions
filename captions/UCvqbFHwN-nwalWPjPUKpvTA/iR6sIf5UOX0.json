[
  {
    "text": "uh hello everyone thanks for joining for uh Sig Windows maintainer talk uh my name is cloud bellu uh I am a",
    "start": "399",
    "end": "8240"
  },
  {
    "text": "senior Cloud engineer at cloudbased Solutions and I am one of the tech leads for Sig windows and we are going to do a",
    "start": "8240",
    "end": "15240"
  },
  {
    "text": "very short retrospective of uh what happened uh from the last cycle and some",
    "start": "15240",
    "end": "21880"
  },
  {
    "text": "additional guides on how to build Windows images uh different tips and tricks and some very",
    "start": "21880",
    "end": "30519"
  },
  {
    "text": "uh tricks that you could use uh this came up because um there are quite a few uh questions regarding how to build the",
    "start": "30519",
    "end": "37120"
  },
  {
    "text": "best Windows images you can possibly do so that's why uh I'm here we've been doing this for a couple of years so we",
    "start": "37120",
    "end": "44079"
  },
  {
    "text": "have a bit of knowledge and experience regarding this and in the end U I'm going to try to recruit you recruit you",
    "start": "44079",
    "end": "50480"
  },
  {
    "text": "to join Sig windows we are a fun loving community so you're always uh welcome to",
    "start": "50480",
    "end": "55920"
  },
  {
    "text": "join us so minor updates uh um we welcome",
    "start": "55920",
    "end": "61320"
  },
  {
    "text": "amim naan from broadcom as one of our new tech leads for S Windows he worked a",
    "start": "61320",
    "end": "66920"
  },
  {
    "text": "lot on Windows operation operational Readiness which is practical standard of",
    "start": "66920",
    "end": "72560"
  },
  {
    "text": "um tests and things which should pass and work properly uh in any Windows",
    "start": "72560",
    "end": "78840"
  },
  {
    "text": "environment to certify that indeed it's working as intended and properly and he",
    "start": "78840",
    "end": "84600"
  },
  {
    "text": "also worked for uh Windows death tools which are very useful to getting new contributors into kubernetes space and",
    "start": "84600",
    "end": "90840"
  },
  {
    "text": "especially for Windows and we thank Jay Vias for all his contrib contributions",
    "start": "90840",
    "end": "96399"
  },
  {
    "text": "he has been a great help for us and he has been a very pleasant um Presence at",
    "start": "96399",
    "end": "103759"
  },
  {
    "text": "any conference and meetings and so on one other important thing to note is",
    "start": "103759",
    "end": "108880"
  },
  {
    "text": "that the no log query feature will be entering beta in 130 we have a couple of",
    "start": "108880",
    "end": "114600"
  },
  {
    "text": "other updates uh we've been improving the windows operation Readiness and windows death tools",
    "start": "114600",
    "end": "120439"
  },
  {
    "text": "and we have a few other things in the pipeline so they're not yet ready to be",
    "start": "120439",
    "end": "125520"
  },
  {
    "text": "announced though but let's go to the main thing for today which is the",
    "start": "125520",
    "end": "131039"
  },
  {
    "text": "windows image building Deep dive so a little bit of context um what we're",
    "start": "131039",
    "end": "137400"
  },
  {
    "text": "going to see here we basically added a lot of um window support for a lot of KU",
    "start": "137400",
    "end": "144280"
  },
  {
    "text": "images the pause image the C proxy image the CN CSI and so on",
    "start": "144280",
    "end": "150599"
  },
  {
    "text": "so in most scenarios we basically had to integrate those images into whatever uh",
    "start": "150599",
    "end": "157920"
  },
  {
    "text": "build processes kubernetes already had so there were quite a few restrictions on how we were going to build the images",
    "start": "157920",
    "end": "165400"
  },
  {
    "text": "but we're going to go from scratch from zero from the most basic images that you could possibly build to more complex",
    "start": "165400",
    "end": "170800"
  },
  {
    "text": "which are currently employed in kubernetes image building processes and release",
    "start": "170800",
    "end": "177599"
  },
  {
    "text": "processes Okay so one important thing to note from start is that there are two",
    "start": "177599",
    "end": "183319"
  },
  {
    "text": "types of images for Windows U and they are going to be used very differently and be built very differently first of",
    "start": "183319",
    "end": "190720"
  },
  {
    "text": "all we have host process container images and regular workload container images your usual images right the idea",
    "start": "190720",
    "end": "198360"
  },
  {
    "text": "for host plus containers is that they are special type of containers which are",
    "start": "198360",
    "end": "203440"
  },
  {
    "text": "basically run on the host itself and has access to all the networking devices",
    "start": "203440",
    "end": "208840"
  },
  {
    "text": "storage devices the PCI devices so on um as any other type of service on the host",
    "start": "208840",
    "end": "214720"
  },
  {
    "text": "itself would have so that's very useful for um things like deploying your cnis",
    "start": "214720",
    "end": "221319"
  },
  {
    "text": "your CS csis or different device plugins and so on and also makes it a lot easier",
    "start": "221319",
    "end": "226400"
  },
  {
    "text": "to upgrade because you simply just replace the demon sets for C proxy for example to a new version and you're done",
    "start": "226400",
    "end": "233439"
  },
  {
    "text": "but since previously you basically had to do that manually over every single node so this also",
    "start": "233439",
    "end": "240599"
  },
  {
    "text": "added a lot of quality of life when it comes to how you manage your windows nodes and of course you can also do",
    "start": "240599",
    "end": "246640"
  },
  {
    "text": "quite a lot of administrative tasks like um executing into the windows noes",
    "start": "246640",
    "end": "251760"
  },
  {
    "text": "themselves applying security patches collecting logs and so on so forth so",
    "start": "251760",
    "end": "257239"
  },
  {
    "text": "they're quite useful you can think of them as quite privileged containers but we're not",
    "start": "257239",
    "end": "263160"
  },
  {
    "text": "going to talk too much about them uh we have a lot of uh documentation written on the website for this uh especially",
    "start": "263160",
    "end": "269360"
  },
  {
    "text": "how you you run them how to use them how to um add them to your own workloads or",
    "start": "269360",
    "end": "275600"
  },
  {
    "text": "even better you can watch Mar retes and James uh Stan's talk at the previous CPC",
    "start": "275600",
    "end": "281800"
  },
  {
    "text": "for this exact topic it's a very nice cool very nice topic so I advise you to",
    "start": "281800",
    "end": "287560"
  },
  {
    "text": "do so but we're here to find out how to build those images well basically you can use as a",
    "start": "287560",
    "end": "294320"
  },
  {
    "text": "base image any other windows image there's no issue in that but there is a",
    "start": "294320",
    "end": "300120"
  },
  {
    "text": "special image which is only 7 or 8 kiloby in size which is a lot smaller than your typical windows image so you",
    "start": "300120",
    "end": "306759"
  },
  {
    "text": "know why not use it but you're going to have to use Docker buildex to build those images but the build process",
    "start": "306759",
    "end": "313639"
  },
  {
    "text": "itself is very straightforward you this is basically a sample taken from the Q",
    "start": "313639",
    "end": "319039"
  },
  {
    "text": "proxy um hos R container it's just your regular from instruction and you just",
    "start": "319039",
    "end": "325800"
  },
  {
    "text": "add a few bits and pieces there so that's not uh very very complicated as",
    "start": "325800",
    "end": "330960"
  },
  {
    "text": "you can see and you just push it and you can deploy it on any Windows machine and",
    "start": "330960",
    "end": "336039"
  },
  {
    "text": "it will run as intended there are a couple of things which you're going to have to take into account when deploying",
    "start": "336039",
    "end": "342319"
  },
  {
    "text": "them but you can simply check the documentation how to properly uh Pro",
    "start": "342319",
    "end": "348319"
  },
  {
    "text": "um properly deploy Hostess containers now for the regular container",
    "start": "348319",
    "end": "354639"
  },
  {
    "text": "images um in the start when we started adding support Windows images we started",
    "start": "354639",
    "end": "360199"
  },
  {
    "text": "building our own images and pushing them to our Registries before we could actually promote them to the regular",
    "start": "360199",
    "end": "366360"
  },
  {
    "text": "kubernetes Registries we started with some windows build nodes um as an",
    "start": "366360",
    "end": "371720"
  },
  {
    "text": "example here we have Windows Server 2022 and the latest Docker version or among",
    "start": "371720",
    "end": "376919"
  },
  {
    "text": "the latest ones and we used this node to build Windows images so far so good it",
    "start": "376919",
    "end": "384680"
  },
  {
    "text": "doesn't look amazing from any point of view but things are going to be getting compl at very soon so this simply works",
    "start": "384680",
    "end": "393280"
  },
  {
    "text": "and we can also build different uh images for different OS versions We Built here for 2022 and we built here",
    "start": "393280",
    "end": "400800"
  },
  {
    "text": "for 2019 because you might have users which have different Windows nodes so",
    "start": "400800",
    "end": "407560"
  },
  {
    "text": "until here everything went as expected but things start to go wrong when you",
    "start": "407560",
    "end": "414319"
  },
  {
    "text": "try to do things which are bit more complicated uh even something as trying to run something so what's going to",
    "start": "414319",
    "end": "422120"
  },
  {
    "text": "happen if we try to build a Windows image for 2019 on a",
    "start": "422120",
    "end": "427400"
  },
  {
    "text": "2022 build node we're going to see that it cannot run the command it says that",
    "start": "427400",
    "end": "434440"
  },
  {
    "text": "um the container operating system does not match the host operating system that",
    "start": "434440",
    "end": "439599"
  },
  {
    "text": "was an issue that basically meant that we could only uh build images for 2022",
    "start": "439599",
    "end": "445160"
  },
  {
    "text": "on 2022 nodes and 2019 on 2019 nodes and",
    "start": "445160",
    "end": "450840"
  },
  {
    "text": "at one point we had four different OS versions which were supported simultaneously so it became quite a",
    "start": "450840",
    "end": "457879"
  },
  {
    "text": "hassle to manage every single one of them there must be a better way to do to",
    "start": "457879",
    "end": "463120"
  },
  {
    "text": "do it of course you could try to use hyperv isol containers but depending on",
    "start": "463120",
    "end": "469720"
  },
  {
    "text": "the public Cloud that you're using that might actually be a larger flavor and extra money um uh that you would pay for",
    "start": "469720",
    "end": "477759"
  },
  {
    "text": "every single instance alternatively there is a better solution for this and that would be multi-stage",
    "start": "477759",
    "end": "483879"
  },
  {
    "text": "Docker files so this basically double in size",
    "start": "483879",
    "end": "490520"
  },
  {
    "text": "uh we see that's a multi-stage because there are two from Instructions over there so two halves now uh the",
    "start": "490520",
    "end": "498120"
  },
  {
    "text": "interesting part about this is the fact that the first half you can consider it like a workbench you spawn an image which",
    "start": "498120",
    "end": "505800"
  },
  {
    "text": "matches the build nodes o version and you do all your things preparing the",
    "start": "505800",
    "end": "511120"
  },
  {
    "text": "binaries and whatever you need in that side and then in the later stage you just copy your built product you build",
    "start": "511120",
    "end": "518279"
  },
  {
    "text": "binary into your final image and you publish that one it's basically working",
    "start": "518279",
    "end": "524360"
  },
  {
    "text": "on workbench taking your build uh application putting in a box adding labels all that fancy stuff and you push",
    "start": "524360",
    "end": "531720"
  },
  {
    "text": "the package then you leave the workbench behind pretty much how this",
    "start": "531720",
    "end": "537160"
  },
  {
    "text": "works and we can see that we have we no longer have any issues building 2019",
    "start": "537160",
    "end": "543760"
  },
  {
    "text": "images on 2022 build nodes so that was nice but uh we still",
    "start": "543760",
    "end": "551560"
  },
  {
    "text": "had to use Windows nodes to incorporate them into the kubernetes image building",
    "start": "551560",
    "end": "557720"
  },
  {
    "text": "processes which was a bit more difficult so we basically had to go back to the drawing board and try to find a solution",
    "start": "557720",
    "end": "564399"
  },
  {
    "text": "to build Windows images from a Linux build node we were told it was",
    "start": "564399",
    "end": "571040"
  },
  {
    "text": "impossible uh we said bet challenge accepted and we tried to find the",
    "start": "571040",
    "end": "577040"
  },
  {
    "text": "solution for that we already kind of have an idea on how to do those an idea would be to use multistage Docker files",
    "start": "577040",
    "end": "584560"
  },
  {
    "text": "once again but for this scenario we're going to have to use Docker buildex or build",
    "start": "584560",
    "end": "590160"
  },
  {
    "text": "kit so you're going to have to also bootstrap it but there are a couple of things",
    "start": "590160",
    "end": "596480"
  },
  {
    "text": "which are special when you try to build Windows images on nodes first of all do",
    "start": "596480",
    "end": "602120"
  },
  {
    "text": "keep in mind to use the latest versions otherwise we're going to face quite a lot of hurdles which we hit uh trying to",
    "start": "602120",
    "end": "608120"
  },
  {
    "text": "build those images first of all which was very interesting to find out was the",
    "start": "608120",
    "end": "613320"
  },
  {
    "text": "fact that when you were using Docker buildex uh on Linux it would overwrite",
    "start": "613320",
    "end": "618440"
  },
  {
    "text": "the windows images path environment variable to a Linux one so of course",
    "start": "618440",
    "end": "623720"
  },
  {
    "text": "nothing works afterwards so that was fun and um of course there were a couple of other issues you couldn't really change",
    "start": "623720",
    "end": "630480"
  },
  {
    "text": "the user or the work work deer in the windows image that has been fixed and",
    "start": "630480",
    "end": "637000"
  },
  {
    "text": "also the OS version was not being included into the image that you were building which is extremely important",
    "start": "637000",
    "end": "642959"
  },
  {
    "text": "because that's how the container run times know which image to pull from a manifest list is going to match the",
    "start": "642959",
    "end": "650360"
  },
  {
    "text": "platform the the CPU architecture and the OS version but now it is included by",
    "start": "650360",
    "end": "657480"
  },
  {
    "text": "default so even better you won't have as many issues uh trying to build Windows",
    "start": "657480",
    "end": "663440"
  },
  {
    "text": "images next um we there's an important thing to note you cannot store Windows",
    "start": "663440",
    "end": "670040"
  },
  {
    "text": "images into the Linux image database some kubernetes image building processes",
    "start": "670040",
    "end": "677279"
  },
  {
    "text": "were doing that uh that's basically impossible you effectively lose the image once the docker build Dex command",
    "start": "677279",
    "end": "684200"
  },
  {
    "text": "finishes so that was not useful so you can solve that by simply pushing",
    "start": "684200",
    "end": "690079"
  },
  {
    "text": "directly to the registry or saving it into a tar file or an oci file and which",
    "start": "690079",
    "end": "695639"
  },
  {
    "text": "you can later on upload manually if needed but there was another fun Discovery to to see you had to push it",
    "start": "695639",
    "end": "702360"
  },
  {
    "text": "to actually not lose the image and um another thing which",
    "start": "702360",
    "end": "707440"
  },
  {
    "text": "occurred more recently recently Docker buildex would generate a manifest list by default",
    "start": "707440",
    "end": "714160"
  },
  {
    "text": "which can be problematic if you Tred to build multiple images and then finally create a manifest list with all your",
    "start": "714160",
    "end": "719800"
  },
  {
    "text": "built images uh this argument will prevent that issue so another a good thing to",
    "start": "719800",
    "end": "725959"
  },
  {
    "text": "note and this is a weird thing it still happens to this to this day Sim rings do",
    "start": "725959",
    "end": "733199"
  },
  {
    "text": "not work in the way you expect them to and definitely you won't be able to use absolute paths for Sim Lings but you",
    "start": "733199",
    "end": "742000"
  },
  {
    "text": "could use um relative paths for Sim Lings the idea is that it it prepend",
    "start": "742000",
    "end": "747920"
  },
  {
    "text": "files back back to any sing Target if you have an absolute path it generates",
    "start": "747920",
    "end": "753360"
  },
  {
    "text": "something like files back slash C column back slash that doesn't make any sense",
    "start": "753360",
    "end": "758720"
  },
  {
    "text": "but you could use relative paths as shown in example and we use stuff like",
    "start": "758720",
    "end": "764279"
  },
  {
    "text": "this in our case still hasn't been uh resolved there's an issue open for this",
    "start": "764279",
    "end": "771079"
  },
  {
    "text": "so someday so let's see the same image how",
    "start": "771079",
    "end": "776279"
  },
  {
    "text": "we would do it uh in uh Linux node the second half is the same that",
    "start": "776279",
    "end": "782920"
  },
  {
    "text": "didn't change in any shape or form the first stage changed a bit because now we're using a Linux image as our",
    "start": "782920",
    "end": "790440"
  },
  {
    "text": "workbench to say so so of course we cannot execute the busy box. EXC binary",
    "start": "790440",
    "end": "795720"
  },
  {
    "text": "that's a Windows binary so we cannot do anything but we essentially doing the same thing that command we had before",
    "start": "795720",
    "end": "804120"
  },
  {
    "text": "um we're doing this manually of course you can also have uh cross building",
    "start": "804120",
    "end": "810639"
  },
  {
    "text": "um steps for example you can simply build windows binaries on the Linux node",
    "start": "810639",
    "end": "815680"
  },
  {
    "text": "anyways so you can include those steps there and finally you can just copy the binaries to the window stage so there",
    "start": "815680",
    "end": "822600"
  },
  {
    "text": "are quite a lot of ways to solve this issue so it's not a difficult thing to",
    "start": "822600",
    "end": "827959"
  },
  {
    "text": "do so we see here an example we can see we are using the flags that we mentioned",
    "start": "827959",
    "end": "833959"
  },
  {
    "text": "we have the Providence flag we have the platform and we have the output set to",
    "start": "833959",
    "end": "839240"
  },
  {
    "text": "push push to registry and we have the arguments over",
    "start": "839240",
    "end": "844279"
  },
  {
    "text": "there y so this works for a lot of images not",
    "start": "844279",
    "end": "850079"
  },
  {
    "text": "all of them but most of them there were a couple of cases in which this wouldn't",
    "start": "850079",
    "end": "855120"
  },
  {
    "text": "wasn't as easy to do it wasn't quite feasible for example we had to change",
    "start": "855120",
    "end": "861160"
  },
  {
    "text": "something very essential for the POS image uh and there was no Pleasant way",
    "start": "861160",
    "end": "866880"
  },
  {
    "text": "to do that and we essentially had to build an intermediary image which was then built periodically",
    "start": "866880",
    "end": "875120"
  },
  {
    "text": "and published and that's being used as a base for the Post image uh essentially for example if you try to modify the",
    "start": "875120",
    "end": "880639"
  },
  {
    "text": "registry keys in a windows in Windows container that's going to be about a bit more difficult you might want to use a",
    "start": "880639",
    "end": "888920"
  },
  {
    "text": "Windows build node for that instead to publish a intermediary image instead so",
    "start": "888920",
    "end": "894199"
  },
  {
    "text": "there are certain cases which are not as pleasant to do so so there a couple things which uh",
    "start": "894199",
    "end": "901920"
  },
  {
    "text": "we were using that um technique um next manifest list they're",
    "start": "901920",
    "end": "908399"
  },
  {
    "text": "awesome uh they're extremely useful to group your images into the same registry name and tag so this is even more useful",
    "start": "908399",
    "end": "916600"
  },
  {
    "text": "for the windows images because you can bundle multiple windows images for",
    "start": "916600",
    "end": "923399"
  },
  {
    "text": "multiple versions and then basically the uh container run time we going to is",
    "start": "923399",
    "end": "929720"
  },
  {
    "text": "going to pull the Right image based on its own host OS version so this makes",
    "start": "929720",
    "end": "936160"
  },
  {
    "text": "deploying applications a lot easier and smoother for your users",
    "start": "936160",
    "end": "941800"
  },
  {
    "text": "essentially creating manifest list is very straightforward it's something that uh you've probably done before",
    "start": "942480",
    "end": "949000"
  },
  {
    "text": "anyways one thing to note is that you have to make sure that the OS version is included for the windows images in the",
    "start": "949000",
    "end": "955399"
  },
  {
    "text": "Json which is generated it should be added if you're up to date but if not",
    "start": "955399",
    "end": "961759"
  },
  {
    "text": "it's easy to edit manually with Docker manifest annotate command simply fetch",
    "start": "961759",
    "end": "967839"
  },
  {
    "text": "the OS version and add it and that's going to be enough and you'll be able to push the push it to the",
    "start": "967839",
    "end": "974440"
  },
  {
    "text": "registry so Nano server based images I don't know if you noticed but Windows",
    "start": "975279",
    "end": "981759"
  },
  {
    "text": "Server core images which have been using those examples are quite large there are something like four or five four 4 .5 GB",
    "start": "981759",
    "end": "989880"
  },
  {
    "text": "in size so not small which basically means that your clients are going to",
    "start": "989880",
    "end": "995560"
  },
  {
    "text": "spend more time pulling that first image for the first time so they're going to be stuck in panic for",
    "start": "995560",
    "end": "1001079"
  },
  {
    "text": "longer additionally one other thing to note is that Microsoft publishes uh",
    "start": "1001079",
    "end": "1006399"
  },
  {
    "text": "updates for their images periodically monthly and they override the same tags",
    "start": "1006399",
    "end": "1011519"
  },
  {
    "text": "for the for example ltsc 2022 is being updated monthly this can cause some issues",
    "start": "1011519",
    "end": "1019720"
  },
  {
    "text": "especially if uh you're trying to build multiple images at different times which basically means you're going to have",
    "start": "1019720",
    "end": "1026640"
  },
  {
    "text": "duplicates of the same Windows Server core image for different client images",
    "start": "1026640",
    "end": "1032959"
  },
  {
    "text": "to say so we had some issues regarding that especially when it comes to the CI",
    "start": "1032959",
    "end": "1038640"
  },
  {
    "text": "which we use uh for kubernetes in test grid and of course you also have more",
    "start": "1038640",
    "end": "1043880"
  },
  {
    "text": "storage being used but not all images require to have such a large image you",
    "start": "1043880",
    "end": "1049559"
  },
  {
    "text": "can simply use the Nano server image for certain scenarios and it's a lot smaller it's something like 300 megab in size",
    "start": "1049559",
    "end": "1056679"
  },
  {
    "text": "which is sufficient for example the pause image is essentially a n server image so you don't have to wait as long",
    "start": "1056679",
    "end": "1063520"
  },
  {
    "text": "to you know start your environment and again the issue that we",
    "start": "1063520",
    "end": "1069360"
  },
  {
    "text": "faced um in our CIS for Sig Windows is",
    "start": "1069360",
    "end": "1074520"
  },
  {
    "text": "the fact that um we had a support for test images for uh",
    "start": "1074520",
    "end": "1079600"
  },
  {
    "text": "for the CIS in in kubernetes but they were built at different times they were built on pquest and published a a later",
    "start": "1079600",
    "end": "1087400"
  },
  {
    "text": "date so most of the times the images had different bases and test would fail because it",
    "start": "1087400",
    "end": "1094720"
  },
  {
    "text": "would time out pulling the image every single time so the SES were quite",
    "start": "1094720",
    "end": "1099840"
  },
  {
    "text": "unstable because of that but after we switched to n server images we stopped having those issues it's a lot more",
    "start": "1099840",
    "end": "1106039"
  },
  {
    "text": "reliable and stable so this this uh cool thing that uh we had to",
    "start": "1106039",
    "end": "1112200"
  },
  {
    "text": "discover but there are a couple of restrictions when it comes to non server images they're not going to work the same way as a server core and there",
    "start": "1112200",
    "end": "1119520"
  },
  {
    "text": "might be some caveats which you might have to know if you try to Target this specific base first of all you cannot",
    "start": "1119520",
    "end": "1126760"
  },
  {
    "text": "run 32bit applications in Nano server because the compatibility layer has been",
    "start": "1126760",
    "end": "1132559"
  },
  {
    "text": "removed so you don't have that anymore so that's one of the reasons why the image is so small addition",
    "start": "1132559",
    "end": "1139280"
  },
  {
    "text": "Al um some DLS are not present in the N server image another thing which we have",
    "start": "1139280",
    "end": "1145360"
  },
  {
    "text": "to discover um for example net advanc net 32.dll doesn't exist which basically",
    "start": "1145360",
    "end": "1152919"
  },
  {
    "text": "meant applications like enginex or core DNS could not work since they required",
    "start": "1152919",
    "end": "1158120"
  },
  {
    "text": "uh some networking DLS and we had to figure out what the US",
    "start": "1158120",
    "end": "1163159"
  },
  {
    "text": "to include uh we had to do a bit of digging there's an awesome guide over there which um teaches you very well how",
    "start": "1163159",
    "end": "1170880"
  },
  {
    "text": "to hunt for those DLS uh it's using proon essentially you spin up U",
    "start": "1170880",
    "end": "1178280"
  },
  {
    "text": "um a container trying to run applications and you can basically see what DLS are being loaded by that um",
    "start": "1178280",
    "end": "1186480"
  },
  {
    "text": "container and that application so essentially what we ended",
    "start": "1186480",
    "end": "1193720"
  },
  {
    "text": "up doing is include those DS from server core images you can still do that and we",
    "start": "1193720",
    "end": "1200280"
  },
  {
    "text": "still have n server based images for applications such as engine X for example so we simply F those binaries or",
    "start": "1200280",
    "end": "1207320"
  },
  {
    "text": "DLS from uh the server cor image but again we're basically pulling a 4.5 GB",
    "start": "1207320",
    "end": "1212720"
  },
  {
    "text": "image to Simply copy a file that's not efficient and we used some small caches",
    "start": "1212720",
    "end": "1220559"
  },
  {
    "text": "here and there to cash those binaries and DLS uh in a scratch image which",
    "start": "1220559",
    "end": "1227840"
  },
  {
    "text": "would be updated periodically with new versions and we use that scratch image",
    "start": "1227840",
    "end": "1232960"
  },
  {
    "text": "to get the DLS so again instead of pulling 4 4.5 GB of storage to get one",
    "start": "1232960",
    "end": "1241480"
  },
  {
    "text": "file multiply that by four because we're supporting four different OS versions of",
    "start": "1241480",
    "end": "1246600"
  },
  {
    "text": "Windows that ramped up the build time quite a lot but this solved that",
    "start": "1246600",
    "end": "1253240"
  },
  {
    "text": "issue and basically the the cach looks something like this we are pulling the",
    "start": "1253360",
    "end": "1259600"
  },
  {
    "text": "server core image and we're just storing it locally in a scratch",
    "start": "1259600",
    "end": "1265720"
  },
  {
    "text": "image um if you want to see more um actual ways that we build those images",
    "start": "1266000",
    "end": "1272640"
  },
  {
    "text": "uh you can simply check the the pose image make file which already has all",
    "start": "1272640",
    "end": "1277919"
  },
  {
    "text": "the paths for building the windows images you can check the kubernetes test",
    "start": "1277919",
    "end": "1284120"
  },
  {
    "text": "image building process which already contains a lot of uh pointers regarding building windows images which we have",
    "start": "1284120",
    "end": "1291440"
  },
  {
    "text": "written and you can also check the test image building script which again builds a lot of images for including Linux",
    "start": "1291440",
    "end": "1299480"
  },
  {
    "text": "including windows and so on and if you want to see a more complicated uh Docker file we didn't see anything which is",
    "start": "1299480",
    "end": "1306320"
  },
  {
    "text": "complicated check out the busy box one which we use in the CI it's a lot bigger",
    "start": "1306320",
    "end": "1311880"
  },
  {
    "text": "and more complex another cool Tool uh which we",
    "start": "1311880",
    "end": "1317679"
  },
  {
    "text": "are using and want to talk about would be crane this is a very interesting tool it",
    "start": "1317679",
    "end": "1323480"
  },
  {
    "text": "allows you to do a lot of things without having to pull images but one of the use",
    "start": "1323480",
    "end": "1330320"
  },
  {
    "text": "cases that we had to use it for was the fact that building CU proxy images was a",
    "start": "1330320",
    "end": "1336480"
  },
  {
    "text": "bit more difficult in the kuet space because they were essentially storing",
    "start": "1336480",
    "end": "1341880"
  },
  {
    "text": "the croxy image locally and then it was they were trying to load the image into",
    "start": "1341880",
    "end": "1348279"
  },
  {
    "text": "the Docker image database which of course you cannot do you encountered that sort of error so the question was",
    "start": "1348279",
    "end": "1355640"
  },
  {
    "text": "okay we have the windows image built here but how do we push it and we found",
    "start": "1355640",
    "end": "1362240"
  },
  {
    "text": "crane which essentially just pushes the image without having to load load it so that solved our problem but it has a few",
    "start": "1362240",
    "end": "1369320"
  },
  {
    "text": "other use cases which I think they're pretty nice and and uh might be worth",
    "start": "1369320",
    "end": "1375080"
  },
  {
    "text": "considering for example um you can potentially use Crane to speed up your",
    "start": "1375080",
    "end": "1380760"
  },
  {
    "text": "image building process because in most scenarios for your windows images you are just adding new stuff to a base",
    "start": "1380760",
    "end": "1388320"
  },
  {
    "text": "image you can simply use cran re base to essentially pick up those new layers and",
    "start": "1388320",
    "end": "1394320"
  },
  {
    "text": "apply them to a new base essentially something like uh gri base works in the same manner and you can simply just um",
    "start": "1394320",
    "end": "1402200"
  },
  {
    "text": "generate new images with this command without having to pull anything because essentially what is an OC image is just",
    "start": "1402200",
    "end": "1410559"
  },
  {
    "text": "a bunch of Json with references to images so why pull the entire",
    "start": "1410559",
    "end": "1417760"
  },
  {
    "text": "image and uh another thing which might be useful is as I mentioned Windows",
    "start": "1418640",
    "end": "1424200"
  },
  {
    "text": "updates their images periodically with new security updates which are very important you could use scen rebase to",
    "start": "1424200",
    "end": "1431960"
  },
  {
    "text": "essentially rebase your images to the latest security patch and also make sure that you have the same BAS for all your",
    "start": "1431960",
    "end": "1439120"
  },
  {
    "text": "images so you're not going to use the same amount of storage anymore so that was a quick Deep dive",
    "start": "1439120",
    "end": "1447320"
  },
  {
    "text": "into how we build um Windows images basically we didn't try to rock the rock",
    "start": "1447320",
    "end": "1453120"
  },
  {
    "text": "the bolt too much it was a lot easier to use whatever um build processes they",
    "start": "1453120",
    "end": "1458559"
  },
  {
    "text": "already had so that's also made made it a lot more cost efficient because we",
    "start": "1458559",
    "end": "1464400"
  },
  {
    "text": "didn't have to spin up any Windows machines to build Windows nodes bu Windows",
    "start": "1464400",
    "end": "1469559"
  },
  {
    "text": "images finally uh I would like you to offer this window of opportunity to join",
    "start": "1469559",
    "end": "1474960"
  },
  {
    "text": "Sig Windows um you can check our community page uh follow contributor guide join",
    "start": "1474960",
    "end": "1483039"
  },
  {
    "text": "our meetings which there are every Tuesday at 12:30 EST and join our par sessions afterwards",
    "start": "1483039",
    "end": "1490760"
  },
  {
    "text": "especially if you are new to the community uh if you need any help especially with Windows build uh image",
    "start": "1490760",
    "end": "1496159"
  },
  {
    "text": "building I'll be there uh um especially uh if you could use Windows try it uh",
    "start": "1496159",
    "end": "1503440"
  },
  {
    "text": "try to find some interesting use cases doation if you have any issues please",
    "start": "1503440",
    "end": "1508840"
  },
  {
    "text": "open an issue and maybe send some PO requests if",
    "start": "1508840",
    "end": "1513880"
  },
  {
    "text": "needed you can reach out to us um to the chairs to Arin",
    "start": "1513880",
    "end": "1521399"
  },
  {
    "text": "um sorry maretti Armin nain myself and",
    "start": "1521399",
    "end": "1526640"
  },
  {
    "text": "James Stant join the Sig windowss slack Channel join the meeing list you can see",
    "start": "1526640",
    "end": "1533600"
  },
  {
    "text": "the previous Sig Windows meetings uh over there and here is the zoom meeting",
    "start": "1533600",
    "end": "1539840"
  },
  {
    "text": "L link we'd like to also thank our contributors past and present and most",
    "start": "1539840",
    "end": "1547720"
  },
  {
    "text": "notably um yeah Chen for the work for C reloading for gmsa web hooks M lcot for",
    "start": "1547720",
    "end": "1557240"
  },
  {
    "text": "the work on um Sig Windows de developer",
    "start": "1557240",
    "end": "1562880"
  },
  {
    "text": "tools tenda Z foodi foring Windows uh",
    "start": "1562880",
    "end": "1567960"
  },
  {
    "text": "operational oper um Windows operational Readiness sorry V venicius apolinario for the",
    "start": "1567960",
    "end": "1577200"
  },
  {
    "text": "windows mini Cube guide and presentation that he made and Pedro coutinho for the",
    "start": "1577200",
    "end": "1582480"
  },
  {
    "text": "work for Windows cico cni that was all thank you very much for",
    "start": "1582480",
    "end": "1588520"
  },
  {
    "text": "the attention",
    "start": "1588520",
    "end": "1593240"
  },
  {
    "text": "we if you have any questions feel free to",
    "start": "1594720",
    "end": "1599760"
  },
  {
    "text": "ask yes uh one",
    "start": "1599760",
    "end": "1604880"
  },
  {
    "text": "second so one essential tool for uh package building in Linux is the Packa",
    "start": "1610799",
    "end": "1616440"
  },
  {
    "text": "manager mhm and Windows recently or recently the last years um also",
    "start": "1616440",
    "end": "1622880"
  },
  {
    "text": "introduced wind get for clients is also what's useful for container building in",
    "start": "1622880",
    "end": "1629080"
  },
  {
    "text": "Windows or is this just more client focused uh you mean build kit or what a",
    "start": "1629080",
    "end": "1635520"
  },
  {
    "text": "wing get winget uh didn't use Wing get",
    "start": "1635520",
    "end": "1640799"
  },
  {
    "text": "uh or did you use any others like chocolate or yeah we didn't I mean basically you",
    "start": "1640799",
    "end": "1649120"
  },
  {
    "text": "would be running Windows commands in that scenario so you would have to use a",
    "start": "1649120",
    "end": "1655600"
  },
  {
    "text": "Windows stage for that essentially uh Wing get or",
    "start": "1655600",
    "end": "1662080"
  },
  {
    "text": "chocolatey would essentially just install a couple of binaries in places",
    "start": "1662080",
    "end": "1667600"
  },
  {
    "text": "you would have to do those steps manually especially if you would use a Linux build",
    "start": "1667600",
    "end": "1672720"
  },
  {
    "text": "node but essentially you could do the same work in Linux build node or again uh",
    "start": "1672720",
    "end": "1680880"
  },
  {
    "text": "Windows multinode especially since recently we have added support for Windows build kit so you can also use",
    "start": "1680880",
    "end": "1688080"
  },
  {
    "text": "Windows buildex and build kit on Windows and it has a few other uh other features",
    "start": "1688080",
    "end": "1694399"
  },
  {
    "text": "which are not included in the Linux one especially when it comes to switching users and changing file permissions for",
    "start": "1694399",
    "end": "1701320"
  },
  {
    "text": "different files that you would have um on the on your windows container",
    "start": "1701320",
    "end": "1707360"
  },
  {
    "text": "image but yeah that's an interesting idea",
    "start": "1707360",
    "end": "1712559"
  },
  {
    "text": "might look into",
    "start": "1712559",
    "end": "1715278"
  },
  {
    "text": "it so I haven't personally used the scen rebase command but could you theoretically also rebase for example a",
    "start": "1718480",
    "end": "1726159"
  },
  {
    "text": "ltsc 2019 image onto ltsc 2021 and basically you know comparing them into",
    "start": "1726159",
    "end": "1732600"
  },
  {
    "text": "the same manifest and uh yes uh that is corly right and I think that's what we",
    "start": "1732600",
    "end": "1738799"
  },
  {
    "text": "also did here I um basically we built",
    "start": "1738799",
    "end": "1743880"
  },
  {
    "text": "um um an image basically 2019 and we set the new base to be",
    "start": "1743880",
    "end": "1752320"
  },
  {
    "text": "2022 and added a a new tag essentially but yes that's what uh we were",
    "start": "1752320",
    "end": "1758720"
  },
  {
    "text": "mentioning you can use to you know not have to build the the same image twice",
    "start": "1758720",
    "end": "1763760"
  },
  {
    "text": "essentially very useful yeah yeah",
    "start": "1763760",
    "end": "1770039"
  },
  {
    "text": "um so uh he's saying that uh it's only copying the the the top layer not uh",
    "start": "1775760",
    "end": "1783679"
  },
  {
    "text": "necessarily it copies basically needs a reference to the old base so it knows",
    "start": "1783679",
    "end": "1789080"
  },
  {
    "text": "which layers to remove and which so basically it moves",
    "start": "1789080",
    "end": "1795000"
  },
  {
    "text": "those old layers and you are left with the layers which are added newly to the image and those layers are getting",
    "start": "1795000",
    "end": "1802120"
  },
  {
    "text": "appended to the new base so not only the top layer any number of layers which",
    "start": "1802120",
    "end": "1808039"
  },
  {
    "text": "have been added to the base so essentially quite like G base",
    "start": "1808039",
    "end": "1813679"
  },
  {
    "text": "because you also rebas a lot of commits in git",
    "start": "1813679",
    "end": "1820039"
  },
  {
    "text": "right there may be relations between those layers that you have to take care",
    "start": "1824360",
    "end": "1829440"
  },
  {
    "text": "of it's okay of course if you just copy a binary part of the then doesn't matter",
    "start": "1829440",
    "end": "1836279"
  },
  {
    "text": "but there may be more complicated operations here um I don't think it's going to work for changing changing",
    "start": "1836279",
    "end": "1842919"
  },
  {
    "text": "other places yeah so I don't think it's going to work for every single um",
    "start": "1842919",
    "end": "1848480"
  },
  {
    "text": "case but uh in most cases all images are just uh a list of tar files which are",
    "start": "1848480",
    "end": "1855039"
  },
  {
    "text": "overlaid one of one on top of each other so essentially just applies the same tar",
    "start": "1855039",
    "end": "1862200"
  },
  {
    "text": "layers over a different base so that can still work as intended now I think if",
    "start": "1862200",
    "end": "1869159"
  },
  {
    "text": "you try to manipulate something essential to the Bas layer itself for example if you try",
    "start": "1869159",
    "end": "1876200"
  },
  {
    "text": "to change some Registries I don't think in that case it's going to work with the",
    "start": "1876200",
    "end": "1882559"
  },
  {
    "text": "cran re base so yes there might be those possibilities in any case",
    "start": "1882559",
    "end": "1888960"
  },
  {
    "text": "all images that you build should essentially be also tested and especially if you have some integration",
    "start": "1888960",
    "end": "1895039"
  },
  {
    "text": "tests which you can run those are still recommended in any case even if you use traditional Building images techniques",
    "start": "1895039",
    "end": "1902519"
  },
  {
    "text": "or use something like cran rease or Docker build and so on but yes there there might be some",
    "start": "1902519",
    "end": "1908960"
  },
  {
    "text": "cases which it's not",
    "start": "1908960",
    "end": "1911960"
  },
  {
    "text": "feasible just a quick question throughout this pretty incredible process um have you ever looked at",
    "start": "1915519",
    "end": "1922559"
  },
  {
    "text": "Powershell core between both operating systems uh we did sorry somewhat of a",
    "start": "1922559",
    "end": "1931320"
  },
  {
    "text": "loaded question it is uh so pow shell H",
    "start": "1931320",
    "end": "1937279"
  },
  {
    "text": "so we do include Powershell in the test images that we build because we need it",
    "start": "1937279",
    "end": "1943039"
  },
  {
    "text": "for some test because there are some exacts for some reason and of course n",
    "start": "1943039",
    "end": "1948159"
  },
  {
    "text": "Server doesn't have any power shells in it but you could just pull them and add",
    "start": "1948159",
    "end": "1954039"
  },
  {
    "text": "them to the N server image so you could still have pow shell one other thing which uh kind of happens is that when po",
    "start": "1954039",
    "end": "1960559"
  },
  {
    "text": "shell runs for the first time it also pulls and updates it caches which was",
    "start": "1960559",
    "end": "1966240"
  },
  {
    "text": "another interesting thing because we had to use an intermediary intermediary windows",
    "start": "1966240",
    "end": "1971440"
  },
  {
    "text": "image which already had all those caches built and set and we are using that cach",
    "start": "1971440",
    "end": "1978080"
  },
  {
    "text": "image to essentially add Powershell and all caches to the test images that we",
    "start": "1978080",
    "end": "1983639"
  },
  {
    "text": "use so we do use Parell in our scenarios I",
    "start": "1983639",
    "end": "1990240"
  },
  {
    "text": "don't know if that was the question that you asked though you answered it oh",
    "start": "1990240",
    "end": "1995840"
  },
  {
    "text": "cool",
    "start": "1995840",
    "end": "1998840"
  },
  {
    "text": "yes for the server core and the Nano core images do you support the platform type of arm with Windows arm that's a",
    "start": "2003639",
    "end": "2012039"
  },
  {
    "text": "good question uh I'm not exactly sure um I did some",
    "start": "2012039",
    "end": "2020559"
  },
  {
    "text": "digging some time ago and I inspected the images that were published by Microsoft and there were indeed manifest",
    "start": "2020559",
    "end": "2027679"
  },
  {
    "text": "lists which also included arm images but I didn't use Arm images",
    "start": "2027679",
    "end": "2034039"
  },
  {
    "text": "because I do not have any arm to actually test it but the image building process would be",
    "start": "2034039",
    "end": "2041240"
  },
  {
    "text": "pretty much the same in any scenarios because one other thing which bit does",
    "start": "2041240",
    "end": "2046639"
  },
  {
    "text": "and is being used is it's also emulating other platforms of CPUs for example bit",
    "start": "2046639",
    "end": "2052638"
  },
  {
    "text": "is being used to build images for uh amd64",
    "start": "2052639",
    "end": "2058358"
  },
  {
    "text": "s390x uh arm arm 64 PPC 64 l e something like that so in all",
    "start": "2058359",
    "end": "2067440"
  },
  {
    "text": "cases for kubernetes in general it builds a lot of images for a lot of platforms and",
    "start": "2067440",
    "end": "2074440"
  },
  {
    "text": "in the end we'll just create a manifest list which includes all the Platforms in",
    "start": "2074440",
    "end": "2080079"
  },
  {
    "text": "that manifest List It essentially uses uh Q qmu to emulate those platforms",
    "start": "2080079",
    "end": "2087760"
  },
  {
    "text": "which is another interesting issues that we fac at one point and it was kind of hard to actually figure out this was",
    "start": "2087760",
    "end": "2093960"
  },
  {
    "text": "happening was that sometimes the image building process would fail um in",
    "start": "2093960",
    "end": "2099400"
  },
  {
    "text": "kubernetes and we didn't really know why suddenly it says I cannot build image anymore I could discover the fact that",
    "start": "2099400",
    "end": "2107040"
  },
  {
    "text": "uh what happens sometimes the same um image jobs would be scheduled the same",
    "start": "2107040",
    "end": "2114040"
  },
  {
    "text": "node at the same time but whenever Q was being used to mock a different platform",
    "start": "2114040",
    "end": "2121680"
  },
  {
    "text": "it would essentially change the kernel so flag in kernel which is the same as",
    "start": "2121680",
    "end": "2126800"
  },
  {
    "text": "the host itself so basically it was a RIS condition between two building jobs and they were both overriding the same",
    "start": "2126800",
    "end": "2134359"
  },
  {
    "text": "uh the same flags for the operating system so of course if you try to build an arm 64 and AMD 64 image at the same",
    "start": "2134359",
    "end": "2142560"
  },
  {
    "text": "time one of them is going to fail that was interesting to discover but again uh",
    "start": "2142560",
    "end": "2148280"
  },
  {
    "text": "it's possible to build any sort of image for any uh platform and yes I saw some",
    "start": "2148280",
    "end": "2154599"
  },
  {
    "text": "r64 images some time ago um I think we",
    "start": "2154599",
    "end": "2159920"
  },
  {
    "text": "have to finish here but if you have any other other questions uh feel free to ask I'll be around here either around or",
    "start": "2159920",
    "end": "2166839"
  },
  {
    "text": "outside but thank you so much for your",
    "start": "2166839",
    "end": "2171200"
  },
  {
    "text": "attendance",
    "start": "2172440",
    "end": "2175440"
  }
]