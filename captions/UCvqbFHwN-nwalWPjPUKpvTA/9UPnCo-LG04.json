[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "good afternoon welcome to my talk so the title of our talk today is towards",
    "start": "30",
    "end": "6029"
  },
  {
    "text": "continuous computer vision model improvement with good flow my name is Derek and I'm a software engineer at",
    "start": "6029",
    "end": "11880"
  },
  {
    "text": "snapchat a lot of the material presented in English talk today is actually done",
    "start": "11880",
    "end": "17880"
  },
  {
    "text": "by my coworker Eason and he unfortunate can't be here due to visa issues so I'll",
    "start": "17880",
    "end": "22949"
  },
  {
    "text": "be the only one giving the talk so first a very quick overview about the agenda",
    "start": "22949",
    "end": "29670"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "of this talk and what this talk is about so first I'll give you a very brief introduction about what snapchat is but",
    "start": "29670",
    "end": "35880"
  },
  {
    "text": "it seems a lot of you are aware of us already and that's good so I'll keep that part concise next I'll talk a bit",
    "start": "35880",
    "end": "43200"
  },
  {
    "text": "more about this new feature our team has been working on called scan scan",
    "start": "43200",
    "end": "48420"
  },
  {
    "text": "basically leads us to the problem and need of like say continuously updating",
    "start": "48420",
    "end": "54570"
  },
  {
    "text": "and improving computer vision models and more particularly we are interested in",
    "start": "54570",
    "end": "60079"
  },
  {
    "text": "improving the quality of visual understanding so this is an important part you like to understand why we even",
    "start": "60079",
    "end": "66510"
  },
  {
    "text": "need to have this talk next I'll give a high-level overview of what we mean by model in provement and what kind of",
    "start": "66510",
    "end": "73920"
  },
  {
    "text": "machine learning problem we're trying to tackle here and what kind of high level machine learning approach we are trying",
    "start": "73920",
    "end": "80130"
  },
  {
    "text": "to have as well so after that we'll do a",
    "start": "80130",
    "end": "85920"
  },
  {
    "text": "case study and we'll discuss why we choose to use coop flow pipelines and",
    "start": "85920",
    "end": "91170"
  },
  {
    "text": "what kind of alternatives we've considered and we'll also describes the",
    "start": "91170",
    "end": "96450"
  },
  {
    "text": "pipelines we have built finally we will chat a bit more about some of the pain",
    "start": "96450",
    "end": "101729"
  },
  {
    "text": "points tricks or practices we've seen and hacked all together while using tube",
    "start": "101729",
    "end": "106950"
  },
  {
    "text": "flow pipelines so let's get started first about snapchat so our app has been",
    "start": "106950",
    "end": "114810"
  },
  {
    "start": "112000",
    "end": "112000"
  },
  {
    "text": "around for eight years oh and what is snapchat so basically we consider ourselves to be the most fun way to",
    "start": "114810",
    "end": "121649"
  },
  {
    "text": "share the moment whenever you wanted to to do so and at the end of q3 we have",
    "start": "121649",
    "end": "130649"
  },
  {
    "text": "over 210 million daily active users so we have more than 3.5 billion snaps",
    "start": "130649",
    "end": "136680"
  },
  {
    "text": "created every day and shared with your friends and we also have over 600,000",
    "start": "136680",
    "end": "141800"
  },
  {
    "text": "lenses created by our community I do want to explain these two words a bit",
    "start": "141800",
    "end": "147390"
  },
  {
    "text": "more so the first here is what is a lens so as you can see here on the right hand",
    "start": "147390",
    "end": "152670"
  },
  {
    "text": "side a lens is basically an overlay that you can add to your snap that creates an",
    "start": "152670",
    "end": "158160"
  },
  {
    "text": "augmented reality experience on top of your content so basically a lens this is",
    "start": "158160",
    "end": "164070"
  },
  {
    "text": "meant to be fun create event makes your snap more engaging and the lens we are",
    "start": "164070",
    "end": "169860"
  },
  {
    "text": "showing here is one of the most popular lens with built like four years ago called puking rainbows and then on the",
    "start": "169860",
    "end": "177900"
  },
  {
    "text": "turn community so basically we have this app called lens studio so lens studio",
    "start": "177900",
    "end": "184470"
  },
  {
    "text": "enables you to create a a ireland's from various kinds of templates you can track",
    "start": "184470",
    "end": "190530"
  },
  {
    "text": "two-dimensional content based on the movement of your hands faces head neck",
    "start": "190530",
    "end": "196080"
  },
  {
    "text": "shoulders etc you can add animated two-dimensional or three-dimensional",
    "start": "196080",
    "end": "201410"
  },
  {
    "text": "objects to your world or you can add images or or animation to your cat and",
    "start": "201410",
    "end": "207690"
  },
  {
    "text": "dogs face our users love this app and they have created over 600,000 lenses from",
    "start": "207690",
    "end": "214950"
  },
  {
    "text": "Zizi available templates that we have and here are some examples so here we",
    "start": "214950",
    "end": "221850"
  },
  {
    "start": "220000",
    "end": "220000"
  },
  {
    "text": "have four examples of community lens so the first one is a lens that shows you",
    "start": "221850",
    "end": "227010"
  },
  {
    "text": "her favorite sports team and I believe this is a Florida Gators so it's an",
    "start": "227010",
    "end": "232739"
  },
  {
    "text": "overlay on top of her face the second one at a stop sign based on the movement",
    "start": "232739",
    "end": "239160"
  },
  {
    "text": "of the hand in the third snap we can see this cute cat now shooting laser beams",
    "start": "239160",
    "end": "245250"
  },
  {
    "text": "from her eyes and the last one is an animated 3d object that I believe is a",
    "start": "245250",
    "end": "252530"
  },
  {
    "text": "butter yeah I guess so so like if you're interested to create",
    "start": "252530",
    "end": "258019"
  },
  {
    "text": "more lens like this you can always learn more at lens studio dodge snapchat comm but as I just said we have over 600,000",
    "start": "258019",
    "end": "266720"
  },
  {
    "text": "tons of lenses like this which is both good and bad good thing is our users now",
    "start": "266720",
    "end": "272360"
  },
  {
    "text": "have a lot to choose from and the bad thing is they have a lot to choose from because when you're taking a snap it's",
    "start": "272360",
    "end": "279770"
  },
  {
    "text": "very hard for you to know like what's the most perfect lens or like what's the most engaging lens you can possibly use",
    "start": "279770",
    "end": "285470"
  },
  {
    "text": "for the content that you want to share like if you have a cat or you're if you",
    "start": "285470",
    "end": "292010"
  },
  {
    "text": "don't take a snap for your favorite cat and you don't even know we have all these cute pet lenses at all what can",
    "start": "292010",
    "end": "299060"
  },
  {
    "text": "what can you do so our solution to this problem or okay more precisely our",
    "start": "299060",
    "end": "306350"
  },
  {
    "text": "attempt to solve this problem leads us to this new feature called scan so here for scan we aim to find the",
    "start": "306350",
    "end": "315530"
  },
  {
    "start": "311000",
    "end": "311000"
  },
  {
    "text": "perfect lens for the content of your snap overall what we want to do is when",
    "start": "315530",
    "end": "322789"
  },
  {
    "text": "you start a scan request you can press and hold in the snapchat app this",
    "start": "322789",
    "end": "328760"
  },
  {
    "text": "basically fans out the request image to a bunch of different algorithms like we",
    "start": "328760",
    "end": "334580"
  },
  {
    "text": "have an object classification model we have hand detection model we have sky segmentation model we have an instance",
    "start": "334580",
    "end": "340550"
  },
  {
    "text": "retrieval algorithm that tries to match your image against the list of marker",
    "start": "340550",
    "end": "345830"
  },
  {
    "text": "images that we have etc etc and then after this will what we now have is a",
    "start": "345830",
    "end": "351560"
  },
  {
    "text": "list of highly confident concepts or say instances that we've predicted from what",
    "start": "351560",
    "end": "357770"
  },
  {
    "text": "your image content has and will try to match it against a lens database that we",
    "start": "357770",
    "end": "363289"
  },
  {
    "text": "have and then we would retrieve a bunch of lens and these lens will be used to",
    "start": "363289",
    "end": "368919"
  },
  {
    "text": "we was into personalized sorting for all the lens you have and then give you a",
    "start": "368919",
    "end": "374930"
  },
  {
    "text": "list of suggested then tailor to the content of your snap so as a result if",
    "start": "374930",
    "end": "381889"
  },
  {
    "text": "you take your phone out open snapchat app and press and hold on this cat which we've just seen from the previous",
    "start": "381889",
    "end": "389360"
  },
  {
    "text": "you should be able to see a list of dance like that like this",
    "start": "389360",
    "end": "394449"
  },
  {
    "text": "yeah so now if you don't know what you can do when you're taking a snap or what",
    "start": "413020",
    "end": "418039"
  },
  {
    "text": "kind of AR effect you can add now we have a way and then you mean you may want to stop me right now because you",
    "start": "418039",
    "end": "426289"
  },
  {
    "text": "feel it's already 2019 I can't be talking here and acting like this is",
    "start": "426289",
    "end": "433430"
  },
  {
    "start": "427000",
    "end": "427000"
  },
  {
    "text": "still a hard problem right I I mean you might say I shouldn't be",
    "start": "433430",
    "end": "439639"
  },
  {
    "text": "thinking I'm doing this or this or even this it's like most likely in my day to",
    "start": "439639",
    "end": "446990"
  },
  {
    "text": "day I'm either doing this or doing this right to some extent I think you might",
    "start": "446990",
    "end": "455180"
  },
  {
    "text": "be right because these days all you need to do to get a good baseline model is you can import your favorite deep",
    "start": "455180",
    "end": "460339"
  },
  {
    "text": "learning framework be it like tensorflow PI torch MX net chain or whatever and",
    "start": "460339",
    "end": "466430"
  },
  {
    "text": "then you download a pre train checkpoint from a large image data set like image net open images these sorts of things",
    "start": "466430",
    "end": "473089"
  },
  {
    "text": "and then get that trained and fine-tuned on your limited annotation data you have",
    "start": "473089",
    "end": "478550"
  },
  {
    "text": "do all kinds of tweaking to all kinds of hyper parameter tuning get it to a decent validation accuracy deploy code",
    "start": "478550",
    "end": "485779"
  },
  {
    "text": "abate that seems to be what most of the tutorials of computer vision models seem",
    "start": "485779",
    "end": "494149"
  },
  {
    "text": "to be telling us I mean this will give you a good baseline to start so what do",
    "start": "494149",
    "end": "499399"
  },
  {
    "text": "we actually mean by continuously improving and this leads us to the second portion of this talk which is a",
    "start": "499399",
    "end": "505909"
  },
  {
    "text": "high level overview of what model improvement things and what we are trying to do what we've learned from our",
    "start": "505909",
    "end": "515328"
  },
  {
    "start": "513000",
    "end": "513000"
  },
  {
    "text": "basic machine learning courses or machine learning 101 is your model would",
    "start": "515329",
    "end": "520698"
  },
  {
    "text": "be as good as your training set and your model is only as good as your training set what this means is if your training",
    "start": "520699",
    "end": "528079"
  },
  {
    "text": "set sucks no matter what kind of model you try your model would likely suck so",
    "start": "528079",
    "end": "533779"
  },
  {
    "text": "this is an image we get from our internal user feedback basically what",
    "start": "533779",
    "end": "539180"
  },
  {
    "text": "happens is after we finish the first release candidate of this scan object",
    "start": "539180",
    "end": "544250"
  },
  {
    "text": "classification model our internal user hey I'm in the furniture store and I see",
    "start": "544250",
    "end": "551509"
  },
  {
    "text": "a bunch of Catalans related to this and I can't apply my Catalans to any of them so can you fix that so we took a look",
    "start": "551509",
    "end": "558889"
  },
  {
    "text": "and apparently we found this images now incorrectly classified as cat and then",
    "start": "558889",
    "end": "564319"
  },
  {
    "text": "we are suggesting pet lenses that users can't apply so this is the bad experience that we want we want to fix",
    "start": "564319",
    "end": "571819"
  },
  {
    "text": "for sure you know you might argue that this is incorrect because our training",
    "start": "571819",
    "end": "578209"
  },
  {
    "text": "process probably has a bug our network structure might be wrong or like or like these sorts of things I'm concerned",
    "start": "578209",
    "end": "586100"
  },
  {
    "text": "about that too so months ago when I first saw this I did a few tests I",
    "start": "586100",
    "end": "592220"
  },
  {
    "text": "actually did this test last night and if you download this image or crop it",
    "start": "592220",
    "end": "597649"
  },
  {
    "text": "upload it to some kind of cloud vision API or some visual understanding API",
    "start": "597649",
    "end": "602839"
  },
  {
    "text": "that you can find online from very major companies you'll find that at least two",
    "start": "602839",
    "end": "609829"
  },
  {
    "text": "or three of them now still classify it as cat or animal so this means maybe",
    "start": "609829",
    "end": "615740"
  },
  {
    "text": "it's not because our training process has a bug and I would argue it's basically the bit it's basically because",
    "start": "615740",
    "end": "622639"
  },
  {
    "text": "in our training set we've never seen these sorts of images which I believe is a fluffy pillow of some sort to",
    "start": "622639",
    "end": "630199"
  },
  {
    "text": "illustrate what what this means let's take one of the largest image data set",
    "start": "630199",
    "end": "635959"
  },
  {
    "text": "that we now have open images as an example so what we have here is",
    "start": "635959",
    "end": "642759"
  },
  {
    "text": "interesting because right now I can't even see that on my screen nice so what",
    "start": "642759",
    "end": "648019"
  },
  {
    "text": "we have here is this is the open images data sets released by Google it has over 9 million images and here are the images",
    "start": "648019",
    "end": "657439"
  },
  {
    "text": "that are tagged as positive like contain",
    "start": "657439",
    "end": "663699"
  },
  {
    "text": "pillows so here if we scroll down if we take a quick glance we can see there are",
    "start": "663699",
    "end": "669470"
  },
  {
    "text": "various if anyone guys can tell me where my cursor is that'll be great",
    "start": "669470",
    "end": "677709"
  },
  {
    "text": "okay so if if we scroll down we can see if there are various kinds and shapes",
    "start": "678350",
    "end": "684960"
  },
  {
    "text": "and textures of pillows from this image set but it's not easy for us to see the",
    "start": "684960",
    "end": "691860"
  },
  {
    "text": "same fluffy or like furry kind which basically means we can't we won't be",
    "start": "691860",
    "end": "701399"
  },
  {
    "text": "able to tell this because we've never seen that okay so after this the very",
    "start": "701399",
    "end": "706950"
  },
  {
    "text": "natural question is how do we fix that or how do we actually like how do we",
    "start": "706950",
    "end": "712290"
  },
  {
    "text": "effectively leverage limited user feedback to effectively improve our",
    "start": "712290",
    "end": "718100"
  },
  {
    "text": "classification model and almost always when it comes to model in provement one",
    "start": "718100",
    "end": "724830"
  },
  {
    "text": "of the most effective approach is to get more training data or get more labeled instances but here's the main issue is",
    "start": "724830",
    "end": "732209"
  },
  {
    "text": "what kind of training data do we actually need that can correct predictions like this because we only",
    "start": "732209",
    "end": "738779"
  },
  {
    "text": "have like one or two or like not more than a handful of user feedbacks we",
    "start": "738779",
    "end": "744779"
  },
  {
    "text": "can't train on those the overall idea we have is conceptually very simple and",
    "start": "744779",
    "end": "750060"
  },
  {
    "text": "straightforward and also a very standard machine learning approach basically what",
    "start": "750060",
    "end": "755310"
  },
  {
    "text": "we want to do is to rely on similar images that we can find on snapchat and",
    "start": "755310",
    "end": "761150"
  },
  {
    "text": "more more precisely what we want to do is to find images that come from a",
    "start": "761150",
    "end": "767250"
  },
  {
    "text": "similar distribution as our scan requests that look similar to the user",
    "start": "767250",
    "end": "773880"
  },
  {
    "text": "feedback images where our predictions are incorrect",
    "start": "773880",
    "end": "779130"
  },
  {
    "text": "so in snapchat one of the potential data source we can use is called our story so",
    "start": "779130",
    "end": "786300"
  },
  {
    "text": "our story is this type of story posts that users specifically choose to share",
    "start": "786300",
    "end": "791850"
  },
  {
    "text": "to the public world and then we can use them to annotate them and try to improve our models so I want to do a live demo",
    "start": "791850",
    "end": "803279"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "of what I mean so I'll try to see if this would actually work because live demo is always risky so",
    "start": "803279",
    "end": "812480"
  },
  {
    "text": "this is feedback and I haven't considered I can't even I don't know",
    "start": "812480",
    "end": "819260"
  },
  {
    "text": "where my mouse is okay so here I want to",
    "start": "819260",
    "end": "824389"
  },
  {
    "text": "fetch the top 100 most similar our our story posts I click this and then after",
    "start": "824389",
    "end": "831800"
  },
  {
    "text": "an embarrassing embarrassingly long wait so we've found a bunch of images that",
    "start": "831800",
    "end": "838160"
  },
  {
    "text": "look like furniture stores because it's very likely this image is taken in a furniture store so if we scroll down we",
    "start": "838160",
    "end": "844339"
  },
  {
    "text": "can see that most of the post we have here do come from the same type of",
    "start": "844339",
    "end": "849760"
  },
  {
    "text": "places but it may not be exactly helpful for us to correct this case luckily for",
    "start": "849760",
    "end": "859240"
  },
  {
    "text": "machine learning based on the activation maps we can kind of understand which",
    "start": "859240",
    "end": "864980"
  },
  {
    "text": "parts contribute to the highest activation based on the prediction",
    "start": "864980",
    "end": "870680"
  },
  {
    "text": "values we have so if we like crop the highest night like the best region of",
    "start": "870680",
    "end": "876140"
  },
  {
    "text": "interest we have we do uh we do a we query again based on this portion we now",
    "start": "876140",
    "end": "885290"
  },
  {
    "text": "should be able to find more fluffy stuff that looks might be helpful because like",
    "start": "885290",
    "end": "892640"
  },
  {
    "text": "you can see here some of these are actually animals some of these are not",
    "start": "892640",
    "end": "898399"
  },
  {
    "text": "but so this kind of positive and negative combinations would help our",
    "start": "898399",
    "end": "903980"
  },
  {
    "text": "neural network learn which are the most important features to try to tell these part of things like from the cat noir",
    "start": "903980",
    "end": "911390"
  },
  {
    "text": "cat type you may argue this is not that important in terms of fixing user",
    "start": "911390",
    "end": "917360"
  },
  {
    "text": "feedback but people do love cats so and",
    "start": "917360",
    "end": "922959"
  },
  {
    "text": "after this the next slide is a backup slide in case demo failed and luckily I",
    "start": "922959",
    "end": "930290"
  },
  {
    "start": "928000",
    "end": "928000"
  },
  {
    "text": "don't need to use that so and next slide is another backup start ok so here is a",
    "start": "930290",
    "end": "937010"
  },
  {
    "start": "936000",
    "end": "936000"
  },
  {
    "text": "high-level overview of what our end-to-end workflow is so basically we have two sorts of input one",
    "start": "937010",
    "end": "943910"
  },
  {
    "text": "is a search index that that is that should support nearest neighbor queries",
    "start": "943910",
    "end": "951290"
  },
  {
    "text": "and this search index is basically built from our story posts we would compute image features on top of that and then",
    "start": "951290",
    "end": "958100"
  },
  {
    "text": "it's used to support querying visually similar images the other sort of input",
    "start": "958100",
    "end": "963769"
  },
  {
    "text": "are a collection of seed images so these seed images they may come from user",
    "start": "963769",
    "end": "970190"
  },
  {
    "text": "feedback let me come from scan request image logs where the model is uncertain about or",
    "start": "970190",
    "end": "977600"
  },
  {
    "text": "other types of active learning strategies so these seed images are then",
    "start": "977600",
    "end": "985160"
  },
  {
    "text": "used as queries against the image index we have here and then it will give you a list of candidates so these candidates",
    "start": "985160",
    "end": "992329"
  },
  {
    "text": "are then fed into some third party annotation services and here we use stage maker ground choose so we then",
    "start": "992329",
    "end": "997910"
  },
  {
    "text": "splits this image into training set and evaluation set we will combine this new",
    "start": "997910",
    "end": "1004269"
  },
  {
    "text": "training set with existing training images we have we train the whole classifier and see if it meets some",
    "start": "1004269",
    "end": "1011199"
  },
  {
    "text": "performance criteria for like updating and then we will deploy again so you can",
    "start": "1011199",
    "end": "1017709"
  },
  {
    "text": "see this whole thing now forms a closed loop of a machine learning workflow that aims to improve the model quality",
    "start": "1017709",
    "end": "1023889"
  },
  {
    "text": "automatically or continuously so this is the high-level overview and although",
    "start": "1023889",
    "end": "1030579"
  },
  {
    "text": "this is still a very standard machine learning workflow it's way beyond what a what a machine learning engineer can",
    "start": "1030579",
    "end": "1037390"
  },
  {
    "text": "comfortably experiment in his Jupiter notebook so we need some other better",
    "start": "1037390",
    "end": "1043750"
  },
  {
    "text": "tools and then in the next portion I will chat a bit more about why we choose",
    "start": "1043750",
    "end": "1049030"
  },
  {
    "text": "to use coop flow pipelines what kind of comparisons we've made to other pipeline",
    "start": "1049030",
    "end": "1054730"
  },
  {
    "text": "orchestrators and an overview of the coop flow pipelines we've implemented for the machine learning workflow that",
    "start": "1054730",
    "end": "1061720"
  },
  {
    "text": "we just see so as we all know so basically cupola",
    "start": "1061720",
    "end": "1068310"
  },
  {
    "start": "1065000",
    "end": "1065000"
  },
  {
    "text": "pipelines it essentially is a pipeline Orchestrator and there are already a lot of pipeline orchestrators one could",
    "start": "1068310",
    "end": "1074760"
  },
  {
    "text": "possibly use so why could flow we listed several requirements that we would hope",
    "start": "1074760",
    "end": "1081600"
  },
  {
    "text": "our pipeline Orchestrator would have before we dive into and start implementing everything on this pipeline",
    "start": "1081600",
    "end": "1087990"
  },
  {
    "text": "Orchestrator so the first thing is we would want it to be able to run arbitrary or containerized code because",
    "start": "1087990",
    "end": "1095160"
  },
  {
    "text": "this would give us the maximum flexibility in terms of component language choices packages etc it should",
    "start": "1095160",
    "end": "1103080"
  },
  {
    "text": "be able to share components easily across different workflows because then",
    "start": "1103080",
    "end": "1108750"
  },
  {
    "text": "multiple engineers or teams can build these shared components where people can",
    "start": "1108750",
    "end": "1115080"
  },
  {
    "text": "then provide common functionalities that shared across multiple experiments it",
    "start": "1115080",
    "end": "1121440"
  },
  {
    "text": "should be able to reuse and modify previous workflows because then we can",
    "start": "1121440",
    "end": "1129540"
  },
  {
    "text": "enable quick ml experiment iteration because we are trying all sorts of new",
    "start": "1129540",
    "end": "1135720"
  },
  {
    "text": "ideas every day that may or may not work so it's it doesn't make sense to simply",
    "start": "1135720",
    "end": "1141060"
  },
  {
    "text": "assume that most of our pipeline specifications would remain fixed most of the time ideally we would want it to",
    "start": "1141060",
    "end": "1147990"
  },
  {
    "text": "be current that is native as well because in that case we can minimize our",
    "start": "1147990",
    "end": "1153000"
  },
  {
    "text": "gap between the experimentation computing environment and our production",
    "start": "1153000",
    "end": "1158330"
  },
  {
    "text": "environment so we can easily understand or have better estimates of runtime",
    "start": "1158330",
    "end": "1166100"
  },
  {
    "text": "performances and other performance metrics easily it should be able to use",
    "start": "1166100",
    "end": "1172700"
  },
  {
    "text": "GPUs because I mean well we're doing deep learning so it's important ideally",
    "start": "1172700",
    "end": "1180690"
  },
  {
    "text": "we would want to avoid vendor like it shouldn't be completely dependent on a",
    "start": "1180690",
    "end": "1187080"
  },
  {
    "text": "specific vendor as well and we also wanted to be able to specify workflow as",
    "start": "1187080",
    "end": "1193110"
  },
  {
    "text": "code so these pipeline changes are meaningful and other engineers can review these changes",
    "start": "1193110",
    "end": "1199260"
  },
  {
    "text": "as well and finally it would be nice if we can have some nice metric visualization output either natively or",
    "start": "1199260",
    "end": "1207240"
  },
  {
    "text": "by integration with other tools like 10 support that's a long list so late last",
    "start": "1207240",
    "end": "1214620"
  },
  {
    "start": "1214000",
    "end": "1214000"
  },
  {
    "text": "year while we were trying to decide which pipeline Orchestrator to use eventually we've narrowed down to these",
    "start": "1214620",
    "end": "1221460"
  },
  {
    "text": "three choices some of these comments I'm making here may no longer be valid",
    "start": "1221460",
    "end": "1227429"
  },
  {
    "text": "because it's being a year and a lot of things has happened in the past year so I'm afraid maybe airflow now supports",
    "start": "1227429",
    "end": "1236100"
  },
  {
    "text": "this now but to be honest and not entirely aware so the first choice we've considered is AWS step function so it's",
    "start": "1236100",
    "end": "1243690"
  },
  {
    "text": "widely used in a in AWS land it has very tight in integration with almost all the",
    "start": "1243690",
    "end": "1249480"
  },
  {
    "text": "AWS native support and other cool it",
    "start": "1249480",
    "end": "1255000"
  },
  {
    "text": "obvious stuff it has but we feel it's a good workflow Orchestrator but it's not",
    "start": "1255000",
    "end": "1260520"
  },
  {
    "text": "a very good work the orchestrator for machine learning experimentation use it's not kubernetes native for sure and",
    "start": "1260520",
    "end": "1268169"
  },
  {
    "text": "the way we we specify workflows in AWS step function is basically these state",
    "start": "1268169",
    "end": "1275429"
  },
  {
    "text": "machine json strings so it's not entirely it's not easily understandable",
    "start": "1275429",
    "end": "1281730"
  },
  {
    "text": "and there is no way for us to quickly see what kind of metric output each one",
    "start": "1281730",
    "end": "1287940"
  },
  {
    "text": "has and airflow is widely used by a lot of companies for sure for their data",
    "start": "1287940",
    "end": "1293970"
  },
  {
    "text": "pipelines and there are a lot of nice things I love about airflow but airflow",
    "start": "1293970",
    "end": "1300090"
  },
  {
    "text": "at that time one of the main thing is it wasn't able to integrate with kubernetes easily and as such we won't be able to",
    "start": "1300090",
    "end": "1307140"
  },
  {
    "text": "use GPUs which means if we were to use airflow we need to rewrite a lot of our",
    "start": "1307140",
    "end": "1313169"
  },
  {
    "text": "code into cloud platform machine learning training engines like sage",
    "start": "1313169",
    "end": "1319830"
  },
  {
    "text": "maker or Google Cloud ml engine which is like one thing we are trying to avoid it",
    "start": "1319830",
    "end": "1325490"
  },
  {
    "text": "doesn't have visualization support as well and one of the main thing I think",
    "start": "1325490",
    "end": "1331470"
  },
  {
    "text": "is airflow is good for recurring tasks but",
    "start": "1331470",
    "end": "1336940"
  },
  {
    "text": "it's not super easy for you to change existing tags or create new experimental",
    "start": "1336940",
    "end": "1342460"
  },
  {
    "text": "tags so it's good for recurring tasks but may not be that good for a quick",
    "start": "1342460",
    "end": "1349230"
  },
  {
    "text": "experimentation and obviously at that time when we were looking to cupola",
    "start": "1349230",
    "end": "1354550"
  },
  {
    "text": "pipelines it supports all our needs and we went all in to implement our machine learning workflows in coop flow",
    "start": "1354550",
    "end": "1360940"
  },
  {
    "text": "pipelines so here's an overview I hope the font is still recognizable so",
    "start": "1360940",
    "end": "1370330"
  },
  {
    "start": "1364000",
    "end": "1364000"
  },
  {
    "text": "this is an overview of the pipelines we've built from the previous model improvement machine learning workflow so",
    "start": "1370330",
    "end": "1377050"
  },
  {
    "text": "basically we split the overall like giant workflow into form mini pipelines",
    "start": "1377050",
    "end": "1383560"
  },
  {
    "text": "the reason behind this is we still don't have artifact caching include flow pipelines yet so once we make any tweaks",
    "start": "1383560",
    "end": "1390820"
  },
  {
    "text": "or updates in the downstream components we don't want to rerun everything especially considering some of these",
    "start": "1390820",
    "end": "1397000"
  },
  {
    "text": "pipelines actually contain like involve human annotation which might be pricey so the pipeline implementation part is",
    "start": "1397000",
    "end": "1404500"
  },
  {
    "text": "actually relatively straightforward given everything is already talked arised and basically we now have four",
    "start": "1404500",
    "end": "1409900"
  },
  {
    "text": "parts the first part is a candidate image collection pipeline where we said",
    "start": "1409900",
    "end": "1414970"
  },
  {
    "text": "it we can have multiple sources we can fetch visually similar images from our",
    "start": "1414970",
    "end": "1420850"
  },
  {
    "text": "story or we have fetched from our scan request logs as a second pipeline is",
    "start": "1420850",
    "end": "1426130"
  },
  {
    "text": "where we feed data to save stage maker ground rules for annotation one thing to",
    "start": "1426130",
    "end": "1432040"
  },
  {
    "text": "note here is we do cross cloud data transfer due to pricing or other feature",
    "start": "1432040",
    "end": "1437160"
  },
  {
    "text": "considerations so we inject AWS ints secrets in our clusters so data transfer",
    "start": "1437160",
    "end": "1445030"
  },
  {
    "text": "can be done easily so the second pipeline basically does some customized pre-processing like we",
    "start": "1445030",
    "end": "1450730"
  },
  {
    "text": "need to blur the face of people from the image post before sending them for",
    "start": "1450730",
    "end": "1455830"
  },
  {
    "text": "annotation and then we would just pass these processed images down to stage",
    "start": "1455830",
    "end": "1461170"
  },
  {
    "text": "maker so so the third pipeline basically creates",
    "start": "1461170",
    "end": "1466450"
  },
  {
    "text": "the charted data we need for training",
    "start": "1466450",
    "end": "1471610"
  },
  {
    "text": "and evaluation so here we will pass the annotation data back to BQ and create",
    "start": "1471610",
    "end": "1478180"
  },
  {
    "text": "Charlotte TF record files using data flow so here what we've done is we've",
    "start": "1478180",
    "end": "1484870"
  },
  {
    "text": "created a an additional wrapper around the official kfp component for starting",
    "start": "1484870",
    "end": "1491760"
  },
  {
    "text": "dataflow jobs to use Python 3 and also to fetch the output of dataflow drops",
    "start": "1491760",
    "end": "1497650"
  },
  {
    "text": "and then pass them downstream easily and the final portion of the pipeline is",
    "start": "1497650",
    "end": "1504310"
  },
  {
    "text": "simply a wrapper that starts a stage maker training job and handles",
    "start": "1504310",
    "end": "1512050"
  },
  {
    "text": "customized evaluation and then tries to see if this new classifier can be",
    "start": "1512050",
    "end": "1518770"
  },
  {
    "text": "updated so so overall this is our way of implementing the model improvement",
    "start": "1518770",
    "end": "1525780"
  },
  {
    "text": "workflow and these pipelines are now helping us to improve the production model quality automatically or overtime",
    "start": "1525780",
    "end": "1536370"
  },
  {
    "text": "so for the final part of the talk I'll share some of the pain points we've seen",
    "start": "1536370",
    "end": "1541660"
  },
  {
    "text": "while using loop flow pipelines they are also some of the practice or hacks we've",
    "start": "1541660",
    "end": "1547200"
  },
  {
    "text": "come up with and I personally understand a lot of these ideas are far from ideal",
    "start": "1547200",
    "end": "1553240"
  },
  {
    "text": "so I also want to hear feedback or what other engineers do for to deal with with",
    "start": "1553240",
    "end": "1558610"
  },
  {
    "text": "issues like this so in our original talk proposal the words I've used were we",
    "start": "1558610",
    "end": "1567160"
  },
  {
    "start": "1561000",
    "end": "1561000"
  },
  {
    "text": "will also discuss best practices for include flow pipeline components based on our experiences from developing and",
    "start": "1567160",
    "end": "1574150"
  },
  {
    "text": "deploying these components for production use I would say that's not",
    "start": "1574150",
    "end": "1579160"
  },
  {
    "text": "really the case because when we first adopted coop flow in last year like there are a bunch of issues we are",
    "start": "1579160",
    "end": "1586480"
  },
  {
    "text": "seeing almost every day and we've implemented a bunch of hacks around this and at that time I personally or we",
    "start": "1586480",
    "end": "1593410"
  },
  {
    "text": "personally consider them as best practices after six months or after like 12 months",
    "start": "1593410",
    "end": "1598960"
  },
  {
    "text": "a lot of these things have changed completely and these so called best practices these days are no longer best",
    "start": "1598960",
    "end": "1605710"
  },
  {
    "text": "practices or even practices so basically I think as an engineer I've",
    "start": "1605710",
    "end": "1612010"
  },
  {
    "text": "overestimated what we came up with and I also underestimated under as to under",
    "start": "1612010",
    "end": "1617710"
  },
  {
    "text": "estimated the feature release speeds that the cupola team has like even",
    "start": "1617710",
    "end": "1623650"
  },
  {
    "text": "comparing coop flow now to cooling April where we where we came up with these",
    "start": "1623650",
    "end": "1630870"
  },
  {
    "text": "words here I think I'm definitely already seeing a version that's much easier to use and supports way more",
    "start": "1630870",
    "end": "1637750"
  },
  {
    "text": "features that that I personally consider are extremely important for machine learning experimentation so hats off to",
    "start": "1637750",
    "end": "1644920"
  },
  {
    "text": "the crew protein and that said there are still two issues that I personally I",
    "start": "1644920",
    "end": "1651160"
  },
  {
    "text": "haven't found good official solutions yet so we have proposed some hacks and I",
    "start": "1651160",
    "end": "1657880"
  },
  {
    "text": "want to chat a bit more about some and to share why we're doing things in that",
    "start": "1657880",
    "end": "1663250"
  },
  {
    "start": "1661000",
    "end": "1661000"
  },
  {
    "text": "way the first thing is artifact caching and as I've mentioned before we are",
    "start": "1663250",
    "end": "1668950"
  },
  {
    "text": "basically splitting our entire machine learning workflow into several mini pipelines because we don't have artifact",
    "start": "1668950",
    "end": "1674860"
  },
  {
    "text": "caching the motivation behind artifact caching is very straightforward because",
    "start": "1674860",
    "end": "1681000"
  },
  {
    "text": "if the upstream input hasn't changed if the if the upstream container image",
    "start": "1681000",
    "end": "1686740"
  },
  {
    "text": "hasn't changed arguments hasn't changed we shouldn't need to rerun all the things and hear a",
    "start": "1686740",
    "end": "1691810"
  },
  {
    "text": "very natural assumption is most containers should give you deterministic output and even if we're operating under",
    "start": "1691810",
    "end": "1698380"
  },
  {
    "text": "that assumption but your container gives you non deterministic output we can",
    "start": "1698380",
    "end": "1704110"
  },
  {
    "text": "still always add a placeholder arguments that changes in each one so ideally we",
    "start": "1704110",
    "end": "1712270"
  },
  {
    "text": "think we should need support from our goal or kfe team to handle this but",
    "start": "1712270",
    "end": "1717640"
  },
  {
    "text": "before we have that the hack where we are proposing right now is very simple",
    "start": "1717640",
    "end": "1722800"
  },
  {
    "text": "it's basically a Python decorators that computes a UUID output for G",
    "start": "1722800",
    "end": "1729400"
  },
  {
    "text": "yes pass given the input container arcs as well as your container image tax so",
    "start": "1729400",
    "end": "1735850"
  },
  {
    "text": "basically at one time what's this decorating function does is it checks whether the cache file already exists",
    "start": "1735850",
    "end": "1743380"
  },
  {
    "text": "and the writing operation has already done and if yes it'll it'll skip all the",
    "start": "1743380",
    "end": "1750070"
  },
  {
    "text": "work and it'll simply write KP component outputs based on what is already stored in in the cache as I said what we need",
    "start": "1750070",
    "end": "1759700"
  },
  {
    "text": "as input here would be the image tag and container arcs so we have container arcs",
    "start": "1759700",
    "end": "1766450"
  },
  {
    "text": "easily we don't have image tags but we do need them otherwise if we update the",
    "start": "1766450",
    "end": "1773860"
  },
  {
    "text": "image itself but we don't update input we do want to rerun the whole thing",
    "start": "1773860",
    "end": "1780370"
  },
  {
    "text": "luckily image tag is actually stored as part annotation thing are those so one",
    "start": "1780370",
    "end": "1787360"
  },
  {
    "text": "thing we do is we simply use field reference and pass this metadata",
    "start": "1787360",
    "end": "1795490"
  },
  {
    "text": "annotation down as environment variables to the kfp component pods and that's",
    "start": "1795490",
    "end": "1802390"
  },
  {
    "text": "basically how we get image ID and then do all kind of hash to see if we should",
    "start": "1802390",
    "end": "1807550"
  },
  {
    "text": "escape the computation this approach would work for a bunch of very standard",
    "start": "1807550",
    "end": "1814810"
  },
  {
    "text": "cases but it also has a bunch of drawbacks that I can't really advocate",
    "start": "1814810",
    "end": "1820750"
  },
  {
    "text": "the the first thing here is since we are already passing down additional environment variables in KP for all",
    "start": "1820750",
    "end": "1829200"
  },
  {
    "text": "containers that we have basically what we need to do is we need to wrap the",
    "start": "1829200",
    "end": "1834280"
  },
  {
    "text": "container operator class in KP SDK as well to automatically do all these kind",
    "start": "1834280",
    "end": "1839410"
  },
  {
    "text": "of things because we can't rely on all engineers to do these things in a manual",
    "start": "1839410",
    "end": "1845220"
  },
  {
    "text": "steps and one more thing is it's definitely not language agnostic and",
    "start": "1845220",
    "end": "1851980"
  },
  {
    "text": "then engineers who use other languages need to implement the same functionality in their own way the implementation is",
    "start": "1851980",
    "end": "1859480"
  },
  {
    "text": "highly storage platform dependent as which is also bad because in the newly",
    "start": "1859480",
    "end": "1867840"
  },
  {
    "text": "launched coop lo saying I think they have a new data exchange ways that base",
    "start": "1867840",
    "end": "1874360"
  },
  {
    "text": "that's based on Ming IO so after we updated this new approach stops working",
    "start": "1874360",
    "end": "1882220"
  },
  {
    "text": "and that's one thing I do want to fix also it mayn't work for components that",
    "start": "1882220",
    "end": "1888100"
  },
  {
    "text": "don't have file output and we won't be able to reuse public components online",
    "start": "1888100",
    "end": "1895750"
  },
  {
    "text": "without hacking into the code and making these kind of customized change as well",
    "start": "1895750",
    "end": "1901150"
  },
  {
    "text": "so overall we feel it makes more sense for these kind of artifact caching",
    "start": "1901150",
    "end": "1906309"
  },
  {
    "text": "change to happen in KP backend for sure but if you're eager to implement a hack",
    "start": "1906309",
    "end": "1911320"
  },
  {
    "text": "as a workaround I feel this is the approach that could possibly work for you if you're dealing with standard",
    "start": "1911320",
    "end": "1918360"
  },
  {
    "text": "tasks the other thing I want to share a bit more about is how do we add type",
    "start": "1918360",
    "end": "1924059"
  },
  {
    "start": "1921000",
    "end": "1921000"
  },
  {
    "text": "constraints between different kfp components basically the issue here is",
    "start": "1924059",
    "end": "1931120"
  },
  {
    "text": "after engineers have have contributed to like tens or hundreds of KP components",
    "start": "1931120",
    "end": "1936610"
  },
  {
    "text": "into your component Spore it's not entirely easy for us to know what kind of data each component expects since all",
    "start": "1936610",
    "end": "1945280"
  },
  {
    "text": "of them basically read unstructured data all the time and then parse it in an arbitrary way so this means engineers",
    "start": "1945280",
    "end": "1952390"
  },
  {
    "text": "also in downstream components basically they have no information about what kind of types they are expecting Wow it while",
    "start": "1952390",
    "end": "1960010"
  },
  {
    "text": "implementing their code and this is",
    "start": "1960010",
    "end": "1965409"
  },
  {
    "text": "actually okay if if you're dealing with small-scale pipelines but once your",
    "start": "1965409",
    "end": "1971799"
  },
  {
    "text": "pipeline grows large it becomes unmanageable and our current workaround to this problem is also simple as well",
    "start": "1971799",
    "end": "1979360"
  },
  {
    "text": "so we basically define a shared kfp schema package that centers around each",
    "start": "1979360",
    "end": "1985980"
  },
  {
    "text": "experiment and then all components used in that experiment should import the same kfp schema so basically this",
    "start": "1985980",
    "end": "1994630"
  },
  {
    "text": "package here now forces all components to share the same set of intermediate data typing",
    "start": "1994630",
    "end": "2002370"
  },
  {
    "text": "information however as you may see here this this again means this package",
    "start": "2002370",
    "end": "2008140"
  },
  {
    "text": "itself is not language agnostic for sure we can use protobuf but I feel that's",
    "start": "2008140",
    "end": "2013450"
  },
  {
    "text": "too heavy as well so this means in the long run if we have larger pipelines it",
    "start": "2013450",
    "end": "2020680"
  },
  {
    "text": "will be very hard to handle these changes as well in the past few months I think one of the new features introduced",
    "start": "2020680",
    "end": "2027040"
  },
  {
    "text": "by coop flow team is a new could flow metadata feature and we strongly believe that the information about these meta",
    "start": "2027040",
    "end": "2033940"
  },
  {
    "text": "data should be tracked in other places as well which beings which we shouldn't",
    "start": "2033940",
    "end": "2039910"
  },
  {
    "text": "be tracking these schema information in kfp so in the future what will what will",
    "start": "2039910",
    "end": "2045730"
  },
  {
    "text": "also try to do is to explore this route and see if this will become our holy",
    "start": "2045730",
    "end": "2050950"
  },
  {
    "text": "grail to type management and artifact tracking that actually is the end of my",
    "start": "2050950",
    "end": "2058179"
  },
  {
    "text": "slide and I didn't prepare a thank you and Q&A site but thank you for coming to",
    "start": "2058179",
    "end": "2064270"
  },
  {
    "text": "my talk and [Applause] [Music]",
    "start": "2064270",
    "end": "2069919"
  },
  {
    "text": "so questions and I think it's the coffee",
    "start": "2069919",
    "end": "2076500"
  },
  {
    "text": "break after so I think we could go a little over if baby people don't go mad",
    "start": "2076500",
    "end": "2082849"
  },
  {
    "text": "I'm curious when you mention about the the artifact caching you said that you",
    "start": "2083300",
    "end": "2091320"
  },
  {
    "text": "probably need support from our go for that and I'm curious why the artifact",
    "start": "2091320",
    "end": "2099240"
  },
  {
    "text": "repository that is provided already for our goal is not enough for for the tests",
    "start": "2099240",
    "end": "2105030"
  },
  {
    "text": "that you've been trying to do the",
    "start": "2105030",
    "end": "2110820"
  },
  {
    "text": "question is why does an artifact repository supported by support by our",
    "start": "2110820",
    "end": "2116970"
  },
  {
    "text": "go work for the artifact caching use case correct that's a good question but",
    "start": "2116970",
    "end": "2122910"
  },
  {
    "text": "my next question for you is what is artifact repository like to be honest I",
    "start": "2122910",
    "end": "2132180"
  },
  {
    "text": "mean I yeah so you can in in agro you",
    "start": "2132180",
    "end": "2138869"
  },
  {
    "text": "can configure your artifact repository it could be as three could be oh I see",
    "start": "2138869",
    "end": "2146340"
  },
  {
    "text": "so that part that the thing here is in in terms of that I think that only keeps",
    "start": "2146340",
    "end": "2151830"
  },
  {
    "text": "use a way to automatically store your output into some kind of data storage",
    "start": "2151830",
    "end": "2157650"
  },
  {
    "text": "layer that is configurable but whether that can whether that can escape the",
    "start": "2157650",
    "end": "2164340"
  },
  {
    "text": "computation is another layer of logic that lives independent of that right you",
    "start": "2164340",
    "end": "2171690"
  },
  {
    "text": "mean for input yeah yeah you can definitely bring input from an artifact repository no I mean like even if that's",
    "start": "2171690",
    "end": "2179640"
  },
  {
    "text": "the case does artifact repository matically skip computation if if the",
    "start": "2179640",
    "end": "2187080"
  },
  {
    "text": "input and arguments are the same to learn that no no you definitely need to",
    "start": "2187080",
    "end": "2194820"
  },
  {
    "text": "have some logic there yes so so so cuz I think you still basically need to implement the",
    "start": "2194820",
    "end": "2200660"
  },
  {
    "text": "same hat in your components as well right got it yeah thanks",
    "start": "2200660",
    "end": "2206829"
  }
]