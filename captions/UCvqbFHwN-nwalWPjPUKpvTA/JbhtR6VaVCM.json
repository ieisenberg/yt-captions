[
  {
    "text": "hey everybody we have a lot of material to cover so we're just going to dive in i'm phil from upbound and i'm working on",
    "start": "0",
    "end": "5680"
  },
  {
    "text": "the crossplane project and i'm joined today by sudanva from microsoft who among other things is a contributor to",
    "start": "5680",
    "end": "12000"
  },
  {
    "text": "the homespec which is a collaboration between alibaba microsoft and upbound to build",
    "start": "12000",
    "end": "17760"
  },
  {
    "text": "an open application model for kubernetes and other platforms which makes it easier to get your apps",
    "start": "17760",
    "end": "23039"
  },
  {
    "text": "from dev laptop into production in a team environment in the smoothest way possible",
    "start": "23039",
    "end": "28800"
  },
  {
    "text": "so we're super excited to talk to you today about different approaches to modeling cloud native apps",
    "start": "28800",
    "end": "33840"
  },
  {
    "text": "some of the limitations and trade-offs involved in different approaches and some of the desirable properties you",
    "start": "33840",
    "end": "39200"
  },
  {
    "text": "might look for in an app model so what's in an app model uh typically",
    "start": "39200",
    "end": "44800"
  },
  {
    "text": "it starts off with you know an app dev creating some container images for the front end the back end microservices in",
    "start": "44800",
    "end": "50480"
  },
  {
    "text": "an app and then getting that into kubernetes by defining some workloads which are basically deployments services",
    "start": "50480",
    "end": "56800"
  },
  {
    "text": "ingress config and then you have a question of do i want to run in cluster",
    "start": "56800",
    "end": "62160"
  },
  {
    "text": "stateful services or do i want to use cloud services so i'm not getting a page at 3am for things like",
    "start": "62160",
    "end": "67600"
  },
  {
    "text": "databases and caches and buckets and then there's the configuration of the app whether it be in environment",
    "start": "67600",
    "end": "74799"
  },
  {
    "text": "variables or config maps or secrets to get access to the endpoints that your app needs to use",
    "start": "74799",
    "end": "80720"
  },
  {
    "text": "so then you take that in combination with the ops behavior this can be like auto scaling ingress",
    "start": "80720",
    "end": "86159"
  },
  {
    "text": "config uh security groups uh health monitoring logging all that kind of stuff so that's really what goes into an",
    "start": "86159",
    "end": "93200"
  },
  {
    "text": "application definition and then you can take that content and package it up however you like using",
    "start": "93200",
    "end": "98320"
  },
  {
    "text": "tools like helm uh which is great for you know bundling up a bunch of yaml and templating that um you can you know",
    "start": "98320",
    "end": "104960"
  },
  {
    "text": "take a helm template uh output and pipe it into customize for you know customizing the",
    "start": "104960",
    "end": "110799"
  },
  {
    "text": "configuration there you can bundle that up again into a cnap bundle so lots of ways of",
    "start": "110799",
    "end": "115840"
  },
  {
    "text": "packaging up the app model content and then you'll deploy it via typically imperative pipelines get ops workflows",
    "start": "115840",
    "end": "122560"
  },
  {
    "text": "or even workload scheduling if you're using something like cubefed v2 or similar projects to",
    "start": "122560",
    "end": "128000"
  },
  {
    "text": "schedule an app onto one or more target application clusters",
    "start": "128000",
    "end": "134160"
  },
  {
    "text": "so what does it look like taking an app from the dev laptop into prod typically as an app dev once i have my",
    "start": "135599",
    "end": "141599"
  },
  {
    "text": "container images i might reach for something like a docker compose and so that'll get me up and running on my local dev laptop",
    "start": "141599",
    "end": "148000"
  },
  {
    "text": "pretty quickly um i'll probably be pulling in some in cluster stateful services like postgres",
    "start": "148000",
    "end": "153040"
  },
  {
    "text": "or redis and you know i might even be able to sneak that on to my endeavor test cluster depending on you know the environment",
    "start": "153040",
    "end": "159599"
  },
  {
    "text": "that i'm running in but at a certain point somebody's going to say you know hey look we really should be running uh staging and prod looking very",
    "start": "159599",
    "end": "166720"
  },
  {
    "text": "similar to each other we want to use cloud services and prod all this needs to be in kubernetes and",
    "start": "166720",
    "end": "171840"
  },
  {
    "text": "so you'll typically have like an app ops person helping out to",
    "start": "171840",
    "end": "177120"
  },
  {
    "text": "get all the deployments and the services and the package and you know the delivery and the deployment pipelines configured",
    "start": "177120",
    "end": "183519"
  },
  {
    "text": "gluing everything together including the iic tooling whether using you know terraform or cloud formation or",
    "start": "183519",
    "end": "190159"
  },
  {
    "text": "the you know cloud clis and and then basically getting all the",
    "start": "190159",
    "end": "195519"
  },
  {
    "text": "cloud services provisioned and then you have to get you know the secrets for accessing those",
    "start": "195519",
    "end": "200640"
  },
  {
    "text": "uh cloud services for like your database plumbed into your deployment so there's a lot of like intertwined",
    "start": "200640",
    "end": "206239"
  },
  {
    "text": "um you know collaboration that needs to go on and then you need to layer on top of that you know kind of the auto scaling",
    "start": "206239",
    "end": "212000"
  },
  {
    "text": "behavior um ingress you know the security groups the the health configs and all that kind of",
    "start": "212000",
    "end": "217440"
  },
  {
    "text": "stuff and so what we see in a lot of the folks that we work with and kind of medium and larger companies",
    "start": "217440",
    "end": "224480"
  },
  {
    "text": "is that there's often like a platform ops team or an infrastructure ops team um it's responsible for kind of putting",
    "start": "224480",
    "end": "230480"
  },
  {
    "text": "together like the organizational best practices and security policies and kind of building out this internal cloud",
    "start": "230480",
    "end": "235840"
  },
  {
    "text": "platform that the app teams can use to more efficiently deliver those apps but if you're creating",
    "start": "235840",
    "end": "243120"
  },
  {
    "text": "bespoke infrastructure configurations oftentimes just getting this whole process working can take days or weeks",
    "start": "243120",
    "end": "249840"
  },
  {
    "text": "oftentimes just shy of like a whole month to get all the app config going into um",
    "start": "249840",
    "end": "256160"
  },
  {
    "text": "production in a stable way so it can be a huge you know time sync and definitely not as",
    "start": "256160",
    "end": "262079"
  },
  {
    "text": "efficient as it could be so you know in addition for it just being difficult for devs to get the",
    "start": "262079",
    "end": "268080"
  },
  {
    "text": "apps in into prod um and having these things glued together in in the imperative pipelines is that",
    "start": "268080",
    "end": "274800"
  },
  {
    "text": "you're really gluing together multiple tools and they have multiple management models and multiple representations of state",
    "start": "274800",
    "end": "280639"
  },
  {
    "text": "and oftentimes these are inconsistent across the different environments and so it becomes",
    "start": "280639",
    "end": "286160"
  },
  {
    "text": "increasingly difficult to master the interactions and the failure modes across all these tools um and that typically",
    "start": "286160",
    "end": "292960"
  },
  {
    "text": "results in you know error prone deployments and and difficulty and just being able to understand what's",
    "start": "292960",
    "end": "298400"
  },
  {
    "text": "going on so it creates a lot of friction in the pipeline on top of that",
    "start": "298400",
    "end": "304400"
  },
  {
    "text": "there's often no clear ownership in terms of the various aspects of the app config and the cloud",
    "start": "304400",
    "end": "310000"
  },
  {
    "text": "services and all the interactions between them and so when a change is made in one aspect of the",
    "start": "310000",
    "end": "315759"
  },
  {
    "text": "configuration it can often cause unintended consequences and override behavior in other aspects of",
    "start": "315759",
    "end": "321759"
  },
  {
    "text": "the configuration and often these issues are only found at deploy time and so hopefully most of the time",
    "start": "321759",
    "end": "327759"
  },
  {
    "text": "this is caught like in the staging environment where you just keep turning the crank over and over until",
    "start": "327759",
    "end": "333039"
  },
  {
    "text": "you know you get a successful deploy and then you know roll it out to prod and most of the time that caches most of the issues there but",
    "start": "333039",
    "end": "340560"
  },
  {
    "text": "um you know oftentimes not so i'm definitely some limitations you know with this approach so",
    "start": "340560",
    "end": "348240"
  },
  {
    "text": "so what are we looking for in an app model um you know if you're just running on your local laptop using docker compose is",
    "start": "348240",
    "end": "354400"
  },
  {
    "text": "great um it's a self-contained app model you can use in cluster stateful services and you know life is",
    "start": "354400",
    "end": "360800"
  },
  {
    "text": "good then you need to get it into kubernetes so you know you can use compose with the k",
    "start": "360800",
    "end": "366160"
  },
  {
    "text": "as a tool to convert the docker compose into kubernetes core resources you know that's an option um but really you want to have",
    "start": "366160",
    "end": "373840"
  },
  {
    "text": "you know kind of an authoritative desired state and kind of make your changes and get to those",
    "start": "373840",
    "end": "379120"
  },
  {
    "text": "those resources um and so you know then when you go beyond you",
    "start": "379120",
    "end": "384160"
  },
  {
    "text": "know having in cluster stateful services to cloud services you'll bring in your iac tools your infrastructures",
    "start": "384160",
    "end": "389919"
  },
  {
    "text": "code tools terraform and cloud formation and so forth and that does give you more separation of",
    "start": "389919",
    "end": "395600"
  },
  {
    "text": "concerns um but it doesn't give you a case native declarative management experience",
    "start": "395600",
    "end": "401680"
  },
  {
    "text": "um and and so sometimes uh you know we'll see companies spinning up gui portals for provisioning",
    "start": "401680",
    "end": "406800"
  },
  {
    "text": "infrastructure and that that does you know kind of as an alternative to using the infrastructure's code tools in the",
    "start": "406800",
    "end": "412720"
  },
  {
    "text": "pipelines and that does provide a separation of concerns but it doesn't really",
    "start": "412720",
    "end": "418400"
  },
  {
    "text": "give you something you can automate very easily and it doesn't give you that that kubernetes native experience",
    "start": "418400",
    "end": "425199"
  },
  {
    "text": "so what we've seen come onto the scene here in the last year or two are service",
    "start": "425199",
    "end": "430800"
  },
  {
    "text": "operators here towards the the center and this includes you know gcp config connector",
    "start": "430800",
    "end": "436800"
  },
  {
    "text": "aws service operator azure service operator crossplane providers and what these do",
    "start": "436800",
    "end": "442479"
  },
  {
    "text": "is they bring in the individual cloud services um as kubernetes crds and they're the",
    "start": "442479",
    "end": "447759"
  },
  {
    "text": "low level managed resources that provide a high fidelity representation of that cloud service",
    "start": "447759",
    "end": "453280"
  },
  {
    "text": "so you can drop a kubernetes cr you know custom resource which is just a yaml file for a database or a cache",
    "start": "453280",
    "end": "460479"
  },
  {
    "text": "and it'll go out and provision that for you and some of the service operators do a good job of",
    "start": "460479",
    "end": "466720"
  },
  {
    "text": "letting you just drop an entire config of you know hey if i want a secure database that's production ready and",
    "start": "466720",
    "end": "472400"
  },
  {
    "text": "monitored and all these things i might need you know 5 or 10 or even 15 different resources and so i want to",
    "start": "472400",
    "end": "478319"
  },
  {
    "text": "control apply that entire directory of config and so it does give me a kubernetes native declarative experience",
    "start": "478319",
    "end": "484639"
  },
  {
    "text": "but the separation of concern is still pretty low level so you know if we kind of move up to the",
    "start": "484639",
    "end": "491039"
  },
  {
    "text": "the top another option is just to say i don't want to deal with infrastructure at all um just giving me a platform as a",
    "start": "491039",
    "end": "497360"
  },
  {
    "text": "service give me a pass you know heroku style you know kind of experience and most of these passes are you know",
    "start": "497360",
    "end": "503919"
  },
  {
    "text": "built on kubernetes these days and some aren't i mean you have like cloud foundry and you know they get they migrate over to",
    "start": "503919",
    "end": "509520"
  },
  {
    "text": "kubernetes and you know you have um open shift and then some more you know modern ones you know that",
    "start": "509520",
    "end": "514719"
  },
  {
    "text": "are kind of more container focused with cloud run or fargate or you know azure container um instances",
    "start": "514719",
    "end": "522800"
  },
  {
    "text": "um but at some point you know the the confines of the past don't um",
    "start": "522800",
    "end": "528800"
  },
  {
    "text": "satisfy our requirements and so you know it does a really great job of providing like a highly opinionated way of",
    "start": "528800",
    "end": "535760"
  },
  {
    "text": "building apps and a great developer experience for doing that but when you run into one of those",
    "start": "535760",
    "end": "541600"
  },
  {
    "text": "boundaries passes aren't typically as extensible so that if you want to add you know a",
    "start": "541600",
    "end": "547680"
  },
  {
    "text": "new capability to the past it's kind of going outside of its um boundaries and it's difficult to to",
    "start": "547680",
    "end": "554000"
  },
  {
    "text": "get that extensibility to kind of get exactly the type of platform that meets your organizational needs",
    "start": "554000",
    "end": "559680"
  },
  {
    "text": "um so what we see in a lot of um kind of the the medium to larger companies that we work with is",
    "start": "559680",
    "end": "567040"
  },
  {
    "text": "um you know kind of a internal cloud platform team or a cloud platform or a",
    "start": "567040",
    "end": "572959"
  },
  {
    "text": "platform ops team uh be created with the charter of you know providing these organizational best practices",
    "start": "572959",
    "end": "579200"
  },
  {
    "text": "security policies and a running platform that just makes it easier for app teams to use and then go and get that running",
    "start": "579200",
    "end": "584959"
  },
  {
    "text": "out of the gate and so wouldn't it be cool if you could as a platform team um compose from the",
    "start": "584959",
    "end": "592480"
  },
  {
    "text": "service operators all of um your you know kind of curated",
    "start": "592480",
    "end": "597519"
  },
  {
    "text": "menu of infrastructure that took those you know i want a secure database and just made it available as a building block",
    "start": "597519",
    "end": "604320"
  },
  {
    "text": "to an application and that the app devs could take their container images and publish those",
    "start": "604320",
    "end": "610160"
  },
  {
    "text": "so that those could be used as building blocks and we had this team-centric app model that allowed us to compose together all",
    "start": "610160",
    "end": "616240"
  },
  {
    "text": "of these building blocks and then it would just go through from developer laptop into production in a much more frictionless way",
    "start": "616240",
    "end": "623519"
  },
  {
    "text": "so so that's what we're after and if we look at some of the desirable",
    "start": "623519",
    "end": "628880"
  },
  {
    "text": "properties that you might be interested in when you're you know looking for an app model",
    "start": "628880",
    "end": "634640"
  },
  {
    "text": "and i mean it obviously has to model the entire production application we want that kubernetes style",
    "start": "634640",
    "end": "640880"
  },
  {
    "text": "declarative management so that it keeps trying on our behalf to kind of achieve that desired state and ideally",
    "start": "640880",
    "end": "647440"
  },
  {
    "text": "that should be done with idiomatic kubernetes so when you have things like label selectors and things that you",
    "start": "647440",
    "end": "653120"
  },
  {
    "text": "would expect to be present on a kubernetes resource and following the kubernetes",
    "start": "653120",
    "end": "658399"
  },
  {
    "text": "patterns that that's available in this in this app model and we want a clean",
    "start": "658399",
    "end": "663600"
  },
  {
    "text": "separation of concerns so that the different aspects of the application are in",
    "start": "663600",
    "end": "669120"
  },
  {
    "text": "different resources so that the team can make those changes without having unattended consequences",
    "start": "669120",
    "end": "674160"
  },
  {
    "text": "and having one configuration change override the behavior in another um and ultimately we really want",
    "start": "674160",
    "end": "681040"
  },
  {
    "text": "extensibility via the kubernetes api and we don't want a limiting pass abstraction that's too abstract and not",
    "start": "681040",
    "end": "688720"
  },
  {
    "text": "extensible or a gui portal that doesn't allow us to extend it we want something that says hey if i",
    "start": "688720",
    "end": "694079"
  },
  {
    "text": "want to you know use a new technology in my platform and i want to make that available for use within",
    "start": "694079",
    "end": "699279"
  },
  {
    "text": "my app model i should be able to compose and use any kubernetes crd any kind in my",
    "start": "699279",
    "end": "706160"
  },
  {
    "text": "model definition um and ultimately we want to get this streamlined path from dev laptop to production",
    "start": "706160",
    "end": "712240"
  },
  {
    "text": "so it probably goes without saying but you know we want to be able to use the app model with git",
    "start": "712240",
    "end": "717839"
  },
  {
    "text": "as a source of truth you want to be able to use existing tools like home customize flux and we want to be able to use our",
    "start": "717839",
    "end": "725120"
  },
  {
    "text": "existing deployment workflows so we don't have to you know drop everything that we've done to date um and replace it with you know",
    "start": "725120",
    "end": "731920"
  },
  {
    "text": "the new way of doing it so um if we look at what you know a",
    "start": "731920",
    "end": "737360"
  },
  {
    "text": "modern application looks like this is the simplest possible you know modern application with our php you know web app here",
    "start": "737360",
    "end": "743360"
  },
  {
    "text": "and a redis back end but um those are effectively two components of this simple app",
    "start": "743360",
    "end": "748639"
  },
  {
    "text": "and they have different you know aspects and characteristics in terms of do i want auto scaling manual scaling",
    "start": "748639",
    "end": "754399"
  },
  {
    "text": "you know for my ingress route through my api gateway how do i want that configured which security",
    "start": "754399",
    "end": "759600"
  },
  {
    "text": "group do i want to kind of control you know who has access to what um and on what networks",
    "start": "759600",
    "end": "765279"
  },
  {
    "text": "and so forth um and and so that basically defines you know the app and so if we were to",
    "start": "765279",
    "end": "771120"
  },
  {
    "text": "separate um those aspects into what i want to run",
    "start": "771120",
    "end": "776240"
  },
  {
    "text": "and how i should run it we basically get this separation of concerns and so we have the components the building blocks",
    "start": "776240",
    "end": "783040"
  },
  {
    "text": "on the left hand side that the what to run and then we have the operational configurations on the right hand side",
    "start": "783040",
    "end": "788720"
  },
  {
    "text": "um and this can include you know how i want to go and group and reason about things or operational strategies for",
    "start": "788720",
    "end": "795519"
  },
  {
    "text": "you know how i want to upgrade or how i want to scale so if we look at this in combination",
    "start": "795519",
    "end": "802000"
  },
  {
    "text": "with um you know what we have with the open application model there are five",
    "start": "802000",
    "end": "807680"
  },
  {
    "text": "kinds or resource types so there's a workload which we talked about which",
    "start": "807680",
    "end": "814160"
  },
  {
    "text": "is basically what i want to run there's a component which is an instance of a workload that i can compose into an",
    "start": "814160",
    "end": "819279"
  },
  {
    "text": "application and then there are traits and scopes which are operational behaviors that i can apply",
    "start": "819279",
    "end": "824959"
  },
  {
    "text": "um to a component so i can apply a trait to a component that modifies the behavior and effectively overlays",
    "start": "824959",
    "end": "830480"
  },
  {
    "text": "uh configuration onto that in a defined way and then i have scopes that can basically um group resources together",
    "start": "830480",
    "end": "837760"
  },
  {
    "text": "and i can use that for you know networking scopes or health scopes and these types of things",
    "start": "837760",
    "end": "842880"
  },
  {
    "text": "um and i can put all of that into an app config an application config and then just deploy that and so what",
    "start": "842880",
    "end": "850320"
  },
  {
    "text": "we'll see is that you know with our php app here um you know we have the php as a",
    "start": "850320",
    "end": "855839"
  },
  {
    "text": "workloads container image we have redis which is our you know acme corp you know secure you know scalable redis",
    "start": "855839",
    "end": "862079"
  },
  {
    "text": "um that we've defined that might have you know a handful of resources bundled um into it because we've composed those",
    "start": "862079",
    "end": "867760"
  },
  {
    "text": "together um using crossplane for example and then we have you know traits and",
    "start": "867760",
    "end": "872800"
  },
  {
    "text": "scopes in our app config that are bound to those components that define the operational behavior of the application",
    "start": "872800",
    "end": "880880"
  },
  {
    "text": "and the great thing is is that these are all kubernetes api resources and so i can you know version control i",
    "start": "880880",
    "end": "888000"
  },
  {
    "text": "can use um get ops i get all the benefits of you know being able to use all the tooling that",
    "start": "888000",
    "end": "893440"
  },
  {
    "text": "works with the kubernetes api and not just cubecontrol or you know",
    "start": "893440",
    "end": "898639"
  },
  {
    "text": "customize you know and kind of modifying those resources um but even things like the terraform kubernetes operator",
    "start": "898639",
    "end": "904959"
  },
  {
    "text": "right i mean i can use any existing tooling that i want um since it's based around the",
    "start": "904959",
    "end": "910240"
  },
  {
    "text": "kubernetes api and so when we look at the separation of concerns across you know these different",
    "start": "910240",
    "end": "916480"
  },
  {
    "text": "roles um you know the app dev can create their building blocks the container images for their you know web ui their service you",
    "start": "916480",
    "end": "922720"
  },
  {
    "text": "know apis uh the platform ops team can create their infrastructure",
    "start": "922720",
    "end": "928000"
  },
  {
    "text": "um composite resource definitions uh i wanna secure postgres you know on a scalable redis",
    "start": "928000",
    "end": "933680"
  },
  {
    "text": "and then i'm gonna go ahead and compose those um so that they're easy to consume building blocks that an",
    "start": "933680",
    "end": "939120"
  },
  {
    "text": "app-ops person or you know role can compose into an application configuration by dropping",
    "start": "939120",
    "end": "944800"
  },
  {
    "text": "components in there and then associating traits and scopes to those components",
    "start": "944800",
    "end": "950720"
  },
  {
    "text": "so i'm going to hand this off to sudanva who's going to walk us through using crossplane and ohm to deploy a",
    "start": "950959",
    "end": "957199"
  },
  {
    "text": "kubernetes app with cloud services entirely from the kubernetes api",
    "start": "957199",
    "end": "962880"
  },
  {
    "text": "thanks phil so what i'm going to show is how we're going to deploy these this micro service based application that's",
    "start": "963680",
    "end": "970000"
  },
  {
    "text": "backed by postgres sql to a kubernetes cluster using ohm and crossplane so we're going",
    "start": "970000",
    "end": "975519"
  },
  {
    "text": "to use crossplane to deal with all things infrastructure so crossplane is going to manage the connection to our backend azure cloud",
    "start": "975519",
    "end": "982560"
  },
  {
    "text": "provider it's going to be responsible for exposing uh the infrastructure resources that are available to the application",
    "start": "982560",
    "end": "989040"
  },
  {
    "text": "developers and operators and then we're going to lay our own on top of crossplane so that the developers",
    "start": "989040",
    "end": "994639"
  },
  {
    "text": "and app ops people can just deal with the application constructs and i'm going to try to do this all in a",
    "start": "994639",
    "end": "1000480"
  },
  {
    "text": "live demo so i'm just going to share my screen and we're going to run through things",
    "start": "1000480",
    "end": "1006800"
  },
  {
    "text": "so first i'm going to run through what it looks like from an infrastructure operator's perspective",
    "start": "1007680",
    "end": "1012959"
  },
  {
    "text": "so i've cheated a little bit and i've already got a kubernetes cluster on my machine powered by kind and on it i have",
    "start": "1012959",
    "end": "1019360"
  },
  {
    "text": "installed crossplane and crossplane is going to be the control plane that's going to manage all of my infrastructure for me",
    "start": "1019360",
    "end": "1025120"
  },
  {
    "text": "so if i do a kubernetes get cross plane i can look at and see that i've configured the",
    "start": "1025120",
    "end": "1030240"
  },
  {
    "text": "backend azure provider already next my goal is to expose the",
    "start": "1030240",
    "end": "1035839"
  },
  {
    "text": "infrastructure definitions that i want my application operators and developers to use",
    "start": "1035839",
    "end": "1041199"
  },
  {
    "text": "now because i know the microservice application uses postgres i'm going to go ahead and create",
    "start": "1041199",
    "end": "1046480"
  },
  {
    "text": "something called an infrastructure definition which is the thing that acts as the",
    "start": "1046480",
    "end": "1051520"
  },
  {
    "text": "schema for the postgres sql instance so here i'm defining the schema for what",
    "start": "1051520",
    "end": "1057280"
  },
  {
    "text": "the postgresql instance looks like and what needs to be declared when i'm creating postgres",
    "start": "1057280",
    "end": "1063600"
  },
  {
    "text": "so to apply this because it's a kubernetes resource i can apply apply this just",
    "start": "1063600",
    "end": "1069120"
  },
  {
    "text": "like i would any other kubernetes resource so i go ahead and do cuddle apply",
    "start": "1069120",
    "end": "1075520"
  },
  {
    "text": "and it gets created next the schema is created but i still want to expose this to developers and",
    "start": "1075520",
    "end": "1081679"
  },
  {
    "text": "operators and that's where the infrastructure publication comes in the infrastructure publication",
    "start": "1081679",
    "end": "1087280"
  },
  {
    "text": "makes sure that the infrastructure definition i created is actually available to the operators and developers and",
    "start": "1087280",
    "end": "1094880"
  },
  {
    "text": "likewise this is also something that i can just do a group cuddle apply to",
    "start": "1094880",
    "end": "1099919"
  },
  {
    "text": "the third bit of infrastructure and the part that i find the coolest and where crossplane really kicks in is something",
    "start": "1101600",
    "end": "1107039"
  },
  {
    "text": "called a composition a composition is the thing that takes different infrastructure components",
    "start": "1107039",
    "end": "1112559"
  },
  {
    "text": "and puts them together into one unit so in this case because i'm using the azure provider i",
    "start": "1112559",
    "end": "1119200"
  },
  {
    "text": "know that azure has a few things that i need to declare in order for me to get postgres i need to create something called the",
    "start": "1119200",
    "end": "1125440"
  },
  {
    "text": "resource group the actual postgres sql server itself and the postgres firewall rules instead",
    "start": "1125440",
    "end": "1132240"
  },
  {
    "text": "of dealing with all of these separately i can create something called a composition which puts all of these",
    "start": "1132240",
    "end": "1138240"
  },
  {
    "text": "together and applies labels so this is easily available to my developers and operators when they",
    "start": "1138240",
    "end": "1143760"
  },
  {
    "text": "declare it as a requirement so i'm going to go ahead and do the same thing which is apply",
    "start": "1143760",
    "end": "1150000"
  },
  {
    "text": "this particular composition now at this point this is available for operators and",
    "start": "1150000",
    "end": "1156160"
  },
  {
    "text": "developers to use and they can declare a postgres sql instance as a requirement in their apps",
    "start": "1156160",
    "end": "1162080"
  },
  {
    "text": "and crossplan is going to go ahead and ensure the right things are provisioned in the backend provider which in this",
    "start": "1162080",
    "end": "1167200"
  },
  {
    "text": "case is azure the last step for the application for",
    "start": "1167200",
    "end": "1172799"
  },
  {
    "text": "the infrastructure operators is to expose the necessary workload definitions and trade definitions",
    "start": "1172799",
    "end": "1178480"
  },
  {
    "text": "now these are own concepts in ohm a workload definition is",
    "start": "1178480",
    "end": "1184400"
  },
  {
    "text": "something that the infrastructure operator can expose for app devs to actually run an instance of something in this case",
    "start": "1184400",
    "end": "1190960"
  },
  {
    "text": "those are containerized workloads and a postgres sql instance so the infrastructure operator is saying",
    "start": "1190960",
    "end": "1196799"
  },
  {
    "text": "hey on this particular environment you can run containers and you can run postgresql instances",
    "start": "1196799",
    "end": "1203440"
  },
  {
    "text": "traits in ohm augment the way certain workloads run and in this case the only trait i'm",
    "start": "1203440",
    "end": "1209200"
  },
  {
    "text": "exposing is something called as a manual scalar trait and let's go ahead and see what that",
    "start": "1209200",
    "end": "1215440"
  },
  {
    "text": "does uh when we get to the actual components in ohm so this is the last step for the infrastructure operator",
    "start": "1215440",
    "end": "1221919"
  },
  {
    "text": "is making sure that the necessary workloads are actually exposed",
    "start": "1221919",
    "end": "1227440"
  },
  {
    "text": "next we're going to transition and look at what the application developer has to do as phil mentioned the application",
    "start": "1227440",
    "end": "1233840"
  },
  {
    "text": "developer is responsible for prescribing what needs to run so because i'm running five micro services",
    "start": "1233840",
    "end": "1240159"
  },
  {
    "text": "i'm going to declare each of those as an home component within those components you'll notice",
    "start": "1240159",
    "end": "1245600"
  },
  {
    "text": "that i have a kind here for the workload so this is a kind postgres sql instance",
    "start": "1245600",
    "end": "1251120"
  },
  {
    "text": "requirement which tells crossplane that in order to run this component you need to go ahead and actually create",
    "start": "1251120",
    "end": "1257120"
  },
  {
    "text": "something in azure that is a postgresql instance if you look at all the other",
    "start": "1257120",
    "end": "1262480"
  },
  {
    "text": "components that i'm creating they're all of type containerized workload",
    "start": "1262480",
    "end": "1267600"
  },
  {
    "text": "there are two things that i want to call out here one is in the component i'm specifically calling out how much",
    "start": "1267600",
    "end": "1273280"
  },
  {
    "text": "storage i need and if i go back to the infrastructure definition you'll notice that that's something that",
    "start": "1273280",
    "end": "1278640"
  },
  {
    "text": "was required the other thing i want to call out is there are certain parameters that the",
    "start": "1278640",
    "end": "1284480"
  },
  {
    "text": "application developer exposes in a component and these parameters are something the operator operator can take and override",
    "start": "1284480",
    "end": "1292080"
  },
  {
    "text": "so they can configure how certain things run so in this case you want to make sure that things like the database",
    "start": "1292080",
    "end": "1297440"
  },
  {
    "text": "secret are something that you absolutely need so you can connect to the database but the operator probably",
    "start": "1297440",
    "end": "1302559"
  },
  {
    "text": "knows which secrets to use in various environments so as a developer",
    "start": "1302559",
    "end": "1307919"
  },
  {
    "text": "you're still going to apply this particular spec to the cluster so these components are",
    "start": "1307919",
    "end": "1313039"
  },
  {
    "text": "available to actually create an application now at the start i did a get kdf",
    "start": "1313039",
    "end": "1319200"
  },
  {
    "text": "crossplane which showed what crossplane is managing if you take a look at this command now you'll see that there's a lot more",
    "start": "1319200",
    "end": "1324559"
  },
  {
    "text": "things that crossbones looking after instead of just the provider all the infrastructure publication the",
    "start": "1324559",
    "end": "1330400"
  },
  {
    "text": "definition and all the ohm constructs from trade definitions to components are things that cross planes actually",
    "start": "1330400",
    "end": "1336799"
  },
  {
    "text": "managing if i do a keg at pods you'll notice that there's still nothing running",
    "start": "1336799",
    "end": "1341919"
  },
  {
    "text": "everything's declared but nothing's actually running out quite yet to get things running we shipped over to",
    "start": "1341919",
    "end": "1348080"
  },
  {
    "text": "the app office persona these personas don't necessarily need to be different people but",
    "start": "1348080",
    "end": "1353120"
  },
  {
    "text": "they are separate tasks that are streamlined for each persona so in the application configuration i'm",
    "start": "1353120",
    "end": "1359919"
  },
  {
    "text": "creating instances of each component providing the necessary parameters that were exposed by the developer",
    "start": "1359919",
    "end": "1366480"
  },
  {
    "text": "and applying any traits that i want to do so remember that the infrastructure operator",
    "start": "1366480",
    "end": "1371520"
  },
  {
    "text": "exposed the manual scalar trait definition that means that an operator can apply this",
    "start": "1371520",
    "end": "1376640"
  },
  {
    "text": "to configure how many replicas each components run in in a staging environment you might not care about the number of replicas but in",
    "start": "1376640",
    "end": "1383360"
  },
  {
    "text": "pride you probably want to set it to something that is safe so when i go ahead and",
    "start": "1383360",
    "end": "1388960"
  },
  {
    "text": "apply this configuration we should start seeing all of the pods spinning up on our kind cluster",
    "start": "1388960",
    "end": "1396880"
  },
  {
    "text": "so we're just going to put a watch on this that data api microservice connects to back-end postgres",
    "start": "1399440",
    "end": "1404880"
  },
  {
    "text": "which in azure takes some time to come up so while that spins up i'm just going to stop sharing my screen",
    "start": "1404880",
    "end": "1411120"
  },
  {
    "text": "and run through the rest of the slides this should take around four minutes so we'll come back in in four minutes for",
    "start": "1411120",
    "end": "1416720"
  },
  {
    "text": "this",
    "start": "1416720",
    "end": "1418880"
  },
  {
    "text": "so i want to go ahead and talk about the the kubernetes app model and what the ecosystem looks like we created",
    "start": "1425279",
    "end": "1431840"
  },
  {
    "text": "a magic quadrant based on what phil mentioned earlier uh where the y-axis is really the separation of concerns and the x is",
    "start": "1431840",
    "end": "1437919"
  },
  {
    "text": "talking about how kubernetes native the tools are we have docker compose which is a fantastic tool",
    "start": "1437919",
    "end": "1443919"
  },
  {
    "text": "for entry-level developers and also just as a low barrier of entry into the container and kubernetes ecosystem",
    "start": "1443919",
    "end": "1450000"
  },
  {
    "text": "here there's not much of a separation of concerns but if you're coming into the kubernetes ecosystem docker compose is probably",
    "start": "1450000",
    "end": "1456240"
  },
  {
    "text": "something you're going to use initially next we have tools such as terraform cloud formation",
    "start": "1456240",
    "end": "1463120"
  },
  {
    "text": "and arm which are all infrastructures code tools and here you can describe your kubernetes core resources",
    "start": "1463120",
    "end": "1469120"
  },
  {
    "text": "and it's a step towards having a separation of concerns and it's not quite kubernetes native yet",
    "start": "1469120",
    "end": "1474480"
  },
  {
    "text": "but it is declarative if you go further down the x-axis this",
    "start": "1474480",
    "end": "1479679"
  },
  {
    "text": "is where you get the kubernetes resources and the service operators that phil mentioned earlier so here everything is a core kubernetes",
    "start": "1479679",
    "end": "1487039"
  },
  {
    "text": "resource whether it's stuff that the clouds are representing as kubernetes crds or kubernetes core resources themselves",
    "start": "1487039",
    "end": "1495360"
  },
  {
    "text": "the small problem with this is that there's no separation of concerns so everything here is exposed for anybody so this is where",
    "start": "1495360",
    "end": "1502720"
  },
  {
    "text": "you level up into tools such as the kubernetes or the cross plane composition which looks at combining a bunch of",
    "start": "1502720",
    "end": "1509039"
  },
  {
    "text": "infrastructure together to create compositions what crossplane does with composition is",
    "start": "1509039",
    "end": "1514320"
  },
  {
    "text": "gives an abstraction for platform ops people to interact with compositions instead of a bunch of infrastructure",
    "start": "1514320",
    "end": "1520320"
  },
  {
    "text": "with various providers when you layer ohm on top of crossplane it creates a natural abstraction layer",
    "start": "1520320",
    "end": "1527200"
  },
  {
    "text": "between infraops appops and appdev",
    "start": "1527200",
    "end": "1532000"
  },
  {
    "text": "i want to touch a little bit on where the community started and what's coming up next so when microsoft initially kick-started",
    "start": "1534559",
    "end": "1541520"
  },
  {
    "text": "this project i think it was at the beginning of last year we partnered with alibaba cloud to create the spec and soon after upbond",
    "start": "1541520",
    "end": "1549440"
  },
  {
    "text": "joined with its crossplane folks to actually contribute to the specification we've been very involved in the sig app",
    "start": "1549440",
    "end": "1556720"
  },
  {
    "text": "delivery sig which is part of the cncf and crossplane was recently submitted as a cncf sandbox project",
    "start": "1556720",
    "end": "1563600"
  },
  {
    "text": "when crossplan joined we quickly recognized uh the powers of these two projects together and we made playing the kubernetes",
    "start": "1563600",
    "end": "1570000"
  },
  {
    "text": "implementation of all om is definitely in its early stages and",
    "start": "1570000",
    "end": "1575520"
  },
  {
    "text": "one thing i want to call out is when crossplane joined us we actually changed the spec up a large",
    "start": "1575520",
    "end": "1581279"
  },
  {
    "text": "amount from what it was before they joined to what it was after so there's still a long ways to go and there's still",
    "start": "1581279",
    "end": "1587440"
  },
  {
    "text": "a lot more contribution that we can take from people across the ecosystem and really just a call to action to come",
    "start": "1587440",
    "end": "1593760"
  },
  {
    "text": "join the community and help us improve um app development in in the ecosystem",
    "start": "1593760",
    "end": "1600640"
  },
  {
    "text": "i want to quickly check on the demo uh and and put a wrap on it before i move on with the slides",
    "start": "1600640",
    "end": "1607919"
  },
  {
    "text": "so if i do a query get pods now you'll see that the data service is connected uh all of the demos and if i go to the",
    "start": "1611520",
    "end": "1617600"
  },
  {
    "text": "azure portal and i do a refresh you'll see that crossplane has now provisioned a postgres sql instance in",
    "start": "1617600",
    "end": "1622880"
  },
  {
    "text": "azure for me the demo steps that i followed were right from the cross plane dock so it's nothing magical i'm going to do a",
    "start": "1622880",
    "end": "1631200"
  },
  {
    "text": "port forward um to make sure that things are listening",
    "start": "1631200",
    "end": "1636559"
  },
  {
    "text": "sorry i already had opened it from an earlier demo",
    "start": "1638840",
    "end": "1646080"
  },
  {
    "text": "so now if i hit the localhost 880 you'll see that the service comes up i can just do a refresh on the flights",
    "start": "1646399",
    "end": "1652000"
  },
  {
    "text": "data see what kind of flights are running across the states in the world right now um i think this is the service",
    "start": "1652000",
    "end": "1657679"
  },
  {
    "text": "that takes the longest to pull um i should have done weathers for for one that was quicker",
    "start": "1657679",
    "end": "1669840"
  },
  {
    "text": "you switch to others actually there you go so you can take a look at",
    "start": "1671360",
    "end": "1678399"
  },
  {
    "text": "the weather uh across the states and the world it's very high across the us so that just puts a wrap on the demo so what we",
    "start": "1678399",
    "end": "1684320"
  },
  {
    "text": "saw there was how you can compose a microservice based application using crossfling to abstract the",
    "start": "1684320",
    "end": "1690320"
  },
  {
    "text": "infrastructure concepts away from the platform team and then ohm to create that division between app ops and app devs",
    "start": "1690320",
    "end": "1698000"
  },
  {
    "text": "here are some links to get involved with us uh om.dev is a great link that has the rest of the links like the community uh",
    "start": "1702799",
    "end": "1709679"
  },
  {
    "text": "sessions uh our email list our slack channels crossplan has its own community um with",
    "start": "1709679",
    "end": "1715840"
  },
  {
    "text": "its own slack it has it has its github page and the last thing i want to call out is that there",
    "start": "1715840",
    "end": "1721760"
  },
  {
    "text": "are two other talks that are happening at kubecon europe or coupon virtual i don't know what to call it anymore um",
    "start": "1721760",
    "end": "1728159"
  },
  {
    "text": "one of them is a panel that's being ran by the folks who created helm and some of the folks who created um",
    "start": "1728159",
    "end": "1736799"
  },
  {
    "text": "a lot of the contributions to kubernetes ecosystem and then we also have another one by uh upbound and alibaba talking about om",
    "start": "1736799",
    "end": "1744399"
  },
  {
    "text": "and crossplan there as well and its partnership with alibaba and with that i want to kick off the q a",
    "start": "1744399",
    "end": "1750880"
  },
  {
    "text": "session and uh phil and i are happy to answer any questions you folks have on either ohm crossplane",
    "start": "1750880",
    "end": "1756960"
  },
  {
    "text": "the partnership or anything around apps across the ecosystem thanks for the talk and look forward to",
    "start": "1756960",
    "end": "1764840"
  },
  {
    "text": "questions",
    "start": "1764840",
    "end": "1767840"
  },
  {
    "text": "great thanks to dhanva so we do have um a ton of questions um on the uh on the talk here so the first",
    "start": "1771600",
    "end": "1778799"
  },
  {
    "text": "one is you know for services to leverage the operator do they need to host services in kubernetes",
    "start": "1778799",
    "end": "1784399"
  },
  {
    "text": "um and so crossplanes from the creators of of rook and so you know we we do support um",
    "start": "1784399",
    "end": "1790559"
  },
  {
    "text": "like in cluster um but we mainly focus on managed services or cloud services",
    "start": "1790559",
    "end": "1796320"
  },
  {
    "text": "that you want to provision from aws or azure alibaba gcp and so we have providers for all of",
    "start": "1796320",
    "end": "1803520"
  },
  {
    "text": "those and there's more on the way and that basically enables you to provision those managed services or",
    "start": "1803520",
    "end": "1809360"
  },
  {
    "text": "those cloud services from the kubernetes api um and so you can just drop in you know",
    "start": "1809360",
    "end": "1814720"
  },
  {
    "text": "like a simple yaml declared a vmo file and then provision alongside your applications",
    "start": "1814720",
    "end": "1820320"
  },
  {
    "text": "whatever infrastructure your applications need and then that will go on through cross",
    "start": "1820320",
    "end": "1825520"
  },
  {
    "text": "plane reach out to your cloud provider and provision those and then basically bring the secrets",
    "start": "1825520",
    "end": "1830799"
  },
  {
    "text": "down and then allow you to consume those services from your kubernetes applications um",
    "start": "1830799",
    "end": "1838399"
  },
  {
    "text": "so great question there um there was another one about i saw that crossplane is a controller",
    "start": "1838399",
    "end": "1844960"
  },
  {
    "text": "operator project um so have you thought about providing it via operator hub um and yes so if you go to",
    "start": "1844960",
    "end": "1851880"
  },
  {
    "text": "blog.crossplane.io um it's the third blog down and we talk about how crossplane has been published",
    "start": "1851880",
    "end": "1857279"
  },
  {
    "text": "operator hub already and there's an integration with openshift there that makes some of the managed services available",
    "start": "1857279",
    "end": "1863120"
  },
  {
    "text": "so you can you know use cross plane for provisioning your managed services from your cloud provider um and so i definitely recommend",
    "start": "1863120",
    "end": "1869760"
  },
  {
    "text": "checking that out for more detail but um when i think about cross plane there's really like three layers",
    "start": "1869760",
    "end": "1875679"
  },
  {
    "text": "and there's the the base layer that provides the primitives those are the cross plane providers and then there's cross plane composition",
    "start": "1875679",
    "end": "1882799"
  },
  {
    "text": "which sits on top which allows you to compose without writing any code all of those primitives into your own",
    "start": "1882799",
    "end": "1888159"
  },
  {
    "text": "infrastructure abstractions your own platform apis and then you can publish those as ohm um",
    "start": "1888159",
    "end": "1894799"
  },
  {
    "text": "open application model workloads that can then be consumed and composed into an home application",
    "start": "1894799",
    "end": "1900960"
  },
  {
    "text": "and this is all designed to be layered so and you can mix and match whatever you want so you can just use",
    "start": "1900960",
    "end": "1906480"
  },
  {
    "text": "the providers at the base layer you can use composition you can use them by itself or you can use all of them in combination with each other so",
    "start": "1906480",
    "end": "1912640"
  },
  {
    "text": "yeah good good question um how would you version the component",
    "start": "1912640",
    "end": "1918720"
  },
  {
    "text": "templates that developers can use and have to fill in they need to be updated regularly um that's when that that's what's the",
    "start": "1918720",
    "end": "1925600"
  },
  {
    "text": "benefit over using cdk to define applications um from some full templates functions",
    "start": "1925600",
    "end": "1931360"
  },
  {
    "text": "yeah so it's a great question about cdk and there's also kind of an offshoot called cdks",
    "start": "1931360",
    "end": "1936559"
  },
  {
    "text": "and so we're actually working with a lot from cdks to look at providing more than just like the",
    "start": "1936559",
    "end": "1943200"
  },
  {
    "text": "yaml-based composition that we support today but actually being able to run other types of compositions from behind the kubernetes",
    "start": "1943200",
    "end": "1950080"
  },
  {
    "text": "api line and so that will allow you to use like a cdks program",
    "start": "1950080",
    "end": "1955360"
  },
  {
    "text": "that would compose you know your infrastructure resources and then basically have that output um",
    "start": "1955360",
    "end": "1962399"
  },
  {
    "text": "the kubernetes resources directly there that would be made up of cross-plane primitives and so then um you can basically use those and",
    "start": "1962399",
    "end": "1969279"
  },
  {
    "text": "and then the really beautiful thing about being behind the kubernetes api is is that if one person you know writes a great",
    "start": "1969279",
    "end": "1974720"
  },
  {
    "text": "composition in cdks and then publishes that that you can then compose it you know using the the standard yaml",
    "start": "1974720",
    "end": "1981039"
  },
  {
    "text": "composition or other tooling um and so definitely you know having this uh automation run",
    "start": "1981039",
    "end": "1986799"
  },
  {
    "text": "behind the kubernetes api line makes it open to the entire kubernetes ecosystem and that's something that's",
    "start": "1986799",
    "end": "1992960"
  },
  {
    "text": "fairly unique to how cross-plan approaches the problem",
    "start": "1992960",
    "end": "1998080"
  },
  {
    "text": "and then also if you go to the blog.crossplaneio and you go to the most recent blog post",
    "start": "1998320",
    "end": "2003679"
  },
  {
    "text": "about v0.12 that'll run you through um crossplane composition um the primitives the additional support for",
    "start": "2003679",
    "end": "2010080"
  },
  {
    "text": "aws services that we added a whole whole bunch more great kind of crd docs there from from",
    "start": "2010080",
    "end": "2015600"
  },
  {
    "text": "and um a lot of great info there uh when will crossplane own be ready for",
    "start": "2015600",
    "end": "2020720"
  },
  {
    "text": "production uh both terraform and cross planer v0.12 but in terms of functionality uh transformations and ecosystem cloud",
    "start": "2020720",
    "end": "2027440"
  },
  {
    "text": "providers the difference is huge yeah so this is a great question when we get a lot uh there are some folks that",
    "start": "2027440",
    "end": "2033440"
  },
  {
    "text": "are starting to use crossplane in production uh now um and we're rapidly going",
    "start": "2033440",
    "end": "2038480"
  },
  {
    "text": "towards one own so we'd like to get a couple more um you know production deployments under the belt before we call it one now",
    "start": "2038480",
    "end": "2044399"
  },
  {
    "text": "um but we're basically moving from uh alpha one uh v one alpha one to v one beta one for",
    "start": "2044399",
    "end": "2050638"
  },
  {
    "text": "composition um so that's uh basically um ready ready for use now kind of in an evaluative",
    "start": "2050639",
    "end": "2056960"
  },
  {
    "text": "mode and then um in the next uh month or so we're basically gonna get that to v one beta one",
    "start": "2056960",
    "end": "2062878"
  },
  {
    "text": "and so um for ohm that's similarly progressing and so definitely by end of the year i'm",
    "start": "2062879",
    "end": "2069200"
  },
  {
    "text": "expecting to to be one oh but um potentially sooner so yeah that's kind of where we're at with",
    "start": "2069200",
    "end": "2075280"
  },
  {
    "text": "with that and definitely encourage everybody to join uh crossplane slack so it's just uh and there's the ohm channel in cross plane",
    "start": "2075280",
    "end": "2081839"
  },
  {
    "text": "slack that if you have questions about um uh folks from microsoft and alibaba are there along with the folks from upbound um so",
    "start": "2081839",
    "end": "2089760"
  },
  {
    "text": "um yeah definitely if you have additional questions about specific things or like when support is going to be added in for um like",
    "start": "2089760",
    "end": "2097040"
  },
  {
    "text": "scopes for networking and health scopes and stuff like that i don't know um you can definitely drop in there um",
    "start": "2097040",
    "end": "2103599"
  },
  {
    "text": "so let's go ahead um on on the chat i think there's one",
    "start": "2103599",
    "end": "2110000"
  },
  {
    "text": "from rasuki around a really good question actually around how operators are different from developers in this case",
    "start": "2110000",
    "end": "2115359"
  },
  {
    "text": "but the industry is moving towards you know these two folks being the same persona so in such a scenario how does this help",
    "start": "2115359",
    "end": "2121520"
  },
  {
    "text": "um i did respond to to the question um in the chat to check that out because you only have like 30 seconds but super quick i think ohm um doesn't",
    "start": "2121520",
    "end": "2128880"
  },
  {
    "text": "necessarily um state that these two personas need to be different um they could be the same",
    "start": "2128880",
    "end": "2134000"
  },
  {
    "text": "person just the tasks are different and kind of clearly um delineated so they can focus on the right things and also this",
    "start": "2134000",
    "end": "2140560"
  },
  {
    "text": "these two technologies kind of set up the platform for you know uh services in in the cloud or",
    "start": "2140560",
    "end": "2146400"
  },
  {
    "text": "third-party where the infrastructure's hidden and at that point you're only dealing with application constructs so",
    "start": "2146400",
    "end": "2152640"
  },
  {
    "text": "that's how it's supposed to help developers and kind of this whole devops persona that's being created um",
    "start": "2152640",
    "end": "2159839"
  },
  {
    "text": "yeah exactly that wraps it up actually okay over time okay great thanks",
    "start": "2159839",
    "end": "2167599"
  },
  {
    "text": "well thanks for joining and uh we'll see you all online",
    "start": "2167599",
    "end": "2173440"
  }
]