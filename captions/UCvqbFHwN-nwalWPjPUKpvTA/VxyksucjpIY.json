[
  {
    "text": "so welcome to our next session which is partial multi- tendency with stmy and",
    "start": "199",
    "end": "6720"
  },
  {
    "text": "we've got Colt mcne here to talk about that so throughout this session if you",
    "start": "6720",
    "end": "12000"
  },
  {
    "text": "have any questions then please use the Q&A in Bevy and at the end of the",
    "start": "12000",
    "end": "17439"
  },
  {
    "text": "session I'll pop up and ask any of those questions to Colt as well so with that",
    "start": "17439",
    "end": "23199"
  },
  {
    "text": "I'll hand over to you all right well um thanks for taking the time to join and I",
    "start": "23199",
    "end": "28279"
  },
  {
    "text": "appreciate the introduction Kate um great to be here I'm a huge fan of shmy it's been absolutely fantastic to use it",
    "start": "28279",
    "end": "35160"
  },
  {
    "text": "and today we're going to talk a little bit about how we use it at little horse um so uh first we're gonna uh use",
    "start": "35160",
    "end": "42680"
  },
  {
    "text": "a case study we're going to talk about how at little horse Cloud we're going to use stmy and why we're not going to",
    "start": "42680",
    "end": "48399"
  },
  {
    "text": "spend too much time on that but we're going to get into some really cool details about how you can use stmy to",
    "start": "48399",
    "end": "53520"
  },
  {
    "text": "help with things like topic management encryption Access Control uh quota",
    "start": "53520",
    "end": "58719"
  },
  {
    "text": "enforcement and day two operations so uh to quote Anakin",
    "start": "58719",
    "end": "63879"
  },
  {
    "text": "Skywalker we're going to bring peace freedom justice and security to our shared Kafka cluster and then we're also",
    "start": "63879",
    "end": "70040"
  },
  {
    "text": "going to bring balance to the force so uh topic management gives you the freedom to create topics for different",
    "start": "70040",
    "end": "75880"
  },
  {
    "text": "teams uh encryption gives you security access control gives you justice to make sure that no one reads data that they",
    "start": "75880",
    "end": "81560"
  },
  {
    "text": "shouldn't read um noisy neighbors so quota enforcement gives you peace and",
    "start": "81560",
    "end": "87000"
  },
  {
    "text": "cluster balancing brings balance to the force so that's the theme of of today's topic uh is is how you can use streamy",
    "start": "87000",
    "end": "93759"
  },
  {
    "text": "to accomplish these goals so to start uh we're going to use little horse as a case study this is not",
    "start": "93759",
    "end": "99479"
  },
  {
    "text": "a presentation about little horse so I'm only going to spend 30 seconds on it but little horse is a workflow engine for coordinating",
    "start": "99479",
    "end": "105000"
  },
  {
    "text": "microservices it's very upand cominging we're a new startup the idea is to make it easier to coordinate transactions",
    "start": "105000",
    "end": "111119"
  },
  {
    "text": "across different microservices it's kind of a a smart message router between services or a central nervous system",
    "start": "111119",
    "end": "117079"
  },
  {
    "text": "between your software applications and one thing about little horse is that the little horse server",
    "start": "117079",
    "end": "122759"
  },
  {
    "text": "requires Kafka in order to run which makes it actually a really interesting case study for for shmy because we want",
    "start": "122759",
    "end": "129599"
  },
  {
    "text": "to run many different little horse clusters uh because we're going to have many different customers and we're going",
    "start": "129599",
    "end": "135000"
  },
  {
    "text": "to need to be able to uh enforce do that in a secure manner so we're going to talk today about how little horse uses",
    "start": "135000",
    "end": "141599"
  },
  {
    "text": "shmy to safely share a a Kafka cluster uh inside our walls across many",
    "start": "141599",
    "end": "147400"
  },
  {
    "text": "different little horse servers so so uh we have various flavors of little horse Cloud where little horse",
    "start": "147400",
    "end": "153959"
  },
  {
    "text": "cloud is a cloud service where our customers can access little horse and one of those flavors is called little",
    "start": "153959",
    "end": "160159"
  },
  {
    "text": "horse Cloud Enterprise in which case you are given a a your own private dedicated",
    "start": "160159",
    "end": "165560"
  },
  {
    "text": "little horse server but it's in a shared kubernetes environment so the way that would look",
    "start": "165560",
    "end": "171080"
  },
  {
    "text": "from the client perspective of little horse is a client would be given a URL and they connect to their own little",
    "start": "171080",
    "end": "176840"
  },
  {
    "text": "horse cluster and those little horse clusters sit in one giant kubernetes cluster right but where does Kafka come",
    "start": "176840",
    "end": "183159"
  },
  {
    "text": "into play as I said earlier under the hood little horse uses Kafka so each little horse cluster could have its own",
    "start": "183159",
    "end": "190239"
  },
  {
    "text": "kfka cluster of course managed by shmy that it uses to persist its data and as",
    "start": "190239",
    "end": "195319"
  },
  {
    "text": "its uh commit log and and write AE log right so we looked at this architecture",
    "start": "195319",
    "end": "200599"
  },
  {
    "text": "for little horse Cloud Enterprise and it has its advantages and its drawbacks but there's another one there's another",
    "start": "200599",
    "end": "206720"
  },
  {
    "text": "potential architecture which is this where all little horse clusters end up sharing the same shared Kafka cluster",
    "start": "206720",
    "end": "213799"
  },
  {
    "text": "and there's a couple trade-offs here the first one being uh ease of use and the",
    "start": "213799",
    "end": "218840"
  },
  {
    "text": "second one being security and um also uh",
    "start": "218840",
    "end": "224280"
  },
  {
    "text": "the Noisy Neighbor problem right so when you have a shared CCO cluster there's a",
    "start": "224280",
    "end": "230120"
  },
  {
    "text": "lot of problems that you might run into for example if uh cluster one or client one starts sending a lot of traffic we",
    "start": "230120",
    "end": "236640"
  },
  {
    "text": "don't want that to cause unavailability or increase latency for for the yellow or the green clients um additionally if uh We",
    "start": "236640",
    "end": "244640"
  },
  {
    "text": "additionally security is very important to us so we want to ensure minimal we want to ensure the principle of lease",
    "start": "244640",
    "end": "250000"
  },
  {
    "text": "privilege and defense in depth is respected so obviously we don't plan for anyone to be able to get remote code",
    "start": "250000",
    "end": "256359"
  },
  {
    "text": "execution access to any of these little horse clusters but these clusters are going to be exposed to the Internet so",
    "start": "256359",
    "end": "262120"
  },
  {
    "text": "as a second layer of security we don't want anyone who has access to run code on these servers to be able to read",
    "start": "262120",
    "end": "268919"
  },
  {
    "text": "topics or right to topics that they shouldn't have access to so we want to enforce the principle of of lease",
    "start": "268919",
    "end": "274080"
  },
  {
    "text": "privilege uh and we want to maximize security we want to ensure that all traffic is encrypted and that's actually",
    "start": "274080",
    "end": "279280"
  },
  {
    "text": "a little bit tricky to do with just plain old Apache kfka so uh that said",
    "start": "279280",
    "end": "285039"
  },
  {
    "text": "why do we want to share Kafka among all of our little horse clusters and the the biggest one is resource",
    "start": "285039",
    "end": "291520"
  },
  {
    "text": "utilization uh which is if we have three customers three little horse servers and one of them is and they might have small",
    "start": "291520",
    "end": "297720"
  },
  {
    "text": "loads deploying uh deploying a Kafka cluster with three three controllers",
    "start": "297720",
    "end": "304120"
  },
  {
    "text": "three Brokers for each single little horse server little horse installation would get a little bit expensive because",
    "start": "304120",
    "end": "310039"
  },
  {
    "text": "jvms have overhead then also we would have to end up deploying the uh entity operator and the cruise control operator",
    "start": "310039",
    "end": "316720"
  },
  {
    "text": "we'd have to have more Prometheus scraping targets so it also would increase the operational hassle just a",
    "start": "316720",
    "end": "322080"
  },
  {
    "text": "little bit if we had to share uh but if we can share Kafka we can reduce that burden um as we add more little",
    "start": "322080",
    "end": "330919"
  },
  {
    "text": "clusters so uh that said as I said before we have a bunch of requirements",
    "start": "330919",
    "end": "336000"
  },
  {
    "text": "we have to create topics for every single little horse uh server installation when a new customer gets on boarded we have to have full encryption",
    "start": "336000",
    "end": "342880"
  },
  {
    "text": "of all all Network traffic that goes around Kafka we have to enforce the principle of lease privilege and we have",
    "start": "342880",
    "end": "349360"
  },
  {
    "text": "to isolate the um the tenants the tenants being the little horse servers",
    "start": "349360",
    "end": "355520"
  },
  {
    "text": "um at the performance level and lastly we need to make sure that our SRE team doesn't have headaches uh in",
    "start": "355520",
    "end": "364520"
  },
  {
    "text": "operations so um I'm going to start with topic management right so uh every",
    "start": "364520",
    "end": "369720"
  },
  {
    "text": "single little horse server needs a its own set of topics and how it uses it is is beyond the scope of this presentation",
    "start": "369720",
    "end": "376720"
  },
  {
    "text": "however we need to create topics every time we create a new little horse cluster little horse installation so one way you can do that",
    "start": "376720",
    "end": "383840"
  },
  {
    "text": "is with the kopka command line uh utility right and that's great it's it's great for prototyping I've I've done it",
    "start": "383840",
    "end": "389919"
  },
  {
    "text": "a couple times um the problem with that is if you have a bunch of different kubernetes clusters in different regions",
    "start": "389919",
    "end": "395319"
  },
  {
    "text": "and many little horse installations in each cluster it becomes very hard to manage it manually and in fact it's it's",
    "start": "395319",
    "end": "401880"
  },
  {
    "text": "not not a good idea because you're going to have human error there's going to be copy and paste error additionally managing the authentication to do it in",
    "start": "401880",
    "end": "408360"
  },
  {
    "text": "a secure manner is is quite difficult and there's no way to enforce any sort of standardization right so of course",
    "start": "408360",
    "end": "414800"
  },
  {
    "text": "this is a conference about stmy and how you can use kubernetes operators to make operations a lot more simple right so we",
    "start": "414800",
    "end": "421440"
  },
  {
    "text": "don't want to be doing this but thankfully stmy is fantastic and there's this kopic custom resource definition so",
    "start": "421440",
    "end": "428520"
  },
  {
    "text": "we all know what a custom resource is in in in kubernetes because this is a a Kafka operator uh conference so the the",
    "start": "428520",
    "end": "435319"
  },
  {
    "text": "Kaa topic crd is a custom resource definition that allows you to create",
    "start": "435319",
    "end": "440400"
  },
  {
    "text": "kfka topics on the Fly using kubernetes manifests so the kfka topic uh crd has a",
    "start": "440400",
    "end": "446440"
  },
  {
    "text": "reference to a Kafka cluster implemented via a label and it implements one-way reconciliation so fun fact there's",
    "start": "446440",
    "end": "452759"
  },
  {
    "text": "actually in the other room right now um a a conference going on about the implementation of the oneway",
    "start": "452759",
    "end": "458560"
  },
  {
    "text": "unidirectional kfka topic operator uh in the past it used to be two-way reconciliation now it's one-way and what",
    "start": "458560",
    "end": "464080"
  },
  {
    "text": "does that mean that means that if you declare some certain specifications for the kofka topic on your kofka topic",
    "start": "464080",
    "end": "471159"
  },
  {
    "text": "custom resource the Kofa topic operator will ensure that the the actual topic on your",
    "start": "471159",
    "end": "476599"
  },
  {
    "text": "Kafka cluster matches that configuration at any point so for example if you set the replication factor of your topic to",
    "start": "476599",
    "end": "483520"
  },
  {
    "text": "three in your cof topic custom resource and then someone comes along using the CI and updates it to five replication",
    "start": "483520",
    "end": "490240"
  },
  {
    "text": "replication factor of five or replication factor of two for example the kopic operator or the The Entity",
    "start": "490240",
    "end": "496560"
  },
  {
    "text": "operator will recognize that and force the reconciliation back or Force the topic back to to match what you have",
    "start": "496560",
    "end": "503639"
  },
  {
    "text": "specified in your Kafka topic custom resource so here's an example of a of a",
    "start": "503639",
    "end": "508960"
  },
  {
    "text": "kka IC Uh custom resource you can see it points to a Kafka cluster and you can",
    "start": "508960",
    "end": "514640"
  },
  {
    "text": "configure some uh configurations on the topic here so this is a simple one all we do is we set the number of partitions",
    "start": "514640",
    "end": "520919"
  },
  {
    "text": "and the number of replicas you can also pass in configurations such as the cleanup policy retention policy uh there",
    "start": "520919",
    "end": "527399"
  },
  {
    "text": "is a session later today about tiered storage and I'm very much looking forward to how that will work with the",
    "start": "527399",
    "end": "532560"
  },
  {
    "text": "the Kafka topic custom resource but anyways uh the fact that we now have it",
    "start": "532560",
    "end": "538240"
  },
  {
    "text": "in a yaml file but is reconciled by kubernetes solves the problem of how you can in a standardized manner create",
    "start": "538240",
    "end": "545600"
  },
  {
    "text": "these Kafka topics in your organization so one simple workflow that you can use",
    "start": "545600",
    "end": "551120"
  },
  {
    "text": "is to make a git push with that cetopic uh yaml in in a repository and then have",
    "start": "551120",
    "end": "558040"
  },
  {
    "text": "Argo CD deploy that kopic custom resource to kubernetes and then shmy will reconcile the topic into your kafa",
    "start": "558040",
    "end": "564519"
  },
  {
    "text": "cluster and this is fantastic works very well there's some other ways to do it when you have larger number of teams and",
    "start": "564519",
    "end": "570720"
  },
  {
    "text": "you want to enable more self-service perhaps without your you your team members having to understand everything",
    "start": "570720",
    "end": "576720"
  },
  {
    "text": "about kubernetes or if you want to expose uh if you want to use different access control levels inside your organization we can discuss that at the",
    "start": "576720",
    "end": "583640"
  },
  {
    "text": "end perhaps if we have time um so we have discussed how we are going",
    "start": "583640",
    "end": "589360"
  },
  {
    "text": "to give teams Freedom the to create uh Kafka topics as as we add new uh new as",
    "start": "589360",
    "end": "596440"
  },
  {
    "text": "we onboard new tenants into our clusters so in the case of little horse Cloud onboarding a new tenant into our cluster",
    "start": "596440",
    "end": "601720"
  },
  {
    "text": "means we have a new customer which means we're creating a new little horse cluster but in your case if you're not",
    "start": "601720",
    "end": "607000"
  },
  {
    "text": "running a past service onboarding a new team would mean you know a new team of microservice developers needs to use",
    "start": "607000",
    "end": "613720"
  },
  {
    "text": "Kafka for for some things internally next thing I want to talk about is encryption and access control and I'm",
    "start": "613720",
    "end": "620120"
  },
  {
    "text": "going to kind of move them together and put and talk about them both together because there's one custom resource that",
    "start": "620120",
    "end": "626760"
  },
  {
    "text": "kind of helps solve both of them at the same time so first of all what do we need to",
    "start": "626760",
    "end": "632560"
  },
  {
    "text": "encrypt so a little bit about Kafka is it's a distributed system and there are",
    "start": "632560",
    "end": "637639"
  },
  {
    "text": "many different servers so in this picture I have two Brokers um in a real cluster there's Brokers and controllers",
    "start": "637639",
    "end": "643800"
  },
  {
    "text": "and generally they are hopefully on separate machines and the controllers and the Brokers all need to talk to each",
    "start": "643800",
    "end": "649639"
  },
  {
    "text": "other and they do this for replicating data uh for propagating metadata as well",
    "start": "649639",
    "end": "654920"
  },
  {
    "text": "um so that's the blue arrows that we see right here is the the intra cluster traffic for the Kafka cluster we need to",
    "start": "654920",
    "end": "661959"
  },
  {
    "text": "encrypt that additionally stmy needs to talk to kfka right uh stmy is um it",
    "start": "661959",
    "end": "669760"
  },
  {
    "text": "needs to talk to Kafka in order to do things like determine who which controller is the uh current leader so",
    "start": "669760",
    "end": "676560"
  },
  {
    "text": "that it it doesn't uh for example in the Kafka roller talk which we saw earlier today so that we don't roll the leader",
    "start": "676560",
    "end": "683800"
  },
  {
    "text": "over and over and over again it needs to do things like um reconcile Kafka topics which we justed about so because of that",
    "start": "683800",
    "end": "690200"
  },
  {
    "text": "strm he needs to talk to the K Kafka Brokers themselves and lastly our",
    "start": "690200",
    "end": "695360"
  },
  {
    "text": "tenants which is the little horse clusters the little horse servers need to be able to talk to the Brokers so we",
    "start": "695360",
    "end": "700720"
  },
  {
    "text": "have three types of traffic we need to encrypt um and when you think of encryption you know I first thought of open SSL right uh and this looks fun uh",
    "start": "700720",
    "end": "709200"
  },
  {
    "text": "especially at scale when you have dozens of Kafka clusters and many in dozens of kubernetes clusters and many different",
    "start": "709200",
    "end": "715519"
  },
  {
    "text": "um tenants of each cof cluster so we don't really want to do that thank Y stmy is amazing and it does two of these",
    "start": "715519",
    "end": "721600"
  },
  {
    "text": "three things for us out of the box which is stmy will just transparently encrypt all traffic from the operator to the",
    "start": "721600",
    "end": "728480"
  },
  {
    "text": "Brokers and it will also configure the Brokers to uh communicate with each other in an encrypted manner now a small",
    "start": "728480",
    "end": "735440"
  },
  {
    "text": "note I I didn't put this on the slide because it would become quickly outdated",
    "start": "735440",
    "end": "741000"
  },
  {
    "text": "which is that if you run Kafka with zookeeper mode as well the communication between strey and zookeeper and also",
    "start": "741000",
    "end": "747199"
  },
  {
    "text": "between the Brokers and zookeeper is automatically encrypted which is fantastic uh the reason why I'm not",
    "start": "747199",
    "end": "752279"
  },
  {
    "text": "really spending too much time on that is because uh kafco 4.0 is a couple months around the corner um maybe there might",
    "start": "752279",
    "end": "758720"
  },
  {
    "text": "be a 3.8 release I think uh but in 4.0 uh kfco as zookeeper is no longer going",
    "start": "758720",
    "end": "764199"
  },
  {
    "text": "to be a thing so uh for now we don't need to worry about zookeeper and in little horse Cloud we're just going",
    "start": "764199",
    "end": "769360"
  },
  {
    "text": "straight to craft mode um so at this point we have uh",
    "start": "769360",
    "end": "775519"
  },
  {
    "text": "encrypted traffic well streamy has encrypted for us the traffic between the operator and the the strey operator and",
    "start": "775519",
    "end": "782240"
  },
  {
    "text": "the kofka cluster and also between the Brokers themselves however there's one more thing we need to encrypt we need to",
    "start": "782240",
    "end": "788199"
  },
  {
    "text": "encrypt the traffic between little horse and kfka and we also need to simultaneously give each client which is",
    "start": "788199",
    "end": "794480"
  },
  {
    "text": "the little horse cluster and identity so that it can securely access Kafka and",
    "start": "794480",
    "end": "799880"
  },
  {
    "text": "that Kafka can can control what topics it can read do so we're going to do both",
    "start": "799880",
    "end": "806000"
  },
  {
    "text": "of that using both of those things using the Kafka principles concept right and",
    "start": "806000",
    "end": "812320"
  },
  {
    "text": "we could create principles using the command line um and we know again that you know command line isn't really",
    "start": "812320",
    "end": "818600"
  },
  {
    "text": "compatible with the whole giops movement or uh kubernetes Native development um",
    "start": "818600",
    "end": "824680"
  },
  {
    "text": "it's it's very difficult error prone and we really don't want to take risks of having human error cause a security",
    "start": "824680",
    "end": "830880"
  },
  {
    "text": "incident so uh we don't really want to do this but thankfully uh shmy comes to the rescue with the Kafka user custom",
    "start": "830880",
    "end": "837399"
  },
  {
    "text": "resource and this is a fantastic ftic uh fantastic tool that that streamy gives us which is deployed as part of the",
    "start": "837399",
    "end": "844440"
  },
  {
    "text": "entity operator which um allows you to create Kafka principles uh and manage",
    "start": "844440",
    "end": "850839"
  },
  {
    "text": "them using a custom resource file as well so this is the first part of a",
    "start": "850839",
    "end": "857240"
  },
  {
    "text": "Kafka user custom resource and let's take a look at it so once again we reference a stmy cluster and this is the",
    "start": "857240",
    "end": "863920"
  },
  {
    "text": "the name of the Kafka custom resource that we want to create the Kafka user on",
    "start": "863920",
    "end": "869600"
  },
  {
    "text": "um and what we want to do right here is we want to create uh a Kafka principle",
    "start": "869600",
    "end": "875320"
  },
  {
    "text": "that can be authenticated via TLS so just as a refresher in in Kafka there's various different ways to identify a",
    "start": "875320",
    "end": "880959"
  },
  {
    "text": "client so if you have a plain text listener I think you can set the client ID and that determines the the principle",
    "start": "880959",
    "end": "887240"
  },
  {
    "text": "uh that might be wrong so fact check me please but you can also use uh uh sasl",
    "start": "887240",
    "end": "893320"
  },
  {
    "text": "in order to determine the the um identity and then in this case we're using TLS or mtls in order to",
    "start": "893320",
    "end": "899519"
  },
  {
    "text": "authenticate the client to the uh kfka cluster and in this case TLS is used for",
    "start": "899519",
    "end": "906680"
  },
  {
    "text": "both uh TLS is used to determine identity and we'll see later how you can use the Kafka user custom resource in",
    "start": "906680",
    "end": "912920"
  },
  {
    "text": "order to um enforce access control on top of that identity once the identity is",
    "start": "912920",
    "end": "918759"
  },
  {
    "text": "established for the communication with the cluster so um the once again we have",
    "start": "918759",
    "end": "926199"
  },
  {
    "text": "gotten to the point where you can apply kubernetes gaml to GitHub or bitbucket and then have some uh giops tool such as",
    "start": "926199",
    "end": "933279"
  },
  {
    "text": "Argo CD or perhaps flux uh create a custom resource in kubernetes which stmy",
    "start": "933279",
    "end": "938560"
  },
  {
    "text": "will reconcile in order to configure the state of your Kafka cluster so we can now manage topics and clients for Kafka",
    "start": "938560",
    "end": "946440"
  },
  {
    "text": "but how does this actually work um in uh how does this actually work right so",
    "start": "946440",
    "end": "951639"
  },
  {
    "text": "when I pass the or when when the the Kafka user crd gets created the streamy",
    "start": "951639",
    "end": "957720"
  },
  {
    "text": "Kafka Kafka user operator will do two things first it will create a a principle and configure acl's on the",
    "start": "957720",
    "end": "964040"
  },
  {
    "text": "broker side for it and then secondly it will create a kubernetes secret which has TLS certificates on it and it will",
    "start": "964040",
    "end": "970319"
  },
  {
    "text": "keep that secret up to dat so that the little horse clusters little horse servers can just Mount that secret as a volume on the Pod and use that pod to",
    "start": "970319",
    "end": "977399"
  },
  {
    "text": "encrypt their their Communications with with the uh kfka cluster so this is fantastic we have now solved the problem",
    "start": "977399",
    "end": "983319"
  },
  {
    "text": "of encryption for uh both for all three uh uh layers of traffic we have the",
    "start": "983319",
    "end": "990959"
  },
  {
    "text": "Kafka the stmy cluster operator is speaking with the Kafka cluster in an encrypted manner the Kafka Brokers are",
    "start": "990959",
    "end": "997680"
  },
  {
    "text": "talking to each other with an encrypted Manner and that's all thanks to shmy out of the box and then with just a little bit of work we can use the Kafka user",
    "start": "997680",
    "end": "1004120"
  },
  {
    "text": "crd to give ourselves certificates so that the little horse clusters can communicate with the Kafka brokers in a",
    "start": "1004120",
    "end": "1010040"
  },
  {
    "text": "secure manner so um that still leaves one thing",
    "start": "1010040",
    "end": "1015959"
  },
  {
    "text": "which is I said earlier we want to enforce the principle of least privilege and we want to make sure that each",
    "start": "1015959",
    "end": "1021000"
  },
  {
    "text": "little horse cluster can only see what it absolutely needs to see and maybe in our case this isn't absolute critical",
    "start": "1021000",
    "end": "1027558"
  },
  {
    "text": "because the little horse servers are code that we own and we control and it's only one team managing all of them",
    "start": "1027559",
    "end": "1033720"
  },
  {
    "text": "however in a larger Enterprise uh or uh in in an environment where different teams are running different environments",
    "start": "1033720",
    "end": "1040678"
  },
  {
    "text": "different teams are running different microservices it is absolutely critical sometimes to enforce access control so",
    "start": "1040679",
    "end": "1046360"
  },
  {
    "text": "that each um each team can only access data",
    "start": "1046360",
    "end": "1052200"
  },
  {
    "text": "that they really need to access so Kafka has ACLS Access Control lists that's",
    "start": "1052200",
    "end": "1058480"
  },
  {
    "text": "different from role-based authentication so um quick tangent on what is role-based authentication uh I don't",
    "start": "1058480",
    "end": "1064320"
  },
  {
    "text": "want to go too deep into this but role-based authentication is where you define a role and a role has certain",
    "start": "1064320",
    "end": "1070520"
  },
  {
    "text": "capabilities for example a role could access uh topic a with the read ACL and",
    "start": "1070520",
    "end": "1075880"
  },
  {
    "text": "it could access topic B with the right ACL uh um and then different clients can",
    "start": "1075880",
    "end": "1081520"
  },
  {
    "text": "assume that role so you can have 10 different clients that all assume one role and and a client can have multiple",
    "start": "1081520",
    "end": "1086559"
  },
  {
    "text": "roles and the POS the permissions are additive kafka's um Access Control model is a little bit more simple where you",
    "start": "1086559",
    "end": "1093039"
  },
  {
    "text": "basically just have a client and the client has permissions directly um and",
    "start": "1093039",
    "end": "1098720"
  },
  {
    "text": "there's two types of uh ACLS in Kafka you can give an ACL that uh applies to a specific resource",
    "start": "1098720",
    "end": "1106240"
  },
  {
    "text": "so a specific topic or specific consumer group or specific transactional ID for",
    "start": "1106240",
    "end": "1111799"
  },
  {
    "text": "example or you can give an ACL that applies to all Resources with a certain prefix and if you look in the kfka",
    "start": "1111799",
    "end": "1118600"
  },
  {
    "text": "documentation they describe the prefix based ACLS as a way to enable some form of multi- tendency and the tit the title",
    "start": "1118600",
    "end": "1125640"
  },
  {
    "text": "of this presentation is partial multi tendency on cka not full multi tendency and the reason why it's partial multi- tendency is because of two things number",
    "start": "1125640",
    "end": "1132440"
  },
  {
    "text": "one is that the users of the Kafka cluster are all in the same organization so they're somewhat trusted there's a",
    "start": "1132440",
    "end": "1138480"
  },
  {
    "text": "certain level of trust there they're not completely adversarial and the second is that the isolation mechanism is has a",
    "start": "1138480",
    "end": "1145559"
  },
  {
    "text": "prefix on it so um there are other uh Forks of Kafka one of them is a very big",
    "start": "1145559",
    "end": "1150880"
  },
  {
    "text": "company uh probably the most well-known company that provides a cloud service for kfka and one of their cloud service",
    "start": "1150880",
    "end": "1157640"
  },
  {
    "text": "uh offerings is actually fully multi-tenant where you are given a URL a bootstrap server URL and a a a principle",
    "start": "1157640",
    "end": "1165400"
  },
  {
    "text": "and it appears to you that you can you have full access to a Kafka cluster but really under the hood there's many people using the same physical servers",
    "start": "1165400",
    "end": "1171840"
  },
  {
    "text": "that is full multi tendency it's not available in in Apache Kafka unfortunately so the best we can do is use prefixes so in the little horse",
    "start": "1171840",
    "end": "1179520"
  },
  {
    "text": "Cloud case what we do is we give each little horse cluster which is our tenant",
    "start": "1179520",
    "end": "1185159"
  },
  {
    "text": "a prefix that isolates it and what we do is our little our kubernetes operator that runs little horse will create a",
    "start": "1185159",
    "end": "1192039"
  },
  {
    "text": "bunch of kopic resources and uh the the prefix is just the name of the little horse cluster uh",
    "start": "1192039",
    "end": "1198360"
  },
  {
    "text": "for uh for reference into how we do it so here's how that looks on the Kafka user",
    "start": "1198360",
    "end": "1204679"
  },
  {
    "text": "crd uh this is the continuation of the previous screenshot of the Kafka user",
    "start": "1204679",
    "end": "1210000"
  },
  {
    "text": "crd from a couple slides ago you can see there's an authorization section and we can add acl's to these kfka users so for",
    "start": "1210000",
    "end": "1218000"
  },
  {
    "text": "example this particular kfka user has the ability to describe describe the configs of write and read and do any",
    "start": "1218000",
    "end": "1225360"
  },
  {
    "text": "cluster actions on any Kafka topic with the whose name starts with LH cluster D LH cka and this is the prefix right and",
    "start": "1225360",
    "end": "1234120"
  },
  {
    "text": "additionally uh we have configured here that it can do anything it can do any operation on a consumer group with that",
    "start": "1234120",
    "end": "1240640"
  },
  {
    "text": "prefix and it can do any operation on a transactional ID with that prefix and and that's needed because the",
    "start": "1240640",
    "end": "1246919"
  },
  {
    "text": "application that we use uh uses kfka transactions quite quite extensively so obviously we need the ability to uh",
    "start": "1246919",
    "end": "1253200"
  },
  {
    "text": "control we need we that's why we need item potent right and the uh transactional ID",
    "start": "1253200",
    "end": "1259760"
  },
  {
    "text": "ACLS so um there's a couple other streamy features in the kof user crd",
    "start": "1259760",
    "end": "1265000"
  },
  {
    "text": "which I should mention I'm not going to go into detail on one of them is uh that you can create uh kofka users with",
    "start": "1265000",
    "end": "1271600"
  },
  {
    "text": "different authentication types so the one I showed uses authentication type of TLS and there's the other option is uh",
    "start": "1271600",
    "end": "1280080"
  },
  {
    "text": "sasil SSL uh which uses the scram Shaw 512 implementation and it creates like a",
    "start": "1280080",
    "end": "1285120"
  },
  {
    "text": "user and a password um and of uh just as how strec kofka user crd generates a",
    "start": "1285120",
    "end": "1292679"
  },
  {
    "text": "secret with TLS certificates if you set the authentication mode to TLS it will also create a secret with a user and a",
    "start": "1292679",
    "end": "1299440"
  },
  {
    "text": "password and and a sassle Jass config for you uh if you uh set the the mode to",
    "start": "1299440",
    "end": "1305760"
  },
  {
    "text": "to this and and there's also um an ooth plug-in which allows you to use keyo as as the identity provider and uh it's",
    "start": "1305760",
    "end": "1312960"
  },
  {
    "text": "quite cool um but unfortunately because we don't have time uh we won't go into",
    "start": "1312960",
    "end": "1318080"
  },
  {
    "text": "it and turns out that you we we decided that it didn't make sense to use those two things for little horse cloud and",
    "start": "1318080",
    "end": "1323240"
  },
  {
    "text": "that TLS was the simplest one for our use case so um we have brought um uh freedom",
    "start": "1323240",
    "end": "1332120"
  },
  {
    "text": "justice and security to our uh shared kfka cluster Freedom being topic creation Justice being uh ACLS that",
    "start": "1332120",
    "end": "1339520"
  },
  {
    "text": "control who can do what and security being encryption now we need to bring peace we need to solve the Noisy Neighbor problem um and that's very",
    "start": "1339520",
    "end": "1346640"
  },
  {
    "text": "important for us I think the the um ACLS are are important but that's just for a",
    "start": "1346640",
    "end": "1352279"
  },
  {
    "text": "very bad disaster scenario in which case someone has hacked one of the little horse servers which is very unlikely uh",
    "start": "1352279",
    "end": "1358000"
  },
  {
    "text": "but the Noisy Neighbor problem is very crucial for us uh and this is uh if we",
    "start": "1358000",
    "end": "1363480"
  },
  {
    "text": "have three little horse um users or three three little horse customers three little horse servers and one of them",
    "start": "1363480",
    "end": "1369679"
  },
  {
    "text": "starts sending way too much traffic we um the the little horse servers are",
    "start": "1369679",
    "end": "1375039"
  },
  {
    "text": "using a shared Kafka cluster and if that Kafka cluster gets overloaded the other two users will notice that and their",
    "start": "1375039",
    "end": "1381000"
  },
  {
    "text": "their latencies will start to spike which we really really really really don't want right so thankfully uh Kafka",
    "start": "1381000",
    "end": "1387720"
  },
  {
    "text": "has some some quotas features and these quotas are are quite useful for what we're trying to do here which is to",
    "start": "1387720",
    "end": "1395240"
  },
  {
    "text": "actually limit the ability of one uh user or one one uh one client One",
    "start": "1395240",
    "end": "1401679"
  },
  {
    "text": "customer one little horse cluster to overload the kofka cluster so once again we're continuing building these same",
    "start": "1401679",
    "end": "1408760"
  },
  {
    "text": "user custom resource specification that we started a long time ago this is another section of the same custom",
    "start": "1408760",
    "end": "1414039"
  },
  {
    "text": "resource we can see here we have configured a uh an amount of bytes per second that the Kafka consumers any",
    "start": "1414039",
    "end": "1421279"
  },
  {
    "text": "Kafka consumer with this client ID or this principal ID can consume per second and how much they can produce per second",
    "start": "1421279",
    "end": "1428440"
  },
  {
    "text": "now uh I do need to uh make a comment on how Apache Kafka works on",
    "start": "1428440",
    "end": "1435120"
  },
  {
    "text": "quotas uh Apache Kafka as we said earlier is the distributed system which means that there are many different",
    "start": "1435120",
    "end": "1440880"
  },
  {
    "text": "Brokers that the data is scattered across and uh when producing to a topic",
    "start": "1440880",
    "end": "1447440"
  },
  {
    "text": "especially if you're using a Kofa streams application which partitions things by Keys most requests go to a bunch of different Brokers and and that",
    "start": "1447440",
    "end": "1453799"
  },
  {
    "text": "means every client has to talk to every broker pretty much um and the quotas are",
    "start": "1453799",
    "end": "1459200"
  },
  {
    "text": "on a per broker basis rather than a per cluster basis the reason for that is that it is very hard in a distributed",
    "start": "1459200",
    "end": "1466120"
  },
  {
    "text": "system to coordinate cluster-wide quotas very very hard",
    "start": "1466120",
    "end": "1471200"
  },
  {
    "text": "because uh the Brokers would have to talk to each other about how much each client had consumed at the at a at a",
    "start": "1471200",
    "end": "1476720"
  },
  {
    "text": "certain amount of time right so um that means that the the Apache Kafka quotas",
    "start": "1476720",
    "end": "1481919"
  },
  {
    "text": "are on a per broker basis which means that if you look back here this kofka user can produce this number of uh can",
    "start": "1481919",
    "end": "1489399"
  },
  {
    "text": "produce this number of bytes per second to one specific broker to each specific broker so if there's 10 Brokers the",
    "start": "1489399",
    "end": "1495360"
  },
  {
    "text": "actual quota is 10 times this if there's one broker this is the actual quota and",
    "start": "1495360",
    "end": "1500520"
  },
  {
    "text": "it turns out that our customers don't really care how many Kafka Brokers there are in our customer in in our cluster if",
    "start": "1500520",
    "end": "1506039"
  },
  {
    "text": "they ask for like one gigabyte per second of throughput they want one gigabyte per second of throughput we don't they don't really care how many",
    "start": "1506039",
    "end": "1511480"
  },
  {
    "text": "kofka Brokers there are right um so what we need to do is we need to figure out a",
    "start": "1511480",
    "end": "1517120"
  },
  {
    "text": "way to use the Kafka quotas that come in Apache Kafka in order to give our customers the ability to uh you know",
    "start": "1517120",
    "end": "1525120"
  },
  {
    "text": "give our customers a a quota that makes sense for them or or and in your case in in the case of you know running cide an",
    "start": "1525120",
    "end": "1531480"
  },
  {
    "text": "Enterprise each different microservice would need to have its own set of quotas as well right so this this applies equally in in the Enterprise um",
    "start": "1531480",
    "end": "1539480"
  },
  {
    "text": "scenario so what we have done is there's an approximation you can do the the per broker quota uh can be approximated as",
    "start": "1539480",
    "end": "1548120"
  },
  {
    "text": "the cluster quota divided by the number of Brokers so the cluster quota being for example the the customer pays for a",
    "start": "1548120",
    "end": "1554360"
  },
  {
    "text": "little horse cluster that needs to be able to run 1 Gab per second of data through Kafka right so the produce quot",
    "start": "1554360",
    "end": "1561799"
  },
  {
    "text": "would be one gigabyte per second divided by however many Brokers we have so if we have 10 Brokers the per broker quota",
    "start": "1561799",
    "end": "1567760"
  },
  {
    "text": "would be 100 megabytes if we have 20 then it would be 50 megabytes and then of course we would have to add padding",
    "start": "1567760",
    "end": "1574000"
  },
  {
    "text": "because if we promise our customers something we need to make sure that we're you know exceeding that that SLA",
    "start": "1574000",
    "end": "1580360"
  },
  {
    "text": "right however if you've been paying attention um there is a problem um the",
    "start": "1580360",
    "end": "1585640"
  },
  {
    "text": "problem is balance so we're going to bring balance to the force um the problem of balance will become apparent",
    "start": "1585640",
    "end": "1593240"
  },
  {
    "text": "when you consider what happens as you add more and more and more uh customers onto your to your uh more tenants onto",
    "start": "1593240",
    "end": "1600000"
  },
  {
    "text": "your C cluster so let's start with an oversimplified scenario uh where we have",
    "start": "1600000",
    "end": "1605880"
  },
  {
    "text": "one broker um and we have two little horse uh servers using the same broker",
    "start": "1605880",
    "end": "1611279"
  },
  {
    "text": "and um you know in real life we would have replication so we'd have at least three Brokers and uh we'd have a lot",
    "start": "1611279",
    "end": "1617039"
  },
  {
    "text": "more than just four partitions for little horse cluster uh but for the sake of argument let's just say that one broker can handle at Max you know two",
    "start": "1617039",
    "end": "1624600"
  },
  {
    "text": "little horse server installations on it um in real life it could handle a little bit more but um so now if we want to add",
    "start": "1624600",
    "end": "1631080"
  },
  {
    "text": "a new customer uh we can't fit it onto the same broker so we need to add another broker and then the naive way of",
    "start": "1631080",
    "end": "1637960"
  },
  {
    "text": "doing that is like this however now we have a problem which is let's just say that each customer wants to have a one",
    "start": "1637960",
    "end": "1644200"
  },
  {
    "text": "gigabyte per second quota of uh produced throughput right the way we calculated it two slides ago would be in this case",
    "start": "1644200",
    "end": "1652640"
  },
  {
    "text": "the uh per broker quota would be uh I mean one one gigabyte per second is",
    "start": "1652640",
    "end": "1658480"
  },
  {
    "text": "quite high but per broker quota would be 500 megabytes per second and that's a problem because the red cluster as you",
    "start": "1658480",
    "end": "1663880"
  },
  {
    "text": "see here all four partitions for that cluster are on the same broker so the red cluster will only be talking to one",
    "start": "1663880",
    "end": "1669000"
  },
  {
    "text": "broker at a time which means that the effective cluster wide quota is 500 not one gigabyte uh which is bad because now",
    "start": "1669000",
    "end": "1675799"
  },
  {
    "text": "we're under promising we're under delivering on what we promise so what we actually want is we want to properly",
    "start": "1675799",
    "end": "1682399"
  },
  {
    "text": "spread the uh the the replicas across all the Brokers right and if only there",
    "start": "1682399",
    "end": "1688279"
  },
  {
    "text": "was a way that we could do that uh and of course because strey has thought of basically everything that you would need",
    "start": "1688279",
    "end": "1693559"
  },
  {
    "text": "to think of for for Kafka there's so many cool things that that we're uh trying to you that we need to take",
    "start": "1693559",
    "end": "1698960"
  },
  {
    "text": "advantage of that we already take advantage of that we just don't have time to talk about today like mirror maker Kafka connect uh it's strey",
    "start": "1698960",
    "end": "1706320"
  },
  {
    "text": "literally thinks about everything it's awesome so there's this open source project um that will help us bring",
    "start": "1706320",
    "end": "1712200"
  },
  {
    "text": "balance to the kka cluster or bring balance to the force which is the last phase in Anakin Skywalker's uh life um",
    "start": "1712200",
    "end": "1720159"
  },
  {
    "text": "so there's this open source project called um cruise control and there's also the uh I forgot that there there's",
    "start": "1720159",
    "end": "1727039"
  },
  {
    "text": "also a command line utility called Kafka reassign partitions SSH which allows you to reassign partitions manually and",
    "start": "1727039",
    "end": "1732760"
  },
  {
    "text": "basically tell the kfka cluster what partition should have what uh or what broker should have what partitions on it",
    "start": "1732760",
    "end": "1737880"
  },
  {
    "text": "right and obviously that's really really hard to do um but there is um a much better",
    "start": "1737880",
    "end": "1744080"
  },
  {
    "text": "way to do it using streamy um there's an open source project that came out of LinkedIn called cruise control which is",
    "start": "1744080",
    "end": "1749919"
  },
  {
    "text": "basically um a a system that sits there and allows you and and um sits there and",
    "start": "1749919",
    "end": "1757960"
  },
  {
    "text": "you give it a bunch of optimization goals and it will do its best to rebalance your kfka cluster in order to",
    "start": "1757960",
    "end": "1763720"
  },
  {
    "text": "match those those uh goals it also does a lot of fancy monitoring um out of the",
    "start": "1763720",
    "end": "1769840"
  },
  {
    "text": "the scope of today's discussion but uh strey makes it incredibly easy to use cruise control uh through native custom",
    "start": "1769840",
    "end": "1777360"
  },
  {
    "text": "resources and it the the Kafka crd uh the stmy Kafka crd uh has a native way",
    "start": "1777360",
    "end": "1783760"
  },
  {
    "text": "to deploy cruise control and configure it to securely access your Kafka cluster with encryption which is fantastic um",
    "start": "1783760",
    "end": "1790080"
  },
  {
    "text": "and then the Kafka rebalance crd allows you to use cruise control to rebalance your cluster without having any any idea",
    "start": "1790080",
    "end": "1795640"
  },
  {
    "text": "at all how cruise control works so uh um basically what you can do with a Kafka rebalance is point it to your Kafka",
    "start": "1795640",
    "end": "1802440"
  },
  {
    "text": "cluster just like the Kafka user and kfka topic crds and then pass in a list of goals right um so in this case I",
    "start": "1802440",
    "end": "1810480"
  },
  {
    "text": "passed in a bunch of goals and one of the goals that we had before was we want to evenly distribute the replicas for a",
    "start": "1810480",
    "end": "1815799"
  },
  {
    "text": "topic across all of the cluster in order to make sure all the brokers in in the cluster in order to make sure that our",
    "start": "1815799",
    "end": "1822679"
  },
  {
    "text": "uh quota approximation for the cluster wide quota is actually respected U and is is actually accurate right and then",
    "start": "1822679",
    "end": "1829279"
  },
  {
    "text": "these are a bunch of other goals that that are the hard goals that are by default required for for rebalance in",
    "start": "1829279",
    "end": "1835559"
  },
  {
    "text": "order to make sure that the cluster is generally healthy like for example we don't want any one broker to be overloaded too much and we also want to",
    "start": "1835559",
    "end": "1842120"
  },
  {
    "text": "make sure that we have replicas for every single partition in different availability zones so if we have a",
    "start": "1842120",
    "end": "1849039"
  },
  {
    "text": "zone-wide failure we can still continue processing so how does it work what we",
    "start": "1849039",
    "end": "1855039"
  },
  {
    "text": "do first is we apply the Kafka rebound balance custom resource when for example we add a",
    "start": "1855039",
    "end": "1860840"
  },
  {
    "text": "broker and then we wait a little bit and then cruise control will think and it does a lot of linear programming or",
    "start": "1860840",
    "end": "1865880"
  },
  {
    "text": "something like that and then comes up with a proposal and the proposal it looks something like this this is cctl",
    "start": "1865880",
    "end": "1871919"
  },
  {
    "text": "described Kafka rebalance um the pro proposal will tell you how much data is going to be moved uh how many replicas",
    "start": "1871919",
    "end": "1878799"
  },
  {
    "text": "are going to be moved inside a broker how many leaders are going to change how many replicas are going to move overall and overall how balanced the cluster is",
    "start": "1878799",
    "end": "1885799"
  },
  {
    "text": "before and after so sometimes it might do something crazy and you realize oh it's going to move",
    "start": "1885799",
    "end": "1891200"
  },
  {
    "text": "too many megabytes of data at one point um and it it's like a it's a dangerous thing that you don't actually want to do",
    "start": "1891200",
    "end": "1897399"
  },
  {
    "text": "so you have the option to approve or reject the The Proposal right in this case the proposal looks reasonable uh so",
    "start": "1897399",
    "end": "1903200"
  },
  {
    "text": "we're going to approve this proposal now there's two other points I'd like to make uh which is one you know perhaps an",
    "start": "1903200",
    "end": "1910399"
  },
  {
    "text": "manually approving and manually annotating the Kafka rebalance to approve it might be a step that you don't want to do so you can configure",
    "start": "1910399",
    "end": "1917080"
  },
  {
    "text": "the Kafka rebalance to automatically be approved um that's one thing you can do and the second point is there's a lot of",
    "start": "1917080",
    "end": "1923279"
  },
  {
    "text": "configurations on cruise control that uh strey has pretty sensible defaults for",
    "start": "1923279",
    "end": "1928519"
  },
  {
    "text": "uh which allow you to tune exactly how fast the rebalance happens because there's the number of ongoing replicas",
    "start": "1928519",
    "end": "1934720"
  },
  {
    "text": "that are moving at any given point in a in a batch of the rebalance and then also you can configure the uh amount of",
    "start": "1934720",
    "end": "1940799"
  },
  {
    "text": "bytes per second that are sent as part of the rebalance process and there's this trade-off between how fast you want the rebalance to occur and also",
    "start": "1940799",
    "end": "1948639"
  },
  {
    "text": "um how disruptive you want to be so for example if if you have no quotas and and you just move all the replicas at once",
    "start": "1948639",
    "end": "1954559"
  },
  {
    "text": "there's going to be so much data being moved at one point that your your users will feel the impact on their latency or",
    "start": "1954559",
    "end": "1961360"
  },
  {
    "text": "or their throughput uh so uh let's just say that the the appros the proposal we",
    "start": "1961360",
    "end": "1966639"
  },
  {
    "text": "see here looks good we're going to approve it and now stry will start rebalancing the the the ca cluster and",
    "start": "1966639",
    "end": "1973039"
  },
  {
    "text": "we can see here rebalancing is is true then we wait a little bit and if the force is with us we will see that the",
    "start": "1973039",
    "end": "1980080"
  },
  {
    "text": "that there is now balance and and um the the Kafka um rebalance has successfully",
    "start": "1980080",
    "end": "1987279"
  },
  {
    "text": "completed now um thinking back to the quotas we were talking about earlier",
    "start": "1987279",
    "end": "1992960"
  },
  {
    "text": "cluster wide quotas um in the rebalance process during the rebalance process not",
    "start": "1992960",
    "end": "1998159"
  },
  {
    "text": "all of the replicas are actually moved over uh and that means we still have an imbalanced cluster which means what we",
    "start": "1998159",
    "end": "2004240"
  },
  {
    "text": "do on the little horse side is we over provision the quotas that we give to to our clients before the rebalance is",
    "start": "2004240",
    "end": "2012080"
  },
  {
    "text": "while the rebalance is in process because uh we don't know for sure that all the the the replicas are on the new",
    "start": "2012080",
    "end": "2017919"
  },
  {
    "text": "cluster but once the the rebalance is is now uh completed by the ready true",
    "start": "2017919",
    "end": "2023559"
  },
  {
    "text": "condition on the status we are able to reduce the quotas to what we would have",
    "start": "2023559",
    "end": "2028760"
  },
  {
    "text": "um given the new number of Brokers um so we do have time for some",
    "start": "2028760",
    "end": "2034799"
  },
  {
    "text": "closing notes which are uh basically on how do you create these custom resources",
    "start": "2034799",
    "end": "2039840"
  },
  {
    "text": "the the Kafka topic and Kafka user especially and then the Kafka rebalance which is a bit more of a special uh one",
    "start": "2039840",
    "end": "2047079"
  },
  {
    "text": "so um there's a couple options uh you can have basically you know one option",
    "start": "2047079",
    "end": "2052720"
  },
  {
    "text": "is the a completely um uh lowlevel just",
    "start": "2052720",
    "end": "2058440"
  },
  {
    "text": "allow every microservice developer team to create a kafa topic or Kafka user as",
    "start": "2058440",
    "end": "2063599"
  },
  {
    "text": "they wish using basically coup ETL or perhaps there's just a directory in the the microservice repository in in git",
    "start": "2063599",
    "end": "2071079"
  },
  {
    "text": "where the the pipeline will cpsy tail apply everything in there right that's that's a little bit like the wild west um another way you could do it is you",
    "start": "2071079",
    "end": "2077720"
  },
  {
    "text": "could have a centralized repository uh a centralized git repository managed by your infrastructure team with poll",
    "start": "2077720",
    "end": "2083118"
  },
  {
    "text": "requests and such so if if a microservice developer wants to create a kofka topic uh he or she will open a",
    "start": "2083119",
    "end": "2088398"
  },
  {
    "text": "poll request to create a kfat topic custom resource in that centralized repository right uh that's nice because",
    "start": "2088399",
    "end": "2094480"
  },
  {
    "text": "now you can have a grumpy maintainer of your uh organizations Kafka cluster who will reject things that don't make sense",
    "start": "2094480",
    "end": "2101440"
  },
  {
    "text": "but it's also a problem because um it's the the there's a little bit more friction to to getting everything to",
    "start": "2101440",
    "end": "2108440"
  },
  {
    "text": "work um but you know on on the flip side uh it's very easy to see uh who is",
    "start": "2108440",
    "end": "2113760"
  },
  {
    "text": "access to what all in one place and then the third option is is you could go your",
    "start": "2113760",
    "end": "2119280"
  },
  {
    "text": "platform she could go the extra mile and build like a selfservice system with with guard rails that really depends on",
    "start": "2119280",
    "end": "2124960"
  },
  {
    "text": "the context of the organization so for example you could have a a a you could create a uh yaml file or um something",
    "start": "2124960",
    "end": "2133160"
  },
  {
    "text": "with your own specific schema that or a Helm chart that deploys each microservice and there might be a values",
    "start": "2133160",
    "end": "2138640"
  },
  {
    "text": "field in the helm chart which is a list of Copic uh names with partitions and replication factor that you need to",
    "start": "2138640",
    "end": "2144760"
  },
  {
    "text": "create and then your pipeline could validate that you don't create any kfka topics that um are outside of your your",
    "start": "2144760",
    "end": "2151520"
  },
  {
    "text": "prefix scope for example uh but the problem with that is that's a lot of work for your platform team to",
    "start": "2151520",
    "end": "2156720"
  },
  {
    "text": "accomplish um and then lastly what we actually do is uh fancy kubernetes operator so this",
    "start": "2156720",
    "end": "2164000"
  },
  {
    "text": "is what we do uh in little horse we actually have a kubernetes operator that runs little horse for you uh and uh what",
    "start": "2164000",
    "end": "2172119"
  },
  {
    "text": "that does is that kubernetes operator creates all of the kfka topic custom resources and the Kafka user custom resource needed for that um little horse",
    "start": "2172119",
    "end": "2180839"
  },
  {
    "text": "cluster and it also does a really cool thing uh don't have time to go into it today but it it basically has",
    "start": "2180839",
    "end": "2186880"
  },
  {
    "text": "declarative scaling of the the Kafka cluster uh using the uh Kafka rebalance",
    "start": "2186880",
    "end": "2191920"
  },
  {
    "text": "crd so when we add if you we have an LH kfka custom resource which is basically",
    "start": "2191920",
    "end": "2197200"
  },
  {
    "text": "a super thin rapper over shmy but every time you change the number of replicas it will do two things which is scale the Kafka node pool and then create a Kafka",
    "start": "2197200",
    "end": "2204160"
  },
  {
    "text": "rebalance and then uh wait for the rebalance to to complete and then update the quotas of all the Kafka users once",
    "start": "2204160",
    "end": "2210160"
  },
  {
    "text": "the rebalance has been completed now you know we're unfortunately unable to make that open source because it's so specific to our use case at little horse",
    "start": "2210160",
    "end": "2216760"
  },
  {
    "text": "but I just wanted to mention it because it's a it's a pattern that you can use if you have a lot of resources in",
    "start": "2216760",
    "end": "2222640"
  },
  {
    "text": "kubernetes operator expertise and you you don't really want to do the Wild West you don't want a centralized",
    "start": "2222640",
    "end": "2227680"
  },
  {
    "text": "repository and maybe you want to go a little bit further than having a self-service uh setup with with some",
    "start": "2227680",
    "end": "2233560"
  },
  {
    "text": "guard rails so that said uh like to really say thank you to a couple people",
    "start": "2233560",
    "end": "2239280"
  },
  {
    "text": "so first of all the strey contributors and Community like it's a small team but it's absolutely incredible how how much",
    "start": "2239280",
    "end": "2244960"
  },
  {
    "text": "and how quickly uh features are released and and how clean the API is um for our",
    "start": "2244960",
    "end": "2251160"
  },
  {
    "text": "our own internal operator generally when we're not sure how to do something what we do is we look at the strey API and try to say okay is there anything we can",
    "start": "2251160",
    "end": "2257000"
  },
  {
    "text": "learn from strey before we actually add that feature to little horse so I've just learned a lot about how kfka Works",
    "start": "2257000",
    "end": "2262480"
  },
  {
    "text": "learned a lot about good API design just from using stmy so I want to say thanks to the stmy team uh also thanks to my",
    "start": "2262480",
    "end": "2268680"
  },
  {
    "text": "team at little horse um a lot of people were involved in making this possible uh Saul Mato M elu um Ali you guys really",
    "start": "2268680",
    "end": "2278040"
  },
  {
    "text": "helped uh with with some of the ideas for this and there's a bunch of other ones I couldn't mention and thank you",
    "start": "2278040",
    "end": "2284319"
  },
  {
    "text": "guys for watching and also um you know I'm wearing the sun microsystem shirt want to say uh I don't I don't think",
    "start": "2284319",
    "end": "2289880"
  },
  {
    "text": "he's watching but thanks my dad for making it possible to to work on this little horse project so uh with that",
    "start": "2289880",
    "end": "2295599"
  },
  {
    "text": "said I'll uh Kate if you could help with any of the I don't know how the Q&A process would work but happy to take",
    "start": "2295599",
    "end": "2300880"
  },
  {
    "text": "some questions now if we have two minutes yeah of course thank you very much cole that was a definitely a really",
    "start": "2300880",
    "end": "2307079"
  },
  {
    "text": "interesting session um we do have a couple of questions so the first one was",
    "start": "2307079",
    "end": "2313319"
  },
  {
    "text": "um so this was asked towards the beginning when you were talking about the mutual TLS connection between",
    "start": "2313319",
    "end": "2319200"
  },
  {
    "text": "Brokers um the question was can we use service mesh like ISO instead of the streams you provide Mutual T TLS as most",
    "start": "2319200",
    "end": "2326920"
  },
  {
    "text": "of them use service mesh likeo for pod tood okay that's a fantastic question the answer is kind of um you know when",
    "start": "2326920",
    "end": "2334839"
  },
  {
    "text": "when there is Zookeeper is unfortunately uncompatible with with with ISO I I tried it once and uh the envoy proxy",
    "start": "2334839",
    "end": "2341640"
  },
  {
    "text": "doesn't really like to work with the Zookeeper pods but now there's craft you can technically actually run little not",
    "start": "2341640",
    "end": "2347079"
  },
  {
    "text": "little hor you can actually run Kafka on shmy with uh ISO however uh the the",
    "start": "2347079",
    "end": "2354720"
  },
  {
    "text": "thing is that um stmy there's not really a way to disable the the encryption so you'd have double communication or",
    "start": "2354720",
    "end": "2360880"
  },
  {
    "text": "double encryption which is a little bit of overhead that you don't want and also IO doesn't have any Kafka features so",
    "start": "2360880",
    "end": "2368520"
  },
  {
    "text": "the envoy proxy there is a like a kind of an abandoned Kafka filter that doesn't really do very much so you",
    "start": "2368520",
    "end": "2374359"
  },
  {
    "text": "couldn't do anything like enforcing ACLS and such uh using ISO",
    "start": "2374359",
    "end": "2380160"
  },
  {
    "text": "unfortunately cool thanks um there is I guess this the future external certain",
    "start": "2380640",
    "end": "2385920"
  },
  {
    "text": "manager integration might help with being able to disable but I don't know we're not sure if that's actually going",
    "start": "2385920",
    "end": "2391839"
  },
  {
    "text": "to be a feature will offer or not yet I was talking with a friend yesterday who also uses strey that feature came up so",
    "start": "2391839",
    "end": "2398800"
  },
  {
    "text": "okay interesting which is disabling it specifically for a Ste um and so then we'll do one more",
    "start": "2398800",
    "end": "2405760"
  },
  {
    "text": "question and then there's one more that I'll get you to answer um in text but the other Live question we'll do is is",
    "start": "2405760",
    "end": "2412200"
  },
  {
    "text": "cruise control aware of which topics is owned by which tenant if not how do you",
    "start": "2412200",
    "end": "2417240"
  },
  {
    "text": "prevent cruise control suggesting a rebalance that will potentially compromise your data throughput",
    "start": "2417240",
    "end": "2423720"
  },
  {
    "text": "nfrs um I'm not sure what NFR stands for but I think I understand on the question yeah I'm not sure what it SS for uh well",
    "start": "2423720",
    "end": "2430839"
  },
  {
    "text": "so you you can pass in a list of excluded topics or included topics so basically you can use a regit to control what topics are affected by the the",
    "start": "2430839",
    "end": "2437520"
  },
  {
    "text": "rebalance uh however we haven't really considered that to be necessary because the in our case the number of partitions",
    "start": "2437520",
    "end": "2443400"
  },
  {
    "text": "for our topic because it's a Kus streams application we have a lot because we want to limit the amount of data that's in each Rock CB instance so we'll have",
    "start": "2443400",
    "end": "2450440"
  },
  {
    "text": "like you know 128 partitions per topic and if we only have like up to a couple dozen Brokers we just rebalance all the",
    "start": "2450440",
    "end": "2456520"
  },
  {
    "text": "topics overall the Brokers it's not really a problem uh so we don't necessarily need to make cruise control",
    "start": "2456520",
    "end": "2461680"
  },
  {
    "text": "10 into where we haven't had that problem uh so hope that answers the question and then there's one more in",
    "start": "2461680",
    "end": "2468560"
  },
  {
    "text": "the chat but if you can jump in the chat after we finish and um yeah oh NFR",
    "start": "2468560",
    "end": "2475720"
  },
  {
    "text": "nonfunctional requirement nonfunctional requirement okay I think I answered the question",
    "start": "2475720",
    "end": "2482480"
  },
  {
    "text": "anyway so cool but yeah we we'll leave this session here so thank you very much col and yeah our next session is going",
    "start": "2482480",
    "end": "2489359"
  },
  {
    "text": "to be support teered storage in shmy operated kafa um in 10 minutes can't wait to watch that one",
    "start": "2489359",
    "end": "2497720"
  }
]