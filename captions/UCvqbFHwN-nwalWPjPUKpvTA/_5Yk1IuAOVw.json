[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "hello and welcome to my session on taking full advantage of grpc I'm Jimmy",
    "start": "0",
    "end": "5220"
  },
  {
    "text": "zielinski let's get into who I am and why it's all important",
    "start": "5220",
    "end": "11700"
  },
  {
    "text": "um all right so I am the co-founder of a company called off Zed so auth Zed is",
    "start": "11700",
    "end": "18960"
  },
  {
    "start": "12000",
    "end": "170000"
  },
  {
    "text": "the creators of spice DB Space TV is an open source permissions database inspired by Google settings of our paper",
    "start": "18960",
    "end": "26240"
  },
  {
    "text": "effectively what that means is we are a database where you store relationships between kind of different objects from",
    "start": "26240",
    "end": "33420"
  },
  {
    "text": "your applications for example Amelia is a doctor assigned to this Clinic if you're a healthcare application",
    "start": "33420",
    "end": "40379"
  },
  {
    "text": "and then um folks can query those relationships to determine access",
    "start": "40379",
    "end": "46980"
  },
  {
    "text": "um so things like can Amelia treat this patient who are all the patients Amelia can treat and um who are all the doctors",
    "start": "46980",
    "end": "53820"
  },
  {
    "text": "assigned to this Clinic are types of queries that you can make to our database",
    "start": "53820",
    "end": "59039"
  },
  {
    "text": "we're a little bit of a non-traditional database in the sense that we actually don't support SQL so grpc is actually",
    "start": "59039",
    "end": "66299"
  },
  {
    "text": "our primary querying interface and there are a couple other databases out there",
    "start": "66299",
    "end": "71400"
  },
  {
    "text": "that that follow this this practice Google spanner is one but you might find",
    "start": "71400",
    "end": "77939"
  },
  {
    "text": "this surprising but it actually makes a lot of sense depending on what your domain is for example hours doing Access",
    "start": "77939",
    "end": "85500"
  },
  {
    "text": "Control when you ask if someone has permission to do something you typically do that before they can actually do the",
    "start": "85500",
    "end": "93240"
  },
  {
    "text": "thing so your applications are almost always checking the permission before they have to do any work at all so that",
    "start": "93240",
    "end": "99960"
  },
  {
    "text": "puts kind of authorization questions in the direct line of fire of being a bottleneck for every request in your",
    "start": "99960",
    "end": "107100"
  },
  {
    "text": "systems so that means we're trying to to squeeze out as much performance as possible both server side and client",
    "start": "107100",
    "end": "114420"
  },
  {
    "text": "side and basically having an RPC layer like",
    "start": "114420",
    "end": "120540"
  },
  {
    "text": "grpc lets us actually have that that control on both of those sides pretty",
    "start": "120540",
    "end": "126180"
  },
  {
    "text": "easily as well to make things slightly more concrete we",
    "start": "126180",
    "end": "131400"
  },
  {
    "text": "can talk about kind of like what these slas look like for something like spice DB in single digit milliseconds at the",
    "start": "131400",
    "end": "138900"
  },
  {
    "text": "99 percentile is actually kind of what we're targeting so kind of making that",
    "start": "138900",
    "end": "144599"
  },
  {
    "text": "even more concrete if you are trying to make a request if you have to establish",
    "start": "144599",
    "end": "150540"
  },
  {
    "text": "a new connection or do a TLS handshake which is required for all secure connections that amount of time is",
    "start": "150540",
    "end": "157620"
  },
  {
    "text": "enough to blow your SLA so that means all connections have to be pulled we have to have a decent amount of",
    "start": "157620",
    "end": "163379"
  },
  {
    "text": "sophisticated Logic on both sides of serving the client to reach these slas",
    "start": "163379",
    "end": "169980"
  },
  {
    "text": "but before that I worked at a little company called core OS and coreos had a",
    "start": "169980",
    "end": "175019"
  },
  {
    "start": "170000",
    "end": "227000"
  },
  {
    "text": "mission similar to off Zed which was securing the internet um but unlike offset where we secure the",
    "start": "175019",
    "end": "182040"
  },
  {
    "text": "internet through building uh authorization tooling coreos's goal was",
    "start": "182040",
    "end": "188220"
  },
  {
    "text": "to do it through automated updates so they wanted server software to get updates similar to how cell phone",
    "start": "188220",
    "end": "194519"
  },
  {
    "text": "software gets over the air updates um so before they could do that before",
    "start": "194519",
    "end": "200040"
  },
  {
    "text": "we could do that we actually had to build a whole bunch of things to get like the level of automation such",
    "start": "200040",
    "end": "206760"
  },
  {
    "text": "that we could finally automate those updates at the very end um and we did that by building lots of",
    "start": "206760",
    "end": "211800"
  },
  {
    "text": "systems that were inspired by the internal systems at Google and you might see have seen this trend",
    "start": "211800",
    "end": "218280"
  },
  {
    "text": "um we basically built Google's uh Google inspiring systems at corewest and I'm continuing to do that at my existing",
    "start": "218280",
    "end": "224459"
  },
  {
    "text": "company offset um so fast forward a year into me being at",
    "start": "224459",
    "end": "229739"
  },
  {
    "start": "227000",
    "end": "265000"
  },
  {
    "text": "core OS and uh 2015 Google open sources grpc uh at the time uh it was shockingly",
    "start": "229739",
    "end": "237659"
  },
  {
    "text": "similar to stubby which my co-worker and now co-founder Joey Shore worked on",
    "start": "237659",
    "end": "243180"
  },
  {
    "text": "while he was at Google um basically uh how the ecosystem talk",
    "start": "243180",
    "end": "248940"
  },
  {
    "text": "about it and Google's logic behind open sourcing the project was that if there were going to be folks Building Systems",
    "start": "248940",
    "end": "255000"
  },
  {
    "text": "inspired by Google's internal software well they may as well have an RPC system that's also inspired by The One internal",
    "start": "255000",
    "end": "262199"
  },
  {
    "text": "to Google so fast forward now and uh there are plenty of cloud native projects all using this as their RPC",
    "start": "262199",
    "end": "269880"
  },
  {
    "start": "265000",
    "end": "335000"
  },
  {
    "text": "layer and we kind of have a healthy ecosystem around using grpc I promised that this is the end of my",
    "start": "269880",
    "end": "277860"
  },
  {
    "text": "history lesson and I'll go forward with actually um kind of talking about the the meat and potatoes of this talk which is",
    "start": "277860",
    "end": "286199"
  },
  {
    "text": "um the intro BuzzFeed article fashion maybe one day I'll give this talk at BuzzFeed and it'll come full circle but",
    "start": "286199",
    "end": "293940"
  },
  {
    "text": "I have the top eight tips to get more value out of grpc and and uh unlike the",
    "start": "293940",
    "end": "301560"
  },
  {
    "text": "typical BuzzFeed article where they kind of are daring you to scroll further and further to get to the best content I",
    "start": "301560",
    "end": "308220"
  },
  {
    "text": "actually ordered this so it's the most impactful the most valuable uh thing",
    "start": "308220",
    "end": "313380"
  },
  {
    "text": "about grpc kind of ordered down to the least valuable but um still extremely",
    "start": "313380",
    "end": "318720"
  },
  {
    "text": "valuable and kind of like warning um at the very end it just uh has like",
    "start": "318720",
    "end": "324419"
  },
  {
    "text": "kind of like a takeaway so if you plan to fall asleep throughout this talk all you have to do is stay awake for the",
    "start": "324419",
    "end": "330720"
  },
  {
    "text": "next few and you'll have gotten the most value out of it um so the number one thing that I think",
    "start": "330720",
    "end": "337560"
  },
  {
    "start": "335000",
    "end": "494000"
  },
  {
    "text": "grpc has that might be different from other things is real world usage when",
    "start": "337560",
    "end": "342900"
  },
  {
    "text": "you might be thinking rest Json all this stuff has plenty of real world uses but",
    "start": "342900",
    "end": "348360"
  },
  {
    "text": "um the thing that I kind of want to stress is that um there are really good",
    "start": "348360",
    "end": "353880"
  },
  {
    "text": "projects out there that are both modern and mature using grpc",
    "start": "353880",
    "end": "359100"
  },
  {
    "text": "um better open source that you can go read their code so examples of two that I would um Point people to are Vitesse",
    "start": "359100",
    "end": "366300"
  },
  {
    "text": "and my own space DB um the like these projects kind of are",
    "start": "366300",
    "end": "371880"
  },
  {
    "text": "different because grpc kind of crosses different language ecosystems so you can kind of see best",
    "start": "371880",
    "end": "377639"
  },
  {
    "text": "practices and things and extrapolate those workflows regardless of what your your domain or your project is",
    "start": "377639",
    "end": "384600"
  },
  {
    "text": "um unlike kind of rest apis where sure if you're building a web app and you're doing it in Ruby it makes sense for you",
    "start": "384600",
    "end": "390840"
  },
  {
    "text": "to look at maybe what folks are using in the rails ecosystem but if you're writing stuff in um if you're trying to",
    "start": "390840",
    "end": "397319"
  },
  {
    "text": "write I don't know a database software it may not be useful to see how rest apis are implemented in web apps for",
    "start": "397319",
    "end": "404280"
  },
  {
    "text": "example um so that's that's just my straw man argument I guess",
    "start": "404280",
    "end": "409560"
  },
  {
    "text": "um kind of like the real world usage and other systems um but the super cool thing about grpc",
    "start": "409560",
    "end": "415979"
  },
  {
    "text": "is that you get to kind of see these idioms and patterns that are used in these mature projects",
    "start": "415979",
    "end": "422520"
  },
  {
    "text": "um you can straight up copy them um but not only that because we have open source and the core of the",
    "start": "422520",
    "end": "428280"
  },
  {
    "text": "ecosystem for grpc uh you can actually kind of go into the pull requests and",
    "start": "428280",
    "end": "433319"
  },
  {
    "text": "commit messages for the software and read the justifications behind the",
    "start": "433319",
    "end": "438780"
  },
  {
    "text": "decisions that they've made why are they doing particular things why have they chosen this maybe you'll see that like",
    "start": "438780",
    "end": "445199"
  },
  {
    "text": "actually this is a workaround for some other Behavior or they're they're actually addressing Legacy clients for",
    "start": "445199",
    "end": "451800"
  },
  {
    "text": "example so that can be nice warnings for you to be like oh if you if you don't",
    "start": "451800",
    "end": "457199"
  },
  {
    "text": "have that Legacy maybe you don't need to do this particular thing right um but you get to kind of see these",
    "start": "457199",
    "end": "463560"
  },
  {
    "text": "mature projects and see what their workflows are what tools do they use for example deprecating",
    "start": "463560",
    "end": "470060"
  },
  {
    "text": "rpcs or doing API versioning these aren't the things that you'll find in",
    "start": "470060",
    "end": "475319"
  },
  {
    "text": "the grpc documentation there's no one way to do these things but if you look at all these different projects that are",
    "start": "475319",
    "end": "481500"
  },
  {
    "text": "mature and kind of following the best practices you can arrive at what you think that solution should look like for",
    "start": "481500",
    "end": "488039"
  },
  {
    "text": "your use case in a well-informed way that you might otherwise not be able to do",
    "start": "488039",
    "end": "494880"
  },
  {
    "start": "494000",
    "end": "749000"
  },
  {
    "text": "all right so um now that we've kind of gotten that one out of the way that was big number one uh big number two is buff so buff is",
    "start": "494880",
    "end": "505500"
  },
  {
    "text": "a fast extremely fast Proto buff compiler so it's an alternative to",
    "start": "505500",
    "end": "510960"
  },
  {
    "text": "protoc which if you're following any of the tutorials or official documentation for grpc that's the compiler you're",
    "start": "510960",
    "end": "516899"
  },
  {
    "text": "using now the value for buff isn't so much in the speed of the compiler but actually",
    "start": "516899",
    "end": "523860"
  },
  {
    "text": "the workflow that it provides so buff was originally written at um well buff",
    "start": "523860",
    "end": "529380"
  },
  {
    "text": "is the spiritual successor of a tool that was internally developed at Uber to",
    "start": "529380",
    "end": "534899"
  },
  {
    "text": "manage all of their apis and the big value that I think that buff",
    "start": "534899",
    "end": "540959"
  },
  {
    "text": "gives you is an improvement over kind of reading bash scripts to to do workflows",
    "start": "540959",
    "end": "547560"
  },
  {
    "text": "in in um in grpc and dealing with these printable definitions but most",
    "start": "547560",
    "end": "554279"
  },
  {
    "text": "powerfully it has static analysis and linting for your definitions and I think",
    "start": "554279",
    "end": "560339"
  },
  {
    "text": "this is so important that I even wrote a blog post about it that is featured on Buff's website and if you look at kind",
    "start": "560339",
    "end": "567480"
  },
  {
    "text": "of like the last line of text there that subtitle I call it the first day of the rest of your life because the second you",
    "start": "567480",
    "end": "574680"
  },
  {
    "text": "create an API you're stuck with it now once people start calling it you're going to have to maintain it creating",
    "start": "574680",
    "end": "581700"
  },
  {
    "text": "the code is just the first step code typically outlives you if you're working on a project that is going to be serving",
    "start": "581700",
    "end": "589440"
  },
  {
    "text": "customers and so you might not always have Proto experts available to you to help you",
    "start": "589440",
    "end": "596040"
  },
  {
    "text": "with design decisions so uh and honestly it's hard to keep up with all the changes necessarily but the nice thing",
    "start": "596040",
    "end": "602760"
  },
  {
    "text": "about buff is that once someone learns what those best practices are if they",
    "start": "602760",
    "end": "608580"
  },
  {
    "text": "can codify it they will build it in as a Lynch rule to buff and then everyone who's using buff will get basically if",
    "start": "608580",
    "end": "618180"
  },
  {
    "text": "it's built into your Ci or just your local tooling you'll be aware the second you write the code that um",
    "start": "618180",
    "end": "624899"
  },
  {
    "text": "that you're either breaking or violating something um or you're not doing the best practice",
    "start": "624899",
    "end": "630140"
  },
  {
    "text": "the really really really cool thing and most useful thing with buff is actually detects breaking API changes so it can",
    "start": "630140",
    "end": "637260"
  },
  {
    "text": "tell you if what you've changed versus what you had changes the protobuf wire",
    "start": "637260",
    "end": "642660"
  },
  {
    "text": "format representation enough that you're going to break clients that's incredibly",
    "start": "642660",
    "end": "647700"
  },
  {
    "text": "powerful if you're trying to figure out how to move forward or do backwards",
    "start": "647700",
    "end": "652740"
  },
  {
    "text": "compatibility with new iterations of the same API",
    "start": "652740",
    "end": "657959"
  },
  {
    "text": "and uh kind of like the the Big Value here and the reason why I think buff is",
    "start": "657959",
    "end": "664620"
  },
  {
    "text": "number two is because if you are um if you're maintaining rest apis for example",
    "start": "664620",
    "end": "669959"
  },
  {
    "text": "uh let's use the guiding guiding uh The Guiding Light the North Star the industry which is stripe um stripe has",
    "start": "669959",
    "end": "677120"
  },
  {
    "text": "basically uh clients that haven't been touched that are still calling the same apis perfectly compatibly 15 years later",
    "start": "677120",
    "end": "684779"
  },
  {
    "text": "um but to do that they have to hire a whole team to manage their API and they have",
    "start": "684779",
    "end": "690000"
  },
  {
    "text": "to write a bunch of custom tools and typically doing integration tests against their apis so they're actually",
    "start": "690000",
    "end": "695279"
  },
  {
    "text": "testing the API after all the code is there and kind of like the complete",
    "start": "695279",
    "end": "701399"
  },
  {
    "text": "end-to-end experience versus a lot of the same logic that they're testing when",
    "start": "701399",
    "end": "706560"
  },
  {
    "text": "you're using something like grpc any kind of like RPC language that has this IDL form that we can use static analysis",
    "start": "706560",
    "end": "713100"
  },
  {
    "text": "on we can catch good amount of these problems the second you write the right the actual",
    "start": "713100",
    "end": "718560"
  },
  {
    "text": "definition of the API we don't have to write a client we don't have to generate a client or anything like that we don't",
    "start": "718560",
    "end": "724680"
  },
  {
    "text": "have to like test it and to end in a real system to to tell whether there's a problem and you don't need to hire all",
    "start": "724680",
    "end": "732180"
  },
  {
    "text": "the engineers to build all of that stuff for you and make sure you're maintaining all of that if you just have a static",
    "start": "732180",
    "end": "737820"
  },
  {
    "text": "analysis tool that runs in your editor or runs in your CI that does this for you this is a huge win to production if",
    "start": "737820",
    "end": "745140"
  },
  {
    "text": "you are not using buff but you're using grpc highly recommend you look into it",
    "start": "745140",
    "end": "750540"
  },
  {
    "start": "749000",
    "end": "914000"
  },
  {
    "text": "um so talking about tooling the next one is a library so Google apis is",
    "start": "750540",
    "end": "757740"
  },
  {
    "text": "um basically a collection of shared types from Google's protobuf uh apis",
    "start": "757740",
    "end": "765000"
  },
  {
    "text": "basically um they had a whole bunch of services that were using part of externally facing to the internet and they decided",
    "start": "765000",
    "end": "773040"
  },
  {
    "text": "to refactor basically and pull out all the common types across those apis turns out common types across Google apis are",
    "start": "773040",
    "end": "780240"
  },
  {
    "text": "also useful but they're probably going to be common types across your apis as well so you'll see General patterns here for",
    "start": "780240",
    "end": "786899"
  },
  {
    "text": "error handling managing times and durations key value pairs defend data",
    "start": "786899",
    "end": "792000"
  },
  {
    "text": "structures like this um and the super nice thing about this is",
    "start": "792000",
    "end": "798000"
  },
  {
    "text": "actually depending on what language you're running in there might also already be a library that exists for",
    "start": "798000",
    "end": "803700"
  },
  {
    "text": "these types so instead of you having to Define your own new type for timestamps for example Google already",
    "start": "803700",
    "end": "810959"
  },
  {
    "text": "has one four timestamps and their timestamp library is going to convert",
    "start": "810959",
    "end": "817380"
  },
  {
    "text": "between that format and the standard libraries time type that that is",
    "start": "817380",
    "end": "825600"
  },
  {
    "text": "built in your language Native in your language so you get a lot of really easy conversions",
    "start": "825600",
    "end": "831000"
  },
  {
    "text": "um between your native language types so you can use all libraries you've written and keep your all your code",
    "start": "831000",
    "end": "837180"
  },
  {
    "text": "um kind of like native to the language and not coupled to protobuf um if you if you adopt uh some of the",
    "start": "837180",
    "end": "844139"
  },
  {
    "text": "Google apis so um the other warning thing here is that I",
    "start": "844139",
    "end": "849600"
  },
  {
    "text": "will say it's kind of tricky to know if a project has overlooked Google apis or",
    "start": "849600",
    "end": "856440"
  },
  {
    "text": "deemed it too much complexity and not worth adopting so the reason why uh",
    "start": "856440",
    "end": "863100"
  },
  {
    "text": "traditionally a lot of folks won't have adopted Google apis is because prior to buff there weren't really good workflows",
    "start": "863100",
    "end": "870360"
  },
  {
    "text": "for importing libraries into your own protoboff kind of definitions and",
    "start": "870360",
    "end": "876000"
  },
  {
    "text": "generations so now that both exists it's really easy to add a dependency to something but prior to that you would",
    "start": "876000",
    "end": "882420"
  },
  {
    "text": "have typically vendored it at a particular version which means copying and pasting the code and maintaining it",
    "start": "882420",
    "end": "887940"
  },
  {
    "text": "yourself from that point on so that's kind of error prone and clunky and not a",
    "start": "887940",
    "end": "894180"
  },
  {
    "text": "lot of people like understand how uh how to do the magical incantation for the",
    "start": "894180",
    "end": "899339"
  },
  {
    "text": "proto-c compiler Flags so I'll uh a lot of people have actually",
    "start": "899339",
    "end": "904500"
  },
  {
    "text": "avoided using third-party dependencies it comes to protobuf and grpc but that",
    "start": "904500",
    "end": "909899"
  },
  {
    "text": "should no longer be the case so if you see useful types in here I say go for it",
    "start": "909899",
    "end": "916040"
  },
  {
    "start": "914000",
    "end": "1029000"
  },
  {
    "text": "next in the same vein of trying to avoid writing as much code as possible don't",
    "start": "916139",
    "end": "921959"
  },
  {
    "text": "write if someone else has there's uh this custom plugin which I'll get in the custom plugins later spoilers",
    "start": "921959",
    "end": "928040"
  },
  {
    "text": "but product gen vality which basically writes a validation method so you don't",
    "start": "928040",
    "end": "934320"
  },
  {
    "text": "have to in your print above definitions you can annotate fields and say for example you",
    "start": "934320",
    "end": "941220"
  },
  {
    "text": "have a byte field and in a message and you can actually annotate it and say",
    "start": "941220",
    "end": "946440"
  },
  {
    "text": "this field should never be more than 128 kilobytes um or the string field should only",
    "start": "946440",
    "end": "953699"
  },
  {
    "text": "contain this strings that fit this regular expression and once you've",
    "start": "953699",
    "end": "959820"
  },
  {
    "text": "annotated that you generate code that gives you this validation method and if",
    "start": "959820",
    "end": "965699"
  },
  {
    "text": "you call this validate it throws an error if all of those constraints that you associate with those types in the",
    "start": "965699",
    "end": "971339"
  },
  {
    "text": "protobuf definition are not met this supports a variety of languages as",
    "start": "971339",
    "end": "976620"
  },
  {
    "text": "Sports Go C plus plus Java python um but I'm not sure if this exists in all those languages but in go there's a",
    "start": "976620",
    "end": "983279"
  },
  {
    "text": "really nice middleware that you can use that actually you slot into a server and it basically returns early with an error",
    "start": "983279",
    "end": "991199"
  },
  {
    "text": "if any of the requests coming in are not valid like the validation method throws",
    "start": "991199",
    "end": "996240"
  },
  {
    "text": "an error so that means you don't actually have to manually even call the validate method in your handlers to know",
    "start": "996240",
    "end": "1002259"
  },
  {
    "text": "that every single request coming in meets the constraints that you've labeled uh you've annotated in your part",
    "start": "1002259",
    "end": "1009380"
  },
  {
    "text": "a buff definitions incredibly powerful stuff and you basically don't get you don't have to write the code you have",
    "start": "1009380",
    "end": "1015500"
  },
  {
    "text": "way less room for human error and making any mistakes in what can be pretty sensitive stuff you don't want to accept",
    "start": "1015500",
    "end": "1021380"
  },
  {
    "text": "uh like Corner cases or very uh very corrupted forms of RPC requests right",
    "start": "1021380",
    "end": "1030980"
  },
  {
    "start": "1029000",
    "end": "1206000"
  },
  {
    "text": "so there's another project up here called grpc Gateway originally written by Johann bronhorst and uh what it does",
    "start": "1030980",
    "end": "1039199"
  },
  {
    "text": "is it works very similar to product gen and validate where you annotate your protos but this time you annotate it",
    "start": "1039199",
    "end": "1045860"
  },
  {
    "text": "with an HTTP path and an HTTP method and it generates for you a reverse proxy",
    "start": "1045860",
    "end": "1052520"
  },
  {
    "text": "that will sit in front of your grpc application and actually convert Json HTTP requests into",
    "start": "1052520",
    "end": "1060400"
  },
  {
    "text": "grpc requests and then talk to your service and then your service will write",
    "start": "1060400",
    "end": "1065480"
  },
  {
    "text": "a response back to their reverse proxy and then it will take that response and convert it into Json HTTP and return",
    "start": "1065480",
    "end": "1070700"
  },
  {
    "text": "that to the client so that means your client you can support Legacy clients",
    "start": "1070700",
    "end": "1075980"
  },
  {
    "text": "you can support environments that cannot use grpc maybe they have they have like",
    "start": "1075980",
    "end": "1081320"
  },
  {
    "text": "some kind of memory restrictions because they're an embedded system or anything like that you can support all these",
    "start": "1081320",
    "end": "1086720"
  },
  {
    "text": "environments and not write code to do it you can just generate that code",
    "start": "1086720",
    "end": "1092000"
  },
  {
    "text": "um what's super cool about this is not only can you generate the code to do that you can also generate documentation",
    "start": "1092000",
    "end": "1099020"
  },
  {
    "text": "for the HTTP API it generates um but also you can use that um that same exact generation tool to",
    "start": "1099020",
    "end": "1106580"
  },
  {
    "text": "generate clients so this is all using open API if you're unfamiliar you can Google that or Google Swagger which is",
    "start": "1106580",
    "end": "1113780"
  },
  {
    "text": "the thing that inspired open API but at the end of the day What it lets you do is have API documentation and even",
    "start": "1113780",
    "end": "1120080"
  },
  {
    "text": "generate clients for HTTP so what that means is you can write a grpc service definition",
    "start": "1120080",
    "end": "1125900"
  },
  {
    "text": "and have it generate both documentation for grpc the grpc service itself",
    "start": "1125900",
    "end": "1132520"
  },
  {
    "text": "documentation for HTTP and the HTTP service itself right services and",
    "start": "1132520",
    "end": "1137840"
  },
  {
    "text": "clients right for for both um incredibly incredibly powerful stuff",
    "start": "1137840",
    "end": "1143000"
  },
  {
    "text": "supporting multiple protocols so it may even be a better way of just writing and maintaining rest apis at the end of the",
    "start": "1143000",
    "end": "1149120"
  },
  {
    "text": "day even if you choose to never use the grpc apis or maybe your customers don't or users don't necessarily use it as",
    "start": "1149120",
    "end": "1155179"
  },
  {
    "text": "much so uh there's a really really cool thing for go programmers here which is because",
    "start": "1155179",
    "end": "1161539"
  },
  {
    "text": "your PC Gateway is actually written and go you can do this additional trick where you can actually instead of",
    "start": "1161539",
    "end": "1167059"
  },
  {
    "text": "running the reverse proxy as a separate process as a separate process um you can actually run it in the same process",
    "start": "1167059",
    "end": "1173720"
  },
  {
    "text": "um so that it just calls directly into your app like in memory um but uh even cooler is you can",
    "start": "1173720",
    "end": "1180320"
  },
  {
    "text": "actually make them share the same port if you're willing to sacrifice some performance by using a trick where you",
    "start": "1180320",
    "end": "1186320"
  },
  {
    "text": "read the first couple bytes of a connection and determine whether the request is grpc or HTTP and then route",
    "start": "1186320",
    "end": "1193220"
  },
  {
    "text": "up accordingly internally to your application so that's really really cool stuff you can basically expose one",
    "start": "1193220",
    "end": "1199700"
  },
  {
    "text": "single port for your go service and it can serve HTTP and grpc",
    "start": "1199700",
    "end": "1206500"
  },
  {
    "start": "1206000",
    "end": "1381000"
  },
  {
    "text": "all right um I mentioned middleware a little bit um and I think that like uh one of these",
    "start": "1206960",
    "end": "1213200"
  },
  {
    "text": "super super useful and most interesting things about grpc is that you can",
    "start": "1213200",
    "end": "1218780"
  },
  {
    "text": "actually support client middleware um so there there's uh when people think of middleware they almost always think",
    "start": "1218780",
    "end": "1224900"
  },
  {
    "text": "of server side middleware they think of adding on new Behavior or like authentication or authorization into",
    "start": "1224900",
    "end": "1231320"
  },
  {
    "text": "kind of like their handlers and changing the handlers in um in a server but um",
    "start": "1231320",
    "end": "1237140"
  },
  {
    "text": "what's super interesting about grpc is actually has middleware on both sides um and that is less common but extremely",
    "start": "1237140",
    "end": "1244220"
  },
  {
    "text": "powerful um so powerful that I argue it kind of alleviates the need for an API Gateway a",
    "start": "1244220",
    "end": "1250760"
  },
  {
    "text": "lot of the time um like let's forget about all the rest off I was just talking about like let's get back into why why we like why we're",
    "start": "1250760",
    "end": "1258559"
  },
  {
    "text": "using grpc like let's take full advantage of it um with a single line of code we can add",
    "start": "1258559",
    "end": "1263960"
  },
  {
    "text": "authentication compression um modern observability including logging",
    "start": "1263960",
    "end": "1269240"
  },
  {
    "text": "metrics and tracing we can do timeouts rate limiting uh recoveries exponential back off",
    "start": "1269240",
    "end": "1274880"
  },
  {
    "text": "um and like all this stuff is a single line import into your client your client",
    "start": "1274880",
    "end": "1281600"
  },
  {
    "text": "um and you might be wondering well like why why would I want that in my client",
    "start": "1281600",
    "end": "1286640"
  },
  {
    "text": "um uh Google actually believes um internally in kind of this philosophy",
    "start": "1286640",
    "end": "1293000"
  },
  {
    "text": "that is dumb servers more clients and the value that that has is it lets you",
    "start": "1293000",
    "end": "1298880"
  },
  {
    "text": "actually like iterate on your design a lot on the client side um you're going to do more work and it",
    "start": "1298880",
    "end": "1303980"
  },
  {
    "text": "may be a little bit more complicated but it avoids you putting Behavior into the",
    "start": "1303980",
    "end": "1309919"
  },
  {
    "text": "server that you're going to then have as Tech debt forever you'll have to be maintaining that forever forwards",
    "start": "1309919",
    "end": "1317299"
  },
  {
    "text": "um so if you're not 100 confident that that is behavior that you need server",
    "start": "1317299",
    "end": "1322340"
  },
  {
    "text": "side first you should try to experiment with a client side and make a really really smart client a",
    "start": "1322340",
    "end": "1328760"
  },
  {
    "text": "great example of this is actually Kube cuddle for a super long time in the kubernetes ecosystem the kubernetes API",
    "start": "1328760",
    "end": "1335419"
  },
  {
    "text": "has served us was pretty basic and Kube cuddle when you did Coupe cuddle apply it did all of this logic to figure out",
    "start": "1335419",
    "end": "1342320"
  },
  {
    "text": "what needed to be applied to the the actual Etsy CD inside of kubernetes",
    "start": "1342320",
    "end": "1350679"
  },
  {
    "text": "but nowadays we have finally a lot of that logic that was being done in apply",
    "start": "1350679",
    "end": "1356980"
  },
  {
    "text": "we came to the conclusion that this was core logic it should actually be in a server and now we have server side apply",
    "start": "1356980",
    "end": "1363620"
  },
  {
    "text": "in kubernetes great so this is an example of that make the client really smart until you know that this is core",
    "start": "1363620",
    "end": "1370100"
  },
  {
    "text": "behavior and then you can move that into the server smart clients highly recommended if",
    "start": "1370100",
    "end": "1377000"
  },
  {
    "text": "you're developing a service and you don't know exactly what should be in the server yet um",
    "start": "1377000",
    "end": "1382700"
  },
  {
    "start": "1381000",
    "end": "1607000"
  },
  {
    "text": "so custom plugins I've mentioned a couple plugins so far I mentioned how we can generate all these different things",
    "start": "1382700",
    "end": "1389000"
  },
  {
    "text": "additionally so what a plug-in does is it is the hook that generates code in a",
    "start": "1389000",
    "end": "1396020"
  },
  {
    "text": "protobuf compiler um so uh for example when you generate",
    "start": "1396020",
    "end": "1401059"
  },
  {
    "text": "your product Buffs in a particular language so you use go for example",
    "start": "1401059",
    "end": "1407299"
  },
  {
    "text": "um that is a the go plugin and then there's a gogrpc plugin which generates",
    "start": "1407299",
    "end": "1412640"
  },
  {
    "text": "your service definitions in go um when when I was talking about product",
    "start": "1412640",
    "end": "1418039"
  },
  {
    "text": "gen validate that generates your validation methods um that is an additional plug-in",
    "start": "1418039",
    "end": "1423740"
  },
  {
    "text": "um uh when I talked about uh kind of the open API and the different HTTP",
    "start": "1423740",
    "end": "1430280"
  },
  {
    "text": "um content that you can generate these are additional plugins that you can generate off of your protobuf definitions but um what's really cool is",
    "start": "1430280",
    "end": "1437600"
  },
  {
    "text": "that uh we can write our own plugins we're not beholden to just one of our",
    "start": "1437600",
    "end": "1442940"
  },
  {
    "text": "plugins it is just already for jrpc and product buff so if you see your problem like these",
    "start": "1442940",
    "end": "1449840"
  },
  {
    "text": "other projects that I just mentioned you can fix that problem and what's really interesting is you can even address",
    "start": "1449840",
    "end": "1455539"
  },
  {
    "text": "problems that you find in the foundational plugins for example the go",
    "start": "1455539",
    "end": "1460820"
  },
  {
    "text": "Plugin or the um or the grpc plugin for example the folks over at Planet scale",
    "start": "1460820",
    "end": "1467000"
  },
  {
    "text": "while developing the tests built this project called VT protoboff what they noticed was that when you are writing",
    "start": "1467000",
    "end": "1474520"
  },
  {
    "text": "go code for grpc or for just part of generally what you're doing is you're",
    "start": "1474520",
    "end": "1480559"
  },
  {
    "text": "actually using runtime type reflection and go when you're encoding and decoding",
    "start": "1480559",
    "end": "1487340"
  },
  {
    "text": "um to two bytes to the protobuf wire format and so that's really slow and",
    "start": "1487340",
    "end": "1494480"
  },
  {
    "text": "they're trying to write a high performance server so they realized like hey we have actually have all this",
    "start": "1494480",
    "end": "1499880"
  },
  {
    "text": "information ahead of time we know because we have the definitions and we're generating the code to do all this",
    "start": "1499880",
    "end": "1505220"
  },
  {
    "text": "stuff we know what the size of this thing when it's encoded is going to be statically and we know all these types",
    "start": "1505220",
    "end": "1512840"
  },
  {
    "text": "statically already why aren't we using that information when we encode and decode so what they did is they wrote",
    "start": "1512840",
    "end": "1519440"
  },
  {
    "text": "their own custom plugin that generates the code that does all that so when you",
    "start": "1519440",
    "end": "1525559"
  },
  {
    "text": "use encode and decode like their Marshall VT Marshall and vtn Marshall",
    "start": "1525559",
    "end": "1530919"
  },
  {
    "text": "you are actually not doing any reflection and it's way more performant than the built-in encoding and decoding",
    "start": "1530919",
    "end": "1538159"
  },
  {
    "text": "that you get with grpc so even when you hit the core",
    "start": "1538159",
    "end": "1545559"
  },
  {
    "text": "core like you you hit the boundaries of what you can actually do with the core",
    "start": "1545559",
    "end": "1550580"
  },
  {
    "text": "technology it also gives you a door to kind of like sidestep it and do whatever you need just to just to solve your",
    "start": "1550580",
    "end": "1557720"
  },
  {
    "text": "problem so custom plugins are incredibly powerful because there wasn't really a lot of",
    "start": "1557720",
    "end": "1564860"
  },
  {
    "text": "documentation or really a specification even around the input and output that",
    "start": "1564860",
    "end": "1571400"
  },
  {
    "text": "you kind of take to write your own the buff folks have done great work in kind of making this more well-known and",
    "start": "1571400",
    "end": "1578179"
  },
  {
    "text": "building out an ecosystem and packaging for this stuff I predict in the future that the open source ecosystem for",
    "start": "1578179",
    "end": "1584559"
  },
  {
    "text": "custom plugins will grow massively I know that a bunch of companies actually",
    "start": "1584559",
    "end": "1590539"
  },
  {
    "text": "have pretty healthy internal plug-ins that they they share among themselves for some of the largest grpc",
    "start": "1590539",
    "end": "1597080"
  },
  {
    "text": "shops but really what we want is to build this ecosystem and have have everyone feel empowered when they they",
    "start": "1597080",
    "end": "1603500"
  },
  {
    "text": "have an itch they can scratch it so with that my final my final feature",
    "start": "1603500",
    "end": "1609380"
  },
  {
    "start": "1607000",
    "end": "1832000"
  },
  {
    "text": "is the mystery box which is actually more of a warning that I'm going to leave you off with um this is that uh while I did mention a",
    "start": "1609380",
    "end": "1618559"
  },
  {
    "text": "lot of the stuff super cool things all done in the community it's actually still really hard uh when you're in the",
    "start": "1618559",
    "end": "1624080"
  },
  {
    "text": "grpc ecosystem to figure out what is the best practice you can look at some",
    "start": "1624080",
    "end": "1629419"
  },
  {
    "text": "really popular projects or really useful projects where they describe uh kind of like the value they're going to give you",
    "start": "1629419",
    "end": "1634940"
  },
  {
    "text": "and you can tell yourself hey that's perfect that's exactly what I wanted but it's really hard for you to know how",
    "start": "1634940",
    "end": "1640039"
  },
  {
    "text": "they're doing it or if they're still maintained or if they're using all the best practices",
    "start": "1640039",
    "end": "1645320"
  },
  {
    "text": "so for example if you're in the go ecosystem there's an amazing Library called GoGo protobuf it's incredibly",
    "start": "1645320",
    "end": "1650419"
  },
  {
    "text": "useful for many years unfortunately it's end of life it's unmaintained it's using an old version of protobuf you shouldn't",
    "start": "1650419",
    "end": "1657080"
  },
  {
    "text": "use it for new projects but the functionality provided for many years was Second To None it was incredibly",
    "start": "1657080",
    "end": "1663799"
  },
  {
    "text": "useful library for squeezing out more performance in protobuf um and making different various trade-offs",
    "start": "1663799",
    "end": "1670400"
  },
  {
    "text": "actually depending on what domain you're interested in using but there's also",
    "start": "1670400",
    "end": "1676340"
  },
  {
    "text": "kind of nowadays at least they have a warning on it they fully admit that the project is unmaintained and you should",
    "start": "1676340",
    "end": "1681679"
  },
  {
    "text": "look elsewhere but that may not be obvious if you're not reading kind of the readme but you're just looking at documentation or looking at someone",
    "start": "1681679",
    "end": "1688039"
  },
  {
    "text": "else's code for example ETD which is a super well known very mature product it's critical to all",
    "start": "1688039",
    "end": "1694880"
  },
  {
    "text": "kinds of cloud native systems including kubernetes itself it uses Coco Proto buff",
    "start": "1694880",
    "end": "1701419"
  },
  {
    "text": "um what's what's a shame is that uh there are very mature critical projects",
    "start": "1701419",
    "end": "1706520"
  },
  {
    "text": "out there but they're not necessarily modern um so when a CD adopted grpc",
    "start": "1706520",
    "end": "1714140"
  },
  {
    "text": "um for I think it was apiv two either API V2 or API V3",
    "start": "1714140",
    "end": "1720740"
  },
  {
    "text": "um they adopted All The Cutting Edge stuff they it looked right it was Modern it was great then but then they never",
    "start": "1720740",
    "end": "1727039"
  },
  {
    "text": "touched it um which is a shame because it means that if you are using modern protobuf",
    "start": "1727039",
    "end": "1732860"
  },
  {
    "text": "tooling and you go take the STD service definition and then generate them you actually probably can't talk that CD",
    "start": "1732860",
    "end": "1739520"
  },
  {
    "text": "with that because they haven't kept up and updated the server side um so there's going to be incompatibilities there which means that",
    "start": "1739520",
    "end": "1746779"
  },
  {
    "text": "now they're losing a lot of the benefit of the the grpc ecosystem they're not",
    "start": "1746779",
    "end": "1752000"
  },
  {
    "text": "able to actually leverage all these tools and modern new things have folks take their definitions generate and run",
    "start": "1752000",
    "end": "1760100"
  },
  {
    "text": "and actually what you actually end up doing in practice is you kind of have a",
    "start": "1760100",
    "end": "1765320"
  },
  {
    "text": "CD specific client now like it's no longer a grpc client it's an FCD client because etcd speaks a particular flavor",
    "start": "1765320",
    "end": "1772700"
  },
  {
    "text": "of grpc that's old and bespoke um it's really unfortunate and if you",
    "start": "1772700",
    "end": "1778760"
  },
  {
    "text": "kind of go out there naively thinking oh this is a critical project they must be doing it right I'm going to learn from",
    "start": "1778760",
    "end": "1784580"
  },
  {
    "text": "them copy what they're doing it you might end up adopting the wrong things unless you do diligence to make sure",
    "start": "1784580",
    "end": "1790820"
  },
  {
    "text": "that what you're copying is is right um so that's my word of warning if you have",
    "start": "1790820",
    "end": "1797720"
  },
  {
    "text": "any other questions you can find me on the social medias Twitter Mastodon",
    "start": "1797720",
    "end": "1802760"
  },
  {
    "text": "GitHub my company Zed actually has a Discord where we discuss lots of Open Source technology considering Spice TV",
    "start": "1802760",
    "end": "1809720"
  },
  {
    "text": "itself is open source so if you have questions about necessarily how we're using grpc or you're interested in kind",
    "start": "1809720",
    "end": "1815899"
  },
  {
    "text": "of like tricks that we have or find anything on the issue tracker related to that feel free to join that and ask",
    "start": "1815899",
    "end": "1821120"
  },
  {
    "text": "questions there I'm also on the kubernetes slack if you want to ask me questions directly there or in the grpc",
    "start": "1821120",
    "end": "1827480"
  },
  {
    "text": "channel itself there so thank you for your time",
    "start": "1827480",
    "end": "1833140"
  }
]