[
  {
    "text": "hello everyone i'm yatseek and i'm java developer uh i will try to tell you",
    "start": "3120",
    "end": "10080"
  },
  {
    "text": "something about the test containers library so as i was saying uh i will try",
    "start": "10080",
    "end": "17760"
  },
  {
    "text": "to give you a brief introduction into test containers library uh so first thing first i will",
    "start": "17760",
    "end": "26400"
  },
  {
    "text": "tell a few words about the agenda i said for for this presentation so it",
    "start": "26400",
    "end": "33200"
  },
  {
    "text": "it is as follows uh so i strongly believe that an",
    "start": "33200",
    "end": "40000"
  },
  {
    "text": "introduction of the new tool must be a some kind of response to a need and the",
    "start": "40000",
    "end": "48160"
  },
  {
    "text": "need is usually created by a problem some kind of problem we want to solve or",
    "start": "48160",
    "end": "54640"
  },
  {
    "text": "we want to improve some area so during this",
    "start": "54640",
    "end": "60878"
  },
  {
    "text": "presentation we will establish that problem so",
    "start": "60920",
    "end": "66600"
  },
  {
    "text": "uh we will try to we will try to make sure that that",
    "start": "66600",
    "end": "74159"
  },
  {
    "text": "the test containers library is a good tool for so solving this problem or",
    "start": "74159",
    "end": "80640"
  },
  {
    "text": "helping us out with this problem uh we will talk a little bit why the",
    "start": "80640",
    "end": "86640"
  },
  {
    "text": "problem is the problem we are trying to solve and how do we want to solve it",
    "start": "86640",
    "end": "92640"
  },
  {
    "text": "using uh test containers ideally yeah because it's our main men today uh and",
    "start": "92640",
    "end": "100320"
  },
  {
    "text": "also about eventual benefits if there are uh such of the test container",
    "start": "100320",
    "end": "109520"
  },
  {
    "text": "solution so yeah what's the problem that we will try to",
    "start": "109799",
    "end": "116759"
  },
  {
    "text": "solve so i i think and i'm almost pretty sure that all of us were in a place",
    "start": "116759",
    "end": "123520"
  },
  {
    "text": "where we develop an application we write a bunch of unit tests maybe good ones",
    "start": "123520",
    "end": "130399"
  },
  {
    "text": "maybe perfect ones and everything seems to be perfect",
    "start": "130399",
    "end": "135480"
  },
  {
    "text": "uh we launch the tests and everything is green yeah it's our small developers",
    "start": "135480",
    "end": "142760"
  },
  {
    "text": "paradise where we're not so often yeah so our green paradise and these are",
    "start": "142760",
    "end": "150400"
  },
  {
    "text": "those unique moments of joy in every developer's life when the tests are green yeah",
    "start": "150400",
    "end": "156680"
  },
  {
    "text": "so let's say that we have about 80% of the production code covered by unit",
    "start": "156680",
    "end": "164480"
  },
  {
    "text": "tests we run the application and to be honest different things may",
    "start": "164480",
    "end": "172000"
  },
  {
    "text": "actually happen but we have good unit test coverage right we have those magical",
    "start": "172000",
    "end": "180360"
  },
  {
    "text": "80% so the unit tests are enough and probably yeah",
    "start": "180360",
    "end": "186840"
  },
  {
    "text": "but and thanks to mati who showed this meme on some",
    "start": "186840",
    "end": "193239"
  },
  {
    "text": "presentation it is a perfect uh visual representation of our pro problem so we",
    "start": "193239",
    "end": "200560"
  },
  {
    "text": "have automatic doors and automatic gate which works uh every single of them",
    "start": "200560",
    "end": "208239"
  },
  {
    "text": "work perfectly fine but together they are not working completely correctly yes",
    "start": "208239",
    "end": "214640"
  },
  {
    "text": "so we see that when the gate is closing the doors are opening so something is",
    "start": "214640",
    "end": "219840"
  },
  {
    "text": "definitely wrong here uh and it happened because in unit test",
    "start": "219840",
    "end": "226879"
  },
  {
    "text": "we don't cover the interaction between different components or different",
    "start": "226879",
    "end": "232920"
  },
  {
    "text": "services so why do we have such problems and yeah unit tests are great",
    "start": "232920",
    "end": "240000"
  },
  {
    "text": "yeah i hope that we all can agree on that so they are this basic uh this",
    "start": "240000",
    "end": "246640"
  },
  {
    "text": "basic thing which is a first line of our defense against bugs and some unexpected",
    "start": "246640",
    "end": "254760"
  },
  {
    "text": "behaviors and sneaky corner cases and because they focus on units and they",
    "start": "254760",
    "end": "262560"
  },
  {
    "text": "isolate isolate those code units and thanks to that they are very very fast",
    "start": "262560",
    "end": "268880"
  },
  {
    "text": "so we're able to run hundreds of tests in a split second yeah so that's really",
    "start": "268880",
    "end": "276400"
  },
  {
    "text": "nice and they are also very helpful when it comes to debugging small portions of",
    "start": "276400",
    "end": "283199"
  },
  {
    "text": "the code yes so we've all been there we've all uh written our first hello",
    "start": "283199",
    "end": "290080"
  },
  {
    "text": "world application or some simple calculators and we don't necessarily want to launch the whole application",
    "start": "290080",
    "end": "297600"
  },
  {
    "text": "every single time and thanks to the tests we can uh test the part of our",
    "start": "297600",
    "end": "302960"
  },
  {
    "text": "code so like for example one method so that's perfect yeah uh however",
    "start": "302960",
    "end": "310720"
  },
  {
    "text": "uh they unit tests in general are not perfect yeah they have",
    "start": "310720",
    "end": "316400"
  },
  {
    "text": "their limitations so their greatest greatest strength which is the isolated",
    "start": "316400",
    "end": "323360"
  },
  {
    "text": "focus on on the unit of code may become their bigger limitations which we've",
    "start": "323360",
    "end": "330000"
  },
  {
    "text": "seen already on the previous example of our doors yes so they were working",
    "start": "330000",
    "end": "335759"
  },
  {
    "text": "correctly but together they weren't so it's some kind of integration",
    "start": "335759",
    "end": "340960"
  },
  {
    "text": "blindness uh which we need to balance somehow with something else and unit",
    "start": "340960",
    "end": "348560"
  },
  {
    "text": "tests may also give us the false feeling of security so our application is",
    "start": "348560",
    "end": "354160"
  },
  {
    "text": "immortal right and we've seen that simple integration uh can destroy the whole",
    "start": "354160",
    "end": "362919"
  },
  {
    "text": "thing uh so in our complex modern applications",
    "start": "362919",
    "end": "369440"
  },
  {
    "text": "uh i think that unit tests are not uh sufficient anymore we need something",
    "start": "369440",
    "end": "377880"
  },
  {
    "text": "uh we need something complmentary to unit tests uh which will balance out",
    "start": "377880",
    "end": "384000"
  },
  {
    "text": "unit test disadvantages yeah so we need some kind of integration testing ideally",
    "start": "384000",
    "end": "390000"
  },
  {
    "text": "or something like that unit test doesn't give us the",
    "start": "390000",
    "end": "395360"
  },
  {
    "text": "production-like environment so they are perfect for checking the portion of the",
    "start": "395360",
    "end": "401120"
  },
  {
    "text": "code but they are not perfect and not reliable on on their own",
    "start": "401120",
    "end": "409479"
  },
  {
    "text": "only yes so i was talking about the consequences already i guess but for me",
    "start": "409479",
    "end": "416160"
  },
  {
    "text": "the the biggest problem is this first one the undetected integration problems",
    "start": "416160",
    "end": "422960"
  },
  {
    "text": "uh which may appear everywhere yeah on every uh production or staging",
    "start": "422960",
    "end": "431240"
  },
  {
    "text": "environment because of that we're losing time to figure out what's wrong we're",
    "start": "431240",
    "end": "436479"
  },
  {
    "text": "losing time uh to set the correct i don't know urls to databases or",
    "start": "436479",
    "end": "443280"
  },
  {
    "text": "something like that and maybe we we had a typo yeah and we haven't spotted it uh",
    "start": "443280",
    "end": "451840"
  },
  {
    "text": "earlier and we're wasting our time on constantly deploying the applications",
    "start": "451840",
    "end": "459520"
  },
  {
    "text": "uh a few times to solve one simple issue",
    "start": "459520",
    "end": "464800"
  },
  {
    "text": "uh and yeah in in general i think that it leads to some kind of reduced",
    "start": "464800",
    "end": "471280"
  },
  {
    "text": "confidence in our own code quality so it will eventually lead to",
    "start": "471280",
    "end": "480599"
  },
  {
    "text": "uh it will eventually lead to a point where we're a little bit scared of",
    "start": "480599",
    "end": "486240"
  },
  {
    "text": "touching uh some area of our application and it shouldn't be the case especially",
    "start": "486240",
    "end": "492160"
  },
  {
    "text": "if we have tools which will help us prevent",
    "start": "492160",
    "end": "497520"
  },
  {
    "text": "that so yeah how can we solve those problems so i i've already used the",
    "start": "497720",
    "end": "502879"
  },
  {
    "text": "magic word the word integration testing so i think that uh this answer",
    "start": "502879",
    "end": "510319"
  },
  {
    "text": "is pretty obvious and we should use integration testing and we all know that",
    "start": "510319",
    "end": "518039"
  },
  {
    "text": "so this uh these integration tests are this complimentary",
    "start": "518039",
    "end": "524720"
  },
  {
    "text": "uh part of the unit of the testing world which we i think we we need to have a",
    "start": "524720",
    "end": "532880"
  },
  {
    "text": "robust and reliable application yeah uh so what are those integration",
    "start": "532880",
    "end": "541839"
  },
  {
    "text": "tests so they are mainly designed to validate if uh different parts of the",
    "start": "541839",
    "end": "548480"
  },
  {
    "text": "system are working together as intended so their greatest benefit is",
    "start": "548480",
    "end": "555360"
  },
  {
    "text": "this one the they testing collaboration between different parts and they they",
    "start": "555360",
    "end": "560959"
  },
  {
    "text": "can emulate if configured properly uh production-l like environment on our",
    "start": "560959",
    "end": "566560"
  },
  {
    "text": "local machine so again we'll be able to debug a portion of our code just like",
    "start": "566560",
    "end": "574080"
  },
  {
    "text": "with unit test of course with some overhead but not so big and we still can",
    "start": "574080",
    "end": "580800"
  },
  {
    "text": "uh spot the uh spot the issues very early on on early stages of uh of our",
    "start": "580800",
    "end": "590760"
  },
  {
    "text": "development but they are also not perfect as every tool so they have much",
    "start": "590760",
    "end": "596160"
  },
  {
    "text": "slower execution time uh they have uh yeah we we can run",
    "start": "596160",
    "end": "601680"
  },
  {
    "text": "a bunch of unit tests in split seconds yes so in a few seconds we can run thousands of them it's not the case in",
    "start": "601680",
    "end": "608800"
  },
  {
    "text": "integration test because we need to set up the whole environment yeah so they",
    "start": "608800",
    "end": "614240"
  },
  {
    "text": "cost us something they cost us the time and we all know that as developers we",
    "start": "614240",
    "end": "620160"
  },
  {
    "text": "don't like to wait for things to happen and we want them to be pretty quickly",
    "start": "620160",
    "end": "626240"
  },
  {
    "text": "pretty quick uh there's also maintenance overhead so in general you will have",
    "start": "626240",
    "end": "633519"
  },
  {
    "text": "more classes to maintain you will have more test cases to maintain and you have",
    "start": "633519",
    "end": "641519"
  },
  {
    "text": "uh you you need your team to understand the testing framework so it also gives",
    "start": "641519",
    "end": "646800"
  },
  {
    "text": "some kind of overhead to your engineers that they must know the tool and use it",
    "start": "646800",
    "end": "654120"
  },
  {
    "text": "properly and they may also have complex setup but it depends on our application",
    "start": "654120",
    "end": "661440"
  },
  {
    "text": "in microservices world where i'm from i would say i use like three or",
    "start": "661440",
    "end": "668720"
  },
  {
    "text": "four dependencies max so it's not so much but it's also it also is enough to",
    "start": "668720",
    "end": "675839"
  },
  {
    "text": "give you a complex uh problem to solve yeah to",
    "start": "675839",
    "end": "681440"
  },
  {
    "text": "test and as a response to to those needs uh",
    "start": "682040",
    "end": "689600"
  },
  {
    "text": "developers from atomic jar provided a solution named as test containers so as",
    "start": "689600",
    "end": "696720"
  },
  {
    "text": "they say uh on their web page which i highly recommend you to visit uh they",
    "start": "696720",
    "end": "703200"
  },
  {
    "text": "say that test containers is open-source framework for providing throwaway lightweight instances of databases",
    "start": "703200",
    "end": "710480"
  },
  {
    "text": "message brokers web browsers or just anything that can run in the docker",
    "start": "710480",
    "end": "716000"
  },
  {
    "text": "container so literally from my experience if you can provide docker",
    "start": "716000",
    "end": "721480"
  },
  {
    "text": "image you can use test containers library thanks to the uh generic",
    "start": "721480",
    "end": "727839"
  },
  {
    "text": "container which which they uh provide and which i will describe in a",
    "start": "727839",
    "end": "734279"
  },
  {
    "text": "minute but you you can even build your own docker image uh for the testing",
    "start": "734279",
    "end": "741200"
  },
  {
    "text": "purposes so that's great and generic container is like the central most basic",
    "start": "741200",
    "end": "748399"
  },
  {
    "text": "unit of their uh library uh so yeah test containers have",
    "start": "748399",
    "end": "756079"
  },
  {
    "text": "some key features and benefits and here are some of them so uh",
    "start": "756079",
    "end": "762160"
  },
  {
    "text": "first three i guess are the most important so we we have container",
    "start": "762160",
    "end": "767480"
  },
  {
    "text": "orchestration so we literally don't have to do anything almost anything uh",
    "start": "767480",
    "end": "773560"
  },
  {
    "text": "because they automated the whole process so much and they're still developing uh",
    "start": "773560",
    "end": "781040"
  },
  {
    "text": "cool features which help us uh automate all the process so they took care about",
    "start": "781040",
    "end": "788079"
  },
  {
    "text": "the provisioning management and tear down of containers so we don't have uh",
    "start": "788079",
    "end": "793279"
  },
  {
    "text": "to manually start the containers for our applications like it is in the let's say",
    "start": "793279",
    "end": "801120"
  },
  {
    "text": "typical case when we run docker compose app or something like that no we don't have to do that here we have it",
    "start": "801120",
    "end": "808240"
  },
  {
    "text": "everything configured in our code within just a few lines of code and few annotations or few properties specified",
    "start": "808240",
    "end": "815519"
  },
  {
    "text": "in your in your application context and what's maybe even more",
    "start": "815519",
    "end": "822880"
  },
  {
    "text": "important they give us possibility to have reproducible uh",
    "start": "822880",
    "end": "828440"
  },
  {
    "text": "environments with real dependencies so if we have",
    "start": "828440",
    "end": "834360"
  },
  {
    "text": "postgress 16 on production we can have our tests operating on postgress 16",
    "start": "834360",
    "end": "840959"
  },
  {
    "text": "there's no problem we have older version we can specify older version everything",
    "start": "840959",
    "end": "846560"
  },
  {
    "text": "is configurable and that's why i think it's so reliable to to use this this tool",
    "start": "846560",
    "end": "855279"
  },
  {
    "text": "this feature uh they also uh took care about the isolation so in",
    "start": "855279",
    "end": "862480"
  },
  {
    "text": "general containers are isolated so the tests are not interfered one by",
    "start": "862480",
    "end": "870600"
  },
  {
    "text": "another and but we can control this behavior and i will show you one common",
    "start": "870600",
    "end": "875760"
  },
  {
    "text": "example where you can make your tests faster and reuse the containers h and",
    "start": "875760",
    "end": "882800"
  },
  {
    "text": "they allow parallel testing however i'm not an expert here to be honest i've never used that but uh i will for sure",
    "start": "882800",
    "end": "891279"
  },
  {
    "text": "uh go a little bit deeper here to speed up the whole integration testing process",
    "start": "891279",
    "end": "897600"
  },
  {
    "text": "because it takes some time it's not like unit tests it's much longer depending on",
    "start": "897600",
    "end": "903279"
  },
  {
    "text": "the number of containers you're using and the configuration uh so for now uh test",
    "start": "903279",
    "end": "912639"
  },
  {
    "text": "container supports for following languages so the main ones are like java go python rust rabby and so on uh i'm",
    "start": "912639",
    "end": "922720"
  },
  {
    "text": "not pretty sure if if atomic jar is responsible for maintenance of every",
    "start": "922720",
    "end": "929680"
  },
  {
    "text": "single one of them however the communities are so big right now that i",
    "start": "929680",
    "end": "936199"
  },
  {
    "text": "think you will not have any problem uh finding solutions on stack overflow or",
    "start": "936199",
    "end": "942959"
  },
  {
    "text": "or some other on some or some other pages so",
    "start": "942959",
    "end": "948480"
  },
  {
    "text": "they are commonly used to nowadays and in java world",
    "start": "948480",
    "end": "956199"
  },
  {
    "text": "uh i think that you all heard about spring boot yes so it's the main",
    "start": "956199",
    "end": "961440"
  },
  {
    "text": "framework for java at least uh in poland as i heard we love spring",
    "start": "961440",
    "end": "967040"
  },
  {
    "text": "boot and they provide uh integration with test container and they improve",
    "start": "967040",
    "end": "974720"
  },
  {
    "text": "this integration uh constantly",
    "start": "974720",
    "end": "981079"
  },
  {
    "text": "so yeah i told you that the basic unit of test containers is generic",
    "start": "983040",
    "end": "990839"
  },
  {
    "text": "container so it it's is just a simple container which exposes to you some data",
    "start": "990839",
    "end": "998639"
  },
  {
    "text": "and gets from you some information like the docker image you want to use",
    "start": "998639",
    "end": "1007040"
  },
  {
    "text": "so here in this example we can see that we're using generic container for uh for",
    "start": "1007040",
    "end": "1013600"
  },
  {
    "text": "radius so probably some cache or as a database i don't know and in spring boot",
    "start": "1013600",
    "end": "1021279"
  },
  {
    "text": "the whole configuration uh looks almost or more or less like",
    "start": "1021279",
    "end": "1027438"
  },
  {
    "text": "this so we have a few lines of code and our radius is ready for uh for the traffic",
    "start": "1027439",
    "end": "1036240"
  },
  {
    "text": "yeah so we can send data there we can get data from there and so on so just a",
    "start": "1036240",
    "end": "1044240"
  },
  {
    "text": "few lines of code gives us possibility to test our radius our application along",
    "start": "1044240",
    "end": "1051039"
  },
  {
    "text": "with radius however uh there is something more there",
    "start": "1051039",
    "end": "1057600"
  },
  {
    "text": "is much more than generic containers so uh test container creators",
    "start": "1057600",
    "end": "1066120"
  },
  {
    "text": "provides a lot of different modules and they provide specific containers for",
    "start": "1066120",
    "end": "1074360"
  },
  {
    "text": "different types of services so i guess that there there is more sql databases",
    "start": "1074360",
    "end": "1082160"
  },
  {
    "text": "named that i know that are supported uh so the main ones of course like",
    "start": "1082160",
    "end": "1087679"
  },
  {
    "text": "postgress or uh or mssql is also",
    "start": "1087679",
    "end": "1093960"
  },
  {
    "text": "supported they support kafka which is really nice rabbit",
    "start": "1093960",
    "end": "1100280"
  },
  {
    "text": "mq and other stuff and remember that that in case you don't have the specific",
    "start": "1100280",
    "end": "1108400"
  },
  {
    "text": "container you can still provide the generic one like with radius because red",
    "start": "1108400",
    "end": "1114559"
  },
  {
    "text": "radius doesn't have its own container i don't know why maybe it's too simple and",
    "start": "1114559",
    "end": "1120160"
  },
  {
    "text": "they skip that but yeah it's possible to literally",
    "start": "1120160",
    "end": "1125360"
  },
  {
    "text": "put everything into such container you just need to specify the",
    "start": "1125360",
    "end": "1131280"
  },
  {
    "text": "uh the image and some parameters but here in this example we have postgress",
    "start": "1131280",
    "end": "1139240"
  },
  {
    "text": "container where we specify the version and we have a bunch of useful methods",
    "start": "1139240",
    "end": "1146400"
  },
  {
    "text": "which are not exposed via the generic container api so like with database name",
    "start": "1146400",
    "end": "1152480"
  },
  {
    "text": "with username and with password and it's really easy and convenient thing to use",
    "start": "1152480",
    "end": "1158559"
  },
  {
    "text": "yeah so they have pretty much uh they have pretty much everything i always",
    "start": "1158559",
    "end": "1165039"
  },
  {
    "text": "needed in in those apis so so yeah if we use specific containers",
    "start": "1165039",
    "end": "1172400"
  },
  {
    "text": "specialized containers uh we're good to go",
    "start": "1172400",
    "end": "1178600"
  },
  {
    "text": "uh so yeah as i said we can do everything we need with generic container it it gives us enough",
    "start": "1178760",
    "end": "1186240"
  },
  {
    "text": "information to make sure that our application will know where the",
    "start": "1186240",
    "end": "1192039"
  },
  {
    "text": "container and the service inside the container are so we can",
    "start": "1192039",
    "end": "1198880"
  },
  {
    "text": "uh we can set them up together to work",
    "start": "1198880",
    "end": "1203440"
  },
  {
    "text": "together okay and few words about the topic that i'm definitely not master of",
    "start": "1204200",
    "end": "1212000"
  },
  {
    "text": "so ci/cd pipeline it's also possible to configure ci/cd pipelines uh in a way",
    "start": "1212000",
    "end": "1220120"
  },
  {
    "text": "that test containers tests work fine so in my uh previous project we were using",
    "start": "1220120",
    "end": "1228480"
  },
  {
    "text": "gcp and gcp triggers so google solution and we were able to configure it",
    "start": "1228480",
    "end": "1237080"
  },
  {
    "text": "uh here you have a link to the test container documentation where they",
    "start": "1237080",
    "end": "1242640"
  },
  {
    "text": "provide some solutions for popular ci tools like gitlab ci bit pipelines and",
    "start": "1242640",
    "end": "1249720"
  },
  {
    "text": "others few others so it's possible to run your test containers tests within",
    "start": "1249720",
    "end": "1257440"
  },
  {
    "text": "the ci/cd pipeline there's no pro no big problem with that it will for sure",
    "start": "1257440",
    "end": "1262799"
  },
  {
    "text": "require some uh some configuration additional",
    "start": "1262799",
    "end": "1268280"
  },
  {
    "text": "configuration uh but yeah in general it's possible and and it's very uh very very good yeah",
    "start": "1268280",
    "end": "1277120"
  },
  {
    "text": "because we always want to include every every step in our ci/cd pipelines",
    "start": "1277120",
    "end": "1283280"
  },
  {
    "text": "especially something like testing so yeah",
    "start": "1283280",
    "end": "1288470"
  },
  {
    "text": "[Music] and to be honest recently i",
    "start": "1288470",
    "end": "1294840"
  },
  {
    "text": "discovered the test containers desktop app and i want to tell something more",
    "start": "1294840",
    "end": "1301280"
  },
  {
    "text": "about it so it's like a it's like a small",
    "start": "1301280",
    "end": "1306440"
  },
  {
    "text": "application running in our background which allows us to do some cool stuff uh",
    "start": "1306440",
    "end": "1312960"
  },
  {
    "text": "something like freezing containers shutdown so if we want to debug some uh",
    "start": "1312960",
    "end": "1318799"
  },
  {
    "text": "containers we can freeze their shutdown and we will have them running after our",
    "start": "1318799",
    "end": "1325440"
  },
  {
    "text": "tests to be honest i've never i've never uh know about this application until now",
    "start": "1325440",
    "end": "1333679"
  },
  {
    "text": "so i've never used it but it will be very useful because i i remember that",
    "start": "1333679",
    "end": "1340880"
  },
  {
    "text": "i had to reconnect to some containers and if if the container is fresh every",
    "start": "1340880",
    "end": "1346720"
  },
  {
    "text": "time and and the default behavior is that you have a random",
    "start": "1346720",
    "end": "1352919"
  },
  {
    "text": "port so yeah it was a little bit painful to check the port and you know connect",
    "start": "1352919",
    "end": "1361200"
  },
  {
    "text": "to a specific co host and port all the time so it may help out h they also",
    "start": "1361200",
    "end": "1371039"
  },
  {
    "text": "created something like test containers cloud which is really awesome feature",
    "start": "1371039",
    "end": "1376159"
  },
  {
    "text": "but unfortunately i guess it's only free for solo developers so it's like they",
    "start": "1376159",
    "end": "1383280"
  },
  {
    "text": "give us a little bit of playground uh where we have uh 300 minutes per",
    "start": "1383280",
    "end": "1390400"
  },
  {
    "text": "month for free and thanks to that you don't need actually anything you don't",
    "start": "1390400",
    "end": "1397679"
  },
  {
    "text": "need docker environment on your local machine everything is delegated to the cloud you just need a free account there",
    "start": "1397679",
    "end": "1405600"
  },
  {
    "text": "so i highly recommend you to play with it a little bit i will for",
    "start": "1405600",
    "end": "1411840"
  },
  {
    "text": "and the next one is the experimental feature which will be a nice tool i",
    "start": "1411840",
    "end": "1417520"
  },
  {
    "text": "guess it's reusable containers so the default behavior is",
    "start": "1417520",
    "end": "1424039"
  },
  {
    "text": "that when we when the tests complete h test containers or we",
    "start": "1424039",
    "end": "1431520"
  },
  {
    "text": "depending on the on on our solution we should close the containers yeah we we",
    "start": "1431520",
    "end": "1438080"
  },
  {
    "text": "should shut them down so with reusable containers it it will be possible to keep those containers",
    "start": "1438080",
    "end": "1445280"
  },
  {
    "text": "alive and reuse them uh in future tests yeah so the most costful process in",
    "start": "1445280",
    "end": "1454159"
  },
  {
    "text": "integration testing using this containers library is definitely setting up the",
    "start": "1454159",
    "end": "1460679"
  },
  {
    "text": "containers so it it takes like a few or more seconds uh depending on how much of",
    "start": "1460679",
    "end": "1469240"
  },
  {
    "text": "the of the containers you use and on your configuration because you can also",
    "start": "1469240",
    "end": "1474960"
  },
  {
    "text": "run them in parallel uh but anyway it cost you a few",
    "start": "1474960",
    "end": "1480080"
  },
  {
    "text": "seconds so when you're developing it would be nice to have something like reusable containers just to avoid those",
    "start": "1480080",
    "end": "1489760"
  },
  {
    "text": "uh those just to avoid losing this few seconds every single time we running a",
    "start": "1489760",
    "end": "1498679"
  },
  {
    "text": "test okay so as i'm java developer i will try to present you some examples",
    "start": "1498679",
    "end": "1506159"
  },
  {
    "text": "using java and spring boot application so let me",
    "start": "1506159",
    "end": "1512760"
  },
  {
    "text": "just share my screen again but different",
    "start": "1512760",
    "end": "1518240"
  },
  {
    "text": "tab i guess i have everything configured here tell me if you see my screen",
    "start": "1520840",
    "end": "1526960"
  },
  {
    "text": "because i know that it can be a little yes we can see it we can see it okay",
    "start": "1526960",
    "end": "1532159"
  },
  {
    "text": "nice thank you uh so yeah i i've prepared for the purpose of this presentation very very",
    "start": "1532159",
    "end": "1539200"
  },
  {
    "text": "simple mitro service which has some api so you can uh you can play with it i",
    "start": "1539200",
    "end": "1547360"
  },
  {
    "text": "will also include the postman collection for it so you don't have to create from scratch so basically we just have a",
    "start": "1547360",
    "end": "1555120"
  },
  {
    "text": "controller which accepts some some data if we perform post or retrieve some data",
    "start": "1555120",
    "end": "1562559"
  },
  {
    "text": "if we want to get something and the heart of that is that domain with the",
    "start": "1562559",
    "end": "1568640"
  },
  {
    "text": "service so we will add something more here later",
    "start": "1568640",
    "end": "1575679"
  },
  {
    "text": "in this method one of these methods but for now the application is",
    "start": "1575679",
    "end": "1581679"
  },
  {
    "text": "really simple and it just connects to a database",
    "start": "1581679",
    "end": "1587080"
  },
  {
    "text": "uh so in this service we just have uh",
    "start": "1587080",
    "end": "1592400"
  },
  {
    "text": "the references to repositories which will be injected here by spring and basically running this",
    "start": "1592400",
    "end": "1600320"
  },
  {
    "text": "method for example get all should list all of our articles within the database so",
    "start": "1600320",
    "end": "1607919"
  },
  {
    "text": "nothing fancy just to start uh playing with something",
    "start": "1607919",
    "end": "1614760"
  },
  {
    "text": "uh [Music] okay in the application yaml which is",
    "start": "1614760",
    "end": "1622000"
  },
  {
    "text": "the source of configuration properties in spring boot uh i have included the",
    "start": "1622000",
    "end": "1630080"
  },
  {
    "text": "uh the url to my database source so if you want to play it without test",
    "start": "1630080",
    "end": "1636559"
  },
  {
    "text": "containers you have also docker compose here so it should work out of the box",
    "start": "1636559",
    "end": "1642640"
  },
  {
    "text": "if we run it and we can try this one out i will just make sure that",
    "start": "1642640",
    "end": "1652279"
  },
  {
    "text": "my my windows uh my linux is",
    "start": "1652279",
    "end": "1658760"
  },
  {
    "text": "running so give me a second nothing is here okay so we'll",
    "start": "1658760",
    "end": "1666480"
  },
  {
    "text": "just see if the application is working so right now i will set up all the",
    "start": "1666480",
    "end": "1672559"
  },
  {
    "text": "required dependencies as usually so with docker compose we will run the",
    "start": "1672559",
    "end": "1679159"
  },
  {
    "text": "application and we'll see if something will be retrieved just to make sure that",
    "start": "1679159",
    "end": "1686159"
  },
  {
    "text": "we have everything connected okay so i have predefined set of data with the articles which have",
    "start": "1686159",
    "end": "1693200"
  },
  {
    "text": "only the id offer and some content so as i said to keep things simple yeah",
    "start": "1693200",
    "end": "1700640"
  },
  {
    "text": "uh i will include this uh this collection in my materials so we will be",
    "start": "1700640",
    "end": "1705919"
  },
  {
    "text": "able to start without writing everything from scratch so for example if we want",
    "start": "1705919",
    "end": "1711840"
  },
  {
    "text": "to create the article we'll get id we can retrieve it by id we can update we",
    "start": "1711840",
    "end": "1719600"
  },
  {
    "text": "can also delete it so we can delete it if we want to",
    "start": "1719600",
    "end": "1724640"
  },
  {
    "text": "check if it works and it should work okay however",
    "start": "1724640",
    "end": "1731559"
  },
  {
    "text": "i imagine that you can imagine uh this",
    "start": "1731559",
    "end": "1736880"
  },
  {
    "text": "type of testing is not necessarily the most uh enjoyable if we you have to run",
    "start": "1736880",
    "end": "1744520"
  },
  {
    "text": "everything and switch the apps and so on so for that purpose we have test",
    "start": "1744520",
    "end": "1752080"
  },
  {
    "text": "containers here so to add them you just need a few dependencies so because we're playing",
    "start": "1752080",
    "end": "1759039"
  },
  {
    "text": "with spring boot uh and we have pretty good integration they pro provide i",
    "start": "1759039",
    "end": "1765440"
  },
  {
    "text": "included it also in maven we have some posgress test containers so it will give",
    "start": "1765440",
    "end": "1772640"
  },
  {
    "text": "us possibility to uh to look for the specific container yes so to postgress",
    "start": "1772640",
    "end": "1779640"
  },
  {
    "text": "container and we also have test containers junit jup dependency which",
    "start": "1779640",
    "end": "1786240"
  },
  {
    "text": "will allow us to use some cool annotations uh which will uh help us with life cycle",
    "start": "1786240",
    "end": "1796520"
  },
  {
    "text": "management okay so i will close everything and we'll start from this",
    "start": "1796520",
    "end": "1804120"
  },
  {
    "text": "example um so yeah what happens here we have a spring boot test so it's spring",
    "start": "1804120",
    "end": "1810799"
  },
  {
    "text": "related but almost everything else is just uh similar in concepts i think in",
    "start": "1810799",
    "end": "1817600"
  },
  {
    "text": "every programming language so here we have two annotations",
    "start": "1817600",
    "end": "1822640"
  },
  {
    "text": "for in java in test containers for java world uh very important so it's test",
    "start": "1822640",
    "end": "1829200"
  },
  {
    "text": "containers and containers annotations so those two guys",
    "start": "1829200",
    "end": "1835880"
  },
  {
    "text": "will allow us to skip the life cycle manage management completely so test",
    "start": "1836679",
    "end": "1843679"
  },
  {
    "text": "containers will take care of setting up the container and shutting it down",
    "start": "1843679",
    "end": "1851399"
  },
  {
    "text": "and as you see here we have this postgress uh",
    "start": "1851399",
    "end": "1857080"
  },
  {
    "text": "container which allow us to specify a initialization script uh via its api yes",
    "start": "1857080",
    "end": "1865799"
  },
  {
    "text": "so we're specifying docker image here uh initialization script here which i",
    "start": "1865799",
    "end": "1873200"
  },
  {
    "text": "will show you in a second so we're just creating a table and inserting some data",
    "start": "1873200",
    "end": "1879919"
  },
  {
    "text": "just to make sure that we have something to start yeah so it's nothing uh",
    "start": "1879919",
    "end": "1887600"
  },
  {
    "text": "complex and in spring boot until version three we had to do something like that",
    "start": "1887960",
    "end": "1894559"
  },
  {
    "text": "so uh use annotation dynamic property source and put some things in the",
    "start": "1894559",
    "end": "1903440"
  },
  {
    "text": "registry so our application must know where is the postgress yes so we need to",
    "start": "1903440",
    "end": "1910399"
  },
  {
    "text": "specify url i guess it will be really similar in other languages and",
    "start": "1910399",
    "end": "1915640"
  },
  {
    "text": "frameworks we have to specify username and password to connect to it and thanks",
    "start": "1915640",
    "end": "1922480"
  },
  {
    "text": "to the fact that we have postgress container we can use predefined method for that so for example we have get jdbc",
    "start": "1922480",
    "end": "1930880"
  },
  {
    "text": "url here which will return us the",
    "start": "1930880",
    "end": "1936240"
  },
  {
    "text": "uh the jdbc url we need to to specify",
    "start": "1936240",
    "end": "1941840"
  },
  {
    "text": "uh [Music] to connect spring context with this",
    "start": "1941840",
    "end": "1947760"
  },
  {
    "text": "specific postgress uh database yeah we can also get the",
    "start": "1947760",
    "end": "1954320"
  },
  {
    "text": "username and get password so we don't have to hardcode anything everything uh can be",
    "start": "1954320",
    "end": "1962559"
  },
  {
    "text": "dynamically taken from this container uh it's worth mentioning that",
    "start": "1962559",
    "end": "1969120"
  },
  {
    "text": "specific containers have generally h some default behavior so for example",
    "start": "1969120",
    "end": "1976960"
  },
  {
    "text": "we don't specify here the test database name uh the username and the password so",
    "start": "1976960",
    "end": "1983360"
  },
  {
    "text": "everything is set to test and those uh values will be injected",
    "start": "1983360",
    "end": "1990559"
  },
  {
    "text": "here yeah uh so yeah uh maybe let's let's run it and we'll",
    "start": "1990559",
    "end": "1997840"
  },
  {
    "text": "see what will happen in the",
    "start": "1997840",
    "end": "2001200"
  },
  {
    "text": "console our test should be green okay",
    "start": "2003399",
    "end": "2010320"
  },
  {
    "text": "uh so first yeah if we have our environment uh well connected",
    "start": "2010320",
    "end": "2017679"
  },
  {
    "text": "uh what i mean by that is if you're using uh windows subsystem for linux i i",
    "start": "2017679",
    "end": "2024000"
  },
  {
    "text": "had little bit troubles uh configuring that but it's possible to configure uh",
    "start": "2024000",
    "end": "2029720"
  },
  {
    "text": "docker in such a way that test containers can see it",
    "start": "2029720",
    "end": "2034919"
  },
  {
    "text": "so we can see from the logs here that the server is version is 23rd version",
    "start": "2034919",
    "end": "2044480"
  },
  {
    "text": "api version and operating system is my ubuntu system uh and the total memory so if you",
    "start": "2044480",
    "end": "2053599"
  },
  {
    "text": "remember that i will go back to that later when we switch to the cloud version uh yeah so basically at the very",
    "start": "2053599",
    "end": "2062480"
  },
  {
    "text": "beginning test containers set up their test containers uh i would say main",
    "start": "2062480",
    "end": "2069599"
  },
  {
    "text": "container uh named like that and then they are trying to start",
    "start": "2069599",
    "end": "2075760"
  },
  {
    "text": "the postgress container yeah so here we see in this particular lock that the",
    "start": "2075760",
    "end": "2082638"
  },
  {
    "text": "container with posgress is started and the jdbc we can use to connect to this",
    "start": "2082639",
    "end": "2089760"
  },
  {
    "text": "container is like this one so this is the jdbc url we're specifying here we're",
    "start": "2089760",
    "end": "2096320"
  },
  {
    "text": "we're uh we're taking from the container and we're letting spring know where the",
    "start": "2096320",
    "end": "2103200"
  },
  {
    "text": "uh where it should trigger all the calls to a database yeah and we can see here that",
    "start": "2103200",
    "end": "2111359"
  },
  {
    "text": "we have some database scripts found so",
    "start": "2111359",
    "end": "2116560"
  },
  {
    "text": "uh so yeah uh everything worked as expected if we want some more locks we",
    "start": "2116560",
    "end": "2122240"
  },
  {
    "text": "can always specify the lock consumer uh this is another method",
    "start": "2122240",
    "end": "2130880"
  },
  {
    "text": "uh available via the api so we'll see what's different here it will be bunch",
    "start": "2130880",
    "end": "2137040"
  },
  {
    "text": "of new logs but we will see something more yes so we'll see",
    "start": "2137040",
    "end": "2143839"
  },
  {
    "text": "that it has the information it had previously but here we we have standard",
    "start": "2144599",
    "end": "2150240"
  },
  {
    "text": "output from the container itself and we can see here that the create",
    "start": "2150240",
    "end": "2157720"
  },
  {
    "text": "database and somewhere here we should have some information about the creation",
    "start": "2157720",
    "end": "2165599"
  },
  {
    "text": "from the script or maybe",
    "start": "2165599",
    "end": "2172119"
  },
  {
    "text": "not yeah but we still see those logs so we're pretty sure that our database",
    "start": "2172119",
    "end": "2178720"
  },
  {
    "text": "contains some predefined data yeah so this is like the very basic uh example",
    "start": "2178720",
    "end": "2185839"
  },
  {
    "text": "where we have our application and and just the database so as java",
    "start": "2185839",
    "end": "2194640"
  },
  {
    "text": "developers we generally don't like this part and spring from version three uh",
    "start": "2194640",
    "end": "2201520"
  },
  {
    "text": "made it easier than that so we don't have to rely on our h strings we we",
    "start": "2201520",
    "end": "2209520"
  },
  {
    "text": "place here so i can't count uh how many times i made a",
    "start": "2209520",
    "end": "2216240"
  },
  {
    "text": "typo and i didn't know what's wrong and what spring boot provided is",
    "start": "2216240",
    "end": "2221359"
  },
  {
    "text": "the service connection interface so it's really nice tool if you're java developer switch to spring boot 3 or or",
    "start": "2221359",
    "end": "2229079"
  },
  {
    "text": "newer uh what it does it basically does this thing for us uh for some containers",
    "start": "2229079",
    "end": "2238960"
  },
  {
    "text": "so from what i know it's not ready for every type of container but for most uh",
    "start": "2238960",
    "end": "2245920"
  },
  {
    "text": "common ones like postgress it's ready so if we run the test we should still",
    "start": "2245920",
    "end": "2253520"
  },
  {
    "text": "see the following",
    "start": "2253520",
    "end": "2257119"
  },
  {
    "text": "result so i mean all our tests should be green and",
    "start": "2259320",
    "end": "2264480"
  },
  {
    "text": "if we comment that out and we don't specify any information the test should",
    "start": "2264480",
    "end": "2271760"
  },
  {
    "text": "fail i heard last lately that you shouldn't uh oh no you shouldn't trust",
    "start": "2272680",
    "end": "2280960"
  },
  {
    "text": "the test which is always green so yeah i have some configuration",
    "start": "2280960",
    "end": "2287200"
  },
  {
    "text": "maybe it's this one but i'm not pretty sure what happened let me check",
    "start": "2287200",
    "end": "2294880"
  },
  {
    "text": "the let me remove the containers and see now",
    "start": "2295960",
    "end": "2304160"
  },
  {
    "text": "okay i will be surprised if it works oh yeah so our old",
    "start": "2306680",
    "end": "2314440"
  },
  {
    "text": "containers i mean which we set up manually came into play yes so we have",
    "start": "2314440",
    "end": "2323760"
  },
  {
    "text": "we don't have so much time so i will speed up a little bit so basically you",
    "start": "2323760",
    "end": "2329040"
  },
  {
    "text": "have to remember that you need to create the container and you need to somehow",
    "start": "2329040",
    "end": "2334560"
  },
  {
    "text": "put the information you need in your application to your application so in spring we do it like this or with this",
    "start": "2334560",
    "end": "2341599"
  },
  {
    "text": "new annotation okay it's also a java trick",
    "start": "2341599",
    "end": "2348240"
  },
  {
    "text": "uh i'm not sure if it's in other languages but here i don't have any",
    "start": "2348240",
    "end": "2353920"
  },
  {
    "text": "container uh defined we will check if i have something here i don't so this test",
    "start": "2353920",
    "end": "2361680"
  },
  {
    "text": "should fail yeah but what will actually happen",
    "start": "2361680",
    "end": "2367839"
  },
  {
    "text": "is we set up container uh in very convenient way so in application",
    "start": "2368440",
    "end": "2377599"
  },
  {
    "text": "properties for tests i specified such string so if you're java developer it may be useful so it it's contains every",
    "start": "2377599",
    "end": "2386520"
  },
  {
    "text": "information spring needs uh to connect to a test container so like the",
    "start": "2386520",
    "end": "2393560"
  },
  {
    "text": "dialect version of docker image uh name of the database initialization script",
    "start": "2393560",
    "end": "2400960"
  },
  {
    "text": "and so on so it's really cool that they have such feature but let's move forward",
    "start": "2400960",
    "end": "2408000"
  },
  {
    "text": "it was just a nice trick",
    "start": "2408000",
    "end": "2412640"
  },
  {
    "text": "uh we can also in java and in spring boot specify uh in uh specify containers",
    "start": "2413079",
    "end": "2420400"
  },
  {
    "text": "in different places so if we want to have some configuration plus for that we",
    "start": "2420400",
    "end": "2426320"
  },
  {
    "text": "can also uh create a bin from this configuration",
    "start": "2426320",
    "end": "2431760"
  },
  {
    "text": "we can specify specify everything here we need and if we include this class so we",
    "start": "2431760",
    "end": "2439680"
  },
  {
    "text": "import it it should also work out of the box we don't have to do anything uh i",
    "start": "2439680",
    "end": "2447760"
  },
  {
    "text": "also used service connection here so spring automatically knows uh where to",
    "start": "2447760",
    "end": "2452960"
  },
  {
    "text": "find posgress so it's really cool that they uh added this feature and now we'll try",
    "start": "2452960",
    "end": "2462400"
  },
  {
    "text": "uh to see if the reusable containers work so you have you need to have your",
    "start": "2462400",
    "end": "2469839"
  },
  {
    "text": "uh test containers uh desktop app and i cannot show you that right now but",
    "start": "2469839",
    "end": "2476319"
  },
  {
    "text": "there's a boolean flag enable reusable containers set to",
    "start": "2476319",
    "end": "2482200"
  },
  {
    "text": "true and yeah here uh there's some small change we need to manually take control",
    "start": "2482200",
    "end": "2489119"
  },
  {
    "text": "over the life cycle of the container but it's fairly simple every container has",
    "start": "2489119",
    "end": "2495520"
  },
  {
    "text": "its start method which will set up this container and because we want to reuse",
    "start": "2495520",
    "end": "2502800"
  },
  {
    "text": "the container we set additional flag here with this uh method uh exposed by",
    "start": "2502800",
    "end": "2509680"
  },
  {
    "text": "the posgress container api and we don't close uh we don't close",
    "start": "2509680",
    "end": "2517599"
  },
  {
    "text": "the container anywhere so if we run it we'll see what will happen",
    "start": "2517599",
    "end": "2524800"
  },
  {
    "text": "in in my docker environment okay so all the test passed",
    "start": "2525000",
    "end": "2530960"
  },
  {
    "text": "and let's see you see that this container is still here so we won't find",
    "start": "2530960",
    "end": "2537119"
  },
  {
    "text": "any shutdown uh related to the container in the locks",
    "start": "2537119",
    "end": "2543040"
  },
  {
    "text": "uh just the spring uh just the spring context is closing here so yeah if we",
    "start": "2543040",
    "end": "2549839"
  },
  {
    "text": "run the same test again we shouldn't see more",
    "start": "2549839",
    "end": "2557460"
  },
  {
    "text": "[Music] uh postgress images here postgress dockers",
    "start": "2557460",
    "end": "2563000"
  },
  {
    "text": "here yes so it seems that it's still using the same let's run it one more",
    "start": "2563000",
    "end": "2569560"
  },
  {
    "text": "time we'll see the test seems a little bit faster right now",
    "start": "2569560",
    "end": "2576000"
  },
  {
    "text": "and yeah this container is still being reused so the experimental feature they",
    "start": "2576000",
    "end": "2582800"
  },
  {
    "text": "provided also works [Music]",
    "start": "2582800",
    "end": "2589160"
  },
  {
    "text": "uh okay so that's the that's the end of",
    "start": "2589160",
    "end": "2594599"
  },
  {
    "text": "the of the first part i want to show you something more",
    "start": "2594599",
    "end": "2600760"
  },
  {
    "text": "uh i included the link to these examples in my presentation but i will also send",
    "start": "2600760",
    "end": "2607839"
  },
  {
    "text": "you in the chat so these examples are available in our ier on gitlab so you",
    "start": "2607839",
    "end": "2615119"
  },
  {
    "text": "will i hope you have access to that if not please write me later i will send",
    "start": "2615119",
    "end": "2620160"
  },
  {
    "text": "you a zip or something we'll figure that out uh and you will see a a few",
    "start": "2620160",
    "end": "2627440"
  },
  {
    "text": "uh few branches here so this was the typical example because i feel that",
    "start": "2627440",
    "end": "2632880"
  },
  {
    "text": "database is the most common thing we want to test and i want to add something",
    "start": "2632880",
    "end": "2638800"
  },
  {
    "text": "more so we'll check out to the other",
    "start": "2638800",
    "end": "2645280"
  },
  {
    "text": "branch so what i've added here is i added a",
    "start": "2645640",
    "end": "2652319"
  },
  {
    "text": "simple simple publisher so i use pops up",
    "start": "2653880",
    "end": "2659079"
  },
  {
    "text": "here just to show you how it works uh so yeah in this point when we're trying to",
    "start": "2659079",
    "end": "2666000"
  },
  {
    "text": "create the article and after we save it we should publish a new message with the",
    "start": "2666000",
    "end": "2671359"
  },
  {
    "text": "saved id and alpha so we'll see how to handle it in our",
    "start": "2671359",
    "end": "2676920"
  },
  {
    "text": "test so i have a simple test case here again and again we have spring boot test",
    "start": "2676920",
    "end": "2683200"
  },
  {
    "text": "since we're in spring boot java uh we have again test containers annotations",
    "start": "2683200",
    "end": "2688800"
  },
  {
    "text": "one of them is posgress with service annotations so we know that spring will find our posgress and we have popsup",
    "start": "2688800",
    "end": "2696359"
  },
  {
    "text": "emulator and here i'm not using the official the official docker",
    "start": "2696359",
    "end": "2703079"
  },
  {
    "text": "image because we we found another one which is more convenient to use mainly",
    "start": "2703079",
    "end": "2708319"
  },
  {
    "text": "because you can specify the environment variables and uh it will create topics and",
    "start": "2708319",
    "end": "2716160"
  },
  {
    "text": "subscriptions for you for particular project id so it's very convenient and",
    "start": "2716160",
    "end": "2721839"
  },
  {
    "text": "we can see that here we have another uh exposed method from from generic",
    "start": "2721839",
    "end": "2728240"
  },
  {
    "text": "container api so it's called with enth and we can specify the environment",
    "start": "2728240",
    "end": "2733920"
  },
  {
    "text": "variable here uh just to show you the similarity if we have",
    "start": "2733920",
    "end": "2741599"
  },
  {
    "text": "uh docker compose we can do it like that yeah so we can do pretty much everything",
    "start": "2741599",
    "end": "2747599"
  },
  {
    "text": "we do in docker compose using test containers uh we're exposing this port",
    "start": "2747599",
    "end": "2753319"
  },
  {
    "text": "here and injecting some popsup template just to fetch the data uh fetch the",
    "start": "2753319",
    "end": "2759520"
  },
  {
    "text": "message so we'll see uh we'll see if it works uh here is small uh advice for",
    "start": "2759520",
    "end": "2767920"
  },
  {
    "text": "java developers uh it's probably included in test containers uh",
    "start": "2767920",
    "end": "2774319"
  },
  {
    "text": "dependency the autility method so anytime you have some asynchronous tasks",
    "start": "2774319",
    "end": "2781040"
  },
  {
    "text": "you can use this library and it provides convenient api to use uh when you're",
    "start": "2781040",
    "end": "2787200"
  },
  {
    "text": "when you're waiting for something yes so we will wait here for for the popsup",
    "start": "2787200",
    "end": "2792599"
  },
  {
    "text": "message and if we start this test it will take a",
    "start": "2792599",
    "end": "2797920"
  },
  {
    "text": "few seconds so we have just posgress and popsup emulator and it will take like 10",
    "start": "2797920",
    "end": "2803680"
  },
  {
    "text": "seconds i guess we can check it after the tests are completed and the containers shut it",
    "start": "2803680",
    "end": "2812040"
  },
  {
    "text": "down okay so the test itself uh lasts 1 second almost but the whole process",
    "start": "2812040",
    "end": "2819359"
  },
  {
    "text": "started uh 5230 and finished 5241 so it's 10 seconds for",
    "start": "2819359",
    "end": "2827760"
  },
  {
    "text": "just one simple test case so you need to be careful here uh not to overuse new",
    "start": "2827760",
    "end": "2835200"
  },
  {
    "text": "containers yeah and to uh to always take care of the of the configuration of your",
    "start": "2835200",
    "end": "2841920"
  },
  {
    "text": "containers because it may grow to minutes and i know it from experience",
    "start": "2841920",
    "end": "2848640"
  },
  {
    "text": "uh some of our microservices in my previous projects were uh were building",
    "start": "2848640",
    "end": "2855680"
  },
  {
    "text": "for like 10 minutes or so so it was too much simply",
    "start": "2855680",
    "end": "2862839"
  },
  {
    "text": "uh yeah because we have generic container here we need to specify and we",
    "start": "2863240",
    "end": "2869359"
  },
  {
    "text": "specify the emulator host for uh google cloud popsup and i hope it will be visible",
    "start": "2869359",
    "end": "2877119"
  },
  {
    "text": "here so i printed the message we received so it looks like this it's not",
    "start": "2877119",
    "end": "2883680"
  },
  {
    "text": "perfect it's ugly to be honest but it's just for the purpose of this",
    "start": "2883680",
    "end": "2890040"
  },
  {
    "text": "presentation uh so yeah everything works fine and what in case if we have like",
    "start": "2890040",
    "end": "2896400"
  },
  {
    "text": "bunch of such tests do we have to spin up all the containers again and again so",
    "start": "2896400",
    "end": "2903920"
  },
  {
    "text": "there's something called uh singleton pattern in test containers world",
    "start": "2903920",
    "end": "2910558"
  },
  {
    "text": "and we can uh achieve it by creating abstract abstract class which will uh",
    "start": "2910680",
    "end": "2918880"
  },
  {
    "text": "have some containers defined inside and we manually have to start them there's",
    "start": "2918880",
    "end": "2925359"
  },
  {
    "text": "no way to delegate this task or test containers but",
    "start": "2925359",
    "end": "2931079"
  },
  {
    "text": "um when you see the result it's pretty much uh great because uh we reduce the",
    "start": "2931079",
    "end": "2938559"
  },
  {
    "text": "time to spin up the test so if we run this folder so all of the test all of those",
    "start": "2938559",
    "end": "2944960"
  },
  {
    "text": "tests we will see that containers are started just once and they are reused",
    "start": "2944960",
    "end": "2951559"
  },
  {
    "text": "uh three times yeah so you see that the tests are much faster without that if we",
    "start": "2951559",
    "end": "2958480"
  },
  {
    "text": "had 10 like 10 seconds here we wouldn't be able to get the result in i guess 10",
    "start": "2958480",
    "end": "2965200"
  },
  {
    "text": "seconds we can check it so 54 52 and the end",
    "start": "2965200",
    "end": "2971440"
  },
  {
    "text": "was 552 54 52 yeah so like in 10 seconds",
    "start": "2971720",
    "end": "2978960"
  },
  {
    "text": "yeah again uh yes so we reused those",
    "start": "2978960",
    "end": "2984800"
  },
  {
    "text": "predefined containers here in our test classes unfortunately they they have to",
    "start": "2984800",
    "end": "2991200"
  },
  {
    "text": "extend it as we know in java we don't like uh we don't like inheritance too",
    "start": "2991200",
    "end": "2997440"
  },
  {
    "text": "much but it's necessary here however there there are some uh there are some",
    "start": "2997440",
    "end": "3003839"
  },
  {
    "text": "solutions to that but i haven't uh i've never had time to uh to dive deeper but",
    "start": "3003839",
    "end": "3013119"
  },
  {
    "text": "i've seen that they are doing everything on annotations so it's possible to avoid inheritance even",
    "start": "3013119",
    "end": "3019760"
  },
  {
    "text": "uh okay last thing i want to show you because we're running out of time and i i don't want you to",
    "start": "3019760",
    "end": "3027640"
  },
  {
    "text": "erh i don't want you to be too too bored and we still hope i i still hope that",
    "start": "3027640",
    "end": "3034960"
  },
  {
    "text": "you will have some questions uh so yeah uh basically we we had a problem",
    "start": "3034960",
    "end": "3043680"
  },
  {
    "text": "uh with google cloud storage test container and it was mainly related to",
    "start": "3043680",
    "end": "3050559"
  },
  {
    "text": "uh to the image because the image there is no actual google cloud provided docker",
    "start": "3050559",
    "end": "3058800"
  },
  {
    "text": "image yes so we we found something like fake gcs server uh provided by fsoa so",
    "start": "3058800",
    "end": "3067359"
  },
  {
    "text": "whoever this is he's a lifesaver it's really awesome but it had it has one one",
    "start": "3067359",
    "end": "3074960"
  },
  {
    "text": "issue so uh when you're reaching the fake gcs",
    "start": "3074960",
    "end": "3081839"
  },
  {
    "text": "server it returns you a response and within this http response you have a",
    "start": "3081839",
    "end": "3087599"
  },
  {
    "text": "particular header which is used further in the google cloud libraries and it was",
    "start": "3087599",
    "end": "3095240"
  },
  {
    "text": "uh this part so the http local host and port were missing and i was debugging it",
    "start": "3095240",
    "end": "3103200"
  },
  {
    "text": "like a few hours i i think together uh to handle it fortunately it's",
    "start": "3103200",
    "end": "3110960"
  },
  {
    "text": "possible to create a container and set up everything uh this image just",
    "start": "3110960",
    "end": "3117920"
  },
  {
    "text": "provides you the possibility to specify some uh some",
    "start": "3117920",
    "end": "3124040"
  },
  {
    "text": "additional you know flags like in in typical docker images you can specify uh",
    "start": "3124040",
    "end": "3130000"
  },
  {
    "text": "some additional stuff and the external url is a lifesaver here so the only",
    "start": "3130000",
    "end": "3136720"
  },
  {
    "text": "pitfall is that we need to know external port before test containers spin up because",
    "start": "3136720",
    "end": "3143599"
  },
  {
    "text": "the default behavior is that test containers are always run on random port yes so there's also possibility to uh",
    "start": "3143599",
    "end": "3153359"
  },
  {
    "text": "have the external port configur configured earlier and that's why you're",
    "start": "3153359",
    "end": "3158400"
  },
  {
    "text": "able to uh to reach the container and we are able to set this uh this message uh",
    "start": "3158400",
    "end": "3167760"
  },
  {
    "text": "uh set this header with this predefined uh http",
    "start": "3167760",
    "end": "3173680"
  },
  {
    "text": "localhost plus port thing so it works fine if you're looking for something to",
    "start": "3173680",
    "end": "3180000"
  },
  {
    "text": "test gcs contain the gcs uh google cloud storage it's a way to go and it's also",
    "start": "3180000",
    "end": "3187119"
  },
  {
    "text": "included in in the whole project so you won't have problems uh finding",
    "start": "3187119",
    "end": "3193880"
  },
  {
    "text": "it okay so from the basic stuff it's pretty much much it i really encourage",
    "start": "3193880",
    "end": "3199920"
  },
  {
    "text": "you to explore the containers since you're uh most of you i guess are from",
    "start": "3199920",
    "end": "3205920"
  },
  {
    "text": "devops part of our uh company so you know probably a lot more about docker",
    "start": "3205920",
    "end": "3212400"
  },
  {
    "text": "and the stuff you can do with it uh than i do so i really encourage you to going",
    "start": "3212400",
    "end": "3221359"
  },
  {
    "text": "deeper into test containers especially that we have a bunch of languages",
    "start": "3221359",
    "end": "3226400"
  },
  {
    "text": "supported and yeah thank you for your attention uh",
    "start": "3226400",
    "end": "3231680"
  },
  {
    "text": "i hope you enjoyed the presentation",
    "start": "3231680",
    "end": "3236040"
  }
]