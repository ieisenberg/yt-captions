[
  {
    "text": "all right we're going to get started Uh this is tests are what you want what you really really want We want to uh engage",
    "start": "0",
    "end": "7440"
  },
  {
    "text": "with the community about tests and the goal of uh our session is to uh share",
    "start": "7440",
    "end": "15200"
  },
  {
    "text": "ideas talk with you guys about tests different way of tests Um kind of have",
    "start": "15200",
    "end": "20400"
  },
  {
    "text": "it in a lively discussion about different topics We don't have a ton of slides The whole idea here is for is for",
    "start": "20400",
    "end": "26400"
  },
  {
    "text": "people in the room to help bring topics and you know talk about different things that you know they care about with tests",
    "start": "26400",
    "end": "32078"
  },
  {
    "text": "share their opinions and um have you know different discussions about various things So um I'll go through Daniel and",
    "start": "32079",
    "end": "39440"
  },
  {
    "text": "I will go through um a few of these topics to kind of get the discussion going Um but uh you know the whole idea",
    "start": "39440",
    "end": "47760"
  },
  {
    "text": "is to get everyone involved So uh intro to this um tests like what's what's it",
    "start": "47760",
    "end": "54160"
  },
  {
    "text": "what's the goal here um with a test Um I mean we've put a few simple ones that",
    "start": "54160",
    "end": "59520"
  },
  {
    "text": "hopefully everyone would agree with Uh and if you're going to write a test it has to test something Uh that seems",
    "start": "59520",
    "end": "66159"
  },
  {
    "text": "pretty useful Um has a finite runtime right We don't want our tests running",
    "start": "66159",
    "end": "71200"
  },
  {
    "text": "forever Uh they're costefficient right We're not going to run up the bill uh just over a a test Um they're developer",
    "start": "71200",
    "end": "78799"
  },
  {
    "text": "friendly right We can understand them We can engage and talk about them We know what they mean you know when they when after they run successfully or",
    "start": "78799",
    "end": "85640"
  },
  {
    "text": "unsuccessfully Um they're developer friendly You know it's easy to write easy to read easy to communicate about",
    "start": "85640",
    "end": "92079"
  },
  {
    "text": "Um and have a deterministic outcome You know we know that this thing is going to run to completion and that it will have",
    "start": "92079",
    "end": "98400"
  },
  {
    "text": "um you know some outcome whatever it is And that's something that you know we can understand Um okay So that's that's",
    "start": "98400",
    "end": "106240"
  },
  {
    "text": "high level what we think you know we should care about with tests Um okay So",
    "start": "106240",
    "end": "111280"
  },
  {
    "text": "we're from the Cubert community So one of the things we wanted to talk about kind of um like what are the pain points",
    "start": "111280",
    "end": "118000"
  },
  {
    "text": "we experience you know like what what's what some of the things that we come across and in Cubver um when when when",
    "start": "118000",
    "end": "125360"
  },
  {
    "text": "we're thinking of tests and how different ways that we could uh improve on tests Um one of the things we see a",
    "start": "125360",
    "end": "131360"
  },
  {
    "text": "lot of um is pictured here like we run tests and and maybe they don't work",
    "start": "131360",
    "end": "137280"
  },
  {
    "text": "exactly the way that we hoped So what do we do We just hit the retest button",
    "start": "137280",
    "end": "142400"
  },
  {
    "text": "right Uh probably everyone has done this in some form This is usually what we do And um and you know for our tests we",
    "start": "142400",
    "end": "149360"
  },
  {
    "text": "just hope that they're eventually going to work right Um so we have so obviously we have to have some memes Um yeah we",
    "start": "149360",
    "end": "158319"
  },
  {
    "text": "Well it's it didn't work So let's just do it again Let's just keep keep retesting right We're not going to maybe maybe the test is fine Um yeah some more",
    "start": "158319",
    "end": "166879"
  },
  {
    "text": "of this over and over and over and over again We just want to hit retest Um but",
    "start": "166879",
    "end": "172239"
  },
  {
    "text": "anyway this is one example of what we do and and and have experience in in Cubver",
    "start": "172239",
    "end": "177280"
  },
  {
    "text": "I'm sure people have some other examples and things that things that they do Um",
    "start": "177280",
    "end": "182800"
  },
  {
    "text": "but anyway we thought that was funny So all right to reiterate the goal So we want to learn something Um we want to",
    "start": "182800",
    "end": "188000"
  },
  {
    "text": "share ideas with everyone in the room Um you know we obviously don't want to just run and retest everything Like there's",
    "start": "188000",
    "end": "193280"
  },
  {
    "text": "there's better techniques out there Obviously there's probably better ways we can um write our",
    "start": "193280",
    "end": "198680"
  },
  {
    "text": "tests Okay So um here are our topics our high level",
    "start": "198680",
    "end": "203840"
  },
  {
    "text": "topics that we want to discuss with everyone um uh tooling reporting um",
    "start": "203840",
    "end": "209599"
  },
  {
    "text": "dealing with flaky tests uh scale performance tests with CRDs using simulation uh with Quark and and QAR",
    "start": "209599",
    "end": "216440"
  },
  {
    "text": "QARK Um so uh we're just going to go through the topics Um you know please",
    "start": "216440",
    "end": "223519"
  },
  {
    "text": "come up to the microphone shout out things that you want to talk about or care about If you want to have an opinion you know just share it Um and",
    "start": "223519",
    "end": "231519"
  },
  {
    "text": "you know if we don't have anything we'll just share about um things we do in Cubver and um you know we'll hopefully",
    "start": "231519",
    "end": "239360"
  },
  {
    "text": "get use up as much as time as we can but hopefully you guys can add some more to",
    "start": "239360",
    "end": "244400"
  },
  {
    "text": "it Okay go ahead tooling Okay I need to take a quick look because I always forget what I need to talk about So hey",
    "start": "244400",
    "end": "252560"
  },
  {
    "text": "um my name is Daniel Villa I'm uh in charge of CI of the Cubid project Um and",
    "start": "252560",
    "end": "258560"
  },
  {
    "text": "our tests are largely running on uh GKO and Gomega I figure that many of you are",
    "start": "258560",
    "end": "264320"
  },
  {
    "text": "uh probably familiar with those Uh we are running our own Prow instance Um so",
    "start": "264320",
    "end": "269600"
  },
  {
    "text": "where that's where all our test lanes are running Um and what I also want to talk about today is like a caner",
    "start": "269600",
    "end": "276400"
  },
  {
    "text": "approach I figure that most of you haven't heard about that That's like an approach um where you try to cut down on",
    "start": "276400",
    "end": "284320"
  },
  {
    "text": "the rerun of flaky tests Um does anyone here you does everyone here use GKO and",
    "start": "284320",
    "end": "290400"
  },
  {
    "text": "Gomega and Prow Everybody No problem No problem Okay No problem Does anyone want",
    "start": "290400",
    "end": "296400"
  },
  {
    "text": "to share something that something else that they use to get like you know to",
    "start": "296400",
    "end": "301440"
  },
  {
    "text": "accomplish these goals Do you use like Jenkins Like what are you using Tecton Okay Um what do you do for like",
    "start": "301440",
    "end": "308320"
  },
  {
    "text": "equivalents like uh you know when you're doing your testing you use use GKO Gomega Yeah you do Okay So tecton we've",
    "start": "308320",
    "end": "315120"
  },
  {
    "text": "got one outlay with tecton most people proud anyone else like what other testify go okay testify go",
    "start": "315120",
    "end": "324720"
  },
  {
    "text": "okay okay testify I haven't heard of that one okay cool any others",
    "start": "324720",
    "end": "332240"
  },
  {
    "text": "I'm sorry Jenkins yeah okay so all right we got a few tools out there um does",
    "start": "332240",
    "end": "338600"
  },
  {
    "text": "anyone beside for equivalence do people use I don't know like what else is there other and Ginko and Gomega that people",
    "start": "338600",
    "end": "345039"
  },
  {
    "text": "use for Go Is there any So that's testify for example Testify always would be that Okay Just the standard library",
    "start": "345039",
    "end": "351880"
  },
  {
    "text": "Okay So that that's another one we could do Okay Does anyone have want to talk about these like any opinions about",
    "start": "351880",
    "end": "358320"
  },
  {
    "text": "these like one better than another Like I'm not familiar with some of these Um like what did you not like about Prow or",
    "start": "358320",
    "end": "364080"
  },
  {
    "text": "or did like about Prow Does anyone want to share Go ahead if you want to grab the mic Yeah",
    "start": "364080",
    "end": "371000"
  },
  {
    "text": "Okay can you hear me Yeah So basically right now I think even the uh Go",
    "start": "373520",
    "end": "379039"
  },
  {
    "text": "official recommendations from the Go team say that uh you should basically embrace the the Go standard library and",
    "start": "379039",
    "end": "386639"
  },
  {
    "text": "do not use the assertion libraries because for example go if I remember correctly go Mega basically is come from",
    "start": "386639",
    "end": "393039"
  },
  {
    "text": "Sspack I think basically kind of structure So basically it just has like",
    "start": "393039",
    "end": "398160"
  },
  {
    "text": "the uh it uses like the I would say idom idioms from other",
    "start": "398160",
    "end": "404880"
  },
  {
    "text": "languages which are not really coming from go and if you look for example at the implementation of the go sound",
    "start": "404880",
    "end": "411120"
  },
  {
    "text": "library they're not they're structured completely differently and it makes very difficult to grasps and learn how",
    "start": "411120",
    "end": "418720"
  },
  {
    "text": "especially ginko because go is like the framework racking gome is poor assertions so this assertion libraries",
    "start": "418720",
    "end": "424880"
  },
  {
    "text": "works differently They're structured differently The parallelism work differently The way have you verified",
    "start": "424880",
    "end": "430960"
  },
  {
    "text": "work differently If you want example I do not remember if goga for example has this possibility to stop the test if",
    "start": "430960",
    "end": "438319"
  },
  {
    "text": "fails or just continue further which is idiomatic in go that usually you try to assert as many things as possible in one",
    "start": "438319",
    "end": "444319"
  },
  {
    "text": "test So you keep going keep going until you get all the things So I think that currently there's a preference in go",
    "start": "444319",
    "end": "451120"
  },
  {
    "text": "just to use the standard library if possible Okay Yeah So this is with testify testify testify is not really",
    "start": "451120",
    "end": "456400"
  },
  {
    "text": "also recommended because testify is just assertion library So we just have assert for example equal assert like greater",
    "start": "456400",
    "end": "463680"
  },
  {
    "text": "and there's a separate package called uh require So require basically the this fatal f or fail now so it just breaks So",
    "start": "463680",
    "end": "471840"
  },
  {
    "text": "it's just two packages one tells you that it should you know stop and fail This is require and assert just go",
    "start": "471840",
    "end": "478080"
  },
  {
    "text": "further Cool So okay thanks for sharing Thank you Okay cool I haven't heard of",
    "start": "478080",
    "end": "483440"
  },
  {
    "text": "that That's cool Yeah Okay Um All right Well why don't we go to the third one since you want to talk about flaky tests",
    "start": "483440",
    "end": "489599"
  },
  {
    "text": "and the tools there Yeah So um so where can I start So you saw like",
    "start": "489599",
    "end": "496080"
  },
  {
    "text": "the picture uh beforehand like with this uh this is like ridiculous amount of",
    "start": "496080",
    "end": "502639"
  },
  {
    "text": "retest commands probably that's based on that we had pretty hard problem of flaky",
    "start": "502639",
    "end": "511039"
  },
  {
    "text": "tests And so I've been looking at trying or we've been looking at trying to um",
    "start": "511039",
    "end": "517440"
  },
  {
    "text": "reduce those and also like to to cut down on those because like um this is waste of CI resources right So what I",
    "start": "517440",
    "end": "525360"
  },
  {
    "text": "what I stumbled over was like an a paper by someone uh who's called Greg Kafaba I",
    "start": "525360",
    "end": "531600"
  },
  {
    "text": "don't I don't know if I pronounce the name correctly but that's not really uh important I think um it's like um he",
    "start": "531600",
    "end": "539440"
  },
  {
    "text": "described there like an approach where you could like um determine whether a",
    "start": "539440",
    "end": "545360"
  },
  {
    "text": "test is either flaky or not flaky or in between And for us the only subset to",
    "start": "545360",
    "end": "552160"
  },
  {
    "text": "rerun that makes sense is to run the test in between like where you're not sure whether it's flaky or not",
    "start": "552160",
    "end": "559680"
  },
  {
    "text": "So just as a background I'm not sure if I um um if I have like a picture of that",
    "start": "559680",
    "end": "566480"
  },
  {
    "text": "No I don't So okay So the thing is like the majority of our E2E test we have a a",
    "start": "566480",
    "end": "572320"
  },
  {
    "text": "pretty big E2 test suit which is like um like I would say one and a half thousand",
    "start": "572320",
    "end": "578800"
  },
  {
    "text": "tests or something or do you have like a I don't know You don't know I don't know either But yeah beyond like thousand",
    "start": "578800",
    "end": "585440"
  },
  {
    "text": "thousand tests that are being run we have like 35 test lines that are running on every PR So you might imagine that",
    "start": "585440",
    "end": "592560"
  },
  {
    "text": "there is like a lot of E2 tests going Um and yeah whenever you have a flaky test that ruins your whole experience like",
    "start": "592560",
    "end": "599839"
  },
  {
    "text": "the on the one hand from the developer itself that is like not understanding",
    "start": "599839",
    "end": "605760"
  },
  {
    "text": "whether his test this test is failing by his own input or whether that test is somehow failing by some external thing",
    "start": "605760",
    "end": "612160"
  },
  {
    "text": "that he doesn't have any influence on right so that's what we want to fix with that so this approach actually um does I",
    "start": "612160",
    "end": "622320"
  },
  {
    "text": "think I did did say that uh does uh put like a set of feature vectors from the",
    "start": "622320",
    "end": "628399"
  },
  {
    "text": "test that is under um surveillance Um it estimates like a set of like um",
    "start": "628399",
    "end": "637279"
  },
  {
    "text": "static runtime analysis and um static analysis and runtime um properties puts",
    "start": "637279",
    "end": "643519"
  },
  {
    "text": "all that into a feature vector and feeds that into a randomized u random forest model",
    "start": "643519",
    "end": "651120"
  },
  {
    "text": "and then you can get a prediction out of that whether in what category that test",
    "start": "651120",
    "end": "656839"
  },
  {
    "text": "belongs So that's basically what we are trying to do",
    "start": "656839",
    "end": "661920"
  },
  {
    "text": "Um so just as a quick um yeah description of that I've just",
    "start": "661920",
    "end": "668959"
  },
  {
    "text": "put up this uh this list of features that are actually like um uh part of the paper I'm not sure if we can implement",
    "start": "668959",
    "end": "676399"
  },
  {
    "text": "everything right away but like the things the probably relatively easy things like cyclomatic complexity and",
    "start": "676399",
    "end": "683200"
  },
  {
    "text": "things which are like just static runtime analysis we can we can program",
    "start": "683200",
    "end": "689079"
  },
  {
    "text": "Um so the use cases for that are pretty pretty much there is many use cases like",
    "start": "689079",
    "end": "697120"
  },
  {
    "text": "first of all obviously we want to like detect flaky test before the merge before it enters the codebase and a",
    "start": "697120",
    "end": "702800"
  },
  {
    "text": "flaky test comes into that Um the other thing is like uh we want also like um on",
    "start": "702800",
    "end": "710720"
  },
  {
    "text": "the stable codebase we want to run the tests that have been changed to see whether they are flaky somehow or not Um",
    "start": "710720",
    "end": "719440"
  },
  {
    "text": "and also what what you could also imagine by the feature um set that you",
    "start": "719440",
    "end": "725360"
  },
  {
    "text": "see here This could be pretty good advice for the test engineers that are actually writing the tests whether for",
    "start": "725360",
    "end": "732560"
  },
  {
    "text": "example like the cyclomatic complexity is like beyond like someone else being",
    "start": "732560",
    "end": "737760"
  },
  {
    "text": "able to understand what what is going on there Um so all this um is planned",
    "start": "737760",
    "end": "744639"
  },
  {
    "text": "things um we are going there and if you want to join in there is the implementation PR um that is still under",
    "start": "744639",
    "end": "752720"
  },
  {
    "text": "development but yeah if you're interested just um take a look at that",
    "start": "752720",
    "end": "758079"
  },
  {
    "text": "So um anyone else working on something similar",
    "start": "758079",
    "end": "764360"
  },
  {
    "text": "Okay question How do you know that has been",
    "start": "765200",
    "end": "772639"
  },
  {
    "text": "fixed Especially like thousands of you never know where whenever a test has",
    "start": "772639",
    "end": "778320"
  },
  {
    "text": "been fixed or not because like a flaky test um doesn't care about how how often",
    "start": "778320",
    "end": "785120"
  },
  {
    "text": "you run it right So it could be even flaky after 10,000 times You could run it 10,000 times and on the on the next",
    "start": "785120",
    "end": "791600"
  },
  {
    "text": "run it might be flaky So you never know when you have fixed it but we try to just um I most of the time like talk",
    "start": "791600",
    "end": "799360"
  },
  {
    "text": "about our job what we are doing is like extinguishing the fire somehow So",
    "start": "799360",
    "end": "804480"
  },
  {
    "text": "concentrating on those things uh that are hurting us the most that are wasting the most resources So that's what we're",
    "start": "804480",
    "end": "811040"
  },
  {
    "text": "trying to do So we have reports which I'll come uh come to later so that we can have something like a heat map or",
    "start": "811040",
    "end": "817600"
  },
  {
    "text": "something where where the real hurting is going on So um yeah does that answer",
    "start": "817600",
    "end": "823839"
  },
  {
    "text": "your question Okay thanks Um anyone else So um any other questions on so far Has",
    "start": "823839",
    "end": "830800"
  },
  {
    "text": "anyone use any other techniques for detecting flakes or failures or something Anything people want to share",
    "start": "830800",
    "end": "838160"
  },
  {
    "text": "about in that area Nothing smart Nothing smart Interesting",
    "start": "838160",
    "end": "845959"
  },
  {
    "text": "Pass or fail on individual test cases and Okay look at the ones that have the most",
    "start": "847519",
    "end": "853440"
  },
  {
    "text": "number of failures like this at the top Let's have a look That's that keeps failing for",
    "start": "853440",
    "end": "861199"
  },
  {
    "text": "some reason That's okay So summarize like we get metrics We look at the biggest most",
    "start": "861199",
    "end": "868040"
  },
  {
    "text": "important red flashing thing and then we go and fix it Yeah Okay Yeah that's",
    "start": "868040",
    "end": "873600"
  },
  {
    "text": "pretty similar what we also do Yeah No that's interesting Yeah I think that's that's kind of like the idea that that",
    "start": "873600",
    "end": "879760"
  },
  {
    "text": "um like Daniel's getting to trying to explore is that like trying to get I",
    "start": "879760",
    "end": "884800"
  },
  {
    "text": "think like you said like how can we make it smarter Can we make it like what could like how do we avoid getting to",
    "start": "884800",
    "end": "890079"
  },
  {
    "text": "the big flashy test that's flashing red like the how can we avoid getting to the point of that it's flaking like that and",
    "start": "890079",
    "end": "896320"
  },
  {
    "text": "causing us an issue Okay cool All right I guess I",
    "start": "896320",
    "end": "903040"
  },
  {
    "text": "So let me see Um yeah so I just wanted to remind everyone whether you have like",
    "start": "903040",
    "end": "908800"
  },
  {
    "text": "if you have prow you can just leverage test grid which is something that um might be pretty easy to configure do",
    "start": "908800",
    "end": "916160"
  },
  {
    "text": "does anyone know test grid you know obviously yeah sure anyone else you know",
    "start": "916160",
    "end": "922880"
  },
  {
    "text": "also yeah couple of people okay then I don't want to spoil okay",
    "start": "922880",
    "end": "930360"
  },
  {
    "text": "um so okay we we have like a very simple tool that just gives us uh like an",
    "start": "930360",
    "end": "937279"
  },
  {
    "text": "overview over all the runs um of our CI infrastructure taken from the Prow Um we",
    "start": "937279",
    "end": "944160"
  },
  {
    "text": "are just uh scanning all the um all the PR runs and uh trying to make sense of",
    "start": "944160",
    "end": "951279"
  },
  {
    "text": "the data and and what we are doing is actually like um having some some kind",
    "start": "951279",
    "end": "956880"
  },
  {
    "text": "of grid where on the uh on the upper uh part you can see the proud job name on",
    "start": "956880",
    "end": "962160"
  },
  {
    "text": "the on the side you can see the test name and what was most useful for us similar to as what you described was",
    "start": "962160",
    "end": "969120"
  },
  {
    "text": "which test is failing the most that should be on the top of the list right That's actually what we what we have",
    "start": "969120",
    "end": "974560"
  },
  {
    "text": "this simple tool for I mean it it will not deserve like a like a um like a",
    "start": "974560",
    "end": "980639"
  },
  {
    "text": "design prize or something probably but yeah it's it does the job So what is also helpful out of that it it gives us",
    "start": "980639",
    "end": "987839"
  },
  {
    "text": "a first resort and it gives us like an output JSON which we can then reiterate on to have like a second thing Um yeah",
    "start": "987839",
    "end": "996839"
  },
  {
    "text": "okay the rest you have already seen So this is like the heat map that it gives",
    "start": "996839",
    "end": "1003040"
  },
  {
    "text": "us So we are looking over the tests of the last two weeks and then looking at",
    "start": "1003040",
    "end": "1008480"
  },
  {
    "text": "from two different angles First of all we are looking at um failures per day and then we're also looking at failures",
    "start": "1008480",
    "end": "1015120"
  },
  {
    "text": "per lane So that's actually where you see like where the the worst action is",
    "start": "1015120",
    "end": "1021120"
  },
  {
    "text": "going on Um on the lower side you also can see that there is like a top most recent",
    "start": "1021120",
    "end": "1027520"
  },
  {
    "text": "flaky test which is somehow like a a condensed report of the previous one But",
    "start": "1027520",
    "end": "1033839"
  },
  {
    "text": "yeah in in the end always you need to what you need to do is to drill down um",
    "start": "1033839",
    "end": "1039038"
  },
  {
    "text": "on the test results and then look at the direct things to determine normally whether it's an infrastructure flake or",
    "start": "1039039",
    "end": "1045760"
  },
  {
    "text": "whether it's uh whether it's a real flake that you need to um you always",
    "start": "1045760",
    "end": "1051120"
  },
  {
    "text": "need to handle that somehow You all you also have to make your infrastructure as resilient as you can By the way for",
    "start": "1051120",
    "end": "1057360"
  },
  {
    "text": "example if some like um image um repository is going down it will not",
    "start": "1057360",
    "end": "1063440"
  },
  {
    "text": "help you It will you will still have failing test So you have to be like resilient on that",
    "start": "1063440",
    "end": "1069400"
  },
  {
    "text": "part Um speaking of resiliency",
    "start": "1069400",
    "end": "1075160"
  },
  {
    "text": "um who else had all these problems and how did you tackle those So like",
    "start": "1075160",
    "end": "1080240"
  },
  {
    "text": "resilience of your continuous integration",
    "start": "1080240",
    "end": "1084720"
  },
  {
    "text": "infrastructure Come on guys you you all have those problems right",
    "start": "1087000",
    "end": "1093559"
  },
  {
    "text": "I can I can just say we deal with the same we",
    "start": "1094480",
    "end": "1101320"
  },
  {
    "text": "all ines as well as workloads and stuff",
    "start": "1101320",
    "end": "1107280"
  },
  {
    "text": "We have our we have alerts we have things go wrong the person assigned to",
    "start": "1107280",
    "end": "1114039"
  },
  {
    "text": "that feature or whatever we",
    "start": "1114039",
    "end": "1119880"
  },
  {
    "text": "have self what do you use to report the results",
    "start": "1119880",
    "end": "1126080"
  },
  {
    "text": "use like Prometheus how do you uh are using you do okay",
    "start": "1126080",
    "end": "1131440"
  },
  {
    "text": "yeah stuff is all exposed to air in our Okay",
    "start": "1131559",
    "end": "1139400"
  },
  {
    "text": "Okay Do you probably have dashboards like use graphana or something Okay And that's how you get the flashing red",
    "start": "1140559",
    "end": "1145919"
  },
  {
    "text": "lights from the Okay Got it",
    "start": "1145919",
    "end": "1150519"
  },
  {
    "text": "Interesting Okay Yeah Yeah I mean with Tecton you get a lot more right like um being able to",
    "start": "1160080",
    "end": "1167520"
  },
  {
    "text": "structure your pipeline So for example when like the compile fails there is no use of running the tests anyhow right",
    "start": "1167520",
    "end": "1174000"
  },
  {
    "text": "Yeah that makes total sense Yeah each step becomes each task",
    "start": "1174000",
    "end": "1180799"
  },
  {
    "text": "and each step and you also have like the uh the",
    "start": "1180799",
    "end": "1186880"
  },
  {
    "text": "benefit of promoting artifacts right like similar to Jenkins I think",
    "start": "1186880",
    "end": "1193280"
  },
  {
    "text": "It's basically building",
    "start": "1193280",
    "end": "1197480"
  },
  {
    "text": "Yeah makes sense Yeah Okay Anyone else That sounds like",
    "start": "1198880",
    "end": "1208679"
  },
  {
    "text": "we've introduced a lot of things to this",
    "start": "1209360",
    "end": "1214120"
  },
  {
    "text": "Okay Yeah I think we can move on Okay Uh next uh scale and performance",
    "start": "1217440",
    "end": "1226200"
  },
  {
    "text": "tests Kind of consider this to be like I've got my MVP I've rolled it out maybe",
    "start": "1226200",
    "end": "1233039"
  },
  {
    "text": "I've reached production maybe I've entering production for a little bit Like kind of an advanced thing like I",
    "start": "1233039",
    "end": "1238720"
  },
  {
    "text": "think something that always doesn't get enough love And I think um this topic is",
    "start": "1238720",
    "end": "1245480"
  },
  {
    "text": "uh I think it's it's also can be particularly complex There's a lot of tooling and different techniques around this one but I mean maybe so let me ask",
    "start": "1245480",
    "end": "1252960"
  },
  {
    "text": "like how many people have or do scale and performance tests for their CRDs Has",
    "start": "1252960",
    "end": "1258240"
  },
  {
    "text": "anyone ever done that Yes I got somebody Tell me what uh you have So you have",
    "start": "1258240",
    "end": "1263280"
  },
  {
    "text": "your um you got your own CRD You've written your own scale and performance tests",
    "start": "1263280",
    "end": "1268880"
  },
  {
    "text": "So we actually have Do you want to take the mic please Thank you",
    "start": "1268880",
    "end": "1276360"
  },
  {
    "text": "Yeah So um practically we run an internal platform team So we um do scale",
    "start": "1276480",
    "end": "1281919"
  },
  {
    "text": "tests for both our internal CRDs and anything we brought from the open source Uh and the main reason for that is",
    "start": "1281919",
    "end": "1288240"
  },
  {
    "text": "simply again because it's CD and you can fill up at CD and that's a total cluster outage Um I think it's imperative that",
    "start": "1288240",
    "end": "1295200"
  },
  {
    "text": "if you run beyond several thousand nodes or you know several tens of thousands of",
    "start": "1295200",
    "end": "1300400"
  },
  {
    "text": "pods um you kind of need to yeah so we use something like usually cluster",
    "start": "1300400",
    "end": "1305440"
  },
  {
    "text": "loader cube mark uh methodologies do differ uh but we basically try to see",
    "start": "1305440",
    "end": "1310799"
  },
  {
    "text": "again how fast can the controllers keep up what is the you know percentiles of",
    "start": "1310799",
    "end": "1316080"
  },
  {
    "text": "reconciliation times of each controller look like looks like uh what is the um",
    "start": "1316080",
    "end": "1321360"
  },
  {
    "text": "you know various metrics look like while we're conducting the stress test uh how fast are we able to load the cluster",
    "start": "1321360",
    "end": "1328159"
  },
  {
    "text": "like is the uh loading strategy as good as uh you know is good basically good",
    "start": "1328159",
    "end": "1333360"
  },
  {
    "text": "for finding the bottlenecks so those are basically all cool okay thanks for sharing yeah I this you hit on you",
    "start": "1333360",
    "end": "1339280"
  },
  {
    "text": "nailed one of the points here that we wanted to specifically drill into is liked right it's a shared resource your",
    "start": "1339280",
    "end": "1345600"
  },
  {
    "text": "CRD is going to use CD but it's also going to use the API server right so when you do your REST calls like you're",
    "start": "1345600",
    "end": "1351679"
  },
  {
    "text": "you're going to use the API server So are you being responsible Like are you just hammering the API server with with",
    "start": "1351679",
    "end": "1358559"
  },
  {
    "text": "list requests right with your CRD or do you have tools that are doing that Are you just you know are you patching",
    "start": "1358559",
    "end": "1364320"
  },
  {
    "text": "constantly Like do you are you measuring that And do you measuring what how much memory the the API server is using when",
    "start": "1364320",
    "end": "1369840"
  },
  {
    "text": "you do this Right These so these are complex topics um that I think um so there's some tooling around this and um",
    "start": "1369840",
    "end": "1377039"
  },
  {
    "text": "let's talk about so we're going to talk about the cubver example So um we went",
    "start": "1377039",
    "end": "1382080"
  },
  {
    "text": "to this exercise in Qvert um so obviously qvert is a CRD and",
    "start": "1382080",
    "end": "1387679"
  },
  {
    "text": "it has rest calls um that are made to the API server So what we should do is",
    "start": "1387679",
    "end": "1394080"
  },
  {
    "text": "we should figure out how many it's making and what is normal like what is",
    "start": "1394080",
    "end": "1399440"
  },
  {
    "text": "like the expectation so that we can um you know as we work on cubvert we're not",
    "start": "1399440",
    "end": "1405440"
  },
  {
    "text": "like increasing this to some unmanageable amount right like we have you know if we're going to introduce this patch we probably want to figure",
    "start": "1405440",
    "end": "1412080"
  },
  {
    "text": "out if this thing is going to have a loop in there that's just going to patch something right it's going to affect",
    "start": "1412080",
    "end": "1417280"
  },
  {
    "text": "it's going to affect the API server we need to know this stuff um And then our performance measurements like can we",
    "start": "1417280",
    "end": "1423280"
  },
  {
    "text": "estimate like when we do this stuff like how how well everything is going to perform how much memory it's going to",
    "start": "1423280",
    "end": "1428559"
  },
  {
    "text": "use etc Um and then our final goal was that we should be able to publish this every time we release our CRD Every time",
    "start": "1428559",
    "end": "1434960"
  },
  {
    "text": "Cuver releases we should be able to tell everyone in the community to say \"Here's all the number of REST calls Here's how",
    "start": "1434960",
    "end": "1440960"
  },
  {
    "text": "much memory we expect to use Here's a rough estimate how much we'll we think it'll scale.\" Yes Question",
    "start": "1440960",
    "end": "1448600"
  },
  {
    "text": "I have a question I hope it's not dump Where are you running those scale and performance test Because I think you're",
    "start": "1449120",
    "end": "1454240"
  },
  {
    "text": "a CNCF project So I guess you're not running them in GitHub actions right",
    "start": "1454240",
    "end": "1459679"
  },
  {
    "text": "Or you do No as as we said we we are using Prow and this is just one of the",
    "start": "1459679",
    "end": "1465360"
  },
  {
    "text": "Prow lanes that we have Um does it answer your question already or do you have more questions",
    "start": "1465360",
    "end": "1472320"
  },
  {
    "text": "Do need to do my homework Yeah this so this is one of our test lanes that we re we introduced probably",
    "start": "1472320",
    "end": "1479919"
  },
  {
    "text": "I don't know I think it might have been a year I have the date here about a little over a year ago um this is an example actually so um we published this",
    "start": "1479919",
    "end": "1487440"
  },
  {
    "text": "and um so the things that I want to highlight here is the you see there's we obvious see a lot of dots um those are",
    "start": "1487440",
    "end": "1494320"
  },
  {
    "text": "the tests um and then we grab a numerical value and that's how we plot that number we have an orange line",
    "start": "1494320",
    "end": "1500320"
  },
  {
    "text": "that's horizontal across the stream that's just um you know what the the average is Um and then we have um these",
    "start": "1500320",
    "end": "1508080"
  },
  {
    "text": "vertical dotted lines since um those are going to be Q Kubernetes releases So",
    "start": "1508080",
    "end": "1514000"
  },
  {
    "text": "we're going to do different releases of Qvert and then Kubernetes is going to release and then we have like this matrix of things that could affect",
    "start": "1514000",
    "end": "1522559"
  },
  {
    "text": "Cubver right performance and scale like the number of requests we're making So this specific example is the number of",
    "start": "1522559",
    "end": "1528080"
  },
  {
    "text": "patch um requests that are made um for VMI So the control plane's going to",
    "start": "1528080",
    "end": "1534880"
  },
  {
    "text": "patch a VMI like it's going to maybe change a label or something Um and and",
    "start": "1534880",
    "end": "1540880"
  },
  {
    "text": "it's or it's going to make a patch request for a pod So it's going to make you know move a label from a VMI to a pod and you know that request is going",
    "start": "1540880",
    "end": "1547679"
  },
  {
    "text": "to go to the API server So we measure these things So specifically this test we do um per 100 VMIS which is 100 100",
    "start": "1547679",
    "end": "1556520"
  },
  {
    "text": "pods So like roughly the line is around 200 So that would be like two to one So",
    "start": "1556520",
    "end": "1562240"
  },
  {
    "text": "for every um every pod that Qvert is interacting with it'll make two patch",
    "start": "1562240",
    "end": "1568720"
  },
  {
    "text": "requests And so we can measure this and we measure it over time We can see that like around 2024 this changed this",
    "start": "1568720",
    "end": "1575520"
  },
  {
    "text": "changed to from 200 to 400 So somewhere in there we added a another patch request to to a pod And so we can see",
    "start": "1575520",
    "end": "1583440"
  },
  {
    "text": "this now And this obviously has implications like like I said for um for scale Um this has a memory value",
    "start": "1583440",
    "end": "1589919"
  },
  {
    "text": "associated with it Um I mean it's really hard to like um to you know like say",
    "start": "1589919",
    "end": "1595120"
  },
  {
    "text": "exactly what that is but we know that the you know every one of these things will eventually at scale cost memory So",
    "start": "1595120",
    "end": "1602000"
  },
  {
    "text": "we want to be you know cognizant and aware of these things So that's this will tell us that you know the new cub",
    "start": "1602000",
    "end": "1607559"
  },
  {
    "text": "release you will get four um patch requests when you create um a pod Um so",
    "start": "1607559",
    "end": "1615200"
  },
  {
    "text": "we can measure these things over time and um this is really useful for you know for us to measure and um we we",
    "start": "1615200",
    "end": "1622480"
  },
  {
    "text": "wrote a bunch of tools that that do this Um they're in the cubit repo Um pretty simple like as I said it just creates a",
    "start": "1622480",
    "end": "1629200"
  },
  {
    "text": "100 objects and then we scrape um Prometheus over the time period that we",
    "start": "1629200",
    "end": "1635360"
  },
  {
    "text": "created these things And um there's a bunch of metrics that you can grab um in there that'll tell you like all the the",
    "start": "1635360",
    "end": "1641279"
  },
  {
    "text": "rest calls and then you know tally them up and then publish in this way Okay",
    "start": "1641279",
    "end": "1649519"
  },
  {
    "text": "So does anyone Okay Okay so this is just an example but um I think so in the in the interest of",
    "start": "1650679",
    "end": "1657840"
  },
  {
    "text": "the reason to share this is because I think um if you have the ability to do this like with you know Prometheus and",
    "start": "1657840",
    "end": "1663600"
  },
  {
    "text": "you've got a test um that currently exists that does performance um this is a really cool way to um to measure your",
    "start": "1663600",
    "end": "1671039"
  },
  {
    "text": "CRD and measure it over time and you can publish it uh just like this Uh",
    "start": "1671039",
    "end": "1676399"
  },
  {
    "text": "unfortunately I don't have a link I wish I did but um um you know we can you can slack me afterwards I can give you a",
    "start": "1676399",
    "end": "1681679"
  },
  {
    "text": "link to the tools that show how to do this and you know which metrics they scrape there They're um general metrics",
    "start": "1681679",
    "end": "1687200"
  },
  {
    "text": "that Kubernetes publishes Okay Uh simulation uh the",
    "start": "1687200",
    "end": "1692240"
  },
  {
    "text": "tooling that you can use for this uh I heard one mentioned earlier I heard Cubeark um and the other one would be uh",
    "start": "1692240",
    "end": "1699679"
  },
  {
    "text": "Quac and there might be others out there but I think these are the two predominant tools that you'd use um for",
    "start": "1699679",
    "end": "1706000"
  },
  {
    "text": "actually doing these kinds of testing Um Qvert is just starting to uh so we have",
    "start": "1706000",
    "end": "1713520"
  },
  {
    "text": "real hardware that like we run that that test I just showed on where we'll start up 100 VMIs Um but now we want to do",
    "start": "1713520",
    "end": "1721679"
  },
  {
    "text": "much larger right We actually want to do like 100,000 or 10,000 or 50,000 or something right So how do we get there",
    "start": "1721679",
    "end": "1728640"
  },
  {
    "text": "Like how do we start up you know 50,000 pods without it costing too much money",
    "start": "1728640",
    "end": "1735360"
  },
  {
    "text": "Um Quark is really useful Quark is Kubernetes without Cubver or Kubernetes",
    "start": "1735360",
    "end": "1740559"
  },
  {
    "text": "without cublet excuse me And um it's a way that you can um launch essentially",
    "start": "1740559",
    "end": "1746320"
  },
  {
    "text": "like you have like virtual nodes like this idea that you can have these these objects exist and they make all the API",
    "start": "1746320",
    "end": "1753279"
  },
  {
    "text": "calls to Kubernetes as if they exist Um but you know they're not they're not",
    "start": "1753279",
    "end": "1758399"
  },
  {
    "text": "real They're not consuming resources So we can just create tons and tons and tons of these things stress the API",
    "start": "1758399",
    "end": "1763919"
  },
  {
    "text": "server stress the control plane and and measure how it performs Um so this is",
    "start": "1763919",
    "end": "1769600"
  },
  {
    "text": "one we're just starting to integrate with Um I think um there's some examples",
    "start": "1769600",
    "end": "1775279"
  },
  {
    "text": "of it out there in the community I don't know if anyone's seen these or has tried using Quark for scale testing Has anyone",
    "start": "1775279",
    "end": "1781919"
  },
  {
    "text": "Yeah Okay Um and then the other one QA mark is this is interesting So because",
    "start": "1781919",
    "end": "1789120"
  },
  {
    "text": "Qvert has its own control plane and almost like a kind of like a runtime to it one of the things that we can't test",
    "start": "1789120",
    "end": "1795760"
  },
  {
    "text": "is um is like the the VMI um interaction There's like a Damon we that we have to",
    "start": "1795760",
    "end": "1802399"
  },
  {
    "text": "run in a node that sort of manages the the virtual machine resource There's no way for us to test that right Because",
    "start": "1802399",
    "end": "1809360"
  },
  {
    "text": "Quark is you know there's no real runtime So the idea is that we have to have like a in keyword a cube mark like",
    "start": "1809360",
    "end": "1817320"
  },
  {
    "text": "um test that will um take uh a lots of",
    "start": "1817320",
    "end": "1823600"
  },
  {
    "text": "create lots of these things these dammons that were to to manage our virtual machines and we have to like",
    "start": "1823600",
    "end": "1829520"
  },
  {
    "text": "simulate that whole thing So kind of like how Kubernetes uses cube mark to simulate nodes and and um to do like",
    "start": "1829520",
    "end": "1837919"
  },
  {
    "text": "large scale like 5,000 nodes like that's how um kubernetes test scale can do like 5 10,000 nodes with um with cube mark we",
    "start": "1837919",
    "end": "1845520"
  },
  {
    "text": "basically would want to do the same thing So slight nuance there that you can also test um uh that's a little bit",
    "start": "1845520",
    "end": "1851840"
  },
  {
    "text": "different than quawk Okay Any other comments uh about",
    "start": "1851840",
    "end": "1857399"
  },
  {
    "text": "simulation tools people are using or any comments about these in",
    "start": "1857399",
    "end": "1864000"
  },
  {
    "text": "particular Okay Okay I don't know how we doing on time I",
    "start": "1866600",
    "end": "1874080"
  },
  {
    "text": "think we're Are we We're at time Okay Cool All right Thank you everyone Let us know if you have any questions Find us",
    "start": "1874080",
    "end": "1879679"
  },
  {
    "text": "afterwards",
    "start": "1879679",
    "end": "1882679"
  }
]