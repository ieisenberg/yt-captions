[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "hi everyone thank you so much for coming and I'm so happy to be here and it's my",
    "start": "0",
    "end": "6390"
  },
  {
    "text": "first time in Germany my name is Janet I'm a software engineer at Google",
    "start": "6390",
    "end": "12389"
  },
  {
    "text": "I'm a core contributor to kubernetes things at one point all really I focus",
    "start": "12389",
    "end": "18810"
  },
  {
    "text": "on the Internet experience for running workloads in kubernetes so before I give",
    "start": "18810",
    "end": "25470"
  },
  {
    "text": "you the details about kubernetes let me show you a story you may remember",
    "start": "25470",
    "end": "33690"
  },
  {
    "text": "that a month ago there is an outage in one region of AWS it's continued for",
    "start": "33690",
    "end": "42030"
  },
  {
    "text": "several hours and it broke lots of popular websites and applications",
    "start": "42030",
    "end": "48739"
  },
  {
    "text": "however there's a company called fire they experienced zero downtime even",
    "start": "48739",
    "end": "55590"
  },
  {
    "text": "though they hope the majority of the day infrastructure is in the same region that had outage so you may wonder how do",
    "start": "55590",
    "end": "64978"
  },
  {
    "text": "they do that and what's their secret the answer is one word you you may already know that",
    "start": "64979",
    "end": "73020"
  },
  {
    "text": "the answer is kubernetes so many other",
    "start": "73020",
    "end": "78960"
  },
  {
    "start": "76000",
    "end": "151000"
  },
  {
    "text": "systems with this kind of politics this usually usually means that our team will",
    "start": "78960",
    "end": "84540"
  },
  {
    "text": "be flooded with alerts and they'll have a sense of panic when they are trying to",
    "start": "84540",
    "end": "90150"
  },
  {
    "text": "figure out how do I reduce tribute my resources right but with kubernetes",
    "start": "90150",
    "end": "95490"
  },
  {
    "text": "there is no moment for panic and when the incident happened",
    "start": "95490",
    "end": "101009"
  },
  {
    "text": "kubernetes immediately detected what was happening and it automatically creates",
    "start": "101009",
    "end": "107720"
  },
  {
    "text": "replacements other instance on the other available regions and brought those",
    "start": "107720",
    "end": "113850"
  },
  {
    "text": "workloads back into service when they become available and yes this all sounds like magic right",
    "start": "113850",
    "end": "122299"
  },
  {
    "text": "and I'm sure you want the type of magic in your system but it's actually not",
    "start": "122299",
    "end": "128640"
  },
  {
    "text": "magic it's all the current kubernetes enables a location patterns that make it easy to",
    "start": "128640",
    "end": "135030"
  },
  {
    "text": "manage your workflows and easy to recover so today I'm going to show you",
    "start": "135030",
    "end": "141680"
  },
  {
    "text": "the patterns that are available in kubernetes for you to run your workload",
    "start": "141680",
    "end": "148610"
  },
  {
    "start": "151000",
    "end": "218000"
  },
  {
    "text": "you can think of kubernetes as a as a platform for application patterns the",
    "start": "151160",
    "end": "157920"
  },
  {
    "text": "peasants like is easy make your applications easy to deploy easy to run",
    "start": "157920",
    "end": "164340"
  },
  {
    "text": "and easy to keep running and you're also here part I mentioned a lot a part is if",
    "start": "164340",
    "end": "173100"
  },
  {
    "text": "the smallest the things you need to intranet excitment deploy or create a",
    "start": "173100",
    "end": "179330"
  },
  {
    "text": "part usually has one container or sometimes multiple tightly coupled",
    "start": "179330",
    "end": "184980"
  },
  {
    "text": "containers and they're shared resources apart is the single instance of your application in kubernetes kubernetes",
    "start": "184980",
    "end": "193980"
  },
  {
    "text": "also have something called controllers and the controller creates multiple pods",
    "start": "193980",
    "end": "200250"
  },
  {
    "text": "for a specific application pattern so you don't create parts directly you",
    "start": "200250",
    "end": "207690"
  },
  {
    "text": "create controllers you let the controllers manage the pot in the pattern for you",
    "start": "207690",
    "end": "215120"
  },
  {
    "start": "218000",
    "end": "260000"
  },
  {
    "text": "and so to visualize it this is a kubernetes process and those",
    "start": "218170",
    "end": "224709"
  },
  {
    "text": "are those foxes our nose a nose is like your physical or virtual machine and the",
    "start": "224709",
    "end": "233610"
  },
  {
    "text": "underwear there is a net to note the medicine note makes global decisions",
    "start": "233610",
    "end": "238870"
  },
  {
    "text": "about the cluster and the words are nose",
    "start": "238870",
    "end": "244320"
  },
  {
    "text": "maintain the cause and they're running environment the controller will run on",
    "start": "244320",
    "end": "252400"
  },
  {
    "text": "the master node and it manages the past running on record notes so today I'm",
    "start": "252400",
    "end": "261459"
  },
  {
    "start": "260000",
    "end": "318000"
  },
  {
    "text": "going to give you an overview of four most common and general pattern in",
    "start": "261459",
    "end": "266860"
  },
  {
    "text": "kubernetes they are state first Salus like stainless pattern like West Brian",
    "start": "266860",
    "end": "274480"
  },
  {
    "text": "web servers a concrete example is and Jack's or Comcast and faithful patent is",
    "start": "274480",
    "end": "283840"
  },
  {
    "text": "things like databases message queues things like think that means say for",
    "start": "283840",
    "end": "290830"
  },
  {
    "text": "example zookeeper MongoDB or Mexico and then demon for example The Lost",
    "start": "290830",
    "end": "298450"
  },
  {
    "text": "collection demons or the note1 train demon for example 2 and V or Lincoln T",
    "start": "298450",
    "end": "305580"
  },
  {
    "text": "and the West one is batch patterns of",
    "start": "305580",
    "end": "310919"
  },
  {
    "text": "the parallel processing of your work items so let's talk about the first",
    "start": "310919",
    "end": "319990"
  },
  {
    "start": "318000",
    "end": "399000"
  },
  {
    "text": "pattern POS pattern stateless means that you don't need to keep persistent data",
    "start": "319990",
    "end": "326650"
  },
  {
    "text": "the state in your workload the controller for Salus application is",
    "start": "326650",
    "end": "333310"
  },
  {
    "text": "called deployment if you want to manage and skills Salus workloads such as your",
    "start": "333310",
    "end": "341229"
  },
  {
    "text": "web applications your mobile backends or API servers then deployment is the",
    "start": "341229",
    "end": "347140"
  },
  {
    "text": "controller for you so according to Cass Theory you can only",
    "start": "347140",
    "end": "352690"
  },
  {
    "text": "choose between consistency and availability with there's Network partition and sailors I mean deployment",
    "start": "352690",
    "end": "360910"
  },
  {
    "text": "link towards availability then consistency so deployment provides the",
    "start": "360910",
    "end": "367919"
  },
  {
    "text": "availability by creating multiple copies of the same file",
    "start": "367919",
    "end": "373479"
  },
  {
    "text": "the parts are disposable so if they become unhealthy I the deployment will",
    "start": "373479",
    "end": "379780"
  },
  {
    "text": "just kill it and create a new replacement and you can also update your",
    "start": "379780",
    "end": "385599"
  },
  {
    "text": "deployment at a controlled rate without a service outage when an incident like",
    "start": "385599",
    "end": "392650"
  },
  {
    "text": "that area - outage happens your clothes will automatically recover now I'm going",
    "start": "392650",
    "end": "401050"
  },
  {
    "start": "399000",
    "end": "744000"
  },
  {
    "text": "to show you a live demo of deployment so before I do that I want to circle it",
    "start": "401050",
    "end": "406740"
  },
  {
    "text": "still about what I'm going to do so in this demo I'm going to use something",
    "start": "406740",
    "end": "412539"
  },
  {
    "text": "called to control if the kubernetes COI pool and Q control will make a",
    "start": "412539",
    "end": "419039"
  },
  {
    "text": "synchronous call a synchronous requests to the controller and you will tell the",
    "start": "419039",
    "end": "424630"
  },
  {
    "text": "controller what the design state and the controller will just make itself and on",
    "start": "424630",
    "end": "431770"
  },
  {
    "text": "the right hand side is something called service a service front your pod so you only talk to",
    "start": "431770",
    "end": "438580"
  },
  {
    "text": "service you don't talk directly to pot and the service will low balance the",
    "start": "438580",
    "end": "444370"
  },
  {
    "text": "traffic to your pot and only the healthy part so if your parts somewhat somehow",
    "start": "444370",
    "end": "450819"
  },
  {
    "text": "becomes unhealthy or if the terminated then your service won't be affected it",
    "start": "450819",
    "end": "457990"
  },
  {
    "text": "will still be running so what I'm going",
    "start": "457990",
    "end": "463990"
  },
  {
    "text": "to show you a demo so I use a split screen on the top I'm going to run my",
    "start": "463990",
    "end": "470860"
  },
  {
    "text": "demo oh thank you okay on the top I'm going to run the",
    "start": "470860",
    "end": "478520"
  },
  {
    "text": "demo and on the bottom I'm going to watch the creation of current hot",
    "start": "478520",
    "end": "485860"
  },
  {
    "text": "so let's take a look at the service I'm going to create the service man is in",
    "start": "503750",
    "end": "509090"
  },
  {
    "text": "Jags so I use cube control applies to",
    "start": "509090",
    "end": "518150"
  },
  {
    "text": "creative service and the service will from my nginx cut and I'm going to",
    "start": "518150",
    "end": "529370"
  },
  {
    "text": "deploy this appointment and you can see there is replicas equal to 3 that means",
    "start": "529370",
    "end": "536990"
  },
  {
    "text": "that the appointment will always will create r32 cuts and you will always be",
    "start": "536990",
    "end": "543080"
  },
  {
    "text": "free and I also went to the quarry and",
    "start": "543080",
    "end": "551930"
  },
  {
    "text": "the version is 179 so I use queue",
    "start": "551930",
    "end": "557120"
  },
  {
    "text": "control applied to create this appointment and on the bottom you can",
    "start": "557120",
    "end": "562790"
  },
  {
    "text": "see the parts are created and there are three parts and now I can access my",
    "start": "562790",
    "end": "571310"
  },
  {
    "text": "service using curl so it's because the",
    "start": "571310",
    "end": "576980"
  },
  {
    "text": "you can access service in several different ways but in this demo I use on TMS so you can",
    "start": "576980",
    "end": "585650"
  },
  {
    "text": "see the server returning me once and I inject service and let's take a look at",
    "start": "585650",
    "end": "595220"
  },
  {
    "text": "the part we just created so there are three parts like I want deployment to",
    "start": "595220",
    "end": "601460"
  },
  {
    "text": "equate three replicas person and because you will also notice that there are red",
    "start": "601460",
    "end": "608980"
  },
  {
    "text": "so that means let's give you an idea that pods are disposable",
    "start": "608980",
    "end": "616420"
  },
  {
    "text": "so let's try to kill the less hot and see how the deployment will react kill",
    "start": "617250",
    "end": "624459"
  },
  {
    "text": "the left pocket and look up again and",
    "start": "624459",
    "end": "632680"
  },
  {
    "text": "now this there are skills with us and longer we just created okay so",
    "start": "632680",
    "end": "643209"
  },
  {
    "text": "deployment we'll just recover for you so",
    "start": "643209",
    "end": "649029"
  },
  {
    "text": "now I just mentioned that I can really update my deployment right so here I'm",
    "start": "649029",
    "end": "655000"
  },
  {
    "text": "going to just a sega version was attached to a broken version and see how",
    "start": "655000",
    "end": "662139"
  },
  {
    "text": "women will react",
    "start": "662139",
    "end": "665519"
  },
  {
    "text": "so now I leave the pot again and I can see these two Hut are the broken version",
    "start": "669260",
    "end": "677750"
  },
  {
    "text": "and they're cracking I mean they're just",
    "start": "677750",
    "end": "683470"
  },
  {
    "text": "for the image but yet the old engine x12",
    "start": "683470",
    "end": "689210"
  },
  {
    "text": "the night is still running and can I access my service I can still access it",
    "start": "689210",
    "end": "699170"
  },
  {
    "text": "because the service will only route traffic to healthy pot",
    "start": "699170",
    "end": "705339"
  },
  {
    "text": "now I try to say my deployment to version one night one and the broken",
    "start": "707520",
    "end": "715709"
  },
  {
    "text": "rail i justed wouldn't block the further row I want so let's look at the part I",
    "start": "715709",
    "end": "725399"
  },
  {
    "text": "just updated and there now",
    "start": "725399",
    "end": "730850"
  },
  {
    "text": "and try to access the service again it returns me one night one here",
    "start": "731510",
    "end": "742540"
  },
  {
    "text": "so back to the light and I just taught told you about JLS playlist tagging now",
    "start": "744800",
    "end": "753470"
  },
  {
    "text": "I'm going to talk about a spatial pattern for stateless applications skill",
    "start": "753470",
    "end": "759410"
  },
  {
    "text": "and recovery is very easy however some of you some of your application needs to",
    "start": "759410",
    "end": "766040"
  },
  {
    "text": "store data like databases message queues cache and you go running the distributed",
    "start": "766040",
    "end": "774350"
  },
  {
    "text": "stay for were close like zookeeper each of your faithful pods will need a",
    "start": "774350",
    "end": "780410"
  },
  {
    "text": "stronger notion of identity and if you",
    "start": "780410",
    "end": "786920"
  },
  {
    "text": "remember what I just told you the part created by deployment we will not have",
    "start": "786920",
    "end": "792589"
  },
  {
    "text": "the same identity like they have random string up their name right so um after",
    "start": "792589",
    "end": "801170"
  },
  {
    "text": "the part being killed and recreated they won't have the same identity and they will not have to spend storage so we",
    "start": "801170",
    "end": "809600"
  },
  {
    "text": "need another controller for this kind of spatial pattern and the controller is",
    "start": "809600",
    "end": "814910"
  },
  {
    "text": "called staple set so unlike deployments staple sets links",
    "start": "814910",
    "end": "820429"
  },
  {
    "text": "towards consistency then availability stateful set also manage multiple parts",
    "start": "820429",
    "end": "827769"
  },
  {
    "text": "but each part of our staple sets are somewhat similar but slightly different",
    "start": "827769",
    "end": "834970"
  },
  {
    "text": "because they have unique identity and unique persistent storage with staple",
    "start": "834970",
    "end": "843860"
  },
  {
    "text": "set you can also deploy and scale and terminate your applications in order so",
    "start": "843860",
    "end": "849290"
  },
  {
    "text": "this is safer we want safety first and it's also easier for you to reason about",
    "start": "849290",
    "end": "855799"
  },
  {
    "text": "your staple applications so again I'm",
    "start": "855799",
    "end": "860959"
  },
  {
    "start": "860000",
    "end": "1141000"
  },
  {
    "text": "going to show you a demo and if this diagram is similar to what we saw before",
    "start": "860959",
    "end": "867319"
  },
  {
    "text": "but if you look closer visit there's a pot zero pot one that I put here that",
    "start": "867319",
    "end": "874610"
  },
  {
    "text": "means we use again we use the index of the pot identity so",
    "start": "874610",
    "end": "880290"
  },
  {
    "text": "when a cart being killed and recreated their skill has the same identity and space and so like before I'm going to",
    "start": "880290",
    "end": "895140"
  },
  {
    "text": "watch my hot key here down here in the",
    "start": "895140",
    "end": "901680"
  },
  {
    "text": "bottom and run my demo on the top so",
    "start": "901680",
    "end": "909209"
  },
  {
    "text": "I'll first create a new keeper cluster and I didn't show you the details",
    "start": "909209",
    "end": "917520"
  },
  {
    "text": "because they are too long but in a nutshell I just create a safe all set to",
    "start": "917520",
    "end": "922860"
  },
  {
    "text": "keeper and I create a service to front it and Kozik map is just the",
    "start": "922860",
    "end": "928890"
  },
  {
    "text": "configuration for this stateful set and in this staple set I create three reps",
    "start": "928890",
    "end": "935130"
  },
  {
    "text": "of pot that's the minimum requirement for zookeeper cluster and then on the",
    "start": "935130",
    "end": "943500"
  },
  {
    "text": "bottom you can see that I'm creating three pods but each part will be created",
    "start": "943500",
    "end": "950100"
  },
  {
    "text": "in order so only the first one is running and healthy I'll create the",
    "start": "950100",
    "end": "955500"
  },
  {
    "text": "second one and the third one so let's wait a while for the last one to be come",
    "start": "955500",
    "end": "962820"
  },
  {
    "text": "to be running and you can also see that they all have a index 0 1 2 and that's",
    "start": "962820",
    "end": "972450"
  },
  {
    "text": "their identity so take a look at the pot we just created they seems healthy now",
    "start": "972450",
    "end": "984260"
  },
  {
    "text": "take a look at the their network identity to see they're truly unique",
    "start": "984260",
    "end": "990990"
  },
  {
    "text": "like I said",
    "start": "990990",
    "end": "994310"
  },
  {
    "text": "so I run three different three comments on three parts I use coupon tour exit on",
    "start": "997180",
    "end": "1006130"
  },
  {
    "text": "the first second and third part and I I call host them to get their network",
    "start": "1006130",
    "end": "1012490"
  },
  {
    "text": "identity back and you can if you look closer you can see that we use the year",
    "start": "1012490",
    "end": "1018460"
  },
  {
    "text": "Putnam as prefect so this is unique and this is sticky and",
    "start": "1018460",
    "end": "1028380"
  },
  {
    "text": "I'm going to write some data to the first part so I create a flush hello and",
    "start": "1028380",
    "end": "1036750"
  },
  {
    "text": "write data world into it now I want to",
    "start": "1036750",
    "end": "1044650"
  },
  {
    "text": "read data from the first part I read get hello and it returns me wrote how about",
    "start": "1044650",
    "end": "1055090"
  },
  {
    "text": "other members in the zookeeper cluster so I read data from the second part and",
    "start": "1055090",
    "end": "1062070"
  },
  {
    "text": "it also returns me hello so I'm going to",
    "start": "1062070",
    "end": "1070840"
  },
  {
    "text": "try to delete the last part zookeeper - and see how a whole set will react so on",
    "start": "1070840",
    "end": "1079630"
  },
  {
    "text": "bottom you can see that staples on the the last part zookeeper - is being",
    "start": "1079630",
    "end": "1085360"
  },
  {
    "text": "terminating but I didn't create another pod here because I want consistency so",
    "start": "1085360",
    "end": "1091300"
  },
  {
    "text": "I'll only create recreate this part after is terminated and I'll create a",
    "start": "1091300",
    "end": "1098650"
  },
  {
    "text": "part with this mmm and if it took a while to contaminate because we want",
    "start": "1098650",
    "end": "1104290"
  },
  {
    "text": "graceful termination so now that the left part is being killed and recreated",
    "start": "1104290",
    "end": "1112800"
  },
  {
    "text": "let's make sure it's recreated and the last step is we read the data",
    "start": "1113220",
    "end": "1122520"
  },
  {
    "text": "from the last part and to see if the data is still there and you can see I get hello and it",
    "start": "1122520",
    "end": "1129630"
  },
  {
    "text": "returns me wrong so my data is persistent even though I killed hot and it's still there",
    "start": "1129630",
    "end": "1138770"
  },
  {
    "start": "1141000",
    "end": "1361000"
  },
  {
    "text": "so the third pattern is demons sometimes",
    "start": "1141710",
    "end": "1147090"
  },
  {
    "text": "you want to run demon like we're close in your nose for example on running love",
    "start": "1147090",
    "end": "1153480"
  },
  {
    "text": "collection demons or note monitoring demons and you can use the controller",
    "start": "1153480",
    "end": "1158730"
  },
  {
    "text": "called demon set and if you add or the",
    "start": "1158730",
    "end": "1163860"
  },
  {
    "text": "demon set will create one part per note for you and if you add or remove notes",
    "start": "1163860",
    "end": "1170460"
  },
  {
    "text": "from the cluster the paws will automatically be created or removed you",
    "start": "1170460",
    "end": "1177240"
  },
  {
    "text": "can also control you can also use note labels to control which parts which",
    "start": "1177240",
    "end": "1183030"
  },
  {
    "text": "notes to run my pod so how it works is that you put labels on the notes and you",
    "start": "1183030",
    "end": "1190530"
  },
  {
    "text": "tell the demon said that only run pods on the nose with these labels and demon",
    "start": "1190530",
    "end": "1198210"
  },
  {
    "text": "said we'll just do it for you nice times for another live demo for",
    "start": "1198210",
    "end": "1206400"
  },
  {
    "text": "demon set and in this diagram you can see that there's only one part per note",
    "start": "1206400",
    "end": "1215010"
  },
  {
    "text": "per worker node and that's created by demon set",
    "start": "1215010",
    "end": "1221870"
  },
  {
    "text": "so I'm going to watch the creation of pot on the bottom and on the top I'm",
    "start": "1225260",
    "end": "1234299"
  },
  {
    "text": "going to run the demo so I'm going to",
    "start": "1234299",
    "end": "1242909"
  },
  {
    "text": "create a demon set I just run some random image here because I don't care",
    "start": "1242909",
    "end": "1250340"
  },
  {
    "text": "so it's a simple demon so by default it should be running on all my nose so I",
    "start": "1250340",
    "end": "1259440"
  },
  {
    "text": "use Q control applied to apply this demon said yes so take a look at the",
    "start": "1259440",
    "end": "1271950"
  },
  {
    "text": "current note that I have in my cluster I have three nodes here so I should have",
    "start": "1271950",
    "end": "1277860"
  },
  {
    "text": "three pots and one on each node and yes",
    "start": "1277860",
    "end": "1285390"
  },
  {
    "text": "it's created on each node if you look closer they're all different",
    "start": "1285390",
    "end": "1293630"
  },
  {
    "text": "and now let's randomly pick a node to label it as color equal to red so look",
    "start": "1296179",
    "end": "1306809"
  },
  {
    "text": "at the no Legos now only the left node is being labeled as color equal to red",
    "start": "1306809",
    "end": "1316460"
  },
  {
    "text": "and now I create another demon set and I tell the demon said that I only want to",
    "start": "1317659",
    "end": "1324960"
  },
  {
    "text": "run a node with color equal to red label",
    "start": "1324960",
    "end": "1330000"
  },
  {
    "text": "and the name of the demon set is called red so I create a red demon set and see",
    "start": "1330000",
    "end": "1342059"
  },
  {
    "text": "what happens next",
    "start": "1342059",
    "end": "1345080"
  },
  {
    "text": "so there will be only one pod created on the nose that with the red no label so",
    "start": "1347560",
    "end": "1357460"
  },
  {
    "text": "that's the demo of demon sets and the left pattern is fetch sometimes you want",
    "start": "1357460",
    "end": "1366370"
  },
  {
    "start": "1361000",
    "end": "1443000"
  },
  {
    "text": "to run batch processing we're close and the controller for it is called job job",
    "start": "1366370",
    "end": "1375010"
  },
  {
    "text": "can create multiple parts running in parallel and you can tell the job how",
    "start": "1375010",
    "end": "1380620"
  },
  {
    "text": "many parts need to complete before the job is complete so when I say complete I",
    "start": "1380620",
    "end": "1387970"
  },
  {
    "text": "mean the part will run to completion and you will exit successfully so in the",
    "start": "1387970",
    "end": "1395830"
  },
  {
    "text": "previous three previous three patterns all your parts will be running always",
    "start": "1395830",
    "end": "1402970"
  },
  {
    "text": "and if there are skills they'll be restarted but and the parts in jobs are",
    "start": "1402970",
    "end": "1410130"
  },
  {
    "text": "different they will just run to completion because you you only want to run some some work and you don't want it",
    "start": "1410130",
    "end": "1419770"
  },
  {
    "text": "to be always running and so job is defined for the parallel processing of",
    "start": "1419770",
    "end": "1427770"
  },
  {
    "text": "related but independent work so for example it can be the emails that you",
    "start": "1427770",
    "end": "1434290"
  },
  {
    "text": "want to send or the render to the friends that you want to render so the",
    "start": "1434290",
    "end": "1444870"
  },
  {
    "start": "1443000",
    "end": "1624000"
  },
  {
    "text": "job will create some cause and I don't care where it's scheduled I can care how",
    "start": "1444870",
    "end": "1450970"
  },
  {
    "text": "many I just create whatever the spec tells me to and in this demo of job I'm",
    "start": "1450970",
    "end": "1464440"
  },
  {
    "text": "going to watch here and do the demo on",
    "start": "1464440",
    "end": "1469720"
  },
  {
    "text": "the top so on the bottom I'm going to watch I'm going to get the part",
    "start": "1469720",
    "end": "1477010"
  },
  {
    "text": "and the jobs and on the top I'll create a job so the",
    "start": "1477010",
    "end": "1484730"
  },
  {
    "text": "job here I specify parallels equal to",
    "start": "1484730",
    "end": "1490820"
  },
  {
    "text": "three that means I want to run at most three parts in parallel at the same time and",
    "start": "1490820",
    "end": "1497050"
  },
  {
    "text": "completion equal to ten means that a 110",
    "start": "1497050",
    "end": "1503930"
  },
  {
    "text": "has to be completed after before I say this job is complete and in here I run",
    "start": "1503930",
    "end": "1510890"
  },
  {
    "text": "command in my container the comment is it's a busy box and I just sleep for",
    "start": "1510890",
    "end": "1517400"
  },
  {
    "text": "five seconds and I exit zero or one randomly it simulates the the the work",
    "start": "1517400",
    "end": "1526070"
  },
  {
    "text": "items you you are processing so it may fail you may succeed and now I create a",
    "start": "1526070",
    "end": "1534170"
  },
  {
    "text": "job and down here you can see that there",
    "start": "1534170",
    "end": "1542300"
  },
  {
    "text": "will be always the three parts running at a same time and they're named by my",
    "start": "1542300",
    "end": "1547580"
  },
  {
    "text": "change because I might create some hot and they terminate and here I only list",
    "start": "1547580",
    "end": "1554150"
  },
  {
    "text": "the pasta that are running so the terminated part will be will not be here",
    "start": "1554150",
    "end": "1559280"
  },
  {
    "text": "so on you can easily see that there's always three running and down here",
    "start": "1559280",
    "end": "1565730"
  },
  {
    "text": "there's a list of the jobs here and you can see it's counting the currently",
    "start": "1565730",
    "end": "1571640"
  },
  {
    "text": "successful cause so it's about to",
    "start": "1571640",
    "end": "1577130"
  },
  {
    "text": "complete its way for the left part",
    "start": "1577130",
    "end": "1582550"
  },
  {
    "text": "now I have 10 successful pods and the",
    "start": "1586269",
    "end": "1594049"
  },
  {
    "text": "job is completed so there's no running",
    "start": "1594049",
    "end": "1600919"
  },
  {
    "text": "pods in a system anymore and let's take",
    "start": "1600919",
    "end": "1606320"
  },
  {
    "text": "two take a look at the terminated pod so some cross filled some succeed and if",
    "start": "1606320",
    "end": "1613850"
  },
  {
    "text": "you count there are 10 completed pod",
    "start": "1613850",
    "end": "1618730"
  },
  {
    "start": "1624000",
    "end": "1817000"
  },
  {
    "text": "so just to recap I showed you four",
    "start": "1624159",
    "end": "1629239"
  },
  {
    "text": "controllers for four different application patterns the stateless pattern you use deployment it gives you",
    "start": "1629239",
    "end": "1637330"
  },
  {
    "text": "availability you can scale and recover very easily and you can also update your",
    "start": "1637330",
    "end": "1643330"
  },
  {
    "text": "deployment at a controlled rate with our service outage for a stateful pattern",
    "start": "1643330",
    "end": "1649789"
  },
  {
    "text": "you use people sets it gives you consistency and it gives you unique and",
    "start": "1649789",
    "end": "1656919"
  },
  {
    "text": "sticky identity and persistent storage you can also deploy and skill and",
    "start": "1656919",
    "end": "1664399"
  },
  {
    "text": "terminate your faithful your a stapl set I mean your staple applications in order",
    "start": "1664399",
    "end": "1671980"
  },
  {
    "text": "for a diamond pattern you use diamond set it gives you one pot per node you",
    "start": "1671980",
    "end": "1679669"
  },
  {
    "text": "can also use no label to control which nodes should run my pod and the last",
    "start": "1679669",
    "end": "1687230"
  },
  {
    "text": "pattern is that a used job job will create parts that's running in parallel",
    "start": "1687230",
    "end": "1693559"
  },
  {
    "text": "and run to completion and I can say how many number of parts need to complete in this job so you need to remember that",
    "start": "1693559",
    "end": "1703249"
  },
  {
    "text": "this pattern are just are not the only way that you can run your workload in kubernetes they're just the most common",
    "start": "1703249",
    "end": "1710450"
  },
  {
    "text": "and most general patterns that are supported in kubernetes",
    "start": "1710450",
    "end": "1716500"
  },
  {
    "text": "and most of your work clothes my fall under the first two most of your web",
    "start": "1716500",
    "end": "1723010"
  },
  {
    "text": "application will be state based a less and you'll have database that staple",
    "start": "1723010",
    "end": "1731010"
  },
  {
    "text": "okay so now you may think that okay this Oh sounds great but where do I start",
    "start": "1731010",
    "end": "1738430"
  },
  {
    "text": "how do I move my workload to kubernetes and are there some examples the answer",
    "start": "1738430",
    "end": "1744820"
  },
  {
    "text": "is yes you can use home home is the kubernetes package package manager and",
    "start": "1744820",
    "end": "1751240"
  },
  {
    "text": "you can use helm to install pump charts there are curated applications for",
    "start": "1751240",
    "end": "1758080"
  },
  {
    "text": "kubernetes so you can install things like my sequel and Jenkins or linker D",
    "start": "1758080",
    "end": "1765760"
  },
  {
    "text": "you can just type film install Mexico and you're done another question you",
    "start": "1765760",
    "end": "1774370"
  },
  {
    "text": "might have is that um is this what if I need to run the other patterns in",
    "start": "1774370",
    "end": "1781870"
  },
  {
    "text": "kubernetes how can I customize so yes you can customize because kubernetes is",
    "start": "1781870",
    "end": "1788070"
  },
  {
    "text": "extensible kubernetes provides all the essential primitives for you to write",
    "start": "1788070",
    "end": "1795820"
  },
  {
    "text": "your own controllers or if you don't want to write your own controllers you can just use the controllers that others",
    "start": "1795820",
    "end": "1802480"
  },
  {
    "text": "write for you for example there's elastic search operator or a CD operator",
    "start": "1802480",
    "end": "1810480"
  },
  {
    "text": "you can take a look at very repo repo",
    "start": "1810480",
    "end": "1815880"
  },
  {
    "text": "so finally kubernetes is open its open for feedback open for ideas and open for",
    "start": "1816120",
    "end": "1824350"
  },
  {
    "text": "suggestions you can send a patch or just",
    "start": "1824350",
    "end": "1831130"
  },
  {
    "text": "file a pop report to the kubernetes repository or you can look at the",
    "start": "1831130",
    "end": "1837390"
  },
  {
    "text": "documents on the kubernetes settlement website and you can also send a patch to",
    "start": "1837390",
    "end": "1843130"
  },
  {
    "text": "it and you can chat with us on sweat and you can also chat with me on flex this",
    "start": "1843130",
    "end": "1849159"
  },
  {
    "text": "my handle and you can follow kubernetes for the latest kubernetes news on",
    "start": "1849159",
    "end": "1855700"
  },
  {
    "text": "twitter and you can also if you want to talk to me on twitter i'm also here so",
    "start": "1855700",
    "end": "1863099"
  },
  {
    "text": "if you have questions or just want to follow up you you are more than welcome",
    "start": "1863099",
    "end": "1868330"
  },
  {
    "text": "to fight me and again thank you so much for coming and I hope this talk is",
    "start": "1868330",
    "end": "1875409"
  },
  {
    "text": "useful to you and other questions hey",
    "start": "1875409",
    "end": "1890999"
  },
  {
    "text": "what",
    "start": "1916750",
    "end": "1919750"
  },
  {
    "text": "yes I can I can show you here",
    "start": "1926039",
    "end": "1935399"
  },
  {
    "text": "so the question is how the the purses persistent about volume of playful set",
    "start": "1940250",
    "end": "1947000"
  },
  {
    "text": "and I'm going to list the persistent",
    "start": "1947000",
    "end": "1954830"
  },
  {
    "text": "volume of the staple set in this and",
    "start": "1954830",
    "end": "1960140"
  },
  {
    "text": "space and I have three persistent volume here and they are attached each",
    "start": "1960140",
    "end": "1967179"
  },
  {
    "text": "persistent volume is attached to one each part each staple pot and I may make",
    "start": "1967179",
    "end": "1978380"
  },
  {
    "text": "it smaller so let me show you the the",
    "start": "1978380",
    "end": "1986200"
  },
  {
    "text": "zookeeper file oh it's too small",
    "start": "1986200",
    "end": "1991899"
  },
  {
    "text": "how do I make it [Music]",
    "start": "1992289",
    "end": "1999829"
  },
  {
    "text": "so okay I hope you can see this but in",
    "start": "2003040",
    "end": "2008920"
  },
  {
    "text": "here we use something called volume creme templates so you can just say it's",
    "start": "2008920",
    "end": "2019420"
  },
  {
    "text": "the dynamic provisioning feature in in the storage so you can just say I want a",
    "start": "2019420",
    "end": "2026650"
  },
  {
    "text": "storage you just give me and give me the class equal to anything and the staple",
    "start": "2026650",
    "end": "2033730"
  },
  {
    "text": "sets will just automatically get those persistent volume and those persistent",
    "start": "2033730",
    "end": "2040900"
  },
  {
    "text": "long swim in the staple pod so we can",
    "start": "2040900",
    "end": "2048340"
  },
  {
    "text": "also take a look at the pods okay so now",
    "start": "2048340",
    "end": "2056500"
  },
  {
    "text": "I get the for example the last part here oh and then space equals this",
    "start": "2056500",
    "end": "2073020"
  },
  {
    "text": "and now here you'll see it's doing a",
    "start": "2075119",
    "end": "2087750"
  },
  {
    "text": "persistent vol clamp and targeting this clamp and it's automatically created by",
    "start": "2087750",
    "end": "2093540"
  },
  {
    "text": "the staple that you don't need to say you don't need to create and specify manually so that's any other questions",
    "start": "2093540",
    "end": "2108260"
  },
  {
    "text": "okay thank you",
    "start": "2113620",
    "end": "2117060"
  }
]