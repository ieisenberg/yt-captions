[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "uh hello everyone I'm Zachary zaring and",
    "start": "240",
    "end": "2399"
  },
  {
    "text": "I'm here to present uh behind the",
    "start": "2399",
    "end": "3760"
  },
  {
    "text": "curtain multicluster uh backstage",
    "start": "3760",
    "end": "6000"
  },
  {
    "text": "deployments with giops crossplane and",
    "start": "6000",
    "end": "7680"
  },
  {
    "text": "more uh quick intro I'm a senior",
    "start": "7680",
    "end": "10040"
  },
  {
    "text": "software engineer at graffan Labs on the",
    "start": "10040",
    "end": "12200"
  },
  {
    "text": "platform team and there's a link to my",
    "start": "12200",
    "end": "14559"
  },
  {
    "text": "GitHub uh so let's get to",
    "start": "14559",
    "end": "17920"
  },
  {
    "text": "it uh show of hands who likes",
    "start": "18840",
    "end": "22439"
  },
  {
    "text": "Legos nice um so building a deployment",
    "start": "22439",
    "end": "25439"
  },
  {
    "text": "pipeline is a lot like building a BYOB",
    "start": "25439",
    "end": "27960"
  },
  {
    "text": "Lego Set uh but here it's your own",
    "start": "27960",
    "end": "30359"
  },
  {
    "text": "bricks uh today we're going to look at",
    "start": "30359",
    "end": "32640"
  },
  {
    "text": "how we at grafana Labs deploy and manage",
    "start": "32640",
    "end": "35040"
  },
  {
    "text": "our multicluster backstage instances and",
    "start": "35040",
    "end": "37960"
  },
  {
    "text": "try to help you Wrangle your deployments",
    "start": "37960",
    "end": "39600"
  },
  {
    "text": "using this",
    "start": "39600",
    "end": "41000"
  },
  {
    "text": "framework",
    "start": "41000",
    "end": "43360"
  },
  {
    "start": "43000",
    "end": "366000"
  },
  {
    "text": "uh uh so what does that look",
    "start": "43360",
    "end": "47200"
  },
  {
    "text": "like uh here's a quick overview of the",
    "start": "48399",
    "end": "50800"
  },
  {
    "text": "stages or layers of the pipeline we'll",
    "start": "50800",
    "end": "53039"
  },
  {
    "text": "step through each layer and break down",
    "start": "53039",
    "end": "54480"
  },
  {
    "text": "the bricks or components involved note",
    "start": "54480",
    "end": "57079"
  },
  {
    "text": "we'll be focusing on kues as our",
    "start": "57079",
    "end": "58800"
  },
  {
    "text": "workload orchestrator but I imagine",
    "start": "58800",
    "end": "60840"
  },
  {
    "text": "these principles would be applicable to",
    "start": "60840",
    "end": "62600"
  },
  {
    "text": "other platforms also since this is a",
    "start": "62600",
    "end": "65198"
  },
  {
    "text": "lightning talk we're going to go quick",
    "start": "65199",
    "end": "66960"
  },
  {
    "text": "uh a lot of these topics and tools could",
    "start": "66960",
    "end": "68960"
  },
  {
    "text": "span full talks themselves uh so we'll",
    "start": "68960",
    "end": "71240"
  },
  {
    "text": "just focus on uh the two L didn't read",
    "start": "71240",
    "end": "75758"
  },
  {
    "text": "versions uh first we start with our",
    "start": "77439",
    "end": "79520"
  },
  {
    "text": "repos and version control system on the",
    "start": "79520",
    "end": "81920"
  },
  {
    "text": "left we have the building blocks and on",
    "start": "81920",
    "end": "84040"
  },
  {
    "text": "the right we have our implementation of",
    "start": "84040",
    "end": "86000"
  },
  {
    "text": "each of those uh obviously you'll need a",
    "start": "86000",
    "end": "89079"
  },
  {
    "text": "VCS to inversion your code uh then we",
    "start": "89079",
    "end": "91720"
  },
  {
    "text": "have three repos uh the custom backstage",
    "start": "91720",
    "end": "94200"
  },
  {
    "text": "app configuration code and manifests at",
    "start": "94200",
    "end": "97079"
  },
  {
    "text": "grao Labs we use GitHub for repo",
    "start": "97079",
    "end": "99079"
  },
  {
    "text": "management and you could see our three",
    "start": "99079",
    "end": "101399"
  },
  {
    "text": "um corresponding",
    "start": "101399",
    "end": "104720"
  },
  {
    "text": "repos next we have the continuous",
    "start": "105799",
    "end": "108040"
  },
  {
    "text": "integration layer this is composed of",
    "start": "108040",
    "end": "110040"
  },
  {
    "text": "two bricks a CI platform and a CI",
    "start": "110040",
    "end": "112520"
  },
  {
    "text": "workflow for the backstage repository",
    "start": "112520",
    "end": "115200"
  },
  {
    "text": "the base of the workflow is simple build",
    "start": "115200",
    "end": "117719"
  },
  {
    "text": "test um push for for pushing images to a",
    "start": "117719",
    "end": "120920"
  },
  {
    "text": "registry and submit for submitting",
    "start": "120920",
    "end": "123200"
  },
  {
    "text": "continuous deployment workflow uh we'll",
    "start": "123200",
    "end": "125320"
  },
  {
    "text": "get more uh on that later it's important",
    "start": "125320",
    "end": "127799"
  },
  {
    "text": "to remember that backstage repo is meant",
    "start": "127799",
    "end": "129640"
  },
  {
    "text": "to be collaborative between uh many",
    "start": "129640",
    "end": "131879"
  },
  {
    "text": "teams so CI is very important to ensure",
    "start": "131879",
    "end": "134280"
  },
  {
    "text": "the main branch is always Deployable a",
    "start": "134280",
    "end": "136879"
  },
  {
    "text": "merge to main results in a built image",
    "start": "136879",
    "end": "138879"
  },
  {
    "text": "and will submit a workflow to deploy the",
    "start": "138879",
    "end": "141120"
  },
  {
    "text": "new tagged image in other words it",
    "start": "141120",
    "end": "143120"
  },
  {
    "text": "triggers continuous deployment at",
    "start": "143120",
    "end": "145360"
  },
  {
    "text": "grafana we use GitHub actions as our CI",
    "start": "145360",
    "end": "148560"
  },
  {
    "text": "system and have a an Associated GitHub",
    "start": "148560",
    "end": "151400"
  },
  {
    "text": "workflow for backstage a simple step",
    "start": "151400",
    "end": "154319"
  },
  {
    "text": "submits an Argo workflow um Argo",
    "start": "154319",
    "end": "157239"
  },
  {
    "text": "workflow a workflow orchestrator tool to",
    "start": "157239",
    "end": "159800"
  },
  {
    "text": "start the deployment process uh for the",
    "start": "159800",
    "end": "162040"
  },
  {
    "text": "newly minted tagged",
    "start": "162040",
    "end": "165159"
  },
  {
    "text": "image next we have the configuration",
    "start": "165560",
    "end": "167760"
  },
  {
    "text": "it's code which is the critical layer",
    "start": "167760",
    "end": "169519"
  },
  {
    "text": "for writing multicluster deployments uh",
    "start": "169519",
    "end": "171920"
  },
  {
    "text": "for wrangling multicluster deployments",
    "start": "171920",
    "end": "174239"
  },
  {
    "text": "we need code for generating the",
    "start": "174239",
    "end": "175560"
  },
  {
    "text": "infrastructure supporting our backstage",
    "start": "175560",
    "end": "177200"
  },
  {
    "text": "application and code for generating",
    "start": "177200",
    "end": "179239"
  },
  {
    "text": "kubernetes resources that leverage that",
    "start": "179239",
    "end": "181840"
  },
  {
    "text": "infrastructure these code bases should",
    "start": "181840",
    "end": "183840"
  },
  {
    "text": "generate all definitions and resources",
    "start": "183840",
    "end": "186760"
  },
  {
    "text": "backstage needs uh we use jonet to model",
    "start": "186760",
    "end": "189799"
  },
  {
    "text": "our deployments um in short jonet is a",
    "start": "189799",
    "end": "192599"
  },
  {
    "text": "data templating language um that",
    "start": "192599",
    "end": "195879"
  },
  {
    "text": "combined with some powerful Tooling in",
    "start": "195879",
    "end": "197360"
  },
  {
    "text": "libraries gives the ability to generate",
    "start": "197360",
    "end": "199680"
  },
  {
    "text": "complex and varied yaml manifest for",
    "start": "199680",
    "end": "202040"
  },
  {
    "text": "multiple clusters uh I won't go too deep",
    "start": "202040",
    "end": "204319"
  },
  {
    "text": "into crossplane either um but",
    "start": "204319",
    "end": "206280"
  },
  {
    "text": "essentially it allows us to find",
    "start": "206280",
    "end": "207680"
  },
  {
    "text": "infrastructure abstractions as custom",
    "start": "207680",
    "end": "209840"
  },
  {
    "text": "resource definitions so we can treat",
    "start": "209840",
    "end": "211920"
  },
  {
    "text": "persistent infrastructure the same as",
    "start": "211920",
    "end": "213680"
  },
  {
    "text": "kubernetes resources um with jonet",
    "start": "213680",
    "end": "216599"
  },
  {
    "text": "compare paired with crossplane we were",
    "start": "216599",
    "end": "219040"
  },
  {
    "text": "able to simplify all our as code into",
    "start": "219040",
    "end": "221439"
  },
  {
    "text": "one source and language uh so no more",
    "start": "221439",
    "end": "224360"
  },
  {
    "text": "terraform uh we use crossplane to define",
    "start": "224360",
    "end": "227599"
  },
  {
    "text": "buckets for Tech docs Define DNS mapping",
    "start": "227599",
    "end": "230560"
  },
  {
    "text": "for our container native load balancing",
    "start": "230560",
    "end": "232239"
  },
  {
    "text": "for ingresses on J GK and Define",
    "start": "232239",
    "end": "235439"
  },
  {
    "text": "postgress SQL instances including",
    "start": "235439",
    "end": "237439"
  },
  {
    "text": "configuring the database user accounts",
    "start": "237439",
    "end": "239519"
  },
  {
    "text": "and permissions since all of this is",
    "start": "239519",
    "end": "241799"
  },
  {
    "text": "defined in jonet we can easily reference",
    "start": "241799",
    "end": "244200"
  },
  {
    "text": "objects and provide tighter relationship",
    "start": "244200",
    "end": "246280"
  },
  {
    "text": "between deployment and Cloud",
    "start": "246280",
    "end": "249720"
  },
  {
    "text": "resources uh so that brings us to The",
    "start": "251319",
    "end": "254319"
  },
  {
    "text": "Continuous deployment layer uh where we",
    "start": "254319",
    "end": "256440"
  },
  {
    "text": "need to take those as code sources and",
    "start": "256440",
    "end": "258639"
  },
  {
    "text": "turn them into real kubernetes and",
    "start": "258639",
    "end": "261120"
  },
  {
    "text": "infrastructure resources y will manifest",
    "start": "261120",
    "end": "264320"
  },
  {
    "text": "uh so we'll need a brick for exporting",
    "start": "264320",
    "end": "266639"
  },
  {
    "text": "those manifests a brick for taking your",
    "start": "266639",
    "end": "269039"
  },
  {
    "text": "infrastructure declarations and",
    "start": "269039",
    "end": "270520"
  },
  {
    "text": "generating them if not done at the",
    "start": "270520",
    "end": "272160"
  },
  {
    "text": "reconciliation level which we'll cover",
    "start": "272160",
    "end": "273919"
  },
  {
    "text": "next um and a method for handling",
    "start": "273919",
    "end": "276720"
  },
  {
    "text": "updates for new version of the app note",
    "start": "276720",
    "end": "279039"
  },
  {
    "text": "that we don't have the automation uh",
    "start": "279039",
    "end": "281280"
  },
  {
    "text": "infrastructure automation block on the",
    "start": "281280",
    "end": "283000"
  },
  {
    "text": "right uh that's because of our use of",
    "start": "283000",
    "end": "285000"
  },
  {
    "text": "crossplane so we don't need to",
    "start": "285000",
    "end": "286880"
  },
  {
    "text": "explicitly automate infrastructure and",
    "start": "286880",
    "end": "289479"
  },
  {
    "text": "we can rely on crossplane abstractions",
    "start": "289479",
    "end": "291360"
  },
  {
    "text": "and providers so we use so we use tanka",
    "start": "291360",
    "end": "295720"
  },
  {
    "text": "to take jonet code and Export manifest",
    "start": "295720",
    "end": "298000"
  },
  {
    "text": "to our kubernetes manif F repository",
    "start": "298000",
    "end": "300680"
  },
  {
    "text": "which includes crossplane crds to manage",
    "start": "300680",
    "end": "303000"
  },
  {
    "text": "and provision Cloud resources and",
    "start": "303000",
    "end": "305479"
  },
  {
    "text": "finally we have an Argo workflows to",
    "start": "305479",
    "end": "308039"
  },
  {
    "text": "handle progressively rolling out new",
    "start": "308039",
    "end": "309639"
  },
  {
    "text": "images through our Devon prod clusters",
    "start": "309639",
    "end": "312400"
  },
  {
    "text": "uh health checks for backstage are",
    "start": "312400",
    "end": "313880"
  },
  {
    "text": "critical for rollouts as they let us",
    "start": "313880",
    "end": "315800"
  },
  {
    "text": "know um if it's safe to continue the",
    "start": "315800",
    "end": "317960"
  },
  {
    "text": "roll out and to put our r rollouts on",
    "start": "317960",
    "end": "320560"
  },
  {
    "text": "guard",
    "start": "320560",
    "end": "322800"
  },
  {
    "text": "rails um finally we have the",
    "start": "324600",
    "end": "326720"
  },
  {
    "text": "reconciliation layer um this is",
    "start": "326720",
    "end": "329000"
  },
  {
    "text": "comprised of a g Ops brick and an",
    "start": "329000",
    "end": "331000"
  },
  {
    "text": "infrastructure orchestrator brick which",
    "start": "331000",
    "end": "333039"
  },
  {
    "text": "is optional if you're provisioning your",
    "start": "333039",
    "end": "335160"
  },
  {
    "text": "infrastructure um earlier in the process",
    "start": "335160",
    "end": "337560"
  },
  {
    "text": "at the infrastructure automation stage",
    "start": "337560",
    "end": "339639"
  },
  {
    "text": "on the last side um we use flux as our",
    "start": "339639",
    "end": "343440"
  },
  {
    "text": "git Ops tool um and it uses kubernetes",
    "start": "343440",
    "end": "345720"
  },
  {
    "text": "manifest repository as a source then we",
    "start": "345720",
    "end": "349360"
  },
  {
    "text": "have crossplane comprised of multiple",
    "start": "349360",
    "end": "351240"
  },
  {
    "text": "providers which read in the crds that",
    "start": "351240",
    "end": "353600"
  },
  {
    "text": "have been applied by flux and manage",
    "start": "353600",
    "end": "355440"
  },
  {
    "text": "those Cloud resources in summary flux",
    "start": "355440",
    "end": "358840"
  },
  {
    "text": "reconciles Kate's manifest and",
    "start": "358840",
    "end": "360520"
  },
  {
    "text": "crossplane reconciles Cloud",
    "start": "360520",
    "end": "361960"
  },
  {
    "text": "infrastructure resources",
    "start": "361960",
    "end": "365199"
  },
  {
    "text": "declaratively um so let's see all the",
    "start": "365919",
    "end": "367880"
  },
  {
    "start": "366000",
    "end": "527000"
  },
  {
    "text": "bricks connected",
    "start": "367880",
    "end": "370919"
  },
  {
    "text": "together um this is the complete flow of",
    "start": "371680",
    "end": "373759"
  },
  {
    "text": "the pipeline here we can see how we go",
    "start": "373759",
    "end": "375680"
  },
  {
    "text": "from source code to running workloads in",
    "start": "375680",
    "end": "377680"
  },
  {
    "text": "clusters uh changes to the configuration",
    "start": "377680",
    "end": "380080"
  },
  {
    "text": "flow through the pipeline and are",
    "start": "380080",
    "end": "381360"
  },
  {
    "text": "propagated to running workload",
    "start": "381360",
    "end": "385120"
  },
  {
    "text": "configurations um some additional um",
    "start": "385280",
    "end": "388560"
  },
  {
    "text": "couple of additional take ways we had",
    "start": "388560",
    "end": "390000"
  },
  {
    "text": "while deploying backstage um it's",
    "start": "390000",
    "end": "391880"
  },
  {
    "text": "important to keep it simple and use the",
    "start": "391880",
    "end": "393400"
  },
  {
    "text": "path of lease resistance when it comes",
    "start": "393400",
    "end": "394919"
  },
  {
    "text": "to your platform um spoiler backstage is",
    "start": "394919",
    "end": "397880"
  },
  {
    "text": "De deployed like a lot of other",
    "start": "397880",
    "end": "399720"
  },
  {
    "text": "non-trivial apps so keeping it in line",
    "start": "399720",
    "end": "401759"
  },
  {
    "text": "with your existing pipeline really helps",
    "start": "401759",
    "end": "403880"
  },
  {
    "text": "in maintainability and understandability",
    "start": "403880",
    "end": "405960"
  },
  {
    "text": "from your engineering teams maintaining",
    "start": "405960",
    "end": "408319"
  },
  {
    "text": "backstage um also crossplane",
    "start": "408319",
    "end": "410639"
  },
  {
    "text": "abstractions are really great um we have",
    "start": "410639",
    "end": "413520"
  },
  {
    "text": "we have a really refined jonet tank",
    "start": "413520",
    "end": "415639"
  },
  {
    "text": "deployment pipeline um but had an",
    "start": "415639",
    "end": "417840"
  },
  {
    "text": "awkward not very well inte integrated",
    "start": "417840",
    "end": "419720"
  },
  {
    "text": "step with terraform to handle",
    "start": "419720",
    "end": "421520"
  },
  {
    "text": "infrastructure for applications um with",
    "start": "421520",
    "end": "423720"
  },
  {
    "text": "crossplane we could leverage that uh",
    "start": "423720",
    "end": "425840"
  },
  {
    "text": "refined Pipeline and have a closer",
    "start": "425840",
    "end": "427840"
  },
  {
    "text": "relationship between our deployment code",
    "start": "427840",
    "end": "430599"
  },
  {
    "text": "and",
    "start": "430599",
    "end": "432800"
  },
  {
    "text": "infrastructure um and thank you um",
    "start": "432800",
    "end": "436360"
  },
  {
    "text": "thanks for listening uh there's my email",
    "start": "436360",
    "end": "438000"
  },
  {
    "text": "for any questions or areas of",
    "start": "438000",
    "end": "439720"
  },
  {
    "text": "improvement on our uh processes uh here",
    "start": "439720",
    "end": "442440"
  },
  {
    "text": "at graan Labs we're just getting started",
    "start": "442440",
    "end": "444000"
  },
  {
    "text": "with backstage um so really eager to",
    "start": "444000",
    "end": "445960"
  },
  {
    "text": "learn more and you know see what works",
    "start": "445960",
    "end": "447960"
  },
  {
    "text": "for yall um",
    "start": "447960",
    "end": "450650"
  },
  {
    "text": "[Applause]",
    "start": "450650",
    "end": "458120"
  },
  {
    "text": "I don't know if there's questions yeah",
    "start": "458120",
    "end": "460000"
  },
  {
    "text": "folks there are questions yeah I guess",
    "start": "460000",
    "end": "461720"
  },
  {
    "text": "it's dangerous spot before like lunch so",
    "start": "461720",
    "end": "464360"
  },
  {
    "text": "yeah totally understand if people want",
    "start": "464360",
    "end": "466159"
  },
  {
    "text": "to uh yeah grab some snacks um but yeah",
    "start": "466159",
    "end": "469800"
  },
  {
    "text": "just um uh in case anybody has",
    "start": "469800",
    "end": "474918"
  },
  {
    "text": "questions ah there's",
    "start": "476159",
    "end": "478319"
  },
  {
    "text": "one",
    "start": "478319",
    "end": "481319"
  },
  {
    "text": "hi uh you used flux V2 but you used Argo",
    "start": "485879",
    "end": "489720"
  },
  {
    "text": "workflows as well why would you use flux",
    "start": "489720",
    "end": "491800"
  },
  {
    "text": "instead of Argo CD that seems like a",
    "start": "491800",
    "end": "494360"
  },
  {
    "text": "cool Choice yeah so we had flux",
    "start": "494360",
    "end": "496639"
  },
  {
    "text": "beforehand um so it was just like you",
    "start": "496639",
    "end": "499280"
  },
  {
    "text": "know we needed a tool to orchestrate",
    "start": "499280",
    "end": "501080"
  },
  {
    "text": "workflows and Argo work uh workflows is",
    "start": "501080",
    "end": "503280"
  },
  {
    "text": "a great tool for that um so you know",
    "start": "503280",
    "end": "506199"
  },
  {
    "text": "like if we see you know a nice benefit",
    "start": "506199",
    "end": "508159"
  },
  {
    "text": "that's worth the extra engineering",
    "start": "508159",
    "end": "509599"
  },
  {
    "text": "effort to migrate to Argo CD you know we",
    "start": "509599",
    "end": "511919"
  },
  {
    "text": "would totally use that but um you know",
    "start": "511919",
    "end": "513839"
  },
  {
    "text": "it's just how platforms are",
    "start": "513839",
    "end": "517680"
  },
  {
    "text": "built any other",
    "start": "518640",
    "end": "522159"
  },
  {
    "text": "questions so enjoy lunch thank you thank",
    "start": "522560",
    "end": "526839"
  },
  {
    "text": "you zakary",
    "start": "526839",
    "end": "529760"
  }
]