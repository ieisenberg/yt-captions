[
  {
    "text": "welcome to contain your enthusiasm for",
    "start": "880",
    "end": "2720"
  },
  {
    "text": "go",
    "start": "2720",
    "end": "3280"
  },
  {
    "text": "fast and simple go plus docker",
    "start": "3280",
    "end": "5279"
  },
  {
    "text": "development",
    "start": "5279",
    "end": "7759"
  },
  {
    "text": "as a matter of housekeeping you'll find",
    "start": "7759",
    "end": "9519"
  },
  {
    "text": "that this qr code will take you to these",
    "start": "9519",
    "end": "11519"
  },
  {
    "text": "slides",
    "start": "11519",
    "end": "12400"
  },
  {
    "text": "so if you'd like to actually go find the",
    "start": "12400",
    "end": "14160"
  },
  {
    "text": "original version of these slides",
    "start": "14160",
    "end": "15599"
  },
  {
    "text": "please follow this qr code",
    "start": "15599",
    "end": "18880"
  },
  {
    "text": "so go is an extremely pleasant language",
    "start": "18880",
    "end": "23439"
  },
  {
    "text": "its builds are fast",
    "start": "23439",
    "end": "26800"
  },
  {
    "text": "it makes testing very easy and also",
    "start": "26880",
    "end": "30000"
  },
  {
    "text": "fast and it makes debugging very easy",
    "start": "30000",
    "end": "33520"
  },
  {
    "text": "and there is a whole ecosystem of tools",
    "start": "33520",
    "end": "35360"
  },
  {
    "text": "to plug into the debugging",
    "start": "35360",
    "end": "36960"
  },
  {
    "text": "of go and then there's docker and docker",
    "start": "36960",
    "end": "41520"
  },
  {
    "text": "also makes development easy",
    "start": "41520",
    "end": "44320"
  },
  {
    "text": "it makes crossos work easy i can",
    "start": "44320",
    "end": "46640"
  },
  {
    "text": "literally start on my mac",
    "start": "46640",
    "end": "48399"
  },
  {
    "text": "laptop and use docker to gain access to",
    "start": "48399",
    "end": "51760"
  },
  {
    "text": "an ubuntu 2004 development environment",
    "start": "51760",
    "end": "55280"
  },
  {
    "text": "trivially in a single command line",
    "start": "55280",
    "end": "59600"
  },
  {
    "text": "and docker layer caching makes builds",
    "start": "59600",
    "end": "61680"
  },
  {
    "text": "fast so without docker layer caching i",
    "start": "61680",
    "end": "64559"
  },
  {
    "text": "have a project i work on from time to",
    "start": "64559",
    "end": "66159"
  },
  {
    "text": "time that takes 54 seconds to build",
    "start": "66159",
    "end": "70479"
  },
  {
    "text": "and with backer layer caching that comes",
    "start": "70560",
    "end": "72720"
  },
  {
    "text": "down to 0.5 seconds",
    "start": "72720",
    "end": "75280"
  },
  {
    "text": "so very nearly 100 x speed up",
    "start": "75280",
    "end": "79920"
  },
  {
    "text": "and so when we go to look at bringing go",
    "start": "81200",
    "end": "82640"
  },
  {
    "text": "and docker together there's some goals",
    "start": "82640",
    "end": "84320"
  },
  {
    "text": "we want to achieve",
    "start": "84320",
    "end": "85600"
  },
  {
    "text": "so first we want to take go code and",
    "start": "85600",
    "end": "87680"
  },
  {
    "text": "turn it into a go executable in a docker",
    "start": "87680",
    "end": "89439"
  },
  {
    "text": "container",
    "start": "89439",
    "end": "90640"
  },
  {
    "text": "this is actually not that hard but we'd",
    "start": "90640",
    "end": "93600"
  },
  {
    "text": "like to get",
    "start": "93600",
    "end": "94400"
  },
  {
    "text": "fast rebuilds and for reasons that we'll",
    "start": "94400",
    "end": "96400"
  },
  {
    "text": "go over here shortly",
    "start": "96400",
    "end": "97759"
  },
  {
    "text": "that is kind of hard when you bring go",
    "start": "97759",
    "end": "99840"
  },
  {
    "text": "and docker together",
    "start": "99840",
    "end": "102399"
  },
  {
    "text": "we'd like to be able to docker run tests",
    "start": "102399",
    "end": "105040"
  },
  {
    "text": "say for example and this is an example",
    "start": "105040",
    "end": "106880"
  },
  {
    "text": "from my own development life",
    "start": "106880",
    "end": "108320"
  },
  {
    "text": "you're working on a mac on an executable",
    "start": "108320",
    "end": "110720"
  },
  {
    "text": "that is really intended to run",
    "start": "110720",
    "end": "112640"
  },
  {
    "text": "analytics environment you obviously need",
    "start": "112640",
    "end": "115840"
  },
  {
    "text": "to be able to test that executable",
    "start": "115840",
    "end": "117680"
  },
  {
    "text": "but you're not going to test that",
    "start": "117680",
    "end": "118640"
  },
  {
    "text": "executable for a linux os on your mac",
    "start": "118640",
    "end": "121600"
  },
  {
    "text": "directly you need to be able to test it",
    "start": "121600",
    "end": "123920"
  },
  {
    "text": "in a linux-based docker container",
    "start": "123920",
    "end": "128560"
  },
  {
    "text": "you want to be able to debug all the",
    "start": "128560",
    "end": "130000"
  },
  {
    "text": "things as they are running",
    "start": "130000",
    "end": "132080"
  },
  {
    "text": "in your docker container",
    "start": "132080",
    "end": "135200"
  },
  {
    "text": "and you'd like to be able to hack on the",
    "start": "135599",
    "end": "137920"
  },
  {
    "text": "dependencies for the particular",
    "start": "137920",
    "end": "139280"
  },
  {
    "text": "executable you're working on",
    "start": "139280",
    "end": "140879"
  },
  {
    "text": "so one of the things about go is it's",
    "start": "140879",
    "end": "142800"
  },
  {
    "text": "beautifully modular language",
    "start": "142800",
    "end": "144480"
  },
  {
    "text": "and as you use it more and more you",
    "start": "144480",
    "end": "145840"
  },
  {
    "text": "discover that certain things are true",
    "start": "145840",
    "end": "147680"
  },
  {
    "text": "so one of the things you discover is it",
    "start": "147680",
    "end": "149280"
  },
  {
    "text": "really really wants you to have",
    "start": "149280",
    "end": "152080"
  },
  {
    "text": "one module per repo and then the next",
    "start": "152080",
    "end": "154480"
  },
  {
    "text": "thing you discover",
    "start": "154480",
    "end": "155360"
  },
  {
    "text": "is that it really kind of wants you to",
    "start": "155360",
    "end": "157680"
  },
  {
    "text": "have",
    "start": "157680",
    "end": "158640"
  },
  {
    "text": "one executable per repo and obviously",
    "start": "158640",
    "end": "160480"
  },
  {
    "text": "one executable for a docker container",
    "start": "160480",
    "end": "162239"
  },
  {
    "text": "now you can do things that differ from",
    "start": "162239",
    "end": "163760"
  },
  {
    "text": "this but that's very much the natural",
    "start": "163760",
    "end": "166400"
  },
  {
    "text": "way to work with go",
    "start": "166400",
    "end": "168319"
  },
  {
    "text": "and as you dig into that you quickly",
    "start": "168319",
    "end": "170480"
  },
  {
    "text": "discover that you find occasions where",
    "start": "170480",
    "end": "172239"
  },
  {
    "text": "there is some dependency you're working",
    "start": "172239",
    "end": "173680"
  },
  {
    "text": "on say you have an sdk",
    "start": "173680",
    "end": "175360"
  },
  {
    "text": "and you're working on an executable",
    "start": "175360",
    "end": "176959"
  },
  {
    "text": "where you'd like to hack on the sdk",
    "start": "176959",
    "end": "179680"
  },
  {
    "text": "and the executable at the same time and",
    "start": "179680",
    "end": "182400"
  },
  {
    "text": "so doing that in a world where",
    "start": "182400",
    "end": "183840"
  },
  {
    "text": "everything is running in your docker",
    "start": "183840",
    "end": "184959"
  },
  {
    "text": "container to give you the cross os",
    "start": "184959",
    "end": "186319"
  },
  {
    "text": "support that you're looking for",
    "start": "186319",
    "end": "187840"
  },
  {
    "text": "that's an interesting trick",
    "start": "187840",
    "end": "190879"
  },
  {
    "text": "and then the last thing is we'd like to",
    "start": "191440",
    "end": "192720"
  },
  {
    "text": "keep these things idiomatic both docker",
    "start": "192720",
    "end": "195120"
  },
  {
    "text": "and go have very powerful idioms for how",
    "start": "195120",
    "end": "197440"
  },
  {
    "text": "you work",
    "start": "197440",
    "end": "198239"
  },
  {
    "text": "they make end up being a big part of",
    "start": "198239",
    "end": "200159"
  },
  {
    "text": "what makes them",
    "start": "200159",
    "end": "201280"
  },
  {
    "text": "sort of very natural and pleasant",
    "start": "201280",
    "end": "203120"
  },
  {
    "text": "environments to work in",
    "start": "203120",
    "end": "204640"
  },
  {
    "text": "and so whatever it is that we do we'd",
    "start": "204640",
    "end": "206080"
  },
  {
    "text": "like to try and keep everything as",
    "start": "206080",
    "end": "207280"
  },
  {
    "text": "simple as possible",
    "start": "207280",
    "end": "209040"
  },
  {
    "text": "and try and see as close as possible to",
    "start": "209040",
    "end": "211120"
  },
  {
    "text": "the standard idioms",
    "start": "211120",
    "end": "212239"
  },
  {
    "text": "so we don't get out of control messes",
    "start": "212239",
    "end": "216080"
  },
  {
    "text": "but as you bring go and docker together",
    "start": "217440",
    "end": "219280"
  },
  {
    "text": "there are some rough spots",
    "start": "219280",
    "end": "222319"
  },
  {
    "text": "so the first one we'll talk about is",
    "start": "222319",
    "end": "224159"
  },
  {
    "text": "what i sort of refer to as cache",
    "start": "224159",
    "end": "225519"
  },
  {
    "text": "collision",
    "start": "225519",
    "end": "227680"
  },
  {
    "text": "so in go you have a couple of things",
    "start": "227680",
    "end": "229760"
  },
  {
    "text": "that go does to make your builds fast",
    "start": "229760",
    "end": "231360"
  },
  {
    "text": "that have to do with caching",
    "start": "231360",
    "end": "233360"
  },
  {
    "text": "so the first one is if i have some gomod",
    "start": "233360",
    "end": "235360"
  },
  {
    "text": "file where i've listed out the modules",
    "start": "235360",
    "end": "237040"
  },
  {
    "text": "that i depend on",
    "start": "237040",
    "end": "238000"
  },
  {
    "text": "as in this example when i go to do a",
    "start": "238000",
    "end": "240640"
  },
  {
    "text": "build",
    "start": "240640",
    "end": "241840"
  },
  {
    "text": "go will go ahead and download the source",
    "start": "241840",
    "end": "243920"
  },
  {
    "text": "code for all of those modules",
    "start": "243920",
    "end": "245840"
  },
  {
    "text": "and it will put them in its module",
    "start": "245840",
    "end": "247360"
  },
  {
    "text": "source cache which is in wherever your",
    "start": "247360",
    "end": "249519"
  },
  {
    "text": "go path is slash package",
    "start": "249519",
    "end": "251200"
  },
  {
    "text": "mod and so it will populate this source",
    "start": "251200",
    "end": "253439"
  },
  {
    "text": "cache so it doesn't have to redownload",
    "start": "253439",
    "end": "255200"
  },
  {
    "text": "those modules",
    "start": "255200",
    "end": "256400"
  },
  {
    "text": "every time you do a rebuild it only has",
    "start": "256400",
    "end": "258799"
  },
  {
    "text": "to download them",
    "start": "258799",
    "end": "259919"
  },
  {
    "text": "on an occasion in which you change",
    "start": "259919",
    "end": "261280"
  },
  {
    "text": "versions this not having to download",
    "start": "261280",
    "end": "263759"
  },
  {
    "text": "every time",
    "start": "263759",
    "end": "264639"
  },
  {
    "text": "radically speeds things up",
    "start": "264639",
    "end": "269360"
  },
  {
    "text": "and then you've got the binary cache so",
    "start": "269360",
    "end": "271440"
  },
  {
    "text": "this is an exercise i highly recommend",
    "start": "271440",
    "end": "273120"
  },
  {
    "text": "it's hugely instructive we're only going",
    "start": "273120",
    "end": "274639"
  },
  {
    "text": "to show you a little bit of it here",
    "start": "274639",
    "end": "276320"
  },
  {
    "text": "but if you type go build x",
    "start": "276320",
    "end": "279600"
  },
  {
    "text": "that will actually show you all the",
    "start": "279600",
    "end": "281360"
  },
  {
    "text": "things that are going on behind the",
    "start": "281360",
    "end": "282639"
  },
  {
    "text": "scenes with gobelt",
    "start": "282639",
    "end": "284080"
  },
  {
    "text": "it's fascinating and we're going to",
    "start": "284080",
    "end": "286479"
  },
  {
    "text": "focus on one particular thing that goes",
    "start": "286479",
    "end": "288160"
  },
  {
    "text": "on behind the scenes which is",
    "start": "288160",
    "end": "290240"
  },
  {
    "text": "you end up seeing commands that look",
    "start": "290240",
    "end": "291840"
  },
  {
    "text": "like this they are compile commands",
    "start": "291840",
    "end": "294160"
  },
  {
    "text": "you'll see",
    "start": "294160",
    "end": "294960"
  },
  {
    "text": "this compile command is for linux amd64",
    "start": "294960",
    "end": "299280"
  },
  {
    "text": "and then there's a whole bunch of other",
    "start": "299280",
    "end": "300320"
  },
  {
    "text": "flags that go with it and it's compiling",
    "start": "300320",
    "end": "303560"
  },
  {
    "text": "clientset.go now",
    "start": "303560",
    "end": "306560"
  },
  {
    "text": "one of the things that go does with this",
    "start": "306560",
    "end": "309520"
  },
  {
    "text": "is it builds a binary artifact cache",
    "start": "309520",
    "end": "312320"
  },
  {
    "text": "so it takes a hash of the command line",
    "start": "312320",
    "end": "315120"
  },
  {
    "text": "and the",
    "start": "315120",
    "end": "315680"
  },
  {
    "text": "file contents in client set dot go",
    "start": "315680",
    "end": "318720"
  },
  {
    "text": "and those together produce a hash file",
    "start": "318720",
    "end": "320960"
  },
  {
    "text": "name and that hash file name is the",
    "start": "320960",
    "end": "323280"
  },
  {
    "text": "resulting",
    "start": "323280",
    "end": "324560"
  },
  {
    "text": "binary artifact and what this means is",
    "start": "324560",
    "end": "327360"
  },
  {
    "text": "the next time we go to do a rebuild",
    "start": "327360",
    "end": "329840"
  },
  {
    "text": "if this source file has been built",
    "start": "329840",
    "end": "333120"
  },
  {
    "text": "before with the same arguments meaning",
    "start": "333120",
    "end": "335199"
  },
  {
    "text": "we're still building it for linux and we",
    "start": "335199",
    "end": "336800"
  },
  {
    "text": "haven't moved anything around",
    "start": "336800",
    "end": "338000"
  },
  {
    "text": "terribly much um then it doesn't have to",
    "start": "338000",
    "end": "341199"
  },
  {
    "text": "rebuild the binary file",
    "start": "341199",
    "end": "342639"
  },
  {
    "text": "it just pulls it from the cache and so",
    "start": "342639",
    "end": "344800"
  },
  {
    "text": "this can take something where you might",
    "start": "344800",
    "end": "346240"
  },
  {
    "text": "have",
    "start": "346240",
    "end": "347360"
  },
  {
    "text": "thousands of different things and",
    "start": "347360",
    "end": "348800"
  },
  {
    "text": "dependencies to build",
    "start": "348800",
    "end": "350560"
  },
  {
    "text": "to a situation where you just have a",
    "start": "350560",
    "end": "352080"
  },
  {
    "text": "linking problem",
    "start": "352080",
    "end": "354800"
  },
  {
    "text": "now then you go look at docker and",
    "start": "356240",
    "end": "357600"
  },
  {
    "text": "docker also does caching caching is",
    "start": "357600",
    "end": "359440"
  },
  {
    "text": "awesome",
    "start": "359440",
    "end": "360240"
  },
  {
    "text": "so if you take sort of just a very",
    "start": "360240",
    "end": "361680"
  },
  {
    "text": "standard docker file here",
    "start": "361680",
    "end": "363840"
  },
  {
    "text": "you know from golang you know 1.15.3",
    "start": "363840",
    "end": "366720"
  },
  {
    "text": "alpine 3.12",
    "start": "366720",
    "end": "368240"
  },
  {
    "text": "so you've got a container you set a work",
    "start": "368240",
    "end": "370240"
  },
  {
    "text": "directory you copy your source code in",
    "start": "370240",
    "end": "372319"
  },
  {
    "text": "dot to dot you do a go build right super",
    "start": "372319",
    "end": "375600"
  },
  {
    "text": "straight forward",
    "start": "375600",
    "end": "377759"
  },
  {
    "text": "so docker will go through this in steps",
    "start": "377759",
    "end": "380080"
  },
  {
    "text": "building layers as it goes so the first",
    "start": "380080",
    "end": "381759"
  },
  {
    "text": "step it just goes and gets you the",
    "start": "381759",
    "end": "383280"
  },
  {
    "text": "original container you're based on",
    "start": "383280",
    "end": "385199"
  },
  {
    "text": "second step it will change the build",
    "start": "385199",
    "end": "386639"
  },
  {
    "text": "directory to the work directory to build",
    "start": "386639",
    "end": "389600"
  },
  {
    "text": "third step it copies your source code in",
    "start": "389600",
    "end": "391520"
  },
  {
    "text": "as an additional layer",
    "start": "391520",
    "end": "393600"
  },
  {
    "text": "and then the fourth step it actually",
    "start": "393600",
    "end": "394720"
  },
  {
    "text": "runs the build and the point of this is",
    "start": "394720",
    "end": "396800"
  },
  {
    "text": "at each layer it's updating the contents",
    "start": "396800",
    "end": "398960"
  },
  {
    "text": "and overlaying the contents of what came",
    "start": "398960",
    "end": "400880"
  },
  {
    "text": "before",
    "start": "400880",
    "end": "402720"
  },
  {
    "text": "so if i do a docker rebuild some magical",
    "start": "402720",
    "end": "404800"
  },
  {
    "text": "things happen so the first thing is",
    "start": "404800",
    "end": "406479"
  },
  {
    "text": "obviously it's the same container as",
    "start": "406479",
    "end": "408560"
  },
  {
    "text": "before so no real work to do there for",
    "start": "408560",
    "end": "410240"
  },
  {
    "text": "step one",
    "start": "410240",
    "end": "411599"
  },
  {
    "text": "for step two it can actually use the",
    "start": "411599",
    "end": "413759"
  },
  {
    "text": "cache",
    "start": "413759",
    "end": "414720"
  },
  {
    "text": "so resetting the build directory not a",
    "start": "414720",
    "end": "416560"
  },
  {
    "text": "big deal",
    "start": "416560",
    "end": "418319"
  },
  {
    "text": "for step three if the source code that",
    "start": "418319",
    "end": "420400"
  },
  {
    "text": "i'm copying in",
    "start": "420400",
    "end": "421360"
  },
  {
    "text": "is the same source code that i was",
    "start": "421360",
    "end": "422720"
  },
  {
    "text": "copying in before",
    "start": "422720",
    "end": "424560"
  },
  {
    "text": "then it can literally cache this layer",
    "start": "424560",
    "end": "426720"
  },
  {
    "text": "so it doesn't have to reproduce a new",
    "start": "426720",
    "end": "428240"
  },
  {
    "text": "layer you can use the what it's got",
    "start": "428240",
    "end": "430479"
  },
  {
    "text": "and because it is caching that layer",
    "start": "430479",
    "end": "432960"
  },
  {
    "text": "when it goes to run",
    "start": "432960",
    "end": "434000"
  },
  {
    "text": "go build it can use the cached results",
    "start": "434000",
    "end": "437440"
  },
  {
    "text": "of that last go build because the source",
    "start": "437440",
    "end": "439199"
  },
  {
    "text": "code hasn't changed",
    "start": "439199",
    "end": "441360"
  },
  {
    "text": "and the result of this is that you get a",
    "start": "441360",
    "end": "444240"
  },
  {
    "text": "very very fast rebuild that sort of 0.5",
    "start": "444240",
    "end": "446400"
  },
  {
    "text": "versus 54 second case that i showed you",
    "start": "446400",
    "end": "449599"
  },
  {
    "text": "so pure rebuilds are very fast but what",
    "start": "449599",
    "end": "452560"
  },
  {
    "text": "happens if you do a docker rebuild with",
    "start": "452560",
    "end": "454319"
  },
  {
    "text": "a source file change",
    "start": "454319",
    "end": "456880"
  },
  {
    "text": "so again we start with exactly the same",
    "start": "456880",
    "end": "458960"
  },
  {
    "text": "docker file but we changed one source",
    "start": "458960",
    "end": "460880"
  },
  {
    "text": "file from last time",
    "start": "460880",
    "end": "462400"
  },
  {
    "text": "so we still use exactly the same step",
    "start": "462400",
    "end": "464479"
  },
  {
    "text": "one image",
    "start": "464479",
    "end": "465680"
  },
  {
    "text": "again we can still pull from the cache",
    "start": "465680",
    "end": "467520"
  },
  {
    "text": "the work directory being set",
    "start": "467520",
    "end": "470400"
  },
  {
    "text": "but when we go to copy in the source",
    "start": "470400",
    "end": "472240"
  },
  {
    "text": "code",
    "start": "472240",
    "end": "473440"
  },
  {
    "text": "what we discover is what we had last",
    "start": "473440",
    "end": "475440"
  },
  {
    "text": "time the 63 dd layer um",
    "start": "475440",
    "end": "478080"
  },
  {
    "text": "that's no longer valid because the",
    "start": "478080",
    "end": "479599"
  },
  {
    "text": "source code is different so we've had a",
    "start": "479599",
    "end": "481599"
  },
  {
    "text": "cache in validation on this layer",
    "start": "481599",
    "end": "483680"
  },
  {
    "text": "and because of that cache and validation",
    "start": "483680",
    "end": "486160"
  },
  {
    "text": "we go to do",
    "start": "486160",
    "end": "486960"
  },
  {
    "text": "step 4 which is running go build we",
    "start": "486960",
    "end": "489840"
  },
  {
    "text": "can't reuse the cached entry from the",
    "start": "489840",
    "end": "492400"
  },
  {
    "text": "layer last time that's also invalidated",
    "start": "492400",
    "end": "494639"
  },
  {
    "text": "once the layer's been invalidated",
    "start": "494639",
    "end": "496160"
  },
  {
    "text": "everything that follows it is",
    "start": "496160",
    "end": "497280"
  },
  {
    "text": "invalidated in the cache",
    "start": "497280",
    "end": "499039"
  },
  {
    "text": "and so we have to go and redo this work",
    "start": "499039",
    "end": "502720"
  },
  {
    "text": "now let's sort of look at what",
    "start": "503360",
    "end": "504960"
  },
  {
    "text": "consequences this has",
    "start": "504960",
    "end": "506400"
  },
  {
    "text": "for a go build right so i'm going to",
    "start": "506400",
    "end": "508720"
  },
  {
    "text": "skip over step one and two because",
    "start": "508720",
    "end": "510080"
  },
  {
    "text": "they're",
    "start": "510080",
    "end": "510479"
  },
  {
    "text": "frankly extremely boring and go straight",
    "start": "510479",
    "end": "512880"
  },
  {
    "text": "to the copying the source right so you",
    "start": "512880",
    "end": "514880"
  },
  {
    "text": "copy the source in",
    "start": "514880",
    "end": "516159"
  },
  {
    "text": "and of course that will update the go",
    "start": "516159",
    "end": "517839"
  },
  {
    "text": "source in that layer",
    "start": "517839",
    "end": "520320"
  },
  {
    "text": "now but when you go to go build a couple",
    "start": "520320",
    "end": "522240"
  },
  {
    "text": "of things happen here so first is",
    "start": "522240",
    "end": "524240"
  },
  {
    "text": "it goes and does the download to",
    "start": "524240",
    "end": "525600"
  },
  {
    "text": "construct your source cache",
    "start": "525600",
    "end": "528160"
  },
  {
    "text": "um and so it'll download all the modules",
    "start": "528160",
    "end": "530160"
  },
  {
    "text": "at this step every time that you have a",
    "start": "530160",
    "end": "532160"
  },
  {
    "text": "source code change",
    "start": "532160",
    "end": "534080"
  },
  {
    "text": "and then it also ends up as part of",
    "start": "534080",
    "end": "535839"
  },
  {
    "text": "building building the binary cache",
    "start": "535839",
    "end": "539279"
  },
  {
    "text": "so again for a one line source change",
    "start": "539600",
    "end": "541839"
  },
  {
    "text": "what does this really mean for us",
    "start": "541839",
    "end": "543920"
  },
  {
    "text": "what it means is that your go source",
    "start": "543920",
    "end": "546880"
  },
  {
    "text": "comes in it invalidates the cache",
    "start": "546880",
    "end": "548800"
  },
  {
    "text": "because it's different source code and",
    "start": "548800",
    "end": "551120"
  },
  {
    "text": "that means that it invalidates",
    "start": "551120",
    "end": "553279"
  },
  {
    "text": "the docker cache for the build go build",
    "start": "553279",
    "end": "556320"
  },
  {
    "text": "line",
    "start": "556320",
    "end": "557200"
  },
  {
    "text": "which means you can't use the module",
    "start": "557200",
    "end": "558880"
  },
  {
    "text": "source cache you've got to redownload",
    "start": "558880",
    "end": "560480"
  },
  {
    "text": "everything",
    "start": "560480",
    "end": "561200"
  },
  {
    "text": "even though that may not have changed at",
    "start": "561200",
    "end": "563600"
  },
  {
    "text": "all",
    "start": "563600",
    "end": "564480"
  },
  {
    "text": "um and your go binary cache also has to",
    "start": "564480",
    "end": "567279"
  },
  {
    "text": "be completely rebuilt",
    "start": "567279",
    "end": "568560"
  },
  {
    "text": "even though that hasn't changed at all",
    "start": "568560",
    "end": "570800"
  },
  {
    "text": "and so we have this mismatch between how",
    "start": "570800",
    "end": "572880"
  },
  {
    "text": "go cache is to go fast",
    "start": "572880",
    "end": "574480"
  },
  {
    "text": "and how darker caches to go fast and",
    "start": "574480",
    "end": "576959"
  },
  {
    "text": "that mismatch",
    "start": "576959",
    "end": "578080"
  },
  {
    "text": "causes all kinds of headaches in",
    "start": "578080",
    "end": "580160"
  },
  {
    "text": "particular and this is sort of an",
    "start": "580160",
    "end": "581440"
  },
  {
    "text": "example from",
    "start": "581440",
    "end": "582720"
  },
  {
    "text": "a medium large command project that i'm",
    "start": "582720",
    "end": "584560"
  },
  {
    "text": "working on",
    "start": "584560",
    "end": "586000"
  },
  {
    "text": "where my one line change in a timed",
    "start": "586000",
    "end": "588800"
  },
  {
    "text": "docker build",
    "start": "588800",
    "end": "590080"
  },
  {
    "text": "um was 27 seconds if i used a",
    "start": "590080",
    "end": "593200"
  },
  {
    "text": "file a go file i'm sorry a docker file",
    "start": "593200",
    "end": "595360"
  },
  {
    "text": "that was like this",
    "start": "595360",
    "end": "596800"
  },
  {
    "text": "you know sad panda 27 seconds like it's",
    "start": "596800",
    "end": "599920"
  },
  {
    "text": "amazing how quickly that starts to wear",
    "start": "599920",
    "end": "601360"
  },
  {
    "text": "on your soul",
    "start": "601360",
    "end": "602320"
  },
  {
    "text": "every time you have to do a rebuild",
    "start": "602320",
    "end": "604160"
  },
  {
    "text": "because you need to build in linux and",
    "start": "604160",
    "end": "605600"
  },
  {
    "text": "run in linux",
    "start": "605600",
    "end": "606560"
  },
  {
    "text": "but you're running on a mac it's just",
    "start": "606560",
    "end": "608399"
  },
  {
    "text": "awful",
    "start": "608399",
    "end": "609920"
  },
  {
    "text": "so questions what can we do to make this",
    "start": "609920",
    "end": "611680"
  },
  {
    "text": "better now there's a partial solution",
    "start": "611680",
    "end": "613839"
  },
  {
    "text": "that's extremely popular and i'm",
    "start": "613839",
    "end": "615360"
  },
  {
    "text": "certain that you've seen it before",
    "start": "615360",
    "end": "616959"
  },
  {
    "text": "because it's used everywhere and if you",
    "start": "616959",
    "end": "618480"
  },
  {
    "text": "haven't been using it you really should",
    "start": "618480",
    "end": "619760"
  },
  {
    "text": "be using it",
    "start": "619760",
    "end": "620720"
  },
  {
    "text": "and that's to say look depend the",
    "start": "620720",
    "end": "622560"
  },
  {
    "text": "download of the the dependency sources",
    "start": "622560",
    "end": "624399"
  },
  {
    "text": "is a long time",
    "start": "624399",
    "end": "625680"
  },
  {
    "text": "so what if between the build step and",
    "start": "625680",
    "end": "628240"
  },
  {
    "text": "the copy the source code stuff in",
    "start": "628240",
    "end": "629920"
  },
  {
    "text": "we just copy the go mod and the go sum",
    "start": "629920",
    "end": "632240"
  },
  {
    "text": "files into",
    "start": "632240",
    "end": "633360"
  },
  {
    "text": "our docker container build right just",
    "start": "633360",
    "end": "635760"
  },
  {
    "text": "those two just the things that tell us",
    "start": "635760",
    "end": "637519"
  },
  {
    "text": "what are our dependencies and then we",
    "start": "637519",
    "end": "639920"
  },
  {
    "text": "run this handy command go mod download",
    "start": "639920",
    "end": "642399"
  },
  {
    "text": "which will go and download those",
    "start": "642399",
    "end": "644839"
  },
  {
    "text": "dependencies",
    "start": "644839",
    "end": "647040"
  },
  {
    "text": "so what does this look like in terms of",
    "start": "647040",
    "end": "648560"
  },
  {
    "text": "our caching behavior right",
    "start": "648560",
    "end": "650079"
  },
  {
    "text": "so it means that again we still have the",
    "start": "650079",
    "end": "652959"
  },
  {
    "text": "copy of the go mod and the ghost sun",
    "start": "652959",
    "end": "654880"
  },
  {
    "text": "happening just like we did before now",
    "start": "654880",
    "end": "658079"
  },
  {
    "text": "these haven't changed though because we",
    "start": "658079",
    "end": "659519"
  },
  {
    "text": "haven't changed our dependencies",
    "start": "659519",
    "end": "661279"
  },
  {
    "text": "and we still have the run go mod",
    "start": "661279",
    "end": "663200"
  },
  {
    "text": "download step but again this",
    "start": "663200",
    "end": "664480"
  },
  {
    "text": "also hasn't changed because our",
    "start": "664480",
    "end": "666240"
  },
  {
    "text": "dependencies haven't changed",
    "start": "666240",
    "end": "667760"
  },
  {
    "text": "so the source cache gets reused from the",
    "start": "667760",
    "end": "670720"
  },
  {
    "text": "step four layer",
    "start": "670720",
    "end": "673360"
  },
  {
    "text": "and then we copy our source code in and",
    "start": "673360",
    "end": "676160"
  },
  {
    "text": "do our binary build now",
    "start": "676160",
    "end": "678079"
  },
  {
    "text": "our source code getting copied in it's",
    "start": "678079",
    "end": "680240"
  },
  {
    "text": "different so that invalidates",
    "start": "680240",
    "end": "682079"
  },
  {
    "text": "our previous step layer for the source",
    "start": "682079",
    "end": "685360"
  },
  {
    "text": "code",
    "start": "685360",
    "end": "685760"
  },
  {
    "text": "for step five and that means we have to",
    "start": "685760",
    "end": "688000"
  },
  {
    "text": "redo step six",
    "start": "688000",
    "end": "689519"
  },
  {
    "text": "and redoing step six means we have to go",
    "start": "689519",
    "end": "691440"
  },
  {
    "text": "rebuild entirely the go binary cache",
    "start": "691440",
    "end": "694399"
  },
  {
    "text": "um even though we may have only changed",
    "start": "694399",
    "end": "696000"
  },
  {
    "text": "a single file right we may have just",
    "start": "696000",
    "end": "697839"
  },
  {
    "text": "changed",
    "start": "697839",
    "end": "698160"
  },
  {
    "text": "main.go but we've gotta rebuild all of",
    "start": "698160",
    "end": "700399"
  },
  {
    "text": "our dependencies",
    "start": "700399",
    "end": "701519"
  },
  {
    "text": "and everything in our project this is",
    "start": "701519",
    "end": "704000"
  },
  {
    "text": "kind of a drag",
    "start": "704000",
    "end": "706720"
  },
  {
    "text": "so in the medium large command project",
    "start": "708640",
    "end": "711279"
  },
  {
    "text": "i'm talking i've been",
    "start": "711279",
    "end": "712480"
  },
  {
    "text": "been playing with this one line change",
    "start": "712480",
    "end": "714959"
  },
  {
    "text": "now has a real time",
    "start": "714959",
    "end": "716240"
  },
  {
    "text": "of 11.85 seconds so way better than the",
    "start": "716240",
    "end": "718959"
  },
  {
    "text": "27 seconds we were seeing before but",
    "start": "718959",
    "end": "721200"
  },
  {
    "text": "this is sort of an emotionless panda",
    "start": "721200",
    "end": "723440"
  },
  {
    "text": "because it still starts wearing on your",
    "start": "723440",
    "end": "725200"
  },
  {
    "text": "soul",
    "start": "725200",
    "end": "727440"
  },
  {
    "text": "so here's a more complete solution so",
    "start": "728399",
    "end": "731519"
  },
  {
    "text": "there's a little handy tool that i've",
    "start": "731519",
    "end": "732959"
  },
  {
    "text": "actually",
    "start": "732959",
    "end": "733519"
  },
  {
    "text": "um put together called um imports gen",
    "start": "733519",
    "end": "737440"
  },
  {
    "text": "import stash gen and it's a go generator",
    "start": "737440",
    "end": "740639"
  },
  {
    "text": "it's very straightforward so the first",
    "start": "740639",
    "end": "742240"
  },
  {
    "text": "line here is just a very handy bash line",
    "start": "742240",
    "end": "745360"
  },
  {
    "text": "that goes and you know goes to a",
    "start": "745360",
    "end": "746800"
  },
  {
    "text": "temporary directory and",
    "start": "746800",
    "end": "748720"
  },
  {
    "text": "does the go get install for imports gen",
    "start": "748720",
    "end": "751760"
  },
  {
    "text": "this is a super handy way to install",
    "start": "751760",
    "end": "753360"
  },
  {
    "text": "things and make sure that you always",
    "start": "753360",
    "end": "754480"
  },
  {
    "text": "have the go imports gen that you want",
    "start": "754480",
    "end": "756000"
  },
  {
    "text": "here",
    "start": "756000",
    "end": "756720"
  },
  {
    "text": "and then it just runs go imports gen and",
    "start": "756720",
    "end": "759600"
  },
  {
    "text": "you may wonder why this is a",
    "start": "759600",
    "end": "760639"
  },
  {
    "text": "bachelorette and the reason is",
    "start": "760639",
    "end": "761839"
  },
  {
    "text": "because of the goose setting goose",
    "start": "761839",
    "end": "763440"
  },
  {
    "text": "equals linux because as it turns out for",
    "start": "763440",
    "end": "765120"
  },
  {
    "text": "my particular case",
    "start": "765120",
    "end": "766560"
  },
  {
    "text": "i'm building linux containers and so i",
    "start": "766560",
    "end": "769440"
  },
  {
    "text": "want",
    "start": "769440",
    "end": "769839"
  },
  {
    "text": "import gen running for linux even though",
    "start": "769839",
    "end": "771519"
  },
  {
    "text": "i'm running it on my mac",
    "start": "771519",
    "end": "773200"
  },
  {
    "text": "at this point now when i go type go",
    "start": "773200",
    "end": "776240"
  },
  {
    "text": "generate",
    "start": "776240",
    "end": "777040"
  },
  {
    "text": "it goes through and it generates a",
    "start": "777040",
    "end": "778480"
  },
  {
    "text": "source code file and it sticks it in",
    "start": "778480",
    "end": "780560"
  },
  {
    "text": "internal imports imports",
    "start": "780560",
    "end": "782399"
  },
  {
    "text": "underscore linux.gov because that's",
    "start": "782399",
    "end": "785120"
  },
  {
    "text": "where my gen file",
    "start": "785120",
    "end": "786000"
  },
  {
    "text": "was and the imports file literally just",
    "start": "786000",
    "end": "788959"
  },
  {
    "text": "takes",
    "start": "788959",
    "end": "789360"
  },
  {
    "text": "every package every single package in my",
    "start": "789360",
    "end": "792480"
  },
  {
    "text": "dependency tree",
    "start": "792480",
    "end": "794320"
  },
  {
    "text": "um and for my module my entire module",
    "start": "794320",
    "end": "797519"
  },
  {
    "text": "this includes everything i depend on",
    "start": "797519",
    "end": "799040"
  },
  {
    "text": "includes everything that anybody that i",
    "start": "799040",
    "end": "800800"
  },
  {
    "text": "depend on depends on",
    "start": "800800",
    "end": "802560"
  },
  {
    "text": "and it assembles an imports file and",
    "start": "802560",
    "end": "804800"
  },
  {
    "text": "with this little underscore",
    "start": "804800",
    "end": "806240"
  },
  {
    "text": "and what the underscore basically says",
    "start": "806240",
    "end": "807680"
  },
  {
    "text": "is hey i'd like you to import this which",
    "start": "807680",
    "end": "810720"
  },
  {
    "text": "from the point of view of the binary",
    "start": "810720",
    "end": "811920"
  },
  {
    "text": "cache means you need to build it um",
    "start": "811920",
    "end": "814399"
  },
  {
    "text": "but i'm not really going to use it in",
    "start": "814399",
    "end": "816000"
  },
  {
    "text": "this file there are lots of handy",
    "start": "816000",
    "end": "818160"
  },
  {
    "text": "reasons to do this often involving",
    "start": "818160",
    "end": "819519"
  },
  {
    "text": "manipulating the emit function",
    "start": "819519",
    "end": "821440"
  },
  {
    "text": "but for us what we're really doing here",
    "start": "821440",
    "end": "823120"
  },
  {
    "text": "is ensuring that stuff is getting built",
    "start": "823120",
    "end": "825279"
  },
  {
    "text": "even though we're not actually",
    "start": "825279",
    "end": "828639"
  },
  {
    "text": "using any of it in this particular file",
    "start": "828639",
    "end": "832560"
  },
  {
    "text": "so what does this end up doing right so",
    "start": "832639",
    "end": "834959"
  },
  {
    "text": "you're going to want to make a very",
    "start": "834959",
    "end": "836160"
  },
  {
    "text": "small change to your",
    "start": "836160",
    "end": "837519"
  },
  {
    "text": "docker file for the full solution which",
    "start": "837519",
    "end": "839680"
  },
  {
    "text": "is you still want to copy in the go mod",
    "start": "839680",
    "end": "841440"
  },
  {
    "text": "and the gosul",
    "start": "841440",
    "end": "842399"
  },
  {
    "text": "in step three but then for step four",
    "start": "842399",
    "end": "844959"
  },
  {
    "text": "rather than doing go mod download",
    "start": "844959",
    "end": "847040"
  },
  {
    "text": "you want to copy in your internal",
    "start": "847040",
    "end": "848880"
  },
  {
    "text": "imports directory which will copy in",
    "start": "848880",
    "end": "851199"
  },
  {
    "text": "that linux underscore imports.go file",
    "start": "851199",
    "end": "854880"
  },
  {
    "text": "and then you just run go build internal",
    "start": "854880",
    "end": "856639"
  },
  {
    "text": "imports",
    "start": "856639",
    "end": "857920"
  },
  {
    "text": "and that will go ahead and build just",
    "start": "857920",
    "end": "860079"
  },
  {
    "text": "that one directory",
    "start": "860079",
    "end": "862639"
  },
  {
    "text": "so what does this actually look like in",
    "start": "862639",
    "end": "864560"
  },
  {
    "text": "terms of what happens to our layer",
    "start": "864560",
    "end": "865839"
  },
  {
    "text": "caching",
    "start": "865839",
    "end": "866959"
  },
  {
    "text": "right so we we've copied in the go mod",
    "start": "866959",
    "end": "869040"
  },
  {
    "text": "still we got down to that step",
    "start": "869040",
    "end": "870240"
  },
  {
    "text": "everything is still in the same place",
    "start": "870240",
    "end": "872480"
  },
  {
    "text": "now when we copy the internal imports in",
    "start": "872480",
    "end": "874480"
  },
  {
    "text": "it just copies in the internal imports",
    "start": "874480",
    "end": "876000"
  },
  {
    "text": "directory now",
    "start": "876000",
    "end": "877199"
  },
  {
    "text": "this only changes when you rerun uh your",
    "start": "877199",
    "end": "879760"
  },
  {
    "text": "go gen",
    "start": "879760",
    "end": "880399"
  },
  {
    "text": "generate and again even if you were in",
    "start": "880399",
    "end": "882320"
  },
  {
    "text": "go generate every time it only actually",
    "start": "882320",
    "end": "884880"
  },
  {
    "text": "changes",
    "start": "884880",
    "end": "885839"
  },
  {
    "text": "when the packages you're using change",
    "start": "885839",
    "end": "888160"
  },
  {
    "text": "and you can choose when to run that",
    "start": "888160",
    "end": "890079"
  },
  {
    "text": "yourself",
    "start": "890079",
    "end": "892560"
  },
  {
    "text": "so that can be used from you know coming",
    "start": "892959",
    "end": "894959"
  },
  {
    "text": "brought in from cache",
    "start": "894959",
    "end": "896399"
  },
  {
    "text": "now then the next thing you do is you",
    "start": "896399",
    "end": "898240"
  },
  {
    "text": "run go build",
    "start": "898240",
    "end": "899600"
  },
  {
    "text": "internal imports now the interesting",
    "start": "899600",
    "end": "901519"
  },
  {
    "text": "thing about this is",
    "start": "901519",
    "end": "902959"
  },
  {
    "text": "um number one go build internal imports",
    "start": "902959",
    "end": "907680"
  },
  {
    "text": "because every package you use um",
    "start": "907680",
    "end": "911519"
  },
  {
    "text": "has its module downloaded your module",
    "start": "911519",
    "end": "914480"
  },
  {
    "text": "source cache is going to get updated",
    "start": "914480",
    "end": "917120"
  },
  {
    "text": "so it'll go through and and update your",
    "start": "917120",
    "end": "919040"
  },
  {
    "text": "module source cache",
    "start": "919040",
    "end": "920560"
  },
  {
    "text": "now i have the sneaking suspicion based",
    "start": "920560",
    "end": "923680"
  },
  {
    "text": "upon the behavior that i've seen",
    "start": "923680",
    "end": "925279"
  },
  {
    "text": "that it's actually incredibly smart",
    "start": "925279",
    "end": "926560"
  },
  {
    "text": "about this meaning that",
    "start": "926560",
    "end": "928959"
  },
  {
    "text": "it can tell a little bit um not at the",
    "start": "928959",
    "end": "931440"
  },
  {
    "text": "level of just module dependency but the",
    "start": "931440",
    "end": "933040"
  },
  {
    "text": "level of package dependency",
    "start": "933040",
    "end": "934560"
  },
  {
    "text": "because the number of files the number",
    "start": "934560",
    "end": "936639"
  },
  {
    "text": "of modules that i get downloaded through",
    "start": "936639",
    "end": "938160"
  },
  {
    "text": "this pattern",
    "start": "938160",
    "end": "939199"
  },
  {
    "text": "is substantially less and substantially",
    "start": "939199",
    "end": "941279"
  },
  {
    "text": "faster than what i get with gomod",
    "start": "941279",
    "end": "942959"
  },
  {
    "text": "download",
    "start": "942959",
    "end": "943759"
  },
  {
    "text": "so not only do you get your module",
    "start": "943759",
    "end": "945279"
  },
  {
    "text": "source cache but it's actually more",
    "start": "945279",
    "end": "947199"
  },
  {
    "text": "efficiently constructed than with the",
    "start": "947199",
    "end": "948720"
  },
  {
    "text": "partial solution",
    "start": "948720",
    "end": "950399"
  },
  {
    "text": "and then because we're running go build",
    "start": "950399",
    "end": "951920"
  },
  {
    "text": "internal imports it will go through and",
    "start": "951920",
    "end": "953600"
  },
  {
    "text": "construct the binary cache",
    "start": "953600",
    "end": "955440"
  },
  {
    "text": "for every package that is in your",
    "start": "955440",
    "end": "957920"
  },
  {
    "text": "dependency tree",
    "start": "957920",
    "end": "959120"
  },
  {
    "text": "so every package that is not immediately",
    "start": "959120",
    "end": "961199"
  },
  {
    "text": "part of your own source code",
    "start": "961199",
    "end": "963360"
  },
  {
    "text": "already has a binary artifact in the",
    "start": "963360",
    "end": "965040"
  },
  {
    "text": "cache in your container",
    "start": "965040",
    "end": "968079"
  },
  {
    "text": "and what that means is when you get down",
    "start": "968079",
    "end": "969600"
  },
  {
    "text": "to your one line change in your copy",
    "start": "969600",
    "end": "971839"
  },
  {
    "text": "file",
    "start": "971839",
    "end": "972880"
  },
  {
    "text": "your one line change to your source code",
    "start": "972880",
    "end": "976160"
  },
  {
    "text": "that one line change to your source code",
    "start": "976160",
    "end": "978959"
  },
  {
    "text": "is the only thing that invalidates the",
    "start": "978959",
    "end": "980639"
  },
  {
    "text": "cache",
    "start": "980639",
    "end": "981759"
  },
  {
    "text": "so even if you make a one-line change",
    "start": "981759",
    "end": "984079"
  },
  {
    "text": "you don't have to download your",
    "start": "984079",
    "end": "985040"
  },
  {
    "text": "dependencies anymore",
    "start": "985040",
    "end": "986480"
  },
  {
    "text": "you don't have to go and build all",
    "start": "986480",
    "end": "988399"
  },
  {
    "text": "rebuild all your dependencies again",
    "start": "988399",
    "end": "990480"
  },
  {
    "text": "you just have to rebuild your immediate",
    "start": "990480",
    "end": "992160"
  },
  {
    "text": "artifacts and then do your linking step",
    "start": "992160",
    "end": "994720"
  },
  {
    "text": "and so your go run run uh go build",
    "start": "994720",
    "end": "998800"
  },
  {
    "text": "is a much much faster step as a result",
    "start": "998800",
    "end": "1001680"
  },
  {
    "text": "to give you some idea of how much faster",
    "start": "1001680",
    "end": "1003680"
  },
  {
    "text": "uh again this is the same medium size",
    "start": "1003680",
    "end": "1005519"
  },
  {
    "text": "project uh one line change",
    "start": "1005519",
    "end": "1007839"
  },
  {
    "text": "um you know basically with the source",
    "start": "1007839",
    "end": "1010240"
  },
  {
    "text": "and bin cache being",
    "start": "1010240",
    "end": "1011519"
  },
  {
    "text": "preserved by the docker layer caching",
    "start": "1011519",
    "end": "1013040"
  },
  {
    "text": "this way it's down to a real time of",
    "start": "1013040",
    "end": "1015560"
  },
  {
    "text": "3.22 seconds",
    "start": "1015560",
    "end": "1017680"
  },
  {
    "text": "which is our happy panda over here",
    "start": "1017680",
    "end": "1021680"
  },
  {
    "text": "so if you look at this we go from a sad",
    "start": "1021759",
    "end": "1023920"
  },
  {
    "text": "panda at 27 seconds",
    "start": "1023920",
    "end": "1025600"
  },
  {
    "text": "then we get about a three-fold speed up",
    "start": "1025600",
    "end": "1027678"
  },
  {
    "text": "going down to a medium",
    "start": "1027679",
    "end": "1029199"
  },
  {
    "text": "scale panda at 11.85 seconds and finally",
    "start": "1029199",
    "end": "1032720"
  },
  {
    "text": "you get to a happy panda with another",
    "start": "1032720",
    "end": "1034240"
  },
  {
    "text": "three-fold speed up to 3.22 seconds",
    "start": "1034240",
    "end": "1037600"
  },
  {
    "text": "so there's a real difference here in",
    "start": "1037600",
    "end": "1039918"
  },
  {
    "text": "actually fully solving the",
    "start": "1039919",
    "end": "1041760"
  },
  {
    "text": "impedance mismatch between docker",
    "start": "1041760",
    "end": "1043600"
  },
  {
    "text": "caching and go caching",
    "start": "1043600",
    "end": "1046880"
  },
  {
    "text": "so just to review it's very simple you",
    "start": "1048880",
    "end": "1051679"
  },
  {
    "text": "just add an internal imports gen.go file",
    "start": "1051679",
    "end": "1055039"
  },
  {
    "text": "looking roughly like this you do go",
    "start": "1055039",
    "end": "1058400"
  },
  {
    "text": "generate",
    "start": "1058400",
    "end": "1059520"
  },
  {
    "text": "and then you add these two lines to your",
    "start": "1059520",
    "end": "1063280"
  },
  {
    "text": "docker file after the point where you",
    "start": "1063280",
    "end": "1065440"
  },
  {
    "text": "would add your copy go mod to go some",
    "start": "1065440",
    "end": "1068000"
  },
  {
    "text": "and you don't have to do your go mod",
    "start": "1068000",
    "end": "1069440"
  },
  {
    "text": "download anymore because the go build",
    "start": "1069440",
    "end": "1071200"
  },
  {
    "text": "internal imports takes care of that for",
    "start": "1071200",
    "end": "1072799"
  },
  {
    "text": "you",
    "start": "1072799",
    "end": "1074960"
  },
  {
    "text": "so this is how we achieve cache",
    "start": "1075919",
    "end": "1078840"
  },
  {
    "text": "harmonization",
    "start": "1078840",
    "end": "1081840"
  },
  {
    "text": "so next up you recall we were talking",
    "start": "1082320",
    "end": "1084000"
  },
  {
    "text": "about being able to test",
    "start": "1084000",
    "end": "1085520"
  },
  {
    "text": "so i don't know how everybody else works",
    "start": "1085520",
    "end": "1087120"
  },
  {
    "text": "i've never been a huge proponent of sort",
    "start": "1087120",
    "end": "1088799"
  },
  {
    "text": "of the classic test driven development",
    "start": "1088799",
    "end": "1090240"
  },
  {
    "text": "model",
    "start": "1090240",
    "end": "1090880"
  },
  {
    "text": "but what i can tell you happens",
    "start": "1090880",
    "end": "1091919"
  },
  {
    "text": "continuously in my life is i write code",
    "start": "1091919",
    "end": "1094000"
  },
  {
    "text": "i test code i write code i test code i",
    "start": "1094000",
    "end": "1096559"
  },
  {
    "text": "write code i test code",
    "start": "1096559",
    "end": "1098080"
  },
  {
    "text": "it's a constant back and forth and an",
    "start": "1098080",
    "end": "1099679"
  },
  {
    "text": "infinite loop for me",
    "start": "1099679",
    "end": "1101360"
  },
  {
    "text": "and so you want to be able to do this",
    "start": "1101360",
    "end": "1102720"
  },
  {
    "text": "and do this quickly",
    "start": "1102720",
    "end": "1105120"
  },
  {
    "text": "and so again a very small change to your",
    "start": "1105120",
    "end": "1107919"
  },
  {
    "text": "docker file",
    "start": "1107919",
    "end": "1109200"
  },
  {
    "text": "so first we switch to using multi-stage",
    "start": "1109200",
    "end": "1112160"
  },
  {
    "text": "builds in docker",
    "start": "1112160",
    "end": "1113760"
  },
  {
    "text": "and to do that we lay we name our first",
    "start": "1113760",
    "end": "1116240"
  },
  {
    "text": "stage",
    "start": "1116240",
    "end": "1117280"
  },
  {
    "text": "as build and then below",
    "start": "1117280",
    "end": "1121360"
  },
  {
    "text": "we say from build as test",
    "start": "1121360",
    "end": "1124559"
  },
  {
    "text": "then we add a command to run our tests",
    "start": "1124559",
    "end": "1127039"
  },
  {
    "text": "so whatever it is that we're building",
    "start": "1127039",
    "end": "1128320"
  },
  {
    "text": "whatever command that we're building we",
    "start": "1128320",
    "end": "1129760"
  },
  {
    "text": "build it here",
    "start": "1129760",
    "end": "1131840"
  },
  {
    "text": "and then we go through and we run our",
    "start": "1131840",
    "end": "1133200"
  },
  {
    "text": "tests here",
    "start": "1133200",
    "end": "1136080"
  },
  {
    "text": "and our tests here will run not as part",
    "start": "1136080",
    "end": "1138960"
  },
  {
    "text": "of the build",
    "start": "1138960",
    "end": "1140160"
  },
  {
    "text": "but literally when we go and run this",
    "start": "1140160",
    "end": "1142080"
  },
  {
    "text": "target in our",
    "start": "1142080",
    "end": "1143520"
  },
  {
    "text": "particular docker container and so you",
    "start": "1143520",
    "end": "1146320"
  },
  {
    "text": "can literally just say",
    "start": "1146320",
    "end": "1147360"
  },
  {
    "text": "docker run i highly recommend the dash",
    "start": "1147360",
    "end": "1149440"
  },
  {
    "text": "dash rm because it means that you don't",
    "start": "1149440",
    "end": "1151440"
  },
  {
    "text": "accumulate lots and lots of containers",
    "start": "1151440",
    "end": "1153600"
  },
  {
    "text": "that you don't really care about and",
    "start": "1153600",
    "end": "1155679"
  },
  {
    "text": "then this is a fun little line it",
    "start": "1155679",
    "end": "1157360"
  },
  {
    "text": "basically says look",
    "start": "1157360",
    "end": "1158720"
  },
  {
    "text": "the the idea of the container to run is",
    "start": "1158720",
    "end": "1160880"
  },
  {
    "text": "whatever the output is of docker built-q",
    "start": "1160880",
    "end": "1163919"
  },
  {
    "text": "which",
    "start": "1163919",
    "end": "1164320"
  },
  {
    "text": "again the dash queue option just instead",
    "start": "1164320",
    "end": "1166480"
  },
  {
    "text": "of showing you all the layers with",
    "start": "1166480",
    "end": "1167520"
  },
  {
    "text": "docker",
    "start": "1167520",
    "end": "1168080"
  },
  {
    "text": "it just outputs the final contain image",
    "start": "1168080",
    "end": "1170720"
  },
  {
    "text": "id",
    "start": "1170720",
    "end": "1171760"
  },
  {
    "text": "and then the dash target test here it",
    "start": "1171760",
    "end": "1174720"
  },
  {
    "text": "says",
    "start": "1174720",
    "end": "1175200"
  },
  {
    "text": "rather than going and getting to the end",
    "start": "1175200",
    "end": "1177280"
  },
  {
    "text": "now this happens to be in right now",
    "start": "1177280",
    "end": "1178640"
  },
  {
    "text": "we'll get back to that in a second",
    "start": "1178640",
    "end": "1180559"
  },
  {
    "text": "um only build your build is your final",
    "start": "1180559",
    "end": "1183200"
  },
  {
    "text": "piece the test",
    "start": "1183200",
    "end": "1184080"
  },
  {
    "text": "target which is this target right here",
    "start": "1184080",
    "end": "1186720"
  },
  {
    "text": "now the reason the target's going to be",
    "start": "1186720",
    "end": "1188000"
  },
  {
    "text": "important is",
    "start": "1188000",
    "end": "1188720"
  },
  {
    "text": "obviously you don't want the final",
    "start": "1188720",
    "end": "1191200"
  },
  {
    "text": "output of your container build",
    "start": "1191200",
    "end": "1192720"
  },
  {
    "text": "to be a thing that runs your tests and",
    "start": "1192720",
    "end": "1195120"
  },
  {
    "text": "so you're going",
    "start": "1195120",
    "end": "1197600"
  },
  {
    "text": "to anything and then i'll construct a",
    "start": "1201679",
    "end": "1204799"
  },
  {
    "text": "final",
    "start": "1204799",
    "end": "1205360"
  },
  {
    "text": "stage where i just copy whatever my",
    "start": "1205360",
    "end": "1208000"
  },
  {
    "text": "resulting",
    "start": "1208000",
    "end": "1210159"
  },
  {
    "text": "binary is from my build",
    "start": "1210159",
    "end": "1213280"
  },
  {
    "text": "stage to a resulting",
    "start": "1213280",
    "end": "1216640"
  },
  {
    "text": "runtime stage and give my entry point",
    "start": "1216640",
    "end": "1220480"
  },
  {
    "text": "so then with this docker file you can",
    "start": "1220480",
    "end": "1223200"
  },
  {
    "text": "say",
    "start": "1223200",
    "end": "1223679"
  },
  {
    "text": "docker run rm you know docker build",
    "start": "1223679",
    "end": "1226240"
  },
  {
    "text": "queue target test and that'll run your",
    "start": "1226240",
    "end": "1227840"
  },
  {
    "text": "testing",
    "start": "1227840",
    "end": "1228720"
  },
  {
    "text": "or you can just emit the target test and",
    "start": "1228720",
    "end": "1231039"
  },
  {
    "text": "it will go ahead and build",
    "start": "1231039",
    "end": "1232240"
  },
  {
    "text": "and run your actual application this",
    "start": "1232240",
    "end": "1235280"
  },
  {
    "text": "example a hello world application",
    "start": "1235280",
    "end": "1238880"
  },
  {
    "text": "so that that makes testing super super",
    "start": "1240159",
    "end": "1242320"
  },
  {
    "text": "easy",
    "start": "1242320",
    "end": "1243200"
  },
  {
    "text": "now the next thing that usually i run",
    "start": "1243200",
    "end": "1244640"
  },
  {
    "text": "into is debugging um",
    "start": "1244640",
    "end": "1246480"
  },
  {
    "text": "i i am i will confess i am a debugging",
    "start": "1246480",
    "end": "1249760"
  },
  {
    "text": "addict",
    "start": "1249760",
    "end": "1250559"
  },
  {
    "text": "um i use the debugger probably a bit too",
    "start": "1250559",
    "end": "1252400"
  },
  {
    "text": "much but it just makes it super easy to",
    "start": "1252400",
    "end": "1254159"
  },
  {
    "text": "tell what's going on in your code",
    "start": "1254159",
    "end": "1255840"
  },
  {
    "text": "and sort out and figure out a large",
    "start": "1255840",
    "end": "1257840"
  },
  {
    "text": "class of problems",
    "start": "1257840",
    "end": "1258960"
  },
  {
    "text": "and it eliminates the general tendency",
    "start": "1258960",
    "end": "1261520"
  },
  {
    "text": "to",
    "start": "1261520",
    "end": "1262000"
  },
  {
    "text": "over log your brains out which is going",
    "start": "1262000",
    "end": "1264159"
  },
  {
    "text": "to screw your life up in production",
    "start": "1264159",
    "end": "1267120"
  },
  {
    "text": "so bringing go in a docker container",
    "start": "1267120",
    "end": "1270559"
  },
  {
    "text": "together with debugging",
    "start": "1270559",
    "end": "1272080"
  },
  {
    "text": "you know this is something lots of",
    "start": "1272080",
    "end": "1273360"
  },
  {
    "text": "people have written about but nobody's",
    "start": "1273360",
    "end": "1274880"
  },
  {
    "text": "actually talked about how to make it",
    "start": "1274880",
    "end": "1276240"
  },
  {
    "text": "super easy it always ends up being this",
    "start": "1276240",
    "end": "1277679"
  },
  {
    "text": "bizarrely contrived thing",
    "start": "1277679",
    "end": "1279360"
  },
  {
    "text": "that typically involves radically",
    "start": "1279360",
    "end": "1281280"
  },
  {
    "text": "violating go idioms and it just",
    "start": "1281280",
    "end": "1283120"
  },
  {
    "text": "feels uncomfortable and so this is a",
    "start": "1283120",
    "end": "1285679"
  },
  {
    "text": "really simple way to do it right so the",
    "start": "1285679",
    "end": "1287679"
  },
  {
    "text": "first is",
    "start": "1287679",
    "end": "1288640"
  },
  {
    "text": "you add to your your build stage in your",
    "start": "1288640",
    "end": "1290559"
  },
  {
    "text": "docker file",
    "start": "1290559",
    "end": "1291919"
  },
  {
    "text": "just a real simple installation for dell",
    "start": "1291919",
    "end": "1293919"
  },
  {
    "text": "now we add this layer early",
    "start": "1293919",
    "end": "1295520"
  },
  {
    "text": "because this way you will always win at",
    "start": "1295520",
    "end": "1297440"
  },
  {
    "text": "the game of layer caching",
    "start": "1297440",
    "end": "1298960"
  },
  {
    "text": "so once you've built this once you never",
    "start": "1298960",
    "end": "1301200"
  },
  {
    "text": "have to go and get in build delve again",
    "start": "1301200",
    "end": "1303520"
  },
  {
    "text": "now for those who don't know delve is",
    "start": "1303520",
    "end": "1305280"
  },
  {
    "text": "the go debugger",
    "start": "1305280",
    "end": "1308240"
  },
  {
    "text": "so very simple thing to add there",
    "start": "1308240",
    "end": "1311360"
  },
  {
    "text": "and then the second little trick is in",
    "start": "1311360",
    "end": "1313440"
  },
  {
    "text": "whatever your executables main.go is",
    "start": "1313440",
    "end": "1316159"
  },
  {
    "text": "um you can use this little package debug",
    "start": "1316159",
    "end": "1319360"
  },
  {
    "text": "and this is the world's simplest tool it",
    "start": "1319360",
    "end": "1321760"
  },
  {
    "text": "literally when you call debug self",
    "start": "1321760",
    "end": "1323840"
  },
  {
    "text": "it looks for an environment variable um",
    "start": "1323840",
    "end": "1326240"
  },
  {
    "text": "that is",
    "start": "1326240",
    "end": "1327600"
  },
  {
    "text": "very very bespoke to this particular",
    "start": "1327600",
    "end": "1330159"
  },
  {
    "text": "executable",
    "start": "1330159",
    "end": "1331280"
  },
  {
    "text": "right so if you have many executables",
    "start": "1331280",
    "end": "1333120"
  },
  {
    "text": "running you can use different",
    "start": "1333120",
    "end": "1334159"
  },
  {
    "text": "environment variables",
    "start": "1334159",
    "end": "1335679"
  },
  {
    "text": "and that environment variable if it's",
    "start": "1335679",
    "end": "1337840"
  },
  {
    "text": "found",
    "start": "1337840",
    "end": "1338880"
  },
  {
    "text": "then debug self will simply exec delve",
    "start": "1338880",
    "end": "1342080"
  },
  {
    "text": "with the appropriate arguments to rerun",
    "start": "1342080",
    "end": "1343760"
  },
  {
    "text": "exactly this binary again and so you",
    "start": "1343760",
    "end": "1346559"
  },
  {
    "text": "fall into a debugging mode listening on",
    "start": "1346559",
    "end": "1348240"
  },
  {
    "text": "whatever port you specified",
    "start": "1348240",
    "end": "1350559"
  },
  {
    "text": "and if it doesn't then you hit something",
    "start": "1350559",
    "end": "1352640"
  },
  {
    "text": "that outputs the error now the error",
    "start": "1352640",
    "end": "1355120"
  },
  {
    "text": "generally speaking um you don't want to",
    "start": "1355120",
    "end": "1357120"
  },
  {
    "text": "stop over because the error among other",
    "start": "1357120",
    "end": "1358960"
  },
  {
    "text": "things will",
    "start": "1358960",
    "end": "1360000"
  },
  {
    "text": "when you run your docker run test",
    "start": "1360000",
    "end": "1363120"
  },
  {
    "text": "it will go through and say setting in v",
    "start": "1363120",
    "end": "1365520"
  },
  {
    "text": "variable",
    "start": "1365520",
    "end": "1366159"
  },
  {
    "text": "delve listen hello world to a valid dell",
    "start": "1366159",
    "end": "1369200"
  },
  {
    "text": "listen value will cause the dell",
    "start": "1369200",
    "end": "1370720"
  },
  {
    "text": "debugger to execute this binary and",
    "start": "1370720",
    "end": "1372240"
  },
  {
    "text": "listen as directed",
    "start": "1372240",
    "end": "1373760"
  },
  {
    "text": "so it tells you exactly which",
    "start": "1373760",
    "end": "1375760"
  },
  {
    "text": "environment variable",
    "start": "1375760",
    "end": "1377039"
  },
  {
    "text": "because you know this is presuming a",
    "start": "1377039",
    "end": "1378720"
  },
  {
    "text": "command named hello world if your",
    "start": "1378720",
    "end": "1380159"
  },
  {
    "text": "command was named forwarder it would be",
    "start": "1380159",
    "end": "1381600"
  },
  {
    "text": "delveless and forwarder",
    "start": "1381600",
    "end": "1384000"
  },
  {
    "text": "there are some things you can tweak to",
    "start": "1384000",
    "end": "1386320"
  },
  {
    "text": "have even more control over this if",
    "start": "1386320",
    "end": "1387679"
  },
  {
    "text": "you'd like but the out of the box is",
    "start": "1387679",
    "end": "1389120"
  },
  {
    "text": "pretty simple",
    "start": "1389120",
    "end": "1390320"
  },
  {
    "text": "and so if you come back and you run",
    "start": "1390320",
    "end": "1391919"
  },
  {
    "text": "docker run with the environment variable",
    "start": "1391919",
    "end": "1394480"
  },
  {
    "text": "delve listen hello world 50 000 make",
    "start": "1394480",
    "end": "1396960"
  },
  {
    "text": "sure you pass the ports through",
    "start": "1396960",
    "end": "1398720"
  },
  {
    "text": "then the result is that you will get",
    "start": "1398720",
    "end": "1401919"
  },
  {
    "text": "running in your container",
    "start": "1401919",
    "end": "1403760"
  },
  {
    "text": "your command executable listening at",
    "start": "1403760",
    "end": "1407679"
  },
  {
    "text": "port 50 000 which will be accessible",
    "start": "1407679",
    "end": "1410080"
  },
  {
    "text": "from your host my",
    "start": "1410080",
    "end": "1411600"
  },
  {
    "text": "mac laptop in my case and you can just",
    "start": "1411600",
    "end": "1414559"
  },
  {
    "text": "connect your debugger and go",
    "start": "1414559",
    "end": "1416159"
  },
  {
    "text": "so it makes it super super easy to go",
    "start": "1416159",
    "end": "1418799"
  },
  {
    "text": "through and debug these things without",
    "start": "1418799",
    "end": "1420880"
  },
  {
    "text": "having to do a very complicated setup",
    "start": "1420880",
    "end": "1422960"
  },
  {
    "text": "because everything you need is already",
    "start": "1422960",
    "end": "1424400"
  },
  {
    "text": "there and debug self is utterly harmless",
    "start": "1424400",
    "end": "1427279"
  },
  {
    "text": "if you don't actually want debugging to",
    "start": "1427279",
    "end": "1428960"
  },
  {
    "text": "be taking place",
    "start": "1428960",
    "end": "1431840"
  },
  {
    "text": "so the last thing is adding test",
    "start": "1434000",
    "end": "1435679"
  },
  {
    "text": "debugging and for test debugging this is",
    "start": "1435679",
    "end": "1438480"
  },
  {
    "text": "like",
    "start": "1438480",
    "end": "1438799"
  },
  {
    "text": "you've got your go test files sometimes",
    "start": "1438799",
    "end": "1440480"
  },
  {
    "text": "you want to attach your debugger to test",
    "start": "1440480",
    "end": "1441840"
  },
  {
    "text": "files",
    "start": "1441840",
    "end": "1442799"
  },
  {
    "text": "the thing we just showed you is how to",
    "start": "1442799",
    "end": "1444080"
  },
  {
    "text": "test it attach a debugger to",
    "start": "1444080",
    "end": "1445919"
  },
  {
    "text": "your running executable so in this case",
    "start": "1445919",
    "end": "1449039"
  },
  {
    "text": "you can just say look um we'll add one",
    "start": "1449039",
    "end": "1451440"
  },
  {
    "text": "more stage called debug",
    "start": "1451440",
    "end": "1453360"
  },
  {
    "text": "uh we'll derive it from test so it's",
    "start": "1453360",
    "end": "1455039"
  },
  {
    "text": "still you know got all the things the",
    "start": "1455039",
    "end": "1456720"
  },
  {
    "text": "test has in case we add more things",
    "start": "1456720",
    "end": "1459120"
  },
  {
    "text": "and we'll just have it run the command",
    "start": "1459120",
    "end": "1460960"
  },
  {
    "text": "dell test",
    "start": "1460960",
    "end": "1463120"
  },
  {
    "text": "instead of running the command go test",
    "start": "1463120",
    "end": "1465760"
  },
  {
    "text": "and it will file",
    "start": "1465760",
    "end": "1466799"
  },
  {
    "text": "up listening on port 40000 in this",
    "start": "1466799",
    "end": "1468640"
  },
  {
    "text": "example",
    "start": "1468640",
    "end": "1470559"
  },
  {
    "text": "and so this way if we run you know debug",
    "start": "1470559",
    "end": "1473600"
  },
  {
    "text": "you know to debug the test we can run",
    "start": "1473600",
    "end": "1474880"
  },
  {
    "text": "docker run pass through port 40 000",
    "start": "1474880",
    "end": "1477600"
  },
  {
    "text": "using a targeted debug my actual test",
    "start": "1477600",
    "end": "1480480"
  },
  {
    "text": "code will listen on port 40 000",
    "start": "1480480",
    "end": "1482640"
  },
  {
    "text": "and if we really want to go crazy and",
    "start": "1482640",
    "end": "1484080"
  },
  {
    "text": "debug both the tests and the executable",
    "start": "1484080",
    "end": "1487440"
  },
  {
    "text": "we can pass the environment variable for",
    "start": "1487440",
    "end": "1489120"
  },
  {
    "text": "the executable and forward its ports as",
    "start": "1489120",
    "end": "1491919"
  },
  {
    "text": "well as",
    "start": "1491919",
    "end": "1492720"
  },
  {
    "text": "the forwarding the ports for the test",
    "start": "1492720",
    "end": "1494799"
  },
  {
    "text": "code and use",
    "start": "1494799",
    "end": "1496159"
  },
  {
    "text": "target debug and so we sort of slowly",
    "start": "1496159",
    "end": "1498720"
  },
  {
    "text": "build up to the point where we can debug",
    "start": "1498720",
    "end": "1499919"
  },
  {
    "text": "absolutely everything in a very natural",
    "start": "1499919",
    "end": "1501440"
  },
  {
    "text": "way",
    "start": "1501440",
    "end": "1502880"
  },
  {
    "text": "and if you go back and look at the",
    "start": "1502880",
    "end": "1504240"
  },
  {
    "text": "docker file at the end of it all we",
    "start": "1504240",
    "end": "1506240"
  },
  {
    "text": "still come back to building a really",
    "start": "1506240",
    "end": "1507919"
  },
  {
    "text": "lean runtime",
    "start": "1507919",
    "end": "1510720"
  },
  {
    "text": "stage which just has our executable so",
    "start": "1510720",
    "end": "1513279"
  },
  {
    "text": "none of this additional machinery screws",
    "start": "1513279",
    "end": "1514960"
  },
  {
    "text": "up in any way the actual executable you",
    "start": "1514960",
    "end": "1516799"
  },
  {
    "text": "end up building at the end of time",
    "start": "1516799",
    "end": "1519919"
  },
  {
    "text": "which brings us to the last set of",
    "start": "1523840",
    "end": "1525039"
  },
  {
    "text": "things that you're going to end up",
    "start": "1525039",
    "end": "1526080"
  },
  {
    "text": "wanting to do at some point when you try",
    "start": "1526080",
    "end": "1527600"
  },
  {
    "text": "and bring go and docker together",
    "start": "1527600",
    "end": "1529440"
  },
  {
    "text": "um which is go is really good with",
    "start": "1529440",
    "end": "1532000"
  },
  {
    "text": "dependencies",
    "start": "1532000",
    "end": "1533120"
  },
  {
    "text": "uh go modules are super nice you can",
    "start": "1533120",
    "end": "1535360"
  },
  {
    "text": "specify what modules you depend on",
    "start": "1535360",
    "end": "1538000"
  },
  {
    "text": "and but inevitably when you do this you",
    "start": "1538000",
    "end": "1540720"
  },
  {
    "text": "find yourself in some sort of a weird",
    "start": "1540720",
    "end": "1542240"
  },
  {
    "text": "situation",
    "start": "1542240",
    "end": "1543840"
  },
  {
    "text": "where you want to go hack on one of them",
    "start": "1543840",
    "end": "1545840"
  },
  {
    "text": "right so in my example i've got a bunch",
    "start": "1545840",
    "end": "1547440"
  },
  {
    "text": "of commands that use a common sdk so i",
    "start": "1547440",
    "end": "1549440"
  },
  {
    "text": "often",
    "start": "1549440",
    "end": "1549840"
  },
  {
    "text": "want to go and hack on the sdk um",
    "start": "1549840",
    "end": "1553039"
  },
  {
    "text": "in this example you know we don't have",
    "start": "1553039",
    "end": "1554799"
  },
  {
    "text": "many dependencies because i didn't want",
    "start": "1554799",
    "end": "1556080"
  },
  {
    "text": "to be too confusing",
    "start": "1556080",
    "end": "1557440"
  },
  {
    "text": "but you can easily see where this should",
    "start": "1557440",
    "end": "1559120"
  },
  {
    "text": "be a thing you'd want to do",
    "start": "1559120",
    "end": "1561440"
  },
  {
    "text": "now let's talk first about what doesn't",
    "start": "1561440",
    "end": "1563039"
  },
  {
    "text": "work right obviously the thing that",
    "start": "1563039",
    "end": "1565520"
  },
  {
    "text": "you know often i end up doing when i'm",
    "start": "1565520",
    "end": "1567679"
  },
  {
    "text": "not working with docker which is saying",
    "start": "1567679",
    "end": "1569039"
  },
  {
    "text": "okay",
    "start": "1569039",
    "end": "1569679"
  },
  {
    "text": "you keep all make it repos in a",
    "start": "1569679",
    "end": "1570799"
  },
  {
    "text": "directory so i'll use the replace",
    "start": "1570799",
    "end": "1572400"
  },
  {
    "text": "directive",
    "start": "1572400",
    "end": "1573360"
  },
  {
    "text": "to point one of my dependencies at dot",
    "start": "1573360",
    "end": "1575279"
  },
  {
    "text": "dot a directory that contains",
    "start": "1575279",
    "end": "1578799"
  },
  {
    "text": "a checked out version of the repo for",
    "start": "1578799",
    "end": "1580320"
  },
  {
    "text": "that particular dependency",
    "start": "1580320",
    "end": "1582559"
  },
  {
    "text": "um now this obviously doesn't work and",
    "start": "1582559",
    "end": "1584960"
  },
  {
    "text": "you'll see why when you get to docker",
    "start": "1584960",
    "end": "1586720"
  },
  {
    "text": "because",
    "start": "1586720",
    "end": "1587919"
  },
  {
    "text": "saying copy.lagris is not going to work",
    "start": "1587919",
    "end": "1590960"
  },
  {
    "text": "because docker literally will not let",
    "start": "1590960",
    "end": "1593440"
  },
  {
    "text": "you",
    "start": "1593440",
    "end": "1594080"
  },
  {
    "text": "break out of the confines of the",
    "start": "1594080",
    "end": "1596080"
  },
  {
    "text": "directory in which it's run",
    "start": "1596080",
    "end": "1597760"
  },
  {
    "text": "now you can go play all kinds of crazy",
    "start": "1597760",
    "end": "1599600"
  },
  {
    "text": "games with moving your docker files to",
    "start": "1599600",
    "end": "1601279"
  },
  {
    "text": "different places",
    "start": "1601279",
    "end": "1602720"
  },
  {
    "text": "and so forth but this is really not",
    "start": "1602720",
    "end": "1604880"
  },
  {
    "text": "going to be a solution for your problem",
    "start": "1604880",
    "end": "1608240"
  },
  {
    "text": "but what does work and actually works",
    "start": "1608240",
    "end": "1609840"
  },
  {
    "text": "really nicely because it doesn't ever",
    "start": "1609840",
    "end": "1611279"
  },
  {
    "text": "involve having to edit your",
    "start": "1611279",
    "end": "1612559"
  },
  {
    "text": "um your docker files after you start",
    "start": "1612559",
    "end": "1614960"
  },
  {
    "text": "adopting it is",
    "start": "1614960",
    "end": "1616240"
  },
  {
    "text": "let's say that we keep a directory",
    "start": "1616240",
    "end": "1618000"
  },
  {
    "text": "called local and literally just drop a",
    "start": "1618000",
    "end": "1619760"
  },
  {
    "text": "git ignore in your local directory that",
    "start": "1619760",
    "end": "1621279"
  },
  {
    "text": "says look",
    "start": "1621279",
    "end": "1622240"
  },
  {
    "text": "nothing except a readme should ever be",
    "start": "1622240",
    "end": "1624000"
  },
  {
    "text": "checked into my dot local directory here",
    "start": "1624000",
    "end": "1626159"
  },
  {
    "text": "through the wonders of being able to get",
    "start": "1626159",
    "end": "1627760"
  },
  {
    "text": "ignores in subdirectories that works",
    "start": "1627760",
    "end": "1629200"
  },
  {
    "text": "nicely",
    "start": "1629200",
    "end": "1630320"
  },
  {
    "text": "and then anytime i have a dependency i",
    "start": "1630320",
    "end": "1631840"
  },
  {
    "text": "want to hack on i just check its repo",
    "start": "1631840",
    "end": "1633520"
  },
  {
    "text": "out into the dot local directory",
    "start": "1633520",
    "end": "1636000"
  },
  {
    "text": "now i can keep in my docker file a",
    "start": "1636000",
    "end": "1638720"
  },
  {
    "text": "directive to copy.local",
    "start": "1638720",
    "end": "1641760"
  },
  {
    "text": "to um dot local inside",
    "start": "1641760",
    "end": "1645520"
  },
  {
    "text": "my working directory um and this is",
    "start": "1645520",
    "end": "1648000"
  },
  {
    "text": "something you're going to want to do",
    "start": "1648000",
    "end": "1649600"
  },
  {
    "text": "after your go mod and go some but before",
    "start": "1649600",
    "end": "1652399"
  },
  {
    "text": "anything that actually builds anything",
    "start": "1652399",
    "end": "1654559"
  },
  {
    "text": "because if my go mod and go some have a",
    "start": "1654559",
    "end": "1656320"
  },
  {
    "text": "replace directly when i get down to my",
    "start": "1656320",
    "end": "1657919"
  },
  {
    "text": "go build internal imports",
    "start": "1657919",
    "end": "1659919"
  },
  {
    "text": "if the local directory is not present",
    "start": "1659919",
    "end": "1662480"
  },
  {
    "text": "then my go build internal imports is",
    "start": "1662480",
    "end": "1664480"
  },
  {
    "text": "going to fail horrifically",
    "start": "1664480",
    "end": "1667760"
  },
  {
    "text": "and so this one line change is",
    "start": "1667760",
    "end": "1669360"
  },
  {
    "text": "completely harmless in the event that i",
    "start": "1669360",
    "end": "1671279"
  },
  {
    "text": "don't actually have any dependencies in",
    "start": "1671279",
    "end": "1672720"
  },
  {
    "text": "dot local",
    "start": "1672720",
    "end": "1673600"
  },
  {
    "text": "because again who cares um but if i do",
    "start": "1673600",
    "end": "1676480"
  },
  {
    "text": "work on dependencies then it means",
    "start": "1676480",
    "end": "1677840"
  },
  {
    "text": "without having to change the docker file",
    "start": "1677840",
    "end": "1679520"
  },
  {
    "text": "and",
    "start": "1679520",
    "end": "1680000"
  },
  {
    "text": "oh gee that i remember to change it back",
    "start": "1680000",
    "end": "1681760"
  },
  {
    "text": "and all the other things no way now do i",
    "start": "1681760",
    "end": "1683679"
  },
  {
    "text": "have to build my ci to protect me",
    "start": "1683679",
    "end": "1684960"
  },
  {
    "text": "against somebody who changed the docker",
    "start": "1684960",
    "end": "1686240"
  },
  {
    "text": "file so they can do this",
    "start": "1686240",
    "end": "1687919"
  },
  {
    "text": "now you just have one standard place you",
    "start": "1687919",
    "end": "1689600"
  },
  {
    "text": "put it one standard way you deal with it",
    "start": "1689600",
    "end": "1691919"
  },
  {
    "text": "and you're done right anything that",
    "start": "1691919",
    "end": "1694080"
  },
  {
    "text": "you're doing locally is purely local",
    "start": "1694080",
    "end": "1697840"
  },
  {
    "text": "so we've actually gone through now and",
    "start": "1699200",
    "end": "1701279"
  },
  {
    "text": "met our goals right",
    "start": "1701279",
    "end": "1702559"
  },
  {
    "text": "so we've got the go code to a go",
    "start": "1702559",
    "end": "1704640"
  },
  {
    "text": "executable at a docker container",
    "start": "1704640",
    "end": "1706960"
  },
  {
    "text": "we've got fast rebuilds docker run test",
    "start": "1706960",
    "end": "1710240"
  },
  {
    "text": "is very easy and straightforward",
    "start": "1710240",
    "end": "1712480"
  },
  {
    "text": "debugging both the tests themselves and",
    "start": "1712480",
    "end": "1715360"
  },
  {
    "text": "the executable is very easy and",
    "start": "1715360",
    "end": "1716960"
  },
  {
    "text": "straightforward",
    "start": "1716960",
    "end": "1718480"
  },
  {
    "text": "we've got a clear way to hack",
    "start": "1718480",
    "end": "1719760"
  },
  {
    "text": "dependencies um that sort of is vaguely",
    "start": "1719760",
    "end": "1722080"
  },
  {
    "text": "go idiomatic",
    "start": "1722080",
    "end": "1723279"
  },
  {
    "text": "doctor idiomatic and again",
    "start": "1723279",
    "end": "1726720"
  },
  {
    "text": "the idioms are pretty much preserved",
    "start": "1726720",
    "end": "1728480"
  },
  {
    "text": "across the two different environments we",
    "start": "1728480",
    "end": "1730399"
  },
  {
    "text": "aren't doing anything super bizarre we",
    "start": "1730399",
    "end": "1731919"
  },
  {
    "text": "don't have to go and",
    "start": "1731919",
    "end": "1733360"
  },
  {
    "text": "edit things unnaturally at weird times",
    "start": "1733360",
    "end": "1738159"
  },
  {
    "text": "so thank you very much for attending the",
    "start": "1738159",
    "end": "1739440"
  },
  {
    "text": "talk uh again you will find that this is",
    "start": "1739440",
    "end": "1741440"
  },
  {
    "text": "the qr code for these slides",
    "start": "1741440",
    "end": "1743520"
  },
  {
    "text": "please feel free to go and look at them",
    "start": "1743520",
    "end": "1746320"
  },
  {
    "text": "they're in google slides",
    "start": "1746320",
    "end": "1747919"
  },
  {
    "text": "feel free to borrow from them um and",
    "start": "1747919",
    "end": "1750880"
  },
  {
    "text": "thank you so much for attending",
    "start": "1750880",
    "end": "1753840"
  }
]