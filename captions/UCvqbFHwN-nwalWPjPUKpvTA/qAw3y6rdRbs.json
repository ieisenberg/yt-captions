[
  {
    "text": "okay Um do do you want to let me know when uh when you feel like I the hangout",
    "start": "24240",
    "end": "31439"
  },
  {
    "text": "yeah I think almost all the people are in the Zoom meeting There's like only four people left there Sorry three people left there So um let me let me",
    "start": "33120",
    "end": "42719"
  },
  {
    "text": "tell",
    "start": "42719",
    "end": "44960"
  },
  {
    "text": "[Music] them Hey Ben I think you might want to give it just a couple minutes because I",
    "start": "52910",
    "end": "59680"
  },
  {
    "text": "know that not everybody's done Zoom so it might take a minute to download Yeah that sounds great Clint",
    "start": "59680",
    "end": "68519"
  },
  {
    "text": "Chris A I'm not sure if you're on the call",
    "start": "74640",
    "end": "80119"
  },
  {
    "text": "Yeah do you hear me yeah Um you might want to just kill the",
    "start": "81040",
    "end": "87000"
  },
  {
    "text": "um your link which has both the Zoom as well as the video call Yeah the video",
    "start": "87000",
    "end": "93759"
  },
  {
    "text": "call part of it Yeah I just I I tried to fix that and sent a note out to the mailing list Okay cool Is anyone uh",
    "start": "93759",
    "end": "99840"
  },
  {
    "text": "taking meeting meeting minutes by the way if not I could I could do that Oh that's great Thanks Chris Here I'll post",
    "start": "99840",
    "end": "105280"
  },
  {
    "text": "a link and we could all kind of collaborate One second Cool Thanks",
    "start": "105280",
    "end": "111680"
  },
  {
    "text": "Thank you [Music]",
    "start": "111680",
    "end": "118309"
  },
  {
    "text": "Okay So we'll we'll give it just one more minute I think and then um we'll uh we'll get going First one little slow",
    "start": "176239",
    "end": "184080"
  },
  {
    "text": "get everyone to get into Zoom and we'll get",
    "start": "184080",
    "end": "190080"
  },
  {
    "text": "going",
    "start": "193560",
    "end": "196560"
  },
  {
    "text": "Okay All right Um great So the this is the first um",
    "start": "200519",
    "end": "205760"
  },
  {
    "text": "CNCF storage working group meeting Um so thanks everyone who's able to join",
    "start": "205760",
    "end": "211640"
  },
  {
    "text": "Um so we just we got a pretty straightforward agenda today Um we're",
    "start": "211640",
    "end": "218280"
  },
  {
    "text": "gonna we're gonna first um look at um",
    "start": "218280",
    "end": "224560"
  },
  {
    "text": "uh just kind of who was able to join I'd just love us to do some quick introductions You know who you are um uh",
    "start": "224560",
    "end": "230799"
  },
  {
    "text": "and maybe briefly why why you're joining Um which can be as simple as just curious It's totally fine Um uh but I'd",
    "start": "230799",
    "end": "238480"
  },
  {
    "text": "love to just everyone to be able to understand a little bit about uh who's participating And then um we're going to",
    "start": "238480",
    "end": "244400"
  },
  {
    "text": "hear from Soden G um about the the work that's been going on to introduce a",
    "start": "244400",
    "end": "250560"
  },
  {
    "text": "container storage interface So they got a presentation that they're going to walk through um and then we can uh I",
    "start": "250560",
    "end": "257759"
  },
  {
    "text": "think we'll use a majority of the time both for doing that presentation then just discussion uh around that And then",
    "start": "257759",
    "end": "263919"
  },
  {
    "text": "I'd like to save at least a handful of minutes at the end um just to collect topics for future meetings things folks",
    "start": "263919",
    "end": "270000"
  },
  {
    "text": "would like to talk about Um all right So",
    "start": "270000",
    "end": "275800"
  },
  {
    "text": "uh I'm actually almost a Zoom noob",
    "start": "275800",
    "end": "281120"
  },
  {
    "text": "myself Um is there a good way to is there a good way to kind of go through people or um is it best to just have",
    "start": "281120",
    "end": "289520"
  },
  {
    "text": "people speak up there's a participants button at the bottom of the screen You click that to see the names if you want",
    "start": "289520",
    "end": "296320"
  },
  {
    "text": "Got it Okay Okay Um",
    "start": "296320",
    "end": "302479"
  },
  {
    "text": "so I can call people out Um why don't I do that why don't I",
    "start": "302520",
    "end": "308639"
  },
  {
    "text": "start with uh with you Mike mike uh from Docker Yeah Hey uh Mike Gellzer from",
    "start": "308639",
    "end": "314240"
  },
  {
    "text": "Docker Um I yeah so I'm uh ju just interested in uh I would say generally",
    "start": "314240",
    "end": "320080"
  },
  {
    "text": "Docker is interested in um this uh specification uh we're not sure yet",
    "start": "320080",
    "end": "326320"
  },
  {
    "text": "whether we want to implement in Docker or Moby which is our open source upstream uh but you know we have general",
    "start": "326320",
    "end": "332720"
  },
  {
    "text": "Docker interest Awesome Thanks Mike Um Sad",
    "start": "332720",
    "end": "339360"
  },
  {
    "text": "Hey guys my name is Sad I'm a software engineer at Google I work uh on the Kubernetes storage stack Uh and I'm here",
    "start": "339360",
    "end": "347039"
  },
  {
    "text": "with Michael Introduce yourself Hi Mike Rubin I also work on the Kubernetes storage stack here at Google",
    "start": "347039",
    "end": "354960"
  },
  {
    "text": "Thanks Todd Mike good to see you guys Um Adam yeah I'm Adam Litkkey I work at Red Hat",
    "start": "354960",
    "end": "361680"
  },
  {
    "text": "I'm working on uh virtualization and we're looking at providing storage for",
    "start": "361680",
    "end": "367680"
  },
  {
    "text": "virtual machines through um Kubernetes and um things like snapshots and all the",
    "start": "367680",
    "end": "373280"
  },
  {
    "text": "storage operations Great Um Clint",
    "start": "373280",
    "end": "381800"
  },
  {
    "text": "oh Clint you're muted Thank you Ben Clinton with LEMC uh we",
    "start": "382000",
    "end": "388880"
  },
  {
    "text": "focus on a lot of the storage aspects of a lot of the major container platforms So we're definitely a touch um more",
    "start": "388880",
    "end": "395919"
  },
  {
    "text": "interested uh than not So we also have Steve Wong out there as well Steve do",
    "start": "395919",
    "end": "401360"
  },
  {
    "text": "you want to do an introduction for yourself yeah Hi I'm Steve Wong I'm also with the uh code open source team at DELMC and",
    "start": "401360",
    "end": "409199"
  },
  {
    "text": "I've been working as a developer on storage integration with MSOS and",
    "start": "409199",
    "end": "414960"
  },
  {
    "text": "Kubernetes for the past couple years Awesome Thanks guys Alan Samuels",
    "start": "414960",
    "end": "423520"
  },
  {
    "text": "I'm Alan Samuels and I'm at uh Western Digital these days and interested in",
    "start": "423520",
    "end": "430479"
  },
  {
    "text": "storage distributed storage That's what I get paid to do is to be interested in that stuff",
    "start": "430479",
    "end": "437280"
  },
  {
    "text": "Okay great All right Um",
    "start": "437280",
    "end": "443360"
  },
  {
    "text": "Ardolan Yeah Hi I'm Ardan Korlu I work at NetApp and I've been involved with",
    "start": "443400",
    "end": "448479"
  },
  {
    "text": "our NetApp Docker volume plug-in and Kubernetes integrations",
    "start": "448479",
    "end": "453560"
  },
  {
    "text": "Great Julian Hey Julian Hi Julian Yoy Um I'm",
    "start": "453560",
    "end": "461680"
  },
  {
    "text": "the the PM of the Diego persistence project in Cloud Foundry and uh we're very actively",
    "start": "461680",
    "end": "470240"
  },
  {
    "text": "interested in this spec and and looking to incorporate it into Cloud Foundry alongside the existing plugin mechanism",
    "start": "470240",
    "end": "476960"
  },
  {
    "text": "we have today Okay great",
    "start": "476960",
    "end": "482360"
  },
  {
    "text": "Um okay Uh",
    "start": "482360",
    "end": "486159"
  },
  {
    "text": "Yin hi I work in Huawei I work on the storage plugin I work with Steven and",
    "start": "488520",
    "end": "494800"
  },
  {
    "text": "Philip in the open SDS project also try to integrate this container",
    "start": "494800",
    "end": "500400"
  },
  {
    "text": "orchestration with our storage and even generic storage plugins",
    "start": "500400",
    "end": "507800"
  },
  {
    "text": "Okay great Um Stephen Stephen Tan",
    "start": "507919",
    "end": "514440"
  },
  {
    "text": "Yeah Stephen you're muted You're muted Stephen",
    "start": "517519",
    "end": "523159"
  },
  {
    "text": "Hi I'm Stephen from Huawei I'm representing Open SDS Actually I'm",
    "start": "523519",
    "end": "528959"
  },
  {
    "text": "interested in how CSI and OpenS can uh work together and basically how how we",
    "start": "528959",
    "end": "535440"
  },
  {
    "text": "can provide seamless integration for um the all the different orchestration uh",
    "start": "535440",
    "end": "540720"
  },
  {
    "text": "layers Okay great Uh Felix Hey Felix",
    "start": "540720",
    "end": "547680"
  },
  {
    "text": "Hi man Um Felix Hedford Quite um we're looking to implement a um driver plugin",
    "start": "547680",
    "end": "554720"
  },
  {
    "text": "I don't know what the name is Um and support this Um yeah",
    "start": "554720",
    "end": "560839"
  },
  {
    "text": "Awesome Simon uh yeah hi I work for storage OS I've been working on the Docker and",
    "start": "560959",
    "end": "566720"
  },
  {
    "text": "Kubernetes integrations Great All right Um let's see Alex",
    "start": "566720",
    "end": "576800"
  },
  {
    "text": "I work with I work with storage too Um I'm interested in the um in this new CSI",
    "start": "576800",
    "end": "582720"
  },
  {
    "text": "spec Great",
    "start": "582720",
    "end": "587920"
  },
  {
    "text": "Muhammad Oh Muhammad you're muted",
    "start": "588200",
    "end": "593000"
  },
  {
    "text": "Uh hey Uh I'm Muhammad from IBM Uh we started the cloud fun assistance work and now working on adding uh IBM storage",
    "start": "593839",
    "end": "600480"
  },
  {
    "text": "for Kubernetes and Docker Uh interested in participating and promoting CSI",
    "start": "600480",
    "end": "606920"
  },
  {
    "text": "Great Okay Uh Taher Hi I'm uh Taher from Pure Storage I",
    "start": "606920",
    "end": "614480"
  },
  {
    "text": "present a storage vendor We have a flex volume and a docker volume plug-in driver We can't wait to have a common",
    "start": "614480",
    "end": "621680"
  },
  {
    "text": "interface so that we can support all in Awesome Um Basam",
    "start": "621680",
    "end": "629839"
  },
  {
    "text": "Hi Um I'm Basama from Quantum We we started the Rook project So I guess we're interested in both how Rook plays",
    "start": "629839",
    "end": "636959"
  },
  {
    "text": "with CSI and maybe thinking about how to run storage services themselves on cloud",
    "start": "636959",
    "end": "643519"
  },
  {
    "text": "native environments Okay great Um let's see we had another",
    "start": "643519",
    "end": "649680"
  },
  {
    "text": "Michael Michael F Hey Yes I was thinking",
    "start": "649680",
    "end": "654959"
  },
  {
    "text": "hello Um I'm with my Docker Uh so same interest as Mike um figuring out how",
    "start": "654959",
    "end": "662320"
  },
  {
    "text": "this relates to uh to Docker Okay great G Hey um this is G Uh I'm from Mosphere",
    "start": "662320",
    "end": "670000"
  },
  {
    "text": "Uh I'm from like Apache MSOS um PMC as well I'm a long time of project uh",
    "start": "670000",
    "end": "676880"
  },
  {
    "text": "focusing on storage container and networking Thanks G Travis",
    "start": "676880",
    "end": "684440"
  },
  {
    "text": "Yes Hello Uh Travis from Quantum uh work with um BAM on the Rook project uh",
    "start": "686000",
    "end": "691519"
  },
  {
    "text": "integrating storage with with Kubernetes and other platforms Great",
    "start": "691519",
    "end": "696680"
  },
  {
    "text": "Thanks Um I don't know if the Cloud Native Computing Foundation if that's you Chris",
    "start": "696680",
    "end": "702160"
  },
  {
    "text": "or if that's someone else Uh it's probably Annie but hey how's it going it's Chris from CNCF Basically keep",
    "start": "702160",
    "end": "708959"
  },
  {
    "text": "things running behind the scenes Hey Chris Um it is Annie from CNCF Um",
    "start": "708959",
    "end": "715120"
  },
  {
    "text": "making you have this Zoom recording today Thank you Awesome Okay Um Doug Doug",
    "start": "715120",
    "end": "723920"
  },
  {
    "text": "Davis Yeah this is Doug from IBM I work with Muhammad and Sandy on uh I'm trying",
    "start": "723920",
    "end": "729519"
  },
  {
    "text": "to make sure we can integrate this stuff into the Bluemix container service Awesome Okay Haley",
    "start": "729519",
    "end": "737160"
  },
  {
    "text": "And this is Haley I'm from Lindbit remake JVD which is the internal uh",
    "start": "738720",
    "end": "744959"
  },
  {
    "text": "block replication driver for Linux and so we're very interested in CNCF and how",
    "start": "744959",
    "end": "750399"
  },
  {
    "text": "that will play with us and how it will play with it Okay great Uh James",
    "start": "750399",
    "end": "758279"
  },
  {
    "text": "yeah James Dele from Mosesphere um been involved with the CSI spec a little bit",
    "start": "758639",
    "end": "764160"
  },
  {
    "text": "and uh I'll be working on integrating CSI support into DCOS",
    "start": "764160",
    "end": "769200"
  },
  {
    "text": "Great Uh John John Griffith I'm uh been working with",
    "start": "769200",
    "end": "777040"
  },
  {
    "text": "OpenStack and cloud Docker Kubernetes a little bit of Mosphere Um so real",
    "start": "777040",
    "end": "782959"
  },
  {
    "text": "interested in the direction here and just trying to participate Great Okay",
    "start": "782959",
    "end": "789720"
  },
  {
    "text": "Um let's see Howard",
    "start": "789720",
    "end": "794360"
  },
  {
    "text": "Um Howard Hong from Huawei Uh I'm working with student and uh in OpenSt",
    "start": "796880",
    "end": "803839"
  },
  {
    "text": "community Great Okay Sandy",
    "start": "803839",
    "end": "810880"
  },
  {
    "text": "I'm Sandy from IBM I work on the Bluemix container service uh with the responsibility of integrating uh with",
    "start": "810880",
    "end": "817760"
  },
  {
    "text": "our storage uh both in uh Kubernetes and also Docker So highly interested in CSI",
    "start": "817760",
    "end": "825279"
  },
  {
    "text": "and also highly interested in extending the interfaces of CSI for things like",
    "start": "825279",
    "end": "831120"
  },
  {
    "text": "resize snapshots etc",
    "start": "831120",
    "end": "835480"
  },
  {
    "text": "Thanks",
    "start": "839360",
    "end": "842360"
  },
  {
    "text": "Who's",
    "start": "849279",
    "end": "851440"
  },
  {
    "text": "Ben looks like you muted yourself then",
    "start": "857639",
    "end": "862920"
  },
  {
    "text": "Sorry about that Okay Uh uh Brian Brian Goff are you on you want to go next hey",
    "start": "866720",
    "end": "873040"
  },
  {
    "text": "this is Brian from Docker Just an engineer doing storage stuffs in Docker among other things",
    "start": "873040",
    "end": "880360"
  },
  {
    "text": "Okay Um sorry who have I who haven't I done now",
    "start": "880360",
    "end": "887120"
  },
  {
    "text": "dan Khan is here from Cloud Native Continue Foundation as well Hey Dan Um",
    "start": "887120",
    "end": "894880"
  },
  {
    "text": "oh sorry from",
    "start": "894880",
    "end": "901560"
  },
  {
    "text": "fromazia we have a cloud data platform we are looking into integrating to true",
    "start": "901560",
    "end": "909040"
  },
  {
    "text": "storage plugins common one I worked in storage for the last 17 years so I would very",
    "start": "909040",
    "end": "916079"
  },
  {
    "text": "much want to participate in the community and assist in defining",
    "start": "916079",
    "end": "922720"
  },
  {
    "text": "Okay great Uh hi my name is uh Amit Var and I work",
    "start": "924160",
    "end": "929920"
  },
  {
    "text": "with Muhammad and I work at the storage system research group at IBM storage and",
    "start": "929920",
    "end": "935440"
  },
  {
    "text": "uh we're working on plugins for Kubernetes Okay",
    "start": "935440",
    "end": "941160"
  },
  {
    "text": "great I think there's still a few more Uh Luis I don't I don't know that we've Yep Hey Luis",
    "start": "941160",
    "end": "949160"
  },
  {
    "text": "I'm muted My name is Luis Pabone and I work at Coros and I'm interested in the",
    "start": "950800",
    "end": "956759"
  },
  {
    "text": "CSI spec Great",
    "start": "956759",
    "end": "961959"
  },
  {
    "text": "Um I think Brad Yep Brad Child's here I work at Red",
    "start": "961959",
    "end": "967759"
  },
  {
    "text": "Hat and uh you know pretty active on the storage sig for Kubernetes and just",
    "start": "967759",
    "end": "974480"
  },
  {
    "text": "interested in CSI spec Awesome Um",
    "start": "974480",
    "end": "982079"
  },
  {
    "text": "orit or myself I just just rename the login orio",
    "start": "984680",
    "end": "993000"
  },
  {
    "text": "Okay Um root root fs",
    "start": "993240",
    "end": "1000279"
  },
  {
    "text": "Oh that's me I didn't realize I used my name",
    "start": "1000639",
    "end": "1006399"
  },
  {
    "text": "It's a good one It's very apppropo",
    "start": "1006399",
    "end": "1010759"
  },
  {
    "text": "Okay Um sorry if I missed anyone left If they could um jump in Yeah Hi this is",
    "start": "1011839",
    "end": "1018079"
  },
  {
    "text": "Tushar Kle from VMware Uh I'm an engineering manager at VMware and I manage a couple of teams who focus on",
    "start": "1018079",
    "end": "1024400"
  },
  {
    "text": "persistent volume support for Docker and Kubernetes So I have vested interest in CSI because I don't I I'll need one team",
    "start": "1024400",
    "end": "1032000"
  },
  {
    "text": "other than two to do the same Great Okay Um hi everyone Uh this is Balu from",
    "start": "1032000",
    "end": "1039199"
  },
  {
    "text": "VMware team as well So I just wanted to know what is happening in the CSI space So I'm interested in that too",
    "start": "1039199",
    "end": "1046360"
  },
  {
    "text": "Great Anyone left",
    "start": "1046360",
    "end": "1050760"
  },
  {
    "text": "okay awesome It's a it's a fantastic group Um glad that we can all all jump",
    "start": "1052960",
    "end": "1058000"
  },
  {
    "text": "on and have these discussions So without further ado I'd love to um hand it off to Soden G uh so we can give them as",
    "start": "1058000",
    "end": "1064400"
  },
  {
    "text": "much time to um to discuss uh uh the work that's been going on with CSI",
    "start": "1064400",
    "end": "1071960"
  },
  {
    "text": "Cool Um can you guys see my screen yep",
    "start": "1073360",
    "end": "1078520"
  },
  {
    "text": "Okay Um All right So I think um so my name is G and um S and I so S do you",
    "start": "1078520",
    "end": "1086320"
  },
  {
    "text": "want to yeah I think S and I wants to uh like present this um the current status",
    "start": "1086320",
    "end": "1091440"
  },
  {
    "text": "of container storage interface to you guys and uh I think I'm going to do the first part of the presentation and s",
    "start": "1091440",
    "end": "1096960"
  },
  {
    "text": "going to do the rest of the presentation So uh here's the kind of the agenda of the the presentation So we're going to",
    "start": "1096960",
    "end": "1102559"
  },
  {
    "text": "give you some motivation why you want to do this and uh um and then give you an overview uh what is CSI and uh how does",
    "start": "1102559",
    "end": "1110240"
  },
  {
    "text": "it work things like that and then give you an update on the current status of the um the CSI spec um so the motivation",
    "start": "1110240",
    "end": "1117360"
  },
  {
    "text": "is this so uh we kind of like seeing the success of CNI in the networking space um that there's a single spec that all",
    "start": "1117360",
    "end": "1124400"
  },
  {
    "text": "the container orchestration system the networking vendors can uh integrate uh and we see the success from that and we",
    "start": "1124400",
    "end": "1131120"
  },
  {
    "text": "are thinking think that uh why not just make a uh interface uh for storage as",
    "start": "1131120",
    "end": "1136400"
  },
  {
    "text": "well and so that like all the container orchestration system and storage provider can uh integrate with them uh",
    "start": "1136400",
    "end": "1142640"
  },
  {
    "text": "integrates the spec um to um to um to make it work and uh and I think the goal",
    "start": "1142640",
    "end": "1148080"
  },
  {
    "text": "is trying to say um uh with this spec container system like kubernetes docker",
    "start": "1148080",
    "end": "1153440"
  },
  {
    "text": "meos cloud foundry can u can integrate any third party storage vendors uh",
    "start": "1153440",
    "end": "1159039"
  },
  {
    "text": "storage systems uh without uh having to um um like do any like in tree for",
    "start": "1159039",
    "end": "1165600"
  },
  {
    "text": "example kernetes right now use the in tree model for their volume plugins and that's kind of painful and um and uh and",
    "start": "1165600",
    "end": "1172880"
  },
  {
    "text": "storage providers um with this interface can um like they don't need to write multiple plugins for different",
    "start": "1172880",
    "end": "1178799"
  },
  {
    "text": "orchestration system they can just write one plugin that works for all the um cos so that's kind of the motivation um",
    "start": "1178799",
    "end": "1187360"
  },
  {
    "text": "um so giving you an overview of like what is kind CSI and what's uh the",
    "start": "1187360",
    "end": "1192480"
  },
  {
    "text": "interface So um so basically like a storage provider SP implement two plugins So each plug-in inside CSI is a",
    "start": "1192480",
    "end": "1199840"
  },
  {
    "text": "U gRPC service Um these like the the two plugins are no plugins and a controller",
    "start": "1199840",
    "end": "1205520"
  },
  {
    "text": "plugins So the reason we need to separate separate these two plugins is because um there's some functionality",
    "start": "1205520",
    "end": "1210720"
  },
  {
    "text": "from the storage provider has to be run on the node where the volume will be used and but the rest of the",
    "start": "1210720",
    "end": "1216000"
  },
  {
    "text": "functionality you can run that anywhere So we want to separate these two plugins so that we can um allow different",
    "start": "1216000",
    "end": "1222000"
  },
  {
    "text": "deployment and you can see later in the discussion uh in the presentation and it's okay that you ship a single package",
    "start": "1222000",
    "end": "1228080"
  },
  {
    "text": "to um package these two plugins um that you have you provide those two gRPC services but you package in a single",
    "start": "1228080",
    "end": "1234000"
  },
  {
    "text": "container for example and you distribute that single container to the container orchestration system so that it can run",
    "start": "1234000",
    "end": "1239280"
  },
  {
    "text": "those two plugins Um so the the container orchestration system will interact the plugins provided by the",
    "start": "1239280",
    "end": "1245200"
  },
  {
    "text": "storage vendor um to do things like dynamic provisioning and deprovisioning the volume attaching detaching and",
    "start": "1245200",
    "end": "1250400"
  },
  {
    "text": "volume from node and mounting and mounting So that's the kind of scope we define for now for 1.0 So some other",
    "start": "1250400",
    "end": "1256320"
  },
  {
    "text": "functionality like snapshoting we can discuss later on after 1.0",
    "start": "1256320",
    "end": "1262200"
  },
  {
    "text": "Um so uh we envision like a multiple architecture to um to deploy the storage",
    "start": "1262200",
    "end": "1267840"
  },
  {
    "text": "plugins and uh how co will interact the storage plugin So that's one potential architecture that people might use since",
    "start": "1267840",
    "end": "1274320"
  },
  {
    "text": "you have two plugins Controller plugins run on the master node For example uh the controller um the for example in",
    "start": "1274320",
    "end": "1281280"
  },
  {
    "text": "MSOS world is the master host or anywhere in the cluster that the container oration system can talk to the",
    "start": "1281280",
    "end": "1286400"
  },
  {
    "text": "controller plug-in using gRPC and then you also deploy the node plug-in on every single node where you want to use",
    "start": "1286400",
    "end": "1292080"
  },
  {
    "text": "the volume and you ship these two plugins as separate containers and the co will manage those containers on",
    "start": "1292080",
    "end": "1298320"
  },
  {
    "text": "different hosts and talk to them when appropriate So that's one of the architecture Oh by the way feel free to",
    "start": "1298320",
    "end": "1304159"
  },
  {
    "text": "interrupt me if you have any questions Um so that's one potential architecture You have two plugins separately Um",
    "start": "1304159",
    "end": "1311120"
  },
  {
    "text": "controller plug-in and no plug-in No plugin on the node Um and this is a different architecture that potentially",
    "start": "1311120",
    "end": "1316880"
  },
  {
    "text": "we can do So uh so basically this is like like a headerless design Basically you don't have a controller in the",
    "start": "1316880",
    "end": "1322960"
  },
  {
    "text": "middle uh in a centralized component and you deploy all the controller plugin and no plugin to every single node in the",
    "start": "1322960",
    "end": "1328480"
  },
  {
    "text": "cluster and a co on every single node when there's a need to provision a volume or create a volume or mount a",
    "start": "1328480",
    "end": "1334559"
  },
  {
    "text": "volume uh it will try to call control plug-in um gRPC services and then talk to no plugins as well to to properly set",
    "start": "1334559",
    "end": "1341360"
  },
  {
    "text": "up the volume So that's a different architecture than the first architecture Um the other way is like as I mentioned",
    "start": "1341360",
    "end": "1347520"
  },
  {
    "text": "earlier like these two plug-in can be packaged into a single container and the co can talk to that single container",
    "start": "1347520",
    "end": "1352880"
  },
  {
    "text": "through gRPC on that single container providing two different services One is a controller service and the other one",
    "start": "1352880",
    "end": "1358799"
  },
  {
    "text": "is a node service Um any any questions so",
    "start": "1358799",
    "end": "1367159"
  },
  {
    "text": "far all right So uh for the goal in 1.0 for CSI is uh we want to um uh allow",
    "start": "1367159",
    "end": "1374000"
  },
  {
    "text": "people to build a one CSI compliant plug-in that just works across all container orchestration systems So for",
    "start": "1374000",
    "end": "1379760"
  },
  {
    "text": "example a storage vendor build one plug-in that works for Kubernetes works for Docker works for Windows works for",
    "start": "1379760",
    "end": "1385120"
  },
  {
    "text": "Cloud Foundry and uh uh we want to define those APIs uh specifically those RPC specifications that enable enable us",
    "start": "1385120",
    "end": "1392960"
  },
  {
    "text": "to do uh for example dynamic provisioning deprovision the volume attaching attaching detaching a volume",
    "start": "1392960",
    "end": "1398640"
  },
  {
    "text": "from a node and mounting and mounting a volume from a node uh and we want to",
    "start": "1398640",
    "end": "1404080"
  },
  {
    "text": "support both not just like mountable volumes and also we want to support rob block access to the volumes and also",
    "start": "1404080",
    "end": "1410559"
  },
  {
    "text": "another kind of the goal is like we want to support local storage for example things like LVM device mapper that uh",
    "start": "1410559",
    "end": "1416000"
  },
  {
    "text": "it's it's not very tied to like external storage uh you can also use that for like local storage as well and uh we",
    "start": "1416000",
    "end": "1422880"
  },
  {
    "text": "want to define some recommendations um to uh like for example how the uh co",
    "start": "1422880",
    "end": "1428400"
  },
  {
    "text": "will supervise a plug-in and what are the requirement to deploy those plugins like for example on do you need a mount",
    "start": "1428400",
    "end": "1434400"
  },
  {
    "text": "namespace and do you need some special um capabilities um to to deploy the",
    "start": "1434400",
    "end": "1439679"
  },
  {
    "text": "plug-in um there's some non goals in 1.0 O um",
    "start": "1439679",
    "end": "1444880"
  },
  {
    "text": "specifically we don't want to uh dictate the life cycle management of a plug-in So it's up to the co to decide how to",
    "start": "1444880",
    "end": "1450960"
  },
  {
    "text": "deploy install upgrade uh and install monitor and respond those plugins when there's a failure And um these are",
    "start": "1450960",
    "end": "1458799"
  },
  {
    "text": "totally out of bound of CS CSI It's up to the co to decide how to do that um we",
    "start": "1458799",
    "end": "1464320"
  },
  {
    "text": "don't want to dictate the uh we don't want to introduce the first class of like uh like storage class or grid of",
    "start": "1464320",
    "end": "1470159"
  },
  {
    "text": "storage initially and we don't want to define protocol level authentication or authorization this will be left to co to",
    "start": "1470159",
    "end": "1477279"
  },
  {
    "text": "decide and we don't want to dictate packaging of a plug-in it can be packaged as a container or if you don't",
    "start": "1477279",
    "end": "1483679"
  },
  {
    "text": "want to do that you can uh using systemd to to launch those services manage those services or use RPM to patch those",
    "start": "1483679",
    "end": "1490159"
  },
  {
    "text": "plugins so uh it's totally fine so uh we don't want dictate that and also we don't want to dictate whether it's",
    "start": "1490159",
    "end": "1495200"
  },
  {
    "text": "postex compliance or not uh because um this is because like many of the system are not actually postix compliant so we",
    "start": "1495200",
    "end": "1502080"
  },
  {
    "text": "don't want to dictate that um all right so that's pretty much um",
    "start": "1502080",
    "end": "1508320"
  },
  {
    "text": "kind of the overview um and um sad will go into the details all these interfaces",
    "start": "1508320",
    "end": "1514159"
  },
  {
    "text": "all right thanks G uh so yeah I'm going to go over uh the interface itself uh",
    "start": "1514159",
    "end": "1519679"
  },
  {
    "text": "and what's next uh G could you mute Yes Thank you Uh what's next somebody is",
    "start": "1519679",
    "end": "1527600"
  },
  {
    "text": "giving me echo Let's see who that is Uh okay I think I'm okay now Uh so let's",
    "start": "1527600",
    "end": "1534159"
  },
  {
    "text": "get started Um as G said we separated the interfaces into three uh distinct",
    "start": "1534159",
    "end": "1539840"
  },
  {
    "text": "services The controller service the node service and the identity service Uh in",
    "start": "1539840",
    "end": "1544880"
  },
  {
    "text": "reality these three services can be packaged into a single uh container or single endpoint uh but they need to be",
    "start": "1544880",
    "end": "1553200"
  },
  {
    "text": "able to be uh uh the the controller must be accessible from anywhere within the cluster The uh node service uh must have",
    "start": "1553200",
    "end": "1561200"
  },
  {
    "text": "an instance that is running on every single node and will always be called from the node and the identity service",
    "start": "1561200",
    "end": "1568400"
  },
  {
    "text": "is something that should be exposed by both Uh next slide please",
    "start": "1568400",
    "end": "1574720"
  },
  {
    "text": "Uh wait a minute Okay Okay I I can present mine if",
    "start": "1574720",
    "end": "1581440"
  },
  {
    "text": "Yeah Hang",
    "start": "1581440",
    "end": "1584240"
  },
  {
    "text": "on Okay",
    "start": "1591400",
    "end": "1595400"
  },
  {
    "text": "Uh can you see my screen yes Okay Uh so first up is the uh",
    "start": "1603200",
    "end": "1609520"
  },
  {
    "text": "controller service Actually before we jump into this uh I wanted to to to uh",
    "start": "1609520",
    "end": "1614720"
  },
  {
    "text": "give a piece of guidance for what we did to figure out what should be as uh in the",
    "start": "1614720",
    "end": "1620720"
  },
  {
    "text": "1.0 interface and what shouldn't be uh and uh we had a lot of people suggesting a lot of really high-end features that",
    "start": "1620720",
    "end": "1627200"
  },
  {
    "text": "we could potentially put into the 1.0 interface and we decided not to tackle those and the idea was uh for 1.0 this",
    "start": "1627200",
    "end": "1634320"
  },
  {
    "text": "interface should be essentially the least common denominator What uh what would be the most common uh layer",
    "start": "1634320",
    "end": "1641039"
  },
  {
    "text": "between uh cluster uh container orchestrators and storage uh vendors to",
    "start": "1641039",
    "end": "1647039"
  },
  {
    "text": "get them off the ground And so we wanted to tackle mount unmount attach detach uh",
    "start": "1647039",
    "end": "1652799"
  },
  {
    "text": "provision and uh deletion Uh beyond that uh we can expand that in future uh CSI",
    "start": "1652799",
    "end": "1659919"
  },
  {
    "text": "versions but but that's just the scope uh for v 1.0 And so jumping into the controller",
    "start": "1659919",
    "end": "1666240"
  },
  {
    "text": "service uh the vast majority of the commands here are optional Uh the first",
    "start": "1666240",
    "end": "1671520"
  },
  {
    "text": "command validate volume capabilities is used to figure out uh whether the plug-in supports these other commands So",
    "start": "1671520",
    "end": "1678240"
  },
  {
    "text": "when you call it it can return whether it supports create volume delete volume uh controller publish unpublish uh and",
    "start": "1678240",
    "end": "1685600"
  },
  {
    "text": "the rest of these commands Uh and so uh create volume delete volume is used to provision uh a new volume or to delete a",
    "start": "1685600",
    "end": "1693039"
  },
  {
    "text": "volume Uh controller publish and controller unpublish are uh calls that",
    "start": "1693039",
    "end": "1699760"
  },
  {
    "text": "are executed uh against the control plane to make a volume available on a",
    "start": "1699760",
    "end": "1705600"
  },
  {
    "text": "specific node Uh those of you in the Kubernetes land are uh probably familiar with this as attach and detach Uh we",
    "start": "1705600",
    "end": "1712960"
  },
  {
    "text": "went over the naming of this uh back and forth a lot The problem with attach and",
    "start": "1712960",
    "end": "1718000"
  },
  {
    "text": "detach was it was confusing uh because uh for some uh storage providers the",
    "start": "1718000",
    "end": "1724960"
  },
  {
    "text": "attach and detach operations are triggered from the node machine And really the distinction that we wanted to",
    "start": "1724960",
    "end": "1730240"
  },
  {
    "text": "make was in order to make a a volume available on a machine uh there it can",
    "start": "1730240",
    "end": "1736640"
  },
  {
    "text": "essentially be broken into two components A component that can be executed from anywhere on the cluster",
    "start": "1736640",
    "end": "1742640"
  },
  {
    "text": "The controller publish and then the component that is executed on the node",
    "start": "1742640",
    "end": "1748080"
  },
  {
    "text": "machine The final uh steps required to actually mount the mount the volume into",
    "start": "1748080",
    "end": "1754559"
  },
  {
    "text": "a known location on the machine And so uh we basically called that process",
    "start": "1754559",
    "end": "1760880"
  },
  {
    "text": "publish and we have two versions of it One is controller publish and the other is node publish which you'll see on the",
    "start": "1760880",
    "end": "1766399"
  },
  {
    "text": "next slide Uh and the controller publish",
    "start": "1766399",
    "end": "1771679"
  },
  {
    "text": "uh part is optional uh meaning some storage uh providers may not implement",
    "start": "1771679",
    "end": "1777120"
  },
  {
    "text": "it at all because they don't have a uh control plane which is responsible uh for making a volume available You can",
    "start": "1777120",
    "end": "1784080"
  },
  {
    "text": "think of this as something like NFS uh where NFS shares are available on to all",
    "start": "1784080",
    "end": "1789360"
  },
  {
    "text": "the node machines and making it available at a specific location is just a mount that happens on the node So for",
    "start": "1789360",
    "end": "1796159"
  },
  {
    "text": "those machines they are for th for an NFS plugin it wouldn't implement a controller publish or controller",
    "start": "1796159",
    "end": "1801919"
  },
  {
    "text": "unpublish uh but for something like a Amazon EBS volume or a GCPD volume",
    "start": "1801919",
    "end": "1807840"
  },
  {
    "text": "controller publish and controller unpublish would be responsible for attaching a volume to uh a particular",
    "start": "1807840",
    "end": "1814000"
  },
  {
    "text": "node or detaching it Uh next up is list volumes Uh and this call is to return",
    "start": "1814000",
    "end": "1822240"
  },
  {
    "text": "all the volumes that are available uh for a particular uh storage plug-in",
    "start": "1822240",
    "end": "1829360"
  },
  {
    "text": "Um the idea here is for a co to be able to um handle pre-provisioned volumes Uh",
    "start": "1829360",
    "end": "1837919"
  },
  {
    "text": "the call is optional Uh and it's also pagenated Uh so if you have a large list",
    "start": "1837919",
    "end": "1843200"
  },
  {
    "text": "of volumes the request contains the number of volumes that should be uh returned in each uh uh call and a uh yes",
    "start": "1843200",
    "end": "1853520"
  },
  {
    "text": "just just a question What's the scope of list volumes is it all volumes known to the storage provider or all volumes that",
    "start": "1853520",
    "end": "1860720"
  },
  {
    "text": "are you know usable by the co all volumes so it's up to the uh storage",
    "start": "1860720",
    "end": "1868000"
  },
  {
    "text": "provider to define that Uh but uh it should be all volumes that are usable by",
    "start": "1868000",
    "end": "1874240"
  },
  {
    "text": "the co or the user the end users of the co Got it",
    "start": "1874240",
    "end": "1881440"
  },
  {
    "text": "Uh again this is optional So we realize that this call may be very heavyweight for a lot of uh storage providers and if",
    "start": "1881440",
    "end": "1890159"
  },
  {
    "text": "uh they don't want to implement it they don't have to Uh and uh for on the",
    "start": "1890159",
    "end": "1895200"
  },
  {
    "text": "Kubernetes side we're probably not going to uh use this uh very frequently",
    "start": "1895200",
    "end": "1902519"
  },
  {
    "text": "Um next command is get capacity Uh this is something to uh figure out what the",
    "start": "1902519",
    "end": "1908320"
  },
  {
    "text": "full capacity of uh the storage pool is from which volumes will be provisioned Uh again it's an optional call Uh and",
    "start": "1908320",
    "end": "1916080"
  },
  {
    "text": "the idea here is to uh since create volume calls are going to be uh carving",
    "start": "1916080",
    "end": "1921519"
  },
  {
    "text": "out uh volumes from some pool of storage Uh get capacity can return the capacity",
    "start": "1921519",
    "end": "1928000"
  },
  {
    "text": "of the entire storage pool Again this is an optional call because it may or may not be relevant uh to uh all storage",
    "start": "1928000",
    "end": "1936080"
  },
  {
    "text": "providers Hey Sod I hope this isn't getting too detailed It's just a quick question that touches on both of these",
    "start": "1936080",
    "end": "1942159"
  },
  {
    "text": "previous calls Um is it understood that a storage plugin uh targets a single",
    "start": "1942159",
    "end": "1948080"
  },
  {
    "text": "endpoint of a given type or all endpoints so in the example of NFS you could have multiple shares Would you",
    "start": "1948080",
    "end": "1955200"
  },
  {
    "text": "would would these calls be going across all the shares that would be known to the plug-in or would it be um on a would",
    "start": "1955200",
    "end": "1962159"
  },
  {
    "text": "you run an individual plug-in instance per share that you wanted to access for example i'm thinking also of like",
    "start": "1962159",
    "end": "1968720"
  },
  {
    "text": "storage arrays if you have multiple NetApp So there will be uh one instance of the",
    "start": "1968720",
    "end": "1975440"
  },
  {
    "text": "plug-in running per storage provider and then these calls get called per volume",
    "start": "1975440",
    "end": "1981440"
  },
  {
    "text": "So in the NFS case you would have one NFS volume plugin or potentially broken",
    "start": "1981440",
    "end": "1986880"
  },
  {
    "text": "into a controller plugin and a node plugin uh running on uh every single node in the master uh and then when the",
    "start": "1986880",
    "end": "1994720"
  },
  {
    "text": "co wants to uh make a a volume an NFS volume available a particular instance",
    "start": "1994720",
    "end": "2001440"
  },
  {
    "text": "of an NFS volume available then it's going to call uh for example controller publish volume referencing this",
    "start": "2001440",
    "end": "2008240"
  },
  {
    "text": "particular NFS share and say please make that available Is it fair to say that a plugin is a type of technology and like",
    "start": "2008240",
    "end": "2014799"
  },
  {
    "text": "these like volumes are then like the instance of when you're employing that technology to reach some storage that's been provisioned Yes Did everyone hear",
    "start": "2014799",
    "end": "2021519"
  },
  {
    "text": "that nobody heard that So I think the plugin",
    "start": "2021519",
    "end": "2028000"
  },
  {
    "text": "as a a type of technology and an um a volume as an instance of applying that",
    "start": "2028000",
    "end": "2034640"
  },
  {
    "text": "technology to reach a piece of provision storage",
    "start": "2034640",
    "end": "2039799"
  },
  {
    "text": "Okay So in a lot of these calls we'll actually have to target a specific there may need to be a parameter that targets",
    "start": "2040799",
    "end": "2046640"
  },
  {
    "text": "a specific share or a specific cluster or a specific whatever in order to uh to",
    "start": "2046640",
    "end": "2052480"
  },
  {
    "text": "drill down if there are multiple of those attached for a given type Exactly Okay Makes sense My understanding was",
    "start": "2052480",
    "end": "2059760"
  },
  {
    "text": "that you know if you wanted to run multiple plugins you know that if you",
    "start": "2059760",
    "end": "2064878"
  },
  {
    "text": "had multiple instances of a of a particular plug-in type uh for some technology like that would be kind of",
    "start": "2064879",
    "end": "2070480"
  },
  {
    "text": "plug-in specific I don't I don't think the spec actually calls out you're only allowed to have a single instance of a",
    "start": "2070480",
    "end": "2076560"
  },
  {
    "text": "plug-in type for a specific technology That's my understanding right it doesn't explicitly specify but that's the",
    "start": "2076560",
    "end": "2082000"
  },
  {
    "text": "general model that we had in our heads when we were writing this out Understood",
    "start": "2082000",
    "end": "2088720"
  },
  {
    "text": "Uh any other questions before I move on yeah S can you talk a little about um",
    "start": "2088720",
    "end": "2093839"
  },
  {
    "text": "kind of item potency of these calls or what what the expectations are on the co",
    "start": "2093839",
    "end": "2100838"
  },
  {
    "text": "Uh we defined item potency uh per call and I'll point you at the spec at the",
    "start": "2101440",
    "end": "2107040"
  },
  {
    "text": "end of the uh presentation Um so for example create volume delete volume are",
    "start": "2107040",
    "end": "2112320"
  },
  {
    "text": "expected to be item potent uh we try to achieve this by passing in a parameter",
    "start": "2112320",
    "end": "2117839"
  },
  {
    "text": "which is a unique ID or we call it a volume name uh it's a little bit",
    "start": "2117839",
    "end": "2123280"
  },
  {
    "text": "overloaded but the idea is that if you call create volume with the same name twice uh the first call uh ends up with",
    "start": "2123280",
    "end": "2131760"
  },
  {
    "text": "a network timeout the co calls it again the storage provider should be able to",
    "start": "2131760",
    "end": "2137280"
  },
  {
    "text": "not provision a uh a new volume but recognize that the volume ID is the same",
    "start": "2137280",
    "end": "2142640"
  },
  {
    "text": "and provision the same volume uh under the covers again we leave that behavior",
    "start": "2142640",
    "end": "2149040"
  },
  {
    "text": "uh optional to the co if they or to the the storage provider if they're unable",
    "start": "2149040",
    "end": "2154400"
  },
  {
    "text": "to uh for whatever reason uh provide item potency then they can choose to provision a new volume on every call and",
    "start": "2154400",
    "end": "2161680"
  },
  {
    "text": "uh with the caveat that uh you know you may potentially end up with unused",
    "start": "2161680",
    "end": "2166800"
  },
  {
    "text": "volumes Um are are you expecting that the storage provider will have some state to to handle it and potency uh",
    "start": "2166800",
    "end": "2173599"
  },
  {
    "text": "it's totally up to you as the storage provider implement to figure that out We were very very careful here to give",
    "start": "2173599",
    "end": "2180079"
  },
  {
    "text": "freedoms to the storage provider to make things as complex or as simple as they need Um one of the big sort of thrusts",
    "start": "2180079",
    "end": "2187119"
  },
  {
    "text": "of CSI is uh very much a a framework for functionality and trying to not be",
    "start": "2187119",
    "end": "2192800"
  },
  {
    "text": "opinionated about the implementation Right Got it And and just on the on the CO side is the kind of the assumption",
    "start": "2192800",
    "end": "2199599"
  },
  {
    "text": "about reconciliation is is just that it's a timeout based and we'll try to call create volume again and again and",
    "start": "2199599",
    "end": "2205200"
  },
  {
    "text": "again until until some you know until some number of retries Uh yes and in",
    "start": "2205200",
    "end": "2210640"
  },
  {
    "text": "fact I don't cover uh error codes in this uh uh presentation but if you look",
    "start": "2210640",
    "end": "2215760"
  },
  {
    "text": "in the spec we have error codes uh which are a way for the storage provider to",
    "start": "2215760",
    "end": "2221599"
  },
  {
    "text": "suggest the expect the expected behavior recovery behavior on any error case",
    "start": "2221599",
    "end": "2228640"
  },
  {
    "text": "whether they should retry or not So there is a mechanism in the uh spec to",
    "start": "2228640",
    "end": "2234000"
  },
  {
    "text": "for a storage provider to say this call failed but please don't try again uh or",
    "start": "2234000",
    "end": "2239119"
  },
  {
    "text": "try again with exponential backoff Great Thank you Is there any uh vision",
    "start": "2239119",
    "end": "2245599"
  },
  {
    "text": "or thought as to what the cardality is between uh controller services and",
    "start": "2245599",
    "end": "2251280"
  },
  {
    "text": "container orchestrators what I'm thinking of is if you had something like a federation of two instances of",
    "start": "2251280",
    "end": "2258160"
  },
  {
    "text": "Kubernetes or one of Kubernetes one of MSOS would you ever have one controller",
    "start": "2258160",
    "end": "2263200"
  },
  {
    "text": "service talking to both simultaneously or would you deploy two controller services so this goes back to uh what",
    "start": "2263200",
    "end": "2269680"
  },
  {
    "text": "Michael was mentioning where we don't we try not to dictate uh the packaging as much as possible We try to limit",
    "start": "2269680",
    "end": "2275760"
  },
  {
    "text": "ourselves to the interface Um so we left it open to say that uh as far as we are",
    "start": "2275760",
    "end": "2282640"
  },
  {
    "text": "concerned uh the the the service is exposed as a Unix domain socket And so",
    "start": "2282640",
    "end": "2289680"
  },
  {
    "text": "uh if you want to implement your CSI uh plugin as some service that is exposed",
    "start": "2289680",
    "end": "2295760"
  },
  {
    "text": "both to a MSOS cluster and a uh Kubernetes cluster go for it The the",
    "start": "2295760",
    "end": "2301839"
  },
  {
    "text": "spec is not opinionated on it at all If you if you look a pattern that I see quite often in Kubernetes in or",
    "start": "2301839",
    "end": "2308320"
  },
  {
    "text": "container orchestration is to have centralized storage in the infrastructure layer and not even in the",
    "start": "2308320",
    "end": "2314320"
  },
  {
    "text": "not being managed by the container orchestrator at all And often this will get shared between VM services and",
    "start": "2314320",
    "end": "2320720"
  },
  {
    "text": "container services And so to me that seems like a very viable uh path",
    "start": "2320720",
    "end": "2328400"
  },
  {
    "text": "Thanks Cool Uh any other questions before I move on to the next slide um yeah I was wondering what the",
    "start": "2328400",
    "end": "2334480"
  },
  {
    "text": "optionality of these APIs means um a plugin saying I don't support create but",
    "start": "2334480",
    "end": "2340960"
  },
  {
    "text": "I do support publish or are there combinations that uh yeah actually there",
    "start": "2340960",
    "end": "2346079"
  },
  {
    "text": "are com well uh I was uh going through this yesterday and realized we should have specified that uh because for",
    "start": "2346079",
    "end": "2353920"
  },
  {
    "text": "example uh you could have you could implement",
    "start": "2353920",
    "end": "2359760"
  },
  {
    "text": "one but not the other uh but sometimes vice versa doesn't make sense We'll go in and uh clarify that in the spec",
    "start": "2359760",
    "end": "2368280"
  },
  {
    "text": "Um he said one other question uh just uh there's some Linux specific stuff in the",
    "start": "2369280",
    "end": "2374320"
  },
  {
    "text": "spec um you know stuff about like capsis admin and and uh Linux namespaces and",
    "start": "2374320",
    "end": "2379359"
  },
  {
    "text": "croups but um fundamentally this spec seems to me to be pretty OS agnostic",
    "start": "2379359",
    "end": "2385520"
  },
  {
    "text": "like this could be implemented on Windows and I'm just okay is that our position that this so uh the only uh so",
    "start": "2385520",
    "end": "2394320"
  },
  {
    "text": "so we divided it into interface which is everything that you're seeing the gRPC interface uh and packaging packaging we",
    "start": "2394320",
    "end": "2400800"
  },
  {
    "text": "specifically did not make a specification anything around packaging is going to be a recommendation Uh so",
    "start": "2400800",
    "end": "2407760"
  },
  {
    "text": "whether it's going to be a docker container or how you execute that docker container all these will be",
    "start": "2407760",
    "end": "2413520"
  },
  {
    "text": "recommendations or examples on how you can run on various systems The idea with uh the spec is to make it as generic as",
    "start": "2413520",
    "end": "2420480"
  },
  {
    "text": "possible Uh Michael had a good way of uh putting it It's like the various layers",
    "start": "2420480",
    "end": "2425839"
  },
  {
    "text": "in networking uh where uh the HTTP layer doesn't really care what's what's going",
    "start": "2425839",
    "end": "2431920"
  },
  {
    "text": "on underneath the covers uh and so we want to make sure that the CSI spec has",
    "start": "2431920",
    "end": "2438400"
  },
  {
    "text": "uh is essentially defining just the interface and nothing below it and therefore we leave the packaging pretty",
    "start": "2438400",
    "end": "2444720"
  },
  {
    "text": "flexible So one thing one thing is that",
    "start": "2444720",
    "end": "2449760"
  },
  {
    "text": "that go there's no there's no Unix domain sockets on Windows uh the communication mechanism on Windows is",
    "start": "2449760",
    "end": "2456800"
  },
  {
    "text": "named pipe that's what used for gc by docker for example so one thing is uh I think I'll be the",
    "start": "2456800",
    "end": "2463760"
  },
  {
    "text": "first to admit that we are not windows experts at least um like s like I don't think sod is a windows expert I think",
    "start": "2463760",
    "end": "2470079"
  },
  {
    "text": "that's fair to say y I don't know um g's expertise in this manner so if there is",
    "start": "2470079",
    "end": "2475359"
  },
  {
    "text": "some gaping windows hole Um that is definitely something that we should understand and make sure that we're not",
    "start": "2475359",
    "end": "2481200"
  },
  {
    "text": "closing any doors there Is that is that fair to say G yeah I think that's fair And uh if you",
    "start": "2481200",
    "end": "2487359"
  },
  {
    "text": "have any suggestion to the spec feel free to open the PR and uh create any issues so that we can get those fixed",
    "start": "2487359",
    "end": "2493040"
  },
  {
    "text": "Yeah I mean lastly I would love it if the AMIGA was supported but I mean I think we should definitely make sure",
    "start": "2493040",
    "end": "2498319"
  },
  {
    "text": "that um we are keeping relevant ecosystems um prioritized",
    "start": "2498319",
    "end": "2505440"
  },
  {
    "text": "You mentioned a lot of things are optional and and item potency is up to the to the plugin Is there a way for the",
    "start": "2505440",
    "end": "2511119"
  },
  {
    "text": "client to discover all these things uh yes So the first call uh validate",
    "start": "2511119",
    "end": "2517040"
  },
  {
    "text": "volume capabilities uh basically uh returns a list of what is and is not",
    "start": "2517040",
    "end": "2523200"
  },
  {
    "text": "supported by the plugin I think you last call side right the controller get it's",
    "start": "2523200",
    "end": "2529760"
  },
  {
    "text": "the last call in the list The controller get capabilities Oh yes I'm sorry Yeah it's absolutely right Uh controller get",
    "start": "2529760",
    "end": "2536240"
  },
  {
    "text": "capabilities is used to uh get the capabilities uh figure out which commands are supported by the volume",
    "start": "2536240",
    "end": "2542400"
  },
  {
    "text": "plugin The first call validate volume capabilities is uh used for the pre-provisioning uh uh case So if you",
    "start": "2542400",
    "end": "2550160"
  },
  {
    "text": "have volumes that did not go through uh the create volume uh flow and you have",
    "start": "2550160",
    "end": "2555520"
  },
  {
    "text": "volumes that were uh created beforehand out of band uh validate volume",
    "start": "2555520",
    "end": "2560800"
  },
  {
    "text": "capabilities is a uh mechanism to verify whether that particular volume is going",
    "start": "2560800",
    "end": "2566880"
  },
  {
    "text": "to be supported is going to be uh is okay to consume in the way that the user intends to use it So for example if I",
    "start": "2566880",
    "end": "2574079"
  },
  {
    "text": "have a pre-provisioned NFS volume uh and I create I I want to figure out whether",
    "start": "2574079",
    "end": "2581520"
  },
  {
    "text": "the user says they want to use an NFS volume as a block device Uh as far as the co is concerned that seemed that's",
    "start": "2581520",
    "end": "2588640"
  },
  {
    "text": "fine We're going to call through to the storage provider to say validate volume capabilities We're going to call the NFS",
    "start": "2588640",
    "end": "2595040"
  },
  {
    "text": "volume plugin and we're going to say the user intends to use this as a block device Is that okay nfs cannot be used",
    "start": "2595040",
    "end": "2600960"
  },
  {
    "text": "as a block device So it's going to reject the call and that's an indication uh to the co that this is an invalid uh",
    "start": "2600960",
    "end": "2607359"
  },
  {
    "text": "request by the user Uh so the idea with validate volume capabilities is that uh",
    "start": "2607359",
    "end": "2613920"
  },
  {
    "text": "it's basically to handle pre-provisioned volumes Thanks for the clarification",
    "start": "2613920",
    "end": "2619760"
  },
  {
    "text": "Sorry about that All right we're going to move on to node service This is a lot simpler a lot fewer calls uh these are",
    "start": "2619760",
    "end": "2627680"
  },
  {
    "text": "uh RPCs that must be uh that will be called on the node machines themselves",
    "start": "2627680",
    "end": "2633599"
  },
  {
    "text": "Uh so node publish volume and node unpublish volume are the uh counterparts to controller publish volume and",
    "start": "2633599",
    "end": "2640000"
  },
  {
    "text": "controller unpublished volume Uh for the most part these are u responsible for",
    "start": "2640000",
    "end": "2646319"
  },
  {
    "text": "making a making the volume available at a target path uh whether that means uh",
    "start": "2646319",
    "end": "2651920"
  },
  {
    "text": "mounting a device or mounting a share or whatever that means for a particular volume plugin you can do that here Uh",
    "start": "2651920",
    "end": "2658880"
  },
  {
    "text": "the second call here probe node uh is used to by the co to verify that all the",
    "start": "2658880",
    "end": "2665839"
  },
  {
    "text": "dependencies that a volume plug-in has uh are available Uh so the idea here is",
    "start": "2665839",
    "end": "2671440"
  },
  {
    "text": "that after a volume plug-in is deployed onto a system uh there are you know the",
    "start": "2671440",
    "end": "2677119"
  },
  {
    "text": "storage plugin is running on on all the nodes for example uh but do these nodes",
    "start": "2677119",
    "end": "2683280"
  },
  {
    "text": "have all the requisite bits that are required in order to run this storage plugin uh and so in order to figure this",
    "start": "2683280",
    "end": "2689359"
  },
  {
    "text": "out what the co will do is call probe node against the volume plugin on each node and this call the storage provider",
    "start": "2689359",
    "end": "2696319"
  },
  {
    "text": "can do whatever they want to verify whether the the the bits the binaries uh",
    "start": "2696319",
    "end": "2701839"
  },
  {
    "text": "kernel modules etc are actually available uh on that machine and if they",
    "start": "2701839",
    "end": "2707440"
  },
  {
    "text": "fail then that is an indication to the co that this volume plugin is unavailable to their end users If it",
    "start": "2707440",
    "end": "2713760"
  },
  {
    "text": "succeeds then the co can go ahead and start scheduling workloads for that particular storage type Am I correct to",
    "start": "2713760",
    "end": "2720640"
  },
  {
    "text": "assume that this function should be called infrequently when the launch plugin started or some something like",
    "start": "2720640",
    "end": "2726000"
  },
  {
    "text": "that and not per each volume that needs to be published correct Uh it should be",
    "start": "2726000",
    "end": "2731200"
  },
  {
    "text": "called once on deployment Uh there is a second uh version of this that we're uh",
    "start": "2731200",
    "end": "2736640"
  },
  {
    "text": "considering for future uh versions of the spec which would be to which would",
    "start": "2736640",
    "end": "2741680"
  },
  {
    "text": "be per volume to figure out the health of the underlying storage service Uh and the idea there would be to uh",
    "start": "2741680",
    "end": "2749640"
  },
  {
    "text": "uh it would be called more frequently throughout and figure out if the underlying volume uh or the underlying",
    "start": "2749640",
    "end": "2756240"
  },
  {
    "text": "storage uh becomes unavailable for any reason the disk is corrupt anything like that Uh and let the storage system know",
    "start": "2756240",
    "end": "2763440"
  },
  {
    "text": "that call is not part of the v.0 spec Uh we're hoping to implement that in the future Hey T just one question Have you",
    "start": "2763440",
    "end": "2770800"
  },
  {
    "text": "considered the case where depending on the results of probe you might publish different kinds of volumes yes",
    "start": "2770800",
    "end": "2778880"
  },
  {
    "text": "Sorry What do you mean by publish just to make sure we're on the same So if if uh if a kernel module is available on a",
    "start": "2778880",
    "end": "2786720"
  },
  {
    "text": "node we might mount we might publish a different kind of volume depending on",
    "start": "2786720",
    "end": "2791760"
  },
  {
    "text": "the results of of probe So so NFS versus a block device",
    "start": "2791760",
    "end": "2799040"
  },
  {
    "text": "Uh so the way that we uh imagine probe to be used is that we call it per plugin",
    "start": "2799040",
    "end": "2804400"
  },
  {
    "text": "and if for any reason it reports uh an error that is an indication that that",
    "start": "2804400",
    "end": "2810319"
  },
  {
    "text": "particular plugin is not ready uh that the co should not schedule any workloads",
    "start": "2810319",
    "end": "2815920"
  },
  {
    "text": "that depend on it That's an interesting idea I think the intent was that this was a verification step but I think your",
    "start": "2815920",
    "end": "2823200"
  },
  {
    "text": "question is more of is this a decision tree step where that's right I don't",
    "start": "2823200",
    "end": "2828960"
  },
  {
    "text": "know if we considered that when you put in the steps",
    "start": "2828960",
    "end": "2834319"
  },
  {
    "text": "I'm just thinking I'm thinking of cases where um like even at the controller service level um before publishing a",
    "start": "2834319",
    "end": "2841720"
  },
  {
    "text": "volume the actual capabilities of a given node might influence which kind of",
    "start": "2841720",
    "end": "2846800"
  },
  {
    "text": "volume gets published [Music] I would expect speaking from the cloud",
    "start": "2846800",
    "end": "2853359"
  },
  {
    "text": "boundary perspective is much more likely to affect where workloads get placed Um",
    "start": "2853359",
    "end": "2859440"
  },
  {
    "text": "it would be really you know for us anybody kind of weird to have the",
    "start": "2859440",
    "end": "2864960"
  },
  {
    "text": "orchestration layer just pick some random storage type Usually the",
    "start": "2864960",
    "end": "2870960"
  },
  {
    "text": "workload's going to have some opinion about what the storage type is and we're going to try to find a node that can",
    "start": "2870960",
    "end": "2877520"
  },
  {
    "text": "satisfy that That that feels like kind of like a later version of functionality considering like where we're at today",
    "start": "2877520",
    "end": "2884079"
  },
  {
    "text": "and putting all this together But it does seem like a neat idea Uh it sounds like something that I think close the",
    "start": "2884079",
    "end": "2890720"
  },
  {
    "text": "door on but it also seems like not something to right now Why don't I I don't know how you get gathering",
    "start": "2890720",
    "end": "2896720"
  },
  {
    "text": "feedback but why don't I write out a scenario for this it's especially interesting in cases where the actual",
    "start": "2896720",
    "end": "2902720"
  },
  {
    "text": "like take you know GKE or others where the the actual OS is very constrained um",
    "start": "2902720",
    "end": "2909359"
  },
  {
    "text": "in terms of what kernel module drivers are available um that it might influence",
    "start": "2909359",
    "end": "2914480"
  },
  {
    "text": "the publishing publishing decision upstream at the controller level depending on what's available on the",
    "start": "2914480",
    "end": "2920480"
  },
  {
    "text": "node Okay Yeah we could take that conversation Yep I I I was just curious",
    "start": "2920480",
    "end": "2926880"
  },
  {
    "text": "if you thought if you guys thought through this Thanks Cool So so um how many more slides do you have um I've got",
    "start": "2926880",
    "end": "2933440"
  },
  {
    "text": "one more slide Let's we could do let's say two more slides Okay perfect Let's let's try and get those and then um I'd",
    "start": "2933440",
    "end": "2940079"
  },
  {
    "text": "like to leave just just a minute or two at the end to collect uh other topics Thanks I'll uh speed through this Uh",
    "start": "2940079",
    "end": "2946160"
  },
  {
    "text": "last command over here is node get capabilities which is the counterpart to the controller get capabilities The idea",
    "start": "2946160",
    "end": "2951920"
  },
  {
    "text": "here is if there are any optional calls this is a mechanism by which you can the co can use it to discover those Uh with",
    "start": "2951920",
    "end": "2959359"
  },
  {
    "text": "a spec as defined so far on the node side of things there are no optional",
    "start": "2959359",
    "end": "2964480"
  },
  {
    "text": "calls Uh probe node node publish and unpublish are all required Uh so",
    "start": "2964480",
    "end": "2970000"
  },
  {
    "text": "essentially this is a no op for the time being Next up is the identity service",
    "start": "2970000",
    "end": "2975040"
  },
  {
    "text": "These are calls that must be implemented by both the node plugin as well as the controller plugin Uh the first call here",
    "start": "2975040",
    "end": "2980640"
  },
  {
    "text": "is get supported versions Uh this is uh just a dumb call that says these are all",
    "start": "2980640",
    "end": "2986079"
  },
  {
    "text": "the uh versions of the CI CSI spec that a particular volume plug-in uh",
    "start": "2986079",
    "end": "2991520"
  },
  {
    "text": "understands and supports Uh so that uh if a client uh speaks the co can use",
    "start": "2991520",
    "end": "2998400"
  },
  {
    "text": "this to verify that the ver the version that it intends to talk to the the plug-in uh is supported Uh next up is",
    "start": "2998400",
    "end": "3007280"
  },
  {
    "text": "get plug-in info and this is a mechanism to uh get the plug-in uh version",
    "start": "3007280",
    "end": "3013119"
  },
  {
    "text": "information plug-in name and any optional manifest information about that particular instance of the",
    "start": "3013119",
    "end": "3019079"
  },
  {
    "text": "plugin Uh we're going to skip over the life cycles uh and jump to our last",
    "start": "3019079",
    "end": "3024640"
  },
  {
    "text": "slide over here which is what the current status is Uh we have a repository where the spec is currently",
    "start": "3024640",
    "end": "3030480"
  },
  {
    "text": "hosted Uh we have a working group with a link there you can feel free to join that Uh and we are planning to hold uh",
    "start": "3030480",
    "end": "3038000"
  },
  {
    "text": "regular uh monthly syncs uh that are going to be sent out to that Google group Uh CO integrations are being",
    "start": "3038000",
    "end": "3044640"
  },
  {
    "text": "tracked in those issues at the bottom So the next steps for us so for for Q2 the",
    "start": "3044640",
    "end": "3050400"
  },
  {
    "text": "plan was to have uh a draft of the spec uh published which is now published Uh",
    "start": "3050400",
    "end": "3056400"
  },
  {
    "text": "and then for Q3 the plan is for us to go back to our respective communities Kubernetes MSOS uh Cloud Foundry and",
    "start": "3056400",
    "end": "3062720"
  },
  {
    "text": "Docker and uh think about what a prototype implementation would look like",
    "start": "3062720",
    "end": "3068880"
  },
  {
    "text": "uh and then use that to revise the implementation of the uh spec uh and uh",
    "start": "3068880",
    "end": "3075599"
  },
  {
    "text": "once we uh all have something along the lines of a working prototype uh uh not",
    "start": "3075599",
    "end": "3082240"
  },
  {
    "text": "all of us at least two of the uh cos have a working prototype then we can",
    "start": "3082240",
    "end": "3087680"
  },
  {
    "text": "move the CSI spec towards 1.0 know uh and uh that is all that I have any",
    "start": "3087680",
    "end": "3095520"
  },
  {
    "text": "questions Thanks Aden G Let's take a couple last quick",
    "start": "3095520",
    "end": "3103200"
  },
  {
    "text": "questions and then we'll leave two minutes or one to just um collect some future topics Oh this is funny I just",
    "start": "3103200",
    "end": "3110160"
  },
  {
    "text": "wonder do you have like a polling service um for issues like it create a volume and volume may not be industry",
    "start": "3110160",
    "end": "3116720"
  },
  {
    "text": "coming back there no synchronous coming back there's no asynchronous call um to",
    "start": "3116720",
    "end": "3122079"
  },
  {
    "text": "notify the volume is ready but do have a follow up like a polling service to power if the volume is available but",
    "start": "3122079",
    "end": "3128400"
  },
  {
    "text": "sometimes when delete the volume and create a volume takes a longer time especially you have snapshots from it",
    "start": "3128400",
    "end": "3134319"
  },
  {
    "text": "and that's cause gpc timeouts uh if you have like a ping call that's eliminates",
    "start": "3134319",
    "end": "3140079"
  },
  {
    "text": "a lots of complexities so is uh your question whether uh the",
    "start": "3140079",
    "end": "3145920"
  },
  {
    "text": "calls are able to be executed asynchronously oh I That's a got a followup ping status like describe kind",
    "start": "3145920",
    "end": "3153280"
  },
  {
    "text": "of status not just a binary true the way that we've speced out we expect these",
    "start": "3153280",
    "end": "3159520"
  },
  {
    "text": "calls to be blocking and only return when the operation is successfully completed completed uh but at the same",
    "start": "3159520",
    "end": "3166400"
  },
  {
    "text": "time be item potent so that if there is an interruption due to network issues or",
    "start": "3166400",
    "end": "3171680"
  },
  {
    "text": "some other reason the recovery path for the co is simply to recall uh retry um",
    "start": "3171680",
    "end": "3178240"
  },
  {
    "text": "and Of course on the co implementation side uh you can implement concurrency which is what we're going to do on the",
    "start": "3178240",
    "end": "3184400"
  },
  {
    "text": "Kubernetes side but as far as these uh API calls are concerned they are going to be blocking and return only when uh",
    "start": "3184400",
    "end": "3191599"
  },
  {
    "text": "the request is completed Uh but how about the request is um extended long",
    "start": "3191599",
    "end": "3197280"
  },
  {
    "text": "like a volume takes a longer time than expected and jobs time loss",
    "start": "3197280",
    "end": "3203440"
  },
  {
    "text": "Then this sounds like this sounds like a good topic for a future conversation You",
    "start": "3203440",
    "end": "3208880"
  },
  {
    "text": "know the blocking model is simple and easy to implement but it's been repeatedly proven to be insufficient in",
    "start": "3208880",
    "end": "3215119"
  },
  {
    "text": "in the operational environment Yeah I I think I think we should like Yeah I think you should probably open",
    "start": "3215119",
    "end": "3221040"
  },
  {
    "text": "the issue there and then we can start discussion in the GitHub um right and then we can like final like we can",
    "start": "3221040",
    "end": "3227359"
  },
  {
    "text": "revise the spec if we find that that's necessary I I don't think we should set the door here Uh just let's revise that",
    "start": "3227359",
    "end": "3233680"
  },
  {
    "text": "during the discussion in the GitHub issue All right Thank you Awesome Okay",
    "start": "3233680",
    "end": "3238880"
  },
  {
    "text": "Um so uh this has been great Thanks so much Saden G for presenting this Um so",
    "start": "3238880",
    "end": "3244640"
  },
  {
    "text": "just just so folks understand um you know the the there's a the goal ultimately is to propose CSI into CNCF",
    "start": "3244640",
    "end": "3253920"
  },
  {
    "text": "Um and uh you know but that that's that's not something that um you know that's not what this call is for That'll",
    "start": "3253920",
    "end": "3259760"
  },
  {
    "text": "be a call with the TOC and and that'll be something that we do in the future Um so I just want to put that out there in case anybody had questions about that uh",
    "start": "3259760",
    "end": "3266400"
  },
  {
    "text": "or curious about that So I know we're basically out of time and I want to respect that for people Um if folks",
    "start": "3266400",
    "end": "3272400"
  },
  {
    "text": "would like to really quick just brainstorm um uh if there's things they'd love to be discussing with",
    "start": "3272400",
    "end": "3278240"
  },
  {
    "text": "respect to storage uh and cloud native Um if folks want to throw things out right now they can Alternatively um if",
    "start": "3278240",
    "end": "3285200"
  },
  {
    "text": "we if you can fill in the dock that uh Chris started Um Chris if we can add just a little section for brainstorming",
    "start": "3285200",
    "end": "3291680"
  },
  {
    "text": "future um topics and if folks can just go add topics there then I can reach out",
    "start": "3291680",
    "end": "3297680"
  },
  {
    "text": "to you afterwards and and um we can discuss them Awesome And I think next meeting is in two weeks",
    "start": "3297680",
    "end": "3304280"
  },
  {
    "text": "Okay So yeah I'll just be respectful of everyone's time Um please toss some topics in there and uh and then we'll",
    "start": "3304280",
    "end": "3311200"
  },
  {
    "text": "we'll go from there Cool Thank you All right Thanks so much",
    "start": "3311200",
    "end": "3317319"
  },
  {
    "text": "everybody Great great work everyone Thanks Great Thanks",
    "start": "3317319",
    "end": "3322800"
  },
  {
    "text": "Thanks Byebye",
    "start": "3322800",
    "end": "3325920"
  }
]