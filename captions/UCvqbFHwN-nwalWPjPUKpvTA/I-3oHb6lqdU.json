[
  {
    "start": "0",
    "end": "466000"
  },
  {
    "text": "so my name is Mandar I work on sto at",
    "start": "30",
    "end": "6210"
  },
  {
    "text": "Google and if you're here for fine-grained mesh telemetry then you're",
    "start": "6210",
    "end": "12210"
  },
  {
    "text": "in the right place otherwise that is still what you're gonna hear hi my name",
    "start": "12210",
    "end": "17760"
  },
  {
    "text": "is quad I also work at Google on Easter and the 3rd one who worked on this she",
    "start": "17760",
    "end": "24779"
  },
  {
    "text": "job she couldn't come so so before we",
    "start": "24779",
    "end": "30269"
  },
  {
    "text": "start since this is about service mesh we're just gonna take care of some preliminaries why service mesh I think",
    "start": "30269",
    "end": "40649"
  },
  {
    "text": "that is probably covered a bit by now but I will still cover it a little bit",
    "start": "40649",
    "end": "45989"
  },
  {
    "text": "why do we need granular telemetry that's another thing we have to cover what is",
    "start": "45989",
    "end": "51660"
  },
  {
    "text": "available without the work that we did and then what we have added so we will",
    "start": "51660",
    "end": "58020"
  },
  {
    "text": "kind of go through that so now consider the graph on the right that and then",
    "start": "58020",
    "end": "67650"
  },
  {
    "text": "consider that it represents just a monolith every node in the monolith is a",
    "start": "67650",
    "end": "73799"
  },
  {
    "text": "module and every edge in the graph is a function call now when we decompose the",
    "start": "73799",
    "end": "81450"
  },
  {
    "text": "monolith and we go to micro-services the easiest way to just draw a border",
    "start": "81450",
    "end": "88500"
  },
  {
    "text": "around a module and say ok that's that's my service and now the picture still looks the same except those all those",
    "start": "88500",
    "end": "95189"
  },
  {
    "text": "edges now are going to be our pcs they're going to go over the network and",
    "start": "95189",
    "end": "101030"
  },
  {
    "text": "then that's when we move to kubernetes for example so essentially what we have",
    "start": "101030",
    "end": "107549"
  },
  {
    "text": "done is we have moved from something that was very fast very reliable and",
    "start": "107549",
    "end": "114600"
  },
  {
    "text": "very secure to something that's not as",
    "start": "114600",
    "end": "119759"
  },
  {
    "text": "fast not as reliable and not as secure an in-memory function call simply does",
    "start": "119759",
    "end": "125700"
  },
  {
    "text": "not have that many modes of failure right you make the call and the call goes through not the same with an RPC",
    "start": "125700",
    "end": "132569"
  },
  {
    "text": "so we introduced a whole class of problems that did not exist before and and of course we know why micro servers",
    "start": "132569",
    "end": "140879"
  },
  {
    "text": "are good I'm excluding that part from here but as far as the call is concerned",
    "start": "140879",
    "end": "149540"
  },
  {
    "text": "we actually did take a few steps back so what service mesh tries to do is it",
    "start": "149540",
    "end": "157140"
  },
  {
    "text": "tries to restore some of those qualities that we lost when we moved away well",
    "start": "157140",
    "end": "162150"
  },
  {
    "text": "when we move towards micro services there are many service meshes but my",
    "start": "162150",
    "end": "170669"
  },
  {
    "text": "favorite is sto and of course these two is based on envoy and we inject a",
    "start": "170669",
    "end": "180239"
  },
  {
    "text": "sidecar and a pilot which is the control",
    "start": "180239",
    "end": "185819"
  },
  {
    "text": "plane your configures Sto so now we'll just see how service mesh is realized so",
    "start": "185819",
    "end": "192980"
  },
  {
    "text": "first of all we start with this simple picture just three services there is",
    "start": "192980",
    "end": "199979"
  },
  {
    "text": "product service in the middle shopping service and a shipping service the",
    "start": "199979",
    "end": "206190"
  },
  {
    "text": "direction of the arrows indicate the calls and these boxes could be parts or",
    "start": "206190",
    "end": "213479"
  },
  {
    "text": "workloads but for this discussion consider that consider that these are parts and now they're just calling just",
    "start": "213479",
    "end": "219569"
  },
  {
    "text": "normal not nothing special here now magic and we inject envoy sidecar",
    "start": "219569",
    "end": "228780"
  },
  {
    "text": "proxies in each and every part we have to make sure that any traffic that that",
    "start": "228780",
    "end": "236340"
  },
  {
    "text": "previously flowed directly between the applications is now mediated through the proxy and there are many ways to inject",
    "start": "236340",
    "end": "243780"
  },
  {
    "text": "this proxy there's iptables magic you can use HTTP proxy variable and there",
    "start": "243780",
    "end": "249209"
  },
  {
    "text": "are other ways to as long as you use one of those ways and get the proxy in the middle we have what we have a place",
    "start": "249209",
    "end": "258900"
  },
  {
    "text": "where we can implement functions of a service mesh so the three pillars are routing",
    "start": "258900",
    "end": "264370"
  },
  {
    "text": "security and observability we're going to talk about observability for for the",
    "start": "264370",
    "end": "270130"
  },
  {
    "text": "rest of the talk a lot about upstream downstream nomenclature that I mean that",
    "start": "270130",
    "end": "277419"
  },
  {
    "text": "is consistent with envoy because that's what we use the arrows are pointing upstream so product/service is upstream",
    "start": "277419",
    "end": "284110"
  },
  {
    "text": "of the shopping service and conversely shopping services downstream from the",
    "start": "284110",
    "end": "289570"
  },
  {
    "text": "product service this does not so now we",
    "start": "289570",
    "end": "295060"
  },
  {
    "text": "need to continuously and dynamically configure the data plane the proxy is is",
    "start": "295060",
    "end": "301750"
  },
  {
    "text": "the data plane and then we add the actual control plane on top which is",
    "start": "301750",
    "end": "306940"
  },
  {
    "text": "going to dynamic as you can figure it it uses the xdist protocol to configure",
    "start": "306940",
    "end": "312850"
  },
  {
    "text": "onboard that protocol is defined by envoy there are there are many control",
    "start": "312850",
    "end": "319840"
  },
  {
    "text": "planes that are available sto pilot is of course the OSS sto",
    "start": "319840",
    "end": "325150"
  },
  {
    "text": "control plane account vendors have their own so for example google has traffic",
    "start": "325150",
    "end": "330340"
  },
  {
    "text": "director as our control plane we are going to talk about sto so for the rest",
    "start": "330340",
    "end": "338470"
  },
  {
    "text": "of the talk so kind of the purpose of this talk right what questions are we",
    "start": "338470",
    "end": "346270"
  },
  {
    "text": "trying to answer when we look at a service mesh so there are certain",
    "start": "346270",
    "end": "352090"
  },
  {
    "text": "questions that are at kind of a whole mesh level that sre monitoring the entire mesh may ask and these questions",
    "start": "352090",
    "end": "359620"
  },
  {
    "text": "are of the form who's talking to whom are there any links or are there any",
    "start": "359620",
    "end": "366520"
  },
  {
    "text": "services that are more loaded than others do I see like many errors",
    "start": "366520",
    "end": "372669"
  },
  {
    "text": "somewhere and it really looks like the service graph that is actually in the",
    "start": "372669",
    "end": "378070"
  },
  {
    "text": "picture so that's the view that you're interested interested in when you go down to a service owners perspective now",
    "start": "378070",
    "end": "387099"
  },
  {
    "text": "you're interested in specific activity that happens around your own service in",
    "start": "387099",
    "end": "394180"
  },
  {
    "text": "that case you do",
    "start": "394180",
    "end": "397229"
  },
  {
    "text": "you",
    "start": "402160",
    "end": "404220"
  },
  {
    "start": "466000",
    "end": "939000"
  },
  {
    "text": "on that cluster so all those would be client-side cluster sets on the",
    "start": "466080",
    "end": "472710"
  },
  {
    "text": "other side the server-side stats are captured by listener stats and these are",
    "start": "472710",
    "end": "479040"
  },
  {
    "text": "called downstream stats in both these cases we have used the Prometheus format",
    "start": "479040",
    "end": "488490"
  },
  {
    "text": "to express the statistics with its Buddhist dimensions",
    "start": "488490",
    "end": "494750"
  },
  {
    "text": "so let's first consider client side stats so upstream requests total is like",
    "start": "494750",
    "end": "505260"
  },
  {
    "text": "one of the standard stats that you can get it is dimensioned by two quite",
    "start": "505260",
    "end": "511740"
  },
  {
    "text": "useful dimensions or already one of them is cluster name and the other one is response coder in this case it's the",
    "start": "511740",
    "end": "518370"
  },
  {
    "text": "response code class if you apply a rate function on it and track it over time",
    "start": "518370",
    "end": "525270"
  },
  {
    "text": "you can get rates and then you can know what to expect what what is the norm and",
    "start": "525270",
    "end": "531200"
  },
  {
    "text": "because there is the response code class dimension you also know the error rates",
    "start": "531200",
    "end": "537510"
  },
  {
    "text": "and success rates and like for xx so if the client is doing something wrong",
    "start": "537510",
    "end": "542730"
  },
  {
    "text": "versus server is doing something wrong the other part is quite interesting",
    "start": "542730",
    "end": "548220"
  },
  {
    "text": "because that dimension is the cluster name if the control plane has used a",
    "start": "548220",
    "end": "555360"
  },
  {
    "text": "reasonable name for the cluster then you will actually get very useful stat here",
    "start": "555360",
    "end": "562680"
  },
  {
    "text": "right the cluster name is actually pointing to the destination of this traffic in this case it's well in this",
    "start": "562680",
    "end": "571260"
  },
  {
    "text": "example is going to product SVC so okay well it should have said no no that's",
    "start": "571260",
    "end": "578580"
  },
  {
    "text": "right that's right it is it is going to progress we see now if is there like",
    "start": "578580",
    "end": "587670"
  },
  {
    "text": "still what is missing maybe you want to know if a request ended up in a",
    "start": "587670",
    "end": "592830"
  },
  {
    "text": "different availability zone right how would we add that dimension to the to",
    "start": "592830",
    "end": "598380"
  },
  {
    "text": "the client side stand and it is not a very uncommon situation",
    "start": "598380",
    "end": "603790"
  },
  {
    "text": "right in in one cluster you can have some endpoints from one availability zone 7 points from another availability",
    "start": "603790",
    "end": "609550"
  },
  {
    "text": "it is on and you would still want to know where the traffic ended up so how",
    "start": "609550",
    "end": "615160"
  },
  {
    "text": "would you put that information there so in this example we want to have zone equals the u.s. West one a like that",
    "start": "615160",
    "end": "622810"
  },
  {
    "text": "that sort of information if a dimension is a property of the cluster then it is",
    "start": "622810",
    "end": "630279"
  },
  {
    "text": "possible to add it in in the status tip you can either supply this alternate",
    "start": "630279",
    "end": "637150"
  },
  {
    "text": "stack name and you can encode whatever you want in that or we can just use this cluster name itself to encode whatever",
    "start": "637150",
    "end": "644740"
  },
  {
    "text": "else you want in order to do that though since it is done by the control plane it",
    "start": "644740",
    "end": "650620"
  },
  {
    "text": "has to be a property of the cluster so that the control plane knows what to put there",
    "start": "650620",
    "end": "656500"
  },
  {
    "text": "and since Zone in our example is not a property of the cluster because one",
    "start": "656500",
    "end": "663910"
  },
  {
    "text": "cluster includes n points from multiple zones that this dimension cannot be added by what is available here so you",
    "start": "663910",
    "end": "673839"
  },
  {
    "text": "really need some support from the data plane in in order to do this now",
    "start": "673839",
    "end": "680380"
  },
  {
    "text": "consider the other question from the server side who is calling me",
    "start": "680380",
    "end": "685410"
  },
  {
    "text": "so there is a there is an analogous stat on the on the listener site called",
    "start": "685410",
    "end": "690850"
  },
  {
    "text": "downstream request total and it is also dimension by response code so that's",
    "start": "690850",
    "end": "698080"
  },
  {
    "text": "just like before and the other dimension is listener now listener dimension can",
    "start": "698080",
    "end": "703360"
  },
  {
    "text": "be useful sometimes but in this case it's not really adding much value it",
    "start": "703360",
    "end": "708760"
  },
  {
    "text": "uses an IP address most services will just have one listener and it is worth",
    "start": "708760",
    "end": "714580"
  },
  {
    "text": "this so it's not really adding a whole lot of information and then the crucial",
    "start": "714580",
    "end": "720700"
  },
  {
    "text": "point the question that we asked earlier who is calling me that information is completely missing so as you can see",
    "start": "720700",
    "end": "729040"
  },
  {
    "text": "that the downstream stats are are a bit sparse here so envoy Anita stats are they have some",
    "start": "729040",
    "end": "740320"
  },
  {
    "text": "coverage good coverage on the client side with still some missing parts as we",
    "start": "740320",
    "end": "746110"
  },
  {
    "text": "saw and less coverage on the server side",
    "start": "746110",
    "end": "751350"
  },
  {
    "text": "so it's very fast it's purpose-built but only turns left",
    "start": "751410",
    "end": "759090"
  },
  {
    "text": "so if there are any NASCAR fans here they would probably get the job but",
    "start": "759090",
    "end": "767410"
  },
  {
    "text": "that's fine so we want something that can turn left right and still move fast",
    "start": "767410",
    "end": "774580"
  },
  {
    "text": "so just a unrelated to technology question what can top or NASCAR right",
    "start": "774580",
    "end": "784560"
  },
  {
    "text": "all right yes form oh okay so the wish list that",
    "start": "784650",
    "end": "789730"
  },
  {
    "text": "that that we want is we want to have peer aware metrics so we can dimension our metrics by pure properties like we",
    "start": "789730",
    "end": "800020"
  },
  {
    "text": "said like we saw before the availability zone it would be a property of the peer so we do want to be able to dimension",
    "start": "800020",
    "end": "807010"
  },
  {
    "text": "our metrics that way in this case we have de mentioned it with color equals",
    "start": "807010",
    "end": "812650"
  },
  {
    "text": "product and then we also want to be able to dimension metrics by traffic",
    "start": "812650",
    "end": "819580"
  },
  {
    "text": "properties so headers or like anything else else like that maybe use open API",
    "start": "819580",
    "end": "826840"
  },
  {
    "text": "to classify something put the request here now some of these things are",
    "start": "826840",
    "end": "831880"
  },
  {
    "text": "actually possible so you can have like virtual cluster and then but it is quite",
    "start": "831880",
    "end": "837850"
  },
  {
    "text": "tedious it results in very large configurations so we need we need to",
    "start": "837850",
    "end": "843760"
  },
  {
    "text": "need something more so how do we impart peer awareness to this flow right what",
    "start": "843760",
    "end": "851290"
  },
  {
    "text": "are our options there is actually a very simple kind of obvious option just send",
    "start": "851290",
    "end": "860860"
  },
  {
    "text": "it in a header right so the simplest option is you when the client makes a call to the",
    "start": "860860",
    "end": "867410"
  },
  {
    "text": "server it puts its own metadata in a header it also puts an ID of itself in",
    "start": "867410",
    "end": "876290"
  },
  {
    "text": "the header so now when the call goes to the other side so we will know who called it and",
    "start": "876290",
    "end": "882500"
  },
  {
    "text": "whatever metadata you packed and then the server responds with it's its own",
    "start": "882500",
    "end": "888170"
  },
  {
    "text": "information so at the end of the call both parties know who they each other is",
    "start": "888170",
    "end": "894740"
  },
  {
    "text": "and now you can use this information to dimension metrics which are whichever way you like this is a very very simple",
    "start": "894740",
    "end": "901550"
  },
  {
    "text": "protocol to implement like few lines of code in most cases it is fully stateless",
    "start": "901550",
    "end": "909790"
  },
  {
    "text": "but as with many stateless things it is not really efficient one of the things",
    "start": "909790",
    "end": "917420"
  },
  {
    "text": "that that you'll see in this protocol the reason why it's not efficient is because you'll end up exchanging the",
    "start": "917420",
    "end": "923450"
  },
  {
    "text": "same information over and over by two parts are communicating they're going to tell each other the same thing over and",
    "start": "923450",
    "end": "930680"
  },
  {
    "text": "over like thousands of times that's going to add to CPU and latency so what",
    "start": "930680",
    "end": "940220"
  },
  {
    "start": "939000",
    "end": "969000"
  },
  {
    "text": "manner described is an instance of a basic protocol how to exchange metadata between peers proxies general scheme is",
    "start": "940220",
    "end": "948529"
  },
  {
    "text": "that every we start every proxy of a small metadata manifest that says which pot it belongs to which namespace what",
    "start": "948529",
    "end": "955490"
  },
  {
    "text": "labels on the pot may be availability zone we never to practice communicate they send this metadata in addition to",
    "start": "955490",
    "end": "962690"
  },
  {
    "text": "the normal traffic and that way each portion knows what added pew is so this",
    "start": "962690",
    "end": "969500"
  },
  {
    "start": "969000",
    "end": "1042000"
  },
  {
    "text": "protocol works for HTTP headers but it has performance issues and but we have",
    "start": "969500",
    "end": "974839"
  },
  {
    "text": "some ideas how to improve upon that first of all we split the metadata into key in the payload so that any",
    "start": "974839",
    "end": "981380"
  },
  {
    "text": "computation that depends the payload can be cached using the key including the",
    "start": "981380",
    "end": "986810"
  },
  {
    "text": "wire transfer and second idea is that the cause will control both sides of the",
    "start": "986810",
    "end": "991880"
  },
  {
    "text": "communication we can upgrade the protocol to HTTP 2 and HP 2 has these",
    "start": "991880",
    "end": "996920"
  },
  {
    "text": "nifty features like metadata frames is that this these ascend in addition to normal traffic but they",
    "start": "996920",
    "end": "1003010"
  },
  {
    "text": "don't count so that way you can associate metadata frames with either individual request streams or you can put it into",
    "start": "1003010",
    "end": "1009399"
  },
  {
    "text": "connections unfortunately not every box implements this is a very recent feature",
    "start": "1009399",
    "end": "1014680"
  },
  {
    "text": "so it has some downsides so what about other protocols right so if you if you",
    "start": "1014680",
    "end": "1019750"
  },
  {
    "text": "don't just use HTTP what about TCP so if you're willing to tunnel everything for",
    "start": "1019750",
    "end": "1025390"
  },
  {
    "text": "HTTP using things like HTTP connect method or jpc bi-directional streaming then the technique we just described",
    "start": "1025390",
    "end": "1032020"
  },
  {
    "text": "applies and but what about just what ICP right maybe you don't want to send",
    "start": "1032020",
    "end": "1037569"
  },
  {
    "text": "everything for HTTP so you need in this case we resort to sending just raw bytes and the way that this would work is that",
    "start": "1037569",
    "end": "1044199"
  },
  {
    "start": "1042000",
    "end": "1120000"
  },
  {
    "text": "we put an extension into every proxy that with every connection over TCP it",
    "start": "1044199",
    "end": "1050860"
  },
  {
    "text": "before we send all the standard payload we just prefix the metadata as a first bytes on the string the prefix is length",
    "start": "1050860",
    "end": "1058690"
  },
  {
    "text": "we fix so first thing is a header and that way works for both sides",
    "start": "1058690",
    "end": "1064830"
  },
  {
    "text": "unfortunately has an issue of course because both proxy have to be expecting this incoming so that they can",
    "start": "1064830",
    "end": "1071230"
  },
  {
    "text": "disambiguate so that has a how do we make sure that proxies agree on this so",
    "start": "1071230",
    "end": "1078610"
  },
  {
    "text": "one idea is that we can make the control plane just tell the tell the proxies that the other side is an invoice ID",
    "start": "1078610",
    "end": "1084040"
  },
  {
    "text": "card so that way you know each box you would know which commit which connections are to invoice which ones",
    "start": "1084040",
    "end": "1090340"
  },
  {
    "text": "are not unfortunately that is it's complicate because you need to",
    "start": "1090340",
    "end": "1096040"
  },
  {
    "text": "coordinate now between the magic injection and the control plane and also you have to implement this for every",
    "start": "1096040",
    "end": "1101559"
  },
  {
    "text": "single control plane out there and we also would like to keep all the choices of control planes here and the second",
    "start": "1101559",
    "end": "1108070"
  },
  {
    "text": "idea is that in a service mesh like East you'll all the connections already wrapped in two jealous because we have",
    "start": "1108070",
    "end": "1113350"
  },
  {
    "text": "angeles automatically enabled so we can piggyback on that and the way it would",
    "start": "1113350",
    "end": "1119290"
  },
  {
    "text": "work is that as part of els the first message you see on chalice is called",
    "start": "1119290",
    "end": "1124480"
  },
  {
    "start": "1120000",
    "end": "1169000"
  },
  {
    "text": "client hello it has a field called LPM which is an extension to TLS and it's",
    "start": "1124480",
    "end": "1129850"
  },
  {
    "text": "basically application layer protocol negotiation if you it's a list of strings and we can insert",
    "start": "1129850",
    "end": "1135700"
  },
  {
    "text": "a special string they're called vco2 which is the designated for protocol then the server replies of its own hello",
    "start": "1135700",
    "end": "1142059"
  },
  {
    "text": "it also has a list of protocols and the two proxies must agree on one of them and that has to be the first one so if",
    "start": "1142059",
    "end": "1148419"
  },
  {
    "text": "both proxies see that they support this protocol they will choose it and then handshakes second succeeds so in this",
    "start": "1148419",
    "end": "1156520"
  },
  {
    "text": "case we can rely on the Chile's successful as handshake to basically establish is common to them so we just",
    "start": "1156520",
    "end": "1166150"
  },
  {
    "text": "proceed normal TCP prefix so let me just step back a little and remind you why",
    "start": "1166150",
    "end": "1171549"
  },
  {
    "start": "1169000",
    "end": "1230000"
  },
  {
    "text": "we're doing all this so we're doing this work in the context of evolving each to a telemetry former architecture where we",
    "start": "1171549",
    "end": "1177970"
  },
  {
    "text": "had a central service called is to a mixer that we telemetry collector and processor every proxies would send to",
    "start": "1177970",
    "end": "1185020"
  },
  {
    "text": "this service and then we run extensions inside mixer so there is a stat extension that from which Prometheus",
    "start": "1185020",
    "end": "1192220"
  },
  {
    "text": "scrapes all the telemetry in the cluster Eastern mixer also runs a cache where it",
    "start": "1192220",
    "end": "1198130"
  },
  {
    "text": "pulls metadata from kubernetes and it joins this metadata with all the leader coming from the proxies so that we can",
    "start": "1198130",
    "end": "1204610"
  },
  {
    "text": "attach all these fine grained metrics so and the new architecture that we're trying to evolve is the where we don't",
    "start": "1204610",
    "end": "1212980"
  },
  {
    "text": "have any more issue mixer so every extension runs directly in the proxy so that means we have no longer cache and",
    "start": "1212980",
    "end": "1218830"
  },
  {
    "text": "the way we rely on the metadata exchange is that we can spread this metadata on",
    "start": "1218830",
    "end": "1224289"
  },
  {
    "text": "the cluster with on without maintaining a central cash in each proxy we also",
    "start": "1224289",
    "end": "1231280"
  },
  {
    "start": "1230000",
    "end": "1285000"
  },
  {
    "text": "would like to leverage webassembly so as part of ongoing work is to develop what some support and envoy so if you",
    "start": "1231280",
    "end": "1238690"
  },
  {
    "text": "don't know what what that means it's a it's not one standard that allows you to run a spread in portable binary format",
    "start": "1238690",
    "end": "1245620"
  },
  {
    "text": "for running extensions in a safe environment in sandbox you can compile",
    "start": "1245620",
    "end": "1253630"
  },
  {
    "text": "to us one from many languages including C++ Tanjung go rust whatnot javascript",
    "start": "1253630",
    "end": "1260200"
  },
  {
    "text": "of course and so our team has been investing lot of work in building this",
    "start": "1260200",
    "end": "1265510"
  },
  {
    "text": "support in Watson so we are working in a repo under and we were called an awesome",
    "start": "1265510",
    "end": "1270790"
  },
  {
    "text": "that's what we're building our sandbox extensions and as part of this work was",
    "start": "1270790",
    "end": "1276190"
  },
  {
    "text": "the defining a new field of sandbox API so what that means is that we would like extensions to be written against this",
    "start": "1276190",
    "end": "1281919"
  },
  {
    "text": "API so that you can run them inside anyway so the basic architecture now",
    "start": "1281919",
    "end": "1287200"
  },
  {
    "start": "1285000",
    "end": "1374000"
  },
  {
    "text": "looks like this you have any way we run an extensions inside any way in process",
    "start": "1287200",
    "end": "1292740"
  },
  {
    "text": "and we still does all the proxy related work like protocol parsing and all the",
    "start": "1292740",
    "end": "1298450"
  },
  {
    "text": "new tender confuse but it also calls back to the extensions that are loaded into envoi the extensions must be",
    "start": "1298450",
    "end": "1305230"
  },
  {
    "text": "written against these C bindings that we supply it's basically a sandbox API what that allows us is that we can either",
    "start": "1305230",
    "end": "1311290"
  },
  {
    "text": "compile them directly into envoi which we it's a method which we call non vm so",
    "start": "1311290",
    "end": "1317559"
  },
  {
    "text": "these are just statically linked libraries in em boy or you can compile to Muslim and then load them dynamically",
    "start": "1317559",
    "end": "1322960"
  },
  {
    "text": "using the ami with the vast dimensions with ample v8 so that allows us to make",
    "start": "1322960",
    "end": "1329140"
  },
  {
    "text": "a choice between whether to compile them in order random dynamically the the API",
    "start": "1329140",
    "end": "1335230"
  },
  {
    "text": "is very basic so what it gives you abilities to subscribe to the normal filter like events whenever Quest is",
    "start": "1335230",
    "end": "1343270"
  },
  {
    "text": "processed you can listen on headers Commission on data you can listen on PCP connections we also provide a shared",
    "start": "1343270",
    "end": "1350350"
  },
  {
    "text": "attribute context so it's it's a context for anything requests related that way extensions can exchange data between",
    "start": "1350350",
    "end": "1356290"
  },
  {
    "text": "each other we also allow you to make cycles so you can call out using your pc",
    "start": "1356290",
    "end": "1361809"
  },
  {
    "text": "or HTTP if you want to and finally we expose them native stats and login",
    "start": "1361809",
    "end": "1367690"
  },
  {
    "text": "subsystem for manually so that'll give you the whole native performance power",
    "start": "1367690",
    "end": "1373350"
  },
  {
    "text": "so this the way it would work in this model is that we have this metadata exchange extension that implements the",
    "start": "1373980",
    "end": "1380049"
  },
  {
    "start": "1374000",
    "end": "1408000"
  },
  {
    "text": "protocol it it reads some stuff from the node metadata in and away that includes",
    "start": "1380049",
    "end": "1387030"
  },
  {
    "text": "peer metadata it also writes stuff to the context using the data it seasoned",
    "start": "1387030",
    "end": "1393549"
  },
  {
    "text": "on the wire then the next extension kicks in and it's a starts extension it reads the",
    "start": "1393549",
    "end": "1399460"
  },
  {
    "text": "data it was written before and it also reads all the other requests data and it",
    "start": "1399460",
    "end": "1404770"
  },
  {
    "text": "I mean it omits statistics so the way it would so it's a bit of pseudocode but",
    "start": "1404770",
    "end": "1412120"
  },
  {
    "start": "1408000",
    "end": "1437000"
  },
  {
    "text": "it's you get the idea here it's standard things you're normally doing in matrix way the code you have to create a metric",
    "start": "1412120",
    "end": "1419110"
  },
  {
    "text": "we have to compute labels for dimensions you can pull data from the peer you can",
    "start": "1419110",
    "end": "1425800"
  },
  {
    "text": "find what the pull name is for the appear you can also pull data about the request and finally you call out to the",
    "start": "1425800",
    "end": "1432220"
  },
  {
    "text": "start subsystem to omit the metric and I",
    "start": "1432220",
    "end": "1438430"
  },
  {
    "start": "1437000",
    "end": "1478000"
  },
  {
    "text": "feel God just have to be aware of because this is still work in progress because we headed the stat subsystem",
    "start": "1438430",
    "end": "1443890"
  },
  {
    "text": "from anyway we get some of the performance problems that comes of it for example it was built from studies so",
    "start": "1443890",
    "end": "1449680"
  },
  {
    "text": "it means all the labels and linearize linearized the single long string so whenever you have to scrape it with",
    "start": "1449680",
    "end": "1456220"
  },
  {
    "text": "meteors it has to be gauge export and the second thing is stat subsystem has",
    "start": "1456220",
    "end": "1463390"
  },
  {
    "text": "this assumption that all the stats are associated with XDS resources things like listeners and routes so that",
    "start": "1463390",
    "end": "1470500"
  },
  {
    "text": "extensions must be careful when they try to access things that might potentially be coverage collected so I'm gonna pass",
    "start": "1470500",
    "end": "1478480"
  },
  {
    "start": "1478000",
    "end": "1515000"
  },
  {
    "text": "back to finally this is how it actually looks a nice jaw so the way we do this is by we align and east your config",
    "start": "1478480",
    "end": "1485380"
  },
  {
    "text": "resources called my filter it's a it's a basically a static patch so you can push",
    "start": "1485380",
    "end": "1491140"
  },
  {
    "text": "it in between any control plane and em boy it just inserts a few filters and",
    "start": "1491140",
    "end": "1496270"
  },
  {
    "text": "these filters do the actual work and what's notable here is this string at",
    "start": "1496270",
    "end": "1501970"
  },
  {
    "text": "the bottom for unban time this is how you select which one time you wanna use with either statically compiled in",
    "start": "1501970",
    "end": "1508300"
  },
  {
    "text": "module or or dynamically loadable watson module depending which one you use",
    "start": "1508300",
    "end": "1514889"
  },
  {
    "start": "1515000",
    "end": "1614000"
  },
  {
    "text": "okay",
    "start": "1517590",
    "end": "1520590"
  },
  {
    "text": "it's a lot of this work has actually landed in sto 1.4 which released about",
    "start": "1522600",
    "end": "1530190"
  },
  {
    "text": "two weeks ago what one or two weeks ago and these are some of the numbers that",
    "start": "1530190",
    "end": "1536810"
  },
  {
    "text": "that we have so the chart way on the right is if you use the mixer the",
    "start": "1536810",
    "end": "1545610"
  },
  {
    "text": "existing telemetry model mixer v1 and the the second one the Prometheus was",
    "start": "1545610",
    "end": "1552660"
  },
  {
    "text": "HTTP meta data exchange is what is already in 1.4 as you can see it's already a significant drop in terms of",
    "start": "1552660",
    "end": "1560430"
  },
  {
    "text": "CPU used this does not include the CPU that mixer itself used which was which",
    "start": "1560430",
    "end": "1566940"
  },
  {
    "text": "is actually almost equal to the to the proxy so that that's a significant CPU",
    "start": "1566940",
    "end": "1572490"
  },
  {
    "text": "reduction we're still in the process of",
    "start": "1572490",
    "end": "1578250"
  },
  {
    "text": "like some peers are in some some are not in the process of fully delivering the",
    "start": "1578250",
    "end": "1584430"
  },
  {
    "text": "TCP protocol that that court described earlier but we expect to get even better",
    "start": "1584430",
    "end": "1590070"
  },
  {
    "text": "performance with that because now you're no longer exchanging headers all the time",
    "start": "1590070",
    "end": "1595980"
  },
  {
    "text": "there are still more optimizations that are lined up so again we expect to get",
    "start": "1595980",
    "end": "1603060"
  },
  {
    "text": "this rich telemetry but still be as close to just native based on Y baseline",
    "start": "1603060",
    "end": "1610080"
  },
  {
    "text": "as possible so the next thing that we",
    "start": "1610080",
    "end": "1616440"
  },
  {
    "start": "1614000",
    "end": "1796000"
  },
  {
    "text": "usually track and then track often and actually even other people track is p90",
    "start": "1616440",
    "end": "1624180"
  },
  {
    "text": "and p99 for first EO so as you can see",
    "start": "1624180",
    "end": "1630630"
  },
  {
    "text": "on the right it's the p99 chart we always run baseline at the bottom",
    "start": "1630630",
    "end": "1636150"
  },
  {
    "text": "which means there is no sidecar at all and then the next line over is just",
    "start": "1636150",
    "end": "1642150"
  },
  {
    "text": "envoy with with nothing else the line at the top is what was with with mixer and",
    "start": "1642150",
    "end": "1649910"
  },
  {
    "text": "as you can see there is a significant drop in this particular experiment it's",
    "start": "1649910",
    "end": "1655510"
  },
  {
    "text": "ten millisecond drop from what it used to be so again we have made significant",
    "start": "1655510",
    "end": "1662290"
  },
  {
    "text": "progress in p99 latencies and also p90",
    "start": "1662290",
    "end": "1668070"
  },
  {
    "text": "latencies oh and actually I also have a",
    "start": "1668070",
    "end": "1675340"
  },
  {
    "text": "demo so just just going by what happened",
    "start": "1675340",
    "end": "1686290"
  },
  {
    "text": "in the beginning when I was not Des Moines I I have some okay okay I have to",
    "start": "1686290",
    "end": "1701590"
  },
  {
    "text": "stand like this now",
    "start": "1701590",
    "end": "1704400"
  },
  {
    "text": "well I think I'm just going to show the image that I've captured before because",
    "start": "1708830",
    "end": "1713900"
  },
  {
    "text": "I don't think this is this way of navigating is working out okay mirror on",
    "start": "1713900",
    "end": "1724700"
  },
  {
    "text": "display okay great alright so oh okay this is",
    "start": "1724700",
    "end": "1732680"
  },
  {
    "text": "the live thing that that's running right now and now I am going to remove mixer so",
    "start": "1732680",
    "end": "1751160"
  },
  {
    "text": "for HTTP",
    "start": "1751160",
    "end": "1754030"
  },
  {
    "text": "and I am going to create the the",
    "start": "1761690",
    "end": "1771530"
  },
  {
    "text": "telemetry v2 filters okay so now that's the that's the",
    "start": "1771530",
    "end": "1777170"
  },
  {
    "text": "steady-state usage it this includes both the the CPU that's consumed by the proxy",
    "start": "1777170",
    "end": "1782270"
  },
  {
    "text": "and an telemetry and very shortly we should see both of them starting to go",
    "start": "1782270",
    "end": "1788690"
  },
  {
    "text": "down while it does that I'm gonna go back to the to the presentation okay so",
    "start": "1788690",
    "end": "1798790"
  },
  {
    "start": "1796000",
    "end": "1908000"
  },
  {
    "text": "the the future direction is of course the work to like all this work like quad",
    "start": "1798790",
    "end": "1805580"
  },
  {
    "text": "mentioned before is in another repo in the Envoy organization and the OP",
    "start": "1805580",
    "end": "1811610"
  },
  {
    "text": "streaming work has already started so finishing that is it is a big part of",
    "start": "1811610",
    "end": "1817630"
  },
  {
    "text": "what the overall work we also want to add full support for network filters",
    "start": "1817630",
    "end": "1823190"
  },
  {
    "text": "this is only HTTP so far also we want to add TCP support we also want to improve",
    "start": "1823190",
    "end": "1828920"
  },
  {
    "text": "language bindings everything is converging around open telemetry so we want to make sure that the api's are",
    "start": "1828920",
    "end": "1835370"
  },
  {
    "text": "aligned with open telemetry and then kind of align it further when open",
    "start": "1835370",
    "end": "1842390"
  },
  {
    "text": "telemetry makes its way into envoy so that we have a nice path to export",
    "start": "1842390",
    "end": "1847930"
  },
  {
    "text": "metrics and then we this will become the default extension model Forestier",
    "start": "1847930",
    "end": "1855050"
  },
  {
    "text": "you know in a few releases let me see if",
    "start": "1855050",
    "end": "1861520"
  },
  {
    "text": "okay so as you can see oh so the the",
    "start": "1861520",
    "end": "1866810"
  },
  {
    "text": "little bump there was the transients when both filters were kind of on at the",
    "start": "1866810",
    "end": "1873770"
  },
  {
    "text": "same time plus the churn that was caused by the switch this which is not a not a",
    "start": "1873770",
    "end": "1882890"
  },
  {
    "text": "usual thing I just wanted to bring out the fact that we are saving significant CPU and now you see that we on the right",
    "start": "1882890",
    "end": "1890060"
  },
  {
    "text": "hand side the CPU is going down so the blue CPU on the right is the proxy and mixer CPU just went",
    "start": "1890060",
    "end": "1897970"
  },
  {
    "text": "down to nothing so if you yeah so like in all these measurements it is a",
    "start": "1897970",
    "end": "1905049"
  },
  {
    "text": "significant win so summary efficient metadata exchange",
    "start": "1905049",
    "end": "1913299"
  },
  {
    "start": "1908000",
    "end": "2131000"
  },
  {
    "text": "in parts peer awareness and we can build a whole lot of rich telemetry on top of",
    "start": "1913299",
    "end": "1919600"
  },
  {
    "text": "that Stewart elementary v2 has made great performance gains in this release",
    "start": "1919600",
    "end": "1927279"
  },
  {
    "text": "and we will continue to do so and the Google SEO team is adding webassembly",
    "start": "1927279",
    "end": "1933549"
  },
  {
    "text": "support in on bore and that should be done in next quarter or to thereabouts",
    "start": "1933549",
    "end": "1940899"
  },
  {
    "text": "and yay this actually worked so we have",
    "start": "1940899",
    "end": "1954850"
  },
  {
    "text": "to have a few questions we can take but before you guys leave the survey form that you can fill for this talk from the",
    "start": "1954850",
    "end": "1961649"
  },
  {
    "text": "schedule app so we can take few questions hi nice talk I we follow",
    "start": "1961649",
    "end": "1971470"
  },
  {
    "text": "Google's best practices on like passing a context object with all of our G RPC calls and it seems like open telemetry",
    "start": "1971470",
    "end": "1977529"
  },
  {
    "text": "covers part of the metadata in those context objects and this would cover the",
    "start": "1977529",
    "end": "1982899"
  },
  {
    "text": "rest of the stuff we pass is this a replacement for a context object so no I",
    "start": "1982899",
    "end": "1991240"
  },
  {
    "text": "mean not really so Oh most of the open telemetry kind of that the focus is",
    "start": "1991240",
    "end": "1999330"
  },
  {
    "text": "instrumenting application code this slightly different because here you're using open telemetry to instrument",
    "start": "1999330",
    "end": "2006690"
  },
  {
    "text": "infrastructure code so here it is going to be bound by like the over line filter",
    "start": "2006690",
    "end": "2015299"
  },
  {
    "text": "API and the alignment that we want to get with open telemetry so it's it's",
    "start": "2015299",
    "end": "2022139"
  },
  {
    "text": "slightly different I don't think it it fully applies there there is a context that is passed in the",
    "start": "2022139",
    "end": "2029619"
  },
  {
    "text": "filter API but it's not quite the same as the G RPC context okay thanks hi guys",
    "start": "2029619",
    "end": "2043840"
  },
  {
    "text": "great talk so I'd maybe you guys answered it blind quite follow why did you need to do of",
    "start": "2043840",
    "end": "2051368"
  },
  {
    "text": "webassembly it like kind of code path or that binding why not actually include it",
    "start": "2051369",
    "end": "2058000"
  },
  {
    "text": "into the main source code itself and make it like the default right like I mean if you guys find it useful like",
    "start": "2058000",
    "end": "2065108"
  },
  {
    "text": "those ten metrics everybody around you will find it useful so the short answer",
    "start": "2065109",
    "end": "2070240"
  },
  {
    "text": "is thank you if if they won't so we primarily want to deliver it first to",
    "start": "2070240",
    "end": "2077349"
  },
  {
    "text": "these geo community if the rest of the community finds it useful and absolutely we mean we would love to upstream this",
    "start": "2077349",
    "end": "2084970"
  },
  {
    "text": "as well there is a separate benefit for",
    "start": "2084970",
    "end": "2090040"
  },
  {
    "text": "all this web assembly work because what you can do now is you can run stock on board and you can deliver these web",
    "start": "2090040",
    "end": "2097809"
  },
  {
    "text": "assembly extensions to the one without recompiling it what it does is it",
    "start": "2097809",
    "end": "2103119"
  },
  {
    "text": "it enables vendors and even bespoke filters that you may need in your",
    "start": "2103119",
    "end": "2108640"
  },
  {
    "text": "organization to be compiled separately and pushed into Envoy so this was a convergence of two streams of work we",
    "start": "2108640",
    "end": "2117339"
  },
  {
    "text": "could have done that separately but it made a lot of sense to do it together",
    "start": "2117339",
    "end": "2123819"
  },
  {
    "text": "okay thank you guys right thank you",
    "start": "2123819",
    "end": "2130170"
  }
]