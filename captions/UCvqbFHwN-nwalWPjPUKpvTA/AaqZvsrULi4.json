[
  {
    "text": "hi everyone i'm johan",
    "start": "1040",
    "end": "3199"
  },
  {
    "text": "i'm a maintainer of various open source",
    "start": "3199",
    "end": "5279"
  },
  {
    "text": "projects including the grpc gateway and",
    "start": "5279",
    "end": "8000"
  },
  {
    "text": "improbable grpc web i've contributed to",
    "start": "8000",
    "end": "11120"
  },
  {
    "text": "go",
    "start": "11120",
    "end": "11599"
  },
  {
    "text": "and i run a blog writing mainly about go",
    "start": "11599",
    "end": "14000"
  },
  {
    "text": "and grpc",
    "start": "14000",
    "end": "15679"
  },
  {
    "text": "this is my first grpc conf and it's",
    "start": "15679",
    "end": "17920"
  },
  {
    "text": "great to be part of it",
    "start": "17920",
    "end": "20960"
  },
  {
    "text": "i work at buff where we are working on",
    "start": "21680",
    "end": "24320"
  },
  {
    "text": "api management tooling for protobuf",
    "start": "24320",
    "end": "26400"
  },
  {
    "text": "users",
    "start": "26400",
    "end": "26960"
  },
  {
    "text": "through schema-driven development we",
    "start": "26960",
    "end": "29439"
  },
  {
    "text": "already support linting of protofiles",
    "start": "29439",
    "end": "31439"
  },
  {
    "text": "and breaking change detection and we've",
    "start": "31439",
    "end": "33120"
  },
  {
    "text": "got some really exciting products in the",
    "start": "33120",
    "end": "34559"
  },
  {
    "text": "works",
    "start": "34559",
    "end": "35120"
  },
  {
    "text": "including the buff schema registry and",
    "start": "35120",
    "end": "37040"
  },
  {
    "text": "automated protobuf file generation",
    "start": "37040",
    "end": "39200"
  },
  {
    "text": "and dependency management check out our",
    "start": "39200",
    "end": "41440"
  },
  {
    "text": "website for more information",
    "start": "41440",
    "end": "43680"
  },
  {
    "text": "let's dive into the talk",
    "start": "43680",
    "end": "46640"
  },
  {
    "text": "today we're going to look at what we",
    "start": "47039",
    "end": "49120"
  },
  {
    "text": "mean by http json",
    "start": "49120",
    "end": "51039"
  },
  {
    "text": "what it's used for and explore some",
    "start": "51039",
    "end": "53199"
  },
  {
    "text": "problems associated with it",
    "start": "53199",
    "end": "55520"
  },
  {
    "text": "we're then going to learn about how we",
    "start": "55520",
    "end": "57360"
  },
  {
    "text": "can get the best of both worlds",
    "start": "57360",
    "end": "60320"
  },
  {
    "text": "but best of both grpc and http json",
    "start": "60320",
    "end": "63520"
  },
  {
    "text": "with the grpc gateway we'll then have",
    "start": "63520",
    "end": "66320"
  },
  {
    "text": "some dem",
    "start": "66320",
    "end": "66880"
  },
  {
    "text": "live demo of it in action",
    "start": "66880",
    "end": "70080"
  },
  {
    "text": "what do we mean when we say http json",
    "start": "70080",
    "end": "74960"
  },
  {
    "text": "we mean a restful interface making use",
    "start": "75119",
    "end": "77360"
  },
  {
    "text": "of the http verbs",
    "start": "77360",
    "end": "78960"
  },
  {
    "text": "get post put patch delete",
    "start": "78960",
    "end": "82880"
  },
  {
    "text": "and using json as the payload content",
    "start": "82880",
    "end": "85280"
  },
  {
    "text": "type",
    "start": "85280",
    "end": "86400"
  },
  {
    "text": "this is the de facto standard for most",
    "start": "86400",
    "end": "88479"
  },
  {
    "text": "public apis today",
    "start": "88479",
    "end": "90560"
  },
  {
    "text": "sometimes it's not entirely restful but",
    "start": "90560",
    "end": "92799"
  },
  {
    "text": "it's almost always",
    "start": "92799",
    "end": "93920"
  },
  {
    "text": "using json it's easy for humans to read",
    "start": "93920",
    "end": "97200"
  },
  {
    "text": "and write",
    "start": "97200",
    "end": "97840"
  },
  {
    "text": "it's got native javascript support all",
    "start": "97840",
    "end": "100159"
  },
  {
    "text": "is well right",
    "start": "100159",
    "end": "102399"
  },
  {
    "text": "is everything well as anyone who's ever",
    "start": "102399",
    "end": "106079"
  },
  {
    "text": "had to quickly push",
    "start": "106079",
    "end": "107119"
  },
  {
    "text": "a configuration fix to your json",
    "start": "107119",
    "end": "109280"
  },
  {
    "text": "configured service notes",
    "start": "109280",
    "end": "110880"
  },
  {
    "text": "trailing commas are forbidden in json i",
    "start": "110880",
    "end": "113759"
  },
  {
    "text": "wish i was joking",
    "start": "113759",
    "end": "114720"
  },
  {
    "text": "in saying that this is a big problem but",
    "start": "114720",
    "end": "116640"
  },
  {
    "text": "entirely new formats have been developed",
    "start": "116640",
    "end": "118240"
  },
  {
    "text": "to deal with this problem",
    "start": "118240",
    "end": "120240"
  },
  {
    "text": "there's also no support for comments",
    "start": "120240",
    "end": "122560"
  },
  {
    "text": "it's unnecessarily verbose on the wire",
    "start": "122560",
    "end": "124719"
  },
  {
    "text": "but compression can help mitigate this",
    "start": "124719",
    "end": "127200"
  },
  {
    "text": "in large deployments",
    "start": "127200",
    "end": "128720"
  },
  {
    "text": "the marshalling and unmarshaling of json",
    "start": "128720",
    "end": "130959"
  },
  {
    "text": "is a constant strain on response latency",
    "start": "130959",
    "end": "133840"
  },
  {
    "text": "most importantly it's not well typed",
    "start": "133840",
    "end": "136720"
  },
  {
    "text": "enough",
    "start": "136720",
    "end": "137120"
  },
  {
    "text": "and there's no single way to define the",
    "start": "137120",
    "end": "138959"
  },
  {
    "text": "interface types",
    "start": "138959",
    "end": "140640"
  },
  {
    "text": "open api is an option but it's not",
    "start": "140640",
    "end": "142800"
  },
  {
    "text": "globally adopted",
    "start": "142800",
    "end": "144319"
  },
  {
    "text": "most of these problems stem from the",
    "start": "144319",
    "end": "145680"
  },
  {
    "text": "fact that json was designed to be",
    "start": "145680",
    "end": "147680"
  },
  {
    "text": "human readable but also effective for a",
    "start": "147680",
    "end": "149840"
  },
  {
    "text": "machine to use",
    "start": "149840",
    "end": "151519"
  },
  {
    "text": "these two properties are unfortunately",
    "start": "151519",
    "end": "154840"
  },
  {
    "text": "incompatible",
    "start": "154840",
    "end": "157840"
  },
  {
    "text": "protocol buffers ngrpc provides all the",
    "start": "158000",
    "end": "160319"
  },
  {
    "text": "benefits we care about over http",
    "start": "160319",
    "end": "162560"
  },
  {
    "text": "json such as speed type safety a single",
    "start": "162560",
    "end": "165519"
  },
  {
    "text": "source of truth",
    "start": "165519",
    "end": "166560"
  },
  {
    "text": "code generation and much more we know",
    "start": "166560",
    "end": "169440"
  },
  {
    "text": "this which is why we're using",
    "start": "169440",
    "end": "171519"
  },
  {
    "text": "grpc but why hasn't the whole world",
    "start": "171519",
    "end": "174959"
  },
  {
    "text": "switched to protobuf and grpc",
    "start": "174959",
    "end": "178800"
  },
  {
    "text": "unfortunately it's not always so easy to",
    "start": "178800",
    "end": "180879"
  },
  {
    "text": "switch entire application stacks to new",
    "start": "180879",
    "end": "183040"
  },
  {
    "text": "frameworks",
    "start": "183040",
    "end": "184959"
  },
  {
    "text": "often there are a number of reasons why",
    "start": "184959",
    "end": "186640"
  },
  {
    "text": "we keep using old standards when new",
    "start": "186640",
    "end": "188640"
  },
  {
    "text": "better alternatives are available such",
    "start": "188640",
    "end": "190640"
  },
  {
    "text": "as compatibility with",
    "start": "190640",
    "end": "192000"
  },
  {
    "text": "existing systems management pressure and",
    "start": "192000",
    "end": "194879"
  },
  {
    "text": "in this case",
    "start": "194879",
    "end": "196000"
  },
  {
    "text": "the still prevalent expectation that a",
    "start": "196000",
    "end": "198000"
  },
  {
    "text": "public asia api",
    "start": "198000",
    "end": "199519"
  },
  {
    "text": "should be using http json",
    "start": "199519",
    "end": "203120"
  },
  {
    "text": "what can we do when we want to use grpc",
    "start": "203120",
    "end": "205840"
  },
  {
    "text": "but are forced to use http",
    "start": "205840",
    "end": "207760"
  },
  {
    "text": "json the grpc gateway project allows you",
    "start": "207760",
    "end": "212239"
  },
  {
    "text": "to design",
    "start": "212239",
    "end": "213040"
  },
  {
    "text": "grpc and http json services at the same",
    "start": "213040",
    "end": "216159"
  },
  {
    "text": "time",
    "start": "216159",
    "end": "217280"
  },
  {
    "text": "it uses a custom protobuf generator that",
    "start": "217280",
    "end": "219680"
  },
  {
    "text": "generates a simple reverse proxy that",
    "start": "219680",
    "end": "221519"
  },
  {
    "text": "translates on the fly from json to",
    "start": "221519",
    "end": "223519"
  },
  {
    "text": "protobuf",
    "start": "223519",
    "end": "224319"
  },
  {
    "text": "and back again it allows you to define a",
    "start": "224319",
    "end": "227120"
  },
  {
    "text": "url path",
    "start": "227120",
    "end": "228080"
  },
  {
    "text": "and http verb to grpc service method",
    "start": "228080",
    "end": "231280"
  },
  {
    "text": "mapping",
    "start": "231280",
    "end": "231840"
  },
  {
    "text": "with a simple annotation scheme in the",
    "start": "231840",
    "end": "233599"
  },
  {
    "text": "profiles as you can see here",
    "start": "233599",
    "end": "236080"
  },
  {
    "text": "it also provides a swagger open api",
    "start": "236080",
    "end": "238560"
  },
  {
    "text": "generator",
    "start": "238560",
    "end": "239280"
  },
  {
    "text": "in which in case you have some generator",
    "start": "239280",
    "end": "243040"
  },
  {
    "text": "in case you have some generator you want",
    "start": "243040",
    "end": "244400"
  },
  {
    "text": "to use that requires the open api format",
    "start": "244400",
    "end": "247599"
  },
  {
    "text": "i've added the http json annotations to",
    "start": "247599",
    "end": "249439"
  },
  {
    "text": "the previously defined service methods",
    "start": "249439",
    "end": "251200"
  },
  {
    "text": "above",
    "start": "251200",
    "end": "252159"
  },
  {
    "text": "as you can see the http verb and url",
    "start": "252159",
    "end": "254720"
  },
  {
    "text": "path mappings are defined within the rpc",
    "start": "254720",
    "end": "257040"
  },
  {
    "text": "definitions",
    "start": "257040",
    "end": "259600"
  },
  {
    "text": "so how does it work this image shows the",
    "start": "259840",
    "end": "262960"
  },
  {
    "text": "basic building blocks of the gateway",
    "start": "262960",
    "end": "264960"
  },
  {
    "text": "you generate a jrpc service as usual",
    "start": "264960",
    "end": "266960"
  },
  {
    "text": "with product django",
    "start": "266960",
    "end": "268320"
  },
  {
    "text": "or producee and then you use our custom",
    "start": "268320",
    "end": "271120"
  },
  {
    "text": "generator",
    "start": "271120",
    "end": "271840"
  },
  {
    "text": "prorock gen grpc gateway to generate a",
    "start": "271840",
    "end": "274400"
  },
  {
    "text": "gateway handler file",
    "start": "274400",
    "end": "275759"
  },
  {
    "text": "which registers the mapped http verbs",
    "start": "275759",
    "end": "278320"
  },
  {
    "text": "and url paths",
    "start": "278320",
    "end": "279759"
  },
  {
    "text": "to a central max which is then used to",
    "start": "279759",
    "end": "282160"
  },
  {
    "text": "serve the external http",
    "start": "282160",
    "end": "283759"
  },
  {
    "text": "json interface it's common to serve the",
    "start": "283759",
    "end": "286800"
  },
  {
    "text": "grc gateway and the grc server on",
    "start": "286800",
    "end": "289120"
  },
  {
    "text": "different ports of the same server",
    "start": "289120",
    "end": "290800"
  },
  {
    "text": "to allow both http json clients and jfc",
    "start": "290800",
    "end": "293919"
  },
  {
    "text": "clients",
    "start": "293919",
    "end": "294479"
  },
  {
    "text": "but this is not mandatory the gateway",
    "start": "294479",
    "end": "297280"
  },
  {
    "text": "can also be used with non-go grpc",
    "start": "297280",
    "end": "299440"
  },
  {
    "text": "services",
    "start": "299440",
    "end": "300240"
  },
  {
    "text": "you simply connect to an external grpc",
    "start": "300240",
    "end": "302080"
  },
  {
    "text": "service in the setup",
    "start": "302080",
    "end": "303840"
  },
  {
    "text": "you can even serve the gateway and grpc",
    "start": "303840",
    "end": "306160"
  },
  {
    "text": "server on the same port",
    "start": "306160",
    "end": "307759"
  },
  {
    "text": "and split traffic using http headers if",
    "start": "307759",
    "end": "310240"
  },
  {
    "text": "you want to get fancy",
    "start": "310240",
    "end": "313199"
  },
  {
    "text": "okay now we're going to go into a little",
    "start": "315039",
    "end": "317440"
  },
  {
    "text": "bit of a live demo of",
    "start": "317440",
    "end": "318960"
  },
  {
    "text": "the jrz gateway in action and",
    "start": "318960",
    "end": "322639"
  },
  {
    "text": "you'll get a few seconds here to copy",
    "start": "322639",
    "end": "324880"
  },
  {
    "text": "down the url for my open source",
    "start": "324880",
    "end": "327120"
  },
  {
    "text": "boilerplate repo and then i'm going to",
    "start": "327120",
    "end": "328639"
  },
  {
    "text": "switch the repo and",
    "start": "328639",
    "end": "330160"
  },
  {
    "text": "we're going to do some live coding",
    "start": "330160",
    "end": "334240"
  },
  {
    "text": "together",
    "start": "336840",
    "end": "338000"
  },
  {
    "text": "okay let me change the presentation",
    "start": "338000",
    "end": "341759"
  },
  {
    "text": "okay now we've switched to the",
    "start": "351680",
    "end": "354560"
  },
  {
    "text": "boilerplate repo",
    "start": "354560",
    "end": "355600"
  },
  {
    "text": "and the first thing we're going to look",
    "start": "355600",
    "end": "356880"
  },
  {
    "text": "at is the profile so you're all probably",
    "start": "356880",
    "end": "359600"
  },
  {
    "text": "familiar with how profiles look",
    "start": "359600",
    "end": "361600"
  },
  {
    "text": "so this is not going to be strange and",
    "start": "361600",
    "end": "364800"
  },
  {
    "text": "as you can see we've just got some a",
    "start": "364800",
    "end": "366479"
  },
  {
    "text": "package declaration",
    "start": "366479",
    "end": "367520"
  },
  {
    "text": "a syntax declaration and some imports",
    "start": "367520",
    "end": "371440"
  },
  {
    "text": "we're then defining the go package which",
    "start": "371440",
    "end": "373440"
  },
  {
    "text": "is naturally",
    "start": "373440",
    "end": "374800"
  },
  {
    "text": "part of using a go grpc server",
    "start": "374800",
    "end": "379840"
  },
  {
    "text": "then we've got some extra annotations",
    "start": "379840",
    "end": "381360"
  },
  {
    "text": "here which are used for generating the",
    "start": "381360",
    "end": "384080"
  },
  {
    "text": "open api aka swagger file",
    "start": "384080",
    "end": "387520"
  },
  {
    "text": "that comes together with the rest api",
    "start": "387520",
    "end": "390800"
  },
  {
    "text": "so if we continue down the file here",
    "start": "390800",
    "end": "393039"
  },
  {
    "text": "we've got a normal",
    "start": "393039",
    "end": "394240"
  },
  {
    "text": "service definition as anyone who's",
    "start": "394240",
    "end": "397360"
  },
  {
    "text": "familiar with protobuff and jfc will",
    "start": "397360",
    "end": "399360"
  },
  {
    "text": "know this is what maps to a",
    "start": "399360",
    "end": "401520"
  },
  {
    "text": "grpc service and then",
    "start": "401520",
    "end": "404720"
  },
  {
    "text": "it gets a little bit interesting here",
    "start": "404720",
    "end": "406080"
  },
  {
    "text": "because under the add user",
    "start": "406080",
    "end": "408880"
  },
  {
    "text": "we can see that we've got some extra",
    "start": "408880",
    "end": "411039"
  },
  {
    "text": "annotations here",
    "start": "411039",
    "end": "413520"
  },
  {
    "text": "and as you can see here we can declare",
    "start": "413520",
    "end": "415759"
  },
  {
    "text": "that we want to map a certain url path",
    "start": "415759",
    "end": "418479"
  },
  {
    "text": "to the add user grpc service method",
    "start": "418479",
    "end": "422160"
  },
  {
    "text": "so we say that a post request to",
    "start": "422160",
    "end": "425680"
  },
  {
    "text": "the api v1 users url path",
    "start": "425680",
    "end": "429280"
  },
  {
    "text": "should map to the add user request on",
    "start": "429280",
    "end": "432240"
  },
  {
    "text": "the grpc service",
    "start": "432240",
    "end": "433520"
  },
  {
    "text": "this is how we say how we do the mapping",
    "start": "433520",
    "end": "436319"
  },
  {
    "text": "between",
    "start": "436319",
    "end": "436880"
  },
  {
    "text": "gfc http paths and gpc backend",
    "start": "436880",
    "end": "441199"
  },
  {
    "text": "and we can also declare that we want the",
    "start": "441199",
    "end": "443520"
  },
  {
    "text": "entire",
    "start": "443520",
    "end": "444400"
  },
  {
    "text": "json body to map to the add user request",
    "start": "444400",
    "end": "448639"
  },
  {
    "text": "so this simply says that the add user",
    "start": "448639",
    "end": "450639"
  },
  {
    "text": "request json representation",
    "start": "450639",
    "end": "452160"
  },
  {
    "text": "is what we expect to be provided on the",
    "start": "452160",
    "end": "456240"
  },
  {
    "text": "http url and then we've got some more",
    "start": "456240",
    "end": "460400"
  },
  {
    "text": "open api annotations here just to make",
    "start": "460400",
    "end": "462080"
  },
  {
    "text": "the swagger file look a little bit nicer",
    "start": "462080",
    "end": "465039"
  },
  {
    "text": "and then we've got another user here",
    "start": "465039",
    "end": "466720"
  },
  {
    "text": "another method here called list users",
    "start": "466720",
    "end": "469360"
  },
  {
    "text": "which in the same fashion contains a",
    "start": "469360",
    "end": "472639"
  },
  {
    "text": "url mapping in this case",
    "start": "472639",
    "end": "476080"
  },
  {
    "text": "to a get verb on api v1 users and this",
    "start": "476080",
    "end": "480000"
  },
  {
    "text": "is",
    "start": "480000",
    "end": "480240"
  },
  {
    "text": "of course the standard path for",
    "start": "480240",
    "end": "482960"
  },
  {
    "text": "something that",
    "start": "482960",
    "end": "483680"
  },
  {
    "text": "will list users so that makes sense",
    "start": "483680",
    "end": "487360"
  },
  {
    "text": "to map to the list users method and",
    "start": "487360",
    "end": "489520"
  },
  {
    "text": "again we've got some open api",
    "start": "489520",
    "end": "491599"
  },
  {
    "text": "mappings down here annotations down here",
    "start": "491599",
    "end": "493759"
  },
  {
    "text": "to add some extra tags and stuff and",
    "start": "493759",
    "end": "495199"
  },
  {
    "text": "then we've got the message definitions",
    "start": "495199",
    "end": "496800"
  },
  {
    "text": "as you can see there's nothing",
    "start": "496800",
    "end": "497840"
  },
  {
    "text": "particularly interesting about these in",
    "start": "497840",
    "end": "499680"
  },
  {
    "text": "fact there's",
    "start": "499680",
    "end": "500800"
  },
  {
    "text": "it's a very minimal interface and then",
    "start": "500800",
    "end": "503759"
  },
  {
    "text": "if we",
    "start": "503759",
    "end": "504240"
  },
  {
    "text": "dive quickly into the main go file if",
    "start": "504240",
    "end": "505840"
  },
  {
    "text": "you're not familiar with go this is",
    "start": "505840",
    "end": "506879"
  },
  {
    "text": "going to be a little bit unfamiliar but",
    "start": "506879",
    "end": "508879"
  },
  {
    "text": "just giving you an overview of what's",
    "start": "508879",
    "end": "510400"
  },
  {
    "text": "happening here we start",
    "start": "510400",
    "end": "512479"
  },
  {
    "text": "a http oh a tcp listener",
    "start": "512479",
    "end": "515680"
  },
  {
    "text": "on port 1000 on the local that network",
    "start": "515680",
    "end": "521039"
  },
  {
    "text": "we then start serving a code jbc server",
    "start": "521039",
    "end": "524320"
  },
  {
    "text": "with uh our own um certificates here you",
    "start": "524320",
    "end": "527200"
  },
  {
    "text": "would obviously replace these with your",
    "start": "527200",
    "end": "528560"
  },
  {
    "text": "own certificates when",
    "start": "528560",
    "end": "529839"
  },
  {
    "text": "you're working on your own server and",
    "start": "529839",
    "end": "531839"
  },
  {
    "text": "then we register",
    "start": "531839",
    "end": "532880"
  },
  {
    "text": "the generated server to the grpc server",
    "start": "532880",
    "end": "536959"
  },
  {
    "text": "and then we start that in the gu routine",
    "start": "536959",
    "end": "538320"
  },
  {
    "text": "and then here",
    "start": "538320",
    "end": "540160"
  },
  {
    "text": "if we jump into the gateway package",
    "start": "540160",
    "end": "544399"
  },
  {
    "text": "this is where it gets a little bit",
    "start": "544399",
    "end": "545360"
  },
  {
    "text": "interesting because this is the grc",
    "start": "545360",
    "end": "547519"
  },
  {
    "text": "gateway setup",
    "start": "547519",
    "end": "548399"
  },
  {
    "text": "so this is where we perform a grpc",
    "start": "548399",
    "end": "552240"
  },
  {
    "text": "client connection dial to the grpc",
    "start": "552240",
    "end": "555680"
  },
  {
    "text": "server that we just started",
    "start": "555680",
    "end": "557120"
  },
  {
    "text": "as you can see we've got the dial adder",
    "start": "557120",
    "end": "559360"
  },
  {
    "text": "on on the",
    "start": "559360",
    "end": "562080"
  },
  {
    "text": "um function as a function parameter",
    "start": "562080",
    "end": "564720"
  },
  {
    "text": "setting up the gmc logger",
    "start": "564720",
    "end": "566640"
  },
  {
    "text": "and uh we're using the same transport",
    "start": "566640",
    "end": "569760"
  },
  {
    "text": "credentials that we were using the way",
    "start": "569760",
    "end": "571040"
  },
  {
    "text": "we created the server so we're using tls",
    "start": "571040",
    "end": "572880"
  },
  {
    "text": "between",
    "start": "572880",
    "end": "573600"
  },
  {
    "text": "the gfc gateway grc client and the grc",
    "start": "573600",
    "end": "576640"
  },
  {
    "text": "server",
    "start": "576640",
    "end": "578320"
  },
  {
    "text": "and then we use this method that was",
    "start": "578320",
    "end": "581040"
  },
  {
    "text": "generated by",
    "start": "581040",
    "end": "582000"
  },
  {
    "text": "our product gen grpc gateway generator",
    "start": "582000",
    "end": "584399"
  },
  {
    "text": "to register",
    "start": "584399",
    "end": "585600"
  },
  {
    "text": "the server handler to",
    "start": "585600",
    "end": "588800"
  },
  {
    "text": "this gpc client connection which means",
    "start": "588800",
    "end": "590800"
  },
  {
    "text": "that now the gmc server",
    "start": "590800",
    "end": "593200"
  },
  {
    "text": "uh the gpc gateway server can map all of",
    "start": "593200",
    "end": "595360"
  },
  {
    "text": "the http methods properly down to the",
    "start": "595360",
    "end": "597360"
  },
  {
    "text": "grc client that we declared up here",
    "start": "597360",
    "end": "599360"
  },
  {
    "text": "so if you're using a java server or a c",
    "start": "599360",
    "end": "601920"
  },
  {
    "text": "plus plus server",
    "start": "601920",
    "end": "602959"
  },
  {
    "text": "again this part you can do exactly the",
    "start": "602959",
    "end": "605279"
  },
  {
    "text": "same because",
    "start": "605279",
    "end": "606399"
  },
  {
    "text": "you're just doing a gfc client",
    "start": "606399",
    "end": "608000"
  },
  {
    "text": "connection dialing here so you just need",
    "start": "608000",
    "end": "609760"
  },
  {
    "text": "to use a different",
    "start": "609760",
    "end": "611519"
  },
  {
    "text": "dial address and then we're",
    "start": "611519",
    "end": "614880"
  },
  {
    "text": "serving the http the the",
    "start": "614880",
    "end": "618000"
  },
  {
    "text": "jeffsy gateway mux but we're also adding",
    "start": "618000",
    "end": "620880"
  },
  {
    "text": "a little bit extra flair in this example",
    "start": "620880",
    "end": "622560"
  },
  {
    "text": "which is that we want to serve the",
    "start": "622560",
    "end": "624320"
  },
  {
    "text": "generated open api ui together with it",
    "start": "624320",
    "end": "627279"
  },
  {
    "text": "so in port 11000 we serve both the grpc",
    "start": "627279",
    "end": "630720"
  },
  {
    "text": "gateway",
    "start": "630720",
    "end": "631440"
  },
  {
    "text": "and the open api handler and",
    "start": "631440",
    "end": "634560"
  },
  {
    "text": "enough theory let's let's just take a",
    "start": "634560",
    "end": "636880"
  },
  {
    "text": "quick look at what that looks like",
    "start": "636880",
    "end": "640240"
  },
  {
    "text": "so if i do that i'm gonna",
    "start": "641920",
    "end": "645440"
  },
  {
    "text": "open my browser",
    "start": "645440",
    "end": "648880"
  },
  {
    "text": "okay so here you go i've loaded the uh",
    "start": "648880",
    "end": "651839"
  },
  {
    "text": "open api server",
    "start": "651839",
    "end": "653040"
  },
  {
    "text": "on my in my browser the first thing we",
    "start": "653040",
    "end": "655120"
  },
  {
    "text": "notice is that we get a security warning",
    "start": "655120",
    "end": "656560"
  },
  {
    "text": "of course because we're using a self's",
    "start": "656560",
    "end": "658720"
  },
  {
    "text": "sign certificate in this case because",
    "start": "658720",
    "end": "660800"
  },
  {
    "text": "i'm serving this on localhost i'm going",
    "start": "660800",
    "end": "662079"
  },
  {
    "text": "to go ahead and accept the risk and",
    "start": "662079",
    "end": "663519"
  },
  {
    "text": "continue because i",
    "start": "663519",
    "end": "664959"
  },
  {
    "text": "am hopefully not being intercepted on",
    "start": "664959",
    "end": "666720"
  },
  {
    "text": "the way from my computer to my computer",
    "start": "666720",
    "end": "669440"
  },
  {
    "text": "and as you can see here we have the open",
    "start": "669440",
    "end": "671680"
  },
  {
    "text": "api ui that's been",
    "start": "671680",
    "end": "673360"
  },
  {
    "text": "generated from i'm going to enlarge this",
    "start": "673360",
    "end": "676480"
  },
  {
    "text": "a little bit",
    "start": "676480",
    "end": "676959"
  },
  {
    "text": "it's been generated together with the",
    "start": "676959",
    "end": "679279"
  },
  {
    "text": "definitions that we had in the",
    "start": "679279",
    "end": "681760"
  },
  {
    "text": "profile so as you can see this",
    "start": "681760",
    "end": "683440"
  },
  {
    "text": "completely maps to",
    "start": "683440",
    "end": "685040"
  },
  {
    "text": "the url paths that we had listed in the",
    "start": "685040",
    "end": "686880"
  },
  {
    "text": "profile and",
    "start": "686880",
    "end": "688399"
  },
  {
    "text": "this this totally works as well you can",
    "start": "688399",
    "end": "690480"
  },
  {
    "text": "list users",
    "start": "690480",
    "end": "691440"
  },
  {
    "text": "obviously now this actually gave a",
    "start": "691440",
    "end": "693360"
  },
  {
    "text": "content length of zero response because",
    "start": "693360",
    "end": "694880"
  },
  {
    "text": "we have no users",
    "start": "694880",
    "end": "695920"
  },
  {
    "text": "but if we go ahead and add a user now",
    "start": "695920",
    "end": "699440"
  },
  {
    "text": "this doesn't take your parameters so i'm",
    "start": "699440",
    "end": "700720"
  },
  {
    "text": "just going to send it an empty",
    "start": "700720",
    "end": "702800"
  },
  {
    "text": "json document that responds with okay",
    "start": "702800",
    "end": "706079"
  },
  {
    "text": "we've got an id of a user here",
    "start": "706079",
    "end": "707839"
  },
  {
    "text": "i think we added the user and if we",
    "start": "707839",
    "end": "710399"
  },
  {
    "text": "execute this",
    "start": "710399",
    "end": "711600"
  },
  {
    "text": "then you can see now we get back um",
    "start": "711600",
    "end": "716399"
  },
  {
    "text": "a user so this is uh interactive you can",
    "start": "716399",
    "end": "719519"
  },
  {
    "text": "use this",
    "start": "719519",
    "end": "720800"
  },
  {
    "text": "for testing you can even use it for",
    "start": "720800",
    "end": "723920"
  },
  {
    "text": "uh as a product in front of your own api",
    "start": "723920",
    "end": "727040"
  },
  {
    "text": "or something like that",
    "start": "727040",
    "end": "728959"
  },
  {
    "text": "but let's uh take another step back",
    "start": "728959",
    "end": "732160"
  },
  {
    "text": "and see what happens if we want to",
    "start": "732160",
    "end": "735600"
  },
  {
    "text": "make some changes to the code and just",
    "start": "735600",
    "end": "738240"
  },
  {
    "text": "how quickly we can",
    "start": "738240",
    "end": "740240"
  },
  {
    "text": "iterate on the code and regenerate",
    "start": "740240",
    "end": "742320"
  },
  {
    "text": "everything and everything just works you",
    "start": "742320",
    "end": "743680"
  },
  {
    "text": "know that the kind of powerful",
    "start": "743680",
    "end": "746880"
  },
  {
    "text": "development workflow that we're used to",
    "start": "747680",
    "end": "749040"
  },
  {
    "text": "with protobuf so i'm going to switch",
    "start": "749040",
    "end": "750399"
  },
  {
    "text": "back to",
    "start": "750399",
    "end": "751120"
  },
  {
    "text": "my boilerplate repo",
    "start": "751120",
    "end": "759839"
  },
  {
    "text": "i'm gonna turn off the server now let's",
    "start": "760160",
    "end": "763120"
  },
  {
    "text": "say we want to add",
    "start": "763120",
    "end": "764480"
  },
  {
    "text": "a parameter to the user let's call",
    "start": "764480",
    "end": "767600"
  },
  {
    "text": "say we want the user to have a name",
    "start": "767600",
    "end": "772079"
  },
  {
    "text": "see this is what we do here we'll then",
    "start": "772079",
    "end": "773839"
  },
  {
    "text": "need to add a user",
    "start": "773839",
    "end": "775760"
  },
  {
    "text": "um a name to the user and user request",
    "start": "775760",
    "end": "780240"
  },
  {
    "text": "name here we go",
    "start": "780320",
    "end": "783839"
  },
  {
    "text": "then this is",
    "start": "783839",
    "end": "787120"
  },
  {
    "text": "all we need now we can make generate",
    "start": "787120",
    "end": "789839"
  },
  {
    "text": "which is",
    "start": "789839",
    "end": "790480"
  },
  {
    "text": "um we created makefile command",
    "start": "790480",
    "end": "795040"
  },
  {
    "text": "that will run privacy with all the",
    "start": "795040",
    "end": "797839"
  },
  {
    "text": "generators that we have",
    "start": "797839",
    "end": "799519"
  },
  {
    "text": "here and just recreate everything for us",
    "start": "799519",
    "end": "802800"
  },
  {
    "text": "now if we run go run main go again and",
    "start": "802800",
    "end": "805760"
  },
  {
    "text": "jump back to the browser window",
    "start": "805760",
    "end": "814240"
  },
  {
    "text": "let's just make sure that we're",
    "start": "814240",
    "end": "816480"
  },
  {
    "text": "disabling the cache memory of the window",
    "start": "816480",
    "end": "818160"
  },
  {
    "text": "because we're downloading a new swagger",
    "start": "818160",
    "end": "820160"
  },
  {
    "text": "file",
    "start": "820160",
    "end": "822480"
  },
  {
    "text": "now if we want to add a user all of a",
    "start": "824320",
    "end": "826480"
  },
  {
    "text": "sudden we have a name parameter here",
    "start": "826480",
    "end": "828240"
  },
  {
    "text": "so let's do that",
    "start": "828240",
    "end": "831040"
  },
  {
    "text": "there you can see the card request that",
    "start": "833279",
    "end": "834880"
  },
  {
    "text": "was made here",
    "start": "834880",
    "end": "837279"
  },
  {
    "text": "we forgot to update the uh the back end",
    "start": "837279",
    "end": "839839"
  },
  {
    "text": "let's jump back",
    "start": "839839",
    "end": "840800"
  },
  {
    "text": "quickly to the application",
    "start": "840800",
    "end": "846079"
  },
  {
    "text": "at the backend server okay so here we",
    "start": "850959",
    "end": "854160"
  },
  {
    "text": "have the go back in server which is",
    "start": "854160",
    "end": "855440"
  },
  {
    "text": "implementing all this",
    "start": "855440",
    "end": "856560"
  },
  {
    "text": "we'll take the request and now that",
    "start": "856560",
    "end": "858800"
  },
  {
    "text": "we've regenerated this we have a name",
    "start": "858800",
    "end": "860399"
  },
  {
    "text": "here",
    "start": "860399",
    "end": "861040"
  },
  {
    "text": "so let's do rename when we're adding the",
    "start": "861040",
    "end": "864160"
  },
  {
    "text": "user",
    "start": "864160",
    "end": "864959"
  },
  {
    "text": "and as you can see here this is a",
    "start": "864959",
    "end": "868160"
  },
  {
    "text": "just a mutex protected array that's",
    "start": "868160",
    "end": "871040"
  },
  {
    "text": "being stored in memory",
    "start": "871040",
    "end": "872880"
  },
  {
    "text": "and list users just reads back from that",
    "start": "872880",
    "end": "875040"
  },
  {
    "text": "array so now we've updated the server as",
    "start": "875040",
    "end": "876959"
  },
  {
    "text": "well",
    "start": "876959",
    "end": "879199"
  },
  {
    "text": "run that and let's jump back to the",
    "start": "879360",
    "end": "881360"
  },
  {
    "text": "browser window",
    "start": "881360",
    "end": "885839"
  },
  {
    "text": "we don't even have to reload this",
    "start": "889120",
    "end": "890320"
  },
  {
    "text": "pagerank if i try and execute it now",
    "start": "890320",
    "end": "892959"
  },
  {
    "text": "yes okay we got the name back and if we",
    "start": "892959",
    "end": "896160"
  },
  {
    "text": "try to do",
    "start": "896160",
    "end": "897120"
  },
  {
    "text": "list users here",
    "start": "897120",
    "end": "899839"
  },
  {
    "text": "yes we got that user back and the name",
    "start": "900720",
    "end": "903440"
  },
  {
    "text": "has been stored",
    "start": "903440",
    "end": "905120"
  },
  {
    "text": "so as you can see this the powerful",
    "start": "905120",
    "end": "908720"
  },
  {
    "text": "protobuf workflow that we're used to",
    "start": "908720",
    "end": "912079"
  },
  {
    "text": "where we just",
    "start": "912079",
    "end": "912720"
  },
  {
    "text": "change the prototype files and",
    "start": "912720",
    "end": "914880"
  },
  {
    "text": "regenerate and everything",
    "start": "914880",
    "end": "916480"
  },
  {
    "text": "just works is completely unlocked by",
    "start": "916480",
    "end": "920079"
  },
  {
    "text": "the jrc gateway as well you just have to",
    "start": "920079",
    "end": "923839"
  },
  {
    "text": "use the product file as usual regenerate",
    "start": "923839",
    "end": "926320"
  },
  {
    "text": "it and",
    "start": "926320",
    "end": "926880"
  },
  {
    "text": "your rest api is updated automatically",
    "start": "926880",
    "end": "929040"
  },
  {
    "text": "including the documentation as you can",
    "start": "929040",
    "end": "930800"
  },
  {
    "text": "see",
    "start": "930800",
    "end": "932160"
  },
  {
    "text": "so let's jump back into the presentation",
    "start": "932160",
    "end": "941839"
  },
  {
    "text": "okay",
    "start": "952839",
    "end": "955839"
  },
  {
    "text": "so let's talk a little bit more about",
    "start": "955920",
    "end": "957759"
  },
  {
    "text": "specific product features that are",
    "start": "957759",
    "end": "959199"
  },
  {
    "text": "supported by the grc gateway",
    "start": "959199",
    "end": "962399"
  },
  {
    "text": "we start by the rich type support",
    "start": "962399",
    "end": "965759"
  },
  {
    "text": "for the the problem of well known types",
    "start": "965759",
    "end": "969519"
  },
  {
    "text": "these types are part of what you might",
    "start": "969519",
    "end": "971120"
  },
  {
    "text": "call a protobuf standard library and",
    "start": "971120",
    "end": "972959"
  },
  {
    "text": "they're always included with a proto-c",
    "start": "972959",
    "end": "974560"
  },
  {
    "text": "compiler",
    "start": "974560",
    "end": "975360"
  },
  {
    "text": "meaning that you don't have to manually",
    "start": "975360",
    "end": "976639"
  },
  {
    "text": "manage their downloading and generation",
    "start": "976639",
    "end": "979040"
  },
  {
    "text": "they use a special namespace",
    "start": "979040",
    "end": "980680"
  },
  {
    "text": "google.protobuff which makes them easy",
    "start": "980680",
    "end": "982560"
  },
  {
    "text": "to recognize",
    "start": "982560",
    "end": "983759"
  },
  {
    "text": "these types are predefined messages and",
    "start": "983759",
    "end": "986160"
  },
  {
    "text": "include messages for handling timestamps",
    "start": "986160",
    "end": "988079"
  },
  {
    "text": "durations",
    "start": "988079",
    "end": "989040"
  },
  {
    "text": "wrappers of primitive types and others",
    "start": "989040",
    "end": "992079"
  },
  {
    "text": "all of these types have special cases",
    "start": "992079",
    "end": "993839"
  },
  {
    "text": "built into them for the gateway so",
    "start": "993839",
    "end": "995440"
  },
  {
    "text": "whenever for example you need a",
    "start": "995440",
    "end": "997040"
  },
  {
    "text": "timestamp",
    "start": "997040",
    "end": "998000"
  },
  {
    "text": "make use of the well-known type as you",
    "start": "998000",
    "end": "1000480"
  },
  {
    "text": "can see",
    "start": "1000480",
    "end": "1001279"
  },
  {
    "text": "i've added some examples here the",
    "start": "1001279",
    "end": "1003839"
  },
  {
    "text": "timestamp time",
    "start": "1003839",
    "end": "1004800"
  },
  {
    "text": "marshalls to and from an rfc 3339",
    "start": "1004800",
    "end": "1008320"
  },
  {
    "text": "timestamp string the uin32 value",
    "start": "1008320",
    "end": "1011360"
  },
  {
    "text": "can be used to have nullable uin32s",
    "start": "1011360",
    "end": "1014560"
  },
  {
    "text": "and the struct type can be used to store",
    "start": "1014560",
    "end": "1016560"
  },
  {
    "text": "arbitrary json structures",
    "start": "1016560",
    "end": "1018880"
  },
  {
    "text": "please use the last one carefully as the",
    "start": "1018880",
    "end": "1020480"
  },
  {
    "text": "protobuf representation is a mess to",
    "start": "1020480",
    "end": "1022800"
  },
  {
    "text": "work with",
    "start": "1022800",
    "end": "1023519"
  },
  {
    "text": "and should only be a last resort",
    "start": "1023519",
    "end": "1027360"
  },
  {
    "text": "there's another well-known type that has",
    "start": "1028640",
    "end": "1030079"
  },
  {
    "text": "good support in the geopsy gateway",
    "start": "1030079",
    "end": "1033280"
  },
  {
    "text": "most protobuf primitive fields such as",
    "start": "1033280",
    "end": "1035438"
  },
  {
    "text": "strings and integers are non-nullable",
    "start": "1035439",
    "end": "1037600"
  },
  {
    "text": "so in order to do partial updates the",
    "start": "1037600",
    "end": "1039600"
  },
  {
    "text": "best practice is",
    "start": "1039600",
    "end": "1040720"
  },
  {
    "text": "the use of a special message type called",
    "start": "1040720",
    "end": "1042720"
  },
  {
    "text": "a field mask",
    "start": "1042720",
    "end": "1044480"
  },
  {
    "text": "exposing this implementation detail to",
    "start": "1044480",
    "end": "1046160"
  },
  {
    "text": "your users however is pretty nasty so",
    "start": "1046160",
    "end": "1048160"
  },
  {
    "text": "the grc gateway supports",
    "start": "1048160",
    "end": "1049679"
  },
  {
    "text": "translating json fields to a field mask",
    "start": "1049679",
    "end": "1052000"
  },
  {
    "text": "and resource type",
    "start": "1052000",
    "end": "1053840"
  },
  {
    "text": "fields that are found in the input json",
    "start": "1053840",
    "end": "1056000"
  },
  {
    "text": "are used to populate the resource and",
    "start": "1056000",
    "end": "1057600"
  },
  {
    "text": "field mask",
    "start": "1057600",
    "end": "1058400"
  },
  {
    "text": "automatically this code shows an example",
    "start": "1058400",
    "end": "1061280"
  },
  {
    "text": "structure",
    "start": "1061280",
    "end": "1062480"
  },
  {
    "text": "with the server submitted the output",
    "start": "1062480",
    "end": "1065039"
  },
  {
    "text": "only comment indicates that the field is",
    "start": "1065039",
    "end": "1067039"
  },
  {
    "text": "not mutable",
    "start": "1067039",
    "end": "1067840"
  },
  {
    "text": "via partial updates which is in line",
    "start": "1067840",
    "end": "1069760"
  },
  {
    "text": "with the google api",
    "start": "1069760",
    "end": "1070880"
  },
  {
    "text": "design docs recommendations this support",
    "start": "1070880",
    "end": "1073520"
  },
  {
    "text": "was entirely the result of an open",
    "start": "1073520",
    "end": "1075280"
  },
  {
    "text": "source contribution",
    "start": "1075280",
    "end": "1076240"
  },
  {
    "text": "from roman azami and daniel mcdonald",
    "start": "1076240",
    "end": "1081840"
  },
  {
    "text": "when working with grpc we use this",
    "start": "1082480",
    "end": "1084480"
  },
  {
    "text": "status type for errors",
    "start": "1084480",
    "end": "1086080"
  },
  {
    "text": "which includes a message and a code the",
    "start": "1086080",
    "end": "1088720"
  },
  {
    "text": "geopsy gateway automatically translates",
    "start": "1088720",
    "end": "1090799"
  },
  {
    "text": "the codes into appropriate http status",
    "start": "1090799",
    "end": "1092960"
  },
  {
    "text": "codes",
    "start": "1092960",
    "end": "1093679"
  },
  {
    "text": "according to the google.rpc.code",
    "start": "1093679",
    "end": "1096160"
  },
  {
    "text": "definitions",
    "start": "1096160",
    "end": "1097600"
  },
  {
    "text": "here we can see a sample of the error",
    "start": "1097600",
    "end": "1099440"
  },
  {
    "text": "codes and their respective mappings",
    "start": "1099440",
    "end": "1102080"
  },
  {
    "text": "if you have more specific needs for your",
    "start": "1102080",
    "end": "1103760"
  },
  {
    "text": "error handling such as a custom error",
    "start": "1103760",
    "end": "1105919"
  },
  {
    "text": "struct format",
    "start": "1105919",
    "end": "1106880"
  },
  {
    "text": "you can create your own error handling",
    "start": "1106880",
    "end": "1108480"
  },
  {
    "text": "function and configure the runtime mux",
    "start": "1108480",
    "end": "1110320"
  },
  {
    "text": "with it on startup",
    "start": "1110320",
    "end": "1112000"
  },
  {
    "text": "here we have an example of an error",
    "start": "1112000",
    "end": "1113440"
  },
  {
    "text": "handler that sets the response code to",
    "start": "1113440",
    "end": "1115360"
  },
  {
    "text": "one that is mapped from the grpc status",
    "start": "1115360",
    "end": "1117679"
  },
  {
    "text": "and the response body to simply be the",
    "start": "1117679",
    "end": "1119679"
  },
  {
    "text": "error message itself",
    "start": "1119679",
    "end": "1121360"
  },
  {
    "text": "note that using custom errors like this",
    "start": "1121360",
    "end": "1123120"
  },
  {
    "text": "will break the default open api",
    "start": "1123120",
    "end": "1124799"
  },
  {
    "text": "generator definitions",
    "start": "1124799",
    "end": "1127840"
  },
  {
    "text": "and wrapping it all up what have we done",
    "start": "1128320",
    "end": "1130480"
  },
  {
    "text": "today",
    "start": "1130480",
    "end": "1131440"
  },
  {
    "text": "we've created a http json service but",
    "start": "1131440",
    "end": "1134000"
  },
  {
    "text": "used grpc and protobuf under the hood",
    "start": "1134000",
    "end": "1136640"
  },
  {
    "text": "this allows us to get all the benefits",
    "start": "1136640",
    "end": "1138400"
  },
  {
    "text": "of the protobuf idl",
    "start": "1138400",
    "end": "1140080"
  },
  {
    "text": "while still exposing a json interface",
    "start": "1140080",
    "end": "1142080"
  },
  {
    "text": "externally",
    "start": "1142080",
    "end": "1143440"
  },
  {
    "text": "we've also managed to sneak a gpc",
    "start": "1143440",
    "end": "1145200"
  },
  {
    "text": "service into our stack and now it's much",
    "start": "1145200",
    "end": "1147039"
  },
  {
    "text": "easier to argue that upc might be",
    "start": "1147039",
    "end": "1148960"
  },
  {
    "text": "something worth trying",
    "start": "1148960",
    "end": "1150720"
  },
  {
    "text": "new clients can use grbc and old clients",
    "start": "1150720",
    "end": "1153120"
  },
  {
    "text": "can keep using the json interface",
    "start": "1153120",
    "end": "1155360"
  },
  {
    "text": "most importantly we found an easy robust",
    "start": "1155360",
    "end": "1158400"
  },
  {
    "text": "way to write restful services",
    "start": "1158400",
    "end": "1160480"
  },
  {
    "text": "and we've only explored a snapshot of",
    "start": "1160480",
    "end": "1162480"
  },
  {
    "text": "all that the geopsy gateway has to offer",
    "start": "1162480",
    "end": "1164960"
  },
  {
    "text": "other features include the ability to",
    "start": "1164960",
    "end": "1166799"
  },
  {
    "text": "set cookies perform header-based",
    "start": "1166799",
    "end": "1168880"
  },
  {
    "text": "authentication in interceptors",
    "start": "1168880",
    "end": "1170720"
  },
  {
    "text": "and much more i hope you will as i do",
    "start": "1170720",
    "end": "1174320"
  },
  {
    "text": "use the geopsy gateway for your next",
    "start": "1174320",
    "end": "1176240"
  },
  {
    "text": "http json service",
    "start": "1176240",
    "end": "1179600"
  },
  {
    "text": "thank you",
    "start": "1179600",
    "end": "1183039"
  }
]