[
  {
    "text": "my name is evan gilman thank you for coming before we start I figured I'd tell you a little bit about myself I",
    "start": "30",
    "end": "6569"
  },
  {
    "text": "started my career in academia originally doing with network engineering did all",
    "start": "6569",
    "end": "12960"
  },
  {
    "text": "sorts of stuff systems administration and network storage all kinds of things I've been bouncing around the Bay Area",
    "start": "12960",
    "end": "19680"
  },
  {
    "text": "for the last five years or so now and currently at this company called Scytale where I've been focusing full-time on",
    "start": "19680",
    "end": "26340"
  },
  {
    "text": "spiffy inspire which we'll talk about today so I figure first we talked a",
    "start": "26340",
    "end": "31710"
  },
  {
    "text": "little bit about cloud native network security kind of what that landscape looks like how previous patterns fit",
    "start": "31710",
    "end": "37800"
  },
  {
    "text": "onto the current cloud native architecture we'll talk a little bit about spiffy the problems that solves",
    "start": "37800",
    "end": "43170"
  },
  {
    "text": "what it aims to do a little bit about spire kind of from a high level just how it functions and then to give you a",
    "start": "43170",
    "end": "49559"
  },
  {
    "text": "clearer idea of that we're gonna do like a day in the life of a spire deployment as sort of speak so we'll do a little",
    "start": "49559",
    "end": "55739"
  },
  {
    "text": "bit of a walk through there and then time permitting at the very end I have a live demo prepared for you all so I",
    "start": "55739",
    "end": "63539"
  },
  {
    "text": "think that if you're at this conference you probably aware that today's networks look a lot different than they used to and a result of this is that the",
    "start": "63539",
    "end": "71670"
  },
  {
    "text": "security requirements of this networks changed a whole lot when network resources come and go a lot more frequently than they used to and a",
    "start": "71670",
    "end": "78750"
  },
  {
    "text": "lot of system support multi-tenancy and and the previous like the network security patterns of your a particularly",
    "start": "78750",
    "end": "84720"
  },
  {
    "text": "perimeter patterns are really poorly suited for this kind of thing for multi-tenancy and and highly dynamic",
    "start": "84720",
    "end": "90570"
  },
  {
    "text": "workloads really kind of throw a wrench and into that whole thing that we've been doing for a while now another thing",
    "start": "90570",
    "end": "97380"
  },
  {
    "text": "here is that we don't really have complete control over the network any longer particularly if you're in the public cloud you you you may or may not",
    "start": "97380",
    "end": "103619"
  },
  {
    "text": "have Robin controls and depending on your provider and at the same time you",
    "start": "103619",
    "end": "109740"
  },
  {
    "text": "still want to apply find here in policy perhaps even more fine grains than you have in the past so I guess all of this",
    "start": "109740",
    "end": "116159"
  },
  {
    "text": "comes together to say that the perimeter security model in and of itself hasn't aged particularly well and is certainly",
    "start": "116159",
    "end": "123420"
  },
  {
    "text": "not able to solve for the cloud native architectures that we see today at the",
    "start": "123420",
    "end": "129119"
  },
  {
    "text": "same time software is eating the world this is a quote Marc Andreessen who's a notable Silicon",
    "start": "129119",
    "end": "135130"
  },
  {
    "text": "Valley investor and this is definitely true for cloud native network security space the controls we see from security",
    "start": "135130",
    "end": "142240"
  },
  {
    "text": "controls moving up in the software out of hardware and out of the network where they have been historically for literally decades and there are lots of",
    "start": "142240",
    "end": "149260"
  },
  {
    "text": "really great projects which are aimed to kind of solve for this network security automation but when you when you do this",
    "start": "149260",
    "end": "155200"
  },
  {
    "text": "when you solve for that problem you kind of have to choose an identifier you need a way to describe the things that you're writing policy against right and most",
    "start": "155200",
    "end": "162370"
  },
  {
    "text": "most compute providers most cloud providers have their own identifiers security group is the example here but",
    "start": "162370",
    "end": "168760"
  },
  {
    "text": "the only problem is that this isn't very well generalized it's specific to that cloud provider if you ever need to move cloud providers or you ever turn up an",
    "start": "168760",
    "end": "174790"
  },
  {
    "text": "on-prem anything like this it will fault your security system will fall apart if you face yourself on primitives which",
    "start": "174790",
    "end": "180760"
  },
  {
    "text": "are cloud specific so while some folks do it and it's ok if you'll never ever move it it's kind of ill-advised to",
    "start": "180760",
    "end": "186790"
  },
  {
    "text": "start to start in this way but going up one level we have IP addresses right and",
    "start": "186790",
    "end": "192280"
  },
  {
    "text": "so we're getting a little bit closer to what we're looking for here because IP addresses are fairly generalized they'll they'll apply kind of across the board",
    "start": "192280",
    "end": "197830"
  },
  {
    "text": "you know and most projects today which provide this network security automation we're talking about are using these IP",
    "start": "197830",
    "end": "204850"
  },
  {
    "text": "based ACLs if they're not I supposed to the first class citizen they're kind of",
    "start": "204850",
    "end": "210910"
  },
  {
    "text": "going on under the covers you know you may use one thing but then there's a level of indirection and then they're still IP tables rules and all sorts of",
    "start": "210910",
    "end": "216820"
  },
  {
    "text": "other stuff layer three and therefore policy gets instantiated underneath and while this is largely a good thing it",
    "start": "216820",
    "end": "223750"
  },
  {
    "text": "doesn't come without as pains for instance these apples that you build this can grow quite large thousands or",
    "start": "223750",
    "end": "230890"
  },
  {
    "text": "tens of thousands of rules now particularly if you're doing host post based browser you know /rd twos and",
    "start": "230890",
    "end": "236470"
  },
  {
    "text": "you're doing we're also layer for stuff select this port so each individual host may have you know tens of rules applied",
    "start": "236470",
    "end": "242680"
  },
  {
    "text": "to it and then it's also kind of dependent on a network topology so if you have Matt anywhere you're doing any",
    "start": "242680",
    "end": "248800"
  },
  {
    "text": "kind of thing like this how do you know which IP address translates where and particularly in cloud a lot of this",
    "start": "248800",
    "end": "255700"
  },
  {
    "text": "stuff is out of your control you there's not a whole lot you can do about it so",
    "start": "255700",
    "end": "260789"
  },
  {
    "text": "on that note you know if you don't control the network you know how easy is",
    "start": "260789",
    "end": "265870"
  },
  {
    "text": "it to trust Network because what we're talking about here after all is like a security control and this IP guarantee that you",
    "start": "265870",
    "end": "273800"
  },
  {
    "text": "build security controls around is a really weak guarantee and manipulation is practically undetectable by either",
    "start": "273800",
    "end": "279890"
  },
  {
    "text": "endpoint if the IP address has changed in the middle or something has happened you don't really don't really know so so",
    "start": "279890",
    "end": "286100"
  },
  {
    "text": "it's hard to build security policies accurately describe things using these IP addresses and you basically have to",
    "start": "286100",
    "end": "293390"
  },
  {
    "text": "trust the network to do the right thing in this case I'm so putting that side that problem aside for a moment I I do",
    "start": "293390",
    "end": "300620"
  },
  {
    "text": "think we should we should think more critically about these identifiers x' that we've chosen and when we use these",
    "start": "300620",
    "end": "306770"
  },
  {
    "text": "this IP layer 3 layer 4 identifiers what what are we actually modeling here right",
    "start": "306770",
    "end": "312200"
  },
  {
    "text": "I think realistically or a modeling host-to-host interaction right but is",
    "start": "312200",
    "end": "318590"
  },
  {
    "text": "this what we were really intending to do you know when thinking about policy you generally write policy as I want a to",
    "start": "318590",
    "end": "325760"
  },
  {
    "text": "talk to be alright but a and B are practically always software services and many services can run on the same host",
    "start": "325760",
    "end": "333340"
  },
  {
    "text": "kubernetes does an ok job at approximating this by giving one IP address per pod right and again we're",
    "start": "333340",
    "end": "340580"
  },
  {
    "text": "getting kind of closer to what we're looking for but it's still a fairly weak assertion one IP address can represent",
    "start": "340580",
    "end": "345980"
  },
  {
    "text": "many things even even in kubernetes pod there can be lots of things running in that pod that share the same IP address so we really want to be more granular",
    "start": "345980",
    "end": "352850"
  },
  {
    "text": "about this what we really want to describe is not host a host communication the process to process",
    "start": "352850",
    "end": "358010"
  },
  {
    "text": "communication right and the reality is that we're trying to describe process",
    "start": "358010",
    "end": "363140"
  },
  {
    "text": "process communication but in the whole time we've been using these IP based ACLs to do this right and so what I'm",
    "start": "363140",
    "end": "369650"
  },
  {
    "text": "trying to kind of the point I'm trying to drive here is that IP addresses are really really bad at describing",
    "start": "369650",
    "end": "375050"
  },
  {
    "text": "particular workloads right it's just not the right not the right thing but going",
    "start": "375050",
    "end": "380630"
  },
  {
    "text": "back to the identifiers they have available to us we can kind of see that there's one missing here so how do you",
    "start": "380630",
    "end": "386780"
  },
  {
    "text": "identify a software process particularly in this brave new world of highly dynamic heterogeneous systems so this",
    "start": "386780",
    "end": "393530"
  },
  {
    "text": "problem is known as the worklet identity problem and there are lots of folks for",
    "start": "393530",
    "end": "399770"
  },
  {
    "text": "on this problem kubernetes SIG off container identity working group was working on this problem the ISTE Oh",
    "start": "399770",
    "end": "405979"
  },
  {
    "text": "folks are working on this problem and of course myself and the rest of the site ill folks are working on this problem and that's just within the cloud native",
    "start": "405979",
    "end": "413349"
  },
  {
    "text": "umbrella you know we're all working together but there are folks outside of this I'm Road we're also working on this problem and and the direction that we're",
    "start": "413349",
    "end": "421430"
  },
  {
    "text": "going thus far there's only one thing here a kind of nuance point here is that the solutions that were coming up with",
    "start": "421430",
    "end": "427639"
  },
  {
    "text": "are largely dependent on the underlying orchestration systems so what we end up",
    "start": "427639",
    "end": "432919"
  },
  {
    "text": "with is these different software platforms I have different ideas about what workload identity is right the",
    "start": "432919",
    "end": "439069"
  },
  {
    "text": "worker identity that you get from kubernetes is a fundamentally different identity than the one that you would get under DCOs for instance and it can be",
    "start": "439069",
    "end": "446810"
  },
  {
    "text": "really really difficult to rectify the differences between these identities mobbin so there are there are tools to",
    "start": "446810",
    "end": "452409"
  },
  {
    "text": "to accomplish these things but again they're they're very focused on on their",
    "start": "452409",
    "end": "458180"
  },
  {
    "text": "particular deployments right and there's a result of that none of them interoperate with each other um and furthermore none of them are",
    "start": "458180",
    "end": "464900"
  },
  {
    "text": "super robust either because at the end of the day they're kind of tangential to the projects which host them right like",
    "start": "464900",
    "end": "470419"
  },
  {
    "text": "kubernetes is looking to schedule container so it's not necessarily looking them in certificates or do other things like",
    "start": "470419",
    "end": "475639"
  },
  {
    "text": "this right so the result is not only interoperability problems but also that",
    "start": "475639",
    "end": "480889"
  },
  {
    "text": "you know these things rarely meet the users needs because they're not super flexible and it's just kind of like a necessary evil that must be written into",
    "start": "480889",
    "end": "488180"
  },
  {
    "text": "this project so what we really need to solve this problem is what we call",
    "start": "488180",
    "end": "493250"
  },
  {
    "text": "Universal workload identity right the idea that a workload identity which can",
    "start": "493250",
    "end": "498349"
  },
  {
    "text": "be understood by everyone right and not only can you start to solve authentication problems and policy",
    "start": "498349",
    "end": "503779"
  },
  {
    "text": "problems with Universal workload identity but you know solve other problems as well tracing metering auditing all these",
    "start": "503779",
    "end": "510590"
  },
  {
    "text": "things become a whole lot easier if you have a stable identity paradigm that can",
    "start": "510590",
    "end": "515899"
  },
  {
    "text": "apply across different types of software stacks and you can trace requests as they traverse different ecosystems and",
    "start": "515899",
    "end": "522320"
  },
  {
    "text": "so it's really interesting and promising so enter spiffy this is the problem that",
    "start": "522320",
    "end": "530240"
  },
  {
    "text": "spiffy solves right it's it workload identity that is standardized it is on level playing fields that will",
    "start": "530240",
    "end": "537600"
  },
  {
    "text": "work across different software stacks right and really at its core spiffy is just a set of open specifications and",
    "start": "537600",
    "end": "545070"
  },
  {
    "text": "these specifications are community driven it's not something you know Scytale didn't wake up one day and say we need to write a spec for this thing",
    "start": "545070",
    "end": "551490"
  },
  {
    "text": "this is this is a bunch of folks who come together for many many companies to kind of the consensus upon this is this",
    "start": "551490",
    "end": "557370"
  },
  {
    "text": "is the way that we think generalized identity should look at act and breathe right so these specifications they",
    "start": "557370",
    "end": "564779"
  },
  {
    "text": "address a number of things but primarily the goal here is to address the issue of the validation and the interoperability",
    "start": "564779",
    "end": "570600"
  },
  {
    "text": "of worklet identity right and we can do this by first defining a standard way to",
    "start": "570600",
    "end": "576750"
  },
  {
    "text": "prove workload identity right and second providing a standard way to both obtain",
    "start": "576750",
    "end": "581880"
  },
  {
    "text": "and validate these identities so there",
    "start": "581880",
    "end": "586890"
  },
  {
    "text": "are many specifications under the spiffy umbrella today we're going to talk about three of them the first one outlines",
    "start": "586890",
    "end": "592950"
  },
  {
    "text": "what we call a spiffy ID and this is what the spiffy ID looks like it's",
    "start": "592950",
    "end": "598020"
  },
  {
    "text": "modeled as a URI which is basically just a structured string and the spec isn't too prescriptive about how you model",
    "start": "598020",
    "end": "604529"
  },
  {
    "text": "this thing how you compose this URI you can choose any name or path you wish and",
    "start": "604529",
    "end": "609870"
  },
  {
    "text": "that acts mostly as a primary key so it can kind of be thought of as a user name but for workloads rather than humans and",
    "start": "609870",
    "end": "616220"
  },
  {
    "text": "there's not very interesting in and of itself but it provides us a really flexible starting point next we",
    "start": "616220",
    "end": "624060"
  },
  {
    "text": "introduce this thing called a spiffy verifiable identity document or s vid for short and this is how we approve",
    "start": "624060",
    "end": "632250"
  },
  {
    "text": "identity to a remote system and when we talk about a document which can fulfill this this thing we're we're really",
    "start": "632250",
    "end": "638580"
  },
  {
    "text": "looking for is something called their proof of possession property and luckily there's lots of existing document types",
    "start": "638580",
    "end": "644220"
  },
  {
    "text": "that have the proof of possession property so that we don't really need to reinvent the wheel on this one and as a result spiffy is as x.509 certificate as",
    "start": "644220",
    "end": "651810"
  },
  {
    "text": "the underlying document type for s fib we looked at many different document types in this process the next time I",
    "start": "651810",
    "end": "658890"
  },
  {
    "text": "made X file and I made a lot of sense to start with for a lot of reasons first",
    "start": "658890",
    "end": "664110"
  },
  {
    "text": "it's widely deployed second is widely understood this behavior is widely understood and and",
    "start": "664110",
    "end": "669410"
  },
  {
    "text": "finally it's a model that just works well for the specific problem space in general so what these specifications",
    "start": "669410",
    "end": "676790"
  },
  {
    "text": "really talk about is how to encode a spliffy ID into an x.509 certificate",
    "start": "676790",
    "end": "682240"
  },
  {
    "text": "specifically like which fields to use etc and how to validate this certificate and a spliffy ID inside of it so with",
    "start": "682240",
    "end": "691400"
  },
  {
    "text": "spiffy IDs fib defi and we can start to begin to address this universal identity",
    "start": "691400",
    "end": "697640"
  },
  {
    "text": "problem right we have an identity format and a document which is generalized on cross-cutting can be used anywhere",
    "start": "697640",
    "end": "704170"
  },
  {
    "text": "regardless of the underlying software platform but there's still one missing",
    "start": "704170",
    "end": "710060"
  },
  {
    "text": "piece here which is a how does workload identity get issued in the first place right where does this s fit thing come",
    "start": "710060",
    "end": "717080"
  },
  {
    "text": "from and to answer that spiffy has another specification called the workload API specification and the",
    "start": "717080",
    "end": "724910"
  },
  {
    "text": "workload api is a standardized node local interface right so when a workload first starts the thing it will contact",
    "start": "724910",
    "end": "731630"
  },
  {
    "text": "this API and this API to some work to identify the caller and Unruh turn the correct estimates to it right it will",
    "start": "731630",
    "end": "737630"
  },
  {
    "text": "also return the trust bundles at the same time so that the workload knows which other things that should be trusting and at this point the workload",
    "start": "737630",
    "end": "744890"
  },
  {
    "text": "is ready to serve traffic because their traffic using the suspenders been issued actually and so standardizing on this",
    "start": "744890",
    "end": "750980"
  },
  {
    "text": "estimate but not just the esterday but also the workload api a super duper valuable thing because what it does is",
    "start": "750980",
    "end": "758510"
  },
  {
    "text": "it ensures that identity is available in a platform agnostic way doesn't matter if you're running on Metro or AWS or TCP",
    "start": "758510",
    "end": "765620"
  },
  {
    "text": "or whatever let it be compliant workloads should be able to run anywhere you pick it up and drop it anywhere this identity will be available right so",
    "start": "765620",
    "end": "773150"
  },
  {
    "text": "this this paves the way for truly heterogeneous infrastructure okay so",
    "start": "773150",
    "end": "778580"
  },
  {
    "text": "clearly spiffy compliance is a pretty powerful thing but you might be asking like huh okay now like what exactly do I",
    "start": "778580",
    "end": "785870"
  },
  {
    "text": "need to do how do i spiffy this thing right what exposes this workload API right how",
    "start": "785870",
    "end": "792800"
  },
  {
    "text": "do these estimates get minted and distributed to where they need to be now so this is where spire comes own",
    "start": "792800",
    "end": "798900"
  },
  {
    "text": "spire is an open-source project which implements the spiffy standards namely",
    "start": "798900",
    "end": "804400"
  },
  {
    "text": "it exposes this workload API and framework for s vid management management of issue of so these s feds",
    "start": "804400",
    "end": "810840"
  },
  {
    "text": "and I should note that you know spiffy is as I mentioned before spiffy is only a set of specification so anyone can",
    "start": "810840",
    "end": "817180"
  },
  {
    "text": "make a spiffy implementation right as an example of sto implements spiffy right",
    "start": "817180",
    "end": "822430"
  },
  {
    "text": "so spire is just one implementation and different than some other implementations in spire as a standalone",
    "start": "822430",
    "end": "828730"
  },
  {
    "text": "project which is focused purely on this problem of the universal identity and it's fairly thoughtfully designed with a",
    "start": "828730",
    "end": "835410"
  },
  {
    "text": "extensive plugin system which allows it to operate in all these different environments even if you have some custom through in-house of course",
    "start": "835410",
    "end": "843720"
  },
  {
    "text": "automatically issuing certificates is fairly tricky business so spire also necessarily solves this",
    "start": "843720",
    "end": "849370"
  },
  {
    "text": "problem of secure introduction and Trust bootstrapping which we'll talk a little bit about later so this is going to",
    "start": "849370",
    "end": "858550"
  },
  {
    "text": "aspire a high-level spire comprises two core components the agent and the server",
    "start": "858550",
    "end": "864930"
  },
  {
    "text": "the agent is responsible for exposing this workload API on every host is also responsible for doing what we set what",
    "start": "865710",
    "end": "872050"
  },
  {
    "text": "we call workload at to station which is verifying the authenticity of the caller and making sure that it is who we think",
    "start": "872050",
    "end": "877630"
  },
  {
    "text": "it is spire server is responsible for as an issuance of the minting of these",
    "start": "877630",
    "end": "882940"
  },
  {
    "text": "certificates is responsible for node attestation or you know measuring the authenticity of new nodes that are",
    "start": "882940",
    "end": "889060"
  },
  {
    "text": "coming online as well as registering these identity mappings basically saying you know who should get what stiffy ID",
    "start": "889060",
    "end": "897250"
  },
  {
    "text": "right um and to demonstrate how this kind of works it I think it's a good to step",
    "start": "897250",
    "end": "902410"
  },
  {
    "text": "through a worked example of this so the first time of course is deploy spire server can run pretty much anywhere that",
    "start": "902410",
    "end": "909550"
  },
  {
    "text": "it has no special requirements of its own and on the first boot it generates a self-signed certificate and this is a",
    "start": "909550",
    "end": "915460"
  },
  {
    "text": "certificate that we'll use to sign s vids for all the workloads which are managed underneath this particular server we also have a plugin called an",
    "start": "915460",
    "end": "923560"
  },
  {
    "text": "upstream CA plugin so if you have an existing PKI system we can integrate with this as well through this upstream",
    "start": "923560",
    "end": "928930"
  },
  {
    "text": "CA plug-in but it's not required at the same time we turn on this registration API and this radio station",
    "start": "928930",
    "end": "936820"
  },
  {
    "text": "API is let's use to configure these identity mappings who gets what essentially and these properiy we in",
    "start": "936820",
    "end": "943180"
  },
  {
    "text": "order to make that mapping we need to be able to describe a workload in a node in a particular way so we use these",
    "start": "943180",
    "end": "949810"
  },
  {
    "text": "properties properties we call selectors are natural properties of the nodes and the workloads that we're trying to describe so as an example this is one",
    "start": "949810",
    "end": "958660"
  },
  {
    "text": "register what we call registration mapping so this is saying that in kubernetes cluster foo in the namespace",
    "start": "958660",
    "end": "966550"
  },
  {
    "text": "operations and the service account MediaWiki with workloads with this particular docker image ID will get",
    "start": "966550",
    "end": "973300"
  },
  {
    "text": "speci ID op slash with you right and since this is an API it's really easy to",
    "start": "973300",
    "end": "979000"
  },
  {
    "text": "automate so this can be a human putting this information in or you can have automation systems which are kind of",
    "start": "979000",
    "end": "984670"
  },
  {
    "text": "curating these mappings and updating these mappings those things change in your environment so as soon as the",
    "start": "984670",
    "end": "991450"
  },
  {
    "text": "server is up it's ready to take on agents and for this part of the example I kind of have to choose a provider so I",
    "start": "991450",
    "end": "997000"
  },
  {
    "text": "chose AWS and the server doesn't necessarily have to run in AWS as I mentioned before but let's say we turn",
    "start": "997000",
    "end": "1003270"
  },
  {
    "text": "up ec2 VM and the first thing to start on ec2 VM will generally be spire agent",
    "start": "1003270",
    "end": "1008360"
  },
  {
    "text": "and the first thing that the agent does is perform what we call no data station it simply stated this means strongly",
    "start": "1008360",
    "end": "1016530"
  },
  {
    "text": "prove that I am a valid AWS server I belong to you I'm authorized to be here right in order to do this you have to",
    "start": "1016530",
    "end": "1023430"
  },
  {
    "text": "leverage what we call a trusted third party and in this case our trusted third party is actually AWS so the agent",
    "start": "1023430",
    "end": "1030990"
  },
  {
    "text": "exercises this noted tester plug-in which is another plug-in and this plug-in is platform aware so it knows how to speak to AWS and gather the",
    "start": "1030990",
    "end": "1038160"
  },
  {
    "text": "necessary proof that it is the Machine it claims to be right and so for AWS the",
    "start": "1038160",
    "end": "1043920"
  },
  {
    "text": "AWS case means this is probably an instance identity document it then presents this instance identity document",
    "start": "1043920",
    "end": "1050280"
  },
  {
    "text": "to the spire server and it uses does this using like regular server verified",
    "start": "1050280",
    "end": "1055440"
  },
  {
    "text": "TLS if there's a hardware here this might be a TPM quote instead of a instead of a ID so you can see how this",
    "start": "1055440",
    "end": "1063330"
  },
  {
    "text": "is fairly flexible you can change different types of documents here mom once the server receives this proof",
    "start": "1063330",
    "end": "1068880"
  },
  {
    "text": "it has to validate it in some way right so in our case this means calling the AWS API now an additional checks can be",
    "start": "1068880",
    "end": "1075660"
  },
  {
    "text": "done at this time - like I said a fresh boot was the was the Nick and the hard drive just attached to it recently like",
    "start": "1075660",
    "end": "1081420"
  },
  {
    "text": "you can depending on your risk profile you can look up all these different properties and make all these different tracks right so the ones AWS",
    "start": "1081420",
    "end": "1088110"
  },
  {
    "text": "acknowledges this you know you know that the aside any document is valid one all of your custom checks pass finally an",
    "start": "1088110",
    "end": "1095190"
  },
  {
    "text": "s-video fish ood to the agent assessment represents the identity of the agent itself and everything happening after",
    "start": "1095190",
    "end": "1102660"
  },
  {
    "text": "this after this no data station has been completed occurs with mutual TLS using this agent identity as the client",
    "start": "1102660",
    "end": "1109200"
  },
  {
    "text": "certificate so at this point aspire agent is fully blue strapped and the",
    "start": "1109200",
    "end": "1114780"
  },
  {
    "text": "next similar does is turn on workload API and the workload API is accessible",
    "start": "1114780",
    "end": "1121800"
  },
  {
    "text": "by any process on the node and crucially perhaps a little bit counter-intuitively",
    "start": "1121800",
    "end": "1127380"
  },
  {
    "text": "it's actually unauthenticated and this is a really important property for bootstrapping trust because otherwise",
    "start": "1127380",
    "end": "1134280"
  },
  {
    "text": "we'd have to somehow uncheck credentials into this workload and it turns out that that's kind of the hard part right but",
    "start": "1134280",
    "end": "1141210"
  },
  {
    "text": "we obviously still want some control we don't want to just give certificates out to any willy-nilly process to ask for them on this socket so instead of direct",
    "start": "1141210",
    "end": "1148020"
  },
  {
    "text": "authentication we the agent performs this out of band process interrogation which enables it to identify and verify",
    "start": "1148020",
    "end": "1156180"
  },
  {
    "text": "the workload authenticity without like the use of direct credentials so for",
    "start": "1156180",
    "end": "1162180"
  },
  {
    "text": "instance let's say that a workload calls the agent socket and requests a nested",
    "start": "1162180",
    "end": "1167510"
  },
  {
    "text": "i'll linux the agent will interrogate the kernel for information about the caller all right so first it will figure",
    "start": "1167510",
    "end": "1173640"
  },
  {
    "text": "out what's the process ID of this thing which is calling me and from there can discover many many other properties",
    "start": "1173640",
    "end": "1178950"
  },
  {
    "text": "things like UID GID even the Shah of the binary which was running and these",
    "start": "1178950",
    "end": "1184890"
  },
  {
    "text": "properties that are discovered at this time are the selectors that we saw in a previous mapping right and these",
    "start": "1184890",
    "end": "1191100"
  },
  {
    "text": "selectors are properties they get returned to us from another plugin what we call the workload a tester plug-in",
    "start": "1191100",
    "end": "1197210"
  },
  {
    "text": "the agent supports we're gonna test our plugins they can be mixed and matched and so when the call",
    "start": "1197210",
    "end": "1203490"
  },
  {
    "text": "comes in we fan out on all these attestation plugins and then they return to us all these selectors or properties",
    "start": "1203490",
    "end": "1209640"
  },
  {
    "text": "about the thing which called us right and once we get all the selectors back we can consult that identity mapping in",
    "start": "1209640",
    "end": "1215070"
  },
  {
    "text": "the server and say ok we now know that this is the s vid you should be issued or you are not are not authorized to",
    "start": "1215070",
    "end": "1220140"
  },
  {
    "text": "have this particular s VIN so the selector as I mentioned before you idgi",
    "start": "1220140",
    "end": "1225990"
  },
  {
    "text": "D etc those are coming from the UNIX a tester right like those are UNIX primitives that we're using to describe",
    "start": "1225990",
    "end": "1232170"
  },
  {
    "text": "the process but if you're using kubernetes for instance we would have a kubernetes a tester and that a tester or",
    "start": "1232170",
    "end": "1238950"
  },
  {
    "text": "speak to the cube load right we first validate that this workload is in fact if you burn Eddy's workload and from",
    "start": "1238950",
    "end": "1244980"
  },
  {
    "text": "there it can discover all sorts of cuber and any specific information about it you saw the example we gave his name",
    "start": "1244980",
    "end": "1250320"
  },
  {
    "text": "space and service account and other things like this so going back to the",
    "start": "1250320",
    "end": "1255900"
  },
  {
    "text": "idea of trusted third party we can see that we used AWS as a trusted third party for the server attestation piece",
    "start": "1255900",
    "end": "1262830"
  },
  {
    "text": "and then we use the Linux kernel as a trusted third party for the workload attestation piece right and this pattern",
    "start": "1262830",
    "end": "1269220"
  },
  {
    "text": "using a trusted third party to establish trust between two between previously untrusted entities is a problem is known",
    "start": "1269220",
    "end": "1275760"
  },
  {
    "text": "as secure introduction a security reduction is a famously challenging",
    "start": "1275760",
    "end": "1281340"
  },
  {
    "text": "problem most folks don't even know that this problem exists to be honest and this is one of the reasons that I love",
    "start": "1281340",
    "end": "1287400"
  },
  {
    "text": "spire so much is because it takes these really really hard problems and makes them easy to understand and easy to",
    "start": "1287400",
    "end": "1292890"
  },
  {
    "text": "approach and if you can go a little bit more about the examples that we just",
    "start": "1292890",
    "end": "1298020"
  },
  {
    "text": "walked through you can see this virus all secure introduction for the server using AWS until the workload using Linux",
    "start": "1298020",
    "end": "1304080"
  },
  {
    "text": "kernel right and this is absolutely necessary if you ever want to automate secure issuance of identity it's really",
    "start": "1304080",
    "end": "1311220"
  },
  {
    "text": "really difficult to securely issue identity in an automated fashion without doing a pattern that looks a lot like",
    "start": "1311220",
    "end": "1317280"
  },
  {
    "text": "this one and we're able to do this using spire in a fairly generalized way it's",
    "start": "1317280",
    "end": "1323520"
  },
  {
    "text": "really easy to unlock additional support for platforms by writing these small little plugins that just go in and so",
    "start": "1323520",
    "end": "1331160"
  },
  {
    "text": "Dillo talking and I realize this is a lot of sometimes it's kind of hard to hold it all in your",
    "start": "1331160",
    "end": "1337110"
  },
  {
    "text": "head and visualize just from something like this so I actually have a demo prepared to show you all so let's hope",
    "start": "1337110",
    "end": "1345960"
  },
  {
    "text": "that I can change my screen configuration now and make this thing work",
    "start": "1345960",
    "end": "1351350"
  },
  {
    "text": "all right okay so this is I'm right here",
    "start": "1359740",
    "end": "1369140"
  },
  {
    "text": "I'm in a spiffy example repo is that clear enough for you guys in the back can you all see this okay",
    "start": "1369140",
    "end": "1374780"
  },
  {
    "text": "no is that better okay so this is the spiffy example repo",
    "start": "1374780",
    "end": "1383179"
  },
  {
    "text": "this is where we have all the demo code check them so you can go actually and run this demo yourself so we'll be working out of this repo today and so",
    "start": "1383179",
    "end": "1391640"
  },
  {
    "text": "here's a diagram of what this demo looks like and I know I'm sorry in the back of probably a little fuzzy but all up",
    "start": "1391640",
    "end": "1398720"
  },
  {
    "text": "through it this whole demo is run under vagrants essentially and there are three virtual machines in this demo the top right the",
    "start": "1398720",
    "end": "1406190"
  },
  {
    "text": "green box virtual machine is the kubernetes master vm this is gonna run kubernetes api server it's gonna run",
    "start": "1406190",
    "end": "1413570"
  },
  {
    "text": "also our spire server on the bottom right we have a database virtual machine",
    "start": "1413570",
    "end": "1419000"
  },
  {
    "text": "this is vagrant VM is kind of meant to be an analog of a bare metal host right so it's ready Mario to be there on the",
    "start": "1419000",
    "end": "1427010"
  },
  {
    "text": "Left the green one here is kubernetes node and like cubelet and it's running a",
    "start": "1427010",
    "end": "1433309"
  },
  {
    "text": "pod which has this blog slash forum sort of application running a side of it and",
    "start": "1433309",
    "end": "1438980"
  },
  {
    "text": "you can see we're using ghost tunnel here ghost tunnel is providing the mutually authenticated TLS between both",
    "start": "1438980",
    "end": "1445309"
  },
  {
    "text": "database and the blog application and you might also notice this little",
    "start": "1445309",
    "end": "1450429"
  },
  {
    "text": "sidecar kind of box here it's a little bit poorly named but this is just a",
    "start": "1450429",
    "end": "1455690"
  },
  {
    "text": "small bit of code which hits that workload API pulls out the identity it shows it in the ghost tunnel we haven't",
    "start": "1455690",
    "end": "1461210"
  },
  {
    "text": "quite talked goes tunnel how'd it talks about API yet but so eventually this thing will go away as one of those",
    "start": "1461210",
    "end": "1466280"
  },
  {
    "text": "things that I just need to get around to so without further ado let's see",
    "start": "1466280",
    "end": "1474309"
  },
  {
    "text": "you know see that okay let's see so make",
    "start": "1479150",
    "end": "1485309"
  },
  {
    "text": "harness will bring up the SVM's and turn up like this multiplexed T MUX thing",
    "start": "1485309",
    "end": "1491400"
  },
  {
    "text": "it's probably well automated actually we'd Dave is I think isn't that back did a pretty good job on this so on he what",
    "start": "1491400",
    "end": "1500549"
  },
  {
    "text": "you're seeing here is those three VMs each each horizontal row is a single VM so the top the top row the top row is",
    "start": "1500549",
    "end": "1508710"
  },
  {
    "text": "the Cates master this running API server will run the aspire server they're the",
    "start": "1508710",
    "end": "1514020"
  },
  {
    "text": "middle row is the Kate's node which is running to blitz a worker node and the",
    "start": "1514020",
    "end": "1519390"
  },
  {
    "text": "bottom row is the database host alright so the first thing we need to do here is",
    "start": "1519390",
    "end": "1525690"
  },
  {
    "text": "obviously start the spire server so we don't have a lot of screen real estate",
    "start": "1525690",
    "end": "1530789"
  },
  {
    "text": "here so I hope that this goes okay we'll see so just fire server run a spider",
    "start": "1530789",
    "end": "1539370"
  },
  {
    "text": "server it's not running in here okay so now it's fire server is running what we need to do is start there first agent",
    "start": "1539370",
    "end": "1545490"
  },
  {
    "text": "will start first agent on database host now we talked about like trusted third party at to station and all this stuff",
    "start": "1545490",
    "end": "1551450"
  },
  {
    "text": "we don't really have a great way to perform this automated attestation and the vagrant environment right so rather",
    "start": "1551450",
    "end": "1558419"
  },
  {
    "text": "than automating the provider base attestation we'll use human as trusted third-party here so what we're gonna do",
    "start": "1558419",
    "end": "1564419"
  },
  {
    "text": "is well tell the server to generate that's a joined token similar to the way docker swarm and some other projects",
    "start": "1564419",
    "end": "1569700"
  },
  {
    "text": "work and at the same time old specify",
    "start": "1569700",
    "end": "1579270"
  },
  {
    "text": "spiffy ID for this host",
    "start": "1579270",
    "end": "1582470"
  },
  {
    "text": "okay so here's the token we'll copy this over and we'll get this agent running",
    "start": "1590110",
    "end": "1598870"
  },
  {
    "text": "I'm also going to kick it into debug mode so we can just kind of see a little better what's going on here okay so we",
    "start": "1598870",
    "end": "1608600"
  },
  {
    "text": "see that the agent has started and it's picked up this spiffy idea of a DB node that we gave to it is kind of arbitrary",
    "start": "1608600",
    "end": "1614600"
  },
  {
    "text": "just something to get the demo going so now that's running on the same machine",
    "start": "1614600",
    "end": "1619610"
  },
  {
    "text": "over here on the right hand side what I'll do is we have this script and this",
    "start": "1619610",
    "end": "1625550"
  },
  {
    "text": "script basically just starts that little sidecar code which grabs the certs and",
    "start": "1625550",
    "end": "1630680"
  },
  {
    "text": "then also starts ghost tunnel okay so I'll run this real quick just to kind of show you what happens here you can see",
    "start": "1630680",
    "end": "1637130"
  },
  {
    "text": "that it's actually panicked and the output is cut zero bundles and that's",
    "start": "1637130",
    "end": "1643490"
  },
  {
    "text": "because we haven't registered this particular work lidya aspire server sorry favor doesn't know about this",
    "start": "1643490",
    "end": "1648800"
  },
  {
    "text": "thing that's not entitle to any identity just yet so what we need to do is we need to register this egg so that I can",
    "start": "1648800",
    "end": "1653870"
  },
  {
    "text": "get it certs and we'll use the UNIX a tester to describe this particular one",
    "start": "1653870",
    "end": "1659030"
  },
  {
    "text": "and because it's running under my user account here we can just see that I am UID 1,000 so we use that to describe",
    "start": "1659030",
    "end": "1666920"
  },
  {
    "text": "this particular process so let's go ahead and register this thing we're",
    "start": "1666920",
    "end": "1673490"
  },
  {
    "text": "going to which Claire a parent idea of the database host which is where it should be running",
    "start": "1673490",
    "end": "1678880"
  },
  {
    "text": "we're going to define the selector as the UID and then finally we're gonna",
    "start": "1684290",
    "end": "1690860"
  },
  {
    "text": "assure it a spiffy idea when I call it",
    "start": "1690860",
    "end": "1697340"
  },
  {
    "text": "database okay so you can see that it's been registered here there's a unique ID",
    "start": "1697340",
    "end": "1703940"
  },
  {
    "text": "for it and everything like that and you can also see on this other side that the agent has now picked up this new just",
    "start": "1703940",
    "end": "1709340"
  },
  {
    "text": "new identity that it can issue so now if we go back and we run this thing again",
    "start": "1709340",
    "end": "1716200"
  },
  {
    "text": "you can see that we did not panic and we actually got a key and we got a certificate and now ghost tunnel is",
    "start": "1716500",
    "end": "1723380"
  },
  {
    "text": "running so if I actually look for a ghost tunnel here real quick we're gonna",
    "start": "1723380",
    "end": "1732410"
  },
  {
    "text": "see that we've we fired it to say that you should only be allowing spec the ID",
    "start": "1732410",
    "end": "1738350"
  },
  {
    "text": "of blog to access this particular database right so this is mutually often Aikido TLS right so now this thing is",
    "start": "1738350",
    "end": "1744680"
  },
  {
    "text": "running we need to start do the same thing we need to start the agent on the kubernetes host so we'll generate",
    "start": "1744680",
    "end": "1752090"
  },
  {
    "text": "another token except we'll call it tube node and I should note that you know you",
    "start": "1752090",
    "end": "1758660"
  },
  {
    "text": "can join all the hosts and your kubernetes cluster in the same way so they all have a similar spiffy idea so and you can do this mapping",
    "start": "1758660",
    "end": "1764900"
  },
  {
    "text": "appropriately right well do debug again",
    "start": "1764900",
    "end": "1773140"
  },
  {
    "text": "okay so you can see that this is it looks a little bit different than the last one you don't see that these logs",
    "start": "1776290",
    "end": "1782510"
  },
  {
    "text": "are kind of rolling over right and the reason that this is happening is because we saw that sidecar code just panics if",
    "start": "1782510",
    "end": "1788210"
  },
  {
    "text": "there's no bundle available so for the purposes of this demo what we've done is we've thrown that sidecar code into a",
    "start": "1788210",
    "end": "1793490"
  },
  {
    "text": "while true loop inside the pod so it's just hitting waiting for an identity to be available right so now we need an",
    "start": "1793490",
    "end": "1800780"
  },
  {
    "text": "inner we haven't registered it yet so there is no identity for it that's why it rolls over like this so we need to",
    "start": "1800780",
    "end": "1806300"
  },
  {
    "text": "register something for it and when we register you know we don't necessarily want to register it using these UNIX",
    "start": "1806300",
    "end": "1812780"
  },
  {
    "text": "primitives right we want to describe it in ways the kubernetes understands so we'll register this thing the Karen",
    "start": "1812780",
    "end": "1828240"
  },
  {
    "text": "is the cube node and we're gonna register a kubernetes selector a namespace selector right by the",
    "start": "1828240",
    "end": "1836160"
  },
  {
    "text": "namespace this is not very granular we want to get a little more granular than that so we'll also specify a service",
    "start": "1836160",
    "end": "1844590"
  },
  {
    "text": "account as a selector as well and",
    "start": "1844590",
    "end": "1849690"
  },
  {
    "text": "finally I'll give it a spiffy ID we'll",
    "start": "1849690",
    "end": "1857100"
  },
  {
    "text": "call it blog okay so now you can see this has been registered and this time",
    "start": "1857100",
    "end": "1862110"
  },
  {
    "text": "it has two different selectors right so these are compound selectors both of these things must be true in order to be",
    "start": "1862110",
    "end": "1867300"
  },
  {
    "text": "issued the spiffy ID you'll further notice that this log is stopped rolling over so odd identity is actually been",
    "start": "1867300",
    "end": "1874050"
  },
  {
    "text": "issued and it's been picked up by this ghost tunnel and if we look forward over here oopsies should see it there it is so it",
    "start": "1874050",
    "end": "1884100"
  },
  {
    "text": "is running and similarly it's running a verifying the spiffy idea of the route and there's being database the PID right",
    "start": "1884100",
    "end": "1889890"
  },
  {
    "text": "so now that these tunnels are both up we should be ready to go here so going back",
    "start": "1889890",
    "end": "1896880"
  },
  {
    "text": "to our situation here if I open this up hopefully",
    "start": "1896880",
    "end": "1902490"
  },
  {
    "text": "with any luck we'll be able to see a forum application there it is",
    "start": "1902490",
    "end": "1914240"
  },
  {
    "text": "[Applause] it's always pensive the little moments",
    "start": "1914240",
    "end": "1919870"
  },
  {
    "text": "in the browser around everything works okay I'm going back to the terminal here",
    "start": "1919870",
    "end": "1926260"
  },
  {
    "text": "just to kind of you know due diligence you know we can prove that this is actually traversing with some TLS tunnel",
    "start": "1926260",
    "end": "1931980"
  },
  {
    "text": "we can kill - - this proxy you can see",
    "start": "1931980",
    "end": "1939790"
  },
  {
    "text": "on the bottom here now that the server side has recognized it's been closed whoops and if we refresh this page 500 so",
    "start": "1939790",
    "end": "1950320"
  },
  {
    "text": "that's automatic certificate issuance of identity which is understood both by kubernetes and by a bare-metal and you",
    "start": "1950320",
    "end": "1958270"
  },
  {
    "text": "can imagine that if you scope these lifetimes down you can you can really really easily rotate these credentials",
    "start": "1958270",
    "end": "1963540"
  },
  {
    "text": "without problem right so going back to my deck here one second juggle my",
    "start": "1963540",
    "end": "1973510"
  },
  {
    "text": "displays again okay so this is almost",
    "start": "1973510",
    "end": "1984160"
  },
  {
    "text": "the admin submarine kind of explored the value of universal work fluid identity what you can get with it",
    "start": "1984160",
    "end": "1990490"
  },
  {
    "text": "why you probably need it we learned about the spiffy specs themselves what they do and how they solve this",
    "start": "1990490",
    "end": "1996130"
  },
  {
    "text": "universal identity problem and we also learn about spire a problem it solves how it works I saw a cute little demo of",
    "start": "1996130",
    "end": "2002220"
  },
  {
    "text": "it actually in action and looking forward we had a lot of exciting things for for spire spiffy project one of the",
    "start": "2002220",
    "end": "2009690"
  },
  {
    "text": "things we're looking at is introducing a new s fed document that is based on JWT a set of x.509 that would not replace",
    "start": "2009690",
    "end": "2016880"
  },
  {
    "text": "x.509 it would augment x.509 right one of the other things that were that we'd",
    "start": "2016880",
    "end": "2022170"
  },
  {
    "text": "like to do it we're starting to begin work on is extending the workload api to provide what we call handshake our endpoint which will allow a workload to",
    "start": "2022170",
    "end": "2029010"
  },
  {
    "text": "do mutual mutually authenticated TLS with a remote workload without ever knowing it's private key and it does",
    "start": "2029010",
    "end": "2034230"
  },
  {
    "text": "this by offloading TLS handshake onto this onto this API endpoint and perhaps",
    "start": "2034230",
    "end": "2039660"
  },
  {
    "text": "the most exciting thing we have coming up is there's an open proposal currently for cs50 to be adopted by CN CF as a",
    "start": "2039660",
    "end": "2046980"
  },
  {
    "text": "fishel CN CF project so really excited about that one so if",
    "start": "2046980",
    "end": "2051990"
  },
  {
    "text": "you're interested in any of this stuff at all we'd really love to hear from you we have a super active community of over 150 people from 40 different companies",
    "start": "2051990",
    "end": "2059128"
  },
  {
    "text": "including Google Square hep tio are all actively involved in this project we have regular special interest group",
    "start": "2059129",
    "end": "2065158"
  },
  {
    "text": "meetings as well which are open to the public so you're more than welcome to join we have a bunch of github repos",
    "start": "2065159",
    "end": "2071010"
  },
  {
    "text": "which are also available so this first one the spiffy the spiffy spiffy repo is where the specs themselves are housed",
    "start": "2071010",
    "end": "2077128"
  },
  {
    "text": "and we also have all the community information there too so if you want to join the SIG's or anything like that",
    "start": "2077129",
    "end": "2082138"
  },
  {
    "text": "this is a repo to go to the second repo the spire repo this is where both agent",
    "start": "2082139",
    "end": "2087810"
  },
  {
    "text": "and server spire codebase live so you can go check out how all that code works and how we do this magic finally the",
    "start": "2087810",
    "end": "2094770"
  },
  {
    "text": "third one is spiffy example this is the one that we did the DRAM the demo out of today and as you saw us fairly well",
    "start": "2094770",
    "end": "2100050"
  },
  {
    "text": "automated so you can visit this repo and you can go run this demo at home finally",
    "start": "2100050",
    "end": "2105690"
  },
  {
    "text": "the last slack thing slack is also public and where they're pretty much all time every day so if you ever have any",
    "start": "2105690",
    "end": "2112890"
  },
  {
    "text": "questions or comments or anything like that we would love to hear from you and our slack Channel",
    "start": "2112890",
    "end": "2117930"
  },
  {
    "text": "and last but not least we have a drink up tonight and I apologize for the crazy",
    "start": "2117930",
    "end": "2122940"
  },
  {
    "text": "obnoxious link here that's my bad but if",
    "start": "2122940",
    "end": "2128220"
  },
  {
    "text": "you'd like to come we would love to it we would love to have you so this is a really exciting time for spiffy there's",
    "start": "2128220",
    "end": "2133470"
  },
  {
    "text": "a lot of stuff going on and we think this is a really really important problem please do keep an eye out for",
    "start": "2133470",
    "end": "2138900"
  },
  {
    "text": "these projects because we're only just getting started thank you everyone [Applause]",
    "start": "2138900",
    "end": "2147558"
  }
]