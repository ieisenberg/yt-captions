[
  {
    "text": "hello everybody okay thank you for coming this is the last thought of the day so thank you for",
    "start": "40",
    "end": "6960"
  },
  {
    "text": "coming okay so I'm g m I'm a software architect working for Tales and I am",
    "start": "7320",
    "end": "13719"
  },
  {
    "text": "Alex and I'm also a software architect at Tales so we are both working with our",
    "start": "13719",
    "end": "19320"
  },
  {
    "text": "buddies here uh on this kind of product this is a big picture of the product so as you can see uh on the top here you",
    "start": "19320",
    "end": "26560"
  },
  {
    "text": "have this data center that is also on this table that you can also see at the Talis boo k34 right okay and okay so",
    "start": "26560",
    "end": "35200"
  },
  {
    "text": "thanks to this data center onboard data center that we call surprisingly ODC um",
    "start": "35200",
    "end": "41840"
  },
  {
    "text": "we can run different kind of workloads on board so depending on your use case",
    "start": "41840",
    "end": "48120"
  },
  {
    "text": "could be connected to different equipments notably the the cabin could be seatbacks it could be a access point",
    "start": "48120",
    "end": "54640"
  },
  {
    "text": "serving for personal electric device devices electronic devices it can be uh",
    "start": "54640",
    "end": "60320"
  },
  {
    "text": "connected to the connectivity um and that's pretty much it this data center",
    "start": "60320",
    "end": "65880"
  },
  {
    "text": "itself as a edge part is connected to the ground platform through the through the satcom so either satcom or when we",
    "start": "65880",
    "end": "72240"
  },
  {
    "text": "are on ground we have the four 5G or 4G connectivity and this platform uh provides with a PO for all the",
    "start": "72240",
    "end": "79400"
  },
  {
    "text": "stakeholders so Airlines uh third parties as stus we also operate via this",
    "start": "79400",
    "end": "85560"
  },
  {
    "text": "this portal so when we started to work on this project uh was in 2020 uh so we had",
    "start": "85560",
    "end": "92920"
  },
  {
    "text": "this top four tasks to tackle so obviously the hardware the big part so",
    "start": "92920",
    "end": "98640"
  },
  {
    "text": "we I'm I'm glad I don't I don't do a hardware because they had a great challenge to to face um we they have to",
    "start": "98640",
    "end": "104920"
  },
  {
    "text": "comply with the DU 160 which is environment constraints um and just to give you a bit of idea this wall box",
    "start": "104920",
    "end": "112000"
  },
  {
    "text": "only consumes 300 watts so technically it's a not more than a hair dryer uh yeah and PO is one thing but",
    "start": "112000",
    "end": "119960"
  },
  {
    "text": "cooling is another and this is one of the biggest challenges as well you have to make be able to cool this stuff and",
    "start": "119960",
    "end": "126280"
  },
  {
    "text": "sometimes temperatures grows very high especially when you're on Middle eist on the T mark so it can be a big deal once",
    "start": "126280",
    "end": "133360"
  },
  {
    "text": "you have the hardware you bring on top the the software so with my team we were working on especially the the lowest",
    "start": "133360",
    "end": "139360"
  },
  {
    "text": "part of the software so being able between the hardware bring the OS on top of it be able to deploy the OS over the",
    "start": "139360",
    "end": "145879"
  },
  {
    "text": "year uh there are various topics provision provisioning is part of it um",
    "start": "145879",
    "end": "151440"
  },
  {
    "text": "and as we wanted to assemble the current communities cluster on that we obviously",
    "start": "151440",
    "end": "157120"
  },
  {
    "text": "had a a team working on the the grand infrastructure this is a big part but but that we won't cover today and we",
    "start": "157120",
    "end": "163879"
  },
  {
    "text": "have of course services that we want to bring uh on this in this system that can",
    "start": "163879",
    "end": "169560"
  },
  {
    "text": "be either full on board on ground or end to endend services that that are",
    "start": "169560",
    "end": "174640"
  },
  {
    "text": "deployed and Alexi will show you how they they manage to deploy that so first",
    "start": "174640",
    "end": "180000"
  },
  {
    "text": "part I'm talking about the the operating system this is something that is very common you have two types of operating",
    "start": "180000",
    "end": "185720"
  },
  {
    "text": "system one is called Factory because it's installed during manufacturing stage it won't change over the the",
    "start": "185720",
    "end": "192159"
  },
  {
    "text": "product life uh so this one has a single role that is to two R but provision",
    "start": "192159",
    "end": "198519"
  },
  {
    "text": "provisioning the blade and be able to upgrade to the production OS the production OS is the one that will",
    "start": "198519",
    "end": "204799"
  },
  {
    "text": "assemble and bring the kuties uh up on board so in term of design so we made",
    "start": "204799",
    "end": "211959"
  },
  {
    "text": "this uh operating system layered because pretty much like a container because it",
    "start": "211959",
    "end": "217840"
  },
  {
    "text": "comes with great um properties for us especially when you work in avionic you have to be very strict on the security",
    "start": "217840",
    "end": "223480"
  },
  {
    "text": "so building the as a layer uh like we see on on the right so this is an example but you and you try you tie also",
    "start": "223480",
    "end": "231360"
  },
  {
    "text": "the layers to the the side you will tie the size uh with the life cycle of these layers the one that will change often",
    "start": "231360",
    "end": "238319"
  },
  {
    "text": "you want to have them as as possible so that you can go faster to deploy so um like I said in term of",
    "start": "238319",
    "end": "245840"
  },
  {
    "text": "security uh this is great because you can easily verify the SSA 256 of each",
    "start": "245840",
    "end": "251239"
  },
  {
    "text": "layer each time because each layer is finally like forer it's just you can describe it as a a single",
    "start": "251239",
    "end": "258120"
  },
  {
    "text": "fire um so and if in addition we have secure boot we can also verify",
    "start": "258120",
    "end": "263240"
  },
  {
    "text": "authenticity so we have each time the system boot we can verify every step of the of the of the OS on the root five",
    "start": "263240",
    "end": "270880"
  },
  {
    "text": "system uh in terms of deploy deployment of course it brings uh good properties because you will download only the",
    "start": "270880",
    "end": "276840"
  },
  {
    "text": "layers that really change and it's really flexible because this layout you can change it over time and let's say uh",
    "start": "276840",
    "end": "283800"
  },
  {
    "text": "there is a zero day uh issue zero day vulnerability sorry I have to deploy",
    "start": "283800",
    "end": "289759"
  },
  {
    "text": "let's say a bin bash very fast so I don't have to rebuild my wall system I will just build a very sein layer that",
    "start": "289759",
    "end": "296680"
  },
  {
    "text": "bring the fix on on The Bash binary and we just be able to P push it very",
    "start": "296680",
    "end": "301720"
  },
  {
    "text": "quickly on every aircraft so uh this this design so implements um",
    "start": "301720",
    "end": "309080"
  },
  {
    "text": "immutability um it's so in the case of the factory OS the this one you know",
    "start": "309080",
    "end": "314440"
  },
  {
    "text": "every OS needs to modify files and you cannot be completely read on so there is always a r right layer on top of the of",
    "start": "314440",
    "end": "321520"
  },
  {
    "text": "the assembly and uh in the case of the factory OS it's a pure RAM memory so it",
    "start": "321520",
    "end": "326880"
  },
  {
    "text": "will disappear time reboot so so the factory is is 100% immutable and for the",
    "start": "326880",
    "end": "333960"
  },
  {
    "text": "what we call the sorry the production OS this one we have to commit files because let's say notably when we we boot strap",
    "start": "333960",
    "end": "340919"
  },
  {
    "text": "communities it comes with files that have to persist across reboots so this file will be committed to the flash",
    "start": "340919",
    "end": "346800"
  },
  {
    "text": "memory and will be able to to persist across reboots um but this being said",
    "start": "346800",
    "end": "352639"
  },
  {
    "text": "it's very easy it comes with good property as well because when you audit all the files inside this layer you you",
    "start": "352639",
    "end": "359720"
  },
  {
    "text": "can really understand the way your operating system modifies its",
    "start": "359720",
    "end": "365080"
  },
  {
    "text": "environment so it's very very interesting and uh you yeah so and it's also very easy to reset you just wipe",
    "start": "365080",
    "end": "372000"
  },
  {
    "text": "everything this layer and you start from scratch and notably because this is use case well when you when you work on Labs",
    "start": "372000",
    "end": "377639"
  },
  {
    "text": "with a lot of colleagues sometimes it's great to just wipe everything and start from scratch you don't have to spend",
    "start": "377639",
    "end": "382759"
  },
  {
    "text": "that much time to to wonder if you the guy who do something bad or or somebody",
    "start": "382759",
    "end": "388560"
  },
  {
    "text": "else so and finally if you are able to build this kind of layer it's very easy to the",
    "start": "388560",
    "end": "395800"
  },
  {
    "text": "same way finally we we we should probably have tried to to stick to the oci format but in this case this is the",
    "start": "395800",
    "end": "403080"
  },
  {
    "text": "way we describe an operating system so you can see there is a canel in itfs which is the one that actually does the",
    "start": "403080",
    "end": "410199"
  },
  {
    "text": "assembly and then you see the three layers in this case Bas Ro FS addons and",
    "start": "410199",
    "end": "416840"
  },
  {
    "text": "modules okay so then you have your pipelines that will create all the this",
    "start": "416840",
    "end": "423520"
  },
  {
    "text": "layers so like I said they are one single file so in this case these are squash F files so read only and uh you",
    "start": "423520",
    "end": "431639"
  },
  {
    "text": "also have your your cicd pipeline that will create the Manifest that I've just shown you all of these will be pushed to",
    "start": "431639",
    "end": "438599"
  },
  {
    "text": "some Arch Factory in our case and then how do we deploy it's pretty easy you have the operation team that will",
    "start": "438599",
    "end": "445720"
  },
  {
    "text": "connect to the portal they will just have to select the OS version plus the aircraft they want to deploy to",
    "start": "445720",
    "end": "454039"
  },
  {
    "text": "oops not my finger okay um and then it's a",
    "start": "454039",
    "end": "461280"
  },
  {
    "text": "simplified view but we have a um a service running on ground that will simply take the disorder it will get the",
    "start": "461280",
    "end": "467159"
  },
  {
    "text": "the Manifest and then push it to gups on on board on board the aircraft",
    "start": "467159",
    "end": "473080"
  },
  {
    "text": "we have the way to synchronize uh each time the connectivity is available we synchronize with these gitops and have a",
    "start": "473080",
    "end": "480280"
  },
  {
    "text": "a system Des service in this case that will get the new manifest if needed it will grab all the layers that are",
    "start": "480280",
    "end": "486840"
  },
  {
    "text": "missing drop everything into a dedicated partition and just reboot so we've been",
    "start": "486840",
    "end": "492080"
  },
  {
    "text": "working with this OS for around four years now and for now we are still able to install everything with just a reboot",
    "start": "492080",
    "end": "498680"
  },
  {
    "text": "there is no additional uh phase that may it may come but for now we were able to",
    "start": "498680",
    "end": "504400"
  },
  {
    "text": "to go through without that so still about this OS just few",
    "start": "504400",
    "end": "509520"
  },
  {
    "text": "remarks um when you do get UPS if you want to revert you just create another",
    "start": "509520",
    "end": "514800"
  },
  {
    "text": "commit that rever the pre previous one so it means that you will need to you will ask to install the previous one so",
    "start": "514800",
    "end": "521279"
  },
  {
    "text": "we always keep the previous version available and we play with a symbolic links to just point to the new one or",
    "start": "521279",
    "end": "527320"
  },
  {
    "text": "the the previous one we also have unboard cach so yeah maybe we don't care",
    "start": "527320",
    "end": "532360"
  },
  {
    "text": "here but ways to reduce the connectivity usage and we have one one single node",
    "start": "532360",
    "end": "538360"
  },
  {
    "text": "fetching everything and sharing with with users okay so now we have",
    "start": "538360",
    "end": "543680"
  },
  {
    "text": "Theos uh that that is up on each blade and we will now talk about how we boot",
    "start": "543680",
    "end": "549320"
  },
  {
    "text": "strap communities on that so a bit of requirements first uh we have only five",
    "start": "549320",
    "end": "554959"
  },
  {
    "text": "to six nodes available in the in the ODC as you can see so there are more blades",
    "start": "554959",
    "end": "560519"
  },
  {
    "text": "but the others we you can see after if you want some are used for switching some are Power blades but it turns out",
    "start": "560519",
    "end": "566839"
  },
  {
    "text": "you have you you you end up with only six nodes available so you cannot uh spread the RO the same way as you will",
    "start": "566839",
    "end": "572560"
  },
  {
    "text": "do on ground where where you are able to split the control plane etcd cluster and",
    "start": "572560",
    "end": "577920"
  },
  {
    "text": "uh and the workers that's so another big big big uh",
    "start": "577920",
    "end": "583880"
  },
  {
    "text": "constraint for us we want this boost strapping to be as independent and as",
    "start": "583880",
    "end": "588920"
  },
  {
    "text": "automatic as possible we cannot rely on the fact that one blade will be available and that I will be able to",
    "start": "588920",
    "end": "594040"
  },
  {
    "text": "control from this blade so we want it to be a yeah kind of really Bulletproof",
    "start": "594040",
    "end": "599440"
  },
  {
    "text": "because when The Operators will come and replace some 4T blade they they won't",
    "start": "599440",
    "end": "604680"
  },
  {
    "text": "Cordon the cluster and do a smart maintenance operation they would just remove it and plug another and you're",
    "start": "604680",
    "end": "611720"
  },
  {
    "text": "done so we have to F to be able to support that that use case um yeah so and our mandate is",
    "start": "611720",
    "end": "620279"
  },
  {
    "text": "obviously to boost communities but we then have to deploy a couple of services",
    "start": "620279",
    "end": "625680"
  },
  {
    "text": "uh we have a CSI storage that is used because this box provides with um 96",
    "start": "625680",
    "end": "631079"
  },
  {
    "text": "terabyt of of storage so we have a way to share it across a cube uh we have a",
    "start": "631079",
    "end": "637000"
  },
  {
    "text": "Docker history Alexi will tell you tell you more about that after we have a way also because we do get UPS to encrypt",
    "start": "637000",
    "end": "643760"
  },
  {
    "text": "Secrets at rest when they inside the G repo and the flu continuous deployment",
    "start": "643760",
    "end": "650320"
  },
  {
    "text": "the flu solution that Alexi also will will describe a bit more so about boost trapping we are back in um 2019 so we",
    "start": "650320",
    "end": "659560"
  },
  {
    "text": "know nothing about Cloud Technologies and uh yeah we have to start with that so we start to play with qbm we are we",
    "start": "659560",
    "end": "667440"
  },
  {
    "text": "are given advice by people are more experienced at this moment it was a cube",
    "start": "667440",
    "end": "672720"
  },
  {
    "text": "113 and we play with Cube spray which use is anible we use Rancher k3s micro",
    "start": "672720",
    "end": "681360"
  },
  {
    "text": "KS I don't remember every every everything we we tested uh we obviously",
    "start": "681360",
    "end": "686560"
  },
  {
    "text": "also uh get got in touch with the cloud providers uh looking for really a tkey",
    "start": "686560",
    "end": "692720"
  },
  {
    "text": "solution so uh all the solution including the the the the cloud providers had great great solution but",
    "start": "692720",
    "end": "699839"
  },
  {
    "text": "uh it terms for the case of the cloud providers they they come with specific Hardware that will really never fit in",
    "start": "699839",
    "end": "706360"
  },
  {
    "text": "our use case so we ended up with being not not able to to find the right solution notably the I was talking about",
    "start": "706360",
    "end": "714000"
  },
  {
    "text": "onone and and and the fewers they most of the time they are the radio sequence",
    "start": "714000",
    "end": "719360"
  },
  {
    "text": "when you create you first create one node and then you you make the other joint we are not as as independent as we",
    "start": "719360",
    "end": "726360"
  },
  {
    "text": "wanted moreover um some of some of them are using a pattern where one not will",
    "start": "726360",
    "end": "732480"
  },
  {
    "text": "really connect to the other we also had a ground um cloud provider solution",
    "start": "732480",
    "end": "737760"
  },
  {
    "text": "where the the ground was really uh performing the operation on on the devices and it didn't fit our our use",
    "start": "737760",
    "end": "745440"
  },
  {
    "text": "case so it turned out that the only solution that was able to do that of the",
    "start": "745440",
    "end": "750600"
  },
  {
    "text": "Shelf even though I know this is not the most trendy technology for now but was",
    "start": "750600",
    "end": "757000"
  },
  {
    "text": "puppet so for those who don't know puppet is a IO declarative solution which always a good thing uh I believe",
    "start": "757000",
    "end": "765040"
  },
  {
    "text": "um and it works its principle is pretty simp it's pretty simple you have each node will run a puppet agent so each",
    "start": "765040",
    "end": "772839"
  },
  {
    "text": "agent will collect facts local facts so this if you dump the fact there is quite a lot you can add custom facts if you",
    "start": "772839",
    "end": "779760"
  },
  {
    "text": "need and uh each agent will publish its fact to the to the server uh and while",
    "start": "779760",
    "end": "786519"
  },
  {
    "text": "doing that it also request a catalog that will be uh compiled and tuned for the specific agent so they receive the",
    "start": "786519",
    "end": "792440"
  },
  {
    "text": "catalog and then they apply it so going back to communities so uh",
    "start": "792440",
    "end": "800320"
  },
  {
    "text": "pet comes with a pet module for communities and this one um so the way",
    "start": "800320",
    "end": "807680"
  },
  {
    "text": "we implement this kind of IND independent bootstrap is that because there is a first step that is done",
    "start": "807680",
    "end": "812920"
  },
  {
    "text": "before where you use an very simple um setup file for for for this module for",
    "start": "812920",
    "end": "819120"
  },
  {
    "text": "this pet commun module that will then uh be managed by a cube tool and this one",
    "start": "819120",
    "end": "825440"
  },
  {
    "text": "just kind of generates all the data you need to be able to to pre-share with all",
    "start": "825440",
    "end": "830680"
  },
  {
    "text": "the notes so that they can can kind of get this inde Independence so uh I'm",
    "start": "830680",
    "end": "836120"
  },
  {
    "text": "talking about you know Community works with a certificate Authority each node",
    "start": "836120",
    "end": "841240"
  },
  {
    "text": "needs to have a secret and and a key a secret key and certificate to be able to communicate so this Mutual TS",
    "start": "841240",
    "end": "848000"
  },
  {
    "text": "authetication so this is generated by by Cube tool this plus a manifest that will",
    "start": "848000",
    "end": "854279"
  },
  {
    "text": "describe the roles so if we look on the right in our case we have like I said we have up to six nde but only five will be",
    "start": "854279",
    "end": "861040"
  },
  {
    "text": "part of the control plane you will see that uh node one one 125 will be control controller control plane and the node",
    "start": "861040",
    "end": "867720"
  },
  {
    "text": "six will be Walker and you drop all that into the GBS and then pel will do the job um same thing",
    "start": "867720",
    "end": "875199"
  },
  {
    "text": "we we we we do not use scrip tool anymore today we we we generate the exact same principle the same file our",
    "start": "875199",
    "end": "882480"
  },
  {
    "text": "own way because we also have a lot of other secrets to manage and so we we automated that desk a different way so",
    "start": "882480",
    "end": "889199"
  },
  {
    "text": "is that this magic obviously no um so this is a timeline uh on top we have not",
    "start": "889199",
    "end": "895720"
  },
  {
    "text": "one so let's say no one is starting so the Cel start then then system D starts and after that the system D start the",
    "start": "895720",
    "end": "902880"
  },
  {
    "text": "puppet agent puppet agent itself as we want to boost communities will run a q",
    "start": "902880",
    "end": "908759"
  },
  {
    "text": "ADM init command so this node by itself cannot bootstrap communities because uh",
    "start": "908759",
    "end": "916160"
  },
  {
    "text": "as as I explained there is the static phase where you create all these files you have to specify your your control",
    "start": "916160",
    "end": "923000"
  },
  {
    "text": "plane so let's say I have a five note control plane a single note cannot boost STP Cube you need to have the CHR that",
    "start": "923000",
    "end": "929639"
  },
  {
    "text": "is created so it's five divid divided by two plus one you need at least three control play nod up to to be able to",
    "start": "929639",
    "end": "935920"
  },
  {
    "text": "make that work um so let's say the second not is coming so we have a there",
    "start": "935920",
    "end": "941399"
  },
  {
    "text": "is no reason why but just to highlight the fact that sometime we cannot rely on the boot order or the sequence or",
    "start": "941399",
    "end": "946480"
  },
  {
    "text": "something like that note two is arriving and finally Note Three is coming and if",
    "start": "946480",
    "end": "951759"
  },
  {
    "text": "you look it is only at this precise moment here that we have that we have all QB ADM command in it running at the",
    "start": "951759",
    "end": "958759"
  },
  {
    "text": "same same time so it is at the only moment that will the cluster will be",
    "start": "958759",
    "end": "963839"
  },
  {
    "text": "assembled okay so and what if a fourth node and a fifth node com into the game",
    "start": "963839",
    "end": "969319"
  },
  {
    "text": "this is no problem in this case control the control plane is already assembled so it will be very fast for this node to",
    "start": "969319",
    "end": "974639"
  },
  {
    "text": "to enter to join the cluster um okay so Soo it's important to",
    "start": "974639",
    "end": "981519"
  },
  {
    "text": "notice that um pet agent will keep trying to reconcile periodically but",
    "start": "981519",
    "end": "986880"
  },
  {
    "text": "this is something that uh we change because we didn't want to we want to",
    "start": "986880",
    "end": "992639"
  },
  {
    "text": "save as much Resource as possible and uh having this reconciliation uh on a short",
    "start": "992639",
    "end": "998759"
  },
  {
    "text": "short period of time was not was not good for us so we wanted to at least manage the return code of the",
    "start": "998759",
    "end": "1005279"
  },
  {
    "text": "puppet agent and be able to know whether there was no no change to do at all it was all set so in this case we will back",
    "start": "1005279",
    "end": "1012160"
  },
  {
    "text": "off and uh from 30 seconds to 5 minutes 10 minutes and we go up to 30 minutes of",
    "start": "1012160",
    "end": "1018399"
  },
  {
    "text": "course if at this moment a new gups uh there is new change via gups it will um",
    "start": "1018399",
    "end": "1025319"
  },
  {
    "text": "it will execute immediately to make sure that it's reconciled as soon as possible now a few other stuff that we've",
    "start": "1025319",
    "end": "1031360"
  },
  {
    "text": "deployed that that we implemented I won't cover because I'm a bit late but um uh this this uh changes we've done",
    "start": "1031360",
    "end": "1038640"
  },
  {
    "text": "are not yet published but this is something that uh we have in mind so we we just have to do proceed with that and",
    "start": "1038640",
    "end": "1045480"
  },
  {
    "text": "now Alexi will explain you how they deploy service know that I've done my job yeah so now that we have a closer",
    "start": "1045480",
    "end": "1053480"
  },
  {
    "text": "that is up and running inside the aircraft we now need to deploy some workloads so to understand the talent that we had to go through we actually",
    "start": "1053480",
    "end": "1059840"
  },
  {
    "text": "need to understand what is the life cycle of an aircraft so this is what an aircraft would do over a day multiple",
    "start": "1059840",
    "end": "1065679"
  },
  {
    "text": "times a day it will go to an airport CDG for example maybe the airort you came through to the cucon it will go to the",
    "start": "1065679",
    "end": "1071760"
  },
  {
    "text": "gate and here I'll have access to uh some connectivity 4G 5G some some of the",
    "start": "1071760",
    "end": "1076880"
  },
  {
    "text": "airport are also equipped with Wi-Fi um then we'll leave the gate go to the tarmac and take off here it'll be too",
    "start": "1076880",
    "end": "1083000"
  },
  {
    "text": "high to have access to solar connectivity but it'll be too low to have access to satellite connectivity",
    "start": "1083000",
    "end": "1088480"
  },
  {
    "text": "then we'll go to cruise uh above 30,000 ft here will have access to satellite connectivity for example um then it will",
    "start": "1088480",
    "end": "1095720"
  },
  {
    "text": "land to another airport but unfortunately on this airport there is no internet connection because of",
    "start": "1095720",
    "end": "1101520"
  },
  {
    "text": "geofencing of or ring cost that are too expensive for example so what we can see",
    "start": "1101520",
    "end": "1107039"
  },
  {
    "text": "here is that we cannot predict when the Earth aircraft will have access to Internet uh we cannot predict when and",
    "start": "1107039",
    "end": "1112440"
  },
  {
    "text": "we cannot predict how it will have access to Internet so the aircraft doesn't have a static IP we cannot just",
    "start": "1112440",
    "end": "1117480"
  },
  {
    "text": "push software to and configuration to the to the aircraft it's up for the aircraft to realize pretty soon that it",
    "start": "1117480",
    "end": "1124400"
  },
  {
    "text": "will be up for the aircraft to pull its configuration and pull the software so we're back in 2020 and what we realized",
    "start": "1124400",
    "end": "1131480"
  },
  {
    "text": "is that what we wanted to implement is the GitHub spard dag and we decided to install flux inside the cluster to be",
    "start": "1131480",
    "end": "1137919"
  },
  {
    "text": "able to implement this barite but when you install flux in in the cluster flux",
    "start": "1137919",
    "end": "1143200"
  },
  {
    "text": "will pull the G repository create the workloads um it will create the deployment and the pods and the",
    "start": "1143200",
    "end": "1148480"
  },
  {
    "text": "container runtime will then pull the container from their registry but here we can see that we do have access to",
    "start": "1148480",
    "end": "1154760"
  },
  {
    "text": "that registry because the aircraft doesn't always have access to Internet um so what we realize pretty",
    "start": "1154760",
    "end": "1160880"
  },
  {
    "text": "soon is that most of our Bo go were going image for back off because the container room time couldn't have access",
    "start": "1160880",
    "end": "1166760"
  },
  {
    "text": "to the registry so we need need to find a solution for that so this is the stepbystep process we've been through to",
    "start": "1166760",
    "end": "1172919"
  },
  {
    "text": "make sure that um when we're installing the workflows inside the the cluster uh the image uh the Pod wouldn't go to",
    "start": "1172919",
    "end": "1179799"
  },
  {
    "text": "image for backov but we were able to have all the images available so the first option was pretty simple just",
    "start": "1179799",
    "end": "1186880"
  },
  {
    "text": "install the workloads let the container R time pull the container but it was no extra implementation but it was",
    "start": "1186880",
    "end": "1193240"
  },
  {
    "text": "definitely not resilient to connectivity loss or to rescheduling if one of the image was not available on one one of",
    "start": "1193240",
    "end": "1199840"
  },
  {
    "text": "the nod and we're losing this specific nod then the Pod will be rescheduled to a no where the image was not available",
    "start": "1199840",
    "end": "1206320"
  },
  {
    "text": "so it Go image P back off um the second option was to preo every um images on every nod uh that way",
    "start": "1206320",
    "end": "1214760"
  },
  {
    "text": "uh every node will have the image available um it was resident connectivity loss because then every",
    "start": "1214760",
    "end": "1220799"
  },
  {
    "text": "image are available everywhere uh but it was very costly in term of connectivity because we had to pull as many time as",
    "start": "1220799",
    "end": "1227320"
  },
  {
    "text": "we had not every images and we're not really able to master the garbage collection for example if one of",
    "start": "1227320",
    "end": "1232960"
  },
  {
    "text": "the image were not used for some time it could be automatically garbage collected um so we need to find a better",
    "start": "1232960",
    "end": "1239960"
  },
  {
    "text": "way so we came up with this component that we called image puller which goal was to pull the image uh from our ground",
    "start": "1239960",
    "end": "1247600"
  },
  {
    "text": "registry to our onboard registry that we've what that we've deployed uh it was bed on the manifest",
    "start": "1247600",
    "end": "1254039"
  },
  {
    "text": "like a Scopia manifest that we built and it was stored on the same um G repository as the flux resources um so",
    "start": "1254039",
    "end": "1262039"
  },
  {
    "text": "it's very efficient we were only pulling the image once so is it was cost efficient every image were cached on",
    "start": "1262039",
    "end": "1267720"
  },
  {
    "text": "board on that registry and we couldn't Master the garbage collection because the specific component could master and",
    "start": "1267720",
    "end": "1273320"
  },
  {
    "text": "delete the the the the image that were not used um but we were facing some rage",
    "start": "1273320",
    "end": "1279840"
  },
  {
    "text": "condition with um flux installing the workloads at the same times I were actually pulling the container uh",
    "start": "1279840",
    "end": "1286400"
  },
  {
    "text": "because that that that manif that was describing all the all the image to to to pull were actually on the same G",
    "start": "1286400",
    "end": "1292720"
  },
  {
    "text": "repository as flux resources um one of the possible fix",
    "start": "1292720",
    "end": "1298200"
  },
  {
    "text": "were to disable uh the flux automatic Rec consolation and so we could like tell",
    "start": "1298200",
    "end": "1304400"
  },
  {
    "text": "flux I have all the images and then now you can start Recon reconcilation do the reconcilation uh but what we're like",
    "start": "1304400",
    "end": "1311400"
  },
  {
    "text": "with flux is that it's always trying uh to make sure that the current state of the cluster is in Phase with the",
    "start": "1311400",
    "end": "1317360"
  },
  {
    "text": "expected state of the cluster so we still need to find a better solution but you can ask why is it that",
    "start": "1317360",
    "end": "1323720"
  },
  {
    "text": "important to to avoid a Miss back off because on the last solution I presented it was just the image black for just for",
    "start": "1323720",
    "end": "1329480"
  },
  {
    "text": "a transitional time um when the image floor were pulling the image then it",
    "start": "1329480",
    "end": "1335360"
  },
  {
    "text": "would be available so it was just a short period of time well there are three main reason for that the first one",
    "start": "1335360",
    "end": "1340400"
  },
  {
    "text": "is that the iic aing 66 7-2 guidelines actually recommend to segregate the",
    "start": "1340400",
    "end": "1346360"
  },
  {
    "text": "software downlo phase and the software installation phase which were not the case here because the our component was",
    "start": "1346360",
    "end": "1352799"
  },
  {
    "text": "pulling the image at the same times as flux were installing the workloads um the second one is not to",
    "start": "1352799",
    "end": "1359919"
  },
  {
    "text": "disturb the passenger experience uh even with that transitional State we could have some um distortion on the on the on",
    "start": "1359919",
    "end": "1367320"
  },
  {
    "text": "the passenger experience the third um the third item is the the most important one we",
    "start": "1367320",
    "end": "1373919"
  },
  {
    "text": "couldn't afford to install only a portion of the micros Serv this and then lost connectivity for a day or an hour",
    "start": "1373919",
    "end": "1380360"
  },
  {
    "text": "or or even more um so we need we really needed to make sure that all images were",
    "start": "1380360",
    "end": "1386520"
  },
  {
    "text": "cashed and available on board before starting to imp to to install the",
    "start": "1386520",
    "end": "1391559"
  },
  {
    "text": "workloads so we came up with that custom operator called image full operator so",
    "start": "1391559",
    "end": "1397039"
  },
  {
    "text": "the image full operator is a custom Cen Operator Operator uh which goal is to",
    "start": "1397039",
    "end": "1402480"
  },
  {
    "text": "syn synchronized container images from One Source registry to a destination registry and it's based on two custom",
    "start": "1402480",
    "end": "1409520"
  },
  {
    "text": "resources oci registry and image so an oci registry as you can see here describe a registry with some",
    "start": "1409520",
    "end": "1415919"
  },
  {
    "text": "credentials to access this registry and the URL and an image describe um an image to",
    "start": "1415919",
    "end": "1422640"
  },
  {
    "text": "pull from a registry from a source registry to a destination registry so how this how that works in",
    "start": "1422640",
    "end": "1430039"
  },
  {
    "text": "in real life so um let's say on the on on on the left we have our platform",
    "start": "1430039",
    "end": "1435440"
  },
  {
    "text": "registry on the ground with our container image to pool and on the left we have our onboard Comm Comm",
    "start": "1435440",
    "end": "1443000"
  },
  {
    "text": "cluster um we have our onboard regory that we've deployed um using the",
    "start": "1443000",
    "end": "1448039"
  },
  {
    "text": "operating system and we have our image full operator we've defined on the cluster",
    "start": "1448039",
    "end": "1453240"
  },
  {
    "text": "our custom resources the platform registry U with the associ credential uh",
    "start": "1453240",
    "end": "1458600"
  },
  {
    "text": "which refers to our ground platform registry and the onboard registry with the associ credential and then we are",
    "start": "1458600",
    "end": "1465480"
  },
  {
    "text": "we've created our um image object with is which is referencing the platform registry as a source and the destination",
    "start": "1465480",
    "end": "1472559"
  },
  {
    "text": "registry uh the onboard registry as a destination then the image reconcilation",
    "start": "1472559",
    "end": "1477720"
  },
  {
    "text": "Loop will start first um the image will start to reconcile the resource it will",
    "start": "1477720",
    "end": "1483360"
  },
  {
    "text": "get all the information related to this image so the destination The Source registry and the credential the",
    "start": "1483360",
    "end": "1488640"
  },
  {
    "text": "destination registry and the credential and then it was start pulling the container pushing pushing it to the",
    "start": "1488640",
    "end": "1494520"
  },
  {
    "text": "onboard industry and update the status this last part updating the status is",
    "start": "1494520",
    "end": "1500159"
  },
  {
    "text": "the most important one so if we take a look at the status we're actually using the case status standard which mean that",
    "start": "1500159",
    "end": "1505760"
  },
  {
    "text": "slugs will be able to understand that the this resource is healthy or not based on the on the ready um",
    "start": "1505760",
    "end": "1513039"
  },
  {
    "text": "condition so now that we have this operator how do we actually make sure that all the image are pulled on board",
    "start": "1513039",
    "end": "1519880"
  },
  {
    "text": "and before letting flux installing the workloads so this is the architect a",
    "start": "1519880",
    "end": "1525399"
  },
  {
    "text": "simple view of our onboard um gitops uh repository so we have one customization",
    "start": "1525399",
    "end": "1531720"
  },
  {
    "text": "that is describing images and one customization that is describing releases if we take a look at the",
    "start": "1531720",
    "end": "1538320"
  },
  {
    "text": "customization for image it's actually installing all the the resources that that are defined here and as you can",
    "start": "1538320",
    "end": "1544080"
  },
  {
    "text": "imagine we're defining on this folder image resources and we can see that we're",
    "start": "1544080",
    "end": "1549840"
  },
  {
    "text": "using the weight condition to make sure that before this customization will be considered as healthy all resources all",
    "start": "1549840",
    "end": "1556320"
  },
  {
    "text": "images need to be considered uh health so which means every images need to be pulled on",
    "start": "1556320",
    "end": "1562159"
  },
  {
    "text": "board then we have our release customization which is uh a bunch of M",
    "start": "1562159",
    "end": "1568559"
  },
  {
    "text": "and you can see here that this layer actually depends on the image layer which means this release layer will not",
    "start": "1568559",
    "end": "1575320"
  },
  {
    "text": "be reconciled unless the image layer is actually lthy so if we take a look back of our in",
    "start": "1575320",
    "end": "1582600"
  },
  {
    "text": "our cluster so still we have our onboard our platform registry with with some um uh",
    "start": "1582600",
    "end": "1590279"
  },
  {
    "text": "container images we have our onboard registry image puller operator and flux",
    "start": "1590279",
    "end": "1595760"
  },
  {
    "text": "which will so yeah flux will then create create the customization our image layer",
    "start": "1595760",
    "end": "1602360"
  },
  {
    "text": "and our release layer you can see here that the release layer will not start being reconciled because it depends on",
    "start": "1602360",
    "end": "1608039"
  },
  {
    "text": "the image layer the image layer will then create our image objects and then",
    "start": "1608039",
    "end": "1613279"
  },
  {
    "text": "our image P operator will start to work so we'll reconcile pull push update the status",
    "start": "1613279",
    "end": "1618799"
  },
  {
    "text": "ni it's ni it's it's healthy it will do the same for the red image it will reconcile pull push the image and then",
    "start": "1618799",
    "end": "1625760"
  },
  {
    "text": "update the status then every um images are healthy um so then the layer will",
    "start": "1625760",
    "end": "1632399"
  },
  {
    "text": "actually be healthy which mean it will it will unlock the the release layer and",
    "start": "1632399",
    "end": "1638159"
  },
  {
    "text": "then flux will then start actually um deploying the the resources that are different on the on the on this release",
    "start": "1638159",
    "end": "1645000"
  },
  {
    "text": "layer the release layer will then create the Elmer which will create the pods and then the pods will be able to pull the",
    "start": "1645000",
    "end": "1652080"
  },
  {
    "text": "image from the onboard tree and then we can see and then it will be hethy and then everything is healthy so thanks to",
    "start": "1652080",
    "end": "1659760"
  },
  {
    "text": "that we've been able to sequence the installation of the of the of the resources making sure that every",
    "start": "1659760",
    "end": "1665919"
  },
  {
    "text": "container images have been pulled on board before actually letting flux installing the the workloads I didn't",
    "start": "1665919",
    "end": "1672640"
  },
  {
    "text": "dare to do live demo so I'm just going to show a recording",
    "start": "1672640",
    "end": "1680120"
  },
  {
    "text": "so um on the top left we we have our customization on the top right we have",
    "start": "1680519",
    "end": "1685799"
  },
  {
    "text": "our custom resources image on the bottom left we have our am relases and on the",
    "start": "1685799",
    "end": "1691840"
  },
  {
    "text": "bottom right we have our pods so here we're creating our um uh",
    "start": "1691840",
    "end": "1699399"
  },
  {
    "text": "customization we have our image um uh layer and our release layer you can see",
    "start": "1699399",
    "end": "1705000"
  },
  {
    "text": "here that for some reason the image layer starts first which will create then our uh",
    "start": "1705000",
    "end": "1711320"
  },
  {
    "text": "images uh our image polar par is now reconciling the resources you can see that it's not ready now uh but it start",
    "start": "1711320",
    "end": "1718519"
  },
  {
    "text": "to reconcile was very fast um now all",
    "start": "1718519",
    "end": "1723720"
  },
  {
    "text": "the images has has been pulled on board so our image pull operator has pulled the container from from our Gran three",
    "start": "1723720",
    "end": "1729399"
  },
  {
    "text": "pushed it on board and then updated the status of the",
    "start": "1729399",
    "end": "1733760"
  },
  {
    "text": "image I'm sorry put it back and then you can see that the the",
    "start": "1736480",
    "end": "1743200"
  },
  {
    "text": "the release layer will then um start to be reconciled need to",
    "start": "1743200",
    "end": "1750519"
  },
  {
    "text": "wait can to it's a video cannot feel yeah",
    "start": "1751799",
    "end": "1758679"
  },
  {
    "text": "here so yeah the real Sayer will then will then start to be reconciled at the same time but you can see that there",
    "start": "1758679",
    "end": "1765200"
  },
  {
    "text": "it's the depend the dependency on the image L is actually not ready so we don't have any em that are currently",
    "start": "1765200",
    "end": "1770960"
  },
  {
    "text": "installed because yeah there's the dependency that is not there is not um",
    "start": "1770960",
    "end": "1778559"
  },
  {
    "text": "done so if we wait a little bit we'll see that the image layer will not be ly because every image has been",
    "start": "1779159",
    "end": "1787640"
  },
  {
    "text": "reconciled and then the the release layer will then uh start as its dependency on the image layer is been",
    "start": "1788440",
    "end": "1795279"
  },
  {
    "text": "fulfilled it will create create the Elmer Le um the um Elm controller will then",
    "start": "1795279",
    "end": "1801960"
  },
  {
    "text": "install the M create the",
    "start": "1801960",
    "end": "1805720"
  },
  {
    "text": "pods and then yeah as you can see over here the the have being reconciled um",
    "start": "1809600",
    "end": "1815559"
  },
  {
    "text": "the Pod can start without any imageable backup because we've been we've made sure that all the um the image has been",
    "start": "1815559",
    "end": "1822960"
  },
  {
    "text": "cached on the onboard registry thank you",
    "start": "1822960",
    "end": "1829960"
  },
  {
    "text": "it it was a recording [Music] so uh couple of takeaways from this",
    "start": "1834200",
    "end": "1840279"
  },
  {
    "text": "presentation um what we realized working on this project is that every off the shelf technology that you will find the",
    "start": "1840279",
    "end": "1846919"
  },
  {
    "text": "cncf has a huge landscape of Technology you can use but when it comes to Edge Computing it's not always that easy to",
    "start": "1846919",
    "end": "1853120"
  },
  {
    "text": "use those technology uh especially when you working in an environment with with por connectivity or no remote or",
    "start": "1853120",
    "end": "1859880"
  },
  {
    "text": "physical access you have to deal with the those different technology and and twick it a little bit sometimes to make",
    "start": "1859880",
    "end": "1866200"
  },
  {
    "text": "it work um the second takeaway is because we don't have remote access or physical",
    "start": "1866200",
    "end": "1871960"
  },
  {
    "text": "access to the cluster it's flying in inside the aircraft every single action that we're doing needs to be automated",
    "start": "1871960",
    "end": "1878600"
  },
  {
    "text": "we talked about bu strapping the cluster installing the software but but it goes Way Beyond than this uh every action",
    "start": "1878600",
    "end": "1884799"
  },
  {
    "text": "like database Administration or selfhealing all of that needs to be automated um somehow to make sure that",
    "start": "1884799",
    "end": "1891559"
  },
  {
    "text": "everything we want on the cluster will be available um uh the operator that we",
    "start": "1891559",
    "end": "1897279"
  },
  {
    "text": "presented is not open sourced yet but we plan on making open source if we do will be available on the Talis group uh um",
    "start": "1897279",
    "end": "1904720"
  },
  {
    "text": "GitHub account and if you want to see it closer it will be available on the Talis booth on",
    "start": "1904720",
    "end": "1911000"
  },
  {
    "text": "k34 thank you thank you",
    "start": "1911000",
    "end": "1916440"
  }
]