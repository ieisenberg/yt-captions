[
  {
    "start": "0",
    "end": "167000"
  },
  {
    "text": "okay let's get started i'm jerry thank you all for joining us",
    "start": "3360",
    "end": "8400"
  },
  {
    "text": "today for today's cncf webinar",
    "start": "8400",
    "end": "12400"
  },
  {
    "text": "uh the open source observe observability playbook i'm jerry fallon and i'll be moderating today's webinar we'd like to welcome our",
    "start": "14000",
    "end": "21279"
  },
  {
    "text": "presenter today ken perez head of solutions engineering at espion",
    "start": "21279",
    "end": "26880"
  },
  {
    "text": "just a few housekeeping items before we get started during the webinar you are not able to talk as an attendee there is",
    "start": "26880",
    "end": "32000"
  },
  {
    "text": "a q a box at the bottom of your screen please feel free to drop your questions in there and we'll get to as many as we",
    "start": "32000",
    "end": "37360"
  },
  {
    "text": "can at the end this is an official webinar of the cncf and as such is subject to the cncf code",
    "start": "37360",
    "end": "42960"
  },
  {
    "text": "of conduct please do not add anything to the chat or questions that would be in violation",
    "start": "42960",
    "end": "49039"
  },
  {
    "text": "of the code of conduct please be respectful of your fellow participants and presenters please note that the recording on slides",
    "start": "49039",
    "end": "55360"
  },
  {
    "text": "will be posted later today to the cncf webinar page at cncf dot io",
    "start": "55360",
    "end": "60480"
  },
  {
    "text": "webinars with that i'll hand it over to hen to kick off today's presentation",
    "start": "60480",
    "end": "65600"
  },
  {
    "text": "thanks gary um oh guys uh you guys see my screen gary yep we're all set cool",
    "start": "65600",
    "end": "74159"
  },
  {
    "text": "um so let me just uh just do a quick introduction about myself i'm ken paris i'm running the solution",
    "start": "74159",
    "end": "80640"
  },
  {
    "text": "engineering team in hexagon uh and up second we are building a monitoring solution for uh",
    "start": "80640",
    "end": "86640"
  },
  {
    "text": "modern application whether it's on microservices or serverless everything that is basically",
    "start": "86640",
    "end": "92240"
  },
  {
    "text": "distributed our tool gives the ability to add",
    "start": "92240",
    "end": "97840"
  },
  {
    "text": "pretty seamlessly tracing and logging and also correlating between metrics so",
    "start": "97840",
    "end": "104000"
  },
  {
    "text": "uh what we call a full observability for those modern applications and in this talk i'm going to talk about",
    "start": "104000",
    "end": "112479"
  },
  {
    "text": "quite a few things uh the first thing i want to do is just to do some sort of like a recap of what are",
    "start": "112479",
    "end": "119040"
  },
  {
    "text": "the old-school observability methods that are currently used i'm guessing by uh a few of you",
    "start": "119040",
    "end": "124960"
  },
  {
    "text": "that are already here uh in the crowd and um how are you able to actually achieve",
    "start": "124960",
    "end": "131039"
  },
  {
    "text": "observability um easily i'll also do some some kind of live demos hopefully nothing will",
    "start": "131039",
    "end": "137360"
  },
  {
    "text": "actually blow up it's been a while since i did that and uh things that we also gonna touch",
    "start": "137360",
    "end": "143280"
  },
  {
    "text": "is how open source uh tools today give you the ability to implement some sort of like",
    "start": "143280",
    "end": "148800"
  },
  {
    "text": "do-it-yourself observability and they have improved significantly throughout the years",
    "start": "148800",
    "end": "154720"
  },
  {
    "text": "and i think there can be an excellent start for people that want to start off uh just gaining some more uh",
    "start": "154720",
    "end": "161760"
  },
  {
    "text": "understanding of about how the system actually works um but uh first thing first so let's just ask",
    "start": "161760",
    "end": "168560"
  },
  {
    "start": "167000",
    "end": "167000"
  },
  {
    "text": "yourself why do we even need monitoring it can be to um for various reasons but",
    "start": "168560",
    "end": "176640"
  },
  {
    "text": "i think the main one is just to make sure that our business works because if we're able to if we have a website",
    "start": "176640",
    "end": "182879"
  },
  {
    "text": "that is currently running and accepting um payments from customers or getting",
    "start": "182879",
    "end": "188400"
  },
  {
    "text": "some uh orders uh inside the website if that website actually working properly that",
    "start": "188400",
    "end": "194159"
  },
  {
    "text": "means that our business is actually working properly and if we think about what are the type of aspects we want to",
    "start": "194159",
    "end": "200480"
  },
  {
    "text": "monitor i think uh i read that on google's sra book i'll share the links later",
    "start": "200480",
    "end": "206000"
  },
  {
    "start": "205000",
    "end": "205000"
  },
  {
    "text": "there are three golden signals that you want to get from your system in order to be able to understand",
    "start": "206000",
    "end": "212640"
  },
  {
    "text": "if it's working properly if it's very healthy and they are pretty uh intuitive and logical to understand",
    "start": "212640",
    "end": "218640"
  },
  {
    "text": "the first one is latency meaning that if your system has suffering from a large latency",
    "start": "218640",
    "end": "227440"
  },
  {
    "text": "when it comes to requests this means that it's affecting your customers and they have a bad experience around",
    "start": "227440",
    "end": "234640"
  },
  {
    "text": "the traffic is how many people actually going into that website and if that traffic is being spiked or",
    "start": "234640",
    "end": "241280"
  },
  {
    "text": "being low it's something you want to monitor in order to be able to understand whether your system is healthy or not",
    "start": "241280",
    "end": "247120"
  },
  {
    "text": "the third thing is it sounds pretty obvious errors you want to be able to understand how many errors you have in your system",
    "start": "247120",
    "end": "254000"
  },
  {
    "text": "this is something that is not that trivial when it comes to distributed systems and not it's not that",
    "start": "254000",
    "end": "259040"
  },
  {
    "text": "easy to understand whether you have errors in your system um and just being able to to put that",
    "start": "259040",
    "end": "266240"
  },
  {
    "text": "some sort of like a spotlight around the errors can be extremely useful and the last thing is saturations which",
    "start": "266240",
    "end": "272960"
  },
  {
    "text": "means how many of my services are being highly highly frequently accessed if i have a database for example is that",
    "start": "272960",
    "end": "280960"
  },
  {
    "text": "some sort of my bottleneck if i'll be able to understand that and to see all my services and and see",
    "start": "280960",
    "end": "288240"
  },
  {
    "text": "which type of resources are being frequently used more than than the other then i will be able to understand whether my system",
    "start": "288240",
    "end": "295840"
  },
  {
    "text": "is healthy or not um let's just talk a little bit about old school monitoring that is currently",
    "start": "295840",
    "end": "301840"
  },
  {
    "start": "297000",
    "end": "297000"
  },
  {
    "text": "being done today and um i i think this is probably the most popular approach right now so",
    "start": "301840",
    "end": "308479"
  },
  {
    "text": "you have a system that is running usually uh in order to monitor that you need to install an agent",
    "start": "308479",
    "end": "314080"
  },
  {
    "text": "so all the monitorings are pretty much agent based and the downside to that is that they",
    "start": "314080",
    "end": "319280"
  },
  {
    "text": "only collect host data and they only collect metrics and when that comes to a problem is that",
    "start": "319280",
    "end": "325120"
  },
  {
    "text": "it doesn't give you the full understanding of what's going on within the services you're able to see that",
    "start": "325120",
    "end": "330800"
  },
  {
    "text": "uh your payment service for example is under um let's say a container so you can see",
    "start": "330800",
    "end": "336639"
  },
  {
    "text": "the cpu you can see the metrics but that doesn't really give you enough understanding whether",
    "start": "336639",
    "end": "342160"
  },
  {
    "text": "uh the database has been highly accessed or something inside your own business logic",
    "start": "342160",
    "end": "348000"
  },
  {
    "text": "is actually causing the errors and um um what we actually need in order",
    "start": "348000",
    "end": "353840"
  },
  {
    "start": "353000",
    "end": "353000"
  },
  {
    "text": "to troubleshoot we need some more debug there so metrics are not enough and this is like the first thing that we",
    "start": "353840",
    "end": "359360"
  },
  {
    "text": "do that we try to go whenever any engineer uh is getting a call and says that one of",
    "start": "359360",
    "end": "365759"
  },
  {
    "text": "the services is acting out or something is acting a little fishy the first thing you want to do is achieve much",
    "start": "365759",
    "end": "371199"
  },
  {
    "text": "as more as debug data as you want and we go directly to the logs in order to get",
    "start": "371199",
    "end": "376240"
  },
  {
    "text": "that and um today logging uh is in order to to achieve logging",
    "start": "376240",
    "end": "383199"
  },
  {
    "start": "378000",
    "end": "378000"
  },
  {
    "text": "then if you think about it you have your logs being read into the output probably to some file in your containers or",
    "start": "383199",
    "end": "390240"
  },
  {
    "text": "whether to uh you remotely move them to some other vendor and they're being basically",
    "start": "390240",
    "end": "397039"
  },
  {
    "text": "dumped either locally or remotely and an agent just collects those data and sends them whether to your own",
    "start": "397039",
    "end": "403440"
  },
  {
    "text": "uh proprietary elasticsearch that you uh ran out on yourself or maybe you",
    "start": "403440",
    "end": "410240"
  },
  {
    "text": "actually push that to some log vendor to be able to handle high traffic so",
    "start": "410240",
    "end": "415360"
  },
  {
    "text": "everything is is being done using agents that move logs from one place to another and uh",
    "start": "415360",
    "end": "422000"
  },
  {
    "text": "if you go to what actually is being done today so those those methods of logging and",
    "start": "422000",
    "end": "427440"
  },
  {
    "text": "monitoring can actually work pretty good if you have a monolithic application and you have only one system",
    "start": "427440",
    "end": "433199"
  },
  {
    "text": "but think about taking logs of different types of services in your system and making sense",
    "start": "433199",
    "end": "438800"
  },
  {
    "text": "that that's where the hard part comes and just um if we think about it like the",
    "start": "438800",
    "end": "444720"
  },
  {
    "text": "change that software has been made in the years i you can see that trend in",
    "start": "444720",
    "end": "450000"
  },
  {
    "start": "448000",
    "end": "448000"
  },
  {
    "text": "probably any graph that you will look up online there's a huge trend of companies doing the huge shift from",
    "start": "450000",
    "end": "456800"
  },
  {
    "text": "monolithic applications into uh distributed systems uh lambda adoption has been a highly",
    "start": "456800",
    "end": "464080"
  },
  {
    "text": "highly along the has been highly adopted and also containerized so a lot of companies",
    "start": "464080",
    "end": "469919"
  },
  {
    "text": "did the switch to content to containers which makes their their system much much much more highly distributed",
    "start": "469919",
    "end": "476639"
  },
  {
    "text": "and that shift is not uh it makes a lot of sense because it's",
    "start": "476639",
    "end": "482080"
  },
  {
    "start": "477000",
    "end": "477000"
  },
  {
    "text": "much more easier to develop if i'm as a developer i don't need to worry about the host that is running i",
    "start": "482080",
    "end": "488240"
  },
  {
    "text": "only need to work about the business logic and i'm able to use as much as more um third-party apis in",
    "start": "488240",
    "end": "496080"
  },
  {
    "text": "order to query different types of data sources around the internet or",
    "start": "496080",
    "end": "501520"
  },
  {
    "text": "if i want to implement some service i can just use it instead of implementing that myself",
    "start": "501520",
    "end": "506720"
  },
  {
    "text": "that has significantly improved the the pace that we can actually develop as a startup company it's extremely",
    "start": "506720",
    "end": "513360"
  },
  {
    "text": "useful to know you have those tools available online that you can just if i want to implement payment payment i",
    "start": "513360",
    "end": "519200"
  },
  {
    "text": "can just use stripe uh if i want to run something and not worry about the host i can just run it on the lambda function",
    "start": "519200",
    "end": "525200"
  },
  {
    "text": "and pay as i go this allows me to move my business much much more faster but it also comes",
    "start": "525200",
    "end": "531279"
  },
  {
    "text": "with a few uh downsides when it comes to actually understanding what's going on so it sounds",
    "start": "531279",
    "end": "536560"
  },
  {
    "text": "a little bit uh shiny at the beginning but once you run it into production i'm pretty sure most of you",
    "start": "536560",
    "end": "541839"
  },
  {
    "text": "uh are familiar with that it's becoming pretty hard to to to track those things down and",
    "start": "541839",
    "end": "549279"
  },
  {
    "start": "548000",
    "end": "548000"
  },
  {
    "text": "if i'll just continue talking about the challenges of engineers and devops throughout that thing is that",
    "start": "549279",
    "end": "554560"
  },
  {
    "text": "troubleshooting becomes extremely hard because you're not sure",
    "start": "554560",
    "end": "559600"
  },
  {
    "text": "if just using those logs and the metrics is something that it can be very efficient for highly distributed application and if you look",
    "start": "559600",
    "end": "566000"
  },
  {
    "text": "here on the right we have a few uh each line represents a service and we see just",
    "start": "566000",
    "end": "571040"
  },
  {
    "text": "the one that is actually valid is a communication throughout the services and as an engineer to be able to",
    "start": "571040",
    "end": "578800"
  },
  {
    "text": "to actually identify this trend throughout my system i need to correlate between different types of logs and that is",
    "start": "578800",
    "end": "585120"
  },
  {
    "text": "something that is not possible using the uh the basic logging capabilities",
    "start": "585120",
    "end": "591120"
  },
  {
    "text": "and if i can't really properly monitor my system how can i actually develop new things if",
    "start": "591120",
    "end": "597360"
  },
  {
    "text": "i don't know what's going on on my production environment and i have 20 services that are currently running and i know they're",
    "start": "597360",
    "end": "603120"
  },
  {
    "text": "held in traffic and we have some sort of login that tells us whenever there's an exception but i don't really know",
    "start": "603120",
    "end": "608880"
  },
  {
    "text": "what's going on within that and whenever there's a bug it's going to be extremely difficult for me to troubleshoot as a developer",
    "start": "608880",
    "end": "615839"
  },
  {
    "text": "i'm losing my confidence when it comes to implementary services simply because i don't really know how it's going to",
    "start": "615839",
    "end": "621440"
  },
  {
    "text": "affect my production environment um so this just limits to what we call",
    "start": "621440",
    "end": "628560"
  },
  {
    "start": "626000",
    "end": "626000"
  },
  {
    "text": "the three pills of observability you probably saw it around the web called as melt which",
    "start": "628560",
    "end": "634320"
  },
  {
    "text": "means we have metric tracing logging in advance and what it means that in order to gain",
    "start": "634320",
    "end": "640399"
  },
  {
    "text": "full observability on distributed systems i need to be able to take the metrics",
    "start": "640399",
    "end": "646480"
  },
  {
    "text": "and take the traces and take the logs and combine them all together in order to give me a clue of what's",
    "start": "646480",
    "end": "652720"
  },
  {
    "text": "going on and to end through my system that that is the only and efficient way to be able um",
    "start": "652720",
    "end": "660399"
  },
  {
    "text": "to not only know what's going on in production but also to be able to see what's going to happen once i",
    "start": "660399",
    "end": "666399"
  },
  {
    "text": "gonna push new services through my development process and when it comes to troubleshooting",
    "start": "666399",
    "end": "672240"
  },
  {
    "text": "it's gonna be extremely useful to to have the uh all those uh capabilities in hand um",
    "start": "672240",
    "end": "679200"
  },
  {
    "text": "now i want to start off with first um a lot of this talk is gonna be pretty technical and",
    "start": "679200",
    "end": "686160"
  },
  {
    "text": "just showing you guys how we can take um",
    "start": "686160",
    "end": "690959"
  },
  {
    "text": "a python application that is running on flask which is probably the most common framework today and we're going to try out and see how",
    "start": "691360",
    "end": "698320"
  },
  {
    "text": "we can implement login best practices so hopefully you guys can actually leave this talk with with something useful",
    "start": "698320",
    "end": "704320"
  },
  {
    "text": "and and something that you can actually try out uh on your own teams so i'm gonna talk a",
    "start": "704320",
    "end": "710399"
  },
  {
    "text": "little bit about logging logging is something that uh i think this is the the the number one tool for engineers",
    "start": "710399",
    "end": "717440"
  },
  {
    "text": "number one debugging tools and that just allows you to not only",
    "start": "717440",
    "end": "722560"
  },
  {
    "text": "um not only display some appropriate information about your system but also assist you",
    "start": "722560",
    "end": "728399"
  },
  {
    "text": "whenever you want to debug something you just print something to the screen and now i just encourage you i'm just",
    "start": "728399",
    "end": "733440"
  },
  {
    "text": "going to list a few best practices and then we're going to run to uh just a few uh examples for me the the",
    "start": "733440",
    "end": "740079"
  },
  {
    "text": "top best practices for login is first of all print thing in a json print",
    "start": "740079",
    "end": "745600"
  },
  {
    "text": "thing structured and the reason i'm i'm saying that because if you're just gonna print some text that tells you",
    "start": "745600",
    "end": "751839"
  },
  {
    "text": "service a call the database it's gonna be extremely hard for you to uh push that and and scale up with that",
    "start": "751839",
    "end": "758560"
  },
  {
    "text": "and put that into a log aggregator that will actually make sense and if you're going to put it in a json structured data you'll be able",
    "start": "758560",
    "end": "764720"
  },
  {
    "text": "to do things like index the fields that are actually part of that json and later on take those actually fields",
    "start": "764720",
    "end": "772639"
  },
  {
    "text": "and run some aggregated uh queries on that for example if you have a request coming to your system",
    "start": "772639",
    "end": "778800"
  },
  {
    "text": "and you're printing a json that says this this uh request came from path uh a then you'll",
    "start": "778800",
    "end": "785600"
  },
  {
    "text": "be able to go to your log aggregator whether it's on elastic or not and once it's indexed it can actually filter",
    "start": "785600",
    "end": "791680"
  },
  {
    "text": "all the events that that actually contain that without getting any false results if you're",
    "start": "791680",
    "end": "796880"
  },
  {
    "text": "going to use something that is not structured i'm going to just going to share how it actually looks like and",
    "start": "796880",
    "end": "802639"
  },
  {
    "text": "i think the most important thing is to actually automate that because let's remember that everything that we",
    "start": "802639",
    "end": "807680"
  },
  {
    "text": "print to the screen is stuff that we actually wrote in advance so if you are looking",
    "start": "807680",
    "end": "813120"
  },
  {
    "text": "to improve our let's say our logging capabilities or",
    "start": "813120",
    "end": "818160"
  },
  {
    "text": "observability capabilities we must uh be able to uh not think all the time while we code",
    "start": "818160",
    "end": "824959"
  },
  {
    "text": "what we actually gonna print we need to have that process being fully automated because",
    "start": "824959",
    "end": "830240"
  },
  {
    "text": "it will just be prone to errors we don't want to every time we write one one line of code then we write another",
    "start": "830240",
    "end": "835519"
  },
  {
    "text": "login code this just also makes your code looks bad and also very hard to maintain because every change you do you need to",
    "start": "835519",
    "end": "841600"
  },
  {
    "text": "change also the prints and eventually it will it's gonna start to have some inconsistency um so i'm just",
    "start": "841600",
    "end": "848320"
  },
  {
    "start": "847000",
    "end": "847000"
  },
  {
    "text": "gonna jump into the demo uh we're gonna use python and flask hopefully it will work since i haven't",
    "start": "848320",
    "end": "853600"
  },
  {
    "text": "done it for a while let me see here so i clear this there it is",
    "start": "853600",
    "end": "862000"
  },
  {
    "text": "so let me just actually jump to the code okay so um",
    "start": "862000",
    "end": "870800"
  },
  {
    "text": "just gonna run here okay so what actually we have here is the um uh this is a flask application",
    "start": "870800",
    "end": "878880"
  },
  {
    "text": "it's pretty straightforward you import the flask and what you do with that is actually uh",
    "start": "878880",
    "end": "885040"
  },
  {
    "text": "pretty neat because i am able to use the logger if you are familiar with",
    "start": "885040",
    "end": "892880"
  },
  {
    "text": "this is just an example for python but if you're familiar with the login tracing library you're also able to override the the",
    "start": "892880",
    "end": "898880"
  },
  {
    "text": "default formatter which means that every time i print to the screen uh even if it's a warning or anything",
    "start": "898880",
    "end": "904240"
  },
  {
    "text": "like that it will put it in a structured manner meaning that i don't need to no longer print if if i talked about like how to",
    "start": "904240",
    "end": "910160"
  },
  {
    "text": "put things in such a thing you can do that you can actually automate that so everything you print on the screen even existing logs",
    "start": "910160",
    "end": "916079"
  },
  {
    "text": "that you currently have in your code if you only change and add a an additional class called the",
    "start": "916079",
    "end": "921519"
  },
  {
    "text": "structure log they will be able to automatically change the way it prints to the screen",
    "start": "921519",
    "end": "927600"
  },
  {
    "text": "and what we have here is just a simple hello that is accepting anything coming from the",
    "start": "927600",
    "end": "932720"
  },
  {
    "text": "the default website and it's just printing a warning that a user got in and is uh an endpoint uh whatever",
    "start": "932720",
    "end": "940399"
  },
  {
    "text": "now um actually i think this is gonna work better like this",
    "start": "940399",
    "end": "954160"
  },
  {
    "text": "yeah i'm probably breaking the code now but i just want to show you how easy it is to actually implement that kind of",
    "start": "954160",
    "end": "959279"
  },
  {
    "text": "thing um i'm just doing some minor change because i just",
    "start": "959279",
    "end": "965040"
  },
  {
    "text": "noticed that this screen doesn't really print anything okay",
    "start": "965040",
    "end": "970639"
  },
  {
    "text": "i'm hoping on python3 okay so let me just run this structure login",
    "start": "974079",
    "end": "982320"
  },
  {
    "text": "great so now we're just going to curl it perfect so i just ran a request to my",
    "start": "982320",
    "end": "988959"
  },
  {
    "text": "flask application it's been running and now we can see the structured log so you can see the log here is pretty structured i can put it in",
    "start": "988959",
    "end": "995040"
  },
  {
    "text": "elastic and easily index that and this means that every time there's a request i can make sure that it's i know the",
    "start": "995040",
    "end": "1001360"
  },
  {
    "text": "service name i know the stage whether it's production or not i know the level i know the message and now if you want",
    "start": "1001360",
    "end": "1006720"
  },
  {
    "text": "to know how many errors i had in production from that service you can just filter by service and stage",
    "start": "1006720",
    "end": "1012399"
  },
  {
    "text": "and the type of level message which is something pretty pretty useful it's not just bringing something to the screen that will be",
    "start": "1012399",
    "end": "1018959"
  },
  {
    "text": "later on pretty hard to to follow and um moving to the next thing is",
    "start": "1018959",
    "end": "1025038"
  },
  {
    "start": "1023000",
    "end": "1023000"
  },
  {
    "text": "actually monitoring best practices so logs uh we already agree that logs are not enough",
    "start": "1025039",
    "end": "1031199"
  },
  {
    "text": "and if you want to actually monitor things even better we want to be able to make sure that all",
    "start": "1031199",
    "end": "1037918"
  },
  {
    "text": "our metrics are being aggregated into a unified dashboard um and what do i mean by that is is that",
    "start": "1037919",
    "end": "1044720"
  },
  {
    "text": "i i need to have a single dashboard where i can view all of the resources in my services",
    "start": "1044720",
    "end": "1050320"
  },
  {
    "text": "whether if i'm currently monitoring my database or monitoring my flask application or monitoring anything",
    "start": "1050320",
    "end": "1057760"
  },
  {
    "text": "else that comes in mind i don't want to switch between screens because every time there's going to be an issue i'm going to have to say okay",
    "start": "1057760",
    "end": "1063600"
  },
  {
    "text": "where do we monitor uh our database and if i want to actually take those things and put out alerts",
    "start": "1063600",
    "end": "1070000"
  },
  {
    "text": "it's gonna be extremely hard to maintain once you have different types of dashboards so if you're choosing in one dashboard just",
    "start": "1070000",
    "end": "1075840"
  },
  {
    "text": "go with that and make sure that all the metrics have been pushed to that dashboard and the second thing is define the",
    "start": "1075840",
    "end": "1081280"
  },
  {
    "text": "critical metrics that you have uh you don't want to be alerted up like late at night on anything that actually",
    "start": "1081280",
    "end": "1087360"
  },
  {
    "text": "breaks in your system you want to define the critical metrics that you say that in that point it's a something that you",
    "start": "1087360",
    "end": "1093919"
  },
  {
    "text": "have to uh to fix meaning that if my database is a little bit loaded i don't want to get any any alerts but whenever the database",
    "start": "1093919",
    "end": "1101120"
  },
  {
    "text": "reaches it it's like there's no return point when it ever it's gonna be stuck and not gonna be available for",
    "start": "1101120",
    "end": "1106480"
  },
  {
    "text": "my customers then that's the threshold i want to be pointing at and the third thing is that",
    "start": "1106480",
    "end": "1112640"
  },
  {
    "text": "don't think about metrics as only as infrastructure metrics think about metrics as",
    "start": "1112640",
    "end": "1117760"
  },
  {
    "text": "a thing that can help your business so make sure you use custom business metrics and if i take",
    "start": "1117760",
    "end": "1123600"
  },
  {
    "text": "the example of a website that is currently um i know shipping things to uh to",
    "start": "1123600",
    "end": "1129039"
  },
  {
    "text": "customers and have some audios in line if i have a dashboard that tells me that this month or this week or the last few",
    "start": "1129039",
    "end": "1136000"
  },
  {
    "text": "days we got 20 um 20 orders or 10 orders or something",
    "start": "1136000",
    "end": "1141360"
  },
  {
    "text": "about that i can also understand like what is the business state and what is the business itself and it's something that it's pretty cool to share",
    "start": "1141360",
    "end": "1148240"
  },
  {
    "text": "with everyone that are not specifically engineers in my system can be shared by the sales engineer they",
    "start": "1148240",
    "end": "1154000"
  },
  {
    "text": "can also use those those dashboards and i also highly encourage to take all those groups in your system and",
    "start": "1154000",
    "end": "1160400"
  },
  {
    "text": "and put them in the same dashboard obviously give each one of them their own view but everything needs to be in the same place",
    "start": "1160400",
    "end": "1166640"
  },
  {
    "text": "it will be the much more useful and efficient for your company and um and if we think about like",
    "start": "1166640",
    "end": "1173600"
  },
  {
    "text": "what we want to monitor on application level then every call for example that we are doing",
    "start": "1173600",
    "end": "1179360"
  },
  {
    "text": "to some api we want to see what is the average duration uh if we have a if we push messages on a",
    "start": "1179360",
    "end": "1186320"
  },
  {
    "text": "queue we want to see what is the minimum number that is currently being accessed to the queue it's",
    "start": "1186320",
    "end": "1192160"
  },
  {
    "text": "it's just making sure that uh you know which type of resource in your system is",
    "start": "1192160",
    "end": "1197520"
  },
  {
    "text": "prone to errors because if i'm gonna have a a queue that is currently handling my the my all my",
    "start": "1197520",
    "end": "1203039"
  },
  {
    "text": "deliveries if it's gonna uh break for example then i will also be alerted on that but i",
    "start": "1203039",
    "end": "1209200"
  },
  {
    "text": "also want to be aware whenever there is a business issue for example if that message queue is reaching like no orders at all in the",
    "start": "1209200",
    "end": "1216240"
  },
  {
    "text": "last hour and and typically something that is not happening then i also want to put on",
    "start": "1216240",
    "end": "1222400"
  },
  {
    "text": "actual things on that and there's a lot of things that you can go through like the http code that you want to actually",
    "start": "1222400",
    "end": "1228480"
  },
  {
    "text": "monitor but i think the most important thing when it comes to those metrics is to be",
    "start": "1228480",
    "end": "1233520"
  },
  {
    "text": "able to have your uh your services trigger those metrics and print for",
    "start": "1233520",
    "end": "1240000"
  },
  {
    "text": "example the the structured log that we saw and do that automatically which is something that i'm just",
    "start": "1240000",
    "end": "1245760"
  },
  {
    "text": "also gonna jump and show now so we were talking about the monitoring best practices",
    "start": "1245760",
    "end": "1251280"
  },
  {
    "text": "and way this screen is here",
    "start": "1251280",
    "end": "1255760"
  },
  {
    "text": "so i'm just going to jump to this example of actually using i'm using flask in this example so i'm",
    "start": "1256559",
    "end": "1263520"
  },
  {
    "text": "going to continue that and show how we can uh if you said we want to measure every request coming to my server and know",
    "start": "1263520",
    "end": "1270240"
  },
  {
    "text": "what is the average duration i need to be able to calculate that and my first best practice tip was",
    "start": "1270240",
    "end": "1276400"
  },
  {
    "text": "to not do things manually so we're gonna use what's called a middleware in flask it's just the ability to",
    "start": "1276400",
    "end": "1282240"
  },
  {
    "text": "every time there's a request coming in to flask you can use the middleware which will basically you can hook into different",
    "start": "1282240",
    "end": "1289280"
  },
  {
    "text": "types of times in your in your system for example if a request just come you can hook on",
    "start": "1289280",
    "end": "1295679"
  },
  {
    "text": "on the refer request and do some operation and also in the after request and also do some operation and",
    "start": "1295679",
    "end": "1303520"
  },
  {
    "text": "as you see the the the flask application is pretty standard just something that returns us hello world all the thing that is pretty",
    "start": "1303520",
    "end": "1310880"
  },
  {
    "text": "juicy is coming here in the middle where so we have the the middleware that is actually hooking to the before request and after request",
    "start": "1310880",
    "end": "1317440"
  },
  {
    "text": "with those two functions and what we do is that we first whenever the request comes we time it we take the current",
    "start": "1317440",
    "end": "1322559"
  },
  {
    "text": "time and the second thing we do is that we print to the screen what was the duration with also some additional information",
    "start": "1322559",
    "end": "1329600"
  },
  {
    "text": "and let's see how that actually looks like",
    "start": "1329600",
    "end": "1334240"
  },
  {
    "text": "it's called apm cool so our flask application is currently running",
    "start": "1339679",
    "end": "1345120"
  },
  {
    "text": "we're gonna send another message awesome so now what i can see is that",
    "start": "1345120",
    "end": "1352880"
  },
  {
    "text": "not only um and if i'll just go back to the code we're also still using the structured",
    "start": "1352880",
    "end": "1359360"
  },
  {
    "text": "log that we saw and that structured log gets a a record to print and it also makes sure",
    "start": "1359360",
    "end": "1364880"
  },
  {
    "text": "if you bring in uh something under message it also make sure to add that as an additional information so all the file",
    "start": "1364880",
    "end": "1371600"
  },
  {
    "text": "name the service the stage that we saw before is still keeping the same um the same",
    "start": "1371600",
    "end": "1376960"
  },
  {
    "text": "structure so it can be also extremely useful for indexing that later on and if i'll go",
    "start": "1376960",
    "end": "1382480"
  },
  {
    "text": "back to the example so we run it and now we saw the level the level is warning uh",
    "start": "1382480",
    "end": "1387679"
  },
  {
    "text": "this is the the stage in production and the thing the new thing that we just added is that how much time it actually took so i can",
    "start": "1387679",
    "end": "1394159"
  },
  {
    "text": "see uh the duration was around nine um i think it's nine milliseconds um",
    "start": "1394159",
    "end": "1400159"
  },
  {
    "text": "here and the status code was 200 so if i'm the fact that it's so uh json i",
    "start": "1400159",
    "end": "1406480"
  },
  {
    "text": "can actually parse it in any in especially in an elastic on any anything that supports",
    "start": "1406480",
    "end": "1411919"
  },
  {
    "text": "uh log aggregation so i can actually filter out all the requests or do aggregation like how many requests",
    "start": "1411919",
    "end": "1417760"
  },
  {
    "text": "were 200 how many 500 and set that as my metric or even duration if this api is going to take more than",
    "start": "1417760",
    "end": "1424640"
  },
  {
    "text": "30 seconds then i want to be alerted because aws api gateway timeouts on that point",
    "start": "1424640",
    "end": "1431919"
  },
  {
    "text": "now we have it's it's pretty nice what we did so far but there's a lot of things that",
    "start": "1431919",
    "end": "1437120"
  },
  {
    "text": "we know that's missing it's really nice if you have a an application that is currently running and it's something that uh that works on",
    "start": "1437120",
    "end": "1444640"
  },
  {
    "text": "a very low scale but if we think about a very distributed system we need to be able to correlate those metrics and logs",
    "start": "1444640",
    "end": "1451440"
  },
  {
    "text": "we need to be able to uh take different services in our system and make sure we correlate between that",
    "start": "1451440",
    "end": "1458000"
  },
  {
    "text": "and this just lead me to um explaining about distributed tracing um i'm sure you guys heard about this uh",
    "start": "1458000",
    "end": "1466000"
  },
  {
    "text": "probably uh a lot of you actually practicing that and and using that in your teams",
    "start": "1466000",
    "end": "1471360"
  },
  {
    "text": "i'm just going to show a few uh kind of do it yourself this retrace thing and how to use open",
    "start": "1471360",
    "end": "1477120"
  },
  {
    "text": "source tools to to be able to implement that and it's like i said open source tool today did a huge",
    "start": "1477120",
    "end": "1483360"
  },
  {
    "text": "improvement uh when it comes to that so it's it can be pretty easy to do that and i also show that uh",
    "start": "1483360",
    "end": "1488960"
  },
  {
    "text": "uh in a few now before that let's just drag back and understand why do we even need",
    "start": "1488960",
    "end": "1494480"
  },
  {
    "start": "1491000",
    "end": "1491000"
  },
  {
    "text": "and what is uh distribute tracing so a distributed tracing is basically a trace is basically storytelling it",
    "start": "1494480",
    "end": "1501279"
  },
  {
    "text": "means that i can tell what actually happened in my system for example a client",
    "start": "1501279",
    "end": "1507840"
  },
  {
    "text": "went to my website and pushed an order and that trigger a service that is",
    "start": "1507840",
    "end": "1513200"
  },
  {
    "text": "talking with a database and that database uh put a message on a queue and that queue",
    "start": "1513200",
    "end": "1518799"
  },
  {
    "text": "inject another thing and then i returned uh and then i sent an email to my customer so i'm closing a full loop",
    "start": "1518799",
    "end": "1525200"
  },
  {
    "text": "of asynchronous events but they're all initiated from the same position so to be able to draw that um and to be",
    "start": "1525200",
    "end": "1532960"
  },
  {
    "text": "able to to to understand how it goes this is how this retracing actually uh help us it's just the ability to to",
    "start": "1532960",
    "end": "1540480"
  },
  {
    "text": "to understand uh what happening from end to end in my system and doing that yourself um",
    "start": "1540480",
    "end": "1548240"
  },
  {
    "text": "it it is easy but it requires a lot of maintenance and if we're talking about uh small",
    "start": "1548240",
    "end": "1554240"
  },
  {
    "text": "companies that it might it might work but if we think about scaling up uh this means that your",
    "start": "1554240",
    "end": "1559520"
  },
  {
    "text": "entire uh engineering team needs to be aware of that that needs to do that uh i think like only very very tech",
    "start": "1559520",
    "end": "1565600"
  },
  {
    "text": "savvy companies like uber or companies like that allow themselves to have full teams dedicated",
    "start": "1565600",
    "end": "1571679"
  },
  {
    "text": "to uh code of observability and share those tools along the other teams and um",
    "start": "1571679",
    "end": "1578640"
  },
  {
    "text": "the truth is that today uh when when a company just started it's pretty hard to do that yourself and it doesn't even",
    "start": "1578640",
    "end": "1584000"
  },
  {
    "text": "make sense to do that yourself because you you are want to focus on your business",
    "start": "1584000",
    "end": "1589120"
  },
  {
    "text": "you want to be able to deliver products to your customers rather than have a niche team that will do solely",
    "start": "1589120",
    "end": "1596080"
  },
  {
    "text": "observability um and if i'll just talk about the what do we have today in terms of like the",
    "start": "1596080",
    "end": "1601840"
  },
  {
    "start": "1598000",
    "end": "1598000"
  },
  {
    "text": "the landscape of tools that allow you to do this retracing so uh part of the cncf we have open tracing",
    "start": "1601840",
    "end": "1609039"
  },
  {
    "text": "and open sensors that now join into open telemetry and also jager and zipkin that will",
    "start": "1609039",
    "end": "1614240"
  },
  {
    "text": "allow you to not only generate traces but also uh the tools to ingest them and visualize",
    "start": "1614240",
    "end": "1620240"
  },
  {
    "text": "them um when it comes open to omgs that's the term of the standard and the list of",
    "start": "1620240",
    "end": "1625919"
  },
  {
    "text": "libraries that will allow you to do some sort of like automated uh instrumentation",
    "start": "1625919",
    "end": "1630960"
  },
  {
    "text": "i um if if you guys are not familiar with that i i strongly invite you to to try them out uh they're pretty easy",
    "start": "1630960",
    "end": "1637520"
  },
  {
    "text": "to set up and we're just gonna do that in the example very soon now",
    "start": "1637520",
    "end": "1643360"
  },
  {
    "text": "if i'm talking about how to actually do that so generate traces is something that um",
    "start": "1643360",
    "end": "1651120"
  },
  {
    "text": "if you use for in this example we're going to use open tracing and in order to generate traces we need",
    "start": "1651120",
    "end": "1656799"
  },
  {
    "text": "to understand what do we want to have inside that traces so a trace means that",
    "start": "1656799",
    "end": "1661919"
  },
  {
    "text": "every time i service run like we saw the request going from um in my flask so if we'll just track back",
    "start": "1661919",
    "end": "1668559"
  },
  {
    "text": "here i can see that the request here once it run it just printed uh",
    "start": "1668559",
    "end": "1674799"
  },
  {
    "text": "a message up to the log and for me this message can be that's what i call a trace a trace is",
    "start": "1674799",
    "end": "1680080"
  },
  {
    "text": "just a log print that tells me what this application did we talked to",
    "start": "1680080",
    "end": "1685760"
  },
  {
    "text": "which resources it actually used and how much time it actually happened whether there are exceptions or not just",
    "start": "1685760",
    "end": "1692000"
  },
  {
    "text": "some um raw information about what this operation actually did and open tracing is just basically a",
    "start": "1692000",
    "end": "1698640"
  },
  {
    "text": "standard that allow you to uh to to code and create those kind of",
    "start": "1698640",
    "end": "1705120"
  },
  {
    "start": "1699000",
    "end": "1699000"
  },
  {
    "text": "traces in their lingo it's called a span and the first thing you want to do is to be",
    "start": "1705120",
    "end": "1710240"
  },
  {
    "text": "able to uh instrument every call you have so if i'm talking uh if i'm having a flash request that is",
    "start": "1710240",
    "end": "1716960"
  },
  {
    "text": "also accessing my adobe sdk and putting a message on s3 or putting a message on an sqs or",
    "start": "1716960",
    "end": "1723600"
  },
  {
    "text": "calling a third party api or even calling my postgres database i want to be able to automatically",
    "start": "1723600",
    "end": "1729760"
  },
  {
    "text": "trace those without the need to manually creating those spans and um this means that every question",
    "start": "1729760",
    "end": "1737039"
  },
  {
    "text": "response i have i'm going to create a span and i also want to for that expand to add some context meaning that if i'm calling a database",
    "start": "1737039",
    "end": "1743919"
  },
  {
    "text": "it's not enough for me to understand how much time it took i also want to understand which table which query and some more",
    "start": "1743919",
    "end": "1751200"
  },
  {
    "text": "additional information that can help me later on debug and uh the most important thing when it comes to creating spams is",
    "start": "1751200",
    "end": "1757840"
  },
  {
    "text": "to be able to not only think about a span as part of a",
    "start": "1757840",
    "end": "1763200"
  },
  {
    "text": "a single service thinking about in the scope of uh end to end like we like i talked before",
    "start": "1763200",
    "end": "1768640"
  },
  {
    "text": "that a request can go and put a message on and on on a message queue that will later on asynchronically",
    "start": "1768640",
    "end": "1775200"
  },
  {
    "text": "trigger another service so those two services need to pass correlation ids and tell each other",
    "start": "1775200",
    "end": "1782480"
  },
  {
    "text": "that they are part of the same distributed trace and this is the ability of actually injecting and extracting identifiers",
    "start": "1782480",
    "end": "1789120"
  },
  {
    "text": "and i'll show that right now in the example",
    "start": "1789120",
    "end": "1795840"
  },
  {
    "text": "i'm sorry i'll say if i'm going too fast um but you can just later on watch it and put",
    "start": "1797440",
    "end": "1802480"
  },
  {
    "text": "me on half the speed that's what usually people do um okay so let me just jump into the",
    "start": "1802480",
    "end": "1810080"
  },
  {
    "text": "tracing so i'm using open tracing library uh uh and i'm just using their tracer and",
    "start": "1810080",
    "end": "1816720"
  },
  {
    "text": "their format here and if we if we remember the flash middleware with it before that actually",
    "start": "1816720",
    "end": "1822080"
  },
  {
    "text": "put the before request and after request uh this is our this is my flask application it's still",
    "start": "1822080",
    "end": "1828159"
  },
  {
    "text": "the same hello world it doesn't do anything fancy but the middleware here is now creating spam so uh i want before the request actually",
    "start": "1828159",
    "end": "1836000"
  },
  {
    "text": "happens i want to extract um from the uh http headers of the flask i want to",
    "start": "1836000",
    "end": "1842559"
  },
  {
    "text": "extract the identifier and this this actually uh just give me the actual",
    "start": "1842559",
    "end": "1847919"
  },
  {
    "text": "span context so i i want to be able to whenever a quest comes to take all the information that i can",
    "start": "1847919",
    "end": "1853600"
  },
  {
    "text": "take and this will be my contacts meaning i can see the headers i can see some additional information",
    "start": "1853600",
    "end": "1858799"
  },
  {
    "text": "and i can also uh use that context to to create a new spam and and if this in",
    "start": "1858799",
    "end": "1865679"
  },
  {
    "text": "this example if for if for example someone called my uh my flask application and and that",
    "start": "1865679",
    "end": "1872159"
  },
  {
    "text": "service was also traced in the headers there will be a correlation id that will tell me hey you belong to this distributed trace",
    "start": "1872159",
    "end": "1878960"
  },
  {
    "text": "and now i can continue it and every every time you create a span it's either you're continuing",
    "start": "1878960",
    "end": "1884000"
  },
  {
    "text": "a distributed trace or you're just creating a new one so here we're just going to create one",
    "start": "1884000",
    "end": "1889039"
  },
  {
    "text": "or or be a continuation of another one now we also want to add some context and additional context like what is the url",
    "start": "1889039",
    "end": "1895840"
  },
  {
    "text": "and which user actually requested that so i can later on filter by type user or filter by that",
    "start": "1895840",
    "end": "1901600"
  },
  {
    "text": "url that will allow me to understand uh think much more powerfully and i also wanted after the",
    "start": "1901600",
    "end": "1908000"
  },
  {
    "text": "request to be able to display the status code and the duration that it actually took",
    "start": "1908000",
    "end": "1913600"
  },
  {
    "text": "so let's see how it actually looks like",
    "start": "1913600",
    "end": "1921840"
  },
  {
    "text": "okay i'm just gonna install up and tracing",
    "start": "1924240",
    "end": "1928158"
  },
  {
    "text": "good yeah so now we have the capture span and everything that is printed uh i'm just",
    "start": "1932840",
    "end": "1938799"
  },
  {
    "text": "printing the actual uh uh span it doesn't have anything very structured in terms of of printing that",
    "start": "1938799",
    "end": "1944320"
  },
  {
    "text": "but the span itself is can is sent is being sent to the jugger that we can later on show how it",
    "start": "1944320",
    "end": "1950720"
  },
  {
    "text": "actually looks like now we have the traces so that's service that flex application",
    "start": "1950720",
    "end": "1956559"
  },
  {
    "start": "1952000",
    "end": "1952000"
  },
  {
    "text": "created a span and that span is being ingested so i can use jager for example which can be pretty useful for ingesting",
    "start": "1956559",
    "end": "1963120"
  },
  {
    "text": "traces and it can handle any scale that you want it all depends on where you actually run it",
    "start": "1963120",
    "end": "1968399"
  },
  {
    "text": "and it also allows you to do some searches around that and also and also do some visualization so um",
    "start": "1968399",
    "end": "1976159"
  },
  {
    "text": "there's also other tools that will allow you to set up alerts meaning that every time there is a spam that contains",
    "start": "1976159",
    "end": "1981360"
  },
  {
    "text": "an exception then you want to be alerted on and uh a good example for that is jager",
    "start": "1981360",
    "end": "1986880"
  },
  {
    "text": "that this is a this is exactly how it looks like so it gives you a timeline view of all the operation that happened",
    "start": "1986880",
    "end": "1993519"
  },
  {
    "text": "if you think about it you have your flask application that is stuck into the database so you can see all the operation",
    "start": "1993519",
    "end": "2000000"
  },
  {
    "text": "it's pretty useful to optimize so if you know that you have a flow kind of flow in your system that",
    "start": "2000000",
    "end": "2006159"
  },
  {
    "text": "is currently handling orders like um the example that i'm using throughout this talk you can understand how much",
    "start": "2006159",
    "end": "2012000"
  },
  {
    "text": "time is being invested in that uh in each in each part of your system",
    "start": "2012000",
    "end": "2017200"
  },
  {
    "start": "2017000",
    "end": "2017000"
  },
  {
    "text": "and um the most thing important about creating spam is adding and tagging them and adding some",
    "start": "2017200",
    "end": "2022960"
  },
  {
    "text": "contacts for you to be able not only um not only understand",
    "start": "2022960",
    "end": "2028720"
  },
  {
    "text": "when you once you troubleshoot like identifiers you can see the user id the customer id the device",
    "start": "2028720",
    "end": "2034320"
  },
  {
    "text": "id but you can also see things like that are relevant to your flow control you can see the",
    "start": "2034320",
    "end": "2039600"
  },
  {
    "text": "um what type of event is actually happening things that are related to your business logic and you can also add business metrics uh",
    "start": "2039600",
    "end": "2046480"
  },
  {
    "text": "in each span you can say how many items i currently have in the cart how many minutes um",
    "start": "2046480",
    "end": "2052000"
  },
  {
    "text": "uh actually been washed in my video uh offering or anything of that sort so",
    "start": "2052000",
    "end": "2059358"
  },
  {
    "text": "adding contacts into spam can be extremely useful not only for troubleshooting but also for later on",
    "start": "2059359",
    "end": "2065599"
  },
  {
    "text": "searching and filtering and then creating metrics around that so i can create a metric that will tell me",
    "start": "2065599",
    "end": "2070720"
  },
  {
    "text": "how many items i have in my in my cart in a trend of every day throughout the week so that can be a",
    "start": "2070720",
    "end": "2076240"
  },
  {
    "text": "a dashboard that i can actually use and set up alerts whenever it's reaching a threshold whether it's",
    "start": "2076240",
    "end": "2081358"
  },
  {
    "text": "minimum or not or not or whether there's a spike so i'll know that i need to rather make sure that my database can handle",
    "start": "2081359",
    "end": "2087760"
  },
  {
    "text": "the load if it's going to continue in the same trend the other thing that can be extremely useful and",
    "start": "2087760",
    "end": "2093679"
  },
  {
    "text": "life-saving for a business the next thing that that is super important to add to a span is",
    "start": "2093679",
    "end": "2100640"
  },
  {
    "start": "2096000",
    "end": "2096000"
  },
  {
    "text": "i'm saying just let's not stop there let's not only add the thing that we think we need let's just add anything for example if",
    "start": "2100640",
    "end": "2107280"
  },
  {
    "text": "i'm calling a database i don't only need to say what type of table or how many uh what's the",
    "start": "2107280",
    "end": "2113839"
  },
  {
    "text": "length of the query or what is the result i want to see the entire query through that sql or nosql database",
    "start": "2113839",
    "end": "2120880"
  },
  {
    "text": "because i can use that query to see what is my most frequently query to that database i can do",
    "start": "2120880",
    "end": "2126720"
  },
  {
    "text": "optimizations around the database i can see which one which what exactly was the query that",
    "start": "2126720",
    "end": "2131839"
  },
  {
    "text": "ran that caused that error because getting a notification that my database database failed is not enough for me to",
    "start": "2131839",
    "end": "2138560"
  },
  {
    "text": "troubleshoot i want to understand exactly uh what happened and um",
    "start": "2138560",
    "end": "2144480"
  },
  {
    "text": "let's say for example i'm querying now uh uh stripe for payment it's not enough for",
    "start": "2144480",
    "end": "2149680"
  },
  {
    "text": "me to understand that i got 500 or to understand that um something",
    "start": "2149680",
    "end": "2154800"
  },
  {
    "text": "actually broke i want to see the actual payload because any third-party tool that you use",
    "start": "2154800",
    "end": "2160079"
  },
  {
    "text": "not only that they tell you that something went wrong they also give you a very informative information about what",
    "start": "2160079",
    "end": "2166240"
  },
  {
    "text": "actually went wrong and if you think about the time that this actually will save you is that",
    "start": "2166240",
    "end": "2172160"
  },
  {
    "text": "uh if for example something actually broke and you know you have 500 and you see and you know the exact service you",
    "start": "2172160",
    "end": "2177839"
  },
  {
    "text": "know the customer that that it happened you know everything but now you're trying to understand what",
    "start": "2177839",
    "end": "2182880"
  },
  {
    "text": "actually happened so the engineer will go to your dev environment and will try to you know reproduce it and reproducing",
    "start": "2182880",
    "end": "2190720"
  },
  {
    "text": "takes time it's not accurate and if you're in advance already printing all the information that you need",
    "start": "2190720",
    "end": "2196480"
  },
  {
    "text": "then you'll be able to um troubleshoot it uh on the exact events that happen so you",
    "start": "2196480",
    "end": "2202400"
  },
  {
    "text": "can see the exact event that happened with all the um relevant information now",
    "start": "2202400",
    "end": "2209359"
  },
  {
    "start": "2208000",
    "end": "2208000"
  },
  {
    "text": "this just leave me to a mindset that i think you guys should should actually use is that using",
    "start": "2209359",
    "end": "2214800"
  },
  {
    "text": "tracing not just as a part of the uh the logging of the matrix",
    "start": "2214800",
    "end": "2220160"
  },
  {
    "text": "uh pillars but just as a as a glue between those so i can use i can go from traces to the exact log i",
    "start": "2220160",
    "end": "2226720"
  },
  {
    "text": "can print exactly where the logs resides through the trace that i print i can uh print things like what is the",
    "start": "2226720",
    "end": "2233359"
  },
  {
    "text": "container id uh whether it's running a lambda what type of what's the lambda function i can get can easily correlate between or even",
    "start": "2233359",
    "end": "2240320"
  },
  {
    "text": "print the request id of that lambda function then i can easily curl it between the trace to the environment and also vice",
    "start": "2240320",
    "end": "2246240"
  },
  {
    "text": "versa i can go to the environment and to that invocation and and search that uh request id throughout my login and",
    "start": "2246240",
    "end": "2253520"
  },
  {
    "text": "then i will find the exact traces that happen and that is possible because i'm going to use the structured and automated logs",
    "start": "2253520",
    "end": "2259200"
  },
  {
    "text": "so i don't need to worry that my team actually does that",
    "start": "2259200",
    "end": "2264000"
  },
  {
    "text": "um so um we're just gonna come very closely to the ending i'm just",
    "start": "2264800",
    "end": "2269920"
  },
  {
    "text": "going to talk very briefly about what's for me the best practices to gain full observability to the system",
    "start": "2269920",
    "end": "2276000"
  },
  {
    "text": "and when it comes to that i think teams just need to have things",
    "start": "2276000",
    "end": "2282400"
  },
  {
    "start": "2277000",
    "end": "2277000"
  },
  {
    "text": "automated for them you don't want your uh engineers focusing on doing uh by yourself creating spans",
    "start": "2282400",
    "end": "2290800"
  },
  {
    "text": "uh bringing things to the logs even thinking about that you want to have a tool that you just plug in and make sure",
    "start": "2290800",
    "end": "2297040"
  },
  {
    "text": "that everything is already automatically captured you don't need to even maintain it because if you need to make the decision",
    "start": "2297040",
    "end": "2303040"
  },
  {
    "text": "whether uh you're going to focus on fixing your delivery system or fixing your logging library",
    "start": "2303040",
    "end": "2310560"
  },
  {
    "text": "you're always going to choose the delivery system and then it's going to be extremely hard for you to track back and",
    "start": "2310560",
    "end": "2316000"
  },
  {
    "text": "actually do it so you're going to have some legacy observability code that is pretty hard to maintain and i",
    "start": "2316000",
    "end": "2321280"
  },
  {
    "text": "don't think especially for small startups or even huge enterprises it's not something that you want your team to actually focus so",
    "start": "2321280",
    "end": "2327920"
  },
  {
    "text": "you need to think about just exactly as i will not implement my own payment system and i will use",
    "start": "2327920",
    "end": "2333119"
  },
  {
    "text": "uh third-party like like other tools that that are currently available i don't want to also implement",
    "start": "2333119",
    "end": "2339119"
  },
  {
    "text": "observability into my team because there's companies that exactly do that side note epsilon but",
    "start": "2339119",
    "end": "2344720"
  },
  {
    "text": "i'm i'm saying that as an engineer that this is something that we also uh encourage in our own",
    "start": "2344720",
    "end": "2351200"
  },
  {
    "text": "company we use uh we also use the uh apps again to to monitor our own epson environment and this means that our",
    "start": "2351200",
    "end": "2358240"
  },
  {
    "text": "engineers can focus on actually building the system and not worrying on monitoring that",
    "start": "2358240",
    "end": "2363280"
  },
  {
    "text": "and you want to to have that observability tool to support any environment so if you're going to switch",
    "start": "2363280",
    "end": "2368320"
  },
  {
    "text": "between serverless kubernetes ecs aks azure gcp or anything on on-premise you",
    "start": "2368320",
    "end": "2375119"
  },
  {
    "text": "don't want to worry about that that you need to change the way your code operates you want to be able to",
    "start": "2375119",
    "end": "2380800"
  },
  {
    "text": "have a a tracing library or a tracing tool that will work on any environment because companies often do this change",
    "start": "2380800",
    "end": "2387760"
  },
  {
    "text": "do the sh do the shift and the first thing they are cured about how we will be able to monitor if you're going to move to azure or things like",
    "start": "2387760",
    "end": "2394320"
  },
  {
    "text": "that so you need to eliminate that from your uh your thought because you can use a tool that will",
    "start": "2394320",
    "end": "2399520"
  },
  {
    "text": "support any environment and you want to be able to connect every request that goes in in a transaction for example if",
    "start": "2399520",
    "end": "2405119"
  },
  {
    "text": "you have a lambda function that is currently uh putting a message on a database that is triggering another function that is",
    "start": "2405119",
    "end": "2412560"
  },
  {
    "text": "talking with your one of your containers or one of your legacy services you want to be able to connect all of those",
    "start": "2412560",
    "end": "2418160"
  },
  {
    "text": "together in a transaction and then to have the ability to take that data and actually search and analyze",
    "start": "2418160",
    "end": "2423359"
  },
  {
    "text": "that so you can gain uh business related metrics and also to be able to search",
    "start": "2423359",
    "end": "2429040"
  },
  {
    "text": "very quickly and troubleshoot that and that alone will just help you to you just quickly pinpoint those problems",
    "start": "2429040",
    "end": "2438000"
  },
  {
    "start": "2438000",
    "end": "2438000"
  },
  {
    "text": "um so just to summarize um modern applications today are are very distributed",
    "start": "2438000",
    "end": "2445520"
  },
  {
    "text": "they are using a lot of apps like abstract layers you don't need to worry about service you don't need to worry if i'm talking about kubernetes you",
    "start": "2445520",
    "end": "2451760"
  },
  {
    "text": "don't need to worry about creating those containers everything is being managed automatically and everything is being",
    "start": "2451760",
    "end": "2457760"
  },
  {
    "text": "abstracted from you because you want to focus on your business logic and in order to monitor",
    "start": "2457760",
    "end": "2463040"
  },
  {
    "text": "that it's not the standard monitoring unlock that will assist you you need to use something much more advanced that",
    "start": "2463040",
    "end": "2469520"
  },
  {
    "text": "will also inherently implement distribute tracing with them and um this is exactly why distribute tracing",
    "start": "2469520",
    "end": "2475520"
  },
  {
    "text": "becomes much more crucial uh component in in in any environment and just as a side note for me i",
    "start": "2475520",
    "end": "2482480"
  },
  {
    "text": "encourage you guys to uh obviously if you're running a small company and you want to try all those things",
    "start": "2482480",
    "end": "2490160"
  },
  {
    "text": "those those open source tools are definitely available and they are pretty pretty good but if i'm thinking about scale and",
    "start": "2490160",
    "end": "2496720"
  },
  {
    "text": "production um don't implement something that unless you actually need it if you want to be",
    "start": "2496720",
    "end": "2502480"
  },
  {
    "text": "professional in payment then yeah then implement your own payment system but if you",
    "start": "2502480",
    "end": "2507520"
  },
  {
    "text": "are only want to use that as a tool then you need to choose like what is the best tool for you to",
    "start": "2507520",
    "end": "2513040"
  },
  {
    "text": "use and obviously you don't want to have your engineering team focused on creating uh stuff like that so um that is for me",
    "start": "2513040",
    "end": "2520160"
  },
  {
    "text": "so now is the q a session thanks",
    "start": "2520160",
    "end": "2525359"
  },
  {
    "text": "thank you hen for a wonderful presentation we now have some time for some questions",
    "start": "2525359",
    "end": "2530480"
  },
  {
    "text": "um i believe we already have one here in the q a box in quote support any environment would",
    "start": "2530480",
    "end": "2536800"
  },
  {
    "text": "you be able to provide an example of a tool that is limited to a set of environments",
    "start": "2536800",
    "end": "2544400"
  },
  {
    "text": "a tool that is limited to a set of environment yeah provide an example of a tool that",
    "start": "2544720",
    "end": "2550720"
  },
  {
    "text": "is limited to a set of environments yeah so if you think about being able to",
    "start": "2550720",
    "end": "2557200"
  },
  {
    "text": "create your uh your own uh if i'll take like jager as a service for example that you can run on your own",
    "start": "2557200",
    "end": "2564960"
  },
  {
    "text": "environment if you're going to do the switch to another environment then you're going to have to also copy",
    "start": "2564960",
    "end": "2570079"
  },
  {
    "text": "that to another tool to to another environment",
    "start": "2570079",
    "end": "2576318"
  },
  {
    "text": "okay",
    "start": "2577440",
    "end": "2579838"
  }
]