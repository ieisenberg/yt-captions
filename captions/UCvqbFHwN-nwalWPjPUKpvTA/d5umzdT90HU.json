[
  {
    "text": "hi I'm Greg i'm kernel maintainer",
    "start": "160",
    "end": "3600"
  },
  {
    "text": "developer one of many thousands of",
    "start": "3600",
    "end": "6080"
  },
  {
    "text": "kernel people um let's talk about Rust",
    "start": "6080",
    "end": "7759"
  },
  {
    "text": "and Linux but first it's really about C",
    "start": "7759",
    "end": "10559"
  },
  {
    "text": "and Rust and Linux because C is what",
    "start": "10559",
    "end": "12400"
  },
  {
    "text": "runs the world and C is still very",
    "start": "12400",
    "end": "14480"
  },
  {
    "text": "important but Rust is doing good things",
    "start": "14480",
    "end": "16880"
  },
  {
    "text": "too but I was told that many of you",
    "start": "16880",
    "end": "19279"
  },
  {
    "text": "don't really know what Linux",
    "start": "19279",
    "end": "21880"
  },
  {
    "text": "is this is a Linux Foundation conference",
    "start": "21880",
    "end": "25199"
  },
  {
    "text": "um Linux is that little thing at the",
    "start": "25199",
    "end": "27840"
  },
  {
    "text": "bottom that hides the hardware from you",
    "start": "27840",
    "end": "29920"
  },
  {
    "text": "it's our job as a kernel an operating",
    "start": "29920",
    "end": "32078"
  },
  {
    "text": "system to isolate different processes to",
    "start": "32079",
    "end": "34960"
  },
  {
    "text": "make it so that you have a fast secure",
    "start": "34960",
    "end": "37120"
  },
  {
    "text": "system and to make the hardware look",
    "start": "37120",
    "end": "39120"
  },
  {
    "text": "agnostic you don't care what disc",
    "start": "39120",
    "end": "41040"
  },
  {
    "text": "controller you're using you don't care",
    "start": "41040",
    "end": "42559"
  },
  {
    "text": "what network controller you're using you",
    "start": "42559",
    "end": "43920"
  },
  {
    "text": "don't care what processor you're using",
    "start": "43920",
    "end": "45760"
  },
  {
    "text": "it just works that's Linux's job we get",
    "start": "45760",
    "end": "48879"
  },
  {
    "text": "out of the way we let you go and do",
    "start": "48879",
    "end": "50960"
  },
  {
    "text": "whatever you want to do we're a tool to",
    "start": "50960",
    "end": "52879"
  },
  {
    "text": "let you achieve your task um our",
    "start": "52879",
    "end": "56239"
  },
  {
    "text": "community is big it's really really big",
    "start": "56239",
    "end": "59199"
  },
  {
    "text": "uh almost double the size of Kubernetes",
    "start": "59199",
    "end": "61840"
  },
  {
    "text": "sorry you're number two we're still",
    "start": "61840",
    "end": "63520"
  },
  {
    "text": "number one um this was just last year at",
    "start": "63520",
    "end": "67680"
  },
  {
    "text": "least 355 different companies we don't",
    "start": "67680",
    "end": "70479"
  },
  {
    "text": "really count them all we kind of get",
    "start": "70479",
    "end": "72520"
  },
  {
    "text": "close um we also go fast really really",
    "start": "72520",
    "end": "75760"
  },
  {
    "text": "fast this is the number of changes",
    "start": "75760",
    "end": "78000"
  },
  {
    "text": "accepted it takes on average at least",
    "start": "78000",
    "end": "81040"
  },
  {
    "text": "three tries to get a change accepted so",
    "start": "81040",
    "end": "83600"
  },
  {
    "text": "that change at 76,000 changes has been",
    "start": "83600",
    "end": "87200"
  },
  {
    "text": "reviewed two other times before it got",
    "start": "87200",
    "end": "89280"
  },
  {
    "text": "accepted our maintainers do a lot a lot",
    "start": "89280",
    "end": "91759"
  },
  {
    "text": "of work we have about three maybe 200",
    "start": "91759",
    "end": "94320"
  },
  {
    "text": "maintainers that do the majority of the",
    "start": "94320",
    "end": "95759"
  },
  {
    "text": "work 700 total um so the ratio of",
    "start": "95759",
    "end": "98799"
  },
  {
    "text": "developers to maintainers is still quite",
    "start": "98799",
    "end": "100799"
  },
  {
    "text": "large um we're going really really fast",
    "start": "100799",
    "end": "103280"
  },
  {
    "text": "that's almost eight nine changes an hour",
    "start": "103280",
    "end": "105920"
  },
  {
    "text": "for the past decade 24 hours a day 7",
    "start": "105920",
    "end": "108320"
  },
  {
    "text": "days a week small percentage of those go",
    "start": "108320",
    "end": "110240"
  },
  {
    "text": "into the stable trees and 13 CVEs a day",
    "start": "110240",
    "end": "114000"
  },
  {
    "text": "sounds like a lot we're actually about",
    "start": "114000",
    "end": "115759"
  },
  {
    "text": "half the size of number CVES per day",
    "start": "115759",
    "end": "118159"
  },
  {
    "text": "than the other operating systems so if",
    "start": "118159",
    "end": "120240"
  },
  {
    "text": "you count CVEs as being security issues",
    "start": "120240",
    "end": "123200"
  },
  {
    "text": "as it matters I don't um we're still",
    "start": "123200",
    "end": "126719"
  },
  {
    "text": "better than the other people and number",
    "start": "126719",
    "end": "128959"
  },
  {
    "text": "of releases 8 to nine weeks like",
    "start": "128959",
    "end": "131039"
  },
  {
    "text": "clockwork for the past 15 years new",
    "start": "131039",
    "end": "133120"
  },
  {
    "text": "release like clockwork you can just",
    "start": "133120",
    "end": "135760"
  },
  {
    "text": "depend on us i gave a longer talk about",
    "start": "135760",
    "end": "138360"
  },
  {
    "text": "how all this works you can just Google",
    "start": "138360",
    "end": "141120"
  },
  {
    "text": "that and look at that if you're curious",
    "start": "141120",
    "end": "143440"
  },
  {
    "text": "uh turns out we run the world um Android",
    "start": "143440",
    "end": "147840"
  },
  {
    "text": "4 billion devices everything else is a",
    "start": "147840",
    "end": "150560"
  },
  {
    "text": "rounding",
    "start": "150560",
    "end": "153120"
  },
  {
    "text": "error you guys and servers with maybe",
    "start": "153239",
    "end": "156080"
  },
  {
    "text": "200 million again rounding error",
    "start": "156080",
    "end": "158840"
  },
  {
    "text": "chromebooks 25 30 million a year for the",
    "start": "158840",
    "end": "161760"
  },
  {
    "text": "past decade still a huge number rounding",
    "start": "161760",
    "end": "164319"
  },
  {
    "text": "error um Wi-Fi all the Apple Wi-Fi or",
    "start": "164319",
    "end": "168560"
  },
  {
    "text": "three 5G modems run Linux so all the",
    "start": "168560",
    "end": "170800"
  },
  {
    "text": "iPhones run Linux as well washing",
    "start": "170800",
    "end": "172879"
  },
  {
    "text": "machine all the TVs air traffic control",
    "start": "172879",
    "end": "175519"
  },
  {
    "text": "finance um satellites and my favorite",
    "start": "175519",
    "end": "178400"
  },
  {
    "text": "the cow automatic cow milking machine",
    "start": "178400",
    "end": "180560"
  },
  {
    "text": "runs on",
    "start": "180560",
    "end": "182040"
  },
  {
    "text": "Linux so let's talk code i mean I'm",
    "start": "182040",
    "end": "185120"
  },
  {
    "text": "going to it's a keynote so we have to",
    "start": "185120",
    "end": "186640"
  },
  {
    "text": "show code right um this is a real code",
    "start": "186640",
    "end": "188959"
  },
  {
    "text": "in the kernel today um Bluetooth this is",
    "start": "188959",
    "end": "192000"
  },
  {
    "text": "an example of a security bug we're going",
    "start": "192000",
    "end": "193680"
  },
  {
    "text": "to talk about security issues the first",
    "start": "193680",
    "end": "195599"
  },
  {
    "text": "line up there we we ask for some",
    "start": "195599",
    "end": "198720"
  },
  {
    "text": "parameters back we look at the result",
    "start": "198720",
    "end": "200959"
  },
  {
    "text": "and do something with it looks fine been",
    "start": "200959",
    "end": "203519"
  },
  {
    "text": "there for a few years turns out that's",
    "start": "203519",
    "end": "205840"
  },
  {
    "text": "wrong at our level of the stack if we",
    "start": "205840",
    "end": "207840"
  },
  {
    "text": "get something wrong that's a security",
    "start": "207840",
    "end": "209519"
  },
  {
    "text": "bug we forgot to check that it actually",
    "start": "209519",
    "end": "211920"
  },
  {
    "text": "returned a proper value uh my intern",
    "start": "211920",
    "end": "214400"
  },
  {
    "text": "fixed this fast this past summer got a",
    "start": "214400",
    "end": "216959"
  },
  {
    "text": "CVE wonderful um and we use go-tos c",
    "start": "216959",
    "end": "221840"
  },
  {
    "text": "uses gotos fun but we go to the place we",
    "start": "221840",
    "end": "225200"
  },
  {
    "text": "need to unlock from because we need to",
    "start": "225200",
    "end": "226720"
  },
  {
    "text": "remember to unlock from this and the",
    "start": "226720",
    "end": "228400"
  },
  {
    "text": "compiler can't really check for this so",
    "start": "228400",
    "end": "230319"
  },
  {
    "text": "when you're a reviewer or maintainer you",
    "start": "230319",
    "end": "232480"
  },
  {
    "text": "get a patch sent to you all we can see",
    "start": "232480",
    "end": "234400"
  },
  {
    "text": "is oh yes they did look at the return",
    "start": "234400",
    "end": "236560"
  },
  {
    "text": "value that we need to unlock we didn't",
    "start": "236560",
    "end": "239040"
  },
  {
    "text": "do this we can't always remember that",
    "start": "239040",
    "end": "241200"
  },
  {
    "text": "and that's a common common bug here's",
    "start": "241200",
    "end": "243360"
  },
  {
    "text": "another CVE that happened normally we",
    "start": "243360",
    "end": "245599"
  },
  {
    "text": "just return the error they did check for",
    "start": "245599",
    "end": "247519"
  },
  {
    "text": "it properly but they forgot the fact we",
    "start": "247519",
    "end": "249840"
  },
  {
    "text": "had to actually unlock unlock some other",
    "start": "249840",
    "end": "251760"
  },
  {
    "text": "stuff later so wouldn't it be nice if we",
    "start": "251760",
    "end": "254799"
  },
  {
    "text": "could do this automatically c a number",
    "start": "254799",
    "end": "257280"
  },
  {
    "text": "of years ago put in something called",
    "start": "257280",
    "end": "259160"
  },
  {
    "text": "scoped references so you can when you",
    "start": "259160",
    "end": "261759"
  },
  {
    "text": "leave the scope of a reference it'll",
    "start": "261759",
    "end": "263680"
  },
  {
    "text": "automatically clean up for you finally",
    "start": "263680",
    "end": "265919"
  },
  {
    "text": "if we look at the code in Rust other",
    "start": "265919",
    "end": "267680"
  },
  {
    "text": "compilers do this automatically we're",
    "start": "267680",
    "end": "269759"
  },
  {
    "text": "like why can't we do this in a kernel we",
    "start": "269759",
    "end": "271840"
  },
  {
    "text": "finally incremented our version of C",
    "start": "271840",
    "end": "273600"
  },
  {
    "text": "that we support so that we can finally",
    "start": "273600",
    "end": "275520"
  },
  {
    "text": "do this and now we have something called",
    "start": "275520",
    "end": "277040"
  },
  {
    "text": "guards so we can here's the diff we",
    "start": "277040",
    "end": "280000"
  },
  {
    "text": "remove some lines of code and we can say",
    "start": "280000",
    "end": "281680"
  },
  {
    "text": "here's a guard for this lock let's grab",
    "start": "281680",
    "end": "284240"
  },
  {
    "text": "the lock and then let's do something",
    "start": "284240",
    "end": "286080"
  },
  {
    "text": "when the lock goes out of scope it'll be",
    "start": "286080",
    "end": "288000"
  },
  {
    "text": "freed much cleaner we can get around",
    "start": "288000",
    "end": "290240"
  },
  {
    "text": "gotos we can do lots of stuff this is",
    "start": "290240",
    "end": "292639"
  },
  {
    "text": "good so going forward we're going to",
    "start": "292639",
    "end": "294720"
  },
  {
    "text": "start doing stuff like this we don't",
    "start": "294720",
    "end": "296400"
  },
  {
    "text": "want to modify the existing code just",
    "start": "296400",
    "end": "298479"
  },
  {
    "text": "going forward is good but we still have",
    "start": "298479",
    "end": "300720"
  },
  {
    "text": "to manually remember to grab the lock",
    "start": "300720",
    "end": "303040"
  },
  {
    "text": "i'll come back to that in a minute so",
    "start": "303040",
    "end": "305199"
  },
  {
    "text": "not only grabbing locks but allocating",
    "start": "305199",
    "end": "307520"
  },
  {
    "text": "memory we can do things like oh we want",
    "start": "307520",
    "end": "309360"
  },
  {
    "text": "to grab some allocate some memory at the",
    "start": "309360",
    "end": "311120"
  },
  {
    "text": "top when we return normally we'd have to",
    "start": "311120",
    "end": "314240"
  },
  {
    "text": "go and free it manually here we lose the",
    "start": "314240",
    "end": "316960"
  },
  {
    "text": "scope and away it goes the compiler just",
    "start": "316960",
    "end": "319120"
  },
  {
    "text": "knows to free it up properly but instead",
    "start": "319120",
    "end": "321759"
  },
  {
    "text": "we also have to say we want to save it",
    "start": "321759",
    "end": "323600"
  },
  {
    "text": "so we got to manually save it at the end",
    "start": "323600",
    "end": "325199"
  },
  {
    "text": "as well so this is C scoped locks and",
    "start": "325199",
    "end": "328600"
  },
  {
    "text": "allocations this is good it makes the",
    "start": "328600",
    "end": "331440"
  },
  {
    "text": "code simpler it makes reviewing easier",
    "start": "331440",
    "end": "334240"
  },
  {
    "text": "which is very very important we write",
    "start": "334240",
    "end": "336160"
  },
  {
    "text": "code for people first compilers second",
    "start": "336160",
    "end": "339680"
  },
  {
    "text": "because we have to maintain this for",
    "start": "339680",
    "end": "340960"
  },
  {
    "text": "long periods of time people read this",
    "start": "340960",
    "end": "342639"
  },
  {
    "text": "and have to understand it less bugs",
    "start": "342639",
    "end": "345360"
  },
  {
    "text": "which is very important and most",
    "start": "345360",
    "end": "346720"
  },
  {
    "text": "importantly the maintainers can have",
    "start": "346720",
    "end": "348000"
  },
  {
    "text": "more fun and go do other things instead",
    "start": "348000",
    "end": "349520"
  },
  {
    "text": "of reviewing unlock bugs don't want to",
    "start": "349520",
    "end": "352240"
  },
  {
    "text": "do this so let's look back at the",
    "start": "352240",
    "end": "353840"
  },
  {
    "text": "original code that we had up here at the",
    "start": "353840",
    "end": "355840"
  },
  {
    "text": "top c so that we were to write that code",
    "start": "355840",
    "end": "358880"
  },
  {
    "text": "in Rust the top line adds a a question",
    "start": "358880",
    "end": "362400"
  },
  {
    "text": "mark at the end and that tells the",
    "start": "362400",
    "end": "364160"
  },
  {
    "text": "compiler if there was an error here",
    "start": "364160",
    "end": "365600"
  },
  {
    "text": "we'll return the error so Rust will",
    "start": "365600",
    "end": "367520"
  },
  {
    "text": "enforce the fact not only do we catch",
    "start": "367520",
    "end": "369680"
  },
  {
    "text": "the error that we also looked at the",
    "start": "369680",
    "end": "371520"
  },
  {
    "text": "return value that makes code much",
    "start": "371520",
    "end": "374479"
  },
  {
    "text": "simpler the compiler catches the bug for",
    "start": "374479",
    "end": "377440"
  },
  {
    "text": "you and that's very very important we",
    "start": "377440",
    "end": "379520"
  },
  {
    "text": "want the compiler to catch a bug even",
    "start": "379520",
    "end": "380960"
  },
  {
    "text": "before maintainer has to look at this",
    "start": "380960",
    "end": "382639"
  },
  {
    "text": "stuff again with locks Rust does some",
    "start": "382639",
    "end": "385360"
  },
  {
    "text": "cool stuff rust will force you to grab a",
    "start": "385360",
    "end": "387680"
  },
  {
    "text": "lock before you can even access the",
    "start": "387680",
    "end": "389360"
  },
  {
    "text": "member the data remember locks are",
    "start": "389360",
    "end": "391360"
  },
  {
    "text": "always supposed to be for data not for",
    "start": "391360",
    "end": "392960"
  },
  {
    "text": "code and here rust an example this is in",
    "start": "392960",
    "end": "395759"
  },
  {
    "text": "the kernel today of Rust grabbing a lock",
    "start": "395759",
    "end": "399039"
  },
  {
    "text": "before we access the data if we try and",
    "start": "399039",
    "end": "401520"
  },
  {
    "text": "access data ahead of time you just can't",
    "start": "401520",
    "end": "403440"
  },
  {
    "text": "do it the compiler will not let you so",
    "start": "403440",
    "end": "405600"
  },
  {
    "text": "Rust can prevent a huge majority of",
    "start": "405600",
    "end": "407840"
  },
  {
    "text": "security issues at build time which is",
    "start": "407840",
    "end": "410639"
  },
  {
    "text": "much much more important than review",
    "start": "410639",
    "end": "412240"
  },
  {
    "text": "time don't rely on humans rely on code",
    "start": "412240",
    "end": "415280"
  },
  {
    "text": "or tools that we can automate this stuff",
    "start": "415280",
    "end": "417600"
  },
  {
    "text": "that's why some of us are pushing for",
    "start": "417600",
    "end": "419039"
  },
  {
    "text": "Rust in the kernel this is very",
    "start": "419039",
    "end": "420880"
  },
  {
    "text": "important so again Rust can do all the",
    "start": "420880",
    "end": "423759"
  },
  {
    "text": "same things as C can do here very good",
    "start": "423759",
    "end": "427120"
  },
  {
    "text": "because we have more developers than we",
    "start": "427120",
    "end": "428880"
  },
  {
    "text": "have reviewers again we might have a",
    "start": "428880",
    "end": "431440"
  },
  {
    "text": "handful of maintainers for the kernel",
    "start": "431440",
    "end": "433120"
  },
  {
    "text": "that do that full-time the majority of",
    "start": "433120",
    "end": "434960"
  },
  {
    "text": "the maintainers do this as a part-time",
    "start": "434960",
    "end": "436880"
  },
  {
    "text": "thing part of their paid job or part of",
    "start": "436880",
    "end": "438960"
  },
  {
    "text": "their own time we need our re",
    "start": "438960",
    "end": "441360"
  },
  {
    "text": "maintainers and reviewers to have as",
    "start": "441360",
    "end": "443120"
  },
  {
    "text": "much time as possible make their job as",
    "start": "443120",
    "end": "445199"
  },
  {
    "text": "much as e as easy as possible rust can",
    "start": "445199",
    "end": "447759"
  },
  {
    "text": "also do some cool things we can enforce",
    "start": "447759",
    "end": "450240"
  },
  {
    "text": "validation of untrusted data data comes",
    "start": "450240",
    "end": "452479"
  },
  {
    "text": "into the kernel we need to validate it",
    "start": "452479",
    "end": "454000"
  },
  {
    "text": "before we can trust it that's a huge",
    "start": "454000",
    "end": "456000"
  },
  {
    "text": "common security issue rust can enforce",
    "start": "456000",
    "end": "458000"
  },
  {
    "text": "this again memory lifetime rules locking",
    "start": "458000",
    "end": "460240"
  },
  {
    "text": "rules error handling and type safety all",
    "start": "460240",
    "end": "463199"
  },
  {
    "text": "very good things but Rust is not a",
    "start": "463199",
    "end": "466080"
  },
  {
    "text": "silver bullet here's some example code",
    "start": "466080",
    "end": "468319"
  },
  {
    "text": "that is not in the kernel thank you um",
    "start": "468319",
    "end": "470960"
  },
  {
    "text": "the last line there very common off by",
    "start": "470960",
    "end": "474080"
  },
  {
    "text": "one error boom the kernel will crash",
    "start": "474080",
    "end": "476919"
  },
  {
    "text": "rust however when we access memory that",
    "start": "476919",
    "end": "480240"
  },
  {
    "text": "it didn't want to access will just crash",
    "start": "480240",
    "end": "483039"
  },
  {
    "text": "the kernel will crash i'll give you a",
    "start": "483039",
    "end": "484479"
  },
  {
    "text": "CVE you'll reboot the box and go on but",
    "start": "484479",
    "end": "487120"
  },
  {
    "text": "with C you would have a memory exploit",
    "start": "487120",
    "end": "489680"
  },
  {
    "text": "you could probably take over the machine",
    "start": "489680",
    "end": "491599"
  },
  {
    "text": "rust will fail safer it still will fail",
    "start": "491599",
    "end": "494479"
  },
  {
    "text": "it's fine but it will fail safer so",
    "start": "494479",
    "end": "497199"
  },
  {
    "text": "again you'll still get the CVE but you",
    "start": "497199",
    "end": "499360"
  },
  {
    "text": "won't get the box taken over so that's a",
    "start": "499360",
    "end": "501280"
  },
  {
    "text": "good thing that's a very good thing",
    "start": "501280",
    "end": "502960"
  },
  {
    "text": "that's one other reason why we should be",
    "start": "502960",
    "end": "505440"
  },
  {
    "text": "using Rust not that it's going to",
    "start": "505440",
    "end": "506879"
  },
  {
    "text": "prevent us from crashing it'll prevent",
    "start": "506879",
    "end": "508560"
  },
  {
    "text": "us it will crash",
    "start": "508560",
    "end": "510759"
  },
  {
    "text": "safer it's today it's in the kernel",
    "start": "510759",
    "end": "513120"
  },
  {
    "text": "today we have 34 million lines of C code",
    "start": "513120",
    "end": "515760"
  },
  {
    "text": "you don't run all those millions of",
    "start": "515760",
    "end": "517200"
  },
  {
    "text": "lines of code you run about on the",
    "start": "517200",
    "end": "518719"
  },
  {
    "text": "server 2 million lines of code but",
    "start": "518719",
    "end": "520719"
  },
  {
    "text": "25,000 lines of Rust one of the new GPU",
    "start": "520719",
    "end": "524000"
  },
  {
    "text": "drivers is being written in Rust today",
    "start": "524000",
    "end": "526000"
  },
  {
    "text": "the developers there are pushing for a",
    "start": "526000",
    "end": "527440"
  },
  {
    "text": "lot of this stuff and it makes the code",
    "start": "527440",
    "end": "528880"
  },
  {
    "text": "easier to understand easier to review",
    "start": "528880",
    "end": "531279"
  },
  {
    "text": "and hopefully more stable over time but",
    "start": "531279",
    "end": "534320"
  },
  {
    "text": "you've heard a lot of people complaining",
    "start": "534320",
    "end": "535920"
  },
  {
    "text": "about this changing kernel developers",
    "start": "535920",
    "end": "538959"
  },
  {
    "text": "minds is",
    "start": "538959",
    "end": "540839"
  },
  {
    "text": "hard the main reason this is hard and we",
    "start": "540839",
    "end": "544320"
  },
  {
    "text": "are grumpy about this is because it",
    "start": "544320",
    "end": "546720"
  },
  {
    "text": "forces us to review our C code and our",
    "start": "546720",
    "end": "549920"
  },
  {
    "text": "code has evolved over the past 30 years",
    "start": "549920",
    "end": "551920"
  },
  {
    "text": "in ways that sometimes we don't",
    "start": "551920",
    "end": "553279"
  },
  {
    "text": "understand it sometimes we need to go",
    "start": "553279",
    "end": "555200"
  },
  {
    "text": "back and look at it and enforce the",
    "start": "555200",
    "end": "556640"
  },
  {
    "text": "rules rust allows us to force to enforce",
    "start": "556640",
    "end": "560080"
  },
  {
    "text": "rules on our C APIs in the kernel that",
    "start": "560080",
    "end": "562640"
  },
  {
    "text": "we hadn't been able to do before so it's",
    "start": "562640",
    "end": "564720"
  },
  {
    "text": "making us re-review older code and it's",
    "start": "564720",
    "end": "568160"
  },
  {
    "text": "hard developers maintainers don't want",
    "start": "568160",
    "end": "570240"
  },
  {
    "text": "they want to do new things they don't",
    "start": "570240",
    "end": "571279"
  },
  {
    "text": "want to look at their old stuff at times",
    "start": "571279",
    "end": "573360"
  },
  {
    "text": "but the change can be good i think it's",
    "start": "573360",
    "end": "576560"
  },
  {
    "text": "important to do this because mostly most",
    "start": "576560",
    "end": "579200"
  },
  {
    "text": "important it'll make us maintain the",
    "start": "579200",
    "end": "581040"
  },
  {
    "text": "code easier again we write code for",
    "start": "581040",
    "end": "583600"
  },
  {
    "text": "people first compiler second this will",
    "start": "583600",
    "end": "586320"
  },
  {
    "text": "make us last for the next 30 to 40 years",
    "start": "586320",
    "end": "589279"
  },
  {
    "text": "make the compiler do the work for us and",
    "start": "589279",
    "end": "592240"
  },
  {
    "text": "this lets us I think have more fun for",
    "start": "592240",
    "end": "595120"
  },
  {
    "text": "maintainers because again the compiler",
    "start": "595120",
    "end": "597440"
  },
  {
    "text": "did the work ahead of time we don't have",
    "start": "597440",
    "end": "599120"
  },
  {
    "text": "to worry about us trying to remember all",
    "start": "599120",
    "end": "600720"
  },
  {
    "text": "those intricate things did they grab the",
    "start": "600720",
    "end": "602160"
  },
  {
    "text": "lock did they check the proper reference",
    "start": "602160",
    "end": "604080"
  },
  {
    "text": "all that stuff it's just done for us and",
    "start": "604080",
    "end": "606640"
  },
  {
    "text": "that as a benefit makes Linux more",
    "start": "606640",
    "end": "608880"
  },
  {
    "text": "secure for you you can go solve your",
    "start": "608880",
    "end": "610959"
  },
  {
    "text": "problems you can do what you want to do",
    "start": "610959",
    "end": "612320"
  },
  {
    "text": "with Linux better and that's I think",
    "start": "612320",
    "end": "614399"
  },
  {
    "text": "very very important and most importantly",
    "start": "614399",
    "end": "617360"
  },
  {
    "text": "it lets us do world domination thank you",
    "start": "617360",
    "end": "620000"
  },
  {
    "text": "very",
    "start": "620000",
    "end": "622240"
  },
  {
    "text": "much thank you",
    "start": "623079",
    "end": "625390"
  },
  {
    "text": "[Applause]",
    "start": "625390",
    "end": "630239"
  }
]