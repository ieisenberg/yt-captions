[
  {
    "text": "all right let's go ahead and get this session started here I think it's uh just about right on time folks are",
    "start": "840",
    "end": "6600"
  },
  {
    "text": "coming in here but that's all good there's plenty of room more on the right side here too come on in all right so",
    "start": "6600",
    "end": "12000"
  },
  {
    "text": "this is the cross plane uh introduction and deep dive session uh my name is Jared Watts right there's co-speaker",
    "start": "12000",
    "end": "18320"
  },
  {
    "text": "Nick cop coming on right away here uh we are both uh creators maintainers",
    "start": "18320",
    "end": "23599"
  },
  {
    "text": "steering committee folks for crossplains so it is definitely a project that is near and dear to our heart all right so this is a combined",
    "start": "23599",
    "end": "30960"
  },
  {
    "text": "session as we do every year with both an intro and a deep dive part right so we're going to get into the introduction stuff that some of you all may have seen",
    "start": "30960",
    "end": "38079"
  },
  {
    "text": "uh may be a refresher for some of you but we got to start with what crossplane actually is so the best way to think",
    "start": "38079",
    "end": "43360"
  },
  {
    "text": "about crossplane is that it is a framework for building uh your own opinionated Cloud native control plane",
    "start": "43360",
    "end": "50320"
  },
  {
    "text": "uh you don't you shouldn't have to write any code to do that we'll talk a little bit later on in this session about ways",
    "start": "50320",
    "end": "55359"
  },
  {
    "text": "that you can now actually write code but you should be able to do it uh you know create your own opinionated control",
    "start": "55359",
    "end": "61199"
  },
  {
    "text": "plane in a declarative fashion so the cloud providers they've been running control planes for years right they manage their infrastructure with control",
    "start": "61199",
    "end": "67600"
  },
  {
    "text": "planes and so crossplane gives you a way to be able to to essentially build your own uh in your own opinioned way to run",
    "start": "67600",
    "end": "74240"
  },
  {
    "text": "your infrastructure uh it's important to think about crossplane as uh you know a project in the middle there with a top",
    "start": "74240",
    "end": "80960"
  },
  {
    "text": "layer and a bottom layer so on the bottom you've got an extensibility story for providers that can teach crossplane",
    "start": "80960",
    "end": "87200"
  },
  {
    "text": "pretty much to manage any infrastructure in any environment um as long as it has an API and then on",
    "start": "87200",
    "end": "92320"
  },
  {
    "text": "the top layer you can uh essentially compose resources together and then offer them as a new platform API and is",
    "start": "92320",
    "end": "99040"
  },
  {
    "text": "as an abstraction to your developers U so it's extensible on both the front end and the back end might not make sense",
    "start": "99040",
    "end": "104520"
  },
  {
    "text": "yet but we will see it as it keeps going on here uh just a little bit of background history of the project we are coming up on 5 years in the crossplane",
    "start": "104520",
    "end": "111560"
  },
  {
    "text": "project we took it public um in December of 2018 so next month it'll be 5 years",
    "start": "111560",
    "end": "117360"
  },
  {
    "text": "uh pretty excited about that we donated it to the CN ncf in 2020 then we've been continuing to mature along there we're",
    "start": "117360",
    "end": "123479"
  },
  {
    "text": "in the incubating stage now and we're hoping next year to do the to move to a fully graduated stage um and we'll need",
    "start": "123479",
    "end": "129239"
  },
  {
    "text": "your help for that so that's uh we'll talk about that in a bit too and then we are just now coming off the the heels of",
    "start": "129239",
    "end": "135640"
  },
  {
    "text": "our latest release the crossplane 1.14 release came out just last week so it is",
    "start": "135640",
    "end": "141200"
  },
  {
    "text": "Super Fresh uh and we'll be talking about some of the key features that were that were in that release which is our biggest release we've ever",
    "start": "141200",
    "end": "148160"
  },
  {
    "text": "done um you know numbers stats for the project the key thing here is that it's continuing to grow but the one that's uh",
    "start": "148160",
    "end": "155000"
  },
  {
    "text": "I think most interesting recently is that just last week or maybe with the last week uh so a lot going on in crossplane is we cross 10,000 members of",
    "start": "155000",
    "end": "162080"
  },
  {
    "text": "the slack work space so we're Super Active there super busy uh it's a good place to get in touch with other people in the",
    "start": "162080",
    "end": "167920"
  },
  {
    "text": "community all right now let's talk about what crossplane does and start seeing some tangible examples of it so",
    "start": "167920",
    "end": "174400"
  },
  {
    "text": "crossplane and you know at its foundational layer there is a way to manage resources that are in the cloud",
    "start": "174400",
    "end": "181239"
  },
  {
    "text": "on premises Etc so in crossplane you can represent entities or objects in the",
    "start": "181239",
    "end": "187200"
  },
  {
    "text": "real world as resources within the control plane so let's take for example AWS there's over 900 different types of",
    "start": "187200",
    "end": "194120"
  },
  {
    "text": "resources there in crossplane there will be you know over 900 different resources that represent every service and",
    "start": "194120",
    "end": "200680"
  },
  {
    "text": "everything that you can do within AWS same for gcp Azure Etc um so you know",
    "start": "200680",
    "end": "206159"
  },
  {
    "text": "all the different things in AWS and other Cloud providers like networking clusters caches databases all that sort",
    "start": "206159",
    "end": "212080"
  },
  {
    "text": "of stuff it is represented in crossplane as an object that you can create and manipulate Etc and crossplane goes out",
    "start": "212080",
    "end": "218480"
  },
  {
    "text": "into the real world and makes it happen for you so what does a manage resource look like let's take for example the an",
    "start": "218480",
    "end": "225360"
  },
  {
    "text": "Amazon S3 bucket so on the left side of the screen here we see a way to declaratively configure an Amazon bucket",
    "start": "225360",
    "end": "233439"
  },
  {
    "text": "uh so you see there it's all yl there you can specify the configuration for that bucket and then in the real world",
    "start": "233439",
    "end": "239159"
  },
  {
    "text": "out in AWS there will be you know crossplane will make it so so that there is a S3 bucket out there in the real",
    "start": "239159",
    "end": "244599"
  },
  {
    "text": "world as well uh just like any good kubernetes object all the crossplane resources also",
    "start": "244599",
    "end": "251000"
  },
  {
    "text": "follow a consistent resource model so you'll see you know in addition in addition to spec fields for you know",
    "start": "251000",
    "end": "256880"
  },
  {
    "text": "declaring what you want in your bucket it'll also have status fields that show you know shows you the latest um you",
    "start": "256880",
    "end": "262600"
  },
  {
    "text": "know the latest fields and values from the rural world and then also events that tell a story of what's happening with that object as it's going through",
    "start": "262600",
    "end": "268800"
  },
  {
    "text": "its life cycle so the way this actually works is",
    "start": "268800",
    "end": "274160"
  },
  {
    "text": "probably like you would expect you know there's a whole bunch of custom resource definitions crds that represent all",
    "start": "274160",
    "end": "280120"
  },
  {
    "text": "those objects and you know services and everything out in the cloud and on premises and all that stuff so if we",
    "start": "280120",
    "end": "285199"
  },
  {
    "text": "work our way from the left side of the diagram over to the right we'll see that we start with a buckets Uh custom",
    "start": "285199",
    "end": "291000"
  },
  {
    "text": "resource and then you know you as a user can use Cube CTO get Ops whatever you want to apply that to your kubernetes",
    "start": "291000",
    "end": "297639"
  },
  {
    "text": "cluster the API server accept accepts that uh and then there's a set of controllers in crossplane now for",
    "start": "297639",
    "end": "303720"
  },
  {
    "text": "instance here an S3 controller that's sitting there in a Reconciliation loop it's waiting for events from the",
    "start": "303720",
    "end": "309039"
  },
  {
    "text": "kubernetes API server the API API server says Hey an S3 bucket has been requested",
    "start": "309039",
    "end": "315000"
  },
  {
    "text": "and then S3 controller goes and tries to reconcile that with the real world by talking to AWS over its API so you ask",
    "start": "315000",
    "end": "322639"
  },
  {
    "text": "for a bucket out there on Amazon it'll happen U let's not get too bogged down",
    "start": "322639",
    "end": "328720"
  },
  {
    "text": "in the details on this this one here but this is basically the tech stack of crossplane so at the top there's a whole you know hundreds of custom controllers",
    "start": "328720",
    "end": "335199"
  },
  {
    "text": "that each deal with reconciling one type of resource and then there's a common crossplane runtime layer that provides",
    "start": "335199",
    "end": "341319"
  },
  {
    "text": "you know useful functionality that kind of works for uh managing Cloud infrastructure and resources uh like",
    "start": "341319",
    "end": "347720"
  },
  {
    "text": "crossplane is is um is intended to do and then underneath that there's uh all",
    "start": "347720",
    "end": "352840"
  },
  {
    "text": "sorts of kubernetes common functionality so we make use of the controller runtime to build our controllers and",
    "start": "352840",
    "end": "358280"
  },
  {
    "text": "Reconciliation loops within crossplane and then all the kuties API Machinery the resource model the runtime all that",
    "start": "358280",
    "end": "363520"
  },
  {
    "text": "stuff is very heavily used as well all right so we've been talking",
    "start": "363520",
    "end": "368599"
  },
  {
    "text": "about these granular fine grain services and resources um but just those by",
    "start": "368599",
    "end": "374840"
  },
  {
    "text": "itself of being able to create a bucket or create a database or whatever by that s does not really make a cloud native",
    "start": "374840",
    "end": "380680"
  },
  {
    "text": "control plane or a platform so let's see how crossplane then lets you take these fine grained resources and make a true",
    "start": "380680",
    "end": "386720"
  },
  {
    "text": "platform out of them all right so this is some of the the Special Sauce in crossplay this is",
    "start": "386720",
    "end": "392599"
  },
  {
    "text": "this is what kind of differentiates it from other infrastructure focused projects I think and so what crossb lets",
    "start": "392599",
    "end": "398560"
  },
  {
    "text": "you do here is that it lets you assemble together uh a bunch of these granular fine grain resources even from multiple",
    "start": "398560",
    "end": "405280"
  },
  {
    "text": "clouds it doesn't matter where they're coming from but you can assemble them together and then expose those as a",
    "start": "405280",
    "end": "410720"
  },
  {
    "text": "higher level abstraction a simplified abstraction to your developers your app teams so to make that tangible you can",
    "start": "410720",
    "end": "418280"
  },
  {
    "text": "say take together like a a gke cluster node poool Network subnet you know all that sort of stuff that it takes to",
    "start": "418280",
    "end": "424720"
  },
  {
    "text": "deploy a full working kubernetes production cluster in in gcp and then you can compose them all together into a",
    "start": "424720",
    "end": "431479"
  },
  {
    "text": "single abstraction a single simplified resource that you then offer as like a cluster resource to your developers so",
    "start": "431479",
    "end": "438400"
  },
  {
    "text": "your developers will see a cluster but under the covers it's all that you know more complicated complex Machinery so",
    "start": "438400",
    "end": "444639"
  },
  {
    "text": "the point of that is to you know not expose that environmental complexity to your developers you make a simplified",
    "start": "444639",
    "end": "450199"
  },
  {
    "text": "abstraction you give that to them underneath the covers you have that complexity but then you can also specify",
    "start": "450199",
    "end": "455520"
  },
  {
    "text": "all your organizational policy and configuration essentially golden paths you can codify your golden paths into",
    "start": "455520",
    "end": "462479"
  },
  {
    "text": "something simple underneath sorry into a simplified abstraction up top and then as we talked about before you normally",
    "start": "462479",
    "end": "468280"
  },
  {
    "text": "don't have to write any code to do this at all you can do it in a declarative fashion all right so finally let's look",
    "start": "468280",
    "end": "474840"
  },
  {
    "text": "at a picture of this because we've been looking at a lot of text and I think a picture is going to help a lot here so this is the resource model in crossplane",
    "start": "474840",
    "end": "480840"
  },
  {
    "text": "and let's work our way left to right so we've got claims on the left the developer is there she's eating her",
    "start": "480840",
    "end": "485960"
  },
  {
    "text": "popsicle and she wants a simplified uh you experience to be able to just use a simplified abstraction to get the",
    "start": "485960",
    "end": "492879"
  },
  {
    "text": "infrastructure that she needs so on the left side of the line here that's what the developer is uh is interacting with",
    "start": "492879",
    "end": "499000"
  },
  {
    "text": "and on the right side of the line here this is all the platform engineer complexity uh that they codify and put",
    "start": "499000",
    "end": "505280"
  },
  {
    "text": "together into a simplified abstraction so we've got compositions you know that's where you're composing together",
    "start": "505280",
    "end": "510720"
  },
  {
    "text": "all of these managed resources you can have multiple ones of those and one of them will be selected at runtime and",
    "start": "510720",
    "end": "516159"
  },
  {
    "text": "then this composite resource definition that's like that's what defines the shape of the abstraction and what",
    "start": "516159",
    "end": "523159"
  },
  {
    "text": "configuration uh knobs and you know uh inputs and values that your developer is",
    "start": "523159",
    "end": "528600"
  },
  {
    "text": "allowed to touch or allowed to specify that's the shape of the API and the abstraction that you're giving to them",
    "start": "528600",
    "end": "533839"
  },
  {
    "text": "so let's make that tangible where you want to be able to have your developers",
    "start": "533839",
    "end": "538880"
  },
  {
    "text": "self service get a database on demand when they want one right so the abstraction that you're going to give to",
    "start": "538880",
    "end": "544720"
  },
  {
    "text": "them is a postgress abstraction and so your developer can come and they can say Okay I want a small postgress instance",
    "start": "544720",
    "end": "551079"
  },
  {
    "text": "that's what I want now underneath the covers uh you as a platform engineer you've defined what that actually means",
    "start": "551079",
    "end": "557360"
  },
  {
    "text": "by means of a of a composition so when the developer asks for postest underneath the covers here in this",
    "start": "557360",
    "end": "563760"
  },
  {
    "text": "example at runtime they're going to get an AWS composition that could be gcp it could be azure digital lotion whatever",
    "start": "563760",
    "end": "570760"
  },
  {
    "text": "uh fast slow cheap expensive gold silver it doesn't matter uh one of those compositions gets selected at runtime",
    "start": "570760",
    "end": "577399"
  },
  {
    "text": "and then for AWS it's going to be the RDS database the DB parameter Group Security groups and all that all that",
    "start": "577399",
    "end": "582760"
  },
  {
    "text": "sort of stuff all right so what do these composite resources look like this is",
    "start": "582760",
    "end": "589160"
  },
  {
    "text": "kind of the left side of the slide here where you know to your developer you've got to define a contract of in my",
    "start": "589160",
    "end": "594519"
  },
  {
    "text": "platform I'm going to offer to you a simplified abstraction and you know something for for no SQL or postgress or",
    "start": "594519",
    "end": "600920"
  },
  {
    "text": "whatever it's going to be uh but you as the platform engineer gets to Define that through um you know the shape of",
    "start": "600920",
    "end": "606240"
  },
  {
    "text": "your API all the different uh fields and values that they're allowed to set you do that through a composite resource",
    "start": "606240",
    "end": "611880"
  },
  {
    "text": "definition with uh you know standard open API V3 schema that says this is the fields they can set these are the ones",
    "start": "611880",
    "end": "617320"
  },
  {
    "text": "that are required you know all that sort of stuff now then underneath that uh there",
    "start": "617320",
    "end": "622959"
  },
  {
    "text": "will be a number of runtime or compositions that can be selected at runtime and those are what specifies",
    "start": "622959",
    "end": "628480"
  },
  {
    "text": "what resource ources are going to get composed together uh so that the you know the developer will end up getting",
    "start": "628480",
    "end": "634440"
  },
  {
    "text": "the real infrastructure that they need and then Nick is going to talk a",
    "start": "634440",
    "end": "640519"
  },
  {
    "text": "lot more about an update to this which is pretty important in the latest release but uh one way that you can",
    "start": "640519",
    "end": "646000"
  },
  {
    "text": "specify right now of the developer has these specific configuration values that they've said for instance a location",
    "start": "646000",
    "end": "652440"
  },
  {
    "text": "field of where they want this resource to be and then you need some sort of way to take the simplified um abst",
    "start": "652440",
    "end": "659440"
  },
  {
    "text": "configuration on the abstraction to your developers you need some way to take that and then apply it uh to the smaller",
    "start": "659440",
    "end": "665079"
  },
  {
    "text": "the lower um fine grain resources so we do that through patches and transforms here where you can say okay when the",
    "start": "665079",
    "end": "670720"
  },
  {
    "text": "developer specifies location I want you to go ahead and apply that down to the manage resource on the region field and",
    "start": "670720",
    "end": "675959"
  },
  {
    "text": "then when they say EU go ahead and map that transform that into this particular EU region and when they say us transform",
    "start": "675959",
    "end": "682680"
  },
  {
    "text": "that into this particular us region so this gives you a sense of how you can compose resources together and then",
    "start": "682680",
    "end": "689440"
  },
  {
    "text": "influence let the developer influence through limited configuration how the resources come out the other",
    "start": "689440",
    "end": "696160"
  },
  {
    "text": "side so there's a lot of different ways to extend crossplane right it's a framework so there's multiple different",
    "start": "696160",
    "end": "701440"
  },
  {
    "text": "extensions points for it here and so we're going to talk about a couple of them real quick um so providers we kind",
    "start": "701440",
    "end": "706560"
  },
  {
    "text": "of talked about that's what teaches crossplane how to deal with uh new environments new infrastructure so",
    "start": "706560",
    "end": "711959"
  },
  {
    "text": "there's a one for Amazon right there's one for Alibaba and Etc other types of environments um things you might not",
    "start": "711959",
    "end": "718639"
  },
  {
    "text": "expect either like there's a gitlab get GitHub one there's one for Argo there's all sorts of things you control by",
    "start": "718639",
    "end": "723880"
  },
  {
    "text": "creating a provider for it and letting crossplane use that to learn new environments configurations are how you",
    "start": "723880",
    "end": "730360"
  },
  {
    "text": "comp like package up all of your compositions and redistribute them so you can you know apply them to different",
    "start": "730360",
    "end": "736680"
  },
  {
    "text": "clusters within your environment and get them out to the the environments that they need to run in and so Nick is going",
    "start": "736680",
    "end": "742079"
  },
  {
    "text": "to focus almost entirely I think on functions um so just a quick hint at that is that you know you can do all",
    "start": "742079",
    "end": "748480"
  },
  {
    "text": "this stuff with without writing code um but what if you want to take it a little bit further and write some custom logic",
    "start": "748480",
    "end": "754120"
  },
  {
    "text": "and then so we have a new extension point in crossplane that is functions that allows you to write code when you need",
    "start": "754120",
    "end": "760880"
  },
  {
    "text": "it uh there's a whole bunch of uh providers as we mentioned the ecosystem I think this is actually out of date because there's new providers that come",
    "start": "760920",
    "end": "766920"
  },
  {
    "text": "up from the community all the time and so there's this is a start and there's a lot more also and we're always happy to",
    "start": "766920",
    "end": "772160"
  },
  {
    "text": "have more providers in the ecosystem so if you're interested in making some just let us know we'll be happy to work with",
    "start": "772160",
    "end": "777320"
  },
  {
    "text": "you on it and so with this uh ecosystem of providers where do you find them uh",
    "start": "777320",
    "end": "782560"
  },
  {
    "text": "there is a single point where all the providers are being um being pushed to they're being aggregated there and so",
    "start": "782560",
    "end": "788880"
  },
  {
    "text": "it's a a place to go discover what's out there get documentation for it examples Etc and kind of learn how to do",
    "start": "788880",
    "end": "795000"
  },
  {
    "text": "everything you can with crossplane so that's it uh the marketplace for the for crossplane at marketplace. upbound doio",
    "start": "795000",
    "end": "800920"
  },
  {
    "text": "and that's a you know kind of a rallying point for everything that's going on in the crossplane ecosystem all right so that was the",
    "start": "800920",
    "end": "807399"
  },
  {
    "text": "intro session so we've kind of talked about everything that crossbank can do from a very high level and so now we're moving down into the deeper dive session",
    "start": "807399",
    "end": "814040"
  },
  {
    "text": "here and we're going to talk about some of the new stuff in 1.14 uh which is you know as I mentioned it was literally our",
    "start": "814040",
    "end": "820079"
  },
  {
    "text": "biggest release we've ever done so a lot of cool stuff to talk about there all right so order deletion that's something",
    "start": "820079",
    "end": "825680"
  },
  {
    "text": "that people have asked for a lot once you get into like production usage and you know Enterprise usage heavy usage across plane uh you see that you need",
    "start": "825680",
    "end": "832959"
  },
  {
    "text": "something to deal with being able to delete things in a consistent ordered fashion um so let's talk about why that",
    "start": "832959",
    "end": "839040"
  },
  {
    "text": "happens so kubernetes is eventually consistent um and that is super super useful and super cool when you're",
    "start": "839040",
    "end": "845000"
  },
  {
    "text": "creating resources because you can throw 10 100 whatever you can throw all these resources at crossplane it will you know",
    "start": "845000",
    "end": "851720"
  },
  {
    "text": "try to reconcile all of them there could be dependencies between them you don't really have to think about that very much because with the beauty of active",
    "start": "851720",
    "end": "858279"
  },
  {
    "text": "reconciliation and eventual consistency um if it doesn't work the first time it'll try again so you will eventually",
    "start": "858279",
    "end": "865639"
  },
  {
    "text": "get all the resources created the ones you know their dependencies everything's there it's all good you know it's not complex you got loose coupling",
    "start": "865639",
    "end": "871759"
  },
  {
    "text": "everything works well that cannot be said about deletions unfortunately when you need to delete an object that may be",
    "start": "871759",
    "end": "879320"
  },
  {
    "text": "dependent upon by another object um you've got to be cognizant of that you have to be aware of that if you delete",
    "start": "879320",
    "end": "885040"
  },
  {
    "text": "that one object the other one may not be able to clean itself up so you've got to have some means of making sure that",
    "start": "885040",
    "end": "890680"
  },
  {
    "text": "everything gets deleted in an orderly uh you know sequence or fashion there so",
    "start": "890680",
    "end": "895880"
  },
  {
    "text": "one instance or one example of this is a hel release or Helm chart uh and a eks",
    "start": "895880",
    "end": "901120"
  },
  {
    "text": "cluster if you delete the eks cluster well you can't do much with the helm chart anymore it's you know kind of it's",
    "start": "901120",
    "end": "907800"
  },
  {
    "text": "you don't really know what state it's in you can assume it got cleaned up but you don't really know so there's lots of examples of that where something you",
    "start": "907800",
    "end": "914120"
  },
  {
    "text": "know an object being dependent upon by something else um means you need to be aware of that so what does that mean how",
    "start": "914120",
    "end": "920199"
  },
  {
    "text": "has crossb attempted to solve this problem so a new feature in 1.14 is for",
    "start": "920199",
    "end": "925279"
  },
  {
    "text": "order deletion and we're calling it The usage API so you can essentially capture or model uh relationships like",
    "start": "925279",
    "end": "932839"
  },
  {
    "text": "dependency relationships between resources and crossplane so for instance one you know resource a can be dependent",
    "start": "932839",
    "end": "938560"
  },
  {
    "text": "upon uh by resource B and you can model that and express that fact and then uh",
    "start": "938560",
    "end": "944360"
  },
  {
    "text": "we have implemented an admission web hook in Cross plan so that if you're trying to go and uh delete that resource",
    "start": "944360",
    "end": "951079"
  },
  {
    "text": "that's dependent upon by somebody else the admission web hook will detect that it'll kick in it'll report that back to the API server and it'll be rejected",
    "start": "951079",
    "end": "957839"
  },
  {
    "text": "it'll say no cannot delete this because it's in use by somebody else right now so it really enforces the uh you know",
    "start": "957839",
    "end": "964079"
  },
  {
    "text": "the ability to clean everything up cleanly and this is what it looks like so this is a bit more of a uh fully",
    "start": "964079",
    "end": "971759"
  },
  {
    "text": "specified approach to this because a lot of times people are going to practically be using this within a composition so",
    "start": "971759",
    "end": "976800"
  },
  {
    "text": "say you've got a composition for a whole bunch of networking stuff and you've got vpcs and subnets and stuff uh you can",
    "start": "976800",
    "end": "982079"
  },
  {
    "text": "express these usage relationships in kind of a shortcut but I wanted to show you the full example of if you're starting from scratch you can say okay",
    "start": "982079",
    "end": "989040"
  },
  {
    "text": "here is a usage so we're declaring you know an instance of the usage type and under the spec here we've got a usage of",
    "start": "989040",
    "end": "996720"
  },
  {
    "text": "a cluster and it's by a Helm release so we're kind of modeling that relationship",
    "start": "996720",
    "end": "1002000"
  },
  {
    "text": "of the helm release is depending on the cluster and then that gives the admission Web book everything it needs",
    "start": "1002000",
    "end": "1007199"
  },
  {
    "text": "to know to make sure that if you're trying to delete that cluster and the hel release is still around it'll stop you from doing",
    "start": "1007199",
    "end": "1013639"
  },
  {
    "text": "that and one cool side effect you get here is that you can also do complete like Del Le protection for resources",
    "start": "1013639",
    "end": "1020279"
  },
  {
    "text": "also so you can admit oh sorry omit the buy field and you can just say hey there's a usage of an RDS database this",
    "start": "1020279",
    "end": "1026959"
  },
  {
    "text": "is my production database um it's I'm not going to tell you who it's in use by that doesn't matter because this is it's",
    "start": "1026959",
    "end": "1033120"
  },
  {
    "text": "in use do not delete it and that admission web hook will prevent any sort of accidental deletion or anything of",
    "start": "1033120",
    "end": "1038360"
  },
  {
    "text": "this resource because it is obviously very important and you're protecting it that way all right I think that's",
    "start": "1038360",
    "end": "1043839"
  },
  {
    "text": "everything for me and I'm going to go ahead and turn it over to Nick for composition functions thanks",
    "start": "1043839",
    "end": "1049320"
  },
  {
    "text": "uh I did just realize that if we have time we're supposed to do a demo of composition functions at the end of this and I'm holding a microphone so there",
    "start": "1049320",
    "end": "1056160"
  },
  {
    "text": "might be it might be challenging but we'll see what we can do all right so uh Jared mentioned",
    "start": "1056160",
    "end": "1063480"
  },
  {
    "text": "before one of the sort of uh really nice features of crossplaying is what we call composition which is the ability to for",
    "start": "1063480",
    "end": "1070080"
  },
  {
    "text": "you as usually a platform team member to think how do I want to frame concepts for my users for the developers that I'm",
    "start": "1070080",
    "end": "1077159"
  },
  {
    "text": "supporting Maybe I have my own opinion of what a bucket should look like what Fields it should expose what",
    "start": "1077159",
    "end": "1082200"
  },
  {
    "text": "configuration knobs it should have so I'll design an API that represents a bucket then I'll teach crossplane what",
    "start": "1082200",
    "end": "1088200"
  },
  {
    "text": "should what should crossplane do when someone calls that API someone says Hey I want a bucket like what what in reality should it do should It Go create",
    "start": "1088200",
    "end": "1094159"
  },
  {
    "text": "an S3 bucket or Google Cloud Storage bucket etc etc um and the way that people have uh",
    "start": "1094159",
    "end": "1100919"
  },
  {
    "text": "the way that we've allowed people to configure this in the past has been using an API type called composition",
    "start": "1100919",
    "end": "1106200"
  },
  {
    "text": "composition works pretty well for simple and static cases it's kind of just a list of of yaml manifests effectively uh",
    "start": "1106200",
    "end": "1114000"
  },
  {
    "text": "with as Jared ched before a bit of copying around to take data from the input API call and sort of patch it over to the output API call but it is missing",
    "start": "1114000",
    "end": "1121080"
  },
  {
    "text": "a lot of things especially as you start to get to more complex uh uh tasks like you know let's say deploying an Amazon",
    "start": "1121080",
    "end": "1127840"
  },
  {
    "text": "GS cluster which is actually made up of like tens of resources that that have a lot of relationships between them Etc",
    "start": "1127840",
    "end": "1133559"
  },
  {
    "text": "and so what composition doesn't have today it doesn't have conditionals doesn't have iteration doesn't have the",
    "start": "1133559",
    "end": "1138720"
  },
  {
    "text": "ability to speak to external systems it's a very simple templating system and",
    "start": "1138720",
    "end": "1144000"
  },
  {
    "text": "that was somewhat intentional we didn't really want to grow a new DSL for configuring crossplane when we first uh",
    "start": "1144000",
    "end": "1150039"
  },
  {
    "text": "first came up with composition uh and at the same time we know from you know a lot of us have backgrounds in platform engineering",
    "start": "1150039",
    "end": "1155520"
  },
  {
    "text": "different platform Engineers have different preferences some some people are going to want to use home templates some people are going to want to use Q",
    "start": "1155520",
    "end": "1160840"
  },
  {
    "text": "langang some people might want to write it in Python like it's very hard to you know we didn't think we were going to invent a better language so we thought",
    "start": "1160840",
    "end": "1168320"
  },
  {
    "text": "why don't we try and meet people where they're at and let people use the tools that they already know and like to configure composition if you saw this",
    "start": "1168320",
    "end": "1174520"
  },
  {
    "text": "session last year we were just about to ship this in Alpha so uh welcome back if you were here last year and uh now as",
    "start": "1174520",
    "end": "1180320"
  },
  {
    "text": "Jared said it hit beta last uh last week",
    "start": "1180320",
    "end": "1186120"
  },
  {
    "text": "so the general idea here is with composition functions instead of",
    "start": "1187799",
    "end": "1195320"
  },
  {
    "text": "specifying a template a list of resources to go create in the configuration object you tell",
    "start": "1195320",
    "end": "1200919"
  },
  {
    "text": "crossplay go call these functions please and you supply those functions you either write them yourself which is hopefully pretty straightforward or you",
    "start": "1200919",
    "end": "1207520"
  },
  {
    "text": "can find them from you know the existing Marketplace of functions and then that function is kind of a",
    "start": "1207520",
    "end": "1214280"
  },
  {
    "text": "pipeline I think so the input to that pipeline is the observed state of the",
    "start": "1215159",
    "end": "1220240"
  },
  {
    "text": "world so crossplay takes on basically saying okay a developer out there said I would",
    "start": "1220240",
    "end": "1226919"
  },
  {
    "text": "like a bucket and I know that this is a new bucket so there's no existing resources that it's made up of so what",
    "start": "1226919",
    "end": "1232520"
  },
  {
    "text": "I'm going to do is take the schema that the platform engine needed to find pass that to this pipeline of functions and say hey functions what should I do tell",
    "start": "1232520",
    "end": "1238840"
  },
  {
    "text": "me what the desired state is based on this observed state so it's kind of similar if you've written a kubernetes controller before it's doing a similar",
    "start": "1238840",
    "end": "1245159"
  },
  {
    "text": "thing but it takes away tons of the boiler plate and complexity and crossplane does pretty much all of the",
    "start": "1245159",
    "end": "1252480"
  },
  {
    "text": "hard part for you and you really do just have to say given this input produce these outputs",
    "start": "1252480",
    "end": "1260120"
  },
  {
    "text": "so you install a function in a similar way to installing a provider or uh or configuration crossplane has a package",
    "start": "1262840",
    "end": "1268520"
  },
  {
    "text": "manager that allows you to sort of declaratively just say hey make this function available in reality uh",
    "start": "1268520",
    "end": "1273880"
  },
  {
    "text": "functions feel like uh building a serverless function you literally just edit the kind of function. piy or",
    "start": "1273880",
    "end": "1279799"
  },
  {
    "text": "function. go whatever language you're working in add a little bit of logic and package it up and ship it but behind the scenes crossplane does turn that into a",
    "start": "1279799",
    "end": "1285880"
  },
  {
    "text": "long running deployment pod effective L uh and those speak grpc so crossplaying",
    "start": "1285880",
    "end": "1291640"
  },
  {
    "text": "whenever someone creates an XR uh which is what we call a composite resource when someone makes one of those API abstraction saying hey give me a bucket",
    "start": "1291640",
    "end": "1297559"
  },
  {
    "text": "or give me a cluster or whatever the platform team has defined crossplane is going to go and call these functions over GPC to say hey what should I",
    "start": "1297559",
    "end": "1306000"
  },
  {
    "text": "do so the long-term Vision keep in mind we just hit beta with this uh last week the long-term vision is that there will",
    "start": "1307760",
    "end": "1313159"
  },
  {
    "text": "be sdks for any language that uh people want to use to write these functions uh",
    "start": "1313159",
    "end": "1318679"
  },
  {
    "text": "right now we just have go we surveyed the community and the top three languages in order we're go Python and then typescript so we have the go",
    "start": "1318679",
    "end": "1324400"
  },
  {
    "text": "function uh SDK it works pretty well there's a template for creating functions in go uh this weekend I",
    "start": "1324400",
    "end": "1329799"
  },
  {
    "text": "started the python one so coming real soon and uh one of my co-workers tells me that they prototyped a typescript one",
    "start": "1329799",
    "end": "1336559"
  },
  {
    "text": "but he won't show it to me yet so we'll see how that goes um another thing that's really handy is",
    "start": "1336559",
    "end": "1342320"
  },
  {
    "text": "uh we've done a ton of uh improvements uh this release with the crossplane CLI up until 1.14 cross CLI kind of mostly",
    "start": "1342320",
    "end": "1349120"
  },
  {
    "text": "just built packages and push them which was uh which was useful but we thought that there was more we could do",
    "start": "1349120",
    "end": "1356200"
  },
  {
    "text": "uh as it applies to functions two of the really interesting commands that the the CLI now has is the ability to template a",
    "start": "1356200",
    "end": "1363000"
  },
  {
    "text": "function so you can run this crossplane beta X package in it my function and it'll set up your function for you and",
    "start": "1363000",
    "end": "1369080"
  },
  {
    "text": "get you ready to go just drop in some logic uh but then another thing that's I think people will find really really",
    "start": "1369080",
    "end": "1374159"
  },
  {
    "text": "compelling or we've seen people finding really really compelling is uh people coming from other INF structure tools especially sort of more C driven",
    "start": "1374159",
    "end": "1380360"
  },
  {
    "text": "infrastructure tools have basically said they want dry run functionality you know crossplane is a long running control play and you send it your configuration",
    "start": "1380360",
    "end": "1386760"
  },
  {
    "text": "and it keeps applying it but people wanted to say hey I I'd like to if a developer makes this APO call I want to",
    "start": "1386760",
    "end": "1392640"
  },
  {
    "text": "see what crossplane is going to do one of the really cool things about taking all of the logic the crossplane actually",
    "start": "1392640",
    "end": "1398159"
  },
  {
    "text": "uses to figure out what it should do to figure out what the desired state is for a given observed State and putting that",
    "start": "1398159",
    "end": "1403760"
  },
  {
    "text": "into a bunch of functions that are kind of just containers is that we can now have a c tool you give the CLI tool some",
    "start": "1403760",
    "end": "1409799"
  },
  {
    "text": "desired State pulls down all of those containers the exact same ones the exact same logic inversions that your production control plane will run and",
    "start": "1409799",
    "end": "1417799"
  },
  {
    "text": "sends the observe State through it and prints you out the designed state which kind of gives you like a dry run uh uh",
    "start": "1417799",
    "end": "1423039"
  },
  {
    "text": "experience there so we talk a lot about uh",
    "start": "1423039",
    "end": "1429120"
  },
  {
    "text": "functions being something you use to use general purpose programming languages to provide logic and this is a this is a",
    "start": "1429120",
    "end": "1434520"
  },
  {
    "text": "sort of a personal and subjective thing you know I would really like to use go or python or languages like that to provide my configuration I find that",
    "start": "1434520",
    "end": "1441000"
  },
  {
    "text": "eventually you get to uh complex enough configuration tasks that you kind of",
    "start": "1441000",
    "end": "1446600"
  },
  {
    "text": "just want to reach for a general purpose programming language that has existing tooling and test Frameworks and all that",
    "start": "1446600",
    "end": "1452440"
  },
  {
    "text": "kind of thing but you know a lot of people would prefer to use their language of choice their configuration language of choice Q go templates etc",
    "start": "1452440",
    "end": "1459799"
  },
  {
    "text": "etc so you don't have to write your own function one of the neat things about functions is that they are kind of",
    "start": "1459799",
    "end": "1465279"
  },
  {
    "text": "allowing people to add new way to configure crossplay and so we already have functions available that uh use go",
    "start": "1465279",
    "end": "1472440"
  },
  {
    "text": "templates to offer a very sort of Helm uh like experience I think that's on this slide uh where you can basically",
    "start": "1472440",
    "end": "1479720"
  },
  {
    "text": "either inline provide simple templates or you can basically provide crossplay a directory of templates and say use this",
    "start": "1479720",
    "end": "1485320"
  },
  {
    "text": "so if you're familiar with Helm this will feel very very similar uh someone from the community",
    "start": "1485320",
    "end": "1490399"
  },
  {
    "text": "actually two people from the community there are currently two different uh Q functions that have appeared uh slightly before crossplane was released so if you",
    "start": "1490399",
    "end": "1497159"
  },
  {
    "text": "prefer qes similar kind of pattern you can provide your configuration in that uh we actually have a function as well",
    "start": "1497159",
    "end": "1502919"
  },
  {
    "text": "that implements traditional crossplane built-in patch and transform style",
    "start": "1502919",
    "end": "1508720"
  },
  {
    "text": "composition as a function which is useful because you can then use that sort of tool that I showed you before to",
    "start": "1508720",
    "end": "1514399"
  },
  {
    "text": "uh render out your compositions and do a bit of a dry run even if you do like or find you know appropriate the",
    "start": "1514399",
    "end": "1521200"
  },
  {
    "text": "Contemporary style of composition oh no all right now it's time now it's time for the function",
    "start": "1521200",
    "end": "1527320"
  },
  {
    "text": "microphone holder I'll uh interpretively dance instead of talking all right let me quit slack just",
    "start": "1527320",
    "end": "1536200"
  },
  {
    "text": "in case there's secret Source in there all right so what we're going to do here is just make a function and go",
    "start": "1536200",
    "end": "1542679"
  },
  {
    "text": "really quick it's going to be mostly sort of copying and pasting but just to give you an idea what the experience is like",
    "start": "1542679",
    "end": "1549640"
  },
  {
    "text": "so I believe we want yeah on this command and I already",
    "start": "1549640",
    "end": "1557399"
  },
  {
    "text": "made a backup of this just in case because the Wi-Fi was kind of slow earlier but it looks like that worked so what's this done is just implemented a",
    "start": "1557399",
    "end": "1563880"
  },
  {
    "text": "template or grabbed a template which I've called function",
    "start": "1563880",
    "end": "1570600"
  },
  {
    "text": "demo and you can see this is what the template will scaffold out there's a bunch of stuff in there but uh the only",
    "start": "1571600",
    "end": "1576640"
  },
  {
    "text": "thing that's really important for the purposes of this exercise is FN Dogo function. go everything else you can",
    "start": "1576640",
    "end": "1582200"
  },
  {
    "text": "pretty much leave you could delete the test file add some logic to fn. go and then package it up and run it the reason",
    "start": "1582200",
    "end": "1588399"
  },
  {
    "text": "that everything else is there that there's a Docker file and a bunch of other stuff is that we do want these to grw with you if you do decide that you",
    "start": "1588399",
    "end": "1593919"
  },
  {
    "text": "have custom build and CI demands from your function you could I don't know",
    "start": "1593919",
    "end": "1599600"
  },
  {
    "text": "build it using something other than Docker or you know switch out the test framework that's being used you can do that if you want but we don't want you",
    "start": "1599600",
    "end": "1605360"
  },
  {
    "text": "to have to think about that so if I look at fn. go at the",
    "start": "1605360",
    "end": "1611480"
  },
  {
    "text": "moment this run function is really what's important this one does very",
    "start": "1611480",
    "end": "1617039"
  },
  {
    "text": "little at the the moment it takes a run function request which is the observe State the crossplane sends it and then",
    "start": "1617039",
    "end": "1622760"
  },
  {
    "text": "it's effectively just going to do a hello world it's going to say I was run with input blah blah blah blah blah",
    "start": "1622760",
    "end": "1630679"
  },
  {
    "text": "so let's oops I need to CD",
    "start": "1631159",
    "end": "1635720"
  },
  {
    "text": "example so this commands uh is that sort of dryon",
    "start": "1637240",
    "end": "1643200"
  },
  {
    "text": "functionality that I was talking about uh in this example there's very little in the input but you can see here this XR is the input resource that the user",
    "start": "1643200",
    "end": "1650880"
  },
  {
    "text": "would have created um and then crossplay is saying okay given this input I'm going to go and uh create this uh bucket",
    "start": "1650880",
    "end": "1657799"
  },
  {
    "text": "resource here Jed I'm concerned because that's the state we're supposed to get to",
    "start": "1657799",
    "end": "1663679"
  },
  {
    "text": "rather than where this demo was supposed to start",
    "start": "1663679",
    "end": "1668760"
  },
  {
    "text": "um let's see here",
    "start": "1668760",
    "end": "1675200"
  },
  {
    "text": "so",
    "start": "1676519",
    "end": "1679519"
  },
  {
    "text": "ah I know what's going on here I bet in this terminal over here I",
    "start": "1681559",
    "end": "1687200"
  },
  {
    "text": "am go running the version of this that I built",
    "start": "1687200",
    "end": "1691960"
  },
  {
    "text": "previously all right so by default uh the render command is actually going to",
    "start": "1697120",
    "end": "1702200"
  },
  {
    "text": "pull down the logic that you use in production and run that but if you are developing a function you can run the function loc Al and you can uh",
    "start": "1702200",
    "end": "1711760"
  },
  {
    "text": "tell using a annotation on the function you can",
    "start": "1712679",
    "end": "1720000"
  },
  {
    "text": "basically tell it to run in development mode and it's going to talk to the one that you're running locally to just help you develop a function so now if we want",
    "start": "1720000",
    "end": "1726640"
  },
  {
    "text": "render uh it'll tell me I'm in the wrong directory now if we R render there you go it's just going to print out this",
    "start": "1726640",
    "end": "1732720"
  },
  {
    "text": "hello world thing that says I was run with this input so let me go over here and I'll start stop that from",
    "start": "1732720",
    "end": "1738960"
  },
  {
    "text": "running and then I just totally wrote some new",
    "start": "1738960",
    "end": "1744200"
  },
  {
    "text": "function logic using Co this is the thing that you already",
    "start": "1744200",
    "end": "1750320"
  },
  {
    "text": "saw uh where this function now Imports a bucket type from our AWS provider and is",
    "start": "1750320",
    "end": "1756320"
  },
  {
    "text": "going to create a bucket uh in this case we are just it's just a fixed output but",
    "start": "1756320",
    "end": "1762000"
  },
  {
    "text": "you could imagine this where it says USC for the region you could copy that from the XR input just kind of give you an",
    "start": "1762000",
    "end": "1767399"
  },
  {
    "text": "idea of the input or how you would develop a function here so if we now run that",
    "start": "1767399",
    "end": "1774360"
  },
  {
    "text": "again and then do Al beta render it will fail again let's see what",
    "start": "1774360",
    "end": "1781200"
  },
  {
    "text": "am I doing here aha wrong",
    "start": "1781200",
    "end": "1788440"
  },
  {
    "text": "directory all right that looks good",
    "start": "1794039",
    "end": "1799320"
  },
  {
    "text": "there we go that's promising all right and then we are back",
    "start": "1803880",
    "end": "1809320"
  },
  {
    "text": "to having our bucket generated so as I say thanks Jared uh as",
    "start": "1809320",
    "end": "1814559"
  },
  {
    "text": "I say we uh uh have the SDK in tooling for go only released a week ago so it's",
    "start": "1814559",
    "end": "1819960"
  },
  {
    "text": "early but we've had a ton of people from the community writing these functions already and it seems to be working pretty well uh I started uh prototyping",
    "start": "1819960",
    "end": "1827080"
  },
  {
    "text": "the python one it's been about 7 years since I was a full-time python developer but I'm really liking the experience of writing these in Python and that's I",
    "start": "1827080",
    "end": "1833799"
  },
  {
    "text": "think something that's going to be really useful here if you have uh a platform team that aren't expert go developers which is often kind of",
    "start": "1833799",
    "end": "1839880"
  },
  {
    "text": "mandatory in the cloud native ecosystem uh they can now deploy crossplay and still have the power of like a general",
    "start": "1839880",
    "end": "1845840"
  },
  {
    "text": "purpose programming language but using a language that that they might be more familiar with that's uh that's the end of",
    "start": "1845840",
    "end": "1852039"
  },
  {
    "text": "everything right there's one more slide my apologies all right",
    "start": "1852039",
    "end": "1859240"
  },
  {
    "text": "a thank you sir all right so to wrap it up here uh you know want to talk about how like you know crossplane is a a",
    "start": "1859840",
    "end": "1867080"
  },
  {
    "text": "community project right it's part of the cncf and we are nothing without our community so there's a lot of different",
    "start": "1867080",
    "end": "1872120"
  },
  {
    "text": "ways to get involved uh so you can you know most of them you start at crossplane doio or crossplane uh",
    "start": "1872120",
    "end": "1877320"
  },
  {
    "text": "organization on GitHub you'll find most all of them there uh but lots of ways to connect with us and get involved and",
    "start": "1877320",
    "end": "1882360"
  },
  {
    "text": "then as I mentioned we are working towards getting uh you know fully graduated with the cncf and so in the",
    "start": "1882360",
    "end": "1888120"
  },
  {
    "text": "crossplane repo there's an adopters MD file if you are already using crossplane and have success story to share there uh",
    "start": "1888120",
    "end": "1894639"
  },
  {
    "text": "like a bunch of other people that have already added themselves to it we definitely welcome you to add yourself to it as well um so I think that there",
    "start": "1894639",
    "end": "1902159"
  },
  {
    "text": "we can go ahead and switch over to uh we have three minutes for questions uh if anybody has some yes that was a quick",
    "start": "1902159",
    "end": "1910519"
  },
  {
    "text": "hand so thank you so a couple years ago when I was doing um due dilig around",
    "start": "1910519",
    "end": "1917960"
  },
  {
    "text": "infrastructures code crossplane palumi terraform um you guys were still in A Primitive",
    "start": "1917960",
    "end": "1924639"
  },
  {
    "text": "stage at that point and the provider list was was kind of small but I even",
    "start": "1924639",
    "end": "1930559"
  },
  {
    "text": "then appreciated the the controller based invocation instead of API uh and it was just more Cloud native Centric",
    "start": "1930559",
    "end": "1937240"
  },
  {
    "text": "right um but many people made a decision to kind of go with a different option for",
    "start": "1937240",
    "end": "1944559"
  },
  {
    "text": "infrastructures code not to name the product how do we adjust tactically from that",
    "start": "1944559",
    "end": "1951679"
  },
  {
    "text": "perspective because that code base has grown as well but now someone like myself who definitely sees a lot of",
    "start": "1951679",
    "end": "1957799"
  },
  {
    "text": "value in crossplane and want to include that into the ecosystem because now I'm looking at infrastructures code with say",
    "start": "1957799",
    "end": "1964120"
  },
  {
    "text": "terraform Upstream maybe crossplay in the middle and then continue to March down for with with Argo so can you talk",
    "start": "1964120",
    "end": "1970919"
  },
  {
    "text": "a little bit about just like how people are addressing the strengths of of of crossplane and how to introduce that",
    "start": "1970919",
    "end": "1977360"
  },
  {
    "text": "into the ecosystem yeah yeah yeah really good question so I think I'm going to go behind this so I don't get yelled at uh",
    "start": "1977360",
    "end": "1983840"
  },
  {
    "text": "so one of the things I think uh you could say there is that um say say you for for instance you are using other IAC",
    "start": "1983840",
    "end": "1989000"
  },
  {
    "text": "tools uh crossplane has with its concept of providers uh is super super extensible so for instance for terraform",
    "start": "1989000",
    "end": "1995679"
  },
  {
    "text": "there is a provider for terraform so you can take your existing HCL uh and and",
    "start": "1995679",
    "end": "2001000"
  },
  {
    "text": "just show that right to crossplane and say crossplane start dealing with this so that's one sort of you know you I",
    "start": "2001000",
    "end": "2006440"
  },
  {
    "text": "don't think you really want to scale like you know a huge huge amount of HC that way that's one way you can start taking your existing Investments and",
    "start": "2006440",
    "end": "2012799"
  },
  {
    "text": "porting them over to crossplane and having it you know do useful stuff for you right away but I think another concept that we've seen a few people be",
    "start": "2012799",
    "end": "2019039"
  },
  {
    "text": "pretty successful with is that with the concept of crossbank compositions and abstractions you know if you're going to",
    "start": "2019039",
    "end": "2025120"
  },
  {
    "text": "expose the idea of say a database to your users for for that infrastructure",
    "start": "2025120",
    "end": "2030320"
  },
  {
    "text": "for them you can you can give them that um that that interface to work with and",
    "start": "2030320",
    "end": "2035559"
  },
  {
    "text": "then so for under the the cover it could still be doing terraform stuff then over time without your developer being",
    "start": "2035559",
    "end": "2042039"
  },
  {
    "text": "affected you can change that to a native cross plan implementation so you're keeping a consistent interface on top",
    "start": "2042039",
    "end": "2047960"
  },
  {
    "text": "but changing it under the cover so that's another way to do it and then the third thing is that we want to do more investments in import uh like tools that",
    "start": "2047960",
    "end": "2054679"
  },
  {
    "text": "import existing resources into crossplane there's a couple things for that we can we can make it smoother so you can take existing stuff and get them",
    "start": "2054679",
    "end": "2060560"
  },
  {
    "text": "into crossplane you know more automated fashion too so those those three ways to go about it I think the clock say",
    "start": "2060560",
    "end": "2067760"
  },
  {
    "text": "oh yeah you're at the mic you're in line go ahead this thing on yeah um I used about a year ago I started using",
    "start": "2067760",
    "end": "2073240"
  },
  {
    "text": "crossplane um or I at least baited it um it was fantastic however um this was",
    "start": "2073240",
    "end": "2079200"
  },
  {
    "text": "great in a green field environment where I'm starting from scratch for creating resources and everything you just demoed",
    "start": "2079200",
    "end": "2084398"
  },
  {
    "text": "um the issue that we seem to have was and maybe you just addressed some of this um we have an existing environment",
    "start": "2084399",
    "end": "2090118"
  },
  {
    "text": "with thousands of AD resources and so on and we started running into conflicts we found that Imports would happen yes of",
    "start": "2090119",
    "end": "2097040"
  },
  {
    "text": "existing resources let's say import a database however if the if there was drift between what my crossplane was and",
    "start": "2097040",
    "end": "2104440"
  },
  {
    "text": "what actually existed in AWS then crossplane would start changing things would start overriding settings and so",
    "start": "2104440",
    "end": "2110040"
  },
  {
    "text": "on and so forth um are there plans to or have there been changes to uh support",
    "start": "2110040",
    "end": "2115560"
  },
  {
    "text": "that that sort of drift a little bit more gracefully um I think yes",
    "start": "2115560",
    "end": "2123040"
  },
  {
    "text": "so if I just to make sure I understand obviously crossplay is supposed to correct drift that is something that it",
    "start": "2123040",
    "end": "2129400"
  },
  {
    "text": "does but if you are importing a resource and you don't import it exactly as it",
    "start": "2129400",
    "end": "2134720"
  },
  {
    "text": "currently was in the cloud then it will correct the drift that it perceives in sort of you don't want it to yeah so I",
    "start": "2134720",
    "end": "2142599"
  },
  {
    "text": "think that's kind of what Jared just touched on and this is what we think of as like the import uh you could imagine",
    "start": "2142599",
    "end": "2148119"
  },
  {
    "text": "no concrete plans at the moment but you could imagine a crossplane CLI import",
    "start": "2148119",
    "end": "2153400"
  },
  {
    "text": "this Arn in AWS or whatever and it sort of generates you version of that I definitely think that's the path that we",
    "start": "2153400",
    "end": "2159280"
  },
  {
    "text": "will go down uh I forget Jared is that on our road map at the moment I'm not sure yeah I think it's a couple re okay",
    "start": "2159280",
    "end": "2165240"
  },
  {
    "text": "yeah it's it's a it's a little while out but it's definitely on the road map thank you all right up I guess we'll go hang",
    "start": "2165240",
    "end": "2172880"
  },
  {
    "text": "out outside if anyone wants to chat with us afterwards thank you so much everybody appreciate",
    "start": "2172880",
    "end": "2178800"
  },
  {
    "text": "it",
    "start": "2180480",
    "end": "2183480"
  }
]