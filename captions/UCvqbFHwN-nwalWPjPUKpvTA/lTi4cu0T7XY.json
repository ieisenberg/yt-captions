[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "hello and uh Welcome to our talk on",
    "start": "160",
    "end": "2080"
  },
  {
    "text": "building resilient services on",
    "start": "2080",
    "end": "5040"
  },
  {
    "text": "kubernetes and thank you for being",
    "start": "5040",
    "end": "7040"
  },
  {
    "text": "resilient and staying till 5:00 p.m.",
    "start": "7040",
    "end": "9559"
  },
  {
    "text": "last Talk of the day my name is Anusha",
    "start": "9559",
    "end": "12719"
  },
  {
    "text": "ragunathan and with me is Todd Kinston",
    "start": "12719",
    "end": "16358"
  },
  {
    "text": "and we're both principal software",
    "start": "16359",
    "end": "17960"
  },
  {
    "text": "Engineers working at",
    "start": "17960",
    "end": "21560"
  },
  {
    "start": "21000",
    "end": "74000"
  },
  {
    "text": "int now one of the common questions that",
    "start": "21640",
    "end": "24199"
  },
  {
    "text": "we get asked is can I run my business",
    "start": "24199",
    "end": "27119"
  },
  {
    "text": "critical applications on kubernetes",
    "start": "27119",
    "end": "31400"
  },
  {
    "text": "and is resiliency on kubernetes a myth",
    "start": "31400",
    "end": "35200"
  },
  {
    "text": "for which I say of course you can run",
    "start": "35200",
    "end": "37440"
  },
  {
    "text": "your business critical applications on",
    "start": "37440",
    "end": "39039"
  },
  {
    "text": "kubernetes you will get to see that we",
    "start": "39039",
    "end": "41320"
  },
  {
    "text": "run a lot of our critical applications",
    "start": "41320",
    "end": "43640"
  },
  {
    "text": "at intert on our kubernetes based",
    "start": "43640",
    "end": "45680"
  },
  {
    "text": "platform infrastructure and no it is not",
    "start": "45680",
    "end": "48840"
  },
  {
    "text": "a myth it is quite possible to eliminate",
    "start": "48840",
    "end": "52239"
  },
  {
    "text": "most infrastructure related issues and",
    "start": "52239",
    "end": "55039"
  },
  {
    "text": "be able to run highly resilient and",
    "start": "55039",
    "end": "57960"
  },
  {
    "text": "available services on kubernetes",
    "start": "57960",
    "end": "61000"
  },
  {
    "text": "I now this is just a 25 minute talk so",
    "start": "61000",
    "end": "64198"
  },
  {
    "text": "we've chosen the top few concerns that",
    "start": "64199",
    "end": "66080"
  },
  {
    "text": "we've seen over the years from our",
    "start": "66080",
    "end": "68479"
  },
  {
    "text": "service developers and we're going to",
    "start": "68479",
    "end": "70840"
  },
  {
    "text": "share some best practices with",
    "start": "70840",
    "end": "74200"
  },
  {
    "start": "74000",
    "end": "100000"
  },
  {
    "text": "you we'll start with the background of",
    "start": "74439",
    "end": "76880"
  },
  {
    "text": "into it and its infrastructure at a",
    "start": "76880",
    "end": "79079"
  },
  {
    "text": "glance and then jump straight into",
    "start": "79079",
    "end": "81520"
  },
  {
    "text": "health checks specifically with respect",
    "start": "81520",
    "end": "83400"
  },
  {
    "text": "to load",
    "start": "83400",
    "end": "84680"
  },
  {
    "text": "balancers we'll talk about gas around",
    "start": "84680",
    "end": "87360"
  },
  {
    "text": "Port terminations and Port startups",
    "start": "87360",
    "end": "91680"
  },
  {
    "text": "talk about pod disruption budgets and",
    "start": "91680",
    "end": "93680"
  },
  {
    "text": "how you can use it to prevent pod",
    "start": "93680",
    "end": "96399"
  },
  {
    "text": "disruptions and finish off with some",
    "start": "96399",
    "end": "100079"
  },
  {
    "start": "100000",
    "end": "144000"
  },
  {
    "text": "takeaways now into it is a global",
    "start": "100079",
    "end": "102840"
  },
  {
    "text": "fintech company that builds several",
    "start": "102840",
    "end": "105680"
  },
  {
    "text": "Financial products and",
    "start": "105680",
    "end": "108479"
  },
  {
    "text": "services for you so if you have ever",
    "start": "108479",
    "end": "111000"
  },
  {
    "text": "used QuickBooks for accounting and",
    "start": "111000",
    "end": "113000"
  },
  {
    "text": "payroll Turbo Tax for tax prep know that",
    "start": "113000",
    "end": "116799"
  },
  {
    "text": "it's actually running on our kubernetes",
    "start": "116799",
    "end": "118759"
  },
  {
    "text": "based platform infrastructure",
    "start": "118759",
    "end": "121240"
  },
  {
    "text": "now here are some numbers to show the",
    "start": "121240",
    "end": "123719"
  },
  {
    "text": "scale at which we operate the one thing",
    "start": "123719",
    "end": "126320"
  },
  {
    "text": "that I want to highlight is that we",
    "start": "126320",
    "end": "128000"
  },
  {
    "text": "serve about 7,000 internal application",
    "start": "128000",
    "end": "131920"
  },
  {
    "text": "developers and all of them run various",
    "start": "131920",
    "end": "134440"
  },
  {
    "text": "different things on",
    "start": "134440",
    "end": "136560"
  },
  {
    "text": "kubernetes Todd and I are part of the",
    "start": "136560",
    "end": "138879"
  },
  {
    "text": "kubernetes platform team that manages",
    "start": "138879",
    "end": "142120"
  },
  {
    "text": "this",
    "start": "142120",
    "end": "143840"
  },
  {
    "text": "infrastructure now what do these",
    "start": "143840",
    "end": "146160"
  },
  {
    "text": "application developers care a lot about",
    "start": "146160",
    "end": "148360"
  },
  {
    "text": "well as far as language is concern we",
    "start": "148360",
    "end": "151120"
  },
  {
    "text": "primarily focus on Java spring Boot and",
    "start": "151120",
    "end": "154879"
  },
  {
    "text": "so in this talk we will cover a lot",
    "start": "154879",
    "end": "157080"
  },
  {
    "text": "about spring boot specific details",
    "start": "157080",
    "end": "159800"
  },
  {
    "text": "including stuff that we do during part",
    "start": "159800",
    "end": "162159"
  },
  {
    "text": "startups and",
    "start": "162159",
    "end": "163400"
  },
  {
    "text": "termination having said that this is not",
    "start": "163400",
    "end": "166560"
  },
  {
    "text": "very specific to Java spring boot alone",
    "start": "166560",
    "end": "169200"
  },
  {
    "text": "some of the best practices can be",
    "start": "169200",
    "end": "170599"
  },
  {
    "text": "applied to other languages like uh goang",
    "start": "170599",
    "end": "173400"
  },
  {
    "text": "or python as",
    "start": "173400",
    "end": "175760"
  },
  {
    "text": "well as far as crowd providers we are at",
    "start": "175760",
    "end": "178200"
  },
  {
    "text": "AWS shop and so you will see us throwing",
    "start": "178200",
    "end": "182040"
  },
  {
    "text": "words like application load balancers",
    "start": "182040",
    "end": "184040"
  },
  {
    "text": "albs Amis a rebalancing again this is",
    "start": "184040",
    "end": "189080"
  },
  {
    "text": "not just a AWS specific problem or best",
    "start": "189080",
    "end": "193120"
  },
  {
    "text": "practice you could apply it to your",
    "start": "193120",
    "end": "195480"
  },
  {
    "text": "cloud provider of choice or any other",
    "start": "195480",
    "end": "197760"
  },
  {
    "text": "infrastructure that you might be",
    "start": "197760",
    "end": "199360"
  },
  {
    "text": "using what's not in scope for this stock",
    "start": "199360",
    "end": "201840"
  },
  {
    "text": "are client resiliency patterns we expect",
    "start": "201840",
    "end": "205000"
  },
  {
    "text": "that clients will actually do the right",
    "start": "205000",
    "end": "207480"
  },
  {
    "text": "thing to use best practi IES such as",
    "start": "207480",
    "end": "210400"
  },
  {
    "text": "retries timeout caching warming you name",
    "start": "210400",
    "end": "213040"
  },
  {
    "text": "it that's a topic for another day today",
    "start": "213040",
    "end": "216519"
  },
  {
    "text": "we will be focusing on server resiliency",
    "start": "216519",
    "end": "219760"
  },
  {
    "text": "patterns specifically how do you protect",
    "start": "219760",
    "end": "222439"
  },
  {
    "text": "your servers from known and unknown",
    "start": "222439",
    "end": "224640"
  },
  {
    "text": "infrastructure changes with respect to",
    "start": "224640",
    "end": "227920"
  },
  {
    "text": "kubernetes let's talk about health",
    "start": "227920",
    "end": "229720"
  },
  {
    "text": "checks and load",
    "start": "229720",
    "end": "231079"
  },
  {
    "text": "balancers and before we dwell deeper I",
    "start": "231079",
    "end": "234680"
  },
  {
    "text": "wanted to give a flow of how Ingress",
    "start": "234680",
    "end": "238480"
  },
  {
    "start": "236000",
    "end": "320000"
  },
  {
    "text": "traffic flows into po and the setup that",
    "start": "238480",
    "end": "241000"
  },
  {
    "text": "we have an application developer wants",
    "start": "241000",
    "end": "243959"
  },
  {
    "text": "to reach an end point that is being",
    "start": "243959",
    "end": "245879"
  },
  {
    "text": "exposed by their",
    "start": "245879",
    "end": "247920"
  },
  {
    "text": "service and the service in this case for",
    "start": "247920",
    "end": "251000"
  },
  {
    "text": "example there are three pods that are",
    "start": "251000",
    "end": "252920"
  },
  {
    "text": "backing up the service and that is",
    "start": "252920",
    "end": "255159"
  },
  {
    "text": "fronted by an Ingress",
    "start": "255159",
    "end": "257639"
  },
  {
    "text": "object and we have the AWS ALB the the",
    "start": "257639",
    "end": "261680"
  },
  {
    "text": "load balancer and the ALB Target group",
    "start": "261680",
    "end": "264800"
  },
  {
    "text": "that is basically fronting this from the",
    "start": "264800",
    "end": "266840"
  },
  {
    "text": "cloud provider",
    "start": "266840",
    "end": "268400"
  },
  {
    "text": "side and notice that the target ALB",
    "start": "268400",
    "end": "272240"
  },
  {
    "text": "group basically has the pods registered",
    "start": "272240",
    "end": "275639"
  },
  {
    "text": "in the Target group so that it can",
    "start": "275639",
    "end": "277560"
  },
  {
    "text": "actually have the flow of traffic to the",
    "start": "277560",
    "end": "280560"
  },
  {
    "text": "parts and there is the ALB Ingress",
    "start": "280560",
    "end": "283479"
  },
  {
    "text": "controller which is basically a cluster",
    "start": "283479",
    "end": "285199"
  },
  {
    "text": "add-on that's regist that is running on",
    "start": "285199",
    "end": "287039"
  },
  {
    "text": "all of our kubernetes clusters that does",
    "start": "287039",
    "end": "288720"
  },
  {
    "text": "a delicate Dance of orchestrating the",
    "start": "288720",
    "end": "291360"
  },
  {
    "text": "traffic and registering and",
    "start": "291360",
    "end": "293080"
  },
  {
    "text": "deregistering pods with the ALB Target",
    "start": "293080",
    "end": "296280"
  },
  {
    "text": "group now we all know that just because",
    "start": "296280",
    "end": "298759"
  },
  {
    "text": "a pod is up and running it it might not",
    "start": "298759",
    "end": "302160"
  },
  {
    "text": "be just ready to accept",
    "start": "302160",
    "end": "304680"
  },
  {
    "text": "traffic and uh so the Pod might actually",
    "start": "304680",
    "end": "307919"
  },
  {
    "text": "have uh to set up maybe some a database",
    "start": "307919",
    "end": "310120"
  },
  {
    "text": "connection warm up its cash do a lot of",
    "start": "310120",
    "end": "313759"
  },
  {
    "text": "housekeeping before it actually becomes",
    "start": "313759",
    "end": "316199"
  },
  {
    "text": "ready to take traffic so what are some",
    "start": "316199",
    "end": "319440"
  },
  {
    "text": "of the issues that we've uh seen with",
    "start": "319440",
    "end": "322360"
  },
  {
    "start": "320000",
    "end": "463000"
  },
  {
    "text": "respect to P Readiness Gates and uh",
    "start": "322360",
    "end": "326160"
  },
  {
    "text": "Readiness probes so Readiness probes we",
    "start": "326160",
    "end": "328440"
  },
  {
    "text": "is quite common not",
    "start": "328440",
    "end": "330160"
  },
  {
    "text": "that you can actually have it as part of",
    "start": "330160",
    "end": "332280"
  },
  {
    "text": "your path spec and you expect the",
    "start": "332280",
    "end": "334080"
  },
  {
    "text": "Readiness probe to return a 200 and in",
    "start": "334080",
    "end": "336880"
  },
  {
    "text": "kubernetes Readiness probe basically",
    "start": "336880",
    "end": "339160"
  },
  {
    "text": "means that it's ready to take traffic",
    "start": "339160",
    "end": "341280"
  },
  {
    "text": "and any failure to actually pass the",
    "start": "341280",
    "end": "343440"
  },
  {
    "text": "Readiness probe means that after a",
    "start": "343440",
    "end": "345440"
  },
  {
    "text": "certain amount of time it is taken out",
    "start": "345440",
    "end": "348199"
  },
  {
    "text": "of rotation and once it becomes ready it",
    "start": "348199",
    "end": "350800"
  },
  {
    "text": "is again put back in",
    "start": "350800",
    "end": "352479"
  },
  {
    "text": "rotation but what is also just as",
    "start": "352479",
    "end": "355400"
  },
  {
    "text": "important are pod Readiness Gates and",
    "start": "355400",
    "end": "358520"
  },
  {
    "text": "this is a primitive that that is",
    "start": "358520",
    "end": "359880"
  },
  {
    "text": "specific to AWS ALB again it could be",
    "start": "359880",
    "end": "362960"
  },
  {
    "text": "specific you could have your own",
    "start": "362960",
    "end": "364720"
  },
  {
    "text": "implementation but the general idea is p",
    "start": "364720",
    "end": "367199"
  },
  {
    "text": "Readiness gates are needed to achieve",
    "start": "367199",
    "end": "369919"
  },
  {
    "text": "zero downtime during a new application",
    "start": "369919",
    "end": "372240"
  },
  {
    "text": "roll out now when you have a new version",
    "start": "372240",
    "end": "374479"
  },
  {
    "text": "of your application being deployed the",
    "start": "374479",
    "end": "377240"
  },
  {
    "text": "time it takes for that set of PODS to",
    "start": "377240",
    "end": "379639"
  },
  {
    "text": "come up is a lot lesser than the time",
    "start": "379639",
    "end": "382599"
  },
  {
    "text": "taken for the same set of PODS to be",
    "start": "382599",
    "end": "385080"
  },
  {
    "text": "registered by the ALB Ingress controller",
    "start": "385080",
    "end": "387639"
  },
  {
    "text": "with the ALB Target groups now why is",
    "start": "387639",
    "end": "390280"
  },
  {
    "text": "this a problem when there is premature",
    "start": "390280",
    "end": "393160"
  },
  {
    "text": "registration these pods end up being in",
    "start": "393160",
    "end": "395919"
  },
  {
    "text": "a state called like that is not healthy",
    "start": "395919",
    "end": "398440"
  },
  {
    "text": "yet in the ALB Target group it could be",
    "start": "398440",
    "end": "401160"
  },
  {
    "text": "in a state such as initi initial or it's",
    "start": "401160",
    "end": "404479"
  },
  {
    "text": "in it's in a draining phase or so on but",
    "start": "404479",
    "end": "407479"
  },
  {
    "text": "traffic is being sent to the load",
    "start": "407479",
    "end": "409199"
  },
  {
    "text": "balancer thinking that these pods are",
    "start": "409199",
    "end": "411080"
  },
  {
    "text": "ready and this ends up causing a service",
    "start": "411080",
    "end": "414720"
  },
  {
    "text": "outage the Pod Readiness gates are",
    "start": "414720",
    "end": "417360"
  },
  {
    "text": "precisely to solve this problem and the",
    "start": "417360",
    "end": "420160"
  },
  {
    "text": "way it solves it is by not unregistering",
    "start": "420160",
    "end": "423560"
  },
  {
    "text": "the old pods that are that that before",
    "start": "423560",
    "end": "427120"
  },
  {
    "text": "the new pods have been registered so",
    "start": "427120",
    "end": "430360"
  },
  {
    "text": "this is a gate to make sure that you",
    "start": "430360",
    "end": "432360"
  },
  {
    "text": "don't get a service outage the way aw",
    "start": "432360",
    "end": "436039"
  },
  {
    "text": "ALB uh implements this is by having an",
    "start": "436039",
    "end": "439080"
  },
  {
    "text": "annotation as you see here it's a key",
    "start": "439080",
    "end": "440919"
  },
  {
    "text": "value pair that is injected into your",
    "start": "440919",
    "end": "444000"
  },
  {
    "text": "name space and your controller has to",
    "start": "444000",
    "end": "445800"
  },
  {
    "text": "respect that and Implement whatever is",
    "start": "445800",
    "end": "448400"
  },
  {
    "text": "needed in the background",
    "start": "448400",
    "end": "450720"
  },
  {
    "text": "so again key takeaway look at your load",
    "start": "450720",
    "end": "453240"
  },
  {
    "text": "balancer and how it is um directing",
    "start": "453240",
    "end": "456360"
  },
  {
    "text": "traffic what is its tolerations and um",
    "start": "456360",
    "end": "459479"
  },
  {
    "text": "you can Implement your Solutions",
    "start": "459479",
    "end": "462639"
  },
  {
    "text": "accordingly so here are some of the",
    "start": "462639",
    "end": "464879"
  },
  {
    "start": "463000",
    "end": "653000"
  },
  {
    "text": "problems in Solutions we've seen with",
    "start": "464879",
    "end": "466720"
  },
  {
    "text": "Readiness probes and Readiness Gates if",
    "start": "466720",
    "end": "469919"
  },
  {
    "text": "your pods are not in a ready State go",
    "start": "469919",
    "end": "473159"
  },
  {
    "text": "check your Readiness probes typically uh",
    "start": "473159",
    "end": "476039"
  },
  {
    "text": "this is a pretty straightforward check",
    "start": "476039",
    "end": "477960"
  },
  {
    "text": "you can actually curl to your readiness",
    "start": "477960",
    "end": "479960"
  },
  {
    "text": "um um health checks and make sure that",
    "start": "479960",
    "end": "482560"
  },
  {
    "text": "they are",
    "start": "482560",
    "end": "483720"
  },
  {
    "text": "passing um new pods never become ready",
    "start": "483720",
    "end": "487759"
  },
  {
    "text": "it's not so much that all pods are bad",
    "start": "487759",
    "end": "490120"
  },
  {
    "text": "only the new pods are bad and the old",
    "start": "490120",
    "end": "492400"
  },
  {
    "text": "pods are just fine this could be a case",
    "start": "492400",
    "end": "495280"
  },
  {
    "text": "where the Readiness probe specifically",
    "start": "495280",
    "end": "497319"
  },
  {
    "text": "to the new pods have changed and that",
    "start": "497319",
    "end": "500360"
  },
  {
    "text": "there is a problem again go look at your",
    "start": "500360",
    "end": "503560"
  },
  {
    "text": "new pods' Readiness probes to make sure",
    "start": "503560",
    "end": "505800"
  },
  {
    "text": "that they are passing pods are",
    "start": "505800",
    "end": "507840"
  },
  {
    "text": "restarting unexpectedly now here's where",
    "start": "507840",
    "end": "510840"
  },
  {
    "text": "I want to highlight liveness probes",
    "start": "510840",
    "end": "513518"
  },
  {
    "text": "liveness probes are different from",
    "start": "513519",
    "end": "515080"
  },
  {
    "text": "Readiness probes in that liveness probes",
    "start": "515080",
    "end": "517240"
  },
  {
    "text": "check to make sure that your pods are",
    "start": "517240",
    "end": "519039"
  },
  {
    "text": "alive and if KU kuet makes uh determines",
    "start": "519039",
    "end": "522399"
  },
  {
    "text": "that your pod is not alive it's going to",
    "start": "522399",
    "end": "524039"
  },
  {
    "text": "actually restart the Pod with the",
    "start": "524039",
    "end": "525800"
  },
  {
    "text": "expectation that it's going to come",
    "start": "525800",
    "end": "527000"
  },
  {
    "text": "alive this is different from Readiness",
    "start": "527000",
    "end": "529320"
  },
  {
    "text": "probes where kubernetes will actually",
    "start": "529320",
    "end": "531600"
  },
  {
    "text": "just isolate the Pod and make and and",
    "start": "531600",
    "end": "534440"
  },
  {
    "text": "take it out of rotation from serving",
    "start": "534440",
    "end": "536080"
  },
  {
    "text": "traffic and it will go back into joining",
    "start": "536080",
    "end": "538800"
  },
  {
    "text": "the group if if there is uh if it starts",
    "start": "538800",
    "end": "541680"
  },
  {
    "text": "uh getting ready now what we've seen at",
    "start": "541680",
    "end": "545279"
  },
  {
    "text": "least at into it is that developers just",
    "start": "545279",
    "end": "547880"
  },
  {
    "text": "basically have the same probes for both",
    "start": "547880",
    "end": "549600"
  },
  {
    "text": "liveness and Readiness without",
    "start": "549600",
    "end": "551399"
  },
  {
    "text": "understanding the difference much and",
    "start": "551399",
    "end": "553000"
  },
  {
    "text": "end up shooting themselves in the foot",
    "start": "553000",
    "end": "555480"
  },
  {
    "text": "so our recommendation is hey go remove",
    "start": "555480",
    "end": "557720"
  },
  {
    "text": "that liveness probe and have better",
    "start": "557720",
    "end": "559040"
  },
  {
    "text": "checks to actually um uh make sure that",
    "start": "559040",
    "end": "561880"
  },
  {
    "text": "your pod is working well in your case",
    "start": "561880",
    "end": "564760"
  },
  {
    "text": "you might actually just go and fix your",
    "start": "564760",
    "end": "566200"
  },
  {
    "text": "liveness probe it is if it is written",
    "start": "566200",
    "end": "567959"
  },
  {
    "text": "well enough uh pod is in Clash loop back",
    "start": "567959",
    "end": "571399"
  },
  {
    "text": "off this is mostly a application issue",
    "start": "571399",
    "end": "574279"
  },
  {
    "text": "from what we have seen so go inspect",
    "start": "574279",
    "end": "576600"
  },
  {
    "text": "your container logs and fix your app",
    "start": "576600",
    "end": "579240"
  },
  {
    "text": "issue new pods uh are slow to take",
    "start": "579240",
    "end": "582519"
  },
  {
    "text": "traffic from ALB um again this is a v",
    "start": "582519",
    "end": "585800"
  },
  {
    "text": "variation where old pods are fine but",
    "start": "585800",
    "end": "587839"
  },
  {
    "text": "new pods are in again could be something",
    "start": "587839",
    "end": "590399"
  },
  {
    "text": "related to a new roll out check your um",
    "start": "590399",
    "end": "593200"
  },
  {
    "text": "app code and uh finally bods are",
    "start": "593200",
    "end": "596320"
  },
  {
    "text": "pouncing bouncing in and out of ALB",
    "start": "596320",
    "end": "598600"
  },
  {
    "text": "Target groups which means that it'll be",
    "start": "598600",
    "end": "600360"
  },
  {
    "text": "ready at one point and then not ready",
    "start": "600360",
    "end": "602600"
  },
  {
    "text": "and basically just keeps flipping back",
    "start": "602600",
    "end": "604120"
  },
  {
    "text": "and forth and we've noticed that this is",
    "start": "604120",
    "end": "606560"
  },
  {
    "text": "an issue mainly during a gate Rush",
    "start": "606560",
    "end": "609320"
  },
  {
    "text": "situation where the Pod is taking a lot",
    "start": "609320",
    "end": "612240"
  },
  {
    "text": "of traffic and then it gets overwhelmed",
    "start": "612240",
    "end": "615279"
  },
  {
    "text": "it's out of threads and then it becomes",
    "start": "615279",
    "end": "617760"
  },
  {
    "text": "not ready and then what happens is it",
    "start": "617760",
    "end": "620480"
  },
  {
    "text": "gets taken out of rotation then it is",
    "start": "620480",
    "end": "622959"
  },
  {
    "text": "able to actually drain its requests and",
    "start": "622959",
    "end": "625519"
  },
  {
    "text": "then it becomes ready again and then put",
    "start": "625519",
    "end": "628880"
  },
  {
    "text": "back and rotation then again gets",
    "start": "628880",
    "end": "631240"
  },
  {
    "text": "overwhelmed and puts back out of",
    "start": "631240",
    "end": "633160"
  },
  {
    "text": "rotation so it goes back and forth um",
    "start": "633160",
    "end": "635600"
  },
  {
    "text": "this is Todd will explain in in detail",
    "start": "635600",
    "end": "638440"
  },
  {
    "text": "about the situation but in general the",
    "start": "638440",
    "end": "640839"
  },
  {
    "text": "issue is that you're not having pods",
    "start": "640839",
    "end": "644760"
  },
  {
    "text": "pre-warm and use some good pre-warming",
    "start": "644760",
    "end": "647079"
  },
  {
    "text": "strategies to take care of this",
    "start": "647079",
    "end": "650120"
  },
  {
    "text": "situation uh let's look at part",
    "start": "650120",
    "end": "653240"
  },
  {
    "start": "653000",
    "end": "758000"
  },
  {
    "text": "termination and the GES around it so why",
    "start": "653240",
    "end": "655839"
  },
  {
    "text": "do Parts terminate well in kubernetes",
    "start": "655839",
    "end": "658320"
  },
  {
    "text": "you almost have to expect pods to go um",
    "start": "658320",
    "end": "661240"
  },
  {
    "text": "terminate mainly because a lot of normal",
    "start": "661240",
    "end": "663680"
  },
  {
    "text": "operation bring down the pods bring down",
    "start": "663680",
    "end": "665760"
  },
  {
    "text": "the nodes bring down the Clusters um so",
    "start": "665760",
    "end": "669200"
  },
  {
    "text": "as a service owner you have to almost",
    "start": "669200",
    "end": "671079"
  },
  {
    "text": "expect your parts to go down and uh some",
    "start": "671079",
    "end": "674519"
  },
  {
    "text": "of the common reasons why a pod would go",
    "start": "674519",
    "end": "676839"
  },
  {
    "text": "down are um during an application roll",
    "start": "676839",
    "end": "679560"
  },
  {
    "text": "out you have a new version of your pod",
    "start": "679560",
    "end": "681839"
  },
  {
    "text": "um and uh the old versions go down and",
    "start": "681839",
    "end": "684279"
  },
  {
    "text": "your new version comes up um application",
    "start": "684279",
    "end": "687519"
  },
  {
    "text": "scales down your horizontal pod",
    "start": "687519",
    "end": "690079"
  },
  {
    "text": "autoscaler might determine that for the",
    "start": "690079",
    "end": "692160"
  },
  {
    "text": "current load you don't need as many pods",
    "start": "692160",
    "end": "694519"
  },
  {
    "text": "you might have started with let's say 50",
    "start": "694519",
    "end": "696680"
  },
  {
    "text": "pods and then realize that you don't",
    "start": "696680",
    "end": "698000"
  },
  {
    "text": "need that and it scales down to maybe 10",
    "start": "698000",
    "end": "700440"
  },
  {
    "text": "and then so you got you got to have",
    "start": "700440",
    "end": "701920"
  },
  {
    "text": "those 40 pods scaled down and that",
    "start": "701920",
    "end": "704160"
  },
  {
    "text": "terminates those during cluster upgrade",
    "start": "704160",
    "end": "707360"
  },
  {
    "text": "operations this is definitely one of",
    "start": "707360",
    "end": "709360"
  },
  {
    "text": "those LoveHate relationships that Todd",
    "start": "709360",
    "end": "711079"
  },
  {
    "text": "and I have uh every few weeks we have to",
    "start": "711079",
    "end": "713480"
  },
  {
    "text": "actually rotate out our 3155 plus",
    "start": "713480",
    "end": "715440"
  },
  {
    "text": "clusters because of compliance reasons",
    "start": "715440",
    "end": "717800"
  },
  {
    "text": "because of Ami rotations because of",
    "start": "717800",
    "end": "719720"
  },
  {
    "text": "kubernetes cluster upgrades new features",
    "start": "719720",
    "end": "722120"
  },
  {
    "text": "that we built into the platform what",
    "start": "722120",
    "end": "723720"
  },
  {
    "text": "have you so this is this will basically",
    "start": "723720",
    "end": "727320"
  },
  {
    "text": "bring down pods nodes terminate a whole",
    "start": "727320",
    "end": "729880"
  },
  {
    "text": "bunch of things so that's uh again a",
    "start": "729880",
    "end": "731920"
  },
  {
    "text": "normal maintenance routine operation",
    "start": "731920",
    "end": "734240"
  },
  {
    "text": "that you have to account for for your",
    "start": "734240",
    "end": "735720"
  },
  {
    "text": "pods to go down and finally cluster",
    "start": "735720",
    "end": "738199"
  },
  {
    "text": "scale down operations cluster order",
    "start": "738199",
    "end": "739800"
  },
  {
    "text": "scaler might actually just evict uh",
    "start": "739800",
    "end": "741839"
  },
  {
    "text": "nodes to basically consolidate a bunch",
    "start": "741839",
    "end": "743639"
  },
  {
    "text": "of nodes together um I mean pots",
    "start": "743639",
    "end": "746600"
  },
  {
    "text": "together and that can actually bring",
    "start": "746600",
    "end": "748240"
  },
  {
    "text": "down pods as well",
    "start": "748240",
    "end": "750399"
  },
  {
    "text": "now let's look at the Pod uh termination",
    "start": "750399",
    "end": "752880"
  },
  {
    "text": "life cycle to understand what could",
    "start": "752880",
    "end": "754720"
  },
  {
    "text": "actually go wrong uh if you don't have",
    "start": "754720",
    "end": "756839"
  },
  {
    "text": "the right checks and balances now uh you",
    "start": "756839",
    "end": "760240"
  },
  {
    "start": "758000",
    "end": "893000"
  },
  {
    "text": "see that there is a request to delete a",
    "start": "760240",
    "end": "762920"
  },
  {
    "text": "pod and uh after some point in time",
    "start": "762920",
    "end": "766320"
  },
  {
    "text": "there is going to be a sick term that is",
    "start": "766320",
    "end": "767959"
  },
  {
    "text": "sent to the PO and then uh after some",
    "start": "767959",
    "end": "771120"
  },
  {
    "text": "more time there a sick kill that is sent",
    "start": "771120",
    "end": "773240"
  },
  {
    "text": "to the part and finally the part gets",
    "start": "773240",
    "end": "774839"
  },
  {
    "text": "deleted now there is a time in between",
    "start": "774839",
    "end": "778120"
  },
  {
    "text": "the request to delete the Pod and syum",
    "start": "778120",
    "end": "780839"
  },
  {
    "text": "where you can have the ability to add",
    "start": "780839",
    "end": "783120"
  },
  {
    "text": "what is called a pre-stop hook now the",
    "start": "783120",
    "end": "786240"
  },
  {
    "text": "pre-stop hook is a is part of the Pod",
    "start": "786240",
    "end": "789600"
  },
  {
    "text": "specification and you can actually",
    "start": "789600",
    "end": "791680"
  },
  {
    "text": "execute you can have handlers there what",
    "start": "791680",
    "end": "794920"
  },
  {
    "text": "we recommend people do during this",
    "start": "794920",
    "end": "797720"
  },
  {
    "text": "pre-op Hook is to treat it as a cool",
    "start": "797720",
    "end": "800680"
  },
  {
    "text": "down period for your ALB uh traffic in",
    "start": "800680",
    "end": "804480"
  },
  {
    "text": "which uh in other words stop taking new",
    "start": "804480",
    "end": "806800"
  },
  {
    "text": "traffic and start draining uh",
    "start": "806800",
    "end": "809720"
  },
  {
    "text": "start draining the inflight request that",
    "start": "809720",
    "end": "811800"
  },
  {
    "text": "you",
    "start": "811800",
    "end": "812519"
  },
  {
    "text": "have and there is a time in between the",
    "start": "812519",
    "end": "815079"
  },
  {
    "text": "sick term and the sick kill where you",
    "start": "815079",
    "end": "818120"
  },
  {
    "text": "can handle your graceful shutdown now if",
    "start": "818120",
    "end": "821160"
  },
  {
    "text": "you are a writing a serious uh",
    "start": "821160",
    "end": "824120"
  },
  {
    "text": "kubernetes uh service that maintains",
    "start": "824120",
    "end": "827199"
  },
  {
    "text": "persistent database connections",
    "start": "827199",
    "end": "828680"
  },
  {
    "text": "websocket connections and so on this is",
    "start": "828680",
    "end": "831079"
  },
  {
    "text": "a good time for you to actually uh close",
    "start": "831079",
    "end": "833480"
  },
  {
    "text": "those connections and drain those",
    "start": "833480",
    "end": "835560"
  },
  {
    "text": "requests um and U finally the Pod is",
    "start": "835560",
    "end": "838639"
  },
  {
    "text": "getting dated the one thing that I want",
    "start": "838639",
    "end": "841000"
  },
  {
    "text": "to call out is that at some point in",
    "start": "841000",
    "end": "843720"
  },
  {
    "text": "between the syum and the sill your IP is",
    "start": "843720",
    "end": "846440"
  },
  {
    "text": "still being used and you um and then U",
    "start": "846440",
    "end": "850600"
  },
  {
    "text": "there are inflight requests that will",
    "start": "850600",
    "end": "851880"
  },
  {
    "text": "take care of it um so you want to make",
    "start": "851880",
    "end": "854880"
  },
  {
    "text": "sure that uh you drain those requests",
    "start": "854880",
    "end": "857519"
  },
  {
    "text": "and then exit gracefully if you don't uh",
    "start": "857519",
    "end": "860639"
  },
  {
    "text": "if you need more time in your service to",
    "start": "860639",
    "end": "862639"
  },
  {
    "text": "actually perform those operations know",
    "start": "862639",
    "end": "864920"
  },
  {
    "text": "that the graceful shutdown by default um",
    "start": "864920",
    "end": "867440"
  },
  {
    "text": "is a 30C so buet will send after 30",
    "start": "867440",
    "end": "871000"
  },
  {
    "text": "seconds after the syum uh it will",
    "start": "871000",
    "end": "873639"
  },
  {
    "text": "actually uh shut down so if you want to",
    "start": "873639",
    "end": "876360"
  },
  {
    "text": "override if you need more time to",
    "start": "876360",
    "end": "878199"
  },
  {
    "text": "actually take care of your inflight",
    "start": "878199",
    "end": "879959"
  },
  {
    "text": "requests then um you can override that",
    "start": "879959",
    "end": "882839"
  },
  {
    "text": "using that reminition grace period in",
    "start": "882839",
    "end": "885279"
  },
  {
    "text": "seconds uh option that I will show in a",
    "start": "885279",
    "end": "887480"
  },
  {
    "text": "bit and then you will be able to still",
    "start": "887480",
    "end": "890240"
  },
  {
    "text": "gracefully shut down your oper U your",
    "start": "890240",
    "end": "892399"
  },
  {
    "text": "your",
    "start": "892399",
    "end": "893639"
  },
  {
    "start": "893000",
    "end": "1037000"
  },
  {
    "text": "pod um what if you don't do this well",
    "start": "893639",
    "end": "896680"
  },
  {
    "text": "your clients will end up getting 500s",
    "start": "896680",
    "end": "898759"
  },
  {
    "text": "you don't don't want",
    "start": "898759",
    "end": "900279"
  },
  {
    "text": "that um so here is what we do at ID um",
    "start": "900279",
    "end": "904360"
  },
  {
    "text": "so we have what is called the Java",
    "start": "904360",
    "end": "906279"
  },
  {
    "text": "starter uh kit which is basically a",
    "start": "906279",
    "end": "908880"
  },
  {
    "text": "wrapper for spring boot services that",
    "start": "908880",
    "end": "912320"
  },
  {
    "text": "are rended out of uh what we call the",
    "start": "912320",
    "end": "914839"
  },
  {
    "text": "paved Road or golden golden path and um",
    "start": "914839",
    "end": "919000"
  },
  {
    "text": "but if you you don't need to do uh what",
    "start": "919000",
    "end": "921079"
  },
  {
    "text": "we do what what but in in essence the",
    "start": "921079",
    "end": "923199"
  },
  {
    "text": "wrapper basically makes use of uh J uh a",
    "start": "923199",
    "end": "927360"
  },
  {
    "text": "springboard uh feature called server",
    "start": "927360",
    "end": "929759"
  },
  {
    "text": "shutdown equals graceful and what that",
    "start": "929759",
    "end": "932600"
  },
  {
    "text": "does is be able to implement a a",
    "start": "932600",
    "end": "935040"
  },
  {
    "text": "graceful shutdown in your uh Java",
    "start": "935040",
    "end": "937800"
  },
  {
    "text": "springboard Service uh what this does is",
    "start": "937800",
    "end": "940560"
  },
  {
    "text": "enables stormcat and Jetty to stop",
    "start": "940560",
    "end": "943560"
  },
  {
    "text": "accepting new requests and inflight",
    "start": "943560",
    "end": "946560"
  },
  {
    "text": "requests will be drained and then we",
    "start": "946560",
    "end": "949920"
  },
  {
    "text": "there is also a way to override the wait",
    "start": "949920",
    "end": "952040"
  },
  {
    "text": "time in here uh for if you are not a J",
    "start": "952040",
    "end": "956040"
  },
  {
    "text": "uh a Java or a spring boot shop um you",
    "start": "956040",
    "end": "960440"
  },
  {
    "text": "can still handle your own syum Handler",
    "start": "960440",
    "end": "963199"
  },
  {
    "text": "in your service code and uh for that",
    "start": "963199",
    "end": "966720"
  },
  {
    "text": "again this is uh the key I was talking",
    "start": "966720",
    "end": "969600"
  },
  {
    "text": "about the termination grace period",
    "start": "969600",
    "end": "971600"
  },
  {
    "text": "seconds you can add it to your pods spec",
    "start": "971600",
    "end": "973319"
  },
  {
    "text": "if you want to buy more time from the",
    "start": "973319",
    "end": "975680"
  },
  {
    "text": "kuet to perform your graceful operations",
    "start": "975680",
    "end": "978240"
  },
  {
    "text": "let's say you have a goldang code then",
    "start": "978240",
    "end": "979680"
  },
  {
    "text": "you can use that and finally U adding a",
    "start": "979680",
    "end": "983079"
  },
  {
    "text": "life cycle pre-stop hook in your uh",
    "start": "983079",
    "end": "985519"
  },
  {
    "text": "podspec will help you get that cold uh",
    "start": "985519",
    "end": "989199"
  },
  {
    "text": "um cool down period like I spoke about",
    "start": "989199",
    "end": "991920"
  },
  {
    "text": "earlier I'm going to quickly Show an",
    "start": "991920",
    "end": "994000"
  },
  {
    "text": "example of how you actually do this in",
    "start": "994000",
    "end": "996440"
  },
  {
    "text": "your uh ppec the life cycle p drop hook",
    "start": "996440",
    "end": "998880"
  },
  {
    "text": "in this case it's just doing an exec of",
    "start": "998880",
    "end": "1001279"
  },
  {
    "text": "a sleep command just buying some time so",
    "start": "1001279",
    "end": "1003800"
  },
  {
    "text": "that you have the cool down period for",
    "start": "1003800",
    "end": "1005120"
  },
  {
    "text": "the ALB traffic and then the graceful",
    "start": "1005120",
    "end": "1008240"
  },
  {
    "text": "shut down p is slightly more than that",
    "start": "1008240",
    "end": "1010920"
  },
  {
    "text": "um here is an example of how you have",
    "start": "1010920",
    "end": "1013560"
  },
  {
    "text": "Java code implementing the add shutdown",
    "start": "1013560",
    "end": "1017160"
  },
  {
    "text": "hook Handler so that you can actually",
    "start": "1017160",
    "end": "1019720"
  },
  {
    "text": "perform your own custom syum graceful",
    "start": "1019720",
    "end": "1022680"
  },
  {
    "text": "shut down here so that was about health",
    "start": "1022680",
    "end": "1025798"
  },
  {
    "text": "checks load balancers and pods going",
    "start": "1025799",
    "end": "1028120"
  },
  {
    "text": "down but what about pods coming up for",
    "start": "1028120",
    "end": "1030319"
  },
  {
    "text": "that I'd like to hand it over to",
    "start": "1030319",
    "end": "1033480"
  },
  {
    "text": "Todd yeah thanks anua just like pods",
    "start": "1037919",
    "end": "1041120"
  },
  {
    "text": "must be terminated in a resilient manner",
    "start": "1041120",
    "end": "1043678"
  },
  {
    "text": "it's also important to introduce new",
    "start": "1043679",
    "end": "1045600"
  },
  {
    "text": "replicas of your application correctly",
    "start": "1045600",
    "end": "1047880"
  },
  {
    "text": "otherwise you can have resist resiliency",
    "start": "1047880",
    "end": "1049400"
  },
  {
    "text": "problems with the new pods usually this",
    "start": "1049400",
    "end": "1052160"
  },
  {
    "text": "all res revolves around the Pod being",
    "start": "1052160",
    "end": "1054160"
  },
  {
    "text": "sent traffic or too much traffic before",
    "start": "1054160",
    "end": "1057160"
  },
  {
    "text": "it's truly ready to receive it this can",
    "start": "1057160",
    "end": "1059640"
  },
  {
    "text": "manifest itself in a number of different",
    "start": "1059640",
    "end": "1063559"
  },
  {
    "text": "problems new pods must only pass their",
    "start": "1065280",
    "end": "1068120"
  },
  {
    "text": "health checks and Readiness probes when",
    "start": "1068120",
    "end": "1069799"
  },
  {
    "text": "they are truly ready to begin handling",
    "start": "1069799",
    "end": "1071400"
  },
  {
    "text": "load however there are some cases where",
    "start": "1071400",
    "end": "1073520"
  },
  {
    "text": "an application may be ready to accept",
    "start": "1073520",
    "end": "1075679"
  },
  {
    "text": "some requests but may not be prepared to",
    "start": "1075679",
    "end": "1078039"
  },
  {
    "text": "handle its full share of the load",
    "start": "1078039",
    "end": "1080799"
  },
  {
    "text": "application in in some cases it may be",
    "start": "1080799",
    "end": "1083520"
  },
  {
    "text": "possible for the application to syn",
    "start": "1083520",
    "end": "1085320"
  },
  {
    "text": "synthetically pre-warm itself for",
    "start": "1085320",
    "end": "1087679"
  },
  {
    "text": "example a Java application May Implement",
    "start": "1087679",
    "end": "1090080"
  },
  {
    "text": "custom class loaders to load the",
    "start": "1090080",
    "end": "1092280"
  },
  {
    "text": "required classes proactively in addition",
    "start": "1092280",
    "end": "1094960"
  },
  {
    "text": "an application with the local inmemory",
    "start": "1094960",
    "end": "1096880"
  },
  {
    "text": "cache might restore or pre-populate that",
    "start": "1096880",
    "end": "1099720"
  },
  {
    "text": "cach at startup time instead of lazily",
    "start": "1099720",
    "end": "1102200"
  },
  {
    "text": "when it receives cash",
    "start": "1102200",
    "end": "1104360"
  },
  {
    "text": "misses uh applications may need to",
    "start": "1104360",
    "end": "1106720"
  },
  {
    "text": "establish database connections or",
    "start": "1106720",
    "end": "1108280"
  },
  {
    "text": "connection tools with multiple databases",
    "start": "1108280",
    "end": "1110760"
  },
  {
    "text": "when the Pod first starts and",
    "start": "1110760",
    "end": "1112720"
  },
  {
    "text": "establishing these connections may take",
    "start": "1112720",
    "end": "1114760"
  },
  {
    "text": "some additional time based on the load",
    "start": "1114760",
    "end": "1116240"
  },
  {
    "text": "of the database and other factors uh if",
    "start": "1116240",
    "end": "1120240"
  },
  {
    "text": "only a few connections are available in",
    "start": "1120240",
    "end": "1121919"
  },
  {
    "text": "the connection pool when a a pod starts",
    "start": "1121919",
    "end": "1124080"
  },
  {
    "text": "and begin servicing heavy load some of",
    "start": "1124080",
    "end": "1126280"
  },
  {
    "text": "the requests may be blocked while",
    "start": "1126280",
    "end": "1127640"
  },
  {
    "text": "waiting for a connection uh you could",
    "start": "1127640",
    "end": "1130559"
  },
  {
    "text": "also generate synthetic load uh using",
    "start": "1130559",
    "end": "1133440"
  },
  {
    "text": "the postart container life cycle hook to",
    "start": "1133440",
    "end": "1136960"
  },
  {
    "text": "send kind of noop or inter Al loop back",
    "start": "1136960",
    "end": "1139559"
  },
  {
    "text": "requests back to your pod and that would",
    "start": "1139559",
    "end": "1142520"
  },
  {
    "text": "you know those requests itself would",
    "start": "1142520",
    "end": "1144039"
  },
  {
    "text": "pre-warm the",
    "start": "1144039",
    "end": "1145919"
  },
  {
    "text": "Pod a common misconception is that you",
    "start": "1145919",
    "end": "1148640"
  },
  {
    "text": "can just increase the initial delay",
    "start": "1148640",
    "end": "1150720"
  },
  {
    "text": "seconds of the Readiness probe to",
    "start": "1150720",
    "end": "1153480"
  },
  {
    "text": "address this kind of warming issues uh",
    "start": "1153480",
    "end": "1156080"
  },
  {
    "text": "the problem is unless the application is",
    "start": "1156080",
    "end": "1159159"
  },
  {
    "text": "performing uh proactive pre-warming like",
    "start": "1159159",
    "end": "1162320"
  },
  {
    "text": "what I just uh just described um it",
    "start": "1162320",
    "end": "1165799"
  },
  {
    "text": "doesn't help because uh the actual",
    "start": "1165799",
    "end": "1168720"
  },
  {
    "text": "servicing of the request is what",
    "start": "1168720",
    "end": "1170200"
  },
  {
    "text": "actually warms up the service um without",
    "start": "1170200",
    "end": "1173520"
  },
  {
    "text": "any load to trigger classes to be loaded",
    "start": "1173520",
    "end": "1175559"
  },
  {
    "text": "or cash to be populated uh the",
    "start": "1175559",
    "end": "1177799"
  },
  {
    "text": "application will never really get warm",
    "start": "1177799",
    "end": "1179360"
  },
  {
    "text": "no matter how long you wait for the um",
    "start": "1179360",
    "end": "1182440"
  },
  {
    "text": "uh for that Readiness",
    "start": "1182440",
    "end": "1184320"
  },
  {
    "text": "probe if you can't easily pre-warm the",
    "start": "1184320",
    "end": "1187000"
  },
  {
    "text": "application actively uh then what's",
    "start": "1187000",
    "end": "1189520"
  },
  {
    "text": "needed is to allow new pods to be",
    "start": "1189520",
    "end": "1191200"
  },
  {
    "text": "registered as as targets and you know",
    "start": "1191200",
    "end": "1193240"
  },
  {
    "text": "let them pass the Readiness probe but",
    "start": "1193240",
    "end": "1195480"
  },
  {
    "text": "only begin receiving a relatively small",
    "start": "1195480",
    "end": "1198320"
  },
  {
    "text": "um number of requests to begin with uh",
    "start": "1198320",
    "end": "1200400"
  },
  {
    "text": "to to allow this warming up um and so in",
    "start": "1200400",
    "end": "1204400"
  },
  {
    "text": "for the ALB you know this is called the",
    "start": "1204400",
    "end": "1206679"
  },
  {
    "text": "slow start mode where the ALB will go",
    "start": "1206679",
    "end": "1209640"
  },
  {
    "text": "ahead and register those targets but",
    "start": "1209640",
    "end": "1212039"
  },
  {
    "text": "only you know send a ramp of requests",
    "start": "1212039",
    "end": "1214720"
  },
  {
    "text": "slowly incrementing the the level of",
    "start": "1214720",
    "end": "1216360"
  },
  {
    "text": "load uh to the new the new Targets in",
    "start": "1216360",
    "end": "1218679"
  },
  {
    "text": "the Target group uh and again your load",
    "start": "1218679",
    "end": "1221400"
  },
  {
    "text": "balance TR will have a similar",
    "start": "1221400",
    "end": "1224120"
  },
  {
    "text": "functionality um this might cause some",
    "start": "1224120",
    "end": "1226280"
  },
  {
    "text": "requests to have high latency uh but",
    "start": "1226280",
    "end": "1228720"
  },
  {
    "text": "those requests will warm the application",
    "start": "1228720",
    "end": "1230760"
  },
  {
    "text": "and then subsequent requests will be",
    "start": "1230760",
    "end": "1232720"
  },
  {
    "text": "will be",
    "start": "1232720",
    "end": "1235080"
  },
  {
    "start": "1235000",
    "end": "1425000"
  },
  {
    "text": "faster now let's talk about pod",
    "start": "1235120",
    "end": "1237280"
  },
  {
    "text": "disruption",
    "start": "1237280",
    "end": "1238400"
  },
  {
    "text": "budgets um using a pod disruption budget",
    "start": "1238400",
    "end": "1241679"
  },
  {
    "text": "really allows an application to specify",
    "start": "1241679",
    "end": "1244640"
  },
  {
    "text": "how many replicas must be remain in",
    "start": "1244640",
    "end": "1246679"
  },
  {
    "text": "service at any given point during",
    "start": "1246679",
    "end": "1248840"
  },
  {
    "text": "voluntary",
    "start": "1248840",
    "end": "1250080"
  },
  {
    "text": "disruptions um you know for instance",
    "start": "1250080",
    "end": "1252120"
  },
  {
    "text": "this is very useful during cluster",
    "start": "1252120",
    "end": "1253480"
  },
  {
    "text": "upgrades which can be disruptive as",
    "start": "1253480",
    "end": "1255880"
  },
  {
    "text": "nodes may be corded in drained and",
    "start": "1255880",
    "end": "1258159"
  },
  {
    "text": "removed during the process resulting in",
    "start": "1258159",
    "end": "1260640"
  },
  {
    "text": "pods being evicted and you know",
    "start": "1260640",
    "end": "1262600"
  },
  {
    "text": "terminated and then rescheduled on",
    "start": "1262600",
    "end": "1264600"
  },
  {
    "text": "different",
    "start": "1264600",
    "end": "1266840"
  },
  {
    "text": "nodes some common problems that we've",
    "start": "1267200",
    "end": "1269440"
  },
  {
    "text": "seen with pdbs um add into it are",
    "start": "1269440",
    "end": "1273240"
  },
  {
    "text": "sometimes the the pdbs are either",
    "start": "1273240",
    "end": "1275200"
  },
  {
    "text": "missing or misconfigured in a way where",
    "start": "1275200",
    "end": "1277760"
  },
  {
    "text": "the the pdb doesn't even select any",
    "start": "1277760",
    "end": "1279960"
  },
  {
    "text": "valid pods you know this is a problem",
    "start": "1279960",
    "end": "1281799"
  },
  {
    "text": "where the label selector is incorrect",
    "start": "1281799",
    "end": "1284640"
  },
  {
    "text": "and in this case it's just as if there",
    "start": "1284640",
    "end": "1286200"
  },
  {
    "text": "was no pdb U and really any PODS of the",
    "start": "1286200",
    "end": "1289559"
  },
  {
    "text": "application could be disrupted at any",
    "start": "1289559",
    "end": "1291360"
  },
  {
    "text": "time um the other common problem is you",
    "start": "1291360",
    "end": "1295240"
  },
  {
    "text": "might have a pdb configured for an",
    "start": "1295240",
    "end": "1297039"
  },
  {
    "text": "application that's in continual crash",
    "start": "1297039",
    "end": "1299080"
  },
  {
    "text": "Loop backoff State uh that that crashing",
    "start": "1299080",
    "end": "1302880"
  },
  {
    "text": "pod actually counts as a disruption and",
    "start": "1302880",
    "end": "1305799"
  },
  {
    "text": "so other pods will not get terminated",
    "start": "1305799",
    "end": "1309000"
  },
  {
    "text": "you know waiting you know and and if you",
    "start": "1309000",
    "end": "1312400"
  },
  {
    "text": "uh are trying to do some cluster",
    "start": "1312400",
    "end": "1313640"
  },
  {
    "text": "upgrades or other maintenance activities",
    "start": "1313640",
    "end": "1315720"
  },
  {
    "text": "on the cluster it could block those um",
    "start": "1315720",
    "end": "1319240"
  },
  {
    "text": "the other case we've seen add into it is",
    "start": "1319240",
    "end": "1321600"
  },
  {
    "text": "multiple pdbs configured to Target the",
    "start": "1321600",
    "end": "1324240"
  },
  {
    "text": "same pods so you essentially have two",
    "start": "1324240",
    "end": "1326559"
  },
  {
    "text": "pdbs for the same application this is",
    "start": "1326559",
    "end": "1329120"
  },
  {
    "text": "also bad because both of those pdbs are",
    "start": "1329120",
    "end": "1331840"
  },
  {
    "text": "evaluating uh the situation",
    "start": "1331840",
    "end": "1333600"
  },
  {
    "text": "independently and they kind of fight",
    "start": "1333600",
    "end": "1335400"
  },
  {
    "text": "over each other and end up not not",
    "start": "1335400",
    "end": "1338640"
  },
  {
    "text": "allowing um cluster upgrades and other",
    "start": "1338640",
    "end": "1341000"
  },
  {
    "text": "activities to go",
    "start": "1341000",
    "end": "1343679"
  },
  {
    "text": "forward uh so what are some of the best",
    "start": "1344159",
    "end": "1346520"
  },
  {
    "text": "practices to implement for pdb you know",
    "start": "1346520",
    "end": "1348919"
  },
  {
    "text": "first uh obviously create alerts for",
    "start": "1348919",
    "end": "1351200"
  },
  {
    "text": "pods and crash loop back off and then",
    "start": "1351200",
    "end": "1353000"
  },
  {
    "text": "quickly fix those problems there's you",
    "start": "1353000",
    "end": "1354799"
  },
  {
    "text": "know something wrong with your code you",
    "start": "1354799",
    "end": "1356559"
  },
  {
    "text": "shouldn't really let pods stay in a",
    "start": "1356559",
    "end": "1358760"
  },
  {
    "text": "crash loop back off for a long period of",
    "start": "1358760",
    "end": "1360679"
  },
  {
    "text": "time uh especially in a production",
    "start": "1360679",
    "end": "1362960"
  },
  {
    "text": "environment um if you don't really care",
    "start": "1362960",
    "end": "1365320"
  },
  {
    "text": "about those pods if they're still under",
    "start": "1365320",
    "end": "1366799"
  },
  {
    "text": "development then go ahead and delete the",
    "start": "1366799",
    "end": "1368559"
  },
  {
    "text": "pdb or delete the uh the deployment",
    "start": "1368559",
    "end": "1371400"
  },
  {
    "text": "object uh for the application itself uh",
    "start": "1371400",
    "end": "1374080"
  },
  {
    "text": "but otherwise you might be blocking some",
    "start": "1374080",
    "end": "1375720"
  },
  {
    "text": "critical",
    "start": "1375720",
    "end": "1377440"
  },
  {
    "text": "operations",
    "start": "1377440",
    "end": "1379200"
  },
  {
    "text": "you also want to make sure the pdb is",
    "start": "1379200",
    "end": "1380679"
  },
  {
    "text": "properly configured with the correct",
    "start": "1380679",
    "end": "1382440"
  },
  {
    "text": "selector and has a reasonable Max",
    "start": "1382440",
    "end": "1384840"
  },
  {
    "text": "unavailable setting um in general I",
    "start": "1384840",
    "end": "1387640"
  },
  {
    "text": "recommend using percentages instead of",
    "start": "1387640",
    "end": "1390240"
  },
  {
    "text": "specific replica counts uh that's",
    "start": "1390240",
    "end": "1392760"
  },
  {
    "text": "because as your application needs to",
    "start": "1392760",
    "end": "1394159"
  },
  {
    "text": "start scaling up if you start to you",
    "start": "1394159",
    "end": "1396120"
  },
  {
    "text": "know if you get more customers and you",
    "start": "1396120",
    "end": "1398200"
  },
  {
    "text": "have more and more replicas in your",
    "start": "1398200",
    "end": "1399960"
  },
  {
    "text": "application then you might forget to",
    "start": "1399960",
    "end": "1402640"
  },
  {
    "text": "also increase the absolute number of",
    "start": "1402640",
    "end": "1404440"
  },
  {
    "text": "disrupted replicas in your pdb so using",
    "start": "1404440",
    "end": "1407279"
  },
  {
    "text": "a percentage allows the pdb to grow",
    "start": "1407279",
    "end": "1410440"
  },
  {
    "text": "along with your app um also I'd say keep",
    "start": "1410440",
    "end": "1413880"
  },
  {
    "text": "the pdb configuration simple don't",
    "start": "1413880",
    "end": "1416840"
  },
  {
    "text": "specify both Min available and Maxin",
    "start": "1416840",
    "end": "1419400"
  },
  {
    "text": "available it'll just make things",
    "start": "1419400",
    "end": "1421000"
  },
  {
    "text": "confusing I pick one strategy and go",
    "start": "1421000",
    "end": "1423279"
  },
  {
    "text": "with",
    "start": "1423279",
    "end": "1425480"
  },
  {
    "start": "1425000",
    "end": "1536000"
  },
  {
    "text": "that uh so now I'd like to cover a few",
    "start": "1425679",
    "end": "1428200"
  },
  {
    "text": "takeaways that we discussed in the",
    "start": "1428200",
    "end": "1430360"
  },
  {
    "text": "talk um you know the first is that you",
    "start": "1430360",
    "end": "1433799"
  },
  {
    "text": "really can eliminate uh most",
    "start": "1433799",
    "end": "1436320"
  },
  {
    "text": "infrastructure uh 500 errors uh by",
    "start": "1436320",
    "end": "1439039"
  },
  {
    "text": "following a few resiliency best",
    "start": "1439039",
    "end": "1442000"
  },
  {
    "text": "practices um one which we're not",
    "start": "1442000",
    "end": "1444240"
  },
  {
    "text": "covering in this talk but you should",
    "start": "1444240",
    "end": "1445640"
  },
  {
    "text": "really do it is uh use some common",
    "start": "1445640",
    "end": "1448279"
  },
  {
    "text": "client resiliency patterns like retry",
    "start": "1448279",
    "end": "1450400"
  },
  {
    "text": "circuit breaker you know there's lots of",
    "start": "1450400",
    "end": "1452320"
  },
  {
    "text": "resources on how to do this and that's",
    "start": "1452320",
    "end": "1454600"
  },
  {
    "text": "really the first step um if your if your",
    "start": "1454600",
    "end": "1457320"
  },
  {
    "text": "server is also a client to other",
    "start": "1457320",
    "end": "1458919"
  },
  {
    "text": "dependencies you really need to to uh",
    "start": "1458919",
    "end": "1461840"
  },
  {
    "text": "Implement that so your clients are also",
    "start": "1461840",
    "end": "1464440"
  },
  {
    "text": "resilient um you need to understand the",
    "start": "1464440",
    "end": "1466760"
  },
  {
    "text": "Pod creation and termination life cycle",
    "start": "1466760",
    "end": "1469799"
  },
  {
    "text": "um and really use Readiness probes and",
    "start": "1469799",
    "end": "1472440"
  },
  {
    "text": "Readiness gates to control the traffic",
    "start": "1472440",
    "end": "1474960"
  },
  {
    "text": "uh to your pod um also realize that pods",
    "start": "1474960",
    "end": "1478240"
  },
  {
    "text": "can be terminated any time you know so",
    "start": "1478240",
    "end": "1480559"
  },
  {
    "text": "you need to handle Sig term and",
    "start": "1480559",
    "end": "1482360"
  },
  {
    "text": "gracefully shut down those pods clean up",
    "start": "1482360",
    "end": "1484840"
  },
  {
    "text": "after yourself and if needed you can use",
    "start": "1484840",
    "end": "1487480"
  },
  {
    "text": "the termination grace period and other",
    "start": "1487480",
    "end": "1489640"
  },
  {
    "text": "uh and a pre-stop hook when needed",
    "start": "1489640",
    "end": "1493159"
  },
  {
    "text": "um you also need to realize that uh that",
    "start": "1493159",
    "end": "1497279"
  },
  {
    "text": "there can be a gate Rush situation",
    "start": "1497279",
    "end": "1499000"
  },
  {
    "text": "especially when you're under heavy load",
    "start": "1499000",
    "end": "1500960"
  },
  {
    "text": "and you're trying to scale up new pods",
    "start": "1500960",
    "end": "1503200"
  },
  {
    "text": "um and you need to think of you know the",
    "start": "1503200",
    "end": "1505760"
  },
  {
    "text": "resiliency of new pods and so you",
    "start": "1505760",
    "end": "1509000"
  },
  {
    "text": "reducing the Pod startup time as much as",
    "start": "1509000",
    "end": "1510919"
  },
  {
    "text": "possible will definitely help uh but",
    "start": "1510919",
    "end": "1513039"
  },
  {
    "text": "also you need to use techniques like the",
    "start": "1513039",
    "end": "1515480"
  },
  {
    "text": "slow start and pre-warming uh to avoid",
    "start": "1515480",
    "end": "1518440"
  },
  {
    "text": "new pods getting more load than they can",
    "start": "1518440",
    "end": "1520760"
  },
  {
    "text": "handle uh and then lastly use pod",
    "start": "1520760",
    "end": "1523120"
  },
  {
    "text": "disruption budgets to protect your pod",
    "start": "1523120",
    "end": "1525840"
  },
  {
    "text": "um and make sure that you're always uh",
    "start": "1525840",
    "end": "1528120"
  },
  {
    "text": "have have as much uh resources as needed",
    "start": "1528120",
    "end": "1530720"
  },
  {
    "text": "to service your",
    "start": "1530720",
    "end": "1531960"
  },
  {
    "text": "application",
    "start": "1531960",
    "end": "1533880"
  },
  {
    "text": "um that's that's it for our talk",
    "start": "1533880",
    "end": "1538600"
  }
]