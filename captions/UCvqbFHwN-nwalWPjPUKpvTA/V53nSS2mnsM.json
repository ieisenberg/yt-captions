[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "there my name is Peter hunt hi I'm Renauld Patel I'm a principal engineer",
    "start": "30",
    "end": "6299"
  },
  {
    "text": "at Red Hat I'm a maintainer of Runcie the OCI runtime spec and cryo and I'm a",
    "start": "6299",
    "end": "13500"
  },
  {
    "text": "mean I've also worked for a Red Hat software engineer I've maintained cryo and also pod man and some other related",
    "start": "13500",
    "end": "20789"
  },
  {
    "text": "container technologies and today we're here to talk to you about cryo so if that's not what you want to listen",
    "start": "20789",
    "end": "27420"
  },
  {
    "text": "to you should probably leave so here we are cryo all the runtime a container",
    "start": "27420",
    "end": "34110"
  },
  {
    "text": "needs so this is an introduction talk so let's do an introduction",
    "start": "34110",
    "end": "39300"
  },
  {
    "start": "36000",
    "end": "201000"
  },
  {
    "text": "what is cryo what do we mean by craft so cryo is a two-part acronym so the first",
    "start": "39300",
    "end": "47340"
  },
  {
    "text": "part of it CRI sense for the container of runtime interface the container runtime interface is the way that the",
    "start": "47340",
    "end": "54870"
  },
  {
    "text": "cubelet asks a runtime to create containers pull images create pods and",
    "start": "54870",
    "end": "60510"
  },
  {
    "text": "alike in so for a bit of a history lesson in the beginning there was just",
    "start": "60510",
    "end": "66420"
  },
  {
    "text": "docker and the qubit directly talked to the docker socket asking it to create containers for it then came along rocket",
    "start": "66420",
    "end": "73860"
  },
  {
    "text": "and the entire the rocket is another core OS runtime that worked with",
    "start": "73860",
    "end": "79770"
  },
  {
    "text": "kubernetes and the way that they implemented it in the cubelet was they said if we're using rocket then execute",
    "start": "79770",
    "end": "85890"
  },
  {
    "text": "the rocket method otherwise execute the docker method and then came along some other VM based technologies and then the",
    "start": "85890",
    "end": "93390"
  },
  {
    "text": "qubit maintains our like whoa wait okay let's slow down so they created the CRI they contain a runtime interface and",
    "start": "93390",
    "end": "99840"
  },
  {
    "text": "basically what it does is it's the it asked container runtime to fulfill all",
    "start": "99840",
    "end": "106860"
  },
  {
    "text": "of the needs that the qubit has for a container runtime so it is a the CRI",
    "start": "106860",
    "end": "111930"
  },
  {
    "text": "defines how implementations asked for",
    "start": "111930",
    "end": "117710"
  },
  {
    "text": "cube will ask them to create a container or create a pod or pull an image exact",
    "start": "117710",
    "end": "124350"
  },
  {
    "text": "into a container all of these various things so cryo is an implementation of the container runtime interface what",
    "start": "124350",
    "end": "131160"
  },
  {
    "text": "kind of implementation and see I compliant one so that's what the O stands for is OCI so the OCI is is a",
    "start": "131160",
    "end": "138720"
  },
  {
    "text": "standards board that and a set of projects that standardizes the way that",
    "start": "138720",
    "end": "144890"
  },
  {
    "text": "containers are run container image formats and the like so the OCI",
    "start": "144890",
    "end": "152550"
  },
  {
    "text": "was a good way to kind of make a basis for container technologies that other container managers and runtimes build on",
    "start": "152550",
    "end": "158700"
  },
  {
    "text": "top of so cryo supports all kinds of content OC i compliant container images",
    "start": "158700",
    "end": "164550"
  },
  {
    "text": "including the legacy docker one supports any container registry and protocols",
    "start": "164550",
    "end": "171000"
  },
  {
    "text": "that the OCI defines for between runtimes and registries and it supports",
    "start": "171000",
    "end": "177360"
  },
  {
    "text": "all OCI container runtimes so we have run see we have cata and we run integration tests against both of those",
    "start": "177360",
    "end": "183720"
  },
  {
    "text": "there's a c1 that c run that someone in Red Hat is developing we got G visor all",
    "start": "183720",
    "end": "189450"
  },
  {
    "text": "of them cryo will run with and you can specialize your container needs there so",
    "start": "189450",
    "end": "196860"
  },
  {
    "text": "that's an introduction the question then follows why would I use cryo what kind",
    "start": "196860",
    "end": "203880"
  },
  {
    "start": "201000",
    "end": "355000"
  },
  {
    "text": "of value proposition does cryo give so the number one thing that we like to say that is great about cryo is it's only",
    "start": "203880",
    "end": "211080"
  },
  {
    "text": "for kubernetes so other container runtimes have a lot of different masters",
    "start": "211080",
    "end": "217590"
  },
  {
    "text": "that they have to serve they have their you know there are clients that want to",
    "start": "217590",
    "end": "223650"
  },
  {
    "text": "build containers there are clients that want to push containers to container registries but the cubelet doesn't need",
    "start": "223650",
    "end": "228810"
  },
  {
    "text": "to do any of those things and thus neither does cryo so cryo is only built",
    "start": "228810",
    "end": "233820"
  },
  {
    "text": "for kubernetes cryo is kubernetes only lover as we like to say or the other way",
    "start": "233820",
    "end": "240660"
  },
  {
    "text": "around kubernetes does cryos only lover and as such we can do things like run",
    "start": "240660",
    "end": "247110"
  },
  {
    "text": "the entire kubernetes end-to-end conformance suite against cryo for every PR merged so we're guaranteed to be",
    "start": "247110",
    "end": "253800"
  },
  {
    "text": "conformant with the way that kubernetes expects a runtime to act we also have run against the CRI tests and also our",
    "start": "253800",
    "end": "262560"
  },
  {
    "text": "own integration tests so we run like a ton of tests it's crazy and it takes a long",
    "start": "262560",
    "end": "268510"
  },
  {
    "text": "before anything gets merged there's also us being we version",
    "start": "268510",
    "end": "274970"
  },
  {
    "text": "ourselves in lockstep with communities which simplifies a developer's choice or",
    "start": "274970",
    "end": "280910"
  },
  {
    "text": "an admin story to use cryo with other runtimes your questions sometimes",
    "start": "280910",
    "end": "286360"
  },
  {
    "text": "becomes what version of X runtime works with kubernetes one dot X and you never",
    "start": "286360",
    "end": "295040"
  },
  {
    "text": "have to ask that question with cryo it's always going to be kubernetes 116 works with cryo 116 and so on so that makes it",
    "start": "295040",
    "end": "304670"
  },
  {
    "text": "easier and basically the intention with cryo primarily is to make contain running containers in production boring",
    "start": "304670",
    "end": "310640"
  },
  {
    "text": "and secure and we'll talk a little bit more about secure in a little bit but the boring aspect is all of because cryo",
    "start": "310640",
    "end": "317450"
  },
  {
    "text": "only works with kubernetes you can expect cryo to run precisely with the",
    "start": "317450",
    "end": "322670"
  },
  {
    "text": "way that the CRI expects in a reliable manner and you can choose to use cryo deploy it and forget about it we kind of",
    "start": "322670",
    "end": "330380"
  },
  {
    "text": "like to liken using cryo in production as choosing XFS for the file system on",
    "start": "330380",
    "end": "336680"
  },
  {
    "text": "your node you make that decision once and then you forget about it until you know unless it breaks which we like to",
    "start": "336680",
    "end": "343370"
  },
  {
    "text": "say we you know we don't really want to do but that's you know you're not gonna you're not really like fussing over the",
    "start": "343370",
    "end": "350060"
  },
  {
    "text": "decision after day one and we like to keep proud of that way another reason",
    "start": "350060",
    "end": "356170"
  },
  {
    "start": "355000",
    "end": "445000"
  },
  {
    "text": "why to use cryo so cryo is built off of the standard components it's OCI",
    "start": "356170",
    "end": "361730"
  },
  {
    "text": "compliant which allows us to use some different tools that we work with to be",
    "start": "361730",
    "end": "367630"
  },
  {
    "text": "so it's compatible so we have our container storage library that manages",
    "start": "367630",
    "end": "373400"
  },
  {
    "text": "so when you just create a container you have to slap it down on disk and a copy",
    "start": "373400",
    "end": "378560"
  },
  {
    "text": "on write style so that you know you have your lower-end merged stairs to be shared among all these different",
    "start": "378560",
    "end": "384410"
  },
  {
    "text": "containers and upper doors where you write to container storage manages that on the filesystem you don't need a",
    "start": "384410",
    "end": "391610"
  },
  {
    "text": "daemon to do that containers image is used for pulling images from registries",
    "start": "391610",
    "end": "396820"
  },
  {
    "text": "and is able to you know pull from any sort of container registry and a lot of",
    "start": "396820",
    "end": "403000"
  },
  {
    "text": "different formats and the like we had supporting mirroring between registries",
    "start": "403000",
    "end": "409030"
  },
  {
    "text": "and all of this we use CNI you know de facto standard for container networking",
    "start": "409030",
    "end": "415420"
  },
  {
    "text": "now for all of our networking so we don't reinvent the wheel with this you know CNI is definitely you know",
    "start": "415420",
    "end": "420730"
  },
  {
    "text": "dominated this space so any C&I plugin that you want to use you can plop right into cryo and it just works and we",
    "start": "420730",
    "end": "428320"
  },
  {
    "text": "support any OCI runtime so any container runtime that you want to use if for instance we do - we test against cotta",
    "start": "428320",
    "end": "434530"
  },
  {
    "text": "so you can run your cotta VMs or your cotta containers inside of a VM with",
    "start": "434530",
    "end": "441100"
  },
  {
    "text": "cryo and it just works as expected why would I use cryo",
    "start": "441100",
    "end": "447880"
  },
  {
    "start": "445000",
    "end": "562000"
  },
  {
    "text": "it's a minimal Daymond has anyone ever met this character there's you know it's it's lived in a couple of different",
    "start": "447880",
    "end": "453340"
  },
  {
    "text": "talks how about this devilish figure so",
    "start": "453340",
    "end": "459400"
  },
  {
    "text": "here's Dan Walsh he's been going on he's he's currently occupying the booth where",
    "start": "459400",
    "end": "465280"
  },
  {
    "text": "where we've left from which we've left but he has for a couple of years been on",
    "start": "465280",
    "end": "472060"
  },
  {
    "text": "a tirade against big fat container Damon's ones that take over the entirety",
    "start": "472060",
    "end": "477190"
  },
  {
    "text": "of the container space and do everything under the Sun for a container you don't",
    "start": "477190",
    "end": "482380"
  },
  {
    "text": "need that you know you don't need a container Damon to be able to write on to a filesystem in a certain manner or",
    "start": "482380",
    "end": "489490"
  },
  {
    "text": "to pull a tarball and then put it on to a disk you know using HTTP so cryo is",
    "start": "489490",
    "end": "498390"
  },
  {
    "text": "only for the CRI and it's as little of a daemon as possible for the CRI",
    "start": "498390",
    "end": "504669"
  },
  {
    "text": "so it uses it and an example of that is for all of our so for instance for cryo",
    "start": "504669",
    "end": "513729"
  },
  {
    "text": "all of the containers that run under it are actually only managed by cryo they're not child processes of the cryo",
    "start": "513729",
    "end": "519760"
  },
  {
    "text": "Damon so that allows us to do things like restart the day men with containers running and those containers aren't",
    "start": "519760",
    "end": "525850"
  },
  {
    "text": "disturbed because cryo is not their parent there there's a monitor process that cry all this talks to and we'll",
    "start": "525850",
    "end": "531580"
  },
  {
    "text": "talk about that when we get into architecture but cryo is not is not a monolith Damon it's just",
    "start": "531580",
    "end": "538600"
  },
  {
    "text": "about it's just exactly what the cubelet needs and nothing more and finally we",
    "start": "538600",
    "end": "546129"
  },
  {
    "text": "are security focused so another thing that Dan Walsh has you know always pushed is can security and you know",
    "start": "546129",
    "end": "554410"
  },
  {
    "text": "really push container security who here has SELinux enabled whoo that's",
    "start": "554410",
    "end": "560110"
  },
  {
    "text": "awesome I'm not actually sure I do sorry Dan so we so cryo has been",
    "start": "560110",
    "end": "567459"
  },
  {
    "start": "562000",
    "end": "667000"
  },
  {
    "text": "designed to be secured by default so we have so cryo will you know take a",
    "start": "567459",
    "end": "573759"
  },
  {
    "text": "container process and give it a su Linux label if it wasn't specified and that allows us to prevent you know if you",
    "start": "573759",
    "end": "581079"
  },
  {
    "text": "mount a volume into the host and the the container isn't really expected to be",
    "start": "581079",
    "end": "586869"
  },
  {
    "text": "able to do much with it like we're gonna block you there because selinux",
    "start": "586869",
    "end": "593259"
  },
  {
    "text": "standpoint that's a process breaking out of its you know desired needs we ship by",
    "start": "593259",
    "end": "601029"
  },
  {
    "text": "default pretty low PIDs limits so that you know 1024 so that and it's a lot you",
    "start": "601029",
    "end": "607420"
  },
  {
    "text": "can adjust the page limit and crowd directly to prevent fork bomb attacks for instance we ship with fewer as few",
    "start": "607420",
    "end": "616720"
  },
  {
    "text": "capability linux capabilities as possible other container runtimes for",
    "start": "616720",
    "end": "621730"
  },
  {
    "text": "instance give make node and net raw because they have to fulfill every",
    "start": "621730",
    "end": "626769"
  },
  {
    "text": "single use case that exists under the Sun for running and playing with",
    "start": "626769",
    "end": "631779"
  },
  {
    "text": "containers but cryo doesn't need to run with or play with containers it's only for using them in production so it needs",
    "start": "631779",
    "end": "639879"
  },
  {
    "text": "it has a lot fewer capabilities that it needs and finally know that actually",
    "start": "639879",
    "end": "647559"
  },
  {
    "text": "that's it when it's it's by being a minimal daemon and only fulfilling the CRI it also has",
    "start": "647559",
    "end": "653709"
  },
  {
    "text": "a lower attack surface as such so you know there's a lot of vulnerabilities that come in to copy and content into a",
    "start": "653709",
    "end": "659290"
  },
  {
    "text": "container and cryo can't do that so there's there's no possibility of that happening",
    "start": "659290",
    "end": "665980"
  },
  {
    "text": "so we're now going to go a little bit into the architecture of cryo so what",
    "start": "665980",
    "end": "672220"
  },
  {
    "start": "667000",
    "end": "860000"
  },
  {
    "text": "happens is the cubelet talks over G RPC to the crowd Damon and the crowd Damon then responds and you know takes the",
    "start": "672220",
    "end": "678250"
  },
  {
    "text": "according action and then responds there are two parts of the CRI that cry",
    "start": "678250",
    "end": "683770"
  },
  {
    "text": "obviously implements there's the image service which is responsible for pulling and listing images and deleting them not",
    "start": "683770",
    "end": "691510"
  },
  {
    "text": "pushing because coober that doesn't need to do that and that's all managed through containers image and then",
    "start": "691510",
    "end": "697750"
  },
  {
    "text": "there's the much more exciting part of it the runtime service which actually gets into the nitty-gritty of how to use",
    "start": "697750",
    "end": "703060"
  },
  {
    "text": "containers so it's you know run this pod and create this container and exact into this container oh this is so the runtime",
    "start": "703060",
    "end": "711910"
  },
  {
    "text": "service manages this to create a container we use the OCI generator so we create our config blob and that config",
    "start": "711910",
    "end": "719230"
  },
  {
    "text": "is then passed to a runtime and run the",
    "start": "719230",
    "end": "724930"
  },
  {
    "text": "cryo uses the cni it's and set up all the networking for inside of the pod and for outside of the pod if you're talking",
    "start": "724930",
    "end": "731110"
  },
  {
    "text": "to the host network or if you're just or if you're just a container talking to or your own network use CNI for that and",
    "start": "731110",
    "end": "739810"
  },
  {
    "text": "then so I'm going to shift gears a little bit and talk about the arcade architecture and cryo so a cryopod is",
    "start": "739810",
    "end": "748420"
  },
  {
    "text": "consist it always consists usually consists of an infant container which is",
    "start": "748420",
    "end": "753850"
  },
  {
    "text": "used to pin the Linux namespaces though we're moving away from that model but we'd still need it to pin the pid'",
    "start": "753850",
    "end": "759760"
  },
  {
    "text": "namespace to act as hid one inside of the pin namespace and Reap daemon read",
    "start": "759760",
    "end": "767380"
  },
  {
    "text": "the processes that like if a container dies we don't want that to be a zombie process each container inside of a pod",
    "start": "767380",
    "end": "774040"
  },
  {
    "text": "has con mon instance and conmen is the mad secret sauce to allow cryo to be a",
    "start": "774040",
    "end": "780910"
  },
  {
    "text": "minimal daemon con Mon is a monitoring process that actually is responsible for listening to the container so come on is",
    "start": "780910",
    "end": "787240"
  },
  {
    "text": "responsible for keeping the standard in open if we need to we need to exec into",
    "start": "787240",
    "end": "796450"
  },
  {
    "text": "the container it's responsible for writing all of the standard out and standard error to log files that the key",
    "start": "796450",
    "end": "802540"
  },
  {
    "text": "bullet will then read and manage con man is responsible for managing the",
    "start": "802540",
    "end": "808870"
  },
  {
    "text": "lifecycle of the container so if the container dies its exit code is given to",
    "start": "808870",
    "end": "814150"
  },
  {
    "text": "con man its parent and then con man writes that to an exit file that then cryo reads had to know that the",
    "start": "814150",
    "end": "820990"
  },
  {
    "text": "container died and con man also reports out of memory events when or meant that",
    "start": "820990",
    "end": "829060"
  },
  {
    "text": "the container was killed from whom so because Kanban is there",
    "start": "829060",
    "end": "834790"
  },
  {
    "text": "listening on to the container actually like hanging out with the container the",
    "start": "834790",
    "end": "840570"
  },
  {
    "text": "cryo is able to disappear for a second be restarted change the configuration variable whatever and come back up and",
    "start": "840570",
    "end": "848230"
  },
  {
    "text": "then you know check the state of all the con runs and that you know keeps cry out nice and slim we like that so now first",
    "start": "848230",
    "end": "857250"
  },
  {
    "text": "demos I'll pass it off to man all right",
    "start": "857250",
    "end": "862560"
  },
  {
    "start": "860000",
    "end": "1205000"
  },
  {
    "text": "so here I brought up a local up cluster using cryo and let's see how that",
    "start": "862560",
    "end": "869970"
  },
  {
    "text": "actually works so this is the script I",
    "start": "869970",
    "end": "877840"
  },
  {
    "text": "used and the most important part here is you're setting the container runtime end point to point to the cryo socket so",
    "start": "877840",
    "end": "884590"
  },
  {
    "text": "that makes the cubelet top two cryo instead of docker or any other default setup now we can examine and see if the",
    "start": "884590",
    "end": "893080"
  },
  {
    "text": "node is up it says it's ready so we're good to go so let's start off with a",
    "start": "893080",
    "end": "899680"
  },
  {
    "text": "simple nginx pod first so it's up and",
    "start": "899680",
    "end": "908710"
  },
  {
    "text": "running let's try to curl it we can",
    "start": "908710",
    "end": "914080"
  },
  {
    "text": "reach it now let's see if we can get logs back from that container so we will",
    "start": "914080",
    "end": "920830"
  },
  {
    "text": "see a get for what we did let's try a couple more and then you can see that",
    "start": "920830",
    "end": "927340"
  },
  {
    "text": "the it's registering two more and get yes so so that covers like starting a",
    "start": "927340",
    "end": "934869"
  },
  {
    "text": "simple pod just like you would but with cube CTL next example is exacting into",
    "start": "934869",
    "end": "942429"
  },
  {
    "text": "your pod so exec is useful for like getting into the namespaces of the pod",
    "start": "942429",
    "end": "947889"
  },
  {
    "text": "and examining it so now we are inside the pod and this is a view inside that",
    "start": "947889",
    "end": "953799"
  },
  {
    "text": "Ingenix container so that covers logging",
    "start": "953799",
    "end": "959350"
  },
  {
    "text": "an exec which are one of the two CRI API calls let's start another container now",
    "start": "959350",
    "end": "968910"
  },
  {
    "text": "so now I'm running a fedora shell and",
    "start": "973949",
    "end": "983669"
  },
  {
    "text": "it's up and running so we're gonna attach to it and now we are in inside",
    "start": "983669",
    "end": "993730"
  },
  {
    "text": "that container which is running so Peter talked about how cryo ships with fewer",
    "start": "993730",
    "end": "998829"
  },
  {
    "text": "capabilities out of the box so let's take a look at what capabilities are",
    "start": "998829",
    "end": "1004679"
  },
  {
    "text": "enabled inside this container so take a look here and then see let's try the",
    "start": "1004679",
    "end": "1010829"
  },
  {
    "text": "notice that we don't have MK nod or is the natural so let's try pinging the",
    "start": "1010829",
    "end": "1017009"
  },
  {
    "text": "other container and see if it actually works so it works so how did that work without capmetro so for a moment we can",
    "start": "1017009",
    "end": "1024959"
  },
  {
    "text": "jump to cryo configuration",
    "start": "1024959",
    "end": "1033230"
  },
  {
    "text": "so this is a list of capabilities so we have dropped cap Metro but then we are",
    "start": "1037040",
    "end": "1042089"
  },
  {
    "text": "enabling another scuttle that allows us to ping without cap Metro so you don't have to give it to your containers also",
    "start": "1042089",
    "end": "1052500"
  },
  {
    "text": "note here that we are using system D as a C group manager and that has some advantages in using system the tools to",
    "start": "1052500",
    "end": "1059640"
  },
  {
    "text": "be able to monitor and take a look at the processes running inside your container so we talked about ASA Linux",
    "start": "1059640",
    "end": "1073320"
  },
  {
    "text": "so is anyone here familiar with the syntax how it works okay so SELinux is",
    "start": "1073320",
    "end": "1080220"
  },
  {
    "text": "basically assigning process labels and then assigning labels to files and then",
    "start": "1080220",
    "end": "1087090"
  },
  {
    "text": "there are rules saying which label can access which files so by default cryo",
    "start": "1087090",
    "end": "1092700"
  },
  {
    "text": "will give a unique acid Onix process label to each container that is started inside a pod so all the all the",
    "start": "1092700",
    "end": "1099480"
  },
  {
    "text": "containers in the pod need to talk to me to be able to talk to each other so they get the same label but every pod has a",
    "start": "1099480",
    "end": "1106020"
  },
  {
    "text": "different security label so for example",
    "start": "1106020",
    "end": "1111470"
  },
  {
    "text": "this container has this context and this is the only container slash pod that has",
    "start": "1113060",
    "end": "1121080"
  },
  {
    "text": "this context and its root filesystem in run C is also labeled with this content",
    "start": "1121080",
    "end": "1127500"
  },
  {
    "text": "so it can only access the files created for this container it can't access",
    "start": "1127500",
    "end": "1133170"
  },
  {
    "text": "anything else now to simulate a breakout what I have done here is for example say you re running some process its root and",
    "start": "1133170",
    "end": "1140790"
  },
  {
    "text": "it was able to break outside of the container because of a zero-day issue now will it be able to touch your hosts",
    "start": "1140790",
    "end": "1148710"
  },
  {
    "text": "files so what I've done here is just",
    "start": "1148710",
    "end": "1152990"
  },
  {
    "text": "bind mounted the HC password to simulate the process being able to somehow see",
    "start": "1154700",
    "end": "1159930"
  },
  {
    "text": "the HC password from the host and we'll try to access it permission denied so",
    "start": "1159930",
    "end": "1167310"
  },
  {
    "text": "that's s Linux action basically even if your process breaks out of your container SELinux",
    "start": "1167310",
    "end": "1173360"
  },
  {
    "text": "will prevent it from causing harm to other parts or it will protect the hosts file some being modified so we also",
    "start": "1173360",
    "end": "1184100"
  },
  {
    "text": "talked about fork bombs so let's try",
    "start": "1184100",
    "end": "1189470"
  },
  {
    "text": "that out so I'm trying to launch 50",
    "start": "1189470",
    "end": "1200780"
  },
  {
    "text": "sleep processes and note that we are already in a shell so we were able to",
    "start": "1200780",
    "end": "1207020"
  },
  {
    "start": "1205000",
    "end": "1400000"
  },
  {
    "text": "launch 49 and the first one is our shell and why did that happen",
    "start": "1207020",
    "end": "1212930"
  },
  {
    "text": "because we make use of a feature in C",
    "start": "1212930",
    "end": "1219350"
  },
  {
    "text": "groups called pit C group limit so just for demonstration we set the limit to 50",
    "start": "1219350",
    "end": "1227270"
  },
  {
    "text": "here but cryo ships with a default of thousand twenty-four so by default like I would prevent four bombs from",
    "start": "1227270",
    "end": "1232580"
  },
  {
    "text": "happening and you can tune that value according to your workloads needs next",
    "start": "1232580",
    "end": "1243920"
  },
  {
    "text": "let's take a look at some of the behind the scenes what's happening so so cry",
    "start": "1243920",
    "end": "1254750"
  },
  {
    "text": "CDL so cry CTL is a is a as a debugging tool that can talk directly to cry out",
    "start": "1254750",
    "end": "1260540"
  },
  {
    "text": "to get information back from port acting docker PS 4G equivalent so there's a cry CTL PS and now we have a web container",
    "start": "1260540",
    "end": "1269450"
  },
  {
    "text": "so let's try to get more information about it so we we saw that how we are",
    "start": "1269450",
    "end": "1276020"
  },
  {
    "text": "using the system D has a C group manager and the advantages is you can do system",
    "start": "1276020",
    "end": "1282020"
  },
  {
    "text": "control status cryo and then specify the",
    "start": "1282020",
    "end": "1288500"
  },
  {
    "text": "ID that you see here and then you get a nice view of what's running inside your container and then we also said that",
    "start": "1288500",
    "end": "1296030"
  },
  {
    "text": "Kahneman is actually the parent process of all the processes running inside any container of okra so",
    "start": "1296030",
    "end": "1303020"
  },
  {
    "text": "how do we get a view of that simple so do cryo - convo knife in this and then",
    "start": "1303020",
    "end": "1309140"
  },
  {
    "text": "you get a view of Kannan now let's dig deeper now you can see how Kahneman is a",
    "start": "1309140",
    "end": "1321650"
  },
  {
    "text": "parent process for nginx so that allows",
    "start": "1321650",
    "end": "1327020"
  },
  {
    "text": "us to basically restart cryo and your",
    "start": "1327020",
    "end": "1339770"
  },
  {
    "text": "containers are still up like that nothing nothing happens to that container you can see that the pentane",
    "start": "1339770",
    "end": "1347930"
  },
  {
    "text": "is still running so that allows us to basically update cryo with some fixes and still not affect your running",
    "start": "1347930",
    "end": "1354800"
  },
  {
    "text": "workloads",
    "start": "1354800",
    "end": "1357220"
  },
  {
    "text": "and I think that covers the basic operations of what you can do with cryo",
    "start": "1369980",
    "end": "1375139"
  },
  {
    "text": "so what we were demonstrated is like you can do anything that is expected of a container runtime using cryo and you",
    "start": "1375139",
    "end": "1381980"
  },
  {
    "text": "have tools like systemctl and crisis ATL to be able to debug and dig deeper if",
    "start": "1381980",
    "end": "1388850"
  },
  {
    "text": "you need to understand more so now we'll open it up to questions if you want to",
    "start": "1388850",
    "end": "1394159"
  },
  {
    "text": "see anything or if you have any questions both cry out we'll just want",
    "start": "1394159",
    "end": "1406639"
  },
  {
    "start": "1400000",
    "end": "1479000"
  },
  {
    "text": "to understand if cryo is a runtime or it is not a runtime because you say that it",
    "start": "1406639",
    "end": "1412130"
  },
  {
    "text": "calls run C right yeah so cryo is it",
    "start": "1412130",
    "end": "1418220"
  },
  {
    "text": "implements the Container runtime interface cryo calls into container runtimes technically you could more call",
    "start": "1418220",
    "end": "1424850"
  },
  {
    "text": "it a container manager but sometimes container on time and container manager is interchangeable because you know the",
    "start": "1424850",
    "end": "1432889"
  },
  {
    "text": "it's not you know not many people use the term container manager so it's container runtime is kind of",
    "start": "1432889",
    "end": "1438110"
  },
  {
    "text": "all-encompassing but so at the lowest level like run C implements the code which is calling",
    "start": "1438110",
    "end": "1445279"
  },
  {
    "text": "into the system calls for spawning a container process like setting up the C",
    "start": "1445279",
    "end": "1450500"
  },
  {
    "text": "groups on sharing the namespaces and so on but cryo is doing more it's also",
    "start": "1450500",
    "end": "1456049"
  },
  {
    "text": "managing your images and it's basically satisfying the requirements of the cubelet it's like a think of it as a",
    "start": "1456049",
    "end": "1461470"
  },
  {
    "text": "Orchestrator like a container Orchestrator alga no no level runtime it's like the middle man between the",
    "start": "1461470",
    "end": "1468830"
  },
  {
    "text": "cube lid and the runtime yeah more questions",
    "start": "1468830",
    "end": "1474669"
  },
  {
    "start": "1479000",
    "end": "1593000"
  },
  {
    "text": "this is in continuation to some of my questions that I asked offline as well so just wanted to understand more on the",
    "start": "1480110",
    "end": "1487250"
  },
  {
    "text": "differences between how cry was used was his continuity because if I were to use continuity instead of cryo I would use a",
    "start": "1487250",
    "end": "1494750"
  },
  {
    "text": "continuity shame and then it would talk to continuity and then it would do so I'm thinking of cryo as here a better",
    "start": "1494750",
    "end": "1501260"
  },
  {
    "text": "replacement to using continuity in that fashion so would be glad if you could",
    "start": "1501260",
    "end": "1506450"
  },
  {
    "text": "elaborate more on this like so technically container D and cry like",
    "start": "1506450",
    "end": "1511610"
  },
  {
    "text": "operate in the same space and the container D will also need a CRI",
    "start": "1511610",
    "end": "1516620"
  },
  {
    "text": "implementation which is what you are referring to as a swim but CIO being Cuban itis focus doesn't have the",
    "start": "1516620",
    "end": "1521960"
  },
  {
    "text": "traditional layer we are just implementing the CRI directly and because we don't care about any other",
    "start": "1521960",
    "end": "1528550"
  },
  {
    "text": "clients so that hop is reduced and out of the box like support for a ceramics",
    "start": "1528550",
    "end": "1534920"
  },
  {
    "text": "and other features is better and one more thing I would call out is like our",
    "start": "1534920",
    "end": "1540800"
  },
  {
    "text": "container monitor Kanban is written in C to be efficient and also since we are",
    "start": "1540800",
    "end": "1545870"
  },
  {
    "text": "like the way OCI runtimes work you always need a container monitor process",
    "start": "1545870",
    "end": "1551180"
  },
  {
    "text": "and when you're running say 100 pods you're talking about 200 containers and",
    "start": "1551180",
    "end": "1556400"
  },
  {
    "text": "200 instances the advantage of writing it and see is you can dynamically link to the library so your memory per",
    "start": "1556400",
    "end": "1562700"
  },
  {
    "text": "process overhead for the Kanban process is very low even when you have a lot of containers and ports running thanks",
    "start": "1562700",
    "end": "1569540"
  },
  {
    "text": "would you know how continuity would monitor the containers I played last I loop there's a shim but which is in go I",
    "start": "1569540",
    "end": "1577100"
  },
  {
    "text": "think okay thanks any more",
    "start": "1577100",
    "end": "1588640"
  },
  {
    "text": "so I guess my question is about stability and scale like we we run large",
    "start": "1592990",
    "end": "1598070"
  },
  {
    "start": "1593000",
    "end": "1725000"
  },
  {
    "text": "shared clusters and we have problems with the stability of our run time like when we we get situation the word knows",
    "start": "1598070",
    "end": "1604430"
  },
  {
    "text": "just can no longer schedule pause and things and we use docker and we're",
    "start": "1604430",
    "end": "1609530"
  },
  {
    "text": "considering using cryo is there something about the architecture that should provide more stability so I think",
    "start": "1609530",
    "end": "1616960"
  },
  {
    "text": "we also like a dread had a run docker in production and we learnt lessons there",
    "start": "1616960",
    "end": "1622880"
  },
  {
    "text": "with issues that we saw at the customer's listen and design cryo from",
    "start": "1622880",
    "end": "1628490"
  },
  {
    "text": "the beginning to address those problems like for example crys very cuban at is",
    "start": "1628490",
    "end": "1633680"
  },
  {
    "text": "focus right so one operation that the cubelet does frequently is missed everything this is the containers again",
    "start": "1633680",
    "end": "1639710"
  },
  {
    "text": "and again so we wanted to make sure that that operation is very fast so we do a",
    "start": "1639710",
    "end": "1644720"
  },
  {
    "text": "lot of caching in that layer so we don't have to call to get the runtime state",
    "start": "1644720",
    "end": "1650720"
  },
  {
    "text": "unless absolutely needed and then we get the state asynchronously using iota v and con one writes the exit file so we",
    "start": "1650720",
    "end": "1657620"
  },
  {
    "text": "kind of learn lessons from running da current production and design cryo to do",
    "start": "1657620",
    "end": "1663050"
  },
  {
    "text": "better than then docker like our plug numbers are better than dr. Alec since we've now run cryo in production that",
    "start": "1663050",
    "end": "1669710"
  },
  {
    "text": "Red Hat in for X so we have that comparison and the things like being",
    "start": "1669710",
    "end": "1676220"
  },
  {
    "text": "able to update cryo without affecting the workloads and so on so I would",
    "start": "1676220",
    "end": "1681980"
  },
  {
    "text": "encourage you to give it a try what's your preference for runtime yeah so we",
    "start": "1681980",
    "end": "1687110"
  },
  {
    "text": "be used run see right now but we are looking into running cotta in production as well and the use cases we think cata",
    "start": "1687110",
    "end": "1694190"
  },
  {
    "text": "would work very well is where you want strong isolation between clients like if",
    "start": "1694190",
    "end": "1699470"
  },
  {
    "text": "you try to do multi-tenancy or if you're trying to do privileged operations like you want to do builds inside your pods",
    "start": "1699470",
    "end": "1705430"
  },
  {
    "text": "then you would want to give more capelet capabilities to your pods and having",
    "start": "1705430",
    "end": "1710930"
  },
  {
    "text": "that VM isolation makes sense for such use cases",
    "start": "1710930",
    "end": "1715600"
  },
  {
    "text": "oh yes thank you for the presentation",
    "start": "1718059",
    "end": "1727509"
  },
  {
    "start": "1725000",
    "end": "1771000"
  },
  {
    "text": "you mentioned that you didn't implement copying files into the container with",
    "start": "1727509",
    "end": "1733210"
  },
  {
    "text": "cryo does that affect either cout cuddle or OC our sinker CPE functionality no",
    "start": "1733210",
    "end": "1741659"
  },
  {
    "text": "all of those work so those those features work but as you know like but",
    "start": "1741659",
    "end": "1747369"
  },
  {
    "text": "cubes CTL CP has had a lot of security issues over the past years and there's",
    "start": "1747369",
    "end": "1753580"
  },
  {
    "text": "some proposals to just get rid of it entirely so those operations should still work so",
    "start": "1753580",
    "end": "1770529"
  },
  {
    "text": "potentially dumb question where thou when the container crashes like really often very fast you often can't get any",
    "start": "1770529",
    "end": "1777099"
  },
  {
    "start": "1771000",
    "end": "1795000"
  },
  {
    "text": "logs so if using cryo instead would that help so I think that there's a Cuban it",
    "start": "1777099",
    "end": "1783190"
  },
  {
    "text": "is level cubelet level setting and it will retain like one or two last containers so you can still access the",
    "start": "1783190",
    "end": "1790259"
  },
  {
    "text": "logs from the previous crashed instance so if the containers crashing like if",
    "start": "1790259",
    "end": "1797409"
  },
  {
    "text": "the process is crashing very quickly then you know it it doesn't retain anything that's what you okay so you're",
    "start": "1797409",
    "end": "1804429"
  },
  {
    "text": "talking about the case where you can't even it's not even getting to the point where it is logging it's just where it",
    "start": "1804429",
    "end": "1809979"
  },
  {
    "text": "is in STD out so if you are lucky enough to have exactly enough live at that point will capture it but it's cycle so",
    "start": "1809979",
    "end": "1815859"
  },
  {
    "text": "faster yeah so I think like for debugging such cases you would probably do a development more debugging rather",
    "start": "1815859",
    "end": "1823690"
  },
  {
    "text": "than trying to do it it will be easier to say use like pod man locally and debug that issue where you have more",
    "start": "1823690",
    "end": "1830409"
  },
  {
    "text": "control over the logs and I think we are also looking into adding an S trace base",
    "start": "1830409",
    "end": "1837549"
  },
  {
    "text": "plugin so that can help with debugging like crashing containers I'm asking from",
    "start": "1837549",
    "end": "1843039"
  },
  {
    "text": "an infrastructure point of view so like we don't own the containers we were just running them for our workloads right and",
    "start": "1843039",
    "end": "1849190"
  },
  {
    "text": "then somebody something is crashing and these right I don't see any log so it must be your fault right",
    "start": "1849190",
    "end": "1854620"
  },
  {
    "text": "yeah that's a good question and I think like having a nest race like plugin will help there where we can s trace the",
    "start": "1854620",
    "end": "1861100"
  },
  {
    "text": "container and try to capture the Astraeus output somewhere to debug",
    "start": "1861100",
    "end": "1866950"
  },
  {
    "text": "crashing yeah do you have any idea of",
    "start": "1866950",
    "end": "1876220"
  },
  {
    "start": "1874000",
    "end": "1917000"
  },
  {
    "text": "metrics in terms of overhead that you would save using cryo versus soccer so the plague numbers are way better so I",
    "start": "1876220",
    "end": "1882730"
  },
  {
    "text": "don't have numbers of the top but I think we can work to share them with the top of on Steam and what I would like to",
    "start": "1882730",
    "end": "1893740"
  },
  {
    "text": "mention one more thing so we are working on a feature for 117 where we get rid of",
    "start": "1893740",
    "end": "1899110"
  },
  {
    "text": "the pause container entirely there's like no pause unless you're sharing a big namespace so that will further",
    "start": "1899110",
    "end": "1905920"
  },
  {
    "text": "reduce the memory overhead per pod in cryo so simple stupid question of if I",
    "start": "1905920",
    "end": "1921660"
  },
  {
    "start": "1917000",
    "end": "1977000"
  },
  {
    "text": "go on a cryo no I know the trying cryo right now in kubernetes and I do a pod",
    "start": "1921660",
    "end": "1929800"
  },
  {
    "text": "man PS I see nothing but if I do a cry CT LPS I see everything so I'm wondering",
    "start": "1929800",
    "end": "1935920"
  },
  {
    "text": "what the difference is in sure so right now the status is that pod man and cryo",
    "start": "1935920",
    "end": "1943930"
  },
  {
    "text": "are integrated at the container storage level so if you pull an image with pod man cryo can see the image but we",
    "start": "1943930",
    "end": "1950530"
  },
  {
    "text": "haven't integrated at the runtime level and like that is one of our top priorities to get both of those",
    "start": "1950530",
    "end": "1955960"
  },
  {
    "text": "integrated so I expect that within the next few months you'll see progress over",
    "start": "1955960",
    "end": "1961500"
  },
  {
    "text": "in that area where pod men can see crab containers so you can potentially use",
    "start": "1961500",
    "end": "1967150"
  },
  {
    "text": "pod men to exact and debug container by cryo",
    "start": "1967150",
    "end": "1972510"
  },
  {
    "text": "thanks for the presentation you mentioned that version can be upgraded",
    "start": "1976409",
    "end": "1981940"
  },
  {
    "start": "1977000",
    "end": "2045000"
  },
  {
    "text": "without disrupting the parts is it true for the major version upgrades minor or",
    "start": "1981940",
    "end": "1987190"
  },
  {
    "text": "both so I think it depends on like see if CRI introduces a breaking change or",
    "start": "1987190",
    "end": "1994749"
  },
  {
    "text": "not so if there's no CRI breaking change then you should be able to just replace",
    "start": "1994749",
    "end": "2000929"
  },
  {
    "text": "the cryo binary n and restart it so we",
    "start": "2000929",
    "end": "2006029"
  },
  {
    "text": "don't need to cordon our drain the node just nope you shouldn't be because like your containers are still running and",
    "start": "2006029",
    "end": "2011789"
  },
  {
    "text": "when the when cryo comes up it it reconciles the state which what is",
    "start": "2011789",
    "end": "2016799"
  },
  {
    "text": "already running and it's able to respond to the cubelet thanks also pretty sure",
    "start": "2016799",
    "end": "2024239"
  },
  {
    "text": "following up that CRI tries really hard not to introduce n minus-1",
    "start": "2024239",
    "end": "2029609"
  },
  {
    "text": "incompatibility changes so typically like cube plus one should work with cryo",
    "start": "2029609",
    "end": "2036599"
  },
  {
    "text": "mine like cryo you know that's not super guaranteed we don't guarantee that but",
    "start": "2036599",
    "end": "2042149"
  },
  {
    "text": "we don't test it but it should that's that's awesome a quick follow-up to that",
    "start": "2042149",
    "end": "2048089"
  },
  {
    "start": "2045000",
    "end": "2132000"
  },
  {
    "text": "which is the same true for config changes that they might not require a daemon restart for cryo so where we",
    "start": "2048089",
    "end": "2055049"
  },
  {
    "text": "actually in where we are we have since about 114 we are now at the point where",
    "start": "2055049",
    "end": "2063240"
  },
  {
    "text": "a rollover of the cryo binary can do an N minus 1 work with the cryo config you",
    "start": "2063240",
    "end": "2070020"
  },
  {
    "text": "would need to then replace the crowd config because we don't guarantee and -2 but right now we we do test that for",
    "start": "2070020",
    "end": "2078628"
  },
  {
    "text": "production we do have that sure but for most settings like if I just go change",
    "start": "2078629",
    "end": "2083790"
  },
  {
    "text": "some settings that I want to run differently in production and will that just will cryo just pick that up or does",
    "start": "2083790",
    "end": "2088858"
  },
  {
    "text": "it require a restart Sasha who is also cryo maintainer has been recently adding",
    "start": "2088859",
    "end": "2095849"
  },
  {
    "text": "features where we can make changes to some cryo configuration and you can send a signal to cryo and will pick up those",
    "start": "2095849",
    "end": "2101940"
  },
  {
    "text": "changes so the goal is to support that for as many configuration settings as",
    "start": "2101940",
    "end": "2107250"
  },
  {
    "text": "possible and another another thing that we are working for is like baking the defaults into the crowd",
    "start": "2107250",
    "end": "2114720"
  },
  {
    "text": "so basically a crowd con should be totally commented out and it should have great defaults and you should have a",
    "start": "2114720",
    "end": "2120960"
  },
  {
    "text": "very good reason to try and change something so that makes it very easy to not introduce like breaking changes and",
    "start": "2120960",
    "end": "2126779"
  },
  {
    "text": "configuration when you're moving from one version to the other very cool sorry",
    "start": "2126779",
    "end": "2133019"
  },
  {
    "start": "2132000",
    "end": "2206000"
  },
  {
    "text": "your follow-up question you guys introduced to cry or wipeout service in 113 or 114 so what what is a",
    "start": "2133019",
    "end": "2140220"
  },
  {
    "text": "benefit out of it like you're deleting everything yeah so so that shouldn't",
    "start": "2140220",
    "end": "2145380"
  },
  {
    "text": "technically be required so but in now I'm going to do Blake open shift land in",
    "start": "2145380",
    "end": "2152549"
  },
  {
    "text": "openshift land it made sense for us to wipe out the node completely because when we the",
    "start": "2152549",
    "end": "2159569"
  },
  {
    "text": "way we do upgrades we are always pulling new images so all the old images weren't",
    "start": "2159569",
    "end": "2165660"
  },
  {
    "text": "needed anymore so that service I think should be optional if it isn't but that",
    "start": "2165660",
    "end": "2171000"
  },
  {
    "text": "that's why it was created for basically just remove all the images because we know for sure that when you're gonna",
    "start": "2171000",
    "end": "2176339"
  },
  {
    "text": "upgrade a node we're going to repol all the images so new again that will record",
    "start": "2176339",
    "end": "2181410"
  },
  {
    "text": "an and drain yes so yeah that that upgrade like a cluster upgrade will require draining",
    "start": "2181410",
    "end": "2188220"
  },
  {
    "text": "and all that stuff yeah but it's optional it's not it's option I mean you don't have to reboot it but that's what",
    "start": "2188220",
    "end": "2194039"
  },
  {
    "text": "that's how open ship does it yeah so this is that's more of an open ship yeah it's a big thing but you can optionally",
    "start": "2194039",
    "end": "2200069"
  },
  {
    "text": "include it if you want to are you",
    "start": "2200069",
    "end": "2207779"
  },
  {
    "text": "looking for any help in terms of contributions whether it's just testing or absolutely like the contributors a",
    "start": "2207779",
    "end": "2213569"
  },
  {
    "text": "super welcome we always have like a bunch of things to do and we feel short-handed with the amount of thing",
    "start": "2213569",
    "end": "2219750"
  },
  {
    "text": "that is going on so you're welcome to like bring us on slack or just open an issue or we are happy to point you to",
    "start": "2219750",
    "end": "2227130"
  },
  {
    "text": "where we could use self-weight",
    "start": "2227130",
    "end": "2231588"
  },
  {
    "text": "we got any others missing all right thanks for joining the talk and I would",
    "start": "2234410",
    "end": "2239750"
  },
  {
    "text": "also like to say that we have a more advanced talk tomorrow like if you want to go further into how the CRI calls are",
    "start": "2239750",
    "end": "2246560"
  },
  {
    "text": "working and so on we'll be diving and deeper to understand more thank you for",
    "start": "2246560",
    "end": "2251900"
  },
  {
    "text": "joining",
    "start": "2251900",
    "end": "2254109"
  }
]