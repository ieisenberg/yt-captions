[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "okay so uh my name is Eliza Weissman I'm",
    "start": "0",
    "end": "3300"
  },
  {
    "text": "a Linker D maintainer I work for buoyant",
    "start": "3300",
    "end": "6000"
  },
  {
    "text": "the creators of linkerty if you're a fan",
    "start": "6000",
    "end": "8220"
  },
  {
    "text": "of linkerty you've probably seen me on",
    "start": "8220",
    "end": "9840"
  },
  {
    "text": "the lincrity slacker on GitHub or on my",
    "start": "9840",
    "end": "12540"
  },
  {
    "text": "Twitter account where I post pictures of",
    "start": "12540",
    "end": "14280"
  },
  {
    "text": "my cats and bad computer jokes so I'm",
    "start": "14280",
    "end": "17279"
  },
  {
    "text": "going to be talking about",
    "start": "17279",
    "end": "18900"
  },
  {
    "text": "um writing service mesh controllers in",
    "start": "18900",
    "end": "20760"
  },
  {
    "text": "Rust this is my rust evangelism slide",
    "start": "20760",
    "end": "23699"
  },
  {
    "text": "I'm not going to talk too much about it",
    "start": "23699",
    "end": "25580"
  },
  {
    "text": "at this point I think a lot of folks",
    "start": "25580",
    "end": "27960"
  },
  {
    "text": "have probably at least heard of the",
    "start": "27960",
    "end": "29340"
  },
  {
    "text": "language but it's sort of core value",
    "start": "29340",
    "end": "31500"
  },
  {
    "text": "prop is that rust is a systems",
    "start": "31500",
    "end": "33540"
  },
  {
    "text": "programming language that ensures memory",
    "start": "33540",
    "end": "36059"
  },
  {
    "text": "safety so no dangling pointers or use",
    "start": "36059",
    "end": "39239"
  },
  {
    "text": "after freeze but it ensures this at",
    "start": "39239",
    "end": "41820"
  },
  {
    "text": "compile time through compile time",
    "start": "41820",
    "end": "44100"
  },
  {
    "text": "checking rather than at runtime with",
    "start": "44100",
    "end": "46260"
  },
  {
    "text": "garbage collection",
    "start": "46260",
    "end": "48420"
  },
  {
    "start": "47000",
    "end": "114000"
  },
  {
    "text": "um but this is service mesh con so it's",
    "start": "48420",
    "end": "50820"
  },
  {
    "text": "not roscom right we're going to talk",
    "start": "50820",
    "end": "52320"
  },
  {
    "text": "about a service mesh and the service",
    "start": "52320",
    "end": "54180"
  },
  {
    "text": "mesh that we're talking about is Linker",
    "start": "54180",
    "end": "55860"
  },
  {
    "text": "d uh it's a cncf graduated project Ultra",
    "start": "55860",
    "end": "59280"
  },
  {
    "text": "lightweight Ultra fast Security First",
    "start": "59280",
    "end": "61140"
  },
  {
    "text": "Service mesh for kubernetes uh and in",
    "start": "61140",
    "end": "63840"
  },
  {
    "text": "particular the Linker D team's goals are",
    "start": "63840",
    "end": "66000"
  },
  {
    "text": "that um the mesh should be secure",
    "start": "66000",
    "end": "68280"
  },
  {
    "text": "resource efficient and low latency and",
    "start": "68280",
    "end": "71040"
  },
  {
    "text": "we really care about those things in",
    "start": "71040",
    "end": "72600"
  },
  {
    "text": "that order right that security is the",
    "start": "72600",
    "end": "74700"
  },
  {
    "text": "most important and then performance and",
    "start": "74700",
    "end": "76740"
  },
  {
    "text": "efficiency and down here we have Linker",
    "start": "76740",
    "end": "79080"
  },
  {
    "text": "linky the lobster the Lincoln mascot",
    "start": "79080",
    "end": "82560"
  },
  {
    "text": "uh so oh so linkerty loves rust uh the",
    "start": "82560",
    "end": "86820"
  },
  {
    "text": "Linker D2 data plane the proxies have",
    "start": "86820",
    "end": "89100"
  },
  {
    "text": "been written in Rust since the release",
    "start": "89100",
    "end": "90540"
  },
  {
    "text": "of linker D2 in 2018",
    "start": "90540",
    "end": "92580"
  },
  {
    "text": "uh but the control plane on the other",
    "start": "92580",
    "end": "94320"
  },
  {
    "text": "hand uh is mostly written in go this",
    "start": "94320",
    "end": "97380"
  },
  {
    "text": "year's Linker d211 release though we",
    "start": "97380",
    "end": "99420"
  },
  {
    "text": "introduced a new control plane component",
    "start": "99420",
    "end": "101220"
  },
  {
    "text": "the policy controller which was written",
    "start": "101220",
    "end": "103259"
  },
  {
    "text": "in Rust which is what we're going to be",
    "start": "103259",
    "end": "104759"
  },
  {
    "text": "taking a little look at today uh down",
    "start": "104759",
    "end": "107280"
  },
  {
    "text": "here Ferris the crab the rust mascot",
    "start": "107280",
    "end": "109380"
  },
  {
    "text": "linky the lobster they're both",
    "start": "109380",
    "end": "110700"
  },
  {
    "text": "Crustaceans so you know match made in",
    "start": "110700",
    "end": "113399"
  },
  {
    "text": "heaven",
    "start": "113399",
    "end": "114659"
  },
  {
    "start": "114000",
    "end": "259000"
  },
  {
    "text": "uh so since the data plane handles all",
    "start": "114659",
    "end": "117299"
  },
  {
    "text": "the network traffic in the mesh right",
    "start": "117299",
    "end": "119159"
  },
  {
    "text": "you really need those proxies to be",
    "start": "119159",
    "end": "121320"
  },
  {
    "text": "secure efficient and low latency low",
    "start": "121320",
    "end": "123960"
  },
  {
    "text": "latency means that we really want to",
    "start": "123960",
    "end": "125640"
  },
  {
    "text": "avoid garbage collected languages like",
    "start": "125640",
    "end": "127259"
  },
  {
    "text": "go or Java because a garbage collector",
    "start": "127259",
    "end": "129660"
  },
  {
    "text": "pause impacts tail latency significantly",
    "start": "129660",
    "end": "132120"
  },
  {
    "text": "so you don't really get that predictable",
    "start": "132120",
    "end": "133860"
  },
  {
    "text": "performance of a language that isn't",
    "start": "133860",
    "end": "136500"
  },
  {
    "text": "garbage collected like roster C plus but",
    "start": "136500",
    "end": "139680"
  },
  {
    "text": "we also really don't want to deal with",
    "start": "139680",
    "end": "141180"
  },
  {
    "text": "the kind of memory on safety related",
    "start": "141180",
    "end": "143459"
  },
  {
    "text": "security issues that you get from C or C",
    "start": "143459",
    "end": "146400"
  },
  {
    "text": "plus plus we we don't really want",
    "start": "146400",
    "end": "148620"
  },
  {
    "text": "um Heap corruption and use after freeze",
    "start": "148620",
    "end": "151080"
  },
  {
    "text": "so rust was really the only language we",
    "start": "151080",
    "end": "153959"
  },
  {
    "text": "felt was an acceptable choice for the",
    "start": "153959",
    "end": "156120"
  },
  {
    "text": "data plane in Linker D",
    "start": "156120",
    "end": "158459"
  },
  {
    "text": "um this isn't really true in the control",
    "start": "158459",
    "end": "160080"
  },
  {
    "text": "point we need it to be secure and",
    "start": "160080",
    "end": "161819"
  },
  {
    "text": "reliable but the performance",
    "start": "161819",
    "end": "163379"
  },
  {
    "text": "requirements although we care about",
    "start": "163379",
    "end": "165180"
  },
  {
    "text": "performance the performance requirements",
    "start": "165180",
    "end": "166920"
  },
  {
    "text": "aren't really as strict as the data",
    "start": "166920",
    "end": "168720"
  },
  {
    "text": "plane the occasional GC pause isn't that",
    "start": "168720",
    "end": "171120"
  },
  {
    "text": "bad so languages with managed runtimes",
    "start": "171120",
    "end": "173760"
  },
  {
    "text": "like go uh totally suitable and most of",
    "start": "173760",
    "end": "176400"
  },
  {
    "text": "the Linker d control plane is written in",
    "start": "176400",
    "end": "178080"
  },
  {
    "text": "go so why did we write the new policy",
    "start": "178080",
    "end": "180720"
  },
  {
    "text": "controller in Rust well",
    "start": "180720",
    "end": "182819"
  },
  {
    "text": "we liked it the linkage team has",
    "start": "182819",
    "end": "186300"
  },
  {
    "text": "invested pretty heavily in Rust we're",
    "start": "186300",
    "end": "187920"
  },
  {
    "text": "big fans of the language we wanted to",
    "start": "187920",
    "end": "189480"
  },
  {
    "text": "use the same language or the same",
    "start": "189480",
    "end": "191099"
  },
  {
    "text": "libraries we use in proxy and rust has",
    "start": "191099",
    "end": "193739"
  },
  {
    "text": "some benefits in the control plane we",
    "start": "193739",
    "end": "195959"
  },
  {
    "text": "like we like a lot of its language",
    "start": "195959",
    "end": "197220"
  },
  {
    "text": "features that make it an expressive",
    "start": "197220",
    "end": "199140"
  },
  {
    "text": "productive language that also help us to",
    "start": "199140",
    "end": "201060"
  },
  {
    "text": "write a correct code and help us to make",
    "start": "201060",
    "end": "204120"
  },
  {
    "text": "invalid States unrepresentable",
    "start": "204120",
    "end": "206159"
  },
  {
    "text": "uh so what's the link to d control plane",
    "start": "206159",
    "end": "208920"
  },
  {
    "text": "actually doing well to put it broadly",
    "start": "208920",
    "end": "210959"
  },
  {
    "text": "it's a set of microservices the Run",
    "start": "210959",
    "end": "212760"
  },
  {
    "text": "kubernetes cluster and they watch",
    "start": "212760",
    "end": "214920"
  },
  {
    "text": "resources from the cube API and then",
    "start": "214920",
    "end": "217200"
  },
  {
    "text": "they serve eight like services and pods",
    "start": "217200",
    "end": "219239"
  },
  {
    "text": "and then they serve a grpc API uh that's",
    "start": "219239",
    "end": "221940"
  },
  {
    "text": "consumed by the data plane proxies and",
    "start": "221940",
    "end": "224099"
  },
  {
    "text": "the proxies use those apis to discover",
    "start": "224099",
    "end": "226080"
  },
  {
    "text": "where to Route traffic and what policies",
    "start": "226080",
    "end": "228180"
  },
  {
    "text": "to apply when routing that traffic",
    "start": "228180",
    "end": "230099"
  },
  {
    "text": "in particular this policy controller",
    "start": "230099",
    "end": "232920"
  },
  {
    "text": "that we're talking about today is",
    "start": "232920",
    "end": "234720"
  },
  {
    "text": "responsible for telling proxies how to",
    "start": "234720",
    "end": "236400"
  },
  {
    "text": "enforce server-side policy and it's",
    "start": "236400",
    "end": "238739"
  },
  {
    "text": "watching a set of crds that describe",
    "start": "238739",
    "end": "240659"
  },
  {
    "text": "policies like what clients are",
    "start": "240659",
    "end": "242819"
  },
  {
    "text": "authorized and how to authenticate those",
    "start": "242819",
    "end": "244500"
  },
  {
    "text": "clients and then it tells the proxies",
    "start": "244500",
    "end": "247799"
  },
  {
    "text": "that make streaming grpc requests that",
    "start": "247799",
    "end": "249840"
  },
  {
    "text": "controller uh how to apply those proxies",
    "start": "249840",
    "end": "253140"
  },
  {
    "text": "so if we want to write controllers in",
    "start": "253140",
    "end": "254879"
  },
  {
    "text": "Rust we need to talk to the Kube API so",
    "start": "254879",
    "end": "257639"
  },
  {
    "text": "we need a set of bindings fortunately",
    "start": "257639",
    "end": "259799"
  },
  {
    "start": "259000",
    "end": "604000"
  },
  {
    "text": "that exists now this is creates dot IO",
    "start": "259799",
    "end": "261720"
  },
  {
    "text": "this is the rust package registry and",
    "start": "261720",
    "end": "264000"
  },
  {
    "text": "this is a package called kube.rs and",
    "start": "264000",
    "end": "266400"
  },
  {
    "text": "it's kind of like a rest version of",
    "start": "266400",
    "end": "267540"
  },
  {
    "text": "client go uh it also has some other",
    "start": "267540",
    "end": "269820"
  },
  {
    "text": "things that we might get to see some of",
    "start": "269820",
    "end": "271199"
  },
  {
    "text": "shortly",
    "start": "271199",
    "end": "272280"
  },
  {
    "text": "and then on top of coop.rs the Linker D",
    "start": "272280",
    "end": "275220"
  },
  {
    "text": "team wrote a little Library called",
    "start": "275220",
    "end": "276840"
  },
  {
    "text": "kubert uh so it's like Qbert but with a",
    "start": "276840",
    "end": "279660"
  },
  {
    "text": "K it stands for Kube runtime Cube RT and",
    "start": "279660",
    "end": "283979"
  },
  {
    "text": "it's an opinionated runtime for writing",
    "start": "283979",
    "end": "286800"
  },
  {
    "text": "kubernetes controllers in Rust",
    "start": "286800",
    "end": "289320"
  },
  {
    "text": "here's some of the apis it provides it",
    "start": "289320",
    "end": "292139"
  },
  {
    "text": "has utilities for things like running an",
    "start": "292139",
    "end": "294120"
  },
  {
    "text": "admin server doing graceful shutdown and",
    "start": "294120",
    "end": "296040"
  },
  {
    "text": "logging and so on we're not going to",
    "start": "296040",
    "end": "297180"
  },
  {
    "text": "look at that in too much detail but what",
    "start": "297180",
    "end": "299280"
  },
  {
    "text": "we are interested in is that we have",
    "start": "299280",
    "end": "300780"
  },
  {
    "text": "this module called index which provides",
    "start": "300780",
    "end": "303300"
  },
  {
    "text": "utilities for indexing kubernetes",
    "start": "303300",
    "end": "304919"
  },
  {
    "text": "resources",
    "start": "304919",
    "end": "306240"
  },
  {
    "text": "so this is um the trade index namespaced",
    "start": "306240",
    "end": "309060"
  },
  {
    "text": "resource from kubert's index module a",
    "start": "309060",
    "end": "311699"
  },
  {
    "text": "trade is like a rust interface that we",
    "start": "311699",
    "end": "313740"
  },
  {
    "text": "can Implement on our own types this is",
    "start": "313740",
    "end": "316620"
  },
  {
    "text": "generic over some T which is a type that",
    "start": "316620",
    "end": "318780"
  },
  {
    "text": "represents the resources that we want to",
    "start": "318780",
    "end": "320699"
  },
  {
    "text": "watch and then we have three methods on",
    "start": "320699",
    "end": "323639"
  },
  {
    "text": "this trait apply is is called when the",
    "start": "323639",
    "end": "325560"
  },
  {
    "text": "kubernetes API creates or updates a",
    "start": "325560",
    "end": "327660"
  },
  {
    "text": "resource deplete is called when a",
    "start": "327660",
    "end": "329699"
  },
  {
    "text": "resources is deleted and then reset is",
    "start": "329699",
    "end": "333600"
  },
  {
    "text": "called when we have a reset event and a",
    "start": "333600",
    "end": "335400"
  },
  {
    "text": "large number of resources change at the",
    "start": "335400",
    "end": "336960"
  },
  {
    "text": "same time so we can have some Rust type",
    "start": "336960",
    "end": "339419"
  },
  {
    "text": "that we defined and we implement this",
    "start": "339419",
    "end": "340979"
  },
  {
    "text": "trait and when we implement this trade",
    "start": "340979",
    "end": "343740"
  },
  {
    "text": "for our type we can give it to the",
    "start": "343740",
    "end": "345060"
  },
  {
    "text": "kubert runtime and kubert will just call",
    "start": "345060",
    "end": "347039"
  },
  {
    "text": "these methods as various resources are",
    "start": "347039",
    "end": "350759"
  },
  {
    "text": "created and deleted so those resources",
    "start": "350759",
    "end": "352979"
  },
  {
    "text": "could be core resources or crds in this",
    "start": "352979",
    "end": "355979"
  },
  {
    "text": "case we care about both crds and core",
    "start": "355979",
    "end": "357780"
  },
  {
    "text": "resources so how do we actually create",
    "start": "357780",
    "end": "360060"
  },
  {
    "text": "crd bindings well here's an example of",
    "start": "360060",
    "end": "363539"
  },
  {
    "text": "one of the policy crds the server",
    "start": "363539",
    "end": "365460"
  },
  {
    "text": "resource this is different by linkerty",
    "start": "365460",
    "end": "367320"
  },
  {
    "text": "and it defines a server that receives",
    "start": "367320",
    "end": "370259"
  },
  {
    "text": "traffic in the mesh and can be assigned",
    "start": "370259",
    "end": "372240"
  },
  {
    "text": "server-side policies so here we have a",
    "start": "372240",
    "end": "374460"
  },
  {
    "text": "server that lives in the Linker dvis",
    "start": "374460",
    "end": "376080"
  },
  {
    "text": "namespace it's named admin this actually",
    "start": "376080",
    "end": "378000"
  },
  {
    "text": "came from a real link to the install and",
    "start": "378000",
    "end": "380759"
  },
  {
    "text": "it has a spec with a pod selector it",
    "start": "380759",
    "end": "383160"
  },
  {
    "text": "matches a set of labels on pods and to",
    "start": "383160",
    "end": "386039"
  },
  {
    "text": "say these positive part of that server",
    "start": "386039",
    "end": "387600"
  },
  {
    "text": "and then it defines a name Target Port",
    "start": "387600",
    "end": "389580"
  },
  {
    "text": "on those pods and then it can include a",
    "start": "389580",
    "end": "391800"
  },
  {
    "text": "protocol hint so here's how we actually",
    "start": "391800",
    "end": "394440"
  },
  {
    "text": "Define that resource in our rust code so",
    "start": "394440",
    "end": "398220"
  },
  {
    "text": "we have a bunch of these attributes with",
    "start": "398220",
    "end": "400560"
  },
  {
    "text": "the hash on this res on this rust struct",
    "start": "400560",
    "end": "403680"
  },
  {
    "text": "type and those are actually in those are",
    "start": "403680",
    "end": "406139"
  },
  {
    "text": "derived attributes right so they're",
    "start": "406139",
    "end": "407580"
  },
  {
    "text": "saying we want to implement these traits",
    "start": "407580",
    "end": "409560"
  },
  {
    "text": "for this type and there's some code",
    "start": "409560",
    "end": "411419"
  },
  {
    "text": "generation that we're calling into",
    "start": "411419",
    "end": "413000"
  },
  {
    "text": "essentially that automatically provides",
    "start": "413000",
    "end": "415500"
  },
  {
    "text": "those trade implementations so if we",
    "start": "415500",
    "end": "417419"
  },
  {
    "text": "want this to be a binding for a crd we",
    "start": "417419",
    "end": "419819"
  },
  {
    "text": "say well we need to be able to",
    "start": "419819",
    "end": "421440"
  },
  {
    "text": "deserialize and serialize it and we need",
    "start": "421440",
    "end": "424440"
  },
  {
    "text": "to be able to generate a Json schema and",
    "start": "424440",
    "end": "427139"
  },
  {
    "text": "they're a library called survey just",
    "start": "427139",
    "end": "429000"
  },
  {
    "text": "lets us put those attributes on this",
    "start": "429000",
    "end": "430860"
  },
  {
    "text": "type and all of the serialization",
    "start": "430860",
    "end": "432919"
  },
  {
    "text": "deserialization code is automatically",
    "start": "432919",
    "end": "435060"
  },
  {
    "text": "generated and then we have an attribute",
    "start": "435060",
    "end": "437100"
  },
  {
    "text": "saying well we want to rename the field",
    "start": "437100",
    "end": "438660"
  },
  {
    "text": "so that they're camel cased instead of",
    "start": "438660",
    "end": "440340"
  },
  {
    "text": "written in the the rust case with an",
    "start": "440340",
    "end": "442380"
  },
  {
    "text": "underscore and then we have these extra",
    "start": "442380",
    "end": "444660"
  },
  {
    "text": "attributes",
    "start": "444660",
    "end": "446460"
  },
  {
    "text": "um like that's rename all and then we",
    "start": "446460",
    "end": "449099"
  },
  {
    "text": "have here a derived Kube custom resource",
    "start": "449099",
    "end": "451740"
  },
  {
    "text": "that's saying this is a crd binding and",
    "start": "451740",
    "end": "454440"
  },
  {
    "text": "then this attribute here is saying well",
    "start": "454440",
    "end": "456840"
  },
  {
    "text": "this is the group and version and then",
    "start": "456840",
    "end": "459419"
  },
  {
    "text": "the name of the resource and it is",
    "start": "459419",
    "end": "461160"
  },
  {
    "text": "namespaced and that generates the entire",
    "start": "461160",
    "end": "463199"
  },
  {
    "text": "crd binding for us we don't actually",
    "start": "463199",
    "end": "465780"
  },
  {
    "text": "have to write any of the code for",
    "start": "465780",
    "end": "467960"
  },
  {
    "text": "parsing the Json and and you know",
    "start": "467960",
    "end": "470819"
  },
  {
    "text": "turning it into this in-memory",
    "start": "470819",
    "end": "472560"
  },
  {
    "text": "representation",
    "start": "472560",
    "end": "474660"
  },
  {
    "text": "so finally here's an example of how we",
    "start": "474660",
    "end": "477180"
  },
  {
    "text": "sort of would wire some of this up this",
    "start": "477180",
    "end": "479580"
  },
  {
    "text": "is a main function you know in a sort of",
    "start": "479580",
    "end": "482400"
  },
  {
    "text": "example rest project this isn't really",
    "start": "482400",
    "end": "484500"
  },
  {
    "text": "from our policy controller I've stripped",
    "start": "484500",
    "end": "486419"
  },
  {
    "text": "it down a lot to sort of not put so much",
    "start": "486419",
    "end": "489300"
  },
  {
    "text": "code on the slide that we can't read it",
    "start": "489300",
    "end": "491419"
  },
  {
    "text": "but this is an async main function it's",
    "start": "491419",
    "end": "494819"
  },
  {
    "text": "using Tokyo rest sort of leading",
    "start": "494819",
    "end": "497120"
  },
  {
    "text": "asynchronous runtime that's not super",
    "start": "497120",
    "end": "499680"
  },
  {
    "text": "important so we we parse command line",
    "start": "499680",
    "end": "502979"
  },
  {
    "text": "arguments and kubert gives us some",
    "start": "502979",
    "end": "505080"
  },
  {
    "text": "utilities for taking CLI args like",
    "start": "505080",
    "end": "508039"
  },
  {
    "text": "configuring the Kube client here's the",
    "start": "508039",
    "end": "510300"
  },
  {
    "text": "Kube context you want to use and so on",
    "start": "510300",
    "end": "512039"
  },
  {
    "text": "and so we have this Arch type we parse",
    "start": "512039",
    "end": "514860"
  },
  {
    "text": "that we get the client configuration we",
    "start": "514860",
    "end": "517200"
  },
  {
    "text": "configure the runtime with this Builder",
    "start": "517200",
    "end": "519539"
  },
  {
    "text": "okay and and then here we start we",
    "start": "519539",
    "end": "522719"
  },
  {
    "text": "actually say okay we have this index",
    "start": "522719",
    "end": "524580"
  },
  {
    "text": "type that we've defined so we want to",
    "start": "524580",
    "end": "526320"
  },
  {
    "text": "make an instance of that and then we",
    "start": "526320",
    "end": "528600"
  },
  {
    "text": "want to have the runtime start a watch",
    "start": "528600",
    "end": "530700"
  },
  {
    "text": "on This Server resource that's the type",
    "start": "530700",
    "end": "532740"
  },
  {
    "text": "here we could pass in list parameters",
    "start": "532740",
    "end": "535200"
  },
  {
    "text": "like we want to only list these",
    "start": "535200",
    "end": "537000"
  },
  {
    "text": "namespaces or filter in this label",
    "start": "537000",
    "end": "538680"
  },
  {
    "text": "selector but we're not doing that",
    "start": "538680",
    "end": "539760"
  },
  {
    "text": "because we want everything and then we",
    "start": "539760",
    "end": "542100"
  },
  {
    "text": "say okay kuber we want you to actually",
    "start": "542100",
    "end": "545100"
  },
  {
    "text": "index",
    "start": "545100",
    "end": "546779"
  },
  {
    "text": "um in the namespace resource using that",
    "start": "546779",
    "end": "549360"
  },
  {
    "text": "index namespace resource trait that we",
    "start": "549360",
    "end": "551399"
  },
  {
    "text": "just looked at which we're assuming is",
    "start": "551399",
    "end": "552899"
  },
  {
    "text": "implemented for our index type and we",
    "start": "552899",
    "end": "555839"
  },
  {
    "text": "want to use this watch on servers and we",
    "start": "555839",
    "end": "557700"
  },
  {
    "text": "could do this for the same index type",
    "start": "557700",
    "end": "559320"
  },
  {
    "text": "with all the different resources that we",
    "start": "559320",
    "end": "561660"
  },
  {
    "text": "care about and we can establish like",
    "start": "561660",
    "end": "563220"
  },
  {
    "text": "relationships between different",
    "start": "563220",
    "end": "564540"
  },
  {
    "text": "resources in that Index this way and",
    "start": "564540",
    "end": "566700"
  },
  {
    "text": "that index is just whatever data",
    "start": "566700",
    "end": "568200"
  },
  {
    "text": "structure we want it to be it might be",
    "start": "568200",
    "end": "570839"
  },
  {
    "text": "like a nested set of hash Maps or",
    "start": "570839",
    "end": "572640"
  },
  {
    "text": "something it might have different",
    "start": "572640",
    "end": "575220"
  },
  {
    "text": "relationships between the different",
    "start": "575220",
    "end": "576660"
  },
  {
    "text": "resources that we've indexed and then",
    "start": "576660",
    "end": "578940"
  },
  {
    "text": "you know we can do other work here",
    "start": "578940",
    "end": "581180"
  },
  {
    "text": "kubert also has a utility for running",
    "start": "581180",
    "end": "583500"
  },
  {
    "text": "like a validating admission web hook",
    "start": "583500",
    "end": "585540"
  },
  {
    "text": "which we might start here we might start",
    "start": "585540",
    "end": "587700"
  },
  {
    "text": "the grpc servers that we use to serve",
    "start": "587700",
    "end": "590040"
  },
  {
    "text": "the proxy API and so on and then in the",
    "start": "590040",
    "end": "592620"
  },
  {
    "text": "end we just tell the runtime okay we",
    "start": "592620",
    "end": "594180"
  },
  {
    "text": "actually want to run this and it will",
    "start": "594180",
    "end": "596700"
  },
  {
    "text": "run all of these watches that we've",
    "start": "596700",
    "end": "598200"
  },
  {
    "text": "started and we'll call into the",
    "start": "598200",
    "end": "600120"
  },
  {
    "text": "different methods on the index",
    "start": "600120",
    "end": "602519"
  },
  {
    "text": "and that's really the whole thing",
    "start": "602519",
    "end": "605519"
  },
  {
    "text": "so this code is actually live right now",
    "start": "605519",
    "end": "607860"
  },
  {
    "text": "in linkerty if you're running Linker D",
    "start": "607860",
    "end": "609779"
  },
  {
    "text": "you're running code like this you can",
    "start": "609779",
    "end": "612000"
  },
  {
    "text": "check out the policy controller on",
    "start": "612000",
    "end": "613560"
  },
  {
    "text": "GitHub",
    "start": "613560",
    "end": "614459"
  },
  {
    "text": "and",
    "start": "614459",
    "end": "615920"
  },
  {
    "text": "we you know are running a service mesh",
    "start": "615920",
    "end": "619380"
  },
  {
    "text": "Academy you can sign up for if you're",
    "start": "619380",
    "end": "621180"
  },
  {
    "text": "interested in linkready and learning",
    "start": "621180",
    "end": "622500"
  },
  {
    "text": "more we have Hands-On workshops for",
    "start": "622500",
    "end": "624420"
  },
  {
    "text": "production users that's free we also",
    "start": "624420",
    "end": "627540"
  },
  {
    "text": "have a managed Linker D offering that",
    "start": "627540",
    "end": "630420"
  },
  {
    "text": "you can check out at the buoyant booth",
    "start": "630420",
    "end": "633600"
  },
  {
    "text": "and the of the vendor Hall and uh I'll",
    "start": "633600",
    "end": "638100"
  },
  {
    "text": "be hanging out at the Linker de booth in",
    "start": "638100",
    "end": "640800"
  },
  {
    "text": "the product Pavilion for most of the",
    "start": "640800",
    "end": "642959"
  },
  {
    "text": "rest of kubecon if you want to chat",
    "start": "642959",
    "end": "644459"
  },
  {
    "text": "about this stuff or ask me questions",
    "start": "644459",
    "end": "645720"
  },
  {
    "text": "about rust or Linker d that's about it",
    "start": "645720",
    "end": "649860"
  },
  {
    "text": "thanks for coming",
    "start": "649860",
    "end": "651450"
  },
  {
    "text": "[Applause]",
    "start": "651450",
    "end": "655989"
  },
  {
    "text": "Eliza did a pretty good job on timing so",
    "start": "656339",
    "end": "659399"
  },
  {
    "text": "we have some time for one question if",
    "start": "659399",
    "end": "661500"
  },
  {
    "text": "you have",
    "start": "661500",
    "end": "663000"
  },
  {
    "text": "yeah yeah",
    "start": "663000",
    "end": "664579"
  },
  {
    "text": "any questions",
    "start": "664579",
    "end": "667200"
  },
  {
    "text": "yes",
    "start": "667200",
    "end": "669680"
  },
  {
    "text": "how did you said most of the control",
    "start": "673079",
    "end": "674820"
  },
  {
    "text": "players written in go currently how did",
    "start": "674820",
    "end": "676680"
  },
  {
    "text": "you handle the interoperation",
    "start": "676680",
    "end": "678079"
  },
  {
    "text": "interoperability between the go and rust",
    "start": "678079",
    "end": "680399"
  },
  {
    "text": "code or are they running as separate",
    "start": "680399",
    "end": "682079"
  },
  {
    "text": "binaries",
    "start": "682079",
    "end": "684500"
  },
  {
    "text": "there is another microphone you can use",
    "start": "684899",
    "end": "687000"
  },
  {
    "text": "oh okay yeah",
    "start": "687000",
    "end": "688339"
  },
  {
    "text": "they should be you know yeah yeah",
    "start": "688339",
    "end": "691560"
  },
  {
    "text": "okay so that yeah that's a great",
    "start": "691560",
    "end": "693420"
  },
  {
    "text": "question",
    "start": "693420",
    "end": "694440"
  },
  {
    "text": "um they are running in separate binaries",
    "start": "694440",
    "end": "696060"
  },
  {
    "text": "uh they're just they're essentially the",
    "start": "696060",
    "end": "698399"
  },
  {
    "text": "control plane and linkage is essentially",
    "start": "698399",
    "end": "699959"
  },
  {
    "text": "a set of microservices we have a",
    "start": "699959",
    "end": "702480"
  },
  {
    "text": "deployment that deploys pods that have",
    "start": "702480",
    "end": "704100"
  },
  {
    "text": "all these different control Point",
    "start": "704100",
    "end": "705300"
  },
  {
    "text": "Services uh and in general the way that",
    "start": "705300",
    "end": "707820"
  },
  {
    "text": "the Linker d control plane Services",
    "start": "707820",
    "end": "709560"
  },
  {
    "text": "communicate with each other right is",
    "start": "709560",
    "end": "711779"
  },
  {
    "text": "just through kubernetes so they create",
    "start": "711779",
    "end": "715019"
  },
  {
    "text": "and update and delete resources add",
    "start": "715019",
    "end": "717600"
  },
  {
    "text": "labels to resources so on and that",
    "start": "717600",
    "end": "719640"
  },
  {
    "text": "allows the different controllers that do",
    "start": "719640",
    "end": "721200"
  },
  {
    "text": "different things to share State uh",
    "start": "721200",
    "end": "723300"
  },
  {
    "text": "they're just kubernetes controllers in",
    "start": "723300",
    "end": "726060"
  },
  {
    "text": "particular some of them also serve apis",
    "start": "726060",
    "end": "727980"
  },
  {
    "text": "the data plane consumes",
    "start": "727980",
    "end": "730019"
  },
  {
    "text": "in addition to just interacting through",
    "start": "730019",
    "end": "732720"
  },
  {
    "text": "Cube resources",
    "start": "732720",
    "end": "735060"
  },
  {
    "text": "thank you so much I think the apis",
    "start": "735060",
    "end": "737399"
  },
  {
    "text": "basically solve the problems in",
    "start": "737399",
    "end": "739500"
  },
  {
    "text": "kubernetes API solve the problem of",
    "start": "739500",
    "end": "741140"
  },
  {
    "text": "inter communication so uh let's do one",
    "start": "741140",
    "end": "745140"
  },
  {
    "text": "more time for Eliza",
    "start": "745140",
    "end": "747230"
  },
  {
    "text": "[Applause]",
    "start": "747230",
    "end": "751298"
  }
]