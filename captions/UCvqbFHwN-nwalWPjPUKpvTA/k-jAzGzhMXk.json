[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "thank you so when kubernetes 1.0 came",
    "start": "60",
    "end": "5549"
  },
  {
    "text": "out over three years ago it was like",
    "start": "5549",
    "end": "8280"
  },
  {
    "text": "everything else in casino and stateless",
    "start": "8280",
    "end": "11179"
  },
  {
    "text": "great for web servers great for app",
    "start": "11179",
    "end": "13200"
  },
  {
    "text": "servers not so great for databases but",
    "start": "13200",
    "end": "15450"
  },
  {
    "text": "then in 1.4 we got stateful set both a",
    "start": "15450",
    "end": "18650"
  },
  {
    "text": "component and a method for deploying",
    "start": "18650",
    "end": "21270"
  },
  {
    "text": "stateful micro services running them in",
    "start": "21270",
    "end": "23850"
  },
  {
    "text": "a kubernetes cluster and since then",
    "start": "23850",
    "end": "25710"
  },
  {
    "text": "we've gotten a whole host of",
    "start": "25710",
    "end": "27240"
  },
  {
    "text": "technologies that help us run things",
    "start": "27240",
    "end": "30599"
  },
  {
    "text": "with state using kubernetes to the point",
    "start": "30599",
    "end": "33750"
  },
  {
    "text": "where just about any application no",
    "start": "33750",
    "end": "36600"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "matter how stateful can be running",
    "start": "36600",
    "end": "39149"
  },
  {
    "text": "kubernetes and somebody's released a",
    "start": "39149",
    "end": "40770"
  },
  {
    "text": "tool to help you run it there however my",
    "start": "40770",
    "end": "44579"
  },
  {
    "text": "former colleagues actually want to know",
    "start": "44579",
    "end": "46829"
  },
  {
    "text": "a little bit more than can we run",
    "start": "46829",
    "end": "49700"
  },
  {
    "text": "databases on kubernetes but should we",
    "start": "49700",
    "end": "53699"
  },
  {
    "text": "run them there in one question they want",
    "start": "53699",
    "end": "56160"
  },
  {
    "text": "to know how fast is it what's the",
    "start": "56160",
    "end": "59010"
  },
  {
    "text": "performance overhead what am I looking",
    "start": "59010",
    "end": "61320"
  },
  {
    "text": "at sacrificing to get this container",
    "start": "61320",
    "end": "63570"
  },
  {
    "text": "cloud so I decided to run some simple",
    "start": "63570",
    "end": "66299"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "performance tests using a simple",
    "start": "66299",
    "end": "69420"
  },
  {
    "text": "transaction processing test with two",
    "start": "69420",
    "end": "70979"
  },
  {
    "text": "different database sizes one in memory",
    "start": "70979",
    "end": "72900"
  },
  {
    "text": "one bigger than memory do some tests",
    "start": "72900",
    "end": "75990"
  },
  {
    "text": "where we do a large data load for a",
    "start": "75990",
    "end": "78659"
  },
  {
    "text": "large right and a large data read for a",
    "start": "78659",
    "end": "80580"
  },
  {
    "text": "large read to basically get the general",
    "start": "80580",
    "end": "82350"
  },
  {
    "text": "parameters of how performance works on",
    "start": "82350",
    "end": "84390"
  },
  {
    "text": "these systems and so I'm going to",
    "start": "84390",
    "end": "85950"
  },
  {
    "text": "actually give you a series of stats",
    "start": "85950",
    "end": "87299"
  },
  {
    "text": "organized into quadrants like this these",
    "start": "87299",
    "end": "90270"
  },
  {
    "text": "are the meaning of the different",
    "start": "90270",
    "end": "91170"
  },
  {
    "text": "quadrants in terms of that the stuff on",
    "start": "91170",
    "end": "93780"
  },
  {
    "text": "top higher is bigger stuff in the bottom",
    "start": "93780",
    "end": "95640"
  },
  {
    "text": "lower is bigger is better so first we",
    "start": "95640",
    "end": "98939"
  },
  {
    "text": "need our control here right which is",
    "start": "98939",
    "end": "100829"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "running it on quote/unquote bare metal",
    "start": "100829",
    "end": "102630"
  },
  {
    "text": "now I'm actually running this in a",
    "start": "102630",
    "end": "104460"
  },
  {
    "text": "public cloud running this in AWS it's",
    "start": "104460",
    "end": "106079"
  },
  {
    "text": "not really bare metal and that can",
    "start": "106079",
    "end": "108450"
  },
  {
    "text": "become important later on when we look",
    "start": "108450",
    "end": "110009"
  },
  {
    "text": "at some of the different storage",
    "start": "110009",
    "end": "110939"
  },
  {
    "text": "configurations but that's our base sort",
    "start": "110939",
    "end": "113159"
  },
  {
    "text": "of numbers running it without kubernetes",
    "start": "113159",
    "end": "115520"
  },
  {
    "start": "114000",
    "end": "114000"
  },
  {
    "text": "so our first architecture one runner and",
    "start": "115520",
    "end": "118320"
  },
  {
    "text": "what kubernetes calls ephemeral storage",
    "start": "118320",
    "end": "120600"
  },
  {
    "text": "and that's actually where you just let",
    "start": "120600",
    "end": "122790"
  },
  {
    "text": "the container runtime store things in",
    "start": "122790",
    "end": "124890"
  },
  {
    "text": "its local file system it's completely",
    "start": "124890",
    "end": "127079"
  },
  {
    "text": "untrustworthy so you'd better have a",
    "start": "127079",
    "end": "128489"
  },
  {
    "text": "good replication setup to make sure that",
    "start": "128489",
    "end": "130530"
  },
  {
    "text": "you don't lose your data when we",
    "start": "130530",
    "end": "131760"
  },
  {
    "text": "failover containers now of course",
    "start": "131760",
    "end": "133650"
  },
  {
    "text": "a federal storage in this case means",
    "start": "133650",
    "end": "134849"
  },
  {
    "text": "that it's actually putting stuff on EBS",
    "start": "134849",
    "end": "137390"
  },
  {
    "text": "so the ephemeral storage numbers look",
    "start": "137390",
    "end": "140189"
  },
  {
    "text": "pretty good as a matter of fact for the",
    "start": "140189",
    "end": "142620"
  },
  {
    "text": "in-memory database case they are",
    "start": "142620",
    "end": "144470"
  },
  {
    "text": "indistinguishable from not running on",
    "start": "144470",
    "end": "146220"
  },
  {
    "text": "kubernetes at all the overhead of other",
    "start": "146220",
    "end": "148530"
  },
  {
    "text": "components is higher than any kind of",
    "start": "148530",
    "end": "150329"
  },
  {
    "text": "network or redirection overhead",
    "start": "150329",
    "end": "151769"
  },
  {
    "text": "kubernetes might be adding now these",
    "start": "151769",
    "end": "154500"
  },
  {
    "text": "numbers don't look quite as good we have",
    "start": "154500",
    "end": "157079"
  },
  {
    "text": "a little bit of slowdown here",
    "start": "157079",
    "end": "158010"
  },
  {
    "text": "particularly for the larger than memory",
    "start": "158010",
    "end": "160530"
  },
  {
    "text": "database transaction processing case",
    "start": "160530",
    "end": "162510"
  },
  {
    "text": "what's going on here well kubernetes",
    "start": "162510",
    "end": "165239"
  },
  {
    "text": "does not like you to run a pod that uses",
    "start": "165239",
    "end": "168959"
  },
  {
    "text": "100% of the resources of the system it",
    "start": "168959",
    "end": "172019"
  },
  {
    "text": "likes to reserve some for the system",
    "start": "172019",
    "end": "173579"
  },
  {
    "text": "components and everything else so I have",
    "start": "173579",
    "end": "175230"
  },
  {
    "text": "to dial back and throttle that pod to",
    "start": "175230",
    "end": "177450"
  },
  {
    "text": "use slightly less resources in the",
    "start": "177450",
    "end": "179010"
  },
  {
    "text": "system I had and when the database is",
    "start": "179010",
    "end": "180870"
  },
  {
    "text": "much larger than memory that dialing",
    "start": "180870",
    "end": "182639"
  },
  {
    "text": "back has a strong performance effect now",
    "start": "182639",
    "end": "185280"
  },
  {
    "start": "185000",
    "end": "185000"
  },
  {
    "text": "let's look at some other storage",
    "start": "185280",
    "end": "186450"
  },
  {
    "text": "configuration so one is for every one of",
    "start": "186450",
    "end": "188519"
  },
  {
    "text": "the kubernetes cloud providers of the",
    "start": "188519",
    "end": "189959"
  },
  {
    "text": "AWS cloud provider OpenStack cloud",
    "start": "189959",
    "end": "191579"
  },
  {
    "text": "provider or whatever there is a native",
    "start": "191579",
    "end": "193620"
  },
  {
    "text": "storage component there to use the cloud",
    "start": "193620",
    "end": "195659"
  },
  {
    "text": "provider storage directly through",
    "start": "195659",
    "end": "197489"
  },
  {
    "text": "kubernetes and so let's see what the",
    "start": "197489",
    "end": "199530"
  },
  {
    "text": "performance is like here well",
    "start": "199530",
    "end": "200959"
  },
  {
    "text": "unsurprisingly since we are still using",
    "start": "200959",
    "end": "202980"
  },
  {
    "text": "EBS the performance is pretty much",
    "start": "202980",
    "end": "205590"
  },
  {
    "text": "identical to the previous case even",
    "start": "205590",
    "end": "207480"
  },
  {
    "text": "though we're going through a different",
    "start": "207480",
    "end": "208620"
  },
  {
    "text": "code path by the way this particular",
    "start": "208620",
    "end": "210930"
  },
  {
    "text": "performance test is a lot of jurors so",
    "start": "210930",
    "end": "212730"
  },
  {
    "text": "things that are less than a difference",
    "start": "212730",
    "end": "214139"
  },
  {
    "text": "of 5% really don't matter so we're",
    "start": "214139",
    "end": "216840"
  },
  {
    "text": "getting the same performance there so",
    "start": "216840",
    "end": "218639"
  },
  {
    "text": "two really good performance cases now",
    "start": "218639",
    "end": "221069"
  },
  {
    "start": "221000",
    "end": "221000"
  },
  {
    "text": "let's do something more sophisticated",
    "start": "221069",
    "end": "222989"
  },
  {
    "text": "let's do container eyes cluster storage",
    "start": "222989",
    "end": "225419"
  },
  {
    "text": "now what that is is I actually run a",
    "start": "225419",
    "end": "228449"
  },
  {
    "text": "bunch of storage daemons in containers",
    "start": "228449",
    "end": "231209"
  },
  {
    "text": "like luster SF and then I network them",
    "start": "231209",
    "end": "234479"
  },
  {
    "text": "together to create clustered redundant",
    "start": "234479",
    "end": "236639"
  },
  {
    "text": "storage running on top of kubernetes",
    "start": "236639",
    "end": "238079"
  },
  {
    "text": "that is also supplying storage to",
    "start": "238079",
    "end": "240180"
  },
  {
    "text": "kubernetes now this is a redundant file",
    "start": "240180",
    "end": "243299"
  },
  {
    "text": "system that is making multiple copies of",
    "start": "243299",
    "end": "245280"
  },
  {
    "text": "everything so we don't expect it to be",
    "start": "245280",
    "end": "246780"
  },
  {
    "text": "as fast as using a plain file system and",
    "start": "246780",
    "end": "251549"
  },
  {
    "text": "in fact a cluster FS which is the first",
    "start": "251549",
    "end": "254040"
  },
  {
    "start": "252000",
    "end": "252000"
  },
  {
    "text": "one I tried which specifically says it",
    "start": "254040",
    "end": "256139"
  },
  {
    "text": "is not optimized for databases we find",
    "start": "256139",
    "end": "257699"
  },
  {
    "text": "out well it's not optimized for",
    "start": "257699",
    "end": "258930"
  },
  {
    "text": "databases running on kubernetes or not",
    "start": "258930",
    "end": "260989"
  },
  {
    "text": "definitely much I big cut here rook and",
    "start": "260989",
    "end": "264779"
  },
  {
    "text": "staff did a little bit better in my",
    "start": "264779",
    "end": "266490"
  },
  {
    "text": "tests that",
    "start": "266490",
    "end": "267090"
  },
  {
    "text": "much better particularly for the",
    "start": "267090",
    "end": "268590"
  },
  {
    "text": "in-memory database case because it's",
    "start": "268590",
    "end": "271290"
  },
  {
    "text": "optimized a lot more for slow write for",
    "start": "271290",
    "end": "273690"
  },
  {
    "text": "small writes so some conclusions that",
    "start": "273690",
    "end": "277440"
  },
  {
    "text": "actually came to from here was first of",
    "start": "277440",
    "end": "279720"
  },
  {
    "text": "all if you're not going to be using",
    "start": "279720",
    "end": "281729"
  },
  {
    "text": "container as cluster I storage we can be",
    "start": "281729",
    "end": "283020"
  },
  {
    "text": "using some form of straight storage",
    "start": "283020",
    "end": "284400"
  },
  {
    "text": "don't worry about the overhead imposed",
    "start": "284400",
    "end": "286949"
  },
  {
    "text": "by kubernetes for the database case it",
    "start": "286949",
    "end": "288479"
  },
  {
    "text": "won't matter it's not a significant",
    "start": "288479",
    "end": "290460"
  },
  {
    "text": "amount and you'll have some other",
    "start": "290460",
    "end": "292260"
  },
  {
    "text": "options that allow you to trade off for",
    "start": "292260",
    "end": "294000"
  },
  {
    "text": "dumbed nc4 performance but keep in mind",
    "start": "294000",
    "end": "296910"
  },
  {
    "text": "that each type is optimized for a",
    "start": "296910",
    "end": "298350"
  },
  {
    "text": "different workload so follow me further",
    "start": "298350",
    "end": "300419"
  },
  {
    "text": "test in my blog thanks",
    "start": "300419",
    "end": "302440"
  },
  {
    "text": "[Applause]",
    "start": "302440",
    "end": "307220"
  }
]