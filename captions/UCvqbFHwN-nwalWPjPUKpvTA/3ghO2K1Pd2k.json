[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "ready okay great everyone ready hi everyone thank you for coming to envoy",
    "start": "0",
    "end": "7620"
  },
  {
    "text": "con 2019 this is the first thought that our team has done about the work that we",
    "start": "7620",
    "end": "12960"
  },
  {
    "text": "have been focusing for the past few months so Mike and I are really excited to be here to share the progress that",
    "start": "12960",
    "end": "18359"
  },
  {
    "text": "we've made over the past few months we just heard a great talk",
    "start": "18359",
    "end": "23670"
  },
  {
    "text": "from Spotify about the value of running envoy at the edge of your infrastructure in this talk we want to introduce",
    "start": "23670",
    "end": "30150"
  },
  {
    "text": "unblameable which is a child project of the Android ecosystem and in it we want",
    "start": "30150",
    "end": "35460"
  },
  {
    "text": "to extend the concept of the edge to our mobile clients we want the mobile clients to be another node in the",
    "start": "35460",
    "end": "40680"
  },
  {
    "text": "network part of the mesh so our talk",
    "start": "40680",
    "end": "46440"
  },
  {
    "text": "will guide you through the story of Android mobile in four parts first we want to discuss the justification for",
    "start": "46440",
    "end": "52590"
  },
  {
    "text": "bringing Android to mobile as any engineering project it's a big investment of time and resources and we",
    "start": "52590",
    "end": "58320"
  },
  {
    "text": "want to to show you why we think it's valuable it's a valuable project to embark on after that we will dive deep",
    "start": "58320",
    "end": "64799"
  },
  {
    "text": "into what it took to bring envoy to mobile after that I'd like to discuss",
    "start": "64799",
    "end": "70650"
  },
  {
    "text": "where we are now both as an open-source project and also in its integration with",
    "start": "70650",
    "end": "75659"
  },
  {
    "text": "the lyft app and lastly we want to share some of the exciting roadmap items that",
    "start": "75659",
    "end": "81180"
  },
  {
    "text": "we have planned moving forward so let's begin with the motivation of Weibring",
    "start": "81180",
    "end": "87420"
  },
  {
    "start": "83000",
    "end": "345000"
  },
  {
    "text": "envoy to mobile with the introduction of envoy a lot of companies lyft included",
    "start": "87420",
    "end": "94320"
  },
  {
    "text": "have deployed a network topology similar to the one you see up there envoy is",
    "start": "94320",
    "end": "99750"
  },
  {
    "text": "dealing with every hop of the network all the way from the edge of the infrastructure into the service mesh and",
    "start": "99750",
    "end": "105810"
  },
  {
    "text": "even out to third-party services and our data storage primitives envoy has done a",
    "start": "105810",
    "end": "111570"
  },
  {
    "text": "great deal of increasing reliability and observability in the back-end infrastructure by having this Universal",
    "start": "111570",
    "end": "117960"
  },
  {
    "text": "network primitive that is performant reliable configurable and extensible we",
    "start": "117960",
    "end": "123119"
  },
  {
    "text": "have largely made the network transparent to our back-end engineers and importantly when problems actually",
    "start": "123119",
    "end": "129899"
  },
  {
    "text": "do arise envoys best-in-class observer has made it increasingly easy to debug",
    "start": "129899",
    "end": "135430"
  },
  {
    "text": "network problems however our premise the",
    "start": "135430",
    "end": "140980"
  },
  {
    "text": "premise of my team is that not three 9s server side is actually meaningless if",
    "start": "140980",
    "end": "146350"
  },
  {
    "text": "the users of mobile applicable allocations can actually complete the network flows only a fraction of the",
    "start": "146350",
    "end": "152770"
  },
  {
    "text": "time without going mobile we propose that we can extend all the benefits of",
    "start": "152770",
    "end": "157960"
  },
  {
    "text": "Envoy at the at the back-end infrastructure all the way to our mobile kinds but this vision requires a",
    "start": "157960",
    "end": "167230"
  },
  {
    "text": "paradigm shift because traditionally we've treated our clients as separate from our back-end infrastructure we've",
    "start": "167230",
    "end": "173830"
  },
  {
    "text": "treated them as a unique problem that requires unique solutions that are platform-specific so really we can't say",
    "start": "173830",
    "end": "181810"
  },
  {
    "text": "that Android has become a true Universal Network primitive if all the network",
    "start": "181810",
    "end": "187060"
  },
  {
    "text": "flows that our mobile platforms that we use day in and day out start and end with the mobile clients the one hardware",
    "start": "187060",
    "end": "193300"
  },
  {
    "text": "envoy is not running so we are proposing with Android mobile that we don't need",
    "start": "193300",
    "end": "199660"
  },
  {
    "text": "to treat the mobile clients any differently like I said we want them on their mobile clients to become part of",
    "start": "199660",
    "end": "206769"
  },
  {
    "text": "the network to become another node in this mesh however it's the existing",
    "start": "206769",
    "end": "211959"
  },
  {
    "text": "solutions our platform specific and thus we can say that we have this Universal network primitive that will homogenize",
    "start": "211959",
    "end": "217959"
  },
  {
    "text": "the behavior of the network end to end in other words today there's no open source solution that can run everywhere",
    "start": "217959",
    "end": "224769"
  },
  {
    "text": "at the as this Universal network primitive and this is where we see envoy mobile fitting in the ecosystem so with",
    "start": "224769",
    "end": "232750"
  },
  {
    "text": "this project and by extending the last smile of our of our network topology we",
    "start": "232750",
    "end": "238360"
  },
  {
    "text": "want that we want true standardization of the network similar to what kubernetes has done for standardizing",
    "start": "238360",
    "end": "245230"
  },
  {
    "text": "container orchestration we want envoy to do for the network and we believe that",
    "start": "245230",
    "end": "250269"
  },
  {
    "text": "Android mobile is that next logical step in the standardization process so why is",
    "start": "250269",
    "end": "257079"
  },
  {
    "text": "why is this standardization useful well we think that for largely the same some",
    "start": "257080",
    "end": "263169"
  },
  {
    "text": "of the same reasons that standardization was useful in the back end standardization will be useful between",
    "start": "263169",
    "end": "268909"
  },
  {
    "text": "our mobile clients and the edge of our infrastructure for one we can write one",
    "start": "268909",
    "end": "274639"
  },
  {
    "text": "write code once and deploy it everywhere by having the same universal network",
    "start": "274639",
    "end": "280009"
  },
  {
    "text": "primitive end to end we can embark on projects that would be otherwise prohibitive due to the engineering costs",
    "start": "280009",
    "end": "286099"
  },
  {
    "text": "of having three implementations in iOS and Android and then in our back-end services with envoy mobile and Envoy in",
    "start": "286099",
    "end": "293599"
  },
  {
    "text": "the backend we can implement things one and deploying them deploy them everywhere for instance we can",
    "start": "293599",
    "end": "299419"
  },
  {
    "text": "experiment with protocols like quick second we can share common tooling for",
    "start": "299419",
    "end": "305539"
  },
  {
    "text": "common problems by having the same metrics for example be emitted by our",
    "start": "305539",
    "end": "310639"
  },
  {
    "text": "mobile clients and our back-end infrastructure we can use the same touring and the same monitoring",
    "start": "310639",
    "end": "315979"
  },
  {
    "text": "infrastructure in order to really see the network end-to-end we can allow our",
    "start": "315979",
    "end": "322669"
  },
  {
    "text": "our engineers to operate with the same with the same metrics all the way from a",
    "start": "322669",
    "end": "328370"
  },
  {
    "text": "mobile clients into the edge and into a back-end infrastructure and lastly and",
    "start": "328370",
    "end": "333770"
  },
  {
    "text": "related by having the same network stack everywhere we can reduce the cognitive",
    "start": "333770",
    "end": "338779"
  },
  {
    "text": "load of this network engineers by having them expect the same behavior through",
    "start": "338779",
    "end": "344029"
  },
  {
    "text": "and through today envoy Mobile is",
    "start": "344029",
    "end": "353630"
  },
  {
    "start": "345000",
    "end": "384000"
  },
  {
    "text": "running in the alpha version of the lyft app but before we got there we had to",
    "start": "353630",
    "end": "358729"
  },
  {
    "text": "really realize that this was even something that was going to be possible Envoy itself is back-end server software",
    "start": "358729",
    "end": "364520"
  },
  {
    "text": "it runs in a dedicated process with multiple threads in order to run on Android and iOS in a sandboxed",
    "start": "364520",
    "end": "371029"
  },
  {
    "text": "environment as something that the applications could use it would need to run in a thread in the app which",
    "start": "371029",
    "end": "376909"
  },
  {
    "text": "required rethinking assumptions about how ombo is run how it was even built",
    "start": "376909",
    "end": "383020"
  },
  {
    "start": "384000",
    "end": "597000"
  },
  {
    "text": "fortunately for us envoy is built with basil which is a powerful build system which offers parallelized builds and",
    "start": "385640",
    "end": "392130"
  },
  {
    "text": "incremental builds basil also has strong",
    "start": "392130",
    "end": "397200"
  },
  {
    "text": "cross-platform support and across architecture support this allowed us to",
    "start": "397200",
    "end": "403170"
  },
  {
    "text": "solve one of the initial problems with actually targeting multiple architectures and targeting multiple platforms our first proof of concept was",
    "start": "403170",
    "end": "409890"
  },
  {
    "text": "simply getting envoy up and running on mobile clients running it on iOS running it on Android wrapped in a thin layer of",
    "start": "409890",
    "end": "416340"
  },
  {
    "text": "an application our library necessarily requires code across multiple languages",
    "start": "416340",
    "end": "423180"
  },
  {
    "text": "for multiple platforms we have Swift we have Objective C we have Kotlin and Java we have C bindings and we have envoy as",
    "start": "423180",
    "end": "431220"
  },
  {
    "text": "the core this naturally led us to something of a layered architecture you",
    "start": "431220",
    "end": "438030"
  },
  {
    "text": "can see on the right we have actually envoy itself as one of our Basel targets envoy is the core of envoy mobile and",
    "start": "438030",
    "end": "444180"
  },
  {
    "text": "actually performs all the heavy lifting it is the same software path that envoy uses to carry requests in the backend",
    "start": "444180",
    "end": "451940"
  },
  {
    "text": "additionally we have code which maps directly to envoy which uses envoys",
    "start": "451940",
    "end": "457800"
  },
  {
    "text": "native types and interfaces and this perform this is the core layer of our library above this we have our common",
    "start": "457800",
    "end": "464100"
  },
  {
    "text": "bindings which allows us to be cross-platform these were decided to be C bindings for maximal support across",
    "start": "464100",
    "end": "469620"
  },
  {
    "text": "different languages and platforms and then finally we actually have code that's written for Android and for iOS",
    "start": "469620",
    "end": "476420"
  },
  {
    "text": "platform code that exposes high-level interfaces to which client developers application developers are familiar",
    "start": "476420",
    "end": "482820"
  },
  {
    "text": "using common patterns and common types",
    "start": "482820",
    "end": "487610"
  },
  {
    "text": "but even with this layered architecture we still need to answer a important foundational question how do you take",
    "start": "487940",
    "end": "494340"
  },
  {
    "text": "something which was designed to run as a server to run as a process and run it instead as an engine Envoy itself is",
    "start": "494340",
    "end": "504330"
  },
  {
    "text": "designed to such a way again something that we've been able to leverage that most of the code in Envoy is actually",
    "start": "504330",
    "end": "510240"
  },
  {
    "text": "written as if it's running in a single threaded context most code doesn't deal with synchronization or crossing thread",
    "start": "510240",
    "end": "515580"
  },
  {
    "text": "boundaries this was really useful to us we knew we were going to be run in a thread which was not the roots out",
    "start": "515580",
    "end": "520800"
  },
  {
    "text": "of the process and one we'd have to actually have external control over how things are run we were able to leverage",
    "start": "520800",
    "end": "526320"
  },
  {
    "text": "the starting a model in envoy to actually move things all to a single thread two envoys main thread",
    "start": "526320",
    "end": "532640"
  },
  {
    "text": "additionally of course we have application threads which are going to need to call in to envoy in order to",
    "start": "532640",
    "end": "537960"
  },
  {
    "text": "manage its lifecycle and actually issue requests this is a networking library at the end of the day and finally we have",
    "start": "537960",
    "end": "544920"
  },
  {
    "text": "callback threads envoy needs some way to actually signal back to the application that something has happened a response",
    "start": "544920",
    "end": "550080"
  },
  {
    "text": "has been received or an error these callback threads of course might be application threads in fact they're",
    "start": "550080",
    "end": "556440"
  },
  {
    "text": "provided by the application again using native mechanisms to their respective platforms so on iOS you have grants",
    "start": "556440",
    "end": "563160"
  },
  {
    "text": "until dispatch and dispatch queues on Android you have executor x' and runner Boles but the importance is the",
    "start": "563160",
    "end": "570029"
  },
  {
    "text": "flexibility here that the speed another unique contacts wreaking dispatch work if we take these three different",
    "start": "570029",
    "end": "577260"
  },
  {
    "text": "threading contacts and we also take these three different layers of the library code and we overlay them into a matrix we can actually visualize the",
    "start": "577260",
    "end": "584430"
  },
  {
    "text": "architecture of the library a little bit and talk about how we've solved the problem with moving between threads and moving between layers the library in a",
    "start": "584430",
    "end": "591750"
  },
  {
    "text": "way that allows us to run envoy on both iOS and Android for starters when the",
    "start": "591750",
    "end": "600030"
  },
  {
    "text": "client developer goes to create an envoy client what they're going to use ultimately to manage the engines lifecycle and issue requests the engine",
    "start": "600030",
    "end": "607230"
  },
  {
    "text": "is now responsible for starting up the Envoy runner thread this is the thread upon which on will run again in this",
    "start": "607230",
    "end": "613080"
  },
  {
    "text": "context envoy is actually single threaded it's not multi-threaded like it is when it's running on the server back-end",
    "start": "613080",
    "end": "618740"
  },
  {
    "text": "however this envoy main thread is these same main thread from Omelas perspective",
    "start": "618740",
    "end": "624240"
  },
  {
    "text": "as its main thread is running the background again we're leveraging the same code path the same initialization path to run this now envoy on the",
    "start": "624240",
    "end": "634200"
  },
  {
    "text": "backend is multi-threaded there's the main thread and there's worker threads when a request comes in a listener",
    "start": "634200",
    "end": "639870"
  },
  {
    "text": "assigns a request to a worker thread and that work the thread will handle the request for the lifetime of that",
    "start": "639870",
    "end": "645280"
  },
  {
    "text": "when the work of thread actually needs to communicate with the main thread it will use an event dispatcher a construct",
    "start": "645280",
    "end": "651490"
  },
  {
    "text": "that's backed by low-level event library to actually dispatch that work thus avoiding a necessary shared state and",
    "start": "651490",
    "end": "657130"
  },
  {
    "text": "synchronization additionally on occasion a work a thread that's handling a request will need to actually dispatch",
    "start": "657130",
    "end": "664270"
  },
  {
    "text": "work that's asynchronous and out of band maybe that's for authorization a call out to an authorization service or maybe",
    "start": "664270",
    "end": "670300"
  },
  {
    "text": "it's for rate limiting an envoy and a sync client construct is used for this to issue these side requests for envoy",
    "start": "670300",
    "end": "680020"
  },
  {
    "text": "mobile we've leveraged these two constructs we've used an event dispatcher and an async client actually",
    "start": "680020",
    "end": "685870"
  },
  {
    "text": "formed the core of our direct API into envoy not an API that's mitigated by a socket but actually one that's mediated",
    "start": "685870",
    "end": "692770"
  },
  {
    "text": "by direct function calls into envoys core so this gives us a way to actually",
    "start": "692770",
    "end": "701500"
  },
  {
    "text": "send work into envoy and upon void dispatched requests for us but it still doesn't come close to solving the whole",
    "start": "701500",
    "end": "706660"
  },
  {
    "text": "problem when the application gives us a request via its high-level API is giving",
    "start": "706660",
    "end": "712510"
  },
  {
    "text": "us types that the application understands created in Swift and created in Kotlin or Objective C in Java",
    "start": "712510",
    "end": "718570"
  },
  {
    "text": "and moreover it's using memory that the application manages envoy doesn't know",
    "start": "718570",
    "end": "724120"
  },
  {
    "text": "anything about how these platforms manage their memory and conversely these platforms don't know anything about how",
    "start": "724120",
    "end": "729850"
  },
  {
    "text": "envoy manages memory either fortunately for us oddly actually has a fairly",
    "start": "729850",
    "end": "736540"
  },
  {
    "text": "powerful buffer abstraction that it uses already in Envoy buffers are an abstract",
    "start": "736540",
    "end": "742210"
  },
  {
    "text": "wrapper around individual fragments and these fragments are what actually knows where the physical memory is each of",
    "start": "742210",
    "end": "747520"
  },
  {
    "text": "these fragments has a done callback once Envoy is done with the fragment it can call done it's done IO or whatever and",
    "start": "747520",
    "end": "754150"
  },
  {
    "text": "the buffer can be released by whatever mechanism is used with that fragment implementation we've extended this",
    "start": "754150",
    "end": "759730"
  },
  {
    "text": "concept at our intermediary layer our bridge layer this has allowed us to",
    "start": "759730",
    "end": "766300"
  },
  {
    "text": "actually map this done callback back to platform specific concepts of memory management on iOS we have automatic",
    "start": "766300",
    "end": "773230"
  },
  {
    "text": "reference counting AR C on Java we have the garbage collector in the JVM they have their own unique",
    "start": "773230",
    "end": "779350"
  },
  {
    "text": "characteristics but the important thing is that we wanted to avoid actually leading to Thai logic that was bridged",
    "start": "779350",
    "end": "785860"
  },
  {
    "text": "closely to envoy to how memories can be managed in the platform instead what happens is these unique buffer fragment",
    "start": "785860",
    "end": "791350"
  },
  {
    "text": "implementations map that done callback back to the actual platform memory management schemes this allows envoy to",
    "start": "791350",
    "end": "798550"
  },
  {
    "text": "signal when it's done with a buffer and the buffer can be potentially free but that's really up to the platform",
    "start": "798550",
    "end": "803650"
  },
  {
    "text": "maybe the platform's keeping the buffer around for longer we won't inadvertently free it before the platform's done with it once we've converted types into an",
    "start": "803650",
    "end": "814390"
  },
  {
    "text": "appropriate form that can actually past and represent it as envoys native types now it's time to actually hand the work",
    "start": "814390",
    "end": "819520"
  },
  {
    "text": "off to our boys event dispatcher from here it's passed they sing client and the request goes out to the open",
    "start": "819520",
    "end": "824920"
  },
  {
    "text": "Internet this is actually an area where we've contributed to upstream envoy to",
    "start": "824920",
    "end": "831279"
  },
  {
    "text": "allow for further support in this library we see this as an ongoing opportunity running on voice a library",
    "start": "831279",
    "end": "836860"
  },
  {
    "text": "means we can generalize concepts envoy and create new abstractions as well as potentially degree factors that provide",
    "start": "836860",
    "end": "842560"
  },
  {
    "text": "overall benefits to envoy both when it's running in the backend as a server and when it's running as a library once",
    "start": "842560",
    "end": "851529"
  },
  {
    "text": "we've issued a request we'll eventually hopefully receive a response we need to surface these responses back up to the",
    "start": "851529",
    "end": "857680"
  },
  {
    "text": "application somehow we do this with callbacks again though we have this common binding layer which is something",
    "start": "857680",
    "end": "863560"
  },
  {
    "text": "that allows us to be cross-platform and portable but it's not something that the application understands we knew we",
    "start": "863560",
    "end": "869770"
  },
  {
    "text": "wanted this library to be easy to use we didn't want client developers needing to understand the various characteristics",
    "start": "869770",
    "end": "876070"
  },
  {
    "text": "of function pointers in C to actually be able to leverage the library our own callbacks are necessarily see function",
    "start": "876070",
    "end": "881800"
  },
  {
    "text": "pointers our bindings are see however we want to client developers people use their own dispatch mechanisms and their",
    "start": "881800",
    "end": "889150"
  },
  {
    "text": "own concurrency concepts for actually passing callbacks down to the library this means we needed platform specific",
    "start": "889150",
    "end": "895720"
  },
  {
    "text": "dispatchers and it's with our C bindings where the platform provides its own dispatch mechanism as well as its own",
    "start": "895720",
    "end": "901630"
  },
  {
    "text": "callback mechanism that can be mapped to pot the platform's own concept lambda is on iOS you have Grand Central",
    "start": "901630",
    "end": "908350"
  },
  {
    "text": "Dispatch firt for actual dispatch and then you have blocks commonly used for that for concurrency on Android we've",
    "start": "908350",
    "end": "916959"
  },
  {
    "text": "elected to use the executor pattern which has been around forever as well as rentals to allow for a maximally",
    "start": "916959",
    "end": "922569"
  },
  {
    "text": "flexible interface to support a variety of different concurrency mechanisms now",
    "start": "922569",
    "end": "928720"
  },
  {
    "text": "to actually make this work with C callback so we need a way for Envoy we will call this code which has no way of",
    "start": "928720",
    "end": "933850"
  },
  {
    "text": "actually understanding this code path is of course coming out of envoy through our bridge layer back up to the",
    "start": "933850",
    "end": "940179"
  },
  {
    "text": "platform in order to accomplish this we leaned on an old C pattern wherein when",
    "start": "940179",
    "end": "945279"
  },
  {
    "text": "the platform provides callbacks bridge callbacks to Envoy they actually contain a type erased context in addition to a",
    "start": "945279",
    "end": "952569"
  },
  {
    "text": "static see function pointer both of which the platform provides for its own unique use case that's the function",
    "start": "952569",
    "end": "958389"
  },
  {
    "text": "pointer can't capture state it's just C but because it has this void star context the platform can attach whatever",
    "start": "958389",
    "end": "965199"
  },
  {
    "text": "it wants alongside that static function when Envoy calls that function that function then has the necessary logic to",
    "start": "965199",
    "end": "971499"
  },
  {
    "text": "understand that context that's been pass through and actually rehydrate the lambda providing the platform with a",
    "start": "971499",
    "end": "977679"
  },
  {
    "text": "native callback handled via native dispatch we've",
    "start": "977679",
    "end": "983470"
  },
  {
    "text": "deliberately made the design decision with our library to actually have our request path and response path be almost",
    "start": "983470",
    "end": "989050"
  },
  {
    "text": "entirely unsynchronized this is important not only because of simplicity and it's a pattern that envoy already",
    "start": "989050",
    "end": "994720"
  },
  {
    "text": "follows but it also allows us to handle the case that in mobile applications the",
    "start": "994720",
    "end": "1001050"
  },
  {
    "text": "place where request is called may actually be remote from where the response is handled reducing shared",
    "start": "1001050",
    "end": "1007290"
  },
  {
    "text": "state means that we can reduce complexity in support in these use cases and instead provide strong contracts or",
    "start": "1007290",
    "end": "1013620"
  },
  {
    "text": "on the timing and the handling of requests and responses the oh the one notable exception to this is actually",
    "start": "1013620",
    "end": "1019139"
  },
  {
    "text": "cancellation cancellation as handle isn't interrupt and again provides strong contracts around when it's handled and is dispatched both",
    "start": "1019139",
    "end": "1025770"
  },
  {
    "text": "downstream and upstream simultaneously",
    "start": "1025770",
    "end": "1029779"
  },
  {
    "start": "1030000",
    "end": "1448000"
  },
  {
    "text": "thanks for an accident deep dive into internals of the library Mike so with",
    "start": "1033100",
    "end": "1038298"
  },
  {
    "text": "all that built I want to proceed into where we now both as an open source library and also in its integration into",
    "start": "1038299",
    "end": "1045620"
  },
  {
    "text": "the lift app a few weeks ago we released version 0.2 of the library which we",
    "start": "1045620",
    "end": "1052460"
  },
  {
    "text": "consider to be alpha ready for everyone to experiment with it while the API",
    "start": "1052460",
    "end": "1058190"
  },
  {
    "text": "might change a little bit we we think that the design decisions that are foundational to a library are very sound",
    "start": "1058190",
    "end": "1064899"
  },
  {
    "text": "additionally for a little over a month ago now we integrated Android mobile",
    "start": "1064899",
    "end": "1069919"
  },
  {
    "text": "into the lift app for the alpha release this is actually a picture of our team",
    "start": "1069919",
    "end": "1075140"
  },
  {
    "text": "taking the first lift write ever where all Network calls were dispatched via Android mobile we of course went to grab",
    "start": "1075140",
    "end": "1081620"
  },
  {
    "text": "some donuts so let's take a look at how we actually integrated unblameable into",
    "start": "1081620",
    "end": "1087649"
  },
  {
    "text": "the lift app at lift we have taken a model-based approach to designing our",
    "start": "1087649",
    "end": "1093110"
  },
  {
    "text": "API s what this means is that when an engineer wants to expose a new public facing API at lift all they have to",
    "start": "1093110",
    "end": "1100100"
  },
  {
    "text": "think about is writing this proto then after the protis written and committed",
    "start": "1100100",
    "end": "1107149"
  },
  {
    "text": "our generation pipelines actually generate clients in all the languages that we support at lift both for our",
    "start": "1107149",
    "end": "1114320"
  },
  {
    "text": "mobile clients and also for our back-end infrastructure getting to this state of model-based api's was a gradual process",
    "start": "1114320",
    "end": "1121370"
  },
  {
    "text": "and if you're interested in this aspect please look out for a blog post and a",
    "start": "1121370",
    "end": "1126529"
  },
  {
    "text": "talk from my colleague Michael rabello which is actually going to come to the lift engineering blog sometime later this year so on mobile we go a step",
    "start": "1126529",
    "end": "1135110"
  },
  {
    "text": "further and we actually pre compile the their files into into package modules",
    "start": "1135110",
    "end": "1140360"
  },
  {
    "text": "this allows us to reduce compile times for our mobile clients and it also allows us to better organize the api's",
    "start": "1140360",
    "end": "1147860"
  },
  {
    "text": "and their dependencies what this means is that we can really experiment with the implementation details underneath",
    "start": "1147860",
    "end": "1154460"
  },
  {
    "text": "this packages for for a variety of reasons explicitly for Android mobile",
    "start": "1154460",
    "end": "1160309"
  },
  {
    "text": "what this means is that we can swap transparent the classic networking libraries like",
    "start": "1160309",
    "end": "1165380"
  },
  {
    "text": "URL session in iOS and okay HTTP in Android for onboard mobile and that's",
    "start": "1165380",
    "end": "1171980"
  },
  {
    "text": "what we did so let's take a look at the actual API calls that are done by our",
    "start": "1171980",
    "end": "1177620"
  },
  {
    "text": "app now one of the one of the things that I want to highlight here is that we",
    "start": "1177620",
    "end": "1184250"
  },
  {
    "text": "have made it our goal to make our high-level economic API is pretty identical between iOS and Android so",
    "start": "1184250",
    "end": "1191690"
  },
  {
    "text": "here you see up top a swift example and below a cut an example for the rest of the slides I'm going to only show Swift",
    "start": "1191690",
    "end": "1198440"
  },
  {
    "text": "code but you can assume that a continent that the continent code is pretty identical so the first thing that the",
    "start": "1198440",
    "end": "1206860"
  },
  {
    "text": "application does is create an android client and what this does underneath the hood is actually instantiate and create",
    "start": "1206860",
    "end": "1213770"
  },
  {
    "text": "the Envoy engine that mike was talking about at this point we have exposed some",
    "start": "1213770",
    "end": "1219680"
  },
  {
    "text": "configuration elements so for example we allow you to change the log level of the engine or even the stats versioning",
    "start": "1219680",
    "end": "1226760"
  },
  {
    "text": "interval then you can build a request with that to use with the engine here",
    "start": "1226760",
    "end": "1234590"
  },
  {
    "text": "you can add for example the API path that you want to hit on the remote host and we have exposed the ability to",
    "start": "1234590",
    "end": "1242810"
  },
  {
    "text": "attach custom headers or even Network constructs like a retry policy and I",
    "start": "1242810",
    "end": "1248420"
  },
  {
    "text": "want to emphasize here that the retry policy that we expose actually maps to an voice retry behavior because at the",
    "start": "1248420",
    "end": "1255830"
  },
  {
    "text": "core its envoy that is running that Network logic lastly you build a response handler that",
    "start": "1255830",
    "end": "1263090"
  },
  {
    "text": "will receive the callbacks back from Envoy like Mike was describing so for",
    "start": "1263090",
    "end": "1268700"
  },
  {
    "text": "example you might have an on headers fallback or an on data callback that will be mapped up to two application",
    "start": "1268700",
    "end": "1275900"
  },
  {
    "text": "code to wrap it all up you submit the request and the response handler with",
    "start": "1275900",
    "end": "1281960"
  },
  {
    "text": "two to the engine and the engine allows you to interact with this open stream for example by sending data and then",
    "start": "1281960",
    "end": "1289390"
  },
  {
    "text": "subsequently closing the string so well lift us integrated with ongoing mobile",
    "start": "1289390",
    "end": "1295760"
  },
  {
    "text": "using this more obey approach we actually planned to to make Android mobile a drop-in replacement for",
    "start": "1295760",
    "end": "1301830"
  },
  {
    "text": "a lot of mobile applications so we know that this means exposing compatible bindings to classic networking libraries",
    "start": "1301830",
    "end": "1307560"
  },
  {
    "text": "like nsurl session and ok HTTP so we",
    "start": "1307560",
    "end": "1313440"
  },
  {
    "text": "started this project with the premise that 3:9 server-side was was not enough and that mobile clients were really",
    "start": "1313440",
    "end": "1320100"
  },
  {
    "text": "prime candidates to benefit from the same standardization that the back-end infrastructure has received by deploying",
    "start": "1320100",
    "end": "1325770"
  },
  {
    "text": "envoy at lift one we once we integrated with the lift with with the app we took",
    "start": "1325770",
    "end": "1332190"
  },
  {
    "text": "this is our first opportunity to start experimenting with the benefits that we could that we could actually see and",
    "start": "1332190",
    "end": "1338160"
  },
  {
    "text": "stats were actually the first the first step there so we all know that envoy has",
    "start": "1338160",
    "end": "1344160"
  },
  {
    "text": "best-in-class observability for example it flushes hundreds of time serious metrics every stats versioning interval",
    "start": "1344160",
    "end": "1350180"
  },
  {
    "text": "these stats have become invaluable to operate the network at lyft and I'm sure",
    "start": "1350180",
    "end": "1355230"
  },
  {
    "text": "at a lot of your companies now that Android mobile is running on the lift clients we actually had access to the",
    "start": "1355230",
    "end": "1361680"
  },
  {
    "text": "same metric stream as we had in our back-end infrastructure so really the goal that we're trying to achieve here",
    "start": "1361680",
    "end": "1367680"
  },
  {
    "text": "is for an engineer to be able to observe the network and to end from the mobile client into the back-end infrastructure",
    "start": "1367680",
    "end": "1374580"
  },
  {
    "text": "by using the same metrics stats is",
    "start": "1374580",
    "end": "1379830"
  },
  {
    "text": "actually one of the points that we have already get done dividends from having on boy be the core of Android mobile",
    "start": "1379830",
    "end": "1386240"
  },
  {
    "text": "because thanks to on was a great extensibility we actually leverage the",
    "start": "1386240",
    "end": "1391950"
  },
  {
    "text": "metric service stat sync to get to get stats out of Android mobile the metric",
    "start": "1391950",
    "end": "1397710"
  },
  {
    "text": "service allows us to get time-series metrics via G RPC so we built a very",
    "start": "1397710",
    "end": "1402840"
  },
  {
    "text": "simple G RPC service that could receive those metrics and then emit them to our",
    "start": "1402840",
    "end": "1408120"
  },
  {
    "text": "already existing metrics infrastructure and just like that we can start plotting",
    "start": "1408120",
    "end": "1415590"
  },
  {
    "text": "the same metrics that we see in our back-end services for our mobile clients",
    "start": "1415590",
    "end": "1420780"
  },
  {
    "text": "so for example here you can see the request count up top coming from the mobile clients and below coming from",
    "start": "1420780",
    "end": "1428039"
  },
  {
    "text": "edge infrastructure I really want to emphasize how powerful this construct is because it really is giving us insight",
    "start": "1428039",
    "end": "1435509"
  },
  {
    "text": "into parts of our infrastructure that we did not have before this is just the",
    "start": "1435509",
    "end": "1440609"
  },
  {
    "text": "first of many examples of how Android mobile can really start unlocking a whole new wave of potential in our",
    "start": "1440609",
    "end": "1446549"
  },
  {
    "text": "mobile kinds stats are a super big deal",
    "start": "1446549",
    "end": "1455399"
  },
  {
    "start": "1448000",
    "end": "1852000"
  },
  {
    "text": "for us actually having that level of insight into mobile clients is something you've struggled with for a long time even when we instrumented them ad hoc we",
    "start": "1455399",
    "end": "1462509"
  },
  {
    "text": "dealt with discrepancies between the implementations and inconsistencies between client versions in between platforms having stats turned on opened",
    "start": "1462509",
    "end": "1470070"
  },
  {
    "text": "the floodgates having the same visibility into our clients in our back-end is really remarkable for us that said we are very",
    "start": "1470070",
    "end": "1477749"
  },
  {
    "text": "early on in the project for Envoy mobile and we see immense opportunity here in the near future we're gonna be",
    "start": "1477749",
    "end": "1484139"
  },
  {
    "text": "experimenting with a quick protocol rolling it out to our mobile clients with envoy mobile rather needing to work",
    "start": "1484139",
    "end": "1489809"
  },
  {
    "text": "with quick implementations that are unique to both Android and iOS as well as our back-end we can roll out a single",
    "start": "1489809",
    "end": "1495090"
  },
  {
    "text": "stack and have a lot of the work done for us by Google who's already working on it in in Envoy secondly envoy has",
    "start": "1495090",
    "end": "1503340"
  },
  {
    "text": "extensible filter chain something which Spotify mentioned actually leveraging this on the mobile client so well as",
    "start": "1503340",
    "end": "1509639"
  },
  {
    "text": "well will allow us to develop single solutions for multiple patterns for instance auth is something we can solve",
    "start": "1509639",
    "end": "1515159"
  },
  {
    "text": "in a universal way not only in the backend but we can also solve off in a filter on a mobile client as well",
    "start": "1515159",
    "end": "1521389"
  },
  {
    "text": "compression is another example rather needing to roll out compression with unique gzip implementations we can do",
    "start": "1521389",
    "end": "1528359"
  },
  {
    "text": "the same thing in a filter across all our nodes in our network it even opens up the opportunity to explore explore",
    "start": "1528359",
    "end": "1533820"
  },
  {
    "text": "things like Google's own new compression algorithm broadly we would ordinarily never consider implementing this on our",
    "start": "1533820",
    "end": "1539159"
  },
  {
    "text": "mobile clients and back-end simply because the resources required would be too much instead with a single",
    "start": "1539159",
    "end": "1545729"
  },
  {
    "text": "implementation we can try it deploy it everywhere and see how it works envoy itself already has",
    "start": "1545729",
    "end": "1552479"
  },
  {
    "text": "intelligent behavior and how it selects connections with health checking and with various load bowing load balancing",
    "start": "1552479",
    "end": "1559139"
  },
  {
    "text": "configurations we see this as a concept we can extend further to actually allow envoy to",
    "start": "1559139",
    "end": "1564330"
  },
  {
    "text": "intelligently select connections over different interfaces be it Wi-Fi or cellular or fallback between different",
    "start": "1564330",
    "end": "1570870"
  },
  {
    "text": "protocols quick or fall back to HTTP ipv6 or ipv4 to have a rich set of",
    "start": "1570870",
    "end": "1577710"
  },
  {
    "text": "possible technologies the mobile client can be using to communicate with us but be intelligently selecting the one",
    "start": "1577710",
    "end": "1582870"
  },
  {
    "text": "that's actually working in any given time Jose mentioned the model based API we",
    "start": "1582870",
    "end": "1588930"
  },
  {
    "text": "use a lift and while we want to expose a variety of bindings to envoy mobile to allow to be used in in use cases as",
    "start": "1588930",
    "end": "1596040"
  },
  {
    "text": "simple as HTTP up to actual model based DPI's we see a huge opportunity with mobile api's or at model-based api's and",
    "start": "1596040",
    "end": "1603180"
  },
  {
    "text": "actually plan on supporting them first class in envoy mobile by doing this we think we can actually expose the ability",
    "start": "1603180",
    "end": "1609840"
  },
  {
    "text": "to annotate these models as well with how they should be communicated with the server in varying in our conditions this",
    "start": "1609840",
    "end": "1615780"
  },
  {
    "text": "could range from annotating entire models with certain retry policies down to actually annotating individual fields",
    "start": "1615780",
    "end": "1621840"
  },
  {
    "text": "with whether you should be included or dropped based on the current networking conditions you could further even mark",
    "start": "1621840",
    "end": "1626850"
  },
  {
    "text": "models of something that are deferrable or if something that envoy can fake a success for when it's offline so that",
    "start": "1626850",
    "end": "1632400"
  },
  {
    "text": "the application flow can proceed while envoy will handle the actual synchronization of state in the backend later on envoy of course has rich",
    "start": "1632400",
    "end": "1640350"
  },
  {
    "text": "dynamic configuration and this is something where we see a huge opportunity for mobile clients as well actually using this configuration would",
    "start": "1640350",
    "end": "1646830"
  },
  {
    "text": "allow us in theory to change the network topology all the way out to our mobile clients on the fly without needing to",
    "start": "1646830",
    "end": "1652530"
  },
  {
    "text": "deploy new out versions this could range or something like incident response or failover scenarios down to actually",
    "start": "1652530",
    "end": "1658890"
  },
  {
    "text": "doing something like rolling out a new pop which are traditionally require things like changing dns finally we're",
    "start": "1658890",
    "end": "1665400"
  },
  {
    "text": "already exploring opportunities to extend envoy mobile beyond our actual phones lyft has its fleet of rentable",
    "start": "1665400",
    "end": "1671870"
  },
  {
    "text": "transportation devices which are prime candidates running envoy mobile they face many of the same networking",
    "start": "1671870",
    "end": "1677610"
  },
  {
    "text": "challenges that our phones do when they're out in the wild we've also had interest from people thinking about IOT",
    "start": "1677610",
    "end": "1683640"
  },
  {
    "text": "and or even have people who are interested in the project from their perspective of using envoy simply as AC",
    "start": "1683640",
    "end": "1689190"
  },
  {
    "text": "networking library to replace libraries that are written in other which is one of the most amazing aspects",
    "start": "1689190",
    "end": "1698740"
  },
  {
    "text": "of envoy is its vibrant community and this is a big part of what's made the project successful we've made the deliberate decision to develop envoy",
    "start": "1698740",
    "end": "1705280"
  },
  {
    "text": "mobile in the open it is already open source and though it's a small project still very early on we're making rapid",
    "start": "1705280",
    "end": "1710920"
  },
  {
    "text": "progress and we welcome both input from the community and what your needs are as well as contributions to the project",
    "start": "1710920",
    "end": "1716530"
  },
  {
    "text": "we're very excited for the road ahead and we look forward to working with you all thank you",
    "start": "1716530",
    "end": "1723299"
  },
  {
    "text": "we have I think just about a minute left a little bit more in case anyone has any questions they want to ask really",
    "start": "1727940",
    "end": "1734010"
  },
  {
    "text": "quickly right now yes I think all the",
    "start": "1734010",
    "end": "1747480"
  },
  {
    "text": "presentations are going to be recorded and the slides will be shared we're definitely happy to share these slides as well",
    "start": "1747480",
    "end": "1754789"
  },
  {
    "text": "potentially yes but I repeat the question oh I'm sorry yes okay yeah so the question was and let me know if I",
    "start": "1768520",
    "end": "1775100"
  },
  {
    "text": "got this right do we see tension between the server oriented design of envoy and the SDK",
    "start": "1775100",
    "end": "1781070"
  },
  {
    "text": "oriented use case that yes I mean potentially there could be but I think",
    "start": "1781070",
    "end": "1787490"
  },
  {
    "text": "that whether or not we encounter that and whether that actually is you know inherent complexity or incidental depends on some of the design decisions",
    "start": "1787490",
    "end": "1793760"
  },
  {
    "text": "that we make as well so part of this project is simply discovering and thinking about how to run envoys a",
    "start": "1793760",
    "end": "1799250"
  },
  {
    "text": "library which is sort of core to envoy anyways it's simply a new use case for envoy what we envision is having the",
    "start": "1799250",
    "end": "1806450"
  },
  {
    "text": "necessary components of envoy be generalized and was traction to the point or configurable to the point where",
    "start": "1806450",
    "end": "1811550"
  },
  {
    "text": "we can actually have different modes that they run in certain parts of envoy will of course always be oriented towards running on the server at one",
    "start": "1811550",
    "end": "1818060"
  },
  {
    "text": "point when we actually stripped those out from the actual part that we shipped to mobile clients that as a platform but",
    "start": "1818060",
    "end": "1823580"
  },
  {
    "text": "again many of these core you hisk is really are quite parallel at the end of the day we're trying to send requests",
    "start": "1823580",
    "end": "1828770"
  },
  {
    "text": "over a network we'd like visibility to those requests we'd like to control what happens to them when they're in flight at different",
    "start": "1828770",
    "end": "1834140"
  },
  {
    "text": "hops and we think that those core levels are really the most important shared aspect of this and that's really what",
    "start": "1834140",
    "end": "1839900"
  },
  {
    "text": "we're driving for I think that's all the time that we have but we're gonna be",
    "start": "1839900",
    "end": "1845030"
  },
  {
    "text": "here all day and through the week so if you're interested in the project please come talk to us thank you thank you",
    "start": "1845030",
    "end": "1850100"
  },
  {
    "text": "everyone [Applause]",
    "start": "1850100",
    "end": "1854059"
  }
]