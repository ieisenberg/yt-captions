[
  {
    "start": "0",
    "end": "134000"
  },
  {
    "text": "I am Ito product manager from most of our time is spent with customers",
    "start": "7840",
    "end": "15170"
  },
  {
    "text": "working on cloud hit products and this is Kevin good afternoon everyone my name",
    "start": "15170",
    "end": "21260"
  },
  {
    "text": "my name is Kevin and I am an engineer from and financial I mainly focus on cloud native related",
    "start": "21260",
    "end": "28340"
  },
  {
    "text": "technologies okay today Oh together we are going to introduce the sellers platform our team",
    "start": "28340",
    "end": "36020"
  },
  {
    "text": "has been working on it supports large scale applications before we get started",
    "start": "36020",
    "end": "43190"
  },
  {
    "text": "I like to ask two quick questions first how many of you have used illness",
    "start": "43190",
    "end": "48290"
  },
  {
    "text": "for a POC or demo in cloud please raise your hands quite a lot so how how many",
    "start": "48290",
    "end": "56330"
  },
  {
    "text": "of you have given that in production please raise your hands I saw fewer hands so fool√≠s involving",
    "start": "56330",
    "end": "64580"
  },
  {
    "text": "very very fast if you take a look at projects listed in the CN CF landscape",
    "start": "64580",
    "end": "70310"
  },
  {
    "text": "for service you will be surprised as its progress why is so blur so attractive we already",
    "start": "70310",
    "end": "77960"
  },
  {
    "text": "have containers kubinashi and so many cool features what makes a difference in",
    "start": "77960",
    "end": "83479"
  },
  {
    "text": "my opinion surplused attracts me for the three reasons the first is that I take care of the",
    "start": "83479",
    "end": "89149"
  },
  {
    "text": "infrastructure so we no longer need to worry about only focus on business logic",
    "start": "89149",
    "end": "94810"
  },
  {
    "text": "second is that it supports key r20 when",
    "start": "94810",
    "end": "100219"
  },
  {
    "text": "there's no workload and the coast our time is really fast when the new traffic",
    "start": "100219",
    "end": "105649"
  },
  {
    "text": "comin comes in again a third is that we divided the applications into pieces and",
    "start": "105649",
    "end": "111439"
  },
  {
    "text": "it supports to deploy from code from code package or even from image this is",
    "start": "111439",
    "end": "121429"
  },
  {
    "text": "allow us to divide the application into pieces and merge them we work workflows",
    "start": "121429",
    "end": "126950"
  },
  {
    "text": "to permute to build a bit logic application because",
    "start": "126950",
    "end": "134360"
  },
  {
    "start": "134000",
    "end": "275000"
  },
  {
    "text": "of these advantages serverless is useful in some use cases in real world first",
    "start": "134360",
    "end": "142730"
  },
  {
    "text": "full public cloud it is suitable for developer individual",
    "start": "142730",
    "end": "148319"
  },
  {
    "text": "developers and small teams because they want to get things started as fast as possible and they won't the workload",
    "start": "148319",
    "end": "156150"
  },
  {
    "text": "just scare to zero to save the cost it also suitable for some industry cloud an",
    "start": "156150",
    "end": "163620"
  },
  {
    "text": "industry cloud is some company or organizations that builds its platform to share the infrastructures and",
    "start": "163620",
    "end": "170060"
  },
  {
    "text": "resources to other partners so they won't have to build infrastructure again",
    "start": "170060",
    "end": "176510"
  },
  {
    "text": "instead they can collaborate and build a player applications servers can help to",
    "start": "176510",
    "end": "184319"
  },
  {
    "text": "reduce the cost to the minimize own premised customers also find serve less",
    "start": "184319",
    "end": "191609"
  },
  {
    "text": "useful first you can imagine that company is doing some marketing campaigns set a time critical before",
    "start": "191609",
    "end": "199829"
  },
  {
    "text": "that the operation teams will have to pre buy some machines and say who has",
    "start": "199829",
    "end": "205470"
  },
  {
    "text": "made the number but if the consumptions goes beyond that number they will cause",
    "start": "205470",
    "end": "212489"
  },
  {
    "text": "some online problems if that goes down lower than the number it means that there'll be some waste of the results",
    "start": "212489",
    "end": "219919"
  },
  {
    "text": "also some companies are running big data and machine learning tasks as you know those tasks always requires machines",
    "start": "219919",
    "end": "227849"
  },
  {
    "text": "that has better performance with service they can scale to zero when those tasks",
    "start": "227849",
    "end": "236040"
  },
  {
    "text": "are not running those resources can be saved for other workload also it provides a",
    "start": "236040",
    "end": "244799"
  },
  {
    "text": "new way to transform our monolithic applications to elastic applications for",
    "start": "244799",
    "end": "251069"
  },
  {
    "text": "those legacy apps it's difficult to take it into micro service auto cries we can",
    "start": "251069",
    "end": "257669"
  },
  {
    "text": "we can gradually divide them and select those functionalities view them review",
    "start": "257669",
    "end": "263699"
  },
  {
    "text": "them with functions api's workflows gradually turn them into elastic",
    "start": "263699",
    "end": "269010"
  },
  {
    "text": "application yet despite we have so",
    "start": "269010",
    "end": "275130"
  },
  {
    "start": "275000",
    "end": "348000"
  },
  {
    "text": "although we have those use cases we still find some problems when we're",
    "start": "275130",
    "end": "282160"
  },
  {
    "text": "trying to build service platform these are the key problems we like to share",
    "start": "282160",
    "end": "287740"
  },
  {
    "text": "from our experience the first concern is a performance so far as I know running",
    "start": "287740",
    "end": "295449"
  },
  {
    "text": "tentative on kubernetes takes a lot of long time for the code start and it even",
    "start": "295449",
    "end": "302050"
  },
  {
    "text": "get worse when the cluster scales second there's a cost as a maintainer of the",
    "start": "302050",
    "end": "309430"
  },
  {
    "text": "platform you still have to take care of each layer of settlers and its",
    "start": "309430",
    "end": "314800"
  },
  {
    "text": "dependencies for mesh and kubernetes it means sometimes you would even have to",
    "start": "314800",
    "end": "320650"
  },
  {
    "text": "pay for the nose that not in use last but not least security so if L talk",
    "start": "320650",
    "end": "329050"
  },
  {
    "text": "around time personalized talk rongzi is prone to escapes so we have all these",
    "start": "329050",
    "end": "336669"
  },
  {
    "text": "key problems and later this time I will hand over to Kevin to share our attempts",
    "start": "336669",
    "end": "344349"
  },
  {
    "text": "to address them yes thank you so in this",
    "start": "344349",
    "end": "350770"
  },
  {
    "start": "348000",
    "end": "387000"
  },
  {
    "text": "session today we're going to share with you how we tackle of some of the above-mentioned problems as and",
    "start": "350770",
    "end": "357490"
  },
  {
    "text": "financial and some of our heart and experiences when we are trying to build a service platform we are going to",
    "start": "357490",
    "end": "364030"
  },
  {
    "text": "elaborate on how to boost the performance of cane native drastically cut the code start latency and then",
    "start": "364030",
    "end": "370570"
  },
  {
    "text": "we're going to talk about how to reduce the cost of running a service platform finally we will take a look at how to",
    "start": "370570",
    "end": "377680"
  },
  {
    "text": "scale the service platform horizontally and solve the problems that arise when",
    "start": "377680",
    "end": "383949"
  },
  {
    "text": "we run a service platform at scale first let's talk about performance as some of",
    "start": "383949",
    "end": "390789"
  },
  {
    "start": "387000",
    "end": "436000"
  },
  {
    "text": "you may already know when the kubernetes cluster gets larger and larger is",
    "start": "390789",
    "end": "396310"
  },
  {
    "text": "performance deteriorates I have done some tests so with a kubernetes cluster",
    "start": "396310",
    "end": "402430"
  },
  {
    "text": "of about 1,000 node it actually takes a long for the scheduling process to finish our",
    "start": "402430",
    "end": "409060"
  },
  {
    "text": "average it would take about 10 seconds to schedule a pod to a note and then there is like docker image pull there is",
    "start": "409060",
    "end": "416560"
  },
  {
    "text": "containers start up there is waiting for the container readiness probe to be",
    "start": "416560",
    "end": "421630"
  },
  {
    "text": "ready and finally there is registry in the pod to the service mesh altogether",
    "start": "421630",
    "end": "426880"
  },
  {
    "text": "it can take about 20 seconds so 20 seconds for the pod to start 20 seconds",
    "start": "426880",
    "end": "433419"
  },
  {
    "text": "is totally unacceptable for individuals website as mentioned just now the key",
    "start": "433419",
    "end": "439479"
  },
  {
    "start": "436000",
    "end": "504000"
  },
  {
    "text": "value will be the the code start time is very fast but if a part takes like 20 20",
    "start": "439479",
    "end": "446500"
  },
  {
    "text": "seconds to start most of the times users will find his service is cannot be",
    "start": "446500",
    "end": "452020"
  },
  {
    "text": "visited so that user experience must be very bad yes just imagine if a user was",
    "start": "452020",
    "end": "459039"
  },
  {
    "text": "for 20 seconds before the website even starts loading that is unacceptable right and the programmer not wanting",
    "start": "459039",
    "end": "466660"
  },
  {
    "text": "this to happen maybe we will configure this service have formed to to always keep at least",
    "start": "466660",
    "end": "472510"
  },
  {
    "text": "one replica and that you never scale to zero by doing so they actually defy the",
    "start": "472510",
    "end": "478389"
  },
  {
    "text": "purpose of server lists because now they cannot get the benefit of scaling to",
    "start": "478389",
    "end": "484060"
  },
  {
    "text": "zero and they will still be charged even if nobody is going to use their service so that is going to be a deal-breaker",
    "start": "484060",
    "end": "491139"
  },
  {
    "text": "and our engineer team must solve this problem so we actually came up with a",
    "start": "491139",
    "end": "497800"
  },
  {
    "text": "very creative idea to solve this problem and as far as I know this is an original",
    "start": "497800",
    "end": "503199"
  },
  {
    "text": "idea how do we do that we use something called a port full what is potful it's",
    "start": "503199",
    "end": "510190"
  },
  {
    "start": "504000",
    "end": "597000"
  },
  {
    "text": "like we just start up 20 to 100 pots or another number",
    "start": "510190",
    "end": "516039"
  },
  {
    "text": "yeah we just start having some thoughts and let them sit there without doing anything and when the service platform",
    "start": "516039",
    "end": "523330"
  },
  {
    "text": "demands the creation of a new pot instead of starting up a pot from scratch we look into the pot pool and",
    "start": "523330",
    "end": "530740"
  },
  {
    "text": "find one of the pots that that is in the ready state that is in a standby state",
    "start": "530740",
    "end": "537130"
  },
  {
    "text": "and ready to be used and we then adopt that pod and the injection the user code into",
    "start": "537130",
    "end": "542230"
  },
  {
    "text": "that pod so as to run the user code by doing is this where you can effectively",
    "start": "542230",
    "end": "547390"
  },
  {
    "text": "skip the the cost of like scheduling a pod or registering a polity real service",
    "start": "547390",
    "end": "553450"
  },
  {
    "text": "measure etcetera we can save a lot of time it's actually blazing fast you know just general speaking port pool is just",
    "start": "553450",
    "end": "562240"
  },
  {
    "text": "like resource pools we have used in daily life like polls of four database",
    "start": "562240",
    "end": "570370"
  },
  {
    "text": "connections thread pools so they have been proven to enhance the performance so basically what Paul works in the same",
    "start": "570370",
    "end": "578380"
  },
  {
    "text": "way so so far as we know that there is no like mmm community project on this",
    "start": "578380",
    "end": "584770"
  },
  {
    "text": "part so we started idea and implement for scratch yes we had to implement this",
    "start": "584770",
    "end": "590980"
  },
  {
    "text": "idea from scratch using mixing the object for pattern and kubernetes pots",
    "start": "590980",
    "end": "596430"
  },
  {
    "text": "how do we implement it I'm going to give the details here so the first thing that you're gonna do is that you define your",
    "start": "596430",
    "end": "602980"
  },
  {
    "start": "597000",
    "end": "960000"
  },
  {
    "text": "CR DS you create two to see our DS for this task what we are actually doing here is trying to add a new type of",
    "start": "602980",
    "end": "610090"
  },
  {
    "text": "workload to kubernetes so I think that's the name of our CR they should conform",
    "start": "610090",
    "end": "616390"
  },
  {
    "text": "to what kubernetes already has to provide so everybody knows that kubernetes has got deployment and the",
    "start": "616390",
    "end": "622540"
  },
  {
    "text": "replica set let's just call our customer resource server less deployment and the server less terrific asset not only",
    "start": "622540",
    "end": "629680"
  },
  {
    "text": "should the name be Simula the specs should also be very similar to the original kubernetes workloads because",
    "start": "629680",
    "end": "636310"
  },
  {
    "text": "what we are actually trying to do is to fork their code and only modify some of",
    "start": "636310",
    "end": "641320"
  },
  {
    "text": "the behaviors so after we are done with defining the CR DS the next step is to",
    "start": "641320",
    "end": "648010"
  },
  {
    "text": "do some coding we can just afford the controller manager from kubernetes for",
    "start": "648010",
    "end": "653470"
  },
  {
    "text": "those of you who do not know control the manager is a kubernetes component control plan component that we consult",
    "start": "653470",
    "end": "660400"
  },
  {
    "text": "or handles the the deployment or replica says resource in kubernetes and for",
    "start": "660400",
    "end": "668230"
  },
  {
    "text": "example we have creates pods when it finds out that the rick has the wanted replicas in horrific",
    "start": "668230",
    "end": "675740"
  },
  {
    "text": "acid is less than the actual replica so we just for his code and we changed one",
    "start": "675740",
    "end": "683630"
  },
  {
    "text": "of his behavior the the behavior that we change is that instead of sending a",
    "start": "683630",
    "end": "688700"
  },
  {
    "text": "poster request to the API server to create a pole from scratch we now let us",
    "start": "688700",
    "end": "694160"
  },
  {
    "text": "send a get request to the API server with a label selector to find out about",
    "start": "694160",
    "end": "699260"
  },
  {
    "text": "other standby ports and pick one of the port in that list according to our",
    "start": "699260",
    "end": "705650"
  },
  {
    "text": "policy and adopt that port to run the user code basically if you inject the",
    "start": "705650",
    "end": "711950"
  },
  {
    "text": "user code into that the run import well the last part the the injecting the user",
    "start": "711950",
    "end": "717770"
  },
  {
    "text": "code into the running part is the interesting one how are we going to do",
    "start": "717770",
    "end": "722870"
  },
  {
    "text": "that there are some possible ways well the first one is the easiest one we can",
    "start": "722870",
    "end": "728660"
  },
  {
    "text": "use something called a code loader so so what is a code loader a coal loader is a program whose sole purpose is to like",
    "start": "728660",
    "end": "737060"
  },
  {
    "text": "sit in the container and the wait for instructions from the outside it can get",
    "start": "737060",
    "end": "743390"
  },
  {
    "text": "instructors from the outside and know where to download the code and after",
    "start": "743390",
    "end": "748730"
  },
  {
    "text": "it's done downloading the code it will execute the code so when the controller wants to inject for example a Java file",
    "start": "748730",
    "end": "757520"
  },
  {
    "text": "into a running container you can just send an HTTP request for likes and jrkz",
    "start": "757520",
    "end": "763130"
  },
  {
    "text": "request to the code loader to inform the code loader about the URL of the user",
    "start": "763130",
    "end": "770060"
  },
  {
    "text": "code package then the cold water will just download the image and execute it then the user program will be up and",
    "start": "770060",
    "end": "776540"
  },
  {
    "text": "running well some of you may say that this is not a native way to do things",
    "start": "776540",
    "end": "782300"
  },
  {
    "text": "because we are using HTTP requests and our pcs we should be using declarative",
    "start": "782300",
    "end": "788390"
  },
  {
    "text": "ways to do things right I agree so maybe we can leverage another feature",
    "start": "788390",
    "end": "795170"
  },
  {
    "text": "from kubernetes that has the downward api one of the future one of the future",
    "start": "795170",
    "end": "800420"
  },
  {
    "text": "of downward api is that it can map the annotations of a pod to a file that sits that stays in a",
    "start": "800420",
    "end": "807630"
  },
  {
    "text": "container so when the controller wants to notify the code loader of the URL it",
    "start": "807630",
    "end": "814680"
  },
  {
    "text": "just updates the port and notation it just writes the URL into that pause annotation and then the file in the",
    "start": "814680",
    "end": "821970"
  },
  {
    "text": "container will change the Ko'olau they will watch for changes of that file in The Contender using mechanisms like I",
    "start": "821970",
    "end": "829320"
  },
  {
    "text": "notified and when it has found out that the the content has changed it will read",
    "start": "829320",
    "end": "835290"
  },
  {
    "text": "the content against the URL and do things just like the old way okay sounds",
    "start": "835290",
    "end": "840810"
  },
  {
    "text": "good but actually there's a limitation to this method is that now we limit the users to running called packages such as",
    "start": "840810",
    "end": "848160"
  },
  {
    "text": "those jar files what if the user doesn't want to run called packages but instead they want to run the images so we got to",
    "start": "848160",
    "end": "857040"
  },
  {
    "text": "figure out some other ways well one possible way and the one easy way is to",
    "start": "857040",
    "end": "862200"
  },
  {
    "text": "use maybe a fumarole container if humoral containers is a quite new group an athiest feature that allows the pod",
    "start": "862200",
    "end": "869430"
  },
  {
    "text": "to run a new contender without restarting the pod or without recreating a pod so basically you're the controller",
    "start": "869430",
    "end": "877650"
  },
  {
    "text": "can just inject a new container into a running pod and the container will start however this is actually not a",
    "start": "877650",
    "end": "884400"
  },
  {
    "text": "recommended way to use a funeral containers and there are many side effects so this solution is no good what",
    "start": "884400",
    "end": "890730"
  },
  {
    "text": "we do here at and financial is that we forked and we modified the code of",
    "start": "890730",
    "end": "896100"
  },
  {
    "text": "cubelets which has the no the demon that runs on every kubernetes worker to allow",
    "start": "896100",
    "end": "902970"
  },
  {
    "text": "the dynamic substitution of containers at runtime so after we modify this code the",
    "start": "902970",
    "end": "910650"
  },
  {
    "text": "herbalist will get informed of the spec change of the container and when he sees",
    "start": "910650",
    "end": "917250"
  },
  {
    "text": "that the container spec has changed it will it will just cure the old container",
    "start": "917250",
    "end": "923700"
  },
  {
    "text": "and start a new contender and add the container back to that pod again some of",
    "start": "923700",
    "end": "929610"
  },
  {
    "text": "you may consider is this a bad practice because the community edition of kubernetes",
    "start": "929610",
    "end": "935060"
  },
  {
    "text": "cannot do this right but as far as I am concerned I think we are not directly",
    "start": "935060",
    "end": "940510"
  },
  {
    "text": "providing a crepinette service to the end-user we are just trying to build a",
    "start": "940510",
    "end": "946340"
  },
  {
    "text": "service platform on top of kubernetes so I think that may be a good solution",
    "start": "946340",
    "end": "952520"
  },
  {
    "text": "because this is a solution with the least the side effect your mileage may vary again okay another important aspect",
    "start": "952520",
    "end": "963050"
  },
  {
    "text": "of pole pool is the size of the pool why",
    "start": "963050",
    "end": "968450"
  },
  {
    "text": "it is so important you can imagine that if the size goes to large it means that",
    "start": "968450",
    "end": "974810"
  },
  {
    "text": "its large be on the consumption step it costs the waste and if nice girls too",
    "start": "974810",
    "end": "980630"
  },
  {
    "text": "small it will function like cache miss it means that most of the time the",
    "start": "980630",
    "end": "987230"
  },
  {
    "text": "controller will not be able to schedule the workload into a ready part so the",
    "start": "987230",
    "end": "994120"
  },
  {
    "text": "societies are really important how we achieve this we design an algorithm that",
    "start": "994120",
    "end": "1000340"
  },
  {
    "text": "automatically adjust the size according to the usage this usage is calculated",
    "start": "1000340",
    "end": "1007740"
  },
  {
    "text": "from the parsed windows so in English first time windows will get the average",
    "start": "1007740",
    "end": "1015120"
  },
  {
    "text": "number of the estimated number for the",
    "start": "1015120",
    "end": "1021130"
  },
  {
    "text": "pod in each past time windows and for this moment will get the average of the",
    "start": "1021130",
    "end": "1027040"
  },
  {
    "text": "past time windows so a good algorithm will turn out the results shown as shown",
    "start": "1027040",
    "end": "1034240"
  },
  {
    "text": "in this picture as you can see there are two lines the green one shows the size",
    "start": "1034240",
    "end": "1040390"
  },
  {
    "text": "of the container pool while the blue one shows the consumptions you can see that",
    "start": "1040390",
    "end": "1045610"
  },
  {
    "text": "these two lines are very close meaning that the size of the pool is like of",
    "start": "1045610",
    "end": "1053410"
  },
  {
    "text": "like all the time its covers consumptions but at the same time minimize the waste okay so after all",
    "start": "1053410",
    "end": "1064120"
  },
  {
    "start": "1061000",
    "end": "1167000"
  },
  {
    "text": "these optimizations performance we like show the results we",
    "start": "1064120",
    "end": "1069159"
  },
  {
    "text": "have achieved here for a simple Java HTTP server application so co-star time",
    "start": "1069159",
    "end": "1076260"
  },
  {
    "text": "from goes down from 20 minutes to 1.8 20",
    "start": "1076260",
    "end": "1082270"
  },
  {
    "text": "1.8 seconds it's a surprisingly 90% improvement imagine individual developers running a",
    "start": "1082270",
    "end": "1090130"
  },
  {
    "text": "website and he find he or she finds it only takes 2 seconds to load the web",
    "start": "1090130",
    "end": "1095470"
  },
  {
    "text": "page he will be more likely to keep service at why yes I was also very",
    "start": "1095470",
    "end": "1103080"
  },
  {
    "text": "pleased with the result that we were able to achieve and let's think about",
    "start": "1103080",
    "end": "1108370"
  },
  {
    "text": "some other applications some other use cases about this thoughtful thing I have",
    "start": "1108370",
    "end": "1113740"
  },
  {
    "text": "listed a few here like service mesh micro services or frameworks that takes",
    "start": "1113740",
    "end": "1119260"
  },
  {
    "text": "a long time to start or services that requires to download a lot of data before you can be started I think that's",
    "start": "1119260",
    "end": "1126940"
  },
  {
    "text": "generally speaking any system that requires a long time to pre-warm can",
    "start": "1126940",
    "end": "1132580"
  },
  {
    "text": "benefit from such an approach and that is why I do think that this port for",
    "start": "1132580",
    "end": "1138610"
  },
  {
    "text": "pattern can be very useful I believe that with this thing kubernetes the",
    "start": "1138610",
    "end": "1145059"
  },
  {
    "text": "applications running on kubernetes they can not only be reliable and observable but they can also be very performant",
    "start": "1145059",
    "end": "1151679"
  },
  {
    "text": "that is why I think maybe someday we should set up like especially especially",
    "start": "1151679",
    "end": "1157360"
  },
  {
    "text": "interest groups to to formalize things and to push this idea further I believe",
    "start": "1157360",
    "end": "1162549"
  },
  {
    "text": "it is going to be beneficial to the community and to everyone yeah ok next",
    "start": "1162549",
    "end": "1169809"
  },
  {
    "start": "1167000",
    "end": "1243000"
  },
  {
    "text": "we are going to talk the problem about cost reduction as you know Canadia is a",
    "start": "1169809",
    "end": "1175720"
  },
  {
    "text": "collection of deployments running on kubernetes it contains a lot of",
    "start": "1175720",
    "end": "1181539"
  },
  {
    "text": "components like as shown here like cognitive controllers activator",
    "start": "1181539",
    "end": "1187980"
  },
  {
    "text": "autoscaler it also has a dependencies for a full mesh see steel and ingress",
    "start": "1187980",
    "end": "1194740"
  },
  {
    "text": "gateway for kubernetes like Kublai this control manager something like that the problem here is",
    "start": "1194740",
    "end": "1201630"
  },
  {
    "text": "that all both the cumin a competitive component and the dependencies are very",
    "start": "1201630",
    "end": "1207750"
  },
  {
    "text": "costly it will take a lot of resources to run this if in a multi-tenant",
    "start": "1207750",
    "end": "1215750"
  },
  {
    "text": "environment so things even get worse so counselors course and gigabytes of",
    "start": "1215750",
    "end": "1222420"
  },
  {
    "text": "memories will be used used your hosts the platform and sometimes they are not",
    "start": "1222420",
    "end": "1228630"
  },
  {
    "text": "in use yes countless cores are used but they produce no real value because no real",
    "start": "1228630",
    "end": "1234690"
  },
  {
    "text": "user application is running on that right so how do we solve this problem to solve this problem we need to flip",
    "start": "1234690",
    "end": "1241170"
  },
  {
    "text": "the model flip the architecture and after we flip the model it becomes like this now there is a shared kubernetes",
    "start": "1241170",
    "end": "1248610"
  },
  {
    "start": "1243000",
    "end": "1294000"
  },
  {
    "text": "cluster and there is going to be a shared set of connected components running on that shared kubernetes",
    "start": "1248610",
    "end": "1255390"
  },
  {
    "text": "cluster and then there are going to be many many many tenants and now the only",
    "start": "1255390",
    "end": "1261120"
  },
  {
    "text": "thing that attendance does is to create his or her own cognitive app and then",
    "start": "1261120",
    "end": "1267150"
  },
  {
    "text": "the share the key native controller will get notified of that new app and the reconcile that new app in the do",
    "start": "1267150",
    "end": "1273090"
  },
  {
    "text": "everything just the all the way well in this approach there will be basically no",
    "start": "1273090",
    "end": "1279630"
  },
  {
    "text": "additional cost of adding one more tenant to the whole system because now the cost is only going to be",
    "start": "1279630",
    "end": "1285480"
  },
  {
    "text": "proportional to the number of apps that are created in the platform and replicas",
    "start": "1285480",
    "end": "1291450"
  },
  {
    "text": "of each app so how do we achieve multi-tenancy or how do we allow",
    "start": "1291450",
    "end": "1299370"
  },
  {
    "start": "1294000",
    "end": "1381000"
  },
  {
    "text": "multiple users to share one single kubernetes cluster without interfering",
    "start": "1299370",
    "end": "1304980"
  },
  {
    "text": "each other there are again two ways to do this so the first way is the easiest and the most practiced way it is named",
    "start": "1304980",
    "end": "1312690"
  },
  {
    "text": "based either on a Sorak name space based isolation to very simply we just create",
    "start": "1312690",
    "end": "1318570"
  },
  {
    "text": "one name space for one tenant and set up the our bags so that the tenant will",
    "start": "1318570",
    "end": "1324059"
  },
  {
    "text": "only have access to his or her own namespace and no privilege to access the namespaces of",
    "start": "1324059",
    "end": "1330430"
  },
  {
    "text": "other tenants Wow I to be honest I have to say that this approach is sufficient",
    "start": "1330430",
    "end": "1336640"
  },
  {
    "text": "for most use cases and it should be enough but at end financial we have",
    "start": "1336640",
    "end": "1342520"
  },
  {
    "text": "pushed the idea of multi-tenancy further by implementing a fully multi tenant kubernetes we do this by adding an extra",
    "start": "1342520",
    "end": "1350290"
  },
  {
    "text": "layer of directory to the eg CD which is a storage engine that is behind the",
    "start": "1350290",
    "end": "1356110"
  },
  {
    "text": "kubernetes and we just store the data of each tenant to that extra directory to",
    "start": "1356110",
    "end": "1363220"
  },
  {
    "text": "innovation their own directory right and by doing this we can achieve we can make",
    "start": "1363220",
    "end": "1368560"
  },
  {
    "text": "a fully multi tenant kubernetes so that everything can be isolated and supports",
    "start": "1368560",
    "end": "1374710"
  },
  {
    "text": "multi tenant there are a lot of technical details here which I'm not going to cover in this talk ok that's",
    "start": "1374710",
    "end": "1381010"
  },
  {
    "text": "about the next stage you will also have other ways to reduce the cost you can",
    "start": "1381010",
    "end": "1387280"
  },
  {
    "text": "choose to use a class autoscaler provided by communities and to set the scaling rules it will do the release and",
    "start": "1387280",
    "end": "1395220"
  },
  {
    "text": "provision notes by itself and you can also choose for equivalent along with",
    "start": "1395220",
    "end": "1401970"
  },
  {
    "text": "cloud services that is provides home demand container like Alibaba elastic",
    "start": "1401970",
    "end": "1408700"
  },
  {
    "text": "container instance yes yes so whether you are using a container on the mount",
    "start": "1408700",
    "end": "1414250"
  },
  {
    "text": "service or whether you are just using elastic computing service you can save the costs because when you are using",
    "start": "1414250",
    "end": "1420130"
  },
  {
    "text": "their service you are actually sharing a very very big resource pool with all the other customers so the more you share",
    "start": "1420130",
    "end": "1427330"
  },
  {
    "text": "the less the waste and so the lower the costs right but there is catch here",
    "start": "1427330",
    "end": "1438360"
  },
  {
    "start": "1435000",
    "end": "1469000"
  },
  {
    "text": "things continuous are easy to use and fast can easily be integrated into our",
    "start": "1438360",
    "end": "1444280"
  },
  {
    "text": "systems but security is a potential problem here since they share the same",
    "start": "1444280",
    "end": "1450400"
  },
  {
    "text": "Linux kernel and it may cost some",
    "start": "1450400",
    "end": "1455850"
  },
  {
    "text": "security issues like if one malicious container take over the host that it will damage",
    "start": "1455850",
    "end": "1462720"
  },
  {
    "text": "caused damage to other containers contain turn-ins containers so you know",
    "start": "1462720",
    "end": "1469500"
  },
  {
    "start": "1469000",
    "end": "1503000"
  },
  {
    "text": "what we are going to approach this problem is that we are going to use cut-up containers",
    "start": "1469500",
    "end": "1476070"
  },
  {
    "text": "cut containers takes a different way of addresses is that behind each pot it is",
    "start": "1476070",
    "end": "1483210"
  },
  {
    "text": "not actually continuous it's lightweight vm's it looks like and feels like",
    "start": "1483210",
    "end": "1488880"
  },
  {
    "text": "containers but provide strong isolations so with cata containers since it's not",
    "start": "1488880",
    "end": "1496289"
  },
  {
    "text": "sharing the Linux kernel so it makes it difficult for any escapes and attacks",
    "start": "1496289",
    "end": "1503210"
  },
  {
    "start": "1503000",
    "end": "1660000"
  },
  {
    "text": "okay so with the security issues issues addressed we are going to move on to the",
    "start": "1503210",
    "end": "1509519"
  },
  {
    "text": "last part of our presentation today which is cluster at skill so as we are",
    "start": "1509519",
    "end": "1515760"
  },
  {
    "text": "serving more and more service applications the workload the load our",
    "start": "1515760",
    "end": "1521010"
  },
  {
    "text": "control plan gets higher and higher right at first we can try to just add more CPU cores and more gigabytes of",
    "start": "1521010",
    "end": "1528090"
  },
  {
    "text": "memory to address this problem and finally one day we will hit the ceiling where we can no more add more course to",
    "start": "1528090",
    "end": "1536669"
  },
  {
    "text": "a single machine so we have to figure out a way to allow the service platform to scale out",
    "start": "1536669",
    "end": "1541860"
  },
  {
    "text": "horizontally instead of vertically how do we do that we use a technique called",
    "start": "1541860",
    "end": "1547679"
  },
  {
    "text": "sharding well-sharpened basically means is that you divide the whole workload",
    "start": "1547679",
    "end": "1552840"
  },
  {
    "text": "into many many many small partitions and you assign each partition to a set of",
    "start": "1552840",
    "end": "1559460"
  },
  {
    "text": "control plan and the less that control can take charge of that partition so",
    "start": "1559460",
    "end": "1565110"
  },
  {
    "text": "that control fan will only like take charge of like 1 percent of the total",
    "start": "1565110",
    "end": "1571679"
  },
  {
    "text": "workload that should be fine right and if the workload continues growing we can",
    "start": "1571679",
    "end": "1577320"
  },
  {
    "text": "always add more partitions and more control plan sets that's how basically",
    "start": "1577320",
    "end": "1583230"
  },
  {
    "text": "shouting that's basically how sharding works to to implement is increment isn't",
    "start": "1583230",
    "end": "1588600"
  },
  {
    "text": "a native we have to do many things well the first thing is that we got have an upstream system upstream system",
    "start": "1588600",
    "end": "1596620"
  },
  {
    "text": "needs to assign a short ID to the kid native applications after the user has",
    "start": "1596620",
    "end": "1601720"
  },
  {
    "text": "created how to choose the child ID it actually doesn't matter it can be based on the user ID or on the application I",
    "start": "1601720",
    "end": "1608920"
  },
  {
    "text": "did Hannah and Heidi it doesn't matter as long as the child ID stays like as",
    "start": "1608920",
    "end": "1615520"
  },
  {
    "text": "long as it is even across all the Canadian applications that should be fine and the second step is that we must",
    "start": "1615520",
    "end": "1623740"
  },
  {
    "text": "modify the controller to to allow the petitioning of controllers that is to",
    "start": "1623740",
    "end": "1629230"
  },
  {
    "text": "say the controller in each control plan set must only acknowledge and the",
    "start": "1629230",
    "end": "1635950"
  },
  {
    "text": "process the workflows or the resources with the same pad Haitian ID it should",
    "start": "1635950",
    "end": "1643060"
  },
  {
    "text": "not be able to know about the Worr closing other positions otherwise when",
    "start": "1643060",
    "end": "1649660"
  },
  {
    "text": "we are running them at the same time one set of control plan will affect the",
    "start": "1649660",
    "end": "1655600"
  },
  {
    "text": "other sets of control fails we cannot do that okay and the third thing that we",
    "start": "1655600",
    "end": "1661690"
  },
  {
    "start": "1660000",
    "end": "1782000"
  },
  {
    "text": "are going to do is to take care of the data plan problems so as some of you may",
    "start": "1661690",
    "end": "1669670"
  },
  {
    "text": "know Kenny who has got some data plan components for example there is cube",
    "start": "1669670",
    "end": "1675010"
  },
  {
    "text": "proxy and there is activator those data plan components they send to the metrics",
    "start": "1675010",
    "end": "1681070"
  },
  {
    "text": "to the control plan which is like autoscaler and how is the data plan",
    "start": "1681070",
    "end": "1687730"
  },
  {
    "text": "component supposed to know to which control plan component should they send",
    "start": "1687730",
    "end": "1692830"
  },
  {
    "text": "the HTTP request here we are going to use the DNS to solve this problem we are",
    "start": "1692830",
    "end": "1698650"
  },
  {
    "text": "going to set up multiple DNS domains each with suffix you know the surface",
    "start": "1698650",
    "end": "1704710"
  },
  {
    "text": "can just be the partition ID and we are going to add a names to that das so that",
    "start": "1704710",
    "end": "1711760"
  },
  {
    "text": "that domain is going to point to the controlling component of that partition",
    "start": "1711760",
    "end": "1717640"
  },
  {
    "text": "and now the data plan components you do a DNS resolution to find out",
    "start": "1717640",
    "end": "1724059"
  },
  {
    "text": "which I feel address it should visit that takes care of the problems that arises in that they top ten and finally",
    "start": "1724059",
    "end": "1731469"
  },
  {
    "text": "we're going to talk about service mesh in service mesh to prevent data from growing exponentially we're going to use",
    "start": "1731469",
    "end": "1738249"
  },
  {
    "text": "a feature called the service group so a service group basically device the whole service mesh into many sub meshes and",
    "start": "1738249",
    "end": "1745629"
  },
  {
    "text": "the applications in a sub mesh can only see applications see the other",
    "start": "1745629",
    "end": "1751659"
  },
  {
    "text": "applications in the sublimation you cannot see the applications from another",
    "start": "1751659",
    "end": "1757859"
  },
  {
    "text": "sub a mesh this way the the sidecar",
    "start": "1757859",
    "end": "1763149"
  },
  {
    "text": "proxy that is a part of the service mash only needs to manage a very limited",
    "start": "1763149",
    "end": "1768279"
  },
  {
    "text": "amount of data and the performance can also be better too so that's about",
    "start": "1768279",
    "end": "1774399"
  },
  {
    "text": "concludes how we are going to make the service platform able to scale out",
    "start": "1774399",
    "end": "1780489"
  },
  {
    "text": "horizontally but I'm sorry yeah let's take a closer look at how we can",
    "start": "1780489",
    "end": "1788169"
  },
  {
    "start": "1782000",
    "end": "1837000"
  },
  {
    "text": "implement like controller sharding so how do we do controller starting and the",
    "start": "1788169",
    "end": "1793809"
  },
  {
    "text": "make controller only see the resources the workflows that are off the same",
    "start": "1793809",
    "end": "1799269"
  },
  {
    "text": "position ID actually this is very very easy thanks to the magic of kubernetes",
    "start": "1799269",
    "end": "1805419"
  },
  {
    "text": "labels lecture the only thing that we need to do is that we add a labels letter to the informer of that container",
    "start": "1805419",
    "end": "1812759"
  },
  {
    "text": "to the informant that the container the controller uses and automatically the",
    "start": "1812759",
    "end": "1819879"
  },
  {
    "text": "controller will only see the resources that matches that label and ignore any",
    "start": "1819879",
    "end": "1826929"
  },
  {
    "text": "other resource that doesn't match the label so maybe there's just the 5 lines",
    "start": "1826929",
    "end": "1832179"
  },
  {
    "text": "of code and controller partitioning is done so that's basically that basically",
    "start": "1832179",
    "end": "1840039"
  },
  {
    "text": "explains how we are going to make the service platform able to scale out horizontally if we go",
    "start": "1840039",
    "end": "1848079"
  },
  {
    "text": "out a lot of the control and components then",
    "start": "1848079",
    "end": "1853230"
  },
  {
    "text": "someday maybe kubernetes itself is going to be the bottleneck when that happens we don't we do not need to panic we just",
    "start": "1853230",
    "end": "1860550"
  },
  {
    "text": "need to deploy it yes being up some more kubernetes clusters and assign some of",
    "start": "1860550",
    "end": "1866280"
  },
  {
    "text": "the partitions to the new kubernetes cluster right it it just acts as a higher level of petitioning yes yes so",
    "start": "1866280",
    "end": "1874020"
  },
  {
    "text": "generally speaking like scaling a selfless cluster will be easy if the upstream system takes well takes so",
    "start": "1874020",
    "end": "1881840"
  },
  {
    "text": "partition and sharding so that's a key",
    "start": "1881840",
    "end": "1887610"
  },
  {
    "start": "1885000",
    "end": "1928000"
  },
  {
    "text": "take Oh key key takeaways from our talk today so first pre-warm and what Putin",
    "start": "1887610",
    "end": "1894840"
  },
  {
    "text": "techniques can largely enhance the performance - wrong cuckoo native cool",
    "start": "1894840",
    "end": "1900450"
  },
  {
    "text": "wrong Canadian communities and its standardization may be benefit to the",
    "start": "1900450",
    "end": "1906960"
  },
  {
    "text": "ecosystem second is that so lewis about sharing the infrastructures the more we",
    "start": "1906960",
    "end": "1912780"
  },
  {
    "text": "share the less it costs and third is that using sharding and partition it can",
    "start": "1912780",
    "end": "1920040"
  },
  {
    "text": "effectively address problems cost when the civilus cluster gets scaled out okay",
    "start": "1920040",
    "end": "1928400"
  },
  {
    "start": "1928000",
    "end": "1953000"
  },
  {
    "text": "if you want to learn more about our team you can take a look at the following links the first is that cloud service",
    "start": "1928400",
    "end": "1936840"
  },
  {
    "text": "our team has been working on its in previous status and we also work on open",
    "start": "1936840",
    "end": "1943800"
  },
  {
    "text": "source project called sofa stack for financial customers and you can find a github link and home page introduction",
    "start": "1943800",
    "end": "1951150"
  },
  {
    "text": "on falling two links sings allows for time thanks for having",
    "start": "1951150",
    "end": "1956970"
  },
  {
    "start": "1953000",
    "end": "2363000"
  },
  {
    "text": "us here so any questions or any questions they still have like five minutes for",
    "start": "1956970",
    "end": "1962609"
  },
  {
    "text": "questions I guess yes please",
    "start": "1962609",
    "end": "1967279"
  },
  {
    "text": "the question is how many poss-eye",
    "start": "1976250",
    "end": "1980860"
  },
  {
    "text": "the question is how many services our class deployments cluster deployments so",
    "start": "1985220",
    "end": "1991610"
  },
  {
    "text": "do you mean how many homeless services are there in our classrooms ok could you",
    "start": "1991610",
    "end": "1999470"
  },
  {
    "text": "see that number we may be this number we",
    "start": "1999470",
    "end": "2007659"
  },
  {
    "text": "are not supposed to like share here it's rated to to the business yeah sorry",
    "start": "2007659",
    "end": "2013690"
  },
  {
    "text": "about that mmm your voice",
    "start": "2013690",
    "end": "2018840"
  },
  {
    "text": "the Apache project called what open this",
    "start": "2032620",
    "end": "2037809"
  },
  {
    "text": "Optima whisk open whisk oh okay you are referring to open whisk yes yes yeah yes",
    "start": "2037809",
    "end": "2051290"
  },
  {
    "text": "quite similar concepts actually but we are actually working on K native so we",
    "start": "2051290",
    "end": "2057080"
  },
  {
    "text": "are building our service platform on top of creative and trying to do the",
    "start": "2057080",
    "end": "2062720"
  },
  {
    "text": "optimizations there I'm sure that there are going to be some similarities",
    "start": "2062720",
    "end": "2069040"
  },
  {
    "text": "between all the implementations that's you know Canada is like a new service",
    "start": "2069040",
    "end": "2077840"
  },
  {
    "text": "platform or new standards for so less so so yeah we just try to adopt that as our",
    "start": "2077840",
    "end": "2085358"
  },
  {
    "text": "like a baseline and build our products on Canadian yeah and the open whiskey is",
    "start": "2085359",
    "end": "2091158"
  },
  {
    "text": "a very great product but it's only integrates with kubernetes it is not",
    "start": "2091159",
    "end": "2097520"
  },
  {
    "text": "really like kubernetes native and i think a native mainly deals with like",
    "start": "2097520",
    "end": "2104560"
  },
  {
    "text": "functional workload right so so maybe",
    "start": "2104560",
    "end": "2109850"
  },
  {
    "text": "they cannot do is like customer images so i I do believe that there are similarities but there are also many",
    "start": "2109850",
    "end": "2116150"
  },
  {
    "text": "differences between these two technologies yeah does that answer your",
    "start": "2116150",
    "end": "2121369"
  },
  {
    "text": "question or yeah concepts",
    "start": "2121369",
    "end": "2129240"
  },
  {
    "text": "I know but to my knowledge correct me if",
    "start": "2129240",
    "end": "2143760"
  },
  {
    "text": "I'm wrong maybe Obon whisk only allows the injection of like her cold packages",
    "start": "2143760",
    "end": "2149610"
  },
  {
    "text": "which is the like the first kind of workload that we mentioned about right so when we are trying to build our",
    "start": "2149610",
    "end": "2156480"
  },
  {
    "text": "product a negative we try to support more kinds of workloads like custom",
    "start": "2156480",
    "end": "2162540"
  },
  {
    "text": "images and test the efforts that we're making and maybe that has some",
    "start": "2162540",
    "end": "2168060"
  },
  {
    "text": "difference that yeah maybe that's the difference from the Obon whisk yeah",
    "start": "2168060",
    "end": "2175320"
  },
  {
    "text": "thank you",
    "start": "2175320",
    "end": "2177650"
  },
  {
    "text": "okay",
    "start": "2183370",
    "end": "2186370"
  },
  {
    "text": "when we do the service mesh partitioning is actually that we put the applications",
    "start": "2199760",
    "end": "2205400"
  },
  {
    "text": "of a same tenant into the same sub mesh so that the the applications of the same",
    "start": "2205400",
    "end": "2213380"
  },
  {
    "text": "user will be able to see each other but as they will not be able to see the",
    "start": "2213380",
    "end": "2219040"
  },
  {
    "text": "services that are wrong by the other users and if they would like to see the",
    "start": "2219040",
    "end": "2225650"
  },
  {
    "text": "services run by the other research they must like to use the public IP or some other mechanisms and also we just set up",
    "start": "2225650",
    "end": "2234500"
  },
  {
    "text": "one ingress gateway for each sub mesh does that answer your question okay",
    "start": "2234500",
    "end": "2244070"
  },
  {
    "text": "one may one last question",
    "start": "2244070",
    "end": "2247480"
  },
  {
    "text": "yes name space based isolation yes a",
    "start": "2255970",
    "end": "2260920"
  },
  {
    "text": "pardon",
    "start": "2263350",
    "end": "2266350"
  },
  {
    "text": "supposedly smash actually they are all positioning techniques but they are not the same thing name space isolation is",
    "start": "2269800",
    "end": "2277490"
  },
  {
    "text": "basically like multi-tenancy or isolation that is done at the crew",
    "start": "2277490",
    "end": "2283130"
  },
  {
    "text": "Panetta's level kubernetes control valve level while silver smash sub meshing is",
    "start": "2283130",
    "end": "2288680"
  },
  {
    "text": "like multi-tenancy that has done on the surface mesh level so they are happening",
    "start": "2288680",
    "end": "2294410"
  },
  {
    "text": "at the different levels but there are all concepts of like dividing the whole thing into many small groups and just",
    "start": "2294410",
    "end": "2302680"
  },
  {
    "text": "partitioning the world holes",
    "start": "2302680",
    "end": "2306460"
  },
  {
    "text": "exactly it's not zero you mean so the portal is",
    "start": "2318640",
    "end": "2324930"
  },
  {
    "text": "not we will ask mates the number of the pond pool the size of the purple",
    "start": "2324930",
    "end": "2330059"
  },
  {
    "text": "according to the average usage in pastime windows so if like no traffic",
    "start": "2330059",
    "end": "2336809"
  },
  {
    "text": "goes in its the average will be zero stands a pool the size of the pool goes",
    "start": "2336809",
    "end": "2342299"
  },
  {
    "text": "to zero yes okay thanks thanks",
    "start": "2342299",
    "end": "2363980"
  }
]