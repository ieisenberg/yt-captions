[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "hello and thank you for joining me for",
    "start": "640",
    "end": "2800"
  },
  {
    "text": "this",
    "start": "2800",
    "end": "4000"
  },
  {
    "text": "footbed swiss army tool of observability",
    "start": "4000",
    "end": "6960"
  },
  {
    "text": "adjustion",
    "start": "6960",
    "end": "9520"
  },
  {
    "text": "my name is michael marshall and i am a",
    "start": "10480",
    "end": "12960"
  },
  {
    "text": "senior",
    "start": "12960",
    "end": "13920"
  },
  {
    "text": "sre with newman marcus",
    "start": "13920",
    "end": "17440"
  },
  {
    "text": "i'm also an avid cloud architect and",
    "start": "17440",
    "end": "20640"
  },
  {
    "text": "developer before i begin this talk",
    "start": "20640",
    "end": "25039"
  },
  {
    "text": "i would like to do a shout out and thank",
    "start": "25039",
    "end": "27199"
  },
  {
    "text": "you to my management",
    "start": "27199",
    "end": "29039"
  },
  {
    "text": "team who sponsored the project alec",
    "start": "29039",
    "end": "31519"
  },
  {
    "text": "nelson",
    "start": "31519",
    "end": "32160"
  },
  {
    "text": "and centos mott hicker",
    "start": "32160",
    "end": "36559"
  },
  {
    "start": "36000",
    "end": "57000"
  },
  {
    "text": "during the talk i will cover a little",
    "start": "36880",
    "end": "40000"
  },
  {
    "text": "bit",
    "start": "40000",
    "end": "40800"
  },
  {
    "text": "what it is why i'm so excited",
    "start": "40800",
    "end": "44559"
  },
  {
    "text": "how i added log derived metrics",
    "start": "44559",
    "end": "46960"
  },
  {
    "text": "functionality",
    "start": "46960",
    "end": "49680"
  },
  {
    "text": "how i use it as my swiss army tool",
    "start": "50000",
    "end": "53120"
  },
  {
    "text": "and then i'll let you see it in action",
    "start": "53120",
    "end": "58239"
  },
  {
    "text": "so i came across a challenge",
    "start": "58239",
    "end": "61280"
  },
  {
    "text": "after building out my data observability",
    "start": "61280",
    "end": "64080"
  },
  {
    "text": "platform",
    "start": "64080",
    "end": "65920"
  },
  {
    "text": "with grafana low-key logs",
    "start": "65920",
    "end": "69680"
  },
  {
    "text": "with prometheus and cortex metrics",
    "start": "69680",
    "end": "73119"
  },
  {
    "text": "using grafana ui for dashboarding",
    "start": "73119",
    "end": "76479"
  },
  {
    "text": "and ad-hoc queries",
    "start": "76479",
    "end": "79520"
  },
  {
    "text": "i set out to find the best tool to use",
    "start": "79520",
    "end": "82320"
  },
  {
    "text": "to ingest the data",
    "start": "82320",
    "end": "83680"
  },
  {
    "text": "into the platform it needed to be",
    "start": "83680",
    "end": "87600"
  },
  {
    "text": "low complexity and it needed to be",
    "start": "87600",
    "end": "91280"
  },
  {
    "text": "inexpensive what is it",
    "start": "91280",
    "end": "94640"
  },
  {
    "start": "93000",
    "end": "130000"
  },
  {
    "text": "fluent bit by definition",
    "start": "94640",
    "end": "98000"
  },
  {
    "text": "a log processor and a forwarder",
    "start": "98000",
    "end": "101840"
  },
  {
    "text": "it's a pipeline made up of plug-ins for",
    "start": "102320",
    "end": "104960"
  },
  {
    "text": "extreme agility",
    "start": "104960",
    "end": "106399"
  },
  {
    "text": "flexibility a few of those i've listed",
    "start": "106399",
    "end": "109920"
  },
  {
    "text": "here",
    "start": "109920",
    "end": "111119"
  },
  {
    "text": "to ingest to massage to extract the drop",
    "start": "111119",
    "end": "114079"
  },
  {
    "text": "records",
    "start": "114079",
    "end": "115200"
  },
  {
    "text": "as you can see in the diagram below",
    "start": "115200",
    "end": "118960"
  },
  {
    "text": "and it's the best thing since sliced",
    "start": "118960",
    "end": "122240"
  },
  {
    "text": "bread",
    "start": "122240",
    "end": "124640"
  },
  {
    "text": "so why am i so excited about it",
    "start": "125200",
    "end": "130000"
  },
  {
    "start": "130000",
    "end": "147000"
  },
  {
    "text": "it's fast it's developed",
    "start": "130560",
    "end": "133680"
  },
  {
    "text": "in c it's developed to run",
    "start": "133680",
    "end": "136959"
  },
  {
    "text": "in an embedded system environment",
    "start": "136959",
    "end": "140640"
  },
  {
    "text": "it's open source you can look at see how",
    "start": "140800",
    "end": "144000"
  },
  {
    "text": "it runs",
    "start": "144000",
    "end": "145120"
  },
  {
    "text": "and contribute to it it's container",
    "start": "145120",
    "end": "148720"
  },
  {
    "start": "147000",
    "end": "176000"
  },
  {
    "text": "friendly",
    "start": "148720",
    "end": "150480"
  },
  {
    "text": "it runs great inside of a container i",
    "start": "150480",
    "end": "153200"
  },
  {
    "text": "run it",
    "start": "153200",
    "end": "153680"
  },
  {
    "text": "on fargate it's tiny",
    "start": "153680",
    "end": "157440"
  },
  {
    "text": "it's very low resource usage",
    "start": "157440",
    "end": "160560"
  },
  {
    "text": "along with being fast and container it's",
    "start": "160560",
    "end": "163840"
  },
  {
    "text": "very cost effective",
    "start": "163840",
    "end": "166239"
  },
  {
    "text": "i can run multiple instances of fluid",
    "start": "166239",
    "end": "168800"
  },
  {
    "text": "bit",
    "start": "168800",
    "end": "169519"
  },
  {
    "text": "each doing its own thing without",
    "start": "169519",
    "end": "172080"
  },
  {
    "text": "impacting",
    "start": "172080",
    "end": "172959"
  },
  {
    "text": "any of the others at a in a very",
    "start": "172959",
    "end": "174959"
  },
  {
    "text": "reasonable process",
    "start": "174959",
    "end": "177200"
  },
  {
    "start": "176000",
    "end": "241000"
  },
  {
    "text": "it has wide cloud provider adoption",
    "start": "177200",
    "end": "180800"
  },
  {
    "text": "i first came across it when using aws",
    "start": "180800",
    "end": "184640"
  },
  {
    "text": "and i came across fire lens fire lens",
    "start": "184640",
    "end": "187680"
  },
  {
    "text": "is a side car implementation",
    "start": "187680",
    "end": "190800"
  },
  {
    "text": "of fluid bit that runs in fargate",
    "start": "190800",
    "end": "194640"
  },
  {
    "text": "for sending logs to directly to foot",
    "start": "194640",
    "end": "198400"
  },
  {
    "text": "d or in this case for a bit",
    "start": "198400",
    "end": "202319"
  },
  {
    "text": "bypassing the need to send it to club",
    "start": "202319",
    "end": "205360"
  },
  {
    "text": "mesh logs",
    "start": "205360",
    "end": "206879"
  },
  {
    "text": "i also discovered that",
    "start": "206879",
    "end": "210640"
  },
  {
    "text": "google cloud has standardized on",
    "start": "210640",
    "end": "213040"
  },
  {
    "text": "fluidvis for its",
    "start": "213040",
    "end": "214640"
  },
  {
    "text": "uh logging infrastructure",
    "start": "214640",
    "end": "217760"
  },
  {
    "text": "fluent is extremely agile and flexible",
    "start": "217760",
    "end": "221120"
  },
  {
    "text": "which is what makes it so attractive it",
    "start": "221120",
    "end": "224159"
  },
  {
    "text": "has a very",
    "start": "224159",
    "end": "225120"
  },
  {
    "text": "active community for its open source",
    "start": "225120",
    "end": "227760"
  },
  {
    "text": "project",
    "start": "227760",
    "end": "229920"
  },
  {
    "text": "it makes releases often and always",
    "start": "229920",
    "end": "233200"
  },
  {
    "text": "welcomes",
    "start": "233200",
    "end": "233840"
  },
  {
    "text": "additional contributions and is",
    "start": "233840",
    "end": "237040"
  },
  {
    "text": "extremely extensible",
    "start": "237040",
    "end": "238480"
  },
  {
    "text": "as i will show later in my talk",
    "start": "238480",
    "end": "241840"
  },
  {
    "start": "241000",
    "end": "260000"
  },
  {
    "text": "so checking the boxes it checks the box",
    "start": "242000",
    "end": "245599"
  },
  {
    "text": "for speed agility and cost",
    "start": "245599",
    "end": "248879"
  },
  {
    "text": "but it was missing a critical function",
    "start": "248879",
    "end": "251760"
  },
  {
    "text": "that i needed",
    "start": "251760",
    "end": "253200"
  },
  {
    "text": "i needed to be able to derive metrics",
    "start": "253200",
    "end": "256560"
  },
  {
    "text": "from my logs",
    "start": "256560",
    "end": "257840"
  },
  {
    "text": "and send them to prometheus",
    "start": "257840",
    "end": "261359"
  },
  {
    "start": "260000",
    "end": "289000"
  },
  {
    "text": "so what do you do now well",
    "start": "261359",
    "end": "265120"
  },
  {
    "text": "if it doesn't exist create it says henry",
    "start": "265120",
    "end": "267280"
  },
  {
    "text": "voice",
    "start": "267280",
    "end": "269199"
  },
  {
    "text": "so i did this is how i added log derived",
    "start": "269199",
    "end": "272960"
  },
  {
    "text": "metrics",
    "start": "272960",
    "end": "273840"
  },
  {
    "text": "to permit i mean to flip it i use the",
    "start": "273840",
    "end": "277440"
  },
  {
    "text": "golang",
    "start": "277440",
    "end": "279680"
  },
  {
    "text": "plug going sdk and i built",
    "start": "279680",
    "end": "284400"
  },
  {
    "text": "output prometheus metrics plugin",
    "start": "284400",
    "end": "288400"
  },
  {
    "start": "289000",
    "end": "383000"
  },
  {
    "text": "this is the plugin architecture that i",
    "start": "290400",
    "end": "293199"
  },
  {
    "text": "used",
    "start": "293199",
    "end": "295199"
  },
  {
    "text": "i wrote logs through fluent bit using",
    "start": "295199",
    "end": "298160"
  },
  {
    "text": "the tagging",
    "start": "298160",
    "end": "300160"
  },
  {
    "text": "then i route them to the output module",
    "start": "300160",
    "end": "302639"
  },
  {
    "text": "the prometheus metrics output module",
    "start": "302639",
    "end": "305199"
  },
  {
    "text": "i define the count the metric type",
    "start": "305199",
    "end": "308320"
  },
  {
    "text": "the metric name the job name",
    "start": "308320",
    "end": "312000"
  },
  {
    "text": "and and then i push that",
    "start": "312000",
    "end": "316320"
  },
  {
    "text": "information to prometheus push gateway",
    "start": "316320",
    "end": "322080"
  },
  {
    "text": "prometheus then comes and scrapes the",
    "start": "322320",
    "end": "325280"
  },
  {
    "text": "prometheus push gateway",
    "start": "325280",
    "end": "327199"
  },
  {
    "text": "uh when it's configured to do so",
    "start": "327199",
    "end": "330320"
  },
  {
    "text": "now i wanted to address a couple of",
    "start": "330320",
    "end": "331759"
  },
  {
    "text": "questions why go away",
    "start": "331759",
    "end": "335199"
  },
  {
    "text": "fluent bit is written in c",
    "start": "335199",
    "end": "338479"
  },
  {
    "text": "you can do native c plug-ins as well",
    "start": "338479",
    "end": "342560"
  },
  {
    "text": "i use scotland because prometheus push",
    "start": "342560",
    "end": "345680"
  },
  {
    "text": "gateway",
    "start": "345680",
    "end": "346240"
  },
  {
    "text": "and prometheus are both written in going",
    "start": "346240",
    "end": "349120"
  },
  {
    "text": "and made the handoff easier",
    "start": "349120",
    "end": "353039"
  },
  {
    "text": "now anybody that's run prometheus knows",
    "start": "353039",
    "end": "356080"
  },
  {
    "text": "that push gateway is frowned upon",
    "start": "356080",
    "end": "360000"
  },
  {
    "text": "i decided to use it so that i didn't",
    "start": "360160",
    "end": "362960"
  },
  {
    "text": "impact",
    "start": "362960",
    "end": "364080"
  },
  {
    "text": "the tight speed at which",
    "start": "364080",
    "end": "367120"
  },
  {
    "text": "flint bit is running and instead of",
    "start": "367120",
    "end": "370720"
  },
  {
    "text": "holding the metrics waiting to be",
    "start": "370720",
    "end": "372479"
  },
  {
    "text": "scraped",
    "start": "372479",
    "end": "374319"
  },
  {
    "text": "i chose to push them to push gave way as",
    "start": "374319",
    "end": "376479"
  },
  {
    "text": "a fire and forget",
    "start": "376479",
    "end": "378000"
  },
  {
    "text": "and then allow me to come pick them up",
    "start": "378000",
    "end": "380960"
  },
  {
    "text": "this model works very well",
    "start": "380960",
    "end": "384080"
  },
  {
    "start": "383000",
    "end": "499000"
  },
  {
    "text": "this is a sample configuration section",
    "start": "384479",
    "end": "386400"
  },
  {
    "text": "for my plugin",
    "start": "386400",
    "end": "388639"
  },
  {
    "text": "what i wanted to do here was create a",
    "start": "388639",
    "end": "391759"
  },
  {
    "text": "metric a counter metric to count the",
    "start": "391759",
    "end": "393759"
  },
  {
    "text": "number of stylwatch log records",
    "start": "393759",
    "end": "395680"
  },
  {
    "text": "processed by this instance of flipbit",
    "start": "395680",
    "end": "399520"
  },
  {
    "text": "and index them as the log group",
    "start": "399520",
    "end": "403360"
  },
  {
    "text": "name and the source aws account",
    "start": "403360",
    "end": "407280"
  },
  {
    "text": "so the first few here are standard",
    "start": "407280",
    "end": "409039"
  },
  {
    "text": "output parameters the name of the print",
    "start": "409039",
    "end": "411599"
  },
  {
    "text": "of the plugin",
    "start": "411599",
    "end": "413919"
  },
  {
    "text": "the tag your matching on the log level",
    "start": "413919",
    "end": "417599"
  },
  {
    "text": "and then we have the job the job is a",
    "start": "417599",
    "end": "420160"
  },
  {
    "text": "prometheus",
    "start": "420160",
    "end": "421360"
  },
  {
    "text": "job label that will show up when you do",
    "start": "421360",
    "end": "423440"
  },
  {
    "text": "queries",
    "start": "423440",
    "end": "425759"
  },
  {
    "text": "the url shows where to push",
    "start": "426240",
    "end": "429520"
  },
  {
    "text": "the metrics where the push gateway is",
    "start": "429520",
    "end": "433520"
  },
  {
    "text": "i have the metric type at this point",
    "start": "433520",
    "end": "436000"
  },
  {
    "text": "counter",
    "start": "436000",
    "end": "438319"
  },
  {
    "text": "the metric name following prometheus",
    "start": "438319",
    "end": "442560"
  },
  {
    "text": "naming convention",
    "start": "442560",
    "end": "445440"
  },
  {
    "text": "and then i have the metric constant",
    "start": "446319",
    "end": "448880"
  },
  {
    "text": "labels",
    "start": "448880",
    "end": "450160"
  },
  {
    "text": "and variable labels i want to explain",
    "start": "450160",
    "end": "451759"
  },
  {
    "text": "the difference between these",
    "start": "451759",
    "end": "453360"
  },
  {
    "text": "constant labels are set static in the",
    "start": "453360",
    "end": "455759"
  },
  {
    "text": "config file",
    "start": "455759",
    "end": "457680"
  },
  {
    "text": "at the time you configure flip bit",
    "start": "457680",
    "end": "461280"
  },
  {
    "text": "the variable labels are extracted using",
    "start": "461280",
    "end": "464639"
  },
  {
    "text": "regex",
    "start": "464639",
    "end": "465520"
  },
  {
    "text": "from configuration above for further up",
    "start": "465520",
    "end": "468639"
  },
  {
    "text": "in the pipeline",
    "start": "468639",
    "end": "470319"
  },
  {
    "text": "this is the true key to this plugin",
    "start": "470319",
    "end": "474400"
  },
  {
    "text": "i can then create truly log derived",
    "start": "474400",
    "end": "477840"
  },
  {
    "text": "metrics",
    "start": "477840",
    "end": "478960"
  },
  {
    "text": "from the log lines passing through the",
    "start": "478960",
    "end": "480560"
  },
  {
    "text": "pipeline",
    "start": "480560",
    "end": "483039"
  },
  {
    "text": "the id allows me to have multiple",
    "start": "483599",
    "end": "487919"
  },
  {
    "text": "copies of the prometheus metric plugin",
    "start": "487919",
    "end": "491039"
  },
  {
    "text": "in use within a single fluidbit.com",
    "start": "491039",
    "end": "495280"
  },
  {
    "text": "instance",
    "start": "495280",
    "end": "496560"
  },
  {
    "text": "they must be different",
    "start": "496560",
    "end": "499360"
  },
  {
    "start": "499000",
    "end": "544000"
  },
  {
    "text": "now i'm going to go over a few of my",
    "start": "500240",
    "end": "501759"
  },
  {
    "text": "go-to plug-ins that i use",
    "start": "501759",
    "end": "504080"
  },
  {
    "text": "quite a bit for my production",
    "start": "504080",
    "end": "506879"
  },
  {
    "text": "installation",
    "start": "506879",
    "end": "509440"
  },
  {
    "text": "an input plug-in is how you get data",
    "start": "510080",
    "end": "512560"
  },
  {
    "text": "into",
    "start": "512560",
    "end": "513518"
  },
  {
    "text": "flipbit i have a couple of external",
    "start": "513519",
    "end": "517599"
  },
  {
    "text": "feeds coming in from",
    "start": "517599",
    "end": "519200"
  },
  {
    "text": "upstream vendors one of them is syslog",
    "start": "519200",
    "end": "522640"
  },
  {
    "text": "based and the other is a",
    "start": "522640",
    "end": "525839"
  },
  {
    "text": "stream of raw json",
    "start": "525839",
    "end": "529680"
  },
  {
    "text": "so i'm using the tcp input for the raw",
    "start": "529680",
    "end": "532080"
  },
  {
    "text": "json and the syslog",
    "start": "532080",
    "end": "533600"
  },
  {
    "text": "input for system my onstream data",
    "start": "533600",
    "end": "536959"
  },
  {
    "text": "is being i'm using the tail input",
    "start": "536959",
    "end": "540560"
  },
  {
    "text": "to tell logs on application servers",
    "start": "540560",
    "end": "545360"
  },
  {
    "start": "544000",
    "end": "623000"
  },
  {
    "text": "there is a special",
    "start": "546160",
    "end": "549200"
  },
  {
    "text": "input plug-in which is also an output",
    "start": "549200",
    "end": "551279"
  },
  {
    "text": "plug-in",
    "start": "551279",
    "end": "552480"
  },
  {
    "text": "called forward this defines",
    "start": "552480",
    "end": "555839"
  },
  {
    "text": "the forwarding",
    "start": "555839",
    "end": "559680"
  },
  {
    "text": "protocol in use between fluid d and flip",
    "start": "559680",
    "end": "563040"
  },
  {
    "text": "it",
    "start": "563040",
    "end": "563519"
  },
  {
    "text": "or flip it a little bit",
    "start": "563519",
    "end": "566720"
  },
  {
    "text": "it's for passing records between",
    "start": "566720",
    "end": "568560"
  },
  {
    "text": "instances",
    "start": "568560",
    "end": "570959"
  },
  {
    "text": "i leverage this by using tls",
    "start": "571040",
    "end": "574959"
  },
  {
    "text": "and pushing my on-premise logs",
    "start": "574959",
    "end": "579600"
  },
  {
    "text": "to my cloud-based footbed",
    "start": "579600",
    "end": "583120"
  },
  {
    "text": "i also use it for multi-region",
    "start": "583120",
    "end": "586320"
  },
  {
    "text": "passing data between regions there's a",
    "start": "586320",
    "end": "589440"
  },
  {
    "text": "second use which i've leveraged",
    "start": "589440",
    "end": "591519"
  },
  {
    "text": "and i'll be demonstrating later in this",
    "start": "591519",
    "end": "594320"
  },
  {
    "text": "talk",
    "start": "594320",
    "end": "595360"
  },
  {
    "text": "is the programmatic input used",
    "start": "595360",
    "end": "598710"
  },
  {
    "text": "[Music]",
    "start": "598710",
    "end": "600000"
  },
  {
    "text": "using the sdk that i've listed here",
    "start": "600000",
    "end": "605680"
  },
  {
    "text": "basically it takes the logs that you",
    "start": "605680",
    "end": "608640"
  },
  {
    "text": "want to push",
    "start": "608640",
    "end": "610399"
  },
  {
    "text": "to flip a bit and packages them",
    "start": "610399",
    "end": "613920"
  },
  {
    "text": "into the forward protocol and assigns a",
    "start": "613920",
    "end": "618720"
  },
  {
    "text": "tag",
    "start": "618720",
    "end": "619600"
  },
  {
    "text": "and pushes it in to flip it",
    "start": "619600",
    "end": "623440"
  },
  {
    "start": "623000",
    "end": "655000"
  },
  {
    "text": "these are the parser plugins that i use",
    "start": "625279",
    "end": "627279"
  },
  {
    "text": "quite often",
    "start": "627279",
    "end": "629839"
  },
  {
    "text": "json so you can pass it a json string",
    "start": "630560",
    "end": "633440"
  },
  {
    "text": "and it'll return",
    "start": "633440",
    "end": "635120"
  },
  {
    "text": "the set of cumulated pairs",
    "start": "635120",
    "end": "638160"
  },
  {
    "text": "and regex regex uses",
    "start": "638160",
    "end": "642079"
  },
  {
    "text": "ruby regex to extract content",
    "start": "642079",
    "end": "645440"
  },
  {
    "text": "using named captures",
    "start": "645440",
    "end": "648480"
  },
  {
    "text": "you'll notice that i'm using the",
    "start": "648480",
    "end": "650720"
  },
  {
    "text": "extracted fields later in the demo",
    "start": "650720",
    "end": "652720"
  },
  {
    "text": "in my output plugin",
    "start": "652720",
    "end": "655759"
  },
  {
    "text": "the filter plugins that i use quite",
    "start": "657440",
    "end": "659360"
  },
  {
    "text": "often is grep",
    "start": "659360",
    "end": "660640"
  },
  {
    "text": "mainly for discarding records that i",
    "start": "660640",
    "end": "662720"
  },
  {
    "text": "don't want ingested into my system",
    "start": "662720",
    "end": "665839"
  },
  {
    "text": "and the modify which i commonly use to",
    "start": "665839",
    "end": "669519"
  },
  {
    "text": "drop keys prior to registration",
    "start": "669519",
    "end": "673200"
  },
  {
    "text": "there's an additional one for tag",
    "start": "673200",
    "end": "676000"
  },
  {
    "text": "manipulation",
    "start": "676000",
    "end": "677680"
  },
  {
    "text": "called rewrite tag now tagging",
    "start": "677680",
    "end": "681279"
  },
  {
    "text": "in fluid bit is is that one of the key",
    "start": "681279",
    "end": "685279"
  },
  {
    "text": "uses for for the system you can reroute",
    "start": "685279",
    "end": "689200"
  },
  {
    "text": "records",
    "start": "689200",
    "end": "689760"
  },
  {
    "text": "through the pipeline just by changing",
    "start": "689760",
    "end": "693040"
  },
  {
    "text": "the tags",
    "start": "693040",
    "end": "694399"
  },
  {
    "text": "or you can split the record",
    "start": "694399",
    "end": "698959"
  },
  {
    "text": "by using rules assign a new tag",
    "start": "698959",
    "end": "702320"
  },
  {
    "text": "and when you re-emit the tag it will",
    "start": "702320",
    "end": "704800"
  },
  {
    "text": "re-start at the beginning of the",
    "start": "704800",
    "end": "706800"
  },
  {
    "text": "pipeline",
    "start": "706800",
    "end": "708880"
  },
  {
    "text": "you can do this this allows you to do",
    "start": "708880",
    "end": "711200"
  },
  {
    "text": "many different things",
    "start": "711200",
    "end": "712240"
  },
  {
    "text": "uh flexibility now these are my most",
    "start": "712240",
    "end": "715839"
  },
  {
    "start": "713000",
    "end": "754000"
  },
  {
    "text": "used",
    "start": "715839",
    "end": "716880"
  },
  {
    "text": "filter plugins the parser",
    "start": "716880",
    "end": "721279"
  },
  {
    "text": "using regex and",
    "start": "721279",
    "end": "725120"
  },
  {
    "text": "then there's lua lua",
    "start": "725120",
    "end": "728480"
  },
  {
    "text": "influent bit was a game changer",
    "start": "728480",
    "end": "732240"
  },
  {
    "text": "there are many built-in plug-ins",
    "start": "733360",
    "end": "736959"
  },
  {
    "text": "in fluid bit but when you face a",
    "start": "736959",
    "end": "739519"
  },
  {
    "text": "situation where you",
    "start": "739519",
    "end": "741519"
  },
  {
    "text": "just don't find support write a load",
    "start": "741519",
    "end": "744880"
  },
  {
    "text": "function",
    "start": "744880",
    "end": "746160"
  },
  {
    "text": "and your goal it uh it",
    "start": "746160",
    "end": "749200"
  },
  {
    "text": "runs very fast and it's well integrated",
    "start": "749200",
    "end": "752639"
  },
  {
    "text": "into the product here's a few tips and",
    "start": "752639",
    "end": "756839"
  },
  {
    "start": "754000",
    "end": "823000"
  },
  {
    "text": "tricks",
    "start": "756839",
    "end": "758079"
  },
  {
    "text": "i like to say if i can see it i can",
    "start": "758079",
    "end": "760480"
  },
  {
    "text": "troubleshoot it",
    "start": "760480",
    "end": "762720"
  },
  {
    "text": "in this case i'm creating a t",
    "start": "762720",
    "end": "765760"
  },
  {
    "text": "for the pipeline you can add a little",
    "start": "765760",
    "end": "769440"
  },
  {
    "text": "filter",
    "start": "769440",
    "end": "770000"
  },
  {
    "text": "between pipeline sections write a",
    "start": "770000",
    "end": "772480"
  },
  {
    "text": "function",
    "start": "772480",
    "end": "773120"
  },
  {
    "text": "in lua that will dump the current table",
    "start": "773120",
    "end": "776160"
  },
  {
    "text": "with standard out",
    "start": "776160",
    "end": "778639"
  },
  {
    "text": "this will display all the tags and",
    "start": "778639",
    "end": "782399"
  },
  {
    "text": "keys in play as that goes through",
    "start": "782399",
    "end": "786000"
  },
  {
    "text": "that t now this is very helpful for just",
    "start": "786000",
    "end": "788880"
  },
  {
    "text": "getting a good feel for what's going on",
    "start": "788880",
    "end": "792079"
  },
  {
    "text": "uh the second tip is basically for",
    "start": "792079",
    "end": "795680"
  },
  {
    "text": "when you're looking at examples",
    "start": "795680",
    "end": "798720"
  },
  {
    "text": "of configurations that people posted",
    "start": "798720",
    "end": "802240"
  },
  {
    "text": "and documentation you'll see fields",
    "start": "802240",
    "end": "806000"
  },
  {
    "text": "in play that you don't see a definition",
    "start": "806000",
    "end": "809120"
  },
  {
    "text": "for",
    "start": "809120",
    "end": "809600"
  },
  {
    "text": "and therefore they don't make sense",
    "start": "809600",
    "end": "813279"
  },
  {
    "text": "having been bit by this several times i",
    "start": "813360",
    "end": "815279"
  },
  {
    "text": "will tell you to",
    "start": "815279",
    "end": "816560"
  },
  {
    "text": "check the parsers.com file uh",
    "start": "816560",
    "end": "820000"
  },
  {
    "text": "where you'll probably find the",
    "start": "820000",
    "end": "820880"
  },
  {
    "text": "definition",
    "start": "820880",
    "end": "823360"
  },
  {
    "text": "let's see it in action",
    "start": "824320",
    "end": "827279"
  },
  {
    "text": "during this demo i'm going to show you",
    "start": "827519",
    "end": "829760"
  },
  {
    "text": "the set of configurations",
    "start": "829760",
    "end": "831600"
  },
  {
    "text": "for my internal programmatic",
    "start": "831600",
    "end": "835120"
  },
  {
    "text": "fluent forwarding",
    "start": "835120",
    "end": "838160"
  },
  {
    "text": "in production this is implemented as a",
    "start": "838160",
    "end": "841040"
  },
  {
    "text": "serverless project",
    "start": "841040",
    "end": "843839"
  },
  {
    "text": "i'm doing a lambda subscribing to a log",
    "start": "844399",
    "end": "848079"
  },
  {
    "text": "group",
    "start": "848079",
    "end": "849519"
  },
  {
    "text": "and pushing the lamina gets fired every",
    "start": "849519",
    "end": "852399"
  },
  {
    "text": "time the law group receives a record",
    "start": "852399",
    "end": "855199"
  },
  {
    "text": "and the lambda takes it puts it into",
    "start": "855199",
    "end": "859120"
  },
  {
    "text": "an susq on the other end",
    "start": "859120",
    "end": "862480"
  },
  {
    "text": "i have a lambda routing",
    "start": "862480",
    "end": "865760"
  },
  {
    "text": "a flint router that takes the message",
    "start": "865760",
    "end": "869440"
  },
  {
    "text": "decrypts it and puts it into",
    "start": "869440",
    "end": "873440"
  },
  {
    "text": "fluid forwarding protocol and",
    "start": "873440",
    "end": "877279"
  },
  {
    "text": "pushes it to loki and prometheus",
    "start": "877279",
    "end": "880480"
  },
  {
    "text": "as configured i will show you what it",
    "start": "880480",
    "end": "883279"
  },
  {
    "text": "looks like in graffana ui",
    "start": "883279",
    "end": "899839"
  },
  {
    "start": "892000",
    "end": "1287000"
  },
  {
    "text": "this is the foot bit comp file",
    "start": "909279",
    "end": "912720"
  },
  {
    "text": "follow that i'm using for my flatwash",
    "start": "912720",
    "end": "916320"
  },
  {
    "text": "logs",
    "start": "916320",
    "end": "918639"
  },
  {
    "text": "each of these sections is is basically a",
    "start": "918720",
    "end": "920959"
  },
  {
    "text": "part of the pipeline",
    "start": "920959",
    "end": "923839"
  },
  {
    "text": "in this case it starts with forward the",
    "start": "923839",
    "end": "926399"
  },
  {
    "text": "forward is receiving the logs from the",
    "start": "926399",
    "end": "928720"
  },
  {
    "text": "lambda",
    "start": "928720",
    "end": "929360"
  },
  {
    "text": "which is calling that sdk that i showed",
    "start": "929360",
    "end": "931759"
  },
  {
    "text": "you",
    "start": "931759",
    "end": "933920"
  },
  {
    "text": "and receives them on port two two four",
    "start": "934240",
    "end": "936959"
  },
  {
    "text": "two two four",
    "start": "936959",
    "end": "939600"
  },
  {
    "text": "notice there's no tag matching here in",
    "start": "939600",
    "end": "942560"
  },
  {
    "text": "forward",
    "start": "942560",
    "end": "943839"
  },
  {
    "text": "inputs you always tag the messages prior",
    "start": "943839",
    "end": "947120"
  },
  {
    "text": "to pushing them to",
    "start": "947120",
    "end": "948560"
  },
  {
    "text": "the forward now i know that they're",
    "start": "948560",
    "end": "952079"
  },
  {
    "text": "tagged with",
    "start": "952079",
    "end": "952880"
  },
  {
    "text": "cw logs cloudwatch logs so the first",
    "start": "952880",
    "end": "956399"
  },
  {
    "text": "part of my pipeline is a parser",
    "start": "956399",
    "end": "961920"
  },
  {
    "text": "and it i'm going to push the tag",
    "start": "961920",
    "end": "966160"
  },
  {
    "text": "and i'm going to decrypt it with a regex",
    "start": "966160",
    "end": "970399"
  },
  {
    "text": "called cw tag",
    "start": "970399",
    "end": "973600"
  },
  {
    "text": "what i'm doing is when i",
    "start": "977040",
    "end": "981360"
  },
  {
    "text": "send this data i am adding the cloud",
    "start": "981360",
    "end": "984800"
  },
  {
    "text": "the law group cloudwatch log group and",
    "start": "984800",
    "end": "986959"
  },
  {
    "text": "the source account",
    "start": "986959",
    "end": "988240"
  },
  {
    "text": "to the tag and then i decrypt it and use",
    "start": "988240",
    "end": "990560"
  },
  {
    "text": "it in",
    "start": "990560",
    "end": "991759"
  },
  {
    "text": "fluid bit you can see those names there",
    "start": "991759",
    "end": "997519"
  },
  {
    "text": "those are the extracted labels",
    "start": "997519",
    "end": "1001360"
  },
  {
    "text": "the next phase is is the parser",
    "start": "1003600",
    "end": "1008000"
  },
  {
    "text": "on the record i'm going to search for",
    "start": "1008000",
    "end": "1009759"
  },
  {
    "text": "nested jason",
    "start": "1009759",
    "end": "1011680"
  },
  {
    "text": "if i find this at json i'm going to",
    "start": "1011680",
    "end": "1013440"
  },
  {
    "text": "return it as a",
    "start": "1013440",
    "end": "1015199"
  },
  {
    "text": "named field called message.json",
    "start": "1015199",
    "end": "1018399"
  },
  {
    "text": "along with pre and post data i'll show",
    "start": "1018399",
    "end": "1020720"
  },
  {
    "text": "you that in a moment",
    "start": "1020720",
    "end": "1022800"
  },
  {
    "text": "and then after that i'm going to clean",
    "start": "1022800",
    "end": "1025760"
  },
  {
    "text": "up",
    "start": "1025760",
    "end": "1026400"
  },
  {
    "text": "the nesa json because it includes",
    "start": "1026400",
    "end": "1028480"
  },
  {
    "text": "backslashes",
    "start": "1028480",
    "end": "1030000"
  },
  {
    "text": "and uh non uh i'm sorry non-json",
    "start": "1030000",
    "end": "1033839"
  },
  {
    "text": "compliant",
    "start": "1033839",
    "end": "1035120"
  },
  {
    "text": "formatting so i'm going to fix that",
    "start": "1035120",
    "end": "1036959"
  },
  {
    "text": "using lua",
    "start": "1036959",
    "end": "1039839"
  },
  {
    "text": "here's my nested json parser",
    "start": "1043039",
    "end": "1046480"
  },
  {
    "text": "you see here i'm capturing the nesa json",
    "start": "1046480",
    "end": "1049760"
  },
  {
    "text": "into a field name message json",
    "start": "1049760",
    "end": "1053679"
  },
  {
    "text": "and the post and prefix data",
    "start": "1053679",
    "end": "1057760"
  },
  {
    "text": "this is the lua i'm calling the function",
    "start": "1061600",
    "end": "1064960"
  },
  {
    "text": "it passes in the record the record looks",
    "start": "1064960",
    "end": "1067440"
  },
  {
    "text": "for the next json",
    "start": "1067440",
    "end": "1069120"
  },
  {
    "text": "key runs through cleans up the",
    "start": "1069120",
    "end": "1072960"
  },
  {
    "text": "json formatting and reassigns it to the",
    "start": "1072960",
    "end": "1076160"
  },
  {
    "text": "record",
    "start": "1076160",
    "end": "1077840"
  },
  {
    "text": "code 1 says change it when it comes back",
    "start": "1077840",
    "end": "1081440"
  },
  {
    "text": "and code 0 says ignore it",
    "start": "1081440",
    "end": "1085279"
  },
  {
    "text": "you'll see here the commented out",
    "start": "1090240",
    "end": "1091760"
  },
  {
    "text": "section that i mentioned for",
    "start": "1091760",
    "end": "1093600"
  },
  {
    "text": "diagnostics",
    "start": "1093600",
    "end": "1096400"
  },
  {
    "text": "that would be helpful to dump the",
    "start": "1097039",
    "end": "1099200"
  },
  {
    "text": "pipeline that's flowing through at this",
    "start": "1099200",
    "end": "1100720"
  },
  {
    "text": "time",
    "start": "1100720",
    "end": "1102880"
  },
  {
    "text": "the next parser",
    "start": "1105440",
    "end": "1109760"
  },
  {
    "text": "decodes the message json that's cleaned",
    "start": "1109760",
    "end": "1112320"
  },
  {
    "text": "up",
    "start": "1112320",
    "end": "1114320"
  },
  {
    "text": "using a built-in",
    "start": "1114320",
    "end": "1117840"
  },
  {
    "text": "decode field that's built into flight it",
    "start": "1117840",
    "end": "1122240"
  },
  {
    "text": "i'm passing it a string called message",
    "start": "1122240",
    "end": "1124640"
  },
  {
    "text": "json",
    "start": "1124640",
    "end": "1125280"
  },
  {
    "text": "and telling it it's in json format and",
    "start": "1125280",
    "end": "1127520"
  },
  {
    "text": "it returns the key value pairs",
    "start": "1127520",
    "end": "1136559"
  },
  {
    "text": "the next one i'm using the filter modify",
    "start": "1136559",
    "end": "1138960"
  },
  {
    "text": "i'm dropping",
    "start": "1138960",
    "end": "1140240"
  },
  {
    "text": "option and tag keys",
    "start": "1140240",
    "end": "1145280"
  },
  {
    "text": "and then i get to the output section",
    "start": "1145280",
    "end": "1148559"
  },
  {
    "text": "one way i'm sending it the low key",
    "start": "1148559",
    "end": "1151280"
  },
  {
    "text": "sending the",
    "start": "1151280",
    "end": "1151919"
  },
  {
    "text": "raw log to low key",
    "start": "1151919",
    "end": "1155039"
  },
  {
    "text": "i'm sending static labels",
    "start": "1156559",
    "end": "1159919"
  },
  {
    "text": "as set here and these are my dynamic",
    "start": "1159919",
    "end": "1163280"
  },
  {
    "text": "labels which",
    "start": "1163280",
    "end": "1164000"
  },
  {
    "text": "i've derived from using the",
    "start": "1164000",
    "end": "1167039"
  },
  {
    "text": "rig axis from above the output here i'm",
    "start": "1167039",
    "end": "1170400"
  },
  {
    "text": "using the prometheus metric",
    "start": "1170400",
    "end": "1172400"
  },
  {
    "text": "plugin",
    "start": "1172400",
    "end": "1174799"
  },
  {
    "text": "setting the job to cloudless logs",
    "start": "1175919",
    "end": "1178559"
  },
  {
    "text": "pushing it to my push gateway defining a",
    "start": "1178559",
    "end": "1180640"
  },
  {
    "text": "counter",
    "start": "1180640",
    "end": "1181360"
  },
  {
    "text": "a metric these are my static labels",
    "start": "1181360",
    "end": "1184960"
  },
  {
    "text": "and again these are my dynamic log",
    "start": "1184960",
    "end": "1188080"
  },
  {
    "text": "derived",
    "start": "1188080",
    "end": "1190559"
  },
  {
    "text": "metrics",
    "start": "1190840",
    "end": "1193840"
  },
  {
    "text": "i'm going to quickly show you what it",
    "start": "1196480",
    "end": "1197840"
  },
  {
    "text": "looks like in grafana",
    "start": "1197840",
    "end": "1199600"
  },
  {
    "text": "this is a ad hoc query looking for",
    "start": "1199600",
    "end": "1202240"
  },
  {
    "text": "electric logs",
    "start": "1202240",
    "end": "1203760"
  },
  {
    "text": "there's only one log we pushed in at the",
    "start": "1203760",
    "end": "1205840"
  },
  {
    "text": "moment",
    "start": "1205840",
    "end": "1208158"
  },
  {
    "text": "this is a dashboard i put together real",
    "start": "1210320",
    "end": "1212240"
  },
  {
    "text": "quick",
    "start": "1212240",
    "end": "1214559"
  },
  {
    "text": "this is showing the rate of change",
    "start": "1214799",
    "end": "1218799"
  },
  {
    "text": "and this is showing the actual counter",
    "start": "1219520",
    "end": "1221840"
  },
  {
    "text": "the counter is always increasing",
    "start": "1221840",
    "end": "1224320"
  },
  {
    "text": "the rate of change will increase and",
    "start": "1224320",
    "end": "1226720"
  },
  {
    "text": "decrease",
    "start": "1226720",
    "end": "1227919"
  },
  {
    "text": "as the rate of",
    "start": "1227919",
    "end": "1231280"
  },
  {
    "text": "quantity shows up over a period of time",
    "start": "1231280",
    "end": "1234559"
  },
  {
    "text": "a higher quantity can indicate a",
    "start": "1234559",
    "end": "1237039"
  },
  {
    "text": "possible issue in your network",
    "start": "1237039",
    "end": "1239760"
  },
  {
    "text": "and then these are the wrong laws",
    "start": "1239760",
    "end": "1243120"
  },
  {
    "text": "and one last thing i wanted to point out",
    "start": "1243200",
    "end": "1245440"
  },
  {
    "text": "was what it looks like in push gateway",
    "start": "1245440",
    "end": "1248799"
  },
  {
    "text": "so i'm doing the cloudwatch logs i have",
    "start": "1248799",
    "end": "1251440"
  },
  {
    "text": "one log record",
    "start": "1251440",
    "end": "1252799"
  },
  {
    "text": "at this time and you'll see the counter",
    "start": "1252799",
    "end": "1255760"
  },
  {
    "text": "and you'll see",
    "start": "1255760",
    "end": "1256640"
  },
  {
    "text": "what it's indexed by this down here is",
    "start": "1256640",
    "end": "1260640"
  },
  {
    "text": "also a syslog job that's running",
    "start": "1260640",
    "end": "1262640"
  },
  {
    "text": "and it has all the different",
    "start": "1262640",
    "end": "1263840"
  },
  {
    "text": "combinations with status logs",
    "start": "1263840",
    "end": "1265840"
  },
  {
    "text": "counter you could update it and these",
    "start": "1265840",
    "end": "1268960"
  },
  {
    "text": "this is being scraped by prominent",
    "start": "1268960",
    "end": "1277840"
  },
  {
    "start": "1287000",
    "end": "1317000"
  },
  {
    "text": "as far as lessons learned i",
    "start": "1288880",
    "end": "1292080"
  },
  {
    "text": "say provision a new instance for each",
    "start": "1292080",
    "end": "1294400"
  },
  {
    "text": "endpoint they're cheap",
    "start": "1294400",
    "end": "1297440"
  },
  {
    "text": "also if you need a new feature edit",
    "start": "1297440",
    "end": "1300000"
  },
  {
    "text": "there's plenty of sdks and examples i'll",
    "start": "1300000",
    "end": "1302320"
  },
  {
    "text": "do that uh the tagging and tag",
    "start": "1302320",
    "end": "1305760"
  },
  {
    "text": "manipulation",
    "start": "1305760",
    "end": "1306799"
  },
  {
    "text": "is one of the keys to agility",
    "start": "1306799",
    "end": "1310480"
  },
  {
    "text": "and warren lua i'll thank you later",
    "start": "1310480",
    "end": "1314799"
  },
  {
    "text": "thank you for joining my talk i hope you",
    "start": "1314960",
    "end": "1316480"
  },
  {
    "text": "enjoyed",
    "start": "1316480",
    "end": "1319440"
  }
]