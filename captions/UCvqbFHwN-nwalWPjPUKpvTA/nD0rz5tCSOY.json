[
  {
    "text": "all right let's go ahead and get started i'd like to thank everyone who's joining us today welcome to today's cncf webinar",
    "start": "4560",
    "end": "10880"
  },
  {
    "text": "navigating the service mesh ecosystem i'm karen chu community pm at microsoft and cncf",
    "start": "10880",
    "end": "17199"
  },
  {
    "text": "ambassador and i'll be monitoring today's webinar we'd like to welcome our presenter today we have lockheed evanson principal",
    "start": "17199",
    "end": "24080"
  },
  {
    "text": "program manager at azure and cncf ambassador just before we start a few housekeeping",
    "start": "24080",
    "end": "30000"
  },
  {
    "text": "items during the webinar you will not be able to talk as an attendee there is a q a box at the bottom of your",
    "start": "30000",
    "end": "36320"
  },
  {
    "text": "screen please feel free to drop in your questions there and we will get through as many as we can at the end",
    "start": "36320",
    "end": "41840"
  },
  {
    "text": "this is an official webinar of the cncs and as such is subject to the cncf code of conduct",
    "start": "41840",
    "end": "47680"
  },
  {
    "text": "please do not put anything into the chat or ask questions that would be in violation of",
    "start": "47680",
    "end": "53199"
  },
  {
    "text": "the code of conduct basically please just be respectful of all your fellow participants and presenters",
    "start": "53199",
    "end": "59120"
  },
  {
    "text": "please also note that the recording and slides will be posted later online at the cncf page of um at cncf dot io slash webinars",
    "start": "59120",
    "end": "68159"
  },
  {
    "text": "and with that i will hand it over to lockheed to kick off today's presentation",
    "start": "68159",
    "end": "73200"
  },
  {
    "text": "wonderful thank you very much karen thank you for having me cncf it's wonderful to be here today i hope",
    "start": "73200",
    "end": "78880"
  },
  {
    "text": "everybody's having a great day wherever you are dialing in from dialing in to feel so antiquated that",
    "start": "78880",
    "end": "84320"
  },
  {
    "text": "term now nobody's dialing in anymore i was told i was supposed to wear a hat so i'm going to put on my",
    "start": "84320",
    "end": "89680"
  },
  {
    "text": "you know my proverbial uh ambassador hat now and i will go ahead and share my",
    "start": "89680",
    "end": "95119"
  },
  {
    "text": "slides and then we can get straight into it excellent hopefully can you see them",
    "start": "95119",
    "end": "101280"
  },
  {
    "text": "karen excellent fantastic okay so today",
    "start": "101280",
    "end": "107040"
  },
  {
    "text": "we are going to go on a journey navigating the service mesh ecosystem so i wanted to kick off",
    "start": "107040",
    "end": "114159"
  },
  {
    "text": "um and get into what is a service mesh we can't assume that everybody knows what a service mesh is so i'm going to",
    "start": "114159",
    "end": "120640"
  },
  {
    "text": "quote a friend of ours named william the ceo of buoyant who uh",
    "start": "120640",
    "end": "126079"
  },
  {
    "text": "known for linker d in the cncf ecosystem which is a service mesh but he states that a service mesh and i",
    "start": "126079",
    "end": "132560"
  },
  {
    "text": "quote is a dedicated infrastructure layer for making service to service communication safe",
    "start": "132560",
    "end": "138959"
  },
  {
    "text": "fast and reliable and he also goes on to say if you're building a cloud native",
    "start": "138959",
    "end": "144480"
  },
  {
    "text": "application you need a service mesh now there is lots to talk about in the service mesh ecosystem",
    "start": "144480",
    "end": "150560"
  },
  {
    "text": "in my experience with service message you may not need them day one on your microservice uh journey but you",
    "start": "150560",
    "end": "156640"
  },
  {
    "text": "will eventually need them because they offer some really great platform enhancements so that your developer team doesn't have",
    "start": "156640",
    "end": "163280"
  },
  {
    "text": "to worry about encryption or observability or getting metrics or access policies um building them into",
    "start": "163280",
    "end": "170720"
  },
  {
    "text": "the applications they can trust that the pr platform provides them so we're going to go on a journey today and navigate these",
    "start": "170720",
    "end": "177200"
  },
  {
    "text": "uh murky waters sometimes hopefully to make them a little bit clearer so stay with me we do have demos we're going to get into",
    "start": "177200",
    "end": "183360"
  },
  {
    "text": "the weeds now so let me start with service mesh interface um so service mesh interface was announced",
    "start": "183360",
    "end": "190159"
  },
  {
    "text": "back at kubecon eu in barcelona in 2019. have everybody who went",
    "start": "190159",
    "end": "195519"
  },
  {
    "text": "think back to that wonderful moment under the sun in barcelona uh what a wonderful time and i'm sure that next week at kubecon eu is going to",
    "start": "195519",
    "end": "202319"
  },
  {
    "text": "be a fantastic event so i encourage everybody to participate and show up and engage in this new and",
    "start": "202319",
    "end": "207840"
  },
  {
    "text": "wonderful format but service mesh interface was around defining a common set",
    "start": "207840",
    "end": "213280"
  },
  {
    "text": "of interfaces that describe how you can interact with service meshes",
    "start": "213280",
    "end": "218879"
  },
  {
    "text": "on kubernetes it's a basic feature set so you know",
    "start": "218879",
    "end": "224239"
  },
  {
    "text": "some folks have said it's a it's a least common denominator and it is really just what do most users",
    "start": "224239",
    "end": "230560"
  },
  {
    "text": "want to get out of service meshes what's the most common features uh that are common across all",
    "start": "230560",
    "end": "235920"
  },
  {
    "text": "implementations of service measures that give the developer community and the user community what they need",
    "start": "235920",
    "end": "241760"
  },
  {
    "text": "from that service mesh infrastructure service mesh interface should support",
    "start": "241760",
    "end": "248000"
  },
  {
    "text": "new mesh capabilities over time and we'll go into that we'll share what service mesh interface covers now and",
    "start": "248000",
    "end": "254159"
  },
  {
    "text": "what i think and what i've heard in the community might be the next set of interfaces that smi might want to tackle um and a",
    "start": "254159",
    "end": "261120"
  },
  {
    "text": "space for the ecosystem to innovate with mesh technology what we were hearing uh when we were working on service mesh",
    "start": "261120",
    "end": "267040"
  },
  {
    "text": "interfaces having to decide on the implementation of the service mesh",
    "start": "267040",
    "end": "272080"
  },
  {
    "text": "up front when i really don't know what it provides is really hard and if i want to switch out service meshes",
    "start": "272080",
    "end": "277680"
  },
  {
    "text": "or make changes or try out different platform specific features it's hard to do that if i'm writing",
    "start": "277680",
    "end": "283759"
  },
  {
    "text": "everything to uh you know an individual implementation now if we think about other examples of",
    "start": "283759",
    "end": "289680"
  },
  {
    "text": "this in the kubernetes ecosystem um there are cri which is an abstraction for container",
    "start": "289680",
    "end": "295120"
  },
  {
    "text": "times which has allowed container runtimes like cryo container d and many other",
    "start": "295120",
    "end": "301759"
  },
  {
    "text": "implementations of container runtimes to exist under a standardized api that can be",
    "start": "301759",
    "end": "306960"
  },
  {
    "text": "plugged directly into kubernetes so you have that clean abstraction another example could be csi cni they",
    "start": "306960",
    "end": "313759"
  },
  {
    "text": "are common abstractions that all network and storage providers support and allow interoperability so that you",
    "start": "313759",
    "end": "320960"
  },
  {
    "text": "can get the best out of the storage platforms that you need or networking platforms but have a common abstraction",
    "start": "320960",
    "end": "326960"
  },
  {
    "text": "so i don't like to think about it as least cost i like to think about it as portability that allows everything to",
    "start": "326960",
    "end": "332960"
  },
  {
    "text": "operate the same at that abstraction and when you take a dependency on those apis you allow some portability so let's",
    "start": "332960",
    "end": "339120"
  },
  {
    "text": "go into what exactly that means so the initial specification what we",
    "start": "339120",
    "end": "345520"
  },
  {
    "text": "heard from the community and those folks looking to turn to service mesh is here are the",
    "start": "345520",
    "end": "350880"
  },
  {
    "text": "top three features that we want from a service mesh one is traffic policy we want to be able",
    "start": "350880",
    "end": "357520"
  },
  {
    "text": "to define service to service policies at layer seven so if you think in kubernetes we have",
    "start": "357520",
    "end": "363199"
  },
  {
    "text": "network policies let's go up the stack to layer 7 and look at policy at the http rpc grpc",
    "start": "363199",
    "end": "371520"
  },
  {
    "text": "level and actually put service different service policy in so we could say service a can talk to",
    "start": "371520",
    "end": "377039"
  },
  {
    "text": "service b but service a cannot talk to server c and we can define that in policy to",
    "start": "377039",
    "end": "382479"
  },
  {
    "text": "allow our microservices access to other microservices and you can even get granular i'll share",
    "start": "382479",
    "end": "388720"
  },
  {
    "text": "some of that soon traffic telemetry so there is this term the golden metrics",
    "start": "388720",
    "end": "394400"
  },
  {
    "text": "how many er what you error rate how many um queries per second those are great metrics that service",
    "start": "394400",
    "end": "400639"
  },
  {
    "text": "owners really want to know how their services are performing um bubble them up in in a place where",
    "start": "400639",
    "end": "406720"
  },
  {
    "text": "you can actually have access to them and start to build those statistics out of the platform itself",
    "start": "406720",
    "end": "411840"
  },
  {
    "text": "you can have that monitoring in built into the service mesh and finally traffic management so we've",
    "start": "411840",
    "end": "417840"
  },
  {
    "text": "all heard about canaries maybe we've heard about uh continuous deployments continuous",
    "start": "417840",
    "end": "423199"
  },
  {
    "text": "rollouts and tools like flagger which is a tool by the folks at weave",
    "start": "423199",
    "end": "428880"
  },
  {
    "text": "that actually allows progressive delivery which means i have version one of service a and i",
    "start": "428880",
    "end": "434880"
  },
  {
    "text": "want to push out version two of service a how can i onboard traffic to service two",
    "start": "434880",
    "end": "440560"
  },
  {
    "text": "and take all those inputs and metrics and determine whether service two is healthy sorry version two is healthy telepathy",
    "start": "440560",
    "end": "447360"
  },
  {
    "text": "and route that traffic progressively onto that new version of that application enabling things like canary",
    "start": "447360",
    "end": "454000"
  },
  {
    "text": "so those were the top three asks that we heard and service mesh interface had apis for each of them",
    "start": "454000",
    "end": "461599"
  },
  {
    "text": "why does the ecosystem need smi i think you know it goes akin to something like csi or cni",
    "start": "462400",
    "end": "469360"
  },
  {
    "text": "to have a provider agnostic way to interface into service measures so we're not",
    "start": "469360",
    "end": "474800"
  },
  {
    "text": "worried about who implements the service mesh we're worried about the features the service mesh provides and having a standardized api",
    "start": "474800",
    "end": "481759"
  },
  {
    "text": "to interact with that which allows portability but allows you to make sure",
    "start": "481759",
    "end": "487039"
  },
  {
    "text": "that there are other different options out there to create an ecosystem of service meshes kubernetes native we wanted you with the",
    "start": "487039",
    "end": "494720"
  },
  {
    "text": "rise of crds and extension api servers we wanted it a way to be interfaced uh",
    "start": "494720",
    "end": "500160"
  },
  {
    "text": "integrated directly into kubernetes so that you can use all the tools you know and love like",
    "start": "500160",
    "end": "505199"
  },
  {
    "text": "cubecontrol and others to interact with service meshes",
    "start": "505199",
    "end": "510400"
  },
  {
    "text": "so you don't need to go grab another set of tools interact with smi you can just use kubernetes and",
    "start": "510400",
    "end": "516560"
  },
  {
    "text": "things like custom resource definitions allowed that extensible we expect you know there are",
    "start": "516560",
    "end": "522399"
  },
  {
    "text": "more use cases coming over time we started with those three apis how do we move to the next",
    "start": "522399",
    "end": "528240"
  },
  {
    "text": "uh set of problems that are being sold of service measures and create new common apis and smi examples i would",
    "start": "528240",
    "end": "535839"
  },
  {
    "text": "cite that i've heard most commonly is multi-cluster capabilities for service meshes",
    "start": "535839",
    "end": "540959"
  },
  {
    "text": "so how to install a service mesh on discrete kubernetes clusters and then connect them together",
    "start": "540959",
    "end": "547200"
  },
  {
    "text": "i've also heard circuit breaking how can i actually stop traffic based on some metrics going to",
    "start": "547200",
    "end": "553120"
  },
  {
    "text": "that service and finally traffic rate limiting so if i can see",
    "start": "553120",
    "end": "558399"
  },
  {
    "text": "how many queries per second in the load that's generating how do i actually limit the traffic to that back-end service",
    "start": "558399",
    "end": "563600"
  },
  {
    "text": "they are just some examples i've heard it's certainly not exhaustive but smi allows for new apis to be",
    "start": "563600",
    "end": "570240"
  },
  {
    "text": "bubbled up as the innovation is happening in the community",
    "start": "570240",
    "end": "576240"
  },
  {
    "text": "so here's a look at what smi is really doing so down the bottom on the right you see different service mesh",
    "start": "576240",
    "end": "584000"
  },
  {
    "text": "implementations out there in the uh open source ecosystem so we have istio",
    "start": "584000",
    "end": "589120"
  },
  {
    "text": "console linker d and more service mesh interface can be implemented",
    "start": "589120",
    "end": "594399"
  },
  {
    "text": "either via an adapter or directly in supported in the controllers themselves for example",
    "start": "594399",
    "end": "600160"
  },
  {
    "text": "linker d you can then put your apps your tooling and all the ecosystem of tools just to",
    "start": "600160",
    "end": "605680"
  },
  {
    "text": "rely on service mesh interface and they can program any of these service meshes under the hood",
    "start": "605680",
    "end": "611360"
  },
  {
    "text": "now to date i think uh service mesh interface has been around for a little over a year",
    "start": "611360",
    "end": "616640"
  },
  {
    "text": "um and there are eight different service measures that implement service mesh interface that means if you have an app that's",
    "start": "616640",
    "end": "623360"
  },
  {
    "text": "trying to do some traffic routing and you use smi it doesn't matter which of these eight",
    "start": "623360",
    "end": "629360"
  },
  {
    "text": "service meshes that implement that you will have the same behavior",
    "start": "629360",
    "end": "634720"
  },
  {
    "text": "so here's the apis i mentioned three they're actually broken down into four there's the traffic access control",
    "start": "637680",
    "end": "643519"
  },
  {
    "text": "so we want to make sure that service a has access to service b and using kubernetes primitives to actually define",
    "start": "643519",
    "end": "650640"
  },
  {
    "text": "what service a and what service b are traffic specifications so we're looking at the protocols what are the protocols",
    "start": "650640",
    "end": "657440"
  },
  {
    "text": "look like we can dig down into them are they matching on reg regex is in headers are",
    "start": "657440",
    "end": "662560"
  },
  {
    "text": "we looking at different fields in the headers to match that traffic and then apply that access control uh",
    "start": "662560",
    "end": "668720"
  },
  {
    "text": "traffic split so direct percentages across different number of services so think of it tallying up to 100",
    "start": "668720",
    "end": "674800"
  },
  {
    "text": "percent if you have service a version one and service a version two",
    "start": "674800",
    "end": "680240"
  },
  {
    "text": "you could say 50 50 and have the traffic uh round robin split 50 50 between them",
    "start": "680240",
    "end": "686160"
  },
  {
    "text": "traffic metrics um is for tools like dashboards auto scalers",
    "start": "686160",
    "end": "691519"
  },
  {
    "text": "progressive delivery tools like flagger so that they can take the input from how are these services performing and",
    "start": "691519",
    "end": "698959"
  },
  {
    "text": "actually make decisions about whether they continue the progressive rollout",
    "start": "698959",
    "end": "705279"
  },
  {
    "text": "so they are the four apis that are in smi today and this smi is actually a specification",
    "start": "706320",
    "end": "714320"
  },
  {
    "text": "so if you've never worked with specifications themselves uh they are actually defining the fields",
    "start": "714320",
    "end": "720160"
  },
  {
    "text": "and the values of these apis and then implementers who have service meshes could come and",
    "start": "720160",
    "end": "725440"
  },
  {
    "text": "adopt different versions of these specifications and implement them into their uh specific service mesh",
    "start": "725440",
    "end": "732079"
  },
  {
    "text": "implementation so what we've got here is we have 0.5.0 of",
    "start": "732079",
    "end": "737440"
  },
  {
    "text": "the specification and then we have each of the components under there listed as we're iterated through as more folks",
    "start": "737440",
    "end": "744880"
  },
  {
    "text": "are using smi and saying here's things that i need to happen with smi so you can come and",
    "start": "744880",
    "end": "750399"
  },
  {
    "text": "participate in these communities and help shape what these common abstractions look like",
    "start": "750399",
    "end": "755839"
  },
  {
    "text": "um and we you know obviously we hope to move them through alpha to beta as more uh implementations",
    "start": "755839",
    "end": "761920"
  },
  {
    "text": "come and more users show up and say these are the things i want from a service mesh we should be able to move them to",
    "start": "761920",
    "end": "767279"
  },
  {
    "text": "through beta to stable would be the goal and add additional apis",
    "start": "767279",
    "end": "773839"
  },
  {
    "text": "so technically what am i talking about here you've heard a lot about what smi is here's where the rubber meets the",
    "start": "774000",
    "end": "779200"
  },
  {
    "text": "road so you have a set of crds that can be installed at any cluster so",
    "start": "779200",
    "end": "784639"
  },
  {
    "text": "obviously we have one for those each of those four apis we've um defined on the previous slides we can",
    "start": "784639",
    "end": "791920"
  },
  {
    "text": "use cubecontrol to actually create custom resources of these custom resource definitions",
    "start": "791920",
    "end": "797600"
  },
  {
    "text": "and then there are controllers in the actual service measures that look for those resources and then implement them at the data",
    "start": "797600",
    "end": "804320"
  },
  {
    "text": "plane of the service mesh the smi providers run well you know i",
    "start": "804320",
    "end": "810480"
  },
  {
    "text": "mentioned that just now so we have basically controllers that are looking for these resources and then",
    "start": "810480",
    "end": "816320"
  },
  {
    "text": "implementing uh smi also ships an sdk written in go for easy implementation so if you want",
    "start": "816320",
    "end": "822480"
  },
  {
    "text": "to implement smi into your service mesh and you're working on a service mesh you can use the sdk",
    "start": "822480",
    "end": "829040"
  },
  {
    "text": "to bring it into your code base and use it easily and quickly there are other common components that",
    "start": "829040",
    "end": "834079"
  },
  {
    "text": "are shipped under service mesh interface like a standardized extension api for metrics that uh things",
    "start": "834079",
    "end": "840320"
  },
  {
    "text": "like linker d have built out the wonderful folks over at lincoln d have been responsible for contributing that",
    "start": "840320",
    "end": "846240"
  },
  {
    "text": "init containers and then anything else that's common we can actually talk about and put in smi so if you think you have something",
    "start": "846240",
    "end": "852560"
  },
  {
    "text": "that's common to all service meshes that you would like to share and have a common space we'd invite you to",
    "start": "852560",
    "end": "858160"
  },
  {
    "text": "make a proposal to smi and we can see about uh housing that under the smi set of specifications and",
    "start": "858160",
    "end": "864079"
  },
  {
    "text": "components i want to call out the partnerships here",
    "start": "864079",
    "end": "870160"
  },
  {
    "text": "that uh started smi so initially you know we had the folks at lenka d",
    "start": "870160",
    "end": "875279"
  },
  {
    "text": "hashicorp solo red hat rancher canonical docker just to name a few and",
    "start": "875279",
    "end": "881440"
  },
  {
    "text": "the these companies and folks from these companies have been instrumental in landing the",
    "start": "881440",
    "end": "886720"
  },
  {
    "text": "initial implementations and actually proving out the specifications and versioning those specifications up so i want to say thank",
    "start": "886720",
    "end": "893360"
  },
  {
    "text": "you to them all but it really was a cross-company effort to get smi up and running and then actually have",
    "start": "893360",
    "end": "900560"
  },
  {
    "text": "different service mess providers implement it you know for example the folks at rancher have rio which",
    "start": "900560",
    "end": "906560"
  },
  {
    "text": "implemented smi uh under the hood and they were able to do that without you know even showing up to a",
    "start": "906560",
    "end": "913120"
  },
  {
    "text": "meeting they could read the documentation implement it use the sdk and the way they went really you know that's a great",
    "start": "913120",
    "end": "918320"
  },
  {
    "text": "outcome so kudos to the folks over at the branch of that worked on getting that into rio",
    "start": "918320",
    "end": "924399"
  },
  {
    "text": "so if you want to interact with the smi community here's some links for you obviously uh i haven't mentioned this",
    "start": "924560",
    "end": "930160"
  },
  {
    "text": "yet but smi is actually a sandbox project under the cncf um there's a website",
    "start": "930160",
    "end": "936440"
  },
  {
    "text": "smi-spec.io if you'd like to learn more everything's housed under the following github repo that the links are up there",
    "start": "936440",
    "end": "942880"
  },
  {
    "text": "and we invite you to take a look around those repos uh join the smi channel and the cncfs",
    "start": "942880",
    "end": "948959"
  },
  {
    "text": "uh slack if you have any questions and then you're welcome to come and join the meeting there's a communications link",
    "start": "948959",
    "end": "954399"
  },
  {
    "text": "there as well this will all be in the recording and the deck will be shared also so you don't worry too much about screenshotting those links now",
    "start": "954399",
    "end": "961440"
  },
  {
    "text": "you can get them afterwards so that's how you can get involved",
    "start": "961440",
    "end": "966639"
  },
  {
    "text": "and finally just to put a bow on you know smi here the goal of smi was to provide a",
    "start": "966639",
    "end": "972639"
  },
  {
    "text": "portable set of apis that were provider agnostic and allow tools and integrators and",
    "start": "972639",
    "end": "977680"
  },
  {
    "text": "implementers of service measures to be able to offer higher level services an example of that",
    "start": "977680",
    "end": "983360"
  },
  {
    "text": "is is flagger i've mentioned that before we've even had uh conversations conversations with the open source team",
    "start": "983360",
    "end": "990000"
  },
  {
    "text": "at kiali being interested in implementing smi metrics so that kiali could be portable across",
    "start": "990000",
    "end": "996959"
  },
  {
    "text": "many service mesh implementations and we want to make sure it iterates over time so as",
    "start": "996959",
    "end": "1002560"
  },
  {
    "text": "the uh folks working on service messages and the user community is finding new",
    "start": "1002560",
    "end": "1008480"
  },
  {
    "text": "platform implementations and features we can actually bubble them up into smi",
    "start": "1008480",
    "end": "1014399"
  },
  {
    "text": "smi itself is not a service mesh it doesn't ship a service mesh and",
    "start": "1014399",
    "end": "1021519"
  },
  {
    "text": "you know we don't require implementations of apis so if you want to just take traffic split you have a service mesh or some tool",
    "start": "1021519",
    "end": "1028160"
  },
  {
    "text": "that needs service mess like features you can implement just traffic split so in order to conform with",
    "start": "1028160",
    "end": "1033918"
  },
  {
    "text": "smi you don't need to implement it in its entirety and you know we don't want to restrict",
    "start": "1033919",
    "end": "1039839"
  },
  {
    "text": "what folks want service measures to be so we should be able to add provider specific extensions and bubble them up",
    "start": "1039839",
    "end": "1047038"
  },
  {
    "text": "under smi for users that want to use uh more rich feature sets under",
    "start": "1047039",
    "end": "1052400"
  },
  {
    "text": "the hood and not be straddled just to smi",
    "start": "1052400",
    "end": "1056559"
  },
  {
    "text": "okay so we're going to pivot here and we're going to talk about open service mesh at this point so open",
    "start": "1057679",
    "end": "1064640"
  },
  {
    "text": "service mesh is just on the right you've seen this diagram before but it's just another service mesh implementation",
    "start": "1064640",
    "end": "1071039"
  },
  {
    "text": "um that was announced last week uh it's being proposed for cncf donation",
    "start": "1071039",
    "end": "1077280"
  },
  {
    "text": "and obviously you can come and take a look at the code here i'll get into what open service mesh is",
    "start": "1077280",
    "end": "1082640"
  },
  {
    "text": "and what it seeks to provide and then we'll show a demo of open service mesh which will be a great foray",
    "start": "1082640",
    "end": "1088080"
  },
  {
    "text": "for those who've joining the call and never seen a service mesh in action because what i'll be showing with osm is",
    "start": "1088080",
    "end": "1093440"
  },
  {
    "text": "inherent across all these service meshes from istio to lincoln d they can all do these things and they",
    "start": "1093440",
    "end": "1098559"
  },
  {
    "text": "have other features as well but i think for a common baseline of the things you can expect",
    "start": "1098559",
    "end": "1103600"
  },
  {
    "text": "to have as a user of a service mesh we can demo that today",
    "start": "1103600",
    "end": "1110799"
  },
  {
    "text": "the ecosystem that we have here under smi implementers today you know i've mentioned a few of these so",
    "start": "1110880",
    "end": "1116400"
  },
  {
    "text": "console linker d istio rio we have implementers around there service mesh hub and mesherie",
    "start": "1116400",
    "end": "1122640"
  },
  {
    "text": "even the folks at mesh over there have implementations here of smi so as i said the demo i'm going",
    "start": "1122640",
    "end": "1129039"
  },
  {
    "text": "to show today is actually portable across many of these different service mesh",
    "start": "1129039",
    "end": "1134840"
  },
  {
    "text": "implementations so osm itself is designed to be a",
    "start": "1134840",
    "end": "1141200"
  },
  {
    "text": "lightweight extensible cloud native service mesh it's a simple approach uh in that it's",
    "start": "1141200",
    "end": "1147600"
  },
  {
    "text": "just implementing the smi apis and it's allowing you to have",
    "start": "1147600",
    "end": "1152799"
  },
  {
    "text": "access to secure out of the box of observability and allow you to manage your microservice",
    "start": "1152799",
    "end": "1159280"
  },
  {
    "text": "environments osm also you know implements smi and we also make sure that if folks want to",
    "start": "1159280",
    "end": "1167120"
  },
  {
    "text": "use envoy under the hood and we haven't discussed this so let me set this up most service meshes indeed all service",
    "start": "1167120",
    "end": "1173200"
  },
  {
    "text": "meshes ship a control plane and a data plane the data plane components are typically rolled out as side cards",
    "start": "1173200",
    "end": "1179200"
  },
  {
    "text": "that sit inside the same pot as your application and the control plane is responsible for",
    "start": "1179200",
    "end": "1184960"
  },
  {
    "text": "configuring those sidecar proxies to route traffic whether it's coming onto the cluster",
    "start": "1184960",
    "end": "1190799"
  },
  {
    "text": "what i would call north south from an ingress or east west so service to service on the same cluster",
    "start": "1190799",
    "end": "1196080"
  },
  {
    "text": "um so you know all this to say the data plane that uh osm actually",
    "start": "1196080",
    "end": "1201440"
  },
  {
    "text": "ships with is envoy which is another cncf project that has is extremely popular for these type of",
    "start": "1201440",
    "end": "1207679"
  },
  {
    "text": "workloads and you see it in a lot of service meshes out there in the ecosystem so osm",
    "start": "1207679",
    "end": "1213280"
  },
  {
    "text": "is built built on top of envoy and uses smi as its main set of apis to configure",
    "start": "1213280",
    "end": "1219200"
  },
  {
    "text": "envoy so some of the principles that we wanted to stick to when",
    "start": "1219200",
    "end": "1225039"
  },
  {
    "text": "working and building osm was we wanted to be simple to build and contribute to we wanted it to",
    "start": "1225039",
    "end": "1230720"
  },
  {
    "text": "be effortless to install we wanted to make sure that you can get up and running if you've never used a service mesh in less than",
    "start": "1230720",
    "end": "1236400"
  },
  {
    "text": "five minutes and understand what you're doing and see value in a service mesh painless to troubleshoot obviously it's great to",
    "start": "1236400",
    "end": "1243120"
  },
  {
    "text": "have observability but you want to know that when something goes wrong you have the means to be able to fix it",
    "start": "1243120",
    "end": "1248799"
  },
  {
    "text": "so osm ships with some different debugging endpoints to help you understand what's happening with",
    "start": "1248799",
    "end": "1255120"
  },
  {
    "text": "encryption and things like that and easy to configure so again the the star here i would say the",
    "start": "1255120",
    "end": "1261679"
  },
  {
    "text": "two stars are smi as a standard interface that you can uh use for that portability",
    "start": "1261679",
    "end": "1268080"
  },
  {
    "text": "and then envoy under the hood osm itself just uh configures envoy using smi",
    "start": "1268080",
    "end": "1273679"
  },
  {
    "text": "so i think that shows the value of smi that other ecosystem partners can come in and",
    "start": "1273679",
    "end": "1279840"
  },
  {
    "text": "build different implementations of service meshes and and use smi as some other feature set that they",
    "start": "1279840",
    "end": "1286640"
  },
  {
    "text": "implement so here are the features that osm ships",
    "start": "1286640",
    "end": "1291760"
  },
  {
    "text": "with um traffic shifting so we can do canary deployments progressive delivery end-to-end uh service to service by",
    "start": "1291760",
    "end": "1299679"
  },
  {
    "text": "uh delivering mtls on all your connectivity between your services which is a common request",
    "start": "1299679",
    "end": "1305919"
  },
  {
    "text": "access control we've mentioned that in smi debugging and monitoring certificate management that's pluggable",
    "start": "1305919",
    "end": "1313200"
  },
  {
    "text": "so many users in the community are looking for i have my own certificate management system whether that is hashicorp vault",
    "start": "1313200",
    "end": "1320080"
  },
  {
    "text": "or some cloud provided we wanted to make that plugable so that you can get certificates from different",
    "start": "1320080",
    "end": "1325679"
  },
  {
    "text": "backends that you already have in your infrastructure automatic sidecar injection that's to get the envoy proxy",
    "start": "1325679",
    "end": "1332159"
  },
  {
    "text": "located aside your application beside your application and uh flexible enough so this is",
    "start": "1332159",
    "end": "1338559"
  },
  {
    "text": "something we haven't talked about so there's a set of apis that osm is talking to to configure",
    "start": "1338559",
    "end": "1344159"
  },
  {
    "text": "these envoy data plan components and that api is called xds",
    "start": "1344159",
    "end": "1349200"
  },
  {
    "text": "and we've also modeled some more complicated uh things like circuit breaking using",
    "start": "1349200",
    "end": "1355760"
  },
  {
    "text": "envoy xds directly in the kubernetes api so that's an experimental set of features",
    "start": "1355760",
    "end": "1360799"
  },
  {
    "text": "um some folks are looking uh to xds to be a common abstraction as well for the",
    "start": "1360799",
    "end": "1366000"
  },
  {
    "text": "data plane so we're looking at how we can model that in kubernetes and make that your entry point to configuring um uh",
    "start": "1366000",
    "end": "1374559"
  },
  {
    "text": "envoy okay so that's the features a pretty baseline set of features there",
    "start": "1374559",
    "end": "1379840"
  },
  {
    "text": "that delivers most user users questions or features that they want from a service mesh",
    "start": "1379840",
    "end": "1385679"
  },
  {
    "text": "platform okay so now we're going to go into a demo um",
    "start": "1385679",
    "end": "1391120"
  },
  {
    "text": "i'm going to send you a link in the chat to this demo so you'll be able to recreate it and we're going to go through this demo",
    "start": "1391120",
    "end": "1396720"
  },
  {
    "text": "uh end to end to show the value of all service meshes what they can do for you through the lens of osm but again we're",
    "start": "1396720",
    "end": "1402960"
  },
  {
    "text": "going to be configuring it with smi so if you follow this demo and you have a different implementation under the",
    "start": "1402960",
    "end": "1408480"
  },
  {
    "text": "hood that's not osm that is fine um but everything will still apply so this demo",
    "start": "1408480",
    "end": "1415039"
  },
  {
    "text": "is a walkthrough of an application and applying policy through smi",
    "start": "1415039",
    "end": "1420320"
  },
  {
    "text": "and we are going to walk it through so it's going to be nice and slow i want to make sure that everybody who's",
    "start": "1420320",
    "end": "1426640"
  },
  {
    "text": "first 4a under service mesh can understand and follow along and that i have the opportunity to give everybody",
    "start": "1426640",
    "end": "1432640"
  },
  {
    "text": "the chance to learn so i will shoot this link out um at the bottom uh in the chat at the end and you can uh",
    "start": "1432640",
    "end": "1439840"
  },
  {
    "text": "reproduce this at your own well after the this session but let me kick off the",
    "start": "1439840",
    "end": "1445760"
  },
  {
    "text": "recording and i apologize for not doing it live but what we're going to be doing is showing the installed version of",
    "start": "1445760",
    "end": "1454080"
  },
  {
    "text": "osm so we have 0.2.0 this is the client binary that can install osm and we're",
    "start": "1454080",
    "end": "1460480"
  },
  {
    "text": "performing an install with a single command there osm install this is going to use your cube",
    "start": "1460480",
    "end": "1466000"
  },
  {
    "text": "config and point to a cluster a kubernetes cluster and install all the components required to run osm",
    "start": "1466000",
    "end": "1471760"
  },
  {
    "text": "and you can see that that's actually up and running right now in the osm system namespace with the",
    "start": "1471760",
    "end": "1478640"
  },
  {
    "text": "mesh name of osm and this allows you to install many uh we can see we have a controller a",
    "start": "1478640",
    "end": "1483840"
  },
  {
    "text": "grafana a prometheus and a zipkin instance and that's the power many of the features so what we're going",
    "start": "1483840",
    "end": "1489440"
  },
  {
    "text": "to do now is step through this demo and don't worry we're going to give you a set of distributed microservices to walk",
    "start": "1489440",
    "end": "1495039"
  },
  {
    "text": "through and then apply policy to them so we're going to create a series of namespaces again this is a book",
    "start": "1495039",
    "end": "1501120"
  },
  {
    "text": "buyer a set of distributed applications we're going to create some namespaces we",
    "start": "1501120",
    "end": "1507520"
  },
  {
    "text": "have a bookstore we have a book buyer somebody who would like to buy books from the bookstore",
    "start": "1507520",
    "end": "1513760"
  },
  {
    "text": "we have a book thief that we're creating a namespace a book thief is somebody we don't want",
    "start": "1513760",
    "end": "1519440"
  },
  {
    "text": "to have access to the bookstore and we have a book warehouse which is this back end",
    "start": "1519440",
    "end": "1525360"
  },
  {
    "text": "service that the bookstore talks to to say do we have inventory for books so famous in the the service mesh space",
    "start": "1525360",
    "end": "1532880"
  },
  {
    "text": "i have the book buyer demo what we're going to do now is actually say",
    "start": "1532880",
    "end": "1538159"
  },
  {
    "text": "in those name spaces that we just created in kubernetes we want to add these namespaces to have",
    "start": "1538159",
    "end": "1544799"
  },
  {
    "text": "sidecar injections so we're onboarding them onto osm to say that any app that gets deployed",
    "start": "1544799",
    "end": "1550960"
  },
  {
    "text": "please put the sidecar in it because i want it to be on the service mesh and this allows users to selectively put",
    "start": "1550960",
    "end": "1557200"
  },
  {
    "text": "applications in namespaces onto the mesh or not depending on how they would like to do",
    "start": "1557200",
    "end": "1562240"
  },
  {
    "text": "that so we're onboarding using cli those name spaces",
    "start": "1562240",
    "end": "1567520"
  },
  {
    "text": "okay so you can see that we've added the four uh namespaces to be detected and the sidecars will be",
    "start": "1567520",
    "end": "1573919"
  },
  {
    "text": "injected there okay we're just popping over to the demo namespace now i'm sorry the demo",
    "start": "1573919",
    "end": "1580880"
  },
  {
    "text": "directory so that we can actually grab the manifest to deploy this bookstore application",
    "start": "1580880",
    "end": "1587600"
  },
  {
    "text": "and while that's happening if you are looking in the background there you can see the distributed application architecture there the book buyer book",
    "start": "1587600",
    "end": "1594080"
  },
  {
    "text": "thief bookstore and the book warehouse it's a simple design there but just to get your head",
    "start": "1594080",
    "end": "1599279"
  },
  {
    "text": "around what's happening we're actually going to deploy all these things so we've deployed service accounts services",
    "start": "1599279",
    "end": "1605120"
  },
  {
    "text": "we've deployed the end to end set of applications you see some errors at the bottom and",
    "start": "1605120",
    "end": "1610559"
  },
  {
    "text": "that's only because we manually created the namespaces because i thought that that would make it more clear of",
    "start": "1610559",
    "end": "1616000"
  },
  {
    "text": "how we're actually setting this up so no need to worry about that what we're going to do now is actually",
    "start": "1616000",
    "end": "1621919"
  },
  {
    "text": "verify that those applications are up and running and then use smi to uh apply policy from everything from",
    "start": "1621919",
    "end": "1630000"
  },
  {
    "text": "access to splitting to uh metrics so we're going to walk through that",
    "start": "1630000",
    "end": "1635200"
  },
  {
    "text": "so we're going to open up now and start i believe we're going to start the",
    "start": "1635200",
    "end": "1640320"
  },
  {
    "text": "tunnels so the port forwarding to the back end application so these applications are",
    "start": "1640320",
    "end": "1645679"
  },
  {
    "text": "running in pods on your kubernetes cluster we need to access them from this machine that we're running the demo on",
    "start": "1645679",
    "end": "1651120"
  },
  {
    "text": "what we're going to use is a kubernetes uh port forwarding which allows wherever that user is",
    "start": "1651120",
    "end": "1656880"
  },
  {
    "text": "accessing that kubernetes cluster from to present a port on that local host and actually route that traffic through to",
    "start": "1656880",
    "end": "1662559"
  },
  {
    "text": "the back end which is pretty cool i know we take it for granted but it's it's excellent way to actually test access and also we have a port",
    "start": "1662559",
    "end": "1670000"
  },
  {
    "text": "forward script here that we ship as part of the demo and it port forwards to all these applications",
    "start": "1670000",
    "end": "1676000"
  },
  {
    "text": "that we just deployed book buyer book thief bookstore and book warehouse",
    "start": "1676000",
    "end": "1681440"
  },
  {
    "text": "so you can see opening up a browser here and we have different ports here is the book buyer",
    "start": "1681440",
    "end": "1687919"
  },
  {
    "text": "we will go through what what's there in a moment we have the book sold",
    "start": "1687919",
    "end": "1695520"
  },
  {
    "text": "which is the bookstore v1 um we should also have the book thief",
    "start": "1695520",
    "end": "1703360"
  },
  {
    "text": "and uh this this specific window is the book bookstore v2 which we haven't actually",
    "start": "1705039",
    "end": "1711440"
  },
  {
    "text": "deployed yet because we're going to show a traffic split with bookstore v2 so don't worry about that not coming up",
    "start": "1711440",
    "end": "1718240"
  },
  {
    "text": "and we should also have book thief so you can see there in the demo it won't be available at this time",
    "start": "1718240",
    "end": "1723520"
  },
  {
    "text": "we're going to do have access to it later and we should see the book thief and these have continuous counters",
    "start": "1723520",
    "end": "1729679"
  },
  {
    "text": "trying to buy books from the bookstore and only when we enable access well we see those counters",
    "start": "1729679",
    "end": "1735600"
  },
  {
    "text": "incremented and we're going to use policy to show that the book thief can steal books from the bookstore and then we can cut the",
    "start": "1735600",
    "end": "1741360"
  },
  {
    "text": "book thief off so we're going to step through that and demonstrate the power of access policies",
    "start": "1741360",
    "end": "1747039"
  },
  {
    "text": "here so here's access control policies and in these policies we're going to define",
    "start": "1747039",
    "end": "1752159"
  },
  {
    "text": "that the book buyer can have access to the bookstore b1 we're going to apply these and you can",
    "start": "1752159",
    "end": "1757919"
  },
  {
    "text": "see the yaml snippet there in the background but we'll apply it and i'll show the outcome",
    "start": "1757919",
    "end": "1762960"
  },
  {
    "text": "then you can look into the documentation after the session to see exactly how we define that",
    "start": "1762960",
    "end": "1768240"
  },
  {
    "text": "but we've pinned the access to different service accounts and services",
    "start": "1768240",
    "end": "1773679"
  },
  {
    "text": "in different name spaces so what you can see is we've created a traffic target for the access and a http route group",
    "start": "1773679",
    "end": "1781360"
  },
  {
    "text": "and what this should do is now program osm to allow",
    "start": "1781360",
    "end": "1786640"
  },
  {
    "text": "books the book buyer access to buy books from the bookstore so while that's actually being deployed",
    "start": "1786640",
    "end": "1794000"
  },
  {
    "text": "out there so what's happening under the hood is smi has read that in osm controller has read those things in",
    "start": "1794000",
    "end": "1800000"
  },
  {
    "text": "it's programming all the envoy sidecars to allow this traffic so we can see now you know nine books",
    "start": "1800000",
    "end": "1806880"
  },
  {
    "text": "that's incrementing the book thief can't buy any because we haven't given the book thief",
    "start": "1806880",
    "end": "1812080"
  },
  {
    "text": "any access to buy anything and this demonstrates i want uh only some services to access",
    "start": "1812080",
    "end": "1818240"
  },
  {
    "text": "the bookstore but what we're gonna do is actually go and edit this policy",
    "start": "1818240",
    "end": "1823360"
  },
  {
    "text": "yaml right now and give the book thief access so that we can demonstrate we can enable",
    "start": "1823360",
    "end": "1829440"
  },
  {
    "text": "policy to allow the book thieve access and we can also disable that so again this is explicit in that you",
    "start": "1829440",
    "end": "1835360"
  },
  {
    "text": "define in the kubernetes resources custom resources for smi exactly what",
    "start": "1835360",
    "end": "1840640"
  },
  {
    "text": "you want to do and then osm implements that in the service mesh layer so here you can see that we're go we",
    "start": "1840640",
    "end": "1847200"
  },
  {
    "text": "have some commented lines out there in blue at the bottom so we're saying the service account uh",
    "start": "1847200",
    "end": "1853360"
  },
  {
    "text": "named book thief in the namespace book thief actually has access to bookstore v1 which is up in the spec destination at",
    "start": "1853360",
    "end": "1859919"
  },
  {
    "text": "the top there so we've made that modification we're now going to use cube control to apply that to the",
    "start": "1859919",
    "end": "1866799"
  },
  {
    "text": "cluster again we're using kubernetes native tooling here to configure the service mesh which is",
    "start": "1866799",
    "end": "1873519"
  },
  {
    "text": "great you have a single entry point here to configure both kubernetes and the service mesh we're going to run",
    "start": "1873519",
    "end": "1879200"
  },
  {
    "text": "a cube control apply here to apply that updated policy manifest",
    "start": "1879200",
    "end": "1884320"
  },
  {
    "text": "which is going to enable the books thief to steal books from bookstore so we've applied",
    "start": "1884320",
    "end": "1889760"
  },
  {
    "text": "that we should see it being reflected in the ui and the book thief should start to",
    "start": "1889760",
    "end": "1894960"
  },
  {
    "text": "have access to steel books from only bookstore v1 because that's all we've allowed them to steal from",
    "start": "1894960",
    "end": "1900640"
  },
  {
    "text": "so while that's happening you can see right now that's being incremented so now the book thief has access because",
    "start": "1900640",
    "end": "1906399"
  },
  {
    "text": "we've allowed that access and everything's going through bookstore v1 and here's the uh",
    "start": "1906399",
    "end": "1911840"
  },
  {
    "text": "back-end books sold so we've demonstrated policy we've installed osm no policy",
    "start": "1911840",
    "end": "1919200"
  },
  {
    "text": "between we've added policy for the book buyer access to bookstore v1 we've seen that light up we've also",
    "start": "1919200",
    "end": "1924880"
  },
  {
    "text": "allowed the book thief access to bookstore v1 and we've seen that flow light up as well so that's access policy in a nutshell now we're",
    "start": "1924880",
    "end": "1932240"
  },
  {
    "text": "going to look at splitting traffic so progressive delivery example and what we have is we",
    "start": "1932240",
    "end": "1938159"
  },
  {
    "text": "have already deployed bookstore v1 we're going to deploy bookstore v2 and then we're going to route traffic",
    "start": "1938159",
    "end": "1944799"
  },
  {
    "text": "to bookstore v2",
    "start": "1944799",
    "end": "1949840"
  },
  {
    "text": "i also want to say i'm going to get the questions at the end i see your questions coming in keep them coming wonderful i will go through them at the",
    "start": "1950720",
    "end": "1956640"
  },
  {
    "text": "end so i don't feel like i'm not seeing them okay so we're deploying bookstore v2 right",
    "start": "1956640",
    "end": "1963760"
  },
  {
    "text": "now",
    "start": "1963760",
    "end": "1966080"
  },
  {
    "text": "so that's been deployed what we will do is go and make sure that we have access",
    "start": "1972559",
    "end": "1978159"
  },
  {
    "text": "to the ui for bookstore v2 momentarily and then we'll start to route traffic here we're just restarting",
    "start": "1978159",
    "end": "1984480"
  },
  {
    "text": "the port forward to make sure it picks up the correct destination there we go",
    "start": "1984480",
    "end": "1990640"
  },
  {
    "text": "and then we'll go on um over to the browser here and and refresh the pages",
    "start": "1990640",
    "end": "1996000"
  },
  {
    "text": "and this is the first time you'll see bookstore v2 so book buyers still buying books from b1",
    "start": "1996000",
    "end": "2001679"
  },
  {
    "text": "um bookstore v1 is still there uh book thief is still successfully",
    "start": "2001679",
    "end": "2007440"
  },
  {
    "text": "stealing books because we've allowed them in policy to do that so we can't say we didn't know",
    "start": "2007440",
    "end": "2014080"
  },
  {
    "text": "um and once this service comes up on the back end this port forward on port 8082 will have",
    "start": "2014080",
    "end": "2019840"
  },
  {
    "text": "access to bookstore v2 okay now we're going to frame the the traffic split set up here",
    "start": "2019840",
    "end": "2028080"
  },
  {
    "text": "okay that should come up momentarily so this is the first time seeing bookstore v2 no book styled from v2 and we can tell",
    "start": "2031600",
    "end": "2038799"
  },
  {
    "text": "you why that is because we have a traffic split not defining any traffic to go to bookstore v2 but we're about to",
    "start": "2038799",
    "end": "2045360"
  },
  {
    "text": "change that",
    "start": "2045360",
    "end": "2047840"
  },
  {
    "text": "okay so going back to terminal window here what we're going to do is actually show",
    "start": "2051200",
    "end": "2058158"
  },
  {
    "text": "you what the traffic split looks like now and i bet you it will say that 100 of",
    "start": "2058159",
    "end": "2063839"
  },
  {
    "text": "the traffic is going to bookstore v1 because that's the behavior we're seeing so what we're going to do is use a cube",
    "start": "2063839",
    "end": "2069679"
  },
  {
    "text": "control to describe a traffic split which is a custom resource called bookstore dash split in the",
    "start": "2069679",
    "end": "2074960"
  },
  {
    "text": "namespace bookstore now if you look to the last three lines there back end service bookstore v1 weight",
    "start": "2074960",
    "end": "2080560"
  },
  {
    "text": "100. so 100 of the traffic is going to bookstore v1 the service um",
    "start": "2080560",
    "end": "2088878"
  },
  {
    "text": "and what we're going to do is apply a split now that will route it i believe to 100 to",
    "start": "2088879",
    "end": "2095358"
  },
  {
    "text": "v2 and then we'll see that behaved okay so we've applied that we will go",
    "start": "2095359",
    "end": "2101200"
  },
  {
    "text": "back and describe that traffic split again and you will see the change in behavior",
    "start": "2101200",
    "end": "2107920"
  },
  {
    "text": "okay so just to model that we're now seeing books stole from bookstore v2 and if we go back to",
    "start": "2109359",
    "end": "2116800"
  },
  {
    "text": "describe that traffic split we will see in those last block on the",
    "start": "2116800",
    "end": "2123280"
  },
  {
    "text": "back ends we have a hundred percent of the traffic to v2 0 to v1 and that is exactly the behavior",
    "start": "2123280",
    "end": "2128640"
  },
  {
    "text": "that we're seeing now we're seeing all the books sold if we go back to book buyer here we should be able to see that also",
    "start": "2128640",
    "end": "2136480"
  },
  {
    "text": "okay and finally we're going to inspect the dashboard so it ships with some",
    "start": "2136560",
    "end": "2142960"
  },
  {
    "text": "grafana dashboards osm to introspect your different traffic patterns service to service how the data",
    "start": "2142960",
    "end": "2148880"
  },
  {
    "text": "plane is running itself um so let's go ahead and spin up access to that krafana dashboard",
    "start": "2148880",
    "end": "2155839"
  },
  {
    "text": "and we're drawing to the end of the demo now but there are other introspective tools that you saw earlier there is uh",
    "start": "2155839",
    "end": "2162160"
  },
  {
    "text": "zipkin as well which will do distributed tracing which will show you all your dependency graph on rpcs",
    "start": "2162160",
    "end": "2168800"
  },
  {
    "text": "between the services and essentially redraw that architecture diagram that you saw for this",
    "start": "2168800",
    "end": "2174000"
  },
  {
    "text": "demo app so you have access to observability tools there and dashboards as well to actually",
    "start": "2174000",
    "end": "2181040"
  },
  {
    "text": "monitor your service to service so we're going to hit grafana which we're hitting via a port forward locally that's going",
    "start": "2181040",
    "end": "2187680"
  },
  {
    "text": "through to that cluster that osm instance it's going to ask us to log in here",
    "start": "2187680",
    "end": "2193760"
  },
  {
    "text": "and we ship a bunch of dashboards inside osm directly that are pre pre-installed so you don't have",
    "start": "2193839",
    "end": "2200960"
  },
  {
    "text": "to worry about them but you can go and dig into the data we'll show you just a couple right now",
    "start": "2200960",
    "end": "2207040"
  },
  {
    "text": "if you have any questions please go ahead and ask them i will get to them as best as i can in just a few moments",
    "start": "2208480",
    "end": "2216480"
  },
  {
    "text": "okay so there's some dashboards here the control plane the data plane what's happening we can see both sets",
    "start": "2218560",
    "end": "2223839"
  },
  {
    "text": "um we're going to take a look at the control plane metrics we can see different successes how many uh connections there are access how many",
    "start": "2223839",
    "end": "2230560"
  },
  {
    "text": "requests any failures and different traffic attributes we can also go down and look at the data plane",
    "start": "2230560",
    "end": "2236880"
  },
  {
    "text": "and introspect service to service pods to service services service workloads to service",
    "start": "2236880",
    "end": "2243280"
  },
  {
    "text": "metrics so we have some different dynamics here we're going to pop this one up you will see that there is no data the",
    "start": "2243280",
    "end": "2249760"
  },
  {
    "text": "reason is their destination service is not set on the top um so it didn't have context for the",
    "start": "2249760",
    "end": "2254960"
  },
  {
    "text": "data that it needed to pull the followers out and what we're looking now is pod to service metrics so in the namespace",
    "start": "2254960",
    "end": "2261839"
  },
  {
    "text": "bookstore bookstore v1 pod here is the golden metrics that i mentioned coming",
    "start": "2261839",
    "end": "2267200"
  },
  {
    "text": "out of them so that is uh an end-to-end demo",
    "start": "2267200",
    "end": "2272240"
  },
  {
    "text": "sharing what smi can do so we used smi to configure osm it was osm under the",
    "start": "2272240",
    "end": "2277520"
  },
  {
    "text": "hood but it could have been linker d you could do the same demo run the same demo with any of these things",
    "start": "2277520",
    "end": "2283040"
  },
  {
    "text": "and make it through finally we've just popped up the website open service mesh dot io if you want to",
    "start": "2283040",
    "end": "2288079"
  },
  {
    "text": "learn more about that and let me move to the next slide here",
    "start": "2288079",
    "end": "2293359"
  },
  {
    "text": "so in summary uh there is a lot to navigate",
    "start": "2293359",
    "end": "2299280"
  },
  {
    "text": "when getting into the service mesh uh space an ecosystem but we hope with things like smi",
    "start": "2299280",
    "end": "2304400"
  },
  {
    "text": "being part of the cncf sandbox community that folks can start to look at",
    "start": "2304400",
    "end": "2309599"
  },
  {
    "text": "standardized abstractions for service meshes rather than worry about implementations and only worry about them when they need to",
    "start": "2309599",
    "end": "2315760"
  },
  {
    "text": "and have that value in those abstract apis if you're interested in service mesh",
    "start": "2315760",
    "end": "2322480"
  },
  {
    "text": "here are a couple of links osm as well if you want to run up that demo and as i said i will pop the",
    "start": "2322480",
    "end": "2328000"
  },
  {
    "text": "the link in the chat there as well it's linked off the main part of the repo the demo that i did share today and",
    "start": "2328000",
    "end": "2333599"
  },
  {
    "text": "hopefully that was a good way for everybody to get to understand service meshes what smi can provide and",
    "start": "2333599",
    "end": "2340880"
  },
  {
    "text": "what they can do with osm so um at this point i would love to open",
    "start": "2340880",
    "end": "2345920"
  },
  {
    "text": "it up for questions is karen we good to do questions yeah um we",
    "start": "2345920",
    "end": "2352079"
  },
  {
    "text": "are good to do questions um and then just for a really quick reminder everyone if you have questions you will",
    "start": "2352079",
    "end": "2357680"
  },
  {
    "text": "want to submit them to the q a tab at the bottom of the screen um so are you ready to get started",
    "start": "2357680",
    "end": "2365520"
  },
  {
    "text": "i'm ready to go all right so i've got to read off the questions yeah go for it okay um i can read them or you can read",
    "start": "2365520",
    "end": "2371599"
  },
  {
    "text": "them you go go for it karen okay so can we deploy multiple and distinct service meshes on",
    "start": "2371599",
    "end": "2378720"
  },
  {
    "text": "the same cluster shared by different teams using their separate namespaces if yes what is the best way to do that",
    "start": "2378720",
    "end": "2386880"
  },
  {
    "text": "so the the answer is yes you can do this i showed osm osm allows you to install",
    "start": "2386880",
    "end": "2394000"
  },
  {
    "text": "a mesh in different name spaces and give it a name and then you can onboard services to different meshes",
    "start": "2394000",
    "end": "2399280"
  },
  {
    "text": "it's really service mesh specific i would be interested to understand why",
    "start": "2399280",
    "end": "2406400"
  },
  {
    "text": "you would do it per team because then you would have to have some kind of gateway between all the meshes",
    "start": "2406400",
    "end": "2412880"
  },
  {
    "text": "to make sure that they all understand how to connect with each other i don't know that there's a best way",
    "start": "2412880",
    "end": "2418720"
  },
  {
    "text": "that i would advise folks to do it now what i'm i'll tell you what i'm seeing more of is",
    "start": "2418720",
    "end": "2423920"
  },
  {
    "text": "a single mesh per cluster and then between clusters some people are using different",
    "start": "2423920",
    "end": "2429119"
  },
  {
    "text": "mesh tech so they might have istio they might have linker d and then they're actually using",
    "start": "2429119",
    "end": "2435200"
  },
  {
    "text": "different apis that are out there to connect those things together i've seen things in service mesh hub to connect two discrete service meshes",
    "start": "2435200",
    "end": "2442800"
  },
  {
    "text": "together and have service a service b talk to one another so if you're interested go check out service mesh hub",
    "start": "2442800",
    "end": "2449200"
  },
  {
    "text": "but the overhead i would say and the tax that you pay is you're spinning up a control plane",
    "start": "2449200",
    "end": "2455680"
  },
  {
    "text": "for each of these discrete service measures that you're deploying now if resources are an issue that's",
    "start": "2455680",
    "end": "2461599"
  },
  {
    "text": "just going to be something to consider so no specific best practices unfortunately at this point but if that's something you're",
    "start": "2461599",
    "end": "2467359"
  },
  {
    "text": "experimenting with the tooling and the infrastructure should do it um i just would be interested to understand",
    "start": "2467359",
    "end": "2473920"
  },
  {
    "text": "more about why you want to have separate measures i'm guessing there's some kind of segregation that you need to have",
    "start": "2473920",
    "end": "2480480"
  },
  {
    "text": "of your traffic so yeah next one karen uh yes",
    "start": "2480480",
    "end": "2487760"
  },
  {
    "text": "second question um are there samples with north south",
    "start": "2487760",
    "end": "2493520"
  },
  {
    "text": "traffic like two services and two different kubernetes clusters talking to each other",
    "start": "2493520",
    "end": "2499599"
  },
  {
    "text": "yes uh so in osm we ship uh we don't ship an ingress controller but",
    "start": "2499599",
    "end": "2504800"
  },
  {
    "text": "we use ingress to get things on and off osm specifically so again this is",
    "start": "2504800",
    "end": "2510319"
  },
  {
    "text": "uh service mesh implementation specific there is gateways in sdo there's gateways in linker d and they",
    "start": "2510319",
    "end": "2516319"
  },
  {
    "text": "all have documentation on how to do this so in the case of a single service mesh",
    "start": "2516319",
    "end": "2522319"
  },
  {
    "text": "on a single cluster ingress is the way that you want to get things on there and there are different gateways to do that",
    "start": "2522319",
    "end": "2528640"
  },
  {
    "text": "in the case of north southbound as it's been asked in this question across multiple service meshes the only",
    "start": "2528640",
    "end": "2535760"
  },
  {
    "text": "way i've seen to do that now is to go and have a look at service mesh hub from the folks at solo they actually tie",
    "start": "2535760",
    "end": "2542480"
  },
  {
    "text": "can tie discrete service meshes together and have a discovery so that service a on cluster a on",
    "start": "2542480",
    "end": "2548240"
  },
  {
    "text": "surface mesh a can talk to service b and cluster b in service mesh b and actually have that north south",
    "start": "2548240",
    "end": "2554560"
  },
  {
    "text": "i've also seen in console console actually ships gateways and there's a way um i i did a demo a year or so ago where",
    "start": "2554560",
    "end": "2562240"
  },
  {
    "text": "we had two district clusters one was actually running in vms the other one was running in kubernetes",
    "start": "2562240",
    "end": "2567440"
  },
  {
    "text": "and we created uh gateways and allowed a service running on vms access to a pod",
    "start": "2567440",
    "end": "2574319"
  },
  {
    "text": "but via a service name uh running in kubernetes so you can do it there are some examples out there it's",
    "start": "2574319",
    "end": "2580400"
  },
  {
    "text": "going to be implementation specific uh service mesh harbor has some great documentation on",
    "start": "2580400",
    "end": "2586319"
  },
  {
    "text": "multi-service and the linker d folks actually have some great dock on documentation on multi-service and how",
    "start": "2586319",
    "end": "2592160"
  },
  {
    "text": "to do that that's something i hope we can address in smi so i'd love to give you an smi answer but i love the innovation that",
    "start": "2592160",
    "end": "2597839"
  },
  {
    "text": "i'm seeing in the ecosystem to solve that problem thank you for that question luis",
    "start": "2597839",
    "end": "2603440"
  },
  {
    "text": "all right next question is it a default deny which is why the bookstore was not",
    "start": "2604640",
    "end": "2610400"
  },
  {
    "text": "accessible from book from the book buyer in the beginning or it's because no routes were created and the services",
    "start": "2610400",
    "end": "2615920"
  },
  {
    "text": "were not able to communicate uh so ahmad thank you for this question in",
    "start": "2615920",
    "end": "2622720"
  },
  {
    "text": "the case of this demo osm actually uh deploys with strict",
    "start": "2622720",
    "end": "2628079"
  },
  {
    "text": "denial by default you can enable permissive mode which will allow allow all by default so your assertion",
    "start": "2628079",
    "end": "2635599"
  },
  {
    "text": "there and your question is correct there was no connectivity because we had a default deny in place when we",
    "start": "2635599",
    "end": "2641119"
  },
  {
    "text": "installed osm now this again is implementation specific some implementations are allow all and you need to turn on",
    "start": "2641119",
    "end": "2649280"
  },
  {
    "text": "default deny so i'd encourage you to look at the documentation osm specifically uh they implemented",
    "start": "2649280",
    "end": "2656400"
  },
  {
    "text": "with default denier which meant it didn't light up until i created an access policy thank you great question",
    "start": "2656400",
    "end": "2664240"
  },
  {
    "text": "all right um next question there are ten questions okay um is there a way osm can do",
    "start": "2664400",
    "end": "2671280"
  },
  {
    "text": "top base routing and not http based connection for example um by",
    "start": "2671280",
    "end": "2678560"
  },
  {
    "text": "my app it's my app um for example my app needs to connect to postgres how to achieve how can one achieve that",
    "start": "2678560",
    "end": "2685280"
  },
  {
    "text": "yes so what um what fred is asking here thank you fred is",
    "start": "2685280",
    "end": "2691200"
  },
  {
    "text": "basically layer 4 um routing rather than layer 7. smi can do this osm",
    "start": "2691200",
    "end": "2699119"
  },
  {
    "text": "cannot do this now i've seen it on the roadmap for link d to do layer 4 based routing so that you",
    "start": "2699119",
    "end": "2706079"
  },
  {
    "text": "can have access to discrete protocols that aren't layer 7 like http or grpc",
    "start": "2706079",
    "end": "2711119"
  },
  {
    "text": "for something like a progress and sql server osm is interested in taking that on if",
    "start": "2711119",
    "end": "2717119"
  },
  {
    "text": "that's something you need please go and raise an issue but i think tcp uh mtls and a few other things have to fall",
    "start": "2717119",
    "end": "2723760"
  },
  {
    "text": "into place but that's all doable so um i i it's dependent on the",
    "start": "2723760",
    "end": "2729200"
  },
  {
    "text": "implementation at the moment as to whether they support that it's configurable via you can do tcp based routing in smi",
    "start": "2729200",
    "end": "2735760"
  },
  {
    "text": "so it's enabled there but if that's something you need today there should be an implementation whether it's linkerd",
    "start": "2735760",
    "end": "2742480"
  },
  {
    "text": "coming down very soon or they may have it already or you know sdo or one of the others so",
    "start": "2742480",
    "end": "2749839"
  },
  {
    "text": "cool thank you next question um does osm support each a of osm",
    "start": "2750400",
    "end": "2757760"
  },
  {
    "text": "controller it does not currently thank you for asking this fred um osm the team i i was responsible for",
    "start": "2757760",
    "end": "2765760"
  },
  {
    "text": "working on some of it so i know a little better the decision making it was more to land the experience and",
    "start": "2765760",
    "end": "2770880"
  },
  {
    "text": "prove out what we can do with smi ha control plane is something that will come so",
    "start": "2770880",
    "end": "2776240"
  },
  {
    "text": "um it's not there today okay um someone asked um",
    "start": "2776240",
    "end": "2782570"
  },
  {
    "text": "[Music] it's a question about the spec and it says it all seems to be an alpha does this mean it is not recommended to go",
    "start": "2782570",
    "end": "2789119"
  },
  {
    "text": "into production environments with osm at the moment",
    "start": "2789119",
    "end": "2794000"
  },
  {
    "text": "uh yes so the the idea is with smi to actually prove out and move those apis",
    "start": "2794800",
    "end": "2801280"
  },
  {
    "text": "as quickly as possible to beta and stable i would say that",
    "start": "2801280",
    "end": "2807280"
  },
  {
    "text": "it depends on the implementation itself and which pieces you are using the api itself and the specification",
    "start": "2807280",
    "end": "2814000"
  },
  {
    "text": "doesn't have any guarantees around service availability and up time so i",
    "start": "2814000",
    "end": "2819920"
  },
  {
    "text": "can't say don't use it in production it depends on the implementation but i would say that if things are in",
    "start": "2819920",
    "end": "2825760"
  },
  {
    "text": "alpha the idea is there that fields can change types can change and the api is subject",
    "start": "2825760",
    "end": "2831680"
  },
  {
    "text": "to change uh being a member of the smi community we didn't want to over pivot and move",
    "start": "2831680",
    "end": "2836960"
  },
  {
    "text": "things to beta and stable when we didn't capture a lot of integrations and a lot of user feedback",
    "start": "2836960",
    "end": "2843200"
  },
  {
    "text": "so i think now that the community has grown and there are more implementations and including",
    "start": "2843200",
    "end": "2848319"
  },
  {
    "text": "osm we should be able to solidify these things and move them to beta and stable the only thing in our way for",
    "start": "2848319",
    "end": "2855119"
  },
  {
    "text": "doing that is making sure that we have user feedback to make sure the apis are doing",
    "start": "2855119",
    "end": "2860559"
  },
  {
    "text": "what what people need cool um let's see",
    "start": "2860559",
    "end": "2867599"
  },
  {
    "text": "what are the plans to support multi-cluster scenarios so um in smi itself the conversation has",
    "start": "2869839",
    "end": "2878079"
  },
  {
    "text": "come up a few times um i think what we're seeing happen is folks like linker d",
    "start": "2878079",
    "end": "2883200"
  },
  {
    "text": "and service mesh hub are addressing that and building apis and getting value and then if the community says this is a",
    "start": "2883200",
    "end": "2889680"
  },
  {
    "text": "really valuable api this is a call to action let's put it in smi and get other people to implement it",
    "start": "2889680",
    "end": "2895440"
  },
  {
    "text": "so that you have a standard multi-cluster but i've seen the most traction and this isn't to say there's more so apologies",
    "start": "2895440",
    "end": "2902319"
  },
  {
    "text": "if i miss everybody linkerd has a great blog on this and uh service mesh hub are doing",
    "start": "2902319",
    "end": "2907520"
  },
  {
    "text": "work in this as well so i'd encourage you to go take a look at those and if they're apis you want to be portable across all of them let's get it in smi",
    "start": "2907520",
    "end": "2916240"
  },
  {
    "text": "cool um let's see how does smi relate to opa as an open service or sorry open",
    "start": "2917520",
    "end": "2924079"
  },
  {
    "text": "policy agent how does smi relate to opa um smi itself",
    "start": "2924079",
    "end": "2929680"
  },
  {
    "text": "is around describing the most common features that the community and users need from service meshes",
    "start": "2929680",
    "end": "2936079"
  },
  {
    "text": "opa opa uses a language it's a policy engine which can basically give you a",
    "start": "2936079",
    "end": "2942720"
  },
  {
    "text": "set of constraints so you pass it a set of constraints and then you pass it some data and then it'll go yes or no so it's a policy",
    "start": "2942720",
    "end": "2949440"
  },
  {
    "text": "engine whereas smi is around describing features of a service mesh so different pieces how they may",
    "start": "2949440",
    "end": "2956079"
  },
  {
    "text": "combined is there some projects in kubernetes that do opa in kubernetes so you could",
    "start": "2956079",
    "end": "2962160"
  },
  {
    "text": "actually restrict what some of those fields have in them using something like gatekeeper",
    "start": "2962160",
    "end": "2967760"
  },
  {
    "text": "so orthogonal one is around um yes no on any arbitrary resource that's",
    "start": "2967760",
    "end": "2973280"
  },
  {
    "text": "opa the other smi is a set of specifications to describe features of a service mesh",
    "start": "2973280",
    "end": "2979440"
  },
  {
    "text": "and have them implemented by a control plane okay um would osm require fundamentally",
    "start": "2979440",
    "end": "2987200"
  },
  {
    "text": "that you have a service mesh deployed yes uh so osm is a service mesh i'm not",
    "start": "2987200",
    "end": "2995440"
  },
  {
    "text": "sure whether the question was really would smi require fundamentally",
    "start": "2995440",
    "end": "3000720"
  },
  {
    "text": "okay so smi the specification requires something to implement it and",
    "start": "3000720",
    "end": "3007599"
  },
  {
    "text": "that is typically a service mesh if you have your own homegrown bespoke",
    "start": "3007599",
    "end": "3013040"
  },
  {
    "text": "process internally and you want to use the smi apis to maintain some compatibility and portability",
    "start": "3013040",
    "end": "3018480"
  },
  {
    "text": "you can do that it's just a custom resource you write a controller to read that custom resource and act on it",
    "start": "3018480",
    "end": "3024079"
  },
  {
    "text": "osm itself is a service mesh so for this question the answer is yes",
    "start": "3024079",
    "end": "3031119"
  },
  {
    "text": "uh let's see will smi grow to cover the ingress domain um",
    "start": "3032160",
    "end": "3038839"
  },
  {
    "text": "interesting uh the conversations have been had with the ingress team over on kubernetes about ingress v2 and",
    "start": "3038839",
    "end": "3045760"
  },
  {
    "text": "whether it should live in service mesh or kubernetes and really again what we're trying to do is have the implementers and the users",
    "start": "3045760",
    "end": "3052240"
  },
  {
    "text": "say what they want and then we can figure out where to put it but ingress is one of the biggest pieces that is hard still",
    "start": "3052240",
    "end": "3058559"
  },
  {
    "text": "in service meshes some apis are more developed than others but i think having a solution that",
    "start": "3058559",
    "end": "3064400"
  },
  {
    "text": "smi adopts or at least backs whether that's ingrass v2 and kubernetes which is coming along great",
    "start": "3064400",
    "end": "3070160"
  },
  {
    "text": "um or whether something else lives in smi i think it would be great to collaborate around one solution ingress",
    "start": "3070160",
    "end": "3076480"
  },
  {
    "text": "have the smi bit i have the service mesh bits be extensions under that baseline api so",
    "start": "3076480",
    "end": "3082319"
  },
  {
    "text": "if you have uh a say i'd invite you to either or interested in making your case about one",
    "start": "3082319",
    "end": "3088160"
  },
  {
    "text": "or the other either come to smi or go to the ingress v2 working group under sig network and kubernetes",
    "start": "3088160",
    "end": "3096079"
  },
  {
    "text": "great um let's see okay so um",
    "start": "3096079",
    "end": "3101280"
  },
  {
    "text": "how much overhead in performance and troubleshooting complexity does using osm introduce so",
    "start": "3102480",
    "end": "3110480"
  },
  {
    "text": "i i think service meshes introduce a certain set of complexities we tried to with",
    "start": "3110480",
    "end": "3117839"
  },
  {
    "text": "open service mesh keep that as light as possible and the way that we did that was not introducing any",
    "start": "3117839",
    "end": "3123119"
  },
  {
    "text": "components that we didn't need to run the core functionality and exposing debug and endpoints and",
    "start": "3123119",
    "end": "3129119"
  },
  {
    "text": "apis but there is you know i don't want to say a service mesh tax there's something you need to run",
    "start": "3129119",
    "end": "3134880"
  },
  {
    "text": "and that needs to be operated whoever is operating that is taking on the burden of that and",
    "start": "3134880",
    "end": "3139920"
  },
  {
    "text": "there are different implementations which have different operational burdens what what i'm seeing in smi and the open",
    "start": "3139920",
    "end": "3146960"
  },
  {
    "text": "source community is benchmarking conformance and performance tests i know the kin vault folks have",
    "start": "3146960",
    "end": "3152480"
  },
  {
    "text": "done some for linker d and other platforms around what is the performance how does it",
    "start": "3152480",
    "end": "3157680"
  },
  {
    "text": "scale how does it get so you know those numbers are out there in the community as well but i think as",
    "start": "3157680",
    "end": "3163280"
  },
  {
    "text": "a as a principal of osm we wanted to make sure that we kept that tax relatively low so",
    "start": "3163280",
    "end": "3170640"
  },
  {
    "text": "there is something you need to run and that something needs to be uh operational so that is in turn some",
    "start": "3170640",
    "end": "3178240"
  },
  {
    "text": "kind of burden how i would quantify that i don't know to give you any meaningful answer",
    "start": "3178240",
    "end": "3184079"
  },
  {
    "text": "but great question thank you all right uh we have a few minutes left so i'm going to do maybe two questions",
    "start": "3184079",
    "end": "3189200"
  },
  {
    "text": "uh okay can we scale up or down osm controllers today no so it's a single it's a single",
    "start": "3189200",
    "end": "3196559"
  },
  {
    "text": "controller no ha so ha is down the path so not not today",
    "start": "3196559",
    "end": "3202800"
  },
  {
    "text": "um oh we have more questions all right um",
    "start": "3202800",
    "end": "3208000"
  },
  {
    "text": "instead of been during one of your answers but how um how about a single service mesh",
    "start": "3208000",
    "end": "3214559"
  },
  {
    "text": "across multiple kubernetes is there such a thing um you can certainly do that so you",
    "start": "3214559",
    "end": "3221280"
  },
  {
    "text": "would have the control plane uh in one cluster and then the data plane so all the envoys connecting back to that one",
    "start": "3221280",
    "end": "3227040"
  },
  {
    "text": "control plane which need you need to have the routing set up to do that what you need to think about and i only",
    "start": "3227040",
    "end": "3232160"
  },
  {
    "text": "need to say this because i've done it before is failure domains if you lose access to that control plane",
    "start": "3232160",
    "end": "3237599"
  },
  {
    "text": "you've now lost access to configure that cluster that's on another",
    "start": "3237599",
    "end": "3242640"
  },
  {
    "text": "sorry that service mesh that's on another cluster because it doesn't have routing access so just",
    "start": "3242640",
    "end": "3247839"
  },
  {
    "text": "make sure you map your failure domains and you want to map them vertically all the way up from the hardware all the way up because what",
    "start": "3247839",
    "end": "3255680"
  },
  {
    "text": "is your failure scenario there and what is your ha scenario so map your fault tolerance with",
    "start": "3255680",
    "end": "3261040"
  },
  {
    "text": "what your from your app what does your app need to have am i actually modeling that down in the",
    "start": "3261040",
    "end": "3266319"
  },
  {
    "text": "infrastructure would be my answer okay last question how does osm block",
    "start": "3266319",
    "end": "3271760"
  },
  {
    "text": "access between two services by default does it use ip tables to achieve it",
    "start": "3271760",
    "end": "3277119"
  },
  {
    "text": "so uh good question it's actually doing an envoy itself so it's it's envoy doesn't know how to",
    "start": "3277119",
    "end": "3283599"
  },
  {
    "text": "route traffic things that aren't explicitly told to route traffic to so the access is done in envoy itself so if if",
    "start": "3283599",
    "end": "3291520"
  },
  {
    "text": "envoy doesn't know about a service it's dropped so it's done in layer seven layer four to layer seven",
    "start": "3291520",
    "end": "3297200"
  },
  {
    "text": "depending on how you've got it set up and it's dropping it actually an envoy so it's not doing in it in ip tables it's hitting envoy which is",
    "start": "3297200",
    "end": "3305359"
  },
  {
    "text": "that sidecar data plane component of a service mesh that's making a decision to drop that and that's not done in ip tables",
    "start": "3305359",
    "end": "3313520"
  },
  {
    "text": "all right um let's go ahead and wrap it up um thank you lockheed for a great presentation and q a facilitation",
    "start": "3313520",
    "end": "3321440"
  },
  {
    "text": "that is all the time we have questions for today thank you everyone for joining us the webinar recording and slides will",
    "start": "3321440",
    "end": "3327359"
  },
  {
    "text": "be online later today and we look forward to seeing you all at a future cncf webinar",
    "start": "3327359",
    "end": "3332799"
  },
  {
    "text": "have a great day thank you thank you",
    "start": "3332799",
    "end": "3339520"
  }
]