[
  {
    "text": "okay hi everybody we're here today to save you from an unspeakable evil but before we",
    "start": "880",
    "end": "9120"
  },
  {
    "text": "tell you what it is and how to protect yourselves let us tell you a little bit about who we are",
    "start": "9120",
    "end": "16200"
  },
  {
    "text": "the pond for a couple of days by myself and I work at Capital One um I help",
    "start": "22960",
    "end": "28240"
  },
  {
    "text": "maintain a machine learning platform internally i'm also a QFlow uh member and contributor and I'm deeply honored",
    "start": "28240",
    "end": "35360"
  },
  {
    "text": "to be here today as a speaker and I'm also honored to be sharing the stage with Mory thank you Alex hi everyone my",
    "start": "35360",
    "end": "43040"
  },
  {
    "text": "name is Morty i work as a distinguished engineer in Capital Oneman i'm passionate about open-source Kubernetes",
    "start": "43040",
    "end": "49920"
  },
  {
    "text": "building platforms and related services i also come from New York City and I",
    "start": "49920",
    "end": "55039"
  },
  {
    "text": "live in New Jersey again along with my amazing wife and two kids uh it is",
    "start": "55039",
    "end": "61359"
  },
  {
    "text": "exciting and I'm feeling great to be here to present this topic along with",
    "start": "61359",
    "end": "66479"
  },
  {
    "text": "Alex who is a true subject matter expert in this area thank you Matthew so as I",
    "start": "66479",
    "end": "72799"
  },
  {
    "text": "was saying we're here to protect you from an unspeakable evil",
    "start": "72799",
    "end": "77840"
  },
  {
    "text": "if I could add an ominous sound effect to the slide I would but you'll just have to use your imagination if you're",
    "start": "77840",
    "end": "83360"
  },
  {
    "text": "not familiar with this acronym congratulations may you never see the horrors that we've borne witness",
    "start": "83360",
    "end": "90360"
  },
  {
    "text": "to nih stands for not invented here and it's basically when companies decide to",
    "start": "90360",
    "end": "96479"
  },
  {
    "text": "roll their own solutions instead of leveraging mature industry standard widely adopted open source solutions",
    "start": "96479",
    "end": "104400"
  },
  {
    "text": "to be clear there are specific use cases where it makes sense to build versus buy",
    "start": "104400",
    "end": "109759"
  },
  {
    "text": "or whatever the open source equivalent of that is i guess build versus don't",
    "start": "109759",
    "end": "115360"
  },
  {
    "text": "buy um so a little context on this image here um we're not allowed to use",
    "start": "115560",
    "end": "122320"
  },
  {
    "text": "unlicensed images in our deck so in the spirit of malicious compliance uh I asked my children and Morphe asked his",
    "start": "122320",
    "end": "128560"
  },
  {
    "text": "children to illustrate some of the memes we wanted to use so you'll see sprinkle throughout this uh presentation some",
    "start": "128560",
    "end": "134400"
  },
  {
    "text": "drawings uh and if you're not familiar with this this is from Monty Python and the Holy Grail it's one of the knights",
    "start": "134400",
    "end": "139920"
  },
  {
    "text": "who say NI i don't know how to pronounce NIH but I'm just going to call it NI from now on u so kudos to our to our",
    "start": "139920",
    "end": "146560"
  },
  {
    "text": "children for helping us out so uh story time at one of my earliest jobs within",
    "start": "146560",
    "end": "153599"
  },
  {
    "text": "the industry I was tasked with maintaining uh an in-house version of Terraform implemented in Ruby of all",
    "start": "153599",
    "end": "160080"
  },
  {
    "text": "things and it was kind of a nightmare and on some level the rest of my career since then has been a kind of prolonged",
    "start": "160080",
    "end": "167120"
  },
  {
    "text": "horrified recoil to that experience at some point I asked for advice about this tool in a Slack",
    "start": "167120",
    "end": "174160"
  },
  {
    "text": "workspace for DevOps engineers and I was told to quote \"Find a new job immediately.\"",
    "start": "174160",
    "end": "179840"
  },
  {
    "text": "Thank you brutally honest stranger on the internet i actually listened to this advice it was good advice",
    "start": "179840",
    "end": "185959"
  },
  {
    "text": "so the point I'm trying to make is for the love of all that is good and holy please please please resist the alert of",
    "start": "185959",
    "end": "193840"
  },
  {
    "text": "NIH and use industry standard open source software instead but you guys all",
    "start": "193840",
    "end": "199680"
  },
  {
    "text": "know this i mean this is a sophisticated audience we're at CubeCon there's just one",
    "start": "199680",
    "end": "205159"
  },
  {
    "text": "problem capability gaps h so when you work in a regulated industry like we do",
    "start": "205159",
    "end": "211680"
  },
  {
    "text": "where there are elevated security requirements and regulatory requirements sometimes you can't just use the open",
    "start": "211680",
    "end": "218000"
  },
  {
    "text": "source software that you want to use off the shelf and that's because it doesn't meet specific internal mandates now when",
    "start": "218000",
    "end": "224400"
  },
  {
    "text": "you find yourself in this situation you're kind of at a crossroad if you enjoy making people suffer you can use",
    "start": "224400",
    "end": "230080"
  },
  {
    "text": "those capability gaps as a justification to reinvent the wheel if you're not a Sith Lord you can close those capability",
    "start": "230080",
    "end": "236879"
  },
  {
    "text": "gaps in your open source dependencies so to give you a sense of the kind of capability gaps we're talking",
    "start": "236879",
    "end": "242760"
  },
  {
    "text": "about here's a list i'm not going to read them off to you but these are things that we've dealt with or similar to things that we've dealt with and it's",
    "start": "242760",
    "end": "249280"
  },
  {
    "text": "not an exhaustive list but the point is that the lift of reinventing the wheel",
    "start": "249280",
    "end": "254400"
  },
  {
    "text": "is almost always going to be greater than the lift of closing these gaps in your dependencies",
    "start": "254400",
    "end": "260400"
  },
  {
    "text": "so today we're going to talk about four different ways to address these capability gaps in your open source",
    "start": "260400",
    "end": "267160"
  },
  {
    "text": "dependencies contribution forking wpping and mutation",
    "start": "267160",
    "end": "273759"
  },
  {
    "text": "we're going to kind of breeze through the first three because the fourth is kind of the most novel so here we",
    "start": "273759",
    "end": "281160"
  },
  {
    "text": "go so for each approach we're going to provide an example we're going to delineate the pros as well as the cons",
    "start": "281160",
    "end": "287440"
  },
  {
    "text": "and we're going to conclude with a kind of comparison matrix as well as a decision tree to help you evaluate which",
    "start": "287440",
    "end": "293040"
  },
  {
    "text": "specific solution to use for your specific use case let's start with my favorite",
    "start": "293040",
    "end": "299160"
  },
  {
    "text": "contribution uh so we do a lot of this i'm a QFlow contributor and member this",
    "start": "299160",
    "end": "304639"
  },
  {
    "text": "is honestly my favorite part of my job and it's always the go-to solution for us unless there are kind of obstacles to",
    "start": "304639",
    "end": "311120"
  },
  {
    "text": "leveraging it which we'll talk about in a second the advantages are pretty self-explanatory to an audience like you",
    "start": "311120",
    "end": "317199"
  },
  {
    "text": "guys so just to breeze through them quickly essentially when you contribute you're distributing the maintenance",
    "start": "317199",
    "end": "323440"
  },
  {
    "text": "burden across a worldwide network of software engineers and that's incredible and it's hard to compete with",
    "start": "323440",
    "end": "330759"
  },
  {
    "text": "some companies uh if you are not open sourcing you're kind of dead in the",
    "start": "330759",
    "end": "336960"
  },
  {
    "text": "water and here's why contributor count you know unless",
    "start": "336960",
    "end": "342240"
  },
  {
    "text": "you have a team of almost 4,000 engineers to maintain this internal product that you want to build it's",
    "start": "342240",
    "end": "347600"
  },
  {
    "text": "going to be very hard to compete with something like this now granted on some level Kubernetes is kind of at the end",
    "start": "347600",
    "end": "353360"
  },
  {
    "text": "of the bell curve but you get the idea the question is do you really want to step into the ring with something like",
    "start": "353360",
    "end": "359400"
  },
  {
    "text": "this the point is don't compete collaborate in addition and this is also",
    "start": "359400",
    "end": "366080"
  },
  {
    "text": "pretty self-explanatory but when you contribute to open source you broaden your impact you're not just solving a",
    "start": "366080",
    "end": "371680"
  },
  {
    "text": "problem that's internal to your company you're solving a problem that's global potentially and of course community um",
    "start": "371680",
    "end": "379759"
  },
  {
    "text": "you know just look around this room none of us would be here if we only worked on internal products and uh it's a real",
    "start": "379759",
    "end": "386319"
  },
  {
    "text": "privilege to collaborate with people from all over the world and learn from them and develop your craft and develop",
    "start": "386319",
    "end": "392160"
  },
  {
    "text": "friendships and you don't really get that when you're stuck in NIH",
    "start": "392160",
    "end": "398120"
  },
  {
    "text": "so I'm not sure I'm allowed to present this slide here at CubeCon but in the spirit of honesty and transparency I do",
    "start": "398240",
    "end": "404479"
  },
  {
    "text": "feel obligated to so there are some drawbacks to to bear in mind with contribution first and foremost and most",
    "start": "404479",
    "end": "411360"
  },
  {
    "text": "of the time when we're not contributing this is the obstacle that's preventing us from contributing and that is that proprietary functionality cannot be",
    "start": "411360",
    "end": "418000"
  },
  {
    "text": "contributed to some extent you can offset this when you have like u pluggable architecture you can inject",
    "start": "418000",
    "end": "424720"
  },
  {
    "text": "functionality at runtime but not all projects support that and in addition uh contribution",
    "start": "424720",
    "end": "431520"
  },
  {
    "text": "requires p patience because you're kind of at the mercy of the maintainers who",
    "start": "431520",
    "end": "436560"
  },
  {
    "text": "have competing priorities to review your code to merge your code to cut a release",
    "start": "436560",
    "end": "442720"
  },
  {
    "text": "and if you need something immediately contribution might not be the solution for you in the short term although you can always loop back around and",
    "start": "442720",
    "end": "448800"
  },
  {
    "text": "contribute the solution later so let's move on to the next approach",
    "start": "448800",
    "end": "453840"
  },
  {
    "text": "and that is forking or some like to call it dingle hopping uh so a fork is basically when",
    "start": "453840",
    "end": "461039"
  },
  {
    "text": "you make a copy of existing code and provide changes on top of that there are plenty of notable forks",
    "start": "461039",
    "end": "468160"
  },
  {
    "text": "in the wild such as valky open tofu and less notably our internal fork at the",
    "start": "468160",
    "end": "473360"
  },
  {
    "text": "flow pipelines UI and the primary advantage of a fork is",
    "start": "473360",
    "end": "478720"
  },
  {
    "text": "that you have total control over the codebase you're not at the mercy of maintainers you don't need anybody externally to review merge and release",
    "start": "478720",
    "end": "485840"
  },
  {
    "text": "your code what happens between you and your fork is none of my business this allows you to among other",
    "start": "485840",
    "end": "492160"
  },
  {
    "text": "things incorporate complex business logic and as mentioned it also expedites",
    "start": "492160",
    "end": "497360"
  },
  {
    "text": "delivery that being said th those are appealing advantages but there are",
    "start": "497360",
    "end": "504000"
  },
  {
    "text": "significant disadvantages that you need to take into consideration first and foremost high maintenance burden you're not",
    "start": "504000",
    "end": "510319"
  },
  {
    "text": "distributing that operational overhead you're now responsible for this code that you have total control",
    "start": "510319",
    "end": "515880"
  },
  {
    "text": "over and often that results in upgrade friction when you need to uh rebase",
    "start": "515880",
    "end": "521120"
  },
  {
    "text": "changes from the upstream origin into your fork you'll often wind up with merge conflicts and that kind of results in",
    "start": "521120",
    "end": "527920"
  },
  {
    "text": "feature lag where if you have an internal fork there might be functionality that's enabled in the upstream that you haven't had a chance",
    "start": "527920",
    "end": "534080"
  },
  {
    "text": "to pull downstream and so your internal users can't benefit from that until you go through the upgrade friction and pull",
    "start": "534080",
    "end": "540320"
  },
  {
    "text": "in that functionality there are some things you can do to offset these disadvantages first and foremost keep",
    "start": "540320",
    "end": "547519"
  },
  {
    "text": "your fork as small as possible try to consolidate it and keep the surface area as small as you",
    "start": "547519",
    "end": "553560"
  },
  {
    "text": "can and secondly you can kind of treat your fork as like a staging ground for open source contribution there's a bit",
    "start": "553560",
    "end": "559760"
  },
  {
    "text": "of a revolving door between these different solutions so you can start with the fork and then uh to for example",
    "start": "559760",
    "end": "565760"
  },
  {
    "text": "address something that needs to be addressed immediately and then you can ultimately contribute that functionality",
    "start": "565760",
    "end": "570959"
  },
  {
    "text": "upstream and thereby remove it from your fork and reduce the surface area of your fork and then reduce the operational",
    "start": "570959",
    "end": "577120"
  },
  {
    "text": "overhead of maintaining your fork now let's move on to our third solution wrapping so a wrapper is essentially",
    "start": "577120",
    "end": "584560"
  },
  {
    "text": "where you abstract underlying dependencies and uh you can be deliberate about that uh you can",
    "start": "584560",
    "end": "590800"
  },
  {
    "text": "deliberately offiscate them or you can be transparent about your dependencies the wrapper can happen server side or it",
    "start": "590800",
    "end": "597360"
  },
  {
    "text": "can happen client side a good example of a wrapper that we use on a regular basis is Qflow pipelines so Qflow pipelines",
    "start": "597360",
    "end": "604640"
  },
  {
    "text": "wraps both Argo comp Argo workflows as well as Tecton each of those are uh",
    "start": "604640",
    "end": "610800"
  },
  {
    "text": "workflow orchestration engines and Qflow pipelines is kind of a more machine learning focused workflow orchestration",
    "start": "610800",
    "end": "616800"
  },
  {
    "text": "engine and that's the additional functionality that it adds on top of the things that it wraps but ultimately it",
    "start": "616800",
    "end": "622480"
  },
  {
    "text": "is a wrapper and an abstraction on top of those two tools",
    "start": "622480",
    "end": "628040"
  },
  {
    "text": "so wrappers like forks allow you to incorporate complex business logic and unlike forks they allow you to",
    "start": "628079",
    "end": "634800"
  },
  {
    "text": "offiscate the underlying dependencies among other things this protects against volatility if an",
    "start": "634800",
    "end": "641680"
  },
  {
    "text": "underlying dependency changes in some way that no longer meets your requirements let's say for example it changes its license or something to that",
    "start": "641680",
    "end": "648399"
  },
  {
    "text": "effect in theory because you have a wrapper you can swap out that offending dependency without directly impacting",
    "start": "648399",
    "end": "654720"
  },
  {
    "text": "end users and in addition it results in interface control so you can completely redefine",
    "start": "654720",
    "end": "660880"
  },
  {
    "text": "the user interface whether it's an API CLI a guey or an SDK qflow pipelines does this with Argo",
    "start": "660880",
    "end": "668240"
  },
  {
    "text": "workflows and this is just to give you a sense of how it's kind of rebranding the underlying functionality um providing",
    "start": "668240",
    "end": "674640"
  },
  {
    "text": "unique like a unique conceptual framework unique nomenclature but under the hood when you quote unquote compile",
    "start": "674640",
    "end": "680320"
  },
  {
    "text": "a Qflow pipeline you're winding up with these underlying Argo workflow abstractions um with the exception of",
    "start": "680320",
    "end": "685519"
  },
  {
    "text": "the Chrome workflow so all of that sounds lovely right but rappers have massive massive",
    "start": "685519",
    "end": "693800"
  },
  {
    "text": "disadvantages and uh I think sometimes people fail to take those into account",
    "start": "693800",
    "end": "699040"
  },
  {
    "text": "so first first of all just like forking you have high maintenance burden upgrade friction feature lag and uh in addition",
    "start": "699040",
    "end": "706560"
  },
  {
    "text": "what I found is that people who maintain rappers often times engineering time and",
    "start": "706560",
    "end": "712480"
  },
  {
    "text": "effort is redirected away from feature delivery for end users and towards wrapping tracked targets because it's",
    "start": "712480",
    "end": "718640"
  },
  {
    "text": "not a trivial task especially when you're targeting multiple complex underlying dependencies like for example",
    "start": "718640",
    "end": "723680"
  },
  {
    "text": "the way QFlow does with both Tecton and Argo workflows in addition rappers result in",
    "start": "723680",
    "end": "729680"
  },
  {
    "text": "increased complexity and that translates into brittleleness and difficulty when debugging so for example when a Qflow",
    "start": "729680",
    "end": "736480"
  },
  {
    "text": "pipeline run fails we have to kind of determine if the issue is end user code Qflow pipelines Argo workflows",
    "start": "736480",
    "end": "743839"
  },
  {
    "text": "Kubernetes or something lower in the stack any one of those individually is",
    "start": "743839",
    "end": "749360"
  },
  {
    "text": "enormously complex and difficult to debug on its own when you combine all of that together it's hard to kind of sift",
    "start": "749360",
    "end": "755839"
  },
  {
    "text": "through all these abstraction layers to figure out what the exact source of the problem is and this one's interesting",
    "start": "755839",
    "end": "761360"
  },
  {
    "text": "because it was also listed as a pro but proprietary interfaces result in something that I personally refer to as",
    "start": "761360",
    "end": "767360"
  },
  {
    "text": "cursed knowledge and what that means is as engineers we want to invest in skills",
    "start": "767360",
    "end": "774320"
  },
  {
    "text": "that are transferable to the next role that we find ourselves in and when you're when you're forced to work on",
    "start": "774320",
    "end": "780959"
  },
  {
    "text": "proprietary interfaces that don't exist externally you're developing expertise and skills that aren't transferable and",
    "start": "780959",
    "end": "787680"
  },
  {
    "text": "that can be kind of frustrating i find that maintainers and end users are a lot happier when they're able to invest in",
    "start": "787680",
    "end": "793760"
  },
  {
    "text": "industry standard interfaces so I'm going to hand it off to Mory now to talk about what I think",
    "start": "793760",
    "end": "799360"
  },
  {
    "text": "is the most novel of the four approaches thank you Alex okay let's start on mutation before",
    "start": "799360",
    "end": "807279"
  },
  {
    "text": "we start on mutation let me give you start small intro okay in Kubernetes",
    "start": "807279",
    "end": "812720"
  },
  {
    "text": "world mutation means you're modifying the moni manifest at the runtime or on the fly before it is actually created",
    "start": "812720",
    "end": "820320"
  },
  {
    "text": "within the cluster how it works for example when user is submitting some manifest or some application is creating",
    "start": "820320",
    "end": "826959"
  },
  {
    "text": "some manifest in the cluster the request sent to API server the AP sends HTTP",
    "start": "826959",
    "end": "832000"
  },
  {
    "text": "calls to the corresponding web books the corresponding web books matches a target and it takes action like modifying or",
    "start": "832000",
    "end": "838800"
  },
  {
    "text": "something then again it sends the call back to the API server then the API server creates a manifest in a high",
    "start": "838800",
    "end": "845440"
  },
  {
    "text": "level this is what happening behind mutation okay how mutation is helping in",
    "start": "845440",
    "end": "852480"
  },
  {
    "text": "this context as you can see in the slide without mutation you are actually touching the source code of the",
    "start": "852480",
    "end": "858079"
  },
  {
    "text": "application you're for each application for example pipeline or orgo workflows or Ky whatever The open source",
    "start": "858079",
    "end": "864560"
  },
  {
    "text": "application you're touching the code you're making the changes you're maintaining it internally or you're creating wrappers out of it that comes",
    "start": "864560",
    "end": "871199"
  },
  {
    "text": "with the high maintenance right with mutation you're not touching the source code of open source repos at all you're",
    "start": "871199",
    "end": "876800"
  },
  {
    "text": "directly modifying the manifest in that way it embraces a common approach you don't have to worry about what language",
    "start": "876800",
    "end": "882800"
  },
  {
    "text": "it is written and all those things and all you're directly working in the middle middle layer one level",
    "start": "882800",
    "end": "890519"
  },
  {
    "text": "up for the purpose of this session We will go through Kerno before I start",
    "start": "890519",
    "end": "896079"
  },
  {
    "text": "we start on Kerno there are general purpose mutation web books or admission controllers available like OPA is one of",
    "start": "896079",
    "end": "902959"
  },
  {
    "text": "the example ko is another example there are application specific uh web books also available if we all know HTO HTO is",
    "start": "902959",
    "end": "910880"
  },
  {
    "text": "having its own kind of a mutating controller to inject side and other things uh or you can write your custom",
    "start": "910880",
    "end": "916959"
  },
  {
    "text": "web books also uh suppose if you're writing some application you can write a custom web books also uh but when there",
    "start": "916959",
    "end": "922959"
  },
  {
    "text": "is a general purpose thing is available then you don't have to write a custom that is what we are going to see today one one of the",
    "start": "922959",
    "end": "929639"
  },
  {
    "text": "example and Kano is a open source general where Kano lands in this area",
    "start": "929639",
    "end": "934959"
  },
  {
    "text": "right Kano is a open-source uh general purpose admission controller it is a",
    "start": "934959",
    "end": "940000"
  },
  {
    "text": "YAML based policy engine it is CNCF in incubation I think recorded in 2022",
    "start": "940000",
    "end": "946880"
  },
  {
    "text": "uh it's a general purpose one so you can it's simple powerful YL based you don't",
    "start": "946880",
    "end": "952639"
  },
  {
    "text": "have to learn any language any specific language for example a reggo language",
    "start": "952639",
    "end": "958000"
  },
  {
    "text": "similar to for open and those it's all YAML based uh with KO it can do all the actions that it can",
    "start": "958000",
    "end": "965279"
  },
  {
    "text": "do valid it can validate your manifest it can mutate your manifest it can create man it can create resources it",
    "start": "965279",
    "end": "972240"
  },
  {
    "text": "can delete resources it can do all set of jobs for you it can talk to API server it can get some values it it's",
    "start": "972240",
    "end": "979440"
  },
  {
    "text": "simple and so powerful in a nutshell Okay it can read your metadata values from namespace it can talk to API server",
    "start": "979440",
    "end": "985120"
  },
  {
    "text": "it can get additional values so that you can use the values to mutate your",
    "start": "985120",
    "end": "991040"
  },
  {
    "text": "manifest let's see okay how this mutation validation is working with Kerno on a high level Ko is working",
    "start": "991160",
    "end": "998160"
  },
  {
    "text": "based on policies uh this is YML based one again you have a two kind of",
    "start": "998160",
    "end": "1003360"
  },
  {
    "text": "policies one is cluster level policy where you can apply at the cluster level you can create a rule that applicable",
    "start": "1003360",
    "end": "1009040"
  },
  {
    "text": "for all the name spaces then the next one is a namespace specific policy as name suggests so it is applicable only",
    "start": "1009040",
    "end": "1015759"
  },
  {
    "text": "within the namespace within each policy you have a set of rules like you can have multiple rules in one rule you can",
    "start": "1015759",
    "end": "1022160"
  },
  {
    "text": "say inject environment variable in the other rule you can say okay inject volumes you can take multiple actions",
    "start": "1022160",
    "end": "1028959"
  },
  {
    "text": "under a single policy you basically you can nest then then the match section or",
    "start": "1028959",
    "end": "1034000"
  },
  {
    "text": "exclude section comes uh it is where you define the targets hey I want the action",
    "start": "1034000",
    "end": "1039678"
  },
  {
    "text": "to go on a name space i want the action to go on a pod so you can so all the match all the targets you can see on the",
    "start": "1039679",
    "end": "1045918"
  },
  {
    "text": "right hand side you you can do pod level you can do it on a specific uh uh",
    "start": "1045919",
    "end": "1051440"
  },
  {
    "text": "objects like with the names labels annotation you have all these kind of options to set your targets in the",
    "start": "1051440",
    "end": "1057840"
  },
  {
    "text": "bottom section you have all the actions you can do validate you can do mutate you generate is nothing but create",
    "start": "1057840",
    "end": "1063679"
  },
  {
    "text": "resources then the last one is a verify images that is kind of all for beta uh basically you can verify your image",
    "start": "1063679",
    "end": "1071919"
  },
  {
    "text": "exams let's see how Kibano is implementing all these operations behind the scene let's see let's go through",
    "start": "1072200",
    "end": "1078400"
  },
  {
    "text": "some highle architecture this is a high level architecture behind Kubernau most of the",
    "start": "1078400",
    "end": "1084000"
  },
  {
    "text": "thing is uh internal to Kubernau i'll just go through three controllers three main controllers one is admission",
    "start": "1084000",
    "end": "1089919"
  },
  {
    "text": "controller which is responsible for your validation web books and uh mutation on the new resources the background",
    "start": "1089919",
    "end": "1096559"
  },
  {
    "text": "controller is for uh your create resources objects uh create resources operations and for mutate on the",
    "start": "1096559",
    "end": "1102640"
  },
  {
    "text": "existing objects then the then there is a cleanup controller that is responsible for your cleanup basically you can",
    "start": "1102640",
    "end": "1108320"
  },
  {
    "text": "delete resources also and user name spaces and those things other things are all very internal to keyo so like said",
    "start": "1108320",
    "end": "1116000"
  },
  {
    "text": "web controller set renew and everything how it handles the operation behind the scenes",
    "start": "1116000",
    "end": "1123160"
  },
  {
    "text": "uh wait u I have to say this we are not vendor we are not selling kon or we are",
    "start": "1124320",
    "end": "1129520"
  },
  {
    "text": "not promoting anything here we are also users this is a easy purpose easy general purpose admission web book",
    "start": "1129520",
    "end": "1135440"
  },
  {
    "text": "available there so we just want to see so you can all how easy and powerful it is to do the mutation sorry for the",
    "start": "1135440",
    "end": "1142559"
  },
  {
    "text": "picture I have requested my kid to draw a stop sign for me she was really making sure it is a stop sign yeah thank",
    "start": "1142559",
    "end": "1151600"
  },
  {
    "text": "you okay let's go through some example examples okay like common examples where everyone goes through this is a common",
    "start": "1151720",
    "end": "1158400"
  },
  {
    "text": "one in a enterprise and um regulated environments they don't allow the public",
    "start": "1158400",
    "end": "1164280"
  },
  {
    "text": "um like image repos right so then you have to mutate those manifest to reflect",
    "start": "1164280",
    "end": "1169520"
  },
  {
    "text": "into internal repos this is one of the sample policy that you can use you can match the image then you can replace it",
    "start": "1169520",
    "end": "1175600"
  },
  {
    "text": "with your internal artifactory we face this issue uh in one of the Qflow pipelines things where user don't set",
    "start": "1175600",
    "end": "1182160"
  },
  {
    "text": "the default image then it pulls it try to pull docker image from docker.io",
    "start": "1182160",
    "end": "1187360"
  },
  {
    "text": "which never works in our environments so we use this policy to affect okay do it",
    "start": "1187360",
    "end": "1192640"
  },
  {
    "text": "on the fly even user don't specify it you mutate it so that it don't break their",
    "start": "1192640",
    "end": "1198760"
  },
  {
    "text": "pipeline then this is another one we all go through right and I think same regulatory environments they want you to",
    "start": "1198760",
    "end": "1205039"
  },
  {
    "text": "explicitly define the security context who is what is the user ID for the",
    "start": "1205039",
    "end": "1210360"
  },
  {
    "text": "container set allow provisional escalation to false and various settings under the security context right you can",
    "start": "1210360",
    "end": "1216320"
  },
  {
    "text": "use as a example to set it actually I think one The example is I think we we were facing issues with Kib they were",
    "start": "1216320",
    "end": "1222840"
  },
  {
    "text": "creating suggestion deployment or something inside then where we were not able because basically they were hard",
    "start": "1222840",
    "end": "1228400"
  },
  {
    "text": "coding it we were not able to do it so our only solution either you fork it",
    "start": "1228400",
    "end": "1233600"
  },
  {
    "text": "modify it deploy it inside or we we you but in that case we used mutation web",
    "start": "1233600",
    "end": "1239280"
  },
  {
    "text": "book okay we can modify it on the fly in that way we avoided uh the forking as you can see um you have a",
    "start": "1239280",
    "end": "1247280"
  },
  {
    "text": "rules under like this is a single rule application we want to keep it simple that is why you see a single rule you",
    "start": "1247280",
    "end": "1252400"
  },
  {
    "text": "see a target okay it is targeting parts it is targeting a name space with a Qflow profile label on it then it sets a",
    "start": "1252400",
    "end": "1258960"
  },
  {
    "text": "precondition the image should be like within this one then finally you are making the",
    "start": "1258960",
    "end": "1265360"
  },
  {
    "text": "action the no is not just working based on native Kubernetes resources this is",
    "start": "1266280",
    "end": "1271440"
  },
  {
    "text": "an example of how you can extend the mutation to custom resources daskk is",
    "start": "1271440",
    "end": "1276480"
  },
  {
    "text": "one of the custom resource basically you can define any resources not just uh Kubernetes native resources you can use",
    "start": "1276480",
    "end": "1281919"
  },
  {
    "text": "custom resources also this is a problem where we f where this is another example",
    "start": "1281919",
    "end": "1287039"
  },
  {
    "text": "where you can enforce some behavior on user if you use uh in through this example what we did is we enforced your",
    "start": "1287039",
    "end": "1293840"
  },
  {
    "text": "maximum idle timeout is 1 hour in that way you're enforcing the user behavior",
    "start": "1293840",
    "end": "1299440"
  },
  {
    "text": "so all the objects will be deleted after like 1 hour of timeout in dash job that resulted in saving a lot of money for",
    "start": "1299440",
    "end": "1306799"
  },
  {
    "text": "us and this yeah so we all come across problems right so we run notebooks for",
    "start": "1307720",
    "end": "1314799"
  },
  {
    "text": "example we run longunning jobs like x boost the uh the part does not uh so",
    "start": "1314799",
    "end": "1322000"
  },
  {
    "text": "basically we kubernetes should not disrupt those parts correct like so if they disrupt those parts then whatever",
    "start": "1322000",
    "end": "1328240"
  },
  {
    "text": "job is running that will get disrupted it it cannot afford part disruption right in In the Kubernetes world the",
    "start": "1328240",
    "end": "1334320"
  },
  {
    "text": "carpenter or any cluster autoscaler that will try to reschedule the part in a better node to improve the node usage",
    "start": "1334320",
    "end": "1340159"
  },
  {
    "text": "right but these long runninging job parts they they cannot afford this kind of a part disruption you can use this",
    "start": "1340159",
    "end": "1346400"
  },
  {
    "text": "policy in example or we use this policy in example to protect those parts so we basically we did apply this carpenter",
    "start": "1346400",
    "end": "1352559"
  },
  {
    "text": "annotations on notebook parts exos parts so that our longunning jobs were",
    "start": "1352559",
    "end": "1358320"
  },
  {
    "text": "protected And this is an example of sidecar",
    "start": "1358320",
    "end": "1364559"
  },
  {
    "text": "containers uh so when you're developing a you don't have to develop like a custom webbook when you're developing",
    "start": "1364559",
    "end": "1369919"
  },
  {
    "text": "internal applications you can think of like a Qflow notebook is having its own admission web books is having its own",
    "start": "1369919",
    "end": "1376320"
  },
  {
    "text": "admission web books for them to inject like a sidecar or any any other operation suppose if you're developing",
    "start": "1376320",
    "end": "1381520"
  },
  {
    "text": "something internally I think if you all know like sidecar containers are very famous in Kubernetes it can abstract lot",
    "start": "1381520",
    "end": "1388480"
  },
  {
    "text": "of logic from main containers for example matrix collection orchestration storage injection you can",
    "start": "1388480",
    "end": "1394720"
  },
  {
    "text": "name anything you can achieve it through kubernetes sidecar containers you can use this policy in example how you can",
    "start": "1394720",
    "end": "1400799"
  },
  {
    "text": "inject sidecar containers into your workloads as you can see you're not just injecting the containers you can also",
    "start": "1400799",
    "end": "1406960"
  },
  {
    "text": "inject configurations along with it in this example you are injecting environment variable you are injecting",
    "start": "1406960",
    "end": "1412480"
  },
  {
    "text": "security contents you're injecting volumes you're injecting volumes basically you can draft everything or",
    "start": "1412480",
    "end": "1418480"
  },
  {
    "text": "you can dictate everything along with your sidecar containers that is why it is so powerful and in the morning in the",
    "start": "1418480",
    "end": "1424799"
  },
  {
    "text": "bottom section it says precondition so you can literally tell Kubernetes hey don't touch any existing objects okay do",
    "start": "1424799",
    "end": "1431440"
  },
  {
    "text": "it only on the new objects so you can define all those condition also here let's move on to some validation",
    "start": "1431440",
    "end": "1438880"
  },
  {
    "text": "policies in a multi-tenant environment there was always recommended we want to track which name space belong to which",
    "start": "1438880",
    "end": "1445440"
  },
  {
    "text": "team which project and all those things and we want to deny those objects which is not meeting the requirements you we",
    "start": "1445440",
    "end": "1452320"
  },
  {
    "text": "can use this policy in example to okay don't create name spaces or don't allow",
    "start": "1452320",
    "end": "1457360"
  },
  {
    "text": "namespaces which is not having a project name or t name in that way your kubernetes resources are compliant",
    "start": "1457360",
    "end": "1464279"
  },
  {
    "text": "enough in this example uh is a general practice right so the node scaling and",
    "start": "1464279",
    "end": "1470720"
  },
  {
    "text": "Everything like clust whether it is a cluster autoscaler or carpenter they all work based on your container requests it",
    "start": "1470720",
    "end": "1476400"
  },
  {
    "text": "is a general practice in kubernetes to keep your limits and request difference ratio within 20%age correct how do you",
    "start": "1476400",
    "end": "1483520"
  },
  {
    "text": "enforce it because some containers we may be creating some contains user may be creating some contains may come from",
    "start": "1483520",
    "end": "1489360"
  },
  {
    "text": "open source we can use this as a policy to enforce the behavior hey if you're not meeting this criteria if your",
    "start": "1489360",
    "end": "1495360"
  },
  {
    "text": "request limit ratio is not within that 20%age I'm going to deny the pod creation you can use this and we can use",
    "start": "1495360",
    "end": "1502000"
  },
  {
    "text": "this as an example and this is a example for a",
    "start": "1502000",
    "end": "1507919"
  },
  {
    "text": "create policy so we were writing rappers okay before we adapt Qo and all right as",
    "start": "1507919",
    "end": "1514720"
  },
  {
    "text": "we were writing rappers you may come across some situation the multi-tenant platform situation you want to give them",
    "start": "1514720",
    "end": "1521520"
  },
  {
    "text": "a basic volume like hey I'm giving you workspace volume work where you can put all your data inside or we will not let",
    "start": "1521520",
    "end": "1528080"
  },
  {
    "text": "you to create volumes because it is going to cost lot of money correct uh you can use this as a poly example to",
    "start": "1528080",
    "end": "1534400"
  },
  {
    "text": "create those default volumes inside user name spaces basically you can avoid wrapping to input those kind of a logics",
    "start": "1534400",
    "end": "1541039"
  },
  {
    "text": "uh with this kind of a",
    "start": "1541039",
    "end": "1544158"
  },
  {
    "text": "policy let's see some deletion examples correct u same story like in your dev",
    "start": "1547159",
    "end": "1552480"
  },
  {
    "text": "environment if people are create I'm I'm again sticking with the basic example uh in a dev environment people can create",
    "start": "1552480",
    "end": "1558880"
  },
  {
    "text": "volumes there will be like orphaned volumes and uh we don't want platform admins or you don't want platform admins",
    "start": "1558880",
    "end": "1564960"
  },
  {
    "text": "to go and manually check okay how old it is delete and all those things correct you can use this policy to an effect hey",
    "start": "1564960",
    "end": "1571679"
  },
  {
    "text": "if it is if the volume is 1 month old in a de environment you can automatically clean those volumes in that way you will",
    "start": "1571679",
    "end": "1577919"
  },
  {
    "text": "save lot of money in the deletion of stale resources you can achieve it in two ways one is through policy as we",
    "start": "1577919",
    "end": "1585039"
  },
  {
    "text": "seen like through YAML or you can just inject the label the",
    "start": "1585039",
    "end": "1590919"
  },
  {
    "text": "cleanup.qano.io/TL 30 days okay so the KO controller will watch for this label it will delete all your ST resources",
    "start": "1590919",
    "end": "1597480"
  },
  {
    "text": "automatically uh quick question how do you inject this labels automatically into like a user workloads mutation",
    "start": "1597480",
    "end": "1605039"
  },
  {
    "text": "correct so you can mutate this thing whenever somebody is creating a volume you can mutate or whenever and same can",
    "start": "1605039",
    "end": "1610960"
  },
  {
    "text": "be extend to your ingress also right you can delete the load balances you can save a lot of money you can extend this",
    "start": "1610960",
    "end": "1616480"
  },
  {
    "text": "label to any objects which users are creating in that way you delete the stale resources you do the garbage",
    "start": "1616480",
    "end": "1622080"
  },
  {
    "text": "collection you save lot of money i'm sorry for the picture again",
    "start": "1622080",
    "end": "1628559"
  },
  {
    "text": "i'm requesting my kid to do okay write a cloud sir draw a cloud do you need more",
    "start": "1628559",
    "end": "1634720"
  },
  {
    "text": "she draw the she drew the cloud she was making sure it is a cloud okay and whatever we have gone through it is very",
    "start": "1634720",
    "end": "1642000"
  },
  {
    "text": "basic examples okay yeah but Kibano is so powerful like you can directly read from Kubernetes API server you can read",
    "start": "1642000",
    "end": "1649360"
  },
  {
    "text": "from your namespace for some data like for example if you want to automatically propagate IM ro from a namespace to",
    "start": "1649360",
    "end": "1654960"
  },
  {
    "text": "underlying parts you can propagate or you want to read something else from AP server you can do there is",
    "start": "1654960",
    "end": "1661880"
  },
  {
    "text": "a repo here it can I don't know how what is the exact number but at least it",
    "start": "1661880",
    "end": "1667200"
  },
  {
    "text": "contains like hundreds of examples there uh you can take this as a like a",
    "start": "1667200",
    "end": "1672320"
  },
  {
    "text": "reference you can create your own policies to match the requirements to match your requirements",
    "start": "1672320",
    "end": "1679039"
  },
  {
    "text": "Let's see some of the pros right uh it is easy as hell you're not learning any code or anything you're directly you're",
    "start": "1679039",
    "end": "1685039"
  },
  {
    "text": "working on one level up or you're working directly on the manifest there is no maintenance button you don't have",
    "start": "1685039",
    "end": "1690399"
  },
  {
    "text": "to for you don't have to wrap individual reports you don't have to do anything of that kind and you're embracing the",
    "start": "1690399",
    "end": "1696880"
  },
  {
    "text": "common solution you're not working on the individual opensource project level you're working you're addressing cluster",
    "start": "1696880",
    "end": "1703520"
  },
  {
    "text": "as a whole or your platform as a whole and it comes also with like a little bit",
    "start": "1703520",
    "end": "1710240"
  },
  {
    "text": "uh mutation cons actually because it is mutating those manifest at the runtime",
    "start": "1710240",
    "end": "1715600"
  },
  {
    "text": "it comes with a computational overhead because it is intercepts every API request there is a it comes with its own",
    "start": "1715600",
    "end": "1722080"
  },
  {
    "text": "computational overhead but there are ways to uh address it okay it supports high KO supports high availability you",
    "start": "1722080",
    "end": "1728799"
  },
  {
    "text": "can do you can run like multiple replicas there is a busting capacity and all that you can increase please you can",
    "start": "1728799",
    "end": "1735120"
  },
  {
    "text": "refine your ki implementation based on the scal scale of your platform then the next one is a mutation",
    "start": "1735120",
    "end": "1742240"
  },
  {
    "text": "errors because the error if something happens the error is not reflected in application containers the error will be",
    "start": "1742240",
    "end": "1749200"
  },
  {
    "text": "refle reflected in given no controller so you have to rely on your platform admin to uh debug okay what has gone",
    "start": "1749200",
    "end": "1755600"
  },
  {
    "text": "wrong why this is not working so that is one of the cons but these are all compared to other cons uh these are",
    "start": "1755600",
    "end": "1761840"
  },
  {
    "text": "something we can encount we can solve it with with that I'll hand over it to Alex",
    "start": "1761840",
    "end": "1768320"
  },
  {
    "text": "to go through the final slides thank you everyone thank you Mory so here's a fancy table and the",
    "start": "1768320",
    "end": "1776399"
  },
  {
    "text": "main thing we want you to take away from this is first of all there's no one solution fits all problems your specific",
    "start": "1776399",
    "end": "1782480"
  },
  {
    "text": "use case might mandate one versus the other but also you probably want to move between different solutions so you might",
    "start": "1782480",
    "end": "1789440"
  },
  {
    "text": "start with a fork and then when there's less urgency work on a contribution when",
    "start": "1789440",
    "end": "1794559"
  },
  {
    "text": "that gets merged you can eliminate the fork and same applies for mutation you should periodically go through your uh",
    "start": "1794559",
    "end": "1801679"
  },
  {
    "text": "kavern policies and see if a those holes have been closed in the upstream dependencies or if you want to",
    "start": "1801679",
    "end": "1808480"
  },
  {
    "text": "contribute so that you no longer have to maintain that policy we created this decision tree to kind of",
    "start": "1808480",
    "end": "1814640"
  },
  {
    "text": "help you digest that last table and basically you know we'll walk through it",
    "start": "1814640",
    "end": "1820080"
  },
  {
    "text": "is the solution proprietary if the answer is yes then you can't contribute so that rules contribution out is the",
    "start": "1820080",
    "end": "1826559"
  },
  {
    "text": "solution urgent if the answer is yes then you can't contribute unless you personally know the maintainers and they",
    "start": "1826559",
    "end": "1832000"
  },
  {
    "text": "can expedite the merge and release for you so in either case you wind up at can you mutate if you can that's probably a",
    "start": "1832000",
    "end": "1839120"
  },
  {
    "text": "good solution uh just because the maintenance burden is so low and then if you can't mutate then you have to ask",
    "start": "1839120",
    "end": "1844799"
  },
  {
    "text": "yourself do you want to abstract the underlying dependency and if the answer is yes then go ahead and wrap and if the",
    "start": "1844799",
    "end": "1850559"
  },
  {
    "text": "answer is no then fork and again remember you're moving through these different leaf nodes",
    "start": "1850559",
    "end": "1856440"
  },
  {
    "text": "here so uh you know what we want you guys to take away is that it's",
    "start": "1856440",
    "end": "1863679"
  },
  {
    "text": "worthwhile um to close these gaps in the upstream instead of rebuilding stuff inhouse and there are short-term",
    "start": "1863679",
    "end": "1870240"
  },
  {
    "text": "solutions to help you avoid NIH as well and just some highle takeaways like I said avoid NIH like the plague",
    "start": "1870240",
    "end": "1877520"
  },
  {
    "text": "contribution is the ideal solution if you can make that work mutation is",
    "start": "1877520",
    "end": "1882679"
  },
  {
    "text": "awesome don't fork unless necessary and keep your fork small unfortunately there wasn't like a fork only emoji so you",
    "start": "1882679",
    "end": "1889600"
  },
  {
    "text": "just have to ignore that knife over there and only wrap if the cost is",
    "start": "1889600",
    "end": "1895080"
  },
  {
    "text": "justified so that concludes our talk i wanna I want to thank you guys for attending and I also want to thank our",
    "start": "1895080",
    "end": "1900880"
  },
  {
    "text": "esteemed but nevertheless unpaid illustrators we compensate them in other ways thanks everyone thank you everyone",
    "start": "1900880",
    "end": "1907679"
  },
  {
    "text": "thank you do we have time for",
    "start": "1907679",
    "end": "1914600"
  },
  {
    "text": "questions i I'll stay up here until somebody kicks us off we will step if there is any questions you can walk over",
    "start": "1914600",
    "end": "1921120"
  },
  {
    "text": "as well or you could come come over we're happy to talk to you thanks everyone thank you",
    "start": "1921120",
    "end": "1927440"
  }
]