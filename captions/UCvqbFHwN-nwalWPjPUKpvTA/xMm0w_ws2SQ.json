[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "welcome to this uh cncf webinar where i'll be talking about uh policy-based access control",
    "start": "320",
    "end": "7200"
  },
  {
    "text": "uh using open policy agents which is a cncf graduated project but first",
    "start": "7200",
    "end": "14719"
  },
  {
    "text": "who am i i'm anders and i work as a developer advocate at styra styra is the inventors of open policy",
    "start": "14719",
    "end": "22080"
  },
  {
    "text": "agents on the open policy agent project and one of the main contributors i have a",
    "start": "22080",
    "end": "29679"
  },
  {
    "text": "long background in software development and primarily in identity systems",
    "start": "29679",
    "end": "35920"
  },
  {
    "text": "for i've worked with opa for about two years now and when i don't i'm mainly",
    "start": "35920",
    "end": "42399"
  },
  {
    "text": "interested in cooking food and football and uh i'm on twitter i'm on github and",
    "start": "42399",
    "end": "49200"
  },
  {
    "text": "if you want to connect feel free to do so so policy is code and oppa what's",
    "start": "49200",
    "end": "57120"
  },
  {
    "start": "53000",
    "end": "146000"
  },
  {
    "text": "what's this challenge we're trying to tackle what's what is the problem we're trying to solve here",
    "start": "57120",
    "end": "63760"
  },
  {
    "text": "uh i think one common theme here is pretty much to manage policy in",
    "start": "63760",
    "end": "69439"
  },
  {
    "text": "increasingly distributed complex and heterogeneous systems",
    "start": "69439",
    "end": "74720"
  },
  {
    "text": "so we have all these application stacks programming languages frameworks",
    "start": "74720",
    "end": "81360"
  },
  {
    "text": "we have deployment platforms like kubernetes we have the underlying cloud and",
    "start": "81360",
    "end": "88640"
  },
  {
    "text": "infrastructure and we have data in all in all its forms",
    "start": "88640",
    "end": "94640"
  },
  {
    "text": "and all these systems they they kind of tend to deal with policy in their own way",
    "start": "94640",
    "end": "99680"
  },
  {
    "text": "using their own domain specific languages their own way of logging and so on so",
    "start": "99680",
    "end": "107119"
  },
  {
    "text": "what we're really trying to do here is to unify policy enforcement",
    "start": "107119",
    "end": "112479"
  },
  {
    "text": "and the way we deal like manage policy distribute policy and log policy decisions across this",
    "start": "112479",
    "end": "120320"
  },
  {
    "text": "whole stack and that's really what oppa is about there are",
    "start": "120320",
    "end": "125520"
  },
  {
    "text": "there are many other systems to you know work with policy if you check if you zoom into one of these uh",
    "start": "125520",
    "end": "132879"
  },
  {
    "text": "one whenever one of these icons or one of these systems you'll probably find ways of working with policy for just",
    "start": "132879",
    "end": "140400"
  },
  {
    "text": "that system but oppa is trying to to tackle the problem at large",
    "start": "140400",
    "end": "147200"
  },
  {
    "start": "146000",
    "end": "350000"
  },
  {
    "text": "so what is open it's an open source general purpose policy engine",
    "start": "147280",
    "end": "153040"
  },
  {
    "text": "and general purpose it kind of has to be in order to to fulfill this kind of promise of of",
    "start": "153040",
    "end": "161840"
  },
  {
    "text": "unifying policy management or unifying policy enforcement across this diverse set of technologies",
    "start": "161840",
    "end": "169760"
  },
  {
    "text": "and products you oppa offers a unified toolset and a framework",
    "start": "169760",
    "end": "175680"
  },
  {
    "text": "for working with policy across this whole stack opa decouples policy from application",
    "start": "175680",
    "end": "182840"
  },
  {
    "text": "logic meaning that you can extract policies from from your regular business logic or",
    "start": "182840",
    "end": "190560"
  },
  {
    "text": "application logic sort of like you'd extract",
    "start": "190560",
    "end": "195439"
  },
  {
    "text": "some of the data management to a database you'd extract policy to oppa so that's kind of what we",
    "start": "196400",
    "end": "203440"
  },
  {
    "text": "mean when we talk about decoupling oppa is a decision engine so it's it",
    "start": "203440",
    "end": "209040"
  },
  {
    "text": "returns decisions it doesn't really enforce them itself that's still up to your application",
    "start": "209040",
    "end": "216239"
  },
  {
    "text": "what's what uh it's meant to do with that response so if oppa says no this should not be allowed or this",
    "start": "216239",
    "end": "223519"
  },
  {
    "text": "should be denied it's still up to your application to to actually do something about it maybe",
    "start": "223519",
    "end": "229680"
  },
  {
    "text": "send back a 403 or whatever is appropriate in that context policies they're written",
    "start": "229680",
    "end": "237519"
  },
  {
    "text": "in a declarative language called rego which we will look into closer later today",
    "start": "237519",
    "end": "245840"
  },
  {
    "text": "since uh we're talking about a general purpose policy engine we're seeing use cases here ranging from",
    "start": "245840",
    "end": "252400"
  },
  {
    "text": "anything from kubernetes admission control micro service authorization infrastructure policies data source",
    "start": "252400",
    "end": "260160"
  },
  {
    "text": "filtering of attributes uh or ci cd like build and deployment",
    "start": "260160",
    "end": "265440"
  },
  {
    "text": "pipelines so there's policies all across the stack and oppa is really",
    "start": "265440",
    "end": "273199"
  },
  {
    "text": "oppa really fulfills this promise of of unifying policy enforcement across",
    "start": "273199",
    "end": "279520"
  },
  {
    "text": "the stack so oppa is a vibrant open source",
    "start": "279520",
    "end": "285120"
  },
  {
    "text": "community i think these numbers might even be a little dated by now because last i checked we had over 5 000",
    "start": "285120",
    "end": "292880"
  },
  {
    "text": "get up stars and even 4 000 slack user it doesn't really matter it's a big",
    "start": "292880",
    "end": "298160"
  },
  {
    "text": "and vibrant community and and not only do we have the open policy",
    "start": "298160",
    "end": "303759"
  },
  {
    "text": "agent project uh like proper but also there are many interesting uh projects",
    "start": "303759",
    "end": "312080"
  },
  {
    "text": "uh beneath that were included in in in the whole big oba product such as",
    "start": "312080",
    "end": "317919"
  },
  {
    "text": "conf test for testing like config doing conflict validation and having policies on on configuration files",
    "start": "317919",
    "end": "326720"
  },
  {
    "text": "there is gatekeeper oppa gatekeeper for doing admission control and there is uh",
    "start": "326720",
    "end": "333680"
  },
  {
    "text": "plugins for editors such as vs code and intellij",
    "start": "333680",
    "end": "339840"
  },
  {
    "text": "of course oppa is not just it's not just a hobbyist open source project but it's also been",
    "start": "339919",
    "end": "346720"
  },
  {
    "text": "used by by some of the largest companies in the world",
    "start": "346720",
    "end": "352000"
  },
  {
    "start": "350000",
    "end": "492000"
  },
  {
    "text": "and if that's not enough to convince you maybe this quote will the open policy agent project",
    "start": "352000",
    "end": "358000"
  },
  {
    "text": "is super dope i finally have a framework that helps me translate written security policies",
    "start": "358000",
    "end": "363759"
  },
  {
    "text": "into executable code for every layer of the stack so that kind of summarizes what oppa is",
    "start": "363759",
    "end": "370080"
  },
  {
    "text": "about and also why it's so useful",
    "start": "370080",
    "end": "375280"
  },
  {
    "text": "so oppadan how does it work how can how can opa service requests for",
    "start": "375440",
    "end": "382000"
  },
  {
    "text": "all these diverse uh services and all these diverse uh technologies and the answer behind",
    "start": "382000",
    "end": "390720"
  },
  {
    "text": "that is the policy decision model the way it works is that any service this is normally an",
    "start": "390720",
    "end": "397360"
  },
  {
    "text": "application or it could be an envoy proxy or it could be the kubernetes api server",
    "start": "397360",
    "end": "404880"
  },
  {
    "text": "or it could be a kafka and again so this is this is where the general purpose",
    "start": "404880",
    "end": "410880"
  },
  {
    "text": "uh model comes in any service anything that can serve as requests",
    "start": "410880",
    "end": "418319"
  },
  {
    "text": "uh reaches out when it's when it receives a request it reaches out to oppa and it asks for a",
    "start": "418319",
    "end": "425360"
  },
  {
    "text": "decision uh and most normally it's it will also provide",
    "start": "425360",
    "end": "430479"
  },
  {
    "text": "some data as part of that request and that data is just json so it says something i i have",
    "start": "430479",
    "end": "437039"
  },
  {
    "text": "this information here i have maybe the name of the user and some roles and here's the end points",
    "start": "437039",
    "end": "445280"
  },
  {
    "text": "that this user is trying to access should this request be allowed or not",
    "start": "445280",
    "end": "452800"
  },
  {
    "text": "and oppa will make a decision based on the policy which we have",
    "start": "452800",
    "end": "458319"
  },
  {
    "text": "provided oppa from before and based on that policy oppa will make",
    "start": "458319",
    "end": "464240"
  },
  {
    "text": "a decision and that decision is also just json uh so so that kind of that is the secret",
    "start": "464240",
    "end": "470879"
  },
  {
    "text": "sauce be behind how can how can oppa work with all these technologies because any product or product",
    "start": "470879",
    "end": "479039"
  },
  {
    "text": "or service uh capable of of sending http requests and parsing and",
    "start": "479039",
    "end": "485360"
  },
  {
    "text": "crafting json can uh can can be integrated with open",
    "start": "485360",
    "end": "493840"
  },
  {
    "start": "492000",
    "end": "844000"
  },
  {
    "text": "so as for deployment oppa itself it's a tiny little uh",
    "start": "494080",
    "end": "500240"
  },
  {
    "text": "self-contained binary so it's a single file you just you just run it and it",
    "start": "500240",
    "end": "505680"
  },
  {
    "text": "and it has all everything you need included and ideally you deploy",
    "start": "505680",
    "end": "512800"
  },
  {
    "text": "oppa as close to your service as possible uh this would normally mean that you run",
    "start": "512800",
    "end": "519760"
  },
  {
    "text": "it on on the same host as your application so on the same machine uh or maybe",
    "start": "519760",
    "end": "526560"
  },
  {
    "text": "if you're in if you're in the kubernetes world you'd run oppa as a sidecar which",
    "start": "526560",
    "end": "532080"
  },
  {
    "text": "essentially means the same thing you're you you'll run oppa in the same",
    "start": "532080",
    "end": "537120"
  },
  {
    "text": "uh on the same machine as your main application so when you query opa it's it's always a",
    "start": "537120",
    "end": "543040"
  },
  {
    "text": "local host and the benefit of of doing it this way rather than having like a big",
    "start": "543040",
    "end": "548959"
  },
  {
    "text": "giant central oppa somewhere it's of course that the distance between",
    "start": "548959",
    "end": "554240"
  },
  {
    "text": "your app and oppa is going to be as short as possible to keep the latency down",
    "start": "554240",
    "end": "560959"
  },
  {
    "text": "the way oppa or your application communicate with oppa is then to the rest api",
    "start": "560959",
    "end": "567360"
  },
  {
    "text": "again following this policy decision model but but if you have applications written",
    "start": "567360",
    "end": "573839"
  },
  {
    "text": "in go you can actually use oppa as a library as well",
    "start": "573839",
    "end": "579920"
  },
  {
    "text": "there's also integrations for envoy still and you can also compile",
    "start": "579920",
    "end": "587360"
  },
  {
    "text": "policies to webassembly so there's there's really a wide array of of deployment options as well but",
    "start": "587360",
    "end": "594720"
  },
  {
    "text": "the the one you'll see mostly deployed is is the the rest api",
    "start": "594720",
    "end": "602560"
  },
  {
    "text": "so policy offering that and how does that work and how how do we how do we provide policies to oppa",
    "start": "603120",
    "end": "610000"
  },
  {
    "text": "uh the way regal works is it's really a high-level policy language",
    "start": "610000",
    "end": "616320"
  },
  {
    "text": "uh and it declared a one at that and what does what does that mean it's essentially",
    "start": "616320",
    "end": "622000"
  },
  {
    "text": "like sequel where you rather than saying exactly how you want something done you you say",
    "start": "622000",
    "end": "627680"
  },
  {
    "text": "what you want done and then it's up to the policy engine to figure out the best way to to go about that",
    "start": "627680",
    "end": "636800"
  },
  {
    "text": "a policy is pretty much any number of rules so this this maps pretty much to what a",
    "start": "636880",
    "end": "643040"
  },
  {
    "text": "policy is also in in real life and the rule",
    "start": "643040",
    "end": "648959"
  },
  {
    "text": "is a rule commonly return something and that could be any any",
    "start": "648959",
    "end": "656800"
  },
  {
    "text": "value which is valid json so it could be a boolean like true or false whether are",
    "start": "656800",
    "end": "662959"
  },
  {
    "text": "you allowed or not true or false but it could also be more more complex objects like strings",
    "start": "662959",
    "end": "670079"
  },
  {
    "text": "or lists and objects pretty common pattern you'll see in policies it's of course that you'll",
    "start": "670079",
    "end": "675360"
  },
  {
    "text": "return maybe a reason why somebody is uh denied",
    "start": "675360",
    "end": "681120"
  },
  {
    "text": "i think there is almost 150 built-in functions today and rigo is not like a general purpose",
    "start": "681120",
    "end": "690160"
  },
  {
    "text": "programming language so these built-in functions they kind of tend to focus on things that are",
    "start": "690160",
    "end": "697920"
  },
  {
    "text": "useful in in the context of policy offerings so you'll see things like validating certificates",
    "start": "697920",
    "end": "705440"
  },
  {
    "text": "uh checking or verifying json web tokens date and time functions",
    "start": "705440",
    "end": "712560"
  },
  {
    "text": "ip address ranges things like that and and things around",
    "start": "712560",
    "end": "717600"
  },
  {
    "text": "identity and permissions that's really what we're working with here uh",
    "start": "717600",
    "end": "725519"
  },
  {
    "text": "for testing we open ships with a testing framework so you can actually test your policies in isolation",
    "start": "725519",
    "end": "734399"
  },
  {
    "text": "it's a very well documented project and so i think one of the better documented",
    "start": "734399",
    "end": "741680"
  },
  {
    "text": "projects i've i've had a benefit of working with",
    "start": "741680",
    "end": "747200"
  },
  {
    "text": "and there's also the the rego playground which we'll look into in a few minutes where you can",
    "start": "747200",
    "end": "753519"
  },
  {
    "text": "actually try policy offering without even downloading oppa",
    "start": "753519",
    "end": "760000"
  },
  {
    "text": "so policies they're only half of the story because normally a policy can't do much",
    "start": "760160",
    "end": "767920"
  },
  {
    "text": "without some knowledge about the world around it so if we if we for example say that",
    "start": "767920",
    "end": "775279"
  },
  {
    "text": "any user to access this endpoint the user needs to be an admin",
    "start": "775279",
    "end": "780480"
  },
  {
    "text": "then we also in order to make a policy decision we need to know the roles of the user and",
    "start": "780480",
    "end": "787760"
  },
  {
    "text": "that's what we call policy data and that data can be provided to oppa either as part of the",
    "start": "787760",
    "end": "795519"
  },
  {
    "text": "input like as part of the query when we ask oppa we can say i have a user here",
    "start": "795519",
    "end": "802240"
  },
  {
    "text": "uh and this user has these roles or this uh she or he allowed to",
    "start": "802240",
    "end": "810560"
  },
  {
    "text": "uh to access or to retrieve this data but we can also uh push data",
    "start": "810560",
    "end": "817600"
  },
  {
    "text": "into oppa beforehand so with the data is already available when we when we query opa for decisions",
    "start": "817600",
    "end": "824959"
  },
  {
    "text": "or we can use the bundle api to pull data from a remote endpoint",
    "start": "824959",
    "end": "830959"
  },
  {
    "text": "and finally there's also an http send function which is really just an",
    "start": "830959",
    "end": "836639"
  },
  {
    "text": "http client which we can use from inside our policies to to fetch data at policy evaluation",
    "start": "836639",
    "end": "843199"
  },
  {
    "text": "time okay so at this stage i'm actually gonna",
    "start": "843199",
    "end": "849120"
  },
  {
    "text": "show how simple policy offering uh might work and of course i'm gonna",
    "start": "849120",
    "end": "856639"
  },
  {
    "start": "850000",
    "end": "919000"
  },
  {
    "text": "use now the rego playground and uh i encourage anyone",
    "start": "856639",
    "end": "861839"
  },
  {
    "text": "watching to to do the same just see what it's see what it's uh how it",
    "start": "861839",
    "end": "868000"
  },
  {
    "text": "works and how we can work with policies so what we have here to our right",
    "start": "868000",
    "end": "875040"
  },
  {
    "text": "that is the input data which the in this case we're going to simulate a",
    "start": "875040",
    "end": "881360"
  },
  {
    "text": "rest api or or an api or a micro service something servicing",
    "start": "881360",
    "end": "887680"
  },
  {
    "text": "regular http requests so we have a path the user is trying to access a path in",
    "start": "887680",
    "end": "892800"
  },
  {
    "text": "this case it's the user's path and we can see that the the the request",
    "start": "892800",
    "end": "899600"
  },
  {
    "text": "method here is a get request and we also have some basic user",
    "start": "899600",
    "end": "905440"
  },
  {
    "text": "uh information in this case only the name of the user so our our policy then is going to",
    "start": "905440",
    "end": "913920"
  },
  {
    "text": "it's going to have to decide whether this should be allowed or not and yeah i get requests on the user's",
    "start": "913920",
    "end": "921199"
  },
  {
    "start": "919000",
    "end": "1134000"
  },
  {
    "text": "end point that seems that seems pretty fair like anyone can probably read",
    "start": "921199",
    "end": "926959"
  },
  {
    "text": "all the users uh given that it's not like any private information or so so so it seems",
    "start": "926959",
    "end": "934399"
  },
  {
    "text": "fair that we have a policy that that would allow us so again a policy",
    "start": "934399",
    "end": "940240"
  },
  {
    "text": "is just a series of rules so the first thing we're going to want to add here is a rule in this row",
    "start": "940240",
    "end": "947839"
  },
  {
    "text": "in this case i'm going to name this rule allow and again uh",
    "start": "947839",
    "end": "955120"
  },
  {
    "text": "oppa doesn't really care about your names so alau has no special meaning for oppa",
    "start": "955120",
    "end": "960959"
  },
  {
    "text": "it has a special meaning for us uh as people but to oppa it's just the name of the rule",
    "start": "960959",
    "end": "967360"
  },
  {
    "text": "and the anatomy of the rule is kind of like this so you have an you have a name of the rule",
    "start": "967360",
    "end": "972800"
  },
  {
    "text": "and you have a body and if all the conditions uh inside of the rule are true",
    "start": "972800",
    "end": "980880"
  },
  {
    "text": "so we do something like this one is equal to one and we evaluate this we're gonna see that",
    "start": "980880",
    "end": "986720"
  },
  {
    "text": "yes uh the the the alar rule is now true",
    "start": "986720",
    "end": "992000"
  },
  {
    "text": "and if we do something like this we're gonna see no it's no longer true it's no no longer",
    "start": "992000",
    "end": "998399"
  },
  {
    "text": "nothing so by default uh if a rule does not evaluate it's just undefined so if we want to",
    "start": "998399",
    "end": "1005120"
  },
  {
    "text": "change that we could do something like this we could say by that by default allow",
    "start": "1005120",
    "end": "1010560"
  },
  {
    "text": "should be equal to false and now if we query we'll see that this kind of fallback condition is triggered",
    "start": "1010560",
    "end": "1017680"
  },
  {
    "text": "and and we'll always get a response so if we change back here we're going to see that",
    "start": "1017680",
    "end": "1022880"
  },
  {
    "text": "it's true and remember i said that all conditions inside here need to be true so if we do something",
    "start": "1022880",
    "end": "1030798"
  },
  {
    "text": "like this we're back to false because this is",
    "start": "1030799",
    "end": "1036240"
  },
  {
    "text": "obviously not true uh so the way you can think of of this is pretty much like",
    "start": "1036240",
    "end": "1042160"
  },
  {
    "text": "if you're if you come from another programming language you could you would probably write it",
    "start": "1042160",
    "end": "1049120"
  },
  {
    "text": "like this and then you'd add after each line you'd add an add condition",
    "start": "1049120",
    "end": "1056799"
  },
  {
    "text": "so if if one line evaluates it will hop on to the next line evaluate",
    "start": "1056799",
    "end": "1062559"
  },
  {
    "text": "that and once uh once it doesn't the the condition is or the rule is just going to be",
    "start": "1062559",
    "end": "1068720"
  },
  {
    "text": "undefined unless of course as we did here uh we declared",
    "start": "1068720",
    "end": "1073919"
  },
  {
    "text": "a default value for a rule oh okay so this is just like silly",
    "start": "1073919",
    "end": "1079200"
  },
  {
    "text": "constants in use here so let's make something useful if we say",
    "start": "1079200",
    "end": "1084240"
  },
  {
    "text": "if the path and we're going to use the global input here which is of course the values",
    "start": "1084240",
    "end": "1090400"
  },
  {
    "text": "we see here to our right so with the input path sequel to",
    "start": "1090400",
    "end": "1098080"
  },
  {
    "text": "users yeah then then this should be this should be",
    "start": "1098080",
    "end": "1104720"
  },
  {
    "text": "uh true right because the input path is equal to user so we're going to say",
    "start": "1104720",
    "end": "1110160"
  },
  {
    "text": "that if that happens uh yeah we should allow that but of course in",
    "start": "1110160",
    "end": "1117840"
  },
  {
    "text": "this case the input method could be delete or put or something trying to",
    "start": "1117840",
    "end": "1123120"
  },
  {
    "text": "modify this users and we don't want that we don't want to allow that so we're",
    "start": "1123120",
    "end": "1129120"
  },
  {
    "text": "also going to say that if the input method is equal to get",
    "start": "1129120",
    "end": "1134240"
  },
  {
    "text": "and uh one thing we might want to change here is how how this can add there's uh",
    "start": "1135120",
    "end": "1142880"
  },
  {
    "text": "using a string like this we can't really know is this the application always gonna provide us with uh",
    "start": "1142880",
    "end": "1148960"
  },
  {
    "text": "like a leading slash like this or a trailing slash or so so uh what we",
    "start": "1148960",
    "end": "1155520"
  },
  {
    "text": "could do here is we could use oppa's built-ins the built-in functions again there's a",
    "start": "1155520",
    "end": "1163840"
  },
  {
    "text": "built-in functions so what we could do here is we could say that the path if we try and maybe trim",
    "start": "1163840",
    "end": "1171360"
  },
  {
    "text": "these these uh we're gonna say and we're gonna trim the",
    "start": "1171360",
    "end": "1176840"
  },
  {
    "text": "input path from slashes and if we evaluate this",
    "start": "1176840",
    "end": "1182960"
  },
  {
    "text": "now we should see that both the path and the allow rule is evaluated and we can see that yes",
    "start": "1182960",
    "end": "1189840"
  },
  {
    "text": "indeed the slashes were trimmed",
    "start": "1189840",
    "end": "1195200"
  },
  {
    "text": "and sorry about that",
    "start": "1195200",
    "end": "1201039"
  },
  {
    "text": "and what we might want to do now is rather than working with strings because if we have more names here later",
    "start": "1201280",
    "end": "1208320"
  },
  {
    "text": "like somebody's trying to access this we're going to need to do something like regex",
    "start": "1208320",
    "end": "1214480"
  },
  {
    "text": "or so so what we'd rather want to do here for the path is that we'd rather want it",
    "start": "1214480",
    "end": "1221360"
  },
  {
    "text": "we what we really want to do here is we want to split that we're going to split that on",
    "start": "1221360",
    "end": "1228080"
  },
  {
    "text": "slash so so instead of a string we'll have an array to work with",
    "start": "1228080",
    "end": "1233200"
  },
  {
    "text": "i i think this is often preferable and this kind of shows how we can work",
    "start": "1233200",
    "end": "1238960"
  },
  {
    "text": "with uh the built-in functions of opa and again if you check that the docs you'll see there's a reference",
    "start": "1238960",
    "end": "1247520"
  },
  {
    "text": "for each of these or each of these built-ins are listed there",
    "start": "1247520",
    "end": "1253600"
  },
  {
    "text": "so okay so now we have a path to work with and of course we'd rather want to work",
    "start": "1253600",
    "end": "1258720"
  },
  {
    "start": "1254000",
    "end": "1520000"
  },
  {
    "text": "with this new path that we have so we're gonna do so if the first or if the",
    "start": "1258720",
    "end": "1266720"
  },
  {
    "text": "if the first path component because in this case we don't really care as long as the the",
    "start": "1266720",
    "end": "1272159"
  },
  {
    "text": "method is get this could be any user this could be anders or this could be",
    "start": "1272159",
    "end": "1277760"
  },
  {
    "text": "jane uh if if someone is trying to read a user we should still allow it",
    "start": "1277760",
    "end": "1285120"
  },
  {
    "text": "so we're just going to say that if the first path component is equal to users and the method is get we're going to",
    "start": "1285120",
    "end": "1291600"
  },
  {
    "text": "allow that request and let's see if that works yeah we can",
    "start": "1291600",
    "end": "1297039"
  },
  {
    "text": "see that allow is still true here if we change something here like let's say",
    "start": "1297039",
    "end": "1303600"
  },
  {
    "text": "delete we should see that now allow is no longer true so this is connect how we work with uh",
    "start": "1303600",
    "end": "1310960"
  },
  {
    "text": "decisions in oppa and maybe we'd want to",
    "start": "1310960",
    "end": "1316240"
  },
  {
    "text": "add another condition maybe we would want to allow some form of modification maybe",
    "start": "1316240",
    "end": "1324559"
  },
  {
    "text": "a user should be able to modify their own details but obviously not",
    "start": "1324640",
    "end": "1331520"
  },
  {
    "text": "of any other users so how would we add another condition the easy way to do this",
    "start": "1331520",
    "end": "1338400"
  },
  {
    "text": "is simply just to add another rule and we can have as many rules as we want",
    "start": "1338400",
    "end": "1344080"
  },
  {
    "text": "with the same name and the way it works is that if any of these rules",
    "start": "1344080",
    "end": "1349440"
  },
  {
    "text": "are true then we say that the rule named allow is true so while the",
    "start": "1349440",
    "end": "1355760"
  },
  {
    "text": "conditions inside of the rule are ended together the rules themselves are ored so if one",
    "start": "1355760",
    "end": "1363919"
  },
  {
    "text": "of them is true the the result or the decision is true and of course uh",
    "start": "1363919",
    "end": "1372240"
  },
  {
    "text": "again rules don't have they don't necessarily have to be true or false but they can return any",
    "start": "1372240",
    "end": "1378240"
  },
  {
    "text": "value but for for this example we're just gonna go with a boolean response",
    "start": "1378240",
    "end": "1384080"
  },
  {
    "text": "so if we say here that the first path component is users i think we can stay with that",
    "start": "1384080",
    "end": "1391840"
  },
  {
    "text": "and the next path component here that's the name of",
    "start": "1391840",
    "end": "1397280"
  },
  {
    "text": "the user we're following like rest conventions here so if the next path component is equal",
    "start": "1397280",
    "end": "1405360"
  },
  {
    "text": "to the name here which is the username so let's say input",
    "start": "1405360",
    "end": "1413760"
  },
  {
    "text": "user name and the input method is equal to put",
    "start": "1413760",
    "end": "1421360"
  },
  {
    "text": "someone is trying to modify their own user we should allow that so delete that should still not work",
    "start": "1421360",
    "end": "1429360"
  },
  {
    "text": "if we change that to put it should work uh and it does so",
    "start": "1429360",
    "end": "1437120"
  },
  {
    "text": "uh so we we've kind of have a a way of in just 16 lines of rego",
    "start": "1437120",
    "end": "1444400"
  },
  {
    "text": "we have a policy that allows any user to read",
    "start": "1444400",
    "end": "1449760"
  },
  {
    "text": "from any endpoint or from any user endpoint on the users kind of base path but",
    "start": "1449760",
    "end": "1457600"
  },
  {
    "text": "users may only modify their own user so if we change here to jane we can see that",
    "start": "1457600",
    "end": "1464480"
  },
  {
    "text": "anders can no longer modify this user because that's not who i am",
    "start": "1464480",
    "end": "1471760"
  },
  {
    "text": "so so yeah 16 lines are rego and it's a fairly useful policy",
    "start": "1471760",
    "end": "1478080"
  },
  {
    "text": "so in not in kind of a pretty compact uh",
    "start": "1478080",
    "end": "1484720"
  },
  {
    "text": "we we've managed to formulate a policy which uh where we kind of decouple these",
    "start": "1485679",
    "end": "1493279"
  },
  {
    "text": "decisions from from our application logic so our applications they would not need",
    "start": "1493279",
    "end": "1499120"
  },
  {
    "text": "to know about uh these these uh",
    "start": "1499120",
    "end": "1504240"
  },
  {
    "text": "this logic who gets to access what in your in your business logic you can focus on uh actually servicing the request and",
    "start": "1504240",
    "end": "1512480"
  },
  {
    "text": "oppa will focus on on actually on enforce or making these",
    "start": "1512480",
    "end": "1518960"
  },
  {
    "text": "policy decisions okay so back to",
    "start": "1518960",
    "end": "1526240"
  },
  {
    "start": "1520000",
    "end": "1908000"
  },
  {
    "text": "the presentation then uh so we saw what we saw there was kind of an",
    "start": "1526720",
    "end": "1532720"
  },
  {
    "text": "example of how we could write policies for for an application a microservice or an api",
    "start": "1532720",
    "end": "1540159"
  },
  {
    "text": "another common use case is of course kubernetes",
    "start": "1540159",
    "end": "1545120"
  },
  {
    "text": "and how does that work then the way the kubernetes api works is that whenever",
    "start": "1545200",
    "end": "1552480"
  },
  {
    "text": "a resource is sent to be persistent meaning if you try and modify one if you",
    "start": "1552480",
    "end": "1558320"
  },
  {
    "text": "create something new uh so in this example here if we do cube cdl apply and we'll try and deploy a new",
    "start": "1558320",
    "end": "1565440"
  },
  {
    "text": "application that request is going to be it's going to have to pass a series of",
    "start": "1565440",
    "end": "1572559"
  },
  {
    "text": "modules and these modules are authentication they're authorization",
    "start": "1572559",
    "end": "1578159"
  },
  {
    "text": "it's a mutating admission controller it's a validating admission controller there's even more modules involved but",
    "start": "1578159",
    "end": "1584880"
  },
  {
    "text": "kind of try and keep it uh understandable here",
    "start": "1584880",
    "end": "1590960"
  },
  {
    "text": "and additionally all these modules are shaneable so it's not just one but there could be",
    "start": "1590960",
    "end": "1596960"
  },
  {
    "text": "many authorizers involved and there could be many admission controllers involved",
    "start": "1596960",
    "end": "1602720"
  },
  {
    "text": "and once uh the request is passed all these modules we say it's finally persisted to",
    "start": "1602720",
    "end": "1610000"
  },
  {
    "text": "xcd which is the database of kubernetes",
    "start": "1610000",
    "end": "1614960"
  },
  {
    "text": "there's a whole bunch of built-in modules in all these steps some of them are allowed by default or",
    "start": "1615200",
    "end": "1621600"
  },
  {
    "text": "enabled by default and and some are not uh but what's interesting for us here is",
    "start": "1621600",
    "end": "1628640"
  },
  {
    "text": "of course uh the web hook because for what a web hook is it's really an",
    "start": "1628640",
    "end": "1636080"
  },
  {
    "text": "http request and in the case of kubernetes it's json and remember that's that's exactly what",
    "start": "1636080",
    "end": "1643760"
  },
  {
    "text": "oppa is meant to do it services uh requests all over or json requests",
    "start": "1643760",
    "end": "1651440"
  },
  {
    "text": "sent over http so oppa is a perfect fit for authorization mutating admission",
    "start": "1651440",
    "end": "1657840"
  },
  {
    "text": "controller or validating admission controller oppa of course doesn't do authentication",
    "start": "1657840",
    "end": "1663520"
  },
  {
    "text": "but for these other three scenarios oppa is a great fit",
    "start": "1663520",
    "end": "1670080"
  },
  {
    "text": "so let's zoom in here on the on the validating one and uh why why the validating one",
    "start": "1670080",
    "end": "1678080"
  },
  {
    "text": "because it's by far the most popular module to extend the and the reason for for that is that",
    "start": "1678080",
    "end": "1685840"
  },
  {
    "text": "it allows us to build policy-based guardrails around our clusters",
    "start": "1685840",
    "end": "1690960"
  },
  {
    "text": "so we can we can we can build rules to enforce things like forbid",
    "start": "1690960",
    "end": "1698320"
  },
  {
    "text": "any uh container to download an image from an",
    "start": "1698320",
    "end": "1704000"
  },
  {
    "text": "external docker industry we only want to allow the internal approved company registry",
    "start": "1704000",
    "end": "1710880"
  },
  {
    "text": "for example uh all resources deployed in our cluster",
    "start": "1710880",
    "end": "1716559"
  },
  {
    "text": "must have uh appropriate labels so maybe we want to",
    "start": "1716559",
    "end": "1721600"
  },
  {
    "text": "distinguish team belongings cost centers our office department",
    "start": "1721600",
    "end": "1728559"
  },
  {
    "text": "organizational policies and so on ingress and host path uniqueness another",
    "start": "1728559",
    "end": "1735520"
  },
  {
    "text": "common use case where we want to check that if we deploy this ingress it's not going to",
    "start": "1735520",
    "end": "1741760"
  },
  {
    "text": "be a conflict with with anything else uh maybe you want to",
    "start": "1741760",
    "end": "1746880"
  },
  {
    "text": "enforce tls deny certain attributes uh have certain resource allocation",
    "start": "1746880",
    "end": "1754880"
  },
  {
    "text": "limits and so on so there's there's basically no end to",
    "start": "1754880",
    "end": "1760399"
  },
  {
    "text": "the type of policies you can write for for an invalidating admission controller",
    "start": "1760399",
    "end": "1766240"
  },
  {
    "text": "and and this of course allows us to build these guardrails that we mentioned before",
    "start": "1766240",
    "end": "1773840"
  },
  {
    "text": "the way it works is essentially the same as the rest api policy we saw",
    "start": "1773919",
    "end": "1780480"
  },
  {
    "text": "before the order here is a a bit uh randomized but the input to the left",
    "start": "1780480",
    "end": "1786880"
  },
  {
    "text": "that was obviously what was up to the right before we can see it's still just json in this case",
    "start": "1786880",
    "end": "1792880"
  },
  {
    "text": "it's a port being submitted for admission control and in the middle we",
    "start": "1792880",
    "end": "1799440"
  },
  {
    "text": "see the actual policy and it's a very simple policy it just checks if there's not",
    "start": "1799440",
    "end": "1805279"
  },
  {
    "text": "an input request object metadata labels cost center attributes then this rule the deny rule will return",
    "start": "1805279",
    "end": "1813840"
  },
  {
    "text": "a string or we will add a string to the set and in this case it will just",
    "start": "1813840",
    "end": "1820480"
  },
  {
    "text": "say that every resource must have a cost center label",
    "start": "1820480",
    "end": "1825520"
  },
  {
    "text": "so uh before we finish",
    "start": "1827279",
    "end": "1833600"
  },
  {
    "text": "just a quick word on opus management apis because once you kind of pass the",
    "start": "1833600",
    "end": "1841039"
  },
  {
    "text": "initial stage of having deployed a couple of policies a couple of opas",
    "start": "1841039",
    "end": "1846559"
  },
  {
    "text": "servicing your apis or your microservices or kubernetes you're going to want to",
    "start": "1846559",
    "end": "1853279"
  },
  {
    "text": "manage oppa at scale and for doing that there's a couple of",
    "start": "1853279",
    "end": "1858480"
  },
  {
    "text": "api endpoints which oppa implements or which oppa reaches out to",
    "start": "1858480",
    "end": "1864320"
  },
  {
    "text": "for for management features like bundles fetching bundles so this is",
    "start": "1864320",
    "end": "1869519"
  },
  {
    "text": "really for fetching policy and data from a centralized location",
    "start": "1869519",
    "end": "1874960"
  },
  {
    "text": "the decision log api allows oppa to report back on any decisions",
    "start": "1874960",
    "end": "1881519"
  },
  {
    "text": "made in uh in its uh yeah during its operation so any",
    "start": "1881519",
    "end": "1887840"
  },
  {
    "text": "decision ever made is reported back so we can use that for auditing or for",
    "start": "1887840",
    "end": "1893360"
  },
  {
    "text": "improving the quality of our policies and there's also a status api for like",
    "start": "1893360",
    "end": "1899840"
  },
  {
    "text": "health and health check and status updates and a discovery api for uh configuration",
    "start": "1899840",
    "end": "1909120"
  },
  {
    "start": "1908000",
    "end": "2055000"
  },
  {
    "text": "so where do you start my suggestion is usually just start small maybe try",
    "start": "1909279",
    "end": "1915279"
  },
  {
    "text": "the the rego play around browse the open docs get a feel for the basics and and how",
    "start": "1915279",
    "end": "1921440"
  },
  {
    "text": "everything works and once you kind of once you grasp the basics you can start",
    "start": "1921440",
    "end": "1928640"
  },
  {
    "text": "looking into uh the applications that you've worked with previously",
    "start": "1928640",
    "end": "1934559"
  },
  {
    "text": "and again you can't really choose whether to work with policy or not like policy is pretty much everywhere but but what you",
    "start": "1934559",
    "end": "1942399"
  },
  {
    "text": "can try and do is identify where do we have policy today",
    "start": "1942399",
    "end": "1948240"
  },
  {
    "text": "and once you've done that you can start to slowly delegate some of that responsibility to",
    "start": "1948240",
    "end": "1954320"
  },
  {
    "text": "oppa and again you you can start small you don't need to rewrite your whole",
    "start": "1954320",
    "end": "1960480"
  },
  {
    "text": "authorization logic or your whole policy system but maybe start with a single",
    "start": "1960480",
    "end": "1966640"
  },
  {
    "text": "endpoint or a single role like maybe delegate the admin check to oppa deploy and",
    "start": "1966640",
    "end": "1974320"
  },
  {
    "text": "build experience from that and once you're done with that you can start scaling up you can look",
    "start": "1974320",
    "end": "1981440"
  },
  {
    "text": "into things like policy management decision logging",
    "start": "1981440",
    "end": "1986640"
  },
  {
    "text": "bundle server these kind of management features that i mentioned",
    "start": "1986640",
    "end": "1992080"
  },
  {
    "text": "and for learning the styra academy is a great resource it's a free resource",
    "start": "1992080",
    "end": "1999120"
  },
  {
    "text": "as well where you have like video tutorials followed by quiz style tests so i can",
    "start": "1999120",
    "end": "2005760"
  },
  {
    "text": "hardly recommend that for more management features there's the styrodas",
    "start": "2005760",
    "end": "2011600"
  },
  {
    "text": "which also has a free edition which you can try out and finally join the opa",
    "start": "2011600",
    "end": "2019440"
  },
  {
    "text": "slack community uh we're over 4 000 members already and it's a great way to ask questions",
    "start": "2019440",
    "end": "2026960"
  },
  {
    "text": "see what others are asking uh what what are the interesting projects brewing in the oppa community",
    "start": "2026960",
    "end": "2034080"
  },
  {
    "text": "and just like general good place to hang out so uh do join us there",
    "start": "2034080",
    "end": "2041840"
  },
  {
    "text": "and with that i say thank you and i hope you enjoyed this webinar and that you",
    "start": "2041840",
    "end": "2047760"
  },
  {
    "text": "learned something about policy and",
    "start": "2047760",
    "end": "2052878"
  },
  {
    "text": "open policy agent so thanks",
    "start": "2052879",
    "end": "2057760"
  }
]