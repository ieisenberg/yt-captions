[
  {
    "text": "welcome to this talk about building",
    "start": "420",
    "end": "2879"
  },
  {
    "text": "separate things thanks to God fuzzing",
    "start": "2879",
    "end": "7279"
  },
  {
    "text": "my name is Jeremy I'm an application",
    "start": "7980",
    "end": "10380"
  },
  {
    "text": "security engineer at grafana Labs I",
    "start": "10380",
    "end": "13200"
  },
  {
    "text": "joined six months ago I used to be a",
    "start": "13200",
    "end": "16260"
  },
  {
    "text": "back-end developer a long time ago",
    "start": "16260",
    "end": "18080"
  },
  {
    "text": "mostly coding for security products in",
    "start": "18080",
    "end": "21420"
  },
  {
    "text": "Java and some.net go is not my main",
    "start": "21420",
    "end": "24900"
  },
  {
    "text": "language but I like the design decisions",
    "start": "24900",
    "end": "28260"
  },
  {
    "text": "they made from a security point of view",
    "start": "28260",
    "end": "31099"
  },
  {
    "text": "uh started in graphernal labs in March",
    "start": "31099",
    "end": "34620"
  },
  {
    "text": "2022 so that's further new",
    "start": "34620",
    "end": "37160"
  },
  {
    "text": "uh so we are on the beginning of the",
    "start": "37160",
    "end": "39780"
  },
  {
    "text": "security Journey but because grafana lab",
    "start": "39780",
    "end": "43020"
  },
  {
    "text": "is all about transparency there are",
    "start": "43020",
    "end": "45120"
  },
  {
    "text": "things we already wanted to share",
    "start": "45120",
    "end": "48120"
  },
  {
    "text": "and you will see in their presentation",
    "start": "48120",
    "end": "50219"
  },
  {
    "text": "there are many links they point to",
    "start": "50219",
    "end": "51960"
  },
  {
    "text": "GitHub repo that are public and all the",
    "start": "51960",
    "end": "54660"
  },
  {
    "text": "PRS and all that so you can",
    "start": "54660",
    "end": "58199"
  },
  {
    "text": "follow up on that and see that it's real",
    "start": "58199",
    "end": "61079"
  },
  {
    "text": "data",
    "start": "61079",
    "end": "62420"
  },
  {
    "text": "uh what we will start doing is like even",
    "start": "62420",
    "end": "65820"
  },
  {
    "text": "though we're as good secure defaults",
    "start": "65820",
    "end": "69360"
  },
  {
    "text": "we'll see that it's still possible to",
    "start": "69360",
    "end": "72060"
  },
  {
    "text": "server password",
    "start": "72060",
    "end": "74159"
  },
  {
    "text": "and we talk about the fuzzing trying to",
    "start": "74159",
    "end": "76560"
  },
  {
    "text": "and I don't know we can help like",
    "start": "76560",
    "end": "78799"
  },
  {
    "text": "detecting past reversal then we will try",
    "start": "78799",
    "end": "83159"
  },
  {
    "text": "to First Mark complex",
    "start": "83159",
    "end": "85259"
  },
  {
    "text": "see that",
    "start": "85259",
    "end": "86700"
  },
  {
    "text": "writing predicates that are needed for",
    "start": "86700",
    "end": "89040"
  },
  {
    "text": "filling",
    "start": "89040",
    "end": "90240"
  },
  {
    "text": "can",
    "start": "90240",
    "end": "91700"
  },
  {
    "text": "be that easy",
    "start": "91700",
    "end": "93860"
  },
  {
    "text": "and then we'll follow up with next steps",
    "start": "93860",
    "end": "97380"
  },
  {
    "text": "and like once you have good feeling what",
    "start": "97380",
    "end": "101159"
  },
  {
    "text": "should you do next to like the more",
    "start": "101159",
    "end": "103200"
  },
  {
    "text": "value out of it",
    "start": "103200",
    "end": "106159"
  },
  {
    "text": "so",
    "start": "106799",
    "end": "108299"
  },
  {
    "text": "because",
    "start": "108299",
    "end": "109500"
  },
  {
    "text": "girlfriend I love is all about",
    "start": "109500",
    "end": "111540"
  },
  {
    "text": "transparency we share first or first",
    "start": "111540",
    "end": "114299"
  },
  {
    "text": "zero day that took place in December",
    "start": "114299",
    "end": "116700"
  },
  {
    "text": "2021 so I was not yet an employee but I",
    "start": "116700",
    "end": "120780"
  },
  {
    "text": "discovered a lot about the context",
    "start": "120780",
    "end": "122579"
  },
  {
    "text": "thanks to public blog posts and then",
    "start": "122579",
    "end": "124920"
  },
  {
    "text": "public purpose one of the issue was",
    "start": "124920",
    "end": "127380"
  },
  {
    "text": "fixed by that time the security team was",
    "start": "127380",
    "end": "131160"
  },
  {
    "text": "only one member the size of Thomas Owen",
    "start": "131160",
    "end": "134660"
  },
  {
    "text": "uh",
    "start": "134660",
    "end": "136620"
  },
  {
    "text": "and basically what happened a security",
    "start": "136620",
    "end": "138780"
  },
  {
    "text": "researcher responsibilities closed",
    "start": "138780",
    "end": "141239"
  },
  {
    "text": "across traversal in the code of grafana",
    "start": "141239",
    "end": "143580"
  },
  {
    "text": "on December the 2nd",
    "start": "143580",
    "end": "145620"
  },
  {
    "text": "it was rather bad it's called as high",
    "start": "145620",
    "end": "147660"
  },
  {
    "text": "because it allowed to basically download",
    "start": "147660",
    "end": "151080"
  },
  {
    "text": "uh",
    "start": "151080",
    "end": "152940"
  },
  {
    "text": "any files running as a graph funnel",
    "start": "152940",
    "end": "155400"
  },
  {
    "text": "process from the server",
    "start": "155400",
    "end": "157379"
  },
  {
    "text": "and out of excitement this researcher",
    "start": "157379",
    "end": "160200"
  },
  {
    "text": "tweeted that he found a press Traverse",
    "start": "160200",
    "end": "162300"
  },
  {
    "text": "wall another not the specific place in",
    "start": "162300",
    "end": "165300"
  },
  {
    "text": "the source code that was vulnerable",
    "start": "165300",
    "end": "166680"
  },
  {
    "text": "reduce that he found one",
    "start": "166680",
    "end": "168599"
  },
  {
    "text": "and a few days later we identified on",
    "start": "168599",
    "end": "171540"
  },
  {
    "text": "December the 7th that well this",
    "start": "171540",
    "end": "174120"
  },
  {
    "text": "vulnerability was actively exploited",
    "start": "174120",
    "end": "176340"
  },
  {
    "text": "making it to zero day service other",
    "start": "176340",
    "end": "179220"
  },
  {
    "text": "researchers when they are there but hey",
    "start": "179220",
    "end": "181379"
  },
  {
    "text": "there's a past traversal in this code",
    "start": "181379",
    "end": "183120"
  },
  {
    "text": "they could find it because they they",
    "start": "183120",
    "end": "186360"
  },
  {
    "text": "knew that if they look for something",
    "start": "186360",
    "end": "188040"
  },
  {
    "text": "they will find it",
    "start": "188040",
    "end": "189560"
  },
  {
    "text": "it was also fixed on December 7th uh the",
    "start": "189560",
    "end": "195540"
  },
  {
    "text": "question like you may be asking now is",
    "start": "195540",
    "end": "198239"
  },
  {
    "text": "yeah but even go supposed",
    "start": "198239",
    "end": "200700"
  },
  {
    "text": "to have a really good standard library",
    "start": "200700",
    "end": "203760"
  },
  {
    "text": "with safe defaults and then",
    "start": "203760",
    "end": "206819"
  },
  {
    "text": "why did it happen",
    "start": "206819",
    "end": "209220"
  },
  {
    "text": "well in fact the",
    "start": "209220",
    "end": "212640"
  },
  {
    "text": "method fivepas.pin is tricky let's see",
    "start": "212640",
    "end": "216540"
  },
  {
    "text": "why if you just tweet the documentation",
    "start": "216540",
    "end": "219420"
  },
  {
    "text": "quickly you just like somewhere with the",
    "start": "219420",
    "end": "221760"
  },
  {
    "text": "first sentence and say yeah it cleans a",
    "start": "221760",
    "end": "224340"
  },
  {
    "text": "clean returns a shortcuts fast",
    "start": "224340",
    "end": "225900"
  },
  {
    "text": "equivalent to pass so it looks like a",
    "start": "225900",
    "end": "228360"
  },
  {
    "text": "really good candidate",
    "start": "228360",
    "end": "230040"
  },
  {
    "text": "to filter any side paths you could",
    "start": "230040",
    "end": "234000"
  },
  {
    "text": "receive as input and to get the camera",
    "start": "234000",
    "end": "236340"
  },
  {
    "text": "nickel from out of it and then somehow",
    "start": "236340",
    "end": "238379"
  },
  {
    "text": "You can conclude that you will be saved",
    "start": "238379",
    "end": "240299"
  },
  {
    "text": "but if you read in details and I don't",
    "start": "240299",
    "end": "242519"
  },
  {
    "text": "ask you to do it now because it's it's",
    "start": "242519",
    "end": "244379"
  },
  {
    "text": "kind of really confusing there are",
    "start": "244379",
    "end": "247500"
  },
  {
    "text": "several steps and it's not easy to",
    "start": "247500",
    "end": "249959"
  },
  {
    "text": "understand each of those and all that",
    "start": "249959",
    "end": "252060"
  },
  {
    "text": "and",
    "start": "252060",
    "end": "253319"
  },
  {
    "text": "that I'll try to make a recap it's just",
    "start": "253319",
    "end": "256799"
  },
  {
    "text": "like",
    "start": "256799",
    "end": "257699"
  },
  {
    "text": "if you just use Simple wall",
    "start": "257699",
    "end": "260959"
  },
  {
    "text": "papers.fin will remove any dot sequence",
    "start": "260959",
    "end": "263699"
  },
  {
    "text": "which has a sequence that are dangerous",
    "start": "263699",
    "end": "266160"
  },
  {
    "text": "from the past 12 also point of view",
    "start": "266160",
    "end": "267840"
  },
  {
    "text": "because of the other one that can allow",
    "start": "267840",
    "end": "270060"
  },
  {
    "text": "you to",
    "start": "270060",
    "end": "271259"
  },
  {
    "text": "jump to uh top level folder so it will",
    "start": "271259",
    "end": "275220"
  },
  {
    "text": "remove all of the all those those",
    "start": "275220",
    "end": "277020"
  },
  {
    "text": "sequence in all the Inner Elements and",
    "start": "277020",
    "end": "279360"
  },
  {
    "text": "also on the first element if it starts",
    "start": "279360",
    "end": "281280"
  },
  {
    "text": "with the Slash",
    "start": "281280",
    "end": "282660"
  },
  {
    "text": "which means that if the first element",
    "start": "282660",
    "end": "285120"
  },
  {
    "text": "does not start with the slash it won't",
    "start": "285120",
    "end": "287940"
  },
  {
    "text": "filter it",
    "start": "287940",
    "end": "289080"
  },
  {
    "text": "smoke proof you just go to the go",
    "start": "289080",
    "end": "291240"
  },
  {
    "text": "playground uh",
    "start": "291240",
    "end": "293460"
  },
  {
    "text": "and you give",
    "start": "293460",
    "end": "297300"
  },
  {
    "text": "an input that dot slash data and then",
    "start": "297300",
    "end": "300180"
  },
  {
    "text": "you see that what",
    "start": "300180",
    "end": "301800"
  },
  {
    "text": "it's not clean as expected to",
    "start": "301800",
    "end": "305220"
  },
  {
    "text": "the function is doing what it says in",
    "start": "305220",
    "end": "308400"
  },
  {
    "text": "the dock but the developer may be",
    "start": "308400",
    "end": "311280"
  },
  {
    "text": "expecting something else",
    "start": "311280",
    "end": "313860"
  },
  {
    "text": "so now let's look at the vulnerability",
    "start": "313860",
    "end": "316860"
  },
  {
    "text": "in detail so",
    "start": "316860",
    "end": "319460"
  },
  {
    "text": "aetv is using two lines first thing we",
    "start": "319460",
    "end": "322620"
  },
  {
    "text": "were doing we were cleaning a web input",
    "start": "322620",
    "end": "325560"
  },
  {
    "text": "so we received a file pass",
    "start": "325560",
    "end": "327960"
  },
  {
    "text": "and we were just executing five plus dot",
    "start": "327960",
    "end": "331199"
  },
  {
    "text": "field and thinking that we will get the",
    "start": "331199",
    "end": "333300"
  },
  {
    "text": "uh canonical form out of it and then we",
    "start": "333300",
    "end": "336300"
  },
  {
    "text": "join this file pass to plugin directory",
    "start": "336300",
    "end": "339180"
  },
  {
    "text": "and so somehow we were expecting that",
    "start": "339180",
    "end": "341280"
  },
  {
    "text": "all the files or would be content within",
    "start": "341280",
    "end": "346680"
  },
  {
    "text": "this plugin directory and which was not",
    "start": "346680",
    "end": "348960"
  },
  {
    "text": "the case because of this uh let's say",
    "start": "348960",
    "end": "351660"
  },
  {
    "text": "unexpected Behavior what's really",
    "start": "351660",
    "end": "354479"
  },
  {
    "text": "interesting if you see",
    "start": "354479",
    "end": "356520"
  },
  {
    "text": "the source code a few lines below you'll",
    "start": "356520",
    "end": "360000"
  },
  {
    "text": "see that we have a comment uh that's uh",
    "start": "360000",
    "end": "364259"
  },
  {
    "text": "a word",
    "start": "364259",
    "end": "365840"
  },
  {
    "text": "or the security Linker goes like that we",
    "start": "365840",
    "end": "368940"
  },
  {
    "text": "are running",
    "start": "368940",
    "end": "371520"
  },
  {
    "text": "and the developer said that well it's",
    "start": "371520",
    "end": "373979"
  },
  {
    "text": "safe to ignore gossack warning his g304",
    "start": "373979",
    "end": "378180"
  },
  {
    "text": "since we already cleanly requested five",
    "start": "378180",
    "end": "380820"
  },
  {
    "text": "plus",
    "start": "380820",
    "end": "381840"
  },
  {
    "text": "uh so somehow like it could feel like",
    "start": "381840",
    "end": "384660"
  },
  {
    "text": "it's a bit of pity uh because",
    "start": "384660",
    "end": "388139"
  },
  {
    "text": "with",
    "start": "388139",
    "end": "389400"
  },
  {
    "text": "like some other two let's put it",
    "start": "389400",
    "end": "391380"
  },
  {
    "text": "something that could be dangerous and",
    "start": "391380",
    "end": "392940"
  },
  {
    "text": "then we reached a conclusion that well",
    "start": "392940",
    "end": "394740"
  },
  {
    "text": "it's not and if you read the details of",
    "start": "394740",
    "end": "397380"
  },
  {
    "text": "this uh goes like warning kind of like",
    "start": "397380",
    "end": "400979"
  },
  {
    "text": "awkward",
    "start": "400979",
    "end": "402300"
  },
  {
    "text": "thing is that there's a recommendation",
    "start": "402300",
    "end": "404880"
  },
  {
    "text": "you need and that said yeah well you",
    "start": "404880",
    "end": "406680"
  },
  {
    "text": "should just use bypass.clean so let's",
    "start": "406680",
    "end": "409380"
  },
  {
    "text": "say any reasonable developer we will get",
    "start": "409380",
    "end": "412979"
  },
  {
    "text": "this warning we'll look at the",
    "start": "412979",
    "end": "415259"
  },
  {
    "text": "corresponding Dock and say well now I'm",
    "start": "415259",
    "end": "417180"
  },
  {
    "text": "fine I'm using fightpass.clean",
    "start": "417180",
    "end": "419940"
  },
  {
    "text": "but it's not",
    "start": "419940",
    "end": "422039"
  },
  {
    "text": "because we have this past traversal so",
    "start": "422039",
    "end": "424680"
  },
  {
    "text": "how did we fix it well somehow",
    "start": "424680",
    "end": "428100"
  },
  {
    "text": "try to an easy way uh which just",
    "start": "428100",
    "end": "433319"
  },
  {
    "text": "add a slash",
    "start": "433319",
    "end": "435180"
  },
  {
    "text": "in front of the file price we received",
    "start": "435180",
    "end": "437580"
  },
  {
    "text": "so that's now somehow we are making the",
    "start": "437580",
    "end": "440460"
  },
  {
    "text": "key method PF as we expected it should",
    "start": "440460",
    "end": "443400"
  },
  {
    "text": "have been",
    "start": "443400",
    "end": "444479"
  },
  {
    "text": "and uh one unit test has been added to",
    "start": "444479",
    "end": "447599"
  },
  {
    "text": "check those relative past stuff and",
    "start": "447599",
    "end": "450120"
  },
  {
    "text": "making sure that we don't get outside of",
    "start": "450120",
    "end": "453599"
  },
  {
    "text": "the plugin directory yet you could",
    "start": "453599",
    "end": "456479"
  },
  {
    "text": "say that here one unit test may not be",
    "start": "456479",
    "end": "459539"
  },
  {
    "text": "enough",
    "start": "459539",
    "end": "461720"
  },
  {
    "text": "also sharing for transparency",
    "start": "462060",
    "end": "464960"
  },
  {
    "text": "site descriptions we had on this topic",
    "start": "464960",
    "end": "467880"
  },
  {
    "text": "and well three different proposals",
    "start": "467880",
    "end": "472460"
  },
  {
    "text": "one of them was",
    "start": "474900",
    "end": "477020"
  },
  {
    "text": "normalizing all the URLs so that in a",
    "start": "477020",
    "end": "480180"
  },
  {
    "text": "business logic you don't really get",
    "start": "480180",
    "end": "482099"
  },
  {
    "text": "toggled slash so you somehow you do the",
    "start": "482099",
    "end": "484139"
  },
  {
    "text": "filtering before it happens in your",
    "start": "484139",
    "end": "486479"
  },
  {
    "text": "logic another interesting comment was a",
    "start": "486479",
    "end": "489240"
  },
  {
    "text": "way to silence this concept group",
    "start": "489240",
    "end": "492479"
  },
  {
    "text": "but it's clearly it also clearly said",
    "start": "492479",
    "end": "494880"
  },
  {
    "text": "that yeah we have the risk of getting",
    "start": "494880",
    "end": "496860"
  },
  {
    "text": "blind to this issue because maybe it's",
    "start": "496860",
    "end": "499020"
  },
  {
    "text": "not fixing it it's it's just tricking",
    "start": "499020",
    "end": "502379"
  },
  {
    "text": "the uh goes like tool",
    "start": "502379",
    "end": "505319"
  },
  {
    "text": "and the last question which would be the",
    "start": "505319",
    "end": "507539"
  },
  {
    "text": "last point which would be really more",
    "start": "507539",
    "end": "509160"
  },
  {
    "text": "interesting for us a point about like",
    "start": "509160",
    "end": "511919"
  },
  {
    "text": "making a security help a library out of",
    "start": "511919",
    "end": "515039"
  },
  {
    "text": "it so that other developers don't get",
    "start": "515039",
    "end": "518099"
  },
  {
    "text": "tricked by that uh and then yeah",
    "start": "518099",
    "end": "521820"
  },
  {
    "text": "question you can ask yourself is okay",
    "start": "521820",
    "end": "524940"
  },
  {
    "text": "but",
    "start": "524940",
    "end": "526399"
  },
  {
    "text": "how are we confident that",
    "start": "526399",
    "end": "530640"
  },
  {
    "text": "only adding a slash",
    "start": "530640",
    "end": "533940"
  },
  {
    "text": "in front of it will fix all the possible",
    "start": "533940",
    "end": "536700"
  },
  {
    "text": "plus traversal issues we have",
    "start": "536700",
    "end": "539160"
  },
  {
    "text": "uh so that's why now we will be",
    "start": "539160",
    "end": "542459"
  },
  {
    "text": "discussing about your fuzzing",
    "start": "542459",
    "end": "545880"
  },
  {
    "text": "so first thing in a few words uh the",
    "start": "545880",
    "end": "548459"
  },
  {
    "text": "goal is to extend unit tests",
    "start": "548459",
    "end": "551580"
  },
  {
    "text": "by predicate predicates are somehow",
    "start": "551580",
    "end": "554339"
  },
  {
    "text": "General truths and Tamil we want to",
    "start": "554339",
    "end": "556980"
  },
  {
    "text": "extend the uni test",
    "start": "556980",
    "end": "558959"
  },
  {
    "text": "by predicate that say that those kind of",
    "start": "558959",
    "end": "563279"
  },
  {
    "text": "things should never happen like for",
    "start": "563279",
    "end": "565500"
  },
  {
    "text": "example for the plugin stuff you say hey",
    "start": "565500",
    "end": "567540"
  },
  {
    "text": "I never want that the resulting file",
    "start": "567540",
    "end": "570720"
  },
  {
    "text": "pass is out of my uh plugin folder",
    "start": "570720",
    "end": "575160"
  },
  {
    "text": "and then what does filling do uh well in",
    "start": "575160",
    "end": "578640"
  },
  {
    "text": "fact it's uh it's uh it's an engine that",
    "start": "578640",
    "end": "581580"
  },
  {
    "text": "will generate a really big amount of",
    "start": "581580",
    "end": "584339"
  },
  {
    "text": "pseudo random inputs and test them",
    "start": "584339",
    "end": "586800"
  },
  {
    "text": "against those predicates",
    "start": "586800",
    "end": "589500"
  },
  {
    "text": "so",
    "start": "589500",
    "end": "590940"
  },
  {
    "text": "now it's available natively in go from",
    "start": "590940",
    "end": "593640"
  },
  {
    "text": "version 1.18 which is really good",
    "start": "593640",
    "end": "595740"
  },
  {
    "text": "because you don't have to depend on the",
    "start": "595740",
    "end": "597360"
  },
  {
    "text": "external tool that is not augmented that",
    "start": "597360",
    "end": "600060"
  },
  {
    "text": "is hard to use why you need specific",
    "start": "600060",
    "end": "603000"
  },
  {
    "text": "config files to every training and all",
    "start": "603000",
    "end": "604980"
  },
  {
    "text": "that and that what's really nice with",
    "start": "604980",
    "end": "607500"
  },
  {
    "text": "the goal integration is by default as",
    "start": "607500",
    "end": "610380"
  },
  {
    "text": "soon as it has if it finds something",
    "start": "610380",
    "end": "612540"
  },
  {
    "text": "that breaks the predicate it will create",
    "start": "612540",
    "end": "616019"
  },
  {
    "text": "the corresponding test data test data",
    "start": "616019",
    "end": "618779"
  },
  {
    "text": "and then as soon as you relaunch a unit",
    "start": "618779",
    "end": "621779"
  },
  {
    "text": "test this test data will be including in",
    "start": "621779",
    "end": "624360"
  },
  {
    "text": "it",
    "start": "624360",
    "end": "626540"
  },
  {
    "text": "the default implementation is a",
    "start": "626820",
    "end": "628800"
  },
  {
    "text": "never-ending Loop because you are",
    "start": "628800",
    "end": "630720"
  },
  {
    "text": "generating random inputs well in fact",
    "start": "630720",
    "end": "633180"
  },
  {
    "text": "they are kind of there are deterministic",
    "start": "633180",
    "end": "636420"
  },
  {
    "text": "permutations on inputs uh",
    "start": "636420",
    "end": "640320"
  },
  {
    "text": "but it's it never ends because you you",
    "start": "640320",
    "end": "642600"
  },
  {
    "text": "have so many like possible inputs of",
    "start": "642600",
    "end": "646440"
  },
  {
    "text": "course you can configure it and say yeah",
    "start": "646440",
    "end": "648240"
  },
  {
    "text": "you can stop after a given the amount of",
    "start": "648240",
    "end": "650040"
  },
  {
    "text": "time and with the assumption that if you",
    "start": "650040",
    "end": "652860"
  },
  {
    "text": "don't find something quickly it could be",
    "start": "652860",
    "end": "655140"
  },
  {
    "text": "safe enough it smells is traded uh you",
    "start": "655140",
    "end": "658500"
  },
  {
    "text": "could you can choose a number of workers",
    "start": "658500",
    "end": "660300"
  },
  {
    "text": "and CPU course you you want to use",
    "start": "660300",
    "end": "663540"
  },
  {
    "text": "uh so there's a rather nice tutorial but",
    "start": "663540",
    "end": "666839"
  },
  {
    "text": "we will just use uh the past traversal",
    "start": "666839",
    "end": "670260"
  },
  {
    "text": "which been discussing about",
    "start": "670260",
    "end": "672360"
  },
  {
    "text": "you so",
    "start": "672360",
    "end": "674339"
  },
  {
    "text": "what has been done is in this GitHub",
    "start": "674339",
    "end": "677459"
  },
  {
    "text": "repo",
    "start": "677459",
    "end": "679200"
  },
  {
    "text": "that is a really simple example uh well",
    "start": "679200",
    "end": "683220"
  },
  {
    "text": "team paths where the validation logic",
    "start": "683220",
    "end": "685920"
  },
  {
    "text": "has been extracted into this really",
    "start": "685920",
    "end": "687600"
  },
  {
    "text": "simple method where we choose to slash",
    "start": "687600",
    "end": "690480"
  },
  {
    "text": "Plus or parameter and we clean it",
    "start": "690480",
    "end": "694220"
  },
  {
    "text": "and so what do you have to write to have",
    "start": "694500",
    "end": "697500"
  },
  {
    "text": "the threading test working uh I won't",
    "start": "697500",
    "end": "700140"
  },
  {
    "text": "focus on all the details just on the",
    "start": "700140",
    "end": "702000"
  },
  {
    "text": "important points",
    "start": "702000",
    "end": "703440"
  },
  {
    "text": "first thing you are declaring are test",
    "start": "703440",
    "end": "706560"
  },
  {
    "text": "cases so that this is a list of inputs",
    "start": "706560",
    "end": "709440"
  },
  {
    "text": "there are four",
    "start": "709440",
    "end": "711360"
  },
  {
    "text": "three sorry here uh",
    "start": "711360",
    "end": "714420"
  },
  {
    "text": "and those somehow correspond to unit",
    "start": "714420",
    "end": "716880"
  },
  {
    "text": "tests and what's really nice with the go",
    "start": "716880",
    "end": "718680"
  },
  {
    "text": "implementation is that if you run it",
    "start": "718680",
    "end": "722459"
  },
  {
    "text": "as is so without like launching the",
    "start": "722459",
    "end": "727079"
  },
  {
    "text": "phasing engine those will be considered",
    "start": "727079",
    "end": "729120"
  },
  {
    "text": "as regular unique tests",
    "start": "729120",
    "end": "732480"
  },
  {
    "text": "and then",
    "start": "732480",
    "end": "733800"
  },
  {
    "text": "really in the specifics of the first",
    "start": "733800",
    "end": "736260"
  },
  {
    "text": "method you you're telling which",
    "start": "736260",
    "end": "739019"
  },
  {
    "text": "parameter you want to First",
    "start": "739019",
    "end": "742260"
  },
  {
    "text": "then use for your parameter in the",
    "start": "742260",
    "end": "745019"
  },
  {
    "text": "helper Library",
    "start": "745019",
    "end": "746579"
  },
  {
    "text": "and then you write the predicates so for",
    "start": "746579",
    "end": "749160"
  },
  {
    "text": "this example there are two the first one",
    "start": "749160",
    "end": "751440"
  },
  {
    "text": "is yeah while you expect expect that the",
    "start": "751440",
    "end": "754440"
  },
  {
    "text": "clean output starts with a slash because",
    "start": "754440",
    "end": "756660"
  },
  {
    "text": "with really adding the Slash and if we",
    "start": "756660",
    "end": "759600"
  },
  {
    "text": "are we don't have a slash anymore it",
    "start": "759600",
    "end": "761399"
  },
  {
    "text": "smells bad it means that somehow an",
    "start": "761399",
    "end": "763920"
  },
  {
    "text": "escape has been found",
    "start": "763920",
    "end": "766500"
  },
  {
    "text": "and then the other predicate is making",
    "start": "766500",
    "end": "769500"
  },
  {
    "text": "sure that we don't have any past",
    "start": "769500",
    "end": "771240"
  },
  {
    "text": "traversal sequence a new pastoral",
    "start": "771240",
    "end": "773100"
  },
  {
    "text": "sequence is slash dot slash which means",
    "start": "773100",
    "end": "777000"
  },
  {
    "text": "that somehow you are able to move up uh",
    "start": "777000",
    "end": "780440"
  },
  {
    "text": "One Directory",
    "start": "780440",
    "end": "783860"
  },
  {
    "text": "all you have to do is either you just",
    "start": "785399",
    "end": "787380"
  },
  {
    "text": "launch this really small clip but what",
    "start": "787380",
    "end": "789360"
  },
  {
    "text": "you have to do is make sure you have a",
    "start": "789360",
    "end": "791639"
  },
  {
    "text": "correct conversion",
    "start": "791639",
    "end": "794220"
  },
  {
    "text": "run the regular unit test because of",
    "start": "794220",
    "end": "796380"
  },
  {
    "text": "course if the few inputs you've already",
    "start": "796380",
    "end": "798120"
  },
  {
    "text": "provided by activity tests it's not",
    "start": "798120",
    "end": "800700"
  },
  {
    "text": "worth launching a b engine crunching",
    "start": "800700",
    "end": "802920"
  },
  {
    "text": "millions of input",
    "start": "802920",
    "end": "805019"
  },
  {
    "text": "if there's already something",
    "start": "805019",
    "end": "807360"
  },
  {
    "text": "that you know that break some predicates",
    "start": "807360",
    "end": "810060"
  },
  {
    "text": "and that if you really want to start the",
    "start": "810060",
    "end": "812160"
  },
  {
    "text": "fuzzing loop you just have to add a",
    "start": "812160",
    "end": "814200"
  },
  {
    "text": "minus minute first and the name of the",
    "start": "814200",
    "end": "816300"
  },
  {
    "text": "test you want to First",
    "start": "816300",
    "end": "819200"
  },
  {
    "text": "so it looks like super easy uh",
    "start": "819600",
    "end": "823079"
  },
  {
    "text": "but fighting the predicate is not",
    "start": "823079",
    "end": "825720"
  },
  {
    "text": "straightforward it's a bit more trial",
    "start": "825720",
    "end": "827940"
  },
  {
    "text": "and error at the beginning if you will",
    "start": "827940",
    "end": "830639"
  },
  {
    "text": "write predicates that are not totally",
    "start": "830639",
    "end": "832440"
  },
  {
    "text": "correct and fuzzing will find valuation",
    "start": "832440",
    "end": "834660"
  },
  {
    "text": "but in fact there are valid outputs",
    "start": "834660",
    "end": "837079"
  },
  {
    "text": "uh and then searching will also identify",
    "start": "837079",
    "end": "840920"
  },
  {
    "text": "counter cases where it's really hard to",
    "start": "840920",
    "end": "843540"
  },
  {
    "text": "decide if it's a valid or invalid output",
    "start": "843540",
    "end": "845940"
  },
  {
    "text": "but it's worth closing is really useful",
    "start": "845940",
    "end": "848339"
  },
  {
    "text": "because it forces you to make",
    "start": "848339",
    "end": "850920"
  },
  {
    "text": "requirements more explicit and because",
    "start": "850920",
    "end": "853740"
  },
  {
    "text": "there will be less ambiguity you will",
    "start": "853740",
    "end": "856740"
  },
  {
    "text": "have less vulnerabilities because you",
    "start": "856740",
    "end": "859560"
  },
  {
    "text": "you will know what you would be the",
    "start": "859560",
    "end": "862019"
  },
  {
    "text": "behavior of your software under let's",
    "start": "862019",
    "end": "865139"
  },
  {
    "text": "say world word conditions",
    "start": "865139",
    "end": "867959"
  },
  {
    "text": "so for example when to be totally honest",
    "start": "867959",
    "end": "871440"
  },
  {
    "text": "I didn't get the correct predicate first",
    "start": "871440",
    "end": "875040"
  },
  {
    "text": "so I saw that I would want to check this",
    "start": "875040",
    "end": "877860"
  },
  {
    "text": "press 12 also looking at the dot slash",
    "start": "877860",
    "end": "880680"
  },
  {
    "text": "because for me it was enough to say hey",
    "start": "880680",
    "end": "883079"
  },
  {
    "text": "we are with this character sequence I'm",
    "start": "883079",
    "end": "885360"
  },
  {
    "text": "able to move up uh directory level and",
    "start": "885360",
    "end": "890220"
  },
  {
    "text": "then you just learn fuzzing on it and it",
    "start": "890220",
    "end": "892260"
  },
  {
    "text": "really quickly finds a violation and it",
    "start": "892260",
    "end": "896639"
  },
  {
    "text": "provides you the input",
    "start": "896639",
    "end": "898500"
  },
  {
    "text": "and the output and it's really hard to",
    "start": "898500",
    "end": "901440"
  },
  {
    "text": "figure out if is it a legit input like",
    "start": "901440",
    "end": "904500"
  },
  {
    "text": "if you receive other five pulse",
    "start": "904500",
    "end": "906060"
  },
  {
    "text": "something that's called 0.0",
    "start": "906060",
    "end": "909660"
  },
  {
    "text": "and is the corresponding output valid",
    "start": "909660",
    "end": "912120"
  },
  {
    "text": "well it starts with a slash",
    "start": "912120",
    "end": "915560"
  },
  {
    "text": "but does it make sense does it",
    "start": "915560",
    "end": "918980"
  },
  {
    "text": "cannot pass troubleshold with that and",
    "start": "918980",
    "end": "921779"
  },
  {
    "text": "here you will have the question about",
    "start": "921779",
    "end": "924180"
  },
  {
    "text": "like should I be more strict on input",
    "start": "924180",
    "end": "926519"
  },
  {
    "text": "validation and do not trust that or",
    "start": "926519",
    "end": "929760"
  },
  {
    "text": "should I try to do something in my",
    "start": "929760",
    "end": "931980"
  },
  {
    "text": "validator to get rid of that",
    "start": "931980",
    "end": "936079"
  },
  {
    "text": "so that's why now we will be looking at",
    "start": "936420",
    "end": "938760"
  },
  {
    "text": "more complex helpers",
    "start": "938760",
    "end": "942440"
  },
  {
    "text": "so",
    "start": "943680",
    "end": "945600"
  },
  {
    "text": "I took this",
    "start": "945600",
    "end": "947100"
  },
  {
    "text": "example uh",
    "start": "947100",
    "end": "949680"
  },
  {
    "text": "and I",
    "start": "949680",
    "end": "950940"
  },
  {
    "text": "somehow extracted your source code uh we",
    "start": "950940",
    "end": "954660"
  },
  {
    "text": "have plugins in grafana and plugins are",
    "start": "954660",
    "end": "957060"
  },
  {
    "text": "used to add features and they are",
    "start": "957060",
    "end": "960180"
  },
  {
    "text": "positively just uh",
    "start": "960180",
    "end": "962639"
  },
  {
    "text": "a zip file that you unzip in a folder on",
    "start": "962639",
    "end": "966480"
  },
  {
    "text": "the server and what we don't want of",
    "start": "966480",
    "end": "969000"
  },
  {
    "text": "course is that within this folder that",
    "start": "969000",
    "end": "971220"
  },
  {
    "text": "there are Sim links that point out",
    "start": "971220",
    "end": "974220"
  },
  {
    "text": "outside of the plugin directory so for",
    "start": "974220",
    "end": "977459"
  },
  {
    "text": "that we have a helper method that's",
    "start": "977459",
    "end": "980579"
  },
  {
    "text": "called uh is seeming relative Tool It's",
    "start": "980579",
    "end": "983639"
  },
  {
    "text": "rather artery so yeah well go is not my",
    "start": "983639",
    "end": "987060"
  },
  {
    "text": "main language even though I have to read",
    "start": "987060",
    "end": "988920"
  },
  {
    "text": "it three times it was a bit hard to",
    "start": "988920",
    "end": "991199"
  },
  {
    "text": "figure out what it was doing so it's",
    "start": "991199",
    "end": "993060"
  },
  {
    "text": "doing a clean uh",
    "start": "993060",
    "end": "995579"
  },
  {
    "text": "then it's going it's calling the fight",
    "start": "995579",
    "end": "997860"
  },
  {
    "text": "pass the trail you know if it's a",
    "start": "997860",
    "end": "999540"
  },
  {
    "text": "relative pass or not and then it has an",
    "start": "999540",
    "end": "1002180"
  },
  {
    "text": "uh return condition well that's",
    "start": "1002180",
    "end": "1004579"
  },
  {
    "text": "basically looking for DOT slash",
    "start": "1004579",
    "end": "1007940"
  },
  {
    "text": "which is just like the sequence I was",
    "start": "1007940",
    "end": "1010820"
  },
  {
    "text": "choosing before that uh",
    "start": "1010820",
    "end": "1013300"
  },
  {
    "text": "well a predicate I was using before that",
    "start": "1013300",
    "end": "1016339"
  },
  {
    "text": "was not really okay",
    "start": "1016339",
    "end": "1018440"
  },
  {
    "text": "so when doing that code review I was",
    "start": "1018440",
    "end": "1021860"
  },
  {
    "text": "just yeah well uh maybe fuzzing can help",
    "start": "1021860",
    "end": "1025040"
  },
  {
    "text": "decide if like this validation logic is",
    "start": "1025040",
    "end": "1028339"
  },
  {
    "text": "doing its job or not so for that I had",
    "start": "1028339",
    "end": "1031520"
  },
  {
    "text": "to write the first test",
    "start": "1031520",
    "end": "1033558"
  },
  {
    "text": "uh",
    "start": "1033559",
    "end": "1036079"
  },
  {
    "text": "and then it became obvious that the",
    "start": "1036079",
    "end": "1039140"
  },
  {
    "text": "predicate is not straightforward so",
    "start": "1039140",
    "end": "1040760"
  },
  {
    "text": "somehow are too extract it into a",
    "start": "1040760",
    "end": "1044058"
  },
  {
    "text": "function called expected result and then",
    "start": "1044059",
    "end": "1046760"
  },
  {
    "text": "in the fuzzing logic the only thing we",
    "start": "1046760",
    "end": "1048740"
  },
  {
    "text": "are doing is",
    "start": "1048740",
    "end": "1050059"
  },
  {
    "text": "Ed output of the helper difference from",
    "start": "1050059",
    "end": "1054740"
  },
  {
    "text": "the expectation from the predicate and",
    "start": "1054740",
    "end": "1057140"
  },
  {
    "text": "if so we found a violation",
    "start": "1057140",
    "end": "1059960"
  },
  {
    "text": "and then the predicate experimentation",
    "start": "1059960",
    "end": "1063080"
  },
  {
    "text": "here well uh when you need to express it",
    "start": "1063080",
    "end": "1068360"
  },
  {
    "text": "then you quickly realize that somehow",
    "start": "1068360",
    "end": "1070940"
  },
  {
    "text": "you have to re-implement the logic of",
    "start": "1070940",
    "end": "1073100"
  },
  {
    "text": "the validator and it's important that's",
    "start": "1073100",
    "end": "1075080"
  },
  {
    "text": "quite common in unit testing either",
    "start": "1075080",
    "end": "1077480"
  },
  {
    "text": "you're just looking at an input a and",
    "start": "1077480",
    "end": "1081020"
  },
  {
    "text": "you say you get B and input C and then",
    "start": "1081020",
    "end": "1083179"
  },
  {
    "text": "you get D or you try to be more generic",
    "start": "1083179",
    "end": "1085940"
  },
  {
    "text": "and somehow you have to do",
    "start": "1085940",
    "end": "1088940"
  },
  {
    "text": "implementation number two and compare",
    "start": "1088940",
    "end": "1090919"
  },
  {
    "text": "implementation number two with your",
    "start": "1090919",
    "end": "1092600"
  },
  {
    "text": "original one so it's what I'm trying to",
    "start": "1092600",
    "end": "1095059"
  },
  {
    "text": "do here with the naive implementation",
    "start": "1095059",
    "end": "1097100"
  },
  {
    "text": "looking if it's like if it looks like an",
    "start": "1097100",
    "end": "1099559"
  },
  {
    "text": "absolute pass",
    "start": "1099559",
    "end": "1101419"
  },
  {
    "text": "trying not to use the Google standard",
    "start": "1101419",
    "end": "1105140"
  },
  {
    "text": "library to be sure we are fully covered",
    "start": "1105140",
    "end": "1108380"
  },
  {
    "text": "and then doing a naive John of pass and",
    "start": "1108380",
    "end": "1111799"
  },
  {
    "text": "all that",
    "start": "1111799",
    "end": "1113360"
  },
  {
    "text": "and then what's really interesting there",
    "start": "1113360",
    "end": "1115240"
  },
  {
    "text": "uh and then as soon as you launch fading",
    "start": "1115240",
    "end": "1118580"
  },
  {
    "text": "a violation is identified something like",
    "start": "1118580",
    "end": "1121940"
  },
  {
    "text": "some parts that will be dot slash dot",
    "start": "1121940",
    "end": "1125240"
  },
  {
    "text": "dot",
    "start": "1125240",
    "end": "1126020"
  },
  {
    "text": "where the validator says yeah yeah it's",
    "start": "1126020",
    "end": "1128840"
  },
  {
    "text": "it's legit but then I will my code is",
    "start": "1128840",
    "end": "1132320"
  },
  {
    "text": "expecting",
    "start": "1132320",
    "end": "1133580"
  },
  {
    "text": "that it's rejected",
    "start": "1133580",
    "end": "1135679"
  },
  {
    "text": "and then when I found that it was",
    "start": "1135679",
    "end": "1137720"
  },
  {
    "text": "unclear to me what",
    "start": "1137720",
    "end": "1139820"
  },
  {
    "text": "what should be the behavior so we",
    "start": "1139820",
    "end": "1141799"
  },
  {
    "text": "discovered that in this PR and then the",
    "start": "1141799",
    "end": "1144620"
  },
  {
    "text": "conclusion was that yeah we don't want",
    "start": "1144620",
    "end": "1146299"
  },
  {
    "text": "to accept it so the fix has been made",
    "start": "1146299",
    "end": "1148940"
  },
  {
    "text": "again if you look at the fix",
    "start": "1148940",
    "end": "1151280"
  },
  {
    "text": "doesn't seem obvious that it's the let's",
    "start": "1151280",
    "end": "1154280"
  },
  {
    "text": "say",
    "start": "1154280",
    "end": "1155000"
  },
  {
    "text": "a perfect solution for it so then",
    "start": "1155000",
    "end": "1157760"
  },
  {
    "text": "filling is again useful because you",
    "start": "1157760",
    "end": "1160280"
  },
  {
    "text": "first the new implementation and then",
    "start": "1160280",
    "end": "1161900"
  },
  {
    "text": "you get no violation in a reasonable",
    "start": "1161900",
    "end": "1164480"
  },
  {
    "text": "amount of time and then you can conclude",
    "start": "1164480",
    "end": "1166400"
  },
  {
    "text": "that the future will be good enough",
    "start": "1166400",
    "end": "1169480"
  },
  {
    "text": "uh yeah so",
    "start": "1169480",
    "end": "1172640"
  },
  {
    "text": "writing predicates can be hard uh",
    "start": "1172640",
    "end": "1175820"
  },
  {
    "text": "because uh as we've seen here it was",
    "start": "1175820",
    "end": "1178640"
  },
  {
    "text": "rather straightforward for for the",
    "start": "1178640",
    "end": "1180679"
  },
  {
    "text": "example one where it's just a one-liner",
    "start": "1180679",
    "end": "1184039"
  },
  {
    "text": "uh so if the emperor is small uh",
    "start": "1184039",
    "end": "1189020"
  },
  {
    "text": "and you can you can easily express",
    "start": "1189020",
    "end": "1192520"
  },
  {
    "text": "predicates with sentences like should",
    "start": "1192520",
    "end": "1195559"
  },
  {
    "text": "not content this character or sequence",
    "start": "1195559",
    "end": "1197299"
  },
  {
    "text": "but if the",
    "start": "1197299",
    "end": "1198940"
  },
  {
    "text": "helper gets bigger you will need this",
    "start": "1198940",
    "end": "1202039"
  },
  {
    "text": "complex validation logic to implement it",
    "start": "1202039",
    "end": "1204799"
  },
  {
    "text": "and of course if you just copy paste the",
    "start": "1204799",
    "end": "1207140"
  },
  {
    "text": "original implementation in the first",
    "start": "1207140",
    "end": "1209600"
  },
  {
    "text": "test it's useless because you are",
    "start": "1209600",
    "end": "1212480"
  },
  {
    "text": "comparing",
    "start": "1212480",
    "end": "1213679"
  },
  {
    "text": "output from the expected output and if",
    "start": "1213679",
    "end": "1217940"
  },
  {
    "text": "his expected output is always the output",
    "start": "1217940",
    "end": "1220520"
  },
  {
    "text": "because it's a copy paste of the",
    "start": "1220520",
    "end": "1222440"
  },
  {
    "text": "implementation you are doing just",
    "start": "1222440",
    "end": "1224720"
  },
  {
    "text": "nothing",
    "start": "1224720",
    "end": "1225559"
  },
  {
    "text": "uh so you need to write your",
    "start": "1225559",
    "end": "1228860"
  },
  {
    "text": "own implementation and for that you need",
    "start": "1228860",
    "end": "1232160"
  },
  {
    "text": "not to get biased by the existing one",
    "start": "1232160",
    "end": "1234260"
  },
  {
    "text": "because otherwise again you would be",
    "start": "1234260",
    "end": "1237380"
  },
  {
    "text": "just comparing similar things and maybe",
    "start": "1237380",
    "end": "1239780"
  },
  {
    "text": "a corner case is missing and you need to",
    "start": "1239780",
    "end": "1241880"
  },
  {
    "text": "think about it",
    "start": "1241880",
    "end": "1243440"
  },
  {
    "text": "a team of complex question I faced was",
    "start": "1243440",
    "end": "1247100"
  },
  {
    "text": "there were two extent should I draft the",
    "start": "1247100",
    "end": "1249919"
  },
  {
    "text": "standard libraries because we saw that",
    "start": "1249919",
    "end": "1251860"
  },
  {
    "text": "flightpass.fin was tricky",
    "start": "1251860",
    "end": "1254240"
  },
  {
    "text": "and so for that I wanted to share the",
    "start": "1254240",
    "end": "1256700"
  },
  {
    "text": "list my lessons learned when I was",
    "start": "1256700",
    "end": "1258980"
  },
  {
    "text": "trying to validate the file storage API",
    "start": "1258980",
    "end": "1261500"
  },
  {
    "text": "of grafana so it's a new API that will",
    "start": "1261500",
    "end": "1264440"
  },
  {
    "text": "allow to do file uploads on the on the",
    "start": "1264440",
    "end": "1267080"
  },
  {
    "text": "server so of course password is a big",
    "start": "1267080",
    "end": "1269360"
  },
  {
    "text": "concern",
    "start": "1269360",
    "end": "1270380"
  },
  {
    "text": "uh and there's a rather complex validate",
    "start": "1270380",
    "end": "1273380"
  },
  {
    "text": "path function in this API so add to be",
    "start": "1273380",
    "end": "1277100"
  },
  {
    "text": "implemented",
    "start": "1277100",
    "end": "1278360"
  },
  {
    "text": "and it was really time consuming",
    "start": "1278360",
    "end": "1281720"
  },
  {
    "text": "uh I did not identify any violation",
    "start": "1281720",
    "end": "1285200"
  },
  {
    "text": "which like somehow is good because it",
    "start": "1285200",
    "end": "1288140"
  },
  {
    "text": "means like the current validate pass",
    "start": "1288140",
    "end": "1290120"
  },
  {
    "text": "seems to be doing the job yet I'm not on",
    "start": "1290120",
    "end": "1294200"
  },
  {
    "text": "100 confident that I did not miss some",
    "start": "1294200",
    "end": "1297679"
  },
  {
    "text": "Chrono cases because it was hard to",
    "start": "1297679",
    "end": "1301039"
  },
  {
    "text": "re-implement this complex logic",
    "start": "1301039",
    "end": "1304779"
  },
  {
    "text": "okay so next step we still have some",
    "start": "1305419",
    "end": "1308720"
  },
  {
    "text": "phasing for it and all that so it can be",
    "start": "1308720",
    "end": "1310700"
  },
  {
    "text": "useful so what what can we do to",
    "start": "1310700",
    "end": "1313100"
  },
  {
    "text": "are getting more value out of phasing",
    "start": "1313100",
    "end": "1316280"
  },
  {
    "text": "well first uh yeah as we said you should",
    "start": "1316280",
    "end": "1319880"
  },
  {
    "text": "make security helper as simple as",
    "start": "1319880",
    "end": "1322159"
  },
  {
    "text": "possible and then one is done you can",
    "start": "1322159",
    "end": "1325460"
  },
  {
    "text": "easily include trading in the cicd",
    "start": "1325460",
    "end": "1327620"
  },
  {
    "text": "pipeline so you make sure you will not",
    "start": "1327620",
    "end": "1330320"
  },
  {
    "text": "have any regression so let's say in a",
    "start": "1330320",
    "end": "1332900"
  },
  {
    "text": "few months some other developer decide",
    "start": "1332900",
    "end": "1334880"
  },
  {
    "text": "to refactor this example to logic uh and",
    "start": "1334880",
    "end": "1340159"
  },
  {
    "text": "it breaks it like uh an unfolding could",
    "start": "1340159",
    "end": "1343880"
  },
  {
    "text": "find a violation quickly and and we can",
    "start": "1343880",
    "end": "1346760"
  },
  {
    "text": "realize that yeah the validator is not",
    "start": "1346760",
    "end": "1349220"
  },
  {
    "text": "doing the job anymore",
    "start": "1349220",
    "end": "1351500"
  },
  {
    "text": "of course once you have those uh",
    "start": "1351500",
    "end": "1355340"
  },
  {
    "text": "security helpers like you can that you",
    "start": "1355340",
    "end": "1357559"
  },
  {
    "text": "can consider trusted because they are",
    "start": "1357559",
    "end": "1359360"
  },
  {
    "text": "first",
    "start": "1359360",
    "end": "1360080"
  },
  {
    "text": "you should communicate about them so",
    "start": "1360080",
    "end": "1362480"
  },
  {
    "text": "that like more developer uses them",
    "start": "1362480",
    "end": "1365000"
  },
  {
    "text": "uh and then if you want to make sure",
    "start": "1365000",
    "end": "1367640"
  },
  {
    "text": "that they are really used you could use",
    "start": "1367640",
    "end": "1370580"
  },
  {
    "text": "some uh static analysis tooling like Sam",
    "start": "1370580",
    "end": "1373640"
  },
  {
    "text": "grab",
    "start": "1373640",
    "end": "1374600"
  },
  {
    "text": "so that you can check if like in your",
    "start": "1374600",
    "end": "1376940"
  },
  {
    "text": "web processories",
    "start": "1376940",
    "end": "1378799"
  },
  {
    "text": "if those security helpers are really",
    "start": "1378799",
    "end": "1381500"
  },
  {
    "text": "used instead of the dangerous features",
    "start": "1381500",
    "end": "1385820"
  },
  {
    "text": "thank you",
    "start": "1385820",
    "end": "1387020"
  },
  {
    "text": "so to wrap up uh so",
    "start": "1387020",
    "end": "1391220"
  },
  {
    "text": "yeah you've been warned that five past",
    "start": "1391220",
    "end": "1393860"
  },
  {
    "text": "13",
    "start": "1393860",
    "end": "1394940"
  },
  {
    "text": "can be tricky when you try to protect",
    "start": "1394940",
    "end": "1397039"
  },
  {
    "text": "from Pastor reversal uh",
    "start": "1397039",
    "end": "1400220"
  },
  {
    "text": "I hope that you are convinced that",
    "start": "1400220",
    "end": "1403039"
  },
  {
    "text": "phasing can be useful in real life as it",
    "start": "1403039",
    "end": "1406220"
  },
  {
    "text": "improves your automatic testing coverage",
    "start": "1406220",
    "end": "1408860"
  },
  {
    "text": "and it's identity",
    "start": "1408860",
    "end": "1411220"
  },
  {
    "text": "to identify Corner cases that would not",
    "start": "1411220",
    "end": "1414500"
  },
  {
    "text": "be obvious",
    "start": "1414500",
    "end": "1415640"
  },
  {
    "text": "uh and in the end it should make you",
    "start": "1415640",
    "end": "1418220"
  },
  {
    "text": "more confident with your security",
    "start": "1418220",
    "end": "1419659"
  },
  {
    "text": "outdoor libraries and we've also see",
    "start": "1419659",
    "end": "1422720"
  },
  {
    "text": "that yeah well go fishing is easy to use",
    "start": "1422720",
    "end": "1425120"
  },
  {
    "text": "and really nicely integrated and it can",
    "start": "1425120",
    "end": "1427880"
  },
  {
    "text": "be really efficient as long as your",
    "start": "1427880",
    "end": "1429980"
  },
  {
    "text": "target simple functions",
    "start": "1429980",
    "end": "1432440"
  },
  {
    "text": "and now I would be really happy to take",
    "start": "1432440",
    "end": "1436039"
  },
  {
    "text": "all the questions you have about that",
    "start": "1436039",
    "end": "1438799"
  },
  {
    "text": "thank you",
    "start": "1438799",
    "end": "1441519"
  }
]