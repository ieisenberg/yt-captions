[
  {
    "start": "0",
    "end": "365000"
  },
  {
    "text": "hello welcome to kubecon today myself k7 with me gavru from sap",
    "start": "80",
    "end": "7120"
  },
  {
    "text": "will be taking you to some of the interesting things about our controllers and garner and how we leverage the",
    "start": "7120",
    "end": "13679"
  },
  {
    "text": "existing kubernetes capabilities to operate kubernetes cluster search scale let's start from basics",
    "start": "13679",
    "end": "21520"
  },
  {
    "text": "so how you run a container basically you have you'll get the libraries you",
    "start": "21520",
    "end": "27439"
  },
  {
    "text": "change the route and set the name and run the cam think of a cases where you want to have",
    "start": "27439",
    "end": "32719"
  },
  {
    "text": "few number of containers to run like a search sum around 10 to 20 containers",
    "start": "32719",
    "end": "38079"
  },
  {
    "text": "then you'll go with some thing like docker or some other container platforms now",
    "start": "38079",
    "end": "43920"
  },
  {
    "text": "let's go with a big bang now when you have to operate thousands of such",
    "start": "43920",
    "end": "49039"
  },
  {
    "text": "containers what will be the good solution the quicken will be kubernetes so kubernetes helps you to",
    "start": "49039",
    "end": "56320"
  },
  {
    "text": "architect these thousands of containers across across the kubernetes workloads and then",
    "start": "56320",
    "end": "62800"
  },
  {
    "text": "helps you to manage those containers kubernetes are nothing but bunch of controllers like controller manager cloud controller",
    "start": "62800",
    "end": "69920"
  },
  {
    "text": "qpa server hct now let's take some big organizations",
    "start": "69920",
    "end": "75360"
  },
  {
    "text": "where they want to operate thousands of clusters what is the solution we have in place to",
    "start": "75360",
    "end": "81040"
  },
  {
    "text": "operate these many kubernetes clusters rather than just operating clusters we need across cloud providers like aws",
    "start": "81040",
    "end": "88640"
  },
  {
    "text": "gcp azure and even on private clouds we just not stop at creating clusters",
    "start": "88640",
    "end": "95360"
  },
  {
    "text": "but we want some more other than just operating this we need a quick solution quick way of managing the clusters",
    "start": "95360",
    "end": "102399"
  },
  {
    "text": "upgrading the clusters which are single click and so on the other thing to be noticed",
    "start": "102399",
    "end": "107759"
  },
  {
    "text": "like there are lot many cloud providers available in the market like aws gcp",
    "start": "107759",
    "end": "112880"
  },
  {
    "text": "a vsphere azure ali cloud each of them have their own design structures",
    "start": "112880",
    "end": "117920"
  },
  {
    "text": "in providing them provisioning the networks volumes virtual machines etc but as a kubernetes",
    "start": "117920",
    "end": "126000"
  },
  {
    "text": "developer we need a homogeneous clusters so that this helps the developers to be",
    "start": "126000",
    "end": "131200"
  },
  {
    "text": "more cloud agnostic next comes for the operators there should be some",
    "start": "131200",
    "end": "136560"
  },
  {
    "text": "backup and restore in place for the kubernetes clusters itself so that this will help them in hand",
    "start": "136560",
    "end": "141760"
  },
  {
    "text": "during disaster recovery times and people working on kubernetes are more familiar with",
    "start": "141760",
    "end": "147760"
  },
  {
    "text": "going off declarative way of creating a kubernetes or clothes like just a spec which shows your containers and how many replicas you",
    "start": "147760",
    "end": "154319"
  },
  {
    "text": "want to run and just deploy it on kubernetes similar approach why don't we can't have for our",
    "start": "154319",
    "end": "160239"
  },
  {
    "text": "kubernetes say a kubernetes spec would be like giving a what is the kubernetes version",
    "start": "160239",
    "end": "166319"
  },
  {
    "text": "which you want to run what is the worker node type on what cloud provider you want to run what is the os image you want to run and",
    "start": "166319",
    "end": "173360"
  },
  {
    "text": "those steps this will be a good one right next thing comes more important is about",
    "start": "173360",
    "end": "179120"
  },
  {
    "text": "extensibility a solution which needs to be more extensible to adopt new features when needed and it",
    "start": "179120",
    "end": "186959"
  },
  {
    "text": "should be extensible to adopt new crowd providers whenever in place in the future",
    "start": "186959",
    "end": "192959"
  },
  {
    "text": "so we will see what are the common cluster setup how we have in current situations",
    "start": "192959",
    "end": "198159"
  },
  {
    "text": "we'll take us some small example of bunch of worker nodes which we have some leader nodes in which we host our control plane",
    "start": "198159",
    "end": "204239"
  },
  {
    "text": "components here you can see we have ha for leader nodes to make our ha for our control",
    "start": "204239",
    "end": "210799"
  },
  {
    "text": "plane components let's take some example of different kubernetes clusters of varying sizes",
    "start": "210799",
    "end": "216879"
  },
  {
    "text": "here you could see there are few worker nodes in one kubernetes cluster and there are lot",
    "start": "216879",
    "end": "222319"
  },
  {
    "text": "of kubernetes worker nodes in some other kubernetes cluster here the load is uneven when you think of",
    "start": "222319",
    "end": "229120"
  },
  {
    "text": "fewer worker machines big small small clusters the leaders are under utilized",
    "start": "229120",
    "end": "234159"
  },
  {
    "text": "leader nodes when you're going for bigger clusters the leader should be over utilized and",
    "start": "234159",
    "end": "240080"
  },
  {
    "text": "this will limit us in scaling capabilities so we want to how we will see how our approach will",
    "start": "240080",
    "end": "247599"
  },
  {
    "text": "help us in solutioning these cases let's take a end user cluster here we call it as a",
    "start": "247599",
    "end": "253920"
  },
  {
    "text": "shoot cluster here you can see the normal kubernetes workloads and our",
    "start": "253920",
    "end": "260079"
  },
  {
    "text": "leader node which has the control pin components we'll have one more cd cluster that this is nothing but",
    "start": "260079",
    "end": "266000"
  },
  {
    "text": "another kubernetes cluster we just take the control pane components of the shoot cluster inducer cluster",
    "start": "266000",
    "end": "271600"
  },
  {
    "text": "and place it as work in this seed cluster we host control pin",
    "start": "271600",
    "end": "277759"
  },
  {
    "text": "components of multiple kubernetes cluster and we just operate them now who is going to uh take care of this",
    "start": "277759",
    "end": "285040"
  },
  {
    "text": "shoot and cd clusters is our guy gardener gunner is nothing but kubernetes or",
    "start": "285040",
    "end": "291040"
  },
  {
    "text": "clothes which run in another kubernetes clusters here you could see garner comprises of some more components",
    "start": "291040",
    "end": "298160"
  },
  {
    "text": "like similar to kubernetes like you garner ap server ghana controller manager garden",
    "start": "298160",
    "end": "303759"
  },
  {
    "text": "scheduler and gardner dashboard this looks will take into a simple",
    "start": "303759",
    "end": "309280"
  },
  {
    "text": "approach what we want to deliver we want here you can see everywhere we speak about kubernetes",
    "start": "309280",
    "end": "315440"
  },
  {
    "text": "not nothing apart from that here we delegate we delegate only the worker notes to the end users",
    "start": "315440",
    "end": "321199"
  },
  {
    "text": "and the garner will take care of managing the worker nodes and as well as the control plane components",
    "start": "321199",
    "end": "326880"
  },
  {
    "text": "let's speak about is this more simple architecture light let's add some",
    "start": "326880",
    "end": "332000"
  },
  {
    "text": "kayas in it here you could see this is a complete garner architecture which we comprise of all control plane",
    "start": "332000",
    "end": "338560"
  },
  {
    "text": "components of garner and the controlling components of particular suit clusters",
    "start": "338560",
    "end": "344240"
  },
  {
    "text": "and how they communicate with each other let's speak about k it is everyone was familiar with kts",
    "start": "344240",
    "end": "351039"
  },
  {
    "text": "and they learn kubernetes for that garner also follows the same design principle",
    "start": "351039",
    "end": "356240"
  },
  {
    "text": "we don't want to reinvent the will we just learn one's concept that is kubernetes",
    "start": "356240",
    "end": "361360"
  },
  {
    "text": "and apply uniformly o to you gaurav",
    "start": "361360",
    "end": "367360"
  },
  {
    "start": "365000",
    "end": "434000"
  },
  {
    "text": "yeah uh so let's have a recap of how kubernetes works uh so that we can draw",
    "start": "367360",
    "end": "372960"
  },
  {
    "text": "parallel from there uh for the design of a gardener solution uh so we know that we have a cube api",
    "start": "372960",
    "end": "378720"
  },
  {
    "text": "server running in the kubernetes cluster and we also have cubelets running in each of the nodes now when a user wants to create a port",
    "start": "378720",
    "end": "386720"
  },
  {
    "text": "it the user can provide a pod yaml or resource yaml cubescheduler can schedule this part in",
    "start": "386720",
    "end": "392560"
  },
  {
    "text": "in a node and then cubelet can take care of running the part in the in the node sim on the similar lines we have gardner",
    "start": "392560",
    "end": "398960"
  },
  {
    "text": "api server uh which which manages the custom resources and we have garden lids which are",
    "start": "398960",
    "end": "404639"
  },
  {
    "text": "running in each of the seed cluster seed clusters now when a user provides a",
    "start": "404639",
    "end": "409759"
  },
  {
    "text": "shoot resource yaml shoot custom resource yaml which is nothing but a kubernetes",
    "start": "409759",
    "end": "415360"
  },
  {
    "text": "create a cluster request from the user the gardner scheduler can pick up the pick up this request and can schedule",
    "start": "415360",
    "end": "421919"
  },
  {
    "text": "the control plane of the shoot cluster in a seat cluster and garden lit",
    "start": "421919",
    "end": "427440"
  },
  {
    "text": "then then uh can take care of deploying the control plane components in the seat cluster",
    "start": "427440",
    "end": "434880"
  },
  {
    "start": "434000",
    "end": "514000"
  },
  {
    "text": "uh so uh this garner controller manager itself is enough to manage lots and lots of kubernetes",
    "start": "434960",
    "end": "440880"
  },
  {
    "text": "cluster but for a true scalability uh we would want to distribute the logic of",
    "start": "440880",
    "end": "446240"
  },
  {
    "text": "uh deploying the control plane components in the seat cluster we take the learnings from cubelet",
    "start": "446240",
    "end": "452639"
  },
  {
    "text": "cubelet is a primary node agent which runs on every node and is responsible for keeping a pod running",
    "start": "452639",
    "end": "458160"
  },
  {
    "text": "and healthy similarly a garden lit is also a garden agent which runs on each of the seat cluster",
    "start": "458160",
    "end": "464800"
  },
  {
    "text": "and can manage the shoot clusters in which are running or which are responsible uh",
    "start": "464800",
    "end": "470080"
  },
  {
    "text": "which are running in the seat cluster it takes over the job from garner controller manager uh",
    "start": "470080",
    "end": "476160"
  },
  {
    "text": "for reconciling the shoot controller shoot cluster resources it works in the similar way uh the",
    "start": "476160",
    "end": "483120"
  },
  {
    "text": "cubelet works and it depends on the lease objects for the seed heartbeats it paves a way to grow and operate as",
    "start": "483120",
    "end": "489120"
  },
  {
    "text": "many shoot clusters across a gardener landscape it is not necessary to run this garden let",
    "start": "489120",
    "end": "495919"
  },
  {
    "text": "in inside a seed cluster as long as it can talk to the seeds api server which is which is running in the gardner",
    "start": "495919",
    "end": "502240"
  },
  {
    "text": "cluster it also opens up the doors for running a shoot clusters",
    "start": "502240",
    "end": "507759"
  },
  {
    "text": "under firewall since the control plane is managed outside separately by gardner",
    "start": "507759",
    "end": "514640"
  },
  {
    "start": "514000",
    "end": "572000"
  },
  {
    "text": "now since we also want to provide extensibility uh which means that we it should be very",
    "start": "516320",
    "end": "523279"
  },
  {
    "text": "easy for a gardener provider to add support for multiple cloud providers we want",
    "start": "523279",
    "end": "530240"
  },
  {
    "text": "they are something called extension controllers these are cloud specific controllers which know how to talk to the cloud",
    "start": "530240",
    "end": "536800"
  },
  {
    "text": "providers and manage the dns vpcs or other infrastructure needs now",
    "start": "536800",
    "end": "544480"
  },
  {
    "text": "the extension controllers template can be provided as a custom resource to the",
    "start": "544480",
    "end": "549600"
  },
  {
    "text": "gardener and then gardner can take care of for deploying these extension controllers in the seat",
    "start": "549600",
    "end": "554720"
  },
  {
    "text": "cluster so that when a request comes for a shoot cluster for a specific",
    "start": "554720",
    "end": "561279"
  },
  {
    "text": "cloud provider in that case these controllers can deploy the required infrastructure in",
    "start": "561279",
    "end": "566720"
  },
  {
    "text": "the in in the cloud providers",
    "start": "566720",
    "end": "570480"
  },
  {
    "start": "572000",
    "end": "652000"
  },
  {
    "text": "now kubernetes does not have a way or it does not support a way to",
    "start": "575040",
    "end": "581040"
  },
  {
    "text": "create a provision or deprovision machines in the infrastructure so we rely on a component called machine",
    "start": "581040",
    "end": "586880"
  },
  {
    "text": "controller manager which works on the same principles uh uh as of for",
    "start": "586880",
    "end": "592080"
  },
  {
    "text": "a cube controller manager so it provides a declarative way of uh managing the vms of creating the vms",
    "start": "592080",
    "end": "599680"
  },
  {
    "text": "so in the same way that we have deployment controller we have machine deployment controller as part of machine controller",
    "start": "599680",
    "end": "606000"
  },
  {
    "text": "manager machine deployment custom resource takes the number of replicas that of the machines that needs to be",
    "start": "606000",
    "end": "612399"
  },
  {
    "text": "provisioned and it also takes a machine template which which includes details about the machine the size or the os image that",
    "start": "612399",
    "end": "619600"
  },
  {
    "text": "that the machine should have this machine deployment controller then creates a machine set control a machine",
    "start": "619600",
    "end": "625440"
  },
  {
    "text": "set object this machine such object is picked up by the machine set controller and it creates the machines the number",
    "start": "625440",
    "end": "632399"
  },
  {
    "text": "of machines that are created are specified in the replicas field",
    "start": "632399",
    "end": "638000"
  },
  {
    "text": "and then the machine controller create picks up these machine objects and then talks to the",
    "start": "638000",
    "end": "643440"
  },
  {
    "text": "cloud providers uh to actually provision the machines which can then join the kubernetes clusters",
    "start": "643440",
    "end": "649200"
  },
  {
    "text": "as as node objects uh to keep with the control plane append",
    "start": "649200",
    "end": "656720"
  },
  {
    "start": "652000",
    "end": "723000"
  },
  {
    "text": "healthy all the time and to have minimal downtime we also depend on a component called",
    "start": "656720",
    "end": "663279"
  },
  {
    "text": "dependency watchdog so what can happen is when htd or the api server is down",
    "start": "663279",
    "end": "669600"
  },
  {
    "text": "the other controllers in the control plane can go into exponential crash loop back off uh and if uh if and when api server",
    "start": "669600",
    "end": "677279"
  },
  {
    "text": "comes back up it can take a long time for those uh for those controller parts to start",
    "start": "677279",
    "end": "682720"
  },
  {
    "text": "uh running again so what what what dependency watchdog does is that it keeps the watch on the",
    "start": "682720",
    "end": "688959"
  },
  {
    "text": "cd end points for the availability of hdd uh and it also uh keeps a watch on the control plane",
    "start": "688959",
    "end": "695440"
  },
  {
    "text": "pods uh that are going into crash loop back off and if it sees that hdd is down which can potentially result",
    "start": "695440",
    "end": "702959"
  },
  {
    "text": "in controller parts controller manager parts to be down it shoots off or it deletes",
    "start": "702959",
    "end": "709839"
  },
  {
    "text": "those uh ports so that new part is immediately created which is not an exponential backup anymore and",
    "start": "709839",
    "end": "716240"
  },
  {
    "text": "it can start as soon as as soon as the hdd and api server are back up",
    "start": "716240",
    "end": "723519"
  },
  {
    "start": "723000",
    "end": "774000"
  },
  {
    "text": "uh we also rely on cluster auto scaler which we have for the cluster autoscaler",
    "start": "724560",
    "end": "730160"
  },
  {
    "text": "and adapted it to work with machine deployment objects uh with this we can auto scale our shoot",
    "start": "730160",
    "end": "736240"
  },
  {
    "text": "clusters basically the user clusters and the seat cluster which is managing the shoot clusters themselves",
    "start": "736240",
    "end": "742320"
  },
  {
    "text": "but a potential problem there could be uh that if a hcd pod is scheduled on",
    "start": "742320",
    "end": "747760"
  },
  {
    "text": "a node that is getting scaled down it can lead to uh long downtimes so to prevent",
    "start": "747760",
    "end": "755040"
  },
  {
    "text": "such cases we deploy hcd's uh in a separate dedicated worker pool uh so that the",
    "start": "755040",
    "end": "762240"
  },
  {
    "text": "worker pool that hosts the other control plane components of the shoot cluster can still uh be scaled scaled down when the load",
    "start": "762240",
    "end": "770839"
  },
  {
    "text": "decreases uh some of the components like ubpi",
    "start": "770839",
    "end": "777680"
  },
  {
    "start": "774000",
    "end": "853000"
  },
  {
    "text": "server can scale both horizontally and vertically but since vp and hpa don't",
    "start": "777680",
    "end": "784320"
  },
  {
    "text": "work well together when it comes down to the cpu and memory matrix alone",
    "start": "784320",
    "end": "789760"
  },
  {
    "text": "uh we we rely on a controller uh that is hvpa controller it provides a",
    "start": "789760",
    "end": "796720"
  },
  {
    "text": "way to it provides a user with a way to provide",
    "start": "796720",
    "end": "802000"
  },
  {
    "text": "the ways how hp and vpa recommendations can be uh used together uh using a weight-based",
    "start": "802000",
    "end": "808639"
  },
  {
    "text": "scaling so user can provide weights that needs to be given to hp and vp recommendations",
    "start": "808639",
    "end": "814720"
  },
  {
    "text": "it it also does some extra things it also provides some extra flexibility and functionality so for",
    "start": "814720",
    "end": "820639"
  },
  {
    "text": "example a user can provide the thresholds which can be used to",
    "start": "820639",
    "end": "827120"
  },
  {
    "text": "so which provides a way for hvpa controller to apply the recommendations only when certain delta",
    "start": "827199",
    "end": "832639"
  },
  {
    "text": "or the changes uh is reached in the recommendations by hp or vpa it also uh we can also",
    "start": "832639",
    "end": "840000"
  },
  {
    "text": "provide scaling policies uh which can with which user can for example mention a time slot",
    "start": "840000",
    "end": "847760"
  },
  {
    "text": "or during which only a certain kind of scaling should take place",
    "start": "847760",
    "end": "852880"
  },
  {
    "start": "853000",
    "end": "924000"
  },
  {
    "text": "so uh let's see how all of this comes together to provide resilience and a disaster",
    "start": "854399",
    "end": "860399"
  },
  {
    "text": "recovery scenario so in case a shoe cluster has issues uh so if the user's end users",
    "start": "860399",
    "end": "866240"
  },
  {
    "text": "cluster has issues in those kind of cases the kubernetes itself since all of the control pane components",
    "start": "866240",
    "end": "873040"
  },
  {
    "text": "are running in pods and is managed by kubernetes uh the control plane parts can be brought back up by the kubernetes itself",
    "start": "873040",
    "end": "880240"
  },
  {
    "text": "if the machines of uh if the packing machines of the of the users cluster are down then",
    "start": "880240",
    "end": "886800"
  },
  {
    "text": "machine controller manager can take care of uh bringing up new machines",
    "start": "886800",
    "end": "892000"
  },
  {
    "text": "and clearing up the failed machines from the infrastructure uh we rely on hdd backup restore to",
    "start": "892000",
    "end": "898079"
  },
  {
    "text": "provide uh uh backup of the clusters the state itself so in case of uh hdd failure we can",
    "start": "898079",
    "end": "906639"
  },
  {
    "text": "uh use hdds backup which is stored in the cloud to restore the state of uh",
    "start": "906639",
    "end": "912399"
  },
  {
    "text": "of the cluster and gardner itself can reconcile the state of the shoot cluster and",
    "start": "912399",
    "end": "918399"
  },
  {
    "text": "preserves the essence of the shoot cluster itself",
    "start": "918399",
    "end": "922720"
  },
  {
    "text": "so in case the seed cluster which hosts the control planes of many many shoot clusters itself is down",
    "start": "925199",
    "end": "931199"
  },
  {
    "text": "uh so in those kind of cases uh we we rely on the series backup and",
    "start": "931199",
    "end": "936880"
  },
  {
    "text": "restore functionality so for example let's say we have two seed clusters and uh",
    "start": "936880",
    "end": "942240"
  },
  {
    "text": "one of the seed cluster uh has the hosts the control plane of the shoot cluster",
    "start": "942240",
    "end": "947680"
  },
  {
    "text": "now this control plane uh uh the state of the cluster itself is",
    "start": "947680",
    "end": "953920"
  },
  {
    "text": "backed up in a block store and in case a seed goes down uh the gardener can then schedule the",
    "start": "953920",
    "end": "960720"
  },
  {
    "text": "control plane of the of the shoot cluster in a separate uh",
    "start": "960720",
    "end": "966000"
  },
  {
    "text": "in a separate seat and uh when it when the lcd starts there it can restore",
    "start": "966000",
    "end": "972320"
  },
  {
    "text": "uh from the blob store the the state of the cluster and can start managing the shoot cluster from there so",
    "start": "972320",
    "end": "980320"
  },
  {
    "start": "979000",
    "end": "1149000"
  },
  {
    "text": "uh time for a small demo over to you case one",
    "start": "980320",
    "end": "985519"
  },
  {
    "text": "yeah so here you can see how as simple as that to create a kubernetes cluster with our garner",
    "start": "988480",
    "end": "994079"
  },
  {
    "text": "beautiful dashboard just to mention what is the cluster name and this is a given the worker",
    "start": "994079",
    "end": "999360"
  },
  {
    "text": "nodes what is the machine type and where on the cloud provider you just select and gana dashboard gives you the",
    "start": "999360",
    "end": "1005120"
  },
  {
    "text": "cluster in few minutes let's we are more like of declarative way of approaching",
    "start": "1005120",
    "end": "1010160"
  },
  {
    "text": "kubernetes cluster right let's see in a quick demo",
    "start": "1010160",
    "end": "1014560"
  },
  {
    "text": "yeah here you can see a short spec of shoot custom resource here you can see the",
    "start": "1015920",
    "end": "1021040"
  },
  {
    "text": "add-on kubernetes dashboard ingress controller and the cloud profiler is mentioned as aws",
    "start": "1021040",
    "end": "1026640"
  },
  {
    "text": "gonna provide a feature of adding hibernations as well so that you can for the end users can save the cost for",
    "start": "1026640",
    "end": "1033280"
  },
  {
    "text": "creating clusters next comes for the networks here you can mention the",
    "start": "1033280",
    "end": "1038480"
  },
  {
    "text": "network types and the controller worker groups what is the machine type you need what is the machine class you want to",
    "start": "1038480",
    "end": "1045038"
  },
  {
    "text": "create a number of ochre nodes that's it we just apply the shoot yaml in the above and you can see",
    "start": "1045039",
    "end": "1051280"
  },
  {
    "text": "the garnet cluster where we create a shoot custom resource and below pen you could uh will have a",
    "start": "1051280",
    "end": "1056960"
  },
  {
    "text": "watch on the control pin components which will be provisioned in one of the cd cluster",
    "start": "1056960",
    "end": "1062559"
  },
  {
    "text": "you just need to have a watch on the namespace in the upper pan you could see a",
    "start": "1062559",
    "end": "1067760"
  },
  {
    "text": "progressing bar for having the how much the cluster has been created here you can see a",
    "start": "1067760",
    "end": "1073440"
  },
  {
    "text": "terraform part which is in the back and creating the infrastructure resources like vpc",
    "start": "1073440",
    "end": "1078640"
  },
  {
    "text": "networks for the particular kubernetes cluster now hcd is up and running well wait for",
    "start": "1078640",
    "end": "1084080"
  },
  {
    "text": "other control plane components",
    "start": "1084080",
    "end": "1087279"
  },
  {
    "text": "here you could see cloud controller manager and csi driver in cash loop backup because the qb server",
    "start": "1090960",
    "end": "1096880"
  },
  {
    "text": "is still not a trending so how how like governor mentioned the dependency watchdog will keep on",
    "start": "1096880",
    "end": "1102320"
  },
  {
    "text": "watching this crash loop back of parts and once the qbp server is up and running it just kills the cloud",
    "start": "1102320",
    "end": "1108160"
  },
  {
    "text": "controller manager and those things so now we could see the replica set replaced with the new controller manager without",
    "start": "1108160",
    "end": "1114160"
  },
  {
    "text": "uh waiting for us to go for an exponential crash loop backup now we'll wait for a few more minutes we",
    "start": "1114160",
    "end": "1121520"
  },
  {
    "text": "just made a speed up so that we can have a quick view of where the cluster is created",
    "start": "1121520",
    "end": "1127120"
  },
  {
    "text": "you can see a progress is at 87 percentage and almost all the control plane components",
    "start": "1127120",
    "end": "1132559"
  },
  {
    "text": "like ap server cube controller manager our mission controller managers are ready and now the cluster is ready to",
    "start": "1132559",
    "end": "1139039"
  },
  {
    "text": "use so coming back to our main",
    "start": "1139039",
    "end": "1145120"
  },
  {
    "text": "end of the story how okay yeah coming back to the",
    "start": "1145120",
    "end": "1151440"
  },
  {
    "start": "1149000",
    "end": "1337000"
  },
  {
    "text": "end of the presentation take e takeaways so with garner we are able to deliver fully",
    "start": "1151440",
    "end": "1157760"
  },
  {
    "text": "managed homogeneous clusters everywhere at sap we operate thousands of kubernetes clusters",
    "start": "1157760",
    "end": "1163679"
  },
  {
    "text": "across multiple cloud providers like alibaba aws microsoft azure and even on specific",
    "start": "1163679",
    "end": "1170960"
  },
  {
    "text": "government cloud as well we run workloads like hana which is an in-memory database",
    "start": "1170960",
    "end": "1176320"
  },
  {
    "text": "so if you want to reach out to us more about want to learn about garner and involve with us just",
    "start": "1176320",
    "end": "1182000"
  },
  {
    "text": "reach out to us in any of the links below thank you thank you uh so time for uh questions",
    "start": "1182000",
    "end": "1190240"
  },
  {
    "text": "and answers",
    "start": "1190240",
    "end": "1193840"
  },
  {
    "text": "okay reading out the questions which are from the audiences okay",
    "start": "1213919",
    "end": "1222640"
  },
  {
    "text": "uh first question is garner apache 2.0 from top to bottom are there any components that are not published",
    "start": "1222640",
    "end": "1229440"
  },
  {
    "text": "so all the components which are showcased now are in the github are completely open source nothing has",
    "start": "1229440",
    "end": "1235440"
  },
  {
    "text": "been under the hood",
    "start": "1235440",
    "end": "1238399"
  },
  {
    "text": "next question uh how to manage ghana clusters garner managers i think gauru has",
    "start": "1241760",
    "end": "1247760"
  },
  {
    "text": "unanswered it",
    "start": "1247760",
    "end": "1250640"
  },
  {
    "text": "okay so others is it possible to change the vpn to another type",
    "start": "1260840",
    "end": "1266559"
  },
  {
    "text": "like wire guard so here uh we garner itself has a package of providing",
    "start": "1266559",
    "end": "1272400"
  },
  {
    "text": "a uh vpn inside it it's possible to change as per your own need",
    "start": "1272400",
    "end": "1280320"
  },
  {
    "text": "okay many of you answered about sharing the slides yeah definitely we will share the slides with you",
    "start": "1285280",
    "end": "1292240"
  },
  {
    "text": "next uh how do you support uh on-prem clusters so gardner provides an whatever ready",
    "start": "1293440",
    "end": "1300080"
  },
  {
    "text": "extensibility to profile to offer across different cloud providers and we can even uh if you have your own",
    "start": "1300080",
    "end": "1307280"
  },
  {
    "text": "cloud providers or anything it's just an extensibility to create your own uh cloud provider extensions and uh",
    "start": "1307280",
    "end": "1314480"
  },
  {
    "text": "we can you can be even gonna canon and non-prominent clusters",
    "start": "1314480",
    "end": "1319840"
  },
  {
    "text": "okay does garner work with other os like flat car tallows so uh",
    "start": "1330240",
    "end": "1338080"
  },
  {
    "text": "there is an option so it uh garner is completely extensible as a gun as gauro told you can bring your own os",
    "start": "1338080",
    "end": "1345360"
  },
  {
    "text": "inside this right now we have our own specific os like garner linux and uh it can be on any other os systems",
    "start": "1345360",
    "end": "1353200"
  },
  {
    "text": "for the occur notes can be added to garner go to your line",
    "start": "1353200",
    "end": "1358880"
  },
  {
    "text": "hi uh yeah i i had a network issue so i am back uh so i i'll also",
    "start": "1358880",
    "end": "1366880"
  },
  {
    "text": "try to uh go through some of the questions uh so uh one is how does gardner compare to",
    "start": "1366880",
    "end": "1372320"
  },
  {
    "text": "cluster api um so we have concrete plans",
    "start": "1372320",
    "end": "1377760"
  },
  {
    "text": "to be compliant with last cluster api cluster api today supports extensible control plane",
    "start": "1377760",
    "end": "1383440"
  },
  {
    "text": "providers so the default is right now cube adm and the plan is to extend the control",
    "start": "1383440",
    "end": "1389360"
  },
  {
    "text": "plane provider uh crd uh with gardner provider so uh yes uh if we have a concrete plan",
    "start": "1389360",
    "end": "1396720"
  },
  {
    "text": "to uh get on uh with it",
    "start": "1396720",
    "end": "1402400"
  },
  {
    "text": "so uh another question is what is the largest shoot that we are running so uh the largest shoot is not",
    "start": "1402400",
    "end": "1409760"
  },
  {
    "text": "really uh uh uh limited by gardner itself uh but since we try uh from what we have",
    "start": "1409760",
    "end": "1416640"
  },
  {
    "text": "tested we have tested with 250 cluster shoot notes uh but it is not really about the number of nodes but",
    "start": "1416640",
    "end": "1423200"
  },
  {
    "text": "what kind of load we are putting on the api server and how much extent we are we are ready to load the api server so",
    "start": "1423200",
    "end": "1430640"
  },
  {
    "text": "we have tested from our own requirements and we have been able to load the api server to",
    "start": "1430640",
    "end": "1436559"
  },
  {
    "text": "around 1000 or 1500 requests per second where we were running 110 node",
    "start": "1436559",
    "end": "1442880"
  },
  {
    "text": "ports per node and each of these pods also had secrets and config maps",
    "start": "1442880",
    "end": "1448880"
  },
  {
    "text": "attached to them so they had their own load on api server because of those kind of configurations",
    "start": "1448880",
    "end": "1456720"
  },
  {
    "text": "uh so uh another question is how does uh",
    "start": "1456799",
    "end": "1462400"
  },
  {
    "text": "how does garner manage kubernetes cluster version upgrades yeah how does garner manage a kubernetes",
    "start": "1464000",
    "end": "1470159"
  },
  {
    "text": "cluster version upgrade so you can see from the thing uh whatever whichever the upstream",
    "start": "1470159",
    "end": "1475200"
  },
  {
    "text": "things coming from kubernetes releases uh garner make sure it's also as part of garner we take the",
    "start": "1475200",
    "end": "1482880"
  },
  {
    "text": "kubernetes release oceans and keep uh upstream to the governor so you can get the upstream kubernetes",
    "start": "1482880",
    "end": "1489360"
  },
  {
    "text": "resources on garner as well okay another question is do the shoot",
    "start": "1489360",
    "end": "1496640"
  },
  {
    "text": "cluster need to be homogeneous or they can be from multiple managed providers so as of now uh the shoot clusters can",
    "start": "1496640",
    "end": "1503760"
  },
  {
    "text": "only be configured a bunch single shoot cluster can only be configured in one cloud provider but",
    "start": "1503760",
    "end": "1509679"
  },
  {
    "text": "one gardner cluster can manage to shoot clusters across cloud providers so you can at the same time create",
    "start": "1509679",
    "end": "1516240"
  },
  {
    "text": "multiple kubernetes clusters which can be managed by a single gardner cluster which can span across",
    "start": "1516240",
    "end": "1522240"
  },
  {
    "text": "cloud providers or even bare metal so the support is there for bare metal as long as the infrastructure provider",
    "start": "1522240",
    "end": "1528880"
  },
  {
    "text": "provides a clear api for creating uh machines load balancers volumes",
    "start": "1528880",
    "end": "1534640"
  },
  {
    "text": "attaching volumes and things like that as long as these kind of apis are provided",
    "start": "1534640",
    "end": "1542158"
  },
  {
    "start": "1547000",
    "end": "1655000"
  },
  {
    "text": "yeah one more question is digital ocean supported yeah there are some pull",
    "start": "1548640",
    "end": "1554960"
  },
  {
    "text": "requests i believe which are on the part uh we can it's just like uh how you onboard a new cloud provider we",
    "start": "1554960",
    "end": "1561200"
  },
  {
    "text": "just have to create an extension for the particular pro providers and it's uh definitely possible to onboard work with",
    "start": "1561200",
    "end": "1567840"
  },
  {
    "text": "a digital ocean as well okay a lot of people are asking for",
    "start": "1567840",
    "end": "1573760"
  },
  {
    "text": "slides also so uh just to let everyone know uh the slides will be available uh after around 40 48 hours",
    "start": "1573760",
    "end": "1581360"
  },
  {
    "text": "on the website so another question is can we use hp and vpa together",
    "start": "1581360",
    "end": "1586640"
  },
  {
    "text": "so uh in from our experience hp and vpa when they are just left on their own uh",
    "start": "1586640",
    "end": "1592480"
  },
  {
    "text": "and are left on their own to work with the same set of matrices like cpu and memory",
    "start": "1592480",
    "end": "1597679"
  },
  {
    "text": "there might be some clashes and some stability but what we have tried with hvpa controller",
    "start": "1597679",
    "end": "1603200"
  },
  {
    "text": "uh is to kind of get control of actually do the scaling uh ourselves",
    "start": "1603200",
    "end": "1609679"
  },
  {
    "text": "and let hp and vpa only work uh to give the recommendations based on",
    "start": "1609679",
    "end": "1615600"
  },
  {
    "text": "the usages so once the recommendations from hp and vpa are in",
    "start": "1615600",
    "end": "1620640"
  },
  {
    "text": "hvpa controllers takes those recommendations and the idea is to scale according to a a spec",
    "start": "1620640",
    "end": "1628000"
  },
  {
    "text": "that is provided by the user to the hvpa controller and uh so this is how we we have been trying",
    "start": "1628000",
    "end": "1633440"
  },
  {
    "text": "to run both hp and vpa together and uh until now it uh we we are very happy",
    "start": "1633440",
    "end": "1639520"
  },
  {
    "text": "with the way we were able to make it work and uh it's and the results have been promising",
    "start": "1639520",
    "end": "1644640"
  },
  {
    "text": "so we use this for our qbp as our scaling since this is one of the components that can scale both horizontally and vertically",
    "start": "1644640",
    "end": "1655840"
  },
  {
    "text": "and one more question this will garner can manage the clusters across different data centers yeah i think you meaning",
    "start": "1655919",
    "end": "1662159"
  },
  {
    "text": "different data centers it's like according to the regions yeah so we operate clusters across different multiple or over 50",
    "start": "1662159",
    "end": "1669520"
  },
  {
    "text": "plus regions across the different cloud providers so it's just like a",
    "start": "1669520",
    "end": "1675279"
  },
  {
    "text": "garden let lies on the particular seed cluster and it manages those two clusters laying in that particular",
    "start": "1675279",
    "end": "1681279"
  },
  {
    "text": "seed cluster so it's possible it's already in that",
    "start": "1681279",
    "end": "1686880"
  },
  {
    "text": "another question is can it work with open shift or only specific distribution of kts so",
    "start": "1687840",
    "end": "1695120"
  },
  {
    "text": "we are working on collaborating with ibm and reddit so that a support for",
    "start": "1695120",
    "end": "1701679"
  },
  {
    "text": "openshift flavored kubernetes can also be provided on ibm machines",
    "start": "1701679",
    "end": "1711840"
  },
  {
    "text": "uh another question is does gardner work with other os like flag car tellers so right now",
    "start": "1712240",
    "end": "1718960"
  },
  {
    "text": "since the architecture is extensible the support for oss can be plugged in as",
    "start": "1718960",
    "end": "1726320"
  },
  {
    "text": "an extension and we support a bunch of",
    "start": "1726320",
    "end": "1731760"
  },
  {
    "text": "operating systems already",
    "start": "1731760",
    "end": "1734960"
  },
  {
    "text": "uh could it be used for bare metal kubernetes clusters yes uh as already and answered",
    "start": "1736960",
    "end": "1742320"
  },
  {
    "text": "uh it can be used as long as we already uh support bare metal stack uh",
    "start": "1742320",
    "end": "1748240"
  },
  {
    "text": "the the metal stack which for example which provides a bare metal infrastructure",
    "start": "1748240",
    "end": "1756000"
  },
  {
    "start": "1757000",
    "end": "1897000"
  },
  {
    "text": "one more question if i want to want a short cluster to be upgraded to your new cube version on the run without downtime",
    "start": "1758559",
    "end": "1766159"
  },
  {
    "text": "does garner automate the upgrade process can garner do it in a canary fashion so that the",
    "start": "1766159",
    "end": "1771840"
  },
  {
    "text": "version upgrade is rolled back in case of trouble uh yeah what happened",
    "start": "1771840",
    "end": "1777360"
  },
  {
    "text": "means uh they might have seen in uh gaurav gauros speech like that is a component uh machine",
    "start": "1777360",
    "end": "1782960"
  },
  {
    "text": "controller manager which takes care of uh draining the nodes and",
    "start": "1782960",
    "end": "1789039"
  },
  {
    "text": "setting the workloads on the another bringing up the new worker nodes with the particular kubernetes version",
    "start": "1789039",
    "end": "1794399"
  },
  {
    "text": "so it works seamlessly as a canary version in garner it's just in the dashboard you",
    "start": "1794399",
    "end": "1800240"
  },
  {
    "text": "just have to just press on a button press to upgrade your kubernetes cluster and you can even mention the maintenance",
    "start": "1800240",
    "end": "1807440"
  },
  {
    "text": "window time where the cluster upgrade has to be happen",
    "start": "1807440",
    "end": "1813039"
  },
  {
    "text": "uh another question is how to manage gardner cluster itself or the gardener manages the kernel",
    "start": "1814960",
    "end": "1820000"
  },
  {
    "text": "cluster itself so uh the first cluster the gardner cluster needs to be created somehow uh it is not managed by gardner",
    "start": "1820000",
    "end": "1827279"
  },
  {
    "text": "itself it can be any uh cluster that is created using uh or it could be gke or aks",
    "start": "1827279",
    "end": "1834080"
  },
  {
    "text": "but after that once gardiner colors cluster is created the creation of c pluses and shoe clusters can be all or",
    "start": "1834080",
    "end": "1840240"
  },
  {
    "text": "the three clusters and shoot clusters can all be managed",
    "start": "1840240",
    "end": "1851840"
  },
  {
    "text": "i think we have answered almost all the questions i guess uh yeah i",
    "start": "1859440",
    "end": "1866559"
  },
  {
    "text": "i don't see if in case like i have miss i'm missing uh some of the questions if we are if we have missed",
    "start": "1866559",
    "end": "1872880"
  },
  {
    "text": "some of the questions please feel free to reach out on the slack channel or we can also reach",
    "start": "1872880",
    "end": "1878240"
  },
  {
    "text": "out to the gardener our team from the slack channel link that is provided on the slide so uh thanks again for",
    "start": "1878240",
    "end": "1886399"
  },
  {
    "text": "everyone for tuning in uh thanks case one",
    "start": "1886399",
    "end": "1892240"
  },
  {
    "text": "thank you everyone happy learning bye",
    "start": "1892240",
    "end": "1899200"
  }
]