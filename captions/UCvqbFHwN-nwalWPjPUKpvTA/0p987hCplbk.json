[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "hi my name's liz rice you may know me",
    "start": "1199",
    "end": "3919"
  },
  {
    "text": "through my role with the cncf where i am",
    "start": "3919",
    "end": "7120"
  },
  {
    "text": "the chair of the technical oversight",
    "start": "7120",
    "end": "8720"
  },
  {
    "text": "committee",
    "start": "8720",
    "end": "10080"
  },
  {
    "text": "and i am also the chief open source",
    "start": "10080",
    "end": "12160"
  },
  {
    "text": "officer for isovalent which is a company",
    "start": "12160",
    "end": "15679"
  },
  {
    "text": "very involved in ebpf technology",
    "start": "15679",
    "end": "18640"
  },
  {
    "text": "and we're also the original creators of",
    "start": "18640",
    "end": "21199"
  },
  {
    "text": "the psyllium project",
    "start": "21199",
    "end": "23840"
  },
  {
    "text": "i've done some talks before",
    "start": "23840",
    "end": "25840"
  },
  {
    "text": "introducing what ebpf is and how to",
    "start": "25840",
    "end": "28960"
  },
  {
    "text": "write your first ebpf programs and today",
    "start": "28960",
    "end": "32320"
  },
  {
    "text": "i want to take that",
    "start": "32320",
    "end": "34160"
  },
  {
    "text": "down the path of networking and",
    "start": "34160",
    "end": "36160"
  },
  {
    "text": "introduce you to some of the ways that",
    "start": "36160",
    "end": "38239"
  },
  {
    "text": "you can",
    "start": "38239",
    "end": "39840"
  },
  {
    "text": "use ebpf in networking functionality",
    "start": "39840",
    "end": "45160"
  },
  {
    "text": "now you probably know that ebpf allows",
    "start": "45200",
    "end": "48399"
  },
  {
    "text": "us to run custom code in the kernel we",
    "start": "48399",
    "end": "51280"
  },
  {
    "text": "can write programs",
    "start": "51280",
    "end": "53680"
  },
  {
    "text": "that we load into the kernel",
    "start": "53680",
    "end": "55920"
  },
  {
    "text": "and",
    "start": "55920",
    "end": "57039"
  },
  {
    "text": "we have them triggered in response to",
    "start": "57039",
    "end": "60239"
  },
  {
    "text": "events",
    "start": "60239",
    "end": "62239"
  },
  {
    "text": "there's a huge range of different events",
    "start": "62239",
    "end": "64640"
  },
  {
    "text": "that we can use to",
    "start": "64640",
    "end": "66560"
  },
  {
    "text": "cause an ebpf program to run",
    "start": "66560",
    "end": "70479"
  },
  {
    "text": "you'll probably have seen examples",
    "start": "70479",
    "end": "72880"
  },
  {
    "text": "involving",
    "start": "72880",
    "end": "74240"
  },
  {
    "text": "system calls",
    "start": "74240",
    "end": "76720"
  },
  {
    "text": "for example the",
    "start": "76720",
    "end": "78560"
  },
  {
    "text": "k probe which is the function entry",
    "start": "78560",
    "end": "81439"
  },
  {
    "text": "point to",
    "start": "81439",
    "end": "83840"
  },
  {
    "text": "well the entry point to a function that",
    "start": "83840",
    "end": "85840"
  },
  {
    "text": "runs when a particular system call is",
    "start": "85840",
    "end": "89600"
  },
  {
    "text": "called by a user space application",
    "start": "89600",
    "end": "92720"
  },
  {
    "text": "but system calls are really just the",
    "start": "92720",
    "end": "94479"
  },
  {
    "text": "beginning there are many many other",
    "start": "94479",
    "end": "96479"
  },
  {
    "text": "places",
    "start": "96479",
    "end": "97600"
  },
  {
    "text": "in a linux machine where we can attach",
    "start": "97600",
    "end": "100640"
  },
  {
    "text": "evpf",
    "start": "100640",
    "end": "101920"
  },
  {
    "text": "uh programs",
    "start": "101920",
    "end": "104320"
  },
  {
    "text": "so the typical hello world program that",
    "start": "104320",
    "end": "106720"
  },
  {
    "text": "i would normally write for uh an",
    "start": "106720",
    "end": "109680"
  },
  {
    "text": "illustration would attach to a system",
    "start": "109680",
    "end": "112479"
  },
  {
    "text": "call like exec ve",
    "start": "112479",
    "end": "114399"
  },
  {
    "text": "and whenever a user space application",
    "start": "114399",
    "end": "116719"
  },
  {
    "text": "calls that system call",
    "start": "116719",
    "end": "118640"
  },
  {
    "text": "exec ve is used to run a new executable",
    "start": "118640",
    "end": "122799"
  },
  {
    "text": "so every time user space",
    "start": "122799",
    "end": "125040"
  },
  {
    "text": "for example you type a new program name",
    "start": "125040",
    "end": "127439"
  },
  {
    "text": "into your",
    "start": "127439",
    "end": "128399"
  },
  {
    "text": "shell you hit return that causes xactv",
    "start": "128399",
    "end": "131680"
  },
  {
    "text": "to run that program",
    "start": "131680",
    "end": "134720"
  },
  {
    "text": "and",
    "start": "134720",
    "end": "136239"
  },
  {
    "text": "we might write a hello world example",
    "start": "136239",
    "end": "138080"
  },
  {
    "text": "that attaches to the entry point the k",
    "start": "138080",
    "end": "141280"
  },
  {
    "text": "probe of that exec ve function",
    "start": "141280",
    "end": "144000"
  },
  {
    "text": "and that would generate some tracing",
    "start": "144000",
    "end": "146239"
  },
  {
    "text": "every time someone ran a new program",
    "start": "146239",
    "end": "149280"
  },
  {
    "text": "and that tracing would include some",
    "start": "149280",
    "end": "151040"
  },
  {
    "text": "contextual information about the process",
    "start": "151040",
    "end": "153840"
  },
  {
    "text": "that was running that triggered that",
    "start": "153840",
    "end": "156959"
  },
  {
    "text": "call",
    "start": "156959",
    "end": "158080"
  },
  {
    "text": "that particular function call that",
    "start": "158080",
    "end": "159840"
  },
  {
    "text": "system call in this case",
    "start": "159840",
    "end": "162959"
  },
  {
    "text": "but",
    "start": "163040",
    "end": "164239"
  },
  {
    "text": "k probes are really just one of many",
    "start": "164239",
    "end": "167200"
  },
  {
    "text": "different types of evpf program there",
    "start": "167200",
    "end": "170560"
  },
  {
    "text": "are a long list of different ebpf",
    "start": "170560",
    "end": "173840"
  },
  {
    "text": "program types that we can attach to",
    "start": "173840",
    "end": "175920"
  },
  {
    "text": "different types of events so ebpf is not",
    "start": "175920",
    "end": "179599"
  },
  {
    "text": "just about tracing system calls system",
    "start": "179599",
    "end": "182560"
  },
  {
    "text": "calls are the interface between user",
    "start": "182560",
    "end": "184640"
  },
  {
    "text": "space and the kernel",
    "start": "184640",
    "end": "187360"
  },
  {
    "text": "there's a huge uh",
    "start": "187360",
    "end": "190239"
  },
  {
    "text": "wealth of other places where we can",
    "start": "190239",
    "end": "192640"
  },
  {
    "text": "attach ebpf programs",
    "start": "192640",
    "end": "196000"
  },
  {
    "text": "another illustration of that is this",
    "start": "196000",
    "end": "198239"
  },
  {
    "text": "diagram",
    "start": "198239",
    "end": "199440"
  },
  {
    "text": "from bcc so this is a whole set of",
    "start": "199440",
    "end": "203760"
  },
  {
    "text": "ebpf based",
    "start": "203760",
    "end": "205680"
  },
  {
    "text": "observability tools and i think brendan",
    "start": "205680",
    "end": "208319"
  },
  {
    "text": "greg was probably responsible for this",
    "start": "208319",
    "end": "209920"
  },
  {
    "text": "diagram",
    "start": "209920",
    "end": "211599"
  },
  {
    "text": "the point of showing this is to",
    "start": "211599",
    "end": "213120"
  },
  {
    "text": "illustrate a huge range of different",
    "start": "213120",
    "end": "216080"
  },
  {
    "text": "parts of the system that can be",
    "start": "216080",
    "end": "217519"
  },
  {
    "text": "instrumented using evpf and today we're",
    "start": "217519",
    "end": "220720"
  },
  {
    "text": "mostly going to concentrate on that",
    "start": "220720",
    "end": "222000"
  },
  {
    "text": "green box in the middle that is really",
    "start": "222000",
    "end": "224239"
  },
  {
    "text": "about networking related activity",
    "start": "224239",
    "end": "227840"
  },
  {
    "text": "another way we can look at the range of",
    "start": "228080",
    "end": "230959"
  },
  {
    "text": "different events that we can hook into",
    "start": "230959",
    "end": "233040"
  },
  {
    "text": "is with perf list",
    "start": "233040",
    "end": "236400"
  },
  {
    "text": "so",
    "start": "236400",
    "end": "237519"
  },
  {
    "text": "if i bring up my screen we can ignore",
    "start": "237519",
    "end": "239200"
  },
  {
    "text": "the code at the top for now and i'll",
    "start": "239200",
    "end": "240879"
  },
  {
    "text": "just run perth list",
    "start": "240879",
    "end": "243360"
  },
  {
    "text": "and you'll see a huge number of",
    "start": "243360",
    "end": "245920"
  },
  {
    "text": "different types of events",
    "start": "245920",
    "end": "248480"
  },
  {
    "text": "that",
    "start": "248480",
    "end": "249760"
  },
  {
    "text": "we can instrument with perth",
    "start": "249760",
    "end": "251920"
  },
  {
    "text": "and",
    "start": "251920",
    "end": "254400"
  },
  {
    "text": "there's just lots and lots of them",
    "start": "254400",
    "end": "258160"
  },
  {
    "text": "so",
    "start": "258160",
    "end": "259359"
  },
  {
    "text": "i hope that gives you a sense that there",
    "start": "259359",
    "end": "262000"
  },
  {
    "text": "are a lot",
    "start": "262000",
    "end": "264240"
  },
  {
    "text": "of places a huge surface to which we can",
    "start": "264240",
    "end": "266960"
  },
  {
    "text": "attach evpf programs",
    "start": "266960",
    "end": "270479"
  },
  {
    "start": "270000",
    "end": "710000"
  },
  {
    "text": "there's a huge set of network related",
    "start": "270880",
    "end": "273360"
  },
  {
    "text": "events where we can attach evpf programs",
    "start": "273360",
    "end": "276080"
  },
  {
    "text": "i won't have time to cover all of them",
    "start": "276080",
    "end": "279680"
  },
  {
    "text": "but let's try and introduce ourselves to",
    "start": "279680",
    "end": "282000"
  },
  {
    "text": "a selection of networking",
    "start": "282000",
    "end": "284880"
  },
  {
    "text": "events and how we might use them to",
    "start": "284880",
    "end": "286720"
  },
  {
    "text": "build network related functionality",
    "start": "286720",
    "end": "289600"
  },
  {
    "text": "using ebpf",
    "start": "289600",
    "end": "292639"
  },
  {
    "text": "so the first place to start would be",
    "start": "293120",
    "end": "295199"
  },
  {
    "text": "with k probes there are lots and lots of",
    "start": "295199",
    "end": "298400"
  },
  {
    "text": "functions that relate to",
    "start": "298400",
    "end": "300800"
  },
  {
    "text": "networking",
    "start": "300800",
    "end": "303039"
  },
  {
    "text": "every time we",
    "start": "303039",
    "end": "305039"
  },
  {
    "text": "call into the entry or exit from any",
    "start": "305039",
    "end": "307680"
  },
  {
    "text": "function in the kernel we can trigger an",
    "start": "307680",
    "end": "310400"
  },
  {
    "text": "ebpf program we can attach it using a k",
    "start": "310400",
    "end": "312720"
  },
  {
    "text": "probe or a k rep probe for the exit",
    "start": "312720",
    "end": "315680"
  },
  {
    "text": "and as an example we can use",
    "start": "315680",
    "end": "318400"
  },
  {
    "text": "the",
    "start": "318400",
    "end": "319520"
  },
  {
    "text": "kernel function that gets called when a",
    "start": "319520",
    "end": "321280"
  },
  {
    "text": "tcp connection is set",
    "start": "321280",
    "end": "323680"
  },
  {
    "text": "so this is going to be the sort of hello",
    "start": "323680",
    "end": "325600"
  },
  {
    "text": "world example for networking",
    "start": "325600",
    "end": "328639"
  },
  {
    "text": "i'm going to be using the bcc framework",
    "start": "328639",
    "end": "331360"
  },
  {
    "text": "which uh is a good place to start if",
    "start": "331360",
    "end": "333360"
  },
  {
    "text": "you're familiar with python it makes it",
    "start": "333360",
    "end": "336320"
  },
  {
    "text": "very easy to write your user space code",
    "start": "336320",
    "end": "341360"
  },
  {
    "text": "it will run the compilation step for you",
    "start": "341360",
    "end": "343919"
  },
  {
    "text": "to compile your bpf programs that are",
    "start": "343919",
    "end": "346639"
  },
  {
    "text": "going to run in the kernel makes it easy",
    "start": "346639",
    "end": "348800"
  },
  {
    "text": "to attach those to events as you'll see",
    "start": "348800",
    "end": "353759"
  },
  {
    "text": "so",
    "start": "353759",
    "end": "354560"
  },
  {
    "text": "my user space code starts by reading",
    "start": "354560",
    "end": "358240"
  },
  {
    "text": "and compiling the",
    "start": "358240",
    "end": "360639"
  },
  {
    "text": "evpf functions that i've written into",
    "start": "360639",
    "end": "363039"
  },
  {
    "text": "this c file network.c we'll look at that",
    "start": "363039",
    "end": "365120"
  },
  {
    "text": "in a moment",
    "start": "365120",
    "end": "367039"
  },
  {
    "text": "and it's going to attach",
    "start": "367039",
    "end": "369120"
  },
  {
    "text": "a function that's called tcp connect to",
    "start": "369120",
    "end": "372479"
  },
  {
    "text": "the event",
    "start": "372479",
    "end": "374080"
  },
  {
    "text": "that's associated with the entry to",
    "start": "374080",
    "end": "376880"
  },
  {
    "text": "tcp v4 connect",
    "start": "376880",
    "end": "380319"
  },
  {
    "text": "and",
    "start": "380319",
    "end": "381360"
  },
  {
    "text": "i've got a little bit of debugging",
    "start": "381360",
    "end": "383039"
  },
  {
    "text": "that's going to tell us when my ebpf",
    "start": "383039",
    "end": "385759"
  },
  {
    "text": "programs are loaded and we're ready to",
    "start": "385759",
    "end": "387199"
  },
  {
    "text": "go",
    "start": "387199",
    "end": "388160"
  },
  {
    "text": "and then my user space code is going to",
    "start": "388160",
    "end": "390880"
  },
  {
    "text": "print out whatever tracing has been",
    "start": "390880",
    "end": "392639"
  },
  {
    "text": "generated by my ebpf code",
    "start": "392639",
    "end": "396240"
  },
  {
    "text": "and let's take a look the function here",
    "start": "396240",
    "end": "398639"
  },
  {
    "text": "is very simple my tcp connect program",
    "start": "398639",
    "end": "401919"
  },
  {
    "text": "simply traces out a message",
    "start": "401919",
    "end": "406360"
  },
  {
    "text": "uh let's just take a quick look at the",
    "start": "408880",
    "end": "410560"
  },
  {
    "text": "interface in my container",
    "start": "410560",
    "end": "412639"
  },
  {
    "text": "which has a loopback interface and f0",
    "start": "412639",
    "end": "416800"
  },
  {
    "text": "and the s0 address is 172.17.0.2.",
    "start": "416800",
    "end": "421960"
  },
  {
    "text": "so let's",
    "start": "424560",
    "end": "426479"
  },
  {
    "text": "run this code which is very",
    "start": "426479",
    "end": "430160"
  },
  {
    "text": "very straightforward if i can type",
    "start": "430560",
    "end": "433440"
  },
  {
    "text": "there we go",
    "start": "433440",
    "end": "435520"
  },
  {
    "text": "and",
    "start": "435520",
    "end": "436400"
  },
  {
    "text": "that tells us it's ready",
    "start": "436400",
    "end": "439039"
  },
  {
    "text": "so",
    "start": "439039",
    "end": "439840"
  },
  {
    "text": "first thing to notice is there could be",
    "start": "439840",
    "end": "442000"
  },
  {
    "text": "other tcp connections um being generated",
    "start": "442000",
    "end": "444720"
  },
  {
    "text": "on this machine and",
    "start": "444720",
    "end": "446720"
  },
  {
    "text": "my",
    "start": "446720",
    "end": "447919"
  },
  {
    "text": "ebpf program is going to see all of them",
    "start": "447919",
    "end": "453120"
  },
  {
    "text": "if i run a curl request to that ip",
    "start": "453120",
    "end": "456000"
  },
  {
    "text": "address we saw a moment ago",
    "start": "456000",
    "end": "458319"
  },
  {
    "text": "i'm not expecting this to succeed",
    "start": "458319",
    "end": "460080"
  },
  {
    "text": "because i don't think there's anything",
    "start": "460080",
    "end": "461199"
  },
  {
    "text": "listening for http requests inside that",
    "start": "461199",
    "end": "463680"
  },
  {
    "text": "container but",
    "start": "463680",
    "end": "465759"
  },
  {
    "text": "we can use it to show that it triggers",
    "start": "465759",
    "end": "469840"
  },
  {
    "text": "my tracing it triggers my ebpf program",
    "start": "470160",
    "end": "472400"
  },
  {
    "text": "to run",
    "start": "472400",
    "end": "474879"
  },
  {
    "text": "okay",
    "start": "475840",
    "end": "477759"
  },
  {
    "text": "so that's k probes now let's move on to",
    "start": "477759",
    "end": "480400"
  },
  {
    "text": "some more networking specific",
    "start": "480400",
    "end": "483360"
  },
  {
    "text": "program types",
    "start": "483360",
    "end": "484800"
  },
  {
    "text": "and the first one we'll look at is",
    "start": "484800",
    "end": "486879"
  },
  {
    "text": "socket filter",
    "start": "486879",
    "end": "488879"
  },
  {
    "text": "so",
    "start": "488879",
    "end": "490240"
  },
  {
    "text": "i'm gonna",
    "start": "490240",
    "end": "491440"
  },
  {
    "text": "attach to a raw socket using this",
    "start": "491440",
    "end": "495280"
  },
  {
    "text": "socket filter program type",
    "start": "495280",
    "end": "497440"
  },
  {
    "text": "and of raw socket",
    "start": "497440",
    "end": "498879"
  },
  {
    "text": "sees traffic coming in and out very",
    "start": "498879",
    "end": "501840"
  },
  {
    "text": "close to the network connection so it's",
    "start": "501840",
    "end": "504560"
  },
  {
    "text": "kind of closer to the network interface",
    "start": "504560",
    "end": "507039"
  },
  {
    "text": "than the rest of the networking stack",
    "start": "507039",
    "end": "510400"
  },
  {
    "text": "socket filtering was designed for",
    "start": "510400",
    "end": "512159"
  },
  {
    "text": "observability",
    "start": "512159",
    "end": "513599"
  },
  {
    "text": "and it's worth noticing this we can look",
    "start": "513599",
    "end": "516320"
  },
  {
    "text": "at packets",
    "start": "516320",
    "end": "517599"
  },
  {
    "text": "and we can make decisions about whether",
    "start": "517599",
    "end": "519440"
  },
  {
    "text": "we want to pass a copy up to user space",
    "start": "519440",
    "end": "522479"
  },
  {
    "text": "for observability purpose",
    "start": "522479",
    "end": "524480"
  },
  {
    "text": "so the idea is that if you were running",
    "start": "524480",
    "end": "527040"
  },
  {
    "text": "some kind of tracing utility in user",
    "start": "527040",
    "end": "528880"
  },
  {
    "text": "space you'd probably want to trace a",
    "start": "528880",
    "end": "531519"
  },
  {
    "text": "subset of packets maybe you would want",
    "start": "531519",
    "end": "533680"
  },
  {
    "text": "to trace tcp packets but not other sorts",
    "start": "533680",
    "end": "537200"
  },
  {
    "text": "of networking activity",
    "start": "537200",
    "end": "539680"
  },
  {
    "text": "so let's try an example of this where",
    "start": "539680",
    "end": "542160"
  },
  {
    "text": "we're going to attach to a raw socket",
    "start": "542160",
    "end": "545519"
  },
  {
    "text": "with a socket filter program type and",
    "start": "545519",
    "end": "547519"
  },
  {
    "text": "we're going to filter the copy of",
    "start": "547519",
    "end": "549120"
  },
  {
    "text": "packets that gets sent to user space",
    "start": "549120",
    "end": "552880"
  },
  {
    "text": "so here's my c code",
    "start": "553760",
    "end": "555760"
  },
  {
    "text": "so this is the the",
    "start": "555760",
    "end": "557279"
  },
  {
    "text": "ebpf program",
    "start": "557279",
    "end": "558880"
  },
  {
    "text": "receives a socket buffer and it's going",
    "start": "558880",
    "end": "561279"
  },
  {
    "text": "to step through that buffer looking",
    "start": "561279",
    "end": "563519"
  },
  {
    "text": "first of all at the ethernet header to",
    "start": "563519",
    "end": "565120"
  },
  {
    "text": "see whether it's an ip packet",
    "start": "565120",
    "end": "567519"
  },
  {
    "text": "if it's not an ip packet it's just going",
    "start": "567519",
    "end": "569200"
  },
  {
    "text": "to return zero",
    "start": "569200",
    "end": "570720"
  },
  {
    "text": "then it looks at the ip header to see",
    "start": "570720",
    "end": "573040"
  },
  {
    "text": "what type of request or what type of",
    "start": "573040",
    "end": "575120"
  },
  {
    "text": "packet this is",
    "start": "575120",
    "end": "576880"
  },
  {
    "text": "and here i'm going to trace out whether",
    "start": "576880",
    "end": "579040"
  },
  {
    "text": "it's icmp icmp commonly known as ping",
    "start": "579040",
    "end": "583760"
  },
  {
    "text": "or",
    "start": "583760",
    "end": "584560"
  },
  {
    "text": "tcp traffic",
    "start": "584560",
    "end": "586720"
  },
  {
    "text": "and if it's tcp traffic i'm going to",
    "start": "586720",
    "end": "589040"
  },
  {
    "text": "return -1 and that tells the kernel i",
    "start": "589040",
    "end": "592800"
  },
  {
    "text": "want to send a copy of this packet to",
    "start": "592800",
    "end": "595600"
  },
  {
    "text": "user space",
    "start": "595600",
    "end": "597839"
  },
  {
    "text": "i'm going to need to write some code in",
    "start": "597839",
    "end": "600000"
  },
  {
    "text": "my user space side to",
    "start": "600000",
    "end": "602079"
  },
  {
    "text": "listen for this traffic so first of all",
    "start": "602079",
    "end": "604320"
  },
  {
    "text": "let's",
    "start": "604320",
    "end": "605680"
  },
  {
    "text": "stop listening to tcp connect events",
    "start": "605680",
    "end": "608880"
  },
  {
    "text": "and instead",
    "start": "608880",
    "end": "611760"
  },
  {
    "text": "we're going to",
    "start": "612000",
    "end": "614800"
  },
  {
    "text": "load a function",
    "start": "614959",
    "end": "616560"
  },
  {
    "text": "load that socket filter",
    "start": "616560",
    "end": "618399"
  },
  {
    "text": "ebpf program",
    "start": "618399",
    "end": "620079"
  },
  {
    "text": "attach it to a raw socket",
    "start": "620079",
    "end": "622399"
  },
  {
    "text": "and then we're also going to",
    "start": "622399",
    "end": "624079"
  },
  {
    "text": "create a socket",
    "start": "624079",
    "end": "625760"
  },
  {
    "text": "that can",
    "start": "625760",
    "end": "627200"
  },
  {
    "text": "where we can receive these copies of the",
    "start": "627200",
    "end": "630079"
  },
  {
    "text": "network packets",
    "start": "630079",
    "end": "632160"
  },
  {
    "text": "and then instead of",
    "start": "632160",
    "end": "634320"
  },
  {
    "text": "printing out the tracing here i'm going",
    "start": "634320",
    "end": "636959"
  },
  {
    "text": "to",
    "start": "636959",
    "end": "637920"
  },
  {
    "text": "read those",
    "start": "637920",
    "end": "640320"
  },
  {
    "text": "read those packets",
    "start": "640320",
    "end": "642079"
  },
  {
    "text": "so i'm going to uncomment that",
    "start": "642079",
    "end": "644880"
  },
  {
    "text": "and indent it",
    "start": "644880",
    "end": "647519"
  },
  {
    "text": "okay",
    "start": "647519",
    "end": "649680"
  },
  {
    "text": "so",
    "start": "649680",
    "end": "651040"
  },
  {
    "text": "as you might recall we're going to pass",
    "start": "651040",
    "end": "653279"
  },
  {
    "text": "tcp traffic up to user space but not",
    "start": "653279",
    "end": "657120"
  },
  {
    "text": "ping",
    "start": "657120",
    "end": "658640"
  },
  {
    "text": "so let's try loading this",
    "start": "658640",
    "end": "661839"
  },
  {
    "text": "so that means if i try and curl to that",
    "start": "662480",
    "end": "664800"
  },
  {
    "text": "address we see",
    "start": "664800",
    "end": "666720"
  },
  {
    "text": "data being uh sent up to user space",
    "start": "666720",
    "end": "670240"
  },
  {
    "text": "but if i",
    "start": "670240",
    "end": "671519"
  },
  {
    "text": "ping the same address",
    "start": "671519",
    "end": "673519"
  },
  {
    "text": "let's just make this slightly wider so",
    "start": "673519",
    "end": "675360"
  },
  {
    "text": "all fits on one line",
    "start": "675360",
    "end": "678320"
  },
  {
    "text": "we can see that the ping is",
    "start": "680399",
    "end": "682640"
  },
  {
    "text": "happening successfully but we didn't see",
    "start": "682640",
    "end": "684880"
  },
  {
    "text": "a copy of that in",
    "start": "684880",
    "end": "686959"
  },
  {
    "text": "the",
    "start": "686959",
    "end": "687760"
  },
  {
    "text": "tracing output",
    "start": "687760",
    "end": "690560"
  },
  {
    "text": "okay",
    "start": "691279",
    "end": "693600"
  },
  {
    "text": "so that's an example of socket filtering",
    "start": "694160",
    "end": "697600"
  },
  {
    "text": "we can only really use this for",
    "start": "697600",
    "end": "699200"
  },
  {
    "text": "observability purposes we can't use it",
    "start": "699200",
    "end": "702399"
  },
  {
    "text": "this is filtering what gets sent to user",
    "start": "702399",
    "end": "704000"
  },
  {
    "text": "space so we couldn't write kernel-based",
    "start": "704000",
    "end": "707279"
  },
  {
    "text": "networking functionality using this",
    "start": "707279",
    "end": "710720"
  },
  {
    "start": "710000",
    "end": "730000"
  },
  {
    "text": "now let's look at xdp",
    "start": "710720",
    "end": "713360"
  },
  {
    "text": "which stands for express data path",
    "start": "713360",
    "end": "716800"
  },
  {
    "text": "now",
    "start": "716800",
    "end": "717839"
  },
  {
    "text": "daniel balkman who is a kernel",
    "start": "717839",
    "end": "719920"
  },
  {
    "text": "maintainer who works at i surveillance",
    "start": "719920",
    "end": "722560"
  },
  {
    "text": "told me a great story about how the idea",
    "start": "722560",
    "end": "725680"
  },
  {
    "text": "for xdp came about",
    "start": "725680",
    "end": "727760"
  },
  {
    "text": "and it was essentially saying wouldn't",
    "start": "727760",
    "end": "729360"
  },
  {
    "text": "it be great",
    "start": "729360",
    "end": "730399"
  },
  {
    "text": "if",
    "start": "730399",
    "end": "731440"
  },
  {
    "text": "we could run ebpf programs rather than",
    "start": "731440",
    "end": "733920"
  },
  {
    "text": "running them on the cpu",
    "start": "733920",
    "end": "736480"
  },
  {
    "text": "what if we could run them on the",
    "start": "736480",
    "end": "737760"
  },
  {
    "text": "hardware itself for networking so when",
    "start": "737760",
    "end": "740079"
  },
  {
    "text": "an inbound packet arrives on the network",
    "start": "740079",
    "end": "742160"
  },
  {
    "text": "interface card if we could inspect that",
    "start": "742160",
    "end": "744480"
  },
  {
    "text": "packet and maybe decide that we're going",
    "start": "744480",
    "end": "746160"
  },
  {
    "text": "to drop it or send it back out the same",
    "start": "746160",
    "end": "748639"
  },
  {
    "text": "interface",
    "start": "748639",
    "end": "749760"
  },
  {
    "text": "if we could do that on the network",
    "start": "749760",
    "end": "751279"
  },
  {
    "text": "interface card it would never have to",
    "start": "751279",
    "end": "754079"
  },
  {
    "text": "spend any resources on the cpu itself",
    "start": "754079",
    "end": "758880"
  },
  {
    "text": "so",
    "start": "758880",
    "end": "760240"
  },
  {
    "text": "if you have a network interface card or",
    "start": "760240",
    "end": "762880"
  },
  {
    "text": "a network driver that supports xdp",
    "start": "762880",
    "end": "766560"
  },
  {
    "text": "you can load vpf programs into",
    "start": "766560",
    "end": "769920"
  },
  {
    "text": "that hardware itself hardware offload",
    "start": "769920",
    "end": "772399"
  },
  {
    "text": "and when a packet arrives on that",
    "start": "772399",
    "end": "774240"
  },
  {
    "text": "network interface it can trigger the",
    "start": "774240",
    "end": "776079"
  },
  {
    "text": "ebpf program that can make decisions",
    "start": "776079",
    "end": "778079"
  },
  {
    "text": "about what to do with that packet",
    "start": "778079",
    "end": "780560"
  },
  {
    "text": "whether or not to pass it up to the",
    "start": "780560",
    "end": "782480"
  },
  {
    "text": "networking stack or not",
    "start": "782480",
    "end": "785360"
  },
  {
    "text": "not all",
    "start": "785360",
    "end": "786720"
  },
  {
    "text": "network cards and network drivers",
    "start": "786720",
    "end": "788639"
  },
  {
    "text": "support xdp so there is support within",
    "start": "788639",
    "end": "791200"
  },
  {
    "text": "the kernel for",
    "start": "791200",
    "end": "793120"
  },
  {
    "text": "loading ebpf programs",
    "start": "793120",
    "end": "795360"
  },
  {
    "text": "as soon as network packets arrive within",
    "start": "795360",
    "end": "798639"
  },
  {
    "text": "the kernel",
    "start": "798639",
    "end": "800560"
  },
  {
    "text": "so that uh you know we can achieve the",
    "start": "800560",
    "end": "802639"
  },
  {
    "text": "same kind of functionality there is some",
    "start": "802639",
    "end": "804959"
  },
  {
    "text": "performance gain because it hasn't had",
    "start": "804959",
    "end": "806560"
  },
  {
    "text": "to traverse the networking stack but",
    "start": "806560",
    "end": "808240"
  },
  {
    "text": "it's it's not quite uh what was intended",
    "start": "808240",
    "end": "810560"
  },
  {
    "text": "by doing that hardware offload",
    "start": "810560",
    "end": "813440"
  },
  {
    "text": "importantly if we're using containers we",
    "start": "813440",
    "end": "816240"
  },
  {
    "text": "can still run xdp because uh with the",
    "start": "816240",
    "end": "820480"
  },
  {
    "text": "kernel implementation of xdp",
    "start": "820480",
    "end": "823839"
  },
  {
    "text": "it can be attached to virtual network",
    "start": "823839",
    "end": "825600"
  },
  {
    "text": "connections as well as physical network",
    "start": "825600",
    "end": "827760"
  },
  {
    "text": "connections",
    "start": "827760",
    "end": "829360"
  },
  {
    "text": "but this is only about inbound packets",
    "start": "829360",
    "end": "833279"
  },
  {
    "text": "if we think about it in the context of a",
    "start": "833279",
    "end": "835040"
  },
  {
    "text": "network card it really makes sense to",
    "start": "835040",
    "end": "837519"
  },
  {
    "text": "process inbound packets as quickly as",
    "start": "837519",
    "end": "839360"
  },
  {
    "text": "possible before we pass them to the cpu",
    "start": "839360",
    "end": "842079"
  },
  {
    "text": "but if the cpu has already handled a",
    "start": "842079",
    "end": "843760"
  },
  {
    "text": "packet and it's on its way out",
    "start": "843760",
    "end": "845760"
  },
  {
    "text": "then",
    "start": "845760",
    "end": "846959"
  },
  {
    "text": "the cpu has already done whatever's",
    "start": "846959",
    "end": "848880"
  },
  {
    "text": "necessary",
    "start": "848880",
    "end": "851440"
  },
  {
    "text": "so",
    "start": "851839",
    "end": "852800"
  },
  {
    "text": "let's take a look at an example of an",
    "start": "852800",
    "end": "856320"
  },
  {
    "text": "xdp program",
    "start": "856320",
    "end": "858959"
  },
  {
    "text": "so in our user space code this is pretty",
    "start": "858959",
    "end": "861040"
  },
  {
    "text": "straightforward we",
    "start": "861040",
    "end": "863199"
  },
  {
    "text": "can",
    "start": "863199",
    "end": "864240"
  },
  {
    "text": "load a function that i've called it xdp",
    "start": "864240",
    "end": "867680"
  },
  {
    "text": "and we attach it to",
    "start": "867680",
    "end": "869360"
  },
  {
    "text": "xdp on the interface",
    "start": "869360",
    "end": "871920"
  },
  {
    "text": "f0 which is the same as what we used for",
    "start": "871920",
    "end": "874160"
  },
  {
    "text": "the socket filter before it's defined up",
    "start": "874160",
    "end": "876320"
  },
  {
    "text": "here",
    "start": "876320",
    "end": "878560"
  },
  {
    "text": "also i want to go back to printing out",
    "start": "879120",
    "end": "881680"
  },
  {
    "text": "tracing",
    "start": "881680",
    "end": "882959"
  },
  {
    "text": "and we're not",
    "start": "882959",
    "end": "884480"
  },
  {
    "text": "dumping the data anymore",
    "start": "884480",
    "end": "886639"
  },
  {
    "text": "let's take a look at that xdp function",
    "start": "886639",
    "end": "890320"
  },
  {
    "text": "so i've",
    "start": "890320",
    "end": "891360"
  },
  {
    "text": "for readability hidden some of the code",
    "start": "891360",
    "end": "893600"
  },
  {
    "text": "inside this is icmpp request",
    "start": "893600",
    "end": "896560"
  },
  {
    "text": "function but it's very similar to what",
    "start": "896560",
    "end": "898880"
  },
  {
    "text": "we just looked at in the socket",
    "start": "898880",
    "end": "900240"
  },
  {
    "text": "filtering case",
    "start": "900240",
    "end": "901839"
  },
  {
    "text": "we're taking the packet we're looking at",
    "start": "901839",
    "end": "903680"
  },
  {
    "text": "the ethernet header and then at the ip",
    "start": "903680",
    "end": "905839"
  },
  {
    "text": "header to see whether or not this is an",
    "start": "905839",
    "end": "908959"
  },
  {
    "text": "icmp ping request and if it is we're",
    "start": "908959",
    "end": "911600"
  },
  {
    "text": "going to trace trace that out",
    "start": "911600",
    "end": "915279"
  },
  {
    "text": "okay",
    "start": "915279",
    "end": "916320"
  },
  {
    "text": "so let's",
    "start": "916320",
    "end": "918079"
  },
  {
    "text": "build that and load the",
    "start": "918079",
    "end": "920560"
  },
  {
    "text": "functions into the kernel",
    "start": "920560",
    "end": "923440"
  },
  {
    "text": "and then we can run ping again",
    "start": "923440",
    "end": "926320"
  },
  {
    "text": "and",
    "start": "926320",
    "end": "927199"
  },
  {
    "text": "in fact i'm gonna run this with",
    "start": "927199",
    "end": "930079"
  },
  {
    "text": "just one ping request because it'll be",
    "start": "930079",
    "end": "932720"
  },
  {
    "text": "easier to",
    "start": "932720",
    "end": "934480"
  },
  {
    "text": "read",
    "start": "934480",
    "end": "936800"
  },
  {
    "text": "there we go so we see the ping request",
    "start": "939279",
    "end": "943199"
  },
  {
    "text": "coming in through xdp so think of that",
    "start": "943199",
    "end": "945600"
  },
  {
    "text": "as the packet arriving at the network",
    "start": "945600",
    "end": "947199"
  },
  {
    "text": "interface",
    "start": "947199",
    "end": "948320"
  },
  {
    "text": "and then it gets to the",
    "start": "948320",
    "end": "950000"
  },
  {
    "text": "raw socket where we can see first of all",
    "start": "950000",
    "end": "952800"
  },
  {
    "text": "the request which is destined for an",
    "start": "952800",
    "end": "955120"
  },
  {
    "text": "address ending in zero two",
    "start": "955120",
    "end": "957360"
  },
  {
    "text": "and then we're actually seeing the",
    "start": "957360",
    "end": "958800"
  },
  {
    "text": "response going back through the",
    "start": "958800",
    "end": "961600"
  },
  {
    "text": "socket filter because the socket filter",
    "start": "961600",
    "end": "963199"
  },
  {
    "text": "sees traffic in both directions",
    "start": "963199",
    "end": "967240"
  },
  {
    "start": "970000",
    "end": "1170000"
  },
  {
    "text": "all right",
    "start": "971360",
    "end": "972399"
  },
  {
    "text": "another",
    "start": "972399",
    "end": "973759"
  },
  {
    "text": "program type that we can attach to is",
    "start": "973759",
    "end": "976320"
  },
  {
    "text": "related to traffic control",
    "start": "976320",
    "end": "978639"
  },
  {
    "text": "and this is",
    "start": "978639",
    "end": "980480"
  },
  {
    "text": "a facility within the kernel where we",
    "start": "980480",
    "end": "982399"
  },
  {
    "text": "can",
    "start": "982399",
    "end": "983199"
  },
  {
    "text": "classify or",
    "start": "983199",
    "end": "984959"
  },
  {
    "text": "run actions on network packets",
    "start": "984959",
    "end": "988959"
  },
  {
    "text": "so",
    "start": "988959",
    "end": "990639"
  },
  {
    "text": "we can attach these filters to what's",
    "start": "990639",
    "end": "993040"
  },
  {
    "text": "called queuing disciplines",
    "start": "993040",
    "end": "995759"
  },
  {
    "text": "we can do this in both ingress and",
    "start": "995759",
    "end": "997440"
  },
  {
    "text": "egress my example is going to use",
    "start": "997440",
    "end": "999199"
  },
  {
    "text": "ingress",
    "start": "999199",
    "end": "1000639"
  },
  {
    "text": "so",
    "start": "1000639",
    "end": "1001440"
  },
  {
    "text": "a packet's going to arrive the idea of",
    "start": "1001440",
    "end": "1003519"
  },
  {
    "text": "this traffic control is",
    "start": "1003519",
    "end": "1006160"
  },
  {
    "text": "you might use it to",
    "start": "1006160",
    "end": "1008000"
  },
  {
    "text": "prioritize certain types of traffic and",
    "start": "1008000",
    "end": "1010320"
  },
  {
    "text": "do traffic shaping",
    "start": "1010320",
    "end": "1012079"
  },
  {
    "text": "um you could also use it for filtering",
    "start": "1012079",
    "end": "1014320"
  },
  {
    "text": "certain types of traffic",
    "start": "1014320",
    "end": "1016240"
  },
  {
    "text": "there are lots of different types of",
    "start": "1016240",
    "end": "1017440"
  },
  {
    "text": "filters that you can add um",
    "start": "1017440",
    "end": "1020320"
  },
  {
    "text": "ebpf programs is one type of filter that",
    "start": "1020320",
    "end": "1023120"
  },
  {
    "text": "you can attach to these queuing",
    "start": "1023120",
    "end": "1024798"
  },
  {
    "text": "disciplines",
    "start": "1024799",
    "end": "1027280"
  },
  {
    "text": "so my example is going to attach we're",
    "start": "1027280",
    "end": "1030640"
  },
  {
    "text": "going to use the vcc add filter command",
    "start": "1030640",
    "end": "1033839"
  },
  {
    "text": "to attach",
    "start": "1033839",
    "end": "1035038"
  },
  {
    "text": "a ebpf program to an ingress on a",
    "start": "1035039",
    "end": "1038319"
  },
  {
    "text": "queueing discipline",
    "start": "1038319",
    "end": "1041280"
  },
  {
    "text": "okay",
    "start": "1041439",
    "end": "1042798"
  },
  {
    "text": "so my",
    "start": "1042799",
    "end": "1045038"
  },
  {
    "text": "program",
    "start": "1045039",
    "end": "1046880"
  },
  {
    "text": "again doing something very similar we're",
    "start": "1046880",
    "end": "1048640"
  },
  {
    "text": "going to",
    "start": "1048640",
    "end": "1049520"
  },
  {
    "text": "chase out the fact that we've got a",
    "start": "1049520",
    "end": "1050480"
  },
  {
    "text": "packet and then we're going to look",
    "start": "1050480",
    "end": "1052799"
  },
  {
    "text": "through the packet using the same",
    "start": "1052799",
    "end": "1054160"
  },
  {
    "text": "function as before to check whether it's",
    "start": "1054160",
    "end": "1056880"
  },
  {
    "text": "a ping request",
    "start": "1056880",
    "end": "1059120"
  },
  {
    "text": "and in this case i'm going to drop it",
    "start": "1059120",
    "end": "1061760"
  },
  {
    "text": "this tc act shot says",
    "start": "1061760",
    "end": "1064320"
  },
  {
    "text": "this packet is shot just",
    "start": "1064320",
    "end": "1066960"
  },
  {
    "text": "don't we don't want to pass it on up the",
    "start": "1066960",
    "end": "1069280"
  },
  {
    "text": "stack",
    "start": "1069280",
    "end": "1070880"
  },
  {
    "text": "so",
    "start": "1070880",
    "end": "1072799"
  },
  {
    "text": "tc is gonna",
    "start": "1072799",
    "end": "1074480"
  },
  {
    "text": "when that ping request reaches this tc",
    "start": "1074480",
    "end": "1077200"
  },
  {
    "text": "ingress part of the",
    "start": "1077200",
    "end": "1078840"
  },
  {
    "text": "stack ping requests are going to get",
    "start": "1078840",
    "end": "1081039"
  },
  {
    "text": "dropped",
    "start": "1081039",
    "end": "1083440"
  },
  {
    "text": "so i need to",
    "start": "1083679",
    "end": "1085200"
  },
  {
    "text": "load this it's a little bit more",
    "start": "1085200",
    "end": "1086799"
  },
  {
    "text": "involved here because we need to create",
    "start": "1086799",
    "end": "1088720"
  },
  {
    "text": "the queuing discipline and add the",
    "start": "1088720",
    "end": "1090960"
  },
  {
    "text": "filter",
    "start": "1090960",
    "end": "1093520"
  },
  {
    "text": "and before i forget i need to um make",
    "start": "1093520",
    "end": "1096000"
  },
  {
    "text": "sure it gets unloaded",
    "start": "1096000",
    "end": "1098320"
  },
  {
    "text": "at the end",
    "start": "1098320",
    "end": "1100160"
  },
  {
    "text": "okay",
    "start": "1100160",
    "end": "1101440"
  },
  {
    "text": "so i'm going to just start with tc as",
    "start": "1101440",
    "end": "1104320"
  },
  {
    "text": "the function that we just looked at",
    "start": "1104320",
    "end": "1107600"
  },
  {
    "text": "and this",
    "start": "1107600",
    "end": "1109039"
  },
  {
    "text": "code here adds the queuing discipline if",
    "start": "1109039",
    "end": "1111120"
  },
  {
    "text": "it doesn't already exist and then",
    "start": "1111120",
    "end": "1112640"
  },
  {
    "text": "attaches that ebpf program as a filter",
    "start": "1112640",
    "end": "1117440"
  },
  {
    "text": "so let's give this a while",
    "start": "1117440",
    "end": "1121799"
  },
  {
    "text": "and let's run a ping",
    "start": "1122320",
    "end": "1126480"
  },
  {
    "text": "so we can see the ping arrived",
    "start": "1126480",
    "end": "1129200"
  },
  {
    "text": "at xdp",
    "start": "1129200",
    "end": "1131039"
  },
  {
    "text": "it arrived at the socket filter it",
    "start": "1131039",
    "end": "1132799"
  },
  {
    "text": "arrived in tc ingress and then",
    "start": "1132799",
    "end": "1136400"
  },
  {
    "text": "we will have dropped it here so we don't",
    "start": "1136400",
    "end": "1138320"
  },
  {
    "text": "see",
    "start": "1138320",
    "end": "1139280"
  },
  {
    "text": "the response going back through the",
    "start": "1139280",
    "end": "1141440"
  },
  {
    "text": "socket filter",
    "start": "1141440",
    "end": "1143440"
  },
  {
    "text": "this looks like some other packet that's",
    "start": "1143440",
    "end": "1145280"
  },
  {
    "text": "arrived",
    "start": "1145280",
    "end": "1147039"
  },
  {
    "text": "on that same interface my guess is that",
    "start": "1147039",
    "end": "1149360"
  },
  {
    "text": "that's probably some kind of art traffic",
    "start": "1149360",
    "end": "1151200"
  },
  {
    "text": "going on we could add some code to to",
    "start": "1151200",
    "end": "1154320"
  },
  {
    "text": "check whether that's true let's run",
    "start": "1154320",
    "end": "1156160"
  },
  {
    "text": "another ping just to",
    "start": "1156160",
    "end": "1157919"
  },
  {
    "text": "demonstrate yeah we're not seeing those",
    "start": "1157919",
    "end": "1160880"
  },
  {
    "text": "pings",
    "start": "1160880",
    "end": "1162000"
  },
  {
    "text": "being responded to 100 packet loss",
    "start": "1162000",
    "end": "1165840"
  },
  {
    "text": "we're successfully dropping traffic",
    "start": "1165840",
    "end": "1167840"
  },
  {
    "text": "using tc",
    "start": "1167840",
    "end": "1170559"
  },
  {
    "start": "1170000",
    "end": "1460000"
  },
  {
    "text": "but we don't just have to drop",
    "start": "1170559",
    "end": "1173440"
  },
  {
    "text": "packets we can also modify them and we",
    "start": "1173440",
    "end": "1175919"
  },
  {
    "text": "can even make decisions about sending",
    "start": "1175919",
    "end": "1177440"
  },
  {
    "text": "them through different interfaces",
    "start": "1177440",
    "end": "1180640"
  },
  {
    "text": "so",
    "start": "1180640",
    "end": "1182400"
  },
  {
    "text": "in the next example what i'm going to do",
    "start": "1182400",
    "end": "1184320"
  },
  {
    "text": "is",
    "start": "1184320",
    "end": "1185200"
  },
  {
    "text": "respond to that ping request so rather",
    "start": "1185200",
    "end": "1187360"
  },
  {
    "text": "than dropping it i'm going to convert",
    "start": "1187360",
    "end": "1189360"
  },
  {
    "text": "the request into a response",
    "start": "1189360",
    "end": "1192080"
  },
  {
    "text": "that means that the ping request instead",
    "start": "1192080",
    "end": "1194480"
  },
  {
    "text": "of having to go all the way up the",
    "start": "1194480",
    "end": "1196240"
  },
  {
    "text": "networking stack to user space to get a",
    "start": "1196240",
    "end": "1199039"
  },
  {
    "text": "response that then comes back through",
    "start": "1199039",
    "end": "1200320"
  },
  {
    "text": "the networking stack",
    "start": "1200320",
    "end": "1201919"
  },
  {
    "text": "i'm going to create that response",
    "start": "1201919",
    "end": "1203919"
  },
  {
    "text": "within the tc ingress filter",
    "start": "1203919",
    "end": "1208559"
  },
  {
    "text": "okay",
    "start": "1208720",
    "end": "1209679"
  },
  {
    "text": "so i have a function to do this called",
    "start": "1209679",
    "end": "1211600"
  },
  {
    "text": "tc ping pong which we're going to load",
    "start": "1211600",
    "end": "1213919"
  },
  {
    "text": "instead of the function we just saw that",
    "start": "1213919",
    "end": "1215919"
  },
  {
    "text": "drop packet",
    "start": "1215919",
    "end": "1217840"
  },
  {
    "text": "and ping pong is here",
    "start": "1217840",
    "end": "1221280"
  },
  {
    "text": "if it's not a pink request we will",
    "start": "1221280",
    "end": "1223600"
  },
  {
    "text": "return okay which says just do whatever",
    "start": "1223600",
    "end": "1225919"
  },
  {
    "text": "you were planning to do with this packet",
    "start": "1225919",
    "end": "1229120"
  },
  {
    "text": "if it is a ping request",
    "start": "1229120",
    "end": "1231200"
  },
  {
    "text": "we're going to",
    "start": "1231200",
    "end": "1232480"
  },
  {
    "text": "swap the source and destination",
    "start": "1232480",
    "end": "1235039"
  },
  {
    "text": "addresses both for the mac addresses and",
    "start": "1235039",
    "end": "1237760"
  },
  {
    "text": "the ip addresses",
    "start": "1237760",
    "end": "1239760"
  },
  {
    "text": "because we want the packet to",
    "start": "1239760",
    "end": "1241520"
  },
  {
    "text": "go back to whoever sent it to us",
    "start": "1241520",
    "end": "1244480"
  },
  {
    "text": "we need to modify the type of the",
    "start": "1244480",
    "end": "1247760"
  },
  {
    "text": "message so this is saying this is a",
    "start": "1247760",
    "end": "1250080"
  },
  {
    "text": "response rather than a request",
    "start": "1250080",
    "end": "1252080"
  },
  {
    "text": "hidden within this function it's also",
    "start": "1252080",
    "end": "1253760"
  },
  {
    "text": "updating the icmp checksum in the header",
    "start": "1253760",
    "end": "1259280"
  },
  {
    "text": "and then we have to do",
    "start": "1259520",
    "end": "1261600"
  },
  {
    "text": "something",
    "start": "1261600",
    "end": "1262640"
  },
  {
    "text": "maybe a little bit special here what",
    "start": "1262640",
    "end": "1264480"
  },
  {
    "text": "we're going to do is say throw away the",
    "start": "1264480",
    "end": "1266400"
  },
  {
    "text": "original packet we don't want you to",
    "start": "1266400",
    "end": "1269360"
  },
  {
    "text": "forward the original request on up the",
    "start": "1269360",
    "end": "1271679"
  },
  {
    "text": "networking stack so we're going to be",
    "start": "1271679",
    "end": "1272960"
  },
  {
    "text": "responding with this tc act shot which",
    "start": "1272960",
    "end": "1275919"
  },
  {
    "text": "is what we use to drop a packet",
    "start": "1275919",
    "end": "1277840"
  },
  {
    "text": "but before we do that we clone a copy of",
    "start": "1277840",
    "end": "1281440"
  },
  {
    "text": "the packet",
    "start": "1281440",
    "end": "1282720"
  },
  {
    "text": "the socket buffer",
    "start": "1282720",
    "end": "1284400"
  },
  {
    "text": "and we",
    "start": "1284400",
    "end": "1285520"
  },
  {
    "text": "tell the kernel that we want to send",
    "start": "1285520",
    "end": "1287280"
  },
  {
    "text": "that",
    "start": "1287280",
    "end": "1288240"
  },
  {
    "text": "socket buffer through",
    "start": "1288240",
    "end": "1290480"
  },
  {
    "text": "actually the same index that it arrived",
    "start": "1290480",
    "end": "1292320"
  },
  {
    "text": "on",
    "start": "1292320",
    "end": "1294320"
  },
  {
    "text": "so let's",
    "start": "1294320",
    "end": "1297279"
  },
  {
    "text": "give this a try",
    "start": "1297679",
    "end": "1300399"
  },
  {
    "text": "and that's loaded so we're hoping to see",
    "start": "1302240",
    "end": "1305520"
  },
  {
    "text": "successful ping responses this time and",
    "start": "1305520",
    "end": "1308400"
  },
  {
    "text": "we did that was pretty quick we saw",
    "start": "1308400",
    "end": "1311200"
  },
  {
    "text": "the packet responded zero percent packet",
    "start": "1311200",
    "end": "1314080"
  },
  {
    "text": "loss",
    "start": "1314080",
    "end": "1315120"
  },
  {
    "text": "and what we could see there",
    "start": "1315120",
    "end": "1316640"
  },
  {
    "text": "packet the request comes in xdp",
    "start": "1316640",
    "end": "1319440"
  },
  {
    "text": "it goes through socket filter",
    "start": "1319440",
    "end": "1321520"
  },
  {
    "text": "gets to tc",
    "start": "1321520",
    "end": "1323360"
  },
  {
    "text": "uh tc",
    "start": "1323360",
    "end": "1325280"
  },
  {
    "text": "looks at the uh the message but gives us",
    "start": "1325280",
    "end": "1328159"
  },
  {
    "text": "a little bit more information about that",
    "start": "1328159",
    "end": "1329760"
  },
  {
    "text": "message",
    "start": "1329760",
    "end": "1330799"
  },
  {
    "text": "and then we can see the response which",
    "start": "1330799",
    "end": "1332880"
  },
  {
    "text": "is destined for address ending in one",
    "start": "1332880",
    "end": "1335840"
  },
  {
    "text": "being sent back out through the socket",
    "start": "1335840",
    "end": "1337919"
  },
  {
    "text": "filter",
    "start": "1337919",
    "end": "1340240"
  },
  {
    "text": "now you might say that's not super",
    "start": "1340559",
    "end": "1343120"
  },
  {
    "text": "convincing how do we know that the",
    "start": "1343120",
    "end": "1345039"
  },
  {
    "text": "packet didn't go up through",
    "start": "1345039",
    "end": "1347039"
  },
  {
    "text": "the full network stack",
    "start": "1347039",
    "end": "1350400"
  },
  {
    "text": "one way we can check is to use that perf",
    "start": "1350400",
    "end": "1353760"
  },
  {
    "text": "utility to trace out",
    "start": "1353760",
    "end": "1356159"
  },
  {
    "text": "networking related events",
    "start": "1356159",
    "end": "1358159"
  },
  {
    "text": "that happen as those ping messages",
    "start": "1358159",
    "end": "1360799"
  },
  {
    "text": "traverse the networking stack",
    "start": "1360799",
    "end": "1363760"
  },
  {
    "text": "so",
    "start": "1363760",
    "end": "1364960"
  },
  {
    "text": "instead of just sending ping directly",
    "start": "1364960",
    "end": "1366880"
  },
  {
    "text": "i'm going to send it with perf trace",
    "start": "1366880",
    "end": "1371039"
  },
  {
    "text": "trace",
    "start": "1371039",
    "end": "1372400"
  },
  {
    "text": "and i'm interested in all the network",
    "start": "1372400",
    "end": "1374320"
  },
  {
    "text": "events",
    "start": "1374320",
    "end": "1375760"
  },
  {
    "text": "and",
    "start": "1375760",
    "end": "1376799"
  },
  {
    "text": "i'm going to send it to an output file",
    "start": "1376799",
    "end": "1379840"
  },
  {
    "text": "called",
    "start": "1379840",
    "end": "1380720"
  },
  {
    "text": "let's say with tc",
    "start": "1380720",
    "end": "1383520"
  },
  {
    "text": "and then i want to run ping i'll send it",
    "start": "1383520",
    "end": "1386840"
  },
  {
    "text": "once and we're sending it to the same",
    "start": "1386840",
    "end": "1389440"
  },
  {
    "text": "dress address as before",
    "start": "1389440",
    "end": "1393200"
  },
  {
    "text": "so that's given us exactly the same",
    "start": "1394640",
    "end": "1396640"
  },
  {
    "text": "tracing that we saw before",
    "start": "1396640",
    "end": "1398880"
  },
  {
    "text": "but if we look at that file",
    "start": "1398880",
    "end": "1403200"
  },
  {
    "text": "with tc",
    "start": "1403200",
    "end": "1406158"
  },
  {
    "text": "we can see a number of different",
    "start": "1408000",
    "end": "1411280"
  },
  {
    "text": "networking events that were generated as",
    "start": "1411280",
    "end": "1413280"
  },
  {
    "text": "those packets were well as the ping",
    "start": "1413280",
    "end": "1415440"
  },
  {
    "text": "packet was received and then the",
    "start": "1415440",
    "end": "1417280"
  },
  {
    "text": "response was generated and sent out",
    "start": "1417280",
    "end": "1420640"
  },
  {
    "text": "i ran that earlier without tc and",
    "start": "1420640",
    "end": "1424480"
  },
  {
    "text": "this is the result",
    "start": "1424480",
    "end": "1427039"
  },
  {
    "text": "and we should see that the result",
    "start": "1427039",
    "end": "1428640"
  },
  {
    "text": "without cc is a little bit longer than",
    "start": "1428640",
    "end": "1430880"
  },
  {
    "text": "with",
    "start": "1430880",
    "end": "1433039"
  },
  {
    "text": "yeah and we should see starts with the",
    "start": "1433039",
    "end": "1435200"
  },
  {
    "text": "same",
    "start": "1435200",
    "end": "1436240"
  },
  {
    "text": "calls",
    "start": "1436240",
    "end": "1438640"
  },
  {
    "text": "and",
    "start": "1438720",
    "end": "1440159"
  },
  {
    "text": "we're missing out on some",
    "start": "1440159",
    "end": "1443120"
  },
  {
    "text": "network interface",
    "start": "1443120",
    "end": "1444400"
  },
  {
    "text": "rx calls here",
    "start": "1444400",
    "end": "1446640"
  },
  {
    "text": "so that's telling us that something",
    "start": "1446640",
    "end": "1448320"
  },
  {
    "text": "further up the stack that was receiving",
    "start": "1448320",
    "end": "1449919"
  },
  {
    "text": "packets",
    "start": "1449919",
    "end": "1451440"
  },
  {
    "text": "we don't need to call that because the",
    "start": "1451440",
    "end": "1453520"
  },
  {
    "text": "packet never gets that far",
    "start": "1453520",
    "end": "1456720"
  },
  {
    "text": "so",
    "start": "1457679",
    "end": "1458400"
  },
  {
    "text": "hopefully that has",
    "start": "1458400",
    "end": "1460640"
  },
  {
    "start": "1460000",
    "end": "1555000"
  },
  {
    "text": "given you an illustration of how we can",
    "start": "1460640",
    "end": "1463039"
  },
  {
    "text": "use ebpf networking",
    "start": "1463039",
    "end": "1466240"
  },
  {
    "text": "functionality to",
    "start": "1466240",
    "end": "1467919"
  },
  {
    "text": "bypass parts of the networking stack and",
    "start": "1467919",
    "end": "1470159"
  },
  {
    "text": "achieve",
    "start": "1470159",
    "end": "1471520"
  },
  {
    "text": "performance gains",
    "start": "1471520",
    "end": "1473919"
  },
  {
    "text": "and",
    "start": "1473919",
    "end": "1474720"
  },
  {
    "text": "this is one of the reasons why ebpf is",
    "start": "1474720",
    "end": "1477760"
  },
  {
    "text": "so powerful for cloud native networking",
    "start": "1477760",
    "end": "1481600"
  },
  {
    "text": "in kubernetes we run our application",
    "start": "1481600",
    "end": "1483520"
  },
  {
    "text": "code in pods",
    "start": "1483520",
    "end": "1485039"
  },
  {
    "text": "those pods have their own typically have",
    "start": "1485039",
    "end": "1487440"
  },
  {
    "text": "their own networking namespace separate",
    "start": "1487440",
    "end": "1489919"
  },
  {
    "text": "from the host's networking namespace",
    "start": "1489919",
    "end": "1493279"
  },
  {
    "text": "and",
    "start": "1493279",
    "end": "1494080"
  },
  {
    "text": "in each of them there's a separate tcpip",
    "start": "1494080",
    "end": "1497200"
  },
  {
    "text": "stack",
    "start": "1497200",
    "end": "1499039"
  },
  {
    "text": "so imagine a packet destined for our",
    "start": "1499039",
    "end": "1501679"
  },
  {
    "text": "application running in a pod it arrives",
    "start": "1501679",
    "end": "1503600"
  },
  {
    "text": "at the physical",
    "start": "1503600",
    "end": "1505120"
  },
  {
    "text": "interface to the host it traverses the",
    "start": "1505120",
    "end": "1507760"
  },
  {
    "text": "whole",
    "start": "1507760",
    "end": "1508559"
  },
  {
    "text": "ip stack on the host then gets passed up",
    "start": "1508559",
    "end": "1512400"
  },
  {
    "text": "through the virtual ethernet connection",
    "start": "1512400",
    "end": "1514080"
  },
  {
    "text": "to the pod where it goes through the",
    "start": "1514080",
    "end": "1516240"
  },
  {
    "text": "pods networking stack",
    "start": "1516240",
    "end": "1518880"
  },
  {
    "text": "with ebpf we can bypass a lot of the",
    "start": "1518880",
    "end": "1522480"
  },
  {
    "text": "host networking stack because we can see",
    "start": "1522480",
    "end": "1525120"
  },
  {
    "text": "the",
    "start": "1525120",
    "end": "1526240"
  },
  {
    "text": "address that that packet is destined for",
    "start": "1526240",
    "end": "1528720"
  },
  {
    "text": "we know that that is one of the pods",
    "start": "1528720",
    "end": "1530720"
  },
  {
    "text": "because we're a kubernetes cni and we've",
    "start": "1530720",
    "end": "1532799"
  },
  {
    "text": "been",
    "start": "1532799",
    "end": "1533600"
  },
  {
    "text": "in we've been responsible for setting up",
    "start": "1533600",
    "end": "1535600"
  },
  {
    "text": "those endpoints so we know the packet is",
    "start": "1535600",
    "end": "1537919"
  },
  {
    "text": "destined for the pod and we can send it",
    "start": "1537919",
    "end": "1539600"
  },
  {
    "text": "straight to the appropriate virtual",
    "start": "1539600",
    "end": "1542159"
  },
  {
    "text": "ethernet interface",
    "start": "1542159",
    "end": "1544640"
  },
  {
    "text": "that makes networking significantly",
    "start": "1544640",
    "end": "1546799"
  },
  {
    "text": "faster and there's a really great blog",
    "start": "1546799",
    "end": "1548559"
  },
  {
    "text": "post about cni benchmarking on the",
    "start": "1548559",
    "end": "1550720"
  },
  {
    "text": "civilian website that you might want to",
    "start": "1550720",
    "end": "1553039"
  },
  {
    "text": "check out for more details",
    "start": "1553039",
    "end": "1556679"
  },
  {
    "start": "1555000",
    "end": "1645000"
  },
  {
    "text": "another huge advantage of ebpf is that",
    "start": "1556720",
    "end": "1560320"
  },
  {
    "text": "it's instrumenting the kernel",
    "start": "1560320",
    "end": "1563360"
  },
  {
    "text": "and we don't have to instrument",
    "start": "1563360",
    "end": "1565279"
  },
  {
    "text": "individual applications we don't have to",
    "start": "1565279",
    "end": "1567600"
  },
  {
    "text": "change applications or make any",
    "start": "1567600",
    "end": "1569120"
  },
  {
    "text": "configuration changes",
    "start": "1569120",
    "end": "1571679"
  },
  {
    "text": "contrast this with a sidecar model where",
    "start": "1571679",
    "end": "1575039"
  },
  {
    "text": "we typically we typically use a sidecar",
    "start": "1575039",
    "end": "1577840"
  },
  {
    "text": "model for a lot of observability and",
    "start": "1577840",
    "end": "1580320"
  },
  {
    "text": "security and networking purposes",
    "start": "1580320",
    "end": "1583120"
  },
  {
    "text": "now a sidecar",
    "start": "1583120",
    "end": "1585120"
  },
  {
    "text": "needs to be injected as a container into",
    "start": "1585120",
    "end": "1588000"
  },
  {
    "text": "each pod that needs instrumenting",
    "start": "1588000",
    "end": "1590960"
  },
  {
    "text": "and to get that sidecar container into",
    "start": "1590960",
    "end": "1593039"
  },
  {
    "text": "the pod there has to be a yaml",
    "start": "1593039",
    "end": "1595279"
  },
  {
    "text": "definition for it",
    "start": "1595279",
    "end": "1597360"
  },
  {
    "text": "you typically",
    "start": "1597360",
    "end": "1599200"
  },
  {
    "text": "inject that yaml automatically through",
    "start": "1599200",
    "end": "1601360"
  },
  {
    "text": "some kind of process maybe admission",
    "start": "1601360",
    "end": "1603679"
  },
  {
    "text": "control or maybe during your cicd system",
    "start": "1603679",
    "end": "1607200"
  },
  {
    "text": "but that yaml has to be defined",
    "start": "1607200",
    "end": "1610400"
  },
  {
    "text": "contrast that to an ebpf enabled tool",
    "start": "1610400",
    "end": "1614720"
  },
  {
    "text": "where",
    "start": "1614720",
    "end": "1615679"
  },
  {
    "text": "the evpf programming is loaded into the",
    "start": "1615679",
    "end": "1617919"
  },
  {
    "text": "kernel and gets access to",
    "start": "1617919",
    "end": "1620559"
  },
  {
    "text": "any events",
    "start": "1620559",
    "end": "1622000"
  },
  {
    "text": "regardless of the",
    "start": "1622000",
    "end": "1624480"
  },
  {
    "text": "the pod or the application",
    "start": "1624480",
    "end": "1626799"
  },
  {
    "text": "so we don't need to modify our pods in",
    "start": "1626799",
    "end": "1628880"
  },
  {
    "text": "order to",
    "start": "1628880",
    "end": "1630480"
  },
  {
    "text": "use ebpf to",
    "start": "1630480",
    "end": "1632720"
  },
  {
    "text": "for observability purposes for security",
    "start": "1632720",
    "end": "1634960"
  },
  {
    "text": "purposes and even for networking",
    "start": "1634960",
    "end": "1637760"
  },
  {
    "text": "purposes that we might otherwise push",
    "start": "1637760",
    "end": "1639919"
  },
  {
    "text": "into a sidecar",
    "start": "1639919",
    "end": "1642720"
  },
  {
    "text": "if we think about networking in",
    "start": "1642720",
    "end": "1644000"
  },
  {
    "text": "particular that",
    "start": "1644000",
    "end": "1645919"
  },
  {
    "start": "1645000",
    "end": "1776000"
  },
  {
    "text": "creates a lot of really cool",
    "start": "1645919",
    "end": "1648240"
  },
  {
    "text": "capabilities",
    "start": "1648240",
    "end": "1649840"
  },
  {
    "text": "so the fact that we can inspect packets",
    "start": "1649840",
    "end": "1652880"
  },
  {
    "text": "gives us some really powerful",
    "start": "1652880",
    "end": "1654320"
  },
  {
    "text": "observability tools that are really",
    "start": "1654320",
    "end": "1657679"
  },
  {
    "text": "performant",
    "start": "1657679",
    "end": "1658960"
  },
  {
    "text": "that can be mapped to",
    "start": "1658960",
    "end": "1661600"
  },
  {
    "text": "other aspects like kubernetes identity",
    "start": "1661600",
    "end": "1664240"
  },
  {
    "text": "so we can have really detailed",
    "start": "1664240",
    "end": "1667520"
  },
  {
    "text": "mapping between what network packets are",
    "start": "1667520",
    "end": "1670159"
  },
  {
    "text": "flowing and which kubernetes pods and",
    "start": "1670159",
    "end": "1672720"
  },
  {
    "text": "services they relate to we can get some",
    "start": "1672720",
    "end": "1674720"
  },
  {
    "text": "really in-depth security forensics from",
    "start": "1674720",
    "end": "1677279"
  },
  {
    "text": "this information",
    "start": "1677279",
    "end": "1679600"
  },
  {
    "text": "we can use the ability to drop packets",
    "start": "1679600",
    "end": "1682399"
  },
  {
    "text": "or to modify them to",
    "start": "1682399",
    "end": "1684240"
  },
  {
    "text": "create",
    "start": "1684240",
    "end": "1685360"
  },
  {
    "text": "network policies we can do encryption in",
    "start": "1685360",
    "end": "1687600"
  },
  {
    "text": "ebpf these are all really great benefits",
    "start": "1687600",
    "end": "1689679"
  },
  {
    "text": "for security",
    "start": "1689679",
    "end": "1691919"
  },
  {
    "text": "and the fact that we can send packets",
    "start": "1691919",
    "end": "1694799"
  },
  {
    "text": "to we can change the destination for a",
    "start": "1694799",
    "end": "1697039"
  },
  {
    "text": "packet allows us to create all sorts of",
    "start": "1697039",
    "end": "1699919"
  },
  {
    "text": "interesting network functionality um",
    "start": "1699919",
    "end": "1702960"
  },
  {
    "text": "things like load balancing routing",
    "start": "1702960",
    "end": "1705360"
  },
  {
    "text": "services and particularly interesting i",
    "start": "1705360",
    "end": "1708159"
  },
  {
    "text": "think is the idea of an evpf enabled",
    "start": "1708159",
    "end": "1710960"
  },
  {
    "text": "service mesh",
    "start": "1710960",
    "end": "1712720"
  },
  {
    "text": "and if that's something that you're",
    "start": "1712720",
    "end": "1713840"
  },
  {
    "text": "interested in do come and speak to us",
    "start": "1713840",
    "end": "1715840"
  },
  {
    "text": "about psyllium",
    "start": "1715840",
    "end": "1718559"
  },
  {
    "text": "ebpf is enabling the next generation of",
    "start": "1718559",
    "end": "1722000"
  },
  {
    "text": "service mesh",
    "start": "1722000",
    "end": "1724240"
  },
  {
    "text": "because we don't have to instrument the",
    "start": "1724240",
    "end": "1727120"
  },
  {
    "text": "pods that make up those services in",
    "start": "1727120",
    "end": "1728799"
  },
  {
    "text": "order to have these service mesh",
    "start": "1728799",
    "end": "1730080"
  },
  {
    "text": "capabilities",
    "start": "1730080",
    "end": "1732799"
  },
  {
    "text": "so i hope that's given you some insight",
    "start": "1733279",
    "end": "1735919"
  },
  {
    "text": "into why i'm so excited about evpf and",
    "start": "1735919",
    "end": "1738880"
  },
  {
    "text": "how we can use it particularly for",
    "start": "1738880",
    "end": "1741120"
  },
  {
    "text": "networking related functionality",
    "start": "1741120",
    "end": "1744159"
  },
  {
    "text": "if you're",
    "start": "1744159",
    "end": "1745919"
  },
  {
    "text": "interested in writing your own ebpf",
    "start": "1745919",
    "end": "1747919"
  },
  {
    "text": "programs my github repo has some",
    "start": "1747919",
    "end": "1750240"
  },
  {
    "text": "starting points if you're interested in",
    "start": "1750240",
    "end": "1753679"
  },
  {
    "text": "writing ebpf programs i would thoroughly",
    "start": "1753679",
    "end": "1755760"
  },
  {
    "text": "recommend getting involved in a project",
    "start": "1755760",
    "end": "1758480"
  },
  {
    "text": "such as psyllium",
    "start": "1758480",
    "end": "1760399"
  },
  {
    "text": "we have lots of issues marked as good",
    "start": "1760399",
    "end": "1762640"
  },
  {
    "text": "for good first issues so do come and",
    "start": "1762640",
    "end": "1765279"
  },
  {
    "text": "check those out",
    "start": "1765279",
    "end": "1767279"
  },
  {
    "text": "i hope that you're going to have lots of",
    "start": "1767279",
    "end": "1768960"
  },
  {
    "text": "questions for me i'm pre-recording this",
    "start": "1768960",
    "end": "1771120"
  },
  {
    "text": "now but i will be online and looking",
    "start": "1771120",
    "end": "1773440"
  },
  {
    "text": "forward to",
    "start": "1773440",
    "end": "1774640"
  },
  {
    "text": "speaking with you",
    "start": "1774640",
    "end": "1778279"
  }
]