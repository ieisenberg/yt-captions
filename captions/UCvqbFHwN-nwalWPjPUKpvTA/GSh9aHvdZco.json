[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "so thank you very much for joining us we are going to talk about stream z a project about running kafka on",
    "start": "80",
    "end": "6799"
  },
  {
    "text": "kubernetes i am a paolo patierno and i am here with jakub schultz we are both maintainers of",
    "start": "6799",
    "end": "12880"
  },
  {
    "text": "the stream z and we are going to talk about it in the next um",
    "start": "12880",
    "end": "18000"
  },
  {
    "text": "few minutes uh let's start from uh kafka so kafka is an open source project",
    "start": "18000",
    "end": "24720"
  },
  {
    "start": "19000",
    "end": "154000"
  },
  {
    "text": "originally created by linkedin and at the beginning kafka was defined as a publish subscribe messaging system",
    "start": "24720",
    "end": "31279"
  },
  {
    "text": "because at the end kafka is a messaging system but over the years the use cases around",
    "start": "31279",
    "end": "37600"
  },
  {
    "text": "kafka are changed there are more use cases about using kafka for doing some analytics",
    "start": "37600",
    "end": "45520"
  },
  {
    "text": "on uh data in real time so today kafka is even defined as a data streaming",
    "start": "45520",
    "end": "50960"
  },
  {
    "text": "platform but at the end kafka is a distributed fault tolerance",
    "start": "50960",
    "end": "56399"
  },
  {
    "text": "high available commit log but kafka is not just about the brokers",
    "start": "56399",
    "end": "63199"
  },
  {
    "text": "so the components which are in charge to exchange the messages between the",
    "start": "63199",
    "end": "68560"
  },
  {
    "text": "clients so the consumer and the producer but it's more a broader ecosystem with",
    "start": "68560",
    "end": "73600"
  },
  {
    "text": "more components on the right hand side you can see for example there is kafka connect",
    "start": "73600",
    "end": "79680"
  },
  {
    "text": "which is a framework for uh moving data between a different system um using kafka like",
    "start": "79680",
    "end": "87119"
  },
  {
    "text": "for example moving data from one database to another you can also see mirror maker mirror",
    "start": "87119",
    "end": "92799"
  },
  {
    "text": "maker is used for mirroring data between two different kafka clusters",
    "start": "92799",
    "end": "98320"
  },
  {
    "text": "running maybe on two different data centers in the cloud for example coming to the clients so talking about",
    "start": "98320",
    "end": "105280"
  },
  {
    "text": "consumer and producer and the apis for the clients there are a kind of low-level apis so",
    "start": "105280",
    "end": "111840"
  },
  {
    "text": "consumer and producer api that you can use for developing your application for sending and",
    "start": "111840",
    "end": "118320"
  },
  {
    "text": "receiving messages but there is even a more complex api which is the streams api",
    "start": "118320",
    "end": "124079"
  },
  {
    "text": "for writing more complex application for doing some analytics in real time time on the data flowing",
    "start": "124079",
    "end": "131200"
  },
  {
    "text": "through your kafka so kafka is able to ingest this data in real time and you can use this",
    "start": "131200",
    "end": "136480"
  },
  {
    "text": "streams api for doing some complex processing like filtering mapping and so on there",
    "start": "136480",
    "end": "143120"
  },
  {
    "text": "are also some third-party tools so other tools in the kafka ecosystem which are not part of the kafka upstream",
    "start": "143120",
    "end": "149840"
  },
  {
    "text": "project but can be used for interacting with kafka but why at this point running kafka on",
    "start": "149840",
    "end": "157840"
  },
  {
    "start": "154000",
    "end": "229000"
  },
  {
    "text": "kubernetes so on one side we have kafka which is a",
    "start": "157840",
    "end": "162959"
  },
  {
    "text": "a system distributed by nature and even the applications and workloads",
    "start": "162959",
    "end": "169040"
  },
  {
    "text": "using kafka are also distributed as scalable by nature on the other side we have kubernetes",
    "start": "169040",
    "end": "175840"
  },
  {
    "text": "kubernetes provides a grid abstraction layer for running your software",
    "start": "175840",
    "end": "180959"
  },
  {
    "text": "everywhere so you can run kubernetes on bare metal or you can run kubernetes on any cloud",
    "start": "180959",
    "end": "186959"
  },
  {
    "text": "provider like um azure aws ibm and google and you can move your",
    "start": "186959",
    "end": "193760"
  },
  {
    "text": "software on any of these platforms or on bare metal or on a cloud provider if you have",
    "start": "193760",
    "end": "200159"
  },
  {
    "text": "kubernetes under it so you have just using kubernetes for running your application",
    "start": "200159",
    "end": "205440"
  },
  {
    "text": "and you can move your application everywhere so uh kubernetes enables the cloud native",
    "start": "205440",
    "end": "211440"
  },
  {
    "text": "development but having on one side kafka and on the other side kubernetes",
    "start": "211440",
    "end": "217120"
  },
  {
    "text": "people who has no village about kubernetes why they should learn more about kafka",
    "start": "217120",
    "end": "222959"
  },
  {
    "text": "not using the knowledge that they already have about kubernetes for running kafka on",
    "start": "222959",
    "end": "228159"
  },
  {
    "text": "kubernetes this is where uh strings comes so streamsy is an open source uh project",
    "start": "228159",
    "end": "235920"
  },
  {
    "text": "it's a cncf sandbox project since last year more or less and it's",
    "start": "235920",
    "end": "242560"
  },
  {
    "text": "mostly focused on running kafka on kubernetes as i already mentioned so it",
    "start": "242560",
    "end": "248319"
  },
  {
    "text": "provides some container images for kafka for zookeeper because uh",
    "start": "248319",
    "end": "254640"
  },
  {
    "text": "kafka needs a zookeeper and sam in order to work today but even images for all the other",
    "start": "254640",
    "end": "260720"
  },
  {
    "text": "components that are parts of the kafka of the stream the ecosystem as we will see uh in a little bit uh",
    "start": "260720",
    "end": "268160"
  },
  {
    "text": "streams provides some operators so it's based on the operator pattern in order to",
    "start": "268160",
    "end": "274160"
  },
  {
    "text": "deploy handling your kafka clusters and even all the entities around the kafka but we will see more",
    "start": "274160",
    "end": "281440"
  },
  {
    "text": "with the the demo that jakub uh is going to show us so stream z provides a really kubernetes",
    "start": "281440",
    "end": "288880"
  },
  {
    "text": "native experience for us in order to handle kafka on kubernetes why",
    "start": "288880",
    "end": "294400"
  },
  {
    "text": "because um it's not only about ikafka clusters but even about the users",
    "start": "294400",
    "end": "300560"
  },
  {
    "text": "and the topics and even all the other kafka components in the kafka ecosystem",
    "start": "300560",
    "end": "306880"
  },
  {
    "text": "but why i say that stream z provides a kubernetes native experience for kafka",
    "start": "306880",
    "end": "314400"
  },
  {
    "start": "307000",
    "end": "465000"
  },
  {
    "text": "because um in kubernetes we have different objects right",
    "start": "314400",
    "end": "319840"
  },
  {
    "text": "like for example pods stateful set deployment secrets configmap and so on",
    "start": "319840",
    "end": "326320"
  },
  {
    "text": "they are the different kubernetes native resource that the user can use today but in kubernetes there is also a",
    "start": "326320",
    "end": "333280"
  },
  {
    "text": "way for extending the kubernetes api so stream z provides some custom",
    "start": "333280",
    "end": "339600"
  },
  {
    "text": "resource definitions in order to uh to make real this kubernetes negative",
    "start": "339600",
    "end": "346720"
  },
  {
    "text": "experience for kafka so it means that with strimzy we have a new kafka resource so you can create your",
    "start": "346720",
    "end": "354479"
  },
  {
    "text": "kubernetes resource of kind kafka where you can describe your cluster and all the configuration",
    "start": "354479",
    "end": "360639"
  },
  {
    "text": "but it's not just about kafka as you already mentioned even for all the other components in the stream the ecosystem",
    "start": "360639",
    "end": "366960"
  },
  {
    "text": "like for example you have resources for kafka users and kafka topic for handling users and topics in the",
    "start": "366960",
    "end": "373360"
  },
  {
    "text": "cluster but you also have kafka connect and kafka connector resources",
    "start": "373360",
    "end": "378800"
  },
  {
    "text": "for deploying a kafka connect deployment so all the worker nodes",
    "start": "378800",
    "end": "384880"
  },
  {
    "text": "related to kafka connect but even for interacting with kafka connect for",
    "start": "384880",
    "end": "389919"
  },
  {
    "text": "running the connectors uh which are the components needed for moving the data between the",
    "start": "389919",
    "end": "396400"
  },
  {
    "text": "system using kafka connect through kafka then there is a kafka bridge resource",
    "start": "396400",
    "end": "401919"
  },
  {
    "text": "for um deploying a bridge a http bridge in order to allow http",
    "start": "401919",
    "end": "408319"
  },
  {
    "text": "client to interact with your kafka cluster so using the http protocol then we have",
    "start": "408319",
    "end": "414080"
  },
  {
    "text": "a couple of resources for mirroring so kafka mirror maker and kafka mirror maker 2",
    "start": "414080",
    "end": "419520"
  },
  {
    "text": "because they provide the way to deploy the two different version of mirror maker that today",
    "start": "419520",
    "end": "425599"
  },
  {
    "text": "are in the kafka upstream project so for doing mirroring across kafka clusters and last but not least we",
    "start": "425599",
    "end": "432560"
  },
  {
    "text": "have a kafka rebalance resource which is used for doing a rebalancing on the cluster so moving",
    "start": "432560",
    "end": "439680"
  },
  {
    "text": "the partitions across the the the cluster through the brokers",
    "start": "439680",
    "end": "444800"
  },
  {
    "text": "uh in order to have a more balanced cluster and not having uh heavy loaded brokers compared to some",
    "start": "444800",
    "end": "451680"
  },
  {
    "text": "other brokers that are not uh hosting partitions so they have no traffic from the other",
    "start": "451680",
    "end": "457680"
  },
  {
    "text": "clients so it's a way for rebalancing the cluster using the cruise control which is supported by uh",
    "start": "457680",
    "end": "464240"
  },
  {
    "text": "streams say that uh i would like to hand over to jacob in order to show you",
    "start": "464240",
    "end": "470400"
  },
  {
    "start": "465000",
    "end": "537000"
  },
  {
    "text": "everything i just said in order to see how all this kind of stuff works using stream z",
    "start": "470400",
    "end": "479840"
  },
  {
    "text": "thanks paolo uh let me share my screen",
    "start": "479919",
    "end": "485039"
  },
  {
    "text": "and uh i'm here already connected to my uh burnities cluster and in this demo i",
    "start": "485039",
    "end": "491360"
  },
  {
    "text": "will really show you that deploying kafka streams is fairly easy if you ever worked with the",
    "start": "491360",
    "end": "498879"
  },
  {
    "text": "operators before you know that the first thing which we need to do is",
    "start": "498879",
    "end": "503919"
  },
  {
    "text": "to deploy the operator so to deploy streams operator i will uh",
    "start": "503919",
    "end": "510319"
  },
  {
    "text": "use a script from our website so https",
    "start": "510319",
    "end": "516640"
  },
  {
    "text": "streams dot io slash install latest and",
    "start": "516640",
    "end": "524399"
  },
  {
    "text": "my namespace is my project",
    "start": "524399",
    "end": "529040"
  },
  {
    "text": "equals here and that will install the operator for me",
    "start": "529839",
    "end": "535279"
  },
  {
    "text": "uh the installation really consists of all the usual files which you will find in installing",
    "start": "535279",
    "end": "542399"
  },
  {
    "text": "applications on kubernetes it's the custom resource definitions uh for the custom resources mentioned",
    "start": "542399",
    "end": "548720"
  },
  {
    "text": "already by paulo it's all the different arabic files to give the operator the access rights",
    "start": "548720",
    "end": "554560"
  },
  {
    "text": "and then things like a service account and then last but not least it's the",
    "start": "554560",
    "end": "560080"
  },
  {
    "text": "deployment which actually uh contains the operator so if i do now",
    "start": "560080",
    "end": "565760"
  },
  {
    "text": "cube ctl get pot i can see the operator is already running there are also other",
    "start": "565760",
    "end": "572480"
  },
  {
    "text": "ways how you can install the operator so on our website or on the github page",
    "start": "572480",
    "end": "578160"
  },
  {
    "text": "you can download the yaml files directly to install it from there we have also a helm chart that's your",
    "start": "578160",
    "end": "585600"
  },
  {
    "text": "preferred way and then streams is also on the operator hub.io so you can also install it easily",
    "start": "585600",
    "end": "592800"
  },
  {
    "text": "uh from there so you can really choose whatever fits you best now if you know the operators you",
    "start": "592800",
    "end": "599680"
  },
  {
    "text": "know that the next thing which i will do will be to create some custom resource",
    "start": "599680",
    "end": "604880"
  },
  {
    "text": "for those who don't know that much about operators yet the custom resource really extends the",
    "start": "604880",
    "end": "612240"
  },
  {
    "start": "605000",
    "end": "924000"
  },
  {
    "text": "kubernetes api and allows us to add some own resources in our case i will be",
    "start": "612240",
    "end": "618959"
  },
  {
    "text": "using here kafka resource and when the resource is created then the operator will see it and it",
    "start": "618959",
    "end": "625760"
  },
  {
    "text": "will make sure that it deploys the kafka cluster accordingly and it doesn't just do the deployment",
    "start": "625760",
    "end": "630880"
  },
  {
    "text": "and installation but it will also make sure it is managed",
    "start": "630880",
    "end": "636880"
  },
  {
    "text": "while it is running it keeps running and it can take care of things like certificate renewals upgrades to new",
    "start": "636880",
    "end": "643839"
  },
  {
    "text": "versions and so on the custom resource really serves",
    "start": "643839",
    "end": "648880"
  },
  {
    "text": "basically as a blueprint for the kafka cluster this one is one of the more simple one it really",
    "start": "648880",
    "end": "654640"
  },
  {
    "text": "just specifies the version of kafka which we should use number of replicas",
    "start": "654640",
    "end": "660399"
  },
  {
    "text": "it configures the kafka listeners where the clients will be connecting some configuration it configures the",
    "start": "660399",
    "end": "667360"
  },
  {
    "text": "storage and then because kafka depends on the zookeeper as a kind of",
    "start": "667360",
    "end": "673279"
  },
  {
    "text": "dependency to bootstrap the cluster and do some hard beating and leader election",
    "start": "673279",
    "end": "678560"
  },
  {
    "text": "then we need to deploy zookeeper as well so zookeeper is part of this resource",
    "start": "678560",
    "end": "684079"
  },
  {
    "text": "also now what i will actually deploy is uh a bit more complex custom resource where",
    "start": "684079",
    "end": "691440"
  },
  {
    "text": "i specify some more things such as how many resources should the brokers",
    "start": "691440",
    "end": "696720"
  },
  {
    "text": "get uh i configure the encryption and authentication",
    "start": "696720",
    "end": "702399"
  },
  {
    "text": "and authorization to have security in the cluster and then",
    "start": "702399",
    "end": "708560"
  },
  {
    "text": "i can also enable for example the prometeuse metrics from here and then i do the same for the zookeeper",
    "start": "708560",
    "end": "716399"
  },
  {
    "text": "as well and i deploy also something what's called kafka exporter which helps with",
    "start": "716399",
    "end": "721519"
  },
  {
    "text": "metrics and all i need to do to actually deploy the cluster",
    "start": "721519",
    "end": "728720"
  },
  {
    "text": "is to apply the resource and the operator will basically",
    "start": "728720",
    "end": "734639"
  },
  {
    "text": "immediately see it and it will start deploying the bots so what we can see here is that it's",
    "start": "734639",
    "end": "741360"
  },
  {
    "text": "already deploying the zookeeper cluster so we can see zookeeper ports 0",
    "start": "741360",
    "end": "746639"
  },
  {
    "text": "1 and 2 and the operator will wait until the zookeeper cluster is ready until it is bootstrapped and",
    "start": "746639",
    "end": "753920"
  },
  {
    "text": "prepared to work and only when that happens",
    "start": "753920",
    "end": "759120"
  },
  {
    "text": "it will actually move to the kafka deployment so you can see that the zookeeper pods",
    "start": "759120",
    "end": "765200"
  },
  {
    "text": "are now getting ready and now it will provision the kafka storage using the storage",
    "start": "765200",
    "end": "772800"
  },
  {
    "text": "class and persistent volume claims and we can see now the kafka pots",
    "start": "772800",
    "end": "778480"
  },
  {
    "text": "starting as well and again it will wait until the kafka",
    "start": "778480",
    "end": "785760"
  },
  {
    "text": "cluster is ready and available and then it will deploy",
    "start": "785760",
    "end": "792959"
  },
  {
    "text": "the entity operator as paolo mentioned we have also custom resources for users",
    "start": "792959",
    "end": "800240"
  },
  {
    "text": "and topics and that's what the entity operator is responsible for and as you can see the",
    "start": "800240",
    "end": "808560"
  },
  {
    "text": "whole process is quite fast uh it really depends a lot on",
    "start": "808560",
    "end": "815120"
  },
  {
    "text": "how fast your internet connection is and uh how quickly the",
    "start": "815120",
    "end": "820320"
  },
  {
    "text": "container images will be pulled uh and so on so now we can see that kafka is there",
    "start": "820320",
    "end": "826079"
  },
  {
    "text": "the entity operator is now deployed and when that is ready it will deploy the kafka exporter",
    "start": "826079",
    "end": "833440"
  },
  {
    "text": "and in this demo i'm really showing just the deployment of the kafka cluster",
    "start": "833440",
    "end": "838480"
  },
  {
    "text": "but more or less in exactly the same way you can also deploy the kafka connect or the mirror maker or for",
    "start": "838480",
    "end": "846240"
  },
  {
    "text": "example the http bridge so the entity operator is now deployed",
    "start": "846240",
    "end": "854800"
  },
  {
    "text": "now just the kafka exporter",
    "start": "854800",
    "end": "860079"
  },
  {
    "text": "and once the kafka exporter is ready then basically the whole cluster will be deployed and",
    "start": "862639",
    "end": "869600"
  },
  {
    "text": "available and we can check that by doing cube ctl",
    "start": "869600",
    "end": "875519"
  },
  {
    "text": "get kafka which shows us that we have this my cluster",
    "start": "875519",
    "end": "880800"
  },
  {
    "text": "kafka resource with free kafka notes and three zookeeper notes and we can also do",
    "start": "880800",
    "end": "887760"
  },
  {
    "text": "get it in yammo and we can see that these are for example the addresses where the kafka clients can connect",
    "start": "887760",
    "end": "895279"
  },
  {
    "text": "this one is using load balancers from the outside for example from my laptop this one is from applications running",
    "start": "895279",
    "end": "902000"
  },
  {
    "text": "inside the cluster and then we can also see that the state of the cluster is",
    "start": "902000",
    "end": "907040"
  },
  {
    "text": "ready so now we have the cluster running and we should deploy some",
    "start": "907040",
    "end": "912160"
  },
  {
    "text": "application right so let's start by preparing some user for that application and the topic",
    "start": "912160",
    "end": "920320"
  },
  {
    "text": "and that's where we will use the entity operator so for the user we have the kafka user",
    "start": "920320",
    "end": "926160"
  },
  {
    "start": "924000",
    "end": "1277000"
  },
  {
    "text": "resource in my case the user is named my user",
    "start": "926160",
    "end": "931920"
  },
  {
    "text": "and inside this resource i can say that this user should be allowed to use",
    "start": "931920",
    "end": "937199"
  },
  {
    "text": "tls authentication and i can also because i'm using the",
    "start": "937199",
    "end": "943279"
  },
  {
    "text": "authorization i can also specify the authorization rules so for example in my case i give it the",
    "start": "943279",
    "end": "951279"
  },
  {
    "text": "right to send messages to kafka topic which is called my topic and",
    "start": "951279",
    "end": "957360"
  },
  {
    "text": "i allow it to consume the messages from this topic as well and again",
    "start": "957360",
    "end": "964560"
  },
  {
    "text": "i just apply the resource that we created and because we selected",
    "start": "965199",
    "end": "972959"
  },
  {
    "text": "uh that we want to use tls client certificates for authentication then i can check and there should be a",
    "start": "972959",
    "end": "980839"
  },
  {
    "text": "secret called my user which is the same as the username which was created by the entity operator",
    "start": "980839",
    "end": "988560"
  },
  {
    "text": "and which contains the authentication details for connecting to",
    "start": "988560",
    "end": "994320"
  },
  {
    "text": "for authenticating to the cluster and when i check the details what's inside the secret uh",
    "start": "994320",
    "end": "1001360"
  },
  {
    "text": "we can see that it has basically the user key and user certificate which i will use for uh authentication",
    "start": "1001360",
    "end": "1008800"
  },
  {
    "text": "and if i would choose some different mechanism for example uh uh scramcha for using",
    "start": "1008800",
    "end": "1015600"
  },
  {
    "text": "username and password then the secret will contain uh the password for authentication",
    "start": "1015600",
    "end": "1022560"
  },
  {
    "text": "instead of the certificates and so this is when you want to manage the users",
    "start": "1022560",
    "end": "1028480"
  },
  {
    "text": "locally but it's not the only option which we have you can for example use for the authentication oauth using",
    "start": "1028480",
    "end": "1036079"
  },
  {
    "text": "oauth tokens and manage the user centrally in your oauth server and you can use all also for",
    "start": "1036079",
    "end": "1043760"
  },
  {
    "text": "authorization or for example we have also an option to use open policy agent for authorization",
    "start": "1043760",
    "end": "1050880"
  },
  {
    "text": "so that was the user next we need to create a topic for that we have a resource called kafka",
    "start": "1050880",
    "end": "1056640"
  },
  {
    "text": "topic and uh i'm great at creating unique names so i call it my",
    "start": "1056640",
    "end": "1063039"
  },
  {
    "text": "topic it will have 12 partitions and three replicas and i can also add the config section",
    "start": "1063039",
    "end": "1069679"
  },
  {
    "text": "where i can specify all the different details for this topic and uh again",
    "start": "1069679",
    "end": "1077039"
  },
  {
    "text": "i just apply resource to get the topic created and",
    "start": "1077039",
    "end": "1084080"
  },
  {
    "text": "the great thing about this is that i do not really need to remember all the commands from kafka",
    "start": "1084080",
    "end": "1091120"
  },
  {
    "text": "all the tools all the options all the parameters and execute them somewhere but i really",
    "start": "1091120",
    "end": "1097280"
  },
  {
    "text": "just have this custom resource in yaml which i can use and then",
    "start": "1097280",
    "end": "1102960"
  },
  {
    "text": "with the topic and the user ready we have to deploy the application right and i have here really just some",
    "start": "1102960",
    "end": "1110080"
  },
  {
    "text": "simple hello world producer and consumer which run as a deployment",
    "start": "1110080",
    "end": "1115360"
  },
  {
    "text": "uh what's the nice thing is that uh because the entity operator created the",
    "start": "1115360",
    "end": "1121679"
  },
  {
    "text": "secret with the credentials for the user i really just need to mount the secret as a volume or use it as environment",
    "start": "1121679",
    "end": "1128640"
  },
  {
    "text": "variable and i can use the certificates from it for the authentication so i do not need to copy them anywhere i",
    "start": "1128640",
    "end": "1135679"
  },
  {
    "text": "can't really just use the the kubernetes api for this",
    "start": "1135679",
    "end": "1142160"
  },
  {
    "text": "and when i apply it",
    "start": "1142160",
    "end": "1145360"
  },
  {
    "text": "we can uh check that the pots are starting and we can check uh",
    "start": "1148640",
    "end": "1156400"
  },
  {
    "text": "in the lock of the consumer that it is actually receiving some uh messages uh as you can see it's",
    "start": "1156400",
    "end": "1163360"
  },
  {
    "text": "really just a sample application so it's really just sending every second some hello world message",
    "start": "1163360",
    "end": "1169280"
  },
  {
    "text": "but yeah that shows uh that it works and uh the great thing about uh having",
    "start": "1169280",
    "end": "1176160"
  },
  {
    "text": "the kafka user and kafka topic resources is that when you develop your application you can basically take all",
    "start": "1176160",
    "end": "1181760"
  },
  {
    "text": "these resources the kubernetes deployment the kafka user and the kafka topic you",
    "start": "1181760",
    "end": "1186960"
  },
  {
    "text": "can for example store it in the github together with your application and then for example use some github's",
    "start": "1186960",
    "end": "1192320"
  },
  {
    "text": "tooling to get that automatically deployed and it can travel with the",
    "start": "1192320",
    "end": "1197440"
  },
  {
    "text": "code together with your application uh through the test environments",
    "start": "1197440",
    "end": "1203919"
  },
  {
    "text": "production and so on and you don't really need to have some complicated installation guide book",
    "start": "1203919",
    "end": "1210640"
  },
  {
    "text": "which would explain how to create the topics or the users in kafka and",
    "start": "1210640",
    "end": "1216880"
  },
  {
    "text": "i also wanted to show that while streaming makes it easy to deploy and manage the kafka",
    "start": "1216880",
    "end": "1223039"
  },
  {
    "text": "cluster it's not really just something for playing locally we really support the features which you need to run",
    "start": "1223039",
    "end": "1229200"
  },
  {
    "text": "production clusters and we have of course users using streams in production so for",
    "start": "1229200",
    "end": "1235039"
  },
  {
    "text": "example what i get automatically out of the box are things such as prometheus monitoring so",
    "start": "1235039",
    "end": "1240400"
  },
  {
    "text": "i can see here in my grafana dashboard that i have free brokers i have 186",
    "start": "1240400",
    "end": "1246840"
  },
  {
    "text": "partitions i can see all the different metrics uh",
    "start": "1246840",
    "end": "1252559"
  },
  {
    "text": "right now of course with the hello world application the throughput in the cluster is very small but you get this all built in including",
    "start": "1252559",
    "end": "1260799"
  },
  {
    "text": "the kubernetes uh the grafana dashboards and some sample alerts uh",
    "start": "1260799",
    "end": "1266320"
  },
  {
    "text": "and uh things like that so uh uh yeah that's it for this demo and uh",
    "start": "1266320",
    "end": "1273440"
  },
  {
    "text": "back to paulo",
    "start": "1273440",
    "end": "1277840"
  },
  {
    "start": "1277000",
    "end": "1289000"
  },
  {
    "text": "so thank you very much jacob it was a great demo showing what is the kind of kubernetes native",
    "start": "1280000",
    "end": "1285600"
  },
  {
    "text": "experience for handling the kafka cluster right so uh jakub showed us uh some of the",
    "start": "1285600",
    "end": "1291760"
  },
  {
    "start": "1289000",
    "end": "1462000"
  },
  {
    "text": "features that stream z provides but uh stream z has a lot of",
    "start": "1291760",
    "end": "1296799"
  },
  {
    "text": "features so you can see here showing up different uh features like scaling up and scaling",
    "start": "1296799",
    "end": "1304080"
  },
  {
    "text": "down easily you can just change the number of replicas on your kafka resource you can even use affinity and toleration",
    "start": "1304080",
    "end": "1310880"
  },
  {
    "text": "in order to define the nodes where you would like to deploy your kafka brokers instead of",
    "start": "1310880",
    "end": "1317039"
  },
  {
    "text": "other pods you can even enable the encryption so having tls as shown by",
    "start": "1317039",
    "end": "1323200"
  },
  {
    "text": "jakub with clients but even internally between the brokers you have acl sendling for handling",
    "start": "1323200",
    "end": "1330559"
  },
  {
    "text": "the rights for writing and reading from the topics for the users as you already mentioned integration",
    "start": "1330559",
    "end": "1336559"
  },
  {
    "text": "with cruise control kafka connect the http breach mirroring uh secrets are used for",
    "start": "1336559",
    "end": "1342559"
  },
  {
    "text": "storing the credentials and the certificates you also have um",
    "start": "1342559",
    "end": "1347760"
  },
  {
    "text": "metrics from all the components so from the the the operator itself from kafka from",
    "start": "1347760",
    "end": "1353919"
  },
  {
    "text": "zookeeper kafka connect and so on and we provide some grafana dashboard that yakub showed",
    "start": "1353919",
    "end": "1359520"
  },
  {
    "text": "about showing all these metrics through prometheus of course uh so these are a bunch of features or",
    "start": "1359520",
    "end": "1366400"
  },
  {
    "text": "part of the features that stream zero course provides today but other than uh the built-in features",
    "start": "1366400",
    "end": "1372320"
  },
  {
    "text": "we can also say that stream z really integrates pretty well with some other",
    "start": "1372320",
    "end": "1377679"
  },
  {
    "text": "uh cncf projects like of course kubernetes uh also with the helm because we provide",
    "start": "1377679",
    "end": "1384799"
  },
  {
    "text": "helm charts for deploying z there is of course the integration with prometheus",
    "start": "1384799",
    "end": "1390320"
  },
  {
    "text": "exposing the metrics and showing them in grafana fluency for example a support for kafka",
    "start": "1390320",
    "end": "1396880"
  },
  {
    "text": "that you can deploy on kubernetes using stream zeo chords there is uh integration with jaeger and",
    "start": "1396880",
    "end": "1402799"
  },
  {
    "text": "open tracing for uh for doing some tracing so tracing uh so getting some tracing information",
    "start": "1402799",
    "end": "1409120"
  },
  {
    "text": "about the messages exchanged between clients uh through uh kafka topics and even integration",
    "start": "1409120",
    "end": "1417120"
  },
  {
    "text": "with the opa so the open policy agent for the authorization so that you can",
    "start": "1417120",
    "end": "1422559"
  },
  {
    "text": "specify and describe using opa um what are the topics that a consumer",
    "start": "1422559",
    "end": "1429120"
  },
  {
    "text": "can read the producer can write and so on and there is also integration with kida",
    "start": "1429120",
    "end": "1434159"
  },
  {
    "text": "which is um pretty new in cncf today and it's a",
    "start": "1434159",
    "end": "1439840"
  },
  {
    "text": "project for event driven auto scaling application so can you can auto scale your kafka based",
    "start": "1439840",
    "end": "1446400"
  },
  {
    "text": "application using a kafka scaler provided by kida and you can of course",
    "start": "1446400",
    "end": "1452080"
  },
  {
    "text": "deploy your kafka cluster alongside kida using streams so there is a great",
    "start": "1452080",
    "end": "1457440"
  },
  {
    "text": "integration with all this kind of project in the cncf family",
    "start": "1457440",
    "end": "1462559"
  },
  {
    "start": "1462000",
    "end": "1600000"
  },
  {
    "text": "um at this point what's the way a kind of call to action for engaging with the community with the upstream",
    "start": "1462559",
    "end": "1469200"
  },
  {
    "text": "community in stream z first of all you can just go on the streets website and download the uh",
    "start": "1469200",
    "end": "1475360"
  },
  {
    "text": "stream z try it locally on soundcloud provider so on your kubernetes installation",
    "start": "1475360",
    "end": "1483520"
  },
  {
    "text": "you maybe can find some bug running streams and try and seems it so it will be great",
    "start": "1483520",
    "end": "1488799"
  },
  {
    "text": "submitting the bug so you can open a github issue in our github repo explain about the bug",
    "start": "1488799",
    "end": "1497200"
  },
  {
    "text": "and if you have a fix it will be great that you could even open a pull request on the github",
    "start": "1497200",
    "end": "1503760"
  },
  {
    "text": "repo so submitting your code but you can even submit your code if you have some new ideas around stream z so",
    "start": "1503760",
    "end": "1510320"
  },
  {
    "text": "you want to propose some features to add to streams itself you can also help with the the",
    "start": "1510320",
    "end": "1517440"
  },
  {
    "text": "documentation so um not developing stuff but uh writing documentation improving the",
    "start": "1517440",
    "end": "1524000"
  },
  {
    "text": "documentation that we have today if you find some typos if you",
    "start": "1524000",
    "end": "1530080"
  },
  {
    "text": "would like to make clearer some part of the documentation that you didn't get well while going through the",
    "start": "1530080",
    "end": "1536080"
  },
  {
    "text": "documentation itself and you can even help translating the documentation in your language so",
    "start": "1536080",
    "end": "1542000"
  },
  {
    "text": "for making streams easily available uh across the world in different",
    "start": "1542000",
    "end": "1547279"
  },
  {
    "text": "languages you can even join our chat room we have a room in the cncf slack workspace",
    "start": "1547279",
    "end": "1554080"
  },
  {
    "text": "you can of course um follow us on twitter uh we have a stringy twitter account",
    "start": "1554080",
    "end": "1559760"
  },
  {
    "text": "where we tweet about a new release new blog post uh new features",
    "start": "1559760",
    "end": "1565520"
  },
  {
    "text": "um in strimzy but you can also help us spreading the word so",
    "start": "1565520",
    "end": "1572080"
  },
  {
    "text": "talking about streamsy and maybe the project where you are using streams or some ideas that you have around shreemzy",
    "start": "1572080",
    "end": "1579279"
  },
  {
    "text": "at conferences at meetups or even writing articles or blog posts and if you don't have a",
    "start": "1579279",
    "end": "1586320"
  },
  {
    "text": "place for blogging you can of course blog with us so you can contact us and you can write",
    "start": "1586320",
    "end": "1594000"
  },
  {
    "text": "your article on the official streamsy website in our blog so say that what's the way",
    "start": "1594000",
    "end": "1601919"
  },
  {
    "start": "1600000",
    "end": "1644000"
  },
  {
    "text": "for reaching the upstream community uh of course there is the official website so streams dot io",
    "start": "1601919",
    "end": "1608559"
  },
  {
    "text": "there is a stream the organization under github it's an organization where all the components in the stream",
    "start": "1608559",
    "end": "1614799"
  },
  {
    "text": "the ecosystem live so like for example the operator of course",
    "start": "1614799",
    "end": "1620000"
  },
  {
    "text": "uh the the http breach the oauth library but even some client uh examples for for",
    "start": "1620000",
    "end": "1627039"
  },
  {
    "text": "interacting with the kafka cluster uh deployed by stream z the twitter account that i mentioned and even the streams",
    "start": "1627039",
    "end": "1633919"
  },
  {
    "text": "room in the cncf select workspace we also have a mailing list in order to",
    "start": "1633919",
    "end": "1640159"
  },
  {
    "text": "interact with us just sending an email so i guess that that's all on our side i",
    "start": "1640159",
    "end": "1646399"
  },
  {
    "start": "1644000",
    "end": "2093000"
  },
  {
    "text": "really hope that you enjoyed this session and that you will go and try streamsy",
    "start": "1646399",
    "end": "1651919"
  },
  {
    "text": "and we will be really happy to to to know from you from having some feedback for",
    "start": "1651919",
    "end": "1657840"
  },
  {
    "text": "improving this project and maybe engaging with us in the future so thank you very much",
    "start": "1657840",
    "end": "1669120"
  },
  {
    "text": "thanks for joining our session uh i hope this was useful for you uh there are a lot of questions uh so i",
    "start": "1669120",
    "end": "1677360"
  },
  {
    "text": "will try to go through some of them if i don't manage to answer your question yet or if i don't get to it in",
    "start": "1677360",
    "end": "1684240"
  },
  {
    "text": "the live q a then in 30 minutes we have mid maintainers",
    "start": "1684240",
    "end": "1689919"
  },
  {
    "text": "session where you can join and we can continue the discussion there and you can of course also ask in the in",
    "start": "1689919",
    "end": "1697679"
  },
  {
    "text": "the slack channels uh as well and uh we are also running uh",
    "start": "1697679",
    "end": "1703440"
  },
  {
    "text": "streams survey so uh if you are interesting to help us",
    "start": "1703440",
    "end": "1710159"
  },
  {
    "text": "know more about your requirements and missing features and so on then please go to our website there you find the",
    "start": "1710159",
    "end": "1716320"
  },
  {
    "text": "link and you can fill it in so let's have a look at uh some of the",
    "start": "1716320",
    "end": "1722000"
  },
  {
    "text": "questions which we got uh first of all there's",
    "start": "1722000",
    "end": "1727120"
  },
  {
    "text": "are two questions which are a bit similar one is uh whether there are plans to replace zookeeper uh",
    "start": "1727120",
    "end": "1733919"
  },
  {
    "text": "and another one is uh uh whether there is any initiative",
    "start": "1733919",
    "end": "1741440"
  },
  {
    "text": "for unifying common dependencies like zookeeper which are used in a different project",
    "start": "1741440",
    "end": "1747520"
  },
  {
    "text": "so maybe the kafka perspective is a bit different so if you follow the apache kafka community",
    "start": "1747520",
    "end": "1754000"
  },
  {
    "text": "zookeeper is being slowly removed from the kafka project and should be not needed in the future",
    "start": "1754000",
    "end": "1760320"
  },
  {
    "text": "and since strimsy focus on apache kafka then we will basically follow that up and uh",
    "start": "1760320",
    "end": "1766720"
  },
  {
    "text": "as it is removed from kafka we will then use only kafka and not need zookeeper anymore",
    "start": "1766720",
    "end": "1773039"
  },
  {
    "text": "so uh uh that way we will just upgrade and that would not",
    "start": "1773039",
    "end": "1778240"
  },
  {
    "text": "deploy zookeeper anymore and i think the current time expectations are maybe around end of this year or",
    "start": "1778240",
    "end": "1785600"
  },
  {
    "text": "beginning of next year when this might happen in the apache kafka project",
    "start": "1785600",
    "end": "1791120"
  },
  {
    "text": "then another question was uh did you try to run it uh with istio",
    "start": "1791120",
    "end": "1797520"
  },
  {
    "text": "uh so i personally didn't run streams with istio but we have users",
    "start": "1797520",
    "end": "1802559"
  },
  {
    "text": "uh using strimzy together with istio strimzy right now doesn't kind of",
    "start": "1802559",
    "end": "1808159"
  },
  {
    "text": "tightly integrate into istio and run as a part of his steel so the users who are using this boat",
    "start": "1808159",
    "end": "1813919"
  },
  {
    "text": "together they always configure steel to kind of exclude strimzy uh from uh",
    "start": "1813919",
    "end": "1820320"
  },
  {
    "text": "the uh from kind of the istio side cars and not uh use them to do all the",
    "start": "1820320",
    "end": "1827200"
  },
  {
    "text": "traffic and instead kind of rode the traffic to strimzy and the kafka brokers as to an",
    "start": "1827200",
    "end": "1832320"
  },
  {
    "text": "external application so you can run it together but it's not fully running uh",
    "start": "1832320",
    "end": "1837600"
  },
  {
    "text": "strimsiest part of istio another question was uh whether there is",
    "start": "1837600",
    "end": "1845679"
  },
  {
    "text": "uh any roadmap for all the different projects and",
    "start": "1845679",
    "end": "1852320"
  },
  {
    "text": "features of strimzy if you go to our github organization",
    "start": "1852320",
    "end": "1858640"
  },
  {
    "text": "there's a github project which is used as a roadmap where you can have a look and uh yeah if you think we are missing",
    "start": "1858640",
    "end": "1866240"
  },
  {
    "text": "something uh then we can definitely edit uh right now in the stream z there's a lot",
    "start": "1866240",
    "end": "1872399"
  },
  {
    "text": "of work going on around the ui which would allow to manage uh",
    "start": "1872399",
    "end": "1877440"
  },
  {
    "text": "strimzy and kafka itself like the kafka topics",
    "start": "1877440",
    "end": "1883039"
  },
  {
    "text": "consumer groups so that's for example one of the big things uh coming in in the future",
    "start": "1883039",
    "end": "1891279"
  },
  {
    "text": "uh then another question was does streams also include components such as",
    "start": "1891279",
    "end": "1897360"
  },
  {
    "text": "asr rest proxy kafka manager so we include some components but not",
    "start": "1897360",
    "end": "1903919"
  },
  {
    "text": "all of these we have our own rest proxy which is integrated into strimzy",
    "start": "1903919",
    "end": "1911840"
  },
  {
    "text": "we have support for cruise control for",
    "start": "1911840",
    "end": "1917440"
  },
  {
    "text": "balancing the cluster and that's all built in and as i said we are",
    "start": "1917440",
    "end": "1924640"
  },
  {
    "text": "working on uh on the ui and some kind of rest api for",
    "start": "1924640",
    "end": "1932080"
  },
  {
    "text": "also managing the things a bit more so not all of these are really built in but some of these are and the",
    "start": "1932080",
    "end": "1939600"
  },
  {
    "text": "rest can be usually connected uh really as yet another kafka operator so",
    "start": "1939600",
    "end": "1944640"
  },
  {
    "text": "to be honest uh you do not always need operator for anything some of these things are just",
    "start": "1944640",
    "end": "1949919"
  },
  {
    "text": "easier to deploy as a regular deployment that for example includes uh schema registries",
    "start": "1949919",
    "end": "1957840"
  },
  {
    "text": "uh then another question was uh how would one perform performance tuning",
    "start": "1957840",
    "end": "1964640"
  },
  {
    "text": "on streamsy for example number of disks which can affect the performance uh",
    "start": "1964640",
    "end": "1970559"
  },
  {
    "text": "or if you can specify on which types should the brokers running",
    "start": "1970559",
    "end": "1978320"
  },
  {
    "text": "so you can definitely do it because strimsy supports all kind of different",
    "start": "1978320",
    "end": "1983440"
  },
  {
    "text": "uh environments starting from the kind of basic mini cube environment",
    "start": "1983440",
    "end": "1990320"
  },
  {
    "text": "which the users can run locally up to the big public clouds",
    "start": "1990320",
    "end": "1995760"
  },
  {
    "text": "these are not always enabled by default but you can for example use affinity",
    "start": "1995760",
    "end": "2003440"
  },
  {
    "text": "in the configuration to define on which nodes should the brokers be scheduled we also",
    "start": "2003440",
    "end": "2010559"
  },
  {
    "text": "support the jbod storage so if you want you can specify that you want the kafka clusters to use",
    "start": "2010559",
    "end": "2017279"
  },
  {
    "text": "multiple disks and we will then just create",
    "start": "2017279",
    "end": "2024559"
  },
  {
    "text": "this disk and mount mount multiple of them into single port and that way you can kind of",
    "start": "2024559",
    "end": "2032320"
  },
  {
    "text": "use more storage or get better performance from the individual brokers and you can also",
    "start": "2032320",
    "end": "2042080"
  },
  {
    "text": "use most of the different kafka configuration options to tune the performance so",
    "start": "2042880",
    "end": "2049599"
  },
  {
    "text": "the operator itself managed some of them related to things like tls and listener configuration but all",
    "start": "2049599",
    "end": "2056878"
  },
  {
    "text": "of the different buffer sizes and number of threads and so on you can easily configure it",
    "start": "2056879",
    "end": "2062638"
  },
  {
    "text": "yourself and that was the last question which i",
    "start": "2062639",
    "end": "2068240"
  },
  {
    "text": "managed to answer uh there will be a threat on the",
    "start": "2068240",
    "end": "2073440"
  },
  {
    "text": "slack uh where you can continue asking the questions",
    "start": "2073440",
    "end": "2078878"
  },
  {
    "text": "and as i said in around 25 minutes we have me the maintainer session so feel free to join there as well and",
    "start": "2078879",
    "end": "2085520"
  },
  {
    "text": "we can continue answering the questions there thanks for coming for our talk and q a",
    "start": "2085520",
    "end": "2095200"
  }
]