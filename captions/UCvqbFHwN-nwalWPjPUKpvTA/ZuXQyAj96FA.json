[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "good morning afternoon or evening to everyone uh wherever you are thanks for joining",
    "start": "80",
    "end": "6240"
  },
  {
    "text": "this virtual session my name is uh samuel ortiz and today i'm going to talk",
    "start": "6240",
    "end": "14920"
  },
  {
    "text": "about for the cloud native uh ecosystem and",
    "start": "14920",
    "end": "20000"
  },
  {
    "start": "15000",
    "end": "52000"
  },
  {
    "text": "how we're trying uh with the two projects catacontainers 2.0",
    "start": "20000",
    "end": "25039"
  },
  {
    "text": "and cloud provider we're trying to make hardware virtualization a cheap commodity for a cloud native",
    "start": "25039",
    "end": "32880"
  },
  {
    "text": "i work for intel and i actually work on those two products category",
    "start": "32880",
    "end": "38239"
  },
  {
    "text": "containers 3.0 and well cata containers and and cloud improviser so before going into",
    "start": "38239",
    "end": "45440"
  },
  {
    "text": "a description of what cata 2.0 is and how this mix this combines together",
    "start": "45440",
    "end": "51520"
  },
  {
    "text": "with the cloudvisor let me quickly hopefully very quickly recap how a",
    "start": "51520",
    "end": "59199"
  },
  {
    "text": "container is actually managed and launched with kubernetes so that we can see how our cata",
    "start": "59199",
    "end": "66159"
  },
  {
    "text": "containers place in that picture so on any given node you have a",
    "start": "66159",
    "end": "71200"
  },
  {
    "text": "cubelet agent and this agent talks to a cri runtime through",
    "start": "71200",
    "end": "77600"
  },
  {
    "text": "the cri specification so typically as hero runtimes it's either continuity",
    "start": "77600",
    "end": "84000"
  },
  {
    "text": "or cryo and then the cri runtime will",
    "start": "84000",
    "end": "90720"
  },
  {
    "text": "call into an actual container runtime and through the runtime class you can",
    "start": "90720",
    "end": "96799"
  },
  {
    "text": "specify which runtime you want to use most of the time and by default people",
    "start": "96799",
    "end": "102320"
  },
  {
    "text": "will call in to run c the uh the regular oci",
    "start": "102320",
    "end": "107680"
  },
  {
    "text": "standard runtime and what runs is going to do is creating a container",
    "start": "107680",
    "end": "115200"
  },
  {
    "text": "well actually a pod hosting here in that example a couple of containers a couple of",
    "start": "115200",
    "end": "120799"
  },
  {
    "text": "workloads that are isolated from the rest of the system through namespaces",
    "start": "120799",
    "end": "126719"
  },
  {
    "text": "and that forms the pod now when we look at cata containers and i want to i want to describe this so",
    "start": "126719",
    "end": "132319"
  },
  {
    "text": "that we uh we understand what we're doing with cata 2.0 and the cloud visor and now when you look at",
    "start": "132319",
    "end": "137840"
  },
  {
    "text": "containers it's very similar in some ways and and quite different in other ways you still have a cubelet",
    "start": "137840",
    "end": "144720"
  },
  {
    "text": "agent calling into continuity of cryo through cri but then uh and thanks to",
    "start": "144720",
    "end": "150480"
  },
  {
    "text": "the runtime class specification which is part of the uh of the pod specification",
    "start": "150480",
    "end": "155519"
  },
  {
    "text": "you can tell your cri runtime which container runtime you want to use",
    "start": "155519",
    "end": "162959"
  },
  {
    "text": "you can you can tell it to use run c or you can tell it to use catacontinus and catacontainers as a",
    "start": "162959",
    "end": "169440"
  },
  {
    "text": "runtime um instead of creating a process running on the host uh or a few processes running on hosts",
    "start": "169440",
    "end": "176480"
  },
  {
    "text": "that make the pod uh cata containers will use hardware virtualization",
    "start": "176480",
    "end": "181760"
  },
  {
    "text": "as a container isolation layer so what it will do is calling into an",
    "start": "181760",
    "end": "188239"
  },
  {
    "text": "hypervisor or vmm and create a virtual machine where the pod is going to run and the",
    "start": "188239",
    "end": "195120"
  },
  {
    "text": "pod is going to manage is going to be managed by a specific agent inside the virtual machine called the",
    "start": "195120",
    "end": "201360"
  },
  {
    "text": "cata agent and as you can see here the pawn is going to run its own pod linux kernel",
    "start": "201360",
    "end": "209680"
  },
  {
    "text": "because the virtual machine that kind catacontinous launches is a full linux linux guest os",
    "start": "209680",
    "end": "216720"
  },
  {
    "text": "so when you look at this the quite a few components here that are very specific",
    "start": "216720",
    "end": "221840"
  },
  {
    "text": "to catacontainers we have an agent we have an hypervisor we have a linux guest kernel we have a cada",
    "start": "221840",
    "end": "229519"
  },
  {
    "text": "runtime that is different from ranzi and all those components",
    "start": "229519",
    "end": "234560"
  },
  {
    "start": "232000",
    "end": "411000"
  },
  {
    "text": "add together and while they create some overhead so you launch a virtual machine",
    "start": "234560",
    "end": "239760"
  },
  {
    "text": "and that has its own overhead and inside this virtual machine you run a agent that adds to the overhead",
    "start": "239760",
    "end": "247519"
  },
  {
    "text": "memory overhead but also boot time latency additions and overhead",
    "start": "247519",
    "end": "254000"
  },
  {
    "text": "um you had complexity compared to to the run c setup now you have more uh components that are running with cata",
    "start": "254000",
    "end": "260880"
  },
  {
    "text": "containers you have you have a virtual machine you have a few components running inside the virtual machine you have an additional",
    "start": "260880",
    "end": "266720"
  },
  {
    "text": "protocol between the cada runtime and the cata agent inside the virtual machine to",
    "start": "266720",
    "end": "271919"
  },
  {
    "text": "communicate through so that's that adds up in terms of complexity",
    "start": "271919",
    "end": "278880"
  },
  {
    "text": "and you also have some compatibility issues potentially the whole",
    "start": "278960",
    "end": "285520"
  },
  {
    "text": "clown native ecosystem is designed around the assumption that a container is going to be a process running on the host but here",
    "start": "285520",
    "end": "292720"
  },
  {
    "text": "with cata containers we are building a complete virtual machine where the container workloads and the",
    "start": "292720",
    "end": "298560"
  },
  {
    "text": "port workloads are going to be running so you you're going to have some issues",
    "start": "298560",
    "end": "303840"
  },
  {
    "text": "trying to be compatible with all the specifications that are designed for running processes on the host",
    "start": "303840",
    "end": "311919"
  },
  {
    "text": "so what we're doing with cata containers and what we're trying to improve in some cases incrementally in",
    "start": "311919",
    "end": "318320"
  },
  {
    "text": "some cases much more than incrementally with cata containers 2.0 and cloud upvisor is to reduce",
    "start": "318320",
    "end": "326320"
  },
  {
    "text": "the overhead the complexity and make the whole kind of containers",
    "start": "326320",
    "end": "333039"
  },
  {
    "text": "implementation fully compatible with with kubernetes while doing this we're trying to keep",
    "start": "333039",
    "end": "340479"
  },
  {
    "text": "the containers security promises which is mostly around security we want to use hardware virtualization as",
    "start": "340479",
    "end": "346720"
  },
  {
    "text": "an isolation layer and this is for having a stronger isolation layer than",
    "start": "346720",
    "end": "352479"
  },
  {
    "text": "the existing ones okay so what we did with cada containers 2.0",
    "start": "352479",
    "end": "360479"
  },
  {
    "text": "is improving and working on many of the components that are specific to cata contains",
    "start": "360479",
    "end": "367199"
  },
  {
    "text": "one of them as i mentioned is the cata agent this is an agent running on the virtual",
    "start": "367199",
    "end": "372240"
  },
  {
    "text": "machine that manages the pod and the the pod workloads in the virtual machine and it",
    "start": "372240",
    "end": "379440"
  },
  {
    "text": "communicates through uh a specific protocol typically through a vertical v-stock",
    "start": "379440",
    "end": "386080"
  },
  {
    "text": "socket um that communicates back to the uh to the cat at runtime and the guy agent basically you can you",
    "start": "386080",
    "end": "393039"
  },
  {
    "text": "can see it's as a reduced version of run c much reduced version of runty running",
    "start": "393039",
    "end": "399280"
  },
  {
    "text": "inside the virtual machine and managing the pod and the uh and the pod workloads",
    "start": "399280",
    "end": "405840"
  },
  {
    "text": "so what we observed um with uh the getta agent",
    "start": "405840",
    "end": "413280"
  },
  {
    "start": "411000",
    "end": "531000"
  },
  {
    "text": "is that it was consuming um about 10 megabytes of memory so",
    "start": "414080",
    "end": "420319"
  },
  {
    "text": "each and every pot that you launch uh includes a cata agent and that cat agent was",
    "start": "420319",
    "end": "426639"
  },
  {
    "text": "consuming 10 megabytes of physical memory from the host so that's that's that's quite a bit of",
    "start": "426639",
    "end": "433599"
  },
  {
    "text": "overhead that you induce with with with your agent so we did two things um we re-implemented um cata",
    "start": "433599",
    "end": "441759"
  },
  {
    "text": "in rust from go the cata agents are in rust from go and we also switch from",
    "start": "441759",
    "end": "448720"
  },
  {
    "text": "a grpc to ttr pc and when combining those two together um we significantly reduced the memory",
    "start": "448720",
    "end": "456720"
  },
  {
    "text": "overhead that the ketta agent added to the to the cata containers project",
    "start": "456720",
    "end": "462479"
  },
  {
    "text": "from roughly 10 megabytes to something between one and two megabytes so",
    "start": "462479",
    "end": "468319"
  },
  {
    "text": "with that new implementation of the agent you save about eighty percent of the of the agent",
    "start": "468319",
    "end": "474319"
  },
  {
    "text": "memory functions so that's that's uh significant improvement",
    "start": "474319",
    "end": "480400"
  },
  {
    "text": "we also simplify the uh the protocol between the the agent and the anticli runtime",
    "start": "480400",
    "end": "486960"
  },
  {
    "text": "to make it easier to maintain and also easier to understand easier to extend as well if we ever need",
    "start": "486960",
    "end": "493120"
  },
  {
    "text": "to we took a lesson from from kata1.x and understood what is",
    "start": "493120",
    "end": "498240"
  },
  {
    "text": "really needed as a protocol between the the host and the cata agent",
    "start": "498240",
    "end": "503520"
  },
  {
    "text": "and we kind of work on that and make it simpler another component that we looked at is",
    "start": "503520",
    "end": "511840"
  },
  {
    "text": "the virtualization layer the hypervisor but here in that case for the uh",
    "start": "511840",
    "end": "519919"
  },
  {
    "text": "hypervisor that are supporting a vmm uh a virtual virtual machine",
    "start": "519919",
    "end": "528240"
  },
  {
    "text": "manager on top of kvm um and actually one year back uh",
    "start": "528240",
    "end": "535839"
  },
  {
    "start": "531000",
    "end": "592000"
  },
  {
    "text": "together with andrea florescu from aws we presented what we thought would be a cloud native",
    "start": "535839",
    "end": "542560"
  },
  {
    "text": "hypervisor what we thought would be a a vmm specifically crafted and designed for",
    "start": "542560",
    "end": "549200"
  },
  {
    "text": "the cloud native ecosystem and we look at the cri specification and",
    "start": "549200",
    "end": "554240"
  },
  {
    "text": "we basically map that down to a set of hardware virtualization",
    "start": "554240",
    "end": "559360"
  },
  {
    "text": "features and the the boxes on the right are the boxes that your hypervisor or your vmm",
    "start": "559360",
    "end": "567360"
  },
  {
    "text": "should implement to support the entire cri specification and i was i was mentioning the",
    "start": "567360",
    "end": "572959"
  },
  {
    "text": "incompatibility issues that you may have when running pods inside a virtual machine and that",
    "start": "572959",
    "end": "579440"
  },
  {
    "text": "is that is one one of them here you need to have a dmm that supports a bunch of uh specific",
    "start": "579440",
    "end": "585440"
  },
  {
    "text": "order virtualization feature to support the entire cri specs otherwise you kind of",
    "start": "585440",
    "end": "590880"
  },
  {
    "text": "you won't be able to support all of it so we work on this we work on a",
    "start": "590880",
    "end": "597120"
  },
  {
    "start": "592000",
    "end": "755000"
  },
  {
    "text": "new vmm called cloud upvisor which runs on top of kvm and which is based on the uh upstream",
    "start": "597120",
    "end": "604240"
  },
  {
    "text": "rossvmn project and cloud hypervisor is implementing the full",
    "start": "604240",
    "end": "609839"
  },
  {
    "text": "cri specification uh it basically implements the the entire set of hardware versus life",
    "start": "609839",
    "end": "615920"
  },
  {
    "text": "hardware virtualization features that i just highlighted and that allows us to support uh",
    "start": "615920",
    "end": "621360"
  },
  {
    "text": "entirely the uh the cri specification uh qmu is another uh vmm that that catacontainers",
    "start": "621360",
    "end": "629519"
  },
  {
    "text": "supports and that that basically provides the full cri support but the difference between cloud advisor",
    "start": "629519",
    "end": "635519"
  },
  {
    "text": "and one of the main difference between cloudwiser and qmu is the the language that is that it is implemented in",
    "start": "635519",
    "end": "641680"
  },
  {
    "text": "um cloud hypervisor is implemented in rust whereas a qmu is implemented in ce",
    "start": "641680",
    "end": "647040"
  },
  {
    "text": "rust being arguably one of the safest system programming languages out there",
    "start": "647040",
    "end": "654800"
  },
  {
    "text": "and last but not least cloud provisor is pretty fast so the the boot latency are",
    "start": "655200",
    "end": "662640"
  },
  {
    "text": "quite reduced uh with or minimized with the cloud advisor and the memory footprint which is",
    "start": "662640",
    "end": "668880"
  },
  {
    "text": "typically under 10 megabytes per per vmm with with cloud visor",
    "start": "668880",
    "end": "676079"
  },
  {
    "text": "um so another um aspect that we looked at with with cada container studio 0 is",
    "start": "676959",
    "end": "684480"
  },
  {
    "text": "observability and what we realized is that in order to deploy",
    "start": "684480",
    "end": "690480"
  },
  {
    "text": "catacontinuous scale and at a very large scale you need to have a very solid",
    "start": "690480",
    "end": "696240"
  },
  {
    "text": "way of gathering uh events and metrics and with cada 1.x we are missing um",
    "start": "696240",
    "end": "703600"
  },
  {
    "text": "quite a few of them um but we all we were also missing a seamless integration with the existing",
    "start": "703600",
    "end": "709200"
  },
  {
    "text": "tools like prometheus and with catacontinuous20 we are making sure that",
    "start": "709200",
    "end": "714959"
  },
  {
    "text": "there's a seamless integration with prometheus but also that we now provide a much more complete set of",
    "start": "714959",
    "end": "722639"
  },
  {
    "text": "metrics from the cata containers components to uh to whoever is gathering those",
    "start": "722639",
    "end": "730160"
  },
  {
    "text": "metrics from uh from prometheus so what we added is a catamonitor",
    "start": "730160",
    "end": "735920"
  },
  {
    "text": "component and here it may not be uh strictly in that diagram but there's one catamonitor component per node",
    "start": "735920",
    "end": "744240"
  },
  {
    "text": "and that kind of monitor daemon basically monitors the entire set of",
    "start": "744240",
    "end": "750000"
  },
  {
    "text": "containers running on your node and that's that cata monitor",
    "start": "750000",
    "end": "756839"
  },
  {
    "text": "implementation uh integrates seamlessly with premises as i said",
    "start": "756839",
    "end": "761920"
  },
  {
    "text": "and it provides a very interesting set of metrics from the hypervisor itself so from the",
    "start": "761920",
    "end": "767760"
  },
  {
    "text": "whole virtualization layer from the agent we get metrics from the agent as well",
    "start": "767760",
    "end": "773040"
  },
  {
    "text": "and from the virtual machine from the guests running inside the virtual machine as well",
    "start": "773040",
    "end": "778800"
  },
  {
    "text": "another interesting features that we added as part of the of the canon containers project is a pod",
    "start": "778800",
    "end": "785760"
  },
  {
    "text": "overhead which allows us to specify uh through the runtime if your runtime",
    "start": "785760",
    "end": "792079"
  },
  {
    "text": "class supports the port of a head feature you can specify how much a pod",
    "start": "792079",
    "end": "798480"
  },
  {
    "text": "is going to add into your memory and cpu uh consumption so that you can get a",
    "start": "798480",
    "end": "804240"
  },
  {
    "text": "more realistic measurement of the uh of the uh",
    "start": "804240",
    "end": "809360"
  },
  {
    "text": "resources consumption that your that your containers are consumed",
    "start": "809360",
    "end": "815839"
  },
  {
    "text": "okay um another uh very interesting uh aspect of what",
    "start": "816079",
    "end": "822560"
  },
  {
    "text": "we're what another interesting feature that is going to be landing in canada containers to zero eventually is how we",
    "start": "822560",
    "end": "832160"
  },
  {
    "text": "fetch the container images so typically today the way container images are handled",
    "start": "832160",
    "end": "839440"
  },
  {
    "text": "through containers is that you pull the container images from the host and you expose that container image into",
    "start": "839440",
    "end": "846399"
  },
  {
    "text": "the virtual machine because you need to run the pod inside the virtual machine so obviously your virtual machine needs to",
    "start": "846399",
    "end": "851760"
  },
  {
    "text": "have access to this to this container image so we expose the container image through",
    "start": "851760",
    "end": "857760"
  },
  {
    "text": "typically vert io it could be vertifs one of the latest vertical",
    "start": "857760",
    "end": "863120"
  },
  {
    "text": "specific specification edition uh could be the legacy 9p protocol or it could be something like",
    "start": "863120",
    "end": "869279"
  },
  {
    "text": "virtual block but basically your host is fetching the image",
    "start": "869279",
    "end": "874800"
  },
  {
    "text": "is managing the images and then you expose that image of those images into the virtual machine",
    "start": "874800",
    "end": "881519"
  },
  {
    "text": "and what we do with what we are planning to do with the catalog containers to the zero is",
    "start": "881519",
    "end": "886800"
  },
  {
    "text": "to have an optional way uh to optionally be able to fetch the container images from inside",
    "start": "886800",
    "end": "894399"
  },
  {
    "text": "the virtual machine so that sounds uh that sounds quite like a pretty big change and it it is one but",
    "start": "894399",
    "end": "902000"
  },
  {
    "start": "902000",
    "end": "1118000"
  },
  {
    "text": "the idea behind all this behind pulling images from the code is to basically extend",
    "start": "902000",
    "end": "909360"
  },
  {
    "text": "um the catacontainer threat model we want to extend it to the point where",
    "start": "909360",
    "end": "915600"
  },
  {
    "text": "as a tenant you no longer have to trust your csp you no longer have to trust your host you can basically say i'm running my",
    "start": "915600",
    "end": "923120"
  },
  {
    "text": "workload inside a virtual machine and when you combine this with technologies like total memory",
    "start": "923120",
    "end": "929360"
  },
  {
    "text": "encryption um that are available to to virtual machines on many architectures",
    "start": "929360",
    "end": "935839"
  },
  {
    "text": "you can basically ensure that your host no longer sees what your container",
    "start": "935839",
    "end": "942720"
  },
  {
    "text": "is running no longer see what your the the memory that your container is consuming and now if you can also pull the images",
    "start": "942720",
    "end": "949839"
  },
  {
    "text": "directly from the virtual machine you can guarantee that your you're that you host",
    "start": "949839",
    "end": "954880"
  },
  {
    "text": "that your csp is no longer seeing what your container is actually running so we want",
    "start": "954880",
    "end": "960560"
  },
  {
    "text": "to extend the thread model of catacontainers to where it is today to the point where it can also protect",
    "start": "960560",
    "end": "967519"
  },
  {
    "text": "the container workloads from the csp itself which is quite a an interesting and also",
    "start": "967519",
    "end": "976959"
  },
  {
    "text": "interesting from business perspective and from a technology perspective as well interesting features",
    "start": "977199",
    "end": "984480"
  },
  {
    "text": "another feature that we are working on with um containers 2.0 and cloud hypervisor",
    "start": "987759",
    "end": "994839"
  },
  {
    "text": "is the way the container the cri runtime and the",
    "start": "994839",
    "end": "1001199"
  },
  {
    "text": "catalog containers runtime interact together",
    "start": "1001199",
    "end": "1006959"
  },
  {
    "text": "it i wouldn't say by default because this is this is already partly the case with containers1.x but in some cases",
    "start": "1008480",
    "end": "1015600"
  },
  {
    "text": "with uh with catacontainers1.x you may end up with this specific uh",
    "start": "1015600",
    "end": "1022079"
  },
  {
    "text": "architecture so when you launch a catalog container the catalog container runtime launches the vm yeah the link between the uh",
    "start": "1022079",
    "end": "1028319"
  },
  {
    "text": "the the virtual machine and the serial runtime is done through um a set of components uh a container d",
    "start": "1028319",
    "end": "1034959"
  },
  {
    "text": "shim uh or a container runtime shame and the cata container shim and you",
    "start": "1034959",
    "end": "1041120"
  },
  {
    "text": "basically have a pair of shims for each and every process",
    "start": "1041120",
    "end": "1046240"
  },
  {
    "text": "each and every container that you run inside your pot so the bigger your part is the bigger",
    "start": "1046240",
    "end": "1051919"
  },
  {
    "text": "your process overhead and the bigger your complexity on the host is going to be you're going to be adding",
    "start": "1051919",
    "end": "1057440"
  },
  {
    "text": "up a lot of shims a lot of pair of shims in your host what we did is is work",
    "start": "1057440",
    "end": "1063840"
  },
  {
    "text": "with the cri runtime maintainers the container d1 and the cryo1",
    "start": "1063840",
    "end": "1069039"
  },
  {
    "text": "to move to a much simpler architecture and a more much more scalable architecture",
    "start": "1069039",
    "end": "1074320"
  },
  {
    "text": "we work on a runtime scheme api called runtimescheme api v2 that allows",
    "start": "1074320",
    "end": "1080640"
  },
  {
    "text": "us to have one um long-standing daemon for catalog containers the kalashin v2",
    "start": "1080640",
    "end": "1087919"
  },
  {
    "text": "and basically having it allows us to have one running daemon for a pod so one single one single",
    "start": "1087919",
    "end": "1095360"
  },
  {
    "text": "single demon per pod instead of n per containers inside the pot so that's",
    "start": "1095360",
    "end": "1101600"
  },
  {
    "text": "a much more scalable architecture it's also a much more",
    "start": "1101600",
    "end": "1106720"
  },
  {
    "text": "much less complex architecture docker the docker cli podman kubernetes",
    "start": "1106720",
    "end": "1113760"
  },
  {
    "text": "um all can be interacted with through this runtime shame api so with catacontainers 2.0",
    "start": "1113760",
    "end": "1121679"
  },
  {
    "text": "we're going to be going shim b2 all the way we're going to be using xin v2 all the",
    "start": "1121679",
    "end": "1127360"
  },
  {
    "text": "way and switching to the shim v2 api exclusively",
    "start": "1127360",
    "end": "1133280"
  },
  {
    "text": "so we will have one single cutoff process per pot much simpler and also it provides a",
    "start": "1134000",
    "end": "1139840"
  },
  {
    "text": "better security because you don't need to monitor that many processes anymore um and it also simplifies even further",
    "start": "1139840",
    "end": "1146880"
  },
  {
    "text": "because while we can basically get rid of the catacontainers cli support which is a",
    "start": "1146880",
    "end": "1153679"
  },
  {
    "text": "fairly complex overlay support in in on top of cat containers",
    "start": "1153679",
    "end": "1158720"
  },
  {
    "text": "to support the the oci cli specification uh your docker run",
    "start": "1158720",
    "end": "1165200"
  },
  {
    "text": "docker stop docker exec and so on now with the catalog container with the with the run",
    "start": "1165200",
    "end": "1171679"
  },
  {
    "text": "the runtime sim v2 api this can go again this can all get rid of and get things",
    "start": "1171679",
    "end": "1178160"
  },
  {
    "text": "much more simpler much simpler okay",
    "start": "1178160",
    "end": "1183280"
  },
  {
    "text": "and i'm done with this presentation this is the set of categories 2.0",
    "start": "1183280",
    "end": "1189840"
  },
  {
    "text": "and also combined with uh with cloud advisor as a vmm uh we're planning to move forward the uh",
    "start": "1189840",
    "end": "1197840"
  },
  {
    "text": "the virtualization support in the cloud native ecosystem and make it uh even more seamless",
    "start": "1197840",
    "end": "1206000"
  },
  {
    "text": "much lighter and much more transparent than it is today thanks a lot for your attention and i'm",
    "start": "1206000",
    "end": "1211919"
  },
  {
    "text": "not ready to take any further questions",
    "start": "1211919",
    "end": "1221840"
  },
  {
    "text": "thank you",
    "start": "1231039",
    "end": "1235840"
  },
  {
    "text": "um there are a few questions",
    "start": "1239200",
    "end": "1249840"
  },
  {
    "text": "here",
    "start": "1260840",
    "end": "1263840"
  },
  {
    "text": "um so i was saying",
    "start": "1273679",
    "end": "1277840"
  },
  {
    "text": "the answer to this is",
    "start": "1285760",
    "end": "1291840"
  },
  {
    "text": "generate your own virtual machine image your own kernel um and well basically do pretty much",
    "start": "1293679",
    "end": "1300159"
  },
  {
    "text": "what you want on the guest it has to be a fairly recent kernel",
    "start": "1300159",
    "end": "1319840"
  },
  {
    "text": "is",
    "start": "1330840",
    "end": "1333840"
  },
  {
    "text": "um",
    "start": "1344840",
    "end": "1347840"
  },
  {
    "text": "i think it's it's fairly complete um probably not as complete as the xc61",
    "start": "1365760",
    "end": "1371679"
  },
  {
    "text": "but it's it's there next question on the slides there are a",
    "start": "1371679",
    "end": "1377039"
  },
  {
    "text": "few questions about the slides",
    "start": "1377039",
    "end": "1389840"
  },
  {
    "text": "[Music] overhead on average",
    "start": "1391130",
    "end": "1403840"
  },
  {
    "text": "video engineer i hope this is better you can hear me now",
    "start": "1422799",
    "end": "1431840"
  },
  {
    "text": "hello",
    "start": "1456840",
    "end": "1459840"
  },
  {
    "start": "1465000",
    "end": "1766000"
  },
  {
    "text": "okay apparently the audio is much better so very quickly on on the first question is",
    "start": "1465520",
    "end": "1472000"
  },
  {
    "text": "is about the uh the option to change the the virtual machine that hosts the container then the answer is yes you can",
    "start": "1472000",
    "end": "1477360"
  },
  {
    "text": "you can change it the guest that's running the container pretty much as much as you want",
    "start": "1477360",
    "end": "1484320"
  },
  {
    "text": "arm6 there uh it's and it's uh it's it's ci tested there um an arm64",
    "start": "1484840",
    "end": "1492799"
  },
  {
    "text": "an arm64 ci infrastructure that's been provided by the arm community uh next question that",
    "start": "1492799",
    "end": "1499039"
  },
  {
    "text": "i'm going to take slides slides are available",
    "start": "1499039",
    "end": "1504559"
  },
  {
    "text": "i just uploaded them to to the website so you can go and take them from there",
    "start": "1504559",
    "end": "1510080"
  },
  {
    "text": "what's the um and i have a couple of question on the overhead on average",
    "start": "1510080",
    "end": "1518080"
  },
  {
    "text": "there's no it's it's a hardware to answer because it's it it highly depends on the on the kind of",
    "start": "1518080",
    "end": "1525679"
  },
  {
    "text": "workload that you're running uh it depends on on how big of a memory footprint it takes",
    "start": "1525679",
    "end": "1533760"
  },
  {
    "text": "memory bound it is ideal case is a is a regular size workload",
    "start": "1536559",
    "end": "1542320"
  },
  {
    "text": "that is cpu bound uh typically when uh when a workload is is really much cpu",
    "start": "1542320",
    "end": "1547600"
  },
  {
    "text": "bound the uh the the virtualization overhead is is fairly minimal um",
    "start": "1547600",
    "end": "1553919"
  },
  {
    "text": "if it's i o bound if your workload is very much i o bound i advise you to go and play with several",
    "start": "1553919",
    "end": "1561679"
  },
  {
    "text": "i o virtualization options vertio is one of them for example with",
    "start": "1561679",
    "end": "1569440"
  },
  {
    "text": "cloud provisor and qmu which are two of the main two of the uh of the uh the hypervisor",
    "start": "1569440",
    "end": "1575360"
  },
  {
    "text": "that cloud that cata container supports we now have uh iou ring support which gives a much",
    "start": "1575360",
    "end": "1582000"
  },
  {
    "text": "better vertio throughput in case you need the really native native performance latency and",
    "start": "1582000",
    "end": "1589520"
  },
  {
    "text": "throughput on the i o side of things probably you want to look at device passthrough and that's something",
    "start": "1589520",
    "end": "1596960"
  },
  {
    "text": "that that kind of container supports but it's as i said it's it's it's quite difficult to answer that's",
    "start": "1596960",
    "end": "1602240"
  },
  {
    "text": "uh on average because it's it highly depends on the on the uh on the kind of workload that",
    "start": "1602240",
    "end": "1607679"
  },
  {
    "text": "you're running um it also depends on the on the uh hypervisor that you're running the app",
    "start": "1607679",
    "end": "1613120"
  },
  {
    "text": "of the adds up to the uh to the overhead so depending on on on your workload you",
    "start": "1613120",
    "end": "1619200"
  },
  {
    "text": "might want to use a one hypervisor or the other",
    "start": "1619200",
    "end": "1624640"
  },
  {
    "text": "or others uh more questions let me take slides other okay another",
    "start": "1624640",
    "end": "1631200"
  },
  {
    "text": "question other infrastructure container inside a pod which end up inside the vm boundaries for example",
    "start": "1631200",
    "end": "1637600"
  },
  {
    "text": "sidecar is this a problem for the trust model especially in some of the future future model where the csp",
    "start": "1637600",
    "end": "1643760"
  },
  {
    "text": "is untrusted um infrastructure con oh another question",
    "start": "1643760",
    "end": "1649679"
  },
  {
    "text": "sorry this is jumping up oh i know sorry",
    "start": "1649679",
    "end": "1654960"
  },
  {
    "text": "i'm gonna take that one first okay let me repeat the question other infrastructure container inside a",
    "start": "1654960",
    "end": "1660320"
  },
  {
    "text": "pod which end up inside the vm boundary for example sidecars is this a problem for the truss model",
    "start": "1660320",
    "end": "1666080"
  },
  {
    "text": "especially in some of the future modes confidential computing where the csp is untrusted",
    "start": "1666080",
    "end": "1672240"
  },
  {
    "text": "um i guess this could be this could be an issue especially",
    "start": "1672240",
    "end": "1678240"
  },
  {
    "text": "for things like confidential computing definitely when the csp is entrusted you probably",
    "start": "1678240",
    "end": "1684559"
  },
  {
    "text": "don't want to run sometime something from the csp inside the",
    "start": "1684559",
    "end": "1689840"
  },
  {
    "text": "the catacontainer security boundary i guess i don't really have an answer",
    "start": "1689840",
    "end": "1696240"
  },
  {
    "text": "for this a lot of people have been looking at this and running sidecar outside of the uh of the virtual machine uh boundary and",
    "start": "1696240",
    "end": "1704240"
  },
  {
    "text": "and yes it's it is a problem for the uh for the uh for the current trust model i don't think this is uh this is really a",
    "start": "1704240",
    "end": "1710399"
  },
  {
    "text": "problem for the for the future for well not future one because it it can be an optional one but",
    "start": "1710399",
    "end": "1716000"
  },
  {
    "text": "for the uh quote-unquote confidential computing trust model it is gonna be uh it is going to be a problem and you you really want to",
    "start": "1716000",
    "end": "1722720"
  },
  {
    "text": "move that those infrastructure container outside of the of the vm boundary i guess",
    "start": "1722720",
    "end": "1729840"
  },
  {
    "text": "there's going to be some limitation there obviously you won't be able to let your",
    "start": "1729840",
    "end": "1734960"
  },
  {
    "text": "csp see anything and everything that you do and you you you may be you may be losing some of the uh",
    "start": "1734960",
    "end": "1742720"
  },
  {
    "text": "metrics for example uh on what's happening inside a virtual machine actually you may be losing uh quite a",
    "start": "1743440",
    "end": "1748480"
  },
  {
    "text": "bit of them um but i guess this is this is kind of the uh there's always a price that you pay",
    "start": "1748480",
    "end": "1753760"
  },
  {
    "text": "for security and i i guess this could be a this this could be seen as as one of them uh another question",
    "start": "1753760",
    "end": "1767200"
  },
  {
    "start": "1766000",
    "end": "1819000"
  },
  {
    "text": "container without compromising security uh yes it's it does allow for running as",
    "start": "1767200",
    "end": "1774000"
  },
  {
    "text": "root or non-roots or anything that you typically do in a in a container",
    "start": "1774000",
    "end": "1781520"
  },
  {
    "text": "i would say that basically running routes inside a container is as secure as running routes",
    "start": "1781520",
    "end": "1788240"
  },
  {
    "text": "inside a virtual machine so don't don't don't be confused i'm not saying this is",
    "start": "1788240",
    "end": "1793760"
  },
  {
    "text": "more secure or less secure than running uh in a in a bare metal container it's just that",
    "start": "1793760",
    "end": "1801120"
  },
  {
    "text": "you're basically running as roots on bmx non-root which means that you're",
    "start": "1801120",
    "end": "1807120"
  },
  {
    "text": "protected by the by the hardware virtualization so i would say that yes this is as secure",
    "start": "1807120",
    "end": "1813360"
  },
  {
    "text": "as running a route inside a classic legacy uh virtual machine",
    "start": "1813360",
    "end": "1820158"
  },
  {
    "start": "1819000",
    "end": "1898000"
  },
  {
    "text": "another question i think i only have a few minutes left uh is scala 2.0 already available or",
    "start": "1820559",
    "end": "1826880"
  },
  {
    "text": "still in development uh 2.0 is available",
    "start": "1826880",
    "end": "1831919"
  },
  {
    "text": "it's both it's uh it's stealing development um so there's a um i can i can put a link",
    "start": "1831919",
    "end": "1839679"
  },
  {
    "text": "there i will i'll put a link in the answer box but really quickly to to answer this uh catalog 2.0 is a work in progress",
    "start": "1839679",
    "end": "1847440"
  },
  {
    "text": "um the uh the stable and production ready version of cat is still one.x but 2.0 is where",
    "start": "1847440",
    "end": "1855440"
  },
  {
    "text": "uh most is where the the the continuous community is trying to shift uh its efforts",
    "start": "1855440",
    "end": "1862480"
  },
  {
    "text": "its development efforts so it's it's going it's making a very good progress and",
    "start": "1862480",
    "end": "1868640"
  },
  {
    "text": "it's already usable i would say um i we can certainly not claim that it's that it's production",
    "start": "1868640",
    "end": "1874320"
  },
  {
    "text": "ready but this is something uh you can go and and build it yourself uh there's there are packages for it uh",
    "start": "1874320",
    "end": "1881360"
  },
  {
    "text": "as far as as i know and and you can you can try you can start uh playing with it",
    "start": "1881360",
    "end": "1887360"
  },
  {
    "text": "so it's still in development um yeah but it's it's available for uh",
    "start": "1887360",
    "end": "1893200"
  },
  {
    "text": "for early consumption i would say okay more questions",
    "start": "1893200",
    "end": "1898559"
  },
  {
    "text": "regarding cloud advisor what about firecracker use case to have two separate projects",
    "start": "1898559",
    "end": "1906480"
  },
  {
    "text": "cloud advisor and firecrackers share a lot of a lot of code they're they're both consuming um an",
    "start": "1906480",
    "end": "1913679"
  },
  {
    "text": "upstream project called ras vmm raspbian is basically a set of",
    "start": "1913679",
    "end": "1919279"
  },
  {
    "text": "virtualization crates that firecracker and cloud advisor are using um",
    "start": "1919279",
    "end": "1927120"
  },
  {
    "text": "and the uh so they're sharing quite a bit of code they're they're basically aiming at a",
    "start": "1927120",
    "end": "1933039"
  },
  {
    "text": "different use cases i think firecracker is simpler and",
    "start": "1933039",
    "end": "1938559"
  },
  {
    "text": "smaller it the the simplicity and the simplicity comes with",
    "start": "1938559",
    "end": "1944640"
  },
  {
    "text": "restrictions the things that you cannot do with firecracker for not because their technical reason for",
    "start": "1944640",
    "end": "1951039"
  },
  {
    "text": "not do for not implementing that in firecracker but it's it's basically because the",
    "start": "1951039",
    "end": "1956399"
  },
  {
    "text": "firecracker community doesn't see a reason why implementing",
    "start": "1956399",
    "end": "1961760"
  },
  {
    "text": "those features like for example device passthrough or host file system sharing and that",
    "start": "1961760",
    "end": "1970159"
  },
  {
    "text": "that creates limitation on on what kind of kubernetes workloads you can support so",
    "start": "1970159",
    "end": "1976240"
  },
  {
    "text": "if you have to do a few work around supports as much as many as many workloads as you",
    "start": "1976240",
    "end": "1982720"
  },
  {
    "text": "would with cloudvisor cloud advisor does supports a device",
    "start": "1982720",
    "end": "1988000"
  },
  {
    "text": "passthrough it does support hosts hosts file system sharing and basically",
    "start": "1988000",
    "end": "1995279"
  },
  {
    "text": "it supports the entire cri spec so there are the use cases for",
    "start": "1995279",
    "end": "2003120"
  },
  {
    "text": "for both uh if you want something uh very slim and simple uh you probably want to look at firecracker but you need to know what",
    "start": "2003120",
    "end": "2010399"
  },
  {
    "text": "kind of restrictions you're going to have to to support what kind of what type of vm image is",
    "start": "2010399",
    "end": "2018080"
  },
  {
    "text": "used what hypervisor is used so the hypervisor there are two hypervisors today that are",
    "start": "2018080",
    "end": "2024000"
  },
  {
    "text": "used acorn and kvm and acorn is an hypervisor on its own",
    "start": "2024000",
    "end": "2030559"
  },
  {
    "text": "kvm is the i would say most widely used",
    "start": "2030559",
    "end": "2038000"
  },
  {
    "text": "linux hypervisor and on top of kvm then you cata container supports vmm",
    "start": "2038000",
    "end": "2045679"
  },
  {
    "text": "like cloud advisor firecracker qmu they all run on top of kvm",
    "start": "2045679",
    "end": "2050960"
  },
  {
    "text": "so basically the two underlying hypervisor are kvm and acorn and on top of kvm you can",
    "start": "2050960",
    "end": "2056480"
  },
  {
    "text": "select what kind of emm you want to use depending on the again the kind of workload you want to you want to use",
    "start": "2056480",
    "end": "2062560"
  },
  {
    "text": "with kubernetes qmu and cloud visor supports the entire ci spec and things like",
    "start": "2062560",
    "end": "2068000"
  },
  {
    "text": "firecracker comes with some some limitation on what kind of",
    "start": "2068000",
    "end": "2073040"
  },
  {
    "text": "part of the spec they support more questions and check",
    "start": "2073040",
    "end": "2081359"
  },
  {
    "start": "2082000",
    "end": "2195000"
  },
  {
    "text": "isn't vm a higher cost to pay for the trust boundary",
    "start": "2082800",
    "end": "2088079"
  },
  {
    "text": "um well it depends on it depends on what you want to do uh so the question is isn't avert are",
    "start": "2088079",
    "end": "2094960"
  },
  {
    "text": "our virtual machine a higher cost to pay for the trust boundary",
    "start": "2094960",
    "end": "2101200"
  },
  {
    "text": "virtual machine people think about virtual machine as something very expensive and",
    "start": "2101200",
    "end": "2106560"
  },
  {
    "text": "and very costly uh i think with gala containers we're showing that uh virtually the virtual machine",
    "start": "2106560",
    "end": "2112079"
  },
  {
    "text": "overhead is definitely not as high and and large as people think uh we",
    "start": "2112079",
    "end": "2118320"
  },
  {
    "text": "boot a a a containers with qmu or fi quarker or cloud visor in",
    "start": "2118320",
    "end": "2125839"
  },
  {
    "text": "typically less than one second in the in the worst case the the memory overhead is it can be",
    "start": "2125839",
    "end": "2133119"
  },
  {
    "text": "very small depending on the workloads so i i think the there is a cost i'm not i'm not saying there isn't a cost but if",
    "start": "2133119",
    "end": "2140320"
  },
  {
    "text": "you're looking for um having this uh additional uh isolation layer based on hardware",
    "start": "2140320",
    "end": "2148079"
  },
  {
    "text": "uh and using other virtualization i think this is the kind of cost that's that you're willing to pay",
    "start": "2148079",
    "end": "2153839"
  },
  {
    "text": "so what we're seeing is that uh uh yeah that that would be my last question",
    "start": "2153839",
    "end": "2158880"
  },
  {
    "text": "uh and we're running out of time but what we're seeing is that um people",
    "start": "2158880",
    "end": "2164079"
  },
  {
    "text": "running in production uh containers they uh uh they run cata containers for very",
    "start": "2164079",
    "end": "2170400"
  },
  {
    "text": "specific security reasons they want to they want to run uh multitask kubernetes multi",
    "start": "2170400",
    "end": "2176320"
  },
  {
    "text": "hardware to tendency and they see cata containers as a very good way to implement this uh",
    "start": "2176320",
    "end": "2182079"
  },
  {
    "text": "answering another question here but yes it's if you're looking at this kind of this kind of use cases where you",
    "start": "2182079",
    "end": "2187920"
  },
  {
    "text": "you want to have this additional layer of security this is typically the kind of",
    "start": "2187920",
    "end": "2195280"
  },
  {
    "start": "2195000",
    "end": "2224000"
  },
  {
    "text": "willing to pay okay i'm i'm out of time um",
    "start": "2195599",
    "end": "2201839"
  },
  {
    "text": "and you can find me on slack you can drop me an email if you have uh issue or more questions this is this is kind of weird to answer all",
    "start": "2203680",
    "end": "2210000"
  },
  {
    "text": "these questions without feedback from the audience i hope i didn't do too much of a of a bad job at it",
    "start": "2210000",
    "end": "2216240"
  },
  {
    "text": "thanks a lot for attending um hope to see ccu live or maybe a virtual again soon",
    "start": "2216240",
    "end": "2222560"
  },
  {
    "text": "thank you",
    "start": "2222560",
    "end": "2226000"
  }
]