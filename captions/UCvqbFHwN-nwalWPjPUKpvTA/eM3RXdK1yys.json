[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "all right uh with slight delay welcome to the promethus introduction",
    "start": "359",
    "end": "7360"
  },
  {
    "text": "unfortunately I am not Julius Julius couldn't make it due to",
    "start": "7360",
    "end": "13160"
  },
  {
    "text": "reasons um so I'll have to do some PowerPoint karoke for you um my name is",
    "start": "13160",
    "end": "20439"
  },
  {
    "text": "Matias I'm an engineer at SoundCloud I let me make my notes bigger so I can",
    "start": "20439",
    "end": "26400"
  },
  {
    "text": "read them all right uh I work on the production engineering team team which is the successor of the team that",
    "start": "26400",
    "end": "32719"
  },
  {
    "text": "originally built promethus um and yes in the first part",
    "start": "32719",
    "end": "38640"
  },
  {
    "text": "of the session I will give a very brief introduction to promethus this will not be an in-depth guide we have like 30",
    "start": "38640",
    "end": "45239"
  },
  {
    "text": "minutes to get through everything so will just be a teaser um a show of hands",
    "start": "45239",
    "end": "52399"
  },
  {
    "text": "actually who here is not yet using promethus ah there's a few over here and",
    "start": "52399",
    "end": "58960"
  },
  {
    "text": "there all right for the rest of you this is going to be a very brief refresher and then we'll get to Bon who is going",
    "start": "58960",
    "end": "65760"
  },
  {
    "text": "to walk us through some news and updates um we have about half an hour",
    "start": "65760",
    "end": "70880"
  },
  {
    "text": "together with the delay we may not get to Q&A if you have any questions the promus pavon in uh the promus boo in",
    "start": "70880",
    "end": "79280"
  },
  {
    "text": "pavon 2 is always staffed you can always find us there and you can always ask questions um promethus is a metric based",
    "start": "79280",
    "end": "88280"
  },
  {
    "start": "85000",
    "end": "85000"
  },
  {
    "text": "monitoring system um at the time we created it because there was nothing that was able",
    "start": "88280",
    "end": "95040"
  },
  {
    "text": "to uh monitor our growing Sue of microservices we were already deploying",
    "start": "95040",
    "end": "101000"
  },
  {
    "text": "to a dynamic container based platform and we really needed some more details",
    "start": "101000",
    "end": "107399"
  },
  {
    "text": "than what nagios was giving us which was is it up right um promethus is not trying to",
    "start": "107399",
    "end": "116039"
  },
  {
    "text": "cover all your bases promethus is a metric monitor ing system typically you",
    "start": "116039",
    "end": "121719"
  },
  {
    "text": "will combine it with other systems for log collection and tracing um",
    "start": "121719",
    "end": "128119"
  },
  {
    "start": "126000",
    "end": "126000"
  },
  {
    "text": "so again brief refresher we'll take a quick look of how you build a monitoring",
    "start": "128119",
    "end": "133280"
  },
  {
    "text": "system with promethus um promethus is a pull-based system so everything starts with your",
    "start": "133280",
    "end": "139760"
  },
  {
    "text": "web app or your API server whatever it is that you are running um you add one",
    "start": "139760",
    "end": "147040"
  },
  {
    "text": "of the client libraries to instrument your application we have one in almost any language and",
    "start": "147040",
    "end": "154080"
  },
  {
    "text": "if we don't have it someone else has built it um which is kind of need or you can build your own the output format is",
    "start": "154080",
    "end": "160760"
  },
  {
    "text": "really not that difficult um the client the in the",
    "start": "160760",
    "end": "166080"
  },
  {
    "text": "instrumentation in the client itself is very lightweight because and that's a big difference to push based monitoring",
    "start": "166080",
    "end": "172840"
  },
  {
    "text": "systems your application doesn't put anything on the network at the point of",
    "start": "172840",
    "end": "178800"
  },
  {
    "text": "an event happening at at the point of an HTTP request happening we're not trying to send metrics anywhere all we're doing",
    "start": "178800",
    "end": "185959"
  },
  {
    "text": "is incrementing some numbers in memory so it's blazing fast on the hot path of",
    "start": "185959",
    "end": "191440"
  },
  {
    "text": "your application um then and then these current values of typically these",
    "start": "191440",
    "end": "198360"
  },
  {
    "text": "counters are exposed as an HTTP endpoint that can be scraped asynchronously um now you don't control",
    "start": "198360",
    "end": "207519"
  },
  {
    "text": "all the software that you run not everything that you run is something that you've written yourself",
    "start": "207519",
    "end": "213560"
  },
  {
    "text": "hopefully um so there is a lot of interesting metrics in software that you",
    "start": "213560",
    "end": "220080"
  },
  {
    "text": "don't control and that don't have native promus or open metric support more and",
    "start": "220080",
    "end": "227720"
  },
  {
    "text": "more things do but if they don't they need a little help from a friend we call",
    "start": "227720",
    "end": "233120"
  },
  {
    "text": "this friend the exporter and we'll talk a little bit more about exporters later day um",
    "start": "233120",
    "end": "240599"
  },
  {
    "text": "so in the pole architecture the promethus server is the thing that reaches out to all the things that you",
    "start": "240599",
    "end": "246879"
  },
  {
    "text": "want to Monitor and in this example we have only one but you can have as many",
    "start": "246879",
    "end": "252640"
  },
  {
    "text": "as you want they may be interested in different subsets um it doesn't matter to the",
    "start": "252640",
    "end": "259680"
  },
  {
    "text": "client to the thing that is instrumented whether it is being scraped At All by",
    "start": "259680",
    "end": "264720"
  },
  {
    "text": "how many promia servers how often um that means there is very little to",
    "start": "264720",
    "end": "270440"
  },
  {
    "text": "configure in all of your microservices um instead promethus",
    "start": "270440",
    "end": "277280"
  },
  {
    "text": "integrates with various runtimes various mechanisms or custom mechanisms that you",
    "start": "277280",
    "end": "283840"
  },
  {
    "text": "can build to find all the possible targets um and it has some a rule",
    "start": "283840",
    "end": "291400"
  },
  {
    "text": "language for filtering them and adding or like shuffling around the metadata you have about them um yeah so for",
    "start": "291400",
    "end": "300120"
  },
  {
    "text": "example typically when you're monitoring kubernetes Parts you would promethus",
    "start": "300120",
    "end": "305160"
  },
  {
    "text": "just fetches a list of all the parts and then this language filters it down for you if you're using the promus operator",
    "start": "305160",
    "end": "311720"
  },
  {
    "text": "it generates that for you which is kind of neat because it can get very verbos and slightly tricky but it's",
    "start": "311720",
    "end": "319240"
  },
  {
    "text": "there um you probably want to look at your metric that's kind of Point um so",
    "start": "319240",
    "end": "327400"
  },
  {
    "text": "typically you would like there is a web you in promethus I would really only recommend it for exploration and",
    "start": "327400",
    "end": "334039"
  },
  {
    "text": "debugging it is not a dashboard we used to have our own dashboard Builder but then grafana came around and we said all",
    "start": "334039",
    "end": "340680"
  },
  {
    "text": "right this is so much better just use grafana it's the tool of choice however",
    "start": "340680",
    "end": "346120"
  },
  {
    "text": "everything is apid driven so you can totally build your own automation your",
    "start": "346120",
    "end": "351440"
  },
  {
    "text": "own visualization whatever you want on top of promethus um finally of course in",
    "start": "351440",
    "end": "358880"
  },
  {
    "text": "monitoring if there is a problem we do want to tell someone about it and this is where alert manager comes in alert",
    "start": "358880",
    "end": "367000"
  },
  {
    "text": "manager handles grouping alerts together so that you're not overwhelmed by a",
    "start": "367000",
    "end": "373319"
  },
  {
    "text": "million fine grained alerts happening at once and this is totally a thing that happens right we have a lot of alerts",
    "start": "373319",
    "end": "380160"
  },
  {
    "text": "where we just say all right tell me if any of the end points on any of my",
    "start": "380160",
    "end": "385599"
  },
  {
    "text": "instances has an error rate larger than 10 % or 1% if you have a th instances",
    "start": "385599",
    "end": "392919"
  },
  {
    "text": "and you have a th end points that's a million right that can happen alert manager will if you configure it that",
    "start": "392919",
    "end": "400080"
  },
  {
    "text": "way group it back together and say yo you have a problem here's a million",
    "start": "400080",
    "end": "406440"
  },
  {
    "text": "things that are wrong you may want to look into them but it doesn't like we used to",
    "start": "406440",
    "end": "412440"
  },
  {
    "text": "before this we used to have pag storms where you would like in an incident you would have one person just sit there and",
    "start": "412440",
    "end": "417800"
  },
  {
    "text": "like acknowledge pag of Duty because there was so much coming in um this is much easier to handle with alert",
    "start": "417800",
    "end": "425240"
  },
  {
    "text": "manager um and alert manager allows you to configure routing rules to determine who should be notified and",
    "start": "425240",
    "end": "432960"
  },
  {
    "text": "how um refuel um all right so",
    "start": "432960",
    "end": "442080"
  },
  {
    "start": "433000",
    "end": "433000"
  },
  {
    "text": "next I want to walk you through some of the key points of why we think promethus",
    "start": "442080",
    "end": "448080"
  },
  {
    "text": "is worth considering or why we think it's good um first of all the data model the",
    "start": "448080",
    "end": "456319"
  },
  {
    "start": "453000",
    "end": "453000"
  },
  {
    "text": "data model is simple and Rich at the same",
    "start": "456319",
    "end": "462000"
  },
  {
    "text": "time uh the fundamental building block of prus metrics are time series time",
    "start": "462000",
    "end": "467560"
  },
  {
    "text": "series are some identifier and then a series of",
    "start": "467560",
    "end": "474120"
  },
  {
    "text": "time stamps and values um so often these time time",
    "start": "474120",
    "end": "479680"
  },
  {
    "text": "stamps are in a regular interval but they don't have to be and the values",
    "start": "479680",
    "end": "484759"
  },
  {
    "text": "change over time so what's the ident oh yeah and all",
    "start": "484759",
    "end": "490840"
  },
  {
    "text": "the time stamps are just integers all the values are float 64s so",
    "start": "490840",
    "end": "497159"
  },
  {
    "text": "far um that will change in the future but fundamentally this is what's",
    "start": "497159",
    "end": "502639"
  },
  {
    "text": "happening right it's a serious of at this time the value was this float um what does the identifier look",
    "start": "502639",
    "end": "510599"
  },
  {
    "text": "like an identifier typically has a metric name and a series of labels and",
    "start": "510599",
    "end": "519279"
  },
  {
    "text": "label values um it's sort of up to you when you make",
    "start": "519279",
    "end": "526000"
  },
  {
    "text": "up your instrumentation how you split the two what you put into a name and",
    "start": "526000",
    "end": "531040"
  },
  {
    "text": "what you don't as a rule of thumb we say it should be in a label if there is some",
    "start": "531040",
    "end": "537200"
  },
  {
    "text": "sensible way that you would want to aggregate at it away so in this example",
    "start": "537200",
    "end": "543360"
  },
  {
    "text": "for example you might be interested in this single time series in particular or",
    "start": "543360",
    "end": "551079"
  },
  {
    "text": "maybe you want to see all the status 200s of across all the paths on all your",
    "start": "551079",
    "end": "557040"
  },
  {
    "text": "instances right so that's why the path is an uh is a label",
    "start": "557040",
    "end": "562800"
  },
  {
    "text": "here um whereas you wouldn't want to um",
    "start": "562800",
    "end": "568399"
  },
  {
    "text": "mix together HTTP requests and CPU time used that makes no sense so those two",
    "start": "568399",
    "end": "575440"
  },
  {
    "text": "should have different names that's the the rough guideline we can give",
    "start": "575440",
    "end": "580600"
  },
  {
    "text": "there um frequently we use counters like this um they",
    "start": "580600",
    "end": "587720"
  },
  {
    "text": "represent the total number of events since some unspecified point in time",
    "start": "587720",
    "end": "594720"
  },
  {
    "text": "this can be the time that your instance started it doesn't have to be um it is absolutely valid to start your counter",
    "start": "594720",
    "end": "601880"
  },
  {
    "text": "at a random number that you just pulled out of your head um or in other um yeah so there",
    "start": "601880",
    "end": "609640"
  },
  {
    "text": "there's many ways typically they start at zero and they just count up over time until the instance restarts but it",
    "start": "609640",
    "end": "615480"
  },
  {
    "text": "doesn't have to be this way um this lets us be flexible on scrape",
    "start": "615480",
    "end": "620800"
  },
  {
    "text": "intervals um we scrape every 15 seconds you may",
    "start": "620800",
    "end": "626480"
  },
  {
    "text": "scrape every minute or every 3 seconds you may have different promethus servers",
    "start": "626480",
    "end": "632320"
  },
  {
    "text": "scraping the same",
    "start": "632320",
    "end": "636160"
  },
  {
    "text": "hello okay yes power up um all right where was I",
    "start": "687639",
    "end": "694279"
  },
  {
    "text": "counters counters represent the total number of things that happened since some unspecified period of time we never",
    "start": "694279",
    "end": "701760"
  },
  {
    "text": "really look at the absolute value of a counter as such we always look at how much did it change over an interval the",
    "start": "701760",
    "end": "709440"
  },
  {
    "text": "nice thing about this is we can be very flexible how often we actually scrape",
    "start": "709440",
    "end": "714920"
  },
  {
    "text": "these or whether we leave out the scrape something happened prus was rest starting um it doesn't matter we don't",
    "start": "714920",
    "end": "722120"
  },
  {
    "text": "lose track of the counting unless in that interval we also reset the counter of course then the",
    "start": "722120",
    "end": "728240"
  },
  {
    "text": "information is lost um but for the most part we can be very flexible we can have",
    "start": "728240",
    "end": "733480"
  },
  {
    "text": "multiple promethus servers scrape the same counter at different intervals and",
    "start": "733480",
    "end": "738800"
  },
  {
    "text": "it's all still works out um so and afterwards we are not",
    "start": "738800",
    "end": "745959"
  },
  {
    "text": "necessarily as long as we scrape often enough we can reconstruct how many",
    "start": "745959",
    "end": "751600"
  },
  {
    "text": "requests happened in any one minute interval 10 minute interval 7 and a half",
    "start": "751600",
    "end": "757760"
  },
  {
    "text": "minute interval if you really want to um so that's why we use these ever",
    "start": "757760",
    "end": "763839"
  },
  {
    "text": "incrementing counters rather than just recording the rate at any point in",
    "start": "763839",
    "end": "769519"
  },
  {
    "text": "time um yeah we'll see how that plays out later um I really want to give you just",
    "start": "769519",
    "end": "777480"
  },
  {
    "start": "774000",
    "end": "774000"
  },
  {
    "text": "a quick climp of quick glimpse of the query language it can't be a full",
    "start": "777480",
    "end": "782600"
  },
  {
    "text": "tutorial the query language is by far the most interesting thing to wrap your",
    "start": "782600",
    "end": "788399"
  },
  {
    "text": "head around um so this is just a sneak peek the most important hurdle to overcome is",
    "start": "788399",
    "end": "796360"
  },
  {
    "text": "trying to think in SQL if you've done SQL before some of it seems familiar and",
    "start": "796360",
    "end": "802839"
  },
  {
    "text": "it seems like you can kind of try and translate between the two don't um that",
    "start": "802839",
    "end": "809160"
  },
  {
    "text": "that's not a helpful way to think about promql um think about promql",
    "start": "809160",
    "end": "814920"
  },
  {
    "text": "as managing time series and like multiple time series and matching them",
    "start": "814920",
    "end": "820240"
  },
  {
    "text": "up and working with them um first of all you can do math on individual time series in this case",
    "start": "820240",
    "end": "827800"
  },
  {
    "text": "we're just dividing by 1 billion and we're filtering out those that are",
    "start": "827800",
    "end": "833959"
  },
  {
    "text": "larger than 100 afterwards um this happens individually on each time",
    "start": "833959",
    "end": "840240"
  },
  {
    "text": "series so um in this for in this example",
    "start": "840240",
    "end": "846360"
  },
  {
    "text": "we will have we will only see like we we will first divide the time Ser the the",
    "start": "846360",
    "end": "853279"
  },
  {
    "text": "file system the bytes by 1 billion so we get gigabytes and we only show those that",
    "start": "853279",
    "end": "860519"
  },
  {
    "text": "are more than 100 gigabytes um so then we can do it more complicated",
    "start": "860519",
    "end": "868480"
  },
  {
    "text": "so we're back to http requests um there's a few things happening in this query and I want to go",
    "start": "868480",
    "end": "874759"
  },
  {
    "text": "through them quickly one by one canect point oh yeah um all right you already",
    "start": "874759",
    "end": "880600"
  },
  {
    "text": "heard that we like to keep total counts the rate function here is what looks at",
    "start": "880600",
    "end": "889000"
  },
  {
    "text": "the time window this is what looks at the difference between when the counter started and the counter",
    "start": "889000",
    "end": "895600"
  },
  {
    "text": "ended plus it does the magic to compensate for if the counter reset in",
    "start": "895600",
    "end": "901240"
  },
  {
    "text": "the meantime it understands that um it understands how to interpolate values if",
    "start": "901240",
    "end": "907399"
  },
  {
    "text": "we're asking for a Time window that doesn't quite align with when we",
    "start": "907399",
    "end": "913399"
  },
  {
    "text": "scraped um so um and just like the scalar",
    "start": "913399",
    "end": "919079"
  },
  {
    "text": "calculation we just looked at this happens individually for every time series so we're doing this one this rate",
    "start": "919079",
    "end": "927920"
  },
  {
    "text": "separately for every every path for every instance for every status except",
    "start": "927920",
    "end": "933160"
  },
  {
    "text": "in the in the second one for every status here we're only doing it for the ones that have status equals 500 so we",
    "start": "933160",
    "end": "939720"
  },
  {
    "text": "don't do unnecessary calculation but we do calculate the rate individually for each of them because they will have",
    "start": "939720",
    "end": "946440"
  },
  {
    "text": "reset at different points in time right we cannot we can't turn this around then",
    "start": "946440",
    "end": "952279"
  },
  {
    "text": "we sum over them in this case this just gives us a whole number so we can divide",
    "start": "952279",
    "end": "958000"
  },
  {
    "text": "those numbers again and we get a result uh in this case so our error rate",
    "start": "958000",
    "end": "963720"
  },
  {
    "text": "here is like 2.9% not good not bad",
    "start": "963720",
    "end": "969120"
  },
  {
    "text": "um what should we do if we try to divide some metrics that have labels so here we",
    "start": "969120",
    "end": "975639"
  },
  {
    "text": "are summing things up but we are not uh summing over the path dimension uh we",
    "start": "975639",
    "end": "982560"
  },
  {
    "text": "are preserving the path dimension um and then we are dividing",
    "start": "982560",
    "end": "987639"
  },
  {
    "text": "the two uh um and then the division again happens",
    "start": "987639",
    "end": "993759"
  },
  {
    "text": "one by one for the ones that fell out of for the multiple series that fell out of the sum buy we divide each of them",
    "start": "993759",
    "end": "1001040"
  },
  {
    "text": "individually uh homework for you is to think about what should happen if a path only appears on one side of the",
    "start": "1001040",
    "end": "1009040"
  },
  {
    "text": "division um yeah um alerting again I can't go into",
    "start": "1009040",
    "end": "1016319"
  },
  {
    "start": "1012000",
    "end": "1012000"
  },
  {
    "text": "any of the details here the very very short story is you write an expression",
    "start": "1016319",
    "end": "1021680"
  },
  {
    "text": "like this one that only returns data when there is a",
    "start": "1021680",
    "end": "1027000"
  },
  {
    "text": "problem uh and if there is a problem that you want to alert someone about",
    "start": "1027000",
    "end": "1032199"
  },
  {
    "text": "alerts have labels and annotations labels help alert managers sort out the",
    "start": "1032199",
    "end": "1037600"
  },
  {
    "text": "routing annotations help humans sort out the resolution um efficiency promus in",
    "start": "1037600",
    "end": "1046959"
  },
  {
    "start": "1043000",
    "end": "1043000"
  },
  {
    "text": "itself does not scale hor horizontally um that's a deliberate choice we want to keep it simple we want",
    "start": "1046959",
    "end": "1053840"
  },
  {
    "text": "promethus to be the very last thing that breaks so we want promethus to not",
    "start": "1053840",
    "end": "1060480"
  },
  {
    "text": "itself be a distributed system um in practice you can actually go quite a long way with promethus without actually",
    "start": "1060480",
    "end": "1067559"
  },
  {
    "text": "having multiple um the storage and collection engines are quite efficient we have many promia servers with",
    "start": "1067559",
    "end": "1074720"
  },
  {
    "text": "Millions like 10 million active time series is no problem if you give it a",
    "start": "1074720",
    "end": "1081200"
  },
  {
    "text": "good but not outrageous amount of memory um and a million samples per second on a single server no",
    "start": "1081200",
    "end": "1088520"
  },
  {
    "text": "problem um memory is really your limiting factor you need to keep up two hours worth of samples in memory the",
    "start": "1088520",
    "end": "1096480"
  },
  {
    "text": "good news is that compression is very good thanks to BJ so we only need about",
    "start": "1096480",
    "end": "1101720"
  },
  {
    "text": "one to two bytes per sample on average for like typical",
    "start": "1101720",
    "end": "1107640"
  },
  {
    "text": "workloads um um retention time is we it defaults relatively low",
    "start": "1107640",
    "end": "1115480"
  },
  {
    "text": "it's something like two weeks in practice we have not found an upper limit yet as much as your storage can",
    "start": "1115480",
    "end": "1122520"
  },
  {
    "text": "handle we haven't found the point where promethus really breaks so it's really",
    "start": "1122520",
    "end": "1127600"
  },
  {
    "text": "just how big of a disc are you willing to give it um and if that's not enough there are",
    "start": "1127600",
    "end": "1134039"
  },
  {
    "text": "related projects that add scaling and aggregation across many promia servers",
    "start": "1134039",
    "end": "1139440"
  },
  {
    "text": "Thanos cortex mimir all help with this",
    "start": "1139440",
    "end": "1146440"
  },
  {
    "start": "1144000",
    "end": "1144000"
  },
  {
    "text": "um circling back to exporters not everything speaks promeal",
    "start": "1146440",
    "end": "1153799"
  },
  {
    "text": "yet um so exporters help you bridge this Gap from other metric systems that you",
    "start": "1153799",
    "end": "1160720"
  },
  {
    "text": "may already be using from other system specific metrics like the Linux kernel",
    "start": "1160720",
    "end": "1167200"
  },
  {
    "text": "metrics the my SQL whatever database you're using or you can DIY it because",
    "start": "1167200",
    "end": "1175799"
  },
  {
    "text": "they only need to return a number when they are being asked over HTTP exporters",
    "start": "1175799",
    "end": "1181520"
  },
  {
    "text": "are much simpler to write than you think and I would encourage everyone to write an exporter just for fun",
    "start": "1181520",
    "end": "1189159"
  },
  {
    "text": "um the result of having exporters is that promethus itself doesn't have to",
    "start": "1189159",
    "end": "1194320"
  },
  {
    "text": "understand every possible software in the world it's a very it's very easy to",
    "start": "1194320",
    "end": "1199480"
  },
  {
    "text": "integrate it with whatever you already have um without having to have promethus",
    "start": "1199480",
    "end": "1206679"
  },
  {
    "text": "itself understand everything so in conclusion if you're not using promethus",
    "start": "1206679",
    "end": "1211840"
  },
  {
    "start": "1208000",
    "end": "1208000"
  },
  {
    "text": "yet but you're interested enough to watch this you should give it a try and if you're already using it you should",
    "start": "1211840",
    "end": "1217039"
  },
  {
    "text": "use it more and with that I'm going to hand it over to BN for the Deep dive",
    "start": "1217039",
    "end": "1225480"
  },
  {
    "text": "or more like a tip dive yeah I hope I'm on now so uh Julian was supposed to be",
    "start": "1231679",
    "end": "1238120"
  },
  {
    "text": "here uh he is missing for the same reason as Julius now you can guess what reason that is um I'm still here like we",
    "start": "1238120",
    "end": "1246440"
  },
  {
    "text": "wanted to show off that for me this is a true multi-stakeholder project we are four people all from different companies",
    "start": "1246440",
    "end": "1253360"
  },
  {
    "text": "although originally myself and Julius and Emar we all worked for SoundCloud",
    "start": "1253360",
    "end": "1258799"
  },
  {
    "text": "that's kind of the common origin but he's still at SoundCloud I'm at a company called profana Labs you might",
    "start": "1258799",
    "end": "1263880"
  },
  {
    "text": "have heard about them um Julius is running his own gig and Julian came later to the project is I think he's the",
    "start": "1263880",
    "end": "1270760"
  },
  {
    "text": "most active person in the mix project right now and he is running a new thing",
    "start": "1270760",
    "end": "1276320"
  },
  {
    "text": "OE also quite interesting um so he can't make it uh this is called the Deep dive",
    "start": "1276320",
    "end": "1281919"
  },
  {
    "text": "section it's a bit weird that in contrast to the olden days we now have a deep dive and intro session in this same",
    "start": "1281919",
    "end": "1289279"
  },
  {
    "text": "30 minutes which very short also completely different audiences right but",
    "start": "1289279",
    "end": "1294360"
  },
  {
    "text": "perhaps you're all somewhere in between and you actually like this so I decided to not dive deep into a certain topic",
    "start": "1294360",
    "end": "1300440"
  },
  {
    "text": "but just give you like a flashlight of stuff that is new um uh Julian is also",
    "start": "1300440",
    "end": "1306760"
  },
  {
    "text": "giving a talk he wanted to give a longer version of this at Prometheus day but he couldn't make it so he will record this",
    "start": "1306760",
    "end": "1313880"
  },
  {
    "text": "and share it via his blog or Twitter account so totally look for that look out for that it will be a nicer version",
    "start": "1313880",
    "end": "1321279"
  },
  {
    "text": "of this this is essentially just pointers also just looking at more less the last 12 months and only looking at",
    "start": "1321279",
    "end": "1327679"
  },
  {
    "text": "Prometheus Prometheus which is the Prometheus server but that's only one component of the huge ecosystem so",
    "start": "1327679",
    "end": "1334559"
  },
  {
    "text": "there's even more than that so we just go through a few things um in version",
    "start": "1334559",
    "end": "1340440"
  },
  {
    "start": "1335000",
    "end": "1335000"
  },
  {
    "text": "2.25 we embraced feature Flags um this is actually a bit longer ago than a year",
    "start": "1340440",
    "end": "1346000"
  },
  {
    "text": "but I um like to give it kind of an honorary mention here because feature",
    "start": "1346000",
    "end": "1351200"
  },
  {
    "text": "Flags work pretty pretty much like in kubernetes we should have had this idea way earlier it allowed us to be like a",
    "start": "1351200",
    "end": "1357600"
  },
  {
    "text": "bit less risk aers with new features originally Prometheus half of the world is using it so we are fairly",
    "start": "1357600",
    "end": "1364480"
  },
  {
    "text": "conservative in terms of stability and breaking people so now we um we have",
    "start": "1364480",
    "end": "1370080"
  },
  {
    "text": "feature Flags uh one reason to have them is to be really explicit about experimental features so we had this",
    "start": "1370080",
    "end": "1376360"
  },
  {
    "text": "before we just said we had this feature don't use it in production it will change any time but people just use it",
    "start": "1376360",
    "end": "1382559"
  },
  {
    "text": "in production because they didn't even know it was an experimental feature so now you have to switch it on with a feature flag uh marks it really clearly",
    "start": "1382559",
    "end": "1389640"
  },
  {
    "text": "that is one reason to use them also we can use a feature flag to introduce a breaking change without having a new",
    "start": "1389640",
    "end": "1397520"
  },
  {
    "text": "major release because you switch it on um deliberately and then you have a new",
    "start": "1397520",
    "end": "1403240"
  },
  {
    "text": "Behavior which is breaking but by default you don't switch it on um in this case if we like the feat and we",
    "start": "1403240",
    "end": "1408919"
  },
  {
    "text": "have a major release like in 10 years or so we have prus 3 then we can make it we can make it a no op and it's just on",
    "start": "1408919",
    "end": "1415919"
  },
  {
    "text": "forever similarly if an experimental feature that is not breaking uh is fine we just make it the default and then the",
    "start": "1415919",
    "end": "1422720"
  },
  {
    "text": "feature flag becomes a no as well but it will still work right it will just warn you and then the final reason to use a",
    "start": "1422720",
    "end": "1428799"
  },
  {
    "text": "feature flag is when you really want to change the behavior in a way that yeah wouldn't",
    "start": "1428799",
    "end": "1435200"
  },
  {
    "text": "even go into the next version it's just a different mode of Prometheus if that feature becomes stable it would become a",
    "start": "1435200",
    "end": "1441640"
  },
  {
    "text": "normal flag of changing Behavior I have examples for each of this in all the new features here so what's new impromptu um",
    "start": "1441640",
    "end": "1450039"
  },
  {
    "start": "1446000",
    "end": "1446000"
  },
  {
    "text": "these are they by now they look kind of incremental those changes but if you use",
    "start": "1450039",
    "end": "1455480"
  },
  {
    "text": "them it's kind of great uh the first thing is here we allow negative offsets now offset allows you to query something",
    "start": "1455480",
    "end": "1462200"
  },
  {
    "text": "in the past now you can query stuff in the future predicting the future yay of course that doesn't work even for",
    "start": "1462200",
    "end": "1467799"
  },
  {
    "text": "promethus but sometimes you run query historical queries like you want are interested is like the temperature",
    "start": "1467799",
    "end": "1475120"
  },
  {
    "text": "perhaps last month how did it compare to the average around this evaluation time",
    "start": "1475120",
    "end": "1480799"
  },
  {
    "text": "and then you you you kind of from your point in the past you look into the",
    "start": "1480799",
    "end": "1486240"
  },
  {
    "text": "future and use a negative offset um similarly we have an add modifier where you can kind of pin parts of your query",
    "start": "1486240",
    "end": "1493360"
  },
  {
    "text": "to a certain point in time they're even like helpers this is the end of a range query if on Range query uh so this is",
    "start": "1493360",
    "end": "1500559"
  },
  {
    "text": "pretty special but it allows a number of things this query for example finally solves the surprisingly hard problem how",
    "start": "1500559",
    "end": "1507760"
  },
  {
    "text": "to draw the top five lines in like traffic or whatever it's a bit more",
    "start": "1507760",
    "end": "1513360"
  },
  {
    "text": "complicated there is a link here it's also clickable if you look at the slides in the PDF um where there's a blog post",
    "start": "1513360",
    "end": "1519120"
  },
  {
    "text": "explaining this this is posting cashes so we cashes could assume that you never look into the future and so we thought",
    "start": "1519120",
    "end": "1527520"
  },
  {
    "text": "it might be a breaking changed but in the end we decided not so it became stable and it's Now default you can just use it in the newer version trigonometry",
    "start": "1527520",
    "end": "1534840"
  },
  {
    "text": "happened finally it's a bit of a problem that people want all kind of functions and we don't like want to implement a",
    "start": "1534840",
    "end": "1541080"
  },
  {
    "text": "million functions P but this finally made it so you have sign function cosine even a102 which has two parameters and",
    "start": "1541080",
    "end": "1547679"
  },
  {
    "text": "we use the prom label matching it's a bit weird but if you really need this you will appreciate it happen 2.31 this",
    "start": "1547679",
    "end": "1555360"
  },
  {
    "text": "converts from normal degrees into radians which",
    "start": "1555360",
    "end": "1561000"
  },
  {
    "text": "is the default and people use promethus to monitor wind turbines which is pretty cool um present over time is also a nice",
    "start": "1561000",
    "end": "1568200"
  },
  {
    "text": "little thing that uh tells you if there is a sample at all in this time range there are use cases for that most of you",
    "start": "1568200",
    "end": "1575279"
  },
  {
    "start": "1575000",
    "end": "1575000"
  },
  {
    "text": "haven't run into it I guess so this is a bigie agent mode it's also an example for a feature flag that will become just",
    "start": "1575279",
    "end": "1581799"
  },
  {
    "text": "a normal flag because it just changes how Prometheus works there's some irony Matias mentioned this Prometheus is",
    "start": "1581799",
    "end": "1588320"
  },
  {
    "text": "designed to be the last thing standing in your environment because it was meant to enable you to monitor your systems",
    "start": "1588320",
    "end": "1595600"
  },
  {
    "text": "without relying on a monitoring provider but nowadays everyone wants to use like",
    "start": "1595600",
    "end": "1601200"
  },
  {
    "text": "Cloud providers for your monitoring so you can still do both kind of with Prometheus it's also ironic that all the",
    "start": "1601200",
    "end": "1607679"
  },
  {
    "text": "cloud metric cloud provider in ingest promethus metrix now which was supposed it was created to kill them right and",
    "start": "1607679",
    "end": "1614159"
  },
  {
    "text": "now we we all love each other again uh but like yeah so you can mix a match uh",
    "start": "1614159",
    "end": "1619559"
  },
  {
    "text": "but if you're really relying on your cloud provider it feels like why should I run a fully fledged prometh setup so",
    "start": "1619559",
    "end": "1626480"
  },
  {
    "text": "now you can just uh slim it down with the agent thing you have no local storage only the wall you have no",
    "start": "1626480",
    "end": "1633080"
  },
  {
    "text": "valuation engine it all consumes fewer resources and it the only thing it does it sends everything via remote right to",
    "start": "1633080",
    "end": "1639960"
  },
  {
    "text": "your metrix provider uh could be actually quite cool like a lot of our customers are doing this and I wouldn't",
    "start": "1639960",
    "end": "1646039"
  },
  {
    "text": "do it but I'm also like very conservative sish anyway um remote right receiver",
    "start": "1646039",
    "end": "1653600"
  },
  {
    "start": "1651000",
    "end": "1651000"
  },
  {
    "text": "that's kind of the flip side of that coin at some point we realized we need like just 10 lines of code to let",
    "start": "1653600",
    "end": "1659480"
  },
  {
    "text": "Prometheus read its own remote right protocol this turns Prometheus into push based monitoring system which should",
    "start": "1659480",
    "end": "1666039"
  },
  {
    "text": "never happen right so this is this is why it was a feature flag initially because we were really like concerned",
    "start": "1666039",
    "end": "1672679"
  },
  {
    "text": "people will abuse this they will assume Prometheus is now a push based monitoring system I still don't",
    "start": "1672679",
    "end": "1678600"
  },
  {
    "text": "recommend this for like production but it's just nice you want to just ingest something that comes over a remote right",
    "start": "1678600",
    "end": "1684240"
  },
  {
    "text": "just in a toy test setup want to play with something or you have just a tiny amount of metrics then it might just",
    "start": "1684240",
    "end": "1689880"
  },
  {
    "text": "work so it's now stable so it's on by default but please don't try to ingest",
    "start": "1689880",
    "end": "1695919"
  },
  {
    "text": "humongous amount of production metrics uh in this way okay what else do we have",
    "start": "1695919",
    "end": "1701559"
  },
  {
    "text": "uh this is that was great fun we had a year almost a decade long discussion",
    "start": "1701559",
    "end": "1707159"
  },
  {
    "text": "about should we expand environment environment variables in our",
    "start": "1707159",
    "end": "1713519"
  },
  {
    "text": "config many programs do that Prometheus has this Purity uh ambition that you",
    "start": "1713519",
    "end": "1719880"
  },
  {
    "text": "have one and only one way to configure things and this is in your config file if you really want to just rer write a",
    "start": "1719880",
    "end": "1726480"
  },
  {
    "text": "rer script that will expand the environment variables and then write out a config file but so many people wanted",
    "start": "1726480",
    "end": "1732120"
  },
  {
    "text": "it so we had a long long long discussion and finally we settled on it should be loud in the internal label section and",
    "start": "1732120",
    "end": "1739279"
  },
  {
    "text": "only there which is the most requested use case for that personally I would have done it more but now I don't want",
    "start": "1739279",
    "end": "1745919"
  },
  {
    "text": "to open up this can of forms again so it is still a feature flag why because",
    "start": "1745919",
    "end": "1751760"
  },
  {
    "text": "somebody might have had a dollar curly brace like not meant as an environment variable but as the real thing so uh it",
    "start": "1751760",
    "end": "1759399"
  },
  {
    "text": "is strictly speaking a breaking change unlikely that somebody's doing this but with I don't know trillions of",
    "start": "1759399",
    "end": "1764760"
  },
  {
    "text": "Prometheus users it might happen so it's a teure FL until Prometheus 3 which will",
    "start": "1764760",
    "end": "1770240"
  },
  {
    "text": "happen in 2031 I don't know no timeline okay uh this is an interesting one and",
    "start": "1770240",
    "end": "1776679"
  },
  {
    "text": "uh Julian I will cut this really short because we are short of time but this is all for Downstream distribution and",
    "start": "1776679",
    "end": "1783720"
  },
  {
    "text": "Library users so normal users would will notice nothing of this but Julian was really he did a lot of stuff he has a",
    "start": "1783720",
    "end": "1790720"
  },
  {
    "text": "little Twitter storm about this and he will certainly talk about this in his longer version of this um so it's",
    "start": "1790720",
    "end": "1797039"
  },
  {
    "text": "essentially finally you can use Prometheus codebase more or less properly as a go module you the the UI",
    "start": "1797039",
    "end": "1804799"
  },
  {
    "text": "which is has a million uh react dependencies is packaged as kind of some pre-compiled Source package so it can",
    "start": "1804799",
    "end": "1811440"
  },
  {
    "text": "hopefully be packaged in Dean properly um we we publish protobuffers on Buff",
    "start": "1811440",
    "end": "1817200"
  },
  {
    "text": "what what's his name I always get that right buff. build right uh what of the",
    "start": "1817200",
    "end": "1823080"
  },
  {
    "text": "middle one I can't see this on my notes Here uh ah plug plugins that's that's the coolest thing right so you have",
    "start": "1823080",
    "end": "1828840"
  },
  {
    "text": "build time plug-in system Pro me this binary growth and grows because you support a huge amount of service",
    "start": "1828840",
    "end": "1835120"
  },
  {
    "text": "Discovery mechanism and every Services Cy mechanism comes with a huge client liby Azure gcp whatever so this is the",
    "start": "1835120",
    "end": "1841919"
  },
  {
    "text": "main reason why the promethus binary is Big most people don't care but some do so you can just switch this all off at",
    "start": "1841919",
    "end": "1848360"
  },
  {
    "text": "build time and then you have very slim nice small PR binaries all right um",
    "start": "1848360",
    "end": "1855080"
  },
  {
    "start": "1854000",
    "end": "1854000"
  },
  {
    "text": "what's coming very quickly uh the most important thing in my view is the new",
    "start": "1855080",
    "end": "1861799"
  },
  {
    "text": "boss high resolution histograms very cool stuff U I also have worked on it most of the time it's my heart and soul",
    "start": "1861799",
    "end": "1867960"
  },
  {
    "text": "into it so I'm clearly biased but ganes who also worked on this will give a very",
    "start": "1867960",
    "end": "1873240"
  },
  {
    "text": "very cool talk later today please all go there also alert manager will see more love now the Cent maintainer has more",
    "start": "1873240",
    "end": "1880120"
  },
  {
    "text": "time and my colleague George Will um also work more on it gives the talk here",
    "start": "1880120",
    "end": "1885399"
  },
  {
    "text": "pretty cool example from something outside of foras um if you want to look",
    "start": "1885399",
    "end": "1890519"
  },
  {
    "text": "oh no I haven't done this like say we have loads of design dogs in the pipeline a lot will happen you can see",
    "start": "1890519",
    "end": "1896799"
  },
  {
    "text": "this in our documentation we also want a more formalized proposal process for new stuff another new thing it's important",
    "start": "1896799",
    "end": "1903120"
  },
  {
    "text": "for Julian he will maintain this we we will do 2.37 will be a long-term support",
    "start": "1903120",
    "end": "1908880"
  },
  {
    "text": "version where you get security updates for a longer time also very cool um and",
    "start": "1908880",
    "end": "1914519"
  },
  {
    "text": "I think that should be it right yeah thank you very much do we have [Applause]",
    "start": "1914519",
    "end": "1925140"
  }
]