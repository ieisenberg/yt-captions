[
  {
    "text": "hey thanks for coming to my talk um I try to go for the longest title award I think this year uh how I've seen",
    "start": "780",
    "end": "7560"
  },
  {
    "text": "that in friends use cncf landscape to run high traffic Dynamic uh scalable",
    "start": "7560",
    "end": "12599"
  },
  {
    "text": "cost-effective websites um also just went for all those great bud buzzwords right my name is Corey",
    "start": "12599",
    "end": "18420"
  },
  {
    "text": "McGalliard I'm an engineering manager for a company called Red Ventures probably the largest Media Company you've never heard of uh we haven't seen",
    "start": "18420",
    "end": "25920"
  },
  {
    "text": "that but also quite a few other large websites you can go check out the website later to learn about us but um",
    "start": "25920",
    "end": "33180"
  },
  {
    "text": "but I've been with CNET specifically for about three three and a half years now",
    "start": "33180",
    "end": "39300"
  },
  {
    "text": "um and seeing that's been around for a while it started in 1994. I was originally a Ted network not a lot of",
    "start": "39300",
    "end": "45660"
  },
  {
    "text": "people actually realized that we started with the focus on TV and then shifted to a web presence afterwards we see about",
    "start": "45660",
    "end": "52079"
  },
  {
    "text": "45 billion requests monthly at Edge and uh 10 billion requests at origin per",
    "start": "52079",
    "end": "58500"
  },
  {
    "text": "second which is probably a metric we're more comfortable with that's 20 000 requests a second and five to ten",
    "start": "58500",
    "end": "64860"
  },
  {
    "text": "depending on the metric you look at down to the actual containers at origin right",
    "start": "64860",
    "end": "71340"
  },
  {
    "text": "um CNET has a rather long history of acquisition so starting in 94 they",
    "start": "71340",
    "end": "77760"
  },
  {
    "text": "started gobbling up Brands and then was purchased by CBS Interactive in 2008 and",
    "start": "77760",
    "end": "82799"
  },
  {
    "text": "then when I joined CBS Interactive in 2009 they were being a choir sorry 2019",
    "start": "82799",
    "end": "88680"
  },
  {
    "text": "they were being acquired by Viacom and then we were sold to Red Ventures a year",
    "start": "88680",
    "end": "93960"
  },
  {
    "text": "after that um we also have quite a bit of Technology leadership",
    "start": "93960",
    "end": "99119"
  },
  {
    "text": "um over the years CNET because we've been around right and have developed stuff we actually developed solar the",
    "start": "99119",
    "end": "104759"
  },
  {
    "text": "search index and that was donated to Apache we also were active with mood tools and then we adopted Docker and",
    "start": "104759",
    "end": "111479"
  },
  {
    "text": "Docker swarm actually really really early I've seen references back to 2015 2016 era uh when when that started to",
    "start": "111479",
    "end": "119040"
  },
  {
    "text": "kind of take take shape and then also we have uh the links are here for most of",
    "start": "119040",
    "end": "125520"
  },
  {
    "text": "these are either talks or documents about the history but we've been pretty open about our Google Cloud migration",
    "start": "125520",
    "end": "130679"
  },
  {
    "text": "over the last three years um so why kubernetes right so this is a",
    "start": "130679",
    "end": "137220"
  },
  {
    "text": "talk to really kind of talk about why we made the decision as an organization to move from Docker swarm to kubernetes",
    "start": "137220",
    "end": "144900"
  },
  {
    "text": "um we started about two and a half three years ago really initiating the the the",
    "start": "144900",
    "end": "150540"
  },
  {
    "text": "the process of doing this and the first few things I think everybody will like",
    "start": "150540",
    "end": "155700"
  },
  {
    "text": "agree with these things they're really comfortable with we see it is super flexible platform has all this all these",
    "start": "155700",
    "end": "162780"
  },
  {
    "text": "tools available to it and there's really high industry adoption for us we were really comfortable with containers we've",
    "start": "162780",
    "end": "168540"
  },
  {
    "text": "been using them for years so the step into kubernetes world was actually really really smart and easy for us to",
    "start": "168540",
    "end": "174120"
  },
  {
    "text": "do right but then what really kind of sold it for us is managed kubernetes we're in Google",
    "start": "174120",
    "end": "180060"
  },
  {
    "text": "so we get what I consider the cream of the crop of the kubernetes world gives",
    "start": "180060",
    "end": "185160"
  },
  {
    "text": "us visibility and control I kind of I'll share I'll share with you in a bit the difference between what it was like to",
    "start": "185160",
    "end": "190680"
  },
  {
    "text": "live in a Docker swarm world and manage kubernetes world today additionally I'm going to get some",
    "start": "190680",
    "end": "197760"
  },
  {
    "text": "groans probably from you guys today we like the managed kubernetes for click",
    "start": "197760",
    "end": "203159"
  },
  {
    "text": "off stability and I'll kind of share why in a bit um and then we were",
    "start": "203159",
    "end": "209340"
  },
  {
    "text": "and when we first moved started moving into gke the gke team released a version",
    "start": "209340",
    "end": "215459"
  },
  {
    "text": "of kubernetes called gke autopilot the day it released or that was announced I spun a cluster up and started throwing",
    "start": "215459",
    "end": "222360"
  },
  {
    "text": "some workloads on it in it to see if it would support our workloads and it was something that we're really really interested in",
    "start": "222360",
    "end": "228180"
  },
  {
    "text": "primarily because we can look at the kubernetes API as kind of a service right and we can just throw a container",
    "start": "228180",
    "end": "234299"
  },
  {
    "text": "at it and we don't have to worry about the nodes or managing the control plan or anything that it really just gives me",
    "start": "234299",
    "end": "240120"
  },
  {
    "text": "the API capabilities that I like but it doesn't add complexity to our general",
    "start": "240120",
    "end": "245459"
  },
  {
    "text": "workloads and we can also interact with the cncf ecosystem which is probably why",
    "start": "245459",
    "end": "250860"
  },
  {
    "text": "we're all here right and additionally why kubernetes developer and customer",
    "start": "250860",
    "end": "256680"
  },
  {
    "text": "experience our Engineers aren't infrastructure Engineers they why",
    "start": "256680",
    "end": "262380"
  },
  {
    "text": "they just want to write node code right and be able to submit containers to an",
    "start": "262380",
    "end": "267660"
  },
  {
    "text": "API and give them a really consistent response but you also see how flexible we've set it up to be over the last",
    "start": "267660",
    "end": "274020"
  },
  {
    "text": "couple years so this is what Dr swarm looks like if anybody's never used it from a node",
    "start": "274020",
    "end": "280380"
  },
  {
    "text": "perspective the barrier of Entry to interact with swarm meant that an engineer would have to SSH onto an onto",
    "start": "280380",
    "end": "287280"
  },
  {
    "text": "a manager node and run commands against it right so we could get really good information we could get the containers",
    "start": "287280",
    "end": "293520"
  },
  {
    "text": "that were running we could get the uh the images they were running how many how many containers were running and",
    "start": "293520",
    "end": "300600"
  },
  {
    "text": "stuff like that it was visible but for our general day-to-day Engineers they're not going to wanting to do this",
    "start": "300600",
    "end": "306660"
  },
  {
    "text": "moving to Google we were able to give them a really nice dashboard free out of the box right so",
    "start": "306660",
    "end": "313199"
  },
  {
    "text": "we can see the containers this is actually the front end CNET by the way um we could see the um the containers",
    "start": "313199",
    "end": "319680"
  },
  {
    "text": "that are running the front end you can see the resource utilization requests we're over provisioned pretty heavily",
    "start": "319680",
    "end": "324900"
  },
  {
    "text": "and pride because we want to make sure that y'all get really good experiences as you hit our site and then you can",
    "start": "324900",
    "end": "330900"
  },
  {
    "text": "also really easily get to logs I can't see my pointer but up there and then",
    "start": "330900",
    "end": "336180"
  },
  {
    "text": "inside the containers themselves you can see not only the entire deployments logs but the container Logs with just a click",
    "start": "336180",
    "end": "342060"
  },
  {
    "text": "of a button but Additionally you have the ability to modify your deployment",
    "start": "342060",
    "end": "347520"
  },
  {
    "text": "really easily we don't have permissions to production by default we have to request that right",
    "start": "347520",
    "end": "353880"
  },
  {
    "text": "so even even me as a platform engineer I have to request those permissions but what this has allowed us to do is to",
    "start": "353880",
    "end": "360060"
  },
  {
    "text": "give us a really easy way for our Engineers to make the same request and then adjust scaling on scaling events",
    "start": "360060",
    "end": "366780"
  },
  {
    "text": "like if we hit a Black Friday Cyber Monday we can prepare for that or if all of a sudden an iPhone gets announced and",
    "start": "366780",
    "end": "372780"
  },
  {
    "text": "we're getting more traffic than we anticipated we can very easily make it a change and give that control to our",
    "start": "372780",
    "end": "378479"
  },
  {
    "text": "engineers um this is um The Next Step really kind of that's",
    "start": "378479",
    "end": "384419"
  },
  {
    "text": "like the way the the point behind uh why we chose to go towards gke specifically",
    "start": "384419",
    "end": "389880"
  },
  {
    "text": "but this is our cncf tool chain and a couple other open source and internal tools that I like to talk about today",
    "start": "389880",
    "end": "396060"
  },
  {
    "text": "and we'll get into those details in a minute so let's kind of put that together right so what happens is like you'll start",
    "start": "396060",
    "end": "402900"
  },
  {
    "text": "with a slack message to say hey can you um can you take a look at this ticket and then we go to the ticket and it",
    "start": "402900",
    "end": "409560"
  },
  {
    "text": "might not not necessarily be the ticket we just want but it's the one we deserve we validate that that's on April Fool's",
    "start": "409560",
    "end": "415800"
  },
  {
    "text": "joke business Comic Sans right and then we uh we make a commit we push setup to",
    "start": "415800",
    "end": "422039"
  },
  {
    "text": "get and we're at Jenkins shop that's probably my second like ah moment for for now and we based on the um the",
    "start": "422039",
    "end": "430259"
  },
  {
    "text": "branch and the sandbox name we can request the femoral environment or a Sandbox and build it out",
    "start": "430259",
    "end": "437940"
  },
  {
    "text": "it gives our Engineers the capability to very quickly compare the front door of CNET",
    "start": "437940",
    "end": "443699"
  },
  {
    "text": "to their change it takes all of five minutes what's nice",
    "start": "443699",
    "end": "450419"
  },
  {
    "text": "about this this isn't running locally this is running into kubernetes inside of Google cloud and then I can give that",
    "start": "450419",
    "end": "456120"
  },
  {
    "text": "link to a product manager the product manager can then can validate what they requested us to do and say whether or",
    "start": "456120",
    "end": "461880"
  },
  {
    "text": "not is what they wanted so what makes all this possible the first",
    "start": "461880",
    "end": "468419"
  },
  {
    "text": "thing are the kubernetes objects we should all be pretty familiar with those I'm going to walk through them kind of quickly just to kind of share how we",
    "start": "468419",
    "end": "475139"
  },
  {
    "text": "kind of structure things so we'll have a deployment that obviously spins up pods",
    "start": "475139",
    "end": "481080"
  },
  {
    "text": "in this situation I'm just wanting one node.js pod next to an nginx pod",
    "start": "481080",
    "end": "486900"
  },
  {
    "text": "that's pretty common practice right and then the next thing we're going to have in between those pods or Services the",
    "start": "486900",
    "end": "493199"
  },
  {
    "text": "oddly named node service is a uh an artifact of us using Docker swarm and",
    "start": "493199",
    "end": "498900"
  },
  {
    "text": "Docker composed and how you name services in Docker and there's configuration typically or so sorry so",
    "start": "498900",
    "end": "504960"
  },
  {
    "text": "that that's why that's named that way and then the Ingress that allows traffic to come inside the cluster and flow",
    "start": "504960",
    "end": "511080"
  },
  {
    "text": "through the surfaces to the Pod so kind of a drawing wise this is kind of how it works so right the request comes into",
    "start": "511080",
    "end": "516479"
  },
  {
    "text": "the Ingress object and then is passed through the service on that Ingress object and then nginx is configured to",
    "start": "516479",
    "end": "523320"
  },
  {
    "text": "look at node and pass the request down and then nginx and node can scale up and down as we need",
    "start": "523320",
    "end": "530399"
  },
  {
    "text": "um this is our typical um kind of simplified Ingress definition",
    "start": "530399",
    "end": "535500"
  },
  {
    "text": "I'm going to walk through all those annotations which that's really the power behind the cncf world in my",
    "start": "535500",
    "end": "540899"
  },
  {
    "text": "opinion is how we can quickly pull in different tools and augment the native kubernetes",
    "start": "540899",
    "end": "547740"
  },
  {
    "text": "apis and then also there's config maps and secrets this is showing a secret for a",
    "start": "547740",
    "end": "553500"
  },
  {
    "text": "TLS certificate you can see where the certain key typically would be I shortened them so that they would fit on",
    "start": "553500",
    "end": "558540"
  },
  {
    "text": "the screen but also a secret typically sit encoded on disk and not necessarily",
    "start": "558540",
    "end": "566339"
  },
  {
    "text": "um uh in clean in plain text right um we're all inside of the atcd",
    "start": "566339",
    "end": "573600"
  },
  {
    "text": "so that's how kubernetes does it think does its things and these are our internal",
    "start": "573600",
    "end": "578700"
  },
  {
    "text": "um open source and cncf tools that we're going to kind of walk through the first one's helm for us",
    "start": "578700",
    "end": "584580"
  },
  {
    "text": "um really uh is obviously a package manager right so anything that can that",
    "start": "584580",
    "end": "590040"
  },
  {
    "text": "we run inside of our clusters kind of gets bundled in a chart and helps us kind of move those deployments into the",
    "start": "590040",
    "end": "598260"
  },
  {
    "text": "cluster um we like it because of the deployment history we have jobs that allow us to",
    "start": "598260",
    "end": "604800"
  },
  {
    "text": "look at the deployment history and roll back what what I appreciate a lot about Helm it doesn't just capture the",
    "start": "604800",
    "end": "610140"
  },
  {
    "text": "container image change but it captures any image anything that changes in the um the Manifest itself so if I make an",
    "start": "610140",
    "end": "617279"
  },
  {
    "text": "Ingress change and I work it right and I have to come back it's really easy to pull back that config change and then",
    "start": "617279",
    "end": "624240"
  },
  {
    "text": "also gives us some flexibility in the Manifest themselves how many people are setting out image",
    "start": "624240",
    "end": "630959"
  },
  {
    "text": "tags today right so like that's been a pattern in the past to where you would set up a deployment and you would change",
    "start": "630959",
    "end": "637500"
  },
  {
    "text": "the image tag based on using a said command Helm has given us the ability to",
    "start": "637500",
    "end": "643860"
  },
  {
    "text": "really easily pass values down into our manifest and make them really really",
    "start": "643860",
    "end": "649620"
  },
  {
    "text": "flexible and it gives us the ability to have the multiple environments based off of one chart um it also gives us logic gates and",
    "start": "649620",
    "end": "656160"
  },
  {
    "text": "Loops so in some situations we want our sites to be external public to the internet right in some situations we",
    "start": "656160",
    "end": "662700"
  },
  {
    "text": "don't and that having a true false statement is really easy to do to get",
    "start": "662700",
    "end": "667980"
  },
  {
    "text": "that set up and then looping if you want multiple host names we have multiple host names all over the place because a",
    "start": "667980",
    "end": "674700"
  },
  {
    "text": "different path we like to take um the and I don't have any really easy",
    "start": "674700",
    "end": "680940"
  },
  {
    "text": "way of Distributing home but traffic Ingress controller is something that",
    "start": "680940",
    "end": "686339"
  },
  {
    "text": "we've used since we've been in the docker swarm um it was really really flexible and",
    "start": "686339",
    "end": "691860"
  },
  {
    "text": "easy for us to use there but we brought it over into kubernetes because it was familiar and it was one less step we had",
    "start": "691860",
    "end": "698279"
  },
  {
    "text": "to take into the kubernetes world right it's super we use it similar to the way in nginx is used to wear its host and",
    "start": "698279",
    "end": "704640"
  },
  {
    "text": "path based routed so once a request gets to the traffic Ingress load balancer",
    "start": "704640",
    "end": "710220"
  },
  {
    "text": "based on the host that's passed we're able to pass it down to the service that's",
    "start": "710220",
    "end": "715320"
  },
  {
    "text": "um that is specified and also supports certificate cert manager and external",
    "start": "715320",
    "end": "720540"
  },
  {
    "text": "DNS and gcp load balancing we can kind of see how that works here this is the",
    "start": "720540",
    "end": "726000"
  },
  {
    "text": "same Ingress I showed you guys a minute ago with our friendly red boxes right and so um we have the Ingress class of traffic",
    "start": "726000",
    "end": "732779"
  },
  {
    "text": "that identifies hey uh this Ingress is is associated to traffic and so traffic",
    "start": "732779",
    "end": "739140"
  },
  {
    "text": "starts listening and paying attention to this Ingress and based on the hostname that is set traffic will traffic the",
    "start": "739140",
    "end": "746100"
  },
  {
    "text": "Ingress controller or Route traffic to the correct service that is listed on",
    "start": "746100",
    "end": "751140"
  },
  {
    "text": "Ingress uh traffic um I was always been hard to talk about",
    "start": "751140",
    "end": "756300"
  },
  {
    "text": "when you're differentiating the name of the service and actual internet traffic",
    "start": "756300",
    "end": "761760"
  },
  {
    "text": "uh anyway uh you can also augment traffic with with help of annotations",
    "start": "761760",
    "end": "767519"
  },
  {
    "text": "um and I'll also call out that traffic has its own crd to do some similar things we chose to use Ingress so that",
    "start": "767519",
    "end": "773519"
  },
  {
    "text": "we have some flexibility going uh the Ingress objects we have flexibility if we ever need to change our Ingress",
    "start": "773519",
    "end": "780000"
  },
  {
    "text": "controller um yeah and I'll also call it the TLs",
    "start": "780000",
    "end": "786360"
  },
  {
    "text": "section that's going to be important when we talk about cert manager so traffic is aware of how of the the TLs",
    "start": "786360",
    "end": "792720"
  },
  {
    "text": "information I'm setting there and the secret name I'm setting when it when there's a valid insert attached traffic",
    "start": "792720",
    "end": "798720"
  },
  {
    "text": "will actually be the per the the part that that um terminates the TLs",
    "start": "798720",
    "end": "803880"
  },
  {
    "text": "certificate so now we we have the application",
    "start": "803880",
    "end": "810660"
  },
  {
    "text": "running we've got our cluster and our load balancer listening for the hostname right so we technically could with a",
    "start": "810660",
    "end": "817560"
  },
  {
    "text": "host hit the load balancer and get there the problem is we don't have DNS in the past I'd be a support ticket external",
    "start": "817560",
    "end": "824220"
  },
  {
    "text": "DNS allows us to set up a a tool that will automate DNS creation",
    "start": "824220",
    "end": "829620"
  },
  {
    "text": "for us right this is actually a configuration on the external DNS service I tell it my cloud provider and",
    "start": "829620",
    "end": "836040"
  },
  {
    "text": "I tell it the gcproject.net and then this is um kind of what kind of allows the external",
    "start": "836040",
    "end": "844200"
  },
  {
    "text": "DNS pod to make some DNS changes so external DNS comes up in the cluster",
    "start": "844200",
    "end": "849720"
  },
  {
    "text": "it doesn't have permissions against Google so we have to authorize that somehow right so gke has a has a feature",
    "start": "849720",
    "end": "855839"
  },
  {
    "text": "called workload identity AWS has a very similar tool as well but workload and it",
    "start": "855839",
    "end": "861720"
  },
  {
    "text": "allows us to bind a kubernetes service account with a Google service account right so that my external DNS pod can",
    "start": "861720",
    "end": "868320"
  },
  {
    "text": "inject routes or inject DNS records as needed business authorized to do that in",
    "start": "868320",
    "end": "873779"
  },
  {
    "text": "inside of Google Cloud based on the same Ingress object I",
    "start": "873779",
    "end": "879480"
  },
  {
    "text": "created earlier you can you can use external DNS or external DNS a couple ways we're using",
    "start": "879480",
    "end": "886139"
  },
  {
    "text": "it to Target a host name that's pointed at a load balancer so what's going to happen is the host spec on the on the",
    "start": "886139",
    "end": "893699"
  },
  {
    "text": "Ingress will have a c name created pointed at my target that's listed in The annotation and so that takes",
    "start": "893699",
    "end": "900180"
  },
  {
    "text": "approximately a minute and a half at most for that to propagate right it's",
    "start": "900180",
    "end": "906060"
  },
  {
    "text": "five minutes is the default to say but it paying attention to it is really really fast",
    "start": "906060",
    "end": "912620"
  },
  {
    "text": "um and so now we can get traffic to to my containers to my workload we can see our beautiful comic stands uh and that's",
    "start": "912660",
    "end": "920339"
  },
  {
    "text": "allowing us just to get there but the problem the next problem we have to deal with is certificate management right so",
    "start": "920339",
    "end": "925680"
  },
  {
    "text": "in the past that was always a support ticket uh going out to some provider filling",
    "start": "925680",
    "end": "932519"
  },
  {
    "text": "out a massive form getting an email stuffing that into into a random secret somewhere putting that in swarm days we",
    "start": "932519",
    "end": "939959"
  },
  {
    "text": "would have to manually put that into a secret and then update our workload in order to like pull that into the actual",
    "start": "939959",
    "end": "946320"
  },
  {
    "text": "application certificate manager automates all that I went to the booth earlier this week and",
    "start": "946320",
    "end": "952980"
  },
  {
    "text": "and thanked those guys so much because I saved about a month and a half Dev time",
    "start": "952980",
    "end": "958320"
  },
  {
    "text": "annually just by automating certain rotation I love kubernetes",
    "start": "958320",
    "end": "963600"
  },
  {
    "text": "cert manager may be my favorite tool in in the pool chain no joke okay so cert",
    "start": "963600",
    "end": "968760"
  },
  {
    "text": "manager very similar you have some containers running in your cluster right and then you have to create a",
    "start": "968760",
    "end": "974760"
  },
  {
    "text": "certificate issuer basically it's an issuer that points at an essay this one's looking at let's encrypt and is",
    "start": "974760",
    "end": "981660"
  },
  {
    "text": "doing DNS challenge authorization right why that's important for us so you can",
    "start": "981660",
    "end": "988560"
  },
  {
    "text": "do HTTP validation where where your container comes up and it comes out from the inside and it validates hey yeah you",
    "start": "988560",
    "end": "994920"
  },
  {
    "text": "own that domain but we do a lot of internal work right because we don't want to surface the front end uh Dev version of the",
    "start": "994920",
    "end": "1001459"
  },
  {
    "text": "front end of CNET and Google scrape it scrape it and then kill our SEO scores so I'll be able to do a lot of internal",
    "start": "1001459",
    "end": "1007579"
  },
  {
    "text": "work right so we need to be able to validate the asserts internally so that we get um",
    "start": "1007579",
    "end": "1013759"
  },
  {
    "text": "top to bottom consistency with our development and production environments",
    "start": "1013759",
    "end": "1019480"
  },
  {
    "text": "so we set up the cert issuer and then we",
    "start": "1019480",
    "end": "1024980"
  },
  {
    "text": "have to do the same thing with cert manager to tie the service account for cert manager to external DNS I mean",
    "start": "1024980",
    "end": "1031280"
  },
  {
    "text": "sorry it's to to Google service account so basically allowing cert manager to do",
    "start": "1031280",
    "end": "1036380"
  },
  {
    "text": "the same kind of DNS writing as external DNS does and",
    "start": "1036380",
    "end": "1042438"
  },
  {
    "text": "what's going to happen I think I've got this okay yeah sure so the we specify the issue we want to use",
    "start": "1042439",
    "end": "1049640"
  },
  {
    "text": "and we set and we also specify the TLs information under the host of the TLs information that's the sand that that",
    "start": "1049640",
    "end": "1055820"
  },
  {
    "text": "the assert is provisioned for and then the secret name is the name of the the kubernetes secret that the certificate",
    "start": "1055820",
    "end": "1062780"
  },
  {
    "text": "is stuffed into right and so um yeah let me walk through that whole process so what's going to happen is",
    "start": "1062780",
    "end": "1070760"
  },
  {
    "text": "um a request is going to be created for a certificate then it's going to be sent to Let's",
    "start": "1070760",
    "end": "1077780"
  },
  {
    "text": "encrypt through cert manager cert manager is going to create a DNS record an Acme DNS record with a text record",
    "start": "1077780",
    "end": "1083720"
  },
  {
    "text": "from the response from from uh from let's encrypt and then let's encrypt is going to say hey yeah you own that",
    "start": "1083720",
    "end": "1089240"
  },
  {
    "text": "here's a certificate and it's going to stuff it in that secret right uh and then there's a crd available with",
    "start": "1089240",
    "end": "1095299"
  },
  {
    "text": "cert manager and you can watch it happen in real time and see the status of the certs and then once that all happens the cert",
    "start": "1095299",
    "end": "1103280"
  },
  {
    "text": "is actually inside the sequel so what was really beautiful about this for those of us who care about mtls or",
    "start": "1103280",
    "end": "1108620"
  },
  {
    "text": "certificate um validation at all is not only can my Ingress use this or any other object",
    "start": "1108620",
    "end": "1114740"
  },
  {
    "text": "inside of kubernetes but also my pods can mount them as actual files so if I",
    "start": "1114740",
    "end": "1121039"
  },
  {
    "text": "need to give nginx a valid certificate I can create one and hand it to it or if I",
    "start": "1121039",
    "end": "1126740"
  },
  {
    "text": "need to give Envoy proxy so in this situation we give it both to nginx and to traffic",
    "start": "1126740",
    "end": "1133779"
  },
  {
    "text": "so all of that lets us put Comic Sans on a temporary environment right",
    "start": "1133940",
    "end": "1139940"
  },
  {
    "text": "so that's great that's a lot of work to get Comic Sans out there",
    "start": "1139940",
    "end": "1146960"
  },
  {
    "text": "um the next thing that's going to happen is the engineer is going to go to the product manager and be like hey look I did my job I'm going to merge this pull",
    "start": "1146960",
    "end": "1152840"
  },
  {
    "text": "request in right once they get the approval and then we're going to forget about this environment right because we're terrible at cleaning up after",
    "start": "1152840",
    "end": "1158179"
  },
  {
    "text": "ourselves everybody agree so we wrote a tool internally called deckhand",
    "start": "1158179",
    "end": "1164539"
  },
  {
    "text": "based on our cscd process and this is a process we want to clean up and automate",
    "start": "1164539",
    "end": "1169760"
  },
  {
    "text": "a little bit better but um today um based on our cicd process we get to say how long those containers run",
    "start": "1169760",
    "end": "1177740"
  },
  {
    "text": "and we said a day and what we do is we create a config map that has a special",
    "start": "1177740",
    "end": "1183679"
  },
  {
    "text": "label on it that specifically says that you can delete this thing with the date and time I'm okay with you deleting it",
    "start": "1183679",
    "end": "1190580"
  },
  {
    "text": "and then we have a Cron job that runs hourly maybe there it goes a Cron job that runs",
    "start": "1190580",
    "end": "1197120"
  },
  {
    "text": "alley hourly to validate where when and where that that namespace",
    "start": "1197120",
    "end": "1203299"
  },
  {
    "text": "can be deleted once you hit that Purge date the namespace namespace will be",
    "start": "1203299",
    "end": "1209660"
  },
  {
    "text": "will be cleaned up and we've cleaned up after ourselves um so that's really how our ephemeral",
    "start": "1209660",
    "end": "1216260"
  },
  {
    "text": "environments work I'll talk about them the move to to prod in a second",
    "start": "1216260",
    "end": "1221600"
  },
  {
    "text": "um in all of our environments we have very similar observabilities to actually that's Prometheus which is a Time series",
    "start": "1221600",
    "end": "1227179"
  },
  {
    "text": "database that allows us to scrape all the containers and in our cluster as well as resources outside of our cluster",
    "start": "1227179",
    "end": "1234620"
  },
  {
    "text": "we use it actually to monitor uptime of GCE ingresses as well not just stuff",
    "start": "1234620",
    "end": "1241460"
  },
  {
    "text": "inside of our cluster and that all of that data can be visualized with the tool called grafana",
    "start": "1241460",
    "end": "1248120"
  },
  {
    "text": "um this is one of my favorite dashboards it shows us latency throughput that's all using the traffic Ingress controller",
    "start": "1248120",
    "end": "1254240"
  },
  {
    "text": "metrics uh the error rates as well and then I can in the same workload this is just one workload uh I can see how how",
    "start": "1254240",
    "end": "1261260"
  },
  {
    "text": "saturated the CPU and memory is so this is if you're familiar with the uh SRE principles of the golden signals these",
    "start": "1261260",
    "end": "1268160"
  },
  {
    "text": "are the five or sorry for the bottom two are really the same it's just memory and uh",
    "start": "1268160",
    "end": "1274460"
  },
  {
    "text": "CPU all of that information then can be serviced to a tool called alert manager",
    "start": "1274460",
    "end": "1279740"
  },
  {
    "text": "which allows us to pay attention to how well our services are are running right so we can we can write alerts that say",
    "start": "1279740",
    "end": "1286280"
  },
  {
    "text": "Hey if we have a Delta change on um on error rate so we all of a sudden",
    "start": "1286280",
    "end": "1291679"
  },
  {
    "text": "have a 50 error rate increase or 10 percent error rate request increase page the person who owns this service or",
    "start": "1291679",
    "end": "1298880"
  },
  {
    "text": "memory or whatever thing you care about uh and additionally",
    "start": "1298880",
    "end": "1304280"
  },
  {
    "text": "um we are investigating on all of all this together looking at our cloud provider Google with their uh with their",
    "start": "1304280",
    "end": "1311840"
  },
  {
    "text": "um observability tooling as well this is the same dashboard reimagine with Google's um uh dashboarding as well so",
    "start": "1311840",
    "end": "1319640"
  },
  {
    "text": "it so the cool thing about kubernetes and using your Cloud providers native tooling is that we have like crazy",
    "start": "1319640",
    "end": "1326120"
  },
  {
    "text": "visibility into our workloads today right and we can see when things are going well when things aren't and we can",
    "start": "1326120",
    "end": "1331400"
  },
  {
    "text": "be alerted on them as necessary okay so I've talked about a Sandbox",
    "start": "1331400",
    "end": "1338200"
  },
  {
    "text": "environment and that's probably not what you want to hear you want to hear what we do for production we do the exact",
    "start": "1338200",
    "end": "1343220"
  },
  {
    "text": "same thing all the way top to bottom development sandboxing production the",
    "start": "1343220",
    "end": "1348380"
  },
  {
    "text": "only things that change with these things right how we handle internal versus external traffic routing whether",
    "start": "1348380",
    "end": "1354200"
  },
  {
    "text": "it's coming through an internal load balancer external load balancer and that's usually handled with",
    "start": "1354200",
    "end": "1360320"
  },
  {
    "text": "annotations on Ingress and logic gates and helm uh how we handle Redbook",
    "start": "1360320",
    "end": "1365960"
  },
  {
    "text": "accounts we don't run one pod in prod right we're going to run close to a",
    "start": "1365960",
    "end": "1371000"
  },
  {
    "text": "couple hundred we also open up resource requests and limits in production we do over commit",
    "start": "1371000",
    "end": "1377900"
  },
  {
    "text": "because we want to make sure that we're not throttling the application we want good user experience that's more",
    "start": "1377900",
    "end": "1384740"
  },
  {
    "text": "important than being really really tight on resource utilization and then workload separation so this is",
    "start": "1384740",
    "end": "1390980"
  },
  {
    "text": "new for autopilot um a guy I've been by the name William Dennis talked about this last kubecon where you can specify",
    "start": "1390980",
    "end": "1398000"
  },
  {
    "text": "um basically create ephemeral node groups based on a label you put on your",
    "start": "1398000",
    "end": "1403220"
  },
  {
    "text": "workload so that for say for instance you have a workload that is your your back end workload right or workload that",
    "start": "1403220",
    "end": "1410659"
  },
  {
    "text": "is your front load workload and you want to make sure they're separated so that you don't have Noisy Neighbor problems so this is a new a new feature but also",
    "start": "1410659",
    "end": "1417440"
  },
  {
    "text": "the idea if you've not read about um openness I'm blanking uh pod",
    "start": "1417440",
    "end": "1424640"
  },
  {
    "text": "anti-affinity there are ways using labels to say based on the name of my pods mix or try to separate the the uh",
    "start": "1424640",
    "end": "1433400"
  },
  {
    "text": "the workload across multiple nodes so you have true High availability having 50 pods on one node is not high",
    "start": "1433400",
    "end": "1439700"
  },
  {
    "text": "availability it's not the same thing right so we want to make sure we have 50 pods on 10 nodes so we have five deep",
    "start": "1439700",
    "end": "1445700"
  },
  {
    "text": "across across our cluster",
    "start": "1445700",
    "end": "1450039"
  },
  {
    "text": "so this is all great right so we started this journey three years ago",
    "start": "1452480",
    "end": "1457760"
  },
  {
    "text": "this is where we want to go so we literally we have where one API away from being completely in kubernetes",
    "start": "1457760",
    "end": "1465380"
  },
  {
    "text": "um and our next steps are to look at gcp managed or Google gcp managed Prometheus",
    "start": "1465380",
    "end": "1471020"
  },
  {
    "text": "primarily because we want longer term metrics right now we're limited to about",
    "start": "1471020",
    "end": "1476059"
  },
  {
    "text": "30 days on disk uh Ingress API to Gateway API if you're",
    "start": "1476059",
    "end": "1481340"
  },
  {
    "text": "in this world you're probably thinking about this as some degree because it seems like Gateway API is the next step",
    "start": "1481340",
    "end": "1486799"
  },
  {
    "text": "forward a policy management in kyberna right emission controllers the ability to put guardrails up so the more we can",
    "start": "1486799",
    "end": "1493760"
  },
  {
    "text": "give permissions to our Engineers to put stuff into kubernetes we want to make sure they're making really smart",
    "start": "1493760",
    "end": "1499159"
  },
  {
    "text": "decisions and not running his route for example and also mutating web hooks we",
    "start": "1499159",
    "end": "1504380"
  },
  {
    "text": "like to label our things for information so we can force with mutating web hooks we found ways we can force some labels",
    "start": "1504380",
    "end": "1510620"
  },
  {
    "text": "onto some workloads so that we are able to follow billing costs and security costs and stuff like Security Management",
    "start": "1510620",
    "end": "1516919"
  },
  {
    "text": "and stuff like that and obviously supply chain hardening and improved observability it's obvious from our",
    "start": "1516919",
    "end": "1522260"
  },
  {
    "text": "observability slide that's something we're currently actively looking at is how do we look at this stuff in in a",
    "start": "1522260",
    "end": "1528440"
  },
  {
    "text": "much much better way and then my big one right now is is get Ops in a",
    "start": "1528440",
    "end": "1534200"
  },
  {
    "text": "pool mentality so we we've come we've been around for a long time push mentality has been around for a long",
    "start": "1534200",
    "end": "1539240"
  },
  {
    "text": "time right and so this get Ops pulling the changes into your cluster into your into your environment is new and it's",
    "start": "1539240",
    "end": "1546320"
  },
  {
    "text": "something we're investigating we uh looking at Argo and other tools as well for that",
    "start": "1546320",
    "end": "1552940"
  },
  {
    "text": "okay so that's how CNET really kind of runs our uh our environment what's what's",
    "start": "1553820",
    "end": "1560539"
  },
  {
    "text": "really interesting and to think about is not necessarily that's how we run it today",
    "start": "1560539",
    "end": "1566120"
  },
  {
    "text": "um so cnet's been around for 20 something years right but I was almost as old as I am which is kind of funny",
    "start": "1566120",
    "end": "1571400"
  },
  {
    "text": "and and fun to work on to a degree but um before we adopted containerization",
    "start": "1571400",
    "end": "1578900"
  },
  {
    "text": "we could deploy once maybe twice per week uh the process was slow and tedious we",
    "start": "1578900",
    "end": "1585260"
  },
  {
    "text": "had to have release Engineers we had to do a lot of coordination we had to think about heavily how do we take this change",
    "start": "1585260",
    "end": "1592580"
  },
  {
    "text": "this one line change and March that through our our production to our",
    "start": "1592580",
    "end": "1597740"
  },
  {
    "text": "production environment right today we um man I don't have a really good metric",
    "start": "1597740",
    "end": "1603740"
  },
  {
    "text": "because it varies so much but we deploy anywhere between 10 to 20 times a day to",
    "start": "1603740",
    "end": "1610220"
  },
  {
    "text": "production uh and then much more than that in non-production right so we can make a change in hours and get it to the",
    "start": "1610220",
    "end": "1617539"
  },
  {
    "text": "front door of CNET that's honestly the big value proposition for all of this tooling we could yeah we could consume a",
    "start": "1617539",
    "end": "1623779"
  },
  {
    "text": "managed service and probably run some of our services on that but the flexibility and the speed our Engineers have to meet",
    "start": "1623779",
    "end": "1630140"
  },
  {
    "text": "the business requirements that are like kind of laid out for us is why we're here right",
    "start": "1630140",
    "end": "1635419"
  },
  {
    "text": "um so that's why I like it and also um yeah and also have been a huge",
    "start": "1635419",
    "end": "1641779"
  },
  {
    "text": "kubernetes fan for years and I was brought in to do this so it was fun it was fun you know that's how we do it if you have any questions I'm more than",
    "start": "1641779",
    "end": "1647240"
  },
  {
    "text": "happy to answer as much as I can sorry for the vast amount of yaml and speed we went through that yeah let's get it Mike",
    "start": "1647240",
    "end": "1652580"
  },
  {
    "text": "okay",
    "start": "1652580",
    "end": "1654820"
  },
  {
    "text": "yeah let me grab a mic so everybody can hear you it's a big room",
    "start": "1658220",
    "end": "1663580"
  },
  {
    "text": "just uh Curious how you would uh how you guys do the test Automation and Sanity",
    "start": "1664900",
    "end": "1671539"
  },
  {
    "text": "checks um pushing 10 to 20 times a day okay so um all that's actually handled by our CI",
    "start": "1671539",
    "end": "1677900"
  },
  {
    "text": "CD um our cicd system primarily this is really focused on just getting the",
    "start": "1677900",
    "end": "1684260"
  },
  {
    "text": "deployment change right so this was the CD less CI like the integration validation pieces of it",
    "start": "1684260",
    "end": "1691220"
  },
  {
    "text": "um to be open um I'm not really on that team trying to think of the name of the Tool uh there's",
    "start": "1691220",
    "end": "1696440"
  },
  {
    "text": "a node framework that they that they're using for the node applications and then we use PHP and Symphony quite a bit and",
    "start": "1696440",
    "end": "1703700"
  },
  {
    "text": "they have some Frameworks around that too I know those tests passed and fail pretty regularly because I've seen them",
    "start": "1703700",
    "end": "1710179"
  },
  {
    "text": "but it's not part of my my purview right yeah another question yep",
    "start": "1710179",
    "end": "1716240"
  },
  {
    "text": "you said you were exploring on your CD strategy right with Argo CD and some other tools can you like put some light",
    "start": "1716240",
    "end": "1722059"
  },
  {
    "text": "on your process like how you're going about on how we're looking forward to the move okay so at the moment we're",
    "start": "1722059",
    "end": "1728179"
  },
  {
    "text": "looking towards uh to be honest you so we use Jenkins today right and so it's",
    "start": "1728179",
    "end": "1733640"
  },
  {
    "text": "been around for a while it's going to be a slow migration out of that for us most likely we've played a lot with Cloud",
    "start": "1733640",
    "end": "1739820"
  },
  {
    "text": "build uh and Cloud deploy and then Argo CD those are kind of the three things we're kind of exploring we'll probably",
    "start": "1739820",
    "end": "1746419"
  },
  {
    "text": "move our see our our integration pieces to Cloud build because it's native to what we're doing and it ties into GitHub",
    "start": "1746419",
    "end": "1753320"
  },
  {
    "text": "but then the deployment process is still up in the air and that's really going to be us just kind of like using both for a",
    "start": "1753320",
    "end": "1759799"
  },
  {
    "text": "while and going we like this one better we like that one better tecton uh no but actually I'm really",
    "start": "1759799",
    "end": "1766700"
  },
  {
    "text": "interested in flux after watching a couple of demos this week just to be completely open I think is a cool tool yeah",
    "start": "1766700",
    "end": "1772760"
  },
  {
    "text": "do you guys have like a single production cluster or multiple production clusters um so when I said",
    "start": "1772760",
    "end": "1778820"
  },
  {
    "text": "and friends right um there's more than just CNET that I manage right so we have 30 clusters in",
    "start": "1778820",
    "end": "1785600"
  },
  {
    "text": "prod and 30 plus processors clusters and non-prod today so you just do you have like then a single permit a Prometheus",
    "start": "1785600",
    "end": "1792620"
  },
  {
    "text": "server per cluster that you have to switch between today yes so our our grafonas are gross we flip between the",
    "start": "1792620",
    "end": "1798440"
  },
  {
    "text": "the different uh uh the different Prometheus yep there's some right here",
    "start": "1798440",
    "end": "1803980"
  },
  {
    "text": "uh you mentioned you're using alert manager um do you use it for all of your",
    "start": "1804620",
    "end": "1810140"
  },
  {
    "text": "alerting or actually you have several systems well okay I take that back in the past it was our only alert manager",
    "start": "1810140",
    "end": "1816799"
  },
  {
    "text": "our only alerting tool for the operations team um we have moved we're we're",
    "start": "1816799",
    "end": "1823240"
  },
  {
    "text": "investigating the alerts that are built into Google uh Google's infrastructure",
    "start": "1823240",
    "end": "1828740"
  },
  {
    "text": "as well as the alertiness um part of grafana to a degree yeah and would you",
    "start": "1828740",
    "end": "1834500"
  },
  {
    "text": "um consider uh you saw you you mentioned gke manager Prometheus they also are",
    "start": "1834500",
    "end": "1841460"
  },
  {
    "text": "compatible with like exporting and importing all kind of Prometheus metrics to other",
    "start": "1841460",
    "end": "1846620"
  },
  {
    "text": "um Prometheus and senses sure uh would you consider using alert manager at scale for",
    "start": "1846620",
    "end": "1852200"
  },
  {
    "text": "everything or with your other move the other way around that you're taking stuff out of alert manager and moving it down to a managed",
    "start": "1852200",
    "end": "1858919"
  },
  {
    "text": "um so my my team is we're a small team right so there's",
    "start": "1858919",
    "end": "1864679"
  },
  {
    "text": "um I think there's six of us now um and so we will consume a managed Service quicker than we will on Open",
    "start": "1864679",
    "end": "1870980"
  },
  {
    "text": "Source service uh if it meets our needs um so it depends",
    "start": "1870980",
    "end": "1876919"
  },
  {
    "text": "um I I don't they're like so Black Box exporter not being available right now",
    "start": "1876919",
    "end": "1882559"
  },
  {
    "text": "with with managed Prometheus is going to hurt also autopilot doesn't support managed Prometheus at the moment so it's",
    "start": "1882559",
    "end": "1888260"
  },
  {
    "text": "going to be a minute before we make that that shift but it is something we're exploring does that make sense",
    "start": "1888260",
    "end": "1893539"
  },
  {
    "text": "he's got a mic right behind you uh you mentioned about uh sandbox testing and the sunbusters obviously you",
    "start": "1893539",
    "end": "1901700"
  },
  {
    "text": "don't want to expose to the public how do you control access uh for the product manager who you want to see those",
    "start": "1901700",
    "end": "1908360"
  },
  {
    "text": "changes um so we're a legacy company right so we have a VPN so it's it's truly internal",
    "start": "1908360",
    "end": "1914960"
  },
  {
    "text": "right um but um IAP if you haven't read about a Google's Service uh it allows you to",
    "start": "1914960",
    "end": "1921620"
  },
  {
    "text": "expose stuff externally but validate a Google cap before you get into it is one way that we are exploring uh moving away",
    "start": "1921620",
    "end": "1929240"
  },
  {
    "text": "from that but also um uh use of headers so we can we can do",
    "start": "1929240",
    "end": "1935480"
  },
  {
    "text": "some header magic but um we we can flip that internal external flag with a true",
    "start": "1935480",
    "end": "1941539"
  },
  {
    "text": "false right so if we need something to be truly external and validate through the through the CDN we can have a test",
    "start": "1941539",
    "end": "1946640"
  },
  {
    "text": "CDN service and actually validate the entire stack so it depends sorry",
    "start": "1946640",
    "end": "1953259"
  },
  {
    "text": "any other questions",
    "start": "1953779",
    "end": "1956440"
  },
  {
    "text": "hi thanks for your talk I was just curious about how you're addressing security needs or where that falls in",
    "start": "1966440",
    "end": "1973940"
  },
  {
    "text": "your priorities and in what way that was weird mom a year just I mean",
    "start": "1973940",
    "end": "1980360"
  },
  {
    "text": "securing the application overall um so uh for like container scanning and",
    "start": "1980360",
    "end": "1987200"
  },
  {
    "text": "paying attention to gcp we have a separate security team but we use a cool a tool called whiz",
    "start": "1987200",
    "end": "1993380"
  },
  {
    "text": "um is is is the the tool that our organization has chosen to use um but also we use cloud armor WAFF",
    "start": "1993380",
    "end": "2001559"
  },
  {
    "text": "we were um oh goodness I can't think of the name of the we had another tool recently that",
    "start": "2001559",
    "end": "2008260"
  },
  {
    "text": "we just migrated off but again we'll manage we'll take a mandatory especially if it aligns with our cloud provider",
    "start": "2008260",
    "end": "2015720"
  },
  {
    "text": "right here yeah okay I'm happy to talk after but um thank you guys so much this has been a",
    "start": "2016659",
    "end": "2022240"
  },
  {
    "text": "lot of fun this is my first coupon talk if you couldn't tell that I was really nervous yeah",
    "start": "2022240",
    "end": "2028140"
  },
  {
    "text": "[Applause]",
    "start": "2031520",
    "end": "2034109"
  }
]