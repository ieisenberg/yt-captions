[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "hello everyone my name is zachary dichev",
    "start": "1040",
    "end": "3679"
  },
  {
    "text": "and i work at buoyant uh the creators of",
    "start": "3679",
    "end": "6720"
  },
  {
    "text": "linkerbeam",
    "start": "6720",
    "end": "8000"
  },
  {
    "text": "today we're going to do a lingerie deep",
    "start": "8000",
    "end": "9760"
  },
  {
    "text": "dive and we're going to focus",
    "start": "9760",
    "end": "11280"
  },
  {
    "text": "on one particular feature which is the",
    "start": "11280",
    "end": "14080"
  },
  {
    "text": "multi-cluster functionality that was",
    "start": "14080",
    "end": "15920"
  },
  {
    "text": "released in",
    "start": "15920",
    "end": "17119"
  },
  {
    "text": "incredibly 2.8 so",
    "start": "17119",
    "end": "20400"
  },
  {
    "text": "the agenda for this talk is um we're",
    "start": "20400",
    "end": "23359"
  },
  {
    "start": "21000",
    "end": "21000"
  },
  {
    "text": "going to look",
    "start": "23359",
    "end": "24000"
  },
  {
    "text": "at the what service meshes and why you",
    "start": "24000",
    "end": "27359"
  },
  {
    "text": "might need one",
    "start": "27359",
    "end": "28480"
  },
  {
    "text": "we're going to cover the multi-cluster",
    "start": "28480",
    "end": "30080"
  },
  {
    "text": "concepts that",
    "start": "30080",
    "end": "31679"
  },
  {
    "text": "govern the implementation of this",
    "start": "31679",
    "end": "33920"
  },
  {
    "text": "feature we're going to look at the",
    "start": "33920",
    "end": "35440"
  },
  {
    "text": "general architecture",
    "start": "35440",
    "end": "36640"
  },
  {
    "text": "of multicluster then we're going to do a",
    "start": "36640",
    "end": "39200"
  },
  {
    "text": "quick demo",
    "start": "39200",
    "end": "40160"
  },
  {
    "text": "showing how this feature feels in the",
    "start": "40160",
    "end": "41920"
  },
  {
    "text": "terminal and what you can do with it",
    "start": "41920",
    "end": "44800"
  },
  {
    "text": "and then we're going to look at the life",
    "start": "44800",
    "end": "47039"
  },
  {
    "text": "of a request",
    "start": "47039",
    "end": "48160"
  },
  {
    "text": "across clusters so let's get started",
    "start": "48160",
    "end": "52000"
  },
  {
    "text": "a lot has been said about service meshes",
    "start": "52000",
    "end": "54800"
  },
  {
    "text": "and",
    "start": "54800",
    "end": "56840"
  },
  {
    "text": "um in fact",
    "start": "56840",
    "end": "58719"
  },
  {
    "text": "um i think the best way to describe it",
    "start": "58719",
    "end": "62320"
  },
  {
    "text": "is through a quote that i read recently",
    "start": "62320",
    "end": "64478"
  },
  {
    "text": "on our blog",
    "start": "64479",
    "end": "66320"
  },
  {
    "text": "namely you might think that when you",
    "start": "66320",
    "end": "68560"
  },
  {
    "text": "have a distributed system",
    "start": "68560",
    "end": "70240"
  },
  {
    "text": "the most important thing is that amb can",
    "start": "70240",
    "end": "72400"
  },
  {
    "text": "exchange packets",
    "start": "72400",
    "end": "73520"
  },
  {
    "text": "and that's true it is important however",
    "start": "73520",
    "end": "76080"
  },
  {
    "text": "as your system grows",
    "start": "76080",
    "end": "78240"
  },
  {
    "text": "and becomes more complex you need to be",
    "start": "78240",
    "end": "80400"
  },
  {
    "text": "able to provide",
    "start": "80400",
    "end": "82159"
  },
  {
    "text": "more guarantees and",
    "start": "82159",
    "end": "85439"
  },
  {
    "text": "what linkrd gives you is the following",
    "start": "85439",
    "end": "90159"
  },
  {
    "text": "it provides the guarantee that amb",
    "start": "90159",
    "end": "93280"
  },
  {
    "text": "can exchange packets in a way that",
    "start": "93280",
    "end": "95360"
  },
  {
    "text": "validates the identity",
    "start": "95360",
    "end": "97040"
  },
  {
    "text": "on both sides has clear authorization",
    "start": "97040",
    "end": "99680"
  },
  {
    "text": "semantics",
    "start": "99680",
    "end": "100799"
  },
  {
    "text": "is confidential to third parties and is",
    "start": "100799",
    "end": "103360"
  },
  {
    "text": "measurable",
    "start": "103360",
    "end": "104399"
  },
  {
    "text": "and inspectable so this is a pretty",
    "start": "104399",
    "end": "108640"
  },
  {
    "text": "um concise quote but i think it captures",
    "start": "108640",
    "end": "111439"
  },
  {
    "text": "the essence of",
    "start": "111439",
    "end": "113759"
  },
  {
    "text": "and it goes and you know in",
    "start": "113759",
    "end": "116880"
  },
  {
    "text": "a typical distributed system you might",
    "start": "116880",
    "end": "119119"
  },
  {
    "start": "119000",
    "end": "119000"
  },
  {
    "text": "have an architecture that looks like",
    "start": "119119",
    "end": "120799"
  },
  {
    "text": "this you have a client",
    "start": "120799",
    "end": "122240"
  },
  {
    "text": "that communicates with an api gateway",
    "start": "122240",
    "end": "124719"
  },
  {
    "text": "that happens to live",
    "start": "124719",
    "end": "126079"
  },
  {
    "text": "in a kubernetes cluster this api gateway",
    "start": "126079",
    "end": "128800"
  },
  {
    "text": "then routes requests to a number of",
    "start": "128800",
    "end": "130319"
  },
  {
    "text": "internal services",
    "start": "130319",
    "end": "132000"
  },
  {
    "text": "and these services might talk to a",
    "start": "132000",
    "end": "134080"
  },
  {
    "text": "database or",
    "start": "134080",
    "end": "135360"
  },
  {
    "text": "a redis cache or for that matter they",
    "start": "135360",
    "end": "138319"
  },
  {
    "text": "might be",
    "start": "138319",
    "end": "139280"
  },
  {
    "text": "talking to a third party api that's",
    "start": "139280",
    "end": "141520"
  },
  {
    "text": "reachable over the internet",
    "start": "141520",
    "end": "143280"
  },
  {
    "text": "and this is all great until",
    "start": "143280",
    "end": "146319"
  },
  {
    "text": "things start to go sideways so",
    "start": "146319",
    "end": "149680"
  },
  {
    "text": "for example your database might become",
    "start": "149680",
    "end": "151840"
  },
  {
    "text": "unavailable",
    "start": "151840",
    "end": "153599"
  },
  {
    "text": "or you might deploy a",
    "start": "153599",
    "end": "156959"
  },
  {
    "text": "new service version that's significantly",
    "start": "156959",
    "end": "159200"
  },
  {
    "text": "slower",
    "start": "159200",
    "end": "160160"
  },
  {
    "text": "than the previous one",
    "start": "160160",
    "end": "163200"
  },
  {
    "text": "causing",
    "start": "163200",
    "end": "165680"
  },
  {
    "text": "all of your other services to exhibit",
    "start": "166239",
    "end": "169840"
  },
  {
    "text": "behavior or somebody might",
    "start": "169840",
    "end": "173120"
  },
  {
    "text": "by mistake cut the fiber optics cables",
    "start": "173120",
    "end": "176239"
  },
  {
    "text": "and now you don't have connectivity to",
    "start": "176239",
    "end": "178159"
  },
  {
    "text": "the internet and when this happens",
    "start": "178159",
    "end": "180879"
  },
  {
    "text": "or any of these things happen you want",
    "start": "180879",
    "end": "183440"
  },
  {
    "text": "to be able",
    "start": "183440",
    "end": "184000"
  },
  {
    "text": "to spot the exact problem pinpointed",
    "start": "184000",
    "end": "188159"
  },
  {
    "text": "and react quickly to it and this is one",
    "start": "188159",
    "end": "191280"
  },
  {
    "text": "of the things that lingerie",
    "start": "191280",
    "end": "193040"
  },
  {
    "text": "tries to",
    "start": "193040",
    "end": "195920"
  },
  {
    "text": "try to help you do and the way we do",
    "start": "196239",
    "end": "199280"
  },
  {
    "text": "that",
    "start": "199280",
    "end": "199680"
  },
  {
    "text": "is by injecting a proxy into",
    "start": "199680",
    "end": "202879"
  },
  {
    "text": "all of your mesh parts and this proxy",
    "start": "202879",
    "end": "205599"
  },
  {
    "text": "effectively its purpose is to intercept",
    "start": "205599",
    "end": "207920"
  },
  {
    "text": "the prop the traffic that goes in and",
    "start": "207920",
    "end": "210480"
  },
  {
    "text": "out of the pot",
    "start": "210480",
    "end": "211760"
  },
  {
    "text": "so instead of your usual traffic pattern",
    "start": "211760",
    "end": "214319"
  },
  {
    "text": "now your",
    "start": "214319",
    "end": "215040"
  },
  {
    "text": "traffic looks a bit like this everything",
    "start": "215040",
    "end": "217120"
  },
  {
    "text": "goes through the proxy",
    "start": "217120",
    "end": "218720"
  },
  {
    "text": "this proxy uh communicates with a set of",
    "start": "218720",
    "end": "223200"
  },
  {
    "text": "components that we collectively refer to",
    "start": "223200",
    "end": "225519"
  },
  {
    "text": "as the control plane",
    "start": "225519",
    "end": "227360"
  },
  {
    "text": "uh through through um",
    "start": "227360",
    "end": "230640"
  },
  {
    "text": "interface and that control plane runs",
    "start": "230640",
    "end": "233040"
  },
  {
    "text": "alongside",
    "start": "233040",
    "end": "233840"
  },
  {
    "text": "in in in its separate name space so",
    "start": "233840",
    "end": "237680"
  },
  {
    "text": "this control plane gives you a few",
    "start": "237680",
    "end": "240000"
  },
  {
    "start": "239000",
    "end": "239000"
  },
  {
    "text": "things it",
    "start": "240000",
    "end": "241040"
  },
  {
    "text": "provides tls certificates for the proxy",
    "start": "241040",
    "end": "243840"
  },
  {
    "text": "so now all of",
    "start": "243840",
    "end": "245120"
  },
  {
    "text": "the communication",
    "start": "245120",
    "end": "248159"
  },
  {
    "text": "between meshed pods in between proxies",
    "start": "248159",
    "end": "251200"
  },
  {
    "text": "is encrypted out of the box it gives you",
    "start": "251200",
    "end": "253760"
  },
  {
    "text": "service discovery utilizing dns",
    "start": "253760",
    "end": "256880"
  },
  {
    "text": "and native kubernetes primitives",
    "start": "256880",
    "end": "260799"
  },
  {
    "text": "it allows you to configure service",
    "start": "260799",
    "end": "262880"
  },
  {
    "text": "profiles",
    "start": "262880",
    "end": "264479"
  },
  {
    "text": "so now you can specify things like retry",
    "start": "264479",
    "end": "267919"
  },
  {
    "text": "and timeout rules",
    "start": "267919",
    "end": "268960"
  },
  {
    "text": "per service it supports automatic proxy",
    "start": "268960",
    "end": "271840"
  },
  {
    "text": "injection",
    "start": "271840",
    "end": "272880"
  },
  {
    "text": "and it also gives you a web dashboard",
    "start": "272880",
    "end": "275919"
  },
  {
    "text": "with a bunch of metrics",
    "start": "275919",
    "end": "277280"
  },
  {
    "text": "that allow you to look at the runtime",
    "start": "277280",
    "end": "279199"
  },
  {
    "text": "characteristics of your traffic",
    "start": "279199",
    "end": "281199"
  },
  {
    "text": "and it also exports a public api",
    "start": "281199",
    "end": "284800"
  },
  {
    "text": "that we use for a number of cli tools",
    "start": "284800",
    "end": "288639"
  },
  {
    "text": "that we ship with linker b",
    "start": "288639",
    "end": "291759"
  },
  {
    "text": "the proxy on the other side that we",
    "start": "291759",
    "end": "293840"
  },
  {
    "start": "292000",
    "end": "292000"
  },
  {
    "text": "refer to as the data plane",
    "start": "293840",
    "end": "295440"
  },
  {
    "text": "is ultralight's transparent one written",
    "start": "295440",
    "end": "298320"
  },
  {
    "text": "in rust specifically for link or d",
    "start": "298320",
    "end": "301120"
  },
  {
    "text": "and specifically for kubernetes and",
    "start": "301120",
    "end": "305840"
  },
  {
    "text": "it's um",
    "start": "305919",
    "end": "308639"
  },
  {
    "text": "it supports a few things so it exposes",
    "start": "308960",
    "end": "312639"
  },
  {
    "text": "an endpoint um that provides you",
    "start": "312639",
    "end": "315840"
  },
  {
    "text": "automatic prometheus metrics for http",
    "start": "315840",
    "end": "319360"
  },
  {
    "text": "and tcp",
    "start": "319360",
    "end": "320160"
  },
  {
    "text": "traffic so now your permittee",
    "start": "320160",
    "end": "321680"
  },
  {
    "text": "assistances can scrape",
    "start": "321680",
    "end": "323919"
  },
  {
    "text": "this endpoint and give you a bunch of",
    "start": "323919",
    "end": "325919"
  },
  {
    "text": "useful traffic",
    "start": "325919",
    "end": "327039"
  },
  {
    "text": "traffic information for all the traffic",
    "start": "327039",
    "end": "329840"
  },
  {
    "text": "that goes through the proxy",
    "start": "329840",
    "end": "331199"
  },
  {
    "text": "it provides latency aware layer 7 load",
    "start": "331199",
    "end": "334080"
  },
  {
    "text": "balancing",
    "start": "334080",
    "end": "335280"
  },
  {
    "text": "as well as automatic tls and an",
    "start": "335280",
    "end": "338160"
  },
  {
    "text": "on-demand",
    "start": "338160",
    "end": "338880"
  },
  {
    "text": "diagnostic tap api which uh purposes to",
    "start": "338880",
    "end": "342400"
  },
  {
    "text": "allow you to",
    "start": "342400",
    "end": "343680"
  },
  {
    "text": "look at life requests uh in the live",
    "start": "343680",
    "end": "346000"
  },
  {
    "text": "traffic that's going through your proxy",
    "start": "346000",
    "end": "348720"
  },
  {
    "text": "so it's probably normal to ask how does",
    "start": "348720",
    "end": "351280"
  },
  {
    "text": "that proxy actually end up in your parts",
    "start": "351280",
    "end": "354000"
  },
  {
    "start": "354000",
    "end": "354000"
  },
  {
    "text": "well that's done through something that",
    "start": "354000",
    "end": "355840"
  },
  {
    "text": "we refer to as injection",
    "start": "355840",
    "end": "357440"
  },
  {
    "text": "and it's in this process is usually",
    "start": "357440",
    "end": "359520"
  },
  {
    "text": "accomplished by the proxy injector",
    "start": "359520",
    "end": "361280"
  },
  {
    "text": "component which is part of the control",
    "start": "361280",
    "end": "363039"
  },
  {
    "text": "plane but it can also be done manually",
    "start": "363039",
    "end": "365919"
  },
  {
    "text": "so",
    "start": "365919",
    "end": "366400"
  },
  {
    "text": "um this actually puts two containers in",
    "start": "366400",
    "end": "368800"
  },
  {
    "text": "your pots",
    "start": "368800",
    "end": "369520"
  },
  {
    "text": "uh an init container and the proxy",
    "start": "369520",
    "end": "371520"
  },
  {
    "text": "container so this is best represented",
    "start": "371520",
    "end": "374160"
  },
  {
    "text": "with with the diagram so if you have",
    "start": "374160",
    "end": "376800"
  },
  {
    "text": "your",
    "start": "376800",
    "end": "378800"
  },
  {
    "text": "usual kubernetes is bought with an",
    "start": "378800",
    "end": "380479"
  },
  {
    "text": "application container and some traffic",
    "start": "380479",
    "end": "382560"
  },
  {
    "text": "going in and out of the pot what happens",
    "start": "382560",
    "end": "385360"
  },
  {
    "text": "upon injection is that",
    "start": "385360",
    "end": "386639"
  },
  {
    "text": "we add an init container and when that",
    "start": "386639",
    "end": "388720"
  },
  {
    "text": "runs it sets up a bunch of iptables",
    "start": "388720",
    "end": "391039"
  },
  {
    "text": "rules",
    "start": "391039",
    "end": "392240"
  },
  {
    "text": "that are responsible for routing traffic",
    "start": "392240",
    "end": "395840"
  },
  {
    "text": "to the pro for making the proxy",
    "start": "395840",
    "end": "398160"
  },
  {
    "text": "intercept all the traffic",
    "start": "398160",
    "end": "400160"
  },
  {
    "text": "and we also add the proxy so now all",
    "start": "400160",
    "end": "402960"
  },
  {
    "text": "your aiming",
    "start": "402960",
    "end": "403600"
  },
  {
    "text": "incoming traffic goes through the proxy",
    "start": "403600",
    "end": "405520"
  },
  {
    "text": "first and then to the application",
    "start": "405520",
    "end": "407759"
  },
  {
    "text": "container",
    "start": "407759",
    "end": "408639"
  },
  {
    "text": "and then um similarly all of your",
    "start": "408639",
    "end": "411759"
  },
  {
    "text": "outgoing traffic leaves the application",
    "start": "411759",
    "end": "414880"
  },
  {
    "text": "goes through the proxy",
    "start": "414880",
    "end": "416080"
  },
  {
    "text": "and then to where it's destined",
    "start": "416080",
    "end": "419280"
  },
  {
    "text": "so some of the core concepts of linker d",
    "start": "419280",
    "end": "423599"
  },
  {
    "text": "uh are observability uh which is",
    "start": "423599",
    "end": "426479"
  },
  {
    "text": "collecting actionable traffic metrics",
    "start": "426479",
    "end": "428639"
  },
  {
    "text": "allowing you to pinpoint problems and",
    "start": "428639",
    "end": "431280"
  },
  {
    "text": "understand",
    "start": "431280",
    "end": "432240"
  },
  {
    "text": "um the dynamics of your traffic security",
    "start": "432240",
    "end": "435919"
  },
  {
    "text": "encrypting",
    "start": "435919",
    "end": "436720"
  },
  {
    "text": "traffic between services automatically",
    "start": "436720",
    "end": "440240"
  },
  {
    "text": "reliability as well as traffic",
    "start": "440240",
    "end": "442319"
  },
  {
    "text": "management so you can",
    "start": "442319",
    "end": "443840"
  },
  {
    "text": "use advanced patterns like traffic",
    "start": "443840",
    "end": "446000"
  },
  {
    "text": "splitting and",
    "start": "446000",
    "end": "447120"
  },
  {
    "text": "and all sorts of things",
    "start": "447120",
    "end": "450880"
  },
  {
    "text": "and when we were um thinking about with",
    "start": "450880",
    "end": "454319"
  },
  {
    "text": "multi-cluster we were wondering how can",
    "start": "454319",
    "end": "457039"
  },
  {
    "text": "we",
    "start": "457039",
    "end": "457759"
  },
  {
    "text": "um have these guarantees",
    "start": "457759",
    "end": "461199"
  },
  {
    "text": "and expand them to span",
    "start": "461199",
    "end": "464639"
  },
  {
    "text": "across clusters and first of all maybe",
    "start": "464639",
    "end": "467360"
  },
  {
    "text": "it's",
    "start": "467360",
    "end": "467919"
  },
  {
    "text": "worth asking why multiple clusters well",
    "start": "467919",
    "end": "470720"
  },
  {
    "text": "there is a number of use cases but",
    "start": "470720",
    "end": "472879"
  },
  {
    "start": "471000",
    "end": "471000"
  },
  {
    "text": "but they mostly come down to",
    "start": "472879",
    "end": "476160"
  },
  {
    "text": "traffic migration across clusters so",
    "start": "476160",
    "end": "478639"
  },
  {
    "text": "this",
    "start": "478639",
    "end": "479199"
  },
  {
    "text": "this includes calorie deployments um",
    "start": "479199",
    "end": "482240"
  },
  {
    "text": "different environments that allow you",
    "start": "482240",
    "end": "484879"
  },
  {
    "text": "that allow your developers for example",
    "start": "484879",
    "end": "487120"
  },
  {
    "text": "to",
    "start": "487120",
    "end": "489360"
  },
  {
    "text": "split traffic across the development and",
    "start": "489520",
    "end": "492080"
  },
  {
    "text": "production environment",
    "start": "492080",
    "end": "493199"
  },
  {
    "text": "and use the production components um",
    "start": "493199",
    "end": "496720"
  },
  {
    "text": "while developing locally as well as",
    "start": "496720",
    "end": "499599"
  },
  {
    "text": "failover",
    "start": "499599",
    "end": "500319"
  },
  {
    "text": "so a lot of people actually do a",
    "start": "500319",
    "end": "503199"
  },
  {
    "text": "failover across",
    "start": "503199",
    "end": "504560"
  },
  {
    "text": "clusters in different availability zones",
    "start": "504560",
    "end": "508319"
  },
  {
    "text": "and that sort of thing so we",
    "start": "508319",
    "end": "511759"
  },
  {
    "text": "tried to build upon the link or d",
    "start": "511759",
    "end": "513599"
  },
  {
    "text": "concepts and um",
    "start": "513599",
    "end": "515360"
  },
  {
    "text": "have our multi-cluster implementation be",
    "start": "515360",
    "end": "517680"
  },
  {
    "text": "governed",
    "start": "517680",
    "end": "518479"
  },
  {
    "text": "by by other core concepts that expand",
    "start": "518479",
    "end": "522959"
  },
  {
    "start": "519000",
    "end": "519000"
  },
  {
    "text": "upon",
    "start": "522959",
    "end": "523360"
  },
  {
    "text": "the linkery ones so our implementation",
    "start": "523360",
    "end": "526000"
  },
  {
    "text": "is secure",
    "start": "526000",
    "end": "527040"
  },
  {
    "text": "everything happens over pls even traffic",
    "start": "527040",
    "end": "529440"
  },
  {
    "text": "across clusters",
    "start": "529440",
    "end": "530800"
  },
  {
    "text": "it's kubernetes first so remote services",
    "start": "530800",
    "end": "534399"
  },
  {
    "text": "appear as kubernetes services uh there",
    "start": "534399",
    "end": "537279"
  },
  {
    "text": "is no special kind of service",
    "start": "537279",
    "end": "539680"
  },
  {
    "text": "there is no single point of failure so",
    "start": "539680",
    "end": "541760"
  },
  {
    "text": "no cluster in this cluster mesh",
    "start": "541760",
    "end": "544080"
  },
  {
    "text": "is blessed or magical in any way if a",
    "start": "544080",
    "end": "546880"
  },
  {
    "text": "cluster",
    "start": "546880",
    "end": "547600"
  },
  {
    "text": "goes down then that doesn't affect the",
    "start": "547600",
    "end": "549680"
  },
  {
    "text": "rest of the clusters",
    "start": "549680",
    "end": "551600"
  },
  {
    "text": "this implementation is transparent so",
    "start": "551600",
    "end": "553680"
  },
  {
    "text": "applications don't need to know",
    "start": "553680",
    "end": "555920"
  },
  {
    "text": "whether a service is remote or local",
    "start": "555920",
    "end": "560560"
  },
  {
    "text": "and uh of course this implementation is",
    "start": "560560",
    "end": "562800"
  },
  {
    "text": "also network independent so as long as",
    "start": "562800",
    "end": "564880"
  },
  {
    "text": "you have connectivity",
    "start": "564880",
    "end": "566399"
  },
  {
    "text": "between clusters then the underlying",
    "start": "566399",
    "end": "569519"
  },
  {
    "text": "network hierarchy",
    "start": "569519",
    "end": "570640"
  },
  {
    "text": "doesn't doesn't actually matter at all",
    "start": "570640",
    "end": "574880"
  },
  {
    "text": "so if we have to look at the",
    "start": "574880",
    "end": "576160"
  },
  {
    "text": "architecture of this solution",
    "start": "576160",
    "end": "578640"
  },
  {
    "start": "578000",
    "end": "578000"
  },
  {
    "text": "it uh looks like this if we have a",
    "start": "578640",
    "end": "581040"
  },
  {
    "text": "cluster east and cluster west and we're",
    "start": "581040",
    "end": "583120"
  },
  {
    "text": "going to look at",
    "start": "583120",
    "end": "584080"
  },
  {
    "text": "the demo in a bit that's going to show",
    "start": "584080",
    "end": "587200"
  },
  {
    "text": "this exact situation",
    "start": "587200",
    "end": "589040"
  },
  {
    "text": "um these two clusters need to have",
    "start": "589040",
    "end": "591680"
  },
  {
    "text": "linkard installed",
    "start": "591680",
    "end": "592880"
  },
  {
    "text": "and it's important to know that linkerd",
    "start": "592880",
    "end": "595519"
  },
  {
    "text": "needs to be installed with",
    "start": "595519",
    "end": "596959"
  },
  {
    "text": "a trustroot that um",
    "start": "596959",
    "end": "599640"
  },
  {
    "text": "[Music]",
    "start": "599640",
    "end": "601600"
  },
  {
    "text": "with trust routes that's um",
    "start": "601600",
    "end": "604800"
  },
  {
    "text": "that is shared so this enables um",
    "start": "604800",
    "end": "609040"
  },
  {
    "text": "automatic tls across across",
    "start": "609040",
    "end": "612079"
  },
  {
    "text": "clusters and then you have the linker d",
    "start": "612079",
    "end": "614480"
  },
  {
    "text": "multi-cluster components which consist",
    "start": "614480",
    "end": "616240"
  },
  {
    "text": "of the service mirror the gateway",
    "start": "616240",
    "end": "618800"
  },
  {
    "text": "and cluster credentials and then you",
    "start": "618800",
    "end": "622000"
  },
  {
    "text": "have",
    "start": "622000",
    "end": "622320"
  },
  {
    "text": "your local services that might have pots",
    "start": "622320",
    "end": "624880"
  },
  {
    "text": "or other",
    "start": "624880",
    "end": "626480"
  },
  {
    "text": "pots behind them and then you have the",
    "start": "626480",
    "end": "628959"
  },
  {
    "text": "remote services that are effective",
    "start": "628959",
    "end": "630880"
  },
  {
    "text": "proxies for services that live on the",
    "start": "630880",
    "end": "633519"
  },
  {
    "text": "target cluster",
    "start": "633519",
    "end": "635360"
  },
  {
    "text": "so the service mirror controller is",
    "start": "635360",
    "end": "638079"
  },
  {
    "text": "actually responsible for monitoring the",
    "start": "638079",
    "end": "640160"
  },
  {
    "text": "export",
    "start": "640160",
    "end": "640880"
  },
  {
    "text": "state of the target cluster and",
    "start": "640880",
    "end": "643279"
  },
  {
    "text": "replicating it",
    "start": "643279",
    "end": "644480"
  },
  {
    "text": "this is uh done through using the clango",
    "start": "644480",
    "end": "648079"
  },
  {
    "text": "and kubernetes informers in order to",
    "start": "648079",
    "end": "650399"
  },
  {
    "text": "continuously monitor the state of the",
    "start": "650399",
    "end": "652160"
  },
  {
    "text": "services on the on the",
    "start": "652160",
    "end": "654160"
  },
  {
    "text": "on the target cluster then we have the",
    "start": "654160",
    "end": "656399"
  },
  {
    "text": "gateway component which is responsible",
    "start": "656399",
    "end": "658480"
  },
  {
    "text": "that",
    "start": "658480",
    "end": "658800"
  },
  {
    "text": "that usually lives on the target cluster",
    "start": "658800",
    "end": "660959"
  },
  {
    "text": "and is responsible for",
    "start": "660959",
    "end": "662880"
  },
  {
    "text": "routing requests that come in and",
    "start": "662880",
    "end": "666240"
  },
  {
    "text": "you know effectively taking requests on",
    "start": "666240",
    "end": "668640"
  },
  {
    "text": "one port",
    "start": "668640",
    "end": "669360"
  },
  {
    "text": "and routing them to the correct um",
    "start": "669360",
    "end": "672079"
  },
  {
    "text": "service to the correct internal service",
    "start": "672079",
    "end": "674800"
  },
  {
    "text": "and then you have credentials and these",
    "start": "674800",
    "end": "676800"
  },
  {
    "text": "credentials consist of two pieces",
    "start": "676800",
    "end": "678880"
  },
  {
    "text": "so you have the service account that",
    "start": "678880",
    "end": "680959"
  },
  {
    "text": "lives on the target cluster",
    "start": "680959",
    "end": "682720"
  },
  {
    "text": "which allows you to monitor",
    "start": "682720",
    "end": "685920"
  },
  {
    "text": "um which allows you to inspect services",
    "start": "685920",
    "end": "689120"
  },
  {
    "text": "get lists and watch services and you",
    "start": "689120",
    "end": "692000"
  },
  {
    "text": "have the secret",
    "start": "692000",
    "end": "693440"
  },
  {
    "text": "uh kubernetes secret containing",
    "start": "693440",
    "end": "697040"
  },
  {
    "text": "uh kubernetes api config and this lives",
    "start": "697040",
    "end": "699920"
  },
  {
    "text": "on the source cluster and is used by the",
    "start": "699920",
    "end": "701760"
  },
  {
    "text": "service mirror console controller",
    "start": "701760",
    "end": "703760"
  },
  {
    "text": "in order to initiate an api connection",
    "start": "703760",
    "end": "706240"
  },
  {
    "text": "to the target cluster and",
    "start": "706240",
    "end": "707920"
  },
  {
    "text": "be able to spawn up spin up the",
    "start": "707920",
    "end": "709600"
  },
  {
    "text": "informers",
    "start": "709600",
    "end": "711120"
  },
  {
    "text": "so with all that said now it's time for",
    "start": "711120",
    "end": "714880"
  },
  {
    "text": "demo so in this demo we're going to have",
    "start": "714880",
    "end": "718480"
  },
  {
    "start": "716000",
    "end": "716000"
  },
  {
    "text": "two clusters",
    "start": "718480",
    "end": "719360"
  },
  {
    "text": "east and west and each of these cluster",
    "start": "719360",
    "end": "722639"
  },
  {
    "text": "heads",
    "start": "722639",
    "end": "723279"
  },
  {
    "text": "has back-end service",
    "start": "723279",
    "end": "726959"
  },
  {
    "text": "installed and a test client that lives",
    "start": "726959",
    "end": "730399"
  },
  {
    "text": "on cluster east that we're going to use",
    "start": "730399",
    "end": "732639"
  },
  {
    "text": "to uh",
    "start": "732639",
    "end": "733519"
  },
  {
    "text": "fire requests and what we want is to be",
    "start": "733519",
    "end": "737279"
  },
  {
    "text": "able to",
    "start": "737279",
    "end": "738000"
  },
  {
    "text": "spin uh split the traffic to back-end",
    "start": "738000",
    "end": "741600"
  },
  {
    "text": "service between",
    "start": "741600",
    "end": "742720"
  },
  {
    "text": "east and west",
    "start": "742720",
    "end": "745839"
  },
  {
    "text": "so let's actually look at the terminal",
    "start": "747200",
    "end": "749760"
  },
  {
    "text": "here",
    "start": "749760",
    "end": "752000"
  },
  {
    "text": "so as i said you have cluster east",
    "start": "754639",
    "end": "758000"
  },
  {
    "text": "that has a back-end service and cluster",
    "start": "758000",
    "end": "761680"
  },
  {
    "text": "west",
    "start": "761680",
    "end": "762959"
  },
  {
    "text": "that has a back-end service too so",
    "start": "762959",
    "end": "766000"
  },
  {
    "text": "now what we want to do is we want",
    "start": "766000",
    "end": "769440"
  },
  {
    "text": "to install the linker d multi-cluster",
    "start": "769440",
    "end": "772880"
  },
  {
    "text": "components on both",
    "start": "772880",
    "end": "774639"
  },
  {
    "text": "cluster east",
    "start": "774639",
    "end": "777519"
  },
  {
    "text": "and cluster west",
    "start": "777680",
    "end": "787839"
  },
  {
    "text": "so now that this is done",
    "start": "795279",
    "end": "798839"
  },
  {
    "text": "um",
    "start": "798839",
    "end": "801839"
  },
  {
    "text": "we can see that the uh linker the",
    "start": "803680",
    "end": "806320"
  },
  {
    "text": "gateway and the service mirror",
    "start": "806320",
    "end": "807680"
  },
  {
    "text": "controller",
    "start": "807680",
    "end": "809519"
  },
  {
    "text": "is um they're both running well",
    "start": "809519",
    "end": "813279"
  },
  {
    "text": "the gateway is still not running but",
    "start": "813279",
    "end": "816720"
  },
  {
    "text": "same for cluster east",
    "start": "818560",
    "end": "821760"
  },
  {
    "text": "so right now we want to be",
    "start": "823680",
    "end": "826720"
  },
  {
    "text": "able to link these two clusters together",
    "start": "826720",
    "end": "831279"
  },
  {
    "text": "so what we are going to do is that we",
    "start": "831279",
    "end": "833519"
  },
  {
    "text": "are going to use the",
    "start": "833519",
    "end": "834320"
  },
  {
    "text": "multi-cluster link command to provide",
    "start": "834320",
    "end": "837120"
  },
  {
    "text": "credentials to cluster yeast",
    "start": "837120",
    "end": "839279"
  },
  {
    "text": "um and allow it to be able to monitor",
    "start": "839279",
    "end": "842000"
  },
  {
    "text": "the state",
    "start": "842000",
    "end": "842959"
  },
  {
    "text": "of cluster west and we're going to do",
    "start": "842959",
    "end": "845360"
  },
  {
    "text": "that through the link or the uh through",
    "start": "845360",
    "end": "847120"
  },
  {
    "text": "the",
    "start": "847120",
    "end": "847519"
  },
  {
    "text": "multi-cluster link command so now the",
    "start": "847519",
    "end": "851279"
  },
  {
    "text": "secret was the secret containing",
    "start": "851279",
    "end": "853760"
  },
  {
    "text": "credentials was created",
    "start": "853760",
    "end": "855279"
  },
  {
    "text": "in cluster east",
    "start": "855279",
    "end": "858240"
  },
  {
    "text": "the other thing we need to do is to",
    "start": "858480",
    "end": "861120"
  },
  {
    "text": "export",
    "start": "861120",
    "end": "862160"
  },
  {
    "text": "this the backend service from cluster",
    "start": "862160",
    "end": "864480"
  },
  {
    "text": "west and make it available",
    "start": "864480",
    "end": "866079"
  },
  {
    "text": "on customer east and we're going to do",
    "start": "866079",
    "end": "867760"
  },
  {
    "text": "that through the um",
    "start": "867760",
    "end": "870560"
  },
  {
    "text": "export service command and this is this",
    "start": "870560",
    "end": "873199"
  },
  {
    "text": "this service command",
    "start": "873199",
    "end": "874160"
  },
  {
    "text": "this export service command pretty much",
    "start": "874160",
    "end": "876000"
  },
  {
    "text": "adds some uh",
    "start": "876000",
    "end": "877519"
  },
  {
    "text": "annotations and some metadata to your",
    "start": "877519",
    "end": "879920"
  },
  {
    "text": "service yaml",
    "start": "879920",
    "end": "881519"
  },
  {
    "text": "and um informs the um",
    "start": "881519",
    "end": "885120"
  },
  {
    "text": "the service mirror that this services is",
    "start": "885120",
    "end": "888000"
  },
  {
    "text": "can be exported",
    "start": "888000",
    "end": "890060"
  },
  {
    "text": "[Music]",
    "start": "890060",
    "end": "891920"
  },
  {
    "text": "so now that we have that um what we can",
    "start": "891920",
    "end": "895440"
  },
  {
    "text": "do",
    "start": "895440",
    "end": "895760"
  },
  {
    "text": "is uh take a look at the services on",
    "start": "895760",
    "end": "899600"
  },
  {
    "text": "cluster",
    "start": "899600",
    "end": "900800"
  },
  {
    "text": "east again",
    "start": "900800",
    "end": "904000"
  },
  {
    "text": "and now you can see that apart from the",
    "start": "904000",
    "end": "906160"
  },
  {
    "text": "local back-end service we have a",
    "start": "906160",
    "end": "908079"
  },
  {
    "text": "back-end service",
    "start": "908079",
    "end": "910079"
  },
  {
    "text": "dash west and this is a service that is",
    "start": "910079",
    "end": "913199"
  },
  {
    "text": "um that is effectively",
    "start": "913199",
    "end": "916480"
  },
  {
    "text": "um just a proxy service and all the",
    "start": "916480",
    "end": "918639"
  },
  {
    "text": "traffic that goes through it's gonna be",
    "start": "918639",
    "end": "920079"
  },
  {
    "text": "routed to the service and the pods that",
    "start": "920079",
    "end": "921920"
  },
  {
    "text": "live",
    "start": "921920",
    "end": "922320"
  },
  {
    "text": "on cluster west so",
    "start": "922320",
    "end": "925600"
  },
  {
    "text": "now we can use the gateways",
    "start": "925600",
    "end": "929040"
  },
  {
    "text": "command",
    "start": "929040",
    "end": "931600"
  },
  {
    "text": "in order to see all the gateways that",
    "start": "932240",
    "end": "935600"
  },
  {
    "text": "are",
    "start": "935600",
    "end": "935920"
  },
  {
    "text": "available on uh for to cluster east",
    "start": "935920",
    "end": "939440"
  },
  {
    "text": "so you can see that there is a lingerie",
    "start": "939440",
    "end": "942560"
  },
  {
    "text": "gateway",
    "start": "942560",
    "end": "943600"
  },
  {
    "text": "for cluster west that is available on",
    "start": "943600",
    "end": "946240"
  },
  {
    "text": "cluster",
    "start": "946240",
    "end": "946880"
  },
  {
    "text": "east and there is a one mirrored",
    "start": "946880",
    "end": "949440"
  },
  {
    "text": "services",
    "start": "949440",
    "end": "951120"
  },
  {
    "text": "and the latency to this gateway and",
    "start": "951120",
    "end": "953199"
  },
  {
    "text": "there are some stats",
    "start": "953199",
    "end": "954240"
  },
  {
    "text": "about the latency so what can we do now",
    "start": "954240",
    "end": "957040"
  },
  {
    "text": "well",
    "start": "957040",
    "end": "959279"
  },
  {
    "text": "we can use our",
    "start": "959440",
    "end": "963600"
  },
  {
    "text": "pot here",
    "start": "963600",
    "end": "969839"
  },
  {
    "text": "and in fact be able to hit both services",
    "start": "971920",
    "end": "977600"
  },
  {
    "text": "so we have a response from cluster west",
    "start": "978959",
    "end": "983920"
  },
  {
    "text": "and we have a response for from",
    "start": "983920",
    "end": "987120"
  },
  {
    "text": "cluster east as well which is local now",
    "start": "987120",
    "end": "989759"
  },
  {
    "text": "the interesting",
    "start": "989759",
    "end": "990800"
  },
  {
    "text": "part is that we can actually traffic",
    "start": "990800",
    "end": "992959"
  },
  {
    "text": "split between",
    "start": "992959",
    "end": "994320"
  },
  {
    "text": "these two services between these two",
    "start": "994320",
    "end": "996000"
  },
  {
    "text": "clusters right",
    "start": "996000",
    "end": "997440"
  },
  {
    "text": "so we have this traffic split",
    "start": "997440",
    "end": "1001040"
  },
  {
    "text": "resource here that",
    "start": "1001040",
    "end": "1004560"
  },
  {
    "text": "specifies to leave services",
    "start": "1004560",
    "end": "1008399"
  },
  {
    "text": "and the traffic will be equally split",
    "start": "1008399",
    "end": "1010320"
  },
  {
    "text": "between between these two",
    "start": "1010320",
    "end": "1012639"
  },
  {
    "text": "so once we apply it and",
    "start": "1012639",
    "end": "1015920"
  },
  {
    "text": "we um get into our",
    "start": "1015920",
    "end": "1019360"
  },
  {
    "text": "pot again now we can run",
    "start": "1019360",
    "end": "1022839"
  },
  {
    "text": "a",
    "start": "1022839",
    "end": "1025839"
  },
  {
    "text": "a curl command that's um curls",
    "start": "1026880",
    "end": "1029918"
  },
  {
    "text": "back-end service and what's going to",
    "start": "1029919",
    "end": "1032720"
  },
  {
    "text": "happen is that",
    "start": "1032720",
    "end": "1034000"
  },
  {
    "text": "the traffic is going to be split between",
    "start": "1034000",
    "end": "1036558"
  },
  {
    "text": "between east and west and you can see",
    "start": "1036559",
    "end": "1038319"
  },
  {
    "text": "that this is happening",
    "start": "1038319",
    "end": "1039600"
  },
  {
    "text": "because we get different responses",
    "start": "1039600",
    "end": "1042798"
  },
  {
    "text": "and what's also interesting to observe",
    "start": "1042799",
    "end": "1045520"
  },
  {
    "text": "is that",
    "start": "1045520",
    "end": "1048000"
  },
  {
    "text": "we can actually",
    "start": "1048640",
    "end": "1052480"
  },
  {
    "text": "we can actually look uh use the link or",
    "start": "1052480",
    "end": "1054400"
  },
  {
    "text": "dcli to",
    "start": "1054400",
    "end": "1055520"
  },
  {
    "text": "look at our traffic splits and see that",
    "start": "1055520",
    "end": "1058080"
  },
  {
    "text": "our back-end service has two leaves",
    "start": "1058080",
    "end": "1060320"
  },
  {
    "text": "the back-end service which is local and",
    "start": "1060320",
    "end": "1062880"
  },
  {
    "text": "the back-end service switches on cluster",
    "start": "1062880",
    "end": "1064880"
  },
  {
    "text": "west",
    "start": "1064880",
    "end": "1065360"
  },
  {
    "text": "and the success rate is 100 for both of",
    "start": "1065360",
    "end": "1067919"
  },
  {
    "text": "them",
    "start": "1067919",
    "end": "1068640"
  },
  {
    "text": "but what's interesting to observe is",
    "start": "1068640",
    "end": "1070240"
  },
  {
    "text": "that the latency is quite different",
    "start": "1070240",
    "end": "1072080"
  },
  {
    "text": "right",
    "start": "1072080",
    "end": "1072559"
  },
  {
    "text": "so it's normal because one of our",
    "start": "1072559",
    "end": "1074240"
  },
  {
    "text": "services is local",
    "start": "1074240",
    "end": "1076080"
  },
  {
    "text": "while the other one is uh in fact",
    "start": "1076080",
    "end": "1079760"
  },
  {
    "text": "a remote one so",
    "start": "1079760",
    "end": "1084320"
  },
  {
    "text": "you might wonder how is that actually",
    "start": "1084320",
    "end": "1086880"
  },
  {
    "text": "happening so how does that",
    "start": "1086880",
    "end": "1088160"
  },
  {
    "text": "how does that actually work well",
    "start": "1088160",
    "end": "1091440"
  },
  {
    "text": "if we go back to our presentation",
    "start": "1091440",
    "end": "1096639"
  },
  {
    "text": "yeah there is there is um",
    "start": "1096880",
    "end": "1100640"
  },
  {
    "text": "let's actually look at a uh the life of",
    "start": "1100640",
    "end": "1103919"
  },
  {
    "text": "this curve request as it goes across",
    "start": "1103919",
    "end": "1105760"
  },
  {
    "text": "clusters",
    "start": "1105760",
    "end": "1106480"
  },
  {
    "text": "well we have our client port right and",
    "start": "1106480",
    "end": "1109120"
  },
  {
    "text": "this clan",
    "start": "1109120",
    "end": "1109840"
  },
  {
    "text": "pot uh fires",
    "start": "1109840",
    "end": "1113520"
  },
  {
    "text": "uh it lives on cluster east and fires um",
    "start": "1113520",
    "end": "1117039"
  },
  {
    "start": "1116000",
    "end": "1116000"
  },
  {
    "text": "http requests to backend service that",
    "start": "1117039",
    "end": "1120400"
  },
  {
    "text": "for the purpose of this of this request",
    "start": "1120400",
    "end": "1123039"
  },
  {
    "text": "let's say that this gets traffic split",
    "start": "1123039",
    "end": "1124880"
  },
  {
    "text": "and goes to",
    "start": "1124880",
    "end": "1126000"
  },
  {
    "text": "cluster west so once that happens",
    "start": "1126000",
    "end": "1129600"
  },
  {
    "text": "once this request leaves the pot it's",
    "start": "1129600",
    "end": "1132400"
  },
  {
    "text": "going to back in service west which is",
    "start": "1132400",
    "end": "1134240"
  },
  {
    "text": "the",
    "start": "1134240",
    "end": "1134640"
  },
  {
    "text": "service proxy that lives on our cluster",
    "start": "1134640",
    "end": "1137760"
  },
  {
    "text": "now we do um this this",
    "start": "1137760",
    "end": "1141520"
  },
  {
    "text": "back-end service has an endpoint",
    "start": "1141520",
    "end": "1144160"
  },
  {
    "text": "associated with it",
    "start": "1144160",
    "end": "1145280"
  },
  {
    "text": "that is uh that specifies the public ip",
    "start": "1145280",
    "end": "1149039"
  },
  {
    "text": "and port of the gateway on cluster west",
    "start": "1149039",
    "end": "1152559"
  },
  {
    "text": "and because this request goes through",
    "start": "1152559",
    "end": "1155120"
  },
  {
    "text": "the proxy",
    "start": "1155120",
    "end": "1156160"
  },
  {
    "text": "we can be a bit smarter about what we do",
    "start": "1156160",
    "end": "1159919"
  },
  {
    "text": "with it",
    "start": "1159919",
    "end": "1160400"
  },
  {
    "text": "so once this request hits the proxy the",
    "start": "1160400",
    "end": "1162960"
  },
  {
    "text": "proxy uses the lingerie destination",
    "start": "1162960",
    "end": "1165120"
  },
  {
    "text": "component which is",
    "start": "1165120",
    "end": "1166799"
  },
  {
    "text": "um part of the control plane and issues",
    "start": "1166799",
    "end": "1170080"
  },
  {
    "text": "a discovery query to it now the link rd",
    "start": "1170080",
    "end": "1172480"
  },
  {
    "text": "destination",
    "start": "1172480",
    "end": "1173679"
  },
  {
    "text": "a service knows that this is um this is",
    "start": "1173679",
    "end": "1176080"
  },
  {
    "text": "a proxy service",
    "start": "1176080",
    "end": "1177200"
  },
  {
    "text": "so it's going to return some useful",
    "start": "1177200",
    "end": "1179919"
  },
  {
    "text": "information",
    "start": "1179919",
    "end": "1180720"
  },
  {
    "text": "namely that's the fully qualified domain",
    "start": "1180720",
    "end": "1183840"
  },
  {
    "text": "name",
    "start": "1183840",
    "end": "1184559"
  },
  {
    "text": "of the service on the target cluster",
    "start": "1184559",
    "end": "1186400"
  },
  {
    "text": "because it might be different",
    "start": "1186400",
    "end": "1188240"
  },
  {
    "text": "um you know you might have different",
    "start": "1188240",
    "end": "1189760"
  },
  {
    "text": "cluster domains for example so",
    "start": "1189760",
    "end": "1192400"
  },
  {
    "text": "when um that happens it's also going to",
    "start": "1192400",
    "end": "1196000"
  },
  {
    "text": "return you uh the expected identity that",
    "start": "1196000",
    "end": "1199280"
  },
  {
    "text": "um for the gateway so you need to",
    "start": "1199280",
    "end": "1202640"
  },
  {
    "text": "hit the gateway endpoint on the other",
    "start": "1202640",
    "end": "1204799"
  },
  {
    "text": "side with the right tls identity in",
    "start": "1204799",
    "end": "1207039"
  },
  {
    "text": "order to",
    "start": "1207039",
    "end": "1207760"
  },
  {
    "text": "in order to establish uh mtls",
    "start": "1207760",
    "end": "1210960"
  },
  {
    "text": "so once that happens this request the",
    "start": "1210960",
    "end": "1213760"
  },
  {
    "text": "uri",
    "start": "1213760",
    "end": "1214240"
  },
  {
    "text": "the proxy rewrites the uri authority",
    "start": "1214240",
    "end": "1216400"
  },
  {
    "text": "with the correct",
    "start": "1216400",
    "end": "1217440"
  },
  {
    "text": "port and um and and fully qualified",
    "start": "1217440",
    "end": "1221280"
  },
  {
    "text": "domain name",
    "start": "1221280",
    "end": "1222880"
  },
  {
    "text": "and when this request leaves the pot",
    "start": "1222880",
    "end": "1226159"
  },
  {
    "text": "or the the cluster in fact it hits",
    "start": "1226159",
    "end": "1230000"
  },
  {
    "text": "the external ip of the gateway on the",
    "start": "1230000",
    "end": "1233919"
  },
  {
    "text": "other",
    "start": "1233919",
    "end": "1234799"
  },
  {
    "text": "on the other cluster on cluster west and",
    "start": "1234799",
    "end": "1237600"
  },
  {
    "text": "this",
    "start": "1237600",
    "end": "1238000"
  },
  {
    "text": "gateway now knows which port",
    "start": "1238000",
    "end": "1241919"
  },
  {
    "text": "because the uri authority is rewritten",
    "start": "1241919",
    "end": "1244559"
  },
  {
    "text": "this gateway knows which port and which",
    "start": "1244559",
    "end": "1247360"
  },
  {
    "text": "service this request is destined for",
    "start": "1247360",
    "end": "1250960"
  },
  {
    "text": "so it sends it there it roots it to the",
    "start": "1250960",
    "end": "1254080"
  },
  {
    "text": "correct service",
    "start": "1254080",
    "end": "1255520"
  },
  {
    "text": "and it's important to um",
    "start": "1255520",
    "end": "1258640"
  },
  {
    "text": "because to understand that because there",
    "start": "1258640",
    "end": "1261760"
  },
  {
    "text": "is",
    "start": "1261760",
    "end": "1262320"
  },
  {
    "text": "there are proxies running in each box",
    "start": "1262320",
    "end": "1264799"
  },
  {
    "text": "that's involved in this communication",
    "start": "1264799",
    "end": "1266400"
  },
  {
    "text": "pattern",
    "start": "1266400",
    "end": "1267120"
  },
  {
    "text": "uh all of this traffic is encrypted even",
    "start": "1267120",
    "end": "1269120"
  },
  {
    "text": "traffic that's",
    "start": "1269120",
    "end": "1270480"
  },
  {
    "text": "that that's going across the clusters",
    "start": "1270480",
    "end": "1273840"
  },
  {
    "text": "so this is how it pretty much works",
    "start": "1273840",
    "end": "1276080"
  },
  {
    "text": "under the hood",
    "start": "1276080",
    "end": "1278720"
  },
  {
    "text": "and um some of the future work that",
    "start": "1278960",
    "end": "1281520"
  },
  {
    "text": "we're planning to do",
    "start": "1281520",
    "end": "1282799"
  },
  {
    "text": "on this particular feature is that we've",
    "start": "1282799",
    "end": "1285520"
  },
  {
    "start": "1283000",
    "end": "1283000"
  },
  {
    "text": "realized",
    "start": "1285520",
    "end": "1286240"
  },
  {
    "text": "that the service mirror controller",
    "start": "1286240",
    "end": "1290320"
  },
  {
    "text": "uh because it can monitor multiple",
    "start": "1290320",
    "end": "1292080"
  },
  {
    "text": "clusters can get a bit complicated",
    "start": "1292080",
    "end": "1294559"
  },
  {
    "text": "so um what we decided to do is to split",
    "start": "1294559",
    "end": "1297679"
  },
  {
    "text": "this controller and have one controller",
    "start": "1297679",
    "end": "1300559"
  },
  {
    "text": "for target cluster",
    "start": "1300559",
    "end": "1302080"
  },
  {
    "text": "and hopefully that makes uh things a bit",
    "start": "1302080",
    "end": "1304320"
  },
  {
    "text": "easier",
    "start": "1304320",
    "end": "1305200"
  },
  {
    "text": "for debugging and reduces the cognitive",
    "start": "1305200",
    "end": "1307919"
  },
  {
    "text": "luggage that one needs to carry when",
    "start": "1307919",
    "end": "1309840"
  },
  {
    "text": "dealing with multiple clusters",
    "start": "1309840",
    "end": "1312320"
  },
  {
    "text": "we are also going to introduce a crd to",
    "start": "1312320",
    "end": "1314559"
  },
  {
    "text": "better represent",
    "start": "1314559",
    "end": "1315919"
  },
  {
    "text": "the target cluster information because",
    "start": "1315919",
    "end": "1318080"
  },
  {
    "text": "currently",
    "start": "1318080",
    "end": "1319440"
  },
  {
    "text": "it's represented through a bunch of",
    "start": "1319440",
    "end": "1321200"
  },
  {
    "text": "annotations on both services",
    "start": "1321200",
    "end": "1323360"
  },
  {
    "text": "and kubernetes secrets now we're going",
    "start": "1323360",
    "end": "1325760"
  },
  {
    "text": "to consolidate that and use the crd",
    "start": "1325760",
    "end": "1328960"
  },
  {
    "text": "we are also going to support traffic",
    "start": "1328960",
    "end": "1330640"
  },
  {
    "text": "policy and final grain permission",
    "start": "1330640",
    "end": "1332559"
  },
  {
    "text": "control",
    "start": "1332559",
    "end": "1333840"
  },
  {
    "text": "and uh one thing that we are currently",
    "start": "1333840",
    "end": "1335679"
  },
  {
    "text": "working on is support",
    "start": "1335679",
    "end": "1337120"
  },
  {
    "text": "for pcp traffic so currently that",
    "start": "1337120",
    "end": "1339120"
  },
  {
    "text": "solution works with",
    "start": "1339120",
    "end": "1340240"
  },
  {
    "text": "um http traffic and we want",
    "start": "1340240",
    "end": "1343440"
  },
  {
    "text": "to be able to support um",
    "start": "1343440",
    "end": "1347280"
  },
  {
    "text": "justice arbitration speed traffic so we",
    "start": "1347280",
    "end": "1350320"
  },
  {
    "text": "that's part of a bigger pile of work",
    "start": "1350320",
    "end": "1351919"
  },
  {
    "text": "that we are currently um that we're",
    "start": "1351919",
    "end": "1353760"
  },
  {
    "text": "currently focusing on but we have a",
    "start": "1353760",
    "end": "1355520"
  },
  {
    "text": "clear",
    "start": "1355520",
    "end": "1356159"
  },
  {
    "text": "idea of how that's going to be",
    "start": "1356159",
    "end": "1357280"
  },
  {
    "text": "accomplished so",
    "start": "1357280",
    "end": "1359440"
  },
  {
    "text": "it's just a matter of time so with that",
    "start": "1359440",
    "end": "1362240"
  },
  {
    "text": "being",
    "start": "1362240",
    "end": "1362960"
  },
  {
    "text": "with all that being said um now there is",
    "start": "1362960",
    "end": "1366080"
  },
  {
    "text": "some time for q a uh there is",
    "start": "1366080",
    "end": "1369679"
  },
  {
    "text": "also a link here that",
    "start": "1369679",
    "end": "1373760"
  },
  {
    "text": "a github repo where you can find this",
    "start": "1373760",
    "end": "1376000"
  },
  {
    "text": "talk the slides for this talk with all",
    "start": "1376000",
    "end": "1378159"
  },
  {
    "text": "the resources",
    "start": "1378159",
    "end": "1379440"
  },
  {
    "text": "that um you can use in order to",
    "start": "1379440",
    "end": "1382960"
  },
  {
    "text": "experiment with all that yourself so",
    "start": "1382960",
    "end": "1389840"
  },
  {
    "text": "so hi there i'm happy to answer any",
    "start": "1391679",
    "end": "1394000"
  },
  {
    "text": "questions",
    "start": "1394000",
    "end": "1396159"
  },
  {
    "text": "uh yeah hey zahari you can you can take",
    "start": "1396159",
    "end": "1399200"
  },
  {
    "text": "a look at the q a zone",
    "start": "1399200",
    "end": "1401440"
  },
  {
    "text": "in zoom and then just take a pick up",
    "start": "1401440",
    "end": "1404159"
  },
  {
    "text": "whatever questions you want",
    "start": "1404159",
    "end": "1405600"
  },
  {
    "text": "thanks yeah sure um",
    "start": "1405600",
    "end": "1409440"
  },
  {
    "text": "so the first question is is does",
    "start": "1409440",
    "end": "1412080"
  },
  {
    "text": "multi-cluster support grpc",
    "start": "1412080",
    "end": "1414159"
  },
  {
    "text": "and yes it does it's it does support",
    "start": "1414159",
    "end": "1417280"
  },
  {
    "text": "your pc so you can use jpc across",
    "start": "1417280",
    "end": "1421679"
  },
  {
    "text": "clusters",
    "start": "1428840",
    "end": "1431840"
  },
  {
    "text": "uh we have three questions right now can",
    "start": "1441840",
    "end": "1444960"
  },
  {
    "text": "you see them all",
    "start": "1444960",
    "end": "1445840"
  },
  {
    "text": "or um i can see two questions",
    "start": "1445840",
    "end": "1449360"
  },
  {
    "text": "okay yeah just go ahead so yeah the",
    "start": "1449360",
    "end": "1452000"
  },
  {
    "text": "other question is",
    "start": "1452000",
    "end": "1453120"
  },
  {
    "text": "istio has been very popular how did",
    "start": "1453120",
    "end": "1455679"
  },
  {
    "text": "others typically choose to use",
    "start": "1455679",
    "end": "1458000"
  },
  {
    "text": "linkedin instead of seo well",
    "start": "1458000",
    "end": "1461039"
  },
  {
    "text": "like i'm not particularly",
    "start": "1461039",
    "end": "1464320"
  },
  {
    "text": "yeah i i don't really know how why other",
    "start": "1464320",
    "end": "1467760"
  },
  {
    "text": "people are considering",
    "start": "1467760",
    "end": "1469200"
  },
  {
    "text": "linker d instead of ice steel um",
    "start": "1469200",
    "end": "1472960"
  },
  {
    "text": "or how they are using it differently",
    "start": "1472960",
    "end": "1474880"
  },
  {
    "text": "because",
    "start": "1474880",
    "end": "1476720"
  },
  {
    "text": "yeah i don't really directly work with a",
    "start": "1476720",
    "end": "1478640"
  },
  {
    "text": "lot of people but",
    "start": "1478640",
    "end": "1480320"
  },
  {
    "text": "um i would say lingerie is quite simple",
    "start": "1480320",
    "end": "1483760"
  },
  {
    "text": "and it's in its ux and getting things",
    "start": "1483760",
    "end": "1486960"
  },
  {
    "text": "off the ground is really simple so maybe",
    "start": "1486960",
    "end": "1488880"
  },
  {
    "text": "that's something that",
    "start": "1488880",
    "end": "1490799"
  },
  {
    "text": "is kind of attracting people",
    "start": "1490799",
    "end": "1501840"
  },
  {
    "text": "so yeah there's another question that",
    "start": "1506400",
    "end": "1508240"
  },
  {
    "text": "the data plane of linkedin is written in",
    "start": "1508240",
    "end": "1510159"
  },
  {
    "text": "rust",
    "start": "1510159",
    "end": "1510960"
  },
  {
    "text": "with all the benefits of it but could",
    "start": "1510960",
    "end": "1514240"
  },
  {
    "text": "this be a reason",
    "start": "1514240",
    "end": "1515279"
  },
  {
    "text": "that people who don't have internal rust",
    "start": "1515279",
    "end": "1518480"
  },
  {
    "text": "developers avoid linker d i i don't",
    "start": "1518480",
    "end": "1521919"
  },
  {
    "text": "think",
    "start": "1521919",
    "end": "1522240"
  },
  {
    "text": "that this could actually be a reason",
    "start": "1522240",
    "end": "1524400"
  },
  {
    "text": "because or",
    "start": "1524400",
    "end": "1525840"
  },
  {
    "text": "rather i don't think it should be a",
    "start": "1525840",
    "end": "1527120"
  },
  {
    "text": "reason because the proxy is",
    "start": "1527120",
    "end": "1529120"
  },
  {
    "text": "fairly transparent so and because linker",
    "start": "1529120",
    "end": "1532240"
  },
  {
    "text": "is",
    "start": "1532240",
    "end": "1533279"
  },
  {
    "text": "like very configuration light you don't",
    "start": "1533279",
    "end": "1535600"
  },
  {
    "text": "really need",
    "start": "1535600",
    "end": "1536320"
  },
  {
    "text": "to know a lot about the internal",
    "start": "1536320",
    "end": "1537679"
  },
  {
    "text": "workings of the proxy",
    "start": "1537679",
    "end": "1539440"
  },
  {
    "text": "or um you know all rust for that matter",
    "start": "1539440",
    "end": "1542720"
  },
  {
    "text": "in order to be",
    "start": "1542720",
    "end": "1543840"
  },
  {
    "text": "using clinker d to its full potential so",
    "start": "1543840",
    "end": "1546159"
  },
  {
    "text": "yeah i don't i don't think that's",
    "start": "1546159",
    "end": "1548559"
  },
  {
    "text": "that should be a decisive factor",
    "start": "1548559",
    "end": "1557840"
  },
  {
    "text": "um if we update link d version",
    "start": "1558159",
    "end": "1561520"
  },
  {
    "text": "in multi cluster will it cause any",
    "start": "1561520",
    "end": "1564320"
  },
  {
    "text": "downtime to current workload",
    "start": "1564320",
    "end": "1566400"
  },
  {
    "text": "um no i don't think it should",
    "start": "1566400",
    "end": "1569520"
  },
  {
    "text": "um technically i don't think it should",
    "start": "1569520",
    "end": "1571440"
  },
  {
    "text": "it it's all about",
    "start": "1571440",
    "end": "1573120"
  },
  {
    "text": "you know it's all about service proxies",
    "start": "1573120",
    "end": "1575360"
  },
  {
    "text": "so the great",
    "start": "1575360",
    "end": "1576320"
  },
  {
    "text": "path at the moment is something that we",
    "start": "1576320",
    "end": "1578000"
  },
  {
    "text": "are actually working on because",
    "start": "1578000",
    "end": "1579600"
  },
  {
    "text": "there are some other changes that we are",
    "start": "1579600",
    "end": "1581919"
  },
  {
    "text": "incorporating in",
    "start": "1581919",
    "end": "1583520"
  },
  {
    "text": "in the link or demulti cluster solution",
    "start": "1583520",
    "end": "1585760"
  },
  {
    "text": "but",
    "start": "1585760",
    "end": "1586720"
  },
  {
    "text": "i think at the end of the day it should",
    "start": "1586720",
    "end": "1588559"
  },
  {
    "text": "be quite quite",
    "start": "1588559",
    "end": "1591600"
  },
  {
    "text": "smooth",
    "start": "1596840",
    "end": "1599840"
  },
  {
    "text": "what's the most advantage for linkrd",
    "start": "1606400",
    "end": "1608159"
  },
  {
    "text": "compared to istio",
    "start": "1608159",
    "end": "1609760"
  },
  {
    "text": "i don't think i have the user experience",
    "start": "1609760",
    "end": "1612960"
  },
  {
    "text": "to answer that question",
    "start": "1612960",
    "end": "1614559"
  },
  {
    "text": "and i think that could be different for",
    "start": "1614559",
    "end": "1618080"
  },
  {
    "text": "for different users so like i i can't",
    "start": "1618080",
    "end": "1621360"
  },
  {
    "text": "really",
    "start": "1621360",
    "end": "1622000"
  },
  {
    "text": "i can't really comment on that",
    "start": "1622000",
    "end": "1627840"
  },
  {
    "text": "okay really great talk",
    "start": "1636559",
    "end": "1640000"
  },
  {
    "text": "from zahari thank you thank you",
    "start": "1640000",
    "end": "1643520"
  },
  {
    "text": "thank you thanks for having me",
    "start": "1643520",
    "end": "1648240"
  }
]