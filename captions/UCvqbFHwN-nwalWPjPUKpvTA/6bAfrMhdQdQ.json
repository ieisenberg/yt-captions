[
  {
    "text": "uh well thank you so much for being a quick show of hands uh who is using who has heard about Captain before",
    "start": "920",
    "end": "8160"
  },
  {
    "text": "who is using Captain right now who wants to use Captain because they're intrigued by it awesome uh who is visit",
    "start": "8160",
    "end": "15719"
  },
  {
    "text": "us at the booth or talk with us awesome does anyone have no idea what Captain is",
    "start": "15719",
    "end": "22439"
  },
  {
    "text": "or does cool thanks for coming yay I think you're all",
    "start": "22439",
    "end": "27960"
  },
  {
    "text": "you're all in the right spot right because we we give you a little overview of where we where we are where we where",
    "start": "27960",
    "end": "34620"
  },
  {
    "text": "we have been where we are and where we're going and you see four people uh",
    "start": "34620",
    "end": "41219"
  },
  {
    "text": "on the slide bread was supposed to present as well unfortunately he had to leave a little earlier going back to New",
    "start": "41219",
    "end": "46800"
  },
  {
    "text": "Zealand so he couldn't make it but if you want to follow up with him because he's very active in the community we put",
    "start": "46800",
    "end": "54000"
  },
  {
    "text": "the Twitter handle there as well so you can follow up or just join the Slick Channel and then talk to him",
    "start": "54000",
    "end": "60780"
  },
  {
    "text": "um who are we who are you I am a staff developer Advocate at",
    "start": "60780",
    "end": "67740"
  },
  {
    "text": "lightstep my main focus has been reliability work for the last six years I'm a self-taught developer turned SRE",
    "start": "67740",
    "end": "75299"
  },
  {
    "text": "turn devrel and that will all come full circle when we talk a little bit more who are you I'm Andy Andy grabner I'm",
    "start": "75299",
    "end": "83280"
  },
  {
    "text": "working as a I call myself a devops activist at dynatrace devox activist",
    "start": "83280",
    "end": "88860"
  },
  {
    "text": "means I just try to help people in using observability data because I work for an",
    "start": "88860",
    "end": "94500"
  },
  {
    "text": "obscibility company just like you which is also a great sign that we are two kind of competitors but we're all",
    "start": "94500",
    "end": "99659"
  },
  {
    "text": "working together and help the community to become better in their delivery practices in the restory practices and",
    "start": "99659",
    "end": "104939"
  },
  {
    "text": "this is what I do on a day-to-day basis trying to tell people what we can do with these tools whether it's",
    "start": "104939",
    "end": "110100"
  },
  {
    "text": "observability platforms or open source and that leaves us with you Thomas yes",
    "start": "110100",
    "end": "115140"
  },
  {
    "text": "so my name is I'm a principal engineer dynatrist and I think I'm the only one at the stage who contributes code to",
    "start": "115140",
    "end": "121380"
  },
  {
    "text": "Captain so I'm a captain maintainer um yes and I was a platform and systems engineer for about the last two decades",
    "start": "121380",
    "end": "127799"
  },
  {
    "text": "and I'm trying to get all of my experience into Captain to um make the world a bit a bit of a",
    "start": "127799",
    "end": "134760"
  },
  {
    "text": "better place awesome so um maybe I think you want to kick it off a little bit on on why we",
    "start": "134760",
    "end": "141959"
  },
  {
    "text": "are actually here why we are where we are yeah so I mentioned I come from the",
    "start": "141959",
    "end": "147540"
  },
  {
    "text": "world of reliability I spent a year and a half at Uber doing a story work",
    "start": "147540",
    "end": "152580"
  },
  {
    "text": "specifically uh chaos engineering and helping Uber move from bare metal to Cloud infrastructure it was really",
    "start": "152580",
    "end": "159239"
  },
  {
    "text": "knowledgeable stuff then spent four years at Gremlin doing Chaos engineering and during that time I got a chance to",
    "start": "159239",
    "end": "165660"
  },
  {
    "text": "meet Andy and Andy was like hey SRE like amazing Hot Topic the",
    "start": "165660",
    "end": "172620"
  },
  {
    "text": "Google srebook had come out in 2016 2017. folks are starting to learn more",
    "start": "172620",
    "end": "178319"
  },
  {
    "text": "about oh our systems are getting a lot more complex and it takes a lot to keep these up and running as a lot of you",
    "start": "178319",
    "end": "185160"
  },
  {
    "text": "possibly have known and how is it that we can do better what are things that we",
    "start": "185160",
    "end": "190800"
  },
  {
    "text": "can automate where is the industry going and what that takes us to is when we",
    "start": "190800",
    "end": "196860"
  },
  {
    "text": "think about reliability we look at our SRE teams our SRE teams end up doing so",
    "start": "196860",
    "end": "203280"
  },
  {
    "text": "many duties and SRE is also going to look very different in every single organization depending on the scale of",
    "start": "203280",
    "end": "210720"
  },
  {
    "text": "your applications how many users and customers you have but we can see that they're in charge of managing data",
    "start": "210720",
    "end": "217140"
  },
  {
    "text": "centers Cloud infrastructure making sure that they're building tooling for deployments to go out properly making",
    "start": "217140",
    "end": "223319"
  },
  {
    "text": "sure that there is an incident response system that every single system or",
    "start": "223319",
    "end": "229140"
  },
  {
    "text": "service has actually Engineers on call that they're practicing how to do on-call practices all the way to being",
    "start": "229140",
    "end": "236159"
  },
  {
    "text": "like how can I embrace modern Technologies and push forward using chaos engineering observability to make",
    "start": "236159",
    "end": "243780"
  },
  {
    "text": "sure that the failures that we're having today don't affect us the next week the",
    "start": "243780",
    "end": "249840"
  },
  {
    "text": "next quarter or next Black Friday and we also see that we are learning from",
    "start": "249840",
    "end": "256079"
  },
  {
    "text": "companies that have been doing this for a while so we got to use more metrics",
    "start": "256079",
    "end": "261359"
  },
  {
    "text": "that tie into reliability like service level indicators agreements objectives",
    "start": "261359",
    "end": "267360"
  },
  {
    "text": "and with that we get to think of like how can we make it better and Captain",
    "start": "267360",
    "end": "272460"
  },
  {
    "text": "takes that into account we think about let's look at all those duties that I",
    "start": "272460",
    "end": "277740"
  },
  {
    "text": "just showed you how do we automate them how do we standardize them how can we make sure that we're still thinking",
    "start": "277740",
    "end": "283979"
  },
  {
    "text": "about experimentation in terms of leveraging a lot of the other tooling internally or other cncf projects",
    "start": "283979",
    "end": "292820"
  },
  {
    "text": "and with Captain what we're trying to do is that we're trying to bring reliability closer to every single",
    "start": "294120",
    "end": "300720"
  },
  {
    "text": "developer how is it that they can know that they can actually deploy an application because there's this their",
    "start": "300720",
    "end": "307320"
  },
  {
    "text": "infrastructure is ready or how is it that they can know that as they're deploying their services is not just",
    "start": "307320",
    "end": "314040"
  },
  {
    "text": "they deployed it and Cube cuddle says that the pods are up and running but that users are actually able to have a",
    "start": "314040",
    "end": "320639"
  },
  {
    "text": "good experience and that ties into some of the work that Thomas is going to talk about next too",
    "start": "320639",
    "end": "328220"
  },
  {
    "text": "what have we been learning about folks that are using Captain well we've been learning a lot about folks that have",
    "start": "328560",
    "end": "333840"
  },
  {
    "text": "been using captain and what I really like about so in my role as I mentioned in the beginning I'm an advocate I",
    "start": "333840",
    "end": "339660"
  },
  {
    "text": "really try to help people adopt this type of Technology right we want to provide tools to really ensure that your",
    "start": "339660",
    "end": "345720"
  },
  {
    "text": "systems stay reliable and resilient and you mentioned that I mean slos is a big",
    "start": "345720",
    "end": "351240"
  },
  {
    "text": "topic everything that Google has been talking about in their SRE handbook and in the workbook has anybody reads the S3",
    "start": "351240",
    "end": "357600"
  },
  {
    "text": "is anybody familiar with the SUV practices yeah so I think what I think is interesting with Captain what we try",
    "start": "357600",
    "end": "363840"
  },
  {
    "text": "to solve is we try to make sure that your systems stay reliable or are reliable before you deploy into an",
    "start": "363840",
    "end": "370199"
  },
  {
    "text": "environment can I get shifting left we want to we actually use slos before we deploy into an environment because you",
    "start": "370199",
    "end": "376380"
  },
  {
    "text": "don't want to deploy it into an environment that is not ready and after you deploy it just as you say we want to make sure that not the pots are up and",
    "start": "376380",
    "end": "382620"
  },
  {
    "text": "running but everything is good so at the core of Captain we have to come we've applied some of the practices from the",
    "start": "382620",
    "end": "388199"
  },
  {
    "text": "side availability engineering book and tarash made a really nice comment Tara she's one of the performance engineers",
    "start": "388199",
    "end": "394440"
  },
  {
    "text": "at Facebook he invited us to present at his performance Summit two years ago and",
    "start": "394440",
    "end": "400139"
  },
  {
    "text": "he said Captain feels like a reference implementation of Google's SRE engineering and site reliability",
    "start": "400139",
    "end": "405720"
  },
  {
    "text": "workbook so I think that's a great testimonial from an expert out there what else have you learned over the last",
    "start": "405720",
    "end": "412620"
  },
  {
    "text": "three years so Captain was in well it was born in 2019 three years ago",
    "start": "412620",
    "end": "418740"
  },
  {
    "text": "actually January so it's almost going to be four years and there's a couple of use cases that we've seen people adopt",
    "start": "418740",
    "end": "425460"
  },
  {
    "text": "captain for the most common one is automated release validation this is an example here from rifles and software",
    "start": "425460",
    "end": "431280"
  },
  {
    "text": "it's the software organization that builds all of the online banking software in Austria and also for other",
    "start": "431280",
    "end": "437520"
  },
  {
    "text": "parts of Europe and they are integrating Captain into the Jenkins pipeline so after it gets deployed Captain",
    "start": "437520",
    "end": "443699"
  },
  {
    "text": "automatically validates their slis and slos by pulling the data from the observability platform so automated",
    "start": "443699",
    "end": "450120"
  },
  {
    "text": "release radiation is really big the next one is end-to-end delivery this is an example from sap",
    "start": "450120",
    "end": "455419"
  },
  {
    "text": "they have initially used Spinnaker for their Canary rollouts and they switched",
    "start": "455419",
    "end": "463380"
  },
  {
    "text": "to Captain letting Captain basically do all of the continuous delivery rollout and making the decisions against based",
    "start": "463380",
    "end": "469860"
  },
  {
    "text": "on is lows on when is a good time to roll out the next batch of canaries and",
    "start": "469860",
    "end": "475680"
  },
  {
    "text": "as you can see here saving 80 percent with the 80 percent he actually meant two things speed in terms of deployment",
    "start": "475680",
    "end": "481319"
  },
  {
    "text": "but also reduction of the configuration that is necessary uh last use case that we also see",
    "start": "481319",
    "end": "487440"
  },
  {
    "text": "adopted all the remediation this is from PNG Procter Gamble they were in the",
    "start": "487440",
    "end": "492539"
  },
  {
    "text": "initial phases and were using Captain to react on a problem in production and then having Captain automatically",
    "start": "492539",
    "end": "498840"
  },
  {
    "text": "execute remediation actions if you want to read more about this all of these three use cases we have a YouTube video",
    "start": "498840",
    "end": "505199"
  },
  {
    "text": "on the captain YouTube channel for rifa as an sap and PNG so you can see you",
    "start": "505199",
    "end": "511560"
  },
  {
    "text": "know it's widely adopted now the other thing though is we got a lot of questions over the last",
    "start": "511560",
    "end": "517800"
  },
  {
    "text": "years and I see some of you in the room that we some of you came to us some of you actually gave us some really honest",
    "start": "517800",
    "end": "523320"
  },
  {
    "text": "feedback because if you look at Captain the first time you say so that means your new deployment tool",
    "start": "523320",
    "end": "528839"
  },
  {
    "text": "that means you're competing with Argo you're competing with Spinnaker is that what you do 10 people say so you're monitoring tool",
    "start": "528839",
    "end": "535620"
  },
  {
    "text": "because you're looking at slos is that what you do or are you an auto remediation tool are you",
    "start": "535620",
    "end": "541620"
  },
  {
    "text": "an SLO tool because you're doing a solos so you're a testing tool because you also execute tests or well you also",
    "start": "541620",
    "end": "548640"
  },
  {
    "text": "workflow engine because you can do all these things so we got a lot of questions because I think we really went off into many different areas and we",
    "start": "548640",
    "end": "555240"
  },
  {
    "text": "built something that can be used for all of these things but remember we started",
    "start": "555240",
    "end": "561060"
  },
  {
    "text": "with all of this 2019 the world 2019 looked a little bit different I think in 2022 at least most of the",
    "start": "561060",
    "end": "568080"
  },
  {
    "text": "people we talk to they're using Argo CD or Flex for the deployment they are much better suited for that they have Argo",
    "start": "568080",
    "end": "574440"
  },
  {
    "text": "rollouts for Canary deployments you don't need Captain for that all right that's great observability platforms we have open Telemetry with",
    "start": "574440",
    "end": "581040"
  },
  {
    "text": "Prometheus we have light step we have Diana Trace these are all great observability tools so we don't need",
    "start": "581040",
    "end": "586500"
  },
  {
    "text": "to think that Captain is an observability tool so there's a lot of questions and that also meant we had to focus and and",
    "start": "586500",
    "end": "593580"
  },
  {
    "text": "before I go over to what we focused on in theory really what we try to do with",
    "start": "593580",
    "end": "598620"
  },
  {
    "text": "Captain from the beginning is to put slos at the center so you can see it here we really try it and this is still",
    "start": "598620",
    "end": "604860"
  },
  {
    "text": "what we what we aim for putting the SLO the the core principle of site reliability engineering at the center",
    "start": "604860",
    "end": "610860"
  },
  {
    "text": "getting the data from any of your observability platforms whatever it is",
    "start": "610860",
    "end": "616440"
  },
  {
    "text": "and then really connecting to the tools that actually didn't do a certain job like your article can deploy your k6 can",
    "start": "616440",
    "end": "624480"
  },
  {
    "text": "test your light step is doing the observability right so that was the that",
    "start": "624480",
    "end": "630060"
  },
  {
    "text": "was the AIM now before I hand it over to Thomas what we learned and also in conversations with you in Valencia when",
    "start": "630060",
    "end": "637380"
  },
  {
    "text": "we were early this year but especially this week we learned that 90 of the users that are",
    "start": "637380",
    "end": "643620"
  },
  {
    "text": "adopting Captain they're doing it because they really love the SLO validation uh what they're really asking",
    "start": "643620",
    "end": "649200"
  },
  {
    "text": "for is the majority says hey I would like the slos to be easier integrated as pre and post deployment checks because I",
    "start": "649200",
    "end": "657240"
  },
  {
    "text": "don't want to deploy into an environment that is currently broken and I don't want to break an environment with my",
    "start": "657240",
    "end": "662700"
  },
  {
    "text": "deployment the second thing we learned we have built a lot of Integrations even though",
    "start": "662700",
    "end": "668220"
  },
  {
    "text": "we standardized on a protocol or on a um on a format we had to build a lot of",
    "start": "668220",
    "end": "674279"
  },
  {
    "text": "Captain Services however most of them have been built but are not well",
    "start": "674279",
    "end": "679320"
  },
  {
    "text": "maintained because most of the people are really tending to go back to the core use case which is I use my other",
    "start": "679320",
    "end": "687480"
  },
  {
    "text": "tools for deployment I don't need Captain to do my deployment so please give me a better integration into the",
    "start": "687480",
    "end": "693720"
  },
  {
    "text": "existing way how I do things I want to use Argo I want to use flux for deployment but then I want Captain to",
    "start": "693720",
    "end": "699120"
  },
  {
    "text": "seamlessly do the SLO validation without me having to maintain yet another integration",
    "start": "699120",
    "end": "705240"
  },
  {
    "text": "and I think this is what we learned and Thomas this is what actually brought us to where we're sailing next",
    "start": "705240",
    "end": "711779"
  },
  {
    "text": "yes thank you Andrew in the time we have developed Captain we",
    "start": "711779",
    "end": "718500"
  },
  {
    "text": "developed a lot of possibilities to extend other tools into captain so we had we had around three",
    "start": "718500",
    "end": "726959"
  },
  {
    "text": "integration options one was dedicated Captain Services which was a bit heavyweight because everyone who wanted",
    "start": "726959",
    "end": "733320"
  },
  {
    "text": "to integrate the tour had to create an uncapped service to achieve this the",
    "start": "733320",
    "end": "738899"
  },
  {
    "text": "second one was that we created our own Runner called the job executor which",
    "start": "738899",
    "end": "744120"
  },
  {
    "text": "made everything a bit easier but also not um also was not the perfect approach",
    "start": "744120",
    "end": "750480"
  },
  {
    "text": "for doing this and last but not least we had our webhooks where you could trigger",
    "start": "750480",
    "end": "756240"
  },
  {
    "text": "external Tools in a very easy way um but we also found some problems and",
    "start": "756240",
    "end": "762240"
  },
  {
    "text": "while I was working on Captain the last I think one and a half to two years",
    "start": "762240",
    "end": "767579"
  },
  {
    "text": "um I always tried to get gitups into captain and I had a very hard time with",
    "start": "767579",
    "end": "772740"
  },
  {
    "text": "this so um integrating heat up in pipelines can be really challenging and",
    "start": "772740",
    "end": "779519"
  },
  {
    "text": "yes for um in Captain we found nice approaches but what none of them was really perfect",
    "start": "779519",
    "end": "787500"
  },
  {
    "text": "the second thing we we faced and this was the thing which only already told us we had a hard time maintaining",
    "start": "787500",
    "end": "794300"
  },
  {
    "text": "maintaining our Integrations so we have we built a lot of Integrations",
    "start": "794300",
    "end": "801120"
  },
  {
    "text": "um you can integrate almost everything with a job executor but none of them",
    "start": "801120",
    "end": "806339"
  },
  {
    "text": "um was really really nicely maintained so I think from the from the Integrations we had five to six from",
    "start": "806339",
    "end": "812459"
  },
  {
    "text": "maintained right and last but not least um we were an event-based manner system",
    "start": "812459",
    "end": "819260"
  },
  {
    "text": "and we had our control plane and every tour which has been used needed a",
    "start": "819260",
    "end": "826320"
  },
  {
    "text": "subscription on our control plane and the management of the subscriptions was also kind of challenging",
    "start": "826320",
    "end": "833100"
  },
  {
    "text": "so we decided to go on A New Path and what we found out in the last three",
    "start": "833100",
    "end": "839160"
  },
  {
    "text": "years and I think every one of you agrees is that kubernetes is the leading platform for our Cloud native apps so I",
    "start": "839160",
    "end": "846000"
  },
  {
    "text": "think a few thousand people are here at the conference I think this is to prove that um kubernetes is the Easter",
    "start": "846000",
    "end": "853800"
  },
  {
    "text": "platform for this the second thing is that gitops is the dominant approach to deliver these apps so we need to find a",
    "start": "853800",
    "end": "862800"
  },
  {
    "text": "way how to get continuous delivery on the on the platform instead of having a",
    "start": "862800",
    "end": "869459"
  },
  {
    "text": "whole lot of tools therefore we try to standardize task",
    "start": "869459",
    "end": "874980"
  },
  {
    "text": "definitions evaluations and application life cycles using captain",
    "start": "874980",
    "end": "881040"
  },
  {
    "text": "so we want to get all of these things into the into the cluster we don't want",
    "start": "881040",
    "end": "887100"
  },
  {
    "text": "to be out so sorry we want to be abandoned neutral and if anyone should be able to",
    "start": "887100",
    "end": "894240"
  },
  {
    "text": "integrate in a very easy way and last but not least and this is the thing I mentioned before Captain shift",
    "start": "894240",
    "end": "901560"
  },
  {
    "text": "your delivery process to the platform in a cloud native way and pipeline lists",
    "start": "901560",
    "end": "909380"
  },
  {
    "text": "with this um we created a new captain sub project which was called which is",
    "start": "909420",
    "end": "916019"
  },
  {
    "text": "called the captain life cycle controller and this ensures that your application",
    "start": "916019",
    "end": "921360"
  },
  {
    "text": "deployment stable and observable so these are also is also the reason why some",
    "start": "921360",
    "end": "927000"
  },
  {
    "text": "observability companies are involved in the project",
    "start": "927000",
    "end": "932420"
  },
  {
    "text": "um we wanted to do this with a minimum of configuration effort so",
    "start": "933000",
    "end": "938519"
  },
  {
    "text": "if you take a look on the repository and if you look uh take a look in the configuration of the lifecycle",
    "start": "938519",
    "end": "944040"
  },
  {
    "text": "controller you will find out that we tried to avoid creating new customary",
    "start": "944040",
    "end": "949800"
  },
  {
    "text": "custom resource definitions as long as possible some some things did not exist in",
    "start": "949800",
    "end": "955440"
  },
  {
    "text": "kubernetes therefore we had to invent something but",
    "start": "955440",
    "end": "961199"
  },
  {
    "text": "um in fact we are trying to to utilize the resources available in kubernetes as",
    "start": "961199",
    "end": "966959"
  },
  {
    "text": "far as possible furthermore um githubs for us is no feature it is a",
    "start": "966959",
    "end": "973500"
  },
  {
    "text": "requirement therefore um everything we are building is totally",
    "start": "973500",
    "end": "980699"
  },
  {
    "text": "um working with key tops it doesn't it um",
    "start": "980699",
    "end": "987480"
  },
  {
    "text": "it works with all of the all of the principles of key tops and we are trying",
    "start": "987480",
    "end": "993420"
  },
  {
    "text": "to make the delivery pipeline list um external tools and control planes",
    "start": "993420",
    "end": "999660"
  },
  {
    "text": "should be easily um easy to integrate so we created some kind of custom resources",
    "start": "999660",
    "end": "1006199"
  },
  {
    "text": "for our for our Integrations where you can specify your tasks either inline you",
    "start": "1006199",
    "end": "1012259"
  },
  {
    "text": "can use them from a from a web server or whatever but I think this is done in a very",
    "start": "1012259",
    "end": "1019339"
  },
  {
    "text": "intuitive way and very easy for each for each of the in the um integrators",
    "start": "1019339",
    "end": "1025938"
  },
  {
    "text": "you get deep insights in your deployment process as we will see for armful and further consequence so you see it every",
    "start": "1025939",
    "end": "1033558"
  },
  {
    "text": "at every point in time where your deployment stays at the moment how",
    "start": "1033559",
    "end": "1038900"
  },
  {
    "text": "successful it was how mature will your process will be and where you can evolve",
    "start": "1038900",
    "end": "1045558"
  },
  {
    "text": "your deployment process and last but not least you get Cloud",
    "start": "1045559",
    "end": "1051200"
  },
  {
    "text": "native and application aware control over your deployments",
    "start": "1051200",
    "end": "1057020"
  },
  {
    "text": "okay so um how do we achieve this",
    "start": "1057020",
    "end": "1061720"
  },
  {
    "text": "um at first we are extending kubernetes with application lifecycle awareness so",
    "start": "1062179",
    "end": "1068419"
  },
  {
    "text": "if you think about humanitas kubernetes mainly knows about deployments stateful",
    "start": "1068419",
    "end": "1073520"
  },
  {
    "text": "sets demon sets and whatever but there is at the moment at least at",
    "start": "1073520",
    "end": "1078740"
  },
  {
    "text": "the moment no concept of an application in kubernetes so you can not bundle multiple workloads into one",
    "start": "1078740",
    "end": "1086780"
  },
  {
    "text": "application this was one thing which um where we tried to",
    "start": "1086780",
    "end": "1092480"
  },
  {
    "text": "um extend kubernetes in further consequence for us it's not",
    "start": "1092480",
    "end": "1097640"
  },
  {
    "text": "really relevant which deployment tool you are using so you can use argosity you can use flux you can use gitlab and",
    "start": "1097640",
    "end": "1105679"
  },
  {
    "text": "all of the tools you like um in fact all of them",
    "start": "1105679",
    "end": "1111620"
  },
  {
    "text": "tune nothing more than applying anything as something to kilometers and this is",
    "start": "1111620",
    "end": "1116840"
  },
  {
    "text": "where our work begins so after you deploy something to kubernetes and when you define an application we are doing",
    "start": "1116840",
    "end": "1124760"
  },
  {
    "text": "application pre-deployment checks or tasks and evaluations therefore you",
    "start": "1124760",
    "end": "1130940"
  },
  {
    "text": "could check for instance if you have enough infrastructure to get the application running",
    "start": "1130940",
    "end": "1137179"
  },
  {
    "text": "um at the booth I showed an example where I",
    "start": "1137179",
    "end": "1142400"
  },
  {
    "text": "tried to test if there is enough if there are enough processors left to get",
    "start": "1142400",
    "end": "1147860"
  },
  {
    "text": "this application running um in further consequence after all of this",
    "start": "1147860",
    "end": "1154520"
  },
  {
    "text": "app pre-deployment tasks and evaluations have succeeded we can do the same thing",
    "start": "1154520",
    "end": "1160340"
  },
  {
    "text": "on the workload level for us the workload is something like a deployment stateful set and so on",
    "start": "1160340",
    "end": "1167720"
  },
  {
    "text": "um this runs per workload after after that so after all of the pre-deployment",
    "start": "1167720",
    "end": "1173480"
  },
  {
    "text": "tasks have finished um we can let you kubernetes its work",
    "start": "1173480",
    "end": "1178760"
  },
  {
    "text": "and schedule the port and after the port has been deployed deployed and is running we can do the",
    "start": "1178760",
    "end": "1185419"
  },
  {
    "text": "same thing with post deployment tasks um also on a workout level but on an",
    "start": "1185419",
    "end": "1192080"
  },
  {
    "text": "application Level too furthermore our lifecycle controller is",
    "start": "1192080",
    "end": "1197860"
  },
  {
    "text": "they want tasks with simple simple scripts so everything you do here such",
    "start": "1197860",
    "end": "1203480"
  },
  {
    "text": "as checking for infrastructure Readiness validating error budgets or for post",
    "start": "1203480",
    "end": "1208760"
  },
  {
    "text": "deployment things running tests and evaluated slos can be done in a way which the most of",
    "start": "1208760",
    "end": "1215539"
  },
  {
    "text": "us understand so in a you can write simple typescript functions in the future this might also be running a",
    "start": "1215539",
    "end": "1222260"
  },
  {
    "text": "container or if we um if if needed you can also attach",
    "start": "1222260",
    "end": "1227299"
  },
  {
    "text": "attach custom runtimes and last but not least you always get",
    "start": "1227299",
    "end": "1232700"
  },
  {
    "text": "the full life cycle of stability and um you can make deployments Observer via",
    "start": "1232700",
    "end": "1240260"
  },
  {
    "text": "open Telemetry in a vendor neutral way therefore the only thing to integrate",
    "start": "1240260",
    "end": "1245720"
  },
  {
    "text": "your observability tool as long as it's compatible to open Telemetry is you have to configure the open telemetic open",
    "start": "1245720",
    "end": "1253160"
  },
  {
    "text": "telemetric collector in a proper way but you don't have to make some make changes",
    "start": "1253160",
    "end": "1259220"
  },
  {
    "text": "in the lifecycle controller or in your tooling and you get some fancy dashboards out of",
    "start": "1259220",
    "end": "1265100"
  },
  {
    "text": "the box which I will come pick later to later it's almost one quick question because I",
    "start": "1265100",
    "end": "1271340"
  },
  {
    "text": "heard you give this demo several times at the booth today people always ask technically how does this quickly work",
    "start": "1271340",
    "end": "1277760"
  },
  {
    "text": "for people that I want to understand how we actually inject ourselves into it so technically we are looking in your",
    "start": "1277760",
    "end": "1287059"
  },
  {
    "text": "deployment objects stateful set objects if there are some annotations on the objects such as",
    "start": "1287059",
    "end": "1294039"
  },
  {
    "text": "once once redefined and we are also listening on kubernetes recommended",
    "start": "1294039",
    "end": "1299960"
  },
  {
    "text": "labels we have a web hook running this webhook checks for this",
    "start": "1299960",
    "end": "1306280"
  },
  {
    "text": "labels or annotations and if they are set we are injecting our own scheduler",
    "start": "1306280",
    "end": "1312740"
  },
  {
    "text": "extension and with these schedule extensions listens on our custom resource definitions takes care of that",
    "start": "1312740",
    "end": "1319100"
  },
  {
    "text": "your pre-deployment tasks have finished and when they are finished we let we bind the port until our",
    "start": "1319100",
    "end": "1327440"
  },
  {
    "text": "scheduler binds support and therefore advancing kubernetes very cool and what I loved about it also",
    "start": "1327440",
    "end": "1333799"
  },
  {
    "text": "the feedback we've received that means however whatever you use right now for a deployment tool some of you work in",
    "start": "1333799",
    "end": "1340100"
  },
  {
    "text": "organizations that have multiple tools if you try to enforce pre and post deployment checks in your tools you",
    "start": "1340100",
    "end": "1347120"
  },
  {
    "text": "potentially need to re-implement the same thing in Jenkins and gitlab in auto tools and with this we're bringing all",
    "start": "1347120",
    "end": "1353120"
  },
  {
    "text": "of these life cycle Checks Into The Core platform and that's the beauty this will result",
    "start": "1353120",
    "end": "1359360"
  },
  {
    "text": "in a tremendous Savings of other implementations of Integrations right and you can standardize all of this",
    "start": "1359360",
    "end": "1365659"
  },
  {
    "text": "within the platform and the I think one of the other wins with it too is that you actually get to",
    "start": "1365659",
    "end": "1370700"
  },
  {
    "text": "standardize the based on the severity of your the services so when we think about having those large-scale systems like",
    "start": "1370700",
    "end": "1377419"
  },
  {
    "text": "those 10 critical applications like those kind of get to keep the exact same evaluations so that you kind of keep up",
    "start": "1377419",
    "end": "1384380"
  },
  {
    "text": "that same sim or similar like service level objective at the end of the day",
    "start": "1384380",
    "end": "1389799"
  },
  {
    "text": "so and uh what you see on this slide here is that you can get you can get more information",
    "start": "1390740",
    "end": "1397220"
  },
  {
    "text": "about what's going on in your in your deployment process um buy this Matrix and traces we are",
    "start": "1397220",
    "end": "1404240"
  },
  {
    "text": "exposing from are from open tele with open Telemetry so for instance we",
    "start": "1404240",
    "end": "1409280"
  },
  {
    "text": "managed to get information about how much time passed between two deployments on a",
    "start": "1409280",
    "end": "1415940"
  },
  {
    "text": "workloading application Level and this is a good indicator for the maturity of",
    "start": "1415940",
    "end": "1421520"
  },
  {
    "text": "your of your deployment process furthermore we let you know how often the deployment failed and succeeded",
    "start": "1421520",
    "end": "1427580"
  },
  {
    "text": "which is also very nice when you want to find out how [Music]",
    "start": "1427580",
    "end": "1433100"
  },
  {
    "text": "good your how good your application is developed when it gets to production",
    "start": "1433100",
    "end": "1438320"
  },
  {
    "text": "um and on the other side we also get a full Trace over our deployment process so we know how long it takes to run to",
    "start": "1438320",
    "end": "1445700"
  },
  {
    "text": "until the poll runs we know how long our pre-deployment tests uh checks run post",
    "start": "1445700",
    "end": "1451460"
  },
  {
    "text": "deployment checks and so on so we always know where we can approve and the very",
    "start": "1451460",
    "end": "1457700"
  },
  {
    "text": "nice thing in this case is that we notice on the application Level so when we deploy a whole application at not",
    "start": "1457700",
    "end": "1464659"
  },
  {
    "text": "only one workload we know how long it took to deploy the whole application and",
    "start": "1464659",
    "end": "1470179"
  },
  {
    "text": "this is very important in some in some cases um as I told you before you can run your",
    "start": "1470179",
    "end": "1476840"
  },
  {
    "text": "own tasks and evaluations and some of you might have wondered how this looks like so um this is some kind of a configuration",
    "start": "1476840",
    "end": "1484760"
  },
  {
    "text": "um for that we have we created two custom resource definitions the one is",
    "start": "1484760",
    "end": "1490400"
  },
  {
    "text": "the captain task definition where you can simply Define your task",
    "start": "1490400",
    "end": "1495799"
  },
  {
    "text": "um you can add your code in in this custom resource",
    "start": "1495799",
    "end": "1501980"
  },
  {
    "text": "definition but you can also have this outside of your custom resource resource definitions or an HTTP server but also",
    "start": "1501980",
    "end": "1508880"
  },
  {
    "text": "in a config map um the second thing we created was was a captain evaluation definition and this",
    "start": "1508880",
    "end": "1515179"
  },
  {
    "text": "is here to find out how um to check some metrics",
    "start": "1515179",
    "end": "1521419"
  },
  {
    "text": "against thresholds to find out if your application simply runs um",
    "start": "1521419",
    "end": "1527659"
  },
  {
    "text": "just for completeness this might change a bit in the moment in the future",
    "start": "1527659",
    "end": "1532820"
  },
  {
    "text": "um as we as the project evolves and as we know in which direction this will go",
    "start": "1532820",
    "end": "1538700"
  },
  {
    "text": "so as a summary for the lifecycle controller um when you are using the lifecycle",
    "start": "1538700",
    "end": "1545059"
  },
  {
    "text": "controller you get application aware deployment and I think this is a really",
    "start": "1545059",
    "end": "1550340"
  },
  {
    "text": "really nice thing so you can make sure that the whole application runs as you expected and you",
    "start": "1550340",
    "end": "1558679"
  },
  {
    "text": "also can run tests based on the whole application furthermore you get vendor neutral",
    "start": "1558679",
    "end": "1565640"
  },
  {
    "text": "obserability using the open Telemetry stuff um the integration of external tools and",
    "start": "1565640",
    "end": "1572360"
  },
  {
    "text": "your own code is very easy so you simply have to write a function you can easily",
    "start": "1572360",
    "end": "1578720"
  },
  {
    "text": "integrate in webhooks and whatever you like and this in a very simple way",
    "start": "1578720",
    "end": "1585020"
  },
  {
    "text": "and last but not least the whole thing is in installable and configurable in a",
    "start": "1585020",
    "end": "1590240"
  },
  {
    "text": "very very easy way so the configuration is in your kubernetes manifests and in",
    "start": "1590240",
    "end": "1596419"
  },
  {
    "text": "two to three external customer resource definitions the installation is one",
    "start": "1596419",
    "end": "1603140"
  },
  {
    "text": "manifest at the moment I hope this will not change and you can get started in a few minutes",
    "start": "1603140",
    "end": "1610220"
  },
  {
    "text": "so for me the installation of the Teemo environment here took around I think one",
    "start": "1610220",
    "end": "1615500"
  },
  {
    "text": "minute and I was very slow in typing okay with this",
    "start": "1615500",
    "end": "1621440"
  },
  {
    "text": "um picked one to bring this home yeah exactly so first of all just to recap we",
    "start": "1621440",
    "end": "1626960"
  },
  {
    "text": "have if you go to the captain website right now you will see what Captain 100 looks like our first iteration of it",
    "start": "1626960",
    "end": "1633919"
  },
  {
    "text": "that I mentioned in the beginning we are currently targeting a 1-0 release in November and then with a long time",
    "start": "1633919",
    "end": "1639440"
  },
  {
    "text": "support there's also all the information you can find on what we built here lifecycle controller the future the",
    "start": "1639440",
    "end": "1645080"
  },
  {
    "text": "stuff that we learned over the three years and really making it as you said pipeline lists and kubernetes Native",
    "start": "1645080",
    "end": "1651260"
  },
  {
    "text": "we would not have been here without a lot of help from our contributors so you can see here all the people that",
    "start": "1651260",
    "end": "1658039"
  },
  {
    "text": "contributed especially also the people that helped us from the Google summer of code our community rock stars and also",
    "start": "1658039",
    "end": "1665000"
  },
  {
    "text": "maintainers like bread um so please you know if you see any of them thank you and if you are if you",
    "start": "1665000",
    "end": "1670520"
  },
  {
    "text": "happen to be in the room and recognize yourself thank you as well um yeah the last thing before we open up",
    "start": "1670520",
    "end": "1676880"
  },
  {
    "text": "for Q a if you want to get in touch with us please join the conversation on the",
    "start": "1676880",
    "end": "1681980"
  },
  {
    "text": "cncf Slick there is a captain Channel and now also the captain app lifecycle",
    "start": "1681980",
    "end": "1687740"
  },
  {
    "text": "working group you know you can also help us by storing us on GitHub and spreading the words",
    "start": "1687740",
    "end": "1694580"
  },
  {
    "text": "giving us feedback I think that's very important I see people taking pictures that's great if I'm not mistaken there's",
    "start": "1694580",
    "end": "1700880"
  },
  {
    "text": "one more thing exactly if you like this session please give us feedback that's always very welcome and we have a lot of",
    "start": "1700880",
    "end": "1708200"
  },
  {
    "text": "Swag here there's like t-shirts in medium large small and extra small we have stickers we have some hits and we",
    "start": "1708200",
    "end": "1715640"
  },
  {
    "text": "have even more of the swag down at the captain booth in the Pavilion I think we're still there until 4 30ish or five",
    "start": "1715640",
    "end": "1723380"
  },
  {
    "text": "o'clock but now we have one minute for questions or maybe two or",
    "start": "1723380",
    "end": "1728659"
  },
  {
    "text": "three yeah",
    "start": "1728659",
    "end": "1731080"
  },
  {
    "text": "yeah so the question is either we're already using Captain sorry I know I said earlier I will run around uh but I",
    "start": "1735740",
    "end": "1742520"
  },
  {
    "text": "just repeat you said you're already using Captain Wonder though how do you migrate I think if you're happy with Captain oneo right now",
    "start": "1742520",
    "end": "1748580"
  },
  {
    "text": "there is there may not be a need to move however you right now need to integrate Captain Bono on your existing pipelines",
    "start": "1748580",
    "end": "1755120"
  },
  {
    "text": "so one use case will be instead of integrating and calling Captain Bono from all of your pipelines install the",
    "start": "1755120",
    "end": "1761419"
  },
  {
    "text": "captain lifecycle controller and as a pre or a post task you can trigger your existing",
    "start": "1761419",
    "end": "1769940"
  },
  {
    "text": "Captain sequences for instance there will be an option so can we migrate what we already have from SLO definitions Etc",
    "start": "1769940",
    "end": "1777080"
  },
  {
    "text": "straight to you would not migrate you will keep your captain 100 but on the bottom basically what you replace is the",
    "start": "1777080",
    "end": "1783860"
  },
  {
    "text": "benefit of the lifecycle controller that means instead of calling it from what do you use Jenkins right now thinking so",
    "start": "1783860",
    "end": "1788899"
  },
  {
    "text": "instead of calling your captain one or sequences from Jenkins you basically let the sequence be called",
    "start": "1788899",
    "end": "1796700"
  },
  {
    "text": "from the lifecycle controller that means you're eliminating the need of integrating Jenkins with Captain at all",
    "start": "1796700",
    "end": "1801919"
  },
  {
    "text": "because it will happen implicitly got it okay thank you and the thing like going further Thomas was saying right now the",
    "start": "1801919",
    "end": "1809659"
  },
  {
    "text": "SLO validation um we just started with it on the captain life cycle control I'm pretty",
    "start": "1809659",
    "end": "1815840"
  },
  {
    "text": "sure we'll get on par with what we have in Captain 1.0 we are also working with the openness hello Community to figure",
    "start": "1815840",
    "end": "1821240"
  },
  {
    "text": "out how we can also adapt this standard right",
    "start": "1821240",
    "end": "1826000"
  },
  {
    "text": "yep um this might be basic a man familiar with the product but",
    "start": "1829760",
    "end": "1835340"
  },
  {
    "text": "um what is how do you define an app is it a single deployment or if your app is",
    "start": "1835340",
    "end": "1841159"
  },
  {
    "text": "more virtual and has multiple deployments can can you work that into the",
    "start": "1841159",
    "end": "1846919"
  },
  {
    "text": "definition of a captain app um So currently uh cap nap is a bundle",
    "start": "1846919",
    "end": "1852919"
  },
  {
    "text": "of workouts um and this one this bundle has a version",
    "start": "1852919",
    "end": "1858320"
  },
  {
    "text": "therefore you can define an application in a way where say I have the application for instance",
    "start": "1858320",
    "end": "1864559"
  },
  {
    "text": "our theme application was called The Potato Head and we had five workouts in",
    "start": "1864559",
    "end": "1870860"
  },
  {
    "text": "um different versions and this is what what an app defines for",
    "start": "1870860",
    "end": "1875899"
  },
  {
    "text": "us so we are not doing Progressive delivery at the moment um we are only making sure that the",
    "start": "1875899",
    "end": "1882200"
  },
  {
    "text": "application in this version with the workloads in several versions is available at the moment",
    "start": "1882200",
    "end": "1888260"
  },
  {
    "text": "what is um we hope for discussions for this in every time",
    "start": "1888260",
    "end": "1895179"
  },
  {
    "text": "how does your um Hotel integration actually work are you like maintaining a prompt server or something",
    "start": "1895640",
    "end": "1902240"
  },
  {
    "text": "and am I sending all Telemetry from all services to this or is it like you're hooking into just the particular",
    "start": "1902240",
    "end": "1908419"
  },
  {
    "text": "application or something how are you doing that uh sorry I heard myself",
    "start": "1908419",
    "end": "1915980"
  },
  {
    "text": "um we are in um we are sending all of the traces metrics we're collecting from the",
    "start": "1915980",
    "end": "1923179"
  },
  {
    "text": "from the from the live cycle controller do an open Telemetry collector",
    "start": "1923179",
    "end": "1928940"
  },
  {
    "text": "and this one passes this further so we we are not instrumenting the applications themselves",
    "start": "1928940",
    "end": "1935720"
  },
  {
    "text": "um I think there are many tools which can do this much better than we in the lifecycle controller at least",
    "start": "1935720",
    "end": "1941320"
  },
  {
    "text": "and yes therefore we are only collecting the data or the deployment related data",
    "start": "1941320",
    "end": "1947600"
  },
  {
    "text": "from the from the lifecycle controller",
    "start": "1947600",
    "end": "1951580"
  },
  {
    "text": "exactly so",
    "start": "1952760",
    "end": "1955419"
  },
  {
    "text": "now we we decided to export to the open Telemetry collector so we are not using",
    "start": "1964580",
    "end": "1970159"
  },
  {
    "text": "the exporters themselves um because we found that this would be easier to integrate for for vendors and",
    "start": "1970159",
    "end": "1979840"
  },
  {
    "text": "what what we are doing is we are creating our own traces because we are",
    "start": "1989360",
    "end": "1994640"
  },
  {
    "text": "executing these pre-deployment checks and the post deployment checks this will become a trace from the app that gets",
    "start": "1994640",
    "end": "2000580"
  },
  {
    "text": "deployed by let's say Argo or whatever tool you use right whatever you decide there how to collect the data Maybe feed",
    "start": "2000580",
    "end": "2006580"
  },
  {
    "text": "it into light step maybe feed it into dynatrace and there we have the ability to query this data but what we emit is",
    "start": "2006580",
    "end": "2014140"
  },
  {
    "text": "really just an open Telemetry trace on the actions that the lifecycle controller takes executing the",
    "start": "2014140",
    "end": "2019779"
  },
  {
    "text": "pre-deployment tasks and the post deployment tasks and that's exported via the The Collector",
    "start": "2019779",
    "end": "2027240"
  },
  {
    "text": "um I think you're talking about evaluations right so how how we can get data from an from",
    "start": "2031600",
    "end": "2038679"
  },
  {
    "text": "an obserability solution",
    "start": "2038679",
    "end": "2041940"
  },
  {
    "text": "um this is only where um so now I understand the question a bit better so it's more about getting the slos from",
    "start": "2055179",
    "end": "2061419"
  },
  {
    "text": "the observability solution and this is not based on open Telemetry of the future uh at the beginning at the moment",
    "start": "2061419",
    "end": "2067599"
  },
  {
    "text": "um sorry it's Pro it's prom ql based and we can so in the current in the in the",
    "start": "2067599",
    "end": "2073839"
  },
  {
    "text": "captain 10 we had a concept of SLI providers we have providers for Prometheus for data dog for dynatrace",
    "start": "2073839",
    "end": "2081220"
  },
  {
    "text": "for Sumo logic and for splank now with the new lifecycle controller what you think I've shown earlier we're currently",
    "start": "2081220",
    "end": "2087460"
  },
  {
    "text": "supporting prompt ql queries and we also want to get on par with what we have there with the concept where you can",
    "start": "2087460",
    "end": "2093158"
  },
  {
    "text": "plug in different providers where you specify in a crd what type of query you",
    "start": "2093159",
    "end": "2098740"
  },
  {
    "text": "want to execute against that Target environment and that query is then executed by a data source provider",
    "start": "2098740",
    "end": "2105220"
  },
  {
    "text": "and I'm sure there will be some standard implementations for whatever like if we",
    "start": "2105220",
    "end": "2110260"
  },
  {
    "text": "decided to go with open SLO and they already have a provider then they should work",
    "start": "2110260",
    "end": "2117420"
  },
  {
    "text": "in the moment yes",
    "start": "2122859",
    "end": "2126480"
  },
  {
    "text": "I think for us in the future this will be simply an observability provider where we can query data",
    "start": "2141640",
    "end": "2148060"
  },
  {
    "text": "definitely is this um we didn't write it until now but it might be possible in the future",
    "start": "2148060",
    "end": "2153640"
  },
  {
    "text": "so if you have some requests such as this or I want to discuss these things a",
    "start": "2153640",
    "end": "2159940"
  },
  {
    "text": "bit a bit more detail and we can stay in touch and talk about this and I would say maybe if",
    "start": "2159940",
    "end": "2165880"
  },
  {
    "text": "we have more questions let's we need to clear the room for the next session I think because we already are out of time uh we will folks there are stickers",
    "start": "2165880",
    "end": "2173619"
  },
  {
    "text": "there are t-shirts uh hats and at the booth for the next hour at least",
    "start": "2173619",
    "end": "2182579"
  }
]