[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "welcome to servicemeshcon today we're",
    "start": "320",
    "end": "3439"
  },
  {
    "text": "going to be seeing how to run kuma",
    "start": "3439",
    "end": "5440"
  },
  {
    "text": "in a multi-cloud and multi-cluster way",
    "start": "5440",
    "end": "8880"
  },
  {
    "text": "my name is marco palladino i am the cto",
    "start": "8880",
    "end": "11759"
  },
  {
    "start": "10000",
    "end": "22000"
  },
  {
    "text": "and co-founder of kong",
    "start": "11759",
    "end": "13519"
  },
  {
    "text": "but before we look into kuma let's ask",
    "start": "13519",
    "end": "16240"
  },
  {
    "text": "ourselves",
    "start": "16240",
    "end": "17199"
  },
  {
    "text": "why service mesh became such a popular",
    "start": "17199",
    "end": "19840"
  },
  {
    "text": "pattern",
    "start": "19840",
    "end": "22080"
  },
  {
    "text": "we have learned many years ago that our",
    "start": "22080",
    "end": "25680"
  },
  {
    "text": "monolithic applications once they grow",
    "start": "25680",
    "end": "28240"
  },
  {
    "text": "they become very hard to scale very hard",
    "start": "28240",
    "end": "30400"
  },
  {
    "text": "to deploy",
    "start": "30400",
    "end": "31679"
  },
  {
    "text": "in a reliable manner they're hard to use",
    "start": "31679",
    "end": "34880"
  },
  {
    "text": "hard to deploy hard to contribute to",
    "start": "34880",
    "end": "37680"
  },
  {
    "text": "therefore",
    "start": "37680",
    "end": "38480"
  },
  {
    "text": "we're going to be decoupling our",
    "start": "38480",
    "end": "39840"
  },
  {
    "text": "monolithic applications into separate",
    "start": "39840",
    "end": "42000"
  },
  {
    "text": "services microservices",
    "start": "42000",
    "end": "44000"
  },
  {
    "text": "now when we do that we get speed we get",
    "start": "44000",
    "end": "46559"
  },
  {
    "text": "velocity we get agility",
    "start": "46559",
    "end": "48399"
  },
  {
    "text": "we get a lower time to market because we",
    "start": "48399",
    "end": "50640"
  },
  {
    "text": "can reuse",
    "start": "50640",
    "end": "51680"
  },
  {
    "text": "some of these components when we create",
    "start": "51680",
    "end": "53360"
  },
  {
    "text": "new applications",
    "start": "53360",
    "end": "55120"
  },
  {
    "text": "but on the other end we're also",
    "start": "55120",
    "end": "56800"
  },
  {
    "text": "introducing more and more connectivity",
    "start": "56800",
    "end": "59199"
  },
  {
    "text": "at the backbone of our modern systems",
    "start": "59199",
    "end": "62079"
  },
  {
    "text": "when connectivity is down",
    "start": "62079",
    "end": "64400"
  },
  {
    "text": "our applications are done connectivity",
    "start": "64400",
    "end": "66720"
  },
  {
    "text": "really glues together",
    "start": "66720",
    "end": "68240"
  },
  {
    "text": "all the services that we're creating and",
    "start": "68240",
    "end": "70080"
  },
  {
    "text": "the more services we create",
    "start": "70080",
    "end": "71600"
  },
  {
    "text": "the more connectivity we generate",
    "start": "71600",
    "end": "74640"
  },
  {
    "start": "74000",
    "end": "142000"
  },
  {
    "text": "our application teams should not be in",
    "start": "74640",
    "end": "76960"
  },
  {
    "text": "charge of managing that connectivity by",
    "start": "76960",
    "end": "79280"
  },
  {
    "text": "themselves",
    "start": "79280",
    "end": "80320"
  },
  {
    "text": "when they do it they do it in a",
    "start": "80320",
    "end": "81840"
  },
  {
    "text": "fragmented way and it's not their job",
    "start": "81840",
    "end": "84320"
  },
  {
    "text": "they should be instead getting that",
    "start": "84320",
    "end": "86880"
  },
  {
    "text": "connectivity from the infrastructure",
    "start": "86880",
    "end": "88880"
  },
  {
    "text": "that",
    "start": "88880",
    "end": "89200"
  },
  {
    "text": "we the enterprise architect are",
    "start": "89200",
    "end": "91200"
  },
  {
    "text": "provisioning them",
    "start": "91200",
    "end": "92479"
  },
  {
    "text": "across kubernetes and virtual machines",
    "start": "92479",
    "end": "94720"
  },
  {
    "text": "across multiple clouds and multiple",
    "start": "94720",
    "end": "96479"
  },
  {
    "text": "clusters",
    "start": "96479",
    "end": "97680"
  },
  {
    "text": "there is different connectivity types",
    "start": "97680",
    "end": "99759"
  },
  {
    "text": "that our application teams are going to",
    "start": "99759",
    "end": "101520"
  },
  {
    "text": "be asking us",
    "start": "101520",
    "end": "102880"
  },
  {
    "text": "they want connectivity at the edge when",
    "start": "102880",
    "end": "104880"
  },
  {
    "text": "some of their applications must be",
    "start": "104880",
    "end": "106479"
  },
  {
    "text": "consumed",
    "start": "106479",
    "end": "107439"
  },
  {
    "text": "from outside of the organization by an",
    "start": "107439",
    "end": "109439"
  },
  {
    "text": "ecosystem of partners and developers",
    "start": "109439",
    "end": "111759"
  },
  {
    "text": "or mobile applications there is going to",
    "start": "111759",
    "end": "114079"
  },
  {
    "text": "be connectivity",
    "start": "114079",
    "end": "115119"
  },
  {
    "text": "across our applications when different",
    "start": "115119",
    "end": "118079"
  },
  {
    "text": "teams are exposing apis",
    "start": "118079",
    "end": "120000"
  },
  {
    "text": "that another team can consume and then",
    "start": "120000",
    "end": "123040"
  },
  {
    "text": "there is going to be more and more",
    "start": "123040",
    "end": "124399"
  },
  {
    "text": "connectivity inside of our applications",
    "start": "124399",
    "end": "127439"
  },
  {
    "text": "whenever our applications become",
    "start": "127439",
    "end": "129239"
  },
  {
    "text": "microservice-oriented",
    "start": "129239",
    "end": "130640"
  },
  {
    "text": "all of the services that make up the",
    "start": "130640",
    "end": "132800"
  },
  {
    "text": "final applications",
    "start": "132800",
    "end": "134239"
  },
  {
    "text": "all of those services communicate with",
    "start": "134239",
    "end": "136720"
  },
  {
    "text": "connections and those connections have",
    "start": "136720",
    "end": "138319"
  },
  {
    "text": "to be secure",
    "start": "138319",
    "end": "139280"
  },
  {
    "text": "reliable and observable",
    "start": "139280",
    "end": "142400"
  },
  {
    "text": "and this is why at kong we originally",
    "start": "142400",
    "end": "145040"
  },
  {
    "text": "created kuma",
    "start": "145040",
    "end": "146080"
  },
  {
    "text": "in order to simplify how this",
    "start": "146080",
    "end": "148000"
  },
  {
    "text": "connectivity can be",
    "start": "148000",
    "end": "149200"
  },
  {
    "text": "offered by the enterprise architecture",
    "start": "149200",
    "end": "151680"
  },
  {
    "text": "team",
    "start": "151680",
    "end": "152319"
  },
  {
    "text": "to the application teams no matter if",
    "start": "152319",
    "end": "155280"
  },
  {
    "text": "they run on kubernetes or virtual",
    "start": "155280",
    "end": "157360"
  },
  {
    "text": "machines no matter if",
    "start": "157360",
    "end": "158959"
  },
  {
    "text": "they run in a standalone or distributed",
    "start": "158959",
    "end": "161280"
  },
  {
    "text": "way",
    "start": "161280",
    "end": "162000"
  },
  {
    "text": "we didn't stop there we also donated",
    "start": "162000",
    "end": "164080"
  },
  {
    "text": "kuma to the cncf foundation therefore",
    "start": "164080",
    "end": "166720"
  },
  {
    "text": "hume is now available with the same",
    "start": "166720",
    "end": "168640"
  },
  {
    "text": "neutrality in open governance as",
    "start": "168640",
    "end": "171120"
  },
  {
    "text": "any other cncf project in the foundation",
    "start": "171120",
    "end": "174400"
  },
  {
    "text": "like envoy proxy for example which by",
    "start": "174400",
    "end": "176400"
  },
  {
    "text": "the way kuma",
    "start": "176400",
    "end": "177680"
  },
  {
    "text": "uses and today it is a sandbox project",
    "start": "177680",
    "end": "180879"
  },
  {
    "text": "over the next few months we're going to",
    "start": "180879",
    "end": "183360"
  },
  {
    "text": "be obviously climbing",
    "start": "183360",
    "end": "185200"
  },
  {
    "text": "the cncf ladder into incubating and one",
    "start": "185200",
    "end": "188480"
  },
  {
    "text": "day",
    "start": "188480",
    "end": "188959"
  },
  {
    "text": "graduated because of the very unique set",
    "start": "188959",
    "end": "191599"
  },
  {
    "text": "of features that kuma provides and it's",
    "start": "191599",
    "end": "193360"
  },
  {
    "text": "ease of use",
    "start": "193360",
    "end": "194319"
  },
  {
    "text": "yet it's very powerful today is",
    "start": "194319",
    "end": "196480"
  },
  {
    "text": "being used by",
    "start": "196480",
    "end": "197440"
  },
  {
    "text": "over 900 organizations in very important",
    "start": "197440",
    "end": "200720"
  },
  {
    "text": "and mission critical use cases",
    "start": "200720",
    "end": "203040"
  },
  {
    "start": "202000",
    "end": "273000"
  },
  {
    "text": "qma from a very high level standpoint it",
    "start": "203040",
    "end": "205440"
  },
  {
    "text": "is a control plane for service mesh",
    "start": "205440",
    "end": "207680"
  },
  {
    "text": "it supports envoy under the hood but we",
    "start": "207680",
    "end": "210720"
  },
  {
    "text": "don't require any envoy",
    "start": "210720",
    "end": "212239"
  },
  {
    "text": "expertise to use cuba is universal",
    "start": "212239",
    "end": "216080"
  },
  {
    "text": "it's a first class",
    "start": "216080",
    "end": "217200"
  },
  {
    "text": "citizen for both kubernetes and vms but",
    "start": "217200",
    "end": "219519"
  },
  {
    "text": "really for",
    "start": "219519",
    "end": "220239"
  },
  {
    "text": "any other containerized environment as a",
    "start": "220239",
    "end": "222640"
  },
  {
    "text": "matter of fact you could be running kuma",
    "start": "222640",
    "end": "224640"
  },
  {
    "text": "entirely on vms with no kubernetes",
    "start": "224640",
    "end": "226799"
  },
  {
    "text": "dependency whatsoever",
    "start": "226799",
    "end": "228400"
  },
  {
    "text": "we have created this universal support",
    "start": "228400",
    "end": "230959"
  },
  {
    "text": "because we have a",
    "start": "230959",
    "end": "231840"
  },
  {
    "text": "very clear understanding that we as",
    "start": "231840",
    "end": "234560"
  },
  {
    "text": "enterprise architects",
    "start": "234560",
    "end": "236159"
  },
  {
    "text": "we must support the teams that are very",
    "start": "236159",
    "end": "238799"
  },
  {
    "text": "far",
    "start": "238799",
    "end": "239439"
  },
  {
    "text": "you know advanced in their kubernetes",
    "start": "239439",
    "end": "241360"
  },
  {
    "text": "journey and the ones that are behind",
    "start": "241360",
    "end": "243439"
  },
  {
    "text": "that",
    "start": "243439",
    "end": "243840"
  },
  {
    "text": "curve and so we want to support a",
    "start": "243840",
    "end": "245920"
  },
  {
    "text": "service mesh that can run across the",
    "start": "245920",
    "end": "247760"
  },
  {
    "text": "board on both vms and kubernetes as a",
    "start": "247760",
    "end": "249760"
  },
  {
    "text": "matter of fact",
    "start": "249760",
    "end": "250640"
  },
  {
    "text": "we want that to be hybrid as well",
    "start": "250640",
    "end": "252159"
  },
  {
    "text": "sometimes and we're going to be seeing",
    "start": "252159",
    "end": "253439"
  },
  {
    "text": "this in the demo",
    "start": "253439",
    "end": "254720"
  },
  {
    "text": "uh we can run in a multi-zone or single",
    "start": "254720",
    "end": "256639"
  },
  {
    "text": "zone capacity we can run in a",
    "start": "256639",
    "end": "258160"
  },
  {
    "text": "multi-cloud multi-cluster",
    "start": "258160",
    "end": "260079"
  },
  {
    "text": "capacity and we can easily scale",
    "start": "260079",
    "end": "263440"
  },
  {
    "text": "upgrade and operate this service mesh",
    "start": "263440",
    "end": "266400"
  },
  {
    "text": "simplicity is a feature",
    "start": "266400",
    "end": "268160"
  },
  {
    "text": "it's not a nice to have and we built",
    "start": "268160",
    "end": "270560"
  },
  {
    "text": "kuma with that in mind",
    "start": "270560",
    "end": "273919"
  },
  {
    "text": "kuma comes with a lot out of the box",
    "start": "273919",
    "end": "276400"
  },
  {
    "text": "there is a gui out of the box there is",
    "start": "276400",
    "end": "278160"
  },
  {
    "text": "an http api out of the box on kubernetes",
    "start": "278160",
    "end": "280960"
  },
  {
    "text": "there are native kubernetes",
    "start": "280960",
    "end": "282160"
  },
  {
    "text": "resources on vms there is declarative",
    "start": "282160",
    "end": "284320"
  },
  {
    "text": "config",
    "start": "284320",
    "end": "285280"
  },
  {
    "text": "uh there is an http api and a cli that",
    "start": "285280",
    "end": "288240"
  },
  {
    "text": "allows us to effectively",
    "start": "288240",
    "end": "289520"
  },
  {
    "text": "integrate huma with our ci cd workflows",
    "start": "289520",
    "end": "292639"
  },
  {
    "start": "292000",
    "end": "322000"
  },
  {
    "text": "kuma also comes with much more than that",
    "start": "292639",
    "end": "294880"
  },
  {
    "text": "it comes with observability charts and",
    "start": "294880",
    "end": "297360"
  },
  {
    "text": "very easy to use integrations with",
    "start": "297360",
    "end": "299440"
  },
  {
    "text": "gateways and existing api management",
    "start": "299440",
    "end": "301520"
  },
  {
    "text": "solutions it supports",
    "start": "301520",
    "end": "303120"
  },
  {
    "text": "any containerized environment not just",
    "start": "303120",
    "end": "304800"
  },
  {
    "text": "kubernetes not just vms",
    "start": "304800",
    "end": "306560"
  },
  {
    "text": "but also environments like aws fargate",
    "start": "306560",
    "end": "309440"
  },
  {
    "text": "or ecs",
    "start": "309440",
    "end": "310880"
  },
  {
    "text": "and uh enabling features like zero trust",
    "start": "310880",
    "end": "313680"
  },
  {
    "text": "security",
    "start": "313680",
    "end": "314479"
  },
  {
    "text": "like fault injection like traffic",
    "start": "314479",
    "end": "316240"
  },
  {
    "text": "routing it is one click away",
    "start": "316240",
    "end": "318320"
  },
  {
    "text": "we have native policies that allow us to",
    "start": "318320",
    "end": "320560"
  },
  {
    "text": "do that",
    "start": "320560",
    "end": "322479"
  },
  {
    "start": "322000",
    "end": "411000"
  },
  {
    "text": "qma can be deployed in a multi-zone",
    "start": "322479",
    "end": "324000"
  },
  {
    "text": "capacity a zone can be a cloud a cluster",
    "start": "324000",
    "end": "326479"
  },
  {
    "text": "can be vms can be containers and we can",
    "start": "326479",
    "end": "328720"
  },
  {
    "text": "create one deployment",
    "start": "328720",
    "end": "329919"
  },
  {
    "text": "of human that spans across all the",
    "start": "329919",
    "end": "331840"
  },
  {
    "text": "environments that we want to support",
    "start": "331840",
    "end": "333520"
  },
  {
    "text": "including private data centers",
    "start": "333520",
    "end": "335440"
  },
  {
    "text": "and then on top of that one deployment",
    "start": "335440",
    "end": "337199"
  },
  {
    "text": "of qma we can create as many virtual",
    "start": "337199",
    "end": "338880"
  },
  {
    "text": "meshes as we want",
    "start": "338880",
    "end": "340000"
  },
  {
    "text": "to compartmentalize how our teams and",
    "start": "340000",
    "end": "342400"
  },
  {
    "text": "applications",
    "start": "342400",
    "end": "343280"
  },
  {
    "text": "are setting up their mesh policies we",
    "start": "343280",
    "end": "345840"
  },
  {
    "text": "obviously want to give a degree of",
    "start": "345840",
    "end": "347280"
  },
  {
    "text": "freedom",
    "start": "347280",
    "end": "347840"
  },
  {
    "text": "to the application teams to change the",
    "start": "347840",
    "end": "350400"
  },
  {
    "text": "behavior of their applications without",
    "start": "350400",
    "end": "352880"
  },
  {
    "text": "us the architects always being the",
    "start": "352880",
    "end": "354560"
  },
  {
    "text": "bottleneck of every request",
    "start": "354560",
    "end": "356560"
  },
  {
    "text": "yet we want the underlying",
    "start": "356560",
    "end": "358000"
  },
  {
    "text": "infrastructure to be provisioned for",
    "start": "358000",
    "end": "359759"
  },
  {
    "text": "them so they don't have to worry about",
    "start": "359759",
    "end": "361520"
  },
  {
    "text": "it",
    "start": "361520",
    "end": "362319"
  },
  {
    "text": "we have automatic policy storage and",
    "start": "362319",
    "end": "364479"
  },
  {
    "text": "propagation with the concept of global",
    "start": "364479",
    "end": "366319"
  },
  {
    "text": "control plane which is the primary",
    "start": "366319",
    "end": "367919"
  },
  {
    "text": "control plane",
    "start": "367919",
    "end": "368800"
  },
  {
    "text": "and remote control plane which is the",
    "start": "368800",
    "end": "370720"
  },
  {
    "text": "secondary control plane",
    "start": "370720",
    "end": "372319"
  },
  {
    "text": "all the policies we create can we can be",
    "start": "372319",
    "end": "374560"
  },
  {
    "text": "created from the global",
    "start": "374560",
    "end": "375759"
  },
  {
    "text": "and the global control plane will",
    "start": "375759",
    "end": "377199"
  },
  {
    "text": "automatically reconcile and propagate",
    "start": "377199",
    "end": "379440"
  },
  {
    "text": "these policies",
    "start": "379440",
    "end": "380240"
  },
  {
    "text": "across all the zones that we want to",
    "start": "380240",
    "end": "381759"
  },
  {
    "text": "support not only",
    "start": "381759",
    "end": "383520"
  },
  {
    "text": "we can also enable connectivity from one",
    "start": "383520",
    "end": "385919"
  },
  {
    "text": "zone to another",
    "start": "385919",
    "end": "386960"
  },
  {
    "text": "in a very uh automated way therefore if",
    "start": "386960",
    "end": "390240"
  },
  {
    "text": "there is a service wanting to consume",
    "start": "390240",
    "end": "391759"
  },
  {
    "text": "another service",
    "start": "391759",
    "end": "393520"
  },
  {
    "text": "none of these services have to know what",
    "start": "393520",
    "end": "395600"
  },
  {
    "text": "zone they're running and how they're",
    "start": "395600",
    "end": "396880"
  },
  {
    "text": "being built as a matter of fact we can",
    "start": "396880",
    "end": "398400"
  },
  {
    "text": "also mix and match hybrid",
    "start": "398400",
    "end": "399919"
  },
  {
    "text": "and kubernetes environments it can be",
    "start": "399919",
    "end": "401919"
  },
  {
    "text": "very very",
    "start": "401919",
    "end": "403280"
  },
  {
    "text": "complex the way we deploy it yet it is",
    "start": "403280",
    "end": "406160"
  },
  {
    "text": "very easy to use and simple when we",
    "start": "406160",
    "end": "408560"
  },
  {
    "text": "manage it",
    "start": "408560",
    "end": "411120"
  },
  {
    "start": "411000",
    "end": "610000"
  },
  {
    "text": "so in the demo i want to show you how we",
    "start": "411199",
    "end": "413039"
  },
  {
    "text": "can run kuma in a multi-cloud and",
    "start": "413039",
    "end": "415199"
  },
  {
    "text": "multi-cluster capacity on gcp and aws",
    "start": "415199",
    "end": "418080"
  },
  {
    "text": "on three different kubernetes clusters",
    "start": "418080",
    "end": "420560"
  },
  {
    "text": "on gcp",
    "start": "420560",
    "end": "421360"
  },
  {
    "text": "and we're going to show this is a demo",
    "start": "421360",
    "end": "422880"
  },
  {
    "text": "about containers and vms hybrid mixed",
    "start": "422880",
    "end": "425520"
  },
  {
    "text": "together within the same mesh",
    "start": "425520",
    "end": "427440"
  },
  {
    "text": "so let me pull up my environment i do",
    "start": "427440",
    "end": "430479"
  },
  {
    "text": "have",
    "start": "430479",
    "end": "430880"
  },
  {
    "text": "my aws ec2 zone with the remote control",
    "start": "430880",
    "end": "434160"
  },
  {
    "text": "plane and my demo application running in",
    "start": "434160",
    "end": "436160"
  },
  {
    "text": "vms",
    "start": "436160",
    "end": "436880"
  },
  {
    "text": "and i do have my kubernetes clusters the",
    "start": "436880",
    "end": "438800"
  },
  {
    "text": "global and the east and the west",
    "start": "438800",
    "end": "440479"
  },
  {
    "text": "uh that also have the demo application",
    "start": "440479",
    "end": "442880"
  },
  {
    "text": "running",
    "start": "442880",
    "end": "443599"
  },
  {
    "text": "every time i increment a counter in",
    "start": "443599",
    "end": "445599"
  },
  {
    "text": "redis from the demo app",
    "start": "445599",
    "end": "447680"
  },
  {
    "text": "depending on what radius instance we're",
    "start": "447680",
    "end": "449599"
  },
  {
    "text": "incrementing depending on which zone",
    "start": "449599",
    "end": "451520"
  },
  {
    "text": "we're hitting",
    "start": "451520",
    "end": "452319"
  },
  {
    "text": "we're going to be seeing different",
    "start": "452319",
    "end": "453440"
  },
  {
    "text": "clusters now if i connected to the",
    "start": "453440",
    "end": "455520"
  },
  {
    "text": "global control plane i can also expose",
    "start": "455520",
    "end": "457440"
  },
  {
    "text": "the glue of kuma to understand what's",
    "start": "457440",
    "end": "459120"
  },
  {
    "text": "the status of the current mesh",
    "start": "459120",
    "end": "460880"
  },
  {
    "text": "and fetch all the um",
    "start": "460880",
    "end": "464479"
  },
  {
    "text": "and you know all the status of my zones",
    "start": "464479",
    "end": "466479"
  },
  {
    "text": "and my workloads so i'm port forwarding",
    "start": "466479",
    "end": "468800"
  },
  {
    "text": "the control plane uh in the cuba system",
    "start": "468800",
    "end": "471120"
  },
  {
    "text": "namespace and once i do that",
    "start": "471120",
    "end": "472879"
  },
  {
    "text": "we can go ahead and explore so first and",
    "start": "472879",
    "end": "475199"
  },
  {
    "text": "foremost there is an api",
    "start": "475199",
    "end": "476879"
  },
  {
    "text": "an api that we can use to automate",
    "start": "476879",
    "end": "479120"
  },
  {
    "text": "everything that the gui can do",
    "start": "479120",
    "end": "480800"
  },
  {
    "text": "but if we go on slash gui we can also",
    "start": "480800",
    "end": "482720"
  },
  {
    "text": "see it and we can see that this is",
    "start": "482720",
    "end": "484720"
  },
  {
    "text": "running on three different zones",
    "start": "484720",
    "end": "486400"
  },
  {
    "text": "uh awsc two gkes the gke west and we do",
    "start": "486400",
    "end": "489599"
  },
  {
    "text": "have a few services running inside of",
    "start": "489599",
    "end": "491280"
  },
  {
    "text": "our systems as well as all the data",
    "start": "491280",
    "end": "493360"
  },
  {
    "text": "plane proxies",
    "start": "493360",
    "end": "494240"
  },
  {
    "text": "that are being connected to our service",
    "start": "494240",
    "end": "497360"
  },
  {
    "text": "mesh which is running in a distributed",
    "start": "497360",
    "end": "498879"
  },
  {
    "text": "way",
    "start": "498879",
    "end": "499599"
  },
  {
    "text": "so right now i can load my",
    "start": "499599",
    "end": "502800"
  },
  {
    "text": "oops i can load my demo application and",
    "start": "502800",
    "end": "505680"
  },
  {
    "text": "that's probably the wrong address",
    "start": "505680",
    "end": "508400"
  },
  {
    "text": "this is the right one there we go i can",
    "start": "508400",
    "end": "511520"
  },
  {
    "text": "load my demo application",
    "start": "511520",
    "end": "513039"
  },
  {
    "text": "and increment my radius counters now",
    "start": "513039",
    "end": "515839"
  },
  {
    "text": "because mutual tls is being disabled",
    "start": "515839",
    "end": "517839"
  },
  {
    "text": "right now",
    "start": "517839",
    "end": "518479"
  },
  {
    "text": "in these uh current um",
    "start": "518479",
    "end": "523440"
  },
  {
    "text": "setup we need to enable neutral kls in",
    "start": "523919",
    "end": "527040"
  },
  {
    "text": "order to allow for that cross zone",
    "start": "527040",
    "end": "528800"
  },
  {
    "text": "connectivity so right now the default",
    "start": "528800",
    "end": "530640"
  },
  {
    "text": "mesh has mutual is disabled",
    "start": "530640",
    "end": "532320"
  },
  {
    "text": "so let's go ahead and implement mutual",
    "start": "532320",
    "end": "535360"
  },
  {
    "text": "tls and enable it in one click",
    "start": "535360",
    "end": "537600"
  },
  {
    "text": "uh qmo will automatically generate the",
    "start": "537600",
    "end": "539519"
  },
  {
    "text": "certificated authority for us although",
    "start": "539519",
    "end": "541279"
  },
  {
    "text": "we can provide our own",
    "start": "541279",
    "end": "542560"
  },
  {
    "text": "and automatically it will rotate the",
    "start": "542560",
    "end": "544399"
  },
  {
    "text": "certificates for us",
    "start": "544399",
    "end": "545680"
  },
  {
    "text": "so that the entire certificate",
    "start": "545680",
    "end": "547120"
  },
  {
    "text": "management has been taken care of no",
    "start": "547120",
    "end": "548640"
  },
  {
    "text": "matter if you have",
    "start": "548640",
    "end": "549680"
  },
  {
    "text": "one service or 10 000 services so let's",
    "start": "549680",
    "end": "552720"
  },
  {
    "text": "go ahead and create",
    "start": "552720",
    "end": "555200"
  },
  {
    "text": "the um and create this zerotrust",
    "start": "555200",
    "end": "558320"
  },
  {
    "text": "security",
    "start": "558320",
    "end": "559440"
  },
  {
    "text": "policy uh in the global control plane as",
    "start": "559440",
    "end": "562240"
  },
  {
    "text": "soon as i create it",
    "start": "562240",
    "end": "563200"
  },
  {
    "text": "uh the global will propagate this to my",
    "start": "563200",
    "end": "565839"
  },
  {
    "text": "uh other clusters the certificates will",
    "start": "565839",
    "end": "567760"
  },
  {
    "text": "be generated and as soon as they're",
    "start": "567760",
    "end": "569200"
  },
  {
    "text": "being generated we're going to be seeing",
    "start": "569200",
    "end": "571200"
  },
  {
    "text": "cross zone connectivity from vms to",
    "start": "571200",
    "end": "573680"
  },
  {
    "text": "containers across multiple clouds",
    "start": "573680",
    "end": "575760"
  },
  {
    "text": "multiple regions",
    "start": "575760",
    "end": "577120"
  },
  {
    "text": "multiple environments hybrid this is how",
    "start": "577120",
    "end": "579839"
  },
  {
    "text": "easy it is to enable zero trust security",
    "start": "579839",
    "end": "582480"
  },
  {
    "text": "with service mesh of course there is",
    "start": "582480",
    "end": "584640"
  },
  {
    "text": "much more to it that i want to show you",
    "start": "584640",
    "end": "586640"
  },
  {
    "text": "but there is not enough time so if you",
    "start": "586640",
    "end": "588320"
  },
  {
    "text": "want to get in touch with kuma so first",
    "start": "588320",
    "end": "590240"
  },
  {
    "text": "and foremost you can install kuma",
    "start": "590240",
    "end": "592080"
  },
  {
    "text": "by going on cumulo as well as you can",
    "start": "592080",
    "end": "594800"
  },
  {
    "text": "get in touch with our community and",
    "start": "594800",
    "end": "596320"
  },
  {
    "text": "please do not miss the talk today",
    "start": "596320",
    "end": "598480"
  },
  {
    "text": "about a federal use case and how we can",
    "start": "598480",
    "end": "600560"
  },
  {
    "text": "support 10k transactions",
    "start": "600560",
    "end": "602320"
  },
  {
    "text": "per second with cuma by given by a user",
    "start": "602320",
    "end": "606399"
  },
  {
    "text": "of hume itself",
    "start": "606399",
    "end": "607440"
  },
  {
    "text": "so thank you so much and enjoy the rest",
    "start": "607440",
    "end": "609040"
  },
  {
    "text": "of your day",
    "start": "609040",
    "end": "611920"
  }
]