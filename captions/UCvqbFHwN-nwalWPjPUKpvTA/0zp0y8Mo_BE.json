[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "okay so thank you all for coming oh my my name is Jonathan Bracken I'm a",
    "start": "60",
    "end": "6720"
  },
  {
    "text": "software engineer that works for IBM but I'm also maintainer on the service",
    "start": "6720",
    "end": "11759"
  },
  {
    "text": "catalog or the Service Catalog sig here today to talk to you about Service",
    "start": "11759",
    "end": "18840"
  },
  {
    "text": "Catalog now hopefully you all attended the intro on Tuesday because I'm going to be making some assumptions about at",
    "start": "18840",
    "end": "24449"
  },
  {
    "text": "least a basic working knowledge of what Service Catalog is and why you would want to use what one that said what does",
    "start": "24449",
    "end": "32640"
  },
  {
    "start": "30000",
    "end": "106000"
  },
  {
    "text": "this talk gonna be about so I'm gonna start by going in a little bit more in depth about AHS bappy the open service",
    "start": "32640",
    "end": "39210"
  },
  {
    "text": "broker API exactly how do we use it what are some of the you know the underlying",
    "start": "39210",
    "end": "45329"
  },
  {
    "text": "cruft how it works I'm gonna talk a little bit about how we've architected",
    "start": "45329",
    "end": "50700"
  },
  {
    "text": "Service Catalog what the thing actually is how it works some of the design",
    "start": "50700",
    "end": "56190"
  },
  {
    "text": "challenges we faced in implementing it upgrading it and I'm going to sort of",
    "start": "56190",
    "end": "61710"
  },
  {
    "text": "talk a little bit about what we the sig have done recently some features we've implemented recently and I'm gonna",
    "start": "61710",
    "end": "67409"
  },
  {
    "text": "finish up by talking about what our plans for the immediate future are what does this talk not going to be about so",
    "start": "67409",
    "end": "73979"
  },
  {
    "text": "like I said this is not going to be an introduction to Service Catalog I'm trying really come in here with some assumptions that you already know why",
    "start": "73979",
    "end": "81479"
  },
  {
    "text": "would you want to use Service Catalog why you want to use it in connection to your afferent and kubernetes and at the",
    "start": "81479",
    "end": "86880"
  },
  {
    "text": "same time I'm also hopefully not going to get into too much of the nitty-gritty implementation details we don't really",
    "start": "86880",
    "end": "92280"
  },
  {
    "text": "have the time or space to do that here that said if you are interested in integrating implementation details",
    "start": "92280",
    "end": "98369"
  },
  {
    "text": "please feel free to come up and say hi to me after the talk or show up to one of our Sigma tangs okay so gonna get",
    "start": "98369",
    "end": "106290"
  },
  {
    "start": "106000",
    "end": "284000"
  },
  {
    "text": "right in Oz bappy as we like to call it the open service Berkeley API is a specification for spec or API that",
    "start": "106290",
    "end": "114119"
  },
  {
    "text": "allows the automated deployment management and use of services and what do I mean when I say services I don't",
    "start": "114119",
    "end": "120000"
  },
  {
    "text": "really mean it in me like whom in any sense this is more of a generic something that runs somewhere and is",
    "start": "120000",
    "end": "125070"
  },
  {
    "text": "accessible at a web address and what it does can is pretty much up to the",
    "start": "125070",
    "end": "131640"
  },
  {
    "text": "leftism exercise to the user it could be sort of the archetypal example we use is",
    "start": "131640",
    "end": "137400"
  },
  {
    "text": "a relational database so you have some app that's a cloud native app 12 factor",
    "start": "137400",
    "end": "144060"
  },
  {
    "text": "app doesn't have persistent anything needs some place to store your data so wouldn't it be nice if someone would",
    "start": "144060",
    "end": "150180"
  },
  {
    "text": "deploy a database for you so you didn't have to manage it or you you know care so let's sort of the archetypal example",
    "start": "150180",
    "end": "156270"
  },
  {
    "text": "of what ozb app is trying to solve to abstract the creation and management of",
    "start": "156270",
    "end": "161610"
  },
  {
    "text": "that database away from the app developer so they don't have to know or care or worry about it",
    "start": "161610",
    "end": "168000"
  },
  {
    "text": "that said I can be used for a lot of other things it could be used for like I",
    "start": "168000",
    "end": "173190"
  },
  {
    "text": "said a relational database it could be used to manage subscriptions to some sort of public facing API that you need",
    "start": "173190",
    "end": "179070"
  },
  {
    "text": "for your app so that could be something like a message queue or a payment service or anything it could be",
    "start": "179070",
    "end": "186300"
  },
  {
    "text": "something even more complex like an auto scaling service which reaches back into the platform that your application is",
    "start": "186300",
    "end": "192209"
  },
  {
    "text": "running on and scales your app that's using the service up and down dynamically based on your workload so",
    "start": "192209",
    "end": "198660"
  },
  {
    "text": "anything that can be decomposed into the endpoints could be written as a ODS bappy service and that versatility is",
    "start": "198660",
    "end": "205739"
  },
  {
    "text": "kind of one of the one of the strengths of why we're hoping to get people to use Service Catalog literally speaking like",
    "start": "205739",
    "end": "212610"
  },
  {
    "text": "I said it's an API so the client side of the API is implemented by service catalog that's what we do the server",
    "start": "212610",
    "end": "218220"
  },
  {
    "text": "side is implemented by a service provider as a broker so this could be",
    "start": "218220",
    "end": "223250"
  },
  {
    "text": "one broker that provides a specific service like Jonathan's my sequel",
    "start": "223250",
    "end": "228810"
  },
  {
    "text": "database shop a lot of the large cloud providers like Google or Amazon implement a broker that plugs into all",
    "start": "228810",
    "end": "235620"
  },
  {
    "text": "of the available services on their cloud so it's you know good for things both",
    "start": "235620",
    "end": "243150"
  },
  {
    "text": "big and small and then the three endpoints we're going to be focusing on today there's a couple more but these are the important ones are get catalog",
    "start": "243150",
    "end": "249810"
  },
  {
    "text": "provision service buy and service so get haggle log happens once at the very beginning when you register the broker",
    "start": "249810",
    "end": "255989"
  },
  {
    "text": "with kubernetes so this says hey broker what are all the services you offer it returns a list and we we should keep",
    "start": "255989",
    "end": "261570"
  },
  {
    "text": "that in store that's somewhere and then when a user wants to create an instance of a servus they say we say hey broker",
    "start": "261570",
    "end": "267480"
  },
  {
    "text": "provision your service and we pass some date along with it and then when something actually wants to use that service instance we create it's called a",
    "start": "267480",
    "end": "274050"
  },
  {
    "text": "binding so we say hey service broker creates binding for that service since since we told you to create a little while ago and it'll be like okay and",
    "start": "274050",
    "end": "280680"
  },
  {
    "text": "give us some credentials that we can use to access that service this is what the",
    "start": "280680",
    "end": "286650"
  },
  {
    "start": "284000",
    "end": "418000"
  },
  {
    "text": "resource types that we have implements it look like so it's a collection of five resource types that correspond",
    "start": "286650",
    "end": "292380"
  },
  {
    "text": "closely with the internal abstractions that the OSP API uses so we have a cluster service broker it's a cluster",
    "start": "292380",
    "end": "298770"
  },
  {
    "text": "wide resource that represents a single broker running outside the cluster somewhere for an example my isequal",
    "start": "298770",
    "end": "304710"
  },
  {
    "text": "broker cluster service class is a single category of services offered by that broker so in this continuing example",
    "start": "304710",
    "end": "310620"
  },
  {
    "text": "that service class would be my sequel databases and then that class will have",
    "start": "310620",
    "end": "315750"
  },
  {
    "text": "one or more service plans and these are can be different flavors different SLA is offered by that service so in the",
    "start": "315750",
    "end": "322830"
  },
  {
    "text": "example of my sequel databases that could be different sizes of my sequel database is offered it could be you know",
    "start": "322830",
    "end": "329340"
  },
  {
    "text": "different SLA guarantees like this one's guaranteed to be replicated you know five instances across two AZ's whereas",
    "start": "329340",
    "end": "335820"
  },
  {
    "text": "this one's a single instance running in one place that's really up to the the broker author and how to how to use that",
    "start": "335820",
    "end": "342030"
  },
  {
    "text": "what different plans they want to offer to the users a service instance is a single instantiation of a specific class",
    "start": "342030",
    "end": "348870"
  },
  {
    "text": "and plan combination so if I want to go and create my sequel database I",
    "start": "348870",
    "end": "354150"
  },
  {
    "text": "provision an instant let's call it Jonathan's 100mb my sequel database so cuz that's the plan and class I chose I",
    "start": "354150",
    "end": "360720"
  },
  {
    "text": "would go talk to the broker of the broker would create that doing however it wants it's really not up to the",
    "start": "360720",
    "end": "367169"
  },
  {
    "text": "platform to care about how it actually does what it does so this could be",
    "start": "367169",
    "end": "373040"
  },
  {
    "text": "provisioning my sequel database is on bare metal machines that are in a database somewhere this could be carving off a slice of some giant cloud database",
    "start": "373040",
    "end": "380970"
  },
  {
    "text": "somewhere on the internet I don't really know I don't really care it's not my problem",
    "start": "380970",
    "end": "386570"
  },
  {
    "text": "and then when I actually want to access that database to read and write data I need to create a binding so I'll be like",
    "start": "386570",
    "end": "391800"
  },
  {
    "text": "hey broker created binding for this thing and it'll spit back a unique set of credentials to access that database",
    "start": "391800",
    "end": "396960"
  },
  {
    "text": "in the case of this example that's probably URL import where that database is running and then maybe",
    "start": "396960",
    "end": "403680"
  },
  {
    "text": "you usually I'm in a password or usually I'm gonna token or something like that but that's again up to the brook or",
    "start": "403680",
    "end": "409140"
  },
  {
    "text": "author so that could be pretty much anything but username password URL if",
    "start": "409140",
    "end": "415770"
  },
  {
    "text": "that's that's pretty standard so again I'm just gonna walk quickly through the",
    "start": "415770",
    "end": "421290"
  },
  {
    "start": "418000",
    "end": "500000"
  },
  {
    "text": "workflow try and take some of the magical way of how how this actually happens so you have your kubernetes",
    "start": "421290",
    "end": "428160"
  },
  {
    "text": "running and someone probably an admin this probably isn't really a user app",
    "start": "428160",
    "end": "433170"
  },
  {
    "text": "developer level operations going to register a service broker with your your kubernetes running Service Catalog so",
    "start": "433170",
    "end": "438330"
  },
  {
    "text": "we're gonna go out to wherever the brokers running we're gonna hit that catalog endpoint that brokers going to",
    "start": "438330",
    "end": "444450"
  },
  {
    "text": "return back some catalog of services that it offers and we're going to store that locally so that when the user wants to provision services they can see that",
    "start": "444450",
    "end": "451430"
  },
  {
    "text": "so some user is gonna say create me a service instance we're gonna go and ask",
    "start": "451430",
    "end": "456690"
  },
  {
    "text": "the broker hey create service instance fubar and it's going to provision something and its back-end and return",
    "start": "456690",
    "end": "462810"
  },
  {
    "text": "yeah that's things been created the user that is going to deploy some application on kubernetes so this is a pod running",
    "start": "462810",
    "end": "469620"
  },
  {
    "text": "somewhere running their application doing whatever they want and then the user is going to create a binding for",
    "start": "469620",
    "end": "474990"
  },
  {
    "text": "that service instance so we're gonna go we're gonna talk to the broker or create a binding it's going to give us the",
    "start": "474990",
    "end": "480540"
  },
  {
    "text": "credentials back and we're gonna insert that and a community secret somewhere",
    "start": "480540",
    "end": "486080"
  },
  {
    "text": "the easier that is going to attach that secret to their app however they want and then the app can then consume the",
    "start": "486080",
    "end": "492150"
  },
  {
    "text": "credentials in that secret to go and talk to the actual service instance so that's sort of the workflow from",
    "start": "492150",
    "end": "497310"
  },
  {
    "text": "beginning to end okay so now I'm gonna",
    "start": "497310",
    "end": "503550"
  },
  {
    "start": "500000",
    "end": "597000"
  },
  {
    "text": "take a step back a bit and talk about some of the design issues that we faced whoa creating service catalog Service",
    "start": "503550",
    "end": "510120"
  },
  {
    "text": "Catalog is kind of in a weird spot because it's a it's a communities incubation project but it's also been around for a while it's coming up on I'm",
    "start": "510120",
    "end": "516599"
  },
  {
    "text": "thinking our two-year mark at this point so a lot of the things that the extension points for kubernetes that",
    "start": "516599",
    "end": "522960"
  },
  {
    "text": "available today didn't exist when we started working on it so for instance",
    "start": "522960",
    "end": "528210"
  },
  {
    "text": "the one of the first questions we get usually is why don't you use see IDs and that's because well see IDs didn't exist when we",
    "start": "528210",
    "end": "533760"
  },
  {
    "text": "started TPR is existed but we're kind of weird and janky so we didn't want to use them so we ended up doing is we wrote",
    "start": "533760",
    "end": "541650"
  },
  {
    "text": "our own API server we extended the API server offered by API machinery define",
    "start": "541650",
    "end": "547980"
  },
  {
    "text": "our own custom resources we usually run our own at sea to store all our junk in",
    "start": "547980",
    "end": "553070"
  },
  {
    "text": "which was decided mostly for security reasons they didn't want us to have access to the main Kubb at CD running",
    "start": "553070",
    "end": "559700"
  },
  {
    "text": "for us to storage uncton and then we use api aggregation to sort of suture",
    "start": "559700",
    "end": "565050"
  },
  {
    "text": "ourselves into the cube api server namespace so that whenever the main",
    "start": "565050",
    "end": "570720"
  },
  {
    "text": "queue API server receives a request for one of our resource types cluster service broker those things I showed you earlier it just forwards the request to",
    "start": "570720",
    "end": "576990"
  },
  {
    "text": "by our API server and we handle it so this allows seamless interaction with our resource types as if they were",
    "start": "576990",
    "end": "582210"
  },
  {
    "text": "mainline kubernetes resource types you can back then with Kubb CTL create them delete them update them just like you",
    "start": "582210",
    "end": "588450"
  },
  {
    "text": "would any normal kubernetes resource although we have a CLI for some custom",
    "start": "588450",
    "end": "594780"
  },
  {
    "text": "interaction I'll talk about that in a minute the other issue is we're sort of at a",
    "start": "594780",
    "end": "600440"
  },
  {
    "start": "597000",
    "end": "693000"
  },
  {
    "text": "unfortunate cross point between two API is sort of the main like kubernetes way of doing things and AHS bappy itself",
    "start": "600440",
    "end": "607280"
  },
  {
    "text": "which has led to a couple problems one is goods versus names so in kubernetes names of objects are",
    "start": "607280",
    "end": "615120"
  },
  {
    "text": "fixed and immutable you say this is the name of this object when it's created and that's it you can't change it can't",
    "start": "615120",
    "end": "621990"
  },
  {
    "text": "be updated if you create something with a different name that's a entirely different resource and ahs bappy things",
    "start": "621990",
    "end": "627090"
  },
  {
    "text": "a little bit different names are subject to change also each resource has a",
    "start": "627090",
    "end": "633210"
  },
  {
    "text": "couple different things that could be considered the name they usually have an external name which is something human",
    "start": "633210",
    "end": "638610"
  },
  {
    "text": "readable and then they have an ID which is a good which is more how you're supposed to refer to it so it's kind of",
    "start": "638610",
    "end": "646380"
  },
  {
    "text": "confusing each of our resources kind of has three different things that could be considered the name that was one of the impetus behind writing around CLI sv cat",
    "start": "646380",
    "end": "653810"
  },
  {
    "text": "because we really want users to interact with the extra AHS bappy names of these resources rather than the kubernetes",
    "start": "653810",
    "end": "659940"
  },
  {
    "text": "name because they don't really necessarily care that they're interacting with my sequel fubar XYZ",
    "start": "659940",
    "end": "665990"
  },
  {
    "text": "they just want a my sequel database so that's probably what the external names going to be that's probably what they",
    "start": "665990",
    "end": "671959"
  },
  {
    "text": "actually care about and this is just sort of an ongoing point of contention",
    "start": "671959",
    "end": "678020"
  },
  {
    "text": "for us additionally because the restrictions and forced on kubernetes names and the restrictions enforced on",
    "start": "678020",
    "end": "683810"
  },
  {
    "text": "the Oz bat the equivalents of our resource types are different so we are you know constantly keeping up with",
    "start": "683810",
    "end": "689300"
  },
  {
    "text": "those trying to translate them and make sure they play nice with each other on",
    "start": "689300",
    "end": "695149"
  },
  {
    "start": "693000",
    "end": "770000"
  },
  {
    "text": "additional that because we interact with these brokers with our external with kubernetes entirely we can have some",
    "start": "695149",
    "end": "700790"
  },
  {
    "text": "issues with synchronization a user set goes to kubernetes and says you know update this resource with this field and",
    "start": "700790",
    "end": "706880"
  },
  {
    "text": "kubernetes is like yes you're allowed to access that resource done eventually the world will come to look like what you",
    "start": "706880",
    "end": "713180"
  },
  {
    "text": "wanted and that's good in Maine kubernetes because kubernetes is the master of its own domain it can change",
    "start": "713180",
    "end": "719750"
  },
  {
    "text": "anything at launch - however with us were subject to the whims of the broker",
    "start": "719750",
    "end": "724910"
  },
  {
    "text": "that we eventually have to go and talk to which it might not necessarily agree with what you asked it to do this is",
    "start": "724910",
    "end": "731029"
  },
  {
    "text": "source of ongoing contention especially with things like delete which are not rollback able so like I said this is",
    "start": "731029",
    "end": "738860"
  },
  {
    "text": "just sort of an ongoing kind of contention with us a couple things in",
    "start": "738860",
    "end": "744290"
  },
  {
    "text": "our API are sort of not very Kubb like they sort of follow more imperative flow",
    "start": "744290",
    "end": "749870"
  },
  {
    "text": "because we're you know we're subject to what the broker allows us to do or it doesn't allow us to do so this can be",
    "start": "749870",
    "end": "756290"
  },
  {
    "text": "kind of weird when interacting with some of our resource types again like I said we implemented our CLI to sort of",
    "start": "756290",
    "end": "762649"
  },
  {
    "text": "obfuscated lists away to the use from the users so the user doesn't necessarily have to care about a lot of these directly okay so now I'm gonna",
    "start": "762649",
    "end": "772970"
  },
  {
    "start": "770000",
    "end": "825000"
  },
  {
    "text": "jump right into some of the recent work we've done as a cig so first I'm going to talk about service curation so",
    "start": "772970",
    "end": "778959"
  },
  {
    "text": "because our resource types are global for instance we only have one resource type called service classes that's used",
    "start": "778959",
    "end": "785029"
  },
  {
    "text": "to represent all service classes available on the clusters this could be my sequel databases MongoDB s Postgres",
    "start": "785029",
    "end": "792529"
  },
  {
    "text": "sql's you know all of the various services offered on your cluster are represented by this one resource type",
    "start": "792529",
    "end": "797990"
  },
  {
    "text": "which means our back can't easily manage access to a specific subcategory of services because you",
    "start": "797990",
    "end": "806390"
  },
  {
    "text": "either you know have access to all the sort of classes or none of them or whatever so to make it easier for",
    "start": "806390",
    "end": "814790"
  },
  {
    "text": "cluster operators to restrict or grant access to specific things we've implanted a couple features namespace",
    "start": "814790",
    "end": "821240"
  },
  {
    "text": "brokers and catalog restrictions what does that mean okay so this is what a normal cluster",
    "start": "821240",
    "end": "827630"
  },
  {
    "start": "825000",
    "end": "890000"
  },
  {
    "text": "service broker looks like I have two service brokers each with one service each of those service is represented an",
    "start": "827630",
    "end": "834620"
  },
  {
    "text": "inside service catalog as a cluster service object that is visible to all users",
    "start": "834620",
    "end": "839960"
  },
  {
    "text": "and if I were to restrict access to cluster services I would restrict access to both of these that's not what I want",
    "start": "839960",
    "end": "846140"
  },
  {
    "text": "I want user a to be able to see service a and user B to be able to see service B so there's already mechanism in",
    "start": "846140",
    "end": "852380"
  },
  {
    "text": "kubernetes that restricts visibility per users like this and that's namespaces so we've created the ability for users or",
    "start": "852380",
    "end": "859070"
  },
  {
    "text": "operators I should say to register service brokers in specific namespaces such that those services are only",
    "start": "859070",
    "end": "865760"
  },
  {
    "text": "visible to users of that namespace so here I've registered the first service Brook or a namespace say so only user",
    "start": "865760",
    "end": "870950"
  },
  {
    "text": "you can see it and same for service broker B so that's nice it uses a",
    "start": "870950",
    "end": "877760"
  },
  {
    "text": "resource that a lot of kubernetes from users and operators are already familiar with but it's kind of cumbersome if you",
    "start": "877760",
    "end": "886760"
  },
  {
    "text": "really want to restrict like something cluster wide so we also implemented",
    "start": "886760",
    "end": "892070"
  },
  {
    "start": "890000",
    "end": "951000"
  },
  {
    "text": "catalog restrictions which is simply at register time when you're creating the broker when you're adding the broker to",
    "start": "892070",
    "end": "898280"
  },
  {
    "text": "your cluster you can add a set of basically wider black lists to filter",
    "start": "898280",
    "end": "903710"
  },
  {
    "text": "its catalog so here I've registered a service broker which offers two services service a and service B when I created",
    "start": "903710",
    "end": "909470"
  },
  {
    "text": "that broker I said no services named B so it doesn't even show up to any of the",
    "start": "909470",
    "end": "915110"
  },
  {
    "text": "users this isn't necessarily a namespace scope this is global wherever anybody can see this broker and then we also",
    "start": "915110",
    "end": "921470"
  },
  {
    "text": "have I guess this one's white listing so I registered a broker I'm like I only",
    "start": "921470",
    "end": "926840"
  },
  {
    "text": "want service a specifically drops all the other ones so combined these two",
    "start": "926840",
    "end": "932690"
  },
  {
    "text": "features allow a rich feature set there's a lot of possible permutations using these two to allow cluster operators to expose",
    "start": "932690",
    "end": "939860"
  },
  {
    "text": "only certain services or certain categories of those services to certain users the all these examples were based",
    "start": "939860",
    "end": "945230"
  },
  {
    "text": "on service classes but it's also applicable service plans for even more fine-grained control alright and SP cat",
    "start": "945230",
    "end": "953900"
  },
  {
    "start": "951000",
    "end": "1028000"
  },
  {
    "text": "so I've been talking about this a bit SP cats a CLI tool we implemented and made",
    "start": "953900",
    "end": "959180"
  },
  {
    "text": "available for users it's in the same repository as main Service Catalog it's a CLI that basically allows for",
    "start": "959180",
    "end": "965210"
  },
  {
    "text": "crud of our various object types we've tried to follow sort of a kubernetes esque feel control of control flow but",
    "start": "965210",
    "end": "973160"
  },
  {
    "text": "like I said there's a couple extra commands and a couple extra things we do that make more sense for our sort of problem domain like marketplace so if",
    "start": "973160",
    "end": "980900"
  },
  {
    "text": "you're on a cluster with service catalog installed and you want to see what are all of these services I can by that's",
    "start": "980900",
    "end": "987740"
  },
  {
    "text": "sort of a combination of both classes and plans and a couple other object types but I'm not gonna mention those in",
    "start": "987740",
    "end": "993680"
  },
  {
    "text": "a moment so it can be hard to get a picture of all of the things you can get using just coops ETL because you'd be",
    "start": "993680",
    "end": "999470"
  },
  {
    "text": "like coops ETL give me the classes okay but what plans do those classes have okay I'm gonna go get the plans but now",
    "start": "999470",
    "end": "1004720"
  },
  {
    "text": "I have to figure out how those plug into each other to see which things I can get so we wrote a marketplace command that",
    "start": "1004720",
    "end": "1009940"
  },
  {
    "text": "just throws up all that information and human readable format so you can easily see what are the things I can get so in",
    "start": "1009940",
    "end": "1016480"
  },
  {
    "text": "this case this is just a very simple marketplace example I've got my sequel DB's and Murray ndb's and some various",
    "start": "1016480",
    "end": "1022210"
  },
  {
    "text": "plans so I can easily see the stuff I can get future plans",
    "start": "1022210",
    "end": "1031420"
  },
  {
    "start": "1028000",
    "end": "1146000"
  },
  {
    "text": "so I mentioned CRTs didn't exist when we started implementing our thing that's not to say that we aren't interested in",
    "start": "1031420",
    "end": "1036819"
  },
  {
    "text": "them we're trying to get a couple features out the door at the moment so that's currently next on our list of",
    "start": "1036819",
    "end": "1043540"
  },
  {
    "text": "things to do it seems promising and in the event that we do switch to CRTs it",
    "start": "1043540",
    "end": "1049090"
  },
  {
    "text": "should be fairly seamless so currently we have an API server and a controller that we implement assuming we can",
    "start": "1049090",
    "end": "1055780"
  },
  {
    "text": "replace our resource types wholesale with CR DS that would just sort of allow our API server to fold away and be",
    "start": "1055780",
    "end": "1062650"
  },
  {
    "text": "fairly seamless upgrade path I also mentioned synchronization issues between our kubernetes and our brokers",
    "start": "1062650",
    "end": "1068620"
  },
  {
    "text": "that's sort of an ongoing source of interesting and exciting problems so we're always working on that default",
    "start": "1068620",
    "end": "1075700"
  },
  {
    "text": "parameters so right now all the classes and plans that are available to our users are just direct translations of",
    "start": "1075700",
    "end": "1082210"
  },
  {
    "text": "the ones offered by the brokers we're working on allowing operators to specify different permutations of those classes",
    "start": "1082210",
    "end": "1089590"
  },
  {
    "text": "and plans so it could like pre-specify stuff that's configurable on the broker",
    "start": "1089590",
    "end": "1094750"
  },
  {
    "text": "but like pre specify it so the users don't even have to care about that so it's pre-configured for them to allow sort of to create shadow classes or",
    "start": "1094750",
    "end": "1101169"
  },
  {
    "text": "shadow plans that the user would see as the same as the others pod presets so",
    "start": "1101169",
    "end": "1108040"
  },
  {
    "text": "this is something we've been working on on and off for a while we'd like for there to be something that when a",
    "start": "1108040",
    "end": "1114850"
  },
  {
    "text": "binding is created automatically injects the secret into a pod so that the user doesn't have to actually go and manually",
    "start": "1114850",
    "end": "1121120"
  },
  {
    "text": "attach that it's a problem for a couple different issues we basically need to change some stuff in mainline kubernetes",
    "start": "1121120",
    "end": "1126610"
  },
  {
    "text": "to make that possible so we're sort of going back and forth with some of the the core kubernetes SIG's to make that",
    "start": "1126610",
    "end": "1132580"
  },
  {
    "text": "possible also we are technically still a beta project we are not released yet but",
    "start": "1132580",
    "end": "1137590"
  },
  {
    "text": "that should be happening hopefully next year coming up on the very near future on our what not at release okay so",
    "start": "1137590",
    "end": "1148000"
  },
  {
    "start": "1146000",
    "end": "1181000"
  },
  {
    "text": "that's that's pretty much all the material I have I'm gonna go ahead and drop a couple quick links so the first",
    "start": "1148000",
    "end": "1154000"
  },
  {
    "text": "one SV cat dead i/o that's our documentation page if you're interested in using Service Catalog",
    "start": "1154000",
    "end": "1159160"
  },
  {
    "text": "and writing a broker interested in contributing the project that probably the best place to start off second after",
    "start": "1159160",
    "end": "1165669"
  },
  {
    "text": "that is our github repo so that's where all of our actual junk is and the third",
    "start": "1165669",
    "end": "1170890"
  },
  {
    "text": "is the open serviceworker API page so if you're interested in just how the API",
    "start": "1170890",
    "end": "1175929"
  },
  {
    "text": "actually works or what it is or if you want to write a broker that'd be the best place to go and then",
    "start": "1175929",
    "end": "1181840"
  },
  {
    "start": "1181000",
    "end": "1251000"
  },
  {
    "text": "finally I'd like to invite everyone if you're interested in contributing or just use our thing and want to tell us how much it sucks show up to our cig",
    "start": "1181840",
    "end": "1188679"
  },
  {
    "text": "meeting it's every Monday at 1:00 p.m. PST and that's the URL so we'd be more",
    "start": "1188679",
    "end": "1194350"
  },
  {
    "text": "than happy to hear from you and now I'm gonna I feel questions if it really has any of",
    "start": "1194350",
    "end": "1200260"
  },
  {
    "text": "those yes thank you so question about the binding and once you have a service",
    "start": "1200260",
    "end": "1208600"
  },
  {
    "text": "the service binding creates as they have these the address and the username and password but across the lifecycle of the",
    "start": "1208600",
    "end": "1214720"
  },
  {
    "text": "service you might change the password for example so have anybody thought",
    "start": "1214720",
    "end": "1219760"
  },
  {
    "text": "about how can we have this binding remain the source of truth of accessing",
    "start": "1219760",
    "end": "1224980"
  },
  {
    "text": "the service especially around their credentials of Acts isn't it ABI Nintendo's so that's sort of up to",
    "start": "1224980",
    "end": "1232810"
  },
  {
    "text": "the broker so every time you create a binding it creates a unique it's supposed to create a unique set of",
    "start": "1232810",
    "end": "1238330"
  },
  {
    "text": "credentials so that that bindings not necessarily like a pointer in something existing somewhere outside it's supposed",
    "start": "1238330",
    "end": "1244900"
  },
  {
    "text": "to be its own sort of self-contained thing there are people have expressed a desire for a live updated binding but",
    "start": "1244900",
    "end": "1252760"
  },
  {
    "start": "1251000",
    "end": "1352000"
  },
  {
    "text": "that has a couple issues just with the current way the the API works sounds",
    "start": "1252760",
    "end": "1258730"
  },
  {
    "text": "like that I wants to well yeah in the OPO in the open-source program yeah working group we have talked about Crianza rotation type stuff",
    "start": "1258730",
    "end": "1265480"
  },
  {
    "text": "we just haven't forgot the right way to do it yet but it does come up quite often so it is it requirement we are thinking about because it ties back to",
    "start": "1265480",
    "end": "1273400"
  },
  {
    "text": "putting it in a secret so again it's medically put a secret which is awesome but again I want to make sure that that",
    "start": "1273400",
    "end": "1279640"
  },
  {
    "text": "entire life cycle as updated or we almost or somebody has to go in and manually change the secret after the",
    "start": "1279640",
    "end": "1287740"
  },
  {
    "text": "change the password and the whole idea is they don't see all this process that just transparent for them so that's",
    "start": "1287740",
    "end": "1295150"
  },
  {
    "text": "exactly why we haven't solved it yet it's not an easy problem yes",
    "start": "1295150",
    "end": "1299400"
  },
  {
    "text": "hi I have a couple questions one is we",
    "start": "1306890",
    "end": "1312720"
  },
  {
    "text": "were looking at our company for something that we'll be able to hold all the services not just the sort of",
    "start": "1312720",
    "end": "1320010"
  },
  {
    "text": "platform managed services so looking out you know we saw references in on the",
    "start": "1320010",
    "end": "1325200"
  },
  {
    "text": "pivotal website to user defined services so for example we might not only be",
    "start": "1325200",
    "end": "1332040"
  },
  {
    "text": "using a cloud provider services but we might want a mechanism for registering everything available within the",
    "start": "1332040",
    "end": "1338910"
  },
  {
    "text": "enterprise and then potentially getting users to be able to bind in the same way",
    "start": "1338910",
    "end": "1344640"
  },
  {
    "text": "to those enterprise specific services so I was wondering if you have you know",
    "start": "1344640",
    "end": "1349770"
  },
  {
    "text": "looked into anything like that case something that's the question I'm gonna back up a bit just for the benefit",
    "start": "1349770",
    "end": "1354960"
  },
  {
    "start": "1352000",
    "end": "1485000"
  },
  {
    "text": "everybody so he mentioned something called user defined services so this is sort of a secret run around the end sort",
    "start": "1354960",
    "end": "1361260"
  },
  {
    "text": "of pocket case of Oz bappy so user defined services are a thing that originated in cloud foundry where rather",
    "start": "1361260",
    "end": "1367110"
  },
  {
    "text": "than going registering or broker it spits its classes and plans about out at me and then I I create a permutation of",
    "start": "1367110",
    "end": "1374220"
  },
  {
    "text": "his classes and plans what if I were to create a service instance that didn't have a class plan or broker and the most",
    "start": "1374220",
    "end": "1382169"
  },
  {
    "text": "common use case you'd want to do this is say I have some legacy thing maybe a",
    "start": "1382169",
    "end": "1387179"
  },
  {
    "text": "database that has all my legacy data and I want to be able to manage it using the odds bappy lifecycle but I don't have a",
    "start": "1387179",
    "end": "1392549"
  },
  {
    "text": "broker for it and it's also pre exists somewhere so I want to be able to create a service instance that points to that",
    "start": "1392549",
    "end": "1399390"
  },
  {
    "text": "thing but doesn't necessarily have like a broker managing my interaction with it and the answer is yes that's currently",
    "start": "1399390",
    "end": "1406440"
  },
  {
    "text": "something we're actively working on the PR is open it's it's being going back and forth so that's definitely something",
    "start": "1406440",
    "end": "1411630"
  },
  {
    "text": "we're interested in it's something that's gonna be available in the very near future thanks and if you don't mind a follow up question the other thing we",
    "start": "1411630",
    "end": "1417900"
  },
  {
    "text": "were interested in that by the way hits the nail on the head that that's lined up with what I'm talking about",
    "start": "1417900",
    "end": "1423679"
  },
  {
    "text": "so then what about being able to do more kind of client-side declaration of",
    "start": "1423679",
    "end": "1431400"
  },
  {
    "text": "dependency and/or discovery against that so for example what we'd like to do within our company",
    "start": "1431400",
    "end": "1437790"
  },
  {
    "text": "is be able to locate the appropriate service instance say in a given realm or",
    "start": "1437790",
    "end": "1444030"
  },
  {
    "text": "environment based on you know certain properties that might be a little fluid you know kind of label like label like",
    "start": "1444030",
    "end": "1450240"
  },
  {
    "text": "properties so is that clear yet so in other words based on ways that the user",
    "start": "1450240",
    "end": "1459000"
  },
  {
    "text": "an app characterizes their need like I need a high memory thing or a low memory",
    "start": "1459000",
    "end": "1466200"
  },
  {
    "text": "thing which it would be a property that you know could be registered kind of like a parameter and wore you know",
    "start": "1466200",
    "end": "1473790"
  },
  {
    "text": "system context like this happens to be the dev environment or the prod environment that those kinds of labels",
    "start": "1473790",
    "end": "1480870"
  },
  {
    "text": "could be used like a selector to find the right service instance so the",
    "start": "1480870",
    "end": "1486120"
  },
  {
    "start": "1485000",
    "end": "1612000"
  },
  {
    "text": "problem with that is is that the service instances ultimately aren't up to us they're up to the broker and the like",
    "start": "1486120",
    "end": "1494850"
  },
  {
    "text": "channels we have through communication with the broker are relatively limited there are it's been a topic of",
    "start": "1494850",
    "end": "1500310"
  },
  {
    "text": "discussion in the AHS bappy working group about something like that being able to tag things with specific things",
    "start": "1500310",
    "end": "1506880"
  },
  {
    "text": "that are like meaningful across brokers or across platforms but we haven't come up with a solution of this problem as",
    "start": "1506880",
    "end": "1513090"
  },
  {
    "text": "yet I think Doug has a little bit more to offer on end if I understand your question properly if you want to be able",
    "start": "1513090",
    "end": "1518340"
  },
  {
    "text": "to know in essence parameterize your provision operation there are areas of field on the provision API itself where",
    "start": "1518340",
    "end": "1525780"
  },
  {
    "text": "you can pass in additional parameters exactly for the user to specify things like I know I need it special",
    "start": "1525780",
    "end": "1530880"
  },
  {
    "text": "configuration for this particular instance there is a mechanism to pass that all the way through the broker as it gets provisioned yes",
    "start": "1530880",
    "end": "1537770"
  },
  {
    "text": "Thanks so I saw that part now I want to be able to kind of search for it on the",
    "start": "1537810",
    "end": "1543690"
  },
  {
    "text": "consumer end and locate the right instance okay yeah I think that's gonna",
    "start": "1543690",
    "end": "1551070"
  },
  {
    "text": "be a platform specific issue Service Catalog itself doesn't necessary have that feature right now when you were",
    "start": "1551070",
    "end": "1556650"
  },
  {
    "text": "going to search the list of service instances that are there you basically have to look for it by name that you gave it",
    "start": "1556650",
    "end": "1562260"
  },
  {
    "text": "it is technically a resource in Schuyler brunette is you could take your own labels if you wanted to back it's a little bit dangerous because you're",
    "start": "1562260",
    "end": "1567930"
  },
  {
    "text": "mucking with someone else's you know managed service catalog manage date at that point but it is technically",
    "start": "1567930",
    "end": "1573779"
  },
  {
    "text": "possible usually you just search by name more than anything else but you could twiddle if you really wanted to I also",
    "start": "1573779",
    "end": "1579629"
  },
  {
    "text": "I'm sorry I should have mentioned this earlier Doug my esteemed microphone monkey is one of the chairs of SIG's",
    "start": "1579629",
    "end": "1587220"
  },
  {
    "text": "Service Catalog and also a member of the odds body working group so is the sig",
    "start": "1587220",
    "end": "1593509"
  },
  {
    "text": "interested in or looking at creating ontology zuv services you know the",
    "start": "1593509",
    "end": "1598909"
  },
  {
    "text": "things which come are compatible with my sequel api's or the services which are",
    "start": "1598909",
    "end": "1606799"
  },
  {
    "text": "relational databases or any kind of of ontology",
    "start": "1606799",
    "end": "1611869"
  },
  {
    "text": "so like I said the problem with that is a lot of the stuff required to do",
    "start": "1611869",
    "end": "1618029"
  },
  {
    "start": "1612000",
    "end": "1848000"
  },
  {
    "text": "something like that is sort of on the broker end and we know necessarily control the brokers or the broker",
    "start": "1618029",
    "end": "1625109"
  },
  {
    "text": "authors that is a topic of ongoing discussion in ozb appeal and about being",
    "start": "1625109",
    "end": "1631349"
  },
  {
    "text": "able to say like this is a my sequel broker and have that mean something across brokers and across platforms but",
    "start": "1631349",
    "end": "1637229"
  },
  {
    "text": "as of now I don't think we have any concrete solutions to that sort of problem yeah the closest we've come to",
    "start": "1637229",
    "end": "1642929"
  },
  {
    "text": "that is John alluding to it was the notion of when it broker advertises itself we could say what specification",
    "start": "1642929",
    "end": "1648539"
  },
  {
    "text": "this service adheres to so you could say oh it adheres to my sequel 1.0 and that way the user when it looks at that",
    "start": "1648539",
    "end": "1654479"
  },
  {
    "text": "service can know exactly what kind of operations is there available to it and it sort of gets into that ontology type",
    "start": "1654479",
    "end": "1659999"
  },
  {
    "text": "things slightly that you're talking about",
    "start": "1659999",
    "end": "1663169"
  },
  {
    "text": "[Laughter] um uh Saracen so during I mean like this",
    "start": "1666060",
    "end": "1674830"
  },
  {
    "text": "conference so far there's been a lot of talk about operators um and I know that a dopplers have provided like they've",
    "start": "1674830",
    "end": "1680559"
  },
  {
    "text": "recently written like the able this operator so to create like elastic occasions dynamo DPS and stuff like that",
    "start": "1680559",
    "end": "1687720"
  },
  {
    "text": "what would be the like the way that you guys are pushing forward to create",
    "start": "1687720",
    "end": "1693520"
  },
  {
    "text": "custom resources would that be with service cut logo would that be with like kubernetes operators instead I don't",
    "start": "1693520",
    "end": "1701530"
  },
  {
    "text": "that make sense I think Doug have to fill this one that one's a bit out of my wheelhouse so I think there's a lot of confusion between",
    "start": "1701530",
    "end": "1707110"
  },
  {
    "text": "operators and service brokers stuff and I'm not an operator expert I've only read about them actually more like a",
    "start": "1707110",
    "end": "1712900"
  },
  {
    "text": "over a year ago so I could be getting it wrong but the way I kind of view operators is it's a mechanism to deploy",
    "start": "1712900",
    "end": "1718510"
  },
  {
    "text": "in essence another kubernetes application inside of your cluster to manage other things okay",
    "start": "1718510",
    "end": "1724150"
  },
  {
    "text": "service broker is about talking to services typically services are outside",
    "start": "1724150",
    "end": "1729220"
  },
  {
    "text": "your cluster because criminate already has a mechanism to connect your app to a service running in your cluster so this",
    "start": "1729220",
    "end": "1734500"
  },
  {
    "text": "is more about talking to something outside your cluster operators are running inside your cluster so they're almost two different worlds I'm not",
    "start": "1734500",
    "end": "1740950"
  },
  {
    "text": "quite sure why people mixing the two no",
    "start": "1740950",
    "end": "1747400"
  },
  {
    "text": "so the thing I was referencing was epi I am the a doublet operator does let you create things like dynamo DB's and so",
    "start": "1747400",
    "end": "1752470"
  },
  {
    "text": "like we've written a SP provider that for instance gives you a like a dynamo",
    "start": "1752470",
    "end": "1757600"
  },
  {
    "text": "DB so it's like a like the cost of service class there would be like a dynamo DB for instance and then every",
    "start": "1757600",
    "end": "1764860"
  },
  {
    "text": "service instance you create would give you an instance of a dynamo DB and we're kind of like thinking oh well if there's",
    "start": "1764860",
    "end": "1769990"
  },
  {
    "text": "an operator for a topless that can give you dynamo DPS as well and it's kind of like the same thing if that makes sense",
    "start": "1769990",
    "end": "1776970"
  },
  {
    "text": "thank you that's a refreshing a little bit of memory about why even looked at operators begin with because someone did mention the overlap and I remember",
    "start": "1776970",
    "end": "1783160"
  },
  {
    "text": "talking to somebody over core OS when I first came out with it to see if there was some way to sort of merge the two worlds slightly and the general",
    "start": "1783160",
    "end": "1789520"
  },
  {
    "text": "consensus I got back was mmm not so much right now anyway and I don't know it was because it was a they didn't want to",
    "start": "1789520",
    "end": "1795820"
  },
  {
    "text": "merge the two worlds because they wanted their own thing versus our own thing or whether there really was a functional difference I can't answer that part of",
    "start": "1795820",
    "end": "1801580"
  },
  {
    "text": "the question for time wait why don't you wanna you gotta get you on tape yeah at least if",
    "start": "1801580",
    "end": "1811090"
  },
  {
    "text": "you are going to see all these in the future that would be good to have some kind of convergence there these CR days",
    "start": "1811090",
    "end": "1820030"
  },
  {
    "text": "are just for managing the metadata that Service Catalog is keeping track of it's not met it's not CR DS for the service",
    "start": "1820030",
    "end": "1825070"
  },
  {
    "text": "itself it's a service catalogs metadata so it's maybe slightly different I was",
    "start": "1825070",
    "end": "1841090"
  },
  {
    "text": "just curious if you could go into a little more detail on some of the synchronization problems you guys are seeing and some of the solutions you're",
    "start": "1841090",
    "end": "1846670"
  },
  {
    "text": "looking at for those problems sure so I can talk about the nasty one which is Eric and soluble delete so when you",
    "start": "1846670",
    "end": "1852520"
  },
  {
    "text": "delete an object in kubernetes it marks the deletion timestamp and then things start happening all over the place so in",
    "start": "1852520",
    "end": "1859210"
  },
  {
    "text": "our world that's a problem because I can say I'm gonna delete service instance fubar and it goes you talk to the ED CD",
    "start": "1859210",
    "end": "1865120"
  },
  {
    "text": "it says you're you know authorized to access this object this resource mark the deletion time stamp done and then we",
    "start": "1865120",
    "end": "1871810"
  },
  {
    "text": "go and say hey broker and delete service instance fubar and the broker says no",
    "start": "1871810",
    "end": "1877770"
  },
  {
    "text": "what are what are we supposed to do and",
    "start": "1877770",
    "end": "1883270"
  },
  {
    "text": "that can be a problem for multiple reasons because that now the state and kubernetes we can't roll back from the",
    "start": "1883270",
    "end": "1889120"
  },
  {
    "text": "delete for perhaps this users still getting charged for this thing that still exists on the broker end and like",
    "start": "1889120",
    "end": "1897310"
  },
  {
    "text": "I said that the irreconcilable delete problem we don't actually have a working solution for it right now some of the solutions we've proposed are",
    "start": "1897310",
    "end": "1905490"
  },
  {
    "text": "like I said implement non kubernetes esque things like intercept all incoming",
    "start": "1905490",
    "end": "1910930"
  },
  {
    "text": "delete requests to instead of actually marking the delete timestamp mark a flag called to be deleted on the object spec",
    "start": "1910930",
    "end": "1916690"
  },
  {
    "text": "and then have our own custom controller logic that eventually and results in the deletion timestamp being marked for real",
    "start": "1916690",
    "end": "1924630"
  },
  {
    "text": "things of that like that like I said it's sort of a source of ongoing discussion",
    "start": "1924630",
    "end": "1931110"
  },
  {
    "text": "aren't really any clean answers unfortunately you have to waste",
    "start": "1931920",
    "end": "1938590"
  },
  {
    "text": "synchronization problems effectively of which changing and rolling passwords from the broker side back is probably",
    "start": "1938590",
    "end": "1944590"
  },
  {
    "text": "that's another variant of that effectively so that has an additional problem in that currently under the OSB API spec brokers are intended to be",
    "start": "1944590",
    "end": "1951600"
  },
  {
    "text": "implementable as stateless machines which means the broker unless you like",
    "start": "1951600",
    "end": "1958330"
  },
  {
    "text": "hey I'm talking about broke binding XYZ it doesn't necessarily have to know what you're talking about it doesn't really keep a running track",
    "start": "1958330",
    "end": "1964420"
  },
  {
    "text": "of all the bindings it has out active at that time so yeah life is rough",
    "start": "1964420",
    "end": "1971590"
  },
  {
    "text": "I think we had another one",
    "start": "1971590",
    "end": "1975000"
  },
  {
    "text": "I was just curious from you know end-user perspective I know you said you all are in beta but are you seeing",
    "start": "1977530",
    "end": "1984730"
  },
  {
    "text": "adoption or people like rolling this out to internal teams or okay so we are it's currently a beta product however there",
    "start": "1984730",
    "end": "1992050"
  },
  {
    "text": "are a lot of actual production clusters that already use Service Catalog so myself I work for IBM IBM cloud private",
    "start": "1992050",
    "end": "1998920"
  },
  {
    "text": "I believe use a service catalog and we're currently rolling it out for our public cloud Red Hat openshift I know uses it I don't",
    "start": "1998920",
    "end": "2006240"
  },
  {
    "text": "exactly know all the different flavors of OpenShift but I know they use it in production microsoft azure uses us for",
    "start": "2006240",
    "end": "2012240"
  },
  {
    "text": "their they have their own edger broker and google I believe currently still uses us that's kind of up in the air at",
    "start": "2012240",
    "end": "2019620"
  },
  {
    "text": "the moment cool thank you I think Doug has some more comments I've heard rumors that AWS actually uses it to at least",
    "start": "2019620",
    "end": "2025830"
  },
  {
    "text": "internally not externally I heard rumors of then using internally as well for their stuff rumors though t-that yeah",
    "start": "2025830",
    "end": "2035840"
  },
  {
    "text": "okay anybody else okay thank you all for coming",
    "start": "2035840",
    "end": "2043039"
  }
]