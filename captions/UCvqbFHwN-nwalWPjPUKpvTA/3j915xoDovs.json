[
  {
    "start": "0",
    "end": "77000"
  },
  {
    "text": "right hi hi everyone um I'm really excited to be here I like conferences of this size so um it's much",
    "start": "319",
    "end": "7200"
  },
  {
    "text": "much nicer in my opinion to get to know the people and uh when it's 100 people and not uh 8 000",
    "start": "7200",
    "end": "13920"
  },
  {
    "text": "um so today we'll be talking about build share and run of Wesson using uh Docker",
    "start": "13920",
    "end": "19500"
  },
  {
    "text": "um uh so I'll start by introducing myself and then head over to Michael I'm",
    "start": "19500",
    "end": "24720"
  },
  {
    "text": "Chris krona I'm a director of engineering at Docker in the content group we're responsible for some of the",
    "start": "24720",
    "end": "30720"
  },
  {
    "text": "low-level pieces like runtime build and registry as well as content you'll know of things like Docker official images",
    "start": "30720",
    "end": "36960"
  },
  {
    "text": "Docker verified Publishers and some of the newer things we've been doing at Docker which include desktop extensions",
    "start": "36960",
    "end": "42120"
  },
  {
    "text": "and atomist um Michael okay um thank you Chris yes my name is",
    "start": "42120",
    "end": "47700"
  },
  {
    "text": "Michael Yuan and I'm up",
    "start": "47700",
    "end": "51920"
  },
  {
    "text": "um a founder of a company called the second state but you know more relevant I'm uh",
    "start": "53520",
    "end": "58620"
  },
  {
    "text": "um the maintainer of the water marriage project at cncf um you know um I'm gonna tell you in a",
    "start": "58620",
    "end": "64680"
  },
  {
    "text": "couple minutes after you know um you know why there need another one runtime",
    "start": "64680",
    "end": "71400"
  },
  {
    "text": "outside the bottom time and what other unique features that we have and why we work with stalker so please",
    "start": "71400",
    "end": "77340"
  },
  {
    "start": "77000",
    "end": "216000"
  },
  {
    "text": "all right so when I was thinking about talking today it really got me thinking about why do we want isolation",
    "start": "77340",
    "end": "84119"
  },
  {
    "text": "um and uh it's quite a it's quite a prevalent thing inside a software we have isolation and separation in lots of",
    "start": "84119",
    "end": "90479"
  },
  {
    "text": "different places um the the first case is facilitating reuse and we heard a lot of this earlier",
    "start": "90479",
    "end": "96780"
  },
  {
    "text": "about the component model when you um when you build well-defined interfaces you can create these boxes of value and",
    "start": "96780",
    "end": "104640"
  },
  {
    "text": "reuse them and that's not just for yourself um inside your own company or just you know on your own projects but you can",
    "start": "104640",
    "end": "110340"
  },
  {
    "text": "then share them with other people and that's a really valuable thing it has this compounding effect of not rebuilding everything",
    "start": "110340",
    "end": "117060"
  },
  {
    "text": "um the second one is about sharing compute resources so by isolating your",
    "start": "117060",
    "end": "123540"
  },
  {
    "text": "workload you can share compute resources in different ways this starts with uh you know my dad was an engineer as well",
    "start": "123540",
    "end": "129899"
  },
  {
    "text": "and he he would use punched cards and the scheduling mechanism was literally a piece of paper you write your name on",
    "start": "129899",
    "end": "135780"
  },
  {
    "text": "the list and you get a slot of time and you get to go and run your Punch Cards um that theme in Computing of we want to",
    "start": "135780",
    "end": "141780"
  },
  {
    "text": "use the maximum we can of a shared resource which is compute has continued",
    "start": "141780",
    "end": "147060"
  },
  {
    "text": "except the boundaries have changed a little bit right so um we wanted to find good boundaries",
    "start": "147060",
    "end": "152819"
  },
  {
    "text": "because we we might not necessarily trust the people we're running uh code next to we might not trust our own code",
    "start": "152819",
    "end": "159300"
  },
  {
    "text": "not to pull down somebody else's workload as well like that's another case um where we want to have these well-defined boundaries so you want to",
    "start": "159300",
    "end": "165360"
  },
  {
    "text": "be able to say what what are the capabilities of what I'm running can it hurt other workloads can other workloads",
    "start": "165360",
    "end": "170700"
  },
  {
    "text": "hurt me how do we how do we make sure that that the code doesn't interfere with other code running",
    "start": "170700",
    "end": "176819"
  },
  {
    "text": "and and then ease of delivery of applications I think this is another thing that's really made software unique",
    "start": "176819",
    "end": "182160"
  },
  {
    "text": "in in its velocity is the speed with which we can deliver value to customers if you compare a manufacturing plants or",
    "start": "182160",
    "end": "188940"
  },
  {
    "text": "things like that it takes you know months or years to get things to people whereas in software it's literally seconds and that is an incredibly",
    "start": "188940",
    "end": "195480"
  },
  {
    "text": "powerful again compounding effect that's enabled by isolation and we do that by having well-defined packaging mechanisms",
    "start": "195480",
    "end": "201599"
  },
  {
    "text": "if you know if you have a well-defined box like a shipping container or a container a software container you can",
    "start": "201599",
    "end": "208980"
  },
  {
    "text": "build infrastructure that allows you to deliver much much more quickly and that's a really really powerful thing that isolation and separation enables",
    "start": "208980",
    "end": "216120"
  },
  {
    "start": "216000",
    "end": "348000"
  },
  {
    "text": "so taking a look at some of the isolation techniques that we have in in our domain",
    "start": "216120",
    "end": "221220"
  },
  {
    "text": "um we have kind of a spectrum and there's lots of different ways of doing this so one example on the extreme side",
    "start": "221220",
    "end": "227040"
  },
  {
    "text": "is air gapped this is where you literally don't trust anybody um outside of your compute space and you",
    "start": "227040",
    "end": "233099"
  },
  {
    "text": "make the compromise on that ease of delivery by literally having to physically be next to the machine and to",
    "start": "233099",
    "end": "238319"
  },
  {
    "text": "deploy it but that comes with a bunch of security guarantees uh hardware virtualization",
    "start": "238319",
    "end": "243840"
  },
  {
    "text": "this is kind of the thing that kicked off cloud computing right you no longer need it to plug a computer in or have",
    "start": "243840",
    "end": "249420"
  },
  {
    "text": "access to a data sensor you could use an API I mean this is crazy if you think about it you could you could literally",
    "start": "249420",
    "end": "255239"
  },
  {
    "text": "call an API and create a an instance of compute uh then you know we're at Western day I",
    "start": "255239",
    "end": "261900"
  },
  {
    "text": "have to bring up stack virtualization when you control the runtime in the language you can start looking at what",
    "start": "261900",
    "end": "267060"
  },
  {
    "text": "kind of guarantees what kind of how can we cut this up what what boundaries can we create what interfaces can we create",
    "start": "267060",
    "end": "272580"
  },
  {
    "text": "um to uh to give us these these uh these this isolation in in various different forms um to to improve the software",
    "start": "272580",
    "end": "279840"
  },
  {
    "text": "delivery containers of course I work at Docker I have to bring up containers at some point",
    "start": "279840",
    "end": "284880"
  },
  {
    "text": "um containers are interesting because they leverage the same kernel but they isolate the processes from each other so",
    "start": "284880",
    "end": "290400"
  },
  {
    "text": "um they can't see file system that lets you let them you they can't see each other unless you let them this also gives you some of those guarantees of my",
    "start": "290400",
    "end": "296940"
  },
  {
    "text": "workload won't bring down somebody else's workload you can set up limits in terms of memory and things like that to ensure that",
    "start": "296940",
    "end": "303120"
  },
  {
    "text": "um and then raw processes we kind of defer to the OS to say you handle the boundaries between things um by default",
    "start": "303120",
    "end": "309419"
  },
  {
    "text": "a lot of the time that is it's open bar on the file system within that user's space Mac OS for example it started",
    "start": "309419",
    "end": "315960"
  },
  {
    "text": "locking the standard bits if you touch sensitive things they'll prompt the user for for permission but that's you know this is another box where you can ship a",
    "start": "315960",
    "end": "322080"
  },
  {
    "text": "raw process and you have access to lots of things and then kind of finally on the extreme end you have Dynamic",
    "start": "322080",
    "end": "327539"
  },
  {
    "text": "libraries which have you know well-defined interfaces you can get a header file for example which tells you",
    "start": "327539",
    "end": "333240"
  },
  {
    "text": "exactly what inputs you put in what outputs you get out and you can share",
    "start": "333240",
    "end": "338280"
  },
  {
    "text": "memory inside the process so you can get really high performance um So that obviously brings up the",
    "start": "338280",
    "end": "343860"
  },
  {
    "text": "question well which which isolation mechanism which of these tools should I use and I get to pull out the Simpsons",
    "start": "343860",
    "end": "349500"
  },
  {
    "start": "348000",
    "end": "418000"
  },
  {
    "text": "Meme here um it really it really just depends um and it's kind of hard when I started",
    "start": "349500",
    "end": "355500"
  },
  {
    "text": "this talk I thought I could throw up something like this and I have to quickly push it down arrow before you try to take a photo of that I thought I",
    "start": "355500",
    "end": "361020"
  },
  {
    "text": "could put up three three dimensions and say you know if you care about isolation uh use this if you care about ease of",
    "start": "361020",
    "end": "367680"
  },
  {
    "text": "use these are the ones that are better or if you care about resources like utilization use that but I realized quite quickly it's much much more",
    "start": "367680",
    "end": "373380"
  },
  {
    "text": "nuanced than that and that's why we have the cncf landscape this is but it's I I showed this in every talk",
    "start": "373380",
    "end": "380280"
  },
  {
    "text": "when I talk from the cncf um it's everybody laughs because it's so painful um and part of it is because developers",
    "start": "380280",
    "end": "386580"
  },
  {
    "text": "love building tools but the other part of it is there is no one Perfect Tool in any domain and I feel like it's our",
    "start": "386580",
    "end": "392880"
  },
  {
    "text": "especially at docker's job to try and help people navigate this landscape um if you show this to a developer who's",
    "start": "392880",
    "end": "399120"
  },
  {
    "text": "just trying to ship a feature what are they supposed to do with this this is crazy like we need to help them navigate",
    "start": "399120",
    "end": "404639"
  },
  {
    "text": "the space with the right tools to solve the problems that they have um so the theme of this should be pick",
    "start": "404639",
    "end": "410940"
  },
  {
    "text": "the right tool for the job that you're doing and with that I'll hand over to Michael who can talk a little bit more about Wesson",
    "start": "410940",
    "end": "418039"
  },
  {
    "start": "418000",
    "end": "510000"
  },
  {
    "text": "all right thank you Chris so when to use water and we are quickly go through those uh those points of course running",
    "start": "418380",
    "end": "425520"
  },
  {
    "text": "something in the browser that's original use case right um if you're building application from source and output bottom that startup is",
    "start": "425520",
    "end": "432539"
  },
  {
    "text": "uh you know prerequisite right you know you have you have to have a language that can output bottom you know if you",
    "start": "432539",
    "end": "438360"
  },
  {
    "text": "don't like in python or JavaScript you have to have a wrong time that embedded in waso and uh what I find most interesting is",
    "start": "438360",
    "end": "445319"
  },
  {
    "text": "something that need a quick startup time so you know um that's the serverless use case you know where you know if you look",
    "start": "445319",
    "end": "451620"
  },
  {
    "text": "at AWS Lambda you know one of the biggest complaints that the the codes are too slow so how do you deal with",
    "start": "451620",
    "end": "456720"
  },
  {
    "text": "that you can have warming up instance right you know however with awesome like we have seen inferior Spain you know",
    "start": "456720",
    "end": "461940"
  },
  {
    "text": "that you can just spin up as a requests come in you know so you do don't need warm up and even if in cases where we're",
    "start": "461940",
    "end": "468479"
  },
  {
    "text": "going to talk about in a minute where you do have long lived servers you know like a CRM you know something like that",
    "start": "468479",
    "end": "473580"
  },
  {
    "text": "one takes a lot less space than say you know a container plus Linux kernel and",
    "start": "473580",
    "end": "479340"
  },
  {
    "text": "all that right you know so for shortly you know so for something I need startup time whether it's start on demand or",
    "start": "479340",
    "end": "485880"
  },
  {
    "text": "it's a web lab instance while both offers significant advantages and uh",
    "start": "485880",
    "end": "491400"
  },
  {
    "text": "then there's we have seen from early talks about component model you know there's a lot of security considerations",
    "start": "491400",
    "end": "496800"
  },
  {
    "text": "that's especially relevant today with with all the um you know supply chain software supply chain security issues",
    "start": "496800",
    "end": "502379"
  },
  {
    "text": "and require a small incremental overhead you know decide wasn't can run in a much smaller package than anything and then",
    "start": "502379",
    "end": "509099"
  },
  {
    "text": "most discount creditors and when not use wasm of course you know application",
    "start": "509099",
    "end": "514860"
  },
  {
    "start": "510000",
    "end": "593000"
  },
  {
    "text": "requirement is trading however there's uh um you know um as we have also seen there's uh you",
    "start": "514860",
    "end": "520080"
  },
  {
    "text": "know threading proposals in in webassembly already and it was managed",
    "start": "520080",
    "end": "525120"
  },
  {
    "text": "we were already we already implemented that you know that's uh um you know but currently this is one of the limitations",
    "start": "525120",
    "end": "531000"
  },
  {
    "text": "but I also want to point out that if you look at common server-side languages like JavaScript it's also single threaded it's just another task and a",
    "start": "531000",
    "end": "537720"
  },
  {
    "text": "single thread right you know and the second is a garbage languages at this moment",
    "start": "537720",
    "end": "543060"
  },
  {
    "text": "um you know I'm I'm pleasantly surprised to see fermian's presentation that you know Java actually runs and there's a",
    "start": "543060",
    "end": "549240"
  },
  {
    "text": "way to get around in DC you know because the short-lived application you don't need this in and I thought that was uh you know very interesting and then the",
    "start": "549240",
    "end": "555779"
  },
  {
    "text": "the third time the third thing is that um you know that's what to borrow all the industry term is that is it's",
    "start": "555779",
    "end": "562019"
  },
  {
    "text": "opinionated setup you know so awesome is that it needs something that you have to develop based on um you know um its",
    "start": "562019",
    "end": "569760"
  },
  {
    "text": "ideas um you know so very much unlike you know um on the docker that's um you know that",
    "start": "569760",
    "end": "575160"
  },
  {
    "text": "has been popular for a very long time you know you can't just take a Linux application and Iran wants them so you have to uh you know use a different set",
    "start": "575160",
    "end": "582060"
  },
  {
    "text": "of tools that also give rise to the need for developer tools so you know I want",
    "start": "582060",
    "end": "587519"
  },
  {
    "text": "to give you a quick demo you know that's um to show you some of the things that we have done in the developer tuning",
    "start": "587519",
    "end": "592680"
  },
  {
    "text": "area so um the application I want to show you is a microservice you know um",
    "start": "592680",
    "end": "597839"
  },
  {
    "start": "593000",
    "end": "813000"
  },
  {
    "text": "so if you look at um so it's written in Rust if you look at this code you know it's a it's a Tokyo application it's a",
    "start": "597839",
    "end": "604800"
  },
  {
    "text": "normally it will not compile to awesome or you know it will not run or wasn't but I'll tell you in a minute how we did",
    "start": "604800",
    "end": "610200"
  },
  {
    "text": "it so make it run on Watson you know so it's a Tokyo application let's start up a web server the lessons at port 8080 so",
    "start": "610200",
    "end": "617100"
  },
  {
    "text": "it's a it's using the standard Tokyo Mio and Hyper library in Rust and what it does is that when request comes in it",
    "start": "617100",
    "end": "624000"
  },
  {
    "text": "asynchronously start a Handler method called classify you know what it does is that does AI inference it calls a",
    "start": "624000",
    "end": "631019"
  },
  {
    "text": "tensorflow model to look at the input image and then generate the output right you know so it's uh it's uh it's what I",
    "start": "631019",
    "end": "637620"
  },
  {
    "text": "just said it's a single shredded automatic tasking you know it's utilize the non-blocking io that's available in",
    "start": "637620",
    "end": "642959"
  },
  {
    "text": "a in a in a system so it's uh so you know it's uh while the data comes in it",
    "start": "642959",
    "end": "648240"
  },
  {
    "text": "doesn't have to wait it can it can handle the next request and the classify method is not difficult either if you",
    "start": "648240",
    "end": "653940"
  },
  {
    "text": "have familiar with machine learning or AI inference on python you'll find it's you know it's um it's very easy to",
    "start": "653940",
    "end": "660839"
  },
  {
    "text": "follow even in a raster language so what it does is that it has a request body so you know because it's Handler method so",
    "start": "660839",
    "end": "666899"
  },
  {
    "text": "it gives you the HTTP body and then you know you are supposed to return the HTTP",
    "start": "666899",
    "end": "672120"
  },
  {
    "text": "response right um and uh um so in in the messages first loads the tensorflow model which is the",
    "start": "672120",
    "end": "678060"
  },
  {
    "text": "mobile analysis image classification model and then it gets the image from the from",
    "start": "678060",
    "end": "683399"
  },
  {
    "text": "um here it's a post classifier it gets the image itself from the HTTP body and",
    "start": "683399",
    "end": "688980"
  },
  {
    "text": "then transform that into a tensor and then runs the tensor model through the uh through the tensorflow runtime which",
    "start": "688980",
    "end": "695459"
  },
  {
    "text": "gets back another tensor that tensor is a list of probabilities of different image labels of their probability in the",
    "start": "695459",
    "end": "701820"
  },
  {
    "text": "in a file then you look up your English names for that label and then print it out you know so that's all there to it",
    "start": "701820",
    "end": "708540"
  },
  {
    "text": "you know that's uh that's the entire microservice that does um you know um AI inference on uh um you could do",
    "start": "708540",
    "end": "716760"
  },
  {
    "text": "that on a very small device so let's uh let's see the action so I'm going to do live demo here you know so you know so",
    "start": "716760",
    "end": "724380"
  },
  {
    "text": "uh to see if it works although I did  a lot you know and cheat a little so that you know I cache the the cargo",
    "start": "724380",
    "end": "730320"
  },
  {
    "text": "build from last time so if I do the cargo build you know I can build this um yeah you know so um but because",
    "start": "730320",
    "end": "737459"
  },
  {
    "text": "there's um because it's everything's up to date right so I can build this um rust application into awesome and then I",
    "start": "737459",
    "end": "744959"
  },
  {
    "text": "use the Wasatch runtime you know what's the major runtime supports the whole wasi-earned standards you know so it",
    "start": "744959",
    "end": "751260"
  },
  {
    "text": "does tensorflow high torch open Rhino and all that so if I if I run this what",
    "start": "751260",
    "end": "756480"
  },
  {
    "text": "it does is that it lessens on the port 8080 you know that's uh um it starts the server inside water it's not it's not a",
    "start": "756480",
    "end": "764160"
  },
  {
    "text": "host function that that embeds one but inside volume is a starter server and then on this side under the terminal I",
    "start": "764160",
    "end": "770160"
  },
  {
    "text": "encourage the server I can send it a picture send the picture and it would uh return immediately because this is the native",
    "start": "770160",
    "end": "776940"
  },
  {
    "text": "you know um in tensorflow so what it says is uh the pictures there's a high confidence that the picture contains a",
    "start": "776940",
    "end": "783180"
  },
  {
    "text": "military uniform so what is that picture you know so um that's the picture if someone is",
    "start": "783180",
    "end": "789240"
  },
  {
    "text": "something that everybody has seen in the past you know it's uh",
    "start": "789240",
    "end": "794240"
  },
  {
    "text": "it's Dr Grace Harper right you know she's a um you know in her U.S Navy",
    "start": "795360",
    "end": "801300"
  },
  {
    "text": "uniform so that's um the entire demo for for water match and so",
    "start": "801300",
    "end": "808920"
  },
  {
    "text": "let me yeah so just to summarize you know um what is",
    "start": "808920",
    "end": "816480"
  },
  {
    "start": "813000",
    "end": "944000"
  },
  {
    "text": "water match what's the message is awesome runtime in cncf it's uh it's com it's compliant with all the",
    "start": "816480",
    "end": "822240"
  },
  {
    "text": "um I say published was on standards and it's also a strive to implement a lot of those um you know standards in the",
    "start": "822240",
    "end": "829440"
  },
  {
    "text": "pipeline and we very much would be loved to be part of the component um you know model process you know to be to be one",
    "start": "829440",
    "end": "836760"
  },
  {
    "text": "of the implementers in in our space and so while we conform to all the awesome standard and I think one of the",
    "start": "836760",
    "end": "842940"
  },
  {
    "text": "interesting that we we do is that we are llvm based aot you know so that's um that's that gives us you know and",
    "start": "842940",
    "end": "849360"
  },
  {
    "text": "there's a lot of benchmarks that give us a near native performance with uh um you know um you know between the one",
    "start": "849360",
    "end": "856139"
  },
  {
    "text": "bytecode and and and and Native application compared from rust and we support our wide variety of os including",
    "start": "856139",
    "end": "863160"
  },
  {
    "text": "non-posite OSS like uh like cell four you know that's um it's a real-time operating system widely used in drones",
    "start": "863160",
    "end": "869639"
  },
  {
    "text": "and in almost autonomous vehicles and it supports popular CPU architectures like",
    "start": "869639",
    "end": "875820"
  },
  {
    "text": "you know like Risk five right you know so and then we are you know our use case where I",
    "start": "875820",
    "end": "882420"
  },
  {
    "text": "specially optimized for the cloud and Edge so um like you have seen you know we have done um you know um",
    "start": "882420",
    "end": "888959"
  },
  {
    "text": "um a networking support through our VM so that inside the VM you can run uh asynchronous applications",
    "start": "888959",
    "end": "895620"
  },
  {
    "text": "um that has um you know Network capabilities like Tokyo right let's let's open store for connecting",
    "start": "895620",
    "end": "901680"
  },
  {
    "text": "microservices databases um you know and other web services and we also have a driver for Kafka queues",
    "start": "901680",
    "end": "908519"
  },
  {
    "text": "and you know things like that it works well with service Frameworks like diver SDK which I'm going to talk about tomorrow in dappercon and uh it has",
    "start": "908519",
    "end": "915600"
  },
  {
    "text": "native support for AI inference so if the if the underlying tensorflow or Pi torch model runs on GPU or TPU the",
    "start": "915600",
    "end": "922320"
  },
  {
    "text": "bottom runtime will be able to take advantage of that as well and it has first class support for JavaScript you",
    "start": "922320",
    "end": "927480"
  },
  {
    "text": "know so we are striving to be a full node.js compatibility within this quarter you know so we have uh you know",
    "start": "927480",
    "end": "932880"
  },
  {
    "text": "we have several developers that implementing the entire node.js apis um you know our",
    "start": "932880",
    "end": "939260"
  },
  {
    "text": "JavaScript so I think that's yeah",
    "start": "939260",
    "end": "945060"
  },
  {
    "start": "944000",
    "end": "1020000"
  },
  {
    "text": "okay so I'll I'll pick it up yeah yeah okay um thank you Michael so um",
    "start": "945060",
    "end": "950519"
  },
  {
    "text": "looking at the developer tooling for Western it was brought up in one of the talks earlier today it's not that easy to get things set up um rust and golang",
    "start": "950519",
    "end": "957660"
  },
  {
    "text": "have made things a lot easier to do things like cross compiles I come from a c plus era where it was much darker and",
    "start": "957660",
    "end": "963360"
  },
  {
    "text": "much more difficult um than with those tools but you still have a lot of those same problems of uh",
    "start": "963360",
    "end": "969000"
  },
  {
    "text": "I'm running rust version this you're running rust version of that the CI is running some other rust version and uh",
    "start": "969000",
    "end": "974820"
  },
  {
    "text": "and then there's all the other tooling you may have um different runtime like Western Edge setup you may have testing tools or",
    "start": "974820",
    "end": "981240"
  },
  {
    "text": "other other things that you're using and what that lands up meaning is you you run into that same problem of well it",
    "start": "981240",
    "end": "987300"
  },
  {
    "text": "works on my machine I don't know why it's not working on yours or on CI which as a developer really hurts me I hate that um",
    "start": "987300",
    "end": "993959"
  },
  {
    "text": "uh it also requires learning a lot of new tools and new flows and I think",
    "start": "993959",
    "end": "999420"
  },
  {
    "text": "especially people like you who are on the Leading Edge of Technologies you're kind of used to playing in the tooling",
    "start": "999420",
    "end": "1004519"
  },
  {
    "text": "space and this is okay for you but for developers who are you know nine to five developers working in companies this is",
    "start": "1004519",
    "end": "1009740"
  },
  {
    "text": "really really painful each new tool that they get given is just extra overhead on top of their normal jobs and having to",
    "start": "1009740",
    "end": "1015800"
  },
  {
    "text": "learn them is is really hard for them it slows them down and it frustrates them so",
    "start": "1015800",
    "end": "1021980"
  },
  {
    "start": "1020000",
    "end": "1090000"
  },
  {
    "text": "we talk about the magic of Docker and I think there are two core Magics the first one is what works in my machine",
    "start": "1021980",
    "end": "1028520"
  },
  {
    "text": "works on yours and then in production if you use the way that I use Docker now I have many fewer instances where I have",
    "start": "1028520",
    "end": "1034880"
  },
  {
    "text": "to do web commits against the CI because if I have a dockerized flow that I run locally and then on the CI I'm sure it's",
    "start": "1034880",
    "end": "1040100"
  },
  {
    "text": "going to run the same that magic is is really really profound the second one is I can build things and",
    "start": "1040100",
    "end": "1047418"
  },
  {
    "text": "then share them and you can build on top of them or I can consume things that you've built and this is that",
    "start": "1047419",
    "end": "1052700"
  },
  {
    "text": "compounding effect that that isolation gives us the ability to build on top of what others have done that makes our industry move so quickly and deliver so",
    "start": "1052700",
    "end": "1059480"
  },
  {
    "text": "much value the foundation of that in our in the container ecosystem is is images so this",
    "start": "1059480",
    "end": "1066380"
  },
  {
    "text": "ability to store things in oci artifacts and then um either consume them directly uh as a as a networked service or to",
    "start": "1066380",
    "end": "1073700"
  },
  {
    "text": "build on top of them um and the other magic of Docker is now that we've got millions of developers",
    "start": "1073700",
    "end": "1078980"
  },
  {
    "text": "using it there's a simple flow that developers already know they already know how to do these commands and I would pause it because you're tooling",
    "start": "1078980",
    "end": "1085400"
  },
  {
    "text": "people mostly you probably have all used these commands too and you probably are quite familiar with them",
    "start": "1085400",
    "end": "1090980"
  },
  {
    "start": "1090000",
    "end": "1158000"
  },
  {
    "text": "so this didn't happen by accident right um the core thing behind the success of",
    "start": "1090980",
    "end": "1097100"
  },
  {
    "text": "what runs in my machine runs on yours runs on CI it runs in production is standardization the reason you can run a",
    "start": "1097100",
    "end": "1102860"
  },
  {
    "text": "container on your desktop with Docker desktop then in GitHub Ci or GitHub action CI and then on and deploy to ECS",
    "start": "1102860",
    "end": "1109760"
  },
  {
    "text": "AWS ECS is because of these runtime the runtime specification the image specification and the",
    "start": "1109760",
    "end": "1115520"
  },
  {
    "text": "distribution specification these are the core things that provide that magic",
    "start": "1115520",
    "end": "1121240"
  },
  {
    "text": "this doesn't happen by accident either you can't just standardize a thing you have to work in the open and I'm really encouraged to see what's happening with",
    "start": "1121820",
    "end": "1127580"
  },
  {
    "text": "the bytecode alliance and and other efforts inside the Western Community um that really allows you to develop",
    "start": "1127580",
    "end": "1133460"
  },
  {
    "text": "these Open Standards and collaborate not just within your company or your team but across companies and industries this",
    "start": "1133460",
    "end": "1139760"
  },
  {
    "text": "really is the you know the rising tide lifts all boats and the reason the container ecosystem is so big is because",
    "start": "1139760",
    "end": "1145280"
  },
  {
    "text": "of these Open Standards and because we can work across and not you know not have one one thing in in any of these",
    "start": "1145280",
    "end": "1151039"
  },
  {
    "text": "domains on our side we or we're using the oci to do this mechanism which is kind of analogous I guess to some of the",
    "start": "1151039",
    "end": "1157100"
  },
  {
    "text": "bicode alliance pieces um so with that I'm going to swap laptops because I'm doing a live demo",
    "start": "1157100",
    "end": "1163520"
  },
  {
    "start": "1158000",
    "end": "1381000"
  },
  {
    "text": "and we want to really tempt the uh yeah for live demos yeah",
    "start": "1163520",
    "end": "1169160"
  },
  {
    "text": "I always appreciate them so I feel like it's uh it I have to I have to do it all",
    "start": "1169160",
    "end": "1174380"
  },
  {
    "text": "right are we gonna get a did that work",
    "start": "1174380",
    "end": "1179539"
  },
  {
    "text": "not yet it is working yay already yay for live demos",
    "start": "1179539",
    "end": "1184720"
  },
  {
    "text": "so what I'm going to demo is I'm going to demo a a technical preview of Docker",
    "start": "1184720",
    "end": "1189860"
  },
  {
    "text": "desktop I'll share links don't worry you'll be able to get it which has waxy support built in we're using lassim Edge",
    "start": "1189860",
    "end": "1195500"
  },
  {
    "text": "through a containerdy stream at the moment but that's that should be pluggable as well I'll start with the docker compose file here I hope most of",
    "start": "1195500",
    "end": "1202640"
  },
  {
    "text": "you are familiar with Docker compose but I have I have the canonical three service application I have a client a",
    "start": "1202640",
    "end": "1208400"
  },
  {
    "text": "front-end JavaScript clients a server which is a um a rest server compiled to",
    "start": "1208400",
    "end": "1214160"
  },
  {
    "text": "West usm32 and then I have a DB uh just a Maria DB because I couldn't get MySQL",
    "start": "1214160",
    "end": "1219440"
  },
  {
    "text": "working on my M1 Mac I'm not sure why um so what this will do then is uh the",
    "start": "1219440",
    "end": "1225020"
  },
  {
    "text": "the server the rust server will write things to a DB and be able to query them",
    "start": "1225020",
    "end": "1230299"
  },
  {
    "text": "and the GUI will be able to read them out and notice that two of the services are in containers and the one is a is a",
    "start": "1230299",
    "end": "1236900"
  },
  {
    "text": "wassum module uh to build this I have a Docker file and what this does",
    "start": "1236900",
    "end": "1243020"
  },
  {
    "text": "is it cross-compile from my local architecture straight to uh wassce Western 32 you'll also see here that I'm",
    "start": "1243020",
    "end": "1250880"
  },
  {
    "text": "running Western edges aot optimizations so we get much higher performance here and with Tokyo and Co routines",
    "start": "1250880",
    "end": "1257780"
  },
  {
    "text": "essentially we can we can handle many more requests in parallel and then speaking to Ralph earlier this is you",
    "start": "1257780",
    "end": "1263600"
  },
  {
    "text": "close your eyes but we're using a from scratch image and we're copying the the Western results into that so we can reuse some of the oci pieces so what I'm",
    "start": "1263600",
    "end": "1272179"
  },
  {
    "text": "going to do is like a good cooking show I've pre I've pre-baked this um but I'll do a compose build",
    "start": "1272179",
    "end": "1278960"
  },
  {
    "text": "and you'll see if it can resolve everything hopefully everything's cached there we go and if I inspect this image",
    "start": "1278960",
    "end": "1284620"
  },
  {
    "text": "you'll see that it's a it's got the architecture Wesson 32 and an OS webc",
    "start": "1284620",
    "end": "1289940"
  },
  {
    "text": "this is just if I do a Docker images um you'll actually see it pop up so you can see it's the Western day one or the",
    "start": "1289940",
    "end": "1296059"
  },
  {
    "text": "server one I've just retagged it um and then of course if I do a Docker compose up this would implicitly build",
    "start": "1296059",
    "end": "1301400"
  },
  {
    "text": "it but otherwise it just launches everything for you so this is a flow that specifically front-end developers are very familiar with with Docker we",
    "start": "1301400",
    "end": "1306919"
  },
  {
    "text": "just do a Docker compose up it builds everything it needs to build it downloads all the images it needs and you've got something up and running I'm",
    "start": "1306919",
    "end": "1313460"
  },
  {
    "text": "going to start up a second terminal here hopefully it's uh it's not too too big and I'm just going to initialize this and then I'm going to upload a couple of",
    "start": "1313460",
    "end": "1321440"
  },
  {
    "text": "orders so you can tell I'm a backend engineer because this is my this is my home",
    "start": "1321440",
    "end": "1326480"
  },
  {
    "text": "and if I go over to here I can reload and this is querying that front-end service now so what's happening is I've",
    "start": "1326480",
    "end": "1333320"
  },
  {
    "text": "queried the front-end service um that's uh hitting the the Wesson uh the West Wesson server which is querying",
    "start": "1333320",
    "end": "1339980"
  },
  {
    "text": "the database and pulling things up and I can do operations here that kind of uh travel through as well so that's",
    "start": "1339980",
    "end": "1345260"
  },
  {
    "text": "containers and Wesson sitting side by side kind of transparently actually which is um it seems like an anti-climactic demo but but there you go",
    "start": "1345260",
    "end": "1354140"
  },
  {
    "text": "thank you so so here it is inside desktop as well",
    "start": "1354140",
    "end": "1360320"
  },
  {
    "text": "we also made it so you can see that this is a western 32 um thing that's running and notice that the networking is",
    "start": "1360320",
    "end": "1365720"
  },
  {
    "text": "working as well just as it does with compose um and of course I pushed this earlier",
    "start": "1365720",
    "end": "1371659"
  },
  {
    "text": "to to Docker Hub so you can see up here we have it up on on a demo repo right I'm going to pull it back to the uh the",
    "start": "1371659",
    "end": "1378380"
  },
  {
    "text": "slides so uh so what we've done here then is uh we",
    "start": "1378380",
    "end": "1385820"
  },
  {
    "start": "1381000",
    "end": "1463000"
  },
  {
    "text": "we've got the same workflow that a lot of developers use containers today already know this Docker composer",
    "start": "1385820",
    "end": "1391340"
  },
  {
    "text": "um and then you're just going someone will do Docker build some of them will do Docker push as well but they've got",
    "start": "1391340",
    "end": "1396380"
  },
  {
    "text": "the same flow that they've used for containers before but this time they're using Wesson um we are put an oci image and because",
    "start": "1396380",
    "end": "1403220"
  },
  {
    "text": "we output an oci image we can reuse oci compliant Registries and this is great because having worked with teams who run",
    "start": "1403220",
    "end": "1410000"
  },
  {
    "text": "Registries it's less fun than it sounds and it's um you know reusing what we have is is is is really valuable",
    "start": "1410000",
    "end": "1418580"
  },
  {
    "text": "um the other thing is because of the wassce runtime standard we can then take that",
    "start": "1418580",
    "end": "1423620"
  },
  {
    "text": "and run it uh take that image and run it on a wassce runtime in this case we used Western Edge but there's no reason you",
    "start": "1423620",
    "end": "1429559"
  },
  {
    "text": "couldn't use anywhere C compatible runtime all of this is built into Docker desktop",
    "start": "1429559",
    "end": "1434900"
  },
  {
    "text": "and we have millions of developers who use Docker desktop so this means that they would just have this uh have this",
    "start": "1434900",
    "end": "1440299"
  },
  {
    "text": "right there for them to use and the interoperability with containers I think is an important piece too",
    "start": "1440299",
    "end": "1446480"
  },
  {
    "text": "because like VMS haven't been displaced by containers containers are not going to be displaced by Wesson and we need an",
    "start": "1446480",
    "end": "1453020"
  },
  {
    "text": "interrupt story you need to use the right tool for the job and in a lot of cases for example you'll have existing",
    "start": "1453020",
    "end": "1458179"
  },
  {
    "text": "web services or a DB and so what you want to be able to do is interface with them",
    "start": "1458179",
    "end": "1463640"
  },
  {
    "start": "1463000",
    "end": "1492000"
  },
  {
    "text": "so what's next well we're just getting started Docker is new to the wasm space",
    "start": "1463640",
    "end": "1468679"
  },
  {
    "text": "and and we realized that we want to work with the Western Community we really do",
    "start": "1468679",
    "end": "1474380"
  },
  {
    "text": "want to do this in a collaborative fashion and we want to share our experience from the container ecosystem we've learned a",
    "start": "1474380",
    "end": "1480380"
  },
  {
    "text": "lot over the last several years and we want to bring this to to help bring Western to more people",
    "start": "1480380",
    "end": "1485720"
  },
  {
    "text": "and I think some of you may have already seen the blog post but we're actually joining the bytecode alliance as well so we can help do that formally",
    "start": "1485720",
    "end": "1493240"
  },
  {
    "start": "1492000",
    "end": "1521000"
  },
  {
    "text": "um of course it also wouldn't be a worsened speech if I didn't show you Solomon's tweet which is uh notorious in",
    "start": "1493580",
    "end": "1499039"
  },
  {
    "text": "your circle so so um you know I I think people as Justin pointed out in the keynote people kind",
    "start": "1499039",
    "end": "1505159"
  },
  {
    "text": "of misinterpreted this um and I feel like we really are coming full circle with what I demo today where um in that",
    "start": "1505159",
    "end": "1510620"
  },
  {
    "text": "second tweet where he says imagine a future where Docker runs Linux containers Windows containers and",
    "start": "1510620",
    "end": "1515960"
  },
  {
    "text": "Western containers side by side um well that's exactly what we've demoed today",
    "start": "1515960",
    "end": "1521360"
  },
  {
    "text": "so um I know you're all most well most of your property Engineers you want to get the code I've got a QR code you can",
    "start": "1521360",
    "end": "1527059"
  },
  {
    "text": "scan there otherwise you can look at my GitHub repo I've got links to the versions of Docker desktop and um some",
    "start": "1527059",
    "end": "1532520"
  },
  {
    "text": "and some demo repos that were provided by Michael's team as well so you can you can just Docker compose up and play",
    "start": "1532520",
    "end": "1537799"
  },
  {
    "text": "around right thanks everyone",
    "start": "1537799",
    "end": "1541840"
  },
  {
    "text": "questions I've got stickers yeah",
    "start": "1548000",
    "end": "1555980"
  },
  {
    "text": "what is I have stickers well it just means that you know questions may prompt stickers no I'll give stickers up",
    "start": "1555980",
    "end": "1562820"
  },
  {
    "text": "reminder anyone at home you can ask your question in the web assembly Channel and we can relate here",
    "start": "1562820",
    "end": "1569379"
  },
  {
    "text": "so admittedly this question was in the slack from Brooks so I'm taking inspiration from him but how would you",
    "start": "1582020",
    "end": "1589220"
  },
  {
    "text": "compare and contrast the current waza movement with the early days of Docker and Linux containers",
    "start": "1589220",
    "end": "1597260"
  },
  {
    "text": "oh wow nice nice soft uh Global m",
    "start": "1597260",
    "end": "1603500"
  },
  {
    "text": "M I think some of the um I I wasn't there for the very beginning",
    "start": "1603500",
    "end": "1609980"
  },
  {
    "text": "so I don't have a strong um a strong story to tell there but I think the things that I'm seeing on the",
    "start": "1609980",
    "end": "1616400"
  },
  {
    "text": "western side is a lot of these initial settling we saw where we were trying to work out what standards matter which",
    "start": "1616400",
    "end": "1623000"
  },
  {
    "text": "things need to be standardized which things where should where should people differ where should companies differentiate all of that sort of stuff",
    "start": "1623000",
    "end": "1628760"
  },
  {
    "text": "um I'm seeing those sorts of analogies happening and that's why I kind of called out the um the oci work where",
    "start": "1628760",
    "end": "1633919"
  },
  {
    "text": "we've done where think about think about how do we build an end-to-end story because I think that we",
    "start": "1633919",
    "end": "1639320"
  },
  {
    "text": "need to find killer we need to find a couple of killer use cases that are end to end so developers can really start",
    "start": "1639320",
    "end": "1644539"
  },
  {
    "text": "adopting Western right now it still feels quite fragmented which makes it really difficult for people to adopt",
    "start": "1644539",
    "end": "1649940"
  },
  {
    "text": "um there are obviously there are people who are using it in production in very various different cases but there's no mass-market easy way of doing that and",
    "start": "1649940",
    "end": "1656960"
  },
  {
    "text": "Scott's going to have to cover his ears but I think because you could throw processes existing binaries into Docker",
    "start": "1656960",
    "end": "1662299"
  },
  {
    "text": "containers and they were just better just doing that that kind of helped us as well because there's a lot of brand",
    "start": "1662299",
    "end": "1668000"
  },
  {
    "text": "field software out there and and helping people um get that running in or putting that",
    "start": "1668000",
    "end": "1673220"
  },
  {
    "text": "inside a container was net better than running it on a host um and and you know that kind of removed",
    "start": "1673220",
    "end": "1678919"
  },
  {
    "text": "some of the friction for getting people to to have an end-to-end flow that was better than what they had before so yeah I think that would be the thing that I",
    "start": "1678919",
    "end": "1684679"
  },
  {
    "text": "would focus on with uh with Western now uh Chris",
    "start": "1684679",
    "end": "1689840"
  },
  {
    "text": "um uh Sven in the slack uh so everybody who wants to ask questions of slack feel",
    "start": "1689840",
    "end": "1695600"
  },
  {
    "text": "free uh is asking uh how does Docker know when to run or was on runtime so",
    "start": "1695600",
    "end": "1701779"
  },
  {
    "text": "right now it's configured inside my compose file uh and let me just hide this oh come on there we go um I've",
    "start": "1701779",
    "end": "1708620"
  },
  {
    "text": "configured it inside my compose file to make it explicit to show that I want to use the containerdy shim so what's happening here is the docker engine is",
    "start": "1708620",
    "end": "1716480"
  },
  {
    "text": "um it's it runs things through container D and contanity you can have different shims for doing different types of workloads in this case we have a wasamed",
    "start": "1716480",
    "end": "1723020"
  },
  {
    "text": "shipment so I've told it please run it with the West submission um ideally what with what we're talking about with the Mobi maintainers because",
    "start": "1723020",
    "end": "1729020"
  },
  {
    "text": "the docker engine is is part of the movie project and and that's an open source community that we work with morantis and Microsoft and some others",
    "start": "1729020",
    "end": "1734960"
  },
  {
    "text": "on what we'd like to do is have some Auto detection where based on the architecture type it would just do the",
    "start": "1734960",
    "end": "1740059"
  },
  {
    "text": "right thing you'd probably want to make it configurable for users to choose exactly which backend they want to run because there may be people who want to",
    "start": "1740059",
    "end": "1745940"
  },
  {
    "text": "use some of the bleeding edge stuff with wet image or other people who may want to use a different runtime for for other reasons",
    "start": "1745940",
    "end": "1752679"
  },
  {
    "text": "I can repeat the question as well yeah",
    "start": "1759140",
    "end": "1763000"
  },
  {
    "text": "so the question was you now have uh Docker with Wesson does that mean we're part of the the kubernetes ecosystem and",
    "start": "1771620",
    "end": "1777380"
  },
  {
    "text": "to clarify that so the way we've integrated this is through container D which is a low level piece for managing",
    "start": "1777380",
    "end": "1783140"
  },
  {
    "text": "how it works with containers is it manages that process life cycle and setting up namespaces and things like that",
    "start": "1783140",
    "end": "1788840"
  },
  {
    "text": "um kubernetes is a layer on top to orchestrate those containers and so because we've integrated it at the lower",
    "start": "1788840",
    "end": "1794659"
  },
  {
    "text": "level this should just work with um with with kubernetes as well I think Ralph",
    "start": "1794659",
    "end": "1800120"
  },
  {
    "text": "may be talking about that a little later so I would stick around",
    "start": "1800120",
    "end": "1804580"
  },
  {
    "text": "but but this is the advantage of building in at that level right we can re-leverage things that already exist I",
    "start": "1808159",
    "end": "1813200"
  },
  {
    "text": "think Reinventing the wheel for the sake of it is um unless you're getting really great benefits it's not it's not",
    "start": "1813200",
    "end": "1818960"
  },
  {
    "text": "worthwhile a lot of the time any other questions",
    "start": "1818960",
    "end": "1824299"
  },
  {
    "text": "all right please join me in thanking Michael and Chris",
    "start": "1824299",
    "end": "1829299"
  }
]