[
  {
    "text": "hello everyone welcome to one of the last sessions of the conference",
    "start": "120",
    "end": "5319"
  },
  {
    "text": "congratulations you made it uh my name is Dennis Magda I've been",
    "start": "5319",
    "end": "11440"
  },
  {
    "text": "working with distributed systems applications and databases for the last",
    "start": "11440",
    "end": "18520"
  },
  {
    "text": "I think eight nine years and today I'd like to share my experience on how to",
    "start": "18520",
    "end": "24880"
  },
  {
    "text": "run kubernetes cluster on a distributed database in particular on a distributed",
    "start": "24880",
    "end": "31080"
  },
  {
    "text": "pogress SQL as you can see I don't have any slides it's not because I'm lazy to put",
    "start": "31080",
    "end": "38280"
  },
  {
    "text": "them together but generally my goal is to show you how everything works in action it's going to be a Hands-On",
    "start": "38280",
    "end": "45360"
  },
  {
    "text": "session for me and then if you find this session useful then you will be able to Google or go to CH GPT and you will be",
    "start": "45360",
    "end": "52719"
  },
  {
    "text": "able to learn from resources prepared by people who are much smarter than me in this area all right so that's the reason",
    "start": "52719",
    "end": "60879"
  },
  {
    "text": "so let's talk about let's take a look at the plan first we need to figure out what is",
    "start": "60879",
    "end": "66920"
  },
  {
    "text": "a tcd then we will talk the reasons why we even have this session and why some",
    "start": "66920",
    "end": "72040"
  },
  {
    "text": "of the folks within the kubernetes community decided that we need to have some replacement an alternate option uh",
    "start": "72040",
    "end": "78720"
  },
  {
    "text": "for this distributed storage then uh you'll see we'll talk about a project kind because kind is a special component",
    "start": "78720",
    "end": "86439"
  },
  {
    "text": "that makes it possible to use pogress my equal Oracle or pretty much I think",
    "start": "86439",
    "end": "92320"
  },
  {
    "text": "bunch of other relational databases instead of atcd for kubernetes deployments and then I will show you",
    "start": "92320",
    "end": "98759"
  },
  {
    "text": "real world examples So speaking about the demos what exactly we are going to do we are going to run",
    "start": "98759",
    "end": "107840"
  },
  {
    "text": "kubernetes on vanilla pogress and vanilla I mean it's pogress open source",
    "start": "107840",
    "end": "113640"
  },
  {
    "text": "single note cluster single note instance and after that once we make this happen",
    "start": "113640",
    "end": "119479"
  },
  {
    "text": "we will will do the same kubernetes but on distributed POS",
    "start": "119479",
    "end": "127280"
  },
  {
    "text": "okay that's the plan by the way question how many of you came to this session because of pogress in the title",
    "start": "127280",
    "end": "135760"
  },
  {
    "text": "anyone I knew that all right so what's tcd a tcd is a distributed scalable and",
    "start": "135800",
    "end": "142959"
  },
  {
    "text": "highly available key value store or key value database it's quite simple but the part",
    "start": "142959",
    "end": "150040"
  },
  {
    "text": "is in the Simplicity because what it does really well it works across several nodes",
    "start": "150040",
    "end": "156040"
  },
  {
    "text": "across several machines or VMS that you have in your cluster it uses the raft consensus protocol to replicate all of",
    "start": "156040",
    "end": "162800"
  },
  {
    "text": "the changes and then if any of the itcd noes goes down then guess what their",
    "start": "162800",
    "end": "169640"
  },
  {
    "text": "database itself remains available the data is stored in a consistent State and that was one of the reasons why",
    "start": "169640",
    "end": "175480"
  },
  {
    "text": "kubernetes selected etcd as a component so let's write this down tcd is",
    "start": "175480",
    "end": "181319"
  },
  {
    "text": "distributed and highly available data store it's just you can think about it as key value",
    "start": "181319",
    "end": "188200"
  },
  {
    "text": "database and kubernetes how is it related to kubernetes kubernetes uh uses",
    "start": "188200",
    "end": "195959"
  },
  {
    "text": "it as a meta store so all their configuration all the",
    "start": "195959",
    "end": "202680"
  },
  {
    "text": "system information about your kubernetes cluster is stored in incd things like how many nodes I have how many services",
    "start": "202680",
    "end": "209799"
  },
  {
    "text": "of ports what's the current configuration what's a state of this particular service all this information",
    "start": "209799",
    "end": "215599"
  },
  {
    "text": "is stored in etcd and it also has to be consistent there should be no any",
    "start": "215599",
    "end": "221680"
  },
  {
    "text": "inconsistencies so this is how it works in practice and",
    "start": "221680",
    "end": "227680"
  },
  {
    "text": "why why etcd is not enough generally speaking etcd works for the majority of",
    "start": "227680",
    "end": "232959"
  },
  {
    "text": "the use cases otherwise there would be another default option for kubernetes deployments but still there are some of",
    "start": "232959",
    "end": "239840"
  },
  {
    "text": "there scenarios when etcd is not enough even though etcd is",
    "start": "239840",
    "end": "246079"
  },
  {
    "text": "scalable and distributed it has some scalability limitations for",
    "start": "246079",
    "end": "252640"
  },
  {
    "text": "instance uh there will there might be scalability",
    "start": "252640",
    "end": "259000"
  },
  {
    "text": "issues for large kubernetes deployments for large kubernetes deployments and we",
    "start": "259000",
    "end": "264600"
  },
  {
    "text": "are talking about let's say hundreds or thousands of ndes and I personally was",
    "start": "264600",
    "end": "270039"
  },
  {
    "text": "involved in one of these projects when we had hundreds and hundreds of kubernetes nodes and we had to replace",
    "start": "270039",
    "end": "276080"
  },
  {
    "text": "ctcd with another distributed database it was not pogress but it was distributed because we had to just we",
    "start": "276080",
    "end": "283160"
  },
  {
    "text": "have to tackle really huge load another reason what I see like is",
    "start": "283160",
    "end": "290800"
  },
  {
    "text": "that the state of their the state of the etcd",
    "start": "290800",
    "end": "297400"
  },
  {
    "text": "community so generally speaking some of the people on the internet there raise a concern that yes it is a cool",
    "start": "297639",
    "end": "303840"
  },
  {
    "text": "project it does what it was designed for but uh there are a few maintainers and those maintainers work for the companies",
    "start": "303840",
    "end": "310479"
  },
  {
    "text": "who are not interested in supporting itcd so generally speaking sometimes it takes a while to incorporate some change",
    "start": "310479",
    "end": "316919"
  },
  {
    "text": "and to move the project forward so like the community is not thriving the community is basically at its current",
    "start": "316919",
    "end": "322919"
  },
  {
    "text": "state there are a few people who know how to build and move it forward but it's not growing and some of the people",
    "start": "322919",
    "end": "329319"
  },
  {
    "text": "who are who belong to the kubernetes community they are saying hey guys kubernetes Community is thriving right",
    "start": "329319",
    "end": "334919"
  },
  {
    "text": "it's growing but there is one of the components within our ecosystem and we depend on it and in that component we",
    "start": "334919",
    "end": "341160"
  },
  {
    "text": "don't have just a fresh fresh fresh kind of number of new maintainers who are",
    "start": "341160",
    "end": "347039"
  },
  {
    "text": "coming who are getting the knowledge and keep growing the atcd as the result as",
    "start": "347039",
    "end": "352120"
  },
  {
    "text": "the result uh like and there might be some other some some other reasons why people might want to select an",
    "start": "352120",
    "end": "358600"
  },
  {
    "text": "alternative solution for The kubernetes Meta store and when we going to the POG",
    "start": "358600",
    "end": "364319"
  },
  {
    "text": "SQL and distributed POG SQL uh there is a project within the kubernetes",
    "start": "364319",
    "end": "370880"
  },
  {
    "text": "community called K and what's k k is a layer",
    "start": "370880",
    "end": "376919"
  },
  {
    "text": "between kubernetes cluster and relational database that lets us to replace a tcd",
    "start": "376919",
    "end": "385680"
  },
  {
    "text": "with databases such as sqli P or my SQL so generally that's a website yeah it",
    "start": "385680",
    "end": "392080"
  },
  {
    "text": "belongs it's here and it acts as a shim layer so let's say that kubernetes still",
    "start": "392080",
    "end": "398319"
  },
  {
    "text": "like the way it works when we use kubernetes kubernetes has this API server and the API server directly",
    "start": "398319",
    "end": "404680"
  },
  {
    "text": "interacts with the atcd and generally speaking if you want to replace atcd with POG then API server doesn't do this",
    "start": "404680",
    "end": "414680"
  },
  {
    "text": "directly API server still will be executing atcd making atcd like calls",
    "start": "414680",
    "end": "421919"
  },
  {
    "text": "and what kind takes kind is used like supports implements the atcd apis it",
    "start": "421919",
    "end": "427960"
  },
  {
    "text": "will be receiving all those calls from the API server of kubernetes and then it will be translating those API calls into",
    "start": "427960",
    "end": "434479"
  },
  {
    "text": "SQL requests that will be executed uh over pogress or another relational",
    "start": "434479",
    "end": "439720"
  },
  {
    "text": "database so there the story is very simple today for",
    "start": "439720",
    "end": "444960"
  },
  {
    "text": "the demo I will be using uh k3s how many of you use k3s",
    "start": "444960",
    "end": "450120"
  },
  {
    "text": "anyone all right full cloud and for me like for the demo it's a perfect solution because I just I don't need",
    "start": "450120",
    "end": "456360"
  },
  {
    "text": "anything I just use my my laptop one of my VMS in the cloud and we are going to start it so kind kind you can find this",
    "start": "456360",
    "end": "464759"
  },
  {
    "text": "it in the architecture so this is how it looks like you have your processes they interact with their API server and the",
    "start": "464759",
    "end": "471159"
  },
  {
    "text": "API server talks to kind and if you want kind to use pogress or my SQL then it's",
    "start": "471159",
    "end": "478319"
  },
  {
    "text": "easy to support so this is what we are going to do now going back to our plan plan",
    "start": "478319",
    "end": "484960"
  },
  {
    "text": "that's kind that's all you need to know basically itcd is used by kubernetes as",
    "start": "484960",
    "end": "490199"
  },
  {
    "text": "a meta store all the cluster information cluster configuration is stored and maintained in dead storage then and",
    "start": "490199",
    "end": "496520"
  },
  {
    "text": "there are some of the reasons including these two that are listed not on the slide on this Tech document that might",
    "start": "496520",
    "end": "504400"
  },
  {
    "text": "provoke you to consider an alternate storage implementation for your kubernetes deployments now let's start",
    "start": "504400",
    "end": "512880"
  },
  {
    "text": "using K uh with",
    "start": "512880",
    "end": "518839"
  },
  {
    "text": "k3s for our demo and then if you want to use for",
    "start": "518839",
    "end": "525040"
  },
  {
    "text": "vanilla kubernetes deployments then you also will be able to use this solution",
    "start": "525040",
    "end": "531120"
  },
  {
    "text": "so my infrastructure for today looks as",
    "start": "531120",
    "end": "536200"
  },
  {
    "text": "follows I'm going to use Google Cloud and I'm going to use three virtual",
    "start": "536200",
    "end": "541320"
  },
  {
    "text": "machines running across several regions we have virtual machine in US West one",
    "start": "541320",
    "end": "546680"
  },
  {
    "text": "it should be in Oregon uh this one US West 2 it should be I guess in Las Vegas",
    "start": "546680",
    "end": "553399"
  },
  {
    "text": "and this one West 3 is in Salt Lake City the reason why I have these 3 VMS",
    "start": "553399",
    "end": "559399"
  },
  {
    "text": "because I in the end we going to deploy a distributed instance of progress It's",
    "start": "559399",
    "end": "564800"
  },
  {
    "text": "called Yuga byb I will talk about Yuga byb later but I want to show you how",
    "start": "564800",
    "end": "570040"
  },
  {
    "text": "like you how distributed poal cannot you know just support what what's already",
    "start": "570040",
    "end": "575720"
  },
  {
    "text": "supported by etcd but also go beyond those capabilities and one of that capabilities that it can run and",
    "start": "575720",
    "end": "582640"
  },
  {
    "text": "efficiently execute across a multi- region and multi cluster with this configuration our kubernetes deployments",
    "start": "582640",
    "end": "588720"
  },
  {
    "text": "will be able to Tate in scale not just across several servers or several zones but also across several uh Cloud regions",
    "start": "588720",
    "end": "595800"
  },
  {
    "text": "or private data centers okay so let's start with this machine cuz this is where I'm going to deploy my",
    "start": "595800",
    "end": "601760"
  },
  {
    "text": "k3s instance closing the",
    "start": "601760",
    "end": "607110"
  },
  {
    "text": "[Music] slides let",
    "start": "607110",
    "end": "612680"
  },
  {
    "text": "SSH yeah this should be this",
    "start": "612680",
    "end": "616680"
  },
  {
    "text": "machine okay so let's start with po G I have pogress running this is a bu",
    "start": "619399",
    "end": "626480"
  },
  {
    "text": "machine and pogress is pre-installed let's just do the simplest solution we",
    "start": "626480",
    "end": "633000"
  },
  {
    "text": "will use my local instance of the",
    "start": "633000",
    "end": "637920"
  },
  {
    "text": "database if we check the state of the of the database we don't have any relations we don't have any tables yet and this is",
    "start": "638440",
    "end": "645040"
  },
  {
    "text": "what we are going to fix shortly let's open one",
    "start": "645040",
    "end": "650200"
  },
  {
    "text": "more pane let's split it horizontally and I want to do it this",
    "start": "650200",
    "end": "656480"
  },
  {
    "text": "way I will open one more connection to the same virtual",
    "start": "656480",
    "end": "662120"
  },
  {
    "text": "machine so you can see that the VM is the same it's here and right now let's",
    "start": "662120",
    "end": "667480"
  },
  {
    "text": "start k3s let's start our kubernetes cluster on the same machine and connect to POS",
    "start": "667480",
    "end": "675480"
  },
  {
    "text": "directly replacing etcd how does it look so generally we",
    "start": "675480",
    "end": "680800"
  },
  {
    "text": "are going to use this script we just using curl we are downloading the latest version of k3s from this addess and then",
    "start": "680800",
    "end": "688040"
  },
  {
    "text": "we are going to start this script when we start yes we create some sample talking this is necessary and what's",
    "start": "688040",
    "end": "694480"
  },
  {
    "text": "most interesting for us is this parameter that we pass to the script data store endpoint this parameter is",
    "start": "694480",
    "end": "702000"
  },
  {
    "text": "going to be passed to kind by the kubernetes and here in the beginning of",
    "start": "702000",
    "end": "708040"
  },
  {
    "text": "the URL we say pogress so this is indication to kind that you need to use",
    "start": "708040",
    "end": "714240"
  },
  {
    "text": "your implementation for pogress not for my SQL not for SQ light but for pogress and and after that you",
    "start": "714240",
    "end": "720720"
  },
  {
    "text": "have the connectivity settings for your database so this is the username pogress",
    "start": "720720",
    "end": "726720"
  },
  {
    "text": "the password pogress and this is the address Local Host on this port number and the databas is pogress let's start",
    "start": "726720",
    "end": "734199"
  },
  {
    "text": "it so the script has been downloaded and we start yeah and this k3s cluster is being",
    "start": "734199",
    "end": "741519"
  },
  {
    "text": "bootstrapped what we can do right now we are connected to our postgress database you can see that basically when it",
    "start": "741519",
    "end": "747639"
  },
  {
    "text": "starts there are just one there is just one table that is created by K and inside of",
    "start": "747639",
    "end": "755240"
  },
  {
    "text": "this table all this information about the cluster configuration and the state of the cluster of kubernetes is going to",
    "start": "755240",
    "end": "760760"
  },
  {
    "text": "be stored uh let me show you what happens right now if you try to calculate the",
    "start": "760760",
    "end": "767360"
  },
  {
    "text": "number of events of Records in this table so right now I already have 675 and I've just",
    "start": "767360",
    "end": "774079"
  },
  {
    "text": "started my kubernetes cluster I have not deployed anything yet and if you do this",
    "start": "774079",
    "end": "779600"
  },
  {
    "text": "watch command of pogress that will keep executing this request over and over again you can see that something is happening even though we are not even",
    "start": "779600",
    "end": "786320"
  },
  {
    "text": "using our kubernetes cluster something is happening kubernetes consistently like endlessly interacts with the",
    "start": "786320",
    "end": "794360"
  },
  {
    "text": "store if you want to take a look at the structure of this database let's do it together we can",
    "start": "794360",
    "end": "801079"
  },
  {
    "text": "do D+ kind so we have ID of the event we have",
    "start": "801079",
    "end": "808560"
  },
  {
    "text": "the name for for this event and some other information like",
    "start": "808560",
    "end": "814199"
  },
  {
    "text": "when created deleted some of the versioning some kubernetes related",
    "start": "814199",
    "end": "819680"
  },
  {
    "text": "matter uh what we can do as well let's just type the names of those EV what",
    "start": "819680",
    "end": "825720"
  },
  {
    "text": "exactly is being written by kubernetes into pogress from kind let's order by ID descending and I",
    "start": "825720",
    "end": "834600"
  },
  {
    "text": "want to show the last five events select I D name",
    "start": "834600",
    "end": "841160"
  },
  {
    "text": "from mhm select yeah and then we again can repeat which",
    "start": "841160",
    "end": "848360"
  },
  {
    "text": "and you will see that yes something happens like Lees like Le related information is being written right now",
    "start": "848360",
    "end": "854600"
  },
  {
    "text": "so there the cluster but at least it's good that kubernetes managed to connect to pogress using kind and it took us how",
    "start": "854600",
    "end": "863320"
  },
  {
    "text": "much time like just seconds right it's already running now let's uh double",
    "start": "863320",
    "end": "868519"
  },
  {
    "text": "check that everything works as expected let me do Cube CTL Cube CTL get",
    "start": "868519",
    "end": "875440"
  },
  {
    "text": "notes so it's ready that's my VM control plan Master everything is good in a good",
    "start": "875440",
    "end": "881040"
  },
  {
    "text": "state so this is Manila pogress generally we have kubernetes we have kind kind is being developed by another",
    "start": "881040",
    "end": "887600"
  },
  {
    "text": "group of people and we have databases that are developed by different community members now let's talk about distributed",
    "start": "887600",
    "end": "894880"
  },
  {
    "text": "posg because it's cool that we can use kind to connect to vanilla posg or myle but those two databases they",
    "start": "894880",
    "end": "902639"
  },
  {
    "text": "designed to to work on a within a single server environment they're not as they're not scalable as the tcd they're",
    "start": "902639",
    "end": "909720"
  },
  {
    "text": "not as highly available as tcd if you want to make Po scalable or highly available you need to use additional you",
    "start": "909720",
    "end": "915880"
  },
  {
    "text": "know extensions and solutions from the POG ecosystem one of the solutions is yabb",
    "start": "915880",
    "end": "923160"
  },
  {
    "text": "yab byb is a distributed pogress database so generally it's a shared nothing database",
    "start": "923160",
    "end": "929519"
  },
  {
    "text": "that walks across multiple servers regions zones Etc and it consists of the",
    "start": "929519",
    "end": "936000"
  },
  {
    "text": "storage layer query layer and the storage layer the query layer is pogress it's basically a fork of pogress and the",
    "start": "936000",
    "end": "942839"
  },
  {
    "text": "storage layer is like they took the storage layer of pogress b3s Etc removed",
    "start": "942839",
    "end": "949240"
  },
  {
    "text": "it and used their own LSM lsm3 based implementation as long as I don't have",
    "start": "949240",
    "end": "956040"
  },
  {
    "text": "any slides I just can go to the to the website of the company and here is yeah",
    "start": "956040",
    "end": "962279"
  },
  {
    "text": "let's say that you have a three node cluster it runs this is our application this is kubernetes that uses kind and",
    "start": "962279",
    "end": "968360"
  },
  {
    "text": "uses yugabyte as a storage layer and you just write that data the all the tables",
    "start": "968360",
    "end": "973440"
  },
  {
    "text": "the kind table will be shed across multiple nodes the traffic also can be",
    "start": "973440",
    "end": "979279"
  },
  {
    "text": "load balanced if any of this nodes goes down it's not a problem because you have the other two nodes and they will be",
    "start": "979279",
    "end": "985360"
  },
  {
    "text": "able to serve the request from kubernetes same as the tcd uh yab byb",
    "start": "985360",
    "end": "990800"
  },
  {
    "text": "also uses the r consensus protocol to ensure the consistency even during outages and uh split brain situations",
    "start": "990800",
    "end": "998560"
  },
  {
    "text": "with your network now let's get to to the cluster and to the dma what I",
    "start": "998560",
    "end": "1005880"
  },
  {
    "text": "will do now I will let me let me destroy and stop my k3s deployment because I",
    "start": "1005880",
    "end": "1013720"
  },
  {
    "text": "will restart my kubernetes cluster on yabb and now you will see that we no",
    "start": "1013720",
    "end": "1019000"
  },
  {
    "text": "longer have any new events coming to pogress because I killed my kubernetes deployment and we can exit from",
    "start": "1019000",
    "end": "1027600"
  },
  {
    "text": "the connection to the database now",
    "start": "1027600",
    "end": "1032918"
  },
  {
    "text": "yugabyte what I did with yugabyte the reason why I have these three virtual machines I decided to deploy a multi-",
    "start": "1032919",
    "end": "1039079"
  },
  {
    "text": "region ugab DB cluster because let's say that I want not just to",
    "start": "1039079",
    "end": "1045240"
  },
  {
    "text": "scale but I also want to tolerate region level outages if any of these",
    "start": "1045240",
    "end": "1051360"
  },
  {
    "text": "regions goes down or there is some incident then still my storage my",
    "start": "1051360",
    "end": "1056880"
  },
  {
    "text": "distributed database will be able to operate normally and also if I deploy kubernetes across several regions then",
    "start": "1056880",
    "end": "1064480"
  },
  {
    "text": "the the control plan and everything will be up and running as well so uh same as same as same as",
    "start": "1064480",
    "end": "1072120"
  },
  {
    "text": "pogress you go byb is also open source and I decided to just to deploy the to",
    "start": "1072120",
    "end": "1077480"
  },
  {
    "text": "download the latest version and deployed on my machine so it's uh located here this is",
    "start": "1077480",
    "end": "1083760"
  },
  {
    "text": "my first we the cluster is already running because I wanted to save the time but I will show you the status from",
    "start": "1083760",
    "end": "1090919"
  },
  {
    "text": "the command line and then I will show you the UI so ugab byb comes with this ugab by D",
    "start": "1090919",
    "end": "1098080"
  },
  {
    "text": "tool and it can show me the status of my",
    "start": "1098080",
    "end": "1103559"
  },
  {
    "text": "cluster so it said that the cluster is running I have the replic factor is",
    "start": "1104120",
    "end": "1109640"
  },
  {
    "text": "three it means that there will be three copies of every record for every data in",
    "start": "1109640",
    "end": "1115080"
  },
  {
    "text": "this database and I have three notes and there is a note in every region which",
    "start": "1115080",
    "end": "1120600"
  },
  {
    "text": "mean that every note will keep a copy of the of every record of every state that",
    "start": "1120600",
    "end": "1126159"
  },
  {
    "text": "is written by kubernetes into the table so this is the address and let's do this",
    "start": "1126159",
    "end": "1132240"
  },
  {
    "text": "uh it's running on this local private IP address let's do this",
    "start": "1132240",
    "end": "1137880"
  },
  {
    "text": "let's use p SQL where is my connection to pogress what I need to replace I'm",
    "start": "1137880",
    "end": "1143440"
  },
  {
    "text": "connecting to yugabyte that's the host number the port number is different and",
    "start": "1143440",
    "end": "1148559"
  },
  {
    "text": "then the user is yugabyte as long as yugabyte GB is built on pogress it's run",
    "start": "1148559",
    "end": "1154760"
  },
  {
    "text": "time and feature compatible I can reuse psql and other tools so we don't have any relations and now let's fix it what",
    "start": "1154760",
    "end": "1161679"
  },
  {
    "text": "we going to do next we are going to use exactly the same command we are downloading this k3s script with the l",
    "start": "1161679",
    "end": "1169360"
  },
  {
    "text": "release and we are going to start it we are going to use the following end point",
    "start": "1169360",
    "end": "1174960"
  },
  {
    "text": "again when the kubernetes starts it will see that we want to use pogress so that",
    "start": "1174960",
    "end": "1181880"
  },
  {
    "text": "kind will be using the implementation for pogress but in fact it's not going",
    "start": "1181880",
    "end": "1186960"
  },
  {
    "text": "to be vanilla pogress because this time we are going to kind is going to be connected to yabb even though it doesn't",
    "start": "1186960",
    "end": "1194559"
  },
  {
    "text": "know that it connects to the yabb it will be used in the POG implementation",
    "start": "1194559",
    "end": "1200280"
  },
  {
    "text": "all right so let's start it the startup of the cluster will",
    "start": "1200280",
    "end": "1205760"
  },
  {
    "text": "take bit longer time because it it runs across multiple regions and there is",
    "start": "1205760",
    "end": "1211600"
  },
  {
    "text": "probably it might be possible to introduce some of the implementations related to distributed",
    "start": "1211600",
    "end": "1217919"
  },
  {
    "text": "databases but still you can see that right now we also have a ugab byb this table this is the sequence this is",
    "start": "1217919",
    "end": "1224080"
  },
  {
    "text": "actually the sequence that generates those unique IDs for every event that is written into the database",
    "start": "1224080",
    "end": "1229919"
  },
  {
    "text": "is uh let's check the count for the events from",
    "start": "1229919",
    "end": "1237799"
  },
  {
    "text": "kind okay something is happening we have the events coming at",
    "start": "1239000",
    "end": "1245200"
  },
  {
    "text": "least no any failures I'm I'm glad to see it uh let's do the same let's see the",
    "start": "1245200",
    "end": "1252320"
  },
  {
    "text": "last five event from K order by ID Des sending the latest first and let's print",
    "start": "1252320",
    "end": "1258960"
  },
  {
    "text": "the five latest on the screen and then we run the watch command of pogress psql to see the events so generally it looks",
    "start": "1258960",
    "end": "1265799"
  },
  {
    "text": "like the cluster is up running it's good and uh what I said about",
    "start": "1265799",
    "end": "1271840"
  },
  {
    "text": "yugabyte uh let me quickly go here yeah yugabyte also has a",
    "start": "1271840",
    "end": "1279480"
  },
  {
    "text": "built-in uh monitoring panel if I go to let me to use this",
    "start": "1279480",
    "end": "1286240"
  },
  {
    "text": "external IP address uh of my class one of the VMS it's on this port",
    "start": "1286240",
    "end": "1291880"
  },
  {
    "text": "number so this is the UI you can see that this is my cluster I have this three notes one note is in Oregon",
    "start": "1291880",
    "end": "1300440"
  },
  {
    "text": "another one is in Las Vegas and the last one is in Salt Lake City they are running uh if you go to the databases",
    "start": "1300440",
    "end": "1307320"
  },
  {
    "text": "you will see this ugab you can see this kind table also you can see that kind",
    "start": "1307320",
    "end": "1312720"
  },
  {
    "text": "created several indexes let me show you to expedite the access some of those indexes to be needs to be reviewed",
    "start": "1312720",
    "end": "1319720"
  },
  {
    "text": "because they they are Irrelevant for a distributed database and you need to create something else but that's out of",
    "start": "1319720",
    "end": "1326240"
  },
  {
    "text": "question for today at least it works and it works uh pretty well",
    "start": "1326240",
    "end": "1332159"
  },
  {
    "text": "now uh let me check if the cluster is",
    "start": "1332159",
    "end": "1337279"
  },
  {
    "text": "operational yeah everything is up and running let's do this we have something",
    "start": "1337919",
    "end": "1345360"
  },
  {
    "text": "that is working we have some events in the database again that was a quick process it took me longer to deploy a",
    "start": "1345360",
    "end": "1350840"
  },
  {
    "text": "distributed database cluster uh than to start kubernetes on it but now I",
    "start": "1350840",
    "end": "1356559"
  },
  {
    "text": "downloaded a few basic kubernetes examples that many of us I guess used in the past uh let me go to this sample",
    "start": "1356559",
    "end": "1364279"
  },
  {
    "text": "folder I just want to start a sample application on kubernetes and then I",
    "start": "1364279",
    "end": "1369520"
  },
  {
    "text": "want to make sure that it works when kubernetes is running on distributed database so we using this CU C apply",
    "start": "1369520",
    "end": "1376919"
  },
  {
    "text": "command we are going to deploy this Emoji voto example and now let's take a look while",
    "start": "1376919",
    "end": "1383240"
  },
  {
    "text": "this example is going to is being deployed take a look at the database you can see this is what's being stored all",
    "start": "1383240",
    "end": "1388480"
  },
  {
    "text": "this information that something is being deployed Emoji Water Services replica sets etc etc all this information is",
    "start": "1388480",
    "end": "1396159"
  },
  {
    "text": "stored kubernetes API server pushes this information to K and K pushes this",
    "start": "1396159",
    "end": "1402000"
  },
  {
    "text": "information to distributed Po and this is what's happening now I don't see any rors which",
    "start": "1402000",
    "end": "1410320"
  },
  {
    "text": "is great now let's take a look at this deployment what's",
    "start": "1410320",
    "end": "1415640"
  },
  {
    "text": "inside uh scroll up Scroll up yeah so we have uh you don't scroll",
    "start": "1417279",
    "end": "1424360"
  },
  {
    "text": "well glitching something is glitching so we have some ports let me run it one",
    "start": "1424360",
    "end": "1431559"
  },
  {
    "text": "more time get all I don't",
    "start": "1431559",
    "end": "1436600"
  },
  {
    "text": "know my touchpad doesn't doesn't listen to me anyway we have ports we have",
    "start": "1436600",
    "end": "1442640"
  },
  {
    "text": "Services uh what else let me do this at least this this service let me take its",
    "start": "1442640",
    "end": "1448400"
  },
  {
    "text": "IP address and try to connect to it because it stands in front of our web",
    "start": "1448400",
    "end": "1454520"
  },
  {
    "text": "app I will use HTTP tool to pin the",
    "start": "1454520",
    "end": "1459720"
  },
  {
    "text": "service and we getting back some nicely",
    "start": "1459720",
    "end": "1464840"
  },
  {
    "text": "written HTML file with some JavaScript so generally everything works",
    "start": "1464840",
    "end": "1471320"
  },
  {
    "text": "normally kubernetes runs on distributed progress that can",
    "start": "1471320",
    "end": "1478360"
  },
  {
    "text": "scale across service regions and zones and that can toate various types of",
    "start": "1478360",
    "end": "1485080"
  },
  {
    "text": "outages and it's easy to accomplish especially uh keep this in mind when",
    "start": "1485080",
    "end": "1490440"
  },
  {
    "text": "might you might want to use this solution it's when you're really running",
    "start": "1490440",
    "end": "1495799"
  },
  {
    "text": "large kubernetes deployments I don't know hundreds or thousands of nodes I was involved in one of these projects",
    "start": "1495799",
    "end": "1502480"
  },
  {
    "text": "and when I was involved in that project we did not have kind so we had to manually just use our own Fork of",
    "start": "1502480",
    "end": "1508960"
  },
  {
    "text": "kubernetes just to replace kind with another distributed database but these days there is kind it's a very",
    "start": "1508960",
    "end": "1515399"
  },
  {
    "text": "wellmaintained project and it allows you to use pogress my SQL distributed",
    "start": "1515399",
    "end": "1521279"
  },
  {
    "text": "pogress for your needs if necessary now as long as we have how",
    "start": "1521279",
    "end": "1526640"
  },
  {
    "text": "much 10 minutes let's try to do this let's see what happens if I bring some",
    "start": "1526640",
    "end": "1533200"
  },
  {
    "text": "Havoc uh I haven't actually tried it with this demo but as long as we have",
    "start": "1533200",
    "end": "1538840"
  },
  {
    "text": "time uh let's suppose that there is some outage in this region let's shut down",
    "start": "1538840",
    "end": "1545919"
  },
  {
    "text": "this virtual machine let's see what's happens to the database and let's see what happens to our cuberes cluster we",
    "start": "1545919",
    "end": "1554200"
  },
  {
    "text": "are not going to stop the database nicely we are just going to kill this VM",
    "start": "1554200",
    "end": "1560240"
  },
  {
    "text": "I want to see some errors on the",
    "start": "1563240",
    "end": "1567399"
  },
  {
    "text": "database so here nothing yet it's still being",
    "start": "1572159",
    "end": "1580120"
  },
  {
    "text": "stopped waiting stopping it yeah probably Google",
    "start": "1580120",
    "end": "1586360"
  },
  {
    "text": "wants to shut down it now grad gradually nicely we'll",
    "start": "1586360",
    "end": "1594600"
  },
  {
    "text": "see let's see let's check what's happening with cetes CU tail get notes the database is",
    "start": "1597399",
    "end": "1609039"
  },
  {
    "text": "responding what's happening with the Google okay VM is stopped uh let me go to the database",
    "start": "1609039",
    "end": "1618480"
  },
  {
    "text": "yeah the UI the UI is glitching I don't know",
    "start": "1621240",
    "end": "1626600"
  },
  {
    "text": "why but here is you can see that the database functioning perfectly",
    "start": "1626600",
    "end": "1632559"
  },
  {
    "text": "well yeah the notes the notes screen yeah this note is clearly dead I",
    "start": "1634799",
    "end": "1641559"
  },
  {
    "text": "think this is the UI that was not updated let's do this actually hack uh",
    "start": "1641559",
    "end": "1648559"
  },
  {
    "text": "yab byb has this function called select cuz I'm connected to another node of",
    "start": "1648559",
    "end": "1653960"
  },
  {
    "text": "yabb cluster I killed one VM and it it shut down one of the nodes yoga byb has",
    "start": "1653960",
    "end": "1661399"
  },
  {
    "text": "this built-in function called I guess YB servers",
    "start": "1661399",
    "end": "1669039"
  },
  {
    "text": "servers you right so I have two notes left right according to this function",
    "start": "1671360",
    "end": "1677120"
  },
  {
    "text": "and that's enough two notes is enough because the replication factor is set to",
    "start": "1677120",
    "end": "1683000"
  },
  {
    "text": "three and ugab be uses the rough consensus protocol if the replication factor is set to three then we can lose",
    "start": "1683000",
    "end": "1691679"
  },
  {
    "text": "up to one Noe we lost one Noe and that's okay the database can accept keep keep accepting read and write requests if I",
    "start": "1691679",
    "end": "1698559"
  },
  {
    "text": "kill one more node then kind of the database will be operational but it will stop accepting read and write request",
    "start": "1698559",
    "end": "1705159"
  },
  {
    "text": "because the data might be in a in not consistent state but as for the",
    "start": "1705159",
    "end": "1710760"
  },
  {
    "text": "kubernetes it's fully operational let me call this service it works and uh",
    "start": "1710760",
    "end": "1717240"
  },
  {
    "text": "hopefully if I go to this screen was it refreshed no the UI something is",
    "start": "1717240",
    "end": "1723360"
  },
  {
    "text": "glitching with this UI but at least the database is up and",
    "start": "1723360",
    "end": "1729960"
  },
  {
    "text": "running kubernetes is functioning and we emulated region level outage one of the",
    "start": "1729960",
    "end": "1736279"
  },
  {
    "text": "database nodes went down but we survived so that's that's it what I wanted to show you uh it's supposed to",
    "start": "1736279",
    "end": "1743399"
  },
  {
    "text": "be a simple and quick demo and hopefully that was the case so now as I said the",
    "start": "1743399",
    "end": "1750240"
  },
  {
    "text": "reason why I decided not to create any slides for this demo and why I decided to do this Hands-On is if you folks find",
    "start": "1750240",
    "end": "1757480"
  },
  {
    "text": "this useful if you think that would benefit your current or future project then you know the pointers you know",
    "start": "1757480",
    "end": "1764600"
  },
  {
    "text": "already kubernetes you know relational databases such as pogress and the only one uh Missing Piece in",
    "start": "1764600",
    "end": "1772360"
  },
  {
    "text": "this was kind if you want to use a relational database such as P Yuga byb distributed progress for your kubernetes",
    "start": "1772360",
    "end": "1778960"
  },
  {
    "text": "deployments you need to get kind kind is very well maintained it's stable and it's blessed for production so thanks",
    "start": "1778960",
    "end": "1785480"
  },
  {
    "text": "for coming and we have uh 5 minutes left if you have any questions",
    "start": "1785480",
    "end": "1791350"
  },
  {
    "text": "[Applause]",
    "start": "1791350",
    "end": "1799410"
  },
  {
    "text": "okay we got a question hello can we hear me yeah uh question what consistency",
    "start": "1803480",
    "end": "1809399"
  },
  {
    "text": "guarantees does this provide and how have they been",
    "start": "1809399",
    "end": "1814559"
  },
  {
    "text": "validated uh so from the cons consistency guarantees yugabyte DB is a",
    "start": "1814559",
    "end": "1820279"
  },
  {
    "text": "transactional database same as pogress it supports uh all those essential",
    "start": "1820279",
    "end": "1826159"
  },
  {
    "text": "isolation levels such as repeatable reads realizable and uh by using and as",
    "start": "1826159",
    "end": "1833200"
  },
  {
    "text": "long as we are talking about a distributed database when you execute a transaction when you need to like each",
    "start": "1833200",
    "end": "1839760"
  },
  {
    "text": "this update right it needs to be replicated across multiple region you go byb uses the ra consensus protocol",
    "start": "1839760",
    "end": "1846440"
  },
  {
    "text": "meaning that you start the transaction and when you need to commit this transaction you need to get a quorum at",
    "start": "1846440",
    "end": "1853159"
  },
  {
    "text": "least of two nodes of your cluster with the replication factor of three so once two nodes come to an agreement uh this",
    "start": "1853159",
    "end": "1860279"
  },
  {
    "text": "update is considered completed and fully consistent and your application gets",
    "start": "1860279",
    "end": "1865600"
  },
  {
    "text": "back and acknowledgement and can can continue its execution thank you quick",
    "start": "1865600",
    "end": "1871240"
  },
  {
    "text": "followup so um point of clarification so uh one thing etcd provides is something",
    "start": "1871240",
    "end": "1878840"
  },
  {
    "text": "called strict linearizability um and it's a stronger consistency guarantee",
    "start": "1878840",
    "end": "1886000"
  },
  {
    "text": "than post grass's serializable ability so if anyone's considering running this in production I'd suggest you check",
    "start": "1886000",
    "end": "1893360"
  },
  {
    "text": "those uh consistency guarantees thanks yeah from consistency guarante because by by default pogress uses read",
    "start": "1893360",
    "end": "1900240"
  },
  {
    "text": "committed and read committed is good enough for most of the workloads but sometimes folks especially if you move",
    "start": "1900240",
    "end": "1906159"
  },
  {
    "text": "money or you have some kind of multi-step business applications yeah get to know different other isolation",
    "start": "1906159",
    "end": "1912799"
  },
  {
    "text": "levels that are provided by pogress yabb another database this is a good point",
    "start": "1912799",
    "end": "1919440"
  },
  {
    "text": "yeah if you'll allow a short followup um there's a fantastic bit of research from",
    "start": "1919440",
    "end": "1924919"
  },
  {
    "text": "uh Carl Kingsbury who does gips and testing of databases and uh yeah suggest folks have a look into that um when",
    "start": "1924919",
    "end": "1931559"
  },
  {
    "text": "they're considering these kind of options y thanks yeah thanks a lot hey uh great talk uh on a similar line are",
    "start": "1931559",
    "end": "1939159"
  },
  {
    "text": "there any drawbacks for using post versus atcd was my question uh like why would we not use post even for less than",
    "start": "1939159",
    "end": "1945799"
  },
  {
    "text": "100 notes for example uh let because I I don't I I didn't hear question well so",
    "start": "1945799",
    "end": "1951639"
  },
  {
    "text": "so uh why not use postest or relational database for even less than 100 nodes I",
    "start": "1951639",
    "end": "1956679"
  },
  {
    "text": "know you mentioned scale was one of the criteria we would use",
    "start": "1956679",
    "end": "1963519"
  },
  {
    "text": "uh so the reason why I showed yugabyte because in in the pogress",
    "start": "1963919",
    "end": "1969360"
  },
  {
    "text": "ecosystem uh it's easy to scale reads when let's say many of us use",
    "start": "1969360",
    "end": "1976279"
  },
  {
    "text": "probably Amazon RDS or or Google SQL or some other managed Services of pogress",
    "start": "1976279",
    "end": "1981519"
  },
  {
    "text": "or you can just start your pogress like generally like the general approach when we talk about POS scalability is one",
    "start": "1981519",
    "end": "1988039"
  },
  {
    "text": "primary server that handles both reads and writes and then you have replicas and replicas help you to upload the read",
    "start": "1988039",
    "end": "1994080"
  },
  {
    "text": "traffic and also those replicas just receive uh changes from the primary and can be",
    "start": "1994080",
    "end": "2001919"
  },
  {
    "text": "promoted to the primary if necessary the reason why I showed yab",
    "start": "2001919",
    "end": "2006960"
  },
  {
    "text": "byb is because for the use cases when you want to scale both read and wres and",
    "start": "2006960",
    "end": "2012840"
  },
  {
    "text": "when you just want the database itself just to easily handle all those failures because in the PO system when you use",
    "start": "2012840",
    "end": "2020120"
  },
  {
    "text": "Amazon RDS as an example that comes let's say with one primary let's say two",
    "start": "2020120",
    "end": "2025399"
  },
  {
    "text": "replicas or Amazon aora then the service itself handles all those failures and it",
    "start": "2025399",
    "end": "2031799"
  },
  {
    "text": "can take I don't know how many minutes or more to promote a replica true primary it depends on your requirements",
    "start": "2031799",
    "end": "2038360"
  },
  {
    "text": "in case of distributed databases such as yab byb it handles it happens much much",
    "start": "2038360",
    "end": "2043880"
  },
  {
    "text": "faster it's usually just in t of seconds like 5 10 seconds depends on the network latency Etc but generally this one is",
    "start": "2043880",
    "end": "2051320"
  },
  {
    "text": "for those who truly wants to have high availability out of the box just within",
    "start": "2051320",
    "end": "2056398"
  },
  {
    "text": "the database with recovery time objective it's like recovery time objective is how fast your database",
    "start": "2056399",
    "end": "2064158"
  },
  {
    "text": "can uh how to say uh how fast your database can uh handle an outage and for",
    "start": "2064159",
    "end": "2071520"
  },
  {
    "text": "yugabyte is around let's say 10 seconds and if you want to scale it isn't right if let's say you just need to scale",
    "start": "2071520",
    "end": "2077638"
  },
  {
    "text": "reads only and you are okay to wait let's say a minute or so while your replica is",
    "start": "2077639",
    "end": "2084200"
  },
  {
    "text": "promoted to the primary it's fine to use let's say POG in a configuration with",
    "start": "2084200",
    "end": "2090240"
  },
  {
    "text": "replicas that's totally fine that's it yeah so yeah",
    "start": "2090240",
    "end": "2097760"
  },
  {
    "text": "unfortunately we run out of time let let me let me take one last question and then folks if you have other questions I",
    "start": "2097760",
    "end": "2104960"
  },
  {
    "text": "will be happy to chat to you privately right last question so uh I'm not as",
    "start": "2104960",
    "end": "2112480"
  },
  {
    "text": "familiar with post SQL but is there an idea of U partitions that you can actually take different resources and",
    "start": "2112480",
    "end": "2118400"
  },
  {
    "text": "say pods are going to be one database while uh nodes are in different ones so if you get different resources scaling",
    "start": "2118400",
    "end": "2123960"
  },
  {
    "text": "up at different rates you can actually kind of handle that dynamically rather than configuring the API server to point",
    "start": "2123960",
    "end": "2129040"
  },
  {
    "text": "to different things uh that's one I know actually I don't know",
    "start": "2129040",
    "end": "2135720"
  },
  {
    "text": "uh so my kind of expertise primarily lies in their database part so like I we",
    "start": "2135720",
    "end": "2142079"
  },
  {
    "text": "can we can discuss let's say if you if you if you kind of understand how to what needs to be done at the layer above",
    "start": "2142079",
    "end": "2148760"
  },
  {
    "text": "right then we can sit down and discuss all right how this can be supported by the database because databases like this",
    "start": "2148760",
    "end": "2155800"
  },
  {
    "text": "one yab byb inter Al it uses partitioning like sharding sharding to",
    "start": "2155800",
    "end": "2161800"
  },
  {
    "text": "Shard your table across the cluster pogress has the concept of partitioning it's when when you have your primary",
    "start": "2161800",
    "end": "2167680"
  },
  {
    "text": "table and then you can split the table by partitioning key into child tables so",
    "start": "2167680",
    "end": "2173200"
  },
  {
    "text": "generally if you have some concept in mind that you try just to project how to project this concept of the database",
    "start": "2173200",
    "end": "2179359"
  },
  {
    "text": "this is what I will be able to discuss if it's unrelated to that then unfortunately I'm not the best guy to",
    "start": "2179359",
    "end": "2185480"
  },
  {
    "text": "ask all right thanks a lot for your time thanks a lot for coming and if you have any other questions I'm happy to chat",
    "start": "2185480",
    "end": "2191800"
  },
  {
    "text": "here",
    "start": "2191800",
    "end": "2194800"
  }
]