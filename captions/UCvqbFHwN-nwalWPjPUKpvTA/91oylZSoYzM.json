[
  {
    "text": "thank you all for for joining me here I think this is the last session before alcohol right I",
    "start": "120",
    "end": "7639"
  },
  {
    "text": "think I'm gon to talk very fast okay so I'm going to be talking",
    "start": "7639",
    "end": "13360"
  },
  {
    "text": "about service mesh um specifically two open source projects that Implement a",
    "start": "13360",
    "end": "18800"
  },
  {
    "text": "sidecar less version of service mesh my name is Christian I'm a global field CTO",
    "start": "18800",
    "end": "25760"
  },
  {
    "text": "at a company called solo.io I've been involved in the open source for a long",
    "start": "25760",
    "end": "32439"
  },
  {
    "text": "time uh service mesh for the last seven years I guess since uh early",
    "start": "32439",
    "end": "38680"
  },
  {
    "text": "2017 uh been involved with kubernetes since before it was uh 1.0 I worked at",
    "start": "38680",
    "end": "44399"
  },
  {
    "text": "Red Hat before this and uh was very involved in messaging and integration and all kinds of stuff before that so",
    "start": "44399",
    "end": "50360"
  },
  {
    "text": "distributed systems is uh is my background and specifically application layer application Level uh distributed",
    "start": "50360",
    "end": "56800"
  },
  {
    "text": "systems so um service mesh is part of the uh the cloud native networking",
    "start": "56800",
    "end": "64119"
  },
  {
    "text": "Journey um it does provide a lot of value and we've been working at at solo",
    "start": "64119",
    "end": "69799"
  },
  {
    "text": "and even before that um working with organizations that adopt this technology",
    "start": "69799",
    "end": "75159"
  },
  {
    "text": "for um reasons like security compliance zero trust mandates um multicloud",
    "start": "75159",
    "end": "83200"
  },
  {
    "text": "initiatives uh capabilities like obviously the some that we'll talk about today like mtls and and Mutual",
    "start": "83200",
    "end": "90119"
  },
  {
    "text": "authentication observability uh things like traffic control so you deploy into these public",
    "start": "90119",
    "end": "95840"
  },
  {
    "text": "clouds and uh you want to deploy new apis new Services you need to control traffic split traffic Blu green and",
    "start": "95840",
    "end": "102799"
  },
  {
    "text": "Canary traffic uh Implement things like locality aware and zonal aware affinity",
    "start": "102799",
    "end": "109159"
  },
  {
    "text": "and uh the mesh helps at the application layer to uh to do that but we can't",
    "start": "109159",
    "end": "114560"
  },
  {
    "text": "start talking about service mesh um and some of the architectural tradeoffs that",
    "start": "114560",
    "end": "120840"
  },
  {
    "text": "we'll look at these two projects without looking at a little bit of History right",
    "start": "120840",
    "end": "126039"
  },
  {
    "text": "Linker D was the first service mesh or modern service mesh that we know today and it was actually the first sidecar",
    "start": "126039",
    "end": "132360"
  },
  {
    "text": "list service mesh that we know today uh excuse me linkerd 1.x to be specific was",
    "start": "132360",
    "end": "138879"
  },
  {
    "text": "implemented as the finagle application libraries that were wrapped in deployed",
    "start": "138879",
    "end": "144360"
  },
  {
    "text": "into a container and in kubernetes what this looks like is you deploy it as a Damon set again this is linkerd 1.x this",
    "start": "144360",
    "end": "152000"
  },
  {
    "text": "is not the current uh iteration of linker D which is two two do something",
    "start": "152000",
    "end": "158200"
  },
  {
    "text": "2.15 um but in the original architecture it was deployed as a Damon set",
    "start": "158200",
    "end": "163440"
  },
  {
    "text": "applications sort of opted in to uh routing their traffic through the proxy",
    "start": "163440",
    "end": "169080"
  },
  {
    "text": "by using things like the HTP proxy environment variable and it would you",
    "start": "169080",
    "end": "174400"
  },
  {
    "text": "know traffic goes to the proxy the proxy would then do things like timeouts retries circuit breaking service discovery TLS that kind of stuff now",
    "start": "174400",
    "end": "183000"
  },
  {
    "text": "this this proxy was built in Scala ran on the jbm so there are some you know",
    "start": "183000",
    "end": "188959"
  },
  {
    "text": "drawbacks and challenges to this uh architecture and to this implementation that are specific to that um right you",
    "start": "188959",
    "end": "196200"
  },
  {
    "text": "couldn't size it the garbage collection in the jbm it was too big you couldn't you wouldn't use it as a sidecar um but",
    "start": "196200",
    "end": "203200"
  },
  {
    "text": "one of the bigger challenges and bigger problems that both drove the Linker d uh",
    "start": "203200",
    "end": "209200"
  },
  {
    "text": "community Community to rethink how they implement linkerd but also modern service meses in general was around this",
    "start": "209200",
    "end": "216400"
  },
  {
    "text": "idea of a a shared multi-tenant per node layer 7 proxy and what that means is",
    "start": "216400",
    "end": "224200"
  },
  {
    "text": "each node has its own proxy that handles all of the capabilities of the service",
    "start": "224200",
    "end": "229400"
  },
  {
    "text": "mesh for the applications and running on kubernetes you're not going to know ahead of time",
    "start": "229400",
    "end": "235560"
  },
  {
    "text": "what applications and what containers what API services are going be scheduled on each of the notes so the proxy kind",
    "start": "235560",
    "end": "243159"
  },
  {
    "text": "of has to handle everything uh and so that makes it very difficult to size and to understand what",
    "start": "243159",
    "end": "250000"
  },
  {
    "text": "resource usage will be it doesn't you're not sure what configuration each application will give to it and it can",
    "start": "250000",
    "end": "255760"
  },
  {
    "text": "vary wild wildly uh that makes it very difficult for the proxy to um provide",
    "start": "255760",
    "end": "261479"
  },
  {
    "text": "any quality of of service and prevent starvation and all this other stuff the the the typical Noisy Neighbor problems",
    "start": "261479",
    "end": "267759"
  },
  {
    "text": "that you would uh you would expect in in Computing other things like upgrades or taking",
    "start": "267759",
    "end": "272960"
  },
  {
    "text": "down that proxy would cause the node to go off effectively because the networking is down um you know jamming",
    "start": "272960",
    "end": "279400"
  },
  {
    "text": "all the security credentials and stuff into that into that proxy made it a Target uh you know these These are these",
    "start": "279400",
    "end": "285039"
  },
  {
    "text": "are pretty well known uh limitations of running a uh basically unbounded layer",
    "start": "285039",
    "end": "290199"
  },
  {
    "text": "7even per node proxy so what we did to offset that is",
    "start": "290199",
    "end": "296960"
  },
  {
    "text": "sort of go to The Other Extreme we uh built other proxies Envoy proxies one",
    "start": "296960",
    "end": "302280"
  },
  {
    "text": "the Linker D Community built a different one and deployed it very closely to the application now there were benefits to",
    "start": "302280",
    "end": "309120"
  },
  {
    "text": "this ideally it being trans a little bit more transparent than what Linker D was doing or others were doing with the HTP",
    "start": "309120",
    "end": "316000"
  },
  {
    "text": "proxy environment variable uh it became part of the application life cycle so it was a it was a sidecar another container",
    "start": "316000",
    "end": "322720"
  },
  {
    "text": "deployed in the Pod and you know that pod started up went down the the the",
    "start": "322720",
    "end": "328000"
  },
  {
    "text": "proxy went up and down with it as well uh it was single tenant we didn't try to share multi-tenant concerns so each",
    "start": "328000",
    "end": "334400"
  },
  {
    "text": "application could have its own configuration without worrying about what another application might do uh so",
    "start": "334400",
    "end": "340360"
  },
  {
    "text": "it avoided a lot of these Noisy Neighbor problems the uh uh we were able to assign cryptographic identity to uh the",
    "start": "340360",
    "end": "347319"
  },
  {
    "text": "workloads and have the side car handle all that stuff for us without you know trying to share a bunch of uh keys with",
    "start": "347319",
    "end": "352919"
  },
  {
    "text": "a central component so see these are some of the benefits I put an asterisk next to the",
    "start": "352919",
    "end": "358039"
  },
  {
    "text": "transparent uh bullet because it's not exactly as transparent as we want um but",
    "start": "358039",
    "end": "364680"
  },
  {
    "text": "you know you could argue that the sidecar pattern side car approach before kubernetes formerly introduced it",
    "start": "364680",
    "end": "372039"
  },
  {
    "text": "recently um was sort of a necessary evil or necessary point in time implementation to get the value out of",
    "start": "372039",
    "end": "380080"
  },
  {
    "text": "application level networking that we needed API gateways API management all that stuff wasn't wasn't cutting it for",
    "start": "380080",
    "end": "385199"
  },
  {
    "text": "these kubernetes based workloads were coming and going and scaling across on Prem public cloud and so on so side cars",
    "start": "385199",
    "end": "392840"
  },
  {
    "text": "they they they were what we used but doesn't matter what technology",
    "start": "392840",
    "end": "399319"
  },
  {
    "text": "decision you make there's always going to be trade-offs there's always going to be pros and cons in the sidecar world uh",
    "start": "399319",
    "end": "405400"
  },
  {
    "text": "before like I said there was formal support in uh in kubernetes we had to deal with container race conditions and",
    "start": "405400",
    "end": "413120"
  },
  {
    "text": "the life cycle wasn't handled appropriately things like cron jobs or jobs you know they stay last they they",
    "start": "413120",
    "end": "419039"
  },
  {
    "text": "they' keep running because the side car would continue to run uh the apps kind of needed to be aware of these proxies",
    "start": "419039",
    "end": "425280"
  },
  {
    "text": "being injected um you know you have to use the sidecar injection and change the yaml",
    "start": "425280",
    "end": "431199"
  },
  {
    "text": "formats and and all that stuff some security or uh security conscious organization said we don't want the",
    "start": "431199",
    "end": "438800"
  },
  {
    "text": "private key and secret material collocated with the app the app whether you're using Java or whatever Ruby",
    "start": "438800",
    "end": "445879"
  },
  {
    "text": "whatever goang they become the biggest targets and they can get comp compromise and then you get access to the key",
    "start": "445879",
    "end": "451000"
  },
  {
    "text": "material so we we want to separate that out um things like upgrad since you're bolting a piece of the infrastructure",
    "start": "451000",
    "end": "456960"
  },
  {
    "text": "into the application the applications have to be aware when you're doing upgrades um",
    "start": "456960",
    "end": "462000"
  },
  {
    "text": "ideally you want you would upgrade and cycle and Patch your your infrastructure separately from the application so the",
    "start": "462000",
    "end": "468560"
  },
  {
    "text": "side car has got us to where we where we are now they're not without their challenges I think there's still work",
    "start": "468560",
    "end": "474360"
  },
  {
    "text": "being done to improve them and I don't think they'll ever go away um but can be",
    "start": "474360",
    "end": "481240"
  },
  {
    "text": "improved um the folks at isent also covered some of these challenges in a blog that they published uh I don't know",
    "start": "481240",
    "end": "488199"
  },
  {
    "text": "a couple years ago I think um and they they pointed out some of the you know",
    "start": "488199",
    "end": "493639"
  },
  {
    "text": "drawbacks to the side card they touched on performance uh implications uh but",
    "start": "493639",
    "end": "498840"
  },
  {
    "text": "then they kind of also um in introduced A New Concept ebpf a uh an interesting",
    "start": "498840",
    "end": "505639"
  },
  {
    "text": "yet powerful uh way to extend the kernel and maybe start to push some of these",
    "start": "505639",
    "end": "510840"
  },
  {
    "text": "things into uh into the kernel the only thing is ebpf can't do or shouldn't do a",
    "start": "510840",
    "end": "518279"
  },
  {
    "text": "lot of the things that the modern layer 7 service mesh proxies do and we've",
    "start": "518279",
    "end": "523839"
  },
  {
    "text": "covered this I've covered this before we've had sessions actually at cucon EU last year that talk about the uh you",
    "start": "523839",
    "end": "530560"
  },
  {
    "text": "know where ebpf is appropriate where it's not where where what it can't do where capabilities in the service mesh",
    "start": "530560",
    "end": "537680"
  },
  {
    "text": "should live in a proxy or or not could can be done in the kernel and what this",
    "start": "537680",
    "end": "543279"
  },
  {
    "text": "boils down to is not whether you know there there there's the sidecar approach",
    "start": "543279",
    "end": "548640"
  },
  {
    "text": "and then there's the uh you know shared note approach but there's also a gradient in between the the real",
    "start": "548640",
    "end": "554800"
  },
  {
    "text": "question is where does that layer 7even proxy run because you still need it you still",
    "start": "554800",
    "end": "560800"
  },
  {
    "text": "need to do request level things you still need to do things like retries and timeouts and circuit breaking and",
    "start": "560800",
    "end": "566600"
  },
  {
    "text": "handling jots and validation and claims and uh all all of the request level traffic splitting all this stuff it",
    "start": "566600",
    "end": "572839"
  },
  {
    "text": "needs to be done somewhere ebpf is not the appropriate Place uh so you need a proxy now some of the some of the stacks",
    "start": "572839",
    "end": "579880"
  },
  {
    "text": "some of the service mesh capabilities are appropriate for uh uh deploying and",
    "start": "579880",
    "end": "585079"
  },
  {
    "text": "and implementing into the into the kernel and that's why you see like for example psyllium which we'll talk about which is a cni which has a lot of that",
    "start": "585079",
    "end": "592160"
  },
  {
    "text": "capability started to uh started to build it that way um so let's dig into into what the",
    "start": "592160",
    "end": "601640"
  },
  {
    "text": "cium approach is to service mesh and how uh ISO and existing established service",
    "start": "601640",
    "end": "607800"
  },
  {
    "text": "mesh has has also started to implement this uh this",
    "start": "607800",
    "end": "613680"
  },
  {
    "text": "pattern okay so first of all let's start with some of the benefits of going with",
    "start": "615880",
    "end": "620959"
  },
  {
    "text": "a side carless approach um these benefits were apparent",
    "start": "620959",
    "end": "626320"
  },
  {
    "text": "also in the uh the earlier incarnations of of the side car lless approach uh but",
    "start": "626320",
    "end": "631800"
  },
  {
    "text": "there you know we we've sort of worked out some of the drawbacks of that previous approach which we'll talk about",
    "start": "631800",
    "end": "637480"
  },
  {
    "text": "but these are the benefits and this is how it sort of overcomes some of the limitations of the sidecar the one of",
    "start": "637480",
    "end": "643600"
  },
  {
    "text": "the biggest things is um it becomes more transparent the applications cannot opt",
    "start": "643600",
    "end": "649240"
  },
  {
    "text": "out right the applications look like they're just talking to the network and in the network somewhere along the path",
    "start": "649240",
    "end": "655839"
  },
  {
    "text": "we apply the uh the service mesh capabilities you remove some of these you know",
    "start": "655839",
    "end": "661800"
  },
  {
    "text": "annoying things like the container race conditions um and in certain areas you",
    "start": "661800",
    "end": "667360"
  },
  {
    "text": "can improve performance and optimize the routing because it's not uh tied to the application anymore and each individual",
    "start": "667360",
    "end": "674800"
  },
  {
    "text": "implementation may have its own benefits which we'll we'll look at here so the first is celium I assume how many people",
    "start": "674800",
    "end": "681000"
  },
  {
    "text": "are familiar with celium can you raise your hand please I'd say at least half the room uh cium is a open source cni it",
    "start": "681000",
    "end": "688959"
  },
  {
    "text": "is it's built its Network policy and routing data plane on ebpf which allows",
    "start": "688959",
    "end": "695040"
  },
  {
    "text": "you to extend the kernel bypass some of the IP tables net filter kind of stuff in the in the kernel and just be very",
    "start": "695040",
    "end": "701120"
  },
  {
    "text": "specific and very fine grain about the behavior you want in uh in in the kernel as in this in this case with respect to",
    "start": "701120",
    "end": "708959"
  },
  {
    "text": "networking uh I mentioned Network policy layer three layer four Network policy um",
    "start": "708959",
    "end": "714200"
  },
  {
    "text": "we'll look at some of the layer seven stuff it can do it can act as a replacement for cube proxy and it lays",
    "start": "714200",
    "end": "720639"
  },
  {
    "text": "the foundation because of its uh layer three layer four capabilities for uh what a service mesh could be on top of",
    "start": "720639",
    "end": "727079"
  },
  {
    "text": "cium in the cium implementation there are um you know the",
    "start": "727079",
    "end": "734120"
  },
  {
    "text": "there there's a Gateway API implementation for Ingress so allowing traffic into the cluster which can then",
    "start": "734120",
    "end": "740440"
  },
  {
    "text": "be handled by the network policy there's uh an implementation of mutual authentication which we'll we'll talk",
    "start": "740440",
    "end": "746160"
  },
  {
    "text": "about I think I mentioned in the beginning security Mt Mutual authentication is one of the biggest",
    "start": "746160",
    "end": "751680"
  },
  {
    "text": "capabilities biggest features that people turn to a service mesh um so they",
    "start": "751680",
    "end": "756839"
  },
  {
    "text": "uh cium communities implemented that the cium network policy resource is a big",
    "start": "756839",
    "end": "763279"
  },
  {
    "text": "way for configuring some of these layers 7 policies and and service mesh capabilities and then you can also",
    "start": "763279",
    "end": "769760"
  },
  {
    "text": "configure on void directly and uh we'll talk about what that looks like ISO on",
    "start": "769760",
    "end": "775639"
  },
  {
    "text": "the other hand is started as a service mesh uh started back in 2017 or so and",
    "start": "775639",
    "end": "782560"
  },
  {
    "text": "started as a sidecar list or sidecar service mesh based on Envoy and",
    "start": "782560",
    "end": "788560"
  },
  {
    "text": "implementing workload identity with uh with spiffy and has the the normal",
    "start": "788560",
    "end": "794160"
  },
  {
    "text": "observability logging tracing uh capabilities that you would uh you would expect including mtls like I said again",
    "start": "794160",
    "end": "800839"
  },
  {
    "text": "I'll reinforce mtls Mutual authentication security zero trust networking these are the the main",
    "start": "800839",
    "end": "807120"
  },
  {
    "text": "reasons why people come to a a service mesh in the first place now ISO is not",
    "start": "807120",
    "end": "813519"
  },
  {
    "text": "super opinionated about the layer three and layer 4 underneath it so it can run",
    "start": "813519",
    "end": "819519"
  },
  {
    "text": "on any cni and when we start to look at the side car lless mode of iso it also",
    "start": "819519",
    "end": "826399"
  },
  {
    "text": "takes that that trait it doesn't matter what uh what CN is running on it can run on celium runs actually really nicely on",
    "start": "826399",
    "end": "832720"
  },
  {
    "text": "celium um and implements mtls uh implements layer 7 authoriz",
    "start": "832720",
    "end": "839199"
  },
  {
    "text": "ation policies as well as tries to be as Backward Compatible with the sidecar and interoperable with the sidecar approach",
    "start": "839199",
    "end": "846639"
  },
  {
    "text": "as uh as possible Gateway API is also supported in isio and has been for for a",
    "start": "846639",
    "end": "852279"
  },
  {
    "text": "little while same same ayum um and we'll be upgraded to production ready in uh",
    "start": "852279",
    "end": "859160"
  },
  {
    "text": "the next version of iso 1.22 if you look at the iso documentation it's going to say beta",
    "start": "859160",
    "end": "865040"
  },
  {
    "text": "beta is is the wrong word in the SEO Community I don't know why we change don't change that but um if you look at",
    "start": "865040",
    "end": "870839"
  },
  {
    "text": "just about every feature in STO it's marked as beta uh when it gets to Beta it's it's safe to use in uh in",
    "start": "870839",
    "end": "879839"
  },
  {
    "text": "production side carless uh approach and architecture that we're going to look at",
    "start": "881320",
    "end": "888079"
  },
  {
    "text": "today is through the lens of these five five five different uh bullet points",
    "start": "888079",
    "end": "895160"
  },
  {
    "text": "depending on the time I'm going to I'm going to try to get through all of it there's a lot here in each of these sections I will post the slides uh",
    "start": "895160",
    "end": "903360"
  },
  {
    "text": "online and I'll I'll make them available I'll share them on my social media or something and and through through the",
    "start": "903360",
    "end": "908959"
  },
  {
    "text": "cucon event as well but so we'll look at the control plane for sure we'll have time for that we'll look at the data",
    "start": "908959",
    "end": "914360"
  },
  {
    "text": "plane for sure and we look at Mutual authentication the last two just again Depending on time we'll uh we we'll try",
    "start": "914360",
    "end": "920600"
  },
  {
    "text": "to get through okay so the control plane architecture in cium is actually fairly",
    "start": "920600",
    "end": "926800"
  },
  {
    "text": "straightforward the uh there's a comp called the cium agent that lives on each worker node in kubernetes and that cium",
    "start": "926800",
    "end": "935040"
  },
  {
    "text": "agent is responsible for a couple things first of all watching the state of the the rest of the cluster by by",
    "start": "935040",
    "end": "940959"
  },
  {
    "text": "communicating with the kubernetes API and based on what you know gets",
    "start": "940959",
    "end": "946040"
  },
  {
    "text": "scheduled and so on what pods start up It'll recognize that there's a pod that gets started it'll create its networking",
    "start": "946040",
    "end": "952279"
  },
  {
    "text": "it'll create resources like the psyllium endpoint and cium identity and so on and",
    "start": "952279",
    "end": "957440"
  },
  {
    "text": "share that back with the the Cube API server now each agent sort of runs",
    "start": "957440",
    "end": "963240"
  },
  {
    "text": "independently it is watching this the the cube API and it's programming its",
    "start": "963240",
    "end": "969480"
  },
  {
    "text": "local data data plane all right so they kind of they run independently they're not trying to communicate and and share",
    "start": "969480",
    "end": "975399"
  },
  {
    "text": "anything in between each other uh so they're they're you know if if they fail or whatever then they can fail",
    "start": "975399",
    "end": "980720"
  },
  {
    "text": "independently without depending on other other parts the control plane",
    "start": "980720",
    "end": "987319"
  },
  {
    "text": "API um is consists of the Gateway API like I mentioned the kubernetes Gateway",
    "start": "987319",
    "end": "992440"
  },
  {
    "text": "API uh the cium network policy which is responsible for configuring things like",
    "start": "992440",
    "end": "997880"
  },
  {
    "text": "layer 7 authorizations um path base header base hey you can talk to this other service",
    "start": "997880",
    "end": "1003800"
  },
  {
    "text": "but you cannot Etc um and then I believe selum originally was planning on having",
    "start": "1003800",
    "end": "1010000"
  },
  {
    "text": "other meshes and their control planes live on top of the cium data plane uh so they really haven't built out a super",
    "start": "1010000",
    "end": "1017560"
  },
  {
    "text": "featureful control plan API but they do give direct access to to Envoy uh I",
    "start": "1017560",
    "end": "1023240"
  },
  {
    "text": "write in caution because the the Gateway API also translates to the envoy config",
    "start": "1023240",
    "end": "1030558"
  },
  {
    "text": "Envoy config can get a little hairy um so be careful if you're if you're doing",
    "start": "1030559",
    "end": "1035918"
  },
  {
    "text": "that they don't conflict and and and all kinds of other stuff the sto control",
    "start": "1035919",
    "end": "1041839"
  },
  {
    "text": "plan is slightly different uh each of the data plane components that live on the worker nodes they communicate with",
    "start": "1041839",
    "end": "1048438"
  },
  {
    "text": "an inter mediary component called the it's called the control plane but it's the XDS relay or XDS XDS uh implemented",
    "start": "1048439",
    "end": "1056200"
  },
  {
    "text": "control plane XTS is a protocol that is used to deliver updates on endpoints and services and routes and Etc uh this",
    "start": "1056200",
    "end": "1064160"
  },
  {
    "text": "component talks directly with the kubernetes API watches for changes in the system makes you know updates and",
    "start": "1064160",
    "end": "1070799"
  },
  {
    "text": "pushes them out to uh to the data plane now the reason why this is kind of separate is it's fairly sensitive the",
    "start": "1070799",
    "end": "1077200"
  },
  {
    "text": "sort of stuff that it's dealing with and we want to secure it and Harden it and keep it away as much as possible and",
    "start": "1077200",
    "end": "1082840"
  },
  {
    "text": "just make it read only to the uh to the data plane sto has been around for a lot",
    "start": "1082840",
    "end": "1088360"
  },
  {
    "text": "longer as a service mesh it has a more full featured API for its control plane things like specifying routing and",
    "start": "1088360",
    "end": "1095120"
  },
  {
    "text": "traffic splitting and faal injection and load balancing and so on authorization policies and um uh handling jot tokens",
    "start": "1095120",
    "end": "1103919"
  },
  {
    "text": "and validating them and so on so there's there's a little bit more you don't have to deal directly with Envoy at uh at",
    "start": "1103919",
    "end": "1110679"
  },
  {
    "text": "iso's control plane although you can you can break glass in the sidecar approach",
    "start": "1110679",
    "end": "1116120"
  },
  {
    "text": "for uh um for configuring Envoy directly in the am in the ambient or side carless",
    "start": "1116120",
    "end": "1121679"
  },
  {
    "text": "mode there's a there's a different approach that I'll touch on okay so that's that's the state of",
    "start": "1121679",
    "end": "1128280"
  },
  {
    "text": "the world that's how configuration gets to the data plane now let's look at the components in in the data plane so in",
    "start": "1128280",
    "end": "1135520"
  },
  {
    "text": "psyllium like I mentioned the psyllium agent which lives on each of these nodes communicates with the control plane",
    "start": "1135520",
    "end": "1140600"
  },
  {
    "text": "tries to understand what the rest of the state is it also you know takes care of the pods that are starting up on its",
    "start": "1140600",
    "end": "1147200"
  },
  {
    "text": "local node and it's configuring the ebpf layer the ebpf uh uh data plane that",
    "start": "1147200",
    "end": "1154559"
  },
  {
    "text": "that implements which is used for connection handling and um uh load",
    "start": "1154559",
    "end": "1159919"
  },
  {
    "text": "balancing and and network policy and and so on so capabilities that need to exist",
    "start": "1159919",
    "end": "1165480"
  },
  {
    "text": "in a uh in in a service mesh for things that live in if you remember that",
    "start": "1165480",
    "end": "1172240"
  },
  {
    "text": "chart above in the in the or the pink or red uh rows the layer seven rows",
    "start": "1172240",
    "end": "1178720"
  },
  {
    "text": "psyllium ends up using Envoy and Envoy proxy and when traffic needs to uh you",
    "start": "1178720",
    "end": "1186200"
  },
  {
    "text": "know we need to enforce layer 7 policy on it or we need to collect layer 7 observability on it that will be coming",
    "start": "1186200",
    "end": "1193520"
  },
  {
    "text": "and ser it'll be served and implemented by the uh the envoy proxy that runs as a dam set on each of the worker nodes you",
    "start": "1193520",
    "end": "1201440"
  },
  {
    "text": "can see that in we we've separated out the handling of layer three and",
    "start": "1201440",
    "end": "1207360"
  },
  {
    "text": "layer four from that of layer seven we're going to rely on layer seven for the in the layer seven proxy and all the",
    "start": "1207360",
    "end": "1213520"
  },
  {
    "text": "ebpf and uh in inside the cni capabilities for layer three and layer",
    "start": "1213520",
    "end": "1219679"
  },
  {
    "text": "four for multi- node you know cross node communication we have the same approach",
    "start": "1219679",
    "end": "1226679"
  },
  {
    "text": "if it's if it needs layer 7even off authorizations on Ingress or egress it'll pass through Envoy proxy uh I I",
    "start": "1226679",
    "end": "1233240"
  },
  {
    "text": "don't depict this here but if if it doesn't need layer 7even it'll bypass that completely uh layer seven is a",
    "start": "1233240",
    "end": "1239880"
  },
  {
    "text": "fairly comp um uh compute intensive or expensive operation we want to avoid it",
    "start": "1239880",
    "end": "1246000"
  },
  {
    "text": "if we can but a lot of the uh a lot of the service mesh capabilities do exist at layer 7 so it's not that not that",
    "start": "1246000",
    "end": "1252400"
  },
  {
    "text": "easy to avoid in psyllium we can encrypt the",
    "start": "1252400",
    "end": "1258080"
  },
  {
    "text": "traffic that's transiting the network between nodes by enabling a feature",
    "start": "1258080",
    "end": "1263679"
  },
  {
    "text": "called um transparent encryption and that's delivered by a uh um in in kernel",
    "start": "1263679",
    "end": "1270360"
  },
  {
    "text": "wire guard or IPC in ISO we also have this separation",
    "start": "1270360",
    "end": "1279559"
  },
  {
    "text": "of layer four and layer seven so this is ISO ambient mode or the side carless",
    "start": "1279559",
    "end": "1285080"
  },
  {
    "text": "mode and what we do with that is we run a component called the Z tunnel as a Damon set which handles only layer 4 and",
    "start": "1285080",
    "end": "1293880"
  },
  {
    "text": "mtls for the workloads on that node um what ends up happening is the",
    "start": "1293880",
    "end": "1301080"
  },
  {
    "text": "Pod when it's communicating with the outside world with mtls enabled for example the traffic leaves the pods",
    "start": "1301080",
    "end": "1307919"
  },
  {
    "text": "Network Nam space with mtls enabled so that traffic can then flow through to",
    "start": "1307919",
    "end": "1314360"
  },
  {
    "text": "the rest of the network the cni like I said ifo supports any uh any cni and um",
    "start": "1314360",
    "end": "1321279"
  },
  {
    "text": "you know eventually to its Target destination this is a little bit Zoom",
    "start": "1321279",
    "end": "1326559"
  },
  {
    "text": "zoomed in closer look of what what I mean by that the Z tunnel like I said it runs as a Damon set it's a layer 4 proxy",
    "start": "1326559",
    "end": "1333400"
  },
  {
    "text": "um but its ports are mapped directly into the pod's individual network name spaces so when traffic exits the Pod",
    "start": "1333400",
    "end": "1341520"
  },
  {
    "text": "it's already been encapsulated or encrypted with uh with mtls Z tunnel knows which uh certificates to associate",
    "start": "1341520",
    "end": "1349600"
  },
  {
    "text": "with the connection that represent you know which in this case pod a or pod b or whatever and knows to accept a uh uh",
    "start": "1349600",
    "end": "1359279"
  },
  {
    "text": "mtls or or to make an mtls connection with the other side this is what it would look like in",
    "start": "1359279",
    "end": "1367120"
  },
  {
    "text": "a um non layer 7 mode so just in layer four mode everything's encrypted and",
    "start": "1367120",
    "end": "1373200"
  },
  {
    "text": "goes through the uh um through the network from the Pod it terminates at",
    "start": "1373200",
    "end": "1378720"
  },
  {
    "text": "the Z tunnel on the other side at the Pod Maps directly uh is the converse it",
    "start": "1378720",
    "end": "1384400"
  },
  {
    "text": "Maps directly into the network name space of the uh of the other pods now like I said we separate out",
    "start": "1384400",
    "end": "1391520"
  },
  {
    "text": "layers layer four and layer seven so that means at some point if we need layer 7 capability we need to enable",
    "start": "1391520",
    "end": "1397400"
  },
  {
    "text": "that enable that somewhere and in ambient we enable layer 7 in the network",
    "start": "1397400",
    "end": "1403720"
  },
  {
    "text": "and that can be uh deployed in a namespace it's typically running on a kubernetes cluster somewhere but the",
    "start": "1403720",
    "end": "1410240"
  },
  {
    "text": "point in ambient is it doesn't matter it's not mapped as a sidecar it's not mapped as a per node proxy uh it can be",
    "start": "1410240",
    "end": "1416880"
  },
  {
    "text": "scaled independently as I think I depict here um where you need layer seven on",
    "start": "1416880",
    "end": "1423960"
  },
  {
    "text": "the Z tunnel and Ste will know where to route to that uh that layer 7 proxy that",
    "start": "1423960",
    "end": "1430760"
  },
  {
    "text": "layer 7 proxy can then be scaled like I said independently and sized for the traffic that that it needs to",
    "start": "1430760",
    "end": "1437120"
  },
  {
    "text": "accommodate all alternatively in the sidecar mode if you wanted to scale up you scale up your workloads and that",
    "start": "1437120",
    "end": "1443559"
  },
  {
    "text": "will scale up the proxies um but you might have more proxies than you need and so with with",
    "start": "1443559",
    "end": "1450279"
  },
  {
    "text": "with the Waypoint approach in uh in ambient we can sort of get the best of both both worlds we don't use a lot of",
    "start": "1450279",
    "end": "1457120"
  },
  {
    "text": "uh of resources to support this we use just the right amount and right size it to the to the traffic load now you end",
    "start": "1457120",
    "end": "1463360"
  },
  {
    "text": "up taking extra hops but we we found in testing is that",
    "start": "1463360",
    "end": "1469679"
  },
  {
    "text": "you you um instead of going from one side car to another side car which",
    "start": "1469679",
    "end": "1475399"
  },
  {
    "text": "parses layer seven like I said layer 7 is pretty expensive computationally uh we just exchange the",
    "start": "1475399",
    "end": "1481600"
  },
  {
    "text": "two layer seven processes for one and we take two uh layer layer three Hops and",
    "start": "1481600",
    "end": "1488120"
  },
  {
    "text": "those are actually cheaper than processing of layer seven now with now hopefully you have a",
    "start": "1488120",
    "end": "1496080"
  },
  {
    "text": "good understanding of what the data plane looks like this next section is going to get into a little bit more detail I marked this session as",
    "start": "1496080",
    "end": "1502320"
  },
  {
    "text": "intermediate hopefully it's not too too much detail um but uh we're going to",
    "start": "1502320",
    "end": "1507640"
  },
  {
    "text": "look at the way Mutual authentication specifically is implemented in both celium and in",
    "start": "1507640",
    "end": "1516640"
  },
  {
    "text": "isum now I don't can you can you see that okay looks small on my laptop but",
    "start": "1516640",
    "end": "1522559"
  },
  {
    "text": "hopefully on the larger screen is right before we understand what or how Mutual authentication Works in",
    "start": "1522559",
    "end": "1528919"
  },
  {
    "text": "um in cium we kind of need to understand how the layer three layer four Network policy gets applied in celium when pod a",
    "start": "1528919",
    "end": "1536799"
  },
  {
    "text": "wants to talk to pod B that traffic will make it into the kernel into the ebpf data plane and what the policy engine",
    "start": "1536799",
    "end": "1545240"
  },
  {
    "text": "ends up doing is saying hey what what IP address is this and what cium identity",
    "start": "1545240",
    "end": "1551080"
  },
  {
    "text": "is this maap to um I don't have time to explain identity but hopefully you're somewhat familiar I could go look",
    "start": "1551080",
    "end": "1556960"
  },
  {
    "text": "it up but it's basic basically an integer that is associated with a set of",
    "start": "1556960",
    "end": "1562039"
  },
  {
    "text": "labels and in cium what we do is we associate IP addresses for example the",
    "start": "1562039",
    "end": "1567919"
  },
  {
    "text": "IP addresses are associated with a group of PODS to an identity and what we do in the policy",
    "start": "1567919",
    "end": "1574760"
  },
  {
    "text": "engine then is look up the identity based on its IP address and then we say can this identity talk to this",
    "start": "1574760",
    "end": "1581120"
  },
  {
    "text": "identity right and if it can then we let the traffic proceed if we can't then we drop",
    "start": "1581120",
    "end": "1586279"
  },
  {
    "text": "it in the mutual authentic implementation of psyllium we do the same thing however before we get to that",
    "start": "1586279",
    "end": "1594159"
  },
  {
    "text": "part we we we ask the uh the abpf policy engine hey has this been has this",
    "start": "1594159",
    "end": "1601559"
  },
  {
    "text": "connection or has this traffic been authenticated and if it is then we go through the rest of the process I just",
    "start": "1601559",
    "end": "1607880"
  },
  {
    "text": "described if not then we drop it and then we trigger another process in user",
    "start": "1607880",
    "end": "1614000"
  },
  {
    "text": "space to go do the Authentication right so now at some",
    "start": "1614000",
    "end": "1620240"
  },
  {
    "text": "point so there a is trying to talk to B at some point the user space process in this",
    "start": "1620240",
    "end": "1627200"
  },
  {
    "text": "case it's the psyllium agent will go make a mtls connection",
    "start": "1627200",
    "end": "1632880"
  },
  {
    "text": "it'll use spiffy based uh esds or or certificates that it gets from Spire",
    "start": "1632880",
    "end": "1638799"
  },
  {
    "text": "that represent these workloads and it'll make this connection if the connection succeeds then the then the",
    "start": "1638799",
    "end": "1645320"
  },
  {
    "text": "authentication part of TLS has happened successfully it'll close the connection and then go",
    "start": "1645320",
    "end": "1652159"
  },
  {
    "text": "Mark in a ebpf map or authent off cach that yes the flows between A and B have",
    "start": "1652159",
    "end": "1658799"
  },
  {
    "text": "been authenticated and it'll put a time to live there and and and so on um you",
    "start": "1658799",
    "end": "1665159"
  },
  {
    "text": "know from there the the ebpf engine will be able to go back and um and say oh",
    "start": "1665159",
    "end": "1672320"
  },
  {
    "text": "this has been authenticated okay let's let's proceed to the next step and when we see to the next step we",
    "start": "1672320",
    "end": "1679240"
  },
  {
    "text": "again try to figure out what the identity is and decide whether or not to uh to proceed there now this is quite a",
    "start": "1679240",
    "end": "1687279"
  },
  {
    "text": "bit different than what ISO does or what uh um other service meshes do the the",
    "start": "1687279",
    "end": "1694919"
  },
  {
    "text": "idea behind doing this is to be able to support multiple different types of uh",
    "start": "1694919",
    "end": "1700240"
  },
  {
    "text": "protocols uh to pay the cost of the handshake the mtls handshake once and",
    "start": "1700240",
    "end": "1705960"
  },
  {
    "text": "then you know just kind of push push things over the wire for things to be encrypted after that we have to go back and use the transparent encryption that",
    "start": "1705960",
    "end": "1713320"
  },
  {
    "text": "uh that selum can do already from node to node um using wire guard or IPC or or",
    "start": "1713320",
    "end": "1719120"
  },
  {
    "text": "whatever the challenge here is and I've written about this and I'll share the link here is that this IP to psyllium",
    "start": "1719120",
    "end": "1726480"
  },
  {
    "text": "identity mapping can get confused um it is a stateful process the",
    "start": "1726480",
    "end": "1733320"
  },
  {
    "text": "caches on both sides of the nodes have to be up to date understand exactly what the IP to Identity mapping is and this",
    "start": "1733320",
    "end": "1741559"
  },
  {
    "text": "can get mistaken um the uh the ciling project is working on this I think they Mark Mutual",
    "start": "1741559",
    "end": "1747640"
  },
  {
    "text": "authentication as beta they recognize this they're working on this um but at at least at this point we have there's",
    "start": "1747640",
    "end": "1753279"
  },
  {
    "text": "something at least to uh to be aware of how it works and uh some of the known um",
    "start": "1753279",
    "end": "1759600"
  },
  {
    "text": "um architectural issues with it in in ISO we use mtls for Mutual",
    "start": "1759600",
    "end": "1769240"
  },
  {
    "text": "authentication and like I said iso's always used spiffy for its implementation and it can plug in Spire",
    "start": "1769240",
    "end": "1775919"
  },
  {
    "text": "but spiffy is the is the identity for the svids and it proxies that through",
    "start": "1775919",
    "end": "1781120"
  },
  {
    "text": "the Z tunnel the Z tunnel actually will open up a u what's called a HTTP based",
    "start": "1781120",
    "end": "1787120"
  },
  {
    "text": "overlay Network or H bone transport between the two Z tunnels so that let's",
    "start": "1787120",
    "end": "1792960"
  },
  {
    "text": "say pod a is trying to talk to pod C and they open up 10 connections uh you don't",
    "start": "1792960",
    "end": "1799720"
  },
  {
    "text": "want 10 individual mtls connections you end up having one and they get multiplexed over that uh over that",
    "start": "1799720",
    "end": "1805919"
  },
  {
    "text": "transport Z tunnel is responsible for going to get the certificates that represent pod a or pod b or whatever is",
    "start": "1805919",
    "end": "1812600"
  },
  {
    "text": "running on its specific node uh the the ambient mode use a",
    "start": "1812600",
    "end": "1820039"
  },
  {
    "text": "standard uh mtls based on on spiffy there's no caching or or state that",
    "start": "1820039",
    "end": "1825240"
  },
  {
    "text": "needs to be propagated and like I said can be combined with uh with the cium",
    "start": "1825240",
    "end": "1830760"
  },
  {
    "text": "cni all right we're running a little bit short on time let me do the observability part uh cium has already",
    "start": "1830760",
    "end": "1840200"
  },
  {
    "text": "even before the service mesh components got added has a very powerful observability implementation the layer",
    "start": "1840200",
    "end": "1846840"
  },
  {
    "text": "three and layer four Implement uh implementation of uh uh metrics collection and what's happening in the",
    "start": "1846840",
    "end": "1852840"
  },
  {
    "text": "kernel can be shared out into a component called Hubble Hubble has a really nice UI for the displaying the uh",
    "start": "1852840",
    "end": "1859120"
  },
  {
    "text": "the flows for the traffic in between the various pods um Envoy is used for the",
    "start": "1859120",
    "end": "1864840"
  },
  {
    "text": "layer seven metrics and all of this stuff can if you're using Prometheus or",
    "start": "1864840",
    "end": "1869960"
  },
  {
    "text": "elastic or data dog or whatever all this stuff can be piped back to your existing um existing observability",
    "start": "1869960",
    "end": "1878398"
  },
  {
    "text": "stack um sto also supports these uh you know being able to get metrics out into",
    "start": "1878720",
    "end": "1885360"
  },
  {
    "text": "into Prometheus from both the Z tunnel component component as well as the uh the layer seven proxies of layer 7even",
    "start": "1885360",
    "end": "1892320"
  },
  {
    "text": "components um that's let's go we we'll go we'll get",
    "start": "1892320",
    "end": "1898039"
  },
  {
    "text": "through the Gateway One uh the last the last one is around uh getting traffic",
    "start": "1898039",
    "end": "1903639"
  },
  {
    "text": "into the system and various traffic control mechanisms in the east west Direction in psyllium we use the uh the",
    "start": "1903639",
    "end": "1912720"
  },
  {
    "text": "layer seven Envoy proxies per on each node as the uh as the Ingress mechan ISM",
    "start": "1912720",
    "end": "1918600"
  },
  {
    "text": "so traffic come you specify uh uh Gateway and specify gate using the",
    "start": "1918600",
    "end": "1924000"
  },
  {
    "text": "Gateway API HTP routes and all kinds of stuff and then psyllium cium control point will go program the uh the envoy",
    "start": "1924000",
    "end": "1930679"
  },
  {
    "text": "proxies to uh uh to handle traffic for for Ingress um",
    "start": "1930679",
    "end": "1936720"
  },
  {
    "text": "the right right now like I said it is sharing the same Proxes as the East West um mechanism but that is I think going",
    "start": "1936720",
    "end": "1944279"
  },
  {
    "text": "to be split out into its own uh own proxies so that you can handle that separately I know a lot of folks who use",
    "start": "1944279",
    "end": "1951919"
  },
  {
    "text": "uh Ingress they they kind of want to have dedicated Ingress nodes for Ingress proxies for",
    "start": "1951919",
    "end": "1957120"
  },
  {
    "text": "them uh that's something I don't know how well you can see that but uh ISO amb mesh just it doesn't do anything",
    "start": "1957120",
    "end": "1963679"
  },
  {
    "text": "differently from whato was doing before Ando had an Ingress Gateway and ties in",
    "start": "1963679",
    "end": "1969360"
  },
  {
    "text": "with the the the mtls and mutual authentication parts of of iso",
    "start": "1969360",
    "end": "1975639"
  },
  {
    "text": "already all right so if we do a a quick uh a quick recap of the service mesh",
    "start": "1975639",
    "end": "1980960"
  },
  {
    "text": "architectures where each of them is today they're contining continuing to evolve and continuing to uh expand and",
    "start": "1980960",
    "end": "1988320"
  },
  {
    "text": "improve um so this this is just a recap what basic service mesh capabilities",
    "start": "1988320",
    "end": "1994519"
  },
  {
    "text": "likely exists in a in a mature service mesh um things at layer 7 uh",
    "start": "1994519",
    "end": "2000440"
  },
  {
    "text": "observability uh mtls or Mutual authentication and where they're kind of implemented or suggested to be",
    "start": "2000440",
    "end": "2007279"
  },
  {
    "text": "implemented in the uh cium case uh for those routing",
    "start": "2007279",
    "end": "2013039"
  },
  {
    "text": "controls and and uh things like traffic splitting and retries in celium you're",
    "start": "2013039",
    "end": "2019360"
  },
  {
    "text": "expected to use the envo crds directly uh I do expect that to evolve and to uh",
    "start": "2019360",
    "end": "2024960"
  },
  {
    "text": "to to mature however whether adopting an existing control plane or or you know building out control plane API for that",
    "start": "2024960",
    "end": "2032279"
  },
  {
    "text": "uh but then request level authorizations can already be done nicely in the celium network policy um OB observing layer",
    "start": "2032279",
    "end": "2039440"
  },
  {
    "text": "7even traffic can be done and pulled from from Envoy today in the open source project um and then in mutual",
    "start": "2039440",
    "end": "2046320"
  },
  {
    "text": "authentication like we walked through that's implemented using a combination of ebpf and the user space uh silly",
    "start": "2046320",
    "end": "2055520"
  },
  {
    "text": "magents and okay so this this shows uh specifically where uh what what",
    "start": "2055520",
    "end": "2062200"
  },
  {
    "text": "component and then if we look at the architectural recap and compare it to",
    "start": "2062200",
    "end": "2067720"
  },
  {
    "text": "some of the um the different patterns that that I pointed out actually one of the blogs we didn't walk through it but",
    "start": "2067720",
    "end": "2074839"
  },
  {
    "text": "uh the resource utilization resource overhead of a uh node-based proxy system",
    "start": "2074839",
    "end": "2080320"
  },
  {
    "text": "is actually really good uh but you trade off feature isolation and uh sort of",
    "start": "2080320",
    "end": "2086040"
  },
  {
    "text": "competing for that resource on on the particular node uh the security granularity and uh upgrade impact is",
    "start": "2086040",
    "end": "2092878"
  },
  {
    "text": "sort of uh medium in this uh in this architecture if you take down that proxy it it uh you know takes down the entire",
    "start": "2092879",
    "end": "2099599"
  },
  {
    "text": "node if you take down or the proxy gets uh cve or vulnerability or somehow",
    "start": "2099599",
    "end": "2106280"
  },
  {
    "text": "attacked uh it can impact the uh the workloads on that on that node uh in in ISO in the ambient mode we",
    "start": "2106280",
    "end": "2114680"
  },
  {
    "text": "look at everything is is implemented in user space except for the cni components",
    "start": "2114680",
    "end": "2120800"
  },
  {
    "text": "the uh Envoy proxy used for a majority of the request in traffic management uh mtls and uh that's implemented in the Z",
    "start": "2120800",
    "end": "2128400"
  },
  {
    "text": "tunnel which is the the layer four components connection handling and metrics Etc is also implemented in uh in",
    "start": "2128400",
    "end": "2134200"
  },
  {
    "text": "Z tunnel um now in in ISO we've",
    "start": "2134200",
    "end": "2139839"
  },
  {
    "text": "eliminated the side cars so we get better resource overhead it'll just depend on your workload uh you know",
    "start": "2139839",
    "end": "2146079"
  },
  {
    "text": "needs the feature isolation is a lot better because we don't have any shared tency everything all those proxies are",
    "start": "2146079",
    "end": "2151520"
  },
  {
    "text": "single single tenant uh the uh the security granularity since we're not",
    "start": "2151520",
    "end": "2156640"
  },
  {
    "text": "using layer 7even on the individual nodes um we I'm running out of time here",
    "start": "2156640",
    "end": "2163400"
  },
  {
    "text": "um since we're not using uh layer 7even we have a much smaller attack surface on each individual node uh the up upgrade",
    "start": "2163400",
    "end": "2169560"
  },
  {
    "text": "impact is still like if you take that Z tunnel proxy down uh you will lose the traffic on uh on that node I do want to",
    "start": "2169560",
    "end": "2177040"
  },
  {
    "text": "point out that this is the first service mesh Talk of the of cucon that there's a number of service mesh talks coming up",
    "start": "2177040",
    "end": "2183599"
  },
  {
    "text": "on Friday I think the first one starting at 11: uh and and Christine Kim from isovalent will go through you know how",
    "start": "2183599",
    "end": "2190800"
  },
  {
    "text": "the cni and how the service M interact or intersect on psyllium uh and we also have a a good talk on larger scale",
    "start": "2190800",
    "end": "2197920"
  },
  {
    "text": "deployments with uh with with Theo and uh and Spire uh the last thing I'll point out is these Technologies are",
    "start": "2197920",
    "end": "2204520"
  },
  {
    "text": "composable they're intended to work really nicely together um cute little acronym for the the stack that can be",
    "start": "2204520",
    "end": "2211040"
  },
  {
    "text": "made using these Technologies as cakes um but uh yeah I appreciate you uh",
    "start": "2211040",
    "end": "2216599"
  },
  {
    "text": "coming out this afternoon go get some beers and if you have any questions any comments push back different opinions",
    "start": "2216599",
    "end": "2222800"
  },
  {
    "text": "whatever please reach out to me uh happy to chat offline or over",
    "start": "2222800",
    "end": "2227880"
  },
  {
    "text": "beers thank",
    "start": "2227880",
    "end": "2231039"
  },
  {
    "text": "you",
    "start": "2233119",
    "end": "2236119"
  }
]