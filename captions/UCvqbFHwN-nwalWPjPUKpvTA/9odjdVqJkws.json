[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hi my name is karen murray i'm a ci city",
    "start": "0",
    "end": "2320"
  },
  {
    "text": "engineer at ibm",
    "start": "2320",
    "end": "4240"
  },
  {
    "text": "working within the cloud pack for watson",
    "start": "4240",
    "end": "5920"
  },
  {
    "text": "ai ops team",
    "start": "5920",
    "end": "7680"
  },
  {
    "text": "my area of expertise is in the adoption",
    "start": "7680",
    "end": "10000"
  },
  {
    "text": "of git ops",
    "start": "10000",
    "end": "11280"
  },
  {
    "text": "in the development and operation of",
    "start": "11280",
    "end": "12960"
  },
  {
    "text": "deployment pipelines",
    "start": "12960",
    "end": "15599"
  },
  {
    "text": "today i'm joined with my colleague ying",
    "start": "15599",
    "end": "17520"
  },
  {
    "text": "mo",
    "start": "17520",
    "end": "18240"
  },
  {
    "text": "to present on the topic of git ups and",
    "start": "18240",
    "end": "20000"
  },
  {
    "text": "crossplane and its application across",
    "start": "20000",
    "end": "22960"
  },
  {
    "text": "both traditional",
    "start": "22960",
    "end": "24240"
  },
  {
    "text": "non-cloud native it environments and",
    "start": "24240",
    "end": "26320"
  },
  {
    "text": "cloud native applications",
    "start": "26320",
    "end": "29960"
  },
  {
    "start": "30000",
    "end": "30000"
  },
  {
    "text": "so an overview of the agenda um first",
    "start": "30000",
    "end": "32480"
  },
  {
    "text": "stage here i'm going to talk about the",
    "start": "32480",
    "end": "34160"
  },
  {
    "text": "adoption of crossplane and argo cd um in",
    "start": "34160",
    "end": "37520"
  },
  {
    "text": "ci cd pipelines i'm going to give a",
    "start": "37520",
    "end": "39840"
  },
  {
    "text": "generic view of a deployment pipeline",
    "start": "39840",
    "end": "42960"
  },
  {
    "text": "as it exists today and",
    "start": "42960",
    "end": "44719"
  },
  {
    "text": "and and how we use",
    "start": "44719",
    "end": "46480"
  },
  {
    "text": "our deployment pipelines in the uh",
    "start": "46480",
    "end": "48879"
  },
  {
    "text": "infrastructure provisioning and life",
    "start": "48879",
    "end": "50960"
  },
  {
    "text": "cycle management but also in application",
    "start": "50960",
    "end": "52800"
  },
  {
    "text": "deployments",
    "start": "52800",
    "end": "54160"
  },
  {
    "text": "i'm going to talk about cross plane",
    "start": "54160",
    "end": "56559"
  },
  {
    "text": "as an abstraction platform for",
    "start": "56559",
    "end": "58480"
  },
  {
    "text": "infrastructure provisioning",
    "start": "58480",
    "end": "60160"
  },
  {
    "text": "so basically using githubs to both",
    "start": "60160",
    "end": "63120"
  },
  {
    "text": "manage",
    "start": "63120",
    "end": "64158"
  },
  {
    "text": "our infrastructure and also application",
    "start": "64159",
    "end": "66400"
  },
  {
    "text": "deployments",
    "start": "66400",
    "end": "68479"
  },
  {
    "text": "uh yingmo will then discuss ongoing",
    "start": "68479",
    "end": "72159"
  },
  {
    "text": "development work in the area of ansible",
    "start": "72159",
    "end": "74960"
  },
  {
    "text": "cross plane provider",
    "start": "74960",
    "end": "76560"
  },
  {
    "text": "for more traditional i.t systems um",
    "start": "76560",
    "end": "80080"
  },
  {
    "text": "he'll discuss the the provider in terms",
    "start": "80080",
    "end": "82240"
  },
  {
    "text": "of of how it works and how people can",
    "start": "82240",
    "end": "84560"
  },
  {
    "text": "use it how it can be adopted",
    "start": "84560",
    "end": "86880"
  },
  {
    "text": "and and then finally a deep dive across",
    "start": "86880",
    "end": "89200"
  },
  {
    "text": "the and across the ansible provider",
    "start": "89200",
    "end": "91520"
  },
  {
    "text": "runtime life cycle",
    "start": "91520",
    "end": "93200"
  },
  {
    "text": "some best practices",
    "start": "93200",
    "end": "94880"
  },
  {
    "text": "in the in the use of",
    "start": "94880",
    "end": "96799"
  },
  {
    "text": "of the provider",
    "start": "96799",
    "end": "98479"
  },
  {
    "text": "and then finally comparing the the",
    "start": "98479",
    "end": "100159"
  },
  {
    "text": "answer provider with the uh the ansible",
    "start": "100159",
    "end": "102079"
  },
  {
    "text": "operator",
    "start": "102079",
    "end": "104560"
  },
  {
    "text": "um so if we just look at a typical",
    "start": "104799",
    "end": "106640"
  },
  {
    "start": "105000",
    "end": "105000"
  },
  {
    "text": "deployment pipeline a very generic view",
    "start": "106640",
    "end": "109200"
  },
  {
    "text": "um you typically would have a build here",
    "start": "109200",
    "end": "110960"
  },
  {
    "text": "coming in on the left-hand side of the",
    "start": "110960",
    "end": "112320"
  },
  {
    "text": "plumbing pipeline and the first stage",
    "start": "112320",
    "end": "114479"
  },
  {
    "text": "would typically be the acquisition of",
    "start": "114479",
    "end": "116880"
  },
  {
    "text": "infrastructure onto which you would run",
    "start": "116880",
    "end": "118799"
  },
  {
    "text": "your deployments",
    "start": "118799",
    "end": "120560"
  },
  {
    "text": "um the second stage would typically be",
    "start": "120560",
    "end": "122880"
  },
  {
    "text": "some kind of configuration you might",
    "start": "122880",
    "end": "124640"
  },
  {
    "text": "want to do on that infrastructure so in",
    "start": "124640",
    "end": "127200"
  },
  {
    "text": "terms of a kubernetes cluster for",
    "start": "127200",
    "end": "129039"
  },
  {
    "text": "example you might want to set up some",
    "start": "129039",
    "end": "130560"
  },
  {
    "text": "storage or some prerequisites before you",
    "start": "130560",
    "end": "132800"
  },
  {
    "text": "do your application deployment",
    "start": "132800",
    "end": "135760"
  },
  {
    "text": "um application deployment then you would",
    "start": "135760",
    "end": "137680"
  },
  {
    "text": "deploy your your software components",
    "start": "137680",
    "end": "139520"
  },
  {
    "text": "onto that infrastructure",
    "start": "139520",
    "end": "141520"
  },
  {
    "text": "you may want to do some post deploy",
    "start": "141520",
    "end": "143680"
  },
  {
    "text": "checks",
    "start": "143680",
    "end": "144879"
  },
  {
    "text": "to ensure that the you know your",
    "start": "144879",
    "end": "146400"
  },
  {
    "text": "applications have got are deployed to a",
    "start": "146400",
    "end": "148319"
  },
  {
    "text": "sufficient level before you would",
    "start": "148319",
    "end": "149680"
  },
  {
    "text": "trigger some downstream test pipelines",
    "start": "149680",
    "end": "153040"
  },
  {
    "text": "you may want to export some deployment",
    "start": "153040",
    "end": "155200"
  },
  {
    "text": "logs um trigger then downstream test",
    "start": "155200",
    "end": "158080"
  },
  {
    "text": "pipelines",
    "start": "158080",
    "end": "159280"
  },
  {
    "text": "export those",
    "start": "159280",
    "end": "160640"
  },
  {
    "text": "test pipeline results to some location",
    "start": "160640",
    "end": "163440"
  },
  {
    "text": "that could be you know downloaded by",
    "start": "163440",
    "end": "165200"
  },
  {
    "text": "individuals at a later point",
    "start": "165200",
    "end": "167440"
  },
  {
    "text": "and then finally you may want to do some",
    "start": "167440",
    "end": "169360"
  },
  {
    "text": "notification",
    "start": "169360",
    "end": "170720"
  },
  {
    "text": "out to the wider teams that you know",
    "start": "170720",
    "end": "172400"
  },
  {
    "text": "your deployments have have completed",
    "start": "172400",
    "end": "176079"
  },
  {
    "text": "the stages in such a pipeline that would",
    "start": "176480",
    "end": "178879"
  },
  {
    "text": "be typically as i call it get ops ready",
    "start": "178879",
    "end": "182239"
  },
  {
    "text": "would be those that would be more",
    "start": "182239",
    "end": "183440"
  },
  {
    "text": "typical um to application deployment and",
    "start": "183440",
    "end": "186640"
  },
  {
    "text": "and you know the application of",
    "start": "186640",
    "end": "188640"
  },
  {
    "text": "kubernetes manifests right on onto a",
    "start": "188640",
    "end": "190800"
  },
  {
    "text": "cluster",
    "start": "190800",
    "end": "191760"
  },
  {
    "text": "so in terms of this generic pipeline",
    "start": "191760",
    "end": "193760"
  },
  {
    "text": "view here we could look at perhaps",
    "start": "193760",
    "end": "195519"
  },
  {
    "text": "configuration application deployment be",
    "start": "195519",
    "end": "197760"
  },
  {
    "text": "more critical to",
    "start": "197760",
    "end": "200000"
  },
  {
    "text": "the typical you know view of get ops",
    "start": "200000",
    "end": "202400"
  },
  {
    "text": "and the application of the adopts",
    "start": "202400",
    "end": "205040"
  },
  {
    "text": "infrastructure management in particular",
    "start": "205040",
    "end": "207200"
  },
  {
    "text": "would would not be applicable as it",
    "start": "207200",
    "end": "209360"
  },
  {
    "text": "stands today with to git ups",
    "start": "209360",
    "end": "211920"
  },
  {
    "text": "infrastructure management typically",
    "start": "211920",
    "end": "213440"
  },
  {
    "text": "involves the use of",
    "start": "213440",
    "end": "216000"
  },
  {
    "text": "custom infrastructure apis okay so",
    "start": "216000",
    "end": "218640"
  },
  {
    "text": "provisioning of infrastructure you would",
    "start": "218640",
    "end": "220319"
  },
  {
    "text": "typically",
    "start": "220319",
    "end": "221360"
  },
  {
    "text": "point to that infrastructure providers",
    "start": "221360",
    "end": "224000"
  },
  {
    "text": "apis to create",
    "start": "224000",
    "end": "226159"
  },
  {
    "text": "those those those environments which",
    "start": "226159",
    "end": "228560"
  },
  {
    "text": "typically",
    "start": "228560",
    "end": "229599"
  },
  {
    "text": "don't lend themselves quite well to the",
    "start": "229599",
    "end": "231840"
  },
  {
    "text": "adoption of git ops",
    "start": "231840",
    "end": "234879"
  },
  {
    "text": "um so infrastructure provisioning and",
    "start": "235519",
    "end": "237360"
  },
  {
    "text": "lifecycle management then if we just",
    "start": "237360",
    "end": "238879"
  },
  {
    "start": "238000",
    "end": "238000"
  },
  {
    "text": "focus a little bit in on the",
    "start": "238879",
    "end": "240480"
  },
  {
    "text": "infrastructure",
    "start": "240480",
    "end": "241760"
  },
  {
    "text": "section of our pipeline acquiring the",
    "start": "241760",
    "end": "243519"
  },
  {
    "text": "infrastructure and today what we do in",
    "start": "243519",
    "end": "246319"
  },
  {
    "text": "our pipelines is that we maintain a pool",
    "start": "246319",
    "end": "248799"
  },
  {
    "text": "of kubernetes clusters",
    "start": "248799",
    "end": "250640"
  },
  {
    "text": "so this pool is available for deployment",
    "start": "250640",
    "end": "253120"
  },
  {
    "text": "at any time",
    "start": "253120",
    "end": "254560"
  },
  {
    "text": "it speeds up the our complete deployment",
    "start": "254560",
    "end": "257600"
  },
  {
    "text": "life cycle",
    "start": "257600",
    "end": "258799"
  },
  {
    "text": "in a sense that we we have clusters",
    "start": "258799",
    "end": "260400"
  },
  {
    "text": "prepared",
    "start": "260400",
    "end": "262160"
  },
  {
    "text": "before they're actually needed for",
    "start": "262160",
    "end": "263680"
  },
  {
    "text": "deployment so we maintain a set of",
    "start": "263680",
    "end": "266080"
  },
  {
    "text": "pre-provision clusters in a pool",
    "start": "266080",
    "end": "269360"
  },
  {
    "text": "when we request a cluster from our",
    "start": "269360",
    "end": "271840"
  },
  {
    "text": "deployment pipeline we go to our pool",
    "start": "271840",
    "end": "273840"
  },
  {
    "text": "manager and it basically picks a cluster",
    "start": "273840",
    "end": "276960"
  },
  {
    "text": "available for the deployment pipeline",
    "start": "276960",
    "end": "281039"
  },
  {
    "text": "our pool manager then also tops up that",
    "start": "281120",
    "end": "283600"
  },
  {
    "text": "pool so it communicates via",
    "start": "283600",
    "end": "286800"
  },
  {
    "text": "custom apis to",
    "start": "286800",
    "end": "288720"
  },
  {
    "text": "ibm's infrastructure provider to to",
    "start": "288720",
    "end": "290960"
  },
  {
    "text": "create um clusters",
    "start": "290960",
    "end": "292960"
  },
  {
    "text": "so in this case we're using red hat um",
    "start": "292960",
    "end": "295040"
  },
  {
    "text": "openshift clusters um so we we",
    "start": "295040",
    "end": "297600"
  },
  {
    "text": "communicate with our infrastructure",
    "start": "297600",
    "end": "298800"
  },
  {
    "text": "provider over their apis to to create a",
    "start": "298800",
    "end": "301039"
  },
  {
    "text": "cluster at a particular config level um",
    "start": "301039",
    "end": "304240"
  },
  {
    "text": "and it's placed into our pool",
    "start": "304240",
    "end": "306960"
  },
  {
    "text": "ready for ready for deployment at a",
    "start": "306960",
    "end": "308880"
  },
  {
    "text": "later stage",
    "start": "308880",
    "end": "310479"
  },
  {
    "text": "um so as i said the pool manager is is",
    "start": "310479",
    "end": "313199"
  },
  {
    "text": "set at a provisioned level right so we",
    "start": "313199",
    "end": "315759"
  },
  {
    "text": "have a set level um of x number of",
    "start": "315759",
    "end": "318400"
  },
  {
    "text": "clusters we need um for our deployment",
    "start": "318400",
    "end": "320560"
  },
  {
    "text": "pipeline",
    "start": "320560",
    "end": "321759"
  },
  {
    "text": "um it supports variation in cluster",
    "start": "321759",
    "end": "323680"
  },
  {
    "text": "specifications right so different um",
    "start": "323680",
    "end": "326479"
  },
  {
    "text": "specifications of our worker nodes for",
    "start": "326479",
    "end": "328320"
  },
  {
    "text": "example um you know cpu memory um",
    "start": "328320",
    "end": "331680"
  },
  {
    "text": "and storage um and the key point here i",
    "start": "331680",
    "end": "334080"
  },
  {
    "text": "guess is that the infrastructure the",
    "start": "334080",
    "end": "335600"
  },
  {
    "text": "interface to the infrastructure provider",
    "start": "335600",
    "end": "337520"
  },
  {
    "text": "um is is custom interface right it's",
    "start": "337520",
    "end": "340400"
  },
  {
    "text": "it's non-cloud native um",
    "start": "340400",
    "end": "342720"
  },
  {
    "text": "so it's quite interesting if we could",
    "start": "342720",
    "end": "345039"
  },
  {
    "text": "think of infrastructure and management",
    "start": "345039",
    "end": "347360"
  },
  {
    "text": "like we do application management um",
    "start": "347360",
    "end": "349520"
  },
  {
    "text": "could we you know adopt and leverage the",
    "start": "349520",
    "end": "352000"
  },
  {
    "text": "benefits of get ops um and span that",
    "start": "352000",
    "end": "354800"
  },
  {
    "text": "across both infrastructure and",
    "start": "354800",
    "end": "356800"
  },
  {
    "text": "application uh deployment",
    "start": "356800",
    "end": "360240"
  },
  {
    "text": "so with the the use of crosstrain we can",
    "start": "360240",
    "end": "362479"
  },
  {
    "text": "achieve just that um crossplaying",
    "start": "362479",
    "end": "364639"
  },
  {
    "text": "provides an abstract an abstraction",
    "start": "364639",
    "end": "366639"
  },
  {
    "text": "platform um for infrastructure",
    "start": "366639",
    "end": "368400"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "provisioning",
    "start": "368400",
    "end": "369520"
  },
  {
    "text": "um so we have rolled out um",
    "start": "369520",
    "end": "373360"
  },
  {
    "text": "a provider for our our for our",
    "start": "373360",
    "end": "375840"
  },
  {
    "text": "infrastructure um",
    "start": "375840",
    "end": "377440"
  },
  {
    "text": "management um crossband provider um it",
    "start": "377440",
    "end": "381440"
  },
  {
    "text": "defines a cluster as a very simple",
    "start": "381440",
    "end": "385120"
  },
  {
    "text": "resource type",
    "start": "385120",
    "end": "386800"
  },
  {
    "text": "so the the complexities of managing",
    "start": "386800",
    "end": "390160"
  },
  {
    "text": "our clusters",
    "start": "390160",
    "end": "391600"
  },
  {
    "text": "for our end users are is really massed",
    "start": "391600",
    "end": "394479"
  },
  {
    "text": "masks to to to our users they don't need",
    "start": "394479",
    "end": "397039"
  },
  {
    "text": "to be aware of the the api specification",
    "start": "397039",
    "end": "399840"
  },
  {
    "text": "they just need to you know be aware of",
    "start": "399840",
    "end": "402160"
  },
  {
    "text": "of the kind of type of cluster and the",
    "start": "402160",
    "end": "404080"
  },
  {
    "text": "configuration of the cluster within the",
    "start": "404080",
    "end": "406319"
  },
  {
    "text": "ocp resource the openshift platform",
    "start": "406319",
    "end": "408800"
  },
  {
    "text": "resource definition here on on the left",
    "start": "408800",
    "end": "410880"
  },
  {
    "text": "hand side so you can see here we specify",
    "start": "410880",
    "end": "413520"
  },
  {
    "text": "things like the cluster name the",
    "start": "413520",
    "end": "415199"
  },
  {
    "text": "diversion of the open shift we we want",
    "start": "415199",
    "end": "418000"
  },
  {
    "text": "to provision",
    "start": "418000",
    "end": "419440"
  },
  {
    "text": "things like the site what data center we",
    "start": "419440",
    "end": "421759"
  },
  {
    "text": "want that cluster to be deployed into",
    "start": "421759",
    "end": "423919"
  },
  {
    "text": "and then some very you know high level",
    "start": "423919",
    "end": "426319"
  },
  {
    "text": "configuration for the workers within the",
    "start": "426319",
    "end": "428240"
  },
  {
    "text": "cluster um so the user basically just",
    "start": "428240",
    "end": "430639"
  },
  {
    "text": "needs to populate out these parameters",
    "start": "430639",
    "end": "432160"
  },
  {
    "text": "here and the provider communicates",
    "start": "432160",
    "end": "434639"
  },
  {
    "text": "across to our cloud provider to um to",
    "start": "434639",
    "end": "436960"
  },
  {
    "text": "provision the cluster",
    "start": "436960",
    "end": "439680"
  },
  {
    "text": "the provider also provides the cluster",
    "start": "439680",
    "end": "442080"
  },
  {
    "text": "endpoint and credentials then written to",
    "start": "442080",
    "end": "444319"
  },
  {
    "text": "secrets on our control plane cluster so",
    "start": "444319",
    "end": "446800"
  },
  {
    "text": "the control plane is essentially our",
    "start": "446800",
    "end": "449039"
  },
  {
    "text": "cluster running argo cd",
    "start": "449039",
    "end": "451520"
  },
  {
    "text": "um so it is our our master cluster for",
    "start": "451520",
    "end": "454080"
  },
  {
    "text": "that that basically performs the uh the",
    "start": "454080",
    "end": "456160"
  },
  {
    "text": "provisioning of our infrastructure and",
    "start": "456160",
    "end": "458639"
  },
  {
    "text": "running our deployment pipeline as well",
    "start": "458639",
    "end": "461759"
  },
  {
    "text": "um as with any type of you know",
    "start": "461759",
    "end": "463919"
  },
  {
    "text": "kubernetes resource type we get status",
    "start": "463919",
    "end": "466879"
  },
  {
    "text": "um",
    "start": "466879",
    "end": "467759"
  },
  {
    "text": "again via",
    "start": "467759",
    "end": "469280"
  },
  {
    "text": "the provider back onto the ocp resources",
    "start": "469280",
    "end": "472319"
  },
  {
    "text": "so um on our control plan cluster we can",
    "start": "472319",
    "end": "474639"
  },
  {
    "text": "list all the clusters we've got deployed",
    "start": "474639",
    "end": "476240"
  },
  {
    "text": "in our pool and get the status of those",
    "start": "476240",
    "end": "479120"
  },
  {
    "text": "as we would with any other",
    "start": "479120",
    "end": "481520"
  },
  {
    "text": "kubernetes resource type",
    "start": "481520",
    "end": "484800"
  },
  {
    "text": "um so in the definition of",
    "start": "485440",
    "end": "488400"
  },
  {
    "text": "our resources then for cross plane we're",
    "start": "488400",
    "end": "490560"
  },
  {
    "text": "using helm um helm provides a very good",
    "start": "490560",
    "end": "494560"
  },
  {
    "text": "mechanism by which we can",
    "start": "494560",
    "end": "497120"
  },
  {
    "text": "override and set configurations",
    "start": "497120",
    "end": "500160"
  },
  {
    "text": "for our clusters",
    "start": "500160",
    "end": "503199"
  },
  {
    "text": "so the template basically allows for the",
    "start": "503199",
    "end": "506000"
  },
  {
    "text": "passing of um",
    "start": "506000",
    "end": "508000"
  },
  {
    "text": "customized attributes um",
    "start": "508000",
    "end": "510080"
  },
  {
    "text": "for our cluster deployment so here on",
    "start": "510080",
    "end": "511919"
  },
  {
    "text": "the left-hand side for example you can",
    "start": "511919",
    "end": "513440"
  },
  {
    "text": "see we're taking default values from a",
    "start": "513440",
    "end": "515440"
  },
  {
    "text": "values file",
    "start": "515440",
    "end": "516880"
  },
  {
    "text": "um but we're then also taking um like",
    "start": "516880",
    "end": "519919"
  },
  {
    "text": "actually like the cluster name and we're",
    "start": "519919",
    "end": "521839"
  },
  {
    "text": "overwriting those um",
    "start": "521839",
    "end": "524480"
  },
  {
    "text": "to to create the the overall ocp",
    "start": "524480",
    "end": "526959"
  },
  {
    "text": "definition and we'll see that on the",
    "start": "526959",
    "end": "528560"
  },
  {
    "text": "next slide",
    "start": "528560",
    "end": "530080"
  },
  {
    "text": "um so here we can see the default values",
    "start": "530080",
    "end": "532640"
  },
  {
    "text": "and for our clusters so this will be in",
    "start": "532640",
    "end": "534959"
  },
  {
    "text": "one particular cluster pool type",
    "start": "534959",
    "end": "537519"
  },
  {
    "text": "this pool type is basically holding",
    "start": "537519",
    "end": "539600"
  },
  {
    "text": "clusters of ocp 4.10.3",
    "start": "539600",
    "end": "542720"
  },
  {
    "text": "and in site xyz",
    "start": "542720",
    "end": "544959"
  },
  {
    "text": "and this is the default configuration",
    "start": "544959",
    "end": "546560"
  },
  {
    "text": "for the the workers",
    "start": "546560",
    "end": "548720"
  },
  {
    "text": "the cluster pool yaml then is basically",
    "start": "548720",
    "end": "551600"
  },
  {
    "text": "overriding the cluster name each time it",
    "start": "551600",
    "end": "554320"
  },
  {
    "text": "it creates a new instance our new",
    "start": "554320",
    "end": "556320"
  },
  {
    "text": "cluster instance in our pool",
    "start": "556320",
    "end": "558160"
  },
  {
    "text": "so when we want to create another",
    "start": "558160",
    "end": "560000"
  },
  {
    "text": "cluster we essentially just add another",
    "start": "560000",
    "end": "561680"
  },
  {
    "text": "line um here into our cluster pool yaml",
    "start": "561680",
    "end": "564959"
  },
  {
    "text": "um and and that then merges with the",
    "start": "564959",
    "end": "568000"
  },
  {
    "text": "named template and to produce the",
    "start": "568000",
    "end": "570080"
  },
  {
    "text": "overall",
    "start": "570080",
    "end": "571360"
  },
  {
    "text": "cluster instance here on the far right",
    "start": "571360",
    "end": "573600"
  },
  {
    "text": "hand side",
    "start": "573600",
    "end": "576759"
  },
  {
    "text": "so how can we bring this together then",
    "start": "577120",
    "end": "579760"
  },
  {
    "text": "um to manage infrastructure applications",
    "start": "579760",
    "end": "582240"
  },
  {
    "text": "using git ups",
    "start": "582240",
    "end": "583839"
  },
  {
    "text": "um",
    "start": "583839",
    "end": "584720"
  },
  {
    "text": "so this is a kind of just a high-level",
    "start": "584720",
    "end": "587040"
  },
  {
    "start": "585000",
    "end": "585000"
  },
  {
    "text": "view of the flows then um if we start",
    "start": "587040",
    "end": "590640"
  },
  {
    "text": "with github",
    "start": "590640",
    "end": "591760"
  },
  {
    "text": "github on on the left hand side",
    "start": "591760",
    "end": "594080"
  },
  {
    "text": "um on the the blue the blue kind of",
    "start": "594080",
    "end": "596560"
  },
  {
    "text": "trend here we're looking at the default",
    "start": "596560",
    "end": "598320"
  },
  {
    "text": "uh values coming in for the clusters our",
    "start": "598320",
    "end": "600560"
  },
  {
    "text": "cluster pool yaml which defines the",
    "start": "600560",
    "end": "602480"
  },
  {
    "text": "instances of the the clusters that we",
    "start": "602480",
    "end": "604480"
  },
  {
    "text": "want to you know exist in our pool",
    "start": "604480",
    "end": "607920"
  },
  {
    "text": "as i said in the previous slide that's",
    "start": "607920",
    "end": "609279"
  },
  {
    "text": "merged with the named template and it",
    "start": "609279",
    "end": "611519"
  },
  {
    "text": "basically roots through argo cd which",
    "start": "611519",
    "end": "613600"
  },
  {
    "text": "syncs off of the git repository holding",
    "start": "613600",
    "end": "615600"
  },
  {
    "text": "those artifacts",
    "start": "615600",
    "end": "617760"
  },
  {
    "text": "true to provider",
    "start": "617760",
    "end": "619440"
  },
  {
    "text": "and post requests across to our",
    "start": "619440",
    "end": "621440"
  },
  {
    "text": "infrastructure",
    "start": "621440",
    "end": "623040"
  },
  {
    "text": "provider to generate the clusters in the",
    "start": "623040",
    "end": "624720"
  },
  {
    "text": "pool",
    "start": "624720",
    "end": "626959"
  },
  {
    "text": "so if we want to as i said in the",
    "start": "627040",
    "end": "628560"
  },
  {
    "text": "previous slide if we want to create",
    "start": "628560",
    "end": "629839"
  },
  {
    "text": "clusters we essentially just add a new",
    "start": "629839",
    "end": "632000"
  },
  {
    "text": "cluster entry into the cluster pool yaml",
    "start": "632000",
    "end": "634560"
  },
  {
    "text": "and similarly if we want to delete a",
    "start": "634560",
    "end": "636320"
  },
  {
    "text": "cluster it just gets removed from that",
    "start": "636320",
    "end": "638399"
  },
  {
    "text": "cluster cool yaml um and argo cd detects",
    "start": "638399",
    "end": "641920"
  },
  {
    "text": "the update um or the commit um",
    "start": "641920",
    "end": "645279"
  },
  {
    "text": "to representing that removal or addition",
    "start": "645279",
    "end": "647680"
  },
  {
    "text": "of a cluster and and and reconciles that",
    "start": "647680",
    "end": "650720"
  },
  {
    "text": "um via the cross-plane provider um onto",
    "start": "650720",
    "end": "653600"
  },
  {
    "text": "our cluster pool",
    "start": "653600",
    "end": "656319"
  },
  {
    "text": "um application deployment then um again",
    "start": "656399",
    "end": "659360"
  },
  {
    "text": "you you know the cloud native right so",
    "start": "659360",
    "end": "661120"
  },
  {
    "text": "it's using the traditional",
    "start": "661120",
    "end": "662880"
  },
  {
    "text": "cloud native path here we have our",
    "start": "662880",
    "end": "664880"
  },
  {
    "text": "values.yaml um again helm helm driven um",
    "start": "664880",
    "end": "668560"
  },
  {
    "text": "our application templates which you know",
    "start": "668560",
    "end": "670800"
  },
  {
    "text": "contains all of the the templates for",
    "start": "670800",
    "end": "672399"
  },
  {
    "text": "our application deployment",
    "start": "672399",
    "end": "674480"
  },
  {
    "text": "and as well as the green line which",
    "start": "674480",
    "end": "676320"
  },
  {
    "text": "essentially is again syncing off of",
    "start": "676320",
    "end": "678640"
  },
  {
    "text": "github our github repository for",
    "start": "678640",
    "end": "680640"
  },
  {
    "text": "application deployment true argo cd and",
    "start": "680640",
    "end": "683279"
  },
  {
    "text": "this time straight on to the cluster",
    "start": "683279",
    "end": "685519"
  },
  {
    "text": "that's chosen for deployment so",
    "start": "685519",
    "end": "688640"
  },
  {
    "text": "as i said at the towards the start of",
    "start": "688640",
    "end": "690320"
  },
  {
    "text": "the presentation um our deployment",
    "start": "690320",
    "end": "692399"
  },
  {
    "text": "pipeline will choose a cluster from the",
    "start": "692399",
    "end": "694240"
  },
  {
    "text": "pool for a particular deployment run",
    "start": "694240",
    "end": "697279"
  },
  {
    "text": "and that becomes the active cluster then",
    "start": "697279",
    "end": "699200"
  },
  {
    "text": "for deployment",
    "start": "699200",
    "end": "700560"
  },
  {
    "text": "um so we deploy straight onto that",
    "start": "700560",
    "end": "702640"
  },
  {
    "text": "cluster again using uh our argo cd",
    "start": "702640",
    "end": "707839"
  },
  {
    "text": "um so some of the benefits of of doing",
    "start": "708399",
    "end": "710720"
  },
  {
    "text": "it this way right so managing both",
    "start": "710720",
    "end": "712320"
  },
  {
    "text": "infrastructure and applications using",
    "start": "712320",
    "end": "714639"
  },
  {
    "text": "git ops we have a common approach",
    "start": "714639",
    "end": "717760"
  },
  {
    "text": "so we leverage the same argo cd approach",
    "start": "717760",
    "end": "721200"
  },
  {
    "text": "for both managing our infrastructure so",
    "start": "721200",
    "end": "723200"
  },
  {
    "text": "you can think of infrastructure as code",
    "start": "723200",
    "end": "725600"
  },
  {
    "text": "it's managed and maintained within",
    "start": "725600",
    "end": "728079"
  },
  {
    "text": "github um some of the benefits there",
    "start": "728079",
    "end": "730800"
  },
  {
    "text": "obviously right but with anything i",
    "start": "730800",
    "end": "732560"
  },
  {
    "text": "suppose in github is that we've got it",
    "start": "732560",
    "end": "734560"
  },
  {
    "text": "versioned and audited um we've got an",
    "start": "734560",
    "end": "737040"
  },
  {
    "text": "audit trail of when clusters get created",
    "start": "737040",
    "end": "739519"
  },
  {
    "text": "and and removed from our pool",
    "start": "739519",
    "end": "742079"
  },
  {
    "text": "um",
    "start": "742079",
    "end": "743120"
  },
  {
    "text": "single sources shoot of course um for",
    "start": "743120",
    "end": "745600"
  },
  {
    "text": "deployment infrastructure um it avoids",
    "start": "745600",
    "end": "748399"
  },
  {
    "text": "configuration drift okay so when we look",
    "start": "748399",
    "end": "751120"
  },
  {
    "text": "at our cluster pools we know",
    "start": "751120",
    "end": "752720"
  },
  {
    "text": "definitively that those clusters",
    "start": "752720",
    "end": "755200"
  },
  {
    "text": "map back to",
    "start": "755200",
    "end": "756639"
  },
  {
    "text": "our definition within within github",
    "start": "756639",
    "end": "759360"
  },
  {
    "text": "um there can be no configuration drift",
    "start": "759360",
    "end": "761920"
  },
  {
    "text": "um in the sense of of individuals",
    "start": "761920",
    "end": "764320"
  },
  {
    "text": "creating clusters and placing them in",
    "start": "764320",
    "end": "765839"
  },
  {
    "text": "the pool that may um you know",
    "start": "765839",
    "end": "768720"
  },
  {
    "text": "contravene our configuration templates",
    "start": "768720",
    "end": "771839"
  },
  {
    "text": "for those clusters in that given pool",
    "start": "771839",
    "end": "774639"
  },
  {
    "text": "um cluster state is continuously",
    "start": "774639",
    "end": "777440"
  },
  {
    "text": "reconciled",
    "start": "777440",
    "end": "778800"
  },
  {
    "text": "and this is an important aspect",
    "start": "778800",
    "end": "780639"
  },
  {
    "text": "if clusters get inadvertently deleted",
    "start": "780639",
    "end": "782800"
  },
  {
    "text": "from our pool",
    "start": "782800",
    "end": "784560"
  },
  {
    "text": "you know argo cd will see that",
    "start": "784560",
    "end": "786399"
  },
  {
    "text": "um and it will detect the change and it",
    "start": "786399",
    "end": "788880"
  },
  {
    "text": "will drive um the the cluster pool back",
    "start": "788880",
    "end": "792160"
  },
  {
    "text": "to its defined state as per raspberry",
    "start": "792160",
    "end": "794399"
  },
  {
    "text": "github",
    "start": "794399",
    "end": "795519"
  },
  {
    "text": "um so again that's a very important",
    "start": "795519",
    "end": "796880"
  },
  {
    "text": "characteristic for us",
    "start": "796880",
    "end": "798560"
  },
  {
    "text": "not not only in terms of application",
    "start": "798560",
    "end": "800399"
  },
  {
    "text": "management and to ensure that your",
    "start": "800399",
    "end": "801760"
  },
  {
    "text": "applications are",
    "start": "801760",
    "end": "803200"
  },
  {
    "text": "mapping back to the single sources shoot",
    "start": "803200",
    "end": "805360"
  },
  {
    "text": "but obviously also for our",
    "start": "805360",
    "end": "806880"
  },
  {
    "text": "infrastructure",
    "start": "806880",
    "end": "809519"
  },
  {
    "text": "um",
    "start": "810079",
    "end": "811279"
  },
  {
    "text": "so i'm going to hand over to ying mo now",
    "start": "811279",
    "end": "814639"
  },
  {
    "text": "and adimo is going to discuss some",
    "start": "814639",
    "end": "816959"
  },
  {
    "text": "ongoing work",
    "start": "816959",
    "end": "818240"
  },
  {
    "text": "in the development of an ansible",
    "start": "818240",
    "end": "819839"
  },
  {
    "text": "provider",
    "start": "819839",
    "end": "821440"
  },
  {
    "text": "again more focused on",
    "start": "821440",
    "end": "823519"
  },
  {
    "text": "you know mapping git ups across to",
    "start": "823519",
    "end": "826480"
  },
  {
    "text": "traditional i.t systems um so again",
    "start": "826480",
    "end": "829440"
  },
  {
    "text": "continuing on with you know applying the",
    "start": "829440",
    "end": "831760"
  },
  {
    "text": "the concepts of argo cd and",
    "start": "831760",
    "end": "834399"
  },
  {
    "text": "and crossplane uh to the to the",
    "start": "834399",
    "end": "836000"
  },
  {
    "text": "non-cloud world um so so over to you um",
    "start": "836000",
    "end": "841800"
  },
  {
    "text": "thanks ken",
    "start": "842639",
    "end": "844000"
  },
  {
    "text": "so my name is moyin and i'm from ibm as",
    "start": "844000",
    "end": "847279"
  },
  {
    "text": "a software engineer",
    "start": "847279",
    "end": "849600"
  },
  {
    "text": "next i'm gonna share with you how argue",
    "start": "849600",
    "end": "852079"
  },
  {
    "text": "cd can be extended to which traditional",
    "start": "852079",
    "end": "854959"
  },
  {
    "text": "i.t system by leveraging cross-play",
    "start": "854959",
    "end": "859360"
  },
  {
    "start": "859000",
    "end": "859000"
  },
  {
    "text": "so a little bit background",
    "start": "859440",
    "end": "862079"
  },
  {
    "text": "as we all know",
    "start": "862079",
    "end": "863600"
  },
  {
    "text": "both argo cd and cross plan are designed",
    "start": "863600",
    "end": "866399"
  },
  {
    "text": "for cloud native",
    "start": "866399",
    "end": "868079"
  },
  {
    "text": "and it can only be run in kubernetes",
    "start": "868079",
    "end": "871360"
  },
  {
    "text": "however this may not be true for many",
    "start": "871360",
    "end": "873920"
  },
  {
    "text": "real world organizations",
    "start": "873920",
    "end": "876160"
  },
  {
    "text": "where they may have i.t systems that are",
    "start": "876160",
    "end": "879040"
  },
  {
    "text": "traditional based such as application",
    "start": "879040",
    "end": "881680"
  },
  {
    "text": "run on vm or bare metal",
    "start": "881680",
    "end": "885199"
  },
  {
    "text": "and they may have already heavily",
    "start": "885199",
    "end": "886720"
  },
  {
    "text": "invested on management automation for",
    "start": "886720",
    "end": "889360"
  },
  {
    "text": "those kind of systems",
    "start": "889360",
    "end": "892480"
  },
  {
    "text": "for management automation",
    "start": "892720",
    "end": "894639"
  },
  {
    "text": "design has a popular automation",
    "start": "894639",
    "end": "896959"
  },
  {
    "text": "technology has a large user-based and",
    "start": "896959",
    "end": "900240"
  },
  {
    "text": "mature ecosystem",
    "start": "900240",
    "end": "902320"
  },
  {
    "text": "it is widely adopted by many of such",
    "start": "902320",
    "end": "904800"
  },
  {
    "text": "organizations to automate the management",
    "start": "904800",
    "end": "907519"
  },
  {
    "text": "for different varieties of i.t systems",
    "start": "907519",
    "end": "910560"
  },
  {
    "text": "ranging from cloud native to non-cloud",
    "start": "910560",
    "end": "913120"
  },
  {
    "text": "native",
    "start": "913120",
    "end": "914399"
  },
  {
    "text": "so the question here is how we can drive",
    "start": "914399",
    "end": "917519"
  },
  {
    "text": "githubs for those systems consistently",
    "start": "917519",
    "end": "920959"
  },
  {
    "text": "no matter it is cloud native or",
    "start": "920959",
    "end": "923760"
  },
  {
    "text": "non-cloud native",
    "start": "923760",
    "end": "926399"
  },
  {
    "text": "here i'd like to introduce an open",
    "start": "926399",
    "end": "928560"
  },
  {
    "text": "source project that is currently working",
    "start": "928560",
    "end": "930480"
  },
  {
    "text": "progress",
    "start": "930480",
    "end": "931600"
  },
  {
    "text": "the cross-plan provider for ansible",
    "start": "931600",
    "end": "935120"
  },
  {
    "text": "it is targeted to extend a cross-plan",
    "start": "935120",
    "end": "937759"
  },
  {
    "text": "scope by enabling its integration with",
    "start": "937759",
    "end": "941519"
  },
  {
    "text": "ansible to build a bridge between the",
    "start": "941519",
    "end": "944480"
  },
  {
    "text": "cloud native and non-cloud-native world",
    "start": "944480",
    "end": "947839"
  },
  {
    "text": "so that can open a door to drive and",
    "start": "947839",
    "end": "950480"
  },
  {
    "text": "reuse existing automation assets",
    "start": "950480",
    "end": "953600"
  },
  {
    "text": "to manage hybrid technologies",
    "start": "953600",
    "end": "956320"
  },
  {
    "text": "using the same way consistently",
    "start": "956320",
    "end": "958880"
  },
  {
    "text": "and help organizations transition to",
    "start": "958880",
    "end": "961759"
  },
  {
    "text": "cloud native",
    "start": "961759",
    "end": "963120"
  },
  {
    "text": "while keep their existing investments",
    "start": "963120",
    "end": "967199"
  },
  {
    "text": "let's take a quick look at how it looks",
    "start": "967440",
    "end": "971759"
  },
  {
    "text": "so this is diagram",
    "start": "971759",
    "end": "973680"
  },
  {
    "text": "that illustrates how ansible provider",
    "start": "973680",
    "end": "976480"
  },
  {
    "text": "works at a high level",
    "start": "976480",
    "end": "979759"
  },
  {
    "text": "basically",
    "start": "979759",
    "end": "980880"
  },
  {
    "text": "ansible provider is driven at its core",
    "start": "980880",
    "end": "983839"
  },
  {
    "text": "by a kubernetes controller called single",
    "start": "983839",
    "end": "986959"
  },
  {
    "text": "run controller",
    "start": "986959",
    "end": "988560"
  },
  {
    "text": "where it watches the ansible run",
    "start": "988560",
    "end": "991440"
  },
  {
    "text": "kubernetes custom resource",
    "start": "991440",
    "end": "993759"
  },
  {
    "text": "along with a reference to the provided",
    "start": "993759",
    "end": "996800"
  },
  {
    "text": "config",
    "start": "996800",
    "end": "997920"
  },
  {
    "text": "that includes",
    "start": "997920",
    "end": "999519"
  },
  {
    "text": "all the information to run in super",
    "start": "999519",
    "end": "1001600"
  },
  {
    "text": "contents",
    "start": "1001600",
    "end": "1003120"
  },
  {
    "text": "the controller usually retrieves the",
    "start": "1003120",
    "end": "1005199"
  },
  {
    "text": "ansible contents remotely",
    "start": "1005199",
    "end": "1007279"
  },
  {
    "text": "from many places such as",
    "start": "1007279",
    "end": "1010639"
  },
  {
    "text": "ancient galaxy",
    "start": "1010639",
    "end": "1012240"
  },
  {
    "text": "automation herb or get ripple",
    "start": "1012240",
    "end": "1016399"
  },
  {
    "text": "and then it will store the content",
    "start": "1016399",
    "end": "1019519"
  },
  {
    "text": "into a working directory",
    "start": "1019519",
    "end": "1022000"
  },
  {
    "text": "so that can be launched by a um embedded",
    "start": "1022000",
    "end": "1026880"
  },
  {
    "text": "and civil runner come online",
    "start": "1026880",
    "end": "1030400"
  },
  {
    "text": "so here are some examples to demonstrate",
    "start": "1031919",
    "end": "1035918"
  },
  {
    "text": "how to use it for example we can define",
    "start": "1035919",
    "end": "1039839"
  },
  {
    "text": "an ancient run",
    "start": "1039839",
    "end": "1041760"
  },
  {
    "text": "to call an ansible row",
    "start": "1041760",
    "end": "1044160"
  },
  {
    "text": "or an ansible playbook",
    "start": "1044160",
    "end": "1048079"
  },
  {
    "text": "and both of them",
    "start": "1048079",
    "end": "1050240"
  },
  {
    "text": "are usually retrieved from a remote",
    "start": "1050240",
    "end": "1053039"
  },
  {
    "text": "place",
    "start": "1053039",
    "end": "1054240"
  },
  {
    "text": "which can be defined as the requirements",
    "start": "1054240",
    "end": "1057600"
  },
  {
    "text": "in the provided config",
    "start": "1057600",
    "end": "1061280"
  },
  {
    "text": "so as it is shown here",
    "start": "1061520",
    "end": "1064320"
  },
  {
    "text": "this one is retrieved from",
    "start": "1064320",
    "end": "1067360"
  },
  {
    "text": "ansible galaxy",
    "start": "1067360",
    "end": "1069039"
  },
  {
    "text": "and this one is retrieved from a good",
    "start": "1069039",
    "end": "1071760"
  },
  {
    "text": "ripple",
    "start": "1071760",
    "end": "1074240"
  },
  {
    "text": "and if it is a private gear ripple that",
    "start": "1074320",
    "end": "1077679"
  },
  {
    "text": "requires credential to access",
    "start": "1077679",
    "end": "1080480"
  },
  {
    "text": "it can also define the credentials",
    "start": "1080480",
    "end": "1082640"
  },
  {
    "text": "information here",
    "start": "1082640",
    "end": "1086000"
  },
  {
    "text": "we can also pass variables to customize",
    "start": "1086320",
    "end": "1089600"
  },
  {
    "text": "the ansible run like this",
    "start": "1089600",
    "end": "1092400"
  },
  {
    "text": "and",
    "start": "1092400",
    "end": "1093280"
  },
  {
    "text": "for some simple cases",
    "start": "1093280",
    "end": "1095280"
  },
  {
    "text": "you can even define an inline playbook",
    "start": "1095280",
    "end": "1097840"
  },
  {
    "text": "directly",
    "start": "1097840",
    "end": "1098960"
  },
  {
    "text": "within the ansible run resource",
    "start": "1098960",
    "end": "1101760"
  },
  {
    "text": "which does not require any remote",
    "start": "1101760",
    "end": "1103679"
  },
  {
    "text": "retrieval",
    "start": "1103679",
    "end": "1106240"
  },
  {
    "text": "next",
    "start": "1107280",
    "end": "1108480"
  },
  {
    "text": "let's take a little bit deep dive into",
    "start": "1108480",
    "end": "1110799"
  },
  {
    "text": "the ansible provider design so that you",
    "start": "1110799",
    "end": "1113520"
  },
  {
    "text": "can better understand what happens",
    "start": "1113520",
    "end": "1115919"
  },
  {
    "text": "inside the provider",
    "start": "1115919",
    "end": "1118960"
  },
  {
    "start": "1118000",
    "end": "1118000"
  },
  {
    "text": "first",
    "start": "1118960",
    "end": "1120000"
  },
  {
    "text": "let's take a quick look at how crosspen",
    "start": "1120000",
    "end": "1122480"
  },
  {
    "text": "provider manages its resource",
    "start": "1122480",
    "end": "1126640"
  },
  {
    "text": "so to manage resource",
    "start": "1126640",
    "end": "1128640"
  },
  {
    "text": "or usually we call it external resource",
    "start": "1128640",
    "end": "1132240"
  },
  {
    "text": "on targeted system",
    "start": "1132240",
    "end": "1134080"
  },
  {
    "text": "it requires us to define managed",
    "start": "1134080",
    "end": "1136480"
  },
  {
    "text": "resource",
    "start": "1136480",
    "end": "1137760"
  },
  {
    "text": "that includes the desired state",
    "start": "1137760",
    "end": "1140480"
  },
  {
    "text": "and is watched by the cross-plan managed",
    "start": "1140480",
    "end": "1143679"
  },
  {
    "text": "resource reconciler",
    "start": "1143679",
    "end": "1145440"
  },
  {
    "text": "on local system",
    "start": "1145440",
    "end": "1147600"
  },
  {
    "text": "to manage the external resource",
    "start": "1147600",
    "end": "1150480"
  },
  {
    "text": "we will have to operate on the managed",
    "start": "1150480",
    "end": "1153039"
  },
  {
    "text": "resource",
    "start": "1153039",
    "end": "1154320"
  },
  {
    "text": "where the changes will be detected by",
    "start": "1154320",
    "end": "1157200"
  },
  {
    "text": "the managed resource reconciler",
    "start": "1157200",
    "end": "1159600"
  },
  {
    "text": "then the reconsider will operate on",
    "start": "1159600",
    "end": "1162400"
  },
  {
    "text": "external resource on target system to",
    "start": "1162400",
    "end": "1166000"
  },
  {
    "text": "reflect the changes that we made on the",
    "start": "1166000",
    "end": "1169280"
  },
  {
    "text": "managed resource",
    "start": "1169280",
    "end": "1172080"
  },
  {
    "text": "to be more accurate",
    "start": "1172080",
    "end": "1174080"
  },
  {
    "text": "this is a typical reconciliation loop",
    "start": "1174080",
    "end": "1177039"
  },
  {
    "text": "that is consistent",
    "start": "1177039",
    "end": "1178799"
  },
  {
    "text": "uh consists of five phases",
    "start": "1178799",
    "end": "1182559"
  },
  {
    "text": "it starts from the connect phase that is",
    "start": "1182559",
    "end": "1185760"
  },
  {
    "text": "usually",
    "start": "1185760",
    "end": "1187600"
  },
  {
    "text": "used to establish the connection",
    "start": "1187600",
    "end": "1190320"
  },
  {
    "text": "to the tactical system",
    "start": "1190320",
    "end": "1192480"
  },
  {
    "text": "then observe delete create and update",
    "start": "1192480",
    "end": "1197760"
  },
  {
    "text": "that map to the resource cloud",
    "start": "1197760",
    "end": "1199520"
  },
  {
    "text": "operations",
    "start": "1199520",
    "end": "1201679"
  },
  {
    "text": "during the observed phase",
    "start": "1201679",
    "end": "1204000"
  },
  {
    "text": "the provider will usually detect if the",
    "start": "1204000",
    "end": "1206400"
  },
  {
    "text": "resource on target system exists or not",
    "start": "1206400",
    "end": "1210080"
  },
  {
    "text": "if it does not exist it will advance to",
    "start": "1210080",
    "end": "1213520"
  },
  {
    "text": "the crate phase",
    "start": "1213520",
    "end": "1215919"
  },
  {
    "text": "to create a resource",
    "start": "1215919",
    "end": "1218720"
  },
  {
    "text": "and if it does exist but",
    "start": "1218720",
    "end": "1221919"
  },
  {
    "text": "not up to date it will then go to the",
    "start": "1221919",
    "end": "1225120"
  },
  {
    "text": "update phase to update a resource",
    "start": "1225120",
    "end": "1228159"
  },
  {
    "text": "so that the desired state and the actual",
    "start": "1228159",
    "end": "1230559"
  },
  {
    "text": "state are always in sync",
    "start": "1230559",
    "end": "1233039"
  },
  {
    "text": "once it's finished",
    "start": "1233039",
    "end": "1234400"
  },
  {
    "text": "it will requeue",
    "start": "1234400",
    "end": "1236720"
  },
  {
    "text": "to",
    "start": "1236720",
    "end": "1238159"
  },
  {
    "text": "wait for the next loop",
    "start": "1238159",
    "end": "1241600"
  },
  {
    "text": "and if user deletes the managed resource",
    "start": "1242000",
    "end": "1245200"
  },
  {
    "text": "that means we will never need external",
    "start": "1245200",
    "end": "1247760"
  },
  {
    "text": "resources on targeted system anymore",
    "start": "1247760",
    "end": "1250720"
  },
  {
    "text": "then this will trigger",
    "start": "1250720",
    "end": "1252960"
  },
  {
    "text": "the delete phase where the provider will",
    "start": "1252960",
    "end": "1255919"
  },
  {
    "text": "help us",
    "start": "1255919",
    "end": "1257120"
  },
  {
    "text": "delete the results on targeted system",
    "start": "1257120",
    "end": "1259600"
  },
  {
    "text": "so this is what we call as cross plan",
    "start": "1259600",
    "end": "1261919"
  },
  {
    "text": "manage the resource life cycle",
    "start": "1261919",
    "end": "1265679"
  },
  {
    "start": "1265000",
    "end": "1265000"
  },
  {
    "text": "now",
    "start": "1267919",
    "end": "1268799"
  },
  {
    "text": "it tends to the small run life cycle",
    "start": "1268799",
    "end": "1271520"
  },
  {
    "text": "you may see that it is actually a subset",
    "start": "1271520",
    "end": "1274240"
  },
  {
    "text": "of the cross plan manage the resource",
    "start": "1274240",
    "end": "1276720"
  },
  {
    "text": "lifecycle",
    "start": "1276720",
    "end": "1278640"
  },
  {
    "text": "generally",
    "start": "1278640",
    "end": "1280240"
  },
  {
    "text": "in ansible provider",
    "start": "1280240",
    "end": "1282320"
  },
  {
    "text": "there are two types of lifecycle",
    "start": "1282320",
    "end": "1284880"
  },
  {
    "text": "for the ansible run",
    "start": "1284880",
    "end": "1286640"
  },
  {
    "text": "that are supported",
    "start": "1286640",
    "end": "1289960"
  },
  {
    "text": "in the first type",
    "start": "1291200",
    "end": "1292640"
  },
  {
    "text": "the provider uses observe",
    "start": "1292640",
    "end": "1295440"
  },
  {
    "text": "to handle the case when the managed",
    "start": "1295440",
    "end": "1297919"
  },
  {
    "text": "resource as a run is present",
    "start": "1297919",
    "end": "1300960"
  },
  {
    "text": "and use delete",
    "start": "1300960",
    "end": "1302559"
  },
  {
    "text": "to handle the case when the managed",
    "start": "1302559",
    "end": "1304880"
  },
  {
    "text": "resource symbol run is absent",
    "start": "1304880",
    "end": "1308320"
  },
  {
    "text": "and both observe and delete will call",
    "start": "1308320",
    "end": "1311600"
  },
  {
    "text": "the same set of measurable contents",
    "start": "1311600",
    "end": "1315760"
  },
  {
    "text": "in a second type the provider",
    "start": "1315919",
    "end": "1319120"
  },
  {
    "text": "will run the ansible contents",
    "start": "1319120",
    "end": "1322000"
  },
  {
    "text": "in observe first",
    "start": "1322000",
    "end": "1323840"
  },
  {
    "text": "but using the check mode which is",
    "start": "1323840",
    "end": "1327280"
  },
  {
    "text": "essentially a dry run",
    "start": "1327280",
    "end": "1329440"
  },
  {
    "text": "and if any change is detected after the",
    "start": "1329440",
    "end": "1332159"
  },
  {
    "text": "dry run the provider will then trigger",
    "start": "1332159",
    "end": "1334880"
  },
  {
    "text": "create or update to kick off the actual",
    "start": "1334880",
    "end": "1337760"
  },
  {
    "text": "run of the same set of ansible contents",
    "start": "1337760",
    "end": "1342960"
  },
  {
    "text": "also",
    "start": "1342960",
    "end": "1344240"
  },
  {
    "text": "both",
    "start": "1344240",
    "end": "1345039"
  },
  {
    "text": "two types will use connect",
    "start": "1345039",
    "end": "1347520"
  },
  {
    "text": "to prepare the runtime environment for",
    "start": "1347520",
    "end": "1350480"
  },
  {
    "text": "the ansible run for example to retrieve",
    "start": "1350480",
    "end": "1353440"
  },
  {
    "text": "the ansible contents from a remote place",
    "start": "1353440",
    "end": "1358919"
  },
  {
    "start": "1358000",
    "end": "1358000"
  },
  {
    "text": "okay",
    "start": "1360559",
    "end": "1361600"
  },
  {
    "text": "now you learned how small run will be",
    "start": "1361600",
    "end": "1363760"
  },
  {
    "text": "driven by following the life cycle",
    "start": "1363760",
    "end": "1367360"
  },
  {
    "text": "ansible provider implements the life",
    "start": "1367360",
    "end": "1369440"
  },
  {
    "text": "cycle to decide",
    "start": "1369440",
    "end": "1371280"
  },
  {
    "text": "when to run the",
    "start": "1371280",
    "end": "1372840"
  },
  {
    "text": "answer but in order to",
    "start": "1372840",
    "end": "1375440"
  },
  {
    "text": "do the actual work to manage the",
    "start": "1375440",
    "end": "1377360"
  },
  {
    "text": "resource on target system",
    "start": "1377360",
    "end": "1379840"
  },
  {
    "text": "it relies on the ansible contents",
    "start": "1379840",
    "end": "1383520"
  },
  {
    "text": "now let's see what are the best",
    "start": "1383520",
    "end": "1385440"
  },
  {
    "text": "practices for ansible users who creates",
    "start": "1385440",
    "end": "1388480"
  },
  {
    "text": "the ansible contents",
    "start": "1388480",
    "end": "1390080"
  },
  {
    "text": "so that can align with life cycle much",
    "start": "1390080",
    "end": "1392720"
  },
  {
    "text": "better",
    "start": "1392720",
    "end": "1395120"
  },
  {
    "text": "so here are a couple of rules",
    "start": "1395280",
    "end": "1397760"
  },
  {
    "text": "the first rule is to keep your ansible",
    "start": "1397760",
    "end": "1400559"
  },
  {
    "text": "rules",
    "start": "1400559",
    "end": "1401440"
  },
  {
    "text": "or playbooks",
    "start": "1401440",
    "end": "1403200"
  },
  {
    "text": "adaptant",
    "start": "1403200",
    "end": "1405760"
  },
  {
    "text": "it is always a best practice to write",
    "start": "1405760",
    "end": "1408080"
  },
  {
    "text": "ansible rules or playbooks",
    "start": "1408080",
    "end": "1410640"
  },
  {
    "text": "in an adapted way",
    "start": "1410640",
    "end": "1413280"
  },
  {
    "text": "for ansible provider this is required",
    "start": "1413280",
    "end": "1415919"
  },
  {
    "text": "because the same ansible contents",
    "start": "1415919",
    "end": "1418880"
  },
  {
    "text": "will be run many times in the",
    "start": "1418880",
    "end": "1420720"
  },
  {
    "text": "reconciliation loop",
    "start": "1420720",
    "end": "1422640"
  },
  {
    "text": "you should guarantee that each simple",
    "start": "1422640",
    "end": "1424960"
  },
  {
    "text": "run should produce the same results if",
    "start": "1424960",
    "end": "1427679"
  },
  {
    "text": "the desired state is not changed",
    "start": "1427679",
    "end": "1431840"
  },
  {
    "text": "the second rule is to ensure your",
    "start": "1432480",
    "end": "1435279"
  },
  {
    "text": "ansible rules or playbooks to support",
    "start": "1435279",
    "end": "1437919"
  },
  {
    "text": "state field",
    "start": "1437919",
    "end": "1440559"
  },
  {
    "text": "it is also a common practice in many",
    "start": "1440559",
    "end": "1443039"
  },
  {
    "text": "ansible modules that support state field",
    "start": "1443039",
    "end": "1446159"
  },
  {
    "text": "and behave differently according to the",
    "start": "1446159",
    "end": "1448480"
  },
  {
    "text": "state value",
    "start": "1448480",
    "end": "1450640"
  },
  {
    "text": "and for ansible provider this is",
    "start": "1450640",
    "end": "1452960"
  },
  {
    "text": "required because the same ansible",
    "start": "1452960",
    "end": "1455360"
  },
  {
    "text": "contents will be used to handle both the",
    "start": "1455360",
    "end": "1457600"
  },
  {
    "text": "case",
    "start": "1457600",
    "end": "1458400"
  },
  {
    "text": "when the ansible run resource is present",
    "start": "1458400",
    "end": "1461600"
  },
  {
    "text": "and absent",
    "start": "1461600",
    "end": "1464400"
  },
  {
    "start": "1464000",
    "end": "1464000"
  },
  {
    "text": "next let's take a quick look at the",
    "start": "1466720",
    "end": "1468880"
  },
  {
    "text": "difference between ansible provider and",
    "start": "1468880",
    "end": "1472080"
  },
  {
    "text": "ansible operator",
    "start": "1472080",
    "end": "1474480"
  },
  {
    "text": "which is another similar technology",
    "start": "1474480",
    "end": "1476799"
  },
  {
    "text": "created by a red hat that can bring",
    "start": "1476799",
    "end": "1479679"
  },
  {
    "text": "ansible into kubernetes world",
    "start": "1479679",
    "end": "1483679"
  },
  {
    "text": "so as listed here",
    "start": "1483679",
    "end": "1486400"
  },
  {
    "text": "there are a few major differences",
    "start": "1486400",
    "end": "1489039"
  },
  {
    "text": "first",
    "start": "1489039",
    "end": "1490640"
  },
  {
    "text": "ansible operator is mainly designed for",
    "start": "1490640",
    "end": "1493440"
  },
  {
    "text": "managing combination resources",
    "start": "1493440",
    "end": "1496240"
  },
  {
    "text": "while as a provider can be used to",
    "start": "1496240",
    "end": "1498720"
  },
  {
    "text": "manage both kubernetes and",
    "start": "1498720",
    "end": "1500960"
  },
  {
    "text": "non-kubernetes resources",
    "start": "1500960",
    "end": "1504480"
  },
  {
    "text": "and second",
    "start": "1505520",
    "end": "1507200"
  },
  {
    "text": "and simple operator requires you",
    "start": "1507200",
    "end": "1510480"
  },
  {
    "text": "to bundle ansible contents that manage",
    "start": "1510480",
    "end": "1512960"
  },
  {
    "text": "resource into a container image",
    "start": "1512960",
    "end": "1516320"
  },
  {
    "text": "at build time before you deploy it",
    "start": "1516320",
    "end": "1520720"
  },
  {
    "text": "and ansible provider on the other side",
    "start": "1520720",
    "end": "1523679"
  },
  {
    "text": "works as a driver without having to",
    "start": "1523679",
    "end": "1526240"
  },
  {
    "text": "build ansible content into it",
    "start": "1526240",
    "end": "1529120"
  },
  {
    "text": "but instead to prepare and call those",
    "start": "1529120",
    "end": "1531600"
  },
  {
    "text": "usable contents at runtime",
    "start": "1531600",
    "end": "1535200"
  },
  {
    "text": "and third",
    "start": "1535200",
    "end": "1536960"
  },
  {
    "text": "ansible operator is usually implemented",
    "start": "1536960",
    "end": "1540880"
  },
  {
    "text": "as a co-located kubernetes application",
    "start": "1540880",
    "end": "1544080"
  },
  {
    "text": "to operate on in-cluster resources",
    "start": "1544080",
    "end": "1548159"
  },
  {
    "text": "while ansible provider usually runs on",
    "start": "1548159",
    "end": "1550799"
  },
  {
    "text": "one kubernetes cluster",
    "start": "1550799",
    "end": "1552720"
  },
  {
    "text": "then are based on the resources on",
    "start": "1552720",
    "end": "1555840"
  },
  {
    "text": "another remote system",
    "start": "1555840",
    "end": "1557760"
  },
  {
    "text": "which can be either kubernetes or",
    "start": "1557760",
    "end": "1560320"
  },
  {
    "text": "non-kubernetes",
    "start": "1560320",
    "end": "1563200"
  },
  {
    "text": "lastly all the discussions around the",
    "start": "1565840",
    "end": "1568640"
  },
  {
    "text": "ansible provider was extracted from the",
    "start": "1568640",
    "end": "1571919"
  },
  {
    "text": "design dock which i put the link here",
    "start": "1571919",
    "end": "1575520"
  },
  {
    "text": "just for your reference",
    "start": "1575520",
    "end": "1578159"
  },
  {
    "text": "you can read it to get a more detailed",
    "start": "1578159",
    "end": "1580720"
  },
  {
    "text": "version",
    "start": "1580720",
    "end": "1583200"
  },
  {
    "text": "and since it is an open source project",
    "start": "1583200",
    "end": "1585760"
  },
  {
    "text": "that is evolving rapidly",
    "start": "1585760",
    "end": "1588159"
  },
  {
    "text": "i would encourage you to join us",
    "start": "1588159",
    "end": "1590960"
  },
  {
    "text": "and feel free to open good issue or",
    "start": "1590960",
    "end": "1593360"
  },
  {
    "text": "submit pr if you have any good idea on",
    "start": "1593360",
    "end": "1596880"
  },
  {
    "text": "how to improve it",
    "start": "1596880",
    "end": "1599600"
  },
  {
    "text": "okay that's all for this session and",
    "start": "1599600",
    "end": "1602080"
  },
  {
    "text": "thanks for watching",
    "start": "1602080",
    "end": "1605519"
  }
]