[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "hello everyone and welcome to our",
    "start": "80",
    "end": "1520"
  },
  {
    "text": "session open telemetry collector",
    "start": "1520",
    "end": "3520"
  },
  {
    "text": "telemetry built into all software",
    "start": "3520",
    "end": "7120"
  },
  {
    "text": "thanks for joining us first off like to",
    "start": "7120",
    "end": "9760"
  },
  {
    "text": "introduce ourselves my name is steve",
    "start": "9760",
    "end": "11200"
  },
  {
    "text": "flanders i'm a director of engineering",
    "start": "11200",
    "end": "12799"
  },
  {
    "text": "at splunk i'm also an open telemetry",
    "start": "12799",
    "end": "15040"
  },
  {
    "text": "collector approver",
    "start": "15040",
    "end": "16400"
  },
  {
    "text": "been working in the observability and",
    "start": "16400",
    "end": "18880"
  },
  {
    "text": "monitoring space for the last decade",
    "start": "18880",
    "end": "21600"
  },
  {
    "text": "and was actually contributing to the",
    "start": "21600",
    "end": "22960"
  },
  {
    "text": "open census project prior to it joining",
    "start": "22960",
    "end": "25680"
  },
  {
    "text": "with open tracing to form open telemetry",
    "start": "25680",
    "end": "28640"
  },
  {
    "text": "and joining me is trask hey i'm trask",
    "start": "28640",
    "end": "32078"
  },
  {
    "text": "stolenker",
    "start": "32079",
    "end": "33040"
  },
  {
    "text": "i'm a software engineer at microsoft",
    "start": "33040",
    "end": "36399"
  },
  {
    "text": "uh i'm a maintainer on the open",
    "start": "36399",
    "end": "38640"
  },
  {
    "text": "telemetry java instrumentation",
    "start": "38640",
    "end": "40800"
  },
  {
    "text": "project and i've also been in the uh",
    "start": "40800",
    "end": "43920"
  },
  {
    "text": "monitoring",
    "start": "43920",
    "end": "44719"
  },
  {
    "text": "business sort of well open source",
    "start": "44719",
    "end": "46960"
  },
  {
    "text": "business at least for a decade uh",
    "start": "46960",
    "end": "49200"
  },
  {
    "text": "um i wrote and maintained uh open source",
    "start": "49200",
    "end": "52640"
  },
  {
    "text": "uh",
    "start": "52640",
    "end": "53199"
  },
  {
    "text": "java monitoring tool called glow root",
    "start": "53199",
    "end": "55199"
  },
  {
    "text": "and uh enjoy that space so much",
    "start": "55199",
    "end": "57680"
  },
  {
    "text": "that uh here i am in open telemetry",
    "start": "57680",
    "end": "60079"
  },
  {
    "text": "world now",
    "start": "60079",
    "end": "62559"
  },
  {
    "text": "awesome so our agenda for today i want",
    "start": "62879",
    "end": "65518"
  },
  {
    "text": "to give you a quick introduction to what",
    "start": "65519",
    "end": "67280"
  },
  {
    "text": "the open symmetry project",
    "start": "67280",
    "end": "68720"
  },
  {
    "text": "is talk a bit about the open symmetry",
    "start": "68720",
    "end": "71360"
  },
  {
    "text": "collector and how it fits into the",
    "start": "71360",
    "end": "73280"
  },
  {
    "text": "observability picture",
    "start": "73280",
    "end": "74799"
  },
  {
    "text": "then do the same thing around auto",
    "start": "74799",
    "end": "76880"
  },
  {
    "text": "instrumentation focusing primarily on",
    "start": "76880",
    "end": "79040"
  },
  {
    "text": "java that we will touch on other",
    "start": "79040",
    "end": "80400"
  },
  {
    "text": "languages as well",
    "start": "80400",
    "end": "81759"
  },
  {
    "text": "and then really wrap it up with a demo",
    "start": "81759",
    "end": "83759"
  },
  {
    "text": "showing you how to really get started",
    "start": "83759",
    "end": "85360"
  },
  {
    "text": "with the open telemetry project",
    "start": "85360",
    "end": "87840"
  },
  {
    "text": "so with that what is open telemetry open",
    "start": "87840",
    "end": "90640"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "symmetry is a cncf",
    "start": "90640",
    "end": "92400"
  },
  {
    "text": "project and it's really looking to solve",
    "start": "92400",
    "end": "95759"
  },
  {
    "text": "a pretty big pain point in the",
    "start": "95759",
    "end": "97280"
  },
  {
    "text": "observability space",
    "start": "97280",
    "end": "98799"
  },
  {
    "text": "if you've heard of observability you've",
    "start": "98799",
    "end": "100159"
  },
  {
    "text": "probably heard of the three pillars of",
    "start": "100159",
    "end": "101520"
  },
  {
    "text": "observability",
    "start": "101520",
    "end": "102320"
  },
  {
    "text": "being the different data sources that",
    "start": "102320",
    "end": "103759"
  },
  {
    "text": "you have in your environment traces",
    "start": "103759",
    "end": "105360"
  },
  {
    "text": "metrics and logs",
    "start": "105360",
    "end": "106799"
  },
  {
    "text": "well for each of these different data",
    "start": "106799",
    "end": "108399"
  },
  {
    "text": "sources there are actually different",
    "start": "108399",
    "end": "110159"
  },
  {
    "text": "layers to it you have the api you have",
    "start": "110159",
    "end": "113119"
  },
  {
    "text": "the implementation",
    "start": "113119",
    "end": "114159"
  },
  {
    "text": "of that api all the data collection",
    "start": "114159",
    "end": "116640"
  },
  {
    "text": "aspects",
    "start": "116640",
    "end": "117520"
  },
  {
    "text": "and then things like wire formats",
    "start": "117520",
    "end": "119439"
  },
  {
    "text": "interrupt formats and the like",
    "start": "119439",
    "end": "121439"
  },
  {
    "text": "some of these things are actually",
    "start": "121439",
    "end": "123040"
  },
  {
    "text": "language specific so when you start",
    "start": "123040",
    "end": "124479"
  },
  {
    "text": "talking about instrumentation apis",
    "start": "124479",
    "end": "126560"
  },
  {
    "text": "they have to be written for each",
    "start": "126560",
    "end": "127600"
  },
  {
    "text": "individual language where the agent and",
    "start": "127600",
    "end": "129840"
  },
  {
    "text": "collector mechanisms have different",
    "start": "129840",
    "end": "131360"
  },
  {
    "text": "deployment methods depending on the type",
    "start": "131360",
    "end": "133040"
  },
  {
    "text": "of architecture that you're you're",
    "start": "133040",
    "end": "134560"
  },
  {
    "text": "deployed into",
    "start": "134560",
    "end": "136160"
  },
  {
    "text": "open symmetry is really looking to solve",
    "start": "136160",
    "end": "137840"
  },
  {
    "text": "all of these aspects",
    "start": "137840",
    "end": "139599"
  },
  {
    "text": "the idea is everything that you deploy",
    "start": "139599",
    "end": "141760"
  },
  {
    "text": "within your environment to get telemetry",
    "start": "141760",
    "end": "143599"
  },
  {
    "text": "data out",
    "start": "143599",
    "end": "144480"
  },
  {
    "text": "open symmetry is providing a completely",
    "start": "144480",
    "end": "147599"
  },
  {
    "text": "vendor agnostic solution too",
    "start": "147599",
    "end": "149760"
  },
  {
    "text": "to get that telemetry data to the back",
    "start": "149760",
    "end": "151760"
  },
  {
    "text": "end or back ends of your choice",
    "start": "151760",
    "end": "153680"
  },
  {
    "text": "open symmetry actually does not offer a",
    "start": "153680",
    "end": "155599"
  },
  {
    "text": "back end though that's where it kind of",
    "start": "155599",
    "end": "156959"
  },
  {
    "text": "draws the line",
    "start": "156959",
    "end": "157760"
  },
  {
    "text": "anything instrumentation data collection",
    "start": "157760",
    "end": "160000"
  },
  {
    "text": "even things around semantic conventions",
    "start": "160000",
    "end": "162000"
  },
  {
    "text": "are all included and then you can choose",
    "start": "162000",
    "end": "164160"
  },
  {
    "text": "either an open source or commercial",
    "start": "164160",
    "end": "165840"
  },
  {
    "text": "backend to send your data to",
    "start": "165840",
    "end": "168640"
  },
  {
    "text": "now the open symmetry project is",
    "start": "168640",
    "end": "170080"
  },
  {
    "text": "currently in beta for most of the",
    "start": "170080",
    "end": "172480"
  },
  {
    "text": "languages there are a few that haven't",
    "start": "172480",
    "end": "173840"
  },
  {
    "text": "reached beta yet there's been an",
    "start": "173840",
    "end": "175519"
  },
  {
    "text": "extensive focus on tracing to start so",
    "start": "175519",
    "end": "177680"
  },
  {
    "text": "it's quite mature",
    "start": "177680",
    "end": "178720"
  },
  {
    "text": "in fact the specification has already",
    "start": "178720",
    "end": "180319"
  },
  {
    "text": "reached its first stable release",
    "start": "180319",
    "end": "182560"
  },
  {
    "text": "the metrics one is actively underway and",
    "start": "182560",
    "end": "184480"
  },
  {
    "text": "that should be wrapping up later on this",
    "start": "184480",
    "end": "186000"
  },
  {
    "text": "year it will also be stable by the time",
    "start": "186000",
    "end": "187920"
  },
  {
    "text": "we get to ga",
    "start": "187920",
    "end": "189120"
  },
  {
    "text": "and ga is planned for later this year so",
    "start": "189120",
    "end": "192080"
  },
  {
    "text": "a lot of active contributions going on",
    "start": "192080",
    "end": "194159"
  },
  {
    "text": "now and again this is really the joining",
    "start": "194159",
    "end": "196080"
  },
  {
    "text": "of two other projects",
    "start": "196080",
    "end": "197519"
  },
  {
    "text": "open census and open telemetry",
    "start": "197519",
    "end": "200640"
  },
  {
    "text": "now another interesting fact for you",
    "start": "200640",
    "end": "202560"
  },
  {
    "text": "open symmetry is",
    "start": "202560",
    "end": "203680"
  },
  {
    "text": "extremely active in fact it is the",
    "start": "203680",
    "end": "205840"
  },
  {
    "text": "second most active project in cncf",
    "start": "205840",
    "end": "208560"
  },
  {
    "text": "behind only kubernetes according to the",
    "start": "208560",
    "end": "211519"
  },
  {
    "text": "cncf dev stats",
    "start": "211519",
    "end": "214319"
  },
  {
    "start": "214000",
    "end": "214000"
  },
  {
    "text": "so let's talk about how you would deploy",
    "start": "214319",
    "end": "216400"
  },
  {
    "text": "open symmetry into your environment",
    "start": "216400",
    "end": "218159"
  },
  {
    "text": "so if we think about having one or more",
    "start": "218159",
    "end": "220319"
  },
  {
    "text": "hosts each running one or more",
    "start": "220319",
    "end": "222159"
  },
  {
    "text": "applications",
    "start": "222159",
    "end": "223120"
  },
  {
    "text": "and maybe we want to send the data to",
    "start": "223120",
    "end": "224640"
  },
  {
    "text": "one or more different back ends",
    "start": "224640",
    "end": "226480"
  },
  {
    "text": "the typical recommended approach would",
    "start": "226480",
    "end": "228400"
  },
  {
    "text": "be to go ahead and deploy the open",
    "start": "228400",
    "end": "230319"
  },
  {
    "text": "telemetry collector as an agent",
    "start": "230319",
    "end": "232640"
  },
  {
    "text": "on each of your hosts that will allow",
    "start": "232640",
    "end": "234720"
  },
  {
    "text": "you to actually collect host metrics",
    "start": "234720",
    "end": "236640"
  },
  {
    "text": "automatically",
    "start": "236640",
    "end": "237599"
  },
  {
    "text": "and also provides a way to collect",
    "start": "237599",
    "end": "239519"
  },
  {
    "text": "tracing information",
    "start": "239519",
    "end": "241280"
  },
  {
    "text": "now that tracing information as well as",
    "start": "241280",
    "end": "243439"
  },
  {
    "text": "application metrics can come out of",
    "start": "243439",
    "end": "245439"
  },
  {
    "text": "open symmetry client libraries these are",
    "start": "245439",
    "end": "247920"
  },
  {
    "text": "going to be language specific",
    "start": "247920",
    "end": "249599"
  },
  {
    "text": "and out of the box are actually",
    "start": "249599",
    "end": "250879"
  },
  {
    "text": "configured to send directly to the open",
    "start": "250879",
    "end": "252959"
  },
  {
    "text": "symmetry collector so if you deploy it",
    "start": "252959",
    "end": "255360"
  },
  {
    "text": "without configuration you'll actually",
    "start": "255360",
    "end": "257040"
  },
  {
    "text": "have telemetry data being emitted for",
    "start": "257040",
    "end": "259519"
  },
  {
    "text": "the auto instrumentation libraries which",
    "start": "259519",
    "end": "261359"
  },
  {
    "text": "is pretty cool",
    "start": "261359",
    "end": "262800"
  },
  {
    "text": "and then in addition you can also deploy",
    "start": "262800",
    "end": "265199"
  },
  {
    "text": "the open symmetry collector as a",
    "start": "265199",
    "end": "266560"
  },
  {
    "text": "standalone service",
    "start": "266560",
    "end": "267759"
  },
  {
    "text": "if you want to handle more advanced use",
    "start": "267759",
    "end": "269759"
  },
  {
    "text": "cases maybe around",
    "start": "269759",
    "end": "271520"
  },
  {
    "text": "protecting from a security perspective",
    "start": "271520",
    "end": "273440"
  },
  {
    "text": "limiting the number of egress points or",
    "start": "273440",
    "end": "275040"
  },
  {
    "text": "controlling your api tokens",
    "start": "275040",
    "end": "276800"
  },
  {
    "text": "or if you want to do more advanced",
    "start": "276800",
    "end": "278080"
  },
  {
    "text": "functionality such as",
    "start": "278080",
    "end": "280000"
  },
  {
    "text": "till-based sampling in the case of apm",
    "start": "280000",
    "end": "283840"
  },
  {
    "text": "now if you look at the open symmetry",
    "start": "283840",
    "end": "285280"
  },
  {
    "text": "collector as a single component that",
    "start": "285280",
    "end": "287919"
  },
  {
    "text": "exists it's actually one binary that can",
    "start": "287919",
    "end": "289759"
  },
  {
    "text": "be deployed in a variety of different",
    "start": "289759",
    "end": "291199"
  },
  {
    "text": "form factors depending on your needs",
    "start": "291199",
    "end": "293440"
  },
  {
    "text": "it's really looking to make it easy and",
    "start": "293440",
    "end": "296800"
  },
  {
    "text": "provide a vendor agnostic way to collect",
    "start": "296800",
    "end": "298960"
  },
  {
    "text": "this data",
    "start": "298960",
    "end": "300080"
  },
  {
    "text": "so it actually receives many open",
    "start": "300080",
    "end": "302320"
  },
  {
    "text": "standards today like jaeger",
    "start": "302320",
    "end": "304479"
  },
  {
    "text": "prometheus and zipkin and it can export",
    "start": "304479",
    "end": "306880"
  },
  {
    "text": "to both open source and commercial",
    "start": "306880",
    "end": "308479"
  },
  {
    "text": "backends",
    "start": "308479",
    "end": "309360"
  },
  {
    "text": "so in a way it handles translation for",
    "start": "309360",
    "end": "311680"
  },
  {
    "text": "you it so it understands the formats",
    "start": "311680",
    "end": "313520"
  },
  {
    "text": "it's receiving",
    "start": "313520",
    "end": "314400"
  },
  {
    "text": "and how to send that out in a different",
    "start": "314400",
    "end": "316000"
  },
  {
    "text": "format in addition it can be used to",
    "start": "316000",
    "end": "318800"
  },
  {
    "text": "manipulate the data before it gets sent",
    "start": "318800",
    "end": "320560"
  },
  {
    "text": "out maybe you want to do like pii",
    "start": "320560",
    "end": "322160"
  },
  {
    "text": "reduction",
    "start": "322160",
    "end": "323039"
  },
  {
    "text": "or you want to do metadata enrichment",
    "start": "323039",
    "end": "325280"
  },
  {
    "text": "all this is made possible through the",
    "start": "325280",
    "end": "326960"
  },
  {
    "text": "collector as well",
    "start": "326960",
    "end": "329280"
  },
  {
    "start": "329000",
    "end": "329000"
  },
  {
    "text": "now why would you want to actually",
    "start": "329280",
    "end": "332560"
  },
  {
    "text": "deploy a collector like why not just",
    "start": "332560",
    "end": "334160"
  },
  {
    "text": "have the client library send this data",
    "start": "334160",
    "end": "336240"
  },
  {
    "text": "directly to the back end the idea is",
    "start": "336240",
    "end": "338400"
  },
  {
    "text": "really to offload the responsibility",
    "start": "338400",
    "end": "340320"
  },
  {
    "text": "from the application",
    "start": "340320",
    "end": "341360"
  },
  {
    "text": "for two primary reasons one is you don't",
    "start": "341360",
    "end": "344080"
  },
  {
    "text": "want to have to implement it in every",
    "start": "344080",
    "end": "345360"
  },
  {
    "text": "single language like trying to keep that",
    "start": "345360",
    "end": "347120"
  },
  {
    "text": "consistent is really hard",
    "start": "347120",
    "end": "348639"
  },
  {
    "text": "and even the implementations are going",
    "start": "348639",
    "end": "350160"
  },
  {
    "text": "to change because they're language",
    "start": "350160",
    "end": "351520"
  },
  {
    "text": "specific",
    "start": "351520",
    "end": "352639"
  },
  {
    "text": "second you really don't want to",
    "start": "352639",
    "end": "354160"
  },
  {
    "text": "introduce too much overhead to the",
    "start": "354160",
    "end": "355919"
  },
  {
    "text": "application",
    "start": "355919",
    "end": "356720"
  },
  {
    "text": "so you want to do the minimum necessary",
    "start": "356720",
    "end": "358479"
  },
  {
    "text": "to gather the data that you need",
    "start": "358479",
    "end": "360240"
  },
  {
    "text": "that's why we recommend deploying the",
    "start": "360240",
    "end": "362240"
  },
  {
    "text": "open symmetry collector as an agent",
    "start": "362240",
    "end": "364160"
  },
  {
    "text": "you can actually have the",
    "start": "364160",
    "end": "365280"
  },
  {
    "text": "instrumentation pass off this data",
    "start": "365280",
    "end": "367440"
  },
  {
    "text": "quickly",
    "start": "367440",
    "end": "368000"
  },
  {
    "text": "and then have the agent handle this in a",
    "start": "368000",
    "end": "370080"
  },
  {
    "text": "unified way",
    "start": "370080",
    "end": "371199"
  },
  {
    "text": "and be able to handle things like",
    "start": "371199",
    "end": "372960"
  },
  {
    "text": "buffering and retry",
    "start": "372960",
    "end": "374720"
  },
  {
    "text": "compression encryption all the things",
    "start": "374720",
    "end": "376720"
  },
  {
    "text": "that you care about",
    "start": "376720",
    "end": "378080"
  },
  {
    "text": "that could be additional overhead to",
    "start": "378080",
    "end": "380000"
  },
  {
    "text": "your actual application",
    "start": "380000",
    "end": "381440"
  },
  {
    "text": "so really the idea here is time to value",
    "start": "381440",
    "end": "383440"
  },
  {
    "text": "make it very very simple",
    "start": "383440",
    "end": "384639"
  },
  {
    "text": "offloading of responsibilities and",
    "start": "384639",
    "end": "386319"
  },
  {
    "text": "really providing a consistent experience",
    "start": "386319",
    "end": "388319"
  },
  {
    "text": "end-to-end",
    "start": "388319",
    "end": "390000"
  },
  {
    "start": "390000",
    "end": "390000"
  },
  {
    "text": "now if we think about the architecture",
    "start": "390000",
    "end": "391360"
  },
  {
    "text": "of the collector basically it has a",
    "start": "391360",
    "end": "393280"
  },
  {
    "text": "notion of receivers how you get data in",
    "start": "393280",
    "end": "395520"
  },
  {
    "text": "this is both push and pull based as i",
    "start": "395520",
    "end": "397919"
  },
  {
    "text": "mentioned it already supports many of",
    "start": "397919",
    "end": "399440"
  },
  {
    "text": "the open source standards including",
    "start": "399440",
    "end": "401039"
  },
  {
    "text": "jager and prometheus",
    "start": "401039",
    "end": "402479"
  },
  {
    "text": "it has a notion of exporters which is",
    "start": "402479",
    "end": "404160"
  },
  {
    "text": "how you get data out",
    "start": "404160",
    "end": "405520"
  },
  {
    "text": "and again it supports both open source",
    "start": "405520",
    "end": "407520"
  },
  {
    "text": "as well as vendor commercial specific",
    "start": "407520",
    "end": "409759"
  },
  {
    "text": "backends",
    "start": "409759",
    "end": "410880"
  },
  {
    "text": "it has a notion of processors which is a",
    "start": "410880",
    "end": "412880"
  },
  {
    "text": "way of manipulating the data as it",
    "start": "412880",
    "end": "414960"
  },
  {
    "text": "passes through the collector",
    "start": "414960",
    "end": "416400"
  },
  {
    "text": "so this handles things like batching and",
    "start": "416400",
    "end": "418160"
  },
  {
    "text": "cued retry but as i mentioned also pii",
    "start": "418160",
    "end": "420720"
  },
  {
    "text": "redaction",
    "start": "420720",
    "end": "421440"
  },
  {
    "text": "tail-based sampling and other specific",
    "start": "421440",
    "end": "423599"
  },
  {
    "text": "scenarios",
    "start": "423599",
    "end": "425120"
  },
  {
    "text": "now what you end up doing is actually",
    "start": "425120",
    "end": "426880"
  },
  {
    "text": "defining what we call pipelines in the",
    "start": "426880",
    "end": "428960"
  },
  {
    "text": "collector",
    "start": "428960",
    "end": "429759"
  },
  {
    "text": "so for example i can say that i'm",
    "start": "429759",
    "end": "431199"
  },
  {
    "text": "receiving traffic over otop",
    "start": "431199",
    "end": "433280"
  },
  {
    "text": "we've been going through a batch and",
    "start": "433280",
    "end": "434639"
  },
  {
    "text": "cued retry processor and i'm exporting",
    "start": "434639",
    "end": "437199"
  },
  {
    "text": "in jager as i mentioned it handles that",
    "start": "437199",
    "end": "439120"
  },
  {
    "text": "translation of data format for you",
    "start": "439120",
    "end": "441199"
  },
  {
    "text": "automatically",
    "start": "441199",
    "end": "442479"
  },
  {
    "text": "you could then define a second pipeline",
    "start": "442479",
    "end": "444319"
  },
  {
    "text": "where again maybe i'm receiving from",
    "start": "444319",
    "end": "446080"
  },
  {
    "text": "otop",
    "start": "446080",
    "end": "447039"
  },
  {
    "text": "which is open telemetry's format that it",
    "start": "447039",
    "end": "449520"
  },
  {
    "text": "includes by default that's what the auto",
    "start": "449520",
    "end": "451280"
  },
  {
    "text": "instrumentation",
    "start": "451280",
    "end": "452160"
  },
  {
    "text": "and other client libraries follow today",
    "start": "452160",
    "end": "454160"
  },
  {
    "text": "and i could have that then",
    "start": "454160",
    "end": "455440"
  },
  {
    "text": "export to two different destinations",
    "start": "455440",
    "end": "457199"
  },
  {
    "text": "otlp and in this case prometheus",
    "start": "457199",
    "end": "459520"
  },
  {
    "text": "so there's a lot of flexibility in",
    "start": "459520",
    "end": "460880"
  },
  {
    "text": "choice via configuration",
    "start": "460880",
    "end": "462960"
  },
  {
    "text": "what's really nice about this is you",
    "start": "462960",
    "end": "464400"
  },
  {
    "text": "don't have to actually go make code",
    "start": "464400",
    "end": "465599"
  },
  {
    "text": "modifications to take advantage of these",
    "start": "465599",
    "end": "467039"
  },
  {
    "text": "capabilities it all happens in the",
    "start": "467039",
    "end": "468720"
  },
  {
    "text": "collector itself",
    "start": "468720",
    "end": "470720"
  },
  {
    "text": "there's also a notion of extensions it's",
    "start": "470720",
    "end": "472400"
  },
  {
    "text": "just a way of typically doing health",
    "start": "472400",
    "end": "473840"
  },
  {
    "text": "tech",
    "start": "473840",
    "end": "474319"
  },
  {
    "text": "health checks and profiling but it's",
    "start": "474319",
    "end": "476400"
  },
  {
    "text": "also a way of handling things that might",
    "start": "476400",
    "end": "478879"
  },
  {
    "text": "be outside typical data flows",
    "start": "478879",
    "end": "480879"
  },
  {
    "text": "for the telemetry data that you're",
    "start": "480879",
    "end": "482080"
  },
  {
    "text": "collecting now the collector actually",
    "start": "482080",
    "end": "484720"
  },
  {
    "start": "483000",
    "end": "483000"
  },
  {
    "text": "has",
    "start": "484720",
    "end": "485120"
  },
  {
    "text": "what's known as the core repository as",
    "start": "485120",
    "end": "487120"
  },
  {
    "text": "well as a contrib repository",
    "start": "487120",
    "end": "489039"
  },
  {
    "text": "in core you have all the open source",
    "start": "489039",
    "end": "491120"
  },
  {
    "text": "aspects and as you can see here it's",
    "start": "491120",
    "end": "492720"
  },
  {
    "text": "pretty broad support for both traces and",
    "start": "492720",
    "end": "494879"
  },
  {
    "text": "metrics",
    "start": "494879",
    "end": "495759"
  },
  {
    "text": "in the case of open telemetry logging is",
    "start": "495759",
    "end": "497520"
  },
  {
    "text": "just starting to pick up so eventually",
    "start": "497520",
    "end": "499360"
  },
  {
    "text": "logging will be added as well",
    "start": "499360",
    "end": "500720"
  },
  {
    "text": "to both client libraries and the",
    "start": "500720",
    "end": "502160"
  },
  {
    "text": "collector but it's still early for that",
    "start": "502160",
    "end": "504240"
  },
  {
    "text": "the expectation is that they'll probably",
    "start": "504240",
    "end": "505680"
  },
  {
    "text": "be a beta later",
    "start": "505680",
    "end": "506639"
  },
  {
    "text": "this year for it in the case of contrib",
    "start": "506639",
    "end": "509680"
  },
  {
    "start": "509000",
    "end": "509000"
  },
  {
    "text": "these are more community-based",
    "start": "509680",
    "end": "511599"
  },
  {
    "text": "so this could be vendor-specific logic",
    "start": "511599",
    "end": "513919"
  },
  {
    "text": "or it could even be open source software",
    "start": "513919",
    "end": "515919"
  },
  {
    "text": "that only",
    "start": "515919",
    "end": "516560"
  },
  {
    "text": "applies to a smaller subset of the the",
    "start": "516560",
    "end": "518959"
  },
  {
    "text": "user base of open telemetry",
    "start": "518959",
    "end": "520719"
  },
  {
    "text": "but it's a way of adding things that are",
    "start": "520719",
    "end": "523039"
  },
  {
    "text": "outside the core functionality of open",
    "start": "523039",
    "end": "525279"
  },
  {
    "text": "telemetry as a whole",
    "start": "525279",
    "end": "526880"
  },
  {
    "text": "again you can see pretty rich adoption",
    "start": "526880",
    "end": "529279"
  },
  {
    "text": "here",
    "start": "529279",
    "end": "530000"
  },
  {
    "text": "in fact in general two of the three",
    "start": "530000",
    "end": "532160"
  },
  {
    "text": "major cloud providers",
    "start": "532160",
    "end": "533440"
  },
  {
    "text": "aws uh sorry azure and jcp are already",
    "start": "533440",
    "end": "536399"
  },
  {
    "text": "instrumenting the backend services",
    "start": "536399",
    "end": "538000"
  },
  {
    "text": "aws is just getting involved right now",
    "start": "538000",
    "end": "539920"
  },
  {
    "text": "as well with the project",
    "start": "539920",
    "end": "541440"
  },
  {
    "text": "all the major vendors are also",
    "start": "541440",
    "end": "543120"
  },
  {
    "text": "contributing at least exporters if not",
    "start": "543120",
    "end": "545120"
  },
  {
    "text": "other aspects to the project",
    "start": "545120",
    "end": "546640"
  },
  {
    "text": "and you're also seeing broad adoption",
    "start": "546640",
    "end": "548399"
  },
  {
    "text": "and support from many",
    "start": "548399",
    "end": "549760"
  },
  {
    "text": "end users as well with that i'd like to",
    "start": "549760",
    "end": "553120"
  },
  {
    "text": "turn it over to trash and he can tell",
    "start": "553120",
    "end": "554320"
  },
  {
    "text": "you a little bit more about java auto",
    "start": "554320",
    "end": "558320"
  },
  {
    "start": "558000",
    "end": "558000"
  },
  {
    "text": "instrumentation",
    "start": "560839",
    "end": "563839"
  },
  {
    "text": "sorry was muted uh",
    "start": "570000",
    "end": "573200"
  },
  {
    "text": "all right so uh the goal of auto",
    "start": "573200",
    "end": "576000"
  },
  {
    "text": "instrumentation",
    "start": "576000",
    "end": "577200"
  },
  {
    "text": "is to give you as much insight into your",
    "start": "577200",
    "end": "581040"
  },
  {
    "text": "production system",
    "start": "581040",
    "end": "582320"
  },
  {
    "text": "as possible with the minimum amount of",
    "start": "582320",
    "end": "585120"
  },
  {
    "text": "effort",
    "start": "585120",
    "end": "585600"
  },
  {
    "text": "so is to get you up and going and",
    "start": "585600",
    "end": "588560"
  },
  {
    "text": "starting to see what's happening in your",
    "start": "588560",
    "end": "590240"
  },
  {
    "text": "app",
    "start": "590240",
    "end": "592480"
  },
  {
    "text": "in the case of java",
    "start": "592480",
    "end": "595760"
  },
  {
    "text": "and to enable the open telemetry java",
    "start": "595760",
    "end": "598560"
  },
  {
    "text": "auto instrumentation",
    "start": "598560",
    "end": "600240"
  },
  {
    "text": "you just need to add this java agent",
    "start": "600240",
    "end": "603600"
  },
  {
    "text": "command",
    "start": "603600",
    "end": "604079"
  },
  {
    "text": "line arg to for example all of your",
    "start": "604079",
    "end": "606680"
  },
  {
    "text": "microservices",
    "start": "606680",
    "end": "609040"
  },
  {
    "text": "and maybe an environment variable to",
    "start": "609040",
    "end": "611519"
  },
  {
    "text": "tell them where to send the data to",
    "start": "611519",
    "end": "614079"
  },
  {
    "text": "as steve mentioned before by default it",
    "start": "614079",
    "end": "616720"
  },
  {
    "text": "will send to the",
    "start": "616720",
    "end": "618320"
  },
  {
    "text": "agent the collector agent that's running",
    "start": "618320",
    "end": "621120"
  },
  {
    "text": "loc if you're running that locally",
    "start": "621120",
    "end": "624240"
  },
  {
    "text": "and just with that minimum amount of",
    "start": "624240",
    "end": "627600"
  },
  {
    "text": "effort",
    "start": "627600",
    "end": "628480"
  },
  {
    "text": "you get this beautiful distributed trace",
    "start": "628480",
    "end": "631519"
  },
  {
    "text": "flow picture in your back end monitoring",
    "start": "631519",
    "end": "634480"
  },
  {
    "text": "system",
    "start": "634480",
    "end": "636079"
  },
  {
    "text": "in this case it's a screenshot from",
    "start": "636079",
    "end": "638399"
  },
  {
    "text": "jager",
    "start": "638399",
    "end": "640000"
  },
  {
    "text": "which is another cncf project",
    "start": "640000",
    "end": "644079"
  },
  {
    "text": "and so yeah so you get",
    "start": "644120",
    "end": "647760"
  },
  {
    "text": "a lot of visibility so",
    "start": "647760",
    "end": "651040"
  },
  {
    "text": "i did want to mention what we're doing",
    "start": "651040",
    "end": "652480"
  },
  {
    "text": "in the open telemetry",
    "start": "652480",
    "end": "654160"
  },
  {
    "text": "uh java auto instrumentation project is",
    "start": "654160",
    "end": "657120"
  },
  {
    "text": "not",
    "start": "657120",
    "end": "657440"
  },
  {
    "text": "new um the java ecosystem",
    "start": "657440",
    "end": "661279"
  },
  {
    "text": "has a rich history of codeless",
    "start": "661279",
    "end": "663760"
  },
  {
    "text": "monitoring solutions",
    "start": "663760",
    "end": "667120"
  },
  {
    "text": "we've had commercial monitoring",
    "start": "668000",
    "end": "672240"
  },
  {
    "text": "tools doing codeless monitoring",
    "start": "672240",
    "end": "675839"
  },
  {
    "text": "for a long time",
    "start": "675839",
    "end": "679279"
  },
  {
    "text": "we have open source monitoring",
    "start": "679440",
    "end": "682880"
  },
  {
    "text": "systems doing codeless monitoring",
    "start": "682880",
    "end": "686240"
  },
  {
    "text": "for at least 10 years",
    "start": "686240",
    "end": "689519"
  },
  {
    "text": "and more recently some commercial",
    "start": "689519",
    "end": "691839"
  },
  {
    "text": "monitoring tools",
    "start": "691839",
    "end": "693279"
  },
  {
    "text": "have been open sourcing their java",
    "start": "693279",
    "end": "695040"
  },
  {
    "text": "agents",
    "start": "695040",
    "end": "696720"
  },
  {
    "text": "which has been really great because uh i",
    "start": "696720",
    "end": "699360"
  },
  {
    "text": "like to have access to",
    "start": "699360",
    "end": "700959"
  },
  {
    "text": "all the source code of any library or",
    "start": "700959",
    "end": "704000"
  },
  {
    "text": "agent that's running in",
    "start": "704000",
    "end": "705279"
  },
  {
    "text": "my production system and i imagine i'm",
    "start": "705279",
    "end": "708560"
  },
  {
    "text": "not",
    "start": "708560",
    "end": "709200"
  },
  {
    "text": "super unique in that way",
    "start": "709200",
    "end": "712240"
  },
  {
    "text": "and and a special call out here to",
    "start": "712240",
    "end": "714839"
  },
  {
    "text": "datadog who",
    "start": "714839",
    "end": "716240"
  },
  {
    "text": "donated their open source java agent to",
    "start": "716240",
    "end": "719040"
  },
  {
    "text": "open telemetry as the starting point for",
    "start": "719040",
    "end": "721839"
  },
  {
    "text": "our work in this community",
    "start": "721839",
    "end": "725040"
  },
  {
    "text": "and lastly i'd be uh",
    "start": "725040",
    "end": "728079"
  },
  {
    "text": "remiss not to mention a couple of open",
    "start": "728079",
    "end": "730079"
  },
  {
    "text": "source libraries that",
    "start": "730079",
    "end": "731760"
  },
  {
    "text": "make this uh auto instrumentation",
    "start": "731760",
    "end": "734800"
  },
  {
    "text": "bytecode instrumentation possible in the",
    "start": "734800",
    "end": "737200"
  },
  {
    "text": "java world",
    "start": "737200",
    "end": "738639"
  },
  {
    "text": "um asm a low level bytecode",
    "start": "738639",
    "end": "741519"
  },
  {
    "text": "instrumentation",
    "start": "741519",
    "end": "742800"
  },
  {
    "text": "library that's been around forever and",
    "start": "742800",
    "end": "745920"
  },
  {
    "text": "uh bite buddy a higher level bytecode",
    "start": "745920",
    "end": "749440"
  },
  {
    "text": "instrumentation library built on top of",
    "start": "749440",
    "end": "751360"
  },
  {
    "text": "asm",
    "start": "751360",
    "end": "752800"
  },
  {
    "text": "that has been around the last few years",
    "start": "752800",
    "end": "755360"
  },
  {
    "text": "and",
    "start": "755360",
    "end": "756399"
  },
  {
    "text": "been widely adopted by most of these",
    "start": "756399",
    "end": "759360"
  },
  {
    "text": "types of",
    "start": "759360",
    "end": "760160"
  },
  {
    "text": "auto instrumentation projects",
    "start": "760160",
    "end": "764240"
  },
  {
    "start": "764000",
    "end": "764000"
  },
  {
    "text": "so that brings us to uh",
    "start": "764240",
    "end": "767360"
  },
  {
    "text": "open telemetry the open telemetry java",
    "start": "767360",
    "end": "770639"
  },
  {
    "text": "auto instrumentation project and um",
    "start": "770639",
    "end": "773620"
  },
  {
    "text": "[Music]",
    "start": "773620",
    "end": "776480"
  },
  {
    "text": "it is really i see it as a community",
    "start": "776480",
    "end": "779120"
  },
  {
    "text": "dedicated to building",
    "start": "779120",
    "end": "780560"
  },
  {
    "text": "and maintaining vendor neutral java",
    "start": "780560",
    "end": "784839"
  },
  {
    "text": "instrumentation and",
    "start": "784839",
    "end": "788480"
  },
  {
    "text": "also another important aspect of the",
    "start": "788480",
    "end": "791440"
  },
  {
    "text": "work",
    "start": "791440",
    "end": "792000"
  },
  {
    "text": "is working across",
    "start": "792000",
    "end": "795360"
  },
  {
    "text": "working with other open telemetry",
    "start": "795360",
    "end": "797040"
  },
  {
    "text": "communities",
    "start": "797040",
    "end": "798560"
  },
  {
    "text": "other language communities to provide",
    "start": "798560",
    "end": "801360"
  },
  {
    "text": "consistent telemetry",
    "start": "801360",
    "end": "802800"
  },
  {
    "text": "across uh different programming",
    "start": "802800",
    "end": "804959"
  },
  {
    "text": "languages",
    "start": "804959",
    "end": "806320"
  },
  {
    "text": "um so in that way i i think is sort of",
    "start": "806320",
    "end": "810160"
  },
  {
    "text": "the",
    "start": "810160",
    "end": "810800"
  },
  {
    "text": "unique the new thing that the open",
    "start": "810800",
    "end": "813519"
  },
  {
    "text": "telemetry communities are bringing",
    "start": "813519",
    "end": "815519"
  },
  {
    "text": "to this evolution of java auto",
    "start": "815519",
    "end": "818959"
  },
  {
    "text": "instrumentation",
    "start": "818959",
    "end": "820720"
  },
  {
    "text": "and while we've been focused on tracing",
    "start": "820720",
    "end": "823440"
  },
  {
    "text": "so far",
    "start": "823440",
    "end": "825279"
  },
  {
    "text": "definitely we are",
    "start": "825279",
    "end": "828720"
  },
  {
    "text": "working towards having metric support",
    "start": "828720",
    "end": "831600"
  },
  {
    "text": "and then as steve mentioned in the",
    "start": "831600",
    "end": "833360"
  },
  {
    "text": "future",
    "start": "833360",
    "end": "833839"
  },
  {
    "text": "also logging capture",
    "start": "833839",
    "end": "837360"
  },
  {
    "text": "with the same infrastructure",
    "start": "837360",
    "end": "843519"
  },
  {
    "text": "um so this is the list of um all of the",
    "start": "843519",
    "end": "846800"
  },
  {
    "text": "instrumentation all of the java",
    "start": "846800",
    "end": "848720"
  },
  {
    "text": "libraries that",
    "start": "848720",
    "end": "850240"
  },
  {
    "text": "we have instrumentation for so far and",
    "start": "850240",
    "end": "853600"
  },
  {
    "text": "so with auto instrumentation um",
    "start": "853600",
    "end": "856639"
  },
  {
    "text": "it's uh important to so if you are using",
    "start": "856639",
    "end": "860320"
  },
  {
    "text": "these particular libraries",
    "start": "860320",
    "end": "862959"
  },
  {
    "text": "we will instrument those at runtime via",
    "start": "862959",
    "end": "865600"
  },
  {
    "text": "the java agent",
    "start": "865600",
    "end": "866560"
  },
  {
    "text": "and capture the calls the requests",
    "start": "866560",
    "end": "868560"
  },
  {
    "text": "coming into those libraries the calls",
    "start": "868560",
    "end": "870320"
  },
  {
    "text": "going out of those libraries what your",
    "start": "870320",
    "end": "872720"
  },
  {
    "text": "jdbc sql calls look like",
    "start": "872720",
    "end": "876480"
  },
  {
    "text": "and so this is where",
    "start": "876480",
    "end": "880160"
  },
  {
    "text": "we really think that the the power of",
    "start": "880160",
    "end": "882320"
  },
  {
    "text": "the community coming together",
    "start": "882320",
    "end": "884959"
  },
  {
    "text": "can grow this list over time",
    "start": "884959",
    "end": "888399"
  },
  {
    "text": "supporting you know as new versions come",
    "start": "888399",
    "end": "890720"
  },
  {
    "text": "out supporting new versions so the more",
    "start": "890720",
    "end": "893120"
  },
  {
    "text": "people we have the more vendors the more",
    "start": "893120",
    "end": "896240"
  },
  {
    "text": "community members who are all working",
    "start": "896240",
    "end": "899360"
  },
  {
    "text": "on this common auto instrumentation um",
    "start": "899360",
    "end": "902800"
  },
  {
    "text": "the more uh support that",
    "start": "902800",
    "end": "906320"
  },
  {
    "text": "java the java users will",
    "start": "906320",
    "end": "909360"
  },
  {
    "text": "get automatically out of the box",
    "start": "909360",
    "end": "913839"
  },
  {
    "start": "913000",
    "end": "913000"
  },
  {
    "text": "so one question you might be asking is",
    "start": "914880",
    "end": "918320"
  },
  {
    "text": "you know auto instrumentation is great",
    "start": "918320",
    "end": "920480"
  },
  {
    "text": "but what if i want",
    "start": "920480",
    "end": "921920"
  },
  {
    "text": "custom telemetry also",
    "start": "921920",
    "end": "925360"
  },
  {
    "text": "um and so i like to recommend starting",
    "start": "925360",
    "end": "928560"
  },
  {
    "text": "with",
    "start": "928560",
    "end": "929199"
  },
  {
    "text": "just auto instrumentation out of the box",
    "start": "929199",
    "end": "932079"
  },
  {
    "text": "try it out",
    "start": "932079",
    "end": "933199"
  },
  {
    "text": "that way you can start uh you know",
    "start": "933199",
    "end": "935759"
  },
  {
    "text": "seeing",
    "start": "935759",
    "end": "936240"
  },
  {
    "text": "telemetry flow to your back-end",
    "start": "936240",
    "end": "938320"
  },
  {
    "text": "monitoring system",
    "start": "938320",
    "end": "940079"
  },
  {
    "text": "and then you can start to layer",
    "start": "940079",
    "end": "943440"
  },
  {
    "text": "in custom telemetry on top of that",
    "start": "943440",
    "end": "948320"
  },
  {
    "text": "or inside of that so depending on the",
    "start": "948320",
    "end": "951759"
  },
  {
    "text": "complexity of your needs there's a",
    "start": "951759",
    "end": "954160"
  },
  {
    "text": "couple of different ways to",
    "start": "954160",
    "end": "956160"
  },
  {
    "text": "add um add custom telemetry into your",
    "start": "956160",
    "end": "960000"
  },
  {
    "text": "application",
    "start": "960000",
    "end": "961440"
  },
  {
    "text": "um as well as i mean the the for the",
    "start": "961440",
    "end": "964480"
  },
  {
    "text": "open telemetry api",
    "start": "964480",
    "end": "966320"
  },
  {
    "text": "is a full-blown telemetry api and",
    "start": "966320",
    "end": "969839"
  },
  {
    "text": "the auto instrumentation um auto",
    "start": "969839",
    "end": "973199"
  },
  {
    "text": "correlates captures and autocorrelates",
    "start": "973199",
    "end": "975279"
  },
  {
    "text": "everything that's coming from the open",
    "start": "975279",
    "end": "976959"
  },
  {
    "text": "telemetry api",
    "start": "976959",
    "end": "978560"
  },
  {
    "text": "so those two projects uh uh blend really",
    "start": "978560",
    "end": "982160"
  },
  {
    "text": "nicely together",
    "start": "982160",
    "end": "985120"
  },
  {
    "text": "and uh for sure more auto",
    "start": "985199",
    "end": "988560"
  },
  {
    "text": "instrumentation",
    "start": "988560",
    "end": "990079"
  },
  {
    "text": "customization hooks coming for",
    "start": "990079",
    "end": "993759"
  },
  {
    "text": "as we run into you know as community",
    "start": "993759",
    "end": "997360"
  },
  {
    "text": "members",
    "start": "997360",
    "end": "998399"
  },
  {
    "text": "bring new use cases things that um",
    "start": "998399",
    "end": "1002000"
  },
  {
    "text": "so we look forward to growing this",
    "start": "1002000",
    "end": "1004240"
  },
  {
    "text": "project and um",
    "start": "1004240",
    "end": "1005839"
  },
  {
    "text": "uh yeah hearing from everybody",
    "start": "1005839",
    "end": "1011680"
  },
  {
    "start": "1011000",
    "end": "1011000"
  },
  {
    "text": "um so i wanted to end here with um uh",
    "start": "1011680",
    "end": "1015360"
  },
  {
    "text": "i think my favorite thing about uh the",
    "start": "1015360",
    "end": "1017839"
  },
  {
    "text": "uh or at least one of my favorite things",
    "start": "1017839",
    "end": "1019680"
  },
  {
    "text": "about this",
    "start": "1019680",
    "end": "1020720"
  },
  {
    "text": "project is that you can take all of this",
    "start": "1020720",
    "end": "1023920"
  },
  {
    "text": "great auto instrumentation",
    "start": "1023920",
    "end": "1026000"
  },
  {
    "text": "and and your custom telemetry too um",
    "start": "1026000",
    "end": "1029120"
  },
  {
    "text": "to the back end monitoring system of",
    "start": "1029120",
    "end": "1031199"
  },
  {
    "text": "your choice",
    "start": "1031199",
    "end": "1032480"
  },
  {
    "text": "um so this way the this community is",
    "start": "1032480",
    "end": "1035280"
  },
  {
    "text": "really focused",
    "start": "1035280",
    "end": "1036240"
  },
  {
    "text": "like uh steve mentioned on the",
    "start": "1036240",
    "end": "1039280"
  },
  {
    "text": "gathering side not the back end",
    "start": "1039280",
    "end": "1041199"
  },
  {
    "text": "monitoring side",
    "start": "1041199",
    "end": "1042959"
  },
  {
    "text": "so we can really focus on having uh",
    "start": "1042959",
    "end": "1045760"
  },
  {
    "text": "really",
    "start": "1045760",
    "end": "1046319"
  },
  {
    "text": "great auto instrumentation really great",
    "start": "1046319",
    "end": "1048558"
  },
  {
    "text": "library instrumentation",
    "start": "1048559",
    "end": "1050480"
  },
  {
    "text": "and then the back end monitoring sys",
    "start": "1050480",
    "end": "1053120"
  },
  {
    "text": "systems",
    "start": "1053120",
    "end": "1054000"
  },
  {
    "text": "vendors open source solutions um just",
    "start": "1054000",
    "end": "1057120"
  },
  {
    "text": "need to",
    "start": "1057120",
    "end": "1058160"
  },
  {
    "text": "provide their exporter for open",
    "start": "1058160",
    "end": "1060240"
  },
  {
    "text": "telemetry",
    "start": "1060240",
    "end": "1061840"
  },
  {
    "text": "and that can either be directly for",
    "start": "1061840",
    "end": "1064400"
  },
  {
    "text": "example on the java side you can have a",
    "start": "1064400",
    "end": "1066240"
  },
  {
    "text": "java exporter",
    "start": "1066240",
    "end": "1067760"
  },
  {
    "text": "that sends directly to your back-end",
    "start": "1067760",
    "end": "1070480"
  },
  {
    "text": "monitoring system or",
    "start": "1070480",
    "end": "1072960"
  },
  {
    "text": "if you're going through the collector",
    "start": "1072960",
    "end": "1074480"
  },
  {
    "text": "that steve talked about",
    "start": "1074480",
    "end": "1076240"
  },
  {
    "text": "the back-end monitoring systems they",
    "start": "1076240",
    "end": "1078640"
  },
  {
    "text": "only have to write their exporter once",
    "start": "1078640",
    "end": "1081039"
  },
  {
    "text": "for the collector and then the java auto",
    "start": "1081039",
    "end": "1084400"
  },
  {
    "text": "instrumentation",
    "start": "1084400",
    "end": "1085280"
  },
  {
    "text": "flows um to that back-end system same",
    "start": "1085280",
    "end": "1088400"
  },
  {
    "text": "with other language",
    "start": "1088400",
    "end": "1089679"
  },
  {
    "text": "instrumentations",
    "start": "1089679",
    "end": "1092640"
  },
  {
    "start": "1093000",
    "end": "1093000"
  },
  {
    "text": "and uh speaking of other languages um so",
    "start": "1093679",
    "end": "1097120"
  },
  {
    "text": "auto instrumentation is um",
    "start": "1097120",
    "end": "1100160"
  },
  {
    "text": "um growing um we've got a javascript",
    "start": "1100160",
    "end": "1104080"
  },
  {
    "text": "community",
    "start": "1104080",
    "end": "1105200"
  },
  {
    "text": "python community ruby community and",
    "start": "1105200",
    "end": "1108320"
  },
  {
    "text": "uh dotnet as just getting going",
    "start": "1108320",
    "end": "1111840"
  },
  {
    "text": "so um this is a the instrumentation",
    "start": "1111840",
    "end": "1115600"
  },
  {
    "text": "is a great way to get involved in the",
    "start": "1115600",
    "end": "1118000"
  },
  {
    "text": "community because um",
    "start": "1118000",
    "end": "1119520"
  },
  {
    "text": "you know you can take your favorite",
    "start": "1119520",
    "end": "1120799"
  },
  {
    "text": "language your favorite library",
    "start": "1120799",
    "end": "1123679"
  },
  {
    "text": "and go and see how you can uh contribute",
    "start": "1123679",
    "end": "1127360"
  },
  {
    "text": "uh instrumentation for that particular",
    "start": "1127360",
    "end": "1129679"
  },
  {
    "text": "library",
    "start": "1129679",
    "end": "1131200"
  },
  {
    "text": "if your favorite library and language is",
    "start": "1131200",
    "end": "1134000"
  },
  {
    "text": "already uh",
    "start": "1134000",
    "end": "1135039"
  },
  {
    "text": "instrumented go and test that out see if",
    "start": "1135039",
    "end": "1137919"
  },
  {
    "text": "it works the way you would expect",
    "start": "1137919",
    "end": "1139520"
  },
  {
    "text": "as an expert in that library and let us",
    "start": "1139520",
    "end": "1141919"
  },
  {
    "text": "know if we got something wrong",
    "start": "1141919",
    "end": "1144400"
  },
  {
    "text": "so again that's a great way to get get",
    "start": "1144400",
    "end": "1147600"
  },
  {
    "text": "started in the community",
    "start": "1147600",
    "end": "1151840"
  },
  {
    "text": "cool and next up we will do a quick demo",
    "start": "1155120",
    "end": "1157679"
  },
  {
    "text": "to kind of show you how to get started",
    "start": "1157679",
    "end": "1159200"
  },
  {
    "text": "with both",
    "start": "1159200",
    "end": "1159919"
  },
  {
    "text": "java auto instrumentation as well as the",
    "start": "1159919",
    "end": "1162640"
  },
  {
    "text": "open symmetry collector",
    "start": "1162640",
    "end": "1164640"
  },
  {
    "text": "so to kick us off here i'm actually",
    "start": "1164640",
    "end": "1166080"
  },
  {
    "text": "going to start up a docker compose file",
    "start": "1166080",
    "end": "1169200"
  },
  {
    "text": "and while it is booting up i'll walk you",
    "start": "1169200",
    "end": "1171200"
  },
  {
    "text": "through exactly what it's doing",
    "start": "1171200",
    "end": "1173360"
  },
  {
    "text": "so what i've done is i've taken the",
    "start": "1173360",
    "end": "1175360"
  },
  {
    "text": "spring pet clinic micro services",
    "start": "1175360",
    "end": "1177600"
  },
  {
    "text": "repository and it actually contains a",
    "start": "1177600",
    "end": "1179440"
  },
  {
    "text": "docker compose file",
    "start": "1179440",
    "end": "1180960"
  },
  {
    "text": "made up of multiple java microservices",
    "start": "1180960",
    "end": "1184080"
  },
  {
    "text": "is kind of outlined in this architecture",
    "start": "1184080",
    "end": "1186960"
  },
  {
    "text": "diagram that you see here",
    "start": "1186960",
    "end": "1188480"
  },
  {
    "text": "so it's going to spin up a variety of",
    "start": "1188480",
    "end": "1190080"
  },
  {
    "text": "different containers",
    "start": "1190080",
    "end": "1191520"
  },
  {
    "text": "and what we've done is actually modified",
    "start": "1191520",
    "end": "1193760"
  },
  {
    "text": "it to",
    "start": "1193760",
    "end": "1194640"
  },
  {
    "text": "add open symmetry java auto",
    "start": "1194640",
    "end": "1196640"
  },
  {
    "text": "instrumentation into it",
    "start": "1196640",
    "end": "1198000"
  },
  {
    "text": "have it sent to an open symmetry",
    "start": "1198000",
    "end": "1199440"
  },
  {
    "text": "collector and have it forward that data",
    "start": "1199440",
    "end": "1201600"
  },
  {
    "text": "to a zip conserver so we can actually",
    "start": "1201600",
    "end": "1203360"
  },
  {
    "text": "see it on",
    "start": "1203360",
    "end": "1204159"
  },
  {
    "text": "the other end so from a",
    "start": "1204159",
    "end": "1207679"
  },
  {
    "text": "diff perspective basically what we did",
    "start": "1207679",
    "end": "1209760"
  },
  {
    "text": "is add a collector.yaml file",
    "start": "1209760",
    "end": "1212240"
  },
  {
    "text": "so you actually configure the",
    "start": "1212240",
    "end": "1213360"
  },
  {
    "text": "opencylindry collector through yaml",
    "start": "1213360",
    "end": "1215760"
  },
  {
    "text": "and here you'll see that we have",
    "start": "1215760",
    "end": "1217760"
  },
  {
    "text": "configured a receiver",
    "start": "1217760",
    "end": "1219520"
  },
  {
    "text": "basically the otop1 which is the default",
    "start": "1219520",
    "end": "1222000"
  },
  {
    "text": "one that java auto instrumentation will",
    "start": "1222000",
    "end": "1224240"
  },
  {
    "text": "send data out as",
    "start": "1224240",
    "end": "1225919"
  },
  {
    "text": "so we're just receiving over otop and",
    "start": "1225919",
    "end": "1228640"
  },
  {
    "text": "then we",
    "start": "1228640",
    "end": "1229360"
  },
  {
    "text": "are going to export to a zipkin endpoint",
    "start": "1229360",
    "end": "1232960"
  },
  {
    "text": "that is a different docker file that is",
    "start": "1232960",
    "end": "1235200"
  },
  {
    "text": "running inside of this microservices",
    "start": "1235200",
    "end": "1237600"
  },
  {
    "text": "based",
    "start": "1237600",
    "end": "1238080"
  },
  {
    "text": "architecture so that's just a one-time",
    "start": "1238080",
    "end": "1240400"
  },
  {
    "text": "config for the collector again if i want",
    "start": "1240400",
    "end": "1242240"
  },
  {
    "text": "to add different processors i can go",
    "start": "1242240",
    "end": "1243919"
  },
  {
    "text": "ahead and do that here in this case it's",
    "start": "1243919",
    "end": "1245760"
  },
  {
    "text": "just a pretty standard configuration",
    "start": "1245760",
    "end": "1248799"
  },
  {
    "text": "next up we went through the docker",
    "start": "1248799",
    "end": "1250559"
  },
  {
    "text": "compose file and as trust mentioned you",
    "start": "1250559",
    "end": "1253280"
  },
  {
    "text": "basically just add this java agent flag",
    "start": "1253280",
    "end": "1255679"
  },
  {
    "text": "so you have to go ahead and tell it",
    "start": "1255679",
    "end": "1257360"
  },
  {
    "text": "where the jar is for the open symmetry",
    "start": "1257360",
    "end": "1260240"
  },
  {
    "text": "java agent and then uh specify",
    "start": "1260240",
    "end": "1263440"
  },
  {
    "text": "what the service name is so we also set",
    "start": "1263440",
    "end": "1265440"
  },
  {
    "text": "an environmental variable",
    "start": "1265440",
    "end": "1267200"
  },
  {
    "text": "so for each of the docker containers we",
    "start": "1267200",
    "end": "1269600"
  },
  {
    "text": "added that java agent flag",
    "start": "1269600",
    "end": "1271440"
  },
  {
    "text": "and we added the environmental variable",
    "start": "1271440",
    "end": "1273600"
  },
  {
    "text": "so that we'd see these as different java",
    "start": "1273600",
    "end": "1275760"
  },
  {
    "text": "services",
    "start": "1275760",
    "end": "1276799"
  },
  {
    "text": "in our waterfall view or service graph",
    "start": "1276799",
    "end": "1279120"
  },
  {
    "text": "depending on the backend that we are",
    "start": "1279120",
    "end": "1280799"
  },
  {
    "text": "using",
    "start": "1280799",
    "end": "1281760"
  },
  {
    "text": "so you can see that for all the",
    "start": "1281760",
    "end": "1282880"
  },
  {
    "text": "different docker containers",
    "start": "1282880",
    "end": "1284880"
  },
  {
    "text": "and we added the open symmetry collector",
    "start": "1284880",
    "end": "1286799"
  },
  {
    "text": "as another docker container that gets",
    "start": "1286799",
    "end": "1288640"
  },
  {
    "text": "fired up into this docker compose",
    "start": "1288640",
    "end": "1290559"
  },
  {
    "text": "it uses the collector.yaml file that we",
    "start": "1290559",
    "end": "1292720"
  },
  {
    "text": "just showed at the beginning",
    "start": "1292720",
    "end": "1294240"
  },
  {
    "text": "and the only final thing is that all the",
    "start": "1294240",
    "end": "1296000"
  },
  {
    "text": "docker cont containers that you're",
    "start": "1296000",
    "end": "1297840"
  },
  {
    "text": "seeing in the docker compose",
    "start": "1297840",
    "end": "1299919"
  },
  {
    "text": "actually get generated through this",
    "start": "1299919",
    "end": "1301760"
  },
  {
    "text": "docker file at the end",
    "start": "1301760",
    "end": "1303120"
  },
  {
    "text": "where we have to tell it to go grab the",
    "start": "1303120",
    "end": "1305520"
  },
  {
    "text": "open symmetry java agent jar",
    "start": "1305520",
    "end": "1307679"
  },
  {
    "text": "based on the latest version that's",
    "start": "1307679",
    "end": "1308960"
  },
  {
    "text": "available in the open telemetry",
    "start": "1308960",
    "end": "1310799"
  },
  {
    "text": "repository today",
    "start": "1310799",
    "end": "1312559"
  },
  {
    "text": "so that's really the only changes here",
    "start": "1312559",
    "end": "1314240"
  },
  {
    "text": "you'll notice no java changes no",
    "start": "1314240",
    "end": "1316480"
  },
  {
    "text": "recompiling of the code",
    "start": "1316480",
    "end": "1318080"
  },
  {
    "text": "we've just pulled down this jar",
    "start": "1318080",
    "end": "1319520"
  },
  {
    "text": "specified the java agent",
    "start": "1319520",
    "end": "1321280"
  },
  {
    "text": "set the service through an environmental",
    "start": "1321280",
    "end": "1322880"
  },
  {
    "text": "variable and deployed the open symmetry",
    "start": "1322880",
    "end": "1325039"
  },
  {
    "text": "collector",
    "start": "1325039",
    "end": "1325840"
  },
  {
    "text": "and the net result should be that we see",
    "start": "1325840",
    "end": "1327760"
  },
  {
    "text": "telemetry data coming through",
    "start": "1327760",
    "end": "1329440"
  },
  {
    "text": "our system so let's go ahead and see if",
    "start": "1329440",
    "end": "1332640"
  },
  {
    "text": "that's happening",
    "start": "1332640",
    "end": "1333600"
  },
  {
    "text": "so we are in a zipkin here we'll go",
    "start": "1333600",
    "end": "1336080"
  },
  {
    "text": "ahead and look at the service name",
    "start": "1336080",
    "end": "1337760"
  },
  {
    "text": "and you can see that services are",
    "start": "1337760",
    "end": "1340080"
  },
  {
    "text": "starting to appear already",
    "start": "1340080",
    "end": "1341840"
  },
  {
    "text": "we can go ahead and look for individual",
    "start": "1341840",
    "end": "1344080"
  },
  {
    "text": "traces and you can see the traces",
    "start": "1344080",
    "end": "1346000"
  },
  {
    "text": "are starting to come into the system so",
    "start": "1346000",
    "end": "1348240"
  },
  {
    "text": "here we have a discovery",
    "start": "1348240",
    "end": "1350000"
  },
  {
    "text": "server or service that's calling a",
    "start": "1350000",
    "end": "1351919"
  },
  {
    "text": "config service",
    "start": "1351919",
    "end": "1353120"
  },
  {
    "text": "you can see that this is actually using",
    "start": "1353120",
    "end": "1354799"
  },
  {
    "text": "the open telemetry sdk",
    "start": "1354799",
    "end": "1356799"
  },
  {
    "text": "and we actually get some semantic",
    "start": "1356799",
    "end": "1359280"
  },
  {
    "text": "conventions and metadata automatically",
    "start": "1359280",
    "end": "1361679"
  },
  {
    "text": "uh provided for us so you can see this",
    "start": "1361679",
    "end": "1363760"
  },
  {
    "text": "is restful services we can see the",
    "start": "1363760",
    "end": "1365520"
  },
  {
    "text": "status code",
    "start": "1365520",
    "end": "1366400"
  },
  {
    "text": "we can see which methods being used so",
    "start": "1366400",
    "end": "1369120"
  },
  {
    "text": "again some pretty rich information",
    "start": "1369120",
    "end": "1370960"
  },
  {
    "text": "if there were errors like 400 500 level",
    "start": "1370960",
    "end": "1373200"
  },
  {
    "text": "errors they would also",
    "start": "1373200",
    "end": "1374320"
  },
  {
    "text": "show up here and as the app gets hit",
    "start": "1374320",
    "end": "1377120"
  },
  {
    "text": "more",
    "start": "1377120",
    "end": "1377520"
  },
  {
    "text": "you'll actually see that a variety of",
    "start": "1377520",
    "end": "1379120"
  },
  {
    "text": "additional micro services will start to",
    "start": "1379120",
    "end": "1380799"
  },
  {
    "text": "show up",
    "start": "1380799",
    "end": "1381840"
  },
  {
    "text": "as you can see now we actually have",
    "start": "1381840",
    "end": "1383760"
  },
  {
    "text": "several calls coming into the system",
    "start": "1383760",
    "end": "1385679"
  },
  {
    "text": "and so each individual request no matter",
    "start": "1385679",
    "end": "1388080"
  },
  {
    "text": "which microservices it hits",
    "start": "1388080",
    "end": "1390000"
  },
  {
    "text": "it'll go ahead and generate trace data",
    "start": "1390000",
    "end": "1392320"
  },
  {
    "text": "for that",
    "start": "1392320",
    "end": "1393440"
  },
  {
    "text": "so again very simple to get started you",
    "start": "1393440",
    "end": "1396080"
  },
  {
    "text": "can take basically any java application",
    "start": "1396080",
    "end": "1398080"
  },
  {
    "text": "that's using one of the supported",
    "start": "1398080",
    "end": "1399520"
  },
  {
    "text": "libraries that trash showed earlier",
    "start": "1399520",
    "end": "1401600"
  },
  {
    "text": "go ahead and add the the jar and",
    "start": "1401600",
    "end": "1403440"
  },
  {
    "text": "collector and you can go ahead and send",
    "start": "1403440",
    "end": "1405120"
  },
  {
    "text": "this to your back end",
    "start": "1405120",
    "end": "1406159"
  },
  {
    "text": "or you can even log it locally and just",
    "start": "1406159",
    "end": "1407840"
  },
  {
    "text": "see what data is being generated",
    "start": "1407840",
    "end": "1409840"
  },
  {
    "text": "it's pretty easy to extend this like if",
    "start": "1409840",
    "end": "1411919"
  },
  {
    "text": "you want to add additional metadata you",
    "start": "1411919",
    "end": "1413600"
  },
  {
    "text": "can do that through environmental",
    "start": "1413600",
    "end": "1414960"
  },
  {
    "text": "variables",
    "start": "1414960",
    "end": "1416000"
  },
  {
    "text": "in the auto instrumentation itself or as",
    "start": "1416000",
    "end": "1418640"
  },
  {
    "text": "a configuration",
    "start": "1418640",
    "end": "1419679"
  },
  {
    "text": "addition to the open telemetry collector",
    "start": "1419679",
    "end": "1422640"
  },
  {
    "text": "quick and easy",
    "start": "1422640",
    "end": "1431360"
  },
  {
    "start": "1426000",
    "end": "1426000"
  },
  {
    "text": "yeah so um uh we're steve and i were",
    "start": "1431360",
    "end": "1435039"
  },
  {
    "text": "both",
    "start": "1435039",
    "end": "1435440"
  },
  {
    "text": "super excited to share uh the open",
    "start": "1435440",
    "end": "1437360"
  },
  {
    "text": "telemetry work that's",
    "start": "1437360",
    "end": "1439279"
  },
  {
    "text": "uh going on with the folks with new",
    "start": "1439279",
    "end": "1441840"
  },
  {
    "text": "folks",
    "start": "1441840",
    "end": "1442799"
  },
  {
    "text": "um and we would love to have you join",
    "start": "1442799",
    "end": "1446400"
  },
  {
    "text": "the uh join the conversation join in the",
    "start": "1446400",
    "end": "1449840"
  },
  {
    "text": "project whether that's as a",
    "start": "1449840",
    "end": "1453679"
  },
  {
    "text": "testing it and providing feedback",
    "start": "1453679",
    "end": "1457120"
  },
  {
    "text": "uh uh providing code",
    "start": "1457120",
    "end": "1460320"
  },
  {
    "text": "um there's a couple ways to get started",
    "start": "1460320",
    "end": "1463360"
  },
  {
    "text": "there's a couple of gitter channels",
    "start": "1463360",
    "end": "1465200"
  },
  {
    "text": "um if you post there you'll find a bunch",
    "start": "1465200",
    "end": "1467520"
  },
  {
    "text": "of a bunch of people monitor those",
    "start": "1467520",
    "end": "1470480"
  },
  {
    "text": "bunch of friendly folks join a sig",
    "start": "1470480",
    "end": "1475200"
  },
  {
    "text": "if you go to this link you can see find",
    "start": "1475200",
    "end": "1477440"
  },
  {
    "text": "your again find your favorite",
    "start": "1477440",
    "end": "1479840"
  },
  {
    "text": "programming language or your favorite",
    "start": "1479840",
    "end": "1482320"
  },
  {
    "text": "topic",
    "start": "1482320",
    "end": "1482880"
  },
  {
    "text": "like logging or metrics and there's",
    "start": "1482880",
    "end": "1486159"
  },
  {
    "text": "weekly sig meetings",
    "start": "1486159",
    "end": "1487600"
  },
  {
    "text": "and there's um and uh",
    "start": "1487600",
    "end": "1490880"
  },
  {
    "text": "yeah and like i mentioned earlier",
    "start": "1490880",
    "end": "1492880"
  },
  {
    "text": "instrumentation",
    "start": "1492880",
    "end": "1494000"
  },
  {
    "text": "is a a great way to get started",
    "start": "1494000",
    "end": "1497360"
  },
  {
    "text": "i think uh biased um",
    "start": "1497360",
    "end": "1500400"
  },
  {
    "text": "uh you know again uh take your favorite",
    "start": "1500400",
    "end": "1502720"
  },
  {
    "text": "language take your favorite libraries",
    "start": "1502720",
    "end": "1505120"
  },
  {
    "text": "go test it out if it's there and provide",
    "start": "1505120",
    "end": "1507279"
  },
  {
    "text": "feedback or",
    "start": "1507279",
    "end": "1508559"
  },
  {
    "text": "if it's not there um ask for help on",
    "start": "1508559",
    "end": "1511760"
  },
  {
    "text": "how to get started and we'd love to have",
    "start": "1511760",
    "end": "1515039"
  },
  {
    "text": "we'd love to see you",
    "start": "1515039",
    "end": "1517919"
  },
  {
    "text": "and that wraps up our talk thanks so",
    "start": "1522080",
    "end": "1524080"
  },
  {
    "text": "much for joining us",
    "start": "1524080",
    "end": "1525120"
  },
  {
    "text": "and we hope to see you involved in the",
    "start": "1525120",
    "end": "1527279"
  },
  {
    "text": "open telemetry project",
    "start": "1527279",
    "end": "1528480"
  },
  {
    "text": "soon or trying it out and providing",
    "start": "1528480",
    "end": "1531120"
  },
  {
    "text": "feedback",
    "start": "1531120",
    "end": "1532159"
  },
  {
    "text": "thanks a lot",
    "start": "1532159",
    "end": "1535679"
  }
]