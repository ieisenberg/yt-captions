[
  {
    "text": "good morning everyone so fun to see so many people here even though it's Friday and the last day of the conference so",
    "start": "199",
    "end": "7200"
  },
  {
    "text": "welcome to this presentation where we will discuss how we can use the update framework to secure your production",
    "start": "7200",
    "end": "13240"
  },
  {
    "text": "Delivery Systems so I'm Frederick skogman I work at staff engineer at GitHub uh my team",
    "start": "13240",
    "end": "20119"
  },
  {
    "text": "is primarily focusing on supply chain security and artifact integrity and I'm",
    "start": "20119",
    "end": "25199"
  },
  {
    "text": "also very active in the open source Community especially around the update framework and six",
    "start": "25199",
    "end": "32320"
  },
  {
    "text": "store yeah hello uh my name is Kyle I work at tesy sec I'm an open source",
    "start": "32360",
    "end": "39079"
  },
  {
    "text": "engineer there and um I'm author of reposar set for tough that we will",
    "start": "39079",
    "end": "44120"
  },
  {
    "text": "present today here um and also I'm maintaining the Ino AR",
    "start": "44120",
    "end": "49719"
  },
  {
    "text": "Vista and I'm I'm trying to be very active at uh the tough Community as well",
    "start": "49719",
    "end": "56000"
  },
  {
    "text": "so we're going to start now",
    "start": "56000",
    "end": "61640"
  },
  {
    "text": "so to begin with uh I would like to present uh an expiring example where",
    "start": "61640",
    "end": "66960"
  },
  {
    "text": "update framework might be something for you so usually when you think about securing the the packages from a",
    "start": "66960",
    "end": "73960"
  },
  {
    "text": "registry you might sign at the register side so the verifier can make sure that",
    "start": "73960",
    "end": "79799"
  },
  {
    "text": "the package they are getting from the package is the one expected but there are a lot of pieces missing there and I",
    "start": "79799",
    "end": "86680"
  },
  {
    "text": "think we do can do better by signing earlier off on in the stage so for instance we can sign at the time we're",
    "start": "86680",
    "end": "93200"
  },
  {
    "text": "building the package and by doing that we can also collect a lot of other important metadata about the build such",
    "start": "93200",
    "end": "100240"
  },
  {
    "text": "as which repository did you build from uh which git commit which workflow file did you use and so on like what were the",
    "start": "100240",
    "end": "106320"
  },
  {
    "text": "actual build instructions so this is typically called like the build Providence so it would be",
    "start": "106320",
    "end": "112320"
  },
  {
    "text": "preferable if we can sign not just the package but also the Bild Providence that describes everything around it and",
    "start": "112320",
    "end": "118280"
  },
  {
    "text": "Shi that to the registry and then when you're pulling down the package you can",
    "start": "118280",
    "end": "124200"
  },
  {
    "text": "pull down the the build Provence as well and and verify that but that creates",
    "start": "124200",
    "end": "129800"
  },
  {
    "text": "some challenges challenges in how you're going to manage the signing key in the cic the system it's slightly more",
    "start": "129800",
    "end": "136360"
  },
  {
    "text": "complicated than just having a registry with a single key so that's a little bit",
    "start": "136360",
    "end": "141560"
  },
  {
    "text": "how I want to talk about it and how the workload identity can be used for that so for npm we fixed this",
    "start": "141560",
    "end": "150519"
  },
  {
    "text": "um it was G8 last year I think so when you're building a package with npm you can add a flag D- Provence and we will",
    "start": "150519",
    "end": "157959"
  },
  {
    "text": "automatically collect all the context from the build and create the salsa build Providence",
    "start": "157959",
    "end": "163519"
  },
  {
    "text": "with that and sign it together with a with a package and push it to the",
    "start": "163519",
    "end": "168640"
  },
  {
    "text": "registry and this works very good for open source software because when you",
    "start": "168640",
    "end": "175480"
  },
  {
    "text": "are signing with sigstore uh as a consequence of the signing operations uh",
    "start": "175480",
    "end": "181159"
  },
  {
    "text": "a lot of information about your repository and so on will be put on a public append only Ledger but if you're",
    "start": "181159",
    "end": "188000"
  },
  {
    "text": "using a private package or maybe building some inner Source scenario you may not want to leak that information to",
    "start": "188000",
    "end": "194440"
  },
  {
    "text": "a public ledger so for that you may want to host a private six story instance and",
    "start": "194440",
    "end": "201720"
  },
  {
    "text": "yeah what will it take to run one of those so I'm not going to talk about",
    "start": "201720",
    "end": "208519"
  },
  {
    "text": "operating the entire six because that's a fairly big thing and it's not really relevant but what I want to focus about is how do you secure the trust rout for",
    "start": "208519",
    "end": "216080"
  },
  {
    "text": "your sixth instance and the trust rout is typically what you would think about metadata",
    "start": "216080",
    "end": "221959"
  },
  {
    "text": "describing the services and the certificates the the entire certificate chains the public keys and so on and",
    "start": "221959",
    "end": "229040"
  },
  {
    "text": "this is an highly secure or it's a highly critical piece of information so you need to be",
    "start": "229040",
    "end": "235239"
  },
  {
    "text": "very uh sensitive about how you are protecting this because if if you for",
    "start": "235239",
    "end": "240360"
  },
  {
    "text": "instance manage to get a certificate Shain for your testing environment into the production trust rout you may end up",
    "start": "240360",
    "end": "248000"
  },
  {
    "text": "in a situation where you can actually verify a test build properly and put it",
    "start": "248000",
    "end": "253079"
  },
  {
    "text": "into your production so you need to have extremely tight access controls for the trust",
    "start": "253079",
    "end": "260040"
  },
  {
    "text": "route so this is kind of similar you might think to like managing a trust for",
    "start": "264960",
    "end": "270240"
  },
  {
    "text": "the web pki but it's very different for the web P pki you have millions of",
    "start": "270240",
    "end": "277240"
  },
  {
    "text": "untrusted intermediate certificates and other identities that are floating around that you may need to care",
    "start": "277240",
    "end": "284680"
  },
  {
    "text": "about ass signing Authority for a code signing certificate is slightly smaller",
    "start": "284680",
    "end": "289960"
  },
  {
    "text": "the difference the use case is very different uh you usually have much smaller number of certificate chains and",
    "start": "289960",
    "end": "297039"
  },
  {
    "text": "you know about them at time and you don't change them as often so it's it's",
    "start": "297039",
    "end": "302320"
  },
  {
    "text": "slightly different from running at web scale and also the client has to be tightly integrated with a trust rout the",
    "start": "302320",
    "end": "308560"
  },
  {
    "text": "client has to be able to learn about new certificates or which certificates are",
    "start": "308560",
    "end": "313960"
  },
  {
    "text": "not valid anymore and preferably the client should be able to verify that everything it got is the expected one",
    "start": "313960",
    "end": "321840"
  },
  {
    "text": "and it should for instance be able to detect if no updates can be delivered so",
    "start": "321840",
    "end": "327639"
  },
  {
    "text": "there are some functional aspects here as well that's very different from how you might think of code signing",
    "start": "327639",
    "end": "334919"
  },
  {
    "text": "authorities and security is also very different or it's not very different but it's very important and it's primarily",
    "start": "334919",
    "end": "342240"
  },
  {
    "text": "two things you need to consider and that is securing um the deliver of the trust",
    "start": "342240",
    "end": "347880"
  },
  {
    "text": "rout to the client and you need to protect the trust rot uh at rest so",
    "start": "347880",
    "end": "352960"
  },
  {
    "text": "there are various attack vectors in here like you can have an external actor an internal threats could be honest Miss",
    "start": "352960",
    "end": "359960"
  },
  {
    "text": "Stakes but important is that when the truster is deployed and",
    "start": "359960",
    "end": "365039"
  },
  {
    "text": "ready for consumption it you have to be able to verify that what's actually being deployed is the expected one so it",
    "start": "365039",
    "end": "372440"
  },
  {
    "text": "can't be tampered with once you have deployed you need to continue and monitor for correctness after it has",
    "start": "372440",
    "end": "378160"
  },
  {
    "text": "been deployed by the system and the same for the client like",
    "start": "378160",
    "end": "384560"
  },
  {
    "text": "of course you need to be verify that when you're pulling down the latest trust rout it is also the correct one",
    "start": "384560",
    "end": "390919"
  },
  {
    "text": "and the complete in Integrity is hold and it actually was approved for",
    "start": "390919",
    "end": "398000"
  },
  {
    "text": "deployment so there are some options we can think about and let's talk a little bit about x509",
    "start": "398000",
    "end": "405080"
  },
  {
    "text": "pki and how that can help and then we'll dig a little bit more deeper into the update",
    "start": "405080",
    "end": "410199"
  },
  {
    "text": "framework so x509 pki it's a known standard it's been out there for a long time it's proven to work kind of good",
    "start": "410199",
    "end": "417800"
  },
  {
    "text": "but also have um features for certificate life science",
    "start": "417800",
    "end": "423199"
  },
  {
    "text": "Management in terms of various protocols for accessing certificate stores over different apis and there are Concepts",
    "start": "423199",
    "end": "430240"
  },
  {
    "text": "such as certificate revocation list or other online operations to be able to detect what certificates are not valid",
    "start": "430240",
    "end": "438160"
  },
  {
    "text": "anymore the problem is that it can be quite challenging to operate pki system",
    "start": "438160",
    "end": "443680"
  },
  {
    "text": "based on x509 there are many things to consider it can be hard to work with certificate revocations list because you",
    "start": "443680",
    "end": "449680"
  },
  {
    "text": "might get partial updates that you need to combine at the client side to sort of get a view of the complete",
    "start": "449680",
    "end": "456639"
  },
  {
    "text": "State and it's the pki itself you you need to sort",
    "start": "456639",
    "end": "463440"
  },
  {
    "text": "of have good controls over what's being deployed and how to secure that and I think it kind of bolts down to you need",
    "start": "463440",
    "end": "470120"
  },
  {
    "text": "to write and operate a lot of custom code to manage such a system so with that I would like to",
    "start": "470120",
    "end": "476599"
  },
  {
    "text": "introduce the update framework which is a framework for securing updates over insecure channels it's used in many many",
    "start": "476599",
    "end": "484720"
  },
  {
    "text": "system many systems such as agent Delivery Systems and there are adaptations for the automotive",
    "start": "484720",
    "end": "491520"
  },
  {
    "text": "industry the framework specifies the behavior of the client and the interaction it should perform and it",
    "start": "491520",
    "end": "497800"
  },
  {
    "text": "provides very strong and good security guarantees around the service side repository and all this makes it very",
    "start": "497800",
    "end": "503240"
  },
  {
    "text": "suitable for managing a trust route a tough repository consists of a",
    "start": "503240",
    "end": "509560"
  },
  {
    "text": "lot of metadata files describing the entire repository but it also describes all the different artifacts that's going",
    "start": "509560",
    "end": "516719"
  },
  {
    "text": "to be delivered to the client and this is pretty good because it allows you to always provide a",
    "start": "516719",
    "end": "523680"
  },
  {
    "text": "complete state to the client so the client doesn't need to merge files or things like that to understand what's",
    "start": "523680",
    "end": "530080"
  },
  {
    "text": "the current state it should operate in",
    "start": "530080",
    "end": "535240"
  },
  {
    "text": "and a very strong guarantee you can get with T is that you can have threshold",
    "start": "535240",
    "end": "540320"
  },
  {
    "text": "based signing so that means that you can designate a team of signers that will be",
    "start": "540320",
    "end": "545600"
  },
  {
    "text": "working to approve and endorse any changes to the system and with",
    "start": "545600",
    "end": "551079"
  },
  {
    "text": "threshhold based signing you can configure in such a way that you can for instance require free persons to agree",
    "start": "551079",
    "end": "556440"
  },
  {
    "text": "for any update to be delivered and that mitigates a lot of attacks such as single actor trying to change the",
    "start": "556440",
    "end": "564560"
  },
  {
    "text": "content and those keys that are used to sign off the entire tough route are easy",
    "start": "564560",
    "end": "569880"
  },
  {
    "text": "to revoke and rotate in the event of let's say a key loss or if some key is",
    "start": "569880",
    "end": "578519"
  },
  {
    "text": "compromised tough itself also provides a lot of security threat mitigations in",
    "start": "578519",
    "end": "583760"
  },
  {
    "text": "the client interaction and it has a lot of good protections two examples would be freeze attack and a roll back attack",
    "start": "583760",
    "end": "590079"
  },
  {
    "text": "where an attacker might prevent a client from getting updates or the attacker might try to replay an earlier seen",
    "start": "590079",
    "end": "596839"
  },
  {
    "text": "response to trick the client into entering a state where it's using um obsolete",
    "start": "596839",
    "end": "603040"
  },
  {
    "text": "data but the strongest thing I want to push for again is that with threshold based signing you can have very good",
    "start": "603040",
    "end": "609720"
  },
  {
    "text": "confidence that the content you are actually using is the one that was approved for",
    "start": "609720",
    "end": "615360"
  },
  {
    "text": "delivery and with tough you also get a good benefit in terms of client implementations there are a lot of",
    "start": "615360",
    "end": "621880"
  },
  {
    "text": "client implementations in different languages for different platforms such as Linux Mac OS and",
    "start": "621880",
    "end": "628320"
  },
  {
    "text": "windows when you think about tough you can kind of think of it as your favorite operating system kernel but you can",
    "start": "628320",
    "end": "635320"
  },
  {
    "text": "think about the different repository implementations such as distributions where they tailor they are tailored for",
    "start": "635320",
    "end": "642320"
  },
  {
    "text": "specific needs because depending on your use case you might have different needs so there are different implementations",
    "start": "642320",
    "end": "648440"
  },
  {
    "text": "out there that focuses on specific",
    "start": "648440",
    "end": "653120"
  },
  {
    "text": "areas sorry uh so I want to talk a little bit about tough onci so tonci is",
    "start": "654880",
    "end": "660720"
  },
  {
    "text": "an open source implementation of repository automation so it's very tailored for a",
    "start": "660720",
    "end": "666639"
  },
  {
    "text": "use case where you don't have that much or that many frequent updates and you",
    "start": "666639",
    "end": "671839"
  },
  {
    "text": "want to have a good security posture and use Hardware security models for all",
    "start": "671839",
    "end": "677000"
  },
  {
    "text": "designing operations and relying on HSM Keys is very good",
    "start": "677000",
    "end": "682279"
  },
  {
    "text": "because when it's pin code protected you enter a security mode where you it's",
    "start": "682279",
    "end": "687839"
  },
  {
    "text": "something you have and something you know it's it's very strong in protection against",
    "start": "687839",
    "end": "693560"
  },
  {
    "text": "threats tonci works by relying on a g repository and when you add content to",
    "start": "693560",
    "end": "700200"
  },
  {
    "text": "it automation kicks in and detect four changes and understands what has to be done to continue",
    "start": "700200",
    "end": "706600"
  },
  {
    "text": "to get everything signed and into a working order so the automation detects",
    "start": "706600",
    "end": "711720"
  },
  {
    "text": "that open up a pull request that guides all designers through what has to be done by providing comments that says",
    "start": "711720",
    "end": "719399"
  },
  {
    "text": "what has to be done so you can see a simple um simple screenshot where the",
    "start": "719399",
    "end": "726079"
  },
  {
    "text": "repository automation says that yeah this new update is now signed by",
    "start": "726079",
    "end": "731200"
  },
  {
    "text": "expected signers and we are ready to proceed to publish this so it's very",
    "start": "731200",
    "end": "736920"
  },
  {
    "text": "easy to use so an overview of how it looks is",
    "start": "736920",
    "end": "742519"
  },
  {
    "text": "that you might have a team maintaining the TR the trust rot the certificates and the content that goes into",
    "start": "742519",
    "end": "748160"
  },
  {
    "text": "Repository so when there are a new certificate chain you would like to publish uh you would extract it from",
    "start": "748160",
    "end": "754199"
  },
  {
    "text": "let's say your Clyde K KMS store or whatever it's stored then you add it to the repository the automation detects",
    "start": "754199",
    "end": "761000"
  },
  {
    "text": "that there are new content to be delivered and it's so opens a PR notifies all the different signers that",
    "start": "761000",
    "end": "768480"
  },
  {
    "text": "there is an action to be taken they need to sign off this new change when the threshold of signers has",
    "start": "768480",
    "end": "775560"
  },
  {
    "text": "been reached the pr is now ready to be merged and the system notifies you that you're now ready to proceed once you",
    "start": "775560",
    "end": "782600"
  },
  {
    "text": "merge the pr automation detects that and prepares an update and stores it on a",
    "start": "782600",
    "end": "788720"
  },
  {
    "text": "Content delivery Network where it can be stored sorry where it can be accessed by by the",
    "start": "788720",
    "end": "795399"
  },
  {
    "text": "clients so to operate a system like this you typically would typically would like to have two teams one team that is",
    "start": "795480",
    "end": "801519"
  },
  {
    "text": "maintaining the actual content and prepares all the updates and any tooling that you would like to have around it",
    "start": "801519",
    "end": "808279"
  },
  {
    "text": "then you would have a designated team of individuals that are designers that",
    "start": "808279",
    "end": "813519"
  },
  {
    "text": "verifies and reviews all the changes and endorses that by signing and so",
    "start": "813519",
    "end": "819399"
  },
  {
    "text": "acknowledging the update uh when you're dealing with Hardware security module or HSM Keys",
    "start": "819399",
    "end": "827440"
  },
  {
    "text": "it's very important that you think about the key management and your disaster recover options or what is happening if",
    "start": "827440",
    "end": "834040"
  },
  {
    "text": "a key gets lost like what's your in incident response so I won't go much into detail about that but Kyo will talk",
    "start": "834040",
    "end": "840600"
  },
  {
    "text": "a little bit about how you can do it because it's very important when you're dealing with a tough tough repository",
    "start": "840600",
    "end": "846440"
  },
  {
    "text": "that you do not lose access to the keys that are used to sign it because if if you're losing too many keys and you",
    "start": "846440",
    "end": "852360"
  },
  {
    "text": "can't sign a new update you you're in a bad situation because you may lose",
    "start": "852360",
    "end": "857959"
  },
  {
    "text": "access to the thrust rout and of course once you have it up and running you need",
    "start": "857959",
    "end": "863120"
  },
  {
    "text": "to have constant monitoring to make sure that no one is trying to for instance change the content so it's always the",
    "start": "863120",
    "end": "868800"
  },
  {
    "text": "expect one out there so to summ it of uh operating a",
    "start": "868800",
    "end": "875360"
  },
  {
    "text": "tough repository today is not that difficult and there are a lot of tooling out there that can help you to achieve",
    "start": "875360",
    "end": "881759"
  },
  {
    "text": "your goals so if you have a system where you don't have that many frequent updates saon CI is a great tool and I",
    "start": "881759",
    "end": "889199"
  },
  {
    "text": "definitely think you should give it a try if you have a scenario where you have more frequent updates I will now",
    "start": "889199",
    "end": "895880"
  },
  {
    "text": "hand it over to kairo and he will present how you can use for",
    "start": "895880",
    "end": "901360"
  },
  {
    "text": "that thank you Fred um yeah I will talk another uh for about another",
    "start": "902079",
    "end": "908519"
  },
  {
    "text": "implementation of T that is um R stuff so R stuff is a generic uh application",
    "start": "908519",
    "end": "916000"
  },
  {
    "text": "and the primary goal was also to make the generat of adoption",
    "start": "916000",
    "end": "921199"
  },
  {
    "text": "easier so the project it's early adopted by rub jams and uh Pipi uh I say early",
    "start": "921199",
    "end": "927880"
  },
  {
    "text": "adopted but it's a working progress so we are uh implementing it",
    "start": "927880",
    "end": "932920"
  },
  {
    "text": "together and the project is under opsf um and of course is a neutral uh",
    "start": "932920",
    "end": "940519"
  },
  {
    "text": "governance structure so it's a a product where everyone it's welcome to",
    "start": "940519",
    "end": "945600"
  },
  {
    "text": "contribute and um help us well um my talk would be a little bit uh different",
    "start": "945600",
    "end": "952639"
  },
  {
    "text": "because he gave us a lot of uh um uh Concepts about tough and how it's",
    "start": "952639",
    "end": "957800"
  },
  {
    "text": "important to secure the ways to do this and uh I want to go in more operations of with tough I",
    "start": "957800",
    "end": "965880"
  },
  {
    "text": "will give an example using our stuff um to secure a self-managed uh repository",
    "start": "965880",
    "end": "971959"
  },
  {
    "text": "in that case I I'm I will Showcase of a jrog repository and our stuff uh",
    "start": "971959",
    "end": "978000"
  },
  {
    "text": "securing uh helping to secure this uh repository so this um an example from an",
    "start": "978000",
    "end": "985839"
  },
  {
    "text": "organization so let's understand the the organization problem",
    "start": "985839",
    "end": "990959"
  },
  {
    "text": "so it's a software um company uh on secure uh",
    "start": "990959",
    "end": "996160"
  },
  {
    "text": "industry um they provide different um um artifacts so they have server",
    "start": "996160",
    "end": "1002680"
  },
  {
    "text": "application B software and C uh application and they want uh also to",
    "start": "1002680",
    "end": "1010120"
  },
  {
    "text": "secure the artifact distribution and have with uh well defined uh helas",
    "start": "1010120",
    "end": "1015720"
  },
  {
    "text": "process and incident process so uh the The Challenge on this uh the",
    "start": "1015720",
    "end": "1021560"
  },
  {
    "text": "first one was to define the hel process together with this uh uh user and uh how",
    "start": "1021560",
    "end": "1028438"
  },
  {
    "text": "they will uh release the internal and external uh uh artifacts because they",
    "start": "1028439",
    "end": "1033520"
  },
  {
    "text": "have um um artifacts that are used internally and artifacts that to used to build the product that are shipped to",
    "start": "1033520",
    "end": "1040319"
  },
  {
    "text": "the the customers so we need to secure uh the hel process using T and",
    "start": "1040319",
    "end": "1046079"
  },
  {
    "text": "integrating it with cicd and jrog and they want to um also uh secure the",
    "start": "1046079",
    "end": "1053600"
  },
  {
    "text": "distribution and they have different use uh platforms uh Linux Windows Mac",
    "start": "1053600",
    "end": "1060280"
  },
  {
    "text": "OS and and of course very important to them it's document the incident response",
    "start": "1060280",
    "end": "1066360"
  },
  {
    "text": "process what they do if something goes wrong so",
    "start": "1066360",
    "end": "1072480"
  },
  {
    "text": "the the the the uh organization structure it's uh the process Flow It's",
    "start": "1072480",
    "end": "1078200"
  },
  {
    "text": "the Most common that everybody is familiar developers uh push uh commits",
    "start": "1078200",
    "end": "1084280"
  },
  {
    "text": "to get cicd building uh and tests and releasing uh artifacts to the repository",
    "start": "1084280",
    "end": "1091320"
  },
  {
    "text": "I want to highlight a bit to the repository because there is some thing here that's is interesting because they",
    "start": "1091320",
    "end": "1096760"
  },
  {
    "text": "have a kind of two uh repositories one is internal repository when they release",
    "start": "1096760",
    "end": "1102120"
  },
  {
    "text": "the internal uh libraries and toolings uh that are used to build uh the product",
    "start": "1102120",
    "end": "1107480"
  },
  {
    "text": "to the customers and those sorry uh the the the products uh the installers",
    "start": "1107480",
    "end": "1113600"
  },
  {
    "text": "andate to go to the uh a repository that it's Expos it to the to their",
    "start": "1113600",
    "end": "1119679"
  },
  {
    "text": "customers so so how they do the internal artifacts it's uh important because uh",
    "start": "1119679",
    "end": "1127720"
  },
  {
    "text": "they release very often they have more than 200 release a day of their uh their",
    "start": "1127720",
    "end": "1133360"
  },
  {
    "text": "uh libraries and to internally so this is uh used also by the Developers to um",
    "start": "1133360",
    "end": "1140640"
  },
  {
    "text": "to change those uh uh libraries and tools and uh also use it in the cicd so",
    "start": "1140640",
    "end": "1147480"
  },
  {
    "text": "the internal repository is uh used uh in that way and the external uh uh",
    "start": "1147480",
    "end": "1156200"
  },
  {
    "text": "artifacts that are the product um they use the of course they use the internal libraries and tools to build this",
    "start": "1156200",
    "end": "1162840"
  },
  {
    "text": "product and then uh he leads it to the artifacts then it will be uh shipped to",
    "start": "1162840",
    "end": "1168559"
  },
  {
    "text": "the to their customers so when this is shipped it's available to the users to",
    "start": "1168559",
    "end": "1175080"
  },
  {
    "text": "download as let's say a ga uh um relas well uh the solution implemented",
    "start": "1175080",
    "end": "1182039"
  },
  {
    "text": "here uses uh our stuff uh toughy uh go",
    "start": "1182039",
    "end": "1187159"
  },
  {
    "text": "t and they are experimenting tough JS also this is uh to to enate how many",
    "start": "1187159",
    "end": "1193559"
  },
  {
    "text": "libraries we have out about tough so it's easy to integrate so",
    "start": "1193559",
    "end": "1200039"
  },
  {
    "text": "let's see uh what we did it's just adding our stuff along to uh along with",
    "start": "1200039",
    "end": "1206640"
  },
  {
    "text": "uh jrog artifactory in a way that it's we be part of the process but we don't change too much their process that is uh",
    "start": "1206640",
    "end": "1214280"
  },
  {
    "text": "good because impact it's low for them um and why are stuff in the self",
    "start": "1214280",
    "end": "1219840"
  },
  {
    "text": "managing repository so the first reason is that our stuff uh actually tough It's",
    "start": "1219840",
    "end": "1225159"
  },
  {
    "text": "artifact diagnostic so they have different uh uh uh tools and the libraries that they",
    "start": "1225159",
    "end": "1230760"
  },
  {
    "text": "release in different languages like uh C++ Java um go and um uh other language",
    "start": "1230760",
    "end": "1239679"
  },
  {
    "text": "it's a it's a artifact diagnostic so tough and R stough or tough onci doesn't",
    "start": "1239679",
    "end": "1245480"
  },
  {
    "text": "care which language you are using and it's Rel a processos so it's",
    "start": "1245480",
    "end": "1252159"
  },
  {
    "text": "easy to fit it to the existent process so we don't change too much uh the way",
    "start": "1252159",
    "end": "1257520"
  },
  {
    "text": "that they release uh uh their component and of course our",
    "start": "1257520",
    "end": "1263400"
  },
  {
    "text": "stuff can be deployed uh on private or public cloud and on premises as well so",
    "start": "1263400",
    "end": "1269679"
  },
  {
    "text": "uh I just a quick introduction about Tuffy because I will use this here to to show the case as well they use this to",
    "start": "1269679",
    "end": "1276120"
  },
  {
    "text": "show the case T it's a a small uh generic tough client that's written in",
    "start": "1276120",
    "end": "1282640"
  },
  {
    "text": "go using the go tff it's another tough Library uh and it's uh supported by Mac",
    "start": "1282640",
    "end": "1288760"
  },
  {
    "text": "Windows uh and Linux and it Support also multiple",
    "start": "1288760",
    "end": "1293880"
  },
  {
    "text": "repositories so you can configure and use different repositories I will show it in a quick",
    "start": "1293880",
    "end": "1300360"
  },
  {
    "text": "demo so how how was the implementation so the first thing was uh the tough",
    "start": "1300360",
    "end": "1305640"
  },
  {
    "text": "ceremony um defining what are the tough administrators so they have the CTO",
    "start": "1305640",
    "end": "1310919"
  },
  {
    "text": "engineering and relas managers involved and as Fredick mentioned about the root",
    "start": "1310919",
    "end": "1316279"
  },
  {
    "text": "metadata how it is used there so so they have uh uh three uh um key owners for",
    "start": "1316279",
    "end": "1323440"
  },
  {
    "text": "the root metadata that sign the root metadata and they use the online key to to sign the target metadata that is used",
    "start": "1323440",
    "end": "1330400"
  },
  {
    "text": "by to store the artifacts and they have some management process uh internal like",
    "start": "1330400",
    "end": "1336039"
  },
  {
    "text": "what happens if the the the head of product uh uh chains uh leaves the",
    "start": "1336039",
    "end": "1343039"
  },
  {
    "text": "organization they know how to rotate this so I will describe it more later and also uh process for online key uh if",
    "start": "1343039",
    "end": "1350720"
  },
  {
    "text": "the online key the KMS key rotates how I update that so the second part it's uh",
    "start": "1350720",
    "end": "1357919"
  },
  {
    "text": "integrated to the internal um uh release where they have the internal artifact so",
    "start": "1357919",
    "end": "1363960"
  },
  {
    "text": "how it is done the process is still the same but we introduced stuff so basically the developers uh ship the uh",
    "start": "1363960",
    "end": "1371360"
  },
  {
    "text": "uh push the the code to the the git and uh when it's the time for those uh tools",
    "start": "1371360",
    "end": "1378640"
  },
  {
    "text": "and libraries when they release it they have their version tag and it will uh",
    "start": "1378640",
    "end": "1384679"
  },
  {
    "text": "build and add the artifact as as um uh",
    "start": "1384679",
    "end": "1390440"
  },
  {
    "text": "add the artifact in jrog uh repository and also in in add this information to",
    "start": "1390440",
    "end": "1395919"
  },
  {
    "text": "the tough metadata using our stuff using an API call and and this will be signed",
    "start": "1395919",
    "end": "1401559"
  },
  {
    "text": "by the KMS key so and for the um product it's a",
    "start": "1401559",
    "end": "1407440"
  },
  {
    "text": "little uh difference in the process because the process is not started by uh",
    "start": "1407440",
    "end": "1413159"
  },
  {
    "text": "the developers uh the process are started by the release and product manager what they do they Define all the",
    "start": "1413159",
    "end": "1419919"
  },
  {
    "text": "libraries tools that will be uh used to build the product uh in agreement with",
    "start": "1419919",
    "end": "1425799"
  },
  {
    "text": "the developer leaders then they push the helise uh and this uh used",
    "start": "1425799",
    "end": "1433240"
  },
  {
    "text": "the it pulls all the the um from the the internal artifact repository all the the",
    "start": "1433240",
    "end": "1441279"
  },
  {
    "text": "definitions of uh libraries and tools that used to build and when it's build they create a",
    "start": "1441279",
    "end": "1447840"
  },
  {
    "text": "PR and they sign this PR with the uh uh",
    "start": "1447840",
    "end": "1452919"
  },
  {
    "text": "HSM Keys as well the UB keys and this is validated by the cicd and it is uh released again to the",
    "start": "1452919",
    "end": "1461240"
  },
  {
    "text": "tough metadata so there is one thing here that you see it's a little bit confused and because is not what we want",
    "start": "1461240",
    "end": "1469720"
  },
  {
    "text": "with our stuff actually what want to simplify it when the product it's uh",
    "start": "1469720",
    "end": "1475240"
  },
  {
    "text": "build designed direct the tough metadata uh so we skip a lot of process",
    "start": "1475240",
    "end": "1481120"
  },
  {
    "text": "here and when it's signed it will be available to the to their users to to",
    "start": "1481120",
    "end": "1486279"
  },
  {
    "text": "consume it directly so we want to simplify this this is a a feature that will be coming soon the possibility to",
    "start": "1486279",
    "end": "1493000"
  },
  {
    "text": "use uh offline keys in the Target metadata so the uh um now it's the the",
    "start": "1493000",
    "end": "1500520"
  },
  {
    "text": "part that is really important is to use the tough client everywere to secure uh",
    "start": "1500520",
    "end": "1506600"
  },
  {
    "text": "the the users uh outside of the organization the clients customers and",
    "start": "1506600",
    "end": "1512240"
  },
  {
    "text": "also secure the developers internally from internal attack so um I want to",
    "start": "1512240",
    "end": "1518120"
  },
  {
    "text": "highlight the internals because I really like the the solutions that they applied here first they have uh developers uh as",
    "start": "1518120",
    "end": "1526760"
  },
  {
    "text": "I said they they uh develop different languages and and toolings and and and libraries so they have Mac OS window and",
    "start": "1526760",
    "end": "1535720"
  },
  {
    "text": "M platform so and also in the CCD of course to build it m platform they have M platform and we need to uh help them",
    "start": "1535720",
    "end": "1543200"
  },
  {
    "text": "with that so what they did uh that the IT",
    "start": "1543200",
    "end": "1549919"
  },
  {
    "text": "department uh deploys in now machines the the Tuffy with the trusted root so",
    "start": "1549919",
    "end": "1557399"
  },
  {
    "text": "they can use this uh to download the artifact so what they they they do",
    "start": "1557399",
    "end": "1562880"
  },
  {
    "text": "actually uh they did something very interesting for me I want them to share with us um they create a vs code",
    "start": "1562880",
    "end": "1570039"
  },
  {
    "text": "extension that is basically um a package manager for the internals and when",
    "start": "1570039",
    "end": "1575399"
  },
  {
    "text": "developers want to uh download some um uh library or to to work their source",
    "start": "1575399",
    "end": "1580679"
  },
  {
    "text": "code they uh they use the vest code to to search and install it so it's a very",
    "start": "1580679",
    "end": "1586720"
  },
  {
    "text": "interesting solution I I didn't see it yet but I want and they use T also in",
    "start": "1586720",
    "end": "1593520"
  },
  {
    "text": "the when they want to build the product as well so uh in the cicd they they uh",
    "start": "1593520",
    "end": "1600039"
  },
  {
    "text": "use this to download the the art the source code so um the product for the clients",
    "start": "1600039",
    "end": "1608320"
  },
  {
    "text": "it's uh the solution it's still on on development but it's an interesting case",
    "start": "1608320",
    "end": "1614159"
  },
  {
    "text": "what they do is they create a very light uh installer",
    "start": "1614159",
    "end": "1619240"
  },
  {
    "text": "that uh the user can choose what product they are allowed of course by license",
    "start": "1619240",
    "end": "1625279"
  },
  {
    "text": "all those uh um requisites but they can choose what they want to install uh or",
    "start": "1625279",
    "end": "1631279"
  },
  {
    "text": "download and they use this to to download and they are using that case Tuffy but they are they want to change",
    "start": "1631279",
    "end": "1637559"
  },
  {
    "text": "it to uh because this application is Java so uh and when they once they have",
    "start": "1637559",
    "end": "1645399"
  },
  {
    "text": "the product what they uh have in that product they have the op dator that that it's uh using uh tough as well for these",
    "start": "1645399",
    "end": "1653440"
  },
  {
    "text": "they have different uh uh use they have a toughy go tough and now they are",
    "start": "1653440",
    "end": "1661000"
  },
  {
    "text": "experimented tough JS as well they use this excuse me uh every",
    "start": "1661000",
    "end": "1667360"
  },
  {
    "text": "time that the user uh want to pedate this tool they use this to to pull from uh using the tough metadata and securing",
    "start": "1667360",
    "end": "1674440"
  },
  {
    "text": "that so um I I couldn't have more",
    "start": "1674440",
    "end": "1679880"
  },
  {
    "text": "details from uh the the user direct this this case direct so what I did I wrote I",
    "start": "1679880",
    "end": "1689360"
  },
  {
    "text": "did a quick um demo I did this yesterday and today just to examplify how they do",
    "start": "1689360",
    "end": "1696320"
  },
  {
    "text": "this so here I'm using GitHub and and jrog",
    "start": "1696320",
    "end": "1701880"
  },
  {
    "text": "and art stuff as well so I'm releasing a new version of uh this demo package um",
    "start": "1701880",
    "end": "1708960"
  },
  {
    "text": "it triggers uh the cicd uh in GitHub uh the GitHub actions so I approve uh the",
    "start": "1708960",
    "end": "1718640"
  },
  {
    "text": "helise once it uh is uh approved uh it will add the artifact in the jrog and in",
    "start": "1719000",
    "end": "1725519"
  },
  {
    "text": "the tough metadata you can see um to the the runners that will be uh very simple",
    "start": "1725519",
    "end": "1732200"
  },
  {
    "text": "API calls for uh for our stuff as well and who is familiar with j frog uh you",
    "start": "1732200",
    "end": "1739320"
  },
  {
    "text": "see next that uh it's um a similar uh a",
    "start": "1739320",
    "end": "1744519"
  },
  {
    "text": "traditional call that not Chang in the how you use jrog AR Factory so",
    "start": "1744519",
    "end": "1751960"
  },
  {
    "text": "yeah uh I will I did also a quick uh demo that it it shows of course the",
    "start": "1751960",
    "end": "1759080"
  },
  {
    "text": "artifact in the uh in the J frog but here I'm using the tuy to I have the",
    "start": "1759080",
    "end": "1765000"
  },
  {
    "text": "repository configured and I will use this to download uh uh the",
    "start": "1765000",
    "end": "1771360"
  },
  {
    "text": "artifact and behind the S is using tough clients to do all the verification the metadata before uh fetching uh the",
    "start": "1771960",
    "end": "1780960"
  },
  {
    "text": "artifact um yeah that that's it for this demo let's",
    "start": "1780960",
    "end": "1786720"
  },
  {
    "text": "see so last uh thing that's quite important is uh uh the incidental",
    "start": "1786720",
    "end": "1794120"
  },
  {
    "text": "response so how they map this of course this is not their document it's just an example that I wrot to understand how it",
    "start": "1794120",
    "end": "1801760"
  },
  {
    "text": "uh could be uh effective in any organization so we have some",
    "start": "1801760",
    "end": "1807600"
  },
  {
    "text": "administrative uh uh it's not an a security incident but it could uh go to",
    "start": "1807600",
    "end": "1813159"
  },
  {
    "text": "that direction if not there but what happens if a root key mean leaves an organization or change the their role so",
    "start": "1813159",
    "end": "1820480"
  },
  {
    "text": "they have the the actions that they should do what if uh the vops uh member",
    "start": "1820480",
    "end": "1825760"
  },
  {
    "text": "with access with the KMS Lees their organization so they can rotate the root metadata resign it and they don't need",
    "start": "1825760",
    "end": "1832320"
  },
  {
    "text": "to go to each uh client and and give the new version it's done by the the the",
    "start": "1832320",
    "end": "1838200"
  },
  {
    "text": "tough metadata so and also here is a some uh",
    "start": "1838200",
    "end": "1843320"
  },
  {
    "text": "incident response uh examples like what if the KMS Keys is leaked what if the",
    "start": "1843320",
    "end": "1848480"
  },
  {
    "text": "CCD P pipelines has some uh access leaked what happen is the the API so",
    "start": "1848480",
    "end": "1854919"
  },
  {
    "text": "here I create some ideas of how they could uh do this but of course each organization needs to uh mat it to to",
    "start": "1854919",
    "end": "1862240"
  },
  {
    "text": "their uh propose yeah and uh we are on time and that's it",
    "start": "1862240",
    "end": "1868039"
  },
  {
    "text": "for our",
    "start": "1868039",
    "end": "1871559"
  },
  {
    "text": "presentation thank you we have time for questions I think four minutes is left so there are microphones somewhere if",
    "start": "1876279",
    "end": "1884240"
  },
  {
    "text": "you would like to ask us something hey so um I must admit that I have heard",
    "start": "1884240",
    "end": "1891799"
  },
  {
    "text": "tough mention often but often skipped it a bit because it seems like U I'm going to say something stupid the more",
    "start": "1891799",
    "end": "1897399"
  },
  {
    "text": "complicated six so so my question is probably a bit when would you put up a scenario where",
    "start": "1897399",
    "end": "1904279"
  },
  {
    "text": "yeah you should tough is the right choice uh choice for this and above six",
    "start": "1904279",
    "end": "1910639"
  },
  {
    "text": "not that's to say one is better but more like when to use",
    "start": "1910639",
    "end": "1915720"
  },
  {
    "text": "what yeah uh when we we think about the",
    "start": "1916840",
    "end": "1921880"
  },
  {
    "text": "security supply chain uh I would say that the the tough It's the if if you are familiar with the security supply",
    "start": "1921880",
    "end": "1928000"
  },
  {
    "text": "chain like the Sal uh graph it's in the end of your um supply chain I mean when",
    "start": "1928000",
    "end": "1935039"
  },
  {
    "text": "you want to the uh distribute any kind of artifact that needs to be trusted by",
    "start": "1935039",
    "end": "1941440"
  },
  {
    "text": "uh the users I think that's the point where you you should consider to to have",
    "start": "1941440",
    "end": "1949840"
  },
  {
    "text": "okay well is nobody else going to ask then uh do you also use tough to sign",
    "start": "1951480",
    "end": "1957200"
  },
  {
    "text": "meta data like es bumps and stuff like we see Sixto often yeah it's a good use",
    "start": "1957200",
    "end": "1962720"
  },
  {
    "text": "case signning the uh adding the artifact of the the a Bonds in the tough metadata",
    "start": "1962720",
    "end": "1968159"
  },
  {
    "text": "it's a way to to create a trust uh between the users if I get your",
    "start": "1968159",
    "end": "1973639"
  },
  {
    "text": "question uh no uh in in six stor is very normal to sign esoms and stuff",
    "start": "1973639",
    "end": "1979440"
  },
  {
    "text": "adaptations so is that also a normal thing to do in tough yeah so for that case um in sigstore we only use the",
    "start": "1979440",
    "end": "1987559"
  },
  {
    "text": "update framework to actually provide the root certificates and the pro the uh",
    "start": "1987559",
    "end": "1993840"
  },
  {
    "text": "public keys for the infrastructure and then via that trust rout you can then",
    "start": "1993840",
    "end": "1999799"
  },
  {
    "text": "use fulu which is a certificate ofor Authority and create a signing certificate that you use to sign your",
    "start": "1999799",
    "end": "2005840"
  },
  {
    "text": "artifact such as your s bomb so you wouldn't really use tough for that in the sigor example so tough is",
    "start": "2005840",
    "end": "2013240"
  },
  {
    "text": "more like an enabler to provide the truster to the sigstore clients and then",
    "start": "2013240",
    "end": "2018399"
  },
  {
    "text": "they use the rest of the sigstore infrastructure to create signing certificates to sign what is ever produced in the cicd",
    "start": "2018399",
    "end": "2026320"
  },
  {
    "text": "pipeline thank you thank",
    "start": "2026320",
    "end": "2030398"
  },
  {
    "text": "you first of all great talk well done um yeah just following on from this guy's",
    "start": "2036399",
    "end": "2042240"
  },
  {
    "text": "point given that it's artifact agnostic doesn't that mean that um if I choose to",
    "start": "2042240",
    "end": "2047360"
  },
  {
    "text": "um I can secure my um attestations s bombs uh that sort of stuff with tough",
    "start": "2047360",
    "end": "2054599"
  },
  {
    "text": "um without Sixto is that correct yeah you could you you have your",
    "start": "2054599",
    "end": "2061240"
  },
  {
    "text": "own Tred the root metadata to secure your attestation uh of course you could use",
    "start": "2061240",
    "end": "2067158"
  },
  {
    "text": "also the the the six store to sign your attestations but you could create another layer of",
    "start": "2067159",
    "end": "2073118"
  },
  {
    "text": "security okay thank",
    "start": "2073119",
    "end": "2076559"
  },
  {
    "text": "you I guess we're done thanks for coming",
    "start": "2089280",
    "end": "2096599"
  }
]