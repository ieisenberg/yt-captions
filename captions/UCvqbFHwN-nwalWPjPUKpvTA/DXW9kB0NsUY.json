[
  {
    "text": "so uh who are we well there's three of us I swear uh one of them's a ghost in",
    "start": "120",
    "end": "6480"
  },
  {
    "text": "the show uh so uh Long die actually uh led a lot of the work that we're talking",
    "start": "6480",
    "end": "12480"
  },
  {
    "text": "about today but he was in uh Shanghai and not able to actually get out of here",
    "start": "12480",
    "end": "17580"
  },
  {
    "text": "um so we have a video segment but but uh long as an excellent part of this process and we want to you know",
    "start": "17580",
    "end": "24480"
  },
  {
    "text": "acknowledge that as we go along um I'm Adrian um and I work at tetrate and I work on",
    "start": "24480",
    "end": "31260"
  },
  {
    "text": "the webassembly runtime call was Zero which is we're just threatening to go and um I got acclimated to to adapter",
    "start": "31260",
    "end": "39059"
  },
  {
    "text": "much more so through through this work so I'm sort of like a community contributor and yes Mauricio Mauricio I",
    "start": "39059",
    "end": "45960"
  },
  {
    "text": "work for diabet and I think we have a couple of slides like introducing right yes yeah that's that's you that's your Twitter account that's me yeah good so",
    "start": "45960",
    "end": "53399"
  },
  {
    "text": "uh yep uh I'm code from the Crypt um and so if you want to follow follow",
    "start": "53399",
    "end": "58920"
  },
  {
    "text": "those things yeah promise that it meets its name definitely and uh yeah and if you're interested in these",
    "start": "58920",
    "end": "65700"
  },
  {
    "text": "topics yeah I'm at Salah Twitter as well I work for this company called diagram we help people run Dapper in production",
    "start": "65700",
    "end": "71159"
  },
  {
    "text": "and you know in multiple clouds and I'm writing this book uh the title platform engineering kubernetes where I'm",
    "start": "71159",
    "end": "76680"
  },
  {
    "text": "covering I like these topics on how you put different projects together and how you expand platforms is kind of like the",
    "start": "76680",
    "end": "82320"
  },
  {
    "text": "topic of today's session uh that's a QR for the book and down there it's my name",
    "start": "82320",
    "end": "87479"
  },
  {
    "text": "with 40 that's my age unfortunately but it's also a 40 discount code if you're interested in that",
    "start": "87479",
    "end": "93320"
  },
  {
    "text": "I'm just writing your book I I'm trying to you know I'm trying to find like a positive angle of the 40 thing but let's",
    "start": "93320",
    "end": "100140"
  },
  {
    "text": "let's do it so this is the this is what we're going to be talking about uh today uh we are going to start like with",
    "start": "100140",
    "end": "105180"
  },
  {
    "text": "Dapper that's showing it in action uh how many developers do we have here in the room yeah that's a good 30 I would say maybe",
    "start": "105180",
    "end": "113820"
  },
  {
    "text": "uh and then we are going to talk a little bit about how we are kind of combining Dapper and we have assembly",
    "start": "113820",
    "end": "118979"
  },
  {
    "text": "together and then we're just going to see another demo showing that exactly I think that what we are showing here is",
    "start": "118979",
    "end": "124140"
  },
  {
    "text": "just the starting points for collaborations and there are tons of other things that we can be doing so if you don't know anything about upper",
    "start": "124140",
    "end": "130560"
  },
  {
    "text": "adapter it's a cncf project it's a distributed application runtime and I will not spend so much time discussing",
    "start": "130560",
    "end": "136379"
  },
  {
    "text": "about what diaper is I wanted to show you in action but you need to know two things about upper it's thriving on the",
    "start": "136379",
    "end": "141959"
  },
  {
    "text": "cncf community it's the done the 10 uh top 10 largest projects in the cncf that",
    "start": "141959",
    "end": "147720"
  },
  {
    "text": "basically means that there is a lot of people contributing back and getting involved and extending it basically uh",
    "start": "147720",
    "end": "154860"
  },
  {
    "text": "and the main thing that you need to take away from this presentation if you don't know anything about that price Dapper provide components that helps",
    "start": "154860",
    "end": "161099"
  },
  {
    "text": "application developers to make their applications with their distributed applications simpler easier to maintain and the couple form from infrastructure",
    "start": "161099",
    "end": "167879"
  },
  {
    "text": "so let's see that in action right imagine that you are building this kind of applications where you have",
    "start": "167879",
    "end": "173099"
  },
  {
    "text": "applications that are writing data somewhere some other applications reading that data and doing some processing and some applications that",
    "start": "173099",
    "end": "179700"
  },
  {
    "text": "are subscribed to Notifications imagine that you want to listen every time that a new order gets created or you know",
    "start": "179700",
    "end": "185760"
  },
  {
    "text": "every time that you write something to a database or every time a new customer come in that's the subscriber app that we have on there and if you're building",
    "start": "185760",
    "end": "192180"
  },
  {
    "text": "these distributed applications it's quite common that you will have a front-end application or a mobile application that is interacting with all",
    "start": "192180",
    "end": "197879"
  },
  {
    "text": "these backend Services by using HTTP or grpc right so you need to think about",
    "start": "197879",
    "end": "203099"
  },
  {
    "text": "you know how that those interactions will go but in real life we need to replace this Cloud that is there for",
    "start": "203099",
    "end": "209640"
  },
  {
    "text": "real infrastructure right like our cloud provider services our databases and all that stuff so for the sake of explaining the",
    "start": "209640",
    "end": "217200"
  },
  {
    "text": "example I chose to mention rallies here on Kafka right if you want to write data to database maybe you can just use",
    "start": "217200",
    "end": "223200"
  },
  {
    "text": "radius for that but this is start adding some complexity on some tight coupling with the application code right you need",
    "start": "223200",
    "end": "228900"
  },
  {
    "text": "to upgrade this client in order to write data to release and that's a dependency to your application the same for the",
    "start": "228900",
    "end": "235019"
  },
  {
    "text": "application that it's reading data from it and the same for the application that wants to use Kafka you need to have a Kafka client in the programming language",
    "start": "235019",
    "end": "241200"
  },
  {
    "text": "of choice in order to be able to submit to submit and to consume Kafka messages and another challenge that you will face",
    "start": "241200",
    "end": "248159"
  },
  {
    "text": "is that if you are using HTTP or grpc between you know the the services you",
    "start": "248159",
    "end": "253560"
  },
  {
    "text": "will need to deal with for example HTTP retries and circuit breakers and all that stuff to build in resiliency inside",
    "start": "253560",
    "end": "259139"
  },
  {
    "text": "the application code so that bird comes to try to help us to solve some of these",
    "start": "259139",
    "end": "264180"
  },
  {
    "text": "common challenges by obstructing away the infrastructure and that's the upper components the things that I mentioned",
    "start": "264180",
    "end": "269699"
  },
  {
    "text": "before in this case for this demand for the application I I'm using two Dapper components one is the the state store",
    "start": "269699",
    "end": "276600"
  },
  {
    "text": "that allows you to obstruct the storage so you if your application needs to State some store some state in a",
    "start": "276600",
    "end": "283080"
  },
  {
    "text": "database or you know in this case in this case in a key value store you can use the Dapper state store component to",
    "start": "283080",
    "end": "288360"
  },
  {
    "text": "abstract that away the same with the pub sub component that abstract away message Brokers so then by using these upper",
    "start": "288360",
    "end": "294780"
  },
  {
    "text": "components what you can do is you can actually swap the implementation if you want to change radius for postgresql you",
    "start": "294780",
    "end": "301199"
  },
  {
    "text": "can swap that into the configuration side of things and keep your application code the same because what Dapper does",
    "start": "301199",
    "end": "306780"
  },
  {
    "text": "is introduce this Dapper side color it's running in there and exposing like consistent API for your applications to",
    "start": "306780",
    "end": "313080"
  },
  {
    "text": "use so your applications if you take a look at the application code that is down there in that repo you will see",
    "start": "313080",
    "end": "318360"
  },
  {
    "text": "that it's only doing HTTP requests against the it's running locally and it's interacting with these backend",
    "start": "318360",
    "end": "324240"
  },
  {
    "text": "Services these databases and message Brokers just using HTTP in the same way Dapper provides more components to solve",
    "start": "324240",
    "end": "330660"
  },
  {
    "text": "different challenges like secret stores and now we have workflows as well and because for example here in the",
    "start": "330660",
    "end": "337199"
  },
  {
    "text": "front-end application it's also using the upper we can actually reuse all the components and all the behaviors built",
    "start": "337199",
    "end": "342900"
  },
  {
    "text": "in into the Dapper sidecar for retry mechanisms on circuit breakers so you kind of like get that resiliency built",
    "start": "342900",
    "end": "348360"
  },
  {
    "text": "in uh in your applications without changing the application code without making the application code responsible",
    "start": "348360",
    "end": "353580"
  },
  {
    "text": "for implementing these behaviors or adding libraries to implement that and all the upgrades of the drivers right",
    "start": "353580",
    "end": "360660"
  },
  {
    "text": "like if you are using redis you need to make sure that your redis driver or the SDK it's the same version of the redist",
    "start": "360660",
    "end": "366000"
  },
  {
    "text": "that you're using right and sometimes you want to run Rays locally and sometimes you want to write run radius",
    "start": "366000",
    "end": "371039"
  },
  {
    "text": "in Google Cloud for example and maybe they have different versions so that basically means that your application needs to have two different dependencies",
    "start": "371039",
    "end": "376800"
  },
  {
    "text": "depending on where it's running that becomes complicated and it's tightly coupled we are trying to solve some of",
    "start": "376800",
    "end": "382020"
  },
  {
    "text": "that uh with dapper and as I mentioned Dapper uses that sidecar approach it's the most common",
    "start": "382020",
    "end": "387539"
  },
  {
    "text": "way of using Napper nowadays but we recognize that sidecars are not for everyone so if you are not into sidecars",
    "start": "387539",
    "end": "393360"
  },
  {
    "text": "and you said ah they're using sidecars I'm not going to even look into into lapper there is a new initiative in the",
    "start": "393360",
    "end": "399000"
  },
  {
    "text": "community that it's basically expanding that for different deployment models and I think that might be something else",
    "start": "399000",
    "end": "405300"
  },
  {
    "text": "that we will look into into the future so let's take a look at the demo again",
    "start": "405300",
    "end": "410460"
  },
  {
    "text": "this demo you can run in your own computer uh like you can just follow the step-by-step tutorial here and what I",
    "start": "410460",
    "end": "416400"
  },
  {
    "text": "want to show here is that I have an application running in my kind cluster I've",
    "start": "416400",
    "end": "421500"
  },
  {
    "text": "installed upper using Helm into my my cluster that just a single line you get the upper install you can actually see",
    "start": "421500",
    "end": "428100"
  },
  {
    "text": "that I have the wrapper system namespace running right and then uh because I've",
    "start": "428100",
    "end": "433919"
  },
  {
    "text": "deployed like the application modules like right like the the one that is writing data the one that is reading data the one that is subscribing to",
    "start": "433919",
    "end": "440580"
  },
  {
    "text": "notifications we can see the ports that are running here and because these are like Dapper",
    "start": "440580",
    "end": "445860"
  },
  {
    "text": "enabled applications you will see that Dapper is injecting a sidecar into each of these modules right let's take a look",
    "start": "445860",
    "end": "452160"
  },
  {
    "text": "at how the application looks like the application looks like this not here",
    "start": "452160",
    "end": "458280"
  },
  {
    "text": "here the application looks like this pretty simple we are writing messages hello cucumber hey right",
    "start": "458280",
    "end": "466199"
  },
  {
    "text": "that's writing into the database that's been written in redis again if you look into the source code of this application there is no release code into the",
    "start": "466199",
    "end": "472800"
  },
  {
    "text": "application that it's writing this data into redis it's just doing HTTP calls by using the SDK the Dapper SDK but you can",
    "start": "472800",
    "end": "480000"
  },
  {
    "text": "do just plain HTTP calls or jrpc calls and this part below here is receiving the notifications uh asynchronously",
    "start": "480000",
    "end": "487139"
  },
  {
    "text": "right so when I click the button it goes to the service and fetch all the notifications that that service has received it's pretty simple but I would",
    "start": "487139",
    "end": "494580"
  },
  {
    "text": "love to do something like hello cubecon all right I want my emojis in there unfortunately that's not working just",
    "start": "494580",
    "end": "501300"
  },
  {
    "text": "yet but we will try to fix that in a while one more thing that I want to show you here is that Dapper is being conf",
    "start": "501300",
    "end": "508620"
  },
  {
    "text": "it's running inside kubernetes that means that we can configure Dapper using kubernetes resources and for that as I",
    "start": "508620",
    "end": "514260"
  },
  {
    "text": "mentioned at the beginning we have components right so in for this demo you need to",
    "start": "514260",
    "end": "519899"
  },
  {
    "text": "see here that I have two components configured the state store component and also the pops up component again",
    "start": "519899",
    "end": "525300"
  },
  {
    "text": "obstructing away the infrastructure that it's being used to store data and also send not async notifications between uh",
    "start": "525300",
    "end": "531600"
  },
  {
    "text": "between services in this case so let's move to talk a little bit about webassembly now so I can click again you",
    "start": "531600",
    "end": "538260"
  },
  {
    "text": "can click a bit now on the presentation let's do this that's why you brought",
    "start": "538260",
    "end": "545060"
  },
  {
    "text": "check this out click okay two clicks",
    "start": "545880",
    "end": "553740"
  },
  {
    "text": "I'm sorry that I cannot be there but let me introduce myself first my name is",
    "start": "553740",
    "end": "560459"
  },
  {
    "text": "Daisha you can call me no idea where I'm a Microsoft mypear Deadpool my tender and the now working Intel",
    "start": "560459",
    "end": "568980"
  },
  {
    "text": "so what's a step step is distributed application no time is for",
    "start": "568980",
    "end": "574500"
  },
  {
    "text": "the use any code of framework to write her macro services and the wrong",
    "start": "574500",
    "end": "582260"
  },
  {
    "text": "enclosed or age in introduction and let's unless you this use HTTP API",
    "start": "582260",
    "end": "590700"
  },
  {
    "text": "or grpc and grpc API to provide many useful and amazing features",
    "start": "590700",
    "end": "597600"
  },
  {
    "text": "this is the architecture as a like a service management",
    "start": "597600",
    "end": "603800"
  },
  {
    "text": "Double Draw as a sidecar we can use this directly without or without the code",
    "start": "603800",
    "end": "611220"
  },
  {
    "text": "changing and changes but the questions come how can I change the logical inside",
    "start": "611220",
    "end": "618660"
  },
  {
    "text": "the deposited cells for example I have many my company has",
    "start": "618660",
    "end": "626580"
  },
  {
    "text": "many applications they all need to check a circle to ensure the security",
    "start": "626580",
    "end": "634500"
  },
  {
    "text": "in HTTP requests this is this is not a published and I",
    "start": "634500",
    "end": "642000"
  },
  {
    "text": "can also Upstream this and I do not want to",
    "start": "642000",
    "end": "648079"
  },
  {
    "text": "rewrite write this logically every",
    "start": "648079",
    "end": "653220"
  },
  {
    "text": "application not codes so how can I use it in tablet",
    "start": "653220",
    "end": "659839"
  },
  {
    "text": "a a First Source a quick source is that I",
    "start": "660240",
    "end": "667320"
  },
  {
    "text": "can release a new one but this is very hard difficult since since",
    "start": "667320",
    "end": "674360"
  },
  {
    "text": "uh since the Dapper have have many reports and we need to think since the",
    "start": "674360",
    "end": "681779"
  },
  {
    "text": "Upstream versus the uh this is a big job",
    "start": "681779",
    "end": "688040"
  },
  {
    "text": "and provide uh useful feature with wire",
    "start": "690680",
    "end": "697200"
  },
  {
    "text": "so the middleware supports users do some do some do some change in",
    "start": "697200",
    "end": "705899"
  },
  {
    "text": "requests or response but this is building it which means this is hard",
    "start": "705899",
    "end": "711300"
  },
  {
    "text": "code with limited configuration users can also write this their old midwire",
    "start": "711300",
    "end": "721320"
  },
  {
    "text": "which which is another public this is a lot of flexible",
    "start": "721320",
    "end": "726600"
  },
  {
    "text": "so how to do a how to do this product symbolic",
    "start": "726600",
    "end": "733079"
  },
  {
    "text": "we can use the vaccine yeah you always with the help of vaccine we",
    "start": "733079",
    "end": "740700"
  },
  {
    "text": "can we can use it uh we can we can dramatic load and and with highly",
    "start": "740700",
    "end": "748860"
  },
  {
    "text": "community pool this is more than flexible",
    "start": "748860",
    "end": "754040"
  },
  {
    "text": "great so what uh so how how we how we implement it and how to use it pay paste",
    "start": "756600",
    "end": "764040"
  },
  {
    "text": "continue to say thanks great thanks",
    "start": "764040",
    "end": "771720"
  },
  {
    "text": "all right so uh so we let's see let's click yeah I thought it was good",
    "start": "771720",
    "end": "777899"
  },
  {
    "text": "clicking come on hello there you go all right",
    "start": "777899",
    "end": "784339"
  },
  {
    "text": "uh so anyway uh long which uh we'll think along the way in different",
    "start": "785519",
    "end": "791100"
  },
  {
    "text": "ways um was the first person to take action on the webassembly um kind of idea",
    "start": "791100",
    "end": "798660"
  },
  {
    "text": "streams that came out of dapper and while I didn't uh join into this conversation um",
    "start": "798660",
    "end": "805019"
  },
  {
    "text": "until later uh it's interesting that this whole what to do with webassembly",
    "start": "805019",
    "end": "810180"
  },
  {
    "text": "and Dapper started in the end of 2019. and um as I was starting doing the like",
    "start": "810180",
    "end": "816300"
  },
  {
    "text": "archaeological digs in the issue lists um the first thing I found was people",
    "start": "816300",
    "end": "821339"
  },
  {
    "text": "wondering well should psychologic itself be compiled down to this this by code",
    "start": "821339",
    "end": "827820"
  },
  {
    "text": "format called wasm so that an application can embed the sidecar literally in the same process",
    "start": "827820",
    "end": "834620"
  },
  {
    "text": "which is kind of an interesting thing because webassembly is is basically a way for you to to run other third-party",
    "start": "834620",
    "end": "843060"
  },
  {
    "text": "code inside your same process without actually launching an another process or anything",
    "start": "843060",
    "end": "848279"
  },
  {
    "text": "and um and then there was also questions of the other way around should should Dapper",
    "start": "848279",
    "end": "853399"
  },
  {
    "text": "allow applications who have been compiled to this like code format to just basically run workloads similar to",
    "start": "853399",
    "end": "859079"
  },
  {
    "text": "like how how Docker might run a container um and uh I think something happened in",
    "start": "859079",
    "end": "864779"
  },
  {
    "text": "2020 that got everybody busy uh so there wasn't so much action going on in the",
    "start": "864779",
    "end": "869880"
  },
  {
    "text": "web assembly front uh well well people were putting their kids into virtual education stuff but uh late",
    "start": "869880",
    "end": "877680"
  },
  {
    "text": "half of 2021 um this whole web assembly otherwise known as wasm just like the file",
    "start": "877680",
    "end": "883860"
  },
  {
    "text": "extension name and stands for webassembly module uh that that picked",
    "start": "883860",
    "end": "890100"
  },
  {
    "text": "up again through some tension about how to handle this this kind of like continual crisis in Dover which is like",
    "start": "890100",
    "end": "896699"
  },
  {
    "text": "uh we've got a lot of a lot of community a lot of different types of features",
    "start": "896699",
    "end": "903180"
  },
  {
    "text": "that want to get into the same build you have uh conflicts people are like okay what",
    "start": "903180",
    "end": "909480"
  },
  {
    "text": "about the size or the memory usage and maintenance uh the main maintainer is",
    "start": "909480",
    "end": "914699"
  },
  {
    "text": "going to be able to afford to do code reviews and patch patch maintenance on hundreds of of components in the same",
    "start": "914699",
    "end": "921240"
  },
  {
    "text": "repository or repositories um so basically you could see this this",
    "start": "921240",
    "end": "927540"
  },
  {
    "text": "trend of like what to do about extensibility like how do we get how do we make it more flexible and one of the",
    "start": "927540",
    "end": "933660"
  },
  {
    "text": "options there which I'll have a slide next on is is like webassembly as it happened with a discussion around grpc",
    "start": "933660",
    "end": "941519"
  },
  {
    "text": "um but anyway timeline wise uh peripheral concept happened in design form in late 2021 but it wasn't able to",
    "start": "941519",
    "end": "949260"
  },
  {
    "text": "be action for a little bit later um and um yeah so Deborah first had web assembly support in 1.8 and then we",
    "start": "949260",
    "end": "957000"
  },
  {
    "text": "revised it again later last year so let's get into it a little bit more I",
    "start": "957000",
    "end": "962940"
  },
  {
    "text": "know these things are kind of abstract and I say about like embedded so literally meaning that if you're using",
    "start": "962940",
    "end": "969779"
  },
  {
    "text": "webassembly inside of an application like you have a say a grow application that's compiled with the webassembly",
    "start": "969779",
    "end": "975660"
  },
  {
    "text": "runtime inside you wouldn't be able to know is actually launching these VMS because there's no side effect no",
    "start": "975660",
    "end": "981959"
  },
  {
    "text": "process IDs or anything else like that happening it's just local code so when you look at this as far as a way",
    "start": "981959",
    "end": "989100"
  },
  {
    "text": "to run third party code compared to grpc grpc has some side effects on your",
    "start": "989100",
    "end": "995820"
  },
  {
    "text": "deployment right even if you're doing fancy stuff like Unix domain sockets and things there will be some side effects",
    "start": "995820",
    "end": "1002360"
  },
  {
    "text": "at least you'll have to define a service definition and share those between the code bases and stuff",
    "start": "1002360",
    "end": "1009259"
  },
  {
    "text": "um and um you know both of them can get the job done but one of the interesting things is is that where webassembly can",
    "start": "1009259",
    "end": "1015920"
  },
  {
    "text": "be used and it can't be used for all tasks because it's limited um the uh there is no deployment",
    "start": "1015920",
    "end": "1023360"
  },
  {
    "text": "um real task there the only thing you have on your hands is like what what",
    "start": "1023360",
    "end": "1028819"
  },
  {
    "text": "code am I going to allow to be loaded into this process and where am I going to get it from like are you going to get",
    "start": "1028819",
    "end": "1034339"
  },
  {
    "text": "it from a disk or a oci repository stuff like that so effectively if you can",
    "start": "1034339",
    "end": "1041438"
  },
  {
    "text": "chop pieces of functionality out if you're in a golang ecosystem you may",
    "start": "1041439",
    "end": "1047000"
  },
  {
    "text": "just do that without even carrying um about like supporting multiple languages you may still be writing your",
    "start": "1047000",
    "end": "1053540"
  },
  {
    "text": "components and go but of course webassembly being a virtual machine you can compile other languages to that that",
    "start": "1053540",
    "end": "1060380"
  },
  {
    "text": "by code format so it is a polyglot solution as well",
    "start": "1060380",
    "end": "1066440"
  },
  {
    "text": "so the the design that long um had uh had proposed to the community",
    "start": "1066440",
    "end": "1073000"
  },
  {
    "text": "was to use a component uh literally component uh middleware for HTTP",
    "start": "1073000",
    "end": "1078740"
  },
  {
    "text": "middleware and allow that chain to have um uh you know a filter that could be",
    "start": "1078740",
    "end": "1084440"
  },
  {
    "text": "implemented in webassembly as well as the native built-in features and those of you familiar with like istio and",
    "start": "1084440",
    "end": "1090620"
  },
  {
    "text": "Envoy will know that Envoy also has the ability to have webassembly in its",
    "start": "1090620",
    "end": "1095660"
  },
  {
    "text": "filter chains um so it was it's not like a completely um different idea but it's an easy way",
    "start": "1095660",
    "end": "1102559"
  },
  {
    "text": "to get through sort of like analysis paralysis like what to do with something if you if you pick pick a type of",
    "start": "1102559",
    "end": "1108620"
  },
  {
    "text": "Technology that's easy to relate to and it's one that tends to new customizations um it's a it's a it was I think a",
    "start": "1108620",
    "end": "1115220"
  },
  {
    "text": "perfect choice um the problem was was that this was um at a point where the web assembly",
    "start": "1115220",
    "end": "1121100"
  },
  {
    "text": "Community wasn't so strong and go yet and there wasn't a way to embed a",
    "start": "1121100",
    "end": "1126220"
  },
  {
    "text": "webassembly virtual machine into a go process without relying on platforms",
    "start": "1126220",
    "end": "1131600"
  },
  {
    "text": "shared libraries that were you know like C libraries and Dapper has sort of like",
    "start": "1131600",
    "end": "1137480"
  },
  {
    "text": "a strict uh no on on dependencies of shared libraries right",
    "start": "1137480",
    "end": "1143720"
  },
  {
    "text": "so that was parked um until long discover the project that I work on with uh originally just with",
    "start": "1143720",
    "end": "1150740"
  },
  {
    "text": "the takesh janeta who also worked did a lot of the work and the and voynistio webassembly stuff but it's a large",
    "start": "1150740",
    "end": "1157280"
  },
  {
    "text": "community now um which is a zero dependency webassembly run time for go and so that",
    "start": "1157280",
    "end": "1164000"
  },
  {
    "text": "sort of like fit the bill the first version um long basically just you know handcrafted webassembly to prove the",
    "start": "1164000",
    "end": "1170360"
  },
  {
    "text": "point um but that's not very developer friendly basically I don't even know if the source was there",
    "start": "1170360",
    "end": "1177200"
  },
  {
    "text": "um but uh we said okay well if you're going to do something in a fairly difficult programming ecosystem",
    "start": "1177200",
    "end": "1183400"
  },
  {
    "text": "like webassembly you're going to need SDK support so we leaned on something called ypc which would allow you to you",
    "start": "1183400",
    "end": "1192440"
  },
  {
    "text": "know have functions like this uh look up by name and then you just Implement like a byte Handler in and out to do whatever",
    "start": "1192440",
    "end": "1199039"
  },
  {
    "text": "it was and so in this case the first simple version was like okay let's just rewrite requests and um and get get this",
    "start": "1199039",
    "end": "1206720"
  },
  {
    "text": "shipped out the door so people can play with it immediately people ask for more they're like okay well I don't want to just do",
    "start": "1206720",
    "end": "1212720"
  },
  {
    "text": "rewrites I want to change everything um and that's exactly what you want to",
    "start": "1212720",
    "end": "1217820"
  },
  {
    "text": "do with the proof of concept you want you want to get end users um not just like you know theoretical stuff going on",
    "start": "1217820",
    "end": "1224600"
  },
  {
    "text": "and uh during that period of time people were asking well why don't we use the same thing that Envoy does which is the",
    "start": "1224600",
    "end": "1230179"
  },
  {
    "text": "proxy wasm which is what they do the problem with that was that proxy Wells and was basically modeled around and we",
    "start": "1230179",
    "end": "1236419"
  },
  {
    "text": "itself um and the type of life cycle and also the hooks were very much",
    "start": "1236419",
    "end": "1242980"
  },
  {
    "text": "related to that so for example it had you know layers below HTTP abstraction",
    "start": "1242980",
    "end": "1250340"
  },
  {
    "text": "and even grpc abstraction even some time based tasks and things all in the same",
    "start": "1250340",
    "end": "1255440"
  },
  {
    "text": "box and that that just wasn't a clean way for a component that's literally",
    "start": "1255440",
    "end": "1260539"
  },
  {
    "text": "supposed to be HTTP and HTTP Alone um so we actually created a a different",
    "start": "1260539",
    "end": "1268520"
  },
  {
    "text": "like SDK base in in webassembly and compilation you use this word like ABI",
    "start": "1268520",
    "end": "1274700"
  },
  {
    "text": "instead of API so basically if apis are for services apis or how compilers communicate and um we designed this to",
    "start": "1274700",
    "end": "1282799"
  },
  {
    "text": "be a lot faster than proximalism but the uh but the main thing was actually to make it more developer friendly",
    "start": "1282799",
    "end": "1288320"
  },
  {
    "text": "um so for example you can do async Hooks and like offload things on the request response but you can also do completely",
    "start": "1288320",
    "end": "1294260"
  },
  {
    "text": "synchronous so you can see this um here that you have uh not just some",
    "start": "1294260",
    "end": "1299900"
  },
  {
    "text": "URI substitution but also the ability to do a static response straight in the web",
    "start": "1299900",
    "end": "1306020"
  },
  {
    "text": "assembly so that actually doesn't doesn't ever jump out to the host of those lines this is far far faster",
    "start": "1306020",
    "end": "1313220"
  },
  {
    "text": "um and uh yeah so that's how it kind of came out from a design perspective and",
    "start": "1313220",
    "end": "1319340"
  },
  {
    "text": "Mauricio is going to show you like exactly it working yeah now we just like see it working like in the example that",
    "start": "1319340",
    "end": "1325280"
  },
  {
    "text": "I was showing before we are just going to extend that and for extending the example that I've created before I show",
    "start": "1325280",
    "end": "1330740"
  },
  {
    "text": "you the application sending some requests to the database and stuff what we want to do is we want to extend that using the HTTP middleware component that",
    "start": "1330740",
    "end": "1338179"
  },
  {
    "text": "was introduced by by long here and I need and we are going to use the wazira runtime that it's already embedded into",
    "start": "1338179",
    "end": "1344659"
  },
  {
    "text": "that upper side card to run that right in order to do that we need to create the filter wasn't file in this case like",
    "start": "1344659",
    "end": "1350000"
  },
  {
    "text": "if like an HTTP filter kind of thing that we are going to include in our HTTP chain and for that we need two resources",
    "start": "1350000",
    "end": "1356780"
  },
  {
    "text": "two configuration resources in in kubernetes the middleware component and the configuration resource that it will allow me to you know connect my",
    "start": "1356780",
    "end": "1363320"
  },
  {
    "text": "application and said Okay I want the filter in this specific application uh so let's jump into that let's do that",
    "start": "1363320",
    "end": "1369799"
  },
  {
    "text": "pretty quickly because I'm pretty sure that we will run out of time uh so first thing it's uh let's take a look at the",
    "start": "1369799",
    "end": "1376880"
  },
  {
    "text": "filter go again we are writing a filtering goal and then we are going to use tin Eagle to compile that into",
    "start": "1376880",
    "end": "1382520"
  },
  {
    "text": "webassembly so let me cut this and let's see if you can see it okay",
    "start": "1382520",
    "end": "1388520"
  },
  {
    "text": "this is a simple HTTP filter that it like Adrian was showing but it's you know a little bit more tailored to the",
    "start": "1388520",
    "end": "1394159"
  },
  {
    "text": "the thing the application that we are writing here you can see that you know the handle request code here it's basically receiving an HTTP request on",
    "start": "1394159",
    "end": "1401000"
  },
  {
    "text": "an HTTP response and then inside the the body here you can just actually do whatever you want with their request you",
    "start": "1401000",
    "end": "1406820"
  },
  {
    "text": "can write any kind of filter here and what we are doing here simple thing we are just parsing for emoji tags and then",
    "start": "1406820",
    "end": "1412220"
  },
  {
    "text": "just replacing that with the Emoji code in there and unfortunately our platform Jesus go this is business code this is",
    "start": "1412220",
    "end": "1419059"
  },
  {
    "text": "business code yeah this is whatever we want to do and this is kind of like the extension that we want to build without changing neither our application or the",
    "start": "1419059",
    "end": "1426380"
  },
  {
    "text": "upper binaries in this case right like we want to inject this code in the platform unfortunately our platform doesn't support Cuts today we have a CDE",
    "start": "1426380",
    "end": "1433400"
  },
  {
    "text": "and we will just we will need to patch it later on but for now this is kind of like what we have so as I mentioned",
    "start": "1433400",
    "end": "1438919"
  },
  {
    "text": "before we can use tiny go another open source project that allows us to take that what that go file and transform it",
    "start": "1438919",
    "end": "1445400"
  },
  {
    "text": "into a wasn't file right and we just run the compilation and then of course because now we have a file here in our",
    "start": "1445400",
    "end": "1451700"
  },
  {
    "text": "file system we need to make it available to our application that is running on kubernetes right so what I what what we",
    "start": "1451700",
    "end": "1457520"
  },
  {
    "text": "have done now and that's kind of like the the initial solution that we have but we are looking into different approaches is to you know I will wrap",
    "start": "1457520",
    "end": "1463340"
  },
  {
    "text": "this into a config map put it in my cluster and then mount it as a volume in my in my pod so I can actually consume",
    "start": "1463340",
    "end": "1469940"
  },
  {
    "text": "it from there but as I mentioned before we have two uh two files here two resources the first one is called",
    "start": "1469940",
    "end": "1476659"
  },
  {
    "text": "everywhere as you can see here the middleware component allows us to say okay we have a like an HTTP filter in",
    "start": "1476659",
    "end": "1483260"
  },
  {
    "text": "this case that it's going to be written in wasn't and we are allowed here to set a path of that file so in this case",
    "start": "1483260",
    "end": "1489080"
  },
  {
    "text": "again it's a mounted volume somebody will need to mount this and then just consume that file here's where we are",
    "start": "1489080",
    "end": "1494600"
  },
  {
    "text": "looking at the options for oci Registries so we can just actually fetch these Watson files from from container",
    "start": "1494600",
    "end": "1499820"
  },
  {
    "text": "Registries right like it should be much easier to make that happen and finally the other thing that I want to show here is resources configuration which is how",
    "start": "1499820",
    "end": "1507020"
  },
  {
    "text": "we wire things together right like again it's an HTTP chain right like we can write multiple filters that's why we",
    "start": "1507020",
    "end": "1512360"
  },
  {
    "text": "have an array here and for now we just have this simple filter that it's implemented using the middleware component called wasn't right I already",
    "start": "1512360",
    "end": "1519559"
  },
  {
    "text": "applied this to to my cluster so if I do get components again you will see that",
    "start": "1519559",
    "end": "1524659"
  },
  {
    "text": "there is a wasam component there already and I also have like a configuration adapter configuration in this case that",
    "start": "1524659",
    "end": "1531140"
  },
  {
    "text": "uh it's it's again the app config that I need to wire into my application so let me apply my resources that are a little",
    "start": "1531140",
    "end": "1538340"
  },
  {
    "text": "bit with all this modifications so we can mount the volume I will show you that after applying it so this is basically now configuring my",
    "start": "1538340",
    "end": "1545539"
  },
  {
    "text": "application just the configuration change to actually start using this filter now let's take a look at the",
    "start": "1545539",
    "end": "1551179"
  },
  {
    "text": "deployment file for the application resources Watson and what you can see here is that",
    "start": "1551179",
    "end": "1558740"
  },
  {
    "text": "my front-end application now it's it's actually mounting mounting a volume from a config map that contains the you know",
    "start": "1558740",
    "end": "1564919"
  },
  {
    "text": "the wasn't filter and then remember that I I don't want like my application that is running the",
    "start": "1564919",
    "end": "1570140"
  },
  {
    "text": "front-end application doesn't have anything to do with the with the filter itself right like the application is not even aware of that that's why I need to",
    "start": "1570140",
    "end": "1576919"
  },
  {
    "text": "use this adapter annotation to let the Dapper sidecar know that it needs to mount the volume under this path and",
    "start": "1576919",
    "end": "1583520"
  },
  {
    "text": "that we are going to consume that config that basically contains all the filters the array of filters that we want to Define for our application as soon as",
    "start": "1583520",
    "end": "1590059"
  },
  {
    "text": "this configuration is applied and let's take a look at the pods here just to make sure that you know my latest version was deployed like 46 seconds ago",
    "start": "1590059",
    "end": "1598159"
  },
  {
    "text": "we can go here and do again the port forwarding so we can access the application and",
    "start": "1598159",
    "end": "1604580"
  },
  {
    "text": "let's go here to Safari let's refresh to make sure that it's still there it still has the data right but if I ho if I say",
    "start": "1604580",
    "end": "1611840"
  },
  {
    "text": "hi now we should be able to see uh this working hey then now we have emojis guys this is",
    "start": "1611840",
    "end": "1618320"
  },
  {
    "text": "this is impressive but but if you thought that like HTTP filters are boring take a look at this this is this",
    "start": "1618320",
    "end": "1624799"
  },
  {
    "text": "is this is gold and because it's happening at the front end level right like all the backend Services now for example the notification service will",
    "start": "1624799",
    "end": "1631580"
  },
  {
    "text": "have you know already like that payload everything else we will actually see the result of that filter as I mentioned",
    "start": "1631580",
    "end": "1637940"
  },
  {
    "text": "before unfortunately we don't have guts so if I do high cut yeah this that's",
    "start": "1637940",
    "end": "1643100"
  },
  {
    "text": "been censored this is where you add like your business logic whatever you want to do with the request you can do there but",
    "start": "1643100",
    "end": "1648559"
  },
  {
    "text": "if you uh actually are a dog lover like myself you have some some dogs again in every",
    "start": "1648559",
    "end": "1654320"
  },
  {
    "text": "service so that's what I want to show like how do you wire things up together this is again just the start of one of",
    "start": "1654320",
    "end": "1660620"
  },
  {
    "text": "the things that you can do yeah interesting things that I thought about was that you know if you did need",
    "start": "1660620",
    "end": "1666799"
  },
  {
    "text": "if you did get the cat enabled version right exactly you just basically roll it out like a config change uh the other",
    "start": "1666799",
    "end": "1674000"
  },
  {
    "text": "thing is that the uh you didn't see any pod side effects because these are actually you know it's embedded it's in",
    "start": "1674000",
    "end": "1679880"
  },
  {
    "text": "the same process of the sidecar so the sidecar is actually inlining that logic within uh within it next obviously",
    "start": "1679880",
    "end": "1685520"
  },
  {
    "text": "that's kind of cool yeah so we saw how Dapper in general can decouple things",
    "start": "1685520",
    "end": "1691460"
  },
  {
    "text": "which was the first part of the presentation and and uh and this is uh the first experience with um",
    "start": "1691460",
    "end": "1698200"
  },
  {
    "text": "webassemblies to to tune the HTTP middleware chain um and and everything we talked about is",
    "start": "1698200",
    "end": "1704720"
  },
  {
    "text": "not like okay it's it's you know wait until next year and then you can download it or you know do some patch",
    "start": "1704720",
    "end": "1710600"
  },
  {
    "text": "Tech things this is already out in uh Endeavor 110 right so",
    "start": "1710600",
    "end": "1716000"
  },
  {
    "text": "um you can just do this now no hacks required um the uh what's next",
    "start": "1716000",
    "end": "1722600"
  },
  {
    "text": "well we did notice that um you know istio has a little bit more experience in webassembly so for How To Source the",
    "start": "1722600",
    "end": "1730400"
  },
  {
    "text": "webassembly files uh we pretty much decided to just go ahead and do exactly how istio is doing that for Envoy to use",
    "start": "1730400",
    "end": "1737120"
  },
  {
    "text": "like oci based paths or or the HTTP refs whatever",
    "start": "1737120",
    "end": "1743120"
  },
  {
    "text": "um if you're interested in this kind of work it's actually not terribly difficult so you could help us",
    "start": "1743120",
    "end": "1748279"
  },
  {
    "text": "contribute there and get some experience with webassembly it'd be fun uh we also have another component which",
    "start": "1748279",
    "end": "1753980"
  },
  {
    "text": "is pretty interesting um uh that's that's already half implemented output binding so",
    "start": "1753980",
    "end": "1759559"
  },
  {
    "text": "um because we uh in Dapper it can handle things not just HTTP you saw that there's messaging subscriptions all",
    "start": "1759559",
    "end": "1766100"
  },
  {
    "text": "sorts of stuff right so output bindings you can imagine you have um you know inbound events and then you can have a",
    "start": "1766100",
    "end": "1771980"
  },
  {
    "text": "message to processor or uh that's just dangling on that and actually run with with a was on module instead of um",
    "start": "1771980",
    "end": "1780200"
  },
  {
    "text": "instead of you know routing it to another component so you can get like fast like",
    "start": "1780200",
    "end": "1786279"
  },
  {
    "text": "capabilities in adapter that way and then we still have the ongoing discussions about generic extensibility",
    "start": "1786279",
    "end": "1792620"
  },
  {
    "text": "and I think the thing is is that bringing in more experience about different well-understood places of um",
    "start": "1792620",
    "end": "1798799"
  },
  {
    "text": "of code and and using webassembly is a great way and much easier than just",
    "start": "1798799",
    "end": "1804200"
  },
  {
    "text": "going to generic extensibility first there's too much context to learn so let's sum it up yep",
    "start": "1804200",
    "end": "1812179"
  },
  {
    "text": "okay uh so we've got adopters got this this distributed application framework basically uh and um and we have a way",
    "start": "1812179",
    "end": "1820940"
  },
  {
    "text": "that um developers who basically yielded to the framework and said like okay I'm gonna I'm not gonna give all this",
    "start": "1820940",
    "end": "1826340"
  },
  {
    "text": "responsibility to the sidecar now they can actually influence the behavior of the sidecar without custom builds which",
    "start": "1826340",
    "end": "1832700"
  },
  {
    "text": "is awesome um that was uh made possible uh in part because of uh was here the project I",
    "start": "1832700",
    "end": "1839600"
  },
  {
    "text": "work on because Dapper happens to be like a a you know pure go project uh that was quite cool and so we kind of",
    "start": "1839600",
    "end": "1847460"
  },
  {
    "text": "joined forces to try to make that um people be able to to have more flexible infrastructure without having",
    "start": "1847460",
    "end": "1854539"
  },
  {
    "text": "all the work of doing custom builds uh and the maintenance they're in yeah I think that's that's a very important",
    "start": "1854539",
    "end": "1860179"
  },
  {
    "text": "point right like we are adding kind of like a different level of configuration and fine tuning for platforms and for projects that are already being built",
    "start": "1860179",
    "end": "1866299"
  },
  {
    "text": "and I do see this happening more and more often in different cncf projects this is kind of like becoming a way of",
    "start": "1866299",
    "end": "1871880"
  },
  {
    "text": "extend ending projects without changing them and having a way of deploying configuration code instead of upgrading",
    "start": "1871880",
    "end": "1877880"
  },
  {
    "text": "the entire stack because you need kind of like to add new extension points yeah so uh we're gonna hang out a little bit",
    "start": "1877880",
    "end": "1885320"
  },
  {
    "text": "for questions uh if you have any but uh thanks a lot for joining in and we do want to thank long even though I",
    "start": "1885320",
    "end": "1891620"
  },
  {
    "text": "couldn't physically be here because uh he was really pivotal in all of these um design and implementations so yeah thank",
    "start": "1891620",
    "end": "1899240"
  },
  {
    "text": "you very much",
    "start": "1899240",
    "end": "1901600"
  },
  {
    "text": "any questions I know that we throw a lot of",
    "start": "1905779",
    "end": "1911840"
  },
  {
    "text": "information at you of course yeah High system support that's for use yeah",
    "start": "1911840",
    "end": "1919279"
  },
  {
    "text": "so uh the question was what about file system support so uh webassembly uh by",
    "start": "1919279",
    "end": "1925220"
  },
  {
    "text": "default doesn't have any ability to access files on the host that's running it but there is a there is a system",
    "start": "1925220",
    "end": "1932240"
  },
  {
    "text": "called Wazi which which allows you to basically have system calls like uh file file open type of commands and uh was",
    "start": "1932240",
    "end": "1939740"
  },
  {
    "text": "there the runtime that Dapper uses supports that so",
    "start": "1939740",
    "end": "1945140"
  },
  {
    "text": "um sometimes people are using files for like configurations or they want to have like a sqlite database that they're that",
    "start": "1945140",
    "end": "1951440"
  },
  {
    "text": "they're using inside of their their app logic and it's not actually a very difficult thing to to add it's more like",
    "start": "1951440",
    "end": "1958159"
  },
  {
    "text": "questions on on how to bound that um and um you know what I would suggest",
    "start": "1958159",
    "end": "1964460"
  },
  {
    "text": "for folks who who have a use case that that requires a file system to bring that use case with the request into the",
    "start": "1964460",
    "end": "1972020"
  },
  {
    "text": "issues list and that way we make sure that whether it's read only or read right or or virtualized files so that",
    "start": "1972020",
    "end": "1979940"
  },
  {
    "text": "that gets into the into the configuration right now the configuration is pretty bare we just",
    "start": "1979940",
    "end": "1985279"
  },
  {
    "text": "have uh wasm and that's it so um so basically it's an iteration and I",
    "start": "1985279",
    "end": "1991220"
  },
  {
    "text": "don't see any problem with with being able to implement file support it's just a matter of of how and what people want",
    "start": "1991220",
    "end": "1997159"
  },
  {
    "text": "to do with it huh other questions okay",
    "start": "1997159",
    "end": "2004380"
  },
  {
    "text": "it's going to load this every time or it's just one time",
    "start": "2012000",
    "end": "2017460"
  },
  {
    "text": "yeah so the question was it like what's the life cycle of the of the webassembly",
    "start": "2019000",
    "end": "2024399"
  },
  {
    "text": "module and um basically uh at the moment uh Dapper is not doing anything like uh",
    "start": "2024399",
    "end": "2031659"
  },
  {
    "text": "file watching or or like dynamically like looking at the file system to like",
    "start": "2031659",
    "end": "2036760"
  },
  {
    "text": "reload itself so the compilation phase happens before a request occurs and",
    "start": "2036760",
    "end": "2042399"
  },
  {
    "text": "that's a that's a one-time thing um so so for example when it when it loads a module it translates into",
    "start": "2042399",
    "end": "2048580"
  },
  {
    "text": "machine code that actually go will invoke it's amazing we have a we have a kind of like a page on how that works",
    "start": "2048580",
    "end": "2054940"
  },
  {
    "text": "it's really cool um but then that's just how they're in memory um you know and all requests go through",
    "start": "2054940",
    "end": "2061419"
  },
  {
    "text": "it if you need uh concurrencies actually handle it in in Dapper itself so Dapper",
    "start": "2061419",
    "end": "2067358"
  },
  {
    "text": "has controls for how many um how many simultaneous requests can go through and so that's actually what's",
    "start": "2067359",
    "end": "2073179"
  },
  {
    "text": "gating like how many of these module instances are going on but the but this",
    "start": "2073179",
    "end": "2078700"
  },
  {
    "text": "the actual module is held static until reboot basically yeah so for from the",
    "start": "2078700",
    "end": "2084460"
  },
  {
    "text": "kubernetes point of view right like when the bullet starts it mounts the volume and then it reads the file and that's",
    "start": "2084460",
    "end": "2089500"
  },
  {
    "text": "the version of the file that it's going to use for its own like life cycle right",
    "start": "2089500",
    "end": "2094980"
  },
  {
    "text": "exactly so if you want to update it right now we don't have any refresh functionality uh you basically need to",
    "start": "2096760",
    "end": "2103060"
  },
  {
    "text": "update the file in the config map and then of course restart the bot right yeah yeah but that's coming right like",
    "start": "2103060",
    "end": "2109000"
  },
  {
    "text": "that's yeah some folks were like should there be a Dev mode like the watches the disc",
    "start": "2109000",
    "end": "2114040"
  },
  {
    "text": "and things like there there's um there's actually threads on this topic and the main thing is we we really wanted to",
    "start": "2114040",
    "end": "2120339"
  },
  {
    "text": "have all this stuff user driven so so if you have some specific use cases that'll that'll make the the config switches",
    "start": "2120339",
    "end": "2126640"
  },
  {
    "text": "much more relevant for everybody yeah and again the idea of having that repository with the step-by-step tutorial is that you can try it out at",
    "start": "2126640",
    "end": "2132760"
  },
  {
    "text": "the end of that reposter there is also a much more simpler example it's like you'll really need to install all these things you can just start with with you",
    "start": "2132760",
    "end": "2138760"
  },
  {
    "text": "know with well assembly and tiny gold but yeah like for a full version of one application running where you want to",
    "start": "2138760",
    "end": "2143920"
  },
  {
    "text": "try the life cycle operations and all that stuff give that a try thank you very much folks thanks again",
    "start": "2143920",
    "end": "2151720"
  },
  {
    "text": "foreign [Applause]",
    "start": "2151720",
    "end": "2155449"
  }
]