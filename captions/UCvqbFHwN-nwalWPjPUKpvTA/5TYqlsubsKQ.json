[
  {
    "text": "everybody Welcome to uh CS let's talk about uh versioning and releases uh so",
    "start": "199",
    "end": "7160"
  },
  {
    "text": "before I get started uh I did want to ask so who uses who's used cids already",
    "start": "7160",
    "end": "14799"
  },
  {
    "text": "hands up okay that's that's reassuring okay who's designed their own",
    "start": "14799",
    "end": "19840"
  },
  {
    "text": "CID okay even more reassuring excellent um okay so I'm going to you I wanted to",
    "start": "19840",
    "end": "25720"
  },
  {
    "text": "make sure that this is accessible to because it's a maintainer summit now not just contribute Summit so I'm going to",
    "start": "25720",
    "end": "30840"
  },
  {
    "text": "uh run through some stuff about uh making changes and uh you know how to do",
    "start": "30840",
    "end": "36320"
  },
  {
    "text": "that safely um because that'll help with explaining some of the reasons why uh some of the versioning stuff is harder",
    "start": "36320",
    "end": "42120"
  },
  {
    "text": "than it might seem okay so to get started making API changes is hard uh",
    "start": "42120",
    "end": "49239"
  },
  {
    "text": "and the core kubernetes apis have a lot of like best practices around making API changes and how to roll these out safely",
    "start": "49239",
    "end": "56840"
  },
  {
    "text": "um but CS don't have as much yet um yeah being the operative word",
    "start": "56840",
    "end": "62160"
  },
  {
    "text": "here so I want to classify C deployments into two types here an imple an",
    "start": "62160",
    "end": "67720"
  },
  {
    "text": "implementation specific one uh and an upstream one now the implementation specific one is when you deploy it",
    "start": "67720",
    "end": "74680"
  },
  {
    "text": "alongside and have it tightly C coupled to a controller implementation so those examples are like various cids EO",
    "start": "74680",
    "end": "82720"
  },
  {
    "text": "ones Link's ones conour ones those are all ones that I've actually looked at closely so there's plenty of other ones",
    "start": "82720",
    "end": "88000"
  },
  {
    "text": "but those are those are ones I know the best um it makes the versioning much simpler because you because it's tightly coupled",
    "start": "88000",
    "end": "95439"
  },
  {
    "text": "um there's a couple of examples of that that I'll talk about in a minute Upstream ones only sort of started",
    "start": "95439",
    "end": "101000"
  },
  {
    "text": "existing basically 5 years ago when we started get whpi um there's a few other ones now I see that in network policy",
    "start": "101000",
    "end": "106920"
  },
  {
    "text": "folk here hi um uh and yeah and I mean technically cluster API is kind of in",
    "start": "106920",
    "end": "112560"
  },
  {
    "text": "this sort of boat as well um but the big the biggest thing here is that all of",
    "start": "112560",
    "end": "118479"
  },
  {
    "text": "these are developed by the community as a specification rather than you rather than the controller necessarily being",
    "start": "118479",
    "end": "125079"
  },
  {
    "text": "included um but it does make versioning significantly more complex and that's what I wanted to talk about so let's",
    "start": "125079",
    "end": "131720"
  },
  {
    "text": "just go through uh important types of C versions We got the API version that's the V1 alpha 1 that we all uh know of um",
    "start": "131720",
    "end": "139680"
  },
  {
    "text": "it's in the that's in the uh API version field now uh there's also what I like to call the schema version which is like",
    "start": "139680",
    "end": "147440"
  },
  {
    "text": "the actual the the version of the schema U because you don't necessarily need to bump the API version field to change to",
    "start": "147440",
    "end": "154640"
  },
  {
    "text": "change the schema there are allowable changes they need to be round triable um",
    "start": "154640",
    "end": "159879"
  },
  {
    "text": "it's unusual that the schema version gets encoded anywhere um we do G API in a in a label for exactly this sort of",
    "start": "159879",
    "end": "166920"
  },
  {
    "text": "reason um yeah and for for core apis though generally the kubernetes version",
    "start": "166920",
    "end": "172560"
  },
  {
    "text": "is a schem of version so that means that you know when you bump a kubernetes release it's allowable to make round",
    "start": "172560",
    "end": "177959"
  },
  {
    "text": "triable changes and so effect L the schema version is the is the kubet version um and then uh very importantly",
    "start": "177959",
    "end": "184760"
  },
  {
    "text": "there's also the storage version which is the version that gets persisted to ATD a lot of the funkiness about making",
    "start": "184760",
    "end": "190319"
  },
  {
    "text": "changes comes down to being able to safely do storage version conversion",
    "start": "190319",
    "end": "196080"
  },
  {
    "text": "that's an awkward phrase but um yeah uh so being able to safely convert between different versions to whatever version",
    "start": "196080",
    "end": "201879"
  },
  {
    "text": "you need to store and so that's where the roundt triple requirements come wrong so okay there's a bunch of text on",
    "start": "201879",
    "end": "208799"
  },
  {
    "text": "this slide I wanted to include all of the points here so that you know everyone so everyone can see them but",
    "start": "208799",
    "end": "214280"
  },
  {
    "text": "the key one um is basically a lot of it is common sense stuff but the key one is",
    "start": "214280",
    "end": "219519"
  },
  {
    "text": "that your your your changes must be roundt triable I've used that word a lot am going to explain it in just a minute",
    "start": "219519",
    "end": "225599"
  },
  {
    "text": "um but so yeah this is like one of the key things is the round triable but all",
    "start": "225599",
    "end": "231640"
  },
  {
    "text": "of those things or the reason that that's a key thing is all of the stuff that's around that right like that you",
    "start": "231640",
    "end": "237159"
  },
  {
    "text": "know API clients can safely make a change in one version um and support multiple versions and then things like",
    "start": "237159",
    "end": "243519"
  },
  {
    "text": "that right so okay here's an example so this is a",
    "start": "243519",
    "end": "248720"
  },
  {
    "text": "very simple uh CID uh you this is the one this is actually the one that's in the uh the API changes docs um so this",
    "start": "248720",
    "end": "256880"
  },
  {
    "text": "is a frobo uh and it has a a width and a and a param field now the the sorry",
    "start": "256880",
    "end": "263759"
  },
  {
    "text": "height and a par field the width is hardcoded to 10 in the controller like the the controller just assumes that the",
    "start": "263759",
    "end": "269160"
  },
  {
    "text": "width is always 10 so at some point we want to uh increment this we want to change it so what we do is we say okay",
    "start": "269160",
    "end": "275440"
  },
  {
    "text": "we're going to make a change schema version is now 1.1 we've added a new width field that defaults to 10 so that",
    "start": "275440",
    "end": "283520"
  },
  {
    "text": "change itself because it's got a default and it's an optional field that that WID field is optional that so the object is",
    "start": "283520",
    "end": "290120"
  },
  {
    "text": "round triable uh so the API change itself is round triable because it's possible to have an object that is round",
    "start": "290120",
    "end": "295800"
  },
  {
    "text": "triable this object is also round triable because there's no change in",
    "start": "295800",
    "end": "301240"
  },
  {
    "text": "functionality between having a width of 10 explicitly specified and having a width of 10 implicitly specified by the",
    "start": "301240",
    "end": "308320"
  },
  {
    "text": "controller right so in this case this specific object is round triable however",
    "start": "308320",
    "end": "314440"
  },
  {
    "text": "if you set the width to 11 this specific object is no longer round triable because when it goes back if you take",
    "start": "314440",
    "end": "319919"
  },
  {
    "text": "this object roll it back to the version before the width gets set to 10 and then you roll it forward and the width will",
    "start": "319919",
    "end": "325919"
  },
  {
    "text": "be defaulted to 10 because the the width will go away right so so you can have an API change be roundt",
    "start": "325919",
    "end": "333520"
  },
  {
    "text": "triable but if you use the new functionality then that object is not round triable anymore right so this is",
    "start": "333520",
    "end": "339919"
  },
  {
    "text": "again one of the reasons why the This is complicated and the storage version is very important a lot of that depends on",
    "start": "339919",
    "end": "346240"
  },
  {
    "text": "the storage version that's used if you're using if you in this case you were using schema V1 cids as the storage",
    "start": "346240",
    "end": "352560"
  },
  {
    "text": "version then it's all good but again it's anyway I don't want to go into that",
    "start": "352560",
    "end": "359199"
  },
  {
    "text": "um so so here's another example um so this is using a 1.1 schema we've got a a",
    "start": "359199",
    "end": "364360"
  },
  {
    "text": "single PM field I put a nonsense PRM in there okay so now we change the schema",
    "start": "364360",
    "end": "369919"
  },
  {
    "text": "version 1.2 and we changed we pluralized this to a PM field so this change is",
    "start": "369919",
    "end": "376000"
  },
  {
    "text": "actually roundt triable as long as you have a conversion thing that can that will take that first value of the Pam",
    "start": "376000",
    "end": "381680"
  },
  {
    "text": "field and copy it back to the the singular param field in the previous release um so this specific object is",
    "start": "381680",
    "end": "389000"
  },
  {
    "text": "round triable as long as that is the case however once you add a second uh",
    "start": "389000",
    "end": "394080"
  },
  {
    "text": "Pam to the Pam field the object is no longer round triable because you can't round trip it right so I've gone on and",
    "start": "394080",
    "end": "400960"
  },
  {
    "text": "on about this but this is like the key thing that separates a a sort of a safe to add API change that does not run that",
    "start": "400960",
    "end": "408479"
  },
  {
    "text": "does not require an API rev from one that does um is that if it's if the if it is not possible at all to have the",
    "start": "408479",
    "end": "415800"
  },
  {
    "text": "API to have an object be round triable then it's not a safe change to make um",
    "start": "415800",
    "end": "420960"
  },
  {
    "text": "this is the quickest way that I've tried to sort of this is the quickest way that I've tried to sort of rule of thumb this",
    "start": "420960",
    "end": "426759"
  },
  {
    "text": "for myself is to is to be able to use that rubric to have a guess at you know",
    "start": "426759",
    "end": "432440"
  },
  {
    "text": "to get me started um I spent a lot of time doing API uh reviews these days um",
    "start": "432440",
    "end": "437720"
  },
  {
    "text": "okay so in the core we have access to feature Flags uh and so you can use",
    "start": "437720",
    "end": "445160"
  },
  {
    "text": "feature Flags to sort of stop people from using uh code that they're not expecting to to and but but at the same",
    "start": "445160",
    "end": "451400"
  },
  {
    "text": "time to allow people who are expecting or wanting to try out that code to opt into it right so again that's what",
    "start": "451400",
    "end": "457360"
  },
  {
    "text": "feature flag means um but traditional feature Flags aren't possible for cids because there's a single instance of the",
    "start": "457360",
    "end": "463000"
  },
  {
    "text": "c um you and it there's no way to make Fields defined but not usable right in a",
    "start": "463000",
    "end": "469639"
  },
  {
    "text": "CID um so again this is one where if you have an implementation specific CID then",
    "start": "469639",
    "end": "475280"
  },
  {
    "text": "you can build your feature Flag straight into the controller that manages that CID right so you know Forum if we add a",
    "start": "475280",
    "end": "481720"
  },
  {
    "text": "field to one of our objects that is a safe field a roundt triable field we can",
    "start": "481720",
    "end": "486759"
  },
  {
    "text": "add a feature flag that says use this field to cilium and then that will that will mean that you know if you don't",
    "start": "486759",
    "end": "493199"
  },
  {
    "text": "turn that feature flag on then the field if you set the field nothing will happen right and so that makes it you know that",
    "start": "493199",
    "end": "498240"
  },
  {
    "text": "makes it safe um but in for Upstream cids it's much much harder to do a",
    "start": "498240",
    "end": "504680"
  },
  {
    "text": "feature flag because you because you're decoupling the API spec from the controller implementation you you need",
    "start": "504680",
    "end": "512120"
  },
  {
    "text": "the specification needs a way to tell controllers which fields are experimental or which fields are you",
    "start": "512120",
    "end": "518080"
  },
  {
    "text": "know uh can be in use uh you know and you don't have a way to do that so",
    "start": "518080",
    "end": "524159"
  },
  {
    "text": "Gateway API has a solution we're not claiming it's the best solution but we have a solution uh we actually we 100%",
    "start": "524159",
    "end": "530560"
  },
  {
    "text": "sure it's not the best solution because we're improving on it already but so like yeah so I wanted to walk everybody",
    "start": "530560",
    "end": "536040"
  },
  {
    "text": "through this and I'll be honest I have specifically kept this talk not too long",
    "start": "536040",
    "end": "541440"
  },
  {
    "text": "because I would really like to have some time to have a good have a discussion about this as well um because I think",
    "start": "541440",
    "end": "547040"
  },
  {
    "text": "there's a lot that you is not is sort of hidden about some of this stuff and a",
    "start": "547040",
    "end": "552440"
  },
  {
    "text": "lot that we that is really important to talk about so yeah to go through how we",
    "start": "552440",
    "end": "558200"
  },
  {
    "text": "approximate feature Flags in Gateway pii so in Gateway pii we have two options for installing the specification there's",
    "start": "558200",
    "end": "565480"
  },
  {
    "text": "uh two versions of the install yams there's the standard ones which includes only stable objects and stable Fields",
    "start": "565480",
    "end": "571760"
  },
  {
    "text": "within those stable objects and then experimental which includes all Fields",
    "start": "571760",
    "end": "576959"
  },
  {
    "text": "including the experimental Fields the ones we're not sure are stable yet and experimental objects as well so we call",
    "start": "576959",
    "end": "583920"
  },
  {
    "text": "these channels so there's a standard Channel and the experimental Channel as it say as I said here that effectively",
    "start": "583920",
    "end": "590160"
  },
  {
    "text": "gives you one feature flag like are you using experimental or not right there's no finer grain control than you know are",
    "start": "590160",
    "end": "597120"
  },
  {
    "text": "you doing experimental are you allowing experimental stuff or are you not um and",
    "start": "597120",
    "end": "602360"
  },
  {
    "text": "so you know there's a bunch of there's a bunch of Pros here which is why we're doing it this way right like a cluster",
    "start": "602360",
    "end": "608320"
  },
  {
    "text": "owner can decide if they want standard or experimental um you know the implementations generally can use a",
    "start": "608320",
    "end": "615560"
  },
  {
    "text": "single set of uh go code to handle both cases because they're the same objects uh and it's the same go types underlying",
    "start": "615560",
    "end": "622120"
  },
  {
    "text": "both of these things some of in some of them when you're using standard there's a bunch of fields that just will never",
    "start": "622120",
    "end": "627160"
  },
  {
    "text": "be populated because they're not present in the C definition so when your code is reading them you you you don't have to",
    "start": "627160",
    "end": "633200"
  },
  {
    "text": "worry about you can handle them in the experimental case and then the standard Cas is Al is Al is already handled um",
    "start": "633200",
    "end": "640839"
  },
  {
    "text": "the and so that's why implementations don't need to make code changes for the happy path of features moving without",
    "start": "640839",
    "end": "646880"
  },
  {
    "text": "change from experimental to standard because you build the support in experimental then we add the conformance tests and everything that make sure",
    "start": "646880",
    "end": "652399"
  },
  {
    "text": "we're happy that that's how it should work and your implementation already supports it an experimental then the field moves to standard your",
    "start": "652399",
    "end": "658480"
  },
  {
    "text": "implementation has to change right so the reason it's like this is because everybody who's been working on the",
    "start": "658480",
    "end": "664279"
  },
  {
    "text": "specification for the last 5 years is ALS basically everyone is also a controller implementor and so we all",
    "start": "664279",
    "end": "670600"
  },
  {
    "text": "pick the things that were easiest for us first right um the the other thing that's a",
    "start": "670600",
    "end": "676200"
  },
  {
    "text": "really that's kind of a nice feature in some ways is that users don't need to change their objects right like so you can take a HTTP route uh that has that's",
    "start": "676200",
    "end": "684000"
  },
  {
    "text": "using uh I don't know uh budgeted retries um which is one of the newer features that is currently experimental",
    "start": "684000",
    "end": "691240"
  },
  {
    "text": "and you can just apply that hdp route and if it's experimental in the cluster then the feature will work and if it's",
    "start": "691240",
    "end": "696760"
  },
  {
    "text": "not it won't but then that that comes to a con that I'll get to in a minute as well but but also users can just start",
    "start": "696760",
    "end": "705279"
  },
  {
    "text": "using the new Fields without when they're added to either experimental or standard right so as long as you're",
    "start": "705279",
    "end": "710519"
  },
  {
    "text": "running experimental in your cluster if you move from uh v1.2 experimental to v1.3 experimental then any new fields",
    "start": "710519",
    "end": "717839"
  },
  {
    "text": "that were added in experimental you can start using them and expect them to be persisted correctly to ATD whether or",
    "start": "717839",
    "end": "724200"
  },
  {
    "text": "not your implementation supports them is another story but the specification wise they're supported and they'll and the",
    "start": "724200",
    "end": "730480"
  },
  {
    "text": "the field will be saved um it's always safe to move from standard to experimental as long as",
    "start": "730480",
    "end": "737199"
  },
  {
    "text": "you're not downgrading so if you move from version 1.3 standard to version 1.3 experimental that is a completely safe",
    "start": "737199",
    "end": "744160"
  },
  {
    "text": "operation because experimental is a super set of standard right so okay but that leads us to the big caveat which is",
    "start": "744160",
    "end": "751600"
  },
  {
    "text": "it's never safe we can't guarantee that it's safe to go from experimental to standard because we might make a",
    "start": "751600",
    "end": "757040"
  },
  {
    "text": "mistakes some things in experimental might break like we might have to break them so we can't guarantee that within a",
    "start": "757040",
    "end": "762880"
  },
  {
    "text": "same version if you're going from 1.3 experimental to 1.3 standard it's not safe because you your users might be",
    "start": "762880",
    "end": "769480"
  },
  {
    "text": "using those functions and be those those may not be the round triable and so they they might lose they might lose",
    "start": "769480",
    "end": "776320"
  },
  {
    "text": "functionality so you know that creates more caveats managed kubernetes",
    "start": "776320",
    "end": "781680"
  },
  {
    "text": "providers for very good reasons don't want to allow experimental because they don't want users using features that might break or change um and having",
    "start": "781680",
    "end": "789480"
  },
  {
    "text": "multiple controllers install their own version of Gateway API cids is also unsafe because if you've got controller",
    "start": "789480",
    "end": "796240"
  },
  {
    "text": "one warning version 1.2 and controller two warning version 1.3 then and they're",
    "start": "796240",
    "end": "801600"
  },
  {
    "text": "both trying to reconcile those definitions and make sure that they M meet their requirements then you have both controllers are going to fight over",
    "start": "801600",
    "end": "807240"
  },
  {
    "text": "the CID definition which is really bad um it's also very difficult for users to",
    "start": "807240",
    "end": "812519"
  },
  {
    "text": "tell what options are supported in the cids without actually just putting them in and seeing what happens which seems",
    "start": "812519",
    "end": "818519"
  },
  {
    "text": "like not ideal to me um and also leading back to what I said before it's also",
    "start": "818519",
    "end": "824079"
  },
  {
    "text": "very difficult for users to tell what options are supported by implementations now we've done some other stuff about",
    "start": "824079",
    "end": "829920"
  },
  {
    "text": "adding supported features to a Gateway class that will that's helping with this a little bit but again that's not a",
    "start": "829920",
    "end": "835120"
  },
  {
    "text": "standard thing it's very difficult to you got to do a lot of design to make that happen",
    "start": "835120",
    "end": "840160"
  },
  {
    "text": "um okay so that means that we've got a few types of changes in ki so we've got",
    "start": "840160",
    "end": "845800"
  },
  {
    "text": "promoting a field of resource from experimental to standard this is the good one this is the one we want to have happen this is the happy path",
    "start": "845800",
    "end": "852480"
  },
  {
    "text": "everybody's happy in this case feature was working in experimental we got it right we promoted a standard there's",
    "start": "852480",
    "end": "857720"
  },
  {
    "text": "enough conformance tests everything is great um there's also adding a new kind",
    "start": "857720",
    "end": "862959"
  },
  {
    "text": "of resource that starts out as experimental so hey we're adding a new object we're not 100% sure we got it",
    "start": "862959",
    "end": "868880"
  },
  {
    "text": "right yet maybe we might need to make changes so we need to add this whole new thing um you because we may make",
    "start": "868880",
    "end": "876199"
  },
  {
    "text": "breaking API changes along the way we got to be really careful about this now we try not to make breaking API changes",
    "start": "876199",
    "end": "882600"
  },
  {
    "text": "but the one thing you can know about API design or about any software is you're going to make mistakes and so you have",
    "start": "882600",
    "end": "887800"
  },
  {
    "text": "to your system has to allow for you to make mistakes um the last one that's the scariest one is adding a new",
    "start": "887800",
    "end": "893560"
  },
  {
    "text": "experimental field to a resource that itself is standard so there needs to be a way for for examp example in the",
    "start": "893560",
    "end": "899839"
  },
  {
    "text": "Gateway API if we want to add a new field to the Gateway object there needs to be a way for us to safely do that and",
    "start": "899839",
    "end": "904880"
  },
  {
    "text": "to be able to communicate to users that this new field is still experimental and we haven't fin finalized the design yet",
    "start": "904880",
    "end": "911399"
  },
  {
    "text": "um and there's so many things that can get wrong that can go wrong if you've made a mistake if you need to change the",
    "start": "911399",
    "end": "916720"
  },
  {
    "text": "field if you need to um you know there's a lot of changes that are breaking changes that can really cause problems",
    "start": "916720",
    "end": "923240"
  },
  {
    "text": "here and it also can lead to what what some folks call the dead Fields problem where you add a new Field in",
    "start": "923240",
    "end": "929199"
  },
  {
    "text": "experimental um and then you if you roll back sometimes the field will be",
    "start": "929199",
    "end": "934360"
  },
  {
    "text": "persisted into etcd until you touch it with the new uh with the new with the new schema uh and so and then if you",
    "start": "934360",
    "end": "940920"
  },
  {
    "text": "reenable it later then you'll read that value out of ATD and it'll be desized correctly uh so sometimes it's very",
    "start": "940920",
    "end": "947279"
  },
  {
    "text": "possible to have config saved into ATD that will spring back back out of nowhere later without the user",
    "start": "947279",
    "end": "952440"
  },
  {
    "text": "necessarily knowing that that's what would happen so again really important stuff to make sure we get this right",
    "start": "952440",
    "end": "959440"
  },
  {
    "text": "so uh how come what are we trying to do to do better well the first one that we are doing in the current version of",
    "start": "959440",
    "end": "965800"
  },
  {
    "text": "Gateway API is that we're changing how we add new experimental objects whole objects um we we are going back to using",
    "start": "965800",
    "end": "972880"
  },
  {
    "text": "the xcat doio API Group uh for these experimental objects and we're also",
    "start": "972880",
    "end": "978240"
  },
  {
    "text": "prefixing the name with an X right so the so unfortunately this means all of",
    "start": "978240",
    "end": "984319"
  },
  {
    "text": "us who write implementations have a lot more work to do because now you got to import a whole new module you you got to",
    "start": "984319",
    "end": "989440"
  },
  {
    "text": "you use different types and then when this thing moves to standard you're going to have to refactor all of that and change it over to the new types kind",
    "start": "989440",
    "end": "996360"
  },
  {
    "text": "of sucks because there's a lot of code churn for no functional change but and and and the other thing that kind of",
    "start": "996360",
    "end": "1002399"
  },
  {
    "text": "sucks is that users for users they can't just use the same object right they can't take an ex listener set once it",
    "start": "1002399",
    "end": "1008240"
  },
  {
    "text": "moves to standard and just apply it and have it just work but that's kind of what we want like this is a case where",
    "start": "1008240",
    "end": "1014399"
  },
  {
    "text": "we're adding friction because we want users to be take have to take a definite action to start using the standard thing",
    "start": "1014399",
    "end": "1021040"
  },
  {
    "text": "as opposed to the experimental thing and so it's the same for implementations we want implementations to be deliberate",
    "start": "1021040",
    "end": "1026120"
  },
  {
    "text": "about what they're supporting in experimental and what they're not but the big win here is that the same",
    "start": "1026120",
    "end": "1032199"
  },
  {
    "text": "cluster can now run safely run all of the standard Channel objects and the new experimental objects in the same cluster",
    "start": "1032199",
    "end": "1039079"
  },
  {
    "text": "and if you don't want to run the new experimental objects or you want to remove them you just delete just the experimental objects and boom you safely",
    "start": "1039079",
    "end": "1045880"
  },
  {
    "text": "removed so there's a safe transition from experimental back to standard that's the that's the sort of the key",
    "start": "1045880",
    "end": "1051679"
  },
  {
    "text": "thing that we're aiming for okay but so yeah should you do this",
    "start": "1051679",
    "end": "1057000"
  },
  {
    "text": "if you were writing implementation specific cids no this is way too much overhead you should not bother right",
    "start": "1057000",
    "end": "1062280"
  },
  {
    "text": "like don't do this unless you writing an upstream CID where you really need multiple controllers to be able to",
    "start": "1062280",
    "end": "1068000"
  },
  {
    "text": "coordinate using the same specification right so it's a relatively limited set of people who really need to do this",
    "start": "1068000",
    "end": "1074080"
  },
  {
    "text": "sort of stuff yet but the idea here is for for me to sort of tell everybody now so so that those of us who do need to do",
    "start": "1074080",
    "end": "1080240"
  },
  {
    "text": "it we can all be on the same page and then as more people uh start doing the same sorts of stuff that we've been doing at gway OPI for a while then you",
    "start": "1080240",
    "end": "1088039"
  },
  {
    "text": "know then it will make it easier hopefully we can make it easier for people to to sort of know about the",
    "start": "1088039",
    "end": "1093760"
  },
  {
    "text": "sorts of stuff that can happen okay future work um we are looking at trying out uh using",
    "start": "1093760",
    "end": "1100280"
  },
  {
    "text": "validating emission policy for existing standard objects to prevent use of experimental Fields so what this looks",
    "start": "1100280",
    "end": "1106919"
  },
  {
    "text": "like to me is that at some point we might have um you know the same yaml being installed in in both the standard",
    "start": "1106919",
    "end": "1113960"
  },
  {
    "text": "and experimental cases with all of the experimental Fields included but we also as part of that install include a bunch",
    "start": "1113960",
    "end": "1119559"
  },
  {
    "text": "of validating admission policies that if you try to set any of those fields the validating admission policies will like",
    "start": "1119559",
    "end": "1125120"
  },
  {
    "text": "no you can't you're running the standard Channel we're not going to let you set that I think there's I have a couple of concerns that I don't like the stable",
    "start": "1125120",
    "end": "1133039"
  },
  {
    "text": "thing being reliant on the presence of something rather than the absence of an allowing thing if you if you see what",
    "start": "1133039",
    "end": "1139159"
  },
  {
    "text": "I'm saying like I don't like that you know if you have you have to have a thing there to be on standard rather",
    "start": "1139159",
    "end": "1144280"
  },
  {
    "text": "than not having a thing there means you're on standard but you uh yeah we're",
    "start": "1144280",
    "end": "1149640"
  },
  {
    "text": "going to have to wait and see how that goes um we did we had to wait for validating emission policy to be",
    "start": "1149640",
    "end": "1154960"
  },
  {
    "text": "supported on all the our supported kubernetes versions so because we're trailing five versions We had to wait um",
    "start": "1154960",
    "end": "1161799"
  },
  {
    "text": "but and so I think the other thing that will'll help with is that dead Fields Problem by you can stop people from being a right fields to those things",
    "start": "1161799",
    "end": "1168320"
  },
  {
    "text": "doesn't stop doesn't stop the problem where those fields have had stuff written into them into the data store and then you read them out and it's a",
    "start": "1168320",
    "end": "1174320"
  },
  {
    "text": "surprise later but you we can't boil the ocean here like improving this thing one step at a time is better than not",
    "start": "1174320",
    "end": "1180320"
  },
  {
    "text": "improving it at all so yeah um that's everything I needed to say to you all uh",
    "start": "1180320",
    "end": "1185960"
  },
  {
    "text": "and the most important thing is yeah like does anyone have questions about this stuff I'm happy to roll back and talk more about r reability or anything",
    "start": "1185960",
    "end": "1191640"
  },
  {
    "text": "like that um or if people want to talk more about ideas other people have about how we can solve some of these problems",
    "start": "1191640",
    "end": "1197039"
  },
  {
    "text": "then I'd love to do that so thank you um but yeah hit us with the questions I",
    "start": "1197039",
    "end": "1203080"
  },
  {
    "text": "think there is a mic there if you want to uh if you want to ask questions there thank you ah yeah uh can you go to the",
    "start": "1203080",
    "end": "1210480"
  },
  {
    "text": "slide where you had the X prefix coming in for the group uh this one yeah I get",
    "start": "1210480",
    "end": "1216280"
  },
  {
    "text": "why we do this but you were very explicit when you said this is exactly what we want isn't it an overhead for",
    "start": "1216280",
    "end": "1223320"
  },
  {
    "text": "the implementations like you said so have you have you considered the fact that it's going to",
    "start": "1223320",
    "end": "1229640"
  },
  {
    "text": "not exactly motivate implementations to yeah adapt the API I mean I know Gateway",
    "start": "1229640",
    "end": "1235640"
  },
  {
    "text": "API has like 35 Plus implementation it's not a problem but it feels like you're",
    "start": "1235640",
    "end": "1241120"
  },
  {
    "text": "putting the overhead on the implementations but then you seem to be very sure that that's exactly what you want to do which is the whole goal here",
    "start": "1241120",
    "end": "1246960"
  },
  {
    "text": "which yeah so so it's a really good question thank you um so yeah we are uh we are wanting to put we are putting",
    "start": "1246960",
    "end": "1253200"
  },
  {
    "text": "work on implementations here and to be honest like the trade-off we feel like the trade-off is worth with it um the uh",
    "start": "1253200",
    "end": "1261280"
  },
  {
    "text": "putting the extra effort on the implementations does mean the implementations need to do extra work but uh and some implementations may",
    "start": "1261280",
    "end": "1267400"
  },
  {
    "text": "choose to stop doing the extra work right like that's up to them right like but the to me the way this goes is if",
    "start": "1267400",
    "end": "1274240"
  },
  {
    "text": "you're not going to put in the work to try out the experimental stuff then you can't come and Wing at me when you don't",
    "start": "1274240",
    "end": "1279320"
  },
  {
    "text": "like how it's designed right like you know if you're not going to supply the feedback then you can't complain about the design right so like that's the you",
    "start": "1279320",
    "end": "1286559"
  },
  {
    "text": "if you choose if you choose not to spend resources on implement experimental stuff that's your choice but like that means that the decisions decisions about",
    "start": "1286559",
    "end": "1292919"
  },
  {
    "text": "the design may be made without your input and this just a follow up the second aspect is we assume that well the",
    "start": "1292919",
    "end": "1299880"
  },
  {
    "text": "hope is that the experimental fields are never used in production but people often want that right so are we",
    "start": "1299880",
    "end": "1306400"
  },
  {
    "text": "considering a migration path or we just putting that on the implementation completely where they have to so I think",
    "start": "1306400",
    "end": "1311760"
  },
  {
    "text": "I think I ideally we would like to be able to give people tooling that will help us Aid in migration um preferably",
    "start": "1311760",
    "end": "1318279"
  },
  {
    "text": "with warnings for if you're using something that we broke um you know but",
    "start": "1318279",
    "end": "1323440"
  },
  {
    "text": "and we have you know we have Ingress a Gateway as well that that is specifically designed to do this sort of conversion so that's the idea is that",
    "start": "1323440",
    "end": "1329760"
  },
  {
    "text": "hopefully we can provide some tooling to help with that sort of thing as well like I'm aware that it's like I'm very",
    "start": "1329760",
    "end": "1334880"
  },
  {
    "text": "aware I'm going to have to do this forum as well um so like you know I'm very aware that it sucks right like but but",
    "start": "1334880",
    "end": "1342080"
  },
  {
    "text": "you know Rob and I and the other maintainers are worry that the implicit cost we've been pushing out to everybody else will could suck even more in the",
    "start": "1342080",
    "end": "1349679"
  },
  {
    "text": "future right like and so this is like one of those cases where as maintain as we are best suited to accept the cost",
    "start": "1349679",
    "end": "1355520"
  },
  {
    "text": "and understand what the costs are um rather than pushing this externality out to users who might not necessarily be",
    "start": "1355520",
    "end": "1361720"
  },
  {
    "text": "aware of it and so like completely get it sucks but like we're trying to be mindful of who has to pay the the",
    "start": "1361720",
    "end": "1368600"
  },
  {
    "text": "suckage cost hey so first thank for the talk so",
    "start": "1368600",
    "end": "1374480"
  },
  {
    "text": "I came to the talk and I expected to see conversion web hooks Cube Builder",
    "start": "1374480",
    "end": "1379960"
  },
  {
    "text": "generation promotion Alpha Beta gamma stable and I didn't see any of these",
    "start": "1379960",
    "end": "1387200"
  },
  {
    "text": "things is that not in there and if not why you chose this path versus what Cube",
    "start": "1387200",
    "end": "1394120"
  },
  {
    "text": "and most of the ecosystem is already doing the promotion versioning and",
    "start": "1394120",
    "end": "1399320"
  },
  {
    "text": "conversions so um we try like rolling the API version is huge change that also",
    "start": "1399320",
    "end": "1406520"
  },
  {
    "text": "requires a lot of change both from users and from the implementations and so uh",
    "start": "1406520",
    "end": "1411600"
  },
  {
    "text": "and also running a conversion we PK is also a lot of operational effort that",
    "start": "1411600",
    "end": "1417400"
  },
  {
    "text": "when you when you're a reasonably big project where you've got a lot of implementations we didn't want to have",
    "start": "1417400",
    "end": "1423200"
  },
  {
    "text": "to force implementations to run a conversion web HK to be able to do these things we're trying to avoid having to force people to run something to do the",
    "start": "1423200",
    "end": "1430960"
  },
  {
    "text": "to do the conversion again when you're doing this in the core it's fine because the you've got the apis over there and",
    "start": "1430960",
    "end": "1436120"
  },
  {
    "text": "the conversion we hooks can run inside that and you don't have to have the infrastructure to like deploy uh deploy",
    "start": "1436120",
    "end": "1441440"
  },
  {
    "text": "the Cs to securely run to securely talk with the uh conversion webbook to run the conversion webbook as a thing to be",
    "start": "1441440",
    "end": "1447279"
  },
  {
    "text": "a Deployable thing that you need to uh maintain and check for cves and all that sort of stuff and so we're trying to",
    "start": "1447279",
    "end": "1452880"
  },
  {
    "text": "avoid the overhead in the gayway API project of doing that by like by moving",
    "start": "1452880",
    "end": "1458200"
  },
  {
    "text": "towards things that are built into the CID spec as much as possible like like cell and and like using validating",
    "start": "1458200",
    "end": "1464080"
  },
  {
    "text": "emission policies and stuff like that so sorry but I'm Devil's Advocate",
    "start": "1464080",
    "end": "1469399"
  },
  {
    "text": "you mentioned certificates running web hooks yes that's a problem was this approach to solve it in a core like to",
    "start": "1469399",
    "end": "1476200"
  },
  {
    "text": "make it easier to run the web hooks because I'm conscious as a community we sometimes we see a problem in a core we",
    "start": "1476200",
    "end": "1483000"
  },
  {
    "text": "see a problem somewhere and instead of working towards making it easier we jum",
    "start": "1483000",
    "end": "1488760"
  },
  {
    "text": "to the easier solution which looking from the side looks a bit hacky from",
    "start": "1488760",
    "end": "1495360"
  },
  {
    "text": "what was the original intent in this St and that's yeah I mean like I said I",
    "start": "1495360",
    "end": "1501600"
  },
  {
    "text": "think I think part of the Rolling the API version was not intended I don't I don't think anyone really thought that",
    "start": "1501600",
    "end": "1507279"
  },
  {
    "text": "it would be as big a deal as it's turned out to be like rolling an API version is a really big deal for everyone who uses",
    "start": "1507279",
    "end": "1512840"
  },
  {
    "text": "it both implementers and users and so I don't in the core it's not so big a deal",
    "start": "1512840",
    "end": "1518480"
  },
  {
    "text": "because you're because it's all again it's the implementation specific thing right like you've got the controllers that reconcile your thing are tightly",
    "start": "1518480",
    "end": "1525399"
  },
  {
    "text": "coupled to the to the definition of the thing and so it's way easier but when you're doing this sort of specification thing with I don't have control over",
    "start": "1525399",
    "end": "1531799"
  },
  {
    "text": "eo's implementation of this thing the only thing I have control over is what the specification says and so you know",
    "start": "1531799",
    "end": "1537760"
  },
  {
    "text": "forcing anyone who wants to use G API to run a web hwk um to be able to do it is sort of countered to the idea of it",
    "start": "1537760",
    "end": "1543960"
  },
  {
    "text": "being only a specification and so that's why one of the reasons why we've sort of moved we've shifted in this way and done",
    "start": "1543960",
    "end": "1549679"
  },
  {
    "text": "we did have a web hook for a while and we had heaps of problems with it and it was very difficult to keep up to date and a lot of people just didn't run it",
    "start": "1549679",
    "end": "1556399"
  },
  {
    "text": "you know a lot of people just chose not to run it and that meant that they were completely vulnerable to lots of weird stuff about ver about version conversion",
    "start": "1556399",
    "end": "1563440"
  },
  {
    "text": "um and that's even worse uh so like we're trying to make it so that there's less stuff to run so that we actually have people comply and do this it's buil",
    "start": "1563440",
    "end": "1570520"
  },
  {
    "text": "in that they have to do the stuff so I I think it's all completely Fair things we have talked about them though I promise",
    "start": "1570520",
    "end": "1576159"
  },
  {
    "text": "um yeah thanks yeah just uh just to provide a",
    "start": "1576159",
    "end": "1582600"
  },
  {
    "text": "little bit more context like Nick Nick you you've done an amazing job uh here but one of the things my my perspective",
    "start": "1582600",
    "end": "1589480"
  },
  {
    "text": "on this is we are trying to make St stable Channel stand Channel as stable as it possibly can be and there's a lot",
    "start": "1589480",
    "end": "1596080"
  },
  {
    "text": "of focus you know understandably on how unstable experimental channel is right",
    "start": "1596080",
    "end": "1601720"
  },
  {
    "text": "because you know we' we've added these X resources we we've done all this stuff but part of the contract of using",
    "start": "1601720",
    "end": "1607559"
  },
  {
    "text": "experimental channel is there are going to be breaking non-convertible changes in that channel and so using conversion",
    "start": "1607559",
    "end": "1614799"
  },
  {
    "text": "web hooks here there whatever I mean the whole premise is that using experimental",
    "start": "1614799",
    "end": "1619880"
  },
  {
    "text": "channel is inherently unstable it's not somewhere you should live long term and",
    "start": "1619880",
    "end": "1625679"
  },
  {
    "text": "part of the confusion about what we were doing up until now is that you felt like you were using something stable because",
    "start": "1625679",
    "end": "1631760"
  },
  {
    "text": "it said Gateway in the name it had the same everything felt the same you could forget that what we were actually using",
    "start": "1631760",
    "end": "1637279"
  },
  {
    "text": "was a very experimental API surface uh because we made it so easy so this is",
    "start": "1637279",
    "end": "1642320"
  },
  {
    "text": "actually adding a little bit more uh friction in that path uh the other thing",
    "start": "1642320",
    "end": "1647720"
  },
  {
    "text": "I would say uh to sera's thing uh there are at least some implementations where",
    "start": "1647720",
    "end": "1652919"
  },
  {
    "text": "this will actually allow them to support experimental channel uh not naming any",
    "start": "1652919",
    "end": "1658559"
  },
  {
    "text": "names but you know it's going to make your life easier let's say that Rob yeah you know so it's not it's not uh you",
    "start": "1658559",
    "end": "1664440"
  },
  {
    "text": "know there there will be some that will be harder for for sure but there are others that will hopefully benefit from this as well uh and then final final",
    "start": "1664440",
    "end": "1671919"
  },
  {
    "text": "thing I promise Shameless plug I think all of this work is required if we want",
    "start": "1671919",
    "end": "1677279"
  },
  {
    "text": "to install these crds by default in kubernetes if you have an opinion about that we have an unconference session at",
    "start": "1677279",
    "end": "1683679"
  },
  {
    "text": "4 yes at 4 yeah yeah okay so Rob and I are leading in un conversation about that at 4 pm so yes please uh come to",
    "start": "1683679",
    "end": "1690440"
  },
  {
    "text": "that and have more chats about this sort of thing Keith hey",
    "start": "1690440",
    "end": "1695519"
  },
  {
    "text": "so I'm almost I've got mixed feelings about this as I'm sure many people do um",
    "start": "1695519",
    "end": "1701039"
  },
  {
    "text": "I guess my question SL concern is sort of this mirror Dimension problem where",
    "start": "1701039",
    "end": "1707760"
  },
  {
    "text": "we look at the ecosystem of not just Gateway API implementations but also Gateway API Integrations with things",
    "start": "1707760",
    "end": "1714519"
  },
  {
    "text": "like argocd or CT manager or not AR C Aro rollouts andert manager and and all",
    "start": "1714519",
    "end": "1720799"
  },
  {
    "text": "these various things that want to Target gateway resources um what if they decide",
    "start": "1720799",
    "end": "1726679"
  },
  {
    "text": "to only target experimental what if they decide to only target standard and then as implementation that creates this",
    "start": "1726679",
    "end": "1732200"
  },
  {
    "text": "combinator thing where oh my implementation support experimental but not this integration and so now I can't",
    "start": "1732200",
    "end": "1739240"
  },
  {
    "text": "use it at all and that sort of net new friction that might not have existed at",
    "start": "1739240",
    "end": "1746880"
  },
  {
    "text": "all period with the old way so I guess what's the mitigation for for that",
    "start": "1746880",
    "end": "1752279"
  },
  {
    "text": "scenario I mean it's a really great question uh I don't know yet is the answer um you know like I think we're",
    "start": "1752279",
    "end": "1757799"
  },
  {
    "text": "going to have to see how it goes again part of this is this is literally experimenting with experimental right",
    "start": "1757799",
    "end": "1763399"
  },
  {
    "text": "like we are trying this out because we know that we have problems with the current approach we want to be able to",
    "start": "1763399",
    "end": "1769480"
  },
  {
    "text": "try something this is sort of the minimum viable change that we could come up with that that you know while it is",
    "start": "1769480",
    "end": "1775840"
  },
  {
    "text": "impactful and it does you require people to do things it's like you we could",
    "start": "1775840",
    "end": "1780919"
  },
  {
    "text": "change we could change our minds and go back from this right like it's it is fixable right like so but we can't leave",
    "start": "1780919",
    "end": "1786960"
  },
  {
    "text": "it as things are like the current state is not sustainable so we need to do like a thing and this is the best least uh",
    "start": "1786960",
    "end": "1794399"
  },
  {
    "text": "least footprint thing that we've been able to come up with if people have really strong feelings about it and want to come up with a better solution please",
    "start": "1794399",
    "end": "1800919"
  },
  {
    "text": "I'd be happy to do it if we could have another solution that didn't have this big list of caveats I'm pretty confident",
    "start": "1800919",
    "end": "1806440"
  },
  {
    "text": "that that anything you come up with will have as many caveats as not more but that doesn't mean I'm 100% right like I",
    "start": "1806440",
    "end": "1812519"
  },
  {
    "text": "would love to be proven wrong on that point so yeah thanks Keith hey Nick yeah hey awesome talk",
    "start": "1812519",
    "end": "1818480"
  },
  {
    "text": "thank you thank you um going to go for I'm not a specialist here this is just my opinion it seems that this problem",
    "start": "1818480",
    "end": "1825919"
  },
  {
    "text": "goes to the source of it is like the SD cannot be storing multiple versions of the same crd right did you consider also",
    "start": "1825919",
    "end": "1833399"
  },
  {
    "text": "tackling that as the source of the problem and work like it is absolutely a thing that people could do um we are",
    "start": "1833399",
    "end": "1840000"
  },
  {
    "text": "kind of trying to solve this problem in a shorter time frame than that would require um so that's why one of the",
    "start": "1840000",
    "end": "1845240"
  },
  {
    "text": "other reason why we're doing stuff that looks hacky is that a lot of the stuff that's not hacky would require",
    "start": "1845240",
    "end": "1850480"
  },
  {
    "text": "substantial kep kept requiring changes to core kubernetes that would mean that you know like it's you maybe a year to",
    "start": "1850480",
    "end": "1857320"
  },
  {
    "text": "get your kept done and then like a long tale of a few years before you can actually use it in Gateway pii because",
    "start": "1857320",
    "end": "1862519"
  },
  {
    "text": "of the five versions thing and so we're trying to do things a little bit faster than that and try things out you know",
    "start": "1862519",
    "end": "1868639"
  },
  {
    "text": "with the option to have that in our back pocket so again if other people want to look at like how to store multiple",
    "start": "1868639",
    "end": "1873799"
  },
  {
    "text": "versions in ND like please go ahead like I'd love to use that but I don't have the bandwidth to be able to put towards that and that's that's really what it",
    "start": "1873799",
    "end": "1879919"
  },
  {
    "text": "comes down to here so really great question thanks man thanks Nick uh quick question what",
    "start": "1879919",
    "end": "1887519"
  },
  {
    "text": "does it mean about um you know let's say we introduced a new you know a new API version right now and um it will",
    "start": "1887519",
    "end": "1894559"
  },
  {
    "text": "probably go under x- Kio yep but what is the you know are we doing it V1 Alpha",
    "start": "1894559",
    "end": "1900480"
  },
  {
    "text": "One are we doing it V1 like what's what's going to be the semantics there uh so I think we're using V1 alpha1 for",
    "start": "1900480",
    "end": "1906360"
  },
  {
    "text": "X for the X resources now um the with the intent being that when we move them to standard they'll go from V1 Alpha 1",
    "start": "1906360",
    "end": "1912880"
  },
  {
    "text": "in X to V1 V1 yeah so like they're like basically for new resources of like no",
    "start": "1912880",
    "end": "1918360"
  },
  {
    "text": "meaning for V1 Alpha One in in the Standard Group yeah exactly right and so the the intent here ideal in the ideal",
    "start": "1918360",
    "end": "1924919"
  },
  {
    "text": "State eventually standard contains only V1 resources right that's it and that's",
    "start": "1924919",
    "end": "1930279"
  },
  {
    "text": "that's what we want to head towards so that people can safely stay I've got standard installed in my cluster that's",
    "start": "1930279",
    "end": "1936080"
  },
  {
    "text": "all I need to worry about right like there's no there's no breaking changes ever to standard got it and for the for the for the things that are only V1",
    "start": "1936080",
    "end": "1942639"
  },
  {
    "text": "right now um are we going to like are we plan to duplicate them to the X for",
    "start": "1942639",
    "end": "1948960"
  },
  {
    "text": "experimental features we we talked a lot about it but no um you we we went",
    "start": "1948960",
    "end": "1954240"
  },
  {
    "text": "backwards and forwards but yeah no because um because we didn't want people",
    "start": "1954240",
    "end": "1959360"
  },
  {
    "text": "to have to copy their entire config to be able to buy into experimental right so so it does mean that there's going to",
    "start": "1959360",
    "end": "1965880"
  },
  {
    "text": "be sharp edges for experimental like for listener set um you know listener set is a thing that lets you like break out the",
    "start": "1965880",
    "end": "1972399"
  },
  {
    "text": "so Gateway has an array of listeners a listener said is a thing that let you take that that array of listeners and",
    "start": "1972399",
    "end": "1977919"
  },
  {
    "text": "put it in separate objects um and so targeting that to a Gateway you're going to have you have Gateway requires you",
    "start": "1977919",
    "end": "1984679"
  },
  {
    "text": "have at least one listener right so practically you're going to have a dummy listener that needs to be on your gateway but that's because we don't want",
    "start": "1984679",
    "end": "1990760"
  },
  {
    "text": "to change stable Gateway like to make a a required field optional because that's",
    "start": "1990760",
    "end": "1996279"
  },
  {
    "text": "a really big change that has a lot of Downstream implications so this is another place where doing trying out",
    "start": "1996279",
    "end": "2002000"
  },
  {
    "text": "experimental is going to have like some uh you know some sharp edges but again we see the sharp edges as being like you",
    "start": "2002000",
    "end": "2008320"
  },
  {
    "text": "well it's experimental like sorry but you know pardon our dust follow yeah you",
    "start": "2008320",
    "end": "2014840"
  },
  {
    "text": "Al verions of the X if you drop a field uh if we make it so we haven't had had",
    "start": "2014840",
    "end": "2020840"
  },
  {
    "text": "to yet but like yes if we make a incompatible change then yeah like I would assume that we would be",
    "start": "2020840",
    "end": "2027200"
  },
  {
    "text": "revving yeah yeah yeah so we' we've gone up to V1 Alpha 3 on the existing sort of",
    "start": "2027200",
    "end": "2032600"
  },
  {
    "text": "resources um so yes we will plan to do that um not 100% sure if we'll be like",
    "start": "2032600",
    "end": "2038120"
  },
  {
    "text": "how we'll be handling this if we'll be revving it for some objects and others like a lot of this is TBD right like we've literally only done this for a",
    "start": "2038120",
    "end": "2043760"
  },
  {
    "text": "couple of things like last week so this isn't hard off the press no worries",
    "start": "2043760",
    "end": "2049720"
  },
  {
    "text": "Leo for fields on existing objects is there any plan like it seems the validating uh admission is is pretty",
    "start": "2049720",
    "end": "2057000"
  },
  {
    "text": "minimal and probably likely to be ignored like would you consider having to recreate an X object on an existing",
    "start": "2057000",
    "end": "2063560"
  },
  {
    "text": "object that has a a new field or a changed field yeah so we talked about it again um we've left the sort of that",
    "start": "2063560",
    "end": "2070040"
  },
  {
    "text": "sort of experimental objects on standard experimental fields on standard objects we know it's a problem but we're like",
    "start": "2070040",
    "end": "2077839"
  },
  {
    "text": "it's a really hard problem so like it's a future Nick problem like you know like we haven't really thought too much about",
    "start": "2077839",
    "end": "2082878"
  },
  {
    "text": "it yet because we want to try this out for the new objects and see how we go um again in the interest of not changing",
    "start": "2082879",
    "end": "2089000"
  },
  {
    "text": "too much too fast and going down you know we want to try things out and see if they work first um but yeah like it",
    "start": "2089000",
    "end": "2094398"
  },
  {
    "text": "is 100% it's probably the biggest problem we have right like um adding experimental fields to standard objects is deeply scary um but you know",
    "start": "2094399",
    "end": "2101960"
  },
  {
    "text": "sometimes you got to right like for us to be able to do listen the set properly um you we will need to add fields to Gateway to do it but so we can add",
    "start": "2101960",
    "end": "2109160"
  },
  {
    "text": "fields to you know the we we will basically the thing we have tried to do is that whatever we do is no worse than",
    "start": "2109160",
    "end": "2115960"
  },
  {
    "text": "what exists today right and so today if we wanted to add a field to Gateway then that new field gets included in the",
    "start": "2115960",
    "end": "2122000"
  },
  {
    "text": "experimental install gambl for that standard resource and if you you install the standard ones then the field is not",
    "start": "2122000",
    "end": "2127440"
  },
  {
    "text": "in included and you have the dead Fields problem and all that stuff but that's no change from how it how it exists today so it's like well at least we haven't",
    "start": "2127440",
    "end": "2134119"
  },
  {
    "text": "made things worse right so that's the sort of the at least we haven't made things worse is where we're aiming for",
    "start": "2134119",
    "end": "2139359"
  },
  {
    "text": "that's fair and then maybe this is more for the unconference leader but when you're considering basically blessing",
    "start": "2139359",
    "end": "2145760"
  },
  {
    "text": "crds have you thought about the pathway of making sure that you're not introducing new risk or leading people",
    "start": "2145760",
    "end": "2151480"
  },
  {
    "text": "to maybe trust or use something that they don't fully understand or I mean kubernetes has a statement broadly of",
    "start": "2151480",
    "end": "2158000"
  },
  {
    "text": "not um being secure by default but how are we going to make sure that we're not insecure by default either yeah yeah so",
    "start": "2158000",
    "end": "2164680"
  },
  {
    "text": "yes definitely we have been thinking about it I do want to talk about it more but that out session is probably the the one to do",
    "start": "2164680",
    "end": "2171160"
  },
  {
    "text": "Mike yeah so some of the problems here seem like they're tooling solvable like specifically the X prefix on like X",
    "start": "2171160",
    "end": "2177880"
  },
  {
    "text": "listener set that's to work around having Cube cutle Get listener set return only from one API Group that'ss",
    "start": "2177880",
    "end": "2184640"
  },
  {
    "text": "like a thing that we could potentially solve in tooling y and so again uh like I'd be very happy to solve this in",
    "start": "2184640",
    "end": "2190599"
  },
  {
    "text": "tooling and be able to throw this rule away but uh today it's not solved and we wanted to be able to do this today so we",
    "start": "2190599",
    "end": "2196920"
  },
  {
    "text": "dealt with the things we had today and put an X in front of it y so going from that though I'm really curious about",
    "start": "2196920",
    "end": "2203920"
  },
  {
    "text": "like the interrupt between standard and experimental so one of the earlier ideas when we were talking about previously",
    "start": "2203920",
    "end": "2209200"
  },
  {
    "text": "having an entire Mirror Universe where everything is X Dash um was to have like",
    "start": "2209200",
    "end": "2214280"
  },
  {
    "text": "X Lister set can only attach to an X Gateway it",
    "start": "2214280",
    "end": "2219520"
  },
  {
    "text": "xtp HTTP X listener said ex listener",
    "start": "2221760",
    "end": "2227480"
  },
  {
    "text": "potentially attaching to a regular Gateway especially for implementations yeah I mean so like the so I'm getting",
    "start": "2227480",
    "end": "2233880"
  },
  {
    "text": "the the winded up so we I need to answer this one quickly but the the intent here is that um that you if you're because",
    "start": "2233880",
    "end": "2241560"
  },
  {
    "text": "because of the way parent refs work if you are referring to a thing that you don't support an X an X listener set",
    "start": "2241560",
    "end": "2247200"
  },
  {
    "text": "then just don't do anything with it right like just just ignore it that's the you know in the same way that if you",
    "start": "2247200",
    "end": "2252560"
  },
  {
    "text": "are referring to a service and you don't support gamma then just ignore it that's that's what we expect so um that's",
    "start": "2252560",
    "end": "2258680"
  },
  {
    "text": "that's sort of the way that we hope to deal with that for now okay so thank you for all the questions everyone that was",
    "start": "2258680",
    "end": "2263839"
  },
  {
    "text": "exactly what I was hoping for um thanks again for listening to me ramble uh and uh yeah like feel free to come and talk",
    "start": "2263839",
    "end": "2270000"
  },
  {
    "text": "to me more about this later or at the 4 P.M session thanks very much",
    "start": "2270000",
    "end": "2275838"
  }
]