[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "good afternoon thank you all for coming I would apologize that you're all missing sunny San Diego but you're not",
    "start": "60",
    "end": "7259"
  },
  {
    "text": "so going conference room the conference room is not so bad today so we're really glad you made the trek over to the",
    "start": "7259",
    "end": "12840"
  },
  {
    "text": "Marriott and to hear about how we're scaling kubernetes at Google and Spotify and learning some of the pain points",
    "start": "12840",
    "end": "19500"
  },
  {
    "text": "that we've had in tactics that we've taken along the way just to start i'm",
    "start": "19500",
    "end": "27480"
  },
  {
    "text": "austin i I work in core infrastructure at Spotify our team is responsible for",
    "start": "27480",
    "end": "33329"
  },
  {
    "text": "helping the 280 teams across Spotify with 1,500 engineers deploy 1200 micro",
    "start": "33329",
    "end": "39420"
  },
  {
    "text": "services many times every day and this",
    "start": "39420",
    "end": "44600"
  },
  {
    "text": "Thank You Austin and I'm Jago MacLeod I'm an engineering director at Google working in kubernetes in gke and have",
    "start": "44930",
    "end": "53340"
  },
  {
    "start": "45000",
    "end": "104000"
  },
  {
    "text": "spent the last few years operating more clusters but we're not going to show",
    "start": "53340",
    "end": "58710"
  },
  {
    "text": "exactly that number and the slide before Austin talked about building the info",
    "start": "58710",
    "end": "65309"
  },
  {
    "text": "that powers your audio and I extended that to say we built the info that powers the infra that powers your audio",
    "start": "65309",
    "end": "71760"
  },
  {
    "text": "and this is a common theme we find that there's a sort of a separation of roles of the team that manages the platform",
    "start": "71760",
    "end": "79229"
  },
  {
    "text": "and the teams that build the applications that run on the platform and this talk is largely targeted",
    "start": "79229",
    "end": "86159"
  },
  {
    "text": "towards the platform managers or operators there's some something to",
    "start": "86159",
    "end": "92430"
  },
  {
    "text": "learn for the application developers as well but really this is about when you scale out across your organization how",
    "start": "92430",
    "end": "99930"
  },
  {
    "text": "to maintain some control over that the platform that you're supporting so we",
    "start": "99930",
    "end": "105540"
  },
  {
    "start": "104000",
    "end": "150000"
  },
  {
    "text": "have a few goals for today this was to keep ourselves focused it's a big topic",
    "start": "105540",
    "end": "110960"
  },
  {
    "text": "so our goal today to talk about why it's important to think beyond the steady-state and we'll define that and",
    "start": "110960",
    "end": "117899"
  },
  {
    "text": "talk more about that in a minute and the second is to talk about the the real operational challenges there's a",
    "start": "117899",
    "end": "125369"
  },
  {
    "text": "saying that quantity has a quality all its own and it really is true operating at scale carries some unique challenges",
    "start": "125369",
    "end": "131700"
  },
  {
    "text": "that are not evident when you spin up a 3-node kubernetes cluster we're gonna",
    "start": "131700",
    "end": "137189"
  },
  {
    "text": "talk some about that and then finally we'll share some concrete learnings",
    "start": "137189",
    "end": "142590"
  },
  {
    "text": "lessons learned what we think of as best practices and patterns that you can repeat so it's important to qualify what",
    "start": "142590",
    "end": "153870"
  },
  {
    "start": "150000",
    "end": "245000"
  },
  {
    "text": "we mean by steady state so kubernetes is itself about elasticity and reaction",
    "start": "153870",
    "end": "160290"
  },
  {
    "text": "being self-healing self scaling so that's all within the requirements of",
    "start": "160290",
    "end": "166500"
  },
  {
    "text": "this system and included within the steady-state so after you provision a",
    "start": "166500",
    "end": "171599"
  },
  {
    "text": "cluster you have a few nodes you're running some workloads it's scaling pods",
    "start": "171599",
    "end": "177449"
  },
  {
    "text": "it's replacing things that die that's all expected behavior it is don't",
    "start": "177449",
    "end": "183269"
  },
  {
    "text": "get me wrong a marvel of modern engineering it's incredible that it",
    "start": "183269",
    "end": "188370"
  },
  {
    "text": "works as well as it does but it's sort of expected for this talk the components",
    "start": "188370",
    "end": "195389"
  },
  {
    "text": "on the underlying platform in the steady state are assumed to be stable you're",
    "start": "195389",
    "end": "201000"
  },
  {
    "text": "not swapping them out at runtime and so that platform is somewhat stable and",
    "start": "201000",
    "end": "208069"
  },
  {
    "text": "it's important to distinguish that even the high end of a predictable or mostly predictable curve is included within the",
    "start": "208069",
    "end": "215069"
  },
  {
    "text": "steady-state maybe you run media outlet and you have a daily curve or you run a",
    "start": "215069",
    "end": "222419"
  },
  {
    "text": "game and peak users should be on the weekends but actually they're on Monday",
    "start": "222419",
    "end": "227579"
  },
  {
    "text": "morning oddly no one can figure out why but even that even the the peaks of",
    "start": "227579",
    "end": "234449"
  },
  {
    "text": "Black Friday whatever you can generally predict and be prepared for those are",
    "start": "234449",
    "end": "239699"
  },
  {
    "text": "included within the steady-state and interestingly when we talk about scalability we tend to over focus on",
    "start": "239699",
    "end": "247439"
  },
  {
    "start": "245000",
    "end": "291000"
  },
  {
    "text": "this steady-state how many nodes can a kubernetes cluster scale to 5000 we've",
    "start": "247439",
    "end": "253169"
  },
  {
    "text": "done other talks where we talked about scalability not being a number but really a bunch of dimensions and the",
    "start": "253169",
    "end": "260190"
  },
  {
    "text": "dimension that we want to focus on today is really the dimension of time evolving over quarters and years",
    "start": "260190",
    "end": "267130"
  },
  {
    "text": "and we talked about that you do this until you're brushing up your resume to",
    "start": "267130",
    "end": "272680"
  },
  {
    "text": "work somewhere else so if folks see that over your shoulder they should think but",
    "start": "272680",
    "end": "278590"
  },
  {
    "text": "this is a supporting a system over multiple years living with your past",
    "start": "278590",
    "end": "284380"
  },
  {
    "text": "choices understanding the trade-offs and then living with those four years is a interesting area and so we tend to",
    "start": "284380",
    "end": "292990"
  },
  {
    "start": "291000",
    "end": "310000"
  },
  {
    "text": "overlook the operational challenges it's not just about five thousand nodes what happens when you need to upgrade five",
    "start": "292990",
    "end": "298480"
  },
  {
    "text": "thousand nodes and it takes an hour to upgrade every node that is suddenly you",
    "start": "298480",
    "end": "304300"
  },
  {
    "text": "realize that what works for three nodes is drastically different than for many many nodes so there's a laptop sticker",
    "start": "304300",
    "end": "313750"
  },
  {
    "start": "310000",
    "end": "430000"
  },
  {
    "text": "bumper sticker that says there is no cloud it's just someone else's computer I don't think this is actually well",
    "start": "313750",
    "end": "319480"
  },
  {
    "text": "enough understood still today it actually is one of the things that kind of annoys me about the term server lists",
    "start": "319480",
    "end": "325720"
  },
  {
    "text": "there is always a server running that code it is occasionally sometimes often",
    "start": "325720",
    "end": "331270"
  },
  {
    "text": "useful to hear what that computer says about running the thing that you'd like it to run so it's not truly server list",
    "start": "331270",
    "end": "338920"
  },
  {
    "text": "it's just somewhere else and even someone else's computers are computers in this case fail they fail all the time",
    "start": "338920",
    "end": "346060"
  },
  {
    "text": "you don't see it GCE does magic live migration of VMs",
    "start": "346060",
    "end": "351120"
  },
  {
    "text": "those of you who are pushing the boundaries do detect the infant decimally small bit there so kudos to",
    "start": "351120",
    "end": "359620"
  },
  {
    "text": "you but mostly it's invisible to end users and kubernetes like we said the",
    "start": "359620",
    "end": "367060"
  },
  {
    "text": "expectation is that it will resolve many of these requirements for elasticity and",
    "start": "367060",
    "end": "373390"
  },
  {
    "text": "self-healing zones even regions they go",
    "start": "373390",
    "end": "378520"
  },
  {
    "text": "down they will go down we embrace that at Google we understand we have an error budget we understand that a zonal",
    "start": "378520",
    "end": "385120"
  },
  {
    "text": "failure or a regional failure for internal services is expected to happen",
    "start": "385120",
    "end": "390580"
  },
  {
    "text": "sometime in the next year two years it's going to happen we build systems that assume that that will be true",
    "start": "390580",
    "end": "398260"
  },
  {
    "text": "so the core question for this session to focus here is how do you build a",
    "start": "398260",
    "end": "404960"
  },
  {
    "text": "globally available service in a collection on a collection of demonstrably demonstrated to have been",
    "start": "404960",
    "end": "413320"
  },
  {
    "text": "unreliable regions and zones and that that is the question that you should drive to you should have an",
    "start": "413320",
    "end": "418460"
  },
  {
    "text": "understanding of that and it will take time to evolve but that should be the North Star and you need to think beyond",
    "start": "418460",
    "end": "425870"
  },
  {
    "text": "these study States over quarters and years in order to get there so we have",
    "start": "425870",
    "end": "432050"
  },
  {
    "start": "430000",
    "end": "443000"
  },
  {
    "text": "two core takeaways that we wanted to focus on today this is a giant topic the two areas we wanted to talk about was",
    "start": "432050",
    "end": "438310"
  },
  {
    "text": "automating the infrastructure upgrade and managing multi clustered deployments",
    "start": "438310",
    "end": "448220"
  },
  {
    "text": "we take it as a given that if you have highly available systems globally",
    "start": "448220",
    "end": "453440"
  },
  {
    "text": "available services that that necessarily includes multiple clusters the most",
    "start": "453440",
    "end": "458660"
  },
  {
    "text": "multi cluster will be a very crowded space in the kubernetes community and vendor community over the next two to",
    "start": "458660",
    "end": "464660"
  },
  {
    "text": "three years so there are lots of choices but think about your strategy and what you're trying to get out of it over time",
    "start": "464660",
    "end": "470750"
  },
  {
    "text": "before you jump well let's jump in okay",
    "start": "470750",
    "end": "476480"
  },
  {
    "text": "so this is the first part the automating the cluster upgrades okay this will take some explanation at --gk we use a",
    "start": "476480",
    "end": "484280"
  },
  {
    "start": "480000",
    "end": "585000"
  },
  {
    "text": "concept of soak time which is essentially cluster days or cluster years that have accumulated as used by",
    "start": "484280",
    "end": "493100"
  },
  {
    "text": "some end user so a release candidate becomes available the blue line after an",
    "start": "493100",
    "end": "498710"
  },
  {
    "text": "open source kubernetes version is cut and a few brave customers adopt it they",
    "start": "498710",
    "end": "505100"
  },
  {
    "text": "try it they find a bug okay we patch that in open source Coburn Eddie's cut a",
    "start": "505100",
    "end": "510470"
  },
  {
    "text": "new patch version we make a new release candidate it accumulates a little more soak time and then maybe the point three",
    "start": "510470",
    "end": "517849"
  },
  {
    "text": "maybe the point four release it accumulates enough soak time to get over the first green line which means that it",
    "start": "517849",
    "end": "524450"
  },
  {
    "text": "can progress from our alpha channels or rapid rapid release channel or",
    "start": "524450",
    "end": "530340"
  },
  {
    "text": " clusters into the GA or regular release channel it is made available",
    "start": "530340",
    "end": "537960"
  },
  {
    "text": "first not auto upgraded to it accumulates more soap time then it",
    "start": "537960",
    "end": "543720"
  },
  {
    "text": "becomes the default for new cluster creation and then it becomes the upgrade target and we will auto upgrade many of",
    "start": "543720",
    "end": "550800"
  },
  {
    "text": "the clusters in the fleet very carefully across multiple regions and zones and so",
    "start": "550800",
    "end": "558810"
  },
  {
    "text": "this is the idealized soak time accumulation of a version in a perfect world this there would be exactly three",
    "start": "558810",
    "end": "566280"
  },
  {
    "text": "release candidates the fourth would be perfect it would go out it would go up and then eventually the next quarterly",
    "start": "566280",
    "end": "573270"
  },
  {
    "text": "version or minor release of kubernetes would become available and we would migrate you to or you would migrate to",
    "start": "573270",
    "end": "579810"
  },
  {
    "text": "that next minor release",
    "start": "579810",
    "end": "584210"
  },
  {
    "start": "585000",
    "end": "765000"
  },
  {
    "text": "sadly the math is not is the math is",
    "start": "585590",
    "end": "591360"
  },
  {
    "text": "kind of against us those are the lines of code of kubernetes over time there",
    "start": "591360",
    "end": "598080"
  },
  {
    "text": "are a massive number of lines of code interesting spike here and kubernetes",
    "start": "598080",
    "end": "604590"
  },
  {
    "text": "one five was checking in generated code which we quickly realized was not brilliant and stopped doing that so good",
    "start": "604590",
    "end": "612360"
  },
  {
    "text": "for us but this was sig offs state of security slide from the contributor",
    "start": "612360",
    "end": "619110"
  },
  {
    "text": "summit on Monday and it's showing that there is just a tremendously growing number of lines of code interestingly",
    "start": "619110",
    "end": "626690"
  },
  {
    "text": "not included in this slide are all the",
    "start": "626690",
    "end": "632400"
  },
  {
    "text": "other things that get packaged together in a distribution of kubernetes by some vendor or yourself so core dns or cube",
    "start": "632400",
    "end": "638940"
  },
  {
    "text": "dns maybe use calico maybe include sto there are all kinds of other add-ons",
    "start": "638940",
    "end": "646500"
  },
  {
    "text": "extensions ecosystem stuff that you include in it and so the",
    "start": "646500",
    "end": "653589"
  },
  {
    "text": "if you all if we all would write all of this code which is completely bug free and worked perfectly together there",
    "start": "653589",
    "end": "660610"
  },
  {
    "text": "would be really no issue we would be back at the idealized version but in practice that's not what happens and so",
    "start": "660610",
    "end": "667149"
  },
  {
    "text": "this is an actual view of accumulating soap time for gke release candidates",
    "start": "667149",
    "end": "672160"
  },
  {
    "text": "over time and we backport important security fixes and patents two older",
    "start": "672160",
    "end": "679240"
  },
  {
    "text": "versions those that are considered more stable and open source kubernetes and",
    "start": "679240",
    "end": "684569"
  },
  {
    "text": "this includes the kubernetes components themselves there are all these add-ons there may be an issue in a container",
    "start": "684569",
    "end": "691029"
  },
  {
    "text": "runtime there might be a base OS image there are kernel regressions this goes all the way down and occasionally the",
    "start": "691029",
    "end": "699429"
  },
  {
    "text": "automated testing that's in place doesn't catch things in tests and so only running elasticsearch at scale",
    "start": "699429",
    "end": "706240"
  },
  {
    "text": "under these conditions with this kind of throughput manifest some issue it's an",
    "start": "706240",
    "end": "711279"
  },
  {
    "text": "issue for all kubernetes users but somebody discovers it and so even older versions get patch releases fairly",
    "start": "711279",
    "end": "717699"
  },
  {
    "text": "frequently and you all end-users also do things we didn't anticipate it's really",
    "start": "717699",
    "end": "724120"
  },
  {
    "text": "quite amazing what a creative group end users are so all of that together what",
    "start": "724120",
    "end": "731079"
  },
  {
    "text": "I'm trying to drill into is that the frequency of upgrades it's not once every three months in practice it's",
    "start": "731079",
    "end": "736480"
  },
  {
    "text": "typically more than that to maintain a stable and secure environment and we go",
    "start": "736480",
    "end": "742749"
  },
  {
    "text": "through thought exercises at Google about scalability and if we think about scaling 10x you can almost see how the",
    "start": "742749",
    "end": "749019"
  },
  {
    "text": "super effective engineer could work a little extra and solve a problem that's",
    "start": "749019",
    "end": "756100"
  },
  {
    "text": "growing only 10x but when you do the thought exercise with a hundred X you think oh okay we have to fundamentally",
    "start": "756100",
    "end": "761879"
  },
  {
    "text": "assume that there's a different way of operating so cluster upgrades are coming and",
    "start": "761879",
    "end": "768209"
  },
  {
    "start": "765000",
    "end": "798000"
  },
  {
    "text": "things that are frequent you need to do you just need to automate before we move",
    "start": "768209",
    "end": "774399"
  },
  {
    "text": "on I will point out but a very effective solution here is to assign a super",
    "start": "774399",
    "end": "779799"
  },
  {
    "text": "sarcastic kind of lazy but brilliant engineer to this task to do a manual task",
    "start": "779799",
    "end": "785630"
  },
  {
    "text": "once every week for four weeks in a row and I promise they will automate that",
    "start": "785630",
    "end": "790790"
  },
  {
    "text": "they will die before they do it a fifth time this has been super effective for me I hope it is for you too okay but",
    "start": "790790",
    "end": "799670"
  },
  {
    "start": "798000",
    "end": "908000"
  },
  {
    "text": "there is some good news the good news is that historically we",
    "start": "799670",
    "end": "804740"
  },
  {
    "text": "have been changing api's fairly frequently over the last five years the truth is adoption really outpaced",
    "start": "804740",
    "end": "811370"
  },
  {
    "text": "production readiness in kubernetes I take this to mean that we created something very useful useful enough to",
    "start": "811370",
    "end": "818600"
  },
  {
    "text": "assume that risk but honestly there has been risk and it's not getting to a v1",
    "start": "818600",
    "end": "824180"
  },
  {
    "text": "API is not really about the quality of the code the code is already very high quality but it's about the assumptions",
    "start": "824180",
    "end": "830839"
  },
  {
    "text": "the backwards compatibility the portability of your applications that you write on top because the conformance",
    "start": "830839",
    "end": "838459"
  },
  {
    "text": "tests can only exist for those api's that have moved to a v1 API so Brian",
    "start": "838459",
    "end": "847310"
  },
  {
    "text": "grant put this diagram together in 2018 and those things that are read were not",
    "start": "847310",
    "end": "853519"
  },
  {
    "text": "v1 api's we invested pretty heavily this year and bringing forward those api's",
    "start": "853519",
    "end": "858560"
  },
  {
    "text": "that had stalled out at beta and only a couple left I'm not sure why we didn't",
    "start": "858560",
    "end": "863630"
  },
  {
    "text": "highlight this but ingress you can see in the upper right-hand corner still has a couple steps to go and cron job has",
    "start": "863630",
    "end": "869750"
  },
  {
    "text": "been quite stubborn to move to GA so those are the two remaining ones but the",
    "start": "869750",
    "end": "875779"
  },
  {
    "text": "the point here is that looking backwards in time I typically talk to customers",
    "start": "875779",
    "end": "881600"
  },
  {
    "text": "who are still on 1/9 and they are holding onto 1/9 because they were burned in the 1 7 to 1/8 upgrade because",
    "start": "881600",
    "end": "887930"
  },
  {
    "text": "we moved an annotation to a field and we broke a bunch of things so I'm just",
    "start": "887930",
    "end": "894380"
  },
  {
    "text": "encouraging you not to base your upgrade policy on 2 year ago information look",
    "start": "894380",
    "end": "901069"
  },
  {
    "text": "forward and understand that this is over multiple years and to develop a strategy that's looking forward okay so to",
    "start": "901069",
    "end": "911300"
  },
  {
    "text": "summarize the good news just about all api's are GA or there's a plan to get to GA in the next quarter",
    "start": "911300",
    "end": "917460"
  },
  {
    "text": "and the other interesting development is community support around this concept of",
    "start": "917460",
    "end": "923880"
  },
  {
    "text": "supporting four instead of three minor releases of kubernetes so twelve months so we find that retail customers for",
    "start": "923880",
    "end": "931380"
  },
  {
    "text": "example don't upgrade during q4 very important and then they do sort of clustered upgrades at the beginning of",
    "start": "931380",
    "end": "937770"
  },
  {
    "text": "the year and this is a pattern I would expect to move forward the other move on",
    "start": "937770",
    "end": "951260"
  },
  {
    "start": "950000",
    "end": "1027000"
  },
  {
    "text": "okay so upgrades very frequent if it's very frequent make it automated find",
    "start": "951260",
    "end": "958620"
  },
  {
    "text": "some way to automate it version one is just about done and final point being",
    "start": "958620",
    "end": "966510"
  },
  {
    "text": "too early or too late meaning adopting a dot zero release is generally not encouraged we found a",
    "start": "966510",
    "end": "974940"
  },
  {
    "text": "couple years ago before we had release channels that our newest customers were the ones that looked at the numbers and",
    "start": "974940",
    "end": "980490"
  },
  {
    "text": "said the biggest number it must be the best one and they've found all the bugs in all of kubernetes which was not very",
    "start": "980490",
    "end": "986820"
  },
  {
    "text": "fair to them so in at Google we have adopted a release channel model where",
    "start": "986820",
    "end": "992640"
  },
  {
    "text": "there's a rapid a regular and a stable release channel and just as you would find with other projects we promote",
    "start": "992640",
    "end": "1001339"
  },
  {
    "text": "across those boundaries watch the",
    "start": "1001339",
    "end": "1006680"
  },
  {
    "text": "release notes and pay attention you may",
    "start": "1006680",
    "end": "1012709"
  },
  {
    "text": "be using some feature of kubernetes depending on some beta API that's being deprecated you can subscribe in your",
    "start": "1012709",
    "end": "1020120"
  },
  {
    "text": "slack channel to the RSS feed that seems to be a good pattern but pay attention",
    "start": "1020120",
    "end": "1026438"
  },
  {
    "text": "so we have a concept at Google of haunted graveyards and haunted",
    "start": "1026589",
    "end": "1032780"
  },
  {
    "start": "1027000",
    "end": "1165000"
  },
  {
    "text": "graveyards are exactly what it sounds like it's a thing that you're scared of so you avoid it you walk all the way around instead of going through it and",
    "start": "1032780",
    "end": "1040160"
  },
  {
    "text": "those things everyone has one or two of these things in their system where are the things that burned you last time",
    "start": "1040160",
    "end": "1046010"
  },
  {
    "text": "anytime anyone touches that thing it breaks we just do whatever we have to do",
    "start": "1046010",
    "end": "1051080"
  },
  {
    "text": "some smells that might mean you have haunted graveyards is if you have a really strong front-end team and a",
    "start": "1051080",
    "end": "1057620"
  },
  {
    "text": "back-end team that's just getting started and the front-end team is doing all kinds of crazy things to get around",
    "start": "1057620",
    "end": "1062780"
  },
  {
    "text": "not having the right API in the backend this is an example of a haunted graveyard so upgrades are often in a",
    "start": "1062780",
    "end": "1069380"
  },
  {
    "text": "haunted graveyard just if something is scary do it all the time do it three",
    "start": "1069380",
    "end": "1074540"
  },
  {
    "text": "times a week for the next four weeks until it's completely natural and",
    "start": "1074540",
    "end": "1080590"
  },
  {
    "text": "Austin's going to talk about this more but productize and limit the customization of your own end users to",
    "start": "1080590",
    "end": "1087560"
  },
  {
    "text": "avoid fragmentation and and and give yourself some freedom to evolve the",
    "start": "1087560",
    "end": "1092870"
  },
  {
    "text": "platform all of this is leading up to cultural changes and the cultural change",
    "start": "1092870",
    "end": "1098300"
  },
  {
    "text": "is really dynamic stability the fact that smaller releases that are more",
    "start": "1098300",
    "end": "1103610"
  },
  {
    "text": "granular easy to rollback they tend to have smaller incidents associated with",
    "start": "1103610",
    "end": "1108680"
  },
  {
    "text": "them and many of the customers I talked to who are modernizing to their environments and so on they're in this",
    "start": "1108680",
    "end": "1115670"
  },
  {
    "text": "state where it takes two years to migrate to the cloud because they've gotten to this static stability nobody",
    "start": "1115670",
    "end": "1122900"
  },
  {
    "text": "touches anything and it doesn't break but this actually introduces additional",
    "start": "1122900",
    "end": "1127940"
  },
  {
    "text": "risk especially security vulnerabilities but also not being able to give your",
    "start": "1127940",
    "end": "1133970"
  },
  {
    "text": "developers your end users the right functionality at the right time so really try to drive this cultural change",
    "start": "1133970",
    "end": "1141080"
  },
  {
    "text": "within your organization's and it will pay off last point on this slide is to",
    "start": "1141080",
    "end": "1146150"
  },
  {
    "text": "get your observability right small changes it really is critical to",
    "start": "1146150",
    "end": "1151550"
  },
  {
    "text": "instrument and have good indication of health so that when you make these small changes you can correlate a change to",
    "start": "1151550",
    "end": "1158240"
  },
  {
    "text": "this thing resulted in an increase in latency in that thing and that's really",
    "start": "1158240",
    "end": "1163430"
  },
  {
    "text": "important okay so we're gonna go through the next few slides really fast this is",
    "start": "1163430",
    "end": "1168590"
  },
  {
    "start": "1165000",
    "end": "1249000"
  },
  {
    "text": "a very deep topic but I wanted to make sure to put in some very concrete guidance so what is the simplest thing",
    "start": "1168590",
    "end": "1174890"
  },
  {
    "text": "you can possibly do to automate your upgrades is just enable no to auto upgrade and pick the rapid or the",
    "start": "1174890",
    "end": "1182600"
  },
  {
    "text": "regular release Channel it will happen over time eventually you",
    "start": "1182600",
    "end": "1188900"
  },
  {
    "text": "have one cluster or something will happen to your one cluster so if you want to get some guardrails around that",
    "start": "1188900",
    "end": "1193910"
  },
  {
    "text": "you can create a canary cluster and we publish what order we're going to roll",
    "start": "1193910",
    "end": "1199550"
  },
  {
    "text": "out our changes across Google cloud day 1 day 2 day 3 day 4 regions and zones",
    "start": "1199550",
    "end": "1206600"
  },
  {
    "text": "and you can create a canary cluster in a day 1 region our upgrades will land",
    "start": "1206600",
    "end": "1213380"
  },
  {
    "text": "there first you have implemented a stack driver uptime check and you can see that",
    "start": "1213380",
    "end": "1221270"
  },
  {
    "text": "something has gone wrong in your canary cluster and then you just use the maintenance windows to delay the upgrade",
    "start": "1221270",
    "end": "1226610"
  },
  {
    "text": "to your production clusters this is very very little work on your part but it gives you just in time information about",
    "start": "1226610",
    "end": "1233330"
  },
  {
    "text": "upcoming changes to the platform also make sure to automate the alerts too",
    "start": "1233330",
    "end": "1239270"
  },
  {
    "text": "depending on yourself to remember to check the canary cluster every certain day of the week is not from experience",
    "start": "1239270",
    "end": "1246860"
  },
  {
    "text": "that doesn't work well ok then you're gonna get more advanced and this is",
    "start": "1246860",
    "end": "1254480"
  },
  {
    "start": "1249000",
    "end": "1475000"
  },
  {
    "text": "where we're gonna get into some very concrete stuff that Spotify has done against this background so the first",
    "start": "1254480",
    "end": "1261530"
  },
  {
    "text": "topic here is to embrace the declarative configuration of all the things ok",
    "start": "1261530",
    "end": "1267080"
  },
  {
    "text": "so configuration as data",
    "start": "1267080",
    "end": "1272690"
  },
  {
    "text": "this is meaningfully subtly but meaningfully different than configuration as code code implies that",
    "start": "1272690",
    "end": "1278660"
  },
  {
    "text": "there is some conditional logic maybe even a turing-complete language that you're running against your config",
    "start": "1278660",
    "end": "1284420"
  },
  {
    "text": "template this is almost always non-deterministic and will result in",
    "start": "1284420",
    "end": "1289520"
  },
  {
    "text": "very strange outcomes so thank thinking of this even if your implementation has",
    "start": "1289520",
    "end": "1294890"
  },
  {
    "text": "some of that thinking of configuration as data is really important then you check that data in to get and you have a",
    "start": "1294890",
    "end": "1300620"
  },
  {
    "text": "source of truth of what was true at that point in time terraform is great if",
    "start": "1300620",
    "end": "1306110"
  },
  {
    "text": "you're going to configure and automate cluster creation in addition to",
    "start": "1306110",
    "end": "1311230"
  },
  {
    "text": "automating your upgrades please read terraform up and running or",
    "start": "1311230",
    "end": "1316310"
  },
  {
    "text": "some similar book it is a very powerful tool and you can delete clusters by accident",
    "start": "1316310",
    "end": "1321909"
  },
  {
    "text": "I've seen it happen it's a it's scary but it's very it's powerful and if used",
    "start": "1321909",
    "end": "1327460"
  },
  {
    "text": "correctly it's great use customized or something that does configuration",
    "start": "1327460",
    "end": "1333039"
  },
  {
    "text": "overlay instead of this Turing complete language - parson and modify your",
    "start": "1333039",
    "end": "1338500"
  },
  {
    "text": "template and then one project that's coming along is config connector to use",
    "start": "1338500",
    "end": "1344769"
  },
  {
    "text": "kubernetes resource model everywhere so you just like you created a new pod you would create a new cloud sequel or a",
    "start": "1344769",
    "end": "1350409"
  },
  {
    "text": "load balancer and so on so you can use the same tools that you manage your community's resources to manage the",
    "start": "1350409",
    "end": "1355990"
  },
  {
    "text": "infrastructure itself okay quick note on large node pools large node pools 5,000",
    "start": "1355990",
    "end": "1362740"
  },
  {
    "text": "nodes one node at a time an hour it can take week or more to upgrade your node pool this is usually completely",
    "start": "1362740",
    "end": "1369820"
  },
  {
    "text": "unacceptable so a couple of patterns that work well one is surge upgrades where you can specify up to 20 nodes at",
    "start": "1369820",
    "end": "1375669"
  },
  {
    "text": "a time and the other is creating a new node pool and then shift traffic to it instead of doing a rolling update to the",
    "start": "1375669",
    "end": "1382720"
  },
  {
    "text": "node pool protip it's usually safe to skip a version number for note pool so",
    "start": "1382720",
    "end": "1388539"
  },
  {
    "text": "if you end up a few versions behind upgrade your control playing two versions and then you can skip usually",
    "start": "1388539",
    "end": "1395649"
  },
  {
    "text": "the interim version of a node pool it that generally works we see lots of",
    "start": "1395649",
    "end": "1401740"
  },
  {
    "text": "customers do that if you have a very large node pool that can save a lot of time and and get you caught up more",
    "start": "1401740",
    "end": "1407409"
  },
  {
    "text": "quickly and take some time its q4 no one",
    "start": "1407409",
    "end": "1415120"
  },
  {
    "text": "works that hard during q4 please take some time and come up with a global deployment strategy figure out how many",
    "start": "1415120",
    "end": "1421450"
  },
  {
    "text": "regions you want to be in how many zones it will take you quarters to get there but just having that roadmap of where",
    "start": "1421450",
    "end": "1428260"
  },
  {
    "text": "you're trying to go will truly help so have understand the implications of",
    "start": "1428260",
    "end": "1433299"
  },
  {
    "text": "multiple clusters high availability across those clusters how you're going to shard users or use those multiple",
    "start": "1433299",
    "end": "1440529"
  },
  {
    "text": "clusters how you do failover disaster recovery and special note on networking",
    "start": "1440529",
    "end": "1447700"
  },
  {
    "text": "as a not networking expert before this networking gets complicated quickly so",
    "start": "1447700",
    "end": "1452980"
  },
  {
    "text": "don't leave that to the end and then say oh so once you get to this advanced",
    "start": "1452980",
    "end": "1458710"
  },
  {
    "text": "stage you need to do something to simplify the experience for your end users and Spotify and has done some",
    "start": "1458710",
    "end": "1465670"
  },
  {
    "text": "amazing work to simplify the use for their end users the customers of their platform that they've built and Austin's",
    "start": "1465670",
    "end": "1471640"
  },
  {
    "text": "gonna talk some of that that specifically Thanks",
    "start": "1471640",
    "end": "1476670"
  },
  {
    "start": "1475000",
    "end": "1502000"
  },
  {
    "text": "thanks chica oh you get a major speak clap very good so as you said we've been",
    "start": "1476670",
    "end": "1484420"
  },
  {
    "text": "doing a lot of work to simplify that deployment process across many of these clusters that we're creating so jumping",
    "start": "1484420",
    "end": "1491320"
  },
  {
    "text": "in here to our second takeaway create multi-tenant ephemeral clusters across",
    "start": "1491320",
    "end": "1497140"
  },
  {
    "text": "regions and manage cross custer deployments so let's unpack that starting with some of the sort of",
    "start": "1497140",
    "end": "1503770"
  },
  {
    "start": "1502000",
    "end": "1557000"
  },
  {
    "text": "foundational challenges independent of what's possible for your scale and and what clusters will support you don't",
    "start": "1503770",
    "end": "1510460"
  },
  {
    "text": "want one cluster one cluster is one single point failure we've listed a",
    "start": "1510460",
    "end": "1515590"
  },
  {
    "text": "couple things here that can happen I'll certainly call out the last one as Jago mentioned it and it was actually keynote",
    "start": "1515590",
    "end": "1521260"
  },
  {
    "text": "at Cuba and Europe around having terraform blow up and delete clusters that does happen and if you only have",
    "start": "1521260",
    "end": "1527080"
  },
  {
    "text": "one that's not good and second and in this one may be obvious but as you start",
    "start": "1527080",
    "end": "1533320"
  },
  {
    "text": "to have more and more clusters any difference in configuration of those clusters becomes really bad at 2:00 a.m.",
    "start": "1533320",
    "end": "1540130"
  },
  {
    "text": "when your room is completely dark except for your laptop screen and you're trying to figure out why everything is not",
    "start": "1540130",
    "end": "1546070"
  },
  {
    "text": "working and then you have differences in your clusters that's a bad place to be I'm so automate that as much as possible",
    "start": "1546070",
    "end": "1552910"
  },
  {
    "text": "but but how do you do that as you continue to scale and have more and more clusters so perhaps you're bought in on",
    "start": "1552910",
    "end": "1559180"
  },
  {
    "start": "1557000",
    "end": "1611000"
  },
  {
    "text": "those challenges but Before we jump to solutions there's a couple of learnings we wanted to call out first",
    "start": "1559180",
    "end": "1564460"
  },
  {
    "text": "99% of the time developers don't actually care how many clusters there are or where they're deploying it to",
    "start": "1564460",
    "end": "1571110"
  },
  {
    "text": "until they have some sort of problem so make that common use case easy make it",
    "start": "1571110",
    "end": "1576310"
  },
  {
    "text": "easy to deploy make it automated to deploy to whichever cluster makes sense and don't make a developer deal with",
    "start": "1576310",
    "end": "1582790"
  },
  {
    "text": "that every single but give them the tools to be able to understand where a workload is or where",
    "start": "1582790",
    "end": "1588630"
  },
  {
    "text": "problems occurring and secondly and Jagger already called this out but network is complex and it's really",
    "start": "1588630",
    "end": "1594930"
  },
  {
    "text": "really hard to change once you're at scale and this is a pain point that we have and are working through but it is",
    "start": "1594930",
    "end": "1600990"
  },
  {
    "text": "definitely something if you have the the flexibility and freedom to deal with now definitely do it because you you will",
    "start": "1600990",
    "end": "1608640"
  },
  {
    "text": "not want to deal with that later awesome so to walk you through a little bit of a",
    "start": "1608640",
    "end": "1614309"
  },
  {
    "start": "1611000",
    "end": "1647000"
  },
  {
    "text": "story here is a very simplified version of our CI CD stack so there's a build system it creates an artifact it then",
    "start": "1614309",
    "end": "1622140"
  },
  {
    "text": "that artifact is then passed to tugboat which is a very simple API we use to manage deployments if you've seen others",
    "start": "1622140",
    "end": "1628559"
  },
  {
    "text": "Spotify talks you may have heard of this it essentially is what was used to actually migrate us to kubernetes a",
    "start": "1628559",
    "end": "1634110"
  },
  {
    "text": "number of talks on that that you can find or even see this week tugboat then passed the spinnaker which",
    "start": "1634110",
    "end": "1640320"
  },
  {
    "text": "deploys the final artifact to GK but what I told you is that you need something that actually manages which",
    "start": "1640320",
    "end": "1645660"
  },
  {
    "text": "cluster to deploy to enter compass so compass is a tool that's been built it's very similar if you actually attended",
    "start": "1645660",
    "end": "1651990"
  },
  {
    "start": "1647000",
    "end": "1665000"
  },
  {
    "text": "Airbnb stock yesterday to how they manage deployment across clusters probably something that should be open",
    "start": "1651990",
    "end": "1657720"
  },
  {
    "text": "sourced somewhere but it compass essentially manages where a particular workload",
    "start": "1657720",
    "end": "1663120"
  },
  {
    "text": "is deployed so just to sort of land that a step further this is a deployment UML",
    "start": "1663120",
    "end": "1670740"
  },
  {
    "start": "1665000",
    "end": "1690000"
  },
  {
    "text": "file which is again if we didn't show um what we'd probably get boot out of here this this is what talks to tugboats so",
    "start": "1670740",
    "end": "1678480"
  },
  {
    "text": "here you see a simple file that I'll break down this bit here specifies where",
    "start": "1678480",
    "end": "1683700"
  },
  {
    "text": "you'd like a service deployed so again this is what helped us with our kubernetes migration something you may have seen in the past this here allows",
    "start": "1683700",
    "end": "1692480"
  },
  {
    "start": "1690000",
    "end": "1736000"
  },
  {
    "text": "developers to specify where they'd like a service deployed to one or many regions in the ecosystem remember I said",
    "start": "1692480",
    "end": "1698280"
  },
  {
    "text": "many multi tenant clusters but notice we're not exposing that detail to all developers all the time we're only",
    "start": "1698280",
    "end": "1705150"
  },
  {
    "text": "talking to them in the language they care about which is which regions do you want to deploy to you care about reliability you care about performance",
    "start": "1705150",
    "end": "1710640"
  },
  {
    "text": "here's a variable you can impact and lastly this is where a developer can",
    "start": "1710640",
    "end": "1715950"
  },
  {
    "text": "actually define how many replicas they want per region so how many clusters in a specific",
    "start": "1715950",
    "end": "1722190"
  },
  {
    "text": "region they'd like a service to ply to that's it that's what a developer has to do to hand over deployment to the",
    "start": "1722190",
    "end": "1727230"
  },
  {
    "text": "infrastructure for it to be federated out across clusters then there's a lot",
    "start": "1727230",
    "end": "1732660"
  },
  {
    "text": "of deployments and things can get a little bit messy so compass manages that",
    "start": "1732660",
    "end": "1738060"
  },
  {
    "start": "1736000",
    "end": "1770000"
  },
  {
    "text": "compass abstracts and manages which cluster or service is deployed to based on different algorithms in one important",
    "start": "1738060",
    "end": "1744660"
  },
  {
    "text": "thing to call out is having it at this abstraction level allows that algorithm to change so you can start by having",
    "start": "1744660",
    "end": "1751070"
  },
  {
    "text": "random cluster deployment to any cluster that makes sense and then you can get smarter and smarter over time choosing",
    "start": "1751070",
    "end": "1757650"
  },
  {
    "text": "clusters based on pod headspace or something else but as you know abstractions are only good until they",
    "start": "1757650",
    "end": "1764430"
  },
  {
    "text": "break and until you're in that dark room and it's 2:00 a.m. and things aren't working so for that we provide a couple",
    "start": "1764430",
    "end": "1772320"
  },
  {
    "text": "of different tools for observing service state across clusters and allowing developers to quickly get in the right",
    "start": "1772320",
    "end": "1778410"
  },
  {
    "text": "context so what I mean by that is if a service is deployed in a particular region the context for that a developer",
    "start": "1778410",
    "end": "1785520"
  },
  {
    "text": "doesn't have out of the box because you managed which cluster to deploy to so",
    "start": "1785520",
    "end": "1790830"
  },
  {
    "start": "1790000",
    "end": "1826000"
  },
  {
    "text": "here are a couple of visualizations from our developer portal called backstage at the top you'll see a snapshot of a mock",
    "start": "1790830",
    "end": "1796470"
  },
  {
    "text": "services current deployment across regions with an accompanying number of pots in each region so a simple visualizations they sort of",
    "start": "1796470",
    "end": "1803160"
  },
  {
    "text": "have the conceptual model for where they've been deployed at the bottom you see a bit more detail for each pod",
    "start": "1803160",
    "end": "1809360"
  },
  {
    "text": "including its current state and links into the cloud console so they can reason more deeply about a particular",
    "start": "1809360",
    "end": "1815520"
  },
  {
    "text": "pod this saves developers a ton of time and avoids them having to manually reason about where something went wrong",
    "start": "1815520",
    "end": "1821730"
  },
  {
    "text": "and as I mentioned to get into that context so that seems great there are",
    "start": "1821730",
    "end": "1828450"
  },
  {
    "start": "1826000",
    "end": "1862000"
  },
  {
    "text": "other techniques beyond what we did here these are some things that were looked at you'll see I mean a very simple",
    "start": "1828450",
    "end": "1834960"
  },
  {
    "text": "answer is that can potentially lead to over provisioning which may be something you don't care about at all",
    "start": "1834960",
    "end": "1840510"
  },
  {
    "text": "is deploying every service every cluster and just sort of assuming things will be fine that is not something that would",
    "start": "1840510",
    "end": "1845820"
  },
  {
    "text": "work for us second there's kubernetes cluster Federation again something we",
    "start": "1845820",
    "end": "1850830"
  },
  {
    "text": "look at I included the concept diagram on the right to show sort of the complication there we again aimed for",
    "start": "1850830",
    "end": "1856769"
  },
  {
    "text": "simplification as much as possible and is why we moved away so lastly building",
    "start": "1856769",
    "end": "1865169"
  },
  {
    "start": "1862000",
    "end": "1907000"
  },
  {
    "text": "on those alternatives these are a couple of things just to think about as you're you're yes thinking about multiple",
    "start": "1865169",
    "end": "1871529"
  },
  {
    "text": "clusters and deployments but even as you're thinking about rollouts and in particular cluster upgrades this Jago",
    "start": "1871529",
    "end": "1877019"
  },
  {
    "text": "set start simple don't over engineer your clusters in rollout machinery",
    "start": "1877019",
    "end": "1882210"
  },
  {
    "text": "something like compass and one big bang like that is never a good idea and",
    "start": "1882210",
    "end": "1887429"
  },
  {
    "text": "highly related always be weary of introducing any complexity in what you decide to build if your company is",
    "start": "1887429",
    "end": "1893850"
  },
  {
    "text": "anything like Spotify new engineers will be there different engineers will be trying to understand systems and",
    "start": "1893850",
    "end": "1899940"
  },
  {
    "text": "somebody who doesn't understand it or didn't build it should be able to reason about it and understand it or it is too",
    "start": "1899940",
    "end": "1905730"
  },
  {
    "text": "complex so to recap or two key takeaways when",
    "start": "1905730",
    "end": "1910740"
  },
  {
    "text": "operating kubernetes at scale think beyond steady States and in particular automate your cluster",
    "start": "1910740",
    "end": "1916350"
  },
  {
    "text": "upgrades and manage multi cluster deployments in a simple way and with that we'll go to infinity and beyond you",
    "start": "1916350",
    "end": "1923429"
  },
  {
    "text": "were definitely not getting out of here without a buzz lightyear Jeff any questions and actually we can we're",
    "start": "1923429",
    "end": "1936000"
  },
  {
    "text": "basically at time so do you want to just do questions outside",
    "start": "1936000",
    "end": "1940610"
  },
  {
    "text": "so they can totally see where they are oh sorry so the question was for development use cases how to essentially",
    "start": "1958679",
    "end": "1964840"
  },
  {
    "text": "how to developers see where things have been deployed to be able to to debug they absolutely can and actually what we",
    "start": "1964840",
    "end": "1970990"
  },
  {
    "text": "showed in the console the visualizations there they actually click into the pods and allow you to like see them up front",
    "start": "1970990",
    "end": "1978070"
  },
  {
    "text": "and center we've just provided a light abstraction over that to make it easier to get into that context so yes that is 100%",
    "start": "1978070",
    "end": "1983950"
  },
  {
    "text": "available to people just by default we don't put that front and center and they can get all the commands generated to",
    "start": "1983950",
    "end": "1989890"
  },
  {
    "text": "them to cube CTO into the right place",
    "start": "1989890",
    "end": "1993720"
  },
  {
    "text": "yes so that is also supported basically you can specify at creation time it's",
    "start": "1998340",
    "end": "2003419"
  },
  {
    "text": "not something we included here but that is a feature of compass that allows you to have a few services to look it",
    "start": "2003419",
    "end": "2010279"
  },
  {
    "text": "the question was about surge upgrades and how big a set can you upgrade one of",
    "start": "2029400",
    "end": "2034770"
  },
  {
    "text": "our very first customers to adopt this before it was made public and beta used",
    "start": "2034770",
    "end": "2039990"
  },
  {
    "text": "this at the 11th hour before a big launch and upgraded a large cluster and",
    "start": "2039990",
    "end": "2046220"
  },
  {
    "text": "who maybe Kobe's ear he told me that this happened he said I worked it was",
    "start": "2046220",
    "end": "2051570"
  },
  {
    "text": "you know 2008-2009 cluster and I said well how many did they do at a time and he said all of them I would not",
    "start": "2051570",
    "end": "2058800"
  },
  {
    "text": "recommend that but so I think you know 20 depending on how many nodes you have",
    "start": "2058800",
    "end": "2066240"
  },
  {
    "text": "and how much overhead there is and cost is a concern too right you're gonna create 2,000 new new nodes and then",
    "start": "2066240",
    "end": "2073409"
  },
  {
    "text": "migrate traffic to it so there's there's a balance there customer controls how",
    "start": "2073410",
    "end": "2078510"
  },
  {
    "text": "many at a time I think 20 is the exposed current limit at a time but we're open",
    "start": "2078510",
    "end": "2084750"
  },
  {
    "text": "to feedback on how many at a time not please not 2,000 at a time good thanks",
    "start": "2084750",
    "end": "2090600"
  },
  {
    "text": "again Austin and Jango was a presentation [Applause]",
    "start": "2090600",
    "end": "2097679"
  }
]