[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "welcome to this webinar around uh",
    "start": "840",
    "end": "6560"
  },
  {
    "text": "around events driven systems you know I was I was thinking talking a little bit",
    "start": "6560",
    "end": "11700"
  },
  {
    "text": "about my thoughts of how to design Events first microservices and apis really event driven but but in you know",
    "start": "11700",
    "end": "19920"
  },
  {
    "text": "with an emphasis on the own events that's why it's called Events first microservices and apis",
    "start": "19920",
    "end": "25699"
  },
  {
    "text": "my name is Jonas bonir I'm the CEO and uh and and founder of lightbed they",
    "start": "25699",
    "end": "33420"
  },
  {
    "text": "created akka it's like a long time ago now in 2009 and you know the last product we've been",
    "start": "33420",
    "end": "41579"
  },
  {
    "text": "we've been pushing out we're working on the last four years we've pushed out last year is calyx",
    "start": "41579",
    "end": "47899"
  },
  {
    "text": "but this is sort of a general talk um that is that that is generally used",
    "start": "47899",
    "end": "53640"
  },
  {
    "text": "for regardless if you use calyx or not but uh I'm also gonna you know lead in",
    "start": "53640",
    "end": "59460"
  },
  {
    "text": "how how calyx can fit into the picture and make anything making things a lot easier at the end so to speak so I hope",
    "start": "59460",
    "end": "65400"
  },
  {
    "text": "you stick around for that let's get started so",
    "start": "65400",
    "end": "71060"
  },
  {
    "start": "70000",
    "end": "115000"
  },
  {
    "text": "uh I assume a lot of people at least want to do want to want to do Market Services you know it's like in the and",
    "start": "71060",
    "end": "77880"
  },
  {
    "text": "hopefully you're doing it for the right organization microservices are apis and hopefully you're doing it for the right reasons you know that that um",
    "start": "77880",
    "end": "84900"
  },
  {
    "text": "a lot of focus I think personally should be about scaling the organization you know there's a lot there's a lot of benefits as we will you know most of",
    "start": "84900",
    "end": "90900"
  },
  {
    "text": "this talk we're going to be on the tech on the technical benefits but I just want to have it said that",
    "start": "90900",
    "end": "96479"
  },
  {
    "text": "scaling the organization is like one of the primary drivers for for my for microservices and having multiple",
    "start": "96479",
    "end": "102600"
  },
  {
    "text": "independent and fully autonomous teams being able to build and deploy and in",
    "start": "102600",
    "end": "108420"
  },
  {
    "text": "the features without getting in in each other's way so we're completely independent independently",
    "start": "108420",
    "end": "114060"
  },
  {
    "text": "and the the problem though with microservices if you're not uh you know",
    "start": "114060",
    "end": "120840"
  },
  {
    "start": "115000",
    "end": "203000"
  },
  {
    "text": "ready for it is that it's quite a big shift from the mark",
    "start": "120840",
    "end": "125880"
  },
  {
    "text": "from the monolith uh when you know when when we when we move to microservices we enter the world of this distributed",
    "start": "125880",
    "end": "132120"
  },
  {
    "text": "systems and that's really the world",
    "start": "132120",
    "end": "135860"
  },
  {
    "text": "when we exit the boundary of the service you know we enter into this Wild Ocean so to speak uh uh of not a determinism",
    "start": "138860",
    "end": "147840"
  },
  {
    "text": "and this is the world where where systems can fail in the most spectacular in an intricate way when information can",
    "start": "147840",
    "end": "154620"
  },
  {
    "text": "get lost and reordered and garbled and were you know failure failure detection",
    "start": "154620",
    "end": "160500"
  },
  {
    "text": "which is one of the better Tools in distributed systems is you know it's it's it's more or less a guessing game and this",
    "start": "160500",
    "end": "166620"
  },
  {
    "text": "this is a world that might sound terrifying uh if you're not used to it you know if you're if it's all new to",
    "start": "166620",
    "end": "173340"
  },
  {
    "text": "you but I have to say you know that is this is also the world that gives us solutions for a lot of the hard problems",
    "start": "173340",
    "end": "179220"
  },
  {
    "text": "you know there are there are you know it is enables us to accomplish things that",
    "start": "179220",
    "end": "184319"
  },
  {
    "text": "we can't do is it just working on in in a single machine you know on a single",
    "start": "184319",
    "end": "189840"
  },
  {
    "text": "core or on a single pod Etc uh it because it gives us solution for",
    "start": "189840",
    "end": "195120"
  },
  {
    "text": "resilience you know for elasticity for through isolation and a lot and a lot of",
    "start": "195120",
    "end": "201420"
  },
  {
    "text": "other things so uh you know I mean too often in my in in",
    "start": "201420",
    "end": "207300"
  },
  {
    "start": "203000",
    "end": "287000"
  },
  {
    "text": "my in my experience companies end up with with it with an architecture something like this you know a set of",
    "start": "207300",
    "end": "213720"
  },
  {
    "text": "what I call microliths you know so you you sort of stumble and fall halfway towards towards microservices uh and and",
    "start": "213720",
    "end": "222739"
  },
  {
    "text": "uh and what I what I mean by market list is that you have you have these method calls that are replaced by synchronous",
    "start": "222739",
    "end": "230220"
  },
  {
    "text": "RPC calls and you're still using crud you know in in a fully blocking way and",
    "start": "230220",
    "end": "235739"
  },
  {
    "text": "and by by by bringing you know blocking um IO and and and and",
    "start": "235739",
    "end": "241879"
  },
  {
    "text": "you know blocking database calls and all these things you know over from from the monolith where they where",
    "start": "241879",
    "end": "248340"
  },
  {
    "text": "they usually work very very well over to the world of distributed systems means that we have we have we you know we",
    "start": "248340",
    "end": "255000"
  },
  {
    "text": "entered in like strong strong temporal coupling and and this and this and and this and this strong temporal coupling",
    "start": "255000",
    "end": "261900"
  },
  {
    "text": "limits Us in the way we can do scale scalability and availability and also extensibility and in my opinion",
    "start": "261900",
    "end": "268979"
  },
  {
    "text": "no experience also maintainability you know you you sort of start piling up complexity as you as you go along",
    "start": "268979",
    "end": "275759"
  },
  {
    "text": "instead of having it in it on on the same level uh uh you know across the life cycle of an",
    "start": "275759",
    "end": "283080"
  },
  {
    "text": "application I think we can do better better than this I know we can and and thinking in events",
    "start": "283080",
    "end": "290160"
  },
  {
    "start": "287000",
    "end": "416000"
  },
  {
    "text": "can help you know uh domain driven design from an event's",
    "start": "290160",
    "end": "296340"
  },
  {
    "text": "first perspective I really think that is that is sort of a Gateway towards really good uh uh you know",
    "start": "296340",
    "end": "303479"
  },
  {
    "text": "system design and architecture so let's talk about that you know what what what what else events uh first domain driven",
    "start": "303479",
    "end": "310680"
  },
  {
    "text": "design mean and let's try just review the world through the lens of events",
    "start": "310680",
    "end": "316380"
  },
  {
    "text": "okay the first thing is one of the gives her a world of warning you know domain-driven design is is really a",
    "start": "316380",
    "end": "322560"
  },
  {
    "text": "great tool but it can it can it can easily lead us down to in the wrong in the wrong path you know Greg young said",
    "start": "322560",
    "end": "329460"
  },
  {
    "text": "if you if you if if you a few years back when you start modeling events it forces",
    "start": "329460",
    "end": "335220"
  },
  {
    "text": "you to think about the the behavior of the system as opposed to thinking about the structure of the system you know the",
    "start": "335220",
    "end": "341880"
  },
  {
    "text": "the problem with domain objects and things we're we're taught with DDD but also an object-oriented programming you",
    "start": "341880",
    "end": "347520"
  },
  {
    "text": "know and so is that is that it is focusing also it it",
    "start": "347520",
    "end": "353400"
  },
  {
    "text": "you know it forces you or it led it leads you to focus on structure too",
    "start": "353400",
    "end": "358800"
  },
  {
    "text": "early in the in the design process well while I think that we should we should look at the events",
    "start": "358800",
    "end": "366240"
  },
  {
    "text": "and we should not focus on the things you know this is what we've been taught in",
    "start": "366240",
    "end": "371699"
  },
  {
    "text": "all the back in University when I when I took my first C plus plus course and it will get introduced to object-oriented",
    "start": "371699",
    "end": "379500"
  },
  {
    "text": "programming it was it was you know you know it was it was taught that one should find them",
    "start": "379500",
    "end": "385620"
  },
  {
    "text": "find the nuns you know because these nuns will become my my objects in the you know in the in in when it comes to",
    "start": "385620",
    "end": "391500"
  },
  {
    "text": "domain driven design and my my domain objects instead I think that we should focus",
    "start": "391500",
    "end": "397380"
  },
  {
    "text": "at least first you know we shouldn't ignore the nouns and the things of course but we should focus first on what",
    "start": "397380",
    "end": "403680"
  },
  {
    "text": "happens you know the verbs we try the verbs and and because the verbs would lead us to the events while the nouns",
    "start": "403680",
    "end": "409740"
  },
  {
    "text": "lead us to to our more rigid and stationary objects okay",
    "start": "409740",
    "end": "416940"
  },
  {
    "start": "416000",
    "end": "516000"
  },
  {
    "text": "but let's let's take a step back and and and look at what is really an an event",
    "start": "416940",
    "end": "422699"
  },
  {
    "text": "and what is there the nature of of events events that represents uh",
    "start": "422699",
    "end": "428340"
  },
  {
    "text": "immutable facts of info of information and and facts only accrue I mean",
    "start": "428340",
    "end": "435780"
  },
  {
    "text": "knowledge can only grow you can't sort of unlearn and sure you can't forget",
    "start": "435780",
    "end": "441539"
  },
  {
    "text": "something but but but but in in you know on the conceptual level you can only",
    "start": "441539",
    "end": "446639"
  },
  {
    "text": "accrue knowledge and and facts you know just your crew uh it is however you know of course",
    "start": "446639",
    "end": "454800"
  },
  {
    "text": "naturally certain effects can be regarded and ignored I mean you might not believe in",
    "start": "454800",
    "end": "460380"
  },
  {
    "text": "something that's that someone said we don't we don't have to accept everything that's being that we're being told it's",
    "start": "460380",
    "end": "466500"
  },
  {
    "text": "also very important that that if events or facts can't be retracted once they",
    "start": "466500",
    "end": "471660"
  },
  {
    "text": "are accepted you know then there well if you accept a fact then then then they're",
    "start": "471660",
    "end": "477720"
  },
  {
    "text": "part of your of your knowledge their pool of knowledge so to speak",
    "start": "477720",
    "end": "482759"
  },
  {
    "text": "and also events and facts they are they represent something that has already happened so they can't be deleted once",
    "start": "482759",
    "end": "490259"
  },
  {
    "text": "once accepted but of course they might have to be deleted for you know for legal reasons you know thinking gdpr or",
    "start": "490259",
    "end": "496560"
  },
  {
    "text": "more morally reasons and so on but what is really important you know and the way when I say that that facts only a crew I",
    "start": "496560",
    "end": "503340"
  },
  {
    "text": "mean is is of course natural like new facts arriving can invalidate old facts",
    "start": "503340",
    "end": "508860"
  },
  {
    "text": "or existing facts because we you know we learn and we might change opinion based",
    "start": "508860",
    "end": "513899"
  },
  {
    "text": "on new information so so we should ask ourselves you know what are the facts mind the facts like a",
    "start": "513899",
    "end": "520800"
  },
  {
    "start": "516000",
    "end": "582000"
  },
  {
    "text": "detective and one really good tool for that is event is event storming you know",
    "start": "520800",
    "end": "526320"
  },
  {
    "text": "event storming is a very very practical Hands-On technique when you we're bringing all the stakeholders domain",
    "start": "526320",
    "end": "531660"
  },
  {
    "text": "experts and programmers into one single room and you brainstorm using Post-it notes",
    "start": "531660",
    "end": "537500"
  },
  {
    "text": "you know and they and the with the purpose they're not trying to find the domain language how we can talk and",
    "start": "537500",
    "end": "543959"
  },
  {
    "text": "communicate across things in different groups you know stakeholders and programmers and so on but do that",
    "start": "543959",
    "end": "550019"
  },
  {
    "text": "through events and we do that by by trying to understand how data flows and",
    "start": "550019",
    "end": "555180"
  },
  {
    "text": "who's talking to who and and understanding causality I mean what is what is leading to what how facts are",
    "start": "555180",
    "end": "561060"
  },
  {
    "text": "causally related and so on and and the and the whole idea",
    "start": "561060",
    "end": "566100"
  },
  {
    "text": "here is that to really understand how the system functions how it works in real time not just like a map of",
    "start": "566100",
    "end": "573600"
  },
  {
    "text": "stationary objects uh that might communicate you know that's remodeling the the objects and the nouns that I",
    "start": "573600",
    "end": "580920"
  },
  {
    "text": "talked about so we should really try to understand two things first the intense",
    "start": "580920",
    "end": "587480"
  },
  {
    "start": "582000",
    "end": "632000"
  },
  {
    "text": "when we talk about intense we mean looking for things like sir these are",
    "start": "587480",
    "end": "593339"
  },
  {
    "text": "hints for intents you know communication conversations expectations",
    "start": "593339",
    "end": "599000"
  },
  {
    "text": "contracts between parties you know transfer control from one party to another",
    "start": "599000",
    "end": "605160"
  },
  {
    "text": "and we should also look for for for the facts and and when it comes to the facts",
    "start": "605160",
    "end": "610500"
  },
  {
    "text": "you know hints for good facts for State history causality notifications transfer of State instead",
    "start": "610500",
    "end": "617760"
  },
  {
    "text": "of transfer control and you know the intense",
    "start": "617760",
    "end": "622980"
  },
  {
    "text": "usually becomes our commands while our while the facts becomes our events",
    "start": "622980",
    "end": "630800"
  },
  {
    "text": "so this is something that I think it can be can be helpful to to to think about so let's try to understand how commands",
    "start": "631500",
    "end": "638220"
  },
  {
    "start": "632000",
    "end": "830000"
  },
  {
    "text": "and events you know work a little bit better here for commands you know they there are the object form of a method or",
    "start": "638220",
    "end": "645720"
  },
  {
    "text": "an action or of a request okay they're always stated in the",
    "start": "645720",
    "end": "651000"
  },
  {
    "text": "imperative you know the create order or  product like do something while you know well then we have",
    "start": "651000",
    "end": "657660"
  },
  {
    "text": "reactions reactions you know they represent the side effect the result of",
    "start": "657660",
    "end": "662940"
  },
  {
    "text": "that uh command you know create or rook in order might be created that that that's sort of causing aside a side",
    "start": "662940",
    "end": "670440"
  },
  {
    "text": "effect but once you have done the job of observe",
    "start": "670440",
    "end": "676700"
  },
  {
    "text": "executing that order for example or create or created that order then you create a fact representing you know the",
    "start": "676700",
    "end": "685019"
  },
  {
    "text": "fact that something was done some so so an event is really a factor some representing something that has",
    "start": "685019",
    "end": "691019"
  },
  {
    "text": "already happened so they so so events should be always phrased in past tense like order created",
    "start": "691019",
    "end": "697320"
  },
  {
    "text": "instead of create order order credit is something that already happened or product shipped and so on",
    "start": "697320",
    "end": "704220"
  },
  {
    "text": "make sense everyone's naughty I hope at least",
    "start": "704220",
    "end": "709860"
  },
  {
    "text": "uh but let's dig a little bit deeper here so and look at the difference between commands and events you know",
    "start": "709860",
    "end": "716160"
  },
  {
    "text": "commands are really all about intent they are directed from one party to",
    "start": "716160",
    "end": "721260"
  },
  {
    "text": "another from A to B you know they have usually a single addressable destination",
    "start": "721260",
    "end": "726360"
  },
  {
    "text": "okay they they tend to model personal communication very very well and they do",
    "start": "726360",
    "end": "732360"
  },
  {
    "text": "have a distributed Focus okay because they move across address spaces from one",
    "start": "732360",
    "end": "738600"
  },
  {
    "text": "component to another from one system to another from from you know into message broker and then off to somewhere else",
    "start": "738600",
    "end": "743700"
  },
  {
    "text": "whatever it is and they and they tend to really sort of a model very well command and",
    "start": "743700",
    "end": "751140"
  },
  {
    "text": "control events are very different you know there are Intense or intent lists there are usually you know or or true",
    "start": "751140",
    "end": "758579"
  },
  {
    "text": "events should be emitted completely anonymously they just happen you know for for anyone that's interested to",
    "start": "758579",
    "end": "764399"
  },
  {
    "text": "observe can be zero can be ten can be 100 you know the one emitting the event",
    "start": "764399",
    "end": "770160"
  },
  {
    "text": "doesn't care he missed the event and whoever is interested in listening to that can do can do so as you know",
    "start": "770160",
    "end": "777480"
  },
  {
    "text": "as much as he or he'll he like she she like uh",
    "start": "777480",
    "end": "782940"
  },
  {
    "text": "um events model broadcast you know sort of Speakers Corner or you know me talking to you here I have no idea how",
    "start": "782940",
    "end": "789600"
  },
  {
    "text": "many are listening if or if I'm making any sense but I'm making my statements and hopefully state facts regardless you",
    "start": "789600",
    "end": "796320"
  },
  {
    "text": "know events observe a local Focus instead of a distributed Focus I only admit the",
    "start": "796320",
    "end": "802139"
  },
  {
    "text": "bands locally they might be relayed in a Distributive fashion using some other mechanisms but but but but you know",
    "start": "802139",
    "end": "809540"
  },
  {
    "text": "conceptually you should think about them as happening locally well commands it",
    "start": "809540",
    "end": "815160"
  },
  {
    "text": "usually only makes sense if I you know in the distributor setting I'm telling someone else to do something",
    "start": "815160",
    "end": "821519"
  },
  {
    "text": "so events really model autonomy versus commands model command and",
    "start": "821519",
    "end": "827459"
  },
  {
    "text": "control and autonomy is good right so events really lead us on a really good path here but but uh so",
    "start": "827459",
    "end": "836220"
  },
  {
    "start": "830000",
    "end": "929000"
  },
  {
    "text": "I think that we should you know work with the events and let the events Define you know the bounded context you",
    "start": "836220",
    "end": "841560"
  },
  {
    "text": "know and Define the the protocols that that Define that you know the promises that we make tonight or or a component",
    "start": "841560",
    "end": "848579"
  },
  {
    "text": "make to NASA world and and and and and Defiance also what happens if we can't",
    "start": "848579",
    "end": "853680"
  },
  {
    "text": "keep those those those promises and anyways or these are inverts the uh the",
    "start": "853680",
    "end": "859079"
  },
  {
    "text": "control here it's actually the services in control and any and in charge of his",
    "start": "859079",
    "end": "864899"
  },
  {
    "text": "own destiny so the question is then how can we how how can we do that what are the the characteristics of an event",
    "start": "864899",
    "end": "871920"
  },
  {
    "text": "driven uh service first you know eventually Services they",
    "start": "871920",
    "end": "878339"
  },
  {
    "text": "receive and react or choose not to react it's okay to disregard you know",
    "start": "878339",
    "end": "883699"
  },
  {
    "text": "facts but but eventually receive and react to facts that is sort of coming his way",
    "start": "883699",
    "end": "889500"
  },
  {
    "text": "they publish new facts ideally I'd say",
    "start": "889500",
    "end": "894540"
  },
  {
    "text": "um you know it's not religious here you know sometimes it might make sense to to publish facts in a synchronous fashion",
    "start": "894540",
    "end": "900660"
  },
  {
    "text": "but I think ideally they should be be published asynchronously you know without any expectation that anyone I",
    "start": "900660",
    "end": "906839"
  },
  {
    "text": "will ever ever do anything or even even listen you know but it just published new facts as they as they are created to",
    "start": "906839",
    "end": "914160"
  },
  {
    "text": "the for the rest of the world to to to to listen and this really has said in verse they control flow and in in and as",
    "start": "914160",
    "end": "922620"
  },
  {
    "text": "is as such you know minimizing the coupling between components and increasing the autonomy all good things",
    "start": "922620",
    "end": "929760"
  },
  {
    "start": "929000",
    "end": "1013000"
  },
  {
    "text": "you know a lot of people are asking me what about me mutable State you know then then if everything should be",
    "start": "929760",
    "end": "935300"
  },
  {
    "text": "immutable and immutable you know has a reputation being hard to work with and so on uh",
    "start": "935300",
    "end": "941220"
  },
  {
    "text": "you know I'd say mutable state is just it's just fine the important thing is how you work with it I think it's fine",
    "start": "941220",
    "end": "947820"
  },
  {
    "text": "but it needs to be contained and it needs to be non-observable to the",
    "start": "947820",
    "end": "953399"
  },
  {
    "text": "rest of the world because if other if the rest of the world sir depend on mutable State then they will depend on",
    "start": "953399",
    "end": "960000"
  },
  {
    "text": "things that change you know can change at any point right under the fingers while while another other component is",
    "start": "960000",
    "end": "966899"
  },
  {
    "text": "using it or observing it you know that that that that calls for a very very you",
    "start": "966899",
    "end": "972420"
  },
  {
    "text": "know brittle uh design so so what you want to do you",
    "start": "972420",
    "end": "978060"
  },
  {
    "text": "know is you want to contain it in sort of A Safe Haven and only use mutable stage for local computations okay but",
    "start": "978060",
    "end": "985860"
  },
  {
    "text": "when you're done with your processing and you're ready to tell the world about your results then you then you can use those immutable values",
    "start": "985860",
    "end": "992699"
  },
  {
    "text": "and publish them as facts and to communicate I did this you know this is my result and I published that to the",
    "start": "992699",
    "end": "999060"
  },
  {
    "text": "outside world you know this means that others can then rely their reasoning and their actions",
    "start": "999060",
    "end": "1005540"
  },
  {
    "text": "based on stable information instead of something that might just change at any point in time",
    "start": "1005540",
    "end": "1012820"
  },
  {
    "text": "so let's take a look a little a little example here let's say we have we have",
    "start": "1012820",
    "end": "1018019"
  },
  {
    "start": "1013000",
    "end": "1183000"
  },
  {
    "text": "we have a user it's it's it sends a command to this uh this queue this",
    "start": "1018019",
    "end": "1023300"
  },
  {
    "text": "mailbox or you know in in this in this service and and some sort of",
    "start": "1023300",
    "end": "1029000"
  },
  {
    "text": "side effect is ha is happening now uh you know that generates an event it it's",
    "start": "1029000",
    "end": "1035660"
  },
  {
    "text": "it's sent to some sort of event stream where other services then can can pick",
    "start": "1035660",
    "end": "1042020"
  },
  {
    "text": "can pick can pick that up and choose to act on these on these events or or on",
    "start": "1042020",
    "end": "1047480"
  },
  {
    "text": "this event you know single event that that now happened the interesting thing here now you know that this also is a",
    "start": "1047480",
    "end": "1054200"
  },
  {
    "text": "really really good it's not just you know gives you really really Loosely coupled architecture uh uh and and and and and",
    "start": "1054200",
    "end": "1062059"
  },
  {
    "text": "all the benefits for scalability and and and resilience and all these things it also it makes it very easy to integrate",
    "start": "1062059",
    "end": "1068299"
  },
  {
    "text": "you know with with the external systems and integrate with databases and other other data storages you know because of",
    "start": "1068299",
    "end": "1075320"
  },
  {
    "text": "course you can replace one of these services or add you know instead of course in place but you can add",
    "start": "1075320",
    "end": "1081140"
  },
  {
    "text": "databases and then you can add like a sort of external systems",
    "start": "1081140",
    "end": "1086720"
  },
  {
    "text": "uh that you know we can they can all just subscribe to this event that happened and and sort of build up their",
    "start": "1086720",
    "end": "1093500"
  },
  {
    "text": "knowledge base of what's going on in the system",
    "start": "1093500",
    "end": "1099160"
  },
  {
    "text": "um is is it's very important to understand that for this to work very well you know in terms of their of the",
    "start": "1099380",
    "end": "1105799"
  },
  {
    "text": "of the constraints of distributed systems you know I really think that you know you need to dive into eventual",
    "start": "1105799",
    "end": "1111320"
  },
  {
    "text": "consistency here which might be a little bit scary but it's it's okay you know it it's um it's not as hard as it looks and",
    "start": "1111320",
    "end": "1117980"
  },
  {
    "text": "there are great patterns and tools that that will help you work with that uh because",
    "start": "1117980",
    "end": "1125179"
  },
  {
    "text": "you know if if if if you do that you know this pattern",
    "start": "1125179",
    "end": "1130460"
  },
  {
    "text": "is really really good for also managing failure let's say that that that one of the services crashes here then and lose",
    "start": "1130460",
    "end": "1137539"
  },
  {
    "text": "his holy State you know then he can just resubscribe uh to this uh uh event",
    "start": "1137539",
    "end": "1143720"
  },
  {
    "text": "stream Mr pull everything that it missed or perhaps even like pull everything from if it wasn't like durable on disk",
    "start": "1143720",
    "end": "1150860"
  },
  {
    "text": "you know you can pull everything from from from from uh from uh the start of the of the system you know",
    "start": "1150860",
    "end": "1158360"
  },
  {
    "text": "if but then you need to rely on things like event sources I will talk about in a second but but it can do it it can",
    "start": "1158360",
    "end": "1164840"
  },
  {
    "text": "just continue you know sort of pulling events from from where it left up when",
    "start": "1164840",
    "end": "1169880"
  },
  {
    "text": "it when it crashed so so it makes it very very easy to to deal with things like in the partial failures and having",
    "start": "1169880",
    "end": "1176780"
  },
  {
    "text": "having a sort of rigid and various structured way of recovering from failure based on based on events",
    "start": "1176780",
    "end": "1183679"
  },
  {
    "start": "1183000",
    "end": "1251000"
  },
  {
    "text": "uh do you remember uh sort of you know this picture what has this this Wild Ocean of none of non-determinism I",
    "start": "1183679",
    "end": "1191059"
  },
  {
    "text": "really think that events can help us sort of craft this autonomous Islands or safe islands of of determinism and",
    "start": "1191059",
    "end": "1198320"
  },
  {
    "text": "answer a strong consistency uh uh sort of sort of safe havens in this whole",
    "start": "1198320",
    "end": "1204559"
  },
  {
    "text": "Wild Ocean of non-determinism you know in which we can sort of live happily under the illusion that you know time is",
    "start": "1204559",
    "end": "1210320"
  },
  {
    "text": "absolute that there's a single now you know and and that and that the world is",
    "start": "1210320",
    "end": "1215360"
  },
  {
    "text": "is deterministic because in within each one of these little Islands you know we",
    "start": "1215360",
    "end": "1220940"
  },
  {
    "text": "can sort of pretend that the world is is is is deterministic it's single threaded",
    "start": "1220940",
    "end": "1226220"
  },
  {
    "text": "it you know we you you get you you pick a one command after another or one event",
    "start": "1226220",
    "end": "1231620"
  },
  {
    "text": "from another and you and you and you can execute in if things in in a linear fashion the the interesting thing is",
    "start": "1231620",
    "end": "1237799"
  },
  {
    "text": "that then you know things can throw a crash and burn around you but but but you you don't lose your sanity in this",
    "start": "1237799",
    "end": "1244760"
  },
  {
    "text": "little small safe Island you know of determinism so to speak",
    "start": "1244760",
    "end": "1250880"
  },
  {
    "text": "so so uh to model this I think we you know we need to go back to domain driven design and and and and a really good",
    "start": "1250880",
    "end": "1257120"
  },
  {
    "text": "tool here is the entity you know the entity is really is really are are are sort of unit of of the",
    "start": "1257120",
    "end": "1266539"
  },
  {
    "text": "Integrity of consistency of our unit of failure",
    "start": "1266539",
    "end": "1271820"
  },
  {
    "text": "it gives you and because it's you know if it and also our unit of determinism you know an entity is always Atomic if",
    "start": "1271820",
    "end": "1279020"
  },
  {
    "text": "it's sort of it it fails as a whole it moves around as a whole is is sort of brought back to life and recovering from",
    "start": "1279020",
    "end": "1286039"
  },
  {
    "text": "failure as a whole an entity means that you know that if you if you build it you",
    "start": "1286039",
    "end": "1291620"
  },
  {
    "text": "know using event driven design it is fully autonomous and",
    "start": "1291620",
    "end": "1298700"
  },
  {
    "text": "the question is then how do you then coordinate State between all of these little islands all of these sort of",
    "start": "1298700",
    "end": "1304400"
  },
  {
    "start": "1299000",
    "end": "1397000"
  },
  {
    "text": "entities how can we ensure consistency and consensus across these these islands",
    "start": "1304400",
    "end": "1310640"
  },
  {
    "text": "because it it doesn't help much if we you know if we if we have full control in each one of these boxes but but",
    "start": "1310640",
    "end": "1317059"
  },
  {
    "text": "there's no way of making them you know work together because I mean all systems are comprised of many different parts of",
    "start": "1317059",
    "end": "1324200"
  },
  {
    "text": "course and and they're all as important so how how so how can we put together systems of these little Islands then",
    "start": "1324200",
    "end": "1331520"
  },
  {
    "text": "yeah Patel in this that is that is you know one of my heroes uh I've learned so",
    "start": "1331520",
    "end": "1336919"
  },
  {
    "text": "much from him you know he talks a lot about you know defining sort of clear boundaries",
    "start": "1336919",
    "end": "1342320"
  },
  {
    "text": "between certainty and uncertainty and and and he has this nice framework you",
    "start": "1342320",
    "end": "1348380"
  },
  {
    "text": "know I pulled from one of his papers where he talked about first inside data",
    "start": "1348380",
    "end": "1353659"
  },
  {
    "text": "that is our local present or that that is our current present you know that's",
    "start": "1353659",
    "end": "1358880"
  },
  {
    "text": "inside this little island inside the box that's our local state okay",
    "start": "1358880",
    "end": "1364159"
  },
  {
    "text": "then we have outside data that is like outside our little bubble here he calls",
    "start": "1364159",
    "end": "1369679"
  },
  {
    "text": "that blast from the past that's our Advanced and our facts are flowing between these islands",
    "start": "1369679",
    "end": "1376640"
  },
  {
    "text": "and then between the services we have what he calls almost um you know poetically hope for the",
    "start": "1376640",
    "end": "1382700"
  },
  {
    "text": "future that's our commands you know how you can dictate someone to do something or or or order someone to do something",
    "start": "1382700",
    "end": "1389960"
  },
  {
    "text": "so I think this is a really good framework how to think about um about the world that at least help",
    "start": "1389960",
    "end": "1396080"
  },
  {
    "text": "helped me a lot and you know m is there embarking on it on a journey like this if you if you if",
    "start": "1396080",
    "end": "1402500"
  },
  {
    "start": "1397000",
    "end": "1456000"
  },
  {
    "text": "you're multi-world using events and and you amid them into an event Stream So that",
    "start": "1402500",
    "end": "1408559"
  },
  {
    "text": "others can can subscribe to then then you can use that event stream as a communication fabric between",
    "start": "1408559",
    "end": "1414679"
  },
  {
    "text": "components or Services you can use it as an Indus integration fabric as I showed you earlier you can use it as a",
    "start": "1414679",
    "end": "1421700"
  },
  {
    "text": "replication fabric you know I mean Minister having sort of active passive replication where you always have have a",
    "start": "1421700",
    "end": "1428120"
  },
  {
    "text": "passive halt standby because that that's just consuming the events and and in the",
    "start": "1428120",
    "end": "1433400"
  },
  {
    "text": "case of failure it's you know it can just flip you can just flip over there and it's everything is is ready like it",
    "start": "1433400",
    "end": "1439640"
  },
  {
    "text": "doesn't cost you much at all almost anything to have to to build you know really solid replication into the model",
    "start": "1439640",
    "end": "1445880"
  },
  {
    "text": "here you can also use the advanced stream as a persistence Fabric and that is something I'd like to dive in a little",
    "start": "1445880",
    "end": "1452240"
  },
  {
    "text": "bit deeper on here and talk about event based persistence you know the the",
    "start": "1452240",
    "end": "1457520"
  },
  {
    "start": "1456000",
    "end": "1505000"
  },
  {
    "text": "problem with crud you know there's crowd is great of course it works beautifully in the you know in the in the sort of",
    "start": "1457520",
    "end": "1464720"
  },
  {
    "text": "Safe Haven you know say of of the monolith where you can where you can assume a lot of more things than you can",
    "start": "1464720",
    "end": "1471380"
  },
  {
    "text": "do in in a distributed system uh so so I'd say you know you know in",
    "start": "1471380",
    "end": "1477080"
  },
  {
    "text": "the first like Market services in in the microservice architecture you know each market service should really own its own",
    "start": "1477080",
    "end": "1483260"
  },
  {
    "text": "data and and I think crowd as I said is totally fine for isolated data",
    "start": "1483260",
    "end": "1489260"
  },
  {
    "text": "but the but you know the problem is that that that the consistency across crud Services is",
    "start": "1489260",
    "end": "1497419"
  },
  {
    "text": "really is is really really hard and uh you know it's really hard to do joins you know you usually end up with",
    "start": "1497419",
    "end": "1504260"
  },
  {
    "text": "ad hoc or very weak again guarantees and and and you know Patel and he in his in his",
    "start": "1504260",
    "end": "1511760"
  },
  {
    "start": "1505000",
    "end": "1562000"
  },
  {
    "text": "great uh paper standing on the shoulders of giants he you know he said that two-phase commit essentially",
    "start": "1511760",
    "end": "1518480"
  },
  {
    "text": "transactions you know across across you know contexts is the ad availability",
    "start": "1518480",
    "end": "1524299"
  },
  {
    "text": "protocol you know if it leads to poor availability you know two-phase commit introduces a sort of temporal coupling",
    "start": "1524299",
    "end": "1531980"
  },
  {
    "text": "and there's really no way no good way of say to deal with with partial failures which is quite common in the distributed",
    "start": "1531980",
    "end": "1539360"
  },
  {
    "text": "system you end up with poor scalability you know we're usually very high contention blocking uh wait time and a",
    "start": "1539360",
    "end": "1547220"
  },
  {
    "text": "really bad performance you know because usually baller necking on those on those cues so and and and and and and and most",
    "start": "1547220",
    "end": "1553279"
  },
  {
    "text": "of these transaction algorithms you know have some sort have some some moments of stopping the world to ensure of strong",
    "start": "1553279",
    "end": "1560240"
  },
  {
    "text": "consistency so I really think that strong consistency is the wrong default in distributed",
    "start": "1560240",
    "end": "1567200"
  },
  {
    "start": "1562000",
    "end": "1640000"
  },
  {
    "text": "systems there's nothing wrong with strong consistency when it when it fits it is beautiful it makes our lives a lot as",
    "start": "1567200",
    "end": "1574520"
  },
  {
    "text": "developers of course a lot easier but I don't think we should opt in all strong",
    "start": "1574520",
    "end": "1579559"
  },
  {
    "text": "consistency as the default as the first thing we do why because it's really hard",
    "start": "1579559",
    "end": "1584960"
  },
  {
    "text": "to make available uh and it's and you know on the question okay how does it map to the real world",
    "start": "1584960",
    "end": "1591200"
  },
  {
    "text": "yeah when you look at it and think about it it's actually not how the re how the real world works at all we never have",
    "start": "1591200",
    "end": "1597020"
  },
  {
    "text": "strong consistency in the in the real in the real world and and uh you know it's",
    "start": "1597020",
    "end": "1602120"
  },
  {
    "text": "the real world is all bent on through events flowing causality you know one",
    "start": "1602120",
    "end": "1607279"
  },
  {
    "text": "thing leading to the next uh you know springing back from failure and so on",
    "start": "1607279",
    "end": "1613220"
  },
  {
    "text": "for all the async and fully autonomous and so on uh and we get by in the real world just fine right so so so it's not",
    "start": "1613220",
    "end": "1621860"
  },
  {
    "text": "so scary to dive into that world when it comes to Building Systems as well I think because if we do you know if you if we",
    "start": "1621860",
    "end": "1628640"
  },
  {
    "text": "use strong consistency as as as a default uh and and you know I think it",
    "start": "1628640",
    "end": "1634820"
  },
  {
    "text": "just makes things work worse uh so the question in that is then",
    "start": "1634820",
    "end": "1640340"
  },
  {
    "start": "1640000",
    "end": "1698000"
  },
  {
    "text": "what can we do we have to rely on eventual consistency and and you know I don't think it",
    "start": "1640340",
    "end": "1647120"
  },
  {
    "text": "necessary says it's it's a scary um as a lot of people say it's it's",
    "start": "1647120",
    "end": "1653059"
  },
  {
    "text": "actually yeah I I just encourage you to relax and just think about how can I best model the real world you know",
    "start": "1653059",
    "end": "1659360"
  },
  {
    "text": "because usually that's what we do as as programmers we track them all in some sort of business business cases or",
    "start": "1659360",
    "end": "1665840"
  },
  {
    "text": "business rules and and you know operate you know model some some real world scenarios and and when you really think",
    "start": "1665840",
    "end": "1671480"
  },
  {
    "text": "about it it's usually all based on eventual consistency in the end and uh and and and and so start with that start",
    "start": "1671480",
    "end": "1678559"
  },
  {
    "text": "with try to model it using using eventual consistency and when you see an",
    "start": "1678559",
    "end": "1683720"
  },
  {
    "text": "opportunity for strong consistency feel free to use it you know it's great",
    "start": "1683720",
    "end": "1688760"
  },
  {
    "text": "stuff but but but you need to be be sure that that the price for using it is not",
    "start": "1688760",
    "end": "1694820"
  },
  {
    "text": "too high it's effectively you know the main problem with crowd is",
    "start": "1694820",
    "end": "1701299"
  },
  {
    "start": "1698000",
    "end": "1823000"
  },
  {
    "text": "is updating place and and Jim Gray another one of my heroes uh you know he",
    "start": "1701299",
    "end": "1706640"
  },
  {
    "text": "uh you know he's one of the the ones doing most groundbreaking work on transactions and and transaction",
    "start": "1706640",
    "end": "1712760"
  },
  {
    "text": "processing you know he said in 1981 that update in",
    "start": "1712760",
    "end": "1717799"
  },
  {
    "text": "place strikes the system designers as the cardinal sin it violates traditional accounting practices that have been",
    "start": "1717799",
    "end": "1724220"
  },
  {
    "text": "absurd for hundreds of years yeah you know you should let that sink in",
    "start": "1724220",
    "end": "1730760"
  },
  {
    "text": "and again you know we should learn from The Real World okay if updating places so bad I mean how how do we how do other",
    "start": "1730760",
    "end": "1737659"
  },
  {
    "text": "other you know you know so fields or or you know Industries doing it uh you know",
    "start": "1737659",
    "end": "1745100"
  },
  {
    "text": "I I think we should just go back and look and relearn basic accounting principles you know and and and and and",
    "start": "1745100",
    "end": "1751279"
  },
  {
    "text": "and it's doing so you know we might have a lot of unlearning to do because we've been spoiled by computer science in this",
    "start": "1751279",
    "end": "1757700"
  },
  {
    "text": "in in the world of one machine One Core one thread or whatever it is you know for two for for too long",
    "start": "1757700",
    "end": "1764360"
  },
  {
    "text": "so I really think that we should we should we should learn to rely on on proven practices for bookkeeping you",
    "start": "1764360",
    "end": "1770659"
  },
  {
    "text": "know they that you know that's really technology that are centuries old and",
    "start": "1770659",
    "end": "1776480"
  },
  {
    "text": "has proven to be a really good way of making sense of data and and the main column sort of concept",
    "start": "1776480",
    "end": "1782720"
  },
  {
    "text": "here is is is event logging uh you know if if we translate that to or to or or",
    "start": "1782720",
    "end": "1789919"
  },
  {
    "text": "to our world here and event logging means that you store each event in the",
    "start": "1789919",
    "end": "1795020"
  },
  {
    "text": "order they arrive durable on disk just like transactions in The Ledger you know",
    "start": "1795020",
    "end": "1800299"
  },
  {
    "text": "like you can see on this picture here and and if we if we do so you know I think that event loading can really be",
    "start": "1800299",
    "end": "1806419"
  },
  {
    "text": "the bedrock in our system that we can build you know that we can use to build",
    "start": "1806419",
    "end": "1811940"
  },
  {
    "text": "consistency or you know availability scalability traceability you know that",
    "start": "1811940",
    "end": "1818419"
  },
  {
    "text": "it can really be our source of Truth in the in each system and",
    "start": "1818419",
    "end": "1824600"
  },
  {
    "start": "1823000",
    "end": "1871000"
  },
  {
    "text": "in the Pat Allen again you know he he said in this really great paper immutability changes everything that the",
    "start": "1824600",
    "end": "1830539"
  },
  {
    "text": "truth is the log the database it's a cache of a subset of the log",
    "start": "1830539",
    "end": "1837700"
  },
  {
    "text": "you know this there used to be a reason to use updating place you know disk space used",
    "start": "1839299",
    "end": "1846740"
  },
  {
    "text": "to be quite expensive but today is is is really really cheap so there's really no reason why we why",
    "start": "1846740",
    "end": "1853820"
  },
  {
    "text": "we can't store all events that ever happen in the system meaning all history forever and the question is then why",
    "start": "1853820",
    "end": "1860960"
  },
  {
    "text": "should we work with the cache of a subset of the real thing why not work with the real thing",
    "start": "1860960",
    "end": "1866240"
  },
  {
    "text": "directly that is the event loan",
    "start": "1866240",
    "end": "1870700"
  },
  {
    "start": "1871000",
    "end": "1978000"
  },
  {
    "text": "so and that leads me to event sourcing you know that's a great pattern see it's right on top of the event log and I",
    "start": "1871640",
    "end": "1878059"
  },
  {
    "text": "think that can be a cure for this cardinal sin you know updating place",
    "start": "1878059",
    "end": "1883460"
  },
  {
    "text": "and and event sourcing is really is is is really easy you know it's just that you log every state changing event to a",
    "start": "1883460",
    "end": "1890899"
  },
  {
    "text": "component in the order as they as they are created and and and",
    "start": "1890899",
    "end": "1897080"
  },
  {
    "text": "you know and we use that to sort of back out the entities so we can have strong consistency as I talked about within",
    "start": "1897080",
    "end": "1903980"
  },
  {
    "text": "each entity you know we have this this safe World Safe Haven this this island of of of",
    "start": "1903980",
    "end": "1912039"
  },
  {
    "text": "determinism so with which we within we can have strong consistency then we have",
    "start": "1912039",
    "end": "1918140"
  },
  {
    "text": "eventual consistency between the entities or the services you know and if",
    "start": "1918140",
    "end": "1924799"
  },
  {
    "text": "you if if you if you work like this then you then you can have sort of then you have a way to replay that log because",
    "start": "1924799",
    "end": "1931640"
  },
  {
    "text": "all the history that ever happened to a service and the whole system but if we look at a specific service you know everything that ever happened to that",
    "start": "1931640",
    "end": "1937940"
  },
  {
    "text": "service since you put it up is stored in the order it happened you know so so this means that we can Replay that long",
    "start": "1937940",
    "end": "1943820"
  },
  {
    "text": "to bring the component back into into good shape after failure we can we can",
    "start": "1943820",
    "end": "1949340"
  },
  {
    "text": "replay it to the replication if we want to replicate something to some other place then we will get an identical",
    "start": "1949340",
    "end": "1956020"
  },
  {
    "text": "replica because it's based on the same history we have really rock solid audit",
    "start": "1956020",
    "end": "1962360"
  },
  {
    "text": "without doing anything really it's already over there right in the event log we can just look at it you",
    "start": "1962360",
    "end": "1968960"
  },
  {
    "text": "know so there's there's a lot of things we get for for for free here that actually are quite hard to build in a",
    "start": "1968960",
    "end": "1975020"
  },
  {
    "text": "distributed system or in the cloud cloud-based system okay so let's look at an example here in advance Source",
    "start": "1975020",
    "end": "1982159"
  },
  {
    "start": "1978000",
    "end": "2051000"
  },
  {
    "text": "service here we have we have some some users it's it sends the command it ends up in the component you know and some",
    "start": "1982159",
    "end": "1988820"
  },
  {
    "text": "side effect is triggered okay we already talked about this out of that side effect I create an",
    "start": "1988820",
    "end": "1995360"
  },
  {
    "text": "event representing what what just happened and I'm storing that in the event log in the order as I'm",
    "start": "1995360",
    "end": "2002860"
  },
  {
    "text": "doing that as a service okay this is the happy path everything goes goes goes well I can I can push it out to the",
    "start": "2002860",
    "end": "2008919"
  },
  {
    "text": "event bus so to speak the event stream and others can consume that event at their own uh uh in a pace",
    "start": "2008919",
    "end": "2016539"
  },
  {
    "text": "now now let's look at what happens if we enter The sad path sure when we",
    "start": "2016539",
    "end": "2022899"
  },
  {
    "text": "have to when things fail and we have to recover from fail from failure it's very very easy we have we have we have the",
    "start": "2022899",
    "end": "2029080"
  },
  {
    "text": "event log the only thing we need to do we is that we bring we sort of rehydrate",
    "start": "2029080",
    "end": "2034539"
  },
  {
    "text": "the events we bring the uh the component back into into state",
    "start": "2034539",
    "end": "2039760"
  },
  {
    "text": "and that's it you know then then it can then it can continue to serve new",
    "start": "2039760",
    "end": "2044860"
  },
  {
    "text": "commands intriguing new events that we then emit out",
    "start": "2044860",
    "end": "2050398"
  },
  {
    "start": "2051000",
    "end": "2248000"
  },
  {
    "text": "so event sourcing really gives us a single source of Truth you know with all",
    "start": "2052060",
    "end": "2057638"
  },
  {
    "text": "history that that's ever happened you know it allows for this for this pattern you know I encourage you to Google it",
    "start": "2057639",
    "end": "2063220"
  },
  {
    "text": "memory image Morgan Fowler talks about that where you sort of have a way to have",
    "start": "2063220",
    "end": "2068919"
  },
  {
    "text": "durable in-memory state it sort of inverts the database in a way so your",
    "start": "2068919",
    "end": "2074020"
  },
  {
    "text": "source of Truth you know becomes what you have in memory instead of what you're having memory is",
    "start": "2074020",
    "end": "2079599"
  },
  {
    "text": "usually adjust the cash and the source of Truth is in the database you know this this were really Advanced sourcing",
    "start": "2079599",
    "end": "2086020"
  },
  {
    "text": "allows you to really invert that so your source of Truth you know meaning in this",
    "start": "2086020",
    "end": "2091720"
  },
  {
    "text": "state that you can rely on being always correct is in memory and you have sort of a backup down on",
    "start": "2091720",
    "end": "2098859"
  },
  {
    "text": "disk and and just think yourself with what that opens up for when it comes to you",
    "start": "2098859",
    "end": "2104380"
  },
  {
    "text": "know like performance for example and and uh you know if if your data is",
    "start": "2104380",
    "end": "2109960"
  },
  {
    "text": "always available in the memory and it's always correct you know you never have to go",
    "start": "2109960",
    "end": "2115420"
  },
  {
    "text": "down to to the database to fetch it and causing all kinds of contention and then you're relying on a you know single",
    "start": "2115420",
    "end": "2122560"
  },
  {
    "text": "point of bald neck and single point of failure and and so on of course you need that for the event-based system but that",
    "start": "2122560",
    "end": "2128500"
  },
  {
    "text": "can have but these things can be completely uh",
    "start": "2128500",
    "end": "2134400"
  },
  {
    "text": "decoupled sorry but",
    "start": "2134520",
    "end": "2140200"
  },
  {
    "text": "I got some notification from from Zoom are we still running I hope so",
    "start": "2140200",
    "end": "2148140"
  },
  {
    "text": "um okay another thing that it devoids is this you know Infamous you know object",
    "start": "2148359",
    "end": "2154060"
  },
  {
    "text": "relational mismatch in in which you you know if you have a component models for object oriented",
    "start": "2154060",
    "end": "2160420"
  },
  {
    "text": "model you always have to match that to tables you know the date in the in the database and that's why we we got tools",
    "start": "2160420",
    "end": "2166240"
  },
  {
    "text": "like like hard like hibernate and and and so on it's uh it's quite the hassle",
    "start": "2166240",
    "end": "2173440"
  },
  {
    "text": "both to map that correctly and efficiently but also maintain it you know best sourcing you you don't have to",
    "start": "2173440",
    "end": "2180700"
  },
  {
    "text": "think about that you can you can work with your with your domain model you know in the component in memory",
    "start": "2180700",
    "end": "2188500"
  },
  {
    "text": "you know completely you know you know oblivious to say of how it's being",
    "start": "2188500",
    "end": "2194020"
  },
  {
    "text": "stored because because it's all just events in the event law there's really no mapping at all happening which means",
    "start": "2194020",
    "end": "2200619"
  },
  {
    "text": "that you that you can you can just have the ultimate Way of working with State as you would as you would like",
    "start": "2200619",
    "end": "2207940"
  },
  {
    "text": "okay which is really beautiful and it also allows others to subscribe to State",
    "start": "2207940",
    "end": "2213940"
  },
  {
    "text": "changes as I talked about yeah you know and and that's a really good side effect it has really good",
    "start": "2213940",
    "end": "2221020"
  },
  {
    "text": "mechanical sympathy mechanical sympathy is is a term that you know Martin Thompson often uses and it and it and it",
    "start": "2221020",
    "end": "2227859"
  },
  {
    "text": "means that it lends itself very well to Modern Hardware you know in in this in",
    "start": "2227859",
    "end": "2233020"
  },
  {
    "text": "this in this particular case you know you have the you get sort of the single writer principle for for free where we",
    "start": "2233020",
    "end": "2238839"
  },
  {
    "text": "can just have one thread just writing very very fast uh you know to disk in order just depending a pending a pending",
    "start": "2238839",
    "end": "2245560"
  },
  {
    "text": "and pending which means that you can move very very fast so that's all good but what about queries then you know I so we use the",
    "start": "2245560",
    "end": "2253180"
  },
  {
    "start": "2248000",
    "end": "2551000"
  },
  {
    "text": "event log for storing the events that is our source of Truth queries is harder",
    "start": "2253180",
    "end": "2258460"
  },
  {
    "text": "you know an event log is hard to query you know that's that that's one of the downsides here see see QRS can can",
    "start": "2258460",
    "end": "2266200"
  },
  {
    "text": "really help you know because that's why you often see event sourcing used together with C with cqrs cqrs means",
    "start": "2266200",
    "end": "2272320"
  },
  {
    "text": "command query responsibility segregation or separation",
    "start": "2272320",
    "end": "2277420"
  },
  {
    "text": "and and you know the interesting here is that is that Securus allows you to separate the",
    "start": "2277420",
    "end": "2283900"
  },
  {
    "text": "right from the real model you know they usually have very different characteristics in terms of consistency",
    "start": "2283900",
    "end": "2289720"
  },
  {
    "text": "availability you know scalability and and and and and and by separating the read and the right mode from each other",
    "start": "2289720",
    "end": "2296079"
  },
  {
    "text": "it allows you both sides to be stored in the optimal format on the right side I've already talked about you know the",
    "start": "2296079",
    "end": "2302380"
  },
  {
    "text": "all the good things you get with restoring the right side in a in in an event log the read side you have many",
    "start": "2302380",
    "end": "2308560"
  },
  {
    "text": "options you might want to store it in a relational database in a nosql database in a graph database you might want to",
    "start": "2308560",
    "end": "2314500"
  },
  {
    "text": "push it into into spark or Flink or something like that so it really gives you a model for for polyglot persistence",
    "start": "2314500",
    "end": "2322060"
  },
  {
    "text": "because you might want to mix these you might want to push it into SQL database and a graph database for different ways",
    "start": "2322060",
    "end": "2328599"
  },
  {
    "text": "of looking at the data for example if all this is abstract let me try to",
    "start": "2328599",
    "end": "2334660"
  },
  {
    "text": "illustrate this here so let's say you have a user it sends a command to this to the to this service this service now",
    "start": "2334660",
    "end": "2341140"
  },
  {
    "text": "serves the right side model here's where we write to the event law okay once we've done that we're admitted",
    "start": "2341140",
    "end": "2348579"
  },
  {
    "text": "to our event stream or or our event bus here now the read side model can pick",
    "start": "2348579",
    "end": "2354400"
  },
  {
    "text": "that up and read from the data store or or actually you know the data store",
    "start": "2354400",
    "end": "2361119"
  },
  {
    "text": "picks it up and stores it that can serve their the read mall that that that's a",
    "start": "2361119",
    "end": "2366339"
  },
  {
    "text": "more accurate way of talking about it and this and and this data stores it can be any type of database you know it can",
    "start": "2366339",
    "end": "2372940"
  },
  {
    "text": "be Hadoop but if you feel like that or whatever and and and and then you can and then",
    "start": "2372940",
    "end": "2378579"
  },
  {
    "text": "you you and then you can serve those that that you know the the queries from the read side completely independently",
    "start": "2378579",
    "end": "2385599"
  },
  {
    "text": "or the right side and and this gives us a lot of a lot of good uh things you know it gives us",
    "start": "2385599",
    "end": "2392020"
  },
  {
    "text": "increased resilience you have you you have you have temporal decoupling of Rights",
    "start": "2392020",
    "end": "2397720"
  },
  {
    "text": "and side effects and and and and and you know and you know and and you know one good thing is the service doing the",
    "start": "2397720",
    "end": "2403720"
  },
  {
    "text": "right and the service performing the side effect they don't need to be available at the same time",
    "start": "2403720",
    "end": "2410200"
  },
  {
    "text": "it also helps you with increased scalability where you have like scale and you can scale the reads and writes",
    "start": "2410200",
    "end": "2416020"
  },
  {
    "text": "completely independently of each other for example you might have a right mostly system",
    "start": "2416020",
    "end": "2422339"
  },
  {
    "text": "uh you know versus another situation where we might have a read mostly system",
    "start": "2422339",
    "end": "2427720"
  },
  {
    "text": "so it gives you sort of more knobs to turn and to tweak and not not having zero one getting each other uh getting",
    "start": "2427720",
    "end": "2435040"
  },
  {
    "text": "in each other's way you know so always ending up with a small list of common denominant denominator",
    "start": "2435040",
    "end": "2441040"
  },
  {
    "text": "it also allows you to have multiple event subscribers as I said you can have multiple views of the data success you",
    "start": "2441040",
    "end": "2446740"
  },
  {
    "text": "know how the other systems picking it up of the services of the database and this and and sort of true polyglot",
    "start": "2446740",
    "end": "2452079"
  },
  {
    "text": "persistence as well uh you know one one important aspect here though is is is that in you know to",
    "start": "2452079",
    "end": "2459579"
  },
  {
    "text": "get most of the benefits of resilience and scalability you should rely on eventual consistency",
    "start": "2459579",
    "end": "2465160"
  },
  {
    "text": "in in practice it usually in in my experience it usually is not a problem",
    "start": "2465160",
    "end": "2470520"
  },
  {
    "text": "but there might be sometimes you know if if there is a delay in the event",
    "start": "2470520",
    "end": "2475900"
  },
  {
    "text": "propagation it might be that you sort of don't read your rights in a way you know you send a command and and then update",
    "start": "2475900",
    "end": "2483640"
  },
  {
    "text": "it and when you and when you read the query you know it's still not there so to speak",
    "start": "2483640",
    "end": "2489579"
  },
  {
    "text": "there is a solution for that though and that is that you can use a single database for for to to serve both your",
    "start": "2489579",
    "end": "2495700"
  },
  {
    "text": "reads and your and and your rights and then rely on on the database you know uh",
    "start": "2495700",
    "end": "2501520"
  },
  {
    "text": "you know functionality for strong consistency and transactions",
    "start": "2501520",
    "end": "2507420"
  },
  {
    "text": "and and uh if we should try to illustrate this this year you might",
    "start": "2507420",
    "end": "2512500"
  },
  {
    "text": "replace it with a single database here where you can write to the event log in the database and and and in the same",
    "start": "2512500",
    "end": "2519640"
  },
  {
    "text": "transaction updates or the read side the queer side in the same database so you can serve both the read side and the",
    "start": "2519640",
    "end": "2525520"
  },
  {
    "text": "right side uh uh you know using the same database you know this if you if you",
    "start": "2525520",
    "end": "2532960"
  },
  {
    "text": "have I'm only bringing this up it's not something that I will I will recommend you start with but but if if there are",
    "start": "2532960",
    "end": "2539140"
  },
  {
    "text": "use cases that absolutely demand strong consistency you can still use that in a in a in a in in a cqrs event sourcing",
    "start": "2539140",
    "end": "2548020"
  },
  {
    "text": "type of type of of setup then you know you know all this sounds",
    "start": "2548020",
    "end": "2554560"
  },
  {
    "text": "great and and and and I hope at least I think it's great uh but then you know someone some of you",
    "start": "2554560",
    "end": "2561640"
  },
  {
    "text": "might wondering you know okay how do I go about and implement this for real in",
    "start": "2561640",
    "end": "2566740"
  },
  {
    "text": "the cloud or on-prem but let's let's look at the cloud here now you know the problem with with Cloud native is that",
    "start": "2566740",
    "end": "2573760"
  },
  {
    "text": "we are you know it's not that all of these things that I just talked about might be hard but we are you know in",
    "start": "2573760",
    "end": "2579099"
  },
  {
    "text": "terms of infrastructure where they're drowning in complexity you know Kelsey higher Tower posted this is sort of",
    "start": "2579099",
    "end": "2584920"
  },
  {
    "text": "amusing tweet if you if you month a couple of months back",
    "start": "2584920",
    "end": "2591839"
  },
  {
    "text": "rolling your own platform has never been easier all you all you got to do is pick 200 items from this list and you're and",
    "start": "2592079",
    "end": "2598000"
  },
  {
    "text": "you're good to go you know and this this image is taken directly from the from the cncf website you know it's it's it",
    "start": "2598000",
    "end": "2604780"
  },
  {
    "text": "can me it can be overwhelming there's so many products all good you know not all",
    "start": "2604780",
    "end": "2610599"
  },
  {
    "text": "good but many most of them I think are really really good and and but but how do you choose which",
    "start": "2610599",
    "end": "2615819"
  },
  {
    "text": "ones fit your use cases and and how do you Stitch it all together into in into",
    "start": "2615819",
    "end": "2621220"
  },
  {
    "text": "single you know coherent working system how do you maintain guarantees across all of this all all of these products",
    "start": "2621220",
    "end": "2627280"
  },
  {
    "text": "how you how can you insure to your to your customers and user that you can maintain the slas that you that you that",
    "start": "2627280",
    "end": "2633460"
  },
  {
    "text": "you um have have have promised you know things usually fail between uh you know",
    "start": "2633460",
    "end": "2639880"
  },
  {
    "text": "in at the boundaries you know and and where you need to do handle between different subsystems and if you if you",
    "start": "2639880",
    "end": "2646480"
  },
  {
    "text": "have to stitch it together a bunch of subsystems yourself you know then you're you better know what you're doing so I",
    "start": "2646480",
    "end": "2652420"
  },
  {
    "text": "all this all that is very hard I think we need to continue to climb the ladder abstraction you know",
    "start": "2652420",
    "end": "2658119"
  },
  {
    "text": "we've been doing that as an industry over and over and over again as you know we started with you know with Punch",
    "start": "2658119",
    "end": "2663819"
  },
  {
    "text": "Cards you know and then you know and then we got it you know assembly and see and and then we're modern languages and",
    "start": "2663819",
    "end": "2670839"
  },
  {
    "text": "and you know when it comes to to to to to into Hardware you know you know or you",
    "start": "2670839",
    "end": "2678520"
  },
  {
    "text": "know or sitting right on top of Hardware we get in the virtualization you know uh",
    "start": "2678520",
    "end": "2684339"
  },
  {
    "text": "Linux containers you know let the kubernetes and and Docker and all the on this whole ecosystem you know we're",
    "start": "2684339",
    "end": "2690339"
  },
  {
    "text": "we're constantly trying to do to climb this lateral distraction and and to do more with less",
    "start": "2690339",
    "end": "2696160"
  },
  {
    "text": "and and I think it's about time that we do that again uh and you have to know the time I don't I don't think you know",
    "start": "2696160",
    "end": "2702040"
  },
  {
    "text": "kubernetes and and and and and and stitching together your own stack over and over and over again is really it's",
    "start": "2702040",
    "end": "2707800"
  },
  {
    "text": "really necessary you know some some might like it and some might feel the the necessity to do so but most I think",
    "start": "2707800",
    "end": "2713920"
  },
  {
    "text": "not so so I I think the real the really important thing is then is then what is",
    "start": "2713920",
    "end": "2719079"
  },
  {
    "text": "that I think we really need to provide more higher level developer experience in apis for developers to building these",
    "start": "2719079",
    "end": "2725619"
  },
  {
    "text": "new class of cloud over Cloud native applications and and and all in you know",
    "start": "2725619",
    "end": "2732099"
  },
  {
    "text": "leading to liberate the developers to focus on the essence you know and that is that is you know building business",
    "start": "2732099",
    "end": "2737980"
  },
  {
    "text": "logic building contributing directly to business value",
    "start": "2737980",
    "end": "2743020"
  },
  {
    "text": "but that's hard you know in order without sacrificing things like developments D speed you know cost can't",
    "start": "2743020",
    "end": "2749680"
  },
  {
    "text": "go across the road especially nowadays you don't want to you know you don't want to sacrifice predictability or",
    "start": "2749680",
    "end": "2755859"
  },
  {
    "text": "maintain ability I think you know that a",
    "start": "2755859",
    "end": "2760900"
  },
  {
    "text": "a good starting point is to sort of distill the essence or so coming from a",
    "start": "2760900",
    "end": "2766359"
  },
  {
    "text": "different angle through you know it's a distill the essence of what a developer actually needs to focus on what is the",
    "start": "2766359",
    "end": "2772660"
  },
  {
    "text": "bare minimum that each developer needs to do to contribute business value every day and nothing else",
    "start": "2772660",
    "end": "2779260"
  },
  {
    "text": "uh you know I think is essentially three things defining the API I mean how do",
    "start": "2779260",
    "end": "2784960"
  },
  {
    "text": "you communicate without with the with the outside world and how do you communicate between uh through the",
    "start": "2784960",
    "end": "2790420"
  },
  {
    "text": "contracts between the different Services uh second Define your domain model you",
    "start": "2790420",
    "end": "2796420"
  },
  {
    "text": "know you know working with these events first domain-driven design if you like or or or or something else but but come",
    "start": "2796420",
    "end": "2803079"
  },
  {
    "text": "up with a model for my how do how do I model my business case how do I mold my",
    "start": "2803079",
    "end": "2808240"
  },
  {
    "text": "domain here in terms of object State you know flows streams and so on and and and and lastly",
    "start": "2808240",
    "end": "2815980"
  },
  {
    "text": "you know how do I what do I do when I you know react on requests from from my",
    "start": "2815980",
    "end": "2821560"
  },
  {
    "text": "users I mean what is what what drives sort of this whole domain model is the business logic you know you know so you",
    "start": "2821560",
    "end": "2827500"
  },
  {
    "text": "have the API the domain model and the business logic I really think that the risk the rest can be eliminated",
    "start": "2827500",
    "end": "2834040"
  },
  {
    "text": "and should be eliminated you know you know there's there's uh I think it you know the rest can be",
    "start": "2834040",
    "end": "2840280"
  },
  {
    "text": "generated from the code and and there is sort of a new class of",
    "start": "2840280",
    "end": "2845980"
  },
  {
    "text": "of developer passes that really tries to address this and and you know and and",
    "start": "2845980",
    "end": "2852160"
  },
  {
    "text": "one of them is calyx you know calyx is a is a is is a platform as a service sort",
    "start": "2852160",
    "end": "2857680"
  },
  {
    "text": "of a true true developer pass that enables organization to build and deploy Cloud native event driven and fully",
    "start": "2857680",
    "end": "2863319"
  },
  {
    "text": "distributed microservices you know rapidly with no operations required what does that mean yeah it means that calyx",
    "start": "2863319",
    "end": "2869980"
  },
  {
    "text": "makes it very easy to to build a complete Cloud native stack you know an improved",
    "start": "2869980",
    "end": "2875680"
  },
  {
    "text": "developer product immensely you know and and and and and he does that by",
    "start": "2875680",
    "end": "2880780"
  },
  {
    "text": "providing sort of an out of the box cloud native stack",
    "start": "2880780",
    "end": "2885880"
  },
  {
    "text": "all powered by a really really high velocity developer experience",
    "start": "2885880",
    "end": "2892920"
  },
  {
    "text": "you know where where you do the work writing the code and then you ship a ship that up to to",
    "start": "2892960",
    "end": "2900220"
  },
  {
    "text": "the calyx pass and then your your your then your job is done there's really no operations required whatsoever all that",
    "start": "2900220",
    "end": "2908380"
  },
  {
    "text": "is on us you know we have we have a 24 7 SRE team that that that that makes",
    "start": "2908380",
    "end": "2913660"
  },
  {
    "text": "that's that's making sure that everything just is comes to content like constantly runs is upgraded to the",
    "start": "2913660",
    "end": "2919780"
  },
  {
    "text": "latest versions you know making sure that that you know that that everything runs runs smoothly",
    "start": "2919780",
    "end": "2926260"
  },
  {
    "text": "and and and and and for you as as a developer you know calyx gives you",
    "start": "2926260",
    "end": "2931420"
  },
  {
    "text": "really Best in Class Top Class high performance and scale and scalability you know we we can you know in the in",
    "start": "2931420",
    "end": "2939460"
  },
  {
    "text": "the in the latest Benchmark we ran we we were serving reads at about six milliseconds",
    "start": "2939460",
    "end": "2945040"
  },
  {
    "text": "uh and and writes at about eight milliseconds you know round three all the way from week for me from getting",
    "start": "2945040",
    "end": "2950859"
  },
  {
    "text": "the request from from there from from the you know from the Ingress router all the way down to the database and all the",
    "start": "2950859",
    "end": "2957220"
  },
  {
    "text": "way up again which which should really be enough for most uh use cases",
    "start": "2957220",
    "end": "2963040"
  },
  {
    "start": "2962000",
    "end": "3131000"
  },
  {
    "text": "so so a way to try to understand what Kaylee does for you it's like hey I",
    "start": "2963040",
    "end": "2969040"
  },
  {
    "text": "wanted to try to Envision uh your application necessary of a cube that's your Cloud native stack",
    "start": "2969040",
    "end": "2975940"
  },
  {
    "text": "okay at the bottom we have like Cloud infrastructure like AWS Google Cloud azure",
    "start": "2975940",
    "end": "2982500"
  },
  {
    "text": "then the the second layer you know is kubernetes you know routing or eks open",
    "start": "2982500",
    "end": "2988960"
  },
  {
    "text": "share and Rancher and whatever your your your poison is there",
    "start": "2988960",
    "end": "2995500"
  },
  {
    "text": "then we have the database layer you know there might be one database that that you choose or multiple you know",
    "start": "2995500",
    "end": "3001260"
  },
  {
    "text": "depending on the use cases most most non-tributable use cases are probably Glock persistence today in in my in my",
    "start": "3001260",
    "end": "3008099"
  },
  {
    "text": "experience it might be Cassandra you know Amazon dynamodb spanner or Cosmos or you could buy whatever",
    "start": "3008099",
    "end": "3014880"
  },
  {
    "text": "then you need a layer of security and compliance you know zero trust",
    "start": "3014880",
    "end": "3020359"
  },
  {
    "text": "multi-factoring authentication encryption you know usually things like JWT support client-side certifications",
    "start": "3020359",
    "end": "3028260"
  },
  {
    "text": "and compliance like things like sock 2 and and so on uh gdpr of course and and",
    "start": "3028260",
    "end": "3035760"
  },
  {
    "text": "all of those things quite tricky stuff to get to get right once you get that done right you know",
    "start": "3035760",
    "end": "3042300"
  },
  {
    "text": "all these first four layers then you can start you know building pulling together the the infrastructure that's more of",
    "start": "3042300",
    "end": "3048780"
  },
  {
    "text": "the the fun work for a developer uh to some extent because he can often be over",
    "start": "3048780",
    "end": "3054300"
  },
  {
    "text": "overwhelming of course uh but here we have things like service meshes API gateways message Brokers you",
    "start": "3054300",
    "end": "3060240"
  },
  {
    "text": "know not gateways and so on finally when you're done with all of",
    "start": "3060240",
    "end": "3065280"
  },
  {
    "text": "that you know then you can start building it the app and but but the problem is when then",
    "start": "3065280",
    "end": "3070800"
  },
  {
    "text": "when things are moving you know underneath you know sort of shakes the whole Cube you need to go dive down there and start fixing things you know",
    "start": "3070800",
    "end": "3076800"
  },
  {
    "text": "replacing uh you know infrastructure you know doing updates and and and and",
    "start": "3076800",
    "end": "3081839"
  },
  {
    "text": "whatever it it might be so so effectively you know this is your Cloud native stack you need to deal with all",
    "start": "3081839",
    "end": "3088380"
  },
  {
    "text": "of these things in order to to build a full a complete Cloud native application",
    "start": "3088380",
    "end": "3094980"
  },
  {
    "text": "so where does Kayla comes in yeah calyx really allows you to focus only on the top level you know",
    "start": "3094980",
    "end": "3102240"
  },
  {
    "text": "we the only thing you need to do in clicks is to focus on writing the code declaratively configure that code and",
    "start": "3102240",
    "end": "3110520"
  },
  {
    "text": "and the rest is is on us the rest is on kalex really I mean everything around integration security compliance database",
    "start": "3110520",
    "end": "3116339"
  },
  {
    "text": "Community kubernetes Management Cloud infrastructure Etc all that is on us so it really eliminates you know it's",
    "start": "3116339",
    "end": "3122940"
  },
  {
    "text": "effectively all complexity uh to bring build building a cloud native",
    "start": "3122940",
    "end": "3129119"
  },
  {
    "text": "application so what are the components I don't have too much time to to dive into you know",
    "start": "3129119",
    "end": "3135839"
  },
  {
    "text": "what kalex is but I just want to give you a glimpse since I probably that's probably most developers here uh so what",
    "start": "3135839",
    "end": "3141000"
  },
  {
    "text": "are the keyless components that you that you can work with the first we have you you we have the entity that I that I",
    "start": "3141000",
    "end": "3146280"
  },
  {
    "text": "talked a lot about here that is sort of a stateful function allows you for like multiple durable storage models uh you",
    "start": "3146280",
    "end": "3153359"
  },
  {
    "text": "you can choose the rise from shape of your data it might be key value it might event sourcing might might be what would",
    "start": "3153359",
    "end": "3159180"
  },
  {
    "text": "works well that that I talked about what it might be you know replicated State using crdts you know key value is is is",
    "start": "3159180",
    "end": "3167940"
  },
  {
    "text": "is more more it's more like like crud uh and and you know working with these",
    "start": "3167940",
    "end": "3174599"
  },
  {
    "text": "entity is a really really high level abstraction that that removes all the complexities around data distribution",
    "start": "3174599",
    "end": "3180119"
  },
  {
    "text": "things like caching concurrency distributed locking transactions and all of those things you know it's already",
    "start": "3180119",
    "end": "3185520"
  },
  {
    "text": "it's usually most often paired up within what we call an action an action is a stateless function and and you can use",
    "start": "3185520",
    "end": "3193740"
  },
  {
    "text": "that for many different type of patterns like handle entity changes subscribe to message Brokers and buildings or the the",
    "start": "3193740",
    "end": "3200819"
  },
  {
    "text": "API controller pattern and so on then you have a very very interesting",
    "start": "3200819",
    "end": "3206160"
  },
  {
    "text": "concept called core views you know they are really they're truly materialized",
    "start": "3206160",
    "end": "3211319"
  },
  {
    "text": "views and allows you know streaming views in real time uh all the way out to the client using",
    "start": "3211319",
    "end": "3217140"
  },
  {
    "text": "HTTP or grpc and and it gives you a really good model for modeling cqrs that I talked about",
    "start": "3217140",
    "end": "3223680"
  },
  {
    "text": "that you have the entity and then you have the view you have the right and the read side uh then you have then you have timers",
    "start": "3223680",
    "end": "3230640"
  },
  {
    "text": "you know they're usually they're small but powerful and if you need them you",
    "start": "3230640",
    "end": "3235859"
  },
  {
    "text": "need them and and the latest uh addition to to the careless components is something we shifted about a month ago",
    "start": "3235859",
    "end": "3242160"
  },
  {
    "text": "now that is that is high level workflows making it possible to do this you know this coordination and orchestration",
    "start": "3242160",
    "end": "3248640"
  },
  {
    "text": "across these sort of safe islands that I talked about you know the entities uh certain buildings or the distributed",
    "start": "3248640",
    "end": "3255240"
  },
  {
    "text": "transactions and and by implementing The Saga pattern now if you don't know that I encourage you to to Google that it's",
    "start": "3255240",
    "end": "3261059"
  },
  {
    "text": "it's it's it's a really good pattern to have under your belt but workflows implements that so so and it was",
    "start": "3261059",
    "end": "3268319"
  },
  {
    "text": "worthless you can declaratively just Define every all the steps in the workflow and and have a structured way of doing",
    "start": "3268319",
    "end": "3275280"
  },
  {
    "text": "you you're doing compensating actions and going to the next step and and what happens if if there's unavailability or",
    "start": "3275280",
    "end": "3282660"
  },
  {
    "text": "failure and so on so it effectively gives you a structured State machine how to work with with with",
    "start": "3282660",
    "end": "3289160"
  },
  {
    "text": "long-running uh transactions so I just want to give you quickly a",
    "start": "3289160",
    "end": "3295079"
  },
  {
    "text": "little Glimpse in in in what Kaylie's can look at so on the on the on the left hand side here you have the developer's",
    "start": "3295079",
    "end": "3302339"
  },
  {
    "text": "responsibility meaning your responsibility on the right hand side you know you have you have kalex",
    "start": "3302339",
    "end": "3307619"
  },
  {
    "text": "responsibility so so uh let's start by writings they're",
    "start": "3307619",
    "end": "3313079"
  },
  {
    "text": "very simple stay for microservice then that's our in this in this in this case I'm I'm picking the Event Source uh",
    "start": "3313079",
    "end": "3320099"
  },
  {
    "text": "persistence normal just because we talked a lot about it and and and as you can see here we we create an aggregation",
    "start": "3320099",
    "end": "3326460"
  },
  {
    "text": "entity you know I don't have time to go through the actual use case here but but it looks more or less the same regardless of what you're doing I'm",
    "start": "3326460",
    "end": "3332460"
  },
  {
    "text": "inheriting Event Source entity this is in Java by the way and and uh and and",
    "start": "3332460",
    "end": "3337680"
  },
  {
    "text": "the in the interesting thing here is this is the lowest aggregate function it takes a request meaning the command here",
    "start": "3337680",
    "end": "3343859"
  },
  {
    "text": "and and it you know it it it it com it does its logic I've sort of omitted that",
    "start": "3343859",
    "end": "3350099"
  },
  {
    "text": "code here but when it's done it's a creation event this ad for aggregation event it emits the event to the rest of",
    "start": "3350099",
    "end": "3355800"
  },
  {
    "text": "the world to to see and to be stored in in an Event Source fashion and then it",
    "start": "3355800",
    "end": "3361380"
  },
  {
    "text": "replies uh with an acknowledge acknowledgment saying okay you know",
    "start": "3361380",
    "end": "3366480"
  },
  {
    "text": "that's the code now you can see that you think these annotations here we are declaratively configuring you know first you know what",
    "start": "3366480",
    "end": "3373980"
  },
  {
    "text": "type of entity type it should be uh you know how it should be mapped in terms of the entity key but but even more",
    "start": "3373980",
    "end": "3380339"
  },
  {
    "text": "importantly here we here we're able to to to define the our API using this request mapping and then post mapping on",
    "start": "3380339",
    "end": "3387660"
  },
  {
    "text": "the actual aggregate function here so you that that means that calyx will then generate sort of an API endpoint out of",
    "start": "3387660",
    "end": "3395160"
  },
  {
    "text": "this using I mean enable it where you can choose to enable it through http",
    "start": "3395160",
    "end": "3400200"
  },
  {
    "text": "or grpc or both uh so that is the entity side now if you",
    "start": "3400200",
    "end": "3406020"
  },
  {
    "text": "let's say that that that we we want to do we want to implement Securus here and do and do and and do a query a",
    "start": "3406020",
    "end": "3412619"
  },
  {
    "text": "representation as well so read a read sort of representation it's it's no more code than this actually were you were we",
    "start": "3412619",
    "end": "3419579"
  },
  {
    "text": "here creates with this API query review or extend view this or our materialized",
    "start": "3419579",
    "end": "3425040"
  },
  {
    "text": "view we we set the request mapping here to be slash API queries means that the",
    "start": "3425040",
    "end": "3430319"
  },
  {
    "text": "clients then came through our HTTP endpoints and just get it streamed",
    "start": "3430319",
    "end": "3435720"
  },
  {
    "text": "uh uh sort of get into sort of a stream with constant updates based on what's on",
    "start": "3435720",
    "end": "3442380"
  },
  {
    "text": "what's going on uh in this in in this particular View and and you can see here that you know we have",
    "start": "3442380",
    "end": "3449760"
  },
  {
    "text": "this method get aggregation key we annotate that with query and here we're we're able to put in sort of a SQL query",
    "start": "3449760",
    "end": "3455940"
  },
  {
    "text": "but it's actually not a true SQL it's actually querying the entity you know it's querying your object model the",
    "start": "3455940",
    "end": "3462900"
  },
  {
    "text": "services are an object query query query mode here that you can where you can just so you don't you you don't end up",
    "start": "3462900",
    "end": "3470099"
  },
  {
    "text": "in having to map your object sort of your your your domain model down to to the to the underlying database the",
    "start": "3470099",
    "end": "3477000"
  },
  {
    "text": "underlying databases within nowhere to be seen you always work on on the highest level possible meaning your own",
    "start": "3477000",
    "end": "3482819"
  },
  {
    "text": "uh your own domain domain or but but from this simple query annotation here",
    "start": "3482819",
    "end": "3488520"
  },
  {
    "text": "where we Define our query we're able to create a fully fully streaming real-time",
    "start": "3488520",
    "end": "3493920"
  },
  {
    "text": "materialized view you know for for other services to use but also for for for uh",
    "start": "3493920",
    "end": "3499920"
  },
  {
    "text": "for your clients to use so that's that that's that's your responsibility write this code declaratively annotate it how",
    "start": "3499920",
    "end": "3506819"
  },
  {
    "text": "you want it to operation and out of this you know calyx can then infer everything",
    "start": "3506819",
    "end": "3511859"
  },
  {
    "text": "else so we have sort of infrastructure inferred from code",
    "start": "3511859",
    "end": "3517140"
  },
  {
    "text": "and and and and this is just sort of a a simplistic uh uh architectural diagram",
    "start": "3517140",
    "end": "3525000"
  },
  {
    "text": "of everything that KLX does for you and this of course more but but but you know in essence you know what you can see",
    "start": "3525000",
    "end": "3531119"
  },
  {
    "text": "here you know it it it generates a complete reactive event-driven platform stack Cloud native stack with Ingress",
    "start": "3531119",
    "end": "3538079"
  },
  {
    "text": "routers you know service mesh security with Secrets ACL you know jw2 cert you",
    "start": "3538079",
    "end": "3543480"
  },
  {
    "text": "have a fully aqua-based sidecar cluster you know that's using you know gossip",
    "start": "3543480",
    "end": "3548700"
  },
  {
    "text": "protocols to do to ensure availability at the highest level and and and and you",
    "start": "3548700",
    "end": "3554579"
  },
  {
    "text": "know each one of these functions is deployed on a kubernetes policything right next to the sidecar so you have",
    "start": "3554579",
    "end": "3560280"
  },
  {
    "text": "extremely efficient communication between the side cores or representing the user code and then the user code",
    "start": "3560280",
    "end": "3566339"
  },
  {
    "text": "itself and this sidecar then manage things like like like for example Pub",
    "start": "3566339",
    "end": "3571440"
  },
  {
    "text": "sub where Brokers Pub sub we're grpc that's extremely fast or you can choose to use something like half or gcp Pub",
    "start": "3571440",
    "end": "3578400"
  },
  {
    "text": "sub or AWS and S and then and this sidecar also manages all the distributed",
    "start": "3578400",
    "end": "3584160"
  },
  {
    "text": "storage I mean the event logging these materialized views and so on and all these all these all the right hand side",
    "start": "3584160",
    "end": "3590160"
  },
  {
    "text": "is completely generated for you in the optimal fashion based on your on your source code on the on the left hand side",
    "start": "3590160",
    "end": "3596460"
  },
  {
    "text": "so you have really good separation of responsibilities here leaving the developer with only the minimum it needs",
    "start": "3596460",
    "end": "3602400"
  },
  {
    "text": "to do to implement the full Cloud native super fast you know reactive highly",
    "start": "3602400",
    "end": "3607500"
  },
  {
    "text": "performance stack so the key takeaways here is that I think events Events first design helps",
    "start": "3607500",
    "end": "3612660"
  },
  {
    "text": "you to build to reduce risk when modernizing applications it allows you to move faster towards what we all want",
    "start": "3612660",
    "end": "3619500"
  },
  {
    "text": "you know a resilient in a scalable architecture and and it really allows us to build",
    "start": "3619500",
    "end": "3625579"
  },
  {
    "text": "highly autonomous services you know and autonomy means that we have",
    "start": "3625579",
    "end": "3631140"
  },
  {
    "text": "a way to balance certainty and uncertainty you know being able to",
    "start": "3631140",
    "end": "3636599"
  },
  {
    "text": "contain uh you know certainty and and and and having really good patterns to deal with",
    "start": "3636599",
    "end": "3643079"
  },
  {
    "text": "the uncertainty event logging as I talked about allows you to avoid you know crud avoid orm mapping and really",
    "start": "3643079",
    "end": "3651540"
  },
  {
    "text": "take control over over your system's history allows you to time travel even talked about that but it's an",
    "start": "3651540",
    "end": "3657540"
  },
  {
    "text": "interesting concept you can go back and replay certain parts of your of your of",
    "start": "3657540",
    "end": "3662760"
  },
  {
    "text": "your of your history and so on and it but more importantly allows you to balance strong and eventual consistency",
    "start": "3662760",
    "end": "3669299"
  },
  {
    "text": "in a really good way I think so how do you implement that I think Helix is probably one of the best",
    "start": "3669299",
    "end": "3675119"
  },
  {
    "text": "platform to implement all these events first you know event logging and sourcing type of type of type of system",
    "start": "3675119",
    "end": "3680160"
  },
  {
    "text": "truly event driven microservices because it really gives you I mean really really",
    "start": "3680160",
    "end": "3685980"
  },
  {
    "text": "low time to Market while reducing the cost and it allows you to focus you as a",
    "start": "3685980",
    "end": "3692099"
  },
  {
    "text": "developed focus on only the three things that matter I think you know the API the data model and the business logic and",
    "start": "3692099",
    "end": "3698040"
  },
  {
    "text": "delegate everything else delegate operations true zero Ops with a within you don't need an SRE team or on staff",
    "start": "3698040",
    "end": "3705240"
  },
  {
    "text": "you know to run this stack because all that is enlightenment and and you can ensure that you know by",
    "start": "3705240",
    "end": "3711480"
  },
  {
    "text": "just writing this code pushing it up Achilles you around on a fully reactive event driven very high performance infrastructure is stacked so so please",
    "start": "3711480",
    "end": "3719460"
  },
  {
    "text": "check calyx out go to klx.io and scan this QR code here and and uh",
    "start": "3719460",
    "end": "3728059"
  },
  {
    "text": "you know and uh it will it will send you to a page where you can explore calyx",
    "start": "3728059",
    "end": "3733440"
  },
  {
    "text": "virtually and then you just download it and try it locally yourself you know no strings",
    "start": "3733440",
    "end": "3738720"
  },
  {
    "text": "attached and you know if you like it and you if any you know and and you and you",
    "start": "3738720",
    "end": "3744180"
  },
  {
    "text": "built a a pork or or a dam or whatever then you can just go to klx.io and",
    "start": "3744180",
    "end": "3749579"
  },
  {
    "text": "upload it there and we run it for you we also have a slack Channel you know hashtag Helix support",
    "start": "3749579",
    "end": "3756780"
  },
  {
    "text": "uh but go to calyxio and scan this QR code and and we'll we'll be there for you answering all questions thank you",
    "start": "3756780",
    "end": "3765200"
  }
]