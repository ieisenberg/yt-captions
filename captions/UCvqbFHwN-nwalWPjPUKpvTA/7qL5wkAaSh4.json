[
  {
    "text": "good I know that it's a bit late after lunch is not always a good time to",
    "start": "0",
    "end": "5250"
  },
  {
    "text": "attend a talk so thanks for coming please take a seat yourself eh my name",
    "start": "5250",
    "end": "11849"
  },
  {
    "text": "is Eduardo Silva I'm a software engineer at this company which is called a treasured data and as the company name",
    "start": "11849",
    "end": "19590"
  },
  {
    "text": "said we care a lot about data we have a assess platform so you can ingest your",
    "start": "19590",
    "end": "25439"
  },
  {
    "text": "data your marketing data or whatever and you can get some insights from your data but when you have some kind of platform",
    "start": "25439",
    "end": "33020"
  },
  {
    "text": "to manage data there is one missing step you can you can have a platform but what",
    "start": "33020",
    "end": "39809"
  },
  {
    "text": "really gives you the value is the data and that's why we got into this world of",
    "start": "39809",
    "end": "45690"
  },
  {
    "text": "logging like four years ago creating some data tools in an open source way to",
    "start": "45690",
    "end": "51629"
  },
  {
    "text": "collect data from your old services or your own applications so and this talk",
    "start": "51629",
    "end": "57870"
  },
  {
    "text": "is about how to get started with login in coronaries our company is one of the",
    "start": "57870",
    "end": "64830"
  },
  {
    "text": "sponsors also of a project flew in D and flew in bed would you please raise your",
    "start": "64830",
    "end": "69960"
  },
  {
    "text": "hand whose use you flew in D right now ok this is micro thanks so I said I am a",
    "start": "69960",
    "end": "78630"
  },
  {
    "text": "mobile software developer at Trisha Dara I am part of a fluent D open source team",
    "start": "78630",
    "end": "84210"
  },
  {
    "text": "but my primary role is also maintain and develop it this little project which is",
    "start": "84210",
    "end": "90150"
  },
  {
    "text": "called flow in bed that maybe you are hearing a lot about it in the last year",
    "start": "90150",
    "end": "96110"
  },
  {
    "text": "so let's talk about applications and login when you have a some kind of",
    "start": "96110",
    "end": "103320"
  },
  {
    "text": "application they all the way to perform login is just to write some message to",
    "start": "103320",
    "end": "109950"
  },
  {
    "text": "some special place and sometimes this is the hardest or a log file and that for",
    "start": "109950",
    "end": "116159"
  },
  {
    "text": "that for us is called logging if you are over 30 years old you realize that you",
    "start": "116159",
    "end": "122369"
  },
  {
    "text": "play a lot with syslog file system log files if you are in your 20s maybe you're looking on what is that you're",
    "start": "122369",
    "end": "129690"
  },
  {
    "text": "using Journal d or something more fancy right now right okay but login a happens in different",
    "start": "129690",
    "end": "138350"
  },
  {
    "text": "ways not just to the file system when you have a unique process running in",
    "start": "138350",
    "end": "144140"
  },
  {
    "text": "your environment actually you have like three main channels of communications",
    "start": "144140",
    "end": "149150"
  },
  {
    "text": "the first one is a standard input and which can be used to send messages to",
    "start": "149150",
    "end": "155390"
  },
  {
    "text": "the application when you're using your terminal and/or stand Mac OS or Linux",
    "start": "155390",
    "end": "160520"
  },
  {
    "text": "and you type some common and put a pipe what you're doing it just redirecting",
    "start": "160520",
    "end": "165830"
  },
  {
    "text": "the output of one program to the input of the other and piping happens because",
    "start": "165830",
    "end": "170990"
  },
  {
    "text": "of this streaming interface but when we talk about login in general and",
    "start": "170990",
    "end": "176600"
  },
  {
    "text": "specifically in the container world we are talking about this hey we have some",
    "start": "176600",
    "end": "183680"
  },
  {
    "text": "lag here Oh battery there you go I'm going to stay",
    "start": "183680",
    "end": "192380"
  },
  {
    "text": "on this side so and the login happens specifically on the standard output and",
    "start": "192380",
    "end": "198230"
  },
  {
    "text": "understand that error interface and if you are dealing with containers do you",
    "start": "198230",
    "end": "203480"
  },
  {
    "text": "realize that this sounds a little bit familiar so log in and in talker",
    "start": "203480",
    "end": "209989"
  },
  {
    "text": "containers I assume that most of you know most of you but help you are using fluently but who's using docker at the",
    "start": "209989",
    "end": "216950"
  },
  {
    "text": "moment in sublevel okay 80 percent cool",
    "start": "216950",
    "end": "222970"
  },
  {
    "text": "so undocking has also its own strategy to perform logins now first of all I",
    "start": "222970",
    "end": "230510"
  },
  {
    "text": "understand that you know what a container is right a container is not docker token is just a wrapper a tool",
    "start": "230510",
    "end": "238700"
  },
  {
    "text": "that allows to create this concept of container a container is a process",
    "start": "238700",
    "end": "244670"
  },
  {
    "text": "random in a container I set space which is restricted by the Linux kernel",
    "start": "244670",
    "end": "250720"
  },
  {
    "text": "meaning that you have some namespace and cgroups which allows to say to this application",
    "start": "250720",
    "end": "256220"
  },
  {
    "text": "you only have access to the filesystem or maybe not you have access to a network or maybe this amount of CPU time",
    "start": "256220",
    "end": "264130"
  },
  {
    "text": "but dealing with those kind of system calls or using the common light with Alexi takes some time and",
    "start": "264130",
    "end": "270569"
  },
  {
    "text": "that's why docker allows you to provide a full interface on top of that and",
    "start": "270569",
    "end": "276330"
  },
  {
    "text": "manage containers and also it cares about logins so if one application sent",
    "start": "276330",
    "end": "283139"
  },
  {
    "text": "a message like hey you come actually what will happens is that docker will",
    "start": "283139",
    "end": "288840"
  },
  {
    "text": "say ok I got a message but that message is not like a son alone message like in",
    "start": "288840",
    "end": "294750"
  },
  {
    "text": "the old log file because we have some kind of context and this context means",
    "start": "294750",
    "end": "299759"
  },
  {
    "text": "from which kind of stream this information is coming from for example",
    "start": "299759",
    "end": "304949"
  },
  {
    "text": "the standard output and at what time this information was created and that is",
    "start": "304949",
    "end": "311940"
  },
  {
    "text": "really really relevant and if you look carefully I don't know how you look at",
    "start": "311940",
    "end": "317610"
  },
  {
    "text": "that the log files of docker ok yeah nobody do it you don't want to",
    "start": "317610",
    "end": "323460"
  },
  {
    "text": "do it right because it's like a path a lot of hash and things and not very",
    "start": "323460",
    "end": "329039"
  },
  {
    "text": "clear about that you don't need to it's a waste of time unless you are trying to create some login solutions so my goal",
    "start": "329039",
    "end": "336330"
  },
  {
    "text": "here is try to explain a little bit how logging works behind the scenes because if you understand that you can optimize",
    "start": "336330",
    "end": "343139"
  },
  {
    "text": "in a higher level ok so when you get a for example a a message and your",
    "start": "343139",
    "end": "350820"
  },
  {
    "text": "application Doka what we do is create a JSON map assuming the use in the JSON",
    "start": "350820",
    "end": "356430"
  },
  {
    "text": "driver this journal D driver and others but we are basing on JSON and it's going",
    "start": "356430",
    "end": "361650"
  },
  {
    "text": "to store these in the file system where the docker engine is running and basically it will use bar live docker",
    "start": "361650",
    "end": "370139"
  },
  {
    "text": "containers slash the doctor ID hash every every unique identification for",
    "start": "370139",
    "end": "375300"
  },
  {
    "text": "the container it's a store in the file system and then it appends the final log",
    "start": "375300",
    "end": "380310"
  },
  {
    "text": "file so from an operational perspective this",
    "start": "380310",
    "end": "386490"
  },
  {
    "text": "is good because if you want to manage locks for doc you had to discover the",
    "start": "386490",
    "end": "392219"
  },
  {
    "text": "log files you had to read each container log file to realize what kind of messages the",
    "start": "392219",
    "end": "399360"
  },
  {
    "text": "application in the container is generating also I don't",
    "start": "399360",
    "end": "404879"
  },
  {
    "text": "know if you look carefully in the previous slide but the message is stored in one key which is called lock right",
    "start": "404879",
    "end": "412739"
  },
  {
    "text": "the low key is important one because that is the one they contain the message and of course you want to obtain some",
    "start": "412739",
    "end": "420809"
  },
  {
    "text": "kind of metadata so let's try to look very quickly about how this works",
    "start": "420809",
    "end": "426539"
  },
  {
    "text": "locally so um if I'm not wrong I'm going",
    "start": "426539",
    "end": "432239"
  },
  {
    "text": "to use my comments here so we don't waste time with typos I learned that in",
    "start": "432239",
    "end": "440099"
  },
  {
    "text": "the past conference so basically we are going to run a docker container with",
    "start": "440099",
    "end": "445199"
  },
  {
    "text": "busybox and just print out the message but I'm running with a demon flag which means",
    "start": "445199",
    "end": "452879"
  },
  {
    "text": "that runs behind the scenes but also will give me the container ID that is the one that I want to use later to",
    "start": "452879",
    "end": "460889"
  },
  {
    "text": "gather the logs in the filesystem of course you can use the token locks common but here we are doing the manual",
    "start": "460889",
    "end": "466259"
  },
  {
    "text": "stuff okay this is the container ID in",
    "start": "466259",
    "end": "471269"
  },
  {
    "text": "the container hash okay of course you're not going to remember that but what I",
    "start": "471269",
    "end": "476759"
  },
  {
    "text": "want to do is to dig into my file system and see where this exists I'm going to",
    "start": "476759",
    "end": "482099"
  },
  {
    "text": "become sudo Bar leave docker containers",
    "start": "482099",
    "end": "488639"
  },
  {
    "text": "oh we have a bunch of containers so is",
    "start": "488639",
    "end": "496769"
  },
  {
    "text": "that fine or too small okay thanks you're still young I'm not so if you do",
    "start": "496769",
    "end": "507059"
  },
  {
    "text": "a query here in there in the pad you will see that the container has many information as you said it with it like",
    "start": "507059",
    "end": "514439"
  },
  {
    "text": "the colon sex if it wants some volume and so on but here we just care about one piece which is the log file if I cut",
    "start": "514439",
    "end": "525389"
  },
  {
    "text": "the log file I will find my message here",
    "start": "525389",
    "end": "530790"
  },
  {
    "text": "is it's a JSON message in the filesystem now we can do this like with JQ it's",
    "start": "530790",
    "end": "538860"
  },
  {
    "text": "more beautiful okay that's it your application to get a message you got outside through some",
    "start": "538860",
    "end": "544740"
  },
  {
    "text": "streaming interface and then it wraps by the docker engine dr. engine creates a",
    "start": "544740",
    "end": "550889"
  },
  {
    "text": "new log file and this log file can be seen by everybody or the docker tools that does exactly the same that I'm",
    "start": "550889",
    "end": "557490"
  },
  {
    "text": "doing right now okay I wanted to show you that because you need to understand that before to move forward so present",
    "start": "557490",
    "end": "568189"
  },
  {
    "text": "so applications in kubernetes a quick overview",
    "start": "568189",
    "end": "573209"
  },
  {
    "text": "who's running kubernetes right now ok so I got an idea",
    "start": "573209",
    "end": "579209"
  },
  {
    "text": "ok pretty quickly you are going to see the concepts you have one application in docker you have one application runs in",
    "start": "579209",
    "end": "585660"
  },
  {
    "text": "a container and that's fine but here we have a few additions for example an application runs in a",
    "start": "585660",
    "end": "592889"
  },
  {
    "text": "container but for kubernetes a container is not like an object or a concept what kubernetes is about knows",
    "start": "592889",
    "end": "601499"
  },
  {
    "text": "about it is a pot and the pot is a concept which allows you to group",
    "start": "601499",
    "end": "607379"
  },
  {
    "text": "different containers so for example if you have a web server and you have some",
    "start": "607379",
    "end": "614119"
  },
  {
    "text": "database you can run both in the same pod because it belongs to the same context that's an example you can run it",
    "start": "614119",
    "end": "621629"
  },
  {
    "text": "on that way or not ok but you can have many a containers running in the same",
    "start": "621629",
    "end": "627509"
  },
  {
    "text": "pot usually you have one but you can have many but a node a node I mean a",
    "start": "627509",
    "end": "636240"
  },
  {
    "text": "host a physical machine or a beautiful machine can have many pots that means",
    "start": "636240",
    "end": "642480"
  },
  {
    "text": "multiple applications and you know that kubernetes cluster has many nodes so",
    "start": "642480",
    "end": "648389"
  },
  {
    "text": "they think is how do you deal with blogging when you have a cluster when for example you deploy your application",
    "start": "648389",
    "end": "655230"
  },
  {
    "text": "your application got some replica replicas in different nodes how do you",
    "start": "655230",
    "end": "660389"
  },
  {
    "text": "gather the login how you centralize the logs because kubernetes is really good for this it has a scheduling you can",
    "start": "660389",
    "end": "667379"
  },
  {
    "text": "create your own up kion's self-healing and all the things but for logging we have new challenges",
    "start": "667379",
    "end": "673580"
  },
  {
    "text": "it's not enough to go to the file system as I did right now and query each log",
    "start": "673580",
    "end": "679230"
  },
  {
    "text": "file because ten years ago if you have some issue in some application you used",
    "start": "679230",
    "end": "684570"
  },
  {
    "text": "to SSH into each server or use some kind of remote syslog to do some",
    "start": "684570",
    "end": "689970"
  },
  {
    "text": "troubleshooting but here the things change is a game changing and I would",
    "start": "689970",
    "end": "695130"
  },
  {
    "text": "say that is for good for who manage login of course we need to do more work actually I'm sure that nobody here finds",
    "start": "695130",
    "end": "703110"
  },
  {
    "text": "that login is fun because not login is not fun but if you are here is because",
    "start": "703110",
    "end": "708360"
  },
  {
    "text": "it had to deal with it right and we had to fix it so a login context in",
    "start": "708360",
    "end": "716130"
  },
  {
    "text": "kubernetes in Indo Kern we used to have like the pipeline standard output maybe",
    "start": "716130",
    "end": "723540"
  },
  {
    "text": "in the log message and we have in the time stamp but if you are running in",
    "start": "723540",
    "end": "728820"
  },
  {
    "text": "kubernetes there is some extra information for example the pot name",
    "start": "728820",
    "end": "733940"
  },
  {
    "text": "which pot this belongs to the poor lady because maybe you can have the same pot name but restarted like ten times and",
    "start": "733940",
    "end": "740460"
  },
  {
    "text": "the Paradis will be different the namespace that it belongs to the node the labels and annotation do you know",
    "start": "740460",
    "end": "748170"
  },
  {
    "text": "what are the labels No okay imagine that",
    "start": "748170",
    "end": "753840"
  },
  {
    "text": "you have several applications and you have different environments for example you have production you have testing and",
    "start": "753840",
    "end": "760140"
  },
  {
    "text": "development how do you make some differentiation between them okay I",
    "start": "760140",
    "end": "765810"
  },
  {
    "text": "create namespaces cool you can create namespace and group the port's associated with development on that",
    "start": "765810",
    "end": "772290"
  },
  {
    "text": "namespace or in production or testing whatever but if you want to query the",
    "start": "772290",
    "end": "778410"
  },
  {
    "text": "API server in kubernetes to say please show me all databases from the three",
    "start": "778410",
    "end": "785340"
  },
  {
    "text": "environments you use levels means that when you create the port you attach some kind of label to the pot you say and",
    "start": "785340",
    "end": "793050"
  },
  {
    "text": "this is a new application version four please show me all information that you",
    "start": "793050",
    "end": "799500"
  },
  {
    "text": "have about application for and you can add many labels as you want because labels allows",
    "start": "799500",
    "end": "804989"
  },
  {
    "text": "you to do some selection over the resources inside kubernetes and labels",
    "start": "804989",
    "end": "810839"
  },
  {
    "text": "are are also the key and annotations to do a better login so if we think about",
    "start": "810839",
    "end": "819959"
  },
  {
    "text": "the log processor we need we need to think about we have the logs that is a",
    "start": "819959",
    "end": "825420"
  },
  {
    "text": "message but we need to understand what is the context of that message because it belongs to a container name to a pod",
    "start": "825420",
    "end": "831929"
  },
  {
    "text": "- namespace hot labels and annotation if we cannot get the context the information is irrelevant so from a log",
    "start": "831929",
    "end": "842610"
  },
  {
    "text": "processor perspective I'm talking about in a general way it doesn't matter the log processor that you are running it",
    "start": "842610",
    "end": "848279"
  },
  {
    "text": "had to deal with this it's going to get the container name container ID for the file system or journal D but if you want",
    "start": "848279",
    "end": "855929"
  },
  {
    "text": "to correlate all this information with the kubernetes context you need to query",
    "start": "855929",
    "end": "862139"
  },
  {
    "text": "the API server when you have a kubernetes cluster you have an API server or which is called a master and",
    "start": "862139",
    "end": "868499"
  },
  {
    "text": "the master knows about well through it etcd knows all the states of imports or all",
    "start": "868499",
    "end": "875639"
  },
  {
    "text": "the nodes so if I'm running a port in node B the API server knows what are the",
    "start": "875639",
    "end": "882149"
  },
  {
    "text": "labels and annotations associated with this pot running on that node",
    "start": "882149",
    "end": "887420"
  },
  {
    "text": "so at some point you need to take the whole information and merge it so here",
    "start": "887420",
    "end": "894720"
  },
  {
    "text": "is what the log processor a needs to do the hard work okay this is not too",
    "start": "894720",
    "end": "899850"
  },
  {
    "text": "straightforward from the beginning unless you have the right tools and that's why we have a open source and",
    "start": "899850",
    "end": "905850"
  },
  {
    "text": "kind of certified tools for logging so it's like this if you are doing logging",
    "start": "905850",
    "end": "913319"
  },
  {
    "text": "it because you want to do some data analysis but in order to perform data analysis do you want to centralize your",
    "start": "913319",
    "end": "920069"
  },
  {
    "text": "information otherwise you cannot do it okay and the whole deal of LOC",
    "start": "920069",
    "end": "925439"
  },
  {
    "text": "processing and login in kubernetes in general is that you need to check the",
    "start": "925439",
    "end": "930779"
  },
  {
    "text": "information from multiple sources unify this information in a central",
    "start": "930779",
    "end": "935820"
  },
  {
    "text": "like a database it doesn't matter the database could be like a stream unit of is like Kafka could be Reddy's my sequel",
    "start": "935820",
    "end": "942660"
  },
  {
    "text": "elasticsearch or whatever but the important pieces here is a lock processor because if the lock processor",
    "start": "942660",
    "end": "949050"
  },
  {
    "text": "is not able to correlate information between the ports between the nodes in",
    "start": "949050",
    "end": "954630"
  },
  {
    "text": "between with the levels you cannot get the right insights so lock processing in",
    "start": "954630",
    "end": "962670"
  },
  {
    "text": "kubernetes this is how it works basically do you know what is a demon",
    "start": "962670",
    "end": "969029"
  },
  {
    "text": "set okay everybody knows what is a pod yeah I just say that right now pod is a",
    "start": "969029",
    "end": "976440"
  },
  {
    "text": "container which is running in a node a demon set is a special port which run on",
    "start": "976440",
    "end": "981959"
  },
  {
    "text": "every node of your cluster if you're going to deploy your application and you",
    "start": "981959",
    "end": "987360"
  },
  {
    "text": "said okay this is a pod no it's not a pod is going to be a demon set automatically kubernetes is going to",
    "start": "987360",
    "end": "994290"
  },
  {
    "text": "have at least one replica open that specific application pot on every node",
    "start": "994290",
    "end": "999390"
  },
  {
    "text": "of the cluster and if you add a new node into the cluster when you start up and",
    "start": "999390",
    "end": "1004520"
  },
  {
    "text": "bootstrap everything is going to start a new port because we now put with a specific demon set so if we want to",
    "start": "1004520",
    "end": "1012829"
  },
  {
    "text": "solve log in in kubernetes we want that our log processor runs on every node of",
    "start": "1012829",
    "end": "1019279"
  },
  {
    "text": "your cluster because if you imagine that you have just won a okay one node one",
    "start": "1019279",
    "end": "1025880"
  },
  {
    "text": "built on machine and the spiritual machine has many ports all the logs from those ports are in the file system own",
    "start": "1025880",
    "end": "1032270"
  },
  {
    "text": "in journal D on that specific environment the API server doesn't know",
    "start": "1032270",
    "end": "1037730"
  },
  {
    "text": "anything about logging okay so what you need to have is to have the log processor running locally in the node of",
    "start": "1037730",
    "end": "1045558"
  },
  {
    "text": "course this log processor as a daemon set needs to have special permissions to",
    "start": "1045559",
    "end": "1050960"
  },
  {
    "text": "read the log files from the file system a read is it said partly up containers",
    "start": "1050960",
    "end": "1056900"
  },
  {
    "text": "okay but that it's only symbolic links to the docker engine that I just show",
    "start": "1056900",
    "end": "1063410"
  },
  {
    "text": "you before so what we do is basically deploy the low processor as",
    "start": "1063410",
    "end": "1069410"
  },
  {
    "text": "on set and then we start reading the logs because we're going to read each",
    "start": "1069410",
    "end": "1074510"
  },
  {
    "text": "container log file and that is expensive by Network it doesn't matter if it is file system or Journal D it will be",
    "start": "1074510",
    "end": "1080750"
  },
  {
    "text": "expensive anyways expensive in terms of computing and then we need to go with",
    "start": "1080750",
    "end": "1086840"
  },
  {
    "text": "the second steps which is gather the metadata labels annotations from the API",
    "start": "1086840",
    "end": "1092420"
  },
  {
    "text": "server because we want to merge this information okay let's do a simple an",
    "start": "1092420",
    "end": "1101620"
  },
  {
    "text": "example about how this works okay here",
    "start": "1101620",
    "end": "1111500"
  },
  {
    "text": "I'm running mini cube are you familiar with mini cube yeah most of you if he",
    "start": "1111500",
    "end": "1116780"
  },
  {
    "text": "doesn't a mini cube is like a single instance of kubernetes that runs in a",
    "start": "1116780",
    "end": "1122240"
  },
  {
    "text": "virtual machine that you can run in your own computer but make sure to close slack and all the things elastic search",
    "start": "1122240",
    "end": "1129040"
  },
  {
    "text": "yeah that's why when when I'm stored and starting the demo had to look at the memory available because I had to start",
    "start": "1129040",
    "end": "1135290"
  },
  {
    "text": "mini cube elasticsearch keep an ax and that's it okay so mini cube is running",
    "start": "1135290",
    "end": "1142010"
  },
  {
    "text": "I'm going to look at in the pot that are running on this a specific stuff there's",
    "start": "1142010",
    "end": "1149960"
  },
  {
    "text": "nothing in a default namespace let's make sure that we have okay everything",
    "start": "1149960",
    "end": "1156740"
  },
  {
    "text": "is fine right this is my own single stuff what I'm going to do now is I'm",
    "start": "1156740",
    "end": "1164990"
  },
  {
    "text": "going to deploy a pot an application and this application is just a fake",
    "start": "1164990",
    "end": "1171950"
  },
  {
    "text": "simulator of Apache web server so what it does it just to write a simple log",
    "start": "1171950",
    "end": "1179150"
  },
  {
    "text": "file as a simulate Apache log files to the standard output randomly okay",
    "start": "1179150",
    "end": "1184670"
  },
  {
    "text": "everyone every second okay this is the",
    "start": "1184670",
    "end": "1189680"
  },
  {
    "text": "base image if you have your computer you can run it let's run it here docker run",
    "start": "1189680",
    "end": "1195080"
  },
  {
    "text": "sharing I'm going to run it locally outside of kubernetes just using docker",
    "start": "1195080",
    "end": "1200300"
  },
  {
    "text": "container there you go it just print one message rather message with IP address",
    "start": "1200300",
    "end": "1205490"
  },
  {
    "text": "and messages one per second okay I'm going to deploy the same thing but in my",
    "start": "1205490",
    "end": "1211310"
  },
  {
    "text": "kubernetes single class okay so keep CTL",
    "start": "1211310",
    "end": "1219820"
  },
  {
    "text": "create but patchy that demo so keeps it",
    "start": "1219820",
    "end": "1227900"
  },
  {
    "text": "here get pods watch oh it's a random so",
    "start": "1227900",
    "end": "1233840"
  },
  {
    "text": "let's use now the the kubernetes a login tool to see the logs from that specific",
    "start": "1233840",
    "end": "1239480"
  },
  {
    "text": "pot so it will be cube CTO logs Apache logs and follow the locks there you go",
    "start": "1239480",
    "end": "1249460"
  },
  {
    "text": "so the pod is running but right now those who logs are just in the",
    "start": "1249460",
    "end": "1254690"
  },
  {
    "text": "filesystem of mini cube and we can dig into that if you do mini cube SSH just for demo",
    "start": "1254690",
    "end": "1263180"
  },
  {
    "text": "purposes bar leave containers leave",
    "start": "1263180",
    "end": "1271910"
  },
  {
    "text": "containers okay thank you here the",
    "start": "1271910",
    "end": "1281150"
  },
  {
    "text": "containers this is our friend but that friend of us has more information in the",
    "start": "1281150",
    "end": "1288500"
  },
  {
    "text": "docker context we used to have just hash in the container ID but here we have the namespace we have the name of the pod in",
    "start": "1288500",
    "end": "1295550"
  },
  {
    "text": "the same name of the file right and if we create that file we do a cut you get",
    "start": "1295550",
    "end": "1306680"
  },
  {
    "text": "the JSON message for example this one okay that's fine until now there's",
    "start": "1306680",
    "end": "1316040"
  },
  {
    "text": "nothing fancy okay I'm going to exit from mini cube okay cube City I'll get pods Apache logs",
    "start": "1316040",
    "end": "1322580"
  },
  {
    "text": "is running but what I wanted to do now is to install my log in my log processor",
    "start": "1322580",
    "end": "1327830"
  },
  {
    "text": "as a daemon set run locally take out the logs process the loss and injustice logs",
    "start": "1327830",
    "end": "1334220"
  },
  {
    "text": "into a database for demo purposes and to use elasticsearch we will see if that",
    "start": "1334220",
    "end": "1343330"
  },
  {
    "text": "is working because I reduce the memory usage right now so okay it's still alive cool and just for sanity purpose we are",
    "start": "1343330",
    "end": "1351490"
  },
  {
    "text": "going to wipe the database don't do this at home or in production this is a magic",
    "start": "1351490",
    "end": "1359620"
  },
  {
    "text": "key oh there you go so if we do for",
    "start": "1359620",
    "end": "1364960"
  },
  {
    "text": "example we're using cool like the HTTP client to query the database to see if",
    "start": "1364960",
    "end": "1371410"
  },
  {
    "text": "we have some records cut in this is",
    "start": "1371410",
    "end": "1377640"
  },
  {
    "text": "pretty oh there's nothing we have",
    "start": "1377940",
    "end": "1383200"
  },
  {
    "text": "nothing cool it's empty so the next step is to",
    "start": "1383200",
    "end": "1388300"
  },
  {
    "text": "deploy the demon set of course if you want to install a log processor you just need to get the right documentation the",
    "start": "1388300",
    "end": "1393790"
  },
  {
    "text": "right comments for example I'm going to show the namespaces and have created",
    "start": "1393790",
    "end": "1400270"
  },
  {
    "text": "before a namespace which is called login so I deploy my demo set a namespace which is called logging just for sons",
    "start": "1400270",
    "end": "1406300"
  },
  {
    "text": "having something looking good okay there's no relevant thing here and I'm",
    "start": "1406300",
    "end": "1412210"
  },
  {
    "text": "going to deploy a fluent bit fluent bit which is a log in log processor I'm going to talk more about it later so",
    "start": "1412210",
    "end": "1418690"
  },
  {
    "text": "we're going to deploy is a config map do you know what a config map is yes ok",
    "start": "1418690",
    "end": "1426390"
  },
  {
    "text": "when you have a container running and you want to ingest configuration you",
    "start": "1426390",
    "end": "1431830"
  },
  {
    "text": "have two ways or you create your own container and when you create a container put the log file inside the",
    "start": "1431830",
    "end": "1438820"
  },
  {
    "text": "container but if you want to change the configuration you have to rebuild it or you can pass the configuration files as",
    "start": "1438820",
    "end": "1445350"
  },
  {
    "text": "mounted volumes so when the container start it can see the files as a volume",
    "start": "1445350",
    "end": "1452350"
  },
  {
    "text": "that was mounted ok and a config map is an object in kubernetes that allows you",
    "start": "1452350",
    "end": "1458320"
  },
  {
    "text": "to ingest configuration inside the pot so this is not something that you need",
    "start": "1458320",
    "end": "1464080"
  },
  {
    "text": "to understand or remember by in your mind but this is a configuration for",
    "start": "1464080",
    "end": "1470320"
  },
  {
    "text": "fluid bed this is the input from where I'm going to collect the logs right now I'm going",
    "start": "1470320",
    "end": "1477410"
  },
  {
    "text": "to process only the Apache logs I'm going to say parser for docker and going",
    "start": "1477410",
    "end": "1483890"
  },
  {
    "text": "to filter the data what a filter does on this case go to the API server go to the",
    "start": "1483890",
    "end": "1490970"
  },
  {
    "text": "labels metadata annotations and merge that and then I'm going to ship this",
    "start": "1490970",
    "end": "1497450"
  },
  {
    "text": "information because this is the output to elasticsearch we use es for short but",
    "start": "1497450",
    "end": "1503960"
  },
  {
    "text": "is last search and we are using the magic IP in mini cube with that IP you",
    "start": "1503960",
    "end": "1509929"
  },
  {
    "text": "can talk directly to the to the native host okay so I'm going to ingest the",
    "start": "1509929",
    "end": "1515630"
  },
  {
    "text": "configuration from paid config map okay",
    "start": "1515630",
    "end": "1522080"
  },
  {
    "text": "ready and I'm going to deploy flow n bit the demon set for mini cube this is the",
    "start": "1522080",
    "end": "1530330"
  },
  {
    "text": "docker image for fluid camp then I'm pushing right now that version was",
    "start": "1530330",
    "end": "1535460"
  },
  {
    "text": "released at this Monday so it's like the new version so cube CTL create des mini",
    "start": "1535460",
    "end": "1546380"
  },
  {
    "text": "cube there you go so kissing get ports okay",
    "start": "1546380",
    "end": "1552920"
  },
  {
    "text": "fluent bait is running okay so what that",
    "start": "1552920",
    "end": "1559670"
  },
  {
    "text": "means oh I'm going to query the lesyk",
    "start": "1559670",
    "end": "1566420"
  },
  {
    "text": "search database let me do it some silence here can you see its number",
    "start": "1566420",
    "end": "1576610"
  },
  {
    "text": "that's in the number of records that the database has so from one side and",
    "start": "1576610",
    "end": "1582200"
  },
  {
    "text": "running fluent bit as the log processor inside the node and from the other I'm",
    "start": "1582200",
    "end": "1588830"
  },
  {
    "text": "querying the database and I'm seeing that the logs are hidden there ok let's",
    "start": "1588830",
    "end": "1594620"
  },
  {
    "text": "try to do some visualization",
    "start": "1594620",
    "end": "1597580"
  },
  {
    "text": "localhost here we go whoa",
    "start": "1609630",
    "end": "1614970"
  },
  {
    "text": "discover locks and we are going to",
    "start": "1615660",
    "end": "1621000"
  },
  {
    "text": "create the timestamp thing choose that we need to choose the right things",
    "start": "1621000",
    "end": "1626800"
  },
  {
    "text": "otherwise we don't get the locks and here here the locks for example I'm",
    "start": "1626800",
    "end": "1634000"
  },
  {
    "text": "going to choose this one this entry and then going to the JSON that was ingested",
    "start": "1634000",
    "end": "1641880"
  },
  {
    "text": "into the database if you look carefully here we have the stream the timestamp",
    "start": "1641880",
    "end": "1648010"
  },
  {
    "text": "and we have this new addition of information in that information comes",
    "start": "1648010",
    "end": "1654100"
  },
  {
    "text": "from the API server so when you have centralized all your logs in your database now you can query the information you can say please show me",
    "start": "1654100",
    "end": "1661600"
  },
  {
    "text": "all the logs that a pot name belongs to a patch and you're going to get everything about the patch okay so that",
    "start": "1661600",
    "end": "1670900"
  },
  {
    "text": "was a quick interview so I review about that so I know that",
    "start": "1670900",
    "end": "1676450"
  },
  {
    "text": "most of you are using they are using flu and D and flu in D is more than just a",
    "start": "1676450",
    "end": "1681670"
  },
  {
    "text": "strong logging solution actually flu and D is a it's a fluent ecosystem and flu",
    "start": "1681670",
    "end": "1688060"
  },
  {
    "text": "in D I don't know if you're worried about but flu indeed join at the CN CF it's an inception project incubation",
    "start": "1688060",
    "end": "1693880"
  },
  {
    "text": "break sorry and we are in the process to a full graduation maybe in a couple of months or before the next cube calm but",
    "start": "1693880",
    "end": "1701290"
  },
  {
    "text": "flu India also has like a huge community we have like 700 plugins available for",
    "start": "1701290",
    "end": "1706380"
  },
  {
    "text": "storage in Casca elasticsearch my sequel Reddy's and so on on different filters",
    "start": "1706380",
    "end": "1712660"
  },
  {
    "text": "and when we donated this also a there's a strong commitment from the company to",
    "start": "1712660",
    "end": "1718630"
  },
  {
    "text": "continue growing fluency in all aspects even the community for example if you're writing your own applications in PI 2",
    "start": "1718630",
    "end": "1724540"
  },
  {
    "text": "language you can use the Python SDK for fluency and you can ingest your login messages directly to fluently but in",
    "start": "1724540",
    "end": "1732670"
  },
  {
    "text": "order to thing make things better sometimes people complain that fluid decap use too much memory in some",
    "start": "1732670",
    "end": "1739279"
  },
  {
    "text": "scenarios we set a creating a new solution and a tentative solution which is called flow in bed and flow in bed is",
    "start": "1739279",
    "end": "1745849"
  },
  {
    "text": "like a C language version of windy but F with a strong focus on kubernetes and",
    "start": "1745849",
    "end": "1751970"
  },
  {
    "text": "docker containers and Fulham beat sealed at 13 was released just this week and",
    "start": "1751970",
    "end": "1758830"
  },
  {
    "text": "one of the future is annotated pots I don't know if you remember when you look at the elasticsearch stuff for example",
    "start": "1758830",
    "end": "1767450"
  },
  {
    "text": "we don't have too much time but we'll try to do it very quickly for example the Apache log here where is",
    "start": "1767450",
    "end": "1774200"
  },
  {
    "text": "look you know that is a row string but in your mind you know that the Apache Lo",
    "start": "1774200",
    "end": "1780619"
  },
  {
    "text": "has an IP at Einstein and HTTP method and status so one of the new futures of",
    "start": "1780619",
    "end": "1786470"
  },
  {
    "text": "flue embed for these cases is that we implemented annotated ports so when you",
    "start": "1786470",
    "end": "1791690"
  },
  {
    "text": "deploy your pot you can say okay this is my pot but also please fluent bit",
    "start": "1791690",
    "end": "1797989"
  },
  {
    "text": "processor used Apache parsers you can suggest that from an operational",
    "start": "1797989",
    "end": "1803119"
  },
  {
    "text": "perspective so let's wait pretty quickly",
    "start": "1803119",
    "end": "1808059"
  },
  {
    "text": "if you look at this pot there's a new notation this one was not there before",
    "start": "1810220",
    "end": "1816639"
  },
  {
    "text": "we are suggesting the path day log processor that you can use this specific",
    "start": "1816639",
    "end": "1821720"
  },
  {
    "text": "person it's the same a container but with a different a level so a notation",
    "start": "1821720",
    "end": "1830679"
  },
  {
    "text": "[Music] okay so that is running we got more hits",
    "start": "1832790",
    "end": "1839570"
  },
  {
    "text": "here and we're going to keep Anna and we're going to do some search search so kubernetes at pod name equals Apache",
    "start": "1839570",
    "end": "1846889"
  },
  {
    "text": "logs annotated ok here the new logs for",
    "start": "1846889",
    "end": "1853099"
  },
  {
    "text": "the Pacific boat and now there's a difference can you see this",
    "start": "1853099",
    "end": "1860679"
  },
  {
    "text": "that was not there before because Apache logs doesn't have a structure but",
    "start": "1861260",
    "end": "1867110"
  },
  {
    "text": "suggest in a parser to the log processor you can get that right away inside your",
    "start": "1867110",
    "end": "1872720"
  },
  {
    "text": "database before this you had to do a lot of magic in order to make it happens and",
    "start": "1872720",
    "end": "1877970"
  },
  {
    "text": "now a fluent bit can do it for you that's one of the biggest thing and another future",
    "start": "1877970",
    "end": "1883340"
  },
  {
    "text": "I'm not going to demo because if they pretty much the same that you can do for example a you can say please exclude my",
    "start": "1883340",
    "end": "1889970"
  },
  {
    "text": "logs you a support you say an annotation flew impede that IO is latch exclude",
    "start": "1889970",
    "end": "1895700"
  },
  {
    "text": "true please exclude my dogs because there are some times that the posts are too noisy are running in debug mode and",
    "start": "1895700",
    "end": "1902030"
  },
  {
    "text": "you don't need that we added matrix for JSON and permit use so that means that",
    "start": "1902030",
    "end": "1908960"
  },
  {
    "text": "you can query also how your login solution is working internally I think",
    "start": "1908960",
    "end": "1914720"
  },
  {
    "text": "that this is one of the most expected futures and since we have a few minutes I'm going to run it locally in my",
    "start": "1914720",
    "end": "1921050"
  },
  {
    "text": "computer I'm not going to run parameters right now flow embed here's so I'm going",
    "start": "1921050",
    "end": "1930770"
  },
  {
    "text": "to run through embed locally in my computer I'm going to use the input a fluid can read many things log files TCP",
    "start": "1930770",
    "end": "1937970"
  },
  {
    "text": "messages but also CPU metrics CPU metrics and send the metrics to the",
    "start": "1937970",
    "end": "1943550"
  },
  {
    "text": "standard output every second ah but I",
    "start": "1943550",
    "end": "1948620"
  },
  {
    "text": "didn't start the web server so I cannot get the metrics Lego okay it's right in",
    "start": "1948620",
    "end": "1955040"
  },
  {
    "text": "the matrix taken some guidance some metrics and pushing those metrics to the standard output now we can use the HTTP",
    "start": "1955040",
    "end": "1963530"
  },
  {
    "text": "interface to query the internals of the web server okay in a beauty way there",
    "start": "1963530",
    "end": "1975830"
  },
  {
    "text": "you go so you can get also some insights from the version that is running through the 13 community ratio they build flags",
    "start": "1975830",
    "end": "1982910"
  },
  {
    "text": "but which is more important the matrix that we have so in the input you have",
    "start": "1982910",
    "end": "1992690"
  },
  {
    "text": "one input scipio we are processing 37 records which belongs to eleven thousand",
    "start": "1992690",
    "end": "1998450"
  },
  {
    "text": "bytes and so on so if you refresh this information you will see how it grows",
    "start": "1998450",
    "end": "2004450"
  },
  {
    "text": "and what you do is specifically is that let Prometheus consume this endpoint but",
    "start": "2004450",
    "end": "2010360"
  },
  {
    "text": "you know oh this is Jason but perimeter has a different format slash Prometheus",
    "start": "2010360",
    "end": "2016290"
  },
  {
    "text": "there you go okay thank you",
    "start": "2016290",
    "end": "2024420"
  },
  {
    "text": "looks like you you love parameters right yeah no it's really cool so yeah so this",
    "start": "2025410",
    "end": "2033580"
  },
  {
    "text": "is one of our additions on also people say from the enterprise we need more",
    "start": "2033580",
    "end": "2039100"
  },
  {
    "text": "Enterprise connectors we solve all the data collection for kubernetes but now we can in want to ingest data in all",
    "start": "2039100",
    "end": "2045610"
  },
  {
    "text": "places so we added support for Asher for Kafka and also Splunk maybe you love it",
    "start": "2045610",
    "end": "2052148"
  },
  {
    "text": "maybe you hate it but we have the support for it because people want it ok and annotated ports you can use the",
    "start": "2052149",
    "end": "2061000"
  },
  {
    "text": "parser to suggest a person and in saying suggest because in the fluent bit",
    "start": "2061000",
    "end": "2066310"
  },
  {
    "text": "configuration you can reject that rules maybe some guy want to deploy a pod",
    "start": "2066310",
    "end": "2072070"
  },
  {
    "text": "which one to screw their locks but if that flag is not a in Abel or allow it",
    "start": "2072070",
    "end": "2077350"
  },
  {
    "text": "in fluent bit it will not happens it with log it area anyways I know teleports we just see that how we can",
    "start": "2077350",
    "end": "2084190"
  },
  {
    "text": "put an annotation well flowing bit with images with",
    "start": "2084190",
    "end": "2089408"
  },
  {
    "text": "primitives and that's whether we show you a now well I don't think that we",
    "start": "2089409",
    "end": "2094990"
  },
  {
    "text": "have time for the last a demo but we're going to run pretty quickly in one minute the start of a project we have so",
    "start": "2094990",
    "end": "2102310"
  },
  {
    "text": "far in less than three years we had like 74 releases more than 32 contributors",
    "start": "2102310",
    "end": "2107740"
  },
  {
    "text": "this is low but we can grow with you guys every day we have more than $50,000",
    "start": "2107740",
    "end": "2116100"
  },
  {
    "text": "every day since the last month and that means that we are getting more than",
    "start": "2116100",
    "end": "2121810"
  },
  {
    "text": "three millions of do--let's in the in the last year and what means $50,000",
    "start": "2121810",
    "end": "2129010"
  },
  {
    "text": "fifty-thousand notes that are created everyday somewhere that needs a login solution our choosing",
    "start": "2129010",
    "end": "2135280"
  },
  {
    "text": "fluent bed and this same matrix apply for fluency so people use fluently and fluent that in different scenarios this",
    "start": "2135280",
    "end": "2143200"
  },
  {
    "text": "is how is growing somebody here was testing it but he",
    "start": "2143200",
    "end": "2149470"
  },
  {
    "text": "didn't like it having that in the last version 0.13 we were doing all these",
    "start": "2149470",
    "end": "2156700"
  },
  {
    "text": "tests about HTTP matrix and we did are like 20 versions since January once a",
    "start": "2156700",
    "end": "2162610"
  },
  {
    "text": "week and people was tested testing and people were so excited that some of them said hey I deployed this in production",
    "start": "2162610",
    "end": "2168120"
  },
  {
    "text": "and what happens at the end sometimes we have some crashes from bugs and they say",
    "start": "2168120",
    "end": "2173710"
  },
  {
    "text": "oh but it was running this in production don't do it is a test version but now we are really good it's pretty stable we",
    "start": "2173710",
    "end": "2180370"
  },
  {
    "text": "don't release something but you have unit tests we are going forward now with the CI CD and all the things so a we",
    "start": "2180370",
    "end": "2187390"
  },
  {
    "text": "just started the next version co-taught 14 the development we started just after",
    "start": "2187390",
    "end": "2192400"
  },
  {
    "text": "coop con right now so our goals is to add load balancing for multiple outputs",
    "start": "2192400",
    "end": "2198430"
  },
  {
    "text": "maybe if you are sending to one elasticsearch you can have many at failure overrun robbing a support nest a",
    "start": "2198430",
    "end": "2204910"
  },
  {
    "text": "multi-line in Dhaka JSON logs for example Java stack traces and we need",
    "start": "2204910",
    "end": "2210370"
  },
  {
    "text": "help with documentation in testing with everything that relates to an open source project so you can reach us",
    "start": "2210370",
    "end": "2215740"
  },
  {
    "text": "anytime thank you so much [Applause]",
    "start": "2215740",
    "end": "2221489"
  }
]