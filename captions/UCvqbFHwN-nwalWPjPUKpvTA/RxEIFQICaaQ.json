[
  {
    "text": "hey there everyone uh thanks for joining our session today we're going to be talking about pre-sale checks do you",
    "start": "179",
    "end": "7140"
  },
  {
    "text": "need a checklist before sailing to production with istio first off just a quick round of",
    "start": "7140",
    "end": "13920"
  },
  {
    "text": "introductions my name's Simon green and I'm a field engineer here at solo I'm",
    "start": "13920",
    "end": "19380"
  },
  {
    "text": "based at in Boston Massachusetts and I'm very proud to say this is actually my",
    "start": "19380",
    "end": "24539"
  },
  {
    "text": "first istio con and actually I I haven't been part of the istio community for that long I've um my prior life I've",
    "start": "24539",
    "end": "32220"
  },
  {
    "text": "I've contributed to Apache camel and active mq and Kafka and I've got roughly",
    "start": "32220",
    "end": "38520"
  },
  {
    "text": "uh 25 years or so of experience in working in the app Dev world and over to",
    "start": "38520",
    "end": "45059"
  },
  {
    "text": "Iran hey everyone my name is Ron Venom I'm also at solo I lead one of the one",
    "start": "45059",
    "end": "51239"
  },
  {
    "text": "of the field engineering teams called Special Operations and what my team does is it focuses on providing mesh-based",
    "start": "51239",
    "end": "58739"
  },
  {
    "text": "solutions for some of the more complex use cases so I focused on like Enterprise customers and some of the the",
    "start": "58739",
    "end": "65338"
  },
  {
    "text": "larger multi-tenant environments I've been working on istio since uh almost",
    "start": "65339",
    "end": "71159"
  },
  {
    "text": "the beginning of the project so before joining solo almost three years ago I",
    "start": "71159",
    "end": "76380"
  },
  {
    "text": "was at IBM also working on istio so yeah glad to be here you know glad to",
    "start": "76380",
    "end": "81900"
  },
  {
    "text": "continue um being able to be a speaker and then present to these two Community happy to",
    "start": "81900",
    "end": "87479"
  },
  {
    "text": "be here foreign thanks Rob so first uh off for those of",
    "start": "87479",
    "end": "95579"
  },
  {
    "text": "you that don't know me I've been a pilot also roughly for I guess 15 or so years",
    "start": "95579",
    "end": "101579"
  },
  {
    "text": "and as a pilot using checklists was always something that was drummed into me",
    "start": "101579",
    "end": "107220"
  },
  {
    "text": "back as far as my primary training so not only things like pre-flight checklists but",
    "start": "107220",
    "end": "112920"
  },
  {
    "text": "checklist for All Phases of flight whether it's takeoff Cruise descent or Landing",
    "start": "112920",
    "end": "118320"
  },
  {
    "text": "and of course we also use them for emergencies what we're looking at right now is my airplane it's a highly modified 1949",
    "start": "118320",
    "end": "126659"
  },
  {
    "text": "temco Swift built in Dallas Texas and what's unique about this is it has",
    "start": "126659",
    "end": "131879"
  },
  {
    "text": "over 150 airframe modifications and because of this there was never a",
    "start": "131879",
    "end": "137280"
  },
  {
    "text": "checklist for this unique bird so what I had to do is go ahead and write my own",
    "start": "137280",
    "end": "144319"
  },
  {
    "text": "yeah and here is the checklist I wrote so this is a checklist that covers",
    "start": "144540",
    "end": "151560"
  },
  {
    "text": "everything that I could possibly need to do including what to do in an emergency in fact I actually had an in-flight",
    "start": "151560",
    "end": "158819"
  },
  {
    "text": "emergency once where my landing gear wouldn't extend so luckily I had a passenger to help me what we call this",
    "start": "158819",
    "end": "166019"
  },
  {
    "text": "is crew resource management or CRM so my passenger kindly took the checklist read",
    "start": "166019",
    "end": "171840"
  },
  {
    "text": "it line by line what tasks I needed to accomplish in order to troubleshoot my production outage so to speak so he read",
    "start": "171840",
    "end": "179879"
  },
  {
    "text": "and I verified this resulted in a really positive outcome I was able to help identify an",
    "start": "179879",
    "end": "186900"
  },
  {
    "text": "electrical fault which could be resolved by cycling the flaps three to four times and further extending CRM I included the",
    "start": "186900",
    "end": "195239"
  },
  {
    "text": "control tower to help me verify and check that my landing gear was in fact extended and I was cleared to land",
    "start": "195239",
    "end": "202620"
  },
  {
    "text": "what does all of this mean checklist facilitate teamwork",
    "start": "202620",
    "end": "208040"
  },
  {
    "text": "so the question is why am I telling you all of this remember whether it's for something like piloting an airplane or a",
    "start": "208800",
    "end": "215640"
  },
  {
    "text": "surgeon in the operating theater who doesn't want to forget a scalpel in their patient or a platform SRE",
    "start": "215640",
    "end": "221840"
  },
  {
    "text": "responsible for business critical workloads we need a clearly defined checklist a checklist is intended for",
    "start": "221840",
    "end": "229680"
  },
  {
    "text": "the pilot though not for the mechanic we're focused on checking the oil not",
    "start": "229680",
    "end": "234720"
  },
  {
    "text": "changing it in other words we worry about solving the issue later in a more",
    "start": "234720",
    "end": "240060"
  },
  {
    "text": "controlled manner use the checklist to help identify shortcomings or gaps either during",
    "start": "240060",
    "end": "246000"
  },
  {
    "text": "production Readiness or an outage taking what I've learned as an aviator",
    "start": "246000",
    "end": "252299"
  },
  {
    "text": "RAM and I have embarked on drafting and istio Readiness checklist which you can see over here on the right hand side",
    "start": "252299",
    "end": "259620"
  },
  {
    "text": "this checklist is intended for the platform Ops Team those who are focused on day two Ops not",
    "start": "259620",
    "end": "266400"
  },
  {
    "text": "Day Zero the intention is not to go into the internals of how istio works but",
    "start": "266400",
    "end": "272100"
  },
  {
    "text": "more about identifying gaps or outliers so what we're going to do in today's",
    "start": "272100",
    "end": "277740"
  },
  {
    "text": "session is help you build your own checklist just like I did for my highly",
    "start": "277740",
    "end": "283139"
  },
  {
    "text": "modified airplane RAM and I have put together a bunch of different customer case studies where we",
    "start": "283139",
    "end": "290040"
  },
  {
    "text": "were able to observe the problem check and validate what was wrong and help the customer with a positive",
    "start": "290040",
    "end": "297300"
  },
  {
    "text": "outcome and with that our first example is the",
    "start": "297300",
    "end": "303720"
  },
  {
    "text": "orphan sidecar problem so for this particular case we had a customer come to us with a problem that",
    "start": "303720",
    "end": "310380"
  },
  {
    "text": "some of their services were not behaving well they were seeing random intermittent errors and this just",
    "start": "310380",
    "end": "317400"
  },
  {
    "text": "started happening out of the blue so as field Engineers Rob and I asked them what had changed in the system",
    "start": "317400",
    "end": "324000"
  },
  {
    "text": "leading up to this particular event they mentioned that they'd recently upgraded istio but didn't think it was",
    "start": "324000",
    "end": "330660"
  },
  {
    "text": "part of the issue because things were working fine after the upgrade we helped narrow down the problem to",
    "start": "330660",
    "end": "336840"
  },
  {
    "text": "just a few microservices and observed in the sidecar logs that there were endpoint and certificate related errors",
    "start": "336840",
    "end": "346020"
  },
  {
    "text": "yep so from the customer's perspective like this was difficult to to troubleshoot and mostly because of the",
    "start": "346020",
    "end": "353220"
  },
  {
    "text": "inner men and the random nature of when it started occurring it wasn't all of",
    "start": "353220",
    "end": "358380"
  },
  {
    "text": "the services in the mesh it was only a subset of them and it wasn't all destinations or or all endpoints of the",
    "start": "358380",
    "end": "366660"
  },
  {
    "text": "the mesh service was trying to route to that was also intermittent um so because of that you know we",
    "start": "366660",
    "end": "372960"
  },
  {
    "text": "started going down you know first thing we checked you know make sure istod is okay and istio didn't istio D didn't have any errors the sidecar logs showed",
    "start": "372960",
    "end": "380460"
  },
  {
    "text": "access logs we turned on access log looked at the access login like some most of them were working and then we're seeing errors in some of them but not",
    "start": "380460",
    "end": "387360"
  },
  {
    "text": "all of them and there was like a few warning messages right but it wasn't enough for a customer to like quickly",
    "start": "387360",
    "end": "394440"
  },
  {
    "text": "debug themselves the issue was that um",
    "start": "394440",
    "end": "400020"
  },
  {
    "text": "some of these sidecars were orphaned from istod after they did the upgrade you know they did a revisioned upgrade",
    "start": "400020",
    "end": "406979"
  },
  {
    "text": "installed a new control plane and took out the old one and then they didn't complete the entire process of moving",
    "start": "406979",
    "end": "413100"
  },
  {
    "text": "all the side cars to the new one the way a sidecar works right when it",
    "start": "413100",
    "end": "418259"
  },
  {
    "text": "receives config from istio-d the control plane it is self-sufficient for a while with",
    "start": "418259",
    "end": "424440"
  },
  {
    "text": "that configuration it will continue running until things like the endpoints that it's trying to get to are stale",
    "start": "424440",
    "end": "430740"
  },
  {
    "text": "right the config gets stale because no one's updating it and then any certificates that it no longer receives",
    "start": "430740",
    "end": "436080"
  },
  {
    "text": "from sdod so that was the reason why the customer wasn't able to identify the problem for a while especially because",
    "start": "436080",
    "end": "442860"
  },
  {
    "text": "if you're not making any strong strict mtls Communications to other sidecars then it might be a couple of days before",
    "start": "442860",
    "end": "448800"
  },
  {
    "text": "you before you notice a potential problem um you know the solution for all this uh",
    "start": "448800",
    "end": "454800"
  },
  {
    "text": "in your checklist you know obviously make sure that you run all of the stuff that istio tells you to do before and",
    "start": "454800",
    "end": "461460"
  },
  {
    "text": "after an upgrade to make sure all the sidecars are moved over but to also prevent other orphan sidecar problems",
    "start": "461460",
    "end": "467400"
  },
  {
    "text": "there are metrics Exposed on the sidecar side um Envoy cluster manager cluster updated",
    "start": "467400",
    "end": "474060"
  },
  {
    "text": "metric for example or there's a CDS update time and an LDS update time",
    "start": "474060",
    "end": "479099"
  },
  {
    "text": "metric that each side car emits so set up an alert on make sure that you know if that's going past a certain number of",
    "start": "479099",
    "end": "486120"
  },
  {
    "text": "hours without any upgrade you probably haven't have an outage that's that's um that's about to hit your way",
    "start": "486120",
    "end": "494120"
  },
  {
    "text": "perfect so one of our istio support customers this is another example recently endured",
    "start": "497099",
    "end": "504060"
  },
  {
    "text": "a production outage during an extremely busy trading weekend so after further investigation they",
    "start": "504060",
    "end": "511319"
  },
  {
    "text": "determined that all of their virtual Services were missing this is really strange though because their developers",
    "start": "511319",
    "end": "516659"
  },
  {
    "text": "don't have access to delete all the virtual Services across namespaces they should have proper boundaries in place",
    "start": "516659",
    "end": "523380"
  },
  {
    "text": "around their namespaces to prevent this so how did this happen",
    "start": "523380",
    "end": "529560"
  },
  {
    "text": "a lot of the customers that we work with have large environments where they have a platform team that's responsible for",
    "start": "529560",
    "end": "536220"
  },
  {
    "text": "installing platform related things things like istio onto the cluster and then each",
    "start": "536220",
    "end": "541500"
  },
  {
    "text": "individual development team or a tenant you know operates in their own sets of namespaces so when they install this",
    "start": "541500",
    "end": "547680"
  },
  {
    "text": "deal things like the istio control plane and maybe the HTO gateways",
    "start": "547680",
    "end": "552959"
  },
  {
    "text": "um they protected all of those and all of those namespaces from their tenants from being able to modify that's that's",
    "start": "552959",
    "end": "558779"
  },
  {
    "text": "kind of obvious and then they used in our back to make sure that every namespace and every developer that",
    "start": "558779",
    "end": "565560"
  },
  {
    "text": "namespace can create their appropriate resources that they deem that they should be allowed to create what they failed to protect are the cluster scope",
    "start": "565560",
    "end": "573240"
  },
  {
    "text": "ones things like the istio crds not the CRS but the crd itself so what happens",
    "start": "573240",
    "end": "579600"
  },
  {
    "text": "if you delete a crd like the istio virtual service crd all of the CRS get",
    "start": "579600",
    "end": "584940"
  },
  {
    "text": "get deleted so you know this is another checklist item to make sure that you",
    "start": "584940",
    "end": "590519"
  },
  {
    "text": "have you know proper if you're using a multi-tenant environment you you're using the proper kubernetes are back",
    "start": "590519",
    "end": "596820"
  },
  {
    "text": "controls to make sure that uh you're not only protecting the stuff that's inside the namespace and and namespace scope",
    "start": "596820",
    "end": "605160"
  },
  {
    "text": "Etc but you're also protecting things like um things like the crd so just make sure",
    "start": "605160",
    "end": "610920"
  },
  {
    "text": "you you lock down access as much as possible a lot of times what we've seen is that this is not malicious it is",
    "start": "610920",
    "end": "617880"
  },
  {
    "text": "purely um accidental one of the tenants they were couldn't get something working so",
    "start": "617880",
    "end": "623820"
  },
  {
    "text": "instead of accidentally deleting a a CR or crd um you know they delete you know one or",
    "start": "623820",
    "end": "629399"
  },
  {
    "text": "the other without actually entirely understanding what's happening right because they will they'll try anything to try to get something working",
    "start": "629399",
    "end": "635700"
  },
  {
    "text": "especially in a high stress environment so make sure that you have proper checks in place to prevent that from happening",
    "start": "635700",
    "end": "643220"
  },
  {
    "text": "thanks Ram so the next example is traffic hijacking",
    "start": "643260",
    "end": "648480"
  },
  {
    "text": "so for our next case study we worked with a platform team that in production",
    "start": "648480",
    "end": "654360"
  },
  {
    "text": "expected traffic routing to a completely different Upstream service there was no",
    "start": "654360",
    "end": "659579"
  },
  {
    "text": "recent new configuration change in the cluster but the routing Behavior had changed",
    "start": "659579",
    "end": "665100"
  },
  {
    "text": "we simplified the problem down the platform team had a shared Gateway",
    "start": "665100",
    "end": "670140"
  },
  {
    "text": "resource in the istio gateways namespace to be shared across the cluster one of",
    "start": "670140",
    "end": "675839"
  },
  {
    "text": "the team leads we'll call her Iris has a virtual service that routes traffic based on prefix slash app to hit Hollow",
    "start": "675839",
    "end": "683519"
  },
  {
    "text": "World Service sometime in the past Tim from another team had decided to create a virtual",
    "start": "683519",
    "end": "689519"
  },
  {
    "text": "service in Team B namespace which included a route which was Slash app login routing traffic to his service",
    "start": "689519",
    "end": "696740"
  },
  {
    "text": "this didn't impact anything with the original application and they went to production but somewhat randomly the",
    "start": "696740",
    "end": "704640"
  },
  {
    "text": "routing in production changed so by default in istio the configuration",
    "start": "704640",
    "end": "712500"
  },
  {
    "text": "is exported to all namespaces it's not scope so whatever virtual service you create and one namespace is exported to",
    "start": "712500",
    "end": "719279"
  },
  {
    "text": "the other ones unless you explicitly scope it down um and and in a multi-tenant environment",
    "start": "719279",
    "end": "725459"
  },
  {
    "text": "we've often seen this where for a single host there's multiple virtual Services across",
    "start": "725459",
    "end": "731040"
  },
  {
    "text": "different namespaces that that people will use to you know to do their multi-tenancy istio does its best to",
    "start": "731040",
    "end": "738779"
  },
  {
    "text": "merge all of these these routing rules these virtual Services together but you know for the sake of running",
    "start": "738779",
    "end": "744720"
  },
  {
    "text": "into production that ordering is essentially undefined right so when",
    "start": "744720",
    "end": "750000"
  },
  {
    "text": "there's a conflict between two routes it essentially just picks the first one",
    "start": "750000",
    "end": "755519"
  },
  {
    "text": "you know based on a time stamp like whichever was created first gets higher up in the order right same thing for",
    "start": "755519",
    "end": "761579"
  },
  {
    "text": "Capital rules like whatever is created istio picks up first is the one that's there so that's why you can get into",
    "start": "761579",
    "end": "768420"
  },
  {
    "text": "really bad intermittent behavior in this example where you know team a was",
    "start": "768420",
    "end": "774839"
  },
  {
    "text": "running fine team B comes along applies bad config they don't realize that it's",
    "start": "774839",
    "end": "780240"
  },
  {
    "text": "bad because it's not like accepted by by istio sometime in the future maybe in",
    "start": "780240",
    "end": "785579"
  },
  {
    "text": "production the original team a uninstalls and reinstalls their app so",
    "start": "785579",
    "end": "791040"
  },
  {
    "text": "now the timestamp has changed and that bad config or that dormant bad config is",
    "start": "791040",
    "end": "796260"
  },
  {
    "text": "now active right so that's a place where we've often seen get users get tripped up in the middle of production where",
    "start": "796260",
    "end": "802440"
  },
  {
    "text": "istio routing has just changed and they haven't essentially changed any configuration they just changed the",
    "start": "802440",
    "end": "808680"
  },
  {
    "text": "order of when particular resources get applied or when they scale to another cluster one thing when the when timing",
    "start": "808680",
    "end": "814200"
  },
  {
    "text": "is different the solutions for this you know ideally avoid using multiple virtual services",
    "start": "814200",
    "end": "821100"
  },
  {
    "text": "for a single host but that's not always possible depending on how you have your environment architected the second way",
    "start": "821100",
    "end": "827600"
  },
  {
    "text": "is scope down all of your resources your your gateway can scope down exactly what",
    "start": "827600",
    "end": "834959"
  },
  {
    "text": "namespaces it's going to pick up its virtual services from so in the host field you can specify which name spaces",
    "start": "834959",
    "end": "840899"
  },
  {
    "text": "that it's going to pick up that it should be watched to bind to that Gateway same thing for your virtual Services",
    "start": "840899",
    "end": "846899"
  },
  {
    "text": "make sure you have your export to Fields set in all of your virtual services so that you're exporting things to the",
    "start": "846899",
    "end": "854399"
  },
  {
    "text": "right gateways namespace and not the you know not your devs test staging for",
    "start": "854399",
    "end": "859500"
  },
  {
    "text": "example by accident and then istiocado analyze might catch some of these things but you know we've seen a lot of cases",
    "start": "859500",
    "end": "866100"
  },
  {
    "text": "where it doesn't just because of the way the complexity for of rules ordering and",
    "start": "866100",
    "end": "871440"
  },
  {
    "text": "then the last piece of advice is run istiocado proxy config routes on your",
    "start": "871440",
    "end": "878160"
  },
  {
    "text": "gateway and it shows you all the various routes that are bound to that Gateway and then from there you can see if you",
    "start": "878160",
    "end": "885480"
  },
  {
    "text": "have multiple routes going to um like different destinations that you did not intend that to happen so before",
    "start": "885480",
    "end": "892500"
  },
  {
    "text": "going to production you know run your istiocado proxy routes to look at the configuration of your steeringress",
    "start": "892500",
    "end": "898740"
  },
  {
    "text": "gateway and and make sure like that looks good",
    "start": "898740",
    "end": "903380"
  },
  {
    "text": "excellent so for our next case study we had a customer noticing a high number in",
    "start": "905160",
    "end": "910800"
  },
  {
    "text": "Cross Zone traffic charges from their cloud provider after digging a little deeper we noticed",
    "start": "910800",
    "end": "916680"
  },
  {
    "text": "a lot of traffic between side cars in one zone connecting to sgod running in",
    "start": "916680",
    "end": "922019"
  },
  {
    "text": "another region Zone with a lot a lot of chatter this is not something that people typically think about but with",
    "start": "922019",
    "end": "928980"
  },
  {
    "text": "istio running in your environment this might become a concern the customer asked us if there was",
    "start": "928980",
    "end": "935100"
  },
  {
    "text": "something we could do to help them reduce this cost yeah if you take a step back the premise of",
    "start": "935100",
    "end": "942420"
  },
  {
    "text": "this problem is that again by default every sidecar every mesh service",
    "start": "942420",
    "end": "950180"
  },
  {
    "text": "needs to know about every other mesh service so if anything changes in your mesh istio-d has to take that updated",
    "start": "950180",
    "end": "957060"
  },
  {
    "text": "information and blast it to every other Sidecar and and that couldn't be scoped down but",
    "start": "957060",
    "end": "964380"
  },
  {
    "text": "a lot of users don't scope it down this is what we've seen is that it's it's it's wide open so istio D is doing a lot",
    "start": "964380",
    "end": "970800"
  },
  {
    "text": "to kind of orchestrate everything and this becomes costly we know it's costly at like at a resource level but it's",
    "start": "970800",
    "end": "977100"
  },
  {
    "text": "also costly at a networking level especially when you have these multi-zone clusters where you have",
    "start": "977100",
    "end": "983339"
  },
  {
    "text": "sidecars spanned across these availability zones and then your istio D the piece that all these sidecars are",
    "start": "983339",
    "end": "989519"
  },
  {
    "text": "connected to are not necessarily in the same zone so the solutions for this you know make sure that you're scaling up",
    "start": "989519",
    "end": "996300"
  },
  {
    "text": "your istod to match your environment make sure you're running multiple istods you have the proper Affinity set so that",
    "start": "996300",
    "end": "1003259"
  },
  {
    "text": "they're scattered across your nodes and across your zones you can take advantage of uh topology topology aware routing",
    "start": "1003259",
    "end": "1010279"
  },
  {
    "text": "feature in kubernetes to make sure that when sidecars connect to istod they're",
    "start": "1010279",
    "end": "1015800"
  },
  {
    "text": "connecting to their closest available sdod so that you reduce that cross Zone",
    "start": "1015800",
    "end": "1021320"
  },
  {
    "text": "um uh and that cross Zone routing and chatter so s2d is doing a lot right and you can",
    "start": "1021320",
    "end": "1028819"
  },
  {
    "text": "look at what istiod is doing the amount of information it's sending to every",
    "start": "1028819",
    "end": "1034100"
  },
  {
    "text": "single um sidecar right to every single one of",
    "start": "1034100",
    "end": "1039260"
  },
  {
    "text": "your workloads so from a workload perspective just like you have metrics to to observe how your application is",
    "start": "1039260",
    "end": "1046220"
  },
  {
    "text": "doing you should also observe the amount of configuration that istod is sending",
    "start": "1046220",
    "end": "1051440"
  },
  {
    "text": "to your workload and if and if this is getting too high or if you have a few",
    "start": "1051440",
    "end": "1056600"
  },
  {
    "text": "that are really high then you know that those are the ones you should probably tackle first and create your istio",
    "start": "1056600",
    "end": "1062419"
  },
  {
    "text": "sidecar resources to scope things down properly so that istio-d is not sending",
    "start": "1062419",
    "end": "1068360"
  },
  {
    "text": "um that much data to every one of your sidecars so that's how much data so next",
    "start": "1068360",
    "end": "1074720"
  },
  {
    "text": "you should also monitor how often and how long it's taking for istiod to push",
    "start": "1074720",
    "end": "1082100"
  },
  {
    "text": "this information to the sidecars typically a lot of users monitor pilot",
    "start": "1082100",
    "end": "1089000"
  },
  {
    "text": "XTS push time metric to see how long it's taking for metrics to get from the control plane to sidecar but it's it's",
    "start": "1089000",
    "end": "1095900"
  },
  {
    "text": "worthwhile in production to understand that there's actually more that goes into the istio D XDS pushes and the Airbnb",
    "start": "1095900",
    "end": "1104660"
  },
  {
    "text": "did a great blog and this diagram is straight from that blog and I put that link to that at the bottom but you know",
    "start": "1104660",
    "end": "1110600"
  },
  {
    "text": "essentially whenever there's any change in the environment know that it gets that that change gets",
    "start": "1110600",
    "end": "1118760"
  },
  {
    "text": "created um a push request gets created and that push request stays in um a debounce time",
    "start": "1118760",
    "end": "1127220"
  },
  {
    "text": "period for a little while to make sure it gets all of the right information and we're waiting for all",
    "start": "1127220",
    "end": "1133100"
  },
  {
    "text": "the merges and then once that period is passed then istio D will pick up that",
    "start": "1133100",
    "end": "1138140"
  },
  {
    "text": "push request it gets added to the push queue and then XDS is calculated and then it's being sent so there's multiple",
    "start": "1138140",
    "end": "1145100"
  },
  {
    "text": "steps in this process and when you're running is still in production",
    "start": "1145100",
    "end": "1150200"
  },
  {
    "text": "make sure you're you're you're graphing every single one of those metrics so that you can tune things properly all of",
    "start": "1150200",
    "end": "1157820"
  },
  {
    "text": "those various periods and the number of concurrent pushes Etc they're all",
    "start": "1157820",
    "end": "1163880"
  },
  {
    "text": "configurable with an environment variable and in production you might tune it differently than than in your Dev",
    "start": "1163880",
    "end": "1170900"
  },
  {
    "text": "environment for example in production there's not as much configuration changes that's happening you're not",
    "start": "1170900",
    "end": "1177500"
  },
  {
    "text": "constantly applying new config but what might change are endpoint information the IPS of of your pods as your pods",
    "start": "1177500",
    "end": "1185419"
  },
  {
    "text": "come up and down that information you want to get to the other services as",
    "start": "1185419",
    "end": "1191360"
  },
  {
    "text": "fast as possible right because you don't want any downtime in production even the",
    "start": "1191360",
    "end": "1196640"
  },
  {
    "text": "slightest so for that you are going to reduce the debounce period to make sure that any",
    "start": "1196640",
    "end": "1202340"
  },
  {
    "text": "update gets sent quickly to the other sidecars and you can also increase your",
    "start": "1202340",
    "end": "1207440"
  },
  {
    "text": "your push throttle you don't want to do that in your Dev environment where you have a lot of configurations happening because you'll",
    "start": "1207440",
    "end": "1213860"
  },
  {
    "text": "just bottleneck um istio-d trying to like keep up with all these config changes that are",
    "start": "1213860",
    "end": "1219080"
  },
  {
    "text": "happening so for that you might you know set a higher debounce period maybe 10 seconds instead of for production you",
    "start": "1219080",
    "end": "1225320"
  },
  {
    "text": "might do 100 milliseconds",
    "start": "1225320",
    "end": "1229299"
  },
  {
    "text": "thanks Rob so the next example is what we call the bypass sidecar and this",
    "start": "1231260",
    "end": "1237559"
  },
  {
    "text": "example comes from a large consulting company that we were working with who had already built a highly secure app on",
    "start": "1237559",
    "end": "1244160"
  },
  {
    "text": "top of istio so they asked us as the istio experts to",
    "start": "1244160",
    "end": "1250160"
  },
  {
    "text": "help them with production Readiness before go live so after looking at their",
    "start": "1250160",
    "end": "1255260"
  },
  {
    "text": "installation we noticed a lot of unencrypted traffic between workloads and also that auth policies were",
    "start": "1255260",
    "end": "1262520"
  },
  {
    "text": "ineffective they asked us if we could help identify what the root cause might be",
    "start": "1262520",
    "end": "1268460"
  },
  {
    "text": "yeah so this is a case this is a case where a platform team installed istio they thought they installed the rate like",
    "start": "1268460",
    "end": "1274160"
  },
  {
    "text": "um restriction policies and they just expected everything to be secure right",
    "start": "1274160",
    "end": "1279559"
  },
  {
    "text": "um that was not the case because developers found a way to go around the sidecar right if it I don't know if it's",
    "start": "1279559",
    "end": "1285919"
  },
  {
    "text": "malicious or they were just trying to get something working and they forgot about it but with uh in developers can",
    "start": "1285919",
    "end": "1293179"
  },
  {
    "text": "add annotations to their pods like exclude outbound IP ports or IP ranges",
    "start": "1293179",
    "end": "1298880"
  },
  {
    "text": "or they can add annotations to not even have the sidecar come up there's various things that they can do to bypass the",
    "start": "1298880",
    "end": "1305299"
  },
  {
    "text": "istio sidecar the production checklist solution for this is to make sure you're using something like oppa to to ensure",
    "start": "1305299",
    "end": "1313100"
  },
  {
    "text": "that these annotations are not there in your environment and developers are not relying on on these type of annotations",
    "start": "1313100",
    "end": "1319940"
  },
  {
    "text": "to get around the problem perfect",
    "start": "1319940",
    "end": "1325039"
  },
  {
    "text": "so similar to our last example I recently chatted with another istio adopter who had issues with their SQL",
    "start": "1325039",
    "end": "1331400"
  },
  {
    "text": "Server RDS database running on AWS as all relational databases are it had",
    "start": "1331400",
    "end": "1337460"
  },
  {
    "text": "become a massive bottleneck basically all their microservices running an eks at uncontrolled access to stored",
    "start": "1337460",
    "end": "1343940"
  },
  {
    "text": "procedures and functions causing database records to lock up this wild west was tolerated until a major outage",
    "start": "1343940",
    "end": "1351320"
  },
  {
    "text": "occurred Bringing Down the entire platform how this is a common problem that we've",
    "start": "1351320",
    "end": "1357080"
  },
  {
    "text": "seen is that people don't think about egress controls at all until until something bad happens right like egress",
    "start": "1357080",
    "end": "1364039"
  },
  {
    "text": "is just not even a concern every developer every microservice talks to whatever",
    "start": "1364039",
    "end": "1370100"
  },
  {
    "text": "external endpoint that that it has access to and that continues to go on until something bad happens maybe that",
    "start": "1370100",
    "end": "1376820"
  },
  {
    "text": "external endpoint that a lot of services depend on now has a rate limit set on it and now it's and now it's restricting",
    "start": "1376820",
    "end": "1383480"
  },
  {
    "text": "further connections and then you're in a scramble trying to figure out which microservice is hammering this external",
    "start": "1383480",
    "end": "1388820"
  },
  {
    "text": "service and you don't have controls in place to restrict who has access to what and add your own rate limit policies for",
    "start": "1388820",
    "end": "1395600"
  },
  {
    "text": "example to it or if the URL changes for this external service to be able to seamlessly apply it to your entire",
    "start": "1395600",
    "end": "1402559"
  },
  {
    "text": "environment so um the production checklist for this one is the leverage istio's egress controls",
    "start": "1402559",
    "end": "1409760"
  },
  {
    "text": "you know whether that's as simple as you're just creating service entry objects and you have history istio",
    "start": "1409760",
    "end": "1416659"
  },
  {
    "text": "registry only set you know that's a good first step towards it but you know the the right final step towards it would be",
    "start": "1416659",
    "end": "1423740"
  },
  {
    "text": "to leverage an egress Gateway running on dedicated nodes where you have full control over how traffic leaves your",
    "start": "1423740",
    "end": "1431059"
  },
  {
    "text": "system the same way you have an Ingress Gateway where you can control secure observe traffic coming in you need the",
    "start": "1431059",
    "end": "1438320"
  },
  {
    "text": "same things for your external egress as well don't wait until it's it's too late for you to apply those policies",
    "start": "1438320",
    "end": "1446720"
  },
  {
    "text": "okay and here we have another important concept which in fact is nothing new it",
    "start": "1446720",
    "end": "1451880"
  },
  {
    "text": "dates back to the Middle Ages and we call it defense in depth so if we look at the castle remote system the way that",
    "start": "1451880",
    "end": "1458360"
  },
  {
    "text": "works is we defend against any particular attack using several independent methods in other words we",
    "start": "1458360",
    "end": "1464659"
  },
  {
    "text": "have layering tactics in the Castle's case the moat is the first line of defense preventing attack attackers from",
    "start": "1464659",
    "end": "1471260"
  },
  {
    "text": "getting too close then we have the overhanging holes platforms Etc built",
    "start": "1471260",
    "end": "1476299"
  },
  {
    "text": "into the castle so those inside could hurl items at the attacker below the question is how can we apply the",
    "start": "1476299",
    "end": "1482720"
  },
  {
    "text": "same Concepts to networking and can istio help yeah I mean everything we've been",
    "start": "1482720",
    "end": "1488720"
  },
  {
    "text": "talking about kind of builds up to this um essentially you want a layered approach right I mean istio provides a",
    "start": "1488720",
    "end": "1494480"
  },
  {
    "text": "lot of security for your applications but as you've seen these were there's",
    "start": "1494480",
    "end": "1500179"
  },
  {
    "text": "there are ways to get around it um there are there are there are times",
    "start": "1500179",
    "end": "1505280"
  },
  {
    "text": "when bad configuration causes a hole through istio and when that does happen",
    "start": "1505280",
    "end": "1510559"
  },
  {
    "text": "make sure you have another line of defense and you can do that by leveraging kubernetes Network policies",
    "start": "1510559",
    "end": "1518240"
  },
  {
    "text": "um just you know around your nodes or around your name spaces just to have it as a backup as a layer three layer four",
    "start": "1518240",
    "end": "1524500"
  },
  {
    "text": "backup and then also leverage egress gateways to make sure that traffic is",
    "start": "1524500",
    "end": "1530059"
  },
  {
    "text": "being funneled through the right right nodes and you have controls in place to make sure that if you wanted to check",
    "start": "1530059",
    "end": "1536659"
  },
  {
    "text": "cut things off you can do that running short on time so no worries yeah",
    "start": "1536659",
    "end": "1543559"
  },
  {
    "text": "so this is the last one we've helped we've helped many istio customers with intermittent problems they hit during",
    "start": "1543559",
    "end": "1548840"
  },
  {
    "text": "pod startup looking at the application container logs we saw that it was related to not being able to talk to the",
    "start": "1548840",
    "end": "1555200"
  },
  {
    "text": "network if the application relies on the network to start properly and it doesn't have retries resiliency built in then it",
    "start": "1555200",
    "end": "1561860"
  },
  {
    "text": "results in the Pod failing the start and crash loop back off this this is contain a race condition whereby the istio",
    "start": "1561860",
    "end": "1569000"
  },
  {
    "text": "sidecar fails to start in time to serve Network requests from the app yeah like in production you want to get rid of all",
    "start": "1569000",
    "end": "1575600"
  },
  {
    "text": "these race conditions as much as possible and have very everything be very deterministic and and to do that",
    "start": "1575600",
    "end": "1581179"
  },
  {
    "text": "you have to understand how your istio startup process is working for every one of your services when a pod comes up by",
    "start": "1581179",
    "end": "1587840"
  },
  {
    "text": "default it's your init container has to run first to do its iptables rerouting",
    "start": "1587840",
    "end": "1593120"
  },
  {
    "text": "and then once that's done it's your proxy pod has to come up istio proxy container has to come up and then your",
    "start": "1593120",
    "end": "1600140"
  },
  {
    "text": "application pod has everything the network set up so that it's able to make",
    "start": "1600140",
    "end": "1605840"
  },
  {
    "text": "its um its i o Communications um a lot of problems where we've seen is",
    "start": "1605840",
    "end": "1611539"
  },
  {
    "text": "you know customers have their own init containers that have a race condition with istio in it container they see",
    "start": "1611539",
    "end": "1617539"
  },
  {
    "text": "different Behavior whether it runs before istio's in a container or after or we've also seen where the customer's",
    "start": "1617539",
    "end": "1626120"
  },
  {
    "text": "container starts up faster than istio proxy sometimes in production but in",
    "start": "1626120",
    "end": "1631580"
  },
  {
    "text": "their Dev environment it didn't start up faster so you can run into these problems where speed makes a difference",
    "start": "1631580",
    "end": "1638179"
  },
  {
    "text": "on how your application behaves um we're hoping like you know ambient deployment pattern will solve this",
    "start": "1638179",
    "end": "1645020"
  },
  {
    "text": "particular set of problems cleanly without you having to worry about it but until then make sure that you know avoid",
    "start": "1645020",
    "end": "1651919"
  },
  {
    "text": "using init containers if possible use regular containers so that it always runs after the init container you know",
    "start": "1651919",
    "end": "1658159"
  },
  {
    "text": "use Eco cni to make sure that maybe you if you don't need the init container to do the to do the redirection you have",
    "start": "1658159",
    "end": "1665360"
  },
  {
    "text": "that set up and then let leverage Flags like hold application into istio proxy",
    "start": "1665360",
    "end": "1672380"
  },
  {
    "text": "starts there's an environment variable that gives you control over exactly when your pod comes up in relation to the",
    "start": "1672380",
    "end": "1679100"
  },
  {
    "text": "istio proxy pod cool so um I know we covered you know a",
    "start": "1679100",
    "end": "1685279"
  },
  {
    "text": "few different set of use cases but they were meant to be so that you can build your own production checklist to cover",
    "start": "1685279",
    "end": "1691400"
  },
  {
    "text": "those types of issues everything that solo field engineers and our customer",
    "start": "1691400",
    "end": "1696440"
  },
  {
    "text": "success Engineers have hit with our customers over the last like three to four years of us do helping customers",
    "start": "1696440",
    "end": "1703580"
  },
  {
    "text": "with istio we've we've collected all that feedback and we've built analyzers",
    "start": "1703580",
    "end": "1709520"
  },
  {
    "text": "like automatic analyzers to check for these best practices these are not just like static config analyzers but also",
    "start": "1709520",
    "end": "1716600"
  },
  {
    "text": "best practice deployment level analyzers and we built it into our glue core",
    "start": "1716600",
    "end": "1721760"
  },
  {
    "text": "product which is essentially just sits on top of your existing istio and gives you this insights into your environment",
    "start": "1721760",
    "end": "1728779"
  },
  {
    "text": "it does like life cycle management and helps the operations team make sure that",
    "start": "1728779",
    "end": "1733880"
  },
  {
    "text": "they're running istio smoothly upgrade istio smoothly make sure they have the right checks in place Etc and that",
    "start": "1733880",
    "end": "1740299"
  },
  {
    "text": "management plane will also provide in insights and dashboards Etc so that was the result of all of our work is that we",
    "start": "1740299",
    "end": "1746600"
  },
  {
    "text": "put into building this uh this analyzer solution um anyway if you have any questions you",
    "start": "1746600",
    "end": "1753559"
  },
  {
    "text": "know please you know reach out to to Simon and I um you can find us on the uh on the",
    "start": "1753559",
    "end": "1758720"
  },
  {
    "text": "istio on the istio slack or um you can reach us at the glue um solo i o slack",
    "start": "1758720",
    "end": "1765500"
  },
  {
    "text": "Channel my email address is Ram at solo.io and Simon what's your email address",
    "start": "1765500",
    "end": "1771500"
  },
  {
    "text": "it's uh simon.green at solo.io",
    "start": "1771500",
    "end": "1776500"
  },
  {
    "text": "awesome so it doesn't look like there's any questions in the chat so",
    "start": "1784640",
    "end": "1789919"
  },
  {
    "text": "um I hope you found that session useful again you know if you have any questions please feel free to um to reach out to",
    "start": "1789919",
    "end": "1795500"
  },
  {
    "text": "us have a great rest of your conference everyone thanks everyone",
    "start": "1795500",
    "end": "1801820"
  }
]