[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "um hey everyone welcome to this webinar on a Greener costeffective cloud with serverless web assembly um my name is",
    "start": "2720",
    "end": "10200"
  },
  {
    "text": "soan maheswar I'm a Dev Advocate at firon and with me is Kate Kate Hi",
    "start": "10200",
    "end": "15679"
  },
  {
    "text": "everyone my name is Kate I am a software engineer here at firon so U today we are going to talk to",
    "start": "15679",
    "end": "23000"
  },
  {
    "text": "you about a Greener cost-effective cloud with serverless web assembly now if you're not familiar with the concept of",
    "start": "23000",
    "end": "29359"
  },
  {
    "text": "either seress or web assembly well that's what we're here to talk to you about today so first first things first",
    "start": "29359",
    "end": "35760"
  },
  {
    "text": "let's actually talk about sustainability in Tech and essentially the green software Foundation has defined this",
    "start": "35760",
    "end": "42280"
  },
  {
    "start": "38000",
    "end": "154000"
  },
  {
    "text": "term called software carbon intensity and how they Define it is C per R now",
    "start": "42280",
    "end": "49039"
  },
  {
    "text": "what C is C is carbon and now this is a rate right it is not a finite or a um",
    "start": "49039",
    "end": "55879"
  },
  {
    "text": "entire value of the carbon intensity of your workload in the cloud but it is a",
    "start": "55879",
    "end": "61120"
  },
  {
    "text": "rate of which this actually happens so for instance if you're a company that has an API well this is the rate at",
    "start": "61120",
    "end": "67759"
  },
  {
    "text": "which um you know Carbon is being consumed by your workload now the carbon",
    "start": "67759",
    "end": "73200"
  },
  {
    "text": "in itself U that formula can be expanded to O + m per R right uh o stands for",
    "start": "73200",
    "end": "81320"
  },
  {
    "text": "operational emissions now these are based on the emissions caused by the energy consumption of your workload and",
    "start": "81320",
    "end": "88360"
  },
  {
    "text": "M is something called the embodied emissions and this essentially is the emissions of the hardware really needed",
    "start": "88360",
    "end": "95040"
  },
  {
    "text": "to operate a software system such as the one that your workload is actually running",
    "start": "95040",
    "end": "101960"
  },
  {
    "text": "now this is an important formula and an important thing because when it comes to",
    "start": "101960",
    "end": "107040"
  },
  {
    "text": "sustainability in technology we have to have some metrics to really sort of determine whether your software is",
    "start": "107040",
    "end": "114240"
  },
  {
    "text": "sustainable or not or whether over a period of time there is a reduction in the carbon footprint of of your software",
    "start": "114240",
    "end": "121560"
  },
  {
    "text": "why this actually is important well there's a recent study that showed that the software industry is responsible for",
    "start": "121560",
    "end": "128160"
  },
  {
    "text": "about 3% of carbon emissions in the world which is actually equivalent to",
    "start": "128160",
    "end": "133280"
  },
  {
    "text": "that of the airline industry so it is a fairly large number and in today's terms",
    "start": "133280",
    "end": "139239"
  },
  {
    "text": "with things like climate change sustainability and Tech play such an important role so today we here here to",
    "start": "139239",
    "end": "144920"
  },
  {
    "text": "talk to you about how serverless and web assembly and both um can help with you",
    "start": "144920",
    "end": "150200"
  },
  {
    "text": "know making your workload a little more Greener and cost effective as well now the green software Foundation actually",
    "start": "150200",
    "end": "157160"
  },
  {
    "start": "154000",
    "end": "249000"
  },
  {
    "text": "uh defines three actions that you and me can take uh as people who create",
    "start": "157160",
    "end": "162200"
  },
  {
    "text": "software to make your software a little bit more sustainable the first one is",
    "start": "162200",
    "end": "167640"
  },
  {
    "text": "Energy Efficiency which essentially means making your software use less electricity to perform the same function",
    "start": "167640",
    "end": "175840"
  },
  {
    "text": "second one is Hardware efficiency where you make your software you use fewer physical resources I.E Hardware to",
    "start": "175840",
    "end": "183480"
  },
  {
    "text": "perform the same function and the third one is something called carbon awareness",
    "start": "183480",
    "end": "188920"
  },
  {
    "text": "where you're essentially time shifting or region shifting software computation",
    "start": "188920",
    "end": "194319"
  },
  {
    "text": "that takes advantage of cleaner more renewable or lower carbon sources of",
    "start": "194319",
    "end": "200280"
  },
  {
    "text": "electricity what this essentially means is when you're choosing a cloud provider for instance if you choose something",
    "start": "200280",
    "end": "206599"
  },
  {
    "text": "that's in the US the the carbon and the sources of power for the data center in",
    "start": "206599",
    "end": "212080"
  },
  {
    "text": "the US might actually differ to the ones in say a part of Asia so just by",
    "start": "212080",
    "end": "217720"
  },
  {
    "text": "Shifting the region where your workload is deployed you can be more you know um carbon or less carbon intensitive and",
    "start": "217720",
    "end": "225080"
  },
  {
    "text": "more carbon aware now the reason we're showing you this particular slide is",
    "start": "225080",
    "end": "230120"
  },
  {
    "text": "that we want you to take a look at everything else after the slide in the lens of either en Energy Efficiency or",
    "start": "230120",
    "end": "237640"
  },
  {
    "text": "Hardware efficiency right and we'll talk talk about how serverless web assembly would make you both energy efficient and",
    "start": "237640",
    "end": "244280"
  },
  {
    "text": "Hardware efficient now if you're curious about what web assembly actually is few",
    "start": "244280",
    "end": "249640"
  },
  {
    "start": "249000",
    "end": "315000"
  },
  {
    "text": "things you need to know one is and this is the boring answer it is just another bite code format it's designed as a",
    "start": "249640",
    "end": "257079"
  },
  {
    "text": "portable compilation Target um essentially what happened was sometime in the mid 2010s a bunch of companies",
    "start": "257079",
    "end": "263880"
  },
  {
    "text": "got together and they came up with this portable format that could run in the browser the idea was you could write",
    "start": "263880",
    "end": "271199"
  },
  {
    "text": "code in any language it would compile Two web assembly that would run in the browser the idea also was uh you could",
    "start": "271199",
    "end": "279160"
  },
  {
    "text": "write it and it would compile once and that compile program could run on any",
    "start": "279160",
    "end": "284240"
  },
  {
    "text": "number of targets now this could be different architectures like arm Intel um whatever it could mean different os's",
    "start": "284240",
    "end": "291960"
  },
  {
    "text": "like Windows Mac Linux it could also mean things like kubernetes and cloud and all of that right so so the idea",
    "start": "291960",
    "end": "298479"
  },
  {
    "text": "really was to compile at once and then run that code anywhere and you might hear me refer to",
    "start": "298479",
    "end": "304199"
  },
  {
    "text": "this as wasum from time to time uh it is just another name for it right so web",
    "start": "304199",
    "end": "309600"
  },
  {
    "text": "assembly wasum they refer to essentially the same thing so how does web assembly Really",
    "start": "309600",
    "end": "315360"
  },
  {
    "start": "315000",
    "end": "378000"
  },
  {
    "text": "Work Well you write code like I said in any language this could be in Python rust typescript and there is this",
    "start": "315360",
    "end": "322199"
  },
  {
    "text": "compiles to a wasum format right you will get awom file and this wasm file",
    "start": "322199",
    "end": "328319"
  },
  {
    "text": "essentially can be run in any place that has a runtime that supports it uh so in",
    "start": "328319",
    "end": "334080"
  },
  {
    "text": "a sense quote unquote a virtual machine that can support a wasum runtime and",
    "start": "334080",
    "end": "340039"
  },
  {
    "text": "conceptually yes this can be similar to how the idea of a jvm or a Java virtual",
    "start": "340039",
    "end": "345520"
  },
  {
    "text": "machine ran uh the one thing that you do need to know is it it is security sandboxed by default unlike unlike the",
    "start": "345520",
    "end": "352600"
  },
  {
    "text": "original idea for a jvm so by default wasum files have a security sandbox",
    "start": "352600",
    "end": "357680"
  },
  {
    "text": "which means that nothing can access it unless you give it explicit permissions",
    "start": "357680",
    "end": "363120"
  },
  {
    "text": "to do so now the thing is all the idea behind web assembly was the fact that",
    "start": "363120",
    "end": "369039"
  },
  {
    "text": "you know you could write it in multiple languages it was a portable compilation Target it was security sandboxed all of",
    "start": "369039",
    "end": "375520"
  },
  {
    "text": "this made it really good for you to run it in the browser but it also means it's",
    "start": "375520",
    "end": "381039"
  },
  {
    "start": "378000",
    "end": "434000"
  },
  {
    "text": "actually great to run outside of the browser potentially on the server side",
    "start": "381039",
    "end": "386080"
  },
  {
    "text": "so in around I think 201819 um there was this new thing called Wy that was developed which is",
    "start": "386080",
    "end": "392160"
  },
  {
    "text": "web assembly system interface for something to run in the browser you need access to things like",
    "start": "392160",
    "end": "398919"
  },
  {
    "text": "files uh operating system features and sockets and clocks and random number",
    "start": "398919",
    "end": "404080"
  },
  {
    "text": "generators this didn't exist prior to 2019 but once wasi actually was",
    "start": "404080",
    "end": "409680"
  },
  {
    "text": "implemented you could actually run web assembly on the server side and this opened up a whole new world of",
    "start": "409680",
    "end": "415800"
  },
  {
    "text": "possibilities because suddenly web assembly was independent of browsers it it didn't need a JavaScript",
    "start": "415800",
    "end": "422319"
  },
  {
    "text": "API or a web API and wasi essentially extended wm's sandboxing to include",
    "start": "422319",
    "end": "428919"
  },
  {
    "text": "input output what this essentially means is when you run web assembly on the server",
    "start": "428919",
    "end": "434800"
  },
  {
    "start": "434000",
    "end": "569000"
  },
  {
    "text": "side there are things that actually make it really effective um and these are the four things we think that make web",
    "start": "434800",
    "end": "441280"
  },
  {
    "text": "assembly ideal for you to run it on the server side the first one is binary size",
    "start": "441280",
    "end": "447360"
  },
  {
    "text": "right and again with the lens of of Energy Efficiency and sustainability things like binary size make such a big",
    "start": "447360",
    "end": "454120"
  },
  {
    "text": "difference when you're doing U software at scale when you're deploying software to like millions of users or to like you",
    "start": "454120",
    "end": "460520"
  },
  {
    "text": "know um thousands of applications reducing your binary size makes such a huge difference and just to give you a",
    "start": "460520",
    "end": "467639"
  },
  {
    "text": "benchmark a simple rust hello world written you know using web assembly is",
    "start": "467639",
    "end": "473120"
  },
  {
    "text": "only about 2 MB and if you compile it ahead of time to assembly level code you",
    "start": "473120",
    "end": "478680"
  },
  {
    "text": "know when you know know what um operating system and you know the details beforehand you can actually",
    "start": "478680",
    "end": "484120"
  },
  {
    "text": "reduce that to around 300 KB which again is a very small file um if you extend",
    "start": "484120",
    "end": "491159"
  },
  {
    "text": "that to spin which is an open source framework for writing web assembly uh",
    "start": "491159",
    "end": "496280"
  },
  {
    "text": "you can do a simple HTTP API app with a 2.3 MB just in time compilation or a 1.1",
    "start": "496280",
    "end": "503400"
  },
  {
    "text": "MB ahead of time compilation so again really tiny tiny binary sizes which",
    "start": "503400",
    "end": "508599"
  },
  {
    "text": "again is more energy efficient the the trade-off is the startup time where the startup time uh",
    "start": "508599",
    "end": "516240"
  },
  {
    "text": "is comparable with code that is compiled natively uh in a recent Benchmark we saw that it's about only 2 and 2.3x lower",
    "start": "516240",
    "end": "523800"
  },
  {
    "text": "than um a startup time for a native code the other good thing is it's completely",
    "start": "523800",
    "end": "529839"
  },
  {
    "text": "portable so you can build the code once into wasm file and run that anywhere and",
    "start": "529839",
    "end": "535200"
  },
  {
    "text": "that same build Works across different operating systems and different platforms architectures as well and like",
    "start": "535200",
    "end": "541839"
  },
  {
    "text": "I mentioned the default security sandbox applies to any BM app so um it is only a",
    "start": "541839",
    "end": "548440"
  },
  {
    "text": "capability based security model where you explicitly have to give your app permissions for other files or anything",
    "start": "548440",
    "end": "555600"
  },
  {
    "text": "to access it so even if you're writing a HTTP API you can say that only this particular URL or this particular HTTP",
    "start": "555600",
    "end": "563240"
  },
  {
    "text": "API can access your particular web assembly component just to give you a visual comp",
    "start": "563240",
    "end": "570600"
  },
  {
    "start": "569000",
    "end": "614000"
  },
  {
    "text": "comparison of how a web assembly file would look in comparison to say a Docker file we did a benchmark where we took a",
    "start": "570600",
    "end": "578120"
  },
  {
    "text": "simple python flask app and this is what the docker file looked like in terms of",
    "start": "578120",
    "end": "583279"
  },
  {
    "text": "size and this is what it look like in terms of a spin app right and it it is",
    "start": "583279",
    "end": "588680"
  },
  {
    "text": "it is a fair difference essentially we saw a difference from 23 MV to 550 kiloby and that is a",
    "start": "588680",
    "end": "597519"
  },
  {
    "text": "significant difference again again in the lens of being more energy efficient with writing your code um I can maybe",
    "start": "597519",
    "end": "605480"
  },
  {
    "text": "just show you a quick demo of how spin would work so I'm going to open my terminal here uh spin like I",
    "start": "605480",
    "end": "612399"
  },
  {
    "text": "said me is it is a developer tool for building web assembly microservices and",
    "start": "612399",
    "end": "618360"
  },
  {
    "text": "applications um it's hosted on GitHub if you go to github.com foron spin",
    "start": "618360",
    "end": "624000"
  },
  {
    "text": "completely open source so feel free to contribute and join in the discussions U I can show you a quick demo of um how",
    "start": "624000",
    "end": "630560"
  },
  {
    "text": "spin actually works the developer experience basically boils down to three main commands I can do a spin new and",
    "start": "630560",
    "end": "638880"
  },
  {
    "text": "essentially this gives me a list of pre-existing templates that I can use to get started very quickly I can maybe",
    "start": "638880",
    "end": "645760"
  },
  {
    "text": "just choose rust and as you can see there are different languages that you can actually write code in so I will",
    "start": "645760",
    "end": "651839"
  },
  {
    "text": "choose rust and I will call it webinar demo because you know it is a webinar",
    "start": "651839",
    "end": "657480"
  },
  {
    "text": "and this is a demo description uh you can choose a path that would trigger this particular spin app in this",
    "start": "657480",
    "end": "664880"
  },
  {
    "text": "case I'm just going to give it slash which means uh any request to this app will trigger it and um yeah let me",
    "start": "664880",
    "end": "672519"
  },
  {
    "text": "just webin our demo and this opens up my",
    "start": "672519",
    "end": "677839"
  },
  {
    "text": "vs code and I can just quickly show you how this looks so essentially every spin app has a manifest file which uh",
    "start": "677839",
    "end": "686320"
  },
  {
    "text": "mentions all the components that are in it and it has uh source code and I can actually say hello cncf here and we can",
    "start": "686320",
    "end": "694399"
  },
  {
    "text": "perhaps run the app all I have to do is a spin build I did say there were three commands so this is oh sorry I need to",
    "start": "694399",
    "end": "701600"
  },
  {
    "text": "CD into thing and just do spin build and",
    "start": "701600",
    "end": "706800"
  },
  {
    "text": "this essentially builds my app and I'm going to use my third command which is spin up which will",
    "start": "706800",
    "end": "714320"
  },
  {
    "text": "actually run it on local host for me to test the app out so so as soon as this",
    "start": "714320",
    "end": "719800"
  },
  {
    "text": "is built I'm just going to do spin up and oh I already have something",
    "start": "719800",
    "end": "725959"
  },
  {
    "text": "running on this so I'm just going to do it again spin up and as you can",
    "start": "725959",
    "end": "731600"
  },
  {
    "text": "see I'm just going to open this in a browser",
    "start": "731600",
    "end": "738279"
  },
  {
    "text": "window yeah you can see it here it says hello cncf right and that was pretty",
    "start": "739560",
    "end": "744920"
  },
  {
    "text": "much how spin works and um we can actually look at this file which",
    "start": "744920",
    "end": "753360"
  },
  {
    "text": "is yeah again fairly small uh you can see the source code uh the wasum file is",
    "start": "753360",
    "end": "760440"
  },
  {
    "text": "in the Target folder here oh I think it is in this folder right here minus L there",
    "start": "760440",
    "end": "769680"
  },
  {
    "text": "we go um oh no it's in the release folder my bad yes minus L yeah you can see the the",
    "start": "769680",
    "end": "779040"
  },
  {
    "text": "wasm file is just about 2 MB right and again looking at it in the length of um",
    "start": "779040",
    "end": "786360"
  },
  {
    "text": "being more energy efficient small binary size for our file so we spoke about the",
    "start": "786360",
    "end": "793600"
  },
  {
    "text": "web assembly side of things and why web assembly is ideal for serverless serverless in itself is both more energy",
    "start": "793600",
    "end": "800160"
  },
  {
    "text": "efficient and Hardware efficient and thereby also cost-effective and to talk to you a bit about that is Kate",
    "start": "800160",
    "end": "807480"
  },
  {
    "text": "Kate hi everyone um so we just talked a little bit about web assembly and so I",
    "start": "807480",
    "end": "813600"
  },
  {
    "text": "want to take a couple steps back and talk about other ways that you've thought of packaging your applications",
    "start": "813600",
    "end": "819680"
  },
  {
    "text": "or isolating your applications so if we go back to the slide there we can see that um one way that we're really",
    "start": "819680",
    "end": "826279"
  },
  {
    "text": "familiar with isolating our applications is virtual machines and virtual machines kind of initiated cloud computing it",
    "start": "826279",
    "end": "832240"
  },
  {
    "text": "started this concept of being able to have multiple applications on the same physical hardware and the way it did",
    "start": "832240",
    "end": "838320"
  },
  {
    "text": "that was by by isolating the entire operating system and with virtual machines uh there was some amount of",
    "start": "838320",
    "end": "844920"
  },
  {
    "text": "scalability uh you were able to bring up a new virtual machine in a few minutes but it wasn't something where you would",
    "start": "844920",
    "end": "851720"
  },
  {
    "text": "bring up a bunch of virtual machines instantly and this resulted in more monolithic types of applications that",
    "start": "851720",
    "end": "857759"
  },
  {
    "text": "were isolated in their virtual machine and stayed there and contain and continued to reserve those physical",
    "start": "857759",
    "end": "863800"
  },
  {
    "text": "Hardware resources then we moved on to a new way of isolating ourc",
    "start": "863800",
    "end": "869240"
  },
  {
    "text": "which was containers and this created a smaller isolatable unit and you would just package in your application along",
    "start": "869240",
    "end": "875839"
  },
  {
    "text": "with its dependencies and this created a situation where you could start up new instances of your application in a few",
    "start": "875839",
    "end": "882639"
  },
  {
    "text": "seconds so you had a greater ability to scale up your applications and we had the microservice Paradigm come out of",
    "start": "882639",
    "end": "888959"
  },
  {
    "text": "this and now we've moved on to a web assembly world where it takes milliseconds to start um and you're able",
    "start": "888959",
    "end": "896639"
  },
  {
    "text": "to isolate them in these small web assembly um unit with um linear memory",
    "start": "896639",
    "end": "902600"
  },
  {
    "text": "isolation and this creates a world where we can start up applications in instantaneously right when they're",
    "start": "902600",
    "end": "908720"
  },
  {
    "text": "needed and this comes into the world of serverless or functions as a service and",
    "start": "908720",
    "end": "914199"
  },
  {
    "text": "so if we go to the next slide we can talk a little bit about what that serverless word means um so serverless",
    "start": "914199",
    "end": "920880"
  },
  {
    "text": "can be one of two things in a way it can be a type of application like I was just explaining where it's short-lived and",
    "start": "920880",
    "end": "927240"
  },
  {
    "text": "event-driven functions that happen upon a request or it can also be thought of",
    "start": "927240",
    "end": "932639"
  },
  {
    "text": "as a develop development model where you don't need to manage any servers um or",
    "start": "932639",
    "end": "937920"
  },
  {
    "text": "any of the backend infrastructure and therefore it is serverless and these two definitions of a type of application and",
    "start": "937920",
    "end": "944759"
  },
  {
    "text": "development model come together to describe functions as a service or fasts uh which you also may be familiar with",
    "start": "944759",
    "end": "951319"
  },
  {
    "text": "that term so whether you've heard of it in the form of fast or serus we're talking about the same",
    "start": "951319",
    "end": "957600"
  },
  {
    "text": "thing so why should I care about servus so we talked about it a little earlier",
    "start": "957600",
    "end": "963000"
  },
  {
    "start": "958000",
    "end": "1089000"
  },
  {
    "text": "it's moving forward in that smaller isolatable unit that's faster and event driven um but also when we talk about",
    "start": "963000",
    "end": "970480"
  },
  {
    "text": "serverless it we can talk about how with serverless you can be more and more focused on your business logic you don't",
    "start": "970480",
    "end": "977319"
  },
  {
    "text": "need to think about all the infrastructure behind it you just think about your business logic that you want to execute on a certain event um beyond",
    "start": "977319",
    "end": "985240"
  },
  {
    "text": "that uh server lless uh leads to faster scaling like you're saying it can start instantly and therefore if you need to",
    "start": "985240",
    "end": "992319"
  },
  {
    "text": "scale up the um number of units you have you can do that instantly and then",
    "start": "992319",
    "end": "997880"
  },
  {
    "text": "finally you get a better utilization of Hardware so the more units that you can",
    "start": "997880",
    "end": "1003240"
  },
  {
    "text": "put on a machine uh the better utilization you have of that hardware and all that comes together to lead to",
    "start": "1003240",
    "end": "1009480"
  },
  {
    "text": "cost savings this wonderful piggy bank we have and um environmental benefits like we were saying it has two of those",
    "start": "1009480",
    "end": "1015920"
  },
  {
    "text": "parts of our formula it has operational emissions are reduced because you're only running things when you need and embodied emissions are reduced because",
    "start": "1015920",
    "end": "1022560"
  },
  {
    "text": "you need less Hardware to do more so digging into that uh less Hardware to do",
    "start": "1022560",
    "end": "1028199"
  },
  {
    "text": "more one way to achieve that is through greater multi-tenancy so multi-tenancy",
    "start": "1028199",
    "end": "1033678"
  },
  {
    "text": "is the concept of where you can have multi multiple independent applications and often independently owned so they",
    "start": "1033679",
    "end": "1039678"
  },
  {
    "text": "might be owned by different tenants as well running in a shared environment and what multi-tenancy does is it brings the",
    "start": "1039679",
    "end": "1046839"
  },
  {
    "text": "cost of running a system closer to the value that you get out of a system so you can think of the value of a system",
    "start": "1046839",
    "end": "1054120"
  },
  {
    "text": "as the long-term average traffic of a system or long-term average use of a",
    "start": "1054120",
    "end": "1059360"
  },
  {
    "text": "system and the cost of running a system is the peak use at any given time",
    "start": "1059360",
    "end": "1064880"
  },
  {
    "text": "because your system needs to support the maximum load at any given moment even though what people get out of the system",
    "start": "1064880",
    "end": "1071720"
  },
  {
    "text": "is about the average amount that it's used over time um and a lot of and this",
    "start": "1071720",
    "end": "1077559"
  },
  {
    "text": "idea of focus focusing on multi- tendency and the idea of bringing the peak closer to the average um there's a",
    "start": "1077559",
    "end": "1083039"
  },
  {
    "text": "great blog by Mark Brooker that we've linked here if you want to kind of dive into that",
    "start": "1083039",
    "end": "1089039"
  },
  {
    "start": "1089000",
    "end": "1196000"
  },
  {
    "text": "concept so to kind of visualize this idea of bringing the cost of the system",
    "start": "1089360",
    "end": "1094520"
  },
  {
    "text": "closer to the average use of the system or what you get out of that system bringing that Peak to closer to the",
    "start": "1094520",
    "end": "1100400"
  },
  {
    "text": "average um we generated some random numbers here in order to kind of",
    "start": "1100400",
    "end": "1106240"
  },
  {
    "text": "simulate what this might look like so basically what did is I used a random number generator to generate a load",
    "start": "1106240",
    "end": "1112200"
  },
  {
    "text": "between 1 and 10 and then I um at the same time then plotted what was the sum",
    "start": "1112200",
    "end": "1119440"
  },
  {
    "text": "of all of those loads between 1 and 10 which is the yellow line or the uppermost line on the graph and then",
    "start": "1119440",
    "end": "1125440"
  },
  {
    "text": "what is the average so we can see on these um these graphs that you have two horizontally dotted lines the top",
    "start": "1125440",
    "end": "1132400"
  },
  {
    "text": "horizontal line is the peak use of the sum use of the system at any given point",
    "start": "1132400",
    "end": "1138720"
  },
  {
    "text": "and then the lower line is the average use of the system at any given time and the goal is to bring these two lines as",
    "start": "1138720",
    "end": "1144880"
  },
  {
    "text": "close to possible so that that the peak use at any given time is as close to the average use at any given time um and you",
    "start": "1144880",
    "end": "1152039"
  },
  {
    "text": "can see when we have two tenants or just two randomly used um amounts that the",
    "start": "1152039",
    "end": "1159039"
  },
  {
    "text": "peak in the average the peak is about 1.7 times the amount of the average however when we throw two more",
    "start": "1159039",
    "end": "1165799"
  },
  {
    "text": "tenants into the system you can see that the use starts to balance out we're seeing these Peaks and these edes kind",
    "start": "1165799",
    "end": "1171440"
  },
  {
    "text": "of forming one line um and that's creating a situation where the peak and the average are closer together and the",
    "start": "1171440",
    "end": "1177200"
  },
  {
    "text": "ratio is only 1.26 so just this mock scenario shows that the more independent",
    "start": "1177200",
    "end": "1182600"
  },
  {
    "text": "users you add to a system the more likely they are to balance out to the point where that what you're getting out",
    "start": "1182600",
    "end": "1187679"
  },
  {
    "text": "of the system is really close to the what um what you're spending on a system what you need to support in that",
    "start": "1187679",
    "end": "1195600"
  },
  {
    "start": "1196000",
    "end": "1261000"
  },
  {
    "text": "system and all this leads up to to the idea of how can we get as many tenants on a system as possible and so we talked",
    "start": "1196039",
    "end": "1203520"
  },
  {
    "text": "about this briefly when we were talking about VMS versus containers versus web assembly but to see this visually we can",
    "start": "1203520",
    "end": "1209679"
  },
  {
    "text": "see how you can think of each wave of cloud computing as also increasing",
    "start": "1209679",
    "end": "1215200"
  },
  {
    "text": "multi-tenancy we can have a few virtual machines on our Hardware with virtual machine isolation and we can have dozens",
    "start": "1215200",
    "end": "1222320"
  },
  {
    "text": "of containers on one unit of Hardware with containerization um and with web assembly we can thousands of",
    "start": "1222320",
    "end": "1230200"
  },
  {
    "text": "applications web assembly applications or web assembly functions on a single unit of Hardware because it has a higher",
    "start": "1230200",
    "end": "1236840"
  },
  {
    "text": "level of multi-tenancy and if you're looking at this um image",
    "start": "1236840",
    "end": "1242559"
  },
  {
    "text": "here you may think that something is missing um and you might be familiar with micr VMS which aimed to be the next",
    "start": "1242559",
    "end": "1250200"
  },
  {
    "text": "wave of multi-tenancy Beyond containers and let's talk a little bit about um",
    "start": "1250200",
    "end": "1255440"
  },
  {
    "text": "microv VMS or you may be more most familiar with aws's firecracker",
    "start": "1255440",
    "end": "1261600"
  },
  {
    "start": "1261000",
    "end": "1553000"
  },
  {
    "text": "VMS so when the um firecracker team at AWS was conceptualizing um the",
    "start": "1262080",
    "end": "1268880"
  },
  {
    "text": "firecracker microv VM they actually um created a paper to kind of discuss the process that they went to went through",
    "start": "1268880",
    "end": "1275640"
  },
  {
    "text": "and it's called firecracker lightweight virtualization for serverless applications and the firecracker team at",
    "start": "1275640",
    "end": "1281360"
  },
  {
    "text": "AWS released that paper in 2020 um firecracker micr VMS came out around in",
    "start": "1281360",
    "end": "1287039"
  },
  {
    "text": "2018 and basically what they walk through in this paper is how they went",
    "start": "1287039",
    "end": "1292080"
  },
  {
    "text": "about defining what this ideal serverless unit would look like this unit that could be instantly started",
    "start": "1292080",
    "end": "1298080"
  },
  {
    "text": "instantly started up and achieve a high level of multi-tenancy and they defined",
    "start": "1298080",
    "end": "1303600"
  },
  {
    "text": "six areas um or six characteristics that of an ideal serverless unit and so I",
    "start": "1303600",
    "end": "1310120"
  },
  {
    "text": "want to talk through each of these and then maybe you'll recognize how web assembly could satisfy these as well so",
    "start": "1310120",
    "end": "1317039"
  },
  {
    "text": "first of all um an ideal serverless unit needs to be isolatable so we've talked about that with VMS they're isolatable",
    "start": "1317039",
    "end": "1323400"
  },
  {
    "text": "with containers they're isolatable and with uh web assembly they're also sandbox so the the key thing to a",
    "start": "1323400",
    "end": "1330080"
  },
  {
    "text": "serverless unit is that it needs to be able to run next to all these other applications and be um fully isolated",
    "start": "1330080",
    "end": "1336360"
  },
  {
    "text": "from it you need to be able to support a high level of density on a single machine so you could run thousands on a",
    "start": "1336360",
    "end": "1343679"
  },
  {
    "text": "a machine with minimal waste so we're using all of those Hardware resources you want to have as near native to",
    "start": "1343679",
    "end": "1349480"
  },
  {
    "text": "Performance as possible so you don't want the fact that you're isolating this unit to be too much of a detriment to",
    "start": "1349480",
    "end": "1355039"
  },
  {
    "text": "its performance you want it to be compatible so if I am switching to serverless that Paradigm of application",
    "start": "1355039",
    "end": "1362799"
  },
  {
    "text": "um I shouldn't need to change the way I build applications too much I should be able to use my favorite libraries um and",
    "start": "1362799",
    "end": "1369159"
  },
  {
    "text": "use my same operating systems and um platforms as I've always loved",
    "start": "1369159",
    "end": "1374880"
  },
  {
    "text": "using it should be fast switching so this is the idea that I should be able to start execute and bring down this",
    "start": "1374880",
    "end": "1381120"
  },
  {
    "text": "function or the serverless unit as fast as possible um and that's part of the utilization of Hardware so I need to be",
    "start": "1381120",
    "end": "1387440"
  },
  {
    "text": "able to run it and bring it down as fast as possible so that other applications um are also able to get their share of",
    "start": "1387440",
    "end": "1394000"
  },
  {
    "text": "resources and I'm not hogging them all and then soft allocation so this is the",
    "start": "1394000",
    "end": "1399640"
  },
  {
    "text": "idea that you should be able to overcommit your resources so I should be able to schedule um a thousand",
    "start": "1399640",
    "end": "1405600"
  },
  {
    "text": "applications to a node under the assumption that even if the node can only handle uh say 250 at once the idea",
    "start": "1405600",
    "end": "1413000"
  },
  {
    "text": "is that these applications are all independent enough that we can assume that only 250 are being used at once and",
    "start": "1413000",
    "end": "1420120"
  },
  {
    "text": "that also assumes that the other 750 are taking up very minimal resources when they're not being",
    "start": "1420120",
    "end": "1426400"
  },
  {
    "text": "executed so if we go to the next slide we can then look at this comparison",
    "start": "1426400",
    "end": "1431600"
  },
  {
    "text": "explicitly between firecracker microv VMS and web assembly so um the team at",
    "start": "1431600",
    "end": "1437880"
  },
  {
    "text": "firecracker made um a unit that satisfied all these characteristics and",
    "start": "1437880",
    "end": "1443480"
  },
  {
    "text": "web assembly uniquely also satisfies all these characteristics making it a very good serverless unit um both of them are",
    "start": "1443480",
    "end": "1450320"
  },
  {
    "text": "isolated they have different mechanisms so um web assembly with its linear memory and capabilities based security",
    "start": "1450320",
    "end": "1456159"
  },
  {
    "text": "that soan mentioned and uh firecracker microv VMS with a virtual machine",
    "start": "1456159",
    "end": "1461240"
  },
  {
    "text": "Monitor and KVM they both can support um great density um the paper shows that they",
    "start": "1461240",
    "end": "1468919"
  },
  {
    "text": "were able to support thousand on a node um and so were we when we did stress",
    "start": "1468919",
    "end": "1474360"
  },
  {
    "text": "testing but one thing to note is with web assembly we were able to do a lot more um or we were able to do just as",
    "start": "1474360",
    "end": "1480360"
  },
  {
    "text": "much with a lot less resources so um in our load tests we only had um a 32",
    "start": "1480360",
    "end": "1485880"
  },
  {
    "text": "gigabyte um Ram machine and only eight cores while they had a lot beefier",
    "start": "1485880",
    "end": "1491240"
  },
  {
    "text": "machines when they were doing their test um with performance both of them are near native um and fast switching is",
    "start": "1491240",
    "end": "1499000"
  },
  {
    "text": "another part where web assembly once ahead jump once again jumps ahead so with a firecracker micr BM it takes",
    "start": "1499000",
    "end": "1505200"
  },
  {
    "text": "about 125 milliseconds to start which is why oftentimes they'll do some pre-warming to bring that down a little",
    "start": "1505200",
    "end": "1510919"
  },
  {
    "text": "while with web assembly you don't need any pre-warming and you're sometimes below one millisecond times and",
    "start": "1510919",
    "end": "1516279"
  },
  {
    "text": "oftentimes around one um one to five milliseconds soft allocation we didn't",
    "start": "1516279",
    "end": "1522600"
  },
  {
    "text": "test that in our load testing that we did but with um firecracker micr VMS they were able to over subscribe or um",
    "start": "1522600",
    "end": "1530159"
  },
  {
    "text": "the hardware resources as they desired and then compatibility um while firecracker microv VMS are limited to",
    "start": "1530159",
    "end": "1537200"
  },
  {
    "text": "Linux and KVM um web assembly is OS and platform agnostic um however Library",
    "start": "1537200",
    "end": "1543720"
  },
  {
    "text": "support is where it um maybe takes a downfall is that these libraries need to support Wy and more and more are um but",
    "start": "1543720",
    "end": "1550520"
  },
  {
    "text": "there is still some limitations there so we talked about the",
    "start": "1550520",
    "end": "1556480"
  },
  {
    "start": "1553000",
    "end": "1630000"
  },
  {
    "text": "characteristics of an ideal serverless unit so what we need to be built into the technology in order for us to want",
    "start": "1556480",
    "end": "1562760"
  },
  {
    "text": "to adopt it um or use it but what makes a unit adoptable what makes me as a developer want to use a completely",
    "start": "1562760",
    "end": "1570039"
  },
  {
    "text": "different way of building my applications um and there's four things we can think of one it needs to be",
    "start": "1570039",
    "end": "1575159"
  },
  {
    "text": "language agnostic I shouldn't need to learn a different language or limit my language choice in order to use a new",
    "start": "1575159",
    "end": "1581080"
  },
  {
    "text": "type of software um it should be crossplatform I should be able to run it anywhere I want um and not need to",
    "start": "1581080",
    "end": "1587279"
  },
  {
    "text": "switch up my environment um it should be portable so I need to be able to distribute my",
    "start": "1587279",
    "end": "1592360"
  },
  {
    "text": "application um from one location to another um and then finally I should be having as good of a developer experience",
    "start": "1592360",
    "end": "1599039"
  },
  {
    "text": "as as possible and what comes with a good developer experience is good tooling a robust ecosystem of applic of",
    "start": "1599039",
    "end": "1605760"
  },
  {
    "text": "libraries ideally um debug it needs to be very debuggable um and easy to test",
    "start": "1605760",
    "end": "1611039"
  },
  {
    "text": "locally um before I put it in my production environment and we're seeing with web assembly more and more",
    "start": "1611039",
    "end": "1617720"
  },
  {
    "text": "developer tooling coming out um and the portability really does make it so that there is an incredibly good developer",
    "start": "1617720",
    "end": "1625039"
  },
  {
    "text": "experience for serverless that we haven't had in the",
    "start": "1625039",
    "end": "1629320"
  },
  {
    "text": "past so to kind of bring this in together um we wanted to show a demo of",
    "start": "1630600",
    "end": "1637679"
  },
  {
    "text": "how we were able to create high levels of multi-tenancy with spin applications",
    "start": "1637679",
    "end": "1643840"
  },
  {
    "text": "um and a lot of this came from we were building out a cloud and we wanted to know how many spin applications can we",
    "start": "1643840",
    "end": "1650200"
  },
  {
    "text": "place on a single node in our Cloud um how great of a unit is this web assembly",
    "start": "1650200",
    "end": "1655440"
  },
  {
    "text": "um unit and so in this demo um I want to show how on my MacBook Pro here and we",
    "start": "1655440",
    "end": "1662080"
  },
  {
    "text": "pre-recorded this I basically set up fir on cloud which is our environment for",
    "start": "1662080",
    "end": "1667240"
  },
  {
    "text": "hosting spin applications so what that entailed was um a single node noad cluster your typical cloud services so",
    "start": "1667240",
    "end": "1674200"
  },
  {
    "text": "logging Services storage networking and spin so spin is both a tool for creating",
    "start": "1674200",
    "end": "1680440"
  },
  {
    "text": "um applications and it's also a runtime so inside spin is the bosom time runtime",
    "start": "1680440",
    "end": "1685880"
  },
  {
    "text": "and that it will execute and isolate our um web assembly applications and then we",
    "start": "1685880",
    "end": "1691320"
  },
  {
    "text": "deployed 500 spin applications to this one machine here um and in just 10",
    "start": "1691320",
    "end": "1696919"
  },
  {
    "text": "seconds we brought up and down 10,000 instances or invocations of those spin applications to show how F fast it",
    "start": "1696919",
    "end": "1704279"
  },
  {
    "text": "scaled up and scaled down and we'll see um CPU SP up and then immediately drop all the way back down to show how um",
    "start": "1704279",
    "end": "1711200"
  },
  {
    "text": "instantaneous um the resource usage jumps and comes back",
    "start": "1711200",
    "end": "1716360"
  },
  {
    "start": "1716000",
    "end": "1885000"
  },
  {
    "text": "down so you can see here um this is The Nomad portal brought up locally on Mach machine and we have those um Cloud um",
    "start": "1716840",
    "end": "1725279"
  },
  {
    "text": "those typical cloud services you have traffic for networking bindle for application storage which is specific to",
    "start": "1725279",
    "end": "1730600"
  },
  {
    "text": "web assembly journal for logging and then you can see spin Mt which is our multi-tenant spin so this one spin spin",
    "start": "1730600",
    "end": "1737840"
  },
  {
    "text": "binary that for executing all of our applications and then we have spin garbage collection which is basically",
    "start": "1737840",
    "end": "1744240"
  },
  {
    "text": "just cleaning up your spin applications after you've deleted them um which is another way of removing any extra",
    "start": "1744240",
    "end": "1750760"
  },
  {
    "text": "resources that aren't um needed at the moment and so I'm deploying 500 spin",
    "start": "1750760",
    "end": "1757000"
  },
  {
    "text": "applications to our Nomad cluster so you can see now we have 500 um Nomad jobs",
    "start": "1757000",
    "end": "1763559"
  },
  {
    "text": "and each one of these jobs basically just did these optimizations and that pre the head of time compilation that",
    "start": "1763559",
    "end": "1769240"
  },
  {
    "text": "soan mentioned to make sure that they have even faster startup times so now we're looking at our resource portal",
    "start": "1769240",
    "end": "1776279"
  },
  {
    "text": "usage portal for nomad we can see that we have CPU on the left and memory on the right um and CPU is pretty low right",
    "start": "1776279",
    "end": "1783080"
  },
  {
    "text": "now it's around like the 15% Point um and just on the right we have um our",
    "start": "1783080",
    "end": "1789240"
  },
  {
    "text": "terminal with the end points of all of our applications so we can see that there were 500 and they're all in the",
    "start": "1789240",
    "end": "1794600"
  },
  {
    "text": "format of an htttp rust application and um just the the URL and",
    "start": "1794600",
    "end": "1802200"
  },
  {
    "text": "we can see that when we ping one we expect a simple hello fir on um we had hello cncf earlier response so for load",
    "start": "1802200",
    "end": "1810880"
  },
  {
    "text": "testing our Cloud we built our own load testing Tool uh we wanted to be able to hit a bunch of end points which a lot of",
    "start": "1810880",
    "end": "1817440"
  },
  {
    "text": "tools didn't support but you can see that it has the same flags as many low testers you may be familiar with such as",
    "start": "1817440",
    "end": "1823880"
  },
  {
    "text": "Siege so we're here saying that we're having 25 concurrent users sending requests and that each concurrent user",
    "start": "1823880",
    "end": "1831399"
  },
  {
    "text": "is sending 400 requests and then we're adding a 01 second Jitter here um to",
    "start": "1831399",
    "end": "1837799"
  },
  {
    "text": "throw off a little bit there and total that it's going to send 10,000 requests and it's going to send 10,000 requests",
    "start": "1837799",
    "end": "1844360"
  },
  {
    "text": "to that 500 um end points here and you'll see a CPU now spiked to almost",
    "start": "1844360",
    "end": "1851320"
  },
  {
    "text": "90% here and then now it's coming all the way back down and just that 10-second interval we um pinged um in",
    "start": "1851320",
    "end": "1860039"
  },
  {
    "text": "that actually it ended up being under 6 seconds so 5.8 seconds we pinged 10,000",
    "start": "1860039",
    "end": "1866320"
  },
  {
    "text": "um in requests to our 500 applications so that just shows how fast web assembly",
    "start": "1866320",
    "end": "1872080"
  },
  {
    "text": "is and how scalable we only used all that CPU when we needed and it scaled up",
    "start": "1872080",
    "end": "1877320"
  },
  {
    "text": "and down as we expected so very Dynamic very fast um and very resource",
    "start": "1877320",
    "end": "1885000"
  },
  {
    "start": "1885000",
    "end": "2156000"
  },
  {
    "text": "efficient and so now I'm going to pass it off to soan again to talk about another resource that you can optimize",
    "start": "1886000",
    "end": "1892320"
  },
  {
    "text": "uh with web assembly yeah thanks Kate so I mentioned earlier in the talk about those two lenses to uh at which you can",
    "start": "1892320",
    "end": "1899440"
  },
  {
    "text": "actually look at you know being more um um looking at your um software carbon",
    "start": "1899440",
    "end": "1905799"
  },
  {
    "text": "intensity which is being energy efficient uh and being Hardware efficient so um seress AI inferencing is",
    "start": "1905799",
    "end": "1912240"
  },
  {
    "text": "potentially one way to actually look at this as well so AI is the talk of town everyone one is talking about generative",
    "start": "1912240",
    "end": "1918600"
  },
  {
    "text": "Ai and large language models for you to actually run your own large language models you'll have to use powerful gpus",
    "start": "1918600",
    "end": "1925679"
  },
  {
    "text": "so typically companies and programmers are renting uh powerful gpus that are running in the cloud and these are",
    "start": "1925679",
    "end": "1932720"
  },
  {
    "text": "running for a longer period of time and requests are being made um in terms of either inferencing or like image",
    "start": "1932720",
    "end": "1939360"
  },
  {
    "text": "Generation Now regardless of whether you make one request a month or like a",
    "start": "1939360",
    "end": "1944519"
  },
  {
    "text": "million requests a month these CPUs are actually running in the cloud for people to use so another way of actually",
    "start": "1944519",
    "end": "1951960"
  },
  {
    "text": "looking at this is to do this serously as well so instead of having a GPU running in the cloud or uh you know",
    "start": "1951960",
    "end": "1959519"
  },
  {
    "text": "running containers for a longer period of time uh we were actually able to time slice a GPU that's running in the cloud",
    "start": "1959519",
    "end": "1967080"
  },
  {
    "text": "and use it for AI inferencing because you know a dedicated GPU in the cloud is both carbon intensive and it's slow and",
    "start": "1967080",
    "end": "1974120"
  },
  {
    "text": "it can be expensive um so how this works essentially is there is a Time slicing",
    "start": "1974120",
    "end": "1980159"
  },
  {
    "text": "and for any request um you can actually essentially make um AI inferencing request to a large language model that's",
    "start": "1980159",
    "end": "1986760"
  },
  {
    "text": "running in the cloud and you will get you know whatever AI inferencing request",
    "start": "1986760",
    "end": "1992279"
  },
  {
    "text": "you make and uh we at firon we actually built this along with a partner called",
    "start": "1992279",
    "end": "1998279"
  },
  {
    "text": "seo seo is a hardware partner and they essentially use a company called Deep",
    "start": "1998279",
    "end": "2003519"
  },
  {
    "text": "green now what deep green does is fairly it's it's quite interesting if you ask me so they turn unwanted waste heat from",
    "start": "2003519",
    "end": "2011480"
  },
  {
    "text": "one system into a desired warmth for another system and what this means is they're using cloud gpus and their",
    "start": "2011480",
    "end": "2018919"
  },
  {
    "text": "actual gpus are immersed in a particular kind of oil you can see the image there",
    "start": "2018919",
    "end": "2024159"
  },
  {
    "text": "and the heat from these gpus are actually captured and they're transferred to other things that",
    "start": "2024159",
    "end": "2029720"
  },
  {
    "text": "potentially need heat now this is a startup and they are actually in production right now and they're using",
    "start": "2029720",
    "end": "2035360"
  },
  {
    "text": "the heat from these CPUs used to warm a swimming pool somewhere in or near",
    "start": "2035360",
    "end": "2040440"
  },
  {
    "text": "London right so it's a very real world use case of um using like an energy in",
    "start": "2040440",
    "end": "2046840"
  },
  {
    "text": "this case heat from running something in a GPU uh to a place that actually needs",
    "start": "2046840",
    "end": "2052000"
  },
  {
    "text": "warmth in this case a swimming pool and what essentially this could potentially unlock is AI inferencing that is",
    "start": "2052000",
    "end": "2059440"
  },
  {
    "text": "actually carbon neutral so when you make an inferencing request to a large language model uh not only are you using",
    "start": "2059440",
    "end": "2066960"
  },
  {
    "text": "serverless Computing to be energy and Hardware efficient you're also transferring some of the heat generated",
    "start": "2066960",
    "end": "2073079"
  },
  {
    "text": "from running that piece of Hardware into something useful right so the cost or the carbon intensity of that llm request",
    "start": "2073079",
    "end": "2081040"
  },
  {
    "text": "in itself could be either carbon neutral or very close to being carbon neutral right so this is a great real world use",
    "start": "2081040",
    "end": "2087839"
  },
  {
    "text": "case of how both serverless and web assembly uh came together you know to make uh software a little more",
    "start": "2087839",
    "end": "2095280"
  },
  {
    "text": "Greener so we have thrown a lot of interesting and hopefully new uh informative um you know Concepts at you",
    "start": "2095280",
    "end": "2102000"
  },
  {
    "text": "today for some resources you can actually look at building your first web assembly app using spin it's very easy",
    "start": "2102000",
    "end": "2107520"
  },
  {
    "text": "to get started just go to github.com on/ spin also check out serverless Ai",
    "start": "2107520",
    "end": "2113000"
  },
  {
    "text": "inferencing pon.com seress aai and if you're interested in reading more about",
    "start": "2113000",
    "end": "2118200"
  },
  {
    "text": "carbon neutral AI inferencing we also have a blog post that goes into the",
    "start": "2118200",
    "end": "2123440"
  },
  {
    "text": "in-depth um you know the nerdy stuff around like gpus and energy and cloud and all of that so so check that out",
    "start": "2123440",
    "end": "2130200"
  },
  {
    "text": "anyway that brings towards an end uh for this session please join us on our Discord server we have a Discord if you",
    "start": "2130200",
    "end": "2136480"
  },
  {
    "text": "go to fan.com blogon Discord feel free to connect with both Kate and myself on LinkedIn and",
    "start": "2136480",
    "end": "2143240"
  },
  {
    "text": "reach out to us if you have questions about serverless about web assembly or software sustainability um from Kate and",
    "start": "2143240",
    "end": "2150200"
  },
  {
    "text": "myself that's it thank you and have a good rest of the day bye",
    "start": "2150200",
    "end": "2158040"
  }
]