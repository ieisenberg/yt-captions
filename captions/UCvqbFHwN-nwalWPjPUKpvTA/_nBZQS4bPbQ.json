[
  {
    "text": "thanks for coming to my talk I am Turner from London in the UK",
    "start": "350",
    "end": "6420"
  },
  {
    "text": "I guess I've you are using the translation so I'll try to go a little slow I'm going to be talking about sto",
    "start": "6420",
    "end": "14839"
  },
  {
    "text": "I'm going to be talking about running resilient workloads using sto so this is",
    "start": "14839",
    "end": "20430"
  },
  {
    "text": "looking at a higher level at sort of applications and how you can use SEO to solve some of the problems you get with",
    "start": "20430",
    "end": "27680"
  },
  {
    "text": "distributed applications distributed micro services I am CTO of a managed",
    "start": "27680",
    "end": "37440"
  },
  {
    "text": "service provider called a native wave web based a long way away in London but we offer managed in a cloud native IT",
    "start": "37440",
    "end": "43350"
  },
  {
    "text": "platforms so if you want to know any more about that then come and find me just by way of a quiz who is using",
    "start": "43350",
    "end": "52170"
  },
  {
    "text": "kubernetes ok most people that coop Khan",
    "start": "52170",
    "end": "57859"
  },
  {
    "text": "who is who is using Sto in their production system ok and everybody else",
    "start": "57859",
    "end": "65430"
  },
  {
    "text": "has is look to this do interested in Sto ok cool well hopefully this is this is",
    "start": "65430",
    "end": "71100"
  },
  {
    "text": "some useful information for you so just a quick I can't see the slides from",
    "start": "71100",
    "end": "77610"
  },
  {
    "text": "there a quick introduction about you know why why we're looking at this think about",
    "start": "77610",
    "end": "84720"
  },
  {
    "text": "what your business what's from the software you write to think about the",
    "start": "84720",
    "end": "89729"
  },
  {
    "text": "value you're delivering to users what is the value to the users and therefore the",
    "start": "89729",
    "end": "96090"
  },
  {
    "text": "value to the business of what you're building well yes you want your software to be good you want it to be high",
    "start": "96090",
    "end": "102090"
  },
  {
    "text": "quality you want it to to sell for a lot of money that is your top line right you want lots of income you want it to run",
    "start": "102090",
    "end": "109110"
  },
  {
    "text": "as cheaply as possible that's the bottom line so you want to keep your expenses down kubernetes helps you with your bin",
    "start": "109110",
    "end": "116729"
  },
  {
    "text": "packing maximizing utilization of your cloud resources but also what is",
    "start": "116729",
    "end": "122939"
  },
  {
    "text": "important to a business is the time to market so add the the speed of experimentation and it's",
    "start": "122939",
    "end": "129509"
  },
  {
    "text": "raishin so how fast you can develop a new feature get it out to a user you",
    "start": "129509",
    "end": "134939"
  },
  {
    "text": "know test it find out whether it's what the user wants and then use that to influence your next sprint or whatever",
    "start": "134939",
    "end": "141810"
  },
  {
    "text": "right and then get useful feedback from your actual users on your product and this reduces the risk of building",
    "start": "141810",
    "end": "148110"
  },
  {
    "text": "software this reduces the risk of writing code for two years in isolation and then releasing it and finding out",
    "start": "148110",
    "end": "155010"
  },
  {
    "text": "that it's not what anybody wanted and you can't set it so this is really important and there's been a lot of work",
    "start": "155010",
    "end": "163620"
  },
  {
    "text": "in software in the last 20 years maybe to get to that point so we had scrum",
    "start": "163620",
    "end": "168840"
  },
  {
    "text": "which says don't play more than two weeks in advance because you don't have the evidence and we also changed",
    "start": "168840",
    "end": "174629"
  },
  {
    "text": "software engineering so we took the monolithic applications that we had and we we broke them apart right so this is",
    "start": "174629",
    "end": "180750"
  },
  {
    "text": "a rock that is cracked for anybody who doesn't speak English or like Latin monolith that means single",
    "start": "180750",
    "end": "188280"
  },
  {
    "text": "rock big rock so we took them this is why the picture it's a bad joke we took the big rock and we made it into lots of",
    "start": "188280",
    "end": "195150"
  },
  {
    "text": "little rocks so we have microservices and that means that we can develop those in parallel the code bases are smaller",
    "start": "195150",
    "end": "202109"
  },
  {
    "text": "they are easier to edit and we can release the software separately right so",
    "start": "202109",
    "end": "207989"
  },
  {
    "text": "if I want to make change to one part of my application ie make a change to that microservice and I can release it and I",
    "start": "207989",
    "end": "214829"
  },
  {
    "text": "don't have to wait for everybody else so I get my feedback really fast and that's that's how we why we decided to write",
    "start": "214829",
    "end": "221849"
  },
  {
    "text": "microservices one of the reasons but",
    "start": "221849",
    "end": "227639"
  },
  {
    "text": "there is a joke you know now that we've broken the monolith how do we know that we haven't don't just have a distributed",
    "start": "227639",
    "end": "234209"
  },
  {
    "text": "one of this so the joke says in microservices no no what we've got is a completely different pattern we have a",
    "start": "234209",
    "end": "240569"
  },
  {
    "text": "distributed monolith so I've taken all the code that I had before you know I've",
    "start": "240569",
    "end": "247109"
  },
  {
    "text": "separated my concerns I'm a good software engineer I've got dependency injection and I've",
    "start": "247109",
    "end": "252120"
  },
  {
    "text": "separated my code into different Java namespaces behinds nice strong interfaces and they called each other",
    "start": "252120",
    "end": "258389"
  },
  {
    "text": "right we knew how to write software in the in da it wasn't nothing is new but now with",
    "start": "258389",
    "end": "263760"
  },
  {
    "text": "microservices I split that I put them all in a different pod and I run them on kubernetes so we have the same code and",
    "start": "263760",
    "end": "271170"
  },
  {
    "text": "now it's spread out the problem is what used to be a function call between",
    "start": "271170",
    "end": "276800"
  },
  {
    "text": "namespace a and namespace see that could never fail it's now a call over a network so there's a whole load of ways",
    "start": "276800",
    "end": "283560"
  },
  {
    "text": "it could go wrong the network could be on fire the computer that pod C is running on could be on fire the data",
    "start": "283560",
    "end": "289560"
  },
  {
    "text": "center could be on fire so we have all of the same problems as before all of",
    "start": "289560",
    "end": "294630"
  },
  {
    "text": "the bugs in this code and there are always bugs and a whole load of new failure modes which we didn't have",
    "start": "294630",
    "end": "300540"
  },
  {
    "text": "before so if my micro services look like this you know one front end cause some",
    "start": "300540",
    "end": "307050"
  },
  {
    "text": "backends that all depend on each other then if one goes wrong I can start to",
    "start": "307050",
    "end": "313710"
  },
  {
    "text": "get these cascading failures if I'm not careful this is very complicated this is",
    "start": "313710",
    "end": "319050"
  },
  {
    "text": "an emergent property of this system right so one one service fails nothing",
    "start": "319050",
    "end": "324840"
  },
  {
    "text": "else can reach it some of those don't handle that error and they fail some of them block while they're you know",
    "start": "324840",
    "end": "330870"
  },
  {
    "text": "waiting and they sit there forever and I get all these kind of cascading failure modes that I didn't have before so this",
    "start": "330870",
    "end": "336750"
  },
  {
    "text": "is a distributed monitor if this is a monolith where I've just thrown it into different pods and scaled it up but not",
    "start": "336750",
    "end": "343860"
  },
  {
    "text": "really thought about and what that means for the quality of my system so we have",
    "start": "343860",
    "end": "350340"
  },
  {
    "text": "a way of solving this and you know most of you know what sto is so I won't spend long on that well one of the ways we can",
    "start": "350340",
    "end": "357660"
  },
  {
    "text": "solve this is with a service mesh so the service mesh comes along and puts a proxy I will be demonstrating sto and",
    "start": "357660",
    "end": "365360"
  },
  {
    "text": "sto uses the Envoy proxy this is the envoy logo but this applies to to all",
    "start": "365360",
    "end": "370920"
  },
  {
    "text": "service measures we put a proxy alongside each one of these applications and that handles the network traffic for",
    "start": "370920",
    "end": "377820"
  },
  {
    "text": "us so you know a call from pod a to pod",
    "start": "377820",
    "end": "383010"
  },
  {
    "text": "B now if Part B is down then the Envoy next to pod a can say okay I will find",
    "start": "383010",
    "end": "389700"
  },
  {
    "text": "another instance of point B and we'll reach I have buffered your request and I will retry it and I will I will",
    "start": "389700",
    "end": "395639"
  },
  {
    "text": "get you the answer as soon as I get a correct one and if not I will throw a circuit breaker and I will return you",
    "start": "395639",
    "end": "402059"
  },
  {
    "text": "the last answer that we got or a default answer or something like that so service a can have the business logic it had",
    "start": "402059",
    "end": "408749"
  },
  {
    "text": "before and it doesn't have to worry about the new network environment that",
    "start": "408749",
    "end": "414389"
  },
  {
    "text": "it is in because that is complicated and it can fail so to make an a service",
    "start": "414389",
    "end": "421169"
  },
  {
    "text": "measure useful we need a way to configure all of these proxies you know they need to do different things we will",
    "start": "421169",
    "end": "427379"
  },
  {
    "text": "see this but maybe when service a calls service C you know that is a database",
    "start": "427379",
    "end": "432960"
  },
  {
    "text": "transaction and it's not safe to retry that you know if your update a if service C is your actual bank account",
    "start": "432960",
    "end": "438529"
  },
  {
    "text": "the ledger then if service a you need to make sure that service a and those doesn't try to",
    "start": "438529",
    "end": "444419"
  },
  {
    "text": "call it more than once because you don't know whether the failure that you got happened before or after the actual bank",
    "start": "444419",
    "end": "450779"
  },
  {
    "text": "account records were updated right whereas if you're just fetching a cat gif if you've got 99 percent of the way",
    "start": "450779",
    "end": "456689"
  },
  {
    "text": "through and it failed then you can just try again and hopefully next time you'll get a hundred percent there's no side effect of that that operation is called",
    "start": "456689",
    "end": "463139"
  },
  {
    "text": "idempotent so each of these proxies yeah and you might want a different time out for different routes you might want all",
    "start": "463139",
    "end": "469709"
  },
  {
    "text": "kinds of different configuration so each of these proxies gives you all of these features but they need to be the point",
    "start": "469709",
    "end": "475649"
  },
  {
    "text": "of this talk is that they all need to be told what to do and that depends on your application so a service motion comes",
    "start": "475649",
    "end": "482639"
  },
  {
    "text": "with a control plane sto has a control plane you're under CLI sto CTL which you",
    "start": "482639",
    "end": "489569"
  },
  {
    "text": "use to talk to it and the control plan you you give the control plane a simple",
    "start": "489569",
    "end": "495330"
  },
  {
    "text": "definition quite simple definition of wow you want the service mesh to act and then the control plane will configure",
    "start": "495330",
    "end": "502409"
  },
  {
    "text": "all of those proxies for you this is another bad joke I would say it is not",
    "start": "502409",
    "end": "508229"
  },
  {
    "text": "at all plain sailing where you if you think everybody knows about kubernetes",
    "start": "508229",
    "end": "513599"
  },
  {
    "text": "here if you think about how you use Cooper Nettie's when you first start you just make a deployment all right and a",
    "start": "513599",
    "end": "519839"
  },
  {
    "text": "service to resources and one says here is the workloads I would like you to run here is code to execute and then the service",
    "start": "519839",
    "end": "527100"
  },
  {
    "text": "says and here is how you expose it over the network so all of these pods are listening on port 80 and I would like",
    "start": "527100",
    "end": "532530"
  },
  {
    "text": "you to tell AWS to make a load balancer so that I can get to all of them right simple communities 101 it's how we start",
    "start": "532530",
    "end": "540420"
  },
  {
    "text": "using it and it and it works but if you want to make that application resilient",
    "start": "540420",
    "end": "545610"
  },
  {
    "text": "if you want to use kubernetes in production then you're going to need ingress right because your product owner",
    "start": "545610",
    "end": "552180"
  },
  {
    "text": "probably wants several services on a path based route to behind the same IP you want a horizontal pod autoscaler",
    "start": "552180",
    "end": "558480"
  },
  {
    "text": "that gives you resilience against having lots of users having lots of users is a good thing",
    "start": "558480",
    "end": "563520"
  },
  {
    "text": "but if you only have one pod and lots of users that pod will crash so you need to",
    "start": "563520",
    "end": "568770"
  },
  {
    "text": "be resilient against that you need to tell kubernetes how to scale your application you need to set requested limits you need to set readiness and",
    "start": "568770",
    "end": "575490"
  },
  {
    "text": "liveness probes you also probably need some config maps and some secrets and some upgrade strategies the translators",
    "start": "575490",
    "end": "581970"
  },
  {
    "text": "could ignore this I have a ji affinity anti Finity pod destruction budget pom security policy Network policy pod",
    "start": "581970",
    "end": "587670"
  },
  {
    "text": "preset and service account in our back limit range cluster autoscaler there's probably more my point apologies to the",
    "start": "587670",
    "end": "594570"
  },
  {
    "text": "translator my my point is that it's not as simple as just telling kubernetes to run your workload you need to to",
    "start": "594570",
    "end": "602190"
  },
  {
    "text": "configure all of these extra things to get the most out of it so good realities can do some stuff out of the box it will",
    "start": "602190",
    "end": "609810"
  },
  {
    "text": "have a get if your application actually crashes if it just seg faults then kubernetes nodes that's bad then it will",
    "start": "609810",
    "end": "616110"
  },
  {
    "text": "restart it but there's lots of other failure modes like it just you know it's still something on the port but it just",
    "start": "616110",
    "end": "622260"
  },
  {
    "text": "never replies because maybe it's deadlocked kubernetes doesn't know how to to detect that in the general case so",
    "start": "622260",
    "end": "629340"
  },
  {
    "text": "you have to write a health check you know a liveness probe that hits the HTTP port and tries to get a response and",
    "start": "629340",
    "end": "636270"
  },
  {
    "text": "only by doing that can you tell kubernetes that you know this this service is a network daemon that is",
    "start": "636270",
    "end": "643290"
  },
  {
    "text": "meant to be replying to HTTP requests and if it doesn't do that then it's broken so configuring kubernetes is is",
    "start": "643290",
    "end": "651170"
  },
  {
    "text": "about describing your application to kubernetes saying hey we have this unix process it's a black box to you",
    "start": "651170",
    "end": "658410"
  },
  {
    "text": "but I'm going to tell you that it can only do 1,000 requests per second and",
    "start": "658410",
    "end": "663480"
  },
  {
    "text": "when it starts doing that you know when it gets to 1,001 you need to make a new instance it's listening on TCP so if you",
    "start": "663480",
    "end": "669840"
  },
  {
    "text": "send a valid TCP request and you do not get a valid TCP response or you get a th",
    "start": "669840",
    "end": "675180"
  },
  {
    "text": "TTP response that says 500 in it then it's broken so it's about a lot of the",
    "start": "675180",
    "end": "680430"
  },
  {
    "text": "kubernetes stuff is about describing your application above and beyond that lowest common denominator of it's a UNIX",
    "start": "680430",
    "end": "688710"
  },
  {
    "text": "process and it should not crash so as I say we use we can use this teo when we",
    "start": "688710",
    "end": "696510"
  },
  {
    "text": "have one of these distributed systems and we need to help out with some of these and new distributed systems",
    "start": "696510",
    "end": "702660"
  },
  {
    "text": "failure cases so the the tag line says that sto is an open platform to connect",
    "start": "702660",
    "end": "710010"
  },
  {
    "text": "to secure to control and to observe micro services and all of these words",
    "start": "710010",
    "end": "715980"
  },
  {
    "text": "are actually quite important and I'll I'll go through them in this talk but basically what I what this talk is about",
    "start": "715980",
    "end": "723710"
  },
  {
    "text": "is that you need to do the same with this do you need to describe your application to it you need to tell it",
    "start": "723710",
    "end": "729870"
  },
  {
    "text": "what to do to you to help you the most so that your application can be properly",
    "start": "729870",
    "end": "735090"
  },
  {
    "text": "resilient I'm not going to send my demo up I have a require can't get my VPN to",
    "start": "735090",
    "end": "741660"
  },
  {
    "text": "work I have a recording so we'll skip that I just I just can't so so the",
    "start": "741660",
    "end": "748410"
  },
  {
    "text": "observability part this is going to be really awkward because I can't see the screen so yeah so it's - I can do all of",
    "start": "748410",
    "end": "756030"
  },
  {
    "text": "this stuff and I guess by default it will connect your applications if you",
    "start": "756030",
    "end": "761280"
  },
  {
    "text": "install this do and then you deploy your application the sidecar is there and it intercepts all of the traffic and it",
    "start": "761280",
    "end": "767310"
  },
  {
    "text": "moves the traffic from one place to another so pod a it's a pod B involves that the traffic going through two",
    "start": "767310",
    "end": "773430"
  },
  {
    "text": "copies or rhomboid and like kubernetes it does lowest-common-denominator stuff",
    "start": "773430",
    "end": "778860"
  },
  {
    "text": "if you're trying to talk to service B then it's going to pick the traffic up and it's going to move it to service B of course it is but it won't retry it by",
    "start": "778860",
    "end": "786060"
  },
  {
    "text": "default because in the general case that's not the thing to do in the general case that's",
    "start": "786060",
    "end": "791100"
  },
  {
    "text": "not safe because it might not be an ident potent operation you also can't",
    "start": "791100",
    "end": "796350"
  },
  {
    "text": "necessary you might think you want to secure all the traffic between parts but in the general case you actually can't do that because it interacts weakly with",
    "start": "796350",
    "end": "802980"
  },
  {
    "text": "some other systems and what does control mean you know if one pod breaks do I",
    "start": "802980",
    "end": "810750"
  },
  {
    "text": "want to route traffic around it do I want to return a default do I want to just sit there and try again all of these things need to be described",
    "start": "810750",
    "end": "817560"
  },
  {
    "text": "as do so I'm going to take you through some of these to your configuration that you should use to get the most out of",
    "start": "817560",
    "end": "825810"
  },
  {
    "text": "sto and to get the most benefits to make your application reliable so the first",
    "start": "825810",
    "end": "832650"
  },
  {
    "text": "is observability observability is is three main parts its metrics about the",
    "start": "832650",
    "end": "839340"
  },
  {
    "text": "traffic it's a service graph of the traffic which pod talks to which you",
    "start": "839340",
    "end": "845250"
  },
  {
    "text": "know when you had a model if you can just attach a debugger you know if there's a problem in namespace a you",
    "start": "845250",
    "end": "851430"
  },
  {
    "text": "attach a debugger and you step through when you find out that it's calling such as some code in namespace C and that's",
    "start": "851430",
    "end": "856920"
  },
  {
    "text": "where the underlying core problem is the root cause with a micro service you",
    "start": "856920",
    "end": "862470"
  },
  {
    "text": "can't do that service a is returning 500s but you don't know why and it may be because",
    "start": "862470",
    "end": "868080"
  },
  {
    "text": "it's calling service C but you don't even know it's doing that so the service graph will tell you that and then",
    "start": "868080",
    "end": "873660"
  },
  {
    "text": "distributed tracing I'm sure it already knows llego Zipkin lights that stuff that's another very useful thing the",
    "start": "873660",
    "end": "880350"
  },
  {
    "text": "green tick is me saying that I think you should do these things all the time right and these are safe and great and",
    "start": "880350",
    "end": "886770"
  },
  {
    "text": "you should always do them so I have a demo",
    "start": "886770",
    "end": "892770"
  },
  {
    "text": "I hope you can read it because I can't make this terminal any bigger now okay",
    "start": "892770",
    "end": "901680"
  },
  {
    "text": "so I have some scripts to do the demo because I don't want to type I already",
    "start": "901680",
    "end": "907020"
  },
  {
    "text": "have a gke cluster to show you this in because they take a long time to spit up I recorded this over the VPN in the",
    "start": "907020",
    "end": "915180"
  },
  {
    "text": "hotel so the latency is it gives me time to talk it was deliberate I promise",
    "start": "915180",
    "end": "921899"
  },
  {
    "text": "so we have a one-load kubernetes cluster I get and I have downloaded the latest",
    "start": "921899",
    "end": "927750"
  },
  {
    "text": "Cisco 1.02 and I have already downloaded helm when you need help to install this",
    "start": "927750",
    "end": "933540"
  },
  {
    "text": "do so ok this is this is me installing",
    "start": "933540",
    "end": "939330"
  },
  {
    "text": "SDM into the cluster it's normally quite fast but the latency the latency was bad",
    "start": "939330",
    "end": "945200"
  },
  {
    "text": "what's interesting is that this this installs iste ió so stos is some pods",
    "start": "946160",
    "end": "953220"
  },
  {
    "text": "right stos is some workloads the str control plane it is code that runs but",
    "start": "953220",
    "end": "959160"
  },
  {
    "text": "also when you install this do it installs a lot of configuration so all",
    "start": "959160",
    "end": "964800"
  },
  {
    "text": "of this is is the default configuration for Sto it's not baked into the code",
    "start": "964800",
    "end": "970440"
  },
  {
    "text": "it's supplied in kubernetes config Maps you know like I said at the start that is a something you should do with",
    "start": "970440",
    "end": "975779"
  },
  {
    "text": "kubernetes that is a best practice is to have your configuration managed separately and provided through config",
    "start": "975779",
    "end": "980940"
  },
  {
    "text": "Maps and that's exactly what sto does so this is kind of what sto does out of the box you can go and read all of these",
    "start": "980940",
    "end": "986820"
  },
  {
    "text": "files they're actually quite interesting so under the Box it does a lot of stuff for you and observability is one of",
    "start": "986820",
    "end": "993839"
  },
  {
    "text": "those things which I'll show you it doesn't do everything though I think my",
    "start": "993839",
    "end": "1002089"
  },
  {
    "text": "cluster was in San Francisco as well so this is pretty slow",
    "start": "1002089",
    "end": "1008820"
  },
  {
    "text": "fast forward right it's neither it's neither",
    "start": "1010750",
    "end": "1016480"
  },
  {
    "text": "if I was hacking it would look really good but I'm just standing here",
    "start": "1019389",
    "end": "1024990"
  },
  {
    "text": "come on it's Deva you see sto knows how",
    "start": "1024990",
    "end": "1030038"
  },
  {
    "text": "to use kubernetes sto is installing horizontal pod auto scalars to describe sto control plane to kubernetes so",
    "start": "1030039",
    "end": "1037990"
  },
  {
    "text": "kubernetes know how to keep STR running so that sto can keep your application running must be done it's got a lot of",
    "start": "1037990",
    "end": "1049630"
  },
  {
    "text": "features",
    "start": "1049630",
    "end": "1051870"
  },
  {
    "text": "self abetik all order right t no it's not there we go there we go",
    "start": "1060159",
    "end": "1066529"
  },
  {
    "text": "right so history is installed I'd forgotten I'd recorded that now",
    "start": "1066529",
    "end": "1072440"
  },
  {
    "text": "going to deploy the book info application it's a sample micro-services application if you've looked at this Jo",
    "start": "1072440",
    "end": "1077570"
  },
  {
    "text": "or the documentation you've probably seen it I didn't run my own because I think that actually does confuse things",
    "start": "1077570",
    "end": "1083480"
  },
  {
    "text": "I'm not lazy I think actually if it's book info you know what book info is so you don't have to think about book info",
    "start": "1083480",
    "end": "1089809"
  },
  {
    "text": "I hope so we deployed looking for I think the lag was really bad here and",
    "start": "1089809",
    "end": "1097220"
  },
  {
    "text": "we'll start to see the the book info pods coming up",
    "start": "1097220",
    "end": "1102580"
  },
  {
    "text": "Superbad I should fast-forward show me some pods there's something I want to",
    "start": "1105910",
    "end": "1116000"
  },
  {
    "text": "take right so you can see with all the all the pots coming up this is standard",
    "start": "1116000",
    "end": "1121790"
  },
  {
    "text": "Cuban it is ya know file it only describes it only talks about one container in the pod but the pod can",
    "start": "1121790",
    "end": "1128120"
  },
  {
    "text": "have more than one container and we know that what is tio does is put that side car next to our application so this here",
    "start": "1128120",
    "end": "1135140"
  },
  {
    "text": "0 of 2 means that we're still waiting for this to start that we're waiting for two containers to start and one is the",
    "start": "1135140",
    "end": "1141950"
  },
  {
    "text": "application which is in the pods back in the pot llamo and the second one is the",
    "start": "1141950",
    "end": "1147200"
  },
  {
    "text": "envoy side car that we as a user do not tell kubernetes about when we describe",
    "start": "1147200",
    "end": "1152810"
  },
  {
    "text": "our applications in kubernetes we don't describe the side car because it's not part of the application is still injects",
    "start": "1152810",
    "end": "1160040"
  },
  {
    "text": "that it's joe does that automatically so as i say out of the box by default all",
    "start": "1160040",
    "end": "1166820"
  },
  {
    "text": "traffic goes through that side car because the default is to your configuration will inject it",
    "start": "1166820",
    "end": "1173200"
  },
  {
    "text": "it's that all of them product page go",
    "start": "1176640",
    "end": "1183580"
  },
  {
    "text": "okay so yeah six spots with our",
    "start": "1183580",
    "end": "1191800"
  },
  {
    "text": "application all with a sidecar this script just finds the public IP address",
    "start": "1191800",
    "end": "1197830"
  },
  {
    "text": "of the of the ingress point it's quite boring but it's necessary and then we",
    "start": "1197830",
    "end": "1205600"
  },
  {
    "text": "can go to that URL so this is book info",
    "start": "1205600",
    "end": "1213850"
  },
  {
    "text": "if everybody knows tells a website telling you about one book book details",
    "start": "1213850",
    "end": "1219940"
  },
  {
    "text": "are on the left fake reviews of the book are on the right some of the reviews have we keep hitting refresh some of the",
    "start": "1219940",
    "end": "1226870"
  },
  {
    "text": "reviews have this star rating and some do not because we are a be testing three",
    "start": "1226870",
    "end": "1232510"
  },
  {
    "text": "different versions of book info one shows no stars one shows them in black and one shows them in red",
    "start": "1232510",
    "end": "1239790"
  },
  {
    "text": "so we just hit that and refreshed it a whole bunch of time so we generated traffic by all of the micro-services",
    "start": "1243780",
    "end": "1250230"
  },
  {
    "text": "work together and gave us that book info page I know it's ugly but like six microservices work to give you that page",
    "start": "1250230",
    "end": "1256920"
  },
  {
    "text": "and we just did it a bunch of times so what I'm doing now is I'm just setting up again setting up a port forward it's",
    "start": "1256920",
    "end": "1263670"
  },
  {
    "text": "it's boring plumbing but I'm setting up a port forward to a part of sto called",
    "start": "1263670",
    "end": "1268770"
  },
  {
    "text": "key alley and that is an observability dashboard so one of the things we get",
    "start": "1268770",
    "end": "1275340"
  },
  {
    "text": "for free with this job well one of the things that's very useful in running a resilient application is observability",
    "start": "1275340",
    "end": "1280590"
  },
  {
    "text": "and the ability to get deep insights into your application and how it's running we have to log in to Kali and",
    "start": "1280590",
    "end": "1289380"
  },
  {
    "text": "now we've done that we can see that there is a kubernetes namespace default",
    "start": "1289380",
    "end": "1294480"
  },
  {
    "text": "with four things running in it like six pods but three of them were the different versions of the star rating",
    "start": "1294480",
    "end": "1300870"
  },
  {
    "text": "book so for morale applications and completely for free we have not",
    "start": "1300870",
    "end": "1306060"
  },
  {
    "text": "described this like we write a load of Yama that describes our application to",
    "start": "1306060",
    "end": "1312000"
  },
  {
    "text": "kubernetes and will soon we'll be describing it to ISTE oh we have not described this graph this is made",
    "start": "1312000",
    "end": "1318260"
  },
  {
    "text": "empirically a posterior eye I don't know what's easy to translate this is made",
    "start": "1318260",
    "end": "1323910"
  },
  {
    "text": "from the traffic that is being sent through the cluster it's amazing this is a simple",
    "start": "1323910",
    "end": "1329490"
  },
  {
    "text": "application but you see the graph of all the micro services Netflix House right it's huge it's thousands so you'd be",
    "start": "1329490",
    "end": "1336270"
  },
  {
    "text": "amazed how many people don't know this about their own set of micro services so",
    "start": "1336270",
    "end": "1341370"
  },
  {
    "text": "first step two to getting the most out of your system and making it the highest quality is to understand it so this is a",
    "start": "1341370",
    "end": "1348240"
  },
  {
    "text": "really really powerful tool to to understand it which is why I've put it in here and you can get a bunch of",
    "start": "1348240",
    "end": "1355290"
  },
  {
    "text": "different a bunch of different views from this thing running a little bit short on time so I will skip through",
    "start": "1355290",
    "end": "1361530"
  },
  {
    "text": "this then the next thing you want to do",
    "start": "1361530",
    "end": "1370350"
  },
  {
    "text": "to get your resiliency is to take advantage of the traffic routing in sto",
    "start": "1370350",
    "end": "1375780"
  },
  {
    "text": "this happens at layer seven so this understands the HTTP protocol and can do",
    "start": "1375780",
    "end": "1381270"
  },
  {
    "text": "more advanced things because it understands more about the intent of the",
    "start": "1381270",
    "end": "1387540"
  },
  {
    "text": "transaction because it can understand the HTTP header so we can describe we",
    "start": "1387540",
    "end": "1392640"
  },
  {
    "text": "can tell is tell about the different versions you see there were three versions of the star rating micro service kubernetes doesn't know anything",
    "start": "1392640",
    "end": "1399540"
  },
  {
    "text": "about that they all share the same labels so we just round robins traffic between them as far as its concerns they might as well be the same thing we know",
    "start": "1399540",
    "end": "1406470"
  },
  {
    "text": "there are three different versions of we know we should be treating them differently so we can tell is deal about that we can then start routing the",
    "start": "1406470",
    "end": "1414540"
  },
  {
    "text": "traffic so we can pin it all that the demo will show you that first of all we will say the a/b test is not ready yet",
    "start": "1414540",
    "end": "1421290"
  },
  {
    "text": "you know we have deployed version 2 and version 3 but they're only internal so we'll send all the traffic diversion one",
    "start": "1421290",
    "end": "1427290"
  },
  {
    "text": "and then we can start shifting it to to version 2 and version 3 so I can an a/b",
    "start": "1427290",
    "end": "1434190"
  },
  {
    "text": "test basically you can do Canaries that's a popular word but really that's just an a/b test with a much smaller",
    "start": "1434190",
    "end": "1441410"
  },
  {
    "text": "sample as far as I'm concerned and there's other things this do can do for you because we have this powerful Envoy",
    "start": "1441410",
    "end": "1447840"
  },
  {
    "text": "proxy in our network you can do really clever things like if your toric if one",
    "start": "1447840",
    "end": "1453450"
  },
  {
    "text": "application is serving XML and another application wants to consume Jason you",
    "start": "1453450",
    "end": "1458820"
  },
  {
    "text": "don't have to translate that in either application you can just tell envoy to do it the network will just transparently do that so if you can",
    "start": "1458820",
    "end": "1465330"
  },
  {
    "text": "describe to sto hey I just just deployed an application but it's legacy it's some",
    "start": "1465330",
    "end": "1470730"
  },
  {
    "text": "third party piece of software I bought and it only talks XML I want you to make",
    "start": "1470730",
    "end": "1476250"
  },
  {
    "text": "it look like it talks Jason to all of my other services right and that avoids you",
    "start": "1476250",
    "end": "1481470"
  },
  {
    "text": "writing a little another little micro service that tries to do that translation and sticking it in the",
    "start": "1481470",
    "end": "1487410"
  },
  {
    "text": "middle because you will probably get it wrong though there's bugs in all code why would you light that one that already exists so that's another step to",
    "start": "1487410",
    "end": "1493620"
  },
  {
    "text": "making your application more resilient I think the demo for this is quite good",
    "start": "1493620",
    "end": "1499110"
  },
  {
    "text": "so I'll do it quickly it's super super hard okay so we do the",
    "start": "1499110",
    "end": "1510240"
  },
  {
    "text": "setup I won't bore you with other yeah no files work I think I missed it I",
    "start": "1510240",
    "end": "1519180"
  },
  {
    "text": "missed it where is it",
    "start": "1519180",
    "end": "1522350"
  },
  {
    "text": "[Applause]",
    "start": "1535420",
    "end": "1538539"
  },
  {
    "text": "so the first thing we do we keep hitting refresh this is that traffic pinning so a normal user",
    "start": "1541870",
    "end": "1547220"
  },
  {
    "text": "now just gets version one right which didn't have any star ratings star rating is a new feature that we want to test we",
    "start": "1547220",
    "end": "1554720"
  },
  {
    "text": "want to test it real fast we want to get that feedback but we still want control or we still want to send most users to a",
    "start": "1554720",
    "end": "1560840"
  },
  {
    "text": "code path that we know works like most users don't want to crash it it should be resilient and then the new code path",
    "start": "1560840",
    "end": "1567950"
  },
  {
    "text": "is maybe maybe untested but we need to see the feature so we can tell sto to do",
    "start": "1567950",
    "end": "1575570"
  },
  {
    "text": "because we understand HTTP we're going to do something more clever than",
    "start": "1575570",
    "end": "1580790"
  },
  {
    "text": "kubernetes can do we're going to say that if you're logged in as the user Jason I think I can't couldn't type if",
    "start": "1580790",
    "end": "1590450"
  },
  {
    "text": "you're logged in as the user Jason then has however many times you hit refresh",
    "start": "1590450",
    "end": "1595580"
  },
  {
    "text": "you always get version 2 you always see those star ratings but that's not random a/b test that says that you know Jason",
    "start": "1595580",
    "end": "1602330"
  },
  {
    "text": "works for us he wants early access to v2 he's going to hammer that before we let",
    "start": "1602330",
    "end": "1607520"
  },
  {
    "text": "it use loose to the users and Jason will get v2 everybody else will get v1 but",
    "start": "1607520",
    "end": "1613220"
  },
  {
    "text": "that's based on looking at the HTTP header that says who is logged in right",
    "start": "1613220",
    "end": "1618320"
  },
  {
    "text": "so you can take you can do much more clever things like that you can send a new version just to the users in France",
    "start": "1618320",
    "end": "1624230"
  },
  {
    "text": "you can send a new version just to the users who are using alpha browsers because you think they're the kind of people who like to take risks right and",
    "start": "1624230",
    "end": "1632360"
  },
  {
    "text": "we'll maybe brain blame their browser if your website goes wrong I mean that's that's great I think we don't have time",
    "start": "1632360",
    "end": "1639590"
  },
  {
    "text": "for the next demo I don't think but that's showing you our back so we can",
    "start": "1639590",
    "end": "1646610"
  },
  {
    "text": "add it we can get this year to add actual resiliency features so there's a",
    "start": "1646610",
    "end": "1652250"
  },
  {
    "text": "few things we might want we might want a timeout say one application is being",
    "start": "1652250",
    "end": "1658190"
  },
  {
    "text": "slow this is another cascading failure right everything blocks waiting for it obviously you can write asynchronous",
    "start": "1658190",
    "end": "1664790"
  },
  {
    "text": "code but no everything will block waiting for it so we can tell this do that if a back-end",
    "start": "1664790",
    "end": "1670100"
  },
  {
    "text": "doesn't reply in two seconds it should it should just send a 500 as if the other end had done that right because",
    "start": "1670100",
    "end": "1677090"
  },
  {
    "text": "the other service is in a deadlock and it's just going to sit there forever so",
    "start": "1677090",
    "end": "1682190"
  },
  {
    "text": "we can tell this yo to just give up on your behalf right this is now code that you don't have to write in your",
    "start": "1682190",
    "end": "1688010"
  },
  {
    "text": "micro-services because it wasn't there because we remember we have that monolith and a call from you know name",
    "start": "1688010",
    "end": "1693920"
  },
  {
    "text": "space 8 in the in space seek it never failed it wouldn't have probably never wait that long either the whole thing is crashed or it hasn't now we've",
    "start": "1693920",
    "end": "1701330"
  },
  {
    "text": "introduced this network that might be super slow and super congested might be on the other side of the world if",
    "start": "1701330",
    "end": "1706970"
  },
  {
    "text": "service a doesn't get the level the service level the quality it needs from",
    "start": "1706970",
    "end": "1713690"
  },
  {
    "text": "service B then we just get sto to time it out and we don't have to add that to our application we can also have circuit",
    "start": "1713690",
    "end": "1721790"
  },
  {
    "text": "breakers which are more brutal version of the same thing and say that if a service fails three times within a",
    "start": "1721790",
    "end": "1728870"
  },
  {
    "text": "certain window we just we just decide that it's dead we just never talk to it again that makes things resilient if a service",
    "start": "1728870",
    "end": "1734330"
  },
  {
    "text": "is being flaky maybe the underlying hardware is failing then we can just do that as I said at the start we can get",
    "start": "1734330",
    "end": "1742400"
  },
  {
    "text": "sto to do retries for us and that's very configurable so we can tell it only",
    "start": "1742400",
    "end": "1747890"
  },
  {
    "text": "certain things should be retried we can tell it how often how fast to try we can",
    "start": "1747890",
    "end": "1753350"
  },
  {
    "text": "rate limit things this is really important for making your system resilient you know no software is free",
    "start": "1753350",
    "end": "1758510"
  },
  {
    "text": "of bugs and no software is infinitely scalable so you should test your software you should know how many",
    "start": "1758510",
    "end": "1764510"
  },
  {
    "text": "requests a second your micro service can cope with and still still meet your SLO",
    "start": "1764510",
    "end": "1771410"
  },
  {
    "text": "so still say return 99% of answers within 100 milliseconds or whatever is",
    "start": "1771410",
    "end": "1777950"
  },
  {
    "text": "susceptible and then you find out that that limit for this release is 1,200 RPS",
    "start": "1777950",
    "end": "1784610"
  },
  {
    "text": "and then you set a rate limit you say hey sto don't ever learn more than 1,200 RPS hit this so that again is another",
    "start": "1784610",
    "end": "1793820"
  },
  {
    "text": "key to resiliency and you you would also you would then describe that to kubernetes as well so that maybe when you to a thousand you would start to spit up",
    "start": "1793820",
    "end": "1801169"
  },
  {
    "text": "more copies of the party in anticipation a counterintuitive thing you can do to",
    "start": "1801169",
    "end": "1808039"
  },
  {
    "text": "increase resiliency is actually to induce introduced faults so sto can introduce delays and it can introduce",
    "start": "1808039",
    "end": "1813440"
  },
  {
    "text": "faults sorry like HTTP five hundreds but",
    "start": "1813440",
    "end": "1818779"
  },
  {
    "text": "this is this is so this is chaos testing if anybody's heard of chaos queue or chaos monkey these these things come",
    "start": "1818779",
    "end": "1824390"
  },
  {
    "text": "along and they kill AWS instance it's right and they kill pods at random and they make sure that your you know you",
    "start": "1824390",
    "end": "1831890"
  },
  {
    "text": "run a test while that is happening and then you know that your application can cope with it and it's resilient to it",
    "start": "1831890",
    "end": "1837289"
  },
  {
    "text": "right resilient to compute failing now we have distributed our application and",
    "start": "1837289",
    "end": "1843230"
  },
  {
    "text": "it's running all of these calls are across a network we have another failure mode the network might fail so what we",
    "start": "1843230",
    "end": "1849230"
  },
  {
    "text": "do is we're in staging certainly we get SEO to pretend that that network is slow",
    "start": "1849230",
    "end": "1854690"
  },
  {
    "text": "or to pretend that that network is unreliable and then we know that our",
    "start": "1854690",
    "end": "1860659"
  },
  {
    "text": "application we can test whether our application still copes with that either through code in the application or",
    "start": "1860659",
    "end": "1866600"
  },
  {
    "text": "through other things like rejoice and timeouts that we've configured it's yet to do so that may seem counterintuitive",
    "start": "1866600",
    "end": "1873549"
  },
  {
    "text": "there is an argument that you should do this in prod you should test in prod see charity majors talks there is an",
    "start": "1873549",
    "end": "1880669"
  },
  {
    "text": "argument you should have this running all the time but definitely in your staging environment where you're also",
    "start": "1880669",
    "end": "1886929"
  },
  {
    "text": "using you know doing soaked ESTs and using charlo generators and all that",
    "start": "1886929",
    "end": "1892490"
  },
  {
    "text": "kind of stuff you should have this kind of chaos running and as I say it's",
    "start": "1892490",
    "end": "1898070"
  },
  {
    "text": "counterintuitive but it does increase your resiliency and it's a service that sto can offer security this is your",
    "start": "1898070",
    "end": "1907100"
  },
  {
    "text": "resiliency against being attacked you know your if you miss configure things a",
    "start": "1907100",
    "end": "1912669"
  },
  {
    "text": "the internal part of your application may be the actual by no bank account",
    "start": "1912669",
    "end": "1918860"
  },
  {
    "text": "records part would only have been called by other things you know only half not",
    "start": "1918860",
    "end": "1924529"
  },
  {
    "text": "would not have had an API directly on it we accessed you know through other parts",
    "start": "1924529",
    "end": "1931190"
  },
  {
    "text": "of the monolith and I may be doing authentication that's not good enough now because there is this thing we'll",
    "start": "1931190",
    "end": "1936799"
  },
  {
    "text": "have to listen on an API of its own so if somebody can break into any pod any other part of your infrastructure they",
    "start": "1936799",
    "end": "1943639"
  },
  {
    "text": "now have access to that in the way that they didn't before so you want mutual TLS for encryption you want strong",
    "start": "1943639",
    "end": "1950419"
  },
  {
    "text": "authentication to know which services you're talking to and you can then turn",
    "start": "1950419",
    "end": "1956720"
  },
  {
    "text": "on service authorization which says that if I am the bank account records only",
    "start": "1956720",
    "end": "1963320"
  },
  {
    "text": "the UI component can talk to me because it displays balances and that's fine but",
    "start": "1963320",
    "end": "1968629"
  },
  {
    "text": "the the micro service I've got that on those new users should never need to see anybody's bank account records so just",
    "start": "1968629",
    "end": "1974899"
  },
  {
    "text": "ban it from talking to me at all because if it's ever trying then that's a mistake it's an error in the code or",
    "start": "1974899",
    "end": "1981320"
  },
  {
    "text": "that part has been hacked so we can do that when we have TLS in place that was",
    "start": "1981320",
    "end": "1986419"
  },
  {
    "text": "what the last time I was but I've kind of I've kind of run out of time and then your other things that you just don't",
    "start": "1986419",
    "end": "1992809"
  },
  {
    "text": "want to re-implement or that you don't want to bother using a library for in",
    "start": "1992809",
    "end": "1998059"
  },
  {
    "text": "every application things like injecting cause headers any other kind of security middleware JWT validation xxs mitigation",
    "start": "1998059",
    "end": "2008710"
  },
  {
    "text": "any kind of web application firewall function you can have sto do you just describe your application you say you",
    "start": "2008710",
    "end": "2016750"
  },
  {
    "text": "can see that this thing is listening on port 80 yes it's talking the HTTP protocol and this isn't a REST API it's actually",
    "start": "2016750",
    "end": "2023259"
  },
  {
    "text": "talking that to a browser so I want you to do order the standard stuff like you know injection attack detection and",
    "start": "2023259",
    "end": "2031409"
  },
  {
    "text": "course header injection so this just means that you don't have to download a library into your application to do that",
    "start": "2031409",
    "end": "2037090"
  },
  {
    "text": "hooking into your build system check that it's working properly upgraded every time there's a patch you just let",
    "start": "2037090",
    "end": "2042730"
  },
  {
    "text": "the network do that and you know I say all of those things about it's been it's",
    "start": "2042730",
    "end": "2048220"
  },
  {
    "text": "complicated to have your app do it of course a lot of people just don't do it at all because it's too hard but with oh yeah one yeah more file now sto will do",
    "start": "2048220",
    "end": "2055510"
  },
  {
    "text": "that for you so sto has a lot of power",
    "start": "2055510",
    "end": "2061000"
  },
  {
    "text": "I think the demos that you see are normally around the clever routing that",
    "start": "2061000",
    "end": "2066760"
  },
  {
    "text": "you can do and that's it's great it's great to have those features but the",
    "start": "2066760",
    "end": "2071770"
  },
  {
    "text": "network is now a really important part of your application it has a really important effect on how all of the",
    "start": "2071770",
    "end": "2078700"
  },
  {
    "text": "different micro services work together as one unit and that one unit has to work as one thing so that your users",
    "start": "2078700",
    "end": "2087398"
  },
  {
    "text": "have a good experience right so in the same way that you need to tell kubernetes a lot more than just please",
    "start": "2087399",
    "end": "2094000"
  },
  {
    "text": "run this pod you need to tell this do a lot more than please just move my traffic because the network was doing",
    "start": "2094000",
    "end": "2099490"
  },
  {
    "text": "that for me if it just moves the traffic you get observability for free which is a really good step towards a resilient",
    "start": "2099490",
    "end": "2106750"
  },
  {
    "text": "system because if you can observe it you could control it and understand it but also you can configure sto to do the",
    "start": "2106750",
    "end": "2112990"
  },
  {
    "text": "reach eyes and the timeouts and everything else that we've that we've seen some of the things I went quite",
    "start": "2112990",
    "end": "2119619"
  },
  {
    "text": "fast some of the items had like a yellow question mark which meant sometimes you",
    "start": "2119619",
    "end": "2125020"
  },
  {
    "text": "need this so a retry is not always safe and some things had a Red Cross which actually means you",
    "start": "2125020",
    "end": "2131380"
  },
  {
    "text": "really only want to do this in an emergency so you can do things like Laura love the traffic and there are",
    "start": "2131380",
    "end": "2137619"
  },
  {
    "text": "privacy implications to that security implications to that but if something is going really wrong you can get SEO to",
    "start": "2137619",
    "end": "2143770"
  },
  {
    "text": "keep you know keep the service up keep sending traffic to the production instance but also send a copy of that",
    "start": "2143770",
    "end": "2149170"
  },
  {
    "text": "traffic to your laptop so you can read it and try to work out what's going on so there's a few options that you would",
    "start": "2149170",
    "end": "2155470"
  },
  {
    "text": "leave turned off but you have a Hamel file ready to to go and turn them on I",
    "start": "2155470",
    "end": "2160770"
  },
  {
    "text": "think just about on time so that's what I want to say thank you very much",
    "start": "2160770",
    "end": "2167220"
  },
  {
    "text": "happy to take any questions that's a",
    "start": "2170660",
    "end": "2209970"
  },
  {
    "text": "really good question so the question was what if you're not running in kubernetes sto by the way runs on like console",
    "start": "2209970",
    "end": "2217080"
  },
  {
    "text": "amazed off the older staff but if you're running in server less a CI virtual cubelet then the newer systems of what",
    "start": "2217080",
    "end": "2224310"
  },
  {
    "text": "do we do I guess what I would I think you do want the same features and the",
    "start": "2224310",
    "end": "2230760"
  },
  {
    "text": "same technology is actually giving you that soak a native serve is a server this framework or I take it can scale to",
    "start": "2230760",
    "end": "2237480"
  },
  {
    "text": "zero and all of that stuff it's based on Sto so two things that are on K Knights you serve even though their server lists you",
    "start": "2237480",
    "end": "2244320"
  },
  {
    "text": "don't have to deal with the deployments or the rolling upgrades because it's a server that's framework the the traffic",
    "start": "2244320",
    "end": "2249990"
  },
  {
    "text": "between them is still going through history okay native server installs this Joe and you just don't see it so we're already like one layer of abstraction",
    "start": "2249990",
    "end": "2256770"
  },
  {
    "text": "higher than this the other thing is that Envoy the proxy used by sto just last",
    "start": "2256770",
    "end": "2262200"
  },
  {
    "text": "week released like a library version for iOS and Android so now even if",
    "start": "2262200",
    "end": "2268710"
  },
  {
    "text": "everything is hidden behind a virtual cubelet and you just sit in hdto you just deploy a blob of code to run on SH",
    "start": "2268710",
    "end": "2274920"
  },
  {
    "text": "or Heroku or something and you can't take control of it you can at least have the client do timeouts and retries",
    "start": "2274920",
    "end": "2281960"
  },
  {
    "text": "because you can now download air void as a library and you can link it against your Android application and even if the",
    "start": "2281960",
    "end": "2288270"
  },
  {
    "text": "server as a whole just fails and says 500 you can get me the Android application to retry and then to time it",
    "start": "2288270",
    "end": "2294420"
  },
  {
    "text": "out because envoy is now being released as a life so does that help it's more about gear",
    "start": "2294420",
    "end": "2300630"
  },
  {
    "text": "it's about what you have to do at the end of the day is get those air voids in there next all of the components in your",
    "start": "2300630",
    "end": "2305820"
  },
  {
    "text": "system yes I guess if you're using a virtual cubelet I don't know how you do if you're using faregates virtual",
    "start": "2305820",
    "end": "2311460"
  },
  {
    "text": "cubelet I don't know how you do that because they take care of the computer fabric and you don't have enough control to inject envoi but a surprising amount",
    "start": "2311460",
    "end": "2319920"
  },
  {
    "text": "of the systems that that do present that higher level of abstraction like okay",
    "start": "2319920",
    "end": "2325830"
  },
  {
    "text": "native serve actually have this stuff built in and will do it for you and in the worst case you just have to client do it oh that helps",
    "start": "2325830",
    "end": "2335330"
  },
  {
    "text": "yes cool let's all go get some coffee thank you again",
    "start": "2335960",
    "end": "2342470"
  }
]