[
  {
    "text": "doors doors are closed I don't know folks we all dropped in here for the next 25 30ish",
    "start": "760",
    "end": "8280"
  },
  {
    "text": "minutes trying to be I'll try to [Music] be quick I don't want to hold or stay in",
    "start": "8280",
    "end": "18000"
  },
  {
    "text": "between all of you and Friday drinks but thank you thank you all for",
    "start": "18000",
    "end": "24359"
  },
  {
    "text": "coming for the I guess the last Talk of the day uh and the last",
    "start": "24359",
    "end": "30679"
  },
  {
    "text": "talk of this cubec Con on Friday Friday night almost and",
    "start": "30679",
    "end": "39160"
  },
  {
    "text": "today we're going to talk about uh spify deployments in non kubernetes",
    "start": "39160",
    "end": "44800"
  },
  {
    "text": "environments I know that's probably when it talk when it comes to spify most most",
    "start": "44800",
    "end": "51879"
  },
  {
    "text": "of you think about it as a something for kubernetes but spify is a standard build",
    "start": "51879",
    "end": "59559"
  },
  {
    "text": "for basically beyond that and be able to be interoperable whether you're running on",
    "start": "59559",
    "end": "65478"
  },
  {
    "text": "kubernetes or I don't know uh Linux VMS your windows barom metal",
    "start": "65479",
    "end": "73479"
  },
  {
    "text": "micos server s Etc So today we're going to talk about like what it means and how",
    "start": "73479",
    "end": "79880"
  },
  {
    "text": "to how to reason about spey on kubernetes",
    "start": "79880",
    "end": "84960"
  },
  {
    "text": "environment start with a quick introductions hi um I'm n I'm a software",
    "start": "84960",
    "end": "91400"
  },
  {
    "text": "engineer at spiral where uh we build an implementation of the spiffy spec um and",
    "start": "91400",
    "end": "97920"
  },
  {
    "text": "I've been there for around a year now um before that I worked um uh in security",
    "start": "97920",
    "end": "103600"
  },
  {
    "text": "and then in as a systems engineer at Cloud flare um and outside of work I like to go on runs um hike and travel",
    "start": "103600",
    "end": "111000"
  },
  {
    "text": "awesome my name is Eli n and um I think 70% maybe of people here in person",
    "start": "111000",
    "end": "120399"
  },
  {
    "text": "know me but for those who not I'm co-founder and CTO at spiral I used to",
    "start": "120399",
    "end": "127239"
  },
  {
    "text": "run and I built the world largest deployment of spify Open Source implementation known as Spire in the",
    "start": "127239",
    "end": "134920"
  },
  {
    "text": "past I'm also a co-author of the books called solving the bottom Turtle if you",
    "start": "134920",
    "end": "140840"
  },
  {
    "text": "go to spy. iBook it's a free PDF book that's I highly recommend everyone to",
    "start": "140840",
    "end": "147280"
  },
  {
    "text": "read if you want to kind of get deep into topics of identity workload",
    "start": "147280",
    "end": "152319"
  },
  {
    "text": "identity authentication all this stuff and uh yeah uh spiral building a",
    "start": "152319",
    "end": "160640"
  },
  {
    "text": "commercial workload identity implementation so I do not certainly",
    "start": "160640",
    "end": "166800"
  },
  {
    "text": "expect everyone who came to this talk know what SP is so I'll I'll do a quick",
    "start": "166800",
    "end": "171920"
  },
  {
    "text": "recap of what is that why we need it how it works on a high level and then we",
    "start": "171920",
    "end": "177800"
  },
  {
    "text": "kind of dive in NAD we will diving into all the kind of interesting",
    "start": "177800",
    "end": "183239"
  },
  {
    "text": "details um so what is piy raise your hand if you don't know",
    "start": "183239",
    "end": "190280"
  },
  {
    "text": "what Spy is all right perfect we have a few people so spif stands for secure",
    "start": "190280",
    "end": "197959"
  },
  {
    "text": "production identity framework for everyone uh it is cncf graduated project",
    "start": "197959",
    "end": "205280"
  },
  {
    "text": "for three plus years I think correct me if I'm wrong",
    "start": "205280",
    "end": "210760"
  },
  {
    "text": "um it started on the shoulders of like how production secure production",
    "start": "210760",
    "end": "216720"
  },
  {
    "text": "infrastructure build in a companies like Facebook Google Netflix and others and",
    "start": "216720",
    "end": "222599"
  },
  {
    "text": "incorporates kind of trying to generalize all this experience and how",
    "start": "222599",
    "end": "228280"
  },
  {
    "text": "you start with like really strong cryptographic identity and how you build all your",
    "start": "228280",
    "end": "233959"
  },
  {
    "text": "systems on top of that so it's a specification up specification you can",
    "start": "233959",
    "end": "239120"
  },
  {
    "text": "find it uh in their GitHub it's pretty",
    "start": "239120",
    "end": "245799"
  },
  {
    "text": "nice Sunday read uh so in more details what is that",
    "start": "245799",
    "end": "252480"
  },
  {
    "text": "right so specification describes multiple multiple Parts like what is a",
    "start": "252480",
    "end": "258160"
  },
  {
    "text": "spify ID and uh what is what do you do with that so spy ID is something then",
    "start": "258160",
    "end": "264080"
  },
  {
    "text": "I'll go into details something that goes what into what we called spey verifiable identity",
    "start": "264080",
    "end": "270440"
  },
  {
    "text": "document and uh standard describes other other parts but the biggest the biggest",
    "start": "270440",
    "end": "275639"
  },
  {
    "text": "thing is like how your workload can go from nothing to having a sense of",
    "start": "275639",
    "end": "284240"
  },
  {
    "text": "identity right and what is a what is the standard of this identity how this",
    "start": "284240",
    "end": "291199"
  },
  {
    "text": "identity can be proved to other software Services through authentication",
    "start": "291199",
    "end": "297840"
  },
  {
    "text": "um what is a me mechanism of a federation and there is a part of the specification that's like describe how",
    "start": "297840",
    "end": "305280"
  },
  {
    "text": "two different trust domains and spey Trust domains is another part of the",
    "start": "305280",
    "end": "310639"
  },
  {
    "text": "specification how they can be Federated with each other right uh so let's dive",
    "start": "310639",
    "end": "316600"
  },
  {
    "text": "in so what is a spify IDE right you can think about it as a basically a u stream",
    "start": "316600",
    "end": "322440"
  },
  {
    "text": "containing few parts the vi the trust domain and a path part the trust pretty",
    "start": "322440",
    "end": "330280"
  },
  {
    "text": "familiar probably like any other domain name and the path is a very interesting",
    "start": "330280",
    "end": "337800"
  },
  {
    "text": "component so it could be as simple as on kind of that example my service F or bar",
    "start": "337800",
    "end": "344240"
  },
  {
    "text": "but you can structure path in a way that's basically follows",
    "start": "344240",
    "end": "349800"
  },
  {
    "text": "your uh organizational principles right it could be you can structure it in",
    "start": "349800",
    "end": "355319"
  },
  {
    "text": "different departments or it can be closer to how do you run like I don't know know your applications in the",
    "start": "355319",
    "end": "361840"
  },
  {
    "text": "different G locations like contains information oh is it running in EU region or it's running in us because",
    "start": "361840",
    "end": "369199"
  },
  {
    "text": "this is something that your organization May care about um so again structure uh",
    "start": "369199",
    "end": "374440"
  },
  {
    "text": "you probably see some familiarity things and familiar things there especially if you used to run or you run east you",
    "start": "374440",
    "end": "384599"
  },
  {
    "text": "right so we use a nam space and a service account principle so",
    "start": "384599",
    "end": "391560"
  },
  {
    "text": "what do we do with the string the string goes into what's called this SP verifiable identity document and in this",
    "start": "391880",
    "end": "399880"
  },
  {
    "text": "sense p is not kind of net new standard I mentioned that it built on shoulders",
    "start": "399880",
    "end": "406080"
  },
  {
    "text": "of what is exist in there it's X9 and JWT so this strings p8 goes inside the",
    "start": "406080",
    "end": "415720"
  },
  {
    "text": "X5 document and therefore anyone can verify it and you can trust the",
    "start": "415720",
    "end": "422720"
  },
  {
    "text": "information that inside it uh what it gives you is that you can use this information like SP ID for your",
    "start": "422720",
    "end": "429520"
  },
  {
    "text": "authorization systems and use authorization decisions based based on it because you you can trust this",
    "start": "429520",
    "end": "436520"
  },
  {
    "text": "information uh how do you verify it based on a trust bundle and a trust",
    "start": "436520",
    "end": "441720"
  },
  {
    "text": "bundle is basically set of uh public Keys that's used to sign that's used to",
    "start": "441720",
    "end": "449120"
  },
  {
    "text": "verify y the spe identities",
    "start": "449120",
    "end": "454919"
  },
  {
    "text": "and now as the we get in into the more interesting Parts it's like okay here's",
    "start": "454919",
    "end": "461039"
  },
  {
    "text": "a workload how it's get an identity and it's done through what's called a",
    "start": "461039",
    "end": "466639"
  },
  {
    "text": "workloud API it is a no local Unix domain socket uh the prod above it's a",
    "start": "466639",
    "end": "473960"
  },
  {
    "text": "JPC service the prod above definition is a part of a standard uh",
    "start": "473960",
    "end": "480159"
  },
  {
    "text": "so any implementation that's claimed to be spey compatible like your workloads",
    "start": "480159",
    "end": "486560"
  },
  {
    "text": "will work with them in the same way what I describe is how workload G",
    "start": "486560",
    "end": "494199"
  },
  {
    "text": "identity and in which format and how to get a trust bundle in a spify world or",
    "start": "494199",
    "end": "503159"
  },
  {
    "text": "in a spify view of the world there is no like workload doesn't have a say like",
    "start": "503159",
    "end": "508919"
  },
  {
    "text": "what what should go into identity identity assigned to workload the only",
    "start": "508919",
    "end": "515880"
  },
  {
    "text": "thing that workload can do is to request identity in one or another",
    "start": "515880",
    "end": "521839"
  },
  {
    "text": "format so uh and now is kind of interesting part of so the the aration",
    "start": "521839",
    "end": "528560"
  },
  {
    "text": "is not like really part of a standard it's up to spif implementation to do",
    "start": "528560",
    "end": "535160"
  },
  {
    "text": "this in one or another way so here is like we're describing how the open",
    "start": "535160",
    "end": "541120"
  },
  {
    "text": "source implementation like Spire for instance doing um do it adastation of a workload",
    "start": "541120",
    "end": "550440"
  },
  {
    "text": "so spify agent exposes uh workload API as I mentioned",
    "start": "550440",
    "end": "556399"
  },
  {
    "text": "it's a unix's domain socket so all the workloads on that note will go to that",
    "start": "556399",
    "end": "561800"
  },
  {
    "text": "socket and after that agent can learn the process ID of the requester so with",
    "start": "561800",
    "end": "569519"
  },
  {
    "text": "this information agent can go and basically interrogate different systems",
    "start": "569519",
    "end": "574800"
  },
  {
    "text": "to learn more about the software process so what what agent can do is to go and",
    "start": "574800",
    "end": "580320"
  },
  {
    "text": "ask uh Linux Kel and learn information about uh the process from it right so",
    "start": "580320",
    "end": "586839"
  },
  {
    "text": "it's like uh which path it's running under which user or under which uh group",
    "start": "586839",
    "end": "593560"
  },
  {
    "text": "or that process may be something that's running inside a Docker container",
    "start": "593560",
    "end": "600480"
  },
  {
    "text": "and it might be running inside a kubernetes so agent can go and ask like",
    "start": "600480",
    "end": "605680"
  },
  {
    "text": "a Docker demon and kubernetes API like",
    "start": "605680",
    "end": "611040"
  },
  {
    "text": "hey what do you know about this process right and and basically learn all The",
    "start": "611040",
    "end": "616640"
  },
  {
    "text": "Primitives like from kubernetes like the whole specification of a PO so all this",
    "start": "616640",
    "end": "623560"
  },
  {
    "text": "information can be used by an implementation to provide an identity",
    "start": "623560",
    "end": "628680"
  },
  {
    "text": "right but the G it's like how how it is done it's up to concrete and",
    "start": "628680",
    "end": "633760"
  },
  {
    "text": "implementation so with that kind of very quick and basic introduction into the",
    "start": "633760",
    "end": "642639"
  },
  {
    "text": "what Bey I will pass it to Nadine to continue",
    "start": "642639",
    "end": "648200"
  },
  {
    "text": "thanks Eli um yeah so as Eli kind of like now introduced the concepts of um",
    "start": "648200",
    "end": "654760"
  },
  {
    "text": "spiffy and I'm going to talk more about what um using spiffy in the real world looks like and what um different",
    "start": "654760",
    "end": "661079"
  },
  {
    "text": "deployments look like um so just I want to do like a quick show of hands how many people have deployed spiffy in",
    "start": "661079",
    "end": "667920"
  },
  {
    "text": "kubernetes before okay and now how many people have deployed it in",
    "start": "667920",
    "end": "674720"
  },
  {
    "text": "Linux okay so not not as many as kubernetes um and so that's kind of like",
    "start": "674720",
    "end": "680000"
  },
  {
    "text": "why I wanted to do this talk is because I realized that um spiffy as we said is",
    "start": "680000",
    "end": "685240"
  },
  {
    "text": "meant to be for everyone and that's because the idea of spiffy is that with a single system you can give identities",
    "start": "685240",
    "end": "691760"
  },
  {
    "text": "to any of your workloads regardless of where they're running and what platform um they're running on um but most of the",
    "start": "691760",
    "end": "698839"
  },
  {
    "text": "uh Focus has been on spiffy deployments in kubernetes and so this talk is going to focus more on deployments in uh all",
    "start": "698839",
    "end": "706839"
  },
  {
    "text": "different flavors of Linux and how those differ from from kubernetes um before we get started with",
    "start": "706839",
    "end": "714480"
  },
  {
    "text": "um kubernetes I want to I mean with Linux I want to first um explain what a kubernetes deployment looks like for",
    "start": "714480",
    "end": "721360"
  },
  {
    "text": "spiffy um so you have um a workload which I have here in green um and you",
    "start": "721360",
    "end": "727399"
  },
  {
    "text": "want to give it an identity so typically um you want to deploy what's called what",
    "start": "727399",
    "end": "732519"
  },
  {
    "text": "we're going to call a spiffy agent on the same node um as the workload that you want to give an identity to and",
    "start": "732519",
    "end": "738920"
  },
  {
    "text": "that's because um as uh Eli mentioned the workload API um that uses um a Unix",
    "start": "738920",
    "end": "745120"
  },
  {
    "text": "domain socket and so the workload is going to reach out to the agent over",
    "start": "745120",
    "end": "750360"
  },
  {
    "text": "that um Unix domain socket and then the uh agent is going to do attestation of",
    "start": "750360",
    "end": "756360"
  },
  {
    "text": "the workload um and it typically does that in kubernetes by talking to the cuet so the point here is that you want",
    "start": "756360",
    "end": "763959"
  },
  {
    "text": "to um have one agent run in every single uh node that you have in kubernetes and",
    "start": "763959",
    "end": "770320"
  },
  {
    "text": "so to do that in kubernetes you typically run this agent as a Damon set and that will ensure that you get um one",
    "start": "770320",
    "end": "777000"
  },
  {
    "text": "of these agents on every single node um that's a A kubernetes Primitive that that will do that for you um and once",
    "start": "777000",
    "end": "784639"
  },
  {
    "text": "you deploy this uh spiffy agent then um just like anything in kubernetes they",
    "start": "784639",
    "end": "790000"
  },
  {
    "text": "all get configured um with the same type of configuration that they pull from the kubernetes API server um I guess one",
    "start": "790000",
    "end": "798160"
  },
  {
    "text": "final thing I want to talk about here is that um your spiffy agent does attestation by talking to the cuet and",
    "start": "798160",
    "end": "804720"
  },
  {
    "text": "in order to talk to the cuet your spify agent needs um access uh special permissions uh to do that so um there's",
    "start": "804720",
    "end": "814399"
  },
  {
    "text": "a couple of features that I've mentioned here um that you need when you are trying to deploy this Biffy agent um and",
    "start": "814399",
    "end": "821040"
  },
  {
    "text": "so in kubernetes you have a lot of built-in Primitives that make it very easy to run this Biffy agent so the",
    "start": "821040",
    "end": "827920"
  },
  {
    "text": "first one um is just like installing the binary on every uh node uh the agent",
    "start": "827920",
    "end": "834399"
  },
  {
    "text": "binary because this is running in kubernetes everything runs as a container image so you don't need to",
    "start": "834399",
    "end": "840440"
  },
  {
    "text": "think about um the underlying architecture of your nodes and how to package your agent you just have a",
    "start": "840440",
    "end": "845680"
  },
  {
    "text": "container image and it runs across all of your nodes um the second part as I mentioned with a Damon set you get an",
    "start": "845680",
    "end": "852279"
  },
  {
    "text": "agent in every single um node in your kubernetes cluster they're all configured in the same way and the other",
    "start": "852279",
    "end": "858560"
  },
  {
    "text": "thing that you get here is that if your uh agent crashes for some reason um with",
    "start": "858560",
    "end": "864120"
  },
  {
    "text": "a Damon set kubernetes will automatically restart that for you um and then the fin thing there is just um",
    "start": "864120",
    "end": "870759"
  },
  {
    "text": "as we as I said before your agent needs um to do attestation and in order to do",
    "start": "870759",
    "end": "877199"
  },
  {
    "text": "that it needs privileged access and in kubernetes you can do that with the security context um you just set",
    "start": "877199",
    "end": "882680"
  },
  {
    "text": "security context to privilege um so that's kubernetes now let's talk about how we get those same features in Linux",
    "start": "882680",
    "end": "889839"
  },
  {
    "text": "and you're going to see that um it gets a little bit more complex and you need a couple more systems uh to get all of",
    "start": "889839",
    "end": "896320"
  },
  {
    "text": "these features so here's an example um um deployment in Linux where we have two",
    "start": "896320",
    "end": "902320"
  },
  {
    "text": "VMS um and they each have a workload on there that you want to give an identity to now imagine that um these two VMS",
    "start": "902320",
    "end": "910639"
  },
  {
    "text": "have two different uh flavors of Linux maybe one is Debian and the other one is uh Red Hat well you're you're going to",
    "start": "910639",
    "end": "917639"
  },
  {
    "text": "need to think about how to install your spfy agent on there and how to package it so that you can distribute it to all",
    "start": "917639",
    "end": "923759"
  },
  {
    "text": "of your nodes so in in this example you would need to package your spfy agent probably as a DE package and then also",
    "start": "923759",
    "end": "930279"
  },
  {
    "text": "as an RPM package that's thing number one you got to figure out uh thing number two is you now have your spiffy",
    "start": "930279",
    "end": "937000"
  },
  {
    "text": "agent uh packaged but you want it to run on every one of your nodes uh so in Linux that requires some sort of",
    "start": "937000",
    "end": "943639"
  },
  {
    "text": "configuration management um configuration management is something that allows you to say what the state of",
    "start": "943639",
    "end": "950000"
  },
  {
    "text": "the VM um you want and then it will um ensure that that State uh exists you if",
    "start": "950000",
    "end": "956279"
  },
  {
    "text": "you've ever used something like anible Chef PU it um salt stack these are all examples of configuration management",
    "start": "956279",
    "end": "963319"
  },
  {
    "text": "software um the other thing you need is probably some sort of like file that",
    "start": "963319",
    "end": "968720"
  },
  {
    "text": "configures the agent Um this can also uh be distributed to all of your nodes using your configuration management",
    "start": "968720",
    "end": "975720"
  },
  {
    "text": "software um and then if your agent crashes um your configuration management",
    "start": "975720",
    "end": "982160"
  },
  {
    "text": "software isn't going to uh fix that for you it won't actually restart it so you need something like systemd to rest",
    "start": "982160",
    "end": "989120"
  },
  {
    "text": "start um your agent and the final piece here is for attestation in Linux um your agent",
    "start": "989120",
    "end": "996120"
  },
  {
    "text": "typically talks to the kernel um and to make the correct um CIS admin calls that",
    "start": "996120",
    "end": "1001480"
  },
  {
    "text": "that are necessary there um you uh need your agent to either run as roots or to",
    "start": "1001480",
    "end": "1008040"
  },
  {
    "text": "run uh with Linux capabilities um and Linux capabilities basically they allow",
    "start": "1008040",
    "end": "1013279"
  },
  {
    "text": "you to run um your agent as a different user and then you can just give CER",
    "start": "1013279",
    "end": "1019079"
  },
  {
    "text": "permissions to that user um that are that are sort of like higher privileged",
    "start": "1019079",
    "end": "1024240"
  },
  {
    "text": "um actions that it can do um all right so this kind of summarizes what I've",
    "start": "1024240",
    "end": "1030319"
  },
  {
    "text": "talked about before um but as you can see in kubernetes you have a lot of these inbuilt things like a Damon set um",
    "start": "1030319",
    "end": "1037160"
  },
  {
    "text": "container images and um the security context that make it very easy to run your agent and in Linux um you'll have",
    "start": "1037160",
    "end": "1044640"
  },
  {
    "text": "to use a couple other uh things here like um figuring out how to package your",
    "start": "1044640",
    "end": "1050240"
  },
  {
    "text": "binary um configuration management um systemd and then thinking",
    "start": "1050240",
    "end": "1056240"
  },
  {
    "text": "about um Linux capabilities or running your agent as rout all right um so I've sort of talked",
    "start": "1056240",
    "end": "1063440"
  },
  {
    "text": "about the um agent so far um now I kind of want to focus more on workloads and",
    "start": "1063440",
    "end": "1069280"
  },
  {
    "text": "what it looks like when you have workloads um in Linux versus kubernetes um so in like I mentioned",
    "start": "1069280",
    "end": "1076480"
  },
  {
    "text": "before um your attestation in kubernetes is done um by talking to by the agent",
    "start": "1076480",
    "end": "1082200"
  },
  {
    "text": "talking to the cuet and um learning something about the workload so that it can give it an identity um these are",
    "start": "1082200",
    "end": "1089320"
  },
  {
    "text": "some of the things that the agent can learn um from the cuet about the about",
    "start": "1089320",
    "end": "1095039"
  },
  {
    "text": "the workload it can learn um the Pod name of the workload it can learn um any",
    "start": "1095039",
    "end": "1100080"
  },
  {
    "text": "of the labels it can learn what name space it's running in um the cluster name and also the node name so a lot of",
    "start": "1100080",
    "end": "1106799"
  },
  {
    "text": "these are all Concepts that come bu built in with kubernetes that are sort of like the structure that kubernetes",
    "start": "1106799",
    "end": "1112320"
  },
  {
    "text": "has in place in order to run your workloads um in the case of Linux um you",
    "start": "1112320",
    "end": "1118240"
  },
  {
    "text": "do a testation in the kernel and the kinds of um identifiers that you can uh",
    "start": "1118240",
    "end": "1123600"
  },
  {
    "text": "learn about a a workload are going to be um the host name of the VM where your",
    "start": "1123600",
    "end": "1129120"
  },
  {
    "text": "workload is running um the Linux user and group uh the and then the binary",
    "start": "1129120",
    "end": "1135919"
  },
  {
    "text": "path uh the complete binary path or the hash of the binary and so now that you've seen these identifiers I want to show how uh you",
    "start": "1135919",
    "end": "1143520"
  },
  {
    "text": "can use them to build different spiffy IDs that you can give your workloads um so here's an example with",
    "start": "1143520",
    "end": "1150480"
  },
  {
    "text": "kubernetes I have um this deployment in one kubernetes cluster uh with two",
    "start": "1150480",
    "end": "1156640"
  },
  {
    "text": "different nodes um and then uh everything is running in the same",
    "start": "1156640",
    "end": "1161720"
  },
  {
    "text": "namespace um but I have three workloads uh one web server and then two databases",
    "start": "1161720",
    "end": "1167880"
  },
  {
    "text": "which are replicas of of each other but the replicas are running on two different nodes um so I can now use the",
    "start": "1167880",
    "end": "1174000"
  },
  {
    "text": "kubernetes identifiers to give these workloads different identities uh based",
    "start": "1174000",
    "end": "1180120"
  },
  {
    "text": "on the types of authorization policies that I want to write on top of my spiffy IDs so we'll come back to that in a",
    "start": "1180120",
    "end": "1186760"
  },
  {
    "text": "second um but for now let's look at like different spiffy IDs that you can um build here so if you um for example",
    "start": "1186760",
    "end": "1194600"
  },
  {
    "text": "include just the um the the node name in your spiffy ID then you're going to give",
    "start": "1194600",
    "end": "1201720"
  },
  {
    "text": "um both the web server and the first replica of the database um the same",
    "start": "1201720",
    "end": "1207400"
  },
  {
    "text": "spiffy ID um and then they would have spiffy ID like spiffy trust domain and",
    "start": "1207400",
    "end": "1213520"
  },
  {
    "text": "then VM uh one 123 and the other replica would have the spiffy ID um spiffy trust",
    "start": "1213520",
    "end": "1220559"
  },
  {
    "text": "domain VM 456 um if you wanted to give each of these pods their own uh spiffy ID then",
    "start": "1220559",
    "end": "1228880"
  },
  {
    "text": "you can include the Pod name in your spiffy ID and that's the second example that I have there and then each of those",
    "start": "1228880",
    "end": "1234760"
  },
  {
    "text": "would get a different uh spiffy ID and then imagine that instead you want to give the two uh databases the same",
    "start": "1234760",
    "end": "1241480"
  },
  {
    "text": "spiffy ID and the server um a different spiffy ID you can use something like the label name and in this case um both",
    "start": "1241480",
    "end": "1249000"
  },
  {
    "text": "databases are labeled with uh database um and finally if you wanted to give all",
    "start": "1249000",
    "end": "1254240"
  },
  {
    "text": "of these workloads the same identity then you could um just include the cluster name and the and the name space",
    "start": "1254240",
    "end": "1260880"
  },
  {
    "text": "in your spiffy ID and then they would all have the same um spiffy ID um so you",
    "start": "1260880",
    "end": "1266880"
  },
  {
    "text": "can now see how you can play around with those identifiers when you're choosing uh what spiy id to give them and then um",
    "start": "1266880",
    "end": "1273480"
  },
  {
    "text": "you're you you will build authorization policies on top of those spiffy IDs um",
    "start": "1273480",
    "end": "1278919"
  },
  {
    "text": "that maybe say like um the databases can like talk to each other but the web",
    "start": "1278919",
    "end": "1284799"
  },
  {
    "text": "server um can only talk to the databases in certain situations",
    "start": "1284799",
    "end": "1290520"
  },
  {
    "text": "um now let's talk about um Linux identifiers so uh here's another example",
    "start": "1291320",
    "end": "1297039"
  },
  {
    "text": "where uh we have two workloads running in Linux they're both running uh Python",
    "start": "1297039",
    "end": "1302480"
  },
  {
    "text": "scripts but the first one runs uh a python server and the other one runs a python client um both workloads are",
    "start": "1302480",
    "end": "1309960"
  },
  {
    "text": "running in the same VM in the same Linux user and Linux group um and so if you",
    "start": "1309960",
    "end": "1315799"
  },
  {
    "text": "notice here there's no way for us to give both these two workloads a different",
    "start": "1315799",
    "end": "1321159"
  },
  {
    "text": "spiffy ID because all of the Linux identifiers are the same and remember like your identifiers have to be things",
    "start": "1321159",
    "end": "1328600"
  },
  {
    "text": "that can be attested so it's not possible to um make the name of the",
    "start": "1328600",
    "end": "1334120"
  },
  {
    "text": "Python script um as part of the identifiers because there's no way to attest that with the kernel um so I want",
    "start": "1334120",
    "end": "1342320"
  },
  {
    "text": "to give you a couple solutions for how you can fix um this kind of thing so one way you could do this um if you wanted",
    "start": "1342320",
    "end": "1348880"
  },
  {
    "text": "to give them different identities is you can run these workloads as two different um Linux users um and then you can use",
    "start": "1348880",
    "end": "1358080"
  },
  {
    "text": "the Linux user in your spiffy ID and they have um different spiffy IDs or the",
    "start": "1358080",
    "end": "1363279"
  },
  {
    "text": "other option is you can continue to run your workloads as in the same uh Linux user group but you can use another uh",
    "start": "1363279",
    "end": "1371120"
  },
  {
    "text": "platform attribute like in this case we're using systemd um and systemd uh",
    "start": "1371120",
    "end": "1377120"
  },
  {
    "text": "there's also a way to attest um your workloads using systemd and so you can",
    "start": "1377120",
    "end": "1382760"
  },
  {
    "text": "use the unit uh the service name of your systemd unit in the spiffy ID to get two",
    "start": "1382760",
    "end": "1390279"
  },
  {
    "text": "different identities um so kind of the point I want to drive home here is that in kubernetes um you have a lot of",
    "start": "1390279",
    "end": "1396520"
  },
  {
    "text": "structure that makes it easy to play to play around with the um identifiers and get whatever spiffy ID you want but in",
    "start": "1396520",
    "end": "1403760"
  },
  {
    "text": "Linux um you have to actually think about how you're going to deploy your workloads and depending on those",
    "start": "1403760",
    "end": "1410000"
  },
  {
    "text": "decisions that you make that's the kind of like identities that you'll be able to",
    "start": "1410000",
    "end": "1415559"
  },
  {
    "text": "create all right um so we've been sort of dancing around this question of how do you choose um a spiffy ID and I think",
    "start": "1415960",
    "end": "1423840"
  },
  {
    "text": "overall like the guiding principle here should be that your spiffy IDs um should guide whatever authorization uh policies",
    "start": "1423840",
    "end": "1430960"
  },
  {
    "text": "you're going to build um but I want to give you a little bit of a more um",
    "start": "1430960",
    "end": "1436559"
  },
  {
    "text": "precise answer to that so I'll give you some examples um of how you can think about your spiffy",
    "start": "1436559",
    "end": "1443120"
  },
  {
    "text": "IDs um so the first option is that your spiffy IDs can replicate your",
    "start": "1443120",
    "end": "1448919"
  },
  {
    "text": "organizational structure so say for example um you you give each service um",
    "start": "1448919",
    "end": "1455000"
  },
  {
    "text": "its own kubernetes namespace then um you can put your kubernetes namespace in your spiffy ID and then um decide which",
    "start": "1455000",
    "end": "1462720"
  },
  {
    "text": "Services can talk to other services or if um you are a platform engineer and",
    "start": "1462720",
    "end": "1468559"
  },
  {
    "text": "you give each um application team in your company um a VM where they can run",
    "start": "1468559",
    "end": "1474640"
  },
  {
    "text": "all of their workloads or you give them a system D unit then you can include those in your spiffy ID and in that case",
    "start": "1474640",
    "end": "1481679"
  },
  {
    "text": "um your spiffy ID is sort of mimicking whatever organizational structure you have in your",
    "start": "1481679",
    "end": "1488480"
  },
  {
    "text": "company um the other option here is that you can actually um think of your spiffy",
    "start": "1488480",
    "end": "1495440"
  },
  {
    "text": "IDs as defining security boundaries so as an example if you have um the two",
    "start": "1495440",
    "end": "1502120"
  },
  {
    "text": "workloads in Linux like we had before in the example and they have the same Linux user and Linux group then um they have",
    "start": "1502120",
    "end": "1509520"
  },
  {
    "text": "the same permissions um in Linux and therefore from a Linux point of view",
    "start": "1509520",
    "end": "1514559"
  },
  {
    "text": "they have the same security posture and therefore you can give them the same spiffy IDs so in this case your spiffy",
    "start": "1514559",
    "end": "1520240"
  },
  {
    "text": "IDs are replicating uh security boundaries of the platform that you're running in so again you you must you",
    "start": "1520240",
    "end": "1526000"
  },
  {
    "text": "have to think about your use case and and what makes sense to for you but these are just two examples of what you can",
    "start": "1526000",
    "end": "1532520"
  },
  {
    "text": "do um and that's everything for now um we have some additional resources here",
    "start": "1532799",
    "end": "1538760"
  },
  {
    "text": "if you want to learn more about spiffy um check out the spiffy website um spiffy.exe",
    "start": "1538760",
    "end": "1546760"
  },
  {
    "text": "[Music]",
    "start": "1547710",
    "end": "1550778"
  },
  {
    "text": "IDs um we have a blog post about that on the spiral website and finally um check",
    "start": "1558520",
    "end": "1564880"
  },
  {
    "text": "out our new spiral website that we just came out with this week um and if you",
    "start": "1564880",
    "end": "1570279"
  },
  {
    "text": "want to give us feedback on this session that's the QR code to do so thanks everyone thank you so",
    "start": "1570279",
    "end": "1578278"
  },
  {
    "text": "much any any questions folks yes I want to take the of a and",
    "start": "1579640",
    "end": "1590720"
  },
  {
    "text": "have the ability to this typ ofid",
    "start": "1590720",
    "end": "1596480"
  },
  {
    "text": "and how I actually propagate that um so the question is how you can",
    "start": "1596919",
    "end": "1603559"
  },
  {
    "text": "propagate down information that extracted from workload",
    "start": "1603559",
    "end": "1611480"
  },
  {
    "text": "attributes get token essentially every hour maybe every fr",
    "start": "1611480",
    "end": "1618960"
  },
  {
    "text": "attack meod if I want to essentially the time L of the valid reest the L of the I",
    "start": "1618960",
    "end": "1628399"
  },
  {
    "text": "would need to of be able",
    "start": "1628399",
    "end": "1631960"
  },
  {
    "text": "to idea concept of",
    "start": "1639520",
    "end": "1645480"
  },
  {
    "text": "the and question yeah I think I yeah I think if",
    "start": "1645480",
    "end": "1652000"
  },
  {
    "text": "I understand your question correctly there's lots of kind of different concepts we're talking about it's like you're talking about the request the",
    "start": "1652000",
    "end": "1659240"
  },
  {
    "text": "workload itself and workload characteristics so it's like how you tie these things",
    "start": "1659240",
    "end": "1665760"
  },
  {
    "text": "together uh so the the first of all there is nothing that you can like tie to request I think spify is not focusing",
    "start": "1665760",
    "end": "1673840"
  },
  {
    "text": "on the it's like how do you use so it provides you an identity like JWT token",
    "start": "1673840",
    "end": "1682000"
  },
  {
    "text": "but there is nothing that spy dictates you oh you should only use this talken",
    "start": "1682000",
    "end": "1688120"
  },
  {
    "text": "in this header for instance right um spe is not enforce like in case of x509 how",
    "start": "1688120",
    "end": "1694399"
  },
  {
    "text": "do you establish an mtls in this case um so that's that's about the",
    "start": "1694399",
    "end": "1701399"
  },
  {
    "text": "request but tighten like your information that goes into spad with a characteristic of the",
    "start": "1701399",
    "end": "1709200"
  },
  {
    "text": "workloads uh there is different ways like the nine shows that you can do kind of onet to one mapping when you know",
    "start": "1709200",
    "end": "1715919"
  },
  {
    "text": "that's okay the workload is running under the Linux user Fu in a group bar",
    "start": "1715919",
    "end": "1723200"
  },
  {
    "text": "uh we'll get a SPID or have a pass like bar Fu does it does it make",
    "start": "1723200",
    "end": "1731399"
  },
  {
    "text": "sense okay thank you yes uh folks if you",
    "start": "1731399",
    "end": "1736840"
  },
  {
    "text": "want to ask Maybe it's like using the mic otherwise I can try to repeat but I think there is some echo or",
    "start": "1736840",
    "end": "1743840"
  },
  {
    "text": "something right go Ahad on the right s Sure uh do you guys",
    "start": "1743840",
    "end": "1749360"
  },
  {
    "text": "have any reference architecture for doing node ATT testation for on premise",
    "start": "1749360",
    "end": "1755320"
  },
  {
    "text": "workloads uh yeah it doesn't like the no station can be done in different ways",
    "start": "1755320",
    "end": "1761919"
  },
  {
    "text": "like the open source implementation that's called Spire has its own view how",
    "start": "1761919",
    "end": "1767360"
  },
  {
    "text": "the agent aration can be done we have our own",
    "start": "1767360",
    "end": "1773039"
  },
  {
    "text": "implementation that has its own specific how how how it can be done I recommend",
    "start": "1773039",
    "end": "1778799"
  },
  {
    "text": "to just check out the book there is a lot of kind of uh how you can do an IT",
    "start": "1778799",
    "end": "1783880"
  },
  {
    "text": "station and open source implementation has uh different set of plugin that's",
    "start": "1783880",
    "end": "1789240"
  },
  {
    "text": "can be used on pram or in a cloud environment uh you the easiest thing you",
    "start": "1789240",
    "end": "1797080"
  },
  {
    "text": "can do is like one time joint talking basically that will work everywhere",
    "start": "1797080",
    "end": "1802240"
  },
  {
    "text": "thank you i' say yeah hey guys um so I I kind",
    "start": "1802240",
    "end": "1807880"
  },
  {
    "text": "of sense that the Linux based workload Ed a stations are are pretty limited",
    "start": "1807880",
    "end": "1814000"
  },
  {
    "text": "right far fewer attributes and looking at the constructs I think the closest",
    "start": "1814000",
    "end": "1819279"
  },
  {
    "text": "thing that can get you to what like kubernetes would offer in terms of like application identity m is like the",
    "start": "1819279",
    "end": "1825960"
  },
  {
    "text": "systemd unit so I I think my question is um is there ways or are there extension",
    "start": "1825960",
    "end": "1832600"
  },
  {
    "text": "capabilities to say Hey you know here's some additional information to use for the workload at a station or is it just",
    "start": "1832600",
    "end": "1839720"
  },
  {
    "text": "those four or five attributes and that's it uh yeah so it it depends on what type of",
    "start": "1839720",
    "end": "1847720"
  },
  {
    "text": "kind of interrogation you're doing like the Linux versus systemd will give you deliver your",
    "start": "1847720",
    "end": "1855039"
  },
  {
    "text": "uh some information but there is nothing like I don't know pod specification",
    "start": "1855039",
    "end": "1860360"
  },
  {
    "text": "where we can use like I don't know labels and you put additional information into",
    "start": "1860360",
    "end": "1865559"
  },
  {
    "text": "labels uh some of the things you can do combination of like let's say",
    "start": "1865559",
    "end": "1872240"
  },
  {
    "text": "notation with workload AR station and some of this information can come from",
    "start": "1872240",
    "end": "1878159"
  },
  {
    "text": "like let's say VI use cloud service environments and you use instance",
    "start": "1878159",
    "end": "1884639"
  },
  {
    "text": "metadata for like an agent High station right so this case you can put information into like I don't know some",
    "start": "1884639",
    "end": "1891799"
  },
  {
    "text": "tags that you put on instances um so this is a little bit like depending on what information is",
    "start": "1891799",
    "end": "1898679"
  },
  {
    "text": "important and like in case of like let's say cicd systems you can leverage like J",
    "start": "1898679",
    "end": "1905440"
  },
  {
    "text": "the JWT tokens that the jobs has there's uh just one more thing",
    "start": "1905440",
    "end": "1911960"
  },
  {
    "text": "there's also um a Docker a tester in the open source implementation so that's this again it kind of depends on the way",
    "start": "1911960",
    "end": "1918279"
  },
  {
    "text": "that you're um deploying your workloads what kind of attestation you can do okay",
    "start": "1918279",
    "end": "1923360"
  },
  {
    "text": "so at at the time the the um identity request is made the information from the",
    "start": "1923360",
    "end": "1930120"
  },
  {
    "text": "node at a station is also available MH yes okay so if I were to like tag the virtual machine with my I in a certain",
    "start": "1930120",
    "end": "1937840"
  },
  {
    "text": "way that says hey yeah okay yeah we can chat in more details like depending on what what you're trying to do like a",
    "start": "1937840",
    "end": "1943279"
  },
  {
    "text": "different ways yeah on U on my right side I guess I guess this is implementation question do you have to",
    "start": "1943279",
    "end": "1950399"
  },
  {
    "text": "have like one agent per uh VM if you have like a group of VMS running in the",
    "start": "1950399",
    "end": "1956320"
  },
  {
    "text": "same network or I guess uh extending this question could you possibly",
    "start": "1956320",
    "end": "1962000"
  },
  {
    "text": "leverage other already running agents to get the same data you need like uh for",
    "start": "1962000",
    "end": "1967559"
  },
  {
    "text": "example the mdp service um yeah so the the um answer there is",
    "start": "1967559",
    "end": "1974799"
  },
  {
    "text": "that um if you want to do ad test station should using Linux you're going to need like one agent per uh node",
    "start": "1974799",
    "end": "1981760"
  },
  {
    "text": "because the attestation is going to be done like on the Kernel um so otherwise you would have to figure out like how",
    "start": "1981760",
    "end": "1987720"
  },
  {
    "text": "your agent is going to talk to um the kernel of the workload that it's running in and the other part of that too is",
    "start": "1987720",
    "end": "1994240"
  },
  {
    "text": "that um for the workload API um as it's defined in the SPF spec like you connect",
    "start": "1994240",
    "end": "1999519"
  },
  {
    "text": "to it over a Unix domain socket and so that requires that um both the agent and the workload are running in the same",
    "start": "1999519",
    "end": "2006279"
  },
  {
    "text": "node got it thank you next question so in your talk you mentioned",
    "start": "2006279",
    "end": "2014639"
  },
  {
    "text": "attributes and being able to think about mapping that and to construct an ID that",
    "start": "2014639",
    "end": "2020120"
  },
  {
    "text": "makes sense for you can you and you also mention how kubernetes has kind of more",
    "start": "2020120",
    "end": "2025519"
  },
  {
    "text": "structure in it than say Linux does can you add structure and how much structure",
    "start": "2025519",
    "end": "2033639"
  },
  {
    "text": "can you add what makes sense and where does it start to break down even in",
    "start": "2033639",
    "end": "2038760"
  },
  {
    "text": "terms of this bpid right like obviously you would want toate you know 8,000 n",
    "start": "2038760",
    "end": "2044440"
  },
  {
    "text": "level it's great do I I I can answer I have because like I didn't already",
    "start": "2044440",
    "end": "2051240"
  },
  {
    "text": "reference to it we have a blog post it's like I think it's like very broad topic to kind of cover in",
    "start": "2051240",
    "end": "2058398"
  },
  {
    "text": "the uh in a quick answer it's kind of many problems",
    "start": "2058399",
    "end": "2065118"
  },
  {
    "text": "in software domain means kind of it depends what you're trying to do and",
    "start": "2065119",
    "end": "2070520"
  },
  {
    "text": "what information you need to have so you're trying to have kind of the enough",
    "start": "2070520",
    "end": "2077079"
  },
  {
    "text": "information for other systems to use like an authorization systems for for for instance but yeah we can structure",
    "start": "2077079",
    "end": "2083679"
  },
  {
    "text": "it in in the way that works for your use cases okay I I'm I'm sorry there's not",
    "start": "2083679",
    "end": "2091040"
  },
  {
    "text": "like there is not like do this or do that some systems like pretty I would",
    "start": "2091040",
    "end": "2096118"
  },
  {
    "text": "say uh strict like EO has like hey this is",
    "start": "2096119",
    "end": "2102359"
  },
  {
    "text": "the only format that you can use of a SPID so it will work is like an is2",
    "start": "2102359",
    "end": "2108480"
  },
  {
    "text": "service mesh but spey itself is like very open-ended in the way like how do",
    "start": "2108480",
    "end": "2115200"
  },
  {
    "text": "you construct how you construct it so uh to be kind of more",
    "start": "2115200",
    "end": "2122040"
  },
  {
    "text": "flexible hi awesome talk um thank you one thing I'm just curious about is is a",
    "start": "2122520",
    "end": "2128119"
  },
  {
    "text": "spiffy ID to a workload one to one or could you overlay like a group of",
    "start": "2128119",
    "end": "2134000"
  },
  {
    "text": "workloads with a spiffy ID and then have individual spiffy IDs on top of that for",
    "start": "2134000",
    "end": "2139640"
  },
  {
    "text": "maybe in you want a group of things to have some shared permissions but then",
    "start": "2139640",
    "end": "2144839"
  },
  {
    "text": "individual members of the group to have specific",
    "start": "2144839",
    "end": "2149280"
  },
  {
    "text": "permissions you're asking like if you could have more than one spiy ID for a workload yeah okay interesting I've",
    "start": "2150160",
    "end": "2158240"
  },
  {
    "text": "never seen that but you shouldn't so you should have like one per",
    "start": "2158240",
    "end": "2163839"
  },
  {
    "text": "workload uh so in the in this sense it's very different I think the best analogy",
    "start": "2163839",
    "end": "2170560"
  },
  {
    "text": "here would be like hey you use OAS or use a single sign on right so it's like when you go in through the system and",
    "start": "2170560",
    "end": "2176960"
  },
  {
    "text": "then you use it like in a Federated settings for authentication it's kind of",
    "start": "2176960",
    "end": "2183480"
  },
  {
    "text": "your you as a human has like a one account with Google and then you use it for like a Federated with different",
    "start": "2183480",
    "end": "2189920"
  },
  {
    "text": "systems so like this is probably the best analogy to think about it whether",
    "start": "2189920",
    "end": "2195800"
  },
  {
    "text": "an opposite can be true in case of you have like few workloads that get the",
    "start": "2195800",
    "end": "2201880"
  },
  {
    "text": "same speid uh I think it's like as Nadin showed it depends right so we can have",
    "start": "2201880",
    "end": "2208040"
  },
  {
    "text": "it depends on the boundaries especially like in a Linux environment or it depends on what you car like in",
    "start": "2208040",
    "end": "2214240"
  },
  {
    "text": "kubernetes you can run multiple PS and the Nam space and maybe names space",
    "start": "2214240",
    "end": "2219680"
  },
  {
    "text": "granularity is what you care about in know Linux it could be run multiple I don't know uh processes under user and",
    "start": "2219680",
    "end": "2228160"
  },
  {
    "text": "the user like granularity is something that you you care about in terms of boundaries that's how I kind of map it",
    "start": "2228160",
    "end": "2237960"
  },
  {
    "text": "um I think it's increas scene I guess we get get over time yeah uh thanks so much",
    "start": "2238640",
    "end": "2244680"
  },
  {
    "text": "folks for for coming in and all awesome question the only kind of uh ask I have",
    "start": "2244680",
    "end": "2250560"
  },
  {
    "text": "is to if you have any feedback please provide it and another one it's a last Talk of the day uh let's do quick",
    "start": "2250560",
    "end": "2260560"
  },
  {
    "text": "selfie all right say hi he all right thank you everyone thanks",
    "start": "2261359",
    "end": "2267960"
  },
  {
    "text": "everyone thanks for coming",
    "start": "2267960",
    "end": "2271800"
  }
]