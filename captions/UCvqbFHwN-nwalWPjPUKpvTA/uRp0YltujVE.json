[
  {
    "text": "hi I'm Rodrigo I'm a software engineer",
    "start": "120",
    "end": "2399"
  },
  {
    "text": "at Microsoft hi I'm Marga I'm director",
    "start": "2399",
    "end": "5040"
  },
  {
    "text": "of engineering at I surveillance we are",
    "start": "5040",
    "end": "7680"
  },
  {
    "text": "here today to talk about a new feature",
    "start": "7680",
    "end": "9660"
  },
  {
    "text": "that has just been added to kubernetes",
    "start": "9660",
    "end": "11760"
  },
  {
    "text": "that would help us run our workloads",
    "start": "11760",
    "end": "13559"
  },
  {
    "text": "more securely called username spaces",
    "start": "13559",
    "end": "16460"
  },
  {
    "text": "Rodrigo can you share with us a bit of",
    "start": "16460",
    "end": "19080"
  },
  {
    "text": "background of what motivated this new",
    "start": "19080",
    "end": "21420"
  },
  {
    "text": "feature",
    "start": "21420",
    "end": "22800"
  },
  {
    "text": "yeah you know how in Linux distributions",
    "start": "22800",
    "end": "25260"
  },
  {
    "text": "most applications run with their own",
    "start": "25260",
    "end": "27119"
  },
  {
    "text": "user and group",
    "start": "27119",
    "end": "28740"
  },
  {
    "text": "sure yes for example ancient X or Maria",
    "start": "28740",
    "end": "31740"
  },
  {
    "text": "DB or bind they all run with their own",
    "start": "31740",
    "end": "34920"
  },
  {
    "text": "users and groups this has been the case",
    "start": "34920",
    "end": "37260"
  },
  {
    "text": "for many years because it limits the",
    "start": "37260",
    "end": "39660"
  },
  {
    "text": "permissions for each application running",
    "start": "39660",
    "end": "41579"
  },
  {
    "text": "on the machine",
    "start": "41579",
    "end": "43079"
  },
  {
    "text": "right exactly but when we're running our",
    "start": "43079",
    "end": "45899"
  },
  {
    "text": "applications inside containers they",
    "start": "45899",
    "end": "47700"
  },
  {
    "text": "usually run as root",
    "start": "47700",
    "end": "50719"
  },
  {
    "text": "and this route in the container is also",
    "start": "50940",
    "end": "53160"
  },
  {
    "text": "root on the house",
    "start": "53160",
    "end": "54840"
  },
  {
    "text": "yeah that doesn't sound like a good idea",
    "start": "54840",
    "end": "57480"
  },
  {
    "text": "does it",
    "start": "57480",
    "end": "58620"
  },
  {
    "text": "indeed this can be a serious problem for",
    "start": "58620",
    "end": "61800"
  },
  {
    "text": "example if there is a vulnerability that",
    "start": "61800",
    "end": "63660"
  },
  {
    "text": "allows a container breakout like dcv in",
    "start": "63660",
    "end": "66659"
  },
  {
    "text": "2019 5736 this was a vulnerability rated",
    "start": "66659",
    "end": "71280"
  },
  {
    "text": "with high severity that allowed someone",
    "start": "71280",
    "end": "73140"
  },
  {
    "text": "controlling the image of a newly created",
    "start": "73140",
    "end": "75000"
  },
  {
    "text": "container to override the Run C binary",
    "start": "75000",
    "end": "77340"
  },
  {
    "text": "on the host",
    "start": "77340",
    "end": "79380"
  },
  {
    "text": "ha that sounds scary the attacker would",
    "start": "79380",
    "end": "82320"
  },
  {
    "text": "basically have root privileges on the",
    "start": "82320",
    "end": "84299"
  },
  {
    "text": "host and could then move on to",
    "start": "84299",
    "end": "85920"
  },
  {
    "text": "compromising the whole cluster",
    "start": "85920",
    "end": "88740"
  },
  {
    "text": "yes and what is interesting is that the",
    "start": "88740",
    "end": "91500"
  },
  {
    "text": "whole problem could could be completely",
    "start": "91500",
    "end": "93299"
  },
  {
    "text": "avoided if kubernetes had support for",
    "start": "93299",
    "end": "95400"
  },
  {
    "text": "username spaces as that that mitigates",
    "start": "95400",
    "end": "98040"
  },
  {
    "text": "the CV and many others as well",
    "start": "98040",
    "end": "100680"
  },
  {
    "text": "so cool can you tell us about another",
    "start": "100680",
    "end": "102780"
  },
  {
    "text": "one",
    "start": "102780",
    "end": "104100"
  },
  {
    "text": "sure very recently while we're already",
    "start": "104100",
    "end": "106979"
  },
  {
    "text": "doing the work of adding username spaces",
    "start": "106979",
    "end": "109140"
  },
  {
    "text": "to kubernetes another CV rated high was",
    "start": "109140",
    "end": "112200"
  },
  {
    "text": "discovered",
    "start": "112200",
    "end": "113280"
  },
  {
    "text": "this CV was in the year 2022 and the",
    "start": "113280",
    "end": "116759"
  },
  {
    "text": "number is 0.492 in this case a malicious",
    "start": "116759",
    "end": "119880"
  },
  {
    "text": "container could trick the kernel into",
    "start": "119880",
    "end": "121560"
  },
  {
    "text": "executing a certain binary files route",
    "start": "121560",
    "end": "123720"
  },
  {
    "text": "after a process finished allowing them",
    "start": "123720",
    "end": "126000"
  },
  {
    "text": "to get root access on the horse and with",
    "start": "126000",
    "end": "128399"
  },
  {
    "text": "username spaces dcv is also completely",
    "start": "128399",
    "end": "130979"
  },
  {
    "text": "mitigated",
    "start": "130979",
    "end": "132840"
  },
  {
    "text": "in short running our containers as root",
    "start": "132840",
    "end": "135480"
  },
  {
    "text": "is a problem because whenever there is a",
    "start": "135480",
    "end": "137520"
  },
  {
    "text": "vulnerability that allows Escaping The",
    "start": "137520",
    "end": "139680"
  },
  {
    "text": "Container the malicious process can",
    "start": "139680",
    "end": "141959"
  },
  {
    "text": "compromise the host other pods and even",
    "start": "141959",
    "end": "144420"
  },
  {
    "text": "maybe use it as a stepping stone for a",
    "start": "144420",
    "end": "147060"
  },
  {
    "text": "more cluster-wide attack",
    "start": "147060",
    "end": "149220"
  },
  {
    "text": "right in the end the analysis we use to",
    "start": "149220",
    "end": "152040"
  },
  {
    "text": "isolate our containers are also software",
    "start": "152040",
    "end": "154379"
  },
  {
    "text": "and as all software they help us",
    "start": "154379",
    "end": "156900"
  },
  {
    "text": "so the least privilege that we use to",
    "start": "156900",
    "end": "159180"
  },
  {
    "text": "run our software the better",
    "start": "159180",
    "end": "161099"
  },
  {
    "text": "and user user namespaces is a very",
    "start": "161099",
    "end": "163680"
  },
  {
    "text": "important step in this direction",
    "start": "163680",
    "end": "167299"
  },
  {
    "text": "but before jumping into the details of",
    "start": "167700",
    "end": "170099"
  },
  {
    "text": "username spaces let's clarify that with",
    "start": "170099",
    "end": "172260"
  },
  {
    "text": "namespaces we don't refer to the",
    "start": "172260",
    "end": "174300"
  },
  {
    "text": "namespace parameter we're using Cube CTL",
    "start": "174300",
    "end": "177239"
  },
  {
    "text": "that is just a logical grouping of parts",
    "start": "177239",
    "end": "180000"
  },
  {
    "text": "during this talk we refer to the Linux",
    "start": "180000",
    "end": "182879"
  },
  {
    "text": "kernel feature for process isolation",
    "start": "182879",
    "end": "185180"
  },
  {
    "text": "there are actually quite a few Linux",
    "start": "185180",
    "end": "188099"
  },
  {
    "text": "namespaces that we use when we start a",
    "start": "188099",
    "end": "190440"
  },
  {
    "text": "pod in kubernetes let's take a look at",
    "start": "190440",
    "end": "192840"
  },
  {
    "text": "them for example we use a UTS namespace",
    "start": "192840",
    "end": "196379"
  },
  {
    "text": "to give a unique hostname to each part",
    "start": "196379",
    "end": "198360"
  },
  {
    "text": "this way the pod doesn't have the same",
    "start": "198360",
    "end": "200640"
  },
  {
    "text": "consonant as the host it is running on",
    "start": "200640",
    "end": "203519"
  },
  {
    "text": "we also have a network name space in",
    "start": "203519",
    "end": "206760"
  },
  {
    "text": "this case all containers in the Pod have",
    "start": "206760",
    "end": "208860"
  },
  {
    "text": "the same networking namespace that",
    "start": "208860",
    "end": "210840"
  },
  {
    "text": "allows them to communicate over the",
    "start": "210840",
    "end": "212580"
  },
  {
    "text": "localhost interface but they need to use",
    "start": "212580",
    "end": "215340"
  },
  {
    "text": "the virtual Network to communicate with",
    "start": "215340",
    "end": "217440"
  },
  {
    "text": "containers running in other pods that",
    "start": "217440",
    "end": "220200"
  },
  {
    "text": "way pods only see the network traffic",
    "start": "220200",
    "end": "222299"
  },
  {
    "text": "that they are supposed to see",
    "start": "222299",
    "end": "225239"
  },
  {
    "text": "there's also a field namespace the",
    "start": "225239",
    "end": "228060"
  },
  {
    "text": "process visible in each container we run",
    "start": "228060",
    "end": "230159"
  },
  {
    "text": "are limited to the process inside each",
    "start": "230159",
    "end": "232200"
  },
  {
    "text": "container each contains only six",
    "start": "232200",
    "end": "234060"
  },
  {
    "text": "processes from their own container",
    "start": "234060",
    "end": "236580"
  },
  {
    "text": "and similarly with other namespaces like",
    "start": "236580",
    "end": "240239"
  },
  {
    "text": "the mount namespace the IPC namespace or",
    "start": "240239",
    "end": "243180"
  },
  {
    "text": "the C group namespace but of course the",
    "start": "243180",
    "end": "245640"
  },
  {
    "text": "focus of this talk is username spaces so",
    "start": "245640",
    "end": "248879"
  },
  {
    "text": "let's talk about how those work",
    "start": "248879",
    "end": "251580"
  },
  {
    "text": "as we said at the beginning before",
    "start": "251580",
    "end": "253200"
  },
  {
    "text": "kubernetes 125 do the user running",
    "start": "253200",
    "end": "255840"
  },
  {
    "text": "inside the container was always the same",
    "start": "255840",
    "end": "258120"
  },
  {
    "text": "user as the one outside",
    "start": "258120",
    "end": "260400"
  },
  {
    "text": "so whenever we run a process in our",
    "start": "260400",
    "end": "262500"
  },
  {
    "text": "containers of fruit they were running as",
    "start": "262500",
    "end": "264240"
  },
  {
    "text": "root on the host as well",
    "start": "264240",
    "end": "266220"
  },
  {
    "text": "on top of this if we were using an",
    "start": "266220",
    "end": "269400"
  },
  {
    "text": "imprivileged user and granting a",
    "start": "269400",
    "end": "271020"
  },
  {
    "text": "specific capability to it instead of",
    "start": "271020",
    "end": "273000"
  },
  {
    "text": "using the road user the capability",
    "start": "273000",
    "end": "275340"
  },
  {
    "text": "granted to the container were valid in",
    "start": "275340",
    "end": "277380"
  },
  {
    "text": "the host as well",
    "start": "277380",
    "end": "278880"
  },
  {
    "text": "now when we enable user namespaces the",
    "start": "278880",
    "end": "282360"
  },
  {
    "text": "user in the container is no longer the",
    "start": "282360",
    "end": "284639"
  },
  {
    "text": "user on the host the processes in the",
    "start": "284639",
    "end": "287100"
  },
  {
    "text": "container can still run as root but all",
    "start": "287100",
    "end": "289979"
  },
  {
    "text": "interactions with the system will be",
    "start": "289979",
    "end": "292199"
  },
  {
    "text": "mapped to a different user",
    "start": "292199",
    "end": "294900"
  },
  {
    "text": "I use our namespace isolates security",
    "start": "294900",
    "end": "297240"
  },
  {
    "text": "related identifiers and attributes of a",
    "start": "297240",
    "end": "300479"
  },
  {
    "text": "process in particular user and group IDs",
    "start": "300479",
    "end": "303300"
  },
  {
    "text": "keys and capabilities",
    "start": "303300",
    "end": "305520"
  },
  {
    "text": "the way to use them in Linux is to split",
    "start": "305520",
    "end": "307979"
  },
  {
    "text": "all of the available IDs and assign",
    "start": "307979",
    "end": "310800"
  },
  {
    "text": "subsets to different users in spaces the",
    "start": "310800",
    "end": "313560"
  },
  {
    "text": "whole range of uids available is a",
    "start": "313560",
    "end": "315479"
  },
  {
    "text": "32-bit number in the kubernetes",
    "start": "315479",
    "end": "317639"
  },
  {
    "text": "implementation we reserve the first",
    "start": "317639",
    "end": "319740"
  },
  {
    "text": "range of 16 bits to the half from ad0 to",
    "start": "319740",
    "end": "323660"
  },
  {
    "text": "65535 this means processes and file in",
    "start": "323660",
    "end": "326880"
  },
  {
    "text": "the host should use this range for uids",
    "start": "326880",
    "end": "329759"
  },
  {
    "text": "and gids",
    "start": "329759",
    "end": "331440"
  },
  {
    "text": "the 16-bit range of uids after that can",
    "start": "331440",
    "end": "334860"
  },
  {
    "text": "be assigned to the first spot in the",
    "start": "334860",
    "end": "336720"
  },
  {
    "text": "node using username spaces we map uid 0",
    "start": "336720",
    "end": "340560"
  },
  {
    "text": "and gid0 inside the port to",
    "start": "340560",
    "end": "344720"
  },
  {
    "text": "uid65536 in the host so root in the",
    "start": "344720",
    "end": "348060"
  },
  {
    "text": "container is an unprivileged user in the",
    "start": "348060",
    "end": "350940"
  },
  {
    "text": "host inside a pod the range of Alice IDs",
    "start": "350940",
    "end": "354360"
  },
  {
    "text": "goes from 0 to",
    "start": "354360",
    "end": "356780"
  },
  {
    "text": "65535 or 16 bits and all the settings in",
    "start": "356780",
    "end": "361979"
  },
  {
    "text": "the Pod spec that refer to a user or",
    "start": "361979",
    "end": "364080"
  },
  {
    "text": "group ID like run as user run as group",
    "start": "364080",
    "end": "366360"
  },
  {
    "text": "FS group and so on refer to the ID",
    "start": "366360",
    "end": "369060"
  },
  {
    "text": "inside the container so the whole Space",
    "start": "369060",
    "end": "371880"
  },
  {
    "text": "of user ID is split into 65 000 chunks",
    "start": "371880",
    "end": "374880"
  },
  {
    "text": "of 65 000 uidsh",
    "start": "374880",
    "end": "378479"
  },
  {
    "text": "the ID is assigned to about the ideas",
    "start": "378479",
    "end": "381300"
  },
  {
    "text": "assigned to about are chosen",
    "start": "381300",
    "end": "382800"
  },
  {
    "text": "automatically by the keyword no two",
    "start": "382800",
    "end": "384960"
  },
  {
    "text": "parts have the same range of IDs there",
    "start": "384960",
    "end": "387180"
  },
  {
    "text": "is no overlap",
    "start": "387180",
    "end": "388680"
  },
  {
    "text": "you can think of this a little bit like",
    "start": "388680",
    "end": "390539"
  },
  {
    "text": "noteboard on a service you leave it",
    "start": "390539",
    "end": "392400"
  },
  {
    "text": "empty and some Freeport will be assigned",
    "start": "392400",
    "end": "394560"
  },
  {
    "text": "usually don't you don't really care",
    "start": "394560",
    "end": "396060"
  },
  {
    "text": "which one as long as it's that free Port",
    "start": "396060",
    "end": "397919"
  },
  {
    "text": "the same applies here some range will be",
    "start": "397919",
    "end": "400919"
  },
  {
    "text": "assigned we don't really care which one",
    "start": "400919",
    "end": "402539"
  },
  {
    "text": "as long as it doesn't overlap with the",
    "start": "402539",
    "end": "404160"
  },
  {
    "text": "ranges assigned to other Bots",
    "start": "404160",
    "end": "407400"
  },
  {
    "text": "because of this mapping the amount of",
    "start": "407400",
    "end": "409680"
  },
  {
    "text": "damage a rock part can do to the host",
    "start": "409680",
    "end": "411960"
  },
  {
    "text": "and to other pods is very limited and",
    "start": "411960",
    "end": "414900"
  },
  {
    "text": "obviously a port will never be mapped to",
    "start": "414900",
    "end": "417180"
  },
  {
    "text": "the host ID 0. this means a pod with",
    "start": "417180",
    "end": "420180"
  },
  {
    "text": "username spaces will never run as",
    "start": "420180",
    "end": "422880"
  },
  {
    "text": "privileged on the host also the",
    "start": "422880",
    "end": "425100"
  },
  {
    "text": "capabilities granted to the poor to the",
    "start": "425100",
    "end": "427199"
  },
  {
    "text": "pub are only valid inside the pot for",
    "start": "427199",
    "end": "429539"
  },
  {
    "text": "example if we Grant capsules admin often",
    "start": "429539",
    "end": "432539"
  },
  {
    "text": "considered a new route the capabilities",
    "start": "432539",
    "end": "434880"
  },
  {
    "text": "only valid inside the port and very",
    "start": "434880",
    "end": "437039"
  },
  {
    "text": "useful there but if the process breaks",
    "start": "437039",
    "end": "439500"
  },
  {
    "text": "out of the container to the house the",
    "start": "439500",
    "end": "441180"
  },
  {
    "text": "capability is not valid",
    "start": "441180",
    "end": "443099"
  },
  {
    "text": "additionally there are some capabilities",
    "start": "443099",
    "end": "445380"
  },
  {
    "text": "that are just not usable when inside a",
    "start": "445380",
    "end": "448080"
  },
  {
    "text": "username space one of these is capsu's",
    "start": "448080",
    "end": "450900"
  },
  {
    "text": "module needed to load a kernel module if",
    "start": "450900",
    "end": "453660"
  },
  {
    "text": "you grant capsys module to a part using",
    "start": "453660",
    "end": "455759"
  },
  {
    "text": "username spaces you still won't be able",
    "start": "455759",
    "end": "458400"
  },
  {
    "text": "to load a kernel module so Rodrigo how",
    "start": "458400",
    "end": "461819"
  },
  {
    "text": "do we enable this super cool feature",
    "start": "461819",
    "end": "465060"
  },
  {
    "text": "to use this feature in kubernetes we",
    "start": "465060",
    "end": "467220"
  },
  {
    "text": "just need to add the host user field to",
    "start": "467220",
    "end": "469259"
  },
  {
    "text": "the prospect we set it to false to",
    "start": "469259",
    "end": "471599"
  },
  {
    "text": "indicate that we don't want to use the",
    "start": "471599",
    "end": "473400"
  },
  {
    "text": "host users this will create a username",
    "start": "473400",
    "end": "476460"
  },
  {
    "text": "space so the users are isolated this",
    "start": "476460",
    "end": "479160"
  },
  {
    "text": "follows the same syntax as other",
    "start": "479160",
    "end": "481259"
  },
  {
    "text": "namespaces like first Network or host",
    "start": "481259",
    "end": "483360"
  },
  {
    "text": "IPC",
    "start": "483360",
    "end": "484500"
  },
  {
    "text": "and what is super interesting about this",
    "start": "484500",
    "end": "486419"
  },
  {
    "text": "is that the vast majority of workloads",
    "start": "486419",
    "end": "488580"
  },
  {
    "text": "can enable this without doing any",
    "start": "488580",
    "end": "490259"
  },
  {
    "text": "changes in the app and just benefit from",
    "start": "490259",
    "end": "492240"
  },
  {
    "text": "the actual security",
    "start": "492240",
    "end": "494280"
  },
  {
    "text": "so cool so what are the current",
    "start": "494280",
    "end": "496800"
  },
  {
    "text": "requirements and limitations for",
    "start": "496800",
    "end": "498900"
  },
  {
    "text": "enabling user namespaces",
    "start": "498900",
    "end": "501139"
  },
  {
    "text": "that's a great question because we have",
    "start": "501139",
    "end": "503520"
  },
  {
    "text": "a bunch of them now but we will work on",
    "start": "503520",
    "end": "506099"
  },
  {
    "text": "removing some of them in the coming",
    "start": "506099",
    "end": "507660"
  },
  {
    "text": "versions first as we already mentioned a",
    "start": "507660",
    "end": "510120"
  },
  {
    "text": "couple of times we need at least",
    "start": "510120",
    "end": "511379"
  },
  {
    "text": "kubernetes 124 125 then we need support",
    "start": "511379",
    "end": "514680"
  },
  {
    "text": "in the container running time to this",
    "start": "514680",
    "end": "516240"
  },
  {
    "text": "feature to",
    "start": "516240",
    "end": "517380"
  },
  {
    "text": "do we have this support already",
    "start": "517380",
    "end": "520200"
  },
  {
    "text": "it depends on the runtime if you ever",
    "start": "520200",
    "end": "522000"
  },
  {
    "text": "seen cryo version 125 already includes",
    "start": "522000",
    "end": "524520"
  },
  {
    "text": "this if you are using container D the",
    "start": "524520",
    "end": "527160"
  },
  {
    "text": "patches have not been merged yet but",
    "start": "527160",
    "end": "529320"
  },
  {
    "text": "we're aiming to move them for the one",
    "start": "529320",
    "end": "531000"
  },
  {
    "text": "seven release that is expected this year",
    "start": "531000",
    "end": "533820"
  },
  {
    "text": "and if you are still using Docker you",
    "start": "533820",
    "end": "536160"
  },
  {
    "text": "can use this feature today and there are",
    "start": "536160",
    "end": "537899"
  },
  {
    "text": "no plans from them to implement it at",
    "start": "537899",
    "end": "539760"
  },
  {
    "text": "least for now",
    "start": "539760",
    "end": "541560"
  },
  {
    "text": "I see on how to user names face interact",
    "start": "541560",
    "end": "545220"
  },
  {
    "text": "with other namespaces that we can also",
    "start": "545220",
    "end": "547800"
  },
  {
    "text": "enable or disable in kubernetes",
    "start": "547800",
    "end": "550920"
  },
  {
    "text": "when we never use our namespaces we",
    "start": "550920",
    "end": "553380"
  },
  {
    "text": "can't use any other Host namespace this",
    "start": "553380",
    "end": "556800"
  },
  {
    "text": "means we cannot mix host users false",
    "start": "556800",
    "end": "559380"
  },
  {
    "text": "with first Network true host ipc2 or",
    "start": "559380",
    "end": "561959"
  },
  {
    "text": "host pid2",
    "start": "561959",
    "end": "564420"
  },
  {
    "text": "makes sense the behavior otherwise would",
    "start": "564420",
    "end": "566640"
  },
  {
    "text": "be quite confusing",
    "start": "566640",
    "end": "568440"
  },
  {
    "text": "now we mentioned that all interactions",
    "start": "568440",
    "end": "571200"
  },
  {
    "text": "with the system are marked back to a",
    "start": "571200",
    "end": "573660"
  },
  {
    "text": "different uid in the host on Linux uids",
    "start": "573660",
    "end": "577140"
  },
  {
    "text": "are used by dos to enforce file access",
    "start": "577140",
    "end": "579959"
  },
  {
    "text": "permissions",
    "start": "579959",
    "end": "581339"
  },
  {
    "text": "so how does this affect accessing data",
    "start": "581339",
    "end": "584339"
  },
  {
    "text": "on shared volumes if my pod creates a",
    "start": "584339",
    "end": "587100"
  },
  {
    "text": "file in a shared volume",
    "start": "587100",
    "end": "589080"
  },
  {
    "text": "will other pods be able to read it",
    "start": "589080",
    "end": "592080"
  },
  {
    "text": "right that's the tricky part",
    "start": "592080",
    "end": "594540"
  },
  {
    "text": "if we just allow volumes with no",
    "start": "594540",
    "end": "596519"
  },
  {
    "text": "products further thought it won't work",
    "start": "596519",
    "end": "598800"
  },
  {
    "text": "because as we said what's running in",
    "start": "598800",
    "end": "600959"
  },
  {
    "text": "different name spaces will be mapped to",
    "start": "600959",
    "end": "602640"
  },
  {
    "text": "different view ideas in the house the",
    "start": "602640",
    "end": "604500"
  },
  {
    "text": "files created by one pod would be owned",
    "start": "604500",
    "end": "606600"
  },
  {
    "text": "by one uid but other reports will run a",
    "start": "606600",
    "end": "609600"
  },
  {
    "text": "completely different ones so it will be",
    "start": "609600",
    "end": "611580"
  },
  {
    "text": "impossible to share a volume for example",
    "start": "611580",
    "end": "613860"
  },
  {
    "text": "so for now we only support stateless",
    "start": "613860",
    "end": "616440"
  },
  {
    "text": "spots in the future we plan to support",
    "start": "616440",
    "end": "618720"
  },
  {
    "text": "stateful plots probably using a new",
    "start": "618720",
    "end": "621120"
  },
  {
    "text": "Linux kernel feature created by my",
    "start": "621120",
    "end": "623640"
  },
  {
    "text": "co-worker Kirsten Browner called I did",
    "start": "623640",
    "end": "625740"
  },
  {
    "text": "not Mouse",
    "start": "625740",
    "end": "626880"
  },
  {
    "text": "this feature was created to solve this",
    "start": "626880",
    "end": "629040"
  },
  {
    "text": "very specific problem that container",
    "start": "629040",
    "end": "630899"
  },
  {
    "text": "face with volumes and username spaces",
    "start": "630899",
    "end": "635100"
  },
  {
    "text": "wait so what do you mean exactly with",
    "start": "635100",
    "end": "637440"
  },
  {
    "text": "state laws",
    "start": "637440",
    "end": "639540"
  },
  {
    "text": "I'm Imports either without volumes or",
    "start": "639540",
    "end": "642720"
  },
  {
    "text": "pots that use Simple volumes that are",
    "start": "642720",
    "end": "645180"
  },
  {
    "text": "tied to the life cycle of the product so",
    "start": "645180",
    "end": "647220"
  },
  {
    "text": "there's no real persistency the current",
    "start": "647220",
    "end": "649620"
  },
  {
    "text": "implementation support these types of",
    "start": "649620",
    "end": "651240"
  },
  {
    "text": "volumes Secrets config map done or API",
    "start": "651240",
    "end": "654420"
  },
  {
    "text": "projector or empty there",
    "start": "654420",
    "end": "656700"
  },
  {
    "text": "and finally another limitation to",
    "start": "656700",
    "end": "658620"
  },
  {
    "text": "consider is that the files on mounted",
    "start": "658620",
    "end": "660480"
  },
  {
    "text": "volumes will always have permission for",
    "start": "660480",
    "end": "662579"
  },
  {
    "text": "the group",
    "start": "662579",
    "end": "664640"
  },
  {
    "text": "so if we want to store an SSH key and in",
    "start": "664640",
    "end": "669000"
  },
  {
    "text": "a secret unmounted we won't be able to",
    "start": "669000",
    "end": "671160"
  },
  {
    "text": "use it as applications typically enforce",
    "start": "671160",
    "end": "673680"
  },
  {
    "text": "that the SSH key doesn't have",
    "start": "673680",
    "end": "675779"
  },
  {
    "text": "permissions for the group right",
    "start": "675779",
    "end": "678420"
  },
  {
    "text": "right yes this is the limitation of the",
    "start": "678420",
    "end": "680760"
  },
  {
    "text": "current implementation following this",
    "start": "680760",
    "end": "682920"
  },
  {
    "text": "and adding support for a stateful parts",
    "start": "682920",
    "end": "684899"
  },
  {
    "text": "is on our roadmap for future releases",
    "start": "684899",
    "end": "687600"
  },
  {
    "text": "and another limitation that we're",
    "start": "687600",
    "end": "689640"
  },
  {
    "text": "looking to solve in future releases too",
    "start": "689640",
    "end": "691740"
  },
  {
    "text": "is that some files are mounted by the",
    "start": "691740",
    "end": "694440"
  },
  {
    "text": "cubelet like Etc result.com and those",
    "start": "694440",
    "end": "697260"
  },
  {
    "text": "files are owned by Road in the host so",
    "start": "697260",
    "end": "699240"
  },
  {
    "text": "they cannot be written by root inside",
    "start": "699240",
    "end": "700860"
  },
  {
    "text": "the container today",
    "start": "700860",
    "end": "702480"
  },
  {
    "text": "right there's always more work to be",
    "start": "702480",
    "end": "704820"
  },
  {
    "text": "done so how about we see how this looks",
    "start": "704820",
    "end": "707579"
  },
  {
    "text": "in action in a demo",
    "start": "707579",
    "end": "710160"
  },
  {
    "text": "sure let's do a demo just a comment this",
    "start": "710160",
    "end": "712680"
  },
  {
    "text": "demo is on my laptop but I want to",
    "start": "712680",
    "end": "714420"
  },
  {
    "text": "highlight that we will make this",
    "start": "714420",
    "end": "717420"
  },
  {
    "text": "available in Azure as soon as it's",
    "start": "717420",
    "end": "719339"
  },
  {
    "text": "feasible now without further Ado let's",
    "start": "719339",
    "end": "722339"
  },
  {
    "text": "see the demo here's a kubernetes cluster",
    "start": "722339",
    "end": "725339"
  },
  {
    "text": "running cornice 125",
    "start": "725339",
    "end": "727440"
  },
  {
    "text": "it's also using containerd with our",
    "start": "727440",
    "end": "729839"
  },
  {
    "text": "budgets that are not yet nursed",
    "start": "729839",
    "end": "733339"
  },
  {
    "text": "uh so what do you think if we start",
    "start": "733339",
    "end": "736519"
  },
  {
    "text": "quoting about",
    "start": "736519",
    "end": "738540"
  },
  {
    "text": "what will the pot do",
    "start": "738540",
    "end": "740820"
  },
  {
    "text": "uh the body will not do anything",
    "start": "740820",
    "end": "742800"
  },
  {
    "text": "interesting it just will slip",
    "start": "742800",
    "end": "745440"
  },
  {
    "text": "but it will have the captives admin",
    "start": "745440",
    "end": "748019"
  },
  {
    "text": "capability yeah so it can do whatever if",
    "start": "748019",
    "end": "751560"
  },
  {
    "text": "I if I may do whatever yeah",
    "start": "751560",
    "end": "755100"
  },
  {
    "text": "and we'll accept into the part to",
    "start": "755100",
    "end": "757260"
  },
  {
    "text": "execute uh our exploit",
    "start": "757260",
    "end": "759959"
  },
  {
    "text": "all right",
    "start": "759959",
    "end": "761220"
  },
  {
    "text": "um that's why it's not running your",
    "start": "761220",
    "end": "762660"
  },
  {
    "text": "surname spaces it doesn't have the",
    "start": "762660",
    "end": "764639"
  },
  {
    "text": "horses of false field",
    "start": "764639",
    "end": "766740"
  },
  {
    "text": "so let's uh adjust first grade apply",
    "start": "766740",
    "end": "772139"
  },
  {
    "text": "this yaml in the software",
    "start": "772139",
    "end": "775019"
  },
  {
    "text": "let's wait until the parties were",
    "start": "775019",
    "end": "778079"
  },
  {
    "text": "running",
    "start": "778079",
    "end": "779339"
  },
  {
    "text": "let's see",
    "start": "779339",
    "end": "782240"
  },
  {
    "text": "um let's see uh",
    "start": "788700",
    "end": "790860"
  },
  {
    "text": "that this companies in the inspiring was",
    "start": "790860",
    "end": "793320"
  },
  {
    "text": "put in the house so",
    "start": "793320",
    "end": "795779"
  },
  {
    "text": "the slip Infinity yeah and it's running",
    "start": "795779",
    "end": "798779"
  },
  {
    "text": "US Route yeah the Sleep Infinity is",
    "start": "798779",
    "end": "801420"
  },
  {
    "text": "running the foot in the hall",
    "start": "801420",
    "end": "804420"
  },
  {
    "text": "so",
    "start": "804420",
    "end": "806279"
  },
  {
    "text": "let's say the script I created to",
    "start": "806279",
    "end": "808560"
  },
  {
    "text": "exploit this",
    "start": "808560",
    "end": "810540"
  },
  {
    "text": "this cve it's based on the inputting the",
    "start": "810540",
    "end": "813300"
  },
  {
    "text": "CPE and some things are found on the",
    "start": "813300",
    "end": "815100"
  },
  {
    "text": "internet",
    "start": "815100",
    "end": "817100"
  },
  {
    "text": "uh the CVA works in the following",
    "start": "817100",
    "end": "819839"
  },
  {
    "text": "following way with c groups D1 there is",
    "start": "819839",
    "end": "822600"
  },
  {
    "text": "you can have the possibility to register",
    "start": "822600",
    "end": "825540"
  },
  {
    "text": "a release agent there is a there is a",
    "start": "825540",
    "end": "829200"
  },
  {
    "text": "script that will be executed when there",
    "start": "829200",
    "end": "831240"
  },
  {
    "text": "are no c groups no process in in a c",
    "start": "831240",
    "end": "834180"
  },
  {
    "text": "group",
    "start": "834180",
    "end": "834959"
  },
  {
    "text": "and this will be executed afterward the",
    "start": "834959",
    "end": "837300"
  },
  {
    "text": "vulnerability was that uh this could be",
    "start": "837300",
    "end": "840240"
  },
  {
    "text": "written without checking their proper",
    "start": "840240",
    "end": "841800"
  },
  {
    "text": "permissions so here we're creating first",
    "start": "841800",
    "end": "845100"
  },
  {
    "text": "an empty file",
    "start": "845100",
    "end": "846779"
  },
  {
    "text": "of the release agent",
    "start": "846779",
    "end": "849540"
  },
  {
    "text": "and then we're adding these lines to the",
    "start": "849540",
    "end": "851880"
  },
  {
    "text": "to the file one to print the",
    "start": "851880",
    "end": "854339"
  },
  {
    "text": "capabilities",
    "start": "854339",
    "end": "856380"
  },
  {
    "text": "and another one uh to print a switch",
    "start": "856380",
    "end": "859380"
  },
  {
    "text": "user or this is running and we live",
    "start": "859380",
    "end": "861600"
  },
  {
    "text": "asleep",
    "start": "861600",
    "end": "863100"
  },
  {
    "text": "process lingering there",
    "start": "863100",
    "end": "865019"
  },
  {
    "text": "for writing all of this to this file on",
    "start": "865019",
    "end": "867660"
  },
  {
    "text": "the Hop so on root on account and when",
    "start": "867660",
    "end": "871019"
  },
  {
    "text": "will this be executed",
    "start": "871019",
    "end": "874139"
  },
  {
    "text": "uh uh so this is script triggers that",
    "start": "874139",
    "end": "877500"
  },
  {
    "text": "there are no c groups uh in the last",
    "start": "877500",
    "end": "880740"
  },
  {
    "text": "line that there are no process in the C",
    "start": "880740",
    "end": "883260"
  },
  {
    "text": "group in the last line so as soon as we",
    "start": "883260",
    "end": "885480"
  },
  {
    "text": "execute the script",
    "start": "885480",
    "end": "887100"
  },
  {
    "text": "everything should happen and this file",
    "start": "887100",
    "end": "888839"
  },
  {
    "text": "should exist",
    "start": "888839",
    "end": "890100"
  },
  {
    "text": "if",
    "start": "890100",
    "end": "891360"
  },
  {
    "text": "if we are vulnerable to the explosion",
    "start": "891360",
    "end": "894300"
  },
  {
    "text": "expect",
    "start": "894300",
    "end": "896519"
  },
  {
    "text": "yeah let's see yeah",
    "start": "896519",
    "end": "899639"
  },
  {
    "text": "let's copy the script to the part",
    "start": "899639",
    "end": "903920"
  },
  {
    "text": "and let's execute the script now",
    "start": "904160",
    "end": "909259"
  },
  {
    "text": "so no output this is probably a bad",
    "start": "915000",
    "end": "917639"
  },
  {
    "text": "signal",
    "start": "917639",
    "end": "918959"
  },
  {
    "text": "uh",
    "start": "918959",
    "end": "920699"
  },
  {
    "text": "let's say if the file was created",
    "start": "920699",
    "end": "924060"
  },
  {
    "text": "the file is created and it's owned by",
    "start": "924060",
    "end": "926040"
  },
  {
    "text": "the root of the new ID and group ID",
    "start": "926040",
    "end": "930720"
  },
  {
    "text": "let's see the content of the file will",
    "start": "930720",
    "end": "933720"
  },
  {
    "text": "it have the capabilities yes it has all",
    "start": "933720",
    "end": "937320"
  },
  {
    "text": "the capabilities and it says that it's",
    "start": "937320",
    "end": "940260"
  },
  {
    "text": "running us through",
    "start": "940260",
    "end": "941519"
  },
  {
    "text": "and it's funny everything is a fruit",
    "start": "941519",
    "end": "944820"
  },
  {
    "text": "and let's see if the Sleep process is",
    "start": "944820",
    "end": "947220"
  },
  {
    "text": "also lingering there",
    "start": "947220",
    "end": "950240"
  },
  {
    "text": "and yes it is indeed lingering there",
    "start": "951000",
    "end": "953699"
  },
  {
    "text": "it's running its root uh",
    "start": "953699",
    "end": "956579"
  },
  {
    "text": "end of the world disaster",
    "start": "956579",
    "end": "959899"
  },
  {
    "text": "so let's try again now with username",
    "start": "960060",
    "end": "964560"
  },
  {
    "text": "spaces yes so",
    "start": "964560",
    "end": "968519"
  },
  {
    "text": "uh",
    "start": "969779",
    "end": "971160"
  },
  {
    "text": "here is the same",
    "start": "971160",
    "end": "974100"
  },
  {
    "text": "here is the same the same pod yaml we",
    "start": "974100",
    "end": "977279"
  },
  {
    "text": "just added this field the host user's",
    "start": "977279",
    "end": "979740"
  },
  {
    "text": "false",
    "start": "979740",
    "end": "980699"
  },
  {
    "text": "with this field it should enable user in",
    "start": "980699",
    "end": "983220"
  },
  {
    "text": "spaces and therefore it should not be",
    "start": "983220",
    "end": "985620"
  },
  {
    "text": "running at both of the hall that's what",
    "start": "985620",
    "end": "988320"
  },
  {
    "text": "should happen",
    "start": "988320",
    "end": "989699"
  },
  {
    "text": "let's see if the",
    "start": "989699",
    "end": "992160"
  },
  {
    "text": "if the Pod is ready funny",
    "start": "992160",
    "end": "996060"
  },
  {
    "text": "because it's running already",
    "start": "996060",
    "end": "997940"
  },
  {
    "text": "so and is it running as root or is it",
    "start": "997940",
    "end": "1001579"
  },
  {
    "text": "running as a user ah let's check so it's",
    "start": "1001579",
    "end": "1005600"
  },
  {
    "text": "also running in sleep infinity and it's",
    "start": "1005600",
    "end": "1007399"
  },
  {
    "text": "running at this this unpublished user",
    "start": "1007399",
    "end": "1010519"
  },
  {
    "text": "cool so this is a good sign",
    "start": "1010519",
    "end": "1014320"
  },
  {
    "text": "so",
    "start": "1014360",
    "end": "1015620"
  },
  {
    "text": "there is a thing to take into account",
    "start": "1015620",
    "end": "1017899"
  },
  {
    "text": "when executing the this is the very same",
    "start": "1017899",
    "end": "1019940"
  },
  {
    "text": "script we just executed",
    "start": "1019940",
    "end": "1022100"
  },
  {
    "text": "but as you can see start with a mount",
    "start": "1022100",
    "end": "1024199"
  },
  {
    "text": "line the thing is we cannot Mount inside",
    "start": "1024199",
    "end": "1027199"
  },
  {
    "text": "this spot",
    "start": "1027199",
    "end": "1029058"
  },
  {
    "text": "but we can create a nested use of",
    "start": "1029059",
    "end": "1031459"
  },
  {
    "text": "namespace where we have all the",
    "start": "1031459",
    "end": "1032720"
  },
  {
    "text": "capabilities needed and we can mount",
    "start": "1032720",
    "end": "1034520"
  },
  {
    "text": "there",
    "start": "1034520",
    "end": "1035540"
  },
  {
    "text": "so let's first copy the script to the",
    "start": "1035540",
    "end": "1040040"
  },
  {
    "text": "to the part and let's verify that this",
    "start": "1040040",
    "end": "1043520"
  },
  {
    "text": "line",
    "start": "1043520",
    "end": "1044298"
  },
  {
    "text": "will not work okay",
    "start": "1044299",
    "end": "1047240"
  },
  {
    "text": "so just to be sure",
    "start": "1047240",
    "end": "1050439"
  },
  {
    "text": "yeah so this line doesn't work",
    "start": "1053299",
    "end": "1055340"
  },
  {
    "text": "permission deny",
    "start": "1055340",
    "end": "1057080"
  },
  {
    "text": "so let's execute this this is our",
    "start": "1057080",
    "end": "1059539"
  },
  {
    "text": "technicality that doesn't really matter",
    "start": "1059539",
    "end": "1061160"
  },
  {
    "text": "but if we use this we can execute all",
    "start": "1061160",
    "end": "1064760"
  },
  {
    "text": "the lines there",
    "start": "1064760",
    "end": "1067039"
  },
  {
    "text": "so here we can see that the amount was",
    "start": "1067039",
    "end": "1070820"
  },
  {
    "text": "executed correctly",
    "start": "1070820",
    "end": "1072679"
  },
  {
    "text": "however basically nothing that try to",
    "start": "1072679",
    "end": "1075620"
  },
  {
    "text": "create files or directories uh have",
    "start": "1075620",
    "end": "1077900"
  },
  {
    "text": "permission denied",
    "start": "1077900",
    "end": "1079340"
  },
  {
    "text": "the most interesting one to check is",
    "start": "1079340",
    "end": "1081620"
  },
  {
    "text": "this one because we couldn't create the",
    "start": "1081620",
    "end": "1084080"
  },
  {
    "text": "release agent file this is the binary",
    "start": "1084080",
    "end": "1086660"
  },
  {
    "text": "binary that will be executed as approach",
    "start": "1086660",
    "end": "1089480"
  },
  {
    "text": "so we couldn't create the file things",
    "start": "1089480",
    "end": "1092120"
  },
  {
    "text": "Mouse like this didn't work",
    "start": "1092120",
    "end": "1095780"
  },
  {
    "text": "but let's see if the file exists",
    "start": "1095780",
    "end": "1100400"
  },
  {
    "text": "by 11 access the content of the file is",
    "start": "1100400",
    "end": "1103820"
  },
  {
    "text": "of course if it doesn't exist there will",
    "start": "1103820",
    "end": "1106640"
  },
  {
    "text": "be no content yes yeah",
    "start": "1106640",
    "end": "1110299"
  },
  {
    "text": "um",
    "start": "1110299",
    "end": "1112220"
  },
  {
    "text": "and there's no clip process lingering",
    "start": "1112220",
    "end": "1114740"
  },
  {
    "text": "there either right",
    "start": "1114740",
    "end": "1116720"
  },
  {
    "text": "yeah yeah",
    "start": "1116720",
    "end": "1118340"
  },
  {
    "text": "so we couldn't break out of the",
    "start": "1118340",
    "end": "1120860"
  },
  {
    "text": "container",
    "start": "1120860",
    "end": "1122539"
  },
  {
    "text": "yeah with these eggs right",
    "start": "1122539",
    "end": "1125360"
  },
  {
    "text": "yeah just adding this simple ball in the",
    "start": "1125360",
    "end": "1127700"
  },
  {
    "text": "Box in the Box pack uh did all the",
    "start": "1127700",
    "end": "1131240"
  },
  {
    "text": "difference because",
    "start": "1131240",
    "end": "1133039"
  },
  {
    "text": "the container doesn't run as both on the",
    "start": "1133039",
    "end": "1135020"
  },
  {
    "text": "host now and these files can only be",
    "start": "1135020",
    "end": "1136760"
  },
  {
    "text": "written by vote on the host so",
    "start": "1136760",
    "end": "1140059"
  },
  {
    "text": "this is a very good thing because a lot",
    "start": "1140059",
    "end": "1142160"
  },
  {
    "text": "of images that need to run as good",
    "start": "1142160",
    "end": "1145100"
  },
  {
    "text": "in most cases can continue to run as",
    "start": "1145100",
    "end": "1147200"
  },
  {
    "text": "well to find and modify if username",
    "start": "1147200",
    "end": "1149960"
  },
  {
    "text": "spaces are enabled but just have this",
    "start": "1149960",
    "end": "1152059"
  },
  {
    "text": "Extra Protection if they don't really",
    "start": "1152059",
    "end": "1153980"
  },
  {
    "text": "need to run and put on the hole",
    "start": "1153980",
    "end": "1157100"
  },
  {
    "text": "amazing",
    "start": "1157100",
    "end": "1158900"
  },
  {
    "text": "so to recap since we are running several",
    "start": "1158900",
    "end": "1161720"
  },
  {
    "text": "applications in the same host we need a",
    "start": "1161720",
    "end": "1164000"
  },
  {
    "text": "way to isolate the users we are already",
    "start": "1164000",
    "end": "1166640"
  },
  {
    "text": "isolating the network the view of",
    "start": "1166640",
    "end": "1168679"
  },
  {
    "text": "processes the file systems Etc but until",
    "start": "1168679",
    "end": "1171919"
  },
  {
    "text": "now we were not isolating the users this",
    "start": "1171919",
    "end": "1175460"
  },
  {
    "text": "left behind a lesson learned by Linux",
    "start": "1175460",
    "end": "1177679"
  },
  {
    "text": "distributions many years ago to run",
    "start": "1177679",
    "end": "1180320"
  },
  {
    "text": "processes as different users with the",
    "start": "1180320",
    "end": "1183260"
  },
  {
    "text": "least privilege possible",
    "start": "1183260",
    "end": "1185720"
  },
  {
    "text": "with username spaces we bring some of",
    "start": "1185720",
    "end": "1188720"
  },
  {
    "text": "those best practices back if our",
    "start": "1188720",
    "end": "1190580"
  },
  {
    "text": "application run as root in the container",
    "start": "1190580",
    "end": "1192559"
  },
  {
    "text": "they become more secure because the",
    "start": "1192559",
    "end": "1194480"
  },
  {
    "text": "process is actually running as an",
    "start": "1194480",
    "end": "1195860"
  },
  {
    "text": "employee and privileged user in the",
    "start": "1195860",
    "end": "1197840"
  },
  {
    "text": "house",
    "start": "1197840",
    "end": "1198559"
  },
  {
    "text": "if a vulnerability allows an attacker to",
    "start": "1198559",
    "end": "1200660"
  },
  {
    "text": "escape the container the damage is",
    "start": "1200660",
    "end": "1202340"
  },
  {
    "text": "limited as the user is in process and",
    "start": "1202340",
    "end": "1204860"
  },
  {
    "text": "doesn't have any additional capabilities",
    "start": "1204860",
    "end": "1207140"
  },
  {
    "text": "and enable username spaces doesn't",
    "start": "1207140",
    "end": "1209000"
  },
  {
    "text": "require changes in the app for the vast",
    "start": "1209000",
    "end": "1211280"
  },
  {
    "text": "majority of workloads",
    "start": "1211280",
    "end": "1213799"
  },
  {
    "text": "this means that several vulnerabilities",
    "start": "1213799",
    "end": "1216140"
  },
  {
    "text": "are no longer exploitable with username",
    "start": "1216140",
    "end": "1218900"
  },
  {
    "text": "spaces enabled for example the first",
    "start": "1218900",
    "end": "1221360"
  },
  {
    "text": "3bes in this list are completely",
    "start": "1221360",
    "end": "1223640"
  },
  {
    "text": "mitigated they can't be exploited if the",
    "start": "1223640",
    "end": "1226520"
  },
  {
    "text": "Pod is using a username space the other",
    "start": "1226520",
    "end": "1229100"
  },
  {
    "text": "two are partially mitigated those cves",
    "start": "1229100",
    "end": "1231919"
  },
  {
    "text": "allow attackers to read arbitrary files",
    "start": "1231919",
    "end": "1234620"
  },
  {
    "text": "from the host and when the user in the",
    "start": "1234620",
    "end": "1236960"
  },
  {
    "text": "host is unprivileged we can only read",
    "start": "1236960",
    "end": "1239480"
  },
  {
    "text": "files that have read permissions for",
    "start": "1239480",
    "end": "1241580"
  },
  {
    "text": "others without username spaces we could",
    "start": "1241580",
    "end": "1243919"
  },
  {
    "text": "read any file in the host",
    "start": "1243919",
    "end": "1247520"
  },
  {
    "text": "and these are just a few examples there",
    "start": "1247520",
    "end": "1250280"
  },
  {
    "text": "have been more vulnerabilities relating",
    "start": "1250280",
    "end": "1252200"
  },
  {
    "text": "to accessing files in the host and most",
    "start": "1252200",
    "end": "1254419"
  },
  {
    "text": "of them are mitigated as they are based",
    "start": "1254419",
    "end": "1257000"
  },
  {
    "text": "on the same underlying issue exposing",
    "start": "1257000",
    "end": "1258919"
  },
  {
    "text": "the host file system to the container",
    "start": "1258919",
    "end": "1260780"
  },
  {
    "text": "with username spaces we never run a",
    "start": "1260780",
    "end": "1263240"
  },
  {
    "text": "solute and so we can only read files if",
    "start": "1263240",
    "end": "1266840"
  },
  {
    "text": "they have permission for others",
    "start": "1266840",
    "end": "1269299"
  },
  {
    "text": "if we don't want an application to run",
    "start": "1269299",
    "end": "1271460"
  },
  {
    "text": "as privileged we shouldn't run it as",
    "start": "1271460",
    "end": "1273380"
  },
  {
    "text": "root in the host today we run most of",
    "start": "1273380",
    "end": "1276440"
  },
  {
    "text": "them as root and try to limit what root",
    "start": "1276440",
    "end": "1278600"
  },
  {
    "text": "can do with second and app armor instead",
    "start": "1278600",
    "end": "1281960"
  },
  {
    "text": "we can now run them as root not root",
    "start": "1281960",
    "end": "1285080"
  },
  {
    "text": "with users that aren't privileged",
    "start": "1285080",
    "end": "1287780"
  },
  {
    "text": "outside the part and we can still apply",
    "start": "1287780",
    "end": "1290360"
  },
  {
    "text": "second on other Linux security modules",
    "start": "1290360",
    "end": "1293059"
  },
  {
    "text": "for additional isolation",
    "start": "1293059",
    "end": "1295880"
  },
  {
    "text": "exactly before we go I'd like to thank",
    "start": "1295880",
    "end": "1300080"
  },
  {
    "text": "Giuseppe's carvana from Red Hot who is",
    "start": "1300080",
    "end": "1302120"
  },
  {
    "text": "co-author of the cab with me we both",
    "start": "1302120",
    "end": "1304520"
  },
  {
    "text": "work in the kubernetes implementation",
    "start": "1304520",
    "end": "1306020"
  },
  {
    "text": "I'm working in the continuity support",
    "start": "1306020",
    "end": "1308539"
  },
  {
    "text": "too with some members of the community",
    "start": "1308539",
    "end": "1310400"
  },
  {
    "text": "and he also worked in the cryo",
    "start": "1310400",
    "end": "1312320"
  },
  {
    "text": "implementation",
    "start": "1312320",
    "end": "1313640"
  },
  {
    "text": "I would also like to thank people from",
    "start": "1313640",
    "end": "1315559"
  },
  {
    "text": "the signal and sync storage community",
    "start": "1315559",
    "end": "1317240"
  },
  {
    "text": "that community that helped to move this",
    "start": "1317240",
    "end": "1319400"
  },
  {
    "text": "gap which was first started seven years",
    "start": "1319400",
    "end": "1321740"
  },
  {
    "text": "ago by other Engineers so a lot of",
    "start": "1321740",
    "end": "1324559"
  },
  {
    "text": "thanks to direct manual Don Sergey",
    "start": "1324559",
    "end": "1327140"
  },
  {
    "text": "Hammond and Tim and thanks to my",
    "start": "1327140",
    "end": "1330080"
  },
  {
    "text": "co-workers and Microsoft Microsoft",
    "start": "1330080",
    "end": "1331880"
  },
  {
    "text": "Mauricio and Alvin that helped me with",
    "start": "1331880",
    "end": "1333679"
  },
  {
    "text": "some early revisions of this Gap",
    "start": "1333679",
    "end": "1336020"
  },
  {
    "text": "indeed many thanks to everyone that",
    "start": "1336020",
    "end": "1338539"
  },
  {
    "text": "helped make this a reality and thank you",
    "start": "1338539",
    "end": "1341299"
  },
  {
    "text": "for watching",
    "start": "1341299",
    "end": "1344019"
  }
]