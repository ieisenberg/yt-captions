[
  {
    "text": "welcome everyone to my session",
    "start": "1439",
    "end": "4080"
  },
  {
    "text": "kubernetes and checkpoint restore",
    "start": "4080",
    "end": "8319"
  },
  {
    "text": "my name is adrian rebo i work for red",
    "start": "8480",
    "end": "11920"
  },
  {
    "text": "hat since 2015",
    "start": "11920",
    "end": "14799"
  },
  {
    "text": "and i'm involved in process migration",
    "start": "14799",
    "end": "17680"
  },
  {
    "text": "which is the basis",
    "start": "17680",
    "end": "19600"
  },
  {
    "text": "or which is the result of checkpoint",
    "start": "19600",
    "end": "21119"
  },
  {
    "text": "resource restore for at least",
    "start": "21119",
    "end": "24000"
  },
  {
    "text": "10 11 years now um i'm involved in in",
    "start": "24000",
    "end": "27519"
  },
  {
    "text": "creo in some way since 2012 crew is the",
    "start": "27519",
    "end": "30560"
  },
  {
    "text": "basis as the tool we use to checkpoint",
    "start": "30560",
    "end": "33840"
  },
  {
    "text": "and restore",
    "start": "33840",
    "end": "35200"
  },
  {
    "text": "our processes and container here today",
    "start": "35200",
    "end": "38399"
  },
  {
    "text": "and i'm focusing on on container",
    "start": "38399",
    "end": "40559"
  },
  {
    "text": "migration around",
    "start": "40559",
    "end": "42399"
  },
  {
    "text": "i would say 2015",
    "start": "42399",
    "end": "45280"
  },
  {
    "text": "and",
    "start": "45280",
    "end": "46239"
  },
  {
    "text": "the",
    "start": "46239",
    "end": "47440"
  },
  {
    "text": "agenda for today is i first want to give",
    "start": "47440",
    "end": "49440"
  },
  {
    "text": "an introduction about",
    "start": "49440",
    "end": "51600"
  },
  {
    "text": "a few definitions i'm using",
    "start": "51600",
    "end": "53920"
  },
  {
    "text": "then i want to",
    "start": "53920",
    "end": "56718"
  },
  {
    "text": "show a few use cases why a checkpoint",
    "start": "57039",
    "end": "59520"
  },
  {
    "text": "restore and",
    "start": "59520",
    "end": "61359"
  },
  {
    "text": "container migration might be",
    "start": "61359",
    "end": "63760"
  },
  {
    "text": "might be something something useful and",
    "start": "63760",
    "end": "66159"
  },
  {
    "text": "then i want to give some details about",
    "start": "66159",
    "end": "68320"
  },
  {
    "text": "um basically how crew enables us to",
    "start": "68320",
    "end": "71600"
  },
  {
    "text": "checkpoint and restore processes and",
    "start": "71600",
    "end": "73680"
  },
  {
    "text": "containers",
    "start": "73680",
    "end": "76159"
  },
  {
    "text": "so first the definition of container",
    "start": "76159",
    "end": "77680"
  },
  {
    "text": "life migration because the work to get",
    "start": "77680",
    "end": "80799"
  },
  {
    "text": "checkpoint restore working with",
    "start": "80799",
    "end": "82560"
  },
  {
    "text": "container is always also",
    "start": "82560",
    "end": "85119"
  },
  {
    "text": "the possibility to migrate containers",
    "start": "85119",
    "end": "87759"
  },
  {
    "text": "from one system to another one",
    "start": "87759",
    "end": "90320"
  },
  {
    "text": "and",
    "start": "90320",
    "end": "91200"
  },
  {
    "text": "and and basically the idea behind",
    "start": "91200",
    "end": "93040"
  },
  {
    "text": "container live migration is transfer a",
    "start": "93040",
    "end": "95280"
  },
  {
    "text": "running container from one system to",
    "start": "95280",
    "end": "97520"
  },
  {
    "text": "another system you could also call it",
    "start": "97520",
    "end": "99439"
  },
  {
    "text": "maybe stateful migration",
    "start": "99439",
    "end": "101920"
  },
  {
    "text": "because the state of the application in",
    "start": "101920",
    "end": "104240"
  },
  {
    "text": "the container is not lost um but",
    "start": "104240",
    "end": "106960"
  },
  {
    "text": "continues to be there",
    "start": "106960",
    "end": "108880"
  },
  {
    "text": "and a very on a from a very high level",
    "start": "108880",
    "end": "111439"
  },
  {
    "text": "view um container migration is basically",
    "start": "111439",
    "end": "114560"
  },
  {
    "text": "we serialize the container on the source",
    "start": "114560",
    "end": "117200"
  },
  {
    "text": "system",
    "start": "117200",
    "end": "118719"
  },
  {
    "text": "write it to disk",
    "start": "118719",
    "end": "120399"
  },
  {
    "text": "and transfer the the image we",
    "start": "120399",
    "end": "123759"
  },
  {
    "text": "written to disk to a destination system",
    "start": "123759",
    "end": "126799"
  },
  {
    "text": "and on this destination system we",
    "start": "126799",
    "end": "128800"
  },
  {
    "text": "restore from the image to process the",
    "start": "128800",
    "end": "131280"
  },
  {
    "text": "container and so we have",
    "start": "131280",
    "end": "133440"
  },
  {
    "text": "container migration",
    "start": "133440",
    "end": "136400"
  },
  {
    "text": "um",
    "start": "137040",
    "end": "137840"
  },
  {
    "text": "as mentioned this is all",
    "start": "137840",
    "end": "139360"
  },
  {
    "text": "everything i'm talking about today is",
    "start": "139360",
    "end": "141040"
  },
  {
    "text": "based on creo checkpoint in restoring",
    "start": "141040",
    "end": "143920"
  },
  {
    "text": "user space the reason for the name is at",
    "start": "143920",
    "end": "146239"
  },
  {
    "text": "the time creo was first developed there",
    "start": "146239",
    "end": "148959"
  },
  {
    "text": "were different approaches to",
    "start": "148959",
    "end": "151200"
  },
  {
    "text": "checkpointing and restoring in linux",
    "start": "151200",
    "end": "154560"
  },
  {
    "text": "there were kernel-only approaches there",
    "start": "154560",
    "end": "157280"
  },
  {
    "text": "were mixed kernel and user-based",
    "start": "157280",
    "end": "159040"
  },
  {
    "text": "approaches there were approaches where",
    "start": "159040",
    "end": "161040"
  },
  {
    "text": "you intercepted system calls and creo",
    "start": "161040",
    "end": "165280"
  },
  {
    "text": "took another approach and",
    "start": "165280",
    "end": "167440"
  },
  {
    "text": "completely did it from user space using",
    "start": "167440",
    "end": "170400"
  },
  {
    "text": "existing interfaces to collect as many",
    "start": "170400",
    "end": "172959"
  },
  {
    "text": "information about the running process as",
    "start": "172959",
    "end": "175120"
  },
  {
    "text": "possible",
    "start": "175120",
    "end": "176720"
  },
  {
    "text": "there are multiple integrations of",
    "start": "176720",
    "end": "178480"
  },
  {
    "text": "preview in container engines",
    "start": "178480",
    "end": "180720"
  },
  {
    "text": "container runtimes and",
    "start": "180720",
    "end": "183519"
  },
  {
    "text": "want to",
    "start": "183519",
    "end": "184400"
  },
  {
    "text": "present some of those here so",
    "start": "184400",
    "end": "186879"
  },
  {
    "text": "the",
    "start": "186879",
    "end": "187680"
  },
  {
    "text": "one i have to present first is the",
    "start": "187680",
    "end": "190800"
  },
  {
    "text": "openvset integration because um they",
    "start": "190800",
    "end": "193599"
  },
  {
    "text": "invented creo and",
    "start": "193599",
    "end": "195519"
  },
  {
    "text": "they had",
    "start": "195519",
    "end": "197680"
  },
  {
    "text": "some",
    "start": "197680",
    "end": "198480"
  },
  {
    "text": "mechanism to migrate containers before",
    "start": "198480",
    "end": "200400"
  },
  {
    "text": "crew",
    "start": "200400",
    "end": "201680"
  },
  {
    "text": "um but",
    "start": "201680",
    "end": "204319"
  },
  {
    "text": "i think they were not able to to",
    "start": "204319",
    "end": "205840"
  },
  {
    "text": "upstream it to the linux kernel so they",
    "start": "205840",
    "end": "208000"
  },
  {
    "text": "worked on something which can be",
    "start": "208000",
    "end": "209519"
  },
  {
    "text": "upstreamed and which everyone can use",
    "start": "209519",
    "end": "211680"
  },
  {
    "text": "and so they invented creo and they are",
    "start": "211680",
    "end": "213920"
  },
  {
    "text": "now using it to migrate containers and",
    "start": "213920",
    "end": "216159"
  },
  {
    "text": "using creo sun then there's borg",
    "start": "216159",
    "end": "219599"
  },
  {
    "text": "google's container engine it also uses",
    "start": "219599",
    "end": "221599"
  },
  {
    "text": "um",
    "start": "221599",
    "end": "222560"
  },
  {
    "text": "3u to migrate container especially for",
    "start": "222560",
    "end": "224959"
  },
  {
    "text": "long running jobs which take a couple of",
    "start": "224959",
    "end": "227280"
  },
  {
    "text": "hours if one of the",
    "start": "227280",
    "end": "228750"
  },
  {
    "text": "[Music]",
    "start": "228750",
    "end": "230239"
  },
  {
    "text": "container nodes is out of resources or",
    "start": "230239",
    "end": "233840"
  },
  {
    "text": "is soon gonna be out of resources then",
    "start": "233840",
    "end": "236239"
  },
  {
    "text": "um",
    "start": "236239",
    "end": "237120"
  },
  {
    "text": "borg can move",
    "start": "237120",
    "end": "239120"
  },
  {
    "text": "the container from one system to another",
    "start": "239120",
    "end": "241200"
  },
  {
    "text": "without stopping it and without losing a",
    "start": "241200",
    "end": "243680"
  },
  {
    "text": "couple hours of work which might have",
    "start": "243680",
    "end": "246000"
  },
  {
    "text": "already went into the currently running",
    "start": "246000",
    "end": "248640"
  },
  {
    "text": "job",
    "start": "248640",
    "end": "249840"
  },
  {
    "text": "there's a integration of crew in like c",
    "start": "249840",
    "end": "252080"
  },
  {
    "text": "like c so like c can migrate containers",
    "start": "252080",
    "end": "254640"
  },
  {
    "text": "from one host to another host using",
    "start": "254640",
    "end": "257519"
  },
  {
    "text": "using creo this also exists for some",
    "start": "257519",
    "end": "260000"
  },
  {
    "text": "time already",
    "start": "260000",
    "end": "261280"
  },
  {
    "text": "then there's an integration in",
    "start": "261280",
    "end": "263040"
  },
  {
    "text": "docker there's a checkpoint and a",
    "start": "263040",
    "end": "265040"
  },
  {
    "text": "restore command which you can use to",
    "start": "265040",
    "end": "267199"
  },
  {
    "text": "check pointers container then transfer",
    "start": "267199",
    "end": "269600"
  },
  {
    "text": "it to another system and restore it",
    "start": "269600",
    "end": "272080"
  },
  {
    "text": "and the same exists for podman",
    "start": "272080",
    "end": "274560"
  },
  {
    "text": "and that's what i've been working on the",
    "start": "274560",
    "end": "276560"
  },
  {
    "text": "last um",
    "start": "276560",
    "end": "278240"
  },
  {
    "text": "three four years now to integrate creo",
    "start": "278240",
    "end": "281040"
  },
  {
    "text": "in into podman",
    "start": "281040",
    "end": "283040"
  },
  {
    "text": "and the work i have done for podman i",
    "start": "283040",
    "end": "285680"
  },
  {
    "text": "have also um",
    "start": "285680",
    "end": "288000"
  },
  {
    "text": "brought to to cryo um",
    "start": "288000",
    "end": "290000"
  },
  {
    "text": "[Music]",
    "start": "290000",
    "end": "292000"
  },
  {
    "text": "and i'm working on this now for about",
    "start": "292000",
    "end": "294800"
  },
  {
    "text": "for about a year but the problem is i",
    "start": "294800",
    "end": "297120"
  },
  {
    "text": "can the pull request cannot be merged in",
    "start": "297120",
    "end": "299440"
  },
  {
    "text": "cryo because it depends on changes to",
    "start": "299440",
    "end": "302000"
  },
  {
    "text": "the cri api",
    "start": "302000",
    "end": "304080"
  },
  {
    "text": "and this requires changes to kubernetes",
    "start": "304080",
    "end": "306720"
  },
  {
    "text": "so it's it's it's a difficult um",
    "start": "306720",
    "end": "309120"
  },
  {
    "text": "situation because you cannot implement",
    "start": "309120",
    "end": "312880"
  },
  {
    "text": "one without the other and so you have to",
    "start": "312880",
    "end": "315120"
  },
  {
    "text": "start at some point and then you can",
    "start": "315120",
    "end": "317919"
  },
  {
    "text": "implement the other thing but the one",
    "start": "317919",
    "end": "319840"
  },
  {
    "text": "thing doesn't work with it so it's",
    "start": "319840",
    "end": "321680"
  },
  {
    "text": "complicated and we are discussing this",
    "start": "321680",
    "end": "324240"
  },
  {
    "text": "how to best",
    "start": "324240",
    "end": "325919"
  },
  {
    "text": "integrate it into kubernetes",
    "start": "325919",
    "end": "328479"
  },
  {
    "text": "interestingly enough there's a",
    "start": "328479",
    "end": "330479"
  },
  {
    "text": "issue of an issue",
    "start": "330479",
    "end": "332720"
  },
  {
    "text": "about",
    "start": "332720",
    "end": "334320"
  },
  {
    "text": "migration open in in kubernetes since",
    "start": "334320",
    "end": "336840"
  },
  {
    "text": "2015 there's also a lot of discussion",
    "start": "336840",
    "end": "339759"
  },
  {
    "text": "going on there but until now nothing has",
    "start": "339759",
    "end": "342720"
  },
  {
    "text": "been merged into kubernetes to",
    "start": "342720",
    "end": "346080"
  },
  {
    "text": "implement",
    "start": "346080",
    "end": "347199"
  },
  {
    "text": "migration or to at least get",
    "start": "347199",
    "end": "349919"
  },
  {
    "text": "a step closer to to implementing",
    "start": "349919",
    "end": "353120"
  },
  {
    "text": "migration in kubernetes so now about a",
    "start": "353120",
    "end": "355919"
  },
  {
    "text": "couple of use cases",
    "start": "355919",
    "end": "357680"
  },
  {
    "text": "the first use case is reboot and safe",
    "start": "357680",
    "end": "359919"
  },
  {
    "text": "state",
    "start": "359919",
    "end": "361039"
  },
  {
    "text": "i try to visualize it here so we have a",
    "start": "361039",
    "end": "363440"
  },
  {
    "text": "container running on a host and the host",
    "start": "363440",
    "end": "366000"
  },
  {
    "text": "is",
    "start": "366000",
    "end": "367039"
  },
  {
    "text": "memory is blue and the container memory",
    "start": "367039",
    "end": "368720"
  },
  {
    "text": "is red so to to see the differences here",
    "start": "368720",
    "end": "372240"
  },
  {
    "text": "so um we",
    "start": "372240",
    "end": "374160"
  },
  {
    "text": "we want to reboot a host because we have",
    "start": "374160",
    "end": "376000"
  },
  {
    "text": "to upgrade the kernel but we do not want",
    "start": "376000",
    "end": "377759"
  },
  {
    "text": "to lose the state of the container",
    "start": "377759",
    "end": "379120"
  },
  {
    "text": "because it takes forever to start so",
    "start": "379120",
    "end": "381039"
  },
  {
    "text": "what do we do",
    "start": "381039",
    "end": "382319"
  },
  {
    "text": "with checkpoint and restore we",
    "start": "382319",
    "end": "383919"
  },
  {
    "text": "checkpoint a container write it to the",
    "start": "383919",
    "end": "385680"
  },
  {
    "text": "local disk then we reboot the host so",
    "start": "385680",
    "end": "388080"
  },
  {
    "text": "the original host with its memory is",
    "start": "388080",
    "end": "390400"
  },
  {
    "text": "gone",
    "start": "390400",
    "end": "391280"
  },
  {
    "text": "and then once the container once the",
    "start": "391280",
    "end": "393759"
  },
  {
    "text": "host has rebooted into new new kernel",
    "start": "393759",
    "end": "396240"
  },
  {
    "text": "that's why we have a different color but",
    "start": "396240",
    "end": "398720"
  },
  {
    "text": "we have the same container running as",
    "start": "398720",
    "end": "400960"
  },
  {
    "text": "before it's still red as before",
    "start": "400960",
    "end": "404240"
  },
  {
    "text": "i have prepared a demo to show this here",
    "start": "404240",
    "end": "406880"
  },
  {
    "text": "so let's connect to a rel",
    "start": "406880",
    "end": "410000"
  },
  {
    "text": "eight system using podman",
    "start": "410000",
    "end": "412639"
  },
  {
    "text": "so let me start a container podman run",
    "start": "412639",
    "end": "416160"
  },
  {
    "text": "and so this is a wildfly based container",
    "start": "416160",
    "end": "418800"
  },
  {
    "text": "it's a java application server and it",
    "start": "418800",
    "end": "420479"
  },
  {
    "text": "has a real simple stateful application",
    "start": "420479",
    "end": "422720"
  },
  {
    "text": "in there which returns just a number",
    "start": "422720",
    "end": "425280"
  },
  {
    "text": "and once the number has been returned it",
    "start": "425280",
    "end": "427440"
  },
  {
    "text": "increases it so the next time i get a",
    "start": "427440",
    "end": "429199"
  },
  {
    "text": "number or increased by one so it's",
    "start": "429199",
    "end": "431680"
  },
  {
    "text": "stateful and now i can talk to",
    "start": "431680",
    "end": "434840"
  },
  {
    "text": "the container and ask for the value so",
    "start": "434840",
    "end": "438400"
  },
  {
    "text": "give me a zero one and two",
    "start": "438400",
    "end": "441120"
  },
  {
    "text": "now i say i want to create a checkpoint",
    "start": "441120",
    "end": "443599"
  },
  {
    "text": "of the container so i say",
    "start": "443599",
    "end": "445599"
  },
  {
    "text": "potman",
    "start": "445599",
    "end": "446960"
  },
  {
    "text": "container",
    "start": "446960",
    "end": "448560"
  },
  {
    "text": "check point checkpoint the last",
    "start": "448560",
    "end": "451840"
  },
  {
    "text": "container",
    "start": "451840",
    "end": "453199"
  },
  {
    "text": "and export it to the file so now",
    "start": "453199",
    "end": "457039"
  },
  {
    "text": "podman will write the checkpoint file",
    "start": "457039",
    "end": "460319"
  },
  {
    "text": "um to the disk and then i can reboot the",
    "start": "460319",
    "end": "462720"
  },
  {
    "text": "host and later",
    "start": "462720",
    "end": "464960"
  },
  {
    "text": "i can restore",
    "start": "464960",
    "end": "467039"
  },
  {
    "text": "the container from that",
    "start": "467039",
    "end": "469280"
  },
  {
    "text": "checkpoint file",
    "start": "469280",
    "end": "470800"
  },
  {
    "text": "the checkpoint file does not only",
    "start": "470800",
    "end": "472560"
  },
  {
    "text": "include the checkpoint of the processes",
    "start": "472560",
    "end": "474960"
  },
  {
    "text": "in the container but it also includes um",
    "start": "474960",
    "end": "478240"
  },
  {
    "text": "changes to the file system because when",
    "start": "478240",
    "end": "480080"
  },
  {
    "text": "the wi-fi starts it creates log files",
    "start": "480080",
    "end": "483039"
  },
  {
    "text": "and",
    "start": "483039",
    "end": "484160"
  },
  {
    "text": "a lot of files um to to to to manage it",
    "start": "484160",
    "end": "488560"
  },
  {
    "text": "thing it's things so um all these",
    "start": "488560",
    "end": "490960"
  },
  {
    "text": "changes to the file system are also part",
    "start": "490960",
    "end": "492879"
  },
  {
    "text": "of the checkpoint archive so now let's",
    "start": "492879",
    "end": "496479"
  },
  {
    "text": "reconnect to the vm",
    "start": "496479",
    "end": "498400"
  },
  {
    "text": "let's see there's no container running",
    "start": "498400",
    "end": "500720"
  },
  {
    "text": "so let's restore the container putman",
    "start": "500720",
    "end": "503120"
  },
  {
    "text": "container restore and i say import and i",
    "start": "503120",
    "end": "506479"
  },
  {
    "text": "give it the",
    "start": "506479",
    "end": "508240"
  },
  {
    "text": "guitar file from before",
    "start": "508240",
    "end": "510400"
  },
  {
    "text": "and now if we connect to the container",
    "start": "510400",
    "end": "512320"
  },
  {
    "text": "it should give us backup three instead",
    "start": "512320",
    "end": "514719"
  },
  {
    "text": "of the zero as it would when starting",
    "start": "514719",
    "end": "517279"
  },
  {
    "text": "from",
    "start": "517279",
    "end": "518839"
  },
  {
    "text": "scratch talk to the container and we get",
    "start": "518839",
    "end": "521440"
  },
  {
    "text": "a three and a four so we did a reboot",
    "start": "521440",
    "end": "523839"
  },
  {
    "text": "and we were able to save the state of",
    "start": "523839",
    "end": "526240"
  },
  {
    "text": "the container",
    "start": "526240",
    "end": "527920"
  },
  {
    "text": "back to the slides and",
    "start": "527920",
    "end": "530000"
  },
  {
    "text": "next use case is what i call a quick",
    "start": "530000",
    "end": "532320"
  },
  {
    "text": "startup so again we have a container of",
    "start": "532320",
    "end": "534560"
  },
  {
    "text": "a host and a container again takes a",
    "start": "534560",
    "end": "536080"
  },
  {
    "text": "long time to initialize",
    "start": "536080",
    "end": "539200"
  },
  {
    "text": "and",
    "start": "539200",
    "end": "540000"
  },
  {
    "text": "now",
    "start": "540000",
    "end": "540800"
  },
  {
    "text": "we want to start up the container faster",
    "start": "540800",
    "end": "543440"
  },
  {
    "text": "so we take a container a copy of the",
    "start": "543440",
    "end": "545680"
  },
  {
    "text": "container so we",
    "start": "545680",
    "end": "548080"
  },
  {
    "text": "have the container we take a checkpoint",
    "start": "548080",
    "end": "549839"
  },
  {
    "text": "of it but we leave the original",
    "start": "549839",
    "end": "551120"
  },
  {
    "text": "container running",
    "start": "551120",
    "end": "552560"
  },
  {
    "text": "and then we can create multiple copies",
    "start": "552560",
    "end": "554480"
  },
  {
    "text": "of the container um",
    "start": "554480",
    "end": "556240"
  },
  {
    "text": "on the host so let's go back to our",
    "start": "556240",
    "end": "559519"
  },
  {
    "text": "demo system",
    "start": "559519",
    "end": "561519"
  },
  {
    "text": "so let's say",
    "start": "561519",
    "end": "563040"
  },
  {
    "text": "i create another checkpoint i say",
    "start": "563040",
    "end": "564640"
  },
  {
    "text": "apartment container check",
    "start": "564640",
    "end": "568320"
  },
  {
    "text": "checkpoint last container and now i say",
    "start": "568320",
    "end": "572160"
  },
  {
    "text": "um keep it running don't stop the",
    "start": "572160",
    "end": "574080"
  },
  {
    "text": "container after the checkpointing and i",
    "start": "574080",
    "end": "575920"
  },
  {
    "text": "again exported the file",
    "start": "575920",
    "end": "578800"
  },
  {
    "text": "i'm overwriting the existing file um",
    "start": "578800",
    "end": "581920"
  },
  {
    "text": "so we don't need this anymore so",
    "start": "581920",
    "end": "584640"
  },
  {
    "text": "now again the same thing it will create",
    "start": "584640",
    "end": "586320"
  },
  {
    "text": "a checkpoint and the file system",
    "start": "586320",
    "end": "587600"
  },
  {
    "text": "differences or everything will put into",
    "start": "587600",
    "end": "589360"
  },
  {
    "text": "an archive and now i can restore it",
    "start": "589360",
    "end": "591440"
  },
  {
    "text": "let's see so the original container is",
    "start": "591440",
    "end": "593040"
  },
  {
    "text": "still running i can still talk to it",
    "start": "593040",
    "end": "595680"
  },
  {
    "text": "and now i can restore",
    "start": "595680",
    "end": "597760"
  },
  {
    "text": "a copy from the container so when i say",
    "start": "597760",
    "end": "599760"
  },
  {
    "text": "portman container",
    "start": "599760",
    "end": "601680"
  },
  {
    "text": "restore import again the file this will",
    "start": "601680",
    "end": "604959"
  },
  {
    "text": "now fail because portman sees that the",
    "start": "604959",
    "end": "607200"
  },
  {
    "text": "id and the name is already in use and so",
    "start": "607200",
    "end": "609360"
  },
  {
    "text": "it tells me i cannot restore this",
    "start": "609360",
    "end": "611360"
  },
  {
    "text": "because this already exists so i tell",
    "start": "611360",
    "end": "613920"
  },
  {
    "text": "portman then use a different name for it",
    "start": "613920",
    "end": "616320"
  },
  {
    "text": "so let's say i counter one now it will",
    "start": "616320",
    "end": "619279"
  },
  {
    "text": "restore the container",
    "start": "619279",
    "end": "621120"
  },
  {
    "text": "a copy of the container has counter one",
    "start": "621120",
    "end": "623519"
  },
  {
    "text": "and another",
    "start": "623519",
    "end": "626880"
  },
  {
    "text": "copy as",
    "start": "626959",
    "end": "628560"
  },
  {
    "text": "counter two",
    "start": "628560",
    "end": "630320"
  },
  {
    "text": "and",
    "start": "630320",
    "end": "631600"
  },
  {
    "text": "then we should be able to talk all",
    "start": "631600",
    "end": "633760"
  },
  {
    "text": "containers independently so now i can",
    "start": "633760",
    "end": "636640"
  },
  {
    "text": "say potman inspect counter one to get",
    "start": "636640",
    "end": "639440"
  },
  {
    "text": "the ip address of this one so it says",
    "start": "639440",
    "end": "641519"
  },
  {
    "text": "again six seven this is the point where",
    "start": "641519",
    "end": "643920"
  },
  {
    "text": "i",
    "start": "643920",
    "end": "644560"
  },
  {
    "text": "checkpointed it from and now i can also",
    "start": "644560",
    "end": "647120"
  },
  {
    "text": "say inspect counter two and again six",
    "start": "647120",
    "end": "649360"
  },
  {
    "text": "seven eight so",
    "start": "649360",
    "end": "650959"
  },
  {
    "text": "we create multiple copies um of an",
    "start": "650959",
    "end": "653680"
  },
  {
    "text": "existing container",
    "start": "653680",
    "end": "655200"
  },
  {
    "text": "and in this um small",
    "start": "655200",
    "end": "658079"
  },
  {
    "text": "demo case i can see already um",
    "start": "658079",
    "end": "660320"
  },
  {
    "text": "improvements in the startup time because",
    "start": "660320",
    "end": "661920"
  },
  {
    "text": "usually my wildfly container takes like",
    "start": "661920",
    "end": "664240"
  },
  {
    "text": "eight seconds until it can answer the",
    "start": "664240",
    "end": "666000"
  },
  {
    "text": "first request and it takes about four",
    "start": "666000",
    "end": "668320"
  },
  {
    "text": "seconds to restore from from a",
    "start": "668320",
    "end": "671200"
  },
  {
    "text": "checkpoint so i already already have",
    "start": "671200",
    "end": "673120"
  },
  {
    "text": "like um 50",
    "start": "673120",
    "end": "675440"
  },
  {
    "text": "improvement in startup time",
    "start": "675440",
    "end": "677519"
  },
  {
    "text": "re starting from um",
    "start": "677519",
    "end": "679920"
  },
  {
    "text": "from a checkpoint so the next um use",
    "start": "679920",
    "end": "682000"
  },
  {
    "text": "cases container live migration this is",
    "start": "682000",
    "end": "683920"
  },
  {
    "text": "basically a combination of the",
    "start": "683920",
    "end": "686640"
  },
  {
    "text": "two things i've shown before so again i",
    "start": "686640",
    "end": "689440"
  },
  {
    "text": "have a container running on a source",
    "start": "689440",
    "end": "691600"
  },
  {
    "text": "system i take a copy of the container",
    "start": "691600",
    "end": "694320"
  },
  {
    "text": "and write it to disk and then i transfer",
    "start": "694320",
    "end": "696640"
  },
  {
    "text": "it to a destination system and there i",
    "start": "696640",
    "end": "698720"
  },
  {
    "text": "can create multiple copies if i want to",
    "start": "698720",
    "end": "701360"
  },
  {
    "text": "so let's go to",
    "start": "701360",
    "end": "703760"
  },
  {
    "text": "so i already have the check point okay i",
    "start": "703760",
    "end": "707360"
  },
  {
    "text": "already have the checkpoint",
    "start": "707360",
    "end": "709920"
  },
  {
    "text": "so let's transfer it to another system",
    "start": "709920",
    "end": "712079"
  },
  {
    "text": "and say temp dump",
    "start": "712079",
    "end": "715600"
  },
  {
    "text": "tar and transfer it to another vm",
    "start": "715839",
    "end": "719660"
  },
  {
    "text": "[Applause]",
    "start": "719660",
    "end": "721360"
  },
  {
    "text": "where is it here",
    "start": "721360",
    "end": "724000"
  },
  {
    "text": "and so now it's",
    "start": "724000",
    "end": "726320"
  },
  {
    "text": "container migrate with mid middle in the",
    "start": "726320",
    "end": "728399"
  },
  {
    "text": "container migration",
    "start": "728399",
    "end": "730800"
  },
  {
    "text": "and now i'm on the other host and",
    "start": "730800",
    "end": "732639"
  },
  {
    "text": "there's no container hopefully running",
    "start": "732639",
    "end": "734720"
  },
  {
    "text": "here now i say potman container restore",
    "start": "734720",
    "end": "739360"
  },
  {
    "text": "import again from the file i just",
    "start": "739360",
    "end": "742320"
  },
  {
    "text": "transfer to the host",
    "start": "742320",
    "end": "745839"
  },
  {
    "text": "and",
    "start": "746079",
    "end": "748399"
  },
  {
    "text": "it's restoring the container and now i",
    "start": "748720",
    "end": "752320"
  },
  {
    "text": "should be able to",
    "start": "752320",
    "end": "754320"
  },
  {
    "text": "talk to it and i should get probably",
    "start": "754320",
    "end": "757040"
  },
  {
    "text": "again a six right six seven",
    "start": "757040",
    "end": "759360"
  },
  {
    "text": "eight so",
    "start": "759360",
    "end": "760800"
  },
  {
    "text": "and now we have um migrated the",
    "start": "760800",
    "end": "763440"
  },
  {
    "text": "container from one host um to another",
    "start": "763440",
    "end": "766639"
  },
  {
    "text": "host using",
    "start": "766639",
    "end": "768320"
  },
  {
    "text": "portman's um feature to export and",
    "start": "768320",
    "end": "771519"
  },
  {
    "text": "checkpoints",
    "start": "771519",
    "end": "774160"
  },
  {
    "text": "so",
    "start": "774320",
    "end": "775279"
  },
  {
    "text": "i have one more use case here this is",
    "start": "775279",
    "end": "778160"
  },
  {
    "text": "the forensic container checkpointing and",
    "start": "778160",
    "end": "780000"
  },
  {
    "text": "this is also the the use case we are",
    "start": "780000",
    "end": "781760"
  },
  {
    "text": "currently working on our",
    "start": "781760",
    "end": "785040"
  },
  {
    "text": "kubernetes enhancement proposal and a",
    "start": "785040",
    "end": "787519"
  },
  {
    "text": "corresponding pull request to it so the",
    "start": "787519",
    "end": "789519"
  },
  {
    "text": "idea is we",
    "start": "789519",
    "end": "791839"
  },
  {
    "text": "want to introduce checkpoint restore",
    "start": "791839",
    "end": "793760"
  },
  {
    "text": "into kubernetes but it's complicated as",
    "start": "793760",
    "end": "795760"
  },
  {
    "text": "i said with the cri api so we try to",
    "start": "795760",
    "end": "799519"
  },
  {
    "text": "implement a really simple use case of",
    "start": "799519",
    "end": "801760"
  },
  {
    "text": "checkpoint restore",
    "start": "801760",
    "end": "803519"
  },
  {
    "text": "which requires minimal changes to to",
    "start": "803519",
    "end": "806320"
  },
  {
    "text": "kubernetes and most of the changes need",
    "start": "806320",
    "end": "808399"
  },
  {
    "text": "to happen in the container engine",
    "start": "808399",
    "end": "811200"
  },
  {
    "text": "so what we want to do is we want to",
    "start": "811200",
    "end": "813680"
  },
  {
    "text": "checkpoint a container which",
    "start": "813680",
    "end": "816399"
  },
  {
    "text": "we",
    "start": "816399",
    "end": "817600"
  },
  {
    "text": "think something is not right with the",
    "start": "817600",
    "end": "819360"
  },
  {
    "text": "container something seems to be strange",
    "start": "819360",
    "end": "822480"
  },
  {
    "text": "but we do not want to analyze the",
    "start": "822480",
    "end": "824880"
  },
  {
    "text": "container in case there is an attacker",
    "start": "824880",
    "end": "827360"
  },
  {
    "text": "there and in case the attacker has put",
    "start": "827360",
    "end": "830079"
  },
  {
    "text": "something in the container to detect",
    "start": "830079",
    "end": "833360"
  },
  {
    "text": "analysis",
    "start": "833360",
    "end": "835120"
  },
  {
    "text": "of the container",
    "start": "835120",
    "end": "837040"
  },
  {
    "text": "so what we",
    "start": "837040",
    "end": "838240"
  },
  {
    "text": "do is we take a checkpoint of the",
    "start": "838240",
    "end": "840000"
  },
  {
    "text": "container out of kubernetes and um",
    "start": "840000",
    "end": "843120"
  },
  {
    "text": "try and then we can transfer the",
    "start": "843120",
    "end": "845120"
  },
  {
    "text": "container in a sandbox environment where",
    "start": "845120",
    "end": "847680"
  },
  {
    "text": "we can start it without kubernetes but",
    "start": "847680",
    "end": "849680"
  },
  {
    "text": "without um",
    "start": "849680",
    "end": "852720"
  },
  {
    "text": "influencing the original containers so i",
    "start": "852720",
    "end": "856000"
  },
  {
    "text": "also have a demo for this here",
    "start": "856000",
    "end": "858639"
  },
  {
    "text": "so this is now a fedora system no longer",
    "start": "858639",
    "end": "861120"
  },
  {
    "text": "the system from before i have prepared",
    "start": "861120",
    "end": "863279"
  },
  {
    "text": "it here in a screen",
    "start": "863279",
    "end": "865120"
  },
  {
    "text": "so there's kubernetes running with",
    "start": "865120",
    "end": "868480"
  },
  {
    "text": "cryo in combination so let's see cry",
    "start": "868480",
    "end": "871600"
  },
  {
    "text": "control ps i",
    "start": "871600",
    "end": "874399"
  },
  {
    "text": "know this",
    "start": "874399",
    "end": "875760"
  },
  {
    "text": "find out",
    "start": "875760",
    "end": "878160"
  },
  {
    "text": "okay there's no",
    "start": "878880",
    "end": "881120"
  },
  {
    "text": "container running or this is just the",
    "start": "881120",
    "end": "883360"
  },
  {
    "text": "the",
    "start": "883360",
    "end": "885519"
  },
  {
    "text": "dns from kubernetes anyway so let's",
    "start": "887519",
    "end": "890560"
  },
  {
    "text": "start a pod with two containers",
    "start": "890560",
    "end": "894320"
  },
  {
    "text": "so",
    "start": "894320",
    "end": "895600"
  },
  {
    "text": "part with two containers created we can",
    "start": "895600",
    "end": "897920"
  },
  {
    "text": "see so the first container is already",
    "start": "897920",
    "end": "899440"
  },
  {
    "text": "something up the same container as",
    "start": "899440",
    "end": "901199"
  },
  {
    "text": "before",
    "start": "901199",
    "end": "902160"
  },
  {
    "text": "again the wildfly based container and",
    "start": "902160",
    "end": "904000"
  },
  {
    "text": "there's now a second container it's",
    "start": "904000",
    "end": "905680"
  },
  {
    "text": "called counter it's it does the same but",
    "start": "905680",
    "end": "907760"
  },
  {
    "text": "it's just a python application",
    "start": "907760",
    "end": "909680"
  },
  {
    "text": "this time we want to checkpoint um the",
    "start": "909680",
    "end": "912480"
  },
  {
    "text": "python applications so",
    "start": "912480",
    "end": "914639"
  },
  {
    "text": "so let's see um",
    "start": "914639",
    "end": "915720"
  },
  {
    "text": "[Music]",
    "start": "915720",
    "end": "917040"
  },
  {
    "text": "we",
    "start": "917040",
    "end": "917920"
  },
  {
    "text": "first let's talk to the container so",
    "start": "917920",
    "end": "920079"
  },
  {
    "text": "that we see what it returns to us",
    "start": "920079",
    "end": "921920"
  },
  {
    "text": "returns one zero",
    "start": "921920",
    "end": "924240"
  },
  {
    "text": "two so it's it's it's the same as before",
    "start": "924240",
    "end": "926560"
  },
  {
    "text": "just implemented in python",
    "start": "926560",
    "end": "928399"
  },
  {
    "text": "and now we want to check on the",
    "start": "928399",
    "end": "929600"
  },
  {
    "text": "container without stopping it so um we",
    "start": "929600",
    "end": "932720"
  },
  {
    "text": "created a",
    "start": "932720",
    "end": "934720"
  },
  {
    "text": "cubelet um interface which lets us",
    "start": "934720",
    "end": "937920"
  },
  {
    "text": "checkpoint our container so it's called",
    "start": "937920",
    "end": "939279"
  },
  {
    "text": "checkpoint then we say default namespace",
    "start": "939279",
    "end": "941839"
  },
  {
    "text": "um",
    "start": "941839",
    "end": "942720"
  },
  {
    "text": "podname is counters and container name",
    "start": "942720",
    "end": "944800"
  },
  {
    "text": "is counter so we now say let's",
    "start": "944800",
    "end": "947279"
  },
  {
    "text": "checkpoint it now um",
    "start": "947279",
    "end": "949519"
  },
  {
    "text": "kubernetes talk to cryo cryo talk to run",
    "start": "949519",
    "end": "951920"
  },
  {
    "text": "c runs he talked to screw and container",
    "start": "951920",
    "end": "954639"
  },
  {
    "text": "has been checkpointed if we access the",
    "start": "954639",
    "end": "956720"
  },
  {
    "text": "container again we see it's still",
    "start": "956720",
    "end": "958720"
  },
  {
    "text": "running",
    "start": "958720",
    "end": "959680"
  },
  {
    "text": "so the container has not been changed so",
    "start": "959680",
    "end": "962959"
  },
  {
    "text": "now let's stop kubernetes here on under",
    "start": "962959",
    "end": "965839"
  },
  {
    "text": "source",
    "start": "965839",
    "end": "966839"
  },
  {
    "text": "and",
    "start": "966839",
    "end": "968399"
  },
  {
    "text": "i will now",
    "start": "968399",
    "end": "971040"
  },
  {
    "text": "my windows here and now i will remove to",
    "start": "971759",
    "end": "974639"
  },
  {
    "text": "con all the containers from from this",
    "start": "974639",
    "end": "977040"
  },
  {
    "text": "hose",
    "start": "977040",
    "end": "978480"
  },
  {
    "text": "okay no more containers running here now",
    "start": "978480",
    "end": "980320"
  },
  {
    "text": "let's create a new pot in cryo directly",
    "start": "980320",
    "end": "984639"
  },
  {
    "text": "and in this pot we can then restore the",
    "start": "984639",
    "end": "986959"
  },
  {
    "text": "container",
    "start": "986959",
    "end": "988240"
  },
  {
    "text": "so i say",
    "start": "988240",
    "end": "990000"
  },
  {
    "text": "cryo control create create a pot",
    "start": "990000",
    "end": "993680"
  },
  {
    "text": "and if i say cryo control",
    "start": "993680",
    "end": "996720"
  },
  {
    "text": "pots now",
    "start": "996720",
    "end": "997920"
  },
  {
    "text": "i see there's one part running",
    "start": "997920",
    "end": "999839"
  },
  {
    "text": "so now",
    "start": "999839",
    "end": "1001440"
  },
  {
    "text": "let's",
    "start": "1001440",
    "end": "1003759"
  },
  {
    "text": "okay now let's restore the container",
    "start": "1005040",
    "end": "1008959"
  },
  {
    "text": "cryocontrol restore",
    "start": "1008959",
    "end": "1011839"
  },
  {
    "text": "and the checkpoint has been written to",
    "start": "1011839",
    "end": "1013680"
  },
  {
    "text": "disk here",
    "start": "1013680",
    "end": "1016399"
  },
  {
    "text": "and i'm telling",
    "start": "1019600",
    "end": "1021279"
  },
  {
    "text": "cryo to restore it in the pot i just",
    "start": "1021279",
    "end": "1023360"
  },
  {
    "text": "created so now the container has been",
    "start": "1023360",
    "end": "1025839"
  },
  {
    "text": "has been restored and now i can access",
    "start": "1025839",
    "end": "1028240"
  },
  {
    "text": "it again",
    "start": "1028240",
    "end": "1030480"
  },
  {
    "text": "under a new id",
    "start": "1030480",
    "end": "1034079"
  },
  {
    "text": "and it continues to run here i can see",
    "start": "1036000",
    "end": "1037918"
  },
  {
    "text": "cry control yes i see the containers",
    "start": "1037919",
    "end": "1040079"
  },
  {
    "text": "running under this",
    "start": "1040079",
    "end": "1041678"
  },
  {
    "text": "but um there's no more kubernetes",
    "start": "1041679",
    "end": "1043600"
  },
  {
    "text": "running now and that is has been stopped",
    "start": "1043600",
    "end": "1045600"
  },
  {
    "text": "so this is now running so i took a",
    "start": "1045600",
    "end": "1047280"
  },
  {
    "text": "container",
    "start": "1047280",
    "end": "1048480"
  },
  {
    "text": "out of kubernetes and it kept on running",
    "start": "1048480",
    "end": "1050720"
  },
  {
    "text": "in kubernetes and then i started",
    "start": "1050720",
    "end": "1054960"
  },
  {
    "text": "another cryo or i didn't but i used the",
    "start": "1055440",
    "end": "1057520"
  },
  {
    "text": "same cryo but the idea is to take it to",
    "start": "1057520",
    "end": "1059679"
  },
  {
    "text": "another version of cryo and restore the",
    "start": "1059679",
    "end": "1062400"
  },
  {
    "text": "container in another pot",
    "start": "1062400",
    "end": "1065120"
  },
  {
    "text": "on another system in a sandbox",
    "start": "1065120",
    "end": "1066880"
  },
  {
    "text": "environment for example",
    "start": "1066880",
    "end": "1070080"
  },
  {
    "text": "and",
    "start": "1070080",
    "end": "1071200"
  },
  {
    "text": "this way we can",
    "start": "1071200",
    "end": "1073440"
  },
  {
    "text": "analyze the container",
    "start": "1073440",
    "end": "1076160"
  },
  {
    "text": "without",
    "start": "1076160",
    "end": "1078559"
  },
  {
    "text": "changing the original container",
    "start": "1078559",
    "end": "1081360"
  },
  {
    "text": "so now i want to talk quickly a bit um",
    "start": "1081360",
    "end": "1084960"
  },
  {
    "text": "about how crew works and how it enables",
    "start": "1084960",
    "end": "1087919"
  },
  {
    "text": "us to",
    "start": "1087919",
    "end": "1089440"
  },
  {
    "text": "checkpoint and restore processes and",
    "start": "1089440",
    "end": "1091280"
  },
  {
    "text": "migrate them in this way",
    "start": "1091280",
    "end": "1093440"
  },
  {
    "text": "so um the first step is always of course",
    "start": "1093440",
    "end": "1096000"
  },
  {
    "text": "checkpointing",
    "start": "1096000",
    "end": "1098400"
  },
  {
    "text": "and so what what what what creo does is",
    "start": "1098400",
    "end": "1101280"
  },
  {
    "text": "it uses ptrace to to to pause all",
    "start": "1101280",
    "end": "1104480"
  },
  {
    "text": "processes",
    "start": "1104480",
    "end": "1105760"
  },
  {
    "text": "creo always operates on a process tree",
    "start": "1105760",
    "end": "1108799"
  },
  {
    "text": "so we point clear to a process and creo",
    "start": "1108799",
    "end": "1111679"
  },
  {
    "text": "will checkpoint this process and all",
    "start": "1111679",
    "end": "1114000"
  },
  {
    "text": "child processes",
    "start": "1114000",
    "end": "1115600"
  },
  {
    "text": "it will collect all the information of",
    "start": "1115600",
    "end": "1117280"
  },
  {
    "text": "the processes",
    "start": "1117280",
    "end": "1119200"
  },
  {
    "text": "and write it to disk the process this",
    "start": "1119200",
    "end": "1121600"
  },
  {
    "text": "will be paused during that time",
    "start": "1121600",
    "end": "1124400"
  },
  {
    "text": "and can continue to run after the",
    "start": "1124400",
    "end": "1126880"
  },
  {
    "text": "checkpoint in",
    "start": "1126880",
    "end": "1128400"
  },
  {
    "text": "the first thing quiu does and where it",
    "start": "1128400",
    "end": "1131120"
  },
  {
    "text": "got it got its name from is it collects",
    "start": "1131120",
    "end": "1133360"
  },
  {
    "text": "the information from user space and",
    "start": "1133360",
    "end": "1136960"
  },
  {
    "text": "using the information available in",
    "start": "1136960",
    "end": "1138880"
  },
  {
    "text": "procped",
    "start": "1138880",
    "end": "1140000"
  },
  {
    "text": "so it goes through",
    "start": "1140000",
    "end": "1142080"
  },
  {
    "text": "the information there in in the initial",
    "start": "1142080",
    "end": "1144559"
  },
  {
    "text": "idea was that crea uses as many existing",
    "start": "1144559",
    "end": "1147600"
  },
  {
    "text": "interfaces as as possible and over the",
    "start": "1147600",
    "end": "1151120"
  },
  {
    "text": "time crew added additional interfaces to",
    "start": "1151120",
    "end": "1153840"
  },
  {
    "text": "the to the linux kernel um",
    "start": "1153840",
    "end": "1156559"
  },
  {
    "text": "but those interfaces are",
    "start": "1156559",
    "end": "1158799"
  },
  {
    "text": "never checkpoint restore only they can",
    "start": "1158799",
    "end": "1161280"
  },
  {
    "text": "be used for",
    "start": "1161280",
    "end": "1162559"
  },
  {
    "text": "for different things and so um there's",
    "start": "1162559",
    "end": "1166240"
  },
  {
    "text": "not really any specific checkpoint",
    "start": "1166240",
    "end": "1168400"
  },
  {
    "text": "restore change in the linux kernel today",
    "start": "1168400",
    "end": "1172000"
  },
  {
    "text": "so um cryo collects all the information",
    "start": "1172000",
    "end": "1174160"
  },
  {
    "text": "from profit once it has all the",
    "start": "1174160",
    "end": "1176160"
  },
  {
    "text": "information it can collect from the",
    "start": "1176160",
    "end": "1177760"
  },
  {
    "text": "outside of the proset it goes",
    "start": "1177760",
    "end": "1180559"
  },
  {
    "text": "into the process to collect information",
    "start": "1180559",
    "end": "1182720"
  },
  {
    "text": "from within the processes address",
    "start": "1182720",
    "end": "1184880"
  },
  {
    "text": "namespace",
    "start": "1184880",
    "end": "1186240"
  },
  {
    "text": "and to do this crea uses something",
    "start": "1186240",
    "end": "1188480"
  },
  {
    "text": "called a parasite code the parasite code",
    "start": "1188480",
    "end": "1190880"
  },
  {
    "text": "is injected into the process it replaces",
    "start": "1190880",
    "end": "1194320"
  },
  {
    "text": "some of the original code",
    "start": "1194320",
    "end": "1196960"
  },
  {
    "text": "and the parasite code is then",
    "start": "1196960",
    "end": "1199520"
  },
  {
    "text": "starting again and it's it's it's",
    "start": "1199520",
    "end": "1201760"
  },
  {
    "text": "basically um",
    "start": "1201760",
    "end": "1203200"
  },
  {
    "text": "running a daemon inside of the process",
    "start": "1203200",
    "end": "1206640"
  },
  {
    "text": "and now the main creo binary",
    "start": "1206640",
    "end": "1209600"
  },
  {
    "text": "can talk",
    "start": "1209600",
    "end": "1210960"
  },
  {
    "text": "to the",
    "start": "1210960",
    "end": "1212720"
  },
  {
    "text": "daemon running",
    "start": "1212720",
    "end": "1214240"
  },
  {
    "text": "inside of the process as as the parasite",
    "start": "1214240",
    "end": "1216960"
  },
  {
    "text": "code",
    "start": "1216960",
    "end": "1217919"
  },
  {
    "text": "and collect information from within the",
    "start": "1217919",
    "end": "1221440"
  },
  {
    "text": "name",
    "start": "1221440",
    "end": "1222400"
  },
  {
    "text": "from within the address space of the",
    "start": "1222400",
    "end": "1223919"
  },
  {
    "text": "process so we can see inside of the",
    "start": "1223919",
    "end": "1226480"
  },
  {
    "text": "process using this",
    "start": "1226480",
    "end": "1228320"
  },
  {
    "text": "and and one important thing creo does",
    "start": "1228320",
    "end": "1230799"
  },
  {
    "text": "using the parasite code is for example",
    "start": "1230799",
    "end": "1232559"
  },
  {
    "text": "to dump all the memory from the process",
    "start": "1232559",
    "end": "1235039"
  },
  {
    "text": "is using from within the processes",
    "start": "1235039",
    "end": "1237039"
  },
  {
    "text": "address name space",
    "start": "1237039",
    "end": "1238799"
  },
  {
    "text": "and and this way we can dump the memory",
    "start": "1238799",
    "end": "1241760"
  },
  {
    "text": "really fast",
    "start": "1241760",
    "end": "1243280"
  },
  {
    "text": "and if you look at migration times um",
    "start": "1243280",
    "end": "1246640"
  },
  {
    "text": "the",
    "start": "1246640",
    "end": "1247360"
  },
  {
    "text": "most time is spent in in transferring",
    "start": "1247360",
    "end": "1249760"
  },
  {
    "text": "the data over the network from one host",
    "start": "1249760",
    "end": "1251840"
  },
  {
    "text": "to another host so dumping the memory",
    "start": "1251840",
    "end": "1254559"
  },
  {
    "text": "from the process to disk is fast also",
    "start": "1254559",
    "end": "1257440"
  },
  {
    "text": "reading it back is fast and compared to",
    "start": "1257440",
    "end": "1260000"
  },
  {
    "text": "the time it takes to transfer the",
    "start": "1260000",
    "end": "1262720"
  },
  {
    "text": "process from one system to another over",
    "start": "1262720",
    "end": "1264640"
  },
  {
    "text": "the network",
    "start": "1264640",
    "end": "1266720"
  },
  {
    "text": "so once the the parasite code",
    "start": "1266720",
    "end": "1270159"
  },
  {
    "text": "has collected all the information and",
    "start": "1270159",
    "end": "1272480"
  },
  {
    "text": "and written to disk um the parasite code",
    "start": "1272480",
    "end": "1274880"
  },
  {
    "text": "is removed of the usage this is called",
    "start": "1274880",
    "end": "1277840"
  },
  {
    "text": "or creo calls is curing the process the",
    "start": "1277840",
    "end": "1280480"
  },
  {
    "text": "process will never know that it was",
    "start": "1280480",
    "end": "1282640"
  },
  {
    "text": "running under the control of of crew or",
    "start": "1282640",
    "end": "1285280"
  },
  {
    "text": "the parasite code it will just continue",
    "start": "1285280",
    "end": "1287280"
  },
  {
    "text": "to run",
    "start": "1287280",
    "end": "1288559"
  },
  {
    "text": "i try to visualize the parasite um",
    "start": "1288559",
    "end": "1292080"
  },
  {
    "text": "code a bit here so we have the original",
    "start": "1292080",
    "end": "1294480"
  },
  {
    "text": "process code to be checkpointed then",
    "start": "1294480",
    "end": "1296240"
  },
  {
    "text": "remove one",
    "start": "1296240",
    "end": "1297760"
  },
  {
    "text": "part of the code and save it outside of",
    "start": "1297760",
    "end": "1299760"
  },
  {
    "text": "the process",
    "start": "1299760",
    "end": "1301280"
  },
  {
    "text": "then we replace um that part of code the",
    "start": "1301280",
    "end": "1304240"
  },
  {
    "text": "parasite code the parasite code starts",
    "start": "1304240",
    "end": "1307440"
  },
  {
    "text": "is running in the process we collect all",
    "start": "1307440",
    "end": "1309600"
  },
  {
    "text": "the information from within the",
    "start": "1309600",
    "end": "1312960"
  },
  {
    "text": "processes address name space",
    "start": "1312960",
    "end": "1315440"
  },
  {
    "text": "and once we have collected all the",
    "start": "1315440",
    "end": "1317520"
  },
  {
    "text": "information we need we replace the",
    "start": "1317520",
    "end": "1319919"
  },
  {
    "text": "parasite code with original code and the",
    "start": "1319919",
    "end": "1322159"
  },
  {
    "text": "checkpointing is then finished",
    "start": "1322159",
    "end": "1324880"
  },
  {
    "text": "and at this point",
    "start": "1324880",
    "end": "1327679"
  },
  {
    "text": "after all relevant information has been",
    "start": "1327679",
    "end": "1329280"
  },
  {
    "text": "written to disk and the target process",
    "start": "1329280",
    "end": "1331440"
  },
  {
    "text": "can be killed or it can continue to run",
    "start": "1331440",
    "end": "1334159"
  },
  {
    "text": "in the demos i've showed we we have seen",
    "start": "1334159",
    "end": "1336640"
  },
  {
    "text": "both ways um",
    "start": "1336640",
    "end": "1338320"
  },
  {
    "text": "either the process keeps on running or",
    "start": "1338320",
    "end": "1340000"
  },
  {
    "text": "not so this really depends on the use",
    "start": "1340000",
    "end": "1341679"
  },
  {
    "text": "case what you want to do",
    "start": "1341679",
    "end": "1343520"
  },
  {
    "text": "so after checkpointing the second last",
    "start": "1343520",
    "end": "1346400"
  },
  {
    "text": "step is now restoring the process this",
    "start": "1346400",
    "end": "1348400"
  },
  {
    "text": "happens by",
    "start": "1348400",
    "end": "1349679"
  },
  {
    "text": "reading all the checkpoint images from",
    "start": "1349679",
    "end": "1352080"
  },
  {
    "text": "disk",
    "start": "1352080",
    "end": "1353919"
  },
  {
    "text": "and then we recreate the process tree",
    "start": "1353919",
    "end": "1356640"
  },
  {
    "text": "for each pid tid just as it was before",
    "start": "1356640",
    "end": "1360720"
  },
  {
    "text": "checkpointing we do a clone for each or",
    "start": "1360720",
    "end": "1363200"
  },
  {
    "text": "clone three depending on your kernels",
    "start": "1363200",
    "end": "1365200"
  },
  {
    "text": "for each process and recreate a process",
    "start": "1365200",
    "end": "1367919"
  },
  {
    "text": "tree just as it was before checkpointing",
    "start": "1367919",
    "end": "1370720"
  },
  {
    "text": "and once we have the process tree the",
    "start": "1370720",
    "end": "1372880"
  },
  {
    "text": "creo moth all the processes um into the",
    "start": "1372880",
    "end": "1376559"
  },
  {
    "text": "original processes um",
    "start": "1376559",
    "end": "1379679"
  },
  {
    "text": "like they were during checkpointing and",
    "start": "1379679",
    "end": "1382000"
  },
  {
    "text": "one good example um i think is always",
    "start": "1382000",
    "end": "1384400"
  },
  {
    "text": "the file descriptors so during",
    "start": "1384400",
    "end": "1386799"
  },
  {
    "text": "checkpointing we look at the file",
    "start": "1386799",
    "end": "1388799"
  },
  {
    "text": "descriptors",
    "start": "1388799",
    "end": "1390159"
  },
  {
    "text": "which file descriptor points to which",
    "start": "1390159",
    "end": "1392080"
  },
  {
    "text": "file and what position in the um",
    "start": "1392080",
    "end": "1396720"
  },
  {
    "text": "in the file do we have and we",
    "start": "1396720",
    "end": "1399039"
  },
  {
    "text": "write this information to disk and",
    "start": "1399039",
    "end": "1401120"
  },
  {
    "text": "during restore we re",
    "start": "1401120",
    "end": "1402960"
  },
  {
    "text": "open all opened file with the same file",
    "start": "1402960",
    "end": "1405520"
  },
  {
    "text": "descriptor and then we position the file",
    "start": "1405520",
    "end": "1407760"
  },
  {
    "text": "script at the correct position and once",
    "start": "1407760",
    "end": "1409360"
  },
  {
    "text": "the process continues to running after",
    "start": "1409360",
    "end": "1411360"
  },
  {
    "text": "creo has done all its work the file",
    "start": "1411360",
    "end": "1413200"
  },
  {
    "text": "descriptor will be at exact the same",
    "start": "1413200",
    "end": "1416080"
  },
  {
    "text": "position and and and will be the same",
    "start": "1416080",
    "end": "1419520"
  },
  {
    "text": "id will be the same file just as as it",
    "start": "1419520",
    "end": "1422640"
  },
  {
    "text": "was before so the code",
    "start": "1422640",
    "end": "1424559"
  },
  {
    "text": "which will access the file descriptor",
    "start": "1424559",
    "end": "1426640"
  },
  {
    "text": "will",
    "start": "1426640",
    "end": "1427600"
  },
  {
    "text": "just get the same file the same content",
    "start": "1427600",
    "end": "1429679"
  },
  {
    "text": "same position and creo will map all the",
    "start": "1429679",
    "end": "1432640"
  },
  {
    "text": "memory pages back to the original",
    "start": "1432640",
    "end": "1434559"
  },
  {
    "text": "location",
    "start": "1434559",
    "end": "1435760"
  },
  {
    "text": "it will load all the security settings",
    "start": "1435760",
    "end": "1437840"
  },
  {
    "text": "like up armor as a linux or second",
    "start": "1437840",
    "end": "1440720"
  },
  {
    "text": "we do the",
    "start": "1440720",
    "end": "1442000"
  },
  {
    "text": "security settings as late as possible",
    "start": "1442000",
    "end": "1445039"
  },
  {
    "text": "to not",
    "start": "1445039",
    "end": "1446480"
  },
  {
    "text": "to make restoring easier because if we",
    "start": "1446480",
    "end": "1448559"
  },
  {
    "text": "load it early it might block something",
    "start": "1448559",
    "end": "1450640"
  },
  {
    "text": "we do here",
    "start": "1450640",
    "end": "1452080"
  },
  {
    "text": "then crew jumps into the restored",
    "start": "1452080",
    "end": "1454960"
  },
  {
    "text": "process",
    "start": "1454960",
    "end": "1456159"
  },
  {
    "text": "and and the process continues to run",
    "start": "1456159",
    "end": "1458640"
  },
  {
    "text": "from the point it was checkpointed",
    "start": "1458640",
    "end": "1461919"
  },
  {
    "text": "and with this i'm i'm at the end of my",
    "start": "1461919",
    "end": "1464080"
  },
  {
    "text": "my creo part the next few slides are",
    "start": "1464080",
    "end": "1466240"
  },
  {
    "text": "just details um what i did in my demos",
    "start": "1466240",
    "end": "1469200"
  },
  {
    "text": "just if if if you want to",
    "start": "1469200",
    "end": "1473120"
  },
  {
    "text": "try it out for yourself and the steps",
    "start": "1473520",
    "end": "1475600"
  },
  {
    "text": "are listed here in the slides so first",
    "start": "1475600",
    "end": "1477600"
  },
  {
    "text": "was the checkpointing then the restoring",
    "start": "1477600",
    "end": "1480400"
  },
  {
    "text": "and",
    "start": "1480400",
    "end": "1481760"
  },
  {
    "text": "restoring with a new name",
    "start": "1481760",
    "end": "1484480"
  },
  {
    "text": "and creating copies and with this i'm",
    "start": "1484480",
    "end": "1486640"
  },
  {
    "text": "already at the summary of my talk so",
    "start": "1486640",
    "end": "1489600"
  },
  {
    "text": "creo can be used to checkpoint and",
    "start": "1489600",
    "end": "1491440"
  },
  {
    "text": "restore containers",
    "start": "1491440",
    "end": "1493279"
  },
  {
    "text": "and it's integrated in different",
    "start": "1493279",
    "end": "1495120"
  },
  {
    "text": "container engines already it's used in",
    "start": "1495120",
    "end": "1497840"
  },
  {
    "text": "production um and the use cases are",
    "start": "1497840",
    "end": "1500159"
  },
  {
    "text": "presented where you can reboot into a",
    "start": "1500159",
    "end": "1502480"
  },
  {
    "text": "new kernel without losing the container",
    "start": "1502480",
    "end": "1504720"
  },
  {
    "text": "state you can create multiple copies of",
    "start": "1504720",
    "end": "1507520"
  },
  {
    "text": "your container for for fast startup if",
    "start": "1507520",
    "end": "1510559"
  },
  {
    "text": "you have a container which is slow",
    "start": "1510559",
    "end": "1512480"
  },
  {
    "text": "starting up or if you want to",
    "start": "1512480",
    "end": "1514799"
  },
  {
    "text": "react quickly on requests and you can",
    "start": "1514799",
    "end": "1518720"
  },
  {
    "text": "migrate running containers from one host",
    "start": "1518720",
    "end": "1520960"
  },
  {
    "text": "to another host using checkpoint restore",
    "start": "1520960",
    "end": "1523120"
  },
  {
    "text": "and crew",
    "start": "1523120",
    "end": "1524240"
  },
  {
    "text": "and the thing we are working on",
    "start": "1524240",
    "end": "1525520"
  },
  {
    "text": "currently for",
    "start": "1525520",
    "end": "1527679"
  },
  {
    "text": "kubernetes is the kubernetes enhancement",
    "start": "1527679",
    "end": "1529760"
  },
  {
    "text": "proposal 2008 with the forensic",
    "start": "1529760",
    "end": "1532400"
  },
  {
    "text": "container check pointing uh",
    "start": "1532400",
    "end": "1535279"
  },
  {
    "text": "with which we hope to enable first steps",
    "start": "1535279",
    "end": "1538880"
  },
  {
    "text": "of checkpointing containers um in",
    "start": "1538880",
    "end": "1541520"
  },
  {
    "text": "kubernetes",
    "start": "1541520",
    "end": "1543679"
  },
  {
    "text": "with this i'm at the end of my talk",
    "start": "1543679",
    "end": "1547120"
  },
  {
    "text": "thank you for your",
    "start": "1547120",
    "end": "1548799"
  },
  {
    "text": "time and and happy to answer any",
    "start": "1548799",
    "end": "1552000"
  },
  {
    "text": "questions",
    "start": "1552000",
    "end": "1553120"
  },
  {
    "text": "you might have",
    "start": "1553120",
    "end": "1556520"
  }
]