[
  {
    "start": "0",
    "end": "94000"
  },
  {
    "text": "well hello everyone around the world",
    "start": "80",
    "end": "2480"
  },
  {
    "text": "thank you so much for having me here",
    "start": "2480",
    "end": "4240"
  },
  {
    "text": "today",
    "start": "4240",
    "end": "5680"
  },
  {
    "text": "when i work with someone who is just",
    "start": "5680",
    "end": "7359"
  },
  {
    "text": "learning rust",
    "start": "7359",
    "end": "9120"
  },
  {
    "text": "they sometimes question whether the rust",
    "start": "9120",
    "end": "11040"
  },
  {
    "text": "borrow checker is",
    "start": "11040",
    "end": "12400"
  },
  {
    "text": "their friend or their foe if you take a",
    "start": "12400",
    "end": "16160"
  },
  {
    "text": "look",
    "start": "16160",
    "end": "16720"
  },
  {
    "text": "at the rus subreddit it's common to see",
    "start": "16720",
    "end": "19119"
  },
  {
    "text": "posts with headlines like this",
    "start": "19119",
    "end": "22080"
  },
  {
    "text": "newbie your question regarding the",
    "start": "22080",
    "end": "23519"
  },
  {
    "text": "borrow checker",
    "start": "23519",
    "end": "25680"
  },
  {
    "text": "help fighting the borrow checker",
    "start": "25680",
    "end": "28960"
  },
  {
    "text": "and does it ever get easier fighting",
    "start": "28960",
    "end": "31840"
  },
  {
    "text": "with the borrow checker",
    "start": "31840",
    "end": "34480"
  },
  {
    "text": "however as you watch people get more",
    "start": "34480",
    "end": "36960"
  },
  {
    "text": "experience and rust",
    "start": "36960",
    "end": "39200"
  },
  {
    "text": "they tend to come around to the borrow",
    "start": "39200",
    "end": "41120"
  },
  {
    "text": "checker and realize",
    "start": "41120",
    "end": "42640"
  },
  {
    "text": "what it protects them from doing so in",
    "start": "42640",
    "end": "45360"
  },
  {
    "text": "answer to the question",
    "start": "45360",
    "end": "46480"
  },
  {
    "text": "is the borrow checker a friend or a foe",
    "start": "46480",
    "end": "49520"
  },
  {
    "text": "i say the borrow checker will become",
    "start": "49520",
    "end": "52160"
  },
  {
    "text": "your friend through experience",
    "start": "52160",
    "end": "54800"
  },
  {
    "text": "and along with gaining experience with",
    "start": "54800",
    "end": "56719"
  },
  {
    "text": "it it's also very helpful to understand",
    "start": "56719",
    "end": "59520"
  },
  {
    "text": "how it works",
    "start": "59520",
    "end": "60559"
  },
  {
    "text": "and why it does the things it does we're",
    "start": "60559",
    "end": "63440"
  },
  {
    "text": "going to dive deep into that but before",
    "start": "63440",
    "end": "65439"
  },
  {
    "text": "we do",
    "start": "65439",
    "end": "66640"
  },
  {
    "text": "let's briefly cover who i am i'm nell",
    "start": "66640",
    "end": "69360"
  },
  {
    "text": "shamrell harrington i'm a principal",
    "start": "69360",
    "end": "71119"
  },
  {
    "text": "software engineer at microsoft i'm also",
    "start": "71119",
    "end": "73920"
  },
  {
    "text": "a board director",
    "start": "73920",
    "end": "75119"
  },
  {
    "text": "of the rust foundation i'm the lead",
    "start": "75119",
    "end": "77439"
  },
  {
    "text": "editor of this week in rust if you're",
    "start": "77439",
    "end": "79119"
  },
  {
    "text": "not subscribed i hope you subscribe",
    "start": "79119",
    "end": "80960"
  },
  {
    "text": "right after this",
    "start": "80960",
    "end": "82000"
  },
  {
    "text": "to keep up with all the wonderful things",
    "start": "82000",
    "end": "84080"
  },
  {
    "text": "the rust community is doing",
    "start": "84080",
    "end": "86080"
  },
  {
    "text": "you can also tweet at me at neil",
    "start": "86080",
    "end": "88000"
  },
  {
    "text": "shamrell if you wish to get in touch",
    "start": "88000",
    "end": "89840"
  },
  {
    "text": "with me or just say hi",
    "start": "89840",
    "end": "93039"
  },
  {
    "start": "94000",
    "end": "132000"
  },
  {
    "text": "and to set expectations we will first do",
    "start": "94400",
    "end": "96960"
  },
  {
    "text": "a bit of",
    "start": "96960",
    "end": "97840"
  },
  {
    "text": "background on the rust compiler in order",
    "start": "97840",
    "end": "100159"
  },
  {
    "text": "to put the borrow checker in",
    "start": "100159",
    "end": "101600"
  },
  {
    "text": "context then we will do a deep dive",
    "start": "101600",
    "end": "104640"
  },
  {
    "text": "on the borrow checker and let's go ahead",
    "start": "104640",
    "end": "107520"
  },
  {
    "text": "and start with an overview of the rust",
    "start": "107520",
    "end": "109040"
  },
  {
    "text": "compiler",
    "start": "109040",
    "end": "111600"
  },
  {
    "text": "let's take a look at a code example this",
    "start": "111680",
    "end": "114799"
  },
  {
    "text": "rust function",
    "start": "114799",
    "end": "116719"
  },
  {
    "text": "declares a vector composed of the",
    "start": "116719",
    "end": "118560"
  },
  {
    "text": "integers 1",
    "start": "118560",
    "end": "119759"
  },
  {
    "text": "2 3 4 and 5.",
    "start": "119759",
    "end": "122880"
  },
  {
    "text": "after it declares this vector it then",
    "start": "122880",
    "end": "125520"
  },
  {
    "text": "uses a for loop to iterate through each",
    "start": "125520",
    "end": "127840"
  },
  {
    "text": "integer in the vector",
    "start": "127840",
    "end": "128959"
  },
  {
    "text": "and print it out on a new line",
    "start": "128959",
    "end": "132400"
  },
  {
    "start": "132000",
    "end": "281000"
  },
  {
    "text": "so let's go ahead and run this code",
    "start": "132400",
    "end": "134160"
  },
  {
    "text": "using cargo",
    "start": "134160",
    "end": "136239"
  },
  {
    "text": "and as expected we see the numbers 1",
    "start": "136239",
    "end": "138319"
  },
  {
    "text": "through 5 printed out on the screen",
    "start": "138319",
    "end": "142080"
  },
  {
    "text": "seems pretty simple cargo builds and",
    "start": "142080",
    "end": "145040"
  },
  {
    "text": "runs the piece of code for us",
    "start": "145040",
    "end": "147360"
  },
  {
    "text": "but there is a lot that happens",
    "start": "147360",
    "end": "149120"
  },
  {
    "text": "underneath the surface",
    "start": "149120",
    "end": "150640"
  },
  {
    "text": "in the compiler when cargo is building",
    "start": "150640",
    "end": "152879"
  },
  {
    "text": "it",
    "start": "152879",
    "end": "155040"
  },
  {
    "text": "there are five general stages to",
    "start": "155040",
    "end": "157200"
  },
  {
    "text": "compiling a piece of code",
    "start": "157200",
    "end": "159200"
  },
  {
    "text": "it starts with a lexical analysis of the",
    "start": "159200",
    "end": "161200"
  },
  {
    "text": "code",
    "start": "161200",
    "end": "162480"
  },
  {
    "text": "then parsing of the code semantic",
    "start": "162480",
    "end": "165680"
  },
  {
    "text": "analysis of the code",
    "start": "165680",
    "end": "166800"
  },
  {
    "text": "this is where the borrow checker comes",
    "start": "166800",
    "end": "168319"
  },
  {
    "text": "in in the rust compiler",
    "start": "168319",
    "end": "170720"
  },
  {
    "text": "optimization of the code and finally",
    "start": "170720",
    "end": "174319"
  },
  {
    "text": "code generation where the compiler",
    "start": "174319",
    "end": "176640"
  },
  {
    "text": "creates the executable binary of our",
    "start": "176640",
    "end": "178959"
  },
  {
    "text": "code",
    "start": "178959",
    "end": "180080"
  },
  {
    "text": "when we look at the stages laid out in a",
    "start": "180080",
    "end": "182000"
  },
  {
    "text": "list like this it seems like they will",
    "start": "182000",
    "end": "184000"
  },
  {
    "text": "run linearly",
    "start": "184000",
    "end": "185599"
  },
  {
    "text": "and in some compilers they do",
    "start": "185599",
    "end": "188720"
  },
  {
    "text": "however if you've delved it all into the",
    "start": "188720",
    "end": "190879"
  },
  {
    "text": "rest compiler internals",
    "start": "190879",
    "end": "192480"
  },
  {
    "text": "you might be thinking wait a minute",
    "start": "192480",
    "end": "195680"
  },
  {
    "text": "isn't the rust compiler at least",
    "start": "195680",
    "end": "197280"
  },
  {
    "text": "partially query based",
    "start": "197280",
    "end": "198800"
  },
  {
    "text": "rather than linear based",
    "start": "198800",
    "end": "201840"
  },
  {
    "text": "and the answer to this question is yes",
    "start": "201840",
    "end": "204319"
  },
  {
    "text": "but that is out of the scope of this",
    "start": "204319",
    "end": "206239"
  },
  {
    "text": "particular talk",
    "start": "206239",
    "end": "207680"
  },
  {
    "text": "for the sake of clarity i'll speak to",
    "start": "207680",
    "end": "209920"
  },
  {
    "text": "the internals of the compiler as if they",
    "start": "209920",
    "end": "211680"
  },
  {
    "text": "were functioning linearly",
    "start": "211680",
    "end": "213840"
  },
  {
    "text": "however if you want to delve more into",
    "start": "213840",
    "end": "216799"
  },
  {
    "text": "how the rust compiler is query based and",
    "start": "216799",
    "end": "218640"
  },
  {
    "text": "what that means",
    "start": "218640",
    "end": "219760"
  },
  {
    "text": "check out the guide to rust c",
    "start": "219760",
    "end": "221519"
  },
  {
    "text": "development for more information",
    "start": "221519",
    "end": "223840"
  },
  {
    "text": "this guide has been a big help to me as",
    "start": "223840",
    "end": "226000"
  },
  {
    "text": "i've learned how to hack on the rust",
    "start": "226000",
    "end": "227680"
  },
  {
    "text": "compiler",
    "start": "227680",
    "end": "230319"
  },
  {
    "text": "going back to the stages of compilation",
    "start": "231440",
    "end": "233840"
  },
  {
    "text": "let's start with the first one here",
    "start": "233840",
    "end": "235760"
  },
  {
    "text": "lexical analysis during lexical analysis",
    "start": "235760",
    "end": "240080"
  },
  {
    "text": "a program within the compiler called",
    "start": "240080",
    "end": "241760"
  },
  {
    "text": "alexa",
    "start": "241760",
    "end": "243280"
  },
  {
    "text": "takes the raw rust source code called a",
    "start": "243280",
    "end": "245599"
  },
  {
    "text": "lexeme",
    "start": "245599",
    "end": "246319"
  },
  {
    "text": "and analyzes it then splits the code",
    "start": "246319",
    "end": "249439"
  },
  {
    "text": "into tokens to make it easier for the",
    "start": "249439",
    "end": "251360"
  },
  {
    "text": "compiler to parse",
    "start": "251360",
    "end": "254799"
  },
  {
    "text": "and that brings us the next stage of",
    "start": "254799",
    "end": "256560"
  },
  {
    "text": "compilation called parsing",
    "start": "256560",
    "end": "260239"
  },
  {
    "text": "in this stage a program within the",
    "start": "260239",
    "end": "261840"
  },
  {
    "text": "compiler called a parser",
    "start": "261840",
    "end": "264400"
  },
  {
    "text": "analyzes the tokens generated by the",
    "start": "264400",
    "end": "266960"
  },
  {
    "text": "lecter",
    "start": "266960",
    "end": "268880"
  },
  {
    "text": "and translates them into an abstract",
    "start": "268880",
    "end": "271040"
  },
  {
    "text": "syntax tree or ast",
    "start": "271040",
    "end": "273759"
  },
  {
    "text": "having the tokens in this data structure",
    "start": "273759",
    "end": "275759"
  },
  {
    "text": "makes it much quicker and easier for the",
    "start": "275759",
    "end": "277759"
  },
  {
    "text": "compiler",
    "start": "277759",
    "end": "278560"
  },
  {
    "text": "to do the rest of its work",
    "start": "278560",
    "end": "282160"
  },
  {
    "start": "281000",
    "end": "383000"
  },
  {
    "text": "at this stage before it moves on to the",
    "start": "282160",
    "end": "284320"
  },
  {
    "text": "next stage of compilation",
    "start": "284320",
    "end": "286000"
  },
  {
    "text": "the rust compiler takes that abstract",
    "start": "286000",
    "end": "289199"
  },
  {
    "text": "syntax tree generated by the parser",
    "start": "289199",
    "end": "293040"
  },
  {
    "text": "and first expands any macros included in",
    "start": "293040",
    "end": "296639"
  },
  {
    "text": "the code",
    "start": "296639",
    "end": "298639"
  },
  {
    "text": "if we look back at our code example and",
    "start": "298639",
    "end": "301360"
  },
  {
    "text": "let's zoom in on this line",
    "start": "301360",
    "end": "303840"
  },
  {
    "text": "print line is a macro which means this",
    "start": "303840",
    "end": "306720"
  },
  {
    "text": "line would be expanded",
    "start": "306720",
    "end": "308479"
  },
  {
    "text": "to this this is what the full print line",
    "start": "308479",
    "end": "311280"
  },
  {
    "text": "macro looks like",
    "start": "311280",
    "end": "312400"
  },
  {
    "text": "and how it will be represented in the",
    "start": "312400",
    "end": "314800"
  },
  {
    "text": "act",
    "start": "314800",
    "end": "317120"
  },
  {
    "text": "this is part of me this is what the full",
    "start": "317120",
    "end": "319199"
  },
  {
    "text": "print line macro looks like and how it",
    "start": "319199",
    "end": "321120"
  },
  {
    "text": "will be represented in the ast",
    "start": "321120",
    "end": "325840"
  },
  {
    "text": "it also de-sugars some of the syntactic",
    "start": "326320",
    "end": "328800"
  },
  {
    "text": "sugar that makes riding rust so",
    "start": "328800",
    "end": "330320"
  },
  {
    "text": "delightful",
    "start": "330320",
    "end": "331520"
  },
  {
    "text": "for example in rust the for loop is a",
    "start": "331520",
    "end": "334880"
  },
  {
    "text": "piece of syntactic sugar for an iterator",
    "start": "334880",
    "end": "337600"
  },
  {
    "text": "if we were to de-sugar this section of",
    "start": "337600",
    "end": "339759"
  },
  {
    "text": "code",
    "start": "339759",
    "end": "341039"
  },
  {
    "text": "it would consist of both a match",
    "start": "341039",
    "end": "342800"
  },
  {
    "text": "statement and a loop",
    "start": "342800",
    "end": "344720"
  },
  {
    "text": "the functionality of this code is",
    "start": "344720",
    "end": "346320"
  },
  {
    "text": "identical but de-sugaring it makes it",
    "start": "346320",
    "end": "348800"
  },
  {
    "text": "easier for the compiler to",
    "start": "348800",
    "end": "350240"
  },
  {
    "text": "understand it and optimize it",
    "start": "350240",
    "end": "354000"
  },
  {
    "text": "at this time the compiler also resolves",
    "start": "354160",
    "end": "356560"
  },
  {
    "text": "any imports in the code",
    "start": "356560",
    "end": "358639"
  },
  {
    "text": "so if you are bringing in an external",
    "start": "358639",
    "end": "360319"
  },
  {
    "text": "crate or using internal crates or",
    "start": "360319",
    "end": "362160"
  },
  {
    "text": "modules",
    "start": "362160",
    "end": "363120"
  },
  {
    "text": "those will be resolved here as well",
    "start": "363120",
    "end": "367840"
  },
  {
    "text": "after these steps the compiler takes",
    "start": "368080",
    "end": "370080"
  },
  {
    "text": "that ast",
    "start": "370080",
    "end": "371360"
  },
  {
    "text": "that abstract syntax tree and converts",
    "start": "371360",
    "end": "374800"
  },
  {
    "text": "that ast",
    "start": "374800",
    "end": "375759"
  },
  {
    "text": "into higher level intermediate",
    "start": "375759",
    "end": "378160"
  },
  {
    "text": "representation",
    "start": "378160",
    "end": "379360"
  },
  {
    "text": "or h-i-r let's pause here and take a",
    "start": "379360",
    "end": "383120"
  },
  {
    "start": "383000",
    "end": "537000"
  },
  {
    "text": "closer look",
    "start": "383120",
    "end": "384880"
  },
  {
    "text": "at that h-i-r it helps to understand the",
    "start": "384880",
    "end": "387520"
  },
  {
    "text": "data structures that make it up",
    "start": "387520",
    "end": "390000"
  },
  {
    "text": "the first data structure is a node this",
    "start": "390000",
    "end": "392560"
  },
  {
    "text": "corresponds to a specific",
    "start": "392560",
    "end": "394319"
  },
  {
    "text": "piece of code this is identified by an",
    "start": "394319",
    "end": "397600"
  },
  {
    "text": "hr",
    "start": "397600",
    "end": "398880"
  },
  {
    "text": "this is identified by an h-i-r-i-d",
    "start": "398880",
    "end": "402960"
  },
  {
    "text": "and that node belongs to a definition a",
    "start": "402960",
    "end": "405440"
  },
  {
    "text": "definition is an item in the crate we",
    "start": "405440",
    "end": "407039"
  },
  {
    "text": "are compiling",
    "start": "407039",
    "end": "408240"
  },
  {
    "text": "these are primarily top level items",
    "start": "408240",
    "end": "410479"
  },
  {
    "text": "within the crate",
    "start": "410479",
    "end": "411599"
  },
  {
    "text": "this is identified by a deaf id",
    "start": "411599",
    "end": "415520"
  },
  {
    "text": "and a definition is owned by a crate",
    "start": "415520",
    "end": "418000"
  },
  {
    "text": "this is the crate we are compiling with",
    "start": "418000",
    "end": "420560"
  },
  {
    "text": "with rust it stores the contents of the",
    "start": "420560",
    "end": "423039"
  },
  {
    "text": "crate we are compiling and creates a",
    "start": "423039",
    "end": "424800"
  },
  {
    "text": "number of",
    "start": "424800",
    "end": "425440"
  },
  {
    "text": "maps and other things that help organize",
    "start": "425440",
    "end": "427520"
  },
  {
    "text": "the content for easier",
    "start": "427520",
    "end": "429199"
  },
  {
    "text": "access throughout the compilation",
    "start": "429199",
    "end": "430800"
  },
  {
    "text": "process this crate is identified with a",
    "start": "430800",
    "end": "433440"
  },
  {
    "text": "great number",
    "start": "433440",
    "end": "436160"
  },
  {
    "text": "this is the original rust source code we",
    "start": "436160",
    "end": "438160"
  },
  {
    "text": "are compiling and",
    "start": "438160",
    "end": "439360"
  },
  {
    "text": "let's take a focus on this section here",
    "start": "439360",
    "end": "442639"
  },
  {
    "text": "the for loop that iterates through the",
    "start": "442639",
    "end": "444800"
  },
  {
    "text": "numbers vector",
    "start": "444800",
    "end": "446479"
  },
  {
    "text": "remember this for loop d sugars into",
    "start": "446479",
    "end": "450000"
  },
  {
    "text": "a match statement and a loop if we look",
    "start": "450000",
    "end": "453120"
  },
  {
    "text": "at the node in the hir that represents",
    "start": "453120",
    "end": "455360"
  },
  {
    "text": "this match statement",
    "start": "455360",
    "end": "456880"
  },
  {
    "text": "we would see something similar to this",
    "start": "456880",
    "end": "459360"
  },
  {
    "text": "it's a little hard to read for humans so",
    "start": "459360",
    "end": "461440"
  },
  {
    "text": "let's go ahead and break it down",
    "start": "461440",
    "end": "464560"
  },
  {
    "text": "this arm structure represents a single",
    "start": "464560",
    "end": "467199"
  },
  {
    "text": "arm of the match statement that our for",
    "start": "467199",
    "end": "469199"
  },
  {
    "text": "loop d",
    "start": "469199",
    "end": "469680"
  },
  {
    "text": "sugars into and first we have the hir id",
    "start": "469680",
    "end": "474639"
  },
  {
    "text": "for this piece of code",
    "start": "474639",
    "end": "475919"
  },
  {
    "text": "this identifies a node within the hir",
    "start": "475919",
    "end": "480000"
  },
  {
    "text": "and that node is owned by a definition",
    "start": "480000",
    "end": "482400"
  },
  {
    "text": "the definition is some",
    "start": "482400",
    "end": "483759"
  },
  {
    "text": "top level item in the crate and that",
    "start": "483759",
    "end": "486560"
  },
  {
    "text": "definition data structure",
    "start": "486560",
    "end": "488800"
  },
  {
    "text": "is owned by a crate data structure",
    "start": "488800",
    "end": "492080"
  },
  {
    "text": "so our for loop is a node within a",
    "start": "492080",
    "end": "494560"
  },
  {
    "text": "definition",
    "start": "494560",
    "end": "495440"
  },
  {
    "text": "within our crate that's how we can",
    "start": "495440",
    "end": "498080"
  },
  {
    "text": "identify",
    "start": "498080",
    "end": "498800"
  },
  {
    "text": "where this node corresponds to our",
    "start": "498800",
    "end": "500720"
  },
  {
    "text": "original code",
    "start": "500720",
    "end": "502240"
  },
  {
    "text": "what this also helps us do",
    "start": "502240",
    "end": "505360"
  },
  {
    "text": "is we use something called a span",
    "start": "505360",
    "end": "509759"
  },
  {
    "text": "this span stores the file path line",
    "start": "509759",
    "end": "512320"
  },
  {
    "text": "numbers and column numbers of the",
    "start": "512320",
    "end": "514159"
  },
  {
    "text": "original source code",
    "start": "514159",
    "end": "515839"
  },
  {
    "text": "this will be very important in the",
    "start": "515839",
    "end": "517039"
  },
  {
    "text": "future as we optimize and de-sugar the",
    "start": "517039",
    "end": "519440"
  },
  {
    "text": "rust code",
    "start": "519440",
    "end": "520719"
  },
  {
    "text": "if we encounter a problem with the code",
    "start": "520719",
    "end": "522560"
  },
  {
    "text": "after it is de-sugared and optimized",
    "start": "522560",
    "end": "524640"
  },
  {
    "text": "we still want to be able to show the",
    "start": "524640",
    "end": "526399"
  },
  {
    "text": "user where in their original source code",
    "start": "526399",
    "end": "528880"
  },
  {
    "text": "that the error was generated",
    "start": "528880",
    "end": "530640"
  },
  {
    "text": "if we were to show them the d-sugar code",
    "start": "530640",
    "end": "532560"
  },
  {
    "text": "which is different from the code they",
    "start": "532560",
    "end": "534000"
  },
  {
    "text": "wrote it wouldn't mean much to them",
    "start": "534000",
    "end": "537839"
  },
  {
    "text": "the compiler then takes the hir",
    "start": "538080",
    "end": "541519"
  },
  {
    "text": "and lowers it into the mid-level",
    "start": "541519",
    "end": "544880"
  },
  {
    "text": "intermediate representation",
    "start": "544880",
    "end": "546399"
  },
  {
    "text": "also known as the mir",
    "start": "546399",
    "end": "550560"
  },
  {
    "text": "the mir is constructed as a control",
    "start": "550560",
    "end": "553360"
  },
  {
    "text": "graph",
    "start": "553360",
    "end": "554560"
  },
  {
    "text": "the units within this graph are called",
    "start": "554560",
    "end": "557200"
  },
  {
    "text": "basic blocks which are identified with",
    "start": "557200",
    "end": "559040"
  },
  {
    "text": "values like bb0 and bb1",
    "start": "559040",
    "end": "562080"
  },
  {
    "text": "within these blocks each has a sequence",
    "start": "562080",
    "end": "565440"
  },
  {
    "text": "of statements that execute in an",
    "start": "565440",
    "end": "567279"
  },
  {
    "text": "order the very last statement is known",
    "start": "567279",
    "end": "569920"
  },
  {
    "text": "as a terminator",
    "start": "569920",
    "end": "571360"
  },
  {
    "text": "this controls when and how the program",
    "start": "571360",
    "end": "573519"
  },
  {
    "text": "proceeds to another basic block",
    "start": "573519",
    "end": "575680"
  },
  {
    "text": "this is a pretty simple example there's",
    "start": "575680",
    "end": "577600"
  },
  {
    "text": "only one direction the basic blocks can",
    "start": "577600",
    "end": "579519"
  },
  {
    "text": "go",
    "start": "579519",
    "end": "581440"
  },
  {
    "text": "but if our code had an if else statement",
    "start": "581440",
    "end": "586080"
  },
  {
    "text": "then the terminator a bb0 would have the",
    "start": "586160",
    "end": "588560"
  },
  {
    "text": "option to either proceed to bb1",
    "start": "588560",
    "end": "590480"
  },
  {
    "text": "or to bb2 in this case there is more",
    "start": "590480",
    "end": "593680"
  },
  {
    "text": "than one path that the program can take",
    "start": "593680",
    "end": "595440"
  },
  {
    "text": "when it encounters the terminator in bb0",
    "start": "595440",
    "end": "600000"
  },
  {
    "text": "and there are definitely more data",
    "start": "600240",
    "end": "601839"
  },
  {
    "text": "structures involved in the mir if you're",
    "start": "601839",
    "end": "604160"
  },
  {
    "text": "curious about them",
    "start": "604160",
    "end": "605760"
  },
  {
    "text": "definitely check out that guide to rusty",
    "start": "605760",
    "end": "607680"
  },
  {
    "text": "development again it's a great resource",
    "start": "607680",
    "end": "609839"
  },
  {
    "text": "for learning how the rust compiler works",
    "start": "609839",
    "end": "611839"
  },
  {
    "text": "underneath the surface",
    "start": "611839",
    "end": "614800"
  },
  {
    "text": "let's go back to our d sugar code and",
    "start": "615120",
    "end": "618000"
  },
  {
    "text": "let's",
    "start": "618000",
    "end": "618959"
  },
  {
    "text": "focus on this match statement which is",
    "start": "618959",
    "end": "621279"
  },
  {
    "text": "assigned to a variable called result",
    "start": "621279",
    "end": "624240"
  },
  {
    "text": "if we looked at the mir for this piece",
    "start": "624240",
    "end": "626320"
  },
  {
    "text": "of code",
    "start": "626320",
    "end": "627279"
  },
  {
    "text": "it would look similar to this i've",
    "start": "627279",
    "end": "629519"
  },
  {
    "text": "simplified it for the sake of appearing",
    "start": "629519",
    "end": "631279"
  },
  {
    "text": "on a slide",
    "start": "631279",
    "end": "633680"
  },
  {
    "text": "up here on the top left we have our",
    "start": "633680",
    "end": "635360"
  },
  {
    "text": "basic block identified here as bb2",
    "start": "635360",
    "end": "639279"
  },
  {
    "text": "and then we have what is called a local",
    "start": "639279",
    "end": "642160"
  },
  {
    "text": "a local in the mir represents a place in",
    "start": "642160",
    "end": "644959"
  },
  {
    "text": "memory",
    "start": "644959",
    "end": "645600"
  },
  {
    "text": "or more specifically a place on the",
    "start": "645600",
    "end": "648000"
  },
  {
    "text": "stack frame",
    "start": "648000",
    "end": "649839"
  },
  {
    "text": "in this case underscore 5 corresponds to",
    "start": "649839",
    "end": "652000"
  },
  {
    "text": "the value of the variable result",
    "start": "652000",
    "end": "655839"
  },
  {
    "text": "and like in the nodes in the hir we have",
    "start": "655839",
    "end": "658160"
  },
  {
    "text": "a span",
    "start": "658160",
    "end": "659040"
  },
  {
    "text": "the piece of the original rust source",
    "start": "659040",
    "end": "660560"
  },
  {
    "text": "code that each node in the mir",
    "start": "660560",
    "end": "662399"
  },
  {
    "text": "corresponds to",
    "start": "662399",
    "end": "663920"
  },
  {
    "text": "again if we encounter an error when",
    "start": "663920",
    "end": "665519"
  },
  {
    "text": "we're operating with the mir",
    "start": "665519",
    "end": "667200"
  },
  {
    "text": "we can still easily refer to what lines",
    "start": "667200",
    "end": "669680"
  },
  {
    "text": "in the original source code cause the",
    "start": "669680",
    "end": "672839"
  },
  {
    "text": "error",
    "start": "672839",
    "end": "674240"
  },
  {
    "start": "673000",
    "end": "738000"
  },
  {
    "text": "and that brings us to this third stage",
    "start": "674240",
    "end": "676480"
  },
  {
    "text": "and this is big in the rust compiler",
    "start": "676480",
    "end": "679120"
  },
  {
    "text": "semantic analysis",
    "start": "679120",
    "end": "682240"
  },
  {
    "text": "this is where the compiler tries to",
    "start": "682240",
    "end": "683760"
  },
  {
    "text": "figure out what the programmer is trying",
    "start": "683760",
    "end": "685360"
  },
  {
    "text": "to do",
    "start": "685360",
    "end": "686240"
  },
  {
    "text": "in a way the compiler can understand it",
    "start": "686240",
    "end": "688640"
  },
  {
    "text": "and then translate it into machine",
    "start": "688640",
    "end": "690880"
  },
  {
    "text": "code and at this point",
    "start": "690880",
    "end": "693920"
  },
  {
    "text": "after it's lowered the hir into the mir",
    "start": "693920",
    "end": "696480"
  },
  {
    "text": "the compiler will run several checks",
    "start": "696480",
    "end": "698160"
  },
  {
    "text": "including the borrow checker",
    "start": "698160",
    "end": "700720"
  },
  {
    "text": "and we'll come back and dive deep into",
    "start": "700720",
    "end": "702640"
  },
  {
    "text": "the borrow checker in just a few minutes",
    "start": "702640",
    "end": "704800"
  },
  {
    "text": "but for now let's focus on these last",
    "start": "704800",
    "end": "707839"
  },
  {
    "text": "two",
    "start": "707839",
    "end": "708240"
  },
  {
    "text": "stages of compilation optimization",
    "start": "708240",
    "end": "711360"
  },
  {
    "text": "and code generation these stages",
    "start": "711360",
    "end": "715519"
  },
  {
    "text": "are where the code is transformed into",
    "start": "715519",
    "end": "717360"
  },
  {
    "text": "an executable binary",
    "start": "717360",
    "end": "719680"
  },
  {
    "text": "and the rust compiler we use llvm to do",
    "start": "719680",
    "end": "722160"
  },
  {
    "text": "this for us",
    "start": "722160",
    "end": "724240"
  },
  {
    "text": "llvm is a commonly used collection of",
    "start": "724240",
    "end": "726880"
  },
  {
    "text": "modular and reusable compiler and",
    "start": "726880",
    "end": "729200"
  },
  {
    "text": "toolchain technologies",
    "start": "729200",
    "end": "731040"
  },
  {
    "text": "the rest compiler uses it to further",
    "start": "731040",
    "end": "732800"
  },
  {
    "text": "optimize the code and generate the",
    "start": "732800",
    "end": "734800"
  },
  {
    "text": "machine code to run it",
    "start": "734800",
    "end": "738320"
  },
  {
    "start": "738000",
    "end": "766000"
  },
  {
    "text": "before it uses llvm the rust compiler",
    "start": "738480",
    "end": "742079"
  },
  {
    "text": "takes the mir we created earlier and",
    "start": "742079",
    "end": "744720"
  },
  {
    "text": "lowers it",
    "start": "744720",
    "end": "745920"
  },
  {
    "text": "into the llvm intermediate",
    "start": "745920",
    "end": "748079"
  },
  {
    "text": "representation",
    "start": "748079",
    "end": "749120"
  },
  {
    "text": "or llvmir",
    "start": "749120",
    "end": "752639"
  },
  {
    "text": "and the llvm ir honestly is pretty",
    "start": "752639",
    "end": "755120"
  },
  {
    "text": "unreadable to humans but it looks",
    "start": "755120",
    "end": "757120"
  },
  {
    "text": "something like this",
    "start": "757120",
    "end": "759839"
  },
  {
    "text": "as you can see it's organized into basic",
    "start": "760000",
    "end": "762560"
  },
  {
    "text": "blocks like the mir",
    "start": "762560",
    "end": "766160"
  },
  {
    "text": "we then use llvm and pass it the llvmir",
    "start": "766959",
    "end": "771680"
  },
  {
    "text": "and then it runs more optimizations on",
    "start": "771680",
    "end": "774639"
  },
  {
    "text": "it and emits machine",
    "start": "774639",
    "end": "776240"
  },
  {
    "text": "code it then links the machine code",
    "start": "776240",
    "end": "779839"
  },
  {
    "text": "files together to produce the final",
    "start": "779839",
    "end": "781920"
  },
  {
    "text": "binary",
    "start": "781920",
    "end": "784399"
  },
  {
    "text": "and that's why when we call cargo run",
    "start": "784399",
    "end": "787519"
  },
  {
    "text": "we see all those numbers printed out",
    "start": "787519",
    "end": "790959"
  },
  {
    "text": "so yay that gives you a bit of an idea",
    "start": "790959",
    "end": "792959"
  },
  {
    "text": "of how the compiler works to take your",
    "start": "792959",
    "end": "795120"
  },
  {
    "text": "rust source code",
    "start": "795120",
    "end": "796160"
  },
  {
    "text": "and make it into something a computer",
    "start": "796160",
    "end": "797839"
  },
  {
    "text": "can execute",
    "start": "797839",
    "end": "799519"
  },
  {
    "text": "and at this point i do want to go back",
    "start": "799519",
    "end": "802800"
  },
  {
    "text": "and take a deeper look at that borrow",
    "start": "802800",
    "end": "804639"
  },
  {
    "text": "checker because this is really where the",
    "start": "804639",
    "end": "806240"
  },
  {
    "text": "magic of rust happens",
    "start": "806240",
    "end": "809680"
  },
  {
    "text": "and in order to do that let's use a",
    "start": "810399",
    "end": "812079"
  },
  {
    "text": "different piece of code",
    "start": "812079",
    "end": "814320"
  },
  {
    "text": "if you have some experience with rust",
    "start": "814320",
    "end": "816079"
  },
  {
    "text": "and you're looking at this code and",
    "start": "816079",
    "end": "817200"
  },
  {
    "text": "thinking it will error out",
    "start": "817200",
    "end": "818720"
  },
  {
    "text": "you are right we'll see how and why that",
    "start": "818720",
    "end": "821360"
  },
  {
    "text": "happens in just a moment",
    "start": "821360",
    "end": "823199"
  },
  {
    "text": "first let's go through this code line by",
    "start": "823199",
    "end": "824959"
  },
  {
    "text": "line",
    "start": "824959",
    "end": "826320"
  },
  {
    "text": "we declare the variable x and give it",
    "start": "826320",
    "end": "828240"
  },
  {
    "text": "the type string",
    "start": "828240",
    "end": "830639"
  },
  {
    "text": "and then we set the value of x in the",
    "start": "830639",
    "end": "832560"
  },
  {
    "text": "string to high cloud native rest day",
    "start": "832560",
    "end": "836800"
  },
  {
    "text": "then we say that the variable y's value",
    "start": "836800",
    "end": "839279"
  },
  {
    "text": "is equal to the value of",
    "start": "839279",
    "end": "840839"
  },
  {
    "text": "x and then we attempt to print both",
    "start": "840839",
    "end": "843760"
  },
  {
    "text": "variables",
    "start": "843760",
    "end": "845680"
  },
  {
    "text": "if we tried to build this code with",
    "start": "845680",
    "end": "847920"
  },
  {
    "text": "cargo build",
    "start": "847920",
    "end": "850000"
  },
  {
    "text": "we would get an error and this error is",
    "start": "850000",
    "end": "852720"
  },
  {
    "text": "a result of the borrow checker",
    "start": "852720",
    "end": "855440"
  },
  {
    "text": "let's go through how the borrow checker",
    "start": "855440",
    "end": "857199"
  },
  {
    "text": "identified this error",
    "start": "857199",
    "end": "860000"
  },
  {
    "text": "the borrow checker does several things",
    "start": "860000",
    "end": "862160"
  },
  {
    "text": "including tracking initializations and",
    "start": "862160",
    "end": "864240"
  },
  {
    "text": "moves",
    "start": "864240",
    "end": "865440"
  },
  {
    "text": "how this plays out in our code is when",
    "start": "865440",
    "end": "867920"
  },
  {
    "text": "we start with this first line where we",
    "start": "867920",
    "end": "869519"
  },
  {
    "text": "declare the variable x with the type of",
    "start": "869519",
    "end": "871519"
  },
  {
    "text": "string",
    "start": "871519",
    "end": "873279"
  },
  {
    "text": "x is not actually initialized at this",
    "start": "873279",
    "end": "875760"
  },
  {
    "text": "point",
    "start": "875760",
    "end": "876480"
  },
  {
    "text": "it won't be considered initialized until",
    "start": "876480",
    "end": "878800"
  },
  {
    "text": "it is assigned a value",
    "start": "878800",
    "end": "881680"
  },
  {
    "text": "if we look at the mir for this line of",
    "start": "881680",
    "end": "883600"
  },
  {
    "text": "code we see that",
    "start": "883600",
    "end": "884880"
  },
  {
    "text": "x is represented by the local underscore",
    "start": "884880",
    "end": "887680"
  },
  {
    "text": "1",
    "start": "887680",
    "end": "889920"
  },
  {
    "text": "and local underscore 1 is assigned the",
    "start": "889920",
    "end": "892399"
  },
  {
    "text": "type of string",
    "start": "892399",
    "end": "895360"
  },
  {
    "text": "now let's look at this line of code",
    "start": "896639",
    "end": "898399"
  },
  {
    "text": "where we create and assign the high",
    "start": "898399",
    "end": "900320"
  },
  {
    "text": "cloud native rust a string",
    "start": "900320",
    "end": "903680"
  },
  {
    "text": "now that x has a value it is considered",
    "start": "903680",
    "end": "906639"
  },
  {
    "text": "initialized at this point",
    "start": "906639",
    "end": "910240"
  },
  {
    "text": "if we look at the mir we create a new",
    "start": "910800",
    "end": "913120"
  },
  {
    "text": "place in memory",
    "start": "913120",
    "end": "913920"
  },
  {
    "text": "local underscore 2 where we store the",
    "start": "913920",
    "end": "916399"
  },
  {
    "text": "high cloud native rest day string",
    "start": "916399",
    "end": "919279"
  },
  {
    "text": "then we move the value stored at",
    "start": "919279",
    "end": "922240"
  },
  {
    "text": "underscore 2",
    "start": "922240",
    "end": "923279"
  },
  {
    "text": "to underscore 1. remember underscore one",
    "start": "923279",
    "end": "926800"
  },
  {
    "text": "corresponds to the x variable",
    "start": "926800",
    "end": "929600"
  },
  {
    "text": "so we have created the string in memory",
    "start": "929600",
    "end": "931680"
  },
  {
    "text": "and moved it to be the value of",
    "start": "931680",
    "end": "933600"
  },
  {
    "text": "x now let's look at this line",
    "start": "933600",
    "end": "936959"
  },
  {
    "text": "where we attempt to create the variable",
    "start": "936959",
    "end": "938720"
  },
  {
    "text": "y and assign it to the value of x",
    "start": "938720",
    "end": "942720"
  },
  {
    "text": "this line is where the value of x is",
    "start": "942720",
    "end": "944880"
  },
  {
    "text": "moved to y",
    "start": "944880",
    "end": "946320"
  },
  {
    "text": "if we look at the mir created for this",
    "start": "946320",
    "end": "948240"
  },
  {
    "text": "line of code",
    "start": "948240",
    "end": "949600"
  },
  {
    "text": "we'll see that y is assigned to the",
    "start": "949600",
    "end": "952000"
  },
  {
    "text": "local underscore 3.",
    "start": "952000",
    "end": "954079"
  },
  {
    "text": "remember a local represents a place in",
    "start": "954079",
    "end": "956720"
  },
  {
    "text": "memory",
    "start": "956720",
    "end": "958959"
  },
  {
    "text": "and underscore 3 is given the type",
    "start": "958959",
    "end": "961680"
  },
  {
    "text": "string",
    "start": "961680",
    "end": "964160"
  },
  {
    "text": "and then the value at underscore 1",
    "start": "964720",
    "end": "966720"
  },
  {
    "text": "remember that represents x",
    "start": "966720",
    "end": "968480"
  },
  {
    "text": "is moved to the value of underscore",
    "start": "968480",
    "end": "970560"
  },
  {
    "text": "three which represents y",
    "start": "970560",
    "end": "973839"
  },
  {
    "text": "this means when we get to here",
    "start": "973839",
    "end": "983839"
  },
  {
    "text": "this means when we get to here when we",
    "start": "984160",
    "end": "985839"
  },
  {
    "text": "try to print x",
    "start": "985839",
    "end": "987759"
  },
  {
    "text": "x is not initialized at this line so we",
    "start": "987759",
    "end": "990800"
  },
  {
    "text": "cannot print it",
    "start": "990800",
    "end": "992639"
  },
  {
    "text": "and that's what generates this",
    "start": "992639",
    "end": "994480"
  },
  {
    "text": "particular error",
    "start": "994480",
    "end": "997839"
  },
  {
    "text": "we're attempting to use a value of a",
    "start": "998160",
    "end": "1000160"
  },
  {
    "text": "variable after it has been moved",
    "start": "1000160",
    "end": "1002880"
  },
  {
    "text": "and the rust compiler says you cannot do",
    "start": "1002880",
    "end": "1005040"
  },
  {
    "text": "that",
    "start": "1005040",
    "end": "1007279"
  },
  {
    "text": "something i'd like to specifically call",
    "start": "1007519",
    "end": "1009279"
  },
  {
    "text": "out is how the compiler shows",
    "start": "1009279",
    "end": "1011279"
  },
  {
    "text": "where the error was generated from in",
    "start": "1011279",
    "end": "1013120"
  },
  {
    "text": "the original source code",
    "start": "1013120",
    "end": "1014800"
  },
  {
    "text": "through a span even though we had",
    "start": "1014800",
    "end": "1017279"
  },
  {
    "text": "lowered this code to mir",
    "start": "1017279",
    "end": "1018720"
  },
  {
    "text": "or mid-level representation we still",
    "start": "1018720",
    "end": "1021040"
  },
  {
    "text": "tracked what items in the mir",
    "start": "1021040",
    "end": "1023199"
  },
  {
    "text": "correspond to what places in the",
    "start": "1023199",
    "end": "1025120"
  },
  {
    "text": "original rus code",
    "start": "1025120",
    "end": "1027038"
  },
  {
    "text": "this is very helpful to the end user",
    "start": "1027039",
    "end": "1029520"
  },
  {
    "text": "what is also helpful",
    "start": "1029520",
    "end": "1031760"
  },
  {
    "text": "is this remember the rust compiler not",
    "start": "1031760",
    "end": "1034720"
  },
  {
    "text": "only tells you what the error is and",
    "start": "1034720",
    "end": "1036558"
  },
  {
    "text": "where it is",
    "start": "1036559",
    "end": "1037760"
  },
  {
    "text": "it gives you a command to get even more",
    "start": "1037760",
    "end": "1040079"
  },
  {
    "text": "information about the error so that you",
    "start": "1040079",
    "end": "1042000"
  },
  {
    "text": "can fix it",
    "start": "1042000",
    "end": "1044079"
  },
  {
    "text": "if we run this command we see not only",
    "start": "1044079",
    "end": "1046480"
  },
  {
    "text": "an explanation of the error",
    "start": "1046480",
    "end": "1048079"
  },
  {
    "text": "but also a piece of example code that",
    "start": "1048079",
    "end": "1050400"
  },
  {
    "text": "would generate it",
    "start": "1050400",
    "end": "1052240"
  },
  {
    "text": "then the message gives you even more",
    "start": "1052240",
    "end": "1055280"
  },
  {
    "text": "information about how to fix it",
    "start": "1055280",
    "end": "1057360"
  },
  {
    "text": "this suggests using a reference to",
    "start": "1057360",
    "end": "1059200"
  },
  {
    "text": "borrow a value",
    "start": "1059200",
    "end": "1060480"
  },
  {
    "text": "rather than attempting to move the value",
    "start": "1060480",
    "end": "1062640"
  },
  {
    "text": "which is what we saw done in the mir",
    "start": "1062640",
    "end": "1064720"
  },
  {
    "text": "representation of our code",
    "start": "1064720",
    "end": "1066880"
  },
  {
    "text": "so let's do this and change this line",
    "start": "1066880",
    "end": "1070320"
  },
  {
    "text": "so that y is assigned to a reference to",
    "start": "1070320",
    "end": "1073200"
  },
  {
    "text": "the value of x",
    "start": "1073200",
    "end": "1074880"
  },
  {
    "text": "rather than moving the value of x into y",
    "start": "1074880",
    "end": "1079520"
  },
  {
    "text": "after we've made this change if we run",
    "start": "1079520",
    "end": "1081440"
  },
  {
    "start": "1080000",
    "end": "1342000"
  },
  {
    "text": "our code again using cargo run",
    "start": "1081440",
    "end": "1083440"
  },
  {
    "text": "the compiler will build the code and",
    "start": "1083440",
    "end": "1085360"
  },
  {
    "text": "execute it",
    "start": "1085360",
    "end": "1086480"
  },
  {
    "text": "and we see the message hi cloud native",
    "start": "1086480",
    "end": "1088720"
  },
  {
    "text": "rest day printed out twice",
    "start": "1088720",
    "end": "1091360"
  },
  {
    "text": "rather than finding the borrow checker",
    "start": "1091360",
    "end": "1093440"
  },
  {
    "text": "we used it to make our code",
    "start": "1093440",
    "end": "1095280"
  },
  {
    "text": "even better",
    "start": "1095280",
    "end": "1098000"
  },
  {
    "text": "along with tracking initializations and",
    "start": "1099200",
    "end": "1101120"
  },
  {
    "text": "moves the borrow checker also deals with",
    "start": "1101120",
    "end": "1104080"
  },
  {
    "text": "lifetime inference and let's go over",
    "start": "1104080",
    "end": "1106720"
  },
  {
    "text": "what this means",
    "start": "1106720",
    "end": "1109200"
  },
  {
    "text": "rust uses the word lifetime in two",
    "start": "1109200",
    "end": "1111440"
  },
  {
    "text": "distinct ways",
    "start": "1111440",
    "end": "1113200"
  },
  {
    "text": "the first is to refer to the lifetime of",
    "start": "1113200",
    "end": "1115440"
  },
  {
    "text": "a value",
    "start": "1115440",
    "end": "1116559"
  },
  {
    "text": "that's the span of time before the value",
    "start": "1116559",
    "end": "1118720"
  },
  {
    "text": "gets freed",
    "start": "1118720",
    "end": "1120080"
  },
  {
    "text": "another word for referring to the",
    "start": "1120080",
    "end": "1122080"
  },
  {
    "text": "lifetime of a value is referring to the",
    "start": "1122080",
    "end": "1123679"
  },
  {
    "text": "variable scope",
    "start": "1123679",
    "end": "1125039"
  },
  {
    "text": "let's see how this plays out in our code",
    "start": "1125039",
    "end": "1128160"
  },
  {
    "text": "and let's start with this first line",
    "start": "1128160",
    "end": "1129919"
  },
  {
    "text": "where we assign the value of",
    "start": "1129919",
    "end": "1131600"
  },
  {
    "text": "x as this string at this point",
    "start": "1131600",
    "end": "1134799"
  },
  {
    "text": "x is live its lifetime begins here",
    "start": "1134799",
    "end": "1139520"
  },
  {
    "text": "when we get to here and move the value",
    "start": "1139520",
    "end": "1142000"
  },
  {
    "text": "of x",
    "start": "1142000",
    "end": "1142559"
  },
  {
    "text": "into y this is the end of x's lifetime",
    "start": "1142559",
    "end": "1148080"
  },
  {
    "text": "when we get down here and try to use x",
    "start": "1148080",
    "end": "1150000"
  },
  {
    "text": "again x is dead",
    "start": "1150000",
    "end": "1151600"
  },
  {
    "text": "its lifetime is no longer an effect",
    "start": "1151600",
    "end": "1153520"
  },
  {
    "text": "which is why this program as it's",
    "start": "1153520",
    "end": "1155520"
  },
  {
    "text": "written now will error out",
    "start": "1155520",
    "end": "1159200"
  },
  {
    "text": "the other way rust uses the term",
    "start": "1159919",
    "end": "1161760"
  },
  {
    "text": "lifetime is to refer to the lifetime of",
    "start": "1161760",
    "end": "1164400"
  },
  {
    "text": "a reference to a value",
    "start": "1164400",
    "end": "1166640"
  },
  {
    "text": "this is the span of code in which the",
    "start": "1166640",
    "end": "1168640"
  },
  {
    "text": "reference can be used",
    "start": "1168640",
    "end": "1171520"
  },
  {
    "text": "let's take a look at our corrected code",
    "start": "1171520",
    "end": "1173600"
  },
  {
    "text": "where we assign the value of y",
    "start": "1173600",
    "end": "1175360"
  },
  {
    "text": "to be a reference to the value of x",
    "start": "1175360",
    "end": "1178880"
  },
  {
    "text": "if we look at the mir for this line of",
    "start": "1178880",
    "end": "1180960"
  },
  {
    "text": "code",
    "start": "1180960",
    "end": "1182480"
  },
  {
    "text": "we remember that the local underscore 1",
    "start": "1182480",
    "end": "1184720"
  },
  {
    "text": "refers to x",
    "start": "1184720",
    "end": "1186559"
  },
  {
    "text": "and the local underscore 3 refers to y",
    "start": "1186559",
    "end": "1189919"
  },
  {
    "text": "and we see that underscore three that",
    "start": "1189919",
    "end": "1192400"
  },
  {
    "text": "underscore three local is assigned",
    "start": "1192400",
    "end": "1194720"
  },
  {
    "text": "a reference to the value of underscore",
    "start": "1194720",
    "end": "1198400"
  },
  {
    "text": "one",
    "start": "1198400",
    "end": "1200720"
  },
  {
    "text": "looking back at our code let's alter",
    "start": "1202320",
    "end": "1204240"
  },
  {
    "text": "this slightly",
    "start": "1204240",
    "end": "1206559"
  },
  {
    "text": "and try to drop the value of the",
    "start": "1206559",
    "end": "1208559"
  },
  {
    "text": "variable x",
    "start": "1208559",
    "end": "1209600"
  },
  {
    "text": "before we try to print out the value of",
    "start": "1209600",
    "end": "1212000"
  },
  {
    "text": "y",
    "start": "1212000",
    "end": "1213679"
  },
  {
    "text": "after we make this change and try to",
    "start": "1213679",
    "end": "1216559"
  },
  {
    "text": "build this code using cargo build",
    "start": "1216559",
    "end": "1219200"
  },
  {
    "text": "we get an error we can't drop x because",
    "start": "1219200",
    "end": "1222720"
  },
  {
    "text": "it is borrowed",
    "start": "1222720",
    "end": "1223760"
  },
  {
    "text": "and that borrow is used later",
    "start": "1223760",
    "end": "1226799"
  },
  {
    "text": "the borrow checker tells us that x",
    "start": "1226799",
    "end": "1228720"
  },
  {
    "text": "because it is",
    "start": "1228720",
    "end": "1229919"
  },
  {
    "text": "referenced by y needs to stay alive for",
    "start": "1229919",
    "end": "1233039"
  },
  {
    "text": "at least",
    "start": "1233039",
    "end": "1233760"
  },
  {
    "text": "as long as y needs to stay alive",
    "start": "1233760",
    "end": "1236960"
  },
  {
    "text": "x's lifetime must be greater than or",
    "start": "1236960",
    "end": "1239280"
  },
  {
    "text": "equal to y's",
    "start": "1239280",
    "end": "1241200"
  },
  {
    "text": "looking at this line in the code or",
    "start": "1241200",
    "end": "1243440"
  },
  {
    "text": "looking at these lifetimes in the code",
    "start": "1243440",
    "end": "1245440"
  },
  {
    "text": "again this is x's lifetime",
    "start": "1245440",
    "end": "1249039"
  },
  {
    "text": "and this is what needs to be the",
    "start": "1249039",
    "end": "1250640"
  },
  {
    "text": "lifetime of y which is a reference to x",
    "start": "1250640",
    "end": "1254240"
  },
  {
    "text": "notice that even though they overlap x's",
    "start": "1254240",
    "end": "1257280"
  },
  {
    "text": "lifetime",
    "start": "1257280",
    "end": "1257840"
  },
  {
    "text": "ends before y's lifetime is supposed to",
    "start": "1257840",
    "end": "1260840"
  },
  {
    "text": "end",
    "start": "1260840",
    "end": "1262960"
  },
  {
    "text": "y can no longer reference the value of x",
    "start": "1262960",
    "end": "1265520"
  },
  {
    "text": "after this line",
    "start": "1265520",
    "end": "1267440"
  },
  {
    "text": "and at this point y along with x would",
    "start": "1267440",
    "end": "1269760"
  },
  {
    "text": "be dead",
    "start": "1269760",
    "end": "1271039"
  },
  {
    "text": "in order for this code to compile the",
    "start": "1271039",
    "end": "1273039"
  },
  {
    "text": "lifetime of y",
    "start": "1273039",
    "end": "1274240"
  },
  {
    "text": "x must last at least as long as the",
    "start": "1274240",
    "end": "1277280"
  },
  {
    "text": "lifetime of y",
    "start": "1277280",
    "end": "1280400"
  },
  {
    "text": "the overarching way the scope and the",
    "start": "1281200",
    "end": "1283919"
  },
  {
    "text": "lifetime of a reference relate to each",
    "start": "1283919",
    "end": "1285600"
  },
  {
    "text": "other",
    "start": "1285600",
    "end": "1286159"
  },
  {
    "text": "is that if you make a reference to a",
    "start": "1286159",
    "end": "1287679"
  },
  {
    "text": "value the lifetime of that reference",
    "start": "1287679",
    "end": "1290080"
  },
  {
    "text": "cannot outlive the scope of the value",
    "start": "1290080",
    "end": "1294559"
  },
  {
    "text": "as i move toward concluding this",
    "start": "1295360",
    "end": "1296640"
  },
  {
    "text": "presentation i want to make sure that",
    "start": "1296640",
    "end": "1298720"
  },
  {
    "text": "you know there is so much more to the",
    "start": "1298720",
    "end": "1300480"
  },
  {
    "text": "rust compiler and the borrow checker",
    "start": "1300480",
    "end": "1303200"
  },
  {
    "text": "again please if you want to know more",
    "start": "1303200",
    "end": "1305919"
  },
  {
    "text": "check out the guide to rusty development",
    "start": "1305919",
    "end": "1307760"
  },
  {
    "text": "it's a fantastic resource",
    "start": "1307760",
    "end": "1311360"
  },
  {
    "text": "going back to this question from the",
    "start": "1311760",
    "end": "1313039"
  },
  {
    "text": "beginning is the borrow checker a friend",
    "start": "1313039",
    "end": "1315600"
  },
  {
    "text": "or a foe i say it's a friend",
    "start": "1315600",
    "end": "1319360"
  },
  {
    "text": "though a very strict one but the best",
    "start": "1319360",
    "end": "1322960"
  },
  {
    "text": "thing about this",
    "start": "1322960",
    "end": "1323760"
  },
  {
    "text": "friend is it will not only tell you when",
    "start": "1323760",
    "end": "1326080"
  },
  {
    "text": "something is wrong",
    "start": "1326080",
    "end": "1328159"
  },
  {
    "text": "it will also tell you how to fix it and",
    "start": "1328159",
    "end": "1331120"
  },
  {
    "text": "i find that to be one",
    "start": "1331120",
    "end": "1332000"
  },
  {
    "text": "of the best qualities i can find in a",
    "start": "1332000",
    "end": "1333520"
  },
  {
    "text": "friend as well as one of the best",
    "start": "1333520",
    "end": "1335520"
  },
  {
    "text": "qualities i can find in a compiler",
    "start": "1335520",
    "end": "1339840"
  },
  {
    "text": "thank you",
    "start": "1340080",
    "end": "1344320"
  }
]