[
  {
    "start": "0",
    "end": "118000"
  },
  {
    "text": "thank you everyone so uh this talk is titled who knew dog food could taste this good and then it is a web assembly",
    "start": "2040",
    "end": "8760"
  },
  {
    "text": "and production story so let's go ahead and introduce ourselves real quick um I'll let Brooks introduce himself first yeah um Brooks Townsend lead",
    "start": "8760",
    "end": "15540"
  },
  {
    "text": "software engineer at cosmonic and also I'm a maintainer of the cncf open source wasm Cloud which is the app runtime",
    "start": "15540",
    "end": "21600"
  },
  {
    "text": "we'll talk a little bit about today I'm a part of this fun Venn diagram of people that knows Elixir or webassembly",
    "start": "21600",
    "end": "27779"
  },
  {
    "text": "and rust that there's a very very small intersection in the middle there love doing demos and and yeah Taylor yeah so",
    "start": "27779",
    "end": "36059"
  },
  {
    "text": "I am a director of engineering at cosmonic I am a restation do a lot of rust coding came from doing gopher stuff",
    "start": "36059",
    "end": "43320"
  },
  {
    "text": "before and I am the co-creator of cresslet and bindle if you've been looking at anything in the web assembly",
    "start": "43320",
    "end": "48600"
  },
  {
    "text": "space you've probably at least heard of creslit um that was something I was a maintainer of our creator of and then I'm also a",
    "start": "48600",
    "end": "55079"
  },
  {
    "text": "general like serial open source maintainer I'm an Emeritus hell maintainer I was a core Helm maintainer",
    "start": "55079",
    "end": "60600"
  },
  {
    "text": "for a long time so I wrote a good chunk of the helm 3 code when it first came out so you can either throw tomatoes at",
    "start": "60600",
    "end": "65939"
  },
  {
    "text": "me later or Thank Me Later whichever one is your pick and so that's a little bit about us so what are we going to talk",
    "start": "65939",
    "end": "71520"
  },
  {
    "text": "about today first off we're going to go over what webassembly is and just out of curiosity",
    "start": "71520",
    "end": "76680"
  },
  {
    "text": "here how many people have heard of webassembly how many people have used it okay there",
    "start": "76680",
    "end": "81780"
  },
  {
    "text": "we go that's what I thought so we're going to talk about it um a little bit in like what what web",
    "start": "81780",
    "end": "87060"
  },
  {
    "text": "assembly is why it's important and then what is this whole Wasim cloud and cosmotic thingy this is setting kind of",
    "start": "87060",
    "end": "92100"
  },
  {
    "text": "the the foundation for what we're going to show we did in production with all of this and then we'll go over the",
    "start": "92100",
    "end": "97200"
  },
  {
    "text": "architecture of our our applications and how everything is working the Deep dive into individual things we thought would",
    "start": "97200",
    "end": "102780"
  },
  {
    "text": "be most important to share the lessons on and then Lessons Learned From that and then after that we'll talk a little",
    "start": "102780",
    "end": "109020"
  },
  {
    "text": "bit about what we're doing next so we have this saying if any of you have talked to us before you've probably",
    "start": "109020",
    "end": "114360"
  },
  {
    "text": "heard us say this webassembly is neither web nor assembly which is kind of funny given its name",
    "start": "114360",
    "end": "119759"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "um the big thing is that it's an open w3c standard and it first became popular for the web when it came out",
    "start": "119759",
    "end": "126780"
  },
  {
    "text": "and because it's for it because it became popular in the web it has some things that the web desires and that's namely that it's safe and secure",
    "start": "126780",
    "end": "133040"
  },
  {
    "text": "efficient and fast it's a polyglot thing you can write in any language and it's",
    "start": "133040",
    "end": "138120"
  },
  {
    "text": "portable you can run in all major browsers now all of those things that are listed there are also very good benefits for",
    "start": "138120",
    "end": "144420"
  },
  {
    "text": "the server side this is something you want on a server you want it to be safe and secure and you want it to be very efficient and",
    "start": "144420",
    "end": "150420"
  },
  {
    "text": "fast you also want this to be a thing where you could write it in any language and",
    "start": "150420",
    "end": "155580"
  },
  {
    "text": "you want it to be able to run on any operating system not just Linux not just a specific processor but every single",
    "start": "155580",
    "end": "161220"
  },
  {
    "text": "operating system and this is a very important selling point for webassembly and everything",
    "start": "161220",
    "end": "166739"
  },
  {
    "text": "that we build on with it but that's just remember that webassembly is a compilation Target it isn't a language I",
    "start": "166739",
    "end": "173760"
  },
  {
    "text": "mean there's we can nitpick but essentially that is true like it is a it is a compilation Target you don't learn",
    "start": "173760",
    "end": "179459"
  },
  {
    "text": "to write webassembly you compile to webassembly now the thing with webassembly is there",
    "start": "179459",
    "end": "184739"
  },
  {
    "start": "183000",
    "end": "183000"
  },
  {
    "text": "are still some gaps the language support especially for server side is still limited but it's quickly growing we had",
    "start": "184739",
    "end": "190560"
  },
  {
    "text": "a cloud native awesome day a few days ago and we heard a bunch about languages that are that are getting very close to",
    "start": "190560",
    "end": "196680"
  },
  {
    "text": "having it we're talking things like.net and Python and things like that so those are coming they're not here yet",
    "start": "196680",
    "end": "203580"
  },
  {
    "text": "um networking has come along a little bit but it's still very rough around the edges and you'll see why what we've done",
    "start": "203580",
    "end": "210360"
  },
  {
    "text": "to kind of get around that and then you still have to compile your dependencies into the final binary so if you have a bunch of dependencies in there from that",
    "start": "210360",
    "end": "216659"
  },
  {
    "text": "you've imported they get compiled in and we're working on that part too it's called the component model and at the",
    "start": "216659",
    "end": "222599"
  },
  {
    "text": "very base level webassembly is numbers and numbers out and so that kind of limits how effective it can be when",
    "start": "222599",
    "end": "228720"
  },
  {
    "text": "getting big adoption but also that's being improved there's no concrete types yet so we're going to talk a little bit",
    "start": "228720",
    "end": "235500"
  },
  {
    "text": "next about like where does all this fit in in the in the scale like what we're doing in Computing and kind of what web",
    "start": "235500",
    "end": "241440"
  },
  {
    "text": "was on cloud does yeah so when you look at the Modern Computing environment there we go and",
    "start": "241440",
    "end": "247560"
  },
  {
    "start": "243000",
    "end": "243000"
  },
  {
    "text": "kind of what we see in the cloud native landscape over time we've further reduced the amount of responsibility on",
    "start": "247560",
    "end": "253980"
  },
  {
    "text": "the developer and compute targets are getting smaller and smaller so going from pce to VMS to Containers the",
    "start": "253980",
    "end": "260579"
  },
  {
    "text": "responsibility is getting smaller and smaller and containers were abstracting away the kernel so you're still",
    "start": "260579",
    "end": "266820"
  },
  {
    "text": "compiling for Linux you're still compiling for a specific architecture I know that there's Windows containers but I'm just going to keep rolling without",
    "start": "266820",
    "end": "273600"
  },
  {
    "text": "mentioning too much of that where we see webassembly fitting in is another step in that graph so the compile Target is",
    "start": "273600",
    "end": "280680"
  },
  {
    "text": "getting smaller and smaller usually webassembly modules clock in somewhere between 20 kilobytes maybe up to two",
    "start": "280680",
    "end": "287040"
  },
  {
    "text": "megabytes at their largest they've got deny by default security and so it's really a truly platform agnostic",
    "start": "287040",
    "end": "293580"
  },
  {
    "text": "compilation Target that developers can compile to but still with this even",
    "start": "293580",
    "end": "298740"
  },
  {
    "text": "though we have deny by default security people are still baking in their dependencies into the the final binary",
    "start": "298740",
    "end": "304440"
  },
  {
    "text": "so they're still taking code that they don't write the the non-functional requirements and compiling it all",
    "start": "304440",
    "end": "309479"
  },
  {
    "text": "together the same thing that we do now and that that works really well for some use cases but it gets into a lot of pain",
    "start": "309479",
    "end": "315060"
  },
  {
    "text": "when it comes down to the maintenance of the application oftentimes you are recompiling your app for reasons that is",
    "start": "315060",
    "end": "321479"
  },
  {
    "text": "not because your actual code change but because you need to update some dependency that's open source and resolved a vulnerability all those",
    "start": "321479",
    "end": "327600"
  },
  {
    "text": "things so wasn't Cloud takes this a step further and abstracts the capabilities or the non-functional requirements away",
    "start": "327600",
    "end": "334740"
  },
  {
    "text": "from the application and to give you a little bit of a concrete example say like a to-do app the functional",
    "start": "334740",
    "end": "340500"
  },
  {
    "text": "requirements of a to-do app are you want to create read update delete to Do's like that's the code that you as a",
    "start": "340500",
    "end": "346199"
  },
  {
    "text": "developer are wanting to write like you have an idea and you want to implement that the non-functional requirements are",
    "start": "346199",
    "end": "352139"
  },
  {
    "text": "I'm gonna need to spin up a web server and listen on some port and I need to store this in some persistent data store",
    "start": "352139",
    "end": "357900"
  },
  {
    "text": "and I need to pick which one I need exactly to compile in all of that is abstracted away the non-functional",
    "start": "357900",
    "end": "363600"
  },
  {
    "text": "requirements so you just get down to writing your business logic or your idea and so to explain wasmcloud this is",
    "start": "363600",
    "end": "370800"
  },
  {
    "text": "important because the underpinnings of our platform for cosmonic I like to go through it in a couple of different layers and I'll talk about some of the",
    "start": "370800",
    "end": "376740"
  },
  {
    "text": "benefits we get from it at the base level we're using a web assembly engine to execute webassembly modules and so",
    "start": "376740",
    "end": "383520"
  },
  {
    "text": "we're taking advantage of all the benefits of portability and security and easy scale with webassembly at the base",
    "start": "383520",
    "end": "390539"
  },
  {
    "text": "level now the wasn't Cloud application runtime like I said I'm part of a weird Venn",
    "start": "390539",
    "end": "396539"
  },
  {
    "start": "392000",
    "end": "392000"
  },
  {
    "text": "diagram is written in Elixir OTP and rust so we get the security and speed of",
    "start": "396539",
    "end": "401880"
  },
  {
    "text": "rust but the orchestration of processes and like the supervision model from OTP",
    "start": "401880",
    "end": "407280"
  },
  {
    "text": "which is really good at running small lightweight processes The Elixir processes kind of inspired or erlang",
    "start": "407280",
    "end": "413699"
  },
  {
    "text": "process has kind of inspired what like go routines and green threads kind of are today way back in the day so we take",
    "start": "413699",
    "end": "419759"
  },
  {
    "text": "advantage of that scalability not just many different web assembly modules but running them across a different wasm",
    "start": "419759",
    "end": "425100"
  },
  {
    "text": "Cloud hosts now I talked about capabilities or non-functional requirements these are",
    "start": "425100",
    "end": "430259"
  },
  {
    "start": "426000",
    "end": "426000"
  },
  {
    "text": "things that you get to pick at runtime so you code your app in terms of an abstract contract something like a key",
    "start": "430259",
    "end": "436199"
  },
  {
    "text": "value store and you can do all those things with the interface the key value interface and then at runtime you say",
    "start": "436199",
    "end": "441419"
  },
  {
    "text": "okay I'd like to use redis or okay I'm deploying to my organization's Cloud environment and I'm going to use AWS",
    "start": "441419",
    "end": "448199"
  },
  {
    "text": "dynamodb those are all kind of composable Lego blocks plug and play and and we actually get a lot of benefit of",
    "start": "448199",
    "end": "454020"
  },
  {
    "text": "that which we'll talk about a little bit later the actors it's not quite like an actor",
    "start": "454020",
    "end": "460199"
  },
  {
    "text": "model but it's the webassembly modules that is implementing your business logic and these are stateless reactive pieces",
    "start": "460199",
    "end": "466979"
  },
  {
    "text": "of compute that you can kind of deploy anywhere stitch together to create your application",
    "start": "466979",
    "end": "472139"
  },
  {
    "start": "472000",
    "end": "472000"
  },
  {
    "text": "and the last part that really makes this all feel kind of like magic and what really abstracts a lot of pain for me",
    "start": "472139",
    "end": "478139"
  },
  {
    "text": "personally is the lattice Network it's a interconnected self-forming self-healing",
    "start": "478139",
    "end": "483960"
  },
  {
    "text": "Network that's kind of powered by gnats under the hood and basically no matter where your webassembly modules are",
    "start": "483960",
    "end": "489960"
  },
  {
    "text": "running that only means so much for a distributed system if you can't actually have them talk to each other so this",
    "start": "489960",
    "end": "495660"
  },
  {
    "text": "deals with the connecting RPC no matter where the actual modules are running",
    "start": "495660",
    "end": "500759"
  },
  {
    "start": "500000",
    "end": "500000"
  },
  {
    "text": "and then cosmonic you know so that's that's wasn't cloud in a couple of different layers cosmotic company that",
    "start": "500759",
    "end": "506340"
  },
  {
    "text": "Taylor and I work for we're building a platform for hosting webassembly applications our whole goal is to make",
    "start": "506340",
    "end": "511800"
  },
  {
    "text": "it a painless experience to make distributed apps and to take that from Dev to production and the reason why",
    "start": "511800",
    "end": "518159"
  },
  {
    "text": "we're talking about it today is because even though all of this power is in the open source somebody has to manage this",
    "start": "518159",
    "end": "524580"
  },
  {
    "text": "at some point you see all of the benefits you know kubernetes is something that you can do all on your own but managed services are very",
    "start": "524580",
    "end": "531300"
  },
  {
    "text": "popular because taking that complexity away from the developer again just reduces pain reduces the management you",
    "start": "531300",
    "end": "536760"
  },
  {
    "text": "have to do now the real thing that we're here to talk about we're here to talk about dog",
    "start": "536760",
    "end": "542940"
  },
  {
    "text": "fooding or champagne drinking whatever your you know acronym is for it but everything on the back end is built with",
    "start": "542940",
    "end": "549779"
  },
  {
    "text": "wasm Cloud so we built our back end on webassembly modules hot swappable capabilities in an effort to take",
    "start": "549779",
    "end": "557040"
  },
  {
    "text": "advantage of all the things that we are putting out as benefits and prove that webassembly can be used on the server",
    "start": "557040",
    "end": "563339"
  },
  {
    "text": "side now to run a platform and we are running our platform in prod now",
    "start": "563339",
    "end": "569040"
  },
  {
    "text": "so that was the basic stuff to just understand so keep all that mind this is important context to understand these",
    "start": "569040",
    "end": "574920"
  },
  {
    "text": "points which is the real meat of what we want to talk about so let's talk about our architecture we're just going to",
    "start": "574920",
    "end": "580500"
  },
  {
    "text": "show this to you actually give me a sec to swap over to this mirrored mode so I can show you",
    "start": "580500",
    "end": "586380"
  },
  {
    "text": "um hello there we go okay so what we have here is",
    "start": "586380",
    "end": "593279"
  },
  {
    "text": "the entire uh back end for cosmonic running in cosmotic uh yeah that this",
    "start": "593279",
    "end": "599459"
  },
  {
    "text": "this is it right here you can see the whole thing this is the cosmotic platform running on the cosmotic platform and you can zoom in and see how",
    "start": "599459",
    "end": "605519"
  },
  {
    "text": "everything is connected one to another now these lines are a little bit crazy yep but you can see like we have all",
    "start": "605519",
    "end": "610980"
  },
  {
    "text": "these applications they're written in webassembly connecting to these capabilities that were mentioned and this is live I'm not this is not some",
    "start": "610980",
    "end": "616920"
  },
  {
    "text": "demo or can thing this is me looking at our actual running stuff that is running cosmotic right now on",
    "start": "616920",
    "end": "623940"
  },
  {
    "text": "um on this canvas that we have that lays it all out now I know that all of this looks maybe a little bit as soon as we",
    "start": "623940",
    "end": "630839"
  },
  {
    "text": "get back to here this is this is the actual architecture diagram that happens",
    "start": "630839",
    "end": "636839"
  },
  {
    "text": "there we go um so I know that it looks a little bit crazy I mean it kind of looks like this",
    "start": "636839",
    "end": "643140"
  },
  {
    "text": "a little bit or one could maybe say this but actually like I know I know that seems",
    "start": "643140",
    "end": "649140"
  },
  {
    "text": "like crazy diagram going on right there but this is actually really really cool underneath the hood and we just wanted",
    "start": "649140",
    "end": "654959"
  },
  {
    "text": "to show you that like that's the final thing but let's talk the details so Dog fooding 101 we always like Brooks",
    "start": "654959",
    "end": "661260"
  },
  {
    "start": "658000",
    "end": "658000"
  },
  {
    "text": "mentioned call this drinking our own champagne but most people call it dog fooding so when we started this product",
    "start": "661260",
    "end": "666540"
  },
  {
    "text": "we decided that we wanted to be customer zero uh now we could have whipped this",
    "start": "666540",
    "end": "671880"
  },
  {
    "text": "all up really quick with go or rust or Elixir like all things that we use we",
    "start": "671880",
    "end": "677160"
  },
  {
    "text": "could have just whipped this all out and said here you go but we we decided no we need to actually do this like we were",
    "start": "677160",
    "end": "682920"
  },
  {
    "text": "making some really strong claims here with what we're able to do and we needed to put those to the test so that we",
    "start": "682920",
    "end": "688860"
  },
  {
    "text": "could tell people no like we're not just making this up we've actually done it and so this learning for us has served",
    "start": "688860",
    "end": "695279"
  },
  {
    "text": "two purposes first off it has improved our open core this is still Watson Cloud underneath the hood and so this",
    "start": "695279",
    "end": "701820"
  },
  {
    "text": "everything that we discovered goes back into wasm cloud and makes it better for anyone using it from an open source perspective but it also has improved the",
    "start": "701820",
    "end": "709740"
  },
  {
    "text": "customer experience for us because we were our own customer we had to go through a lot of the pain points before our customers ever had to",
    "start": "709740",
    "end": "716399"
  },
  {
    "text": "and so that's why we why we did this now what tech do we actually use obviously wasm but beyond that we also use open",
    "start": "716399",
    "end": "723180"
  },
  {
    "start": "719000",
    "end": "719000"
  },
  {
    "text": "Telemetry we use Nats for the communication layer we have various data stories namely Vault and redis being the",
    "start": "723180",
    "end": "729540"
  },
  {
    "text": "big ones we use AWS as well as a bunch of other Cloud things and we're not limited to that and we also for our",
    "start": "729540",
    "end": "736260"
  },
  {
    "text": "infrastructure we do Nomad with our own custom task driver we talked about that hash account recently and it actually",
    "start": "736260",
    "end": "741360"
  },
  {
    "text": "just went live on YouTube I found out and console so that's kind of our top stack of like what we're doing and how",
    "start": "741360",
    "end": "748140"
  },
  {
    "text": "and now we're going to talk about the specific details of how we leverage webassembly in here it's with our Deep dive part of all this",
    "start": "748140",
    "end": "754200"
  },
  {
    "text": "yeah so let's start out with one of the media benefits that we saw as soon as we started thinking about customer workloads everything that we coded for",
    "start": "754200",
    "end": "761339"
  },
  {
    "text": "the the back end it was interacting with a key value store was interacting with a key in abstract key value store so we",
    "start": "761339",
    "end": "767040"
  },
  {
    "text": "were slotting in redis we were working with data and then we realized that we're going to be storing some secrets",
    "start": "767040",
    "end": "772740"
  },
  {
    "text": "you know not specific customer data but we're going to generate secrets for customers we're going to you know have",
    "start": "772740",
    "end": "777779"
  },
  {
    "text": "things that we don't want to just be sitting in some plain text key value store so instead of modifying our",
    "start": "777779",
    "end": "783839"
  },
  {
    "text": "applications that interact with the key value store we simply went out we wrote a vault implementation a hashcourt vault",
    "start": "783839",
    "end": "791100"
  },
  {
    "text": "implementation and then this little line that you saw on the canvas there that we were dragging to redis just drag the",
    "start": "791100",
    "end": "797459"
  },
  {
    "text": "line to Vault instead so with wasmcloud all of our actors that we needed to store secrets we can have them interact",
    "start": "797459",
    "end": "803880"
  },
  {
    "text": "with Vault and none of that code actually needed to change when we were going from developing on it to to changing default so immediately the",
    "start": "803880",
    "end": "810959"
  },
  {
    "text": "abstraction of capabilities is something that we saw benefits",
    "start": "810959",
    "end": "816079"
  },
  {
    "start": "816000",
    "end": "816000"
  },
  {
    "text": "now for a while wasmcloud is a distributed application platform even if",
    "start": "816779",
    "end": "822120"
  },
  {
    "text": "things are all running on one machine they're built for a distributed use case so that if you scale it across different machines everything interacts the same",
    "start": "822120",
    "end": "828540"
  },
  {
    "text": "which means we have multiple Network hops multiple different failure planes and actually gave a talk about this on",
    "start": "828540",
    "end": "834779"
  },
  {
    "text": "Monday at open till at observability day about when something goes wrong in a distributed system and you get error",
    "start": "834779",
    "end": "841139"
  },
  {
    "text": "timeout then everybody panics we all hop on a call it takes four hours to figure out what's going on and so we added",
    "start": "841139",
    "end": "847680"
  },
  {
    "text": "tracing a little bit into the development of cosmonic and all of that again went into the open core so for",
    "start": "847680",
    "end": "853800"
  },
  {
    "text": "wasm cloud even if you're not using our platform at all you can just give it an export or URL and you get all of your",
    "start": "853800",
    "end": "858839"
  },
  {
    "text": "workloads traced automatically so we love kind of contributing that back this is an actual example of one of the",
    "start": "858839",
    "end": "864899"
  },
  {
    "start": "862000",
    "end": "862000"
  },
  {
    "text": "things that we um like one of the traces that we can look at it's an infrastructure provision",
    "start": "864899",
    "end": "870240"
  },
  {
    "text": "so when you go on cosmotic and you say launch a wasm cloud host for me this is the trace of that happening and you can",
    "start": "870240",
    "end": "876360"
  },
  {
    "text": "even see see what the sixth one down there from the bottom is actually collapsed so and each color change is a",
    "start": "876360",
    "end": "882720"
  },
  {
    "text": "network hop a change in service and so we get a lot of mileage out of doing this tracing for our own debugging and",
    "start": "882720",
    "end": "889139"
  },
  {
    "text": "and because of that our mean time to resolution has dropped a lot",
    "start": "889139",
    "end": "894740"
  },
  {
    "start": "895000",
    "end": "895000"
  },
  {
    "text": "and last thing that I'll talk about before handing over to Taylor is we started with the benefit or the the",
    "start": "895380",
    "end": "902100"
  },
  {
    "text": "claim with webassembly that it's near native speed and can rapidly scale and yup it's fast nowhere in our performance",
    "start": "902100",
    "end": "909899"
  },
  {
    "text": "testing you know when we're looking at something and like why is this taking a second it was never the speed of webassembly that was bottlenecking our",
    "start": "909899",
    "end": "916500"
  },
  {
    "text": "system it executes in Max a couple of milliseconds couple of microseconds and",
    "start": "916500",
    "end": "922260"
  },
  {
    "text": "nowhere in the platform you know we're running the entire platform I don't know if you saw it when Taylor pulled it up",
    "start": "922260",
    "end": "927360"
  },
  {
    "text": "but each service we have it kind of distributed for high availability but we're running three instances of these",
    "start": "927360",
    "end": "933360"
  },
  {
    "text": "like 250 kilobyte modules so each piece of our platform is like what 750",
    "start": "933360",
    "end": "938820"
  },
  {
    "text": "kilobytes that's how math works very tiny yeah very easy to scale but we haven't even needed it with the with the",
    "start": "938820",
    "end": "944639"
  },
  {
    "text": "speed which was awesome to kind of experience yeah so now from uh this goes more into",
    "start": "944639",
    "end": "950220"
  },
  {
    "start": "949000",
    "end": "949000"
  },
  {
    "text": "the programming side of things but we're I want to talk a little bit about event sourcing and reactive programming so",
    "start": "950220",
    "end": "956519"
  },
  {
    "text": "these are going to be high level definitions nobody who's an expert in these fields get triggered with any of these definitions please because they're",
    "start": "956519",
    "end": "963839"
  },
  {
    "text": "they're going to be high level for those who may not be familiar with the concept so reactive programming is basically where a piece of code is given some sort",
    "start": "963839",
    "end": "970440"
  },
  {
    "text": "of data as a trigger and then that code uses that trigger to inside of its logic to process that that data this is the",
    "start": "970440",
    "end": "978360"
  },
  {
    "text": "programming model that a lot of people have seen in serverless right like you do an HTTP request or something and then",
    "start": "978360",
    "end": "984240"
  },
  {
    "text": "it triggers your function to run and then your function does something that's an example of reactive programming and",
    "start": "984240",
    "end": "990199"
  },
  {
    "text": "wasmcloud is letting you do like plug this plugable thing of putting in different pieces along reactive",
    "start": "990199",
    "end": "995699"
  },
  {
    "text": "programming so data is processed and sent using these actors we've mentioned and then when I'm talking about this",
    "start": "995699",
    "end": "1001639"
  },
  {
    "text": "this is this is stuff like config data and policy information all of these different things can be sent and used as",
    "start": "1001639",
    "end": "1008480"
  },
  {
    "text": "triggers in our system so we use like we use a messaging bus for this in our case it's Nats and the wasn't Cloud actors",
    "start": "1008480",
    "end": "1015980"
  },
  {
    "text": "are reactive to that data that comes in so they receive the data they need from the message do something with it and",
    "start": "1015980",
    "end": "1021079"
  },
  {
    "text": "then move on so we use most of this in our customer facing apis our configuration and as the entry point",
    "start": "1021079",
    "end": "1026780"
  },
  {
    "text": "into our event sourcing system and I want to say like that's the first bullet point here wasm is very very good at",
    "start": "1026780",
    "end": "1032600"
  },
  {
    "text": "this I mean extremely good at it and wasmcloud makes the whole thing easier for us because like I mentioned Nats is",
    "start": "1032600",
    "end": "1041000"
  },
  {
    "text": "the the thing we're using but it doesn't matter if you wanted to use Kafka or rabbitmq or any type of messaging system",
    "start": "1041000",
    "end": "1047959"
  },
  {
    "text": "you can just implement the contract and plug it in and so then the actual business logic of handling your thing",
    "start": "1047959",
    "end": "1054020"
  },
  {
    "text": "does not change it does not have to know what it's connecting to or any of that stuff that you normally have to do in a reactive system",
    "start": "1054020",
    "end": "1060320"
  },
  {
    "text": "so then we also do all this with event sourcing so event sourcing could be its own talk that's why I'm going to once",
    "start": "1060320",
    "end": "1066679"
  },
  {
    "text": "again give it a description of this that may trigger anyone who's an expert don't worry about it uh this is so this",
    "start": "1066679",
    "end": "1073460"
  },
  {
    "text": "is the real softball definition um but basically we created a contract for this event sourcing and event",
    "start": "1073460",
    "end": "1079760"
  },
  {
    "text": "sourcing is this architecture pattern that treats every single bit of State as a log and divides the responsibility for",
    "start": "1079760",
    "end": "1086900"
  },
  {
    "text": "what each of the how each thing handles it across different logical components called Aggregates process managers and",
    "start": "1086900",
    "end": "1092600"
  },
  {
    "text": "projectors um you don't have to know all the details of it I'm going to show some diagrams for it but once again we did",
    "start": "1092600",
    "end": "1098660"
  },
  {
    "text": "this with a contract so this contract we're going to open source so that means what we're just tidying up something",
    "start": "1098660",
    "end": "1103760"
  },
  {
    "text": "we're putting a little bow on it before we do it but we're going to be releasing this this contract and now basically you",
    "start": "1103760",
    "end": "1110299"
  },
  {
    "text": "can get an event sourcing platform for free by just running it in cosmonic or",
    "start": "1110299",
    "end": "1115460"
  },
  {
    "text": "running in Watson cloud with this Con with this contract and if you want to run it differently and you want to have custom processing you just re-implement",
    "start": "1115460",
    "end": "1122900"
  },
  {
    "text": "the interface so it's really really flexible and the value that we demonstrated before with shifting from",
    "start": "1122900",
    "end": "1129440"
  },
  {
    "text": "redis to Vault is is that same kind of idea we like to we first tested a super basic implementation of it and then we",
    "start": "1129440",
    "end": "1135559"
  },
  {
    "text": "built the real thing that does it like multi-threaded locking all the different stuff you need and the code that we",
    "start": "1135559",
    "end": "1141080"
  },
  {
    "text": "wrote didn't have to change at all we just swapped it out and boom production ready so what this looks like in",
    "start": "1141080",
    "end": "1147260"
  },
  {
    "text": "practice and this is the crazy diagram here for it again sorry I like putting these these crazy diagrams up here but",
    "start": "1147260",
    "end": "1153500"
  },
  {
    "text": "this is like what an event sourcing works for a wormhole a wormhole for us is an Ingress into our system Space",
    "start": "1153500",
    "end": "1159080"
  },
  {
    "text": "theme Space theme yeah that's me I mean you got it um and so we have different of commands",
    "start": "1159080",
    "end": "1164360"
  },
  {
    "text": "that come in they go to these different so each of these diamonds is a piece of code and they all have to handle tons of different types of events and some of",
    "start": "1164360",
    "end": "1171140"
  },
  {
    "text": "these events go eventually get stored into redis and some get stored some get triggered out into our infrastructure",
    "start": "1171140",
    "end": "1177140"
  },
  {
    "text": "but what the so all of this crazy stuff that's happening is handled by these three things so this is just screenshots",
    "start": "1177140",
    "end": "1182840"
  },
  {
    "text": "from that that thing I was showing you at the very beginning with like this we have the this Aggregate and it's just",
    "start": "1182840",
    "end": "1188840"
  },
  {
    "text": "pointing to this thing that's receiving its events the um basically an event sourcing provider and then we have this",
    "start": "1188840",
    "end": "1195799"
  },
  {
    "text": "process manager that does a lot of the logic handling and it's just connected as well to that then we have something that's connected to redis and goes at",
    "start": "1195799",
    "end": "1202820"
  },
  {
    "text": "like this is It's reduced to a very simple diagram it looks like you sketched it and then put it into the",
    "start": "1202820",
    "end": "1208520"
  },
  {
    "text": "cloud and that's what we were going for with this and event sourcing is has been a powerful model for us but the whole",
    "start": "1208520",
    "end": "1214340"
  },
  {
    "text": "point is just that it is a nice these abstractions have worked really well for us because you can plug and play any of",
    "start": "1214340",
    "end": "1221299"
  },
  {
    "text": "these things we've done we've done and adapt it for whatever you're doing inside of your your infrastructure and",
    "start": "1221299",
    "end": "1226940"
  },
  {
    "text": "your systems so the other thing we did is we we learned here we abstracted over infrastructure so provisioning was on",
    "start": "1226940",
    "end": "1233600"
  },
  {
    "start": "1229000",
    "end": "1229000"
  },
  {
    "text": "Cloud on different infrastructure uh different interests and on different infrastructure is like",
    "start": "1233600",
    "end": "1239419"
  },
  {
    "text": "very uh it's not platform agnostic for obvious reasons so uh the Watson Cloud's",
    "start": "1239419",
    "end": "1246559"
  },
  {
    "text": "very good at scheduling these applications but we needed functionality to schedule the actual was on cloud processes abstracting the infrastructure",
    "start": "1246559",
    "end": "1253760"
  },
  {
    "text": "is that is still really difficult that's something we can't do very well we kept it to a minimum and probably still did too much and we needed the functionality",
    "start": "1253760",
    "end": "1260480"
  },
  {
    "text": "of a scheduler and so we came up with the our custom thing for nomad that runs all these all these things we use Nomad",
    "start": "1260480",
    "end": "1266720"
  },
  {
    "text": "as the scheduler and so if we could do it all again from the beginning we would say that this is something where",
    "start": "1266720",
    "end": "1273440"
  },
  {
    "text": "you can't really abstract over that with webassembly or even some of the providers so we would just probably get",
    "start": "1273440",
    "end": "1279140"
  },
  {
    "text": "the Nomad scheduler from the get-go rather than doing it so that's one part where we thought it could work out well and it and it didn't",
    "start": "1279140",
    "end": "1285440"
  },
  {
    "start": "1285000",
    "end": "1285000"
  },
  {
    "text": "and then last is this defense in depth this has been a popular topic as of late um let's talk about so we run untrusted",
    "start": "1285440",
    "end": "1292460"
  },
  {
    "text": "code that's the thing this is all these these things you write for your business logic they're entirely interested",
    "start": "1292460",
    "end": "1298460"
  },
  {
    "text": "and so because of this we need multiple tiers of Defense so wasm itself gives us gives us massive benefits here because",
    "start": "1298460",
    "end": "1304640"
  },
  {
    "text": "it's a Sandbox and you can't do anything with it unless you explicitly give it permission to it has the same permission",
    "start": "1304640",
    "end": "1310820"
  },
  {
    "text": "model that you see on like a phone nowadays where it says can I use the microphone can I use the camera I can I use this and so you still have to do",
    "start": "1310820",
    "end": "1317299"
  },
  {
    "text": "that with webassembly and then um we have besides Watson itself we have the host security built into wasm Cloud",
    "start": "1317299",
    "end": "1323780"
  },
  {
    "text": "so each actor and provider is signed and they have to have those specific Keys must be present in the cluster to know",
    "start": "1323780",
    "end": "1329659"
  },
  {
    "text": "that it is signed properly and it's completely decentralized checking we",
    "start": "1329659",
    "end": "1334820"
  },
  {
    "text": "don't need like a central server but they have to have explicit access granted to capabilities you can't just all of a sudden access a database if",
    "start": "1334820",
    "end": "1341480"
  },
  {
    "text": "you're not signed to be used as a database and then we have this idea of the net",
    "start": "1341480",
    "end": "1346700"
  },
  {
    "text": "Security net security also has decentralized authentication that use that uses signed keys and jwts to",
    "start": "1346700",
    "end": "1353179"
  },
  {
    "text": "actually authenticate this has helped us to segment traffic and data but it's also presented a lot of different",
    "start": "1353179",
    "end": "1358220"
  },
  {
    "text": "challenges for us we need to figure out how to allow the right things across the different information boundaries because",
    "start": "1358220",
    "end": "1363559"
  },
  {
    "text": "this is a multi-tenant system but it was very powerful once we had figured it out",
    "start": "1363559",
    "end": "1369080"
  },
  {
    "text": "and then because it is multi-tenant as well we have to have a set of allow and deny rules and this is where it became really cool because those limit checks",
    "start": "1369080",
    "end": "1375740"
  },
  {
    "text": "that we we enforce depending like limits on the platform are actually provided using an actor that's written in",
    "start": "1375740",
    "end": "1381919"
  },
  {
    "text": "webassembly um and then we have at the very end we have this firecracker thing and the",
    "start": "1381919",
    "end": "1387020"
  },
  {
    "text": "firecracker was one example where the limits of webassembly show through 4S we needed firecracker which if you're not",
    "start": "1387020",
    "end": "1392240"
  },
  {
    "text": "familiar with is a micro VM released by by AWS by Amazon to to basically provide",
    "start": "1392240",
    "end": "1398240"
  },
  {
    "text": "isolation and for shared processes so provide like we can't do everything that a provider needs to do with webassembly",
    "start": "1398240",
    "end": "1404419"
  },
  {
    "text": "yet we will soon in the future but right now we can't and so these are untrusted binaries and to make sure people can run",
    "start": "1404419",
    "end": "1410780"
  },
  {
    "text": "them we have to make sure they are entirely walled off and that's what we use the firecracker side for",
    "start": "1410780",
    "end": "1415940"
  },
  {
    "text": "so we're going to go ahead and talk just a little bit about the lessons learned first off welcome to the bleeding edge",
    "start": "1415940",
    "end": "1422299"
  },
  {
    "start": "1420000",
    "end": "1420000"
  },
  {
    "text": "everybody uh that's what this whole thing is the bleeding edge is real and I I understand that some of you might have",
    "start": "1422299",
    "end": "1428120"
  },
  {
    "text": "requirements that exclude you from doing some of this because bleeding edge is a no-go at some big companies I get that",
    "start": "1428120",
    "end": "1434059"
  },
  {
    "text": "but you get a really large list of very nice benefits from it basically on the",
    "start": "1434059",
    "end": "1440840"
  },
  {
    "text": "whole all the benefits were incredible for us and proved that this new technology can fit really nicely next to",
    "start": "1440840",
    "end": "1446299"
  },
  {
    "text": "existing tools and Tech Stacks like I said we're using Nomad we're using things that there's there's pieces of",
    "start": "1446299",
    "end": "1451640"
  },
  {
    "text": "our system that like we're not going to run like we use Vector for logging stuff we're not going to go rewrite vector and",
    "start": "1451640",
    "end": "1456740"
  },
  {
    "text": "try to get it to compile to watch them it runs in a container on another node in Nomad we're still using Technologies",
    "start": "1456740",
    "end": "1462980"
  },
  {
    "text": "alongside this isn't like a hey kick everything out rewrite everything to us and that's not what we're saying we're saying that doing this as webassembly",
    "start": "1462980",
    "end": "1469700"
  },
  {
    "text": "gave us some huge benefits and we built this whole platform on top of it one of the other motivations for us submitting",
    "start": "1469700",
    "end": "1476120"
  },
  {
    "text": "this talk in the first place is we get this we have this constant refrain of oh well webassembly looks cool but like you",
    "start": "1476120",
    "end": "1481580"
  },
  {
    "text": "can't really do anything with it I mean we just showed you we're doing something with it the whole thing is running on",
    "start": "1481580",
    "end": "1487640"
  },
  {
    "text": "top of webassembly all the the user interactions those are all webassembly things that are handling it and so we",
    "start": "1487640",
    "end": "1494539"
  },
  {
    "text": "just want to say like that should Inspire some confidence that you can actually do something real right now so let's talk a little bit more about maybe",
    "start": "1494539",
    "end": "1500480"
  },
  {
    "text": "some of the pros and cons of web assembly itself to kind of cover this yeah so as we're going through we're actively proving out this technology on",
    "start": "1500480",
    "end": "1507320"
  },
  {
    "start": "1502000",
    "end": "1502000"
  },
  {
    "text": "the server side and we know that the speed and the size and the scalability is is incredible we we had great gains",
    "start": "1507320",
    "end": "1513919"
  },
  {
    "text": "and and loved watching that actually come together being able to compose webassembly modules together to create",
    "start": "1513919",
    "end": "1519320"
  },
  {
    "text": "applications is really important and something that's difficult depending on what framework are you're using and the",
    "start": "1519320",
    "end": "1525140"
  },
  {
    "text": "deny by default security gives us a lot of confidence in our own platform and gives us kind of a flexible permissions",
    "start": "1525140",
    "end": "1531740"
  },
  {
    "text": "model when we're making our own platform and stuff like even if we're writing the code the deny by default security gives",
    "start": "1531740",
    "end": "1537919"
  },
  {
    "text": "us confidence that if we pull in some open source Library area into the piece of logic that we're doing we know that",
    "start": "1537919",
    "end": "1542960"
  },
  {
    "text": "it can't do anything unexpected if we if it doesn't have the permission to look at files on disk it has no ability It'll",
    "start": "1542960",
    "end": "1549500"
  },
  {
    "text": "ask the host can I read this file and wasmcloud denies that another awesome benefit is that when",
    "start": "1549500",
    "end": "1556520"
  },
  {
    "text": "we're developing our platform we don't have Docker files we don't have charts",
    "start": "1556520",
    "end": "1561559"
  },
  {
    "text": "we don't have a service mesh we don't manage crds and controllers we're not running on kubernetes we're running with",
    "start": "1561559",
    "end": "1567740"
  },
  {
    "text": "webassembly and wasm cloud and using a scheduler to actually get the benefits of deploying the pieces of our compute",
    "start": "1567740",
    "end": "1573860"
  },
  {
    "text": "on different parts of our platform but it wasn't all sunshine sunshine and Roses we've been looking at something",
    "start": "1573860",
    "end": "1580340"
  },
  {
    "text": "that Taylor is called the component model it's an advancement in webassembly and that's constantly changing so as we're developing prototypes and looking",
    "start": "1580340",
    "end": "1586880"
  },
  {
    "text": "to adopt it you know our prototypes break because the protocol is changing we are like you said at the bleeding",
    "start": "1586880",
    "end": "1593659"
  },
  {
    "text": "edge and get you know we're prepared to bleed now some of the things don't really lend",
    "start": "1593659",
    "end": "1600740"
  },
  {
    "text": "itself to webassembly Computing very well if you're looking to have a long running process that is just sitting in",
    "start": "1600740",
    "end": "1606440"
  },
  {
    "text": "a webassembly module to sit there and run webassembly is still single threaded so it doesn't really work very well to",
    "start": "1606440",
    "end": "1611960"
  },
  {
    "text": "sit there and be constantly working on compute the reactive programming and fitting to that Paradigm is something",
    "start": "1611960",
    "end": "1617179"
  },
  {
    "text": "that we worked with and worked really well but it's still something to keep out for and or keep an eye out for and",
    "start": "1617179",
    "end": "1623600"
  },
  {
    "text": "the standards are interesting because they're they're backed by the w3c so at any standard that comes through on",
    "start": "1623600",
    "end": "1629000"
  },
  {
    "text": "webassembly needs to be acceptable for the web and anything that we're implementing for webassembly needs to be",
    "start": "1629000",
    "end": "1634580"
  },
  {
    "text": "acceptable for for a standard moving forward so classic researchers they are taking a lot of things into account",
    "start": "1634580",
    "end": "1641179"
  },
  {
    "text": "trying to come up with use cases and standards that will work for everyone and this is actually you know this is a",
    "start": "1641179",
    "end": "1647120"
  },
  {
    "text": "good and a bad thing we don't want to rush this webassembly is a new technology we can prove these things out",
    "start": "1647120",
    "end": "1652400"
  },
  {
    "text": "and then publish the standard we don't have to rush through but still things like network sockets have kind of come",
    "start": "1652400",
    "end": "1658220"
  },
  {
    "text": "long over years and years and and you know we're building things kind of around that",
    "start": "1658220",
    "end": "1663440"
  },
  {
    "text": "and I want to point out here that the breaking changes that we're talking about are one of the benefits of using",
    "start": "1663440",
    "end": "1669200"
  },
  {
    "text": "wasmcloud is that we try to paper over those and Bridge the gaps for you right now so that's why like you can there's",
    "start": "1669200",
    "end": "1675799"
  },
  {
    "text": "HTTP servers and HTTP clients and we're bridging over that Gap right now and there's a lot of these things that we",
    "start": "1675799",
    "end": "1681559"
  },
  {
    "text": "kind of make easier for you by doing it inside of wasm cloud to to make this something like I said you can do",
    "start": "1681559",
    "end": "1687140"
  },
  {
    "text": "something real right now is when it comes to wasm Cloud specific lessons developing our app during",
    "start": "1687140",
    "end": "1694460"
  },
  {
    "start": "1689000",
    "end": "1689000"
  },
  {
    "text": "contracts may have taken like a little bit longer in the beginning but the management of these pieces has been so",
    "start": "1694460",
    "end": "1700520"
  },
  {
    "text": "much easier as we've developed our platform like a literally this week we updated our redis implementation and",
    "start": "1700520",
    "end": "1707120"
  },
  {
    "text": "instead of recompiling all of our little services that use redis we just updated the Reddit service everything re-links",
    "start": "1707120",
    "end": "1713000"
  },
  {
    "text": "everything works just as before which is a really attractive story for the management of an application because we",
    "start": "1713000",
    "end": "1718460"
  },
  {
    "text": "didn't write like a redis library like we got all of that from open source and taking advantage of that we don't have",
    "start": "1718460",
    "end": "1723860"
  },
  {
    "text": "to recompile our whole platform to ship that we really enjoy the reactive programming model and we one one detail that we may",
    "start": "1723860",
    "end": "1732140"
  },
  {
    "text": "have not dove into specifically is these implementations the providers are native",
    "start": "1732140",
    "end": "1737779"
  },
  {
    "text": "rust or native go binaries and that's because the ability to write those things in webassembly isn't quite there",
    "start": "1737779",
    "end": "1743720"
  },
  {
    "text": "yet like there are network sockets now but they weren't when we started writing the platform multi-threaded is coming",
    "start": "1743720",
    "end": "1749600"
  },
  {
    "text": "along so even writing like an HTTP server if you use the new sockets you need to run multiple of them to get that",
    "start": "1749600",
    "end": "1755059"
  },
  {
    "text": "kind of multi-threaded environment but the first time that I took our HTTP server and deployed it to like Ubuntu 22",
    "start": "1755059",
    "end": "1762620"
  },
  {
    "text": "or whatever that has open ssl3 and it goes and this was built with opensl 1.1.1 just makes me flip the computer",
    "start": "1762620",
    "end": "1770059"
  },
  {
    "text": "over right I'm sure that other people have seen that before but we really want our whole platform to be this platform",
    "start": "1770059",
    "end": "1775520"
  },
  {
    "text": "agnostic technology it just makes it easier when I'm working on an M1 Mac and then deploying to x86 Linux that binary",
    "start": "1775520",
    "end": "1782779"
  },
  {
    "text": "not changing is huge and we want to do that for everything in our platform oh",
    "start": "1782779",
    "end": "1789200"
  },
  {
    "text": "yeah and and last I think Taylor nailed multi-tenancy pretty well we we've got defense in depth we've got firecracker",
    "start": "1789200",
    "end": "1794960"
  },
  {
    "text": "VMS we've got psyllium monitoring the networking but when people are deploying their own pieces of code to this",
    "start": "1794960",
    "end": "1800480"
  },
  {
    "text": "platform we want to have confidence that they're not Escaping The Sandbox doing anything nasty",
    "start": "1800480",
    "end": "1806059"
  },
  {
    "text": "so that leaves us with this question of well what what happens next where are we going from here um first off there's some Watson clouds",
    "start": "1806059",
    "end": "1811940"
  },
  {
    "text": "or cosmonic specific lessons that we we learned here and that's this is for us like what we wanted to move forward",
    "start": "1811940",
    "end": "1817940"
  },
  {
    "start": "1812000",
    "end": "1812000"
  },
  {
    "text": "we're going to keep being our own customer zero anything you tried on our platform we'll try it out first",
    "start": "1817940",
    "end": "1823039"
  },
  {
    "text": "um I mean and this is completely true so we've we've released some new features recently even some of our stuff that we",
    "start": "1823039",
    "end": "1828620"
  },
  {
    "text": "use for like like ran like task automation we're actually running through our platform using wormholes",
    "start": "1828620",
    "end": "1833840"
  },
  {
    "text": "using all the things I mentioned each new feature that we add means more web assembly that we're going to be writing",
    "start": "1833840",
    "end": "1840200"
  },
  {
    "text": "and we're going to share our future learnings with the community um we also plan on driving work forward",
    "start": "1840200",
    "end": "1845480"
  },
  {
    "text": "in the wasm standards especially the the stuff that allows us to compile providers to webassembly we want like",
    "start": "1845480",
    "end": "1852440"
  },
  {
    "text": "Brooks was saying webassembly to work everywhere for everything so that we don't have to to keep papering it over with some of the stuff we're doing for",
    "start": "1852440",
    "end": "1859159"
  },
  {
    "text": "webassembly itself um the things that we're going to be contributing to are the component model I'm not going to go into that here I can",
    "start": "1859159",
    "end": "1865760"
  },
  {
    "text": "talk your ear off at it you can come by the cosmotic or Watson Cloud Booth I'll be there pretty much the whole time and you can chat to me and chat with me",
    "start": "1865760",
    "end": "1871279"
  },
  {
    "text": "about that or or Bailey who's also sitting up here in the front and we'll we'll go over",
    "start": "1871279",
    "end": "1877039"
  },
  {
    "text": "um we'll go over that with you but it's a really cool thing that's coming out of the web assembly specifications we're also going to be working on Sig registry",
    "start": "1877039",
    "end": "1882980"
  },
  {
    "text": "and bindle this is a part of the bytecode alliance that's working on how do we store complex applications that",
    "start": "1882980",
    "end": "1888380"
  },
  {
    "text": "are our webassembly modules and then we're also trying to make make networking a whole lot easier to use so",
    "start": "1888380",
    "end": "1896000"
  },
  {
    "text": "um what can you do so we have the cosmotic platform if you want to check it out there's the links that's what the QR code links to",
    "start": "1896000",
    "end": "1901340"
  },
  {
    "text": "um our our platform is is open in a developer preview right now so you can come check all this out build your own",
    "start": "1901340",
    "end": "1906620"
  },
  {
    "text": "crazy diagram like I did There's the link to the actual watsoncloud project and then a couple other things if you're",
    "start": "1906620",
    "end": "1911779"
  },
  {
    "text": "doing things in kubernetes which is very likely we have something that we wrote called the kubernetes supplier we also",
    "start": "1911779",
    "end": "1917480"
  },
  {
    "text": "have a chart for wasm cloud and you can connect your stuff running in kubernetes to stuff running in Wasim Cloud so it's",
    "start": "1917480",
    "end": "1924140"
  },
  {
    "text": "pretty straightforward and easy and it's also once again written as an actor and then we have the capability providers",
    "start": "1924140",
    "end": "1929360"
  },
  {
    "text": "and interfaces we've been mentioning the whole time so with that let's leave a little bit of time for questions",
    "start": "1929360",
    "end": "1936679"
  },
  {
    "text": "we'll have a mic running around yeah we have two minutes so are there any questions",
    "start": "1936679",
    "end": "1943419"
  },
  {
    "start": "1940000",
    "end": "1940000"
  },
  {
    "text": "so so how does something like cross slit fit into a wasm cloud world yeah that's that's a good question and I",
    "start": "1948020",
    "end": "1954799"
  },
  {
    "text": "can answer this one very clearly having done another so at the in the beginning with how like Watson Cloud started it",
    "start": "1954799",
    "end": "1960080"
  },
  {
    "text": "was embeddable um and so we actually put it into crustlet to begin with but Crescent has",
    "start": "1960080",
    "end": "1965659"
  },
  {
    "text": "become kind of more of a we've we proved what it was supposed to do and people have moved in different directions a lot",
    "start": "1965659",
    "end": "1970700"
  },
  {
    "text": "of us are working on these new things like wasm Cloud some things have been like the container D shim stuff that Microsoft has been doing but creslet",
    "start": "1970700",
    "end": "1977659"
  },
  {
    "text": "doesn't fit into this directly anymore there's there's easier ways that we think we can integrate with existing systems like the kubernetes supplier I",
    "start": "1977659",
    "end": "1983840"
  },
  {
    "text": "was mentioning so that's that's where it stands with kind of the kubernetes integration part",
    "start": "1983840",
    "end": "1988880"
  },
  {
    "text": "we have one over here oh I'm sorry yeah um I guess first like really appreciate all the work you guys are doing this is",
    "start": "1988880",
    "end": "1994880"
  },
  {
    "text": "really cool and enjoying learning about this project I'm kind of curious it sounds like there's a lot of effort",
    "start": "1994880",
    "end": "2000039"
  },
  {
    "text": "being put into like the sandboxing and making sure that there's security and deploying a multi-tenant app or I guess",
    "start": "2000039",
    "end": "2006580"
  },
  {
    "text": "onto a multi-term platform um is there anything in terms of like a capability for tenants to be able to",
    "start": "2006580",
    "end": "2012279"
  },
  {
    "text": "host the I guess walls and binaries of each other's uh execution or logic that",
    "start": "2012279",
    "end": "2019299"
  },
  {
    "text": "way instead of something like a webhook model where you're like subscribing to uh events you actually are able to just",
    "start": "2019299",
    "end": "2027519"
  },
  {
    "text": "host or I guess produce messages directly to another tenants",
    "start": "2027519",
    "end": "2033580"
  },
  {
    "text": "um I guess binaries so you're talking about like you know you you have a webassembly module that's",
    "start": "2033580",
    "end": "2039760"
  },
  {
    "text": "kind of executing and sending messages to like uh other people who are also running on the platform yeah this is",
    "start": "2039760",
    "end": "2046059"
  },
  {
    "text": "something that we've talked about kind of from our roadmap from the beginning like we're running this thing on our platform everything needs to be denied",
    "start": "2046059",
    "end": "2051580"
  },
  {
    "text": "by default like none of that like communicating between we call it a constellation it's a segmented Network space that kind of communication needs",
    "start": "2051580",
    "end": "2058480"
  },
  {
    "text": "to be opt-in but we see really big benefits possible and like say you're in an organization and you have a platform",
    "start": "2058480",
    "end": "2064480"
  },
  {
    "text": "team platform team manages things like the connections to the databases the message cues they can deal with the",
    "start": "2064480",
    "end": "2070480"
  },
  {
    "text": "maintenance and upgrades instead of every application developer using it and then each application team would kind of",
    "start": "2070480",
    "end": "2076599"
  },
  {
    "text": "hook in to the platform Network space constellation so that the developers just deploy their logic and then they",
    "start": "2076599",
    "end": "2083260"
  },
  {
    "text": "can interface with the actual implementations the thing the platform team kind of puts on so we see a lot of",
    "start": "2083260",
    "end": "2088599"
  },
  {
    "text": "benefits coming from that because like we talk about separation of non-functional requirements into",
    "start": "2088599",
    "end": "2094118"
  },
  {
    "text": "capabilities that's like it's exactly I think log4j is a good example of this I know that this is probably overused at",
    "start": "2094119",
    "end": "2100480"
  },
  {
    "text": "this point but everyone's heard of it so it's kind of an easy analogy that one library is kind of copied across",
    "start": "2100480",
    "end": "2105760"
  },
  {
    "text": "thousands of different applications the idea with wasm cloud and cosmonic is that the distributed logging capability",
    "start": "2105760",
    "end": "2112420"
  },
  {
    "text": "provider would be managed by the platform team used by every application team but when vulnerability comes out",
    "start": "2112420",
    "end": "2118420"
  },
  {
    "text": "platform team updates that once everyone kind of gets that for free is that did that answer your question",
    "start": "2118420",
    "end": "2125920"
  },
  {
    "text": "nice and we are out of time let's uh give Brooks and Taylor one last round of",
    "start": "2125920",
    "end": "2131440"
  },
  {
    "text": "applause",
    "start": "2131440",
    "end": "2133800"
  }
]