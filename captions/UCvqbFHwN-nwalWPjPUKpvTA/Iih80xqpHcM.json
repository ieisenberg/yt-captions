[
  {
    "text": "today we're gonna be talking about front-end application deployment patterns there we go so I'm a product",
    "start": "30",
    "end": "16590"
  },
  {
    "text": "manager and product managers like to create customer personas these are the fictional characters we use to represent",
    "start": "16590",
    "end": "22470"
  },
  {
    "text": "different people or attributes of people they might be using a product or project now kubernetes is infrastructure",
    "start": "22470",
    "end": "29760"
  },
  {
    "text": "software created by infrastructure engineers for infrastructure engineers how the project started and looking",
    "start": "29760",
    "end": "37050"
  },
  {
    "text": "across the cribben ideas ecosystem this is code examples documentation so much effort is focused on the platform",
    "start": "37050",
    "end": "43260"
  },
  {
    "text": "engineers our back-end architects and like executive leadership dozens of",
    "start": "43260",
    "end": "53789"
  },
  {
    "text": "consulting engagements I found that web developers are often left to fend for themselves and figure out how to best",
    "start": "53789",
    "end": "60030"
  },
  {
    "text": "deploy their applications to CRO Nettie's and kubernetes is a powerful",
    "start": "60030",
    "end": "66299"
  },
  {
    "text": "deployment platform it allows complex workflows for shipping software one of the reasons that I love it but safely",
    "start": "66299",
    "end": "72720"
  },
  {
    "text": "managing these complex deployment patterns for front-end applications can be fraught with challenges so if you're",
    "start": "72720",
    "end": "78150"
  },
  {
    "text": "working with things like HTML CSS and JavaScript if you have streaming API to",
    "start": "78150",
    "end": "83369"
  },
  {
    "text": "your back-end applications that can get complex very quickly and one of the common issues that I've seen with web",
    "start": "83369",
    "end": "89549"
  },
  {
    "text": "developers when they're trying to run their applications is they'll start to do a deployment and deployments running",
    "start": "89549",
    "end": "94710"
  },
  {
    "text": "and all of a sudden they start seeing a whole bunch of four or four arrows or their get user reports saying that",
    "start": "94710",
    "end": "100590"
  },
  {
    "text": "they're having a bad experience I want to go click on a button and the button stopped working so my goal today is that",
    "start": "100590",
    "end": "106710"
  },
  {
    "text": "when you leave this presentation I'm hoping that you're equipped with a variety of strategies to deploy your front-end applications to kubernetes so",
    "start": "106710",
    "end": "115200"
  },
  {
    "text": "first let's look at some common criminals deployment patterns these are things that are built in or capable all through the communities API so when",
    "start": "115200",
    "end": "123960"
  },
  {
    "text": "you're looking to deploy the the sort of for common ways that I see people deploy software number one editing files in",
    "start": "123960",
    "end": "129270"
  },
  {
    "text": "production this is cloud native we're not doing that that's you do not have access to the file",
    "start": "129270",
    "end": "135670"
  },
  {
    "text": "system of your pods once they're running the other strategies are rolling update so rolling update allows you to ship",
    "start": "135670",
    "end": "142120"
  },
  {
    "text": "from one version to another in a gradual manner and this is great for minimizing",
    "start": "142120",
    "end": "147250"
  },
  {
    "text": "the amount of compute resources so CPU and memory that you need to have running to do your update you're sort of doing",
    "start": "147250",
    "end": "152350"
  },
  {
    "text": "an in-place upgrade one at a time but it does require that your application versions and API is our backwards",
    "start": "152350",
    "end": "159250"
  },
  {
    "text": "compatible so version two needs to look like version one and that means you have to do extra work for your applications",
    "start": "159250",
    "end": "164760"
  },
  {
    "text": "blue green or sometimes notice red black allows you to do an instantaneous switch",
    "start": "164760",
    "end": "170170"
  },
  {
    "text": "from one version to another this minimizes those version compatibility issues but it does require that you have",
    "start": "170170",
    "end": "177100"
  },
  {
    "text": "double your compute resources to have two versions of your software running at any given time so if you have a very",
    "start": "177100",
    "end": "182770"
  },
  {
    "text": "very large-scale application you're going to require a whole lot of extra compute to have two versions running at the same time you can switch between for",
    "start": "182770",
    "end": "190360"
  },
  {
    "text": "more advanced users once you've sort of master those first two you may also look and you may have heard of canary based",
    "start": "190360",
    "end": "195520"
  },
  {
    "text": "deployments and Canaries allow you to evaluate a new version of your application for a small subset of your",
    "start": "195520",
    "end": "201520"
  },
  {
    "text": "end-users so rather than doing rolling deployment or blue/green you pick 5% or",
    "start": "201520",
    "end": "206830"
  },
  {
    "text": "1% of your users and you send them to the new version when that new version with you're looking at your metrics you're looking at Google Analytics the",
    "start": "206830",
    "end": "213460"
  },
  {
    "text": "data looks good then you can complete your rollout now let's take a look at what these look like in Trinities so here's an example",
    "start": "213460",
    "end": "220420"
  },
  {
    "text": "rolling update I have a cloud load balancer that is pointing to a kerbin",
    "start": "220420",
    "end": "225490"
  },
  {
    "text": "any service the server is using a label selector app equals my app so any ponds",
    "start": "225490",
    "end": "232120"
  },
  {
    "text": "that have that label app equals my app will receive traffic through this service I have one large deployment",
    "start": "232120",
    "end": "238570"
  },
  {
    "text": "called my app and it's currently managing a replica set a replica set has",
    "start": "238570",
    "end": "244000"
  },
  {
    "text": "three pods you'll notice in red there's a pod template hash so replica sets and",
    "start": "244000",
    "end": "249730"
  },
  {
    "text": "deployments as they manage the different versions apply a hash to each replica set in those pods the blue part equals",
    "start": "249730",
    "end": "257230"
  },
  {
    "text": "my app tells me that this service will send traffic to all of those pods so when it comes time to a do a deployment",
    "start": "257230",
    "end": "263410"
  },
  {
    "text": "I can edit my deployment gamal so I can change my container image or change some other property of",
    "start": "263410",
    "end": "269250"
  },
  {
    "text": "that pod template in that deployment kubernetes will start a new replica set you'll notice that it still has a",
    "start": "269250",
    "end": "276719"
  },
  {
    "text": "people's my app but the pod hash is different so I've got different versions of my deployment template kubernetes",
    "start": "276719",
    "end": "285780"
  },
  {
    "text": "then scales up this new replica set once this new pod is up and running it takes down one no one and it does brings up a",
    "start": "285780",
    "end": "293310"
  },
  {
    "text": "new one raise that a little one this is a rolling to deployment eventually",
    "start": "293310",
    "end": "300000"
  },
  {
    "text": "kubernetes will remove that old replica set great and there's a couple of",
    "start": "300000",
    "end": "306990"
  },
  {
    "text": "different ways you can change the behavior so that's the default kubernetes role in deployment that I just showed you you have some controls",
    "start": "306990",
    "end": "313439"
  },
  {
    "text": "that you can modify so if you're using coop control you can use the coop control explain command to give you",
    "start": "313439",
    "end": "318629"
  },
  {
    "text": "information about the deployment spec strategy rolling update you also can go find the nice pretty criminais stocks",
    "start": "318629",
    "end": "325819"
  },
  {
    "text": "there's two knobs that you can tune the first is max search so max search",
    "start": "325819",
    "end": "331050"
  },
  {
    "text": "changes the it sets the maximum number of pods that can be scheduled when you",
    "start": "331050",
    "end": "336270"
  },
  {
    "text": "are scaling up or scaling a new version so max surge if you have max surge 3 in",
    "start": "336270",
    "end": "342210"
  },
  {
    "text": "our example before instead of doing bringing up one at a time of the new versions it'll bring up all three of my",
    "start": "342210",
    "end": "348240"
  },
  {
    "text": "new replica set as those pods become ready then my old ones will get curated",
    "start": "348240",
    "end": "353839"
  },
  {
    "text": "this can be a number of percentage I often set it to 100% if my applications are not too large like go ahead and",
    "start": "353839",
    "end": "359189"
  },
  {
    "text": "burst I've got capacity but if you have a large deployment you'll want to set it to a more reasonable number the other",
    "start": "359189",
    "end": "365189"
  },
  {
    "text": "knob you can tune is max unavailable so this changes the maximum number of pods that can be unavailable during the",
    "start": "365189",
    "end": "371699"
  },
  {
    "text": "update again a number or percentage I often set this to something around 70% because I usually have overhead spare",
    "start": "371699",
    "end": "378689"
  },
  {
    "text": "capacity when I have my number of pods running based on the amount of traffic that I expect to receive but this again",
    "start": "378689",
    "end": "385020"
  },
  {
    "text": "can be tuned based on your availability and performance requirements okay so",
    "start": "385020",
    "end": "390990"
  },
  {
    "text": "that's our rolling deployment how does this work for a web based app where you have multiple assets",
    "start": "390990",
    "end": "397950"
  },
  {
    "text": "so let's go back somewhere in the middle of that deployment process and see what the end user experience might be okay",
    "start": "397950",
    "end": "404820"
  },
  {
    "text": "we're in the middle we have two pods running the new version two pods running the old version here's our user they're",
    "start": "404820",
    "end": "412650"
  },
  {
    "text": "gonna make a request to index.html so the browser connects the cloud load balancer forwards the traffic to the",
    "start": "412650",
    "end": "418590"
  },
  {
    "text": "service and the service in our round robin fashion picks a pod to send traffic to so it's gonna get this end",
    "start": "418590",
    "end": "424860"
  },
  {
    "text": "users gonna get the contents from pod one index that HTML from pod one great",
    "start": "424860",
    "end": "430640"
  },
  {
    "text": "here's my index.html I'm referencing two external files main dot CSS and main dot",
    "start": "430640",
    "end": "437370"
  },
  {
    "text": "JavaScript the browser now needs to it reads through the Dom it recognizes it needs to download these external assets",
    "start": "437370",
    "end": "443580"
  },
  {
    "text": "it goes back to the cloud load balancer so it gets the main dot CSS version one",
    "start": "443580",
    "end": "449580"
  },
  {
    "text": "that's good comes back now we're gonna request main dot j/s huh version two",
    "start": "449580",
    "end": "458840"
  },
  {
    "text": "does my version two of main dot j/s correspond with the HTML contents I have",
    "start": "458840",
    "end": "464430"
  },
  {
    "text": "version one or my CSS maybe maybe not",
    "start": "464430",
    "end": "469610"
  },
  {
    "text": "this turns out to be a pretty big deal and so this is the common scenario that I see over and over again where people",
    "start": "469880",
    "end": "475860"
  },
  {
    "text": "are first deploying applications web-based applications they do the deployment and if it's just them testing",
    "start": "475860",
    "end": "481700"
  },
  {
    "text": "they see that problem sometimes but not always as you scale out if you have lots",
    "start": "481700",
    "end": "487740"
  },
  {
    "text": "and lots and lots of users requesting there's going to be some percentage of users that are gonna get broken pagelet may not be all of them but it may be",
    "start": "487740",
    "end": "494280"
  },
  {
    "text": "enough to cause problems let's look at the next strategy blue green so here I",
    "start": "494280",
    "end": "500850"
  },
  {
    "text": "have again my cloud load balancer I have my service my service now has to label",
    "start": "500850",
    "end": "507360"
  },
  {
    "text": "selectors first is app my app and also version blue so any pods that have both",
    "start": "507360",
    "end": "515340"
  },
  {
    "text": "of those sets of labels will then match so in this case on my left hand side I have my deployment blue at my amp",
    "start": "515340",
    "end": "522810"
  },
  {
    "text": "version blue so all traffic through the service is going to go flow to those pods my green pods have version green so",
    "start": "522810",
    "end": "530820"
  },
  {
    "text": "even though they match a people's myapp the version Green does not so they're not gonna receive traffic so if I want to do a Bluegreen",
    "start": "530820",
    "end": "538440"
  },
  {
    "text": "deployments all I'm going to be doing is changing my service label selectors change the version to green now all",
    "start": "538440",
    "end": "546300"
  },
  {
    "text": "traffic is instantaneously switched over to my green base deployment now inside",
    "start": "546300",
    "end": "552180"
  },
  {
    "text": "of each blue and green deployments you're probably still doing a Trinity's rolling deployment you don't have to but",
    "start": "552180",
    "end": "558180"
  },
  {
    "text": "that's the default you can pick and choose how you want to roll out those applications but your end-users are just",
    "start": "558180",
    "end": "563910"
  },
  {
    "text": "experiencing their Bluegreen switch so from a web development perspective this",
    "start": "563910",
    "end": "569550"
  },
  {
    "text": "is great I'll request either get version 1 or version 2 maybe there's a very",
    "start": "569550",
    "end": "575820"
  },
  {
    "text": "small percentage of people that just happen to be in the middle of that switch but because it's such an insane",
    "start": "575820",
    "end": "581339"
  },
  {
    "text": "eosin sent aeneas switch it's gonna be much much smaller than our rolling deployment which might take minutes or",
    "start": "581339",
    "end": "586589"
  },
  {
    "text": "hours depending on how long your web apps take to boot up but it is important",
    "start": "586589",
    "end": "592500"
  },
  {
    "text": "to recognize that you will need double the compute resources so if your application uses lots of CPU and lots of",
    "start": "592500",
    "end": "599070"
  },
  {
    "text": "memory this deployment strategies can require additional capacity to make sure that it can handle all these",
    "start": "599070",
    "end": "604140"
  },
  {
    "text": "applications that are running let's look at the last one the most advanced and my",
    "start": "604140",
    "end": "610470"
  },
  {
    "text": "recommendation don't get started with canary start with one or the other get comfortable kubernetes get",
    "start": "610470",
    "end": "616560"
  },
  {
    "text": "comfortable with understanding how your applications are gonna behave and a cloud native environment like kubernetes",
    "start": "616560",
    "end": "621720"
  },
  {
    "text": "once you've mastered that once you have monitoring tools then you can start to look at more advanced patterns so let's",
    "start": "621720",
    "end": "628110"
  },
  {
    "text": "look at can a canary base deployment again I've got my deployments table and you'll",
    "start": "628110",
    "end": "634170"
  },
  {
    "text": "notice that my service reference is just at my app when I want to start my canary",
    "start": "634170",
    "end": "640500"
  },
  {
    "text": "based deployment I'm gonna have another longer live deployment the same app",
    "start": "640500",
    "end": "646440"
  },
  {
    "text": "equals my app label applied so traffic from our service is going to go to both",
    "start": "646440",
    "end": "651660"
  },
  {
    "text": "sets of deployment pods but you'll notice that the versions are slightly different so what this means is that 1/4",
    "start": "651660",
    "end": "658290"
  },
  {
    "text": "of my requests are going to go to version 2 and the other 3 Foursquare",
    "start": "658290",
    "end": "663300"
  },
  {
    "text": "version 1 so this is good if I'm wanting to do an I want to try out a new version maybe I've made changes to my application to",
    "start": "663300",
    "end": "669540"
  },
  {
    "text": "add caching of my CSS and JavaScript contents inside my process instead of having to go to disk every time I could",
    "start": "669540",
    "end": "677009"
  },
  {
    "text": "test this by rolling out version to see the performance hopefully I'm seeing less CPU or maybe less disk i/o or the",
    "start": "677009",
    "end": "684300"
  },
  {
    "text": "latency requests are going down and if I'm happy with it if version 2 looks good then I can trigger a rolling",
    "start": "684300",
    "end": "690959"
  },
  {
    "text": "deployment of my stable deployment so to do that version 2 version 2 version 2",
    "start": "690959",
    "end": "698420"
  },
  {
    "text": "now the ratio here between the amount of traffic that goes to version 1 and version 2 is tied to the number of pods",
    "start": "698420",
    "end": "706649"
  },
  {
    "text": "that I have running in each category so if I want to have 10 to 1 I have to have 9 pods with 1 1 9 pods",
    "start": "706649",
    "end": "715709"
  },
  {
    "text": "running of the new version in one of the old that I want that type of ratio and that's what this looks like so if I want",
    "start": "715709",
    "end": "721709"
  },
  {
    "text": "to have more version 2 of my stable unless this becomes complex to manage like if I want to shift my ratios",
    "start": "721709",
    "end": "728310"
  },
  {
    "text": "dynamically it's not really very friendly way to do this if we go back to",
    "start": "728310",
    "end": "734850"
  },
  {
    "text": "our web development world this isn't good either on a consistent basis all of my users are gonna be getting some mix",
    "start": "734850",
    "end": "741480"
  },
  {
    "text": "of version 1 version 2 and you can even stagger you can have multiple Canary versions you can have stable beta and",
    "start": "741480",
    "end": "747269"
  },
  {
    "text": "alpha now your users are gonna see all sorts of craziness when it comes down time to page loads so quick deployment",
    "start": "747269",
    "end": "754380"
  },
  {
    "text": "recap rolling updates they require fewer computing resources it's the default for",
    "start": "754380",
    "end": "760319"
  },
  {
    "text": "a kubernetes deployment object but it does can lead to broken page loads and missing static assets blue/green",
    "start": "760319",
    "end": "766800"
  },
  {
    "text": "near-instantaneous which which is good that's we want from a web development perspective but it does require a lot",
    "start": "766800",
    "end": "772019"
  },
  {
    "text": "more compute resources finally canary it's great for validating changes but",
    "start": "772019",
    "end": "777569"
  },
  {
    "text": "again from a web development perspective broken page loads and we don't have a whole lot of flexibility on how we shift",
    "start": "777569",
    "end": "783540"
  },
  {
    "text": "traffic between those two all right so let's work through some possible",
    "start": "783540",
    "end": "789120"
  },
  {
    "text": "workarounds how to get around these things well number one you can just ignore your problems",
    "start": "789120",
    "end": "795060"
  },
  {
    "text": "if if your application is not used very",
    "start": "795060",
    "end": "800680"
  },
  {
    "text": "often if it's an internal app or it's something that people use on a periodic basis you can just roll it out and you",
    "start": "800680",
    "end": "805960"
  },
  {
    "text": "know some users have some broken page loads maybe that's okay look at your business requirements and",
    "start": "805960",
    "end": "811210"
  },
  {
    "text": "see if this is something you need more you can also have scheduled maintenance windows it's not very cloud native of us",
    "start": "811210",
    "end": "818670"
  },
  {
    "text": "we can do it my local bank does this every Sunday night from 6:00 until 10:00",
    "start": "818670",
    "end": "823720"
  },
  {
    "text": "I can't make any changes to my financial can see how much money I have but this is definitely an option so look at your",
    "start": "823720",
    "end": "830170"
  },
  {
    "text": "business requirements look to see how much availability you need to have how many deployments do you want to have if",
    "start": "830170",
    "end": "835450"
  },
  {
    "text": "you all as a web developer and like is we're moving towards this cloud native world we want to be able to deploy",
    "start": "835450",
    "end": "840480"
  },
  {
    "text": "continuously we want to make sure that we can roll out new versions as quickly as possible that's both to increase our",
    "start": "840480",
    "end": "846490"
  },
  {
    "text": "product development speed but also it allows us to make to fix things quicker",
    "start": "846490",
    "end": "852430"
  },
  {
    "text": "we roll something out that's wrong we can fix it quickly we also can leverage",
    "start": "852430",
    "end": "859420"
  },
  {
    "text": "content delivery networks so a CDN for those of you don't know we have there's",
    "start": "859420",
    "end": "864610"
  },
  {
    "text": "companies like a company or all the cloud providers have compute and network at the edge near regional network",
    "start": "864610",
    "end": "871210"
  },
  {
    "text": "connections and they basically can store your static assets for you so we go back to my index at HTML I can reference my",
    "start": "871210",
    "end": "878380"
  },
  {
    "text": "CSS and JavaScript using in this case I'm using s3 as a bucket store to hold this what's nice about this is that my",
    "start": "878380",
    "end": "886210"
  },
  {
    "text": "abuser is still going to make a request for index.html their browser is going to download this and then go to s3 to get",
    "start": "886210",
    "end": "892720"
  },
  {
    "text": "the additional static contents you also note that I'm versioning so my index",
    "start": "892720",
    "end": "897790"
  },
  {
    "text": "that HTML references the appropriate versions of my static assets if I want",
    "start": "897790",
    "end": "903070"
  },
  {
    "text": "to roll out a new version of my software I'm gonna bump the version to version 3 version 4 probably more likely a better",
    "start": "903070",
    "end": "909640"
  },
  {
    "text": "way of doing that instead of having static versions have it tied to a get shop so when you do a check in of your",
    "start": "909640",
    "end": "915910"
  },
  {
    "text": "source code you're gonna have a unique ID that represents that particular commit as part of your build process",
    "start": "915910",
    "end": "921640"
  },
  {
    "text": "take that and inject that into your path so your browser will always be the",
    "start": "921640",
    "end": "926920"
  },
  {
    "text": "browser's will be making requests to the appropriate version another thing",
    "start": "926920",
    "end": "932260"
  },
  {
    "text": "we can do with kubernetes services is we can leverage session affinity or sticky sessions in the service object you can",
    "start": "932260",
    "end": "939250"
  },
  {
    "text": "add the session affinity flag there's there's two options none which means just round-robin send it to the next one",
    "start": "939250",
    "end": "945790"
  },
  {
    "text": "or client IP but what client IP is that my end user has this 128 to my cloud",
    "start": "945790",
    "end": "955270"
  },
  {
    "text": "load balancer has got a 10.1.1.1 just client IP in this case mean it actually",
    "start": "955270",
    "end": "961030"
  },
  {
    "text": "means that client that cloud load balancer not my end user and as it turns",
    "start": "961030",
    "end": "969910"
  },
  {
    "text": "out not all cloud pilot load balancers support passing through that client IP",
    "start": "969910",
    "end": "975190"
  },
  {
    "text": "so there are ways to do that Google for example a Google cloud load balancer does work with session affinity to pass",
    "start": "975190",
    "end": "981490"
  },
  {
    "text": "through their layer 4 load balancers yell B does not so just something to be aware of we also go leverage something",
    "start": "981490",
    "end": "989800"
  },
  {
    "text": "like HTTP 2 so HTTP 1.1 is usually the current standard HTTP 2 has been out for",
    "start": "989800",
    "end": "997240"
  },
  {
    "text": "a while for many years and all the major browsers support this what's nice about this is the browser creates a single",
    "start": "997240",
    "end": "1003770"
  },
  {
    "text": "multiplexed connection so it opens one TCP connection through that cloud load balancer through the service to a pod",
    "start": "1003770",
    "end": "1009870"
  },
  {
    "text": "and all additional requests for CSS HTML Javascript images everything flows",
    "start": "1009870",
    "end": "1015060"
  },
  {
    "text": "through that pipe which means we don't have to worry about the sticky session problem anymore it also has some",
    "start": "1015060",
    "end": "1021420"
  },
  {
    "text": "additional benefits it's a binary protocol so there's less overhead from HTTP 1 and because everything goes",
    "start": "1021420",
    "end": "1027540"
  },
  {
    "text": "through the same pipe the this reduced round-trip time of like having to make multiple and open multiple different",
    "start": "1027540",
    "end": "1033900"
  },
  {
    "text": "connections so this is good too especially for mobile mobile apps or mobile web websites but one thing to be",
    "start": "1033900",
    "end": "1040709"
  },
  {
    "text": "in mind keep in mind is every time you want to deploy a new application you're gonna have to create a new service and",
    "start": "1040710",
    "end": "1046500"
  },
  {
    "text": "that services can have a cloud load balancer and it turns out the load balancers are expensive especially if",
    "start": "1046500",
    "end": "1053460"
  },
  {
    "text": "you have lots and lots and lots of applications thankfully there's a way to avoid the sprawl of load balancer and",
    "start": "1053460",
    "end": "1060540"
  },
  {
    "text": "that's true Burnett ease ingress Ingres provides us a way to route requests to services based on the",
    "start": "1060540",
    "end": "1067340"
  },
  {
    "text": "requested host so WWWF do comm or path yep do comm kept you calm slash blog",
    "start": "1067340",
    "end": "1078700"
  },
  {
    "text": "this is layer seven load balancing so kubernetes services operate at layer",
    "start": "1084340",
    "end": "1089419"
  },
  {
    "text": "4 layer seven or HTTP HTTP load balancing what ingress provides so what",
    "start": "1089419",
    "end": "1096289"
  },
  {
    "text": "does this look like so inside our criminales cluster we deploy this ingress controller there's",
    "start": "1096289",
    "end": "1101360"
  },
  {
    "text": "two pieces one is the thing that's doing the load balancing so this might be nginx rh8 proxy",
    "start": "1101360",
    "end": "1106539"
  },
  {
    "text": "the other is the controller what the controller is doing is talking to the",
    "start": "1106539",
    "end": "1111980"
  },
  {
    "text": "criminate api server and it's monitoring all of your services it's monitoring all of your pods and endpoints and it's also",
    "start": "1111980",
    "end": "1119299"
  },
  {
    "text": "monitoring the ingress objects that describe this configuration so we now",
    "start": "1119299",
    "end": "1124520"
  },
  {
    "text": "can route traffic to many services all through a single cloud load balancer and",
    "start": "1124520",
    "end": "1132620"
  },
  {
    "text": "there's a lot of ingress controllers are just great so nginx by far I think is the most",
    "start": "1132620",
    "end": "1137659"
  },
  {
    "text": "popular kept EO contour is one that we've built and there's also traffic a lot of the cloud providers have their",
    "start": "1137659",
    "end": "1143240"
  },
  {
    "text": "own there's also ones for for on Prem installation as well I want talk quickly",
    "start": "1143240",
    "end": "1148610"
  },
  {
    "text": "about hep to you contour so we built this in partnership with Yahoo Japan corporation subsidiary ectopy o so",
    "start": "1148610",
    "end": "1154520"
  },
  {
    "text": "they're the group that's responsible for the cloud native vacation of Yahoo Japan",
    "start": "1154520",
    "end": "1159850"
  },
  {
    "text": "contour uses envoy as the data plane so envoy is the load balancing service",
    "start": "1159850",
    "end": "1166520"
  },
  {
    "text": "proxy that was built by lift so lift the ride hail ride hailing app all over",
    "start": "1166520",
    "end": "1172370"
  },
  {
    "text": "their traffic runs through envoy and the hep to contour dynamically updates envoy without dropping any connections which",
    "start": "1172370",
    "end": "1178820"
  },
  {
    "text": "is can be a problem with some controllers and we've also done extensive performance testing to to",
    "start": "1178820",
    "end": "1183890"
  },
  {
    "text": "millions of concurrent connections and actually there's two other talks this week on contour and gimbal which is its",
    "start": "1183890",
    "end": "1189650"
  },
  {
    "text": "sister project Yahoo Japan is doing a talk on Thursday morning on their production use cases of gimbal ink on",
    "start": "1189650",
    "end": "1195580"
  },
  {
    "text": "and then my coworker Alex brand is doing a talk on the performance testing that we've done in partnership with them and",
    "start": "1195580",
    "end": "1201580"
  },
  {
    "text": "that is also on Thursday afternoon you'll find me there but there are some",
    "start": "1201580",
    "end": "1208030"
  },
  {
    "text": "downsides of the ingress API so there's you're only allowed to have one service per path so heftier comm slash blog can",
    "start": "1208030",
    "end": "1215560"
  },
  {
    "text": "only go to one service I can't have multiple service to send traffic to I can't do weight shifting so I can't send",
    "start": "1215560",
    "end": "1222400"
  },
  {
    "text": "10% of traffic here and 80% of here I can't do HTTP HTTP redirect it's also",
    "start": "1222400",
    "end": "1228160"
  },
  {
    "text": "really not safe for multi team use and there's some other problems and this is a long-standing issue in the Korean community I know that it was discussed",
    "start": "1228160",
    "end": "1234760"
  },
  {
    "text": "yesterday and a contributor summit it's talked about in the sig network which is the group that oversees networking and",
    "start": "1234760",
    "end": "1240820"
  },
  {
    "text": "ingress it communities and we're trying to figure out how to best solve this in the meantime what we did with hefty o",
    "start": "1240820",
    "end": "1246460"
  },
  {
    "text": "contour is recruited a new custom resource definition this allows us to describe routing rules in a multi team",
    "start": "1246460",
    "end": "1253420"
  },
  {
    "text": "world and we're able to provide some of these native extensions the complete Doc's can be found in the contour repo",
    "start": "1253420",
    "end": "1260050"
  },
  {
    "text": "but I want to quickly through talk through what this yamo looks like so the first piece is we have our API version",
    "start": "1260050",
    "end": "1266650"
  },
  {
    "text": "so it's a custom resource contoured at Hefner comm /v 1 beta 1 is a beta API we",
    "start": "1266650",
    "end": "1271960"
  },
  {
    "text": "are looking to roll this out to stable soon ingress route is the kind and as",
    "start": "1271960",
    "end": "1277540"
  },
  {
    "text": "with all criminals objects we have to have a metadata dot name we also define",
    "start": "1277540",
    "end": "1283570"
  },
  {
    "text": "the virtual host so this is the domain or subdomain that I'm gonna get except",
    "start": "1283570",
    "end": "1288880"
  },
  {
    "text": "traffic for I'm going to configure envoy to listen for this traffic and then I'm gonna match based on a path so in this",
    "start": "1288880",
    "end": "1296350"
  },
  {
    "text": "case I'm just using a forward slash so that means all requests with any path it's going to be sent to the service",
    "start": "1296350",
    "end": "1302650"
  },
  {
    "text": "called hefty a website on port 80 and so",
    "start": "1302650",
    "end": "1308650"
  },
  {
    "text": "this means from a crewmen eyes deployment perspective if the deployment that is backing this service called hep",
    "start": "1308650",
    "end": "1314500"
  },
  {
    "text": "Tia website does a role in deployment we've got a rolling deployment we still have all the same problems that we",
    "start": "1314500",
    "end": "1319630"
  },
  {
    "text": "talked about earlier for web apps but we get rolling deployments for free through communities we also can do blue green",
    "start": "1319630",
    "end": "1327070"
  },
  {
    "text": "deploys at this layer so I can instead of switching between two different services through a higher",
    "start": "1327070",
    "end": "1335799"
  },
  {
    "text": "level I can do it through the ingress API any grocer out so here I have my service called hep Tia website green if",
    "start": "1335799",
    "end": "1342370"
  },
  {
    "text": "I update that to hep to our website blue all traffic is gonna immediately switch",
    "start": "1342370",
    "end": "1347980"
  },
  {
    "text": "over to this other service we also can define multiple up streams so if I want",
    "start": "1347980",
    "end": "1355539"
  },
  {
    "text": "to have two versions of my application I can have two terms in two different services but it really gets interesting",
    "start": "1355539",
    "end": "1360580"
  },
  {
    "text": "when we start applying weights so we can apply a weight for hemp tea a website version one where ninety percent of my",
    "start": "1360580",
    "end": "1366610"
  },
  {
    "text": "traffic goes to version 1 10 percent goes to version 2 you can adjust those dynamically and it's regardless of how",
    "start": "1366610",
    "end": "1373630"
  },
  {
    "text": "many pods you have physically running so it gives us much more flexibility on quickly shifting the amount of traffic",
    "start": "1373630",
    "end": "1379840"
  },
  {
    "text": "between one service or another and",
    "start": "1379840",
    "end": "1384940"
  },
  {
    "text": "within gross we also can do things like version routes so if I configure my application to serve traffic on version",
    "start": "1384940",
    "end": "1392320"
  },
  {
    "text": "1 versus version 2 I configure my ingress so any requests come to static",
    "start": "1392320",
    "end": "1397840"
  },
  {
    "text": "/v one are going to go to my app version one if I configure version two all",
    "start": "1397840",
    "end": "1403419"
  },
  {
    "text": "traffic is going to go there and there's also ingress session affinity so we",
    "start": "1403419",
    "end": "1409270"
  },
  {
    "text": "still have to worry about the session affinity aspect there's a couple of different ways that you can do session",
    "start": "1409270",
    "end": "1414970"
  },
  {
    "text": "if any with layer 7 the first is using cookies so what the load of a proxy in",
    "start": "1414970",
    "end": "1420820"
  },
  {
    "text": "this case on Boyd can do or nginx is every time a request comes in as it's",
    "start": "1420820",
    "end": "1426010"
  },
  {
    "text": "going on its way back out it injects a header and that header is then gonna be",
    "start": "1426010",
    "end": "1431289"
  },
  {
    "text": "reused by the browser and that header is going to identify which location to send that pod send that traffic to which pod",
    "start": "1431289",
    "end": "1438250"
  },
  {
    "text": "to send to on subsequent requests similarly this can be done with a header and then we also can look at the source",
    "start": "1438250",
    "end": "1445419"
  },
  {
    "text": "IP hash so depending on how your cloud load balancer is configured if you have access to the end client IP this is",
    "start": "1445419",
    "end": "1452260"
  },
  {
    "text": "something else that we can use to shift that traffic now we don't support this yet in ingress route it's on the roadmap",
    "start": "1452260",
    "end": "1458080"
  },
  {
    "text": "it's something that I'm hoping we're going to have in the first quarter of next year if you are using",
    "start": "1458080",
    "end": "1463210"
  },
  {
    "text": "the rest controller they can do this through an annotation they have a whole lot of annotations that do crazy things but the nginx ingress that kerbin ideas",
    "start": "1463210",
    "end": "1472330"
  },
  {
    "text": "at i/o slash affinity believe there's one option which is cookie based routing",
    "start": "1472330",
    "end": "1477480"
  },
  {
    "text": "okay so pulling it all together so you need to choose your rolling your",
    "start": "1477480",
    "end": "1482529"
  },
  {
    "text": "strategy for getting the software out rolling versus blue green versus canary rolling comes for free you get that with",
    "start": "1482529",
    "end": "1489010"
  },
  {
    "text": "the kubernetes deployment object it's probably a great way to roll our software out with the deployments blue",
    "start": "1489010",
    "end": "1494080"
  },
  {
    "text": "green is great from a web development perspective but it does require additional compute resources so be",
    "start": "1494080",
    "end": "1500110"
  },
  {
    "text": "thinking about how much CPU memory opportunities you need how many incoming requests do you have maybe you can",
    "start": "1500110",
    "end": "1505539"
  },
  {
    "text": "schedule that rolling deployment at times or smaller windows you can leverage HTTP 2 and/or session affinity",
    "start": "1505539",
    "end": "1512799"
  },
  {
    "text": "to help make sure that you are end-users consistently have a great web experience",
    "start": "1512799",
    "end": "1518399"
  },
  {
    "text": "it's important to make sure that you know what your cloud providers support read the docs and unfortunately",
    "start": "1518399",
    "end": "1524049"
  },
  {
    "text": "sometimes you will also have to read the kubernetes code sorry about that we're trying to make that better",
    "start": "1524049",
    "end": "1530399"
  },
  {
    "text": "versioning your static assets via CDN is a great thing I highly encourage you to do that and then definitely look to use",
    "start": "1530399",
    "end": "1537669"
  },
  {
    "text": "kubernetes ingress preferably hep do contour thank you",
    "start": "1537669",
    "end": "1544649"
  },
  {
    "text": "and I have some time for questions I also want to point out that I'm around all week if you want to talk about any",
    "start": "1550070",
    "end": "1555960"
  },
  {
    "text": "of hep-v OHS open-source projects or you want to see some of the cool stuff that we are building stop by our booth at p8",
    "start": "1555960",
    "end": "1562529"
  },
  {
    "text": "when the main exhibit hall and we're hiring questions yes sir",
    "start": "1562529",
    "end": "1575719"
  },
  {
    "text": "we had a canary deployment and we had a discussion about what happens at the end of the appointment during the deployment",
    "start": "1586589",
    "end": "1592969"
  },
  {
    "text": "10% goes to canary 92 all production and then there were two options either can",
    "start": "1592969",
    "end": "1600479"
  },
  {
    "text": "IRA get 0% and production with the new version gets all the traffic and second option was that split is still there the",
    "start": "1600479",
    "end": "1607710"
  },
  {
    "text": "traffic is still split into Canadian production but both of them would have the option to at the end so what is the",
    "start": "1607710",
    "end": "1613440"
  },
  {
    "text": "advantages disadvantages of the recommendations it's a good question",
    "start": "1613440",
    "end": "1619700"
  },
  {
    "text": "probably depends on how you're calculating the amount of workload you",
    "start": "1620809",
    "end": "1625859"
  },
  {
    "text": "you need so the sort of gets into the talk just you know before me about performance testing so if you know your",
    "start": "1625859",
    "end": "1631320"
  },
  {
    "text": "production workload is scaled based on known constraints then you'll want to make sure that then you don't need the",
    "start": "1631320",
    "end": "1637799"
  },
  {
    "text": "canary alright so if you if you know that you need to have 10 pods running in order to handle all of your potential",
    "start": "1637799",
    "end": "1643019"
  },
  {
    "text": "workload then at some point the sum of the two needs to make sure you always count the ten in terms of ease of use",
    "start": "1643019",
    "end": "1649460"
  },
  {
    "text": "it's probably pretty similar i I think I don't think there's gonna be a huge impact between those two things good",
    "start": "1649460",
    "end": "1656099"
  },
  {
    "text": "question other questions yeah great",
    "start": "1656099",
    "end": "1661630"
  },
  {
    "text": "[Music] there's no silly questions okay say",
    "start": "1662490",
    "end": "1669950"
  },
  {
    "text": "you're doing canary and you have you don't have sticky sections so how do you control the user flow you want you want",
    "start": "1669950",
    "end": "1677780"
  },
  {
    "text": "the same users to get the 10% so no sticky sessions but you want to use",
    "start": "1677780",
    "end": "1683150"
  },
  {
    "text": "canary yeah my recommendation would be to leverage if you can HTTP to will help",
    "start": "1683150",
    "end": "1689210"
  },
  {
    "text": "with a lot of that I had that in here somewhere so HTTP 2 is the something",
    "start": "1689210",
    "end": "1695780"
  },
  {
    "text": "you'll your load balancer and your ingress controller will need to be configured but basically what happens is",
    "start": "1695780",
    "end": "1701120"
  },
  {
    "text": "when the browser makes a request it opens up an HTTP 2 connection and all",
    "start": "1701120",
    "end": "1706460"
  },
  {
    "text": "requests go through that same connection instead of opening up four or five or six different connections to download",
    "start": "1706460",
    "end": "1711680"
  },
  {
    "text": "assets everything gets multiplex through a single TCP connection so that way you can get the good user experience while",
    "start": "1711680",
    "end": "1719120"
  },
  {
    "text": "still having Canaries without sticky sessions we just switched to spinnaker",
    "start": "1719120",
    "end": "1731990"
  },
  {
    "text": "recently so I'm just curious about how does this differ versus you know doing blue green or red black is well called",
    "start": "1731990",
    "end": "1739130"
  },
  {
    "text": "in spinnaker I guess so I haven't actually played with spinnaker yet it's on my like holiday to play with list I",
    "start": "1739130",
    "end": "1745450"
  },
  {
    "text": "if someone else in the audience so I believe most of the skies TV systems are focused on just getting our software out",
    "start": "1745450",
    "end": "1751130"
  },
  {
    "text": "and not necessarily worrying about shifting traffic but maybe spinnaker",
    "start": "1751130",
    "end": "1756170"
  },
  {
    "text": "does make modifications somehow do you know does anybody know to spinnaker make modification it does",
    "start": "1756170",
    "end": "1763720"
  },
  {
    "text": "cool apparently you can do exactly what you just talked about with spinnaker so if you're on the spinnaker bandwagon",
    "start": "1764380",
    "end": "1769460"
  },
  {
    "text": "sweet any other questions",
    "start": "1769460",
    "end": "1774490"
  },
  {
    "text": "there's one over there Nicholas on the right yeah on the right sir do you have",
    "start": "1774490",
    "end": "1784629"
  },
  {
    "text": "any good general patterns for doing a canary type release but tying automation",
    "start": "1784629",
    "end": "1791200"
  },
  {
    "text": "like automated tests into that it's supposed to look at monitoring in the net and the manually roll back your",
    "start": "1791200",
    "end": "1796210"
  },
  {
    "text": "release what is it flaca",
    "start": "1796210",
    "end": "1802960"
  },
  {
    "text": "Oh a flag and then probably something like flag is a project called flag that",
    "start": "1802960",
    "end": "1807970"
  },
  {
    "text": "maybe does that I also know that in Stannah which is a monitoring company just made an announcement with top U and",
    "start": "1807970",
    "end": "1814869"
  },
  {
    "text": "Yahoo Japan that they're looking on building on top of contour and gimbal to add to build things like that I don't",
    "start": "1814869",
    "end": "1819909"
  },
  {
    "text": "know any other ones off the top of my head and I think most the time people are building their own things anything",
    "start": "1819909",
    "end": "1827139"
  },
  {
    "text": "else all right well I'll be up here if you have additional questions enjoy the",
    "start": "1827139",
    "end": "1832539"
  },
  {
    "text": "rest of Cuba [Applause]",
    "start": "1832539",
    "end": "1836460"
  }
]