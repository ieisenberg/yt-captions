[
  {
    "text": "hello everyone uh thank you so much for joining us today uh I hope everyone's been having a great cubec con so far uh",
    "start": "240",
    "end": "6560"
  },
  {
    "text": "my name is Karen tal I work on the compute infrastructure team at Reddit and my name is Harvey Shaw and I also",
    "start": "6560",
    "end": "12639"
  },
  {
    "text": "work on the compute infrastructure team uh before I get into the talk I just want to know the slides have been",
    "start": "12639",
    "end": "17720"
  },
  {
    "text": "uploaded so in case anybody wants to follow along that way too so today we're going to dive into a retrospective about",
    "start": "17720",
    "end": "24439"
  },
  {
    "text": "how Reddit infrastructure has evolved over the past few years by particularly leaning into um platform abstractions",
    "start": "24439",
    "end": "31000"
  },
  {
    "text": "and automation backed by a kubernetes control plane a quick overview for the agenda for today we're going to start this off",
    "start": "31000",
    "end": "37360"
  },
  {
    "text": "by talking about the state of Reddit infrastructure back in 2022 which prompted most of this investment we're",
    "start": "37360",
    "end": "43719"
  },
  {
    "text": "going to then dive into the foundational principles that we use to build our platform what we learned from it what",
    "start": "43719",
    "end": "49760"
  },
  {
    "text": "hopefully you can take away and kind of where we're headed we should have time for questions towards the end of it but",
    "start": "49760",
    "end": "55320"
  },
  {
    "text": "in case we don't have time both Harvey and I will hang around in the hallway in case anybody wants to like chat",
    "start": "55320",
    "end": "61920"
  },
  {
    "text": "so before I get into the kind of the meat of the talk I want to pitch a thesis statement so um it toes just help",
    "start": "62120",
    "end": "68840"
  },
  {
    "text": "connect the content together we believe that when companies reach a certain maturity they need platform abstractions",
    "start": "68840",
    "end": "75040"
  },
  {
    "text": "to grow efficiently especially as they grow sorry operate efficiently especially as they grow and Reddit was",
    "start": "75040",
    "end": "80880"
  },
  {
    "text": "at this inflection point in 2022 so throughout 2022 it was a big",
    "start": "80880",
    "end": "87920"
  },
  {
    "text": "change for reddit reddit was growing quite significantly internally as an organization and externally as a product",
    "start": "87920",
    "end": "93799"
  },
  {
    "text": "we're working towards an IPO uh and starting to expand our serving stack to be multi-regional with the end goal of",
    "start": "93799",
    "end": "100280"
  },
  {
    "text": "being Global expansion the global expansion was both for better resiliency and reliability but also to improve the",
    "start": "100280",
    "end": "107159"
  },
  {
    "text": "user experience for our International users um the we were also investing",
    "start": "107159",
    "end": "112880"
  },
  {
    "text": "pretty heavily into our ads in ml stack and continue to do so today which is a pretty common theme across the rest of",
    "start": "112880",
    "end": "118119"
  },
  {
    "text": "the tech industry as well and this came with an own set of scaling challenges we ended 2022 with about a 7",
    "start": "118119",
    "end": "124600"
  },
  {
    "text": "to1 ratio of application Engineers to infrastructure engineers and we started 2022 and ended the year with about 20",
    "start": "124600",
    "end": "131520"
  },
  {
    "text": "kubernetes clusters all largely unique but all in the same cloud in same",
    "start": "131520",
    "end": "137640"
  },
  {
    "text": "region in order to understand the pitfalls of our infrastructure or Legacy infrastructure I want to use the most",
    "start": "137640",
    "end": "143519"
  },
  {
    "text": "basic examples and this is a namespace every application at Reddit like most",
    "start": "143519",
    "end": "148720"
  },
  {
    "text": "companies needs a name space to run in in kubernetes so I'm going to take on the Persona of an app engineer for me to",
    "start": "148720",
    "end": "155480"
  },
  {
    "text": "especially start a new application the first process was creating a name space",
    "start": "155480",
    "end": "160599"
  },
  {
    "text": "I had to either pick between a Helm chart or a customization file but app engineers at readit are not expected to",
    "start": "160599",
    "end": "166080"
  },
  {
    "text": "be kubernetes experts this meant all of this tooling is extremely complex and unfamiliar and not part of the",
    "start": "166080",
    "end": "171800"
  },
  {
    "text": "day-to-day and it's usually toil some for them so usually a poll request would come up most of it copy pasted from",
    "start": "171800",
    "end": "178440"
  },
  {
    "text": "different parts or cargo cult it and this eventually would get then get blocked by an infrastructure engineer",
    "start": "178440",
    "end": "183760"
  },
  {
    "text": "review due to our SLA this could take up to 24 hours since most of these reviews were manual often we would like let bugs",
    "start": "183760",
    "end": "191040"
  },
  {
    "text": "through which would cause a failure in deploys none of the abstraction none of this complexity was abstracted away from",
    "start": "191040",
    "end": "197519"
  },
  {
    "text": "the user which meant if CI failed this would require an app engineer again H sorry infrastructure engineer again to",
    "start": "197519",
    "end": "202640"
  },
  {
    "text": "help debug it and this entire process would start all over again so a namespace could take almost an entire",
    "start": "202640",
    "end": "208200"
  },
  {
    "text": "week just to get a namespace out because of time zones and differences here this led to huge inconsistencies of how Nam",
    "start": "208200",
    "end": "214840"
  },
  {
    "text": "spaces were managed across kuber or Reddit and we couldn't ever reason about",
    "start": "214840",
    "end": "221159"
  },
  {
    "text": "what the source of the namespace whether it was actually being used or not which led to us having to disable all destructive actions on Nam spaces",
    "start": "221159",
    "end": "227480"
  },
  {
    "text": "because they were dangerous especially in an automated fashion this led to a lot of cruff being left behind as we",
    "start": "227480",
    "end": "233159"
  },
  {
    "text": "migrated from monolithic applications to smaller and smaller microservices besides just being annoying or an",
    "start": "233159",
    "end": "238760"
  },
  {
    "text": "incident making it harder reason about these name spaces it also just added cost since a lot of these resources kind",
    "start": "238760",
    "end": "244400"
  },
  {
    "text": "of kept running in kubernetes despite the applications being dead I'm going to hand this over to Harvey to talk more about our Legacy kubernetes",
    "start": "244400",
    "end": "251519"
  },
  {
    "text": "clusters so uh the world was painful for infrastructure Engineers as well um the",
    "start": "251519",
    "end": "257000"
  },
  {
    "text": "screenshots on this slide show our documentation for creating a new opinionated kubernetes cluster it",
    "start": "257000",
    "end": "263400"
  },
  {
    "text": "includes configuring the network provisioning Hardware from cloud vendors installing the control plane and",
    "start": "263400",
    "end": "269199"
  },
  {
    "text": "installing over 20 cluster add-ons like Prometheus and cluster autoscaler uh this monster of a",
    "start": "269199",
    "end": "275199"
  },
  {
    "text": "procedure is over a 100 steps long it takes our most experienced Engineers over 30 active hours to complete and",
    "start": "275199",
    "end": "282080"
  },
  {
    "text": "that usually translates to about a week's worth of wall time when you factor in PR reviews and the small mistakes that invariably",
    "start": "282080",
    "end": "288639"
  },
  {
    "text": "occur we upgraded our clusters by manually invoking Cube ADM on existing",
    "start": "288639",
    "end": "293960"
  },
  {
    "text": "control plan machines uh somewhat dangerous practice and decommissioning these clusters had no standard procedure",
    "start": "293960",
    "end": "300440"
  },
  {
    "text": "because over time our clusters had drifted and become specialized and bespoke undocumented sometimes",
    "start": "300440",
    "end": "307120"
  },
  {
    "text": "uncodified ways so to decommission a cluster entirely you would take an engineer uh an expensive archaeology",
    "start": "307120",
    "end": "314000"
  },
  {
    "text": "hunt to find all of the different infrastructure they have to decommission um why did our clusters",
    "start": "314000",
    "end": "319960"
  },
  {
    "text": "become so specialized one primary reason was we had no good way to manage configuration across the fleet the anti",
    "start": "319960",
    "end": "327240"
  },
  {
    "text": "pattern that we fell back on was to copy and P case to manifest once per cluster",
    "start": "327240",
    "end": "332360"
  },
  {
    "text": "and you can imagine that these would then drift over time sometimes they drifted so much that",
    "start": "332360",
    "end": "338080"
  },
  {
    "text": "we call the infrastructure haunted and by that we mean it's very hard for any",
    "start": "338080",
    "end": "343120"
  },
  {
    "text": "engineer to reason with confidence about how the cluster ought to behave or does behave making all life cycle operations",
    "start": "343120",
    "end": "350000"
  },
  {
    "text": "extremely dangerous and uh we had a big outage on March uh March 14th of 2022",
    "start": "350000",
    "end": "355919"
  },
  {
    "text": "for this very reason when upgrading a core serving cluster so zooming out our infrastructure in",
    "start": "355919",
    "end": "362720"
  },
  {
    "text": "2022 was characterized by a self reinforcing cycle of",
    "start": "362720",
    "end": "367759"
  },
  {
    "text": "inefficiency we infrastructure Engineers tried our best to support application Engineers through expensive White Glove",
    "start": "367759",
    "end": "374840"
  },
  {
    "text": "processes um our own internal workflows were also mostly manual our",
    "start": "374840",
    "end": "380120"
  },
  {
    "text": "infrastructure lacked standardization to the point of being haunted but at the same time our company was growing",
    "start": "380120",
    "end": "386240"
  },
  {
    "text": "operating at high scale putting additional computational strain on to our machines and operational strain onto",
    "start": "386240",
    "end": "392319"
  },
  {
    "text": "our staff but because of how labor intensive our processes were our infrastructure engineering capacity was",
    "start": "392319",
    "end": "399319"
  },
  {
    "text": "dominated by keeping the lights on type work and the other portion of our time was spent fixing outages which uh in",
    "start": "399319",
    "end": "407280"
  },
  {
    "text": "total um put us in a reactive firefighting mindset that made it really",
    "start": "407280",
    "end": "412680"
  },
  {
    "text": "hard to imagine plan or build for a more sustainable future so how do we escape this",
    "start": "412680",
    "end": "421039"
  },
  {
    "text": "cycle we turn to the concept of platform abstractions what is a principal",
    "start": "421039",
    "end": "426560"
  },
  {
    "text": "platform abstraction an abstraction is something that hides underlying complexity and it separates the concerns",
    "start": "426560",
    "end": "432720"
  },
  {
    "text": "of the user from the concerns of the underlying implementation the sign of a good abstraction is if it's expressed in",
    "start": "432720",
    "end": "439960"
  },
  {
    "text": "Concepts or vocabulary that does not require the user to have knowledge of the underlying",
    "start": "439960",
    "end": "445800"
  },
  {
    "text": "domain uh by platform we mean a ecosyst system of composable tools that Empower",
    "start": "445800",
    "end": "451680"
  },
  {
    "text": "users to build off of the user experience of a platform is a first class concern it should be safe and",
    "start": "451680",
    "end": "458120"
  },
  {
    "text": "reliable free of foot guns and equipped with safeguards for known Corner cases and it should be",
    "start": "458120",
    "end": "463759"
  },
  {
    "text": "scalable we use the term principle to mean opinionated so um we have a",
    "start": "463759",
    "end": "469960"
  },
  {
    "text": "specific Target Persona in mind for who's using the tool and it's implemented using what the platform",
    "start": "469960",
    "end": "475120"
  },
  {
    "text": "authors deem to be best practices and all of this is context specific to your",
    "start": "475120",
    "end": "480280"
  },
  {
    "text": "company um we also use the term principle to imply standardized so every single problem has exactly one",
    "start": "480280",
    "end": "488400"
  },
  {
    "text": "solution we Implement these platform abstractions using declarative apis backed by kubernetes control processes",
    "start": "488840",
    "end": "495280"
  },
  {
    "text": "so the interfaces are defined as custom resources we follow standard kubernetes resource model conventions with the the",
    "start": "495280",
    "end": "502560"
  },
  {
    "text": "desired State and the spec and The observed State reported through the status these custom resources actuate",
    "start": "502560",
    "end": "508680"
  },
  {
    "text": "kubernetes control that Implement their apis by mutating the actual State towards the desired and the",
    "start": "508680",
    "end": "514560"
  },
  {
    "text": "implementations often involve orchestrating underlying software uh whether that be kubernetes native apis",
    "start": "514560",
    "end": "521000"
  },
  {
    "text": "like deployments and pods or thirdparty open source software which I'll talk more about in a few",
    "start": "521000",
    "end": "528240"
  },
  {
    "text": "slides first a quick detour you might wonder why we chose kubernetes controllers over traditional",
    "start": "528240",
    "end": "534600"
  },
  {
    "text": "infrastructure as code um there are trade-offs with each approach so with IAC uh has some strengths um there it's",
    "start": "534600",
    "end": "544240"
  },
  {
    "text": "a very cheap upfront engineering cost because you're not building it maintaining code um you have your",
    "start": "544240",
    "end": "549480"
  },
  {
    "text": "engineers write declarative config and they choose when to apply that change it's a very simple mental model as well",
    "start": "549480",
    "end": "555920"
  },
  {
    "text": "really easy to reason about it also gives your engineers a high degree of control there are some significant",
    "start": "555920",
    "end": "562200"
  },
  {
    "text": "shortcomings and keep in mind that I'm speaking uh in generalizations so not every Point May apply to particular IC",
    "start": "562200",
    "end": "569640"
  },
  {
    "text": "software but generally speaking I can't model arbitrary business logic with IAC",
    "start": "569640",
    "end": "575120"
  },
  {
    "text": "so for example I can't Model A workflow where I provision a TLS certificate from the CT Authority upload it to Amazon",
    "start": "575120",
    "end": "582040"
  },
  {
    "text": "certificate manager and then attach it to a load balancer I'd probably need a few steps in between I also can't easily",
    "start": "582040",
    "end": "588920"
  },
  {
    "text": "write code to fill in these business logic gaps because again generally speaking I is not programmatically",
    "start": "588920",
    "end": "595000"
  },
  {
    "text": "consumable which makes sense when you think that it's uh considering the fact that it's bill for human",
    "start": "595000",
    "end": "601040"
  },
  {
    "text": "operation I does not behave dynamically so in my example I can't rely on I to",
    "start": "601040",
    "end": "607440"
  },
  {
    "text": "automatically renew expiring certificates um outside of manual or",
    "start": "607440",
    "end": "612600"
  },
  {
    "text": "scheduled actuation it does not mutate the system uh we call this actuation",
    "start": "612600",
    "end": "617959"
  },
  {
    "text": "model fire and forget because it tends to uh result in state drifts which is undesirable because it increases the",
    "start": "617959",
    "end": "624360"
  },
  {
    "text": "likelihood that your system is in an incorrect state so we chose kubernetes control controllers because we wanted our",
    "start": "624360",
    "end": "630760"
  },
  {
    "text": "infrastructure to be self-healing we wanted the actual state to always match the intended state or at least uh uh be",
    "start": "630760",
    "end": "637839"
  },
  {
    "text": "consistent uh be be eventually consistent in matching the the intended State um we want our platform apis to be",
    "start": "637839",
    "end": "644600"
  },
  {
    "text": "extremely simple in configuration surface area but extremely powerful in functionality and this necessitates that",
    "start": "644600",
    "end": "651200"
  },
  {
    "text": "our authors have the ability to implement arbitrary logic uh including the full life cycle management from",
    "start": "651200",
    "end": "657320"
  },
  {
    "text": "creation through upgrades to decommissioning um and last but important point in the",
    "start": "657320",
    "end": "664839"
  },
  {
    "text": "case that we have Primitives that are reusable for other platforms we wanted these apis to be programmatically",
    "start": "664839",
    "end": "670839"
  },
  {
    "text": "consumable there are significant shortcomings or drawbacks uh this is a much more expensive engineering cost",
    "start": "670839",
    "end": "677320"
  },
  {
    "text": "because we're talking about building and maintaining production grate automation it's a lot harder than writing",
    "start": "677320",
    "end": "683680"
  },
  {
    "text": "I um there it's a much more complex mental model because these are continuously uating processes so",
    "start": "683680",
    "end": "690639"
  },
  {
    "text": "sometimes it can be hard to trace why a particular mutation was made at a given time and the last but most important",
    "start": "690639",
    "end": "697160"
  },
  {
    "text": "Point uh Haywire automation can do a lot more damage to your stack than a bad I",
    "start": "697160",
    "end": "703320"
  },
  {
    "text": "apply so that has to be kept in mind but on the whole we found this tradeoff to be uh worth",
    "start": "703320",
    "end": "709160"
  },
  {
    "text": "it so earlier I said that a big source of toil and complexity for our Engineers was managing configuration across the",
    "start": "709160",
    "end": "715639"
  },
  {
    "text": "fleet we solved this today with an approach that gives our Engineers single paint of glass control through",
    "start": "715639",
    "end": "721880"
  },
  {
    "text": "multicluster apis managed in a single place so there are two types of clusters in our Fleet there's the orchestration",
    "start": "721880",
    "end": "728560"
  },
  {
    "text": "cluster it's the brain it decides how every other cluster behaves and it generates configuration for them then we",
    "start": "728560",
    "end": "735399"
  },
  {
    "text": "have the workload clusters these are replaceable cattle that host our applications and they provide our company with a bulk of compute power",
    "start": "735399",
    "end": "742680"
  },
  {
    "text": "they pull their configuration from the orchestration cluster um so then on top of this",
    "start": "742680",
    "end": "747920"
  },
  {
    "text": "architecture we can build multicluster apis each of our workload clusters is backed by its own custom resource uh",
    "start": "747920",
    "end": "755279"
  },
  {
    "text": "these are labeled with properties like their operational phase if they testing staging or production clusters their",
    "start": "755279",
    "end": "761800"
  },
  {
    "text": "geographical region and their backing Cloud vendor then we have a federation crd that selects groups of these",
    "start": "761800",
    "end": "768160"
  },
  {
    "text": "clusters using kubernetes label selectors um and then the multicluster API bind to the Federation objects as a",
    "start": "768160",
    "end": "775040"
  },
  {
    "text": "way to express apply my configuration to this set of clusters so in this example on this slide we have a federation that",
    "start": "775040",
    "end": "782079"
  },
  {
    "text": "selects all of the test clusters and a multicluster name multicluster name",
    "start": "782079",
    "end": "787199"
  },
  {
    "text": "abstraction that applies uh kubernetes Nam space to each of these",
    "start": "787199",
    "end": "792240"
  },
  {
    "text": "clusters one of the most powerful properties of this approach is that the cluster targeting is dynamic so in this",
    "start": "792240",
    "end": "798440"
  },
  {
    "text": "example if I were to spin up a new cluster labeled with phase equals test that Nam space would automatically get",
    "start": "798440",
    "end": "804360"
  },
  {
    "text": "created inside of it um so this has saved our Engineers a ton of time and it means that we can stamp out new clusters",
    "start": "804360",
    "end": "811360"
  },
  {
    "text": "with well-defined properties and all of the applicable configuration automatically flows into that cluster",
    "start": "811360",
    "end": "816800"
  },
  {
    "text": "without additional manual work uh like with any centralized architecture this one carries some risk",
    "start": "816800",
    "end": "823279"
  },
  {
    "text": "namely that the orchestration cluster is a single point of failure um so far we've managed this risk by ensuring that",
    "start": "823279",
    "end": "829920"
  },
  {
    "text": "the system fails static meaning that if there's a network partition between the orc cluster and the workload clusters or",
    "start": "829920",
    "end": "836320"
  },
  {
    "text": "if the orchestration cluster goes hard down entirely all that happens is the workload clusters can't receive changes",
    "start": "836320",
    "end": "842680"
  },
  {
    "text": "to their configuration but because they've pulled a local copy of all of their directives they're able to",
    "start": "842680",
    "end": "848120"
  },
  {
    "text": "continually uh self-heal what they have uh quick note about third party",
    "start": "848120",
    "end": "854839"
  },
  {
    "text": "software so these three open source projects are foundational Primitives we",
    "start": "854839",
    "end": "859880"
  },
  {
    "text": "use flux CD for synchronization between Source control and our clusters it does",
    "start": "859880",
    "end": "865240"
  },
  {
    "text": "this in a self-healing fashion we use crossplane as a kubernetes API into Cloud vendor apis and that allows us to",
    "start": "865240",
    "end": "872240"
  },
  {
    "text": "orchestrate arbitrary Cloud resources and cluster API does the heavy lifting uh gives us a declarative API into the",
    "start": "872240",
    "end": "879240"
  },
  {
    "text": "management of control planes the note that I want to make here is we don't tightly couple to the apis of this",
    "start": "879240",
    "end": "885360"
  },
  {
    "text": "underlying software they are each intermediated by our own custom resources which act as API modes so if",
    "start": "885360",
    "end": "892279"
  },
  {
    "text": "we ever change our mind about the underlying implementation we want to swap projects or we want to implement",
    "start": "892279",
    "end": "897880"
  },
  {
    "text": "our own system we are free to do so without incurring a prohibitive migration",
    "start": "897880",
    "end": "903079"
  },
  {
    "text": "cost I'll pass this back to Kuran to talk about our new approach from for managing kubernetes name spaces thanks",
    "start": "903079",
    "end": "909120"
  },
  {
    "text": "Harry yeah so if you go back to what this actually looks like in the real world and we're going to revisit the 2K",
    "start": "909120",
    "end": "915040"
  },
  {
    "text": "studies we PRI had prior so kubernetes namespace again a core tenant of our",
    "start": "915040",
    "end": "920360"
  },
  {
    "text": "platform every application needs it now instead of needing to switch between Helm or customize a user simply has to",
    "start": "920360",
    "end": "926519"
  },
  {
    "text": "create a custom resource called Reddit namespace and Target it to a group of clusters",
    "start": "926519",
    "end": "932839"
  },
  {
    "text": "this is core to our multicluster platform as Harvey mentioned but it's also to Future proof ourselves so we",
    "start": "932839",
    "end": "938040"
  },
  {
    "text": "start thinking about these clusters as cattle not necessarily pets so in this case you can see the example under",
    "start": "938040",
    "end": "943839"
  },
  {
    "text": "Federation refs it targets all production clusters once this is applied to our orchestration cluster each worker",
    "start": "943839",
    "end": "950839"
  },
  {
    "text": "cluster that actually gets targeted by this namespace is able to pull a local copy of this and actuate on it to create",
    "start": "950839",
    "end": "957680"
  },
  {
    "text": "the name spaces arbitrary resources like arbac permissions that are required and we're also able to use this opportunity",
    "start": "957680",
    "end": "964000"
  },
  {
    "text": "to interact and integrate with either third party software like slack or pager duty to create automatic alerting um or",
    "start": "964000",
    "end": "971079"
  },
  {
    "text": "our internal deploy system to create the correct permissions the a couple things I want",
    "start": "971079",
    "end": "976319"
  },
  {
    "text": "to call out here for like the Simplicity and opinionated nature kubernetes arbac is super powerful but also extremely",
    "start": "976319",
    "end": "982480"
  },
  {
    "text": "complex for people who don't necessarily understand it in this situation a user doesn't have to know know what explicit",
    "start": "982480",
    "end": "989279"
  },
  {
    "text": "kubernetes resources they need access to upfront we only give them two real options they can either be an operator",
    "start": "989279",
    "end": "995560"
  },
  {
    "text": "which gives them read write access or a reader which gives them readon access this helps the user from abstracting",
    "start": "995560",
    "end": "1001800"
  },
  {
    "text": "away the complexity but it's also helped our infrastructure teams to scope down these permissions to make sure we stay",
    "start": "1001800",
    "end": "1007240"
  },
  {
    "text": "secure and are compliant uh with all our requirements similarly to our uh",
    "start": "1007240",
    "end": "1014600"
  },
  {
    "text": "kubernetes clusters now instead of the 100 plus steps that we had to take man ually and would take a full week we make",
    "start": "1014600",
    "end": "1021199"
  },
  {
    "text": "a couple of pill requests with a redit cluster CR um that actually creates the kubernetes cluster as Harvey mentioned",
    "start": "1021199",
    "end": "1027959"
  },
  {
    "text": "we do rely pretty heavily on cluster API to spin up the control plane but another thing I want to call out that the modes",
    "start": "1027959",
    "end": "1034400"
  },
  {
    "text": "have given us the opportunity to is simplifying the interface Custer API is extremely powerful but because it has to",
    "start": "1034400",
    "end": "1040160"
  },
  {
    "text": "support a wide variety of use cases it also has a lot of configuration that can change in this case the Simplicity has",
    "start": "1040160",
    "end": "1047720"
  },
  {
    "text": "forced us to um only expose a certain number of configurations where clusters can",
    "start": "1047720",
    "end": "1052880"
  },
  {
    "text": "deviate this prevents the this prevents a clusters from deviating too far and becoming haunted like they had in the",
    "start": "1052880",
    "end": "1059679"
  },
  {
    "text": "past this one uh also once the control plane actually comes up our automation takes the raw kubernetes cluster into",
    "start": "1059679",
    "end": "1067200"
  },
  {
    "text": "becoming a Reddit shaped kubernetes cluster is what we call it internally all that essentially means it has all",
    "start": "1067200",
    "end": "1072360"
  },
  {
    "text": "the prequisites and dependencies that we require for a cluster to be able to accept and host Reddit applications",
    "start": "1072360",
    "end": "1079360"
  },
  {
    "text": "this oneclick provisioning in our traditional IAC method which was primary terraform was extremely infeasible due",
    "start": "1079360",
    "end": "1085120"
  },
  {
    "text": "to the strict ordering requirements the Simplicity has also helped reduce the amount of mental load",
    "start": "1085120",
    "end": "1091360"
  },
  {
    "text": "required on an infrastructure engineer spinning up these clusters even though they understand all of these flags and",
    "start": "1091360",
    "end": "1096400"
  },
  {
    "text": "kubernetes uh intimately they don't have to think as much when they're actually spinning of a brand new",
    "start": "1096400",
    "end": "1101799"
  },
  {
    "text": "cluster so these are two good examples of what the the compute team at Reddit built as like our initial platform",
    "start": "1101799",
    "end": "1108039"
  },
  {
    "text": "abstractions but in order to fully lean into this automation future we didn't just want to make platform abstractions",
    "start": "1108039",
    "end": "1114480"
  },
  {
    "text": "ourselves we wanted to enable the rest of our infrastructure organization to do the same so this is where we built the",
    "start": "1114480",
    "end": "1119880"
  },
  {
    "text": "Achilles SDK so ailles SDK is built up top of controller runtime which most of you",
    "start": "1119880",
    "end": "1126240"
  },
  {
    "text": "would know is extremely impactful project and has simplified building kubernetes controllers particularly when",
    "start": "1126240",
    "end": "1131679"
  },
  {
    "text": "comp compared to Cent B the infrastructure organization at Reddit did not have a lot of Prior experience",
    "start": "1131679",
    "end": "1138240"
  },
  {
    "text": "or expert with kubernetes controllers so we wanted to take controller runtime and push the abstraction model one L",
    "start": "1138240",
    "end": "1145240"
  },
  {
    "text": "further we wanted to enable our infrastructure Engineers to be able to focus on just building the business",
    "start": "1145240",
    "end": "1150840"
  },
  {
    "text": "logic without having to become underline kubernetes experts and trying to take some of that complexity that we want to",
    "start": "1150840",
    "end": "1156960"
  },
  {
    "text": "take away from our end users or app developers also away from our infrastructure developers so the central feature of",
    "start": "1156960",
    "end": "1163520"
  },
  {
    "text": "this SDK is representing the entire reconciliation loop as a finite State machine",
    "start": "1163520",
    "end": "1169559"
  },
  {
    "text": "now for those of you who have experienced a controller runtime you would know essentially you have one giant reconcile function that you write",
    "start": "1169559",
    "end": "1175320"
  },
  {
    "text": "all of your logic in as controllers get more complex this function can get extremely complicated and monolithic",
    "start": "1175320",
    "end": "1182760"
  },
  {
    "text": "which makes it harder to reason about and debug we found that by having finite states and their transitions associated",
    "start": "1182760",
    "end": "1190080"
  },
  {
    "text": "with it for our reconciliation logic made it easy to reason about debug um",
    "start": "1190080",
    "end": "1196480"
  },
  {
    "text": "and extend all of which were essential for productionz I'll also quickly hit on why",
    "start": "1196480",
    "end": "1202640"
  },
  {
    "text": "we chose the name ailles if anybody's into Greek mythology they probably know where I'm going with it but the name was",
    "start": "1202640",
    "end": "1207880"
  },
  {
    "text": "essentially a reminder for us to remind us that what we were building was extremely powerful but if we weren't",
    "start": "1207880",
    "end": "1213799"
  },
  {
    "text": "careful could be extremely destructive we didn't want the automation to become our Achilles",
    "start": "1213799",
    "end": "1219280"
  },
  {
    "text": "heel because we as Harvey mentioned we rely a lot on a thirdparty software like flux and crossplay and more we also",
    "start": "1219280",
    "end": "1225400"
  },
  {
    "text": "wanted to share what we built with a wider ecosystem so so as of earlier this week Achilles SDK has been open sourced",
    "start": "1225400",
    "end": "1232200"
  },
  {
    "text": "you can either access it through the QR code or there's an Associated block post on r/ rdit enge we want to continue to",
    "start": "1232200",
    "end": "1239120"
  },
  {
    "text": "build the SDK in the open while it stays the Bedrock of our automation going",
    "start": "1239120",
    "end": "1244400"
  },
  {
    "text": "forward so if you look at a very simplified example of what a kubernetes controller written with the Achilles SDK",
    "start": "1244400",
    "end": "1250640"
  },
  {
    "text": "looks like in this case the entire reconciliation Loop is two independent states one which creates a config map",
    "start": "1250640",
    "end": "1257400"
  },
  {
    "text": "and the other which creates a secret the transitions can only happen between state zero to State one and the SDK is",
    "start": "1257400",
    "end": "1263320"
  },
  {
    "text": "responsible for ensuring there's no cyclical dependencies I want to use this example",
    "start": "1263320",
    "end": "1269159"
  },
  {
    "text": "to highlight two more features of the SDK one of them we've simplified the interface to interacting with the API",
    "start": "1269159",
    "end": "1275320"
  },
  {
    "text": "server for for people who are not super familiar with The kubernetes Primitives we wanted to simplify when they needed",
    "start": "1275320",
    "end": "1281919"
  },
  {
    "text": "to create child resources so instead of a user in this case need to create a config map making sure the owner",
    "start": "1281919",
    "end": "1287279"
  },
  {
    "text": "references are correctly set up so that they can actually have automatic cleanup of child resources all they have to do",
    "start": "1287279",
    "end": "1293919"
  },
  {
    "text": "is provide it to an output desired set and the SDK reconciles it to make sure the desired and the actual State",
    "start": "1293919",
    "end": "1299480"
  },
  {
    "text": "actually match if you look at the status in this case the SDK automatically tracks all",
    "start": "1299480",
    "end": "1304679"
  },
  {
    "text": "child resources one thing we found with automation especially as it gets more complicated and our dependency trees get",
    "start": "1304679",
    "end": "1310880"
  },
  {
    "text": "larger it becomes really hard to reason about what resource belongs to which other resource besides child resource tracking",
    "start": "1310880",
    "end": "1317880"
  },
  {
    "text": "the SDK also tracks a state condition per FSN State this has allowed a",
    "start": "1317880",
    "end": "1323720"
  },
  {
    "text": "significant amount of um view into what state the given automation is at any",
    "start": "1323720",
    "end": "1328880"
  },
  {
    "text": "given point and reason about it especially during incidents for now for a more concrete",
    "start": "1328880",
    "end": "1335720"
  },
  {
    "text": "example this is not the entire reconciliation Loop of our uh R cluster reconciler but it's a condensed version",
    "start": "1335720",
    "end": "1342200"
  },
  {
    "text": "of it once a Reddit cluster CR is created on our orchestration cluster our automation takes over it's able to spin",
    "start": "1342200",
    "end": "1349320"
  },
  {
    "text": "up the underlying resources or dependencies it needs like our networking stack which includes the vbc",
    "start": "1349320",
    "end": "1354520"
  },
  {
    "text": "subnets transit gateways and more then it transitions into spinning of the kubernetes control plane most of that is",
    "start": "1354520",
    "end": "1361840"
  },
  {
    "text": "heavily done by cluster API at this point we have a raw kubernetes clusters",
    "start": "1361840",
    "end": "1367200"
  },
  {
    "text": "which can technically host applications but it's still not Reddit shaped this is where our automation takes over for",
    "start": "1367200",
    "end": "1373120"
  },
  {
    "text": "Reddit specific logic and this will be different for different companies in our case we install our work Lo agents we",
    "start": "1373120",
    "end": "1379240"
  },
  {
    "text": "install our dependencies like Walt flux CU to IM and more and once this entire",
    "start": "1379240",
    "end": "1385320"
  },
  {
    "text": "Loop is finished the cluster is marked ready and at this point the cluster is ready to accept a an arbitrary Reddit",
    "start": "1385320",
    "end": "1391880"
  },
  {
    "text": "application now in our traditional Terra from setup each of these boxes was like one or more likely tens of steps that",
    "start": "1391880",
    "end": "1399120"
  },
  {
    "text": "had to be done by hand clusters built and managed by this automation are in the serving path of red.com",
    "start": "1399120",
    "end": "1406960"
  },
  {
    "text": "today so we started this talk with where we were in 2022 now I want to come back",
    "start": "1406960",
    "end": "1412799"
  },
  {
    "text": "to where we are today principle platform abstractions",
    "start": "1412799",
    "end": "1417960"
  },
  {
    "text": "have helped us move to a better world the work here isn't done but we are already starting to see some of the",
    "start": "1417960",
    "end": "1424159"
  },
  {
    "text": "results of it for an app engineer the user experience has been significantly improving especially for as a kubernetes",
    "start": "1424159",
    "end": "1430919"
  },
  {
    "text": "as an example or kubernetes names space as an example because the underlying domain complexity has been hidden away",
    "start": "1430919",
    "end": "1436960"
  },
  {
    "text": "this has made our entire platform much more self-service and scalable for an infrastructure engineer",
    "start": "1436960",
    "end": "1443520"
  },
  {
    "text": "this reduces the cognitive complexity the amount of toil that we had from number of uh names just namespace pull",
    "start": "1443520",
    "end": "1449520"
  },
  {
    "text": "requests and it's also made our system much safer due to the few amount of human touch",
    "start": "1449520",
    "end": "1455960"
  },
  {
    "text": "points the other part I going to call out for the opinion and nature of these platform abstractions have also helped",
    "start": "1455960",
    "end": "1461559"
  },
  {
    "text": "like force Conformity not just in kubernetes clusters but also our application Stacks itself which make",
    "start": "1461559",
    "end": "1467039"
  },
  {
    "text": "them easier to reason about so as of today developers have been able",
    "start": "1467039",
    "end": "1472520"
  },
  {
    "text": "to sell Service as manage kuber names spaces as an example uh and there's over a thousand of them across 35 Plus",
    "start": "1472520",
    "end": "1478880"
  },
  {
    "text": "kubernetes clusters and these clusters are and name spaces are growing on a per quarter basis the turn up time for a new",
    "start": "1478880",
    "end": "1485960"
  },
  {
    "text": "cluster is less than two hours upgrade time is probably even on the order of an hour depending on the size of the",
    "start": "1485960",
    "end": "1492919"
  },
  {
    "text": "cluster we've been able to tackle much more challenging problems like Global expansion while maintaining about a 10",
    "start": "1492919",
    "end": "1499240"
  },
  {
    "text": "to1 ratio technically we've been able to do much more challenging problems with fewer people because of the amount of",
    "start": "1499240",
    "end": "1505720"
  },
  {
    "text": "investment we did over the past few years it's allowed us much more dedicated engineering time to be able to",
    "start": "1505720",
    "end": "1510919"
  },
  {
    "text": "focus on proactively tackling these problems rather than having to reactively",
    "start": "1510919",
    "end": "1516799"
  },
  {
    "text": "firefight similarly with the Achilles SDK the time to MVP for somebody who's never written a controller is less than",
    "start": "1516799",
    "end": "1524240"
  },
  {
    "text": "two weeks which has been a huge success for us this includes proper end to end test testing with our own uh development",
    "start": "1524240",
    "end": "1531039"
  },
  {
    "text": "environment uh and proper unit testing and and tests we started the year with",
    "start": "1531039",
    "end": "1536320"
  },
  {
    "text": "about four kubernetes cluster or controllers in production mostly WR by the compute team and we're up to 12 and",
    "start": "1536320",
    "end": "1542880"
  },
  {
    "text": "still counting these manage like core structure tenants of our infrastructure including our clusters our Ingress tax",
    "start": "1542880",
    "end": "1550080"
  },
  {
    "text": "databases like redis Cassandra Walt and much more I'm going to hand this Dr Harvey to wrap us up",
    "start": "1550080",
    "end": "1556840"
  },
  {
    "text": "here all right so the year is 2024 and the work is far from done but investing",
    "start": "1556840",
    "end": "1563000"
  },
  {
    "text": "in platform abstractions has already paid off Self Service interfaces have replaced a line share of our former",
    "start": "1563000",
    "end": "1569480"
  },
  {
    "text": "White Glove processes a lot of our heavy uh internal workflows have been replaced",
    "start": "1569480",
    "end": "1574600"
  },
  {
    "text": "by automation the company is still growing but on the infrastructure side we find ourselves with the space and",
    "start": "1574600",
    "end": "1581000"
  },
  {
    "text": "time to seriously ask questions like how do we enable the product's growth into new countries how do we reduce p 999",
    "start": "1581000",
    "end": "1588720"
  },
  {
    "text": "latencies across the stack and how do we Supply services with automatic fail over",
    "start": "1588720",
    "end": "1594120"
  },
  {
    "text": "these are the kinds of questions that we as infrastructure Engineers want to spend our time asking and they point at",
    "start": "1594120",
    "end": "1599360"
  },
  {
    "text": "the kinds of imp impactful problems that we want to spend our time",
    "start": "1599360",
    "end": "1604440"
  },
  {
    "text": "solving so throughout this presentation we've argued the virtues of automation but to be clear we think that it ought",
    "start": "1604720",
    "end": "1610480"
  },
  {
    "text": "to be used with good reason uh there are some cases where automation does not make sense and to start with you can't",
    "start": "1610480",
    "end": "1615960"
  },
  {
    "text": "automate something if there's no pattern so the first question to ask is are the use cases or Solutions converged or able",
    "start": "1615960",
    "end": "1622360"
  },
  {
    "text": "to be converged we like to think about this with the 8020 heris so if you've",
    "start": "1622360",
    "end": "1627520"
  },
  {
    "text": "got 80% of the use cases that are Consolidated you have a likely Target for automation the remaining 20% can be",
    "start": "1627520",
    "end": "1633880"
  },
  {
    "text": "handled with white glove processes or Brak glass interfaces but given the expense of",
    "start": "1633880",
    "end": "1639640"
  },
  {
    "text": "building automation uh the primary decision point is a question of return on investment so calculate the expected",
    "start": "1639640",
    "end": "1646600"
  },
  {
    "text": "cost of a given process take the number of engineering hours multiply it by its frequency of use this will cover both",
    "start": "1646600",
    "end": "1653360"
  },
  {
    "text": "use cases that are infrequently executed but when they are executed extremely timec consuming so for us this was",
    "start": "1653360",
    "end": "1659600"
  },
  {
    "text": "managing opinionated clusters on the other end of the spectrum it will cover use cases that are very easy to execute",
    "start": "1659600",
    "end": "1666159"
  },
  {
    "text": "for a human but extremely uh invoked extremely commonly so this was managing name spaces which come and go as often",
    "start": "1666159",
    "end": "1673320"
  },
  {
    "text": "as Services calculate that cost and compare it with the estimated investment into",
    "start": "1673320",
    "end": "1678480"
  },
  {
    "text": "Automation and ask if that will save your team time in the long term so to wrap this up when companies",
    "start": "1678480",
    "end": "1686159"
  },
  {
    "text": "reach a certain maturity they need platform abstractions to operate efficiently especially as they grow and",
    "start": "1686159",
    "end": "1692600"
  },
  {
    "text": "to recap the key takeaways automation brings operational efficiency that allows your infrastructure teams to",
    "start": "1692600",
    "end": "1699120"
  },
  {
    "text": "support your company through periods of high growth and high scale platform",
    "start": "1699120",
    "end": "1704200"
  },
  {
    "text": "abstractions enable a separation of concerns between your engineering personas allowing your application",
    "start": "1704200",
    "end": "1709760"
  },
  {
    "text": "engineers and infrastructure Engineers to each do what they do best and lastly kubernetes can act not only as a",
    "start": "1709760",
    "end": "1716480"
  },
  {
    "text": "container orchestrator but as a universal control plane that manages all aspects of your infrastructure and with that I want to",
    "start": "1716480",
    "end": "1723320"
  },
  {
    "text": "thank the audience and move on to questions [Applause]",
    "start": "1723320",
    "end": "1737880"
  },
  {
    "text": "testing hey um I see a lot of what you guys are",
    "start": "1742279",
    "end": "1747640"
  },
  {
    "text": "doing is something that we're doing in my organization we've abstracted cluster scheduling name spaces uh we do a lot of",
    "start": "1747640",
    "end": "1754440"
  },
  {
    "text": "giop self-service ability so Nam spaces are self-service through git repo and",
    "start": "1754440",
    "end": "1759799"
  },
  {
    "text": "we're talking thousands of Nam spaces and we extract everything that's there what I'm curious is have you guys started thinking about the um like more",
    "start": "1759799",
    "end": "1767480"
  },
  {
    "text": "of the front-end IDP like is that something you're already thinking about because I find that for us even though",
    "start": "1767480",
    "end": "1774480"
  },
  {
    "text": "thousands of name spaces are managed through a single git repo users can do it themselves we have a bot that will",
    "start": "1774480",
    "end": "1779919"
  },
  {
    "text": "validate and approve those PRS there's still the teams that are be like I don't want to write ammo I don't want to you",
    "start": "1779919",
    "end": "1786679"
  },
  {
    "text": "know so I'm curious are you guys already thinking about that or you're you're not you know there yet yeah that's a great",
    "start": "1786679",
    "end": "1792159"
  },
  {
    "text": "question um we try to catch as many errors at the CI at CI time as we can",
    "start": "1792159",
    "end": "1798559"
  },
  {
    "text": "um so that constrains how much time is wasted down the line um we're not quite there yet with the IDP most the",
    "start": "1798559",
    "end": "1806000"
  },
  {
    "text": "interface that we have for end users is uh a gitops interface and they are writing yaml so we just try to keep the",
    "start": "1806000",
    "end": "1811320"
  },
  {
    "text": "crds as simple as possible but when we look at the future we do want to think about an approach where maybe you have a",
    "start": "1811320",
    "end": "1817840"
  },
  {
    "text": "dynamic form because the amount of information that our application Engineers are working through when",
    "start": "1817840",
    "end": "1823519"
  },
  {
    "text": "they're filling out a piece of yaml it's going to grow and it's going to become a lot of cognitive loads so I think it is",
    "start": "1823519",
    "end": "1829279"
  },
  {
    "text": "in our future plans I'm not sure if that's like a 5year Time horizon or like a 1 to twoe but yeah the crds will get",
    "start": "1829279",
    "end": "1835600"
  },
  {
    "text": "more complicated even for the abstracted versions for app Engineers yeah we we the same we have uh we're we're looking",
    "start": "1835600",
    "end": "1842000"
  },
  {
    "text": "for that Dynamic aspect because you can in an IDP backstage you can template out like a crd a resource definition but",
    "start": "1842000",
    "end": "1849679"
  },
  {
    "text": "then as you add parameters you have to go back and update the template so being able to pull it from the crd from the",
    "start": "1849679",
    "end": "1855279"
  },
  {
    "text": "API I think it's the path forward so curious to see who else can come up with that yeah I would agree with you yeah",
    "start": "1855279",
    "end": "1861600"
  },
  {
    "text": "thank you hey um you mentioned that uh with",
    "start": "1861600",
    "end": "1866840"
  },
  {
    "text": "this model the pain could potentially be much greater when things do go wrong you even mentioned that you like named the",
    "start": "1866840",
    "end": "1872320"
  },
  {
    "text": "SDK Achilles to remind yourself to that can you talk about uh some of your experience with that you know have",
    "start": "1872320",
    "end": "1878120"
  },
  {
    "text": "things gone wrong what did that look like when you you know let an automation handle you know major uh challenges yeah",
    "start": "1878120",
    "end": "1885320"
  },
  {
    "text": "I can totally hate on that so we've had a few incidents where due to a bug making it through or like human",
    "start": "1885320",
    "end": "1891320"
  },
  {
    "text": "interaction it's caused essential like cascading delete of a bunch of resources the most recent one was it essentially",
    "start": "1891320",
    "end": "1898360"
  },
  {
    "text": "deleted our flux deployment on the cluster which inherently deleted all its crds and its children which caused a",
    "start": "1898360",
    "end": "1904559"
  },
  {
    "text": "cascading delete of our CFA cluster that was running on there so there there is",
    "start": "1904559",
    "end": "1909600"
  },
  {
    "text": "like that point of it like and it got triggered from this foot gun that we had as a bug that was never tested from",
    "start": "1909600",
    "end": "1916000"
  },
  {
    "text": "probably a couple years ago um so what we've been trying to do is besides just heavily testing these edge cases is",
    "start": "1916000",
    "end": "1922320"
  },
  {
    "text": "trying to build in as many of these safeguards into certain spots automation is great but there's certain things that",
    "start": "1922320",
    "end": "1928120"
  },
  {
    "text": "I think the manual toil of it is worth removing the efficiency so one thing we added was essentially disabled pruning",
    "start": "1928120",
    "end": "1935279"
  },
  {
    "text": "on crds at the top level for a lot of the core uh components like flux we're",
    "start": "1935279",
    "end": "1940919"
  },
  {
    "text": "essentially never going to end up deleting flux but if the automation does go Haywire we want to make sure we can protect ourselves from it",
    "start": "1940919",
    "end": "1947960"
  },
  {
    "text": "um yeah we've also had namespace deletions happen yeah that and I think just uh conveying a healthy sense of",
    "start": "1947960",
    "end": "1953720"
  },
  {
    "text": "paranoia for the engineers that are building these platforms like always reason about what is the worst thing that can happen and have an outof band",
    "start": "1953720",
    "end": "1961480"
  },
  {
    "text": "process that prevents bad code from doing Haywire deletes so one thing for",
    "start": "1961480",
    "end": "1966760"
  },
  {
    "text": "example on our cluster crd we have uh we have a kyno policy that prevents the",
    "start": "1966760",
    "end": "1972360"
  },
  {
    "text": "deletion of that uh it it rejects a delete request unless there's a special",
    "start": "1972360",
    "end": "1977519"
  },
  {
    "text": "annot a on the custom resource that says I'm I've confirmed that I want to delete this so just adding a bit of extra",
    "start": "1977519",
    "end": "1984720"
  },
  {
    "text": "friction to those delete steps can go a long way hey great talk um in you mentioned",
    "start": "1984720",
    "end": "1992000"
  },
  {
    "text": "like in 2022 there was like too much white glove uh to get things deployed so",
    "start": "1992000",
    "end": "1997760"
  },
  {
    "text": "can you share any like the tactics or like kpis you shared with like your leadership team to get even to",
    "start": "1997760",
    "end": "2003919"
  },
  {
    "text": "temporarily remove the engineers doing the white glove stuff to get them to focus on building this tool right kpis as in how do we just the",
    "start": "2003919",
    "end": "2012000"
  },
  {
    "text": "notion that if if if if it takes 10 White Glove Engineers to keep the current process and we got to pull half",
    "start": "2012000",
    "end": "2017159"
  },
  {
    "text": "of them off to build this new abstraction how do you sort of just communicate that yeah like how do you build the airplane while you're flying",
    "start": "2017159",
    "end": "2022320"
  },
  {
    "text": "it at the same time exctly great question um it was tough I think that um",
    "start": "2022320",
    "end": "2027880"
  },
  {
    "text": "It's a combination of careful communication and framing to your stakeholders like this is an existential",
    "start": "2027880",
    "end": "2033919"
  },
  {
    "text": "threat we cannot keep up if we don't do this um and also it was just it was a",
    "start": "2033919",
    "end": "2039000"
  },
  {
    "text": "bit of a hard time it was crunch time we had to manage both the uh the white glove processes while also just",
    "start": "2039000",
    "end": "2044799"
  },
  {
    "text": "committing time and really I think the conviction that we had no other choice but to build a platform that could",
    "start": "2044799",
    "end": "2051000"
  },
  {
    "text": "automate away and allow us to be more efficient it was the conviction that carried us through any like inflection",
    "start": "2051000",
    "end": "2057919"
  },
  {
    "text": "point I mean I think start small pick low hanging fruit so Nam spaces were an",
    "start": "2057919",
    "end": "2064280"
  },
  {
    "text": "EAS a quick way for us to prove the value of automation to our stakeholders ERS so where we we might get I don't",
    "start": "2064280",
    "end": "2069960"
  },
  {
    "text": "know 5 to 10 PR requests a week that takes away I don't know some number of hours quickly ship the name space",
    "start": "2069960",
    "end": "2076200"
  },
  {
    "text": "abstraction have it Target some new set of clusters and just show this has cut down our PR percentage by this much",
    "start": "2076200",
    "end": "2083118"
  },
  {
    "text": "thank you yeah and then you can move on to the like the higher hanging fruit that takes more",
    "start": "2083119",
    "end": "2088800"
  },
  {
    "text": "investment hello uh good talk uh our company went through kind of a similar process and I had two main questions uh",
    "start": "2088879",
    "end": "2095320"
  },
  {
    "text": "one you use the term federation did youall ever use a tool called Cube fed by any chance yeah we we were heard of it at",
    "start": "2095320",
    "end": "2102599"
  },
  {
    "text": "the time I don't think we ended up using it I don't know how much the evaluation it yeah we evaluated Q fed the problem",
    "start": "2102599",
    "end": "2107839"
  },
  {
    "text": "for us was that it was a little bit too generic and because of how generic it was the the Machinery was a little bit",
    "start": "2107839",
    "end": "2114320"
  },
  {
    "text": "clunky you had to embed if I recall correctly you're embedding your custom resource inside of the cube fed crds",
    "start": "2114320",
    "end": "2121680"
  },
  {
    "text": "pretty much yeah and that uh it wasn't the best model for us we wanted something a bit simpler okay",
    "start": "2121680",
    "end": "2128160"
  },
  {
    "text": "okay so first question and then my second question is uh for actual deployments like deploying out PLS or I",
    "start": "2128160",
    "end": "2134880"
  },
  {
    "text": "guess deployment objects do you expect your customers to write the full yaml",
    "start": "2134880",
    "end": "2140520"
  },
  {
    "text": "your themselves or do you have Helm charts because you mentioned you use flux so you probably have Helm releases",
    "start": "2140520",
    "end": "2146560"
  },
  {
    "text": "are they creating Helm charts themselves or do you provide a set of Helm charts that say Hey if you want stateful sets",
    "start": "2146560",
    "end": "2152079"
  },
  {
    "text": "here if you want stat sets here if you want whatever here what do you all do",
    "start": "2152079",
    "end": "2157880"
  },
  {
    "text": "yeah so we did deprecate Helm charge generally for services because of the added complexity of it our Legacy",
    "start": "2157880",
    "end": "2163640"
  },
  {
    "text": "approach which is still kind of ongoing is essentially using starlark um but we're now moving towards as python oh",
    "start": "2163640",
    "end": "2170359"
  },
  {
    "text": "not python sorry we're moving towards like a go based model so we have different infrastructure organizations that own different parts essentially",
    "start": "2170359",
    "end": "2176800"
  },
  {
    "text": "building simpler interfaces for the user um and they're able to go using this generator just have the basic deployment",
    "start": "2176800",
    "end": "2183720"
  },
  {
    "text": "so for the most simplest of use cases they probably don't even need to write much go uh so we're trying to move to",
    "start": "2183720",
    "end": "2189040"
  },
  {
    "text": "more towards that abstraction so they don't even know it's like yaml necessarily at the end of the day and we can use type strongly typed languages to",
    "start": "2189040",
    "end": "2196200"
  },
  {
    "text": "add extra validation at commit time rather than CI time okay thank",
    "start": "2196200",
    "end": "2201480"
  },
  {
    "text": "you hey uh my first question was did you turn off prune looks like you did that's",
    "start": "2201480",
    "end": "2207040"
  },
  {
    "text": "good um my actual question was on so you have uh each cluster running its own VPC",
    "start": "2207040",
    "end": "2213480"
  },
  {
    "text": "is it so you are like you your expectation is your going to have like if it is 100 200 clusters you're going",
    "start": "2213480",
    "end": "2219680"
  },
  {
    "text": "to have 200 vpcs yeah right now we do have uh our current design philosophy is",
    "start": "2219680",
    "end": "2224880"
  },
  {
    "text": "one: one one cluster one VPC so we can use the VPC as a network isolation",
    "start": "2224880",
    "end": "2230160"
  },
  {
    "text": "primitive um but that is a changeable opinion okay cool thank",
    "start": "2230160",
    "end": "2236880"
  },
  {
    "text": "you uh yeah my question was on the multicluster name space The Binding for",
    "start": "2236880",
    "end": "2241920"
  },
  {
    "text": "the Federation is that immutable or can that change and then also on your workloads can you Mig a workload from",
    "start": "2241920",
    "end": "2248680"
  },
  {
    "text": "one cluster to another yes it can change um the semantics are you can it's a list",
    "start": "2248680",
    "end": "2255000"
  },
  {
    "text": "of refs to Federation objects each Federation object is a set of clusters",
    "start": "2255000",
    "end": "2260319"
  },
  {
    "text": "and then we take the set Union of all of those clusters so this allows us if if a",
    "start": "2260319",
    "end": "2265560"
  },
  {
    "text": "workload wants to migrate to a new set of clusters they can either update the Federation or they can add on a new",
    "start": "2265560",
    "end": "2272200"
  },
  {
    "text": "Federation so we're kind of flexible in how we model this",
    "start": "2272200",
    "end": "2277480"
  },
  {
    "text": "hi yeah um how did you decide where to draw the line between um what the app engineers get abstracted for them and",
    "start": "2277720",
    "end": "2284520"
  },
  {
    "text": "what you know what they should be familiar with from the underlying platform that they that they work on top",
    "start": "2284520",
    "end": "2290079"
  },
  {
    "text": "that's a good question I think it it somewhat comes down to like an organizational difference too depending",
    "start": "2290079",
    "end": "2296160"
  },
  {
    "text": "on the company but for us it was anybody who was building and user applications for reddit.com so essentially working on",
    "start": "2296160",
    "end": "2302880"
  },
  {
    "text": "reddit.com is considered like an app engineer and anybody who's building the actual underlying platform or",
    "start": "2302880",
    "end": "2308359"
  },
  {
    "text": "infrastructure tooling kind of moves to the other side of it the way our expectation lies is for an app engineer",
    "start": "2308359",
    "end": "2313520"
  },
  {
    "text": "they still need to understand the basic enough basics of kubernetes during an incident to be able to debug it but",
    "start": "2313520",
    "end": "2319560"
  },
  {
    "text": "we're trying to move away and Abstract away as much of as we can a lot of this is like Legacy approach historically",
    "start": "2319560",
    "end": "2325440"
  },
  {
    "text": "different departments owned their own kubernetes clusters which is why they also became extremely haunted and they all ran slightly differently but now",
    "start": "2325440",
    "end": "2332400"
  },
  {
    "text": "we're trying to claw back that control a little bit and make us like better ux for the platform yeah and I'll add on to",
    "start": "2332400",
    "end": "2338240"
  },
  {
    "text": "that it's a tough question it can also be a moving Target I think um we",
    "start": "2338240",
    "end": "2343280"
  },
  {
    "text": "approach it kind of like a user researcher would so we take all the existing use cases we survey them and",
    "start": "2343280",
    "end": "2348839"
  },
  {
    "text": "then we as the domain experts make a determination about which of these use cases are valid which ones are invalid",
    "start": "2348839",
    "end": "2355040"
  },
  {
    "text": "and then that will inform the initial MVP and then as the API evolves uh we",
    "start": "2355040",
    "end": "2360800"
  },
  {
    "text": "might have you know power users that emerge that want more control over their kubernetes manifest because they have",
    "start": "2360800",
    "end": "2366240"
  },
  {
    "text": "that expertise and they need that control at those points in time at those junctures we can make a decision to you",
    "start": "2366240",
    "end": "2372000"
  },
  {
    "text": "know add a break glass interface for those power users or we can just say by our policy we won't allow you to",
    "start": "2372000",
    "end": "2379000"
  },
  {
    "text": "do that so it's it's always just a it's a moving Target it's always a negotiation between you and your users the important thing is to have that",
    "start": "2379000",
    "end": "2385280"
  },
  {
    "text": "discussion and feedback loop thank you thank you a great talk uh lots of",
    "start": "2385280",
    "end": "2391119"
  },
  {
    "text": "similar challenges for us um I was Cur about curious about the changes for your",
    "start": "2391119",
    "end": "2396400"
  },
  {
    "text": "platform teams skill set wise right it sounds like the white glove service firefighting lots of terraform um other",
    "start": "2396400",
    "end": "2404079"
  },
  {
    "text": "you know Cloud uh API use switching over to a more development focused role um",
    "start": "2404079",
    "end": "2411200"
  },
  {
    "text": "did you have to bring developers in did you kind of have everybody on your infrastructure team start you know",
    "start": "2411200",
    "end": "2417640"
  },
  {
    "text": "branching out how did you kind of segment that so you could shift rules great question uh it's combination of",
    "start": "2417640",
    "end": "2423960"
  },
  {
    "text": "both I think that the nice thing about having having people who are very Ops focused is they have the domain",
    "start": "2423960",
    "end": "2430280"
  },
  {
    "text": "expertise so if you approach it from either side take a pure software engineer or a pure devops engineer they",
    "start": "2430280",
    "end": "2435800"
  },
  {
    "text": "each have gaps for building a platform you need to merge both skill sets in a",
    "start": "2435800",
    "end": "2441160"
  },
  {
    "text": "graceful way and so a lot of our devops Engineers picked up software engineering skill sets and a lot of our software",
    "start": "2441160",
    "end": "2446480"
  },
  {
    "text": "Engineers picked up the domain expertise and having the the understanding between the two personas and like merging them",
    "start": "2446480",
    "end": "2452880"
  },
  {
    "text": "into one was really key for our success and um the SDK was one of those one",
    "start": "2452880",
    "end": "2459160"
  },
  {
    "text": "thing that helped bridge that Gap because writing controllers and controller run time is extremely complicated like everyone runs in the",
    "start": "2459160",
    "end": "2465200"
  },
  {
    "text": "same pitfalls but having the SDK there we were able to avoid a lot of the same annoying pitfalls that you may run into",
    "start": "2465200",
    "end": "2472200"
  },
  {
    "text": "and we don't want people to have to deal with those so good thank you yeah uh hi",
    "start": "2472200",
    "end": "2478440"
  },
  {
    "text": "uh I was curious how do you guys perform cluster upgrades that handled through the orchestration cluster and what about",
    "start": "2478440",
    "end": "2485640"
  },
  {
    "text": "like deprecated apis upgrading add-ons and that type of stuff um yeah I can",
    "start": "2485640",
    "end": "2491839"
  },
  {
    "text": "quickly answer that and then we can take the conversation in the hallway um so the way currently it's handled for all",
    "start": "2491839",
    "end": "2497560"
  },
  {
    "text": "the new clusters is still per cluster basis we're still doing in place upgrades we do want to migrate towards",
    "start": "2497560",
    "end": "2503680"
  },
  {
    "text": "potentially exploring more um entirely replacing clusters historically our clusters have been pets not cattle so",
    "start": "2503680",
    "end": "2509800"
  },
  {
    "text": "they've all had to be done in place uh we rely pretty heavily on the uh cluster API Primitives to be able to do the",
    "start": "2509800",
    "end": "2515319"
  },
  {
    "text": "upgrade of the control pane which allow I was progressively replacing each control playe node which works super",
    "start": "2515319",
    "end": "2520599"
  },
  {
    "text": "well we've had to had some extra logic added to it because what you can run into a race condition where the workers",
    "start": "2520599",
    "end": "2526880"
  },
  {
    "text": "start upgrading before the control BL is fully completed causing it to Break um but yeah we still do in place upgrades",
    "start": "2526880",
    "end": "2532680"
  },
  {
    "text": "we're hoping to move away from it over time okay awesome thank you thank you I think both Harvey and I are just",
    "start": "2532680",
    "end": "2539319"
  },
  {
    "text": "going to like be in the hallway so we're more than happy to chat okay just being tolded thank you so much everyone",
    "start": "2539319",
    "end": "2547720"
  }
]