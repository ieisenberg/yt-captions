[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "hello thanks for joining in the",
    "start": "160",
    "end": "2240"
  },
  {
    "text": "following i'm going to give you five",
    "start": "2240",
    "end": "3919"
  },
  {
    "text": "reasons to rethink your default ingress",
    "start": "3919",
    "end": "6000"
  },
  {
    "text": "controller",
    "start": "6000",
    "end": "7919"
  },
  {
    "text": "first a little about me my name is",
    "start": "7919",
    "end": "10000"
  },
  {
    "text": "daniel corbett and i'm the director of",
    "start": "10000",
    "end": "11840"
  },
  {
    "text": "product at ha proxy technologies",
    "start": "11840",
    "end": "15040"
  },
  {
    "text": "the general reasons for reconsidering",
    "start": "15040",
    "end": "16800"
  },
  {
    "text": "your usage of the default ingress",
    "start": "16800",
    "end": "18400"
  },
  {
    "text": "controller fall into the following",
    "start": "18400",
    "end": "19920"
  },
  {
    "text": "categories",
    "start": "19920",
    "end": "21119"
  },
  {
    "text": "performance reloads health checks",
    "start": "21119",
    "end": "24640"
  },
  {
    "text": "observability and overload protection",
    "start": "24640",
    "end": "28400"
  },
  {
    "start": "28000",
    "end": "76000"
  },
  {
    "text": "let's start with performance in a",
    "start": "28400",
    "end": "30160"
  },
  {
    "text": "cloud-native world performance is more",
    "start": "30160",
    "end": "32238"
  },
  {
    "text": "important than it probably has ever been",
    "start": "32239",
    "end": "34079"
  },
  {
    "text": "as poor performance requires excessive",
    "start": "34079",
    "end": "36239"
  },
  {
    "text": "resource usage",
    "start": "36239",
    "end": "37280"
  },
  {
    "text": "which results in a higher cloud spend it",
    "start": "37280",
    "end": "39680"
  },
  {
    "text": "can also translate to a sub-optimal user",
    "start": "39680",
    "end": "41840"
  },
  {
    "text": "experience",
    "start": "41840",
    "end": "42960"
  },
  {
    "text": "the ha proxy kubernetes angus controller",
    "start": "42960",
    "end": "45360"
  },
  {
    "text": "was built to supercharge your kubernetes",
    "start": "45360",
    "end": "47360"
  },
  {
    "text": "environment",
    "start": "47360",
    "end": "48320"
  },
  {
    "text": "out of the box benchmarks show that it",
    "start": "48320",
    "end": "50320"
  },
  {
    "text": "significantly outperforms the default",
    "start": "50320",
    "end": "52239"
  },
  {
    "text": "ingress controller",
    "start": "52239",
    "end": "53199"
  },
  {
    "text": "which relies heavily on lua scripts it's",
    "start": "53199",
    "end": "55760"
  },
  {
    "text": "able to not only serve a little over",
    "start": "55760",
    "end": "57520"
  },
  {
    "text": "thirty thousand requests per second more",
    "start": "57520",
    "end": "59760"
  },
  {
    "text": "but it does so with approximately twenty",
    "start": "59760",
    "end": "61760"
  },
  {
    "text": "percent less cpu",
    "start": "61760",
    "end": "63199"
  },
  {
    "text": "and a lower latency ultimately this",
    "start": "63199",
    "end": "66000"
  },
  {
    "text": "means that out of the box",
    "start": "66000",
    "end": "67360"
  },
  {
    "text": "you will instantly be able to handle",
    "start": "67360",
    "end": "69040"
  },
  {
    "text": "more requests per second",
    "start": "69040",
    "end": "70479"
  },
  {
    "text": "with a smaller instance type and deliver",
    "start": "70479",
    "end": "72799"
  },
  {
    "text": "your application faster to your clients",
    "start": "72799",
    "end": "76560"
  },
  {
    "start": "76000",
    "end": "91000"
  },
  {
    "text": "here are the graphs from that benchmark",
    "start": "76560",
    "end": "78560"
  },
  {
    "text": "you can watch the full video in the demo",
    "start": "78560",
    "end": "80400"
  },
  {
    "text": "theater",
    "start": "80400",
    "end": "81040"
  },
  {
    "text": "or at the aha proxy booth which is",
    "start": "81040",
    "end": "83040"
  },
  {
    "text": "located in the platinum hall",
    "start": "83040",
    "end": "84880"
  },
  {
    "text": "you can also find the code to reproduce",
    "start": "84880",
    "end": "86960"
  },
  {
    "text": "the benchmarks yourself",
    "start": "86960",
    "end": "88320"
  },
  {
    "text": "in the github link shown here",
    "start": "88320",
    "end": "91439"
  },
  {
    "start": "91000",
    "end": "139000"
  },
  {
    "text": "cloud native environments are constantly",
    "start": "91439",
    "end": "93439"
  },
  {
    "text": "changing new ingress resources are added",
    "start": "93439",
    "end": "96079"
  },
  {
    "text": "routing rules are added or removed and",
    "start": "96079",
    "end": "98000"
  },
  {
    "text": "secrets are frequently updated",
    "start": "98000",
    "end": "100000"
  },
  {
    "text": "the default ingress controller does not",
    "start": "100000",
    "end": "102159"
  },
  {
    "text": "have a runtime api",
    "start": "102159",
    "end": "103600"
  },
  {
    "text": "and so it requires a reload for each of",
    "start": "103600",
    "end": "105600"
  },
  {
    "text": "these changes",
    "start": "105600",
    "end": "106880"
  },
  {
    "text": "it was found during the previous",
    "start": "106880",
    "end": "108799"
  },
  {
    "text": "benchmarks that making changes which",
    "start": "108799",
    "end": "110960"
  },
  {
    "text": "force the reload",
    "start": "110960",
    "end": "112000"
  },
  {
    "text": "while running the benchmarks results in",
    "start": "112000",
    "end": "114000"
  },
  {
    "text": "server-side errors being sent to the",
    "start": "114000",
    "end": "115840"
  },
  {
    "text": "client",
    "start": "115840",
    "end": "116640"
  },
  {
    "text": "the hra proxy kubernetes ingress",
    "start": "116640",
    "end": "118399"
  },
  {
    "text": "controller does have a runtime api",
    "start": "118399",
    "end": "120880"
  },
  {
    "text": "which allows the changes to be made on",
    "start": "120880",
    "end": "123119"
  },
  {
    "text": "the fly without reloading",
    "start": "123119",
    "end": "125520"
  },
  {
    "text": "for those changes which we which do",
    "start": "125520",
    "end": "127439"
  },
  {
    "text": "require a reload it supports hit list",
    "start": "127439",
    "end": "129520"
  },
  {
    "text": "reloads which means that no traffic will",
    "start": "129520",
    "end": "131520"
  },
  {
    "text": "be dropped",
    "start": "131520",
    "end": "132560"
  },
  {
    "text": "this gives you peace of mind that your",
    "start": "132560",
    "end": "134560"
  },
  {
    "text": "end clients are not affected by changes",
    "start": "134560",
    "end": "136720"
  },
  {
    "text": "within your kubernetes environment",
    "start": "136720",
    "end": "140080"
  },
  {
    "start": "139000",
    "end": "181000"
  },
  {
    "text": "active health checking is a key",
    "start": "140080",
    "end": "142080"
  },
  {
    "text": "component to finding application issues",
    "start": "142080",
    "end": "144560"
  },
  {
    "text": "early",
    "start": "144560",
    "end": "145040"
  },
  {
    "text": "and avoiding routing traffic to an",
    "start": "145040",
    "end": "146800"
  },
  {
    "text": "unhealthy pod",
    "start": "146800",
    "end": "148080"
  },
  {
    "text": "the default ingress controller does not",
    "start": "148080",
    "end": "150239"
  },
  {
    "text": "support active health checks and relies",
    "start": "150239",
    "end": "152160"
  },
  {
    "text": "on kubernetes liveness and readiness",
    "start": "152160",
    "end": "154239"
  },
  {
    "text": "mechanisms",
    "start": "154239",
    "end": "155040"
  },
  {
    "text": "for monitoring pod health the ha proxy",
    "start": "155040",
    "end": "157920"
  },
  {
    "text": "kubernetes ingress controller",
    "start": "157920",
    "end": "159519"
  },
  {
    "text": "does support active health checking and",
    "start": "159519",
    "end": "161440"
  },
  {
    "text": "it can be configured to use custom",
    "start": "161440",
    "end": "163120"
  },
  {
    "text": "methods such as head",
    "start": "163120",
    "end": "164640"
  },
  {
    "text": "get or options and support sending a",
    "start": "164640",
    "end": "167519"
  },
  {
    "text": "custom path on a per ingress basis",
    "start": "167519",
    "end": "170160"
  },
  {
    "text": "it also provides flexibility allowing",
    "start": "170160",
    "end": "172319"
  },
  {
    "text": "you to define the interval",
    "start": "172319",
    "end": "173840"
  },
  {
    "text": "at which health checks are performed so",
    "start": "173840",
    "end": "175760"
  },
  {
    "text": "that unhealthy pods are removed from",
    "start": "175760",
    "end": "177599"
  },
  {
    "text": "load balancing",
    "start": "177599",
    "end": "178560"
  },
  {
    "text": "sooner than later we all know that logs",
    "start": "178560",
    "end": "182159"
  },
  {
    "text": "and metrics",
    "start": "182159",
    "end": "182879"
  },
  {
    "text": "are a key component for debugging and",
    "start": "182879",
    "end": "184720"
  },
  {
    "text": "spotting anonymous and your application",
    "start": "184720",
    "end": "187280"
  },
  {
    "text": "unfortunately the default ingress",
    "start": "187280",
    "end": "189200"
  },
  {
    "text": "controller provides a minimal amount of",
    "start": "189200",
    "end": "191040"
  },
  {
    "text": "observability data with",
    "start": "191040",
    "end": "192640"
  },
  {
    "text": "a sparse amount of information available",
    "start": "192640",
    "end": "194640"
  },
  {
    "text": "in the logs limited metrics",
    "start": "194640",
    "end": "196720"
  },
  {
    "text": "and it makes it difficult to even",
    "start": "196720",
    "end": "198400"
  },
  {
    "text": "determine what application servers it's",
    "start": "198400",
    "end": "200480"
  },
  {
    "text": "currently routing traffic to",
    "start": "200480",
    "end": "202159"
  },
  {
    "text": "requiring you to install a cubectl",
    "start": "202159",
    "end": "204480"
  },
  {
    "text": "plugin to get that info",
    "start": "204480",
    "end": "206319"
  },
  {
    "text": "the ha proxy kubernetes ingest",
    "start": "206319",
    "end": "207920"
  },
  {
    "text": "controller provides robust metrics and",
    "start": "207920",
    "end": "210159"
  },
  {
    "text": "logs",
    "start": "210159",
    "end": "210720"
  },
  {
    "text": "and supports cloud native logging by",
    "start": "210720",
    "end": "212799"
  },
  {
    "text": "allowing you to output logs to std out",
    "start": "212799",
    "end": "215280"
  },
  {
    "text": "but also supports routing them to a",
    "start": "215280",
    "end": "217120"
  },
  {
    "text": "syslog server",
    "start": "217120",
    "end": "218480"
  },
  {
    "text": "the logs contain detailed information",
    "start": "218480",
    "end": "220879"
  },
  {
    "text": "such as end to end timing data on the",
    "start": "220879",
    "end": "222959"
  },
  {
    "text": "request",
    "start": "222959",
    "end": "223680"
  },
  {
    "text": "and a session state termination code",
    "start": "223680",
    "end": "226159"
  },
  {
    "text": "allowing you to quickly determine",
    "start": "226159",
    "end": "227840"
  },
  {
    "text": "whether a connection was completed",
    "start": "227840",
    "end": "229440"
  },
  {
    "text": "successfully or not",
    "start": "229440",
    "end": "230879"
  },
  {
    "text": "finally it has a detailed stats page",
    "start": "230879",
    "end": "233519"
  },
  {
    "text": "giving you an in-depth view",
    "start": "233519",
    "end": "235040"
  },
  {
    "text": "into your application pods that are",
    "start": "235040",
    "end": "236799"
  },
  {
    "text": "configured as well as the client",
    "start": "236799",
    "end": "238640"
  },
  {
    "text": "sessions that are being routed",
    "start": "238640",
    "end": "241439"
  },
  {
    "text": "the stats page comes enabled out of the",
    "start": "241439",
    "end": "243680"
  },
  {
    "text": "box here's a screenshot",
    "start": "243680",
    "end": "247280"
  },
  {
    "start": "246000",
    "end": "273000"
  },
  {
    "text": "and the last reason that you should",
    "start": "247280",
    "end": "248720"
  },
  {
    "text": "rethink your use of the default ingress",
    "start": "248720",
    "end": "250959"
  },
  {
    "text": "controller",
    "start": "250959",
    "end": "251599"
  },
  {
    "text": "is overload protection spikes in traffic",
    "start": "251599",
    "end": "254319"
  },
  {
    "text": "can cause",
    "start": "254319",
    "end": "254879"
  },
  {
    "text": "pod overloads and potentially lead to a",
    "start": "254879",
    "end": "257199"
  },
  {
    "text": "snowball effect",
    "start": "257199",
    "end": "258400"
  },
  {
    "text": "the ha proxy kubernetes angus controller",
    "start": "258400",
    "end": "260720"
  },
  {
    "text": "allows you to specify maximum connection",
    "start": "260720",
    "end": "262880"
  },
  {
    "text": "settings on a per pod basis",
    "start": "262880",
    "end": "264880"
  },
  {
    "text": "when the maximum connection limit is",
    "start": "264880",
    "end": "266560"
  },
  {
    "text": "reached the new connections are placed",
    "start": "266560",
    "end": "268400"
  },
  {
    "text": "into a queue",
    "start": "268400",
    "end": "269280"
  },
  {
    "text": "and served as soon as there's an",
    "start": "269280",
    "end": "270960"
  },
  {
    "text": "available connection slot",
    "start": "270960",
    "end": "274000"
  },
  {
    "start": "273000",
    "end": "293000"
  },
  {
    "text": "thanks for joining this talk and i hope",
    "start": "274000",
    "end": "276000"
  },
  {
    "text": "i've given you some good reasons to",
    "start": "276000",
    "end": "277600"
  },
  {
    "text": "rethink your usage of the default",
    "start": "277600",
    "end": "279360"
  },
  {
    "text": "ingress controller",
    "start": "279360",
    "end": "280639"
  },
  {
    "text": "if you're interested to try out the ha",
    "start": "280639",
    "end": "282720"
  },
  {
    "text": "proxy kubernetes ingers controller",
    "start": "282720",
    "end": "284720"
  },
  {
    "text": "you can quickly get started with this",
    "start": "284720",
    "end": "286320"
  },
  {
    "text": "home chart if you have any questions",
    "start": "286320",
    "end": "288720"
  },
  {
    "text": "stop by the h a proxy booth located in",
    "start": "288720",
    "end": "290880"
  },
  {
    "text": "the platinum hall",
    "start": "290880",
    "end": "291840"
  },
  {
    "text": "and we'll be happy to answer them",
    "start": "291840",
    "end": "295759"
  }
]