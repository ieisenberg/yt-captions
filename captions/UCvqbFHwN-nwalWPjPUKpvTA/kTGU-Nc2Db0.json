[
  {
    "text": "good afternoon my name is Duffy Cooley I'm the field CTO at eye surveillance today we're going to be conducting a workshop on getting familiar with",
    "start": "240",
    "end": "6240"
  },
  {
    "text": "security observability using ebbf and psyllium tetricon",
    "start": "6240",
    "end": "12019"
  },
  {
    "text": "I want to try using these ones and my name is Solutions architect",
    "start": "15360",
    "end": "22160"
  },
  {
    "text": "and I'll be yeah doing it with you",
    "start": "22160",
    "end": "27199"
  },
  {
    "text": "awesome so to get started I'm going to actually take you through a presentation kind of describing the concepts and the and what we're going to be covering in",
    "start": "27660",
    "end": "34079"
  },
  {
    "text": "the lab today and then I'm going to turn it over to Raphael to drive the lab but we're all going to be able to go through a Hands-On lab together so I hope you",
    "start": "34079",
    "end": "40440"
  },
  {
    "text": "brought your laptops you should only need internet access nothing special we're going to be using the and we're",
    "start": "40440",
    "end": "45840"
  },
  {
    "text": "going to be using instruct to host the labs and that's going to be how we go about that part of it",
    "start": "45840",
    "end": "52038"
  },
  {
    "text": "so our agenda for today is uh psyllium and evpf introduction we're going to",
    "start": "53940",
    "end": "59039"
  },
  {
    "text": "talk a little bit about like what we've been building at isabellent as part of the open source psyllium project we're going to talk a little bit about",
    "start": "59039",
    "end": "64860"
  },
  {
    "text": "tetragon and then we're going to jump into like some examples here and then we're going to go into the lab",
    "start": "64860",
    "end": "71118"
  },
  {
    "text": "so first the open source projects that we work on at ISO valence are psyllium and evpf we",
    "start": "71820",
    "end": "77700"
  },
  {
    "text": "are actually have a lot of Kernel maintainers in working at isovalent directly working in ebpf in the kernel",
    "start": "77700",
    "end": "84299"
  },
  {
    "text": "pretty exciting and isobalant is the company behind it we also provide a product that's called",
    "start": "84299",
    "end": "89400"
  },
  {
    "text": "psyllium Enterprise I'm not going to spend a lot of time talking about that today but if you'd like to know more there's definitely a booth that we'll be",
    "start": "89400",
    "end": "94920"
  },
  {
    "text": "happy to tell you all about it so ebpf is that how here has heard of",
    "start": "94920",
    "end": "100920"
  },
  {
    "text": "ebpf I like seeing the number of hands go up higher and higher like every time you",
    "start": "100920",
    "end": "105960"
  },
  {
    "text": "know it's great love to see it so evpf basically makes the Linux kernel",
    "start": "105960",
    "end": "111360"
  },
  {
    "text": "programmable in a secure and efficient way and it's one of the analogs here is to say that it is like JavaScript in the",
    "start": "111360",
    "end": "118200"
  },
  {
    "text": "browser but ebpf is to the kernel another way to think about this I'm probably drifting it out of the",
    "start": "118200",
    "end": "124079"
  },
  {
    "text": "microphone and I'm sorry about that but I move around a lot when I talk but um another way to think about that is if you consider that's probably a good idea",
    "start": "124079",
    "end": "131940"
  },
  {
    "text": "do you want to switch to this microphone please not hear me",
    "start": "131940",
    "end": "136700"
  },
  {
    "text": "okay um another way to think about that is if you think about the Linux kernel as an",
    "start": "136980",
    "end": "142140"
  },
  {
    "text": "API right and when I want to open a file when I want to open a socket whenever I",
    "start": "142140",
    "end": "147780"
  },
  {
    "text": "want to do anything else like that I'm actually going to make an API call ebpf gives me the ability to instrument any",
    "start": "147780",
    "end": "155099"
  },
  {
    "text": "API call you can make to the Linux kernel and when I instrument that API call",
    "start": "155099",
    "end": "160319"
  },
  {
    "text": "there are a lot of things I can do with it at that point I can modify the inputs I can mod I can",
    "start": "160319",
    "end": "165720"
  },
  {
    "text": "determine whether or not I want that API call to succeed or fail there's a ton of",
    "start": "165720",
    "end": "171239"
  },
  {
    "text": "capability there around how it works and ins and also ebpf is written in a",
    "start": "171239",
    "end": "178800"
  },
  {
    "text": "way that like if I were to write an ebpf program that would be applied to the kernel the reason we say that it is a",
    "start": "178800",
    "end": "184260"
  },
  {
    "text": "secure and efficient way is that that ebpf program has to go through a verifier to determine that that program",
    "start": "184260",
    "end": "190379"
  },
  {
    "text": "will not actually crash the kernel that it's not an endless loop it's going to make sure that this program is safe it",
    "start": "190379",
    "end": "197400"
  },
  {
    "text": "does a static code analysis before actually allowing this program to be injected into the kernel",
    "start": "197400",
    "end": "203040"
  },
  {
    "text": "and anybody who's written evpf code a couple of you nice okay probably",
    "start": "203040",
    "end": "208739"
  },
  {
    "text": "probably have a colorful four-letter acronym for the for the verifier because it can be very difficult to work with",
    "start": "208739",
    "end": "214220"
  },
  {
    "text": "sometimes but but it actually does a very important job of making sure that the code that we do inject into the",
    "start": "214220",
    "end": "219480"
  },
  {
    "text": "kernel is safe and it's efficient because it's basically running at Native kernel speeds",
    "start": "219480",
    "end": "225120"
  },
  {
    "text": "so these are some of the attachment points and in this particular demonstration we're going to be playing with a couple of these things the um the",
    "start": "225120",
    "end": "231599"
  },
  {
    "text": "file descriptor block device things we're going to be talking we're going to be showing some of that stuff in our demo we're also going to be talking",
    "start": "231599",
    "end": "236819"
  },
  {
    "text": "about sockets opening new connections to URLs and those sorts of things and when we get into the security observability",
    "start": "236819",
    "end": "242340"
  },
  {
    "text": "piece we're going to be showing you how those events or how how we instrument those things and how the events that",
    "start": "242340",
    "end": "248879"
  },
  {
    "text": "surface from those actions can be made relevant in a security observability",
    "start": "248879",
    "end": "253980"
  },
  {
    "text": "space so",
    "start": "253980",
    "end": "259680"
  },
  {
    "text": "kind of a high level overview of what evpf is and what we've been doing with it one of the first things that we thought",
    "start": "259680",
    "end": "265740"
  },
  {
    "text": "about at isovalent was kind of thinking about we we had Thomas",
    "start": "265740",
    "end": "270900"
  },
  {
    "text": "Graf who's very invested in the ebpf in the kernel space we had Dan borkman we",
    "start": "270900",
    "end": "276780"
  },
  {
    "text": "had a few other like really incredible founding Engineers that were really focused on ebpf in the Linux kernel a",
    "start": "276780",
    "end": "282780"
  },
  {
    "text": "lot of them already had some experience with networking right so Thomas and I met when he was working on the open V",
    "start": "282780",
    "end": "288900"
  },
  {
    "text": "switch project anybody heard of the openview switch project that's kind of neat",
    "start": "288900",
    "end": "294240"
  },
  {
    "text": "I don't think it's aged terribly well but it was it was an incredible experience in trying to develop",
    "start": "294240",
    "end": "299280"
  },
  {
    "text": "effectively what was the first platform that defined software-defined networking so a lot of the core of our company the",
    "start": "299280",
    "end": "306060"
  },
  {
    "text": "founding Engineers come from that sort of a mindset and they started thinking well can we",
    "start": "306060",
    "end": "311639"
  },
  {
    "text": "apply ebpf to this ebpf originally was built to be a net filter replacement originally it was built to be to be",
    "start": "311639",
    "end": "317759"
  },
  {
    "text": "something that actually helped um manipulate things much in the same way that you might think of iptables",
    "start": "317759",
    "end": "323340"
  },
  {
    "text": "and then it was extended after that because now we actually have this new capability in the Linux kernel",
    "start": "323340",
    "end": "329460"
  },
  {
    "text": "so now ebpf actually has been extended to be able to do a lot more than that it's able to do things at the",
    "start": "329460",
    "end": "334740"
  },
  {
    "text": "application layer all kinds of good stuff so psyllium was the first effort that we've put together and this is a",
    "start": "334740",
    "end": "341639"
  },
  {
    "text": "container networking interface for the um for a for a kubernetes cluster where",
    "start": "341639",
    "end": "347580"
  },
  {
    "text": "we run a psyllium agent on every node and just as a regular cni operates",
    "start": "347580",
    "end": "353400"
  },
  {
    "text": "when you see a new pod get created on a cubelet the cubelet makes a call to the cni and in psyllium's case we actually",
    "start": "353400",
    "end": "360660"
  },
  {
    "text": "generate an ebpf program for that pod and connect that using the TC layer to",
    "start": "360660",
    "end": "366539"
  },
  {
    "text": "the network namespace that that pod has been has been created in and then we use you know TC calls and these and these",
    "start": "366539",
    "end": "373919"
  },
  {
    "text": "sorts of tools in evpf to manipulate or and enforce things like Network policy",
    "start": "373919",
    "end": "379620"
  },
  {
    "text": "right so we can do so if you've written kubernetes Network policy before and you're saying that this application can",
    "start": "379620",
    "end": "385380"
  },
  {
    "text": "talk to these other applications of this other namespace how many people have written Network policy",
    "start": "385380",
    "end": "391199"
  },
  {
    "text": "so there are more people in the room that have heard of evpf than there are people who have written",
    "start": "391199",
    "end": "397440"
  },
  {
    "text": "our policy that's awesome so with this we can actually Implement Network policy in ebpf so every pod that",
    "start": "397440",
    "end": "405180"
  },
  {
    "text": "comes up every time you make a change to network policy every time Network policy is applied we're able to rewrite or",
    "start": "405180",
    "end": "411600"
  },
  {
    "text": "extend the information that we passed this ebpf program and implement this directly in ebpf in the Linux kernel to",
    "start": "411600",
    "end": "418979"
  },
  {
    "text": "allow or deny traffic for its destination or even traffic incoming to the application itself which",
    "start": "418979",
    "end": "425280"
  },
  {
    "text": "is pretty cool another thing that we can do there is that we can inside of a kubernetes",
    "start": "425280",
    "end": "432180"
  },
  {
    "text": "cluster there's another component called kubeproxy and Q proxy is sort of the internal load balancer for kubernetes so",
    "start": "432180",
    "end": "438840"
  },
  {
    "text": "when your application is trying to access a cluster IP or a service inside of the same cluster",
    "start": "438840",
    "end": "444780"
  },
  {
    "text": "the way that that works right now for most clusters out there is that Q proxy will when on the creation of the service",
    "start": "444780",
    "end": "450419"
  },
  {
    "text": "Implement in iptables effectively that service the service abstraction",
    "start": "450419",
    "end": "456240"
  },
  {
    "text": "and so when that packet leaves your application it's destined for that cluster AP iptables will pick it up and",
    "start": "456240",
    "end": "461280"
  },
  {
    "text": "it will make a routing decision about which endpoint to send that traffic to it will not the traffic and then send",
    "start": "461280",
    "end": "466620"
  },
  {
    "text": "that traffic off to the endpoint that is chosen in our case with psyllium we can replace Q proxy and again do all of that in the",
    "start": "466620",
    "end": "473639"
  },
  {
    "text": "ebpf program that we've written for every pot so when we did when we see a socket",
    "start": "473639",
    "end": "478860"
  },
  {
    "text": "connection happen at the ebpf layer right you've made that API call I want to curl another service within the",
    "start": "478860",
    "end": "485220"
  },
  {
    "text": "cluster perhaps in another namespace as soon as we see that socket happen we can determine okay what's the destination IP",
    "start": "485220",
    "end": "490979"
  },
  {
    "text": "is that destination a service IP if it's a service IP I need to go and look at the healthy endpoints for that surface",
    "start": "490979",
    "end": "497220"
  },
  {
    "text": "IP and make a routing decision about where to send that traffic we're doing all of this in ebpf",
    "start": "497220",
    "end": "504860"
  },
  {
    "text": "and then finally one of the big takeaways I mean all of you that have heard of evpf have probably heard of",
    "start": "506699",
    "end": "512700"
  },
  {
    "text": "evpf in the context of observability right the idea that you could Implement",
    "start": "512700",
    "end": "519180"
  },
  {
    "text": "ebpf to get more information about what's happening I mean if you look at things like pixie if you look at things",
    "start": "519180",
    "end": "524820"
  },
  {
    "text": "like our own tetragon or Hubble observability there's a ton of context that ebpf can give you because it has a",
    "start": "524820",
    "end": "532320"
  },
  {
    "text": "view at what of what's happening at the kernel layer and that's again a first class piece of",
    "start": "532320",
    "end": "538380"
  },
  {
    "text": "psyllium and a first class piece of pretty much everything we've written whether it's psyllium the the cni or whether it's tetragon more in the",
    "start": "538380",
    "end": "544620"
  },
  {
    "text": "application space we're going to get to it in a minute to kind of talk a little bit more about it but observability is like a first class use case in",
    "start": "544620",
    "end": "550140"
  },
  {
    "text": "everything that we built",
    "start": "550140",
    "end": "552920"
  },
  {
    "text": "so this side actually talks a little bit about a little bit more about kind of the entire products we are the way that",
    "start": "559440",
    "end": "564540"
  },
  {
    "text": "we think about the entire project in general right we think about psyllium as the the",
    "start": "564540",
    "end": "569640"
  },
  {
    "text": "psyllium cni piece here at the bottom that is basically what I've been talking about before and I was giving you a kind",
    "start": "569640",
    "end": "574680"
  },
  {
    "text": "of high level overview but you can see that it has a lot of advanced capabilities it could do Network policy",
    "start": "574680",
    "end": "580019"
  },
  {
    "text": "at the layer 7 Network layer we can also do layers we can also Network policy on",
    "start": "580019",
    "end": "585300"
  },
  {
    "text": "fqdns again all implemented in iptable or in evpf we can enable encryption on the",
    "start": "585300",
    "end": "591720"
  },
  {
    "text": "underlying nodes you can use ipsec or wireguard with load balancing you can do we can replace the kubernetes load",
    "start": "591720",
    "end": "597660"
  },
  {
    "text": "balancing mechanism which I spoke about before we also have other more advanced load balancing mechanisms like actually",
    "start": "597660",
    "end": "603180"
  },
  {
    "text": "running psyllium as an external load balancer that can make use of things like maglev which is a mechanism by",
    "start": "603180",
    "end": "608640"
  },
  {
    "text": "which you can have multiple load balancers and they all understand the right path back to an already connected",
    "start": "608640",
    "end": "613980"
  },
  {
    "text": "to service and that sort of stuff or you can do DSR and then in the networking space we can under we can do",
    "start": "613980",
    "end": "620760"
  },
  {
    "text": "things like flatten the network um between multiple kubernetes clusters so that you can create things like a",
    "start": "620760",
    "end": "626880"
  },
  {
    "text": "global Service and have that global Service be serviced by back-ends in multiple clusters pretty cool stuff and",
    "start": "626880",
    "end": "633600"
  },
  {
    "text": "obviously we work in all of the different Cloud environments and in those Cloud environments we've been generally chosen as either a very",
    "start": "633600",
    "end": "640500"
  },
  {
    "text": "important partner to those cloud and Cloud environments or we've been chosen as the default independent depending on",
    "start": "640500",
    "end": "646140"
  },
  {
    "text": "where you're looking so in AWS eks for example where the default the psyllium OSS is the default",
    "start": "646140",
    "end": "652320"
  },
  {
    "text": "cni for AWS eks if you go to Azure we've just announced in the last kubecon a",
    "start": "652320",
    "end": "657959"
  },
  {
    "text": "very large partnership with them and when you're spinning up an AKs cluster today you can actually select",
    "start": "657959",
    "end": "663720"
  },
  {
    "text": "open source psyllium azure cni or you can also select psyllium Enterprise if",
    "start": "663720",
    "end": "669180"
  },
  {
    "text": "there's more value to you in that way with azure we support Alibaba Cloud we have an openshift operator for both OSS and",
    "start": "669180",
    "end": "675720"
  },
  {
    "text": "Enterprise same thing for VMware and for Google Cloud we are sodium psyllium is",
    "start": "675720",
    "end": "682200"
  },
  {
    "text": "the underlying technology behind Google's data plane V2",
    "start": "682200",
    "end": "687980"
  },
  {
    "text": "nope all right and then over here on the right is this new project that's",
    "start": "689579",
    "end": "694680"
  },
  {
    "text": "actually one of our newer projects that we actually just announced I think it was the last in the last kubecon about tetragon and tetragon really",
    "start": "694680",
    "end": "701339"
  },
  {
    "text": "introduces a completely different implementation and I'm just going to focus on that for just a moment and then we'll talk a little bit more about some",
    "start": "701339",
    "end": "708000"
  },
  {
    "text": "of the detail here so as you as as you've already kind of put together this stack on the left is really more",
    "start": "708000",
    "end": "713700"
  },
  {
    "text": "about networking it's really more about networking and",
    "start": "713700",
    "end": "719040"
  },
  {
    "text": "then psyllium Hubble is the observability suite where do we send our metrics how do we handle tracing is there how do we can how can I understand",
    "start": "719040",
    "end": "724980"
  },
  {
    "text": "the connectivity between my applications in a visual way we're starting to implement many of the use cases of",
    "start": "724980",
    "end": "731519"
  },
  {
    "text": "service mesh in psyllium as features which we call service which we call service mesh so we're implementing",
    "start": "731519",
    "end": "737940"
  },
  {
    "text": "things like Ingress in the form of Gateway API we're implementing things like authentication mtls is coming soon",
    "start": "737940",
    "end": "743519"
  },
  {
    "text": "it's not here yet but I'm really excited to see it Rafael and I have seen it live in the uh in our All Hands it was pretty",
    "start": "743519",
    "end": "750360"
  },
  {
    "text": "exciting but over here on the right this red box is tetragon and it's a new project that",
    "start": "750360",
    "end": "756600"
  },
  {
    "text": "implements a completely different part of the Linux kernel instead of implementing things at the",
    "start": "756600",
    "end": "762300"
  },
  {
    "text": "network namespace and trying to do things like Network level enforcement and those sorts of things we're actually implementing a different place where and",
    "start": "762300",
    "end": "769560"
  },
  {
    "text": "where anything where it's basically the front door of a Linux kernel itself so that we can see every system call that",
    "start": "769560",
    "end": "776579"
  },
  {
    "text": "goes through and make a decision or we can enable you to configure tetragon to watch for anything that happens in the",
    "start": "776579",
    "end": "783300"
  },
  {
    "text": "Linux kernel and make a decision about what to do with that right whether to send an event perhaps I want to",
    "start": "783300",
    "end": "788880"
  },
  {
    "text": "understand anytime any process anywhere in the cluster tries to do a set uid",
    "start": "788880",
    "end": "794940"
  },
  {
    "text": "system call right set uid is a system call that you would use to make an",
    "start": "794940",
    "end": "800040"
  },
  {
    "text": "executable executable by somebody perhaps in a different privilege set than you have right so if you wanted to",
    "start": "800040",
    "end": "805139"
  },
  {
    "text": "make I don't know sudo something that could be used by any user you might use",
    "start": "805139",
    "end": "810180"
  },
  {
    "text": "a set uid system call to change the permission of the of that binary so that anybody could actually operate or",
    "start": "810180",
    "end": "816180"
  },
  {
    "text": "execute that binary in that context tetragon can be",
    "start": "816180",
    "end": "822420"
  },
  {
    "text": "configured so that it's watching for this that you might use some system call and if it sees any process anywhere make",
    "start": "822420",
    "end": "828300"
  },
  {
    "text": "it then it will gather a bunch of information about that process whether that process was successful",
    "start": "828300",
    "end": "833339"
  },
  {
    "text": "whether it was not successful and it will Emit and by default it will emit an event whenever it sees these things",
    "start": "833339",
    "end": "839339"
  },
  {
    "text": "giving you a lot of context about what happened right where was this process was it inside of a container was that",
    "start": "839339",
    "end": "845820"
  },
  {
    "text": "container part of a pod was that pod in a namespace which cluster was it a part of like all of the relevant questions",
    "start": "845820",
    "end": "851700"
  },
  {
    "text": "that you would need to really be able to kind of put together a story of where this happened when this happened and did",
    "start": "851700",
    "end": "858180"
  },
  {
    "text": "it work right you can imagine how this is relevant because in security observability some of the use cases that",
    "start": "858180",
    "end": "864540"
  },
  {
    "text": "we're targeting are right you come to work on Monday something terrible has happened over the",
    "start": "864540",
    "end": "870060"
  },
  {
    "text": "weekend your manager has come to you and said I need to know everything about what",
    "start": "870060",
    "end": "875639"
  },
  {
    "text": "happened on Saturday it seems as though someone exfiltrated a bunch of data from",
    "start": "875639",
    "end": "880680"
  },
  {
    "text": "my environment it was headed for this weird URL can you",
    "start": "880680",
    "end": "885959"
  },
  {
    "text": "show me everything you know about it in most kubernetes clusters this is",
    "start": "885959",
    "end": "891300"
  },
  {
    "text": "going to be really tough because like you're going to be in a position where you're like you can if",
    "start": "891300",
    "end": "897300"
  },
  {
    "text": "the best thing you could say is like can you do it again and then I could I could see if I can find it you know like I can",
    "start": "897300",
    "end": "903120"
  },
  {
    "text": "go look at the audit logs but what was the IP address of that POD at the time those IP addresses are ephemeral there's like you can see the number of problems",
    "start": "903120",
    "end": "909660"
  },
  {
    "text": "that those things represent with tetragon you get an event stream and all of those events can be sent to",
    "start": "909660",
    "end": "915660"
  },
  {
    "text": "your splunker to an S to a Sim Etc and because the way because of the way that we're Gathering context around all",
    "start": "915660",
    "end": "922260"
  },
  {
    "text": "of those events those events become a rich body of data that can be used to answer these",
    "start": "922260",
    "end": "928860"
  },
  {
    "text": "particular questions so these are some of the adopters of psyllium and tetricon",
    "start": "928860",
    "end": "936300"
  },
  {
    "text": "we've been working with lots and lots of customers both open source and um and both and Enterprise agreements if you",
    "start": "936300",
    "end": "943139"
  },
  {
    "text": "are an adopter of psyllium or if you're using tetragon I do request that you go to our GitHub",
    "start": "943139",
    "end": "949019"
  },
  {
    "text": "so github.com psyllium you're going to find a user's document in there go ahead and put your name in there and say that",
    "start": "949019",
    "end": "954779"
  },
  {
    "text": "you're using it if you're using it whether it's open source that would be tremendous it's all part of our effort to get to",
    "start": "954779",
    "end": "960720"
  },
  {
    "text": "graduation of this project so if you're a company that is making use of psyllium go put your name on the users list thank",
    "start": "960720",
    "end": "966839"
  },
  {
    "text": "you very much so tetragon it's like as I said it is",
    "start": "966839",
    "end": "971940"
  },
  {
    "text": "the newest open source project in psyllium it's evpf based which means it's high performance and has zero",
    "start": "971940",
    "end": "977399"
  },
  {
    "text": "modifications are required to the application itself and it hooks into kernel functions after",
    "start": "977399",
    "end": "983100"
  },
  {
    "text": "parameters are copied so as I said before when we actually surface an event that we have gathered",
    "start": "983100",
    "end": "989699"
  },
  {
    "text": "about what's happened inside of the Linux kernel we instrument that uh with that that event with information that",
    "start": "989699",
    "end": "995820"
  },
  {
    "text": "makes it easy to understand contextually when who how why it happened",
    "start": "995820",
    "end": "1002000"
  },
  {
    "text": "whether it was successful now one thing I it mentions on this slide that I haven't talked about is that action of emitting an event is just",
    "start": "1002000",
    "end": "1009320"
  },
  {
    "text": "one of the actions that is available to you right you can also do things like kill the process",
    "start": "1009320",
    "end": "1015440"
  },
  {
    "text": "so if I saw somebody running a set uid call and I wanted to actually make it so that that was just not possible in in",
    "start": "1015440",
    "end": "1021620"
  },
  {
    "text": "any process in the entirety of the cluster whether running inside of a container or running on the underlying",
    "start": "1021620",
    "end": "1027079"
  },
  {
    "text": "host OS I could actually Implement a tetragon policy or tracing policy that",
    "start": "1027079",
    "end": "1032780"
  },
  {
    "text": "would block the set UI ID system call across the board everywhere",
    "start": "1032780",
    "end": "1038980"
  },
  {
    "text": "if you want to know more about tetragon you can also go to our GitHub there so that's github.com psyllium",
    "start": "1039740",
    "end": "1047299"
  },
  {
    "text": "evpf makes it Dynamic that example I talked about with set uid one of the",
    "start": "1051580",
    "end": "1057860"
  },
  {
    "text": "other ways to solve that particular problem is an older Linux technology called setcomp or secure computing",
    "start": "1057860",
    "end": "1065600"
  },
  {
    "text": "secure Computing and set comp and those and a lot of these models um actually I'm curious how many people",
    "start": "1065600",
    "end": "1071120"
  },
  {
    "text": "have heard of SEC comp nice so you understand that set comp is",
    "start": "1071120",
    "end": "1076160"
  },
  {
    "text": "something that you can implement but you have to do it before the process starts because you have to associate that",
    "start": "1076160",
    "end": "1081200"
  },
  {
    "text": "process with that setcom policy before the process starts you can't dynamically change it",
    "start": "1081200",
    "end": "1088280"
  },
  {
    "text": "so if you wanted to add more to the second policy or modify it in some way you have to restart that process to pick",
    "start": "1088280",
    "end": "1093860"
  },
  {
    "text": "up the change to the policy that you've written but in ebpf that's not the case right",
    "start": "1093860",
    "end": "1099799"
  },
  {
    "text": "this is an ebpf program that I'm going to inject or insert into the Linux kernel and Associate it with particular",
    "start": "1099799",
    "end": "1106340"
  },
  {
    "text": "calls and I can do that dynamically means that if I wanted to continuously",
    "start": "1106340",
    "end": "1112520"
  },
  {
    "text": "iterate on the number of system calls that I wanted to block or change in a sitcom bundle I could actually just",
    "start": "1112520",
    "end": "1118880"
  },
  {
    "text": "iterate on it directly or I could wait for in the in the case of the the site",
    "start": "1118880",
    "end": "1124039"
  },
  {
    "text": "uid call this particular call is required by most container runtimes to",
    "start": "1124039",
    "end": "1129799"
  },
  {
    "text": "be able to create the container itself so if you blocked it globally on a kubernetes cluster you'd have a really",
    "start": "1129799",
    "end": "1135860"
  },
  {
    "text": "bad day but if you were using something like if you're using something like psyllium",
    "start": "1135860",
    "end": "1141559"
  },
  {
    "text": "tetragon to make that policy you could apply that policy after the pods had been created",
    "start": "1141559",
    "end": "1148039"
  },
  {
    "text": "which means that the system the set uid system calls that are needed by the container runtime have already taken",
    "start": "1148039",
    "end": "1153799"
  },
  {
    "text": "place and now you're saying from this point where the program application or the application is started",
    "start": "1153799",
    "end": "1159559"
  },
  {
    "text": "I now want to apply this policy and from here on no site uid calls can run from",
    "start": "1159559",
    "end": "1164600"
  },
  {
    "text": "the from within these containers",
    "start": "1164600",
    "end": "1167980"
  },
  {
    "text": "it as we talked about before it protects the pre-existing processes use uses kernel knowledge to hook into",
    "start": "1174980",
    "end": "1180740"
  },
  {
    "text": "sufficiently stable functions and multiple and can handle multiple coordinated ebpf programs right so you",
    "start": "1180740",
    "end": "1188539"
  },
  {
    "text": "can actually take action this is where like for example when we see that there is a event that we want to trigger on",
    "start": "1188539",
    "end": "1194480"
  },
  {
    "text": "what are the actions that we want to actually have happen when we see those things happen",
    "start": "1194480",
    "end": "1200419"
  },
  {
    "text": "and there is also some internal in in kernel event filtering as you're going to be able to see here in just a little",
    "start": "1200419",
    "end": "1205820"
  },
  {
    "text": "while we get to the labs when you're looking at the amount of event data that we can produce it can be a lot right",
    "start": "1205820",
    "end": "1212480"
  },
  {
    "text": "there's a ton of event data that we can produce and the question often comes well like how can I limit how much",
    "start": "1212480",
    "end": "1219679"
  },
  {
    "text": "information I'm actually going to get out of that so that I can only just Target those things that I care about and send that to Splunk so I'm not",
    "start": "1219679",
    "end": "1226160"
  },
  {
    "text": "sending everything just so we do have internal vent filtering",
    "start": "1226160",
    "end": "1231860"
  },
  {
    "text": "and we also have user space filtering right so once the event has come down and we're propagating we're propagating",
    "start": "1231860",
    "end": "1237320"
  },
  {
    "text": "that event into a into the stream that we're going that you're going to send to whatever",
    "start": "1237320",
    "end": "1242480"
  },
  {
    "text": "collection you're looking for you can also filter it at that point",
    "start": "1242480",
    "end": "1247600"
  },
  {
    "text": "so I like this slide because it really kind of hits something that I always like to say which is context is everything the context is King if you",
    "start": "1248780",
    "end": "1255380"
  },
  {
    "text": "don't have context about these things it becomes very difficult to actually understand it right if you can't measure it you don't can't you can't improve it",
    "start": "1255380",
    "end": "1262039"
  },
  {
    "text": "Etc so in this case where the the example here is that you would write policy when",
    "start": "1262039",
    "end": "1267740"
  },
  {
    "text": "you see that when you see malicious detector behave when you see malicious behavior detected you can actually make",
    "start": "1267740",
    "end": "1273440"
  },
  {
    "text": "sure that you get an alert that is actionable you can send that alert to logs you can",
    "start": "1273440",
    "end": "1278600"
  },
  {
    "text": "see you can actually have that alert take an action Etc but the important piece is it's not",
    "start": "1278600",
    "end": "1284120"
  },
  {
    "text": "just telling you hey somebody made this system call it's telling you this process",
    "start": "1284120",
    "end": "1289580"
  },
  {
    "text": "running inside of this pod running inside of this namespace running inside of this cluster made this system call at this time and",
    "start": "1289580",
    "end": "1297020"
  },
  {
    "text": "it was successful right there's a lot of information that you can gather here and it's not just",
    "start": "1297020",
    "end": "1302480"
  },
  {
    "text": "system calls right you can do these things with uh you could we actually just recently",
    "start": "1302480",
    "end": "1307580"
  },
  {
    "text": "implemented file Integrity monitoring so when we the first time we see a file",
    "start": "1307580",
    "end": "1312919"
  },
  {
    "text": "get touched we take a check sum of that file we stored in an ebpf map the next time we see that file system",
    "start": "1312919",
    "end": "1319820"
  },
  {
    "text": "that file get touched if the checksum is different then we understand that it's different and we can alert you on the",
    "start": "1319820",
    "end": "1325039"
  },
  {
    "text": "fact that the file is no that file Integrity has been changed",
    "start": "1325039",
    "end": "1330759"
  },
  {
    "text": "how does it all work though so tetragon runs much the same way that",
    "start": "1333679",
    "end": "1341120"
  },
  {
    "text": "psyllium does in the form of a Dame insect and just like psyllium it can also run on Virtual machines or other",
    "start": "1341120",
    "end": "1346940"
  },
  {
    "text": "external entities directly tetragon does not require that psyllium",
    "start": "1346940",
    "end": "1352039"
  },
  {
    "text": "is also deployed you can run tetragon only and in fact we're seeing a number of customers",
    "start": "1352039",
    "end": "1357320"
  },
  {
    "text": "trying to solve the security observability use case specifically doing exactly that",
    "start": "1357320",
    "end": "1362659"
  },
  {
    "text": "because it can actually give them a lot more context a lot more data about what's happening in their runtimes",
    "start": "1362659",
    "end": "1367820"
  },
  {
    "text": "without having to actually change the underlying cni to accomplish it",
    "start": "1367820",
    "end": "1373360"
  },
  {
    "text": "because it runs as a Daemon set it is going to instrument the Linux kernel on every node in your cluster or every",
    "start": "1373520",
    "end": "1379220"
  },
  {
    "text": "machine that you apply a tetragon agent to and through the um through the crd in your",
    "start": "1379220",
    "end": "1385880"
  },
  {
    "text": "kubernetes cluster you can go ahead and configure tetragon such that it will be able to handle all the all of the events",
    "start": "1385880",
    "end": "1391940"
  },
  {
    "text": "that you're you're trying to look for some examples of the things that you can actually key on are are here in this",
    "start": "1391940",
    "end": "1399080"
  },
  {
    "text": "graph so process executions just call execution file access we can look for interesting patterns in TCP we can look",
    "start": "1399080",
    "end": "1406100"
  },
  {
    "text": "for namespace escapes we can look for privileged escalations have somebody done a sudo inside of a container or has",
    "start": "1406100",
    "end": "1411500"
  },
  {
    "text": "a process tried to change out of the PID namespace that it was started in into another pit name space Etc",
    "start": "1411500",
    "end": "1418400"
  },
  {
    "text": "we can understand data access we can also expose metrics because we were able",
    "start": "1418400",
    "end": "1423740"
  },
  {
    "text": "to instrument the Linux kernel directly here we can actually look at the data the data that's going by and expose",
    "start": "1423740",
    "end": "1430100"
  },
  {
    "text": "metrics for HTTP for DNS and for TLS so one of the other questions that people can ask in a security Observer real use",
    "start": "1430100",
    "end": "1437240"
  },
  {
    "text": "case is something like what TLs ciphers are Cipher Suites are in use",
    "start": "1437240",
    "end": "1443720"
  },
  {
    "text": "this is I mean this is frequently a compliance check or compliance control that you have to satisfy in your",
    "start": "1443720",
    "end": "1448940"
  },
  {
    "text": "infrastructure right all of the workloads in your cluster cannot be you can none of the workloads in your",
    "start": "1448940",
    "end": "1454820"
  },
  {
    "text": "cluster can use TLS Cypher Suites of this particular of this particular type how would you audit that today right",
    "start": "1454820",
    "end": "1461659"
  },
  {
    "text": "like it would be pretty difficult I know that some of you have probably faced that challenge but with this it would actually be relatively easy",
    "start": "1461659",
    "end": "1467720"
  },
  {
    "text": "because we have that context already and we're producing it at the user Space level",
    "start": "1467720",
    "end": "1473320"
  },
  {
    "text": "so some of the questions that you could be asking questions are some of the things you could be asking questions about is Network traffic right we have",
    "start": "1473659",
    "end": "1479659"
  },
  {
    "text": "layer 7 parchers so we can actually take a look at the network socket layer and say you know for this app this",
    "start": "1479659",
    "end": "1485360"
  },
  {
    "text": "application tried to make a curl command and that curl command tried to connect to this DNS paths to this DNS name",
    "start": "1485360",
    "end": "1491000"
  },
  {
    "text": "google.com or whatever and we can actually show you what the resolved name was we can actually we",
    "start": "1491000",
    "end": "1497539"
  },
  {
    "text": "have DNS parsers to make sure that we understand at the time of that execution with the resolved IP address was whether",
    "start": "1497539",
    "end": "1503840"
  },
  {
    "text": "they were trying to do like a bypass of DNS if you're doing like any of that stuff we can also instrument file and I",
    "start": "1503840",
    "end": "1510679"
  },
  {
    "text": "O activity so anytime somebody touches a file any anytime somebody you know you can actually protect whole directories",
    "start": "1510679",
    "end": "1516140"
  },
  {
    "text": "or just specific files any record any running executables and whether new ones have been spawned at a",
    "start": "1516140",
    "end": "1522380"
  },
  {
    "text": "later date and obviously system call and and changing Privileges and namespace boundaries as well",
    "start": "1522380",
    "end": "1529659"
  },
  {
    "text": "now some of the examples of how we implement this so this is an example of a tracing policy and you're going to be",
    "start": "1531740",
    "end": "1537740"
  },
  {
    "text": "able to you're going to be playing with this directly here in just a minute so in this example the of the tracing",
    "start": "1537740",
    "end": "1543679"
  },
  {
    "text": "policy we're looking for that set uid a system call and specifically",
    "start": "1543679",
    "end": "1551080"
  },
  {
    "text": "so this one is interesting because we're looking for that particular system call and when we see it we're just going to emit an event on it",
    "start": "1554059",
    "end": "1562059"
  },
  {
    "text": "and this is an example of what we might see of how we might be able to query that data in spunk right so this example",
    "start": "1562640",
    "end": "1569299"
  },
  {
    "text": "looks at all of the event data it looks for the binary bin sh and it looks for",
    "start": "1569299",
    "end": "1574400"
  },
  {
    "text": "what's actually hap what you know when that process was started and tries to actually produce this data in a",
    "start": "1574400",
    "end": "1579980"
  },
  {
    "text": "relatively time so in this example we're looking for anything that actually happened after five minutes from the time that",
    "start": "1579980",
    "end": "1586940"
  },
  {
    "text": "the initial the initial process inside of that container started",
    "start": "1586940",
    "end": "1591820"
  },
  {
    "text": "foreign this is actually making use of the tetragon CLI so the tetragon CLI can",
    "start": "1592179",
    "end": "1597919"
  },
  {
    "text": "actually show you it can parse those events and make them a little bit easier to understand so in this example we're saying if you",
    "start": "1597919",
    "end": "1604220"
  },
  {
    "text": "have written the policy that says anybody trying to make a right to root.ssh authorized Keys we should just",
    "start": "1604220",
    "end": "1611419"
  },
  {
    "text": "kill that process right away and emit an event around it right and so here in this example there are some some",
    "start": "1611419",
    "end": "1618799"
  },
  {
    "text": "of the example events that you would see in that case somebody tried to V it's well actually",
    "start": "1618799",
    "end": "1624200"
  },
  {
    "text": "it doesn't quite line up with the text but you get the idea in this case it's saying if somebody actually wrote to",
    "start": "1624200",
    "end": "1629840"
  },
  {
    "text": "Etsy shadow instead of actually allowing that right I want to kill it so you might still see the number of",
    "start": "1629840",
    "end": "1636500"
  },
  {
    "text": "bytes that are that would go into the file but that file will not actually be written because the process will be killed before the right can happen",
    "start": "1636500",
    "end": "1644620"
  },
  {
    "text": "we can also Monitor and prevent capability abuse right so if somebody's using in a center to move back and forth",
    "start": "1646279",
    "end": "1652400"
  },
  {
    "text": "between different between different name spaces within the same Linux kernel this is something that we can detect because",
    "start": "1652400",
    "end": "1658460"
  },
  {
    "text": "it is all within the r scope inside of the Linux kernel itself",
    "start": "1658460",
    "end": "1664000"
  },
  {
    "text": "and that is the introduction so now we're going to go into the lab before I jump over before we jump over to",
    "start": "1664100",
    "end": "1670580"
  },
  {
    "text": "um Raphael's laptop here this is the link to the lab",
    "start": "1670580",
    "end": "1677480"
  },
  {
    "text": "ISO go.2 slash",
    "start": "1677480",
    "end": "1682960"
  },
  {
    "text": "kccn c u c e u Dash tetragon take a picture",
    "start": "1682960",
    "end": "1688580"
  },
  {
    "text": "write it down this is where we're going this is where we're going to spend the rest of the time here in this afternoon",
    "start": "1688580",
    "end": "1694340"
  },
  {
    "text": "so this is ISO go.2 kubecon Cloud nativecon EU",
    "start": "1694340",
    "end": "1701539"
  },
  {
    "text": "Dash tetragon",
    "start": "1701539",
    "end": "1704919"
  },
  {
    "text": "once Raphael takes over I'm going to come around and make sure that everybody understands how to get how to get there but this is the lab that we're going to",
    "start": "1708140",
    "end": "1714200"
  },
  {
    "text": "start up and when you go to that URL you're going to see two Labs the first",
    "start": "1714200",
    "end": "1721039"
  },
  {
    "text": "one is the open source one so I want you to click on that one",
    "start": "1721039",
    "end": "1726220"
  },
  {
    "text": "and then it'll take a couple minutes to start up and while we're waiting for that to happen sorry Rafael will tell",
    "start": "1726260",
    "end": "1732980"
  },
  {
    "text": "you a little bit about what the lab is going to cover and we're going to jump into it",
    "start": "1732980",
    "end": "1737679"
  },
  {
    "text": "don't raise your hand if you haven't taken a picture of the URL",
    "start": "1738860",
    "end": "1744140"
  },
  {
    "text": "or if you don't know what the URL is sweet okay that means that everybody has",
    "start": "1744140",
    "end": "1750799"
  },
  {
    "text": "what they need here and I can move on right awesome",
    "start": "1750799",
    "end": "1756940"
  },
  {
    "text": "thanks Steffy let's change the laptops",
    "start": "1758240",
    "end": "1765520"
  },
  {
    "text": "that's neat and there's still some time so",
    "start": "1778000",
    "end": "1784840"
  },
  {
    "text": "how does this work oh yeah to Islam",
    "start": "1791779",
    "end": "1797380"
  },
  {
    "text": "is that your phone",
    "start": "1804740",
    "end": "1807760"
  },
  {
    "text": "yeah yeah one more thing I wanted to point out is that there are standing microphones in the aisles",
    "start": "1809919",
    "end": "1816980"
  },
  {
    "text": "so if at any time you have a question during the lab or if there's anything you want more clarity on or anything I'm",
    "start": "1816980",
    "end": "1822200"
  },
  {
    "text": "going to be walking around trying to answer your questions but there are a lot of you and so if there's anything that would anything you would like to",
    "start": "1822200",
    "end": "1828200"
  },
  {
    "text": "ask you can actually come to one of the sending microphones and ask that question and we'll be able to answer it here",
    "start": "1828200",
    "end": "1835399"
  },
  {
    "text": "for the record I added the TLs visibility because you mentioned it okay",
    "start": "1835399",
    "end": "1841059"
  },
  {
    "text": "so hi everyone you should be getting to this page if your access to the internet is working fine",
    "start": "1842960",
    "end": "1848539"
  },
  {
    "text": "so we're going to go through this uh this instruct Labs so they're based on a",
    "start": "1848539",
    "end": "1854779"
  },
  {
    "text": "platform called instruct that actually uses VM in the cloud in this case we'll be using VM in Google Cloud but you",
    "start": "1854779",
    "end": "1860720"
  },
  {
    "text": "don't need to have an account you don't need to care about this this will all be uh in your web browser the three Labs",
    "start": "1860720",
    "end": "1868279"
  },
  {
    "text": "that are listed here the one we're going to concentrate on at this point is the first one which is based on tetragon",
    "start": "1868279",
    "end": "1873740"
  },
  {
    "text": "open source and we'll show tetragon from a CLI perspective um I will go slowly and explain things",
    "start": "1873740",
    "end": "1880940"
  },
  {
    "text": "and take the time to follow up with you uh um follow up follow along with you on this lab but if you want to go faster",
    "start": "1880940",
    "end": "1887600"
  },
  {
    "text": "you want to run ahead you can do that totally and you can do the the next labs",
    "start": "1887600",
    "end": "1892640"
  },
  {
    "text": "actually uh we have about 20 labs in total that are available at this address",
    "start": "1892640",
    "end": "1898760"
  },
  {
    "text": "here um isavilion.com Labs you don't need the resource Library it's just a redirection",
    "start": "1898760",
    "end": "1904279"
  },
  {
    "text": "so isobelin.com labs and you have about 20 Labs here that talk about psyllium",
    "start": "1904279",
    "end": "1910460"
  },
  {
    "text": "Hubble tetragon lots of things all these labs are entirely free the only reason why we provide the invitation is you",
    "start": "1910460",
    "end": "1917059"
  },
  {
    "text": "don't need to go through the marketing uh you know giving your name and address so the three ones here you won't have to",
    "start": "1917059",
    "end": "1923059"
  },
  {
    "text": "give your name and address but if you want to take the other labs and you have questions about them as as it goes if it",
    "start": "1923059",
    "end": "1928520"
  },
  {
    "text": "doesn't disrupt the whole thing you know feel free to do that as well this is perfectly fine",
    "start": "1928520",
    "end": "1934100"
  },
  {
    "text": "so let's get started with this first lab I'll start it right away and I'll talk about it a bit",
    "start": "1934100",
    "end": "1941840"
  },
  {
    "text": "so this is um this is actually the first lab that we made with citragon so just um uh",
    "start": "1941840",
    "end": "1947360"
  },
  {
    "text": "Duffy explained a little bit tetragon is the newest of the projects within the celian projects of the open source",
    "start": "1947360",
    "end": "1953779"
  },
  {
    "text": "projects within the cilium project and it was released during kubecon and Valencia last year",
    "start": "1953779",
    "end": "1959960"
  },
  {
    "text": "but it actually has a history so if you do check out the enterprise-based labs",
    "start": "1959960",
    "end": "1965419"
  },
  {
    "text": "that are listed afterwards they may be actually older than texting on itself uh",
    "start": "1965419",
    "end": "1970760"
  },
  {
    "text": "because tetragon was actually part of the eyes of Aliens film Enterprise uh uh",
    "start": "1970760",
    "end": "1976059"
  },
  {
    "text": "tooling before it was open source so what was open source is part of what was part of the the Enterprise offering",
    "start": "1976059",
    "end": "1982880"
  },
  {
    "text": "before um you can have a look at the explanations that I hear while this is loading so it takes usually about a",
    "start": "1982880",
    "end": "1989419"
  },
  {
    "text": "minute one one to two minutes to start the VM under the hood this is starting a new VM for you you'll have your own VM",
    "start": "1989419",
    "end": "1995659"
  },
  {
    "text": "you can do whatever you want with it if you want to trash it crash it you don't just look around whatever I don't",
    "start": "1995659",
    "end": "2002080"
  },
  {
    "text": "personally care what you do with the VM but don't ask questions on why it's not working if you actually crash the whole",
    "start": "2002080",
    "end": "2008500"
  },
  {
    "text": "VM right so Duffy talked about the need for",
    "start": "2008500",
    "end": "2013600"
  },
  {
    "text": "security observability and how sodium tetragon solves this so as he said the idea is we can actually plug to a lot of",
    "start": "2013600",
    "end": "2020860"
  },
  {
    "text": "the apis in the kernel a lot of the ciscals the K probes u-probes and so on using tetragon and attached to events in",
    "start": "2020860",
    "end": "2028960"
  },
  {
    "text": "the kernel and actually um derive information from these events",
    "start": "2028960",
    "end": "2034539"
  },
  {
    "text": "or even react to this information um there's a book as well and it so",
    "start": "2034539",
    "end": "2041679"
  },
  {
    "text": "happens that I think this book is available at the age of uh booth and uh one of the authors Natalia I don't know",
    "start": "2041679",
    "end": "2048158"
  },
  {
    "text": "if Jed is around when I tell you guys here and she can actually sign the book if you want just saying so this is a",
    "start": "2048159",
    "end": "2053980"
  },
  {
    "text": "book that's related to tetragon and the this lab is actually taken from this book that was released last year",
    "start": "2053980",
    "end": "2061419"
  },
  {
    "text": "all right let's get started I think if you look like roughly at the same time as me your lab should have started",
    "start": "2061419",
    "end": "2067839"
  },
  {
    "text": "already so you should have a green button at the bot at the bottom at the in the lower right corner you click that",
    "start": "2067839",
    "end": "2074858"
  },
  {
    "text": "green button and you'll have this beautiful interface",
    "start": "2074859",
    "end": "2080878"
  },
  {
    "text": "so this is the instruct interface so here we have the instructions on the right",
    "start": "2081159",
    "end": "2086618"
  },
  {
    "text": "um the instructions are foldable these foldable sections so here these are the instructions from",
    "start": "2086619",
    "end": "2092440"
  },
  {
    "text": "the first section if you need you can actually resize the colon on the right if you want to see the instructions they",
    "start": "2092440",
    "end": "2099099"
  },
  {
    "text": "had the slides they had before you can actually see them if you click the button at the top of the column here",
    "start": "2099099",
    "end": "2108720"
  },
  {
    "text": "and um and here we have the tabs so there's one tab for the terminal we're going to do things in the terminal and feel free",
    "start": "2108839",
    "end": "2115540"
  },
  {
    "text": "as well we added a tab for feedback which is essentially a Google form uh if you have problems with it and you want",
    "start": "2115540",
    "end": "2121480"
  },
  {
    "text": "to report without asking me or else you can raise your hand or pick up a mic and ask a question",
    "start": "2121480",
    "end": "2127180"
  },
  {
    "text": "don't hesitate if you have questions during during the session this is",
    "start": "2127180",
    "end": "2132820"
  },
  {
    "text": "perfectly fine so let's have a look at what we have already Cube control get node I hope this is big",
    "start": "2132820",
    "end": "2139839"
  },
  {
    "text": "enough let's see if I can zoom a bit",
    "start": "2139839",
    "end": "2143460"
  },
  {
    "text": "well this interface now happy to zoom I don't know why is it big enough for everyone can you see I mean the screen",
    "start": "2149500",
    "end": "2155140"
  },
  {
    "text": "is quite big no it's not oh but you have the same thing on your",
    "start": "2155140",
    "end": "2160900"
  },
  {
    "text": "laptop",
    "start": "2160900",
    "end": "2163380"
  },
  {
    "text": "is that better yes great thank you",
    "start": "2174220",
    "end": "2179619"
  },
  {
    "text": "in the back as well yes great yeah you have extra streams so",
    "start": "2179619",
    "end": "2185560"
  },
  {
    "text": "what do we have here you are in a VM actually you have your own VM and there",
    "start": "2185560",
    "end": "2191920"
  },
  {
    "text": "is a cluster that is started it's a kind cluster and at the moment it only has one node we only can work with one node",
    "start": "2191920",
    "end": "2197859"
  },
  {
    "text": "there's no point in actually demoing this with several nodes in prediction you would be using several nodes so we",
    "start": "2197859",
    "end": "2203140"
  },
  {
    "text": "only have a one node cluster with a control plane that's fine enough for our demo",
    "start": "2203140",
    "end": "2208420"
  },
  {
    "text": "and what we're going to do is install psyllium uh install tetragon sorry not psyllium",
    "start": "2208420",
    "end": "2213520"
  },
  {
    "text": "we're not going to install psyllium this is actually a cluster that doesn't use psyllium actually and as you can see the",
    "start": "2213520",
    "end": "2219940"
  },
  {
    "text": "cluster is marked as ready the node is marked as ready and we didn't install psyllium so that means the cni is ready",
    "start": "2219940",
    "end": "2226000"
  },
  {
    "text": "and it actually uses the default cni in kind which is not psyllium so we're going to add the helm",
    "start": "2226000",
    "end": "2233920"
  },
  {
    "text": "repository uh for psyllium which contains the the helm charts for psyllium for Hubble and for tetragram",
    "start": "2233920",
    "end": "2240640"
  },
  {
    "text": "and then install uh tetragon so I'm updating the helm repo and then",
    "start": "2240640",
    "end": "2246280"
  },
  {
    "text": "installing sodium tetragon with uh the option tetragon.export denied list",
    "start": "2246280",
    "end": "2251859"
  },
  {
    "text": "equals empty",
    "start": "2251859",
    "end": "2255240"
  },
  {
    "text": "all right so nothing special here right we're just installing using Helms it's pretty simple",
    "start": "2257079",
    "end": "2262839"
  },
  {
    "text": "uh cylindrical runs as a demon set like uh Duffy was explaining like psyllium",
    "start": "2262839",
    "end": "2268480"
  },
  {
    "text": "which means that you'll have a tetragon pod on every node so only one here in",
    "start": "2268480",
    "end": "2273760"
  },
  {
    "text": "this case because we only have one node if you had several nodes you'll have one but on each node and the reason for this",
    "start": "2273760",
    "end": "2279280"
  },
  {
    "text": "is that just like psyllium configures the node uh for networking reasons it",
    "start": "2279280",
    "end": "2285339"
  },
  {
    "text": "configures injects ebpf programs and configures ebpf maps for routing and",
    "start": "2285339",
    "end": "2290980"
  },
  {
    "text": "network policy decisions or services to replace Q proxy in this case tetragon",
    "start": "2290980",
    "end": "2296440"
  },
  {
    "text": "will inject ebpf programs and manipulate ebpf maps for security observability and",
    "start": "2296440",
    "end": "2301599"
  },
  {
    "text": "enforcement reasons so let's see if tetragon is actually rolled out yes in my case tetragon is",
    "start": "2301599",
    "end": "2310240"
  },
  {
    "text": "rolled out the the the Pod is started we",
    "start": "2310240",
    "end": "2315339"
  },
  {
    "text": "can have a look here it's deployed by default in the cube system um no it's not by default actually I",
    "start": "2315339",
    "end": "2322000"
  },
  {
    "text": "specified it it's deployed in the cube system namespace",
    "start": "2322000",
    "end": "2327280"
  },
  {
    "text": "and I can see here I'll close this a little bit there that I have indeed a tetragon pod that",
    "start": "2327280",
    "end": "2335619"
  },
  {
    "text": "is running yeah it works later okay",
    "start": "2335619",
    "end": "2341859"
  },
  {
    "text": "oh yeah because you have one yeah great perfect yes indeed thank you",
    "start": "2341859",
    "end": "2349119"
  },
  {
    "text": "so tetragon has been deployed uh it might take a little bit longer for you I don't know um but normally it's fine",
    "start": "2349119",
    "end": "2355300"
  },
  {
    "text": "that the networking anyways that is the cloud networking so I should be fine and now we're going to install on our",
    "start": "2355300",
    "end": "2362200"
  },
  {
    "text": "machine the tetragon CLI this is this is optional right but what that will give",
    "start": "2362200",
    "end": "2367599"
  },
  {
    "text": "you is that you'll have this uh so I put it here in user local bin",
    "start": "2367599",
    "end": "2374079"
  },
  {
    "text": "tetragon and this is a binary it's a go binary that we'll be using to actually",
    "start": "2374079",
    "end": "2381000"
  },
  {
    "text": "format nicely the the Json logs that we get from tetragon so it will give us",
    "start": "2381000",
    "end": "2386260"
  },
  {
    "text": "some nice colors and emojis so we understand better what's happening again this is totally optional and if",
    "start": "2386260",
    "end": "2392140"
  },
  {
    "text": "you want you could just extract the Json send it to your favorite CM platform",
    "start": "2392140",
    "end": "2397359"
  },
  {
    "text": "and do stuff with it there next now that we have tetragon tetragon",
    "start": "2397359",
    "end": "2402760"
  },
  {
    "text": "itself is not going to do much by default so we'll need to add a tracing",
    "start": "2402760",
    "end": "2408040"
  },
  {
    "text": "policy and like Duffy was showing before tracing policy is essentially it's um it's a custom resource so uh when we",
    "start": "2408040",
    "end": "2415000"
  },
  {
    "text": "install tetragon it added a custom resource definition we can actually get a look at this",
    "start": "2415000",
    "end": "2420579"
  },
  {
    "text": "it's not in the description in the instructions right but you see if I describe the custom resource definitions",
    "start": "2420579",
    "end": "2426820"
  },
  {
    "text": "on my cluster I now have the tracing policies and tracing policy namespace",
    "start": "2426820",
    "end": "2432040"
  },
  {
    "text": "the namespace one are pretty uh recent and tetragon and they allow you to",
    "start": "2432040",
    "end": "2437380"
  },
  {
    "text": "Define either Global tracing policies or namespace tracing policies here we're going to use Global tracing policies",
    "start": "2437380",
    "end": "2445359"
  },
  {
    "text": "the question I should ask somebody else okay no no that's fine oh you're here",
    "start": "2445359",
    "end": "2450400"
  },
  {
    "text": "sorry yes yes [Music]",
    "start": "2450400",
    "end": "2457240"
  },
  {
    "text": "file I think that only to where is the third one all right let's get to this yeah",
    "start": "2457240",
    "end": "2464920"
  },
  {
    "text": "thank you um so let's have a look at the file indeed so this tracing policies are",
    "start": "2464920",
    "end": "2470680"
  },
  {
    "text": "giving instructions to configure tetragon so that it will create ebpf programs to uh to trace what's happening",
    "start": "2470680",
    "end": "2477160"
  },
  {
    "text": "on our node so let's have a look at this one it's provided it's called TCP connect",
    "start": "2477160",
    "end": "2482440"
  },
  {
    "text": "oh yeah that might be that might be an issue uh yeah I think there used to be three and we reduced it to two",
    "start": "2482440",
    "end": "2488079"
  },
  {
    "text": "yeah so I may need to change this thank you so here we have a tracing policy that we",
    "start": "2488079",
    "end": "2493780"
  },
  {
    "text": "call network connection we're going to deploy It Again by default tracing policies are not namespace they're",
    "start": "2493780",
    "end": "2499720"
  },
  {
    "text": "Global so they won't be linked to a specific namespace it will apply to everything in our cluster and we have 2K",
    "start": "2499720",
    "end": "2505240"
  },
  {
    "text": "probes so K stands for kernel kernel probes so we will attach to uh events in",
    "start": "2505240",
    "end": "2510700"
  },
  {
    "text": "the kernel uh k-probe kind of events in a kernel and specifically to uh calls link to TCP",
    "start": "2510700",
    "end": "2518800"
  },
  {
    "text": "connect and TCP close and we will map the arguments uh uh that",
    "start": "2518800",
    "end": "2526960"
  },
  {
    "text": "that come out of these events so the first argument is of type socket here and second argument is of type socket",
    "start": "2526960",
    "end": "2532359"
  },
  {
    "text": "and this is to help tetragon know how to map these arguments to the Json that",
    "start": "2532359",
    "end": "2537520"
  },
  {
    "text": "will result right so let's apply this first one",
    "start": "2537520",
    "end": "2545640"
  },
  {
    "text": "there you go shouldn't take long so here I can actually list my tracing",
    "start": "2546760",
    "end": "2552820"
  },
  {
    "text": "policies and you see I have one that was applied six seconds ago and obviously if",
    "start": "2552820",
    "end": "2558099"
  },
  {
    "text": "I look at it I will see the content of it in yaml fine great and the second",
    "start": "2558099",
    "end": "2563560"
  },
  {
    "text": "tracing policy that we will apply is called sys right it's kubernetes manifest",
    "start": "2563560",
    "end": "2570940"
  },
  {
    "text": "and again it will use K probes and we'll have three rules here",
    "start": "2570940",
    "end": "2579339"
  },
  {
    "text": "the first rule is an FD install file descriptor install um uh call and we're looking",
    "start": "2579339",
    "end": "2587680"
  },
  {
    "text": "for calls to have the install where the the where the argument matches Etc",
    "start": "2587680",
    "end": "2595000"
  },
  {
    "text": "kubernetes manifests so we're looking for actions that will",
    "start": "2595000",
    "end": "2600640"
  },
  {
    "text": "affect this file Etc creditors manifest file or directory in this case right the",
    "start": "2600640",
    "end": "2606640"
  },
  {
    "text": "second one is the sys close and the third one is assist right so",
    "start": "2606640",
    "end": "2612000"
  },
  {
    "text": "closing the file descriptor or writing to the file so we're going to apply this again so I",
    "start": "2612000",
    "end": "2620260"
  },
  {
    "text": "just copy here and paste you can easily copy and paste right that when you have instructions on the right if you just",
    "start": "2620260",
    "end": "2626560"
  },
  {
    "text": "left click it will copy to your copy buffer so just apply this",
    "start": "2626560",
    "end": "2633040"
  },
  {
    "text": "and now we're going to look at the logs that are produced so we're going to do is we're going to look there's a",
    "start": "2633040",
    "end": "2639400"
  },
  {
    "text": "container in the tetragon Pod that is called export STD out and it will uh the",
    "start": "2639400",
    "end": "2646660"
  },
  {
    "text": "the logs of this part of this container will contain the two Trigon logs in Json",
    "start": "2646660",
    "end": "2652000"
  },
  {
    "text": "format so I can show you without piping into touching on observe actually",
    "start": "2652000",
    "end": "2657460"
  },
  {
    "text": "so you'll see exactly what it looks like and here we're following so you see I get Json logs this is great",
    "start": "2657460",
    "end": "2664619"
  },
  {
    "text": "not very readable Maybe so we're piping this into touching on observe which is the local common line",
    "start": "2664619",
    "end": "2671740"
  },
  {
    "text": "tool that you downloaded earlier and it will actually analyze this and show us",
    "start": "2671740",
    "end": "2677020"
  },
  {
    "text": "nice little icons and colors so that we can actually not lose our mind looking at Json",
    "start": "2677020",
    "end": "2682660"
  },
  {
    "text": "right so as you see this there's a lot of logs coming out of this uh some logs are linked to file being open file being",
    "start": "2682660",
    "end": "2689680"
  },
  {
    "text": "files being written or to TCP connect events that we added from the first rule so we have actions logs coming from the",
    "start": "2689680",
    "end": "2697480"
  },
  {
    "text": "two tracing policies that we added all right everybody's fine what's this anyone",
    "start": "2697480",
    "end": "2704319"
  },
  {
    "text": "having an issue with this first step no be good let's continue check",
    "start": "2704319",
    "end": "2712780"
  },
  {
    "text": "so if you followed properly the the different steps the check should pass fine",
    "start": "2714400",
    "end": "2720520"
  },
  {
    "text": "so next what we're going to do is this is taken from from the book on on security visibility based on tetragon",
    "start": "2720520",
    "end": "2726520"
  },
  {
    "text": "like I said and we're going to look at detecting your container Escape using tetragon",
    "start": "2726520",
    "end": "2731619"
  },
  {
    "text": "so the idea is that we have there's this uh pod that's running uh in a privileged mode and it allowed an attacker to",
    "start": "2731619",
    "end": "2739000"
  },
  {
    "text": "actually uh to actually escape the container and so we're going to see how",
    "start": "2739000",
    "end": "2744760"
  },
  {
    "text": "we could detect this um so what was gonna what the attacker will do is enter that privilege pod from",
    "start": "2744760",
    "end": "2751060"
  },
  {
    "text": "there gain access to the node and from the node actually create a static pod",
    "start": "2751060",
    "end": "2756280"
  },
  {
    "text": "and EGC kubernetes manifest so that they have a permanent foot on the machine and",
    "start": "2756280",
    "end": "2761440"
  },
  {
    "text": "then from that part do whatever they want right and run the script or whatever so we're going to see how we can detect these events and could",
    "start": "2761440",
    "end": "2768160"
  },
  {
    "text": "potentially alert on this or even kill them potentially because as you saw killing is is not we don't talk about",
    "start": "2768160",
    "end": "2774700"
  },
  {
    "text": "this in this lab really but it's not too hard it would be just changing the action at the bottom of the tracing policy so that instead of logging we",
    "start": "2774700",
    "end": "2781300"
  },
  {
    "text": "would just kill the process right so now we have two terminals in this one uh so pay attention when we change",
    "start": "2781300",
    "end": "2787900"
  },
  {
    "text": "terminals in the instructions um so what we're going to do here",
    "start": "2787900",
    "end": "2795119"
  },
  {
    "text": "is we're going to start by checking events in the tetragon logs related to a",
    "start": "2796300",
    "end": "2804819"
  },
  {
    "text": "pod called privilege part and you see here when you run Pentagon observe you can actually filter by pod name if",
    "start": "2804819",
    "end": "2810760"
  },
  {
    "text": "you're familiar with Hubble this is the same logic right we have the same kind of of option here",
    "start": "2810760",
    "end": "2815859"
  },
  {
    "text": "right now nothing's happening this privileged part does not exist but we're launching this in the first terminal so",
    "start": "2815859",
    "end": "2821380"
  },
  {
    "text": "that when it happens we see it right away okay so let's switch to terminal two in",
    "start": "2821380",
    "end": "2826480"
  },
  {
    "text": "the tabs up there and in Terminal 2 we're going to apply this privilege pod the yaml let's have a",
    "start": "2826480",
    "end": "2832420"
  },
  {
    "text": "look at it privilege but the yaml you see this is a pretty simple pod and production most",
    "start": "2832420",
    "end": "2839200"
  },
  {
    "text": "likely wouldn't be a pod like this may might have been deployed by a deployment you know whatever for some reason there",
    "start": "2839200",
    "end": "2845020"
  },
  {
    "text": "is this spot that is running and it so happens that it has a security context set to privilege through which is going",
    "start": "2845020",
    "end": "2852099"
  },
  {
    "text": "to trigger the issue in our case right so let's apply this privilege pod privilege but yeah",
    "start": "2852099",
    "end": "2861000"
  },
  {
    "text": "and then we'll check if the Pod is started and might take a little while you see it took five seconds now my pod",
    "start": "2861040",
    "end": "2866980"
  },
  {
    "text": "is running so you know check that your part is actually running",
    "start": "2866980",
    "end": "2873900"
  },
  {
    "text": "now if we go back to terminal one and it's taking a little while so let's",
    "start": "2875319",
    "end": "2881440"
  },
  {
    "text": "wait a little bit this is a buffer in the events so that might be the reason",
    "start": "2881440",
    "end": "2886980"
  },
  {
    "text": "see let's start it again",
    "start": "2889660",
    "end": "2893880"
  },
  {
    "text": "nice",
    "start": "2901480",
    "end": "2904140"
  },
  {
    "text": "this is started",
    "start": "2907359",
    "end": "2910380"
  },
  {
    "text": "wait I have my two tracing policies this is fine that should be fine",
    "start": "2913000",
    "end": "2919900"
  },
  {
    "text": "everything's fine are you seeing something on your side",
    "start": "2919900",
    "end": "2925660"
  },
  {
    "text": "the namespace is wrong where",
    "start": "2925660",
    "end": "2932460"
  },
  {
    "text": "no but that's I should find that should be fine",
    "start": "2936460",
    "end": "2940619"
  },
  {
    "text": "really hmm it shouldn't have to be restarted all",
    "start": "2942880",
    "end": "2949599"
  },
  {
    "text": "right I'll have to check this uh let's restart datragon in case",
    "start": "2949599",
    "end": "2957000"
  },
  {
    "text": "uh Cube system so oh Cube system let's see",
    "start": "2957880",
    "end": "2965279"
  },
  {
    "text": "that's restarting obviously and now we see it okay so if you have that issue I'll post the comment here",
    "start": "2965740",
    "end": "2972579"
  },
  {
    "text": "you can restart tetragon it shouldn't happen I'll have to check why uh so Cube control minus and Cube system rollout",
    "start": "2972579",
    "end": "2979300"
  },
  {
    "text": "restart demon set tetragon that will restart or just kill the Pod there's only one pod right",
    "start": "2979300",
    "end": "2985240"
  },
  {
    "text": "so now when we check we actually see the process being started so there's an engines process that is started in this",
    "start": "2985240",
    "end": "2993220"
  },
  {
    "text": "default slash privilege pod great almost great but great fine let's",
    "start": "2993220",
    "end": "2999819"
  },
  {
    "text": "continue so let's go back to Terminal Two we have our pod that was started and",
    "start": "2999819",
    "end": "3006240"
  },
  {
    "text": "we're going to exec into that pod and start a shell a bin bash shell into",
    "start": "3006240",
    "end": "3013980"
  },
  {
    "text": "that pod right what happens is when we go back to terminal one we can see what's being",
    "start": "3013980",
    "end": "3020640"
  },
  {
    "text": "executed here so we see bash being executed we see that it's executed in the default privilege pod context",
    "start": "3020640",
    "end": "3028800"
  },
  {
    "text": "and then in there we see everything that is linked to opening and closing files that is linked to bash being executed so",
    "start": "3028800",
    "end": "3036180"
  },
  {
    "text": "we see the ld.so being open uh all the libraries that are loaded the ttys being",
    "start": "3036180",
    "end": "3042060"
  },
  {
    "text": "open and so on and there's actually an LS because I typed LS wasn't supposed to",
    "start": "3042060",
    "end": "3047520"
  },
  {
    "text": "do this but I typed LS so we see LS and all the libraries being open and closed",
    "start": "3047520",
    "end": "3053400"
  },
  {
    "text": "to make LS function right now in Terminal 2 we're going to",
    "start": "3053400",
    "end": "3058800"
  },
  {
    "text": "take advantage of the fact that this part is privileged by using NS enter and",
    "start": "3058800",
    "end": "3064440"
  },
  {
    "text": "as enter minus T1 minus a bash and as you may know this will allow us",
    "start": "3064440",
    "end": "3070440"
  },
  {
    "text": "to bypass the isolation of this container and",
    "start": "3070440",
    "end": "3075599"
  },
  {
    "text": "actually access the the machine uh the under underlying node yeah what we're",
    "start": "3075599",
    "end": "3082200"
  },
  {
    "text": "doing I don't know yes sorry trying to get my microphone to",
    "start": "3082200",
    "end": "3087240"
  },
  {
    "text": "work okay hi",
    "start": "3087240",
    "end": "3092760"
  },
  {
    "text": "so what we're doing is we're actually moving into all of the namespaces associated with pin one",
    "start": "3092760",
    "end": "3098460"
  },
  {
    "text": "and because this is a privileged pod that actually has access to the host pit namespace the first page in this one is",
    "start": "3098460",
    "end": "3104700"
  },
  {
    "text": "probably an IT system right so this could be system d when we do an Accenture like this we're",
    "start": "3104700",
    "end": "3109920"
  },
  {
    "text": "basically saying I want to be inside the network namespace so I want to be inside the file system namespace I want to be inside the paid namespace all of the",
    "start": "3109920",
    "end": "3116880"
  },
  {
    "text": "namespaces I want to move directly into that group of namespaces that the paid",
    "start": "3116880",
    "end": "3122400"
  },
  {
    "text": "one on the underlying host is in",
    "start": "3122400",
    "end": "3126318"
  },
  {
    "text": "thanks Duffy for the advanced explanation so",
    "start": "3127800",
    "end": "3133200"
  },
  {
    "text": "yeah so thanks to this we get access to the host namespace which means we're now we've kind of escaped from our container",
    "start": "3133200",
    "end": "3143119"
  },
  {
    "text": "right so um we essentially broke out of the container if we look at the at the",
    "start": "3144900",
    "end": "3151500"
  },
  {
    "text": "terminal 1 again oops we can see here",
    "start": "3151500",
    "end": "3159059"
  },
  {
    "text": "um sorry beautiful privilege uh we can see the NS Center where is it",
    "start": "3159059",
    "end": "3166619"
  },
  {
    "text": "I see Ellis I don't see it in the center let's looks weird",
    "start": "3166619",
    "end": "3172640"
  },
  {
    "text": "okay I hope I'm not seeing bugs here this is a I think because it's standard",
    "start": "3173460",
    "end": "3179520"
  },
  {
    "text": "out it's a bit of a ring buffer so if you see a bunch of yeah yeah and it might just take a while because of the of the Ring buffer yeah there's not",
    "start": "3179520",
    "end": "3185880"
  },
  {
    "text": "enough if you exit and you go back and you do inner Center again then you should see the event go by again",
    "start": "3185880",
    "end": "3191160"
  },
  {
    "text": "yep yep there",
    "start": "3191160",
    "end": "3197220"
  },
  {
    "text": "so now I have the ls looks like the tracing policy yeah the events may take",
    "start": "3197220",
    "end": "3202440"
  },
  {
    "text": "a while because there's there's a ring buffer so um needs to have enough events before it",
    "start": "3202440",
    "end": "3209040"
  },
  {
    "text": "gets exported so we'll see the NS enter eventually I think it gets flush on a regular basis",
    "start": "3209040",
    "end": "3214260"
  },
  {
    "text": "though I think we may be missing a trading policy unfortunately",
    "start": "3214260",
    "end": "3221539"
  },
  {
    "text": "cbls I don't see nascenter uh there I have DNS enter here right so",
    "start": "3223740",
    "end": "3231000"
  },
  {
    "text": "nsn2 here and then from DNS Center you can actually see that it actually executes bash afterwards and then use it",
    "start": "3231000",
    "end": "3239520"
  },
  {
    "text": "in groups Dash gel colors and so on so we can see what's being executed in this",
    "start": "3239520",
    "end": "3244859"
  },
  {
    "text": "context right so now that we're running bash and we're pretty much root on the host",
    "start": "3244859",
    "end": "3251460"
  },
  {
    "text": "actually we're actually on on the host how could we see this",
    "start": "3251460",
    "end": "3258480"
  },
  {
    "text": "um yeah we're on the can can control plane",
    "start": "3258480",
    "end": "3264900"
  },
  {
    "text": "host you see here that the node name this is not inside the the container inside the Pod this is well this is",
    "start": "3264900",
    "end": "3271319"
  },
  {
    "text": "inside the container but it's the container that works as a host and a kind cluster right",
    "start": "3271319",
    "end": "3276480"
  },
  {
    "text": "so now that we're running on the on the host which is a container in the context of kind The Next Step will be to",
    "start": "3276480",
    "end": "3283200"
  },
  {
    "text": "maintain a foothold there so what we want to do is create a static",
    "start": "3283200",
    "end": "3288780"
  },
  {
    "text": "pod that will always be running and will give a success uh whenever we want as an",
    "start": "3288780",
    "end": "3296099"
  },
  {
    "text": "attacker right with being the bad guys in this case so",
    "start": "3296099",
    "end": "3302339"
  },
  {
    "text": "let's get the the tetragon logs again from the export STD out container do a",
    "start": "3302339",
    "end": "3309720"
  },
  {
    "text": "typical observe and we'll filter on privilege pod or calculators or continuity runtime or proc self XA there",
    "start": "3309720",
    "end": "3317700"
  },
  {
    "text": "wasn't a way to have a single common clean comment to get this so we're just grabbing in this case so we don't need",
    "start": "3317700",
    "end": "3323700"
  },
  {
    "text": "to run a comment every time so we see all the events we're interested in and if we don't grab then there'll be tons",
    "start": "3323700",
    "end": "3329339"
  },
  {
    "text": "of events so so now let's again get into our container",
    "start": "3329339",
    "end": "3335760"
  },
  {
    "text": "into our privilege pod uh we do the NS enter again so that we access the host",
    "start": "3335760",
    "end": "3341160"
  },
  {
    "text": "namespace and now we're going to go into Etc",
    "start": "3341160",
    "end": "3346260"
  },
  {
    "text": "kubernetes manifests there okay there which",
    "start": "3346260",
    "end": "3352260"
  },
  {
    "text": "obviously means that we're on the host because this does not exist and the pods that we accessed originally and in there",
    "start": "3352260",
    "end": "3359700"
  },
  {
    "text": "you see all the static pods that that are there it's the cube API server that's because we're on the control uh",
    "start": "3359700",
    "end": "3365760"
  },
  {
    "text": "plane node in this case and we're going to create a new pod",
    "start": "3365760",
    "end": "3373520"
  },
  {
    "text": "which is called hack latest as you can see this is just normal part uh it's",
    "start": "3373740",
    "end": "3378780"
  },
  {
    "text": "called hyper latest it has access to the host Network and the the namespace does",
    "start": "3378780",
    "end": "3384720"
  },
  {
    "text": "not exist this is a little bit of a of a hack here which will make it",
    "start": "3384720",
    "end": "3389819"
  },
  {
    "text": "invisible uh to uh uh Cube control in our case because the namespace actually",
    "start": "3389819",
    "end": "3398099"
  },
  {
    "text": "does not exist this is it this is a very interesting one also because I'm curious how many people are familiar with Etsy",
    "start": "3398099",
    "end": "3403559"
  },
  {
    "text": "kubernetes manifests are you aware of that directory okay that directory exists as part of",
    "start": "3403559",
    "end": "3410220"
  },
  {
    "text": "the project of cubeadm or KUB ADM and cubeadm is a tool that's part of the",
    "start": "3410220",
    "end": "3416460"
  },
  {
    "text": "kubernetes project um that actually helps you get from basically a bunch of Docker hosts to a",
    "start": "3416460",
    "end": "3422280"
  },
  {
    "text": "kubernetes cluster it's a provisioning tool and the way that cubeadm Provisions",
    "start": "3422280",
    "end": "3427500"
  },
  {
    "text": "kubernetes clusters is it uses the static manifest to host the API server the control plane the controller manager",
    "start": "3427500",
    "end": "3434160"
  },
  {
    "text": "and the SUV on the set of hosts using the static pod manifests and it's a pretty interesting thing",
    "start": "3434160",
    "end": "3440040"
  },
  {
    "text": "static static static pod manifests are owned and operated they live and die",
    "start": "3440040",
    "end": "3446819"
  },
  {
    "text": "with the cubelet right as long as the qubit sees to manifest in that predefined directory",
    "start": "3446819",
    "end": "3453420"
  },
  {
    "text": "then it will start all of those manifests and manage the life cycle directly",
    "start": "3453420",
    "end": "3458579"
  },
  {
    "text": "even if you could see these pods like if you were to do Cube Kettle get pods inside of the cube system namespace you'd be able to see the pods in there",
    "start": "3458579",
    "end": "3466380"
  },
  {
    "text": "and if you were to delete one of them that would have no effect on the Pod itself because it's a static pod",
    "start": "3466380",
    "end": "3472980"
  },
  {
    "text": "it's only managed by the cubelet it's not managed by the API the API only reports what it sees about",
    "start": "3472980",
    "end": "3479700"
  },
  {
    "text": "those pods that's why it's a static pod if you wanted to stop one of those",
    "start": "3479700",
    "end": "3484980"
  },
  {
    "text": "static pods you would have to go to the file system where that static pod is defined and delete it or move it out of that",
    "start": "3484980",
    "end": "3491700"
  },
  {
    "text": "directory and that will be like one way to stop that particular pot but you can't stop it with Cube pedal and you can't restart",
    "start": "3491700",
    "end": "3497040"
  },
  {
    "text": "it with Cube kettle so what we're doing here is we're defining yet another static pod Manifest",
    "start": "3497040",
    "end": "3503400"
  },
  {
    "text": "this is the hack latest one and we're putting it in a namespace that doesn't exist and because it's a static pod",
    "start": "3503400",
    "end": "3509339"
  },
  {
    "text": "manifest it's owned and operated by that cubelet the cubelet is going to try to register that pod with the API server",
    "start": "3509339",
    "end": "3517619"
  },
  {
    "text": "I've created a new pod it's called the hack latest and it's in some namespace that doesn't",
    "start": "3517619",
    "end": "3522900"
  },
  {
    "text": "exist and so we'll get the same error that you would get if you tried to apply a manifest in a namespace that doesn't",
    "start": "3522900",
    "end": "3529380"
  },
  {
    "text": "exist it will tell the cubelet there's no namespace called doesn't exist",
    "start": "3529380",
    "end": "3535500"
  },
  {
    "text": "and then the cubelet will say okay and it'll just keep going and keep managing this pod in silence until forever",
    "start": "3535500",
    "end": "3543558"
  },
  {
    "text": "fun times we're ahead yeah so because of this we now have a pod",
    "start": "3545400",
    "end": "3551520"
  },
  {
    "text": "that is actually running on the machine right exactly we can't see it with Cube control because like like Duffy said if",
    "start": "3551520",
    "end": "3560339"
  },
  {
    "text": "I look here Cube Control won't list it because it's not in the namespace that is known",
    "start": "3560339",
    "end": "3565859"
  },
  {
    "text": "so it's invisible to a kubernetes administrator but it's running all right we can see if we use",
    "start": "3565859",
    "end": "3573200"
  },
  {
    "text": "CRI control because kind is not using Docker it's using a CRI",
    "start": "3573200",
    "end": "3578960"
  },
  {
    "text": "so if we use CRI control PS we can see actually the spot running on the machine",
    "start": "3578960",
    "end": "3586079"
  },
  {
    "text": "and if we were to remove it would recreate it so every time we",
    "start": "3586079",
    "end": "3591119"
  },
  {
    "text": "restart the node for example this part will actually start again so now we have a permanent foothold if",
    "start": "3591119",
    "end": "3597839"
  },
  {
    "text": "we've deployed something and that image that lets us access the node again that's it as an attacker I can come back",
    "start": "3597839",
    "end": "3604200"
  },
  {
    "text": "whenever I want and this very high chances that the kubernetes administrators won't see that pod",
    "start": "3604200",
    "end": "3609780"
  },
  {
    "text": "running so it might take a few seconds but by",
    "start": "3609780",
    "end": "3616740"
  },
  {
    "text": "now I think it should have started so again if you look at all the pods you",
    "start": "3616740",
    "end": "3623099"
  },
  {
    "text": "want you won't see it now let's look at tetragon and in tetragon we have some interesting",
    "start": "3623099",
    "end": "3630540"
  },
  {
    "text": "events in there let's get back up a bit just a bit so that's what I executed",
    "start": "3630540",
    "end": "3637440"
  },
  {
    "text": "first when I got access to the privilege pod I executed in a center and then you can see that I actually",
    "start": "3637440",
    "end": "3645960"
  },
  {
    "text": "um what is this let's go down a bit",
    "start": "3645960",
    "end": "3653359"
  },
  {
    "text": "so bash was executed here there was a cat that was executed and",
    "start": "3654299",
    "end": "3660240"
  },
  {
    "text": "here you remember I did a cat with a hair Dock and I redirected it to the",
    "start": "3660240",
    "end": "3665579"
  },
  {
    "text": "file so this is what happened here so this file was written Etc kubernetes manifest hack late is the yaml so",
    "start": "3665579",
    "end": "3671640"
  },
  {
    "text": "tetragon actually saw it and you see here that we're not in the context of the privilege pod anymore we're in the",
    "start": "3671640",
    "end": "3678059"
  },
  {
    "text": "context of the kind control plane node and then we see a lot of things",
    "start": "3678059",
    "end": "3683760"
  },
  {
    "text": "executing that are linked to container d and then the Pod is starting we get the",
    "start": "3683760",
    "end": "3691500"
  },
  {
    "text": "init we get run C and so on and so forth so everything that is linked to that pod that is starting can be seen and could",
    "start": "3691500",
    "end": "3698880"
  },
  {
    "text": "be traced with a tetragon so if all these events have been exported to your favorite scene you could see in the",
    "start": "3698880",
    "end": "3705839"
  },
  {
    "text": "history what actually happened and at what time it happened here we're only seeing a nicely formatted thing but",
    "start": "3705839",
    "end": "3711240"
  },
  {
    "text": "actually you get the timestamp you get everything in the in the Json events",
    "start": "3711240",
    "end": "3716460"
  },
  {
    "text": "I think all right",
    "start": "3716460",
    "end": "3720619"
  },
  {
    "text": "so let's click next and continue",
    "start": "3724380",
    "end": "3728838"
  },
  {
    "text": "so now that we have access to this to this static pod we could do something in",
    "start": "3732599",
    "end": "3738540"
  },
  {
    "text": "there so let's again look at the tetragon logs",
    "start": "3738540",
    "end": "3743819"
  },
  {
    "text": "we're going to grab for privilege pod or curl or python again you could organize",
    "start": "3743819",
    "end": "3751020"
  },
  {
    "text": "things around these events in your sim to actually detect things um and and search for events",
    "start": "3751020",
    "end": "3758099"
  },
  {
    "text": "so in Terminal 2 we're going to again access sorry",
    "start": "3758099",
    "end": "3764900"
  },
  {
    "text": "is it possible also to detect as you made as kind is running cry is it",
    "start": "3766020",
    "end": "3771780"
  },
  {
    "text": "possible to detect with container D for example if it's running an invisible pod",
    "start": "3771780",
    "end": "3777180"
  },
  {
    "text": "like with like we did yeah so that's what we were seeing here continuity actually is",
    "start": "3777180",
    "end": "3783180"
  },
  {
    "text": "Oh you mean on the host well for example we are running gcp and gke so we have we",
    "start": "3783180",
    "end": "3789960"
  },
  {
    "text": "are based on container D do you think it is yeah having access to the host",
    "start": "3789960",
    "end": "3795599"
  },
  {
    "text": "and listing all the parts on each host of course but well so on the host if she",
    "start": "3795599",
    "end": "3802140"
  },
  {
    "text": "lists all the parts you actually see this this is what we were seeing here um so here if I'm on the host and I use",
    "start": "3802140",
    "end": "3808920"
  },
  {
    "text": "uh CRI control I can actually see this uh calculated spot yeah exactly",
    "start": "3808920",
    "end": "3815280"
  },
  {
    "text": "what what I mean is that if because here we are running kind with the cry",
    "start": "3815280",
    "end": "3822480"
  },
  {
    "text": "um yeah so if you were running something else were you running Docker or whatever you could see it you could see the the",
    "start": "3822480",
    "end": "3828240"
  },
  {
    "text": "container started with with docker right it's just Cube Control won't see it",
    "start": "3828240",
    "end": "3833400"
  },
  {
    "text": "because it's running a namespace that doesn't exist and the wiki control functions is is when you do when you",
    "start": "3833400",
    "end": "3840359"
  },
  {
    "text": "list the pods for all namespaces it will first get the nest the list of all the namespaces and then request the parts",
    "start": "3840359",
    "end": "3846299"
  },
  {
    "text": "for each of these namespaces and because it's running in a namespace that doesn't exist you will never see it",
    "start": "3846299",
    "end": "3853020"
  },
  {
    "text": "yeah did I answer your question more or less",
    "start": "3853020",
    "end": "3860359"
  },
  {
    "text": "all right let's get the container ID for that um for that pod",
    "start": "3864540",
    "end": "3871160"
  },
  {
    "text": "it's like container here so we just executed a CRI control PS to get the",
    "start": "3871559",
    "end": "3877319"
  },
  {
    "text": "container idea the same as you could do with with Docker for example right and",
    "start": "3877319",
    "end": "3883260"
  },
  {
    "text": "then with this container ID we're going to um we're going to exec into this container",
    "start": "3883260",
    "end": "3891660"
  },
  {
    "text": "so we're now inside the static pod that we created earlier right",
    "start": "3891660",
    "end": "3897720"
  },
  {
    "text": "so this is the static part that potentially we could leave running that even if we restart the node it will restart and will be invisible to uh the",
    "start": "3897720",
    "end": "3905640"
  },
  {
    "text": "the administrators if they're not properly monitoring the cluster for this kind of events and then from this we could typically",
    "start": "3905640",
    "end": "3911640"
  },
  {
    "text": "run some curl to execute a python script you know",
    "start": "3911640",
    "end": "3917460"
  },
  {
    "text": "one several times I'm doing some activity that shouldn't happen and it will be really hard to detect from the",
    "start": "3917460",
    "end": "3924180"
  },
  {
    "text": "administrators because they don't even know that this spot is running but if I look here in tetragon by the",
    "start": "3924180",
    "end": "3931079"
  },
  {
    "text": "time this actually comes here I can see here python you will actually see the calls being done and you can see that",
    "start": "3931079",
    "end": "3937319"
  },
  {
    "text": "it's done in the context of the kind control plane",
    "start": "3937319",
    "end": "3941599"
  },
  {
    "text": "in fact you should see as well the connects that will come in a while once",
    "start": "3946319",
    "end": "3951480"
  },
  {
    "text": "the again it's the buffering the buffering thing",
    "start": "3951480",
    "end": "3957119"
  },
  {
    "text": "because the python script makes the call to the outside so normally",
    "start": "3957119",
    "end": "3963500"
  },
  {
    "text": "and it's it's executed actually it's not running anymore so we should see the connect events uh",
    "start": "3963540",
    "end": "3970440"
  },
  {
    "text": "coming in I'll wait a little bit",
    "start": "3970440",
    "end": "3973880"
  },
  {
    "text": "do some more colds right try to sending a curl yeah",
    "start": "3977880",
    "end": "3983059"
  },
  {
    "text": "sorry it may not be part of your crap",
    "start": "3983940",
    "end": "3991460"
  },
  {
    "text": "sorry are you talking to me Duffy yeah it may not be part of the grip that's maybe why you're missing it",
    "start": "3991799",
    "end": "3997880"
  },
  {
    "text": "I I didn't hear what you said the the challenge is that the event you're looking for may not be in them in",
    "start": "3998700",
    "end": "4005660"
  },
  {
    "text": "the grep match oh really",
    "start": "4005660",
    "end": "4009700"
  },
  {
    "text": "um oh you're right there yeah yeah yeah yeah because it doesn't match No it",
    "start": "4010880",
    "end": "4016579"
  },
  {
    "text": "should match it should match curl",
    "start": "4016579",
    "end": "4020079"
  },
  {
    "text": "I think it's the buffering issue again",
    "start": "4022819",
    "end": "4026440"
  },
  {
    "text": "all right it worked last time I tried it great I don't know what's wrong",
    "start": "4044839",
    "end": "4051160"
  },
  {
    "text": "yeah it's okay because we're using standard out",
    "start": "4058700",
    "end": "4063400"
  },
  {
    "text": "this probably would probably not happen in your environments because you'd be sending all of this event data to a Splunk or to a Sim or something like",
    "start": "4070160",
    "end": "4077180"
  },
  {
    "text": "that and you wouldn't be dropping these events in this example we're actually sending all of this data to standard out",
    "start": "4077180",
    "end": "4083119"
  },
  {
    "text": "on the container and then we're trying to grip that event in the standard out which is basically only buffered in the",
    "start": "4083119",
    "end": "4088940"
  },
  {
    "text": "in the containers standard out itself which is still truncated and this is what we mean by like we may",
    "start": "4088940",
    "end": "4094460"
  },
  {
    "text": "have missed a bit because we were trying to catch it like in time and this may not have happened fast enough",
    "start": "4094460",
    "end": "4100960"
  },
  {
    "text": "all right well sorry about that are you seeing it yourself someone's seeing it",
    "start": "4103400",
    "end": "4109460"
  },
  {
    "text": "yeah okay someone saw it got it oh here here he comes again this is a buffering",
    "start": "4109460",
    "end": "4115580"
  },
  {
    "text": "issue so so there there you go you can actually see the curl so we could detect that",
    "start": "4115580",
    "end": "4120859"
  },
  {
    "text": "thing and we see it's in the context of the control plane itself",
    "start": "4120859",
    "end": "4126318"
  },
  {
    "text": "because sorry all right",
    "start": "4126319",
    "end": "4132940"
  },
  {
    "text": "let's connect for the filing challenge so what's interesting here is we get this metadata as well and it would be more metadata that we could get from the",
    "start": "4132980",
    "end": "4138980"
  },
  {
    "text": "from the Json um output as well and and really the one",
    "start": "4138980",
    "end": "4144500"
  },
  {
    "text": "big benefit of ebpf here as well as in the context of Celia men and Hubble Is",
    "start": "4144500",
    "end": "4150620"
  },
  {
    "text": "that this meta data can be added directly in the context of the kernel so one dbpf program uh processes the events",
    "start": "4150620",
    "end": "4159080"
  },
  {
    "text": "that it's seeing it can actually directly enrich these events with the metadata because it has access to this",
    "start": "4159080",
    "end": "4165380"
  },
  {
    "text": "metadata through ubpf Maps",
    "start": "4165380",
    "end": "4169718"
  },
  {
    "text": "so the next step is detection itself so you can have a look at the book like I",
    "start": "4170480",
    "end": "4177080"
  },
  {
    "text": "said Natalia is around from time to time and she can actually sign the book if she can get a whole uh of the book",
    "start": "4177080",
    "end": "4184520"
  },
  {
    "text": "um yeah um questions on uh on that lab specifically",
    "start": "4184520",
    "end": "4192040"
  },
  {
    "text": "if you have questions that come on up to the microphones or I can come to you",
    "start": "4192859",
    "end": "4198219"
  },
  {
    "text": "otherwise thank you for spending your time with us this afternoon it's a such a pleasant surprise seeing so many",
    "start": "4200360",
    "end": "4205580"
  },
  {
    "text": "people show up for this event so thank you so much",
    "start": "4205580",
    "end": "4209500"
  },
  {
    "text": "thank you we do have some psyllium and tetragon",
    "start": "4211840",
    "end": "4217699"
  },
  {
    "text": "stickers up in the front if you'd like one come on get one yeah and again feel free to take the other labs on your own",
    "start": "4217699",
    "end": "4225199"
  },
  {
    "text": "and give us uh feedback oh and one thing that you mentioned earlier uh just so",
    "start": "4225199",
    "end": "4230900"
  },
  {
    "text": "people know where to find it to be sure if you go to the psyllium project github.com psyllium psyllium",
    "start": "4230900",
    "end": "4239300"
  },
  {
    "text": "here I know you mentioned that there's the users.md file so if you're already using",
    "start": "4239300",
    "end": "4246500"
  },
  {
    "text": "psyllium and you want to help the project one easy way to help the project is to let us know how you use sodium",
    "start": "4246500",
    "end": "4253460"
  },
  {
    "text": "what you do with it uh the more companies actually list themselves here the more it helps the project to",
    "start": "4253460",
    "end": "4259460"
  },
  {
    "text": "graduate how are you",
    "start": "4259460",
    "end": "4264340"
  }
]