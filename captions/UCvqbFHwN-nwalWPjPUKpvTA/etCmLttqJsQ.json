[
  {
    "text": "all right let's do this hi everyone how you guys doing my",
    "start": "320",
    "end": "5680"
  },
  {
    "text": "name is Aurelian Bombo i'm very happy to be here very excited this is my first",
    "start": "5680",
    "end": "11400"
  },
  {
    "text": "Yukon i made the trip all the way from Chicago uh not my first time in London",
    "start": "11400",
    "end": "17600"
  },
  {
    "text": "though because I'm born and raised in Belgium so not too far from here um you",
    "start": "17600",
    "end": "23240"
  },
  {
    "text": "know pretty familiar with London kind of definitely not familiar with sunny London so that's",
    "start": "23240",
    "end": "29720"
  },
  {
    "text": "amazing um I work with the confidential containers",
    "start": "29720",
    "end": "35800"
  },
  {
    "text": "project where I help out with different aspects around the project notably the CI and then you know lately I've been",
    "start": "35800",
    "end": "42719"
  },
  {
    "text": "looking at storage i also work with the Kata containers project where I serve on",
    "start": "42719",
    "end": "48239"
  },
  {
    "text": "the architecture committee there which is a group that uh you know sears a project and has a final sale on",
    "start": "48239",
    "end": "54320"
  },
  {
    "text": "decisions and then at Microsoft my assignment really is the Linux confidential platform as part of the",
    "start": "54320",
    "end": "61840"
  },
  {
    "text": "Azure Linux OS team and so in the confidential",
    "start": "61840",
    "end": "67360"
  },
  {
    "text": "containers project we believe that confidential computing is the future of",
    "start": "67360",
    "end": "72560"
  },
  {
    "text": "computing right uh where people want to protect data not only you know at rest",
    "start": "72560",
    "end": "78880"
  },
  {
    "text": "and in transit but also in use right protect that data from their cloud provider",
    "start": "78880",
    "end": "84320"
  },
  {
    "text": "so the thing is when we talk about confidential computing usually we uh",
    "start": "84320",
    "end": "90560"
  },
  {
    "text": "focus a lot on the compute part right not so much on networking or storage right and so today I wanted to um you",
    "start": "90560",
    "end": "98960"
  },
  {
    "text": "know share with you guys a little bit about what we've been working on with the confidential containers community uh",
    "start": "98960",
    "end": "105840"
  },
  {
    "text": "and so you know to enable secure storage right and containers from a confidential",
    "start": "105840",
    "end": "112479"
  },
  {
    "text": "standpoint and so Mind you a lot of this stuff is still very much a work in progress but at least this will give you",
    "start": "112479",
    "end": "119600"
  },
  {
    "text": "a good overview on the current state of things right and so with this I'll talk about both the implementation itself but",
    "start": "119600",
    "end": "127439"
  },
  {
    "text": "also how that ties into the broader ecosystem so that we can deploy this at scale right and so I also have a PR uh",
    "start": "127439",
    "end": "135840"
  },
  {
    "text": "that I'm working on in the uh confidential containers repo to enable",
    "start": "135840",
    "end": "140959"
  },
  {
    "text": "all this right and so I'll share it at the end of this presentation if you guys want to take a look at it right and uh",
    "start": "140959",
    "end": "146879"
  },
  {
    "text": "judge my code maybe so the way that this presentation",
    "start": "146879",
    "end": "153360"
  },
  {
    "text": "is going to unfold is that uh first I'm going to give some context on you know container runtimes confidential",
    "start": "153360",
    "end": "159599"
  },
  {
    "text": "computing and how that works with Kubernetes and then I'll split the presentation into two parts first the",
    "start": "159599",
    "end": "166480"
  },
  {
    "text": "firmal storage and then we're going to build on top of that uh to detail a bit persistent storage right and then in",
    "start": "166480",
    "end": "172959"
  },
  {
    "text": "between that I have a demo based on the existing code right based on that PR",
    "start": "172959",
    "end": "178879"
  },
  {
    "text": "that I was uh mentioning a minute ago so first and foremost what is a",
    "start": "178879",
    "end": "184800"
  },
  {
    "text": "confidential container so typically when we uh think of",
    "start": "184800",
    "end": "191800"
  },
  {
    "text": "containers and this is not working when we think containers you think you know uh docker runc containers right where",
    "start": "191800",
    "end": "199920"
  },
  {
    "text": "you share the host kernel with the containers obviously that's a pretty loose isolation right in terms of",
    "start": "199920",
    "end": "206159"
  },
  {
    "text": "security this is we don't say that you know we said this is not secure at all right because uh you're essentially one",
    "start": "206159",
    "end": "213280"
  },
  {
    "text": "kernel vulnerability away from having a container breakout where one of your",
    "start": "213280",
    "end": "218640"
  },
  {
    "text": "containers uh you know escapes the this uh this namespace isolation right and",
    "start": "218640",
    "end": "225280"
  },
  {
    "text": "attacks the host or the other containers now you can do better than",
    "start": "225280",
    "end": "231599"
  },
  {
    "text": "this uh with kata containers and so in kata containers we use virtualization we",
    "start": "231599",
    "end": "237200"
  },
  {
    "text": "put the container inside a virtual machine right but you're still not protected uh against a potentially",
    "start": "237200",
    "end": "243519"
  },
  {
    "text": "malicious host right because imagine that you're an enduser and you don't",
    "start": "243519",
    "end": "249439"
  },
  {
    "text": "necessarily trust your cloud provider or imagine that you're a cloud provider and you want to enable multi-tenency you",
    "start": "249439",
    "end": "256079"
  },
  {
    "text": "want to you want to be able to uh maximize resource utilization and being",
    "start": "256079",
    "end": "261840"
  },
  {
    "text": "able to host multiple tenants multiple customers on the same machine right and",
    "start": "261840",
    "end": "267759"
  },
  {
    "text": "so with this in the confidential containers project or coco that's the",
    "start": "267759",
    "end": "272960"
  },
  {
    "text": "term that we use on a project to refer to it right with koko we build on top of kata and we leverage what is called a",
    "start": "272960",
    "end": "279919"
  },
  {
    "text": "trusted execution environment or a te and this te will allow us to guarantee",
    "start": "279919",
    "end": "286160"
  },
  {
    "text": "the confidentiality of this VM right for example by encrypting the VM memory and",
    "start": "286160",
    "end": "292720"
  },
  {
    "text": "then the workloads themselves the containers can also leverage this T and through a process called remote",
    "start": "292720",
    "end": "298960"
  },
  {
    "text": "attestation um essentially obtain a cryptographic proof of the contents of",
    "start": "298960",
    "end": "305600"
  },
  {
    "text": "that VM and then later on I'll introduce a concept of container security policy",
    "start": "305600",
    "end": "311520"
  },
  {
    "text": "which was developed by my team at Microsoft to really secure the interface",
    "start": "311520",
    "end": "316639"
  },
  {
    "text": "between this uh you know trusted and confidential VM and the outside uh",
    "start": "316639",
    "end": "322080"
  },
  {
    "text": "components that will be",
    "start": "322080",
    "end": "324960"
  },
  {
    "text": "untrusted so these three are container runtimes they address the question of",
    "start": "329080",
    "end": "335039"
  },
  {
    "text": "how do I run a you know a single container on a single machine",
    "start": "335039",
    "end": "340960"
  },
  {
    "text": "right now when you're talking about deploy at scale as you know you want to",
    "start": "341240",
    "end": "346400"
  },
  {
    "text": "use something like Kubernetes to handle what we call the orchestration of your containers right and Kubernetes is going to handle aspects like scaling load",
    "start": "346400",
    "end": "353400"
  },
  {
    "text": "balancing fall tolerance service discovery all that good stuff and it's",
    "start": "353400",
    "end": "358560"
  },
  {
    "text": "going to be uh important for the Koko project to work well with Kubernetes because that's what people use right to",
    "start": "358560",
    "end": "364479"
  },
  {
    "text": "deploy at scale and so if you want to if you want people to adopt Coco you want to integrate well with Kubernetes and",
    "start": "364479",
    "end": "370400"
  },
  {
    "text": "with this guess what is one other aspect of container management that's handled through Kubernetes well storage so it's",
    "start": "370400",
    "end": "378080"
  },
  {
    "text": "going to be important for us here to have a decent understanding of how Kubernetes fits in the picture and how",
    "start": "378080",
    "end": "384639"
  },
  {
    "text": "well uh we can integrate with it",
    "start": "384639",
    "end": "389400"
  },
  {
    "text": "so before I dive into the storage implementation I want to quickly run",
    "start": "390479",
    "end": "396080"
  },
  {
    "text": "through this simplified diagram of the life cycle of a Coco container in",
    "start": "396080",
    "end": "403680"
  },
  {
    "text": "Kubernetes right so what happens when you want to create a confidential",
    "start": "403680",
    "end": "409199"
  },
  {
    "text": "container within Kubernetes so the first thing you're going to do as you know you're going to create a container specification right and that's going to",
    "start": "409199",
    "end": "415600"
  },
  {
    "text": "be essentially a YAML file that describes the behavior of your container you uh take that container",
    "start": "415600",
    "end": "423599"
  },
  {
    "text": "spec at the bottom left here and you deploy it to your Kubernetes cluster",
    "start": "423599",
    "end": "428800"
  },
  {
    "text": "right and so mind you this is the view from one uh host node of your cluster",
    "start": "428800",
    "end": "434560"
  },
  {
    "text": "right so one machine of your cluster and so you send that container spec over to your cluster it reaches the cubelet on",
    "start": "434560",
    "end": "441759"
  },
  {
    "text": "the node right so every uh host node of your cluster is going to have this cublet component right from Kubernetes",
    "start": "441759",
    "end": "447440"
  },
  {
    "text": "the cubelet is going to take your spec and send it over to your cut to your container runtime uh which in our case",
    "start": "447440",
    "end": "453120"
  },
  {
    "text": "is the kam runtime here and then the cat runtime will trigger the uh virtual",
    "start": "453120",
    "end": "458639"
  },
  {
    "text": "machine manager and this VMM will um have the role of creating this",
    "start": "458639",
    "end": "463759"
  },
  {
    "text": "confidential VM here and then inside this VM will be installed a few components including this uh kata agent",
    "start": "463759",
    "end": "470639"
  },
  {
    "text": "and then the kata agent which is written in rust will interface with the kata",
    "start": "470639",
    "end": "476160"
  },
  {
    "text": "runtime to uh you know create the container inside the VM and so one thing",
    "start": "476160",
    "end": "481680"
  },
  {
    "text": "that's important for us here to understand is that uh from the perspective of the confidential VM all",
    "start": "481680",
    "end": "488000"
  },
  {
    "text": "the components that are outside of that VM boundary are going to be untrusted by default right and so uh this includes",
    "start": "488000",
    "end": "494960"
  },
  {
    "text": "the cubelet the cat runtime even the virtual machine manager right and as of right now this also includes the",
    "start": "494960",
    "end": "501360"
  },
  {
    "text": "container spec right and so as of right now this also includes the uh container",
    "start": "501360",
    "end": "507199"
  },
  {
    "text": "that's running in the VM right and we're going to uh leverage the security policy",
    "start": "507199",
    "end": "512479"
  },
  {
    "text": "to ensure the trustworthiness of this container inside the VM right and that's something that I'll detail uh in a in a",
    "start": "512479",
    "end": "518959"
  },
  {
    "text": "few minutes now uh very broadly there's two",
    "start": "518959",
    "end": "525760"
  },
  {
    "text": "types of storage that you want to consider right ephirmal storage and persistent storage and even the ephirmal",
    "start": "525760",
    "end": "532320"
  },
  {
    "text": "case is pretty uh crucial to support right because every container or at",
    "start": "532320",
    "end": "537360"
  },
  {
    "text": "least most containers at some point are going to need to store data that is not going to outlive the container but is",
    "start": "537360",
    "end": "544480"
  },
  {
    "text": "that is also not going to fit into memory right and so enabling this you also unlock use cases like uh sharing",
    "start": "544480",
    "end": "551120"
  },
  {
    "text": "data between the different containers in your VMs right because your VM can have more than one containers that fulfill",
    "start": "551120",
    "end": "557839"
  },
  {
    "text": "different roles right and then with this ephreal storage you can also have for example uh temporary log storage before",
    "start": "557839",
    "end": "564240"
  },
  {
    "text": "sending those logs over to a cloud service or all kinds of caching and snapshotting and you know checkpoints",
    "start": "564240",
    "end": "570560"
  },
  {
    "text": "and so forth right so with this the uh first priority is always going to be",
    "start": "570560",
    "end": "576240"
  },
  {
    "text": "security right and uh confidentiality especially so even if that storage is a",
    "start": "576240",
    "end": "582080"
  },
  {
    "text": "firm you still don't want your cloud provider to have access to it and then the second point here is going to be",
    "start": "582080",
    "end": "588240"
  },
  {
    "text": "integrating with Kubernetes because as you know uh there are you know Kubernetes storage features that people",
    "start": "588240",
    "end": "594000"
  },
  {
    "text": "are leveraging today and if we want people to adopt Koko uh and make that transition as smooth as possible we want",
    "start": "594000",
    "end": "600560"
  },
  {
    "text": "to be careful of how we integrate with that and so with this the key elements",
    "start": "600560",
    "end": "606800"
  },
  {
    "text": "of the design are going to be that uh you know from the host side we're going to use a uh storage driver in Kubernetes",
    "start": "606800",
    "end": "614640"
  },
  {
    "text": "and create a blog device on the host an empty blog device on the whole side and then we're going to pass that into the",
    "start": "614640",
    "end": "620880"
  },
  {
    "text": "VM and then inside the VM we're going to encrypt and format this block",
    "start": "620880",
    "end": "627320"
  },
  {
    "text": "device and as I was saying before key challenge is is going to be related to",
    "start": "627320",
    "end": "633440"
  },
  {
    "text": "uh securing the the VM boundary right this interface between the trusted confidential VM and the outside right",
    "start": "633440",
    "end": "639760"
  },
  {
    "text": "and we're going to do that through the security policy",
    "start": "639760",
    "end": "644000"
  },
  {
    "text": "So back to square one this is the exact same diagram that I showed you guys uh two slides ago so the basic life cycle",
    "start": "646959",
    "end": "653760"
  },
  {
    "text": "of a container so remember we uh you know we",
    "start": "653760",
    "end": "659040"
  },
  {
    "text": "create this container spec we send it over to the cubelet right so now we're dealing with this u confidential storage",
    "start": "659040",
    "end": "666240"
  },
  {
    "text": "right we're essentially implementing a new uh storage type into our Kubernetes",
    "start": "666240",
    "end": "671360"
  },
  {
    "text": "cluster and to do this following the Kubernetes storage model you want to implement what is called a CSI",
    "start": "671360",
    "end": "678600"
  },
  {
    "text": "driver csi stands for uh container storage interface right and",
    "start": "678600",
    "end": "685160"
  },
  {
    "text": "essentially a way to tell your uh Kubernetes control plane right how to",
    "start": "685160",
    "end": "690959"
  },
  {
    "text": "handle this custom storage type right and so now when you create a container spec you're going to specify that that",
    "start": "690959",
    "end": "698720"
  },
  {
    "text": "volume uh which refers to uh your new storage type right and so you're going",
    "start": "698720",
    "end": "704160"
  },
  {
    "text": "to make a reference to your CSI driver inside the container spec and now when you send that spec over to your cluster",
    "start": "704160",
    "end": "711839"
  },
  {
    "text": "when it reaches the cublet the cubelet is going to see that reference to your CSI driver and then it's going to",
    "start": "711839",
    "end": "717279"
  },
  {
    "text": "trigger your u your CSI driver right and then it's inside this driver that we're",
    "start": "717279",
    "end": "723360"
  },
  {
    "text": "going to uh create a new empty uh block storage device right and then we're",
    "start": "723360",
    "end": "728800"
  },
  {
    "text": "going to pass it to the cattle runtime and then the cattle runtime will virtualize this device into the VM right",
    "start": "728800",
    "end": "735200"
  },
  {
    "text": "so we'll pass a device into the VM over Verile block right which is a which is a",
    "start": "735200",
    "end": "740720"
  },
  {
    "text": "transport for a virtualized device in in Linux now this uh storage gets to the",
    "start": "740720",
    "end": "749040"
  },
  {
    "text": "runtime it gets into the kata agent right and then the kata agent will upload to a component called the",
    "start": "749040",
    "end": "754160"
  },
  {
    "text": "confidential data hub the CDH and in this CDH we're going to do a couple things first thing we're going to do",
    "start": "754160",
    "end": "760240"
  },
  {
    "text": "we're going to do is we're going to create a random encryption key right so",
    "start": "760240",
    "end": "765519"
  },
  {
    "text": "generate it inside the VM and then we're going to use this encryption key to turn",
    "start": "765519",
    "end": "770639"
  },
  {
    "text": "the uh the device that we receive from the host into an encrypted device and that's going to work through uh DM",
    "start": "770639",
    "end": "776959"
  },
  {
    "text": "encrypt and DM integrity which are uh Linux kernel modules right and so the",
    "start": "776959",
    "end": "783200"
  },
  {
    "text": "nice property here is that because this encryption key was created inside the VM",
    "start": "783200",
    "end": "788399"
  },
  {
    "text": "because the VM memory is encrypted and because the key never leaves the VM you",
    "start": "788399",
    "end": "793760"
  },
  {
    "text": "can guarantee that the data uh that's in that device is only accessible to this",
    "start": "793760",
    "end": "798880"
  },
  {
    "text": "one confidential VM here",
    "start": "798880",
    "end": "803240"
  },
  {
    "text": "now there's a couple more stages to this uh and this is where we're going to look into the security",
    "start": "805200",
    "end": "812120"
  },
  {
    "text": "policy now remember and you know at the risk of repeating myself everything that is outside of this confidential VM is",
    "start": "812120",
    "end": "819480"
  },
  {
    "text": "untrusted right and so um when we create this container spec we",
    "start": "819480",
    "end": "828079"
  },
  {
    "text": "want to we want to guard this container spec right we want to we want to protect it right and that's going to be the role",
    "start": "828079",
    "end": "833839"
  },
  {
    "text": "of the security policy and so with this I have one confession to make to you guys i actually lied to you guys earlier",
    "start": "833839",
    "end": "841279"
  },
  {
    "text": "so when I explained the basic flow of a container right when you create that",
    "start": "841279",
    "end": "846880"
  },
  {
    "text": "container spec and you send it over to the cubelet the cubelet is not actually going to uh forward that YAML spec as is",
    "start": "846880",
    "end": "855120"
  },
  {
    "text": "to the kata agent the cublet is actually going to transform that spec into a much lower level JSON spec and it is this",
    "start": "855120",
    "end": "862639"
  },
  {
    "text": "JSON spec that will actually be executed by your kata agent right and so because",
    "start": "862639",
    "end": "868800"
  },
  {
    "text": "all of these components outside of the VM through which the the spec goes through are entrusted well they could",
    "start": "868800",
    "end": "875600"
  },
  {
    "text": "temper with the spec still before it reaches the kata agent and now we need a way to tie this highle spec and the",
    "start": "875600",
    "end": "883440"
  },
  {
    "text": "low-level spec together right and that's going to be the role of the policy and so the way this is going to work is that",
    "start": "883440",
    "end": "889440"
  },
  {
    "text": "we have a a tool called the policy generator this policy generator is going to take your YAML spec is going to",
    "start": "889440",
    "end": "896480"
  },
  {
    "text": "generate uh security policy that is going to correspond to the eventual uh",
    "start": "896480",
    "end": "902800"
  },
  {
    "text": "low-level JSON spec right and then we reinject this policy into the YAML spec",
    "start": "902800",
    "end": "909199"
  },
  {
    "text": "and then we send all of that to uh to the Kata agent right and so now the kata",
    "start": "909199",
    "end": "914399"
  },
  {
    "text": "agent sees two things first as before the JSON spec and then the second thing is going to be the security policy and",
    "start": "914399",
    "end": "921920"
  },
  {
    "text": "then inside the kata agent we're going to enforce that the uh JSON spec matches",
    "start": "921920",
    "end": "928240"
  },
  {
    "text": "the security policy and we need to do this right otherwise we'd be executing any kind of random uh container payload",
    "start": "928240",
    "end": "934320"
  },
  {
    "text": "right uh and if you're curious the uh this policy right it's implemented in",
    "start": "934320",
    "end": "940240"
  },
  {
    "text": "the reggo policy language which actually also originated in another uh CNCF",
    "start": "940240",
    "end": "946480"
  },
  {
    "text": "project called the open policy agent project or OPA uh but do note though",
    "start": "946480",
    "end": "951680"
  },
  {
    "text": "that in uh confidential containers we don't actually use the uh the original",
    "start": "951680",
    "end": "958079"
  },
  {
    "text": "OPA implementation we use a rust implementation of rego called regor rust that was also developed on Microsoft",
    "start": "958079",
    "end": "966680"
  },
  {
    "text": "so this policy here uh really is a way to you know tie the the highle spec to",
    "start": "966680",
    "end": "975199"
  },
  {
    "text": "the low-level one right there's no way around it this is uh due to the way that",
    "start": "975199",
    "end": "980399"
  },
  {
    "text": "kubernetes works right so we have to do this now why is this relevant for",
    "start": "980399",
    "end": "986160"
  },
  {
    "text": "storage right remember that when we create that block storage",
    "start": "986160",
    "end": "991519"
  },
  {
    "text": "device and the driver right we're injecting a new device into the VM Right obviously we don't want to be injecting",
    "start": "991519",
    "end": "998959"
  },
  {
    "text": "any random device into the VM or or any number of devices right that would represent a significant attack vector",
    "start": "998959",
    "end": "1005279"
  },
  {
    "text": "right and so we need a way to protect this device to guard it you might say we need a way to police it right and so",
    "start": "1005279",
    "end": "1012000"
  },
  {
    "text": "that's exactly what we're going to do we're going to add the device metadata uh to the security policy right and this",
    "start": "1012000",
    "end": "1019199"
  },
  {
    "text": "way the device uh on top of the container is also you know protected uh",
    "start": "1019199",
    "end": "1025280"
  },
  {
    "text": "uh by the security policy",
    "start": "1025280",
    "end": "1029240"
  },
  {
    "text": "now we had to introduce this policy right to tie the high level and low-le",
    "start": "1038360",
    "end": "1044160"
  },
  {
    "text": "specs right but you might notice that this",
    "start": "1044160",
    "end": "1049360"
  },
  {
    "text": "policy is still coming from outside the VM right so at this point it's still untrusted and now we're going to have to",
    "start": "1049360",
    "end": "1055200"
  },
  {
    "text": "establish uh trust in this policy right and we're going to do this through the",
    "start": "1055200",
    "end": "1060480"
  },
  {
    "text": "uh remote addestation process process and so the way that this is going to work is that we're going to have a uh",
    "start": "1060480",
    "end": "1067520"
  },
  {
    "text": "trusted and remote addestation service and this addistition service is going to store the reference uh security policy",
    "start": "1067520",
    "end": "1075039"
  },
  {
    "text": "the ground truth for your policy",
    "start": "1075039",
    "end": "1079240"
  },
  {
    "text": "so now after the uh kata agent has enforced the you know the policy against",
    "start": "1082880",
    "end": "1090240"
  },
  {
    "text": "the low-level spec this kata agent can call into this addestation agent right",
    "start": "1090240",
    "end": "1095280"
  },
  {
    "text": "and then the addestation agent will fetch the observe policy the policy that it receives from the outside right and",
    "start": "1095280",
    "end": "1102480"
  },
  {
    "text": "uh this policy is going to be signed by the TE and it's going to send it over to the addition addestation service and And",
    "start": "1102480",
    "end": "1109280"
  },
  {
    "text": "then in the editation service we're going to check that the uh reference",
    "start": "1109280",
    "end": "1114760"
  },
  {
    "text": "policy matches the observe policy right and so if that process passes then you",
    "start": "1114760",
    "end": "1121360"
  },
  {
    "text": "can guarantee that your policy is trusted hence your container is trusted hence your device is trusted and so that",
    "start": "1121360",
    "end": "1129200"
  },
  {
    "text": "concludes the loop here on you know a full end toend uh you know",
    "start": "1129200",
    "end": "1135480"
  },
  {
    "text": "trustworthiness verification of the of the device in the container container and you know closes the loop on a firmal",
    "start": "1135480",
    "end": "1141360"
  },
  {
    "text": "storage here so that was it for the theory on a",
    "start": "1141360",
    "end": "1148400"
  },
  {
    "text": "firmal storage so now I'm going to run through a quick demo uh based on the",
    "start": "1148400",
    "end": "1153760"
  },
  {
    "text": "code that I have in that PR that I was talking to you guys about so the way that it's going to work is",
    "start": "1153760",
    "end": "1159679"
  },
  {
    "text": "that we're going to deploy uh going to deploy a container into our cluster",
    "start": "1159679",
    "end": "1165360"
  },
  {
    "text": "using this new uh storage type and then we're going to play with it and show for example that the encryption layer is",
    "start": "1165360",
    "end": "1171799"
  },
  {
    "text": "transparent uh from the perspective of the end user",
    "start": "1171799",
    "end": "1177960"
  },
  {
    "text": "so we have our container spec here uh yaml file as I was saying before first we have the name of the",
    "start": "1180240",
    "end": "1187919"
  },
  {
    "text": "container right my app here and this is going to be line seven this is going to be how the policy is going to appear in",
    "start": "1187919",
    "end": "1195760"
  },
  {
    "text": "the uh in the container right so we B 64 encoded and it's a pretty uh significant",
    "start": "1195760",
    "end": "1202080"
  },
  {
    "text": "uh payload right so most of it is going to be truncated here right but that's how it appears in the container spec as a as an annotation",
    "start": "1202080",
    "end": "1209600"
  },
  {
    "text": "then we make a reference to our CSI driver which is called Coco local CSI",
    "start": "1209600",
    "end": "1214960"
  },
  {
    "text": "here and we're going to claim 10 gigs of storage against that driver and then",
    "start": "1214960",
    "end": "1220160"
  },
  {
    "text": "we're going to mount it inside the container on /mnt/",
    "start": "1220160",
    "end": "1226080"
  },
  {
    "text": "encrypted now we can uh you know deploy this container uh to our cluster using",
    "start": "1227240",
    "end": "1233120"
  },
  {
    "text": "cube cut apply and we'll see that the container was created successfully and then because we're in debug mode uh we",
    "start": "1233120",
    "end": "1239520"
  },
  {
    "text": "can actually open a shell into this container right and now we can also u",
    "start": "1239520",
    "end": "1245440"
  },
  {
    "text": "look at the file system that was just mounted and so if you look here from uh from right to left on the far right you",
    "start": "1245440",
    "end": "1252240"
  },
  {
    "text": "have uh a file system mounted on /mnt encrypted we have about 10 gigs of",
    "start": "1252240",
    "end": "1258240"
  },
  {
    "text": "storage available right minus some metadata for encryption it's an X4 file system and",
    "start": "1258240",
    "end": "1264799"
  },
  {
    "text": "then on the far left here you'll see that this is a dev mapper device right and this uh this was created in the in",
    "start": "1264799",
    "end": "1271919"
  },
  {
    "text": "the CDH right so remember in the CDH we create this uh encrypted device right and so the way that this is going to",
    "start": "1271919",
    "end": "1277840"
  },
  {
    "text": "work is that the kernel is going to take the original device passed uh by the",
    "start": "1277840",
    "end": "1282880"
  },
  {
    "text": "host right encrypt that device and then expose a plain text device to the",
    "start": "1282880",
    "end": "1287919"
  },
  {
    "text": "container right and then in the background the kernel will handle all the the encryption later right and we",
    "start": "1287919",
    "end": "1293760"
  },
  {
    "text": "can actually show this right so we can CD into this folder we can uh list the",
    "start": "1293760",
    "end": "1299039"
  },
  {
    "text": "the contents and obviously at first it's going to be empty right and then we can",
    "start": "1299039",
    "end": "1304400"
  },
  {
    "text": "um write some very sensitive and confidential payload into that folder",
    "start": "1304400",
    "end": "1309840"
  },
  {
    "text": "then we can list that folder again you'll see that our new file is here and then we can uh cut the content so as I",
    "start": "1309840",
    "end": "1318000"
  },
  {
    "text": "was saying right the uh the end user does not have to do any kind of setup to",
    "start": "1318000",
    "end": "1323520"
  },
  {
    "text": "enable this encryption right this is taken care of uh in the cocoa control",
    "start": "1323520",
    "end": "1330000"
  },
  {
    "text": "plane so that was it for ephirmal storage and now we're going to look into",
    "start": "1334280",
    "end": "1339760"
  },
  {
    "text": "the harder problem of persistent storage right and so mind you for this we're",
    "start": "1339760",
    "end": "1345360"
  },
  {
    "text": "still very much at the drawing board so still in the design phase there's different designs that we're thinking",
    "start": "1345360",
    "end": "1352240"
  },
  {
    "text": "about uh depending on what functionality you want to provide or how much control you want to give to the end user right",
    "start": "1352240",
    "end": "1358880"
  },
  {
    "text": "and so in this I'm only going to talk about one design right and so keep in",
    "start": "1358880",
    "end": "1363919"
  },
  {
    "text": "mind that this is still in fog and could very very much change in the future the good news is that if you understand",
    "start": "1363919",
    "end": "1370080"
  },
  {
    "text": "ephirmal storage I think it only takes marginal effort uh to understand persistent storage here because we're",
    "start": "1370080",
    "end": "1375760"
  },
  {
    "text": "going to build on top of that right there's only u some components related to how the CSI driver works and we're",
    "start": "1375760",
    "end": "1383600"
  },
  {
    "text": "going to include also a new component called the uh keyboarder service that's going to store uh decryption key",
    "start": "1383600",
    "end": "1392440"
  },
  {
    "text": "so back to the ephirmal storage uh design so remember the key components here were the CSI driver to create a um",
    "start": "1392880",
    "end": "1402960"
  },
  {
    "text": "an encry sorry an empty block storage device right the confidential data hub",
    "start": "1402960",
    "end": "1408240"
  },
  {
    "text": "the addestation agent and then the addition service now for persistent storage all",
    "start": "1408240",
    "end": "1415280"
  },
  {
    "text": "these components are going to change right and so as you can imagine for example in the CSI driver it doesn't",
    "start": "1415280",
    "end": "1423760"
  },
  {
    "text": "make sense anymore to create an empty block storage device right now we're",
    "start": "1423760",
    "end": "1428799"
  },
  {
    "text": "going to want to uh provision some storage coming from some cloud service right and so this is how uh the the CSI",
    "start": "1428799",
    "end": "1436559"
  },
  {
    "text": "driver is going to operate now right so get this storage from uh some remote location and this storage importantly is",
    "start": "1436559",
    "end": "1443520"
  },
  {
    "text": "going to be already encrypted right and so now when we get to the confidential",
    "start": "1443520",
    "end": "1449120"
  },
  {
    "text": "data hub really struggling with this remote when we get to the confidential",
    "start": "1449120",
    "end": "1456640"
  },
  {
    "text": "data hub let me just use a keyboard",
    "start": "1456640",
    "end": "1461720"
  },
  {
    "text": "so when we get to the confidential data hub um again doesn't make sense anymore to generate a uh random encryption key",
    "start": "1464080",
    "end": "1472559"
  },
  {
    "text": "right we have to fetch that key from somewhere and we're going to fetch it from this uh key broker service here so",
    "start": "1472559",
    "end": "1478880"
  },
  {
    "text": "now the CDH is going to call into the addestation agent and as before the",
    "start": "1478880",
    "end": "1484720"
  },
  {
    "text": "addestation agent is going to uh fetch that security policy that will be signed",
    "start": "1484720",
    "end": "1490480"
  },
  {
    "text": "by the TE it's going to send that uh policy over to the KBS and then in the",
    "start": "1490480",
    "end": "1495600"
  },
  {
    "text": "KBS a key broker service uh it will talk to the addition service as as always the",
    "start": "1495600",
    "end": "1501440"
  },
  {
    "text": "addition service will compare the observe policy with the reference policy if the addition service is happy uh the",
    "start": "1501440",
    "end": "1508240"
  },
  {
    "text": "key broker service is happy and it releases that key down to the addition agent and then into the CDH right and",
    "start": "1508240",
    "end": "1514720"
  },
  {
    "text": "then the CDH uses that key to decrypt the data and then finally mount it into",
    "start": "1514720",
    "end": "1520799"
  },
  {
    "text": "the container So that was pretty much it folks for uh",
    "start": "1520799",
    "end": "1526080"
  },
  {
    "text": "persistent storage one thing that I do want to note uh as you might notice is that in this",
    "start": "1526080",
    "end": "1534039"
  },
  {
    "text": "design the addition protocol is driven by the control plane components that are",
    "start": "1534039",
    "end": "1541600"
  },
  {
    "text": "built into this VM image right so it makes it a bit hard for customers to",
    "start": "1541600",
    "end": "1548240"
  },
  {
    "text": "bring in their own addistation protocol and services and whatnot right they would have to modify this VM image and",
    "start": "1548240",
    "end": "1555919"
  },
  {
    "text": "you know that's that really something that doesn't really scale right so uh we",
    "start": "1555919",
    "end": "1561520"
  },
  {
    "text": "would like to uh think of a design where we can bring these uh confidential data",
    "start": "1561520",
    "end": "1568640"
  },
  {
    "text": "hub and addestation agent components into the container itself right so that you can just deploy your own container",
    "start": "1568640",
    "end": "1574960"
  },
  {
    "text": "uh very easily now the problem with this is that you'd have to introduce uh a new API between the kata agent and the",
    "start": "1574960",
    "end": "1582320"
  },
  {
    "text": "container right and uh the the kata agent would have to talk to the container then you run into some uh",
    "start": "1582320",
    "end": "1589520"
  },
  {
    "text": "troubles including a bootstrapping problem right because now the u kata",
    "start": "1589520",
    "end": "1594720"
  },
  {
    "text": "agent sets up the container but also needs to u make requests to it to set it",
    "start": "1594720",
    "end": "1599919"
  },
  {
    "text": "up further right so that's a bit tricky to tricky to uh to implement right and",
    "start": "1599919",
    "end": "1605120"
  },
  {
    "text": "then also obviously you have to design and maintain this API between the kata agent and the",
    "start": "1605120",
    "end": "1611640"
  },
  {
    "text": "container but you know this is a use case that we care about as well so we might have to support uh both designs at",
    "start": "1611640",
    "end": "1617919"
  },
  {
    "text": "the same time eventually and that was pretty much it",
    "start": "1617919",
    "end": "1624080"
  },
  {
    "text": "folks so today we talked a little bit about confidential computing and how end",
    "start": "1624080",
    "end": "1629120"
  },
  {
    "text": "users can uh you know protect their data in use from a cloud provider right which",
    "start": "1629120",
    "end": "1634960"
  },
  {
    "text": "is potentially malicious and then cloud provider can also uh leverage these solutions right and enable multi-tenency",
    "start": "1634960",
    "end": "1642320"
  },
  {
    "text": "and you know maximize uh hardware utilization and then in the sense of",
    "start": "1642320",
    "end": "1647360"
  },
  {
    "text": "confidential storage the way that it works is that we uh we've seen how we can leverage Kubernetes CSI drivers uh",
    "start": "1647360",
    "end": "1654799"
  },
  {
    "text": "to provision local or remote storage right and then uh it's very important that the encryption layer and the key",
    "start": "1654799",
    "end": "1661840"
  },
  {
    "text": "management layer is handled inside this confidential VM or you know in trusted",
    "start": "1661840",
    "end": "1667679"
  },
  {
    "text": "components right and then we have the security policy uh to ensure the",
    "start": "1667679",
    "end": "1673080"
  },
  {
    "text": "trustworthiness of this container spec that's it folks thank you so much",
    "start": "1673080",
    "end": "1679679"
  },
  {
    "text": "for attending thank you for your time uh I linked the uh PR that I was talking about earlier if you want to go ahead",
    "start": "1679679",
    "end": "1686159"
  },
  {
    "text": "and take a look please feel free thank you so much",
    "start": "1686159",
    "end": "1690640"
  },
  {
    "text": "folks we have 1 minute 40 seconds left i think we have time for one",
    "start": "1695640",
    "end": "1701919"
  },
  {
    "text": "question over there",
    "start": "1703240",
    "end": "1707480"
  },
  {
    "text": "thank you for your talk it was great uh are there any performance",
    "start": "1714080",
    "end": "1719399"
  },
  {
    "text": "issues related to configuration containers",
    "start": "1719399",
    "end": "1725039"
  },
  {
    "text": "you mean to uh Coco itself or like to the the storage part uh like all the encryption and bootstrapping",
    "start": "1725039",
    "end": "1732159"
  },
  {
    "text": "right right yeah that's a very good question um so definitely for this right so one one metric that we care about is",
    "start": "1732159",
    "end": "1739679"
  },
  {
    "text": "um container creation time right and so with this when you do that setup work at",
    "start": "1739679",
    "end": "1745760"
  },
  {
    "text": "first right to create that empty block storage and so forth right you're going to add uh some overhead definitely right",
    "start": "1745760",
    "end": "1751360"
  },
  {
    "text": "that's something I've I've measured in uh in terms of seconds right I have some ideas to to alleviate that right we",
    "start": "1751360",
    "end": "1758240"
  },
  {
    "text": "could have you know storage pool or something like that right locally um and then",
    "start": "1758240",
    "end": "1764960"
  },
  {
    "text": "inside once you're inside the VM Right i'm assuming that the the encryption layer is going to have is going to add",
    "start": "1764960",
    "end": "1771039"
  },
  {
    "text": "even more overhead right in terms of uh IO operations but that's not something I've I've measured yet but definitely",
    "start": "1771039",
    "end": "1777279"
  },
  {
    "text": "that's you know something we expect and it's something that I'm going to look into for sure thank you thank you",
    "start": "1777279",
    "end": "1785720"
  },
  {
    "text": "anyone else you can just tell me I repeat your",
    "start": "1786480",
    "end": "1791760"
  },
  {
    "text": "questions because we're we have 10 seconds left so",
    "start": "1791760",
    "end": "1796600"
  },
  {
    "text": "Why is it okay for us to trust the addition service that's an assumption we make right so we we assume that the addition service and the key broker",
    "start": "1801360",
    "end": "1807840"
  },
  {
    "text": "service are trusted right that's that's the assumption we make i think we're on time uh thank you",
    "start": "1807840",
    "end": "1814799"
  },
  {
    "text": "folks thank you so much for your time appreciate it",
    "start": "1814799",
    "end": "1820039"
  }
]