[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "okay hi everyone happy Friday I'd like to thank everyone who's joining us today",
    "start": "439",
    "end": "5640"
  },
  {
    "text": "welcome to today's CN CF webinar zero trust services in kubernetes I'm Kristy",
    "start": "5640",
    "end": "11519"
  },
  {
    "text": "tan marketing communications manager here at CNCs I'll be moderating today's webinar we would like to welcome our",
    "start": "11519",
    "end": "17789"
  },
  {
    "text": "presenter today Randi Abernathy managing partner at our XM a few housekeeping",
    "start": "17789",
    "end": "22920"
  },
  {
    "text": "items before we get started during the webinar you are not able to talk as an attendee there is a Q&A box at the",
    "start": "22920",
    "end": "29880"
  },
  {
    "text": "bottom of your screen please feel free to drop at your questions in there and we'll get to as many as we can at the",
    "start": "29880",
    "end": "35040"
  },
  {
    "text": "end of the presentation this is an official webinar of the CNCs and as such is subject to the CN CF code of conduct",
    "start": "35040",
    "end": "41790"
  },
  {
    "text": "please do not add anything to the chat or questions that would be in violation of that code of conduct",
    "start": "41790",
    "end": "47190"
  },
  {
    "text": "basically please be respectful of all your fellow participants and presenter please also note that the recording and",
    "start": "47190",
    "end": "54059"
  },
  {
    "text": "slides will be posted later today to the CN CF webinars page at CNCs IO slash",
    "start": "54059",
    "end": "59280"
  },
  {
    "text": "webinars with that I'll hand it over to Randy to kick off today's presentation take it away all right thanks Christy",
    "start": "59280",
    "end": "66990"
  },
  {
    "text": "hey good morning good afternoon good evening as appropriate everybody this is",
    "start": "66990",
    "end": "72270"
  },
  {
    "text": "the zero trust services and kubernetes talk and the idea behind this webinar is to sort of cover a bunch of security",
    "start": "72270",
    "end": "81750"
  },
  {
    "text": "concerns that face developers building services for modern cloud native types",
    "start": "81750",
    "end": "86939"
  },
  {
    "text": "of environments these days developers are often faced DevOps teams in general",
    "start": "86939",
    "end": "93180"
  },
  {
    "text": "are often faced with very sophisticated pipelines that move you know code pushes",
    "start": "93180",
    "end": "100170"
  },
  {
    "text": "through continuous integration and on to continuous deployment and finally ultimately into a kubernetes style",
    "start": "100170",
    "end": "106890"
  },
  {
    "text": "environment and in many of these scenarios the the pieces of the puzzle",
    "start": "106890",
    "end": "113040"
  },
  {
    "text": "are broken apart into many components and so sometimes it's hard to get a handle on the overarching security",
    "start": "113040",
    "end": "120600"
  },
  {
    "text": "concerns and how all the different pieces work together and so the idea behind the seminar is really to talk",
    "start": "120600",
    "end": "125790"
  },
  {
    "text": "about zero trust but also you know sort of combine that with least privileged perimeter lists and security and depth",
    "start": "125790",
    "end": "132030"
  },
  {
    "text": "other types of con that are really all ultimately related in many ways from the viewpoint and",
    "start": "132030",
    "end": "137850"
  },
  {
    "text": "Vantage of a service developer and then to kind of show how each of the",
    "start": "137850",
    "end": "143130"
  },
  {
    "text": "different stages of the pipeline have their own considerations and concerns security wise there are tons of security",
    "start": "143130",
    "end": "151020"
  },
  {
    "text": "topics out there of course that we could talk about specific to administering",
    "start": "151020",
    "end": "156360"
  },
  {
    "text": "clusters or administering containerization processes and and",
    "start": "156360",
    "end": "161430"
  },
  {
    "text": "hosting but we're gonna really focus on this the the Vantage of the developer the DevOps team the you know service",
    "start": "161430",
    "end": "169080"
  },
  {
    "text": "reliability engineer whatever the case may be the people concerned with building those services and trying to do",
    "start": "169080",
    "end": "174750"
  },
  {
    "text": "their job to secure them as much as possible so in this particular context",
    "start": "174750",
    "end": "182040"
  },
  {
    "start": "180000",
    "end": "370000"
  },
  {
    "text": "we could sort of define zero trust as a model where components trust nothing and",
    "start": "182040",
    "end": "188840"
  },
  {
    "text": "every single thing that is done by a particular component needs to be",
    "start": "188840",
    "end": "194490"
  },
  {
    "text": "authorized so authentic application and authorization of course being the",
    "start": "194490",
    "end": "200250"
  },
  {
    "text": "component there and so in cloud native environments we have this sort of mental",
    "start": "200250",
    "end": "206070"
  },
  {
    "text": "model of a perimeter --less platform right if you are running your software",
    "start": "206070",
    "end": "212280"
  },
  {
    "text": "in a orchestrated cluster where is that cluster it's not really supposed to matter right it could be on Amazon or",
    "start": "212280",
    "end": "219090"
  },
  {
    "text": "Google Cloud or Azure it could be in your own bare metal data center it could",
    "start": "219090",
    "end": "224310"
  },
  {
    "text": "be in a multi-tenant environment or a single tenant environment but if we want our applications to be robust and to",
    "start": "224310",
    "end": "231480"
  },
  {
    "text": "operate in any of these settings we just sort of need to assume that there's no protective perimeter right and really",
    "start": "231480",
    "end": "238410"
  },
  {
    "text": "when you think about security and depth it's best to assume that anyway right so zero trust sort of promotes a lot of",
    "start": "238410",
    "end": "244739"
  },
  {
    "text": "concepts that really have been around for quite a long time but it puts a focus on them and that's always a good",
    "start": "244739",
    "end": "250890"
  },
  {
    "text": "thing and so everything has to be verified before access is granted right and we can look at that in a lot of",
    "start": "250890",
    "end": "256260"
  },
  {
    "text": "different ways when we think about perimeter lists right that's that's the thinking of there is no safe perimeter",
    "start": "256260",
    "end": "262950"
  },
  {
    "text": "which means then of course you can't trust anybody because there's no perimeter you can say that just because you're coming from",
    "start": "262950",
    "end": "268500"
  },
  {
    "text": "host a that everything's okay or that you're coming from host C",
    "start": "268500",
    "end": "274470"
  },
  {
    "text": "everything's okay or you're coming from the internet and things aren't okay you shouldn't trust host a or C any more",
    "start": "274470",
    "end": "280050"
  },
  {
    "text": "than you trust the Internet because you're running in a cloud that has multiple tenants and the",
    "start": "280050",
    "end": "286639"
  },
  {
    "text": "administrators that Amazon hires aren't your employees and you don't know you know what they may be doing what they",
    "start": "286639",
    "end": "294000"
  },
  {
    "text": "have access to there are bad actors you know cropping up everywhere so we just sort of need to encrypt everything on",
    "start": "294000",
    "end": "300479"
  },
  {
    "text": "the wire we need to encrypt everything at rest we need to think about auth in all scenarios and you know that's just",
    "start": "300479",
    "end": "307560"
  },
  {
    "text": "sort of perimeter less thinking least privilege falls into this as well you want to give every component of your",
    "start": "307560",
    "end": "314580"
  },
  {
    "text": "system the smallest set of privileges that you can possibly give it and this goes back to zero trust right trusting",
    "start": "314580",
    "end": "322680"
  },
  {
    "text": "nobody right except the specific authenticated authorized activities",
    "start": "322680",
    "end": "328740"
  },
  {
    "text": "right and so not only do I make sure I know that that host B is host B but I",
    "start": "328740",
    "end": "336270"
  },
  {
    "text": "make sure that host B is only doing what host B is supposed to be able to do you know cranking it down to another level",
    "start": "336270",
    "end": "342659"
  },
  {
    "text": "and security in depth means making sure that you're dealing with all of these concepts every opportunity you get so",
    "start": "342659",
    "end": "350699"
  },
  {
    "text": "what we're going to see is this is going to apply to service engineering so the software development process is going to",
    "start": "350699",
    "end": "356150"
  },
  {
    "text": "apply to containerization it's going to apply to the deployment of your",
    "start": "356150",
    "end": "361860"
  },
  {
    "text": "applications in a cluster like a kubernetes environment and then at runtime while the applications up and",
    "start": "361860",
    "end": "368280"
  },
  {
    "text": "running in those environments as well so we're going to look at a lot of",
    "start": "368280",
    "end": "373289"
  },
  {
    "start": "370000",
    "end": "631000"
  },
  {
    "text": "different things to sort of bolster this we're gonna look at minimizing attack surfaces we're going to talk about",
    "start": "373289",
    "end": "379520"
  },
  {
    "text": "assuming that you'll be compromised right if you take that stance assume that this piece of software will be",
    "start": "379520",
    "end": "386340"
  },
  {
    "text": "compromised what can you do such that when that you know fabled day happens",
    "start": "386340",
    "end": "392969"
  },
  {
    "text": "the attacker is bereft of any actual real ability to privilege escalate or to",
    "start": "392969",
    "end": "400050"
  },
  {
    "text": "break or to attack other components within your system right so assuming you'll be",
    "start": "400050",
    "end": "406139"
  },
  {
    "text": "compromised in taking that Vantage and this is hard I think for a lot of Engineers because we want to defend",
    "start": "406139",
    "end": "411330"
  },
  {
    "text": "ourselves and make sure that we create this ironclad barrier around all of our",
    "start": "411330",
    "end": "416729"
  },
  {
    "text": "software but in the end there's always tricks right and there are things",
    "start": "416729",
    "end": "422220"
  },
  {
    "text": "outside your control that could occur specifically when you're in a",
    "start": "422220",
    "end": "427530"
  },
  {
    "text": "containerized environment because you have the container platform itself whether that's kubernetes or something",
    "start": "427530",
    "end": "432659"
  },
  {
    "text": "else you have the containerization process you have the supply chain now all the build tools and things like that",
    "start": "432659",
    "end": "437789"
  },
  {
    "text": "so there's a there's a there's a lot of opportunity for for new attack vectors",
    "start": "437789",
    "end": "444419"
  },
  {
    "text": "to be leveraged and some of them are outside the control of the developer so if we assume that we'll be compromised",
    "start": "444419",
    "end": "449699"
  },
  {
    "text": "maybe we can reduce the impact of that compromise off all connections in traffic obviously provide software with",
    "start": "449699",
    "end": "456750"
  },
  {
    "text": "the smallest set of permissions all right so so give make sure your service has just the permissions that it needs",
    "start": "456750",
    "end": "464400"
  },
  {
    "text": "and one of the things that I find traditional engineering sort of skips is",
    "start": "464400",
    "end": "473060"
  },
  {
    "text": "really taking ownership of the runtime nature of the application even in some",
    "start": "473060",
    "end": "478800"
  },
  {
    "text": "DevOps environments if you ask a team hey what are the exact capabilities and",
    "start": "478800",
    "end": "484680"
  },
  {
    "text": "access permissions that your software needs they find it hard to articulate",
    "start": "484680",
    "end": "489840"
  },
  {
    "text": "and then when you flip it the other way around and say who are the exact legal",
    "start": "489840",
    "end": "494940"
  },
  {
    "text": "or clients that should be accessing your service often again may be hard to articulate when this is stuff you've got",
    "start": "494940",
    "end": "501210"
  },
  {
    "text": "to articulate if you're going to create any kind of policy that's going to control this stuff it sort of ties into",
    "start": "501210",
    "end": "507090"
  },
  {
    "text": "resource consumption and things like that all of these new things that we need to think about when we're operating",
    "start": "507090",
    "end": "513328"
  },
  {
    "text": "in a shared pool we used to run on our own machine we would think okay this is my box I have the memory and the CPU",
    "start": "513329",
    "end": "519448"
  },
  {
    "text": "it's got when you run in a shared pool of resources like a container orchestration environment you have to",
    "start": "519449",
    "end": "525630"
  },
  {
    "text": "say how much memory how much CPU you'd like to have limits and requests and things like that and it's the same for",
    "start": "525630",
    "end": "531029"
  },
  {
    "text": "the security side of it no longer are we on host and we trust host see and just don't",
    "start": "531029",
    "end": "536839"
  },
  {
    "text": "worry about it because they're behind the perimeter we have to think about a lot of other things and we have to articulate these things in order to",
    "start": "536839",
    "end": "542750"
  },
  {
    "text": "manifest them in in some sort of enforceable policy emitting security",
    "start": "542750",
    "end": "548089"
  },
  {
    "text": "telemetry is another piece of the puzzle if you are building services and if you",
    "start": "548089",
    "end": "553220"
  },
  {
    "text": "assume that you're going to be compromised well one of the best things you can do when you're compromised is make sure that everybody knows it and so",
    "start": "553220",
    "end": "560149"
  },
  {
    "text": "you know obviously that there's there's there's lots of third you know party",
    "start": "560149",
    "end": "565220"
  },
  {
    "text": "tools you can use for surveillance and and the the site of the attack is not always the best place to try reporting",
    "start": "565220",
    "end": "571759"
  },
  {
    "text": "things but there's a lot of things you can report that our security related in your telemetry specifically in login",
    "start": "571759",
    "end": "578779"
  },
  {
    "text": "logging so that it has no impact on your application but that you give people who",
    "start": "578779",
    "end": "584870"
  },
  {
    "text": "are monitoring the environment that extra leg up that they might need in order to deal with the with the",
    "start": "584870",
    "end": "593139"
  },
  {
    "text": "understanding and controlling new attack vectors in containerized environments we're going to talk about that and then",
    "start": "593139",
    "end": "598339"
  },
  {
    "text": "never packaging unrequired bits we'll see a lot of containers out there in",
    "start": "598339",
    "end": "604399"
  },
  {
    "text": "production environments that have all sorts of stuff inside the file system of the container that's not needed by the",
    "start": "604399",
    "end": "609829"
  },
  {
    "text": "service and there's a trade-off here that we'll talk about but we'll also take a look at how to really strip it",
    "start": "609829",
    "end": "615860"
  },
  {
    "text": "down to the minimum and we'll also talk about never exposing unrequired functionality and there are scenarios",
    "start": "615860",
    "end": "624319"
  },
  {
    "text": "where people do this accidentally and in the name of observability often and so we'll we'll take a look at some of those",
    "start": "624319",
    "end": "630589"
  },
  {
    "text": "concerns as well so lots of things to think about and when we look at securing",
    "start": "630589",
    "end": "636829"
  },
  {
    "start": "631000",
    "end": "821000"
  },
  {
    "text": "small services microservices whatever you want to call them or any kind of service actually that you're going to",
    "start": "636829",
    "end": "642050"
  },
  {
    "text": "deploy into a orchestrated environment we have these kind of five stages that",
    "start": "642050",
    "end": "647870"
  },
  {
    "text": "you might want to think about you could break it down other ways of course but this is not a bad checklist service",
    "start": "647870",
    "end": "654439"
  },
  {
    "text": "design and construction right so the actual software engineering process right you have to build things the right",
    "start": "654439",
    "end": "660860"
  },
  {
    "text": "way so that they can be deployed in these kinds of environments correctly so that they can be observed but also",
    "start": "660860",
    "end": "667490"
  },
  {
    "text": "secure and then service packaging and container image design this is another step where",
    "start": "667490",
    "end": "673490"
  },
  {
    "text": "we're taking that service when we're putting it into an immutable containerized image and then deploying",
    "start": "673490",
    "end": "679910"
  },
  {
    "text": "it and how can we make sure that that image is as secure as possible then pod specification this is how we're going to",
    "start": "679910",
    "end": "687770"
  },
  {
    "text": "tell the system to deploy these containers when they're run and the pod",
    "start": "687770",
    "end": "693140"
  },
  {
    "text": "specification could be a template inside a deployment or it could be something that's you know being set up in a replica set by spinnaker or something",
    "start": "693140",
    "end": "699530"
  },
  {
    "text": "else but that pod specification is really the stock in trading kubernetes and it's for the most part almost purely",
    "start": "699530",
    "end": "706460"
  },
  {
    "text": "up to the team that builds the software to define that pod specification because it's the software engineering team that",
    "start": "706460",
    "end": "712820"
  },
  {
    "text": "knows how that container needs to run what are the resources it requires what are the environment variables and",
    "start": "712820",
    "end": "718070"
  },
  {
    "text": "configurations that it can tolerate or should have and then step four platform",
    "start": "718070",
    "end": "723770"
  },
  {
    "text": "based pod policies so as an engineer working in a cloud native environment you're also going to have to face",
    "start": "723770",
    "end": "731320"
  },
  {
    "text": "challenges maybe outside of things that you're familiar with when you're when you're going to a kubernetes environment",
    "start": "731320",
    "end": "737150"
  },
  {
    "text": "we can have policies set up in namespaces that constrain what is doable",
    "start": "737150",
    "end": "743240"
  },
  {
    "text": "by a pot and so we'll look at that and talk about pod security policies and other things that fit into that category",
    "start": "743240",
    "end": "749990"
  },
  {
    "text": "and finally networking and the services that we expose are going to have you",
    "start": "749990",
    "end": "756710"
  },
  {
    "text": "know the traditional you know IPs and ports and things but there are a lot of very robust techniques that you can make",
    "start": "756710",
    "end": "764210"
  },
  {
    "text": "use of in a cloud native environment to augment the policies that you would",
    "start": "764210",
    "end": "769310"
  },
  {
    "text": "normally implement you know in in firewall you know traditional firewall rules to perform more granular controls",
    "start": "769310",
    "end": "776600"
  },
  {
    "text": "over what can be done and where it can be done from and there's also new challenges of course in a dynamic",
    "start": "776600",
    "end": "782480"
  },
  {
    "text": "environment where things are being created and destroyed by the orchestrator due to scaling concerns or",
    "start": "782480",
    "end": "788360"
  },
  {
    "text": "just you know rollouts of new versions of bangs and that sort of stuff so that's that's the list that we're going",
    "start": "788360",
    "end": "794990"
  },
  {
    "text": "to go through so we're gonna hit each one of these and you know I've got a short little demo for each of these set",
    "start": "794990",
    "end": "800930"
  },
  {
    "text": "up but I'll do you guys and at the end of the day there's you know there's a lot of time",
    "start": "800930",
    "end": "806390"
  },
  {
    "text": "you could spend on each one of these and I'm I'm not at all trying to give you a comprehensive view of any of these",
    "start": "806390",
    "end": "813110"
  },
  {
    "text": "things but just trying to give you a little example of the the sorts of stuff",
    "start": "813110",
    "end": "818150"
  },
  {
    "text": "and to make it you know give you some context around each of these topics so let's start off with service design so",
    "start": "818150",
    "end": "824810"
  },
  {
    "start": "821000",
    "end": "1198000"
  },
  {
    "text": "at the beginning you have to write some software and there's a lot of things that are asked of developers who are",
    "start": "824810",
    "end": "831230"
  },
  {
    "text": "building software for cloud native environments you may be asked to omit",
    "start": "831230",
    "end": "836840"
  },
  {
    "text": "metrics data that can be scraped by a system some some some SAS system but",
    "start": "836840",
    "end": "842390"
  },
  {
    "text": "like you know data dog or a cloud environment or Prometheus or something like that and then you may also be asked",
    "start": "842390",
    "end": "849680"
  },
  {
    "text": "to omit certain kinds of logging information that sort of stuff and these are opportunities to report security",
    "start": "849680",
    "end": "856370"
  },
  {
    "text": "events and security events aren't all bad right we're not saying you know oh this this terrible thing happened I you",
    "start": "856370",
    "end": "861920"
  },
  {
    "text": "know denial of service attack occurred at such-and-such time that's great stuff to report of course as well but what you",
    "start": "861920",
    "end": "868520"
  },
  {
    "text": "might also want to think about is just providing a baseline of information that's detailed enough that gives people",
    "start": "868520",
    "end": "874430"
  },
  {
    "text": "the opportunity to know when something changes so you can do a lot of this stuff at startup and really avoid any",
    "start": "874430",
    "end": "882920"
  },
  {
    "text": "you know burden on the application at runtime for example why not log the user ID and",
    "start": "882920",
    "end": "888410"
  },
  {
    "text": "group ID that the service is using a lot of times this is specified by the cluster not the developers right we we",
    "start": "888410",
    "end": "893480"
  },
  {
    "text": "probably don't care what user ID or group ID we're using when our service is running and maybe the in the cluster",
    "start": "893480",
    "end": "900500"
  },
  {
    "text": "environment that has some specific meanings and making sure that we're",
    "start": "900500",
    "end": "905750"
  },
  {
    "text": "using the user ID and group ID that we're supposed to be using is something that can be audited of course but it's",
    "start": "905750",
    "end": "911720"
  },
  {
    "text": "also something that can be a matter of record in logs and gives us some traceability capabilities as we'll",
    "start": "911720",
    "end": "918170"
  },
  {
    "text": "discuss our sets of functions that can be invoked in the Linux kernel that are",
    "start": "918170",
    "end": "925610"
  },
  {
    "text": "grouped together by these capabilities like net admin for example allows you to bring up and down network interfaces",
    "start": "925610",
    "end": "931790"
  },
  {
    "text": "things like that logging the capabilities that are enabled other system call permissions logging",
    "start": "931790",
    "end": "937640"
  },
  {
    "text": "volume mounts that are present inside the container logging the namespace IDs",
    "start": "937640",
    "end": "943760"
  },
  {
    "text": "I know I know it's that that are present so just capturing a lot of startup stuff",
    "start": "943760",
    "end": "949420"
  },
  {
    "text": "I've built some some pretty large trading systems at in the you know kind",
    "start": "949420",
    "end": "957560"
  },
  {
    "text": "of Finance space and we've found this stuff to be really really useful and we",
    "start": "957560",
    "end": "963560"
  },
  {
    "text": "just sort of loaded all sorts of you know really useful security related types of information that described",
    "start": "963560",
    "end": "970190"
  },
  {
    "text": "basically what every single you know thing was accessible to that that particular service so that we could then",
    "start": "970190",
    "end": "976400"
  },
  {
    "text": "at a later time you know just out of it and make sure that nothing was changing or ask ourselves the question a lot of",
    "start": "976400",
    "end": "982460"
  },
  {
    "text": "times just going through the process of making sure that your enumerated all of the resources you've got access to from",
    "start": "982460",
    "end": "987740"
  },
  {
    "text": "a particular service helps you rethink you know do we really need access to that you know maybe we should drop",
    "start": "987740",
    "end": "993080"
  },
  {
    "text": "batter that's figure out some way to to limit that obviously logging connections in and out and then another interesting",
    "start": "993080",
    "end": "1000070"
  },
  {
    "text": "thing is to think about some of the endpoints that you build into your services just to make them work in a",
    "start": "1000070",
    "end": "1006430"
  },
  {
    "text": "dynamic environment for example metrics endpoints health and readiness endpoints",
    "start": "1006430",
    "end": "1011800"
  },
  {
    "text": "all of those types of things are often exposed to provide observability",
    "start": "1011800",
    "end": "1018400"
  },
  {
    "text": "functionality but that's a discrete set of functions independent typically of",
    "start": "1018400",
    "end": "1024790"
  },
  {
    "text": "your applications behavior so your application endpoints probably should",
    "start": "1024790",
    "end": "1030160"
  },
  {
    "text": "not should be should be distinctly controllable right you should be able to say these people have access to the",
    "start": "1030160",
    "end": "1036819"
  },
  {
    "text": "application and points and these resources or things or people have access to the observability information",
    "start": "1036820",
    "end": "1044530"
  },
  {
    "text": "the observability information often will give you deeper insights into the application which may be very",
    "start": "1044530",
    "end": "1049690"
  },
  {
    "text": "inappropriate for a lot of parties so there are some you know some some easy",
    "start": "1049690",
    "end": "1054790"
  },
  {
    "text": "techniques we can use to handle that and then obviously em TLS everywhere now there's an interesting set of",
    "start": "1054790",
    "end": "1062560"
  },
  {
    "text": "occurrences in cloud native environments that have identified a lot of these",
    "start": "1062560",
    "end": "1068020"
  },
  {
    "text": "things let me actually go back that have identified a lot of these things and said you know what it's gonna be a lot of work for us to make it so",
    "start": "1068020",
    "end": "1075220"
  },
  {
    "text": "that developers log all of the connections in and out it's going to be a lot of work for us to have all the",
    "start": "1075220",
    "end": "1082210"
  },
  {
    "text": "developers create em TLS and manage certificates and stuff like that on all of their services and it's going to be a",
    "start": "1082210",
    "end": "1088990"
  },
  {
    "text": "lot of work to do rate limiting and all these other things that we might need to do to sort of make our services more",
    "start": "1088990",
    "end": "1096520"
  },
  {
    "text": "robust and in that vein service meshes have popped up and so we've got the",
    "start": "1096520",
    "end": "1104200"
  },
  {
    "text": "ability with service meshes things like sto and and linker D and so on we have",
    "start": "1104200",
    "end": "1109570"
  },
  {
    "text": "the ability to apply these meshes to our dynamically orchestrated environments and augment all of our application",
    "start": "1109570",
    "end": "1117700"
  },
  {
    "text": "centric services with proxies that implement the you know SiC many of the",
    "start": "1117700",
    "end": "1123160"
  },
  {
    "text": "security and observability features that we're looking for so for example if you deployed this do and you told this do to",
    "start": "1123160",
    "end": "1130000"
  },
  {
    "text": "inject the on boy proxy and to all the pods in a certain namespace then the developers just are going to be able to",
    "start": "1130000",
    "end": "1136540"
  },
  {
    "text": "deploy their applications and get em TLS for free they're gonna get connection tracing in and out for free and a lot of",
    "start": "1136540",
    "end": "1143590"
  },
  {
    "text": "other things and that is great in two ways number one it means you don't have",
    "start": "1143590",
    "end": "1149350"
  },
  {
    "text": "to do it and number two it means that you can't not do it because it's being enforced at the governance level right",
    "start": "1149350",
    "end": "1155140"
  },
  {
    "text": "it's it's applied to your service no matter what and so this is a wonderful thing but the downside is you know",
    "start": "1155140",
    "end": "1161200"
  },
  {
    "text": "you're gonna take a multi millisecond hit on your you know Latin C between",
    "start": "1161200",
    "end": "1167679"
  },
  {
    "text": "services because you've got proxies on both ends so it's not for everybody but it's definitely an interesting thing to",
    "start": "1167679",
    "end": "1172690"
  },
  {
    "text": "think about so demo service design I'm going to go ahead and just you know do a",
    "start": "1172690",
    "end": "1178330"
  },
  {
    "text": "simple example to show you how this impacts that developer the types of things that you need to think about do",
    "start": "1178330",
    "end": "1184320"
  },
  {
    "text": "to you know sort of get us hip to some of the basics here so again you know",
    "start": "1184320",
    "end": "1190900"
  },
  {
    "text": "keep in mind these are just super simple demos designed to you know give you some context here the type of work that's",
    "start": "1190900",
    "end": "1196480"
  },
  {
    "text": "involved so I've got a little bit of a crutch script here",
    "start": "1196480",
    "end": "1203049"
  },
  {
    "text": "set up so that I don't have to make you guys suffer my typing so I'm gonna go over here and I'm just going to clone a",
    "start": "1203049",
    "end": "1208989"
  },
  {
    "text": "repo that we've got set up with a sample application in it and I'll use this application for a few different demos",
    "start": "1208989",
    "end": "1217840"
  },
  {
    "text": "here okay so the next thing I'm going to do is build this thing so I just cloned it and now I'm going to build it let me",
    "start": "1217840",
    "end": "1225220"
  },
  {
    "text": "list the directory here you can see that I've got a simple go program we'll talk about this in just a second and then",
    "start": "1225220",
    "end": "1231070"
  },
  {
    "text": "we've got a docker file that is set up to build this Bisco application into an",
    "start": "1231070",
    "end": "1237009"
  },
  {
    "text": "image that we can run so I'll I'll walk through the docker file in just a second but I'm gonna go ahead and just build it",
    "start": "1237009",
    "end": "1245759"
  },
  {
    "text": "and there we go okay so the image is TL and it's built pre-built it so that",
    "start": "1245759",
    "end": "1253720"
  },
  {
    "text": "would go a little bit quicker and now we're gonna go ahead and run this guy and so when we run this service we can",
    "start": "1253720",
    "end": "1264100"
  },
  {
    "text": "grab its IP address and hit it but being",
    "start": "1264100",
    "end": "1270879"
  },
  {
    "text": "just any user fix the container ID there",
    "start": "1270879",
    "end": "1278850"
  },
  {
    "text": "so I'm just gonna grab the container ID okay so we're just we're just inspecting the service to get all of its metadata",
    "start": "1278850",
    "end": "1284409"
  },
  {
    "text": "and looking for its IP address there it is 117 172 1702 so we're you know we're",
    "start": "1284409",
    "end": "1291489"
  },
  {
    "text": "working with our app we've built it we've containerized it and now I'm going to curl it but what I'm gonna do is I'm",
    "start": "1291489",
    "end": "1301080"
  },
  {
    "text": "going to curl the metrics endpoint in this service so let's guys dot two and",
    "start": "1301080",
    "end": "1306539"
  },
  {
    "text": "we can see that I have no problem hitting the metrics endpoint and the the",
    "start": "1306539",
    "end": "1312460"
  },
  {
    "text": "problem with this is that the application the zoom window out of my way the application features are also",
    "start": "1312460",
    "end": "1321460"
  },
  {
    "text": "here so for example this guy ports the trash levels of trash cans in a given",
    "start": "1321460",
    "end": "1330279"
  },
  {
    "text": "City and will tell you how full they are and you know help you figure out when to",
    "start": "1330279",
    "end": "1335499"
  },
  {
    "text": "service them and that sort of thing it's the hypothetical application and so curling this guy it's set up to be",
    "start": "1335499",
    "end": "1340710"
  },
  {
    "text": "delayed on purpose and then to perform faster or slower based on memory that you've given it but the idea here is",
    "start": "1340710",
    "end": "1347249"
  },
  {
    "text": "that we say okay this is trash level is at 15 but it at the same exact IP and",
    "start": "1347249",
    "end": "1352830"
  },
  {
    "text": "port I'm exposing the metrics endpoint now you may have some very sophisticated",
    "start": "1352830",
    "end": "1359899"
  },
  {
    "text": "firewalling capabilities where you can say these paths are accessible and bees aren't that's fine but the the simpler",
    "start": "1359899",
    "end": "1370679"
  },
  {
    "text": "thing to do would be just to simply say hey look we probably don't want metrics on the same host and port as the you",
    "start": "1370679",
    "end": "1378450"
  },
  {
    "text": "know the the main application functionality and so to change this would be fairly straightforward right we",
    "start": "1378450",
    "end": "1384600"
  },
  {
    "text": "could just drop into the application and this is just a simple go program and",
    "start": "1384600",
    "end": "1390210"
  },
  {
    "text": "we're using open metrics the Prometheus libraries for open metrics to expose",
    "start": "1390210",
    "end": "1395700"
  },
  {
    "text": "standard metrics you know we just got some counts and things like that that are being added here these are a bunch of just handle er functions but down",
    "start": "1395700",
    "end": "1402600"
  },
  {
    "text": "here in the main area of course we can see that we're listening and serving that port and all of our routes even",
    "start": "1402600",
    "end": "1409619"
  },
  {
    "text": "metrics and the the readiness probe that we've got set up and that the health check that we've got set up all of these",
    "start": "1409619",
    "end": "1416190"
  },
  {
    "text": "guys are on the same port and so creating any sort of easy and simple",
    "start": "1416190",
    "end": "1422960"
  },
  {
    "text": "separation is perhaps a bit problematic so what we could do is we could just",
    "start": "1422960",
    "end": "1428970"
  },
  {
    "text": "break these apart and change the port",
    "start": "1428970",
    "end": "1435749"
  },
  {
    "text": "for the metrics just set up a new router",
    "start": "1435749",
    "end": "1442909"
  },
  {
    "text": "alright so I'm just going to create a second router and you know if you're not",
    "start": "1442909",
    "end": "1448110"
  },
  {
    "text": "familiar with go that's fine I mean you get the idea right we're just creating a router and routers in many programming",
    "start": "1448110",
    "end": "1454909"
  },
  {
    "text": "environments are just tools that allow you to automatically handle paths and and that that that requests off to a",
    "start": "1454909",
    "end": "1462480"
  },
  {
    "text": "block of code and we're using the Prometheus HTTP handler to handle our metrics but we're going to move that",
    "start": "1462480",
    "end": "1468360"
  },
  {
    "text": "handler we've created a new handler and a new port for that guy to listen on and now we'll just drop in a new",
    "start": "1468360",
    "end": "1478230"
  },
  {
    "text": "listener to deal with port - and to use the second router and now we've got a",
    "start": "1478260",
    "end": "1486340"
  },
  {
    "text": "discreet port for our metrics top right on so if we rebuild this application",
    "start": "1486340",
    "end": "1492810"
  },
  {
    "text": "oops didn't mean to do that let's go back here and build it there we go",
    "start": "1493980",
    "end": "1499480"
  },
  {
    "text": "so we're going to rebuild the application has to recompile the change source code something I didn't make any",
    "start": "1499480",
    "end": "1506230"
  },
  {
    "text": "mistakes it'll actually work",
    "start": "1506230",
    "end": "1509130"
  },
  {
    "text": "you",
    "start": "1525280",
    "end": "1527340"
  },
  {
    "text": "okay so if we run the new guy this is e 6-3 now we go back up and try to curl e",
    "start": "1530990",
    "end": "1539860"
  },
  {
    "text": "6-3 well actually let's get his let's get his IP address okay and so if we go",
    "start": "1539860",
    "end": "1548809"
  },
  {
    "text": "back up and try to curl dot for that works right we can still",
    "start": "1548809",
    "end": "1558440"
  },
  {
    "text": "retrieve the applications state we can tell it works because it didn't give us an error just take them a second to respond heavy processing here to get the",
    "start": "1558440",
    "end": "1565970"
  },
  {
    "text": "trash can level okay so that works and then if we try the metrics end point no",
    "start": "1565970",
    "end": "1573470"
  },
  {
    "text": "good right but if we change ports okay",
    "start": "1573470",
    "end": "1583519"
  },
  {
    "text": "let's see here so we're happy that the first curl",
    "start": "1583519",
    "end": "1593040"
  },
  {
    "text": "failed because we were hitting it on 8080 and then I changed the port to 81 I think let's make sure you won okay well",
    "start": "1593040",
    "end": "1620610"
  },
  {
    "text": "it looks good let's do let's do it dump",
    "start": "1620610",
    "end": "1626820"
  },
  {
    "text": "here some of the containers we've got I've got kubernetes running as well okay",
    "start": "1626820",
    "end": "1633120"
  },
  {
    "text": "well that looks like the guys so I'll I'll debug be thes the source there but",
    "start": "1633120",
    "end": "1638340"
  },
  {
    "text": "as you can see we can no longer get to the metrics port on port 80 which was really the goal right and then obviously",
    "start": "1638340",
    "end": "1644100"
  },
  {
    "text": "making the metrics work again is important but but yeah you know just a simple a simple code change like that",
    "start": "1644100",
    "end": "1651170"
  },
  {
    "text": "gives us the ability to now easily distinguish between the operational",
    "start": "1651170",
    "end": "1657240"
  },
  {
    "text": "aspects of the application and be you know the the standard application",
    "start": "1657240",
    "end": "1663780"
  },
  {
    "text": "components of the application so a lot of times we're building small services you know we need to think about the fact",
    "start": "1663780",
    "end": "1669030"
  },
  {
    "text": "that we're going to operate in an observable environment and yet these observability features need to be",
    "start": "1669030",
    "end": "1674370"
  },
  {
    "text": "segregated out of the standard you know application operations so the next piece",
    "start": "1674370",
    "end": "1679440"
  },
  {
    "start": "1676000",
    "end": "1851000"
  },
  {
    "text": "is container packaging and in the container packaging side of things we",
    "start": "1679440",
    "end": "1684600"
  },
  {
    "text": "have concerns around container images images are the stock and trade in a",
    "start": "1684600",
    "end": "1690780"
  },
  {
    "text": "containerized environment when we deploy an image into a cluster that image",
    "start": "1690780",
    "end": "1696270"
  },
  {
    "text": "brings with it two basic things metadata so a config dot JSON more or less with",
    "start": "1696270",
    "end": "1703050"
  },
  {
    "text": "some you know high-level attributes of the image things like the images name",
    "start": "1703050",
    "end": "1708980"
  },
  {
    "text": "the images you know metadata on the",
    "start": "1708980",
    "end": "1714120"
  },
  {
    "text": "label front you know think key value pairs like licensing information you know what have you what command to use",
    "start": "1714120",
    "end": "1720780"
  },
  {
    "text": "to execute the program when the image is executed without an optional command",
    "start": "1720780",
    "end": "1726150"
  },
  {
    "text": "from the end-user and and that sort of stuff then the other piece of the puzzle in addition to the metadata and the",
    "start": "1726150",
    "end": "1732330"
  },
  {
    "text": "config dot JSON is this basically what equates to a tarball of the root filesystem of that container",
    "start": "1732330",
    "end": "1739320"
  },
  {
    "text": "and so the concept of building a bunch",
    "start": "1739320",
    "end": "1744330"
  },
  {
    "text": "of stuff into the container image or using other images to create the image that you're going to run in production",
    "start": "1744330",
    "end": "1751020"
  },
  {
    "text": "introduces the opportunity to include additional information in that container",
    "start": "1751020",
    "end": "1757320"
  },
  {
    "text": "image that's that's that doesn't need to be in a production environment and tools like introspection tools like",
    "start": "1757320",
    "end": "1764970"
  },
  {
    "text": "netstat and PS are are really useful to attackers if somebody breaks into your",
    "start": "1764970",
    "end": "1771180"
  },
  {
    "text": "application and somehow gets the ability to exec you know the process you want to",
    "start": "1771180",
    "end": "1776520"
  },
  {
    "text": "limit the options that they've got you don't want a shell in a container image unless there's a specific reason to have",
    "start": "1776520",
    "end": "1782850"
  },
  {
    "text": "it unless it's unless you're using that shell to interpret the thing that's running in that image and so the the the",
    "start": "1782850",
    "end": "1789030"
  },
  {
    "text": "fewer tools we can provide in our running containers the better off we are and it is quite possible to create a",
    "start": "1789030",
    "end": "1794610"
  },
  {
    "text": "container from quote-unquote scratch but we start with nothing and we put explicitly what we want into that",
    "start": "1794610",
    "end": "1800490"
  },
  {
    "text": "container image now there are images available all over the place many many on docker hub of course that",
    "start": "1800490",
    "end": "1807720"
  },
  {
    "text": "it it is convenient to base other images on so developing a Java app on top of",
    "start": "1807720",
    "end": "1814320"
  },
  {
    "text": "the publicly available Java image makes life easy because the Java image already",
    "start": "1814320",
    "end": "1819930"
  },
  {
    "text": "has a lot of stuff in it more and more images on docker hub are getting stripped down and minimized but still",
    "start": "1819930",
    "end": "1825080"
  },
  {
    "text": "quite often they've got a lot of stuff in them that you know we don't necessarily need and so being able to",
    "start": "1825080",
    "end": "1833010"
  },
  {
    "text": "build images that basically contain nothing is is really going to be a big",
    "start": "1833010",
    "end": "1838020"
  },
  {
    "text": "help in in locking things down and and providing as few you know vectors for",
    "start": "1838020",
    "end": "1845040"
  },
  {
    "text": "attackers to take advantage of as possible if they somehow or another compromised your container and so let's",
    "start": "1845040",
    "end": "1850650"
  },
  {
    "text": "take a look at an example here so I built this this trash levels example a",
    "start": "1850650",
    "end": "1856470"
  },
  {
    "start": "1851000",
    "end": "2307000"
  },
  {
    "text": "couple of times and I'm just going to I'm gonna go ahead and list everything",
    "start": "1856470",
    "end": "1862320"
  },
  {
    "text": "that we've got here on the directory and in the docker file that builds this particular trash levels app we've got",
    "start": "1862320",
    "end": "1869970"
  },
  {
    "text": "two stages the first stage is grabbing a public image going 113 and using that as",
    "start": "1869970",
    "end": "1879150"
  },
  {
    "text": "the build tool now this right here might set off alarms right in many environments",
    "start": "1879150",
    "end": "1884790"
  },
  {
    "text": "you're you're going if you if you have a serious security interest you probably",
    "start": "1884790",
    "end": "1890610"
  },
  {
    "text": "don't want to ever use a public image right and you probably don't want to",
    "start": "1890610",
    "end": "1895650"
  },
  {
    "text": "grab it in this way there's no way when you look at this image to know what is what that image",
    "start": "1895650",
    "end": "1901650"
  },
  {
    "text": "contains right there's no way to know the bits that are inside of that image",
    "start": "1901650",
    "end": "1906740"
  },
  {
    "text": "we we can we can make assumptions but bad actors and various places could you",
    "start": "1906740",
    "end": "1914340"
  },
  {
    "text": "know could could subvert that image we can't control docker ink we can't control people who can push to the",
    "start": "1914340",
    "end": "1920850"
  },
  {
    "text": "official repo where this is coming from so it's probably not something they should be trusted in the first place and",
    "start": "1920850",
    "end": "1927240"
  },
  {
    "text": "so you want to always make sure that your images are coming from a trusted place where they've been you know",
    "start": "1927240",
    "end": "1933330"
  },
  {
    "text": "screened by your own internal security processes and vetted and that sort of",
    "start": "1933330",
    "end": "1939180"
  },
  {
    "text": "thing so if you've got standard based images that you're going to be working with developers are often gonna have",
    "start": "1939180",
    "end": "1944340"
  },
  {
    "text": "language specific based images Java go what-have-you Python those should",
    "start": "1944340",
    "end": "1949890"
  },
  {
    "text": "probably be built in-house vetted and you know lockdown but we're gonna go",
    "start": "1949890",
    "end": "1955140"
  },
  {
    "text": "ahead and use this public image just to get started and then we're going to copy our program in to go source trash levels",
    "start": "1955140",
    "end": "1961410"
  },
  {
    "text": "we're then going to pull down the libraries that we need and we're gonna build this guy but we're gonna statically link it and when you",
    "start": "1961410",
    "end": "1967980"
  },
  {
    "text": "statically link an application like this it doesn't have any dependencies now it's going to be a little bit trickier",
    "start": "1967980",
    "end": "1974010"
  },
  {
    "text": "for a dotnet or a java application you're gonna need a runtime same thing with Python and so on but C C++ go and various other",
    "start": "1974010",
    "end": "1982770"
  },
  {
    "text": "programming environments give you the ability to compile to a static",
    "start": "1982770",
    "end": "1988530"
  },
  {
    "text": "executable that has no dependencies and even if you have dependencies of course you could include just the dependencies",
    "start": "1988530",
    "end": "1995160"
  },
  {
    "text": "that you've got and avoid all the other stuff and so our second stage in the build here says from scratch and this in",
    "start": "1995160",
    "end": "2002180"
  },
  {
    "text": "in a in a in a docker build and there are other tools you could use to build but I'm just using docker as an example",
    "start": "2002180",
    "end": "2007760"
  },
  {
    "text": "here we're saying start this new container image with nothing right and then we've just got some key value data",
    "start": "2007760",
    "end": "2013700"
  },
  {
    "text": "which is just metadata that just goes in the configuration but then we go to the previous in right the build image and we grab the",
    "start": "2013700",
    "end": "2022820"
  },
  {
    "text": "executable from that build image and we copy it in and then we specify that",
    "start": "2022820",
    "end": "2028840"
  },
  {
    "text": "we're going to run this program when somebody runs the image and that's it and so the build process that we ran",
    "start": "2028840",
    "end": "2035750"
  },
  {
    "text": "just a minute ago is pretty straightforward right we just tell doctor hey build the current directory",
    "start": "2035750",
    "end": "2041240"
  },
  {
    "text": "docker 5dr file and then tags it whatever we want to call it so if we",
    "start": "2041240",
    "end": "2046520"
  },
  {
    "text": "want to build this guy again and retag it be - it'll see that everything's already been built use the cache but off",
    "start": "2046520",
    "end": "2051888"
  },
  {
    "text": "we go and so that gives us the ability to to now do this take a look at the",
    "start": "2051889",
    "end": "2061280"
  },
  {
    "text": "actual image so this is the image that I just tagged right and it's 13 Meg's this",
    "start": "2061280",
    "end": "2067940"
  },
  {
    "text": "is the intermediate image this is the build stage and the build stage is 910",
    "start": "2067940",
    "end": "2073128"
  },
  {
    "text": "Meg's and you can see the build stage is 910 Meg's largely because the go",
    "start": "2073129",
    "end": "2079780"
  },
  {
    "text": "environment is eight hundred and three Meg's so we we have eight hundred three",
    "start": "2079780",
    "end": "2086599"
  },
  {
    "text": "Meg's of golang then we've got all the library sources that we pulled down and",
    "start": "2086599",
    "end": "2091700"
  },
  {
    "text": "we have all the intermediate files for the build process and what-have-you so the last thing that we want to ship",
    "start": "2091700",
    "end": "2099200"
  },
  {
    "text": "off to production is a container image",
    "start": "2099200",
    "end": "2104660"
  },
  {
    "text": "that has a complete build solution in it so that if if compromised an attacker",
    "start": "2104660",
    "end": "2110660"
  },
  {
    "text": "can now write software and compile it and deploy it right from within our container so definitely definitely",
    "start": "2110660",
    "end": "2118280"
  },
  {
    "text": "something that we want to strip out we want to have the minimum amount of code actually out there in production and so",
    "start": "2118280",
    "end": "2124640"
  },
  {
    "text": "here's an interesting thing that we can do if we do a docker container LS and we",
    "start": "2124640",
    "end": "2131510"
  },
  {
    "text": "take a look at spell container correctly if we take a look at the container that",
    "start": "2131510",
    "end": "2137119"
  },
  {
    "text": "we just ran let's take a look at this guy right this guy is running that trash image and that's the same thing that we've been using so that's East 63 so if",
    "start": "2137119",
    "end": "2144349"
  },
  {
    "text": "we docker exact a program into a 6-3",
    "start": "2144349",
    "end": "2152600"
  },
  {
    "text": "and let's for example list the root directory we get this - error can't",
    "start": "2152600",
    "end": "2161420"
  },
  {
    "text": "execute LS so the LS executables not in there right how about PS nope",
    "start": "2161420",
    "end": "2170000"
  },
  {
    "text": "how about let's run CH a shell so that we can jump inside that container and poke around nope right so you're going",
    "start": "2170000",
    "end": "2175700"
  },
  {
    "text": "to be very very restricted as to what you can do in an image that is so",
    "start": "2175700",
    "end": "2181610"
  },
  {
    "text": "constrained the other hand of this is that okay you know what if I need to",
    "start": "2181610",
    "end": "2188030"
  },
  {
    "text": "debug things so this is going to make it a little tough to debug right you might want to run the image in the build container for experimentation and",
    "start": "2188030",
    "end": "2194630"
  },
  {
    "text": "debugging and then you know run the production container in the production",
    "start": "2194630",
    "end": "2199940"
  },
  {
    "text": "environment so you have to you know kind of deal with your CI CD split there are we going to use the build image for you",
    "start": "2199940",
    "end": "2208310"
  },
  {
    "text": "know for for say for example unit tests and then switch over to the production image for all of the integration tests",
    "start": "2208310",
    "end": "2215510"
  },
  {
    "text": "and you know non-functional tests and things like that that's typically a you know a clean a clean split but every",
    "start": "2215510",
    "end": "2221510"
  },
  {
    "text": "environments different every every you know team will will find their own boundaries another thing to think about",
    "start": "2221510",
    "end": "2227300"
  },
  {
    "text": "is if we docker image LS help here",
    "start": "2227300",
    "end": "2234830"
  },
  {
    "text": "you'll see that there's a digest switch and if you want to be very explicit",
    "start": "2234830",
    "end": "2242420"
  },
  {
    "text": "about plural if you want to be very explicit about the images that you pull",
    "start": "2242420",
    "end": "2249260"
  },
  {
    "text": "instead of specifying that you would like to grab a repo and then colon tag",
    "start": "2249260",
    "end": "2254720"
  },
  {
    "text": "like : latest : b - something like that you could instead ask for the sha hash",
    "start": "2254720",
    "end": "2260360"
  },
  {
    "text": "and that means that you're going to get those bits period into story you will",
    "start": "2260360",
    "end": "2266120"
  },
  {
    "text": "get those bits every time all the time because those are the only bits that docker will accept and so while you",
    "start": "2266120",
    "end": "2273200"
  },
  {
    "text": "still have to download the image when the image is downloaded the the container manager is going to check the sha hash against the hash that it asked",
    "start": "2273200",
    "end": "2280370"
  },
  {
    "text": "for and if the bits aren't the same somebody mutated that image and whether",
    "start": "2280370",
    "end": "2285440"
  },
  {
    "text": "it was the people releasing v1 18:3 and it just decided to update it without updating",
    "start": "2285440",
    "end": "2290599"
  },
  {
    "text": "the tag or if it was an adversary it doesn't really matter right you don't want those bits so this gives us another",
    "start": "2290599",
    "end": "2297859"
  },
  {
    "text": "way to you know sort of improve the veracity of our applications content and",
    "start": "2297859",
    "end": "2304209"
  },
  {
    "text": "so we have the ability to strip it down verify it things like that so quick look",
    "start": "2304209",
    "end": "2309349"
  },
  {
    "start": "2307000",
    "end": "2547000"
  },
  {
    "text": "at minimal containers so the next step in the process is pod specification and",
    "start": "2309349",
    "end": "2316279"
  },
  {
    "text": "so when we're specifying pods we're saying hey we've got some containers",
    "start": "2316279",
    "end": "2322579"
  },
  {
    "text": "that we've created and we want to run them and these are the characteristics",
    "start": "2322579",
    "end": "2329299"
  },
  {
    "text": "with which we'd like to run them and so things like what user that container is",
    "start": "2329299",
    "end": "2335059"
  },
  {
    "text": "going to run under is something that you can specify in your pod specification",
    "start": "2335059",
    "end": "2340670"
  },
  {
    "text": "and so assigning on privileged users and groups is a good idea now it's",
    "start": "2340670",
    "end": "2346009"
  },
  {
    "text": "interesting we kind of go through some of these things here that are good practices but you may be forced to do",
    "start": "2346009",
    "end": "2352969"
  },
  {
    "text": "them as well as we'll see in a bit so assigning an unprivileged user a group and there may be a selection of them to",
    "start": "2352969",
    "end": "2358789"
  },
  {
    "text": "choose from with different you know capabilities so you may need to make the right choice there but definitely avoiding route at all costs if you're",
    "start": "2358789",
    "end": "2365809"
  },
  {
    "text": "building an application service you generally don't need any permissions of",
    "start": "2365809",
    "end": "2371949"
  },
  {
    "text": "special you know capabilities or or features you're just going to be a running application a normal user is is",
    "start": "2371949",
    "end": "2378609"
  },
  {
    "text": "mostly good if you're just simply listening on the network interface and handling service requests so the",
    "start": "2378609",
    "end": "2385569"
  },
  {
    "text": "developers that are building application level you know components don't",
    "start": "2385569",
    "end": "2390709"
  },
  {
    "text": "generally need a lot of the you know fancy features that provide you extra permissions just the basics are going to",
    "start": "2390709",
    "end": "2397189"
  },
  {
    "text": "do so pick an unprivileged user and and have at it when people are building",
    "start": "2397189",
    "end": "2402469"
  },
  {
    "text": "operational services and stateful services and things that you know are kind of part of the platform often",
    "start": "2402469",
    "end": "2408769"
  },
  {
    "text": "they'll need to rev up their capabilities and that can you know be something you can also do with a",
    "start": "2408769",
    "end": "2414229"
  },
  {
    "text": "fine-tooth comb and just add the things that you need so dropping capabilities dropping all capabilities avoiding",
    "start": "2414229",
    "end": "2420160"
  },
  {
    "text": "escalation Justin Shah hashes this we've mentioned in your pods back pull the",
    "start": "2420160",
    "end": "2426020"
  },
  {
    "text": "image by Shaw hash that's something to think about not everybody agrees with that because it makes pipelines sometimes a little bit brittle but there",
    "start": "2426020",
    "end": "2432770"
  },
  {
    "text": "are some strong advantages there as well and then we'll also talk about side cars",
    "start": "2432770",
    "end": "2438410"
  },
  {
    "text": "and init containers for just a minute side cars are containers that run inside",
    "start": "2438410",
    "end": "2443660"
  },
  {
    "text": "the pod alongside your pot and so for example you might have a the Envoy proxy",
    "start": "2443660",
    "end": "2450350"
  },
  {
    "text": "proxy running inside your pot and that proxy is going to need some features",
    "start": "2450350",
    "end": "2455480"
  },
  {
    "text": "perhaps that that your regular application might not need another thing",
    "start": "2455480",
    "end": "2461210"
  },
  {
    "text": "that we can think about is init containers and knit containers run before the main containers in the pot",
    "start": "2461210",
    "end": "2466910"
  },
  {
    "text": "and so when you're launching a pot in in a kubernetes environment and the knit",
    "start": "2466910",
    "end": "2472400"
  },
  {
    "text": "container can do things that that need to be done with elevated permissions and",
    "start": "2472400",
    "end": "2478420"
  },
  {
    "text": "the main container then when it takes over can just once again be a plain",
    "start": "2478420",
    "end": "2483740"
  },
  {
    "text": "vanilla unprivileged user with no special permissions so you can you can take the pieces of of operation that you",
    "start": "2483740",
    "end": "2491570"
  },
  {
    "text": "need to perform that require some bump and privilege and you can segregate them out right you could put them in other",
    "start": "2491570",
    "end": "2497180"
  },
  {
    "text": "places and that way your main application once again can just be a",
    "start": "2497180",
    "end": "2502370"
  },
  {
    "text": "plain unprivileged component so the last thing you'd want to do is say well when I start up for",
    "start": "2502370",
    "end": "2507740"
  },
  {
    "text": "example imagine I need to change the ownership of a directory and so I need to have you know the ability to change",
    "start": "2507740",
    "end": "2514310"
  },
  {
    "text": "ownerships of all directories all the time which isn't really true right so we can add this temporal context to our",
    "start": "2514310",
    "end": "2520520"
  },
  {
    "text": "thinking about security right if you only need this privilege for a short period of time then an init container",
    "start": "2520520",
    "end": "2527210"
  },
  {
    "text": "right especially on initialization typically then an init container might be a really good option because you can",
    "start": "2527210",
    "end": "2533420"
  },
  {
    "text": "give that specific container the permissions that it needs and you can take those permissions away from your",
    "start": "2533420",
    "end": "2538550"
  },
  {
    "text": "long-running service which is the one that's going to be at risk to the code so a quick look here then at locking",
    "start": "2538550",
    "end": "2547280"
  },
  {
    "start": "2547000",
    "end": "2772000"
  },
  {
    "text": "down pods I'll go ahead and bring back up our environment here again and let me",
    "start": "2547280",
    "end": "2552890"
  },
  {
    "text": "just make sure there's nothing running okay",
    "start": "2552890",
    "end": "2559339"
  },
  {
    "text": "good all right so we've got no pods running at the moment bounced over to",
    "start": "2559339",
    "end": "2564710"
  },
  {
    "text": "our pod demo here so I'm gonna go ahead and run a pod I'm just gonna use cute",
    "start": "2564710",
    "end": "2578329"
  },
  {
    "text": "cuddle run which in kubernetes 118 which is what we're running creates a pod once",
    "start": "2578329",
    "end": "2583789"
  },
  {
    "text": "again like it did in the story two old days no more generators and so we've got a",
    "start": "2583789",
    "end": "2589569"
  },
  {
    "text": "basic pod up and running and if I type ID I can see that I'm route so that's",
    "start": "2589569",
    "end": "2595849"
  },
  {
    "text": "not optimal right also let's say for example let's take a look at our",
    "start": "2595849",
    "end": "2601789"
  },
  {
    "text": "capabilities so the Linux the Linux kernel system calls for the root user",
    "start": "2601789",
    "end": "2607670"
  },
  {
    "text": "have been broken up into these capabilities and these capabilities are identified by bits in this mask here and",
    "start": "2607670",
    "end": "2613609"
  },
  {
    "text": "so these are our effective capabilities this is what we can do as this shell",
    "start": "2613609",
    "end": "2618710"
  },
  {
    "text": "that we're running here and this is what capabilities are going to be inherited by our children which is anything the",
    "start": "2618710",
    "end": "2624559"
  },
  {
    "text": "shell creates so we can see that it's not you know all F's right obviously",
    "start": "2624559",
    "end": "2629690"
  },
  {
    "text": "there are some bits that have been turned off these get turned off by the container manager and since docker well",
    "start": "2629690",
    "end": "2635329"
  },
  {
    "text": "the world is sort of you know focusing on the open container initiative OCI as",
    "start": "2635329",
    "end": "2640849"
  },
  {
    "text": "the standard docker really created the the foundation for all that stuff right and so when docker containers are",
    "start": "2640849",
    "end": "2647089"
  },
  {
    "text": "executed a lot of capabilities are removed clearly all four of these bits have been removed right three of these",
    "start": "2647089",
    "end": "2653750"
  },
  {
    "text": "bits have been removed three of these bits have been removed and so on and so there's a lot of things you can't do for",
    "start": "2653750",
    "end": "2659990"
  },
  {
    "text": "example you don't have net admin capability inside a container if you try to I don't think IP in tables is even",
    "start": "2659990",
    "end": "2666710"
  },
  {
    "text": "installed in here but if you tried to you know dump IP tables or something like that it wouldn't work you wouldn't",
    "start": "2666710",
    "end": "2672020"
  },
  {
    "text": "be allowed to do that you're you're not supposed to do those sorts of things right as a normal service running in a",
    "start": "2672020",
    "end": "2677720"
  },
  {
    "text": "container but a lot of people get used to having many of these capabilities and so removing those capabilities is",
    "start": "2677720",
    "end": "2684799"
  },
  {
    "text": "something you know we're thinking about now if you remove all those capabilities one of them is change owner and so for",
    "start": "2684799",
    "end": "2692360"
  },
  {
    "text": "example if we needed to change the the ownership of let's do just a simple",
    "start": "2692360",
    "end": "2699110"
  },
  {
    "text": "example of this WWE right assuming our",
    "start": "2699110",
    "end": "2704750"
  },
  {
    "text": "this is just you know totally contrived but to give you an example assume that the the web root is owned by the root",
    "start": "2704750",
    "end": "2711140"
  },
  {
    "text": "user so if we changed the owner of this or the user of this container to some unprivileged user lost all of our",
    "start": "2711140",
    "end": "2718670"
  },
  {
    "text": "capabilities we would also lose potentially the ability to write to the",
    "start": "2718670",
    "end": "2723680"
  },
  {
    "text": "web root which maybe we need right because there's no right permissions for anyone other than root so how could we",
    "start": "2723680",
    "end": "2730100"
  },
  {
    "text": "address that well we could fix that kind of a problem with an init container so let's take a quick look at a way that we",
    "start": "2730100",
    "end": "2737600"
  },
  {
    "text": "can handle that so I'm going to go ahead and run that same command again right to",
    "start": "2737600",
    "end": "2746119"
  },
  {
    "text": "create a pod spec so this will just sort of show that we're really really just doing this exact same thing again right",
    "start": "2746119",
    "end": "2752660"
  },
  {
    "text": "I'm cute little running the busybox image we're gonna call it demo but I'm telling the coop coudl command don't",
    "start": "2752660",
    "end": "2759740"
  },
  {
    "text": "actually do this and output it into gamal and stuff it in this file all right so in kubernetes we we provide",
    "start": "2759740",
    "end": "2766100"
  },
  {
    "text": "it with these declarative manifests with ezmo files to say this is what i'd like you to do and so if I open up the pod",
    "start": "2766100",
    "end": "2772940"
  },
  {
    "text": "mammal it looks something like this and so the creation timestamp will get generated for us automatically we're not",
    "start": "2772940",
    "end": "2779390"
  },
  {
    "text": "gonna request any specific resources and we don't care about the DNS policy let's also make this guy never restart and",
    "start": "2779390",
    "end": "2786760"
  },
  {
    "text": "then finally we'll get rid of any status that's going to be provided by the system but I've got a bunch of stuff",
    "start": "2786760",
    "end": "2796400"
  },
  {
    "text": "here that we're gonna tack on so let's drop this in okay so as we kind of",
    "start": "2796400",
    "end": "2805550"
  },
  {
    "text": "talked about we want to run this pod as a non-user so we can specify at the pod",
    "start": "2805550",
    "end": "2810980"
  },
  {
    "text": "level a security context and so at the pod level we're saying run us user 10,000 run us group 10,000 and run as",
    "start": "2810980",
    "end": "2818570"
  },
  {
    "text": "file system group 10,000 so a lot of people are under the misconception that you can't run a Linux",
    "start": "2818570",
    "end": "2826370"
  },
  {
    "text": "process as a user that's not an Etsy password or something like that Linux just knows processes by ID and it",
    "start": "2826370",
    "end": "2834350"
  },
  {
    "text": "knows the owners of those processes by ID so if you provide it with an ID it'll",
    "start": "2834350",
    "end": "2839690"
  },
  {
    "text": "give that ID to that process and if it can't find any references to that process as special features or powers or",
    "start": "2839690",
    "end": "2845240"
  },
  {
    "text": "permissions it'll be just a plain vanilla unprivileged user so there's nothing wrong with that right and then when we",
    "start": "2845240",
    "end": "2851000"
  },
  {
    "text": "run this container we're gonna have it tail - F Devon all and we've already got the restart policy up there so let's get",
    "start": "2851000",
    "end": "2857930"
  },
  {
    "text": "rid of that but I think that that should get it going right so this this container is gonna run and it's just",
    "start": "2857930",
    "end": "2864140"
  },
  {
    "text": "gonna sit there doing nothing but we will be able to you know shell into it and inspect it and see what's happening",
    "start": "2864140",
    "end": "2869240"
  },
  {
    "text": "because busybox of course has a shell and stuff violating some of the other things that we were talking about but this is a container design for",
    "start": "2869240",
    "end": "2875690"
  },
  {
    "text": "experimentation okay so we've got our pod updated now let's go ahead and apply",
    "start": "2875690",
    "end": "2882290"
  },
  {
    "text": "that guy and then we're going to fire up a shell and we'll rerun those same commands oops",
    "start": "2882290",
    "end": "2889310"
  },
  {
    "text": "we got to delete the old guy this will",
    "start": "2889310",
    "end": "2898340"
  },
  {
    "text": "take a few seconds the letter finishers",
    "start": "2898340",
    "end": "2903590"
  },
  {
    "text": "run",
    "start": "2903590",
    "end": "2906010"
  },
  {
    "text": "there we go all right and so let's try that again all right so create it and now if we",
    "start": "2926720",
    "end": "2933660"
  },
  {
    "text": "cube CTL exec into the pod demo and",
    "start": "2933660",
    "end": "2940670"
  },
  {
    "text": "start up a shell that we want to interact with now if we type ID we're no",
    "start": "2940670",
    "end": "2948630"
  },
  {
    "text": "longer root and if we say for example",
    "start": "2948630",
    "end": "2953790"
  },
  {
    "text": "grep for capabilities see which",
    "start": "2953790",
    "end": "2960990"
  },
  {
    "text": "capabilities we've got we're down to zeros right and so this this basically",
    "start": "2960990",
    "end": "2967530"
  },
  {
    "text": "suggests that we're we're an unprivileged user and therefore we're gonna have issues if we try to write",
    "start": "2967530",
    "end": "2975300"
  },
  {
    "text": "tavar right because the container image when this is something that's an interesting thing to think about the",
    "start": "2975300",
    "end": "2981270"
  },
  {
    "text": "container image is the root is the root filesystem bits right for your container",
    "start": "2981270",
    "end": "2987030"
  },
  {
    "text": "and so when you build that image that's got all of the bits for your root filesystem in it and those bits include",
    "start": "2987030",
    "end": "2993780"
  },
  {
    "text": "the owners of all of those files and this is why everybody's used root for",
    "start": "2993780",
    "end": "2999210"
  },
  {
    "text": "for so long or has you know often used route traditionally because if you're going to provide a public image what's",
    "start": "2999210",
    "end": "3004910"
  },
  {
    "text": "the one user you know is always going to exist root and what's the one user you get by default when you docker run a",
    "start": "3004910",
    "end": "3010610"
  },
  {
    "text": "container or start it up in kubernetes root so a lot of production environments you know completely switch this around",
    "start": "3010610",
    "end": "3016670"
  },
  {
    "text": "and say no there's a system user that or a service user that you need to use in production and therefore when you build",
    "start": "3016670",
    "end": "3022730"
  },
  {
    "text": "your images perhaps you can build those images with the right user in advance",
    "start": "3022730",
    "end": "3028460"
  },
  {
    "text": "right you can set up that specific user the same ID right ten thousand or whatever it is that you're going to have",
    "start": "3028460",
    "end": "3034880"
  },
  {
    "text": "in production in your image and that makes you know this problem kind of go away to some degree but it comes back as",
    "start": "3034880",
    "end": "3040700"
  },
  {
    "text": "soon as you start using extra volumes and as soon as those volumes get accessed by different users so we'll do",
    "start": "3040700",
    "end": "3047269"
  },
  {
    "text": "one last example here and then I'll kind of talk about the system side of it and policy where we can be impacted as",
    "start": "3047269",
    "end": "3054980"
  },
  {
    "text": "developers they can get through this in the last few bits that we've got of time here so here is another version of this",
    "start": "3054980",
    "end": "3062450"
  },
  {
    "text": "pod spec and so let me just remove the old one and this is much like the old",
    "start": "3062450",
    "end": "3077900"
  },
  {
    "text": "version except that we now have at the",
    "start": "3077900",
    "end": "3084349"
  },
  {
    "text": "pod level run as user 10,000 but we have this problem right we want to mount this",
    "start": "3084349",
    "end": "3090109"
  },
  {
    "text": "volume from the host or from some storage engine doesn't really matter where it comes from right we want to",
    "start": "3090109",
    "end": "3095420"
  },
  {
    "text": "mount this volume that we know that we're not going to have the right permissions yeah because it gets",
    "start": "3095420",
    "end": "3100640"
  },
  {
    "text": "provisioned with the wrong permissions or you know there's different permissions that need to be set and only the pod knows what they are but there's",
    "start": "3100640",
    "end": "3107089"
  },
  {
    "text": "lots of possibilities and so our normal busybox container here is going to mount that volume under far w w and it's going",
    "start": "3107089",
    "end": "3114470"
  },
  {
    "text": "to have issues because you won't be able to write that volume so what we could do is we could set up an init container and",
    "start": "3114470",
    "end": "3120049"
  },
  {
    "text": "the anit container can run as a different user alright so this guy's",
    "start": "3120049",
    "end": "3125210"
  },
  {
    "text": "overriding the run as user at the pod level and providing himself with the",
    "start": "3125210",
    "end": "3130309"
  },
  {
    "text": "permissions that he needs but we don't need all capabilities right least privilege would say only give yourself",
    "start": "3130309",
    "end": "3136130"
  },
  {
    "text": "the capability you need so we need to change ownership capability so we add that and we drop all the others so this",
    "start": "3136130",
    "end": "3142700"
  },
  {
    "text": "means we can't do anything except change ownership and then the command that we're gonna run in the init container is going to be change the owner to 10,000",
    "start": "3142700",
    "end": "3149900"
  },
  {
    "text": "for VAR w w now this guy's gonna mount w w the same volume here change the owner",
    "start": "3149900",
    "end": "3156769"
  },
  {
    "text": "and then when the main container starts up we'll have the volume but he needs all right so let's give that guy a try",
    "start": "3156769",
    "end": "3162529"
  },
  {
    "text": "real quick",
    "start": "3162529",
    "end": "3165220"
  },
  {
    "text": "and let that guy shut down can I have",
    "start": "3171620",
    "end": "3177210"
  },
  {
    "text": "another show environment here we can used to creep that guy's okay so that",
    "start": "3177210",
    "end": "3188460"
  },
  {
    "text": "guy's terminating so let's do a cube CTL apply minus F of our new pod",
    "start": "3188460",
    "end": "3196190"
  },
  {
    "text": "like the other pot is still going let's go back here and check it give it",
    "start": "3204680",
    "end": "3213600"
  },
  {
    "text": "another second mo okay there we go alright so let's go ahead and reapply this guy okay and now if we take a look",
    "start": "3213600",
    "end": "3226980"
  },
  {
    "text": "here our pods up and running and so if we cube CTL exec into the pod demo now",
    "start": "3226980",
    "end": "3241800"
  },
  {
    "text": "we've got exactly what we were looking for right we've got the ownership changed for just the directory that we",
    "start": "3241800",
    "end": "3247050"
  },
  {
    "text": "need to write to but we don't have a long-running container that has elevated privileges okay",
    "start": "3247050",
    "end": "3253140"
  },
  {
    "start": "3252000",
    "end": "3302000"
  },
  {
    "text": "so that's a you know kind of a quick once-over and locking down pods pod",
    "start": "3253140",
    "end": "3258660"
  },
  {
    "text": "policy again you know 45 minute webinar so we've only got so much time to talk about you know these things I'm just",
    "start": "3258660",
    "end": "3263910"
  },
  {
    "text": "gonna jump into pod policy real quick and mention that governance may apply constraints right they may force you to",
    "start": "3263910",
    "end": "3270990"
  },
  {
    "text": "do some of these things so you've got you know running privileged containers might be allowed or disallowed you might",
    "start": "3270990",
    "end": "3276960"
  },
  {
    "text": "have different kinds of volumes that you're allowed to use and not allowed to use you might have you know users that",
    "start": "3276960",
    "end": "3285450"
  },
  {
    "text": "are going to be required and and so on so there's a lot of this kit that can be",
    "start": "3285450",
    "end": "3291450"
  },
  {
    "text": "enforced as policy and of course that's a great idea if you want to create a",
    "start": "3291450",
    "end": "3296550"
  },
  {
    "text": "better security posture inside your cluster you want to make sure that accidentally we don't end up with you",
    "start": "3296550",
    "end": "3302760"
  },
  {
    "start": "3302000",
    "end": "3366000"
  },
  {
    "text": "know services that are violating these these kinds of policies so got a demo for that but you know a little bit out",
    "start": "3302760",
    "end": "3308220"
  },
  {
    "text": "of time here so last kind of concept I'll mention is network policy we talked about this in the beginning and so you",
    "start": "3308220",
    "end": "3314880"
  },
  {
    "text": "can create minimal container images and you can deploy them but then you have",
    "start": "3314880",
    "end": "3320310"
  },
  {
    "text": "this ability to limit ingress and egress to them with the various ports that",
    "start": "3320310",
    "end": "3325530"
  },
  {
    "text": "we've you know kind of talked about breaking up but you can also go further than that with network policy and the",
    "start": "3325530",
    "end": "3330810"
  },
  {
    "text": "network policy is actually on the plate of the DevOps team deploying the service because they're the ones that",
    "start": "3330810",
    "end": "3336150"
  },
  {
    "text": "know what that service needs to consume and the features that it's exposing that will be consumed by third parties and so",
    "start": "3336150",
    "end": "3343079"
  },
  {
    "text": "these network policies are also useful tools for controlling ingress/egress",
    "start": "3343079",
    "end": "3349410"
  },
  {
    "text": "and also giving us access to services based on selectors so we can identify",
    "start": "3349410",
    "end": "3355460"
  },
  {
    "text": "individual components within kubernetes by labels and that's even finer grained and gives us additional capabilities",
    "start": "3355460",
    "end": "3361650"
  },
  {
    "text": "also using namespaces and things like that all right so at the end of the day",
    "start": "3361650",
    "end": "3367670"
  },
  {
    "start": "3366000",
    "end": "3583000"
  },
  {
    "text": "you know there's a lot of things to think about as a service developer we have to you know consider the actual",
    "start": "3367670",
    "end": "3374420"
  },
  {
    "text": "construction of the software we have to consider the the packaging of it we have to consider the deployment of it and",
    "start": "3374420",
    "end": "3380789"
  },
  {
    "text": "then we've got policies to enforce many of these security concerns and then we",
    "start": "3380789",
    "end": "3386279"
  },
  {
    "text": "also have network policies that are actually back on the plate of the service developers because they're so",
    "start": "3386279",
    "end": "3393059"
  },
  {
    "text": "fine-grained that they're actually controlling ingress and egress for that particular pod that's being deployed and",
    "start": "3393059",
    "end": "3398460"
  },
  {
    "text": "so those are all the kinds of things that you know in general people should be thinking about so thanks for",
    "start": "3398460",
    "end": "3403950"
  },
  {
    "text": "attending I will pass it back over to Christy yeah awesome thanks Randy for a",
    "start": "3403950",
    "end": "3410640"
  },
  {
    "text": "great presentation um let's just go ahead and do one question really quick here since we're just at the top of the",
    "start": "3410640",
    "end": "3416730"
  },
  {
    "text": "hour and rosh asks how to deal with in on flex unfixable excuse me",
    "start": "3416730",
    "end": "3423500"
  },
  {
    "text": "vulnerabilities and the base image reported by image scanners hmm great",
    "start": "3423500",
    "end": "3429390"
  },
  {
    "text": "question so image scanners come in lots of flavors and some of them are looking",
    "start": "3429390",
    "end": "3435450"
  },
  {
    "text": "for sea bees and if you are using a library that has a vulnerability and",
    "start": "3435450",
    "end": "3440839"
  },
  {
    "text": "that that vulnerability is is is not repaired which can happen in in the",
    "start": "3440839",
    "end": "3448559"
  },
  {
    "text": "world that we live in with all the open source and things there's there are there are things that you can do if you",
    "start": "3448559",
    "end": "3454890"
  },
  {
    "text": "understand the vulnerability but the tricky part is it's going to be case by case right it depends on what the actual",
    "start": "3454890",
    "end": "3461069"
  },
  {
    "text": "problem is maybe there's an issue with you know with a particular attack",
    "start": "3461069",
    "end": "3467039"
  },
  {
    "text": "pattern that you can control by adding in you know kind of a bit of",
    "start": "3467039",
    "end": "3473460"
  },
  {
    "text": "code to your application or configuring a proxy in a certain way maybe there's you know for example a way",
    "start": "3473460",
    "end": "3481950"
  },
  {
    "text": "that you can lock off traffic - you know - to a specific port to control access",
    "start": "3481950",
    "end": "3489210"
  },
  {
    "text": "to it so this there's a there's a lot of different ways that you can you know solve these problems but at the range of",
    "start": "3489210",
    "end": "3494610"
  },
  {
    "text": "problems is pretty broad so it kind of depends and at the end of the day of course you dolt emile ike to go back to",
    "start": "3494610",
    "end": "3500940"
  },
  {
    "text": "that project and see them repair that that vulnerability one of the things i can say i'm a involved with the Apache",
    "start": "3500940",
    "end": "3507870"
  },
  {
    "text": "thrift project is that a lot of the vulnerabilities that come in are pretty darn subtle get some security",
    "start": "3507870",
    "end": "3515370"
  },
  {
    "text": "researchers out there that are you know have - they set up a very very complex you know environment within which to",
    "start": "3515370",
    "end": "3522300"
  },
  {
    "text": "exploit some vulnerability right and so if you can defeat that environment right",
    "start": "3522300",
    "end": "3528240"
  },
  {
    "text": "if you can make it so that any one of those things you know in that that is",
    "start": "3528240",
    "end": "3533940"
  },
  {
    "text": "required in order to exploit that vulnerability is not possible through network policy or through controlling",
    "start": "3533940",
    "end": "3540570"
  },
  {
    "text": "you know the features of your pod or by removing you know key tools that are",
    "start": "3540570",
    "end": "3545820"
  },
  {
    "text": "required that that can mitigate the problem yeah great question great well",
    "start": "3545820",
    "end": "3552390"
  },
  {
    "text": "that takes us to the top of the hour and Randy's email is here on the last slide so if you have your further questions",
    "start": "3552390",
    "end": "3558840"
  },
  {
    "text": "and didn't have time to answer it feel free to connect with him and via email a reminder that the recording and the",
    "start": "3558840",
    "end": "3565620"
  },
  {
    "text": "slides are going to be available on the CNC F webinars page later today that CN CF IO slash webinars we look forward to",
    "start": "3565620",
    "end": "3573270"
  },
  {
    "text": "seeing you at a future CN CF webinar have a great day and stay safe thanks",
    "start": "3573270",
    "end": "3578550"
  },
  {
    "text": "everyone you",
    "start": "3578550",
    "end": "3583530"
  }
]