[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "welcome hi I'm Kuya from giant swarm I'm gonna be the host for this last session",
    "start": "30",
    "end": "5089"
  },
  {
    "text": "this dan from cilium from ice Overland and he's gonna talk and he's gonna talk",
    "start": "5089",
    "end": "12360"
  },
  {
    "text": "about eb PF and security tonight all right hello everyone thanks for coming I",
    "start": "12360",
    "end": "18119"
  },
  {
    "text": "appreciate it last session of the day those people still filter and I wanted to get a couple warm-up questions to get the juices flowing so how many of you",
    "start": "18119",
    "end": "25320"
  },
  {
    "text": "have heard of BPF already all right it's a good number how many of you want to give a 30 35 minute talk on it",
    "start": "25320",
    "end": "31920"
  },
  {
    "text": "if anyone no I'm just kidding so cool and how many of you are running",
    "start": "31920",
    "end": "39090"
  },
  {
    "text": "something on BPF today all right I thought that's a pretty good split you",
    "start": "39090",
    "end": "46110"
  },
  {
    "text": "know I was um at coop con coop con two years ago we used to joke it was BPF",
    "start": "46110",
    "end": "51300"
  },
  {
    "text": "what you know was the answer we got every time we told someone we were doing BPF and I think now it's more and more",
    "start": "51300",
    "end": "57090"
  },
  {
    "text": "people are already aware of it um but eager to learn more so definitely",
    "start": "57090",
    "end": "62730"
  },
  {
    "text": "excited to get this kicked off so a bit about me so I've been working in open",
    "start": "62730",
    "end": "69810"
  },
  {
    "start": "67000",
    "end": "160000"
  },
  {
    "text": "source networking insecurity for the last 10 plus years started out at a company called nice era which created",
    "start": "69810",
    "end": "76470"
  },
  {
    "text": "open V switch so we were doing a lot of the software-defined networking inside of Linux in the Linux kernel we were",
    "start": "76470",
    "end": "82920"
  },
  {
    "text": "very involved in OpenStack had created and led the OpenStack networking project and then Nasser was bought by VMware and",
    "start": "82920",
    "end": "90030"
  },
  {
    "text": "NASA technology that became VMware NSX and you know what we did with open V",
    "start": "90030",
    "end": "95310"
  },
  {
    "text": "switch was very much take the traditional network abstractions I Pease porridge routers firewalls and we made",
    "start": "95310",
    "end": "101820"
  },
  {
    "text": "them programmable in software but where I really think the world is going now is",
    "start": "101820",
    "end": "107090"
  },
  {
    "text": "rethinking those core networking abstractions going beyond IPs and ports and I think BPF is a fundamental",
    "start": "107090",
    "end": "113850"
  },
  {
    "text": "capability that will help us get there and that's what the open-source cilium project is all about so that's what",
    "start": "113850",
    "end": "119640"
  },
  {
    "text": "we're focused on now I'm a co-founder along with Thomas graph of a company called ISO valent or the company behind",
    "start": "119640",
    "end": "125579"
  },
  {
    "text": "psyllium so the purpose of this talk was about how we can use BPF to bring",
    "start": "125579",
    "end": "133200"
  },
  {
    "text": "kubernetes awareness to the to Linux kernel kernel security and it's not so much about",
    "start": "133200",
    "end": "139480"
  },
  {
    "text": "securing Linux it's not so much about securing kubernetes it's about securing the apps running on top of kubernetes",
    "start": "139480",
    "end": "145360"
  },
  {
    "text": "how can you make it so that it's not just agility as a reason why people want to put their apps on kubernetes putting",
    "start": "145360",
    "end": "152140"
  },
  {
    "text": "your app on kubernetes actually makes it dramatically more secure than running an idiot in any other way that's",
    "start": "152140",
    "end": "158290"
  },
  {
    "text": "effectively the goal so there's a bit of context Linux is what we call a general",
    "start": "158290",
    "end": "163720"
  },
  {
    "start": "160000",
    "end": "215000"
  },
  {
    "text": "purpose operating system right it can run on everything from this you know tiny little Raspberry Pi that's this big",
    "start": "163720",
    "end": "169360"
  },
  {
    "text": "to your phone to a laptop to some servers and now most of our Linux instances aren't even running on gear we",
    "start": "169360",
    "end": "175810"
  },
  {
    "text": "have access to they're running in the cloud but if you think about the core abstractions that that most of your",
    "start": "175810",
    "end": "182680"
  },
  {
    "text": "applications use their general purpose operating abstraction abstractions that have existed since the 70s and 80s things like processes files IP addresses",
    "start": "182680",
    "end": "190570"
  },
  {
    "text": "TCP IP ports so you know that makes sense if you can make no assumptions",
    "start": "190570",
    "end": "196030"
  },
  {
    "text": "about the type of workload that are running on top of your operating system you should provide general-purpose abstractions but the question we're",
    "start": "196030",
    "end": "202300"
  },
  {
    "text": "thinking about is let's assume we're running micro services applications like we're all building today running on",
    "start": "202300",
    "end": "207550"
  },
  {
    "text": "kubernetes what could we do inside of Linux to make those applications dramatically more secure so if we're",
    "start": "207550",
    "end": "215830"
  },
  {
    "start": "215000",
    "end": "270000"
  },
  {
    "text": "talking about security we have to talk about what type of security we're top we're focusing on particularly we're focusing on runtime security attacks",
    "start": "215830",
    "end": "222640"
  },
  {
    "text": "here a runtime security attack is something that happens as the application is running right you have a",
    "start": "222640",
    "end": "228520"
  },
  {
    "text": "set of services you have some data stores maybe some external api's the application team has some idea of how",
    "start": "228520",
    "end": "234790"
  },
  {
    "text": "that the code execution and the data flow is supposed to work right when things are well behaved a user comes",
    "start": "234790",
    "end": "241060"
  },
  {
    "text": "there they just see their data they get access to it the backups go over here and no one accesses those backups right",
    "start": "241060",
    "end": "246700"
  },
  {
    "text": "we all know that attacks happen when a malicious actor finds an alternative",
    "start": "246700",
    "end": "252270"
  },
  {
    "text": "execution path or data flow that's different than what the application intend application team intended but",
    "start": "252270",
    "end": "258579"
  },
  {
    "text": "it's still permitted by the infrastructure right so if any of you have seen a cilium talk before we like",
    "start": "258580",
    "end": "264580"
  },
  {
    "text": "to weave in Star Wars to pretty much all of our demos so here's my for what a runtime attack yes all right",
    "start": "264580",
    "end": "271240"
  },
  {
    "start": "270000",
    "end": "320000"
  },
  {
    "text": "you know you are just doing your job working in you know the galaxy's largest battle station right you get a prisoner",
    "start": "271240",
    "end": "279130"
  },
  {
    "text": "transfer from cell block beat looks perfectly normal right just bring in some wookie in here who's been",
    "start": "279130",
    "end": "284620"
  },
  {
    "text": "misbehaving right next thing you know the homeless pop off the blasters are firing you know and the most you know",
    "start": "284620",
    "end": "292599"
  },
  {
    "text": "precious prisoner in the entire galaxy has escaped right it's the same thing",
    "start": "292599",
    "end": "297759"
  },
  {
    "text": "right there's a set of expected behaviors the attack starts out looking like an expected behavior it takes a",
    "start": "297759",
    "end": "303940"
  },
  {
    "text": "different execution and data flow and that's an attack all right you know I just definitely would not",
    "start": "303940",
    "end": "310419"
  },
  {
    "text": "want to be the you know Imperial person who's in that retrospective of that security incident right probably not and",
    "start": "310419",
    "end": "316930"
  },
  {
    "text": "well for that person right so what should security be doing right security",
    "start": "316930",
    "end": "322599"
  },
  {
    "start": "320000",
    "end": "360000"
  },
  {
    "text": "should be preventing these invalid execution and data flows right but",
    "start": "322599",
    "end": "327970"
  },
  {
    "text": "preventing stuff isn't good enough right you have to do it in a way that application teams don't experience",
    "start": "327970",
    "end": "334509"
  },
  {
    "text": "friction they can still move as fast as they want to but they can deliver their applications with full speed and that's",
    "start": "334509",
    "end": "340240"
  },
  {
    "text": "ultimately what I think is so cool about BPF and the potential of BPF for kubernetes of our security is that it's",
    "start": "340240",
    "end": "347080"
  },
  {
    "text": "not just about you know being more secure it's about being more secure in a way that's very low friction and doesn't",
    "start": "347080",
    "end": "353110"
  },
  {
    "text": "get in the way of your application developers so with that we'll transition from Star Wars to very low level kernel",
    "start": "353110",
    "end": "359830"
  },
  {
    "text": "technology what is BP f BP f stands for berkeley packet filter it's also called",
    "start": "359830",
    "end": "365319"
  },
  {
    "start": "360000",
    "end": "445000"
  },
  {
    "text": "EBP F today those two names can be roughly used interchangeably essentially it's a highly efficient sandbox virtual",
    "start": "365319",
    "end": "371949"
  },
  {
    "text": "machine inside the kernel now this is kind of a computer scientist notion of a virtual machine it's not really like a",
    "start": "371949",
    "end": "377440"
  },
  {
    "text": "VMware VM and they're what they mean is that the code is sandboxed so that it can't do things that it shouldn't",
    "start": "377440",
    "end": "383909"
  },
  {
    "text": "alright and we'll talk more about that in a second but largely like TC you know",
    "start": "383909",
    "end": "390340"
  },
  {
    "text": "it was originally used by TCP dump if you've ever run TCP dump and you passed it a filter right they didn't want all",
    "start": "390340",
    "end": "395680"
  },
  {
    "text": "those packets copied up to user space and then filtered so they wanted to build a filter in the kernel so they needed to be able to dynamically",
    "start": "395680",
    "end": "401500"
  },
  {
    "text": "generate Odin the colonel that can filter those packets but they didn't want if that",
    "start": "401500",
    "end": "406729"
  },
  {
    "text": "code had a bug in it or secure it it was written by a malicious actor they didn't want to crash the colonel or do other bad things so it's sandboxed from a",
    "start": "406729",
    "end": "413720"
  },
  {
    "text": "can't do bad things perspective but it's actually natively compiled to run at full performance just like the feature",
    "start": "413720",
    "end": "419479"
  },
  {
    "text": "was compiled into the kernel so what this means is that we can take any existing Linux distro right as long as",
    "start": "419479",
    "end": "426650"
  },
  {
    "text": "it's modern enough in as good BPF support for nine is it kind of a common barrier we use for cilium right and I",
    "start": "426650",
    "end": "433490"
  },
  {
    "text": "can now dynamically put my hooks in there to add kubernetes and micro services of our intelligence and turn",
    "start": "433490",
    "end": "439610"
  },
  {
    "text": "that distro into a micro services aware distro so first off two key concepts to",
    "start": "439610",
    "end": "446419"
  },
  {
    "start": "445000",
    "end": "495000"
  },
  {
    "text": "cover on vpf the first is programs and hook points so you can think of BPF largely as a function as a service for",
    "start": "446419",
    "end": "452630"
  },
  {
    "text": "the kernel it's kind of like AWS lambda in the sense that an event happens in a set of code executes these events are",
    "start": "452630",
    "end": "460030"
  },
  {
    "text": "not you know external things they're actually certain calls happening in the kernel for example each time a new TCP",
    "start": "460030",
    "end": "466669"
  },
  {
    "text": "packet is created right I can run some code that runs logic there each time someone makes a particular Cisco I can",
    "start": "466669",
    "end": "473960"
  },
  {
    "text": "run logic right and that logic runs with these very strong safety guarantees but",
    "start": "473960",
    "end": "479000"
  },
  {
    "text": "still with native performance so it can write a BPF program it's written in this kind of pseudo C language you can",
    "start": "479000",
    "end": "485720"
  },
  {
    "text": "compile it to BPF bytecode there's a BPF system call that you use to load that",
    "start": "485720",
    "end": "491270"
  },
  {
    "text": "into the kernel you tell it what hook point you want to use before the kernel",
    "start": "491270",
    "end": "496789"
  },
  {
    "text": "will run your code it will first send it through a verifier again this is how the Sam boxing happens to make sure that",
    "start": "496789",
    "end": "502099"
  },
  {
    "text": "that code can't do anything malicious G or kernel I can only access data that it should write and then that hook point",
    "start": "502099",
    "end": "509150"
  },
  {
    "text": "gets our sorry that code gets attached to the hook point that you've requested and then so when the kernel code is",
    "start": "509150",
    "end": "514550"
  },
  {
    "text": "executing right maybe your hook point is at that function right there the kernel is going to execute to that point then",
    "start": "514550",
    "end": "520070"
  },
  {
    "text": "it's going to jump to your code passing it the Associated data that that kernel function had access to you can do",
    "start": "520070",
    "end": "526850"
  },
  {
    "text": "whatever processing you want and then the kernel will continue to process and this is a very lightweight operation",
    "start": "526850",
    "end": "533230"
  },
  {
    "text": "right so cool we can now put logic that runs at any point in the kernel right and add",
    "start": "533230",
    "end": "540589"
  },
  {
    "text": "our own intelligence there but the second thing you need is that listen if you just run code and it goes away you",
    "start": "540589",
    "end": "546889"
  },
  {
    "text": "need some place to keep statement right how do I keep track of things where do I have my configuration that's BPF maps so",
    "start": "546889",
    "end": "554509"
  },
  {
    "start": "552000",
    "end": "634000"
  },
  {
    "text": "BPF map is essentially there's a couple variants but you can think of them essentially as arrays and hash tables that your BPF programs can access and",
    "start": "554509",
    "end": "562630"
  },
  {
    "text": "they can read to them they can write to them and they persist beyond the lifetime of an individual execution of",
    "start": "562630",
    "end": "568819"
  },
  {
    "text": "your BPF program so why do we care about BPF maps well BPF maps can both be",
    "start": "568819",
    "end": "575540"
  },
  {
    "text": "written by the BPF programs that are running in the kernel but also by BPF aware tools that are running in user",
    "start": "575540",
    "end": "581060"
  },
  {
    "text": "space and it's done using something called the BBF filesystem so there are very highly efficient mechanism of",
    "start": "581060",
    "end": "587930"
  },
  {
    "text": "getting things in and out so there's two examples right so I may want to pass",
    "start": "587930",
    "end": "594529"
  },
  {
    "text": "configuration of rules let's imagine my BBF program is implementing a high-performance DDoS filter how do I",
    "start": "594529",
    "end": "600649"
  },
  {
    "text": "pass down the set of IPs that should be blocked by that DDoS filter all right I can use a BPF map to very incrementally",
    "start": "600649",
    "end": "606860"
  },
  {
    "text": "update in real time without loading and unloading that BPF program so it's a highly efficient way of incrementally",
    "start": "606860",
    "end": "613579"
  },
  {
    "text": "pushing things down it's also a very efficient way of BPF programs accumulating data in the kernel as",
    "start": "613579",
    "end": "619910"
  },
  {
    "text": "opposed to them having to pass each event up to user space for processing",
    "start": "619910",
    "end": "625130"
  },
  {
    "text": "this is why BPF is used in a lot of cases for performance monitoring right because it can do things in very",
    "start": "625130",
    "end": "630230"
  },
  {
    "text": "lightweight way in the kernel so putting it all together right you have some",
    "start": "630230",
    "end": "636949"
  },
  {
    "start": "634000",
    "end": "700000"
  },
  {
    "text": "application workload it makes a sis call like connect that's going to send data through the kernel networking stack and",
    "start": "636949",
    "end": "643610"
  },
  {
    "text": "out the e0 interface all right we can have a hook point there in the tcp/ip",
    "start": "643610",
    "end": "649010"
  },
  {
    "text": "stack that lets us see every bit of data that's flowing between that application",
    "start": "649010",
    "end": "654259"
  },
  {
    "text": "workload in the outside world and we can build our own BPF program attach it to",
    "start": "654259",
    "end": "660380"
  },
  {
    "text": "that hook point we compile it to the byte code load it with the BPF syscall write the",
    "start": "660380",
    "end": "665389"
  },
  {
    "text": "kernel will verify that we're doing it's only safe things we're only accessing that packet data for example",
    "start": "665389",
    "end": "670770"
  },
  {
    "text": "right then each time there's a packet that goes through right that BPF program",
    "start": "670770",
    "end": "676120"
  },
  {
    "text": "will be invoked we could add additional visibility metrics we could add filtering we can modify that packet we",
    "start": "676120",
    "end": "683080"
  },
  {
    "text": "can do anything we want to that packet data right and then if necessary we can pass things up or bring things in via",
    "start": "683080",
    "end": "690190"
  },
  {
    "text": "BPF Maps so this is a very very generic capability probably BPF can be used for",
    "start": "690190",
    "end": "697270"
  },
  {
    "text": "all kinds of things all right so some of the more common public you know BPF",
    "start": "697270",
    "end": "703960"
  },
  {
    "start": "700000",
    "end": "795000"
  },
  {
    "text": "projects that were out there Facebook has talked a lot about what they do both for performance visibility and for their",
    "start": "703960",
    "end": "709270"
  },
  {
    "text": "open source contra an outfield for load balancer very high performance using BPF google has talked publicly about both",
    "start": "709270",
    "end": "717100"
  },
  {
    "text": "quality of service and traffic optimization use cases performance monitoring and network security Red Hat",
    "start": "717100",
    "end": "722890"
  },
  {
    "text": "is looking very closely at this both from an nfe perspective but also doing",
    "start": "722890",
    "end": "729910"
  },
  {
    "text": "upstream work in the linux kernel to actually replace IP tables with an underlying BPF base mechanism because",
    "start": "729910",
    "end": "735190"
  },
  {
    "text": "it's so much more performant and then if any of you've heard of Brendan Gregg and",
    "start": "735190",
    "end": "740290"
  },
  {
    "text": "the flame graphs and all like Brendan is leading a group at Netflix on performance engineering has done a lot",
    "start": "740290",
    "end": "745990"
  },
  {
    "text": "of very cool work basically performance troubleshooting tracing systems monitoring so BPF itself is a very",
    "start": "745990",
    "end": "753040"
  },
  {
    "text": "generic capability very powerful if you want to get into the weeds on BPF if you",
    "start": "753040",
    "end": "759310"
  },
  {
    "text": "want to you know see a version of documentation where on the second page they're already talking at a register level I would encourage you to check out",
    "start": "759310",
    "end": "766140"
  },
  {
    "text": "this this stuff that was written by some of our upstream developers in the Linux kernel one of our team members Daniel",
    "start": "766140",
    "end": "772420"
  },
  {
    "text": "Boorstin wrote this hukou maintains other stuff in in the Linux kernel along with some folks from Facebook",
    "start": "772420",
    "end": "777850"
  },
  {
    "text": "but all the detail you wanted more all right is in those Docs I won't go any deeper but there's also a BPF channel on",
    "start": "777850",
    "end": "785290"
  },
  {
    "text": "the cilium slack that you can hop on and ask any very detailed questions there so for most of us who aren't going to spend",
    "start": "785290",
    "end": "791590"
  },
  {
    "text": "our time worrying about registers and low-level byte code right how can we use BPF there's really two big buckets of of",
    "start": "791590",
    "end": "799120"
  },
  {
    "start": "795000",
    "end": "902000"
  },
  {
    "text": "ways that you can use BPF first off there's kind of tool it's and toolchains for building your",
    "start": "799120",
    "end": "804639"
  },
  {
    "text": "own EPF programs and running them so who's heard of BCC before BCC is",
    "start": "804639",
    "end": "811540"
  },
  {
    "text": "probably the most common example of a kind of standard jewel chain you can actually write your own BPF logic it",
    "start": "811540",
    "end": "817389"
  },
  {
    "text": "makes it simple to do that whole process of compiling it loading it into the kernel getting data out of the kernel via BPF Maps without you having to get",
    "start": "817389",
    "end": "824050"
  },
  {
    "text": "your hands very dirty BPF is very general purpose it's a great tool for a kind of rapid prototyping things or",
    "start": "824050",
    "end": "830889"
  },
  {
    "text": "getting great performance visibility there's also a couple things they built now called BPF tool and BPF trace and in",
    "start": "830889",
    "end": "837970"
  },
  {
    "text": "coop cattle trace now that have made it easier to run these programs even in kubernetes environments then there's",
    "start": "837970",
    "end": "844959"
  },
  {
    "text": "programs and technologies that are built using BPF cilium which we build as an",
    "start": "844959",
    "end": "850269"
  },
  {
    "text": "open source project is one example we've zesting vectors is a Netflix performance",
    "start": "850269",
    "end": "855940"
  },
  {
    "text": "monitoring tool in this case you're not really dealing directly with BPF you never have to write sudo C code or deal",
    "start": "855940",
    "end": "862600"
  },
  {
    "text": "with it you get high level abstractions right but BPF makes these technologies",
    "start": "862600",
    "end": "868420"
  },
  {
    "text": "more powerful underneath the hood they give you better performance they give you deeper visibility etc but you're not",
    "start": "868420",
    "end": "874120"
  },
  {
    "text": "mucking with low-level details so it really depends what you want you want kind of a complete solution or are you",
    "start": "874120",
    "end": "879459"
  },
  {
    "text": "looking to prototype them and play with BPF both of these can be very useful actually both of these types of things",
    "start": "879459",
    "end": "884680"
  },
  {
    "text": "we'll use in the demo today so we'll use BCC to add some kernel hook points and",
    "start": "884680",
    "end": "890529"
  },
  {
    "text": "trace points and feed that information into cilium which will then do Network",
    "start": "890529",
    "end": "897070"
  },
  {
    "text": "visibility and enforcement so a bit of context on you know why BPF for network",
    "start": "897070",
    "end": "904540"
  },
  {
    "start": "902000",
    "end": "972000"
  },
  {
    "text": "security so you know most of you are probably familiar with IP tables it's the firewall that's existed in Linux for",
    "start": "904540",
    "end": "910899"
  },
  {
    "text": "the last 20 plus years right it's a sign very much for a world where there are administrators manually typing in the",
    "start": "910899",
    "end": "916540"
  },
  {
    "text": "command line writing out a couple of rule sets for an environment that changed very rarely that's nothing like",
    "start": "916540",
    "end": "923370"
  },
  {
    "text": "what we have today in kubernetes right and kubernetes pods are coming and going you can have many many pods you can have",
    "start": "923370",
    "end": "929920"
  },
  {
    "text": "you know services lists that get into the thousands and ten thousands right iptables was not really",
    "start": "929920",
    "end": "936220"
  },
  {
    "text": "designed for that type of scale likewise it was fundamentally designed around IPs",
    "start": "936220",
    "end": "941920"
  },
  {
    "text": "and ports and if you know anything about kubernetes networking right IPS are very ephemeral in the kubernetes environment",
    "start": "941920",
    "end": "948160"
  },
  {
    "text": "they're coming and going they're not meaningful long-term identity what you really care about for identity are things like kubernetes labels right and",
    "start": "948160",
    "end": "955630"
  },
  {
    "text": "IP addresses and so with BPF and cilium we're able to come natively build an",
    "start": "955630",
    "end": "961330"
  },
  {
    "text": "understanding of kubernetes identity into the kernel processing layer both from an enforcement perspective and from",
    "start": "961330",
    "end": "967480"
  },
  {
    "text": "a visibility perspective okay so this is",
    "start": "967480",
    "end": "973510"
  },
  {
    "start": "972000",
    "end": "1065000"
  },
  {
    "text": "not an intro to psyllium talk I'll have one slide that kind of gives you an overview psyllium again is kind of",
    "start": "973510",
    "end": "980230"
  },
  {
    "text": "service an API aware networking and security for kubernetes it's open source it's built on BPF we do a lot to as I",
    "start": "980230",
    "end": "988090"
  },
  {
    "text": "mentioned kind of elevate the notion of identity from an IP address to things that are more meaningful in a cloud",
    "start": "988090",
    "end": "993550"
  },
  {
    "text": "native world we also work with envoy to give you API where security we",
    "start": "993550",
    "end": "998650"
  },
  {
    "text": "accelerate getting that traffic in and out of envoy so it's very efficient we've done a ton of work to be more",
    "start": "998650",
    "end": "1004380"
  },
  {
    "text": "performant and more scalable and larger clusters i'm compared using something like IP tables we've also done a cool",
    "start": "1004380",
    "end": "1011730"
  },
  {
    "text": "talk at a coupon seattle about multi cluster route and security that's how you create a single mesh of routing and",
    "start": "1011730",
    "end": "1018090"
  },
  {
    "text": "security across multiple clusters of kubernetes we also have what we call universal encryption you know set one",
    "start": "1018090",
    "end": "1023790"
  },
  {
    "text": "config option all of your pod to pod traffic is encrypted thing we do in psyllium is fully transparent to the",
    "start": "1023790",
    "end": "1030060"
  },
  {
    "text": "apps there's no like side cars or anything that's part of the power of BPF right the traffic is just going through",
    "start": "1030060",
    "end": "1036089"
  },
  {
    "text": "the kernel we can grab it with BPF and do whatever we need to it without requiring the application to even to be",
    "start": "1036090",
    "end": "1042150"
  },
  {
    "text": "even aware that we're doing that right so definitely if you're interested in",
    "start": "1042150",
    "end": "1047160"
  },
  {
    "text": "psyllium more broadly or any of these topics swing by the booth you come in",
    "start": "1047160",
    "end": "1052410"
  },
  {
    "text": "the expo hall you go past Red Hat which is one of the first ones just take a left we're right there but in general",
    "start": "1052410",
    "end": "1059130"
  },
  {
    "text": "the rest of the talk is going to focus very specifically on a particular set of use cases so swinging back to what we",
    "start": "1059130",
    "end": "1066480"
  },
  {
    "start": "1065000",
    "end": "1089000"
  },
  {
    "text": "talked about earlier right we've talked about run time attack being when there's a certain set of",
    "start": "1066480",
    "end": "1072480"
  },
  {
    "text": "expected flows in terms of execution and data and the attackers are managed to manipulate the existing set of",
    "start": "1072480",
    "end": "1078299"
  },
  {
    "text": "application code to essentially take a different path than what the application developers intended but one that's still",
    "start": "1078299",
    "end": "1085080"
  },
  {
    "text": "allowed by the underlying operating system and other infrastructure so let's look at a couple concrete examples of",
    "start": "1085080",
    "end": "1090809"
  },
  {
    "start": "1089000",
    "end": "1164000"
  },
  {
    "text": "how this has happened in kubernetes so obviously the most you know upfront thing you think of is well maybe the",
    "start": "1090809",
    "end": "1096659"
  },
  {
    "text": "main service I'm building and deploying has a bug in it all right there's a really interesting example up here on",
    "start": "1096659",
    "end": "1102210"
  },
  {
    "text": "hacker one hacker ones a very cool site that can be used to kind of instead of essentially bounties for penetration",
    "start": "1102210",
    "end": "1107820"
  },
  {
    "text": "testing and this is a really informative example I give tons of credit to the companies that both are you know using",
    "start": "1107820",
    "end": "1113850"
  },
  {
    "text": "this as a mechanism for their penetration testing but also sharing that knowledge and learning with everyone else so props to everyone who's",
    "start": "1113850",
    "end": "1120539"
  },
  {
    "text": "using hacker one I'm not trying to call them out as a bad thing here but this is a really cool example of a server side",
    "start": "1120539",
    "end": "1125970"
  },
  {
    "text": "request forgery right where the application was getting in a URL and they were gonna go down on the internet",
    "start": "1125970",
    "end": "1132720"
  },
  {
    "text": "and download it to use it was like an icon in your shop right but it turns out",
    "start": "1132720",
    "end": "1137789"
  },
  {
    "text": "you could actually pass in a URL that referenced the AWS metadata service all right and they would reach out it WS",
    "start": "1137789",
    "end": "1144090"
  },
  {
    "text": "metadata service and they would grab the keys there and then you could get route for example in their entire kubernetes",
    "start": "1144090",
    "end": "1149220"
  },
  {
    "text": "cluster so it's a good example right of how there was an intended use for what was going on the hackers were clever",
    "start": "1149220",
    "end": "1154799"
  },
  {
    "text": "figured out another path of execution flow right that ended up compromising",
    "start": "1154799",
    "end": "1160080"
  },
  {
    "text": "the entire cluster now of course there's other options than the bug year malicious main service there's actually",
    "start": "1160080",
    "end": "1166080"
  },
  {
    "start": "1164000",
    "end": "1255000"
  },
  {
    "text": "buggy malicious ID cards or NIC containers so sidecars are essentially helper containers that run in the same",
    "start": "1166080",
    "end": "1171600"
  },
  {
    "text": "kubernetes pod and it containers are small containers that run right at you",
    "start": "1171600",
    "end": "1176610"
  },
  {
    "text": "right at container start time and so you know this might have logging you know logging agent for example but the",
    "start": "1176610",
    "end": "1183539"
  },
  {
    "text": "reality is if that logging agent gets compromised what else does that have access to right you have to think about",
    "start": "1183539",
    "end": "1189740"
  },
  {
    "text": "your attack surface there right there's no kind of amount of code that's too small to potentially have a security",
    "start": "1189740",
    "end": "1196470"
  },
  {
    "text": "relevant bug in it right in fact curl this is a good example app here curl right it's like the simplest thing you could possibly ever do in a container",
    "start": "1196470",
    "end": "1202770"
  },
  {
    "text": "practically is curl URL right actually has had a remote execution vulnerability there right you just have to assume that at",
    "start": "1202770",
    "end": "1210060"
  },
  {
    "text": "some point your app you know some app in your environment is going to be compromised you have to decide how you",
    "start": "1210060",
    "end": "1215250"
  },
  {
    "text": "contain that blast radius and then finally it's not just a software that's",
    "start": "1215250",
    "end": "1220830"
  },
  {
    "text": "a problem people are problems to you and me we're problems right we get access to",
    "start": "1220830",
    "end": "1226470"
  },
  {
    "text": "these systems because we need to do them right but when I coop kettle you know exactly into my front end it turns out I",
    "start": "1226470",
    "end": "1232770"
  },
  {
    "text": "also may have access database and I could just use that access to go grab all of that information right because my",
    "start": "1232770",
    "end": "1238770"
  },
  {
    "text": "front-end needed access that database so now when I could petal exec in I have access to that database all right so",
    "start": "1238770",
    "end": "1244200"
  },
  {
    "text": "again it's a there's a reason that flow is there but the attack uses that same access for an unintended reason to",
    "start": "1244200",
    "end": "1251010"
  },
  {
    "text": "expose data right so the analogy I like",
    "start": "1251010",
    "end": "1256020"
  },
  {
    "start": "1255000",
    "end": "1319000"
  },
  {
    "text": "to think is you know there's general purpose operating systems let's imagine you know as part of coop con you get a bottle of wine and you have to ship it",
    "start": "1256020",
    "end": "1262410"
  },
  {
    "text": "back to wherever you are right if you get a general purpose box and some general purpose packing materials right",
    "start": "1262410",
    "end": "1268680"
  },
  {
    "text": "you're gonna there's a lot of degrees of freedom in there that that thing can move around it's the same thing with an",
    "start": "1268680",
    "end": "1274440"
  },
  {
    "text": "app right you know you know what the app is supposed to do it's supposed to stay there but if someone in the shipping",
    "start": "1274440",
    "end": "1279510"
  },
  {
    "text": "company throws that thing around that's going to go all over the place right so what do you do while you take you know",
    "start": "1279510",
    "end": "1285090"
  },
  {
    "text": "packing tape and bubble wrap and all this kind of stuff you try to close up that space between the general-purpose",
    "start": "1285090",
    "end": "1290640"
  },
  {
    "text": "box and your actual",
    "start": "1290640",
    "end": "1294590"
  },
  {
    "text": "all right not quite yet all right give me a couple minutes I'm not late right",
    "start": "1300850",
    "end": "1306120"
  },
  {
    "text": "right what you're trying to do from a security perspective is kind of constrain that thing and right and put put put boundaries around it but with a",
    "start": "1306120",
    "end": "1313000"
  },
  {
    "text": "general purpose operating system it's hard because there's a lot of surface in degrees where this thing could move all",
    "start": "1313000",
    "end": "1318820"
  },
  {
    "text": "right so really what I think of when I think of like trying to design an operating system that's optimized for micro services I think about those",
    "start": "1318820",
    "end": "1324250"
  },
  {
    "start": "1319000",
    "end": "1355000"
  },
  {
    "text": "perfect wine carrier boxes they have right they're designed to be carrying wine right there's no degrees of freedom",
    "start": "1324250",
    "end": "1330250"
  },
  {
    "text": "it's perfectly formed and and kind of managed to be exactly carrying that type",
    "start": "1330250",
    "end": "1335799"
  },
  {
    "text": "of a workload and to be minimizing damage so that's essentially I think what we want to do with with BPF we want",
    "start": "1335799",
    "end": "1342370"
  },
  {
    "text": "to understand the form of your application and we want to constrain it to that exact space so that attackers",
    "start": "1342370",
    "end": "1347860"
  },
  {
    "text": "don't have all this extra degrees of freedom to manipulate and go down paths that you're not supposed to so what is",
    "start": "1347860",
    "end": "1355870"
  },
  {
    "start": "1355000",
    "end": "1376000"
  },
  {
    "text": "it about micro services and particularly kubernetes based micro services that we could take advantage of right to lock",
    "start": "1355870",
    "end": "1362230"
  },
  {
    "text": "them down much more tightly than just any old process running in Linux well there's a lot of things actually turns",
    "start": "1362230",
    "end": "1368559"
  },
  {
    "text": "out and you know in my view it's kind of all in the name micro services so what does the micro and micro service mean",
    "start": "1368559",
    "end": "1374409"
  },
  {
    "text": "right it means you're not running out you know a single container with lots of stuff in it you're trying to strip it",
    "start": "1374409",
    "end": "1379990"
  },
  {
    "start": "1376000",
    "end": "1472000"
  },
  {
    "text": "down to some basic unit of work mopes containers right have most pods have a",
    "start": "1379990",
    "end": "1386019"
  },
  {
    "text": "single main container right it launches some you know often webserver it could",
    "start": "1386019",
    "end": "1391299"
  },
  {
    "text": "be a datastore like the Redis it could be you know Apache etc as pid' one that may fork a set of things but it's much",
    "start": "1391299",
    "end": "1398350"
  },
  {
    "text": "different than think about my laptop right where I'm running a bunch of different processes it's unclear who to trust it's actually a very sane and",
    "start": "1398350",
    "end": "1404740"
  },
  {
    "text": "clean environment right there's not much interesting that should be happening inside of a container if you've designed",
    "start": "1404740",
    "end": "1411429"
  },
  {
    "text": "it properly as a micro service plus debug access things like cube Caudill",
    "start": "1411429",
    "end": "1416620"
  },
  {
    "text": "exact actually happens and from an operating system we can tell the difference between someone coming in",
    "start": "1416620",
    "end": "1421779"
  },
  {
    "text": "with the coop kettle exec and making a network call and the main process making that network halt we're actually able to",
    "start": "1421779",
    "end": "1428620"
  },
  {
    "text": "give those two different things different permissions the second thing that's huge is it's fully immutable",
    "start": "1428620",
    "end": "1433779"
  },
  {
    "text": "infrastructure code right you don't go in there at least you shouldn't write and update the",
    "start": "1433779",
    "end": "1438850"
  },
  {
    "text": "version of Apache that's running inside your container right no you blow those pods away you deploy a new pod right so",
    "start": "1438850",
    "end": "1445840"
  },
  {
    "text": "there's no complex application or process lifecycle to deal with right it's very simple all right",
    "start": "1445840",
    "end": "1452590"
  },
  {
    "text": "plus if I do need to package additional things and of additional processes to run in there I actually run them as",
    "start": "1452590",
    "end": "1458230"
  },
  {
    "text": "sidecars or NIC containers and that again it gives us a very clean packaging environment we can tell what that",
    "start": "1458230",
    "end": "1464110"
  },
  {
    "text": "sidecar needs to do and allow it to just do that all right and not give it the",
    "start": "1464110",
    "end": "1469299"
  },
  {
    "text": "same accesses as the main as the main process then on the service side right",
    "start": "1469299",
    "end": "1475330"
  },
  {
    "start": "1472000",
    "end": "1525000"
  },
  {
    "text": "you know again I mentioned that typically you know an operating system would understand IPS IPS aren't very",
    "start": "1475330",
    "end": "1481389"
  },
  {
    "text": "meaningful we'll hear what you really care about is one of the services that this that this micro service is supposed to talk to we want to give it access",
    "start": "1481389",
    "end": "1488080"
  },
  {
    "text": "just to those services not for example to every IP out there all right plus you know ideally we can actually",
    "start": "1488080",
    "end": "1495610"
  },
  {
    "text": "get API level visibility right we're not going to cover this in this talk right now because it's only a thirty five minute talk but cilium gives you",
    "start": "1495610",
    "end": "1502330"
  },
  {
    "text": "visibility into things like HTTP eg our PC and Kafka so you don't have to open up an entire port and say hey you can",
    "start": "1502330",
    "end": "1508330"
  },
  {
    "text": "make every API call here you can actually say no you can go put two /foo writer you can post you know you can",
    "start": "1508330",
    "end": "1515289"
  },
  {
    "text": "produce to this Kafka topic actually understanding those semantics let us lock things down much more tightly than",
    "start": "1515289",
    "end": "1520840"
  },
  {
    "text": "we've ever been able to before so keeping that in mind you know ultimately",
    "start": "1520840",
    "end": "1526749"
  },
  {
    "start": "1525000",
    "end": "1583000"
  },
  {
    "text": "I think the trick to identifying and stopping runtime attacks in this microservices we're all just kind of",
    "start": "1526749",
    "end": "1532659"
  },
  {
    "text": "think about first how can we measure the application how can we understand what it's supposed to do",
    "start": "1532659",
    "end": "1537879"
  },
  {
    "text": "in a way that doesn't add overhead right and doesn't add friction to the application development teams first then",
    "start": "1537879",
    "end": "1543850"
  },
  {
    "text": "we can just monitor for deviations and changes right we can understand and look",
    "start": "1543850",
    "end": "1549940"
  },
  {
    "text": "for anything that's outside the norm and then finally we can take that information we've built up based on how",
    "start": "1549940",
    "end": "1555460"
  },
  {
    "text": "that application is supposed to behave using that we've extract using vpf and we can start to enforce security",
    "start": "1555460",
    "end": "1561789"
  },
  {
    "text": "policies to limit it to only performing those actions all right and you know this is a cycle that can",
    "start": "1561789",
    "end": "1568710"
  },
  {
    "text": "repeat and repeat and repeat until you've ultimately kind of boxed that application in this list no longer has",
    "start": "1568710",
    "end": "1574020"
  },
  {
    "text": "degrees of freedom right to have an attacker take a path that the application T never really thought about",
    "start": "1574020",
    "end": "1580230"
  },
  {
    "text": "all right so almost done with the slide",
    "start": "1580230",
    "end": "1585419"
  },
  {
    "start": "1583000",
    "end": "1643000"
  },
  {
    "text": "we're about to get to a live demo so the live demo is going to include three",
    "start": "1585419",
    "end": "1591059"
  },
  {
    "text": "different sets of technology the first is psyllium psyllium again is the core networking security visibility",
    "start": "1591059",
    "end": "1596520"
  },
  {
    "text": "enforcement layer built on BPF psyllium has an extensive bility mechanism that",
    "start": "1596520",
    "end": "1601590"
  },
  {
    "text": "you can pass in other identity information about the workloads and psyllium can enforce based on so we're",
    "start": "1601590",
    "end": "1609960"
  },
  {
    "text": "also plugging into events from the container runtime in this case docker to",
    "start": "1609960",
    "end": "1615330"
  },
  {
    "text": "understand when there's been a docker run versus when there's been a doctor exec and to be able to tell the difference between those two things all",
    "start": "1615330",
    "end": "1622530"
  },
  {
    "text": "right finally we're using BCC and a set of hook points called kernel or K probes",
    "start": "1622530",
    "end": "1627600"
  },
  {
    "text": "right to be able to understand you know when a connect happens or when a for captain so one of the exact happens and",
    "start": "1627600",
    "end": "1634309"
  },
  {
    "text": "extract additional metadata that we can then feed into psyllium for making",
    "start": "1634309",
    "end": "1640380"
  },
  {
    "text": "enforcement decisions so we'll show a couple things but the one thing I really want you to focus in on is something",
    "start": "1640380",
    "end": "1646679"
  },
  {
    "start": "1643000",
    "end": "1707000"
  },
  {
    "text": "that I'm super excited about because you know since the early days you know the dawn of time and networking and probably",
    "start": "1646679",
    "end": "1653220"
  },
  {
    "text": "people were drawing network diagrams on cave walls right you know how did you identify a source in a firewall role it",
    "start": "1653220",
    "end": "1660419"
  },
  {
    "text": "was always an IP address right and the problem is with kubernetes everything in",
    "start": "1660419",
    "end": "1666150"
  },
  {
    "text": "a pond is a single network namespace it all has one IP address so any traditional fire one while they're",
    "start": "1666150",
    "end": "1671789"
  },
  {
    "text": "typing tables or even a sidecar proxy can't tell the difference between different things coming from that pot",
    "start": "1671789",
    "end": "1678480"
  },
  {
    "text": "because it all comes with the same IP address it can't tell the difference between it coming from the main container a sidecar and in it container",
    "start": "1678480",
    "end": "1685020"
  },
  {
    "text": "it can't tell the difference between it you know being a coop kettle exact versus the main process that's really",
    "start": "1685020",
    "end": "1690570"
  },
  {
    "text": "what we want to show we want to show the power of BPF to be able to pull in this operating system level granularity so",
    "start": "1690570",
    "end": "1697140"
  },
  {
    "text": "that we can lock each one of the you know bits of code execution down to",
    "start": "1697140",
    "end": "1702780"
  },
  {
    "text": "exactly the minimum workflow that they need to and nothing else alright so demo time dance hope this",
    "start": "1702780",
    "end": "1716390"
  },
  {
    "start": "1707000",
    "end": "1922000"
  },
  {
    "text": "that's right is that big enough for people to see no all right that's what I was afraid of all right let's see let me",
    "start": "1718270",
    "end": "1729010"
  },
  {
    "text": "just is that big enough because there's got to be a lot of windows here okay well",
    "start": "1729010",
    "end": "1737750"
  },
  {
    "text": "get started so long story short this is a basic this is a standard mini coop environment I can do mini coup SSH you",
    "start": "1737750",
    "end": "1747110"
  },
  {
    "text": "know you name right",
    "start": "1747110",
    "end": "1752480"
  },
  {
    "text": "you see I'm running a 415 kernel this is just a stock mini cube right we're going to use BPF to add additional micro",
    "start": "1752480",
    "end": "1758510"
  },
  {
    "text": "services we're filtering and intelligence to this kubernetes environment so how many of you are",
    "start": "1758510",
    "end": "1764360"
  },
  {
    "text": "familiar with the guestbook demo from kubernetes I see now really oh this is",
    "start": "1764360",
    "end": "1771020"
  },
  {
    "text": "like the first one the first thing I ever did with kubernetes so maybe maybe it's no longer the main demo anymore so",
    "start": "1771020",
    "end": "1778280"
  },
  {
    "text": "let's see so we have a variant of this called the Deathstar gas book alright and so looks like the guest book already",
    "start": "1778280",
    "end": "1784520"
  },
  {
    "text": "has one entry it says hi thanks for attending my coop contact well that's nice so let's make sure that my demo environment is still up let's say hmm I",
    "start": "1784520",
    "end": "1792170"
  },
  {
    "text": "hope no one learns about the exhaust",
    "start": "1792170",
    "end": "1798970"
  },
  {
    "text": "ports vulnerability alright let's see if this is up yep ok so it's still up we",
    "start": "1798970",
    "end": "1805520"
  },
  {
    "text": "see the messages basically it's a pretty simple PHP based front down that stores in Redis and reads it back alright",
    "start": "1805520",
    "end": "1811610"
  },
  {
    "text": "so let's say your application development teams I'm just told you that they have now deployed a new version of this guestbook",
    "start": "1811610",
    "end": "1819800"
  },
  {
    "text": "right they you know they pulled in this nice graphic etc how do you as a security team kind of understand what's",
    "start": "1819800",
    "end": "1825350"
  },
  {
    "text": "going on inside that environment so let me see where I can get",
    "start": "1825350",
    "end": "1831670"
  },
  {
    "text": "all right so we're able to use vpf here all right to just do a court race right",
    "start": "1834309",
    "end": "1840999"
  },
  {
    "text": "we're tracing all these system calls so we understand exactly what's going inside this one pod so you can see that",
    "start": "1840999",
    "end": "1846369"
  },
  {
    "text": "inside the single pod we actually have in an it container right called a net",
    "start": "1846369",
    "end": "1851409"
  },
  {
    "text": "github download right and we can see from psyllium right that it's reaching out not just to an IP address but to we",
    "start": "1851409",
    "end": "1857529"
  },
  {
    "text": "can actually see the full dns name that it's reaching out to um port 80 we can see up here we have a logging sidecar we",
    "start": "1857529",
    "end": "1864429"
  },
  {
    "text": "can see all the different things that have been executed inside what's that does it need a bigger yeah well there's",
    "start": "1864429",
    "end": "1873460"
  },
  {
    "text": "unfortunately a lot of windows in this demo so this is all gonna work right and",
    "start": "1873460",
    "end": "1879070"
  },
  {
    "text": "then we can see up here our main actual process this is the front end right it's",
    "start": "1879070",
    "end": "1885339"
  },
  {
    "text": "running it's running Apache to write with PHP and it's accessing that the",
    "start": "1885339",
    "end": "1890950"
  },
  {
    "text": "Redis back-end so right without you know getting in the way if any of our developers are making them tell us anything right we've Auto extracted all",
    "start": "1890950",
    "end": "1897309"
  },
  {
    "text": "this information about their app and how it changes all right so our developers",
    "start": "1897309",
    "end": "1902859"
  },
  {
    "text": "have also said I mean just exit and see if I can just keep using this window",
    "start": "1902859",
    "end": "1909210"
  },
  {
    "text": "yeah our developers have also said that they've had an initial security policy in place so that sounds good we love it",
    "start": "1911940",
    "end": "1917640"
  },
  {
    "text": "when developers do security right so front end policy one here you can see",
    "start": "1917640",
    "end": "1924090"
  },
  {
    "start": "1922000",
    "end": "2000000"
  },
  {
    "text": "here okay great I'm taking the guestbook front end and I'm only allowing it to talk on port six three seven nine to my",
    "start": "1924090",
    "end": "1930420"
  },
  {
    "text": "Redis back-end that sounds good right but down here we can see that you know this isn't so good right we also expose",
    "start": "1930420",
    "end": "1937440"
  },
  {
    "text": "port 80 to the entire world right it's hard to know you know they've got to reach out to this log lee and",
    "start": "1937440",
    "end": "1943410"
  },
  {
    "text": "they've got to reach out to get however i don't know the IP addresses they're just open up to the whole world all right it's a pretty common common",
    "start": "1943410",
    "end": "1949110"
  },
  {
    "text": "problem all right so what that means right is that I could you know if I get compromised you know I",
    "start": "1949110",
    "end": "1955950"
  },
  {
    "text": "can access any endpoint out there right so for example if I go coop cuddle exact",
    "start": "1955950",
    "end": "1964370"
  },
  {
    "text": "I'm gonna just try to do this all in one window it might take a little longer but",
    "start": "1965090",
    "end": "1970910"
  },
  {
    "text": "all right I can do curl HTTP a bit of that google.com",
    "start": "1971390",
    "end": "1978470"
  },
  {
    "text": "that's all right let me just make sure that this is actually the policy that's applied",
    "start": "1980030",
    "end": "1987230"
  },
  {
    "text": "all right so see so now I have that world open so it",
    "start": "1994980",
    "end": "2002980"
  },
  {
    "text": "doesn't matter that my apps only supposed to access those you know two sites log Li and github their table if",
    "start": "2002980",
    "end": "2008500"
  },
  {
    "text": "it's compromised its able to access anything so that's obviously not good right so let's do a little better than that so here I've got an example of a",
    "start": "2008500",
    "end": "2017020"
  },
  {
    "start": "2015000",
    "end": "2084000"
  },
  {
    "text": "simple silly network policy it starts to pulling more service identity information the big part that's changed",
    "start": "2017020",
    "end": "2022270"
  },
  {
    "text": "here right is here I actually these two DNS rules I can do full DNS names I can",
    "start": "2022270",
    "end": "2027370"
  },
  {
    "text": "do wildcards I can pull that in and now I can apply a policy right that is fully DNS and service aware to lockdown so",
    "start": "2027370",
    "end": "2035020"
  },
  {
    "text": "let's go Kubb cattle apply policy two right now if I go back into that",
    "start": "2035020",
    "end": "2041050"
  },
  {
    "text": "container I like rail Google now I can't access Google anymore right so that's a good start starting to",
    "start": "2041050",
    "end": "2048310"
  },
  {
    "text": "lock things down right but you know I'm in my main pod here and I'm still able to access for example github well why",
    "start": "2048310",
    "end": "2056500"
  },
  {
    "text": "does my main pod need access github if it's compromised right it shouldn't mine it container needed to write this comes",
    "start": "2056500",
    "end": "2063129"
  },
  {
    "text": "back to the idea that traditionally right a firewall can't tell the difference between what's going on in Taner",
    "start": "2063130",
    "end": "2068169"
  },
  {
    "text": "and what's going on you know it can't tell that it's just the init container right so it has to allow it for the",
    "start": "2068169",
    "end": "2073659"
  },
  {
    "text": "entire container so let's do a little bit better than right so I'm going to",
    "start": "2073660",
    "end": "2081280"
  },
  {
    "text": "apply that but I'm also just going to cat it quickly so you can see so this is bringing in some of that container",
    "start": "2081280",
    "end": "2086740"
  },
  {
    "start": "2084000",
    "end": "2208000"
  },
  {
    "text": "awareness right we can actually split these things out when you say well the only thing that should be able to talk to Redis for example is that main PHP",
    "start": "2086740",
    "end": "2093600"
  },
  {
    "text": "front-end container the only thing that should be able to talk to log lis right is that logging sidecar and the only",
    "start": "2093600",
    "end": "2101290"
  },
  {
    "text": "thing that should be able to talk to github is actually that init container right so again we're continuing to",
    "start": "2101290",
    "end": "2106480"
  },
  {
    "text": "constrain and constrain and constraint alright and so why is this important right so if I look right right now if my",
    "start": "2106480",
    "end": "2115060"
  },
  {
    "text": "sidecar gets compromised alright it can actually still access my reddit server even though there's no reason it should",
    "start": "2115060",
    "end": "2121000"
  },
  {
    "text": "right so I can do coupe cuddle exact and in this case I'm gonna explicitly say I",
    "start": "2121000",
    "end": "2126280"
  },
  {
    "text": "want to go into the logging sidecar",
    "start": "2126280",
    "end": "2129660"
  },
  {
    "text": "so of course the logging sidecar should be able to do things like curl log Lee",
    "start": "2131320",
    "end": "2136720"
  },
  {
    "text": "right right so good that returns all right but now we've enforced this policy",
    "start": "2136720",
    "end": "2143260"
  },
  {
    "text": "that's locking it down from a container level right so what I won't be able to",
    "start": "2143260",
    "end": "2150070"
  },
  {
    "text": "do here now is if I do the Redis all",
    "start": "2150070",
    "end": "2155980"
  },
  {
    "text": "right and so the Redis master all right",
    "start": "2155980",
    "end": "2161950"
  },
  {
    "text": "it's not able to access Redis and this is great now right if my sidecar gets compromised right I'm not exposed all",
    "start": "2161950",
    "end": "2168190"
  },
  {
    "text": "right but like we saw before you know if",
    "start": "2168190",
    "end": "2173890"
  },
  {
    "text": "I have debug access to my main Redis pod right I can still access Redis right so",
    "start": "2173890",
    "end": "2181300"
  },
  {
    "text": "if I go in here I do read a CLI all",
    "start": "2181300",
    "end": "2188020"
  },
  {
    "text": "right I can do get messages and I can access the Redis datastore so what if we",
    "start": "2188020",
    "end": "2193720"
  },
  {
    "text": "don't want people we want to be able to give people debug access right but we don't want to be able to give them them",
    "start": "2193720",
    "end": "2200320"
  },
  {
    "text": "to be able to access our sensitive data stores so that's what this last policy",
    "start": "2200320",
    "end": "2205480"
  },
  {
    "text": "is all right notice I put in here I say well it has to be of type run this means",
    "start": "2205480",
    "end": "2211660"
  },
  {
    "start": "2208000",
    "end": "2243000"
  },
  {
    "text": "it has to be that route process that was actually kicked off by your trusted you know CI CD workflow it's not just some",
    "start": "2211660",
    "end": "2217870"
  },
  {
    "text": "you know application ops team running in there and applying it and you know accessing it so let's really quickly do",
    "start": "2217870",
    "end": "2226300"
  },
  {
    "text": "front-end policy for all right now if we could cuddle exact back in there we are",
    "start": "2226300",
    "end": "2232450"
  },
  {
    "text": "in PHP Redis right now we hang right so we're actually able to tell the",
    "start": "2232450",
    "end": "2238120"
  },
  {
    "text": "difference between a Kubb kettle exec and the main process but I may have",
    "start": "2238120",
    "end": "2244690"
  },
  {
    "start": "2243000",
    "end": "2273000"
  },
  {
    "text": "cheated right how do we know the actual main process is still able to access right we've got to go back and check all",
    "start": "2244690",
    "end": "2249730"
  },
  {
    "text": "right so let's test the demo gods all right it worked right so we're actually",
    "start": "2249730",
    "end": "2257080"
  },
  {
    "text": "able to be doing firewall not based on source IP address but actually based on the specific process that sent this",
    "start": "2257080",
    "end": "2263410"
  },
  {
    "text": "traffic inside of Coubertin right so this is why I'm kind of so excited about BPF and the potential of",
    "start": "2263410",
    "end": "2270880"
  },
  {
    "text": "kind of what it's able to do in terms of locking down things more and more tightly so that our application",
    "start": "2270880",
    "end": "2276820"
  },
  {
    "start": "2273000",
    "end": "2315000"
  },
  {
    "text": "workloads right have kind of nowhere to move if they get compromised so definitely you know I cilium and BPF of",
    "start": "2276820",
    "end": "2284200"
  },
  {
    "text": "my mine are just undoubtedly a critical part of the overall kind of next generation micro services stack I think",
    "start": "2284200",
    "end": "2290080"
  },
  {
    "text": "envoy the big part plays nicely with sto as well and kubernetes definitely would be happy to chat with you more about",
    "start": "2290080",
    "end": "2296200"
  },
  {
    "text": "that you know stop by our booth my co-founder Thomas has a talk tomorrow",
    "start": "2296200",
    "end": "2301960"
  },
  {
    "text": "at 2:30 or 250 on some very cool some",
    "start": "2301960",
    "end": "2307060"
  },
  {
    "text": "very cool kind of chaos testing stuff he's doing so with that I will say thanks and take some questions",
    "start": "2307060",
    "end": "2315180"
  },
  {
    "start": "2315000",
    "end": "2808000"
  },
  {
    "text": "yep I don't know if I like that smile on his face this is gonna be hard thanks",
    "start": "2321509",
    "end": "2328299"
  },
  {
    "text": "for the presentation a simple question is it possible to filter traffic between",
    "start": "2328299",
    "end": "2333479"
  },
  {
    "text": "containers in one pot in one pot yes yeah yeah are you asking me to show you",
    "start": "2333479",
    "end": "2339640"
  },
  {
    "text": "right now or hey we can we can grab some time later and I'll see ya I'll have to think about whether it should work",
    "start": "2339640",
    "end": "2345189"
  },
  {
    "text": "actually here yeah it definitely will work um so if you're using psyllium in a",
    "start": "2345189",
    "end": "2350799"
  },
  {
    "text": "very large cluster like twos so I'm having trouble hearing and if you're",
    "start": "2350799",
    "end": "2355989"
  },
  {
    "text": "using psyllium in a very large cluster like 300 plus nodes with like many tens",
    "start": "2355989",
    "end": "2361059"
  },
  {
    "text": "of thousands of pods sort of how do you find scaling and other cm is kind of can",
    "start": "2361059",
    "end": "2366579"
  },
  {
    "text": "have issues and yeah did you see the question was about scale and large scale environments can I ask everyone to leave",
    "start": "2366579",
    "end": "2372880"
  },
  {
    "text": "quietly thanks yeah it's a good question have you seen that the 1.5 release blog",
    "start": "2372880",
    "end": "2379630"
  },
  {
    "text": "that we put out mycelium so we've done an incredibly we validated psyllium up to 5,000 nodes of physical case worker",
    "start": "2379630",
    "end": "2386979"
  },
  {
    "text": "nodes um 20,000 plus pods and I think 20k services so we've done a ton of work",
    "start": "2386979",
    "end": "2393489"
  },
  {
    "text": "some of the largest kubernetes users out there are already using or shifting the psyllium because of like a lot of the",
    "start": "2393489",
    "end": "2399969"
  },
  {
    "text": "scale benefits a lot of the things are on IP tables don't you know it doesn't matter if you're running 20 20 nodes or something like that it really matters",
    "start": "2399969",
    "end": "2406749"
  },
  {
    "text": "when you're running large-scale environments yep sorry right here",
    "start": "2406749",
    "end": "2414239"
  },
  {
    "text": "whatever I got overall I guess how you track your injection into BPF so it when",
    "start": "2414239",
    "end": "2422919"
  },
  {
    "text": "you're continued when your controllers they started how it valide is that VP of",
    "start": "2422919",
    "end": "2428109"
  },
  {
    "text": "rooms ask you and Colonel and not removed how does it validate that BPF hooks are still I mean that you are",
    "start": "2428109",
    "end": "2435549"
  },
  {
    "text": "injecting your VP of code into your know it is running there but so the way the",
    "start": "2435549",
    "end": "2443650"
  },
  {
    "text": "networking setup happens is the network connectivity won't even be said like the BPI program is required for the pod to",
    "start": "2443650",
    "end": "2449799"
  },
  {
    "text": "have network access so if something happens in the BPI program can't be the pod walk should be disconnected",
    "start": "2449799",
    "end": "2456140"
  },
  {
    "text": "right so it's kind of a fail as essential as fail close semantics not fail open so you need very specific",
    "start": "2456140",
    "end": "2466960"
  },
  {
    "text": "Linux capabilities to be able to do that so that's the general kind of protection",
    "start": "2466960",
    "end": "2472339"
  },
  {
    "text": "mechanism and you aren't able so a pod for example is not able to remove its BPF program it's actually running in a",
    "start": "2472339",
    "end": "2478549"
  },
  {
    "text": "different it's running outside the veeth pair I'm happy to walk you through kind of the details of that later yep",
    "start": "2478549",
    "end": "2485329"
  },
  {
    "text": "would you mind uploading your demo to github sure yeah yeah yeah I need to",
    "start": "2485329",
    "end": "2491270"
  },
  {
    "text": "clean up a little more but yeah like I mentioned this that that code is is prototype code that's why I use BCC will",
    "start": "2491270",
    "end": "2498740"
  },
  {
    "text": "fold some of this capability in the kind of silly improper overtime if you're interested in tracking that letter even",
    "start": "2498740",
    "end": "2504500"
  },
  {
    "text": "participating let me know yep",
    "start": "2504500",
    "end": "2509710"
  },
  {
    "text": "you do security between the clusters so Wow so policies between two different Koopa",
    "start": "2512250",
    "end": "2518940"
  },
  {
    "text": "exactly so you could have labels in one cluster and labels in another cluster and still say like you know you know",
    "start": "2518940",
    "end": "2524250"
  },
  {
    "text": "tenets Dan can talk to tenant Dan regardless of what cluster they're in that's part of white psyllium kind of",
    "start": "2524250",
    "end": "2529470"
  },
  {
    "text": "more natively transfers the identity right IP addresses may not be meaningful across clusters but still iam actually",
    "start": "2529470",
    "end": "2535080"
  },
  {
    "text": "embeds the identity in the traffic",
    "start": "2535080",
    "end": "2538460"
  },
  {
    "text": "there's a mode of Cillian that you can do that it actually tags the packet yeah um so in addition to like multi clusters",
    "start": "2540320",
    "end": "2548580"
  },
  {
    "text": "that can question yeah double dipping can you handle like going from sort of a pod to a VM or some other platform",
    "start": "2548580",
    "end": "2556040"
  },
  {
    "text": "you're asking like could the chat so psyllium itself and all beep yap is not at all specific to containers right it's",
    "start": "2556040",
    "end": "2563010"
  },
  {
    "text": "a core Linux primitive the the reason we started out in containers is really two",
    "start": "2563010",
    "end": "2568170"
  },
  {
    "text": "reasons one is that containers tend to be running with new kernels and BPF benefits from running a newer kernel it's less of an issue now but that's why",
    "start": "2568170",
    "end": "2574170"
  },
  {
    "text": "we started out there the second thing is psyllium kind of fundamentally is about pulling in these richer notions of",
    "start": "2574170",
    "end": "2579960"
  },
  {
    "text": "identity than an IP address with kubernetes there's automatic identity that we can automatically extract like",
    "start": "2579960",
    "end": "2585180"
  },
  {
    "text": "labels and those types of things if you pull up a VM the question is well what who gives us the identity of that VM so there are",
    "start": "2585180",
    "end": "2592140"
  },
  {
    "text": "actually API is on psyllium that you can kind of integrate with to pass it the identity information but that's",
    "start": "2592140",
    "end": "2598140"
  },
  {
    "text": "something that you have to explicitly integrate with if it's a VM for example versus that kind of being automatically",
    "start": "2598140",
    "end": "2603630"
  },
  {
    "text": "extracted in a kubernetes environment yep yeah when the policy gets applied to",
    "start": "2603630",
    "end": "2609300"
  },
  {
    "text": "the port what happens to the connectivity to the port when you reapply the policy like you change the",
    "start": "2609300",
    "end": "2616050"
  },
  {
    "text": "policy reapply during the application of the policy side I didn't go into this",
    "start": "2616050",
    "end": "2622320"
  },
  {
    "text": "level of detail because I didn't want to bore the hell of most of you but BPF actually supports atomic swap of",
    "start": "2622320",
    "end": "2627990"
  },
  {
    "text": "programs right so you can guarantee that like a set of packets well you know that",
    "start": "2627990",
    "end": "2634109"
  },
  {
    "text": "there's there's no like packet flowing through that hook point like after you've removed the the first one but",
    "start": "2634109",
    "end": "2641550"
  },
  {
    "text": "before you've applied the second one like there's no gap there you're basically atomically swapping one program for another and it",
    "start": "2641550",
    "end": "2647580"
  },
  {
    "text": "guarantees that that trace point is not invoked you know that that trace point is not passed until the new program is",
    "start": "2647580",
    "end": "2654630"
  },
  {
    "text": "actually in place no no I'm saying there's no there's no packet that's allowed to pass without a",
    "start": "2654630",
    "end": "2661590"
  },
  {
    "text": "BPF program executing if you have something registered we're not actually unregistering that BPF program we're",
    "start": "2661590",
    "end": "2667260"
  },
  {
    "text": "atomically swapping in a new one yep",
    "start": "2667260",
    "end": "2674780"
  },
  {
    "text": "so we've understand correctly psyllium what psyllium does is it compiles this",
    "start": "2676680",
    "end": "2682770"
  },
  {
    "text": "bytecode and inserts it into BPF right so every time something changes on my",
    "start": "2682770",
    "end": "2688289"
  },
  {
    "text": "cluster you have to recompile and it's a really good question there's actually two answers to it so the first is that's",
    "start": "2688289",
    "end": "2695039"
  },
  {
    "text": "part of what's great about BPF maps right so for example if a new can security rule gets pushed down or a new",
    "start": "2695039",
    "end": "2701010"
  },
  {
    "text": "endpoint pops up we don't have to recompile the BPF program we might insert something into a BPF map but I",
    "start": "2701010",
    "end": "2706829"
  },
  {
    "text": "mentioned that's an extremely lightweight operation right that's the user space thing would just shove",
    "start": "2706829",
    "end": "2711869"
  },
  {
    "text": "another entry into a BPF map the next time the kernel program does a lookup on that entry will be in there second thing",
    "start": "2711869",
    "end": "2718799"
  },
  {
    "text": "is you know there may be like if there's meaningful changes to the control flow you would potentially have to recompile",
    "start": "2718799",
    "end": "2725940"
  },
  {
    "text": "the BPF program but we've just introduced in a recent version of psyllium essentially BPF templating so",
    "start": "2725940",
    "end": "2732420"
  },
  {
    "text": "if it's a similar program we're actually able to cache that and only compile once so there's been um this is kind of part",
    "start": "2732420",
    "end": "2738960"
  },
  {
    "text": "of that scale work that the team has done that's super impressive so are you",
    "start": "2738960",
    "end": "2744180"
  },
  {
    "text": "seeing people doing anything particularly novel with control flow like their own sort of custom things",
    "start": "2744180",
    "end": "2750200"
  },
  {
    "text": "with control flow you're saying like sort of but sort of rather than Surrey just use like the default sort of",
    "start": "2750200",
    "end": "2757819"
  },
  {
    "text": "built-ins you know are people doing sort of like kind of clever things that you've seen so far yeah yeah like you",
    "start": "2757819",
    "end": "2767160"
  },
  {
    "text": "know if you out-of-the-box you're probably not gonna write your own PPF program straight off you know are you",
    "start": "2767160",
    "end": "2772410"
  },
  {
    "text": "seeing people writing their own that are doing like launch things yeah yeah listen we don't really expose like the",
    "start": "2772410",
    "end": "2779130"
  },
  {
    "text": "ability to attach your own BPF programs again it kind of goes back to that split between when I mention with VCC VCC",
    "start": "2779130",
    "end": "2785039"
  },
  {
    "text": "alerts kind of craft your own BPF programs most people using psyllium one a benefit want to get the performance",
    "start": "2785039",
    "end": "2790200"
  },
  {
    "text": "benefits and the visibility benefits and all of that but they don't really want to deal with writing you know pseudo C",
    "start": "2790200",
    "end": "2796289"
  },
  {
    "text": "code and dealing with the BPF arrow fire cool okay let's take this to the hallway",
    "start": "2796289",
    "end": "2803810"
  },
  {
    "text": "track I think we need to Thanks [Applause]",
    "start": "2803810",
    "end": "2810789"
  }
]