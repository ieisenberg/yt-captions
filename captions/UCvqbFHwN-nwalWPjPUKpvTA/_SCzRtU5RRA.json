[
  {
    "text": "thank you welcome come on in there's a lot more room down on the far end of uh",
    "start": "2399",
    "end": "7620"
  },
  {
    "text": "this big wide space uh so come spread out make yourself at home uh we're just",
    "start": "7620",
    "end": "13620"
  },
  {
    "text": "thrilled to be here I'm Michael this is my colleague Austin uh we work on the operator framework and",
    "start": "13620",
    "end": "19619"
  },
  {
    "text": "now and in the past in various capacities we're here to share some lessons that we've learned with you",
    "start": "19619",
    "end": "24660"
  },
  {
    "text": "about operator design we're going to tag team here a little bit I'm going to dive in and I think",
    "start": "24660",
    "end": "30660"
  },
  {
    "text": "Austin's going to be back in a few minutes let's get right to it",
    "start": "30660",
    "end": "36920"
  },
  {
    "text": "getting started with operators in operator development is pretty easy these days these days we've got the",
    "start": "37140",
    "end": "42180"
  },
  {
    "text": "operator SDK there's other tooling out there there's Cube Builder",
    "start": "42180",
    "end": "47579"
  },
  {
    "text": "a variety of languages are supported now that you can use for developing some kind of operator and you can get",
    "start": "47579",
    "end": "53760"
  },
  {
    "text": "something up and going pretty quick that does installation on installation maybe a little bit of",
    "start": "53760",
    "end": "60120"
  },
  {
    "text": "reconfiguration and be pretty satisfied with that but we want you to have more",
    "start": "60120",
    "end": "65700"
  },
  {
    "text": "advanced more useful operators that you can really do things with that really make day two operations successful",
    "start": "65700",
    "end": "74340"
  },
  {
    "text": "in day two as we've learned is full of messy challenges these are just you know the first 20 or so that came to mind uh",
    "start": "74340",
    "end": "82439"
  },
  {
    "text": "that you can face when you're orchestrating operational concerns with your operator really solving operational",
    "start": "82439",
    "end": "89040"
  },
  {
    "text": "problems what kind of things SRE teams worry about",
    "start": "89040",
    "end": "93740"
  },
  {
    "text": "so we have a lot of experience managing stateful infrastructure and that comes with a lot of those day two challenges",
    "start": "94920",
    "end": "101460"
  },
  {
    "text": "um you know things like uh you know bare metal server provisioning and these kinds of things we've helped make",
    "start": "101460",
    "end": "107340"
  },
  {
    "text": "operators for cluster installation cluster upgrade a lot of infrastructure",
    "start": "107340",
    "end": "113220"
  },
  {
    "text": "related stuff that can take time it can be error prone it can be very",
    "start": "113220",
    "end": "118640"
  },
  {
    "text": "configuration sensitive uh when you have a cloud API of course",
    "start": "118640",
    "end": "123960"
  },
  {
    "text": "you know what you're going to get in advance for example when you're deploying a cluster when you're doing that in a data center",
    "start": "123960",
    "end": "130440"
  },
  {
    "text": "there's a lot more opportunity for for variation of environment right so we've",
    "start": "130440",
    "end": "136080"
  },
  {
    "text": "we've done a lot of that and uh made a lot of these kind of operators in that space and yes we've even made an",
    "start": "136080",
    "end": "142620"
  },
  {
    "text": "operator for installing more operators if only it was so easy as as this",
    "start": "142620",
    "end": "149819"
  },
  {
    "text": "uh this is my Fogo I hope you'll be okay with some of that along the way uh if we could reconcile and just say",
    "start": "149819",
    "end": "157260"
  },
  {
    "text": "what's the current state what's the desired state do a little bit of work to move the one a little closer to the",
    "start": "157260",
    "end": "162360"
  },
  {
    "text": "other and then set some status and we're out of there success that would be nice right and that is largely what we want",
    "start": "162360",
    "end": "168959"
  },
  {
    "text": "to do in our operators but the implementation of that can get a little more complex so let's",
    "start": "168959",
    "end": "175200"
  },
  {
    "text": "start we've got five sections for you and this is number one we're going to start with some API anti-patterns",
    "start": "175200",
    "end": "181080"
  },
  {
    "text": "lessons we've learned about API design here's a pod set API shout out to",
    "start": "181080",
    "end": "186840"
  },
  {
    "text": "anybody who implemented a pod set operator yesterday in our Workshop but here I've added an annotation",
    "start": "186840",
    "end": "194000"
  },
  {
    "text": "called enable hot new feature true I've seen this in the wild uh I've I've done",
    "start": "194000",
    "end": "200099"
  },
  {
    "text": "my best to talk some people out of this on occasion it's very tempting to do this this kind of thing where you take a",
    "start": "200099",
    "end": "207000"
  },
  {
    "text": "bit of information that really ought to be in the spec of a resource but you put it in in an annotation as more or less",
    "start": "207000",
    "end": "213599"
  },
  {
    "text": "what I like to call a no consequences API why would you do this uh well sometimes",
    "start": "213599",
    "end": "219840"
  },
  {
    "text": "you need a temporary Behavior Uh it's a workaround for something it's not going to be here for long let's just put it in",
    "start": "219840",
    "end": "226860"
  },
  {
    "text": "an annotation you know we know what the reality is of a lot of temporary solutions",
    "start": "226860",
    "end": "231959"
  },
  {
    "text": "uh sometimes there's a deadline pressure we've got to get this out quick we need to enable this new thing maybe it's a",
    "start": "231959",
    "end": "238019"
  },
  {
    "text": "feature gate whatever it is um don't have time to go through a full API review right now or dealing with a",
    "start": "238019",
    "end": "244860"
  },
  {
    "text": "crd upgrade is not really in the cards right now let's just put an annotation on this resource we can get the feature",
    "start": "244860",
    "end": "250019"
  },
  {
    "text": "out there and uh and we'll we'll deal with the rest of it later uh or sometimes a hidden feature you can",
    "start": "250019",
    "end": "256620"
  },
  {
    "text": "actually use this as something of a feature gate you don't want to advertise it in your in your resource but you",
    "start": "256620",
    "end": "262800"
  },
  {
    "text": "still want it to be available so what's what's the problem what's the downside of this well you don't get API version you're not plugged into the versioning",
    "start": "262800",
    "end": "269699"
  },
  {
    "text": "scheme of your crd anymore there's no status to reflect feedback to the API",
    "start": "269699",
    "end": "274919"
  },
  {
    "text": "user of whatever this is unless of course you put another annotation on your resource to give a little status I",
    "start": "274919",
    "end": "282479"
  },
  {
    "text": "have seen that don't recommend that there's no validation uh you know we",
    "start": "282479",
    "end": "288479"
  },
  {
    "text": "have access to like amazing validation now right out of the box enforced by the kubernetes API server uh it's real easy",
    "start": "288479",
    "end": "294720"
  },
  {
    "text": "to use but when you're using an annotation of course we don't have access to that kind of validation quite",
    "start": "294720",
    "end": "300660"
  },
  {
    "text": "so easily uh it's harder to document this annotations are not somewhere that",
    "start": "300660",
    "end": "306600"
  },
  {
    "text": "people normally look when they're trying to figure out how can they accomplish a behavior with your API and then of",
    "start": "306600",
    "end": "312660"
  },
  {
    "text": "course for a user who's actually using that API let's say you're on a cluster Cube",
    "start": "312660",
    "end": "318419"
  },
  {
    "text": "cuddle get pod set you're not necessarily going to look at The annotation list for things that are",
    "start": "318419",
    "end": "324419"
  },
  {
    "text": "going to influence the behavior of that API so it's just easy to not know this",
    "start": "324419",
    "end": "329699"
  },
  {
    "text": "so what should you do instead obviously you've got to make your own",
    "start": "329699",
    "end": "334740"
  },
  {
    "text": "judgment calls about when the deadline is really so tight that you just gotta gotta swallow hard and deal with it but",
    "start": "334740",
    "end": "340500"
  },
  {
    "text": "you're really going to be happier in the long run that you added a field to your spec that you just took the time to get",
    "start": "340500",
    "end": "347100"
  },
  {
    "text": "it right go through whatever you need to do and just put it there and document it",
    "start": "347100",
    "end": "352560"
  },
  {
    "text": "um feature gates for pre-release features can sometimes be a nice thing we've done",
    "start": "352560",
    "end": "359220"
  },
  {
    "text": "quite a bit of that in the openshift world um a mix of documentation on the field",
    "start": "359220",
    "end": "364860"
  },
  {
    "text": "itself combined with a feature flag that's usually a configuration property of the operator itself not the API the",
    "start": "364860",
    "end": "373320"
  },
  {
    "text": "operator implements but the operator itself that's a better place to put that kind of a feature gate that can then",
    "start": "373320",
    "end": "378660"
  },
  {
    "text": "make a field either be useful or not so that that's a good way to handle that",
    "start": "378660",
    "end": "385380"
  },
  {
    "text": "um great now here's another anti-pattern outgrowing booleans this one uh borrowed",
    "start": "385380",
    "end": "390960"
  },
  {
    "text": "the description right from the kubernetes API conventions which is a fantastic document if you have anything",
    "start": "390960",
    "end": "396300"
  },
  {
    "text": "to do with designing kubernetes apis either as part of kubernetes or for your",
    "start": "396300",
    "end": "401460"
  },
  {
    "text": "own uses and operators highly recommend set aside some time maybe for taking a",
    "start": "401460",
    "end": "406620"
  },
  {
    "text": "flight home from this event read through this API conventions document it has a",
    "start": "406620",
    "end": "412560"
  },
  {
    "text": "lot of insight and uh and guidelines that are you know written in the ink of",
    "start": "412560",
    "end": "418680"
  },
  {
    "text": "people who have seen the problems they've been there they've lived through the pain and they're sharing them here and this is a favorite",
    "start": "418680",
    "end": "424560"
  },
  {
    "text": "outgrowing a Boolean uh so here's let's imagine we we have a new DNS provider",
    "start": "424560",
    "end": "431280"
  },
  {
    "text": "new DNS service called Fancy DNS and we're running it in a clusters we made an operator for it uh it's very simple",
    "start": "431280",
    "end": "437880"
  },
  {
    "text": "now you may know that DNS queries tend to uh happen over UDP but also can",
    "start": "437880",
    "end": "443940"
  },
  {
    "text": "happen over TCP so some product manager comes along and says you know what we've got some customers they want to just disable TCP",
    "start": "443940",
    "end": "450960"
  },
  {
    "text": "can we just add that feature just turn that off sure it sounds sensible so we had a field called enable TCP and we can set",
    "start": "450960",
    "end": "457680"
  },
  {
    "text": "it to false and now that's disabled easy done well a quarter goes by and PM comes back",
    "start": "457680",
    "end": "463680"
  },
  {
    "text": "says you know got a growing number of customers they've got some Oddball use case they actually don't want to use UDP at all",
    "start": "463680",
    "end": "469560"
  },
  {
    "text": "they want to do just TCP for for their DNS queries kind of weird but you know it happens",
    "start": "469560",
    "end": "474780"
  },
  {
    "text": "can we make that also configurable can we be able to turn off UDP like keep TCP",
    "start": "474780",
    "end": "480660"
  },
  {
    "text": "okay we had another field uh let's be able to enable UDP optionally",
    "start": "480660",
    "end": "488220"
  },
  {
    "text": "so now we've got a growing list of booleans and we've got a circumstance where one point in our four square Matrix is",
    "start": "488220",
    "end": "496440"
  },
  {
    "text": "not really valid we don't want both of these to be false right so now we've got a validation concern that's gotten more",
    "start": "496440",
    "end": "502080"
  },
  {
    "text": "complicated everybody's life is getting more complicated all of a sudden what should we have done",
    "start": "502080",
    "end": "508199"
  },
  {
    "text": "something more like this reframe the question reframe the API",
    "start": "508199",
    "end": "513659"
  },
  {
    "text": "itself think about it differently not as a Boolean on or off but what listen protocol do you want is it UDP is it TCP",
    "start": "513659",
    "end": "520740"
  },
  {
    "text": "is it both mean instead of both I should have said all in case the third protocol shows up someday but in any case that I",
    "start": "520740",
    "end": "529500"
  },
  {
    "text": "find is the secret to having a better API field than using a Boolean as the type reframe how you're",
    "start": "529500",
    "end": "537120"
  },
  {
    "text": "thinking about that kind of setting look at it through a different lens in that way",
    "start": "537120",
    "end": "542820"
  },
  {
    "text": "and then one more kubernetes API is a data store uh it's just not a great data store now these are rough numbers more",
    "start": "542820",
    "end": "548940"
  },
  {
    "text": "like an order of magnitude but SCD is designed for a pretty small number of pretty small values",
    "start": "548940",
    "end": "556140"
  },
  {
    "text": "um you know we've seen things like device inventories being tracked I've done this device inventories of various",
    "start": "556140",
    "end": "562140"
  },
  {
    "text": "kinds being tracked we we do kubernetes Native infrastructures we're very deep in the openshift world at least philosophically",
    "start": "562140",
    "end": "568500"
  },
  {
    "text": "into managing infrastructure using kubernetes native apis so we run up against these scale concerns",
    "start": "568500",
    "end": "573720"
  },
  {
    "text": "periodically and when you think about something a problem space like advice inventory a",
    "start": "573720",
    "end": "578820"
  },
  {
    "text": "good metric would be like hundreds of devices that are related to this cluster like the nodes in that cluster and the",
    "start": "578820",
    "end": "585779"
  },
  {
    "text": "machines that are part of the cluster API these kinds of things bad would be like millions of edge devices you",
    "start": "585779",
    "end": "592080"
  },
  {
    "text": "probably should not be trying to track that uh as crds in your kubernetes cluster",
    "start": "592080",
    "end": "597740"
  },
  {
    "text": "another potential gotcha is config maps and secrets for arbitrary input very",
    "start": "597740",
    "end": "602940"
  },
  {
    "text": "tempting to say okay we need to allow somebody to provide a little bit of their own yaml manifest as part of",
    "start": "602940",
    "end": "609000"
  },
  {
    "text": "installing this other thing uh let's just let them provide that as a",
    "start": "609000",
    "end": "614040"
  },
  {
    "text": "config map it makes a nice easy story and it'll work for a while until it doesn't because there's a size limit to",
    "start": "614040",
    "end": "619560"
  },
  {
    "text": "how much data you can stuff into a config map um and uh and the secret is the same",
    "start": "619560",
    "end": "626160"
  },
  {
    "text": "and uh TLS certificates can be another one uh that occasionally in some education can get you it's easy to think",
    "start": "626160",
    "end": "632399"
  },
  {
    "text": "oh certificates aren't that large well until they are you know you get somebody with a long chain of trust trying to put",
    "start": "632399",
    "end": "638820"
  },
  {
    "text": "the whole chain into one Secret and things can get rough so don't use",
    "start": "638820",
    "end": "644040"
  },
  {
    "text": "the kubernetes API as a data store is a best practice what she what should you do instead",
    "start": "644040",
    "end": "649079"
  },
  {
    "text": "use a different data store find a database I love kubernetes native apis as much as about anybody you'll find",
    "start": "649079",
    "end": "655579"
  },
  {
    "text": "it's great when it's the right tool for the job but when it's not the right tool for the job go find another tool and",
    "start": "655579",
    "end": "661560"
  },
  {
    "text": "that's uh we'll all behavior for it um kcp is an up-and-coming emerging uh",
    "start": "661560",
    "end": "668700"
  },
  {
    "text": "project that I think has a lot of promise for this kind of scale for managing with a kubernetes native API a",
    "start": "668700",
    "end": "675120"
  },
  {
    "text": "very large scale of of data and resources that is the kind of project you might be interested in using Sunday",
    "start": "675120",
    "end": "681620"
  },
  {
    "text": "uh for something like millions of edge devices but stay tuned highly recommend",
    "start": "681620",
    "end": "687480"
  },
  {
    "text": "I know there's probably a lot of kcp talks this week that's a very cool project check that out that uh that",
    "start": "687480",
    "end": "693839"
  },
  {
    "text": "stuff out if you really need to use config maps to take in arbitrary data use an array it's not beautiful",
    "start": "693839",
    "end": "700339"
  },
  {
    "text": "but it works okay number two slow and imperative",
    "start": "700339",
    "end": "706920"
  },
  {
    "text": "kubernetes native apis what are examples of this so cluster installation and upgrade this is the",
    "start": "706920",
    "end": "714720"
  },
  {
    "text": "kind of thing that could take 20 minutes could take an hour might take a couple hours",
    "start": "714720",
    "end": "719880"
  },
  {
    "text": "um upgrade depending on what kind of constraints you have how big is your cluster how long does it take to drain a",
    "start": "719880",
    "end": "726300"
  },
  {
    "text": "node then upgrade that node in place for example if that's the upgrade pattern you follow and uh and get workloads back",
    "start": "726300",
    "end": "732839"
  },
  {
    "text": "on and then go on to the next node you know we've heard stories of people uh take days a week or more depending on",
    "start": "732839",
    "end": "741480"
  },
  {
    "text": "the various constraints to get the requester upgrade especially with very very large clusters so these kind of",
    "start": "741480",
    "end": "746519"
  },
  {
    "text": "things especially if you put a kubernetes native API in front of this it's long comparative errors Could",
    "start": "746519",
    "end": "751800"
  },
  {
    "text": "Happen a long time after somebody declares what their desired State provisioning bare metal likewise it",
    "start": "751800",
    "end": "759000"
  },
  {
    "text": "might take 10 or 15 minutes for a server that you're trying to provision with the kubernetes native API just a boot and",
    "start": "759000",
    "end": "766139"
  },
  {
    "text": "then you write some stuff to disk and then you reboot it okay now it's another 10 or 15 minutes to see what happened",
    "start": "766139",
    "end": "771360"
  },
  {
    "text": "um backing up data of course backups take a long time so these are the kind of infrastructure concerns that are slow",
    "start": "771360",
    "end": "778500"
  },
  {
    "text": "they're pretty imperative and uh are ripe for some kind of something to not",
    "start": "778500",
    "end": "784019"
  },
  {
    "text": "go according to plan but your goal as an operator author",
    "start": "784019",
    "end": "789660"
  },
  {
    "text": "is really to take an imperative world and make it exposed and available through a declarative API so my my best",
    "start": "789660",
    "end": "796800"
  },
  {
    "text": "advice to you on this is Embrace using imperative patterns in your operator it's easy for us to get trapped into a",
    "start": "796800",
    "end": "803459"
  },
  {
    "text": "mindset in a declarative API mindset and feel we have to be declarative the whole",
    "start": "803459",
    "end": "809100"
  },
  {
    "text": "Edge and level based conundrum but when you're writing your operator code just remember your job is to be that bridge",
    "start": "809100",
    "end": "815760"
  },
  {
    "text": "be as imperative as you need to be in your operator code but expose that",
    "start": "815760",
    "end": "821399"
  },
  {
    "text": "through a really nice declarative API uh so thing tips that you can use along the",
    "start": "821399",
    "end": "827579"
  },
  {
    "text": "way when you're doing this Implement a state machine when you need one go for it on the right here uh this is from the",
    "start": "827579",
    "end": "833760"
  },
  {
    "text": "metal cubed project this is don't squint too hard I didn't really mean for you to actually be reading this this is just",
    "start": "833760",
    "end": "839579"
  },
  {
    "text": "like for you know for effect um this is the actual State machine used by that project this is a project that",
    "start": "839579",
    "end": "846839"
  },
  {
    "text": "interacts with bmc's baseboard management controllers on real server Hardware to control it from kubernetes",
    "start": "846839",
    "end": "852480"
  },
  {
    "text": "apis turn saw you know turn Hardware on and off provision it uh these kinds of",
    "start": "852480",
    "end": "858120"
  },
  {
    "text": "things and they absolutely they wrote it they have an operator the bare metal operator",
    "start": "858120",
    "end": "863220"
  },
  {
    "text": "and they use a state machine and it works well uh many resources can have an end State",
    "start": "863220",
    "end": "868980"
  },
  {
    "text": "you know a job is a good example that's one that many of us are familiar with that's built in it starts it does some work it ends it",
    "start": "868980",
    "end": "876660"
  },
  {
    "text": "has a finite State you can Embrace that and you can create your own resource in that same kind of pattern that is",
    "start": "876660",
    "end": "882720"
  },
  {
    "text": "designed to have a final State and that's okay um returning from your reconcile",
    "start": "882720",
    "end": "888540"
  },
  {
    "text": "function promptly this is a best practice in general but try not to like start your reconcile function kick off",
    "start": "888540",
    "end": "895320"
  },
  {
    "text": "and install wait wait wait wait wait wait wait an hour later it finishes and then you",
    "start": "895320",
    "end": "900540"
  },
  {
    "text": "return from your reconcile of course you don't want to do that you're going to want to monitor some other way return from your reconcile function in your",
    "start": "900540",
    "end": "907440"
  },
  {
    "text": "controller we'll talk in a minute about some other ways to monitor that but you'll be happier in the long run",
    "start": "907440",
    "end": "914220"
  },
  {
    "text": "the faster you can return from that reconcile uh and then just avoid implementing long workflows in in your",
    "start": "914220",
    "end": "919980"
  },
  {
    "text": "operator in general you want the as much as you can the implementation of those things to be",
    "start": "919980",
    "end": "926220"
  },
  {
    "text": "somewhere else like a BMC that's rebooting a server that that behavior is implemented in The BMC",
    "start": "926220",
    "end": "933300"
  },
  {
    "text": "you're controlling it you're telling it reboot and then you wait and you can pull or you know through some mechanism",
    "start": "933300",
    "end": "939779"
  },
  {
    "text": "observe what that BMC is doing but you don't really want to implement a",
    "start": "939779",
    "end": "944880"
  },
  {
    "text": "long like have like install openshift install Logic for example like in your reconcile function that would be a bad",
    "start": "944880",
    "end": "951060"
  },
  {
    "text": "point um so what can you do you could spawn a job and actually use a job to implement",
    "start": "951060",
    "end": "956339"
  },
  {
    "text": "some of that logic or a Cron job would be very similar and your controller can create those jobs and just watch them uh",
    "start": "956339",
    "end": "963300"
  },
  {
    "text": "until they can they complete it's a very nice experience because it's a kubernetes API itself it has it",
    "start": "963300",
    "end": "969060"
  },
  {
    "text": "generates events you can watch those events reconcile whenever that job emits an event and uh and therefore be",
    "start": "969060",
    "end": "975360"
  },
  {
    "text": "immediately plugged in when uh when that operation that you're interested in finishes another option",
    "start": "975360",
    "end": "982139"
  },
  {
    "text": "you could use some kind of serverless or function as a service or maybe some config management",
    "start": "982139",
    "end": "987420"
  },
  {
    "text": "um like ansible awx is an example of that some external system uh that's not",
    "start": "987420",
    "end": "993300"
  },
  {
    "text": "part of your operator that can designed for these start to end",
    "start": "993300",
    "end": "998639"
  },
  {
    "text": "workflows that you can uh that you can trigger wait on observe the state of and",
    "start": "998639",
    "end": "1003800"
  },
  {
    "text": "uh and let them complete but this is an important Point don't access the kubernetes API from those",
    "start": "1003800",
    "end": "1010759"
  },
  {
    "text": "external processes if you can avoid it because I think as Austin's going to talk about in just a minute",
    "start": "1010759",
    "end": "1016880"
  },
  {
    "text": "using a caching client is hugely valuable we want to avoid querying the kubernetes API as much as we can",
    "start": "1016880",
    "end": "1024079"
  },
  {
    "text": "um without some kind of caching layer in between controller runtime Cube Builder operators decay all these",
    "start": "1024079",
    "end": "1030319"
  },
  {
    "text": "use a caching client that that we want to use as much as possible and then you can use a channel source so",
    "start": "1030319",
    "end": "1036918"
  },
  {
    "text": "if you're familiar with controller runtime at all hopefully many of you are if you've ever done any go-based operator development",
    "start": "1036919",
    "end": "1043040"
  },
  {
    "text": "in particular you can use a channel source and basically what happens here is you can",
    "start": "1043040",
    "end": "1048919"
  },
  {
    "text": "stick in this event structure into a go Channel anytime you see fit and that",
    "start": "1048919",
    "end": "1054860"
  },
  {
    "text": "will now kick off a reconcile in your operator of a particular resource",
    "start": "1054860",
    "end": "1060260"
  },
  {
    "text": "so you can either maybe you're using a go routine to pull some external system and whenever you get that system gets to",
    "start": "1060260",
    "end": "1066260"
  },
  {
    "text": "a certain State now you stick that event into this go Channel or maybe you've got",
    "start": "1066260",
    "end": "1071539"
  },
  {
    "text": "an HTTP callback that you're listening for and that sticks out of engine that channel but this is a best practice and",
    "start": "1071539",
    "end": "1077419"
  },
  {
    "text": "a really nice pattern for bridging that Gap and I'm going to hand it off to Austin",
    "start": "1077419",
    "end": "1083720"
  },
  {
    "text": "for our third topic",
    "start": "1083720",
    "end": "1086980"
  },
  {
    "text": "Okay so we've talked about good patterns for developing your operator so that you don't get into",
    "start": "1089240",
    "end": "1094460"
  },
  {
    "text": "trouble but now let's talk about how to be a good citizen on the cluster we've got to",
    "start": "1094460",
    "end": "1099860"
  },
  {
    "text": "minimize the API load because all those operators have to live there together so step one you've got to collect",
    "start": "1099860",
    "end": "1106580"
  },
  {
    "text": "metrics and it's a good idea to start collecting metrics early in the development cycle it's so easy to say oh",
    "start": "1106580",
    "end": "1113059"
  },
  {
    "text": "we'll get it fully functioning and then we'll start measuring it but it's much better to know how your performance is",
    "start": "1113059",
    "end": "1120200"
  },
  {
    "text": "being impacted as you're adding features um controller runtime which is",
    "start": "1120200",
    "end": "1126320"
  },
  {
    "text": "underneath uh the operator SDK will expose Prometheus metrics to you out of",
    "start": "1126320",
    "end": "1133640"
  },
  {
    "text": "the box so if you have Prometheus installed on your cluster there's no reason not to be consuming those metrics",
    "start": "1133640",
    "end": "1141140"
  },
  {
    "text": "you can com you can create some custom metrics uh completely on your own to",
    "start": "1141140",
    "end": "1147559"
  },
  {
    "text": "measure whatever you'd like it's very easy I've done it myself",
    "start": "1147559",
    "end": "1152740"
  },
  {
    "text": "as you're Azure operator is running on the cluster keep an eye on how it's changing don't",
    "start": "1153559",
    "end": "1160700"
  },
  {
    "text": "just deploy it and then assume that it's going to work forever because operators are dependent on the cluster State and",
    "start": "1160700",
    "end": "1167539"
  },
  {
    "text": "the performance can change as those clusters change and pay special attention to endpoint",
    "start": "1167539",
    "end": "1174320"
  },
  {
    "text": "disruption and if it starts to get past a couple seconds you know that you need to do something",
    "start": "1174320",
    "end": "1179419"
  },
  {
    "text": "so how can an operator be a bad citizen well the first thing is a watch",
    "start": "1179419",
    "end": "1186679"
  },
  {
    "text": "watches are much more expensive than you might realize and when you have lots of operators on there",
    "start": "1186679",
    "end": "1192679"
  },
  {
    "text": "this can scale up very badly so just remember watches are expensive",
    "start": "1192679",
    "end": "1199419"
  },
  {
    "text": "Cube API server it can limit the number of watches allowed simultaneously on the",
    "start": "1199419",
    "end": "1205940"
  },
  {
    "text": "cluster I know that openshift does this and",
    "start": "1205940",
    "end": "1212120"
  },
  {
    "text": "even if that limit isn't reached those resource utilization can continue to",
    "start": "1212120",
    "end": "1218059"
  },
  {
    "text": "scale in a way that is not desirable",
    "start": "1218059",
    "end": "1223399"
  },
  {
    "text": "um so how do you avoid this well if you've got some very tightly coupled operators maybe they don't need to be",
    "start": "1224480",
    "end": "1230960"
  },
  {
    "text": "two operators if you've got two control loops that are watching the same objects",
    "start": "1230960",
    "end": "1236140"
  },
  {
    "text": "consider putting them into the same operator so that they can share a cache that cash will emit a watch to the API",
    "start": "1236140",
    "end": "1244940"
  },
  {
    "text": "server and any of the extra performance is going to be between your operator and that cache",
    "start": "1244940",
    "end": "1253899"
  },
  {
    "text": "second we want to avoid the low sync periods so if you're not familiar async",
    "start": "1254179",
    "end": "1259880"
  },
  {
    "text": "period is the maximum amount of time that your operator will go without syncing again",
    "start": "1259880",
    "end": "1265840"
  },
  {
    "text": "most of the time we think of an operator as reconciling based on events and",
    "start": "1265840",
    "end": "1272120"
  },
  {
    "text": "that's the way it should be you don't want your operator running every five minutes because it is expensive",
    "start": "1272120",
    "end": "1279140"
  },
  {
    "text": "it defaults to 10 hours for a reason um and it's tempting to do because well",
    "start": "1279140",
    "end": "1284900"
  },
  {
    "text": "what if it misses an event it doesn't miss events it's very unlikely and even",
    "start": "1284900",
    "end": "1290179"
  },
  {
    "text": "if it does the next event it'll get caught up",
    "start": "1290179",
    "end": "1295059"
  },
  {
    "text": "um if you do have some bugs a low sink period can cover them up and wouldn't it",
    "start": "1295520",
    "end": "1300620"
  },
  {
    "text": "be better to just know that you've got a bug and if absolutely necessary if you need",
    "start": "1300620",
    "end": "1306020"
  },
  {
    "text": "to be triggering reconciles more frequently then events are coming in consider using re-queue after this is",
    "start": "1306020",
    "end": "1314000"
  },
  {
    "text": "something that happens as your operator is exiting you can say hey I'm not sure",
    "start": "1314000",
    "end": "1319640"
  },
  {
    "text": "about the state can you recue like right now or wait 10 minutes try again",
    "start": "1319640",
    "end": "1326200"
  },
  {
    "text": "so we know that we can make our reconciliations cost less but how can we",
    "start": "1329299",
    "end": "1334820"
  },
  {
    "text": "do fewer reconciliations well you do not need to reconcile every single time any",
    "start": "1334820",
    "end": "1341240"
  },
  {
    "text": "event from anything that you're watching comes on in you can filter those events with predicates controller runtime",
    "start": "1341240",
    "end": "1348080"
  },
  {
    "text": "provides a handful of very good predicates just right out of the box that you can use just like I've done",
    "start": "1348080",
    "end": "1354559"
  },
  {
    "text": "here with the with event filter it's also very simple to create your own",
    "start": "1354559",
    "end": "1360740"
  },
  {
    "text": "custom filled predicates here and this will stop you from reconciling",
    "start": "1360740",
    "end": "1367940"
  },
  {
    "text": "when it's not necessary so inside of your reconcile Loop when",
    "start": "1367940",
    "end": "1374179"
  },
  {
    "text": "you're hitting the kubernetes API know when you can get away with a patch a patch uses many fewer resources than",
    "start": "1374179",
    "end": "1382100"
  },
  {
    "text": "an apply and it's going to go faster but be very careful because if there are",
    "start": "1382100",
    "end": "1388700"
  },
  {
    "text": "multiple actors changing these resources and apply is",
    "start": "1388700",
    "end": "1393799"
  },
  {
    "text": "safer particularly a server side apply which is the new way all of us need to",
    "start": "1393799",
    "end": "1399200"
  },
  {
    "text": "know about that so if you're going to start playing with this please be sure to check out uh",
    "start": "1399200",
    "end": "1406159"
  },
  {
    "text": "server side apply as well as the various merge strategies",
    "start": "1406159",
    "end": "1412179"
  },
  {
    "text": "so at the end of your reconcile when you go to update the status this is a just a nice easy way to stop",
    "start": "1416720",
    "end": "1425720"
  },
  {
    "text": "using so many resources if the status hasn't changed don't update it",
    "start": "1425720",
    "end": "1430940"
  },
  {
    "text": "as simple as that all right so now we're going to talk",
    "start": "1430940",
    "end": "1437419"
  },
  {
    "text": "about the client cash which is designed to make performance much better but",
    "start": "1437419",
    "end": "1443059"
  },
  {
    "text": "sometimes it can backfire so let's talk about a specific case",
    "start": "1443059",
    "end": "1448400"
  },
  {
    "text": "this is a classic thing we have people coming into the chat all the time saying oh I've got this operator it's become",
    "start": "1448400",
    "end": "1456980"
  },
  {
    "text": "totally unwieldy what happened well here's how you end up in this scenario let's say that you've got an operator",
    "start": "1456980",
    "end": "1463640"
  },
  {
    "text": "that is watching a secret let's say that it has a database password or something so of course if",
    "start": "1463640",
    "end": "1470840"
  },
  {
    "text": "that's secret changes if the database password changes you are going to have to restart some things so you do need to",
    "start": "1470840",
    "end": "1476240"
  },
  {
    "text": "watch for that secret but out of the box and this may not be noticed on a small development cluster",
    "start": "1476240",
    "end": "1483260"
  },
  {
    "text": "that cache is now watching all secrets and so if you now take that operator and",
    "start": "1483260",
    "end": "1489919"
  },
  {
    "text": "put it on a large cluster with 10 000 Secrets every single time that any of",
    "start": "1489919",
    "end": "1495500"
  },
  {
    "text": "those Secrets change your cons you are consuming those events and it is",
    "start": "1495500",
    "end": "1500900"
  },
  {
    "text": "expensive so how do we avoid this uh using the controller runtime",
    "start": "1500900",
    "end": "1508520"
  },
  {
    "text": "we can now add selectors by object when we are establishing the cache",
    "start": "1508520",
    "end": "1514640"
  },
  {
    "text": "and what this does is it filters out those events from ever making it into the cache now this I've got it big and",
    "start": "1514640",
    "end": "1522080"
  },
  {
    "text": "red here so that you will not accidentally do this it's a big gotcha those events don't exist to your",
    "start": "1522080",
    "end": "1529100"
  },
  {
    "text": "operator so in this case we're only watching my",
    "start": "1529100",
    "end": "1534500"
  },
  {
    "text": "secret not yours so your operator cannot see those other Secrets which you might even consider it",
    "start": "1534500",
    "end": "1541700"
  },
  {
    "text": "a feature and back to Michael for multi-cluster",
    "start": "1541700",
    "end": "1548419"
  },
  {
    "text": "and the future well this is one of the more interesting",
    "start": "1548419",
    "end": "1554179"
  },
  {
    "text": "areas I think of operator design right now and we see the world changing to be far",
    "start": "1554179",
    "end": "1559880"
  },
  {
    "text": "more multi-cluster than it's been in the past more clusters that are smaller",
    "start": "1559880",
    "end": "1565760"
  },
  {
    "text": "clusters that have more tightly scoped purposes and this this cluster does this some",
    "start": "1565760",
    "end": "1572120"
  },
  {
    "text": "other cluster does that as opposed to having one big broad cluster that does it all clusters that come and go cluster",
    "start": "1572120",
    "end": "1577940"
  },
  {
    "text": "is a service these are all things that that are growing uh in popularity uh quite rapidly",
    "start": "1577940",
    "end": "1583640"
  },
  {
    "text": "but the pace of being able to access like have good tooling to access many",
    "start": "1583640",
    "end": "1588919"
  },
  {
    "text": "clusters from one operator um is catching up and and there's there's work to be done so this topic is",
    "start": "1588919",
    "end": "1596120"
  },
  {
    "text": "as much sharing with you what the state of the world is and what you can do now as it",
    "start": "1596120",
    "end": "1601820"
  },
  {
    "text": "is a an invitation to help an invitation",
    "start": "1601820",
    "end": "1606860"
  },
  {
    "text": "to get involved uh even if it's just sharing use cases or come help build the",
    "start": "1606860",
    "end": "1614240"
  },
  {
    "text": "next generation of multi-cluster clients uh certainly in control of runtime at least",
    "start": "1614240",
    "end": "1620240"
  },
  {
    "text": "so here's some use cases um we do again kubernetes native infrastructure management so we do it",
    "start": "1620240",
    "end": "1626900"
  },
  {
    "text": "with an openshift policy and governance through kubernetes apis you've got a hub",
    "start": "1626900",
    "end": "1632779"
  },
  {
    "text": "cluster you know many many spoke clusters and you can enforce policies about resources",
    "start": "1632779",
    "end": "1639320"
  },
  {
    "text": "and different things that exist on those spoke clusters right well that that requires you to interact",
    "start": "1639320",
    "end": "1644779"
  },
  {
    "text": "with those clusters um another use case is just having a central source of Truth",
    "start": "1644779",
    "end": "1650419"
  },
  {
    "text": "which is a related topic and propagating that out to clusters as those clusters come and go",
    "start": "1650419",
    "end": "1656539"
  },
  {
    "text": "maybe you've got in a some secure like robust data center type facility",
    "start": "1656539",
    "end": "1661880"
  },
  {
    "text": "a larger management cluster and then you've got a bunch of edge clusters that are subject to change maybe they're",
    "start": "1661880",
    "end": "1667580"
  },
  {
    "text": "subject to to disasters or fire or theft or who knows what or just failure and",
    "start": "1667580",
    "end": "1673460"
  },
  {
    "text": "you're just going to replace them so propagating out Central sources of Truth um kcp in fact is again coming up and uh",
    "start": "1673460",
    "end": "1681559"
  },
  {
    "text": "and we're very relevant in that domain uh management",
    "start": "1681559",
    "end": "1687200"
  },
  {
    "text": "um scaling upgrading uh remote clusters that's a that's definitely a use case",
    "start": "1687200",
    "end": "1693159"
  },
  {
    "text": "and uh having some kind of central controller One controller that itself is",
    "start": "1693159",
    "end": "1699440"
  },
  {
    "text": "not just interacting and managing resources on the cluster that it's running on but maybe it's One controller",
    "start": "1699440",
    "end": "1705679"
  },
  {
    "text": "managing resources and and operands across many clusters let's say you have",
    "start": "1705679",
    "end": "1711380"
  },
  {
    "text": "10 12 clusters running all in the same facility do you need to run the Pod set Operator",
    "start": "1711380",
    "end": "1719179"
  },
  {
    "text": "just to pick on our own fictional experimental operator do you need to run the Pod set operator on every single",
    "start": "1719179",
    "end": "1725120"
  },
  {
    "text": "cluster or could you just run it on one of them and have that one process be watching and interacting with all of",
    "start": "1725120",
    "end": "1731179"
  },
  {
    "text": "with all of those clusters that would be nice right that's not quite",
    "start": "1731179",
    "end": "1736400"
  },
  {
    "text": "possible yet so here's what we do have this is in",
    "start": "1736400",
    "end": "1741440"
  },
  {
    "text": "control runtime it probably could use some better or more prominent documentation if anybody's up for that",
    "start": "1741440",
    "end": "1747940"
  },
  {
    "text": "but basically what we're looking at here is this new resource uh this new type",
    "start": "1747940",
    "end": "1753860"
  },
  {
    "text": "called cluster so what you can do here what I'm showing here is imagining",
    "start": "1753860",
    "end": "1759799"
  },
  {
    "text": "you're going to watch config maps in some other external cluster and then be",
    "start": "1759799",
    "end": "1766460"
  },
  {
    "text": "able to retrieve the config maps from that external cluster when necessary so",
    "start": "1766460",
    "end": "1772220"
  },
  {
    "text": "in this first function we get a cube config we set up this cluster resource with that Cube config",
    "start": "1772220",
    "end": "1779799"
  },
  {
    "text": "and then in that cluster resource we can get a client uh and that client now of course can be",
    "start": "1779799",
    "end": "1786679"
  },
  {
    "text": "used to access those things but here's an important aspect there's nothing yet in control runtime that",
    "start": "1786679",
    "end": "1792260"
  },
  {
    "text": "really helps us keep track of that reference keep track of either that client or keep track of that cluster",
    "start": "1792260",
    "end": "1798380"
  },
  {
    "text": "resource so you got to keep just store that somewhere yourself so here I've got that first red arrow I just picked an",
    "start": "1798380",
    "end": "1804320"
  },
  {
    "text": "arbitrary key called name you know maybe it's a cluster name might be might be something different that's meaningful to",
    "start": "1804320",
    "end": "1810080"
  },
  {
    "text": "you and your circumstance but the point is you're going to create that cluster resource and then store it",
    "start": "1810080",
    "end": "1815419"
  },
  {
    "text": "somewhere where you can retrieve it later and now you can Implement a watch so that exists you can do a watch just",
    "start": "1815419",
    "end": "1821659"
  },
  {
    "text": "like it shows here you inject the cache as you can see there on the line nine if",
    "start": "1821659",
    "end": "1826700"
  },
  {
    "text": "you all can read that I don't know if you can but you can inject the correct cache and then you're probably going to need a",
    "start": "1826700",
    "end": "1832640"
  },
  {
    "text": "custom Handler that understands how to map that event from a different cluster",
    "start": "1832640",
    "end": "1839299"
  },
  {
    "text": "from a secondary resource a config map on some other cluster to the primary resource of your actual operator uh",
    "start": "1839299",
    "end": "1846860"
  },
  {
    "text": "whatever that might be and then in the second function here uh now it's time to access that config map",
    "start": "1846860",
    "end": "1852260"
  },
  {
    "text": "we want to read it off that external cluster you're going to have to retrieve that client and so here again you're",
    "start": "1852260",
    "end": "1858260"
  },
  {
    "text": "inventing your own mechanism for getting access to that client the right client at the right time so it's workable",
    "start": "1858260",
    "end": "1864980"
  },
  {
    "text": "uh and it's a step in the right direction but it clearly it's not quite a complete story for all the use cases",
    "start": "1864980",
    "end": "1871460"
  },
  {
    "text": "that we see in front of us um so things you might consider for your multi-cluster access there are different",
    "start": "1871460",
    "end": "1878240"
  },
  {
    "text": "patterns based on different needs uh do you really need to watch events do you need to do this list watch pattern",
    "start": "1878240",
    "end": "1884419"
  },
  {
    "text": "or not maybe you're just very occasionally doing a request to some",
    "start": "1884419",
    "end": "1890059"
  },
  {
    "text": "external cluster in which case don't worry so much about a caching client all this stuff you can just stand up a client on demand and just do it maybe",
    "start": "1890059",
    "end": "1897080"
  },
  {
    "text": "that's just okay for your circumstance how many clusters do you really need to interact with is it just a handful is it",
    "start": "1897080",
    "end": "1903380"
  },
  {
    "text": "a thousand is it a million Edge devices running some small cluster",
    "start": "1903380",
    "end": "1908779"
  },
  {
    "text": "um that can really impact uh the style and and the way that you're going to keep a cache the way you're going to keep a client and where that's going to",
    "start": "1908779",
    "end": "1915140"
  },
  {
    "text": "happen how you might Shard that out uh and then will you be adding and subtracting clusters dynamically",
    "start": "1915140",
    "end": "1921980"
  },
  {
    "text": "so for example uh with this cluster resource in",
    "start": "1921980",
    "end": "1927020"
  },
  {
    "text": "controller runtime the the classic example that that is shown there is you're mirroring a resource from like",
    "start": "1927020",
    "end": "1933980"
  },
  {
    "text": "cluster a to Cluster B you know about these in advance and that's the job you're doing this this mirroring back",
    "start": "1933980",
    "end": "1939080"
  },
  {
    "text": "and forth but in these other Multicultural management kind of scenarios you start your operator and",
    "start": "1939080",
    "end": "1945860"
  },
  {
    "text": "then after it's running you're telling it dynamically okay there's a new cluster that I'm introducing I need you",
    "start": "1945860",
    "end": "1951980"
  },
  {
    "text": "to start managing this cluster is has gone away now it's been de-provisioned um so as these come and go that that",
    "start": "1951980",
    "end": "1958460"
  },
  {
    "text": "adds a significant layer of complexity right now at least today watches are a lot easier to add than they are to",
    "start": "1958460",
    "end": "1964940"
  },
  {
    "text": "remove um so that that's a significant consideration now where is this going kcp is doing some excellent client work",
    "start": "1964940",
    "end": "1971779"
  },
  {
    "text": "if you're interested in this we have at least one I thought we had two maybe still around of the people who are",
    "start": "1971779",
    "end": "1978260"
  },
  {
    "text": "actually doing this work uh are up here in the second row you come talk to them but there's a world developing in a fork",
    "start": "1978260",
    "end": "1985039"
  },
  {
    "text": "of controller runtime by the kcp project uh to to move this forward where your",
    "start": "1985039",
    "end": "1991159"
  },
  {
    "text": "reconciled function will get a request that includes now not just a name and a namespace but a cluster identifier as",
    "start": "1991159",
    "end": "1997580"
  },
  {
    "text": "part of that key and then you can create your a context that has that cluster",
    "start": "1997580",
    "end": "2003580"
  },
  {
    "text": "attached to it and now as long as you use that context with future client requests it your client will use the",
    "start": "2003580",
    "end": "2010600"
  },
  {
    "text": "correct cluster the correct cache and give you that sort of seamless client",
    "start": "2010600",
    "end": "2016000"
  },
  {
    "text": "experience we've come to to Really Love and and take advantage of in controller runtime so that's I think where things",
    "start": "2016000",
    "end": "2022840"
  },
  {
    "text": "are going but it's clearly still in development and if this is something that matters to you",
    "start": "2022840",
    "end": "2028480"
  },
  {
    "text": "um get involved with probably the kcp community is a good place to go the uh what's the channel in the kubernetes",
    "start": "2028480",
    "end": "2034360"
  },
  {
    "text": "well I think it's on our last slide well it was a good last night um no it's not on our last slide",
    "start": "2034360",
    "end": "2040419"
  },
  {
    "text": "kcp Dev in the kubernetes slack and then what's the operator one kubernetes operators in the kubernetes",
    "start": "2040419",
    "end": "2046600"
  },
  {
    "text": "slack both those places are good places to ask about this all right that's the end of our content I think we have like a minute or two for questions uh it",
    "start": "2046600",
    "end": "2054638"
  },
  {
    "text": "especially if you like this uh give us a review at this QR code you can contact",
    "start": "2054639",
    "end": "2059919"
  },
  {
    "text": "us Twitter email or come up talk and then we'll be at the operator framework",
    "start": "2059919",
    "end": "2065740"
  },
  {
    "text": "booth at least between when we leave here and let's say four o'clock if you want to chat some more about that or",
    "start": "2065740",
    "end": "2071320"
  },
  {
    "text": "just chase us down later so uh with that any any questions we have time for one",
    "start": "2071320",
    "end": "2076658"
  },
  {
    "text": "question okay no pressure um you talked about performance issues",
    "start": "2076659",
    "end": "2082780"
  },
  {
    "text": "and ways to avoid them and I'm curious what resources you would Point people to who are",
    "start": "2082780",
    "end": "2089639"
  },
  {
    "text": "did not have not used the the tools that you've provided and need to go diagnose their own terrible mistakes",
    "start": "2090220",
    "end": "2098140"
  },
  {
    "text": "I'm asking for a friend okay so the question is",
    "start": "2098140",
    "end": "2103960"
  },
  {
    "text": "[Music]",
    "start": "2103960",
    "end": "2107039"
  },
  {
    "text": "the question is my operator has not been a good citizen and is consuming lots of",
    "start": "2110200",
    "end": "2116320"
  },
  {
    "text": "resources what do I do well it depends on uh what it what is",
    "start": "2116320",
    "end": "2122320"
  },
  {
    "text": "going wrong if you're using a bunch of watches there's some nice ways to trim that back and if not I would",
    "start": "2122320",
    "end": "2130839"
  },
  {
    "text": "recommend you come by kubernetes operators in kubernetes slack and you'll",
    "start": "2130839",
    "end": "2136300"
  },
  {
    "text": "find that the operator folks are very helpful and uh just nice people",
    "start": "2136300",
    "end": "2144099"
  },
  {
    "text": "all right thank you very much for a very interesting talk let's give the Michael and Austin a last time thank you thank",
    "start": "2144099",
    "end": "2151839"
  },
  {
    "text": "you",
    "start": "2151839",
    "end": "2153900"
  }
]