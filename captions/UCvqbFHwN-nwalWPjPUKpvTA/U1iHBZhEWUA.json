[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "hello kubecon and cloudnativecon welcome to my talk mckay it is a container orchestration platform for",
    "start": "799",
    "end": "7359"
  },
  {
    "text": "geo-distributed multi-clusters environments my name is mulugeta and i'm a phd",
    "start": "7359",
    "end": "12880"
  },
  {
    "text": "candidate at the focus project at the university of rainwan in france and cloud native engineer fatima stasis",
    "start": "12880",
    "end": "18800"
  },
  {
    "text": "ab so today i would like to talk about the",
    "start": "18800",
    "end": "25359"
  },
  {
    "text": "evolution of cloud deployments in the past few years and some of the challenges in multi-clusters",
    "start": "25359",
    "end": "31039"
  },
  {
    "text": "management in terms of resource management and application deployment and then i'll briefly discuss kubernetes",
    "start": "31039",
    "end": "36079"
  },
  {
    "text": "federation which is the foundation of our work and then i will briefly discuss the architecture and controllers of",
    "start": "36079",
    "end": "42160"
  },
  {
    "text": "our platform this and lastly show you a demonstration of our platform in action",
    "start": "42160",
    "end": "48800"
  },
  {
    "start": "48000",
    "end": "143000"
  },
  {
    "text": "so in the last few years we have seen uh an increasingly geographically distributed cloud",
    "start": "48800",
    "end": "54640"
  },
  {
    "text": "deployments the major cloud providers now have data centers in many regions of the world",
    "start": "54640",
    "end": "61760"
  },
  {
    "text": "we can identify three main geography deployments namely hybrid cloud multi-cloud and fog computing in hybrid",
    "start": "61760",
    "end": "68000"
  },
  {
    "text": "cloud we deploy applications on data centers from private and public cloud providers",
    "start": "68000",
    "end": "74320"
  },
  {
    "text": "in the multi-cloud case we deploy applications on multiple public clouds or data centers from",
    "start": "74320",
    "end": "80640"
  },
  {
    "text": "multiple regions of the same a public cloud provider the last one for computing is an",
    "start": "80640",
    "end": "86000"
  },
  {
    "text": "emerging geo-distributed computing paradigm where we have resources from private public as",
    "start": "86000",
    "end": "92000"
  },
  {
    "text": "well as micro data centers that are distributed in vast geographical areas",
    "start": "92000",
    "end": "97040"
  },
  {
    "text": "in the aims to be closer to end users much of this evolution is driven by the",
    "start": "97040",
    "end": "103119"
  },
  {
    "text": "increasing demands of modern applications some of the non-functional requirements are low latency the desire to provide fast",
    "start": "103119",
    "end": "110640"
  },
  {
    "text": "services to end users by placing our applications in regions where most of our users are located",
    "start": "110640",
    "end": "117520"
  },
  {
    "text": "high bandwidths and reliable connectivity in the case of iot and",
    "start": "117520",
    "end": "122960"
  },
  {
    "text": "video analytics for example would like to have high bandwidth and reliable connectivity so that we can upload a",
    "start": "122960",
    "end": "130399"
  },
  {
    "text": "vast amount of data to the analytics framework we have other",
    "start": "130399",
    "end": "136080"
  },
  {
    "text": "requirements also such as high availability disaster recovery scalability security and compliance",
    "start": "136080",
    "end": "143920"
  },
  {
    "start": "143000",
    "end": "209000"
  },
  {
    "text": "so managing this duration environment is not easy there are a lot of challenges we are talking in terms of hundreds and",
    "start": "143920",
    "end": "149840"
  },
  {
    "text": "thousands of clusters which become almost impossible to manage manually so we need to have automated ways of",
    "start": "149840",
    "end": "155840"
  },
  {
    "text": "deploying applications and managing resources this means solving many challenges some of which are resilience",
    "start": "155840",
    "end": "162640"
  },
  {
    "text": "in terms of hardware and network failures providing various placement",
    "start": "162640",
    "end": "168800"
  },
  {
    "text": "policies automated placement policies solving our scaling problems at various",
    "start": "168800",
    "end": "173840"
  },
  {
    "text": "levels and in various degrees in order to provide a persistent performance",
    "start": "173840",
    "end": "180080"
  },
  {
    "text": "even though our workload and user traffic changes all the time we also have to solve user traffic",
    "start": "180080",
    "end": "185680"
  },
  {
    "text": "coding and load balancing issues so that we can route user traffic from one cluster to another so we believe we try",
    "start": "185680",
    "end": "194080"
  },
  {
    "text": "to address these problems in mckay days and we believe that state-of-the-art container orchestrators such as",
    "start": "194080",
    "end": "199200"
  },
  {
    "text": "kubernetes serve as a basic foundation and building blocks because of their",
    "start": "199200",
    "end": "204239"
  },
  {
    "text": "portability interoperability and extensible nature",
    "start": "204239",
    "end": "210640"
  },
  {
    "start": "209000",
    "end": "291000"
  },
  {
    "text": "we are not the first ones to address these problems for example the kubernetes sync multi-cluster group has",
    "start": "210720",
    "end": "217680"
  },
  {
    "text": "been working on the kubernetes variation project for the last few years this project provides control plane and",
    "start": "217680",
    "end": "223840"
  },
  {
    "text": "concepts and obstructions necessary to manage multi-cluster kubernetes and in the same spirit as kubernetes the",
    "start": "223840",
    "end": "230720"
  },
  {
    "text": "architecture has a host cluster where the controllers are deployed and much of the decision takes place and",
    "start": "230720",
    "end": "236400"
  },
  {
    "text": "member clusters where applications are deployed kubernetes federation provides a manual placement policy where you can",
    "start": "236400",
    "end": "243120"
  },
  {
    "text": "specify your desired clusters and the kubernetes federation controllers will",
    "start": "243120",
    "end": "248799"
  },
  {
    "text": "deploy your applications on those clusters it also provides an automated",
    "start": "248799",
    "end": "253840"
  },
  {
    "text": "mechanism called replica scheduling preference which provides fully load balanced or weight-based placement",
    "start": "253840",
    "end": "260560"
  },
  {
    "text": "across your clusters but we believe that in many of the geo-distributed",
    "start": "260560",
    "end": "266320"
  },
  {
    "text": "environments such as for computing you need more automated policies such as resource-based policies in order to",
    "start": "266320",
    "end": "272960"
  },
  {
    "text": "utilize the clusters fully or locality aware and proximity our place and policies so that we can deploy our",
    "start": "272960",
    "end": "279840"
  },
  {
    "text": "applications on the clusters where most of our users are located we would also need auto",
    "start": "279840",
    "end": "286560"
  },
  {
    "text": "scaling uh resource provisioning and network loading policies so that's where our",
    "start": "286560",
    "end": "292639"
  },
  {
    "text": "project mckate is which stands for multi-cluster kubernetes comes in so our aim is to address some of the challenges",
    "start": "292639",
    "end": "298880"
  },
  {
    "text": "we mentioned earlier with the goal to provide automated placement of loading and bursting policies as well as auto",
    "start": "298880",
    "end": "304639"
  },
  {
    "text": "scaling at three levels first at the multi-cluster or federation level so that we our platform can add or remove",
    "start": "304639",
    "end": "312080"
  },
  {
    "text": "kubernetes clusters to the federation based on the amount of workload or user traffic at",
    "start": "312080",
    "end": "318880"
  },
  {
    "text": "the cluster level where worker nodes are dynamically added or removed in response to changing",
    "start": "318880",
    "end": "325440"
  },
  {
    "text": "workloads and at the level of parts or applications where the replicas of deployments are adjusted",
    "start": "325440",
    "end": "332240"
  },
  {
    "text": "in order in accordance to the resource utilization we also aim to provide",
    "start": "332240",
    "end": "337600"
  },
  {
    "text": "inter-cluster network routing and load balancing um the architecture is pretty much",
    "start": "337600",
    "end": "343600"
  },
  {
    "start": "342000",
    "end": "413000"
  },
  {
    "text": "similar to that of kubernetes federation in our case we have a management cluster that has our controllers as well as",
    "start": "343600",
    "end": "350240"
  },
  {
    "text": "workload clusters where our applications are deployed in mckates we rely on other open source",
    "start": "350240",
    "end": "357199"
  },
  {
    "text": "software such as kubernetes federation which we use for managing membership to the",
    "start": "357199",
    "end": "362880"
  },
  {
    "text": "federation adding and removing of clusters to the federation we use cluster api for transparent",
    "start": "362880",
    "end": "368720"
  },
  {
    "text": "provisioning and removal of kubernetes clusters on supported cloud",
    "start": "368720",
    "end": "373919"
  },
  {
    "text": "providers we use prometheus for monitoring our workload clusters",
    "start": "373919",
    "end": "379039"
  },
  {
    "text": "for resource use and network use we also have serv and celium on our",
    "start": "379039",
    "end": "385360"
  },
  {
    "text": "called cluster service used for measuring inter cluster network latency which we",
    "start": "385360",
    "end": "390479"
  },
  {
    "text": "rely on when making offloading and bursting decisions psyllium is used for intel clusters network clouding and",
    "start": "390479",
    "end": "397120"
  },
  {
    "text": "large balancing so on top of this we introduced four new controllers namely multi-cluster scheduler multi-cluster",
    "start": "397120",
    "end": "403520"
  },
  {
    "text": "horizontal power scalers rescheduler and cloud cluster provisioners and autoscaler i will",
    "start": "403520",
    "end": "409440"
  },
  {
    "text": "discuss the details of these controllers in the coming slides so in mckay this we have introduced some",
    "start": "409440",
    "end": "417440"
  },
  {
    "start": "413000",
    "end": "454000"
  },
  {
    "text": "six custom resources the first three are similar to that of kubernetes federation",
    "start": "417440",
    "end": "422479"
  },
  {
    "text": "so multi-cluster deployment is similar to federal deployments multi-class search jobs is similar to federated jobs",
    "start": "422479",
    "end": "429599"
  },
  {
    "text": "multicultural services similar to a federated service but we have also introduced multi-cluster horizontal",
    "start": "429599",
    "end": "435440"
  },
  {
    "text": "power scalars cloud cluster provisionary multi-cluster scheduler so these are the resources",
    "start": "435440",
    "end": "440560"
  },
  {
    "text": "that our controllers deploy update and remove on the right you can",
    "start": "440560",
    "end": "447199"
  },
  {
    "text": "see the custom resource definition for one of our resources the multi-cluster deployments is a simple",
    "start": "447199",
    "end": "453280"
  },
  {
    "text": "definition the first controller is a multi-cluster scheduler so this one is responsible for",
    "start": "453280",
    "end": "460720"
  },
  {
    "start": "454000",
    "end": "588000"
  },
  {
    "text": "creation deletion and updating of three of our custom resources namely multi-cluster deployment multi-cluster",
    "start": "460720",
    "end": "466319"
  },
  {
    "text": "service and multi-cluster jobs we provide manual and automated",
    "start": "466319",
    "end": "471599"
  },
  {
    "text": "policy-based placement capabilities the first one is the manual cluster affinity capability where you can deploy your",
    "start": "471599",
    "end": "478720"
  },
  {
    "text": "applications on selected clusters similar to kubernetes federation so you can specify i want to deploy on this and",
    "start": "478720",
    "end": "484479"
  },
  {
    "text": "this and this cluster and then our scheduler takes care of that we also have automated resource based and",
    "start": "484479",
    "end": "489599"
  },
  {
    "text": "network traffic aware policies for example we have a worse feed policy that uh deploys",
    "start": "489599",
    "end": "496000"
  },
  {
    "text": "applications on the clusters that have the most resources available we also have a best fit policy that uses a bin",
    "start": "496000",
    "end": "502080"
  },
  {
    "text": "packing algorithm to deploy applications on those clusters that have been used the most we have a traffic aware policy",
    "start": "502080",
    "end": "509680"
  },
  {
    "text": "which is which comes in handy in the case of for computing that deploys applications on those clusters",
    "start": "509680",
    "end": "516000"
  },
  {
    "text": "that have that are receiving the most traffic so network traffic is used here as an indicator for the",
    "start": "516000",
    "end": "522719"
  },
  {
    "text": "for the presence of most most users our scheduler also provides horizontal",
    "start": "522719",
    "end": "527760"
  },
  {
    "text": "offloading capability to neighboring clusters this what this means is if your selected",
    "start": "527760",
    "end": "534399"
  },
  {
    "text": "clusters do not have sufficient resources for deploying your applications our scheduler will deploy or upload the application to another",
    "start": "534399",
    "end": "541040"
  },
  {
    "text": "cluster that have sufficient resources but is closer to the selected clusters in terms of network clearancy we also",
    "start": "541040",
    "end": "547600"
  },
  {
    "text": "provide bursting capability where if a cluster cannot place all the replicas of a deployment the extra",
    "start": "547600",
    "end": "555680"
  },
  {
    "text": "replicas are deployed on neighboring clusters have the sufficient resources on the right side we can see the",
    "start": "555680",
    "end": "562240"
  },
  {
    "text": "manifest file for a sample multi-cluster deployment as you can see this manifest file is pretty much similar to that of",
    "start": "562240",
    "end": "570800"
  },
  {
    "text": "vanilla kubernetes deployment the only difference is the api version kind and certain",
    "start": "570800",
    "end": "577120"
  },
  {
    "text": "certain fields under the spec section for example here we have specified on the number of clusters or",
    "start": "577120",
    "end": "583600"
  },
  {
    "text": "locations where we want our application deployed and the placement policy",
    "start": "583600",
    "end": "589040"
  },
  {
    "start": "588000",
    "end": "621000"
  },
  {
    "text": "our multi-cluster service works in collaboration with celium",
    "start": "589040",
    "end": "595120"
  },
  {
    "text": "to provide inter-cluster routing and load balancing the service manifest is",
    "start": "595120",
    "end": "600480"
  },
  {
    "text": "pretty much similar to that of kubernetes service and we add the annotation for psyllium",
    "start": "600480",
    "end": "608560"
  },
  {
    "text": "so that psyllium can do the intercostal network clouding android balancing for us this for this we need",
    "start": "608560",
    "end": "616320"
  },
  {
    "text": "to have psyllium and celium cluster which on the workload clusters",
    "start": "616320",
    "end": "621680"
  },
  {
    "start": "621000",
    "end": "661000"
  },
  {
    "text": "the multi-cluster horizontal port autoscaler also similar to kubernetes uh",
    "start": "621680",
    "end": "627360"
  },
  {
    "text": "horizontal port auto scanner adjust the number of replicas of our deployments across all",
    "start": "627360",
    "end": "634160"
  },
  {
    "text": "clusters and this decision is passed to the scheduler which makes which are just the",
    "start": "634160",
    "end": "641360"
  },
  {
    "text": "deployment or placement of our replicas so for example if initially we",
    "start": "641360",
    "end": "647600"
  },
  {
    "text": "have we had a few replicas and then the our autoscaler decides that more replicas are required and our cluster",
    "start": "647600",
    "end": "654720"
  },
  {
    "text": "cannot place all those replicas our scheduler can't burst the extra replicas to other",
    "start": "654720",
    "end": "660399"
  },
  {
    "text": "clusters the cloud cluster provisional and autoscaler periodically checks the",
    "start": "660399",
    "end": "666079"
  },
  {
    "start": "661000",
    "end": "698000"
  },
  {
    "text": "status of our multi-cluster deployments and transparently provisions given this",
    "start": "666079",
    "end": "672320"
  },
  {
    "text": "cluster on a supported cloud provisioner via cluster api and then joins these clusters to the federation the scales",
    "start": "672320",
    "end": "679600"
  },
  {
    "text": "the number of worker nodes as necessary and finally removes the cloud cluster if",
    "start": "679600",
    "end": "684720"
  },
  {
    "text": "it's not needed anymore after a certain amount of time the manifest file is shown at the right here we have to",
    "start": "684720",
    "end": "691600"
  },
  {
    "text": "specify the credentials for our cloud provider and additional information such as cip of the load balancer and so on",
    "start": "691600",
    "end": "698480"
  },
  {
    "start": "698000",
    "end": "707000"
  },
  {
    "text": "the implementation of mckay tests was done on using cop which is kubernetes",
    "start": "698480",
    "end": "703519"
  },
  {
    "text": "operators framework from zalando based on python now let's go to a short demonstration of",
    "start": "703519",
    "end": "710959"
  },
  {
    "start": "707000",
    "end": "796000"
  },
  {
    "text": "mckates in action in this demo we have one management cluster and five workload clusters in the grid 5000",
    "start": "710959",
    "end": "717600"
  },
  {
    "text": "experimentation test paid we have a management cluster in rain and five worker workload",
    "start": "717600",
    "end": "723440"
  },
  {
    "text": "clusters in ren nant lil luxembourg and granola we also have an openstack cluster in north c which acts as the",
    "start": "723440",
    "end": "729680"
  },
  {
    "text": "cloud cluster on which we will transparently provision the kubernetes cluster when",
    "start": "729680",
    "end": "735600"
  },
  {
    "text": "necessary each of our five clusters have a master and five worker nodes for the sake of heterogeneity",
    "start": "735600",
    "end": "741920"
  },
  {
    "text": "clusters one and five their nodes have four cpu cores and 16 gb of ram each and",
    "start": "741920",
    "end": "747519"
  },
  {
    "text": "the nodes of clusters two three and four have two cpu and four gb of ram each the table shows the inter",
    "start": "747519",
    "end": "753760"
  },
  {
    "text": "cluster network latency between these clusters uh the prerequisites for d for this demo are the management cluster and",
    "start": "753760",
    "end": "760320"
  },
  {
    "text": "few workload clusters as shown here we also need kubernetes federation prometheus cluster api on our management",
    "start": "760320",
    "end": "766639"
  },
  {
    "text": "cluster and our core clusters need to have celium and celium cluster mesh serve as well as prometheus we also need",
    "start": "766639",
    "end": "774079"
  },
  {
    "text": "the credentials for a cloud provider in our case we have used openstack but for that matter we can use other card",
    "start": "774079",
    "end": "779600"
  },
  {
    "text": "providers such as aws google cloud and so on and if we like to have internet",
    "start": "779600",
    "end": "785519"
  },
  {
    "text": "for intel cluster network latency and load balancing we need physical or virtual networks such as vpn",
    "start": "785519",
    "end": "792079"
  },
  {
    "text": "across our clusters so now let's go to the demo",
    "start": "792079",
    "end": "796880"
  },
  {
    "start": "796000",
    "end": "944000"
  },
  {
    "text": "in this demo i'll show how to deploy the custom resources and controllers of mckates and how to use it to deploy some",
    "start": "797279",
    "end": "804000"
  },
  {
    "text": "sample applications across multiple clusters first let's check the prerequisites the first one is",
    "start": "804000",
    "end": "810240"
  },
  {
    "text": "humanities federation so to check that i'll run the command cube cuddle get cube",
    "start": "810240",
    "end": "816800"
  },
  {
    "text": "fit clusters in the cube federation system namespace on the management clusters and",
    "start": "816800",
    "end": "824240"
  },
  {
    "text": "we see that we have five clusters that form the federation",
    "start": "824240",
    "end": "829440"
  },
  {
    "text": "next let's check the status of psyllium cluster mesh to do this i will face my cucu command",
    "start": "829440",
    "end": "837680"
  },
  {
    "text": "into one of the clusters cluster one in this case and first check the presence",
    "start": "837680",
    "end": "843360"
  },
  {
    "text": "of the celium parts so as we can see here we have psyllium",
    "start": "843360",
    "end": "850000"
  },
  {
    "text": "parts running so now i'll go into one of these parts",
    "start": "850000",
    "end": "855839"
  },
  {
    "text": "and run the command psilium node list",
    "start": "855839",
    "end": "861040"
  },
  {
    "text": "and we see that the cilium cluster mesh has been formed next i'll check",
    "start": "861040",
    "end": "867920"
  },
  {
    "text": "the presence of the cluster api resources to check this out simply run the command",
    "start": "867920",
    "end": "873839"
  },
  {
    "text": "cube code will get namespaces on the management cluster and we see a few namespaces that contain the resources",
    "start": "873839",
    "end": "880480"
  },
  {
    "text": "for cluster api we will use cluster api to provision a cloud cluster from openstack in this",
    "start": "880480",
    "end": "887440"
  },
  {
    "text": "case but we can use different providers for that matter so let's check the",
    "start": "887440",
    "end": "893120"
  },
  {
    "text": "presence of the openstack cluster so i'll run the command open openstack",
    "start": "893120",
    "end": "898480"
  },
  {
    "text": "catalog list and i see the details of my openstack cluster but",
    "start": "898480",
    "end": "904800"
  },
  {
    "text": "we can see that we don't have any servers at the moment next i'll check",
    "start": "904800",
    "end": "911440"
  },
  {
    "text": "serve so surf is used for estimating the inter cluster latency between",
    "start": "911440",
    "end": "917760"
  },
  {
    "text": "the clusters and this is important for offloading from one cluster",
    "start": "917760",
    "end": "923040"
  },
  {
    "text": "of loading deployments from one cluster to to another so surf",
    "start": "923040",
    "end": "928320"
  },
  {
    "text": "members and i will place one of the agents",
    "start": "928320",
    "end": "935199"
  },
  {
    "text": "so this should be our pc and we see that there's a serv cluster as well so now",
    "start": "938800",
    "end": "944639"
  },
  {
    "start": "944000",
    "end": "1096000"
  },
  {
    "text": "it's time to deploy our custom resources we have uh in this demo we'll deploy four custom",
    "start": "944639",
    "end": "952800"
  },
  {
    "text": "resources which are multi-cluster deployment multi-cluster service multi-cluster jobs and cloud",
    "start": "952800",
    "end": "958639"
  },
  {
    "text": "provisioners and auto scanner so these are the custom resources that our multi-cluster scheduler and cloud",
    "start": "958639",
    "end": "965839"
  },
  {
    "text": "provisioners use later on so first i will deploy the",
    "start": "965839",
    "end": "972399"
  },
  {
    "text": "first three custom resources so crt multi-cluster deployment",
    "start": "972399",
    "end": "981279"
  },
  {
    "text": "multi-cluster service and multi-cluster jobs",
    "start": "981279",
    "end": "988399"
  },
  {
    "text": "great they are created next i'll deploy our multi-cluster",
    "start": "988399",
    "end": "994639"
  },
  {
    "text": "scheduler controller so this is deployed as a",
    "start": "994639",
    "end": "1001120"
  },
  {
    "text": "normal kubernetes deployment as we can see in the specification file here",
    "start": "1001120",
    "end": "1007360"
  },
  {
    "text": "we would like to deploy this on the master node of the management cluster so for that reason we specify a node",
    "start": "1007360",
    "end": "1013440"
  },
  {
    "text": "selector and the necessary tolerations we would also need a service",
    "start": "1013440",
    "end": "1019759"
  },
  {
    "text": "account and the necessary role-based access control so",
    "start": "1019759",
    "end": "1025918"
  },
  {
    "text": "that this controller has the necessary privileges to do its functions so we",
    "start": "1025919",
    "end": "1033199"
  },
  {
    "text": "deploy the r back and the deployment",
    "start": "1033199",
    "end": "1039360"
  },
  {
    "text": "so let's check whether the this part this deployment is created so it's being",
    "start": "1039360",
    "end": "1044400"
  },
  {
    "text": "created right now now let's go to uh deploy the custom resource and for",
    "start": "1044400",
    "end": "1051360"
  },
  {
    "text": "cloud the cloud provisioner",
    "start": "1051360",
    "end": "1055120"
  },
  {
    "text": "so the custom resource definition is a very simple one as you as we can see here",
    "start": "1062480",
    "end": "1067760"
  },
  {
    "text": "and similarly we also have the deployment for the controller of cloud provisioners",
    "start": "1067760",
    "end": "1075120"
  },
  {
    "text": "similar to the previous one so we deployed these two as well",
    "start": "1075120",
    "end": "1081640"
  },
  {
    "text": "great so let's check now whether the parts are running so the multi-cluster scheduler is running and the part for",
    "start": "1083200",
    "end": "1090160"
  },
  {
    "text": "the cloud provisioner is being created as we speak so it looks great now",
    "start": "1090160",
    "end": "1096480"
  },
  {
    "start": "1096000",
    "end": "1205000"
  },
  {
    "text": "so what we can do now is we can deploy multi-clusters applications",
    "start": "1096480",
    "end": "1103520"
  },
  {
    "text": "so i'll show three scenarios so the first scenario is i will try to use our multi-cluster",
    "start": "1103520",
    "end": "1109600"
  },
  {
    "text": "scheduler to deploy uh applications on a specific cluster and then i'll show the",
    "start": "1109600",
    "end": "1114880"
  },
  {
    "text": "horizontal offloading capability what this means is if the",
    "start": "1114880",
    "end": "1120160"
  },
  {
    "text": "uh we don't have sufficient resources in one cluster our scheduler is able to",
    "start": "1120160",
    "end": "1125679"
  },
  {
    "text": "offload the applications to a nearby cluster by estimating the",
    "start": "1125679",
    "end": "1130720"
  },
  {
    "text": "network latency and third i'll show the bursting capability so what this means is",
    "start": "1130720",
    "end": "1137760"
  },
  {
    "text": "if a cluster cannot cannot place all the replicas of a deployment we will our",
    "start": "1137760",
    "end": "1144080"
  },
  {
    "text": "scheduler will deploy the extra replicas to a nearby cluster and then i'm also show bursting into the",
    "start": "1144080",
    "end": "1151120"
  },
  {
    "text": "cloud so if our fixed clusters do not have sufficient resources our cloud",
    "start": "1151120",
    "end": "1156559"
  },
  {
    "text": "provisioner will create a cloud cluster on openstack and our deployments",
    "start": "1156559",
    "end": "1162160"
  },
  {
    "text": "will be uh best to to to that clusters so let's",
    "start": "1162160",
    "end": "1168640"
  },
  {
    "text": "check the",
    "start": "1168640",
    "end": "1171120"
  },
  {
    "text": "uh so one thing uh first we have to create a cloud",
    "start": "1174880",
    "end": "1180240"
  },
  {
    "text": "provisioner so we have the manifest file here that contains the",
    "start": "1180240",
    "end": "1186480"
  },
  {
    "text": "necessary information about the cloud cluster in this case openstack the credentials and other important",
    "start": "1186480",
    "end": "1193600"
  },
  {
    "text": "information such as cip address for the load balancer and so on so we create",
    "start": "1193600",
    "end": "1198960"
  },
  {
    "text": "this cloud provisioner",
    "start": "1198960",
    "end": "1202320"
  },
  {
    "start": "1205000",
    "end": "1335000"
  },
  {
    "text": "all right this is created great so now let's deploy our first application so this is a",
    "start": "1205600",
    "end": "1213120"
  },
  {
    "text": "simple uh application that prints just hello so we would like to deploy this",
    "start": "1213120",
    "end": "1220080"
  },
  {
    "text": "application on one of our clusters in this case cluster 2 and",
    "start": "1220080",
    "end": "1225679"
  },
  {
    "text": "as if you notice the manifest file for a multi-cluster deployment is very much similar to that of a normal kubernetes",
    "start": "1225679",
    "end": "1232320"
  },
  {
    "text": "deployment the only difference is the api version and kind and there are a few",
    "start": "1232320",
    "end": "1238080"
  },
  {
    "text": "additional fields under the spec section in this case we",
    "start": "1238080",
    "end": "1243120"
  },
  {
    "text": "if we want to deploy a multi-cluster deployment on specific clusters we can specify the name of",
    "start": "1243120",
    "end": "1250240"
  },
  {
    "text": "clusters comma separated following the locations field so now let's deploy this so this will",
    "start": "1250240",
    "end": "1256880"
  },
  {
    "text": "create 5 replicas on clusters2",
    "start": "1256880",
    "end": "1261320"
  },
  {
    "text": "so we have created a multi-cluster deployment named hello so let's check whether this resource has been created",
    "start": "1266240",
    "end": "1273280"
  },
  {
    "text": "so we see that it's created and let's check its status",
    "start": "1273280",
    "end": "1279360"
  },
  {
    "text": "so as we can see on the status the multi-cluster deployment is created on",
    "start": "1279360",
    "end": "1284640"
  },
  {
    "text": "cluster 2 and with 5 replicas let's go to",
    "start": "1284640",
    "end": "1289679"
  },
  {
    "text": "let's uh go through all the clusters and check the parts that are running on those clusters",
    "start": "1289679",
    "end": "1296000"
  },
  {
    "text": "so i will create a for loop",
    "start": "1296000",
    "end": "1300360"
  },
  {
    "text": "so as we as you can see here we have five replicas running on cluster two so our",
    "start": "1320720",
    "end": "1326880"
  },
  {
    "text": "scheduler is able to deploy on a specific cluster so now let's look at the offloading",
    "start": "1326880",
    "end": "1334000"
  },
  {
    "text": "capability so let's edit the manifest file for this deployment so",
    "start": "1334000",
    "end": "1341280"
  },
  {
    "start": "1335000",
    "end": "1420000"
  },
  {
    "text": "cluster 2 so for some reason if we want to increase the resource request for for",
    "start": "1341280",
    "end": "1348640"
  },
  {
    "text": "our for our parts in this case let's increase it to three cores uh",
    "start": "1348640",
    "end": "1354080"
  },
  {
    "text": "we know that clusters two does not have nodes that have three cores so",
    "start": "1354080",
    "end": "1361280"
  },
  {
    "text": "our scheduler will try to find another cluster that has",
    "start": "1361280",
    "end": "1367280"
  },
  {
    "text": "three or more cores and we'll try to deploy this this deployment so let's verify",
    "start": "1367280",
    "end": "1373600"
  },
  {
    "text": "that so i will apply the changes",
    "start": "1373600",
    "end": "1379120"
  },
  {
    "text": "so now let's check the status of our multi-cluster deployment resource",
    "start": "1379120",
    "end": "1385280"
  },
  {
    "text": "and as you can see here on the update section of the status we now see that",
    "start": "1385280",
    "end": "1391520"
  },
  {
    "text": "the deployment is now running on cluster one and not cluster two and we have five",
    "start": "1391520",
    "end": "1397039"
  },
  {
    "text": "replicas running so let's verify this so as you can see the deployments the parts",
    "start": "1397039",
    "end": "1402400"
  },
  {
    "text": "are now running on cluster one so the reason is that clusters two does not have a sufficient resources so our",
    "start": "1402400",
    "end": "1407600"
  },
  {
    "text": "multi-cluster scheduler has now deployed uh this deployment on the nearest cluster two",
    "start": "1407600",
    "end": "1414240"
  },
  {
    "text": "clusters the original cluster two which is cluster one next i'll",
    "start": "1414240",
    "end": "1419919"
  },
  {
    "text": "show the bursting capability so again let's edit the manifest file",
    "start": "1419919",
    "end": "1425760"
  },
  {
    "start": "1420000",
    "end": "1493000"
  },
  {
    "text": "this time let's increase the number of replicas from 5 to 10",
    "start": "1425760",
    "end": "1430880"
  },
  {
    "text": "and since cluster 2 only has 5 nodes uh it cannot",
    "start": "1430880",
    "end": "1437360"
  },
  {
    "text": "place on these 10 replicas of the application so our scheduler will try to deploy the extra 5 replicas on",
    "start": "1437360",
    "end": "1444559"
  },
  {
    "text": "another cluster that has the sufficient resources and is also",
    "start": "1444559",
    "end": "1450400"
  },
  {
    "text": "closer to cluster 2 in terms of network latency so let's apply the changes",
    "start": "1450400",
    "end": "1456400"
  },
  {
    "text": "and let's check the status of our multi-clusters deployment now so in the",
    "start": "1456400",
    "end": "1464240"
  },
  {
    "text": "update section so we should see yeah we should see that",
    "start": "1465279",
    "end": "1470960"
  },
  {
    "text": "now the deployment is running on two clusters cluster one and cluster five so an additional cluster five",
    "start": "1470960",
    "end": "1477840"
  },
  {
    "text": "and the extra five replicas have been deployed on cluster five so let's check this verify so",
    "start": "1477840",
    "end": "1485120"
  },
  {
    "text": "as you can see we have 10 replicas running on two clusters five on each cluster",
    "start": "1485120",
    "end": "1493760"
  },
  {
    "start": "1493000",
    "end": "1659000"
  },
  {
    "text": "so this is great what if we want to increase the number of replicas",
    "start": "1493760",
    "end": "1501120"
  },
  {
    "text": "once more so let's make it 15. and let's see uh what what happens now",
    "start": "1501120",
    "end": "1508320"
  },
  {
    "text": "so what happens now is we don't have sufficient resources on our five fixed",
    "start": "1508320",
    "end": "1513919"
  },
  {
    "text": "clusters so when the schedule our multi-cluster scheduler cannot",
    "start": "1513919",
    "end": "1520320"
  },
  {
    "text": "deploy all these replicas it will update the status of the multi-cluster deployment",
    "start": "1520320",
    "end": "1526000"
  },
  {
    "text": "with a message saying that kind of deployed and it needs to provision a cloud",
    "start": "1526000",
    "end": "1531200"
  },
  {
    "text": "a cloud cluster so that's where our cloud provisional controller comes in so it will check the status of the multicluster deployment and it will",
    "start": "1531200",
    "end": "1538240"
  },
  {
    "text": "create a new kubernetes cluster on openstack joins it to the kubernetes",
    "start": "1538240",
    "end": "1543600"
  },
  {
    "text": "federation and then once the new cluster is ready our multi-cluster scheduler will deploy the extra replicas on that",
    "start": "1543600",
    "end": "1551919"
  },
  {
    "text": "new cluster so let's apply this change",
    "start": "1551919",
    "end": "1556960"
  },
  {
    "text": "and let's check the status of our multi-cluster deployment",
    "start": "1556960",
    "end": "1563360"
  },
  {
    "text": "so as you can see here there is a status up update so there's this message",
    "start": "1563360",
    "end": "1569279"
  },
  {
    "text": "that says the application could not be deployed on the fixed clusters and we",
    "start": "1569279",
    "end": "1574320"
  },
  {
    "text": "need to provision a cloud a cloud cluster and this this message to to cloud",
    "start": "1574320",
    "end": "1579360"
  },
  {
    "text": "so now our cloud provisioner will create the kubernetes cluster on openstack so let's",
    "start": "1579360",
    "end": "1585840"
  },
  {
    "text": "go to openstack and check if",
    "start": "1585840",
    "end": "1591919"
  },
  {
    "text": "the machines have been created so now first masternode for our new clusters is",
    "start": "1593840",
    "end": "1600240"
  },
  {
    "text": "created so it will take a couple of minutes until the cluster is up and running fully",
    "start": "1600240",
    "end": "1608159"
  },
  {
    "text": "let's check once again whether the cloud cluster has been created so",
    "start": "1608159",
    "end": "1613679"
  },
  {
    "text": "open stack server list so we see that one master node and three",
    "start": "1613679",
    "end": "1619520"
  },
  {
    "text": "worker nodes have been created let's check the status of the federation",
    "start": "1619520",
    "end": "1626600"
  },
  {
    "text": "so we see now there's a new addition to our kubernetes federation named cloud1",
    "start": "1630000",
    "end": "1635840"
  },
  {
    "text": "so this is a cloud kubernetes cluster that has just been created by our cloud provisioner",
    "start": "1635840",
    "end": "1643120"
  },
  {
    "text": "now let's check the status of our multicluster deployment hello",
    "start": "1643120",
    "end": "1648320"
  },
  {
    "text": "and as you can see on the status the deployment is now deployed on three clusters cluster one",
    "start": "1648320",
    "end": "1654480"
  },
  {
    "text": "cluster five and cloud one so",
    "start": "1654480",
    "end": "1659520"
  },
  {
    "start": "1659000",
    "end": "2007000"
  },
  {
    "text": "so we see that our cloud provisioners has indeed created a cloud cluster and",
    "start": "1659520",
    "end": "1666000"
  },
  {
    "text": "joined it to the federation when our scheduler realized that it did not have sufficient resources on the fixed",
    "start": "1666000",
    "end": "1672159"
  },
  {
    "text": "clusters to place our our deployments our cloud provisioner can also auto scale the worker nodes of",
    "start": "1672159",
    "end": "1679679"
  },
  {
    "text": "the cloud clusters and even remove the cloud cluster when",
    "start": "1679679",
    "end": "1685440"
  },
  {
    "text": "the workload has decreased and that cloud cluster is not needed anymore",
    "start": "1685440",
    "end": "1690480"
  },
  {
    "text": "after a certain amount of time next i'll show uh the automated",
    "start": "1690480",
    "end": "1696720"
  },
  {
    "text": "placement capability of our multi-cluster scheduler for this i have",
    "start": "1696720",
    "end": "1702320"
  },
  {
    "text": "another deployment so this time we'll use the best fit placement",
    "start": "1702320",
    "end": "1708159"
  },
  {
    "text": "policy so the best fit placement policy tries to deploy uh applications on those clusters that",
    "start": "1708159",
    "end": "1715360"
  },
  {
    "text": "have been used the most so this is a bin packing algorithm so it tries to",
    "start": "1715360",
    "end": "1723039"
  },
  {
    "text": "utilize resources as much as possible so in this case we are trying to deploy on two clusters that have",
    "start": "1723039",
    "end": "1729039"
  },
  {
    "text": "been you the most so and let's try to deploy this so i can see the best fit",
    "start": "1729039",
    "end": "1735440"
  },
  {
    "text": "and let's check the status of our multi-cluster deployment",
    "start": "1735440",
    "end": "1741039"
  },
  {
    "text": "so as you can see the deployment has been deployed on clusters one and five these are",
    "start": "1742960",
    "end": "1748240"
  },
  {
    "text": "the clusters among all our clusters that have been used the most and list let's verify",
    "start": "1748240",
    "end": "1757120"
  },
  {
    "text": "so we can see that the parts have been have been created on clusters one and five another placement policy is the",
    "start": "1757520",
    "end": "1764000"
  },
  {
    "text": "westfield policy so what this does is it will try to deploy applications on the cluster",
    "start": "1764000",
    "end": "1770880"
  },
  {
    "text": "stuff that have the most free resources available similarly in this case we would like to deploy on two",
    "start": "1770880",
    "end": "1777679"
  },
  {
    "text": "clusters using the worst a policy so let's try this",
    "start": "1777679",
    "end": "1782799"
  },
  {
    "text": "and let's check the status",
    "start": "1783679",
    "end": "1787519"
  },
  {
    "text": "so this time the deployments have been created on clusters two and three this is because these are the clusters that have",
    "start": "1791440",
    "end": "1797039"
  },
  {
    "text": "the that have the most resources available",
    "start": "1797039",
    "end": "1802159"
  },
  {
    "text": "and let's verify once more so as you can see the rest with the deployments using the wasp policy have",
    "start": "1803440",
    "end": "1809840"
  },
  {
    "text": "been created on clusters two and three so the last thing i want to show you is how to deploy the multi-cluster service",
    "start": "1809840",
    "end": "1817039"
  },
  {
    "text": "controllers and how we can and how we can access the back end the first back-end application using a",
    "start": "1817039",
    "end": "1823600"
  },
  {
    "text": "front-end so for this we first need to create a multi-cluster service corresponding to our multi-cluster",
    "start": "1823600",
    "end": "1829840"
  },
  {
    "text": "deployment named hello so this in this case we don't have to specify the clusters because our scheduler will",
    "start": "1829840",
    "end": "1836480"
  },
  {
    "text": "find the corresponding cluster deployments in mdl and it will create the corresponding community services on",
    "start": "1836480",
    "end": "1841840"
  },
  {
    "text": "all the clusters that have the deployment so let's apply this",
    "start": "1841840",
    "end": "1847760"
  },
  {
    "text": "and let's verify whether these services have been created so as you can see the hello services",
    "start": "1848159",
    "end": "1854880"
  },
  {
    "text": "have been created on clusters one and five we can also check on the cloud",
    "start": "1854880",
    "end": "1860720"
  },
  {
    "text": "cluster whether the services have been created so it's created now we need a front-end deployment and service to",
    "start": "1860720",
    "end": "1867279"
  },
  {
    "text": "access the application so we have content multi-cluster deployment that we we need",
    "start": "1867279",
    "end": "1873279"
  },
  {
    "text": "to deploy this front end at least on one of the clusters that contain our back-end multi-cluster",
    "start": "1873279",
    "end": "1879120"
  },
  {
    "text": "deployment so in this case we'll try to deploy this on cluster one let's and there's also a corresponding",
    "start": "1879120",
    "end": "1886000"
  },
  {
    "text": "front-end service that we will deploy on cluster one as well so let's",
    "start": "1886000",
    "end": "1891279"
  },
  {
    "text": "deploy these two",
    "start": "1891279",
    "end": "1894720"
  },
  {
    "text": "and let's check the status so the front-end service have been created on cluster one",
    "start": "1897360",
    "end": "1904240"
  },
  {
    "text": "let's check the part the front end uh",
    "start": "1904240",
    "end": "1910720"
  },
  {
    "text": "front-end deployment have been created on clusters one and two this is because",
    "start": "1910720",
    "end": "1916000"
  },
  {
    "text": "we have specified five replicas and since our scheduler could not deploy all the five replicas of cluster one it has",
    "start": "1916000",
    "end": "1921200"
  },
  {
    "text": "created only three of the replicas and has a burst the extra two cl two replicas to",
    "start": "1921200",
    "end": "1926799"
  },
  {
    "text": "cluster two so this is okay now let's try to access the",
    "start": "1926799",
    "end": "1933360"
  },
  {
    "text": "applications front end using the ip address of the masternode of cluster one",
    "start": "1933360",
    "end": "1940640"
  },
  {
    "text": "and the node port so as you can see our application has",
    "start": "1940640",
    "end": "1945679"
  },
  {
    "text": "responded with the message hello so in this demo i have shown you how you",
    "start": "1945679",
    "end": "1951919"
  },
  {
    "text": "can deploy the custom resources and controllers of mc kats and how using these controllers you can deploy",
    "start": "1951919",
    "end": "1958720"
  },
  {
    "text": "multi-cluster applications and services i hope you have enjoyed this demo and if you'd like to see more demos you can",
    "start": "1958720",
    "end": "1965679"
  },
  {
    "text": "take a look at our github repository thank you",
    "start": "1965679",
    "end": "1970480"
  },
  {
    "text": "to conclude if you are interested in learning more about this project and contribute",
    "start": "1973760",
    "end": "1979200"
  },
  {
    "text": "please visit our project's website at for guru.edu",
    "start": "1979200",
    "end": "1985600"
  },
  {
    "text": "you can also read our paper which was accepted at the certius international conference on computer communications",
    "start": "1985600",
    "end": "1992640"
  },
  {
    "text": "and networks the link is shown here you may also take a look at our source code",
    "start": "1992640",
    "end": "2001120"
  },
  {
    "text": "on github and look at more examples as well thank you very much",
    "start": "2001120",
    "end": "2009120"
  }
]