[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "test one two three okay I think everybody can hear me so sorry about that we had a little bit of difficulty",
    "start": "0",
    "end": "5819"
  },
  {
    "text": "getting the display hooked up yeah so this is going to be a talk about",
    "start": "5819",
    "end": "11340"
  },
  {
    "text": "implementing authorization and my name is Turin I'm a engineer at a company",
    "start": "11340",
    "end": "17220"
  },
  {
    "text": "called steerer I'm also one of the co-founders and core contributors to the open policy agent project so in back in",
    "start": "17220",
    "end": "27029"
  },
  {
    "start": "24000",
    "end": "79000"
  },
  {
    "text": "2006 this guy Jeff Bezos who's the CEO of Amazon said that he thought that you",
    "start": "27029",
    "end": "33030"
  },
  {
    "text": "know about 70% of software cover of Safa can only spend about 70% of their time working on things that are not really",
    "start": "33030",
    "end": "39059"
  },
  {
    "text": "core to their business that don't actually contribute to the core value that they want to provide and he called",
    "start": "39059",
    "end": "44760"
  },
  {
    "text": "that work undifferentiated heavy lifting and so back in 2006 undifferentiated",
    "start": "44760",
    "end": "51690"
  },
  {
    "text": "heavy lifting for a software company or a company trying to build a SAS offering was you know trying to rack servers in",
    "start": "51690",
    "end": "57930"
  },
  {
    "text": "order to sell widgets online and so today in 2018 you know things are better",
    "start": "57930",
    "end": "63390"
  },
  {
    "text": "you don't have to like rack servers yourself you don't have to worry about redundant power and whatnot you can spin",
    "start": "63390",
    "end": "69840"
  },
  {
    "text": "up a kubernetes cluster in a few minutes as long as you give your credit card to the cloud provider but I think that",
    "start": "69840",
    "end": "75030"
  },
  {
    "text": "today in the software industry there's still a lot of heavy lifting that goes on and I would argue that authorization",
    "start": "75030",
    "end": "81810"
  },
  {
    "start": "79000",
    "end": "130000"
  },
  {
    "text": "is a really good example of heavy lifting that software companies do all the time now the thing about",
    "start": "81810",
    "end": "88049"
  },
  {
    "text": "authorization is that it's actually really important and basically every application we build has to implement",
    "start": "88049",
    "end": "93740"
  },
  {
    "text": "authorization the problem is is that you",
    "start": "93740",
    "end": "98909"
  },
  {
    "text": "know if you don't get it right the mistakes or the mistake can be very very expensive to recover from and so for",
    "start": "98909",
    "end": "104640"
  },
  {
    "text": "example like if you're shipping an application to an enterprise you better make sure that you have an authorization story in place otherwise there's no way",
    "start": "104640",
    "end": "112170"
  },
  {
    "text": "that the security and IT departments at that company will deploy your software so what happens today is that you know",
    "start": "112170",
    "end": "120600"
  },
  {
    "text": "software companies basically bite the bullet and they do the heavy lifting and they implement authorization from scratch every single time but I don't",
    "start": "120600",
    "end": "128910"
  },
  {
    "text": "think that it needs to be that way and so what I think we need to do is you think how we implement authorization",
    "start": "128910",
    "end": "134950"
  },
  {
    "start": "130000",
    "end": "346000"
  },
  {
    "text": "I don't think that we should have to roll it from scratch every single time",
    "start": "134950",
    "end": "140110"
  },
  {
    "text": "now oops why is that important so you know what this comes down to at the end",
    "start": "140110",
    "end": "145930"
  },
  {
    "text": "of the day is that if you don't have to do authorization yourself or all of it yourself then you can get to market quicker right so you don't have to do",
    "start": "145930",
    "end": "152890"
  },
  {
    "text": "that heavy lifting and what this comes down to is the ability to ship secure safe projects quickly so you know this",
    "start": "152890",
    "end": "161890"
  },
  {
    "text": "talk is about authorization and when people talk about security and access control and so on",
    "start": "161890",
    "end": "168130"
  },
  {
    "text": "they sometimes confuse or conflate these two things these two ideas of authentication or authentication is the",
    "start": "168130",
    "end": "178720"
  },
  {
    "text": "process of verifying the identity of the caller into the system whereas authorization is the process of",
    "start": "178720",
    "end": "185290"
  },
  {
    "text": "verifying that the caller has the permission to do the thing they're requesting now it's important to keep in",
    "start": "185290",
    "end": "191830"
  },
  {
    "text": "mind that you need to solve authentication before you try to solve authorization there is no point in",
    "start": "191830",
    "end": "199269"
  },
  {
    "text": "working on authorization until you've solved authentication it doesn't make",
    "start": "199269",
    "end": "204370"
  },
  {
    "text": "any sense to write rules to control who can do what if you can't trust that you know Bob is who bob says he is now the",
    "start": "204370",
    "end": "213790"
  },
  {
    "text": "good thing is that the authentication space is fairly standardized so whether you're working in the enterprise with a",
    "start": "213790",
    "end": "220480"
  },
  {
    "text": "standard like sam'l or you're working in the consumer space with you know Oh IDC",
    "start": "220480",
    "end": "225730"
  },
  {
    "text": "or you're looking at using spiffy in the infrastructure space there are existing standards that exist to help you verify",
    "start": "225730",
    "end": "231850"
  },
  {
    "text": "identities and while these standards you know represent information differently",
    "start": "231850",
    "end": "237549"
  },
  {
    "text": "and they've got different protocols they all do the same core thing which is they verify the identity of people and",
    "start": "237549",
    "end": "243880"
  },
  {
    "text": "machines interacting with the system so authentication is all about taking credentials or something like that from",
    "start": "243880",
    "end": "249760"
  },
  {
    "text": "a human or machine and then verifying them so the outcome of an authentication process is a verified identity now in",
    "start": "249760",
    "end": "259209"
  },
  {
    "text": "addition to verifying the identity a lot of authentication processes will typically include",
    "start": "259209",
    "end": "264810"
  },
  {
    "text": "attributes they'll produce attributes as a result and so these attributes are useful because they provide more",
    "start": "264810",
    "end": "270150"
  },
  {
    "text": "information about the caller they they will also tell you how the caller",
    "start": "270150",
    "end": "276300"
  },
  {
    "text": "authenticated so maybe they used you know a simple username password or maybe they went through a multi-factor authentication process they'll also tell",
    "start": "276300",
    "end": "283710"
  },
  {
    "text": "you when that authentication context is valid until and so once you get all of",
    "start": "283710",
    "end": "289169"
  },
  {
    "text": "these attributes you can use them in your applications to implement authorization checks but one of the",
    "start": "289169",
    "end": "295770"
  },
  {
    "text": "problems that you run into when you start doing this is that you discover that the attributes mannix the meaning",
    "start": "295770",
    "end": "303090"
  },
  {
    "text": "of some of these attributes is not necessarily well-defined it goes wave they go beyond the scope of the specification so like in the case of",
    "start": "303090",
    "end": "309000"
  },
  {
    "text": "spiffy the spiffy ID ID contains a URL and that URL has a path but the meaning",
    "start": "309000",
    "end": "314700"
  },
  {
    "text": "of that path is open-ended it's up to the administered claims but it also",
    "start": "314700",
    "end": "324120"
  },
  {
    "text": "contains claims that are oil standards like the AMR claim that tells you how the client authenticated but the meaning",
    "start": "324120",
    "end": "331590"
  },
  {
    "text": "of those some of those claims does not are not well-defined and that in the case of OID CID tokens can also contain",
    "start": "331590",
    "end": "336690"
  },
  {
    "text": "custom plans so you don't even know the universe of all the claims that can possibly exist but beyond just the the",
    "start": "336690",
    "end": "343860"
  },
  {
    "text": "universe and the meaning of these attributes there's a bigger problem and the bigger problem is that at the end of",
    "start": "343860",
    "end": "349800"
  },
  {
    "start": "346000",
    "end": "461000"
  },
  {
    "text": "the day your application has to decide how identity attributes map to functionality and privileges in the",
    "start": "349800",
    "end": "355770"
  },
  {
    "text": "application so even if you could enumerate all the claims and all the attributes and you knew the meanings of",
    "start": "355770",
    "end": "360780"
  },
  {
    "text": "them and they were all well defined you'd still have this problem of evaluating them inside of your applications so you know what about",
    "start": "360780",
    "end": "369870"
  },
  {
    "text": "OAuth right if you go look at the OAuth RFC you'll see that it calls itself an authorization framework so you know does",
    "start": "369870",
    "end": "375990"
  },
  {
    "text": "Olaf solve authorization for you the answer is not really so what Olaf is",
    "start": "375990",
    "end": "381660"
  },
  {
    "text": "really good at and what it does really well is it enables delegation it enables you to grant an application the ability",
    "start": "381660",
    "end": "389100"
  },
  {
    "text": "or the right to do something on your behalf now I really like this analogy for OAuth which is that it's like power",
    "start": "389100",
    "end": "395640"
  },
  {
    "text": "of a turn for web and mobile apps so power of attorney you know allows you to grant",
    "start": "395640",
    "end": "401340"
  },
  {
    "text": "someone else the right to do something on your behalf right it's like to sign legal documents for example so for",
    "start": "401340",
    "end": "406919"
  },
  {
    "text": "example if Bob granted Alice power of attorney then she could you know go and open a bank account in Bob's name or she",
    "start": "406919",
    "end": "413729"
  },
  {
    "text": "could you know open a mortgage or something like that at a bank but the important thing to keep in mind is that",
    "start": "413729",
    "end": "419099"
  },
  {
    "text": "the bank still has the ultimate say or decision about whether or not to let that account be opened so in O of the",
    "start": "419099",
    "end": "427940"
  },
  {
    "text": "resource server still has the ultimate say so just because you granted an application the right to do something on",
    "start": "427940",
    "end": "433289"
  },
  {
    "text": "your behalf doesn't mean that the resource server is going to allow it or",
    "start": "433289",
    "end": "438660"
  },
  {
    "text": "just blindly trust what the application is requesting and there are parts of OAuth that do actually help drive",
    "start": "438660",
    "end": "444930"
  },
  {
    "text": "authorization like the access token but again how that access token gets applied",
    "start": "444930",
    "end": "450090"
  },
  {
    "text": "is outside the scope of OAuth they don't define it they say the methods used by",
    "start": "450090",
    "end": "455550"
  },
  {
    "text": "the resource server to validate the access token are beyond the scope of the specification so this brings us back to",
    "start": "455550",
    "end": "462539"
  },
  {
    "start": "461000",
    "end": "672000"
  },
  {
    "text": "this question how does the app decide what to do with incoming requests and",
    "start": "462539",
    "end": "468330"
  },
  {
    "text": "identity attributes and access tokens and so this is what authorization",
    "start": "468330",
    "end": "475139"
  },
  {
    "text": "systems aim to solve so when you build a new product or project you typically have to build an authorization library",
    "start": "475139",
    "end": "481199"
  },
  {
    "text": "or a component or a subsystem and that subsystem exists to answer the question can identity I do operation Oh on",
    "start": "481199",
    "end": "490039"
  },
  {
    "text": "resource are so let's look at in an example scenario let's say we're",
    "start": "490039",
    "end": "495690"
  },
  {
    "text": "building a payroll app and that payroll apps serves salary data on employees and",
    "start": "495690",
    "end": "501000"
  },
  {
    "text": "we need to basically protect access to that data because it's sensitive so you",
    "start": "501000",
    "end": "506070"
  },
  {
    "text": "might have an HTTP API where you can you get on slash salary slash Bob and then you can provide some potentials and and",
    "start": "506070",
    "end": "511680"
  },
  {
    "text": "then it's up to the service to basically decide whether to allow or deny that request so what we're going to do is look at how you can implement a simple",
    "start": "511680",
    "end": "517469"
  },
  {
    "text": "policy that just says that employees should be able to read their own salary as well as the salary of anybody they",
    "start": "517469",
    "end": "522570"
  },
  {
    "text": "they report to or rather that reports them so this is one way you",
    "start": "522570",
    "end": "527640"
  },
  {
    "text": "right I think most people here could probably make sense of this code you",
    "start": "527640",
    "end": "532740"
  },
  {
    "text": "have some application code and some authorization code the app code calls into the authorization code and says",
    "start": "532740",
    "end": "537810"
  },
  {
    "text": "should this request be allowed and then the authorization code as an interface that says pass me an incoming request",
    "start": "537810",
    "end": "543690"
  },
  {
    "text": "and I'll return true if the request should be allowed or false if it should be denied and so in this case it checks",
    "start": "543690",
    "end": "550230"
  },
  {
    "text": "if the incoming user is equal to the employee ID like as if the users requesting their own salary and then it",
    "start": "550230",
    "end": "556020"
  },
  {
    "text": "also checks that the users in the list of managers for the employee and in those cases that requires to be allowed otherwise it would be denied so this is",
    "start": "556020",
    "end": "563700"
  },
  {
    "text": "fairly simple is the job done here I don't I don't know right I don't think so though because this code raises a",
    "start": "563700",
    "end": "569790"
  },
  {
    "text": "number of questions so what happens if tomorrow someone from the security",
    "start": "569790",
    "end": "575100"
  },
  {
    "text": "organization comes along and says that now in order to access sensitive information you need to make sure that",
    "start": "575100",
    "end": "581730"
  },
  {
    "text": "clients have gone through a multi-factor authentication or what if someone for the legal department comes along and",
    "start": "581730",
    "end": "587130"
  },
  {
    "text": "says in order to access sensitive sensitive information you need to be connecting from the same region where the service is hosted or where the data",
    "start": "587130",
    "end": "593100"
  },
  {
    "text": "is hosted or how do you delegate control to your end-users right what if the customer this this application says okay",
    "start": "593100",
    "end": "599730"
  },
  {
    "text": "well I want HR to be exempt from this this rule they should be able to see all salaries all the time well okay so maybe",
    "start": "599730",
    "end": "606870"
  },
  {
    "text": "you can just go and extend that authorized function you can add like six lines of Python and probably implement",
    "start": "606870",
    "end": "611910"
  },
  {
    "text": "all three of those but now how do you roll out that change you've just written six lines of Python and now you have to go through a complete rollout of your",
    "start": "611910",
    "end": "618150"
  },
  {
    "text": "application right that's that's pretty painful but there are even more sort of challenging problems here so like how do",
    "start": "618150",
    "end": "624270"
  },
  {
    "text": "you render the UI that this application serves based on the user's permissions what we've done here is we basically",
    "start": "624270",
    "end": "630510"
  },
  {
    "text": "hard-coded the permissions or the logic behind them into the application so you can't repurpose that logic in order to",
    "start": "630510",
    "end": "636630"
  },
  {
    "text": "decide which components to draw in the front-end even more fundamentally though how do you prove to somebody that the",
    "start": "636630",
    "end": "642870"
  },
  {
    "text": "policy you've implemented is correct right if someone from the security organization comes to you and says have",
    "start": "642870",
    "end": "648300"
  },
  {
    "text": "you implemented this policy what are you going to do you're going to show them tests maybe hopefully your tests or you're just going to show them the code",
    "start": "648300",
    "end": "653870"
  },
  {
    "text": "how do you audit the fact that this policy is being enforced and then if you think about this in the scale around the context",
    "start": "653870",
    "end": "659209"
  },
  {
    "text": "larger organization that might have hundreds or thousands of services deployed written in dozens of languages",
    "start": "659209",
    "end": "664790"
  },
  {
    "text": "with dozens of frameworks how is a security professionals supposed to come along and audit and make sense of the",
    "start": "664790",
    "end": "670189"
  },
  {
    "text": "state of things so what we want to have what the goal should be is to have a",
    "start": "670189",
    "end": "676579"
  },
  {
    "start": "672000",
    "end": "840000"
  },
  {
    "text": "solution that solves this authorization problem for any combination of i/o and R",
    "start": "676579",
    "end": "681589"
  },
  {
    "text": "and that can be enforced in any language framework runtime or environment now",
    "start": "681589",
    "end": "689110"
  },
  {
    "text": "this isn't exactly a new problem like we've we've got tons of existing approaches to authorization and so what",
    "start": "689110",
    "end": "696379"
  },
  {
    "text": "I'm gonna do is just sort of explain some of the common approaches so one of the simplest approaches to handling authorization is to create an access",
    "start": "696379",
    "end": "703249"
  },
  {
    "text": "control list system or an ACL system so ACLs are typically denied by default",
    "start": "703249",
    "end": "708439"
  },
  {
    "text": "that are controlled by a single administrator and they basically allow that administrator to create a table of",
    "start": "708439",
    "end": "714649"
  },
  {
    "text": "rows that say this user can form this action on this resource so ACLs are",
    "start": "714649",
    "end": "720379"
  },
  {
    "text": "really simple they're they're easy to author they're easy to like understand if you're just looking at one or two of them the problem is that in a large",
    "start": "720379",
    "end": "726829"
  },
  {
    "text": "organization this doesn't scale very well if you can imagine having to be the person that configures ACLs every single",
    "start": "726829",
    "end": "733639"
  },
  {
    "text": "time a new employee starts for every single service in your organization you'd probably go crazy right no one",
    "start": "733639",
    "end": "738649"
  },
  {
    "text": "wants to do that so there are ways around that so one example is role based access control right or our back so what",
    "start": "738649",
    "end": "745970"
  },
  {
    "text": "our back does is it at a fundamental level is it lets you group users with roles and then you grant permissions to",
    "start": "745970",
    "end": "753350"
  },
  {
    "text": "those roles so for example if you're building a payroll app you would basically say that you know HR as part",
    "start": "753350",
    "end": "761179"
  },
  {
    "text": "of the has the admin role and they can do and see anything regular employees just have like a view role or something",
    "start": "761179",
    "end": "766819"
  },
  {
    "text": "like that right and so now you don't have to you're not tackling the scalability problem very painfully but",
    "start": "766819",
    "end": "775160"
  },
  {
    "text": "sometimes our back isn't enough and you need something a little bit more fine-grained and so if you look at a system like AWS",
    "start": "775160",
    "end": "780559"
  },
  {
    "text": "I am you'll find that it's much more expressive than what you get with with",
    "start": "780559",
    "end": "786709"
  },
  {
    "text": "our back out of the box so AWS I am has a notion of allows and or deny overrides you can hang allows in",
    "start": "786709",
    "end": "794800"
  },
  {
    "text": "denies off of users and groups as well as individual resources and then it has concepts like negation and other",
    "start": "794800",
    "end": "800920"
  },
  {
    "text": "built-in functions that you can leverage and then going even further there's this thing called a back or attribute based",
    "start": "800920",
    "end": "807250"
  },
  {
    "text": "access control so with a back what you essentially do is you define the authorization policy using boolean logic",
    "start": "807250",
    "end": "815020"
  },
  {
    "text": "so you write a bunch of ands and ORS over a bunch of attributes to make a decision about whether or not to allow something in the system with a back you",
    "start": "815020",
    "end": "821680"
  },
  {
    "text": "typically also have the ability to write policies over context or metadata that may be outside of the incoming request",
    "start": "821680",
    "end": "827860"
  },
  {
    "text": "and a back is also useful if you need to express more of a more of like a relational policy where you say for",
    "start": "827860",
    "end": "833650"
  },
  {
    "text": "example that like a VM owner should be able to terminate or change the VM settings right so we've got these",
    "start": "833650",
    "end": "841330"
  },
  {
    "start": "840000",
    "end": "1058000"
  },
  {
    "text": "different approaches and we've got these applications which one should we pick",
    "start": "841330",
    "end": "845759"
  },
  {
    "text": "well when you have to pick a different approach like this it's good to sort of evaluate the trade-offs right and so one",
    "start": "846900",
    "end": "852340"
  },
  {
    "text": "way of looking at trade-offs for authorization systems is to kind of compare their ease of use versus their",
    "start": "852340",
    "end": "857410"
  },
  {
    "text": "flexibility and so ACL systems and rback systems are nice in a sense because",
    "start": "857410",
    "end": "863530"
  },
  {
    "text": "they're very easy to use but at the same time they're not very flexible now it's",
    "start": "863530",
    "end": "869620"
  },
  {
    "text": "nice that you need to have something that's easy to use because it's not easy to use people are gonna bypass it they're gonna figure it away within their organization",
    "start": "869620",
    "end": "876220"
  },
  {
    "text": "to get around it and then you've kind of defeated you the whole purpose of having these systems in place in them at all",
    "start": "876220",
    "end": "881910"
  },
  {
    "text": "but at the same time you don't want to have to build a new system you know every time the requirements change or",
    "start": "881910",
    "end": "887080"
  },
  {
    "text": "every time there's a new use case so ACL",
    "start": "887080",
    "end": "893320"
  },
  {
    "text": "is in our back are good for simple problems relatively simple problems but I am and a backer are better for more",
    "start": "893320",
    "end": "900070"
  },
  {
    "text": "complex problems now the thing is is that today a lot of the time when we pick an authorization solution we go",
    "start": "900070",
    "end": "905290"
  },
  {
    "text": "with like an ACL or an are back approach and that's because it's it's relatively",
    "start": "905290",
    "end": "910900"
  },
  {
    "text": "easy to implement it's relatively easy for people to consume and it's also gonna deal probably with the majority of",
    "start": "910900",
    "end": "917140"
  },
  {
    "text": "your use cases like say 80% of your use cases the problem with those approaches",
    "start": "917140",
    "end": "922300"
  },
  {
    "text": "is that they're not enough right so ACLs and our I can even I am are not really enough I",
    "start": "922300",
    "end": "928379"
  },
  {
    "text": "can say with confidence that most people here that worked for a large organization have probably had to deal",
    "start": "928379",
    "end": "934359"
  },
  {
    "text": "or that these organizations have to deal with all kinds of policies that the way outside of what ACL is and are back and",
    "start": "934359",
    "end": "939519"
  },
  {
    "text": "I am can deal with so anytime you have to you know enforce a policy based on",
    "start": "939519",
    "end": "944799"
  },
  {
    "text": "time of day or based on the the source address the source IP address or based on some kind of external context then",
    "start": "944799",
    "end": "951579"
  },
  {
    "text": "ACLs and are back are no longer sufficient and the problem is is that if you only have a sales and are back at",
    "start": "951579",
    "end": "957939"
  },
  {
    "text": "your disposal then what do you do there's not much you can do so this is",
    "start": "957939",
    "end": "966219"
  },
  {
    "text": "what we set out to help solve when we created the open policy agent project so the open policy agent is an open source",
    "start": "966219",
    "end": "973319"
  },
  {
    "text": "general purpose policy engine and what that means is that you can take OPA and",
    "start": "973319",
    "end": "978579"
  },
  {
    "text": "you can use it to enforce policies in any service in any system at any layer",
    "start": "978579",
    "end": "984519"
  },
  {
    "text": "of the stack so the way this works is that when your service say receives a request or an event it executes sac",
    "start": "984519",
    "end": "990609"
  },
  {
    "text": "weari against oakland and it says should this thing be allowed that's the query and then what open does",
    "start": "990609",
    "end": "996309"
  },
  {
    "text": "is it takes the policies and the data that has access to and it evaluates them to produce an answer like allow or deny",
    "start": "996309",
    "end": "1001499"
  },
  {
    "text": "the decision that it sends back to the service to be enforced so there are kind",
    "start": "1001499",
    "end": "1006989"
  },
  {
    "text": "of two key ideas behind OPA the first is that policy decisions should be decoupled from policy enforcement you",
    "start": "1006989",
    "end": "1014099"
  },
  {
    "text": "don't want to hard code policy logic policy decisions inside of your service because it because it can it becomes",
    "start": "1014099",
    "end": "1019889"
  },
  {
    "text": "very difficult to understand that policy and maintain it and deploy it and audit",
    "start": "1019889",
    "end": "1026579"
  },
  {
    "text": "it and so on the other idea behind OPA is that you should use a high-level declarative language to codify your",
    "start": "1026579",
    "end": "1034589"
  },
  {
    "text": "policies and so what you want is a policy language that allows you to mix",
    "start": "1034589",
    "end": "1040889"
  },
  {
    "text": "and match these different kinds of models so you want to be able to use you know ACLs and arbok when they are",
    "start": "1040889",
    "end": "1047600"
  },
  {
    "text": "appropriate but then as your use cases become more complex as you have new requirements you'd like to be able to",
    "start": "1047600",
    "end": "1053730"
  },
  {
    "text": "seamlessly switch over to a more sophisticated model like I am or",
    "start": "1053730",
    "end": "1059450"
  },
  {
    "start": "1058000",
    "end": "1452000"
  },
  {
    "text": "now at this point I was gonna do a demo but I can't connect to the internet and",
    "start": "1059510",
    "end": "1064960"
  },
  {
    "text": "I don't think I can let me try here alright I guess I can try github is that",
    "start": "1064960",
    "end": "1071150"
  },
  {
    "text": "safe if I go to github is that safe I don't know what you're gonna see that's",
    "start": "1071150",
    "end": "1077059"
  },
  {
    "text": "not good no it's working hold on let me go to my github hopefully that'll sorry",
    "start": "1077059",
    "end": "1083570"
  },
  {
    "text": "sorry sorry sorry okay hopefully so I",
    "start": "1083570",
    "end": "1090020"
  },
  {
    "text": "was gonna do an interactive demo where I showed some different policies and show",
    "start": "1090020",
    "end": "1097460"
  },
  {
    "text": "them being evaluated by oppa because one of the nice things about oppa is that the language is designed to be very",
    "start": "1097460",
    "end": "1102799"
  },
  {
    "text": "interactive you can take oppa policies and you can load them up into like",
    "start": "1102799",
    "end": "1109580"
  },
  {
    "text": "visual studio code for example and you can just start evaluating them you can",
    "start": "1109580",
    "end": "1115130"
  },
  {
    "text": "select portions of them and ask what is the value that this policy would",
    "start": "1115130",
    "end": "1120679"
  },
  {
    "text": "generate so this is an example of a Rago policy which is opus policy language and",
    "start": "1120679",
    "end": "1127370"
  },
  {
    "text": "what I was going to do was walk through a simplest scenario where you know suppose you have this this pet clinic",
    "start": "1127370",
    "end": "1133570"
  },
  {
    "text": "right and there are pet owners and there are pet veterinarians and pet owners should be able to you know read pets and",
    "start": "1133570",
    "end": "1140270"
  },
  {
    "text": "create pets and veterinarians should be able to read and update the details of those pets right their reports and so",
    "start": "1140270",
    "end": "1145580"
  },
  {
    "text": "this pet clinic has two users Alice and Bob Bob is a pet owner Alice's a vet veterinarian and then the pet clinic",
    "start": "1145580",
    "end": "1152659"
  },
  {
    "text": "service will provide certain inputs to the policy so it'll provide three things just to start the resource the type of",
    "start": "1152659",
    "end": "1158390"
  },
  {
    "text": "the resource so is it a pet a pet object or a pet detail object that's being accessed the action is it a read update",
    "start": "1158390",
    "end": "1163850"
  },
  {
    "text": "or create event or operation being performed and then the identity of the caller so either Bob or Alice and so if",
    "start": "1163850",
    "end": "1170539"
  },
  {
    "text": "you were to try to list the pets that an application had you would do a get on slash pets and provide your credentials",
    "start": "1170539",
    "end": "1175789"
  },
  {
    "text": "and then that would get translated into input that we provided into OPA and so then the service would query OPA and ask",
    "start": "1175789",
    "end": "1182059"
  },
  {
    "text": "for example for the value of pet clinic allow and the value of picked when it",
    "start": "1182059",
    "end": "1187370"
  },
  {
    "text": "got allowed would be computed by OPA on the fly and so in this case what saying is it that by default pet clinic",
    "start": "1187370",
    "end": "1192590"
  },
  {
    "text": "God allow is false but if a CLS not allow is true then allow it also be true",
    "start": "1192590",
    "end": "1199310"
  },
  {
    "text": "and so we can go look at this other policy here this ACL policy to see what",
    "start": "1199310",
    "end": "1204590"
  },
  {
    "text": "would happen what's being done here this is the ACL policy and so what you can",
    "start": "1204590",
    "end": "1209930"
  },
  {
    "text": "see that I've done here is I've just listed all the actions and resources and users that are allowed to perform",
    "start": "1209930",
    "end": "1215450"
  },
  {
    "text": "operations basically right there whether the action resource user triplets that are allowed so bog is an owner so he can",
    "start": "1215450",
    "end": "1220880"
  },
  {
    "text": "read and create pets and Alice is an owner so she can read and update pet detail or she's a vet for veterinarian",
    "start": "1220880",
    "end": "1226760"
  },
  {
    "text": "rather so she can read and update pet details right so this is really simple it's only 27 lines long but if you had",
    "start": "1226760",
    "end": "1232760"
  },
  {
    "text": "you know hundreds of thousands of users and many more operations and it would become very long and very painful to",
    "start": "1232760",
    "end": "1237800"
  },
  {
    "text": "work with and so what you'd want to do is switch over maybe to an are back model and so what you would do is you",
    "start": "1237800",
    "end": "1245390"
  },
  {
    "text": "would define you know your standard are back objects we defined some roles so",
    "start": "1245390",
    "end": "1251420"
  },
  {
    "text": "for example there'd be an owner role that could do leads on pets and there'd be a and it could also do create on pets",
    "start": "1251420",
    "end": "1257540"
  },
  {
    "text": "and then there'd be a veterinarian role that could do reads on pet details and updates on pet details and then you",
    "start": "1257540",
    "end": "1263540"
  },
  {
    "text": "would bind users to those roles so you could say Bob is has the owner role and Alice has the veterinarian role right",
    "start": "1263540",
    "end": "1270620"
  },
  {
    "text": "that's pretty simple I think everybody can follow the yamo and then what you do in Opa is you write a policy that can",
    "start": "1270620",
    "end": "1276590"
  },
  {
    "text": "interpret that data so here it's a little bit different a little bit more complicated but it basically says that",
    "start": "1276590",
    "end": "1281840"
  },
  {
    "text": "allow is true if role name is in roles for user and role name is in roles for",
    "start": "1281840",
    "end": "1288170"
  },
  {
    "text": "operation and then we defined some helper rules like to basically find the",
    "start": "1288170",
    "end": "1293510"
  },
  {
    "text": "roles that match the bindings and match the the sorry helper rules that match the role bindings and rule definitions",
    "start": "1293510",
    "end": "1300470"
  },
  {
    "text": "so this rule is basically searching over all the role bindings that's what the underscore does there and it's finding a",
    "start": "1300470",
    "end": "1306380"
  },
  {
    "text": "user that matches the input user and then it just generates that role name similarly the roles for operation rule",
    "start": "1306380",
    "end": "1313220"
  },
  {
    "text": "is generating the set of roles that match this incoming operation or requested operation so again we're",
    "start": "1313220",
    "end": "1318950"
  },
  {
    "text": "searching over the roles we're searching over the permissions on each role and then we're checking if those permissions are the same",
    "start": "1318950",
    "end": "1324659"
  },
  {
    "text": "the one being requested and so you could actually in in in the vs code plugin you could select that portion of the the",
    "start": "1324659",
    "end": "1331259"
  },
  {
    "text": "policy and hit evaluate and it would tell you these are the roles that match the input that you've given me and so",
    "start": "1331259",
    "end": "1339149"
  },
  {
    "text": "this is what the input looks like it's just simple JSON data you can actually provide arbitrary JSON data to open as",
    "start": "1339149",
    "end": "1344789"
  },
  {
    "text": "input it's not coupled any domain-specific model it's very flexible that way and then in order to make that",
    "start": "1344789",
    "end": "1350909"
  },
  {
    "text": "take effect in order to enforce that you would go into your top-level allow rule",
    "start": "1350909",
    "end": "1356039"
  },
  {
    "text": "and you just change that Ackles line to say our back dot allow instead and now you've basically transitioned out of the",
    "start": "1356039",
    "end": "1361320"
  },
  {
    "text": "ACL world into the are back world right so I can just actually edit this whole",
    "start": "1361320",
    "end": "1367859"
  },
  {
    "text": "player just as clear sure so you go in here and you would change this to our",
    "start": "1367859",
    "end": "1375509"
  },
  {
    "text": "bottle ow now suppose that somebody came along and or the suppose there was a",
    "start": "1375509",
    "end": "1381570"
  },
  {
    "text": "breach right and the company decided that you can no longer access pet",
    "start": "1381570",
    "end": "1386909"
  },
  {
    "text": "details if you're outside of the corporate network how would you do that with our back right you can't refer to the source IP",
    "start": "1386909",
    "end": "1394080"
  },
  {
    "text": "in an are back model so what you would do in OPA though is you could extend",
    "start": "1394080",
    "end": "1399779"
  },
  {
    "text": "that policy by saying add a deny rule here",
    "start": "1399779",
    "end": "1404539"
  },
  {
    "text": "I'll see you can use to uncomment this I don't usually edit policy in the github text editor but so now what this says is",
    "start": "1405119",
    "end": "1412919"
  },
  {
    "text": "deny is true if the source IP is not inside of this cider network and the",
    "start": "1412919",
    "end": "1419489"
  },
  {
    "text": "input resource being requested is pet details and then in order to make this to take effect you would just go here and say sorry allow if not deny so now",
    "start": "1419489",
    "end": "1427019"
  },
  {
    "text": "the policy says basically but deny by default allow is true if our back dot",
    "start": "1427019",
    "end": "1432479"
  },
  {
    "text": "allow is true and deny is not true okay so this is just an example of how you",
    "start": "1432479",
    "end": "1439830"
  },
  {
    "text": "can basically take a single policy language and then apply apply it to",
    "start": "1439830",
    "end": "1445139"
  },
  {
    "text": "solve different kinds that are applied to you with different policy models or authorization models so the",
    "start": "1445139",
    "end": "1453400"
  },
  {
    "start": "1452000",
    "end": "1746000"
  },
  {
    "text": "comes up a lot when I talk about oppa the pulse agent is you know how easy is open to use how flexible is it and I've",
    "start": "1453400",
    "end": "1460570"
  },
  {
    "text": "never run into a use case where oppa wasn't really able to describe the policy that people wanted to describe but then that begs the question well",
    "start": "1460570",
    "end": "1466000"
  },
  {
    "text": "it's too flexible it's too hard to use but I think this is kind of a bit of a trick question because if you want to",
    "start": "1466000",
    "end": "1471220"
  },
  {
    "text": "just stick to simple apples and simple are back models then you can do that right I just showed that and oppa will",
    "start": "1471220",
    "end": "1478870"
  },
  {
    "text": "handle that fine it'll actually do it in a fairly performant matter like it'll it'll are a manner it'll read it already",
    "start": "1478870",
    "end": "1484210"
  },
  {
    "text": "are back decisions for thousands of roles and thousands of role bindings in about 50 microseconds so we have some",
    "start": "1484210",
    "end": "1490510"
  },
  {
    "text": "powerful optimizations inside of oppa that to make it possible to do that okay",
    "start": "1490510",
    "end": "1497730"
  },
  {
    "text": "so uh the second this this is something else that I wanted to talk about which is something new that we've been working",
    "start": "1497730",
    "end": "1504070"
  },
  {
    "text": "on in oppa and so you know we've built this pet detail service or this pet",
    "start": "1504070",
    "end": "1510130"
  },
  {
    "text": "clinic service and it's you know it's serving requests for all the pets and it's got to store that data somewhere",
    "start": "1510130",
    "end": "1516010"
  },
  {
    "text": "right so it's probably put that data inside of a database and then whenever a request comes in to like list the pets",
    "start": "1516010",
    "end": "1522340"
  },
  {
    "text": "it runs a select query it returns the data that's in that table but so far",
    "start": "1522340",
    "end": "1531460"
  },
  {
    "text": "we've only talked about policies that apply to the incoming data right the data that's in the request all we've",
    "start": "1531460",
    "end": "1538360"
  },
  {
    "text": "said is that you can say you know Bob can perform get on slash pets we haven't said how you know you would restrict Bob",
    "start": "1538360",
    "end": "1544690"
  },
  {
    "text": "to only be able to see that you know the pet that he owns right fluffy so that's that's the problem here right like what",
    "start": "1544690",
    "end": "1550930"
  },
  {
    "text": "if you wanted to enforce this policy that says that users should only be able to see the details of pets they own well",
    "start": "1550930",
    "end": "1558730"
  },
  {
    "text": "how would you implement this thing what we would probably usually do what we usually do is we go into that service",
    "start": "1558730",
    "end": "1565570"
  },
  {
    "text": "and we extend it to tag on a where clause to that sequel query and now when",
    "start": "1565570",
    "end": "1573040"
  },
  {
    "text": "Bob requests you know slash pets he's only gonna see the pets that he owns but",
    "start": "1573040",
    "end": "1579780"
  },
  {
    "text": "now we're kind of back in the state that we were originally where were hard coding policy decisions into those",
    "start": "1579780",
    "end": "1585940"
  },
  {
    "text": "services what you kind of want to be able to do in the policy is provide constraints",
    "start": "1585940",
    "end": "1593370"
  },
  {
    "text": "over those queries or to control those queries to some extent right so for example if a new regulation came out",
    "start": "1593370",
    "end": "1598980"
  },
  {
    "text": "that said you can only see pets from the region that you're connecting from then you know the policy could influence the",
    "start": "1598980",
    "end": "1605010"
  },
  {
    "text": "query that the service is running now so",
    "start": "1605010",
    "end": "1610890"
  },
  {
    "text": "far what we've seen is that you know what our request comes in to the pet details service it'll ask OPA for a decision right it'll provide some input",
    "start": "1610890",
    "end": "1617640"
  },
  {
    "text": "like the method and the path and so on and then opens gonna crunch the policy that it has it's gonna return a decision",
    "start": "1617640",
    "end": "1622860"
  },
  {
    "text": "like allow or deny back to the service so it would be kind of difficult to",
    "start": "1622860",
    "end": "1630770"
  },
  {
    "text": "implement the kind of policy today right like you would need to somehow get the data from the database into OPA and then",
    "start": "1630770",
    "end": "1636299"
  },
  {
    "text": "ask it every for every single record or every single pet whether it should be presented wrong whether it should be allowed to be seen now and it turns out",
    "start": "1636299",
    "end": "1644760"
  },
  {
    "text": "that it's actually really hard to do that in a way that's proposed like performant and scalable and maintainable and correct and and that follows that",
    "start": "1644760",
    "end": "1651750"
  },
  {
    "text": "the applications consistency model because in order so basically the",
    "start": "1651750",
    "end": "1658020"
  },
  {
    "text": "problem is that in order to render that kind of a decision Oba has to ask to have access to that data and so instead",
    "start": "1658020",
    "end": "1664260"
  },
  {
    "text": "what we're gonna do instead of moving the the data to OPA to the policy we're",
    "start": "1664260",
    "end": "1669480"
  },
  {
    "text": "going to move the policy down to where the data is stored so the way this works is that it leverages a feature from OPA",
    "start": "1669480",
    "end": "1677280"
  },
  {
    "text": "called partial evaluation and what partial evaluation does is it allows the pet detail service or any service to ask",
    "start": "1677280",
    "end": "1683040"
  },
  {
    "text": "what are the conditions that should be applied to this request and then when OPA runs and it evaluates the policy it",
    "start": "1683040",
    "end": "1689880"
  },
  {
    "text": "basically returns a very simplified form of that policy just a set of conditions like ands and ORS over attributes that",
    "start": "1689880",
    "end": "1696150"
  },
  {
    "text": "can be easily translated into like a sequel where clause or appended on to a sequel where clause and so this way you",
    "start": "1696150",
    "end": "1703290"
  },
  {
    "text": "push the policy enforcement down into the database which means that the policies can be enforced in a manner",
    "start": "1703290",
    "end": "1709950"
  },
  {
    "text": "that is performant and scalable and it adheres to the consistent groups consistency requirements of the application so again I was going to do a",
    "start": "1709950",
    "end": "1717630"
  },
  {
    "text": "demo here and I don't think it gonna be very compelling without a UI but if you're interested go to this",
    "start": "1717630",
    "end": "1725279"
  },
  {
    "text": "repository under my username and you can just run this if you want it'll it'll",
    "start": "1725279",
    "end": "1730919"
  },
  {
    "text": "show you how you can basically implement data filtering policies with OPA so if",
    "start": "1730919",
    "end": "1738210"
  },
  {
    "text": "you're interested in more details about how this works we have a blog post on blog dat open policy agent org that goes into much more detail if you're",
    "start": "1738210",
    "end": "1744390"
  },
  {
    "text": "interested I recommend you check that out so the takeaway here is that authorization is heavy-lifting right",
    "start": "1744390",
    "end": "1750330"
  },
  {
    "text": "it's a hard problem to solve but every app has to solve it in order for it to be successful in order for it to be secure hopefully we can get past the",
    "start": "1750330",
    "end": "1758010"
  },
  {
    "text": "point where everybody has to re-implement this stuff all the time and so the next time you're thinking about implementing authorization maybe think",
    "start": "1758010",
    "end": "1764940"
  },
  {
    "text": "about it a little bit differently you can check out the open policy agent online we have a bunch of documentation to help you learn about it and we also",
    "start": "1764940",
    "end": "1771419"
  },
  {
    "text": "have a number of integrations with all kinds of projects in the ecosystem so it's not limited to just API authorization you can use it for all",
    "start": "1771419",
    "end": "1777179"
  },
  {
    "text": "kinds of things like admission control and kubernetes for example you can even use it at the host level with Pam and",
    "start": "1777179",
    "end": "1783419"
  },
  {
    "text": "SSH and sudo if you want to lock down access on it on an individual machine so thank you very much we have a slack org",
    "start": "1783419",
    "end": "1790799"
  },
  {
    "text": "if you're interested in policy and an opah check it out the code is online on github and yeah thank you very much I",
    "start": "1790799",
    "end": "1798190"
  },
  {
    "text": "[Applause] think we have like a minute for questions but I'm happy to talk",
    "start": "1798190",
    "end": "1804840"
  },
  {
    "text": "afterwards as well",
    "start": "1804840",
    "end": "1807528"
  },
  {
    "text": "the question is how do you test the policies yes so memory we arrived policy",
    "start": "1819130",
    "end": "1824649"
  },
  {
    "text": "authorization code so we are unit test to ensure the positive correct yep",
    "start": "1824649",
    "end": "1831500"
  },
  {
    "text": "now you decouple this code part of the code from our code base and into this",
    "start": "1831500",
    "end": "1838279"
  },
  {
    "text": "policy file so how do you ensure your policy is correct so we have a bunch of",
    "start": "1838279",
    "end": "1844669"
  },
  {
    "text": "like static analysis and semantic checks that you can run on the policies offline so that just does it automatically for",
    "start": "1844669",
    "end": "1849950"
  },
  {
    "text": "you but open also has a test framework so you can actually write tests for your policies and then have them executed and",
    "start": "1849950",
    "end": "1856429"
  },
  {
    "text": "verify that they're correct so it turns out that when you're writing tests for open policies them they're fairly easy",
    "start": "1856429",
    "end": "1861860"
  },
  {
    "text": "to write it's just pure logic over data so let's say it's actually some people who actually said it's enjoyable but",
    "start": "1861860",
    "end": "1867740"
  },
  {
    "text": "yeah okay how do you decouple routing",
    "start": "1867740",
    "end": "1877070"
  },
  {
    "text": "logic from the OPA middle airplane let's say like the weird friend routes need different enforcement yeah so how do you",
    "start": "1877070",
    "end": "1885289"
  },
  {
    "text": "do it like so usually what comes in the input to OPA is like the path for example it's being accessed and then",
    "start": "1885289",
    "end": "1891260"
  },
  {
    "text": "inside the policy you make decisions based on that path for example so you can actually supply arbitrary JSON accurately attributes into OPA the path",
    "start": "1891260",
    "end": "1897380"
  },
  {
    "text": "could be one of those and then you could route based on that yeah exactly but then it's not the couple with the application right entirely well I guess",
    "start": "1897380",
    "end": "1903769"
  },
  {
    "text": "it's a couple do they eat the public API of the application yeah yeah you can't get around that",
    "start": "1903769",
    "end": "1909070"
  },
  {
    "text": "okay any other questions nope okay well",
    "start": "1909070",
    "end": "1915110"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "1915110",
    "end": "1922559"
  }
]