[
  {
    "start": "0",
    "end": "111000"
  },
  {
    "text": "hi everyone this is pauline and dave",
    "start": "2399",
    "end": "4400"
  },
  {
    "text": "talking from kubecon about securing your",
    "start": "4400",
    "end": "6560"
  },
  {
    "text": "cluster to cluster traffic the agnostic",
    "start": "6560",
    "end": "8880"
  },
  {
    "text": "way",
    "start": "8880",
    "end": "9760"
  },
  {
    "text": "dave and i work for workday which is a",
    "start": "9760",
    "end": "11759"
  },
  {
    "text": "provider of human resources and",
    "start": "11759",
    "end": "13440"
  },
  {
    "text": "financial system",
    "start": "13440",
    "end": "15120"
  },
  {
    "text": "a couple of years ago workday decided to",
    "start": "15120",
    "end": "17520"
  },
  {
    "text": "expand its offering by deploying workday",
    "start": "17520",
    "end": "20080"
  },
  {
    "text": "on the public cloud and for this we",
    "start": "20080",
    "end": "22080"
  },
  {
    "text": "built a platform based on kubernetes",
    "start": "22080",
    "end": "24640"
  },
  {
    "text": "which my colleague dave is part of this",
    "start": "24640",
    "end": "27199"
  },
  {
    "text": "team that is building kubernetes",
    "start": "27199",
    "end": "29039"
  },
  {
    "text": "platform for workday",
    "start": "29039",
    "end": "30800"
  },
  {
    "text": "thanks pauline hey folks i'm dave care",
    "start": "30800",
    "end": "32880"
  },
  {
    "text": "i'm a software engineer devops on the",
    "start": "32880",
    "end": "34880"
  },
  {
    "text": "silhoue public cloud team here at",
    "start": "34880",
    "end": "36160"
  },
  {
    "text": "workday the sale team is focused around",
    "start": "36160",
    "end": "38399"
  },
  {
    "text": "building uh workday's kubernetes based",
    "start": "38399",
    "end": "40719"
  },
  {
    "text": "cloud platform and you can usually find",
    "start": "40719",
    "end": "43280"
  },
  {
    "text": "me doing things in the gaming tabletop",
    "start": "43280",
    "end": "45520"
  },
  {
    "text": "and ctf space if you want to reach out",
    "start": "45520",
    "end": "47760"
  },
  {
    "text": "or just talk you can find me at",
    "start": "47760",
    "end": "49160"
  },
  {
    "text": "davecare95 on twitter",
    "start": "49160",
    "end": "51760"
  },
  {
    "text": "and i'm pauline i'm an i'm an engineer",
    "start": "51760",
    "end": "54719"
  },
  {
    "text": "in the public cloud infrastructure team",
    "start": "54719",
    "end": "56960"
  },
  {
    "text": "after i spent a number of years working",
    "start": "56960",
    "end": "59120"
  },
  {
    "text": "in the same team as dave",
    "start": "59120",
    "end": "60879"
  },
  {
    "text": "um when there is no pandemic you can",
    "start": "60879",
    "end": "63039"
  },
  {
    "text": "find me in a karaoke room and you can",
    "start": "63039",
    "end": "65280"
  },
  {
    "text": "reach out to me on twitter at filalin",
    "start": "65280",
    "end": "68640"
  },
  {
    "text": "so what to expect from this presentation",
    "start": "68640",
    "end": "71200"
  },
  {
    "text": "well we will give you a use case for a",
    "start": "71200",
    "end": "73280"
  },
  {
    "text": "provider agnostic cluster to cluster",
    "start": "73280",
    "end": "75439"
  },
  {
    "text": "communication",
    "start": "75439",
    "end": "76799"
  },
  {
    "text": "we'll give you an overview of a solution",
    "start": "76799",
    "end": "78720"
  },
  {
    "text": "to secure your cluster to cluster",
    "start": "78720",
    "end": "80720"
  },
  {
    "text": "communication across providers",
    "start": "80720",
    "end": "83200"
  },
  {
    "text": "we will give you a story about what they",
    "start": "83200",
    "end": "85360"
  },
  {
    "text": "incrementally implemented that's all",
    "start": "85360",
    "end": "87360"
  },
  {
    "text": "that solution",
    "start": "87360",
    "end": "88799"
  },
  {
    "text": "will give you an overview of the custom",
    "start": "88799",
    "end": "90880"
  },
  {
    "text": "kubernetes resources and operators",
    "start": "90880",
    "end": "92799"
  },
  {
    "text": "developed in order to implement that",
    "start": "92799",
    "end": "94400"
  },
  {
    "text": "solution and at the end of the slide",
    "start": "94400",
    "end": "96479"
  },
  {
    "text": "deck you will find leaks in order to go",
    "start": "96479",
    "end": "98560"
  },
  {
    "text": "further by yourself",
    "start": "98560",
    "end": "100640"
  },
  {
    "text": "technologies discussed in this talk",
    "start": "100640",
    "end": "102960"
  },
  {
    "text": "include kubernetes of course but also",
    "start": "102960",
    "end": "105840"
  },
  {
    "text": "helm and voi console aws and istio",
    "start": "105840",
    "end": "110720"
  },
  {
    "text": "but first let's see why we need cluster",
    "start": "110720",
    "end": "112799"
  },
  {
    "start": "111000",
    "end": "211000"
  },
  {
    "text": "to cluster communication with my",
    "start": "112799",
    "end": "114640"
  },
  {
    "text": "colleague dave",
    "start": "114640",
    "end": "115840"
  },
  {
    "text": "thanks pauline so closer to cluster",
    "start": "115840",
    "end": "117680"
  },
  {
    "text": "communication why do we need it well",
    "start": "117680",
    "end": "120240"
  },
  {
    "text": "let's look at a sample service its name",
    "start": "120240",
    "end": "122240"
  },
  {
    "text": "is ox it's a service living in cluster",
    "start": "122240",
    "end": "124399"
  },
  {
    "text": "one in data center one and sometimes it",
    "start": "124399",
    "end": "126640"
  },
  {
    "text": "wants to send messages to his family and",
    "start": "126640",
    "end": "128640"
  },
  {
    "text": "friends in cluster 2 in dc2",
    "start": "128640",
    "end": "132160"
  },
  {
    "text": "in the old days ox would use the",
    "start": "132160",
    "end": "133920"
  },
  {
    "text": "public-facing load balancer to reach its",
    "start": "133920",
    "end": "135599"
  },
  {
    "text": "family and friends but as we know",
    "start": "135599",
    "end": "137520"
  },
  {
    "text": "securing public gateway ingress is hard",
    "start": "137520",
    "end": "139760"
  },
  {
    "text": "and the teams had to maintain complex",
    "start": "139760",
    "end": "141599"
  },
  {
    "text": "configurations for these cross cluster",
    "start": "141599",
    "end": "143920"
  },
  {
    "text": "communications",
    "start": "143920",
    "end": "145200"
  },
  {
    "text": "this was not sustainable for the",
    "start": "145200",
    "end": "146800"
  },
  {
    "text": "platform and engineer platform and",
    "start": "146800",
    "end": "148319"
  },
  {
    "text": "infrastructure engineering folks who",
    "start": "148319",
    "end": "150080"
  },
  {
    "text": "needed to maintain these complex",
    "start": "150080",
    "end": "151920"
  },
  {
    "text": "configurations for any new providers and",
    "start": "151920",
    "end": "154080"
  },
  {
    "text": "new regions that we may need to onboard",
    "start": "154080",
    "end": "157280"
  },
  {
    "text": "so what would make the service team the",
    "start": "157280",
    "end": "159680"
  },
  {
    "text": "service and the platform and",
    "start": "159680",
    "end": "160959"
  },
  {
    "text": "infrastructure engineering folks happy",
    "start": "160959",
    "end": "162800"
  },
  {
    "text": "well being able to deliver secure easy",
    "start": "162800",
    "end": "165200"
  },
  {
    "text": "to configure cluster to cluster",
    "start": "165200",
    "end": "166480"
  },
  {
    "text": "communications",
    "start": "166480",
    "end": "168800"
  },
  {
    "text": "so let's look at some of the use cases",
    "start": "168800",
    "end": "171680"
  },
  {
    "text": "at workday we have use cases where",
    "start": "171680",
    "end": "173920"
  },
  {
    "text": "services may need to",
    "start": "173920",
    "end": "175440"
  },
  {
    "text": "move data between different services in",
    "start": "175440",
    "end": "177760"
  },
  {
    "text": "different workday clusters and these",
    "start": "177760",
    "end": "179519"
  },
  {
    "text": "services may be deployed in specific",
    "start": "179519",
    "end": "181280"
  },
  {
    "text": "clusters based on their workload type",
    "start": "181280",
    "end": "183519"
  },
  {
    "text": "cluster type environment type or they",
    "start": "183519",
    "end": "185440"
  },
  {
    "text": "may even be running in kubernetes",
    "start": "185440",
    "end": "187440"
  },
  {
    "text": "clusters not running on the kubernetes",
    "start": "187440",
    "end": "189360"
  },
  {
    "text": "platform at workday but managed by those",
    "start": "189360",
    "end": "191200"
  },
  {
    "text": "teams in their own cloud providers",
    "start": "191200",
    "end": "194879"
  },
  {
    "text": "a sample use case here is moving tenant",
    "start": "194879",
    "end": "197200"
  },
  {
    "text": "data between workday instances the",
    "start": "197200",
    "end": "199280"
  },
  {
    "text": "service needs to be able to move",
    "start": "199280",
    "end": "200400"
  },
  {
    "text": "tentative data between these instances",
    "start": "200400",
    "end": "202400"
  },
  {
    "text": "and this relies on internal apis that we",
    "start": "202400",
    "end": "204560"
  },
  {
    "text": "shouldn't be exposing on the public",
    "start": "204560",
    "end": "206000"
  },
  {
    "text": "gateway to talk a bit more about this",
    "start": "206000",
    "end": "208159"
  },
  {
    "text": "i'm going to have pauline look into this",
    "start": "208159",
    "end": "209599"
  },
  {
    "text": "legacy use case",
    "start": "209599",
    "end": "211280"
  },
  {
    "start": "211000",
    "end": "292000"
  },
  {
    "text": "thank you so let's have a look how",
    "start": "211280",
    "end": "213519"
  },
  {
    "text": "cluster to cluster communication worked",
    "start": "213519",
    "end": "216239"
  },
  {
    "text": "in the legacy world",
    "start": "216239",
    "end": "218319"
  },
  {
    "text": "so as i mentioned we had",
    "start": "218319",
    "end": "222000"
  },
  {
    "text": "we we had communications that were",
    "start": "222000",
    "end": "224000"
  },
  {
    "text": "private to communication between data",
    "start": "224000",
    "end": "226239"
  },
  {
    "text": "centers but they were set up a dock and",
    "start": "226239",
    "end": "229519"
  },
  {
    "text": "they didn't really scale because as you",
    "start": "229519",
    "end": "232000"
  },
  {
    "text": "added more data centers to the workday",
    "start": "232000",
    "end": "234400"
  },
  {
    "text": "ecosystems we needed to for example",
    "start": "234400",
    "end": "236319"
  },
  {
    "text": "whitelist a lot more ips than we will",
    "start": "236319",
    "end": "238720"
  },
  {
    "text": "than we used to this was okay when we",
    "start": "238720",
    "end": "241760"
  },
  {
    "text": "had a limited number of data centers but",
    "start": "241760",
    "end": "244239"
  },
  {
    "text": "what as we opened new regions and new",
    "start": "244239",
    "end": "246879"
  },
  {
    "text": "clusters in the public cloud this became",
    "start": "246879",
    "end": "249040"
  },
  {
    "text": "harder to manage",
    "start": "249040",
    "end": "250640"
  },
  {
    "text": "additionally we were using a",
    "start": "250640",
    "end": "252400"
  },
  {
    "text": "public-facing load balancer",
    "start": "252400",
    "end": "254400"
  },
  {
    "text": "both for public communication and",
    "start": "254400",
    "end": "256400"
  },
  {
    "text": "internal communication",
    "start": "256400",
    "end": "259199"
  },
  {
    "text": "that load balancer is",
    "start": "259199",
    "end": "261600"
  },
  {
    "text": "one that we call legacy load balancer",
    "start": "261600",
    "end": "263440"
  },
  {
    "text": "internally because we want to retire it",
    "start": "263440",
    "end": "266479"
  },
  {
    "text": "in favor of histo",
    "start": "266479",
    "end": "268320"
  },
  {
    "text": "the reason why we want istio is to",
    "start": "268320",
    "end": "270560"
  },
  {
    "text": "prepare us for the next level of scale",
    "start": "270560",
    "end": "272800"
  },
  {
    "text": "at workday there is also a lot more",
    "start": "272800",
    "end": "275280"
  },
  {
    "text": "reason why we chose this to replace the",
    "start": "275280",
    "end": "277440"
  },
  {
    "text": "legacy load balancer and if you want to",
    "start": "277440",
    "end": "279919"
  },
  {
    "text": "learn more on the implementation of pceo",
    "start": "279919",
    "end": "282560"
  },
  {
    "text": "for public ingress at workday we have a",
    "start": "282560",
    "end": "285040"
  },
  {
    "text": "link at the end of this slide to another",
    "start": "285040",
    "end": "287199"
  },
  {
    "text": "talk of us when we talk a lot more in",
    "start": "287199",
    "end": "289040"
  },
  {
    "text": "depth about why we chose this year",
    "start": "289040",
    "end": "292720"
  },
  {
    "start": "292000",
    "end": "541000"
  },
  {
    "text": "so first my colleague dave will tell you",
    "start": "292880",
    "end": "295280"
  },
  {
    "text": "a bit more about the use of istio",
    "start": "295280",
    "end": "297919"
  },
  {
    "text": "thanks pauline for covering that use",
    "start": "297919",
    "end": "299440"
  },
  {
    "text": "case so yeah",
    "start": "299440",
    "end": "300960"
  },
  {
    "text": "why istio well",
    "start": "300960",
    "end": "303280"
  },
  {
    "text": "uh",
    "start": "303280",
    "end": "305360"
  },
  {
    "text": "well apologies so yeah what what is seo",
    "start": "305360",
    "end": "308160"
  },
  {
    "text": "istio is an open source platform",
    "start": "308160",
    "end": "309680"
  },
  {
    "text": "independent service mesh that provides",
    "start": "309680",
    "end": "311520"
  },
  {
    "text": "traffic management policy enforcement",
    "start": "311520",
    "end": "313120"
  },
  {
    "text": "and telemetry collection",
    "start": "313120",
    "end": "314720"
  },
  {
    "text": "it was developed by google ibm and lyft",
    "start": "314720",
    "end": "317039"
  },
  {
    "text": "and it's a control plane for envoy",
    "start": "317039",
    "end": "318720"
  },
  {
    "text": "proxies it lets you manage your",
    "start": "318720",
    "end": "321280"
  },
  {
    "text": "networking resources as a set of custom",
    "start": "321280",
    "end": "323600"
  },
  {
    "text": "kubernetes custom resource definitions",
    "start": "323600",
    "end": "325840"
  },
  {
    "text": "that deliver solutions for ingress",
    "start": "325840",
    "end": "327919"
  },
  {
    "text": "egress and in-mesh traffic and istio",
    "start": "327919",
    "end": "330720"
  },
  {
    "text": "control plane itself runs inside the",
    "start": "330720",
    "end": "332320"
  },
  {
    "text": "kubernetes cluster",
    "start": "332320",
    "end": "334880"
  },
  {
    "text": "so as i mentioned istio is a control",
    "start": "334880",
    "end": "336880"
  },
  {
    "text": "plane for envoy proxies an envoy is a",
    "start": "336880",
    "end": "339360"
  },
  {
    "text": "high performance proxy designed for",
    "start": "339360",
    "end": "341199"
  },
  {
    "text": "cloud native applications it was",
    "start": "341199",
    "end": "342800"
  },
  {
    "text": "developed by lyft it's open source like",
    "start": "342800",
    "end": "344720"
  },
  {
    "text": "istio it's cloud agnostic and in istio's",
    "start": "344720",
    "end": "348000"
  },
  {
    "text": "deployment of envoy also known as istio",
    "start": "348000",
    "end": "349919"
  },
  {
    "text": "proxies they are deployed as sidecar",
    "start": "349919",
    "end": "351919"
  },
  {
    "text": "containers alongside your main",
    "start": "351919",
    "end": "353199"
  },
  {
    "text": "application container in your own",
    "start": "353199",
    "end": "354960"
  },
  {
    "text": "workloads you may be deploying sidecar",
    "start": "354960",
    "end": "357039"
  },
  {
    "text": "containers for things such as metrics",
    "start": "357039",
    "end": "358880"
  },
  {
    "text": "monitoring or logging",
    "start": "358880",
    "end": "360479"
  },
  {
    "text": "and you can think of envoy proxy or",
    "start": "360479",
    "end": "362560"
  },
  {
    "text": "istio proxy in this case as a sidecar",
    "start": "362560",
    "end": "364639"
  },
  {
    "text": "for networking managing all your main",
    "start": "364639",
    "end": "366479"
  },
  {
    "text": "application containers inbound and",
    "start": "366479",
    "end": "368160"
  },
  {
    "text": "outbound traffic",
    "start": "368160",
    "end": "370960"
  },
  {
    "text": "so why did we pick istio and envoy",
    "start": "372000",
    "end": "375919"
  },
  {
    "text": "as you can see from this cncf survey",
    "start": "375919",
    "end": "378000"
  },
  {
    "text": "from 2020 istio is one of the most used",
    "start": "378000",
    "end": "381039"
  },
  {
    "text": "service mesh solutions being run in",
    "start": "381039",
    "end": "383120"
  },
  {
    "text": "production today by many large companies",
    "start": "383120",
    "end": "387039"
  },
  {
    "text": "and as i previously mentioned envoy is",
    "start": "387440",
    "end": "389759"
  },
  {
    "text": "the underlying service proxy for istio",
    "start": "389759",
    "end": "392800"
  },
  {
    "text": "so it only made sense from a development",
    "start": "392800",
    "end": "394400"
  },
  {
    "text": "standpoint that we stick to a single",
    "start": "394400",
    "end": "396240"
  },
  {
    "text": "technology in order to reduce the number",
    "start": "396240",
    "end": "398160"
  },
  {
    "text": "of technologies needed",
    "start": "398160",
    "end": "399680"
  },
  {
    "text": "need in order to reduce the number of",
    "start": "399680",
    "end": "401520"
  },
  {
    "text": "technologies that an engineer is",
    "start": "401520",
    "end": "403039"
  },
  {
    "text": "required to know in order to run and",
    "start": "403039",
    "end": "404639"
  },
  {
    "text": "maintain the platform",
    "start": "404639",
    "end": "406400"
  },
  {
    "text": "so",
    "start": "406400",
    "end": "407680"
  },
  {
    "text": "that sounds great and all but how does",
    "start": "407680",
    "end": "409360"
  },
  {
    "text": "the little locks actually use these",
    "start": "409360",
    "end": "411199"
  },
  {
    "text": "technologies to send messages to its",
    "start": "411199",
    "end": "413120"
  },
  {
    "text": "family located in cluster 2 in data",
    "start": "413120",
    "end": "415199"
  },
  {
    "text": "center 2.",
    "start": "415199",
    "end": "417759"
  },
  {
    "text": "so for example",
    "start": "417840",
    "end": "419840"
  },
  {
    "text": "we have that user who is trying to reach",
    "start": "419840",
    "end": "422080"
  },
  {
    "text": "the internal uri",
    "start": "422080",
    "end": "423759"
  },
  {
    "text": "that user is not a valid workday server",
    "start": "423759",
    "end": "426800"
  },
  {
    "text": "and therefore the public well the load",
    "start": "426800",
    "end": "428960"
  },
  {
    "text": "balancers that we use will refuse the",
    "start": "428960",
    "end": "431280"
  },
  {
    "text": "communication and send an error it will",
    "start": "431280",
    "end": "434240"
  },
  {
    "text": "block that communication um but when the",
    "start": "434240",
    "end": "437120"
  },
  {
    "text": "communication is coming from a valid",
    "start": "437120",
    "end": "439840"
  },
  {
    "text": "one-day server then the public load",
    "start": "439840",
    "end": "441520"
  },
  {
    "text": "balancer we'll know to allow this",
    "start": "441520",
    "end": "443360"
  },
  {
    "text": "communication and we'll service it",
    "start": "443360",
    "end": "445680"
  },
  {
    "text": "when we move to istio we where",
    "start": "445680",
    "end": "448880"
  },
  {
    "text": "we found ourselves in a situation where",
    "start": "448880",
    "end": "451199"
  },
  {
    "text": "internal uaris were either blocked for",
    "start": "451199",
    "end": "454400"
  },
  {
    "text": "everyone or a load for everyone there",
    "start": "454400",
    "end": "456800"
  },
  {
    "text": "would have been a way to say that you",
    "start": "456800",
    "end": "459120"
  },
  {
    "text": "know a sample of workday servers are",
    "start": "459120",
    "end": "461280"
  },
  {
    "text": "allowed to query this internal uri and",
    "start": "461280",
    "end": "463680"
  },
  {
    "text": "no one else but",
    "start": "463680",
    "end": "465840"
  },
  {
    "text": "as we knew from experience with the",
    "start": "465840",
    "end": "467520"
  },
  {
    "text": "legacy load balancer maintaining that",
    "start": "467520",
    "end": "469680"
  },
  {
    "text": "configuration",
    "start": "469680",
    "end": "471280"
  },
  {
    "text": "it takes a lot of time takes a lot of",
    "start": "471280",
    "end": "473680"
  },
  {
    "text": "resources and we did not want to carry",
    "start": "473680",
    "end": "475840"
  },
  {
    "text": "over this piece of legacy configuration",
    "start": "475840",
    "end": "479039"
  },
  {
    "text": "additionally",
    "start": "479039",
    "end": "480400"
  },
  {
    "text": "using the same gateway of load balancer",
    "start": "480400",
    "end": "483039"
  },
  {
    "text": "for both public communication and",
    "start": "483039",
    "end": "485759"
  },
  {
    "text": "private communication is something that",
    "start": "485759",
    "end": "488080"
  },
  {
    "text": "we need we wanted to address",
    "start": "488080",
    "end": "490560"
  },
  {
    "text": "so instead of using the public gateway",
    "start": "490560",
    "end": "492960"
  },
  {
    "text": "for private communication we decided to",
    "start": "492960",
    "end": "495199"
  },
  {
    "text": "implement a second eco gateway",
    "start": "495199",
    "end": "497840"
  },
  {
    "text": "specifically for private communication",
    "start": "497840",
    "end": "500720"
  },
  {
    "text": "so that we have a public gateway for all",
    "start": "500720",
    "end": "503280"
  },
  {
    "text": "public communications that everyone can",
    "start": "503280",
    "end": "505520"
  },
  {
    "text": "reach and the private gateway which is",
    "start": "505520",
    "end": "507680"
  },
  {
    "text": "not exposed publicly which is only",
    "start": "507680",
    "end": "510080"
  },
  {
    "text": "accessible for",
    "start": "510080",
    "end": "512000"
  },
  {
    "text": "a subset of the workday services",
    "start": "512000",
    "end": "515518"
  },
  {
    "text": "the way the communication works is that",
    "start": "515519",
    "end": "518240"
  },
  {
    "text": "we were using aws private link aws",
    "start": "518240",
    "end": "522240"
  },
  {
    "text": "private link is an aws service for",
    "start": "522240",
    "end": "525120"
  },
  {
    "text": "securing communication between two aws",
    "start": "525120",
    "end": "528080"
  },
  {
    "text": "data centers so we would have a server",
    "start": "528080",
    "end": "530560"
  },
  {
    "text": "located in a cluster in aws data center",
    "start": "530560",
    "end": "534160"
  },
  {
    "text": "1 sending traffic to aws data center 2",
    "start": "534160",
    "end": "538000"
  },
  {
    "text": "via the aws private link",
    "start": "538000",
    "end": "541680"
  },
  {
    "start": "541000",
    "end": "802000"
  },
  {
    "text": "so finally the little rocks can talk to",
    "start": "541680",
    "end": "544160"
  },
  {
    "text": "its family in aws",
    "start": "544160",
    "end": "546720"
  },
  {
    "text": "but this talk is called securing your",
    "start": "546720",
    "end": "549360"
  },
  {
    "text": "traffic the agnostic way and now we're",
    "start": "549360",
    "end": "552240"
  },
  {
    "text": "talking about using a service which is",
    "start": "552240",
    "end": "554160"
  },
  {
    "text": "available in aws and nowhere else",
    "start": "554160",
    "end": "557279"
  },
  {
    "text": "um so if you were thinking that this",
    "start": "557279",
    "end": "559440"
  },
  {
    "text": "talk is fake news because we are not",
    "start": "559440",
    "end": "561279"
  },
  {
    "text": "going to be agnostic at all you would be",
    "start": "561279",
    "end": "563839"
  },
  {
    "text": "correct however",
    "start": "563839",
    "end": "566080"
  },
  {
    "text": "we use aws private link as a stepping",
    "start": "566080",
    "end": "568800"
  },
  {
    "text": "stone toward a truly agnostic",
    "start": "568800",
    "end": "570640"
  },
  {
    "text": "infrastructure and if you be with us you",
    "start": "570640",
    "end": "573360"
  },
  {
    "text": "will",
    "start": "573360",
    "end": "574160"
  },
  {
    "text": "learn how we got to retire the aws",
    "start": "574160",
    "end": "577680"
  },
  {
    "text": "private link in favor of another",
    "start": "577680",
    "end": "579600"
  },
  {
    "text": "solution which is truly agnostic",
    "start": "579600",
    "end": "582720"
  },
  {
    "text": "on to you dave",
    "start": "582720",
    "end": "584240"
  },
  {
    "text": "so as paulie mentioned the name of this",
    "start": "584240",
    "end": "586080"
  },
  {
    "text": "talk indicates that we should be showing",
    "start": "586080",
    "end": "587680"
  },
  {
    "text": "you a cloud agnostic design for closer",
    "start": "587680",
    "end": "590160"
  },
  {
    "text": "to cluster communications but of course",
    "start": "590160",
    "end": "592240"
  },
  {
    "text": "we had to start somewhere and that use",
    "start": "592240",
    "end": "594080"
  },
  {
    "text": "case was to cover aws to aws",
    "start": "594080",
    "end": "596080"
  },
  {
    "text": "connectivity",
    "start": "596080",
    "end": "597440"
  },
  {
    "text": "for this we developed the aws private",
    "start": "597440",
    "end": "599760"
  },
  {
    "text": "link operator",
    "start": "599760",
    "end": "601200"
  },
  {
    "text": "they west private link operator is a",
    "start": "601200",
    "end": "603040"
  },
  {
    "text": "golang operator built on top of the",
    "start": "603040",
    "end": "604720"
  },
  {
    "text": "operator framework and delivers two",
    "start": "604720",
    "end": "606800"
  },
  {
    "text": "custom resource definitions private link",
    "start": "606800",
    "end": "609120"
  },
  {
    "text": "egress and private link ingress",
    "start": "609120",
    "end": "611200"
  },
  {
    "text": "we also have a service the private link",
    "start": "611200",
    "end": "612800"
  },
  {
    "text": "operator that lives and runs inside the",
    "start": "612800",
    "end": "614640"
  },
  {
    "text": "kubernetes cluster and watches for",
    "start": "614640",
    "end": "616720"
  },
  {
    "text": "creations of either of these resources",
    "start": "616720",
    "end": "618880"
  },
  {
    "text": "once they're created the necessary aid",
    "start": "618880",
    "end": "621040"
  },
  {
    "text": "west resources are realized within the",
    "start": "621040",
    "end": "623440"
  },
  {
    "text": "aws data center that the cluster lives",
    "start": "623440",
    "end": "625839"
  },
  {
    "text": "in",
    "start": "625839",
    "end": "627760"
  },
  {
    "text": "so how do teams go about delivering",
    "start": "627760",
    "end": "630000"
  },
  {
    "text": "these cluster cluster communications",
    "start": "630000",
    "end": "632240"
  },
  {
    "text": "well one of the key things here was that",
    "start": "632240",
    "end": "634079"
  },
  {
    "text": "we ensure that service onboarding is as",
    "start": "634079",
    "end": "636240"
  },
  {
    "text": "easy and as automated as possible",
    "start": "636240",
    "end": "638399"
  },
  {
    "text": "so we don't want to have to be including",
    "start": "638399",
    "end": "640240"
  },
  {
    "text": "platform engineering and infrastructure",
    "start": "640240",
    "end": "641680"
  },
  {
    "text": "folks every time we need to deliver one",
    "start": "641680",
    "end": "643920"
  },
  {
    "text": "of these uh service to service",
    "start": "643920",
    "end": "645600"
  },
  {
    "text": "communications configurations and we",
    "start": "645600",
    "end": "647680"
  },
  {
    "text": "also want to be sure that teams can",
    "start": "647680",
    "end": "649440"
  },
  {
    "text": "deliver this easily so we ensure that",
    "start": "649440",
    "end": "651200"
  },
  {
    "text": "they use a mixture of helm template",
    "start": "651200",
    "end": "652959"
  },
  {
    "text": "configurations as well as per",
    "start": "652959",
    "end": "654959"
  },
  {
    "text": "environment configurations",
    "start": "654959",
    "end": "657839"
  },
  {
    "text": "so how do teams deliver that private",
    "start": "657839",
    "end": "660000"
  },
  {
    "text": "ingress uh private link ingress",
    "start": "660000",
    "end": "661920"
  },
  {
    "text": "configuration that we saw earlier well",
    "start": "661920",
    "end": "664160"
  },
  {
    "text": "service teams deliver that as a raw or",
    "start": "664160",
    "end": "665839"
  },
  {
    "text": "templated kubernetes resource where they",
    "start": "665839",
    "end": "667920"
  },
  {
    "text": "just specify the aws resource name of",
    "start": "667920",
    "end": "670720"
  },
  {
    "text": "the account where the cluster that they",
    "start": "670720",
    "end": "672880"
  },
  {
    "text": "wish to allow ingress from lives in so",
    "start": "672880",
    "end": "675279"
  },
  {
    "text": "in this example you can see they define",
    "start": "675279",
    "end": "677200"
  },
  {
    "text": "a private linking address they give it a",
    "start": "677200",
    "end": "678880"
  },
  {
    "text": "name in this case cluster to ingress",
    "start": "678880",
    "end": "680640"
  },
  {
    "text": "private link and they give it a name",
    "start": "680640",
    "end": "682079"
  },
  {
    "text": "space private links",
    "start": "682079",
    "end": "683760"
  },
  {
    "text": "then down below in the authorized",
    "start": "683760",
    "end": "685120"
  },
  {
    "text": "account section we provide the aws iron",
    "start": "685120",
    "end": "687440"
  },
  {
    "text": "or account or amazon resource name of",
    "start": "687440",
    "end": "689760"
  },
  {
    "text": "the account where cluster one lives so",
    "start": "689760",
    "end": "691839"
  },
  {
    "text": "in this case we're allowing ingress from",
    "start": "691839",
    "end": "694079"
  },
  {
    "text": "from cluster one into cluster two",
    "start": "694079",
    "end": "698160"
  },
  {
    "text": "so now we know",
    "start": "698800",
    "end": "700720"
  },
  {
    "text": "that so now the ox knows how to send",
    "start": "700720",
    "end": "702880"
  },
  {
    "text": "messages to his family but how can we",
    "start": "702880",
    "end": "704640"
  },
  {
    "text": "sure that he received them",
    "start": "704640",
    "end": "706880"
  },
  {
    "text": "well introducing the private gateway",
    "start": "706880",
    "end": "708880"
  },
  {
    "text": "that paulie mentioned earlier so teams",
    "start": "708880",
    "end": "711760"
  },
  {
    "text": "deliver custom istio virtual service",
    "start": "711760",
    "end": "714000"
  },
  {
    "text": "configurations in order to uh be",
    "start": "714000",
    "end": "716720"
  },
  {
    "text": "responsible for the routing for that",
    "start": "716720",
    "end": "718720"
  },
  {
    "text": "service service teams have the",
    "start": "718720",
    "end": "720320"
  },
  {
    "text": "flexibility to add and remove routable",
    "start": "720320",
    "end": "722079"
  },
  {
    "text": "paths request headers with a single pull",
    "start": "722079",
    "end": "724160"
  },
  {
    "text": "request which would be later delivered",
    "start": "724160",
    "end": "725440"
  },
  {
    "text": "to production and they follow an",
    "start": "725440",
    "end": "727200"
  },
  {
    "text": "existing private link fully qualified",
    "start": "727200",
    "end": "729440"
  },
  {
    "text": "domain name template that we provide for",
    "start": "729440",
    "end": "731519"
  },
  {
    "text": "them and this is easy to test with",
    "start": "731519",
    "end": "733440"
  },
  {
    "text": "standard kubernetes tool trains such as",
    "start": "733440",
    "end": "735440"
  },
  {
    "text": "cubesat and helm",
    "start": "735440",
    "end": "737680"
  },
  {
    "text": "so if you're unaware of what an istio",
    "start": "737680",
    "end": "739440"
  },
  {
    "text": "virtual service is it's essentially a",
    "start": "739440",
    "end": "741360"
  },
  {
    "text": "resource that describes how network",
    "start": "741360",
    "end": "743279"
  },
  {
    "text": "traffic should be routed around your",
    "start": "743279",
    "end": "744399"
  },
  {
    "text": "cluster and in this example we see we",
    "start": "744399",
    "end": "746959"
  },
  {
    "text": "provided a name ox and private coms",
    "start": "746959",
    "end": "749120"
  },
  {
    "text": "virtual service we provided that",
    "start": "749120",
    "end": "750880"
  },
  {
    "text": "template at host that we provide a",
    "start": "750880",
    "end": "752560"
  },
  {
    "text": "template for so in this case the fqdn or",
    "start": "752560",
    "end": "754800"
  },
  {
    "text": "fully qualified domain name of the",
    "start": "754800",
    "end": "757040"
  },
  {
    "text": "associated with the private link is",
    "start": "757040",
    "end": "758880"
  },
  {
    "text": "oxen.workdayprivatelink.com",
    "start": "758880",
    "end": "761040"
  },
  {
    "text": "it's deployed in the private gateway as",
    "start": "761040",
    "end": "762880"
  },
  {
    "text": "paulie mentioned earlier and then we",
    "start": "762880",
    "end": "764639"
  },
  {
    "text": "allow two roundabout paths that's slash",
    "start": "764639",
    "end": "766639"
  },
  {
    "text": "internal api and slash secret aux family",
    "start": "766639",
    "end": "769279"
  },
  {
    "text": "stuff so if a service in cluster one",
    "start": "769279",
    "end": "772880"
  },
  {
    "text": "wants to route to",
    "start": "772880",
    "end": "774839"
  },
  {
    "text": "auxin.workday.privatelink.com forward",
    "start": "774839",
    "end": "776240"
  },
  {
    "text": "slash one of those routable paths that",
    "start": "776240",
    "end": "778320"
  },
  {
    "text": "will then be sent on to the destination",
    "start": "778320",
    "end": "780079"
  },
  {
    "text": "service in cluster 2 which in this case",
    "start": "780079",
    "end": "782160"
  },
  {
    "text": "is the ox family service living in the",
    "start": "782160",
    "end": "783920"
  },
  {
    "text": "oxen namespace in that cluster",
    "start": "783920",
    "end": "787839"
  },
  {
    "text": "so",
    "start": "788800",
    "end": "789680"
  },
  {
    "text": "did the ox service mention that their",
    "start": "789680",
    "end": "791680"
  },
  {
    "text": "family is also quite large and that they",
    "start": "791680",
    "end": "793519"
  },
  {
    "text": "can be spread across many data centers",
    "start": "793519",
    "end": "795360"
  },
  {
    "text": "sometimes they may not even know if they",
    "start": "795360",
    "end": "797360"
  },
  {
    "text": "live in an aws data center or or not",
    "start": "797360",
    "end": "802160"
  },
  {
    "start": "802000",
    "end": "848000"
  },
  {
    "text": "so we have covered how to secure your",
    "start": "802720",
    "end": "805360"
  },
  {
    "text": "communication from an edible u.s data",
    "start": "805360",
    "end": "808000"
  },
  {
    "text": "center to another aws data center",
    "start": "808000",
    "end": "811120"
  },
  {
    "text": "but",
    "start": "811120",
    "end": "812000"
  },
  {
    "text": "one day strategy is to be multi-cloud",
    "start": "812000",
    "end": "814959"
  },
  {
    "text": "and",
    "start": "814959",
    "end": "815839"
  },
  {
    "text": "securing the communication from aws to",
    "start": "815839",
    "end": "818320"
  },
  {
    "text": "aws is a good start but it's not",
    "start": "818320",
    "end": "821199"
  },
  {
    "text": "sufficient",
    "start": "821199",
    "end": "822320"
  },
  {
    "text": "for example we may need to secure the",
    "start": "822320",
    "end": "824560"
  },
  {
    "text": "workload between workday's own data",
    "start": "824560",
    "end": "826480"
  },
  {
    "text": "center and aws and you may have seen it",
    "start": "826480",
    "end": "830480"
  },
  {
    "text": "in the news that the strategic",
    "start": "830480",
    "end": "832800"
  },
  {
    "text": "partnership has been signed between",
    "start": "832800",
    "end": "834560"
  },
  {
    "text": "workday and gcp so in the future it's",
    "start": "834560",
    "end": "837680"
  },
  {
    "text": "possible that we'll also need to seek",
    "start": "837680",
    "end": "839440"
  },
  {
    "text": "your communication between workdays on",
    "start": "839440",
    "end": "841279"
  },
  {
    "text": "data center and gcp or even between aws",
    "start": "841279",
    "end": "845199"
  },
  {
    "text": "and gcp so how do we do that well",
    "start": "845199",
    "end": "848639"
  },
  {
    "start": "848000",
    "end": "915000"
  },
  {
    "text": "for this we are leveraging the power of",
    "start": "848639",
    "end": "851120"
  },
  {
    "text": "console",
    "start": "851120",
    "end": "852320"
  },
  {
    "text": "console automates networking for simple",
    "start": "852320",
    "end": "854880"
  },
  {
    "text": "and secure application delivery it has",
    "start": "854880",
    "end": "857519"
  },
  {
    "text": "been developed by hashicorp which is",
    "start": "857519",
    "end": "859760"
  },
  {
    "text": "which has joined the cncf foundation",
    "start": "859760",
    "end": "862079"
  },
  {
    "text": "just last year",
    "start": "862079",
    "end": "863519"
  },
  {
    "text": "it's using enboy as its proxy just like",
    "start": "863519",
    "end": "866560"
  },
  {
    "text": "its ceo and it offers a solution for",
    "start": "866560",
    "end": "869680"
  },
  {
    "text": "multi-platform service mesh which is",
    "start": "869680",
    "end": "871760"
  },
  {
    "text": "true very important to us because we",
    "start": "871760",
    "end": "873680"
  },
  {
    "text": "want to be able to deploy the same mesh",
    "start": "873680",
    "end": "875839"
  },
  {
    "text": "everywhere and it runs inside or outside",
    "start": "875839",
    "end": "879360"
  },
  {
    "text": "the kubernetes cluster",
    "start": "879360",
    "end": "881760"
  },
  {
    "text": "um from our first solution which was",
    "start": "881760",
    "end": "884240"
  },
  {
    "text": "based on the aws private link",
    "start": "884240",
    "end": "887519"
  },
  {
    "text": "we keep the routing of the traffic",
    "start": "887519",
    "end": "889440"
  },
  {
    "text": "within the cluster using this your",
    "start": "889440",
    "end": "891760"
  },
  {
    "text": "private gateway and we keep helm for",
    "start": "891760",
    "end": "894399"
  },
  {
    "text": "packaging and delivering configuration",
    "start": "894399",
    "end": "896800"
  },
  {
    "text": "for",
    "start": "896800",
    "end": "899800"
  },
  {
    "text": "for",
    "start": "899920",
    "end": "900800"
  },
  {
    "text": "internal traffic",
    "start": "900800",
    "end": "903120"
  },
  {
    "text": "networking",
    "start": "903120",
    "end": "904399"
  },
  {
    "text": "we introduce a console cluster which",
    "start": "904399",
    "end": "906720"
  },
  {
    "text": "runs outside the kubernetes cluster in",
    "start": "906720",
    "end": "909760"
  },
  {
    "text": "order to secure data center to data",
    "start": "909760",
    "end": "912160"
  },
  {
    "text": "center communication",
    "start": "912160",
    "end": "915199"
  },
  {
    "start": "915000",
    "end": "1005000"
  },
  {
    "text": "so why did we choose console for this",
    "start": "915199",
    "end": "918160"
  },
  {
    "text": "well it's cloud independent and as i",
    "start": "918160",
    "end": "920880"
  },
  {
    "text": "mentioned we want to be able to deploy",
    "start": "920880",
    "end": "922800"
  },
  {
    "text": "the same solution in aws and in work",
    "start": "922800",
    "end": "925760"
  },
  {
    "text": "days on data center and if it's",
    "start": "925760",
    "end": "927760"
  },
  {
    "text": "necessary we want to be able to deploy",
    "start": "927760",
    "end": "929920"
  },
  {
    "text": "the same solution in gcp or other",
    "start": "929920",
    "end": "932079"
  },
  {
    "text": "clusters or other",
    "start": "932079",
    "end": "934320"
  },
  {
    "text": "cloud providers",
    "start": "934320",
    "end": "936160"
  },
  {
    "text": "um the fact that it's independent from",
    "start": "936160",
    "end": "938639"
  },
  {
    "text": "kubernetes is an advantage for us",
    "start": "938639",
    "end": "942160"
  },
  {
    "text": "because we have applications which",
    "start": "942160",
    "end": "945519"
  },
  {
    "text": "aren't running or will not run or aren't",
    "start": "945519",
    "end": "948079"
  },
  {
    "text": "yet running on kubernetes but they need",
    "start": "948079",
    "end": "950800"
  },
  {
    "text": "to be accessible and so we wanted to",
    "start": "950800",
    "end": "953519"
  },
  {
    "text": "them to be part of the mesh",
    "start": "953519",
    "end": "955440"
  },
  {
    "text": "the fact that conceal runs outside the",
    "start": "955440",
    "end": "957600"
  },
  {
    "text": "kubernetes cluster allows us to link",
    "start": "957600",
    "end": "960880"
  },
  {
    "text": "applications which are running outside",
    "start": "960880",
    "end": "963040"
  },
  {
    "text": "kubernetes to the applications that are",
    "start": "963040",
    "end": "965360"
  },
  {
    "text": "running within kubernetes",
    "start": "965360",
    "end": "967759"
  },
  {
    "text": "and finally um",
    "start": "967759",
    "end": "970480"
  },
  {
    "text": "console is using envoy which is the same",
    "start": "970480",
    "end": "973759"
  },
  {
    "text": "proxy as histio and for us it's very",
    "start": "973759",
    "end": "976079"
  },
  {
    "text": "important because even though we use um",
    "start": "976079",
    "end": "979120"
  },
  {
    "text": "istio within the kubernetes cluster and",
    "start": "979120",
    "end": "981759"
  },
  {
    "text": "council outside the kubernetes cluster",
    "start": "981759",
    "end": "984560"
  },
  {
    "text": "at its car it's still an environment to",
    "start": "984560",
    "end": "986639"
  },
  {
    "text": "enjoy communication we are not changing",
    "start": "986639",
    "end": "989120"
  },
  {
    "text": "the proxy it also means that the",
    "start": "989120",
    "end": "991759"
  },
  {
    "text": "experience that we have from running",
    "start": "991759",
    "end": "994160"
  },
  {
    "text": "envoy",
    "start": "994160",
    "end": "995440"
  },
  {
    "text": "with istio we can reuse some of that",
    "start": "995440",
    "end": "998720"
  },
  {
    "text": "experience to run and boy with console",
    "start": "998720",
    "end": "1001519"
  },
  {
    "text": "um we are running envoy everywhere which",
    "start": "1001519",
    "end": "1003440"
  },
  {
    "text": "is an advantage to us",
    "start": "1003440",
    "end": "1006079"
  },
  {
    "start": "1005000",
    "end": "1082000"
  },
  {
    "text": "there are other advantages into",
    "start": "1006079",
    "end": "1008880"
  },
  {
    "text": "implementing a solution that is platform",
    "start": "1008880",
    "end": "1011199"
  },
  {
    "text": "agnostic",
    "start": "1011199",
    "end": "1012800"
  },
  {
    "text": "services may be exposed from any data",
    "start": "1012800",
    "end": "1015519"
  },
  {
    "text": "center if you have a service that is",
    "start": "1015519",
    "end": "1018800"
  },
  {
    "text": "running in a data center and that you",
    "start": "1018800",
    "end": "1021040"
  },
  {
    "text": "need it to be available everywhere then",
    "start": "1021040",
    "end": "1023759"
  },
  {
    "text": "if you don't communicate within data",
    "start": "1023759",
    "end": "1025678"
  },
  {
    "text": "centers that service will need to be",
    "start": "1025679",
    "end": "1027438"
  },
  {
    "text": "deployed in every single data center in",
    "start": "1027439",
    "end": "1029678"
  },
  {
    "text": "order to be available",
    "start": "1029679",
    "end": "1031438"
  },
  {
    "text": "the fact that you have data centered",
    "start": "1031439",
    "end": "1033600"
  },
  {
    "text": "data center communication allows you to",
    "start": "1033600",
    "end": "1036240"
  },
  {
    "text": "deploy your service in a subset of your",
    "start": "1036240",
    "end": "1038079"
  },
  {
    "text": "data center and to have it",
    "start": "1038079",
    "end": "1040319"
  },
  {
    "text": "available everywhere",
    "start": "1040319",
    "end": "1042400"
  },
  {
    "text": "you may link services offered by",
    "start": "1042400",
    "end": "1044558"
  },
  {
    "text": "different cloud providers say you have a",
    "start": "1044559",
    "end": "1046880"
  },
  {
    "text": "service running in angular us that you",
    "start": "1046880",
    "end": "1048799"
  },
  {
    "text": "want to use in another clock provider",
    "start": "1048799",
    "end": "1051039"
  },
  {
    "text": "it's no problem",
    "start": "1051039",
    "end": "1052480"
  },
  {
    "text": "and finally it's easier to deploy more",
    "start": "1052480",
    "end": "1055360"
  },
  {
    "text": "services across data centers or",
    "start": "1055360",
    "end": "1057039"
  },
  {
    "text": "providers since you are basically",
    "start": "1057039",
    "end": "1059200"
  },
  {
    "text": "deploying the same",
    "start": "1059200",
    "end": "1060960"
  },
  {
    "text": "service everywhere if we had remained",
    "start": "1060960",
    "end": "1063760"
  },
  {
    "text": "with aws private link then we would have",
    "start": "1063760",
    "end": "1066559"
  },
  {
    "text": "needed to achieve the same solution",
    "start": "1066559",
    "end": "1069440"
  },
  {
    "text": "differently in our own data center and",
    "start": "1069440",
    "end": "1072400"
  },
  {
    "text": "in other data centers public cloud",
    "start": "1072400",
    "end": "1075200"
  },
  {
    "text": "providers that we are interested in but",
    "start": "1075200",
    "end": "1077919"
  },
  {
    "text": "we are using the same solution",
    "start": "1077919",
    "end": "1079360"
  },
  {
    "text": "everywhere which makes it easier to",
    "start": "1079360",
    "end": "1080880"
  },
  {
    "text": "deploy",
    "start": "1080880",
    "end": "1082720"
  },
  {
    "start": "1082000",
    "end": "1191000"
  },
  {
    "text": "um",
    "start": "1082720",
    "end": "1083840"
  },
  {
    "text": "some notes about console administer",
    "start": "1083840",
    "end": "1087440"
  },
  {
    "text": "so it's entirely possible to achieve",
    "start": "1087440",
    "end": "1090880"
  },
  {
    "text": "what we're doing with vco using console",
    "start": "1090880",
    "end": "1093760"
  },
  {
    "text": "and the other way around we could have",
    "start": "1093760",
    "end": "1095679"
  },
  {
    "text": "used console to achieve what we are",
    "start": "1095679",
    "end": "1097600"
  },
  {
    "text": "doing with this year",
    "start": "1097600",
    "end": "1099760"
  },
  {
    "text": "however",
    "start": "1099760",
    "end": "1100799"
  },
  {
    "text": "in our setup estio is a lot closer to",
    "start": "1100799",
    "end": "1103679"
  },
  {
    "text": "the application level than console is",
    "start": "1103679",
    "end": "1106240"
  },
  {
    "text": "and there are some of the ecos features",
    "start": "1106240",
    "end": "1108480"
  },
  {
    "text": "that we wanted to make available to the",
    "start": "1108480",
    "end": "1110320"
  },
  {
    "text": "service teams those feature may have",
    "start": "1110320",
    "end": "1113039"
  },
  {
    "text": "been available in console but with more",
    "start": "1113039",
    "end": "1116160"
  },
  {
    "text": "with a more difficult setup estio makes",
    "start": "1116160",
    "end": "1118400"
  },
  {
    "text": "it easier for us to use those services",
    "start": "1118400",
    "end": "1120960"
  },
  {
    "text": "for the service team",
    "start": "1120960",
    "end": "1122880"
  },
  {
    "text": "and",
    "start": "1122880",
    "end": "1123760"
  },
  {
    "text": "likewise when we were reviewing uh the",
    "start": "1123760",
    "end": "1126240"
  },
  {
    "text": "documentation for data center to data",
    "start": "1126240",
    "end": "1128559"
  },
  {
    "text": "center connectivity",
    "start": "1128559",
    "end": "1130320"
  },
  {
    "text": "we found that the consul had better",
    "start": "1130320",
    "end": "1133120"
  },
  {
    "text": "documentation when it comes to running",
    "start": "1133120",
    "end": "1136320"
  },
  {
    "text": "it outside the kubernetes cluster so we",
    "start": "1136320",
    "end": "1139280"
  },
  {
    "text": "decided to go with console for cluster",
    "start": "1139280",
    "end": "1141760"
  },
  {
    "text": "to cluster connectivity",
    "start": "1141760",
    "end": "1145120"
  },
  {
    "text": "and finally they both use and poi so",
    "start": "1145440",
    "end": "1148960"
  },
  {
    "text": "even though we are using different",
    "start": "1148960",
    "end": "1150799"
  },
  {
    "text": "technologies to implement envoy it's",
    "start": "1150799",
    "end": "1152880"
  },
  {
    "text": "still envoy running everywhere",
    "start": "1152880",
    "end": "1155520"
  },
  {
    "text": "so in summary eco is our choice for our",
    "start": "1155520",
    "end": "1158960"
  },
  {
    "text": "kubernetes platform it's easy to",
    "start": "1158960",
    "end": "1161039"
  },
  {
    "text": "implement in kubernetes it comes with a",
    "start": "1161039",
    "end": "1163360"
  },
  {
    "text": "lot of interesting picture for the",
    "start": "1163360",
    "end": "1164960"
  },
  {
    "text": "service teams deploying on the",
    "start": "1164960",
    "end": "1166640"
  },
  {
    "text": "kubernetes platform",
    "start": "1166640",
    "end": "1168559"
  },
  {
    "text": "console",
    "start": "1168559",
    "end": "1169919"
  },
  {
    "text": "we use it to secure dc to dc",
    "start": "1169919",
    "end": "1172559"
  },
  {
    "text": "communication",
    "start": "1172559",
    "end": "1174559"
  },
  {
    "text": "console comes with a mesh gateway way",
    "start": "1174559",
    "end": "1178080"
  },
  {
    "text": "which",
    "start": "1178080",
    "end": "1179039"
  },
  {
    "text": "only purpose is to secure data center to",
    "start": "1179039",
    "end": "1181679"
  },
  {
    "text": "data center communication",
    "start": "1181679",
    "end": "1183600"
  },
  {
    "text": "so this intradc",
    "start": "1183600",
    "end": "1186160"
  },
  {
    "text": "communication is a use is a core use",
    "start": "1186160",
    "end": "1188400"
  },
  {
    "text": "case for console",
    "start": "1188400",
    "end": "1192120"
  },
  {
    "start": "1191000",
    "end": "1222000"
  },
  {
    "text": "so when you deploy console you will be",
    "start": "1192240",
    "end": "1194559"
  },
  {
    "text": "deploying a number of servers um you",
    "start": "1194559",
    "end": "1197039"
  },
  {
    "text": "have a service catalog which is offered",
    "start": "1197039",
    "end": "1199600"
  },
  {
    "text": "via a fleet of console servers you have",
    "start": "1199600",
    "end": "1202799"
  },
  {
    "text": "an ingress gateway which is intercepting",
    "start": "1202799",
    "end": "1205679"
  },
  {
    "text": "the traffic incoming to the console mesh",
    "start": "1205679",
    "end": "1208720"
  },
  {
    "text": "you have a terminating gateway for the",
    "start": "1208720",
    "end": "1210880"
  },
  {
    "text": "traffic leaving the console mesh for",
    "start": "1210880",
    "end": "1213039"
  },
  {
    "text": "example for the traffic going to the seo",
    "start": "1213039",
    "end": "1215360"
  },
  {
    "text": "private gateway",
    "start": "1215360",
    "end": "1217039"
  },
  {
    "text": "and you have a mesh gateway for data",
    "start": "1217039",
    "end": "1219039"
  },
  {
    "text": "center to data center communication",
    "start": "1219039",
    "end": "1222880"
  },
  {
    "start": "1222000",
    "end": "1276000"
  },
  {
    "text": "when services one in dc1 needs to talk",
    "start": "1222880",
    "end": "1225600"
  },
  {
    "text": "to services too in dc2",
    "start": "1225600",
    "end": "1228320"
  },
  {
    "text": "what happens",
    "start": "1228320",
    "end": "1230240"
  },
  {
    "text": "in console is that the console agent",
    "start": "1230240",
    "end": "1232640"
  },
  {
    "text": "will query the concealed server to know",
    "start": "1232640",
    "end": "1234640"
  },
  {
    "text": "where the service is",
    "start": "1234640",
    "end": "1236320"
  },
  {
    "text": "if that service is found within the same",
    "start": "1236320",
    "end": "1238159"
  },
  {
    "text": "data center the query will be rooted via",
    "start": "1238159",
    "end": "1240960"
  },
  {
    "text": "the ingress gateway of cancel",
    "start": "1240960",
    "end": "1243600"
  },
  {
    "text": "if the",
    "start": "1243600",
    "end": "1245039"
  },
  {
    "text": "service is not found within the same",
    "start": "1245039",
    "end": "1246720"
  },
  {
    "text": "data center the query will be routed to",
    "start": "1246720",
    "end": "1249280"
  },
  {
    "text": "the console mesh gateway",
    "start": "1249280",
    "end": "1251679"
  },
  {
    "text": "the mesh gateway novel where services",
    "start": "1251679",
    "end": "1254159"
  },
  {
    "text": "are located and it will root it based on",
    "start": "1254159",
    "end": "1257200"
  },
  {
    "text": "the server name that it gets via",
    "start": "1257200",
    "end": "1259600"
  },
  {
    "text": "snipping the sni which is part of the",
    "start": "1259600",
    "end": "1261840"
  },
  {
    "text": "tls stack",
    "start": "1261840",
    "end": "1263520"
  },
  {
    "text": "the traffic is routed to another mesh",
    "start": "1263520",
    "end": "1265520"
  },
  {
    "text": "gateway",
    "start": "1265520",
    "end": "1266720"
  },
  {
    "text": "using",
    "start": "1266720",
    "end": "1267760"
  },
  {
    "text": "neutral tls to establish truss and the",
    "start": "1267760",
    "end": "1270080"
  },
  {
    "text": "mode the mesh gateways are not",
    "start": "1270080",
    "end": "1272240"
  },
  {
    "text": "decrypting the traffic at this stage",
    "start": "1272240",
    "end": "1276679"
  },
  {
    "text": "in order to leverage the use of the mesh",
    "start": "1277280",
    "end": "1279840"
  },
  {
    "text": "gateway we have created another operator",
    "start": "1279840",
    "end": "1282720"
  },
  {
    "text": "which is called the comms operator",
    "start": "1282720",
    "end": "1285679"
  },
  {
    "text": "the comms operator is looking for",
    "start": "1285679",
    "end": "1288799"
  },
  {
    "text": "custom kubernetes resources of type",
    "start": "1288799",
    "end": "1291200"
  },
  {
    "text": "private ingress or private egress",
    "start": "1291200",
    "end": "1293679"
  },
  {
    "text": "and when it finds a resource it will",
    "start": "1293679",
    "end": "1295600"
  },
  {
    "text": "create the relevant service definition",
    "start": "1295600",
    "end": "1297840"
  },
  {
    "text": "within the console catalog and it will",
    "start": "1297840",
    "end": "1300159"
  },
  {
    "text": "create the relevant ico resources to",
    "start": "1300159",
    "end": "1302559"
  },
  {
    "text": "allow for proper routing of this service",
    "start": "1302559",
    "end": "1304799"
  },
  {
    "text": "within the kubernetes cluster",
    "start": "1304799",
    "end": "1308080"
  },
  {
    "start": "1308000",
    "end": "1358000"
  },
  {
    "text": "so if we look at kind of the bird eye",
    "start": "1308080",
    "end": "1310640"
  },
  {
    "text": "view of our cluster to cluster",
    "start": "1310640",
    "end": "1312320"
  },
  {
    "text": "communication works",
    "start": "1312320",
    "end": "1314080"
  },
  {
    "text": "we have ox in the data center number one",
    "start": "1314080",
    "end": "1317520"
  },
  {
    "text": "which is sending uh queries to aux in",
    "start": "1317520",
    "end": "1320159"
  },
  {
    "text": "data center number two the query will be",
    "start": "1320159",
    "end": "1322960"
  },
  {
    "text": "rooted within the cluster via the",
    "start": "1322960",
    "end": "1325440"
  },
  {
    "text": "internal istio gateway",
    "start": "1325440",
    "end": "1327919"
  },
  {
    "text": "um the istio gateway will send the",
    "start": "1327919",
    "end": "1330320"
  },
  {
    "text": "traffic to the console mesh",
    "start": "1330320",
    "end": "1332480"
  },
  {
    "text": "the console mesh",
    "start": "1332480",
    "end": "1334240"
  },
  {
    "text": "will send the traffic to the mesh",
    "start": "1334240",
    "end": "1336159"
  },
  {
    "text": "gateway which will send the traffic to",
    "start": "1336159",
    "end": "1338000"
  },
  {
    "text": "the mesh gateway of console located in",
    "start": "1338000",
    "end": "1340080"
  },
  {
    "text": "dc2",
    "start": "1340080",
    "end": "1342080"
  },
  {
    "text": "from there it will reach the internal",
    "start": "1342080",
    "end": "1344640"
  },
  {
    "text": "istio gateway of the",
    "start": "1344640",
    "end": "1347360"
  },
  {
    "text": "kubernetes cluster living in data center",
    "start": "1347360",
    "end": "1349520"
  },
  {
    "text": "number two while it will eventually be",
    "start": "1349520",
    "end": "1351760"
  },
  {
    "text": "routed to the ox application living in",
    "start": "1351760",
    "end": "1354000"
  },
  {
    "text": "the second cluster in dc2",
    "start": "1354000",
    "end": "1357919"
  },
  {
    "text": "okay so now the ox has the ability to",
    "start": "1358320",
    "end": "1361039"
  },
  {
    "text": "contact its family and friends",
    "start": "1361039",
    "end": "1362320"
  },
  {
    "text": "regardless of what data center they live",
    "start": "1362320",
    "end": "1364320"
  },
  {
    "text": "in",
    "start": "1364320",
    "end": "1365120"
  },
  {
    "text": "public cloud private cloud or even a",
    "start": "1365120",
    "end": "1366880"
  },
  {
    "text": "cloud provider we don't support you all",
    "start": "1366880",
    "end": "1368880"
  },
  {
    "text": "they have to do is deliver simple",
    "start": "1368880",
    "end": "1370559"
  },
  {
    "text": "configuration to realize secure cluster",
    "start": "1370559",
    "end": "1373280"
  },
  {
    "text": "of cluster communications regardless of",
    "start": "1373280",
    "end": "1375280"
  },
  {
    "text": "where their family or friends might live",
    "start": "1375280",
    "end": "1378000"
  },
  {
    "text": "i think we can all agree that's pretty",
    "start": "1378000",
    "end": "1379600"
  },
  {
    "text": "great",
    "start": "1379600",
    "end": "1381520"
  },
  {
    "start": "1381000",
    "end": "1423000"
  },
  {
    "text": "so in summary in order to implement a",
    "start": "1381520",
    "end": "1384320"
  },
  {
    "text": "secure cluster to cluster communication",
    "start": "1384320",
    "end": "1386720"
  },
  {
    "text": "across data centers we implemented a",
    "start": "1386720",
    "end": "1389200"
  },
  {
    "text": "global addressing scheme so that the",
    "start": "1389200",
    "end": "1391280"
  },
  {
    "text": "teams are the conventional dns to",
    "start": "1391280",
    "end": "1393600"
  },
  {
    "text": "address each other we implemented a",
    "start": "1393600",
    "end": "1395919"
  },
  {
    "text": "private htr gateway for routing the",
    "start": "1395919",
    "end": "1398080"
  },
  {
    "text": "traffic between clusters we implemented",
    "start": "1398080",
    "end": "1400960"
  },
  {
    "text": "console mesh for syncuring data center",
    "start": "1400960",
    "end": "1403039"
  },
  {
    "text": "to data center communication",
    "start": "1403039",
    "end": "1405200"
  },
  {
    "text": "the teams delivering therapy sorry the",
    "start": "1405200",
    "end": "1407440"
  },
  {
    "text": "teams deploying their applications on",
    "start": "1407440",
    "end": "1409039"
  },
  {
    "text": "kubernetes can deliver their",
    "start": "1409039",
    "end": "1410640"
  },
  {
    "text": "configuration via handshakes",
    "start": "1410640",
    "end": "1413039"
  },
  {
    "text": "and we have created operators to",
    "start": "1413039",
    "end": "1415600"
  },
  {
    "text": "dynamically create tear down and update",
    "start": "1415600",
    "end": "1418320"
  },
  {
    "text": "ingress and ingress as required",
    "start": "1418320",
    "end": "1421200"
  },
  {
    "text": "thank you thank you",
    "start": "1421200",
    "end": "1425039"
  }
]