[
  {
    "text": "the grpc route to success my name is",
    "start": "40",
    "end": "2399"
  },
  {
    "text": "aroas Gupta I'm a software engineer at",
    "start": "2399",
    "end": "4720"
  },
  {
    "text": "tet trade and a maintainer on the envoy",
    "start": "4720",
    "end": "6680"
  },
  {
    "text": "Gateway",
    "start": "6680",
    "end": "7960"
  },
  {
    "text": "project and I'm Richard Belleville from",
    "start": "7960",
    "end": "10120"
  },
  {
    "text": "the grpc team at Google this talk is",
    "start": "10120",
    "end": "12799"
  },
  {
    "text": "about the new grpc route resource part",
    "start": "12799",
    "end": "15160"
  },
  {
    "text": "of the Gateway apis this presentation is",
    "start": "15160",
    "end": "17880"
  },
  {
    "text": "a special milestone for GPC route",
    "start": "17880",
    "end": "19880"
  },
  {
    "text": "because after two years it is finally",
    "start": "19880",
    "end": "22199"
  },
  {
    "text": "heading to V1 so we are excited for it",
    "start": "22199",
    "end": "24840"
  },
  {
    "text": "to make its way into the hands of a",
    "start": "24840",
    "end": "26519"
  },
  {
    "text": "bunch of people in the near future",
    "start": "26519",
    "end": "27800"
  },
  {
    "text": "hopefully some of you uh in this talk",
    "start": "27800",
    "end": "30519"
  },
  {
    "text": "we'll be covering the basics of grpc and",
    "start": "30519",
    "end": "33280"
  },
  {
    "text": "the Gateway API for people who are",
    "start": "33280",
    "end": "35480"
  },
  {
    "text": "unfamiliar we'll lay out a few great",
    "start": "35480",
    "end": "37719"
  },
  {
    "text": "reasons to start using grpc route today",
    "start": "37719",
    "end": "40360"
  },
  {
    "text": "and then we'll tease you with a look at",
    "start": "40360",
    "end": "42039"
  },
  {
    "text": "where grpc route may be heading in the",
    "start": "42039",
    "end": "44960"
  },
  {
    "text": "future before we jump into that though",
    "start": "44960",
    "end": "47399"
  },
  {
    "text": "uh I have one thing to plug uh normally",
    "start": "47399",
    "end": "49320"
  },
  {
    "text": "this is where we like to show you all of",
    "start": "49320",
    "end": "50640"
  },
  {
    "text": "the great related talks uh at cucon this",
    "start": "50640",
    "end": "53520"
  },
  {
    "text": "year but as you know we are very close",
    "start": "53520",
    "end": "55520"
  },
  {
    "text": "to the end of things so we only have one",
    "start": "55520",
    "end": "57520"
  },
  {
    "text": "talk to plug right now which is what's",
    "start": "57520",
    "end": "59399"
  },
  {
    "text": "new in GR RPC this is a maintainer talk",
    "start": "59399",
    "end": "62600"
  },
  {
    "text": "run by the grpc team covering everything",
    "start": "62600",
    "end": "65239"
  },
  {
    "text": "that's happened with grpc recently",
    "start": "65239",
    "end": "67080"
  },
  {
    "text": "including a brief mention of the subject",
    "start": "67080",
    "end": "68960"
  },
  {
    "text": "of this talk grpc route and that is",
    "start": "68960",
    "end": "71040"
  },
  {
    "text": "happening immediately after this talk so",
    "start": "71040",
    "end": "72759"
  },
  {
    "text": "if you want to follow me down the hall",
    "start": "72759",
    "end": "74479"
  },
  {
    "text": "I'd love for some of you to join me",
    "start": "74479",
    "end": "77159"
  },
  {
    "text": "there all right let's Dive Right In I",
    "start": "77159",
    "end": "80360"
  },
  {
    "text": "think most of you are probably familiar",
    "start": "80360",
    "end": "81960"
  },
  {
    "text": "with grpc I saw from the show of hands",
    "start": "81960",
    "end": "84320"
  },
  {
    "text": "but for those of you who are new to it",
    "start": "84320",
    "end": "85840"
  },
  {
    "text": "and curious let's start with a brief",
    "start": "85840",
    "end": "88159"
  },
  {
    "text": "recap so grp C is a high performance",
    "start": "88159",
    "end": "91680"
  },
  {
    "text": "remote procedure call or RPC framework",
    "start": "91680",
    "end": "95360"
  },
  {
    "text": "uh you write what are basically function",
    "start": "95360",
    "end": "97240"
  },
  {
    "text": "signatures in a language called protuff",
    "start": "97240",
    "end": "99720"
  },
  {
    "text": "and we will generate code for you that",
    "start": "99720",
    "end": "101720"
  },
  {
    "text": "will efficiently serialize requests send",
    "start": "101720",
    "end": "104600"
  },
  {
    "text": "them over the wire deserialize them on",
    "start": "104600",
    "end": "106640"
  },
  {
    "text": "the other end and then hand them off to",
    "start": "106640",
    "end": "108439"
  },
  {
    "text": "a server that you have written grpc has",
    "start": "108439",
    "end": "111360"
  },
  {
    "text": "a special place in the kubernetes",
    "start": "111360",
    "end": "113000"
  },
  {
    "text": "ecosystem because it's the basis for",
    "start": "113000",
    "end": "114759"
  },
  {
    "text": "many of kubernetes own apis for example",
    "start": "114759",
    "end": "117799"
  },
  {
    "text": "the container storage interface the",
    "start": "117799",
    "end": "120119"
  },
  {
    "text": "networking interface and the upcoming",
    "start": "120119",
    "end": "122240"
  },
  {
    "text": "kni or kubernetes networking reimagined",
    "start": "122240",
    "end": "125119"
  },
  {
    "text": "interface uh beyond the kubernetes",
    "start": "125119",
    "end": "127119"
  },
  {
    "text": "control plane grpc is used by thousands",
    "start": "127119",
    "end": "129759"
  },
  {
    "text": "and thousands of engineering",
    "start": "129759",
    "end": "131120"
  },
  {
    "text": "organizations to get their bites where",
    "start": "131120",
    "end": "132680"
  },
  {
    "text": "they're going and then make sense of",
    "start": "132680",
    "end": "134360"
  },
  {
    "text": "them on the other",
    "start": "134360",
    "end": "136360"
  },
  {
    "text": "end uh for those of you coming from the",
    "start": "136360",
    "end": "138440"
  },
  {
    "text": "rest or Json over HTTP world let's call",
    "start": "138440",
    "end": "141360"
  },
  {
    "text": "out a few key differences between grpc",
    "start": "141360",
    "end": "144239"
  },
  {
    "text": "and HTTP the first big difference is",
    "start": "144239",
    "end": "146680"
  },
  {
    "text": "that grpc is schema that means that you",
    "start": "146680",
    "end": "149239"
  },
  {
    "text": "write your API definition first rather",
    "start": "149239",
    "end": "151720"
  },
  {
    "text": "than as a documentation step your boiler",
    "start": "151720",
    "end": "154160"
  },
  {
    "text": "plate client and server code then gets",
    "start": "154160",
    "end": "156480"
  },
  {
    "text": "generated from that definition GPC uses",
    "start": "156480",
    "end": "159800"
  },
  {
    "text": "protuff for serialization and",
    "start": "159800",
    "end": "161800"
  },
  {
    "text": "deserialization this is a fast space",
    "start": "161800",
    "end": "164159"
  },
  {
    "text": "efficient binary encoding it's great for",
    "start": "164159",
    "end": "167000"
  },
  {
    "text": "Speed and efficiency but it makes it a",
    "start": "167000",
    "end": "168920"
  },
  {
    "text": "little bit more difficult to debug and",
    "start": "168920",
    "end": "170480"
  },
  {
    "text": "to send rpcs manually then there's the",
    "start": "170480",
    "end": "172840"
  },
  {
    "text": "transport grpc is built on top of http2",
    "start": "172840",
    "end": "176200"
  },
  {
    "text": "which solves some of the blemishes of",
    "start": "176200",
    "end": "178080"
  },
  {
    "text": "htp1 grpc does do things a little",
    "start": "178080",
    "end": "180720"
  },
  {
    "text": "differently from browsers with hp2",
    "start": "180720",
    "end": "183239"
  },
  {
    "text": "browsers and rest clients generally only",
    "start": "183239",
    "end": "185640"
  },
  {
    "text": "use hp2 with TLS for plain text",
    "start": "185640",
    "end": "188599"
  },
  {
    "text": "connections which are useful for",
    "start": "188599",
    "end": "190239"
  },
  {
    "text": "debugging or when running in a secure",
    "start": "190239",
    "end": "192400"
  },
  {
    "text": "tunnel transport browsers and HP clients",
    "start": "192400",
    "end": "195519"
  },
  {
    "text": "generally only use http1 but grpc is all",
    "start": "195519",
    "end": "199319"
  },
  {
    "text": "hp2 all the time it's totally normal",
    "start": "199319",
    "end": "201879"
  },
  {
    "text": "with grpc to use hp2 Clear text without",
    "start": "201879",
    "end": "204640"
  },
  {
    "text": "upgrading connection first from htp1",
    "start": "204640",
    "end": "207120"
  },
  {
    "text": "this also factors into the gateway apis",
    "start": "207120",
    "end": "210080"
  },
  {
    "text": "and the final difference I'll highlight",
    "start": "210080",
    "end": "211519"
  },
  {
    "text": "is grpc streaming stream based apis",
    "start": "211519",
    "end": "214680"
  },
  {
    "text": "provide a ton of benefits including",
    "start": "214680",
    "end": "216439"
  },
  {
    "text": "making it much easier to build reactive",
    "start": "216439",
    "end": "218799"
  },
  {
    "text": "applications streaming rpcs can last for",
    "start": "218799",
    "end": "221439"
  },
  {
    "text": "hours or longer but Long Live",
    "start": "221439",
    "end": "223360"
  },
  {
    "text": "Connections can also be a little bit",
    "start": "223360",
    "end": "224799"
  },
  {
    "text": "more difficult to Route jump into that",
    "start": "224799",
    "end": "226519"
  },
  {
    "text": "later and even if you're not using a",
    "start": "226519",
    "end": "228760"
  },
  {
    "text": "streaming RPC uh the grpc library keeps",
    "start": "228760",
    "end": "231400"
  },
  {
    "text": "TCP connections around a lot longer than",
    "start": "231400",
    "end": "233760"
  },
  {
    "text": "most rest clients um we're using that",
    "start": "233760",
    "end": "236079"
  },
  {
    "text": "connection to send multiple rpcs and",
    "start": "236079",
    "end": "238040"
  },
  {
    "text": "saving you the latency of that TCP",
    "start": "238040",
    "end": "239920"
  },
  {
    "text": "handshake again you need to make sure",
    "start": "239920",
    "end": "242079"
  },
  {
    "text": "that your routing handles this well and",
    "start": "242079",
    "end": "244239"
  },
  {
    "text": "with that we'll hand it over to",
    "start": "244239",
    "end": "246200"
  },
  {
    "text": "Arco thanks Richard for the introduction",
    "start": "246200",
    "end": "248360"
  },
  {
    "text": "on grpc now here's a brief introduction",
    "start": "248360",
    "end": "250840"
  },
  {
    "text": "on the Gateway API the Gateway API is a",
    "start": "250840",
    "end": "253560"
  },
  {
    "text": "kubernetes project that started in 2019",
    "start": "253560",
    "end": "256359"
  },
  {
    "text": "that focuses on layer four and layer",
    "start": "256359",
    "end": "257919"
  },
  {
    "text": "seven routing these are apis and require",
    "start": "257919",
    "end": "261160"
  },
  {
    "text": "an implementation to be installed in the",
    "start": "261160",
    "end": "263240"
  },
  {
    "text": "cluster that can consume these apis and",
    "start": "263240",
    "end": "266160"
  },
  {
    "text": "implement the routing Behavior defined",
    "start": "266160",
    "end": "267720"
  },
  {
    "text": "in the",
    "start": "267720",
    "end": "268440"
  },
  {
    "text": "API it's is a successor to the Ingress",
    "start": "268440",
    "end": "270759"
  },
  {
    "text": "API which focus on exposing a service",
    "start": "270759",
    "end": "273160"
  },
  {
    "text": "inside kubernetes to the outside",
    "start": "273160",
    "end": "276160"
  },
  {
    "text": "world as the next generation of Ingress",
    "start": "276160",
    "end": "279120"
  },
  {
    "text": "the Gateway API has managed to make many",
    "start": "279120",
    "end": "281759"
  },
  {
    "text": "improvements it supports multiple",
    "start": "281759",
    "end": "283880"
  },
  {
    "text": "protocols such as HTTP TCP UDP and",
    "start": "283880",
    "end": "288199"
  },
  {
    "text": "grpc it has strongly typed fields for",
    "start": "288199",
    "end": "291039"
  },
  {
    "text": "traffic capabilities such as header",
    "start": "291039",
    "end": "293199"
  },
  {
    "text": "Transformations and traffic",
    "start": "293199",
    "end": "295199"
  },
  {
    "text": "mirroring it splits up the Ingress",
    "start": "295199",
    "end": "297400"
  },
  {
    "text": "intent into multiple smaller resources",
    "start": "297400",
    "end": "300320"
  },
  {
    "text": "the Gateway class that's linked to the",
    "start": "300320",
    "end": "303160"
  },
  {
    "text": "controller that holds common",
    "start": "303160",
    "end": "304960"
  },
  {
    "text": "configuration for a set of gateways the",
    "start": "304960",
    "end": "307479"
  },
  {
    "text": "Gateway that links to the Gateway class",
    "start": "307479",
    "end": "310160"
  },
  {
    "text": "and holds listener",
    "start": "310160",
    "end": "312160"
  },
  {
    "text": "configuration and defines how external",
    "start": "312160",
    "end": "314520"
  },
  {
    "text": "traffic can be accepted into the",
    "start": "314520",
    "end": "317479"
  },
  {
    "text": "cluster then there are the collection of",
    "start": "317479",
    "end": "319440"
  },
  {
    "text": "Route resources defined for each",
    "start": "319440",
    "end": "321280"
  },
  {
    "text": "protocol type like HTTP route TCP route",
    "start": "321280",
    "end": "325080"
  },
  {
    "text": "UDP route TLS route and grpc route that",
    "start": "325080",
    "end": "328319"
  },
  {
    "text": "link to the Gateway to Define routing",
    "start": "328319",
    "end": "330720"
  },
  {
    "text": "and traffic shaping filters allowing",
    "start": "330720",
    "end": "333080"
  },
  {
    "text": "users to match on specific attributes",
    "start": "333080",
    "end": "335800"
  },
  {
    "text": "within the traffic flow so it can route",
    "start": "335800",
    "end": "338039"
  },
  {
    "text": "the traffic to their service",
    "start": "338039",
    "end": "340240"
  },
  {
    "text": "pends these smaller resources can now be",
    "start": "340240",
    "end": "343360"
  },
  {
    "text": "mapped to roles within an",
    "start": "343360",
    "end": "345240"
  },
  {
    "text": "organization for example the Gateway",
    "start": "345240",
    "end": "347919"
  },
  {
    "text": "resource can be used to expose a host",
    "start": "347919",
    "end": "350240"
  },
  {
    "text": "name on a specific port and also specify",
    "start": "350240",
    "end": "352919"
  },
  {
    "text": "tless certificates needed for TLS",
    "start": "352919",
    "end": "354880"
  },
  {
    "text": "termination and",
    "start": "354880",
    "end": "356720"
  },
  {
    "text": "authentication this is something only an",
    "start": "356720",
    "end": "358720"
  },
  {
    "text": "app admin or a cluster operator should",
    "start": "358720",
    "end": "360960"
  },
  {
    "text": "be able to",
    "start": "360960",
    "end": "362120"
  },
  {
    "text": "configure similarly only app developers",
    "start": "362120",
    "end": "365360"
  },
  {
    "text": "have the knowledge to Define routing and",
    "start": "365360",
    "end": "366919"
  },
  {
    "text": "traffic shaping rules for traffic meant",
    "start": "366919",
    "end": "369120"
  },
  {
    "text": "for their service",
    "start": "369120",
    "end": "371039"
  },
  {
    "text": "backends this split now allows the",
    "start": "371039",
    "end": "373919"
  },
  {
    "text": "organization to have isolation at the",
    "start": "373919",
    "end": "375639"
  },
  {
    "text": "resource level while still sharing the",
    "start": "375639",
    "end": "378080"
  },
  {
    "text": "same implementation infrastructure under",
    "start": "378080",
    "end": "380360"
  },
  {
    "text": "the",
    "start": "380360",
    "end": "382520"
  },
  {
    "text": "hood let's talk about Gamma so gamma is",
    "start": "382599",
    "end": "386319"
  },
  {
    "text": "sh for Gateway API for mesh management",
    "start": "386319",
    "end": "389319"
  },
  {
    "text": "and",
    "start": "389319",
    "end": "390360"
  },
  {
    "text": "Administration it was created in 2022 as",
    "start": "390360",
    "end": "393440"
  },
  {
    "text": "part of the Gateway API to focus on",
    "start": "393440",
    "end": "396080"
  },
  {
    "text": "roles and traffic management for East",
    "start": "396080",
    "end": "398599"
  },
  {
    "text": "West",
    "start": "398599",
    "end": "399759"
  },
  {
    "text": "communication there's a big overlap of",
    "start": "399759",
    "end": "402120"
  },
  {
    "text": "routes and policies defined in the",
    "start": "402120",
    "end": "403919"
  },
  {
    "text": "Gateway API for north south and east",
    "start": "403919",
    "end": "406599"
  },
  {
    "text": "west so this move makes a lot of",
    "start": "406599",
    "end": "409360"
  },
  {
    "text": "sense this slide shows one of the API",
    "start": "409360",
    "end": "412199"
  },
  {
    "text": "semantics defined by the gamma working",
    "start": "412199",
    "end": "414120"
  },
  {
    "text": "group there's the service producer the",
    "start": "414120",
    "end": "417240"
  },
  {
    "text": "server and routes like an http route",
    "start": "417240",
    "end": "420199"
  },
  {
    "text": "that can be defined for it the route",
    "start": "420199",
    "end": "422919"
  },
  {
    "text": "links to the producer service using the",
    "start": "422919",
    "end": "425080"
  },
  {
    "text": "parent dra field and defines specific",
    "start": "425080",
    "end": "427759"
  },
  {
    "text": "traffic rules for any traffic meant for",
    "start": "427759",
    "end": "430160"
  },
  {
    "text": "this",
    "start": "430160",
    "end": "431360"
  },
  {
    "text": "producer now any service consumer or",
    "start": "431360",
    "end": "434160"
  },
  {
    "text": "client that's trying to reach this",
    "start": "434160",
    "end": "435919"
  },
  {
    "text": "producer using the services fqdn or",
    "start": "435919",
    "end": "438919"
  },
  {
    "text": "front end that traffic will be will sent",
    "start": "438919",
    "end": "442720"
  },
  {
    "text": "will undergo any matching or",
    "start": "442720",
    "end": "444280"
  },
  {
    "text": "Transformations defined in that",
    "start": "444280",
    "end": "447680"
  },
  {
    "text": "route this background now brings us to",
    "start": "448520",
    "end": "451280"
  },
  {
    "text": "the main topic of this presentation the",
    "start": "451280",
    "end": "453479"
  },
  {
    "text": "grpc route this API was introduced by",
    "start": "453479",
    "end": "456759"
  },
  {
    "text": "Richard from the GPC team in",
    "start": "456759",
    "end": "460680"
  },
  {
    "text": "2022 the API proposal also called a gap",
    "start": "460680",
    "end": "464280"
  },
  {
    "text": "highlights the need for a dedicated API",
    "start": "464280",
    "end": "466639"
  },
  {
    "text": "for routing grpc traffic to the back",
    "start": "466639",
    "end": "469759"
  },
  {
    "text": "end the focus here is on grpc routing",
    "start": "469759",
    "end": "473120"
  },
  {
    "text": "over http2 as a transport and protocol",
    "start": "473120",
    "end": "475960"
  },
  {
    "text": "buffers as the message",
    "start": "475960",
    "end": "478440"
  },
  {
    "text": "format the existing HTTP route could",
    "start": "478440",
    "end": "481520"
  },
  {
    "text": "technically be used to Route grpc",
    "start": "481520",
    "end": "483520"
  },
  {
    "text": "traffic but the addition of a new route",
    "start": "483520",
    "end": "485960"
  },
  {
    "text": "type significantly improves user",
    "start": "485960",
    "end": "489759"
  },
  {
    "text": "experience as you can see on the right",
    "start": "489759",
    "end": "491840"
  },
  {
    "text": "side The Proposal introduces support for",
    "start": "491840",
    "end": "494159"
  },
  {
    "text": "method matchers allowing users to match",
    "start": "494159",
    "end": "496800"
  },
  {
    "text": "on grpc specific constructs such as the",
    "start": "496800",
    "end": "499680"
  },
  {
    "text": "grpc service and",
    "start": "499680",
    "end": "502199"
  },
  {
    "text": "Method this API is currently in Alpha",
    "start": "502199",
    "end": "505319"
  },
  {
    "text": "but it's planning to go to V1 next",
    "start": "505319",
    "end": "508440"
  },
  {
    "text": "month",
    "start": "508440",
    "end": "511159"
  },
  {
    "text": "it's great to see so many",
    "start": "511159",
    "end": "512320"
  },
  {
    "text": "implementations already supporting grpc",
    "start": "512320",
    "end": "514440"
  },
  {
    "text": "route today conformance tests for grpc",
    "start": "514440",
    "end": "517719"
  },
  {
    "text": "Route have been recently added and we're",
    "start": "517719",
    "end": "520080"
  },
  {
    "text": "happy to share that they pass on Contour",
    "start": "520080",
    "end": "522719"
  },
  {
    "text": " and onv",
    "start": "522719",
    "end": "524640"
  },
  {
    "text": "Gateway with multiple implementations",
    "start": "524640",
    "end": "527000"
  },
  {
    "text": "passing conformance tests we've met the",
    "start": "527000",
    "end": "529200"
  },
  {
    "text": "last graduation criteria for grpc",
    "start": "529200",
    "end": "531640"
  },
  {
    "text": "route and with grpc rout going to V1",
    "start": "531640",
    "end": "534160"
  },
  {
    "text": "soon we're hoping more implementations",
    "start": "534160",
    "end": "536600"
  },
  {
    "text": "add support for it so more users can",
    "start": "536600",
    "end": "538760"
  },
  {
    "text": "access it",
    "start": "538760",
    "end": "541440"
  },
  {
    "text": "I admit I might I might have packed too",
    "start": "543920",
    "end": "546000"
  },
  {
    "text": "much information on this slide but I",
    "start": "546000",
    "end": "548279"
  },
  {
    "text": "wanted to highlight the additional",
    "start": "548279",
    "end": "549640"
  },
  {
    "text": "features within an implementation that",
    "start": "549640",
    "end": "552000"
  },
  {
    "text": "can be enabled knowing that grpc route",
    "start": "552000",
    "end": "554800"
  },
  {
    "text": "is configured in the",
    "start": "554800",
    "end": "556920"
  },
  {
    "text": "system the implementation could emit",
    "start": "556920",
    "end": "559320"
  },
  {
    "text": "additional stats for",
    "start": "559320",
    "end": "561760"
  },
  {
    "text": "grpc if the protocol is set to https on",
    "start": "561760",
    "end": "565399"
  },
  {
    "text": "the Gateway listener it can choose to",
    "start": "565399",
    "end": "568079"
  },
  {
    "text": "only support H2 LPN and not support an",
    "start": "568079",
    "end": "571200"
  },
  {
    "text": "upgrade from HTTP",
    "start": "571200",
    "end": "573760"
  },
  {
    "text": "1.1 similarly it could it can it can",
    "start": "573760",
    "end": "577040"
  },
  {
    "text": "directly connect to the backend pods",
    "start": "577040",
    "end": "578839"
  },
  {
    "text": "over http2 without an initial upgrade",
    "start": "578839",
    "end": "581320"
  },
  {
    "text": "from HTTP",
    "start": "581320",
    "end": "583320"
  },
  {
    "text": "1.1 grpc web may be enabled to support",
    "start": "583320",
    "end": "586240"
  },
  {
    "text": "grpc web",
    "start": "586240",
    "end": "588000"
  },
  {
    "text": "traffic least request load balancing can",
    "start": "588000",
    "end": "590760"
  },
  {
    "text": "be enabled by default to spread the load",
    "start": "590760",
    "end": "593079"
  },
  {
    "text": "across pod end",
    "start": "593079",
    "end": "594839"
  },
  {
    "text": "points Richard would elaborate later in",
    "start": "594839",
    "end": "597279"
  },
  {
    "text": "this talk on why this is important",
    "start": "597279",
    "end": "601320"
  },
  {
    "text": "all right thanks Aro uh in addition to",
    "start": "603000",
    "end": "605240"
  },
  {
    "text": "those functional benefits uh GC rout",
    "start": "605240",
    "end": "607519"
  },
  {
    "text": "also provides some great ux improvements",
    "start": "607519",
    "end": "609519"
  },
  {
    "text": "for routing grpc traffic the biggest",
    "start": "609519",
    "end": "611800"
  },
  {
    "text": "Improvement in the current version of",
    "start": "611800",
    "end": "613480"
  },
  {
    "text": "grpc Route is Method matchers uh grpc is",
    "start": "613480",
    "end": "617200"
  },
  {
    "text": "again a remote procedure call system",
    "start": "617200",
    "end": "619480"
  },
  {
    "text": "more or less enables you to call",
    "start": "619480",
    "end": "620680"
  },
  {
    "text": "functions at a remote machine and while",
    "start": "620680",
    "end": "623040"
  },
  {
    "text": "grpc uses hp2 Uris under the hood users",
    "start": "623040",
    "end": "626640"
  },
  {
    "text": "of drpc shouldn't have to know or care",
    "start": "626640",
    "end": "629440"
  },
  {
    "text": "about the way that grpc maps to those",
    "start": "629440",
    "end": "632120"
  },
  {
    "text": "Uris um method matchers let you route",
    "start": "632120",
    "end": "634600"
  },
  {
    "text": "traffic for Individual grpc Services and",
    "start": "634600",
    "end": "637279"
  },
  {
    "text": "grpc methods without having to use those",
    "start": "637279",
    "end": "639600"
  },
  {
    "text": "implementation details of the grpc",
    "start": "639600",
    "end": "641399"
  },
  {
    "text": "protocol so it's pretty common to route",
    "start": "641399",
    "end": "643880"
  },
  {
    "text": "an entire grpc service to the same back",
    "start": "643880",
    "end": "646240"
  },
  {
    "text": "end so if you emit the method method",
    "start": "646240",
    "end": "648480"
  },
  {
    "text": "field that will route the whole service",
    "start": "648480",
    "end": "650560"
  },
  {
    "text": "to that back end it's somewhat less",
    "start": "650560",
    "end": "652959"
  },
  {
    "text": "common but you may have multiple",
    "start": "652959",
    "end": "654920"
  },
  {
    "text": "services that have the same method names",
    "start": "654920",
    "end": "656639"
  },
  {
    "text": "for example a V1 and V2 version of of",
    "start": "656639",
    "end": "659440"
  },
  {
    "text": "the same service in that case you can",
    "start": "659440",
    "end": "662079"
  },
  {
    "text": "omit the service name to Route all rpcs",
    "start": "662079",
    "end": "664120"
  },
  {
    "text": "with the same method name to the same",
    "start": "664120",
    "end": "665920"
  },
  {
    "text": "backend there are a few other ux",
    "start": "665920",
    "end": "668000"
  },
  {
    "text": "improvements that we have planned for",
    "start": "668000",
    "end": "669120"
  },
  {
    "text": "GPC route and we'll touch on those in",
    "start": "669120",
    "end": "671079"
  },
  {
    "text": "just a little",
    "start": "671079",
    "end": "672480"
  },
  {
    "text": "bit now diving into the service mes side",
    "start": "672480",
    "end": "675160"
  },
  {
    "text": "of things um Arco touched on this a few",
    "start": "675160",
    "end": "677440"
  },
  {
    "text": "slides ago with uh the gamma API slide",
    "start": "677440",
    "end": "680160"
  },
  {
    "text": "one of the most confusing things for",
    "start": "680160",
    "end": "681760"
  },
  {
    "text": "folks using grpc on kubernetes is the",
    "start": "681760",
    "end": "684240"
  },
  {
    "text": "long liveed connection aspect I",
    "start": "684240",
    "end": "686079"
  },
  {
    "text": "mentioned a while ago and there have",
    "start": "686079",
    "end": "687240"
  },
  {
    "text": "been several talks uh on this in the",
    "start": "687240",
    "end": "689519"
  },
  {
    "text": "past at cubon and outside of cubon um",
    "start": "689519",
    "end": "692519"
  },
  {
    "text": "when your client creates a new",
    "start": "692519",
    "end": "693560"
  },
  {
    "text": "connection for each outgoing request as",
    "start": "693560",
    "end": "695959"
  },
  {
    "text": "many HP clients do uh you'll go through",
    "start": "695959",
    "end": "698600"
  },
  {
    "text": "a full DNS and routing flow for every",
    "start": "698600",
    "end": "701279"
  },
  {
    "text": "request but since trpc keeps connections",
    "start": "701279",
    "end": "703760"
  },
  {
    "text": "around for as long as possible to",
    "start": "703760",
    "end": "705279"
  },
  {
    "text": "improve performance you only go through",
    "start": "705279",
    "end": "707240"
  },
  {
    "text": "that process perhaps a single time over",
    "start": "707240",
    "end": "708920"
  },
  {
    "text": "the course of an hour now the most",
    "start": "708920",
    "end": "710800"
  },
  {
    "text": "common way to Route requests to a",
    "start": "710800",
    "end": "712079"
  },
  {
    "text": "collection of server pods in kubernetes",
    "start": "712079",
    "end": "713839"
  },
  {
    "text": "is a service with type cluster IP uh",
    "start": "713839",
    "end": "716440"
  },
  {
    "text": "services with type cluster IP get a",
    "start": "716440",
    "end": "718160"
  },
  {
    "text": "virtual IP or a VIP allocated this is",
    "start": "718160",
    "end": "721320"
  },
  {
    "text": "the single IP for that service and when",
    "start": "721320",
    "end": "724040"
  },
  {
    "text": "a TCP connection is made to that IP CU",
    "start": "724040",
    "end": "726600"
  },
  {
    "text": "proxy will balance that connection to",
    "start": "726600",
    "end": "728639"
  },
  {
    "text": "one of the server pods associated with",
    "start": "728639",
    "end": "730480"
  },
  {
    "text": "that service when your client creates a",
    "start": "730480",
    "end": "733040"
  },
  {
    "text": "new connection for each outgoing request",
    "start": "733040",
    "end": "735120"
  },
  {
    "text": "this will result in all of your requests",
    "start": "735120",
    "end": "736920"
  },
  {
    "text": "being balanced across your server pods",
    "start": "736920",
    "end": "739519"
  },
  {
    "text": "so the request load and CPU utilization",
    "start": "739519",
    "end": "741760"
  },
  {
    "text": "should be pretty uniform across all",
    "start": "741760",
    "end": "743519"
  },
  {
    "text": "servers for example suppose you had uh",
    "start": "743519",
    "end": "745839"
  },
  {
    "text": "10 backends and 100 clients each of them",
    "start": "745839",
    "end": "748160"
  },
  {
    "text": "with the same request load then the",
    "start": "748160",
    "end": "749959"
  },
  {
    "text": "request request load across your back",
    "start": "749959",
    "end": "751519"
  },
  {
    "text": "ends might look something like this uh",
    "start": "751519",
    "end": "753480"
  },
  {
    "text": "you can see HTTP gets a relatively",
    "start": "753480",
    "end": "755000"
  },
  {
    "text": "uniform distribution but grpc is much",
    "start": "755000",
    "end": "757760"
  },
  {
    "text": "less so with cluster IP so what's",
    "start": "757760",
    "end": "761480"
  },
  {
    "text": "happening uh we've got a basic setup",
    "start": "761480",
    "end": "763560"
  },
  {
    "text": "here one HTTP client in this case uh",
    "start": "763560",
    "end": "766160"
  },
  {
    "text": "configure to send requests to a service",
    "start": "766160",
    "end": "768000"
  },
  {
    "text": "named Fu the client starts its first",
    "start": "768000",
    "end": "769760"
  },
  {
    "text": "request to Fu and the first thing it",
    "start": "769760",
    "end": "771920"
  },
  {
    "text": "does is send a DNS request for Fu uh",
    "start": "771920",
    "end": "775040"
  },
  {
    "text": "Cube DNS gives the client the virtual IP",
    "start": "775040",
    "end": "777240"
  },
  {
    "text": "I mentioned in this case 10",
    "start": "777240",
    "end": "779639"
  },
  {
    "text": "11 um the client will take that IP and",
    "start": "779639",
    "end": "782320"
  },
  {
    "text": "establish a new TCP connection for the",
    "start": "782320",
    "end": "784839"
  },
  {
    "text": "request now kubernetes will see the VIP",
    "start": "784839",
    "end": "787480"
  },
  {
    "text": "is the destination of the TCP connection",
    "start": "787480",
    "end": "789519"
  },
  {
    "text": "and balance it to one of the backends in",
    "start": "789519",
    "end": "792320"
  },
  {
    "text": "this case the client got connected to",
    "start": "792320",
    "end": "794120"
  },
  {
    "text": "backend one and backend one returns back",
    "start": "794120",
    "end": "796320"
  },
  {
    "text": "the result of request one",
    "start": "796320",
    "end": "798560"
  },
  {
    "text": "good then the HP client sends its second",
    "start": "798560",
    "end": "801199"
  },
  {
    "text": "request it may or may not do another DNS",
    "start": "801199",
    "end": "803680"
  },
  {
    "text": "request depending on caching but it will",
    "start": "803680",
    "end": "805839"
  },
  {
    "text": "almost certainly initiate a new TCP",
    "start": "805839",
    "end": "807800"
  },
  {
    "text": "connection uh kuber ities will ensure",
    "start": "807800",
    "end": "809720"
  },
  {
    "text": "that that connection goes to a backend",
    "start": "809720",
    "end": "811600"
  },
  {
    "text": "in this case",
    "start": "811600",
    "end": "812760"
  },
  {
    "text": "102 great we have already seen a spread",
    "start": "812760",
    "end": "815399"
  },
  {
    "text": "across",
    "start": "815399",
    "end": "816240"
  },
  {
    "text": "backends third request same story yet",
    "start": "816240",
    "end": "818959"
  },
  {
    "text": "another new TCP connection yet another",
    "start": "818959",
    "end": "820839"
  },
  {
    "text": "chance at hitting a different back end",
    "start": "820839",
    "end": "822959"
  },
  {
    "text": "okay so we have recapped how the vast",
    "start": "822959",
    "end": "824480"
  },
  {
    "text": "majority of HTTP traffic in kubernetes",
    "start": "824480",
    "end": "826519"
  },
  {
    "text": "Works what happens when you drop a grpc",
    "start": "826519",
    "end": "828839"
  },
  {
    "text": "client into this picture",
    "start": "828839",
    "end": "830519"
  },
  {
    "text": "instead DNS looks the same the grpc",
    "start": "830519",
    "end": "833279"
  },
  {
    "text": "client asks for Foo and it gets back the",
    "start": "833279",
    "end": "835360"
  },
  {
    "text": "VIP",
    "start": "835360",
    "end": "836639"
  },
  {
    "text": "1011 the first request also looks the",
    "start": "836639",
    "end": "839880"
  },
  {
    "text": "same it's when we hit the second and",
    "start": "839880",
    "end": "842240"
  },
  {
    "text": "third request that we realize things",
    "start": "842240",
    "end": "843959"
  },
  {
    "text": "aren't working the same way as with the",
    "start": "843959",
    "end": "845560"
  },
  {
    "text": "HTP client grpc keeps TCP connections",
    "start": "845560",
    "end": "848560"
  },
  {
    "text": "around for quite a while because setting",
    "start": "848560",
    "end": "850440"
  },
  {
    "text": "them up and tearing them down is costly",
    "start": "850440",
    "end": "852360"
  },
  {
    "text": "in terms of latency CPU costs and",
    "start": "852360",
    "end": "854720"
  },
  {
    "text": "network congestion but because grpc",
    "start": "854720",
    "end": "856800"
  },
  {
    "text": "keeps them around the cluster IP routing",
    "start": "856800",
    "end": "859040"
  },
  {
    "text": "mechanism just isn't super effective as",
    "start": "859040",
    "end": "861560"
  },
  {
    "text": "a result you get some pretty bad",
    "start": "861560",
    "end": "863320"
  },
  {
    "text": "balancing coming back to this graph this",
    "start": "863320",
    "end": "866040"
  },
  {
    "text": "is really just the law of large numbers",
    "start": "866040",
    "end": "867880"
  },
  {
    "text": "if you repeatedly roll a do the chart",
    "start": "867880",
    "end": "869720"
  },
  {
    "text": "showing how many times each face has",
    "start": "869720",
    "end": "871480"
  },
  {
    "text": "showed up is not going to look uniform",
    "start": "871480",
    "end": "873519"
  },
  {
    "text": "until you hit a very a surprisingly",
    "start": "873519",
    "end": "875880"
  },
  {
    "text": "large number of dice rolls in the",
    "start": "875880",
    "end": "877920"
  },
  {
    "text": "example here grpc got 100 rolls of the",
    "start": "877920",
    "end": "880320"
  },
  {
    "text": "die while HTP got 10,000 that's a big",
    "start": "880320",
    "end": "883600"
  },
  {
    "text": "difference and that difference clearly",
    "start": "883600",
    "end": "885480"
  },
  {
    "text": "has implications for load distribution",
    "start": "885480",
    "end": "887560"
  },
  {
    "text": "but of course I'm telling you about this",
    "start": "887560",
    "end": "889199"
  },
  {
    "text": "problem because GPC route makes it",
    "start": "889199",
    "end": "891480"
  },
  {
    "text": "better because the ultimate solution to",
    "start": "891480",
    "end": "893360"
  },
  {
    "text": "this problem is service",
    "start": "893360",
    "end": "895040"
  },
  {
    "text": "mesh service mesh moves all of the",
    "start": "895040",
    "end": "897440"
  },
  {
    "text": "routing decisions directly with a than",
    "start": "897440",
    "end": "899160"
  },
  {
    "text": "the client pod so you will get rock",
    "start": "899160",
    "end": "901000"
  },
  {
    "text": "steady uniform load if that is what you",
    "start": "901000",
    "end": "903320"
  },
  {
    "text": "want and if you don't you can configure",
    "start": "903320",
    "end": "905519"
  },
  {
    "text": "the load balancing to happen exactly the",
    "start": "905519",
    "end": "907000"
  },
  {
    "text": "way that you do want it in the past when",
    "start": "907000",
    "end": "909720"
  },
  {
    "text": "folks have reported this issue to the",
    "start": "909720",
    "end": "911040"
  },
  {
    "text": "grpc team we've recommended service mesh",
    "start": "911040",
    "end": "913079"
  },
  {
    "text": "to them and I've often thought wow that",
    "start": "913079",
    "end": "916079"
  },
  {
    "text": "is a really heavy Hammer service mesh",
    "start": "916079",
    "end": "918880"
  },
  {
    "text": "involves a lot of setup a lot of routing",
    "start": "918880",
    "end": "920839"
  },
  {
    "text": "configuration and that routing",
    "start": "920839",
    "end": "922480"
  },
  {
    "text": "configuration might actually be done",
    "start": "922480",
    "end": "923959"
  },
  {
    "text": "outside of the cluster but now with grpc",
    "start": "923959",
    "end": "926800"
  },
  {
    "text": "route setting up a service matash in",
    "start": "926800",
    "end": "928440"
  },
  {
    "text": "kubernetes has become easy enough that I",
    "start": "928440",
    "end": "930519"
  },
  {
    "text": "no longer feel any hesitation in",
    "start": "930519",
    "end": "932079"
  },
  {
    "text": "recommending it as the solution to this",
    "start": "932079",
    "end": "933680"
  },
  {
    "text": "problem it really is the simplest way to",
    "start": "933680",
    "end": "935880"
  },
  {
    "text": "solve this issue there are a couple of",
    "start": "935880",
    "end": "937720"
  },
  {
    "text": "other more invasive solutions that don't",
    "start": "937720",
    "end": "939720"
  },
  {
    "text": "require service mesh and if you're",
    "start": "939720",
    "end": "941360"
  },
  {
    "text": "interested in those I invite you to",
    "start": "941360",
    "end": "942800"
  },
  {
    "text": "check out the previous talks at cubon",
    "start": "942800",
    "end": "944920"
  },
  {
    "text": "and at other places on this",
    "start": "944920",
    "end": "947720"
  },
  {
    "text": "issue so those are a handful of reasons",
    "start": "947720",
    "end": "950440"
  },
  {
    "text": "why you would choose to use GPC route",
    "start": "950440",
    "end": "952360"
  },
  {
    "text": "today but as soon as the idea of a GC",
    "start": "952360",
    "end": "955040"
  },
  {
    "text": "route resource was brought up the",
    "start": "955040",
    "end": "956600"
  },
  {
    "text": "community was eager to suggest a bunch",
    "start": "956600",
    "end": "958240"
  },
  {
    "text": "of features not all of which made it",
    "start": "958240",
    "end": "960040"
  },
  {
    "text": "into the first revision we've already",
    "start": "960040",
    "end": "961720"
  },
  {
    "text": "touched on a few of those the first is a",
    "start": "961720",
    "end": "963959"
  },
  {
    "text": "feature that's already somewhat real",
    "start": "963959",
    "end": "965800"
  },
  {
    "text": "grpc web trans coding for those of you",
    "start": "965800",
    "end": "968279"
  },
  {
    "text": "that aren't familiar most browsers do",
    "start": "968279",
    "end": "970360"
  },
  {
    "text": "not implement the full hp2 spec and",
    "start": "970360",
    "end": "973040"
  },
  {
    "text": "therefore they uh can't support the grpc",
    "start": "973040",
    "end": "975680"
  },
  {
    "text": "protocol as it's run in data centers as",
    "start": "975680",
    "end": "978120"
  },
  {
    "text": "a result there's a sibling protocol",
    "start": "978120",
    "end": "979880"
  },
  {
    "text": "called grpc Web that lets you use the",
    "start": "979880",
    "end": "982120"
  },
  {
    "text": "same developer flow as grpc but from the",
    "start": "982120",
    "end": "984600"
  },
  {
    "text": "browser historically you've had to",
    "start": "984600",
    "end": "986959"
  },
  {
    "text": "configure a proxy to do this this trans",
    "start": "986959",
    "end": "989040"
  },
  {
    "text": "coding uh but several implementations of",
    "start": "989040",
    "end": "991560"
  },
  {
    "text": "grpc Route including Envoy Gateway will",
    "start": "991560",
    "end": "994079"
  },
  {
    "text": "actually take incoming grpc web traffic",
    "start": "994079",
    "end": "996639"
  },
  {
    "text": "and automatically transcode it to grpc",
    "start": "996639",
    "end": "999240"
  },
  {
    "text": "proper these implementations are running",
    "start": "999240",
    "end": "1001639"
  },
  {
    "text": "ahead of the spec there's actually",
    "start": "1001639",
    "end": "1003240"
  },
  {
    "text": "nothing in there yet about grpc web",
    "start": "1003240",
    "end": "1005680"
  },
  {
    "text": "transcoding the next step is to use",
    "start": "1005680",
    "end": "1007759"
  },
  {
    "text": "what's out there in the wild as the",
    "start": "1007759",
    "end": "1009079"
  },
  {
    "text": "basis for an extension to the grpc route",
    "start": "1009079",
    "end": "1011319"
  },
  {
    "text": "specification that includes grpc web",
    "start": "1011319",
    "end": "1015600"
  },
  {
    "text": "transcoding very similar to grpc web",
    "start": "1015600",
    "end": "1017839"
  },
  {
    "text": "transcoding there is is HTTP plus Json",
    "start": "1017839",
    "end": "1020399"
  },
  {
    "text": "or rest transcoding very similar reasons",
    "start": "1020399",
    "end": "1023120"
  },
  {
    "text": "for this as for grpc web some people",
    "start": "1023120",
    "end": "1025839"
  },
  {
    "text": "just prefer to use rest from the browser",
    "start": "1025839",
    "end": "1028199"
  },
  {
    "text": "uh these people put HTP annotations in",
    "start": "1028199",
    "end": "1030400"
  },
  {
    "text": "their Proto uh these add extra",
    "start": "1030400",
    "end": "1032720"
  },
  {
    "text": "information that allow a proxy to map",
    "start": "1032720",
    "end": "1034640"
  },
  {
    "text": "certain HTP uis and HTP methods to grpc",
    "start": "1034640",
    "end": "1038160"
  },
  {
    "text": "rpcs so rest in and grpc out in the",
    "start": "1038160",
    "end": "1042319"
  },
  {
    "text": "example here you can see we've mapped",
    "start": "1042319",
    "end": "1044079"
  },
  {
    "text": "our Echo RPC uh to V1 example Echo so so",
    "start": "1044079",
    "end": "1048960"
  },
  {
    "text": "you should be able to hit the Gateway",
    "start": "1048960",
    "end": "1050000"
  },
  {
    "text": "with that URI and trigger a grpc RPC to",
    "start": "1050000",
    "end": "1053360"
  },
  {
    "text": "the back end at the moment the most",
    "start": "1053360",
    "end": "1056039"
  },
  {
    "text": "common way that people accomplish this",
    "start": "1056039",
    "end": "1057960"
  },
  {
    "text": "is to generate proxy code from their",
    "start": "1057960",
    "end": "1059760"
  },
  {
    "text": "Proto compile that into a binary deploy",
    "start": "1059760",
    "end": "1062480"
  },
  {
    "text": "the binary into their cluster and",
    "start": "1062480",
    "end": "1064200"
  },
  {
    "text": "configure traffic through that proxy",
    "start": "1064200",
    "end": "1066080"
  },
  {
    "text": "exhausting right well the idea here",
    "start": "1066080",
    "end": "1068360"
  },
  {
    "text": "would be to add a single Boolean knob to",
    "start": "1068360",
    "end": "1070919"
  },
  {
    "text": "grpc route that says hey give me rest in",
    "start": "1070919",
    "end": "1073400"
  },
  {
    "text": "and grpc out and voila the Gateway API",
    "start": "1073400",
    "end": "1076320"
  },
  {
    "text": "controller that you've installed will",
    "start": "1076320",
    "end": "1077840"
  },
  {
    "text": "take care of all of that for you for",
    "start": "1077840",
    "end": "1080520"
  },
  {
    "text": "you and then there's reflection um for",
    "start": "1080520",
    "end": "1083320"
  },
  {
    "text": "those of you who aren't familiar protuff",
    "start": "1083320",
    "end": "1085240"
  },
  {
    "text": "is binary on The Wire so it's difficult",
    "start": "1085240",
    "end": "1087640"
  },
  {
    "text": "to manually craft a grpc request you",
    "start": "1087640",
    "end": "1090320"
  },
  {
    "text": "need the type information in order to",
    "start": "1090320",
    "end": "1092400"
  },
  {
    "text": "send a request to a server from the CLI",
    "start": "1092400",
    "end": "1095200"
  },
  {
    "text": "or from a tool like Postman you can do",
    "start": "1095200",
    "end": "1098000"
  },
  {
    "text": "that by having the protu files on your",
    "start": "1098000",
    "end": "1099640"
  },
  {
    "text": "file system but that's a real pain",
    "start": "1099640",
    "end": "1102760"
  },
  {
    "text": "instead most people make use of the",
    "start": "1102760",
    "end": "1104840"
  },
  {
    "text": "reflection protocol reflection is a",
    "start": "1104840",
    "end": "1107120"
  },
  {
    "text": "secondary service you run on your server",
    "start": "1107120",
    "end": "1109240"
  },
  {
    "text": "that tells clients to type information",
    "start": "1109240",
    "end": "1111039"
  },
  {
    "text": "for that server with a reflection server",
    "start": "1111039",
    "end": "1113880"
  },
  {
    "text": "tools like grp curl just work",
    "start": "1113880",
    "end": "1116919"
  },
  {
    "text": "unfortunately for folks running grpc",
    "start": "1116919",
    "end": "1118720"
  },
  {
    "text": "servers on kubernetes this means that in",
    "start": "1118720",
    "end": "1121080"
  },
  {
    "text": "addition to your application standard",
    "start": "1121080",
    "end": "1122720"
  },
  {
    "text": "RPC Services you also have to route",
    "start": "1122720",
    "end": "1125320"
  },
  {
    "text": "through the reflection service to those",
    "start": "1125320",
    "end": "1127159"
  },
  {
    "text": "servers you wouldn't believe the number",
    "start": "1127159",
    "end": "1129200"
  },
  {
    "text": "of times I've solved people's routing",
    "start": "1129200",
    "end": "1130720"
  },
  {
    "text": "issues by telling them to add a catchall",
    "start": "1130720",
    "end": "1132480"
  },
  {
    "text": "route rule for reflection in the future",
    "start": "1132480",
    "end": "1135360"
  },
  {
    "text": "we'd like to extend grpc route to",
    "start": "1135360",
    "end": "1137280"
  },
  {
    "text": "automatically add routes for reflection",
    "start": "1137280",
    "end": "1139720"
  },
  {
    "text": "probably as an opin feature so stay",
    "start": "1139720",
    "end": "1141840"
  },
  {
    "text": "tuned for",
    "start": "1141840",
    "end": "1143159"
  },
  {
    "text": "that and last but certainly not least",
    "start": "1143159",
    "end": "1146360"
  },
  {
    "text": "there's payload routing this would be a",
    "start": "1146360",
    "end": "1148360"
  },
  {
    "text": "feature where you can route rpcs to",
    "start": "1148360",
    "end": "1150159"
  },
  {
    "text": "different backends based on the contents",
    "start": "1150159",
    "end": "1152520"
  },
  {
    "text": "of your protuff requests this sort of",
    "start": "1152520",
    "end": "1154640"
  },
  {
    "text": "thing isn't super standard with rest",
    "start": "1154640",
    "end": "1156400"
  },
  {
    "text": "because in rest the payload is human",
    "start": "1156400",
    "end": "1158280"
  },
  {
    "text": "readable you have to parse the Json to",
    "start": "1158280",
    "end": "1160360"
  },
  {
    "text": "do this which is pretty expensive but",
    "start": "1160360",
    "end": "1162799"
  },
  {
    "text": "with protuff checking the value of a",
    "start": "1162799",
    "end": "1164520"
  },
  {
    "text": "single field is actually a really",
    "start": "1164520",
    "end": "1166080"
  },
  {
    "text": "inexpensive operation so routing this",
    "start": "1166080",
    "end": "1168280"
  },
  {
    "text": "way isn't prohibitive the sort of thing",
    "start": "1168280",
    "end": "1170280"
  },
  {
    "text": "is done all the time within Google so",
    "start": "1170280",
    "end": "1172440"
  },
  {
    "text": "you can imagine a payload matcher in",
    "start": "1172440",
    "end": "1174120"
  },
  {
    "text": "addition to the method and header",
    "start": "1174120",
    "end": "1175559"
  },
  {
    "text": "matchers that we currently have within",
    "start": "1175559",
    "end": "1177440"
  },
  {
    "text": "grpc route so in this aspirational",
    "start": "1177440",
    "end": "1180039"
  },
  {
    "text": "example uh you see we're matching",
    "start": "1180039",
    "end": "1181760"
  },
  {
    "text": "traffic for the login method only if",
    "start": "1181760",
    "end": "1183799"
  },
  {
    "text": "it's a particular user logging in of",
    "start": "1183799",
    "end": "1186200"
  },
  {
    "text": "course this will require type",
    "start": "1186200",
    "end": "1187520"
  },
  {
    "text": "information so reflection will be",
    "start": "1187520",
    "end": "1189360"
  },
  {
    "text": "required for this there aren't currently",
    "start": "1189360",
    "end": "1192120"
  },
  {
    "text": "any op source implementations for this",
    "start": "1192120",
    "end": "1194120"
  },
  {
    "text": "so it's a little further out than the",
    "start": "1194120",
    "end": "1195679"
  },
  {
    "text": "other potential features that that we've",
    "start": "1195679",
    "end": "1197640"
  },
  {
    "text": "mentioned",
    "start": "1197640",
    "end": "1199400"
  },
  {
    "text": "and that has been our Whirlwind tour of",
    "start": "1199400",
    "end": "1201600"
  },
  {
    "text": "grpc the Gateway API and grpc Route I've",
    "start": "1201600",
    "end": "1204760"
  },
  {
    "text": "been super happy to see how much Gateway",
    "start": "1204760",
    "end": "1206960"
  },
  {
    "text": "API implementations have embraced this",
    "start": "1206960",
    "end": "1208799"
  },
  {
    "text": "resource and now I'm looking forward to",
    "start": "1208799",
    "end": "1210600"
  },
  {
    "text": "seeing users put grpc route into action",
    "start": "1210600",
    "end": "1213200"
  },
  {
    "text": "routing production grpc traffic uh as",
    "start": "1213200",
    "end": "1215919"
  },
  {
    "text": "always we hope that this talk was",
    "start": "1215919",
    "end": "1217240"
  },
  {
    "text": "helpful to you um if you have any",
    "start": "1217240",
    "end": "1219240"
  },
  {
    "text": "feedback that you want to share on this",
    "start": "1219240",
    "end": "1220679"
  },
  {
    "text": "talk please follow that QR code and",
    "start": "1220679",
    "end": "1223159"
  },
  {
    "text": "leave your feedback um so Envoy Gateway",
    "start": "1223159",
    "end": "1226200"
  },
  {
    "text": "has just hit V1 with support for grpc",
    "start": "1226200",
    "end": "1228360"
  },
  {
    "text": "routes thank you for the the",
    "start": "1228360",
    "end": "1229440"
  },
  {
    "text": "contribution in getting us to V1 please",
    "start": "1229440",
    "end": "1231559"
  },
  {
    "text": "go ahead and try that out and then",
    "start": "1231559",
    "end": "1233440"
  },
  {
    "text": "there's jpcc this August in Sunnyville",
    "start": "1233440",
    "end": "1235720"
  },
  {
    "text": "California uh we'd love to see you out",
    "start": "1235720",
    "end": "1237760"
  },
  {
    "text": "there in a couple months if uh you know",
    "start": "1237760",
    "end": "1239880"
  },
  {
    "text": "you want to come discuss GPC in a little",
    "start": "1239880",
    "end": "1241480"
  },
  {
    "text": "bit more detail um also if you want to",
    "start": "1241480",
    "end": "1244120"
  },
  {
    "text": "follow me to the grpc maintainer talk",
    "start": "1244120",
    "end": "1246360"
  },
  {
    "text": "after this we'd be happy to have you",
    "start": "1246360",
    "end": "1247559"
  },
  {
    "text": "there so with that let's move on to any",
    "start": "1247559",
    "end": "1250240"
  },
  {
    "text": "questions you might",
    "start": "1250240",
    "end": "1253000"
  },
  {
    "text": "have",
    "start": "1257600",
    "end": "1260600"
  },
  {
    "text": "thank you very much it was a great talk",
    "start": "1263240",
    "end": "1264960"
  },
  {
    "text": "I have a question is any of this feature",
    "start": "1264960",
    "end": "1266559"
  },
  {
    "text": "actually works in case of TLS encrypted",
    "start": "1266559",
    "end": "1270120"
  },
  {
    "text": "JPC yeah yes so like just all of them or",
    "start": "1270120",
    "end": "1273760"
  },
  {
    "text": "there some limitation like for example",
    "start": "1273760",
    "end": "1275279"
  },
  {
    "text": "I'm particularly interested in this uh",
    "start": "1275279",
    "end": "1278120"
  },
  {
    "text": "pay routing like can you tell in a few",
    "start": "1278120",
    "end": "1281559"
  },
  {
    "text": "words how it works and uh sure so um",
    "start": "1281559",
    "end": "1285360"
  },
  {
    "text": "this is a future Direction This is not",
    "start": "1285360",
    "end": "1286919"
  },
  {
    "text": "implemented or in the spec yet it would",
    "start": "1286919",
    "end": "1289120"
  },
  {
    "text": "be an additional piece that uh we'd work",
    "start": "1289120",
    "end": "1291400"
  },
  {
    "text": "on top of this it out it would work um",
    "start": "1291400",
    "end": "1294279"
  },
  {
    "text": "only with uh TLS termination in this",
    "start": "1294279",
    "end": "1296799"
  },
  {
    "text": "case because obviously you need to see",
    "start": "1296799",
    "end": "1298440"
  },
  {
    "text": "the bytes in order to do the payload",
    "start": "1298440",
    "end": "1299919"
  },
  {
    "text": "routing um but yeah that should",
    "start": "1299919",
    "end": "1302039"
  },
  {
    "text": "theoretically work uh out of the",
    "start": "1302039",
    "end": "1306080"
  },
  {
    "text": "box got another question back there uh",
    "start": "1306279",
    "end": "1309600"
  },
  {
    "text": "you you mentioned that uh service mesh",
    "start": "1309600",
    "end": "1311440"
  },
  {
    "text": "was now a no-brainer solution to the",
    "start": "1311440",
    "end": "1313120"
  },
  {
    "text": "load distribution issue yeah um but it",
    "start": "1313120",
    "end": "1316000"
  },
  {
    "text": "wasn't entirely clear to me why uh you",
    "start": "1316000",
    "end": "1318600"
  },
  {
    "text": "prly mentioned but I must have missed it",
    "start": "1318600",
    "end": "1320039"
  },
  {
    "text": "why it was so much easier to use service",
    "start": "1320039",
    "end": "1322520"
  },
  {
    "text": "mesh now that this had been implemented",
    "start": "1322520",
    "end": "1324520"
  },
  {
    "text": "if you could elaborate on that sure so",
    "start": "1324520",
    "end": "1327200"
  },
  {
    "text": "um two pieces to it um one in the past",
    "start": "1327200",
    "end": "1331400"
  },
  {
    "text": "uh service mesh has been sort of",
    "start": "1331400",
    "end": "1333360"
  },
  {
    "text": "implementation dependent so like if you",
    "start": "1333360",
    "end": "1335720"
  },
  {
    "text": "want to use traffic director you've got",
    "start": "1335720",
    "end": "1337440"
  },
  {
    "text": "to use gcp apis if you want to use ISO",
    "start": "1337440",
    "end": "1339840"
  },
  {
    "text": "you have to use isio specific apis um",
    "start": "1339840",
    "end": "1342919"
  },
  {
    "text": "and that is an additional piece that you",
    "start": "1342919",
    "end": "1344880"
  },
  {
    "text": "have to learn on top of things um the",
    "start": "1344880",
    "end": "1347600"
  },
  {
    "text": "onboarding process for Gateway API",
    "start": "1347600",
    "end": "1349919"
  },
  {
    "text": "service mesh implementations is very",
    "start": "1349919",
    "end": "1352200"
  },
  {
    "text": "TurnKey and so now it's one or two Q",
    "start": "1352200",
    "end": "1355200"
  },
  {
    "text": "control apply commands to get a",
    "start": "1355200",
    "end": "1357080"
  },
  {
    "text": "relatively lightweight thing working the",
    "start": "1357080",
    "end": "1359320"
  },
  {
    "text": "other thing that I'd say is for a lot of",
    "start": "1359320",
    "end": "1360760"
  },
  {
    "text": "people um service mesh has this",
    "start": "1360760",
    "end": "1362159"
  },
  {
    "text": "connotation of uh sidecar proxies that's",
    "start": "1362159",
    "end": "1365279"
  },
  {
    "text": "not at all the case here um grpc",
    "start": "1365279",
    "end": "1367440"
  },
  {
    "text": "supports proxyless service mesh and so",
    "start": "1367440",
    "end": "1369880"
  },
  {
    "text": "you're able to not have a side car but",
    "start": "1369880",
    "end": "1371760"
  },
  {
    "text": "instead have the client process do this",
    "start": "1371760",
    "end": "1375240"
  },
  {
    "text": "uh load balancing Logic for you entirely",
    "start": "1375240",
    "end": "1377840"
  },
  {
    "text": "within your client",
    "start": "1377840",
    "end": "1380240"
  },
  {
    "text": "okay so you're not relying on like some",
    "start": "1380240",
    "end": "1382240"
  },
  {
    "text": "aspect of gamma or anything it's just",
    "start": "1382240",
    "end": "1383760"
  },
  {
    "text": "proxy list grpc as part of the grpc",
    "start": "1383760",
    "end": "1385960"
  },
  {
    "text": "route uh uh type correct and now there's",
    "start": "1385960",
    "end": "1389080"
  },
  {
    "text": "a very simple way to configure that yeah",
    "start": "1389080",
    "end": "1391240"
  },
  {
    "text": "okay cool thanks so",
    "start": "1391240",
    "end": "1394000"
  },
  {
    "text": "much all",
    "start": "1395640",
    "end": "1398320"
  },
  {
    "text": "right one more",
    "start": "1398320",
    "end": "1401759"
  },
  {
    "text": "question hello hello I have a question",
    "start": "1402919",
    "end": "1405720"
  },
  {
    "text": "related to the service mesh that you",
    "start": "1405720",
    "end": "1407799"
  },
  {
    "text": "mentioned at the beginning I wanted to",
    "start": "1407799",
    "end": "1410840"
  },
  {
    "text": "know maybe I missed it but what is the",
    "start": "1410840",
    "end": "1413159"
  },
  {
    "text": "link or the special features related to",
    "start": "1413159",
    "end": "1417440"
  },
  {
    "text": "grpc what causes the what related",
    "start": "1417440",
    "end": "1420720"
  },
  {
    "text": "JPC I I want I would like to understand",
    "start": "1420720",
    "end": "1423640"
  },
  {
    "text": "the link between gamma service mesh that",
    "start": "1423640",
    "end": "1426640"
  },
  {
    "text": "you mentioned and grpc what features or",
    "start": "1426640",
    "end": "1430320"
  },
  {
    "text": "what what what is sure what do we gain",
    "start": "1430320",
    "end": "1433760"
  },
  {
    "text": "around that thank you sure um so in",
    "start": "1433760",
    "end": "1437200"
  },
  {
    "text": "general I would say um service Mash",
    "start": "1437200",
    "end": "1439520"
  },
  {
    "text": "solves the problem with low distribution",
    "start": "1439520",
    "end": "1441760"
  },
  {
    "text": "um gamma gives you a way to configure",
    "start": "1441760",
    "end": "1444200"
  },
  {
    "text": "service mashes in general whether HTP",
    "start": "1444200",
    "end": "1446480"
  },
  {
    "text": "grpc TCP um and now you have the ability",
    "start": "1446480",
    "end": "1450039"
  },
  {
    "text": "since grpc route is in here to configure",
    "start": "1450039",
    "end": "1452559"
  },
  {
    "text": "grpc service meshes via gamma via the",
    "start": "1452559",
    "end": "1456200"
  },
  {
    "text": "Gateway",
    "start": "1456200",
    "end": "1457279"
  },
  {
    "text": "apis just to add to that you have an",
    "start": "1457279",
    "end": "1459400"
  },
  {
    "text": "additional data plane that can do lease",
    "start": "1459400",
    "end": "1461600"
  },
  {
    "text": "request so you can actually distribute",
    "start": "1461600",
    "end": "1463039"
  },
  {
    "text": "the load rather than to lease connection",
    "start": "1463039",
    "end": "1467360"
  },
  {
    "text": "so",
    "start": "1467360",
    "end": "1470360"
  },
  {
    "text": "all right I think that might be it",
    "start": "1474960",
    "end": "1476960"
  },
  {
    "text": "unless anybody else has another",
    "start": "1476960",
    "end": "1481158"
  },
  {
    "text": "question",
    "start": "1485240",
    "end": "1488240"
  }
]