[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "welcome to the continuity introduction",
    "start": "799",
    "end": "2399"
  },
  {
    "text": "and deep dive session",
    "start": "2399",
    "end": "3600"
  },
  {
    "text": "i'm derek mcgowan maintainer on the",
    "start": "3600",
    "end": "5120"
  },
  {
    "text": "community project at apple",
    "start": "5120",
    "end": "6720"
  },
  {
    "text": "i'm joined today by fellow maintainers",
    "start": "6720",
    "end": "8400"
  },
  {
    "text": "phil estes from ibm",
    "start": "8400",
    "end": "9840"
  },
  {
    "text": "michael crosby from apple and way foo",
    "start": "9840",
    "end": "12320"
  },
  {
    "text": "from alibaba",
    "start": "12320",
    "end": "13440"
  },
  {
    "text": "we're going to give you a brief",
    "start": "13440",
    "end": "14480"
  },
  {
    "text": "introduction to community today and deep",
    "start": "14480",
    "end": "16320"
  },
  {
    "text": "dive into various parts of container d",
    "start": "16320",
    "end": "18560"
  },
  {
    "text": "first we're going to discuss what",
    "start": "18560",
    "end": "20000"
  },
  {
    "text": "container d is and why to use it",
    "start": "20000",
    "end": "22240"
  },
  {
    "text": "then we will give an overview of its",
    "start": "22240",
    "end": "23600"
  },
  {
    "text": "architecture we will deep dive into the",
    "start": "23600",
    "end": "25680"
  },
  {
    "text": "new node resource interface",
    "start": "25680",
    "end": "27199"
  },
  {
    "text": "also called nri and continuity's other",
    "start": "27199",
    "end": "29920"
  },
  {
    "text": "plug-in systems",
    "start": "29920",
    "end": "31199"
  },
  {
    "text": "then we will discuss containerity's most",
    "start": "31199",
    "end": "32800"
  },
  {
    "text": "recent release and what's coming up in",
    "start": "32800",
    "end": "34399"
  },
  {
    "text": "future releases",
    "start": "34399",
    "end": "35520"
  },
  {
    "text": "so let's start off by hand that over to",
    "start": "35520",
    "end": "36960"
  },
  {
    "text": "phil hey everyone",
    "start": "36960",
    "end": "39520"
  },
  {
    "text": "i'm phil estes one of the maintainers of",
    "start": "39520",
    "end": "41760"
  },
  {
    "text": "container d",
    "start": "41760",
    "end": "43120"
  },
  {
    "text": "and i'm just going to take you through a",
    "start": "43120",
    "end": "44480"
  },
  {
    "text": "brief introduction to container d",
    "start": "44480",
    "end": "47440"
  },
  {
    "text": "mostly focusing on things that are new",
    "start": "47440",
    "end": "49680"
  },
  {
    "text": "or that we didn't get a chance to touch",
    "start": "49680",
    "end": "51440"
  },
  {
    "text": "on",
    "start": "51440",
    "end": "51760"
  },
  {
    "text": "since it's only been a few months since",
    "start": "51760",
    "end": "54399"
  },
  {
    "text": "the virtual kubecon eu",
    "start": "54399",
    "end": "56719"
  },
  {
    "text": "so let's take a quick look at container",
    "start": "56719",
    "end": "58800"
  },
  {
    "text": "d and a few new items",
    "start": "58800",
    "end": "60719"
  },
  {
    "text": "and let's get started so we always try",
    "start": "60719",
    "end": "63840"
  },
  {
    "start": "63000",
    "end": "63000"
  },
  {
    "text": "and start out",
    "start": "63840",
    "end": "64720"
  },
  {
    "text": "giving a little bit of background on",
    "start": "64720",
    "end": "66799"
  },
  {
    "text": "what container d is",
    "start": "66799",
    "end": "68640"
  },
  {
    "text": "obviously we're a cncf project we're",
    "start": "68640",
    "end": "71680"
  },
  {
    "text": "one of the graduated projects as a",
    "start": "71680",
    "end": "74640"
  },
  {
    "text": "container runtime",
    "start": "74640",
    "end": "76560"
  },
  {
    "text": "and really maybe the best way to see",
    "start": "76560",
    "end": "78799"
  },
  {
    "text": "that is to see us below",
    "start": "78799",
    "end": "81280"
  },
  {
    "text": "higher level platforms like docker or",
    "start": "81280",
    "end": "83680"
  },
  {
    "text": "kubernetes",
    "start": "83680",
    "end": "85119"
  },
  {
    "text": "but above lower level run times",
    "start": "85119",
    "end": "88240"
  },
  {
    "text": "like oci's run c or the various",
    "start": "88240",
    "end": "91520"
  },
  {
    "text": "sandboxes like catacontainers",
    "start": "91520",
    "end": "93920"
  },
  {
    "text": "or firecracker or google's g visor",
    "start": "93920",
    "end": "97600"
  },
  {
    "text": "and so really container d is that",
    "start": "97600",
    "end": "99360"
  },
  {
    "text": "resource manager that can sit between",
    "start": "99360",
    "end": "102000"
  },
  {
    "text": "a higher level platform like the two we",
    "start": "102000",
    "end": "104720"
  },
  {
    "text": "mentioned",
    "start": "104720",
    "end": "105520"
  },
  {
    "text": "and manage things like the processes the",
    "start": "105520",
    "end": "108320"
  },
  {
    "text": "images",
    "start": "108320",
    "end": "109439"
  },
  {
    "text": "the snapshots on the file system all the",
    "start": "109439",
    "end": "111759"
  },
  {
    "text": "metadata about containers and their",
    "start": "111759",
    "end": "113759"
  },
  {
    "text": "dependencies",
    "start": "113759",
    "end": "115439"
  },
  {
    "text": "and i think the important thing there is",
    "start": "115439",
    "end": "116960"
  },
  {
    "text": "that we don't just manage those",
    "start": "116960",
    "end": "118320"
  },
  {
    "text": "resources but the way",
    "start": "118320",
    "end": "119920"
  },
  {
    "text": "container d is designed it's a very",
    "start": "119920",
    "end": "122320"
  },
  {
    "text": "extensible system",
    "start": "122320",
    "end": "123680"
  },
  {
    "text": "and so a lot of the projects that we've",
    "start": "123680",
    "end": "126079"
  },
  {
    "text": "seen use or grow out of container",
    "start": "126079",
    "end": "128000"
  },
  {
    "text": "d have used this extensibility",
    "start": "128000",
    "end": "131120"
  },
  {
    "text": "to great advantage it's also a tightly",
    "start": "131120",
    "end": "133840"
  },
  {
    "text": "scoped project so we don't",
    "start": "133840",
    "end": "135920"
  },
  {
    "text": "change the scope of container d often",
    "start": "135920",
    "end": "137920"
  },
  {
    "text": "the only thing we've really done in the",
    "start": "137920",
    "end": "139599"
  },
  {
    "text": "lifetime of the last four years",
    "start": "139599",
    "end": "141840"
  },
  {
    "text": "is bring in the cri plugin so that",
    "start": "141840",
    "end": "144879"
  },
  {
    "text": "kubernetes had a natural",
    "start": "144879",
    "end": "146640"
  },
  {
    "text": "plug point to use container d as a",
    "start": "146640",
    "end": "148800"
  },
  {
    "text": "runtime",
    "start": "148800",
    "end": "149840"
  },
  {
    "text": "there are a lot of new governed",
    "start": "149840",
    "end": "151120"
  },
  {
    "text": "sub-projects within the container d",
    "start": "151120",
    "end": "153599"
  },
  {
    "text": "repository and organization we now have",
    "start": "153599",
    "end": "156640"
  },
  {
    "text": "a rust",
    "start": "156640",
    "end": "157760"
  },
  {
    "text": "written ttrpc implementation",
    "start": "157760",
    "end": "160879"
  },
  {
    "text": "container encryption implementation",
    "start": "160879",
    "end": "163280"
  },
  {
    "text": "support",
    "start": "163280",
    "end": "164400"
  },
  {
    "text": "a star gz snapshotter which handles",
    "start": "164400",
    "end": "167360"
  },
  {
    "text": "things like lazy image poll",
    "start": "167360",
    "end": "169599"
  },
  {
    "text": "and you're going to be hearing about nri",
    "start": "169599",
    "end": "171680"
  },
  {
    "text": "as well during this presentation",
    "start": "171680",
    "end": "173599"
  },
  {
    "text": "so that gives you a quick snapshot into",
    "start": "173599",
    "end": "176560"
  },
  {
    "text": "what container d is",
    "start": "176560",
    "end": "178720"
  },
  {
    "text": "now we walked through container d's",
    "start": "178720",
    "end": "180560"
  },
  {
    "start": "179000",
    "end": "179000"
  },
  {
    "text": "history in more detail",
    "start": "180560",
    "end": "182560"
  },
  {
    "text": "just a few months ago at kubecon virtual",
    "start": "182560",
    "end": "185200"
  },
  {
    "text": "eu",
    "start": "185200",
    "end": "186000"
  },
  {
    "text": "and you can find that talk on youtube",
    "start": "186000",
    "end": "187760"
  },
  {
    "text": "already but just for a brief history",
    "start": "187760",
    "end": "190080"
  },
  {
    "text": "container d came up alongside docker",
    "start": "190080",
    "end": "192560"
  },
  {
    "text": "it's not a fork or",
    "start": "192560",
    "end": "194319"
  },
  {
    "text": "it doesn't inherit any part of the",
    "start": "194319",
    "end": "195840"
  },
  {
    "text": "docker code base but effectively it grew",
    "start": "195840",
    "end": "198239"
  },
  {
    "text": "from a container supervisor used by",
    "start": "198239",
    "end": "200640"
  },
  {
    "text": "docker",
    "start": "200640",
    "end": "201519"
  },
  {
    "text": "into a full run time in the 2016-2017",
    "start": "201519",
    "end": "205280"
  },
  {
    "text": "era during that time we created",
    "start": "205280",
    "end": "207680"
  },
  {
    "text": "completely new interfaces",
    "start": "207680",
    "end": "209440"
  },
  {
    "text": "for managing containers and images and",
    "start": "209440",
    "end": "211519"
  },
  {
    "text": "then we after defining those in grpc we",
    "start": "211519",
    "end": "214560"
  },
  {
    "text": "also created",
    "start": "214560",
    "end": "215360"
  },
  {
    "text": "a go client api that's used heavily by",
    "start": "215360",
    "end": "218480"
  },
  {
    "text": "the cri for example",
    "start": "218480",
    "end": "220400"
  },
  {
    "text": "as it implements the container runtime",
    "start": "220400",
    "end": "222560"
  },
  {
    "text": "interface for kubernetes",
    "start": "222560",
    "end": "224159"
  },
  {
    "text": "and many other projects use that clean",
    "start": "224159",
    "end": "226480"
  },
  {
    "text": "api",
    "start": "226480",
    "end": "227280"
  },
  {
    "text": "to manage containers and images and",
    "start": "227280",
    "end": "229680"
  },
  {
    "text": "container life cycle",
    "start": "229680",
    "end": "231680"
  },
  {
    "text": "now you might ask okay so i see how",
    "start": "231680",
    "end": "234319"
  },
  {
    "text": "container d came to be",
    "start": "234319",
    "end": "235599"
  },
  {
    "text": "and and how you designed it what are the",
    "start": "235599",
    "end": "238239"
  },
  {
    "text": "use",
    "start": "238239",
    "end": "238879"
  },
  {
    "text": "models or patterns that we see as",
    "start": "238879",
    "end": "241519"
  },
  {
    "text": "container d has matured",
    "start": "241519",
    "end": "243840"
  },
  {
    "text": "one very common use case mentioning the",
    "start": "243840",
    "end": "246400"
  },
  {
    "text": "cri",
    "start": "246400",
    "end": "247599"
  },
  {
    "text": "is that if you're using kubernetes",
    "start": "247599",
    "end": "249760"
  },
  {
    "text": "container d is the most stable",
    "start": "249760",
    "end": "251519"
  },
  {
    "text": "best supported and mature runtime in use",
    "start": "251519",
    "end": "254400"
  },
  {
    "text": "today",
    "start": "254400",
    "end": "254879"
  },
  {
    "text": "underneath kubernetes every major cloud",
    "start": "254879",
    "end": "257759"
  },
  {
    "text": "provider has a managed kubernetes",
    "start": "257759",
    "end": "259600"
  },
  {
    "text": "offering",
    "start": "259600",
    "end": "260560"
  },
  {
    "text": "they either use docker or container d",
    "start": "260560",
    "end": "263360"
  },
  {
    "text": "today and many of them have switched",
    "start": "263360",
    "end": "265040"
  },
  {
    "text": "fully",
    "start": "265040",
    "end": "265840"
  },
  {
    "text": "to use container d if you're a developer",
    "start": "265840",
    "end": "269520"
  },
  {
    "text": "you probably aren't going to use",
    "start": "269520",
    "end": "270639"
  },
  {
    "text": "container d directly but if you're using",
    "start": "270639",
    "end": "272639"
  },
  {
    "text": "docker",
    "start": "272639",
    "end": "273680"
  },
  {
    "text": "by nature you're already using container",
    "start": "273680",
    "end": "275520"
  },
  {
    "text": "d and build kit",
    "start": "275520",
    "end": "277440"
  },
  {
    "text": "which also can be used separately or",
    "start": "277440",
    "end": "279919"
  },
  {
    "text": "within the build system for docker",
    "start": "279919",
    "end": "282240"
  },
  {
    "text": "heavily uses the container d api and can",
    "start": "282240",
    "end": "284880"
  },
  {
    "text": "use container d",
    "start": "284880",
    "end": "286320"
  },
  {
    "text": "as the run time for build on the edge",
    "start": "286320",
    "end": "289199"
  },
  {
    "text": "which is getting a lot of focus",
    "start": "289199",
    "end": "290800"
  },
  {
    "text": "and interest these days container d is",
    "start": "290800",
    "end": "293040"
  },
  {
    "text": "seen as a memory efficient and stable",
    "start": "293040",
    "end": "294960"
  },
  {
    "text": "runtime",
    "start": "294960",
    "end": "296000"
  },
  {
    "text": "used in popular projects like ranchers",
    "start": "296000",
    "end": "299120"
  },
  {
    "text": "k3s",
    "start": "299120",
    "end": "301199"
  },
  {
    "text": "functions as a service has also been a",
    "start": "301199",
    "end": "303120"
  },
  {
    "text": "growing area and even has some blurred",
    "start": "303120",
    "end": "305440"
  },
  {
    "text": "lines with",
    "start": "305440",
    "end": "306479"
  },
  {
    "text": "pure containers of the service offerings",
    "start": "306479",
    "end": "308639"
  },
  {
    "text": "like google's",
    "start": "308639",
    "end": "310000"
  },
  {
    "text": "cloud run or fargate",
    "start": "310000",
    "end": "313199"
  },
  {
    "text": "and again container d is seen as a fast",
    "start": "313199",
    "end": "315680"
  },
  {
    "text": "and efficient runtime",
    "start": "315680",
    "end": "317440"
  },
  {
    "text": "used in projects like fasd or ibm cloud",
    "start": "317440",
    "end": "320240"
  },
  {
    "text": "functions",
    "start": "320240",
    "end": "321280"
  },
  {
    "text": "or even ibm's new cloud code engine",
    "start": "321280",
    "end": "324479"
  },
  {
    "text": "service built fully around container d",
    "start": "324479",
    "end": "328479"
  },
  {
    "start": "328000",
    "end": "328000"
  },
  {
    "text": "now we don't have a lot of new",
    "start": "328479",
    "end": "329919"
  },
  {
    "text": "information on container d",
    "start": "329919",
    "end": "332000"
  },
  {
    "text": "adoption across the ecosystem since we",
    "start": "332000",
    "end": "334880"
  },
  {
    "text": "just shared",
    "start": "334880",
    "end": "335520"
  },
  {
    "text": "many of these numbers and percentages",
    "start": "335520",
    "end": "338639"
  },
  {
    "text": "just",
    "start": "338639",
    "end": "339039"
  },
  {
    "text": "a few months ago but there is a cncf",
    "start": "339039",
    "end": "341520"
  },
  {
    "text": "survey that's now out",
    "start": "341520",
    "end": "343199"
  },
  {
    "text": "capturing some of the 20 20 changes to",
    "start": "343199",
    "end": "346000"
  },
  {
    "text": "that",
    "start": "346000",
    "end": "346400"
  },
  {
    "text": "information and we're hoping to see very",
    "start": "346400",
    "end": "349199"
  },
  {
    "text": "soon",
    "start": "349199",
    "end": "349600"
  },
  {
    "text": "assistig's latest usage report which",
    "start": "349600",
    "end": "352720"
  },
  {
    "text": "should be",
    "start": "352720",
    "end": "353280"
  },
  {
    "text": "out by the time you hear this or maybe",
    "start": "353280",
    "end": "355919"
  },
  {
    "text": "in the next month",
    "start": "355919",
    "end": "357120"
  },
  {
    "text": "now the cncf survey update did show that",
    "start": "357120",
    "end": "359759"
  },
  {
    "text": "container d",
    "start": "359759",
    "end": "360479"
  },
  {
    "text": "usage grew by over a third since the",
    "start": "360479",
    "end": "362800"
  },
  {
    "text": "last time",
    "start": "362800",
    "end": "363680"
  },
  {
    "text": "the community was surveyed production",
    "start": "363680",
    "end": "366080"
  },
  {
    "text": "use of container d is also growing",
    "start": "366080",
    "end": "368080"
  },
  {
    "text": "36 percent of respondents noted that",
    "start": "368080",
    "end": "370880"
  },
  {
    "text": "they were directly using containerity in",
    "start": "370880",
    "end": "372880"
  },
  {
    "text": "production",
    "start": "372880",
    "end": "374080"
  },
  {
    "text": "and so again without a lot of new data",
    "start": "374080",
    "end": "377440"
  },
  {
    "text": "we definitely see continued growth in",
    "start": "377440",
    "end": "379600"
  },
  {
    "text": "the use of container d",
    "start": "379600",
    "end": "381199"
  },
  {
    "text": "and we also see in our community project",
    "start": "381199",
    "end": "384160"
  },
  {
    "text": "a lot of new activity",
    "start": "384160",
    "end": "385919"
  },
  {
    "text": "from people utilizing container d maybe",
    "start": "385919",
    "end": "388560"
  },
  {
    "text": "in scenarios that aren't going to be",
    "start": "388560",
    "end": "390000"
  },
  {
    "text": "shared publicly",
    "start": "390000",
    "end": "391120"
  },
  {
    "text": "but obviously show a growing use of",
    "start": "391120",
    "end": "393039"
  },
  {
    "text": "container d across the ecosystem",
    "start": "393039",
    "end": "396800"
  },
  {
    "text": "for example we've already mentioned",
    "start": "396800",
    "end": "398880"
  },
  {
    "text": "major cloud providers you can see many",
    "start": "398880",
    "end": "400720"
  },
  {
    "text": "of their logos on this slide",
    "start": "400720",
    "end": "402720"
  },
  {
    "text": "offering kubernetes as a service where",
    "start": "402720",
    "end": "405120"
  },
  {
    "text": "they use container d",
    "start": "405120",
    "end": "406400"
  },
  {
    "text": "and again we've already mentioned",
    "start": "406400",
    "end": "407600"
  },
  {
    "text": "docker's use of container d",
    "start": "407600",
    "end": "410160"
  },
  {
    "text": "many of the isolators and sandboxes have",
    "start": "410160",
    "end": "412960"
  },
  {
    "text": "written",
    "start": "412960",
    "end": "413440"
  },
  {
    "text": "shims directly for container d so you",
    "start": "413440",
    "end": "415680"
  },
  {
    "text": "can use things like kata",
    "start": "415680",
    "end": "417280"
  },
  {
    "text": "or firecracker or g-visor or others",
    "start": "417280",
    "end": "421039"
  },
  {
    "text": "right within container d using the same",
    "start": "421039",
    "end": "423599"
  },
  {
    "text": "api",
    "start": "423599",
    "end": "424639"
  },
  {
    "text": "to access these sandbox isolation",
    "start": "424639",
    "end": "427680"
  },
  {
    "text": "technologies",
    "start": "427680",
    "end": "429199"
  },
  {
    "text": "containers as a service is a very",
    "start": "429199",
    "end": "431759"
  },
  {
    "text": "interesting area",
    "start": "431759",
    "end": "433280"
  },
  {
    "text": "obviously we already knew about google",
    "start": "433280",
    "end": "435680"
  },
  {
    "text": "cloud run and aws",
    "start": "435680",
    "end": "437199"
  },
  {
    "text": "fargate azure has container instances",
    "start": "437199",
    "end": "440880"
  },
  {
    "text": "and ibm just announced the code engine",
    "start": "440880",
    "end": "444560"
  },
  {
    "text": "project which also effectively is like a",
    "start": "444560",
    "end": "447280"
  },
  {
    "text": "serverless",
    "start": "447280",
    "end": "448160"
  },
  {
    "text": "containers as a service offering and so",
    "start": "448160",
    "end": "451120"
  },
  {
    "text": "almost all these projects at least where",
    "start": "451120",
    "end": "452960"
  },
  {
    "text": "we have public information",
    "start": "452960",
    "end": "454720"
  },
  {
    "text": "are directly using container d to build",
    "start": "454720",
    "end": "457039"
  },
  {
    "text": "these as a service",
    "start": "457039",
    "end": "458639"
  },
  {
    "text": "technologies for their customers and",
    "start": "458639",
    "end": "461520"
  },
  {
    "text": "then many developer tools",
    "start": "461520",
    "end": "463199"
  },
  {
    "text": "like we've already mentioned build kit",
    "start": "463199",
    "end": "464960"
  },
  {
    "text": "but ignite and kind",
    "start": "464960",
    "end": "466879"
  },
  {
    "text": "are also using container d and then new",
    "start": "466879",
    "end": "470400"
  },
  {
    "text": "on the scene in the last few months",
    "start": "470400",
    "end": "472479"
  },
  {
    "text": "maybe you've heard of linux kit but",
    "start": "472479",
    "end": "474720"
  },
  {
    "text": "amazon recently",
    "start": "474720",
    "end": "476160"
  },
  {
    "text": "released bottle rocket os as an open",
    "start": "476160",
    "end": "478560"
  },
  {
    "text": "source project",
    "start": "478560",
    "end": "479680"
  },
  {
    "text": "that again uses container d for a",
    "start": "479680",
    "end": "482240"
  },
  {
    "text": "containerized linux os",
    "start": "482240",
    "end": "484479"
  },
  {
    "text": "idea that they've now shared with the",
    "start": "484479",
    "end": "486720"
  },
  {
    "text": "broader community",
    "start": "486720",
    "end": "489199"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "now we've given you a lot of information",
    "start": "489199",
    "end": "491599"
  },
  {
    "text": "on",
    "start": "491599",
    "end": "492240"
  },
  {
    "text": "how container d is used who might be",
    "start": "492240",
    "end": "494400"
  },
  {
    "text": "using it various",
    "start": "494400",
    "end": "495759"
  },
  {
    "text": "products and development tools and",
    "start": "495759",
    "end": "498080"
  },
  {
    "text": "offerings",
    "start": "498080",
    "end": "499039"
  },
  {
    "text": "that we know use container d but maybe",
    "start": "499039",
    "end": "501759"
  },
  {
    "text": "you're interested in getting",
    "start": "501759",
    "end": "502960"
  },
  {
    "text": "involved directly to our open source",
    "start": "502960",
    "end": "504960"
  },
  {
    "text": "project and of course we're always",
    "start": "504960",
    "end": "506879"
  },
  {
    "text": "looking for those",
    "start": "506879",
    "end": "507840"
  },
  {
    "text": "who'd love to come contribute who have",
    "start": "507840",
    "end": "510560"
  },
  {
    "text": "issues that they found",
    "start": "510560",
    "end": "511919"
  },
  {
    "text": "using container d that they join in our",
    "start": "511919",
    "end": "514479"
  },
  {
    "text": "discussions",
    "start": "514479",
    "end": "515360"
  },
  {
    "text": "we're on the cncf slack in the container",
    "start": "515360",
    "end": "517839"
  },
  {
    "text": "d channel",
    "start": "517839",
    "end": "519039"
  },
  {
    "text": "and container d dev for those who want",
    "start": "519039",
    "end": "521440"
  },
  {
    "text": "to help with the development of",
    "start": "521440",
    "end": "522800"
  },
  {
    "text": "container d",
    "start": "522800",
    "end": "524399"
  },
  {
    "text": "and of course we'd love to see many",
    "start": "524399",
    "end": "526399"
  },
  {
    "text": "people get involved",
    "start": "526399",
    "end": "527839"
  },
  {
    "text": "we'd love to improve our documentation",
    "start": "527839",
    "end": "529839"
  },
  {
    "text": "that's an area we've been talking to the",
    "start": "529839",
    "end": "531519"
  },
  {
    "text": "cncf about",
    "start": "531519",
    "end": "533360"
  },
  {
    "text": "and so no matter what skill level or or",
    "start": "533360",
    "end": "535680"
  },
  {
    "text": "what your interest is",
    "start": "535680",
    "end": "537120"
  },
  {
    "text": "we'd love to have you join us in the",
    "start": "537120",
    "end": "538640"
  },
  {
    "text": "container d community",
    "start": "538640",
    "end": "540399"
  },
  {
    "text": "and reach out if you can't figure out",
    "start": "540399",
    "end": "542240"
  },
  {
    "text": "where to get involved definitely reach",
    "start": "542240",
    "end": "543920"
  },
  {
    "text": "out",
    "start": "543920",
    "end": "544240"
  },
  {
    "text": "to to us and we can find a way to get",
    "start": "544240",
    "end": "546959"
  },
  {
    "text": "you involved",
    "start": "546959",
    "end": "549440"
  },
  {
    "text": "thanks phil now let's take a look at",
    "start": "549440",
    "end": "550959"
  },
  {
    "text": "communities architecture",
    "start": "550959",
    "end": "552800"
  },
  {
    "text": "in this diagram we have broken down",
    "start": "552800",
    "end": "554320"
  },
  {
    "text": "container d into three main components",
    "start": "554320",
    "end": "556800"
  },
  {
    "text": "the client is containerd's go client",
    "start": "556800",
    "end": "558560"
  },
  {
    "text": "which contains most user-facing",
    "start": "558560",
    "end": "560000"
  },
  {
    "text": "container logic you may be familiar with",
    "start": "560000",
    "end": "562080"
  },
  {
    "text": "in the middle is the container de daemon",
    "start": "562080",
    "end": "564160"
  },
  {
    "text": "broken down by api",
    "start": "564160",
    "end": "565600"
  },
  {
    "text": "core backend and plugin this is where",
    "start": "565600",
    "end": "567839"
  },
  {
    "text": "container d service interfaces live",
    "start": "567839",
    "end": "569600"
  },
  {
    "text": "and handles all data storage and",
    "start": "569600",
    "end": "571040"
  },
  {
    "text": "resource management this gym",
    "start": "571040",
    "end": "573040"
  },
  {
    "text": "is what owns the container processes and",
    "start": "573040",
    "end": "574959"
  },
  {
    "text": "communicates low level operations to and",
    "start": "574959",
    "end": "577120"
  },
  {
    "text": "from container d",
    "start": "577120",
    "end": "578240"
  },
  {
    "text": "the shim is responsible for interacting",
    "start": "578240",
    "end": "579920"
  },
  {
    "text": "with the lower level container run time",
    "start": "579920",
    "end": "582000"
  },
  {
    "text": "as a user of container d the client is",
    "start": "582000",
    "end": "584000"
  },
  {
    "text": "the first place you will interact with",
    "start": "584000",
    "end": "585760"
  },
  {
    "text": "if you are building a system on top of",
    "start": "585760",
    "end": "587279"
  },
  {
    "text": "container d the client is what you will",
    "start": "587279",
    "end": "589040"
  },
  {
    "text": "be working with",
    "start": "589040",
    "end": "590240"
  },
  {
    "text": "you can see in this diagram that some",
    "start": "590240",
    "end": "591760"
  },
  {
    "text": "core functionality that is often",
    "start": "591760",
    "end": "593200"
  },
  {
    "text": "associated with container runtimes is",
    "start": "593200",
    "end": "594800"
  },
  {
    "text": "implemented here in the client",
    "start": "594800",
    "end": "596480"
  },
  {
    "text": "such as container management which",
    "start": "596480",
    "end": "598240"
  },
  {
    "text": "handles creation of the oci runtime spec",
    "start": "598240",
    "end": "600640"
  },
  {
    "text": "preparing the container snapshot as well",
    "start": "600640",
    "end": "602800"
  },
  {
    "text": "as starting individual container tasks",
    "start": "602800",
    "end": "605200"
  },
  {
    "text": "image pulling is also completely",
    "start": "605200",
    "end": "606720"
  },
  {
    "text": "implemented inside the client",
    "start": "606720",
    "end": "608480"
  },
  {
    "text": "because of this approach clients are",
    "start": "608480",
    "end": "610000"
  },
  {
    "text": "mostly limited to using our go library",
    "start": "610000",
    "end": "612240"
  },
  {
    "text": "even though python java or another",
    "start": "612240",
    "end": "613760"
  },
  {
    "text": "language could talk to the container d",
    "start": "613760",
    "end": "615279"
  },
  {
    "text": "api using grpc basic functionality would",
    "start": "615279",
    "end": "617839"
  },
  {
    "text": "need to be re-implemented to use the",
    "start": "617839",
    "end": "619279"
  },
  {
    "text": "full runtime",
    "start": "619279",
    "end": "620240"
  },
  {
    "text": "the cri interface is probably much",
    "start": "620240",
    "end": "622000"
  },
  {
    "text": "easier to work with if you are not",
    "start": "622000",
    "end": "623360"
  },
  {
    "text": "implementing your project and go",
    "start": "623360",
    "end": "624959"
  },
  {
    "text": "one of the first things you will come",
    "start": "624959",
    "end": "626079"
  },
  {
    "text": "across in the client is the options",
    "start": "626079",
    "end": "627760"
  },
  {
    "text": "pattern",
    "start": "627760",
    "end": "628399"
  },
  {
    "text": "with continuity we chose to keep the",
    "start": "628399",
    "end": "629920"
  },
  {
    "text": "core as simple as possible",
    "start": "629920",
    "end": "631519"
  },
  {
    "text": "by defining clean simple interfaces in",
    "start": "631519",
    "end": "633519"
  },
  {
    "text": "the core that meant that the client had",
    "start": "633519",
    "end": "635279"
  },
  {
    "text": "to have more functionality and",
    "start": "635279",
    "end": "636480"
  },
  {
    "text": "configurability",
    "start": "636480",
    "end": "637760"
  },
  {
    "text": "in the container decor there may just be",
    "start": "637760",
    "end": "639519"
  },
  {
    "text": "generic variatic options on a core type",
    "start": "639519",
    "end": "642000"
  },
  {
    "text": "but in the client you will see with",
    "start": "642000",
    "end": "643440"
  },
  {
    "text": "options used on these types implement a",
    "start": "643440",
    "end": "645200"
  },
  {
    "text": "feature you will commonly see this used",
    "start": "645200",
    "end": "646880"
  },
  {
    "text": "for labeling and filtering on types",
    "start": "646880",
    "end": "648720"
  },
  {
    "text": "we were also hoping this would allow",
    "start": "648720",
    "end": "650320"
  },
  {
    "text": "clients to include their own opinions",
    "start": "650320",
    "end": "652160"
  },
  {
    "text": "rather than be forced to work around",
    "start": "652160",
    "end": "653600"
  },
  {
    "text": "opinions in the container d daemon",
    "start": "653600",
    "end": "655600"
  },
  {
    "text": "the core of container d contains the",
    "start": "655600",
    "end": "657040"
  },
  {
    "text": "components we consider most critical in",
    "start": "657040",
    "end": "658720"
  },
  {
    "text": "terms of stability",
    "start": "658720",
    "end": "660240"
  },
  {
    "text": "here we define the main data types and",
    "start": "660240",
    "end": "662000"
  },
  {
    "text": "interfaces used by container d",
    "start": "662000",
    "end": "664160"
  },
  {
    "text": "if you think continuity overuses",
    "start": "664160",
    "end": "665760"
  },
  {
    "text": "interfaces this is partially intentional",
    "start": "665760",
    "end": "668320"
  },
  {
    "text": "we want data and operations flowing",
    "start": "668320",
    "end": "670000"
  },
  {
    "text": "through the core and everything else",
    "start": "670000",
    "end": "671680"
  },
  {
    "text": "wrapping those types",
    "start": "671680",
    "end": "672800"
  },
  {
    "text": "or using data that is tracked by the",
    "start": "672800",
    "end": "674399"
  },
  {
    "text": "core the core has a main implementation",
    "start": "674399",
    "end": "677120"
  },
  {
    "text": "of these interfaces",
    "start": "677120",
    "end": "678240"
  },
  {
    "text": "and these interfaces are extended and",
    "start": "678240",
    "end": "679839"
  },
  {
    "text": "used all the way to the client",
    "start": "679839",
    "end": "681760"
  },
  {
    "text": "the design is such that all data flows",
    "start": "681760",
    "end": "683440"
  },
  {
    "text": "through the core so that plugins and",
    "start": "683440",
    "end": "685040"
  },
  {
    "text": "other components don't need to store",
    "start": "685040",
    "end": "686399"
  },
  {
    "text": "data",
    "start": "686399",
    "end": "687360"
  },
  {
    "text": "this is important because we have",
    "start": "687360",
    "end": "688640"
  },
  {
    "text": "implemented garbage collection inside",
    "start": "688640",
    "end": "690240"
  },
  {
    "text": "the core metadata store",
    "start": "690240",
    "end": "691760"
  },
  {
    "text": "so if data is being stored somewhere",
    "start": "691760",
    "end": "693200"
  },
  {
    "text": "else it is really hard to track that",
    "start": "693200",
    "end": "694880"
  },
  {
    "text": "data",
    "start": "694880",
    "end": "695360"
  },
  {
    "text": "and make sure it is removed when it is",
    "start": "695360",
    "end": "696880"
  },
  {
    "text": "no longer needed this makes containity",
    "start": "696880",
    "end": "698959"
  },
  {
    "text": "more stable by keeping storage and",
    "start": "698959",
    "end": "700399"
  },
  {
    "text": "memory usage stable",
    "start": "700399",
    "end": "702000"
  },
  {
    "text": "it also avoids data inconsistency and",
    "start": "702000",
    "end": "703839"
  },
  {
    "text": "crashes we don't expect as many change",
    "start": "703839",
    "end": "706399"
  },
  {
    "text": "in the core relative to other parts of",
    "start": "706399",
    "end": "707839"
  },
  {
    "text": "container d",
    "start": "707839",
    "end": "708959"
  },
  {
    "text": "features generally aren't implemented",
    "start": "708959",
    "end": "710399"
  },
  {
    "text": "inside the core however some features",
    "start": "710399",
    "end": "712399"
  },
  {
    "text": "will require small changes inside the",
    "start": "712399",
    "end": "714079"
  },
  {
    "text": "core",
    "start": "714079",
    "end": "714800"
  },
  {
    "text": "so for example we recently added a",
    "start": "714800",
    "end": "716480"
  },
  {
    "text": "feature to support remote snapshotters",
    "start": "716480",
    "end": "718399"
  },
  {
    "text": "the high level feature of remote",
    "start": "718399",
    "end": "719519"
  },
  {
    "text": "snapshotters is not something that the",
    "start": "719519",
    "end": "721040"
  },
  {
    "text": "core knows anything about",
    "start": "721040",
    "end": "722560"
  },
  {
    "text": "but one functionality we did add to the",
    "start": "722560",
    "end": "724399"
  },
  {
    "text": "core was the ability for the",
    "start": "724399",
    "end": "725519"
  },
  {
    "text": "snapshotters themselves to report that",
    "start": "725519",
    "end": "727600"
  },
  {
    "text": "they already know about a snapshot as it",
    "start": "727600",
    "end": "729519"
  },
  {
    "text": "is flowing through the core",
    "start": "729519",
    "end": "731120"
  },
  {
    "text": "so when you create a new snapshot you",
    "start": "731120",
    "end": "733200"
  },
  {
    "text": "can pass information that says",
    "start": "733200",
    "end": "734720"
  },
  {
    "text": "this is the target snapshot that i'm",
    "start": "734720",
    "end": "736160"
  },
  {
    "text": "trying to create and it will pass that",
    "start": "736160",
    "end": "737920"
  },
  {
    "text": "to the backend",
    "start": "737920",
    "end": "739120"
  },
  {
    "text": "the backend now can actually communicate",
    "start": "739120",
    "end": "741200"
  },
  {
    "text": "back up to the core to let it know it",
    "start": "741200",
    "end": "743200"
  },
  {
    "text": "already has that snapshot",
    "start": "743200",
    "end": "744480"
  },
  {
    "text": "that allows the client to know the",
    "start": "744480",
    "end": "745760"
  },
  {
    "text": "snapshot is already available as a",
    "start": "745760",
    "end": "747200"
  },
  {
    "text": "remote snapshot when it sees the core",
    "start": "747200",
    "end": "749040"
  },
  {
    "text": "report the snapshot as existing",
    "start": "749040",
    "end": "750959"
  },
  {
    "text": "meanwhile the core has no knowledge of",
    "start": "750959",
    "end": "752480"
  },
  {
    "text": "what a remote snapshot is",
    "start": "752480",
    "end": "754480"
  },
  {
    "text": "it's really important for us to keep the",
    "start": "754480",
    "end": "756000"
  },
  {
    "text": "core of container d",
    "start": "756000",
    "end": "757839"
  },
  {
    "text": "and to make sure we don't get feature",
    "start": "757839",
    "end": "759440"
  },
  {
    "text": "creep showing up in the continuity",
    "start": "759440",
    "end": "760720"
  },
  {
    "text": "daemon",
    "start": "760720",
    "end": "761360"
  },
  {
    "text": "we also don't want opinions showing up",
    "start": "761360",
    "end": "762880"
  },
  {
    "text": "in the daemons so that later on new",
    "start": "762880",
    "end": "764560"
  },
  {
    "text": "features or requirements are limited by",
    "start": "764560",
    "end": "766320"
  },
  {
    "text": "previous opinions added to the core",
    "start": "766320",
    "end": "768320"
  },
  {
    "text": "one thing you may notice is that there",
    "start": "768320",
    "end": "769600"
  },
  {
    "text": "are no tasks in the metadata store",
    "start": "769600",
    "end": "771760"
  },
  {
    "text": "even though tasks are considered a core",
    "start": "771760",
    "end": "773279"
  },
  {
    "text": "type with a core service the data",
    "start": "773279",
    "end": "775200"
  },
  {
    "text": "associated with the task is completely",
    "start": "775200",
    "end": "776720"
  },
  {
    "text": "ephemeral and only related to the actual",
    "start": "776720",
    "end": "778560"
  },
  {
    "text": "running container",
    "start": "778560",
    "end": "779920"
  },
  {
    "text": "this data may be something like process",
    "start": "779920",
    "end": "781600"
  },
  {
    "text": "information or unix sockets",
    "start": "781600",
    "end": "783200"
  },
  {
    "text": "when a node is restarted all the process",
    "start": "783200",
    "end": "785279"
  },
  {
    "text": "information will be gone as expected",
    "start": "785279",
    "end": "787600"
  },
  {
    "text": "however all the metadata associated with",
    "start": "787600",
    "end": "789360"
  },
  {
    "text": "the container including its",
    "start": "789360",
    "end": "790560"
  },
  {
    "text": "specification and snapshots are",
    "start": "790560",
    "end": "792160"
  },
  {
    "text": "persistent in the metadata store",
    "start": "792160",
    "end": "793920"
  },
  {
    "text": "this information can be used by clients",
    "start": "793920",
    "end": "795680"
  },
  {
    "text": "to recreate the container and tasks",
    "start": "795680",
    "end": "797920"
  },
  {
    "text": "the disk service is another core service",
    "start": "797920",
    "end": "799839"
  },
  {
    "text": "without any state",
    "start": "799839",
    "end": "801120"
  },
  {
    "text": "it operates on snapshots and content but",
    "start": "801120",
    "end": "802880"
  },
  {
    "text": "does not store its own information",
    "start": "802880",
    "end": "804800"
  },
  {
    "text": "notice that the cri plugin sits inside",
    "start": "804800",
    "end": "806880"
  },
  {
    "text": "of the container daemon",
    "start": "806880",
    "end": "808639"
  },
  {
    "text": "in current versions of container d the",
    "start": "808639",
    "end": "810480"
  },
  {
    "text": "cri plugin exists as a single imported",
    "start": "810480",
    "end": "812560"
  },
  {
    "text": "plugin",
    "start": "812560",
    "end": "813360"
  },
  {
    "text": "in containerity 1.5 we are merging the",
    "start": "813360",
    "end": "815600"
  },
  {
    "text": "cri code base and integrating cri's",
    "start": "815600",
    "end": "817680"
  },
  {
    "text": "components into communities core and",
    "start": "817680",
    "end": "819279"
  },
  {
    "text": "backend",
    "start": "819279",
    "end": "820240"
  },
  {
    "text": "today cri operates by using the",
    "start": "820240",
    "end": "821920"
  },
  {
    "text": "container d client package directly and",
    "start": "821920",
    "end": "823839"
  },
  {
    "text": "calling out to separate plugin",
    "start": "823839",
    "end": "825199"
  },
  {
    "text": "interfaces such as cni and nri",
    "start": "825199",
    "end": "827680"
  },
  {
    "text": "let's take a look inside the cri plugin",
    "start": "827680",
    "end": "829839"
  },
  {
    "text": "cri consists of two grpc services",
    "start": "829839",
    "end": "832320"
  },
  {
    "text": "image and runtime both of these services",
    "start": "832320",
    "end": "834639"
  },
  {
    "text": "share a service backend and the plugin",
    "start": "834639",
    "end": "836160"
  },
  {
    "text": "today",
    "start": "836160",
    "end": "836720"
  },
  {
    "text": "and call into the container d client the",
    "start": "836720",
    "end": "838800"
  },
  {
    "text": "cri plugin is responsible for defining",
    "start": "838800",
    "end": "840639"
  },
  {
    "text": "the pod",
    "start": "840639",
    "end": "841279"
  },
  {
    "text": "by sharing the name spaces and c groups",
    "start": "841279",
    "end": "843040"
  },
  {
    "text": "between all containers in a pod",
    "start": "843040",
    "end": "844800"
  },
  {
    "text": "it is also responsible for managing the",
    "start": "844800",
    "end": "846560"
  },
  {
    "text": "pause container which is just a",
    "start": "846560",
    "end": "848000"
  },
  {
    "text": "container that is responsible for",
    "start": "848000",
    "end": "849279"
  },
  {
    "text": "holding namespaces open",
    "start": "849279",
    "end": "850959"
  },
  {
    "text": "in the future the pause container will",
    "start": "850959",
    "end": "852399"
  },
  {
    "text": "be able to go away since there are other",
    "start": "852399",
    "end": "853839"
  },
  {
    "text": "ways this could be accomplished today",
    "start": "853839",
    "end": "855680"
  },
  {
    "text": "the cri plugin invokes cni for setting",
    "start": "855680",
    "end": "857920"
  },
  {
    "text": "up container networking",
    "start": "857920",
    "end": "859600"
  },
  {
    "text": "this call is invoked after continuity",
    "start": "859600",
    "end": "861440"
  },
  {
    "text": "creates the first container so that cni",
    "start": "861440",
    "end": "863440"
  },
  {
    "text": "can set up networking using the",
    "start": "863440",
    "end": "864720"
  },
  {
    "text": "container's namespace",
    "start": "864720",
    "end": "866240"
  },
  {
    "text": "the cri plugin also calls into the new",
    "start": "866240",
    "end": "868320"
  },
  {
    "text": "node resource interface",
    "start": "868320",
    "end": "870240"
  },
  {
    "text": "let's hand it over to michael to discuss",
    "start": "870240",
    "end": "871680"
  },
  {
    "text": "the node resource interface",
    "start": "871680",
    "end": "873600"
  },
  {
    "text": "all right i'm going to show you some of",
    "start": "873600",
    "end": "875120"
  },
  {
    "text": "the work we've been doing on the node",
    "start": "875120",
    "end": "876480"
  },
  {
    "text": "resource",
    "start": "876480",
    "end": "877120"
  },
  {
    "text": "interface for container d and kubernetes",
    "start": "877120",
    "end": "880720"
  },
  {
    "start": "880000",
    "end": "880000"
  },
  {
    "text": "so when you think about resource",
    "start": "880720",
    "end": "882399"
  },
  {
    "text": "management we have",
    "start": "882399",
    "end": "884079"
  },
  {
    "text": "different workload requirements you have",
    "start": "884079",
    "end": "886399"
  },
  {
    "text": "customers that",
    "start": "886399",
    "end": "887600"
  },
  {
    "text": "that are running batch workloads and",
    "start": "887600",
    "end": "890399"
  },
  {
    "text": "also customers",
    "start": "890399",
    "end": "891440"
  },
  {
    "text": "that have latency sensitive workloads",
    "start": "891440",
    "end": "893600"
  },
  {
    "text": "that may be in the request response",
    "start": "893600",
    "end": "895440"
  },
  {
    "text": "cycle for",
    "start": "895440",
    "end": "896800"
  },
  {
    "text": "for various users interacting with the",
    "start": "896800",
    "end": "898800"
  },
  {
    "text": "service and",
    "start": "898800",
    "end": "899839"
  },
  {
    "text": "both of these type of workloads we need",
    "start": "899839",
    "end": "901680"
  },
  {
    "text": "to be able to co-locate these on the",
    "start": "901680",
    "end": "903760"
  },
  {
    "text": "same nodes but they have very different",
    "start": "903760",
    "end": "906160"
  },
  {
    "text": "performance requirements that that their",
    "start": "906160",
    "end": "908720"
  },
  {
    "text": "users expect",
    "start": "908720",
    "end": "910079"
  },
  {
    "text": "and also various user requirements such",
    "start": "910079",
    "end": "912959"
  },
  {
    "text": "as",
    "start": "912959",
    "end": "913360"
  },
  {
    "text": "priority and slas and slos for",
    "start": "913360",
    "end": "917680"
  },
  {
    "text": "how eviction happens on these nodes is",
    "start": "917680",
    "end": "921519"
  },
  {
    "text": "something that we all have to manage",
    "start": "921519",
    "end": "925040"
  },
  {
    "text": "so when you think about resource",
    "start": "925040",
    "end": "926480"
  },
  {
    "text": "management we have various",
    "start": "926480",
    "end": "928880"
  },
  {
    "text": "resources on a compute host you have",
    "start": "928880",
    "end": "931279"
  },
  {
    "text": "cpus",
    "start": "931279",
    "end": "932480"
  },
  {
    "text": "which you may want to dedicate cpus or",
    "start": "932480",
    "end": "935199"
  },
  {
    "text": "restrict access to cpus depending on the",
    "start": "935199",
    "end": "937440"
  },
  {
    "text": "workload you also have pneuma",
    "start": "937440",
    "end": "939440"
  },
  {
    "text": "on multi-socket systems and then",
    "start": "939440",
    "end": "942800"
  },
  {
    "text": "we can expand out into l3 cache use",
    "start": "942800",
    "end": "945920"
  },
  {
    "text": "pages aligning",
    "start": "945920",
    "end": "949360"
  },
  {
    "text": "making sure your workload runs on the",
    "start": "949360",
    "end": "951199"
  },
  {
    "text": "same pneuma node that your gpus are",
    "start": "951199",
    "end": "954160"
  },
  {
    "text": "connected to",
    "start": "954160",
    "end": "955279"
  },
  {
    "text": "so the current solutions cubelet does",
    "start": "955279",
    "end": "957440"
  },
  {
    "start": "956000",
    "end": "956000"
  },
  {
    "text": "have a cpu manager",
    "start": "957440",
    "end": "959440"
  },
  {
    "text": "uh there's a few keps improving this",
    "start": "959440",
    "end": "961839"
  },
  {
    "text": "expanding into the",
    "start": "961839",
    "end": "963360"
  },
  {
    "text": "pneuma support case and like pinning as",
    "start": "963360",
    "end": "966160"
  },
  {
    "text": "cpus but",
    "start": "966160",
    "end": "967360"
  },
  {
    "text": "when i was looking into this i filmed",
    "start": "967360",
    "end": "969040"
  },
  {
    "text": "the ux was a little weird",
    "start": "969040",
    "end": "971120"
  },
  {
    "text": "it wasn't very explicit so",
    "start": "971120",
    "end": "974240"
  },
  {
    "start": "974000",
    "end": "974000"
  },
  {
    "text": "i started looking at prior arts in the",
    "start": "974240",
    "end": "976959"
  },
  {
    "text": "container space",
    "start": "976959",
    "end": "978079"
  },
  {
    "text": "and one of the interfaces that i like",
    "start": "978079",
    "end": "981519"
  },
  {
    "text": "the most",
    "start": "981519",
    "end": "982079"
  },
  {
    "text": "is cni so the container network",
    "start": "982079",
    "end": "984560"
  },
  {
    "text": "interface",
    "start": "984560",
    "end": "985920"
  },
  {
    "text": "i believe the way it uses plugins and",
    "start": "985920",
    "end": "989680"
  },
  {
    "text": "the interface of how a cri container",
    "start": "989680",
    "end": "993360"
  },
  {
    "text": "runtime interacts with cni to set up",
    "start": "993360",
    "end": "996000"
  },
  {
    "text": "networking for",
    "start": "996000",
    "end": "997680"
  },
  {
    "text": "your containers is very elegant and it",
    "start": "997680",
    "end": "1000079"
  },
  {
    "text": "makes it very composable",
    "start": "1000079",
    "end": "1001680"
  },
  {
    "text": "as well so i thought",
    "start": "1001680",
    "end": "1005040"
  },
  {
    "text": "let's make cni for resources and this is",
    "start": "1005040",
    "end": "1008320"
  },
  {
    "start": "1007000",
    "end": "1007000"
  },
  {
    "text": "where",
    "start": "1008320",
    "end": "1008720"
  },
  {
    "text": "nri comes in because cri was already",
    "start": "1008720",
    "end": "1011680"
  },
  {
    "text": "taken",
    "start": "1011680",
    "end": "1012320"
  },
  {
    "text": "i i would rather it be named the",
    "start": "1012320",
    "end": "1015040"
  },
  {
    "text": "container resource",
    "start": "1015040",
    "end": "1016240"
  },
  {
    "text": "interface but we'll we'll stick with",
    "start": "1016240",
    "end": "1018959"
  },
  {
    "text": "node resource interface for now",
    "start": "1018959",
    "end": "1020720"
  },
  {
    "text": "so myself and some others in the",
    "start": "1020720",
    "end": "1022880"
  },
  {
    "text": "community we felt",
    "start": "1022880",
    "end": "1024000"
  },
  {
    "text": "like the cubelet's not the right",
    "start": "1024000",
    "end": "1025678"
  },
  {
    "text": "abstraction for things like this",
    "start": "1025679",
    "end": "1027839"
  },
  {
    "text": "the lines between the cubelet and then",
    "start": "1027839",
    "end": "1029839"
  },
  {
    "text": "the lower level cri",
    "start": "1029839",
    "end": "1032160"
  },
  {
    "text": "is a little too blurry and we think",
    "start": "1032160",
    "end": "1035280"
  },
  {
    "text": "that being able to hook into the life",
    "start": "1035280",
    "end": "1037038"
  },
  {
    "text": "cycle of containers at the cri level",
    "start": "1037039",
    "end": "1039360"
  },
  {
    "text": "is the right way to do resource pinning",
    "start": "1039360",
    "end": "1042959"
  },
  {
    "text": "and topology on a node",
    "start": "1042959",
    "end": "1046400"
  },
  {
    "text": "cri implementations like container d we",
    "start": "1046400",
    "end": "1049520"
  },
  {
    "text": "know how to interface with the",
    "start": "1049520",
    "end": "1050960"
  },
  {
    "text": "underlying host systems we can get the",
    "start": "1050960",
    "end": "1053120"
  },
  {
    "text": "information",
    "start": "1053120",
    "end": "1053919"
  },
  {
    "text": "for what devices are available",
    "start": "1053919",
    "end": "1057280"
  },
  {
    "text": "and this is where things like cni for",
    "start": "1057280",
    "end": "1060000"
  },
  {
    "text": "networking also hooks in",
    "start": "1060000",
    "end": "1062320"
  },
  {
    "text": "so that's why i wanted to start with",
    "start": "1062320",
    "end": "1065120"
  },
  {
    "text": "building out nri",
    "start": "1065120",
    "end": "1066799"
  },
  {
    "start": "1066000",
    "end": "1066000"
  },
  {
    "text": "and with this we can do various things",
    "start": "1066799",
    "end": "1069840"
  },
  {
    "text": "such as managing the topology",
    "start": "1069840",
    "end": "1072240"
  },
  {
    "text": "and quality of service for different",
    "start": "1072240",
    "end": "1074240"
  },
  {
    "text": "workload types",
    "start": "1074240",
    "end": "1075280"
  },
  {
    "text": "we can have latency sensitive workloads",
    "start": "1075280",
    "end": "1078080"
  },
  {
    "text": "pinned",
    "start": "1078080",
    "end": "1078720"
  },
  {
    "text": "on cpus with very simple plug-ins",
    "start": "1078720",
    "end": "1082320"
  },
  {
    "text": "as well as batch workloads that execute",
    "start": "1082320",
    "end": "1085440"
  },
  {
    "text": "across",
    "start": "1085440",
    "end": "1085919"
  },
  {
    "text": "multiple cores and then also get their",
    "start": "1085919",
    "end": "1089120"
  },
  {
    "text": "cores taken away if more higher priority",
    "start": "1089120",
    "end": "1092240"
  },
  {
    "text": "workloads enter the node in this inside",
    "start": "1092240",
    "end": "1095120"
  },
  {
    "text": "the container.org we have an inner eye",
    "start": "1095120",
    "end": "1097280"
  },
  {
    "text": "repo that we've been working on",
    "start": "1097280",
    "end": "1099520"
  },
  {
    "text": "the api and interface of nri",
    "start": "1099520",
    "end": "1103360"
  },
  {
    "text": "and you can see how",
    "start": "1103360",
    "end": "1106400"
  },
  {
    "text": "it takes a lot of inspiration from cni",
    "start": "1106400",
    "end": "1110000"
  },
  {
    "text": "where we have a config",
    "start": "1110000",
    "end": "1111679"
  },
  {
    "text": "you can chain plugins together there's a",
    "start": "1111679",
    "end": "1114160"
  },
  {
    "text": "specific order",
    "start": "1114160",
    "end": "1115440"
  },
  {
    "text": "in which these various binary base",
    "start": "1115440",
    "end": "1117760"
  },
  {
    "text": "plugins can be",
    "start": "1117760",
    "end": "1119440"
  },
  {
    "text": "executed we have a clearly defined",
    "start": "1119440",
    "end": "1122880"
  },
  {
    "text": "input and output to these uh plugins",
    "start": "1122880",
    "end": "1126640"
  },
  {
    "text": "so that they're able to get the access",
    "start": "1126640",
    "end": "1129919"
  },
  {
    "text": "that they need to the underlying pod or",
    "start": "1129919",
    "end": "1132640"
  },
  {
    "text": "container information that they're",
    "start": "1132640",
    "end": "1135039"
  },
  {
    "text": "setting up resources for and then they",
    "start": "1135039",
    "end": "1137760"
  },
  {
    "text": "have",
    "start": "1137760",
    "end": "1138400"
  },
  {
    "text": "a defined output and what what",
    "start": "1138400",
    "end": "1141600"
  },
  {
    "text": "points in the container life cycle that",
    "start": "1141600",
    "end": "1143679"
  },
  {
    "text": "it hooks into",
    "start": "1143679",
    "end": "1145200"
  },
  {
    "text": "so go ahead and check it out at",
    "start": "1145200",
    "end": "1149200"
  },
  {
    "text": "container github.comcontainerd slash nri",
    "start": "1149200",
    "end": "1152080"
  },
  {
    "text": "and",
    "start": "1152080",
    "end": "1153280"
  },
  {
    "text": "let us know what you think as we build",
    "start": "1153280",
    "end": "1155120"
  },
  {
    "text": "out this interface",
    "start": "1155120",
    "end": "1156960"
  },
  {
    "text": "thanks michael let's go back to the",
    "start": "1156960",
    "end": "1158320"
  },
  {
    "text": "diagram for the underlying run time",
    "start": "1158320",
    "end": "1160799"
  },
  {
    "text": "there's a component like continuity",
    "start": "1160799",
    "end": "1162240"
  },
  {
    "text": "daemon and then external shim for",
    "start": "1162240",
    "end": "1163760"
  },
  {
    "text": "managing container processes",
    "start": "1163760",
    "end": "1165360"
  },
  {
    "text": "the runtime the daemon is responsible",
    "start": "1165360",
    "end": "1166880"
  },
  {
    "text": "for starting up new runtime shims",
    "start": "1166880",
    "end": "1168720"
  },
  {
    "text": "it will pass the oci runtime spec and",
    "start": "1168720",
    "end": "1170799"
  },
  {
    "text": "commands to the shim",
    "start": "1170799",
    "end": "1171840"
  },
  {
    "text": "the runtime shims are the boxes on the",
    "start": "1171840",
    "end": "1173360"
  },
  {
    "text": "right side these shims are what actually",
    "start": "1173360",
    "end": "1175200"
  },
  {
    "text": "own the container processes",
    "start": "1175200",
    "end": "1176960"
  },
  {
    "text": "the containers are parented directly to",
    "start": "1176960",
    "end": "1178720"
  },
  {
    "text": "the shim the container daemon will talk",
    "start": "1178720",
    "end": "1180880"
  },
  {
    "text": "to the shims using the lightweight grpc",
    "start": "1180880",
    "end": "1182880"
  },
  {
    "text": "protocol called ttrpc",
    "start": "1182880",
    "end": "1185120"
  },
  {
    "text": "we use this lightweight rpc to reduce",
    "start": "1185120",
    "end": "1186960"
  },
  {
    "text": "the memory footprint of the shim",
    "start": "1186960",
    "end": "1188720"
  },
  {
    "text": "if container d gets restarted it will",
    "start": "1188720",
    "end": "1190400"
  },
  {
    "text": "connect to the shim in order to send",
    "start": "1190400",
    "end": "1191840"
  },
  {
    "text": "commands to the container",
    "start": "1191840",
    "end": "1193039"
  },
  {
    "text": "there are many different runtime shim",
    "start": "1193039",
    "end": "1194320"
  },
  {
    "text": "implementations the run c implementation",
    "start": "1194320",
    "end": "1196640"
  },
  {
    "text": "is the most common",
    "start": "1196640",
    "end": "1197840"
  },
  {
    "text": "there is run hcs for running on windows",
    "start": "1197840",
    "end": "1199919"
  },
  {
    "text": "there are also sandbox shims",
    "start": "1199919",
    "end": "1201440"
  },
  {
    "text": "such as firecracker and cotton",
    "start": "1201440",
    "end": "1202880"
  },
  {
    "text": "containers since the shims only",
    "start": "1202880",
    "end": "1204720"
  },
  {
    "text": "implement this rpc interface",
    "start": "1204720",
    "end": "1206320"
  },
  {
    "text": "anyone can implement their own shim to",
    "start": "1206320",
    "end": "1207919"
  },
  {
    "text": "be used by containerity pretty easily",
    "start": "1207919",
    "end": "1210080"
  },
  {
    "text": "containerd just needs to know about the",
    "start": "1210080",
    "end": "1211360"
  },
  {
    "text": "shim binary in order to use it to run",
    "start": "1211360",
    "end": "1213200"
  },
  {
    "text": "containers",
    "start": "1213200",
    "end": "1214000"
  },
  {
    "text": "plugins can call into the core of",
    "start": "1214000",
    "end": "1215360"
  },
  {
    "text": "container d and the core can call out to",
    "start": "1215360",
    "end": "1217280"
  },
  {
    "text": "different backends",
    "start": "1217280",
    "end": "1218320"
  },
  {
    "text": "the back ends themselves are also",
    "start": "1218320",
    "end": "1219760"
  },
  {
    "text": "pluggable for example",
    "start": "1219760",
    "end": "1221440"
  },
  {
    "text": "snapchatters are all implemented as",
    "start": "1221440",
    "end": "1223120"
  },
  {
    "text": "plugins each plugin can define their own",
    "start": "1223120",
    "end": "1225120"
  },
  {
    "text": "configuration which gets included with",
    "start": "1225120",
    "end": "1226799"
  },
  {
    "text": "containity's global configuration object",
    "start": "1226799",
    "end": "1228960"
  },
  {
    "text": "if you have a grpc service it can be",
    "start": "1228960",
    "end": "1230880"
  },
  {
    "text": "added as a plugin",
    "start": "1230880",
    "end": "1232000"
  },
  {
    "text": "and call into the core services directly",
    "start": "1232000",
    "end": "1234240"
  },
  {
    "text": "in the client there are many options for",
    "start": "1234240",
    "end": "1235840"
  },
  {
    "text": "customization",
    "start": "1235840",
    "end": "1236960"
  },
  {
    "text": "by default the container d client will",
    "start": "1236960",
    "end": "1238640"
  },
  {
    "text": "use the grpc services which communicate",
    "start": "1238640",
    "end": "1240799"
  },
  {
    "text": "with the containity daemon through the",
    "start": "1240799",
    "end": "1242080"
  },
  {
    "text": "grpc api",
    "start": "1242080",
    "end": "1243440"
  },
  {
    "text": "however a client can be instantiated",
    "start": "1243440",
    "end": "1245280"
  },
  {
    "text": "with any custom implementation of a",
    "start": "1245280",
    "end": "1246880"
  },
  {
    "text": "service",
    "start": "1246880",
    "end": "1247679"
  },
  {
    "text": "even allowing clients to operate",
    "start": "1247679",
    "end": "1249200"
  },
  {
    "text": "completely without a daemon",
    "start": "1249200",
    "end": "1250960"
  },
  {
    "text": "you can also add your own resolvers",
    "start": "1250960",
    "end": "1252960"
  },
  {
    "text": "resolvers are what are used to push or",
    "start": "1252960",
    "end": "1254640"
  },
  {
    "text": "pull images between community and",
    "start": "1254640",
    "end": "1256159"
  },
  {
    "text": "registry",
    "start": "1256159",
    "end": "1257039"
  },
  {
    "text": "the default implementation communicates",
    "start": "1257039",
    "end": "1258799"
  },
  {
    "text": "with a docker registry using the",
    "start": "1258799",
    "end": "1260240"
  },
  {
    "text": "standard oci distribution api",
    "start": "1260240",
    "end": "1262480"
  },
  {
    "text": "however you can implement your own very",
    "start": "1262480",
    "end": "1264080"
  },
  {
    "text": "easily if you have a different or faster",
    "start": "1264080",
    "end": "1265520"
  },
  {
    "text": "way to distribute images",
    "start": "1265520",
    "end": "1267200"
  },
  {
    "text": "including your own snapchatter plugin is",
    "start": "1267200",
    "end": "1268799"
  },
  {
    "text": "pretty easy you can compile in the",
    "start": "1268799",
    "end": "1270559"
  },
  {
    "text": "snapchatter and register it as a plugin",
    "start": "1270559",
    "end": "1272559"
  },
  {
    "text": "just like every other built-in",
    "start": "1272559",
    "end": "1273760"
  },
  {
    "text": "snapshotter or you can implement your",
    "start": "1273760",
    "end": "1275520"
  },
  {
    "text": "own snapshotter as a proxy plugin",
    "start": "1275520",
    "end": "1278559"
  },
  {
    "text": "let's hand it over to wayfu to deep dive",
    "start": "1278559",
    "end": "1280159"
  },
  {
    "text": "into communities plugin system",
    "start": "1280159",
    "end": "1282960"
  },
  {
    "text": "hello everyone thanks for joining me my",
    "start": "1282960",
    "end": "1285840"
  },
  {
    "text": "name is wayfu",
    "start": "1285840",
    "end": "1287679"
  },
  {
    "text": "i guess we all learn so many things",
    "start": "1287679",
    "end": "1289919"
  },
  {
    "text": "about",
    "start": "1289919",
    "end": "1290720"
  },
  {
    "text": "canadia's architecture from derrick",
    "start": "1290720",
    "end": "1294000"
  },
  {
    "text": "the core of canada deconstructs the",
    "start": "1294000",
    "end": "1296240"
  },
  {
    "text": "projecting",
    "start": "1296240",
    "end": "1297200"
  },
  {
    "text": "mechanism about how to manage osi",
    "start": "1297200",
    "end": "1300400"
  },
  {
    "text": "image and how to run a container for",
    "start": "1300400",
    "end": "1303520"
  },
  {
    "text": "common cases kinetic has some building",
    "start": "1303520",
    "end": "1306559"
  },
  {
    "text": "plugins",
    "start": "1306559",
    "end": "1307280"
  },
  {
    "text": "sd4 functionalities in",
    "start": "1307280",
    "end": "1310480"
  },
  {
    "text": "linux platform granny can download image",
    "start": "1310480",
    "end": "1313039"
  },
  {
    "text": "with gz format",
    "start": "1313039",
    "end": "1314720"
  },
  {
    "text": "and unpack it as the bundle on overlay",
    "start": "1314720",
    "end": "1317600"
  },
  {
    "text": "fs",
    "start": "1317600",
    "end": "1318000"
  },
  {
    "text": "file system and then we can run it by",
    "start": "1318000",
    "end": "1320960"
  },
  {
    "text": "run c",
    "start": "1320960",
    "end": "1322480"
  },
  {
    "text": "but it is just one common case",
    "start": "1322480",
    "end": "1325600"
  },
  {
    "text": "with osi perspective ocs back outlines",
    "start": "1325600",
    "end": "1328720"
  },
  {
    "text": "how to run",
    "start": "1328720",
    "end": "1329600"
  },
  {
    "text": "and unpack file system bundle",
    "start": "1329600",
    "end": "1332640"
  },
  {
    "text": "for example the fire system bundle can",
    "start": "1332640",
    "end": "1335280"
  },
  {
    "text": "be built",
    "start": "1335280",
    "end": "1336000"
  },
  {
    "text": "and unpacked in various ways an osi",
    "start": "1336000",
    "end": "1339200"
  },
  {
    "text": "runtime spec describes the lifecycle of",
    "start": "1339200",
    "end": "1341520"
  },
  {
    "text": "contender",
    "start": "1341520",
    "end": "1342480"
  },
  {
    "text": "which can be handled in gas kernel for",
    "start": "1342480",
    "end": "1345039"
  },
  {
    "text": "additional isolation",
    "start": "1345039",
    "end": "1347679"
  },
  {
    "text": "for different scenarios there are still",
    "start": "1347679",
    "end": "1350080"
  },
  {
    "text": "so many combinations",
    "start": "1350080",
    "end": "1351600"
  },
  {
    "text": "here but don't worry about it",
    "start": "1351600",
    "end": "1355919"
  },
  {
    "text": "you don't need to put your special",
    "start": "1355919",
    "end": "1358080"
  },
  {
    "text": "implementation",
    "start": "1358080",
    "end": "1359280"
  },
  {
    "text": "into kinetic coil base the kinetic can",
    "start": "1359280",
    "end": "1362320"
  },
  {
    "text": "work with your external",
    "start": "1362320",
    "end": "1364000"
  },
  {
    "text": "binary plugging as one of the back ends",
    "start": "1364000",
    "end": "1367520"
  },
  {
    "text": "so let's see how it works",
    "start": "1367520",
    "end": "1370960"
  },
  {
    "start": "1371000",
    "end": "1371000"
  },
  {
    "text": "the first one is generic image layer",
    "start": "1372080",
    "end": "1374640"
  },
  {
    "text": "support",
    "start": "1374640",
    "end": "1375600"
  },
  {
    "text": "as we know in which each",
    "start": "1375600",
    "end": "1378720"
  },
  {
    "text": "osi image layer is star file we can",
    "start": "1378720",
    "end": "1381840"
  },
  {
    "text": "compress",
    "start": "1381840",
    "end": "1382559"
  },
  {
    "text": "all encryptive tar file",
    "start": "1382559",
    "end": "1385600"
  },
  {
    "text": "osi image spec use media type to",
    "start": "1385600",
    "end": "1388159"
  },
  {
    "text": "describe the image",
    "start": "1388159",
    "end": "1389440"
  },
  {
    "text": "layers format when you pull image by",
    "start": "1389440",
    "end": "1392720"
  },
  {
    "text": "content id",
    "start": "1392720",
    "end": "1394000"
  },
  {
    "text": "the workflow is like that the community",
    "start": "1394000",
    "end": "1397120"
  },
  {
    "text": "div service",
    "start": "1397120",
    "end": "1398240"
  },
  {
    "text": "reader image data from the content",
    "start": "1398240",
    "end": "1400480"
  },
  {
    "text": "service",
    "start": "1400480",
    "end": "1401360"
  },
  {
    "text": "and then i'll pay it into the snapshot",
    "start": "1401360",
    "end": "1403840"
  },
  {
    "text": "file system",
    "start": "1403840",
    "end": "1405600"
  },
  {
    "text": "by default kennedy can detect a layer",
    "start": "1405600",
    "end": "1408720"
  },
  {
    "text": "is in gz format if the layer is not",
    "start": "1408720",
    "end": "1412480"
  },
  {
    "text": "using",
    "start": "1412480",
    "end": "1413440"
  },
  {
    "text": "all type file the kennedy will need",
    "start": "1413440",
    "end": "1416480"
  },
  {
    "text": "string processor plugging the string",
    "start": "1416480",
    "end": "1419919"
  },
  {
    "text": "processor",
    "start": "1419919",
    "end": "1420880"
  },
  {
    "text": "is a binary plugin to be a meter type",
    "start": "1420880",
    "end": "1423679"
  },
  {
    "text": "converter",
    "start": "1423679",
    "end": "1425360"
  },
  {
    "text": "look at the configuration for z standard",
    "start": "1425360",
    "end": "1428400"
  },
  {
    "text": "string processor one cannot detect the",
    "start": "1428400",
    "end": "1431919"
  },
  {
    "text": "meter type is",
    "start": "1431919",
    "end": "1433679"
  },
  {
    "text": "this standard it will call this standard",
    "start": "1433679",
    "end": "1436240"
  },
  {
    "text": "battery",
    "start": "1436240",
    "end": "1437279"
  },
  {
    "text": "for decompression and return the top",
    "start": "1437279",
    "end": "1440000"
  },
  {
    "text": "media type streaming",
    "start": "1440000",
    "end": "1442799"
  },
  {
    "text": "the string processor allows one plugin",
    "start": "1442799",
    "end": "1445760"
  },
  {
    "text": "to accept",
    "start": "1445760",
    "end": "1446799"
  },
  {
    "text": "multiple customized media types but",
    "start": "1446799",
    "end": "1450400"
  },
  {
    "text": "it depends your own implementation",
    "start": "1450400",
    "end": "1454640"
  },
  {
    "text": "the last step of pulling image is to",
    "start": "1456159",
    "end": "1458559"
  },
  {
    "text": "unpack the",
    "start": "1458559",
    "end": "1459919"
  },
  {
    "text": "type streaming into special file system",
    "start": "1459919",
    "end": "1462640"
  },
  {
    "text": "like overlay fs",
    "start": "1462640",
    "end": "1464799"
  },
  {
    "text": "in order to support different file",
    "start": "1464799",
    "end": "1466559"
  },
  {
    "text": "system for image",
    "start": "1466559",
    "end": "1469120"
  },
  {
    "text": "the kinetic exporter snapshot proxy api",
    "start": "1469120",
    "end": "1472720"
  },
  {
    "text": "for the third party plugin",
    "start": "1472720",
    "end": "1475120"
  },
  {
    "text": "the proxy snapshot plugin is long",
    "start": "1475120",
    "end": "1477760"
  },
  {
    "text": "running process",
    "start": "1477760",
    "end": "1478880"
  },
  {
    "text": "and kennedy can talk to it on jbc's",
    "start": "1478880",
    "end": "1481360"
  },
  {
    "text": "channel",
    "start": "1481360",
    "end": "1483760"
  },
  {
    "text": "after free image the container runtime",
    "start": "1483760",
    "end": "1486640"
  },
  {
    "text": "can run",
    "start": "1486640",
    "end": "1487600"
  },
  {
    "text": "the file system bundle",
    "start": "1487600",
    "end": "1491278"
  },
  {
    "start": "1492000",
    "end": "1492000"
  },
  {
    "text": "connected used connected stream v2",
    "start": "1493840",
    "end": "1496880"
  },
  {
    "text": "as control layer for different kinds of",
    "start": "1496880",
    "end": "1499440"
  },
  {
    "text": "runtime indentation",
    "start": "1499440",
    "end": "1501760"
  },
  {
    "text": "you know each runner has their own",
    "start": "1501760",
    "end": "1503919"
  },
  {
    "text": "values",
    "start": "1503919",
    "end": "1504799"
  },
  {
    "text": "and different designs it's not good to",
    "start": "1504799",
    "end": "1507679"
  },
  {
    "text": "use",
    "start": "1507679",
    "end": "1508080"
  },
  {
    "text": "one kinetic stream to integrate",
    "start": "1508080",
    "end": "1510240"
  },
  {
    "text": "different kinds of",
    "start": "1510240",
    "end": "1511200"
  },
  {
    "text": "runtime by commander line",
    "start": "1511200",
    "end": "1515840"
  },
  {
    "text": "so kinetic stream which provides general",
    "start": "1515919",
    "end": "1519120"
  },
  {
    "text": "console api for",
    "start": "1519120",
    "end": "1522159"
  },
  {
    "text": "for the containers lifecycle",
    "start": "1522159",
    "end": "1525279"
  },
  {
    "text": "hiding the implementation of running",
    "start": "1525279",
    "end": "1528880"
  },
  {
    "text": "manager runtime manager",
    "start": "1528880",
    "end": "1532640"
  },
  {
    "text": "no matter what kind of runtime it is",
    "start": "1532799",
    "end": "1534960"
  },
  {
    "text": "contender",
    "start": "1534960",
    "end": "1535919"
  },
  {
    "text": "b can communicate with third party",
    "start": "1535919",
    "end": "1537919"
  },
  {
    "text": "runtime invitation",
    "start": "1537919",
    "end": "1539520"
  },
  {
    "text": "by streaming way to api",
    "start": "1539520",
    "end": "1542720"
  },
  {
    "text": "and can addition which will also provide",
    "start": "1542720",
    "end": "1545919"
  },
  {
    "text": "binary name convention to locate your",
    "start": "1545919",
    "end": "1548320"
  },
  {
    "text": "own stream",
    "start": "1548320",
    "end": "1549679"
  },
  {
    "text": "for example run say v2 name we translate",
    "start": "1549679",
    "end": "1553919"
  },
  {
    "text": "into the binary name connection run c",
    "start": "1553919",
    "end": "1556799"
  },
  {
    "text": "with you",
    "start": "1556799",
    "end": "1558720"
  },
  {
    "text": "in release 1.4 runs the way to",
    "start": "1558720",
    "end": "1562480"
  },
  {
    "text": "shim is the default stream in canada d",
    "start": "1562480",
    "end": "1566880"
  },
  {
    "text": "grady also improves",
    "start": "1567200",
    "end": "1570480"
  },
  {
    "text": "the logging plugins",
    "start": "1570480",
    "end": "1573840"
  },
  {
    "text": "at the beginning the canonies standard",
    "start": "1574880",
    "end": "1577440"
  },
  {
    "text": "io is redirected by the name",
    "start": "1577440",
    "end": "1579840"
  },
  {
    "text": "pipe but it requires the data receiver",
    "start": "1579840",
    "end": "1583600"
  },
  {
    "text": "must be alive",
    "start": "1583600",
    "end": "1585279"
  },
  {
    "text": "otherwise the pipe channel will be full",
    "start": "1585279",
    "end": "1588640"
  },
  {
    "text": "and it will impact the running contender",
    "start": "1588640",
    "end": "1592320"
  },
  {
    "text": "so connect d enhanced the container log",
    "start": "1592320",
    "end": "1595520"
  },
  {
    "text": "by ui uri schema",
    "start": "1595520",
    "end": "1599279"
  },
  {
    "text": "right now kenneth d can support a file",
    "start": "1599279",
    "end": "1601679"
  },
  {
    "text": "redirection",
    "start": "1601679",
    "end": "1603200"
  },
  {
    "text": "the connectedness then the i o can be",
    "start": "1603200",
    "end": "1606000"
  },
  {
    "text": "written",
    "start": "1606000",
    "end": "1606720"
  },
  {
    "text": "into file directly",
    "start": "1606720",
    "end": "1610080"
  },
  {
    "text": "and then the schema also supports the",
    "start": "1610080",
    "end": "1612400"
  },
  {
    "text": "binary plugin",
    "start": "1612400",
    "end": "1613760"
  },
  {
    "text": "you can set up a back",
    "start": "1613760",
    "end": "1617200"
  },
  {
    "text": "a background long running process to",
    "start": "1617200",
    "end": "1619760"
  },
  {
    "text": "handle the i o",
    "start": "1619760",
    "end": "1621840"
  },
  {
    "text": "so with the file battery log schema",
    "start": "1621840",
    "end": "1625440"
  },
  {
    "text": "the continuous i o direct goes through",
    "start": "1625440",
    "end": "1628159"
  },
  {
    "text": "the currency",
    "start": "1628159",
    "end": "1630080"
  },
  {
    "text": "so that the canadian done will not",
    "start": "1630080",
    "end": "1633520"
  },
  {
    "text": "to be impacted by the logging flow",
    "start": "1633520",
    "end": "1638080"
  },
  {
    "text": "so that's it this is all about the",
    "start": "1638080",
    "end": "1641760"
  },
  {
    "text": "standard plugin",
    "start": "1641760",
    "end": "1644000"
  },
  {
    "text": "it is easy to integrate with kennedy",
    "start": "1644000",
    "end": "1646000"
  },
  {
    "text": "right",
    "start": "1646000",
    "end": "1648080"
  },
  {
    "text": "thanks now let's do a recap of",
    "start": "1648080",
    "end": "1649520"
  },
  {
    "text": "continuity's architecture real quick",
    "start": "1649520",
    "end": "1651840"
  },
  {
    "text": "going back over the whole container d",
    "start": "1651840",
    "end": "1653200"
  },
  {
    "text": "diagram you can see how operations flow",
    "start": "1653200",
    "end": "1655200"
  },
  {
    "text": "from the client on the left all the way",
    "start": "1655200",
    "end": "1656799"
  },
  {
    "text": "to the runtime and back end on the right",
    "start": "1656799",
    "end": "1658960"
  },
  {
    "text": "the components on the left tend to be",
    "start": "1658960",
    "end": "1660320"
  },
  {
    "text": "more stateless the components on the",
    "start": "1660320",
    "end": "1661919"
  },
  {
    "text": "right have more state",
    "start": "1661919",
    "end": "1663360"
  },
  {
    "text": "even though our garbage collector is in",
    "start": "1663360",
    "end": "1664559"
  },
  {
    "text": "the middle it tracks resources used by",
    "start": "1664559",
    "end": "1666320"
  },
  {
    "text": "all the back ends",
    "start": "1666320",
    "end": "1667200"
  },
  {
    "text": "but it operates completely invisible to",
    "start": "1667200",
    "end": "1669039"
  },
  {
    "text": "the client our end goal is to track any",
    "start": "1669039",
    "end": "1671039"
  },
  {
    "text": "resource which may be used by container",
    "start": "1671039",
    "end": "1672720"
  },
  {
    "text": "d to guarantee the long term stability",
    "start": "1672720",
    "end": "1674399"
  },
  {
    "text": "of the runtime",
    "start": "1674399",
    "end": "1675520"
  },
  {
    "text": "container d 1.4 is the most recent",
    "start": "1675520",
    "end": "1677279"
  },
  {
    "text": "release of container d released back in",
    "start": "1677279",
    "end": "1679120"
  },
  {
    "text": "august",
    "start": "1679120",
    "end": "1679760"
  },
  {
    "text": "it includes support for c groups v2",
    "start": "1679760",
    "end": "1681760"
  },
  {
    "text": "improved sc linux support",
    "start": "1681760",
    "end": "1683279"
  },
  {
    "text": "support for remote snapshotters and",
    "start": "1683279",
    "end": "1685039"
  },
  {
    "text": "support for cri on windows",
    "start": "1685039",
    "end": "1687679"
  },
  {
    "text": "we are about to start the beta process",
    "start": "1687679",
    "end": "1689279"
  },
  {
    "start": "1688000",
    "end": "1688000"
  },
  {
    "text": "for container d 1.5",
    "start": "1689279",
    "end": "1691039"
  },
  {
    "text": "a significant change in this release is",
    "start": "1691039",
    "end": "1692720"
  },
  {
    "text": "the merging of the cri code base into",
    "start": "1692720",
    "end": "1694480"
  },
  {
    "text": "the main container d code base",
    "start": "1694480",
    "end": "1696240"
  },
  {
    "text": "this is not a significant change to the",
    "start": "1696240",
    "end": "1697760"
  },
  {
    "text": "end user but allows us to better",
    "start": "1697760",
    "end": "1699440"
  },
  {
    "text": "integrate cri components into container",
    "start": "1699440",
    "end": "1701279"
  },
  {
    "text": "d",
    "start": "1701279",
    "end": "1701679"
  },
  {
    "text": "it will also allow us to introduce new",
    "start": "1701679",
    "end": "1703200"
  },
  {
    "text": "apis for sandbox and resource management",
    "start": "1703200",
    "end": "1705360"
  },
  {
    "text": "which directly tie into containerity's",
    "start": "1705360",
    "end": "1706960"
  },
  {
    "text": "core services the new sandbox api will",
    "start": "1706960",
    "end": "1709360"
  },
  {
    "text": "not only allow for better integration",
    "start": "1709360",
    "end": "1710880"
  },
  {
    "text": "with virtual machine sandboxes",
    "start": "1710880",
    "end": "1712640"
  },
  {
    "text": "but also allow us to clean up the way",
    "start": "1712640",
    "end": "1714159"
  },
  {
    "text": "pods are managed by container d",
    "start": "1714159",
    "end": "1716000"
  },
  {
    "text": "this will also be the first release with",
    "start": "1716000",
    "end": "1717520"
  },
  {
    "text": "support for nri",
    "start": "1717520",
    "end": "1719039"
  },
  {
    "text": "feel free to join the discussion today",
    "start": "1719039",
    "end": "1720559"
  },
  {
    "text": "for continuity 1.6",
    "start": "1720559",
    "end": "1722399"
  },
  {
    "text": "this release will continue the effort of",
    "start": "1722399",
    "end": "1723840"
  },
  {
    "text": "integrating cri into communities core",
    "start": "1723840",
    "end": "1725760"
  },
  {
    "text": "and improving resource management",
    "start": "1725760",
    "end": "1727360"
  },
  {
    "text": "we're also looking into ways to improve",
    "start": "1727360",
    "end": "1728960"
  },
  {
    "text": "the api between community and kubernetes",
    "start": "1728960",
    "end": "1731440"
  },
  {
    "text": "on the container d project we're always",
    "start": "1731440",
    "end": "1733039"
  },
  {
    "text": "looking for new contributors",
    "start": "1733039",
    "end": "1734559"
  },
  {
    "text": "if you are a container d user please",
    "start": "1734559",
    "end": "1736240"
  },
  {
    "text": "file issues we are also looking for",
    "start": "1736240",
    "end": "1738080"
  },
  {
    "text": "feedback from end users on our roadmap",
    "start": "1738080",
    "end": "1739840"
  },
  {
    "text": "and documentation",
    "start": "1739840",
    "end": "1740960"
  },
  {
    "text": "we know our documentation is lacking for",
    "start": "1740960",
    "end": "1742640"
  },
  {
    "text": "a project as widely used as container d",
    "start": "1742640",
    "end": "1745039"
  },
  {
    "text": "if you have a passion for documentation",
    "start": "1745039",
    "end": "1746640"
  },
  {
    "text": "on the user journey we would like your",
    "start": "1746640",
    "end": "1748080"
  },
  {
    "text": "help",
    "start": "1748080",
    "end": "1749039"
  },
  {
    "text": "if you are interested in being a",
    "start": "1749039",
    "end": "1750159"
  },
  {
    "text": "maintainer we encourage you to get",
    "start": "1750159",
    "end": "1751600"
  },
  {
    "text": "involved",
    "start": "1751600",
    "end": "1752080"
  },
  {
    "text": "in contributing and reviewing code",
    "start": "1752080",
    "end": "1753919"
  },
  {
    "text": "community has a high quality threshold",
    "start": "1753919",
    "end": "1755600"
  },
  {
    "text": "for code contribution and any extra help",
    "start": "1755600",
    "end": "1757600"
  },
  {
    "text": "reviewing code is appreciated",
    "start": "1757600",
    "end": "1759440"
  },
  {
    "text": "the maintainers also recently added a",
    "start": "1759440",
    "end": "1761279"
  },
  {
    "text": "new security advisor role",
    "start": "1761279",
    "end": "1763039"
  },
  {
    "text": "this role is intended to help get",
    "start": "1763039",
    "end": "1764480"
  },
  {
    "text": "individuals who have a vested interest",
    "start": "1764480",
    "end": "1766000"
  },
  {
    "text": "in container runtime security",
    "start": "1766000",
    "end": "1767520"
  },
  {
    "text": "involved in our security release process",
    "start": "1767520",
    "end": "1769919"
  },
  {
    "text": "as the cloud native community has",
    "start": "1769919",
    "end": "1771279"
  },
  {
    "text": "adopted container d",
    "start": "1771279",
    "end": "1772559"
  },
  {
    "text": "our users have a greater need for access",
    "start": "1772559",
    "end": "1774399"
  },
  {
    "text": "and communication within the community",
    "start": "1774399",
    "end": "1776320"
  },
  {
    "text": "we have been doing the best we can as",
    "start": "1776320",
    "end": "1777600"
  },
  {
    "text": "maintainers but we would really",
    "start": "1777600",
    "end": "1778880"
  },
  {
    "text": "appreciate having additional support in",
    "start": "1778880",
    "end": "1780320"
  },
  {
    "text": "managing the community",
    "start": "1780320",
    "end": "1782159"
  },
  {
    "text": "if this or any other role interests you",
    "start": "1782159",
    "end": "1784000"
  },
  {
    "text": "please reach out so we can help you get",
    "start": "1784000",
    "end": "1785279"
  },
  {
    "text": "involved",
    "start": "1785279",
    "end": "1786000"
  },
  {
    "text": "thank you for joining alright bye-bye",
    "start": "1786000",
    "end": "1789679"
  },
  {
    "text": "now",
    "start": "1790520",
    "end": "1793520"
  }
]