[
  {
    "text": "hello my name is steve flanders and i'm",
    "start": "799",
    "end": "2879"
  },
  {
    "text": "a director of engineering at splunk",
    "start": "2879",
    "end": "4480"
  },
  {
    "text": "responsible for observability getting",
    "start": "4480",
    "end": "6319"
  },
  {
    "text": "data in my team and i work extensively",
    "start": "6319",
    "end": "8800"
  },
  {
    "text": "in the open telemetry project",
    "start": "8800",
    "end": "10320"
  },
  {
    "text": "and today i'd like to talk to you more",
    "start": "10320",
    "end": "11599"
  },
  {
    "text": "about it let me start with a few slides",
    "start": "11599",
    "end": "13920"
  },
  {
    "text": "just to introduce you to the project",
    "start": "13920",
    "end": "15599"
  },
  {
    "text": "and then we'll jump into a demo so you",
    "start": "15599",
    "end": "17039"
  },
  {
    "text": "can see how you can get started",
    "start": "17039",
    "end": "19279"
  },
  {
    "text": "open telemetry is a cncf project and is",
    "start": "19279",
    "end": "21920"
  },
  {
    "text": "currently in sandbox",
    "start": "21920",
    "end": "24560"
  },
  {
    "text": "the open symmetry project deals with",
    "start": "24560",
    "end": "26000"
  },
  {
    "text": "cloud native telemetry",
    "start": "26000",
    "end": "27920"
  },
  {
    "text": "if you've heard of observability you've",
    "start": "27920",
    "end": "29519"
  },
  {
    "text": "probably heard of the three pillars of",
    "start": "29519",
    "end": "30960"
  },
  {
    "text": "observability which includes traces",
    "start": "30960",
    "end": "33120"
  },
  {
    "text": "metrics and logs these are just",
    "start": "33120",
    "end": "35360"
  },
  {
    "text": "different data sources",
    "start": "35360",
    "end": "36800"
  },
  {
    "text": "but for each of them there's a variety",
    "start": "36800",
    "end": "38239"
  },
  {
    "text": "of different telemetry layers that need",
    "start": "38239",
    "end": "39760"
  },
  {
    "text": "to be considered",
    "start": "39760",
    "end": "41280"
  },
  {
    "text": "for example you have the instrumentation",
    "start": "41280",
    "end": "43120"
  },
  {
    "text": "apis and canonical implementations",
    "start": "43120",
    "end": "45680"
  },
  {
    "text": "the net result is a client library that",
    "start": "45680",
    "end": "47520"
  },
  {
    "text": "you add to your application in order to",
    "start": "47520",
    "end": "49120"
  },
  {
    "text": "generate and emit the telemetry data",
    "start": "49120",
    "end": "50719"
  },
  {
    "text": "from your environment",
    "start": "50719",
    "end": "52320"
  },
  {
    "text": "these are all language specific",
    "start": "52320",
    "end": "54079"
  },
  {
    "text": "according to the data sources that",
    "start": "54079",
    "end": "55440"
  },
  {
    "text": "you're trying to emit the telemetry data",
    "start": "55440",
    "end": "56960"
  },
  {
    "text": "from",
    "start": "56960",
    "end": "58000"
  },
  {
    "text": "you also have the data infrastructure",
    "start": "58000",
    "end": "59600"
  },
  {
    "text": "which include things like agents or",
    "start": "59600",
    "end": "61520"
  },
  {
    "text": "standalone services or gateways",
    "start": "61520",
    "end": "63920"
  },
  {
    "text": "these are deployed in the environment",
    "start": "63920",
    "end": "65198"
  },
  {
    "text": "typically to collect aggregate",
    "start": "65199",
    "end": "67439"
  },
  {
    "text": "process and send this data to the",
    "start": "67439",
    "end": "69119"
  },
  {
    "text": "backend or back ends of your choice",
    "start": "69119",
    "end": "71600"
  },
  {
    "text": "and then you have a variety of different",
    "start": "71600",
    "end": "73280"
  },
  {
    "text": "interrupt formats which includes the",
    "start": "73280",
    "end": "75119"
  },
  {
    "text": "protocols for sending the data over the",
    "start": "75119",
    "end": "77040"
  },
  {
    "text": "wire",
    "start": "77040",
    "end": "77680"
  },
  {
    "text": "as well as things like context",
    "start": "77680",
    "end": "79119"
  },
  {
    "text": "propagation in the case of distributed",
    "start": "79119",
    "end": "80880"
  },
  {
    "text": "tracing",
    "start": "80880",
    "end": "82400"
  },
  {
    "text": "all of these aspects are what open",
    "start": "82400",
    "end": "84479"
  },
  {
    "text": "telemetry is providing a solution for",
    "start": "84479",
    "end": "87119"
  },
  {
    "text": "the way you should think about it is",
    "start": "87119",
    "end": "88400"
  },
  {
    "text": "it's everything that you deploy in your",
    "start": "88400",
    "end": "89920"
  },
  {
    "text": "environment",
    "start": "89920",
    "end": "90720"
  },
  {
    "text": "in order to generate and emit telemetry",
    "start": "90720",
    "end": "93600"
  },
  {
    "text": "data",
    "start": "93600",
    "end": "94000"
  },
  {
    "text": "as well as collect it and send it to the",
    "start": "94000",
    "end": "96079"
  },
  {
    "text": "back end or back ends of your choice",
    "start": "96079",
    "end": "98720"
  },
  {
    "text": "open symmetry does not actually provide",
    "start": "98720",
    "end": "100320"
  },
  {
    "text": "a back end instead",
    "start": "100320",
    "end": "101840"
  },
  {
    "text": "it offers a vendor agnostic solution",
    "start": "101840",
    "end": "103920"
  },
  {
    "text": "which supports all the popular open",
    "start": "103920",
    "end": "105840"
  },
  {
    "text": "source",
    "start": "105840",
    "end": "106799"
  },
  {
    "text": "solutions available today in the case of",
    "start": "106799",
    "end": "108720"
  },
  {
    "text": "distributed tracing this would include",
    "start": "108720",
    "end": "110240"
  },
  {
    "text": "jaeger and zipkin",
    "start": "110240",
    "end": "111520"
  },
  {
    "text": "in the case of metrics this would",
    "start": "111520",
    "end": "112799"
  },
  {
    "text": "include prometheus",
    "start": "112799",
    "end": "114560"
  },
  {
    "text": "in addition there's a wide variety of",
    "start": "114560",
    "end": "116399"
  },
  {
    "text": "vendor support to send it to the back",
    "start": "116399",
    "end": "118079"
  },
  {
    "text": "ends of your choice",
    "start": "118079",
    "end": "120560"
  },
  {
    "text": "the open telemetry project is made up of",
    "start": "120560",
    "end": "122320"
  },
  {
    "text": "three primary components",
    "start": "122320",
    "end": "124320"
  },
  {
    "text": "you have the specification which is",
    "start": "124320",
    "end": "125920"
  },
  {
    "text": "foundation to the entire project",
    "start": "125920",
    "end": "128319"
  },
  {
    "text": "it is subdivided into the api sdk and",
    "start": "128319",
    "end": "131200"
  },
  {
    "text": "data aspects",
    "start": "131200",
    "end": "132800"
  },
  {
    "text": "these basically define how you go ahead",
    "start": "132800",
    "end": "135040"
  },
  {
    "text": "and construct",
    "start": "135040",
    "end": "136480"
  },
  {
    "text": "and generate the telemetry data from",
    "start": "136480",
    "end": "138000"
  },
  {
    "text": "your environment",
    "start": "138000",
    "end": "140080"
  },
  {
    "text": "next you have the collector which is",
    "start": "140080",
    "end": "141520"
  },
  {
    "text": "used to receive process and export",
    "start": "141520",
    "end": "143440"
  },
  {
    "text": "telemetry data",
    "start": "143440",
    "end": "144959"
  },
  {
    "text": "it is a single binary that can be",
    "start": "144959",
    "end": "146640"
  },
  {
    "text": "deployed deployed in a variety of",
    "start": "146640",
    "end": "148080"
  },
  {
    "text": "different form factors",
    "start": "148080",
    "end": "149200"
  },
  {
    "text": "including as an agent on your hosts or",
    "start": "149200",
    "end": "151440"
  },
  {
    "text": "as a standalone service or gateway",
    "start": "151440",
    "end": "153680"
  },
  {
    "text": "and it's actually the default location",
    "start": "153680",
    "end": "155280"
  },
  {
    "text": "where client libraries will omit their",
    "start": "155280",
    "end": "156879"
  },
  {
    "text": "telemetry data",
    "start": "156879",
    "end": "157760"
  },
  {
    "text": "thus providing a seamless end-to-end",
    "start": "157760",
    "end": "159840"
  },
  {
    "text": "implementation",
    "start": "159840",
    "end": "161519"
  },
  {
    "text": "finally you have the client libraries",
    "start": "161519",
    "end": "163840"
  },
  {
    "text": "these are language specific and are used",
    "start": "163840",
    "end": "165840"
  },
  {
    "text": "to actually instrument your application",
    "start": "165840",
    "end": "168239"
  },
  {
    "text": "there's broad support for all major",
    "start": "168239",
    "end": "169840"
  },
  {
    "text": "languages today initial support for",
    "start": "169840",
    "end": "172080"
  },
  {
    "text": "traces and metrics",
    "start": "172080",
    "end": "173519"
  },
  {
    "text": "and log support recently kicked off and",
    "start": "173519",
    "end": "175440"
  },
  {
    "text": "is part of open telemetry's charter",
    "start": "175440",
    "end": "177840"
  },
  {
    "text": "in the case of client libraries you have",
    "start": "177840",
    "end": "179760"
  },
  {
    "text": "two options you can either manually",
    "start": "179760",
    "end": "181440"
  },
  {
    "text": "instrument your apt which requires code",
    "start": "181440",
    "end": "183360"
  },
  {
    "text": "changes",
    "start": "183360",
    "end": "184159"
  },
  {
    "text": "or you can automatically do it through",
    "start": "184159",
    "end": "186080"
  },
  {
    "text": "runtime parameter and dependency changes",
    "start": "186080",
    "end": "190159"
  },
  {
    "text": "the open telemetry project is currently",
    "start": "190959",
    "end": "192640"
  },
  {
    "text": "in beta and has been since march",
    "start": "192640",
    "end": "194720"
  },
  {
    "text": "but it's actually a rather mature",
    "start": "194720",
    "end": "195920"
  },
  {
    "text": "project it's the joining of two other",
    "start": "195920",
    "end": "197680"
  },
  {
    "text": "projects being open census and open",
    "start": "197680",
    "end": "199200"
  },
  {
    "text": "tracing",
    "start": "199200",
    "end": "199920"
  },
  {
    "text": "and a release candidate was recently",
    "start": "199920",
    "end": "201519"
  },
  {
    "text": "announced for the tracing aspect",
    "start": "201519",
    "end": "203280"
  },
  {
    "text": "with metrics soon to follow an open",
    "start": "203280",
    "end": "206560"
  },
  {
    "text": "telemetry is actually a very active",
    "start": "206560",
    "end": "208319"
  },
  {
    "text": "project",
    "start": "208319",
    "end": "208959"
  },
  {
    "text": "in fact it's the second most active",
    "start": "208959",
    "end": "210720"
  },
  {
    "text": "project in cncf today",
    "start": "210720",
    "end": "212560"
  },
  {
    "text": "behind only kubernetes this is according",
    "start": "212560",
    "end": "214959"
  },
  {
    "text": "to cncf dev stats",
    "start": "214959",
    "end": "218400"
  },
  {
    "text": "open symmetry sees a wide variety",
    "start": "218640",
    "end": "221200"
  },
  {
    "text": "variety of contributions from the",
    "start": "221200",
    "end": "222799"
  },
  {
    "text": "industry",
    "start": "222799",
    "end": "223440"
  },
  {
    "text": "and broad adoption as well all three",
    "start": "223440",
    "end": "226239"
  },
  {
    "text": "major cloud providers are actively",
    "start": "226239",
    "end": "227920"
  },
  {
    "text": "involved with the project",
    "start": "227920",
    "end": "229280"
  },
  {
    "text": "and azure and gcp currently instrument",
    "start": "229280",
    "end": "231200"
  },
  {
    "text": "their back-end services with open",
    "start": "231200",
    "end": "232560"
  },
  {
    "text": "symmetry and emit that data to their",
    "start": "232560",
    "end": "234400"
  },
  {
    "text": "customers",
    "start": "234400",
    "end": "235680"
  },
  {
    "text": "every major vendor is involved with the",
    "start": "235680",
    "end": "237360"
  },
  {
    "text": "project and from an end-user perspective",
    "start": "237360",
    "end": "239920"
  },
  {
    "text": "you'll see companies including mailchimp",
    "start": "239920",
    "end": "241680"
  },
  {
    "text": "postmates and shopify who are currently",
    "start": "241680",
    "end": "243920"
  },
  {
    "text": "maintainers of different client",
    "start": "243920",
    "end": "245439"
  },
  {
    "text": "libraries in open symmetry",
    "start": "245439",
    "end": "246959"
  },
  {
    "text": "and have actually instrumented their",
    "start": "246959",
    "end": "248239"
  },
  {
    "text": "production applications with open",
    "start": "248239",
    "end": "249840"
  },
  {
    "text": "telemetry today",
    "start": "249840",
    "end": "251680"
  },
  {
    "text": "beyond this you'll see a variety of",
    "start": "251680",
    "end": "253280"
  },
  {
    "text": "other contributions throughout the",
    "start": "253280",
    "end": "254560"
  },
  {
    "text": "community",
    "start": "254560",
    "end": "255200"
  },
  {
    "text": "for example jager which is another cncf",
    "start": "255200",
    "end": "257519"
  },
  {
    "text": "project",
    "start": "257519",
    "end": "258400"
  },
  {
    "text": "recently announced that they are moving",
    "start": "258400",
    "end": "259680"
  },
  {
    "text": "from the jaeger collector to the open",
    "start": "259680",
    "end": "261040"
  },
  {
    "text": "telemetry collector",
    "start": "261040",
    "end": "262320"
  },
  {
    "text": "and they actively contribute to open",
    "start": "262320",
    "end": "263680"
  },
  {
    "text": "telemetry today you also see",
    "start": "263680",
    "end": "266240"
  },
  {
    "text": "a wide variety of road map items",
    "start": "266240",
    "end": "268080"
  },
  {
    "text": "including support for envoy",
    "start": "268080",
    "end": "269759"
  },
  {
    "text": "openmetrics and spring",
    "start": "269759",
    "end": "272960"
  },
  {
    "text": "with that i'd like to jump into a demo",
    "start": "272960",
    "end": "275120"
  },
  {
    "text": "and show you how you can get started",
    "start": "275120",
    "end": "276400"
  },
  {
    "text": "with the project",
    "start": "276400",
    "end": "279040"
  },
  {
    "text": "for this demo i'll be using the spring",
    "start": "279440",
    "end": "281600"
  },
  {
    "text": "pet clinic microservices demo",
    "start": "281600",
    "end": "283520"
  },
  {
    "text": "application that's available",
    "start": "283520",
    "end": "285199"
  },
  {
    "text": "on github if we actually take a look at",
    "start": "285199",
    "end": "287840"
  },
  {
    "text": "the readme you'll see that it actually",
    "start": "287840",
    "end": "289600"
  },
  {
    "text": "provides",
    "start": "289600",
    "end": "290400"
  },
  {
    "text": "a architecture diagram depicting what",
    "start": "290400",
    "end": "293199"
  },
  {
    "text": "the",
    "start": "293199",
    "end": "293520"
  },
  {
    "text": "environment actually looks like from a",
    "start": "293520",
    "end": "294960"
  },
  {
    "text": "microservices perspective",
    "start": "294960",
    "end": "296880"
  },
  {
    "text": "there's a variety of different java",
    "start": "296880",
    "end": "298479"
  },
  {
    "text": "services that communicate with one",
    "start": "298479",
    "end": "299840"
  },
  {
    "text": "another",
    "start": "299840",
    "end": "300560"
  },
  {
    "text": "and it provides a pet clinic web",
    "start": "300560",
    "end": "302880"
  },
  {
    "text": "application that you can interact with",
    "start": "302880",
    "end": "305680"
  },
  {
    "text": "that application looks like the",
    "start": "305680",
    "end": "306960"
  },
  {
    "text": "following you have the ability of",
    "start": "306960",
    "end": "309280"
  },
  {
    "text": "viewing a variety of different owners in",
    "start": "309280",
    "end": "311039"
  },
  {
    "text": "the system",
    "start": "311039",
    "end": "311680"
  },
  {
    "text": "as well as veterinarians and you can",
    "start": "311680",
    "end": "314160"
  },
  {
    "text": "even add your own",
    "start": "314160",
    "end": "316240"
  },
  {
    "text": "users to the system now",
    "start": "316240",
    "end": "319759"
  },
  {
    "text": "what i'm going to do is i'm actually",
    "start": "319759",
    "end": "321360"
  },
  {
    "text": "going to modify this repository to add",
    "start": "321360",
    "end": "324080"
  },
  {
    "text": "distributed tracing",
    "start": "324080",
    "end": "325199"
  },
  {
    "text": "because it doesn't have it today i've",
    "start": "325199",
    "end": "327600"
  },
  {
    "text": "actually put together",
    "start": "327600",
    "end": "328720"
  },
  {
    "text": "a test pr here showing off how easy it",
    "start": "328720",
    "end": "331199"
  },
  {
    "text": "is to get started with open telemetry in",
    "start": "331199",
    "end": "332880"
  },
  {
    "text": "order to admit that telemetry data",
    "start": "332880",
    "end": "335280"
  },
  {
    "text": "as i mentioned the open symmetry",
    "start": "335280",
    "end": "336720"
  },
  {
    "text": "collector is the default destination for",
    "start": "336720",
    "end": "338880"
  },
  {
    "text": "sending telemetry data today",
    "start": "338880",
    "end": "340639"
  },
  {
    "text": "so i've gone ahead and added the",
    "start": "340639",
    "end": "342240"
  },
  {
    "text": "collector to the microservices demo",
    "start": "342240",
    "end": "344240"
  },
  {
    "text": "application",
    "start": "344240",
    "end": "345759"
  },
  {
    "text": "the demo application is actually",
    "start": "345759",
    "end": "347520"
  },
  {
    "text": "composed of multiple docker component",
    "start": "347520",
    "end": "349520"
  },
  {
    "text": "components that are in a docker compose",
    "start": "349520",
    "end": "351280"
  },
  {
    "text": "file i've gone ahead and provided a",
    "start": "351280",
    "end": "354039"
  },
  {
    "text": "collector.yaml file to configure the",
    "start": "354039",
    "end": "356479"
  },
  {
    "text": "open telemetry collector",
    "start": "356479",
    "end": "358400"
  },
  {
    "text": "i'm ensuring that it can actually",
    "start": "358400",
    "end": "359680"
  },
  {
    "text": "receive data can process that data",
    "start": "359680",
    "end": "362560"
  },
  {
    "text": "and it can send it to a locally running",
    "start": "362560",
    "end": "364720"
  },
  {
    "text": "zipkin server",
    "start": "364720",
    "end": "366479"
  },
  {
    "text": "this is a one-time configuration and",
    "start": "366479",
    "end": "368560"
  },
  {
    "text": "it's very easy to modify this",
    "start": "368560",
    "end": "369919"
  },
  {
    "text": "configuration",
    "start": "369919",
    "end": "370639"
  },
  {
    "text": "later should you have additional",
    "start": "370639",
    "end": "372400"
  },
  {
    "text": "requirements in the future",
    "start": "372400",
    "end": "375440"
  },
  {
    "text": "beyond this i have to go ahead and",
    "start": "375440",
    "end": "377199"
  },
  {
    "text": "modify the",
    "start": "377199",
    "end": "378560"
  },
  {
    "text": "individual applications themselves that",
    "start": "378560",
    "end": "380080"
  },
  {
    "text": "are written in java",
    "start": "380080",
    "end": "381759"
  },
  {
    "text": "now thanks to open symmetry this is",
    "start": "381759",
    "end": "383120"
  },
  {
    "text": "actually super easy we can use auto",
    "start": "383120",
    "end": "385120"
  },
  {
    "text": "instrumentation and just change runtime",
    "start": "385120",
    "end": "386960"
  },
  {
    "text": "parameters in order to actually get",
    "start": "386960",
    "end": "388800"
  },
  {
    "text": "instrumentation injected into the",
    "start": "388800",
    "end": "390479"
  },
  {
    "text": "environment",
    "start": "390479",
    "end": "391919"
  },
  {
    "text": "to do that you'll see that we're running",
    "start": "391919",
    "end": "394080"
  },
  {
    "text": "the java command",
    "start": "394080",
    "end": "395280"
  },
  {
    "text": "and what i've done is i've gone ahead",
    "start": "395280",
    "end": "396880"
  },
  {
    "text": "and added this java agent flag",
    "start": "396880",
    "end": "399120"
  },
  {
    "text": "which points to the open telemetry java",
    "start": "399120",
    "end": "401199"
  },
  {
    "text": "agent jar file",
    "start": "401199",
    "end": "403440"
  },
  {
    "text": "with this in place and by starting the",
    "start": "403440",
    "end": "405440"
  },
  {
    "text": "application it will go ahead and auto",
    "start": "405440",
    "end": "407360"
  },
  {
    "text": "instrument for me",
    "start": "407360",
    "end": "409120"
  },
  {
    "text": "the only piece of additional information",
    "start": "409120",
    "end": "410639"
  },
  {
    "text": "i need to provide is actually the",
    "start": "410639",
    "end": "412080"
  },
  {
    "text": "service name",
    "start": "412080",
    "end": "413360"
  },
  {
    "text": "and i can do that through the use of an",
    "start": "413360",
    "end": "415280"
  },
  {
    "text": "environmental variable as you see here",
    "start": "415280",
    "end": "417919"
  },
  {
    "text": "as you can see this is the discovery",
    "start": "417919",
    "end": "419599"
  },
  {
    "text": "service there's also customers visits",
    "start": "419599",
    "end": "422240"
  },
  {
    "text": "and a variety of others",
    "start": "422240",
    "end": "424000"
  },
  {
    "text": "for each of the docker containers i do",
    "start": "424000",
    "end": "425520"
  },
  {
    "text": "the exact same thing i add the java",
    "start": "425520",
    "end": "427360"
  },
  {
    "text": "agent command",
    "start": "427360",
    "end": "428160"
  },
  {
    "text": "and i define the service name this way i",
    "start": "428160",
    "end": "430800"
  },
  {
    "text": "can see each service independently",
    "start": "430800",
    "end": "432720"
  },
  {
    "text": "in the back end to which i send that",
    "start": "432720",
    "end": "434080"
  },
  {
    "text": "data to",
    "start": "434080",
    "end": "437120"
  },
  {
    "text": "finally i've gone ahead and added the",
    "start": "437120",
    "end": "438400"
  },
  {
    "text": "collector to the docker compose file so",
    "start": "438400",
    "end": "440319"
  },
  {
    "text": "we can fire it up with the configuration",
    "start": "440319",
    "end": "441840"
  },
  {
    "text": "we showed at the top",
    "start": "441840",
    "end": "443280"
  },
  {
    "text": "and i've ensured that the docker file",
    "start": "443280",
    "end": "444800"
  },
  {
    "text": "itself goes ahead and pulls in the java",
    "start": "444800",
    "end": "447039"
  },
  {
    "text": "agent jar file so when we're building",
    "start": "447039",
    "end": "448960"
  },
  {
    "text": "it is available for use by all the",
    "start": "448960",
    "end": "450639"
  },
  {
    "text": "docker containers",
    "start": "450639",
    "end": "452400"
  },
  {
    "text": "that's it now i can start up the",
    "start": "452400",
    "end": "454319"
  },
  {
    "text": "application and i can see the telemetry",
    "start": "454319",
    "end": "456240"
  },
  {
    "text": "data that it's emitting",
    "start": "456240",
    "end": "457160"
  },
  {
    "text": "[Music]",
    "start": "457160",
    "end": "459120"
  },
  {
    "text": "i have these configuration changes",
    "start": "459120",
    "end": "460639"
  },
  {
    "text": "running locally after making the changes",
    "start": "460639",
    "end": "462960"
  },
  {
    "text": "that i just showed",
    "start": "462960",
    "end": "464080"
  },
  {
    "text": "i went ahead and built the docker",
    "start": "464080",
    "end": "466080"
  },
  {
    "text": "compose file",
    "start": "466080",
    "end": "467360"
  },
  {
    "text": "and then started it up you can see here",
    "start": "467360",
    "end": "470560"
  },
  {
    "text": "that it's actually emitting telemetry",
    "start": "470560",
    "end": "472319"
  },
  {
    "text": "data and that's being reported by the",
    "start": "472319",
    "end": "473680"
  },
  {
    "text": "collector",
    "start": "473680",
    "end": "474639"
  },
  {
    "text": "this is because i enabled the logging",
    "start": "474639",
    "end": "476479"
  },
  {
    "text": "exporter just so i can show for demo",
    "start": "476479",
    "end": "478400"
  },
  {
    "text": "purposes that telemetry data is being",
    "start": "478400",
    "end": "480080"
  },
  {
    "text": "emitted",
    "start": "480080",
    "end": "481120"
  },
  {
    "text": "but now let me actually show you in the",
    "start": "481120",
    "end": "482800"
  },
  {
    "text": "ui how the zip conserver is actually",
    "start": "482800",
    "end": "484560"
  },
  {
    "text": "receiving this data",
    "start": "484560",
    "end": "487440"
  },
  {
    "text": "in zipkin i can go ahead and start",
    "start": "488160",
    "end": "490400"
  },
  {
    "text": "searching for service names",
    "start": "490400",
    "end": "492639"
  },
  {
    "text": "you'll see a variety of different",
    "start": "492639",
    "end": "493919"
  },
  {
    "text": "service names are available to me",
    "start": "493919",
    "end": "495680"
  },
  {
    "text": "and these service names will actually",
    "start": "495680",
    "end": "496879"
  },
  {
    "text": "match the service names you'll see in",
    "start": "496879",
    "end": "498400"
  },
  {
    "text": "the pr that i put up",
    "start": "498400",
    "end": "499840"
  },
  {
    "text": "this is why we went ahead and named the",
    "start": "499840",
    "end": "501680"
  },
  {
    "text": "individual java services",
    "start": "501680",
    "end": "503199"
  },
  {
    "text": "so we can see them each independently",
    "start": "503199",
    "end": "505840"
  },
  {
    "text": "let's go ahead and look at one",
    "start": "505840",
    "end": "507039"
  },
  {
    "text": "for example we'll call up the customers",
    "start": "507039",
    "end": "508879"
  },
  {
    "text": "one we'll run a query",
    "start": "508879",
    "end": "511520"
  },
  {
    "text": "now we can actually see distributed",
    "start": "511520",
    "end": "512800"
  },
  {
    "text": "traces in the system i can see a variety",
    "start": "512800",
    "end": "514959"
  },
  {
    "text": "of different calls for example the admin",
    "start": "514959",
    "end": "516560"
  },
  {
    "text": "service calling the customer service or",
    "start": "516560",
    "end": "518080"
  },
  {
    "text": "the customer service calling the",
    "start": "518080",
    "end": "519120"
  },
  {
    "text": "discovery service",
    "start": "519120",
    "end": "520959"
  },
  {
    "text": "we can drill into these services we can",
    "start": "520959",
    "end": "523200"
  },
  {
    "text": "also expand them to see the metadata",
    "start": "523200",
    "end": "525040"
  },
  {
    "text": "that they each have",
    "start": "525040",
    "end": "526640"
  },
  {
    "text": "for example here we have the customers",
    "start": "526640",
    "end": "529200"
  },
  {
    "text": "service with an http put command",
    "start": "529200",
    "end": "531519"
  },
  {
    "text": "that was a successful command we have",
    "start": "531519",
    "end": "533040"
  },
  {
    "text": "the http status underscore code",
    "start": "533040",
    "end": "535200"
  },
  {
    "text": "we can see the url that was called peer",
    "start": "535200",
    "end": "537519"
  },
  {
    "text": "nap name",
    "start": "537519",
    "end": "538640"
  },
  {
    "text": "we even tell what open symmetry client",
    "start": "538640",
    "end": "540480"
  },
  {
    "text": "library was used so this is using the",
    "start": "540480",
    "end": "542399"
  },
  {
    "text": "java auto instrumentation",
    "start": "542399",
    "end": "544240"
  },
  {
    "text": "it's actually a jax rs client version",
    "start": "544240",
    "end": "546399"
  },
  {
    "text": "1.1",
    "start": "546399",
    "end": "547760"
  },
  {
    "text": "so a rich amount of telemetry data is",
    "start": "547760",
    "end": "549200"
  },
  {
    "text": "actually provided for me out of the box",
    "start": "549200",
    "end": "551920"
  },
  {
    "text": "you may recall earlier that i said",
    "start": "551920",
    "end": "553360"
  },
  {
    "text": "there's specifications in",
    "start": "553360",
    "end": "555120"
  },
  {
    "text": "open telemetry one of them is actually",
    "start": "555120",
    "end": "557279"
  },
  {
    "text": "around data",
    "start": "557279",
    "end": "558240"
  },
  {
    "text": "or more specifically the semantic",
    "start": "558240",
    "end": "559600"
  },
  {
    "text": "conventions these are a generic",
    "start": "559600",
    "end": "562080"
  },
  {
    "text": "way an open standards way in which you",
    "start": "562080",
    "end": "564399"
  },
  {
    "text": "can actually",
    "start": "564399",
    "end": "565360"
  },
  {
    "text": "name something for example in the case",
    "start": "565360",
    "end": "567519"
  },
  {
    "text": "of restful services",
    "start": "567519",
    "end": "568720"
  },
  {
    "text": "this would include things like the http",
    "start": "568720",
    "end": "570399"
  },
  {
    "text": "dot method or the http",
    "start": "570399",
    "end": "572160"
  },
  {
    "text": "status underscore code by having an open",
    "start": "572160",
    "end": "574959"
  },
  {
    "text": "standards way of actually defining",
    "start": "574959",
    "end": "576720"
  },
  {
    "text": "something",
    "start": "576720",
    "end": "577360"
  },
  {
    "text": "you can actually have a vendor agnostic",
    "start": "577360",
    "end": "578800"
  },
  {
    "text": "solution this way we all know what a",
    "start": "578800",
    "end": "581120"
  },
  {
    "text": "restful service is",
    "start": "581120",
    "end": "582320"
  },
  {
    "text": "because it has the same metadata",
    "start": "582320",
    "end": "583760"
  },
  {
    "text": "consistently across it",
    "start": "583760",
    "end": "585760"
  },
  {
    "text": "in addition by having the information",
    "start": "585760",
    "end": "587680"
  },
  {
    "text": "about the telemetry data itself",
    "start": "587680",
    "end": "589440"
  },
  {
    "text": "you can tell what versions of things",
    "start": "589440",
    "end": "590800"
  },
  {
    "text": "that you're using this can of course",
    "start": "590800",
    "end": "593120"
  },
  {
    "text": "also be complemented with infrastructure",
    "start": "593120",
    "end": "594880"
  },
  {
    "text": "information",
    "start": "594880",
    "end": "595760"
  },
  {
    "text": "open symmetry calls that resources and",
    "start": "595760",
    "end": "598000"
  },
  {
    "text": "also has semantic conventions around",
    "start": "598000",
    "end": "599440"
  },
  {
    "text": "resources",
    "start": "599440",
    "end": "600080"
  },
  {
    "text": "as well this way you could for example",
    "start": "600080",
    "end": "602320"
  },
  {
    "text": "know what container your application is",
    "start": "602320",
    "end": "604480"
  },
  {
    "text": "running in",
    "start": "604480",
    "end": "605360"
  },
  {
    "text": "or which cloud provider which data",
    "start": "605360",
    "end": "607200"
  },
  {
    "text": "center which region",
    "start": "607200",
    "end": "608800"
  },
  {
    "text": "all this can be enriched and added as",
    "start": "608800",
    "end": "610480"
  },
  {
    "text": "additional metadata onto the spans that",
    "start": "610480",
    "end": "612480"
  },
  {
    "text": "are being generated",
    "start": "612480",
    "end": "614480"
  },
  {
    "text": "next i want to go back to the collector",
    "start": "614480",
    "end": "617120"
  },
  {
    "text": "as i mentioned the collector can be used",
    "start": "617120",
    "end": "618640"
  },
  {
    "text": "to receive",
    "start": "618640",
    "end": "619600"
  },
  {
    "text": "process and export telemetry data but",
    "start": "619600",
    "end": "622480"
  },
  {
    "text": "what are some of the use cases for it",
    "start": "622480",
    "end": "624480"
  },
  {
    "text": "to demonstrate that i'm going to pull up",
    "start": "624480",
    "end": "627040"
  },
  {
    "text": "a",
    "start": "627040",
    "end": "627760"
  },
  {
    "text": "similar configuration to what we used to",
    "start": "627760",
    "end": "629360"
  },
  {
    "text": "earlier this configuration",
    "start": "629360",
    "end": "631440"
  },
  {
    "text": "supports receiving zipkin data and",
    "start": "631440",
    "end": "634560"
  },
  {
    "text": "sending it out locally to a logging",
    "start": "634560",
    "end": "636720"
  },
  {
    "text": "exporter so we can see the output",
    "start": "636720",
    "end": "639040"
  },
  {
    "text": "on standard out let's go ahead and",
    "start": "639040",
    "end": "642079"
  },
  {
    "text": "run this docker container",
    "start": "642079",
    "end": "645680"
  },
  {
    "text": "then i've actually constructed a json",
    "start": "645839",
    "end": "648560"
  },
  {
    "text": "payload that consists of a single span",
    "start": "648560",
    "end": "651360"
  },
  {
    "text": "trace which i can then send via curl",
    "start": "651360",
    "end": "654560"
  },
  {
    "text": "to the collector and we can go ahead and",
    "start": "654560",
    "end": "656720"
  },
  {
    "text": "check the output",
    "start": "656720",
    "end": "658880"
  },
  {
    "text": "now above here you can see that we did",
    "start": "658880",
    "end": "661040"
  },
  {
    "text": "in fact receive a span",
    "start": "661040",
    "end": "662800"
  },
  {
    "text": "a span with a service name of api it",
    "start": "662800",
    "end": "665839"
  },
  {
    "text": "looks like it is",
    "start": "665839",
    "end": "666959"
  },
  {
    "text": "a server span kind and it has a variety",
    "start": "666959",
    "end": "670320"
  },
  {
    "text": "of different metadata for example you'll",
    "start": "670320",
    "end": "672320"
  },
  {
    "text": "notice the http underscore response code",
    "start": "672320",
    "end": "675200"
  },
  {
    "text": "which was 201 in this case",
    "start": "675200",
    "end": "677839"
  },
  {
    "text": "it also has some interesting additional",
    "start": "677839",
    "end": "680640"
  },
  {
    "text": "metadata",
    "start": "680640",
    "end": "681600"
  },
  {
    "text": "this looks like it might be a social",
    "start": "681600",
    "end": "683839"
  },
  {
    "text": "security number",
    "start": "683839",
    "end": "684800"
  },
  {
    "text": "which would be pii and definitely not",
    "start": "684800",
    "end": "687040"
  },
  {
    "text": "something i'd want to attach",
    "start": "687040",
    "end": "688160"
  },
  {
    "text": "to my spans i can also see an email",
    "start": "688160",
    "end": "691680"
  },
  {
    "text": "address here",
    "start": "691680",
    "end": "692560"
  },
  {
    "text": "and well that might be sensitive and",
    "start": "692560",
    "end": "694800"
  },
  {
    "text": "maybe i'm not",
    "start": "694800",
    "end": "695600"
  },
  {
    "text": "that comfortable sending that data",
    "start": "695600",
    "end": "697279"
  },
  {
    "text": "either so what can i do about this",
    "start": "697279",
    "end": "700480"
  },
  {
    "text": "let's go ahead and go back to the",
    "start": "700480",
    "end": "702240"
  },
  {
    "text": "configuration here",
    "start": "702240",
    "end": "703600"
  },
  {
    "text": "you'll notice that i'm using an",
    "start": "703600",
    "end": "705360"
  },
  {
    "text": "attributes processor",
    "start": "705360",
    "end": "706959"
  },
  {
    "text": "and it's currently configured to go",
    "start": "706959",
    "end": "708720"
  },
  {
    "text": "ahead and add some metadata",
    "start": "708720",
    "end": "710320"
  },
  {
    "text": "in fact it adds an environment tag where",
    "start": "710320",
    "end": "712800"
  },
  {
    "text": "the value",
    "start": "712800",
    "end": "713519"
  },
  {
    "text": "is set to dependent clinic well i can",
    "start": "713519",
    "end": "716399"
  },
  {
    "text": "actually use this attributes processor",
    "start": "716399",
    "end": "718560"
  },
  {
    "text": "to do a variety of different operations",
    "start": "718560",
    "end": "720639"
  },
  {
    "text": "like for example that social security",
    "start": "720639",
    "end": "722800"
  },
  {
    "text": "number really needs to be removed",
    "start": "722800",
    "end": "724880"
  },
  {
    "text": "so let's go ahead and use the delete",
    "start": "724880",
    "end": "726560"
  },
  {
    "text": "action",
    "start": "726560",
    "end": "727920"
  },
  {
    "text": "and i saw the email address too",
    "start": "727920",
    "end": "731040"
  },
  {
    "text": "and that's a little bit sensitive so",
    "start": "731040",
    "end": "732880"
  },
  {
    "text": "maybe i'll go ahead and",
    "start": "732880",
    "end": "734560"
  },
  {
    "text": "hash that value so we'll just make those",
    "start": "734560",
    "end": "737680"
  },
  {
    "text": "two changes we will",
    "start": "737680",
    "end": "739200"
  },
  {
    "text": "fire the collector back up and go ahead",
    "start": "739200",
    "end": "742320"
  },
  {
    "text": "and send",
    "start": "742320",
    "end": "743120"
  },
  {
    "text": "the exact same data again and let's see",
    "start": "743120",
    "end": "746240"
  },
  {
    "text": "what we get",
    "start": "746240",
    "end": "747120"
  },
  {
    "text": "this time so i still see let me get an",
    "start": "747120",
    "end": "750240"
  },
  {
    "text": "environment pet clinic that's been added",
    "start": "750240",
    "end": "752399"
  },
  {
    "text": "so that's",
    "start": "752399",
    "end": "753040"
  },
  {
    "text": "great i can see that the email address",
    "start": "753040",
    "end": "756320"
  },
  {
    "text": "is now hashed so i don't really know",
    "start": "756320",
    "end": "758560"
  },
  {
    "text": "what the value",
    "start": "758560",
    "end": "759440"
  },
  {
    "text": "is but i have a unique identifier that i",
    "start": "759440",
    "end": "761519"
  },
  {
    "text": "could then query",
    "start": "761519",
    "end": "762480"
  },
  {
    "text": "in the back end that i send this data to",
    "start": "762480",
    "end": "764880"
  },
  {
    "text": "and i",
    "start": "764880",
    "end": "765839"
  },
  {
    "text": "no longer see a social security number",
    "start": "765839",
    "end": "768480"
  },
  {
    "text": "so",
    "start": "768480",
    "end": "768880"
  },
  {
    "text": "that's that's great so one particular",
    "start": "768880",
    "end": "772079"
  },
  {
    "text": "use case of the collector is to go ahead",
    "start": "772079",
    "end": "773920"
  },
  {
    "text": "and add remove or modify the metadata",
    "start": "773920",
    "end": "777040"
  },
  {
    "text": "but the collector can do other things",
    "start": "777040",
    "end": "778639"
  },
  {
    "text": "too like for example",
    "start": "778639",
    "end": "780079"
  },
  {
    "text": "not only can it support traces it can",
    "start": "780079",
    "end": "782079"
  },
  {
    "text": "support metrics",
    "start": "782079",
    "end": "783519"
  },
  {
    "text": "and given i'm running everything locally",
    "start": "783519",
    "end": "785360"
  },
  {
    "text": "here on docker",
    "start": "785360",
    "end": "786959"
  },
  {
    "text": "let's go ahead and enable the docker",
    "start": "786959",
    "end": "789680"
  },
  {
    "text": "stats",
    "start": "789680",
    "end": "791760"
  },
  {
    "text": "receiver we'll set the collection",
    "start": "791760",
    "end": "794320"
  },
  {
    "text": "interval here",
    "start": "794320",
    "end": "795440"
  },
  {
    "text": "to one second just for it for demo",
    "start": "795440",
    "end": "797519"
  },
  {
    "text": "purposes",
    "start": "797519",
    "end": "798800"
  },
  {
    "text": "and let's quickly go ahead and build out",
    "start": "798800",
    "end": "801680"
  },
  {
    "text": "a metrics pipeline",
    "start": "801680",
    "end": "803440"
  },
  {
    "text": "so we have a docker restocker stats",
    "start": "803440",
    "end": "807680"
  },
  {
    "text": "receiver we can configure",
    "start": "807680",
    "end": "811560"
  },
  {
    "text": "processors in this case i'll add a batch",
    "start": "811560",
    "end": "814880"
  },
  {
    "text": "processor",
    "start": "814880",
    "end": "816320"
  },
  {
    "text": "and let's use the same logging",
    "start": "816320",
    "end": "820000"
  },
  {
    "text": "exporter here",
    "start": "820000",
    "end": "823040"
  },
  {
    "text": "and then try running the collector again",
    "start": "823040",
    "end": "827519"
  },
  {
    "text": "and let's see if we actually get any",
    "start": "827519",
    "end": "829120"
  },
  {
    "text": "stat information",
    "start": "829120",
    "end": "830880"
  },
  {
    "text": "look at that we now have metrics being",
    "start": "830880",
    "end": "833440"
  },
  {
    "text": "collected from",
    "start": "833440",
    "end": "834399"
  },
  {
    "text": "docker and i can see for example the",
    "start": "834399",
    "end": "836720"
  },
  {
    "text": "container network io",
    "start": "836720",
    "end": "838560"
  },
  {
    "text": "usage transmit packets and all the",
    "start": "838560",
    "end": "842079"
  },
  {
    "text": "associated data with that pretty cool as",
    "start": "842079",
    "end": "845199"
  },
  {
    "text": "you can see",
    "start": "845199",
    "end": "845760"
  },
  {
    "text": "very simple and easy here it's all",
    "start": "845760",
    "end": "847680"
  },
  {
    "text": "configuration driven",
    "start": "847680",
    "end": "849040"
  },
  {
    "text": "and it provides a lot of capabilities i",
    "start": "849040",
    "end": "851279"
  },
  {
    "text": "only showed a couple but there are",
    "start": "851279",
    "end": "852800"
  },
  {
    "text": "several more supported and it's a very",
    "start": "852800",
    "end": "854720"
  },
  {
    "text": "extensible platform",
    "start": "854720",
    "end": "856000"
  },
  {
    "text": "so very easy to add additional receivers",
    "start": "856000",
    "end": "858560"
  },
  {
    "text": "processors or exporters to",
    "start": "858560",
    "end": "860480"
  },
  {
    "text": "the system i hope you enjoyed that demo",
    "start": "860480",
    "end": "863519"
  },
  {
    "text": "showing how easy it is to get started",
    "start": "863519",
    "end": "865120"
  },
  {
    "text": "with open telemetry",
    "start": "865120",
    "end": "867440"
  },
  {
    "text": "we would love for you to come join the",
    "start": "867440",
    "end": "868800"
  },
  {
    "text": "project and get involved as well",
    "start": "868800",
    "end": "871040"
  },
  {
    "text": "you can join the conversation which",
    "start": "871040",
    "end": "872639"
  },
  {
    "text": "happens all the time",
    "start": "872639",
    "end": "874079"
  },
  {
    "text": "on gitter you can come join one of our",
    "start": "874079",
    "end": "876399"
  },
  {
    "text": "many special interest groups",
    "start": "876399",
    "end": "878240"
  },
  {
    "text": "every single language client library has",
    "start": "878240",
    "end": "880560"
  },
  {
    "text": "its own special interest groups",
    "start": "880560",
    "end": "881920"
  },
  {
    "text": "as well as the collector and all the",
    "start": "881920",
    "end": "883600"
  },
  {
    "text": "specifications",
    "start": "883600",
    "end": "885199"
  },
  {
    "text": "and of course prs are welcome we try to",
    "start": "885199",
    "end": "888160"
  },
  {
    "text": "label",
    "start": "888160",
    "end": "888639"
  },
  {
    "text": "all of the github issues with either",
    "start": "888639",
    "end": "890079"
  },
  {
    "text": "good first issue or help wanted",
    "start": "890079",
    "end": "892160"
  },
  {
    "text": "which is a great way to get involved",
    "start": "892160",
    "end": "893440"
  },
  {
    "text": "with the project",
    "start": "893440",
    "end": "895680"
  },
  {
    "text": "thanks so much for joining me",
    "start": "895680",
    "end": "899839"
  }
]