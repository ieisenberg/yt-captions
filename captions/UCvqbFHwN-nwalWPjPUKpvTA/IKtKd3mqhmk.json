[
  {
    "text": "well thank you thank you for staying up to the very last um session of the day",
    "start": "80",
    "end": "7640"
  },
  {
    "text": "um I assume that I will just assume that most of you are the biggest es nerds in",
    "start": "7640",
    "end": "12920"
  },
  {
    "text": "the whole conference for staying at the for a conference like for a talk like",
    "start": "12920",
    "end": "18199"
  },
  {
    "text": "this so we're gonna I hope to reward that es Nery because we're going to see some fun",
    "start": "18199",
    "end": "24800"
  },
  {
    "text": "stuff uh from this tool um so to introduce myself",
    "start": "24800",
    "end": "30519"
  },
  {
    "text": "um my name is Alo Garcia um people call me Buco um I maintain some of the",
    "start": "30519",
    "end": "36480"
  },
  {
    "text": "release Tooling in kubernetes um I am one of the technical leads with kubernetes sec reles I also maintain the",
    "start": "36480",
    "end": "43920"
  },
  {
    "text": "um kubernetes uh the protom project in the open source security",
    "start": "43920",
    "end": "49399"
  },
  {
    "text": "Foundation uh which is something that we'll delve into uh and I am also one of",
    "start": "49399",
    "end": "55160"
  },
  {
    "text": "the um collaborators with the spdx standard uh so most of my Mo most of my",
    "start": "55160",
    "end": "63039"
  },
  {
    "text": "daily activities have to deal with best boms um if you want to follow or",
    "start": "63039",
    "end": "68439"
  },
  {
    "text": "whatever and work almost in every every everywhere um so before we start um I",
    "start": "68439",
    "end": "75640"
  },
  {
    "text": "would like to talk about why bomshell was created in the first place so we're",
    "start": "75640",
    "end": "81759"
  },
  {
    "text": "gonna um be going into what bomshell is and what you can use it for uh but it's",
    "start": "81759",
    "end": "87880"
  },
  {
    "text": "important to understand why it was created in the first place so anybody who has worked with espon probably",
    "start": "87880",
    "end": "93600"
  },
  {
    "text": "you've seen that there's a lot of variance in espon uh output in not only",
    "start": "93600",
    "end": "98680"
  },
  {
    "text": "in the output of the esone generators but also in the documents that tools will expect um when ingesting some s",
    "start": "98680",
    "end": "106200"
  },
  {
    "text": "bombs will create like flat lists of dependencies and some can produce like",
    "start": "106200",
    "end": "111479"
  },
  {
    "text": "really beautiful structured s bombs but then that structure breaks other tools",
    "start": "111479",
    "end": "116520"
  },
  {
    "text": "when ingesting them um sometimes we will have um you you will need to merge",
    "start": "116520",
    "end": "123399"
  },
  {
    "text": "headbones because tools are very specialized on what they can look at for example some tools are more focused on",
    "start": "123399",
    "end": "129319"
  },
  {
    "text": "licensing and some tools are more uh focused on uh extracting the the security information from dependencies",
    "start": "129319",
    "end": "136720"
  },
  {
    "text": "and so if you want to have like a great esone sometimes you need to combine the information and all of those um also uh",
    "start": "136720",
    "end": "145440"
  },
  {
    "text": "there's a need to query the Sone data so for example if you have to enact policy to eject certain dependencies or make",
    "start": "145440",
    "end": "151560"
  },
  {
    "text": "sure that you're not ingesting certain versions you need to query the Sone data that's uh in there and sometimes you can",
    "start": "151560",
    "end": "158680"
  },
  {
    "text": "do that with tools like JQ for example but uh JQ understands J um Json but it",
    "start": "158680",
    "end": "166400"
  },
  {
    "text": "doesn't really understand the semantics of the esum um and finally well the last",
    "start": "166400",
    "end": "173040"
  },
  {
    "text": "point was about en acting policy from the Sone data so uh before we going into",
    "start": "173040",
    "end": "180640"
  },
  {
    "text": "into bombshell and what it does uh it's important to understand protom uh protom",
    "start": "180640",
    "end": "187319"
  },
  {
    "text": "is uh at its core is a neutral representation of sbom data it is a",
    "start": "187319",
    "end": "193480"
  },
  {
    "text": "project uh currently under development in the open source security Foundation um and it's basically you can",
    "start": "193480",
    "end": "200440"
  },
  {
    "text": "think of bomshell as a universal Universal IO layer for esom so you can",
    "start": "200440",
    "end": "205920"
  },
  {
    "text": "read any esom work with a neutral representation of the data and then you can output the the the data to any of",
    "start": "205920",
    "end": "213480"
  },
  {
    "text": "the S1 formats supports uh both spdx and cycl DX um the project also has a",
    "start": "213480",
    "end": "220319"
  },
  {
    "text": "library that supports a graph API uh so that you can do operations like mixing",
    "start": "220319",
    "end": "226200"
  },
  {
    "text": "the the S information we're going to take a look at that in a little bit and we're starting to add more functionality",
    "start": "226200",
    "end": "232239"
  },
  {
    "text": "to the project to do to handle some of the common sbom uh operations and for",
    "start": "232239",
    "end": "238280"
  },
  {
    "text": "example right now we just finished the the storage module that lets you store",
    "start": "238280",
    "end": "243319"
  },
  {
    "text": "the esbo information in a variety of backends uh we have one for end the graph database like the graph uh um",
    "start": "243319",
    "end": "251319"
  },
  {
    "text": "interface for for go we're working on storing them in in um buckets and other",
    "start": "251319",
    "end": "257239"
  },
  {
    "text": "types of block storage files and so on um and bom and protom is the core of",
    "start": "257239",
    "end": "265040"
  },
  {
    "text": "bomshell um if you uh perhaps you saw this uh um bombshell was um developed as",
    "start": "265040",
    "end": "273120"
  },
  {
    "text": "part of a uh both bombshell and protom were developed as part of a contract from uh DHS the department of homeand",
    "start": "273120",
    "end": "280800"
  },
  {
    "text": "security and cisa um So based on that um we developed a protom to make so the",
    "start": "280800",
    "end": "288479"
  },
  {
    "text": "idea of that project was to have better collaboration between the S1 formats and",
    "start": "288479",
    "end": "294199"
  },
  {
    "text": "once it it was finished uh the project was donated to the op ssf um the they it",
    "start": "294199",
    "end": "300520"
  },
  {
    "text": "was like a big announcement back in April um and it was picked up by some of the uh Outlets technology",
    "start": "300520",
    "end": "308320"
  },
  {
    "text": "Outlets um so let's go to the start diving into the technical part um so the",
    "start": "308320",
    "end": "314680"
  },
  {
    "text": "first thing to understand about all of this is that esoms are graphs in fact",
    "start": "314680",
    "end": "320120"
  },
  {
    "text": "they directed graphs uh so if you take for example an sdx Sone you will have a",
    "start": "320120",
    "end": "326199"
  },
  {
    "text": "bunch of packages and a bunch of files and then the graph starts by uh if you",
    "start": "326199",
    "end": "331520"
  },
  {
    "text": "start TR traversing the esom at the esom route uh that esom route is linked via",
    "start": "331520",
    "end": "337560"
  },
  {
    "text": "relationships to the packages that form a node and then to the also to the files",
    "start": "337560",
    "end": "343120"
  },
  {
    "text": "that that are also uh function as nodes in the in the graph and those",
    "start": "343120",
    "end": "348240"
  },
  {
    "text": "relationships which are typed uh kind of form the edges of the of the graph in",
    "start": "348240",
    "end": "353680"
  },
  {
    "text": "cycl DX it's kind of the same um but a little bit different the way it works is",
    "start": "353680",
    "end": "359120"
  },
  {
    "text": "in on the X you will have the top of the SB the entry point and most of the time",
    "start": "359120",
    "end": "364800"
  },
  {
    "text": "but not always you will have a root component uh that captures some information about the software piece",
    "start": "364800",
    "end": "369960"
  },
  {
    "text": "that the sbom is describing and from there you have a tree with other",
    "start": "369960",
    "end": "375880"
  },
  {
    "text": "components uh attached to it and uh and if you think about tree that itself is a",
    "start": "375880",
    "end": "383280"
  },
  {
    "text": "graph uh and that could be the graph but cycl DX also has a dependency graph",
    "start": "383280",
    "end": "389960"
  },
  {
    "text": "section where you can introduce more relationships between the components making it a more complex graph um and so",
    "start": "389960",
    "end": "399639"
  },
  {
    "text": "both both standards can be abstracted as as graphs and this is what protom uh",
    "start": "399639",
    "end": "405400"
  },
  {
    "text": "does so I'm going to show you a couple of Concepts about um protom uh the",
    "start": "405400",
    "end": "411039"
  },
  {
    "text": "central core of information in protom is a node a node captures the information",
    "start": "411039",
    "end": "417280"
  },
  {
    "text": "of a component in Cyclone DX and and a package or a file in spdx so in protom",
    "start": "417280",
    "end": "424000"
  },
  {
    "text": "we have a representation uh data structure that captures everything that the that the",
    "start": "424000",
    "end": "430800"
  },
  {
    "text": "native formats uh have in their node representation so in the packages or",
    "start": "430800",
    "end": "435879"
  },
  {
    "text": "components and when you ingest an nebom into protom it will capture everything losslessly so that's a guarantee that um",
    "start": "435879",
    "end": "442919"
  },
  {
    "text": "protom gives you um once you read it um you start adding in and the par of",
    "start": "442919",
    "end": "450199"
  },
  {
    "text": "protom reads the native formats and starts creating nodes for each of the of the components and packages that it",
    "start": "450199",
    "end": "456120"
  },
  {
    "text": "finds and then uh starts forming the graph so that's those nodes are the core",
    "start": "456120",
    "end": "463560"
  },
  {
    "text": "of the of the protom model and uh just as in spdx the the the the edges of the",
    "start": "463560",
    "end": "471560"
  },
  {
    "text": "of the graph are also typed so we capture the relationship types of spdx",
    "start": "471560",
    "end": "477039"
  },
  {
    "text": "into the protom model so that they don't get lost then the second one the the next",
    "start": "477039",
    "end": "483400"
  },
  {
    "text": "concept to understand about protom is the note list so if you think about this",
    "start": "483400",
    "end": "488919"
  },
  {
    "text": "this part of the graph that could be a nest bom almost but it could it could",
    "start": "488919",
    "end": "494520"
  },
  {
    "text": "also be like a part of the graph like a subsection and in protom we have this",
    "start": "494520",
    "end": "500720"
  },
  {
    "text": "notion called a no list that captures a graph its relationships and also the the",
    "start": "500720",
    "end": "506319"
  },
  {
    "text": "starting nodes so it's intended to be a fragment of anbum and by fragment it",
    "start": "506319",
    "end": "512919"
  },
  {
    "text": "can be part a part of it but also the whole graph of anbum and it's intended to be portable so that you can do",
    "start": "512919",
    "end": "519039"
  },
  {
    "text": "operations with it we're going to see a little bit how that works um so when we",
    "start": "519039",
    "end": "524720"
  },
  {
    "text": "capture that a graph piece and we encapsulate it in a in a data structure",
    "start": "524720",
    "end": "530480"
  },
  {
    "text": "that's called a a no list uh something important to not is that a node list can",
    "start": "530480",
    "end": "535760"
  },
  {
    "text": "contain more than one root node um so for for example if you check out the uh",
    "start": "535760",
    "end": "542800"
  },
  {
    "text": "resulting data from reading an esbon that describes two container images you're going to have two entry points in",
    "start": "542800",
    "end": "549120"
  },
  {
    "text": "the in the data um and then finally there's a document um a document that is",
    "start": "549120",
    "end": "556440"
  },
  {
    "text": "what would be the SP spdx document or the cyclon DX document is simply a node",
    "start": "556440",
    "end": "561839"
  },
  {
    "text": "list with some metadata attached to it and that metadata contains the author",
    "start": "561839",
    "end": "567519"
  },
  {
    "text": "the date uh the identifier of the document and so on um so we capture that metadata the",
    "start": "567519",
    "end": "574839"
  },
  {
    "text": "note list into a into encapsulated in a in a data structure and that becomes a",
    "start": "574839",
    "end": "581279"
  },
  {
    "text": "document um as I mentioned before protom uh has a full graph API so that you can",
    "start": "581279",
    "end": "588480"
  },
  {
    "text": "do operations on the esom data so for when you read esoms you can extract",
    "start": "588480",
    "end": "594519"
  },
  {
    "text": "parts of it you can merge them uh all using the the the functions of the uh",
    "start": "594519",
    "end": "600160"
  },
  {
    "text": "Library the library itself it's written in go um and there are some folks",
    "start": "600160",
    "end": "606480"
  },
  {
    "text": "starting an another um port in python as well so those are the basis the basics",
    "start": "606480",
    "end": "614399"
  },
  {
    "text": "of of protom something important to note about protom is that protom is coped",
    "start": "614399",
    "end": "619760"
  },
  {
    "text": "only to the bill of materials part of the of the formats so right now the",
    "start": "619760",
    "end": "625360"
  },
  {
    "text": "formats have been growing to to capture everything from not just uh component",
    "start": "625360",
    "end": "631320"
  },
  {
    "text": "data but also um things like Ai invex and vulnerability information we protom",
    "start": "631320",
    "end": "637839"
  },
  {
    "text": "cares only about the dependency data you can still reference the other",
    "start": "637839",
    "end": "643720"
  },
  {
    "text": "information by treating them as an external document but uh this is this this is what the project",
    "start": "643720",
    "end": "649880"
  },
  {
    "text": "does now on top of protom so protom is",
    "start": "649880",
    "end": "655079"
  },
  {
    "text": "designed to be like a IO layer for ESB and on top of it we start seeing that people are building",
    "start": "655079",
    "end": "662360"
  },
  {
    "text": "applications so there's a uh if you were at the keynote this morning um Marina talked about s vomit that that one is",
    "start": "662360",
    "end": "669760"
  },
  {
    "text": "based on protom uh there's another project in the open ASF called bomb CTL",
    "start": "669760",
    "end": "674800"
  },
  {
    "text": "also built on top of protom and bombshell was kind of the first application built on top of of the stack",
    "start": "674800",
    "end": "681959"
  },
  {
    "text": "so here's more or less the way it's structured at the very bottom you have the native formats which are spdx and",
    "start": "681959",
    "end": "688240"
  },
  {
    "text": "cyclone and then on top of it you have protom which is serves as the io layer",
    "start": "688240",
    "end": "693320"
  },
  {
    "text": "between the application on top and the formats below and what bombshell is at",
    "start": "693320",
    "end": "699240"
  },
  {
    "text": "its core is simply an like the graph API of Proto exposed in cell the C the",
    "start": "699240",
    "end": "707839"
  },
  {
    "text": "common expression language um if you're not familiar with cell it's uh what drives uh some of the latest uh",
    "start": "707839",
    "end": "715240"
  },
  {
    "text": "kubernetes policies and also um things like the uh um queries in in compute",
    "start": "715240",
    "end": "721120"
  },
  {
    "text": "engine and other other projects and it's used generally for to declare things",
    "start": "721120",
    "end": "726760"
  },
  {
    "text": "like polic and so on um so how does",
    "start": "726760",
    "end": "732399"
  },
  {
    "text": "bomshell work in a nutshell so well at its core it's simply an temperor so you",
    "start": "732399",
    "end": "739440"
  },
  {
    "text": "have the bombshell binary and you load what we call our cell recipe and it's",
    "start": "739440",
    "end": "745000"
  },
  {
    "text": "generally can be just like one line of code that does a transformation to your sbom and then you fit it an sbom and you",
    "start": "745000",
    "end": "752600"
  },
  {
    "text": "get an output that's the basic operation of it of course the input can be not",
    "start": "752600",
    "end": "758079"
  },
  {
    "text": "just one sbom can be more than one sbom and those es bombs since it's based on",
    "start": "758079",
    "end": "763480"
  },
  {
    "text": "Proto bom it can be any format that you want um and then the output varies",
    "start": "763480",
    "end": "768959"
  },
  {
    "text": "depending on what the cell recipe does so the output can be a new as bom a new",
    "start": "768959",
    "end": "775199"
  },
  {
    "text": "document can be a bullan and you can set bomb to fail if you want to use it as in",
    "start": "775199",
    "end": "781800"
  },
  {
    "text": "a pipe so that things break such as a test for example uh the output can be a",
    "start": "781800",
    "end": "787399"
  },
  {
    "text": "node uh just like for example if you select one node it will output it and or",
    "start": "787399",
    "end": "793160"
  },
  {
    "text": "the note list so you can and when you run it in the terminal um right now there's a question",
    "start": "793160",
    "end": "800199"
  },
  {
    "text": "of what do we do with a node and node list so that it's a useful output like we can output like some dump of the",
    "start": "800199",
    "end": "807560"
  },
  {
    "text": "information so that you can read it uh but we're kind of looking of what to do with it um a little bit that's why a",
    "start": "807560",
    "end": "814120"
  },
  {
    "text": "little bit more useful um so here's an example of how those",
    "start": "814120",
    "end": "820079"
  },
  {
    "text": "recipes work um so when you run uh one of those recipes you get an sbom array",
    "start": "820079",
    "end": "829880"
  },
  {
    "text": "with uh with an indexed uh with each of the documents that you pass it as an",
    "start": "829880",
    "end": "835800"
  },
  {
    "text": "argument loaded into into memory and based on those documents you can do certain operations based on the on the",
    "start": "835800",
    "end": "843079"
  },
  {
    "text": "Proto bom API so for example if you run s bombs the select the first T bom and",
    "start": "843079",
    "end": "849720"
  },
  {
    "text": "then you call the packages method it will extract all of the packages from uh from the first document uh living out",
    "start": "849720",
    "end": "856920"
  },
  {
    "text": "all of the files for example and finally um you can do transformations to",
    "start": "856920",
    "end": "863480"
  },
  {
    "text": "the so to the resulting to the result of packages like for example convert it to a document",
    "start": "863480",
    "end": "869759"
  },
  {
    "text": "um the evaluation uh so something important to not is the the final evaluation of the recipe so each of",
    "start": "869759",
    "end": "877880"
  },
  {
    "text": "those um Parts before the period will give you a different uh evaluation so",
    "start": "877880",
    "end": "883000"
  },
  {
    "text": "the first one if you only say s bomb zero it'll give you back a document so",
    "start": "883000",
    "end": "888360"
  },
  {
    "text": "the the recipe will evaluate to the document then when you attach packages that gives you a not list as a result",
    "start": "888360",
    "end": "895880"
  },
  {
    "text": "and there are certain operations that you can do with each of those results old types and with with a no list you",
    "start": "895880",
    "end": "902839"
  },
  {
    "text": "can convert them using the two document function to a document uh so if you if I",
    "start": "902839",
    "end": "908519"
  },
  {
    "text": "were to write this in in a in a file and execute it using bombshell and fit it",
    "start": "908519",
    "end": "914600"
  },
  {
    "text": "out an S one it will go get loaded as the first s get all of the packages and",
    "start": "914600",
    "end": "920560"
  },
  {
    "text": "return an sone with only those packages we're going to see an example in a little bit um when you have a document as an",
    "start": "920560",
    "end": "927600"
  },
  {
    "text": "output you obviously can choose any of the formats that protom supports uh to",
    "start": "927600",
    "end": "933440"
  },
  {
    "text": "to uh output and write the in that in that format um so that's basically the core",
    "start": "933440",
    "end": "940519"
  },
  {
    "text": "of it um so I would like to show you uh a couple of examples of how this",
    "start": "940519",
    "end": "946800"
  },
  {
    "text": "works um so for this examples I'm going to be using bomb which is the sbom tool",
    "start": "946800",
    "end": "954040"
  },
  {
    "text": "that we wrote for kubernetes uh which lets you generate esoms or also visualize them",
    "start": "954040",
    "end": "959880"
  },
  {
    "text": "uh and then here's the the I'm going to be using an esom as an example that has",
    "start": "959880",
    "end": "965600"
  },
  {
    "text": "this structure here um if you see at the top uh well this is because if I show",
    "start": "965600",
    "end": "972440"
  },
  {
    "text": "you the code it's going to be difficult to visualize so I I made it like this so the S I'm going to be using describes a",
    "start": "972440",
    "end": "978839"
  },
  {
    "text": "container image and it has a package at the top describing the image has a",
    "start": "978839",
    "end": "983959"
  },
  {
    "text": "second package describing the first layer it's a single layer image and then",
    "start": "983959",
    "end": "989000"
  },
  {
    "text": "then it has packages for each of the operating system packages inside of the image and those packages contain in turn",
    "start": "989000",
    "end": "997319"
  },
  {
    "text": "the files that that package provides so for example I'm going to be using a um",
    "start": "997319",
    "end": "1003920"
  },
  {
    "text": "an image for curl and then the curl package um will list below it all of all",
    "start": "1003920",
    "end": "1011120"
  },
  {
    "text": "all of its files so for example if I do uh",
    "start": "1011120",
    "end": "1020160"
  },
  {
    "text": "if I show you the sbom using bomb it's",
    "start": "1021040",
    "end": "1026918"
  },
  {
    "text": "that structure that I was just telling you so at the top I have a package describing the image then the",
    "start": "1026919",
    "end": "1032839"
  },
  {
    "text": "layer and then that layer has 12 OS packages installed uh so the first one",
    "start": "1032839",
    "end": "1039240"
  },
  {
    "text": "is CA certificates bundle G LIC uh the base layout of Wolfie um LD",
    "start": "1039240",
    "end": "1046280"
  },
  {
    "text": "Linux jipc and so on and each of those packages in turn contain their own",
    "start": "1046280",
    "end": "1051360"
  },
  {
    "text": "files so um the first example that I want to show you is if I do",
    "start": "1051360",
    "end": "1059080"
  },
  {
    "text": "bombshell and then I load the recipe uh for let me show you the recipe um I'm",
    "start": "1059080",
    "end": "1065440"
  },
  {
    "text": "going to be executing this one so this is this is what a recipe looks like I don't know I",
    "start": "1065440",
    "end": "1072200"
  },
  {
    "text": "think it's big enough right so the recipe is a single line of",
    "start": "1072200",
    "end": "1077600"
  },
  {
    "text": "code that does a transformation so the idea is that you can run bombshell like for example inci and then have it",
    "start": "1077600",
    "end": "1083400"
  },
  {
    "text": "transform your s bombs um and then to do something useful with them so this this",
    "start": "1083400",
    "end": "1089520"
  },
  {
    "text": "uh this example will load the ESB that I pass it all of the sbbs and then it's going to select the first one it's going",
    "start": "1089520",
    "end": "1095919"
  },
  {
    "text": "to extract all of the files and then finally it's going to um convert that",
    "start": "1095919",
    "end": "1101080"
  },
  {
    "text": "into an esom so if I do uh showell then pass the",
    "start": "1101080",
    "end": "1109880"
  },
  {
    "text": "recipe and then the esom which was that girl one if I run it I'm going to get a",
    "start": "1109880",
    "end": "1117559"
  },
  {
    "text": "new esbon that has only the files so and to prove that I'm going to show",
    "start": "1117559",
    "end": "1125799"
  },
  {
    "text": "you so here it is so this is the new sbom the new stru the structure of the",
    "start": "1127039",
    "end": "1132960"
  },
  {
    "text": "new that I just generated so it's uh describe it's a new ESB that only contains a 50 five files that I added",
    "start": "1132960",
    "end": "1141080"
  },
  {
    "text": "something to note here is this warning messages here output by bom so as you",
    "start": "1141080",
    "end": "1146640"
  },
  {
    "text": "can see it added the orphan nodes and the reason why this is happening it's",
    "start": "1146640",
    "end": "1152520"
  },
  {
    "text": "because I since I only extracted the files and remove uh remove their parents",
    "start": "1152520",
    "end": "1158039"
  },
  {
    "text": "which are the packages those nodes are now floating and they don't have an owner so what um what uh bomb does is",
    "start": "1158039",
    "end": "1164919"
  },
  {
    "text": "that it takes all of those sare notes and adds them as a top level uh files in",
    "start": "1164919",
    "end": "1171080"
  },
  {
    "text": "them which is not what happens if I",
    "start": "1171080",
    "end": "1176120"
  },
  {
    "text": "run if I show you this recipe this is the one that I use in the example it's",
    "start": "1176120",
    "end": "1182440"
  },
  {
    "text": "using instead of the files function this is using the packages function so what this does is it takes the S1 and gives",
    "start": "1182440",
    "end": "1188600"
  },
  {
    "text": "me back the packages but you're going to see what happens with this one um so first let me",
    "start": "1188600",
    "end": "1195919"
  },
  {
    "text": "show you the resulting S one so that you can see it",
    "start": "1195919",
    "end": "1200640"
  },
  {
    "text": "so this is a resulting SB so I have it set up to Output spdx but um I I can",
    "start": "1201520",
    "end": "1207200"
  },
  {
    "text": "show you um a different output so this is the sbom only with the packages so no",
    "start": "1207200",
    "end": "1214520"
  },
  {
    "text": "files are included in this so if I pass this through the",
    "start": "1214520",
    "end": "1219320"
  },
  {
    "text": "visualizer you're going to see it's a much simpler esom and it doesn't include the files but the packages are still",
    "start": "1221039",
    "end": "1228400"
  },
  {
    "text": "there and since the packages are related uh they they are the the parents of the the files that got removed they keep",
    "start": "1228400",
    "end": "1235760"
  },
  {
    "text": "their structure uh in the file so you can do that transformation so if you can think about for example if you want to",
    "start": "1235760",
    "end": "1242240"
  },
  {
    "text": "do um uh for example think about running a process that checks the Integrity of",
    "start": "1242240",
    "end": "1247960"
  },
  {
    "text": "files based on the check sums you can pass it through the files function get an S one of only the files and run that",
    "start": "1247960",
    "end": "1254640"
  },
  {
    "text": "to check the hashes of files for example or if you want to uh do something like",
    "start": "1254640",
    "end": "1259720"
  },
  {
    "text": "pass these dependencies through a security scanner you can get um um an esom only with the dependencies without",
    "start": "1259720",
    "end": "1265960"
  },
  {
    "text": "the follow information and that sort of thing um so in the first example when I",
    "start": "1265960",
    "end": "1271600"
  },
  {
    "text": "run it I transform the esom uh on the left to a much simpler version which",
    "start": "1271600",
    "end": "1277600"
  },
  {
    "text": "only included the files in a in a flat list and then on the second example I",
    "start": "1277600",
    "end": "1284039"
  },
  {
    "text": "removed all of the files and got the the structure on the right which is uh keeping the same structure without the",
    "start": "1284039",
    "end": "1290559"
  },
  {
    "text": "follow information so those are kind of the most basic examples of what you can do now let me walk you through a little",
    "start": "1290559",
    "end": "1298880"
  },
  {
    "text": "bit of a more complex example which is composing the two SS so imagine that you",
    "start": "1298880",
    "end": "1304440"
  },
  {
    "text": "have a very cheesy S one generator that only can detect that there's a file and",
    "start": "1304440",
    "end": "1310679"
  },
  {
    "text": "gives you a package with um a package",
    "start": "1310679",
    "end": "1315799"
  },
  {
    "text": "with a binary uh and then some hases in fact I have a such an sbom here uh so I",
    "start": "1315799",
    "end": "1323159"
  },
  {
    "text": "generated an sbom with the bomb binary which is the same tool I'm using now um so if I visualize this",
    "start": "1323159",
    "end": "1331480"
  },
  {
    "text": "one so it's a n bom that only has one package describing that binary that's it",
    "start": "1332400",
    "end": "1338720"
  },
  {
    "text": "um in fact it's so simple that probably can fit in the hole in in one in one screen yeah so it's just one package it",
    "start": "1338720",
    "end": "1345559"
  },
  {
    "text": "has the hashes of the file the license that's about it so that sbom wouldn't",
    "start": "1345559",
    "end": "1351400"
  },
  {
    "text": "get me very far but then there's um if you have seen GitHub has this feature",
    "start": "1351400",
    "end": "1357840"
  },
  {
    "text": "that can give you um an esom on any commit of your",
    "start": "1357840",
    "end": "1363279"
  },
  {
    "text": "repository and that one also has his this particular things some things are",
    "start": "1363279",
    "end": "1368919"
  },
  {
    "text": "good some not that good um but you can improve um for example if I have a",
    "start": "1368919",
    "end": "1374360"
  },
  {
    "text": "binary that s generator will not pick it up so if I want to generate an S of my binary with its dependencies",
    "start": "1374360",
    "end": "1381320"
  },
  {
    "text": "I have to do that Crossing of information so I have",
    "start": "1381320",
    "end": "1386960"
  },
  {
    "text": "here an S BB I generated with GitHub uh of the dependencies of of bomb of the",
    "start": "1386960",
    "end": "1393640"
  },
  {
    "text": "the tool I'm using uh so I'm going to show you what it looks like",
    "start": "1393640",
    "end": "1401080"
  },
  {
    "text": "uh so this is the sbom this is the information loaded on the sbom that g",
    "start": "1401600",
    "end": "1407760"
  },
  {
    "text": "GitHub generated for me so it has 109 191 uh relationships so that's are",
    "start": "1407760",
    "end": "1415320"
  },
  {
    "text": "the packages that it found and so those are all of the dependencies that it could find in my repository right",
    "start": "1415320",
    "end": "1423760"
  },
  {
    "text": "so how do I let me show you the composition",
    "start": "1423760",
    "end": "1428799"
  },
  {
    "text": "example uh",
    "start": "1428799",
    "end": "1435400"
  },
  {
    "text": "compose all right here it is so this is a a some something that's a",
    "start": "1435400",
    "end": "1442799"
  },
  {
    "text": "little bit more complex uh but it's also super simple to understand so what this recipe does is that it um loads the",
    "start": "1442799",
    "end": "1450840"
  },
  {
    "text": "takes the first sbone loaded into memory then it takes uh here uh takes the the",
    "start": "1450840",
    "end": "1459400"
  },
  {
    "text": "second sbone loaded into memory extracts uh the packages of a specific type",
    "start": "1459400",
    "end": "1465440"
  },
  {
    "text": "because if you if you notice here uh the GitHub SBB generator is picking up uh",
    "start": "1465440",
    "end": "1471320"
  },
  {
    "text": "the npm dependencies part of the documentation and down here it's also",
    "start": "1471320",
    "end": "1476520"
  },
  {
    "text": "including including the actions uh notated as packages so I don't care",
    "start": "1476520",
    "end": "1482840"
  },
  {
    "text": "about those because they're not really dependencies of my of my binary right so",
    "start": "1482840",
    "end": "1488279"
  },
  {
    "text": "what the the recipe here is doing is that from the second esbon it it squaring to extract only the Pearl type",
    "start": "1488279",
    "end": "1495760"
  },
  {
    "text": "of go uh the package URL uh identified packages and generating a list of those",
    "start": "1495760",
    "end": "1502880"
  },
  {
    "text": "and then it's mixing them um into the a",
    "start": "1502880",
    "end": "1508320"
  },
  {
    "text": "node named file bomb on the first test bom with a relationship type of depend",
    "start": "1508320",
    "end": "1514520"
  },
  {
    "text": "on so if I run this",
    "start": "1514520",
    "end": "1519440"
  },
  {
    "text": "um examples so I'm going to pass the first",
    "start": "1519679",
    "end": "1527919"
  },
  {
    "text": "as one which is the one that only has the binary binary and then the second esum",
    "start": "1527919",
    "end": "1534720"
  },
  {
    "text": "is going to be the one from",
    "start": "1534720",
    "end": "1537960"
  },
  {
    "text": "GitHub then I run it then I get a new esum uh so if you see so I'm going to",
    "start": "1542279",
    "end": "1547679"
  },
  {
    "text": "show you just quickly here the packages all of the packages are now typed with Goan right so I'm going to pass it",
    "start": "1547679",
    "end": "1554960"
  },
  {
    "text": "through the visualizer so that we can see what we got um",
    "start": "1554960",
    "end": "1560240"
  },
  {
    "text": "okay so this is the new resulting esom so I have the same component at the top",
    "start": "1562240",
    "end": "1569799"
  },
  {
    "text": "but only this time it's mixed with the contents of the second asum and with all",
    "start": "1569799",
    "end": "1575480"
  },
  {
    "text": "of the filtered um with all of the filter dependencies",
    "start": "1575480",
    "end": "1581000"
  },
  {
    "text": "so probably here I mixed up this the slides but uh so the idea is that",
    "start": "1581000",
    "end": "1588880"
  },
  {
    "text": "uh you can do queries by the package type uh inside of the sbom like we just",
    "start": "1588880",
    "end": "1594279"
  },
  {
    "text": "showed so for example uh in the the first TB in the c one uh we have the uh",
    "start": "1594279",
    "end": "1600960"
  },
  {
    "text": "all of the components have a package type of oci and then the operating system dependencies have a package type",
    "start": "1600960",
    "end": "1607640"
  },
  {
    "text": "um a pearl type of U APK so you can do queries to filter those and select some",
    "start": "1607640",
    "end": "1613840"
  },
  {
    "text": "and filter others out so that's it um I wanted to leave some time for questions",
    "start": "1613840",
    "end": "1621320"
  },
  {
    "text": "in case there were any um I also have a couple of other um examples that I can show you and um if you if you're",
    "start": "1621320",
    "end": "1628440"
  },
  {
    "text": "interested uh but that's basically it um just a a final note on some pointers",
    "start": "1628440",
    "end": "1635240"
  },
  {
    "text": "here um that the first link is the proton project if you want to join um",
    "start": "1635240",
    "end": "1640520"
  },
  {
    "text": "we're it's still under development there's a ton of cool Innovation going on in that project uh right now we're",
    "start": "1640520",
    "end": "1647279"
  },
  {
    "text": "working on the stage back ends but we're going to start expanding to other areas of of of fbom uh trying to capture",
    "start": "1647279",
    "end": "1654640"
  },
  {
    "text": "everything that uh for example we're now starting to debate about having a single",
    "start": "1654640",
    "end": "1661120"
  },
  {
    "text": "um package URL parser so that we can do that kind of filtering on the dependencies and so on um and the second",
    "start": "1661120",
    "end": "1669080"
  },
  {
    "text": "um who I mixed up the the the kubernetes one uh the second one is bomshell you",
    "start": "1669080",
    "end": "1674559"
  },
  {
    "text": "can download it um think of it as a more of a technology preview uh but the idea",
    "start": "1674559",
    "end": "1681279"
  },
  {
    "text": "is if people find it useful um perhaps we'll move that project into the protom",
    "start": "1681279",
    "end": "1687399"
  },
  {
    "text": "project so that it um it can leave there and and well the final one was supposed",
    "start": "1687399",
    "end": "1693559"
  },
  {
    "text": "to be the link to to bomb so that you can download it and visualize the S bombs and so on um so that's it",
    "start": "1693559",
    "end": "1701920"
  },
  {
    "text": "[Applause] basically all right I don't know if you",
    "start": "1701920",
    "end": "1708919"
  },
  {
    "text": "have any questions or um or whatever all of the all of the examples that I showed are in the in the bombshell repository",
    "start": "1708919",
    "end": "1716279"
  },
  {
    "text": "in case you want to download them and play with them and if you have suggestions for improving the apis uh",
    "start": "1716279",
    "end": "1723440"
  },
  {
    "text": "they're always welcome um not the not all of the API from broam not all of the",
    "start": "1723440",
    "end": "1729240"
  },
  {
    "text": "graph API from proam is exposed yet in cell uh because it keeps changing but if",
    "start": "1729240",
    "end": "1734919"
  },
  {
    "text": "you want to um if you need some more function uh either at the Go level or at the cell",
    "start": "1734919",
    "end": "1741360"
  },
  {
    "text": "C Level we can certainly add more functions um and yeah that's",
    "start": "1741360",
    "end": "1749279"
  },
  {
    "text": "it anybody if anybody has any questions whatever just uh let me know",
    "start": "1754360",
    "end": "1760880"
  },
  {
    "text": "but uh something that I wanted to show you and I forgot was the example of",
    "start": "1762159",
    "end": "1769200"
  },
  {
    "text": "uh for example if I do",
    "start": "1769200",
    "end": "1775320"
  },
  {
    "text": "this for example if I do if I do the packages example I get like the spdx",
    "start": "1775320",
    "end": "1781440"
  },
  {
    "text": "document and the other one was I forgot to show you this it's I can pass the",
    "start": "1781440",
    "end": "1786519"
  },
  {
    "text": "esbon format here and the results of the query are going to be converted to a to",
    "start": "1786519",
    "end": "1793760"
  },
  {
    "text": "a cyclone thex uh document so there it is and",
    "start": "1793760",
    "end": "1799559"
  },
  {
    "text": "another one that I wanted to show you was you can do simple queries like for",
    "start": "1799559",
    "end": "1806159"
  },
  {
    "text": "example extracting information from a node so you can have that so there's a",
    "start": "1806159",
    "end": "1812120"
  },
  {
    "text": "bunch of of things that can can be use for that uh and bombshell can be set up",
    "start": "1812120",
    "end": "1817760"
  },
  {
    "text": "to fail if some of the conditions are if you get a uh if you have like a the",
    "start": "1817760",
    "end": "1824000"
  },
  {
    "text": "return of your query of your recipes a Boolean you can exit non zero so that",
    "start": "1824000",
    "end": "1829320"
  },
  {
    "text": "your tests fail if you're running it inci and yeah there's a like a bunch of of other uh use cases for it so just",
    "start": "1829320",
    "end": "1837640"
  },
  {
    "text": "wanted to to get it in front of you that's it thank",
    "start": "1837640",
    "end": "1843600"
  },
  {
    "text": "you e",
    "start": "1856919",
    "end": "1860960"
  },
  {
    "text": "um so the question for the recording was that if you can you generate an an eson",
    "start": "1916159",
    "end": "1922080"
  },
  {
    "text": "from a pure binary right the answer is it depends it depends on the on what you",
    "start": "1922080",
    "end": "1929120"
  },
  {
    "text": "use to build a binary uh go is very generous and will store the information in the binary itself so you can extract",
    "start": "1929120",
    "end": "1935639"
  },
  {
    "text": "it uh but other things I see that information gets lost and you never know the dependencies so the",
    "start": "1935639",
    "end": "1944600"
  },
  {
    "text": "also they have exactly I",
    "start": "1948960",
    "end": "1954320"
  },
  {
    "text": "mean well there's a whole question about trusting the esom right because",
    "start": "1954320",
    "end": "1959360"
  },
  {
    "text": "anybody could potentially uh that's what the esom project that I mentioned in",
    "start": "1959360",
    "end": "1964679"
  },
  {
    "text": "earlier is trying to do like can you prove how this Sone was generated uh but",
    "start": "1964679",
    "end": "1971639"
  },
  {
    "text": "yeah I mean there are different kinds of esoms depending on you can build them at",
    "start": "1971639",
    "end": "1976720"
  },
  {
    "text": "source you can can build them uh on deploy and depending on the ecosystem that your program runs in and where",
    "start": "1976720",
    "end": "1984760"
  },
  {
    "text": "you're uh setting it up the it it can the sbom can be different uh so for",
    "start": "1984760",
    "end": "1990519"
  },
  {
    "text": "example if you have a dependency that's dynamically linked uh that binary will use certain dependencies on one system",
    "start": "1990519",
    "end": "1997919"
  },
  {
    "text": "but could be linked to different ones so that's that's why there are different espo generation times um for",
    "start": "1997919",
    "end": "2005200"
  },
  {
    "text": "Source um there's some question about for example in some languages for for example I",
    "start": "2005200",
    "end": "2012880"
  },
  {
    "text": "think in Python you can specify like a range of like give me this dependency",
    "start": "2012880",
    "end": "2017960"
  },
  {
    "text": "higher than this version number and that dependency will only get computed when you uh when The Interpreter runs it uh",
    "start": "2017960",
    "end": "2026360"
  },
  {
    "text": "so there are some questions on the validity or value that an n one with a",
    "start": "2026360",
    "end": "2031519"
  },
  {
    "text": "with without the version can give you right so um I think I personally think",
    "start": "2031519",
    "end": "2037399"
  },
  {
    "text": "it's it's better to know without without a version that not knowing at all uh but",
    "start": "2037399",
    "end": "2044279"
  },
  {
    "text": "um yeah it can can",
    "start": "2044279",
    "end": "2048158"
  },
  {
    "text": "change exactly I mean so if it depends on what you want to use the espon 4 if",
    "start": "2049960",
    "end": "2055720"
  },
  {
    "text": "you want to know exactly the the the the version of the dependencies for something like a matching against a",
    "start": "2055720",
    "end": "2062118"
  },
  {
    "text": "vulnerability database then you need to perhaps have a a none that has the",
    "start": "2062119",
    "end": "2068480"
  },
  {
    "text": "dependencies already resolved to whatever it's going to be running uh or having a those dependencies locked uh or",
    "start": "2068480",
    "end": "2077118"
  },
  {
    "text": "a um a language that uh has a loog file by just built-in doesn't compute the",
    "start": "2077119",
    "end": "2083200"
  },
  {
    "text": "dependencies uh dynamically um but sometimes if you want to try to for example avoid a dependency",
    "start": "2083200",
    "end": "2091720"
  },
  {
    "text": "that you know it has a like a bad license right you don't care about the version you simply look for it and block",
    "start": "2091720",
    "end": "2100720"
  },
  {
    "text": "it for",
    "start": "2103520",
    "end": "2106680"
  },
  {
    "text": "here e",
    "start": "2126640",
    "end": "2130680"
  },
  {
    "text": "exactly so the idea and that's that's why it supports loading more than one s bom so the idea is I",
    "start": "2165599",
    "end": "2172240"
  },
  {
    "text": "mean this has to be tested in in real life to see how memory behaves and all of that but uh in theory you can load",
    "start": "2172240",
    "end": "2178160"
  },
  {
    "text": "any number of f bombs and then you can do those queries on all of them and then try to match for example does the name",
    "start": "2178160",
    "end": "2185280"
  },
  {
    "text": "of this dependency match look for J and the the the version matches this and",
    "start": "2185280",
    "end": "2192040"
  },
  {
    "text": "then can give you uh like a Boolean for example and then you can use that to",
    "start": "2192040",
    "end": "2197520"
  },
  {
    "text": "drive policy so the idea is that um so the the",
    "start": "2197520",
    "end": "2206160"
  },
  {
    "text": "the the idea of bombshell at its score is kind of have these super simple files and even specify them on the command",
    "start": "2206160",
    "end": "2212520"
  },
  {
    "text": "line uh just to do like some processing like quick processing of an esom like oh",
    "start": "2212520",
    "end": "2218760"
  },
  {
    "text": "I I have an SB that I know that it's going to be generated all throughout my CI at the same time I know the the",
    "start": "2218760",
    "end": "2225240"
  },
  {
    "text": "structure it's going to have but I need to change a little bit the the output or it structure or extract the value just",
    "start": "2225240",
    "end": "2232319"
  },
  {
    "text": "to Fed it to something else and you just stick bombshell in the middle do the transformation get the data move",
    "start": "2232319",
    "end": "2240920"
  },
  {
    "text": "on all right any any any",
    "start": "2244960",
    "end": "2249680"
  },
  {
    "text": "others okay cool thank you and",
    "start": "2252839",
    "end": "2258960"
  },
  {
    "text": "uh we made it to the end",
    "start": "2258960",
    "end": "2263680"
  }
]