[
  {
    "text": "okay recording and that is exciting",
    "start": "530",
    "end": "5899"
  },
  {
    "text": "hello everyone ready to talk about scope",
    "start": "5899",
    "end": "11580"
  },
  {
    "text": "managers now someone from data dog put",
    "start": "11580",
    "end": "24210"
  },
  {
    "text": "this up and I'm sorry I'm spacing on your real actual name wrong",
    "start": "24210",
    "end": "31320"
  },
  {
    "text": "rock rock nice to meet you nice to meet you too thank you so much for putting",
    "start": "31320",
    "end": "39120"
  },
  {
    "text": "that summary together I'm wondering if",
    "start": "39120",
    "end": "45180"
  },
  {
    "text": "he - sexual then pushing this issue and",
    "start": "45180",
    "end": "51860"
  },
  {
    "text": "have a lot of good things to say on it I'm sorry I missed that though there was",
    "start": "51860",
    "end": "57870"
  },
  {
    "text": "a bit of noise and oh sorry I was just so the first part was discussing",
    "start": "57870",
    "end": "63570"
  },
  {
    "text": "JavaScript scope managers you did a pretty great write-up and review I was",
    "start": "63570",
    "end": "70290"
  },
  {
    "text": "wondering would you mind kicking off that section of this meeting by maybe",
    "start": "70290",
    "end": "76110"
  },
  {
    "text": "just doing a summary since then pushing on this one okay so basically summarize",
    "start": "76110",
    "end": "84439"
  },
  {
    "text": "our findings by implementing the first version of the scope manager in dated",
    "start": "84439",
    "end": "92250"
  },
  {
    "text": "okay p.m. actually mm-hmm so yeah at first it was I think in July that we",
    "start": "92250",
    "end": "99840"
  },
  {
    "text": "released the first version of the scope manager what I did is I implemented it",
    "start": "99840",
    "end": "105290"
  },
  {
    "text": "exactly according to the specification from open tracing and while it's working",
    "start": "105290",
    "end": "111270"
  },
  {
    "text": "this it's also led to a few problems for",
    "start": "111270",
    "end": "116520"
  },
  {
    "text": "example it doesn't really work well with a sink of weight because the way the construct is built it should be wrapped",
    "start": "116520",
    "end": "123990"
  },
  {
    "text": "in a function to work efficiently so by using the activate and close pattern that is the described in the",
    "start": "123990",
    "end": "130860"
  },
  {
    "text": "specification it doesn't really work or with JavaScript so that's one of the",
    "start": "130860",
    "end": "136620"
  },
  {
    "text": "problems also it requires a synchronous",
    "start": "136620",
    "end": "141960"
  },
  {
    "text": "context to work properly which is another another issue that we faced",
    "start": "141960",
    "end": "148320"
  },
  {
    "text": "I guess this issue was mostly because we were trying to keep track of the",
    "start": "148320",
    "end": "154040"
  },
  {
    "text": "guessing fitness context but all children so for example if you schedule",
    "start": "154040",
    "end": "160140"
  },
  {
    "text": "work it would wait until all the work that you scheduled is finished to",
    "start": "160140",
    "end": "166620"
  },
  {
    "text": "actually close the scope so a few things there that did not work",
    "start": "166620",
    "end": "173160"
  },
  {
    "text": "super efficiently and then there was a PR and also an issue opened by Paul",
    "start": "173160",
    "end": "180630"
  },
  {
    "text": "Draper I don't know if he's I don't think so",
    "start": "180630",
    "end": "185990"
  },
  {
    "text": "so it was basically a discussion about using continuation passing style instead",
    "start": "185990",
    "end": "193790"
  },
  {
    "text": "of the imperative API from the specification and from there we had a",
    "start": "193790",
    "end": "199890"
  },
  {
    "text": "few discussions and I think it really makes sense to have a continuation passing style for JavaScript and then it",
    "start": "199890",
    "end": "208950"
  },
  {
    "text": "led to basically exploring the options for such an API and I think in the end",
    "start": "208950",
    "end": "215489"
  },
  {
    "text": "it deviates quite a bit from the spec we're trying to keep the wording as much",
    "start": "215489",
    "end": "221760"
  },
  {
    "text": "as possible for example words like that activate but yeah I think for JavaScript",
    "start": "221760",
    "end": "227340"
  },
  {
    "text": "we'll need to deviate quite a bit I don't know if you took take a look at",
    "start": "227340",
    "end": "232350"
  },
  {
    "text": "the they proposed dpi but yeah so that's that's basically what",
    "start": "232350",
    "end": "238680"
  },
  {
    "text": "we're proposing right now and there's also the issue that in JavaScript there are tons of different runtimes for",
    "start": "238680",
    "end": "244560"
  },
  {
    "text": "example different node versions that have different restrictions different capabilities same for the browser which",
    "start": "244560",
    "end": "251670"
  },
  {
    "text": "is completely different than nodes and I has no construct at all for context propagation so there are quite a few",
    "start": "251670",
    "end": "259140"
  },
  {
    "text": "different libraries depending on the environment you're on to address context",
    "start": "259140",
    "end": "267210"
  },
  {
    "text": "predation so the thing is for the scope manager to be compatible with node zero",
    "start": "267210",
    "end": "272699"
  },
  {
    "text": "point ten plus and the browser it needs to have multiple scope managers",
    "start": "272699",
    "end": "278370"
  },
  {
    "text": "implemented basically for all these different runtimes great so I guess this",
    "start": "278370",
    "end": "283710"
  },
  {
    "text": "is the current state basically awesome yeah so to summary there is a need for",
    "start": "283710",
    "end": "290520"
  },
  {
    "text": "scope managers in JavaScript due to the various runtimes and environments your",
    "start": "290520",
    "end": "295889"
  },
  {
    "text": "code might run in so there is a need still for there to be an abstracted",
    "start": "295889",
    "end": "300990"
  },
  {
    "text": "scope manager interface because you do want multiple implementations and a new",
    "start": "300990",
    "end": "307650"
  },
  {
    "text": "API that is more continuation based has been proposed people have been poking at it and are",
    "start": "307650",
    "end": "314759"
  },
  {
    "text": "generally happy with it would you say that's that's kind of where it's at the",
    "start": "314759",
    "end": "320430"
  },
  {
    "text": "perhaps has not been exercised very thoroughly it's like a theoretical API at this time oh yes and no I mean the API is very",
    "start": "320430",
    "end": "329340"
  },
  {
    "text": "similar to existing libraries that deal with context propagation but from an",
    "start": "329340",
    "end": "334710"
  },
  {
    "text": "application perspective so arbitrary values that you want propagated and they",
    "start": "334710",
    "end": "340380"
  },
  {
    "text": "use a very similar API and if you look at all of them even though there are",
    "start": "340380",
    "end": "345479"
  },
  {
    "text": "differences it's basically the same functionalities that always come back so",
    "start": "345479",
    "end": "351599"
  },
  {
    "text": "things like well the continuation itself so the ability to pass a callback and have a context and there a few utilities",
    "start": "351599",
    "end": "359370"
  },
  {
    "text": "for binding because sometimes you want to actually bind to a specific value",
    "start": "359370",
    "end": "365520"
  },
  {
    "text": "from a different context for example and things like that but so of course this",
    "start": "365520",
    "end": "373110"
  },
  {
    "text": "is at Oracle API at this point but it's based on existing work basically great",
    "start": "373110",
    "end": "381919"
  },
  {
    "text": "that's awesome thank you so much for that summary I certainly have questions but I would love to open the floor up at",
    "start": "381919",
    "end": "389130"
  },
  {
    "text": "this point because I know other people have been working on this problem and also probably have questions so I'm",
    "start": "389130",
    "end": "395310"
  },
  {
    "text": "going to step back now I can open",
    "start": "395310",
    "end": "401310"
  },
  {
    "text": "and ask why you have looked at node",
    "start": "401310",
    "end": "406620"
  },
  {
    "text": "versions going back all the way to zero point ten and not just version six which",
    "start": "406620",
    "end": "412290"
  },
  {
    "text": "is the oldest that is still actively maintained",
    "start": "412290",
    "end": "418100"
  },
  {
    "text": "okay the reasoning well for us specifically we support node four and up",
    "start": "418100",
    "end": "423960"
  },
  {
    "text": "meaning that in our case we would need support for four node four because",
    "start": "423960",
    "end": "431160"
  },
  {
    "text": "actually one of the issue is we don't really control the version of know that",
    "start": "431160",
    "end": "437040"
  },
  {
    "text": "the customer will use basically another reason is because open tracing itself",
    "start": "437040",
    "end": "443910"
  },
  {
    "text": "like the current open tracing JavaScript library already supports 0.10 and up and",
    "start": "443910",
    "end": "450180"
  },
  {
    "text": "there was a few discussions in the last few years I guess to drop support for",
    "start": "450180",
    "end": "456360"
  },
  {
    "text": "these zero point X but it's always been refused because I think some very some large users of the library are still on",
    "start": "456360",
    "end": "464040"
  },
  {
    "text": "0.10 so this is basically the reasoning at this point for that I would ask and",
    "start": "464040",
    "end": "477960"
  },
  {
    "text": "it maybe is slightly parallel to this but as a result of this or is there a",
    "start": "477960",
    "end": "486390"
  },
  {
    "text": "thought that maybe we couldn't going forward move the expectation of support",
    "start": "486390",
    "end": "492390"
  },
  {
    "text": "level to be whatever you know the current LTS node releases are well I",
    "start": "492390",
    "end": "500850"
  },
  {
    "text": "mean I think as long as we are still able to support older versions it makes",
    "start": "500850",
    "end": "508320"
  },
  {
    "text": "sense so that we don't block anybody for example if some company implements the",
    "start": "508320",
    "end": "514740"
  },
  {
    "text": "open tracing JavaScript for new library but they need to support 0.12 for",
    "start": "514740",
    "end": "519750"
  },
  {
    "text": "example it should be possible if it's you know not too much work to support",
    "start": "519750",
    "end": "526190"
  },
  {
    "text": "but the thing is even older versions of node are not that difficult to support",
    "start": "526190",
    "end": "531440"
  },
  {
    "text": "most of the work has already been done probably some of you might be familiar",
    "start": "531440",
    "end": "538890"
  },
  {
    "text": "with a DI single listener library which handles pretty well all all of the know",
    "start": "538890",
    "end": "548610"
  },
  {
    "text": "DPI basically so and having a scope manager on top of it is not a lot of",
    "start": "548610",
    "end": "554190"
  },
  {
    "text": "work the biggest part of the work is really to split the current project in",
    "start": "554190",
    "end": "560760"
  },
  {
    "text": "multiple libraries so for example to have each scope manager in different",
    "start": "560760",
    "end": "567110"
  },
  {
    "text": "modules basically so that we don't just bundle everything even if it's not",
    "start": "567110",
    "end": "572280"
  },
  {
    "text": "needed and so that that's pretty much the largest part of the work and it has",
    "start": "572280",
    "end": "578280"
  },
  {
    "text": "to be done anyway to have at the very least one scope manager for the browser and what one scope manager for node so",
    "start": "578280",
    "end": "584250"
  },
  {
    "text": "at that point the overhead of supporting older versions is not very high of",
    "start": "584250",
    "end": "589560"
  },
  {
    "text": "course it limits our ability to update a few libraries because the libraries that",
    "start": "589560",
    "end": "594630"
  },
  {
    "text": "are used by open tracing JavaScript might no longer support older versions of node but so far I don't see any any",
    "start": "594630",
    "end": "603360"
  },
  {
    "text": "blocker basically to to keep the support I could just chime in so we in elastic",
    "start": "603360",
    "end": "610890"
  },
  {
    "text": "ATM with just released version 2 of the node agent in which we dropped support",
    "start": "610890",
    "end": "617070"
  },
  {
    "text": "for node 4 so now we only support 6 in up and the reason why we drop support",
    "start": "617070",
    "end": "624180"
  },
  {
    "text": "for node 4 was because it started to become increasingly hard to maintain that support because of course we want",
    "start": "624180",
    "end": "633090"
  },
  {
    "text": "to run our test suite and all the way through support and as you say new versions of modules were released that",
    "start": "633090",
    "end": "640140"
  },
  {
    "text": "either without one big major they",
    "start": "640140",
    "end": "645180"
  },
  {
    "text": "dropped support for an old version of node and suddenly they started failing or or they they weren't maintained any",
    "start": "645180",
    "end": "652440"
  },
  {
    "text": "more than those old versions and might have had security issues so we felt it was not safe to keep supporting that old",
    "start": "652440",
    "end": "661020"
  },
  {
    "text": "version for those reasons by the way",
    "start": "661020",
    "end": "667970"
  },
  {
    "text": "I can see that you made up a fall by patient listener I am I'm actually I mean maintain our basic listener so yeah",
    "start": "667970",
    "end": "678439"
  },
  {
    "text": "if you have any questions related to that let me know I mean I would I would",
    "start": "678439",
    "end": "685339"
  },
  {
    "text": "just add to that that I'm bring this up because at light step we're considering we're moving support for node versions",
    "start": "685339",
    "end": "691549"
  },
  {
    "text": "prior to six as well in our client library so very similar reasons to what",
    "start": "691549",
    "end": "700099"
  },
  {
    "text": "Thomas said security issues with older dependencies and so on and so forth yeah",
    "start": "700099",
    "end": "707929"
  },
  {
    "text": "I mean of course it's uh it's always something to consider we also consider that problem being we still have quite a",
    "start": "707929",
    "end": "715999"
  },
  {
    "text": "few customers on node four of course it's it's you know if they are slowly",
    "start": "715999",
    "end": "721009"
  },
  {
    "text": "migrating to newer versions but yeah I",
    "start": "721009",
    "end": "726679"
  },
  {
    "text": "mean it's it's also related to the dependencies I guess and open tracing",
    "start": "726679",
    "end": "731839"
  },
  {
    "text": "JavaScript doesn't really have a dependence a lot of deep well it doesn't have any dependencies right now meaning",
    "start": "731839",
    "end": "738579"
  },
  {
    "text": "there are basically two two parts to this in my opinion so there's the",
    "start": "738579",
    "end": "743779"
  },
  {
    "text": "tooling so that like to build to test and that kind of things where you might",
    "start": "743779",
    "end": "751639"
  },
  {
    "text": "want a specific node support and there's the actual output so what you're gonna",
    "start": "751639",
    "end": "757639"
  },
  {
    "text": "ship which in this case has no dependency meaning I think it would be",
    "start": "757639",
    "end": "763009"
  },
  {
    "text": "possible to update the tooling and say okay to to develop in the library you",
    "start": "763009",
    "end": "769819"
  },
  {
    "text": "would need for example node six and up but then still make sure that the the",
    "start": "769819",
    "end": "775849"
  },
  {
    "text": "output would support older version of of course this might be if your tester",
    "start": "775849",
    "end": "782659"
  },
  {
    "text": "doesn't support it but I don't know I'm just being kind of devil's advocate here",
    "start": "782659",
    "end": "789849"
  },
  {
    "text": "but yeah it would be something to consider for sure but I think this is a",
    "start": "789849",
    "end": "795049"
  },
  {
    "text": "discussion on its own basically no support because it has a can have a lot",
    "start": "795049",
    "end": "800119"
  },
  {
    "text": "of impact and also wanted to respond to Thomas",
    "start": "800119",
    "end": "806300"
  },
  {
    "text": "about the icing listener fork right now it's not used anywhere I just forget to",
    "start": "806300",
    "end": "811790"
  },
  {
    "text": "try and make it consistent with the other libraries I understand that as",
    "start": "811790",
    "end": "817040"
  },
  {
    "text": "English nurse basically the first one but all future work used a different a",
    "start": "817040",
    "end": "824199"
  },
  {
    "text": "different way to bind promises which is which are always bound when then is",
    "start": "824199",
    "end": "831170"
  },
  {
    "text": "called and not when resolve is called which is a major difference from a sink listener which binds on resolve so to",
    "start": "831170",
    "end": "840230"
  },
  {
    "text": "have a consistent behavior between all the implementation of a scope manager they need to behave the same for",
    "start": "840230",
    "end": "847220"
  },
  {
    "text": "promises so what I did is simply remove all the logic related to the promise and",
    "start": "847220",
    "end": "854209"
  },
  {
    "text": "bind on then instead and the idea was really to have a consistent behavior",
    "start": "854209",
    "end": "859250"
  },
  {
    "text": "this is not a problem with for example any CLS like continuation local storage",
    "start": "859250",
    "end": "864620"
  },
  {
    "text": "itself or CLS hooked and other implementations of the sort because",
    "start": "864620",
    "end": "870649"
  },
  {
    "text": "you're usually using only one anyway so if in your app you have note 8 you're using ethic books and you don't need to",
    "start": "870649",
    "end": "877100"
  },
  {
    "text": "know about I think listener and so on but if you want to have account like a",
    "start": "877100",
    "end": "883810"
  },
  {
    "text": "common project like a scope manager or something of the sort then it becomes",
    "start": "883810",
    "end": "890089"
  },
  {
    "text": "very important that the scope is propagated exactly the same in all implementation so and this is true for",
    "start": "890089",
    "end": "897589"
  },
  {
    "text": "also zone zone GS which binds on then no domains which binds which bind on then",
    "start": "897589",
    "end": "904970"
  },
  {
    "text": "so pretty much the whole landscape at this point binds and then but I guess",
    "start": "904970",
    "end": "910069"
  },
  {
    "text": "for historical reason it's not the case with a sync listener basically we had",
    "start": "910069",
    "end": "916550"
  },
  {
    "text": "had we have had the discussion in the async listener repository I right now",
    "start": "916550",
    "end": "922430"
  },
  {
    "text": "can remember exactly why we are still binding on with resolve and not then but",
    "start": "922430",
    "end": "928339"
  },
  {
    "text": "I guess it should be possible to make a new version we could even just pump the major of it that",
    "start": "928339",
    "end": "935300"
  },
  {
    "text": "changes that havior if I do not recall correctly I think that should be possible yes I've seen discussions as",
    "start": "935300",
    "end": "944540"
  },
  {
    "text": "well about actually releasing a 1.0 now that it's in stat stable for a long time",
    "start": "944540",
    "end": "950890"
  },
  {
    "text": "so I think maybe the 1.0 could be could resolve could bind on resolve because",
    "start": "950890",
    "end": "959120"
  },
  {
    "text": "this is the current behavior and then maybe we could work on like a 2.0 to to",
    "start": "959120",
    "end": "965269"
  },
  {
    "text": "make that change basically like it I'm",
    "start": "965269",
    "end": "974180"
  },
  {
    "text": "sorry go ahead Austin sorry um I get to get back on to the temperature a little",
    "start": "974180",
    "end": "979399"
  },
  {
    "text": "bit much I know you were talking about Reid I believe is my interpretation",
    "start": "979399",
    "end": "984980"
  },
  {
    "text": "Weaver time I can get her is that you're rewriting the library in JavaScript and",
    "start": "984980",
    "end": "991220"
  },
  {
    "text": "then supplying typing's rather than having it written in Thai trip was that accurate or is that yes I'm exploring",
    "start": "991220",
    "end": "1000399"
  },
  {
    "text": "I'm still exploring the options because I guess there's uh I don't know what",
    "start": "1000399",
    "end": "1009190"
  },
  {
    "text": "like that people wants the library to be typescript so I'm I'll try to get it to stay in",
    "start": "1009190",
    "end": "1018339"
  },
  {
    "text": "typescript but the core library won't change that's for sure but I mean because the scope scope manager itself",
    "start": "1018339",
    "end": "1026380"
  },
  {
    "text": "the problem is that they are fewer constructs like generators and a sink",
    "start": "1026380",
    "end": "1032470"
  },
  {
    "text": "awaits which are not available in the current targets version of ACMA script",
    "start": "1032470",
    "end": "1039569"
  },
  {
    "text": "so meaning that even if you write tests for a sink awaits they will end up as",
    "start": "1039569",
    "end": "1045280"
  },
  {
    "text": "promises or callbacks or whatever works best for the target so you're not actually testing I think await at this",
    "start": "1045280",
    "end": "1052929"
  },
  {
    "text": "point and since this is implemented in C++ it's not really possible to",
    "start": "1052929",
    "end": "1058030"
  },
  {
    "text": "replicate exactly how it works in JavaScript anyway so it just it will just convert it to a regular promise in",
    "start": "1058030",
    "end": "1065710"
  },
  {
    "text": "the real world it's fine it will work exactly like a secure wait but when your instrumenting it's a bit",
    "start": "1065710",
    "end": "1071890"
  },
  {
    "text": "different busy because then yeah because now you need to really handle this",
    "start": "1071890",
    "end": "1079930"
  },
  {
    "text": "specific case and you need it to not be trans filed basically so this is uh but",
    "start": "1079930",
    "end": "1085870"
  },
  {
    "text": "I'm still exploring I'm still trying to get it to work and keep it as typescript",
    "start": "1085870",
    "end": "1091060"
  },
  {
    "text": "what I think I'll do is use a different",
    "start": "1091060",
    "end": "1097540"
  },
  {
    "text": "target when testing basically so I won't pre-compile to JavaScript I will just load it directly with TS know there",
    "start": "1097540",
    "end": "1106270"
  },
  {
    "text": "something like that to so that it's it's compiled in memory and then use a",
    "start": "1106270",
    "end": "1112780"
  },
  {
    "text": "different target and just say like es NEX or something like that like Dolly the to make the transformation as",
    "start": "1112780",
    "end": "1118330"
  },
  {
    "text": "lightweight as possible so yeah that's that's the plan right now and we'll see",
    "start": "1118330",
    "end": "1123970"
  },
  {
    "text": "how this goes awesome Thanks is there a",
    "start": "1123970",
    "end": "1131550"
  },
  {
    "text": "fork or branch where this work is going on that I can see",
    "start": "1131550",
    "end": "1137580"
  },
  {
    "text": "actually I started this work this week it's not I haven't pushed anything yet",
    "start": "1137580",
    "end": "1145270"
  },
  {
    "text": "the reason being that I'm kind of realizing that this is a bit of a kind",
    "start": "1145270",
    "end": "1151060"
  },
  {
    "text": "of worms because I'm now that I'm also splitting the library I need to you know",
    "start": "1151060",
    "end": "1157900"
  },
  {
    "text": "have learn are working with different libraries to hold coverage right now as",
    "start": "1157900",
    "end": "1164380"
  },
  {
    "text": "being a bit of an issue so yeah I'm I'm actually open to",
    "start": "1164380",
    "end": "1169750"
  },
  {
    "text": "suggestions about how to go about let's",
    "start": "1169750",
    "end": "1174940"
  },
  {
    "text": "say at first like a first push should I",
    "start": "1174940",
    "end": "1179950"
  },
  {
    "text": "just maybe not go with the split right away or try just do the split and not",
    "start": "1179950",
    "end": "1185800"
  },
  {
    "text": "the scope manager I mean I'm just trying to basically figure out the minimum that I can do that I can actually push in it",
    "start": "1185800",
    "end": "1192640"
  },
  {
    "text": "it works basically because right now it's not really working so even if I push it like everything's gonna just",
    "start": "1192640",
    "end": "1198280"
  },
  {
    "text": "fail and which I could do as well if you want to take a look but yeah I'm open to",
    "start": "1198280",
    "end": "1204430"
  },
  {
    "text": "suggest it's it's it's fine you if you ever need more time to figure out how",
    "start": "1204430",
    "end": "1210580"
  },
  {
    "text": "how it's best are then then that's fine I was just thinking like if you wanted a",
    "start": "1210580",
    "end": "1219310"
  },
  {
    "text": "feedback it would be easier if it was I don't know maybe I'm not really possible to do in a PR or or in a separate fork",
    "start": "1219310",
    "end": "1227860"
  },
  {
    "text": "or something that of course you shouldn't push it to necessarily master but yeah it was just to see if I could",
    "start": "1227860",
    "end": "1236170"
  },
  {
    "text": "get a give any feedback at this point then it would easier but it doesn't play around with the first a little bit more",
    "start": "1236170",
    "end": "1242260"
  },
  {
    "text": "that's fine yeah my plan was actually to like either",
    "start": "1242260",
    "end": "1247620"
  },
  {
    "text": "make a PR or at least push something next week probably by the middle of the",
    "start": "1247620",
    "end": "1253050"
  },
  {
    "text": "week if if possible and then we can discuss any anything that is from from",
    "start": "1253050",
    "end": "1263190"
  },
  {
    "text": "the points that we mentioned and yeah that's so that's the plan I'll try to push something the next few days",
    "start": "1263190",
    "end": "1269790"
  },
  {
    "text": "basically great yeah I would love to see this as a release candidate branch on",
    "start": "1269790",
    "end": "1275550"
  },
  {
    "text": "the repo that people could start consuming it seems like we're close",
    "start": "1275550",
    "end": "1281100"
  },
  {
    "text": "enough to an API that the next step is is binding to it and kind of putting the",
    "start": "1281100",
    "end": "1287190"
  },
  {
    "text": "API through its paces I had a couple",
    "start": "1287190",
    "end": "1292410"
  },
  {
    "text": "questions on that front one was just to circle back to node virgin support and",
    "start": "1292410",
    "end": "1300540"
  },
  {
    "text": "just to clarify is there anything about besides just you know tooling in",
    "start": "1300540",
    "end": "1306570"
  },
  {
    "text": "dependency management is there anything about the API being proposed that people would change if we changed what kind of",
    "start": "1306570",
    "end": "1314580"
  },
  {
    "text": "node support we were looking at which is purely a tooling question",
    "start": "1314580",
    "end": "1320060"
  },
  {
    "text": "we're not reaching for something in later versions of JavaScript that we would want to be part of the interface",
    "start": "1325050",
    "end": "1331530"
  },
  {
    "text": "but we're avoiding because we're looking for backwards compatibility right now",
    "start": "1331530",
    "end": "1337700"
  },
  {
    "text": "not that I know of I think and I'm not",
    "start": "1338960",
    "end": "1344070"
  },
  {
    "text": "sure about this because it's been supported for a long time but I think one of the reasons may be that",
    "start": "1344070",
    "end": "1349230"
  },
  {
    "text": "everything is a function as opposed to getters in some cases is because it may",
    "start": "1349230",
    "end": "1356250"
  },
  {
    "text": "have not been supported in those versions but I'm not 100% sure but I didn't that in at least my point of view",
    "start": "1356250",
    "end": "1363630"
  },
  {
    "text": "I think the API is would be exactly the same then you were load version great",
    "start": "1363630",
    "end": "1369930"
  },
  {
    "text": "thanks for clarifying I had some questions just about the API itself in",
    "start": "1369930",
    "end": "1378510"
  },
  {
    "text": "particular I was curious about the usage of being able to access the Scopes",
    "start": "1378510",
    "end": "1384950"
  },
  {
    "text": "parent scope and route scope that's probably the biggest change I noticed",
    "start": "1384950",
    "end": "1390860"
  },
  {
    "text": "from a functionality standpoint compared to other scope managers and I was",
    "start": "1390860",
    "end": "1397020"
  },
  {
    "text": "curious about the intention behind exposing exposing the scope chain in",
    "start": "1397020",
    "end": "1402900"
  },
  {
    "text": "that manner oh yes this I actually added this morning I think idea was basically",
    "start": "1402900",
    "end": "1411990"
  },
  {
    "text": "to discuss it so I really don't have a clear idea of how this this would work",
    "start": "1411990",
    "end": "1417870"
  },
  {
    "text": "but the idea is that in some cases you",
    "start": "1417870",
    "end": "1423600"
  },
  {
    "text": "may want to enrich maybe the parent or in our case what happens a lot more",
    "start": "1423600",
    "end": "1430530"
  },
  {
    "text": "often is to enrich the route and right now there's no way to to get the roots",
    "start": "1430530",
    "end": "1437730"
  },
  {
    "text": "basically so I'm more concerned about the roots than the parent to be honest hmm and in most of our tracers who",
    "start": "1437730",
    "end": "1445260"
  },
  {
    "text": "started to basically add this concept of route I think it's called something like",
    "start": "1445260",
    "end": "1451910"
  },
  {
    "text": "active route span or something like that which is a property that we're slowly adding to the tracers the problem",
    "start": "1451910",
    "end": "1459110"
  },
  {
    "text": "for me is that I'm trying to keep the JavaScript implementation as a hundred",
    "start": "1459110",
    "end": "1465030"
  },
  {
    "text": "percent open tracing meaning if possible and so far it's been possible I don't",
    "start": "1465030",
    "end": "1471630"
  },
  {
    "text": "add anything that is not open like fully open tracing compliant meaning that if you put the tracer as a global open",
    "start": "1471630",
    "end": "1478890"
  },
  {
    "text": "tracing it will you're not ok so right",
    "start": "1478890",
    "end": "1485309"
  },
  {
    "text": "now the problem becomes how do I add this active route span so far I didn't",
    "start": "1485309",
    "end": "1492630"
  },
  {
    "text": "really need it for anything in note but it's starting you know to show that I",
    "start": "1492630",
    "end": "1500250"
  },
  {
    "text": "might mean that's pretty soon and I I I",
    "start": "1500250",
    "end": "1505679"
  },
  {
    "text": "think the best place to have that is under scope manager because then well",
    "start": "1505679",
    "end": "1511320"
  },
  {
    "text": "I'm not actually sure because it can also be under span right so the span knows it's parents because for the scope",
    "start": "1511320",
    "end": "1516510"
  },
  {
    "text": "I mean this the the kind of the tree of",
    "start": "1516510",
    "end": "1523320"
  },
  {
    "text": "all the all the Scopes it's not really the same as necessarily for a span so",
    "start": "1523320",
    "end": "1531510"
  },
  {
    "text": "your parent scope may not contain your parents pan or something like that so",
    "start": "1531510",
    "end": "1536910"
  },
  {
    "text": "I'm actually not a hundred percent sure this may be another discussion completely and and end up being",
    "start": "1536910",
    "end": "1544320"
  },
  {
    "text": "unrelated to the scope manager but yeah it's it's really the need is basically",
    "start": "1544320",
    "end": "1551490"
  },
  {
    "text": "to be able to grab the roots span actually so and this is related to a",
    "start": "1551490",
    "end": "1559169"
  },
  {
    "text": "sort of best practice that you're trying to develop a data dog around instrumentation you mentioned decorating",
    "start": "1559169",
    "end": "1566220"
  },
  {
    "text": "the root span that there's cases where you want to be adding information at some roots fan as opposed to local roots",
    "start": "1566220",
    "end": "1573480"
  },
  {
    "text": "fan I guess I should say right it's not the root of the trace necessarily oh yes",
    "start": "1573480",
    "end": "1578700"
  },
  {
    "text": "because the way the way it's we actually",
    "start": "1578700",
    "end": "1583860"
  },
  {
    "text": "do it is well of course we have spans and all these spans are part of a trace",
    "start": "1583860",
    "end": "1588870"
  },
  {
    "text": "so that would be your local trace and then each of those local traces are",
    "start": "1588870",
    "end": "1594870"
  },
  {
    "text": "combined together into like a distributed trace like a real a real",
    "start": "1594870",
    "end": "1600420"
  },
  {
    "text": "trace of your entire system so in some cases we have since we have these like",
    "start": "1600420",
    "end": "1609690"
  },
  {
    "text": "strong concepts of traces sometimes we need to you know enrich the trace itself",
    "start": "1609690",
    "end": "1617070"
  },
  {
    "text": "and for us the trace is basically represented by the root span so this is",
    "start": "1617070",
    "end": "1623540"
  },
  {
    "text": "basically why we need to be able to access it we have the the same need in",
    "start": "1623540",
    "end": "1632210"
  },
  {
    "text": "elastic we call it I currently call it transaction is this",
    "start": "1632210",
    "end": "1640020"
  },
  {
    "text": "local group span or sometimes we call an entry span to not confuse it with a root",
    "start": "1640020",
    "end": "1646470"
  },
  {
    "text": "root span but but yeah we have the same need to add certain metadata to the",
    "start": "1646470",
    "end": "1652980"
  },
  {
    "text": "roots ban the entry spend yeah yeah I don't think it's a crazy concept but I",
    "start": "1652980",
    "end": "1660870"
  },
  {
    "text": "am noting it that there's been aspects yeah where the open tracing API currently",
    "start": "1660870",
    "end": "1667169"
  },
  {
    "text": "doesn't provide accesses root span around that or some concept of like this",
    "start": "1667169",
    "end": "1674040"
  },
  {
    "text": "is the the processor service the span is running in or some way of conceptualizing that like information",
    "start": "1674040",
    "end": "1681179"
  },
  {
    "text": "that's a place where at light step for example we tend to have some attributes",
    "start": "1681179",
    "end": "1687690"
  },
  {
    "text": "we call them but basically tags that are on every span that comes through a service or a kind of concept like that",
    "start": "1687690",
    "end": "1695280"
  },
  {
    "text": "and I imagine other people up something similar so I'm only bringing it up because this is surfacing as you know a",
    "start": "1695280",
    "end": "1702600"
  },
  {
    "text": "feature in the JavaScript API but it may be I always want to put a pin if we're",
    "start": "1702600",
    "end": "1709350"
  },
  {
    "text": "seeing one API diverge to ask is this really a JavaScript specific issue or is",
    "start": "1709350",
    "end": "1715500"
  },
  {
    "text": "this like a general issue and we just are encountering it at JavaScript for the first time we use it in all our",
    "start": "1715500",
    "end": "1723030"
  },
  {
    "text": "agents no matter the language the cons putting certain things up on under on",
    "start": "1723030",
    "end": "1729510"
  },
  {
    "text": "the local group span so I think my only suggestion there would be like I like",
    "start": "1729510",
    "end": "1737250"
  },
  {
    "text": "this API and it looks good I wonder if we could separate out here",
    "start": "1737250",
    "end": "1742470"
  },
  {
    "text": "is like a good continuation based implementation of the scope manager API",
    "start": "1742470",
    "end": "1748070"
  },
  {
    "text": "here is like an additional concept we want to add to the open tracing specification around you know root",
    "start": "1748070",
    "end": "1756179"
  },
  {
    "text": "access or you know root scope access or something like that maybe make them slightly separate issues if we think",
    "start": "1756179",
    "end": "1762480"
  },
  {
    "text": "this is going to be a sort of cross language issue I don't want to",
    "start": "1762480",
    "end": "1767909"
  },
  {
    "text": "complicate the release candidate you're trying to make I just want to make sure we you know think about that in a cross",
    "start": "1767909",
    "end": "1776039"
  },
  {
    "text": "language manner if we're gonna add it definitely like I said I pretty much",
    "start": "1776039",
    "end": "1781140"
  },
  {
    "text": "just added it to so that it's noticed and we can discuss it but yeah I'll",
    "start": "1781140",
    "end": "1786840"
  },
  {
    "text": "remove those from there because it may even end up on something else or differently I do think it's good idea",
    "start": "1786840",
    "end": "1793289"
  },
  {
    "text": "maybe we can open the issue in the spec repo or something like that yeah I also",
    "start": "1793289",
    "end": "1798390"
  },
  {
    "text": "was thinking and this isn't for right now but once this is a little bit",
    "start": "1798390",
    "end": "1803850"
  },
  {
    "text": "further along well first of all I've been quiet for this sounds like really frankly really excited about this work I think it's great to have pending",
    "start": "1803850",
    "end": "1812850"
  },
  {
    "text": "JavaScript such a weird language that time we know it's going to demand something that isn't then white like",
    "start": "1812850",
    "end": "1818730"
  },
  {
    "text": "flips in Java or you know whatever so I'm glad that we're having specially now before it's too late and I'm excited",
    "start": "1818730",
    "end": "1825510"
  },
  {
    "text": "about it it might be useful once we get a little further ahead to kind of mark the parts of the API that we actually aren't",
    "start": "1825510",
    "end": "1831929"
  },
  {
    "text": "touching the like the important parts of the API that we are touching and like certain kind of data model type things stuff like that just so that people who",
    "start": "1831929",
    "end": "1838980"
  },
  {
    "text": "go bound to what we have now will have less anxiety about this landing I think",
    "start": "1838980",
    "end": "1844470"
  },
  {
    "text": "it's inevitable that we do something that's a breaking change in some way to the JavaScript of entry some JavaScript that's fine fine but if we can try to",
    "start": "1844470",
    "end": "1852149"
  },
  {
    "text": "cordon off parts that are actually safe that might be useful for people as the release candidate gets closer to",
    "start": "1852149",
    "end": "1858240"
  },
  {
    "text": "landings keeping keeping that in mind because I actually think that that most people will probably be pretty happy about the",
    "start": "1858240",
    "end": "1863789"
  },
  {
    "text": "upgrade to this but it'll be helpful to ease anxiety it's just prior experience of increasing like every time you've",
    "start": "1863789",
    "end": "1869970"
  },
  {
    "text": "made a breaking change it's been for a good reason but naturally people kind of freak out about it so I think things we",
    "start": "1869970",
    "end": "1875159"
  },
  {
    "text": "can do to kind of minimize the freakout will be helpful I'm not sure I",
    "start": "1875159",
    "end": "1883440"
  },
  {
    "text": "understand what you mean by by making it safe and reducing the the freakout",
    "start": "1883440",
    "end": "1889350"
  },
  {
    "text": "basically well I think if you zoom way and on these things that can feel like",
    "start": "1889350",
    "end": "1894980"
  },
  {
    "text": "there are aspects of the proposal that are quite different I think from what's there right now probably frankly because",
    "start": "1894980",
    "end": "1901770"
  },
  {
    "text": "it's better that's great but there are big swaths of the API that people probably use or think about now that are",
    "start": "1901770",
    "end": "1909480"
  },
  {
    "text": "essentially unchanged and I think we should just you know there's maybe",
    "start": "1909480",
    "end": "1915480"
  },
  {
    "text": "there's no action right now it's more a general request based on prior",
    "start": "1915480",
    "end": "1920850"
  },
  {
    "text": "experience to to try and I think the part of this change that will actually",
    "start": "1920850",
    "end": "1926909"
  },
  {
    "text": "affect people by explaining what won't affect people like people have mainly been like adding tags and spans and",
    "start": "1926909",
    "end": "1932580"
  },
  {
    "text": "stuff like that like that's probably not going to be very much different at all it's like for day-in day-out use cases",
    "start": "1932580",
    "end": "1939000"
  },
  {
    "text": "the API probably won't affect things it's mostly when you're actually integrating with frameworks and things",
    "start": "1939000",
    "end": "1944760"
  },
  {
    "text": "like that where you have to think more about control flow that these sorts of changes will be more disruptive but if",
    "start": "1944760",
    "end": "1950580"
  },
  {
    "text": "someone's taking currently I had to spin adding some tags to it and then moving on like that's not going to feel I",
    "start": "1950580",
    "end": "1956850"
  },
  {
    "text": "assume that won't be that much different after this changes got through this I",
    "start": "1956850",
    "end": "1962330"
  },
  {
    "text": "think one action is just as we are rolling with the release candidate here",
    "start": "1962330",
    "end": "1968520"
  },
  {
    "text": "we want to look at how is this a breaking change how what is the upgrade",
    "start": "1968520",
    "end": "1973649"
  },
  {
    "text": "path and be explicit about the upgrade path for existing code and in the past",
    "start": "1973649",
    "end": "1979679"
  },
  {
    "text": "and Java for example we've sometimes written shims or helper modules that",
    "start": "1979679",
    "end": "1986570"
  },
  {
    "text": "smooth over some of that transition yeah that's that's kinda what I'm",
    "start": "1986570",
    "end": "1991750"
  },
  {
    "text": "getting at maybe I mean let me stop typing solutions the problem we had was",
    "start": "1991750",
    "end": "1997120"
  },
  {
    "text": "Evan tracing Java there I won't do the whole archeology of it but there are some design decisions made very early on",
    "start": "1997120",
    "end": "2002640"
  },
  {
    "text": "that were just kind of a design by committee mistake I'll just leave it at that like probably known as that happy",
    "start": "2002640",
    "end": "2008070"
  },
  {
    "text": "with what we did and then we like fixed that with a change that ended up taking",
    "start": "2008070",
    "end": "2013590"
  },
  {
    "text": "like a full year to roll out because there's a lot of anxiety about the change which you know some of which was",
    "start": "2013590",
    "end": "2019410"
  },
  {
    "text": "somewhat legitimate but I think it would have probably been better if we moved a bit faster when it was all said and done",
    "start": "2019410",
    "end": "2027240"
  },
  {
    "text": "the biggest complaint was that a churchy one does we were trying to be too careful about it and I think it would have been better if we just been like",
    "start": "2027240",
    "end": "2033090"
  },
  {
    "text": "listen this is for garden-variety code it's not really going to change like don't worry so much I'll write these",
    "start": "2033090",
    "end": "2038760"
  },
  {
    "text": "shims and kind of move on and and I'm just trying to figure out like how many avoid a situation with this set of",
    "start": "2038760",
    "end": "2045720"
  },
  {
    "text": "changes how can we make it so that you know if there are a bunch of people who really understand this stuff well they",
    "start": "2045720",
    "end": "2051480"
  },
  {
    "text": "feel good about it we kind of write the shims recognize that most code doesn't even really change that much which is the case with Java and and move not like",
    "start": "2051480",
    "end": "2059490"
  },
  {
    "text": "in next week or something like that but we move relatively quickly I just don't want to see this stuff take a year to",
    "start": "2059490",
    "end": "2064500"
  },
  {
    "text": "land I guess okay I would say it's not",
    "start": "2064500",
    "end": "2074250"
  },
  {
    "text": "like I don't think there is a breaking change if I'm not mistaken so it should",
    "start": "2074250",
    "end": "2080879"
  },
  {
    "text": "be pretty smooth since there isn't no breaking change the only kind of breaking change but it's not really",
    "start": "2080880",
    "end": "2086850"
  },
  {
    "text": "breaking is that once you start using a scope manager and the reason it's not",
    "start": "2086850",
    "end": "2093570"
  },
  {
    "text": "breaking it's because it's optional so by default you get a no up so it doesn't doesn't matter but as soon as you put",
    "start": "2093570",
    "end": "2100800"
  },
  {
    "text": "the scope manager in what is gonna happen and that's that's from the specification the open tracing",
    "start": "2100800",
    "end": "2107100"
  },
  {
    "text": "specification is that you will automatically like each span will",
    "start": "2107100",
    "end": "2114570"
  },
  {
    "text": "automatically be a child of the span in the current scope which today is not the",
    "start": "2114570",
    "end": "2122010"
  },
  {
    "text": "case in in theory but there's no coke manager so it doesn't make sense anyway so that's the only real change is",
    "start": "2122010",
    "end": "2129360"
  },
  {
    "text": "that once you you put a scope manager in then you may have some spans that get a",
    "start": "2129360",
    "end": "2135870"
  },
  {
    "text": "parents that they didn't before or something like that but so far it's pretty much the only the only breaking",
    "start": "2135870",
    "end": "2142290"
  },
  {
    "text": "change because that's a good way yeah it's it's a change it's like a it's a change of behavior that you get by",
    "start": "2142290",
    "end": "2149190"
  },
  {
    "text": "upgrading your API but you're right it's not a breaking change it's probably less likely for many reasons that this will",
    "start": "2149190",
    "end": "2154710"
  },
  {
    "text": "cause a lot of anxiety so hopefully I'm just a little bit traumatized after the Java experience and that won't be",
    "start": "2154710",
    "end": "2160890"
  },
  {
    "text": "relevant here but that yeah that's a really good point thank you I think the",
    "start": "2160890",
    "end": "2165900"
  },
  {
    "text": "only call out there is yet let's make sure if we have some stuff that's experimental it also looks additive and",
    "start": "2165900",
    "end": "2173040"
  },
  {
    "text": "so it would probably be good to have a release of the scope manager that only",
    "start": "2173040",
    "end": "2178110"
  },
  {
    "text": "contained you know the parts that we think are necessary and well-thought-out",
    "start": "2178110",
    "end": "2184590"
  },
  {
    "text": "and then have a you know ii you know follow-up release that maybe adds",
    "start": "2184590",
    "end": "2189600"
  },
  {
    "text": "routines or some other concept like that and make sure if it's just additive changes we're thinking separated into",
    "start": "2189600",
    "end": "2196260"
  },
  {
    "text": "two releases so we have time to get it right so how much would you trim like",
    "start": "2196260",
    "end": "2202740"
  },
  {
    "text": "for sure the root and parent will not be in there yeah will you also remove things like the bind and things like",
    "start": "2202740",
    "end": "2208710"
  },
  {
    "text": "that I mean these are are very useful but they can be done outside of the",
    "start": "2208710",
    "end": "2216090"
  },
  {
    "text": "library pretty easily as well it's just it was just to avoid that everyone has to you know repeat this code because",
    "start": "2216090",
    "end": "2224610"
  },
  {
    "text": "it's got it's kind of involved it's not a lot of lines of code but it's like you you have to know what you're doing to to",
    "start": "2224610",
    "end": "2231450"
  },
  {
    "text": "write it basically I thought that code seemed fine that just seemed like convenience that we were adding though I",
    "start": "2231450",
    "end": "2237960"
  },
  {
    "text": "will say we have occasionally added some sugar and then paid for it later so",
    "start": "2237960",
    "end": "2243900"
  },
  {
    "text": "maybe we should you know review sugar or anything that's in there that's convenient but certainly code that",
    "start": "2243900",
    "end": "2251010"
  },
  {
    "text": "everyone will have to write but is slightly tricky and really there's only one good way to write it",
    "start": "2251010",
    "end": "2256410"
  },
  {
    "text": "that sounds precisely like the thing that should be in the API the only thing for me were",
    "start": "2256410",
    "end": "2263279"
  },
  {
    "text": "things that were semantic differences especially if there are things that maybe put pressure on the tracer to have",
    "start": "2263279",
    "end": "2270569"
  },
  {
    "text": "to now keep track of things or somehow influence your tracer implementation",
    "start": "2270569",
    "end": "2275730"
  },
  {
    "text": "those are the parts where we want to make sure we're doing just we've done",
    "start": "2275730",
    "end": "2283440"
  },
  {
    "text": "enough experimentation and you know put that those concepts in their paces before releasing them that's all and I",
    "start": "2283440",
    "end": "2290760"
  },
  {
    "text": "wouldn't want to hold up this other work if that is looking like it's gonna take a little bit of time like if most of the",
    "start": "2290760",
    "end": "2296700"
  },
  {
    "text": "risk is is in new features I'd rather ship the West's risky part sooner and",
    "start": "2296700",
    "end": "2301920"
  },
  {
    "text": "just get people using it makes sense",
    "start": "2301920",
    "end": "2306990"
  },
  {
    "text": "yeah I could say that that we have a scope manager already of course in",
    "start": "2306990",
    "end": "2313619"
  },
  {
    "text": "arresting a PM that we made ourselves and that uses those to bind or it has a",
    "start": "2313619",
    "end": "2320220"
  },
  {
    "text": "similar content that those to find find things because it's essential and note rjs to be able to do that this is a very",
    "start": "2320220",
    "end": "2328619"
  },
  {
    "text": "node G a specific thing of course yes oh",
    "start": "2328619",
    "end": "2332990"
  },
  {
    "text": "well it sounds like a next step would be a release candidate branch with a",
    "start": "2335059",
    "end": "2344029"
  },
  {
    "text": "proposed scope manager from rock let me",
    "start": "2344029",
    "end": "2349799"
  },
  {
    "text": "know if you need any permissions to get that rolling we're happy to help you get",
    "start": "2349799",
    "end": "2354930"
  },
  {
    "text": "that set up alright for now for now much I think it should be it should be fine",
    "start": "2354930",
    "end": "2361559"
  },
  {
    "text": "eventually there will be that open tracing NPM user that will need to be an",
    "start": "2361559",
    "end": "2367289"
  },
  {
    "text": "organization but that's only when we're ready to ship so for now it's not the",
    "start": "2367289",
    "end": "2373710"
  },
  {
    "text": "end of the world but I had also a few questions myself about where a few",
    "start": "2373710",
    "end": "2380880"
  },
  {
    "text": "things should go of course for the first version it doesn't really matter but I think we can still open the discussion",
    "start": "2380880",
    "end": "2388039"
  },
  {
    "text": "so basically for context perfect you rely on the current a synchronous",
    "start": "2388039",
    "end": "2395670"
  },
  {
    "text": "context and the problem is some libraries have their own internal task queues where they they will run your",
    "start": "2395670",
    "end": "2404040"
  },
  {
    "text": "code in a different a synchronous context meaning that you have to bind",
    "start": "2404040",
    "end": "2409220"
  },
  {
    "text": "when using these libraries one of the most popular ones is Bluebird and what I",
    "start": "2409220",
    "end": "2417900"
  },
  {
    "text": "was wondering is should these be patched directly in the scope manager and that",
    "start": "2417900",
    "end": "2424380"
  },
  {
    "text": "could even be in the abstract class probably because yeah anyway point is",
    "start": "2424380",
    "end": "2433710"
  },
  {
    "text": "should this be in the scope manager itself or should it be up to the to do",
    "start": "2433710",
    "end": "2440430"
  },
  {
    "text": "the library user to do that basically I would vote for keeping it outside of the",
    "start": "2440430",
    "end": "2448740"
  },
  {
    "text": "scope manager simply because it's it's a maintenance nightmare to to make sure",
    "start": "2448740",
    "end": "2454950"
  },
  {
    "text": "these patches actually always work if a new version of Bluebird is released that",
    "start": "2454950",
    "end": "2460109"
  },
  {
    "text": "changes the thing you are patching then it's it's breaking so",
    "start": "2460109",
    "end": "2467300"
  },
  {
    "text": "yeah III think it's better to leave that up to the individual vendors in my",
    "start": "2467550",
    "end": "2473970"
  },
  {
    "text": "opinion of these",
    "start": "2473970",
    "end": "2476510"
  },
  {
    "text": "okay the I mean I totally agree and of",
    "start": "2480350",
    "end": "2485850"
  },
  {
    "text": "course we know that this is also true for any integrations so any automatic",
    "start": "2485850",
    "end": "2493890"
  },
  {
    "text": "instrumentation for example but also I mean I would say you're basically",
    "start": "2493890",
    "end": "2502050"
  },
  {
    "text": "distributing the nightmare basically by not putting it in the inter library itself because then because for",
    "start": "2502050",
    "end": "2511230"
  },
  {
    "text": "sure it's something everyone will have to do right because if you don't patch Bluebird you lose your context so it's",
    "start": "2511230",
    "end": "2516450"
  },
  {
    "text": "simple as that and even if you're not using Bluebird there are a very high chance you're using a library that's",
    "start": "2516450",
    "end": "2521580"
  },
  {
    "text": "using Bluebird and at the end of the day you're using so the problem is basically",
    "start": "2521580",
    "end": "2528870"
  },
  {
    "text": "that everyone will have to implement this and everyone will have the same nightmare but at the same time they",
    "start": "2528870",
    "end": "2535560"
  },
  {
    "text": "won't collaborate together to to address that so maybe there are some bugs and",
    "start": "2535560",
    "end": "2540600"
  },
  {
    "text": "one implementation somebody in another implementation and at the end of the day like all tracers will have a lot of bugs",
    "start": "2540600",
    "end": "2547500"
  },
  {
    "text": "related to that because it's like you said it's a it's a very difficult problem to to address and by having it",
    "start": "2547500",
    "end": "2554940"
  },
  {
    "text": "centralized in of interesting itself the advantage would be that if there's",
    "start": "2554940",
    "end": "2561900"
  },
  {
    "text": "something needs to be fixed or some new library needs to be to be addressed then",
    "start": "2561900",
    "end": "2568860"
  },
  {
    "text": "it can all be done in there I mean of course it could not be in the core repository maybe but I think it would",
    "start": "2568860",
    "end": "2578130"
  },
  {
    "text": "benefit everyone to have it there of course we would need to have a lot of",
    "start": "2578130",
    "end": "2584490"
  },
  {
    "text": "safeguards to make sure that for example if Bluebird five point X is released and it's different it works differently or",
    "start": "2584490",
    "end": "2591600"
  },
  {
    "text": "something like that I mean I think it's fine if a new version is released and",
    "start": "2591600",
    "end": "2596610"
  },
  {
    "text": "it's not working meaning you lose what is not fine if is if it breaks so the",
    "start": "2596610",
    "end": "2604590"
  },
  {
    "text": "only concern I would have is to say it needs to be super safe so as soon as anything fails it should just continue",
    "start": "2604590",
    "end": "2611760"
  },
  {
    "text": "execution right not true or anything but yeah this is my",
    "start": "2611760",
    "end": "2617190"
  },
  {
    "text": "this is my take on yeah I I agree also",
    "start": "2617190",
    "end": "2623670"
  },
  {
    "text": "with that so there you can see kind of see from from two angles right so so",
    "start": "2623670",
    "end": "2630829"
  },
  {
    "text": "yeah I think maybe it would be really",
    "start": "2630829",
    "end": "2636240"
  },
  {
    "text": "really good if this could actually kind of live I don't know if it's possible but if this could live as a separate",
    "start": "2636240",
    "end": "2642089"
  },
  {
    "text": "project that is not a really tied to open tracing so even non open tracing",
    "start": "2642089",
    "end": "2648200"
  },
  {
    "text": "traces could also make use of this and and that would that would mean hopefully",
    "start": "2648200",
    "end": "2653819"
  },
  {
    "text": "that we get even more eyes on it I don't know this is possible this is possible",
    "start": "2653819",
    "end": "2659430"
  },
  {
    "text": "but if you could make the API in a way so it's not so it doesn't expect open tracing to be there that would be that",
    "start": "2659430",
    "end": "2666809"
  },
  {
    "text": "would be the best scenario growing going forward obviously the right solution to",
    "start": "2666809",
    "end": "2673740"
  },
  {
    "text": "this is to catch all the libraries that have this user line callback queue this",
    "start": "2673740",
    "end": "2682230"
  },
  {
    "text": "is this is a project that we kind of had worked on and the node foundation",
    "start": "2682230",
    "end": "2687950"
  },
  {
    "text": "because with agent hooks there is a providers API that actually these",
    "start": "2687950",
    "end": "2693720"
  },
  {
    "text": "libraries are supposed to use if they want to not lose context and so we have",
    "start": "2693720",
    "end": "2699180"
  },
  {
    "text": "opened a few PRS and these libraries to see if we can make them users API and if",
    "start": "2699180",
    "end": "2705569"
  },
  {
    "text": "week and and this problem will result by the library itself instead of we having",
    "start": "2705569",
    "end": "2710700"
  },
  {
    "text": "to to monkey patch things which of course is the right solution but that",
    "start": "2710700",
    "end": "2715770"
  },
  {
    "text": "only works for nodes 8.1 and above obviously because Asian crooks needs to be there yes and also you need for sure",
    "start": "2715770",
    "end": "2726210"
  },
  {
    "text": "you need the support of of that libraries team basically to be able to",
    "start": "2726210",
    "end": "2731869"
  },
  {
    "text": "to be able to do that I I think most of them are promised libraries anyway I",
    "start": "2731869",
    "end": "2737160"
  },
  {
    "text": "haven't really seen any other library word this is where the context is really",
    "start": "2737160",
    "end": "2742290"
  },
  {
    "text": "lost or at least not a very commonly used one PG Postgres basically every database",
    "start": "2742290",
    "end": "2752850"
  },
  {
    "text": "driver on the planet will probably that at least one that uses TCP will probably",
    "start": "2752850",
    "end": "2758440"
  },
  {
    "text": "have a socket pool and that socket pool will have this problem they most of them",
    "start": "2758440",
    "end": "2764680"
  },
  {
    "text": "use this module called generic rule that they share and generic will have this",
    "start": "2764680",
    "end": "2769810"
  },
  {
    "text": "problem so if you patched generic rule you will you will fix it for most database drivers what is a big portion",
    "start": "2769810",
    "end": "2776500"
  },
  {
    "text": "of them but that has the same problem",
    "start": "2776500",
    "end": "2780990"
  },
  {
    "text": "okay so I think yeah I think for now we can basically because this is not a",
    "start": "2782340",
    "end": "2788290"
  },
  {
    "text": "concern for the first version but yeah I think eventually we could lead up to",
    "start": "2788290",
    "end": "2795040"
  },
  {
    "text": "what your what you're saying which is to work with the different maintainer and in the meantime we could have external",
    "start": "2795040",
    "end": "2803310"
  },
  {
    "text": "projects basically to handle that it would be nice if it's under the the open",
    "start": "2803310",
    "end": "2809590"
  },
  {
    "text": "tracing umbrella but otherwise I mean these are as long as it's like open",
    "start": "2809590",
    "end": "2814600"
  },
  {
    "text": "source projects that anybody can then use and maybe something some API to be",
    "start": "2814600",
    "end": "2821560"
  },
  {
    "text": "able to use that easily like I don't know passing these as kind of plugins to",
    "start": "2821560",
    "end": "2828160"
  },
  {
    "text": "the scope manager or something like that but yeah for now it's not really separately a concern so this",
    "start": "2828160",
    "end": "2838810"
  },
  {
    "text": "conversation is super rad but I want to call time since we've only got about ten",
    "start": "2838810",
    "end": "2845710"
  },
  {
    "text": "minutes left on this call it sounds like we've got next steps that are pretty",
    "start": "2845710",
    "end": "2851320"
  },
  {
    "text": "pretty clear but I'm excited about all of this additional stuff as well so if",
    "start": "2851320",
    "end": "2860500"
  },
  {
    "text": "that sounds good everyone makes sure there's now a JavaScript Gator room",
    "start": "2860500",
    "end": "2869050"
  },
  {
    "text": "I think these sub rooms are good I do sometimes worry that maybe because",
    "start": "2869050",
    "end": "2874990"
  },
  {
    "text": "Gators interface is so terrible people miss that there are these additional rooms where there's",
    "start": "2874990",
    "end": "2881590"
  },
  {
    "text": "I don't totally know what to do about that except perhaps occasionally promote them in the main room Wow",
    "start": "2881590",
    "end": "2888010"
  },
  {
    "text": "but there is a quick we could add a link to the open tracing rip oh I was gonna",
    "start": "2888010",
    "end": "2896380"
  },
  {
    "text": "say we should probably link those sub rooms from each language repair yeah",
    "start": "2896380",
    "end": "2903210"
  },
  {
    "text": "read me that includes all this good stuff yeah but I think that's where this",
    "start": "2903900",
    "end": "2912100"
  },
  {
    "text": "conversation should continue and I hope to see everybody there and I'm looking forward to your PR Rach",
    "start": "2912100",
    "end": "2919590"
  },
  {
    "text": "cool so just final a couple minutes",
    "start": "2919590",
    "end": "2925230"
  },
  {
    "text": "other orders of business Austin you're",
    "start": "2925230",
    "end": "2930340"
  },
  {
    "text": "asking about some ownership for some tool chains open tracing C sharps was we",
    "start": "2930340",
    "end": "2938170"
  },
  {
    "text": "the CI the a player account I think I know that description Weiss okay I think",
    "start": "2938170",
    "end": "2952420"
  },
  {
    "text": "that's a good guess there was a little talking I think but it's great how can",
    "start": "2952420",
    "end": "2960820"
  },
  {
    "text": "you find you after this one Ben",
    "start": "2960820",
    "end": "2963900"
  },
  {
    "text": "yesterday there was some talk about who owns the open tracing and p.m. user and",
    "start": "2969360",
    "end": "2975460"
  },
  {
    "text": "whether that can be converted to it to an org so I have access to anything I",
    "start": "2975460",
    "end": "2985980"
  },
  {
    "text": "think an organ makes sense but I'm not entirely clear what the differences are",
    "start": "2986640",
    "end": "2993690"
  },
  {
    "text": "one question there of what can L be",
    "start": "2996510",
    "end": "3002330"
  },
  {
    "text": "we've done things in the past but I don't feel strongly about this at all but you know like created like a",
    "start": "3002330",
    "end": "3008580"
  },
  {
    "text": "distribution list on like an email address do that then sends off to various people",
    "start": "3008580",
    "end": "3015080"
  },
  {
    "text": "who care just to you know multiplex it but I don't feel strongly about it yeah",
    "start": "3015080",
    "end": "3020900"
  },
  {
    "text": "of course that path that ends up being a skills and key for password resets and stuff so you have to be careful about it",
    "start": "3020900",
    "end": "3026599"
  },
  {
    "text": "I don't feel strongly about how we do it I'm happy to do that again if it's helpful cool but also it sounds like",
    "start": "3026599",
    "end": "3037490"
  },
  {
    "text": "something we can discussion the git er Channel yes but I'm glad you found the keys to that particular castle Isabelle",
    "start": "3037490",
    "end": "3044980"
  },
  {
    "text": "we do keep losing these things perhaps we should have some documents somewhere",
    "start": "3044980",
    "end": "3050359"
  },
  {
    "text": "where we write down some of this or banal in this case it was like user name",
    "start": "3050359",
    "end": "3062030"
  },
  {
    "text": "was Ben Cronin so oh my god yeah okay",
    "start": "3062030",
    "end": "3073700"
  },
  {
    "text": "we've got five minutes left I know Carlos do you want to at least do a",
    "start": "3073700",
    "end": "3079430"
  },
  {
    "text": "shout out about a PR for scope managers on Java or an issue yeah yeah well I",
    "start": "3079430",
    "end": "3087080"
  },
  {
    "text": "don't know how many people here are you know familiar with open releasing Java",
    "start": "3087080",
    "end": "3093260"
  },
  {
    "text": "today but there's a pending will request that I would like to get moving if",
    "start": "3093260",
    "end": "3098630"
  },
  {
    "text": "possible for you know prior to do a second release candidate essentially",
    "start": "3098630",
    "end": "3104450"
  },
  {
    "text": "well if the link is in the document and it's about the possibility of activating",
    "start": "3104450",
    "end": "3109760"
  },
  {
    "text": "ice-pan context inst you know in addition to a span and this is when you",
    "start": "3109760",
    "end": "3115580"
  },
  {
    "text": "don't have any control over the lifetime of a span and you don't want to have you",
    "start": "3115580",
    "end": "3120619"
  },
  {
    "text": "know um like you do want to end up in the situation where you are passing an activist panelling it gets activated but",
    "start": "3120619",
    "end": "3127820"
  },
  {
    "text": "it's already finished and then you are trying to set tax or stop or overly on",
    "start": "3127820",
    "end": "3133220"
  },
  {
    "text": "it and so it's not working and it's kind of I think it's very very",
    "start": "3133220",
    "end": "3138680"
  },
  {
    "text": "personal opinion I think it could be something nice to have it's kind of a slightly polemical actually so if",
    "start": "3138680",
    "end": "3144440"
  },
  {
    "text": "there's anybody here familiar just like I would love to get any feedback on that I think it's something it would be",
    "start": "3144440",
    "end": "3151130"
  },
  {
    "text": "nice a nice addition but it's actually the one of the problems probably that it",
    "start": "3151130",
    "end": "3158780"
  },
  {
    "text": "could be adding some complexity to the API because then there's a current",
    "start": "3158780",
    "end": "3164030"
  },
  {
    "text": "invariant where if you have a scope you always have a ice-pan but then these",
    "start": "3164030",
    "end": "3169790"
  },
  {
    "text": "could be breaking that so yeah if anybody has any kind of feedback or even if you are even if you guys are not",
    "start": "3169790",
    "end": "3176150"
  },
  {
    "text": "familiar with the open trace in July API use let us know I think we would always",
    "start": "3176150",
    "end": "3181970"
  },
  {
    "text": "be be happy to get some feedback for that I know Felix from elastic cares about",
    "start": "3181970",
    "end": "3192530"
  },
  {
    "text": "this issue a lot Thomas justifier he does he's on vacation right now he's",
    "start": "3192530",
    "end": "3199100"
  },
  {
    "text": "back Monday okay great yeah maybe we can get another call together with Thomas and I'm sorry with Felix and Yuri I",
    "start": "3199100",
    "end": "3208640"
  },
  {
    "text": "think they were the two people who cared a lot of ever need to get sorted yeah oh yeah I think that's a great view great",
    "start": "3208640",
    "end": "3216910"
  },
  {
    "text": "okay final couple of minutes before we all have to go there were a line of",
    "start": "3219820",
    "end": "3228260"
  },
  {
    "text": "other topics related to JavaScript nippy and people feel like they got through",
    "start": "3228260",
    "end": "3235100"
  },
  {
    "text": "all of those and they care - are there any final questions on that front",
    "start": "3235100",
    "end": "3240579"
  },
  {
    "text": "I did see there was one note about",
    "start": "3245060",
    "end": "3250910"
  },
  {
    "text": "working with open census on this I think that's reasonable we've been working",
    "start": "3250910",
    "end": "3257900"
  },
  {
    "text": "with them around experimenting how we would merge the java api x' as a way of",
    "start": "3257900",
    "end": "3264320"
  },
  {
    "text": "starting to like directly collaborate i don't know if there's people on this",
    "start": "3264320",
    "end": "3269540"
  },
  {
    "text": "call who also work with census the census team on the JavaScript side but",
    "start": "3269540",
    "end": "3276730"
  },
  {
    "text": "given the way things are going yeah I do think it's totally reasonable to check in with them and kind of see that we're",
    "start": "3276730",
    "end": "3285830"
  },
  {
    "text": "all sort of growing the same direction on some of these concepts or if we're not like why not is there like a good",
    "start": "3285830",
    "end": "3292580"
  },
  {
    "text": "reason like are there API decisions getting made that we can learn from over there but I don't work personally with",
    "start": "3292580",
    "end": "3299930"
  },
  {
    "text": "it anyone who's working on JavaScript over there oh I should say I don't know who's working on JavaScript on census",
    "start": "3299930",
    "end": "3305600"
  },
  {
    "text": "right now I guess action item is to",
    "start": "3305600",
    "end": "3317780"
  },
  {
    "text": "perhaps go get involved with that team in that repo perhaps once we've got a release candidate branch of ours cooking",
    "start": "3317780",
    "end": "3325910"
  },
  {
    "text": "we could point them at that and say hey what do you think and if you want to do",
    "start": "3325910",
    "end": "3331730"
  },
  {
    "text": "the the patching of some of the modules like etc somewhere having be having it",
    "start": "3331730",
    "end": "3339410"
  },
  {
    "text": "in a way that they also can use it would probably be a good idea that that's why I suggested that before yeah I think",
    "start": "3339410",
    "end": "3345650"
  },
  {
    "text": "that's a great idea if we can just share it start sharing components as these brilliant",
    "start": "3345650",
    "end": "3352329"
  },
  {
    "text": "hooray okay we're at the end one final note if you didn't add yourself to the",
    "start": "3353590",
    "end": "3358640"
  },
  {
    "text": "attending list on the meeting notes you could do that appreciate it and it's been lovely seeing all your",
    "start": "3358640",
    "end": "3367970"
  },
  {
    "text": "lovely faces it's you next time thank",
    "start": "3367970",
    "end": "3373370"
  },
  {
    "text": "you I'll see you guys",
    "start": "3373370",
    "end": "3380380"
  },
  {
    "text": "you",
    "start": "3383680",
    "end": "3385740"
  }
]