[
  {
    "text": "hello welcome to the cluster api deep dive i'm cecil robert michel i'm a software",
    "start": "80",
    "end": "6560"
  },
  {
    "text": "engineer at microsoft and i am a cluster api azure maintainer",
    "start": "6560",
    "end": "11920"
  },
  {
    "text": "i've been working on the cluster api project for about a year now",
    "start": "11920",
    "end": "17440"
  },
  {
    "text": "and i'm nadia achima i'm a member of technical staff at vmware i'm the maintainer of the class api provider aws",
    "start": "17440",
    "end": "24080"
  },
  {
    "text": "on which i've been working for about two years now",
    "start": "24080",
    "end": "31760"
  },
  {
    "text": "so a sub project of the cluster life cycle",
    "start": "31760",
    "end": "38320"
  },
  {
    "text": "it was initially released in v1 alpha 1 in april 2019 and it's now in the v1 alpha 4 api",
    "start": "38320",
    "end": "45440"
  },
  {
    "text": "version and cluster api is a kubernetes project to bring declarative kubernetes styles",
    "start": "45440",
    "end": "52640"
  },
  {
    "text": "apis to cluster creation configuration and management what this means is that it really",
    "start": "52640",
    "end": "59600"
  },
  {
    "text": "simplifies the life cycle management of kubernetes clusters using uh extending the kubernetes apis",
    "start": "59600",
    "end": "66799"
  },
  {
    "text": "and if you're not familiar with our logo it's a reference to turtles all the way down",
    "start": "66799",
    "end": "72320"
  },
  {
    "text": "because it's really using kubernetes to build kubernetes",
    "start": "72320",
    "end": "77840"
  },
  {
    "text": "okay so when talking about cluster api it's important to understand that it is a building block",
    "start": "79280",
    "end": "85040"
  },
  {
    "text": "um so there's this project called cubadiem or you know cube admin or qdm atom",
    "start": "85040",
    "end": "90240"
  },
  {
    "text": "depending on what your kubernetes pronunciation game is but it is another uh subproject of sig",
    "start": "90240",
    "end": "96720"
  },
  {
    "text": "cluster life cycle and what qbm does is it takes a computer",
    "start": "96720",
    "end": "102159"
  },
  {
    "text": "a server a machine and it turns that into a kubernetes node so it really simplified and streamlined",
    "start": "102159",
    "end": "108799"
  },
  {
    "text": "the way that we build kubernetes clusters in kubernetes what we did with cluster api is we went",
    "start": "108799",
    "end": "115759"
  },
  {
    "text": "one step further we took cube adm and we built on top of it using it for bootstrapping of nodes",
    "start": "115759",
    "end": "121920"
  },
  {
    "text": "and we decided we wanted to also manage the cluster infrastructure itself",
    "start": "121920",
    "end": "127360"
  },
  {
    "text": "using kubernetes apis so that's what cluster api is and it is modular which",
    "start": "127360",
    "end": "133760"
  },
  {
    "text": "means that you can replace the build your own provider for bootstrapping for example or use another",
    "start": "133760",
    "end": "140000"
  },
  {
    "text": "existing provider besides the reference cube adm provider such as the talus bootstrap provider",
    "start": "140000",
    "end": "147120"
  },
  {
    "text": "and you can also plug it in with any infrastructure provider so that means it's compatible with any",
    "start": "147120",
    "end": "153599"
  },
  {
    "text": "cloud or any on-prem environments in cluster api itself the life cycle management part is really",
    "start": "153599",
    "end": "160319"
  },
  {
    "text": "environment agnostic",
    "start": "160319",
    "end": "163519"
  },
  {
    "text": "this is a bit of a overview of the landscape of the infrastructure providers and bootstrap providers that",
    "start": "165599",
    "end": "171360"
  },
  {
    "text": "exist in cluster api today this is just an overview as you can see there's support for",
    "start": "171360",
    "end": "177840"
  },
  {
    "text": "some of the major clouds as well as some bare metal providers it is a growing list so i recommend you",
    "start": "177840",
    "end": "183760"
  },
  {
    "text": "check out the full list at the cluster api book in the provider section",
    "start": "183760",
    "end": "189200"
  },
  {
    "text": "and if you can't find what you're looking for you can also decide to build your own provider we have some",
    "start": "189200",
    "end": "194319"
  },
  {
    "text": "instructions on um like a provider contract on what is needed in order for your provider to",
    "start": "194319",
    "end": "199680"
  },
  {
    "text": "be conformed with cluster api okay so how does it work um so",
    "start": "199680",
    "end": "207040"
  },
  {
    "text": "when uh thinking about cluster api there are usually two ways that users go about using the",
    "start": "207040",
    "end": "213200"
  },
  {
    "text": "tooling the first one is having one management cluster and many target clusters",
    "start": "213200",
    "end": "219599"
  },
  {
    "text": "what that means is that the management of your target clusters is centralized and",
    "start": "219599",
    "end": "224959"
  },
  {
    "text": "is all on one cluster called the management cluster the management cluster can be any",
    "start": "224959",
    "end": "230720"
  },
  {
    "text": "kubernetes cluster as long as it's kubernetes conformance so you can use kind or you can use a",
    "start": "230720",
    "end": "236400"
  },
  {
    "text": "managed kubernetes service such as aks or ets and or you can use another cluster api",
    "start": "236400",
    "end": "243280"
  },
  {
    "text": "build cluster and then your target clusters are what runs your kubernetes workloads",
    "start": "243280",
    "end": "249120"
  },
  {
    "text": "uh what's really interesting about this is that you can actually have different environments being managed",
    "start": "249120",
    "end": "256400"
  },
  {
    "text": "from the same management cluster so in this example we have azure clusters and openstack clusters",
    "start": "256400",
    "end": "262000"
  },
  {
    "text": "and aws clusters and vsphere clusters all being managed from a management",
    "start": "262000",
    "end": "267120"
  },
  {
    "text": "cluster so let's dig in a little bit more into",
    "start": "267120",
    "end": "273040"
  },
  {
    "text": "the management cluster so there are three providers in cluster",
    "start": "273040",
    "end": "278639"
  },
  {
    "text": "api there's the core providers the bootstrap providers and the infrastructure providers and then we",
    "start": "278639",
    "end": "285360"
  },
  {
    "text": "also have control plane which is a new addition so how it works",
    "start": "285360",
    "end": "290720"
  },
  {
    "text": "is cluster api uses crds to extend the kubernetes apis to manage",
    "start": "290720",
    "end": "296639"
  },
  {
    "text": "clusters themselves and their machines and it uses controllers to",
    "start": "296639",
    "end": "303039"
  },
  {
    "text": "reconcile those crds and make sure that the actual state of the world matches the desired state if you're not",
    "start": "303039",
    "end": "309600"
  },
  {
    "text": "familiar with controllers and crds i recommend checking out the cube builder book i",
    "start": "309600",
    "end": "316080"
  },
  {
    "text": "think it's a really good introduction to the basics of how crds and controllers work",
    "start": "316080",
    "end": "325039"
  },
  {
    "text": "okay so i mentioned that there are two ways of managing cluster api clusters",
    "start": "325039",
    "end": "331919"
  },
  {
    "text": "the first one is having one management cluster and many target clusters but what if you just want that one",
    "start": "331919",
    "end": "338080"
  },
  {
    "text": "kubernetes clusters sometimes you might not want to have an extra cluster sitting there to manage your workload",
    "start": "338080",
    "end": "344479"
  },
  {
    "text": "cluster and you might want to be able to manage your workloads from the same place that you manage your",
    "start": "344479",
    "end": "350400"
  },
  {
    "text": "cluster infrastructure and that's where the self-managed cluster concept comes in",
    "start": "350400",
    "end": "355680"
  },
  {
    "text": "so how that works is as a user you'll start by bootstrapping a cluster called the",
    "start": "355680",
    "end": "361919"
  },
  {
    "text": "bootstrap cluster and that's again any kubernetes cluster as long as it's conformant",
    "start": "361919",
    "end": "368880"
  },
  {
    "text": "and that cluster will you will install all the cluster api crds and controllers on it",
    "start": "368880",
    "end": "374720"
  },
  {
    "text": "um and it will start to reconcile your target cluster and as soon as the target cluster",
    "start": "374720",
    "end": "380960"
  },
  {
    "text": "control plane is up then you do something that we call pivot which is you",
    "start": "380960",
    "end": "386560"
  },
  {
    "text": "move all your cluster api crds and controllers to your new target cluster",
    "start": "386560",
    "end": "392160"
  },
  {
    "text": "and you delete your bootstrap cluster that means from that point on you're going to be able to manage all",
    "start": "392160",
    "end": "399199"
  },
  {
    "text": "your cluster infrastructure from the same place of from the cluster itself",
    "start": "399199",
    "end": "404240"
  },
  {
    "text": "so you really have one place where your cluster workloads and your cluster",
    "start": "404240",
    "end": "409919"
  },
  {
    "text": "infrastructure is managed from",
    "start": "409919",
    "end": "413280"
  },
  {
    "text": "so i'm going to give you a bit of an overview of you know the crds and their specs i'm",
    "start": "416319",
    "end": "423599"
  },
  {
    "text": "not going to show you all of them because that would take a long time but just to give you an overview of the",
    "start": "423599",
    "end": "429120"
  },
  {
    "text": "important ones this is so this is uh the cluster so the concept of cluster is so this is in",
    "start": "429120",
    "end": "436560"
  },
  {
    "text": "cluster api it's the cluster-wide configuration and it is everything that is really",
    "start": "436560",
    "end": "443599"
  },
  {
    "text": "generic um and not infrastructure specific uh things like pod and service ranges and then we",
    "start": "443599",
    "end": "450960"
  },
  {
    "text": "also have the associated infra cluster and the infrared cluster is per infrastructure provider",
    "start": "450960",
    "end": "457199"
  },
  {
    "text": "so usually it will be named like something like name of the infrastructure and cluster so for example aws cluster azure cluster",
    "start": "457199",
    "end": "465120"
  },
  {
    "text": "and that's really the provider specific cluster configuration",
    "start": "465120",
    "end": "470720"
  },
  {
    "text": "so for example your aws region or your azure location or your vnet name or things like that",
    "start": "470720",
    "end": "479840"
  },
  {
    "text": "then we have cubadium control plane so i mentioned control plane provider briefly earlier cubadium control plane",
    "start": "480000",
    "end": "487199"
  },
  {
    "text": "is new and v1 offer 3 and it is a way to simplify the control",
    "start": "487199",
    "end": "493199"
  },
  {
    "text": "plane uh lifecycle management using cube adm so it has the replica count which is the",
    "start": "493199",
    "end": "500080"
  },
  {
    "text": "desired number of control plane machines and then it has two references the infrastructure template which is",
    "start": "500080",
    "end": "506080"
  },
  {
    "text": "what the template of uh the infrastructure machines and what each machine should look like so reference to",
    "start": "506080",
    "end": "511360"
  },
  {
    "text": "that template and then the cubadium config and the cubaedm config is really what helps you configure the",
    "start": "511360",
    "end": "519039"
  },
  {
    "text": "bootstrapping and the cluster configuration so you have the init configuration the cluster configuration and the join",
    "start": "519039",
    "end": "525519"
  },
  {
    "text": "configuration and that's where you would set things like if you want for example extra arg in your controller manager",
    "start": "525519",
    "end": "535839"
  },
  {
    "text": "and then we have the machine deployment the machine deployments are if you're familiar with",
    "start": "536640",
    "end": "542000"
  },
  {
    "text": "pods and deployments machine deployments are kind of the same thing for cluster api with machines and",
    "start": "542000",
    "end": "547600"
  },
  {
    "text": "machine deployments and so with a machine deployment you can define a set of machines that",
    "start": "547600",
    "end": "553200"
  },
  {
    "text": "would have a similar configuration and you will set a replica count similar",
    "start": "553200",
    "end": "559040"
  },
  {
    "text": "to the control planes and then you'll also have the machine spec which defines what each machine",
    "start": "559040",
    "end": "565279"
  },
  {
    "text": "and that set should look like so that will have the cubelet version and the reference the infrastructure",
    "start": "565279",
    "end": "572080"
  },
  {
    "text": "template as well as the bootstrap template",
    "start": "572080",
    "end": "577839"
  },
  {
    "text": "okay and then we have a machine so a machine is an individual object in a",
    "start": "578880",
    "end": "584959"
  },
  {
    "text": "machine deployment or you can also decide to create individual machine",
    "start": "584959",
    "end": "590320"
  },
  {
    "text": "standalone missions just like in kubernetes you can create standalone pods that are not part of a deployment and so",
    "start": "590320",
    "end": "596880"
  },
  {
    "text": "this is really the configuration for that specific machine and the spec looks very similar to",
    "start": "596880",
    "end": "604480"
  },
  {
    "text": "the machine deployment spec we also have the cubelet version and the infrastructure",
    "start": "604480",
    "end": "610640"
  },
  {
    "text": "reference as well as the bootstrap config reference",
    "start": "610640",
    "end": "615920"
  },
  {
    "text": "and then just like you had the infra cluster with cluster we have infra machine with machine and",
    "start": "616560",
    "end": "622320"
  },
  {
    "text": "so information again is going to be something like aws machine or azure machine or vsphere machine or",
    "start": "622320",
    "end": "628000"
  },
  {
    "text": "etc and in that information you really have all the infrastructure",
    "start": "628000",
    "end": "634000"
  },
  {
    "text": "provider specific configurations so those are more like uh environment specific",
    "start": "634000",
    "end": "639600"
  },
  {
    "text": "capabilities so for example if your provider enables spots virtual machines that's where you'd configure that",
    "start": "639600",
    "end": "646079"
  },
  {
    "text": "you'll be able to set your instance type or your vm size depending on what cloud language you",
    "start": "646079",
    "end": "651519"
  },
  {
    "text": "speak and different things like that that are really provider infrastructure specific",
    "start": "651519",
    "end": "658720"
  },
  {
    "text": "okay um so now i'm going to head off to india who's going to give you the show you the exciting part the demo",
    "start": "659120",
    "end": "666560"
  },
  {
    "text": "all right so um what went through is how to get started with uh cluster api",
    "start": "667600",
    "end": "672959"
  },
  {
    "text": "essentially so uh what we're going to do is",
    "start": "672959",
    "end": "678240"
  },
  {
    "text": "is first going to use uh kind to just have a bootstrap cluster that i can work with",
    "start": "679279",
    "end": "685360"
  },
  {
    "text": "um and then we use a tool called cluster custom which you can get from the link below this cluster cuttle in it uh installs",
    "start": "685360",
    "end": "692240"
  },
  {
    "text": "the components that are required to run cluster api for each provider so we're actually going to set up three",
    "start": "692240",
    "end": "697839"
  },
  {
    "text": "different clusters at the same time using azure aws and vsphere so this really shows the power of using cluster",
    "start": "697839",
    "end": "704720"
  },
  {
    "text": "api so to create a cluster uh we use a command called clustercuttleconfig",
    "start": "704720",
    "end": "710800"
  },
  {
    "text": "and this just generates kubernetes manifests templates that have been released by the",
    "start": "710800",
    "end": "716880"
  },
  {
    "text": "infrastructure providers that help you get started but there's nothing to stop you using your own",
    "start": "716880",
    "end": "722240"
  },
  {
    "text": "uh manifest using the specs that cecile showed a few moments ago um so this is just an example of each of",
    "start": "722240",
    "end": "729040"
  },
  {
    "text": "the azure vsphere and aws templates and they all have common components and then each custom",
    "start": "729040",
    "end": "735120"
  },
  {
    "text": "bits for each each individual infrastructure provider and then what we're going to do is we're",
    "start": "735120",
    "end": "741279"
  },
  {
    "text": "going to apply this to a bootstrap cluster which in this case is the kind one we just created",
    "start": "741279",
    "end": "747200"
  },
  {
    "text": "um just showing the logs from each of the sort of controllers that for each infrastructure browser so you can see",
    "start": "747200",
    "end": "753600"
  },
  {
    "text": "what's going on and the first thing that happens is uh that it creates the sort of underlying network infrastructure that's going to",
    "start": "753600",
    "end": "760079"
  },
  {
    "text": "be needed for the clusters usually load balancers if it's public cloud then uh anything to do around uh creating",
    "start": "760079",
    "end": "768079"
  },
  {
    "text": "private networks uh so that's vm nets in azure and vpcs and aws and we can also just use normal",
    "start": "768079",
    "end": "776720"
  },
  {
    "text": "coupe cattle keep control uh to inspect the objects that are created by each of the cluster api uh components so",
    "start": "776720",
    "end": "784320"
  },
  {
    "text": "in this case we're doing couple get kcp which is the cube adm control plane",
    "start": "784320",
    "end": "789920"
  },
  {
    "text": "management and the various vsphere machines um next thing you do is you the cluster con",
    "start": "789920",
    "end": "797040"
  },
  {
    "text": "config administrative uh login is stored as a secret so you can just get that out",
    "start": "797040",
    "end": "802720"
  },
  {
    "text": "and use that to with cubecastle to access that newly create cluster",
    "start": "802720",
    "end": "808079"
  },
  {
    "text": "and first thing we need to do is apply like a cni so cluster api in itself is not opinionated in terms of which c",
    "start": "808079",
    "end": "814880"
  },
  {
    "text": "and i use so we're just using class uh um uh calico in this experience",
    "start": "814880",
    "end": "820399"
  },
  {
    "text": "and now we've had a problem um is that one of these azure machines didn't",
    "start": "820399",
    "end": "825760"
  },
  {
    "text": "come up and that's because i don't have enough quota in my azure account because i started it several hours prior to making",
    "start": "825760",
    "end": "834000"
  },
  {
    "text": "this demo uh so what i'm just gonna do is just edit the machine deployment so i'm just",
    "start": "834000",
    "end": "839440"
  },
  {
    "text": "gonna make it two rather than three so then i have enough room for my high availability control plane",
    "start": "839440",
    "end": "846079"
  },
  {
    "text": "and then you can see um just delete that faulty control plane machine",
    "start": "846079",
    "end": "851199"
  },
  {
    "text": "and cluster api goes ahead and replaces that for me um the other thing that i want to do uh",
    "start": "851199",
    "end": "858079"
  },
  {
    "text": "is my aws cluster is a bit out of date compared to others 1.17 versus 1.18",
    "start": "858079",
    "end": "865680"
  },
  {
    "text": "uh so i want to basically upgrade my aws cluster so i can do that by editing",
    "start": "865680",
    "end": "872000"
  },
  {
    "text": "first the control plane um and just changing that version",
    "start": "872000",
    "end": "877199"
  },
  {
    "text": "uh field so you can just change it from b1175 to b118.2 and",
    "start": "877199",
    "end": "885199"
  },
  {
    "text": "once i've saved that and exited um you can see that what's happening is one",
    "start": "885199",
    "end": "890720"
  },
  {
    "text": "of my uh control plane replicas become unavailable because it's about to be deleted and i've got four replicas",
    "start": "890720",
    "end": "897680"
  },
  {
    "text": "rather than three so it's created one one new 118 control plane instance",
    "start": "897680",
    "end": "903680"
  },
  {
    "text": "it's checking fcds working making sure that the xcd cluster is okay and then",
    "start": "903680",
    "end": "910720"
  },
  {
    "text": "it's just going to roll through each of those control plane instances replacing them one by one",
    "start": "910720",
    "end": "916320"
  },
  {
    "text": "um and the other thing we can do here it's like i can do this independently is",
    "start": "916320",
    "end": "921440"
  },
  {
    "text": "i can also upgrade the working nodes so i'm just going to edit so the notes controlled by the machine deployment",
    "start": "921440",
    "end": "926959"
  },
  {
    "text": "so i'm also just going to change that to 1 18 2 and exit whim",
    "start": "926959",
    "end": "934000"
  },
  {
    "text": "and you can see that nodes are going to not ready",
    "start": "934000",
    "end": "939519"
  },
  {
    "text": "scheduling disabled so we're doing they're draining that node making sure the workload's moving off then terminating that instance",
    "start": "939519",
    "end": "947519"
  },
  {
    "text": "and replacing it with a new one and you can control uh using the standard sort of max burst",
    "start": "947519",
    "end": "954320"
  },
  {
    "text": "sort of settings that you're familiar with in um pod based deployments you can",
    "start": "954320",
    "end": "960000"
  },
  {
    "text": "apply those there to control how many machines get replaced at once finally we're just going to show this pivot method so",
    "start": "960000",
    "end": "966720"
  },
  {
    "text": "what you might want to do is you've created a cluster with cluster api you want that to be the management cluster",
    "start": "966720",
    "end": "973120"
  },
  {
    "text": "for all of the other clusters so what cluster cuttle move does is it um pauses",
    "start": "973120",
    "end": "980000"
  },
  {
    "text": "all of the resources on this initial kubernetes cluster and uh after we've installed one cluster",
    "start": "980000",
    "end": "987199"
  },
  {
    "text": "cutter in it on the aws cluster which is where i'm going to move everything to",
    "start": "987199",
    "end": "992560"
  },
  {
    "text": "you can then run classical move and it basically deletes the objects",
    "start": "992560",
    "end": "998480"
  },
  {
    "text": "from the old cluster and puts them into the new one in this paused state and then unpauses",
    "start": "998480",
    "end": "1005360"
  },
  {
    "text": "it so then those then you can continue with ongoing management finally you just want to show how you",
    "start": "1005360",
    "end": "1011519"
  },
  {
    "text": "might want to do development cluster api so we're big fans of using tilt in development uh still allows us to",
    "start": "1011519",
    "end": "1018079"
  },
  {
    "text": "essentially do hot work hot reloading as uh as you write code using cluster api",
    "start": "1018079",
    "end": "1024160"
  },
  {
    "text": "so there's a json file that you can see in this vs code that you will need to set up all the",
    "start": "1024160",
    "end": "1029839"
  },
  {
    "text": "instructions are on the cluster api website um and then what just do is just change a",
    "start": "1029839",
    "end": "1037438"
  },
  {
    "text": "line of code you have you can view all the logs in the browser as well so you can just click on each of the controllers that",
    "start": "1037439",
    "end": "1043280"
  },
  {
    "text": "you're working on and in this case i'm just going to change one log line and you can see",
    "start": "1043280",
    "end": "1048558"
  },
  {
    "text": "that the um controller got rebuilt and has started again so this is um",
    "start": "1048559",
    "end": "1055919"
  },
  {
    "text": "most the sort of plus api developers are using this um tilt's great tool and for kind of",
    "start": "1055919",
    "end": "1061679"
  },
  {
    "text": "development and we use it extensively in cluster api um so with that uh let's talk about what",
    "start": "1061679",
    "end": "1069520"
  },
  {
    "text": "we've been working on so we've just done some new releases of cluster api",
    "start": "1069520",
    "end": "1074960"
  },
  {
    "text": "um so in this 0.3 series we've done quite a lot of work one of",
    "start": "1074960",
    "end": "1081120"
  },
  {
    "text": "the things we just introduced was the control plane management which i just demoed a moment ago so this is really about making sure that",
    "start": "1081120",
    "end": "1088400"
  },
  {
    "text": "we can do day two operations of clusters managed by cluster api in terms of being",
    "start": "1088400",
    "end": "1094960"
  },
  {
    "text": "able to do upgrades uh remediate um control planes being able to scale",
    "start": "1094960",
    "end": "1101440"
  },
  {
    "text": "them up so maybe started off with a demo one node cluster a one node control",
    "start": "1101440",
    "end": "1108960"
  },
  {
    "text": "plane cluster but it's actually running production workloads make it high availability that's what the control plane controller",
    "start": "1108960",
    "end": "1115120"
  },
  {
    "text": "can do the machine pools um crd",
    "start": "1115120",
    "end": "1120240"
  },
  {
    "text": "is a new thing that was added in 0.3 it's implemented for azure right now with aws",
    "start": "1120240",
    "end": "1126320"
  },
  {
    "text": "is coming soon and that's where you have cloud providers that provide their own constructs for sets of",
    "start": "1126320",
    "end": "1133919"
  },
  {
    "text": "machines and provide more enhanced functionality through those such as in the case of azure vm skill sets or",
    "start": "1133919",
    "end": "1141120"
  },
  {
    "text": "aws auto scanning groups they can be used as a native construct within cluster api",
    "start": "1141120",
    "end": "1147200"
  },
  {
    "text": "machine health checks allow you to give say plug them on the model for a",
    "start": "1147200",
    "end": "1153840"
  },
  {
    "text": "remediating machine so you use it you can use any tool that you're using such as prometheus or a node problem",
    "start": "1153840",
    "end": "1161760"
  },
  {
    "text": "detector to mark nodes as unhealthy and then that can act as a signal for cluster api to do some sort",
    "start": "1161760",
    "end": "1168480"
  },
  {
    "text": "of remediation uh we've done a lot of work on testing so we've built a if you're writing your",
    "start": "1168480",
    "end": "1174080"
  },
  {
    "text": "own um provider or you're working on other bits of kubernetes such as csi",
    "start": "1174080",
    "end": "1181440"
  },
  {
    "text": "or cloud provider integrations elsewhere then the cluster api test framework is",
    "start": "1181440",
    "end": "1188000"
  },
  {
    "text": "um provides some really nice helpers and abstractions for you to",
    "start": "1188000",
    "end": "1193200"
  },
  {
    "text": "just start a kubernetes cluster run some tests on that class that you created tear it down again and just run things",
    "start": "1193200",
    "end": "1200640"
  },
  {
    "text": "like conformance checks etc failure domains so this is introducing the concept particularly for the",
    "start": "1200640",
    "end": "1206640"
  },
  {
    "text": "kubernetes and patrol playing around what are the different failure domains within a",
    "start": "1206640",
    "end": "1211679"
  },
  {
    "text": "given infrastructure provider it's a way to give that information to the core",
    "start": "1211679",
    "end": "1217840"
  },
  {
    "text": "controllers such as curvating control plane and machine set to be able to distribute um",
    "start": "1217840",
    "end": "1224080"
  },
  {
    "text": "instances across those various failure domains uh cluster cattle plus control plus the",
    "start": "1224080",
    "end": "1229919"
  },
  {
    "text": "ctl um that got a complete rewrite in 0.3 um it kind of disappeared for a while",
    "start": "1229919",
    "end": "1236559"
  },
  {
    "text": "with uh 7.2 come back again as this and that's really that utility i was showing you",
    "start": "1236559",
    "end": "1241760"
  },
  {
    "text": "earlier so the ability to install infrastructure providers",
    "start": "1241760",
    "end": "1246880"
  },
  {
    "text": "the latest releases without having to deal with lots of walls of yaml",
    "start": "1246880",
    "end": "1252000"
  },
  {
    "text": "um that's what cluster ctl is all about conditions uh why are if you've worked with nodes",
    "start": "1252000",
    "end": "1259600"
  },
  {
    "text": "or pods and you've seen conditions on those objects we've now introduced them into the cluster api resources as well",
    "start": "1259600",
    "end": "1267120"
  },
  {
    "text": "this should really help people who want to work with those resources more programmatically",
    "start": "1267120",
    "end": "1273120"
  },
  {
    "text": "it gives a much cleaner interface in terms of introspecting what is really happening inside a given cluster",
    "start": "1273120",
    "end": "1279280"
  },
  {
    "text": "and finally we've got give initial cluster auto scaling support uh so this work is ongoing within the",
    "start": "1279280",
    "end": "1287120"
  },
  {
    "text": "cluster autoscaling project right now so it will be able to control machine sets in cluster api",
    "start": "1287120",
    "end": "1295039"
  },
  {
    "text": "generically so it doesn't need to have any infrastructure specific information and you'll run this as",
    "start": "1295039",
    "end": "1302640"
  },
  {
    "text": "one part of cluster autistic new management plus at one point in workload cluster and outdoor testing will be able to",
    "start": "1302640",
    "end": "1309039"
  },
  {
    "text": "control um this site will be able to scale up and down a clusters managed by cluster api um",
    "start": "1309039",
    "end": "1316480"
  },
  {
    "text": "so given that like there's what's next so we would we're hoping to reach",
    "start": "1316480",
    "end": "1323200"
  },
  {
    "text": "beta status that and by the beginning next year so we're going to be working on",
    "start": "1323200",
    "end": "1328640"
  },
  {
    "text": "stabilizing cluster api and make sure it meets the needs of everyone who wants the use",
    "start": "1328640",
    "end": "1334720"
  },
  {
    "text": "cluster api uh ongoing ux improvement so we uh did a big rewrite of uh cluster",
    "start": "1334720",
    "end": "1342880"
  },
  {
    "text": "ctl um we want to improve that um not everyone wants to use um",
    "start": "1342880",
    "end": "1349679"
  },
  {
    "text": "cluster ctrl so how can we improve that experience overall um better management cluster add-ons so",
    "start": "1349679",
    "end": "1356640"
  },
  {
    "text": "things like cni's or those sort of core dns or coupoxy",
    "start": "1356640",
    "end": "1362960"
  },
  {
    "text": "those core components that every cluster needs um we introduced something called cluster resource set",
    "start": "1362960",
    "end": "1368960"
  },
  {
    "text": "uh experimentally so that's the ability to as soon as you create cluster apply a",
    "start": "1368960",
    "end": "1374480"
  },
  {
    "text": "set of manifest to um two clusters based on some uh labels that you've seen on them",
    "start": "1374480",
    "end": "1381840"
  },
  {
    "text": "detections and machine failures prior to cluster join so one of the problems we have now is uh we",
    "start": "1381840",
    "end": "1387520"
  },
  {
    "text": "only really know the status of the machine once it's joined a cluster but what happened how do we know what's happened when uh",
    "start": "1387520",
    "end": "1394159"
  },
  {
    "text": "when it hasn't joined that cluster yet um can we find out where that thing went wrong",
    "start": "1394159",
    "end": "1399440"
  },
  {
    "text": "uh so we're going to be doing some experiments some research into finding out how we can do that through the various",
    "start": "1399440",
    "end": "1406000"
  },
  {
    "text": "infrastructure apis that are given to us load balance providers so this is",
    "start": "1406000",
    "end": "1412799"
  },
  {
    "text": "definitely nothing to do with kubernetes services or service type load balancer",
    "start": "1412799",
    "end": "1418080"
  },
  {
    "text": "i'm talking purely in terms of load balance of the kubernetes api server so before you've even got a cluster up you",
    "start": "1418080",
    "end": "1424240"
  },
  {
    "text": "want a load balancer to those various control plane instances uh so we um we're looking at a plugable",
    "start": "1424240",
    "end": "1431679"
  },
  {
    "text": "model to be able to do that and that's really important for the on-premise environment where you don't have don't typically have those um",
    "start": "1431679",
    "end": "1439120"
  },
  {
    "text": "cloud-provided constructs like the elastic load balancer etc um moving machine pool out of",
    "start": "1439120",
    "end": "1445440"
  },
  {
    "text": "experimental so complete the implementation for aws primarily and make sure that",
    "start": "1445440",
    "end": "1452960"
  },
  {
    "text": "that abstraction works across the various different types of public clouds support for windows nodes so there's uh",
    "start": "1452960",
    "end": "1459840"
  },
  {
    "text": "that's going to start off with um one of our system projects called image builder",
    "start": "1459840",
    "end": "1464960"
  },
  {
    "text": "which provides is provides mechanisms to build images for the various linux",
    "start": "1464960",
    "end": "1470240"
  },
  {
    "text": "distributions adding support from windows to that and making sure that we have a windows",
    "start": "1470240",
    "end": "1475919"
  },
  {
    "text": "specific bootstrap provider um that can uh bootstrap windows nodes essentially",
    "start": "1475919",
    "end": "1481600"
  },
  {
    "text": "and then finally for particularly for aws or we're interested in how do you deal",
    "start": "1481600",
    "end": "1487039"
  },
  {
    "text": "with multi-tenancy so um with aws and as you're in any large organization you're not just dealing",
    "start": "1487039",
    "end": "1493440"
  },
  {
    "text": "with one aws or azure account it's going to be lots of different accounts and subscriptions and",
    "start": "1493440",
    "end": "1500240"
  },
  {
    "text": "uh you want to provide a sing single place where people uh where teams can manage their clusters",
    "start": "1500240",
    "end": "1507520"
  },
  {
    "text": "so we need to provide native ways to be able to choose which accounts and subscriptions with",
    "start": "1507520",
    "end": "1513440"
  },
  {
    "text": "with the right levels of security around them so that's what we'll be working on next so if you'd like to get involved",
    "start": "1513440",
    "end": "1520240"
  },
  {
    "text": "uh then you can join us in our weekly meeting which happens every wednesday at",
    "start": "1520240",
    "end": "1526080"
  },
  {
    "text": "10 a.m uh pacific time that's five uh 1700 utc um",
    "start": "1526080",
    "end": "1533679"
  },
  {
    "text": "and not only this is just for the main cluster api meeting and what you'll find if you go to that link you'll find that",
    "start": "1533679",
    "end": "1541039"
  },
  {
    "text": "each provider um has their own meeting specific to",
    "start": "1541039",
    "end": "1546080"
  },
  {
    "text": "those concerns um so uh uh aws azure vsphere openstack etc um so",
    "start": "1546080",
    "end": "1553679"
  },
  {
    "text": "go and take a look and see what takes your fancy please join us um with that i think",
    "start": "1553679",
    "end": "1561200"
  },
  {
    "text": "we're done",
    "start": "1561200",
    "end": "1563840"
  },
  {
    "text": "thanks",
    "start": "1568840",
    "end": "1571840"
  },
  {
    "text": "all right that was a lot of information i'm sure a lot of people have questions um so is here on the phone as well",
    "start": "1576720",
    "end": "1584720"
  },
  {
    "text": "um and we're gonna try to go through as many questions as we can but there are a lot so if we can't get",
    "start": "1584720",
    "end": "1591039"
  },
  {
    "text": "through all of them we're happy to continue the conversation in slack um and you can find us on there's a thread",
    "start": "1591039",
    "end": "1597360"
  },
  {
    "text": "already i think in the kubecon slack uh since you have slack under",
    "start": "1597360",
    "end": "1602799"
  },
  {
    "text": "maintainers the maintainers track um okay so",
    "start": "1602799",
    "end": "1610480"
  },
  {
    "text": "i can take the first one um can cluster api detect and reconcile node issues",
    "start": "1610480",
    "end": "1616080"
  },
  {
    "text": "such as dead machines uh yes so that's where you use a machine health check so you can define a machine health check",
    "start": "1616080",
    "end": "1622720"
  },
  {
    "text": "on your in your template and that will have conditions under which the node is considered",
    "start": "1622720",
    "end": "1629200"
  },
  {
    "text": "unhealthy and when those conditions are met cluster api we'll go ahead and get rid of that machine and replace it",
    "start": "1629200",
    "end": "1635760"
  },
  {
    "text": "with a brand new one uh neither would you like to take the",
    "start": "1635760",
    "end": "1641919"
  },
  {
    "text": "next one yeah sure so the question is how can you",
    "start": "1641919",
    "end": "1647440"
  },
  {
    "text": "use cluster api to manage clusters running in private networks and other things",
    "start": "1647440",
    "end": "1652720"
  },
  {
    "text": "it's about using plus api inaudible api",
    "start": "1652720",
    "end": "1661120"
  },
  {
    "text": "is doing a lot to interrogate the status of clusters we do need to be able to connect to the",
    "start": "1661120",
    "end": "1668080"
  },
  {
    "text": "control plane endpoint so if you're running uh private vpc you are going to have to provide",
    "start": "1668080",
    "end": "1674159"
  },
  {
    "text": "some sort of connectivity between them so whether that's using vpc peering",
    "start": "1674159",
    "end": "1680720"
  },
  {
    "text": "direct connect vpns etc one of the things that we're looking at",
    "start": "1680720",
    "end": "1686799"
  },
  {
    "text": "in the future is there's an upcoming project called aws um controllers for communities",
    "start": "1686880",
    "end": "1693600"
  },
  {
    "text": "which can be managed by aws which will allow to consume arbitrary aws resources directly",
    "start": "1693600",
    "end": "1702480"
  },
  {
    "text": "in the kinematics way that might provide a mechanism to be able to automate some of that vpc peering",
    "start": "1702480",
    "end": "1708480"
  },
  {
    "text": "it's a bit hard to put all the different permutations of networking directly into because they've",
    "start": "1708480",
    "end": "1713679"
  },
  {
    "text": "applied aws uh so uh today you can build different",
    "start": "1713679",
    "end": "1719440"
  },
  {
    "text": "clusters uh you will need to do use some other automation to sort out the networking between private",
    "start": "1719440",
    "end": "1725520"
  },
  {
    "text": "networks thanks uh okay i can take one",
    "start": "1725520",
    "end": "1734000"
  },
  {
    "text": "um is there tooling for the bootstrap process of self-managed cluster",
    "start": "1734000",
    "end": "1740720"
  },
  {
    "text": "um yes and no so there is uh some uh there are uh some commands in cluster",
    "start": "1740720",
    "end": "1747200"
  },
  {
    "text": "cuddle uh cluster cuddle is the tool that nader was using in the demo which is the cli tool that was built to",
    "start": "1747200",
    "end": "1753600"
  },
  {
    "text": "facilitate the management of the cluster api management cluster and that does have an ability to move",
    "start": "1753600",
    "end": "1761679"
  },
  {
    "text": "all your resources to make in essentially any cluster self-managed",
    "start": "1761679",
    "end": "1766720"
  },
  {
    "text": "so if you build a bootstrap cluster and then you build a target cluster like a cluster api built",
    "start": "1766720",
    "end": "1772559"
  },
  {
    "text": "cluster with that target cluster then you can then use cluster cuddle move to move",
    "start": "1772559",
    "end": "1777919"
  },
  {
    "text": "all the cluster api resources from that original bootstrap cluster to the target cluster so then that",
    "start": "1777919",
    "end": "1785520"
  },
  {
    "text": "target cluster becomes self-managed um i know there's also talks there's an",
    "start": "1785520",
    "end": "1791039"
  },
  {
    "text": "open issue i don't remember the number of the top of my head but um about having some declarative",
    "start": "1791039",
    "end": "1796159"
  },
  {
    "text": "management of the cluster itself so you can have a self-managed cluster from zero to",
    "start": "1796159",
    "end": "1802080"
  },
  {
    "text": "self-managed cluster um so that's still in the talks and i would expect also any platform that builds on top of",
    "start": "1802080",
    "end": "1808720"
  },
  {
    "text": "cluster api um to be able to automate that cluster api is really a building block so you can do a",
    "start": "1808720",
    "end": "1815120"
  },
  {
    "text": "lot around it",
    "start": "1815120",
    "end": "1817840"
  },
  {
    "text": "yeah and that means quite nicely into another question here around um what would be the benefit of cluster",
    "start": "1820840",
    "end": "1826880"
  },
  {
    "text": "api are we using uh providers such as uks cuttle uh so actually there's",
    "start": "1826880",
    "end": "1832480"
  },
  {
    "text": "work uh going on right now to bring eps support to cluster api client aws and",
    "start": "1832480",
    "end": "1837520"
  },
  {
    "text": "one of the reasons uh that's happening is to allow that sort of github model to manage uh class clusters for people",
    "start": "1837520",
    "end": "1846159"
  },
  {
    "text": "who are using eks today so using ets cuttle to manage clusters right now",
    "start": "1846159",
    "end": "1851760"
  },
  {
    "text": "you want to do that declaratively using cluster api hopefully by the end of the end of the",
    "start": "1851760",
    "end": "1856880"
  },
  {
    "text": "month um and related to that if you're um to bmp that bootstrap cluster that",
    "start": "1856880",
    "end": "1865279"
  },
  {
    "text": "you're creating using cluster customer on the timeline that's really about using that clutter copy move to make that a more permanent",
    "start": "1865279",
    "end": "1872640"
  },
  {
    "text": "self-managing management cluster then from there you can drive all your githubs for all the other classes that",
    "start": "1872640",
    "end": "1880000"
  },
  {
    "text": "you want to manage yeah that's a great point um",
    "start": "1880000",
    "end": "1887039"
  },
  {
    "text": "so how can you get involved in the development of cluster api i love this question",
    "start": "1887039",
    "end": "1892320"
  },
  {
    "text": "um so we'd love for you to get involved and i think the best way to start is to join the different communication",
    "start": "1892320",
    "end": "1898880"
  },
  {
    "text": "channels um so you'll want to join the kubernetes slack if you're not already in it and",
    "start": "1898880",
    "end": "1903919"
  },
  {
    "text": "there is a dedicated cluster api channel and there are also channels for each provider so if you're interested in a",
    "start": "1903919",
    "end": "1909679"
  },
  {
    "text": "specific area let's say azure um you might want to join the cluster api dash",
    "start": "1909679",
    "end": "1915039"
  },
  {
    "text": "azure channel and there's one for every provider and then you should also join the",
    "start": "1915039",
    "end": "1922159"
  },
  {
    "text": "cluster lifecycle mailing list which will give you access to all the documents including",
    "start": "1922159",
    "end": "1928480"
  },
  {
    "text": "the meeting notes and everything um there are links for that on the uh",
    "start": "1928480",
    "end": "1934000"
  },
  {
    "text": "uh sorry kubernetes community repo uh if you go under single cluster life cycle and um also as nadir",
    "start": "1934000",
    "end": "1941120"
  },
  {
    "text": "mentioned earlier we have a meeting every week so that's a really good way to like start getting to to get to know the",
    "start": "1941120",
    "end": "1947519"
  },
  {
    "text": "community and um you know you can just join and listen uh if you're uh just want to learn more or like you",
    "start": "1947519",
    "end": "1953760"
  },
  {
    "text": "can come and ask any questions you have um and that happens every wednesday at 10 a.m pacific time",
    "start": "1953760",
    "end": "1959919"
  },
  {
    "text": "um we're actually not going to do it today i think because of kubecon but the next one would be next week a",
    "start": "1959919",
    "end": "1966000"
  },
  {
    "text": "week from now um on wednesday so look forward to seeing you there um",
    "start": "1966000",
    "end": "1971200"
  },
  {
    "text": "and then we also have good first issues on the repo so that's also a good way on any cluster api",
    "start": "1971200",
    "end": "1977120"
  },
  {
    "text": "people whether it's a provider repo or the main cluster api repo so if you",
    "start": "1977120",
    "end": "1982320"
  },
  {
    "text": "filter github issues with labels you can look at the good first issue",
    "start": "1982320",
    "end": "1987360"
  },
  {
    "text": "labels and those are usually well-scoped small issues that are good to get started with",
    "start": "1987360",
    "end": "1993919"
  },
  {
    "text": "uh i don't know if maybe you have anything to add to that",
    "start": "1993919",
    "end": "1998320"
  },
  {
    "text": "uh i think it's fun to find a question about how the plus api relate to other projects uh such as",
    "start": "1999840",
    "end": "2005279"
  },
  {
    "text": "metal cube or ironic or uh tanzania so these all um plus a guy",
    "start": "2005279",
    "end": "2010960"
  },
  {
    "text": "is very much a building block and we fully expect people to build",
    "start": "2010960",
    "end": "2016799"
  },
  {
    "text": "other things on top of it and metal cube is an example of using plus api to provision to bare metal uh",
    "start": "2016799",
    "end": "2023279"
  },
  {
    "text": "tanzooz enrolled in provisioning using clusterize provision 2 vsphere",
    "start": "2023279",
    "end": "2028960"
  },
  {
    "text": "so it's very much a fundamental building off we just want to solve the problem about deploying kubernetes once and for all",
    "start": "2028960",
    "end": "2035760"
  },
  {
    "text": "we've been doing it for four years let's let's just join together do it",
    "start": "2035760",
    "end": "2041360"
  },
  {
    "text": "well together and everyone can benefit",
    "start": "2041360",
    "end": "2047840"
  },
  {
    "text": "yeah um i'll squeeze in one more answer does it support eks in aws um",
    "start": "2048320",
    "end": "2054878"
  },
  {
    "text": "so there is an in progress pr actually to add support for building aks clusters um",
    "start": "2054879",
    "end": "2062398"
  },
  {
    "text": "and that's something that's come up a lot recently like how do i build managed clusters with cluster api",
    "start": "2062399",
    "end": "2067679"
  },
  {
    "text": "um it is still like very experimental and very much in the development process so if you'd like to help shape it this",
    "start": "2067679",
    "end": "2074000"
  },
  {
    "text": "is a great time um you can find the pr in the kappa repo which is cluster api",
    "start": "2074000",
    "end": "2079040"
  },
  {
    "text": "aws um and then we also have done something on the azure side there's an experimental uh",
    "start": "2079040",
    "end": "2085280"
  },
  {
    "text": "feature available for develop for deploying sorry aks clusters so that's already available in",
    "start": "2085280",
    "end": "2090480"
  },
  {
    "text": "the latest release under the experimental folder so check that out",
    "start": "2090480",
    "end": "2096078"
  },
  {
    "text": "uh all right i think that's our timely there",
    "start": "2096320",
    "end": "2103839"
  },
  {
    "text": "um yeah thank you for joining um we're happy to continue the conversation in",
    "start": "2104320",
    "end": "2109520"
  },
  {
    "text": "slack um sorry we didn't get to get to get to all the questions but um i'll see you all in flag thanks",
    "start": "2109520",
    "end": "2119359"
  }
]