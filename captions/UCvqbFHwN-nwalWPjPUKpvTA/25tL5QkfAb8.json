[
  {
    "start": "0",
    "end": "66000"
  },
  {
    "text": "okay I think we can start so um dog you mentioned that you know someone",
    "start": "1939",
    "end": "11759"
  },
  {
    "text": "from IBM is going to so let's um so that",
    "start": "11759",
    "end": "23519"
  },
  {
    "text": "goes through this agenda I think first I think that they were going to do the presentation and then we are going to go",
    "start": "23519",
    "end": "30630"
  },
  {
    "text": "through the review comments I see that now here are some video comments which",
    "start": "30630",
    "end": "35730"
  },
  {
    "text": "we can discuss okay so let's first start with the presentation um I'm going to",
    "start": "35730",
    "end": "41040"
  },
  {
    "text": "start first to talk about function graph let's share my screen okay here's a",
    "start": "41040",
    "end": "49559"
  },
  {
    "text": "meeting minutes so maybe someone can",
    "start": "49559",
    "end": "54690"
  },
  {
    "text": "help right I'm gonna write the meeting minute but if someone else can help right here oh good um let me can you see",
    "start": "54690",
    "end": "67740"
  },
  {
    "start": "66000",
    "end": "167000"
  },
  {
    "text": "my slide yep okay so in function model",
    "start": "67740",
    "end": "72869"
  },
  {
    "text": "so it's like is this function work flow is naturally mouth as a state machine there are three elements in the function",
    "start": "72869",
    "end": "80340"
  },
  {
    "text": "graph so why is the list of event triggers that's like the crowd events",
    "start": "80340",
    "end": "86820"
  },
  {
    "text": "reason could be storage even HTTP event or any other media stream even you know",
    "start": "86820",
    "end": "91950"
  },
  {
    "text": "database access event email event code repo update any event okay this is just",
    "start": "91950",
    "end": "98100"
  },
  {
    "text": "like some example and then besides event trigger there will be some list of states so we have been no five on States",
    "start": "98100",
    "end": "105600"
  },
  {
    "text": "banker event state operation states which state the late state and state",
    "start": "105600",
    "end": "110790"
  },
  {
    "text": "yeah I'm going to sue them later I mean in more detail in later slides and then",
    "start": "110790",
    "end": "116070"
  },
  {
    "text": "there are also functions or even protections or social is the state resemble in the event state if my event",
    "start": "116070",
    "end": "123659"
  },
  {
    "text": "comes it's going to trigger some function and this function will you know in the function you know it could like",
    "start": "123659",
    "end": "130259"
  },
  {
    "text": "some primitive say you know it's parallel execution of these functions or a sequential exclusion is from cheap",
    "start": "130259",
    "end": "137100"
  },
  {
    "text": "execution and then there will be could be retry mechanism if the function fails what's a retry mechanism and they also",
    "start": "137100",
    "end": "143910"
  },
  {
    "text": "like some information passing from them from you know between the functions of from the previous function to the next",
    "start": "143910",
    "end": "151740"
  },
  {
    "text": "function so these are the three key elements of the what role so on the",
    "start": "151740",
    "end": "159990"
  },
  {
    "text": "right side is just a diagram of that you know that workflow just example diagram",
    "start": "159990",
    "end": "166530"
  },
  {
    "text": "so um let's go to this versus see the list of states we have you know as",
    "start": "166530",
    "end": "175020"
  },
  {
    "start": "167000",
    "end": "306000"
  },
  {
    "text": "mentioned before we have five states event States is used to wait for events",
    "start": "175020",
    "end": "181410"
  },
  {
    "text": "from event sources so this event source could be an event source as mentioned",
    "start": "181410",
    "end": "186959"
  },
  {
    "text": "before and then you know when that event comes it's going to invoke one or more",
    "start": "186959",
    "end": "193290"
  },
  {
    "text": "functions to run either sequence or in parallel so it could be the event could",
    "start": "193290",
    "end": "199860"
  },
  {
    "text": "be multiple but not just one event could be and or relationship of this event so could be say you know when event one",
    "start": "199860",
    "end": "206970"
  },
  {
    "text": "counts or event two comes then you know this function need to be executed or it",
    "start": "206970",
    "end": "212970"
  },
  {
    "text": "could be you're on the USA when both event cups and that functional are specific changes sugar so that's the",
    "start": "212970",
    "end": "219420"
  },
  {
    "text": "event state and then this operation state so operate the difference between event state operation state is that you",
    "start": "219420",
    "end": "225510"
  },
  {
    "text": "know heuristic does not need to be triggered by any effect so when it goes to that step then it just automatically",
    "start": "225510",
    "end": "233400"
  },
  {
    "text": "one or more functions were wrong either in sequence or in parallel but without",
    "start": "233400",
    "end": "238920"
  },
  {
    "text": "waiting for any event the other part are the same tool events the only difference is is not triggered those functions are",
    "start": "238920",
    "end": "246660"
  },
  {
    "text": "not triggered by any event and then there's a switch state this state permits the transition to other states",
    "start": "246660",
    "end": "254000"
  },
  {
    "text": "you know based on different conditions for example could be you know the previous steps function execution result",
    "start": "254000",
    "end": "261180"
  },
  {
    "text": "you know different function execution result in the previous step previous step or previous",
    "start": "261180",
    "end": "266550"
  },
  {
    "text": "date or trigger you know a brunch in two different next dates or could be you",
    "start": "266550",
    "end": "271560"
  },
  {
    "text": "know the other some other condition too um and then it's at the race day this is",
    "start": "271560",
    "end": "277860"
  },
  {
    "text": "just uh you know causes the work prosecution to delay for a specific duration or until a specific time or",
    "start": "277860",
    "end": "284159"
  },
  {
    "text": "date this is very simple this day race day and state this determines a workflow",
    "start": "284159",
    "end": "289229"
  },
  {
    "text": "with some either failure or success status so when the wardrobe ends is",
    "start": "289229",
    "end": "295500"
  },
  {
    "text": "going to go to the end state it could end with successful execution of the",
    "start": "295500",
    "end": "302069"
  },
  {
    "text": "workflow always a failure execution of the workflow so these are the states and then these are the event children so",
    "start": "302069",
    "end": "309120"
  },
  {
    "text": "event triggers we have three say parameters Y is the event source it",
    "start": "309120",
    "end": "316050"
  },
  {
    "text": "could be the crowd you know could be any event source this is same as a cloudy event source and there will be an event",
    "start": "316050",
    "end": "322469"
  },
  {
    "text": "ID and then will be the filter apply to the to the crowd event to get the",
    "start": "322469",
    "end": "329520"
  },
  {
    "text": "required information which you know will be passed to the next us which will be",
    "start": "329520",
    "end": "334830"
  },
  {
    "text": "part would be passed to the function okay so this is filter on the payload or on the could young pillows or any other",
    "start": "334830",
    "end": "341729"
  },
  {
    "text": "you know metadata information on the crowd events and then after the filter",
    "start": "341729",
    "end": "347699"
  },
  {
    "text": "the information will be passed to the function or could be passed to the next state so the trigger name is the name of",
    "start": "347699",
    "end": "355080"
  },
  {
    "text": "the events and this main will be used by the other expression in the event state",
    "start": "355080",
    "end": "361440"
  },
  {
    "text": "so in the event state and when we say okay even one Orkut event for example",
    "start": "361440",
    "end": "367560"
  },
  {
    "text": "like motion event so that's the event name that even name is defined in here",
    "start": "367560",
    "end": "372659"
  },
  {
    "text": "this is a even a trigger name and then the other information we decide in the event itself so when we go to the event",
    "start": "372659",
    "end": "380430"
  },
  {
    "text": "state the events that it does not deal with the detail of the event it only reference the event name and then yeah I",
    "start": "380430",
    "end": "391590"
  },
  {
    "text": "think that that's about it you know the future I already mention about that different ideas account event ID",
    "start": "391590",
    "end": "399039"
  },
  {
    "text": "Cathy just a quick question the filter does that operate just on the cloud event properties or can it also filter",
    "start": "399039",
    "end": "405550"
  },
  {
    "text": "information within data yeah anyway the date it could be both okay so a function",
    "start": "405550",
    "end": "415409"
  },
  {
    "start": "411000",
    "end": "757000"
  },
  {
    "text": "okay so event so now I'm going to go through the it easy man so for the event",
    "start": "415409",
    "end": "420939"
  },
  {
    "text": "state we're going to the you know this dates name there will be a time so for this type even state the type will be",
    "start": "420939",
    "end": "427300"
  },
  {
    "text": "event if it's a operational state the type will be let me go to the next one",
    "start": "427300",
    "end": "433449"
  },
  {
    "text": "so then the type you see this this parameter this type will be operation and then for the switch state the type",
    "start": "433449",
    "end": "441039"
  },
  {
    "text": "will be no not this one the type will be switch so let me go back so just this",
    "start": "441039",
    "end": "450520"
  },
  {
    "text": "type just may say what kind of state it is we have five different types of state and then the start putting mean that",
    "start": "450520",
    "end": "459099"
  },
  {
    "text": "with especially that this is a starter state or is a intermediate state so if",
    "start": "459099",
    "end": "464889"
  },
  {
    "text": "it's a start state this will be set to true so the workflow could start with with the Union state or could start with",
    "start": "464889",
    "end": "471309"
  },
  {
    "text": "the operation state it could be onion except the end state it could start with a new state and then so for the event",
    "start": "471309",
    "end": "478839"
  },
  {
    "text": "state a key part is that you know because this event states satisfied what you when triggers what function at that",
    "start": "478839",
    "end": "486339"
  },
  {
    "text": "specific step so we have we were defined what events what you got that function",
    "start": "486339",
    "end": "493149"
  },
  {
    "text": "so here there's a given expression it's a boolean expression of the events and then there's a action mode which defines",
    "start": "493149",
    "end": "501099"
  },
  {
    "text": "the function basically is a function mode is a synchronous or asynchronous the function so if there are multiple",
    "start": "501099",
    "end": "507399"
  },
  {
    "text": "functions we can see these actions means the functions the function you know there will be it could be array of",
    "start": "507399",
    "end": "513729"
  },
  {
    "text": "functions so if other like more than one functions are they going to execute it in sequence or in parallel this is",
    "start": "513729",
    "end": "520510"
  },
  {
    "text": "defined in the action mode and then of course will be the next state which means after this event state function",
    "start": "520510",
    "end": "526300"
  },
  {
    "text": "execution completes what is the next state to transition to okay this is a human state and then you",
    "start": "526300",
    "end": "535060"
  },
  {
    "text": "know go to the next operations day so the only difference between this and the event state is that it doesn't need to",
    "start": "535060",
    "end": "542319"
  },
  {
    "text": "even trigger so there's no definition of the events of the event trigger here's a typist operation start again it could be",
    "start": "542319",
    "end": "549370"
  },
  {
    "text": "a it could be the start state so if he's truly is a start state otherwise it's not the start state and the is same",
    "start": "549370",
    "end": "556810"
  },
  {
    "text": "thing as before there's action mode which is synchronous asynchronous and then the actions is a sequence of",
    "start": "556810",
    "end": "562089"
  },
  {
    "text": "running as a list of functions that would be that would be that will run in",
    "start": "562089",
    "end": "567430"
  },
  {
    "text": "this state and then will be in the next state and here is remember in the",
    "start": "567430",
    "end": "573430"
  },
  {
    "text": "previous two state with this event state or action state we have this action definition so this is a function",
    "start": "573430",
    "end": "580509"
  },
  {
    "text": "definition you know there's a action mode which is synchronous asynchronous",
    "start": "580509",
    "end": "585699"
  },
  {
    "text": "which defines whether these two or more function will execute in sequence way in",
    "start": "585699",
    "end": "592029"
  },
  {
    "text": "synchronous or asynchronous mode and then this action definition defines the detail actions so here is the action",
    "start": "592029",
    "end": "600670"
  },
  {
    "text": "emanation we have the function name that's based in fact this is again as a action different could be array of",
    "start": "600670",
    "end": "606730"
  },
  {
    "text": "action definition array of actions so each action was specify what's the function name what is a timeout value",
    "start": "606730",
    "end": "613870"
  },
  {
    "text": "and then what is the retry mechanism like you know when you match so when the",
    "start": "613870",
    "end": "620139"
  },
  {
    "text": "function returns something so mentioned result value which is you know when the functions result you match that result",
    "start": "620139",
    "end": "626290"
  },
  {
    "text": "and then what is entry try interval which is maximal retry and that was the next state for you to try to go to so",
    "start": "626290",
    "end": "638079"
  },
  {
    "text": "yeah that's that's about it and then the switch state is right you know it's like a switch you know so you match again",
    "start": "638079",
    "end": "645459"
  },
  {
    "text": "time to switch pudding this could be the start state and then Tracy's like you know what you do so that's where specify",
    "start": "645459",
    "end": "653170"
  },
  {
    "text": "so for example we got this okay this tries to depend on the different the",
    "start": "653170",
    "end": "659529"
  },
  {
    "text": "event um event data or event info or the function results information so",
    "start": "659529",
    "end": "667610"
  },
  {
    "text": "then we need to apply a filter this apart is basically like upon payload",
    "start": "667610",
    "end": "673220"
  },
  {
    "text": "Pass say which field will be used as a match to this value here there's a value",
    "start": "673220",
    "end": "679910"
  },
  {
    "text": "because you know for example if this event right it has a lot of information that even payload has a lot of",
    "start": "679910",
    "end": "685610"
  },
  {
    "text": "information or there many multiple event makes a deadly information so which field we are going to use to do the to",
    "start": "685610",
    "end": "692810"
  },
  {
    "text": "do the matching so this path specify that that that part and then the value",
    "start": "692810",
    "end": "699980"
  },
  {
    "text": "specify whether you're right you know what were you two to match so it matched so this trace is is a kind of record or",
    "start": "699980",
    "end": "706910"
  },
  {
    "text": "at least array right so therefore you match different module you're going to do this is a comparison operator for",
    "start": "706910",
    "end": "713990"
  },
  {
    "text": "example you say this value is equal to this value or larger than this value or smaller than this value and then you",
    "start": "713990",
    "end": "719360"
  },
  {
    "text": "match different Vario you're going to switch to different next state now of",
    "start": "719360",
    "end": "725330"
  },
  {
    "text": "course if you don't match anything then what's the next state what's up state to transition to so this is otherwise I",
    "start": "725330",
    "end": "732650"
  },
  {
    "text": "said you know there's a match and then go to the next store different next to state and then in the next state is",
    "start": "732650",
    "end": "738440"
  },
  {
    "text": "going to execute different functions that's about it it's just you know this",
    "start": "738440",
    "end": "745640"
  },
  {
    "text": "just way to model the workflow so different types of workflows can be",
    "start": "745640",
    "end": "752450"
  },
  {
    "text": "modeled using all these these events",
    "start": "752450",
    "end": "757960"
  },
  {
    "start": "757000",
    "end": "957000"
  },
  {
    "text": "come back to the original uses you know different space and then events so one",
    "start": "757960",
    "end": "765410"
  },
  {
    "text": "point which I you know I haven't got time to add it it is about the",
    "start": "765410",
    "end": "770690"
  },
  {
    "text": "correlation for example in the so here",
    "start": "770690",
    "end": "776360"
  },
  {
    "text": "there are multiple events right so when this event comes how we correlate you know this event 1 this is even one",
    "start": "776360",
    "end": "783020"
  },
  {
    "text": "instance and this event two instance or go to the same workflow instance so we",
    "start": "783020",
    "end": "788120"
  },
  {
    "text": "need a correlation and that can be defined at the very at the beginning of the workflow so um I didn't you don't",
    "start": "788120",
    "end": "795770"
  },
  {
    "text": "have time to put in this right here but if you go to the I can put that in",
    "start": "795770",
    "end": "802850"
  },
  {
    "text": "later that's about it any questions or",
    "start": "802850",
    "end": "807889"
  },
  {
    "text": "any anything which you think will not be able to support the workflow which we",
    "start": "807889",
    "end": "814339"
  },
  {
    "text": "identify in the use cases or the workflow functionality we I didn't find this back this is Rachel it seems like",
    "start": "814339",
    "end": "827839"
  },
  {
    "text": "it's a pretty thought-out way of like what you need it's like a great it's a",
    "start": "827839",
    "end": "834620"
  },
  {
    "text": "great statement of like what we need to be able to support and this seems like a very like it's a specific use case but",
    "start": "834620",
    "end": "842240"
  },
  {
    "text": "it's very generalizable like everyone will need to do these kinds of things so I appreciate you like walking us through",
    "start": "842240",
    "end": "848779"
  },
  {
    "text": "those look I'm just okay and the other",
    "start": "848779",
    "end": "881290"
  },
  {
    "text": "comments",
    "start": "881290",
    "end": "884290"
  },
  {
    "text": "okay I think you know probably in though you can yeah you can you know I'm gonna",
    "start": "889550",
    "end": "895829"
  },
  {
    "text": "do this right in some I mean some place and then you can go through it again and then you know um if I have any comments",
    "start": "895829",
    "end": "903510"
  },
  {
    "text": "I'm going to this inside the document too so you can feel free to post it we",
    "start": "903510",
    "end": "909480"
  },
  {
    "text": "have comes through I have gone through this you know we have gone through this on multiple times I think a noise",
    "start": "909480",
    "end": "914600"
  },
  {
    "text": "generic enough to support this or these functionality of course you know they're",
    "start": "914600",
    "end": "922019"
  },
  {
    "text": "still quite some there are some details right which you know is you know it's hard to",
    "start": "922019",
    "end": "928670"
  },
  {
    "text": "really dive into it goes through in I mean in this short time period but the",
    "start": "928670",
    "end": "935250"
  },
  {
    "text": "high-level idea is enough is here okay",
    "start": "935250",
    "end": "941310"
  },
  {
    "text": "if that's if no questions I'm gonna hand it over to um all of you and me I wanna",
    "start": "941310",
    "end": "951540"
  },
  {
    "text": "share something oh yeah few slides as well okay so let me stop sharing figure",
    "start": "951540",
    "end": "967880"
  },
  {
    "text": "yes can you see the full screen /i yes and can you hear me okay yeah okay",
    "start": "967880",
    "end": "976519"
  },
  {
    "text": "thanks so hi I'm with IBM Research and I'm an open news contributor and I'd",
    "start": "976519",
    "end": "983459"
  },
  {
    "text": "like to tell you yes a little bit about what we're doing with say workflow and open whisk as you notice we call them",
    "start": "983459",
    "end": "988860"
  },
  {
    "text": "composition that workflows and you see there are some some differences that will be clear after this talk so because",
    "start": "988860",
    "end": "996569"
  },
  {
    "text": "it's a bit different I before telling you what we do I'd like to tell us a little bit about why we do things we do",
    "start": "996569",
    "end": "1002930"
  },
  {
    "text": "them and so here's a list of goals or things we're trying to accomplish so of course we're trying to build wealth",
    "start": "1002930",
    "end": "1008720"
  },
  {
    "text": "flows or compositions of functions and there are several important things in our view when we do that you know",
    "start": "1008720",
    "end": "1014569"
  },
  {
    "text": "starting from you know maybe non-controversial ones to more controversial ones so if you're swinging",
    "start": "1014569",
    "end": "1020839"
  },
  {
    "text": "want things to be polyglot so we want functions to be expressed in you know many different programming languages we want compositions as well",
    "start": "1020839",
    "end": "1026688"
  },
  {
    "text": "to be to make it possible to express in many different programming languages we",
    "start": "1026689",
    "end": "1031850"
  },
  {
    "text": "care a lot about the costs the billing so what that means is we want to have an",
    "start": "1031850",
    "end": "1036920"
  },
  {
    "text": "architecture want to have a system and a programming model where the cost of the composition is pretty much the cost of",
    "start": "1036920",
    "end": "1042829"
  },
  {
    "text": "the thinking composed of course you know you're making some choices you're making some decisions but these are typically very very very cheap computations so",
    "start": "1042829",
    "end": "1050270"
  },
  {
    "text": "that should be reflected by the fact that we can run composition pretty much at the cost of the components one thing",
    "start": "1050270",
    "end": "1057260"
  },
  {
    "text": "that's really important to us is what I call substitution you can think of that as meaning that functions and",
    "start": "1057260",
    "end": "1063290"
  },
  {
    "text": "compositions should be totally interchangeable so for instance if I have a client application that calls",
    "start": "1063290",
    "end": "1068870"
  },
  {
    "text": "into a function if I later decide that this function is just too simple and I want to replace it by a composition I",
    "start": "1068870",
    "end": "1075230"
  },
  {
    "text": "can do that in my library the client doesn't have to change from the point of view of the client this is exact same",
    "start": "1075230",
    "end": "1080900"
  },
  {
    "text": "API to call a function or a composition in particular in open ways we can call",
    "start": "1080900",
    "end": "1086270"
  },
  {
    "text": "functions in a synchronous manner in a blocking manner where we say Co the function and wait for the result and get",
    "start": "1086270",
    "end": "1091370"
  },
  {
    "text": "the results so that should also work with compositions so that means for instance that doing just even driven",
    "start": "1091370",
    "end": "1097670"
  },
  {
    "text": "asynchronous composition doesn't quite get it for us another you know something",
    "start": "1097670",
    "end": "1102710"
  },
  {
    "text": "related to that is as a function runs in a system it doesn't have to know whether",
    "start": "1102710",
    "end": "1107900"
  },
  {
    "text": "it's just called by a client or call by an enclosing composition nothing changes",
    "start": "1107900",
    "end": "1112940"
  },
  {
    "text": "from the point of your function may be the function might want to know and you know do some things according to that",
    "start": "1112940",
    "end": "1119030"
  },
  {
    "text": "but it doesn't have to know in principle it just works now the the big thing",
    "start": "1119030",
    "end": "1124100"
  },
  {
    "text": "about our approach is that we very much believe in structured programming we think that you know in the sense that",
    "start": "1124100",
    "end": "1132050"
  },
  {
    "text": "you know describing for flows or composition as graphs as you know vertices and edges it's great for",
    "start": "1132050",
    "end": "1139010"
  },
  {
    "text": "discussing them it's great for displaying them it's great for documenting them but necessarily great",
    "start": "1139010",
    "end": "1144050"
  },
  {
    "text": "for actually programming complex behaviors in the same way we think that",
    "start": "1144050",
    "end": "1149390"
  },
  {
    "text": "you know ya know maybe a great configuration language but it's not a programming language so what we want to",
    "start": "1149390",
    "end": "1155750"
  },
  {
    "text": "do is to get something much closer to the traditional programming experience of composing functions in a you know",
    "start": "1155750",
    "end": "1161300"
  },
  {
    "text": "outside of the cloud in the traditional environment that means we want to do things like sequences conditional loops",
    "start": "1161300",
    "end": "1166820"
  },
  {
    "text": "we want to be able to have nested compositions compositions that calls into composition that goes into composition I want to do structure error",
    "start": "1166820",
    "end": "1173180"
  },
  {
    "text": "handling I'm putting parallelism in concrete see here as well because it's something we're working on also we have not",
    "start": "1173180",
    "end": "1178640"
  },
  {
    "text": "released this in open source so I'm not going to talk about it much but that's definite art of the part of the goals",
    "start": "1178640",
    "end": "1185350"
  },
  {
    "text": "why we're very opinionated about you know the way we think is the best way to",
    "start": "1185350",
    "end": "1190370"
  },
  {
    "text": "express compositions we think the runtime on the other end should not be open unity at all it should be",
    "start": "1190370",
    "end": "1196310"
  },
  {
    "text": "completely open minded it should you know contain as little as possible of the choices we have in program all it",
    "start": "1196310",
    "end": "1203210"
  },
  {
    "text": "should be as flexible as possible so it should support you know running compositions but you know in a very very",
    "start": "1203210",
    "end": "1209930"
  },
  {
    "text": "very frogging model agnostic manner and I'll show you that in a few slides",
    "start": "1209930",
    "end": "1216280"
  },
  {
    "text": "before I go I also like to to add two things here important again not not",
    "start": "1216280",
    "end": "1221930"
  },
  {
    "text": "going to talk much about it because we're working on it but it's it's really in the back of our mind and really dictates some of the decisions we've",
    "start": "1221930",
    "end": "1228320"
  },
  {
    "text": "made already the first one is you know we don't think the end goal is to actually compose function we believe the",
    "start": "1228320",
    "end": "1234620"
  },
  {
    "text": "end goal is to compose cloud services whatever databases you know AI services etc etc and of",
    "start": "1234620",
    "end": "1242930"
  },
  {
    "text": "course functions are the place there because they they can be great for bridging gaps between services but at",
    "start": "1242930",
    "end": "1250160"
  },
  {
    "text": "the end of the day the the workflow the composition is a few functions and lots of other things and this is what we",
    "start": "1250160",
    "end": "1256430"
  },
  {
    "text": "eventually want to support the last thing is we believe evens are really really important whether it's",
    "start": "1256430",
    "end": "1262130"
  },
  {
    "text": "correlation or streaming and and and their I think it's been discussed quite a bit in in this poll already or in",
    "start": "1262130",
    "end": "1269600"
  },
  {
    "text": "previous polls the tricky question is as we try to make things as we try to",
    "start": "1269600",
    "end": "1275570"
  },
  {
    "text": "express more things we also make things more complex and it's hard to know exactly where to start and this is",
    "start": "1275570",
    "end": "1280880"
  },
  {
    "text": "something we're working on okay so if we have so as I said before we want to",
    "start": "1280880",
    "end": "1286880"
  },
  {
    "start": "1282000",
    "end": "1352000"
  },
  {
    "text": "start with a pretty high level language and go down to pretty simple runtime infrastructure you can",
    "start": "1286880",
    "end": "1292010"
  },
  {
    "text": "think of it as a RISC processer and so how do we do that well you know how how we traditionally do that we essentially",
    "start": "1292010",
    "end": "1299120"
  },
  {
    "text": "start with higher-level code we do something that akin to a compiler we compile this to an intermediate",
    "start": "1299120",
    "end": "1304490"
  },
  {
    "text": "representation this is what we run right so that means there are two components to what we've done well so far is no J's",
    "start": "1304490",
    "end": "1311090"
  },
  {
    "text": "library which used to program compositions we also have the Python library but it's not open source yet and",
    "start": "1311090",
    "end": "1316630"
  },
  {
    "text": "I'll show you the no J J's library in the next slides and the second one is an",
    "start": "1316630",
    "end": "1321770"
  },
  {
    "text": "extension to the open with which runtime that essentially does two things the first one is it knows how to build",
    "start": "1321770",
    "end": "1329450"
  },
  {
    "text": "dynamic change the value of functions right we had sequence action in open with before but you had to define the",
    "start": "1329450",
    "end": "1335570"
  },
  {
    "text": "sequence beforehand so here's the key difference is that the way we as you run things you can decide what to run next",
    "start": "1335570",
    "end": "1341690"
  },
  {
    "text": "and what to annex and where to go next and when to stop the second thing is that we also believe that stage is",
    "start": "1341690",
    "end": "1346700"
  },
  {
    "text": "important and the runtime has to do some state management at least a little bit",
    "start": "1346700",
    "end": "1352220"
  },
  {
    "start": "1352000",
    "end": "1431000"
  },
  {
    "text": "early so here's what a composer looks like so on the left you have a very",
    "start": "1352220",
    "end": "1358700"
  },
  {
    "text": "simple example of a composition described in the computer programming language so here in this simple example",
    "start": "1358700",
    "end": "1364160"
  },
  {
    "text": "we're building a translator from an unknown language to English and the way we do that is by composing two functions",
    "start": "1364160",
    "end": "1370460"
  },
  {
    "text": "the first one is language ID it detects the you know it tries to guess the language of a fragment of text and then",
    "start": "1370460",
    "end": "1378290"
  },
  {
    "text": "there's a translator function that translate from a given input language to a given an output language and as you",
    "start": "1378290",
    "end": "1385280"
  },
  {
    "text": "can see this composition is start mixing things it has two things in particular here so one is it as a sequence not just",
    "start": "1385280",
    "end": "1393410"
  },
  {
    "text": "the sequence of the two functions but also some some inline function in between that you know take the output of",
    "start": "1393410",
    "end": "1398930"
  },
  {
    "text": "the first function and put it in shape so that it can be the input for the next function and it's also wrapped by a big",
    "start": "1398930",
    "end": "1404930"
  },
  {
    "text": "try-catch block because language ID might fail to detect the language and in that case we want to produce human",
    "start": "1404930",
    "end": "1411530"
  },
  {
    "text": "readable error message all right what you see on the right is something or tooling can build a graphical",
    "start": "1411530",
    "end": "1417920"
  },
  {
    "text": "representation of this composition but that can be used for debugging monitoring etc etc but",
    "start": "1417920",
    "end": "1423830"
  },
  {
    "text": "Brown truce is the code on the left this is what you write this is where to version control this is what you you",
    "start": "1423830",
    "end": "1429289"
  },
  {
    "text": "know edit in your editor so we have a bunch of constructs like that there's a",
    "start": "1429289",
    "end": "1435169"
  },
  {
    "text": "longer list but here is the really basic stuff essentially you can have functions you can have sequences you can have",
    "start": "1435169",
    "end": "1440720"
  },
  {
    "text": "conditional you can have a loo try-catch kind of things you can declare variables",
    "start": "1440720",
    "end": "1445789"
  },
  {
    "text": "you know and other things and parallel ease I'd you know it's totally fine in these kind of things so yes so that's",
    "start": "1445789",
    "end": "1454190"
  },
  {
    "text": "pretty much what I want to tell you about the program language you've seen the the example before and again if you",
    "start": "1454190",
    "end": "1460279"
  },
  {
    "text": "look at this slide you can it's pretty clear that you can do the same thing in any kind of programming language the",
    "start": "1460279",
    "end": "1465620"
  },
  {
    "text": "inline function syntax will change from one language to another but essentially everything else is going",
    "start": "1465620",
    "end": "1471289"
  },
  {
    "text": "to be the same so one thing I'd like to see so the way this works this is an",
    "start": "1471289",
    "end": "1478250"
  },
  {
    "text": "extension of the notion of data flowing sequences so in principle when you have one function executes after another",
    "start": "1478250",
    "end": "1484880"
  },
  {
    "text": "function that means the output of the previous functions becomes the input of the next function that's that's the basic flow but on top of that there is a",
    "start": "1484880",
    "end": "1491899"
  },
  {
    "text": "notion of state in this composition right which is composed of a few things the first one is where you are in the composition think of it as a program",
    "start": "1491899",
    "end": "1498260"
  },
  {
    "text": "counter right or you know if you think of finite state machines this would be the actual stage you are at in the",
    "start": "1498260",
    "end": "1504260"
  },
  {
    "text": "composition but there's more than that because we're doing structure programs so we have things like registered",
    "start": "1504260",
    "end": "1509269"
  },
  {
    "text": "exception handler we have things like variable declaration and so these need to be carried through by our runtime",
    "start": "1509269",
    "end": "1514760"
  },
  {
    "text": "implementation additionally the user can even add some notion of state that could be added",
    "start": "1514760",
    "end": "1520159"
  },
  {
    "text": "there so for instance a callback to and look at the very end of the execution of the composition so we can support this",
    "start": "1520159",
    "end": "1525559"
  },
  {
    "text": "kind of things so the what really key about this state is that what what really needs to be",
    "start": "1525559",
    "end": "1533360"
  },
  {
    "start": "1526000",
    "end": "1562000"
  },
  {
    "text": "managed is the state ID and the state can be either inside the runtime outside the runtime doesn't matter what we",
    "start": "1533360",
    "end": "1539539"
  },
  {
    "text": "believe is the right thing to do if server less is to keep State inside the runtime if it's small in us right if we",
    "start": "1539539",
    "end": "1545630"
  },
  {
    "text": "can manage it for cheap and if you really start having a lot of state then you have to the user has to help you",
    "start": "1545630",
    "end": "1553100"
  },
  {
    "text": "have to provide you know storage solution for you for you for your state and then we're only going to manage the",
    "start": "1553100",
    "end": "1560340"
  },
  {
    "text": "the keys to your stage okay so how is this implemented this is implemented",
    "start": "1560340",
    "end": "1565980"
  },
  {
    "start": "1562000",
    "end": "1663000"
  },
  {
    "text": "using a mechanism called conductor action which is the extensions we made to the open which runtime and",
    "start": "1565980",
    "end": "1571799"
  },
  {
    "text": "essentially it's the idea that a function I mean again in open whistle functions actions but same thing so a",
    "start": "1571799",
    "end": "1578820"
  },
  {
    "text": "function instead of returning in final results can return a triplet consisting",
    "start": "1578820",
    "end": "1584580"
  },
  {
    "text": "of a pointer to an action parameters and States and which means that rather than",
    "start": "1584580",
    "end": "1589850"
  },
  {
    "text": "these being the end of the execution it means that the runtime system should now take the specified action invoke it on",
    "start": "1589850",
    "end": "1596549"
  },
  {
    "text": "the specified parameter and that should be the next step of your composition and when this next type of the composition",
    "start": "1596549",
    "end": "1602100"
  },
  {
    "text": "is done we should go back to the conductor action which you can think of the scheduler in all this and then",
    "start": "1602100",
    "end": "1607320"
  },
  {
    "text": "re-involved the scheduler with the combination of what was obtained from executing the component action the",
    "start": "1607320",
    "end": "1613409"
  },
  {
    "text": "result and the state that needed to be preserved while the action was running right so at the bottom you have a",
    "start": "1613409",
    "end": "1620220"
  },
  {
    "text": "handwritten conductor action so we're not encouraging you to do this but you can write conductor actions by hand it's",
    "start": "1620220",
    "end": "1626309"
  },
  {
    "text": "a kind of a finite state machine and what it essentially does it's a it builds a sequence with two steps in the",
    "start": "1626309",
    "end": "1632610"
  },
  {
    "text": "first one we call a function called triple and the second one we call the function all increments and if you look",
    "start": "1632610",
    "end": "1639720"
  },
  {
    "text": "at the you know what what that means at runtime that means we start running this conductor action this scheduler it",
    "start": "1639720",
    "end": "1645809"
  },
  {
    "text": "returns that we should run triple first so triples run then it's being written books now it's at state one so that",
    "start": "1645809",
    "end": "1652169"
  },
  {
    "text": "means it decides that the next step is increment will run increments then returns and then there is no more action",
    "start": "1652169",
    "end": "1658080"
  },
  {
    "text": "to run so this is the end of the you see the end of the execution reach the end of the pipeline so putting all of this",
    "start": "1658080",
    "end": "1665850"
  },
  {
    "text": "together what that means is we have a library that generates a JSON representation for the composition so",
    "start": "1665850",
    "end": "1671190"
  },
  {
    "text": "it's not a finite state machine it's something and I'll show you an example in the next slide is something much closer to the end abstract syntax race",
    "start": "1671190",
    "end": "1677669"
  },
  {
    "text": "or something very close to what was the syntax of the composition in the first place then what we do is we take this",
    "start": "1677669",
    "end": "1685139"
  },
  {
    "text": "JSON composition we combine it with a piece of code that is essentially a scheduler that is going to be",
    "start": "1685139",
    "end": "1691710"
  },
  {
    "text": "body of the action it's the same for all of our composition it doesn't change only the Jason changes and that this",
    "start": "1691710",
    "end": "1697020"
  },
  {
    "text": "produces a conductor action and this is the thing that the runtime system executes and the way this is executed if",
    "start": "1697020",
    "end": "1705120"
  },
  {
    "text": "you if you if you again want to know the details that first each translate these",
    "start": "1705120",
    "end": "1710429"
  },
  {
    "text": "are taxed and tax rates to something like a finite state machine and then it interprets the finite state machine but",
    "start": "1710429",
    "end": "1715830"
  },
  {
    "text": "one big difference with all of the things that we discussed so far is that this finite state machine is really an internal representation of the runtime",
    "start": "1715830",
    "end": "1722100"
  },
  {
    "text": "system it can change and it's definitely not there the representation that",
    "start": "1722100",
    "end": "1727320"
  },
  {
    "text": "typically you user programs with to describe a composition so you know this",
    "start": "1727320",
    "end": "1734130"
  },
  {
    "start": "1732000",
    "end": "1759000"
  },
  {
    "text": "is the JSON so maybe at that level it doesn't look that different but you can see here this is adjacent for the",
    "start": "1734130",
    "end": "1740250"
  },
  {
    "text": "example code I had before it has first you know the the root node is a try cat is a type try it has a body",
    "start": "1740250",
    "end": "1746970"
  },
  {
    "text": "and handler the body itself is a sequence which has which has a few components these components is an array",
    "start": "1746970",
    "end": "1752760"
  },
  {
    "text": "of things some of them are named action some of them are inline functions etcetera etcetera so that's about it and",
    "start": "1752760",
    "end": "1761240"
  },
  {
    "start": "1759000",
    "end": "1846000"
  },
  {
    "text": "just going back to the goals so just a couple comments here I've been missed",
    "start": "1761240",
    "end": "1767789"
  },
  {
    "text": "the last the previous two calls and I hope I'll be able to join more of these goals but I listened to the recordings",
    "start": "1767789",
    "end": "1773370"
  },
  {
    "text": "and I understand from Kathy that the goal of the workgroup is to primarily",
    "start": "1773370",
    "end": "1779159"
  },
  {
    "text": "try to define the user facing representation you know what what the user how is the user going to program a",
    "start": "1779159",
    "end": "1785610"
  },
  {
    "text": "workflow and I feel maybe that's a bit premature I would be you know like if I",
    "start": "1785610",
    "end": "1791220"
  },
  {
    "text": "think my view what the cloud even specification is really is much more bottom-up it's trying to tackle and",
    "start": "1791220",
    "end": "1798779"
  },
  {
    "text": "decide the kind infrastructure we can have been common in a runtime systems so that they can collaborate and work",
    "start": "1798779",
    "end": "1804600"
  },
  {
    "text": "together much more effectively so the reason I think is a bit more immature is because I think there are a lot of a lot",
    "start": "1804600",
    "end": "1810419"
  },
  {
    "text": "of options a lot of different ways to do this workflows and I'm not sure we have you know we have we know already which",
    "start": "1810419",
    "end": "1818100"
  },
  {
    "text": "what are the good ones the better ones and on the other end I think from the runtimes perspective we start to",
    "start": "1818100",
    "end": "1824309"
  },
  {
    "text": "understand kind of additions we need to make to make it possible to just run any kind of",
    "start": "1824309",
    "end": "1830429"
  },
  {
    "text": "oil for any kind of program walls whether you like finance the admissions you know like structured programming",
    "start": "1830429",
    "end": "1835500"
  },
  {
    "text": "like declarative programming I think we should be able to agree on some of the key components of the runtime system we",
    "start": "1835500",
    "end": "1842340"
  },
  {
    "text": "need to support that that's it for me any questions so I'm curious if you",
    "start": "1842340",
    "end": "1849990"
  },
  {
    "start": "1846000",
    "end": "1974000"
  },
  {
    "text": "think that defining the user facing model a better phrase is it a little",
    "start": "1849990",
    "end": "1855720"
  },
  {
    "text": "premature what would be your recommendation on the first baby step towards heading down to finding work I",
    "start": "1855720",
    "end": "1862610"
  },
  {
    "text": "think having said that the world cookies doing to do the right thing which is to",
    "start": "1862610",
    "end": "1868019"
  },
  {
    "text": "look at use cases right and so so to understand exactly how what are the primitive capabilities that we need so",
    "start": "1868019",
    "end": "1874799"
  },
  {
    "text": "for instance again as I said in this presentation I didn't really talk about parallelism currency or all very much",
    "start": "1874799",
    "end": "1880409"
  },
  {
    "text": "about even so I think these are key things to understand and the way to understand them is to go through you",
    "start": "1880409",
    "end": "1885990"
  },
  {
    "text": "know what are the use cases and you know using finite state machine for that makes perfect sense but I think then we",
    "start": "1885990",
    "end": "1892380"
  },
  {
    "text": "we should rather than maybe shooting for a holistic definition what are all the",
    "start": "1892380",
    "end": "1897960"
  },
  {
    "text": "holder states we can have in a finite state machines maybe it should be more of what are the different kind of",
    "start": "1897960",
    "end": "1903510"
  },
  {
    "text": "building blocks like we need fork maybe we need join we need you know I really",
    "start": "1903510",
    "end": "1909299"
  },
  {
    "text": "like to think of this as defining the RISC processer for the cloud where we define the minimal instruction sets and",
    "start": "1909299",
    "end": "1915720"
  },
  {
    "text": "I feel like the may be the approach of defining this finite state machine is is",
    "start": "1915720",
    "end": "1922700"
  },
  {
    "text": "he's trying to do at the same time understanding what what the backend infrastructure has to be when it's the",
    "start": "1922700",
    "end": "1929190"
  },
  {
    "text": "what the primitive or the risk infrastructure is but at the same time it's also trying to be the user facing",
    "start": "1929190",
    "end": "1934230"
  },
  {
    "text": "the user facing program model I think I think I mean in my experience it makes a",
    "start": "1934230",
    "end": "1941220"
  },
  {
    "text": "lot of sense to not confuse user facing program all and the system representation of this you know the",
    "start": "1941220",
    "end": "1947940"
  },
  {
    "text": "system abstraction because because you know they yes at the end of the day one",
    "start": "1947940",
    "end": "1953580"
  },
  {
    "text": "is supposed to be able to execute everything but they tend to they",
    "start": "1953580",
    "end": "1959220"
  },
  {
    "text": "very different balls right one is to the goal of the user facing one is to be user friendly is to be easy to",
    "start": "1959220",
    "end": "1965100"
  },
  {
    "text": "understand easy to refactor etcetera lots lots of different things the goal of the system level one is to be minimal",
    "start": "1965100",
    "end": "1971700"
  },
  {
    "text": "in particular so I think you know it's",
    "start": "1971700",
    "end": "1979770"
  },
  {
    "start": "1974000",
    "end": "2461000"
  },
  {
    "text": "important separate I agree it's important separator the specification of",
    "start": "1979770",
    "end": "1985860"
  },
  {
    "text": "the workflow with you know how back-end is going to implement it to support that",
    "start": "1985860",
    "end": "1991620"
  },
  {
    "text": "workflow I think I agree with your point on that so that's why you know how you",
    "start": "1991620",
    "end": "2000289"
  },
  {
    "text": "know the service problem you know should continue or should you know do the",
    "start": "2000289",
    "end": "2006590"
  },
  {
    "text": "runtime - I think you know easy for me provide a way for the user its desired",
    "start": "2006590",
    "end": "2015070"
  },
  {
    "text": "application workflow so that's why you know let's go to this workflow spec",
    "start": "2015070",
    "end": "2020720"
  },
  {
    "text": "right we have cases you know on investor",
    "start": "2020720",
    "end": "2026330"
  },
  {
    "text": "meeting and so all these use cases I think you know using this actually we",
    "start": "2026330",
    "end": "2032179"
  },
  {
    "text": "look at this use cases right from users point of view kind of like a statement",
    "start": "2032179",
    "end": "2038960"
  },
  {
    "text": "based workflow so the user doesn't need to know the detail of you know the wrong",
    "start": "2038960",
    "end": "2044030"
  },
  {
    "text": "time or you know the detail of you know how you are going to run the you know to schedule the resources for the function",
    "start": "2044030",
    "end": "2051408"
  },
  {
    "text": "the user ultimately just say you know what the user would like to the user needs to pass a pass you know is desired",
    "start": "2051409",
    "end": "2060020"
  },
  {
    "text": "application on specification to perform say okay at this time you know what",
    "start": "2060020",
    "end": "2066740"
  },
  {
    "text": "event check on my function or maybe there's no event trigger the function that function just got wrong and I know",
    "start": "2066740",
    "end": "2073250"
  },
  {
    "text": "with the is going to branch out or what so I think that actually from users",
    "start": "2073250",
    "end": "2078980"
  },
  {
    "text": "perspective as they like representation of of the application is innate",
    "start": "2078980",
    "end": "2086850"
  },
  {
    "text": "than you know reporting very complicated I understand and I think it makes sense",
    "start": "2086850",
    "end": "2093490"
  },
  {
    "text": "but I think it's also very opinionated we very opinionated view of how to program so in my experience for instance",
    "start": "2093490",
    "end": "2100330"
  },
  {
    "text": "finite state machines and things very directly inspired for fine from finite",
    "start": "2100330",
    "end": "2105340"
  },
  {
    "text": "state machines are very familiar to a hardware programmers are web designers and they use that a lot they like it a",
    "start": "2105340",
    "end": "2112900"
  },
  {
    "text": "lot I think it's much less the case for you know application traditional approach and application programmers but",
    "start": "2112900",
    "end": "2123430"
  },
  {
    "text": "you know the model I think you know",
    "start": "2123430",
    "end": "2128010"
  },
  {
    "text": "which I present I don't think it's a real mystery it's a really fantastic",
    "start": "2129510",
    "end": "2134950"
  },
  {
    "text": "machine to be a yeah when I say finite",
    "start": "2134950",
    "end": "2147160"
  },
  {
    "text": "state machine I'll also mean something vaguely you know that resembles the finite state machines yes but I think",
    "start": "2147160",
    "end": "2152830"
  },
  {
    "text": "for instance some of the questions there if you if you look at financing machines in particular the people that do you",
    "start": "2152830",
    "end": "2159430"
  },
  {
    "text": "know graphical representation called design languages for finite state machines they often fail to address the",
    "start": "2159430",
    "end": "2166210"
  },
  {
    "text": "problem of hierarchical composition which is how you get you know in finite state oh you build larger you know",
    "start": "2166210",
    "end": "2174160"
  },
  {
    "text": "automata finite state machine from smaller ones what's the what's the what's the semantics for composing them",
    "start": "2174160",
    "end": "2180610"
  },
  {
    "text": "in particular what's the what's the error semantics when you start composing",
    "start": "2180610",
    "end": "2186610"
  },
  {
    "text": "these things how do you what does it mean to abort one of these things I think that that's that's - take machines",
    "start": "2186610",
    "end": "2194350"
  },
  {
    "text": "make a lot of sense you know as long as they fit on your screen and and we start",
    "start": "2194350",
    "end": "2200470"
  },
  {
    "text": "sizing complexity that goes beyond that they become much much harder - too many plates you know which part which",
    "start": "2200470",
    "end": "2210750"
  },
  {
    "text": "functionality cannot support I think that's more useful no I sure so so then",
    "start": "2210750",
    "end": "2219550"
  },
  {
    "text": "then my then my take is well when you build what I'm trying to say here is sure maybe we",
    "start": "2219550",
    "end": "2226299"
  },
  {
    "text": "can get to finite state machine specifications that that that does everything right that does that covers",
    "start": "2226299",
    "end": "2232599"
  },
  {
    "text": "all the bases we want to cover but then I think in that case you could have a much much simpler specification of what",
    "start": "2232599",
    "end": "2238839"
  },
  {
    "text": "it is why did you you could you could you could you could simplify this to to a fewer fewer",
    "start": "2238839",
    "end": "2246460"
  },
  {
    "text": "primitives so let me click on AWS for instance rather than while we you know",
    "start": "2246460",
    "end": "2253029"
  },
  {
    "text": "the amazon state language they defined lots lots lots of different ways of doing retries lots of ways to handle",
    "start": "2253029",
    "end": "2261099"
  },
  {
    "text": "errors because it makes sense because from a user's perspective one of the values of using MS instead functions is",
    "start": "2261099",
    "end": "2267520"
  },
  {
    "text": "you have lots of policies by which you can decide what to do if something goes wrong so that I think that was even the",
    "start": "2267520",
    "end": "2274329"
  },
  {
    "text": "maybe to drive the driver behind the you know having step functions in the first",
    "start": "2274329",
    "end": "2279819"
  },
  {
    "text": "place and and so that's really important for the user but when you think about it lots of these they can many of these",
    "start": "2279819",
    "end": "2286240"
  },
  {
    "text": "mechanisms have a lot in common right and primitives you need to implement these mechanisms are things like try",
    "start": "2286240",
    "end": "2292869"
  },
  {
    "text": "catch loop in counting all right so if you can support counting looping and and and catching errors then you can express",
    "start": "2292869",
    "end": "2301089"
  },
  {
    "text": "all of these versions of the mechanisms with backup you know you need delays as well as you",
    "start": "2301089",
    "end": "2306460"
  },
  {
    "text": "as you pointed out in the presentation but you can describe all these policies with exponential back-off with n retries",
    "start": "2306460",
    "end": "2311950"
  },
  {
    "text": "will retry for one minute etc etc etc all of them you can express as as you",
    "start": "2311950",
    "end": "2319119"
  },
  {
    "text": "know derived instruct on top of these primitive constructs so so maybe this is this is what we end up doing but I think",
    "start": "2319119",
    "end": "2326020"
  },
  {
    "text": "it would be I believe they're very reluctant to try to go and enlist and",
    "start": "2326020",
    "end": "2331920"
  },
  {
    "text": "you know make making try to make an exhaustive list of all the possible ways we can recover from error because I",
    "start": "2331920",
    "end": "2338589"
  },
  {
    "text": "think this is wrong so thanks very much for the demo an example what you were",
    "start": "2338589",
    "end": "2347529"
  },
  {
    "text": "talking about in the difference between the language representation it looks like you have Python coming and",
    "start": "2347529",
    "end": "2352650"
  },
  {
    "text": "JavaScript right now and the underlying like underlying",
    "start": "2352650",
    "end": "2358869"
  },
  {
    "text": "representation of how to process these things it reminds me a lot of the way that internally at Google Borg has a",
    "start": "2358869",
    "end": "2366460"
  },
  {
    "text": "very complex protocol buffer that expresses how you should run things but",
    "start": "2366460",
    "end": "2372340"
  },
  {
    "text": "then there are higher level tools that actually compile down to that and everyone uses the higher level tools and",
    "start": "2372340",
    "end": "2378130"
  },
  {
    "text": "no one you know that actually goes through wrestles with the underlying protocol buffers I was wondering is that",
    "start": "2378130",
    "end": "2384369"
  },
  {
    "text": "underlying representation or composure well the like standardized or well",
    "start": "2384369",
    "end": "2389740"
  },
  {
    "text": "defined somewhere yeah so I mean so again there are two aspects to its the",
    "start": "2389740",
    "end": "2395380"
  },
  {
    "text": "first one is the JSON representation the one that essentially gets uploaded to you know gets deployed",
    "start": "2395380",
    "end": "2402190"
  },
  {
    "text": "so what promise cut your clouds that that is well-defined I mean again the documentation is working progress but",
    "start": "2402190",
    "end": "2407710"
  },
  {
    "text": "the intent is for that to be specified well define fixed or you know Mona -",
    "start": "2407710",
    "end": "2414820"
  },
  {
    "text": "Mona well we add stuff to it we had more capabilities maybe but we this is",
    "start": "2414820",
    "end": "2421030"
  },
  {
    "text": "backward compatible now the the you know at runtime we end up building a finite",
    "start": "2421030",
    "end": "2426970"
  },
  {
    "text": "state machine out of that representation that on the other end is not intended to",
    "start": "2426970",
    "end": "2432070"
  },
  {
    "text": "be a stable representation this is something for instance we continue to optimize and so we don't want to commit",
    "start": "2432070",
    "end": "2437950"
  },
  {
    "text": "to a specific representation because we will change it as we make it more efficient for instance but the contract",
    "start": "2437950",
    "end": "2444010"
  },
  {
    "text": "is that JSON the contract is as Jason yes yeah yes and you can write any tool",
    "start": "2444010",
    "end": "2450190"
  },
  {
    "text": "you know if you want to come in as another community contribution that generates is Jason from something else",
    "start": "2450190",
    "end": "2455650"
  },
  {
    "text": "you can so I think you know so if we had",
    "start": "2455650",
    "end": "2469480"
  },
  {
    "start": "2461000",
    "end": "2896000"
  },
  {
    "text": "any questions if not um all right to go",
    "start": "2469480",
    "end": "2475170"
  },
  {
    "text": "comments-section on the spec can you see my spec can you",
    "start": "2475170",
    "end": "2481900"
  },
  {
    "text": "see the document no you're sure just great sorry no can you see yep",
    "start": "2481900",
    "end": "2490210"
  },
  {
    "text": "there we go okay good okay so let's go through this comment um I think we",
    "start": "2490210",
    "end": "2496900"
  },
  {
    "text": "addressed some comments in the master in the last meeting so let me first go",
    "start": "2496900",
    "end": "2503230"
  },
  {
    "text": "through the meeting minutes so the here",
    "start": "2503230",
    "end": "2509230"
  },
  {
    "text": "is not not here oh I think you have a comment saying order to express sequence of function execution for each parallel",
    "start": "2509230",
    "end": "2516490"
  },
  {
    "text": "branch sequence of function execution each parallel branch to the measure with the approval action field rather than a",
    "start": "2516490",
    "end": "2523150"
  },
  {
    "text": "single dimensional array okay so could you clarify a little bit on that I'm not",
    "start": "2523150",
    "end": "2529150"
  },
  {
    "text": "here oh okay so let me have this I think",
    "start": "2529150",
    "end": "2534760"
  },
  {
    "text": "that we have this action here right hold on just here no these are those are",
    "start": "2534760",
    "end": "2540010"
  },
  {
    "text": "example um are you talking about this or where's your comment here okay expand",
    "start": "2540010",
    "end": "2595170"
  },
  {
    "text": "[Music] this one",
    "start": "2598810",
    "end": "2604350"
  },
  {
    "text": "me up comment yes maybe you ask me oh",
    "start": "2604369",
    "end": "2613359"
  },
  {
    "text": "yeah okay I see so I think basically I",
    "start": "2613359",
    "end": "2624309"
  },
  {
    "text": "understand how to use on a auction we",
    "start": "2624309",
    "end": "2690259"
  },
  {
    "text": "need a way to okay so your suggestion is",
    "start": "2690259",
    "end": "2712339"
  },
  {
    "text": "we need to have less estate complicated",
    "start": "2712339",
    "end": "2718390"
  },
  {
    "text": "function combination okay",
    "start": "2718390",
    "end": "2725170"
  },
  {
    "text": "you saw my comment there I think we've got various options in terms of being able to represent",
    "start": "2728660",
    "end": "2735810"
  },
  {
    "text": "a combination of parallel and sequential actions so we could certainly explore",
    "start": "2735810",
    "end": "2742410"
  },
  {
    "text": "those options okay another comment on",
    "start": "2742410",
    "end": "2749220"
  },
  {
    "text": "this so I think your case is you know okay so you give some example right so",
    "start": "2749220",
    "end": "2754500"
  },
  {
    "text": "if your parent actually in parallel state such as a B's so ABCD",
    "start": "2754500",
    "end": "2761180"
  },
  {
    "text": "okay so so yummy is a b c d is executed",
    "start": "2761180",
    "end": "2767010"
  },
  {
    "text": "in parallel these are four functions right this is what you mean by four functions right yes and then later up to",
    "start": "2767010",
    "end": "2774270"
  },
  {
    "text": "these four functions are completed there's another two function basically mérida is that what you mean I think",
    "start": "2774270",
    "end": "2796380"
  },
  {
    "text": "this is also one of the place where it's easy to define a few constructs but later realized that they are not",
    "start": "2796380",
    "end": "2802980"
  },
  {
    "text": "flexible in us so for instance you know the parallel composition if we need",
    "start": "2802980",
    "end": "2810540"
  },
  {
    "text": "things like timeouts we definitely need need things like in",
    "start": "2810540",
    "end": "2815610"
  },
  {
    "text": "all use cases we see cases where in a parallel composition there are branches that are me and branches that are must right that means you're trying to do",
    "start": "2815610",
    "end": "2822120"
  },
  {
    "text": "different things in parallel some of them have to succeed before you can continue others you're willing to sacrifice if they don't finish on time",
    "start": "2822120",
    "end": "2830510"
  },
  {
    "text": "that's one example we have we have maps where the parallel tasks are the same",
    "start": "2830510",
    "end": "2836130"
  },
  {
    "text": "but the data is different as opposed to having different you know and as opposed to having the dual where",
    "start": "2836130",
    "end": "2841590"
  },
  {
    "text": "you have the same data but different tasks so there are lots of lots of ways to build quality constructs and I think",
    "start": "2841590",
    "end": "2849210"
  },
  {
    "text": "it's important to try to extract what are the primitive operations on them in",
    "start": "2849210",
    "end": "2854670"
  },
  {
    "text": "you know what's the semantics adjoining semantics rights this might be one way to do it another thing we also see in some of",
    "start": "2854670",
    "end": "2861840"
  },
  {
    "text": "your most advanced use cases and maybe I'll add that to the document is sometimes you fork to you you you",
    "start": "2861840",
    "end": "2868650"
  },
  {
    "text": "haven't of execution they need folks into two separate tasks and then one of these",
    "start": "2868650",
    "end": "2873880"
  },
  {
    "text": "tasks further Forks into two separate tasks but the order in which you want to join the tasks that you've worked is not",
    "start": "2873880",
    "end": "2880510"
  },
  {
    "text": "the order in which you fork the tasks so if you only have these constructs that are you know matching beginning and ends",
    "start": "2880510",
    "end": "2887950"
  },
  {
    "text": "of a parallel composition then you cannot express that so that's that's one place where I think maybe a maybe maybe",
    "start": "2887950",
    "end": "2896980"
  },
  {
    "start": "2896000",
    "end": "3600000"
  },
  {
    "text": "you can poster you know on which you just said in this document whether you",
    "start": "2896980",
    "end": "2902110"
  },
  {
    "text": "know it's you know these existing you know this whether it expanded oh yeah",
    "start": "2902110",
    "end": "2909810"
  },
  {
    "text": "for someone here we have you know different match criteria and retry and",
    "start": "2909810",
    "end": "2915820"
  },
  {
    "text": "these for different functions right so different function result you know the",
    "start": "2915820",
    "end": "2921010"
  },
  {
    "text": "based on the different function result like you know if the function is secure is you know different this is a array so",
    "start": "2921010",
    "end": "2927490"
  },
  {
    "text": "different the result could have different retry support independent retry mechanism especially make sure",
    "start": "2927490",
    "end": "2938620"
  },
  {
    "text": "there's no change to what I've read okay",
    "start": "2938620",
    "end": "2944380"
  },
  {
    "text": "so it would be good because we have limited time it would be good if you can post comments and which one you're",
    "start": "2944380",
    "end": "2952510"
  },
  {
    "text": "thinking no this will o cannot handle it that would be great okay maybe okay or",
    "start": "2952510",
    "end": "2963520"
  },
  {
    "text": "if people would like to discuss here I'm okay so um I think you know you",
    "start": "2963520",
    "end": "2970420"
  },
  {
    "text": "mentioned that okay you have a specific example say which which we're talking about which you think you know and this",
    "start": "2970420",
    "end": "2976840"
  },
  {
    "text": "cannot handle yes yes I'll have to the document oh okay okay that would be good",
    "start": "2976840",
    "end": "2985510"
  },
  {
    "text": "so this for this one um so as you know",
    "start": "2985510",
    "end": "2993520"
  },
  {
    "text": "so here on I think you know trying to",
    "start": "2993520",
    "end": "2999580"
  },
  {
    "text": "see whether and other people have any",
    "start": "2999580",
    "end": "3003950"
  },
  {
    "text": "[Music] yes I agree this is an important",
    "start": "3009040",
    "end": "3106630"
  },
  {
    "text": "question and the way we've done it is to permit writing small pieces of code that",
    "start": "3106630",
    "end": "3112720"
  },
  {
    "text": "kids run in line that doesn't have to be declared as function but running between the functional quiche and an interesting",
    "start": "3112720",
    "end": "3119770"
  },
  {
    "text": "question is what the language in which to write this function and so Amazon as",
    "start": "3119770",
    "end": "3125110"
  },
  {
    "text": "a specific you know J'son path way to specify JSON path I think in general we",
    "start": "3125110",
    "end": "3132310"
  },
  {
    "text": "can have a something like JQ for instance to specify this it's what we do for now is to use",
    "start": "3132310",
    "end": "3137650"
  },
  {
    "text": "JavaScript or Python specify these things but there are drawbacks to making these these include output adapters too",
    "start": "3137650",
    "end": "3145630"
  },
  {
    "text": "flexible because if they are very flexible then running them safely",
    "start": "3145630",
    "end": "3151650"
  },
  {
    "text": "requires a lot of sandboxing a lot of runtime resources that can be avoided if",
    "start": "3151650",
    "end": "3156820"
  },
  {
    "text": "this is a more specialized language now",
    "start": "3156820",
    "end": "3162160"
  },
  {
    "text": "here I think you would like to so here what to me is to see how do you mean the",
    "start": "3162160",
    "end": "3167500"
  },
  {
    "text": "how the information is passed from one function to the next function is that",
    "start": "3167500",
    "end": "3172780"
  },
  {
    "text": "what you okay so that's actually okay let me try to assume with our controller",
    "start": "3172780",
    "end": "3178180"
  },
  {
    "text": "that's here filter okay so where's that",
    "start": "3178180",
    "end": "3184320"
  },
  {
    "text": "action state happy what why you look for",
    "start": "3184320",
    "end": "3197320"
  },
  {
    "text": "it I just have like a question so yeah this does seem like a like a pretty notable problem I hadn't thought",
    "start": "3197320",
    "end": "3202930"
  },
  {
    "text": "about it before sorry for not reaching all the way to the part of the dock and so like I'm wondering is this something",
    "start": "3202930",
    "end": "3210160"
  },
  {
    "text": "that the spec needs to handle is this something that like every implementation can handle you mean the the information",
    "start": "3210160",
    "end": "3220450"
  },
  {
    "text": "passing from one function to the next how do we make sure that we get the type of expect from the last function oh okay",
    "start": "3220450",
    "end": "3228310"
  },
  {
    "text": "so actually on I think this is an important point so information passing",
    "start": "3228310",
    "end": "3233859"
  },
  {
    "text": "from one function to another function also information passing from the event",
    "start": "3233859",
    "end": "3238920"
  },
  {
    "text": "event information could be the payload and make a data to the function I think these two we all need to address I think",
    "start": "3238920",
    "end": "3246700"
  },
  {
    "text": "I put it here but I cannot maybe I didn't put it in okay I'm going to put",
    "start": "3246700",
    "end": "3251740"
  },
  {
    "text": "it in and then later people can see whether that works what you is that we",
    "start": "3251740",
    "end": "3259000"
  },
  {
    "text": "are you think in terms of the problem you know event event and function key",
    "start": "3259000",
    "end": "3267310"
  },
  {
    "text": "function also we need to a way to reconcile steak so",
    "start": "3267310",
    "end": "3277690"
  },
  {
    "text": "okay so so let me write it down information passing from event to",
    "start": "3277690",
    "end": "3284380"
  },
  {
    "text": "function information passing from event",
    "start": "3284380",
    "end": "3300190"
  },
  {
    "text": "to function from between functions right [Music]",
    "start": "3300190",
    "end": "3306179"
  },
  {
    "text": "yeah yeah I can post that maybe I forgot to post that how we do this you know in",
    "start": "3311910",
    "end": "3318430"
  },
  {
    "text": "from memorizing from event to function between functions and between states yeah okay and specifically like what do",
    "start": "3318430",
    "end": "3327520"
  },
  {
    "text": "we do if it's not the thing that we expect to get yeah since since Oliver",
    "start": "3327520",
    "end": "3332710"
  },
  {
    "text": "elver you still here how does open with canola like if you are composing things and you get something that you don't expect",
    "start": "3332710",
    "end": "3339569"
  },
  {
    "text": "yes so sorry so we first we follow from the open with conventions so in open",
    "start": "3339960",
    "end": "3346870"
  },
  {
    "text": "with what every function produces adjacent dictionary so either this JSON",
    "start": "3346870",
    "end": "3351940"
  },
  {
    "text": "dictionary is a fields name error or not if it doesn't that's considered to be normal results if it does that's",
    "start": "3351940",
    "end": "3357940"
  },
  {
    "text": "considered to be an abnormal result so if you have this the example I was showing earlier for instance if you have",
    "start": "3357940",
    "end": "3364150"
  },
  {
    "text": "the normal results then you execute to sing frequence after with the output of the previous function being the input of",
    "start": "3364150",
    "end": "3370690"
  },
  {
    "text": "the next if the if the output object contains a field called error then we",
    "start": "3370690",
    "end": "3376860"
  },
  {
    "text": "jump to the a or handler which is the thing we introduce we've try catch constructs and the air handler is",
    "start": "3376860",
    "end": "3385360"
  },
  {
    "text": "written by the developer themselves so you just do any like state we have a",
    "start": "3385360",
    "end": "3391390"
  },
  {
    "text": "let's say we have a standard library and we have a growing standard library where you can have predefined behaviors in",
    "start": "3391390",
    "end": "3397300"
  },
  {
    "text": "party not so much for hair and link but for retries for instance where we have in the standard library there's a retry",
    "start": "3397300",
    "end": "3403569"
  },
  {
    "text": "and times for instance that says okay if I get an error that means I'm going to retry to call one more time and with the",
    "start": "3403569",
    "end": "3409869"
  },
  {
    "text": "exact same parameters as the first time right and you can be more of things at that kind okay I think let me address",
    "start": "3409869",
    "end": "3418749"
  },
  {
    "text": "this quickly so for the for the for this",
    "start": "3418749",
    "end": "3424709"
  },
  {
    "text": "arrow if the function has an arrow we have it here say it's a it's a retrial",
    "start": "3424709",
    "end": "3430509"
  },
  {
    "text": "here is that it's a retry mechanism which say you know you the function",
    "start": "3430509",
    "end": "3436779"
  },
  {
    "text": "result match what we're you and then you're going to do the rich y for the information passing it doesn't matter if",
    "start": "3436779",
    "end": "3443829"
  },
  {
    "text": "the user just say okay I want information passed from this function to the next function or from an event to a",
    "start": "3443829",
    "end": "3449619"
  },
  {
    "text": "function or from between the states it has a filter mechanism say what which",
    "start": "3449619",
    "end": "3455769"
  },
  {
    "text": "part of the information is it's a function result or it is a previous study event it's a previous state",
    "start": "3455769",
    "end": "3463410"
  },
  {
    "text": "information from previous state or is information from the event we all first",
    "start": "3463410",
    "end": "3468640"
  },
  {
    "text": "apply a filter you know because you might not want to pass all the information right you may",
    "start": "3468640",
    "end": "3473739"
  },
  {
    "text": "want to pass a specific even a specific part of the information field so there's",
    "start": "3473739",
    "end": "3480160"
  },
  {
    "text": "a future there of course if the filter if you would have known so that means all the information you want to pass to the",
    "start": "3480160",
    "end": "3485920"
  },
  {
    "text": "either the next state or to the next function on so there's a filter there and then there's a after apply that",
    "start": "3485920",
    "end": "3493630"
  },
  {
    "text": "filter I know the information is passed to the next function on to the next to",
    "start": "3493630",
    "end": "3500319"
  },
  {
    "text": "the next state I think that that's how it he you know they use a specify you",
    "start": "3500319",
    "end": "3505930"
  },
  {
    "text": "know specified I forgot to put like",
    "start": "3505930",
    "end": "3511630"
  },
  {
    "text": "information here but at least can be I just I'm gonna post it makes to host a",
    "start": "3511630",
    "end": "3517569"
  },
  {
    "text": "to the document and then you can take a look to see whether that makes sense",
    "start": "3517569",
    "end": "3525239"
  },
  {
    "text": "oh yeah thanks go ahead Rachel oh just",
    "start": "3525420",
    "end": "3532260"
  },
  {
    "text": "that that sounds great happy to like chime in on that sure thanks another comment we're",
    "start": "3532260",
    "end": "3538410"
  },
  {
    "text": "running out we'll have one more minute",
    "start": "3538410",
    "end": "3542180"
  },
  {
    "text": "really some o just I'll have em happy I",
    "start": "3554990",
    "end": "3579770"
  },
  {
    "text": "told your your you are broken your waist is broken oh okay yeah I might not have",
    "start": "3580220",
    "end": "3589350"
  },
  {
    "text": "a way around that right now but I'll chime in on those things okay great I",
    "start": "3589350",
    "end": "3596010"
  },
  {
    "text": "think that's all you know please feel you know free to post comments I think that that's what helped us you know make",
    "start": "3596010",
    "end": "3601860"
  },
  {
    "text": "this that better so I think in the netting we are going to mostly just concentrate on addressing",
    "start": "3601860",
    "end": "3608970"
  },
  {
    "text": "you know all these different comments to see how we can improve this document",
    "start": "3608970",
    "end": "3614210"
  },
  {
    "text": "sounds good oh okay right um is that we",
    "start": "3614210",
    "end": "3620880"
  },
  {
    "text": "can I think we well I don't really uh Mickey thanks everyone take six",
    "start": "3620880",
    "end": "3629060"
  }
]