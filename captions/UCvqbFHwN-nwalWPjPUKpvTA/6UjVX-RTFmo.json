[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "so thank you for coming to my talk to",
    "start": "30",
    "end": "1560"
  },
  {
    "text": "everybody I'm Paul Dix I'm the creator",
    "start": "1560",
    "end": "4589"
  },
  {
    "text": "of influx DB and I'm the founder of",
    "start": "4589",
    "end": "6270"
  },
  {
    "text": "influx data which is the company behind",
    "start": "6270",
    "end": "8280"
  },
  {
    "text": "it and in this talk I wanted to talk",
    "start": "8280",
    "end": "11099"
  },
  {
    "text": "about work that we're doing to integrate",
    "start": "11099",
    "end": "15260"
  },
  {
    "text": "stuff from the Prometheus ecosystem",
    "start": "15260",
    "end": "17699"
  },
  {
    "text": "within flux and have the two work",
    "start": "17699",
    "end": "20340"
  },
  {
    "text": "together",
    "start": "20340",
    "end": "21630"
  },
  {
    "text": "so I'm sure everybody already knows",
    "start": "21630",
    "end": "23130"
  },
  {
    "text": "Prometheus just in case you don't know",
    "start": "23130",
    "end": "25230"
  },
  {
    "text": "in flux it is an open source time series",
    "start": "25230",
    "end": "28380"
  },
  {
    "text": "database it is MIT licensed it's written",
    "start": "28380",
    "end": "32880"
  },
  {
    "text": "and go it has a query language right now",
    "start": "32880",
    "end": "35579"
  },
  {
    "text": "that looks kind of like SQL I'll show an",
    "start": "35579",
    "end": "37710"
  },
  {
    "text": "example of that in a second",
    "start": "37710",
    "end": "39870"
  },
  {
    "text": "a few years ago we decided to write our",
    "start": "39870",
    "end": "43350"
  },
  {
    "text": "own storage engine from scratch which is",
    "start": "43350",
    "end": "47370"
  },
  {
    "text": "a difficult undertaking we call it the",
    "start": "47370",
    "end": "50280"
  },
  {
    "text": "time series merge tree it's basically",
    "start": "50280",
    "end": "53520"
  },
  {
    "text": "like an LSM tree but specifically",
    "start": "53520",
    "end": "55559"
  },
  {
    "text": "designed for our use case and actually",
    "start": "55559",
    "end": "58559"
  },
  {
    "text": "the database is kind of like two",
    "start": "58559",
    "end": "59940"
  },
  {
    "text": "databases in one one part of the",
    "start": "59940",
    "end": "62609"
  },
  {
    "text": "database is an inverted index that",
    "start": "62609",
    "end": "64739"
  },
  {
    "text": "matches metadata that described time",
    "start": "64739",
    "end": "67500"
  },
  {
    "text": "series with the underlying time series",
    "start": "67500",
    "end": "69180"
  },
  {
    "text": "itself and then the other is the actual",
    "start": "69180",
    "end": "71400"
  },
  {
    "text": "compressed time series storage which on",
    "start": "71400",
    "end": "75360"
  },
  {
    "text": "disk it looks very much like a columnar",
    "start": "75360",
    "end": "77400"
  },
  {
    "text": "store and we have we use different types",
    "start": "77400",
    "end": "79890"
  },
  {
    "text": "of compression depending on the shape of",
    "start": "79890",
    "end": "81659"
  },
  {
    "text": "the data and then finally we have a",
    "start": "81659",
    "end": "83909"
  },
  {
    "text": "commercial offering which is our high",
    "start": "83909",
    "end": "87479"
  },
  {
    "text": "availability or scale-out clustering",
    "start": "87479",
    "end": "89430"
  },
  {
    "text": "stuff so the data model of influx looks",
    "start": "89430",
    "end": "92520"
  },
  {
    "start": "90000",
    "end": "150000"
  },
  {
    "text": "like this you have a measurement name",
    "start": "92520",
    "end": "94530"
  },
  {
    "text": "which is a string you have tags which",
    "start": "94530",
    "end": "96720"
  },
  {
    "text": "are key value pairs were the values or",
    "start": "96720",
    "end": "98280"
  },
  {
    "text": "strings and this is all indexed data and",
    "start": "98280",
    "end": "100890"
  },
  {
    "text": "then you have a set of fields",
    "start": "100890",
    "end": "103110"
  },
  {
    "text": "so with Prometheus measurement is",
    "start": "103110",
    "end": "106320"
  },
  {
    "text": "basically like metric and tags are",
    "start": "106320",
    "end": "108149"
  },
  {
    "text": "basically the same the one thing that we",
    "start": "108149",
    "end": "110250"
  },
  {
    "text": "have different that Prometheus doesn't",
    "start": "110250",
    "end": "111810"
  },
  {
    "text": "have is you can have multiple fields",
    "start": "111810",
    "end": "113869"
  },
  {
    "text": "with an individual data point and then",
    "start": "113869",
    "end": "116939"
  },
  {
    "text": "the other key difference is our time",
    "start": "116939",
    "end": "119700"
  },
  {
    "text": "stamps are in nanoseconds",
    "start": "119700",
    "end": "121380"
  },
  {
    "text": "whereas Prometheus they're in",
    "start": "121380",
    "end": "122700"
  },
  {
    "text": "milliseconds I was actually pretty",
    "start": "122700",
    "end": "126509"
  },
  {
    "text": "surprised the first time I heard of",
    "start": "126509",
    "end": "128039"
  },
  {
    "text": "people using nanosecond stuff",
    "start": "128039",
    "end": "129569"
  },
  {
    "text": "but we do have people who use the",
    "start": "129569",
    "end": "131970"
  },
  {
    "text": "nanosecond precision",
    "start": "131970",
    "end": "134130"
  },
  {
    "text": "time stamps so basically like people and",
    "start": "134130",
    "end": "137250"
  },
  {
    "text": "like high-frequency trading where they",
    "start": "137250",
    "end": "138720"
  },
  {
    "text": "have atomic clocks that guarantee there",
    "start": "138720",
    "end": "141150"
  },
  {
    "text": "are less than 300 nanoseconds worth of",
    "start": "141150",
    "end": "143310"
  },
  {
    "text": "clock drift globally they actually track",
    "start": "143310",
    "end": "145740"
  },
  {
    "text": "the performance of their network",
    "start": "145740",
    "end": "147180"
  },
  {
    "text": "hardware at that level so one thing",
    "start": "147180",
    "end": "151620"
  },
  {
    "start": "150000",
    "end": "176000"
  },
  {
    "text": "that's a little bit different about",
    "start": "151620",
    "end": "152550"
  },
  {
    "text": "influx from other time series databases",
    "start": "152550",
    "end": "154950"
  },
  {
    "text": "is we actually support multiple data",
    "start": "154950",
    "end": "156660"
  },
  {
    "text": "types it's not just floats so float 64",
    "start": "156660",
    "end": "160170"
  },
  {
    "text": "in 64 you and 64 mullions and strings so",
    "start": "160170",
    "end": "164430"
  },
  {
    "text": "strings open up some interesting use",
    "start": "164430",
    "end": "167220"
  },
  {
    "text": "cases around basically keeping log data",
    "start": "167220",
    "end": "169560"
  },
  {
    "text": "inside in flux which is indexed using",
    "start": "169560",
    "end": "172860"
  },
  {
    "text": "the same metadata as your time series",
    "start": "172860",
    "end": "174900"
  },
  {
    "text": "data so I mentioned we have a query",
    "start": "174900",
    "end": "178080"
  },
  {
    "start": "176000",
    "end": "202000"
  },
  {
    "text": "language that looks kind of like SQL",
    "start": "178080",
    "end": "179850"
  },
  {
    "text": "that's this we're grabbing the 90th",
    "start": "179850",
    "end": "182790"
  },
  {
    "text": "percentile from the CPU measurement for",
    "start": "182790",
    "end": "185010"
  },
  {
    "text": "the last 12 hours of time from the",
    "start": "185010",
    "end": "187770"
  },
  {
    "text": "western region and we're grouping that",
    "start": "187770",
    "end": "189930"
  },
  {
    "text": "in 10-minute buckets and getting a",
    "start": "189930",
    "end": "193080"
  },
  {
    "text": "separate series for each individual host",
    "start": "193080",
    "end": "196280"
  },
  {
    "text": "so the the first thing we did to do",
    "start": "196280",
    "end": "200670"
  },
  {
    "text": "integration with prometheus was",
    "start": "200670",
    "end": "203060"
  },
  {
    "start": "202000",
    "end": "221000"
  },
  {
    "text": "basically adding support for from these",
    "start": "203060",
    "end": "205260"
  },
  {
    "text": "Prometheus's remote read and write API",
    "start": "205260",
    "end": "207959"
  },
  {
    "text": "so from easiest has a thing where it can",
    "start": "207959",
    "end": "210900"
  },
  {
    "text": "actually replicate its data that it's",
    "start": "210900",
    "end": "213209"
  },
  {
    "text": "scraping into remote targets and it can",
    "start": "213209",
    "end": "217080"
  },
  {
    "text": "also query that data out of remote",
    "start": "217080",
    "end": "219150"
  },
  {
    "text": "targets as well so one question I got",
    "start": "219150",
    "end": "223200"
  },
  {
    "start": "221000",
    "end": "237000"
  },
  {
    "text": "asked is like why would we do this it",
    "start": "223200",
    "end": "224910"
  },
  {
    "text": "seems like Prometheus and influx are",
    "start": "224910",
    "end": "226320"
  },
  {
    "text": "competing projects so why would we try",
    "start": "226320",
    "end": "228480"
  },
  {
    "text": "to integrate them",
    "start": "228480",
    "end": "229380"
  },
  {
    "text": "I think there's there there is some room",
    "start": "229380",
    "end": "232200"
  },
  {
    "text": "for them to play well together",
    "start": "232200",
    "end": "233760"
  },
  {
    "text": "and there are certain cases where it",
    "start": "233760",
    "end": "236160"
  },
  {
    "text": "might make sense to run both so the",
    "start": "236160",
    "end": "238680"
  },
  {
    "start": "237000",
    "end": "255000"
  },
  {
    "text": "first obvious is long-term storage of",
    "start": "238680",
    "end": "240600"
  },
  {
    "text": "data",
    "start": "240600",
    "end": "241190"
  },
  {
    "text": "we're built like our goal is to be a",
    "start": "241190",
    "end": "243989"
  },
  {
    "text": "database whereas I think of Prometheus",
    "start": "243989",
    "end": "246060"
  },
  {
    "text": "more as a monitoring system so if you",
    "start": "246060",
    "end": "250230"
  },
  {
    "text": "want a guaranteed long-term data store",
    "start": "250230",
    "end": "252269"
  },
  {
    "text": "you can replicate all your Prometheus",
    "start": "252269",
    "end": "254430"
  },
  {
    "text": "data out another nice thing is if you're",
    "start": "254430",
    "end": "257130"
  },
  {
    "start": "255000",
    "end": "268000"
  },
  {
    "text": "replicating it out you can have",
    "start": "257130",
    "end": "258510"
  },
  {
    "text": "basically queries that span data that is",
    "start": "258510",
    "end": "261510"
  },
  {
    "text": "collected from multiple Prometheus",
    "start": "261510",
    "end": "263130"
  },
  {
    "text": "servers right so you can basically",
    "start": "263130",
    "end": "264860"
  },
  {
    "text": "effectively get federated queries but",
    "start": "264860",
    "end": "267270"
  },
  {
    "text": "of a single source and the other nice",
    "start": "267270",
    "end": "269910"
  },
  {
    "start": "268000",
    "end": "288000"
  },
  {
    "text": "thing is that obviously we support push",
    "start": "269910",
    "end": "272550"
  },
  {
    "text": "as well so you you can do push as well",
    "start": "272550",
    "end": "276360"
  },
  {
    "text": "as pull based data and for some things",
    "start": "276360",
    "end": "278280"
  },
  {
    "text": "like push is actually really nice right",
    "start": "278280",
    "end": "280379"
  },
  {
    "text": "for things that are more more like",
    "start": "280379",
    "end": "282509"
  },
  {
    "text": "events as opposed to samples that are",
    "start": "282509",
    "end": "285180"
  },
  {
    "text": "collected at fixed intervals of time so",
    "start": "285180",
    "end": "289020"
  },
  {
    "start": "288000",
    "end": "321000"
  },
  {
    "text": "the other nice thing is you can have",
    "start": "289020",
    "end": "291539"
  },
  {
    "text": "this concept of like ephemeral",
    "start": "291539",
    "end": "293190"
  },
  {
    "text": "Prometheus right as anybody who is",
    "start": "293190",
    "end": "296909"
  },
  {
    "text": "running kubernetes and production is",
    "start": "296909",
    "end": "298710"
  },
  {
    "text": "painfully aware state in kubernetes",
    "start": "298710",
    "end": "300599"
  },
  {
    "text": "sucks it's much much better if you don't",
    "start": "300599",
    "end": "303810"
  },
  {
    "text": "have to deal with state so if you can",
    "start": "303810",
    "end": "305909"
  },
  {
    "text": "just deploy your Prometheus servers have",
    "start": "305909",
    "end": "307949"
  },
  {
    "text": "like each application team run their own",
    "start": "307949",
    "end": "309810"
  },
  {
    "text": "Prometheus server but have a central",
    "start": "309810",
    "end": "312060"
  },
  {
    "text": "place where they can all write their",
    "start": "312060",
    "end": "313349"
  },
  {
    "text": "data up into right so then you can run",
    "start": "313349",
    "end": "315990"
  },
  {
    "text": "those as basically stateless",
    "start": "315990",
    "end": "317819"
  },
  {
    "text": "applications and you can just have the",
    "start": "317819",
    "end": "319349"
  },
  {
    "text": "operator make sure that one's always",
    "start": "319349",
    "end": "320699"
  },
  {
    "text": "running so let's get into the remote",
    "start": "320699",
    "end": "324810"
  },
  {
    "start": "321000",
    "end": "349000"
  },
  {
    "text": "read/write API so basically to turn that",
    "start": "324810",
    "end": "327509"
  },
  {
    "text": "on first you have to go into your",
    "start": "327509",
    "end": "329219"
  },
  {
    "text": "Prometheus config and tell it where to",
    "start": "329219",
    "end": "331349"
  },
  {
    "text": "go so this is the endpoint here I'm just",
    "start": "331349",
    "end": "333539"
  },
  {
    "text": "pointing at my local host because I was",
    "start": "333539",
    "end": "335280"
  },
  {
    "text": "doing development there so that and this",
    "start": "335280",
    "end": "337560"
  },
  {
    "text": "is an endpoint inside in flux DB and",
    "start": "337560",
    "end": "340199"
  },
  {
    "text": "that tells Prometheus to write the data",
    "start": "340199",
    "end": "341639"
  },
  {
    "text": "there and also when you do a query it",
    "start": "341639",
    "end": "344130"
  },
  {
    "text": "will pull data from there as well and",
    "start": "344130",
    "end": "345690"
  },
  {
    "text": "combine it with the Prometheus the data",
    "start": "345690",
    "end": "347699"
  },
  {
    "text": "that Prometheus actually has so for us",
    "start": "347699",
    "end": "350580"
  },
  {
    "text": "the writes are kind of easy to think",
    "start": "350580",
    "end": "352620"
  },
  {
    "text": "about right how do we translate the the",
    "start": "352620",
    "end": "355620"
  },
  {
    "text": "Prometheus data model into the influx",
    "start": "355620",
    "end": "357300"
  },
  {
    "text": "data model well we could just say the",
    "start": "357300",
    "end": "359520"
  },
  {
    "text": "measurement name is the metric and that",
    "start": "359520",
    "end": "361460"
  },
  {
    "text": "field is just something we'll call value",
    "start": "361460",
    "end": "363900"
  },
  {
    "text": "right so we won't everything will just",
    "start": "363900",
    "end": "365909"
  },
  {
    "text": "always have one field but the tricky",
    "start": "365909",
    "end": "370710"
  },
  {
    "start": "368000",
    "end": "386000"
  },
  {
    "text": "part is there there are things that you",
    "start": "370710",
    "end": "373139"
  },
  {
    "text": "can do in the Prometheus queries right",
    "start": "373139",
    "end": "375330"
  },
  {
    "text": "so here's an example Prometheus query",
    "start": "375330",
    "end": "377099"
  },
  {
    "text": "where we have a couple of different",
    "start": "377099",
    "end": "379800"
  },
  {
    "text": "natures and we have a regex matcher and",
    "start": "379800",
    "end": "382889"
  },
  {
    "text": "then we have a not equals matcher so for",
    "start": "382889",
    "end": "388050"
  },
  {
    "start": "386000",
    "end": "398000"
  },
  {
    "text": "for influx their current query language",
    "start": "388050",
    "end": "390779"
  },
  {
    "text": "for influx QL the not equals matches are",
    "start": "390779",
    "end": "393960"
  },
  {
    "text": "actually problematic we don't actually",
    "start": "393960",
    "end": "395430"
  },
  {
    "text": "support that against the measurement",
    "start": "395430",
    "end": "396960"
  },
  {
    "text": "name so here's what that looks like in",
    "start": "396960",
    "end": "400500"
  },
  {
    "text": "the premies",
    "start": "400500",
    "end": "401130"
  },
  {
    "text": "is code they basically have like a",
    "start": "401130",
    "end": "402420"
  },
  {
    "text": "protobuf object that specifies what a",
    "start": "402420",
    "end": "405060"
  },
  {
    "text": "query is you have the start timestamp",
    "start": "405060",
    "end": "406800"
  },
  {
    "text": "you have the intent timestamp and you",
    "start": "406800",
    "end": "408870"
  },
  {
    "text": "have a set of matches and the matches",
    "start": "408870",
    "end": "410700"
  },
  {
    "text": "are always combined basically using a",
    "start": "410700",
    "end": "412110"
  },
  {
    "text": "logical and our problem was we had to",
    "start": "412110",
    "end": "417120"
  },
  {
    "text": "figure out how to support these two use",
    "start": "417120",
    "end": "419070"
  },
  {
    "text": "cases which we couldn't do with the",
    "start": "419070",
    "end": "423000"
  },
  {
    "text": "influx query language out of the box but",
    "start": "423000",
    "end": "427380"
  },
  {
    "text": "we can do it against tags so essentially",
    "start": "427380",
    "end": "430980"
  },
  {
    "text": "when I originally wrote this feature",
    "start": "430980",
    "end": "432150"
  },
  {
    "text": "this was back in September I just did",
    "start": "432150",
    "end": "437340"
  },
  {
    "start": "436000",
    "end": "480000"
  },
  {
    "text": "this kind of like ghetto hack right",
    "start": "437340",
    "end": "439590"
  },
  {
    "text": "so I basically made the measurement name",
    "start": "439590",
    "end": "441570"
  },
  {
    "text": "and the field name kind of no-ops",
    "start": "441570",
    "end": "443910"
  },
  {
    "text": "I just shoehorned all the data into tags",
    "start": "443910",
    "end": "446550"
  },
  {
    "text": "right which is actually when you look at",
    "start": "446550",
    "end": "449280"
  },
  {
    "text": "what Prometheus does under the hood",
    "start": "449280",
    "end": "450600"
  },
  {
    "text": "that's also what they do like a metric",
    "start": "450600",
    "end": "453660"
  },
  {
    "text": "name is actually just a special tag",
    "start": "453660",
    "end": "455490"
  },
  {
    "text": "called underscore underscore name",
    "start": "455490",
    "end": "457110"
  },
  {
    "text": "underscore underscore right under the",
    "start": "457110",
    "end": "460140"
  },
  {
    "text": "covers they they work with it like it's",
    "start": "460140",
    "end": "462150"
  },
  {
    "text": "a tag so essentially like that's how I",
    "start": "462150",
    "end": "464760"
  },
  {
    "text": "wrote the date that's how I structured",
    "start": "464760",
    "end": "466590"
  },
  {
    "text": "the schema to make this work and my",
    "start": "466590",
    "end": "469770"
  },
  {
    "text": "thinking at the time was that this would",
    "start": "469770",
    "end": "472140"
  },
  {
    "text": "be future proof work that would work",
    "start": "472140",
    "end": "474690"
  },
  {
    "text": "well with what I had planned for 2.0",
    "start": "474690",
    "end": "477510"
  },
  {
    "text": "version of influx right the the new",
    "start": "477510",
    "end": "479520"
  },
  {
    "text": "query language that we're developing and",
    "start": "479520",
    "end": "481260"
  },
  {
    "start": "480000",
    "end": "518000"
  },
  {
    "text": "the and the the new stuff that we're",
    "start": "481260",
    "end": "482850"
  },
  {
    "text": "building there but the problem is like",
    "start": "482850",
    "end": "486150"
  },
  {
    "text": "it's great if you're just using",
    "start": "486150",
    "end": "487950"
  },
  {
    "text": "Prometheus to query the data out of that",
    "start": "487950",
    "end": "490010"
  },
  {
    "text": "influx server but if you want to query",
    "start": "490010",
    "end": "492720"
  },
  {
    "text": "the influx server directly having that",
    "start": "492720",
    "end": "495210"
  },
  {
    "text": "schema kind of sucks because you end up",
    "start": "495210",
    "end": "497130"
  },
  {
    "text": "not you end up not using the measurement",
    "start": "497130",
    "end": "499980"
  },
  {
    "text": "name at all not using the field and",
    "start": "499980",
    "end": "501480"
  },
  {
    "text": "that's good like descriptive stuff that",
    "start": "501480",
    "end": "503970"
  },
  {
    "text": "you want to use to describe your data so",
    "start": "503970",
    "end": "506360"
  },
  {
    "text": "let me talk really quickly about the",
    "start": "506360",
    "end": "509340"
  },
  {
    "text": "work that we've been doing on 2.0 that",
    "start": "509340",
    "end": "512130"
  },
  {
    "text": "has enabled us to make something",
    "start": "512130",
    "end": "515490"
  },
  {
    "text": "slightly better than what I done in",
    "start": "515490",
    "end": "517200"
  },
  {
    "text": "September so the first big thing that",
    "start": "517200",
    "end": "519719"
  },
  {
    "start": "518000",
    "end": "554000"
  },
  {
    "text": "we're doing is we're creating a new",
    "start": "519719",
    "end": "521789"
  },
  {
    "text": "query language which is great another",
    "start": "521789",
    "end": "524460"
  },
  {
    "text": "query language I have a whole talk about",
    "start": "524460",
    "end": "527970"
  },
  {
    "text": "this one that's a separate thing but I",
    "start": "527970",
    "end": "531680"
  },
  {
    "text": "that",
    "start": "531680",
    "end": "533480"
  },
  {
    "text": "when working with time series data",
    "start": "533480",
    "end": "535880"
  },
  {
    "text": "sequels an abstraction that is kind of",
    "start": "535880",
    "end": "537470"
  },
  {
    "text": "clunky right time series isn't really",
    "start": "537470",
    "end": "540080"
  },
  {
    "text": "sets so I think the the abstraction that",
    "start": "540080",
    "end": "542780"
  },
  {
    "text": "works really really well is a functional",
    "start": "542780",
    "end": "544610"
  },
  {
    "text": "style very much like graphite I think",
    "start": "544610",
    "end": "547070"
  },
  {
    "text": "that's one thing that graphite did",
    "start": "547070",
    "end": "548270"
  },
  {
    "text": "really well so the new query language",
    "start": "548270",
    "end": "551060"
  },
  {
    "text": "that we're designing is a new functional",
    "start": "551060",
    "end": "553010"
  },
  {
    "text": "language but in addition to a new",
    "start": "553010",
    "end": "555230"
  },
  {
    "text": "language we're also at the same time",
    "start": "555230",
    "end": "557060"
  },
  {
    "text": "creating a new execution engine and one",
    "start": "557060",
    "end": "560780"
  },
  {
    "start": "559000",
    "end": "583000"
  },
  {
    "text": "of the goals on this work is we want",
    "start": "560780",
    "end": "563660"
  },
  {
    "text": "addy couple storage from compute write",
    "start": "563660",
    "end": "566780"
  },
  {
    "text": "computers like the query processing",
    "start": "566780",
    "end": "568400"
  },
  {
    "text": "workloads right and the reason we want",
    "start": "568400",
    "end": "571190"
  },
  {
    "text": "to do that is because we want to be able",
    "start": "571190",
    "end": "572600"
  },
  {
    "text": "to iterate on the language quickly",
    "start": "572600",
    "end": "573860"
  },
  {
    "text": "without putting the data at risk right",
    "start": "573860",
    "end": "577040"
  },
  {
    "text": "because there's it's it's a very high",
    "start": "577040",
    "end": "580040"
  },
  {
    "text": "cost to update your data plane it's less",
    "start": "580040",
    "end": "583400"
  },
  {
    "start": "583000",
    "end": "601000"
  },
  {
    "text": "cost to update an application tier",
    "start": "583400",
    "end": "586100"
  },
  {
    "text": "that's basically stateless right so we",
    "start": "586100",
    "end": "587720"
  },
  {
    "text": "can iterate and deploy on these query",
    "start": "587720",
    "end": "589190"
  },
  {
    "text": "processors and have a much like higher",
    "start": "589190",
    "end": "592580"
  },
  {
    "text": "like much more frequent releases there",
    "start": "592580",
    "end": "595070"
  },
  {
    "text": "that don't put the storage tier at risk",
    "start": "595070",
    "end": "597380"
  },
  {
    "text": "and then the other nice thing is you can",
    "start": "597380",
    "end": "600320"
  },
  {
    "text": "scale those independently so this is",
    "start": "600320",
    "end": "602750"
  },
  {
    "start": "601000",
    "end": "615000"
  },
  {
    "text": "very similar to how Amazon Athena works",
    "start": "602750",
    "end": "604670"
  },
  {
    "text": "so Athena is basically the Presto sequel",
    "start": "604670",
    "end": "608090"
  },
  {
    "text": "engine on top of s3 and you pay for",
    "start": "608090",
    "end": "611180"
  },
  {
    "text": "storage which is a 3 and you pay for",
    "start": "611180",
    "end": "613160"
  },
  {
    "text": "compute which is just the query",
    "start": "613160",
    "end": "614750"
  },
  {
    "text": "processing the other nice property you",
    "start": "614750",
    "end": "617990"
  },
  {
    "start": "615000",
    "end": "704000"
  },
  {
    "text": "get out of this is you can trivially",
    "start": "617990",
    "end": "620240"
  },
  {
    "text": "create workload isolation right if it's",
    "start": "620240",
    "end": "622790"
  },
  {
    "text": "if the query processor is a shared",
    "start": "622790",
    "end": "624500"
  },
  {
    "text": "nothing system you can spin it up in a",
    "start": "624500",
    "end": "627440"
  },
  {
    "text": "new container you can set resource",
    "start": "627440",
    "end": "629030"
  },
  {
    "text": "limits on it right it's it's nice",
    "start": "629030",
    "end": "632540"
  },
  {
    "text": "because if you're trying to design a",
    "start": "632540",
    "end": "634970"
  },
  {
    "text": "multi-tenant system one you get that",
    "start": "634970",
    "end": "637070"
  },
  {
    "text": "workload isolation but even if you don't",
    "start": "637070",
    "end": "639080"
  },
  {
    "text": "have a multi-tenant system what I",
    "start": "639080",
    "end": "641000"
  },
  {
    "text": "frequently see is data scientists will",
    "start": "641000",
    "end": "644000"
  },
  {
    "text": "have a separate production cluster than",
    "start": "644000",
    "end": "646730"
  },
  {
    "text": "the actual prod and the reason they do",
    "start": "646730",
    "end": "649130"
  },
  {
    "text": "that is because their their query",
    "start": "649130",
    "end": "650900"
  },
  {
    "text": "workloads are kind of crazy and they",
    "start": "650900",
    "end": "652340"
  },
  {
    "text": "want to isolate that but it sucks to",
    "start": "652340",
    "end": "655100"
  },
  {
    "text": "have to replicate an entire product",
    "start": "655100",
    "end": "656870"
  },
  {
    "text": "production infrastructure just to",
    "start": "656870",
    "end": "659240"
  },
  {
    "text": "isolate the data science query workloads",
    "start": "659240",
    "end": "661040"
  },
  {
    "text": "so our goal here is that we don't have",
    "start": "661040",
    "end": "663560"
  },
  {
    "text": "to duplicate the storage piece but we",
    "start": "663560",
    "end": "665720"
  },
  {
    "text": "can still",
    "start": "665720",
    "end": "666710"
  },
  {
    "text": "spin up new stuff on the fly for the",
    "start": "666710",
    "end": "669230"
  },
  {
    "text": "data scientists to work and not you know",
    "start": "669230",
    "end": "671480"
  },
  {
    "text": "hit prod and bring it down or anything",
    "start": "671480",
    "end": "673820"
  },
  {
    "text": "like that so as part of the work for AF",
    "start": "673820",
    "end": "678230"
  },
  {
    "text": "QL and this new execution engine one",
    "start": "678230",
    "end": "680750"
  },
  {
    "text": "thing we had to do was we had to",
    "start": "680750",
    "end": "682280"
  },
  {
    "text": "basically create a new like lower level",
    "start": "682280",
    "end": "686060"
  },
  {
    "text": "like query tier that works with the",
    "start": "686060",
    "end": "688460"
  },
  {
    "text": "database so essentially we have a new",
    "start": "688460",
    "end": "690350"
  },
  {
    "text": "like protocol that we have it's",
    "start": "690350",
    "end": "692090"
  },
  {
    "text": "basically just TCP and protobufs right",
    "start": "692090",
    "end": "695960"
  },
  {
    "text": "now we're actually going to be switching",
    "start": "695960",
    "end": "697250"
  },
  {
    "text": "it to use Apache Aero is the data",
    "start": "697250",
    "end": "699170"
  },
  {
    "text": "interchange format but it's much more",
    "start": "699170",
    "end": "701210"
  },
  {
    "text": "primitive than in flux QL basically it's",
    "start": "701210",
    "end": "705290"
  },
  {
    "start": "704000",
    "end": "813000"
  },
  {
    "text": "it looks more like those Prometheus",
    "start": "705290",
    "end": "706970"
  },
  {
    "text": "mattress right you have a start time you",
    "start": "706970",
    "end": "708500"
  },
  {
    "text": "have an end time it can pull back the",
    "start": "708500",
    "end": "710300"
  },
  {
    "text": "data and then it can send it to the",
    "start": "710300",
    "end": "711830"
  },
  {
    "text": "query processor we also have stuff where",
    "start": "711830",
    "end": "714020"
  },
  {
    "text": "we're going to be pushing down",
    "start": "714020",
    "end": "714830"
  },
  {
    "text": "processing as well so essentially we can",
    "start": "714830",
    "end": "717770"
  },
  {
    "text": "do you know if you're doing you know if",
    "start": "717770",
    "end": "720500"
  },
  {
    "text": "you're doing like min or max in certain",
    "start": "720500",
    "end": "723140"
  },
  {
    "text": "buckets of time you can compute those",
    "start": "723140",
    "end": "725300"
  },
  {
    "text": "locally on the node and then have the",
    "start": "725300",
    "end": "727790"
  },
  {
    "text": "query processor node basically just",
    "start": "727790",
    "end": "729770"
  },
  {
    "text": "combine the results so with that work",
    "start": "729770",
    "end": "734930"
  },
  {
    "text": "that went in that work is in the 1.5",
    "start": "734930",
    "end": "738200"
  },
  {
    "text": "release of influx DB which we cut about",
    "start": "738200",
    "end": "740450"
  },
  {
    "text": "a month ago but with that work I was",
    "start": "740450",
    "end": "743270"
  },
  {
    "text": "able to update the Prometheus stuff so",
    "start": "743270",
    "end": "745850"
  },
  {
    "text": "that instead of using the influx QL",
    "start": "745850",
    "end": "748010"
  },
  {
    "text": "query engine I could just bypass it and",
    "start": "748010",
    "end": "750890"
  },
  {
    "text": "I this this new storage query tier like",
    "start": "750890",
    "end": "754580"
  },
  {
    "text": "works in a way where I can actually now",
    "start": "754580",
    "end": "757220"
  },
  {
    "text": "just have the measurement name be the",
    "start": "757220",
    "end": "759830"
  },
  {
    "text": "metric name so that I can go to my",
    "start": "759830",
    "end": "761960"
  },
  {
    "text": "database and I can say this is the info",
    "start": "761960",
    "end": "765110"
  },
  {
    "text": "influx command-line interface and I can",
    "start": "765110",
    "end": "767900"
  },
  {
    "text": "do Oh show my measurements I can see",
    "start": "767900",
    "end": "770390"
  },
  {
    "text": "obviously this is a bunch of stuff from",
    "start": "770390",
    "end": "772660"
  },
  {
    "text": "from Prometheus so this work isn't yet",
    "start": "772660",
    "end": "778220"
  },
  {
    "text": "in a build I have it on a branch right",
    "start": "778220",
    "end": "780440"
  },
  {
    "text": "now on the on the influx DB repo it's",
    "start": "780440",
    "end": "783680"
  },
  {
    "text": "there if you would like to play around",
    "start": "783680",
    "end": "784970"
  },
  {
    "text": "with it you can build it there there's",
    "start": "784970",
    "end": "786800"
  },
  {
    "text": "also an issue where I'm tracking it I'm",
    "start": "786800",
    "end": "788510"
  },
  {
    "text": "looking for feedback from people who use",
    "start": "788510",
    "end": "791480"
  },
  {
    "text": "it to see how it works so one of the",
    "start": "791480",
    "end": "797060"
  },
  {
    "text": "other big things that we're doing with",
    "start": "797060",
    "end": "798200"
  },
  {
    "text": "with our efforts around 200 Vince",
    "start": "798200",
    "end": "800450"
  },
  {
    "text": "is we're also trying to decouple the",
    "start": "800450",
    "end": "803660"
  },
  {
    "text": "idea of the query language from the",
    "start": "803660",
    "end": "806330"
  },
  {
    "text": "compute like the computer from the",
    "start": "806330",
    "end": "808370"
  },
  {
    "text": "processing engine so essentially what",
    "start": "808370",
    "end": "810650"
  },
  {
    "text": "we're doing is we have a parser that",
    "start": "810650",
    "end": "812810"
  },
  {
    "text": "will parse the language into a dag so",
    "start": "812810",
    "end": "815630"
  },
  {
    "start": "813000",
    "end": "830000"
  },
  {
    "text": "every single query in influx can be",
    "start": "815630",
    "end": "818480"
  },
  {
    "text": "represented as a directed acyclic graph",
    "start": "818480",
    "end": "822290"
  },
  {
    "text": "right and the idea there is that we'll",
    "start": "822290",
    "end": "825800"
  },
  {
    "text": "be able to have any number of query",
    "start": "825800",
    "end": "827900"
  },
  {
    "text": "languages on top of this execution",
    "start": "827900",
    "end": "829730"
  },
  {
    "text": "engine right so obviously on the new",
    "start": "829730",
    "end": "831860"
  },
  {
    "start": "830000",
    "end": "923000"
  },
  {
    "text": "execution engine we have to build",
    "start": "831860",
    "end": "833300"
  },
  {
    "text": "support for influx q ow",
    "start": "833300",
    "end": "834830"
  },
  {
    "text": "right for better or worse we have to",
    "start": "834830",
    "end": "836780"
  },
  {
    "text": "continue to support that because a lot",
    "start": "836780",
    "end": "838130"
  },
  {
    "text": "of people do love it even though I think",
    "start": "838130",
    "end": "840320"
  },
  {
    "text": "the functional style is better we also",
    "start": "840320",
    "end": "843350"
  },
  {
    "text": "want to build support for tic script",
    "start": "843350",
    "end": "845000"
  },
  {
    "text": "which is the language that we designed",
    "start": "845000",
    "end": "847310"
  },
  {
    "text": "for capacitor which is like query",
    "start": "847310",
    "end": "849080"
  },
  {
    "text": "processing and stuff like that but the",
    "start": "849080",
    "end": "851000"
  },
  {
    "text": "idea is that I fql is going to be the",
    "start": "851000",
    "end": "853970"
  },
  {
    "text": "one language that unifies the platform",
    "start": "853970",
    "end": "856160"
  },
  {
    "text": "as a whole whether you're doing",
    "start": "856160",
    "end": "857350"
  },
  {
    "text": "interactive batch queries or you're",
    "start": "857350",
    "end": "860420"
  },
  {
    "text": "doing background processing or ETL tasks",
    "start": "860420",
    "end": "863060"
  },
  {
    "text": "or monitoring alerting and then ideally",
    "start": "863060",
    "end": "865250"
  },
  {
    "text": "what we'd like to do later this year is",
    "start": "865250",
    "end": "867140"
  },
  {
    "text": "we like to add a prom ql layer on top of",
    "start": "867140",
    "end": "870140"
  },
  {
    "text": "it so you could actually just issue prom",
    "start": "870140",
    "end": "871910"
  },
  {
    "text": "ql queries to an influx server and it'll",
    "start": "871910",
    "end": "873980"
  },
  {
    "text": "know what to do and who knows maybe",
    "start": "873980",
    "end": "876080"
  },
  {
    "text": "other other query languages will pop up",
    "start": "876080",
    "end": "878570"
  },
  {
    "text": "as well the the thing about query",
    "start": "878570",
    "end": "881660"
  },
  {
    "text": "language design language design in",
    "start": "881660",
    "end": "884150"
  },
  {
    "text": "general the thing that I realized is",
    "start": "884150",
    "end": "887090"
  },
  {
    "text": "it's it's really like an aesthetic thing",
    "start": "887090",
    "end": "889390"
  },
  {
    "text": "you can get a group of engineers",
    "start": "889390",
    "end": "891980"
  },
  {
    "text": "reasonable people to disagree about",
    "start": "891980",
    "end": "894650"
  },
  {
    "text": "what's good in language design and they",
    "start": "894650",
    "end": "896990"
  },
  {
    "text": "could all be right at the same time but",
    "start": "896990",
    "end": "899930"
  },
  {
    "text": "it's a matter of aesthetics and what you",
    "start": "899930",
    "end": "901310"
  },
  {
    "text": "prefer to work with so in my ideal world",
    "start": "901310",
    "end": "904370"
  },
  {
    "text": "we can have languages that some people",
    "start": "904370",
    "end": "907220"
  },
  {
    "text": "like working with that feel more like",
    "start": "907220",
    "end": "908720"
  },
  {
    "text": "expert languages or whatever and other",
    "start": "908720",
    "end": "910820"
  },
  {
    "text": "languages that are easier for beginner",
    "start": "910820",
    "end": "913310"
  },
  {
    "text": "use cases and stuff like that we want to",
    "start": "913310",
    "end": "916250"
  },
  {
    "text": "support as broad of a community as",
    "start": "916250",
    "end": "917930"
  },
  {
    "text": "possible and ultimately what we want to",
    "start": "917930",
    "end": "921110"
  },
  {
    "text": "do around influx and the projects that",
    "start": "921110",
    "end": "922640"
  },
  {
    "text": "we're building is we want to support the",
    "start": "922640",
    "end": "925280"
  },
  {
    "start": "923000",
    "end": "951000"
  },
  {
    "text": "Prometheus ecosystem as a whole right",
    "start": "925280",
    "end": "927500"
  },
  {
    "text": "because there's a whole lot of good work",
    "start": "927500",
    "end": "929330"
  },
  {
    "text": "that's going into you know it's not just",
    "start": "929330",
    "end": "931640"
  },
  {
    "text": "the Prometheus server itself",
    "start": "931640",
    "end": "934190"
  },
  {
    "text": "they're all the exporters right for",
    "start": "934190",
    "end": "936139"
  },
  {
    "text": "exposing metrics and and all that kind",
    "start": "936139",
    "end": "938389"
  },
  {
    "text": "of stuff there there are the the client",
    "start": "938389",
    "end": "941509"
  },
  {
    "text": "libraries that you use to instrument",
    "start": "941509",
    "end": "943519"
  },
  {
    "text": "your applications and I think that's all",
    "start": "943519",
    "end": "945649"
  },
  {
    "text": "good work and we would like to be able",
    "start": "945649",
    "end": "947060"
  },
  {
    "text": "to have our tools work seamlessly and",
    "start": "947060",
    "end": "950089"
  },
  {
    "text": "really well with those tools as well so",
    "start": "950089",
    "end": "952220"
  },
  {
    "start": "951000",
    "end": "973000"
  },
  {
    "text": "we already support scraping so Telegraph",
    "start": "952220",
    "end": "955850"
  },
  {
    "text": "is our collection agent it can scrape",
    "start": "955850",
    "end": "958160"
  },
  {
    "text": "Prometheus target's capacitor which is",
    "start": "958160",
    "end": "960649"
  },
  {
    "text": "our processing agent can also scrape",
    "start": "960649",
    "end": "962689"
  },
  {
    "text": "prometheus targets in my mind in the 2.0",
    "start": "962689",
    "end": "966439"
  },
  {
    "text": "version of the product we are going to",
    "start": "966439",
    "end": "968930"
  },
  {
    "text": "have all of that kind of built in out of",
    "start": "968930",
    "end": "971029"
  },
  {
    "text": "the box the other thing I'd like to see",
    "start": "971029",
    "end": "974899"
  },
  {
    "start": "973000",
    "end": "1002000"
  },
  {
    "text": "move forward is the efforts around open",
    "start": "974899",
    "end": "978379"
  },
  {
    "text": "metrics so basically this is creating a",
    "start": "978379",
    "end": "981230"
  },
  {
    "text": "standard that people can agree on for",
    "start": "981230",
    "end": "984410"
  },
  {
    "text": "basically defining metrics not sure how",
    "start": "984410",
    "end": "988100"
  },
  {
    "text": "far along that work is or if people can",
    "start": "988100",
    "end": "989930"
  },
  {
    "text": "agree on it but I would like to see that",
    "start": "989930",
    "end": "992569"
  },
  {
    "text": "actually get to some level of completion",
    "start": "992569",
    "end": "994490"
  },
  {
    "text": "where people can say okay this is good",
    "start": "994490",
    "end": "996439"
  },
  {
    "text": "enough for a v1 of this standard and",
    "start": "996439",
    "end": "998209"
  },
  {
    "text": "then we can kind of form around that so",
    "start": "998209",
    "end": "1003839"
  },
  {
    "start": "1002000",
    "end": "1024000"
  },
  {
    "text": "I'd like to close the talk with some",
    "start": "1003839",
    "end": "1007569"
  },
  {
    "text": "future work that we're thinking about",
    "start": "1007569",
    "end": "1008800"
  },
  {
    "text": "and I'm curious to get feedback from",
    "start": "1008800",
    "end": "1010870"
  },
  {
    "text": "people in the audience about which of",
    "start": "1010870",
    "end": "1013480"
  },
  {
    "text": "these pieces seem interesting or worth",
    "start": "1013480",
    "end": "1015790"
  },
  {
    "text": "pursuing",
    "start": "1015790",
    "end": "1016750"
  },
  {
    "text": "right so one thing I mentioned is we",
    "start": "1016750",
    "end": "1020170"
  },
  {
    "text": "want to decouple the query processing",
    "start": "1020170",
    "end": "1022540"
  },
  {
    "text": "from the storage tier and what will kind",
    "start": "1022540",
    "end": "1025780"
  },
  {
    "start": "1024000",
    "end": "1069000"
  },
  {
    "text": "of naturally rise from that is in theory",
    "start": "1025780",
    "end": "1029168"
  },
  {
    "text": "we could build connectors to Prometheus",
    "start": "1029169",
    "end": "1032048"
  },
  {
    "text": "servers so you could actually use the I",
    "start": "1032049",
    "end": "1033909"
  },
  {
    "text": "fql query processing tier to query any",
    "start": "1033909",
    "end": "1037808"
  },
  {
    "text": "number of Prometheus servers and influx",
    "start": "1037809",
    "end": "1040000"
  },
  {
    "text": "servers and actually combine those",
    "start": "1040000",
    "end": "1041319"
  },
  {
    "text": "results and potentially you could use a",
    "start": "1041319",
    "end": "1044020"
  },
  {
    "text": "fql to query Prometheus which you may or",
    "start": "1044020",
    "end": "1048130"
  },
  {
    "text": "may not want to do I guess depends on",
    "start": "1048130",
    "end": "1050049"
  },
  {
    "text": "how much you love prom QL but the idea",
    "start": "1050049",
    "end": "1053980"
  },
  {
    "text": "with this new this new engine in this",
    "start": "1053980",
    "end": "1056049"
  },
  {
    "text": "new language is the thing that we want",
    "start": "1056049",
    "end": "1058510"
  },
  {
    "text": "to achieve is want to do the same thing",
    "start": "1058510",
    "end": "1060730"
  },
  {
    "text": "for the query engine that we did for",
    "start": "1060730",
    "end": "1062770"
  },
  {
    "text": "telegraph so telegraph as a data",
    "start": "1062770",
    "end": "1064809"
  },
  {
    "text": "collector what we did was we defined a",
    "start": "1064809",
    "end": "1067840"
  },
  {
    "text": "clean",
    "start": "1067840",
    "end": "1068320"
  },
  {
    "text": "like there are input plugins there are",
    "start": "1068320",
    "end": "1072160"
  },
  {
    "start": "1069000",
    "end": "1109000"
  },
  {
    "text": "output plugins and what what we have",
    "start": "1072160",
    "end": "1074800"
  },
  {
    "text": "from a code perspective is we wanted to",
    "start": "1074800",
    "end": "1076660"
  },
  {
    "text": "design it so that new contributors could",
    "start": "1076660",
    "end": "1079630"
  },
  {
    "text": "write input plugins without having to",
    "start": "1079630",
    "end": "1081430"
  },
  {
    "text": "understand the entirety of the Telegraph",
    "start": "1081430",
    "end": "1083260"
  },
  {
    "text": "code base and this is the same thing",
    "start": "1083260",
    "end": "1085180"
  },
  {
    "text": "that I'd love to see in the query engine",
    "start": "1085180",
    "end": "1087220"
  },
  {
    "text": "itself which is new contributors can",
    "start": "1087220",
    "end": "1089530"
  },
  {
    "text": "come in and they don't have to",
    "start": "1089530",
    "end": "1090820"
  },
  {
    "text": "understand the the entirety of the",
    "start": "1090820",
    "end": "1092800"
  },
  {
    "text": "database and all these different complex",
    "start": "1092800",
    "end": "1095110"
  },
  {
    "text": "people pieces they would be able to",
    "start": "1095110",
    "end": "1098440"
  },
  {
    "text": "define input plugins right so input",
    "start": "1098440",
    "end": "1100810"
  },
  {
    "text": "plugins could be an influx server",
    "start": "1100810",
    "end": "1103150"
  },
  {
    "text": "it could be s3 it could be a sequel",
    "start": "1103150",
    "end": "1105370"
  },
  {
    "text": "server it could be Prometheus it could",
    "start": "1105370",
    "end": "1106660"
  },
  {
    "text": "be a third-party service anything you",
    "start": "1106660",
    "end": "1108940"
  },
  {
    "text": "can think of there's sets of functions",
    "start": "1108940",
    "end": "1111220"
  },
  {
    "start": "1109000",
    "end": "1171000"
  },
  {
    "text": "which are essentially transformations on",
    "start": "1111220",
    "end": "1113770"
  },
  {
    "text": "the data and ideally people would be",
    "start": "1113770",
    "end": "1117490"
  },
  {
    "text": "able to add new functions really really",
    "start": "1117490",
    "end": "1119140"
  },
  {
    "text": "easily and then finally there are output",
    "start": "1119140",
    "end": "1122770"
  },
  {
    "text": "plugins so this is for background",
    "start": "1122770",
    "end": "1125950"
  },
  {
    "text": "processing casts essentially but the",
    "start": "1125950",
    "end": "1128920"
  },
  {
    "text": "idea there is an out like obviously the",
    "start": "1128920",
    "end": "1131830"
  },
  {
    "text": "initial output plugin we have is pipe",
    "start": "1131830",
    "end": "1134290"
  },
  {
    "text": "the data back into influx right so you",
    "start": "1134290",
    "end": "1135910"
  },
  {
    "text": "could use it for monitoring and alerting",
    "start": "1135910",
    "end": "1137800"
  },
  {
    "text": "you could use it for down sampling your",
    "start": "1137800",
    "end": "1139990"
  },
  {
    "text": "data but you could just as easily say",
    "start": "1139990",
    "end": "1142330"
  },
  {
    "text": "have a Kafka output plug-in or an s3",
    "start": "1142330",
    "end": "1145090"
  },
  {
    "text": "output plug-in so you do a query and",
    "start": "1145090",
    "end": "1147250"
  },
  {
    "text": "instead of writing data back the influx",
    "start": "1147250",
    "end": "1149350"
  },
  {
    "text": "or returning results of the user in the",
    "start": "1149350",
    "end": "1151810"
  },
  {
    "text": "background it can write that result to",
    "start": "1151810",
    "end": "1153700"
  },
  {
    "text": "some other service one other thing that",
    "start": "1153700",
    "end": "1157540"
  },
  {
    "text": "I think is potentially interesting is I",
    "start": "1157540",
    "end": "1159700"
  },
  {
    "text": "don't I don't think the Prometheus",
    "start": "1159700",
    "end": "1162130"
  },
  {
    "text": "remote read/write API is very efficient",
    "start": "1162130",
    "end": "1164320"
  },
  {
    "text": "I think it was basically like a ghetto",
    "start": "1164320",
    "end": "1166390"
  },
  {
    "text": "hack that was done quickly and it's just",
    "start": "1166390",
    "end": "1169600"
  },
  {
    "text": "kind of grown from there what I think",
    "start": "1169600",
    "end": "1172510"
  },
  {
    "start": "1171000",
    "end": "1277000"
  },
  {
    "text": "might be interesting work is maybe using",
    "start": "1172510",
    "end": "1176050"
  },
  {
    "text": "Apache Aero as the data interchange",
    "start": "1176050",
    "end": "1178300"
  },
  {
    "text": "format so Apache Aero is basically it's",
    "start": "1178300",
    "end": "1182230"
  },
  {
    "text": "a standard for defining essentially",
    "start": "1182230",
    "end": "1184210"
  },
  {
    "text": "columnar data in memory like a memory",
    "start": "1184210",
    "end": "1186190"
  },
  {
    "text": "format Wes McKinney the guy who created",
    "start": "1186190",
    "end": "1189640"
  },
  {
    "text": "pandas is doing this to try and",
    "start": "1189640",
    "end": "1191770"
  },
  {
    "text": "standardize what data tools data",
    "start": "1191770",
    "end": "1194560"
  },
  {
    "text": "scientists use so that they can pass",
    "start": "1194560",
    "end": "1196450"
  },
  {
    "text": "data around without making copies of it",
    "start": "1196450",
    "end": "1199480"
  },
  {
    "text": "right because in data science like it's",
    "start": "1199480",
    "end": "1201100"
  },
  {
    "text": "common like you",
    "start": "1201100",
    "end": "1201789"
  },
  {
    "text": "query Adama the database you Marshall it",
    "start": "1201789",
    "end": "1203409"
  },
  {
    "text": "in one format then you do some",
    "start": "1203409",
    "end": "1205059"
  },
  {
    "text": "reformatting on it and then you can",
    "start": "1205059",
    "end": "1206379"
  },
  {
    "text": "process it in whatever what he's trying",
    "start": "1206379",
    "end": "1208509"
  },
  {
    "text": "to do with this is make it so that",
    "start": "1208509",
    "end": "1210249"
  },
  {
    "text": "there's a data interchange format so you",
    "start": "1210249",
    "end": "1212080"
  },
  {
    "text": "don't have to marshal it and unmarshal",
    "start": "1212080",
    "end": "1213999"
  },
  {
    "text": "it and reprocess it in whatever so the",
    "start": "1213999",
    "end": "1216549"
  },
  {
    "text": "idea is whether you're working in spark",
    "start": "1216549",
    "end": "1219489"
  },
  {
    "text": "or pandas or any of these other things",
    "start": "1219489",
    "end": "1222129"
  },
  {
    "text": "you can pass data around without having",
    "start": "1222129",
    "end": "1224799"
  },
  {
    "text": "to do all this expensive copying so I",
    "start": "1224799",
    "end": "1228460"
  },
  {
    "text": "think it would be interesting from a",
    "start": "1228460",
    "end": "1232149"
  },
  {
    "text": "Prometheus init influx perspective is",
    "start": "1232149",
    "end": "1234690"
  },
  {
    "text": "adding Apache arrow is basically a data",
    "start": "1234690",
    "end": "1238179"
  },
  {
    "text": "interchange format instead of what it",
    "start": "1238179",
    "end": "1239739"
  },
  {
    "text": "uses right now which is it's protobufs",
    "start": "1239739",
    "end": "1242830"
  },
  {
    "text": "over HTTP right and so we've already",
    "start": "1242830",
    "end": "1246820"
  },
  {
    "text": "started on the work on the arrow stuff",
    "start": "1246820",
    "end": "1248849"
  },
  {
    "text": "we actually there wasn't an official go",
    "start": "1248849",
    "end": "1252129"
  },
  {
    "text": "implementation of Apache arrow so we",
    "start": "1252129",
    "end": "1255070"
  },
  {
    "text": "started work on it and Wes had noticed",
    "start": "1255070",
    "end": "1257759"
  },
  {
    "text": "what we were doing and we officially",
    "start": "1257759",
    "end": "1260710"
  },
  {
    "text": "contributed it back to the ASF is like",
    "start": "1260710",
    "end": "1263320"
  },
  {
    "text": "the official go implementation it's",
    "start": "1263320",
    "end": "1265659"
  },
  {
    "text": "still not done there's still a lot of",
    "start": "1265659",
    "end": "1267039"
  },
  {
    "text": "work to be done on it but we're gonna",
    "start": "1267039",
    "end": "1269019"
  },
  {
    "text": "continue to push that forward and I",
    "start": "1269019",
    "end": "1270639"
  },
  {
    "text": "would like to see that potentially used",
    "start": "1270639",
    "end": "1272470"
  },
  {
    "text": "to trade data between Prometheus and",
    "start": "1272470",
    "end": "1276039"
  },
  {
    "text": "influx so that is all I have I plenty of",
    "start": "1276039",
    "end": "1281499"
  },
  {
    "text": "time for questions if people have any",
    "start": "1281499",
    "end": "1284940"
  },
  {
    "text": "all right but yes",
    "start": "1288659",
    "end": "1294450"
  },
  {
    "text": "yes so they yeah so the question was it",
    "start": "1319640",
    "end": "1329040"
  },
  {
    "text": "looks like for the remote right",
    "start": "1329040",
    "end": "1330180"
  },
  {
    "text": "interface Prometheus doesn't include",
    "start": "1330180",
    "end": "1331920"
  },
  {
    "text": "what the type of metric is is that a",
    "start": "1331920",
    "end": "1333870"
  },
  {
    "text": "histogram is it a gauge right it's a",
    "start": "1333870",
    "end": "1336360"
  },
  {
    "text": "counter we don't need that",
    "start": "1336360",
    "end": "1341250"
  },
  {
    "text": "I don't think Prometheus actually uses",
    "start": "1341250",
    "end": "1343200"
  },
  {
    "text": "that under the hood like it's defined as",
    "start": "1343200",
    "end": "1346980"
  },
  {
    "text": "metadata but I think it's kind of like",
    "start": "1346980",
    "end": "1348990"
  },
  {
    "text": "no op at this point I don't know if one",
    "start": "1348990",
    "end": "1351810"
  },
  {
    "text": "of the Prometheus developers is in the",
    "start": "1351810",
    "end": "1353250"
  },
  {
    "text": "room they may need to correct me but I",
    "start": "1353250",
    "end": "1355730"
  },
  {
    "text": "if I recall I don't think they actually",
    "start": "1355730",
    "end": "1358080"
  },
  {
    "text": "use that right now so but that's",
    "start": "1358080",
    "end": "1360450"
  },
  {
    "text": "probably something where if they did",
    "start": "1360450",
    "end": "1362280"
  },
  {
    "text": "start using it in the future we would",
    "start": "1362280",
    "end": "1363870"
  },
  {
    "text": "need to have that data so and that's I'm",
    "start": "1363870",
    "end": "1366210"
  },
  {
    "text": "saying is I think I think the there",
    "start": "1366210",
    "end": "1371070"
  },
  {
    "text": "could be a lot more work done on like",
    "start": "1371070",
    "end": "1373710"
  },
  {
    "text": "the standard around the remote read and",
    "start": "1373710",
    "end": "1375420"
  },
  {
    "text": "remote write stuff I think what was done",
    "start": "1375420",
    "end": "1377880"
  },
  {
    "text": "was just you know the fastest thing that",
    "start": "1377880",
    "end": "1380250"
  },
  {
    "text": "would work and it has so far basically",
    "start": "1380250",
    "end": "1383490"
  },
  {
    "text": "but there's no like I I think that API",
    "start": "1383490",
    "end": "1385770"
  },
  {
    "text": "is still like flagged as experimental so",
    "start": "1385770",
    "end": "1387630"
  },
  {
    "text": "there's no guarantee that's going to",
    "start": "1387630",
    "end": "1388980"
  },
  {
    "text": "continue to remain the same factor",
    "start": "1388980",
    "end": "1396890"
  },
  {
    "text": "the question is do we do anything in our",
    "start": "1401000",
    "end": "1402740"
  },
  {
    "text": "query engine around cost accounting",
    "start": "1402740",
    "end": "1404450"
  },
  {
    "text": "basically a costing out the query not",
    "start": "1404450",
    "end": "1407000"
  },
  {
    "text": "yet that is something that we will be",
    "start": "1407000",
    "end": "1410960"
  },
  {
    "text": "doing later this year but that's also",
    "start": "1410960",
    "end": "1412640"
  },
  {
    "text": "one of those things where it's that's a",
    "start": "1412640",
    "end": "1416150"
  },
  {
    "text": "multi-year effort",
    "start": "1416150",
    "end": "1416870"
  },
  {
    "text": "like that's decades work so so yeah",
    "start": "1416870",
    "end": "1420710"
  },
  {
    "text": "right now we just do this simple stupid",
    "start": "1420710",
    "end": "1423080"
  },
  {
    "text": "thing but we will be doing stuff like",
    "start": "1423080",
    "end": "1424760"
  },
  {
    "text": "that hopefully in the future and we are",
    "start": "1424760",
    "end": "1428120"
  },
  {
    "text": "actively hiring for the query processing",
    "start": "1428120",
    "end": "1429920"
  },
  {
    "text": "roles yeah so the question is if we're",
    "start": "1429920",
    "end": "1448640"
  },
  {
    "text": "looking at switching to influx is a good",
    "start": "1448640",
    "end": "1450980"
  },
  {
    "text": "is it a good idea to wait for the iql",
    "start": "1450980",
    "end": "1453380"
  },
  {
    "text": "engine to mature before making the",
    "start": "1453380",
    "end": "1455300"
  },
  {
    "text": "switch again like I don't I don't think",
    "start": "1455300",
    "end": "1459679"
  },
  {
    "text": "running in flux or running prometheus is",
    "start": "1459679",
    "end": "1461600"
  },
  {
    "text": "like an either/or proposition I think",
    "start": "1461600",
    "end": "1465110"
  },
  {
    "text": "it's totally possible to run both well",
    "start": "1465110",
    "end": "1466490"
  },
  {
    "text": "you could literally have Prometheus",
    "start": "1466490",
    "end": "1467870"
  },
  {
    "text": "running is essentially your data",
    "start": "1467870",
    "end": "1469250"
  },
  {
    "text": "collector and you can use both and query",
    "start": "1469250",
    "end": "1471650"
  },
  {
    "text": "both right and gravano works really",
    "start": "1471650",
    "end": "1473660"
  },
  {
    "text": "really well with both obviously so I",
    "start": "1473660",
    "end": "1476330"
  },
  {
    "text": "think I honestly like I think the lowest",
    "start": "1476330",
    "end": "1479929"
  },
  {
    "text": "risk way to do it is to not like a",
    "start": "1479929",
    "end": "1483070"
  },
  {
    "text": "polling replace there's always like the",
    "start": "1483070",
    "end": "1485120"
  },
  {
    "text": "riskiest way to deploy new software",
    "start": "1485120",
    "end": "1486770"
  },
  {
    "text": "right like the best way is to run the",
    "start": "1486770",
    "end": "1489260"
  },
  {
    "text": "new thing in parallel get used to how it",
    "start": "1489260",
    "end": "1492440"
  },
  {
    "text": "works get used to how it operates and",
    "start": "1492440",
    "end": "1494420"
  },
  {
    "text": "familiarize the team with it and",
    "start": "1494420",
    "end": "1495800"
  },
  {
    "text": "actually make a decision from there I",
    "start": "1495800",
    "end": "1498400"
  },
  {
    "text": "think the the I fuel stuff so we're",
    "start": "1498400",
    "end": "1504100"
  },
  {
    "text": "Nathaniel the key developer that's",
    "start": "1504100",
    "end": "1506270"
  },
  {
    "text": "writing it is actually writing the",
    "start": "1506270",
    "end": "1507830"
  },
  {
    "text": "formal spec this week so we should have",
    "start": "1507830",
    "end": "1510380"
  },
  {
    "text": "that available so the whole language",
    "start": "1510380",
    "end": "1512480"
  },
  {
    "text": "itself is going to be fully Specht out",
    "start": "1512480",
    "end": "1514160"
  },
  {
    "text": "we should have that available within the",
    "start": "1514160",
    "end": "1516260"
  },
  {
    "text": "next week or two so yeah there's a lot",
    "start": "1516260",
    "end": "1518960"
  },
  {
    "text": "of work that's happening there right now",
    "start": "1518960",
    "end": "1521470"
  },
  {
    "text": "I've QL is not like something that we're",
    "start": "1521470",
    "end": "1524420"
  },
  {
    "text": "saying is production ready it's",
    "start": "1524420",
    "end": "1525950"
  },
  {
    "text": "basically like this is test code to get",
    "start": "1525950",
    "end": "1527720"
  },
  {
    "text": "feedback from the community right",
    "start": "1527720",
    "end": "1530029"
  },
  {
    "text": "now our recommendation for actual",
    "start": "1530029",
    "end": "1531889"
  },
  {
    "text": "production workloads is to continue to",
    "start": "1531889",
    "end": "1533840"
  },
  {
    "text": "use influx QL the the sequel style",
    "start": "1533840",
    "end": "1536239"
  },
  {
    "text": "language well I think that's it",
    "start": "1536239",
    "end": "1544549"
  },
  {
    "text": "thank you very much everybody",
    "start": "1544549",
    "end": "1545520"
  },
  {
    "text": "[Applause]",
    "start": "1545520",
    "end": "1548890"
  }
]