[
  {
    "text": "all right so the next topic is the linux container internals by great um",
    "start": "0",
    "end": "9480"
  },
  {
    "text": "it's a devops and linux um engineer with a passion for open source and communities so you can talk to um great",
    "start": "14160",
    "end": "21840"
  },
  {
    "text": "about linux everything develops everything cloud system and when he's not into all of this",
    "start": "21840",
    "end": "28720"
  },
  {
    "text": "is out there boxing and really random stuff so over to you great",
    "start": "28720",
    "end": "34960"
  },
  {
    "text": "okay um thank you very much for having me my name is grit and uh",
    "start": "34960",
    "end": "40559"
  },
  {
    "text": "yeah i'll be speaking uh about um container you know container internals",
    "start": "40559",
    "end": "46000"
  },
  {
    "text": "so like speaking about um the features that make um containers possible so um yeah let me just share my",
    "start": "46000",
    "end": "53280"
  },
  {
    "text": "screen trying to do that now yeah so casey my screen",
    "start": "53280",
    "end": "59840"
  },
  {
    "text": "okay so my screen is open all right uh i don't know if km does yes it is",
    "start": "63680",
    "end": "71119"
  },
  {
    "text": "okay okay so um i was thinking about the container internal so what's um really makes them",
    "start": "71119",
    "end": "78479"
  },
  {
    "text": "possible and how they really work so um",
    "start": "78479",
    "end": "83920"
  },
  {
    "text": "yeah okay so uh meet me my name is great um xerox",
    "start": "83920",
    "end": "89280"
  },
  {
    "text": "great on twitter and um i'm an sre address aryan devops rtci so tci is a",
    "start": "89280",
    "end": "94799"
  },
  {
    "text": "company based in the uk and we basically help um organizations move to",
    "start": "94799",
    "end": "102560"
  },
  {
    "text": "cloud native and also build products for them so um i mean knox fanboy pretty",
    "start": "102560",
    "end": "108000"
  },
  {
    "text": "much uh as far as i remember i've been using linux um since about age of nine",
    "start": "108000",
    "end": "113439"
  },
  {
    "text": "yeah we had venus computers at home so um i talked about in the scanner and um",
    "start": "113439",
    "end": "119280"
  },
  {
    "text": "containers and there yeah i love the internal chips i also like the technique nightworks i'm",
    "start": "119280",
    "end": "125680"
  },
  {
    "text": "generally funny and i'm red sometimes so that's that um yeah so just lighting the",
    "start": "125680",
    "end": "133040"
  },
  {
    "text": "mood um this is how i walk around and um so as soon as you say hi to me i smile so in",
    "start": "133040",
    "end": "139599"
  },
  {
    "text": "case um see me anywhere and i'm burning my face don't hesitate",
    "start": "139599",
    "end": "145040"
  },
  {
    "text": "to say hi i'm always smiling yeah so um yeah just a disclaimer",
    "start": "145040",
    "end": "151760"
  },
  {
    "text": "um just so that we can set things straight um containers don't run on docker that",
    "start": "151760",
    "end": "158959"
  },
  {
    "text": "is like um a misconception or a misrepresenting air misrepresentation",
    "start": "158959",
    "end": "164239"
  },
  {
    "text": "because containers are wrong on docker docker is just one of those several container engines that interact with",
    "start": "164239",
    "end": "171280"
  },
  {
    "text": "container runtimes um container on times like container um wrong and the rest of",
    "start": "171280",
    "end": "177200"
  },
  {
    "text": "them which in turn asks the canal um to set up containers so other container",
    "start": "177200",
    "end": "182800"
  },
  {
    "text": "engines you can find is like cryo and portland there are some examples of container engines you can",
    "start": "182800",
    "end": "189120"
  },
  {
    "text": "find around um so the outline [Music]",
    "start": "189120",
    "end": "194560"
  },
  {
    "text": "is pretty much containers they will look at the building blocks um c groups name species um copy and write then we'll",
    "start": "194560",
    "end": "201920"
  },
  {
    "text": "talk a little about uh container runtimes docker wrong systemd and spam",
    "start": "201920",
    "end": "208239"
  },
  {
    "text": "and then we'll do a little demo just yeah",
    "start": "208239",
    "end": "213360"
  },
  {
    "text": "so what are containers um i'm sure you have had um what containers are containers like",
    "start": "213360",
    "end": "221760"
  },
  {
    "text": "um apples okay so containers is like um a form of operating system virtualization so this",
    "start": "221760",
    "end": "228799"
  },
  {
    "text": "is not like a full virtualization because containers depend on um system canal like you're not scanning to like",
    "start": "228799",
    "end": "235920"
  },
  {
    "text": "um to set up and um yeah so containers is like a form of virtualization and",
    "start": "235920",
    "end": "242239"
  },
  {
    "text": "isolation because um containers are isolated from their host system they have their own um",
    "start": "242239",
    "end": "250159"
  },
  {
    "text": "pids that is process ids and um they have their own network and all that so",
    "start": "250239",
    "end": "256000"
  },
  {
    "text": "containers help you to package application code together with these dependencies so that you can run them in",
    "start": "256000",
    "end": "261680"
  },
  {
    "text": "in between environments um so containers come with portability where you can run",
    "start": "261680",
    "end": "266880"
  },
  {
    "text": "them on different environments no need to start um installing dependencies so let's say for",
    "start": "266880",
    "end": "272400"
  },
  {
    "text": "example you're on the windows uh your new mac os and i built a python",
    "start": "272400",
    "end": "277440"
  },
  {
    "text": "application and i give you the code okay i want you to run this application so instead of use um starting to like run",
    "start": "277440",
    "end": "284880"
  },
  {
    "text": "python um installing python um installing like the um libraries like",
    "start": "284880",
    "end": "290320"
  },
  {
    "text": "let me say for example panda andres is obviously done it's already packaged",
    "start": "290320",
    "end": "295360"
  },
  {
    "text": "into a container so you can just run the container and everything will run perfectly so um",
    "start": "295360",
    "end": "303199"
  },
  {
    "text": "one thing to take note here is that containers have run as processes on the operating system so this is",
    "start": "303520",
    "end": "310400"
  },
  {
    "text": "the um what we should take note of here um because i won't be talking much on",
    "start": "310400",
    "end": "315759"
  },
  {
    "text": "containers i'll be talking about containers like from from a higher level from an",
    "start": "315759",
    "end": "321600"
  },
  {
    "text": "operating system level how containers are run on the system than containers",
    "start": "321600",
    "end": "328880"
  },
  {
    "text": "at the um i'll be talking from a lower level um yeah so does that i'll be talking about",
    "start": "329199",
    "end": "335039"
  },
  {
    "text": "containers as processes so yeah so we have the um control groups so control",
    "start": "335039",
    "end": "340560"
  },
  {
    "text": "groups is one of the um it's a special mechanism provided by the linux kennel which allows us to allocate like",
    "start": "340560",
    "end": "347440"
  },
  {
    "text": "resources um like cpu memory um",
    "start": "347440",
    "end": "354160"
  },
  {
    "text": "devices network to a group a group of processes or a set",
    "start": "354800",
    "end": "360639"
  },
  {
    "text": "of processes so like i said container around us processes so c groups able us to like um",
    "start": "360639",
    "end": "368319"
  },
  {
    "text": "give memory to um like limit memory to um a container",
    "start": "368319",
    "end": "374800"
  },
  {
    "text": "a container is a process of course limits memory container limits um cpu to",
    "start": "374800",
    "end": "380560"
  },
  {
    "text": "a container and all that so the reason for even c groups are the first",
    "start": "380560",
    "end": "386720"
  },
  {
    "text": "that was secretly abused as a security feature so it was actually built as a honeypot so that um for",
    "start": "386720",
    "end": "394400"
  },
  {
    "text": "attackers so we have um some signal subsystems we have the memory pid um",
    "start": "394400",
    "end": "401440"
  },
  {
    "text": "cpu set freeze block iu so other subsystems are what",
    "start": "401440",
    "end": "407199"
  },
  {
    "text": "you can control on um what you can the amount you what you can",
    "start": "407199",
    "end": "413440"
  },
  {
    "text": "control uh to assign to a process so um i'll just talk about a few of them so block",
    "start": "413440",
    "end": "420319"
  },
  {
    "text": "are you um set limits to read or write from and to block devices",
    "start": "420319",
    "end": "427199"
  },
  {
    "text": "um net um net um cls allows to mark um network packets",
    "start": "427199",
    "end": "434720"
  },
  {
    "text": "from attacks like allowed to mark a network um packets to a group and cpu uses the",
    "start": "434720",
    "end": "442319"
  },
  {
    "text": "scheduler to provide um cpu tax access to the processor resources and",
    "start": "442319",
    "end": "448479"
  },
  {
    "text": "the pid sets number of um and dice is it sets a limit of um",
    "start": "448479",
    "end": "454319"
  },
  {
    "text": "number of processes in a group so we can limit number of processes that can run in the container so um substance um",
    "start": "454319",
    "end": "461680"
  },
  {
    "text": "crypts or systems like bit makes that possible",
    "start": "461680",
    "end": "468160"
  },
  {
    "text": "so um for namespaces yeah so yc group will say",
    "start": "468479",
    "end": "475280"
  },
  {
    "text": "i okay i'm going to limit what you are going to use the namespaces will",
    "start": "475280",
    "end": "482319"
  },
  {
    "text": "limit what you can see so it's um i can give an example of um",
    "start": "482319",
    "end": "490800"
  },
  {
    "text": "kubernetes um namespaces so namespace is in kubernetes so let's say we have this",
    "start": "490840",
    "end": "496639"
  },
  {
    "text": "namespace called dev and we have this new space called um pro so the objects",
    "start": "496639",
    "end": "502080"
  },
  {
    "text": "community objects like replica sets secrets and the rest of them can be grouped",
    "start": "502080",
    "end": "508000"
  },
  {
    "text": "into a name space while in another namespace like said approach is as is on",
    "start": "508000",
    "end": "513599"
  },
  {
    "text": "um and what is it called um objects2 so",
    "start": "513599",
    "end": "518800"
  },
  {
    "text": "these objects can't really assess um let me see um a pod in the",
    "start": "518800",
    "end": "527680"
  },
  {
    "text": "improv cannot really access um his secrets in dev because this like is um a",
    "start": "527680",
    "end": "534320"
  },
  {
    "text": "form of isolation between them so lim um just take note c groups that means what",
    "start": "534320",
    "end": "540000"
  },
  {
    "text": "you can use like in quantity and the name species um limits what you can see",
    "start": "540000",
    "end": "545839"
  },
  {
    "text": "so um we have different um types of name species so we have uh the mounts",
    "start": "545839",
    "end": "551040"
  },
  {
    "text": "namespace which uh mnt which controls mount points so upon creation of um",
    "start": "551040",
    "end": "556560"
  },
  {
    "text": "containers the current mount namespace are copied to the new um namespace but man points",
    "start": "556560",
    "end": "564000"
  },
  {
    "text": "created after was not a gate between those um namespaces so um",
    "start": "564000",
    "end": "569920"
  },
  {
    "text": "we also have the um pid so it provides",
    "start": "569920",
    "end": "575120"
  },
  {
    "text": "namespaces uh it provides processes within an independent set of process ids so",
    "start": "575120",
    "end": "582399"
  },
  {
    "text": "pid namespace is what makes containers think that",
    "start": "582399",
    "end": "588080"
  },
  {
    "text": "they have this form of isolation so now for example a process now let's say we",
    "start": "588080",
    "end": "593600"
  },
  {
    "text": "have an nginx um docker container i want to mention docker let's say we have um an nginx container",
    "start": "593600",
    "end": "602160"
  },
  {
    "text": "um the nginx might be running with apid of four or five or whatever",
    "start": "602160",
    "end": "609920"
  },
  {
    "text": "on the container but outside that container that it will be running",
    "start": "609920",
    "end": "615200"
  },
  {
    "text": "on the whole system it will be running as a different pid so this is what make full containers into thinking that they",
    "start": "615200",
    "end": "622079"
  },
  {
    "text": "have their um their own guys that they have their their in control of",
    "start": "622079",
    "end": "629040"
  },
  {
    "text": "what they can do so these are one of the features of namespaces that",
    "start": "629040",
    "end": "634399"
  },
  {
    "text": "enables that so um network net and this is visualizes um",
    "start": "634399",
    "end": "640320"
  },
  {
    "text": "the network stack so upon creation and networking space contains only look back interface so",
    "start": "640320",
    "end": "647839"
  },
  {
    "text": "um once you create a container that is at default it's uh",
    "start": "647839",
    "end": "653279"
  },
  {
    "text": "it's only a loopback interface that you're gonna have i'm going to show an example of this",
    "start": "653279",
    "end": "658399"
  },
  {
    "text": "um in the demo i will like give an example of how we can use network",
    "start": "658399",
    "end": "663760"
  },
  {
    "text": "namespace namespaces so um also we can also look at the username species um provides um",
    "start": "663760",
    "end": "671200"
  },
  {
    "text": "previous isolation and the user identification segregation so like the ui",
    "start": "671200",
    "end": "677760"
  },
  {
    "text": "and the guid so like it gives you this kind of security feature i think it was recently",
    "start": "677760",
    "end": "684800"
  },
  {
    "text": "that it came into the linux scanner okay yeah recently he came into the scanner i changed at 3.8 yeah",
    "start": "684800",
    "end": "691200"
  },
  {
    "text": "so we also have the ipc ipc um i don't i don't even know if anybody",
    "start": "691200",
    "end": "697040"
  },
  {
    "text": "cares about ipc um in that process in that process",
    "start": "697040",
    "end": "702079"
  },
  {
    "text": "communication so um this was even recently added to the um",
    "start": "702079",
    "end": "707320"
  },
  {
    "text": "lenovo to like isolate um interprocess um communications",
    "start": "707320",
    "end": "714399"
  },
  {
    "text": "so yeah um [Music] clone is one of the system calls clone",
    "start": "714639",
    "end": "721279"
  },
  {
    "text": "is actually a system called in the linux kernel that um enable us to use",
    "start": "721279",
    "end": "726639"
  },
  {
    "text": "namespaces so um if you you can actually like um look at",
    "start": "726639",
    "end": "733279"
  },
  {
    "text": "the code um in the linux and like try to have an understanding of what clone does so um",
    "start": "733279",
    "end": "741440"
  },
  {
    "text": "yeah this is how process is called clone um if you can look for the ins clone um",
    "start": "741440",
    "end": "746880"
  },
  {
    "text": "function there so it caused it by the stack um passes on flux to it on",
    "start": "746880",
    "end": "752959"
  },
  {
    "text": "the parent uh tid so um next um we have the copyright copy",
    "start": "752959",
    "end": "760480"
  },
  {
    "text": "all right copy all right is really really a complex topic like it's going to even have its own different",
    "start": "760480",
    "end": "766959"
  },
  {
    "text": "presentation on that so computer write is a bit",
    "start": "766959",
    "end": "772480"
  },
  {
    "text": "complicated copy or write is um like an optimization strategy so if you have",
    "start": "772480",
    "end": "778399"
  },
  {
    "text": "also noticed let's say you pull a docker container and maybe you put another docker",
    "start": "778399",
    "end": "784240"
  },
  {
    "text": "container sometimes it's going to tell you that this layer already exists right so copy or write makes um",
    "start": "784240",
    "end": "792639"
  },
  {
    "text": "this stuff smart enough so copy and write like those sharing sharing of um this um files and other",
    "start": "792639",
    "end": "801920"
  },
  {
    "text": "so uh we have different um file systems which copy our rights uses we have the aufs btrfs vfs and device mapper so um i",
    "start": "801920",
    "end": "811200"
  },
  {
    "text": "don't think docker has to worry about this because the car will just um you",
    "start": "811200",
    "end": "816560"
  },
  {
    "text": "don't really have to worry about this because docker will just use the most um suitable file system is intelligent",
    "start": "816560",
    "end": "822320"
  },
  {
    "text": "enough to do that so um but that stuff we also have um capabilities",
    "start": "822320",
    "end": "829760"
  },
  {
    "text": "so we have um capabilities that enable you to say okay i want um this capability side time on",
    "start": "829760",
    "end": "837440"
  },
  {
    "text": "this container um yeah and we also have excellent so",
    "start": "837440",
    "end": "842720"
  },
  {
    "text": "security enhanced linux so um security enhancement knobs most um side means use",
    "start": "842720",
    "end": "848240"
  },
  {
    "text": "a security enhancement node so that you can set um some kind of",
    "start": "848240",
    "end": "853600"
  },
  {
    "text": "have more control um over who can access this um",
    "start": "853600",
    "end": "858639"
  },
  {
    "text": "container so that's the path you have to look out for and then we have the container runtimes like i said we're",
    "start": "858639",
    "end": "864240"
  },
  {
    "text": "going to come into this so we have the docker engine container open",
    "start": "864240",
    "end": "870639"
  },
  {
    "text": "vs ah um duplicated there sorry about that uh yeah docker engine actually uses um",
    "start": "870639",
    "end": "878399"
  },
  {
    "text": "container and wrong to um for the um container creation because",
    "start": "878399",
    "end": "886320"
  },
  {
    "text": "what actually made docker stand out was that they had they improved the um",
    "start": "886320",
    "end": "895199"
  },
  {
    "text": "they improved the developer experience using containers before containers were just something that um",
    "start": "895600",
    "end": "902240"
  },
  {
    "text": "most likely you see with assay admins i know that really made this easy with their whole",
    "start": "902240",
    "end": "907680"
  },
  {
    "text": "family of two so that's why it's called an engine um we also have lxc alexa has been",
    "start": "907680",
    "end": "913920"
  },
  {
    "text": "existing in fact yeah there's no there's no there's no record",
    "start": "913920",
    "end": "918959"
  },
  {
    "text": "of lxe um needed no scandal you haven't even seen anything about those containers",
    "start": "918959",
    "end": "926320"
  },
  {
    "text": "because the containers you might see is like a very different thing from the containers you know like it's a big",
    "start": "926320",
    "end": "933360"
  },
  {
    "text": "differences so alexi was one of the um container technologies that we are there",
    "start": "933360",
    "end": "939920"
  },
  {
    "text": "and we also have um open vs to which was uh also one of the um",
    "start": "939920",
    "end": "946480"
  },
  {
    "text": "um container technologies that assisted",
    "start": "946480",
    "end": "952320"
  },
  {
    "text": "so um yeah so um we're gonna go over um ahead",
    "start": "952560",
    "end": "958480"
  },
  {
    "text": "to a demo so um for this demo we'll be looking at um creating um a network",
    "start": "958480",
    "end": "964320"
  },
  {
    "text": "namespace then we can also test um copy and write",
    "start": "964320",
    "end": "970079"
  },
  {
    "text": "with a union fs so um if you can",
    "start": "970240",
    "end": "975920"
  },
  {
    "text": "if you can um if yeah i'm trying to share my screen",
    "start": "975920",
    "end": "981199"
  },
  {
    "text": "now so i don't know um",
    "start": "981199",
    "end": "987040"
  },
  {
    "text": "yeah i'm trying to share my terminal",
    "start": "987120",
    "end": "992199"
  },
  {
    "text": "um",
    "start": "996639",
    "end": "998800"
  },
  {
    "text": "i can't find my terminal i don't know why",
    "start": "1003279",
    "end": "1009020"
  },
  {
    "text": "[Music] i'm just opening it again",
    "start": "1009020",
    "end": "1013839"
  },
  {
    "text": "okay yeah it's up now okay so guys in my terminal just need a",
    "start": "1016320",
    "end": "1024000"
  },
  {
    "text": "bit of confirmation",
    "start": "1024000",
    "end": "1026959"
  },
  {
    "text": "yes hello yes okay okay sure okay um",
    "start": "1030400",
    "end": "1038839"
  },
  {
    "text": "so just go ahead on it now and",
    "start": "1039199",
    "end": "1044079"
  },
  {
    "text": "[Music] just trying to",
    "start": "1044490",
    "end": "1050640"
  },
  {
    "text": "kind of adjusted so um so um",
    "start": "1050640",
    "end": "1056320"
  },
  {
    "text": "yeah we'll try to um look at the name species that exist on",
    "start": "1056320",
    "end": "1061360"
  },
  {
    "text": "my pc so let's do ls ns lsns like",
    "start": "1061360",
    "end": "1066799"
  },
  {
    "text": "come up with this um with the namespaces that exist in my",
    "start": "1066799",
    "end": "1072240"
  },
  {
    "text": "system so we have the times namespace we have the c group namespace we have the pid namespace uts ipc and the rest of",
    "start": "1072240",
    "end": "1079039"
  },
  {
    "text": "them so um yeah for um browsers like um",
    "start": "1079039",
    "end": "1085360"
  },
  {
    "text": "chrome and brief they'll most likely have a lot of pid namespaces and yeah",
    "start": "1085360",
    "end": "1091120"
  },
  {
    "text": "they also have the network namespace like um for network and the rest of them so um",
    "start": "1091120",
    "end": "1098080"
  },
  {
    "text": "let's try to list um those to these audios yeah",
    "start": "1098080",
    "end": "1105200"
  },
  {
    "text": "so i don't have to type sudo every time so i'll say sudo ls um",
    "start": "1105200",
    "end": "1110880"
  },
  {
    "text": "uh slash proc so um we're going to check a process so if i",
    "start": "1110880",
    "end": "1117200"
  },
  {
    "text": "do this um yes ox so we're going to actually check which",
    "start": "1117200",
    "end": "1123120"
  },
  {
    "text": "namespace um my first process belongs to so the um in its",
    "start": "1123120",
    "end": "1128559"
  },
  {
    "text": "init um commands like the init process so let's see which namespace it belongs",
    "start": "1128559",
    "end": "1135840"
  },
  {
    "text": "so that's just pretty simple um yes",
    "start": "1135840",
    "end": "1141520"
  },
  {
    "text": "ls yeah",
    "start": "1141520",
    "end": "1144799"
  },
  {
    "text": "so um we can see that this process uh belongs to a c group ipc um",
    "start": "1146960",
    "end": "1154000"
  },
  {
    "text": "different type of namespaces so this can actually be checked for um",
    "start": "1154000",
    "end": "1160559"
  },
  {
    "text": "or all processes so then um",
    "start": "1160559",
    "end": "1166080"
  },
  {
    "text": "we'll move on to say okay um so we're doing um the",
    "start": "1166080",
    "end": "1171520"
  },
  {
    "text": "network namespace so say um s i p uh",
    "start": "1171520",
    "end": "1178720"
  },
  {
    "text": "methods and [Music] namespace 2",
    "start": "1191360",
    "end": "1198000"
  },
  {
    "text": "so we have two namespaces now so we say ipns list so let's just leave the nation",
    "start": "1198000",
    "end": "1203600"
  },
  {
    "text": "so we'll have namespace2 and the next space 1",
    "start": "1203600",
    "end": "1208720"
  },
  {
    "text": "so now let's um create a pair of feature",
    "start": "1208720",
    "end": "1214480"
  },
  {
    "text": "internet devices so say ip link always",
    "start": "1214480",
    "end": "1221039"
  },
  {
    "text": "forget to ask sudo don't mind me vth1",
    "start": "1221039",
    "end": "1226240"
  },
  {
    "text": "type v it is a",
    "start": "1226240",
    "end": "1231679"
  },
  {
    "text": "name vth2",
    "start": "1231679",
    "end": "1235640"
  },
  {
    "text": "so we just added um we just added a video internet device so",
    "start": "1236720",
    "end": "1243600"
  },
  {
    "text": "if i2 ip if.",
    "start": "1243600",
    "end": "1251320"
  },
  {
    "text": "also yeah you can see we are the um visual",
    "start": "1252480",
    "end": "1259120"
  },
  {
    "text": "internet is created so now let's um link each device each device is",
    "start": "1259120",
    "end": "1265280"
  },
  {
    "text": "recreated to rename space so link set",
    "start": "1265280",
    "end": "1270960"
  },
  {
    "text": "methods namespace one so link viii teach one to name space one",
    "start": "1272480",
    "end": "1279679"
  },
  {
    "text": "oh so i will link it to mvth2 to mean space",
    "start": "1280720",
    "end": "1289039"
  },
  {
    "text": "too yeah so i'll be pretty correct here",
    "start": "1289039",
    "end": "1294960"
  },
  {
    "text": "so um let's bring up let's try to bring up the devices and assign um ip",
    "start": "1294960",
    "end": "1300480"
  },
  {
    "text": "addresses to them so not announce exact namespace",
    "start": "1300480",
    "end": "1307600"
  },
  {
    "text": "one ip link set dev vth1 pop",
    "start": "1307600",
    "end": "1316320"
  },
  {
    "text": "to do again sorry um yeah",
    "start": "1317520",
    "end": "1324400"
  },
  {
    "text": "so ip net ns",
    "start": "1328480",
    "end": "1332799"
  },
  {
    "text": "2 4 then dev each one",
    "start": "1345120",
    "end": "1351200"
  },
  {
    "text": "so do again um i think it's hard time i run this",
    "start": "1351919",
    "end": "1358640"
  },
  {
    "text": "with [Music]",
    "start": "1358640",
    "end": "1363909"
  },
  {
    "text": "too so now let's verify the connectivity",
    "start": "1373280",
    "end": "1378480"
  },
  {
    "text": "between the two namespace as it's enabled by the um feature internet spectrum so from the",
    "start": "1378480",
    "end": "1385600"
  },
  {
    "text": "namespace one system i've linked them so if his name space one we should be able to paint the name um the second one and",
    "start": "1385600",
    "end": "1392880"
  },
  {
    "text": "from the second name we should be able to ping the first name space so this is sudo",
    "start": "1392880",
    "end": "1399280"
  },
  {
    "text": "sudo okay s i p net ns exec",
    "start": "1399280",
    "end": "1404880"
  },
  {
    "text": "name space one pink um so that goes about five",
    "start": "1404880",
    "end": "1409919"
  },
  {
    "text": "pings one nine two point one six eight point",
    "start": "1409919",
    "end": "1415600"
  },
  {
    "text": "two so yeah um it's working and it's like",
    "start": "1415600",
    "end": "1420799"
  },
  {
    "text": "trying to access the second namespace and um being in that",
    "start": "1420799",
    "end": "1426320"
  },
  {
    "text": "so um we should be able to do that from the um",
    "start": "1426320",
    "end": "1431440"
  },
  {
    "text": "second one to the pink this so it works",
    "start": "1431440",
    "end": "1437520"
  },
  {
    "text": "so um yeah i'll just go ahead and delete these um",
    "start": "1437520",
    "end": "1445360"
  },
  {
    "text": "namespaces",
    "start": "1445360",
    "end": "1448080"
  },
  {
    "text": "list um yeah i no longer um have to say so this is",
    "start": "1454880",
    "end": "1462080"
  },
  {
    "text": "something that most of this container around clients do under the hood they try to create network name species and",
    "start": "1462080",
    "end": "1468720"
  },
  {
    "text": "the rest of them so that you can get this entire uh operability between um",
    "start": "1468720",
    "end": "1476960"
  },
  {
    "text": "your containers providing network access to your containers so um",
    "start": "1476960",
    "end": "1482320"
  },
  {
    "text": "yeah and also go over the second demo",
    "start": "1482320",
    "end": "1487760"
  },
  {
    "text": "um this wouldn't take time so um it's just to show how um",
    "start": "1487760",
    "end": "1494399"
  },
  {
    "text": "these container runtimes also do um um copy all right",
    "start": "1494480",
    "end": "1501200"
  },
  {
    "text": "so um make the arrow so let's say mega pcd one",
    "start": "1501200",
    "end": "1507919"
  },
  {
    "text": "so let's stop if i inside kcd1 hello one",
    "start": "1508240",
    "end": "1516159"
  },
  {
    "text": "i'll touch hello too so we'll make another diy pcd2",
    "start": "1516159",
    "end": "1522640"
  },
  {
    "text": "not make their case you need to make their pcb pcd2",
    "start": "1522640",
    "end": "1528960"
  },
  {
    "text": "and then we touch",
    "start": "1528960",
    "end": "1532080"
  },
  {
    "text": "our ideas is",
    "start": "1538159",
    "end": "1541880"
  },
  {
    "text": "and hello four so then we'll try to make a union",
    "start": "1554960",
    "end": "1561360"
  },
  {
    "text": "between these two directories so so let's say kcd",
    "start": "1561360",
    "end": "1567360"
  },
  {
    "text": "union so say union fs",
    "start": "1567360",
    "end": "1573200"
  },
  {
    "text": "um they are um kcd one",
    "start": "1573200",
    "end": "1579120"
  },
  {
    "text": "and pcd2 into union kcd union",
    "start": "1579120",
    "end": "1586880"
  },
  {
    "text": "union so ls kcd union",
    "start": "1589360",
    "end": "1595039"
  },
  {
    "text": "you can see that these um three fives has been unions together into a",
    "start": "1596400",
    "end": "1604159"
  },
  {
    "text": "namespace so under the hood this is what um container runtimes kind of try to",
    "start": "1604159",
    "end": "1611600"
  },
  {
    "text": "implement i um actually say you can also um",
    "start": "1611600",
    "end": "1618799"
  },
  {
    "text": "look into okay sorry i can also say you should look into boca i don't know if i can",
    "start": "1619120",
    "end": "1626159"
  },
  {
    "text": "type that okay please look into rocca",
    "start": "1626159",
    "end": "1633240"
  },
  {
    "text": "so um yeah so broker is actually an implementation",
    "start": "1641039",
    "end": "1646320"
  },
  {
    "text": "of docker in um in bash so um you can try to read the source",
    "start": "1646320",
    "end": "1653279"
  },
  {
    "text": "code and um you would um see most of how",
    "start": "1653279",
    "end": "1658720"
  },
  {
    "text": "this container runtimes implements",
    "start": "1658720",
    "end": "1664960"
  },
  {
    "text": "these low-level uh features of um the",
    "start": "1664960",
    "end": "1670559"
  },
  {
    "text": "um okay this low-level features",
    "start": "1670559",
    "end": "1678799"
  },
  {
    "text": "these low-level features of the linux and i would like to create um a container so it does that for my",
    "start": "1678960",
    "end": "1685679"
  },
  {
    "text": "talk and um if you have any question you can just um leave them in the chat",
    "start": "1685679",
    "end": "1692799"
  },
  {
    "text": "yeah i think yeah he has um sadiq has done that so if you have any questions on",
    "start": "1692799",
    "end": "1699200"
  },
  {
    "text": "like these um you can try to like reach out to me or",
    "start": "1699200",
    "end": "1706240"
  },
  {
    "text": "you can just write them on the chat and yeah",
    "start": "1706240",
    "end": "1711679"
  },
  {
    "text": "so it was nice speaking with you and um i hope you have a great day",
    "start": "1711679",
    "end": "1718559"
  },
  {
    "text": "thanks",
    "start": "1718640",
    "end": "1721640"
  },
  {
    "text": "awesome that was a great presentation um we don't have any questions yet",
    "start": "1727039",
    "end": "1732159"
  },
  {
    "text": "uh in the chat thank you so much for that great anita is having some network issues",
    "start": "1732159",
    "end": "1740399"
  },
  {
    "text": "uh internet internet is so fun",
    "start": "1740399",
    "end": "1746158"
  },
  {
    "text": "so um here is a great twitter handle at zero x",
    "start": "1748399",
    "end": "1756080"
  },
  {
    "text": "great the guy is great that his twitter handle is in lead code self",
    "start": "1756080",
    "end": "1761600"
  },
  {
    "text": "so you can reach out to him on twitter and uh share whatever questions you have",
    "start": "1761919",
    "end": "1767200"
  },
  {
    "text": "uh and you grateful to answer but if you still have any you can drop them in chat",
    "start": "1767200",
    "end": "1772640"
  },
  {
    "text": "and he will be available on the youtube channel to answer any of them in real time",
    "start": "1772640",
    "end": "1778159"
  },
  {
    "text": "okay someone just asked how c group and name species are used by containers",
    "start": "1778159",
    "end": "1784240"
  },
  {
    "text": "okay so um c groups uh namespaces",
    "start": "1785120",
    "end": "1790799"
  },
  {
    "text": "are used okay like i said i don't know if it came in late but c groups is what",
    "start": "1790799",
    "end": "1795919"
  },
  {
    "text": "limits the resources that containers can use right so it limits how many um",
    "start": "1795919",
    "end": "1804720"
  },
  {
    "text": "it limits like there are subsystems for c groups you have the pid the nets um",
    "start": "1804720",
    "end": "1810000"
  },
  {
    "text": "the rest of them so what c group does is like try to limit system resources",
    "start": "1810000",
    "end": "1815760"
  },
  {
    "text": "that these containers can use right so like i said c groups limits what you can",
    "start": "1815760",
    "end": "1820960"
  },
  {
    "text": "use and namespaces um limits what you can see so namespaces is",
    "start": "1820960",
    "end": "1827520"
  },
  {
    "text": "what uh makes containers not to be able to see each um",
    "start": "1827520",
    "end": "1833360"
  },
  {
    "text": "each other because if they are let's say this container is able",
    "start": "1833360",
    "end": "1839039"
  },
  {
    "text": "to see um the process of another container that's really bad because you can have things like racing conditions",
    "start": "1839039",
    "end": "1844720"
  },
  {
    "text": "and it's also a security issue so name spaces is what brings in that isolation",
    "start": "1844720",
    "end": "1850799"
  },
  {
    "text": "right like how you can run multiple containers on your system you can run nginx you can",
    "start": "1850799",
    "end": "1856799"
  },
  {
    "text": "run busy box you can run a lot of containers without having conflicts but if namespaces doesn't exist um",
    "start": "1856799",
    "end": "1864960"
  },
  {
    "text": "things like um process ids will start clashing and",
    "start": "1864960",
    "end": "1871440"
  },
  {
    "text": "um even though that is a bit of a security issues um that is really bad so namespace is um",
    "start": "1871440",
    "end": "1879760"
  },
  {
    "text": "is a feature of the not scanning that like try to convince containers it's what food profit containers that oh i am",
    "start": "1879760",
    "end": "1887120"
  },
  {
    "text": "in my own system containers are not really aware of what is outside them",
    "start": "1887120",
    "end": "1892240"
  },
  {
    "text": "containers are only aware of their own selves so namespaces is a kennedy feature that enables that",
    "start": "1892240",
    "end": "1898399"
  },
  {
    "text": "um so i don't really know",
    "start": "1898399",
    "end": "1902159"
  },
  {
    "text": "okay uh yeah demo",
    "start": "1903679",
    "end": "1908960"
  },
  {
    "text": "okc group okay yeah i think i did this",
    "start": "1908960",
    "end": "1914640"
  },
  {
    "text": "i don't know if this demo is able to share the demo i did yeah it yeah it shared it uh",
    "start": "1914880",
    "end": "1921760"
  },
  {
    "text": "what we will do later is the recording of the whole thing will be available subsequently and uh will also",
    "start": "1921760",
    "end": "1928399"
  },
  {
    "text": "break each of the sessions so that you can have access to individuals so your guest you can check our youtube channel",
    "start": "1928399",
    "end": "1934960"
  },
  {
    "text": "by monday or tuesday next week and you will have his specific video so you can rewatch the parts where",
    "start": "1934960",
    "end": "1940720"
  },
  {
    "text": "he did the demo okay okay um that's fine um research um you can also contact me on",
    "start": "1940720",
    "end": "1948000"
  },
  {
    "text": "twitter if you have any questions so i'm kind of available to like answer questions",
    "start": "1948000",
    "end": "1955278"
  },
  {
    "text": "awesome uh thank you very much great we have",
    "start": "1956480",
    "end": "1962960"
  },
  {
    "text": "our next session all right bye",
    "start": "1962960",
    "end": "1969000"
  }
]