[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "okay I think we're going to get started um thanks everyone for coming and today",
    "start": "280",
    "end": "5319"
  },
  {
    "text": "I'd like to talk to you a little bit about Ingress and the title of this talk is ingress your router your rules I'm",
    "start": "5319",
    "end": "11880"
  },
  {
    "text": "Jared Dylan uh I'm here with deis and if you want to learn more about any of this or Helm Stewart workflow any of it come",
    "start": "11880",
    "end": "19600"
  },
  {
    "text": "talk to us at our booth uh and I spelled my Twitter handle wrong up there so uh just drop off the last two letters",
    "start": "19600",
    "end": "26439"
  },
  {
    "text": "and uh it's just at Justice rise don't know where that came from so but what I",
    "start": "26439",
    "end": "32360"
  },
  {
    "text": "really want to talk today about is not necessarily Ingress I want to talk about container networking at scale and I'm",
    "start": "32360",
    "end": "39320"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "going to break this down and get a little specific um and what I mean by",
    "start": "39320",
    "end": "44840"
  },
  {
    "text": "container networking by container networking I don't just talk about your web services we all think that we're running you know",
    "start": "44840",
    "end": "51960"
  },
  {
    "text": "websites and apis and all sorts of front-end services and that's great these are all very normal things but I'm",
    "start": "51960",
    "end": "58920"
  },
  {
    "text": "also talking about Network working of different workflows this is koder out of",
    "start": "58920",
    "end": "64478"
  },
  {
    "text": "Amsterdam and they deploy regularly hundreds of services uh for all their",
    "start": "64479",
    "end": "70520"
  },
  {
    "text": "students I'm also talking about deploying games on top of kubernetes Game servers Minecraft servers uh if you",
    "start": "70520",
    "end": "76439"
  },
  {
    "text": "look at the helm charts we've got Minecraft factorio a whole bunch of stuff and I'm also talking about games",
    "start": "76439",
    "end": "82280"
  },
  {
    "text": "at scale if you're familiar with Niantic works with Pok√©mon go they're built on top of Google Cloud platform and doing",
    "start": "82280",
    "end": "88960"
  },
  {
    "text": "at huge scales on not just traditional services that we'd think of when we're going out to deploy on top of",
    "start": "88960",
    "end": "96040"
  },
  {
    "text": "kubernetes so what do I mean by scale I'm talking a little bit just more than",
    "start": "96040",
    "end": "101520"
  },
  {
    "text": "I have a billion pods across a thousand nodes and we are talking a little bit",
    "start": "101520",
    "end": "107240"
  },
  {
    "text": "about that being able to scale out is a is a very important kubernetes goal but",
    "start": "107240",
    "end": "112479"
  },
  {
    "text": "this is a very much mechanical scaling especially if you're a stateless application it's pretty easy to do I",
    "start": "112479",
    "end": "117640"
  },
  {
    "text": "just scale my deployment up to a billion container pods and I'm good to go as",
    "start": "117640",
    "end": "122880"
  },
  {
    "text": "long as I have the nodes for it what I'm really talking about also here is The Logical scaling of all of our different",
    "start": "122880",
    "end": "129479"
  },
  {
    "text": "Services it should be really easy to add a new service into production and not face a lot of pain in doing so and we",
    "start": "129479",
    "end": "135879"
  },
  {
    "text": "should be able to just as easily scale our services our deployments you know our different Notions of our application",
    "start": "135879",
    "end": "142120"
  },
  {
    "text": "just as easily as our different pods so I want to take a break before we",
    "start": "142120",
    "end": "148160"
  },
  {
    "text": "get deep into code and we start looking and tearing apart the whole point of this talk which is ingress controllers",
    "start": "148160",
    "end": "154800"
  },
  {
    "text": "and talk to you a little bit about kubernetes Concepts and how you might see those Concepts",
    "start": "154800",
    "end": "160280"
  },
  {
    "text": "today so who here has used uh Ingress at",
    "start": "160280",
    "end": "166879"
  },
  {
    "text": "all great a lot of you who here has you who here has written their own Ingress",
    "start": "166879",
    "end": "173200"
  },
  {
    "text": "controller okay a couple people we'll we'll get there who thinks very much in",
    "start": "173200",
    "end": "178440"
  },
  {
    "text": "this model right now where if I'm going for an L7 load balancer this is probably a lot of Google kubernetes go Google",
    "start": "178440",
    "end": "184640"
  },
  {
    "text": "container engine users if I need an L3 load balancer well I'm going to stand up a service and I'll get that and if I",
    "start": "184640",
    "end": "191400"
  },
  {
    "text": "need an L7 HTTP load balancer I need TLS I need vhost routing rules all that well",
    "start": "191400",
    "end": "196879"
  },
  {
    "text": "I'm going to reach for a level 71 and if you've used it a lot this is probably",
    "start": "196879",
    "end": "202000"
  },
  {
    "text": "how you're thinking about that whole system at the moment and I'd like to change that for",
    "start": "202000",
    "end": "208159"
  },
  {
    "text": "the purposes of this talk so I want to revisit some of these I'm sure you're all sick of looking at manifests I'm",
    "start": "208159",
    "end": "213560"
  },
  {
    "text": "sure you're sick of seeing pods for the 15th time today but I want you to look at these maybe in a slightly different",
    "start": "213560",
    "end": "220360"
  },
  {
    "text": "mindset than a lot of the other talks that you might go to in these rules",
    "start": "220360",
    "end": "226360"
  },
  {
    "text": "expire at the end of this talk so don't go home and and start you know quoting what I tell you in this talk as far as",
    "start": "226360",
    "end": "232200"
  },
  {
    "text": "this goes so I want to think of a pod as a single internal resource and I think you",
    "start": "232200",
    "end": "238079"
  },
  {
    "text": "can think of that no matter what like that right we have a basically a one",
    "start": "238079",
    "end": "243319"
  },
  {
    "text": "static bundle for our site we have one API server process we have one flash",
    "start": "243319",
    "end": "248519"
  },
  {
    "text": "media server process representing a video stream we have a single reddis process we have a single postgress",
    "start": "248519",
    "end": "255120"
  },
  {
    "text": "instance what what we're really talking about for this talk is I'm mapping a virtual IP to a singular",
    "start": "255120",
    "end": "263040"
  },
  {
    "text": "resource and it's important that this set in containers is entirely isolated",
    "start": "263040",
    "end": "269160"
  },
  {
    "text": "as one unit and really thinks about itself and it doesn't care how traffic gets to it so",
    "start": "269160",
    "end": "275560"
  },
  {
    "text": "something comes in the IP cute proxy gets the traffic there I don't care beyond",
    "start": "275560",
    "end": "282039"
  },
  {
    "text": "that and because you haven't looked at enough manifest today here's a pod manifest not fully filled out but you",
    "start": "282199",
    "end": "287919"
  },
  {
    "text": "get the you get the gist this is just a reddest pod and uh pretty easy to fill",
    "start": "287919",
    "end": "293880"
  },
  {
    "text": "in that's not the interesting part of this talk so here's where things start",
    "start": "293880",
    "end": "299280"
  },
  {
    "start": "294000",
    "end": "294000"
  },
  {
    "text": "to get weird who here just generally throws a typ load balancer on their service and calls it a day just goes about their day",
    "start": "299280",
    "end": "306280"
  },
  {
    "text": "couple okay yeah I you know when I'm testing things I do I do two",
    "start": "306280",
    "end": "311400"
  },
  {
    "text": "and the for this for what we're talking about today I really want to get away from that idea of let's just slap a load",
    "start": "311400",
    "end": "318759"
  },
  {
    "text": "balancer on it and call and be done I really want to start thinking of services kind of as a semantically",
    "start": "318759",
    "end": "325759"
  },
  {
    "text": "related Set uh and that's really what they are if you think about how labels and selectors work you have you know",
    "start": "325759",
    "end": "331720"
  },
  {
    "text": "your phone application API server whatever but you have a a virtual IP that's selecting over a set of PODS that",
    "start": "331720",
    "end": "338639"
  },
  {
    "text": "match a certain set of labels right uh and again and this is this is where uh",
    "start": "338639",
    "end": "345880"
  },
  {
    "text": "things change when you start talking about the uh or in my experience what a lot of people talk about with a service",
    "start": "345880",
    "end": "352880"
  },
  {
    "text": "is a service isn't necessarily concerned with routing some people use it that way",
    "start": "352880",
    "end": "358360"
  },
  {
    "text": "some people expose external traffic via service and that's great uh and it has its uses but it's really that semantic",
    "start": "358360",
    "end": "365759"
  },
  {
    "text": "set and and just a a singular grouping that's a representation of our resource",
    "start": "365759",
    "end": "371360"
  },
  {
    "text": "and it cares about every member that set and again lots of manifest so here's",
    "start": "371360",
    "end": "377000"
  },
  {
    "text": "here's that service now we're here what I really want to talk about and that is our",
    "start": "377000",
    "end": "382680"
  },
  {
    "start": "378000",
    "end": "378000"
  },
  {
    "text": "Ingress resource and an Ingress is a mapping of external traffic to Virtual",
    "start": "382680",
    "end": "388039"
  },
  {
    "text": "resources it is the rules by which we take inbound Network traffic and map it",
    "start": "388039",
    "end": "394759"
  },
  {
    "text": "to a set of services so here we're starting to talk about really networking Primitives right virtual hosts external",
    "start": "394759",
    "end": "401639"
  },
  {
    "text": "IP addresses domain names load balancer rules and this could be a physical load balancer we'll we'll talk about that in",
    "start": "401639",
    "end": "407800"
  },
  {
    "text": "a little bit but you have some sort of external identifier that is potentially physical",
    "start": "407800",
    "end": "413319"
  },
  {
    "text": "mapping onto all of your virtual resources so before we get into the meat",
    "start": "413319",
    "end": "419039"
  },
  {
    "text": "of that and talk about about in depth what you can do with Ingress controllers and and really how to go move towards",
    "start": "419039",
    "end": "425319"
  },
  {
    "text": "your own Ingress controller we're going to walk through the standard configurations on an",
    "start": "425319",
    "end": "431319"
  },
  {
    "text": "Ingress resource and we'll return to this but you can do a lot of things with them you can't out of the box without",
    "start": "431319",
    "end": "436919"
  },
  {
    "text": "even writing your own config and things like TLS things like path-based routing things like virtual host routing based",
    "start": "436919",
    "end": "443599"
  },
  {
    "text": "on domains uh with your own metadata you can come up with as many crazy custom rules as you want",
    "start": "443599",
    "end": "451520"
  },
  {
    "text": "so here's a quick TLS Ingress resource right we have a secret that's our CS uh and",
    "start": "451520",
    "end": "459440"
  },
  {
    "text": "you can also use something like Cube cert manager by Kelsey high tower to uh get at those CS with let encrypt and you",
    "start": "459440",
    "end": "466159"
  },
  {
    "text": "create an Ingress and poting at a secret and point at your back end and now you have a router that ties up your TLS",
    "start": "466159",
    "end": "475400"
  },
  {
    "text": "Sears and and your application and you're done",
    "start": "475400",
    "end": "480520"
  },
  {
    "text": "you can do much the same with virtual host routing so you can specify multiple rules inside of a single virtual host so",
    "start": "480520",
    "end": "487080"
  },
  {
    "text": "here we have some sort of bilding API and we have a master or production and",
    "start": "487080",
    "end": "492479"
  },
  {
    "text": "we have a staging API both backing up to different services but semantically all part of",
    "start": "492479",
    "end": "499319"
  },
  {
    "text": "the same Ingress and so this is captured up up in some sort of Upstream router",
    "start": "499319",
    "end": "505199"
  },
  {
    "text": "that'll then take this manifest and expose it we can do the same thing with path",
    "start": "505199",
    "end": "511280"
  },
  {
    "text": "path-based routing so it's all pretty clear uh",
    "start": "511280",
    "end": "517919"
  },
  {
    "text": "those of you on laptops are probably taking those and copying pasting them off my screen and you create the Ingress",
    "start": "517919",
    "end": "523279"
  },
  {
    "text": "resource and maybe maybe you know you type it all in and and run it and great I'm about to start",
    "start": "523279",
    "end": "530880"
  },
  {
    "text": "sending traffic everywhere this is awesome I'm going to just start creating ingresses left and right and nothing happens unless you're",
    "start": "530880",
    "end": "538040"
  },
  {
    "text": "on GK GK users uh none of this applies you're going to get a load balancer and it's going to be great but if you're on",
    "start": "538040",
    "end": "545000"
  },
  {
    "text": "Mini Cube if you're running your own cluster and you haven't thought about this problem before and you just go create an Ingress like nothing happens",
    "start": "545000",
    "end": "552000"
  },
  {
    "text": "and you're sitting there what the H like well I'm just going to go use a service like that'll that'll be fine like screw",
    "start": "552000",
    "end": "557320"
  },
  {
    "text": "this thing uh and I'm just going to type in type load balancer and it'll it'll",
    "start": "557320",
    "end": "562560"
  },
  {
    "text": "work I've got I've got engine X already set up and going well that's not why we're here and",
    "start": "562560",
    "end": "570040"
  },
  {
    "text": "there's some problems with that and the problem isn't just that you created an inject uh the problem isn't kubernetes",
    "start": "570040",
    "end": "576040"
  },
  {
    "text": "is broken so what is ingress really if",
    "start": "576040",
    "end": "581399"
  },
  {
    "start": "578000",
    "end": "578000"
  },
  {
    "text": "we're talking about creating Ingress resource it's a little bit different than just creating a service resource",
    "start": "581399",
    "end": "587240"
  },
  {
    "text": "and things are done your Ingress resource really are just the rules for",
    "start": "587240",
    "end": "592519"
  },
  {
    "text": "routing your inbound traffic towards your cluster resources and this is really important",
    "start": "592519",
    "end": "599560"
  },
  {
    "text": "it it says nothing about how those rules should be applied this is a very",
    "start": "599560",
    "end": "605640"
  },
  {
    "text": "declarative API it's not imperative in any way and so I've just set up the rules and most of kubernetes works that",
    "start": "605640",
    "end": "612399"
  },
  {
    "text": "way so it should be pretty familiar so before we get to the",
    "start": "612399",
    "end": "618079"
  },
  {
    "start": "615000",
    "end": "615000"
  },
  {
    "text": "solution why wouldn't I just use a service I mean we talk about how easy it is and and just be done with it and you",
    "start": "618079",
    "end": "624120"
  },
  {
    "text": "can use a service that's fine uh but a lot of use cases end up where you bump up against",
    "start": "624120",
    "end": "631120"
  },
  {
    "text": "the the tattered edges of what what a service can do pretty quickly and that's because services are pretty limited",
    "start": "631120",
    "end": "637079"
  },
  {
    "text": "they're tied to the entire controller manager's life cycle and their routing rules are attached to that life cycle of",
    "start": "637079",
    "end": "642639"
  },
  {
    "text": "the service I delete the service it's gone if I'm deploying a Helm chart who's using Helm in",
    "start": "642639",
    "end": "648240"
  },
  {
    "text": "here a lot of you okay check out Helm when you're done and you'll see some Helm later on but uh if I'm if I'm",
    "start": "648240",
    "end": "654760"
  },
  {
    "text": "packaging up my entire application as the Helm service and I have have a service resource in there and I go to",
    "start": "654760",
    "end": "662160"
  },
  {
    "text": "delete or migrate my networking is inherently tied to that chart I changed things around and I've",
    "start": "662160",
    "end": "669959"
  },
  {
    "text": "now lost my elastic IP I've now lost my my load balancer and I have to make DNS",
    "start": "669959",
    "end": "675079"
  },
  {
    "text": "changes I have all sorts of problems Ingress rules stand to decouple that",
    "start": "675079",
    "end": "681040"
  },
  {
    "text": "that those networking problems from your application and most importantly of this",
    "start": "681040",
    "end": "686880"
  },
  {
    "text": "we have what's called an Ingress controller and the Ingress controller is a control Loop that manages these rules and",
    "start": "686880",
    "end": "693279"
  },
  {
    "text": "applies them in in certain ways depending on what you're doing",
    "start": "693279",
    "end": "698360"
  },
  {
    "start": "696000",
    "end": "696000"
  },
  {
    "text": "so you have to have this thing running in your cluster Well Services do",
    "start": "698360",
    "end": "703519"
  },
  {
    "text": "that sure uh but ingresses have some really big advantages over them and I think",
    "start": "703519",
    "end": "710079"
  },
  {
    "text": "I've alluded to a couple of them but with Services you get a can service type of load balancer node IP cluster IP and",
    "start": "710079",
    "end": "716880"
  },
  {
    "text": "whatever else the kubernetes authors add in future versions this is really primitive round robin",
    "start": "716880",
    "end": "722240"
  },
  {
    "text": "based load balancing a lot of people are probably okay with that but there's other use",
    "start": "722240",
    "end": "727720"
  },
  {
    "text": "cases for for doing things like ab deploys and bleeding traffic and you may want to do that at the network level you",
    "start": "727720",
    "end": "733240"
  },
  {
    "text": "may not always want to do that via rolling deploy especially if you're beginning to test out different types of",
    "start": "733240",
    "end": "739199"
  },
  {
    "text": "applications different features you're flipping feature Flags uh you you may",
    "start": "739199",
    "end": "744600"
  },
  {
    "text": "not want to just rely on the deployment mechanism to do that for you so we have our Ingress controller and",
    "start": "744600",
    "end": "751600"
  },
  {
    "text": "instead this runs separately from your kubernetes master",
    "start": "751600",
    "end": "758320"
  },
  {
    "text": "and all these advantages are here and and you can deploy them all separately but the big thing here is",
    "start": "758519",
    "end": "767240"
  },
  {
    "text": "that and I may have gotten myself out of order here it's bring your own",
    "start": "767240",
    "end": "772880"
  },
  {
    "text": "controller you if if you stand up an Ingress resource and nothing happens it's because you didn't have an Ingress",
    "start": "772880",
    "end": "778399"
  },
  {
    "text": "controller and typically kubernetes installs don't ship with them Google container engine does there's a couple",
    "start": "778399",
    "end": "784199"
  },
  {
    "text": "third-party services that do but typically you just won't have that out of the box",
    "start": "784199",
    "end": "789399"
  },
  {
    "text": "so there's no some there's more upfront work but you are able to write your own",
    "start": "789399",
    "end": "794600"
  },
  {
    "text": "and Define your own rules with that and so when we create an Ingress resource for the first couple times and",
    "start": "794600",
    "end": "800880"
  },
  {
    "text": "nothing happens it's because we didn't have an Ingress controller to apply our rules to the networking fabric above our",
    "start": "800880",
    "end": "807360"
  },
  {
    "text": "cluster so it's important to note that this role runs separately from your kubernetes",
    "start": "807360",
    "end": "813279"
  },
  {
    "text": "master meaning you can have one or a thousand different Ingress controllers depending on what you're",
    "start": "813279",
    "end": "818760"
  },
  {
    "text": "doing so let's deploy something we're going to deploy an",
    "start": "818760",
    "end": "824480"
  },
  {
    "text": "application called crock Hunter uh this has shamelessly been redistributed from uh another uh colleague of mine uh Lan",
    "start": "824480",
    "end": "831759"
  },
  {
    "text": "Evenson and you can talk to him about kubernetes and the Croc here he's hunting and it's built as a Helm chart",
    "start": "831759",
    "end": "837279"
  },
  {
    "text": "if you haven't checked out Helm please please do check it out I use it heavily in the rest of this talk we're going to deploy it now and",
    "start": "837279",
    "end": "845279"
  },
  {
    "text": "hope the live demo gods are happy with me uh is this all visible in the",
    "start": "845279",
    "end": "852560"
  },
  {
    "text": "back great okay so I'm going to do a Helm install our charts are crock Hunter",
    "start": "852560",
    "end": "858519"
  },
  {
    "text": "and one thing I'm going to do real quick before we do that is I'm going to disable our Ingress",
    "start": "858519",
    "end": "865199"
  },
  {
    "text": "now just to throw some charts at you these are going to be a little bit more Den than a normal chart just because it",
    "start": "865199",
    "end": "870560"
  },
  {
    "text": "is templated with Helm but the important thing is here note that we have a standard deployment that you'd expect",
    "start": "870560",
    "end": "877880"
  },
  {
    "text": "and we have a service whoops and we have a service nowhere in",
    "start": "877880",
    "end": "884759"
  },
  {
    "text": "the service do we say okay it's it's a type of anything and nowhere do we expose this to the internet on the note",
    "start": "884759",
    "end": "890560"
  },
  {
    "text": "or anything we're just going to create a service that bundles up all of the replicas of this deployment and",
    "start": "890560",
    "end": "896839"
  },
  {
    "text": "represents them as a single that single semantic group grouping I was talking about so we're going to do a Helm install of that crock Hunter",
    "start": "896839",
    "end": "903959"
  },
  {
    "text": "chart and here in a moment we'll have it live on our cluster so if I do",
    "start": "903959",
    "end": "910320"
  },
  {
    "text": "a uh Cube cuddle get pods watch and type it",
    "start": "910920",
    "end": "919079"
  },
  {
    "text": "right we'll see we have our uh it's it's important to know that Helm gave us a",
    "start": "919079",
    "end": "924480"
  },
  {
    "text": "random name or a slug random slug for application and gave us three pods under that so we have a nice running",
    "start": "924480",
    "end": "930440"
  },
  {
    "text": "application if we're inside of our cluster we could go to a steer quall do default. cluster. service local or",
    "start": "930440",
    "end": "937720"
  },
  {
    "text": "service cluster local and we'll get it but how do we get to that from the",
    "start": "937720",
    "end": "942800"
  },
  {
    "text": "outside we don't have an external IP so we can't do that uh we could expose over V type load balancer of course and it",
    "start": "942800",
    "end": "948759"
  },
  {
    "text": "would create this is a Google container engine cluster so it would create a load",
    "start": "948759",
    "end": "953800"
  },
  {
    "text": "balancer for us but let's try it with this Ingress way so here's our resource",
    "start": "953800",
    "end": "959680"
  },
  {
    "text": "for this again fairly templated out",
    "start": "959680",
    "end": "965680"
  },
  {
    "text": "but the important thing here is we have our rules and under here we just have a",
    "start": "965680",
    "end": "971480"
  },
  {
    "text": "single path of Slash and that points out towards our service so unlike a service we're not",
    "start": "971480",
    "end": "978959"
  },
  {
    "text": "pointing at pods we're not selecting on pods we actually specify directly the service that we're going to use we're not doing a selector and we're not doing",
    "start": "978959",
    "end": "985440"
  },
  {
    "text": "a set like we would with a service so I'm going to turn this on in my values.",
    "start": "985440",
    "end": "992680"
  },
  {
    "text": "yl and I'm going to do a Helm upgrade on our AER",
    "start": "993800",
    "end": "999199"
  },
  {
    "text": "quall and change the name real",
    "start": "1006120",
    "end": "1010000"
  },
  {
    "text": "quick so I'm not running the default gka load balancer inside of this I'm",
    "start": "1013240",
    "end": "1018639"
  },
  {
    "text": "actually using the Ingress we're going to be creating here in the next few minutes and it's an engine X based load",
    "start": "1018639",
    "end": "1025400"
  },
  {
    "text": "balancer that gives me subit different subdomain routing rules so let's go here to crock hunter.",
    "start": "1025400",
    "end": "1033199"
  },
  {
    "text": "kat. j.org if I can",
    "start": "1033199",
    "end": "1040520"
  },
  {
    "text": "select and it's live it's up and running you all can go there you can spend the rest of this talk if you want hunting",
    "start": "1045679",
    "end": "1051720"
  },
  {
    "text": "crocodiles uh but you may want to watch what's happening instead of I mean it's addicting but",
    "start": "1051720",
    "end": "1058960"
  },
  {
    "text": "uh it it I'll I'll keep it up the rest of the day so okay that was cool we got",
    "start": "1058960",
    "end": "1065640"
  },
  {
    "text": "traffic to it uh by using an Ingress and more",
    "start": "1065640",
    "end": "1070679"
  },
  {
    "text": "importantly after we defined that role it was picked up by some sort of Ingress controller so let's walk through writing",
    "start": "1070679",
    "end": "1077440"
  },
  {
    "start": "1072000",
    "end": "1072000"
  },
  {
    "text": "a basic uh engine X controller if you're not familiar with go uh that's okay uh",
    "start": "1077440",
    "end": "1082600"
  },
  {
    "text": "I've kept this pretty simple and AER and we'll we'll quickly talk through everything uh it reads well",
    "start": "1082600",
    "end": "1090000"
  },
  {
    "text": "enough so the first thing we do uh as I say it reads well enough and then throw",
    "start": "1090000",
    "end": "1095440"
  },
  {
    "text": "a bunch of engine X on the screen uh is to find a quick engine X template that",
    "start": "1095440",
    "end": "1102440"
  },
  {
    "text": "basically takes everything up and wraps it uh out the the results we want",
    "start": "1102440",
    "end": "1109760"
  },
  {
    "text": "from there all we need to do is use the standard kubernetes client to get our",
    "start": "1109880",
    "end": "1115559"
  },
  {
    "text": "handle on our Ingress resources and make a client and just start parsing them for whatever name spaces we want",
    "start": "1115559",
    "end": "1122799"
  },
  {
    "text": "notice right above me on the right we we use api. namespace all you could",
    "start": "1122799",
    "end": "1128200"
  },
  {
    "text": "actually use this to filter down by different namespaces if you only wanted to do this for a single name space or or",
    "start": "1128200",
    "end": "1134919"
  },
  {
    "text": "you wanted to do other interesting patterns all right cool we uh we have kubernetes",
    "start": "1134919",
    "end": "1141120"
  },
  {
    "text": "API we got a template let's go and start our engine X process so in this in this",
    "start": "1141120",
    "end": "1147559"
  },
  {
    "text": "contrived World we're going to have a Docker file that contains both this binary and an engine X process that",
    "start": "1147559",
    "end": "1153480"
  },
  {
    "text": "we're then going to deploy somewhere so we're going to assume we have a handle on enginex somewhere and we'll solve that in the docker file and call it a a",
    "start": "1153480",
    "end": "1161520"
  },
  {
    "text": "day next we're going to go ahead and search for all of our Ingress",
    "start": "1161520",
    "end": "1167000"
  },
  {
    "text": "resources the rate limiters there so we don't crush our kubernetes API server uh and it's a pretty standard pattern uh I",
    "start": "1167000",
    "end": "1174520"
  },
  {
    "text": "think it's part of the standard Library actually in kubernetes um and then we list out all",
    "start": "1174520",
    "end": "1180480"
  },
  {
    "text": "of our ingresses no matter the name space we just grab all of our ingresses and we check it against some",
    "start": "1180480",
    "end": "1187120"
  },
  {
    "text": "known list that we have and we create an enginex configuration to match this is about as",
    "start": "1187120",
    "end": "1193559"
  },
  {
    "text": "simple as it gets there's much more complicated uh Ingress schemes and Ingress controllers traffic's one of",
    "start": "1193559",
    "end": "1199280"
  },
  {
    "text": "them there's a whole bunch of options but uh you know just keeping this very very",
    "start": "1199280",
    "end": "1204480"
  },
  {
    "text": "simple and then we're going to reload our config this is the the gist of the entire basic Alpha demo uh engine x",
    "start": "1204480",
    "end": "1212760"
  },
  {
    "text": "controller that's provided in the kubernetes contrib repo so it's about 80 lines of code and you have the very",
    "start": "1212760",
    "end": "1218039"
  },
  {
    "text": "basics of a of a working Ingress controller that you can spin up to do as much as you want uh the the one that uh",
    "start": "1218039",
    "end": "1224880"
  },
  {
    "text": "traffic provides or traffic provides is incredibly robust uh there's also very robust ones for engine X and because",
    "start": "1224880",
    "end": "1231919"
  },
  {
    "text": "this is all driven by your own code there's no reason you couldn't control a physical load balancer as well and and that that's",
    "start": "1231919",
    "end": "1238080"
  },
  {
    "text": "really the beauty of Ingress is that you define kind of the rules of what your Ingress controller looks like so if we",
    "start": "1238080",
    "end": "1245320"
  },
  {
    "text": "look at just what H what just happened we get an ingress resource resource that's picked up we get a virtual host",
    "start": "1245320",
    "end": "1251400"
  },
  {
    "text": "definition and I can access my my crock Hunter service all right so you might say okay",
    "start": "1251400",
    "end": "1258280"
  },
  {
    "text": "my my infrastructure is a snowflake uh we do things like uh per branch deploys",
    "start": "1258280",
    "end": "1265440"
  },
  {
    "text": "that give our QA team a chance to review this in advance and we have all sorts of interesting serious things that uh you",
    "start": "1265440",
    "end": "1272760"
  },
  {
    "text": "know if you go read Phoenix project like we're we're way past there great go ahead and embrace that snowflake you you",
    "start": "1272760",
    "end": "1279080"
  },
  {
    "text": "are able to do that uh you know building an Ingress controller is really easy and everyone",
    "start": "1279080",
    "end": "1286039"
  },
  {
    "text": "in this room could do it uh you don't even NE necessarily need to write it and go it could be in any language it can be",
    "start": "1286039",
    "end": "1291679"
  },
  {
    "text": "whatever you want but you are able to craft it to your own needs all right so here's the",
    "start": "1291679",
    "end": "1299320"
  },
  {
    "start": "1296000",
    "end": "1296000"
  },
  {
    "text": "challenge uh and because I didn't want to test the live demog goodes too much we have our Ingress controller up and",
    "start": "1299320",
    "end": "1305240"
  },
  {
    "text": "running already but we want to deploy crock hunter in a slightly different way we want to do it based on our CI",
    "start": "1305240",
    "end": "1311720"
  },
  {
    "text": "pipeline setup we and and really get it into a setup where our developers can",
    "start": "1311720",
    "end": "1317200"
  },
  {
    "text": "make as much progress as POS possible uh without being deterred and then get that those results to our QA Engineers again",
    "start": "1317200",
    "end": "1325120"
  },
  {
    "text": "without being deterred and being blocked so we'll start off Master is our root",
    "start": "1325120",
    "end": "1330440"
  },
  {
    "text": "domain and it's open uh we'll ignore the oth rules for the moment but staging is",
    "start": "1330440",
    "end": "1335799"
  },
  {
    "text": "on a staging subdomain and it's based on our staging Branch every pull request we do or",
    "start": "1335799",
    "end": "1344200"
  },
  {
    "text": "really for this demo every uh feature Branch we push up we'll get a feature branch deployment with its own",
    "start": "1344200",
    "end": "1350360"
  },
  {
    "text": "domain all this controlled by CI and the developers don't hate themselves at the",
    "start": "1350360",
    "end": "1356720"
  },
  {
    "text": "end so we're going need our in controller and an Ingress now for this I'm using build",
    "start": "1356720",
    "end": "1363360"
  },
  {
    "text": "kite uh we have a couple other options that uh we can show you uh we have some good demos of Jenkins and really this",
    "start": "1363360",
    "end": "1369960"
  },
  {
    "text": "can fit into whatever CI system you're using but I've just chosen build kite for the purposes of",
    "start": "1369960",
    "end": "1375520"
  },
  {
    "text": "this so we're going to take and add some stuff into our crock Hunter app uh we have some typos down here and some",
    "start": "1375520",
    "end": "1382080"
  },
  {
    "text": "issues and we're on the master Branch right now so I'm going to go ahead and check",
    "start": "1382080",
    "end": "1388760"
  },
  {
    "text": "out uh we'll just call this add cubec con to",
    "start": "1389159",
    "end": "1394360"
  },
  {
    "text": "it and I'll stash first",
    "start": "1394360",
    "end": "1400760"
  },
  {
    "text": "so all right we're on our feature Branch now I'm just going to go ahead and make some adjustments",
    "start": "1401720",
    "end": "1409399"
  },
  {
    "text": "in our Handler here and I'm just going to say welcome to",
    "start": "1412240",
    "end": "1416960"
  },
  {
    "text": "cucon okay and now I'm going to do a",
    "start": "1418400",
    "end": "1425200"
  },
  {
    "text": "commit and we'll add all",
    "start": "1428840",
    "end": "1434000"
  },
  {
    "text": "first and then we'll push",
    "start": "1434000",
    "end": "1438480"
  },
  {
    "text": "now we immediately see in our pipeline if we come back",
    "start": "1445840",
    "end": "1449760"
  },
  {
    "text": "over if I push it to the right Branch so I'm going to push to our remote",
    "start": "1455840",
    "end": "1461240"
  },
  {
    "text": "Branch there we go all right our new remote branch has been",
    "start": "1466120",
    "end": "1473039"
  },
  {
    "text": "stood up and our build is right now running we'll go through the mechanics",
    "start": "1473039",
    "end": "1478120"
  },
  {
    "text": "of this afterwards but this is basically going in and building out our new container and pushing it up somewhere",
    "start": "1478120",
    "end": "1484919"
  },
  {
    "text": "that we can end up using it so we have our pipeline it's now",
    "start": "1484919",
    "end": "1490159"
  },
  {
    "text": "going to build now while that's happening and while that's building let's talk a",
    "start": "1490159",
    "end": "1495720"
  },
  {
    "text": "little bit about the structure of this so I have some steps here that",
    "start": "1495720",
    "end": "1502440"
  },
  {
    "text": "effectively leverage the upgrade ability of Helm combined with our Ingress inside of crock Hunter to do a an upgrade and",
    "start": "1502440",
    "end": "1509840"
  },
  {
    "text": "an install with our with the correct image tag and then potentially with the rest the right subdomain so for each of these",
    "start": "1509840",
    "end": "1517200"
  },
  {
    "text": "branches I'm creating a new Ingress resource that the controller will pick up and deploy a new subdomain",
    "start": "1517200",
    "end": "1522760"
  },
  {
    "text": "to you can expand upon this and also add say like a job to your Helm chart that",
    "start": "1522760",
    "end": "1528840"
  },
  {
    "text": "is a scheduled J job that'll delete your Ingress after 24 hours or whatever amount of time you set the nice thing is is those options",
    "start": "1528840",
    "end": "1536039"
  },
  {
    "text": "are up to you and you can keep these simple through a combination of of these resources so that's been pushed and now",
    "start": "1536039",
    "end": "1543399"
  },
  {
    "text": "it's deployed so now if I go to add cucon new.",
    "start": "1543399",
    "end": "1550039"
  },
  {
    "text": "hunter. kat. jared.com we have our new deployment",
    "start": "1550039",
    "end": "1556200"
  },
  {
    "text": "with that update so so the nice thing is here we were able",
    "start": "1556200",
    "end": "1562200"
  },
  {
    "text": "to do that without building any custom systems without doing any hard work we just used the built-in resources that",
    "start": "1562200",
    "end": "1568480"
  },
  {
    "text": "were available to us and that made things really easy compared to trying to try to build out these massive",
    "start": "1568480",
    "end": "1575520"
  },
  {
    "text": "deployment pipelines that that really end up being these these brittle QA systems now we're working just within",
    "start": "1575520",
    "end": "1581120"
  },
  {
    "text": "kubernetes resources and keeping things much much more simple",
    "start": "1581120",
    "end": "1587240"
  },
  {
    "text": "so as a recap uh when we talk about a service we're",
    "start": "1590159",
    "end": "1595480"
  },
  {
    "text": "really talking about defining our resources and the the challenge I have here is to",
    "start": "1595480",
    "end": "1601000"
  },
  {
    "text": "not just reach for if you can help it a type of load balancer and expose that to",
    "start": "1601000",
    "end": "1606320"
  },
  {
    "text": "The Wider World rather think of them as a as that grouping and pair them with your application so when you deploy a an",
    "start": "1606320",
    "end": "1613760"
  },
  {
    "text": "application bundle deploy it as you know your deployment your service your config m",
    "start": "1613760",
    "end": "1618799"
  },
  {
    "text": "all of it and think of that as one unit and Ingress can sit separately of that",
    "start": "1618799",
    "end": "1625000"
  },
  {
    "text": "Ingress doesn't have to be part of that unit Ingress really is about how you Expose and Route information to",
    "start": "1625000",
    "end": "1632000"
  },
  {
    "text": "that so and really what I want to impress upon you is match your routing to your needs",
    "start": "1632000",
    "end": "1638279"
  },
  {
    "text": "uh you know don't let someone else decide what routing means for you don't just pick something off the shelf and don't be limited into creating these",
    "start": "1638279",
    "end": "1644840"
  },
  {
    "text": "very in insane traffic patterns because you feel like you have to use a service and and attach it to a type of some",
    "start": "1644840",
    "end": "1653000"
  },
  {
    "text": "sort this is all built into kubernetes now for you and it really saves you a lot of trouble and time for",
    "start": "1653000",
    "end": "1660760"
  },
  {
    "text": "that so thank you very much my demo run ran a little short than than intended but uh or expected but uh you know",
    "start": "1661159",
    "end": "1667960"
  },
  {
    "text": "please come to me I'll be at our booth talk to me about deas kubernetes uh all those sorts of things and uh again this",
    "start": "1667960",
    "end": "1674679"
  },
  {
    "text": "is ingress your rou your rules and I'm Jared Dylan so thank",
    "start": "1674679",
    "end": "1680559"
  },
  {
    "text": "you and I think we have time for questions if anyone wants them or just come up or",
    "start": "1682600",
    "end": "1689559"
  },
  {
    "text": "whatever",
    "start": "1691039",
    "end": "1694039"
  },
  {
    "text": "yes so let me repeat the question uh if you want L7 load balancing between your pods what would I recommend is that",
    "start": "1699080",
    "end": "1705440"
  },
  {
    "text": "correct uh so it depends uh if you're using Google container engine I would just recommend the uh build and you're",
    "start": "1705440",
    "end": "1711640"
  },
  {
    "text": "talking about single service multiple pots even multiple services on the same",
    "start": "1711640",
    "end": "1719159"
  },
  {
    "text": "route yeah are you talking about like or are you talking about different do you want load balance between services or",
    "start": "1719159",
    "end": "1727720"
  },
  {
    "text": "pods between services on the same L land you would probably have to set up a",
    "start": "1727799",
    "end": "1734440"
  },
  {
    "text": "an engine X config to cover that and then uh you you could do with engine X",
    "start": "1734440",
    "end": "1739799"
  },
  {
    "text": "you just make sure you make sure you have some sort of metadata in there so that they all get picked up into the same uh server back or the same backends",
    "start": "1739799",
    "end": "1748360"
  },
  {
    "text": "and then that should cover it",
    "start": "1748360",
    "end": "1753559"
  },
  {
    "text": "um hack the engine x one yeah yeah yeah I mean it's it's yeah",
    "start": "1753919",
    "end": "1760000"
  },
  {
    "text": "you you could absolutely either Fork one of the like an existing one and do it pretty I imagine pretty easily uh you",
    "start": "1760000",
    "end": "1766559"
  },
  {
    "text": "would just have to adjust the template I can walk through it with you",
    "start": "1766559",
    "end": "1771278"
  },
  {
    "text": "too uh that's a good question how's the D router different so the D router currently is not an Ingress controller",
    "start": "1772559",
    "end": "1779799"
  },
  {
    "text": "it just sits separately uh I believe it's on a road map to enable it so that you could use it as an Ingress",
    "start": "1779799",
    "end": "1785799"
  },
  {
    "text": "controller if you want to um but we have we there's a lot of plans around that so",
    "start": "1785799",
    "end": "1791360"
  },
  {
    "text": "right now it just sits as a pod with a service in front of it and then it routes from there",
    "start": "1791360",
    "end": "1799159"
  },
  {
    "text": "yeah it works entirely on metadata so uh basically if you're using de router you use all annotations on your service and",
    "start": "1799159",
    "end": "1806480"
  },
  {
    "text": "that'll configure things you know TLS and uh and also headers that get that get sent through so it's more advanced",
    "start": "1806480",
    "end": "1813200"
  },
  {
    "text": "in that sense but it it right now Ingress resources aren't aren't or it's",
    "start": "1813200",
    "end": "1818840"
  },
  {
    "text": "not based off of Ingress resources",
    "start": "1818840",
    "end": "1824799"
  },
  {
    "text": "yes uh question was what's my approach to ha Inus controllers uh I right now",
    "start": "1826760",
    "end": "1834720"
  },
  {
    "text": "prefer to run a single uh replica of a single Ingress controller if uh one",
    "start": "1834720",
    "end": "1842440"
  },
  {
    "text": "pattern I've been I've had some successed with is doing namespace filtering on those so I will set up one",
    "start": "1842440",
    "end": "1849279"
  },
  {
    "text": "per namespace that I care about and then manage that deployment separately so I might have five Ingress controllers for",
    "start": "1849279",
    "end": "1856960"
  },
  {
    "text": "my five different environment ments",
    "start": "1856960",
    "end": "1863440"
  },
  {
    "text": "yes sure that's a great question uh how does how does ingress handle non-http traffic such as uh Sni based traffic or",
    "start": "1874000",
    "end": "1882120"
  },
  {
    "text": "telet or UDP or any other protocol that's that's not that standard what",
    "start": "1882120",
    "end": "1888279"
  },
  {
    "text": "we're thinking about so that's dependent on what you're using for a controller so engine X supports UDP uh uh load",
    "start": "1888279",
    "end": "1895799"
  },
  {
    "text": "balancing as well and you could write something for it but the resource doesn't change too much you probably",
    "start": "1895799",
    "end": "1901279"
  },
  {
    "text": "would not end up using much in the way of the standard rules and configuring via metadata uh for your resource and then",
    "start": "1901279",
    "end": "1908320"
  },
  {
    "text": "picking up that resource within whatever your controller software is uh but the",
    "start": "1908320",
    "end": "1913840"
  },
  {
    "text": "configuration options right now are very much geared towards L7",
    "start": "1913840",
    "end": "1919278"
  },
  {
    "text": "any other questions all right thanks everyone",
    "start": "1921039",
    "end": "1926750"
  },
  {
    "text": "[Applause]",
    "start": "1926750",
    "end": "1930880"
  }
]