[
  {
    "text": "okay hi um so uh my name's Ed crew uh come",
    "start": "640",
    "end": "8080"
  },
  {
    "text": "here from the UK from Bristol uh you might not have heard of Bristol I think",
    "start": "8080",
    "end": "13360"
  },
  {
    "text": "the last time we were internationally in the news was during the black lives matter right where the bristian decided",
    "start": "13360",
    "end": "20000"
  },
  {
    "text": "to roll Edward colston's statue into the docks or maybe nobody knows about that I don't know but uh it it was uh it was on",
    "start": "20000",
    "end": "27920"
  },
  {
    "text": "the on the international news cuz he was a prolific slaver and so it was time to",
    "start": "27920",
    "end": "34600"
  },
  {
    "text": "dunk him in the docks leaving aside Bristol I work for",
    "start": "34600",
    "end": "40320"
  },
  {
    "text": "EDB which is basically we do the majority of",
    "start": "40320",
    "end": "45520"
  },
  {
    "text": "contributions to each release of well maybe not majority but but a large proportion of the cont of the uh each",
    "start": "45520",
    "end": "53559"
  },
  {
    "text": "release of postgress and and things like PG admin stuff like that but also um",
    "start": "53559",
    "end": "59280"
  },
  {
    "text": "newer all like Cloud native postgress which uh is",
    "start": "59280",
    "end": "65518"
  },
  {
    "text": "a tool that is used to create a a kind",
    "start": "65519",
    "end": "70799"
  },
  {
    "text": "of obviously you can download it and use it for your own purposes but EDB also",
    "start": "70799",
    "end": "77159"
  },
  {
    "text": "Pro provide a a cross Marketplace product postgress AI which I work on",
    "start": "77159",
    "end": "83240"
  },
  {
    "text": "doing microservices and it uses cmpg as a way of creating distributors",
    "start": "83240",
    "end": "90159"
  },
  {
    "text": "postgress clusters so um this talk overlaps",
    "start": "90159",
    "end": "95320"
  },
  {
    "text": "slightly with the last talk in some ways you know it's about a similar subject",
    "start": "95320",
    "end": "102200"
  },
  {
    "text": "and I see uh you know certain amount of the audience is still here so so the last",
    "start": "102200",
    "end": "107560"
  },
  {
    "text": "one was was more Java based um and this one's more go based but the idea is it's",
    "start": "107560",
    "end": "113920"
  },
  {
    "text": "more about um you can you can fake it to make it by using your own setup",
    "start": "113920",
    "end": "119960"
  },
  {
    "text": "framework you don't necessarily need to use something like quirkus or tilt a or whatever so uh to start off with why do",
    "start": "119960",
    "end": "128239"
  },
  {
    "text": "we want to fake things for testing so uh normally with unit test we have the code",
    "start": "128239",
    "end": "135280"
  },
  {
    "text": "wrapped in in effect an API it's basically it's just its method a unit of code that we want to totally isolate so",
    "start": "135280",
    "end": "140959"
  },
  {
    "text": "we uh we create um these uh wrapper mocks of the API of",
    "start": "140959",
    "end": "148599"
  },
  {
    "text": "what it talks to we usually have to write out the actual the full code to do that work because then um in go we can",
    "start": "148599",
    "end": "157280"
  },
  {
    "text": "use mock gen to automatically generate the mocks of those apis which we can then populate with with with fixed",
    "start": "157280",
    "end": "165319"
  },
  {
    "text": "um results responses for example if it was a DB API",
    "start": "165319",
    "end": "173000"
  },
  {
    "text": "um if it was postgress you could be creating SQL responses but that could equally well be S3 storage or something",
    "start": "173000",
    "end": "181560"
  },
  {
    "text": "and you can knit together all your your um unit tests of the code and it feels",
    "start": "181560",
    "end": "189200"
  },
  {
    "text": "like you've um you've got good coverage well you may have good statistical",
    "start": "189200",
    "end": "194319"
  },
  {
    "text": "coverage when you run that but the the problem is that you basically got a bit of a Swifts cheese of coverage because",
    "start": "194319",
    "end": "201000"
  },
  {
    "text": "most of the actual functionality that it's doing is missing because in Cloud",
    "start": "201000",
    "end": "206080"
  },
  {
    "text": "applications we're always plugging in uh a great deal of external sources of uh",
    "start": "206080",
    "end": "213920"
  },
  {
    "text": "services and and the amount of code that you've got in your your own um the spoke",
    "start": "213920",
    "end": "220959"
  },
  {
    "text": "code that you're developing is is literally rapper code and so you have various problems then",
    "start": "220959",
    "end": "227480"
  },
  {
    "text": "associated with unit tests um",
    "start": "227480",
    "end": "233280"
  },
  {
    "text": "so as I said the tests depend on the API details there's the uh cry w effect so",
    "start": "233280",
    "end": "240760"
  },
  {
    "text": "what I mean here is because you're um specifying in detail the API",
    "start": "240760",
    "end": "246480"
  },
  {
    "text": "in in order to unit test it then you tend to have code that's quite fragile",
    "start": "246480",
    "end": "251879"
  },
  {
    "text": "because if you're driving up quality you want to be doing refactor Cycles where you rewrite code that particularly is",
    "start": "251879",
    "end": "258840"
  },
  {
    "text": "about the API you might want to upgrade API versions you may want to rewrite whatever queries or whatever you're",
    "start": "258840",
    "end": "265400"
  },
  {
    "text": "doing and so um you tend to get get broken broken tests and you tend to",
    "start": "265400",
    "end": "272919"
  },
  {
    "text": "expect that almost because you've done a refactor and and you know a broken test",
    "start": "272919",
    "end": "278039"
  },
  {
    "text": "is is kind of worse than no test because if you regularly get broken tests it just means you just ignore all the tests",
    "start": "278039",
    "end": "283280"
  },
  {
    "text": "because well they keep breaking anyway so forget them um that makes it fairly unreliable for test Rhythm development",
    "start": "283280",
    "end": "290039"
  },
  {
    "text": "because the whole point there is you want um to be able to rely on it",
    "start": "290039",
    "end": "296320"
  },
  {
    "text": "functionally checking what your code should be doing and not to just break because you've changed the way you've implemented it there's also the problem",
    "start": "296320",
    "end": "302919"
  },
  {
    "text": "you write it after the test usually because you're generating uh the mocks from the uh the",
    "start": "302919",
    "end": "309120"
  },
  {
    "text": "full implementation that youve you've written and that that again mitigates against use for testm development you",
    "start": "309120",
    "end": "315199"
  },
  {
    "text": "meant to write the test first where they fail and then get them to pass by filling in the functional",
    "start": "315199",
    "end": "322039"
  },
  {
    "text": "code so there's there's various problems at the unit test level but we still you",
    "start": "322039",
    "end": "328199"
  },
  {
    "text": "know you still need to have good coverage of unit tests and if nothing else they document probably the only",
    "start": "328199",
    "end": "333919"
  },
  {
    "text": "place that fully documents what your code is meant to do if you have decent coverage you kind of that's where you",
    "start": "333919",
    "end": "338960"
  },
  {
    "text": "say what your code is trying to do so we if we don't have the unit",
    "start": "338960",
    "end": "346120"
  },
  {
    "text": "test um if we if we've just done the the unit",
    "start": "346120",
    "end": "351360"
  },
  {
    "text": "testing level then we may be tempted to say well we've got kubernetes it's whole",
    "start": "351360",
    "end": "359759"
  },
  {
    "text": "thing is infrastructure is code it whole thing is that we can automatically create the whole deployment and",
    "start": "359759",
    "end": "366599"
  },
  {
    "text": "therefore we create the whole deployment because that's a lot easier than thinking about how we want to fill in",
    "start": "366599",
    "end": "372039"
  },
  {
    "text": "functional testing in the middle between the unit tests and the whole deployment so we we do the whole thing we might",
    "start": "372039",
    "end": "378520"
  },
  {
    "text": "have uh deployments that you run up because each developer wants their own",
    "start": "378520",
    "end": "384240"
  },
  {
    "text": "deployment that they mess around with there will be ones that are pre-release like staging and the like so um this is",
    "start": "384240",
    "end": "391639"
  },
  {
    "text": "a diagram of standard thing where you run up a test deployment so you might",
    "start": "391639",
    "end": "397720"
  },
  {
    "text": "have that as a cicg job and maybe it takes an hour or so to actually fully",
    "start": "397720",
    "end": "402919"
  },
  {
    "text": "create everything uh and then it runs up the various microservices here we've got",
    "start": "402919",
    "end": "408960"
  },
  {
    "text": "these examples with the the database the API to that the grpc uh then you might have a rest layer",
    "start": "408960",
    "end": "417240"
  },
  {
    "text": "with GPC you can you can generate rest layer so can use Jason transcoding to do",
    "start": "417240",
    "end": "422639"
  },
  {
    "text": "that um and then you test with a front end to Tool and you have your end to end",
    "start": "422639",
    "end": "431400"
  },
  {
    "text": "testing um sorry",
    "start": "431400",
    "end": "436560"
  },
  {
    "text": "so the problem with the end to endend",
    "start": "437759",
    "end": "444199"
  },
  {
    "text": "testing as well as um the fact that it it takes so long to",
    "start": "444199",
    "end": "450680"
  },
  {
    "text": "stand up is the the associated cost so moving on to that",
    "start": "450680",
    "end": "457599"
  },
  {
    "text": "um I've come up with a fair amount of diagrams in in this talk just to help explain concept so interestingly this",
    "start": "457599",
    "end": "464599"
  },
  {
    "text": "one's about the Irish the Irish problem is not really a problem but it is perhaps for their electricity provision",
    "start": "464599",
    "end": "470759"
  },
  {
    "text": "but uh Ireland is the English speaking part of the EU and has attracted a lot",
    "start": "470759",
    "end": "476520"
  },
  {
    "text": "of investment by cloud service providers so actually a quarter of its meter electricity goes",
    "start": "476520",
    "end": "482680"
  },
  {
    "text": "towards running Cloud for Europe which is a significant amount of electricity um and uh if you do most of",
    "start": "482680",
    "end": "491560"
  },
  {
    "text": "your testing by doing full-on deploy do full deployment you're",
    "start": "491560",
    "end": "499000"
  },
  {
    "text": "basically causing this whole County clear in red I've got here which is that",
    "start": "499000",
    "end": "504120"
  },
  {
    "text": "amount of electricity being used in Ireland for running stuff that nobody's actually ever really using as a customer",
    "start": "504120",
    "end": "510039"
  },
  {
    "text": "it's Dev it's one of those various forms of Dev it may be your staging it may be the thing you can run up as a developer",
    "start": "510039",
    "end": "516640"
  },
  {
    "text": "to try stuff out but there's a sustainability issue there as well as money",
    "start": "516640",
    "end": "523000"
  },
  {
    "text": "so Solutions so you don't need um especially if you're using Go I mean the",
    "start": "523000",
    "end": "529839"
  },
  {
    "text": "concept can apply to any language but it's just uh this example isn't go um",
    "start": "529839",
    "end": "535959"
  },
  {
    "text": "and it refers to certain go tools so you can",
    "start": "535959",
    "end": "542720"
  },
  {
    "text": "fake um subsets of your microservices instead of running up the whole thing",
    "start": "542720",
    "end": "547800"
  },
  {
    "text": "you can get effective functional testing which can run instead of an hour to set it all up can run in seconds so you can",
    "start": "547800",
    "end": "554720"
  },
  {
    "text": "do it live in your IDE and test stuff and in order to do that you fake",
    "start": "554720",
    "end": "561399"
  },
  {
    "text": "things and there's some quite useful fakes around so instead of having this",
    "start": "561399",
    "end": "567480"
  },
  {
    "text": "we've got this so grpc has buff conon I guess you probably heard of it if you",
    "start": "567480",
    "end": "573480"
  },
  {
    "text": "use GPC so it basically runs up all your grpc in local memory attaching the",
    "start": "573480",
    "end": "578680"
  },
  {
    "text": "client running up the services doesn't have to go over HTTP or anything can be",
    "start": "578680",
    "end": "583920"
  },
  {
    "text": "run up in a second similarly you have fakes for other layers so in my",
    "start": "583920",
    "end": "592000"
  },
  {
    "text": "case it may be they use embedded postest which is a postest that can just run on the file system and be torn down uh also",
    "start": "592000",
    "end": "599959"
  },
  {
    "text": "run up in seconds similar sort of thing basically you follow that model you create a",
    "start": "599959",
    "end": "607240"
  },
  {
    "text": "framework that runs up when you want to run your your fake tests to functionally",
    "start": "607240",
    "end": "614480"
  },
  {
    "text": "test what's going on so um bit more detail on the types of test doubles you",
    "start": "614480",
    "end": "621680"
  },
  {
    "text": "get uh don't want to turn into too much of a lecture but I guess most people know about these types of test doubles",
    "start": "621680",
    "end": "627360"
  },
  {
    "text": "but basically you have the the dummies and that um you have in unit testing and then you have some more specializ things",
    "start": "627360",
    "end": "634040"
  },
  {
    "text": "like spies which just monitor the calls coming back and forth to the the mock",
    "start": "634040",
    "end": "639320"
  },
  {
    "text": "object stubs uh hand answers and you might have recorders so you there's like",
    "start": "639320",
    "end": "646480"
  },
  {
    "text": "a grpc recorder so if you want to you could record your 20 microservices on a",
    "start": "646480",
    "end": "651720"
  },
  {
    "text": "live uh production use that as a test fixture and run it up so it'll rerun that in seconds locally um and then",
    "start": "651720",
    "end": "659519"
  },
  {
    "text": "there's full fake so why full fake I mean well embeded postest as an example but um there's plenty there's the whole",
    "start": "659519",
    "end": "668560"
  },
  {
    "text": "most of the cloud service providers provide good fakes of their core",
    "start": "668560",
    "end": "674880"
  },
  {
    "text": "Services um then we come to partial uh a partial service which is",
    "start": "674880",
    "end": "682279"
  },
  {
    "text": "is is the example that I'm providing as a solution to this issue so",
    "start": "682279",
    "end": "689480"
  },
  {
    "text": "here's here's some lists of uh the different some some examples of the",
    "start": "689480",
    "end": "696639"
  },
  {
    "text": "different types of fakes I've cut these into two two kinds",
    "start": "696639",
    "end": "702120"
  },
  {
    "text": "because you basically get the full implementation so you might have AWS local stock for running S3 locally um",
    "start": "702120",
    "end": "709399"
  },
  {
    "text": "but then you'll usually get the the actual full um SDK or API of that so if",
    "start": "709399",
    "end": "715880"
  },
  {
    "text": "you want to implement your own fake of that for special purposes you can do same with um gcloud",
    "start": "715880",
    "end": "722800"
  },
  {
    "text": "emulators obviously there's kind mini Cube and stuff for the cabetes level",
    "start": "722800",
    "end": "729760"
  },
  {
    "text": "um and so the Pyramid of testing um hopefully most people have seen this",
    "start": "730800",
    "end": "736680"
  },
  {
    "text": "diagram in one form or another at some talk or other I would hope it's a bit of a cliche of testing so the Pyramid of",
    "start": "736680",
    "end": "743680"
  },
  {
    "text": "testing is all about how you should be set setting up your levels of different types of testing and why and you go up",
    "start": "743680",
    "end": "751880"
  },
  {
    "text": "to the top of the pyramid where everything costs lots and lots of money and is full deployment is manual testing",
    "start": "751880",
    "end": "757160"
  },
  {
    "text": "down to the bottom where you've got complete isolation unit tests um and as",
    "start": "757160",
    "end": "762360"
  },
  {
    "text": "I said the problem is you got this hourglass where you're just doing the endtoend tests and the unit test where",
    "start": "762360",
    "end": "767639"
  },
  {
    "text": "where it's the point of of setting up using a fake framework either your own",
    "start": "767639",
    "end": "773240"
  },
  {
    "text": "wor quirkus tilt whatever um to fill in the middle bit is to allow you to have",
    "start": "773240",
    "end": "780519"
  },
  {
    "text": "have uh a more appropriate shaped pyramid but also the reason to have a",
    "start": "780519",
    "end": "786920"
  },
  {
    "text": "more appropriate shape pyramid is because it means that your test quality what you can functionally test and",
    "start": "786920",
    "end": "792720"
  },
  {
    "text": "therefore how you can drive up your cquality by refactor cycles and fast Dev",
    "start": "792720",
    "end": "797920"
  },
  {
    "text": "X experience is is much",
    "start": "797920",
    "end": "801399"
  },
  {
    "text": "improved so um I'm going to do a demo",
    "start": "803560",
    "end": "809760"
  },
  {
    "text": "uh the demo is just going to run through the different steps that uh the the the fake",
    "start": "809760",
    "end": "817160"
  },
  {
    "text": "that I created runs up the fake framework so essentially it goes through the numbers in this case it creates",
    "start": "817160",
    "end": "824639"
  },
  {
    "text": "embedded postest for each test week schema fixtures to that runs up the uh",
    "start": "824639",
    "end": "830720"
  },
  {
    "text": "services that are required by the main service I'm testing and then you can run",
    "start": "830720",
    "end": "838680"
  },
  {
    "text": "tests against the the storage API or the um grpc and as I say this is kind of",
    "start": "838680",
    "end": "845959"
  },
  {
    "text": "just an example one so it could be with your cloud service apis",
    "start": "845959",
    "end": "852160"
  },
  {
    "text": "um you know it could be any third-party cloud service where you may want to plug in a fake to test",
    "start": "852160",
    "end": "860600"
  },
  {
    "text": "it so uh I slightly cheated I and I recorded the start of the demo but I do",
    "start": "860759",
    "end": "866800"
  },
  {
    "text": "the the end of the demo live that was on the advice of uh possible issues",
    "start": "866800",
    "end": "874240"
  },
  {
    "text": "with the internet connections Etc so let's just check this is working hi so uh this",
    "start": "874240",
    "end": "881600"
  },
  {
    "text": "is going to be a demo sorry doing it both in the IDE",
    "start": "881600",
    "end": "887360"
  },
  {
    "text": "which is what I'm going to start with and the command line so uh the IDE obviously if you're using it as part of",
    "start": "887360",
    "end": "892920"
  },
  {
    "text": "your working process and this is an example where we just take uh created",
    "start": "892920",
    "end": "899800"
  },
  {
    "text": "project um in a way we do a kind of Behavioral driven development testing in",
    "start": "899800",
    "end": "905079"
  },
  {
    "text": "terms of it's a bit of a life cycle rather than table driven test so we uh",
    "start": "905079",
    "end": "910519"
  },
  {
    "text": "create the project test that we can get it once we've created it update it and then list",
    "start": "910519",
    "end": "918800"
  },
  {
    "text": "projects and delete the project so let's run this",
    "start": "918800",
    "end": "925440"
  },
  {
    "text": "test and what it's doing is what's in the test Runner here which is main test",
    "start": "925440",
    "end": "932680"
  },
  {
    "text": "it's uh setting up the storage um and other dependency Services it's uh",
    "start": "932680",
    "end": "938399"
  },
  {
    "text": "connecting to that um uh in order for us to check test results or otherwise chest",
    "start": "938399",
    "end": "944720"
  },
  {
    "text": "test the state that's changed um sets up specific apis for the package we're",
    "start": "944720",
    "end": "950800"
  },
  {
    "text": "testing so going back to the unit testing we tend to wrap things in an API when we're talking to external source so",
    "start": "950800",
    "end": "957920"
  },
  {
    "text": "that we use these here and then uh we um run up the actual grpc service service",
    "start": "957920",
    "end": "965920"
  },
  {
    "text": "and line in memory rather than over the network connect to it run the test Suite tear down the server tear down the",
    "start": "965920",
    "end": "973639"
  },
  {
    "text": "storage um so our test is run here we see that it's",
    "start": "973639",
    "end": "979399"
  },
  {
    "text": "passed and in the text precursor to the test we see",
    "start": "979399",
    "end": "985639"
  },
  {
    "text": "all this stand up going on the test run and pass stop tear",
    "start": "985639",
    "end": "993000"
  },
  {
    "text": "everything down 10",
    "start": "993000",
    "end": "996959"
  },
  {
    "text": "seconds so now we want to test for a new feature well test a",
    "start": "998600",
    "end": "1005600"
  },
  {
    "text": "confirmation of a feature we want to check that when we update our project we rename it correctly so um we're trying",
    "start": "1005600",
    "end": "1013839"
  },
  {
    "text": "to rename the project here so co-pilots jumped in as it always does um and so I",
    "start": "1013839",
    "end": "1020240"
  },
  {
    "text": "want to test that when I re rename it to rename project name it does actually get",
    "start": "1020240",
    "end": "1027959"
  },
  {
    "text": "renamed so I'll run the test again",
    "start": "1027959",
    "end": "1032319"
  },
  {
    "text": "now but I have a feeling it's not going to it's not going to be renamed as we",
    "start": "1033120",
    "end": "1038160"
  },
  {
    "text": "would like uh you write the test first of all and then you fix the code so oh",
    "start": "1038160",
    "end": "1044720"
  },
  {
    "text": "dear we always call it my project rather than uh giving a name that we're intending to rename it",
    "start": "1044720",
    "end": "1051200"
  },
  {
    "text": "and so we now fix that test fix it by",
    "start": "1051200",
    "end": "1057559"
  },
  {
    "text": "removing my deliberate error if you like but it demonstrates the process you do some",
    "start": "1057559",
    "end": "1063760"
  },
  {
    "text": "coding work to fix the uh bug revealed by the test and then you can",
    "start": "1063760",
    "end": "1070799"
  },
  {
    "text": "um save that and rerun the test to",
    "start": "1070799",
    "end": "1076720"
  },
  {
    "text": "confirm that things are working as as you would",
    "start": "1076720",
    "end": "1082400"
  },
  {
    "text": "hope uh so it's it's a kind of demo example of how we R but you you can get",
    "start": "1082400",
    "end": "1088240"
  },
  {
    "text": "the idea this is how you might use it in your IDE to do changes and get them to",
    "start": "1088240",
    "end": "1094960"
  },
  {
    "text": "pass so now we want to go to the command line at so I'll step in again there so I",
    "start": "1094960",
    "end": "1101919"
  },
  {
    "text": "can actually do some real demo uh so um we're going to uh this is like an",
    "start": "1101919",
    "end": "1107440"
  },
  {
    "text": "example of uh products that I was talking about is an example of you can add clusters and and the projects that I",
    "start": "1107440",
    "end": "1115840"
  },
  {
    "text": "was just mentioning so you create projects um and then",
    "start": "1115840",
    "end": "1122080"
  },
  {
    "text": "uh you add clusters to them and various AI bits and pieces um and that's running",
    "start": "1122080",
    "end": "1130720"
  },
  {
    "text": "on kind now so again it's a fake uh but it's a fake that takes unfortunately for our products probably takes about 30 40",
    "start": "1130720",
    "end": "1137000"
  },
  {
    "text": "minutes just to set up kind um to be running stuff so uh here I've got",
    "start": "1137000",
    "end": "1145679"
  },
  {
    "text": "um the K k9's just uh pointed at the the",
    "start": "1145679",
    "end": "1153080"
  },
  {
    "text": "main admin app um so if I highlight that just to show to prove that it's it's",
    "start": "1153080",
    "end": "1159799"
  },
  {
    "text": "actually um running against the oh sorry it's running locally first of all so",
    "start": "1159799",
    "end": "1164919"
  },
  {
    "text": "this is doing it in uh again against the the stuff that's been set up in memory",
    "start": "1164919",
    "end": "1170559"
  },
  {
    "text": "um and then we want to connect it to uh to the kind",
    "start": "1170559",
    "end": "1179360"
  },
  {
    "text": "install then we uh run it again it's just got that count equals one because uh so it to stop it caching",
    "start": "1191039",
    "end": "1199039"
  },
  {
    "text": "all the test is go automatically this is just using using standard go tools so um now we run it again and uh the purpose",
    "start": "1199039",
    "end": "1207039"
  },
  {
    "text": "of this is to show you it's fairly easy to have something where you set it up so",
    "start": "1207039",
    "end": "1213280"
  },
  {
    "text": "you can do it in memory against your PC but then you can just flip it to use a cube context to point to an actual",
    "start": "1213280",
    "end": "1220240"
  },
  {
    "text": "deployment um",
    "start": "1220240",
    "end": "1224080"
  },
  {
    "text": "so so oh",
    "start": "1225799",
    "end": "1232440"
  },
  {
    "text": "whoops undeliberately mistake it's probably why I recorded the first demo I",
    "start": "1232440",
    "end": "1237679"
  },
  {
    "text": "need to export that not to set it um so now what we're looking for here is a a",
    "start": "1237679",
    "end": "1244159"
  },
  {
    "text": "twitch where it it's actually talks there we go we saw two things where it's hitting kind we also saw some errors",
    "start": "1244159",
    "end": "1250640"
  },
  {
    "text": "because uh another deliberate mistake well there's basically uh there was an extra project left in there just to",
    "start": "1250640",
    "end": "1256559"
  },
  {
    "text": "trigger and show that this is this is not running against the same thing this is running against a real deployment could be running against real kubernetes",
    "start": "1256559",
    "end": "1263120"
  },
  {
    "text": "or on any cloud service provider and it's good to have a cycle so that you have your functional test framework",
    "start": "1263120",
    "end": "1268799"
  },
  {
    "text": "that's doing things in seconds in your IDE uh where you can also run against your full deployment to",
    "start": "1268799",
    "end": "1275720"
  },
  {
    "text": "confirm it its test testing reality um you can",
    "start": "1275720",
    "end": "1282640"
  },
  {
    "text": "also a major benefit of this for when it's running in memory is uh it can use",
    "start": "1282640",
    "end": "1288679"
  },
  {
    "text": "all the standard coverage tools because like unit test in effect is running those in local memory and although you",
    "start": "1288679",
    "end": "1294559"
  },
  {
    "text": "can uh instrument go binaries uh to give you coverage of an actual binary you",
    "start": "1294559",
    "end": "1299919"
  },
  {
    "text": "can't you can't run those when they're remotely in a cloud to get coverage so",
    "start": "1299919",
    "end": "1305080"
  },
  {
    "text": "so um to save time I won't run that again",
    "start": "1305080",
    "end": "1310320"
  },
  {
    "text": "on here I'll go back to the talk and so there's just a command",
    "start": "1310320",
    "end": "1318159"
  },
  {
    "text": "line go thing standard you ask for coverage when you run the tests you get an output",
    "start": "1318159",
    "end": "1324559"
  },
  {
    "text": "file uh you can run another go tool that then will generate the coverage and so",
    "start": "1324559",
    "end": "1331279"
  },
  {
    "text": "here's the commands at the bottom here um and this is for uh checking that",
    "start": "1331279",
    "end": "1336720"
  },
  {
    "text": "you're you're covering all the code in your project and it will give you the full thing where it highlights every line of code that's been functionally",
    "start": "1336720",
    "end": "1343480"
  },
  {
    "text": "tested in your code so that you know you've got a good um it's giving you good test uh",
    "start": "1343480",
    "end": "1353240"
  },
  {
    "text": "validation so um the final",
    "start": "1353400",
    "end": "1359559"
  },
  {
    "text": "two slides here are just concerning the uh way that you might",
    "start": "1359559",
    "end": "1366400"
  },
  {
    "text": "want to manage the data and the way you might want to choose to run different",
    "start": "1366400",
    "end": "1371960"
  },
  {
    "text": "forms of tests against different forms of deployment and it gets a bit of anyway",
    "start": "1371960",
    "end": "1377600"
  },
  {
    "text": "so with the data the issue is the data is fine if you're just doing it in in memory on a local thing which is",
    "start": "1377600",
    "end": "1385000"
  },
  {
    "text": "torn down immediately you can you can have any other stuff in there and you can have separate uh in memory storage",
    "start": "1385000",
    "end": "1394520"
  },
  {
    "text": "for each test Suite but um if you also want to run it against a remote then it will send to just have a single store",
    "start": "1394520",
    "end": "1399840"
  },
  {
    "text": "and you got to be very careful that you annotate data so that you can uh tear it",
    "start": "1399840",
    "end": "1405279"
  },
  {
    "text": "down again afterwards so um it's basically slightly different process but um you you need to clean up obviously if",
    "start": "1405279",
    "end": "1412960"
  },
  {
    "text": "it's not just a temporary version of the system and so it tends to be better to use data factories rather than fixtures",
    "start": "1412960",
    "end": "1419480"
  },
  {
    "text": "although fixtures can be useful um if you use a data Factory then you can always wrap all your tests with data you",
    "start": "1419480",
    "end": "1426760"
  },
  {
    "text": "create and tear down and have it as Mark data so you know you always clean out the data",
    "start": "1426760",
    "end": "1432679"
  },
  {
    "text": "State one last big diagram the diagram about how you might want to run your",
    "start": "1432679",
    "end": "1438000"
  },
  {
    "text": "different types of tests against different um cases of different uh test",
    "start": "1438000",
    "end": "1445960"
  },
  {
    "text": "environments in effect so we have our manual frequent tests we want to run all",
    "start": "1445960",
    "end": "1451400"
  },
  {
    "text": "the time when we're doing code we've obviously got the zero environment of unit tests but they're not really",
    "start": "1451400",
    "end": "1456919"
  },
  {
    "text": "testing functionally whether things might work they just work according to when we last bother to update our mock",
    "start": "1456919",
    "end": "1463039"
  },
  {
    "text": "of so with the partial environment I demonstrated or one that you create you",
    "start": "1463039",
    "end": "1469080"
  },
  {
    "text": "you have the ability to to also have um frequent manual testing to confirm",
    "start": "1469080",
    "end": "1474960"
  },
  {
    "text": "functionally things are better and you can also obviously use that same environment uh for PRS you don't want to",
    "start": "1474960",
    "end": "1481919"
  },
  {
    "text": "have any cicd PR that's running for more than 15 minutes really I mean it depends",
    "start": "1481919",
    "end": "1488559"
  },
  {
    "text": "how frequently people want to actually get stuff accepted or reviewed but I've been",
    "start": "1488559",
    "end": "1494799"
  },
  {
    "text": "I've worked at places where people had the full full on endtoend test T had to",
    "start": "1494799",
    "end": "1500080"
  },
  {
    "text": "go through before the pr was accepted and when that test also maybe had to",
    "start": "1500080",
    "end": "1505399"
  },
  {
    "text": "cope with different environments you were looking at like a 2hour 2our that's just no good so you can't do that so so",
    "start": "1505399",
    "end": "1512880"
  },
  {
    "text": "that's why it's useful to have um faster fakes to do this sort of stuff and then",
    "start": "1512880",
    "end": "1518279"
  },
  {
    "text": "when it gets to the periodic runs you can you can do those uh where you do the",
    "start": "1518279",
    "end": "1524000"
  },
  {
    "text": "full stand up and the point is that you uh because it's infrastructure is code you often need to have the",
    "start": "1524000",
    "end": "1531440"
  },
  {
    "text": "infrastructure code infrastructure description basically equaling the code changes and so it's it's important to to",
    "start": "1531440",
    "end": "1537600"
  },
  {
    "text": "do a full deployment test at times and full release um but the point of this",
    "start": "1537600",
    "end": "1543919"
  },
  {
    "text": "diagram I suppose is that the functional test can be used across a number of",
    "start": "1543919",
    "end": "1549000"
  },
  {
    "text": "those run environment types um and if that was missing from the puzzle",
    "start": "1549000",
    "end": "1555720"
  },
  {
    "text": "personally I would feel bereft so I feel that you should you should think about uh whether it's missing from your",
    "start": "1555720",
    "end": "1561799"
  },
  {
    "text": "testing puzzle where you work and and whether it's worth trying to uh to add it in there and and like I say there are",
    "start": "1561799",
    "end": "1569679"
  },
  {
    "text": "there are things like til Dev uh will use a load of kubernetes operators in a",
    "start": "1569679",
    "end": "1575120"
  },
  {
    "text": "kind of um a fair Fairly opinionated place where you put your code and then",
    "start": "1575120",
    "end": "1580200"
  },
  {
    "text": "it will check that your code is changed and then use the operators to roll up later versions of the containers so that",
    "start": "1580200",
    "end": "1586840"
  },
  {
    "text": "it updates so that you can kind of get that sort of experience but it's still you're talking",
    "start": "1586840",
    "end": "1593840"
  },
  {
    "text": "probably depends how much if it just does a quick UI flip it might be able to do it in a few minutes instead of",
    "start": "1593840",
    "end": "1599960"
  },
  {
    "text": "seconds but it's still not quite quite the speed that you can get with proper use of",
    "start": "1599960",
    "end": "1605360"
  },
  {
    "text": "fakes okay um I think I've run out of time or I've come to the end one of the",
    "start": "1605360",
    "end": "1611320"
  },
  {
    "text": "two so uh it's just a run through of of what",
    "start": "1611320",
    "end": "1617480"
  },
  {
    "text": "the talk was the is issues possible solution demo and uh running your test",
    "start": "1617480",
    "end": "1623000"
  },
  {
    "text": "issues okay thanks um any",
    "start": "1623000",
    "end": "1627679"
  },
  {
    "text": "questions no oh a question um",
    "start": "1636799",
    "end": "1643559"
  },
  {
    "text": "yeah how do we make sure this",
    "start": "1647159",
    "end": "1651000"
  },
  {
    "text": "works",
    "start": "1652640",
    "end": "1655640"
  },
  {
    "text": "stand yeah I mean I'm not standing up any containers uh if you were doing",
    "start": "1663640",
    "end": "1668840"
  },
  {
    "text": "stuff where you having to test particular behavior of kubernetes with what you were doing then you would need",
    "start": "1668840",
    "end": "1674399"
  },
  {
    "text": "to use um kind or some other long lived um fake environment which you could",
    "start": "1674399",
    "end": "1681200"
  },
  {
    "text": "clean States statewise and use but basically the code I'm testing is code",
    "start": "1681200",
    "end": "1686480"
  },
  {
    "text": "that doesn't necessarily have to run in kubernetes it canut run in memory as grpc storage and the other fakes of",
    "start": "1686480",
    "end": "1692600"
  },
  {
    "text": "what's going in there so so it's literally running in memory like unit test too really it's just it needs more",
    "start": "1692600",
    "end": "1697880"
  },
  {
    "text": "stand up and tear down than unit tests um but yeah all those different environments to the more full-on fakes",
    "start": "1697880",
    "end": "1705880"
  },
  {
    "text": "where you're using a lot of containers which was a bit the quer example earlier um but they",
    "start": "1705880",
    "end": "1712480"
  },
  {
    "text": "do they can take rather longer to run test and they're quite they they tend to mean that you",
    "start": "1712480",
    "end": "1718840"
  },
  {
    "text": "have to commit to using all that stuff rather than just using the lightweight fakes that are available with whatever",
    "start": "1718840",
    "end": "1725240"
  },
  {
    "text": "you're coding he is",
    "start": "1725240",
    "end": "1733200"
  },
  {
    "text": "that uh yeah C do probably the right thing to",
    "start": "1734440",
    "end": "1740519"
  },
  {
    "text": "do uh just more of a quick sort of um opinion sort of backwards and forwards",
    "start": "1740519",
    "end": "1745880"
  },
  {
    "text": "is uh I assume when you talk about fakes you're meaning in a well architected application where you've got your",
    "start": "1745880",
    "end": "1751720"
  },
  {
    "text": "interfaces at the right layers you're just writing in memory implementations right that's what you mean by fake um",
    "start": "1751720",
    "end": "1758120"
  },
  {
    "text": "yeah I I guess I I mean uh yeah I'm I'm I basically mean any anything that isn't",
    "start": "1758120",
    "end": "1765799"
  },
  {
    "text": "really a fake can mean anything that isn't productive that provides of the",
    "start": "1765799",
    "end": "1772640"
  },
  {
    "text": "functionality for the purposes of the test so you know it's it's not that's not a scientific definition it's just",
    "start": "1772640",
    "end": "1778919"
  },
  {
    "text": "what I've yeah but the concrete the concrete example would be something like if you had if you following the repository pattern and you had a user",
    "start": "1778919",
    "end": "1785200"
  },
  {
    "text": "repository and a patient repository or whatever else then you'd have your SQL implementation or your Oracle or post",
    "start": "1785200",
    "end": "1791960"
  },
  {
    "text": "implementation and you'd have your in memory implementation which is your fake right yeah so you could have SQL light",
    "start": "1791960",
    "end": "1797720"
  },
  {
    "text": "but you you you know if it was whatever um you have S if it's uh Oracle you I",
    "start": "1797720",
    "end": "1803159"
  },
  {
    "text": "think you can have an inmemory Oracle database the same as you can with you",
    "start": "1803159",
    "end": "1808320"
  },
  {
    "text": "know MySQL yeah but if you did go down rolling your own in memory one using a dictionary or whatever behind the scenes",
    "start": "1808320",
    "end": "1813880"
  },
  {
    "text": "to you know store the data then you're also kind of at risk of also having to always make sure you're actually",
    "start": "1813880",
    "end": "1820240"
  },
  {
    "text": "reproducing the same behavior that you would get from the database like if I queried it and there was some filter",
    "start": "1820240",
    "end": "1826840"
  },
  {
    "text": "stuff going on then my fake would have to also make sure it mimicked the production implementation well that yeah",
    "start": "1826840",
    "end": "1832440"
  },
  {
    "text": "that was more that very quick slide I said about you know you can use fixures uh or you can you can use data factories",
    "start": "1832440",
    "end": "1840039"
  },
  {
    "text": "but if you've got a quite extensive data that you need to be there for the purposes of the testing um then it it's",
    "start": "1840039",
    "end": "1847679"
  },
  {
    "text": "it's kind of probably another talk there there are there are tools that allow you to create um an anonymize data from",
    "start": "1847679",
    "end": "1855200"
  },
  {
    "text": "actual production data or various other things if you if you need to especially in the medical field um but yeah they're",
    "start": "1855200",
    "end": "1860679"
  },
  {
    "text": "not really the subject to this talk but yeah a heavy data application would need that sort of stuff I guess to be",
    "start": "1860679",
    "end": "1866760"
  },
  {
    "text": "effectively testing cool okay",
    "start": "1866760",
    "end": "1871240"
  },
  {
    "text": "thanks well okay I think it's copyright now but",
    "start": "1876200",
    "end": "1884039"
  },
  {
    "text": "you know stay seated I'm finished",
    "start": "1884039",
    "end": "1889638"
  }
]