[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "great thank you so much for coming to my",
    "start": "350",
    "end": "5549"
  },
  {
    "text": "talk I'm really excited to share with you my talk about distributors Tracy my",
    "start": "5549",
    "end": "11910"
  },
  {
    "text": "name is leta Joe I work on the networking team over at lyft and I'm here to give you more of an intro if",
    "start": "11910",
    "end": "18270"
  },
  {
    "text": "this talk is really meant for people who has never they've heard of distributed tracing but they don't quite know what",
    "start": "18270",
    "end": "23970"
  },
  {
    "text": "it is or like what it's used for so this talk is meant for you to explain like",
    "start": "23970",
    "end": "30650"
  },
  {
    "text": "what distribution is what is it good for and like give concrete examples of how itself some of my problems and how we",
    "start": "30650",
    "end": "37829"
  },
  {
    "text": "rolled it out at lyft",
    "start": "37829",
    "end": "41059"
  },
  {
    "text": "so I'm using my mouse isn't working alright so before I jump in I wanted to",
    "start": "45050",
    "end": "51059"
  },
  {
    "text": "explain my background a little bit so I've been um I've been working at live",
    "start": "51059",
    "end": "57090"
  },
  {
    "text": "for four and a half years and I'm the first part of my career I worked on lip line working on rolling out features and",
    "start": "57090",
    "end": "64939"
  },
  {
    "text": "launching lines to all the different regions and now it's like news nationwide which is pretty awesome and",
    "start": "64939",
    "end": "70590"
  },
  {
    "text": "then I switch over to infrastructure and it's really cool to be able to bring that Park knowledge over and apply that",
    "start": "70590",
    "end": "76439"
  },
  {
    "text": "to infrastructure and make engineers more productive and be able to have them",
    "start": "76439",
    "end": "81720"
  },
  {
    "text": "ship code using the tools that you've built and previous to that I worked on",
    "start": "81720",
    "end": "88250"
  },
  {
    "text": "and during my time in infrastructure I've also worked on to your PC and standardizing our services serious",
    "start": "88250",
    "end": "95130"
  },
  {
    "text": "communication with protocol buffers then before lyft I worked at DreamWorks",
    "start": "95130",
    "end": "100770"
  },
  {
    "text": "Animation making tools for artists and working on rendering algorithms and",
    "start": "100770",
    "end": "107369"
  },
  {
    "text": "managing our render farm and it's been pretty cool too throughout my career I think I really enjoy making tools and",
    "start": "107369",
    "end": "114509"
  },
  {
    "text": "making people other people more effective and that's it and distributed tracing is one of those tools that",
    "start": "114509",
    "end": "120320"
  },
  {
    "text": "wouldn't Stu teach them I like what it is and how it's useful they get really excited about it so this is the overall",
    "start": "120320",
    "end": "127500"
  },
  {
    "text": "agenda so I'm gonna go over an overview over what distribution is",
    "start": "127500",
    "end": "133020"
  },
  {
    "text": "I split it up into two parts so the first is the visual visualization aspect like what are you seeing what kind of",
    "start": "133020",
    "end": "138420"
  },
  {
    "text": "data it can you see and like what kind of questions can you answer with distributed tracing and then I'll go",
    "start": "138420",
    "end": "144330"
  },
  {
    "text": "into the implementation portion like how do I get this into my system how do I instrument so that like I could get that",
    "start": "144330",
    "end": "150660"
  },
  {
    "text": "data to view and then the second part of the talk is going to go over like how lyft integrated with it and because and",
    "start": "150660",
    "end": "157650"
  },
  {
    "text": "how we rolled it out to all our micro services and I'll go over the challenges like integrating and then some learnings",
    "start": "157650",
    "end": "164730"
  },
  {
    "text": "so that if you decide to integrate it in your company like you you could take these with you so before before I can jump into what",
    "start": "164730",
    "end": "173010"
  },
  {
    "start": "170000",
    "end": "266000"
  },
  {
    "text": "distributed tracing is and wanted to give context of what the lay of the land out there before we it we got",
    "start": "173010",
    "end": "180840"
  },
  {
    "text": "distributed tracing so what are the current of the really tools that lyft had first and foremost is metrics so",
    "start": "180840",
    "end": "188720"
  },
  {
    "text": "there everyone I feel like that's their first way to monitor your system like",
    "start": "188720",
    "end": "196110"
  },
  {
    "text": "they're very cheap let you fire them within your application and you measure things like all rights through protes",
    "start": "196110",
    "end": "201540"
  },
  {
    "text": "CPU saturation and memory usage and at the bottom there I like have a sample like we are most of our services and",
    "start": "201540",
    "end": "207870"
  },
  {
    "text": "lyft is using Python and I have a sample there of how application engineer could fire off a stat it's very easy just one",
    "start": "207870",
    "end": "214080"
  },
  {
    "text": "line of code and what's also cool about this is that as you horizontally scale your metrics don't get more expensive",
    "start": "214080",
    "end": "222060"
  },
  {
    "text": "because it's just a number at the end of the day so and they're very easy to reason about like you see did you see the rate of change and you could and you",
    "start": "222060",
    "end": "228870"
  },
  {
    "text": "could also use create your alarms base it off based off of these graphs the",
    "start": "228870",
    "end": "234750"
  },
  {
    "text": "second thing is logging so there Jenner they're like string base generate about an application and they're used to",
    "start": "234750",
    "end": "240780"
  },
  {
    "text": "display like errors and stack traces and they're meant to use as a debugging tool",
    "start": "240780",
    "end": "246570"
  },
  {
    "text": "so let's say you see a spike in your dashboard or five hundreds you can go into your logs and like look at a",
    "start": "246570",
    "end": "253560"
  },
  {
    "text": "machine and see what is happening there so they're men they're not used to be they're not really used for monitoring",
    "start": "253560",
    "end": "260250"
  },
  {
    "text": "or like seeing the health of your system but more for like debugging when you know that your system is something's",
    "start": "260250",
    "end": "265410"
  },
  {
    "text": "wrong with your system so metrics and logging are great and this talk is not about how like",
    "start": "265410",
    "end": "270900"
  },
  {
    "text": "distributed tracing is better than any of these or like they're supposed to replace any of these I think they're all",
    "start": "270900",
    "end": "277250"
  },
  {
    "text": "complimentary you need all of them metrics and naki tell a story from one perspective from one application and",
    "start": "277250",
    "end": "284090"
  },
  {
    "text": "this was pretty good for us for a while because we were a monolith so back in",
    "start": "284090",
    "end": "289530"
  },
  {
    "text": "the day lyft was a PHP monolith and all the transactions happen in one of the same computer and so a statin law could you",
    "start": "289530",
    "end": "297720"
  },
  {
    "text": "could set and log off of this monolith and it could show you the whole request flow and because it was a single process",
    "start": "297720",
    "end": "304320"
  },
  {
    "text": "one request took one process in the same box so that would that worked really",
    "start": "304320",
    "end": "310020"
  },
  {
    "text": "well for us but then we started moving over to micro services and now like request started going through multiple",
    "start": "310020",
    "end": "316530"
  },
  {
    "text": "computers doing multiple network hops and now it's kind of hard to reason about like why like a write request",
    "start": "316530",
    "end": "321900"
  },
  {
    "text": "failed because there was a lot more dependencies to and more logs we need to stitch together and we did it for a",
    "start": "321900",
    "end": "328650"
  },
  {
    "text": "little while we added like a identifier forever a log per request and we could search off of that identifier like a",
    "start": "328650",
    "end": "334560"
  },
  {
    "text": "request ID or write ID but then and and then you could like search for that ID",
    "start": "334560",
    "end": "341610"
  },
  {
    "text": "and I kind of figure out what's happening so yeah here I'll go through a normal flow but how like I would go",
    "start": "341610",
    "end": "348300"
  },
  {
    "text": "debug let's say I see a spike of five hundreds and I found like a write ID",
    "start": "348300",
    "end": "354570"
  },
  {
    "text": "that that went through like that got that 500 and I'll show you like my debug",
    "start": "354570",
    "end": "362190"
  },
  {
    "text": "flow in the log metric world so I go searching for a write ID and I notice here that it went through like these",
    "start": "362190",
    "end": "369330"
  },
  {
    "text": "services like the regroup aSG's by services so and here are the timestamps",
    "start": "369330",
    "end": "376409"
  },
  {
    "text": "right that's who I could tell that there was some ordering where like the for the topmost log is the most recent and the",
    "start": "376409",
    "end": "382620"
  },
  {
    "text": "bottom is the the oldest and here I'm pre this mental model in my head that",
    "start": "382620",
    "end": "388289"
  },
  {
    "text": "like oh like this require request went through envoy and then we talk to public API then rides API and then the API",
    "start": "388289",
    "end": "395130"
  },
  {
    "text": "service however like that worked well for like when we were like 10 services but now we're like way more",
    "start": "395130",
    "end": "401249"
  },
  {
    "text": "than that a single request can go through twenty and thirty services and we have now like over five hundred",
    "start": "401249",
    "end": "407659"
  },
  {
    "text": "services today and we have at each request can like one write request can",
    "start": "407659",
    "end": "412979"
  },
  {
    "text": "go through 200 plus RPC calls and yeah so there's now our system is way more",
    "start": "412979",
    "end": "419819"
  },
  {
    "text": "complex so I I'm not gonna I don't want to go through pages and pages of logs trying to figure out what the root cause",
    "start": "419819",
    "end": "425909"
  },
  {
    "text": "was or what the or what even like answering the question of like what does this request depend on is now a lot more",
    "start": "425909",
    "end": "431669"
  },
  {
    "text": "complicated so yeah it's like way too much to fit in my brain is there a",
    "start": "431669",
    "end": "436830"
  },
  {
    "start": "432000",
    "end": "657000"
  },
  {
    "text": "better way to display this data that's digestible and like show me exactly what I care about versus like sifting through",
    "start": "436830",
    "end": "444680"
  },
  {
    "text": "logs I mean sure we could make a bit better query language or like basically",
    "start": "444680",
    "end": "450779"
  },
  {
    "text": "come up with ways to make it work with logs but is there is there a better way so that is what distributing tracing is",
    "start": "450779",
    "end": "458069"
  },
  {
    "text": "trying to solve it's trying to solve the fact that now requests go through many",
    "start": "458069",
    "end": "464189"
  },
  {
    "text": "systems and many micro services and trying to show you that data in a way that's like that's digestible to the",
    "start": "464189",
    "end": "470729"
  },
  {
    "text": "human and figure out and figure like do root cause analysis quicker and answer",
    "start": "470729",
    "end": "477479"
  },
  {
    "text": "your questions about your system a lot faster so here's that same example in",
    "start": "477479",
    "end": "484469"
  },
  {
    "text": "like a distributed tracing form so notice here the top level is the root trace so that's the initial that's where",
    "start": "484469",
    "end": "491789"
  },
  {
    "text": "the request started off where and notice here that there's a like a span so each",
    "start": "491789",
    "end": "497219"
  },
  {
    "text": "row is known as a span and that signifies a unit of work and so and each",
    "start": "497219",
    "end": "504060"
  },
  {
    "text": "span must have like I'd like a name so like an operation name and it must have",
    "start": "504060",
    "end": "509759"
  },
  {
    "text": "a time like I must have a start and end time and that shows you like it's relating C and so as you can see here as",
    "start": "509759",
    "end": "517229"
  },
  {
    "text": "you go down the rows and they're nested and that means that like that unit of work that envoy call made a network call",
    "start": "517229",
    "end": "524430"
  },
  {
    "text": "to public API like ingress and egress so like it came in and that came out of that box and made another call to write",
    "start": "524430",
    "end": "531060"
  },
  {
    "text": "API and again to the API service and it's at the rightmost corner it shows you timing",
    "start": "531060",
    "end": "537110"
  },
  {
    "text": "information of how long a unit of work took so let's go to more like a less",
    "start": "537110",
    "end": "542750"
  },
  {
    "text": "complex example like a more contrived example so here we have like a client in a web server and in the web server talks",
    "start": "542750",
    "end": "549260"
  },
  {
    "text": "with three little micro services oh sorry - micro services in one database so the client makes it initiates the",
    "start": "549260",
    "end": "555560"
  },
  {
    "text": "call and that's and that span signifies the how long that request took and",
    "start": "555560",
    "end": "561140"
  },
  {
    "text": "nested in that it made a call to the web server and the web server then call called a service to make sure you it",
    "start": "561140",
    "end": "568220"
  },
  {
    "text": "authenticated that request and that concurrently called the billing and verify micro services calls and then",
    "start": "568220",
    "end": "575600"
  },
  {
    "text": "process some data and then stored all the results into a database so let's say",
    "start": "575600",
    "end": "580730"
  },
  {
    "text": "the database is on fire like let's say like it's but let's so usually that gets shown as a dashboard what is it as a",
    "start": "580730",
    "end": "590090"
  },
  {
    "text": "five hundred and if you were to look zip through logs it would be it's pretty deep the error is pretty deep into the",
    "start": "590090",
    "end": "597910"
  },
  {
    "text": "requests right and and I would have to sift through many logs if I could find",
    "start": "597910",
    "end": "602990"
  },
  {
    "text": "out oh the database is not working but here in the trace in one page and quickly see like oh that's the thing",
    "start": "602990",
    "end": "609290"
  },
  {
    "text": "that's causing the error that's the reason like I should investigate that and page the right person the second",
    "start": "609290",
    "end": "616040"
  },
  {
    "text": "most useful thing that I found distributed chasing useful for is performance optimizations so here this",
    "start": "616040",
    "end": "622910"
  },
  {
    "text": "is a very common thing I've seen out lift but transformed into this example basically we have this again client web",
    "start": "622910",
    "end": "631040"
  },
  {
    "text": "server call and we notice that the building system is calling the database get user three times it's the same exact",
    "start": "631040",
    "end": "637550"
  },
  {
    "text": "data it's getting and here in this view is very clear to see that it's duplicating work and cause a necessary",
    "start": "637550",
    "end": "643700"
  },
  {
    "text": "load to the database and maybe we could recommend like a caching solution to the",
    "start": "643700",
    "end": "650150"
  },
  {
    "text": "payment systems because like why it should not need to get the called database three times for the exact same",
    "start": "650150",
    "end": "656450"
  },
  {
    "text": "data okay so this is great like there's like this visualization is very useful",
    "start": "656450",
    "end": "663830"
  },
  {
    "start": "657000",
    "end": "898000"
  },
  {
    "text": "like I like you stores a lot of data in one place how do I get this out to get get it into",
    "start": "663830",
    "end": "671029"
  },
  {
    "text": "my system like it must be very hard like do I have to get all my product engineers to like add more code and how",
    "start": "671029",
    "end": "679699"
  },
  {
    "text": "do I make sure it's like correct and yeah there were a lot of challenges of getting adding trig just adding just",
    "start": "679699",
    "end": "686930"
  },
  {
    "text": "there are challenges to adding distribute tracing into any system one is the fact that like we have a polygon",
    "start": "686930",
    "end": "692690"
  },
  {
    "text": "Microsoft micro-services architecture so we have we support both go Python Java and PHP and we don't want",
    "start": "692690",
    "end": "700970"
  },
  {
    "text": "to have to write clients for every single language for this and also trying to get get and and so what is it try to",
    "start": "700970",
    "end": "710029"
  },
  {
    "text": "get libraries written for this it's we more add more languages we don't want to add more client libraries or like",
    "start": "710029",
    "end": "717350"
  },
  {
    "text": "libraries for distributed tracing the second thing is we do not want product and ship engineers to think about",
    "start": "717350",
    "end": "723260"
  },
  {
    "text": "instrumentation and there's many reasons for this one is the fact that it's hard to get engineers to get change their",
    "start": "723260",
    "end": "729410"
  },
  {
    "text": "code they just want to focus on shipping features and they just want to like they",
    "start": "729410",
    "end": "735380"
  },
  {
    "text": "just want to hit their ok ours right they don't want to go back and like look through all their legacy code and add",
    "start": "735380",
    "end": "740899"
  },
  {
    "text": "like the these instrumentation code into every endpoint that's a lot of work and",
    "start": "740899",
    "end": "746600"
  },
  {
    "text": "and tracing it's not very useful if like one service instruments it's like the",
    "start": "746600",
    "end": "753380"
  },
  {
    "text": "network effect so the more networks are micro services that instrument with distributed tracing the more useful it",
    "start": "753380",
    "end": "758690"
  },
  {
    "text": "is so like the fact that to convince the first engineer to move over and they",
    "start": "758690",
    "end": "765410"
  },
  {
    "text": "don't they're not going to see any benefits for quite some time secondly we don't want any like product",
    "start": "765410",
    "end": "771620"
  },
  {
    "text": "engineers to make mistakes but at the instrument right so if the data like it's mislabeled or like they don't pass",
    "start": "771620",
    "end": "779420"
  },
  {
    "text": "in the right tracing ID then like um then then like they don't get hooked",
    "start": "779420",
    "end": "785510"
  },
  {
    "text": "together and and now the distributors trace doesn't make any sense",
    "start": "785510",
    "end": "790480"
  },
  {
    "text": "lastly we want to be able to standardize so we want like the names of the traces",
    "start": "790899",
    "end": "796730"
  },
  {
    "text": "to be consistent like we want like let's say we want every single ingress",
    "start": "796730",
    "end": "802520"
  },
  {
    "text": "trace to have like the endpoint path name or like we want the start and time to be exactly the same like those really",
    "start": "802520",
    "end": "809510"
  },
  {
    "text": "matter because like if you're gonna make decisions on them like they need to be standardized and accurate so that people",
    "start": "809510",
    "end": "815540"
  },
  {
    "text": "can make good assumptions right we don't want we don't want every single tree like we don't want people to read the",
    "start": "815540",
    "end": "821090"
  },
  {
    "text": "code of where the instrumentation was taking place because it's different for every service that's not as useful",
    "start": "821090",
    "end": "828370"
  },
  {
    "text": "the other option people have thought about is like you could monkey patch all of this to all the services so like",
    "start": "828370",
    "end": "835220"
  },
  {
    "text": "let's say like you use like a like a web framework you can monkey patch it there one that doesn't really work for like",
    "start": "835220",
    "end": "841670"
  },
  {
    "text": "languages like go but secondly it also it's not a great it's not great if like",
    "start": "841670",
    "end": "847220"
  },
  {
    "text": "things were to go wrong and then like your that your us infrastructure team is stuck with all the support burden to",
    "start": "847220",
    "end": "852860"
  },
  {
    "text": "like fix it versus like versus like the product engineer to be able to fix it",
    "start": "852860",
    "end": "858710"
  },
  {
    "text": "themselves and it's also not a very like nice thing to just do it do it behind the scenes",
    "start": "858710",
    "end": "864890"
  },
  {
    "text": "and then they're just and they're not aware cuz and also it's easier to make",
    "start": "864890",
    "end": "870050"
  },
  {
    "text": "mistakes this way a lot less and of course it's we don't want vendor lock-in",
    "start": "870050",
    "end": "876230"
  },
  {
    "text": "so let's say if we were to use like a vendor specific instrumentation library",
    "start": "876230",
    "end": "881240"
  },
  {
    "text": "then like worse and that we and we we as a lift we want to be able to switch",
    "start": "881240",
    "end": "888620"
  },
  {
    "text": "between vendors and like try different tools as the industry changes and it will be really and we don't want to do a",
    "start": "888620",
    "end": "895400"
  },
  {
    "text": "huge migration if we wanted to switch to a different vendor so this is what open",
    "start": "895400",
    "end": "901070"
  },
  {
    "start": "898000",
    "end": "1127000"
  },
  {
    "text": "tracing is trying to solve open tracing is is a CN CF CN CF a project that is",
    "start": "901070",
    "end": "910820"
  },
  {
    "text": "trying to standardize all the instrumentation and just you in tribute of tracing one great thing is that it's",
    "start": "910820",
    "end": "917750"
  },
  {
    "text": "it's basically a interface where you all you have to do is like and they have",
    "start": "917750",
    "end": "924970"
  },
  {
    "text": "implementations of many different languages and all you have to do is adhere to this interface and",
    "start": "924970",
    "end": "932100"
  },
  {
    "text": "and then what you you you get all you get all the benefits and the and the",
    "start": "932100",
    "end": "939180"
  },
  {
    "text": "vendors all have to implement the on the collector side that interface and then",
    "start": "939180",
    "end": "945660"
  },
  {
    "text": "you could swap out vendors very easily again it's supported by the CN CF Foundation and has libraries from many",
    "start": "945660",
    "end": "952649"
  },
  {
    "text": "languages so it supports all the languages that we we use such as Python go and Java and PHP and yeah it's",
    "start": "952649",
    "end": "961889"
  },
  {
    "text": "vendor-neutral the idea here is to make it so that you how you're emitting the",
    "start": "961889",
    "end": "967290"
  },
  {
    "text": "data is different from who's collecting it and that way like you instrument your code once and then you don't have to",
    "start": "967290",
    "end": "974220"
  },
  {
    "text": "worry about like migrating over to a different vendor you could just swap them out pretty easily so let's do a",
    "start": "974220",
    "end": "982560"
  },
  {
    "text": "concrete example of like what this looks like in Python so this is how you would",
    "start": "982560",
    "end": "988350"
  },
  {
    "text": "initialize a tracer so you do have to initialize specific and this is good a change depending what vendor you use I'm showing two examples here one with light",
    "start": "988350",
    "end": "995579"
  },
  {
    "text": "step and the other with Jager which is the open source tracing solution and light step is a paid vendor so it's",
    "start": "995579",
    "end": "1004069"
  },
  {
    "text": "pretty simple you you instantiate the tracer for Jager you set up a",
    "start": "1004069",
    "end": "1009740"
  },
  {
    "text": "configuration and then pass that configuration in to instantiate the tracer and light step you just pass in",
    "start": "1009740",
    "end": "1015050"
  },
  {
    "text": "your authentication into the instructor then this is what the instrumentation",
    "start": "1015050",
    "end": "1020779"
  },
  {
    "text": "piece looks like we have like a endpoint and this three lines of code is",
    "start": "1020779",
    "end": "1026390"
  },
  {
    "text": "essentially the open tracing the open tracing instrumentation code it's not",
    "start": "1026390",
    "end": "1033199"
  },
  {
    "text": "that much so with that with statement when you exit out of that with statement a that's when the timing start the",
    "start": "1033199",
    "end": "1039589"
  },
  {
    "text": "beginning of it is where it starts and I'm going to exit out that's when it stops the timing and that's like the",
    "start": "1039589",
    "end": "1045949"
  },
  {
    "text": "basics of it you could add more code here to add tags or like add like",
    "start": "1045949",
    "end": "1051440"
  },
  {
    "text": "baggage data as well but for the most part that's all you need to get to fire",
    "start": "1051440",
    "end": "1056539"
  },
  {
    "text": "off a span and here here's like a I know this is a pretty that's a lot going on",
    "start": "1056539",
    "end": "1063770"
  },
  {
    "text": "here in this picture but like this that's soulless but this is what how the Geiger collectors work so we have",
    "start": "1063770",
    "end": "1069769"
  },
  {
    "text": "basically you have your application layer and then you're open tracing api's",
    "start": "1069769",
    "end": "1075710"
  },
  {
    "text": "and then that though that pieces of code is firing off to the Geiger client and",
    "start": "1075710",
    "end": "1082220"
  },
  {
    "text": "there's an agent they have Jaeger runs a sidecar agent that collects that data",
    "start": "1082220",
    "end": "1088429"
  },
  {
    "text": "and that's mostly for configuration so if you want to do dynamic sampling or like you want to configure it",
    "start": "1088429",
    "end": "1094059"
  },
  {
    "text": "dynamically that's what that agent is there for and all that data is getting sent to the collector and the collector",
    "start": "1094059",
    "end": "1100909"
  },
  {
    "text": "is digesting that data and then saving it to Cassandra and the UI part the",
    "start": "1100909",
    "end": "1107330"
  },
  {
    "text": "Yaeger UI is reading directly from the Cassandra Asia and this is the part I wanted to show is that the application",
    "start": "1107330",
    "end": "1114289"
  },
  {
    "text": "is not even aware of the Jaeger client it's not a where like they there is that abstraction but do do the open tracing",
    "start": "1114289",
    "end": "1121460"
  },
  {
    "text": "API and so you could swap that blue stuff out for other options as well so",
    "start": "1121460",
    "end": "1128200"
  },
  {
    "text": "this is great like it's not that much code that your project engineers have to do it's and and you have to do it once",
    "start": "1128200",
    "end": "1135559"
  },
  {
    "text": "and you never have to do it again but you still have to still edit the code and is there a way that we can do this",
    "start": "1135559",
    "end": "1143509"
  },
  {
    "text": "without having part of introduced to anything like is there a zero touch there's a zero touch implementation possible and yes there is we we did not",
    "start": "1143509",
    "end": "1155119"
  },
  {
    "text": "do this we ended up using envoy and the service mesh to get tracing out to all",
    "start": "1155119",
    "end": "1160940"
  },
  {
    "text": "the services and which is very very powerful concept once because all our",
    "start": "1160940",
    "end": "1167389"
  },
  {
    "text": "services run and for those of you who don't know envoy is a it's a proxy and",
    "start": "1167389",
    "end": "1173239"
  },
  {
    "text": "as a sidecar proxy that's run on every single micro service and all network calls go through envoy first then hits",
    "start": "1173239",
    "end": "1179929"
  },
  {
    "text": "your application and because we already run on a server smash we're able to turn",
    "start": "1179929",
    "end": "1185059"
  },
  {
    "text": "on tracing for free for all the services and envoy is the one that's spinning off speeding up all the spans so this is so",
    "start": "1185059",
    "end": "1192409"
  },
  {
    "text": "at the end of the day this is how it really works so we have let's say we have application we have a hosted",
    "start": "1192409",
    "end": "1197659"
  },
  {
    "text": "container and we have it and we have application running in our sidecar running a sidecar envoy running",
    "start": "1197659",
    "end": "1203820"
  },
  {
    "text": "on a separate process envoy is the one that is sending this fans they are the",
    "start": "1203820",
    "end": "1209070"
  },
  {
    "text": "ones that are and they're all standardized to the same way because it's all one unified code base so they",
    "start": "1209070",
    "end": "1214800"
  },
  {
    "text": "are the ones I send the ingress fans and the egrets fans and they send that directly to the collectors and the only",
    "start": "1214800",
    "end": "1220650"
  },
  {
    "text": "thing that the application has to do to tie the two spans together is send this",
    "start": "1220650",
    "end": "1225900"
  },
  {
    "text": "header this ot spam contacts header and all that is is an identifier at the trace ID to every single hop and we make",
    "start": "1225900",
    "end": "1234420"
  },
  {
    "text": "sure we do that by implementing that in our envoy clients so we do have to refer",
    "start": "1234420",
    "end": "1240120"
  },
  {
    "text": "to every single envoy client we support and various languages we do have to make sure that the header is set and sent",
    "start": "1240120",
    "end": "1246420"
  },
  {
    "text": "over to the every hub but that's way more easier to maintain than like trying to create when trying to either monkey",
    "start": "1246420",
    "end": "1253560"
  },
  {
    "text": "patch per service or trying to trying to get every product engineer to instrument",
    "start": "1253560",
    "end": "1261150"
  },
  {
    "text": "their code in the same unified way so so",
    "start": "1261150",
    "end": "1266460"
  },
  {
    "start": "1264000",
    "end": "1365000"
  },
  {
    "text": "that's essentially that's how we rolled it out we were able to add a",
    "start": "1266460",
    "end": "1271550"
  },
  {
    "text": "instrumentation data to envoy and we were able to get tracing for free",
    "start": "1271550",
    "end": "1276900"
  },
  {
    "text": "instantaneously as we rolled out this coach agent envoy but now that we have this data now that we have these fans",
    "start": "1276900",
    "end": "1283050"
  },
  {
    "text": "and we have this tool how do we get people to use it because it's a very new",
    "start": "1283050",
    "end": "1288060"
  },
  {
    "text": "tool like now people are used to looking at their dashboards and they're looking used to looking at logs but like how do",
    "start": "1288060",
    "end": "1294120"
  },
  {
    "text": "we get them to use this other thing now that's like another thing in their belt like how do we show value the biggest",
    "start": "1294120",
    "end": "1301740"
  },
  {
    "text": "thing that we did was integrating it into people's workflows as quickly as possible so this is at lyft we use Griffon a--",
    "start": "1301740",
    "end": "1309650"
  },
  {
    "text": "the goof on our dashboards and that's what people look at every day and we added these dots here and each dot you",
    "start": "1309650",
    "end": "1316740"
  },
  {
    "text": "it's a link to a trace and so when you click on that we you are able to see get",
    "start": "1316740",
    "end": "1322980"
  },
  {
    "text": "a trace view of like let's say you see a spike in five hundreds we would click on a dot within that graph and I'll show",
    "start": "1322980",
    "end": "1329070"
  },
  {
    "text": "you a trace that resulted in a five so we quickly try to get you into that",
    "start": "1329070",
    "end": "1334740"
  },
  {
    "text": "context and show you the traces that are useful for you as quickly as possible and usually still interact with the tool",
    "start": "1334740",
    "end": "1341190"
  },
  {
    "text": "that you're used to second thing is we also added traces into pager duty rotations so like you",
    "start": "1341190",
    "end": "1347640"
  },
  {
    "text": "get paged and there is a trace available or we will link you to that trace so",
    "start": "1347640",
    "end": "1353700"
  },
  {
    "text": "let's say you got paid for like yeah hylene C's or 500s we'll show you an example trace for you to help debug and",
    "start": "1353700",
    "end": "1360690"
  },
  {
    "text": "so interviewing with the tools that people are familiar with it was really in central for adoption so yeah the",
    "start": "1360690",
    "end": "1367920"
  },
  {
    "start": "1365000",
    "end": "1531000"
  },
  {
    "text": "biggest takeaways is like we we integrating with envoy was a huge win so that we didn't have to get engineers at",
    "start": "1367920",
    "end": "1374880"
  },
  {
    "text": "any code and we get that Network effect instantaneously achieved something",
    "start": "1374880",
    "end": "1380310"
  },
  {
    "text": "similar with libraries or like but the thing is that you that zero touch",
    "start": "1380310",
    "end": "1385980"
  },
  {
    "text": "experience the fact that like no one had to edit any code was very powerful and then we that we wanted to tie everything",
    "start": "1385980",
    "end": "1392790"
  },
  {
    "text": "together as much as possible so like we want to use the tool so that logging",
    "start": "1392790",
    "end": "1398670"
  },
  {
    "text": "stats and tracing should reference each other and like try to work seamlessly as much as possible so that people get used",
    "start": "1398670",
    "end": "1404610"
  },
  {
    "text": "to the idea of like how wire trace is useful like we don't like we don't want people to go looking the tracing UI and",
    "start": "1404610",
    "end": "1411480"
  },
  {
    "text": "like trying to look for like truth looking at your first trace is pretty a",
    "start": "1411480",
    "end": "1417030"
  },
  {
    "text": "pretty jarring experience so like trying to give you the traces that are the most useful to you to in your service it was",
    "start": "1417030",
    "end": "1424440"
  },
  {
    "text": "essential for adoption and lastly sample II I didn't have time to go well I didn't make a sigh first sampling",
    "start": "1424440",
    "end": "1430770"
  },
  {
    "text": "strategies but sampling is quite hard because like there's a lot of data that you but once we started increasing the",
    "start": "1430770",
    "end": "1438150"
  },
  {
    "text": "amount of number of microservices simply we had to start a sampling because we",
    "start": "1438150",
    "end": "1444330"
  },
  {
    "text": "were just emitting so much data and sample sampling figure out the right sampling strategy is quite hard because",
    "start": "1444330",
    "end": "1450810"
  },
  {
    "text": "it's very business-related like how I sample at live will be very different from how you sample at your company so",
    "start": "1450810",
    "end": "1460170"
  },
  {
    "text": "like I just basically touched like the tip of the iceberg there's way more information out there I have if you're interested in learning",
    "start": "1460170",
    "end": "1466810"
  },
  {
    "text": "more I definitely recommend starting off reading the open tracing homepage and getting familiar with like the",
    "start": "1466810",
    "end": "1472510"
  },
  {
    "text": "instrumentation libraries URI who is the creative Jaeger he has really great open",
    "start": "1472510",
    "end": "1478480"
  },
  {
    "text": "tracing tutorials where you have like a crud service and you start adding instrumentation and seeing those the the",
    "start": "1478480",
    "end": "1486520"
  },
  {
    "text": "spans that you admit into a UI and gives you a concrete idea of like what is happening he's also here at this",
    "start": "1486520",
    "end": "1492940"
  },
  {
    "text": "conference so feel free to reach out to him he's happy to talk about tracing as well if you have if you want to go",
    "start": "1492940",
    "end": "1499810"
  },
  {
    "text": "really deep I recommend reading the dapper paper which is Google's tracing tool and that's where all of this all",
    "start": "1499810",
    "end": "1504820"
  },
  {
    "text": "started and it's a very easy read and I you want to see like how they all",
    "start": "1504820",
    "end": "1513430"
  },
  {
    "text": "started where it originated from I highly recommend reading that and lastly if you want to see a talk about how you",
    "start": "1513430",
    "end": "1519490"
  },
  {
    "text": "can apply tracing to Kaos engineering and like how you could leverage that data into where to inject fault",
    "start": "1519490",
    "end": "1526690"
  },
  {
    "text": "next I recommend watching the talk about orchestrated chaos thank you",
    "start": "1526690",
    "end": "1532780"
  },
  {
    "start": "1531000",
    "end": "1563000"
  },
  {
    "text": "that's just that's the end of my talk I really appreciate you coming to my talk",
    "start": "1532780",
    "end": "1539340"
  },
  {
    "text": "I think we have some time for questions if people are interested or me Oh what",
    "start": "1543660",
    "end": "1556090"
  },
  {
    "text": "oh yeah",
    "start": "1556090",
    "end": "1559260"
  },
  {
    "start": "1563000",
    "end": "1613000"
  },
  {
    "text": "yeah so the question was like are we emitting any standard tags and that and",
    "start": "1563730",
    "end": "1569920"
  },
  {
    "text": "yes we are envoy does emit a sender set of tags one is usually with like and",
    "start": "1569920",
    "end": "1575200"
  },
  {
    "text": "that's also configurable in the Envoy configuration but this tags we emit are",
    "start": "1575200",
    "end": "1580440"
  },
  {
    "text": "usually the path name and the upstream who called you that you like the upstream what is it the upstream service",
    "start": "1580440",
    "end": "1588940"
  },
  {
    "text": "and then yeah and there and then there's all their like business specific tags and what's really cool is that",
    "start": "1588940",
    "end": "1595720"
  },
  {
    "text": "we if you want lip so envoy gives like like the just the network latency but",
    "start": "1595720",
    "end": "1603400"
  },
  {
    "text": "like if you want to dig deeper into your application people could add custom spans as well and they add custom tags",
    "start": "1603400",
    "end": "1610450"
  },
  {
    "text": "there all the time specific to their service yeah I couldn't quite hear you",
    "start": "1610450",
    "end": "1621040"
  },
  {
    "start": "1613000",
    "end": "2084000"
  },
  {
    "text": "are you using a service mesh to connect",
    "start": "1621040",
    "end": "1626500"
  },
  {
    "text": "to envoy oh man you have to come closer",
    "start": "1626500",
    "end": "1632160"
  },
  {
    "text": "sorry this room is too big yeah",
    "start": "1632160",
    "end": "1642210"
  },
  {
    "text": "so the question is is that have you encountered a issue where the Envoy latency is not acceptable for a service",
    "start": "1650830",
    "end": "1657310"
  },
  {
    "text": "not no not at lift for the most part is not envoy is written in C++ is very",
    "start": "1657310",
    "end": "1664300"
  },
  {
    "text": "performant and so a we have not noticed do even through looking at the distributed traces like we have not",
    "start": "1664300",
    "end": "1670180"
  },
  {
    "text": "noticed any lanes big latency effects due to envoy because we send it like",
    "start": "1670180",
    "end": "1675990"
  },
  {
    "text": "because envoy sentences to spans one span once once it gets the request and the other span of like when it sends it",
    "start": "1675990",
    "end": "1682330"
  },
  {
    "text": "off to the application and that it's like there it's so minimal like so it's not due to envoy that of the hylians if",
    "start": "1682330",
    "end": "1688870"
  },
  {
    "text": "there's High Line C's yeah am I using",
    "start": "1688870",
    "end": "1695980"
  },
  {
    "text": "are we using a service smash to inject envoys I'm not sure if I understand your",
    "start": "1695980",
    "end": "1702070"
  },
  {
    "text": "question because the like so envoy is being run as a sidecar and it creates that service mesh and so all network",
    "start": "1702070",
    "end": "1708880"
  },
  {
    "text": "traffic is going through an envoy before hitting the application through localhost yeah oh oh I see what you're",
    "start": "1708880",
    "end": "1719800"
  },
  {
    "text": "saying yeah so the question is like how is the issue to commit as a control plane to configure our envoys no we you",
    "start": "1719800",
    "end": "1726490"
  },
  {
    "text": "couldn't create we have our own control plane and that's the most I could talk to you more about that or my colleague",
    "start": "1726490",
    "end": "1732040"
  },
  {
    "text": "Jose here could talk to you at length about it but we basically launched envoy",
    "start": "1732040",
    "end": "1738280"
  },
  {
    "text": "before a CEO was around so that's the reason why we don't use these do yeah",
    "start": "1738280",
    "end": "1743880"
  },
  {
    "text": "yes yeah yeah so right now oh so the",
    "start": "1746010",
    "end": "1752140"
  },
  {
    "text": "question is is like something has to instantiate the trace is it Envoy that insanity is the trace that it's correct",
    "start": "1752140",
    "end": "1758710"
  },
  {
    "text": "so when so we run envoy at the front edge proxy as well so that is the thing",
    "start": "1758710",
    "end": "1763900"
  },
  {
    "text": "that instantiate the trace we're trying to move that over to a client the mobile apps but right now we are like it's the",
    "start": "1763900",
    "end": "1771130"
  },
  {
    "text": "front envoy proxy that instantiate sit yeah do we turn on tracing for every",
    "start": "1771130",
    "end": "1780220"
  },
  {
    "text": "request yes except except the only thing we don't turn it on for is GRP streaming because of the fact that you're tracing",
    "start": "1780220",
    "end": "1788260"
  },
  {
    "text": "was designed like the due to the are traces are designed to only handle a",
    "start": "1788260",
    "end": "1794830"
  },
  {
    "text": "finite like finite amount of time for the length of a trace and trimming can",
    "start": "1794830",
    "end": "1800800"
  },
  {
    "text": "go on for like an hour or two and and at that point the traces don't make sense where they become so long that it's hard",
    "start": "1800800",
    "end": "1806830"
  },
  {
    "text": "to digest so we're trying to still figure that out the question is do we",
    "start": "1806830",
    "end": "1813550"
  },
  {
    "text": "inject TLS in our servers smashed we're in the process of injecting TLS have we",
    "start": "1813550",
    "end": "1821740"
  },
  {
    "text": "had to the question is how we had to rewrite our wait yeah so repeat so yeah",
    "start": "1821740",
    "end": "1838260"
  },
  {
    "text": "yes we use HTTP going",
    "start": "1838260",
    "end": "1842280"
  },
  {
    "text": "no I don't believe we have to yeah we do not inject at this moment in time we",
    "start": "1849160",
    "end": "1854380"
  },
  {
    "text": "don't inject the circuit let's start into the outgoing requests so we have not faced that challenge yet we are in",
    "start": "1854380",
    "end": "1859960"
  },
  {
    "text": "the middle of our migration over so we probably will face that challenge sooner rather than later",
    "start": "1859960",
    "end": "1865630"
  },
  {
    "text": "yeah the question is what is the memory",
    "start": "1865630",
    "end": "1873430"
  },
  {
    "text": "footprint for running envoy it depends it depends on like like how you",
    "start": "1873430",
    "end": "1879310"
  },
  {
    "text": "configured it and what service like what services they could talk to but it's not it's very minimal but you should be in",
    "start": "1879310",
    "end": "1886480"
  },
  {
    "text": "tracing wise is very minimal because envoy sends us fans quickly quickly as I can't off to the collectors so it really",
    "start": "1886480",
    "end": "1897070"
  },
  {
    "text": "yeah the look he wanted more details on the memory usage it really depends on like how like how its configured it",
    "start": "1897070",
    "end": "1904060"
  },
  {
    "text": "could be in the like it could be in the tens of Meg's to a hundreds of Meg's I've seen it all depending on how its",
    "start": "1904060",
    "end": "1909520"
  },
  {
    "text": "configured",
    "start": "1909520",
    "end": "1911670"
  },
  {
    "text": "yeah the question is like how did we get the integration done in Griffin oh yeah oh so our vendor light step created that",
    "start": "1915809",
    "end": "1922820"
  },
  {
    "text": "integration so basically we send the query of like what we're interested what",
    "start": "1922820",
    "end": "1928559"
  },
  {
    "text": "that graph represents and then light step has a plug-in to like generate those dots yeah say that can you repeat",
    "start": "1928559",
    "end": "1941429"
  },
  {
    "text": "that question how do we the question is",
    "start": "1941429",
    "end": "1949379"
  },
  {
    "text": "how do we trace the base requests with envoy Deo database oh so how do we trace",
    "start": "1949379",
    "end": "1955559"
  },
  {
    "text": "our database request with envoys hello I see so that so we do how it works is",
    "start": "1955559",
    "end": "1960839"
  },
  {
    "text": "that all database requests goes through envoy outbound we don't measure it when",
    "start": "1960839",
    "end": "1966479"
  },
  {
    "text": "it's at the database because we don't have a proxy on our database so we can only measure like how long it took to to",
    "start": "1966479",
    "end": "1973919"
  },
  {
    "text": "egress out to the database and come back",
    "start": "1973919",
    "end": "1978169"
  },
  {
    "text": "can you come closer yeah I'm so sorry I can't hear I apologize my hearing is",
    "start": "1990570",
    "end": "1996210"
  },
  {
    "text": "very bad yeah yeah so the question is",
    "start": "1996210",
    "end": "2003320"
  },
  {
    "text": "are you able to tie traces two logs we aren't we want to do that we currently",
    "start": "2003320",
    "end": "2008480"
  },
  {
    "text": "do not do that right now but it's there's many ways to do that so one is like in the log send the trace ad or",
    "start": "2008480",
    "end": "2015770"
  },
  {
    "text": "like in if there is a span context available you can add logs to your span",
    "start": "2015770",
    "end": "2024680"
  },
  {
    "text": "so you do it both ways it's up to you it makes the spam more expensive if you send it with if you send the log with",
    "start": "2024680",
    "end": "2031490"
  },
  {
    "text": "the span but another thing I've heard people think about is like connecting your elasticsearch database with your",
    "start": "2031490",
    "end": "2038060"
  },
  {
    "text": "Cassandra tracing data and how the UI merge that together that'll be pretty cool but no we don't the ties together",
    "start": "2038060",
    "end": "2045680"
  },
  {
    "text": "with logs it's not really great right now oh yeah okay oh yeah I will upload",
    "start": "2045680",
    "end": "2053810"
  },
  {
    "text": "this slide yes yes that is correct",
    "start": "2053810",
    "end": "2061159"
  },
  {
    "text": "yeah envoys are speaking up in tracing API let's collect it depends like we",
    "start": "2061160",
    "end": "2067790"
  },
  {
    "text": "have our vendor giving us the collectors and that's collect that's the thing that is collecting all the data and yeah so",
    "start": "2067790",
    "end": "2075200"
  },
  {
    "text": "Jaeger so you could use Jaeger as your collector as well I think that's it for",
    "start": "2075200",
    "end": "2080270"
  },
  {
    "text": "questions thank you so much everyone [Applause]",
    "start": "2080270",
    "end": "2086259"
  }
]