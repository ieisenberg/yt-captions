[
  {
    "text": "hello Cloud NATO plasm to Europe my name",
    "start": "60",
    "end": "2760"
  },
  {
    "text": "is Peter hewan I'm a software engineer",
    "start": "2760",
    "end": "4799"
  },
  {
    "text": "on the webassembly team at fastly",
    "start": "4799",
    "end": "7680"
  },
  {
    "text": "later in this presentation we'll be",
    "start": "7680",
    "end": "9179"
  },
  {
    "text": "joined by my colleague guy Bedford",
    "start": "9179",
    "end": "11580"
  },
  {
    "text": "we're sorry we could not be there in",
    "start": "11580",
    "end": "13139"
  },
  {
    "text": "person",
    "start": "13139",
    "end": "13980"
  },
  {
    "text": "but we hope you enjoyed this recorded",
    "start": "13980",
    "end": "15660"
  },
  {
    "text": "presentation",
    "start": "15660",
    "end": "17580"
  },
  {
    "text": "this presentation will mostly be a",
    "start": "17580",
    "end": "19680"
  },
  {
    "text": "demonstration of webassembly components",
    "start": "19680",
    "end": "22560"
  },
  {
    "text": "after the demonstration we hope you're",
    "start": "22560",
    "end": "24300"
  },
  {
    "text": "as excited about the potential of",
    "start": "24300",
    "end": "25920"
  },
  {
    "text": "webassembly components as we are",
    "start": "25920",
    "end": "28980"
  },
  {
    "text": "before we start the demonstration I",
    "start": "28980",
    "end": "31439"
  },
  {
    "text": "wanted to go over some of the",
    "start": "31439",
    "end": "32279"
  },
  {
    "text": "terminology you will hear throughout",
    "start": "32279",
    "end": "35640"
  },
  {
    "text": "first what is a webassembly component",
    "start": "35640",
    "end": "39000"
  },
  {
    "text": "a webassembly component is a proposed",
    "start": "39000",
    "end": "41640"
  },
  {
    "text": "extension of the existing webassembly",
    "start": "41640",
    "end": "43320"
  },
  {
    "text": "specification",
    "start": "43320",
    "end": "44579"
  },
  {
    "text": "at the heart of most webassembly",
    "start": "44579",
    "end": "46620"
  },
  {
    "text": "components will be a webassembly module",
    "start": "46620",
    "end": "48660"
  },
  {
    "text": "implementing that component",
    "start": "48660",
    "end": "50520"
  },
  {
    "text": "as such web assembly components inherit",
    "start": "50520",
    "end": "52739"
  },
  {
    "text": "the properties you know and love about",
    "start": "52739",
    "end": "54180"
  },
  {
    "text": "webassembly modules namely their",
    "start": "54180",
    "end": "56760"
  },
  {
    "text": "portability their security and their",
    "start": "56760",
    "end": "59160"
  },
  {
    "text": "performance",
    "start": "59160",
    "end": "61520"
  },
  {
    "text": "however webassembly components aren't",
    "start": "61860",
    "end": "63660"
  },
  {
    "text": "limited to just integral and floating",
    "start": "63660",
    "end": "65460"
  },
  {
    "text": "Point types they support high level",
    "start": "65460",
    "end": "67560"
  },
  {
    "text": "types like strings records variants",
    "start": "67560",
    "end": "69900"
  },
  {
    "text": "resources and more",
    "start": "69900",
    "end": "72720"
  },
  {
    "text": "webassembly components are composable",
    "start": "72720",
    "end": "74460"
  },
  {
    "text": "meaning you can take multiple",
    "start": "74460",
    "end": "76200"
  },
  {
    "text": "webassembly components link them",
    "start": "76200",
    "end": "77880"
  },
  {
    "text": "together and treat it as a single",
    "start": "77880",
    "end": "79860"
  },
  {
    "text": "webassembly component",
    "start": "79860",
    "end": "81720"
  },
  {
    "text": "they're also adaptable",
    "start": "81720",
    "end": "83460"
  },
  {
    "text": "meaning if you have a web assembly",
    "start": "83460",
    "end": "84780"
  },
  {
    "text": "component that targets a particular",
    "start": "84780",
    "end": "85979"
  },
  {
    "text": "execution environment",
    "start": "85979",
    "end": "87720"
  },
  {
    "text": "you can adapt that component to run in",
    "start": "87720",
    "end": "89400"
  },
  {
    "text": "another execution environment by linking",
    "start": "89400",
    "end": "92759"
  },
  {
    "text": "in other webassembly components",
    "start": "92759",
    "end": "96299"
  },
  {
    "text": "next what is a world",
    "start": "96299",
    "end": "99420"
  },
  {
    "text": "a world is a description of imports and",
    "start": "99420",
    "end": "101340"
  },
  {
    "text": "exports",
    "start": "101340",
    "end": "102479"
  },
  {
    "text": "we use a text format called wit to",
    "start": "102479",
    "end": "104880"
  },
  {
    "text": "declare worlds",
    "start": "104880",
    "end": "106860"
  },
  {
    "text": "on the right hand side you will see an",
    "start": "106860",
    "end": "108840"
  },
  {
    "text": "example of a Wazi standard for defining",
    "start": "108840",
    "end": "111899"
  },
  {
    "text": "HTTP proxies this standards currently",
    "start": "111899",
    "end": "115079"
  },
  {
    "text": "under active development",
    "start": "115079",
    "end": "117060"
  },
  {
    "text": "it exports an interface with a handle",
    "start": "117060",
    "end": "119399"
  },
  {
    "text": "function on it that receives the request",
    "start": "119399",
    "end": "121500"
  },
  {
    "text": "to handle",
    "start": "121500",
    "end": "123060"
  },
  {
    "text": "the request is a resource type meaning",
    "start": "123060",
    "end": "125219"
  },
  {
    "text": "it can be further inspected for the",
    "start": "125219",
    "end": "127560"
  },
  {
    "text": "request body the headers the path",
    "start": "127560",
    "end": "130319"
  },
  {
    "text": "Etc",
    "start": "130319",
    "end": "132500"
  },
  {
    "text": "worlds might represent the execution",
    "start": "132900",
    "end": "134819"
  },
  {
    "text": "environment of a component so if you",
    "start": "134819",
    "end": "136860"
  },
  {
    "text": "author a component that targets a",
    "start": "136860",
    "end": "138300"
  },
  {
    "text": "particular world and you have multiple",
    "start": "138300",
    "end": "140099"
  },
  {
    "text": "cloud services that might Implement that",
    "start": "140099",
    "end": "142319"
  },
  {
    "text": "world you'll know your component can run",
    "start": "142319",
    "end": "144360"
  },
  {
    "text": "in those environments",
    "start": "144360",
    "end": "146700"
  },
  {
    "text": "last what is a component registry",
    "start": "146700",
    "end": "150120"
  },
  {
    "text": "a component registry is a Federated",
    "start": "150120",
    "end": "152280"
  },
  {
    "text": "distributed namespace of webassembly",
    "start": "152280",
    "end": "154440"
  },
  {
    "text": "components",
    "start": "154440",
    "end": "156540"
  },
  {
    "text": "webassembly component Registries",
    "start": "156540",
    "end": "158360"
  },
  {
    "text": "natively understand the component model",
    "start": "158360",
    "end": "160620"
  },
  {
    "text": "they can parse the components",
    "start": "160620",
    "end": "162840"
  },
  {
    "text": "and break them apart for more efficient",
    "start": "162840",
    "end": "164640"
  },
  {
    "text": "storage",
    "start": "164640",
    "end": "167000"
  },
  {
    "text": "additionally webassembly component",
    "start": "167160",
    "end": "168480"
  },
  {
    "text": "Registries Implement what we call",
    "start": "168480",
    "end": "169739"
  },
  {
    "text": "package transparency",
    "start": "169739",
    "end": "171599"
  },
  {
    "text": "which is a cryptographically verifiable",
    "start": "171599",
    "end": "173580"
  },
  {
    "text": "log of everything that's happened to",
    "start": "173580",
    "end": "175500"
  },
  {
    "text": "every package in the registry",
    "start": "175500",
    "end": "178560"
  },
  {
    "text": "on the right you'll see a diagram of a",
    "start": "178560",
    "end": "181379"
  },
  {
    "text": "few tools that might talk to a component",
    "start": "181379",
    "end": "183420"
  },
  {
    "text": "registry you might have componentizer",
    "start": "183420",
    "end": "185280"
  },
  {
    "text": "tools",
    "start": "185280",
    "end": "186420"
  },
  {
    "text": "that takes user source code and compile",
    "start": "186420",
    "end": "189420"
  },
  {
    "text": "it and publish it to a component",
    "start": "189420",
    "end": "190800"
  },
  {
    "text": "registry",
    "start": "190800",
    "end": "192000"
  },
  {
    "text": "you might have composing tools that take",
    "start": "192000",
    "end": "194340"
  },
  {
    "text": "webassembly components",
    "start": "194340",
    "end": "196140"
  },
  {
    "text": "to create new webassembly components",
    "start": "196140",
    "end": "199080"
  },
  {
    "text": "and then you might have production",
    "start": "199080",
    "end": "200159"
  },
  {
    "text": "runtimes that simply want to download",
    "start": "200159",
    "end": "202340"
  },
  {
    "text": "artifacts from a webassembly component",
    "start": "202340",
    "end": "204420"
  },
  {
    "text": "registry and run them",
    "start": "204420",
    "end": "206040"
  },
  {
    "text": "much like you would a Docker container",
    "start": "206040",
    "end": "208319"
  },
  {
    "text": "image today",
    "start": "208319",
    "end": "210739"
  },
  {
    "text": "with this all in mind",
    "start": "212459",
    "end": "214560"
  },
  {
    "text": "let's start the demonstration",
    "start": "214560",
    "end": "216480"
  },
  {
    "text": "to get us started I will hand this over",
    "start": "216480",
    "end": "218819"
  },
  {
    "text": "to guy",
    "start": "218819",
    "end": "220440"
  },
  {
    "text": "I want to share with you some other work",
    "start": "220440",
    "end": "221879"
  },
  {
    "text": "that's been going on for the web",
    "start": "221879",
    "end": "223319"
  },
  {
    "text": "assembly JavaScript tool chain for",
    "start": "223319",
    "end": "226080"
  },
  {
    "text": "working with components and there's two",
    "start": "226080",
    "end": "228420"
  },
  {
    "text": "sides to this the consumer side and the",
    "start": "228420",
    "end": "230819"
  },
  {
    "text": "producer side on the consumer side",
    "start": "230819",
    "end": "232500"
  },
  {
    "text": "that's the ability to take an existing",
    "start": "232500",
    "end": "235080"
  },
  {
    "text": "JavaScript application a JavaScript",
    "start": "235080",
    "end": "237120"
  },
  {
    "text": "module and and turn it into a",
    "start": "237120",
    "end": "239459"
  },
  {
    "text": "webassembly component that can be",
    "start": "239459",
    "end": "240959"
  },
  {
    "text": "executed in any environment that",
    "start": "240959",
    "end": "242760"
  },
  {
    "text": "supports webassembly components another",
    "start": "242760",
    "end": "245040"
  },
  {
    "text": "side is being able to take existing",
    "start": "245040",
    "end": "246840"
  },
  {
    "text": "webassembly components that have been",
    "start": "246840",
    "end": "248459"
  },
  {
    "text": "created in different environments and",
    "start": "248459",
    "end": "250680"
  },
  {
    "text": "run them in JavaScript environments like",
    "start": "250680",
    "end": "252840"
  },
  {
    "text": "the browser and nodejs and other JS",
    "start": "252840",
    "end": "255500"
  },
  {
    "text": "server runtimes so for this demo we're",
    "start": "255500",
    "end": "258660"
  },
  {
    "text": "going to be looking at a svelt server",
    "start": "258660",
    "end": "260699"
  },
  {
    "text": "side rendering demo and here I have the",
    "start": "260699",
    "end": "263160"
  },
  {
    "text": "svelt template that I'm going to be",
    "start": "263160",
    "end": "264660"
  },
  {
    "text": "rendering and it's got some HTML some",
    "start": "264660",
    "end": "267540"
  },
  {
    "text": "substitutions of props where we've got",
    "start": "267540",
    "end": "269699"
  },
  {
    "text": "these two props defined for the",
    "start": "269699",
    "end": "271199"
  },
  {
    "text": "templates a little bit of interaction",
    "start": "271199",
    "end": "272820"
  },
  {
    "text": "logic and some styling and the great",
    "start": "272820",
    "end": "274560"
  },
  {
    "text": "thing about swell for this demo is it's",
    "start": "274560",
    "end": "276300"
  },
  {
    "text": "it's very much a compiled framework so",
    "start": "276300",
    "end": "278460"
  },
  {
    "text": "you you compile this single template",
    "start": "278460",
    "end": "281100"
  },
  {
    "text": "into the HTML CSS and JavaScript and in",
    "start": "281100",
    "end": "284400"
  },
  {
    "text": "this case we're going to go a step",
    "start": "284400",
    "end": "285419"
  },
  {
    "text": "further and we're actually going to",
    "start": "285419",
    "end": "287220"
  },
  {
    "text": "compile the SSR renderer itself so we're",
    "start": "287220",
    "end": "289740"
  },
  {
    "text": "going to be compiling the SSR renderer",
    "start": "289740",
    "end": "291360"
  },
  {
    "text": "that itself is going to be able to take",
    "start": "291360",
    "end": "292620"
  },
  {
    "text": "the props return the rendered HTML and",
    "start": "292620",
    "end": "294660"
  },
  {
    "text": "do the rehydration on the client so a",
    "start": "294660",
    "end": "297300"
  },
  {
    "text": "full SSR workflow well at least a very",
    "start": "297300",
    "end": "300419"
  },
  {
    "text": "much a demonstration one here's the",
    "start": "300419",
    "end": "302460"
  },
  {
    "text": "project I've got and I've got my",
    "start": "302460",
    "end": "304380"
  },
  {
    "text": "template and I'm going to be working on",
    "start": "304380",
    "end": "305940"
  },
  {
    "text": "this compiler so this felt compile file",
    "start": "305940",
    "end": "308880"
  },
  {
    "text": "I've already written and that will do",
    "start": "308880",
    "end": "311100"
  },
  {
    "text": "all the SSR stuff for us but the gist of",
    "start": "311100",
    "end": "313979"
  },
  {
    "text": "it is that we're passing in this",
    "start": "313979",
    "end": "315419"
  },
  {
    "text": "app.swelt file and we're getting out a",
    "start": "315419",
    "end": "318479"
  },
  {
    "text": "JavaScript module which represents the",
    "start": "318479",
    "end": "320400"
  },
  {
    "text": "server side renderer so it's actually",
    "start": "320400",
    "end": "321720"
  },
  {
    "text": "the compiled template in its server side",
    "start": "321720",
    "end": "324000"
  },
  {
    "text": "rendering form",
    "start": "324000",
    "end": "325199"
  },
  {
    "text": "and I'm going to then write that file",
    "start": "325199",
    "end": "327360"
  },
  {
    "text": "this is running in node.js I should have",
    "start": "327360",
    "end": "330240"
  },
  {
    "text": "a",
    "start": "330240",
    "end": "331880"
  },
  {
    "text": "svultdemo.js file written when I run",
    "start": "331880",
    "end": "333900"
  },
  {
    "text": "this containing the JS render Source the",
    "start": "333900",
    "end": "336660"
  },
  {
    "text": "JavaScript module that's going to do the",
    "start": "336660",
    "end": "338400"
  },
  {
    "text": "SSR so if I if I run this compile",
    "start": "338400",
    "end": "340740"
  },
  {
    "text": "function I first need to install sveld",
    "start": "340740",
    "end": "342539"
  },
  {
    "text": "of course",
    "start": "342539",
    "end": "344759"
  },
  {
    "text": "and then I can run this compiled",
    "start": "344759",
    "end": "347580"
  },
  {
    "text": "function and that will output this svelt",
    "start": "347580",
    "end": "351240"
  },
  {
    "text": "demo.js file so that's our server side",
    "start": "351240",
    "end": "353520"
  },
  {
    "text": "renderer for this app template and I'm",
    "start": "353520",
    "end": "355979"
  },
  {
    "text": "going to then import this 12 demo.js",
    "start": "355979",
    "end": "358520"
  },
  {
    "text": "file and I'm going to create a node.js",
    "start": "358520",
    "end": "360960"
  },
  {
    "text": "server a very basic server that's just",
    "start": "360960",
    "end": "363360"
  },
  {
    "text": "going to call the render method so it's",
    "start": "363360",
    "end": "364919"
  },
  {
    "text": "an it's an app interface that has a",
    "start": "364919",
    "end": "367680"
  },
  {
    "text": "render method on it and we then pass",
    "start": "367680",
    "end": "369600"
  },
  {
    "text": "those props so I'm going to set initial",
    "start": "369600",
    "end": "371639"
  },
  {
    "text": "counts and I'm going to say uh initial",
    "start": "371639",
    "end": "374580"
  },
  {
    "text": "name that I'm rendering into that",
    "start": "374580",
    "end": "376020"
  },
  {
    "text": "template to run that template I can run",
    "start": "376020",
    "end": "378360"
  },
  {
    "text": "it in node.js and let's have a look at",
    "start": "378360",
    "end": "380400"
  },
  {
    "text": "it in the browser",
    "start": "380400",
    "end": "381720"
  },
  {
    "text": "so we can see it's rendered the HTML",
    "start": "381720",
    "end": "383940"
  },
  {
    "text": "with the initial props but it's also",
    "start": "383940",
    "end": "386280"
  },
  {
    "text": "hydrated so it's Dynamic and we've got",
    "start": "386280",
    "end": "388020"
  },
  {
    "text": "the win conditions applying and",
    "start": "388020",
    "end": "389460"
  },
  {
    "text": "everything",
    "start": "389460",
    "end": "390180"
  },
  {
    "text": "so how does this relate to components",
    "start": "390180",
    "end": "393000"
  },
  {
    "text": "well you can think of this as something",
    "start": "393000",
    "end": "394740"
  },
  {
    "text": "that you could want to run an edge",
    "start": "394740",
    "end": "396300"
  },
  {
    "text": "application so how would I do this why",
    "start": "396300",
    "end": "399419"
  },
  {
    "text": "it needs to be running JavaScript at the",
    "start": "399419",
    "end": "400979"
  },
  {
    "text": "edge I need to build a whole JavaScript",
    "start": "400979",
    "end": "402360"
  },
  {
    "text": "runtime and all the rest",
    "start": "402360",
    "end": "404340"
  },
  {
    "text": "um wouldn't it be nice if we could just",
    "start": "404340",
    "end": "405660"
  },
  {
    "text": "Dent this whole thing instead of as this",
    "start": "405660",
    "end": "407340"
  },
  {
    "text": "JavaScript module as a webassembly",
    "start": "407340",
    "end": "409259"
  },
  {
    "text": "component",
    "start": "409259",
    "end": "410280"
  },
  {
    "text": "so let's bring in componentized.js this",
    "start": "410280",
    "end": "414060"
  },
  {
    "text": "is a bicode Alliance project",
    "start": "414060",
    "end": "415699"
  },
  {
    "text": "experimental JS componentization and the",
    "start": "415699",
    "end": "419639"
  },
  {
    "text": "way it works is it embeds the spider",
    "start": "419639",
    "end": "421860"
  },
  {
    "text": "monkey runtime that is optimized for",
    "start": "421860",
    "end": "424639"
  },
  {
    "text": "these kind of workflows where you can",
    "start": "424639",
    "end": "427020"
  },
  {
    "text": "associate it with a module that's being",
    "start": "427020",
    "end": "429000"
  },
  {
    "text": "executed and it will actually",
    "start": "429000",
    "end": "431220"
  },
  {
    "text": "pre-initialize that module to the point",
    "start": "431220",
    "end": "433740"
  },
  {
    "text": "where that the execution can actually",
    "start": "433740",
    "end": "435360"
  },
  {
    "text": "pick up at the at the point of the",
    "start": "435360",
    "end": "437520"
  },
  {
    "text": "function that you're calling so the edge",
    "start": "437520",
    "end": "439319"
  },
  {
    "text": "function so it's it's a very much a warm",
    "start": "439319",
    "end": "442020"
  },
  {
    "text": "boot everything's pre-initialized",
    "start": "442020",
    "end": "443639"
  },
  {
    "text": "there's no Global initializations",
    "start": "443639",
    "end": "445259"
  },
  {
    "text": "happening that kind of thing",
    "start": "445259",
    "end": "446940"
  },
  {
    "text": "so component OS is a fully native JS",
    "start": "446940",
    "end": "450360"
  },
  {
    "text": "tool chain package that we can install",
    "start": "450360",
    "end": "452780"
  },
  {
    "text": "and work with in in a JS environment",
    "start": "452780",
    "end": "457440"
  },
  {
    "text": "so instead of doing this writing this JS",
    "start": "457440",
    "end": "460620"
  },
  {
    "text": "directly I'm going to now pass it to",
    "start": "460620",
    "end": "462780"
  },
  {
    "text": "componentize and componentize takes",
    "start": "462780",
    "end": "464940"
  },
  {
    "text": "firstly the JavaScript source that we",
    "start": "464940",
    "end": "467819"
  },
  {
    "text": "want to componentize and then it takes a",
    "start": "467819",
    "end": "470340"
  },
  {
    "text": "world definition which is the Whit World",
    "start": "470340",
    "end": "472740"
  },
  {
    "text": "definition that defines that component",
    "start": "472740",
    "end": "474780"
  },
  {
    "text": "interface and in this case we've got",
    "start": "474780",
    "end": "476940"
  },
  {
    "text": "this app interface with its render",
    "start": "476940",
    "end": "478680"
  },
  {
    "text": "method so we can create the the",
    "start": "478680",
    "end": "480900"
  },
  {
    "text": "corresponding World in as a wit file",
    "start": "480900",
    "end": "484919"
  },
  {
    "text": "here and this is how you you write wit",
    "start": "484919",
    "end": "488220"
  },
  {
    "text": "for webassembly components so we're",
    "start": "488220",
    "end": "490259"
  },
  {
    "text": "going to Define this world",
    "start": "490259",
    "end": "491940"
  },
  {
    "text": "and we're exporting a single app",
    "start": "491940",
    "end": "493800"
  },
  {
    "text": "interface called app and that app",
    "start": "493800",
    "end": "496080"
  },
  {
    "text": "interface has a render function which",
    "start": "496080",
    "end": "497940"
  },
  {
    "text": "takes the argument of the props which",
    "start": "497940",
    "end": "500220"
  },
  {
    "text": "contains a name String an account number",
    "start": "500220",
    "end": "502020"
  },
  {
    "text": "and it Returns the rendered HTML at the",
    "start": "502020",
    "end": "504780"
  },
  {
    "text": "end and the output of componentize is",
    "start": "504780",
    "end": "507720"
  },
  {
    "text": "going to be the webassembly component",
    "start": "507720",
    "end": "509220"
  },
  {
    "text": "itself",
    "start": "509220",
    "end": "510960"
  },
  {
    "text": "and now we can write that file to the",
    "start": "510960",
    "end": "513599"
  },
  {
    "text": "file system at the end of this",
    "start": "513599",
    "end": "514860"
  },
  {
    "text": "compilation so there's going to be",
    "start": "514860",
    "end": "517279"
  },
  {
    "text": "saltdemo.wasm instead of dot Js",
    "start": "517279",
    "end": "519899"
  },
  {
    "text": "so let's run that with node compile",
    "start": "519899",
    "end": "524099"
  },
  {
    "text": "and there it's completed and we can see",
    "start": "524099",
    "end": "526440"
  },
  {
    "text": "we've got a sold demo.weizen file and",
    "start": "526440",
    "end": "529380"
  },
  {
    "text": "that's it this is now a full webassembly",
    "start": "529380",
    "end": "531839"
  },
  {
    "text": "component that represents the exact same",
    "start": "531839",
    "end": "533580"
  },
  {
    "text": "execution as that JS file that we",
    "start": "533580",
    "end": "535800"
  },
  {
    "text": "started with earlier",
    "start": "535800",
    "end": "537240"
  },
  {
    "text": "so we've actually componentized felt in",
    "start": "537240",
    "end": "539339"
  },
  {
    "text": "this case we've gone from a svelt",
    "start": "539339",
    "end": "540899"
  },
  {
    "text": "template to the componentized version of",
    "start": "540899",
    "end": "543000"
  },
  {
    "text": "its age render but I'm a JavaScript",
    "start": "543000",
    "end": "545100"
  },
  {
    "text": "developer I don't want to just assume",
    "start": "545100",
    "end": "547080"
  },
  {
    "text": "that this component works and and send",
    "start": "547080",
    "end": "549240"
  },
  {
    "text": "it off or have to test it in in an edge",
    "start": "549240",
    "end": "551220"
  },
  {
    "text": "runtime it would be quite nice if I can",
    "start": "551220",
    "end": "553440"
  },
  {
    "text": "still while I'm working with JavaScript",
    "start": "553440",
    "end": "555360"
  },
  {
    "text": "in this JavaScript workflow test it out",
    "start": "555360",
    "end": "557580"
  },
  {
    "text": "in node.js and see if it's working",
    "start": "557580",
    "end": "559019"
  },
  {
    "text": "correctly and for that we can explore",
    "start": "559019",
    "end": "561060"
  },
  {
    "text": "the other side of the component tool",
    "start": "561060",
    "end": "562800"
  },
  {
    "text": "chain which is this project called jco",
    "start": "562800",
    "end": "564839"
  },
  {
    "text": "this is another by code lines project",
    "start": "564839",
    "end": "566779"
  },
  {
    "text": "and it's a general purpose tool for",
    "start": "566779",
    "end": "569399"
  },
  {
    "text": "working with webassembly components in",
    "start": "569399",
    "end": "571680"
  },
  {
    "text": "JavaScript",
    "start": "571680",
    "end": "572760"
  },
  {
    "text": "with it installed there is this",
    "start": "572760",
    "end": "575160"
  },
  {
    "text": "transpile command that we can use I'm",
    "start": "575160",
    "end": "577080"
  },
  {
    "text": "going to use jcotrons file and I'm",
    "start": "577080",
    "end": "579540"
  },
  {
    "text": "actually going to take that webassembly",
    "start": "579540",
    "end": "581100"
  },
  {
    "text": "component that we just created so I'll",
    "start": "581100",
    "end": "582660"
  },
  {
    "text": "demo.wasm and I'm going to transport it",
    "start": "582660",
    "end": "585360"
  },
  {
    "text": "into a directory swelp demo trans file",
    "start": "585360",
    "end": "588720"
  },
  {
    "text": "and when this this will actually convert",
    "start": "588720",
    "end": "592019"
  },
  {
    "text": "that whole webassembly component back",
    "start": "592019",
    "end": "594300"
  },
  {
    "text": "into JavaScript but it'll still be using",
    "start": "594300",
    "end": "596100"
  },
  {
    "text": "co-wasm when it executes that spider",
    "start": "596100",
    "end": "598080"
  },
  {
    "text": "monkey JavaScript engine and the",
    "start": "598080",
    "end": "599820"
  },
  {
    "text": "associated JavaScript that we wrapped in",
    "start": "599820",
    "end": "602040"
  },
  {
    "text": "one of the things the spider monkey",
    "start": "602040",
    "end": "603660"
  },
  {
    "text": "engine needs is some native bindings",
    "start": "603660",
    "end": "606660"
  },
  {
    "text": "well or native host functions like",
    "start": "606660",
    "end": "608839"
  },
  {
    "text": "timers to be able to time things and",
    "start": "608839",
    "end": "611580"
  },
  {
    "text": "things like that so it does have some YZ",
    "start": "611580",
    "end": "613860"
  },
  {
    "text": "findings so I'm going to add this other",
    "start": "613860",
    "end": "615899"
  },
  {
    "text": "Flag by YZ shim that will tell it to use",
    "start": "615899",
    "end": "619140"
  },
  {
    "text": "AJ as shim for the YZ bindings",
    "start": "619140",
    "end": "621839"
  },
  {
    "text": "and with that done it's fully transpiled",
    "start": "621839",
    "end": "624839"
  },
  {
    "text": "and created all the files along with the",
    "start": "624839",
    "end": "626760"
  },
  {
    "text": "typings I'm now going to install the by",
    "start": "626760",
    "end": "629339"
  },
  {
    "text": "code Alliance preview tuition this is",
    "start": "629339",
    "end": "631680"
  },
  {
    "text": "the JS preview tuition of Wazi to allow",
    "start": "631680",
    "end": "634019"
  },
  {
    "text": "running the preview 2 like apis in",
    "start": "634019",
    "end": "636899"
  },
  {
    "text": "node.js again this is all very",
    "start": "636899",
    "end": "638580"
  },
  {
    "text": "experimental but we'll get this demo",
    "start": "638580",
    "end": "640320"
  },
  {
    "text": "running at least so with everything",
    "start": "640320",
    "end": "642660"
  },
  {
    "text": "there I can go into my served file and",
    "start": "642660",
    "end": "646860"
  },
  {
    "text": "instead of loading from the JS version I",
    "start": "646860",
    "end": "649140"
  },
  {
    "text": "can now load the JS version of the wasm",
    "start": "649140",
    "end": "651779"
  },
  {
    "text": "that we created so it's felt demo",
    "start": "651779",
    "end": "655019"
  },
  {
    "text": "transpiled and then the swell demo",
    "start": "655019",
    "end": "658800"
  },
  {
    "text": "and apart from that everything's exactly",
    "start": "658800",
    "end": "661260"
  },
  {
    "text": "the same so I'm going to get an",
    "start": "661260",
    "end": "662220"
  },
  {
    "text": "interface that's exactly the same it's",
    "start": "662220",
    "end": "663660"
  },
  {
    "text": "an app interface with a random method",
    "start": "663660",
    "end": "665420"
  },
  {
    "text": "and I can now Run This Server running",
    "start": "665420",
    "end": "668820"
  },
  {
    "text": "components",
    "start": "668820",
    "end": "670320"
  },
  {
    "text": "and here you can see it's fully hydrated",
    "start": "670320",
    "end": "672000"
  },
  {
    "text": "in exactly the same way and it's fully",
    "start": "672000",
    "end": "674760"
  },
  {
    "text": "functional Edge application",
    "start": "674760",
    "end": "676980"
  },
  {
    "text": "so now that I've tested it I can do my",
    "start": "676980",
    "end": "679140"
  },
  {
    "text": "node.js tests and as adjacentive I can",
    "start": "679140",
    "end": "681540"
  },
  {
    "text": "know that I'm actually writing a",
    "start": "681540",
    "end": "682500"
  },
  {
    "text": "component that works uh I I'm ready to",
    "start": "682500",
    "end": "685500"
  },
  {
    "text": "share that component so to share we can",
    "start": "685500",
    "end": "687720"
  },
  {
    "text": "now use the work registry application",
    "start": "687720",
    "end": "690480"
  },
  {
    "text": "and I'm going to publish this into the",
    "start": "690480",
    "end": "692459"
  },
  {
    "text": "registry as a release of this component",
    "start": "692459",
    "end": "695940"
  },
  {
    "text": "so this component is called wasm day",
    "start": "695940",
    "end": "699240"
  },
  {
    "text": "fault demo",
    "start": "699240",
    "end": "700860"
  },
  {
    "text": "and the version is 0.1.0 and I'm just",
    "start": "700860",
    "end": "703680"
  },
  {
    "text": "going to point it to the the webassembly",
    "start": "703680",
    "end": "705600"
  },
  {
    "text": "component that we created for for this",
    "start": "705600",
    "end": "707640"
  },
  {
    "text": "this Edge app",
    "start": "707640",
    "end": "709800"
  },
  {
    "text": "and let's publish that for the registry",
    "start": "709800",
    "end": "713779"
  },
  {
    "text": "with it published my colleague Peter is",
    "start": "714000",
    "end": "716760"
  },
  {
    "text": "now able to work with this component and",
    "start": "716760",
    "end": "719399"
  },
  {
    "text": "use it in any other runtime that",
    "start": "719399",
    "end": "721920"
  },
  {
    "text": "supports components so I'll pass you",
    "start": "721920",
    "end": "723540"
  },
  {
    "text": "back over there",
    "start": "723540",
    "end": "725399"
  },
  {
    "text": "thanks guy and now what I want to",
    "start": "725399",
    "end": "727620"
  },
  {
    "text": "demonstrate is using the exact same",
    "start": "727620",
    "end": "730260"
  },
  {
    "text": "component that guy just published a",
    "start": "730260",
    "end": "731940"
  },
  {
    "text": "component registry from Ross to do that",
    "start": "731940",
    "end": "734640"
  },
  {
    "text": "I will be using a tool called cargo",
    "start": "734640",
    "end": "736740"
  },
  {
    "text": "component which is an extension of cargo",
    "start": "736740",
    "end": "738959"
  },
  {
    "text": "that allows you to easily build",
    "start": "738959",
    "end": "740640"
  },
  {
    "text": "webassembly components from rust to",
    "start": "740640",
    "end": "743279"
  },
  {
    "text": "start I will be running a cargo",
    "start": "743279",
    "end": "745200"
  },
  {
    "text": "component new command specifying a name",
    "start": "745200",
    "end": "747660"
  },
  {
    "text": "of proxy for our component and that this",
    "start": "747660",
    "end": "749880"
  },
  {
    "text": "component will Target the Yazi hdb proxy",
    "start": "749880",
    "end": "752940"
  },
  {
    "text": "world this world defines an interface",
    "start": "752940",
    "end": "755100"
  },
  {
    "text": "that allows our component to receive",
    "start": "755100",
    "end": "757640"
  },
  {
    "text": "HTTP requests",
    "start": "757640",
    "end": "760500"
  },
  {
    "text": "so let's run this",
    "start": "760500",
    "end": "762180"
  },
  {
    "text": "and we will see we have a proxy",
    "start": "762180",
    "end": "763620"
  },
  {
    "text": "directory created with a cargo.com on it",
    "start": "763620",
    "end": "766620"
  },
  {
    "text": "if you're a rust developer this should",
    "start": "766620",
    "end": "768360"
  },
  {
    "text": "look roughly familiar to you except it",
    "start": "768360",
    "end": "771420"
  },
  {
    "text": "has additional metadata in there",
    "start": "771420",
    "end": "772800"
  },
  {
    "text": "regarding which World our component",
    "start": "772800",
    "end": "775260"
  },
  {
    "text": "targets and what components our",
    "start": "775260",
    "end": "778139"
  },
  {
    "text": "component depends on",
    "start": "778139",
    "end": "780240"
  },
  {
    "text": "cargo component uses this information to",
    "start": "780240",
    "end": "782399"
  },
  {
    "text": "generate source code bindings allowing",
    "start": "782399",
    "end": "784500"
  },
  {
    "text": "us to call the Imports provided to the",
    "start": "784500",
    "end": "786300"
  },
  {
    "text": "component and assist in defining the",
    "start": "786300",
    "end": "788399"
  },
  {
    "text": "exports expected of the component from",
    "start": "788399",
    "end": "791100"
  },
  {
    "text": "the Target World",
    "start": "791100",
    "end": "792899"
  },
  {
    "text": "let's take a look at the source code",
    "start": "792899",
    "end": "794279"
  },
  {
    "text": "generated for us by Carver component",
    "start": "794279",
    "end": "796500"
  },
  {
    "text": "because we targeted the Wazi hdb proxy",
    "start": "796500",
    "end": "799200"
  },
  {
    "text": "World it knew it needed to generate an",
    "start": "799200",
    "end": "801779"
  },
  {
    "text": "incoming HTTP implementation for our",
    "start": "801779",
    "end": "803940"
  },
  {
    "text": "component",
    "start": "803940",
    "end": "804899"
  },
  {
    "text": "this interface has a single method on it",
    "start": "804899",
    "end": "807360"
  },
  {
    "text": "called handle which receives the request",
    "start": "807360",
    "end": "809579"
  },
  {
    "text": "that the component should handle",
    "start": "809579",
    "end": "812820"
  },
  {
    "text": "now let's add a dependency on",
    "start": "812820",
    "end": "815940"
  },
  {
    "text": "guy's component from ours",
    "start": "815940",
    "end": "818700"
  },
  {
    "text": "to do that I'm going to write a cargo",
    "start": "818700",
    "end": "820620"
  },
  {
    "text": "component add command specifying a",
    "start": "820620",
    "end": "824279"
  },
  {
    "text": "binding's name as felt demo and a",
    "start": "824279",
    "end": "826440"
  },
  {
    "text": "package name of wasunde spelled demo",
    "start": "826440",
    "end": "828660"
  },
  {
    "text": "that's the same package name that guy",
    "start": "828660",
    "end": "831000"
  },
  {
    "text": "used to publish his package to the",
    "start": "831000",
    "end": "833040"
  },
  {
    "text": "registry",
    "start": "833040",
    "end": "834720"
  },
  {
    "text": "so let's run this command",
    "start": "834720",
    "end": "836639"
  },
  {
    "text": "and we can see it contacted the registry",
    "start": "836639",
    "end": "838620"
  },
  {
    "text": "to find out the latest version of this",
    "start": "838620",
    "end": "840480"
  },
  {
    "text": "component was 0 1 0.",
    "start": "840480",
    "end": "843240"
  },
  {
    "text": "that's because we didn't specify a",
    "start": "843240",
    "end": "844800"
  },
  {
    "text": "version on the command line to use",
    "start": "844800",
    "end": "846480"
  },
  {
    "text": "if we look in cargo.tomo we can see that",
    "start": "846480",
    "end": "848940"
  },
  {
    "text": "the dependencies table has been updated",
    "start": "848940",
    "end": "850620"
  },
  {
    "text": "to include a reference to guys component",
    "start": "850620",
    "end": "854880"
  },
  {
    "text": "cargo component will use this",
    "start": "854880",
    "end": "856260"
  },
  {
    "text": "information to generate the bindings for",
    "start": "856260",
    "end": "858779"
  },
  {
    "text": "that render function exported by the",
    "start": "858779",
    "end": "860579"
  },
  {
    "text": "component so we can call it and render",
    "start": "860579",
    "end": "862620"
  },
  {
    "text": "our template",
    "start": "862620",
    "end": "865440"
  },
  {
    "text": "let's switch back to the source code I'm",
    "start": "865440",
    "end": "866940"
  },
  {
    "text": "going to replace it with some demo",
    "start": "866940",
    "end": "869160"
  },
  {
    "text": "source code that I wrote previously",
    "start": "869160",
    "end": "871139"
  },
  {
    "text": "at the top you can see the reference to",
    "start": "871139",
    "end": "873120"
  },
  {
    "text": "the bindings crate that car component",
    "start": "873120",
    "end": "874920"
  },
  {
    "text": "generator for us including that render",
    "start": "874920",
    "end": "876540"
  },
  {
    "text": "method and references to HCB and streams",
    "start": "876540",
    "end": "880199"
  },
  {
    "text": "coming from wazzy",
    "start": "880199",
    "end": "882120"
  },
  {
    "text": "so now our incoming HTTP implementation",
    "start": "882120",
    "end": "885000"
  },
  {
    "text": "for our component has the handle method",
    "start": "885000",
    "end": "887639"
  },
  {
    "text": "defined in terms of calling the render",
    "start": "887639",
    "end": "889860"
  },
  {
    "text": "function from the JavaScript component",
    "start": "889860",
    "end": "891660"
  },
  {
    "text": "passing it a name and account",
    "start": "891660",
    "end": "895139"
  },
  {
    "text": "and then defining an outgoing response",
    "start": "895139",
    "end": "897779"
  },
  {
    "text": "with a content type header of text HTML",
    "start": "897779",
    "end": "900120"
  },
  {
    "text": "and a status code of 200.",
    "start": "900120",
    "end": "902880"
  },
  {
    "text": "it then writes the HTML rendered for us",
    "start": "902880",
    "end": "906360"
  },
  {
    "text": "by the JavaScript component to the",
    "start": "906360",
    "end": "908579"
  },
  {
    "text": "response stream",
    "start": "908579",
    "end": "910920"
  },
  {
    "text": "currently this uses free functions to",
    "start": "910920",
    "end": "914760"
  },
  {
    "text": "create this response object",
    "start": "914760",
    "end": "917339"
  },
  {
    "text": "that's because the bindings generation",
    "start": "917339",
    "end": "919199"
  },
  {
    "text": "doesn't yet support resource types from",
    "start": "919199",
    "end": "921360"
  },
  {
    "text": "the component model in the near future",
    "start": "921360",
    "end": "923220"
  },
  {
    "text": "the generated code should look a little",
    "start": "923220",
    "end": "925380"
  },
  {
    "text": "bit more natural to rust developers you",
    "start": "925380",
    "end": "927120"
  },
  {
    "text": "can define a struct with method",
    "start": "927120",
    "end": "928740"
  },
  {
    "text": "assignment to set these properties",
    "start": "928740",
    "end": "932120"
  },
  {
    "text": "now let's build this component",
    "start": "932279",
    "end": "934440"
  },
  {
    "text": "I'm going to run a cargo component build",
    "start": "934440",
    "end": "936660"
  },
  {
    "text": "command",
    "start": "936660",
    "end": "939139"
  },
  {
    "text": "and as you can see it generated a",
    "start": "939540",
    "end": "941880"
  },
  {
    "text": "proxy.wasm file for us",
    "start": "941880",
    "end": "943920"
  },
  {
    "text": "this is an actual webassembly component",
    "start": "943920",
    "end": "946560"
  },
  {
    "text": "that can be used in any environment that",
    "start": "946560",
    "end": "949500"
  },
  {
    "text": "supports the HD proxy world",
    "start": "949500",
    "end": "952920"
  },
  {
    "text": "now to run this component I'm going to",
    "start": "952920",
    "end": "954779"
  },
  {
    "text": "use a tool called Viceroy Viceroy is",
    "start": "954779",
    "end": "957540"
  },
  {
    "text": "fastly's computed Edge to local testing",
    "start": "957540",
    "end": "960300"
  },
  {
    "text": "application",
    "start": "960300",
    "end": "961680"
  },
  {
    "text": "it allows our customers to test their",
    "start": "961680",
    "end": "964620"
  },
  {
    "text": "computed Edge applications locally",
    "start": "964620",
    "end": "966120"
  },
  {
    "text": "before deploying it out to the edge",
    "start": "966120",
    "end": "970100"
  },
  {
    "text": "currently this version of Viceroy I'm",
    "start": "971220",
    "end": "972959"
  },
  {
    "text": "about to show you is from a development",
    "start": "972959",
    "end": "974820"
  },
  {
    "text": "branch that supports components but does",
    "start": "974820",
    "end": "977220"
  },
  {
    "text": "not yet support the Wazi hdb proxy world",
    "start": "977220",
    "end": "980160"
  },
  {
    "text": "so what happens if we try to run this",
    "start": "980160",
    "end": "982019"
  },
  {
    "text": "with Viceroy",
    "start": "982019",
    "end": "984860"
  },
  {
    "text": "well we receive an error coming from",
    "start": "985260",
    "end": "987180"
  },
  {
    "text": "wazen time which is the webassembly",
    "start": "987180",
    "end": "989100"
  },
  {
    "text": "runtime that Viceroy uses",
    "start": "989100",
    "end": "991320"
  },
  {
    "text": "and this errors informs us that the HTTP",
    "start": "991320",
    "end": "994199"
  },
  {
    "text": "import expected of our component was not",
    "start": "994199",
    "end": "997320"
  },
  {
    "text": "provided anything it means that the host",
    "start": "997320",
    "end": "1000100"
  },
  {
    "text": "Viceroy in this case does not offer us",
    "start": "1000100",
    "end": "1003440"
  },
  {
    "text": "an HTTP interface so it does not support",
    "start": "1003440",
    "end": "1005959"
  },
  {
    "text": "the hdb proxy world just yet",
    "start": "1005959",
    "end": "1008779"
  },
  {
    "text": "so how can we run our component in this",
    "start": "1008779",
    "end": "1011959"
  },
  {
    "text": "environment that doesn't support Wazi",
    "start": "1011959",
    "end": "1014120"
  },
  {
    "text": "hdb proxy",
    "start": "1014120",
    "end": "1015740"
  },
  {
    "text": "well we can leverage some of the power",
    "start": "1015740",
    "end": "1017240"
  },
  {
    "text": "of the component model to solve this",
    "start": "1017240",
    "end": "1018980"
  },
  {
    "text": "problem to do that I'm going to use",
    "start": "1018980",
    "end": "1021380"
  },
  {
    "text": "another tool I've written called",
    "start": "1021380",
    "end": "1023439"
  },
  {
    "text": "wasmbuilder.app and this is a website",
    "start": "1023439",
    "end": "1026000"
  },
  {
    "text": "that allows you to compose new",
    "start": "1026000",
    "end": "1027980"
  },
  {
    "text": "components from other components",
    "start": "1027980",
    "end": "1030620"
  },
  {
    "text": "to start I'm going to add the proxy",
    "start": "1030620",
    "end": "1033740"
  },
  {
    "text": "component that we just built to the",
    "start": "1033740",
    "end": "1035959"
  },
  {
    "text": "component Library",
    "start": "1035959",
    "end": "1038360"
  },
  {
    "text": "I'm going to select a color that's a",
    "start": "1038360",
    "end": "1039798"
  },
  {
    "text": "little different from the others so we",
    "start": "1039799",
    "end": "1041480"
  },
  {
    "text": "can see it a little bit easily",
    "start": "1041480",
    "end": "1044558"
  },
  {
    "text": "to instantiate these components I simply",
    "start": "1045020",
    "end": "1047900"
  },
  {
    "text": "just drag them to the design service",
    "start": "1047900",
    "end": "1050660"
  },
  {
    "text": "here we now have an instance of that",
    "start": "1050660",
    "end": "1052520"
  },
  {
    "text": "proxy component we just built it Imports",
    "start": "1052520",
    "end": "1055160"
  },
  {
    "text": "a stream instance an HTTP instance and a",
    "start": "1055160",
    "end": "1059360"
  },
  {
    "text": "s fault demo app instance and it exports",
    "start": "1059360",
    "end": "1062240"
  },
  {
    "text": "an incoming HTTP instance",
    "start": "1062240",
    "end": "1064400"
  },
  {
    "text": "you can think of instances as analogous",
    "start": "1064400",
    "end": "1066679"
  },
  {
    "text": "to interfaces these are interfaces that",
    "start": "1066679",
    "end": "1069140"
  },
  {
    "text": "are being imported in interfaces being",
    "start": "1069140",
    "end": "1070820"
  },
  {
    "text": "exported from this component",
    "start": "1070820",
    "end": "1073160"
  },
  {
    "text": "so to",
    "start": "1073160",
    "end": "1075740"
  },
  {
    "text": "resolve the dependency on this felt demo",
    "start": "1075740",
    "end": "1077960"
  },
  {
    "text": "app",
    "start": "1077960",
    "end": "1078679"
  },
  {
    "text": "I'm going to instantiate the exact same",
    "start": "1078679",
    "end": "1081200"
  },
  {
    "text": "component that guy published to the",
    "start": "1081200",
    "end": "1083059"
  },
  {
    "text": "component registry",
    "start": "1083059",
    "end": "1084440"
  },
  {
    "text": "this is the JavaScript component he",
    "start": "1084440",
    "end": "1086240"
  },
  {
    "text": "built",
    "start": "1086240",
    "end": "1087500"
  },
  {
    "text": "it exports an ack instance so I'm going",
    "start": "1087500",
    "end": "1091220"
  },
  {
    "text": "to wire this app instance to my app",
    "start": "1091220",
    "end": "1093559"
  },
  {
    "text": "instance import on my proxy component",
    "start": "1093559",
    "end": "1097039"
  },
  {
    "text": "and now that depends the satisfied",
    "start": "1097039",
    "end": "1099919"
  },
  {
    "text": "however we still can't run this",
    "start": "1099919",
    "end": "1101539"
  },
  {
    "text": "component in Viceroy because it's",
    "start": "1101539",
    "end": "1103580"
  },
  {
    "text": "importing the streams to http interfaces",
    "start": "1103580",
    "end": "1106400"
  },
  {
    "text": "from wazzy which Viceroy doesn't support",
    "start": "1106400",
    "end": "1109940"
  },
  {
    "text": "yet so to solve this I'm going to drag",
    "start": "1109940",
    "end": "1113480"
  },
  {
    "text": "an instance",
    "start": "1113480",
    "end": "1115280"
  },
  {
    "text": "of the HTTP adapter to the design",
    "start": "1115280",
    "end": "1117260"
  },
  {
    "text": "service and this is a component I wrote",
    "start": "1117260",
    "end": "1119360"
  },
  {
    "text": "previously that Imports a fast interface",
    "start": "1119360",
    "end": "1122299"
  },
  {
    "text": "and exports streams in http",
    "start": "1122299",
    "end": "1125660"
  },
  {
    "text": "the same ones coming from YZ so this",
    "start": "1125660",
    "end": "1128179"
  },
  {
    "text": "allows us to wire up a streams",
    "start": "1128179",
    "end": "1131240"
  },
  {
    "text": "and hcp implementation for our proxy",
    "start": "1131240",
    "end": "1135200"
  },
  {
    "text": "that is defined in terms of the imported",
    "start": "1135200",
    "end": "1139039"
  },
  {
    "text": "FAFSA interface this is adapting the",
    "start": "1139039",
    "end": "1141380"
  },
  {
    "text": "fast interface provided by Viceroy into",
    "start": "1141380",
    "end": "1144220"
  },
  {
    "text": "wazy compatible implementations that",
    "start": "1144220",
    "end": "1147020"
  },
  {
    "text": "proxy can use",
    "start": "1147020",
    "end": "1149419"
  },
  {
    "text": "this highlights some of the power of the",
    "start": "1149419",
    "end": "1151400"
  },
  {
    "text": "component model because we can adapt",
    "start": "1151400",
    "end": "1154580"
  },
  {
    "text": "and virtualize dependencies",
    "start": "1154580",
    "end": "1157940"
  },
  {
    "text": "inside of our components so this",
    "start": "1157940",
    "end": "1160820"
  },
  {
    "text": "implementation of wazzy is now vocal to",
    "start": "1160820",
    "end": "1163220"
  },
  {
    "text": "this component the host doesn't know",
    "start": "1163220",
    "end": "1164780"
  },
  {
    "text": "anything about it",
    "start": "1164780",
    "end": "1166640"
  },
  {
    "text": "so",
    "start": "1166640",
    "end": "1168380"
  },
  {
    "text": "the last piece of the puzzle here is",
    "start": "1168380",
    "end": "1170660"
  },
  {
    "text": "that Viceroy is expecting a command and",
    "start": "1170660",
    "end": "1173660"
  },
  {
    "text": "not a HTTP proxy it wants a run function",
    "start": "1173660",
    "end": "1176780"
  },
  {
    "text": "exported by the component to call",
    "start": "1176780",
    "end": "1179419"
  },
  {
    "text": "so I have one additional adapter here",
    "start": "1179419",
    "end": "1181460"
  },
  {
    "text": "called the command adapter so I'm going",
    "start": "1181460",
    "end": "1182780"
  },
  {
    "text": "to create an instance of that",
    "start": "1182780",
    "end": "1185419"
  },
  {
    "text": "and this command adapter exports a run",
    "start": "1185419",
    "end": "1188360"
  },
  {
    "text": "function and that's what vicer will call",
    "start": "1188360",
    "end": "1190700"
  },
  {
    "text": "to execute the computed Edge application",
    "start": "1190700",
    "end": "1195260"
  },
  {
    "text": "this adapter instance has an import for",
    "start": "1195260",
    "end": "1198559"
  },
  {
    "text": "hdb incoming Handler and that's the",
    "start": "1198559",
    "end": "1200480"
  },
  {
    "text": "Handler that it wants to call and give",
    "start": "1200480",
    "end": "1202400"
  },
  {
    "text": "the request so I'm going to wire up our",
    "start": "1202400",
    "end": "1204080"
  },
  {
    "text": "proxy",
    "start": "1204080",
    "end": "1205820"
  },
  {
    "text": "export for incoming HTTP to the import",
    "start": "1205820",
    "end": "1207919"
  },
  {
    "text": "of HTTP incoming Handler last I'm going",
    "start": "1207919",
    "end": "1211100"
  },
  {
    "text": "to connect to these HCB",
    "start": "1211100",
    "end": "1213500"
  },
  {
    "text": "imports and exports so that the HTTP",
    "start": "1213500",
    "end": "1216860"
  },
  {
    "text": "implementation is shared between the",
    "start": "1216860",
    "end": "1218480"
  },
  {
    "text": "proxy instance and the component adapter",
    "start": "1218480",
    "end": "1220760"
  },
  {
    "text": "instance",
    "start": "1220760",
    "end": "1222620"
  },
  {
    "text": "finally I'm going to check this checkbox",
    "start": "1222620",
    "end": "1224660"
  },
  {
    "text": "which is just this ui's way of saying",
    "start": "1224660",
    "end": "1227299"
  },
  {
    "text": "that this component's instances exports",
    "start": "1227299",
    "end": "1229580"
  },
  {
    "text": "this run function should be exported",
    "start": "1229580",
    "end": "1232160"
  },
  {
    "text": "from the final component",
    "start": "1232160",
    "end": "1234320"
  },
  {
    "text": "that allows",
    "start": "1234320",
    "end": "1236000"
  },
  {
    "text": "Viceroy to call that run function",
    "start": "1236000",
    "end": "1239360"
  },
  {
    "text": "so now what I'm going to do is click the",
    "start": "1239360",
    "end": "1241100"
  },
  {
    "text": "download component button",
    "start": "1241100",
    "end": "1243679"
  },
  {
    "text": "and give it a name of compose.wasnon",
    "start": "1243679",
    "end": "1247039"
  },
  {
    "text": "and what this does is it it creates a",
    "start": "1247039",
    "end": "1249320"
  },
  {
    "text": "new component based on how we've wired",
    "start": "1249320",
    "end": "1251900"
  },
  {
    "text": "up all these instances internally for",
    "start": "1251900",
    "end": "1253580"
  },
  {
    "text": "this component so we have a compose.wise",
    "start": "1253580",
    "end": "1255679"
  },
  {
    "text": "and file that just got downloaded for us",
    "start": "1255679",
    "end": "1258080"
  },
  {
    "text": "so let's see what happens if we try to",
    "start": "1258080",
    "end": "1260120"
  },
  {
    "text": "run this new composed",
    "start": "1260120",
    "end": "1263120"
  },
  {
    "text": "component with Viceroy",
    "start": "1263120",
    "end": "1266860"
  },
  {
    "text": "Viceroy now starts up successfully",
    "start": "1267260",
    "end": "1269000"
  },
  {
    "text": "because this component Imports fastly",
    "start": "1269000",
    "end": "1272720"
  },
  {
    "text": "and exports a run function we've erased",
    "start": "1272720",
    "end": "1275780"
  },
  {
    "text": "the dependency on those wazzy",
    "start": "1275780",
    "end": "1278620"
  },
  {
    "text": "interfaces that Viceroy does not yet",
    "start": "1278620",
    "end": "1281179"
  },
  {
    "text": "currently support",
    "start": "1281179",
    "end": "1282980"
  },
  {
    "text": "so this is some of the flexibility of",
    "start": "1282980",
    "end": "1284840"
  },
  {
    "text": "the component model we can virtualize",
    "start": "1284840",
    "end": "1287020"
  },
  {
    "text": "requirements of a component in terms of",
    "start": "1287020",
    "end": "1290419"
  },
  {
    "text": "other components",
    "start": "1290419",
    "end": "1292400"
  },
  {
    "text": "so let's see what happens when I open",
    "start": "1292400",
    "end": "1294200"
  },
  {
    "text": "this link now we get the exact same",
    "start": "1294200",
    "end": "1297460"
  },
  {
    "text": "svelte application that guy downloaded",
    "start": "1297460",
    "end": "1300080"
  },
  {
    "text": "earlier but now it's running in the",
    "start": "1300080",
    "end": "1301760"
  },
  {
    "text": "context of an edge application on a",
    "start": "1301760",
    "end": "1303919"
  },
  {
    "text": "vocal testing framework called Viceroy",
    "start": "1303919",
    "end": "1306799"
  },
  {
    "text": "so I can click this button",
    "start": "1306799",
    "end": "1308659"
  },
  {
    "text": "and we get the same win condition that",
    "start": "1308659",
    "end": "1310280"
  },
  {
    "text": "we had earlier",
    "start": "1310280",
    "end": "1311480"
  },
  {
    "text": "so that's really cool",
    "start": "1311480",
    "end": "1313700"
  },
  {
    "text": "so to recap what we just saw",
    "start": "1313700",
    "end": "1316100"
  },
  {
    "text": "we had a JavaScript component",
    "start": "1316100",
    "end": "1320059"
  },
  {
    "text": "implemented by guy that was pushed to a",
    "start": "1320059",
    "end": "1322760"
  },
  {
    "text": "component registry I defined a component",
    "start": "1322760",
    "end": "1325580"
  },
  {
    "text": "in Rust that could easily call into the",
    "start": "1325580",
    "end": "1328400"
  },
  {
    "text": "JavaScript component",
    "start": "1328400",
    "end": "1330260"
  },
  {
    "text": "I then adapted that component to run an",
    "start": "1330260",
    "end": "1333080"
  },
  {
    "text": "environment that it normally could not",
    "start": "1333080",
    "end": "1334820"
  },
  {
    "text": "run in all using components",
    "start": "1334820",
    "end": "1338419"
  },
  {
    "text": "so this concludes my demo let's switch",
    "start": "1338419",
    "end": "1340700"
  },
  {
    "text": "back to the slides",
    "start": "1340700",
    "end": "1343340"
  },
  {
    "text": "now that you've seen the demonstration",
    "start": "1343340",
    "end": "1344780"
  },
  {
    "text": "we hope you're excited about the future",
    "start": "1344780",
    "end": "1347000"
  },
  {
    "text": "of the webassembly component model as we",
    "start": "1347000",
    "end": "1349280"
  },
  {
    "text": "are",
    "start": "1349280",
    "end": "1350960"
  },
  {
    "text": "here are some links to the tools that",
    "start": "1350960",
    "end": "1353480"
  },
  {
    "text": "were shown in the demonstration for",
    "start": "1353480",
    "end": "1355159"
  },
  {
    "text": "JavaScript we have componentized Js and",
    "start": "1355159",
    "end": "1357260"
  },
  {
    "text": "Jayco and for rust we have cargo",
    "start": "1357260",
    "end": "1359480"
  },
  {
    "text": "component these tools can be found under",
    "start": "1359480",
    "end": "1361700"
  },
  {
    "text": "the bytecode alliance organization on",
    "start": "1361700",
    "end": "1363620"
  },
  {
    "text": "GitHub",
    "start": "1363620",
    "end": "1364760"
  },
  {
    "text": "Additionally the composing prototype I",
    "start": "1364760",
    "end": "1367039"
  },
  {
    "text": "demonstrated is available at",
    "start": "1367039",
    "end": "1368840"
  },
  {
    "text": "wasmbuilder.app",
    "start": "1368840",
    "end": "1371840"
  },
  {
    "text": "thank you so much for listening you can",
    "start": "1372080",
    "end": "1374059"
  },
  {
    "text": "find us on the cncf wasm day slack",
    "start": "1374059",
    "end": "1376159"
  },
  {
    "text": "following this presentation but keep in",
    "start": "1376159",
    "end": "1378200"
  },
  {
    "text": "mind it's around 5 45 in the morning our",
    "start": "1378200",
    "end": "1380659"
  },
  {
    "text": "time so we might not be fully awake",
    "start": "1380659",
    "end": "1383360"
  },
  {
    "text": "you can also find us at the bytecode",
    "start": "1383360",
    "end": "1385520"
  },
  {
    "text": "alliance Zoo lip chat at bycode Alliance",
    "start": "1385520",
    "end": "1388039"
  },
  {
    "text": "zulipchat.com",
    "start": "1388039",
    "end": "1390860"
  },
  {
    "text": "thank you very much and I hope you have",
    "start": "1390860",
    "end": "1392960"
  },
  {
    "text": "a great plasma day",
    "start": "1392960",
    "end": "1396039"
  }
]