[
  {
    "start": "0",
    "end": "234000"
  },
  {
    "text": "okay so i will take over from here go ahead yeah so i will take over from",
    "start": "1760",
    "end": "9920"
  },
  {
    "text": "here okay thank you very much so uh yeah so my name is lee john you can call me hari from alibaba i'm",
    "start": "9920",
    "end": "15839"
  },
  {
    "text": "of course a cncf investor and today i will talk a little bit about the several things in kubernetes",
    "start": "15839",
    "end": "21520"
  },
  {
    "text": "community like github's dsl or configure configuration data language",
    "start": "21520",
    "end": "27279"
  },
  {
    "text": "and of course application model so the goal is how we can build something like developer centric kubernetes okay let's",
    "start": "27279",
    "end": "34719"
  },
  {
    "text": "get started so who am i of course so my my team and my role in alibaba is more",
    "start": "34719",
    "end": "41760"
  },
  {
    "text": "like a platform builder or platform engineer but though i also have many other names like kubernetes",
    "start": "41760",
    "end": "48559"
  },
  {
    "text": "engineer platform service engineer or sometimes be called as infrastructure operator but only my",
    "start": "48559",
    "end": "55440"
  },
  {
    "text": "colleagues know that i'm actually a yamo file engineer so what do i build um i'm responsible",
    "start": "55440",
    "end": "63280"
  },
  {
    "text": "for building virus of platforms on top of kubernetes to serve my users who are mostly",
    "start": "63280",
    "end": "70720"
  },
  {
    "text": "application developers and operators in my company they come they come from different business units",
    "start": "70720",
    "end": "76080"
  },
  {
    "text": "they actually serve their own customers i mean the customer for alibaba director and we serve them okay so you may be",
    "start": "76080",
    "end": "83360"
  },
  {
    "text": "curious why why build such kind of platforms on top of kubernetes or and why i built so many platforms on top",
    "start": "83360",
    "end": "90079"
  },
  {
    "text": "of kubernetes developers and operators in alibaba they use kubernetes directly",
    "start": "90079",
    "end": "96799"
  },
  {
    "text": "so will we hope so actually but the reality is not and the reason we need such platforms is",
    "start": "96799",
    "end": "103439"
  },
  {
    "text": "because we need them to feel the gap between users expectations and what kubernetes provides",
    "start": "103439",
    "end": "109840"
  },
  {
    "text": "for example first of all the api and primitives what other users focus on our",
    "start": "109840",
    "end": "115200"
  },
  {
    "text": "code applications and ci cd pipelines but if you look at our kubernetes cluster what it provides are workloads",
    "start": "115200",
    "end": "122159"
  },
  {
    "text": "like deployment stable state container level apis like study",
    "start": "122159",
    "end": "127280"
  },
  {
    "text": "part and even infrastructure details like network policy extra",
    "start": "127280",
    "end": "132720"
  },
  {
    "text": "the second issue is the levels of abstraction for example um for application operators in over",
    "start": "132720",
    "end": "138720"
  },
  {
    "text": "organization they are working on policies like how to do auto scaling they will define strategy",
    "start": "138720",
    "end": "145280"
  },
  {
    "text": "like this and uh for another example how to do uh automatic uh rollouts",
    "start": "145280",
    "end": "151200"
  },
  {
    "text": "uh they also device challenges to describe what what kind of a rogue strategy i want to use",
    "start": "151200",
    "end": "156400"
  },
  {
    "text": "that is a job for our application operators but whatever kubernetes provided to them",
    "start": "156400",
    "end": "161920"
  },
  {
    "text": "however are for example kubernetes service ingress permissive api and easter virtual",
    "start": "161920",
    "end": "168400"
  },
  {
    "text": "service like that so as kubernetes expert like us i mean for me",
    "start": "168400",
    "end": "173760"
  },
  {
    "text": "it's straightforward to assemble the concept into something like a raw strategy or other scanning policy",
    "start": "173760",
    "end": "180879"
  },
  {
    "text": "but these primitives however really don't make any sense from our application",
    "start": "180879",
    "end": "186319"
  },
  {
    "text": "operator's perspective they don't even know what it permissives or is still",
    "start": "186319",
    "end": "191680"
  },
  {
    "text": "so the last issue which is actually the worst one is the user interface from builders we",
    "start": "191680",
    "end": "198400"
  },
  {
    "text": "think kubernetes declarative api is very powerful and extensible it's perfect but our end",
    "start": "198400",
    "end": "205040"
  },
  {
    "text": "users i mean developers and operators definitely don't agree with that",
    "start": "205040",
    "end": "210159"
  },
  {
    "text": "they want to work with human readable interfaces like dashboard like command line tool or infrastructure",
    "start": "210159",
    "end": "216879"
  },
  {
    "text": "as code writing kubernetes yaml files which is over normal life",
    "start": "216879",
    "end": "222400"
  },
  {
    "text": "however for them is more like writing assembly language from developers perspective and",
    "start": "222400",
    "end": "228480"
  },
  {
    "text": "no one wants to do that actually",
    "start": "228480",
    "end": "231920"
  },
  {
    "start": "234000",
    "end": "234000"
  },
  {
    "text": "and at the same time we gradually notice that building such kind of platform is not a silver bullet because um",
    "start": "234400",
    "end": "242480"
  },
  {
    "text": "the biggest problem is that in order to solve over users better in order to bring them this um",
    "start": "242480",
    "end": "248879"
  },
  {
    "text": "easier user experience you tend to define overall platform level api you can think of like",
    "start": "248879",
    "end": "256079"
  },
  {
    "text": "a cloud function api or hierarchical api which is more user-friendly and focus on higher level attractions",
    "start": "256079",
    "end": "263040"
  },
  {
    "text": "but on the other hand this kind of api will actually hide the extensibility of kubernetes because",
    "start": "263040",
    "end": "271040"
  },
  {
    "text": "we basically lose the kubernetes accessibility here because other users in that case can't access",
    "start": "271040",
    "end": "277600"
  },
  {
    "text": "directly to kubernetes so they can't enjoy the unlimited capabilities",
    "start": "277600",
    "end": "283360"
  },
  {
    "text": "provided by kubernetes ecosystem for example microsoft just uh released the open",
    "start": "283360",
    "end": "289680"
  },
  {
    "text": "service mesh correct but it will need a very long time for over platform to support it",
    "start": "289680",
    "end": "295440"
  },
  {
    "text": "because our platform doesn't have such hdmi api we only support still for now so",
    "start": "295440",
    "end": "301520"
  },
  {
    "text": "this will require a huge refactoring effort in the platform layer",
    "start": "301520",
    "end": "307280"
  },
  {
    "text": "so this issue actually widely in the community so a lot of people are asking this question whether we should build a platform or",
    "start": "307280",
    "end": "314000"
  },
  {
    "text": "service on top of kubernetes whether should we hide kubernetes apis from the over end users something like",
    "start": "314000",
    "end": "320160"
  },
  {
    "text": "that so why we also began to rethink this issue from another angle",
    "start": "320160",
    "end": "326160"
  },
  {
    "text": "since kubernetes is great for extensibility right and it also has a large number of",
    "start": "326160",
    "end": "332320"
  },
  {
    "text": "capabilities in kubernetes ecosystem especially provided by crds and operators",
    "start": "332320",
    "end": "337680"
  },
  {
    "text": "so can we try to make kubernetes itself more easier to use i mean build something like a developer",
    "start": "337680",
    "end": "344479"
  },
  {
    "text": "focused kubernetes i need to say what we want to build is a kubernetes that speaks",
    "start": "344479",
    "end": "350720"
  },
  {
    "text": "higher level epi provide abstractions which is user friendly and of course",
    "start": "350720",
    "end": "357120"
  },
  {
    "text": "still keep highly extensible so it's essentially another form or you can say the distribution of",
    "start": "357120",
    "end": "362880"
  },
  {
    "text": "kubernetes so let's look at the higher level api at start",
    "start": "362880",
    "end": "368560"
  },
  {
    "start": "365000",
    "end": "365000"
  },
  {
    "text": "it's essentially about building user facing objections for your workloads and your operational capabilities like",
    "start": "368560",
    "end": "374560"
  },
  {
    "text": "rollout auto scaling and monitoring right there are various efforts in the community",
    "start": "374560",
    "end": "380080"
  },
  {
    "text": "that could provide such kind of higher level abstractions on top of kubernetes for example key native and the ranger",
    "start": "380080",
    "end": "386479"
  },
  {
    "text": "rail i was at least a heroku here because heroku is an effective standard or",
    "start": "386479",
    "end": "392800"
  },
  {
    "text": "baseline for platform service world which is a very good example if you want to comparing to kinetic event real so if we",
    "start": "392800",
    "end": "400960"
  },
  {
    "text": "compare them from two dimensions i mean the learning curve and the level of abstraction we can",
    "start": "400960",
    "end": "407280"
  },
  {
    "text": "easily find out that the higher level the attraction is for example like heroku the lower learning curve it is that's",
    "start": "407280",
    "end": "414720"
  },
  {
    "text": "why even today everybody is still talking about the experience of hair is the best right",
    "start": "414720",
    "end": "420000"
  },
  {
    "text": "and we need to bring this kind of experience to kubernetes to everywhere or everybody's talking about talking like",
    "start": "420000",
    "end": "425599"
  },
  {
    "text": "that obviously hair request developers hire developer centric attraction contribute",
    "start": "425599",
    "end": "431360"
  },
  {
    "text": "a lot to its student success for example enable you to create a production ready online service by single by one",
    "start": "431360",
    "end": "438639"
  },
  {
    "text": "click and only provide you with user facing concepts like pipeline and application you will never",
    "start": "438639",
    "end": "445520"
  },
  {
    "text": "need to worry about infrastructure and loadable details at all when if you are using heroic well compared to",
    "start": "445520",
    "end": "451680"
  },
  {
    "text": "that ranger's role also provides a lot of higher level abstractions by using its command line tool but on",
    "start": "451680",
    "end": "459680"
  },
  {
    "text": "the other hand you will notice that it actually leaks a lot of kubernetes details or infrastructural details to",
    "start": "459680",
    "end": "466000"
  },
  {
    "text": "end users for example sacred conflict map you need to care about the workload you need to think about um how to do manually",
    "start": "466000",
    "end": "473280"
  },
  {
    "text": "uh traffic split you need to manually you need to manually manage the revisions like that",
    "start": "473280",
    "end": "479360"
  },
  {
    "text": "and when it comes to key native although it claims to be a service platform but its abstraction is relatively lower",
    "start": "479360",
    "end": "486160"
  },
  {
    "text": "level even than ranger rail for example you need to concern about pod template inclinative which include",
    "start": "486160",
    "end": "493120"
  },
  {
    "text": "many non-developer facing concepts like part security policy like uh volumes a lot of things like",
    "start": "493120",
    "end": "500720"
  },
  {
    "text": "that look that we're not talking about chlorine here chlorine actually have much higher level abstraction than",
    "start": "500720",
    "end": "507120"
  },
  {
    "text": "kinetic native is more like foundation below that so of course when it comes to kubernetes",
    "start": "507120",
    "end": "513360"
  },
  {
    "text": "itself there are already many complaints about a super high learning curve right",
    "start": "513360",
    "end": "519039"
  },
  {
    "text": "i will say it's actually natural it's by design because kubernetes is a platform for platform it's",
    "start": "519039",
    "end": "524480"
  },
  {
    "text": "designed for platform engineers like me to use just think about linux kernel or windows",
    "start": "524480",
    "end": "530160"
  },
  {
    "text": "kernel here right it's it's by design but on the other hand we also notice that building such higher",
    "start": "530160",
    "end": "537200"
  },
  {
    "start": "533000",
    "end": "533000"
  },
  {
    "text": "level attraction always has compromise on extensibility let's still take these four projects",
    "start": "537200",
    "end": "544240"
  },
  {
    "text": "here for heroku the only way you for you to extend this",
    "start": "544240",
    "end": "549600"
  },
  {
    "text": "this this product is building heracles atoms by floating tons of restrictions and conventions defined by",
    "start": "549600",
    "end": "556240"
  },
  {
    "text": "heroic itself it's essentially a closed system right so it can barely leverage in open source",
    "start": "556240",
    "end": "563680"
  },
  {
    "text": "community i mean the kubernetes community or even wider community because",
    "start": "563680",
    "end": "568959"
  },
  {
    "text": "it's essentially vendor-locking and that is a big concern for the open source world and for rental rail",
    "start": "568959",
    "end": "576720"
  },
  {
    "text": "in same case um there are no even straightforward approach to support more workloads or capabilities",
    "start": "576720",
    "end": "582560"
  },
  {
    "text": "in rail it's really hard unless you modify the code refactoring project i think it's also",
    "start": "582560",
    "end": "588240"
  },
  {
    "text": "body that because real is a lightweight weapon on top of kubernetes so",
    "start": "588240",
    "end": "593760"
  },
  {
    "text": "if you give it more flexibility to the users it will essentially break its model and leave",
    "start": "593760",
    "end": "599360"
  },
  {
    "text": "the attraction for kinetic however you basically have more room to do customization",
    "start": "599360",
    "end": "605920"
  },
  {
    "text": "for example it provides you with several extension points by design and you can also write your own crdd",
    "start": "605920",
    "end": "611040"
  },
  {
    "text": "controller to extend the kinetic as long as you don't break its fundamental model that is how it works of course for",
    "start": "611040",
    "end": "618560"
  },
  {
    "text": "kubernetes itself it's probably i think the most extensible infrastructure system in the",
    "start": "618560",
    "end": "623760"
  },
  {
    "text": "open source world because you can use crdn operator or controller alone to model everything here so you can see",
    "start": "623760",
    "end": "631440"
  },
  {
    "text": "the difference here the lower your abstraction is the more extensibility you have",
    "start": "631440",
    "end": "639199"
  },
  {
    "start": "640000",
    "end": "640000"
  },
  {
    "text": "and another drawback of building attraction is if you want to do that on server side i mean you want to build objections inside",
    "start": "640000",
    "end": "647360"
  },
  {
    "text": "kubernetes by exposing crds to a user you really need to put a lot of",
    "start": "647360",
    "end": "652399"
  },
  {
    "text": "engineering efforts in this space the reason is that abstraction actually has many forms",
    "start": "652399",
    "end": "657839"
  },
  {
    "text": "for example you may want to combine a deployment at a service into one abstraction which",
    "start": "657839",
    "end": "663600"
  },
  {
    "text": "name for example web service right so it will expose a external port by that that is one kind",
    "start": "663600",
    "end": "671519"
  },
  {
    "text": "of attraction we can call that composition or you may want to split",
    "start": "671519",
    "end": "676720"
  },
  {
    "text": "for example argo route into two simple object which name is workload and a route so",
    "start": "676720",
    "end": "682959"
  },
  {
    "text": "you can do separate concerns here and let different persona for example developer will take care of the",
    "start": "682959",
    "end": "688000"
  },
  {
    "text": "workload and the operator will take care of the route strategy so they will have different objects and",
    "start": "688000",
    "end": "693120"
  },
  {
    "text": "different apis it's separate concerns sometimes you want to do that and we can call that decomposition",
    "start": "693120",
    "end": "699519"
  },
  {
    "text": "and there are also some cases that you want to transform for example deployment into a read-only",
    "start": "699519",
    "end": "706640"
  },
  {
    "text": "and a simplified version which limited for example kinetic relation that is how they decide today you want",
    "start": "706640",
    "end": "712560"
  },
  {
    "text": "to do transformation it's also another kind of abstraction so all of these efforts even the",
    "start": "712560",
    "end": "718800"
  },
  {
    "text": "simplest abstraction for example transformation will require you to define crd",
    "start": "718800",
    "end": "723920"
  },
  {
    "text": "and implement controller problematic server side you also you also need to think about the interoperability with",
    "start": "723920",
    "end": "729519"
  },
  {
    "text": "other systems without other objects it's complicated but you raise the bar very high for you to build abstraction",
    "start": "729519",
    "end": "737120"
  },
  {
    "text": "not to mention the extra burden to maintain these controllers and crds you are basically creating another",
    "start": "737120",
    "end": "742480"
  },
  {
    "text": "kinetic think about that so basically the difficulty of building",
    "start": "742480",
    "end": "749360"
  },
  {
    "start": "746000",
    "end": "746000"
  },
  {
    "text": "attractions is there and besides that",
    "start": "749360",
    "end": "754560"
  },
  {
    "text": "we also notice some other issues like building attractions will actually create more silos in your",
    "start": "754560",
    "end": "761760"
  },
  {
    "text": "system or in your organization this is because as a big company like alibaba like microsoft like",
    "start": "761760",
    "end": "768240"
  },
  {
    "text": "google they're cramming from over users from our developers are highly diverse for example some",
    "start": "768240",
    "end": "774959"
  },
  {
    "text": "applications in our organization are stable workouts so we need to build them in stable application platform with manual scaling",
    "start": "774959",
    "end": "781360"
  },
  {
    "text": "policy with canary road strategies however there are also many applications are",
    "start": "781360",
    "end": "787279"
  },
  {
    "text": "stateless they use deployment for example at workload and b works flagger to do route for",
    "start": "787279",
    "end": "794399"
  },
  {
    "text": "example and hpa for auto scaling right",
    "start": "794399",
    "end": "799519"
  },
  {
    "text": "and there are also even some other applications they just prefer to go to service style",
    "start": "799519",
    "end": "804800"
  },
  {
    "text": "so we have to use keynetive to serve them see also all of these platforms they have",
    "start": "804800",
    "end": "810560"
  },
  {
    "text": "unique requirements they also share a lot in common for example all of these platform platforms",
    "start": "810560",
    "end": "817440"
  },
  {
    "text": "may require the service like let's encrypt right but at platform builders we have",
    "start": "817440",
    "end": "823839"
  },
  {
    "text": "to implement this functionality in different forms again and again because every platform here",
    "start": "823839",
    "end": "829279"
  },
  {
    "text": "speaks different api so essentially we're creating more fragmentations by because we need to",
    "start": "829279",
    "end": "836240"
  },
  {
    "text": "provide different attractions to our developers we're creating more silos and a more closed ecosystem and waste a",
    "start": "836240",
    "end": "842880"
  },
  {
    "text": "lot of the engineers time here that don't feel good so i think we all agree that we want to",
    "start": "842880",
    "end": "850480"
  },
  {
    "text": "build developer-centric kubernetes now right we want to provide them abstractions but obviously the re",
    "start": "850480",
    "end": "857199"
  },
  {
    "text": "the the point is how in the rest of the talk i will try to introduce some useful",
    "start": "857199",
    "end": "862399"
  },
  {
    "text": "tools that can help you to build such kind of attractions and to build such kind of kubernetes",
    "start": "862399",
    "end": "868560"
  },
  {
    "text": "which is any user face maybe can be some maybe can create more uh possibilities",
    "start": "868560",
    "end": "875519"
  },
  {
    "text": "for us to do this thing better so the first thing i want to talk about is how we build the attraction more",
    "start": "875519",
    "end": "883040"
  },
  {
    "start": "878000",
    "end": "878000"
  },
  {
    "text": "easier and the point here is we may want to consider the data configuration language the dcl",
    "start": "883040",
    "end": "890079"
  },
  {
    "text": "or dsl so actually if you revisit these three patterns of x actions i",
    "start": "890079",
    "end": "896560"
  },
  {
    "text": "mentioned before you could find out that abstraction is basically about data manipulation no matter it's",
    "start": "896560",
    "end": "903440"
  },
  {
    "text": "decomposition composition or transformation that's why building",
    "start": "903440",
    "end": "908560"
  },
  {
    "text": "objection should be easily i mean you should be handled by some dsl or dcl",
    "start": "908560",
    "end": "915680"
  },
  {
    "text": "this kind of data configuration language way easier than writing crd and the controllers",
    "start": "915680",
    "end": "921760"
  },
  {
    "text": "because dsl happens on clyster there is minimal maintenance effort for",
    "start": "921760",
    "end": "928480"
  },
  {
    "text": "them right for example i will highlight this q here the q language here",
    "start": "928480",
    "end": "935279"
  },
  {
    "text": "q is just perfect for you to define traction for configuration data and queue don't want to want you to learn",
    "start": "935279",
    "end": "943519"
  },
  {
    "text": "any programming language they don't q don't want you to write a program to",
    "start": "943519",
    "end": "949680"
  },
  {
    "text": "define abstraction you don't need to do that you don't need to write python code or typescript code you don't need to do",
    "start": "949680",
    "end": "956800"
  },
  {
    "text": "that instead in frication it works only on data configuration to provide a",
    "start": "956800",
    "end": "964639"
  },
  {
    "text": "sub a super state of json language of json so it's essentially q so you can",
    "start": "964639",
    "end": "970240"
  },
  {
    "text": "think of q is just a once version of json and the value actual value is",
    "start": "970240",
    "end": "978000"
  },
  {
    "text": "by using this kind of q language you can define types or schema for a",
    "start": "978000",
    "end": "983680"
  },
  {
    "text": "data that's how you define traction section this is the main difference between q and other ds cells like",
    "start": "983680",
    "end": "991920"
  },
  {
    "text": "for example cd kubernetes from ocd from aws because cdk will require you to write",
    "start": "991920",
    "end": "998720"
  },
  {
    "text": "program and they encourage you to write your program to define attraction but q cannot work like that q itself is a",
    "start": "998720",
    "end": "1006639"
  },
  {
    "text": "configuration language the only difference is q allows you to define schema alongside real data",
    "start": "1006639",
    "end": "1015040"
  },
  {
    "text": "and besides q device and estimation q defines schema value",
    "start": "1015040",
    "end": "1021279"
  },
  {
    "text": "inconsistent grammar so you will find its schema and your and your data you define",
    "start": "1021279",
    "end": "1026880"
  },
  {
    "text": "the follow the same pattern here so it's basically like every time you play with q you will provide two things",
    "start": "1026880",
    "end": "1033678"
  },
  {
    "text": "the first is schema second is your data and they all looks like a json that's all so it's very easy to learn",
    "start": "1033679",
    "end": "1040319"
  },
  {
    "text": "although its documentation are very good i admit but if you look at it in detail",
    "start": "1040319",
    "end": "1045360"
  },
  {
    "text": "it's very actually familiar with json language available schema and four for its data so",
    "start": "1045360",
    "end": "1052559"
  },
  {
    "text": "you just defile schema and then define data and then you can use that to",
    "start": "1052559",
    "end": "1058799"
  },
  {
    "text": "define any kind of objection you want that's all so for users they can just interact with",
    "start": "1058799",
    "end": "1065840"
  },
  {
    "text": "the abstraction data that's why you can actually build your platform user interface based on this abstraction",
    "start": "1065840",
    "end": "1071919"
  },
  {
    "text": "and the client-side attraction will handle the transformation from q to the real raw kubernetes data like",
    "start": "1071919",
    "end": "1078559"
  },
  {
    "text": "deployment but for user they'll need to define three fields in this case in this example yeah so",
    "start": "1078559",
    "end": "1084960"
  },
  {
    "text": "this is i think a either way or a better way to define a track instead of define a bunch",
    "start": "1084960",
    "end": "1091200"
  },
  {
    "text": "of uh crd controller your kubernetes cluster a second tool is how we",
    "start": "1091200",
    "end": "1099679"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "actually introduce a standard hylo api to users and in this section i will introduce uh",
    "start": "1099679",
    "end": "1106000"
  },
  {
    "text": "open application model which is the project i personally also involved together with microsoft",
    "start": "1106000",
    "end": "1111840"
  },
  {
    "text": "the core idea of ohm is it enable you to find application-centric primitives which are enforced",
    "start": "1111840",
    "end": "1119520"
  },
  {
    "text": "by own specification and that's how you break the silos animation because oil platform now will",
    "start": "1119520",
    "end": "1126480"
  },
  {
    "text": "speak same and standard api for example my first platform",
    "start": "1126480",
    "end": "1131600"
  },
  {
    "text": "in this example is designed to run stable workloads so it will expose a own",
    "start": "1131600",
    "end": "1138000"
  },
  {
    "text": "object to user which named application configuration and in that application configuration it",
    "start": "1138000",
    "end": "1143600"
  },
  {
    "text": "claims to deploy for example postgresql operator it's a stay for workload",
    "start": "1143600",
    "end": "1149520"
  },
  {
    "text": "and it also defines that manual scaling policy will be applied to this postgresql operator",
    "start": "1149520",
    "end": "1154960"
  },
  {
    "text": "so we call that shade so your workload and shade are all contents in your",
    "start": "1154960",
    "end": "1160640"
  },
  {
    "text": "application configuration on the other hand the second platform here which you desire to run steadily is",
    "start": "1160640",
    "end": "1167280"
  },
  {
    "text": "stateless workload it will also expose a similar application configuration the only",
    "start": "1167280",
    "end": "1172720"
  },
  {
    "text": "difference here is that its workload will be changed to kubernetes deployment",
    "start": "1172720",
    "end": "1178640"
  },
  {
    "text": "and its shades will be changed to kubernetes hpi hpa horizontal port auto scanner so you",
    "start": "1178640",
    "end": "1186080"
  },
  {
    "text": "can see difference here those two platforms expose similar epi structure",
    "start": "1186080",
    "end": "1191120"
  },
  {
    "text": "the only difference is what kind of workload or what kind of shade it provides to users",
    "start": "1191120",
    "end": "1197760"
  },
  {
    "text": "and similar pattern also applies to the third platform which deploy connective service so it will claim creative",
    "start": "1197760",
    "end": "1203200"
  },
  {
    "text": "service and workload and use kinetic autoscaler as a trade to scale the container see",
    "start": "1203200",
    "end": "1211120"
  },
  {
    "text": "although the different characteristics in detail these three platforms expose a unified",
    "start": "1211120",
    "end": "1216720"
  },
  {
    "text": "api to end users such experience or consistency is the key to break silos in over organization",
    "start": "1216720",
    "end": "1225120"
  },
  {
    "text": "and due to now they share the same application model all these platforms can now share a",
    "start": "1225120",
    "end": "1231039"
  },
  {
    "text": "common pool of capabilities and the platform builders can just",
    "start": "1231039",
    "end": "1236240"
  },
  {
    "text": "pick what they want to assemble them into their own platforms api it's just the easy and neat and all of",
    "start": "1236240",
    "end": "1242240"
  },
  {
    "text": "these capabilities they are kubernetes crdm operators or building kubernetes apis nothing special we don't",
    "start": "1242240",
    "end": "1248480"
  },
  {
    "text": "need to reinvent any rail here and the last tool i want to highlight is",
    "start": "1248480",
    "end": "1254880"
  },
  {
    "start": "1252000",
    "end": "1252000"
  },
  {
    "text": "githubs it's basically in my opinion the modern way to build a modulized cd system continuous",
    "start": "1254880",
    "end": "1261760"
  },
  {
    "text": "delivery system in kubernetes today the model application delivery actually starts from developer writing",
    "start": "1261760",
    "end": "1268159"
  },
  {
    "text": "code and trigger continuous integration process by pushing code to github for example",
    "start": "1268159",
    "end": "1274080"
  },
  {
    "text": "then the ci system will generate dark images and the artifacts of your application and for development",
    "start": "1274080",
    "end": "1281440"
  },
  {
    "text": "uh i mean for deployment for the these artifacts for this image we will write kubernetes",
    "start": "1281440",
    "end": "1286720"
  },
  {
    "text": "example files to define workload and operational configuration field application for example",
    "start": "1286720",
    "end": "1292080"
  },
  {
    "text": "the workload could be um deployment and the operational capability could be route",
    "start": "1292080",
    "end": "1298320"
  },
  {
    "text": "strategy or scaling policy right and those yama",
    "start": "1298320",
    "end": "1303600"
  },
  {
    "text": "files normally stored in git alongside a video application so it will trigger github's",
    "start": "1303600",
    "end": "1308720"
  },
  {
    "text": "workflow for every change it fails for example i changed the route",
    "start": "1308720",
    "end": "1313840"
  },
  {
    "text": "throughout the strategy and when this changes reach to kubernetes the controller like rod",
    "start": "1313840",
    "end": "1319840"
  },
  {
    "text": "controller will respond and perform the corresponding application delivery functionality",
    "start": "1319840",
    "end": "1325440"
  },
  {
    "text": "in this example it will leverage istio to do traffic shifting and use permissions to automatic application",
    "start": "1325440",
    "end": "1333360"
  },
  {
    "text": "revision promotion so everything will work smoothly inside kubernetes and this github application delivery",
    "start": "1333360",
    "end": "1340720"
  },
  {
    "text": "workflow with kubernetes and the controller pattern of this car and it's hard it's very different from",
    "start": "1340720",
    "end": "1347760"
  },
  {
    "text": "the traditional csd pipeline and the key point here is this system you can see here is",
    "start": "1347760",
    "end": "1353200"
  },
  {
    "text": "highly modular modular modularized because every everything talking with it at the",
    "start": "1353200",
    "end": "1359039"
  },
  {
    "text": "standard interface and the logics are just a stable controllers and crt inside equipment you",
    "start": "1359039",
    "end": "1365280"
  },
  {
    "text": "can replace them as at your wheel right and this kind of system is",
    "start": "1365280",
    "end": "1370480"
  },
  {
    "text": "very easy to be integrated with any other system or any other you know external service so this is why",
    "start": "1370480",
    "end": "1378240"
  },
  {
    "text": "i say the githubs workflow will make your system very extensible and bring the",
    "start": "1378240",
    "end": "1385280"
  },
  {
    "text": "developer familiar experience by leveraging gate operations right okay so",
    "start": "1385280",
    "end": "1392480"
  },
  {
    "text": "let's try to put them all together so now we talk about we use q for build abstraction and then",
    "start": "1392480",
    "end": "1399039"
  },
  {
    "text": "we use om to organize your abstraction which we named it as application model and we",
    "start": "1399039",
    "end": "1406480"
  },
  {
    "text": "will also use the give we will git ops for continuous delivery so it seems like the delay percentage is",
    "start": "1406480",
    "end": "1413120"
  },
  {
    "text": "coming up okay let's see what's the whole picture looks like",
    "start": "1413120",
    "end": "1418960"
  },
  {
    "start": "1416000",
    "end": "1416000"
  },
  {
    "text": "um so first of all in this posing is proof of concept i mean my",
    "start": "1418960",
    "end": "1425039"
  },
  {
    "text": "version of developer centric kubernetes is based on github's workflow but",
    "start": "1425039",
    "end": "1430720"
  },
  {
    "text": "this time what we stored in git is not a kubernetes yaml file it's too complicated for over end users",
    "start": "1430720",
    "end": "1437760"
  },
  {
    "text": "instead we can define something which is super user friendly we call that",
    "start": "1437760",
    "end": "1443279"
  },
  {
    "text": "application file or application yaml and this yama file is based on q",
    "start": "1443279",
    "end": "1448880"
  },
  {
    "text": "language schema and this structure is actually complete or enforced by own",
    "start": "1448880",
    "end": "1456840"
  },
  {
    "text": "specification so in this example for i just give a very simple instance here",
    "start": "1456840",
    "end": "1463840"
  },
  {
    "text": "it's a my application and it's one component a component in the concept of ohm and",
    "start": "1463840",
    "end": "1469919"
  },
  {
    "text": "the workload for this component is deployment right and the fields you you put here",
    "start": "1469919",
    "end": "1475840"
  },
  {
    "text": "is actually abstraction defined by q language or by q schema so you can define image you can define",
    "start": "1475840",
    "end": "1482080"
  },
  {
    "text": "environment that's that that is only concerns me exposed to our users of course we can change the",
    "start": "1482080",
    "end": "1487360"
  },
  {
    "text": "queue schema at any time then our users can fill more fields and in this section that is the power of",
    "start": "1487360",
    "end": "1494240"
  },
  {
    "text": "client side abstraction you don't need to write controllers you don't need to refactor your code or redeploy your platform you",
    "start": "1494240",
    "end": "1501200"
  },
  {
    "text": "don't need to do that because everything here is client-side and also it has a",
    "start": "1501200",
    "end": "1506240"
  },
  {
    "text": "bunch of chase including auto-scaling and draw-outs exposed they are all crds over",
    "start": "1506240",
    "end": "1514240"
  },
  {
    "text": "kubernetes installed and again the fields user needs to build is",
    "start": "1514240",
    "end": "1520799"
  },
  {
    "text": "are still defined by q schema that's why this yama file can be super simple",
    "start": "1520799",
    "end": "1526000"
  },
  {
    "text": "can be super developer focused or developers intrigued that's the key and any change only yama",
    "start": "1526000",
    "end": "1534000"
  },
  {
    "text": "file will trigger the gdos tools such as flux or argo cd to apply the changes to",
    "start": "1534000",
    "end": "1539440"
  },
  {
    "text": "kubernetes and in that case the kubernetes",
    "start": "1539440",
    "end": "1544799"
  },
  {
    "text": "the the own plugin for kubernetes will then abstract the information from the structure",
    "start": "1544799",
    "end": "1550799"
  },
  {
    "text": "and use the cube to generate the real kubernetes api resource and",
    "start": "1550799",
    "end": "1556559"
  },
  {
    "text": "those each kubernetes epi resource will drive the controllers for example router controller or",
    "start": "1556559",
    "end": "1562320"
  },
  {
    "text": "scaling controllers work so in this sense this system will provide developer",
    "start": "1562320",
    "end": "1567919"
  },
  {
    "text": "centric objection for any users but at the same time it still keeps the extensibility of kubernetes on",
    "start": "1567919",
    "end": "1573600"
  },
  {
    "text": "first class cities and you can see here even its abstraction layer is extensible because",
    "start": "1573600",
    "end": "1578880"
  },
  {
    "text": "we can leverage the queue schema to do that in client side for example if i want to enable open",
    "start": "1578880",
    "end": "1584720"
  },
  {
    "text": "service mesh based um for example i want to enable traffic speed based on open service mesh",
    "start": "1584720",
    "end": "1590320"
  },
  {
    "text": "right in this platform i just need to install open source image in kubernetes and then",
    "start": "1590320",
    "end": "1597279"
  },
  {
    "text": "i will use q to define a abstraction for smi traffic's vcrd and then i will",
    "start": "1597279",
    "end": "1604320"
  },
  {
    "text": "define it as a shade in my demo file because it's followed",
    "start": "1604320",
    "end": "1609919"
  },
  {
    "text": "on specifications so i can define shape and real i can add more chat here so everything",
    "start": "1609919",
    "end": "1615200"
  },
  {
    "text": "will work you can see here the only thing i need to do is install the capability installed operator",
    "start": "1615200",
    "end": "1622320"
  },
  {
    "text": "and define abstraction by using q which is minimal effort and then i can use own structure to",
    "start": "1622320",
    "end": "1628960"
  },
  {
    "text": "define the application of file here so no single line of code is needed essentially",
    "start": "1628960",
    "end": "1635120"
  },
  {
    "text": "right that is what i mentioned about how to build a easier abstraction which is extensible",
    "start": "1635120",
    "end": "1641440"
  },
  {
    "text": "so we can build a developer centric kubernetes in that case okay so this is just a proof of concept",
    "start": "1641440",
    "end": "1648000"
  },
  {
    "text": "and if enabled anybody interested in that part i'm very happy to collaborate with",
    "start": "1648000",
    "end": "1653520"
  },
  {
    "text": "you to work on work on that in open source community of course and it was still missing here if you",
    "start": "1653520",
    "end": "1660080"
  },
  {
    "start": "1657000",
    "end": "1657000"
  },
  {
    "text": "want to move that kind of thing to a real world solution so i think the most important part is that today we are",
    "start": "1660080",
    "end": "1666159"
  },
  {
    "text": "we basically don't have the add-on system to build platform for example for example how we register",
    "start": "1666159",
    "end": "1672080"
  },
  {
    "text": "and discover kubernetes api or crd as a workload or trade so we basically",
    "start": "1672080",
    "end": "1678720"
  },
  {
    "text": "have a lot of crds in our kubernetes cluster so which crd is a one i want to define in my",
    "start": "1678720",
    "end": "1686320"
  },
  {
    "text": "application and part of my application for example rollout uh auto scaling",
    "start": "1686320",
    "end": "1692240"
  },
  {
    "text": "or install virtual service we need to have a way to register them and discover them",
    "start": "1692240",
    "end": "1697679"
  },
  {
    "text": "and what's more important is can we just automatically install missing controllers by giving crds it",
    "start": "1697679",
    "end": "1703279"
  },
  {
    "text": "will actually make our platform more powerful and extend and uh extensible in that case so this",
    "start": "1703279",
    "end": "1710080"
  },
  {
    "text": "is first first first issue i don't have a solution for now um we can i think we can leverage a helm",
    "start": "1710080",
    "end": "1716799"
  },
  {
    "text": "to do to do that if if helm can handle the dependency and technical management uh as expected a",
    "start": "1716799",
    "end": "1724320"
  },
  {
    "text": "stakeholder thing is a modular command line tool or dashboard because you can see here we",
    "start": "1724320",
    "end": "1729520"
  },
  {
    "text": "emphasize extensibility very well you can add more workload you can add more chat to this platform right",
    "start": "1729520",
    "end": "1737120"
  },
  {
    "text": "so when i reject a new workload or trade in this system how my command line tool",
    "start": "1737120",
    "end": "1743200"
  },
  {
    "text": "or my dashboard immediately show up this new workflow and check or just show",
    "start": "1743200",
    "end": "1748640"
  },
  {
    "text": "up a new command line in my command tool right this kind of thing will",
    "start": "1748640",
    "end": "1755200"
  },
  {
    "text": "if if that can be implemented this actually can improve the experience or developers uh at a new stage because it's commodity",
    "start": "1755200",
    "end": "1763279"
  },
  {
    "text": "dashboard become extensible and the last thing is what will be a",
    "start": "1763279",
    "end": "1768880"
  },
  {
    "text": "developer centric pipeline looks like i i'm looking at the tecton but tecton",
    "start": "1768880",
    "end": "1774080"
  },
  {
    "text": "itself is still very low level if you look at its primitives but that remind us actually okay you can",
    "start": "1774080",
    "end": "1780799"
  },
  {
    "text": "you should have a way to build something with tekton right to leverage detection capability",
    "start": "1780799",
    "end": "1786799"
  },
  {
    "text": "to build something um like a developer facing pipeline and you can",
    "start": "1786799",
    "end": "1791840"
  },
  {
    "text": "deploy the pipeline into this kind of platform at ease you can also leverage",
    "start": "1791840",
    "end": "1797360"
  },
  {
    "text": "githubs to do that so i think this is also another field that we want to put some effort to",
    "start": "1797360",
    "end": "1803279"
  },
  {
    "text": "looking at well so this is the rest of things i'm also thinking of",
    "start": "1803279",
    "end": "1808480"
  },
  {
    "text": "again all of these efforts are early stage community effort and i i already noticed",
    "start": "1808480",
    "end": "1815440"
  },
  {
    "text": "there's something already happened something is still missing so i will be very happy to talk with anyone",
    "start": "1815440",
    "end": "1822320"
  },
  {
    "text": "and share the ideas regarding to building such kind of developer centric coordinates so",
    "start": "1822320",
    "end": "1828399"
  },
  {
    "text": "basically hope you enjoy the journey of building dual purposing audio developer centric",
    "start": "1828399",
    "end": "1833760"
  },
  {
    "text": "kubernetes okay so this is end of my station and thank you very much for attending",
    "start": "1833760",
    "end": "1839360"
  },
  {
    "text": "okay thank you lee for a great presentation um do we have any questions at all",
    "start": "1839360",
    "end": "1851840"
  },
  {
    "text": "okay we have a question here says i see a reference to stateless serverless container",
    "start": "1861200",
    "end": "1866960"
  },
  {
    "text": "would you be able to elaborate a bit more on the container yes yes so service container is actually",
    "start": "1866960",
    "end": "1874080"
  },
  {
    "text": "a concept uh bring up by uh for example kinetic even the chlorine so we can think of",
    "start": "1874080",
    "end": "1879840"
  },
  {
    "text": "that it's essentially a template of",
    "start": "1879840",
    "end": "1885200"
  },
  {
    "text": "kubernetes it's a part but you just define it as a service container because",
    "start": "1885200",
    "end": "1891760"
  },
  {
    "text": "for example in the chlorine and fargate and they will use the service pattern to",
    "start": "1891760",
    "end": "1897919"
  },
  {
    "text": "deploy this container for example scale to zero pay as you go and this actually one of",
    "start": "1897919",
    "end": "1905200"
  },
  {
    "text": "the key feature of the service pattern we all know about it so that is the service container and so",
    "start": "1905200",
    "end": "1912480"
  },
  {
    "text": "i'm basically talking about chlorine fargate microsoft uh either eci and it's open source version and of",
    "start": "1912480",
    "end": "1919840"
  },
  {
    "text": "course creative and uh but kinetic only provide actually part of that for example you can't i don't think you can do you can do pen",
    "start": "1919840",
    "end": "1926720"
  },
  {
    "text": "you go pricing with kinetic but you can build uh on top of that so this is the service",
    "start": "1926720",
    "end": "1931760"
  },
  {
    "text": "container i'm talking about it's the epi which can native and color run the target provide to its end users",
    "start": "1931760",
    "end": "1938399"
  },
  {
    "text": "right",
    "start": "1938399",
    "end": "1940720"
  },
  {
    "text": "okay do we have any other questions at all",
    "start": "1944240",
    "end": "1949840"
  },
  {
    "text": "anyone at all",
    "start": "1970320",
    "end": "1977840"
  },
  {
    "text": "okay well i would like to thank lee again for a wonderful presentation um oh no wait",
    "start": "1980159",
    "end": "1987919"
  },
  {
    "text": "that problem um thank you again lee for a wonderful presentation um",
    "start": "1988799",
    "end": "1995760"
  },
  {
    "text": "thank you all for joining us today the webinar recording and slides will be on the website later",
    "start": "1995760",
    "end": "2001120"
  },
  {
    "text": "today at cncf dot io slash webinars we look forward to seeing you again in a future",
    "start": "2001120",
    "end": "2006559"
  },
  {
    "text": "cncf webinar thank you again for participating have a wonderful day everyone",
    "start": "2006559",
    "end": "2011919"
  },
  {
    "text": "thank you very much",
    "start": "2011919",
    "end": "2017679"
  }
]