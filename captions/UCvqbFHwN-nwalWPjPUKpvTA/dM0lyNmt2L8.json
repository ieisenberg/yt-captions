[
  {
    "text": "dodj aha hello everyone welcome to",
    "start": "30",
    "end": "6799"
  },
  {
    "text": "layers of isolation in kubernetes my",
    "start": "6799",
    "end": "10740"
  },
  {
    "text": "name is Tim all Claire I'm a software",
    "start": "10740",
    "end": "13170"
  },
  {
    "text": "engineer working on Google concur burn",
    "start": "13170",
    "end": "15900"
  },
  {
    "text": "Eddy's engine I'm also a co-chair of",
    "start": "15900",
    "end": "18630"
  },
  {
    "text": "kubernetes sig auth and a member of the",
    "start": "18630",
    "end": "20670"
  },
  {
    "text": "product security team so today today I'm",
    "start": "20670",
    "end": "23850"
  },
  {
    "text": "going to tell you about isolation in",
    "start": "23850",
    "end": "26220"
  },
  {
    "text": "kubernetes but before we start with that",
    "start": "26220",
    "end": "29070"
  },
  {
    "text": "let's make sure we're all on the same",
    "start": "29070",
    "end": "30359"
  },
  {
    "text": "page for what isolation means a model of",
    "start": "30359",
    "end": "34559"
  },
  {
    "text": "isolation and security that I really",
    "start": "34559",
    "end": "36480"
  },
  {
    "text": "like is the CIA model",
    "start": "36480",
    "end": "38280"
  },
  {
    "text": "this stands for confidentiality",
    "start": "38280",
    "end": "39930"
  },
  {
    "text": "integrity and availability",
    "start": "39930",
    "end": "43280"
  },
  {
    "text": "confidentiality means that isolated",
    "start": "43280",
    "end": "45930"
  },
  {
    "text": "process cannot read information or State",
    "start": "45930",
    "end": "49800"
  },
  {
    "text": "or data from outside of its isolation",
    "start": "49800",
    "end": "52320"
  },
  {
    "text": "boundary integrity means that the",
    "start": "52320",
    "end": "56010"
  },
  {
    "text": "isolated process cannot alter the state",
    "start": "56010",
    "end": "58710"
  },
  {
    "text": "or the data of things outside of its",
    "start": "58710",
    "end": "60870"
  },
  {
    "text": "isolation boundary and availability",
    "start": "60870",
    "end": "63210"
  },
  {
    "text": "means that the isolated process cannot",
    "start": "63210",
    "end": "66000"
  },
  {
    "text": "compromise the ability of things outside",
    "start": "66000",
    "end": "68790"
  },
  {
    "text": "of its isolation boundary to do their",
    "start": "68790",
    "end": "70710"
  },
  {
    "text": "job",
    "start": "70710",
    "end": "71900"
  },
  {
    "text": "affecting services and whatnot and",
    "start": "71900",
    "end": "75020"
  },
  {
    "text": "before we go on there's two key",
    "start": "75020",
    "end": "77670"
  },
  {
    "text": "properties of isolation I want to point",
    "start": "77670",
    "end": "79409"
  },
  {
    "text": "out the first is that this is really a",
    "start": "79409",
    "end": "81810"
  },
  {
    "text": "multi-dimensional problem it's not",
    "start": "81810",
    "end": "84090"
  },
  {
    "text": "enough to for instance isolate just the",
    "start": "84090",
    "end": "86689"
  },
  {
    "text": "CPU and memory resources to prevent",
    "start": "86689",
    "end": "91939"
  },
  {
    "text": "denial of service compromising",
    "start": "91939",
    "end": "94530"
  },
  {
    "text": "availability type attacks there's a lot",
    "start": "94530",
    "end": "97890"
  },
  {
    "text": "of other ways that you can cause a",
    "start": "97890",
    "end": "99450"
  },
  {
    "text": "denial of service and so to have a",
    "start": "99450",
    "end": "102810"
  },
  {
    "text": "secure isolation boundary this really",
    "start": "102810",
    "end": "106530"
  },
  {
    "text": "requires a holistic approach because",
    "start": "106530",
    "end": "110340"
  },
  {
    "text": "attackers will find the weakest link the",
    "start": "110340",
    "end": "114000"
  },
  {
    "text": "other property I want to mention is that",
    "start": "114000",
    "end": "115649"
  },
  {
    "text": "this is a directional thing as an",
    "start": "115649",
    "end": "119040"
  },
  {
    "text": "example a process in a container has a",
    "start": "119040",
    "end": "125399"
  },
  {
    "text": "good isolation boundary around it and",
    "start": "125399",
    "end": "127110"
  },
  {
    "text": "it's not able to access things on the",
    "start": "127110",
    "end": "129840"
  },
  {
    "text": "node on the other hand a route process",
    "start": "129840",
    "end": "132690"
  },
  {
    "text": "on the node",
    "start": "132690",
    "end": "133500"
  },
  {
    "text": "can easily access any data that's",
    "start": "133500",
    "end": "135510"
  },
  {
    "text": "running in that container so we see that",
    "start": "135510",
    "end": "137730"
  },
  {
    "text": "there's this sort of directional",
    "start": "137730",
    "end": "140550"
  },
  {
    "text": "directionality so these are the six",
    "start": "140550",
    "end": "144810"
  },
  {
    "text": "layers I'm going to talk about today and",
    "start": "144810",
    "end": "147530"
  },
  {
    "text": "along with the theme of directionality",
    "start": "147530",
    "end": "150150"
  },
  {
    "text": "we see that the first four layers are",
    "start": "150150",
    "end": "153060"
  },
  {
    "text": "within the cluster so we're talking",
    "start": "153060",
    "end": "154740"
  },
  {
    "text": "about something that's already running",
    "start": "154740",
    "end": "156510"
  },
  {
    "text": "in the cluster and what is isolated",
    "start": "156510",
    "end": "159270"
  },
  {
    "text": "within the cluster from that so why",
    "start": "159270",
    "end": "161790"
  },
  {
    "text": "might you care about this the first",
    "start": "161790",
    "end": "164280"
  },
  {
    "text": "reason is defense-in-depth if you have a",
    "start": "164280",
    "end": "167850"
  },
  {
    "text": "service that's exposed externally maybe",
    "start": "167850",
    "end": "170430"
  },
  {
    "text": "there's a remote code Vollmer ability",
    "start": "170430",
    "end": "172890"
  },
  {
    "text": "remote code execution vulnerability in",
    "start": "172890",
    "end": "175500"
  },
  {
    "text": "that service and an attacker manages to",
    "start": "175500",
    "end": "178230"
  },
  {
    "text": "get access to running within your",
    "start": "178230",
    "end": "180720"
  },
  {
    "text": "container if you have good isolation",
    "start": "180720",
    "end": "183209"
  },
  {
    "text": "then you can prevent that attacker from",
    "start": "183209",
    "end": "185580"
  },
  {
    "text": "being able to further escalate",
    "start": "185580",
    "end": "186870"
  },
  {
    "text": "privileges and access data within the",
    "start": "186870",
    "end": "189810"
  },
  {
    "text": "cluster that they shouldn't have access",
    "start": "189810",
    "end": "191160"
  },
  {
    "text": "to the second reason you might care",
    "start": "191160",
    "end": "193860"
  },
  {
    "text": "about this is if you're running any sort",
    "start": "193860",
    "end": "196590"
  },
  {
    "text": "of multi-tenant environment maybe you're",
    "start": "196590",
    "end": "198630"
  },
  {
    "text": "a SAS provider and you have different",
    "start": "198630",
    "end": "202380"
  },
  {
    "text": "customers running on your cluster and",
    "start": "202380",
    "end": "204420"
  },
  {
    "text": "you don't want them to be able to affect",
    "start": "204420",
    "end": "207150"
  },
  {
    "text": "each other you want good isolation",
    "start": "207150",
    "end": "208920"
  },
  {
    "text": "between those customers so let's start",
    "start": "208920",
    "end": "212519"
  },
  {
    "text": "with containers how much isolation is",
    "start": "212519",
    "end": "215940"
  },
  {
    "text": "there between two containers running in",
    "start": "215940",
    "end": "218100"
  },
  {
    "text": "the same pod there's actually quite a",
    "start": "218100",
    "end": "221190"
  },
  {
    "text": "bit docker has done a lot of good work",
    "start": "221190",
    "end": "224940"
  },
  {
    "text": "on coming up with good security defaults",
    "start": "224940",
    "end": "228540"
  },
  {
    "text": "and sorry yeah so they've done a lot of",
    "start": "228540",
    "end": "236160"
  },
  {
    "text": "work we've adopted those in kubernetes",
    "start": "236160",
    "end": "237720"
  },
  {
    "text": "and short of known vulnerabilities that",
    "start": "237720",
    "end": "243060"
  },
  {
    "text": "it's very hard to escalate privileges",
    "start": "243060",
    "end": "245040"
  },
  {
    "text": "out of a container if you're using best",
    "start": "245040",
    "end": "247079"
  },
  {
    "text": "practices so what are some of those",
    "start": "247079",
    "end": "249410"
  },
  {
    "text": "features that enable container isolation",
    "start": "249410",
    "end": "253130"
  },
  {
    "text": "in kubernetes we isolate CPU and memory",
    "start": "253130",
    "end": "256859"
  },
  {
    "text": "resources and disk as well",
    "start": "256859",
    "end": "259049"
  },
  {
    "text": "by setting requests and limits on",
    "start": "259049",
    "end": "261239"
  },
  {
    "text": "containers CPU and memory is enforced by",
    "start": "261239",
    "end": "264330"
  },
  {
    "text": "the kernel through C groups",
    "start": "264330",
    "end": "266340"
  },
  {
    "text": "setting limits that on what the",
    "start": "266340",
    "end": "269430"
  },
  {
    "text": "container can use and disk is sort of a",
    "start": "269430",
    "end": "272130"
  },
  {
    "text": "softer enforcement that's done by the",
    "start": "272130",
    "end": "274290"
  },
  {
    "text": "cubelet kernel resources are isolated",
    "start": "274290",
    "end": "280320"
  },
  {
    "text": "through things like namespaces so for",
    "start": "280320",
    "end": "282630"
  },
  {
    "text": "instance containers run in separate",
    "start": "282630",
    "end": "284669"
  },
  {
    "text": "mount namespaces have separate file",
    "start": "284669",
    "end": "287790"
  },
  {
    "text": "systems and this means that a container",
    "start": "287790",
    "end": "289500"
  },
  {
    "text": "one container writing a file to its root",
    "start": "289500",
    "end": "291780"
  },
  {
    "text": "filesystem that file isn't going to be",
    "start": "291780",
    "end": "294000"
  },
  {
    "text": "accessible in the other container unless",
    "start": "294000",
    "end": "296430"
  },
  {
    "text": "of course you're writing it to a shared",
    "start": "296430",
    "end": "297870"
  },
  {
    "text": "volume similarly with process IDs they",
    "start": "297870",
    "end": "301080"
  },
  {
    "text": "can't read each other's processes and",
    "start": "301080",
    "end": "303810"
  },
  {
    "text": "there's a number of other kernel",
    "start": "303810",
    "end": "306150"
  },
  {
    "text": "security features that we enable to",
    "start": "306150",
    "end": "308040"
  },
  {
    "text": "reduce the attack service and prevent",
    "start": "308040",
    "end": "310500"
  },
  {
    "text": "known privilege escalations capabilities",
    "start": "310500",
    "end": "315300"
  },
  {
    "text": "is a sort of coarse grained permissions",
    "start": "315300",
    "end": "317610"
  },
  {
    "text": "in the Linux kernel that let us prevent",
    "start": "317610",
    "end": "321780"
  },
  {
    "text": "certain classes of syscalls",
    "start": "321780",
    "end": "324530"
  },
  {
    "text": "Linux security modules such as a farmer",
    "start": "324530",
    "end": "327510"
  },
  {
    "text": "and SELinux can further scope down what",
    "start": "327510",
    "end": "329820"
  },
  {
    "text": "a process is able to do and on a parmer",
    "start": "329820",
    "end": "332760"
  },
  {
    "text": "enabled nodes we enable the docker",
    "start": "332760",
    "end": "335039"
  },
  {
    "text": "default app armour profile which",
    "start": "335039",
    "end": "336900"
  },
  {
    "text": "prevents access to Sisyphus and other",
    "start": "336900",
    "end": "339990"
  },
  {
    "text": "pseudo file systems that can be used",
    "start": "339990",
    "end": "342440"
  },
  {
    "text": "maliciously and then we have some best",
    "start": "342440",
    "end": "345810"
  },
  {
    "text": "practices - you can able enable set comp",
    "start": "345810",
    "end": "348780"
  },
  {
    "text": "through an annotation on the pod and",
    "start": "348780",
    "end": "351720"
  },
  {
    "text": "this will further reduce the number of",
    "start": "351720",
    "end": "354360"
  },
  {
    "text": "the syscalls that the container is able",
    "start": "354360",
    "end": "356280"
  },
  {
    "text": "to make blocking some dangerous syscalls",
    "start": "356280",
    "end": "359450"
  },
  {
    "text": "but of course the best thing that you",
    "start": "359450",
    "end": "361740"
  },
  {
    "text": "can do is to just run as non-root if",
    "start": "361740",
    "end": "365220"
  },
  {
    "text": "you're able to do so this is by far the",
    "start": "365220",
    "end": "368430"
  },
  {
    "text": "the best security guarantee you have in",
    "start": "368430",
    "end": "373200"
  },
  {
    "text": "a container so what isn't isolated at",
    "start": "373200",
    "end": "376470"
  },
  {
    "text": "the container level first of all we",
    "start": "376470",
    "end": "379229"
  },
  {
    "text": "haven't done anything with network we'll",
    "start": "379229",
    "end": "380789"
  },
  {
    "text": "get to that in a minute when we talk",
    "start": "380789",
    "end": "382020"
  },
  {
    "text": "about pods",
    "start": "382020",
    "end": "383539"
  },
  {
    "text": "well we've isolated some hardware",
    "start": "383539",
    "end": "385830"
  },
  {
    "text": "resources this isn't perfect sandbox and",
    "start": "385830",
    "end": "389539"
  },
  {
    "text": "there's still some things like disk",
    "start": "389539",
    "end": "391889"
  },
  {
    "text": "contention or I ops and bandwidth that",
    "start": "391889",
    "end": "394830"
  },
  {
    "text": "aren't properly aren't fully accounted",
    "start": "394830",
    "end": "398159"
  },
  {
    "text": "for at the container level",
    "start": "398159",
    "end": "399310"
  },
  {
    "text": "this is something that we're constantly",
    "start": "399310",
    "end": "400630"
  },
  {
    "text": "working to improve and so you can look",
    "start": "400630",
    "end": "404590"
  },
  {
    "text": "forward to improvements and you know",
    "start": "404590",
    "end": "406330"
  },
  {
    "text": "becoming years in these areas but we're",
    "start": "406330",
    "end": "408340"
  },
  {
    "text": "not quite up to par with VM level",
    "start": "408340",
    "end": "411460"
  },
  {
    "text": "isolation here",
    "start": "411460",
    "end": "413950"
  },
  {
    "text": "another one is kernel resource",
    "start": "413950",
    "end": "415690"
  },
  {
    "text": "exhaustion although we have a big",
    "start": "415690",
    "end": "418300"
  },
  {
    "text": "namespace it's still possible to run out",
    "start": "418300",
    "end": "421120"
  },
  {
    "text": "of process IDs through things like fork",
    "start": "421120",
    "end": "423730"
  },
  {
    "text": "bombs we'll see an example of that in a",
    "start": "423730",
    "end": "425260"
  },
  {
    "text": "second",
    "start": "425260",
    "end": "427450"
  },
  {
    "text": "and lastly identity is typically bound",
    "start": "427450",
    "end": "430720"
  },
  {
    "text": "to pods it is possible to have separate",
    "start": "430720",
    "end": "433900"
  },
  {
    "text": "identities per container but it's not",
    "start": "433900",
    "end": "436210"
  },
  {
    "text": "typically done so let's look at an",
    "start": "436210",
    "end": "439060"
  },
  {
    "text": "example of how how a container can",
    "start": "439060",
    "end": "443710"
  },
  {
    "text": "compromise the availability of a node",
    "start": "443710",
    "end": "445920"
  },
  {
    "text": "I'm gonna run a just run a simple alpine",
    "start": "445920",
    "end": "449980"
  },
  {
    "text": "container to get access to my cluster",
    "start": "449980",
    "end": "451690"
  },
  {
    "text": "and let's take a look at the uptime so",
    "start": "451690",
    "end": "455230"
  },
  {
    "text": "already here we see a compromise of",
    "start": "455230",
    "end": "459510"
  },
  {
    "text": "confidentiality this isn't particularly",
    "start": "459510",
    "end": "463150"
  },
  {
    "text": "sensitive data but this is an example of",
    "start": "463150",
    "end": "465760"
  },
  {
    "text": "some data about the node that is",
    "start": "465760",
    "end": "468220"
  },
  {
    "text": "accessible to within the container this",
    "start": "468220",
    "end": "471010"
  },
  {
    "text": "is the uptime of the node not the uptime",
    "start": "471010",
    "end": "472930"
  },
  {
    "text": "of the container so let's go ahead and",
    "start": "472930",
    "end": "475480"
  },
  {
    "text": "shutdown that node fortunately this",
    "start": "475480",
    "end": "478180"
  },
  {
    "text": "operation is not permitted by default",
    "start": "478180",
    "end": "480280"
  },
  {
    "text": "this is because it requires the system",
    "start": "480280",
    "end": "482530"
  },
  {
    "text": "boot capability that's dropped by",
    "start": "482530",
    "end": "484480"
  },
  {
    "text": "default and docker there's actually a",
    "start": "484480",
    "end": "486490"
  },
  {
    "text": "few other mechanisms as well that",
    "start": "486490",
    "end": "488290"
  },
  {
    "text": "prevent us from doing this but we have",
    "start": "488290",
    "end": "490600"
  },
  {
    "text": "other tools in our toolbox remember",
    "start": "490600",
    "end": "492520"
  },
  {
    "text": "security requires a holistic approach so",
    "start": "492520",
    "end": "496150"
  },
  {
    "text": "this you might recognize as a fork bomb",
    "start": "496150",
    "end": "498870"
  },
  {
    "text": "this will spawn a process that",
    "start": "498870",
    "end": "501310"
  },
  {
    "text": "continuously spawns two copies of itself",
    "start": "501310",
    "end": "503740"
  },
  {
    "text": "in doing so it'll eventually exhaust the",
    "start": "503740",
    "end": "506830"
  },
  {
    "text": "kids that are available so new processes",
    "start": "506830",
    "end": "509140"
  },
  {
    "text": "can't be run it'll cause CPU contention",
    "start": "509140",
    "end": "512289"
  },
  {
    "text": "and eventually eat up a lot of memory on",
    "start": "512290",
    "end": "515800"
  },
  {
    "text": "the system as well and some of these",
    "start": "515800",
    "end": "518080"
  },
  {
    "text": "things aren't fully accounted for with",
    "start": "518080",
    "end": "520390"
  },
  {
    "text": "the C groups so even setting CPU and",
    "start": "520390",
    "end": "522580"
  },
  {
    "text": "limits won't help you",
    "start": "522580",
    "end": "525070"
  },
  {
    "text": "fortunately as of kubernetes 110 we have",
    "start": "525070",
    "end": "528070"
  },
  {
    "text": "an alpha feature called support pod pids",
    "start": "528070",
    "end": "530290"
  },
  {
    "text": "limit if you enable this feature you can",
    "start": "530290",
    "end": "533170"
  },
  {
    "text": "then set a maximum process ideas that a",
    "start": "533170",
    "end": "535660"
  },
  {
    "text": "pod is allowed to use this is an example",
    "start": "535660",
    "end": "537940"
  },
  {
    "text": "of pod level isolation and doing so will",
    "start": "537940",
    "end": "541029"
  },
  {
    "text": "prevent prevent fort bomb type attacks",
    "start": "541029",
    "end": "545459"
  },
  {
    "text": "so with that let's move on to pods how",
    "start": "545459",
    "end": "551410"
  },
  {
    "text": "much isolation is there between two pods",
    "start": "551410",
    "end": "553389"
  },
  {
    "text": "in the same namespace on the same node",
    "start": "553389",
    "end": "555570"
  },
  {
    "text": "well first of all processes aren't",
    "start": "555570",
    "end": "557980"
  },
  {
    "text": "really running in pods they're running",
    "start": "557980",
    "end": "559300"
  },
  {
    "text": "in containers so we get all of the",
    "start": "559300",
    "end": "562510"
  },
  {
    "text": "isolation that we already talked about",
    "start": "562510",
    "end": "563980"
  },
  {
    "text": "with containers and then we're going to",
    "start": "563980",
    "end": "565510"
  },
  {
    "text": "layer on a bit more first of all we get",
    "start": "565510",
    "end": "570279"
  },
  {
    "text": "we finally get name network isolation so",
    "start": "570279",
    "end": "574209"
  },
  {
    "text": "we have a separate network namespace at",
    "start": "574209",
    "end": "576490"
  },
  {
    "text": "the pod and that comes with a virtual",
    "start": "576490",
    "end": "578740"
  },
  {
    "text": "Ethernet add device that's associated",
    "start": "578740",
    "end": "581139"
  },
  {
    "text": "with that pod its own IP address and",
    "start": "581139",
    "end": "583959"
  },
  {
    "text": "this lets us apply network policy as",
    "start": "583959",
    "end": "586149"
  },
  {
    "text": "well for good network isolation we'll",
    "start": "586149",
    "end": "588370"
  },
  {
    "text": "see an example in a minute of why",
    "start": "588370",
    "end": "590529"
  },
  {
    "text": "network policy isn't important service",
    "start": "590529",
    "end": "594850"
  },
  {
    "text": "counts are typically associated with a",
    "start": "594850",
    "end": "596470"
  },
  {
    "text": "pod so we now have the ability to have",
    "start": "596470",
    "end": "599440"
  },
  {
    "text": "two separate pods with different",
    "start": "599440",
    "end": "601149"
  },
  {
    "text": "identities running and a lot of",
    "start": "601149",
    "end": "603760"
  },
  {
    "text": "kubernetes policies are applied at the",
    "start": "603760",
    "end": "605470"
  },
  {
    "text": "pod level pod security policy network",
    "start": "605470",
    "end": "608380"
  },
  {
    "text": "policy we just mentioned and scheduling",
    "start": "608380",
    "end": "610300"
  },
  {
    "text": "policy is a work in progress for",
    "start": "610300",
    "end": "612459"
  },
  {
    "text": "constraining the way pods are scheduled",
    "start": "612459",
    "end": "614440"
  },
  {
    "text": "and then volumes are another resource to",
    "start": "614440",
    "end": "618100"
  },
  {
    "text": "mention that are bound to the pod",
    "start": "618100",
    "end": "619980"
  },
  {
    "text": "emptied ear volumes for instance have",
    "start": "619980",
    "end": "622329"
  },
  {
    "text": "their lifecycle tied to the pod so when",
    "start": "622329",
    "end": "624070"
  },
  {
    "text": "the pod is terminated that data is",
    "start": "624070",
    "end": "626140"
  },
  {
    "text": "deleted so what isn't isolated at the",
    "start": "626140",
    "end": "629529"
  },
  {
    "text": "pod level well as with containers we",
    "start": "629529",
    "end": "633430"
  },
  {
    "text": "haven't really added a lot of hardware",
    "start": "633430",
    "end": "635800"
  },
  {
    "text": "or resource isolation we at least have a",
    "start": "635800",
    "end": "638260"
  },
  {
    "text": "separate network namespace so we have",
    "start": "638260",
    "end": "640000"
  },
  {
    "text": "the building blocks to add in bandwidth",
    "start": "640000",
    "end": "642329"
  },
  {
    "text": "isolation here bandwidth limiting but we",
    "start": "642329",
    "end": "645670"
  },
  {
    "text": "haven't implemented that yet kernel",
    "start": "645670",
    "end": "649240"
  },
  {
    "text": "resource exhaustion is still an issue we",
    "start": "649240",
    "end": "651970"
  },
  {
    "text": "saw how the kit pod Pibbs limit feature",
    "start": "651970",
    "end": "654639"
  },
  {
    "text": "can be used to prevent pit exhaustion",
    "start": "654639",
    "end": "657970"
  },
  {
    "text": "but file descriptors is still an issue",
    "start": "657970",
    "end": "660750"
  },
  {
    "text": "and it's important to remember that this",
    "start": "660750",
    "end": "663069"
  },
  {
    "text": "is still only a single security boundary",
    "start": "663069",
    "end": "665410"
  },
  {
    "text": "so even though we're talking",
    "start": "665410",
    "end": "666720"
  },
  {
    "text": "second layer in that initial diagram",
    "start": "666720",
    "end": "669180"
  },
  {
    "text": "we're still relying on the kernel to",
    "start": "669180",
    "end": "671910"
  },
  {
    "text": "enforce all of these things for us that",
    "start": "671910",
    "end": "673920"
  },
  {
    "text": "means that a single vulnerability that",
    "start": "673920",
    "end": "676500"
  },
  {
    "text": "is exposed despite our attack surface",
    "start": "676500",
    "end": "679439"
  },
  {
    "text": "reduction could potentially be used to",
    "start": "679439",
    "end": "683370"
  },
  {
    "text": "escape out of a container and out of the",
    "start": "683370",
    "end": "685139"
  },
  {
    "text": "pot as well so let's look at an example",
    "start": "685139",
    "end": "688769"
  },
  {
    "text": "of why Network policy is valuable again",
    "start": "688769",
    "end": "693029"
  },
  {
    "text": "I'm going to run an alpine container to",
    "start": "693029",
    "end": "695399"
  },
  {
    "text": "get access to my cluster Network and",
    "start": "695399",
    "end": "697519"
  },
  {
    "text": "I'll go ahead and grab the end map",
    "start": "697519",
    "end": "699990"
  },
  {
    "text": "utility that lets me scan the network I",
    "start": "699990",
    "end": "703610"
  },
  {
    "text": "could scan every port on every IP",
    "start": "703610",
    "end": "706439"
  },
  {
    "text": "address within the the private cluster",
    "start": "706439",
    "end": "708779"
  },
  {
    "text": "IP range but this would take a very long",
    "start": "708779",
    "end": "711720"
  },
  {
    "text": "time so let's not do that",
    "start": "711720",
    "end": "713629"
  },
  {
    "text": "instead I'll just grab the IP address of",
    "start": "713629",
    "end": "716970"
  },
  {
    "text": "the first node the JSON path is just a",
    "start": "716970",
    "end": "720990"
  },
  {
    "text": "trick to grab the the IP address I'm",
    "start": "720990",
    "end": "723180"
  },
  {
    "text": "looking for you could also do it",
    "start": "723180",
    "end": "724350"
  },
  {
    "text": "manually and I can do a similar thing to",
    "start": "724350",
    "end": "727350"
  },
  {
    "text": "get the the pod site arranged so all of",
    "start": "727350",
    "end": "731250"
  },
  {
    "text": "the IP addresses that can be used for",
    "start": "731250",
    "end": "732779"
  },
  {
    "text": "pods now that I have those I can scan",
    "start": "732779",
    "end": "736319"
  },
  {
    "text": "just the the node IP address and we see",
    "start": "736319",
    "end": "740730"
  },
  {
    "text": "that this is a kubernetes master node",
    "start": "740730",
    "end": "743209"
  },
  {
    "text": "taking a closer look at some of those",
    "start": "743209",
    "end": "745290"
  },
  {
    "text": "ports as it's a master we see the",
    "start": "745290",
    "end": "748319"
  },
  {
    "text": "kubernetes api port is there we also see",
    "start": "748319",
    "end": "752699"
  },
  {
    "text": "that etsy D is actually exposed on the",
    "start": "752699",
    "end": "754559"
  },
  {
    "text": "internal network now fortunately in this",
    "start": "754559",
    "end": "757529"
  },
  {
    "text": "cluster this is an authenticated @cd",
    "start": "757529",
    "end": "761420"
  },
  {
    "text": "endpoint and so I don't actually have",
    "start": "761420",
    "end": "765269"
  },
  {
    "text": "access to it but it's important to make",
    "start": "765269",
    "end": "768269"
  },
  {
    "text": "sure that @ çd is in fact authenticated",
    "start": "768269",
    "end": "770790"
  },
  {
    "text": "on your network because having access to",
    "start": "770790",
    "end": "773459"
  },
  {
    "text": "etsy D is equivalent to having root",
    "start": "773459",
    "end": "775170"
  },
  {
    "text": "access in the cluster now let's jump",
    "start": "775170",
    "end": "778860"
  },
  {
    "text": "forward to port 10 255 this is the",
    "start": "778860",
    "end": "782189"
  },
  {
    "text": "cubelets unauthenticated read-only port",
    "start": "782189",
    "end": "784819"
  },
  {
    "text": "it's read-only so I can't do too much",
    "start": "784819",
    "end": "787500"
  },
  {
    "text": "with it but I can get some interesting",
    "start": "787500",
    "end": "791459"
  },
  {
    "text": "metadata about workloads running in the",
    "start": "791459",
    "end": "793769"
  },
  {
    "text": "cluster let's take a closer look at that",
    "start": "793769",
    "end": "797580"
  },
  {
    "text": "there's a pods endpoint that's exposed",
    "start": "797580",
    "end": "799440"
  },
  {
    "text": "and if I look at that endpoint I",
    "start": "799440",
    "end": "802290"
  },
  {
    "text": "actually get a list of every pod spec",
    "start": "802290",
    "end": "805050"
  },
  {
    "text": "running on that node I can query every",
    "start": "805050",
    "end": "808800"
  },
  {
    "text": "node in the cluster and now I know every",
    "start": "808800",
    "end": "810840"
  },
  {
    "text": "workload that's running in the cluster",
    "start": "810840",
    "end": "812990"
  },
  {
    "text": "it is possible to turn off this endpoint",
    "start": "812990",
    "end": "815750"
  },
  {
    "text": "but it's a little tricky as a lot of",
    "start": "815750",
    "end": "818250"
  },
  {
    "text": "monitoring tools rely on the metrics",
    "start": "818250",
    "end": "821280"
  },
  {
    "text": "that are exposed through the read-only",
    "start": "821280",
    "end": "822590"
  },
  {
    "text": "port but that's when we're working to",
    "start": "822590",
    "end": "825690"
  },
  {
    "text": "improve just one other example here's",
    "start": "825690",
    "end": "830340"
  },
  {
    "text": "the kubernetes dashboard and we can",
    "start": "830340",
    "end": "832290"
  },
  {
    "text": "switch over to the browser view",
    "start": "832290",
    "end": "834830"
  },
  {
    "text": "fortunately the modern kubernetes",
    "start": "834830",
    "end": "837390"
  },
  {
    "text": "dashboard is used as authentication and",
    "start": "837390",
    "end": "840690"
  },
  {
    "text": "authorization to make sure that without",
    "start": "840690",
    "end": "843660"
  },
  {
    "text": "proper credentials I can't do anything",
    "start": "843660",
    "end": "846930"
  },
  {
    "text": "too harmful to the cluster that wasn't",
    "start": "846930",
    "end": "849450"
  },
  {
    "text": "always the case and there have been a",
    "start": "849450",
    "end": "850710"
  },
  {
    "text": "few high profile breaches caused by",
    "start": "850710",
    "end": "854180"
  },
  {
    "text": "dashboards that were exposed publicly by",
    "start": "854180",
    "end": "856710"
  },
  {
    "text": "accident so make sure you're running an",
    "start": "856710",
    "end": "858420"
  },
  {
    "text": "up-to-date dashboard and have proper",
    "start": "858420",
    "end": "860130"
  },
  {
    "text": "controls on that so all of these things",
    "start": "860130",
    "end": "863910"
  },
  {
    "text": "could be blocked with a good Network",
    "start": "863910",
    "end": "866670"
  },
  {
    "text": "policy for instance if I have a workload",
    "start": "866670",
    "end": "869340"
  },
  {
    "text": "that doesn't need to talk to nodes or",
    "start": "869340",
    "end": "872990"
  },
  {
    "text": "need access to the dashboard I can",
    "start": "872990",
    "end": "875640"
  },
  {
    "text": "easily block that with network policy as",
    "start": "875640",
    "end": "878720"
  },
  {
    "text": "just a couple examples so let's move on",
    "start": "878720",
    "end": "882990"
  },
  {
    "text": "to talking about kubernetes namespaces",
    "start": "882990",
    "end": "884850"
  },
  {
    "text": "this is different from the Linux",
    "start": "884850",
    "end": "886140"
  },
  {
    "text": "namespaces we talked about at the",
    "start": "886140",
    "end": "887520"
  },
  {
    "text": "container level",
    "start": "887520",
    "end": "889070"
  },
  {
    "text": "so with namespaces I get stronger",
    "start": "889070",
    "end": "893760"
  },
  {
    "text": "identity isolation we already mentioned",
    "start": "893760",
    "end": "896460"
  },
  {
    "text": "that we have we can have different",
    "start": "896460",
    "end": "898110"
  },
  {
    "text": "identities at the pod level but by",
    "start": "898110",
    "end": "900630"
  },
  {
    "text": "default all pods in the namespace run",
    "start": "900630",
    "end": "902820"
  },
  {
    "text": "with the same service account with",
    "start": "902820",
    "end": "905880"
  },
  {
    "text": "different namespaces it's actually not",
    "start": "905880",
    "end": "907620"
  },
  {
    "text": "possible to run those pods with the same",
    "start": "907620",
    "end": "909450"
  },
  {
    "text": "service account and along with that I",
    "start": "909450",
    "end": "912390"
  },
  {
    "text": "have stronger authorization controls and",
    "start": "912390",
    "end": "917040"
  },
  {
    "text": "we'll look at an example of that in a",
    "start": "917040",
    "end": "919650"
  },
  {
    "text": "second and then lastly a bunch of",
    "start": "919650",
    "end": "923100"
  },
  {
    "text": "kubernetes resources are bound to",
    "start": "923100",
    "end": "924780"
  },
  {
    "text": "namespaces",
    "start": "924780",
    "end": "926000"
  },
  {
    "text": "and having pods in separate namespaces",
    "start": "926000",
    "end": "929720"
  },
  {
    "text": "limits their ability to access some of",
    "start": "929720",
    "end": "932240"
  },
  {
    "text": "these resources without without granting",
    "start": "932240",
    "end": "935510"
  },
  {
    "text": "access explicitly through the control",
    "start": "935510",
    "end": "937790"
  },
  {
    "text": "plane through our back or something like",
    "start": "937790",
    "end": "939500"
  },
  {
    "text": "that but it's important to note that",
    "start": "939500",
    "end": "942260"
  },
  {
    "text": "namespace isolation and named kubernetes",
    "start": "942260",
    "end": "944780"
  },
  {
    "text": "namespaces is purely a control plane",
    "start": "944780",
    "end": "946910"
  },
  {
    "text": "concept it doesn't actually have any",
    "start": "946910",
    "end": "950060"
  },
  {
    "text": "effect on the node so once those pods",
    "start": "950060",
    "end": "952130"
  },
  {
    "text": "are running and fully setup there's no",
    "start": "952130",
    "end": "954440"
  },
  {
    "text": "additional isolation between them except",
    "start": "954440",
    "end": "957110"
  },
  {
    "text": "at the control plane so I mentioned that",
    "start": "957110",
    "end": "961360"
  },
  {
    "text": "namespaces are sort of a building block",
    "start": "961360",
    "end": "964610"
  },
  {
    "text": "of the fundamental building block for",
    "start": "964610",
    "end": "966350"
  },
  {
    "text": "authorization it's actually possible to",
    "start": "966350",
    "end": "969470"
  },
  {
    "text": "limit access to specific resources in a",
    "start": "969470",
    "end": "972050"
  },
  {
    "text": "namespace through our back but doing so",
    "start": "972050",
    "end": "975140"
  },
  {
    "text": "has some nuances that can be problematic",
    "start": "975140",
    "end": "977350"
  },
  {
    "text": "so let's look at why here's a user that",
    "start": "977350",
    "end": "980720"
  },
  {
    "text": "is forbidden from accessing secrets in",
    "start": "980720",
    "end": "983930"
  },
  {
    "text": "the default namespace however they do",
    "start": "983930",
    "end": "986420"
  },
  {
    "text": "have the ability to create pods so",
    "start": "986420",
    "end": "989900"
  },
  {
    "text": "here's a simple pod spec that mounts a",
    "start": "989900",
    "end": "992660"
  },
  {
    "text": "secret volume now I have to know already",
    "start": "992660",
    "end": "996050"
  },
  {
    "text": "what the name of the secret I'm trying",
    "start": "996050",
    "end": "997910"
  },
  {
    "text": "to access is but we just saw how I can",
    "start": "997910",
    "end": "1000550"
  },
  {
    "text": "use the pods endpoint on the",
    "start": "1000550",
    "end": "1002820"
  },
  {
    "text": "unauthenticated port of the nodes to see",
    "start": "1002820",
    "end": "1005650"
  },
  {
    "text": "what what secrets are mounted by other",
    "start": "1005650",
    "end": "1008380"
  },
  {
    "text": "pods in the network so I create this pod",
    "start": "1008380",
    "end": "1011890"
  },
  {
    "text": "successfully I have the permissions and",
    "start": "1011890",
    "end": "1013930"
  },
  {
    "text": "at this point there's very many",
    "start": "1013930",
    "end": "1016210"
  },
  {
    "text": "different ways that I can exfiltrate",
    "start": "1016210",
    "end": "1018880"
  },
  {
    "text": "this data out of this pod just to keep",
    "start": "1018880",
    "end": "1021850"
  },
  {
    "text": "things simple I'll assume that I have",
    "start": "1021850",
    "end": "1024329"
  },
  {
    "text": "exec access and can copy the data out",
    "start": "1024329",
    "end": "1027790"
  },
  {
    "text": "and now I have access to the secret",
    "start": "1027790",
    "end": "1030490"
  },
  {
    "text": "despite being forbidden from accessing",
    "start": "1030490",
    "end": "1033250"
  },
  {
    "text": "secrets so what can you do about this",
    "start": "1033250",
    "end": "1037530"
  },
  {
    "text": "it's important to kind of understand the",
    "start": "1037530",
    "end": "1040360"
  },
  {
    "text": "nuances of the all the different",
    "start": "1040360",
    "end": "1043209"
  },
  {
    "text": "permissions that you're granting but to",
    "start": "1043209",
    "end": "1045490"
  },
  {
    "text": "make it a little easier we have a few",
    "start": "1045490",
    "end": "1047110"
  },
  {
    "text": "built-in roles in kubernetes the viewer",
    "start": "1047110",
    "end": "1049360"
  },
  {
    "text": "and the",
    "start": "1049360",
    "end": "1050080"
  },
  {
    "text": "roll which went down dat the namespace",
    "start": "1050080",
    "end": "1052179"
  },
  {
    "text": "level will appropriately limit to what",
    "start": "1052179",
    "end": "1058450"
  },
  {
    "text": "is actually granted by that role so",
    "start": "1058450",
    "end": "1064179"
  },
  {
    "text": "let's move on to talking about nodes now",
    "start": "1064179",
    "end": "1066000"
  },
  {
    "text": "and we're gonna shift gears a bit here",
    "start": "1066000",
    "end": "1068409"
  },
  {
    "text": "so far we've been talking about",
    "start": "1068409",
    "end": "1070029"
  },
  {
    "text": "isolating processes running within a",
    "start": "1070029",
    "end": "1072730"
  },
  {
    "text": "container but now at the node level I'm",
    "start": "1072730",
    "end": "1076929"
  },
  {
    "text": "actually is going to assume that an",
    "start": "1076929",
    "end": "1078850"
  },
  {
    "text": "attacker has already managed to escape",
    "start": "1078850",
    "end": "1081100"
  },
  {
    "text": "the container so maybe it was running as",
    "start": "1081100",
    "end": "1084130"
  },
  {
    "text": "a privileged container and there's a",
    "start": "1084130",
    "end": "1085929"
  },
  {
    "text": "number of ways to get out from there or",
    "start": "1085929",
    "end": "1087669"
  },
  {
    "text": "maybe maybe there was a kernel",
    "start": "1087669",
    "end": "1091659"
  },
  {
    "text": "vulnerability they were able to exploit",
    "start": "1091659",
    "end": "1093690"
  },
  {
    "text": "so let's look at what this attacker that",
    "start": "1093690",
    "end": "1096700"
  },
  {
    "text": "has root on a node is able to do",
    "start": "1096700",
    "end": "1098440"
  },
  {
    "text": "how much isolation is there between",
    "start": "1098440",
    "end": "1100000"
  },
  {
    "text": "different nodes on the cluster and the",
    "start": "1100000",
    "end": "1101830"
  },
  {
    "text": "control plane so first of all well okay",
    "start": "1101830",
    "end": "1106120"
  },
  {
    "text": "we already mentioned that we're assuming",
    "start": "1106120",
    "end": "1107500"
  },
  {
    "text": "the attackers already escaped a",
    "start": "1107500",
    "end": "1109360"
  },
  {
    "text": "container so that means we're actually",
    "start": "1109360",
    "end": "1111100"
  },
  {
    "text": "introducing our first second security",
    "start": "1111100",
    "end": "1113799"
  },
  {
    "text": "boundary or introducing a second",
    "start": "1113799",
    "end": "1116350"
  },
  {
    "text": "security boundary for the first time so",
    "start": "1116350",
    "end": "1121240"
  },
  {
    "text": "yeah that's important because we said",
    "start": "1121240",
    "end": "1124809"
  },
  {
    "text": "that maybe the attacker takes advantage",
    "start": "1124809",
    "end": "1126580"
  },
  {
    "text": "of a kernel vulnerability to X to escape",
    "start": "1126580",
    "end": "1129760"
  },
  {
    "text": "the container but now they need an",
    "start": "1129760",
    "end": "1132519"
  },
  {
    "text": "additional vulnerability hopefully to",
    "start": "1132519",
    "end": "1135360"
  },
  {
    "text": "escalate through the cluster so in",
    "start": "1135360",
    "end": "1140409"
  },
  {
    "text": "addition to that we finally have",
    "start": "1140409",
    "end": "1142090"
  },
  {
    "text": "hardware level resource isolation or at",
    "start": "1142090",
    "end": "1145090"
  },
  {
    "text": "least as good as our VM infrastructure",
    "start": "1145090",
    "end": "1147789"
  },
  {
    "text": "that we're running on so things like dis",
    "start": "1147789",
    "end": "1150730"
  },
  {
    "text": "contention and bandwidth generally are",
    "start": "1150730",
    "end": "1152649"
  },
  {
    "text": "accounted for much better at the node",
    "start": "1152649",
    "end": "1156120"
  },
  {
    "text": "and what isn't isolated at nodes well",
    "start": "1156120",
    "end": "1160149"
  },
  {
    "text": "we've actually taken a step back in",
    "start": "1160149",
    "end": "1162010"
  },
  {
    "text": "network isolation at the pod level we",
    "start": "1162010",
    "end": "1165039"
  },
  {
    "text": "were able to use network policy to",
    "start": "1165039",
    "end": "1168029"
  },
  {
    "text": "firewall off the network from the pod",
    "start": "1168029",
    "end": "1171090"
  },
  {
    "text": "but pod security or sorry network policy",
    "start": "1171090",
    "end": "1174370"
  },
  {
    "text": "applies to pods and not to nodes we",
    "start": "1174370",
    "end": "1178570"
  },
  {
    "text": "could use firewalls",
    "start": "1178570",
    "end": "1181159"
  },
  {
    "text": "than our infrastructure and set up our",
    "start": "1181159",
    "end": "1183019"
  },
  {
    "text": "network in such a way to file off nodes",
    "start": "1183019",
    "end": "1185059"
  },
  {
    "text": "but this is hard to do because pods tend",
    "start": "1185059",
    "end": "1187669"
  },
  {
    "text": "to move around to different nodes and so",
    "start": "1187669",
    "end": "1192409"
  },
  {
    "text": "it's generally not done additionally",
    "start": "1192409",
    "end": "1196549"
  },
  {
    "text": "even if we firewalled off the network",
    "start": "1196549",
    "end": "1199899"
  },
  {
    "text": "nodes have access to a lot of metadata",
    "start": "1199899",
    "end": "1202940"
  },
  {
    "text": "about the cluster the cubelet can list",
    "start": "1202940",
    "end": "1204799"
  },
  {
    "text": "all pods running in the network or",
    "start": "1204799",
    "end": "1206359"
  },
  {
    "text": "running in the cluster and the the",
    "start": "1206359",
    "end": "1211099"
  },
  {
    "text": "cubelet needs access to a number of",
    "start": "1211099",
    "end": "1212749"
  },
  {
    "text": "other things like pod credentials and",
    "start": "1212749",
    "end": "1214909"
  },
  {
    "text": "secrets also in addition to the cubelets",
    "start": "1214909",
    "end": "1218119"
  },
  {
    "text": "resources we also have access to every",
    "start": "1218119",
    "end": "1220249"
  },
  {
    "text": "credential used by every workload on",
    "start": "1220249",
    "end": "1222739"
  },
  {
    "text": "that node and all of the permissions",
    "start": "1222739",
    "end": "1224989"
  },
  {
    "text": "associated with those credentials so",
    "start": "1224989",
    "end": "1228470"
  },
  {
    "text": "let's look at an example of that here's",
    "start": "1228470",
    "end": "1231470"
  },
  {
    "text": "a simple setup I have two nodes two pods",
    "start": "1231470",
    "end": "1234169"
  },
  {
    "text": "two secrets to make it easy to remember",
    "start": "1234169",
    "end": "1236629"
  },
  {
    "text": "pod one mounts secret one and runs on",
    "start": "1236629",
    "end": "1239749"
  },
  {
    "text": "node one same with pod two so let's SSH",
    "start": "1239749",
    "end": "1244639"
  },
  {
    "text": "into node one and see what we can do",
    "start": "1244639",
    "end": "1246849"
  },
  {
    "text": "using the the cubelet config and the",
    "start": "1246849",
    "end": "1250669"
  },
  {
    "text": "cubelet credentials I can use cube",
    "start": "1250669",
    "end": "1252289"
  },
  {
    "text": "cuttle as I normally would but acting as",
    "start": "1252289",
    "end": "1256190"
  },
  {
    "text": "the nude the cubelet identity so we can",
    "start": "1256190",
    "end": "1259399"
  },
  {
    "text": "see that I can list all pods and let's",
    "start": "1259399",
    "end": "1262849"
  },
  {
    "text": "take a closer look at pod one as I",
    "start": "1262849",
    "end": "1265580"
  },
  {
    "text": "mentioned it mounts secret one and runs",
    "start": "1265580",
    "end": "1268159"
  },
  {
    "text": "on node one because I am because the",
    "start": "1268159",
    "end": "1274129"
  },
  {
    "text": "cubelet needs to be able to access the",
    "start": "1274129",
    "end": "1276019"
  },
  {
    "text": "secrets in order to mount that secret",
    "start": "1276019",
    "end": "1278659"
  },
  {
    "text": "into the pod we can see that the cubelet",
    "start": "1278659",
    "end": "1281119"
  },
  {
    "text": "in fact does have access to that secret",
    "start": "1281119",
    "end": "1283779"
  },
  {
    "text": "now let's take a look at pod two",
    "start": "1283779",
    "end": "1286960"
  },
  {
    "text": "similarly pod two mounts secret two runs",
    "start": "1286960",
    "end": "1290090"
  },
  {
    "text": "on node two remember I'm still running",
    "start": "1290090",
    "end": "1292999"
  },
  {
    "text": "as node one node one doesn't need access",
    "start": "1292999",
    "end": "1295460"
  },
  {
    "text": "to secret two assuming there aren't any",
    "start": "1295460",
    "end": "1298249"
  },
  {
    "text": "other pods running on node one that",
    "start": "1298249",
    "end": "1300590"
  },
  {
    "text": "mount that secret so we see that if I",
    "start": "1300590",
    "end": "1303710"
  },
  {
    "text": "try and get secret - actually I'm",
    "start": "1303710",
    "end": "1305960"
  },
  {
    "text": "forbidden from doing so and the reason",
    "start": "1305960",
    "end": "1310070"
  },
  {
    "text": "this works is because of the node",
    "start": "1310070",
    "end": "1312619"
  },
  {
    "text": "authorizer and node restriction plugins",
    "start": "1312619",
    "end": "1315460"
  },
  {
    "text": "these plugins maintain a graph of all of",
    "start": "1315460",
    "end": "1319369"
  },
  {
    "text": "the resources that are referenced by",
    "start": "1319369",
    "end": "1321080"
  },
  {
    "text": "every workload running on a node and",
    "start": "1321080",
    "end": "1323229"
  },
  {
    "text": "restrict access to to the resources that",
    "start": "1323229",
    "end": "1327559"
  },
  {
    "text": "the node doesn't actually need access to",
    "start": "1327559",
    "end": "1329710"
  },
  {
    "text": "this was introduced in kubernetes 1 7",
    "start": "1329710",
    "end": "1332629"
  },
  {
    "text": "and we've been making improvements to it",
    "start": "1332629",
    "end": "1334940"
  },
  {
    "text": "since then further scoping down what the",
    "start": "1334940",
    "end": "1337849"
  },
  {
    "text": "node can do and ways that it can steer",
    "start": "1337849",
    "end": "1339739"
  },
  {
    "text": "pods to itself in order to gain access",
    "start": "1339739",
    "end": "1342589"
  },
  {
    "text": "to things that those pods need now I",
    "start": "1342589",
    "end": "1346789"
  },
  {
    "text": "want to just take a quick aside here and",
    "start": "1346789",
    "end": "1348589"
  },
  {
    "text": "talk about sandbox isolation which is a",
    "start": "1348589",
    "end": "1350629"
  },
  {
    "text": "feature that I've been working on and",
    "start": "1350629",
    "end": "1352009"
  },
  {
    "text": "I'm pretty excited about the goal of",
    "start": "1352009",
    "end": "1356089"
  },
  {
    "text": "sandbox isolation is to bring the second",
    "start": "1356089",
    "end": "1358789"
  },
  {
    "text": "security boundary and a lot of the",
    "start": "1358789",
    "end": "1360409"
  },
  {
    "text": "things we just talked about around node",
    "start": "1360409",
    "end": "1361909"
  },
  {
    "text": "isolation and bring them to the pod",
    "start": "1361909",
    "end": "1363950"
  },
  {
    "text": "level so in some ways this is actually",
    "start": "1363950",
    "end": "1366019"
  },
  {
    "text": "even better than note isolation right",
    "start": "1366019",
    "end": "1367820"
  },
  {
    "text": "because we talked about how at the node",
    "start": "1367820",
    "end": "1369649"
  },
  {
    "text": "level we took a step back in the network",
    "start": "1369649",
    "end": "1372879"
  },
  {
    "text": "isolation by applying a sandbox to the",
    "start": "1372879",
    "end": "1375769"
  },
  {
    "text": "pod we get a second security boundary at",
    "start": "1375769",
    "end": "1377989"
  },
  {
    "text": "the pod and can still maintain that",
    "start": "1377989",
    "end": "1379639"
  },
  {
    "text": "network isolation and the way we are",
    "start": "1379639",
    "end": "1382759"
  },
  {
    "text": "doing this is with technologies like G",
    "start": "1382759",
    "end": "1386179"
  },
  {
    "text": "Weiser and kata containers that bring",
    "start": "1386179",
    "end": "1388519"
  },
  {
    "text": "kind of VM strength isolation and apply",
    "start": "1388519",
    "end": "1391190"
  },
  {
    "text": "it at the pod level so this isn't",
    "start": "1391190",
    "end": "1394549"
  },
  {
    "text": "increasing sanba or sorry container",
    "start": "1394549",
    "end": "1396649"
  },
  {
    "text": "isolation but it's applying a new",
    "start": "1396649",
    "end": "1398869"
  },
  {
    "text": "sandbox to the pod I'm gonna do it on",
    "start": "1398869",
    "end": "1404539"
  },
  {
    "text": "time alright so let's talk about",
    "start": "1404539",
    "end": "1408619"
  },
  {
    "text": "clusters now so up until now we've been",
    "start": "1408619",
    "end": "1411830"
  },
  {
    "text": "talking about things running within the",
    "start": "1411830",
    "end": "1414200"
  },
  {
    "text": "cluster and what what is isolated once",
    "start": "1414200",
    "end": "1417919"
  },
  {
    "text": "you already have access within the",
    "start": "1417919",
    "end": "1419299"
  },
  {
    "text": "cluster at the cluster level we now have",
    "start": "1419299",
    "end": "1422269"
  },
  {
    "text": "an exterior boundary so the first thing",
    "start": "1422269",
    "end": "1425239"
  },
  {
    "text": "we add in cluster isolation is this",
    "start": "1425239",
    "end": "1427330"
  },
  {
    "text": "network perimeter it's now possible to",
    "start": "1427330",
    "end": "1430399"
  },
  {
    "text": "firewall off the cluster in a much more",
    "start": "1430399",
    "end": "1433580"
  },
  {
    "text": "fine-grained way or even to air-gap the",
    "start": "1433580",
    "end": "1436249"
  },
  {
    "text": "cluster completely in extreme scenarios",
    "start": "1436249",
    "end": "1439690"
  },
  {
    "text": "we also have a separate control plane",
    "start": "1439690",
    "end": "1442389"
  },
  {
    "text": "this means",
    "start": "1442389",
    "end": "1443789"
  },
  {
    "text": "possible to have a completely separate",
    "start": "1443789",
    "end": "1446220"
  },
  {
    "text": "identities and access controls for each",
    "start": "1446220",
    "end": "1448200"
  },
  {
    "text": "cluster and a separate data store means",
    "start": "1448200",
    "end": "1451830"
  },
  {
    "text": "that a compromise of the cluster will",
    "start": "1451830",
    "end": "1454289"
  },
  {
    "text": "still be limited to the scope of that",
    "start": "1454289",
    "end": "1456570"
  },
  {
    "text": "cluster so now we have full-on",
    "start": "1456570",
    "end": "1461039"
  },
  {
    "text": "kubernetes security totally separate",
    "start": "1461039",
    "end": "1463409"
  },
  {
    "text": "clusters are we done",
    "start": "1463409",
    "end": "1466100"
  },
  {
    "text": "spoilers I already said we have but one",
    "start": "1466100",
    "end": "1468659"
  },
  {
    "text": "more layer to talk about so what isn't",
    "start": "1468659",
    "end": "1471090"
  },
  {
    "text": "isolated at the cluster level",
    "start": "1471090",
    "end": "1473899"
  },
  {
    "text": "well this at this point it really",
    "start": "1473899",
    "end": "1476669"
  },
  {
    "text": "depends on your setup where are you",
    "start": "1476669",
    "end": "1478859"
  },
  {
    "text": "running your cluster if you are running",
    "start": "1478859",
    "end": "1481019"
  },
  {
    "text": "in google kubernetes engine your",
    "start": "1481019",
    "end": "1485009"
  },
  {
    "text": "security model at this point is going to",
    "start": "1485009",
    "end": "1487049"
  },
  {
    "text": "look very different than if you're",
    "start": "1487049",
    "end": "1488279"
  },
  {
    "text": "running on bare metal in your own data",
    "start": "1488279",
    "end": "1491309"
  },
  {
    "text": "center so the questions you need to ask",
    "start": "1491309",
    "end": "1494070"
  },
  {
    "text": "are what other resources are exposed on",
    "start": "1494070",
    "end": "1496979"
  },
  {
    "text": "the network what other services are",
    "start": "1496979",
    "end": "1499679"
  },
  {
    "text": "exposed if you're running in the cloud",
    "start": "1499679",
    "end": "1501769"
  },
  {
    "text": "how are acts how is access to those",
    "start": "1501769",
    "end": "1505080"
  },
  {
    "text": "services authorized and do nodes in your",
    "start": "1505080",
    "end": "1508679"
  },
  {
    "text": "cluster for instance have access to",
    "start": "1508679",
    "end": "1510989"
  },
  {
    "text": "those cloud services and so this brings",
    "start": "1510989",
    "end": "1515609"
  },
  {
    "text": "us to the the final layer here the",
    "start": "1515609",
    "end": "1518639"
  },
  {
    "text": "infrastructure layer and I can't say too",
    "start": "1518639",
    "end": "1521519"
  },
  {
    "text": "much about this because again it really",
    "start": "1521519",
    "end": "1523889"
  },
  {
    "text": "depends on where you're running and what",
    "start": "1523889",
    "end": "1525840"
  },
  {
    "text": "your setup is but it's just kind of",
    "start": "1525840",
    "end": "1531149"
  },
  {
    "text": "comes back to these two questions of",
    "start": "1531149",
    "end": "1533359"
  },
  {
    "text": "understanding what's what else is",
    "start": "1533359",
    "end": "1535859"
  },
  {
    "text": "exposed on your network in the data",
    "start": "1535859",
    "end": "1537960"
  },
  {
    "text": "center do you have other workloads",
    "start": "1537960",
    "end": "1539369"
  },
  {
    "text": "running outside of kubernetes that might",
    "start": "1539369",
    "end": "1541830"
  },
  {
    "text": "be might be running in an",
    "start": "1541830",
    "end": "1544320"
  },
  {
    "text": "unauthenticated way that attacker could",
    "start": "1544320",
    "end": "1547259"
  },
  {
    "text": "exploit from a cluster and we've",
    "start": "1547259",
    "end": "1549720"
  },
  {
    "text": "actually seen we've seen examples of",
    "start": "1549720",
    "end": "1551940"
  },
  {
    "text": "this so to recap we started out at the",
    "start": "1551940",
    "end": "1557639"
  },
  {
    "text": "container level talking about some",
    "start": "1557639",
    "end": "1560759"
  },
  {
    "text": "resource isolation that we get and a",
    "start": "1560759",
    "end": "1564029"
  },
  {
    "text": "number of kernel security features that",
    "start": "1564029",
    "end": "1566099"
  },
  {
    "text": "hard in that container isolation",
    "start": "1566099",
    "end": "1567720"
  },
  {
    "text": "boundary at the pod level we add in",
    "start": "1567720",
    "end": "1570749"
  },
  {
    "text": "network isolation and a little bit more",
    "start": "1570749",
    "end": "1572940"
  },
  {
    "text": "resource isolation with kubernetes",
    "start": "1572940",
    "end": "1576690"
  },
  {
    "text": "namespace",
    "start": "1576690",
    "end": "1577410"
  },
  {
    "text": "we get stronger control plane isolation",
    "start": "1577410",
    "end": "1579780"
  },
  {
    "text": "and then at the node level we finally",
    "start": "1579780",
    "end": "1582900"
  },
  {
    "text": "add in a second security boundary much",
    "start": "1582900",
    "end": "1585900"
  },
  {
    "text": "stronger resource isolation and better",
    "start": "1585900",
    "end": "1589110"
  },
  {
    "text": "data isolation as well with the cluster",
    "start": "1589110",
    "end": "1592980"
  },
  {
    "text": "level we have stronger network isolation",
    "start": "1592980",
    "end": "1596250"
  },
  {
    "text": "still separate control planes and",
    "start": "1596250",
    "end": "1599370"
  },
  {
    "text": "separate authorization mechanisms mean",
    "start": "1599370",
    "end": "1603210"
  },
  {
    "text": "better control plane isolation and data",
    "start": "1603210",
    "end": "1607770"
  },
  {
    "text": "access that comes with that and then",
    "start": "1607770",
    "end": "1609900"
  },
  {
    "text": "finally at the infrastructure level this",
    "start": "1609900",
    "end": "1612210"
  },
  {
    "text": "is really as good as it gets",
    "start": "1612210",
    "end": "1616880"
  },
  {
    "text": "pause here for a second",
    "start": "1618140",
    "end": "1621920"
  },
  {
    "text": "so in conclusion which layer should you",
    "start": "1623150",
    "end": "1626640"
  },
  {
    "text": "design your application for which layer",
    "start": "1626640",
    "end": "1630720"
  },
  {
    "text": "should you plan on having isolation at",
    "start": "1630720",
    "end": "1632430"
  },
  {
    "text": "I'm not suggesting that every workload",
    "start": "1632430",
    "end": "1636240"
  },
  {
    "text": "should be in its own cluster in its own",
    "start": "1636240",
    "end": "1638070"
  },
  {
    "text": "data center that would be absurd very",
    "start": "1638070",
    "end": "1642180"
  },
  {
    "text": "expensive and hard to design and defeat",
    "start": "1642180",
    "end": "1644490"
  },
  {
    "text": "the purpose of kubernetes completely so",
    "start": "1644490",
    "end": "1647310"
  },
  {
    "text": "the answer here is really that actually",
    "start": "1647310",
    "end": "1649140"
  },
  {
    "text": "only you can answer this sorry it's sort",
    "start": "1649140",
    "end": "1651060"
  },
  {
    "text": "of a non answer but near your threat",
    "start": "1651060",
    "end": "1653490"
  },
  {
    "text": "model understand what kinds of data",
    "start": "1653490",
    "end": "1655560"
  },
  {
    "text": "you're trying to protect who your",
    "start": "1655560",
    "end": "1657390"
  },
  {
    "text": "attackers are and sort of way the way",
    "start": "1657390",
    "end": "1662970"
  },
  {
    "text": "the trade-offs of the cost of adding in",
    "start": "1662970",
    "end": "1666270"
  },
  {
    "text": "more isolation and the complexity versus",
    "start": "1666270",
    "end": "1669000"
  },
  {
    "text": "the ease of relying more on just the",
    "start": "1669000",
    "end": "1673350"
  },
  {
    "text": "native kubernetes primitives so that's",
    "start": "1673350",
    "end": "1677670"
  },
  {
    "text": "what I have for you today thank you",
    "start": "1677670",
    "end": "1679610"
  },
  {
    "text": "here's a few resources to learn more and",
    "start": "1679610",
    "end": "1683390"
  },
  {
    "text": "looks like we have a couple minutes for",
    "start": "1683390",
    "end": "1685530"
  },
  {
    "text": "questions",
    "start": "1685530",
    "end": "1688190"
  },
  {
    "text": "[Applause]",
    "start": "1692180",
    "end": "1697059"
  },
  {
    "text": "anyone well if you would like to chat",
    "start": "1700570",
    "end": "1706310"
  },
  {
    "text": "afterwards I'll be around and we'd love",
    "start": "1706310",
    "end": "1708680"
  },
  {
    "text": "to answer your questions and talk more",
    "start": "1708680",
    "end": "1711170"
  },
  {
    "text": "about this thank you",
    "start": "1711170",
    "end": "1714760"
  },
  {
    "text": "[Applause]",
    "start": "1714980",
    "end": "1718819"
  }
]