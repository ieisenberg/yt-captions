[
  {
    "text": "hello everybody uh thank you for joining this talk uh this talk consist of two part in",
    "start": "399",
    "end": "9920"
  },
  {
    "text": "the first part I would like to talk about the security mainly security",
    "start": "9920",
    "end": "15000"
  },
  {
    "text": "features that latest KY CL supported also try to support in the",
    "start": "15000",
    "end": "22199"
  },
  {
    "text": "future then in the second part the Thomas will demonstrate the potential",
    "start": "22199",
    "end": "30800"
  },
  {
    "text": "integration of ke with open policy agent so let's start my",
    "start": "30800",
    "end": "38760"
  },
  {
    "text": "part okay uh before my talk let me introduce",
    "start": "38760",
    "end": "45280"
  },
  {
    "text": "myself to you briefly my name is Takashi noru the key Mainer and also working",
    "start": "45280",
    "end": "53760"
  },
  {
    "text": "atachi limited Japan I have been contributing mainly C",
    "start": "53760",
    "end": "60480"
  },
  {
    "text": "fatures to K gr for example the WCC web cation API support and some the",
    "start": "60480",
    "end": "69280"
  },
  {
    "text": "supporting or complying with the RFC standard documentation specification and",
    "start": "69280",
    "end": "75799"
  },
  {
    "text": "also all to based apt profile support to",
    "start": "75799",
    "end": "81759"
  },
  {
    "text": "keyr as follows uh as you may know the key clock",
    "start": "81759",
    "end": "89680"
  },
  {
    "text": "is identity and access management open source",
    "start": "89680",
    "end": "95040"
  },
  {
    "text": "software also the cncf incubating project since since last",
    "start": "95040",
    "end": "103119"
  },
  {
    "text": "year Theo provides the each each Futures and also supporting the sever open",
    "start": "103119",
    "end": "111479"
  },
  {
    "text": "standard for authentication and",
    "start": "111479",
    "end": "117320"
  },
  {
    "text": "authorization and in my part I would like to talk about",
    "start": "118680",
    "end": "123719"
  },
  {
    "text": "the following items topics the pass keys or 2.1 and oid for",
    "start": "123719",
    "end": "134480"
  },
  {
    "text": "VCI so let's move on to the first topic Pass",
    "start": "134720",
    "end": "141840"
  },
  {
    "text": "key uh pass Keys allows us to auate",
    "start": "142640",
    "end": "148680"
  },
  {
    "text": "ourself uh without using password instead of using",
    "start": "148680",
    "end": "156360"
  },
  {
    "text": "password using the cryptographic key then there are two types of Pass Key",
    "start": "156360",
    "end": "165599"
  },
  {
    "text": "the sync Pass Key and device bound Pass Key also two types of",
    "start": "165599",
    "end": "174239"
  },
  {
    "text": "authentication the cross device authentication and same device",
    "start": "174239",
    "end": "181840"
  },
  {
    "text": "authentication so the K 23 starts supporting these passy authentication",
    "start": "181879",
    "end": "191640"
  },
  {
    "text": "features however the from technological point of",
    "start": "192280",
    "end": "198799"
  },
  {
    "text": "view the py authentication is the same the LLY the same as web a",
    "start": "198799",
    "end": "207519"
  },
  {
    "text": "authentication that key had already uh start supported since the",
    "start": "207519",
    "end": "214640"
  },
  {
    "text": "version n but nowadays the it seems that P key",
    "start": "214640",
    "end": "221480"
  },
  {
    "text": "authentication are common now because the p key authentication are supported",
    "start": "221480",
    "end": "228519"
  },
  {
    "text": "by the maure uh sever measure platforms as",
    "start": "228519",
    "end": "233799"
  },
  {
    "text": "follows so just as just mentioned before the there are two type of Pass Key sync",
    "start": "236360",
    "end": "243519"
  },
  {
    "text": "Pass Key and device B Pass key uh the device bound Pass key is uh",
    "start": "243519",
    "end": "251280"
  },
  {
    "text": "bound with your the own device single device why the single Pass key is bound",
    "start": "251280",
    "end": "259919"
  },
  {
    "text": "with your major IDP identity providers the user account for example the Google",
    "start": "259919",
    "end": "268919"
  },
  {
    "text": "account and app ID so therefore the youth can share past SLE Pass Key among",
    "start": "268919",
    "end": "277479"
  },
  {
    "text": "your own s devices by using the cloud services",
    "start": "277479",
    "end": "283960"
  },
  {
    "text": "synchronization for example the Google password manager and up iCloud",
    "start": "283960",
    "end": "292360"
  },
  {
    "text": "keychain also as just mentioned before there are two type of Authentication",
    "start": "293240",
    "end": "301639"
  },
  {
    "text": "same device ofation and cross device",
    "start": "301639",
    "end": "307039"
  },
  {
    "text": "ofation and let's assume that you use your PC and try to auate yourself to the",
    "start": "307039",
    "end": "316360"
  },
  {
    "text": "auen server with Pass key in same device",
    "start": "316360",
    "end": "322080"
  },
  {
    "text": "auen you need to use the pass key created and installed onto your",
    "start": "322080",
    "end": "328639"
  },
  {
    "text": "PC while in Clos by cation you need you",
    "start": "328639",
    "end": "334319"
  },
  {
    "text": "can use the pass key created and installed onto your smart",
    "start": "334319",
    "end": "340240"
  },
  {
    "text": "device uh not necessarily the ones created and installed on your",
    "start": "340240",
    "end": "347400"
  },
  {
    "text": "PC then the before you using passation in ke gr you need to register your pass",
    "start": "347919",
    "end": "357319"
  },
  {
    "text": "key in advance after that the key clock",
    "start": "357319",
    "end": "362600"
  },
  {
    "text": "provides uh two options for our sensation password address",
    "start": "362600",
    "end": "368400"
  },
  {
    "text": "authentication and login L authentication in password address",
    "start": "368400",
    "end": "375720"
  },
  {
    "text": "authentication you need to input your identity information on TI for example",
    "start": "375720",
    "end": "383000"
  },
  {
    "text": "the username or email address and so on after that you use your pass key to at",
    "start": "383000",
    "end": "390800"
  },
  {
    "text": "yourself while in liness authentication you only simply use your",
    "start": "390800",
    "end": "397400"
  },
  {
    "text": "pass key to auate yourself to key gr so the next the thas will demonstrate",
    "start": "397400",
    "end": "406240"
  },
  {
    "text": "the key grity registration and authentication yeah thank you Takashi so",
    "start": "406240",
    "end": "412880"
  },
  {
    "text": "then let's move on to our first demo um second for this I prepared a",
    "start": "412880",
    "end": "420240"
  },
  {
    "text": "realm here and we have a user Who currently has only a password set yeah",
    "start": "420240",
    "end": "426000"
  },
  {
    "text": "so now let's uh open up an application and login as that",
    "start": "426000",
    "end": "431319"
  },
  {
    "text": "user so you see now we see the new uh account uh s Service account management",
    "start": "431319",
    "end": "436759"
  },
  {
    "text": "console provided by keylo and if you go to the bottom we can now say oh please",
    "start": "436759",
    "end": "442039"
  },
  {
    "text": "register a pass key here and this leads us to the following screen where the user can now click on register and then",
    "start": "442039",
    "end": "449560"
  },
  {
    "text": "then the browser native dialogue will pop up I could now register a pass key",
    "start": "449560",
    "end": "454759"
  },
  {
    "text": "via my phone for this I needed to enable Bluetooth but unfortunately my fingerprint sensor just broke two days",
    "start": "454759",
    "end": "460800"
  },
  {
    "text": "ago so I will use a different method so here I can could scan this QR code or I",
    "start": "460800",
    "end": "467639"
  },
  {
    "text": "can now use my UB key that I installed in the system which I now touch and uh if everything works well",
    "start": "467639",
    "end": "475759"
  },
  {
    "text": "yeah should be detected the U key could be named somehow whatever and now my web",
    "start": "475759",
    "end": "482159"
  },
  {
    "text": "authenticator or passwordless authenticator mechanism is registered if I now log",
    "start": "482159",
    "end": "487319"
  },
  {
    "text": "out um and provide the username information again um I get first",
    "start": "487319",
    "end": "493639"
  },
  {
    "text": "prompted with the password but I now can select try another way and now we say pass key sign in Pass Key and do the",
    "start": "493639",
    "end": "501039"
  },
  {
    "text": "same thing as before and in this case I press the UB key authenticator again and",
    "start": "501039",
    "end": "507759"
  },
  {
    "text": "now I'm signed it but we want to have truly passwordless right so for this I now go to the user and just delete the",
    "start": "507759",
    "end": "517360"
  },
  {
    "text": "password by the way if you know the crypto crypto keys for the passwordless",
    "start": "517360",
    "end": "522839"
  },
  {
    "text": "devices that you give to uh your users you can register that via API and remove the password and completely start",
    "start": "522839",
    "end": "529240"
  },
  {
    "text": "password L from the go go so if I now click on sign in it just asks me for my",
    "start": "529240",
    "end": "534880"
  },
  {
    "text": "pass key which I can then provide in the same way and and if I hit the right spot",
    "start": "534880",
    "end": "541120"
  },
  {
    "text": "I'm locked in without a password and it's that easy so with that said let's get back to",
    "start": "541120",
    "end": "549240"
  },
  {
    "text": "the presentation and over to you thank you so just get back to my",
    "start": "549240",
    "end": "557760"
  },
  {
    "text": "presentation uh next topic is O 2.21 authorization",
    "start": "557760",
    "end": "564920"
  },
  {
    "text": "framework uh o 2.1 is next version of o 2 .0 authorization framework defined by RC",
    "start": "564920",
    "end": "574839"
  },
  {
    "text": "649 and 650 the O 2.1 is still the internet",
    "start": "574839",
    "end": "581800"
  },
  {
    "text": "draft version but however the O 2.1 hardens the security aspect of existing",
    "start": "581800",
    "end": "589920"
  },
  {
    "text": "o 2.0 authorization framework then the key 24 start",
    "start": "589920",
    "end": "596800"
  },
  {
    "text": "supporting this o 2.1 then the O 2.1 provides the several the",
    "start": "596800",
    "end": "605800"
  },
  {
    "text": "security features that today I'd like to pick up one of them the preventing",
    "start": "605800",
    "end": "612920"
  },
  {
    "text": "misuse of stor and access token so let's",
    "start": "612920",
    "end": "618000"
  },
  {
    "text": "assure that you use your client application and use the key CR as",
    "start": "618000",
    "end": "624120"
  },
  {
    "text": "authorization server the both follows the O 2.0",
    "start": "624120",
    "end": "629880"
  },
  {
    "text": "then the your curent application receives an access token from Key then an attacker steals your access",
    "start": "629880",
    "end": "639519"
  },
  {
    "text": "token and try to accend an API with this access token then this access will",
    "start": "639519",
    "end": "649839"
  },
  {
    "text": "succeed because the O 2.0 defines an access token as Bara",
    "start": "649839",
    "end": "657360"
  },
  {
    "text": "token the bar token allows everybody holding an access token can use an",
    "start": "657360",
    "end": "665200"
  },
  {
    "text": "access token the therefore not holding other current applications access token can use this",
    "start": "665200",
    "end": "673600"
  },
  {
    "text": "access token to prevent this misuse of this",
    "start": "673600",
    "end": "679720"
  },
  {
    "text": "access token o 2.0 S O",
    "start": "679720",
    "end": "684880"
  },
  {
    "text": "2.1 allows us to make an access token",
    "start": "684880",
    "end": "690480"
  },
  {
    "text": "the cender constraint token the cender constraint token only",
    "start": "690480",
    "end": "696800"
  },
  {
    "text": "allows a legitimate client application to use this access token for accessing",
    "start": "696800",
    "end": "704720"
  },
  {
    "text": "apis and so therefore nataka that steals other gr application success token",
    "start": "704720",
    "end": "711639"
  },
  {
    "text": "cannot use this success toen then the o",
    "start": "711639",
    "end": "716800"
  },
  {
    "text": "one that provide two options for realizing this H Center constraint",
    "start": "716800",
    "end": "723160"
  },
  {
    "text": "access token the first option is RFC h705 or2",
    "start": "723160",
    "end": "730200"
  },
  {
    "text": "mtls and second option is RFC 9449 as to demonstrating Prof position called",
    "start": "730200",
    "end": "738720"
  },
  {
    "text": "deop then the KY had already supported this option one and the K newly",
    "start": "738720",
    "end": "746240"
  },
  {
    "text": "supported the option two deop uh since the version",
    "start": "746240",
    "end": "752720"
  },
  {
    "text": "23 and the deop might be uh suitable for the public client application while the",
    "start": "752720",
    "end": "760320"
  },
  {
    "text": "option one o smts is might be suitable for confidential client",
    "start": "760320",
    "end": "768440"
  },
  {
    "text": "application then finally I'd like to talk about the emerging Paradigm of",
    "start": "768519",
    "end": "774560"
  },
  {
    "text": "identity management to T",
    "start": "774560",
    "end": "780040"
  },
  {
    "text": "so as you might hear the word or concept self B",
    "start": "780040",
    "end": "786120"
  },
  {
    "text": "identity uh called SSI in the SSI instead of the major the",
    "start": "786120",
    "end": "793639"
  },
  {
    "text": "identity provider the subject itself can manage and control their identity",
    "start": "793639",
    "end": "800839"
  },
  {
    "text": "information and any kind of their attributes to realize this SSI the this",
    "start": "800839",
    "end": "809160"
  },
  {
    "text": "de centralized ID D ID uh might be the viable",
    "start": "809160",
    "end": "815600"
  },
  {
    "text": "option to realize this D that there are several uh open",
    "start": "815600",
    "end": "822199"
  },
  {
    "text": "standard the among them the world world Web Consortium publishes the vable",
    "start": "822199",
    "end": "830480"
  },
  {
    "text": "credentials data model [Music] B2 uh in this data model uh this data",
    "start": "830480",
    "end": "838440"
  },
  {
    "text": "model dep mainly the major four loes is holder B",
    "start": "838440",
    "end": "844120"
  },
  {
    "text": "fire and subject holder might be called as wet the subject hold this fer and issue",
    "start": "844120",
    "end": "854320"
  },
  {
    "text": "uh provide the fer with veryable credential that include this subject",
    "start": "854320",
    "end": "860759"
  },
  {
    "text": "identity information and any kind of this subject the attributes after that the subject can",
    "start": "860759",
    "end": "869720"
  },
  {
    "text": "picked up the some of the claims included in this vable credentials to",
    "start": "869720",
    "end": "876839"
  },
  {
    "text": "create a new vable presentation then the holder present",
    "start": "876839",
    "end": "882519"
  },
  {
    "text": "this vable presentation to verier therefore in this model the",
    "start": "882519",
    "end": "887759"
  },
  {
    "text": "subject can uh control the which kind of user identity information and",
    "start": "887759",
    "end": "895279"
  },
  {
    "text": "attribute uh could be uh disclosed on onto which verify",
    "start": "895279",
    "end": "903000"
  },
  {
    "text": "application then there are several open standard to uh support this data",
    "start": "903279",
    "end": "910120"
  },
  {
    "text": "model now the key clock is focusing on the open ID connect extensions among",
    "start": "910120",
    "end": "917560"
  },
  {
    "text": "them to say more precisely the T committee is try to support open ID for",
    "start": "917560",
    "end": "925040"
  },
  {
    "text": "bable credentials insurance for oid for BCI to key gr the key gr committee now",
    "start": "925040",
    "end": "933800"
  },
  {
    "text": "try to uh make key gr as an issue in this data model and therefore K need to",
    "start": "933800",
    "end": "941160"
  },
  {
    "text": "support this y4 VCI then uh so the motivation for this",
    "start": "941160",
    "end": "948519"
  },
  {
    "text": "work is that European commission published the documentation European",
    "start": "948519",
    "end": "954120"
  },
  {
    "text": "digital identity water differance framework uh this framework describ that",
    "start": "954120",
    "end": "960279"
  },
  {
    "text": "id4 BCI must be implemented by nure In This framework so if K can support the",
    "start": "960279",
    "end": "967959"
  },
  {
    "text": "yd4 BCI then we can use kro as an initi in this framework in",
    "start": "967959",
    "end": "977000"
  },
  {
    "text": "EU so the such kind of the activity for supporting or4 VCI or 2.1 pass",
    "start": "978560",
    "end": "989639"
  },
  {
    "text": "were mainly conducted by o s the key",
    "start": "989639",
    "end": "994839"
  },
  {
    "text": "cross community activity uh if you are interested in",
    "start": "994839",
    "end": "1000759"
  },
  {
    "text": "this activity I would be we would be very happy if you join this",
    "start": "1000759",
    "end": "1007199"
  },
  {
    "text": "activity then that's all for my part thank you very much for your listening the",
    "start": "1007199",
    "end": "1014040"
  },
  {
    "text": "next thanks Takashi so now let's move on with",
    "start": "1017839",
    "end": "1024959"
  },
  {
    "text": "the second part and we keep it brief and I show Mostly My Demo so it's about",
    "start": "1024959",
    "end": "1030720"
  },
  {
    "text": "flexible authorization with keycloak my name is Thomas uh I currently work for consultancy called concentric I also",
    "start": "1030720",
    "end": "1038280"
  },
  {
    "text": "like sakashi I'm an official KL maintainer and I have been a k contributor for many many years and I'm",
    "start": "1038280",
    "end": "1045079"
  },
  {
    "text": "just a random nerd loving KL so like many of you probably also so if you already are using Klo for a",
    "start": "1045079",
    "end": "1052919"
  },
  {
    "text": "while you know that Klo authorization in Klo comes in many forms and shapes um",
    "start": "1052919",
    "end": "1058160"
  },
  {
    "text": "for instance we have Road based Access Control uh we are the roads that we can express in keylock on realm or client",
    "start": "1058160",
    "end": "1064720"
  },
  {
    "text": "level uh there are dedicated roles for doing specific things in the realm",
    "start": "1064720",
    "end": "1069880"
  },
  {
    "text": "management or with K rest apis we also have support for fine grained admin",
    "start": "1069880",
    "end": "1076640"
  },
  {
    "text": "permissions that give us more control over management of R resources like which uh member of a group can manage",
    "start": "1076640",
    "end": "1083559"
  },
  {
    "text": "other members of that same group or other groups and so on and that's all based on this authorization Services the",
    "start": "1083559",
    "end": "1090640"
  },
  {
    "text": "authorization services in klook is in fact its own subsystem for that allows you to form flexible Access Control",
    "start": "1090640",
    "end": "1097000"
  },
  {
    "text": "policies with a lot of buil-in rules with JavaScript support and also an SPI",
    "start": "1097000",
    "end": "1102159"
  },
  {
    "text": "that allows you to plug in your own custom logic however there are also some custom Community extensions available",
    "start": "1102159",
    "end": "1108080"
  },
  {
    "text": "that allow you to for instance restrict access to a client with standard Java code or JavaScript even or uh completely",
    "start": "1108080",
    "end": "1115440"
  },
  {
    "text": "with a declarative configuration approach right and the following I will also concentrate on that use case how",
    "start": "1115440",
    "end": "1120960"
  },
  {
    "text": "can we restrict access to certain applications from the kyl side already so uh for this I have a few requirements",
    "start": "1120960",
    "end": "1129280"
  },
  {
    "text": "for authorization uh for instance I want to be able to Define policies via code",
    "start": "1129280",
    "end": "1134320"
  },
  {
    "text": "for instance the set client access rules and I want to be able to validate and test those policies in the best case",
    "start": "1134320",
    "end": "1140240"
  },
  {
    "text": "even outside of keylo and also want to be able to change policies easily and to be able to trace and follow policy",
    "start": "1140240",
    "end": "1146520"
  },
  {
    "text": "decisions afterwards so question is how can we achieve that well one obvious",
    "start": "1146520",
    "end": "1152120"
  },
  {
    "text": "answer is of course open policy agent um that gives us these capabilities open",
    "start": "1152120",
    "end": "1157400"
  },
  {
    "text": "policy agent as many of you might probably know already uh is an open source policy engine written in go uh",
    "start": "1157400",
    "end": "1163320"
  },
  {
    "text": "that allows you to evaluate policies validate policies and supports various ways of transporting policies to the",
    "start": "1163320",
    "end": "1170200"
  },
  {
    "text": "actual evaluation like you can have a push or push configuration to an policy agent or you can pull configur to pull",
    "start": "1170200",
    "end": "1177120"
  },
  {
    "text": "information from a certain Source um this tool is mainly developed by a company called styra Inc and is also a",
    "start": "1177120",
    "end": "1183679"
  },
  {
    "text": "cncf project and uh propagates a model of writing policies as code which",
    "start": "1183679",
    "end": "1191039"
  },
  {
    "text": "enables us to write our complete authorization logic as plain source code as we are used to instead of configuring",
    "start": "1191039",
    "end": "1197240"
  },
  {
    "text": "it with some options on a UI or something like that yeah this gives us the possibility to version of our policy",
    "start": "1197240",
    "end": "1203440"
  },
  {
    "text": "code lint it test it reflector it audit it and run it in the end in order to do this uh they provide a dedicated",
    "start": "1203440",
    "end": "1210280"
  },
  {
    "text": "declarative policy language called Rigo in which you would model your access logic which I will show you in a second",
    "start": "1210280",
    "end": "1217120"
  },
  {
    "text": "uh there are multiple usage options for policy agent you can use it as a library in your go Application if you have an",
    "start": "1217120",
    "end": "1223080"
  },
  {
    "text": "heav or the most common use case is to run it as a side car along your application let's say speak with it via",
    "start": "1223080",
    "end": "1229559"
  },
  {
    "text": "HP or grpc interfaces how does it work well you have your service your",
    "start": "1229559",
    "end": "1235200"
  },
  {
    "text": "application or whatever and you have Opa as a site car and whenever your service",
    "start": "1235200",
    "end": "1241039"
  },
  {
    "text": "receives a request an event or something like that that you want to authorize um this event uh this uh application with",
    "start": "1241039",
    "end": "1248200"
  },
  {
    "text": "through some kind of integration creates some kind of an access query or policy query in adjacent format this is then",
    "start": "1248200",
    "end": "1254480"
  },
  {
    "text": "sent to Opa and the OPA SAR has some information like the current policy",
    "start": "1254480",
    "end": "1260080"
  },
  {
    "text": "logic loaded into memory together with some data maybe but you could also Access Data from another other source",
    "start": "1260080",
    "end": "1267080"
  },
  {
    "text": "then the open policy agent will evaluate this access request and will get return and decision and this decision has to be",
    "start": "1267080",
    "end": "1274240"
  },
  {
    "text": "done enforced by your application like whether to you allow the access or not",
    "start": "1274240",
    "end": "1280200"
  },
  {
    "text": "so as I said um this is all backed by a declarative policy language um that is",
    "start": "1280200",
    "end": "1286559"
  },
  {
    "text": "more more or less inspired by uh language called Data lock and what you define there in this language is You",
    "start": "1286559",
    "end": "1293240"
  },
  {
    "text": "Define policies which are effectively collections of rules and a rule is effectively a a named collection of",
    "start": "1293240",
    "end": "1299799"
  },
  {
    "text": "conditions and conditions are of course boan expressions or arbitrary calculations that um form your form your",
    "start": "1299799",
    "end": "1306880"
  },
  {
    "text": "policy logic um there are some implicit variables available like you can refer to data that you receive in the access",
    "start": "1306880",
    "end": "1313400"
  },
  {
    "text": "request via input and you can access arbitary data that is available in open",
    "start": "1313400",
    "end": "1318600"
  },
  {
    "text": "policy agent via data um there are also many built-in functions for instance to decode a jot or pass Json or even check",
    "start": "1318600",
    "end": "1326480"
  },
  {
    "text": "whether an IP address is in a certain CER range yeah just to give you a brief impress impression how such a policy",
    "start": "1326480",
    "end": "1333679"
  },
  {
    "text": "looks like yeah this is Rego the Rego language and effectively says that we",
    "start": "1333679",
    "end": "1338880"
  },
  {
    "text": "have two rules here with the same name we have a default uh rule called allow which says fals by default we deny all",
    "start": "1338880",
    "end": "1345600"
  },
  {
    "text": "access and uh for specialization of of that we have a rule that okay we allow",
    "start": "1345600",
    "end": "1350799"
  },
  {
    "text": "access if the HTTP request is of method is get and the path is public somehow",
    "start": "1350799",
    "end": "1356520"
  },
  {
    "text": "yeah this are the conditions behind the rule here this and those conditions are all combined by n via The Logical",
    "start": "1356520",
    "end": "1363840"
  },
  {
    "text": "operator and by default so now the question is how can we do leverage that",
    "start": "1363840",
    "end": "1370120"
  },
  {
    "text": "uh in KL well the idea is we could use keyl as a so-called P which is a policy",
    "start": "1370120",
    "end": "1376720"
  },
  {
    "text": "enforcement point which basically forces the policy decision that gets presented",
    "start": "1376720",
    "end": "1381799"
  },
  {
    "text": "by Opa and opa serves as the so-called policy decision point so Opa has the logic and gets the access ques requests",
    "start": "1381799",
    "end": "1388960"
  },
  {
    "text": "and responds with uh yeah access allowed or denied uh responses and we would use",
    "start": "1388960",
    "end": "1395000"
  },
  {
    "text": "Rigo to Define access policies in ke but you will see this approach is not just limited to access control logic we",
    "start": "1395000",
    "end": "1402200"
  },
  {
    "text": "can also use that for implementing fine grain adment permissions yeah or allow",
    "start": "1402200",
    "end": "1407720"
  },
  {
    "text": "or reject identity brokering interactions or we could even use this as protocol meppers for our tokens or",
    "start": "1407720",
    "end": "1414080"
  },
  {
    "text": "sum artifacts yeah um and we can also manage access for custom endpoint and",
    "start": "1414080",
    "end": "1420120"
  },
  {
    "text": "but what I will focus on now is just implementing client access checks and for this we have the",
    "start": "1420120",
    "end": "1426799"
  },
  {
    "text": "following model uh we have our user who lives in a realm called Opa demo um in",
    "start": "1426799",
    "end": "1432840"
  },
  {
    "text": "klook that serves as a p klook is in this case equipped with an Opa extension",
    "start": "1432840",
    "end": "1438000"
  },
  {
    "text": "a small small extension that is written in Java and added to the KL server um",
    "start": "1438000",
    "end": "1444000"
  },
  {
    "text": "and GE will also contain a resource like our app that we want to access a client",
    "start": "1444000",
    "end": "1450159"
  },
  {
    "text": "and um yeah kyl is configured with this extension to be able to send access",
    "start": "1450159",
    "end": "1455919"
  },
  {
    "text": "queries to Opa and uh uh inter interpret the access decision afterwards so how",
    "start": "1455919",
    "end": "1462080"
  },
  {
    "text": "does it looks like so imagine um we have an Opa server running and we now want to",
    "start": "1462080",
    "end": "1469159"
  },
  {
    "text": "access a certain application in a realm uh then we would basically uh invoke a",
    "start": "1469159",
    "end": "1474279"
  },
  {
    "text": "URL um from on the OPA side um and this is So-Cal policy URL and with this",
    "start": "1474279",
    "end": "1481000"
  },
  {
    "text": "policy path we would basically um select which kind of excess logic we want to",
    "start": "1481000",
    "end": "1486440"
  },
  {
    "text": "execute and you see here I have this format realm policy and what kind of rule I want to intercept yeah and an",
    "start": "1486440",
    "end": "1493399"
  },
  {
    "text": "access policy effectively could look like this yeah by default we allow nothing",
    "start": "1493399",
    "end": "1499080"
  },
  {
    "text": "and in case we have a client with a client ID app uh we check whether the",
    "start": "1499080",
    "end": "1504679"
  },
  {
    "text": "current user has the current role access for that client if this is the case we allow access otherwise we deny it yeah",
    "start": "1504679",
    "end": "1512880"
  },
  {
    "text": "and uh yeah this is basically the interaction that we would have here we",
    "start": "1512880",
    "end": "1517919"
  },
  {
    "text": "have the input uh when we try to access the application we create the following the shape of a access query we",
    "start": "1517919",
    "end": "1525960"
  },
  {
    "text": "say the following subject with username test the user ID and this realm roles client roles and attributes wants to",
    "start": "1525960",
    "end": "1532440"
  },
  {
    "text": "access a resource of the current realm with the client ID app um and here are some addition metadata and open policy",
    "start": "1532440",
    "end": "1539880"
  },
  {
    "text": "agent will run that policy that I showed earlier and then result return a result exess allowed yes or no yeah that's is",
    "start": "1539880",
    "end": "1546919"
  },
  {
    "text": "and as a side effect it will also generate a So-Cal decision ID that allows me to track this exess decision",
    "start": "1546919",
    "end": "1554080"
  },
  {
    "text": "uh whether this was uh successful or not yeah so now enough slides now it's time",
    "start": "1554080",
    "end": "1559760"
  },
  {
    "text": "for a demo um here I have another key clo realm uh and if I log in to for",
    "start": "1559760",
    "end": "1568200"
  },
  {
    "text": "instance this application here with the user tester you see I can exit it straight away and it works as expected",
    "start": "1568200",
    "end": "1575440"
  },
  {
    "text": "now let's enable access checks so for this and there are many ways to implement this in this case I",
    "start": "1575440",
    "end": "1582279"
  },
  {
    "text": "use a required action which is executed whenever a browser interaction happens with a user uh whether is the is an",
    "start": "1582279",
    "end": "1588919"
  },
  {
    "text": "authenticated user or user or after authentication yeah just enable that and",
    "start": "1588919",
    "end": "1594159"
  },
  {
    "text": "if I try to access it again you see access denied so what happens under",
    "start": "1594159",
    "end": "1599960"
  },
  {
    "text": "underneath well uh the following access quy was basically issued and uh with the",
    "start": "1599960",
    "end": "1606480"
  },
  {
    "text": "given input policy query uh the following subject username tester with the following realm roles wants to",
    "start": "1606480",
    "end": "1613399"
  },
  {
    "text": "access the resource in this realm with the CL ID yeah and the user came from",
    "start": "1613399",
    "end": "1618760"
  },
  {
    "text": "this particular IP address with this protocol and whatever and the access decision was",
    "start": "1618760",
    "end": "1624279"
  },
  {
    "text": "false uh so why was this the case so if we look at the policy that sits behind",
    "start": "1624279",
    "end": "1630559"
  },
  {
    "text": "that we see that again by default our policy says allow false and now the the",
    "start": "1630559",
    "end": "1637240"
  },
  {
    "text": "OPA or the Rego language is built in such a way that the most specific rule that applies to the given input is",
    "start": "1637240",
    "end": "1643480"
  },
  {
    "text": "selected in this case it tries to select the rule here uh that we Define it's our",
    "start": "1643480",
    "end": "1649960"
  },
  {
    "text": "client ID is account console and you see that I require that the user has the role user which apparently is currently",
    "start": "1649960",
    "end": "1657480"
  },
  {
    "text": "not present here so now let's just assign that role to the",
    "start": "1657480",
    "end": "1663720"
  },
  {
    "text": "user and just like that give it a rooll",
    "start": "1663720",
    "end": "1669279"
  },
  {
    "text": "so and if I now try again to access this",
    "start": "1669279",
    "end": "1674159"
  },
  {
    "text": "application access will suceed because now the input query document contains",
    "start": "1675640",
    "end": "1681399"
  },
  {
    "text": "the rule that is required and the exis is now allowed so far so good so you see",
    "start": "1681399",
    "end": "1687000"
  },
  {
    "text": "simple example um and just to show you a bit what's what could be possible or how",
    "start": "1687000",
    "end": "1692120"
  },
  {
    "text": "such a an access policy could look like this is in fact an access policy for a particular client yeah you just write",
    "start": "1692120",
    "end": "1698600"
  },
  {
    "text": "some rules with a so a self-made DSL that you that you build on top of The",
    "start": "1698600",
    "end": "1703840"
  },
  {
    "text": "Primitives that Rego provides you with yeah in this case case uh I can check",
    "start": "1703840",
    "end": "1709640"
  },
  {
    "text": "whether user has for app one whether the user has a certain client role for the",
    "start": "1709640",
    "end": "1714919"
  },
  {
    "text": "same client uh or could be also a different client role that we check uh here's an example where I check whether",
    "start": "1714919",
    "end": "1721679"
  },
  {
    "text": "the user has the role access for the current client which is app2 in this case but I could also check whether the",
    "start": "1721679",
    "end": "1727840"
  },
  {
    "text": "user is member of a group um or uh not uh I could also you target uh an",
    "start": "1727840",
    "end": "1735279"
  },
  {
    "text": "arbitrary number of clients not only a specific client with a specific client ID but it could also leverage um um uh",
    "start": "1735279",
    "end": "1743600"
  },
  {
    "text": "open policies uh support for expressing something like or right which is if you're familiar",
    "start": "1743600",
    "end": "1750279"
  },
  {
    "text": "with open policy agent you know open policy agent has somehow um strange relationship with a condition operator",
    "start": "1750279",
    "end": "1757080"
  },
  {
    "text": "or and is built in by default and super easy to use but or for in order to express or you have to do all sorts of",
    "start": "1757080",
    "end": "1763159"
  },
  {
    "text": "Tricks which can be read in this interesting blog post uh and this is one way to do it so you can basically create",
    "start": "1763159",
    "end": "1769960"
  },
  {
    "text": "policies access policies across multi and apply policies across multiple applications and here is something uh",
    "start": "1769960",
    "end": "1777519"
  },
  {
    "text": "special here for instance I have a policy that checks whether the current user comes from a certain side or",
    "start": "1777519",
    "end": "1783039"
  },
  {
    "text": "network range yeah and you might wonder how is this implemented underneath like the other functions as well well for",
    "start": "1783039",
    "end": "1789720"
  },
  {
    "text": "this you see that I always use this KC do uh reference object here which I just",
    "start": "1789720",
    "end": "1795320"
  },
  {
    "text": "import uh as another policy model module so to speak and here I have all this uh",
    "start": "1795320",
    "end": "1802120"
  },
  {
    "text": "let's say DL my custom functions expressed based built on top of Rego",
    "start": "1802120",
    "end": "1807960"
  },
  {
    "text": "Primitives um for instance the the network check effectively call uses an",
    "start": "1807960",
    "end": "1814200"
  },
  {
    "text": "Rego function called net cider contains which allows me to check the network range and so on and there you can",
    "start": "1814200",
    "end": "1819880"
  },
  {
    "text": "imagine there are hundreds of original functions that you can have and the idea is um if you build your own abstractions",
    "start": "1819880",
    "end": "1826200"
  },
  {
    "text": "on top of Oro um then you can give your developer teams an easy to use DSL at",
    "start": "1826200",
    "end": "1832919"
  },
  {
    "text": "hand that enables them to express exess decisions and policy logic in an easy way without having to learn all the N",
    "start": "1832919",
    "end": "1839679"
  },
  {
    "text": "nitty-gritty details about Rego yeah you provide them just with a simple DSL and and embedded DSL they can use yeah okay",
    "start": "1839679",
    "end": "1847600"
  },
  {
    "text": "now maybe some other two more use cases uh okay I showed you some browser based",
    "start": "1847600",
    "end": "1853399"
  },
  {
    "text": "interactions uh with uh for with access checks but how what what if I want to",
    "start": "1853399",
    "end": "1859200"
  },
  {
    "text": "use an API call or something like that or I want to use other gr types like for",
    "start": "1859200",
    "end": "1864480"
  },
  {
    "text": "instance the gr type password or gr type CLI credentials and if I make some room",
    "start": "1864480",
    "end": "1871559"
  },
  {
    "text": "here and if I for instance now send a request to this uh and this request like",
    "start": "1871559",
    "end": "1877720"
  },
  {
    "text": "gr type password request uh and Grant type CL CRS request yeah you see no check is performed at all with this",
    "start": "1877720",
    "end": "1884559"
  },
  {
    "text": "measures um that's why uh keyo um does not um has different ways uh to check",
    "start": "1884559",
    "end": "1891840"
  },
  {
    "text": "for different grants let's say um what happens and if you want to have checks",
    "start": "1891840",
    "end": "1897080"
  },
  {
    "text": "here as well we can leverage another cool feature that was contributed by Takashi which is called client policies",
    "start": "1897080",
    "end": "1903639"
  },
  {
    "text": "um so in order to use that we start first we create a so-called client profile which is called Opa uh client",
    "start": "1903639",
    "end": "1911039"
  },
  {
    "text": "access uh Opa check access profile and here we select a so-called uh Opa client",
    "start": "1911039",
    "end": "1918639"
  },
  {
    "text": "access policy enforcer here we can select which kind of information we want to be added to a policy query right",
    "start": "1918639",
    "end": "1926760"
  },
  {
    "text": "which user attribute context attribute Ram attribute client attributes whatever when whether we want to expose roles and",
    "start": "1926760",
    "end": "1932799"
  },
  {
    "text": "so on and what kind of policy path we want to use yeah and now uh to apply",
    "start": "1932799",
    "end": "1939279"
  },
  {
    "text": "this uh profile we need to create uh soal policy that tells us uh to which",
    "start": "1939279",
    "end": "1946000"
  },
  {
    "text": "clients uh should this policy be applied yeah and let's say conditions we say",
    "start": "1946000",
    "end": "1954360"
  },
  {
    "text": "please apply to just any client for now and uh here we say uh we link that to",
    "start": "1954360",
    "end": "1960679"
  },
  {
    "text": "our op check access profile and this steps are on the slides that I uploaded so don't worry we can watch it later on",
    "start": "1960679",
    "end": "1969159"
  },
  {
    "text": "um so now I created this collected this policy and if I try to do the request",
    "start": "1969159",
    "end": "1975120"
  },
  {
    "text": "again yeah you see here uhhuh op exess check failed 403 Forbidden why was this",
    "start": "1975120",
    "end": "1980919"
  },
  {
    "text": "the case well the access Cy was executed um and you see here the grant type was",
    "start": "1980919",
    "end": "1986159"
  },
  {
    "text": "password in this case and the uh the the exis was denied why was that the case um",
    "start": "1986159",
    "end": "1992360"
  },
  {
    "text": "because in our policy um it said it the policy access logic must explicitly",
    "start": "1992360",
    "end": "1998760"
  },
  {
    "text": "match the client in this case yeah which didn't and therefore it fall back to fell back to the allow deny or allow",
    "start": "1998760",
    "end": "2006000"
  },
  {
    "text": "false rule by default so if I make the this method match and now you can",
    "start": "2006000",
    "end": "2012159"
  },
  {
    "text": "imagine I changed the code I committed it I linted it I pushed it uh c i",
    "start": "2012159",
    "end": "2017480"
  },
  {
    "text": "pipeline kicked in buildt it again and whatever either pushed it into my open policy agent uh service Ser uh agents or",
    "start": "2017480",
    "end": "2026000"
  },
  {
    "text": "provided an endpoint that the policy agent could po could pull from right periodically and now my policy would is",
    "start": "2026000",
    "end": "2032880"
  },
  {
    "text": "live and if I try again to call the endpoint now it succeed",
    "start": "2032880",
    "end": "2039320"
  },
  {
    "text": "yeah I got a token and so on and here you also see request was performed and",
    "start": "2039320",
    "end": "2046000"
  },
  {
    "text": "this time it says result true that's it yeah so that's all I wanted to show for",
    "start": "2046000",
    "end": "2051800"
  },
  {
    "text": "now and all I have time for um the cool thing about this I said earlier I want",
    "start": "2051800",
    "end": "2058320"
  },
  {
    "text": "also to be able to test the policies right and you can just do that with the built-in Opa test functionality you",
    "start": "2058320",
    "end": "2065520"
  },
  {
    "text": "basically create uh Define your your example input queries so to speak with the bare information that you want to",
    "start": "2065520",
    "end": "2072280"
  },
  {
    "text": "provide and then you can create arbitrary assorts around that yeah and",
    "start": "2072280",
    "end": "2077398"
  },
  {
    "text": "so on and with that you can basically test your access rules without kick look yeah just uh by by using the build in",
    "start": "2077399",
    "end": "2084878"
  },
  {
    "text": "tooling and so on okay this concludes my demo there's a lot more slides available",
    "start": "2084879",
    "end": "2090520"
  },
  {
    "text": "in the in the in the uploaded form exactly thanks um to summarize uh you",
    "start": "2090520",
    "end": "2096320"
  },
  {
    "text": "see you've seen the uh simple integration of open policy agent and keylo uh code is all on GitHub link is",
    "start": "2096320",
    "end": "2102560"
  },
  {
    "text": "is in next slide um you see that access decisions can be delegated to Opa with this but enforced by kloo and you might",
    "start": "2102560",
    "end": "2109640"
  },
  {
    "text": "wonder H why do why should I do that uh usually uh this excisions are also enforced on the application side of",
    "start": "2109640",
    "end": "2116359"
  },
  {
    "text": "course you still have to do that like validating on the front end on the back end yeah we have to do it somehow on",
    "start": "2116359",
    "end": "2121839"
  },
  {
    "text": "both sides but if kylo knows that an exis is denied we can also analyze why",
    "start": "2121839",
    "end": "2127200"
  },
  {
    "text": "for instance maybe the user is missing a role and then we can add a process to keylo that says that okay you cannot",
    "start": "2127200",
    "end": "2133960"
  },
  {
    "text": "currently access this application because you're missing that role or you are not member of the group click here to request that role or click here to",
    "start": "2133960",
    "end": "2141040"
  },
  {
    "text": "request joining that group and then you can kick off arbitrary management processes that uh uh yeah let someone",
    "start": "2141040",
    "end": "2148720"
  },
  {
    "text": "Grant you access to that and later on you can try it again that's possible when Kook knows that exists the night",
    "start": "2148720",
    "end": "2154359"
  },
  {
    "text": "based on that yeah also this mechanism allow us flexible policy management via",
    "start": "2154359",
    "end": "2160680"
  },
  {
    "text": "gups as you seen I just edited code and whatever you want can do with code you can do and uh also in my experience this",
    "start": "2160680",
    "end": "2169079"
  },
  {
    "text": "also helps to consolidate existing access logic because you as you've seen with the small helper functions that I",
    "start": "2169079",
    "end": "2175240"
  },
  {
    "text": "wrote you could also wrote write building blocks of Access Control logic that are shared across applications that",
    "start": "2175240",
    "end": "2181440"
  },
  {
    "text": "you can reuse for the same purpose yeah and so on and that's all I have with",
    "start": "2181440",
    "end": "2186920"
  },
  {
    "text": "that I said thank [Applause] [Music]",
    "start": "2186920",
    "end": "2192979"
  },
  {
    "text": "[Applause] you okay um code is on GitHub you can",
    "start": "2194230",
    "end": "2200079"
  },
  {
    "text": "find it there if you have feedback to our talk you can scan the QR code and I think we have two minutes for questions",
    "start": "2200079",
    "end": "2205400"
  },
  {
    "text": "and uh if you have questions uh some folks will bring bring Mike",
    "start": "2205400",
    "end": "2210599"
  },
  {
    "text": "or yes M hello hello hey does this in",
    "start": "2210599",
    "end": "2215760"
  },
  {
    "text": "any way affect or relate in key CL maybe you mean user managed",
    "start": "2215760",
    "end": "2221440"
  },
  {
    "text": "access yes um this could be leveraged in that regard as well let's say to to",
    "start": "2221440",
    "end": "2226800"
  },
  {
    "text": "write logic uh to to enforce uh user managed access but in this prototype on",
    "start": "2226800",
    "end": "2232720"
  },
  {
    "text": "this example that's not part of it yeah okay uh other questions go",
    "start": "2232720",
    "end": "2241440"
  },
  {
    "text": "on so if there are no more questions feel free to uh yeah speak to us we will stay",
    "start": "2241480",
    "end": "2249040"
  },
  {
    "text": "stick here around for a while and uh yeah thanks for",
    "start": "2249040",
    "end": "2254200"
  },
  {
    "text": "listening",
    "start": "2256520",
    "end": "2259520"
  }
]