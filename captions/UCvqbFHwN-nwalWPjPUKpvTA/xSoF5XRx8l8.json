[
  {
    "text": "okay hello everyone I'm satina show",
    "start": "1940",
    "end": "4980"
  },
  {
    "text": "along with my teammate with Bluehost",
    "start": "4980",
    "end": "7500"
  },
  {
    "text": "today I'm going to be presenting our",
    "start": "7500",
    "end": "9360"
  },
  {
    "text": "recent work on distributed tracing",
    "start": "9360",
    "end": "12540"
  },
  {
    "text": "um and specifically on how to enable uh",
    "start": "12540",
    "end": "15120"
  },
  {
    "text": "distributed tracing without the pain uh",
    "start": "15120",
    "end": "17820"
  },
  {
    "text": "where a couple of PhD students from the",
    "start": "17820",
    "end": "19320"
  },
  {
    "text": "University of Illinois I've heard about",
    "start": "19320",
    "end": "20760"
  },
  {
    "text": "our shopping and this is work in",
    "start": "20760",
    "end": "23340"
  },
  {
    "text": "collaboration with our advisors at",
    "start": "23340",
    "end": "25140"
  },
  {
    "text": "University of a lot as well as a few",
    "start": "25140",
    "end": "27320"
  },
  {
    "text": "researchers and idea research",
    "start": "27320",
    "end": "31279"
  },
  {
    "text": "observation that debugging microservices",
    "start": "32899",
    "end": "35520"
  },
  {
    "text": "is quite hard I'm sure many of the",
    "start": "35520",
    "end": "37559"
  },
  {
    "text": "audience differently but your library",
    "start": "37559",
    "end": "39600"
  },
  {
    "text": "consider this sample microservice system",
    "start": "39600",
    "end": "42059"
  },
  {
    "text": "as shown here where we press flow from",
    "start": "42059",
    "end": "44399"
  },
  {
    "text": "left to right and suppose you want to",
    "start": "44399",
    "end": "46760"
  },
  {
    "text": "service many requests that all right",
    "start": "46760",
    "end": "49379"
  },
  {
    "text": "after maybe I gave in such a system",
    "start": "49379",
    "end": "52020"
  },
  {
    "text": "uh requests typically take a very",
    "start": "52020",
    "end": "54539"
  },
  {
    "text": "contributed product through the smart",
    "start": "54539",
    "end": "56100"
  },
  {
    "text": "service system in order to get a single",
    "start": "56100",
    "end": "58260"
  },
  {
    "text": "response and this can be a nightmare for",
    "start": "58260",
    "end": "60719"
  },
  {
    "text": "visibility this is because many complex",
    "start": "60719",
    "end": "63239"
  },
  {
    "text": "systems must be dragged to produce even",
    "start": "63239",
    "end": "65460"
  },
  {
    "text": "a single and direct request request",
    "start": "65460",
    "end": "68100"
  },
  {
    "text": "response",
    "start": "68100",
    "end": "70140"
  },
  {
    "text": "I'm just exactly where end-to-end",
    "start": "70140",
    "end": "72000"
  },
  {
    "text": "distributed tracing comes in so for",
    "start": "72000",
    "end": "74220"
  },
  {
    "text": "example let's say you have incoming",
    "start": "74220",
    "end": "76500"
  },
  {
    "text": "requests arriving at the API Gateway and",
    "start": "76500",
    "end": "80340"
  },
  {
    "text": "they can be like two of them as shown",
    "start": "80340",
    "end": "82320"
  },
  {
    "text": "here red and yellow so all red and",
    "start": "82320",
    "end": "85680"
  },
  {
    "text": "yellow red candles here correspond to me",
    "start": "85680",
    "end": "87720"
  },
  {
    "text": "requests that propagate within the",
    "start": "87720",
    "end": "89460"
  },
  {
    "text": "system or they call stands in this",
    "start": "89460",
    "end": "92040"
  },
  {
    "text": "terminology and the job of distributed",
    "start": "92040",
    "end": "94320"
  },
  {
    "text": "tracing is to put together these tasks",
    "start": "94320",
    "end": "97619"
  },
  {
    "text": "in such a way that you can obtain the",
    "start": "97619",
    "end": "99840"
  },
  {
    "text": "cholera of a single Loop rest after this",
    "start": "99840",
    "end": "102479"
  },
  {
    "text": "flowing through this microservice",
    "start": "102479",
    "end": "104820"
  },
  {
    "text": "these end-to-end phrases can provide",
    "start": "104820",
    "end": "106920"
  },
  {
    "text": "visibility which can be very useful for",
    "start": "106920",
    "end": "109439"
  },
  {
    "text": "answering craze like which service",
    "start": "109439",
    "end": "112520"
  },
  {
    "text": "contributes most to the delayed",
    "start": "112520",
    "end": "114479"
  },
  {
    "text": "experienced by the slowest one to two",
    "start": "114479",
    "end": "116820"
  },
  {
    "text": "percent of the requests early how uh how",
    "start": "116820",
    "end": "120840"
  },
  {
    "text": "much time you get high crisis requests",
    "start": "120840",
    "end": "122880"
  },
  {
    "text": "take at a particular service",
    "start": "122880",
    "end": "125520"
  },
  {
    "text": "please note that such Grace cannot be",
    "start": "125520",
    "end": "128160"
  },
  {
    "text": "answered by all of the books family",
    "start": "128160",
    "end": "130319"
  },
  {
    "text": "tracings that proxies provide today and",
    "start": "130319",
    "end": "133200"
  },
  {
    "text": "explain what that is so for example uh",
    "start": "133200",
    "end": "136560"
  },
  {
    "text": "practice like online today did the",
    "start": "136560",
    "end": "138540"
  },
  {
    "text": "ability to the user to turn on a flag",
    "start": "138540",
    "end": "140819"
  },
  {
    "text": "and enables parallel tracing where",
    "start": "140819",
    "end": "143400"
  },
  {
    "text": "Individual Services can lock the stocks",
    "start": "143400",
    "end": "145680"
  },
  {
    "text": "that are arrive at them under the",
    "start": "145680",
    "end": "147000"
  },
  {
    "text": "developer account to look at density",
    "start": "147000",
    "end": "148440"
  },
  {
    "text": "problems end-to-end tracing on the other",
    "start": "148440",
    "end": "150780"
  },
  {
    "text": "hand can collect and Stitch together",
    "start": "150780",
    "end": "152700"
  },
  {
    "text": "these end-to-end these individual's",
    "start": "152700",
    "end": "154980"
  },
  {
    "text": "class to form the end-to-end trace and",
    "start": "154980",
    "end": "157500"
  },
  {
    "text": "this gives much more visibility into the",
    "start": "157500",
    "end": "159660"
  },
  {
    "text": "flow of a request through a microservice",
    "start": "159660",
    "end": "163620"
  },
  {
    "text": "so I hope everybody can agree that entry",
    "start": "163620",
    "end": "166200"
  },
  {
    "text": "in tracing is a good thing so what's the",
    "start": "166200",
    "end": "167940"
  },
  {
    "text": "main challenge with achieving canceling",
    "start": "167940",
    "end": "169680"
  },
  {
    "text": "prison uh the main challenge is that",
    "start": "169680",
    "end": "172379"
  },
  {
    "text": "let's say you have a scenario where you",
    "start": "172379",
    "end": "173819"
  },
  {
    "text": "have him coming to refresh RMS okay the",
    "start": "173819",
    "end": "176940"
  },
  {
    "text": "area might generate different Equity",
    "start": "176940",
    "end": "179400"
  },
  {
    "text": "requests to the bank in order to",
    "start": "179400",
    "end": "181440"
  },
  {
    "text": "Services these client requests",
    "start": "181440",
    "end": "184680"
  },
  {
    "text": "uh the main challenge lies uh in the",
    "start": "184680",
    "end": "187080"
  },
  {
    "text": "confusion that there are many options",
    "start": "187080",
    "end": "189239"
  },
  {
    "text": "available for this match for example is",
    "start": "189239",
    "end": "192060"
  },
  {
    "text": "this the right mapping between the",
    "start": "192060",
    "end": "193620"
  },
  {
    "text": "interview request and the backup request",
    "start": "193620",
    "end": "195300"
  },
  {
    "text": "or is this the right number without",
    "start": "195300",
    "end": "198120"
  },
  {
    "text": "thinking into application code there's",
    "start": "198120",
    "end": "200099"
  },
  {
    "text": "no room to tell what is the right which",
    "start": "200099",
    "end": "201959"
  },
  {
    "text": "which is the right block and this",
    "start": "201959",
    "end": "204659"
  },
  {
    "text": "problem is present in every single",
    "start": "204659",
    "end": "206700"
  },
  {
    "text": "service that the request interaction and",
    "start": "206700",
    "end": "209340"
  },
  {
    "text": "any solution that tries to provide",
    "start": "209340",
    "end": "210840"
  },
  {
    "text": "excellent tracing needs to solve this",
    "start": "210840",
    "end": "212879"
  },
  {
    "text": "challenge",
    "start": "212879",
    "end": "213659"
  },
  {
    "text": "of nothing incoming requested",
    "start": "213659",
    "end": "217400"
  },
  {
    "text": "so the possibly this is done today is by",
    "start": "217400",
    "end": "220500"
  },
  {
    "text": "ahead of propagation so in this approach",
    "start": "220500",
    "end": "223140"
  },
  {
    "text": "when requests arrive at the API input",
    "start": "223140",
    "end": "226140"
  },
  {
    "text": "the API entry will generate a Google ID",
    "start": "226140",
    "end": "229200"
  },
  {
    "text": "and attach that onto the requests and",
    "start": "229200",
    "end": "232680"
  },
  {
    "text": "whenever a backend request is generated",
    "start": "232680",
    "end": "234780"
  },
  {
    "text": "regarding the service plan these uh",
    "start": "234780",
    "end": "237480"
  },
  {
    "text": "Global IDs are replicated and propagated",
    "start": "237480",
    "end": "239879"
  },
  {
    "text": "via these regressors using crazy matters",
    "start": "239879",
    "end": "242819"
  },
  {
    "text": "and every single service along the way",
    "start": "242819",
    "end": "245040"
  },
  {
    "text": "does the same job and this is how head",
    "start": "245040",
    "end": "247379"
  },
  {
    "text": "of propagation issues and to education",
    "start": "247379",
    "end": "249180"
  },
  {
    "text": "because now they can stick to these",
    "start": "249180",
    "end": "250980"
  },
  {
    "text": "paths together",
    "start": "250980",
    "end": "252720"
  },
  {
    "text": "but kind of propagation comes with these",
    "start": "252720",
    "end": "254760"
  },
  {
    "text": "drawbacks so for example uh in this",
    "start": "254760",
    "end": "257280"
  },
  {
    "text": "scenario you need to have value from",
    "start": "257280",
    "end": "259739"
  },
  {
    "text": "hundreds of loosely coupled services in",
    "start": "259739",
    "end": "262380"
  },
  {
    "text": "order to enable distributed tracing I",
    "start": "262380",
    "end": "265020"
  },
  {
    "text": "understand like",
    "start": "265020",
    "end": "266520"
  },
  {
    "text": "and even when you do have cooperating",
    "start": "266520",
    "end": "268860"
  },
  {
    "text": "Services you can have scenarios where",
    "start": "268860",
    "end": "271020"
  },
  {
    "text": "you're interfacing with lengthy",
    "start": "271020",
    "end": "272820"
  },
  {
    "text": "applications or programming applications",
    "start": "272820",
    "end": "275340"
  },
  {
    "text": "where one condition of that code is",
    "start": "275340",
    "end": "277860"
  },
  {
    "text": "quite difficult and all this means is to",
    "start": "277860",
    "end": "280860"
  },
  {
    "text": "say that I had a propagation that need",
    "start": "280860",
    "end": "282660"
  },
  {
    "text": "priorities",
    "start": "282660",
    "end": "284100"
  },
  {
    "text": "so we this leads us to the question of",
    "start": "284100",
    "end": "286740"
  },
  {
    "text": "Catholic enable n2m distributed tracing",
    "start": "286740",
    "end": "289620"
  },
  {
    "text": "without application Institution",
    "start": "289620",
    "end": "293100"
  },
  {
    "text": "yeah now hello to my teammate reports",
    "start": "293100",
    "end": "296220"
  },
  {
    "text": "and talk a little bit about our approach",
    "start": "296220",
    "end": "299780"
  },
  {
    "text": "thanks",
    "start": "300660",
    "end": "303139"
  },
  {
    "text": "Arjun so uh now that we know that if we",
    "start": "311479",
    "end": "315540"
  },
  {
    "text": "try to use header propagation let's see",
    "start": "315540",
    "end": "317759"
  },
  {
    "text": "what information can you get from online",
    "start": "317759",
    "end": "320120"
  },
  {
    "text": "without instrumenting the app that can",
    "start": "320120",
    "end": "322740"
  },
  {
    "text": "help us reach into a trade",
    "start": "322740",
    "end": "326160"
  },
  {
    "text": "so let's say there are two incoming",
    "start": "326160",
    "end": "328020"
  },
  {
    "text": "requests to the API destroyer and their",
    "start": "328020",
    "end": "330360"
  },
  {
    "text": "corresponding responses",
    "start": "330360",
    "end": "333300"
  },
  {
    "text": "now we know the mapping between the",
    "start": "333300",
    "end": "335039"
  },
  {
    "text": "incoming requests and the outgoing",
    "start": "335039",
    "end": "336720"
  },
  {
    "text": "responses and this can be obtained via",
    "start": "336720",
    "end": "339600"
  },
  {
    "text": "the facts that are collected by via the",
    "start": "339600",
    "end": "342060"
  },
  {
    "text": "on-boy sectors",
    "start": "342060",
    "end": "344460"
  },
  {
    "text": "now the API Gateway makes several",
    "start": "344460",
    "end": "347400"
  },
  {
    "text": "backend requests to answer your queries",
    "start": "347400",
    "end": "349800"
  },
  {
    "text": "that the same to list",
    "start": "349800",
    "end": "352320"
  },
  {
    "text": "the demanding between the incoming",
    "start": "352320",
    "end": "354479"
  },
  {
    "text": "requests and the backend request is not",
    "start": "354479",
    "end": "356639"
  },
  {
    "text": "known and this is because these mappings",
    "start": "356639",
    "end": "359400"
  },
  {
    "text": "are buried inside the application logic",
    "start": "359400",
    "end": "361560"
  },
  {
    "text": "so without peaking inside the",
    "start": "361560",
    "end": "363360"
  },
  {
    "text": "application it's not possible to decide",
    "start": "363360",
    "end": "365880"
  },
  {
    "text": "which request was sent in response to",
    "start": "365880",
    "end": "368639"
  },
  {
    "text": "what incoming request",
    "start": "368639",
    "end": "371600"
  },
  {
    "text": "and this is really the Crux of the",
    "start": "371639",
    "end": "373680"
  },
  {
    "text": "problem how do we map incoming requests",
    "start": "373680",
    "end": "376080"
  },
  {
    "text": "to the backend request and this and",
    "start": "376080",
    "end": "378479"
  },
  {
    "text": "solving this problem would enable us to",
    "start": "378479",
    "end": "381060"
  },
  {
    "text": "stitch together these mappings and form",
    "start": "381060",
    "end": "382800"
  },
  {
    "text": "an end-to-end Trace",
    "start": "382800",
    "end": "385620"
  },
  {
    "text": "so how can we reconstruct end-to-end",
    "start": "385620",
    "end": "387720"
  },
  {
    "text": "traces without header propagation",
    "start": "387720",
    "end": "390240"
  },
  {
    "text": "so let's say there are three incoming",
    "start": "390240",
    "end": "391919"
  },
  {
    "text": "requests to the API Gateway",
    "start": "391919",
    "end": "394440"
  },
  {
    "text": "along with the responses that were sent",
    "start": "394440",
    "end": "396960"
  },
  {
    "text": "out for each of these requests and as",
    "start": "396960",
    "end": "399600"
  },
  {
    "text": "before there were some back-end requests",
    "start": "399600",
    "end": "401340"
  },
  {
    "text": "that was made by the API Gateway",
    "start": "401340",
    "end": "404580"
  },
  {
    "text": "so for each request the span level",
    "start": "404580",
    "end": "407280"
  },
  {
    "text": "information tells us the time at which",
    "start": "407280",
    "end": "410160"
  },
  {
    "text": "that request was received and the time",
    "start": "410160",
    "end": "412500"
  },
  {
    "text": "at which the response for that request",
    "start": "412500",
    "end": "414720"
  },
  {
    "text": "was sent out",
    "start": "414720",
    "end": "416660"
  },
  {
    "text": "and this the and these",
    "start": "416660",
    "end": "421020"
  },
  {
    "text": "sorry there's something on the screen",
    "start": "421020",
    "end": "424520"
  },
  {
    "text": "it's not our mind",
    "start": "434479",
    "end": "438020"
  },
  {
    "text": "foreign",
    "start": "438419",
    "end": "440600"
  },
  {
    "text": "okay",
    "start": "460500",
    "end": "461720"
  },
  {
    "text": "sorry about that",
    "start": "461720",
    "end": "465060"
  },
  {
    "text": "so how can we let's do this again",
    "start": "465060",
    "end": "468479"
  },
  {
    "text": "so how can we reconstruct end-to-end",
    "start": "468479",
    "end": "470819"
  },
  {
    "text": "traces without header propagation",
    "start": "470819",
    "end": "473639"
  },
  {
    "text": "so let's say there are incoming requests",
    "start": "473639",
    "end": "475680"
  },
  {
    "text": "to the front end",
    "start": "475680",
    "end": "477780"
  },
  {
    "text": "along with the responses that were sent",
    "start": "477780",
    "end": "481139"
  },
  {
    "text": "out for those requests and as before the",
    "start": "481139",
    "end": "484520"
  },
  {
    "text": "Gateway sends backend requests to answer",
    "start": "484520",
    "end": "487440"
  },
  {
    "text": "those queries",
    "start": "487440",
    "end": "489060"
  },
  {
    "text": "now from the spanned information for",
    "start": "489060",
    "end": "491400"
  },
  {
    "text": "each request we have the time at which",
    "start": "491400",
    "end": "493380"
  },
  {
    "text": "that request was received and the time",
    "start": "493380",
    "end": "495599"
  },
  {
    "text": "at which the response for that request",
    "start": "495599",
    "end": "497340"
  },
  {
    "text": "was sent out and these timings",
    "start": "497340",
    "end": "499919"
  },
  {
    "text": "constitute one part of the input that",
    "start": "499919",
    "end": "502500"
  },
  {
    "text": "will feed to the trace reconstruction",
    "start": "502500",
    "end": "504000"
  },
  {
    "text": "process",
    "start": "504000",
    "end": "506539"
  },
  {
    "text": "the second part of the input are a set",
    "start": "506940",
    "end": "510060"
  },
  {
    "text": "of constraints which tell us which",
    "start": "510060",
    "end": "511919"
  },
  {
    "text": "mappings are possible and which mappings",
    "start": "511919",
    "end": "514080"
  },
  {
    "text": "are not possible so in this example",
    "start": "514080",
    "end": "517020"
  },
  {
    "text": "you can see that this mapping if you",
    "start": "517020",
    "end": "519000"
  },
  {
    "text": "look carefully you can see that this",
    "start": "519000",
    "end": "520860"
  },
  {
    "text": "mapping is not possible and this is",
    "start": "520860",
    "end": "523080"
  },
  {
    "text": "because the response of the back end",
    "start": "523080",
    "end": "525240"
  },
  {
    "text": "could not have been sent out after the",
    "start": "525240",
    "end": "527580"
  },
  {
    "text": "response was sent out to the user so",
    "start": "527580",
    "end": "529560"
  },
  {
    "text": "this is clearly an infeasible mapping",
    "start": "529560",
    "end": "532260"
  },
  {
    "text": "and you can also we can also have",
    "start": "532260",
    "end": "534000"
  },
  {
    "text": "constraints that we derive using request",
    "start": "534000",
    "end": "536760"
  },
  {
    "text": "parameters HTTP headers and so on",
    "start": "536760",
    "end": "540779"
  },
  {
    "text": "and these constraints form the second",
    "start": "540779",
    "end": "543180"
  },
  {
    "text": "half of the second part of the input",
    "start": "543180",
    "end": "545459"
  },
  {
    "text": "that will feed to the phase",
    "start": "545459",
    "end": "547860"
  },
  {
    "text": "reconstruction algorithm",
    "start": "547860",
    "end": "550440"
  },
  {
    "text": "and the final part of the input is the",
    "start": "550440",
    "end": "553140"
  },
  {
    "text": "microservice call topology which",
    "start": "553140",
    "end": "555180"
  },
  {
    "text": "describes how Services talk to each",
    "start": "555180",
    "end": "557100"
  },
  {
    "text": "other in order to generate a response",
    "start": "557100",
    "end": "561000"
  },
  {
    "text": "so using these three inputs we feed the",
    "start": "561000",
    "end": "564120"
  },
  {
    "text": "we feed that to a trace reconstruction",
    "start": "564120",
    "end": "566220"
  },
  {
    "text": "algorithm which outputs the most likely",
    "start": "566220",
    "end": "569519"
  },
  {
    "text": "mapping given his given a historical",
    "start": "569519",
    "end": "571920"
  },
  {
    "text": "distribution of delays at each micro",
    "start": "571920",
    "end": "575160"
  },
  {
    "text": "service so specifically for our previous",
    "start": "575160",
    "end": "577920"
  },
  {
    "text": "example where we had three requests",
    "start": "577920",
    "end": "580440"
  },
  {
    "text": "three incoming requests and three",
    "start": "580440",
    "end": "582180"
  },
  {
    "text": "back-end requests it outputs a specific",
    "start": "582180",
    "end": "584820"
  },
  {
    "text": "mapping for this uh for the backend",
    "start": "584820",
    "end": "587760"
  },
  {
    "text": "request and the incoming requests at",
    "start": "587760",
    "end": "589320"
  },
  {
    "text": "this node",
    "start": "589320",
    "end": "591540"
  },
  {
    "text": "and similarly it outputs the mapping for",
    "start": "591540",
    "end": "594300"
  },
  {
    "text": "every service node and then we can",
    "start": "594300",
    "end": "596519"
  },
  {
    "text": "stitch them up to get the end to entries",
    "start": "596519",
    "end": "600680"
  },
  {
    "text": "so we tried this approach for a",
    "start": "601019",
    "end": "603420"
  },
  {
    "text": "benchmark application varying the",
    "start": "603420",
    "end": "605640"
  },
  {
    "text": "request load for that application and we",
    "start": "605640",
    "end": "608220"
  },
  {
    "text": "implemented two Baseline schemes for",
    "start": "608220",
    "end": "610320"
  },
  {
    "text": "comparison which are based on ordering",
    "start": "610320",
    "end": "612720"
  },
  {
    "text": "of the request and you can see here that",
    "start": "612720",
    "end": "615600"
  },
  {
    "text": "as load increases the accuracy of the",
    "start": "615600",
    "end": "618120"
  },
  {
    "text": "Baseline schemes decreases because as",
    "start": "618120",
    "end": "620640"
  },
  {
    "text": "load increases",
    "start": "620640",
    "end": "622620"
  },
  {
    "text": "request requests have higher chance of",
    "start": "622620",
    "end": "625320"
  },
  {
    "text": "getting reordered at any service",
    "start": "625320",
    "end": "628920"
  },
  {
    "text": "in contrast the algorithm that we have",
    "start": "628920",
    "end": "632180"
  },
  {
    "text": "generates uh these end-to-end faces with",
    "start": "632180",
    "end": "636480"
  },
  {
    "text": "high accuracy even at high loads",
    "start": "636480",
    "end": "639060"
  },
  {
    "text": "so we asked the question how can this be",
    "start": "639060",
    "end": "641160"
  },
  {
    "text": "useful to a developer",
    "start": "641160",
    "end": "642839"
  },
  {
    "text": "so let's say the developer is interested",
    "start": "642839",
    "end": "645180"
  },
  {
    "text": "in answering the following question",
    "start": "645180",
    "end": "646500"
  },
  {
    "text": "which service contributes most to the",
    "start": "646500",
    "end": "649200"
  },
  {
    "text": "delay experienced by the slowest two",
    "start": "649200",
    "end": "651060"
  },
  {
    "text": "percent of the requests",
    "start": "651060",
    "end": "652980"
  },
  {
    "text": "so here is a latency profile of all",
    "start": "652980",
    "end": "656100"
  },
  {
    "text": "those services",
    "start": "656100",
    "end": "657300"
  },
  {
    "text": "when you only have span level",
    "start": "657300",
    "end": "659100"
  },
  {
    "text": "information which you can get today in",
    "start": "659100",
    "end": "661200"
  },
  {
    "text": "non-voice Via a simple flag so in the",
    "start": "661200",
    "end": "664140"
  },
  {
    "text": "absence of end-to-end traces the",
    "start": "664140",
    "end": "665880"
  },
  {
    "text": "developer would look at the 98",
    "start": "665880",
    "end": "667560"
  },
  {
    "text": "percentile latency of each service and",
    "start": "667560",
    "end": "670260"
  },
  {
    "text": "the developer might conclude that some",
    "start": "670260",
    "end": "672180"
  },
  {
    "text": "of these services are contributing to",
    "start": "672180",
    "end": "674279"
  },
  {
    "text": "the delay",
    "start": "674279",
    "end": "676760"
  },
  {
    "text": "so and here is the latency profile with",
    "start": "677040",
    "end": "679860"
  },
  {
    "text": "our reconstructed end-to-end traces and",
    "start": "679860",
    "end": "682380"
  },
  {
    "text": "as you can see this shows a completely",
    "start": "682380",
    "end": "684540"
  },
  {
    "text": "different picture",
    "start": "684540",
    "end": "686519"
  },
  {
    "text": "and if we compare this with the ground",
    "start": "686519",
    "end": "688380"
  },
  {
    "text": "truth actually the reconstructed",
    "start": "688380",
    "end": "690420"
  },
  {
    "text": "end-to-end traces provide a much more",
    "start": "690420",
    "end": "692579"
  },
  {
    "text": "accurate picture of the of of the",
    "start": "692579",
    "end": "695519"
  },
  {
    "text": "troubleshooting scenario than the then",
    "start": "695519",
    "end": "697680"
  },
  {
    "text": "when you only have span only information",
    "start": "697680",
    "end": "699300"
  },
  {
    "text": "which can mislead the developer",
    "start": "699300",
    "end": "703279"
  },
  {
    "text": "all right so to summarize our goal is to",
    "start": "704399",
    "end": "706980"
  },
  {
    "text": "enable distributed tracing without",
    "start": "706980",
    "end": "708779"
  },
  {
    "text": "instrumenting the application and to do",
    "start": "708779",
    "end": "711420"
  },
  {
    "text": "so we use information from invoice such",
    "start": "711420",
    "end": "714300"
  },
  {
    "text": "as spam logs request parameters HTTP",
    "start": "714300",
    "end": "717600"
  },
  {
    "text": "headers and so on",
    "start": "717600",
    "end": "719579"
  },
  {
    "text": "and this approach gave us a 96 percent",
    "start": "719579",
    "end": "722640"
  },
  {
    "text": "uh end-to-end Trace reconstruction",
    "start": "722640",
    "end": "724980"
  },
  {
    "text": "accuracy for for a benchmark application",
    "start": "724980",
    "end": "727560"
  },
  {
    "text": "now this benchmarking thing that we did",
    "start": "727560",
    "end": "730019"
  },
  {
    "text": "was was it does not cover the entire",
    "start": "730019",
    "end": "733800"
  },
  {
    "text": "breadth of you know different kinds of",
    "start": "733800",
    "end": "737100"
  },
  {
    "text": "micro service applications that exist",
    "start": "737100",
    "end": "738899"
  },
  {
    "text": "out there but this is an ongoing project",
    "start": "738899",
    "end": "741300"
  },
  {
    "text": "and we are still",
    "start": "741300",
    "end": "743220"
  },
  {
    "text": "um we are looking into how we can",
    "start": "743220",
    "end": "745560"
  },
  {
    "text": "incorporate the various idiosyncrasies",
    "start": "745560",
    "end": "747660"
  },
  {
    "text": "of you know complex microservice",
    "start": "747660",
    "end": "749519"
  },
  {
    "text": "applications that exists out there which",
    "start": "749519",
    "end": "751860"
  },
  {
    "text": "includes things like asynchronous",
    "start": "751860",
    "end": "753540"
  },
  {
    "text": "execution caching of responses or you",
    "start": "753540",
    "end": "756959"
  },
  {
    "text": "know batching of requests",
    "start": "756959",
    "end": "758880"
  },
  {
    "text": "Etc",
    "start": "758880",
    "end": "759660"
  },
  {
    "text": "you can check out our Prototype at this",
    "start": "759660",
    "end": "761700"
  },
  {
    "text": "GitHub repo and we'd love to talk to you",
    "start": "761700",
    "end": "764459"
  },
  {
    "text": "about your use case so please come meet",
    "start": "764459",
    "end": "766440"
  },
  {
    "text": "us we would we'd be very excited in",
    "start": "766440",
    "end": "768720"
  },
  {
    "text": "working with you towards enabling",
    "start": "768720",
    "end": "771000"
  },
  {
    "text": "distributed tracing uh for your",
    "start": "771000",
    "end": "773160"
  },
  {
    "text": "application",
    "start": "773160",
    "end": "774420"
  },
  {
    "text": "uh thank you",
    "start": "774420",
    "end": "777620"
  },
  {
    "text": "[Applause]",
    "start": "777730",
    "end": "780180"
  },
  {
    "text": "so any questions we we can take",
    "start": "780180",
    "end": "782339"
  },
  {
    "text": "questions",
    "start": "782339",
    "end": "784579"
  },
  {
    "text": "hi do you know what the like relative",
    "start": "793019",
    "end": "795480"
  },
  {
    "text": "cost is versus traditional",
    "start": "795480",
    "end": "798600"
  },
  {
    "text": "um distributed tracing not using headers",
    "start": "798600",
    "end": "800700"
  },
  {
    "text": "or something because we're in our case",
    "start": "800700",
    "end": "802680"
  },
  {
    "text": "our distribute tracing very expensive so",
    "start": "802680",
    "end": "805320"
  },
  {
    "text": "would this be like cheaper or more",
    "start": "805320",
    "end": "806760"
  },
  {
    "text": "expensive or",
    "start": "806760",
    "end": "808620"
  },
  {
    "text": "so we'd be piggybacking on existing sort",
    "start": "808620",
    "end": "811680"
  },
  {
    "text": "of logging about Envoy dots for requests",
    "start": "811680",
    "end": "813779"
  },
  {
    "text": "and request response mappings uh what we",
    "start": "813779",
    "end": "816120"
  },
  {
    "text": "would not be doing is actually going",
    "start": "816120",
    "end": "817620"
  },
  {
    "text": "inside the code and adding like code",
    "start": "817620",
    "end": "819540"
  },
  {
    "text": "there which can be really time consuming",
    "start": "819540",
    "end": "821820"
  },
  {
    "text": "for when you're dealing with like",
    "start": "821820",
    "end": "823260"
  },
  {
    "text": "thousands or hundreds of microservices",
    "start": "823260",
    "end": "826019"
  },
  {
    "text": "um in terms of the cost if you need to",
    "start": "826019",
    "end": "828300"
  },
  {
    "text": "store so end-to-end tracing does require",
    "start": "828300",
    "end": "830160"
  },
  {
    "text": "you to store the log so that we can do",
    "start": "830160",
    "end": "831899"
  },
  {
    "text": "the mapping so this is not exactly",
    "start": "831899",
    "end": "833820"
  },
  {
    "text": "online so you would there be a it'll be",
    "start": "833820",
    "end": "836399"
  },
  {
    "text": "a staggered effect in that you wait a",
    "start": "836399",
    "end": "837779"
  },
  {
    "text": "while for like a couple of seconds do",
    "start": "837779",
    "end": "839579"
  },
  {
    "text": "the mapping and then destroy the traces",
    "start": "839579",
    "end": "841380"
  },
  {
    "text": "that you're not interested in but it",
    "start": "841380",
    "end": "843899"
  },
  {
    "text": "does require you to save the traces for",
    "start": "843899",
    "end": "845700"
  },
  {
    "text": "that brief period where you can do the",
    "start": "845700",
    "end": "847139"
  },
  {
    "text": "mapping",
    "start": "847139",
    "end": "849500"
  },
  {
    "text": "thank you",
    "start": "850440",
    "end": "852560"
  },
  {
    "text": "hey um yeah so it's quite cool to to not",
    "start": "858060",
    "end": "861720"
  },
  {
    "text": "have to instrument the application I",
    "start": "861720",
    "end": "863339"
  },
  {
    "text": "think my question is",
    "start": "863339",
    "end": "864839"
  },
  {
    "text": "if it's not a hundred percent accurate",
    "start": "864839",
    "end": "866820"
  },
  {
    "text": "I'm I'm skeptical of how useful this",
    "start": "866820",
    "end": "869100"
  },
  {
    "text": "actually is because if you can't trust",
    "start": "869100",
    "end": "871920"
  },
  {
    "text": "it you're going to mislead people so I I",
    "start": "871920",
    "end": "874980"
  },
  {
    "text": "guess just like what are your thoughts",
    "start": "874980",
    "end": "876959"
  },
  {
    "text": "on that and if people don't know if it's",
    "start": "876959",
    "end": "880019"
  },
  {
    "text": "accurate or not what can they do with it",
    "start": "880019",
    "end": "882420"
  },
  {
    "text": "and I guess how you know is there a way",
    "start": "882420",
    "end": "884339"
  },
  {
    "text": "that you could tell people how confident",
    "start": "884339",
    "end": "886139"
  },
  {
    "text": "you are or like what what are your",
    "start": "886139",
    "end": "887699"
  },
  {
    "text": "future plans there right right that's a",
    "start": "887699",
    "end": "889980"
  },
  {
    "text": "great question so it is a tough problem",
    "start": "889980",
    "end": "892019"
  },
  {
    "text": "to solve so uh given that we cannot",
    "start": "892019",
    "end": "895079"
  },
  {
    "text": "actually instrument the application what",
    "start": "895079",
    "end": "897060"
  },
  {
    "text": "we can do is try to provide the best",
    "start": "897060",
    "end": "899160"
  },
  {
    "text": "accuracy possible and then for the",
    "start": "899160",
    "end": "901260"
  },
  {
    "text": "end-to-end traces that you you do make",
    "start": "901260",
    "end": "903240"
  },
  {
    "text": "available to the application developer",
    "start": "903240",
    "end": "904860"
  },
  {
    "text": "you we are able to assign a confidence",
    "start": "904860",
    "end": "907199"
  },
  {
    "text": "score which we can say which can like",
    "start": "907199",
    "end": "909899"
  },
  {
    "text": "you know relate to the developer that we",
    "start": "909899",
    "end": "911220"
  },
  {
    "text": "are like sort of 99 sure that this",
    "start": "911220",
    "end": "912899"
  },
  {
    "text": "mapping is correct and in cases of low",
    "start": "912899",
    "end": "915060"
  },
  {
    "text": "confidence developer rather not look at",
    "start": "915060",
    "end": "916800"
  },
  {
    "text": "those traces that's one uh the other is",
    "start": "916800",
    "end": "920760"
  },
  {
    "text": "that there is a chance to augment",
    "start": "920760",
    "end": "922380"
  },
  {
    "text": "information which is other than timing",
    "start": "922380",
    "end": "924480"
  },
  {
    "text": "so if we can use if you have like a",
    "start": "924480",
    "end": "927180"
  },
  {
    "text": "partially instrumented application where",
    "start": "927180",
    "end": "929519"
  },
  {
    "text": "some of the services are easier to",
    "start": "929519",
    "end": "930959"
  },
  {
    "text": "modify but the Legacy applications are",
    "start": "930959",
    "end": "932579"
  },
  {
    "text": "not or the proprietary applications",
    "start": "932579",
    "end": "934139"
  },
  {
    "text": "system are not amenable to changing",
    "start": "934139",
    "end": "936060"
  },
  {
    "text": "their code then we could do timing based",
    "start": "936060",
    "end": "938279"
  },
  {
    "text": "analysis or our technique for just those",
    "start": "938279",
    "end": "939779"
  },
  {
    "text": "thoughts but you could still get the",
    "start": "939779",
    "end": "941399"
  },
  {
    "text": "entire end-to-end Trace by leveraging",
    "start": "941399",
    "end": "943680"
  },
  {
    "text": "the existing uh sort of instrumentation",
    "start": "943680",
    "end": "946560"
  },
  {
    "text": "so just to add to that",
    "start": "946560",
    "end": "949320"
  },
  {
    "text": "um there are uh for example if you have",
    "start": "949320",
    "end": "952380"
  },
  {
    "text": "aggregate queries if you want to know",
    "start": "952380",
    "end": "954360"
  },
  {
    "text": "about you know some latency distribution",
    "start": "954360",
    "end": "957540"
  },
  {
    "text": "for some subset of queries then we",
    "start": "957540",
    "end": "960300"
  },
  {
    "text": "believe that you know good approximate",
    "start": "960300",
    "end": "962279"
  },
  {
    "text": "accuracy should be fine for that",
    "start": "962279",
    "end": "964800"
  },
  {
    "text": "um",
    "start": "964800",
    "end": "965519"
  },
  {
    "text": "so those are the kinds of queries that",
    "start": "965519",
    "end": "967500"
  },
  {
    "text": "would definitely be the use case and if",
    "start": "967500",
    "end": "969959"
  },
  {
    "text": "you provide the confidence score then",
    "start": "969959",
    "end": "972000"
  },
  {
    "text": "the individual requests traces can be",
    "start": "972000",
    "end": "975000"
  },
  {
    "text": "useful to",
    "start": "975000",
    "end": "977480"
  },
  {
    "text": "yeah I think I have the same question",
    "start": "987420",
    "end": "989579"
  },
  {
    "text": "um a little bit what what Matt was",
    "start": "989579",
    "end": "991260"
  },
  {
    "text": "asking in these large-scale production",
    "start": "991260",
    "end": "993899"
  },
  {
    "text": "systems um like not having something",
    "start": "993899",
    "end": "996899"
  },
  {
    "text": "that's 100 is is and we cannot trust it",
    "start": "996899",
    "end": "999600"
  },
  {
    "text": "it's very hard because you you know",
    "start": "999600",
    "end": "1001639"
  },
  {
    "text": "you're always optimizing the bottom or",
    "start": "1001639",
    "end": "1004160"
  },
  {
    "text": "top point one percent anyway so it's",
    "start": "1004160",
    "end": "1006440"
  },
  {
    "text": "very hard my question is um",
    "start": "1006440",
    "end": "1009139"
  },
  {
    "text": "does your",
    "start": "1009139",
    "end": "1010820"
  },
  {
    "text": "um prototype include the ability to only",
    "start": "1010820",
    "end": "1013279"
  },
  {
    "text": "report on spans where you have a hundred",
    "start": "1013279",
    "end": "1016160"
  },
  {
    "text": "percent confidence and just disregard",
    "start": "1016160",
    "end": "1018259"
  },
  {
    "text": "the rest",
    "start": "1018259",
    "end": "1019940"
  },
  {
    "text": "I'm sorry could you repeat that last",
    "start": "1019940",
    "end": "1021320"
  },
  {
    "text": "part",
    "start": "1021320",
    "end": "1022339"
  },
  {
    "text": "does your prototype have the ability to",
    "start": "1022339",
    "end": "1024860"
  },
  {
    "text": "only report spans that have a hundred",
    "start": "1024860",
    "end": "1027798"
  },
  {
    "text": "percent confidence",
    "start": "1027799",
    "end": "1029120"
  },
  {
    "text": "no so we can report all of them and then",
    "start": "1029120",
    "end": "1031400"
  },
  {
    "text": "attach the confidence score to them so",
    "start": "1031400",
    "end": "1032959"
  },
  {
    "text": "that the developer can decide to look at",
    "start": "1032959",
    "end": "1034339"
  },
  {
    "text": "them if they want to but that's your",
    "start": "1034339",
    "end": "1036140"
  },
  {
    "text": "overall score right it's it's no no so",
    "start": "1036140",
    "end": "1038540"
  },
  {
    "text": "you get per matching you can assign per",
    "start": "1038540",
    "end": "1040040"
  },
  {
    "text": "matching okay per Trace so then they",
    "start": "1040040",
    "end": "1041959"
  },
  {
    "text": "could essentially filter out all the",
    "start": "1041959",
    "end": "1043280"
  },
  {
    "text": "ones that are not 100 and look at those",
    "start": "1043280",
    "end": "1044900"
  },
  {
    "text": "exactly okay right",
    "start": "1044900",
    "end": "1046938"
  },
  {
    "text": "um to answer your earlier question so uh",
    "start": "1046939",
    "end": "1049820"
  },
  {
    "text": "if you do have a large microservice",
    "start": "1049820",
    "end": "1051260"
  },
  {
    "text": "application where uh you know you do",
    "start": "1051260",
    "end": "1053960"
  },
  {
    "text": "care about that one request that's sort",
    "start": "1053960",
    "end": "1056000"
  },
  {
    "text": "of seemingly failing it's a really hard",
    "start": "1056000",
    "end": "1057679"
  },
  {
    "text": "problem to solve uh but what I want to",
    "start": "1057679",
    "end": "1060080"
  },
  {
    "text": "highlight is that you could have",
    "start": "1060080",
    "end": "1061520"
  },
  {
    "text": "scenarios where in those in that large",
    "start": "1061520",
    "end": "1063140"
  },
  {
    "text": "application where you have systems that",
    "start": "1063140",
    "end": "1065240"
  },
  {
    "text": "just not just do not cooperate you don't",
    "start": "1065240",
    "end": "1067220"
  },
  {
    "text": "have like you let's say you have a",
    "start": "1067220",
    "end": "1068539"
  },
  {
    "text": "legacy application that does not",
    "start": "1068539",
    "end": "1069740"
  },
  {
    "text": "propagate the header you in that",
    "start": "1069740",
    "end": "1072260"
  },
  {
    "text": "scenario you just do not have the",
    "start": "1072260",
    "end": "1073640"
  },
  {
    "text": "end-to-end trace right so if header",
    "start": "1073640",
    "end": "1075980"
  },
  {
    "text": "propagation was completely possible for",
    "start": "1075980",
    "end": "1077539"
  },
  {
    "text": "every single service then yes then uh",
    "start": "1077539",
    "end": "1080299"
  },
  {
    "text": "that would be the preferred author but",
    "start": "1080299",
    "end": "1082039"
  },
  {
    "text": "you know and the question for me is then",
    "start": "1082039",
    "end": "1084380"
  },
  {
    "text": "either I don't have any tracing or I",
    "start": "1084380",
    "end": "1086539"
  },
  {
    "text": "have tracing that I may or may not be",
    "start": "1086539",
    "end": "1088400"
  },
  {
    "text": "able to trust",
    "start": "1088400",
    "end": "1089780"
  },
  {
    "text": "right so it's and if that's not clear to",
    "start": "1089780",
    "end": "1092419"
  },
  {
    "text": "the developer then that might be",
    "start": "1092419",
    "end": "1093799"
  },
  {
    "text": "misleading and that might be actually",
    "start": "1093799",
    "end": "1095240"
  },
  {
    "text": "causing more issues so that's a good",
    "start": "1095240",
    "end": "1097220"
  },
  {
    "text": "point yeah thank you",
    "start": "1097220",
    "end": "1100720"
  },
  {
    "text": "um I'm wondering about how exceptional",
    "start": "1102860",
    "end": "1105320"
  },
  {
    "text": "cases like timeouts look in your system",
    "start": "1105320",
    "end": "1107960"
  },
  {
    "text": "whether it like completely blows up your",
    "start": "1107960",
    "end": "1109700"
  },
  {
    "text": "ability to solve the trace or if they're",
    "start": "1109700",
    "end": "1113240"
  },
  {
    "text": "absorbed by the rest of the constraints",
    "start": "1113240",
    "end": "1115280"
  },
  {
    "text": "that you have right so that's a good",
    "start": "1115280",
    "end": "1117740"
  },
  {
    "text": "question so we do so we do consider",
    "start": "1117740",
    "end": "1120260"
  },
  {
    "text": "those cases and that's ongoing work in",
    "start": "1120260",
    "end": "1122000"
  },
  {
    "text": "that like for example you could have",
    "start": "1122000",
    "end": "1123200"
  },
  {
    "text": "request caching where like you know a",
    "start": "1123200",
    "end": "1125419"
  },
  {
    "text": "response doesn't go out to a",
    "start": "1125419",
    "end": "1126440"
  },
  {
    "text": "microservice and they just cached then",
    "start": "1126440",
    "end": "1128179"
  },
  {
    "text": "it goes out or you could have like",
    "start": "1128179",
    "end": "1129679"
  },
  {
    "text": "request retries or patching of requests",
    "start": "1129679",
    "end": "1131840"
  },
  {
    "text": "so what we can do is that so what we do",
    "start": "1131840",
    "end": "1133940"
  },
  {
    "text": "is right now we use a developer",
    "start": "1133940",
    "end": "1135440"
  },
  {
    "text": "environment to try out these very cases",
    "start": "1135440",
    "end": "1137120"
  },
  {
    "text": "all these cases to figure out what is",
    "start": "1137120",
    "end": "1138919"
  },
  {
    "text": "the scope or what's the space of",
    "start": "1138919",
    "end": "1140720"
  },
  {
    "text": "possibilities and then based off the",
    "start": "1140720",
    "end": "1142880"
  },
  {
    "text": "real-time measurements we get we can use",
    "start": "1142880",
    "end": "1144919"
  },
  {
    "text": "that combination of that information to",
    "start": "1144919",
    "end": "1146780"
  },
  {
    "text": "figure out whether oh this looks like",
    "start": "1146780",
    "end": "1148580"
  },
  {
    "text": "caching has happened or this scenario",
    "start": "1148580",
    "end": "1150380"
  },
  {
    "text": "looks like matching has occurred and",
    "start": "1150380",
    "end": "1152000"
  },
  {
    "text": "that's why the timings are so are the",
    "start": "1152000",
    "end": "1153860"
  },
  {
    "text": "spans collected also and then combine",
    "start": "1153860",
    "end": "1155660"
  },
  {
    "text": "that information to give the right",
    "start": "1155660",
    "end": "1157460"
  },
  {
    "text": "answer uh but this space is quite open",
    "start": "1157460",
    "end": "1160100"
  },
  {
    "text": "because there could be like a Marathi",
    "start": "1160100",
    "end": "1162080"
  },
  {
    "text": "pattern so you could say every seventh",
    "start": "1162080",
    "end": "1164000"
  },
  {
    "text": "response I'm going to generate a like a",
    "start": "1164000",
    "end": "1166039"
  },
  {
    "text": "request to a different service and those",
    "start": "1166039",
    "end": "1167840"
  },
  {
    "text": "kinds of things are harder but we think",
    "start": "1167840",
    "end": "1170179"
  },
  {
    "text": "that this solution can apply to a broad",
    "start": "1170179",
    "end": "1172280"
  },
  {
    "text": "class of applications that do not have",
    "start": "1172280",
    "end": "1174620"
  },
  {
    "text": "very crazy patterns so it's still using",
    "start": "1174620",
    "end": "1176000"
  },
  {
    "text": "by a wide variety of applications yeah",
    "start": "1176000",
    "end": "1180700"
  },
  {
    "text": "yes",
    "start": "1192020",
    "end": "1194919"
  },
  {
    "text": "right",
    "start": "1199280",
    "end": "1201700"
  },
  {
    "text": "right so so the problem is that Envoy",
    "start": "1202580",
    "end": "1205460"
  },
  {
    "text": "can pass the request onto the",
    "start": "1205460",
    "end": "1207020"
  },
  {
    "text": "application but it's the application",
    "start": "1207020",
    "end": "1208880"
  },
  {
    "text": "that decides which other service I want",
    "start": "1208880",
    "end": "1210860"
  },
  {
    "text": "to talk to what's the semantic of this",
    "start": "1210860",
    "end": "1212960"
  },
  {
    "text": "application flow which are the service",
    "start": "1212960",
    "end": "1214160"
  },
  {
    "text": "do I talk to and that's the one that",
    "start": "1214160",
    "end": "1215960"
  },
  {
    "text": "generates a new HTTP connection and",
    "start": "1215960",
    "end": "1217580"
  },
  {
    "text": "sends it so Envoy even from online",
    "start": "1217580",
    "end": "1219500"
  },
  {
    "text": "there's no way to know which outgoing",
    "start": "1219500",
    "end": "1222020"
  },
  {
    "text": "request corresponds to which incoming",
    "start": "1222020",
    "end": "1224179"
  },
  {
    "text": "request it can hand over the request of",
    "start": "1224179",
    "end": "1226280"
  },
  {
    "text": "the service but it cannot do the",
    "start": "1226280",
    "end": "1227360"
  },
  {
    "text": "matching by itself",
    "start": "1227360",
    "end": "1228919"
  },
  {
    "text": "yeah that that matching is buried inside",
    "start": "1228919",
    "end": "1231799"
  },
  {
    "text": "the application code so there's no way",
    "start": "1231799",
    "end": "1233720"
  },
  {
    "text": "of uh getting invoy to give us their",
    "start": "1233720",
    "end": "1235940"
  },
  {
    "text": "that mapping",
    "start": "1235940",
    "end": "1238039"
  },
  {
    "text": "like only the application knows",
    "start": "1238039",
    "end": "1241779"
  },
  {
    "text": "yeah yeah so if the application chooses",
    "start": "1244760",
    "end": "1247700"
  },
  {
    "text": "to propagate headers then we are in good",
    "start": "1247700",
    "end": "1249260"
  },
  {
    "text": "shape but otherwise we don't have",
    "start": "1249260",
    "end": "1251000"
  },
  {
    "text": "anything else",
    "start": "1251000",
    "end": "1253160"
  },
  {
    "text": "there was a question",
    "start": "1253160",
    "end": "1254660"
  },
  {
    "text": "oh sure",
    "start": "1254660",
    "end": "1256160"
  },
  {
    "text": "all right thank you",
    "start": "1256160",
    "end": "1257840"
  },
  {
    "text": "[Applause]",
    "start": "1257840",
    "end": "1261409"
  }
]