[
  {
    "text": "so hello everyone I'm K from T and here's the session a of two PRS safely",
    "start": "399",
    "end": "6960"
  },
  {
    "text": "extending the C schedule with So today we're going to discuss",
    "start": "6960",
    "end": "12480"
  },
  {
    "text": "about uh how we make the wasm extension on schu and you know how it's started",
    "start": "12480",
    "end": "18800"
  },
  {
    "text": "how it's designed and the challenges we faced or we are facing and we'll",
    "start": "18800",
    "end": "24279"
  },
  {
    "text": "continue we we will um compare the wasm extension with other existing extensibilities",
    "start": "24279",
    "end": "30720"
  },
  {
    "text": "uh that we already having and yeah see some pros and cons and try to help you",
    "start": "30720",
    "end": "36559"
  },
  {
    "text": "understand the um you know how this kind of uh wasm extension works and looks",
    "start": "36559",
    "end": "43160"
  },
  {
    "text": "like yep so let's get it started so I'm K from Japan so this is",
    "start": "43160",
    "end": "50360"
  },
  {
    "text": "my first time visiting back and I'm working for Tate building the sub my",
    "start": "50360",
    "end": "55879"
  },
  {
    "text": "solution for customers and I've been I've been contributing to gr this around",
    "start": "55879",
    "end": "62760"
  },
  {
    "text": "almost four years three years now and I usually focus on six scheduling as an",
    "start": "62760",
    "end": "69119"
  },
  {
    "text": "approver and has led many major features development so right so that's pretty",
    "start": "69119",
    "end": "76320"
  },
  {
    "text": "much about me so in this talk first I'll go through",
    "start": "76320",
    "end": "82439"
  },
  {
    "text": "the basics from uh basics of uh combin the schedule and then we'll be you know",
    "start": "82439",
    "end": "87880"
  },
  {
    "text": "sifting into the main topic so let's start from",
    "start": "87880",
    "end": "93159"
  },
  {
    "text": "it wait all right so command schedule is one of the control PR components so it's",
    "start": "93320",
    "end": "100360"
  },
  {
    "text": "responsible to find the best node for each you know un schedulable part",
    "start": "100360",
    "end": "106079"
  },
  {
    "text": "and it considers a lot of uh factors like resource part Affinity no Affinity",
    "start": "106079",
    "end": "112799"
  },
  {
    "text": "image locality Etc [Music]",
    "start": "112799",
    "end": "118119"
  },
  {
    "text": "and each of those factors is implemented as a schedule of plugin so for example like uh we have",
    "start": "118119",
    "end": "126039"
  },
  {
    "text": "resource feed plugin that is responsible to um determine uh the node based on the",
    "start": "126039",
    "end": "132319"
  },
  {
    "text": "resource capacity so the schedule is basically composed of this kind of many",
    "start": "132319",
    "end": "138200"
  },
  {
    "text": "plugins and those plugins and the interfaces are",
    "start": "138200",
    "end": "146200"
  },
  {
    "text": "actually based on the architecture called scheduling framework so it's the fundamental architecture in the sched",
    "start": "146200",
    "end": "153239"
  },
  {
    "text": "and it's like a plugable and extensible so it defines multiple extension points",
    "start": "153239",
    "end": "160360"
  },
  {
    "text": "that you know a prog can do something based on the extension point and at",
    "start": "160360",
    "end": "167840"
  },
  {
    "text": "Future extension point PR in future some no and at at school extension point PR",
    "start": "167840",
    "end": "174760"
  },
  {
    "text": "scores nodes so let's see how it works briefly",
    "start": "174760",
    "end": "180440"
  },
  {
    "text": "so the overall scheduling for will be like uh let's say we have four nodes and",
    "start": "180440",
    "end": "187040"
  },
  {
    "text": "we have two progs each for future and school extension point and oh",
    "start": "187040",
    "end": "193599"
  },
  {
    "text": "wait so future happens at first and some nodes are rejected because of you know",
    "start": "193599",
    "end": "199360"
  },
  {
    "text": "for example maybe lack of resources or lack of um available Port uh doesn't",
    "start": "199360",
    "end": "205760"
  },
  {
    "text": "match any node Affinity that Port has Etc and so in this example uh only node one",
    "start": "205760",
    "end": "212879"
  },
  {
    "text": "and node two go through the you know all the filters registered here and after that uh scoring",
    "start": "212879",
    "end": "223000"
  },
  {
    "text": "happenings yeah and no one and not you know scored by each score prog and no",
    "start": "223000",
    "end": "230480"
  },
  {
    "text": "may you know get the high score when it has an image in it cash or when it's you",
    "start": "230480",
    "end": "238400"
  },
  {
    "text": "know uh for example much is the soft node Affinity of the part so there are",
    "start": "238400",
    "end": "244079"
  },
  {
    "text": "many factors of scoring as well So eventually we get the total score",
    "start": "244079",
    "end": "250439"
  },
  {
    "text": "right uh so in this case node two is picked up for this part so this is the",
    "start": "250439",
    "end": "257440"
  },
  {
    "text": "over overall FL of scheduling in the com the schedu and I just show you uh just two",
    "start": "257440",
    "end": "265600"
  },
  {
    "text": "extension points but the schedule actually has a lot more extension points",
    "start": "265600",
    "end": "271520"
  },
  {
    "text": "and each of them has specific responsibility like we saw with you know fut and score so those many extension",
    "start": "271520",
    "end": "280560"
  },
  {
    "text": "points uh make this framework you know flexible to support many wi scheduling",
    "start": "280560",
    "end": "286919"
  },
  {
    "text": "use cases in the world right so we've quickly gone",
    "start": "286919",
    "end": "292880"
  },
  {
    "text": "through the basics of the schedu and let's dive into the main main topic from",
    "start": "292880",
    "end": "298160"
  },
  {
    "text": "it so extensibility is very important for",
    "start": "298160",
    "end": "305520"
  },
  {
    "text": "the schedule because as you know comp is used for various use cases and it's",
    "start": "305520",
    "end": "311240"
  },
  {
    "text": "impossible for us I mean for maintainers to implement all the features for every",
    "start": "311240",
    "end": "318520"
  },
  {
    "text": "users right uh so but on the other hand uh Quant schedule has been matured uh",
    "start": "318520",
    "end": "325479"
  },
  {
    "text": "for a very long time with you know tons of bar",
    "start": "325479",
    "end": "330720"
  },
  {
    "text": "contributions so it's also difficult for users to build their you know own schedule from scratch for their use case",
    "start": "330720",
    "end": "338680"
  },
  {
    "text": "so we started the extensibility work in the schedule so that we can I mean maintainers can focus on maintaining the",
    "start": "338680",
    "end": "346360"
  },
  {
    "text": "core framework and the core you know cin buildin scheding features and users can",
    "start": "346360",
    "end": "354680"
  },
  {
    "text": "just use our extensibility to build uh you know things spefic specific",
    "start": "354680",
    "end": "361080"
  },
  {
    "text": "for their own use cases but without inventing the schedule from",
    "start": "361080",
    "end": "367759"
  },
  {
    "text": "scratch all right so currently we have two extensibilities in the schedule and",
    "start": "369599",
    "end": "375759"
  },
  {
    "text": "one is web it's also called ex extender and another one is go program so let's",
    "start": "375759",
    "end": "383160"
  },
  {
    "text": "see each of them the first one is web uh this feature is called Ender and it's",
    "start": "383160",
    "end": "392240"
  },
  {
    "text": "our like first attempt uh to provide the extensibility from the schedule so when",
    "start": "392240",
    "end": "397960"
  },
  {
    "text": "we started this we didn't even have the con this no uh the scheding",
    "start": "397960",
    "end": "403199"
  },
  {
    "text": "framework uh so there are four points that users can you know inject their own",
    "start": "403199",
    "end": "409440"
  },
  {
    "text": "logic via web and each at each point registered we",
    "start": "409440",
    "end": "415759"
  },
  {
    "text": "is called and users can you know control the schedu r decision based on the",
    "start": "415759",
    "end": "421599"
  },
  {
    "text": "response from the web folks so this extension allows users to",
    "start": "421599",
    "end": "426960"
  },
  {
    "text": "implement the you know specific um scheduling logic in uh web and but",
    "start": "426960",
    "end": "434800"
  },
  {
    "text": "without implementing the schedule from scratch right um so the advantage of",
    "start": "434800",
    "end": "440599"
  },
  {
    "text": "this extensibility this we uh based extens extensibility is the ease of its",
    "start": "440599",
    "end": "446720"
  },
  {
    "text": "use uh users can just insert the logic just by you know registering the web",
    "start": "446720",
    "end": "452280"
  },
  {
    "text": "URLs and they don't even need to rebuild the schedule it's just the configuration",
    "start": "452280",
    "end": "458080"
  },
  {
    "text": "stuff and they can you know select the like any programming languages that",
    "start": "458080",
    "end": "466080"
  },
  {
    "text": "they prefer to implement the web so this is flexible for users but it has uh",
    "start": "466080",
    "end": "473919"
  },
  {
    "text": "certain downsides as well so uh the overhead and the lack of",
    "start": "473919",
    "end": "481639"
  },
  {
    "text": "functionalities so especially the letter is critical Cu uh as I said it has four",
    "start": "481639",
    "end": "488400"
  },
  {
    "text": "points it has only four points and that users can register web so it's not",
    "start": "488400",
    "end": "494440"
  },
  {
    "text": "enough as we see the framework has a lot of a lot more of extension points but it",
    "start": "494440",
    "end": "500919"
  },
  {
    "text": "only has four but we can't just increase the number of ref points because of the",
    "start": "500919",
    "end": "507120"
  },
  {
    "text": "overhead cuz frequent API between the schedule and the web uh would slow down",
    "start": "507120",
    "end": "513080"
  },
  {
    "text": "the schedule too much so we started the scheduling",
    "start": "513080",
    "end": "519240"
  },
  {
    "text": "framework that described already um so actually the scheduling framework is",
    "start": "519240",
    "end": "524399"
  },
  {
    "text": "motivated from the uh web extensibility so we've implemented several more",
    "start": "524399",
    "end": "531160"
  },
  {
    "text": "extension points that uh they can cover most of um scheduling use cases in the",
    "start": "531160",
    "end": "537680"
  },
  {
    "text": "world and also we moved all our scheduling features I mean building",
    "start": "537680",
    "end": "543000"
  },
  {
    "text": "features into each PR so the framework ARS users outside uh",
    "start": "543000",
    "end": "549680"
  },
  {
    "text": "outside the Upstream to integrate their own you know scheduling logic uh",
    "start": "549680",
    "end": "555880"
  },
  {
    "text": "scheduling progs in order to satisfy the use cases without concerning the complex",
    "start": "555880",
    "end": "561519"
  },
  {
    "text": "scheding core implementation so like we saw in the previous slide uh the framework provides",
    "start": "561519",
    "end": "570000"
  },
  {
    "text": "a lot of extension points right and on the contrary um manyu functions are",
    "start": "570000",
    "end": "575800"
  },
  {
    "text": "exposed from the schedule to prog so that they can optionally uh do something",
    "start": "575800",
    "end": "581800"
  },
  {
    "text": "more uh like directory asking something in uh to the to the scheduler side so as",
    "start": "581800",
    "end": "588920"
  },
  {
    "text": "a result uh the scheduling framework nowadays scheduling framework will go pruin nowadays satisfy wider use cases",
    "start": "588920",
    "end": "596640"
  },
  {
    "text": "in the world and each function called is you know just a Goan function call it's",
    "start": "596640",
    "end": "601800"
  },
  {
    "text": "not that you know there's no such overhead right um but it has it also has",
    "start": "601800",
    "end": "610640"
  },
  {
    "text": "a downside of troublesomeness uh it doesn't support the dynamic loading of the progin so you when you want to use",
    "start": "610640",
    "end": "619360"
  },
  {
    "text": "it uh you have to you know F the schedule integrate your prog into the",
    "start": "619360",
    "end": "624839"
  },
  {
    "text": "schedule then you have to reild it and replace the existing schedule with your",
    "start": "624839",
    "end": "630640"
  },
  {
    "text": "with your new one so that's kind of troublesome to build",
    "start": "630640",
    "end": "637360"
  },
  {
    "text": "up all right so to make more uh user friendly extensibility we started some",
    "start": "638320",
    "end": "645000"
  },
  {
    "text": "um we started to you know explore the wasm extension here",
    "start": "645000",
    "end": "652720"
  },
  {
    "text": "yep so web assembly is a way to safely run code compiled in other languages so",
    "start": "654600",
    "end": "661519"
  },
  {
    "text": "wasm One Time executes wasm guest and wasum guest Imports the functions from host so they cannot do other other stuff",
    "start": "661519",
    "end": "670639"
  },
  {
    "text": "so some of you may think you know what web assembly is a bro stuff or in the qu",
    "start": "670639",
    "end": "676360"
  },
  {
    "text": "native stock then there's uh you know round W stuff for currently but another",
    "start": "676360",
    "end": "683279"
  },
  {
    "text": "use case of bom here is using it to provide um extensibility and so for",
    "start": "683279",
    "end": "689800"
  },
  {
    "text": "example enoy already has a capability of RM extension and the idea is that the",
    "start": "689800",
    "end": "695480"
  },
  {
    "text": "user Implement their core logic core yeah scheduling logic uh and compil",
    "start": "695480",
    "end": "704200"
  },
  {
    "text": "it in was binary right and the core component here the schedule embed the",
    "start": "704200",
    "end": "710680"
  },
  {
    "text": "wasm one time and lo this bom guest that user created and runs it",
    "start": "710680",
    "end": "719839"
  },
  {
    "text": "all right so with bom extension so all the you know functionalities of uh scheduling framework are I mean will be",
    "start": "721320",
    "end": "729560"
  },
  {
    "text": "available so it's as extensible as uh goong progins and also it's less",
    "start": "729560",
    "end": "736240"
  },
  {
    "text": "Troublesome to sell up because it doesn't require any rebuild or uh rebuild or replacement of the schedule",
    "start": "736240",
    "end": "743880"
  },
  {
    "text": "uh users can just you know distribute their uh what the module be URL or",
    "start": "743880",
    "end": "749839"
  },
  {
    "text": "something then you uh the command schedule can load it from there but and uh we also have um tining",
    "start": "749839",
    "end": "759959"
  },
  {
    "text": "SDK uh but technically users can uh Implement their uh wasn't binary uh",
    "start": "759959",
    "end": "767519"
  },
  {
    "text": "compiled from uh any languages so that they can Del some flexibility of a",
    "start": "767519",
    "end": "773519"
  },
  {
    "text": "language CH language Choice as well but the downside here is that uh you if you",
    "start": "773519",
    "end": "779800"
  },
  {
    "text": "compare was and goong pling I mean scheduling framework extensibility was",
    "start": "779800",
    "end": "785720"
  },
  {
    "text": "module still have an overhead of course also the overhead is much smaller than",
    "start": "785720",
    "end": "791680"
  },
  {
    "text": "the web um also wasm has some SB peculiar",
    "start": "791680",
    "end": "798880"
  },
  {
    "text": "limitations and maybe some of you may not familiar with",
    "start": "798880",
    "end": "804720"
  },
  {
    "text": "it so here is the so here is the some uh um you know benchmark result so this is",
    "start": "804720",
    "end": "812360"
  },
  {
    "text": "just a default schedule no extension is inserted and this is uh so wasm",
    "start": "812360",
    "end": "820440"
  },
  {
    "text": "extension uh the schedule with a wasm extension so you can see a small overhead in",
    "start": "820440",
    "end": "826240"
  },
  {
    "text": "the from this one",
    "start": "826240",
    "end": "831560"
  },
  {
    "text": "and right so this is we Bas one so you see um",
    "start": "831959",
    "end": "839160"
  },
  {
    "text": "it's obviously slower than this one and this one",
    "start": "839160",
    "end": "845600"
  },
  {
    "text": "right all right so can the wasm extension eventually replace all the you know goong PR once",
    "start": "846240",
    "end": "853519"
  },
  {
    "text": "it's solid uh the answer is I would say no because um as we saw the wasm",
    "start": "853519",
    "end": "860399"
  },
  {
    "text": "extension cannot avoid the overhead this is critical cuz uh generally speaking if",
    "start": "860399",
    "end": "865680"
  },
  {
    "text": "your cluster is super big then your schedule needs to be faster enough to handle all parts created so if your",
    "start": "865680",
    "end": "873920"
  },
  {
    "text": "cluster gets bigger and bigger and you know at some point the overhead uh from",
    "start": "873920",
    "end": "879199"
  },
  {
    "text": "wasm extension become maybe become unaccept",
    "start": "879199",
    "end": "884600"
  },
  {
    "text": "unacceptable and if you need to handle maybe tons of various objects in your",
    "start": "884600",
    "end": "890920"
  },
  {
    "text": "scheduling then the overhead will be also bigger this is another factor that",
    "start": "890920",
    "end": "896839"
  },
  {
    "text": "makes your BM extension slower so you maybe have to you know pay attention to",
    "start": "896839",
    "end": "903839"
  },
  {
    "text": "such overhead as well so the point is where you can make a compromise uh com",
    "start": "903839",
    "end": "910360"
  },
  {
    "text": "compromise uh between the extensibility and the performance so if your crust is super big then maybe you can choose you",
    "start": "910360",
    "end": "919480"
  },
  {
    "text": "you only have to choose Goan PR only that's your the only option but your",
    "start": "919480",
    "end": "926480"
  },
  {
    "text": "course is more enough then maybe you can choose plusma extension and your cross is super small then even",
    "start": "926480",
    "end": "934360"
  },
  {
    "text": "you can choose the web as well so you have to choose which is the",
    "start": "934360",
    "end": "940800"
  },
  {
    "text": "best for you based on your requirement of the",
    "start": "940800",
    "end": "945240"
  },
  {
    "text": "cluster all right so from here let's dive into the BM extension I'm wondering how many how much time",
    "start": "947440",
    "end": "955000"
  },
  {
    "text": "I have right so Kum schedu is implemented in goang",
    "start": "955000",
    "end": "962399"
  },
  {
    "text": "and we are using the aome waser to embed the wasm one time here",
    "start": "962399",
    "end": "967580"
  },
  {
    "text": "[Music] um so we actually implemented this uh",
    "start": "967580",
    "end": "972759"
  },
  {
    "text": "wasm extension as goong PR and this goong plin loads the was module that",
    "start": "972759",
    "end": "979600"
  },
  {
    "text": "users created and run them on V di",
    "start": "979600",
    "end": "985000"
  },
  {
    "text": "mentioned so the configuration looks like this as I said uh users can uh load",
    "start": "985279",
    "end": "991600"
  },
  {
    "text": "their wasm binary from maybe from files or",
    "start": "991600",
    "end": "996639"
  },
  {
    "text": "from uh remote host uh so it's easy to",
    "start": "996639",
    "end": "1002639"
  },
  {
    "text": "distribute and when wasm go on pling receives the function calls from scheduling framework it fors basically",
    "start": "1003440",
    "end": "1010399"
  },
  {
    "text": "just fors the function calls to wasm",
    "start": "1010399",
    "end": "1014680"
  },
  {
    "text": "module so what a module basically you know expose the expose the similar",
    "start": "1016480",
    "end": "1021959"
  },
  {
    "text": "function C like future and school and as you can guess each of them is just",
    "start": "1021959",
    "end": "1027798"
  },
  {
    "text": "corresponding to the same extension point in the framework so the interface between the scheduling as between the",
    "start": "1027799",
    "end": "1034720"
  },
  {
    "text": "schedu side and what module site is called AI it's application binary",
    "start": "1034720",
    "end": "1041438"
  },
  {
    "text": "interface and users have to implement their own you know wasm modules based on",
    "start": "1041439",
    "end": "1046558"
  },
  {
    "text": "the Avis that we Define",
    "start": "1046559",
    "end": "1050760"
  },
  {
    "text": "also sometimes uh the wasm module has to get more data from the schedu side so uh",
    "start": "1052360",
    "end": "1058559"
  },
  {
    "text": "in such case the W was module can call some functions exposed from the host ex",
    "start": "1058559",
    "end": "1065400"
  },
  {
    "text": "exposed from the scheduler in this case and those host functions uh you",
    "start": "1065400",
    "end": "1072559"
  },
  {
    "text": "know those host function makes uh there was a module available to do some more",
    "start": "1072559",
    "end": "1078840"
  },
  {
    "text": "extra work and as I said as I mentioned uh we",
    "start": "1078840",
    "end": "1086559"
  },
  {
    "text": "have tin angle SDK so I said the guest has to implement",
    "start": "1086559",
    "end": "1092520"
  },
  {
    "text": "the abis but it's going to be a tough work right uh",
    "start": "1092520",
    "end": "1097799"
  },
  {
    "text": "CU you know uh I just said abis but",
    "start": "1097799",
    "end": "1102960"
  },
  {
    "text": "there tons of function that has to be implemented so yeah we prob the SDK to make it",
    "start": "1102960",
    "end": "1110480"
  },
  {
    "text": "easier for people to create B modules and the SDK allows users to develop b",
    "start": "1110480",
    "end": "1116320"
  },
  {
    "text": "modules with a very similar experience with Goan plugins so in Goan plugins uh we have",
    "start": "1116320",
    "end": "1124480"
  },
  {
    "text": "actually uh the scheduling framework uh we have this kind of interface",
    "start": "1124480",
    "end": "1130919"
  },
  {
    "text": "and it's the same it's not same but very similar in uh wasm extension too so you",
    "start": "1130919",
    "end": "1137960"
  },
  {
    "text": "just need to mement the interfaces and the AI will be just implemented uh",
    "start": "1137960",
    "end": "1146159"
  },
  {
    "text": "background so the question here is why we selected tining or not go uh because",
    "start": "1148080",
    "end": "1153559"
  },
  {
    "text": "uh golang was Target uh did not uh supported support the some ex exported",
    "start": "1153559",
    "end": "1162159"
  },
  {
    "text": "functions when we started this project uh but actually the spot is coming it's",
    "start": "1162159",
    "end": "1168360"
  },
  {
    "text": "already I mean merged so we are planning actually planning to explore Goan SDK",
    "start": "1168360",
    "end": "1175600"
  },
  {
    "text": "with them as well in the future so when you craft the extension",
    "start": "1175600",
    "end": "1183799"
  },
  {
    "text": "with BM uh one big thing surprising you is that was only support numeric types",
    "start": "1183799",
    "end": "1190559"
  },
  {
    "text": "so we cannot Define the function like that so directory pass Port from uh",
    "start": "1190559",
    "end": "1198120"
  },
  {
    "text": "schedule to basm guest uh this kind of function cannot be you know defined uh",
    "start": "1198120",
    "end": "1206400"
  },
  {
    "text": "so and also because of the uh sound soundbox limitation the guest cannot",
    "start": "1206400",
    "end": "1212520"
  },
  {
    "text": "access the host's um memory directory uh which means you cannot pass the object",
    "start": "1212520",
    "end": "1218640"
  },
  {
    "text": "by reference to you uh so how can we transfer this kind of object between the",
    "start": "1218640",
    "end": "1224280"
  },
  {
    "text": "host and the progs",
    "start": "1224280",
    "end": "1227840"
  },
  {
    "text": "so the point is that obviously host can read or write things into uh the guest memory",
    "start": "1229559",
    "end": "1238360"
  },
  {
    "text": "right so we basically just so the guest asks the scheduler to",
    "start": "1238360",
    "end": "1245799"
  },
  {
    "text": "put part into this address and the scheduler put it and it return Returns",
    "start": "1245799",
    "end": "1253520"
  },
  {
    "text": "the length of the pot and the was a module with it so",
    "start": "1253520",
    "end": "1259760"
  },
  {
    "text": "so this kind of uh design uh you can find everywhere in our",
    "start": "1259760",
    "end": "1266400"
  },
  {
    "text": "abis and yeah this is a very common pattern uh for how the object transfer",
    "start": "1266400",
    "end": "1274559"
  },
  {
    "text": "works and uh the next Point uh to discuss is laser loading and casing uh",
    "start": "1275480",
    "end": "1283080"
  },
  {
    "text": "as we discussed at first the performance is one of the you know important points when crafting",
    "start": "1283080",
    "end": "1289440"
  },
  {
    "text": "this kind of extension in the schedu but the object transfer is costly",
    "start": "1289440",
    "end": "1296600"
  },
  {
    "text": "so we need some you know tricks for a better",
    "start": "1296600",
    "end": "1301640"
  },
  {
    "text": "performance uh but you know depending on the schedu logic uh the B module may or",
    "start": "1301640",
    "end": "1308640"
  },
  {
    "text": "may not uh need to get some objects right I mean some uh was module might",
    "start": "1308640",
    "end": "1316480"
  },
  {
    "text": "need might only need this part but uh some other mus modules",
    "start": "1316480",
    "end": "1323320"
  },
  {
    "text": "may need more ports or other various objects such as knowde P PC",
    "start": "1323320",
    "end": "1330400"
  },
  {
    "text": "Etc so the SDK doesn't know which modules uh need which objects until",
    "start": "1330400",
    "end": "1337600"
  },
  {
    "text": "running them uh so but we obviously don't want",
    "start": "1337600",
    "end": "1343520"
  },
  {
    "text": "to pass all the objects uh because it's going to be overhead and uh so in order",
    "start": "1343520",
    "end": "1349360"
  },
  {
    "text": "to reduce this kind of unnecessary object transfer we implemented a lazy loading and casing in the uh SDK so",
    "start": "1349360",
    "end": "1358120"
  },
  {
    "text": "looking at this example uh so this prescore interface has two objects right",
    "start": "1358120",
    "end": "1365360"
  },
  {
    "text": "uh poort and no list and PO is used but",
    "start": "1365360",
    "end": "1372080"
  },
  {
    "text": "no list isn't so in this case uh when the yellow line uh Port spec is called",
    "start": "1372080",
    "end": "1379679"
  },
  {
    "text": "uh it actually not just reference the port spec but it's actually fetching the P",
    "start": "1379679",
    "end": "1387159"
  },
  {
    "text": "from the host so what is happening here",
    "start": "1387159",
    "end": "1394320"
  },
  {
    "text": "is uh when scheduling framework calls pre school function of um was extension",
    "start": "1394320",
    "end": "1402039"
  },
  {
    "text": "PL uh the prog callus the pre prescore function exposed from exposed from was",
    "start": "1402039",
    "end": "1409840"
  },
  {
    "text": "module right and the point is that at this point the prog doesn't pass any",
    "start": "1409840",
    "end": "1415159"
  },
  {
    "text": "object to object to um wasm side and it",
    "start": "1415159",
    "end": "1420400"
  },
  {
    "text": "just ask the wasm to start executing a PR",
    "start": "1420400",
    "end": "1426120"
  },
  {
    "text": "score and in PR School uh was module okay needs uh the part object uh then if",
    "start": "1426279",
    "end": "1435159"
  },
  {
    "text": "the part isn't in the cash yet uh the was a module fetches it from the host",
    "start": "1435159",
    "end": "1440640"
  },
  {
    "text": "side and you know when it returned uh it",
    "start": "1440640",
    "end": "1446760"
  },
  {
    "text": "puts this part into a cash so that it doesn't have to fetch it again so this",
    "start": "1446760",
    "end": "1452640"
  },
  {
    "text": "is how we implemented the you know simple laser loading and how actually",
    "start": "1452640",
    "end": "1457760"
  },
  {
    "text": "the was module calculates the uh scheduling",
    "start": "1457760",
    "end": "1463919"
  },
  {
    "text": "results and another topic here is garbage correction so garbage correction",
    "start": "1464320",
    "end": "1470480"
  },
  {
    "text": "is another overhead that we have to consider uh cuz RM has only one rum has",
    "start": "1470480",
    "end": "1477919"
  },
  {
    "text": "only one thread and the garbage correction is in lined as a result the",
    "start": "1477919",
    "end": "1484480"
  },
  {
    "text": "was no uh garbage correction overhead was like over half the latency of the",
    "start": "1484480",
    "end": "1491240"
  },
  {
    "text": "Fring execution so towards this problem uh the first thing we tried is not tiny",
    "start": "1491240",
    "end": "1500039"
  },
  {
    "text": "DC the name is great and so this is awesome uh makes some huge latency",
    "start": "1500039",
    "end": "1508320"
  },
  {
    "text": "reduction in some scenarios and we were actually",
    "start": "1508320",
    "end": "1515120"
  },
  {
    "text": "suggesting using uh not tiny DC with our SDK but given the repository is already",
    "start": "1515120",
    "end": "1522760"
  },
  {
    "text": "arived uh so we cannot just keep reing on it right so",
    "start": "1522760",
    "end": "1529440"
  },
  {
    "text": "we you know we started to explore another optimization that we can",
    "start": "1529440",
    "end": "1536279"
  },
  {
    "text": "make and here is another one a tiny go yep tinle leaking frog so if we use this",
    "start": "1536279",
    "end": "1545200"
  },
  {
    "text": "frog um there was a module compiled from uh tiny go just allocates the memory and",
    "start": "1545200",
    "end": "1553320"
  },
  {
    "text": "never freeze it so meaning there wasn't uh the memory usage in wasn't keep",
    "start": "1553320",
    "end": "1559799"
  },
  {
    "text": "growing so at some point we have to recreate the module periodically but",
    "start": "1559799",
    "end": "1566120"
  },
  {
    "text": "um this looked work but uh actually in",
    "start": "1566120",
    "end": "1571840"
  },
  {
    "text": "our case the recreation of wasm modu was costy so didn't get a good you know",
    "start": "1571840",
    "end": "1580480"
  },
  {
    "text": "result good performance from it but depending on the architecture of this kind of VM extension you may be able to",
    "start": "1580480",
    "end": "1587120"
  },
  {
    "text": "you know get some benefit from this",
    "start": "1587120",
    "end": "1592360"
  },
  {
    "text": "strategy right so these are what we tried towards uh garbage corlection",
    "start": "1593480",
    "end": "1599039"
  },
  {
    "text": "problem but obviously uh this uh these Solutions are just you",
    "start": "1599039",
    "end": "1605279"
  },
  {
    "text": "know just for timing go right so of course like we imple if we",
    "start": "1605279",
    "end": "1611720"
  },
  {
    "text": "Implement SDK with non DC language then",
    "start": "1611720",
    "end": "1616960"
  },
  {
    "text": "problem will Spanish or like yeah so currently we are using go because go",
    "start": "1616960",
    "end": "1622840"
  },
  {
    "text": "language is main language in KU this community but uh it would be awesome to",
    "start": "1622840",
    "end": "1628600"
  },
  {
    "text": "you know try out this kind of SDK with non DC language and see some forance",
    "start": "1628600",
    "end": "1636000"
  },
  {
    "text": "comparison from it all right",
    "start": "1636000",
    "end": "1643720"
  },
  {
    "text": "so we also have benchmark but the time is coming so",
    "start": "1643720",
    "end": "1651399"
  },
  {
    "text": "I describe it very shortly so we have two layers of benchmarks uh",
    "start": "1651399",
    "end": "1659679"
  },
  {
    "text": "one is uh plugin level one and another one is schedule level one so the L",
    "start": "1659679",
    "end": "1669399"
  },
  {
    "text": "is this one that we actually so in a previous slide so we get um so we run",
    "start": "1669399",
    "end": "1677120"
  },
  {
    "text": "some certain scenarios and see observe some matric from the uh from",
    "start": "1677120",
    "end": "1684120"
  },
  {
    "text": "uh I mean during the scenario so in this uh picture uh we see",
    "start": "1684120",
    "end": "1693000"
  },
  {
    "text": "and um what's this scheduling latency but there are a bunch of more um",
    "start": "1693000",
    "end": "1700919"
  },
  {
    "text": "metrics that we can see from me all right so WRA up",
    "start": "1700919",
    "end": "1708399"
  },
  {
    "text": "so today we started from some basic of you know comb the schedule and then",
    "start": "1708399",
    "end": "1713760"
  },
  {
    "text": "we've gone through how we can design and implement this kind of vom",
    "start": "1713760",
    "end": "1719880"
  },
  {
    "text": "extension so now like I hope you understand uh that was is at least worth",
    "start": "1719880",
    "end": "1727159"
  },
  {
    "text": "considering uh when creating this kind of extensibility from platform but along",
    "start": "1727159",
    "end": "1732960"
  },
  {
    "text": "with some concerns that we saw so when you create cre it um you",
    "start": "1732960",
    "end": "1739720"
  },
  {
    "text": "probably want to create some sdks to obstruct I mean to make it easier for",
    "start": "1739720",
    "end": "1745519"
  },
  {
    "text": "people to build this kind of uh wasm guest hiding the you know complex",
    "start": "1745519",
    "end": "1751399"
  },
  {
    "text": "function cuse under the foot and the object transfer requires some effort to",
    "start": "1751399",
    "end": "1757880"
  },
  {
    "text": "reduce the overhead you probably want to follow the similar like cash and Laser",
    "start": "1757880",
    "end": "1764240"
  },
  {
    "text": "wng and lastly you should have a benchmark uh to you know keep your performance",
    "start": "1764240",
    "end": "1772159"
  },
  {
    "text": "always measure it and not introduce some",
    "start": "1772159",
    "end": "1778120"
  },
  {
    "text": "degradations so regarding our project uh we just reached uh the first review of it",
    "start": "1778120",
    "end": "1786039"
  },
  {
    "text": "and this project is actually first um I mean first project in the offal combine",
    "start": "1786039",
    "end": "1793799"
  },
  {
    "text": "community that is trying to implement the extensibility with bom so I'm really",
    "start": "1793799",
    "end": "1799880"
  },
  {
    "text": "looking forward how you know this project can influence other six other um",
    "start": "1799880",
    "end": "1807799"
  },
  {
    "text": "components that uh commus has because you know Kus has a lot of extension",
    "start": "1807799",
    "end": "1813200"
  },
  {
    "text": "knobs right uh in it not only qu schedule so we may or may not be able to",
    "start": "1813200",
    "end": "1819320"
  },
  {
    "text": "uh find what useful for other components as well all right thank you very much so",
    "start": "1819320",
    "end": "1826960"
  },
  {
    "text": "this is the end of my uh have a great day everyone",
    "start": "1826960",
    "end": "1832760"
  },
  {
    "text": "[Applause]",
    "start": "1832860",
    "end": "1836140"
  }
]