[
  {
    "text": "good afternoon everyone this is the intro to cloud native Bill pack stock if",
    "start": "30",
    "end": "5879"
  },
  {
    "text": "that's not the talk you're trying to ten then you're definitely in the wrong room my name is Terence Lee I go buy a home",
    "start": "5879",
    "end": "12269"
  },
  {
    "text": "0-2 on Twitter I work for a company called Roku and to kind of before we",
    "start": "12269",
    "end": "17820"
  },
  {
    "text": "start talking about cloud built packs I kind of wanted to talk about kind of where Bill packs came from and kind of",
    "start": "17820",
    "end": "24869"
  },
  {
    "text": "go from there and then we'll get into the climate in both back so broker who has spent a lot of time focusing on",
    "start": "24869",
    "end": "30750"
  },
  {
    "text": "developer experience and I think for most people that have heard of Roku",
    "start": "30750",
    "end": "35850"
  },
  {
    "text": "you've probably seen this command get butch Schroyer master and this was kind of the main command people used to",
    "start": "35850",
    "end": "41399"
  },
  {
    "text": "deploy any application that they wanted to on Heroku and we started off as a",
    "start": "41399",
    "end": "48360"
  },
  {
    "text": "ruby specific platform but then in 2011 we based release we really say Paul got",
    "start": "48360",
    "end": "53879"
  },
  {
    "text": "platformer called cedar and at the heart of that that let us kind of do that was",
    "start": "53879",
    "end": "59370"
  },
  {
    "text": "this technology called Bill packs and so what we did was we took all the kind of language specific built components from",
    "start": "59370",
    "end": "67260"
  },
  {
    "text": "our Ruby part of the build pipeline and extracted into a thing that we called Belle packs and so we could basically",
    "start": "67260",
    "end": "72840"
  },
  {
    "text": "build like these language specific components that were all built packs that all kind of slotted into our build",
    "start": "72840",
    "end": "79290"
  },
  {
    "text": "pipeline so if you're not familiar with Belle packs at all there are this source centric way that are highly opinionated",
    "start": "79290",
    "end": "85950"
  },
  {
    "text": "of how you construct a runnable basically application artifact from your",
    "start": "85950",
    "end": "91200"
  },
  {
    "text": "source code and the bill packs on produce I when they first came out were",
    "start": "91200",
    "end": "98070"
  },
  {
    "text": "made up of kind of these three executables Binda Tech and Kapow and been release",
    "start": "98070",
    "end": "103250"
  },
  {
    "text": "cloud foundry has Forte's kind of the bill pack since then they've kind of",
    "start": "103250",
    "end": "108420"
  },
  {
    "text": "split this compile into two executables supply and finalize which Stephen will",
    "start": "108420",
    "end": "113700"
  },
  {
    "text": "talk about later on the presentation so detect a lot of space to decide if this",
    "start": "113700",
    "end": "119369"
  },
  {
    "text": "bill pack was applicable for this application and determine if we want to run it compile econo did kind of the",
    "start": "119369",
    "end": "125280"
  },
  {
    "text": "meat of the work of actually like installing any runtimes if you're wearing in JVM a pill",
    "start": "125280",
    "end": "130440"
  },
  {
    "text": "maven or whatever's install dependencies kind of do all that work and then basically make your file directory be",
    "start": "130440",
    "end": "138780"
  },
  {
    "text": "ready to actually be run and released kind of handled all the kind of metadata information like what the writing",
    "start": "138780",
    "end": "144780"
  },
  {
    "text": "process type if we could detect what that is kind of any other resources and things environment variables that need",
    "start": "144780",
    "end": "150390"
  },
  {
    "text": "to be set to actually get your application to run and then at the end of the build pack one ants run you get",
    "start": "150390",
    "end": "156000"
  },
  {
    "text": "this what we call that Heroku a slug on the CF side they were called droplets but essentially they're just this tar",
    "start": "156000",
    "end": "162690"
  },
  {
    "text": "ball that sat on top of a stack image that we maintain for our customers or",
    "start": "162690",
    "end": "168630"
  },
  {
    "text": "base image and that was something that we maintained and with that we had kind",
    "start": "168630",
    "end": "175590"
  },
  {
    "text": "of two separate components at let us run your application and to kind of give you a sense of like what a Bill pack",
    "start": "175590",
    "end": "182160"
  },
  {
    "text": "actually does so since we started off as root platform the Rugal pack has been",
    "start": "182160",
    "end": "188550"
  },
  {
    "text": "with us the longest and we have well over millions of Reax running on it and",
    "start": "188550",
    "end": "193700"
  },
  {
    "text": "one of the things that's nice that I think is a little different from how things are handled with docker files that there is one ruby pill pack so",
    "start": "193700",
    "end": "200490"
  },
  {
    "text": "pretty much almost all of our customers use the one official Heroku Ruby bail pack and installs every supportive",
    "start": "200490",
    "end": "207930"
  },
  {
    "text": "version of Ruby that is supported out there for us you know goes and uses the community supported pensee management",
    "start": "207930",
    "end": "214709"
  },
  {
    "text": "system installs those dependencies and then really if you like you're running rails which is got the major web",
    "start": "214709",
    "end": "219720"
  },
  {
    "text": "framework and the Ruby LAN it goes and actually sets up your applications so you don't have to do extra work to make",
    "start": "219720",
    "end": "225630"
  },
  {
    "text": "your rails app run on our platform so that gets all encapsulated and so we've",
    "start": "225630",
    "end": "230790"
  },
  {
    "text": "been running it for over seven years in production and you don't really have to",
    "start": "230790",
    "end": "236459"
  },
  {
    "text": "go and install a separate version of the bill pack so it's like the same person Bill pack and we actually installed the",
    "start": "236459",
    "end": "242550"
  },
  {
    "text": "latest version of kind of the bill packets run almost every time so we were all about like minimizing the kind of",
    "start": "242550",
    "end": "248459"
  },
  {
    "text": "pain as you kind of as we make changes to the bill pack in 2012 we open-source",
    "start": "248459",
    "end": "255660"
  },
  {
    "text": "our bill pack technology all of our official bill packs that we had on at source so you can actually go to our on",
    "start": "255660",
    "end": "261419"
  },
  {
    "text": "github.com slash Roku and those bill packs and actually just go download them and do whatever you want",
    "start": "261419",
    "end": "267370"
  },
  {
    "text": "with them people fork them but what's cool is that we actually got a whole new set of new bill packs in that ecosystem",
    "start": "267370",
    "end": "273550"
  },
  {
    "text": "so languages that we didn't actually support on the platform people built bill packs for them so they could run",
    "start": "273550",
    "end": "279850"
  },
  {
    "text": "them on Heroku different ways to kind of build applications different built pipelines as well as like off-the-shelf",
    "start": "279850",
    "end": "285340"
  },
  {
    "text": "software so companies and other kind of open source software that want to make",
    "start": "285340",
    "end": "290350"
  },
  {
    "text": "it easy to integrate on a platform they could write a bill pack to kind of ease that transition in addition to bill",
    "start": "290350",
    "end": "296650"
  },
  {
    "text": "packs we also had other vendors and providers in this space who adopted bill",
    "start": "296650",
    "end": "301720"
  },
  {
    "text": "packs as a thing that they actually ran in-house that weren't on Heroku so some people some of these companies and",
    "start": "301720",
    "end": "308160"
  },
  {
    "text": "software providers just ran the for food bill taxes is and kind of other third party bill packs as well as built their",
    "start": "308160",
    "end": "315400"
  },
  {
    "text": "own kind of bill package system around this whole thing and so coming back to",
    "start": "315400",
    "end": "321790"
  },
  {
    "text": "'county containers which is kind of why we're all here and docker bill packs we",
    "start": "321790",
    "end": "327100"
  },
  {
    "text": "kind of created before docker existed even though we ran them in LXE on Roku's",
    "start": "327100",
    "end": "332320"
  },
  {
    "text": "and they weren't really designed with kind of these container initiatives that we kind of know and love today when",
    "start": "332320",
    "end": "339250"
  },
  {
    "text": "they're created and so when people talk about containerized in applications I think most people think of you write a",
    "start": "339250",
    "end": "346510"
  },
  {
    "text": "doc file and you probably run docker build or maybe running Conoco on Kay native or something like that but that's",
    "start": "346510",
    "end": "352960"
  },
  {
    "text": "probably how most people are actually going ahead and actually building these container images and so I think it",
    "start": "352960",
    "end": "361390"
  },
  {
    "text": "docker fowl is very powerful and flexible and for a lot of users is actually really good but running a",
    "start": "361390",
    "end": "368890"
  },
  {
    "text": "quality production docker image that you want to ship into barak into your kind",
    "start": "368890",
    "end": "374110"
  },
  {
    "text": "of cluster can be challenging I think for lot users because you have to take a lot of things into account so as an",
    "start": "374110",
    "end": "380740"
  },
  {
    "text": "example this was on Hacker News fairly recently and I think within west's",
    "start": "380740",
    "end": "386050"
  },
  {
    "text": "yesterday or last few days but basically the official docker hub open JDK images",
    "start": "386050",
    "end": "392260"
  },
  {
    "text": "we're running a and I think this is still actually true but running it a development version OpenJDK so if you",
    "start": "392260",
    "end": "400000"
  },
  {
    "text": "actually go and download it it's missing some bug patches and cv patches like in",
    "start": "400000",
    "end": "406210"
  },
  {
    "text": "the thing you're downloading so you you have to think about kind of the stuff that you're pulling in and using snick",
    "start": "406210",
    "end": "413259"
  },
  {
    "text": "released a blog post about how the top 10 most popular docker images contain all these vulnerabilities of just like",
    "start": "413259",
    "end": "419680"
  },
  {
    "text": "dependencies that have been patched in the software that's being run this is",
    "start": "419680",
    "end": "425800"
  },
  {
    "text": "using this is from the official Python image from docker hub and so basically",
    "start": "425800",
    "end": "432610"
  },
  {
    "text": "like I think this common thing that most people do when they first start using dark file but you have to know to kind",
    "start": "432610",
    "end": "438009"
  },
  {
    "text": "of just like hoist out because the way the interface for how you do docker",
    "start": "438009",
    "end": "443529"
  },
  {
    "text": "image building how it's tied to the instructions that you write that you need to hoist out the dependency management stuff from copying the rest",
    "start": "443529",
    "end": "449800"
  },
  {
    "text": "of your source code in so you don't have to kind of pay that fastest and cache cost every time you run docker build for",
    "start": "449800",
    "end": "454840"
  },
  {
    "text": "changing things that don't actually affect your dependency management system just general security best practices you",
    "start": "454840",
    "end": "462370"
  },
  {
    "text": "kind of want to not be running filling things in production with root basically",
    "start": "462370",
    "end": "468430"
  },
  {
    "text": "that has access to everything so just basing off the previous example slide",
    "start": "468430",
    "end": "473610"
  },
  {
    "text": "you probably want to add an actual user and then actually set that user before running the command the kind of",
    "start": "473610",
    "end": "480940"
  },
  {
    "text": "implications this is probably dependent on your application whether root is acceptable or not to be running in production inside the container",
    "start": "480940",
    "end": "489240"
  },
  {
    "text": "continuing still with the Python example so this is the super tiny screenshot",
    "start": "489240",
    "end": "494289"
  },
  {
    "text": "it's not really important that you can read the lines but this highlighted yellow thing from github is from the",
    "start": "494289",
    "end": "500500"
  },
  {
    "text": "debian templates of the python thing and this is about 50 ish lines and I think",
    "start": "500500",
    "end": "505870"
  },
  {
    "text": "the Alpine one is takes up more than one page screen page worth of just one run",
    "start": "505870",
    "end": "511120"
  },
  {
    "text": "instruction command to install Python and again this is about the interface of how this stuff works is in in best",
    "start": "511120",
    "end": "518260"
  },
  {
    "text": "practices you kind of want to minimize the number of layers are generating cuz increases the size your docker image and",
    "start": "518260",
    "end": "523360"
  },
  {
    "text": "so kind of the best accepted standard to that is to actually run that as one single run command so it only produces",
    "start": "523360",
    "end": "529510"
  },
  {
    "text": "one you need to as you're generating stuff also clean up after yourselves and so I",
    "start": "529510",
    "end": "537550"
  },
  {
    "text": "think a common use case when you're kind of building these things out in production is that you have two images and you want to combine them together",
    "start": "537550",
    "end": "543790"
  },
  {
    "text": "for instance say I have real application but I need to interface with some soap",
    "start": "543790",
    "end": "549730"
  },
  {
    "text": "or whatever interface so I wanted to pull in like a Java library to kind of interact with that so I think the answer",
    "start": "549730",
    "end": "555760"
  },
  {
    "text": "most people tell you in this space is just use multi built multistage builds with docker file right so I have this",
    "start": "555760",
    "end": "562870"
  },
  {
    "text": "Ruby image so I have this guest kind of JDK image I'm going to pull this in as a",
    "start": "562870",
    "end": "569280"
  },
  {
    "text": "multi-stage build and then copy basically the stuff from that image into",
    "start": "569280",
    "end": "574630"
  },
  {
    "text": "my existing image that I'm already building but unfortunately if you know",
    "start": "574630",
    "end": "580180"
  },
  {
    "text": "anything about this JDK image as you're building it you know that this docker Java home is actually a symlink so I",
    "start": "580180",
    "end": "586330"
  },
  {
    "text": "can't actually just copy this in because it doesn't actually caught it's not a deep copy that will copy these stuff",
    "start": "586330",
    "end": "592330"
  },
  {
    "text": "from the same link so I actually have to go through and inspect the image of what is actually in that folder and actually",
    "start": "592330",
    "end": "597370"
  },
  {
    "text": "copy every single thing from that folder into my base image it also doesn't copy",
    "start": "597370",
    "end": "602890"
  },
  {
    "text": "environment variables so I need to actually go and read that docker file and how it's built and copied the",
    "start": "602890",
    "end": "609090"
  },
  {
    "text": "environment variables that are need to actually run with that docker image and of course I actually want to copy the",
    "start": "609090",
    "end": "615400"
  },
  {
    "text": "thing that's built from the JDK but if we're running this in production I also",
    "start": "615400",
    "end": "620560"
  },
  {
    "text": "know that I don't want to be running JDK probably in production so I also need a",
    "start": "620560",
    "end": "626830"
  },
  {
    "text": "third image which is the Jerry image and so once I'm done doing the build I want to then copy the JRE image into my final",
    "start": "626830",
    "end": "634300"
  },
  {
    "text": "image so this is the final docker image that I've had to generate which I've had to basically dissect that JDK image",
    "start": "634300",
    "end": "642940"
  },
  {
    "text": "pretty deeply to basically get and working a docker image so they aren't really these kind of composable units",
    "start": "642940",
    "end": "648910"
  },
  {
    "text": "that are these black boxes that we can just consume and use we have to have pretty deep knowledge of how these",
    "start": "648910",
    "end": "654310"
  },
  {
    "text": "images actually work so a short summary you know you don't get environment variables sim links don't work you have",
    "start": "654310",
    "end": "659650"
  },
  {
    "text": "to actually understand what are those things point to there's a pretty limited amount of stuff",
    "start": "659650",
    "end": "664850"
  },
  {
    "text": "you can do it's really just FASTA some stuff you so you can't do like blob stuff so you end up with a ton of copy statements that we saw before just to",
    "start": "664850",
    "end": "671809"
  },
  {
    "text": "get a working image and as you know kind",
    "start": "671809",
    "end": "678619"
  },
  {
    "text": "of further best practices to ensure that maybe you need a secrets that you're using to actually go ahead and copy",
    "start": "678619",
    "end": "685749"
  },
  {
    "text": "things into your docker image or maybe do like a private dependency install from your maven repository",
    "start": "685749",
    "end": "692600"
  },
  {
    "text": "I think multistage builds are a great use case for doing that but you kind of have to do this thing where you do it",
    "start": "692600",
    "end": "698149"
  },
  {
    "text": "and then you want to ensure it's a way to ensure that basically you'll you will not leak those credentials into your",
    "start": "698149",
    "end": "703850"
  },
  {
    "text": "final docker image because they'll be part of it a you know layer that gets kind of tossed away before it gets into",
    "start": "703850",
    "end": "709519"
  },
  {
    "text": "production and so all these things",
    "start": "709519",
    "end": "714980"
  },
  {
    "text": "aren't necessarily super hard but these are things that you have to take an account when you're just trying to do",
    "start": "714980",
    "end": "720619"
  },
  {
    "text": "best practices around building quality production docker images and so with the customers that we interact with that",
    "start": "720619",
    "end": "726679"
  },
  {
    "text": "karoku one of the things that is nice is that they want to come join and play and",
    "start": "726679",
    "end": "732470"
  },
  {
    "text": "do all this stuff with containers but they don't actually want to have to know how to do all these things so I'm gonna",
    "start": "732470",
    "end": "740749"
  },
  {
    "text": "to let Steven kind of take on the rest to talk about day two operations thanks",
    "start": "740749",
    "end": "746059"
  },
  {
    "text": "buddy hear me so I'm Steven I work at",
    "start": "746059",
    "end": "751850"
  },
  {
    "text": "pivotal on things related to cloud foundry and Carretas and so we kind of",
    "start": "751850",
    "end": "758779"
  },
  {
    "text": "took the build pack model that you know Heroku put together kind of after Heroku open sourced build packs and you know",
    "start": "758779",
    "end": "765079"
  },
  {
    "text": "they're bill packs and that model but before you know docker files and docker birthing and integrated that into cloud",
    "start": "765079",
    "end": "771889"
  },
  {
    "text": "foundry is sort of the primary way that people build applications on cloud foundry and today I'm going to talk",
    "start": "771889",
    "end": "777170"
  },
  {
    "text": "about a sort of date - which is like everything after your application you know kind of makes into production and",
    "start": "777170",
    "end": "783439"
  },
  {
    "text": "you know what are the concerns you know kind of looking at the docker file model looking at the current build tech model",
    "start": "783439",
    "end": "789949"
  },
  {
    "text": "and Cloud Foundry on Heroku kind of focusing on cloud bounty and my examples and you know what it looks like to you",
    "start": "789949",
    "end": "795910"
  },
  {
    "text": "know build an app and then keep it maintained in those models and also in the cloud native build tax model that",
    "start": "795910",
    "end": "802270"
  },
  {
    "text": "you know this this project is about which I promise we'll get to at the end so I'm gonna kind of run through a case",
    "start": "802270",
    "end": "808600"
  },
  {
    "text": "study of what it looks like to patch a high CVE and open SSL and the CVE was it",
    "start": "808600",
    "end": "815170"
  },
  {
    "text": "was like a malicious ciphertext could cause a do s I was about three years ago it was like a sort of high severity CV",
    "start": "815170",
    "end": "823050"
  },
  {
    "text": "the I'm gonna run through docker file again CF model and then cloud made a built axe model so if you look at what a",
    "start": "823050",
    "end": "829900"
  },
  {
    "text": "like a node.js app built using docker images you might you know start with operating system packages from you know",
    "start": "829900",
    "end": "836620"
  },
  {
    "text": "canonical that include open SSL then you might you know use the official node J s",
    "start": "836620",
    "end": "842710"
  },
  {
    "text": "image build on top of you know trust your Bionic or whatever and then you might pull your application source code",
    "start": "842710",
    "end": "848920"
  },
  {
    "text": "into it and build your sort of final image with layers from all of those things so you kind of the model is that they're sort of linked together like a",
    "start": "848920",
    "end": "854800"
  },
  {
    "text": "linked list that's how the docker file model wants you to look at it and so",
    "start": "854800",
    "end": "860110"
  },
  {
    "text": "when there's a vulnerability in you know open SSL that's kind of in the bottom most layer and if you're a really large",
    "start": "860110",
    "end": "865300"
  },
  {
    "text": "enterprise and you have five hundred node.js apps then when the CV hits on",
    "start": "865300",
    "end": "870370"
  },
  {
    "text": "April 26 you have a lot of imagery building to do and this is kind of a problem so if you're a big enterprise",
    "start": "870370",
    "end": "878050"
  },
  {
    "text": "and you kind of tell your developers you know you have the power of go build your own images do whatever you want then you",
    "start": "878050",
    "end": "884290"
  },
  {
    "text": "have you don't really have a great way of saying hey here's a secure you know patched version of open SSL that you can",
    "start": "884290",
    "end": "890890"
  },
  {
    "text": "go run you have to tell them go find wherever your basement just came from and try to keep everything patched and",
    "start": "890890",
    "end": "895960"
  },
  {
    "text": "it will probably never happen for everything but you know maybe you're a really good big enterprise and you do",
    "start": "895960",
    "end": "902440"
  },
  {
    "text": "your you know docker file as well and you provide a corporate you know version of nodejs built on top of a trusted base",
    "start": "902440",
    "end": "907660"
  },
  {
    "text": "image you should probably say Bionic I know trustees heal well now anyways the",
    "start": "907660",
    "end": "913170"
  },
  {
    "text": "you know even if you do this though you know the open SSL patch that Canonical's going to provide is a bi compatible you",
    "start": "913170",
    "end": "919840"
  },
  {
    "text": "should be able to swap it out from under all the other layers a second without rebuilding anything but in the",
    "start": "919840",
    "end": "925240"
  },
  {
    "text": "dockerfile model you kind of to rebuild all of these apps and so that takes a long time and so in Cloud",
    "start": "925240",
    "end": "931680"
  },
  {
    "text": "Foundry and also in Heroku the model is very similar I'm just using cloud boundaries an example here we kind of have a always had a different model of",
    "start": "931680",
    "end": "938570"
  },
  {
    "text": "kind of dealing with this and this is one reason why we've stuck with build packs for so long as opposed to moving",
    "start": "938570",
    "end": "943830"
  },
  {
    "text": "over to doctor files as our our users really care about these kind of operational concerns for patching things",
    "start": "943830",
    "end": "949200"
  },
  {
    "text": "at scale so we keep the application bits kind of separate from the base image",
    "start": "949200",
    "end": "954780"
  },
  {
    "text": "bits we build a thing called a droplet or Heroku it's a slug that's kind of like the build pack is kind of like a",
    "start": "954780",
    "end": "960360"
  },
  {
    "text": "function and your application source code is transformed into this droplet object sorry and it kind of adds",
    "start": "960360",
    "end": "966630"
  },
  {
    "text": "language runtimes and configures the application to work and again this is the current you know Cloud Foundry model",
    "start": "966630",
    "end": "971730"
  },
  {
    "text": "not the cloud and it build packs model and so this droplet kind of runs on top of this you know base image we call it",
    "start": "971730",
    "end": "977970"
  },
  {
    "text": "root FS but it's it's you know not linked to a particular version of it the base image packages just get a bi",
    "start": "977970",
    "end": "984840"
  },
  {
    "text": "compatible security updates and if you're curious what that means a bi compatibility is like a strong guarantee",
    "start": "984840",
    "end": "991710"
  },
  {
    "text": "at the binary level that when canonical a red hat or your operating system vendor whoever they are patch operating",
    "start": "991710",
    "end": "997050"
  },
  {
    "text": "system packages that they really try not to break compatibility so that you have a relatively strong guarantee that",
    "start": "997050",
    "end": "1004130"
  },
  {
    "text": "things don't break and so you know when you have a vulnerability at that bottom",
    "start": "1004130",
    "end": "1009440"
  },
  {
    "text": "layer and Cloud Foundry we have a kind of interesting model for updating all of your abs in production so we it's kind",
    "start": "1009440",
    "end": "1016130"
  },
  {
    "text": "of tied in to the infrastructure too so we spin up and you'll see here we have to kind of you could think these like",
    "start": "1016130",
    "end": "1021800"
  },
  {
    "text": "edge node VMs that are running applications in this case they're two VMs running two but in a big enterprise",
    "start": "1021800",
    "end": "1027709"
  },
  {
    "text": "this would be 100 VMs or any one hundred applications each right and so in this model we spin up new vm's that have a",
    "start": "1027709",
    "end": "1034459"
  },
  {
    "text": "new copy of the route FS and also a new copy of the VM based image try to patch as much as possible because often the",
    "start": "1034459",
    "end": "1040699"
  },
  {
    "text": "same vulnerabilities apply to both when you know critical CDs hit and when all the apps start successfully in the new",
    "start": "1040700",
    "end": "1046520"
  },
  {
    "text": "VM we take down the old one and flip the routes to the new one and we do this one VM at a time until all of your",
    "start": "1046520",
    "end": "1051830"
  },
  {
    "text": "infrastructure is patched and this lets you mitigate critical cv for every app on your whole",
    "start": "1051830",
    "end": "1057650"
  },
  {
    "text": "foundation in a couple of hours for a very large found age less than that for a small foundation",
    "start": "1057650",
    "end": "1063240"
  },
  {
    "text": "and so I'm going to talk about the cloud name to build packs model and this is kind of the project that we're kind of",
    "start": "1063240",
    "end": "1068860"
  },
  {
    "text": "here to talk about the t-shirt and this is kind of we wanted to take the you",
    "start": "1068860",
    "end": "1075010"
  },
  {
    "text": "know best aspects of the build pack model that you know we kind of developed out for you know six or seven years but",
    "start": "1075010",
    "end": "1081190"
  },
  {
    "text": "longer than that at this point and you know take the best aspects from that the",
    "start": "1081190",
    "end": "1087429"
  },
  {
    "text": "kind of operational benefits from that but also move to container standards like the OCI image format like docker registries you know build something",
    "start": "1087429",
    "end": "1094600"
  },
  {
    "text": "that's not docker files it's an abstraction that it's useful for you know a little more useful for developers",
    "start": "1094600",
    "end": "1100120"
  },
  {
    "text": "where they don't have to think about the operational concerns that always builds a secure image and it lets us patch lots",
    "start": "1100120",
    "end": "1106390"
  },
  {
    "text": "of applications at the same time and so to do this we kind of took that you know",
    "start": "1106390",
    "end": "1111580"
  },
  {
    "text": "original model where you have this droplet or slug and you know the base image and we play it out on top of a",
    "start": "1111580",
    "end": "1118360"
  },
  {
    "text": "doctor registry so where you have an image manifest for your individual application pointing at your you know",
    "start": "1118360",
    "end": "1124270"
  },
  {
    "text": "app specific layers in its own repository but then also pointing across repository boundaries at dependencies",
    "start": "1124270",
    "end": "1131110"
  },
  {
    "text": "that live in other repositories and when there's a you know this critical CV hits",
    "start": "1131110",
    "end": "1137710"
  },
  {
    "text": "we just update we you know upload a single copy of the you know new",
    "start": "1137710",
    "end": "1143860"
  },
  {
    "text": "operating system packages to the whole registry once for maybe five hundred apps and then we make a small metadata",
    "start": "1143860",
    "end": "1150340"
  },
  {
    "text": "change of that manifest for all of these you know all over five hundred images right to point to that new layer and we",
    "start": "1150340",
    "end": "1158200"
  },
  {
    "text": "can do this for you know five hundred images in a few minutes or even less so if you do it in parallel it doesn't",
    "start": "1158200",
    "end": "1163809"
  },
  {
    "text": "require any containers it doesn't require any builds it's just rewriting some metadata for each image directly on",
    "start": "1163809",
    "end": "1169330"
  },
  {
    "text": "the registry right there's no downloading there's no dr. demon involved nothing like that and we can patch 500 apps you know really quickly",
    "start": "1169330",
    "end": "1175990"
  },
  {
    "text": "it's just a bunch of network requests after the single copy of the you know OS packages are uploaded and to do this you",
    "start": "1175990",
    "end": "1184330"
  },
  {
    "text": "know like I think a question we get sometimes is why didn't you move to this model sooner you know why what's the",
    "start": "1184330",
    "end": "1190720"
  },
  {
    "text": "significance of doing this now and the answer is a lot of this you know they're kind of two key features in one in the OCI image format",
    "start": "1190720",
    "end": "1197559"
  },
  {
    "text": "and one in dr. registries that are relatively new that we really couldn't use before we couldn't you know move to",
    "start": "1197559",
    "end": "1203980"
  },
  {
    "text": "the model because of so the OCI image format or the also the dr. b2 image format kind of moves to content",
    "start": "1203980",
    "end": "1210250"
  },
  {
    "text": "addressable layers so you know if your view of docker images is that they're like a linked list that's not really",
    "start": "1210250",
    "end": "1215980"
  },
  {
    "text": "true anymore docker images are kind of Merkel tree of you know image layer shawls and you can kind of manipulate",
    "start": "1215980",
    "end": "1221980"
  },
  {
    "text": "them kind of at will directly on the registry if you want to it's not that linked list that people have in their head the model isn't really like get",
    "start": "1221980",
    "end": "1227950"
  },
  {
    "text": "anymore and I think that's like common comparison people have and the other feature is there's a thing called cross",
    "start": "1227950",
    "end": "1233470"
  },
  {
    "text": "repo blob mounting and the new docker registry spec that lets you kind of",
    "start": "1233470",
    "end": "1239020"
  },
  {
    "text": "point at layers that live in other repositories and with those two things together we can do this sort of really fast rebasing and when I kind of walk",
    "start": "1239020",
    "end": "1246490"
  },
  {
    "text": "through the model in a second you can kind of see how other ways we take advantage of that those capabilities so",
    "start": "1246490",
    "end": "1252760"
  },
  {
    "text": "to kind of walk you through what the you know new interface looks like you know we had this detect and neither supply",
    "start": "1252760",
    "end": "1259450"
  },
  {
    "text": "and finalize in the cloud foundry site or compiled in the Heroku side and release script or you know executables",
    "start": "1259450",
    "end": "1264970"
  },
  {
    "text": "and the old build pack interface you know from however long ago in a new",
    "start": "1264970",
    "end": "1270220"
  },
  {
    "text": "interface we still use you know executables and a bin directory but it's just detect and build and there's sort",
    "start": "1270220",
    "end": "1276400"
  },
  {
    "text": "of metadata pass between them to kind of make multi build PAC support work well",
    "start": "1276400",
    "end": "1281980"
  },
  {
    "text": "with detection so you can detect a series of build packs that all apply to the app and apply them and I'll kind of go over what that looks like and in",
    "start": "1281980",
    "end": "1289660"
  },
  {
    "text": "addition to these two steps there's there to sort of infrastructure steps that are handled by the platform and so",
    "start": "1289660",
    "end": "1296740"
  },
  {
    "text": "in the detect so I'll kind of run through everything in the detect phase you know an optimal selection of",
    "start": "1296740",
    "end": "1302470"
  },
  {
    "text": "different build packs is chosen that apply to your app and some metadata is generated about what those bill pecks are going to do during the build phase",
    "start": "1302470",
    "end": "1308490"
  },
  {
    "text": "during the analysis phase we pull metadata about late if there's a previous image from a previous build we",
    "start": "1308490",
    "end": "1314290"
  },
  {
    "text": "pull metadata about that image and about the layers in that image so that during the build phase the build packs can",
    "start": "1314290",
    "end": "1320049"
  },
  {
    "text": "decide just to rebuild layers that actually need to change and leave the layers that don't need to change on the register you don't even have to doesn't don't",
    "start": "1320049",
    "end": "1325960"
  },
  {
    "text": "those layers don't even have to get downloaded it just builds and you know individual new layers need to change and then during the export phase uploads",
    "start": "1325960",
    "end": "1332080"
  },
  {
    "text": "those to replace the you know outdated layers in the in the repository and so",
    "start": "1332080",
    "end": "1338170"
  },
  {
    "text": "I'm gonna run through an example kind of of what that build process looks like using you know Ruby build pack and a",
    "start": "1338170",
    "end": "1345310"
  },
  {
    "text": "node build pack but I'll point out that like in Cloud Foundry the node build pack now on and the new API is actually",
    "start": "1345310",
    "end": "1350830"
  },
  {
    "text": "three build packs it's like a node build pack and an NPM build pack in the arm build pack so you can really go very modular with this if you want to but",
    "start": "1350830",
    "end": "1357400"
  },
  {
    "text": "just sort of pedagogical example here of what it would look like with a ruby build pack and a node build pack so if",
    "start": "1357400",
    "end": "1363280"
  },
  {
    "text": "your application had a gem file in a package JSON and some app source code and you're gonna run it with a ruby",
    "start": "1363280",
    "end": "1369040"
  },
  {
    "text": "build pack on the node build pack first the rubyville pack would run and if it passes detection it would contribute",
    "start": "1369040",
    "end": "1376570"
  },
  {
    "text": "something to the build plan that says hey I looked in your gem file or you jump file block and I found that this is",
    "start": "1376570",
    "end": "1381640"
  },
  {
    "text": "the Ruby version that your app needs and it writes this to the sort of metadata build plan and they know that build pack",
    "start": "1381640",
    "end": "1387880"
  },
  {
    "text": "runs protection says yep I'm a good candidate and means the whole group passed and so we can use this you know",
    "start": "1387880",
    "end": "1393070"
  },
  {
    "text": "configuration for the build and then it's going to contribute some metadata that says pay node version 812 we're",
    "start": "1393070",
    "end": "1400150"
  },
  {
    "text": "gonna do is we're gonna run with here and then the build plan is fed into the build phase which generates you know a",
    "start": "1400150",
    "end": "1407260"
  },
  {
    "text": "ruby layer and a gems layer the you know particular versions and then the build plan is fed into her though sorry than",
    "start": "1407260",
    "end": "1414610"
  },
  {
    "text": "the yeah build plan is fed into the node build pack and it runs its build phase generating the node.js layer and the",
    "start": "1414610",
    "end": "1420130"
  },
  {
    "text": "node modules layer and so to kind of do this build by build so you couldn't get a sense of why the model is efficient",
    "start": "1420130",
    "end": "1426930"
  },
  {
    "text": "you know starting with that app the first build analysis happens and nothing happens because there's no previous",
    "start": "1426930",
    "end": "1432460"
  },
  {
    "text": "image it installs everything installs ruby gems node node modules",
    "start": "1432460",
    "end": "1438090"
  },
  {
    "text": "exports those layers out to create the image and then on the next build those",
    "start": "1438090",
    "end": "1443320"
  },
  {
    "text": "layers are still there in the registry they're not gonna be downloaded locally but let's say you you know upload an app",
    "start": "1443320",
    "end": "1450040"
  },
  {
    "text": "with different packets JSON in a different drum file during the analysis phase we read information about all the",
    "start": "1450040",
    "end": "1455530"
  },
  {
    "text": "layers they'll Peck knows oh I don't need to rebuild the layer - you know for nodejs or for Ruby I just",
    "start": "1455530",
    "end": "1461170"
  },
  {
    "text": "need to run bundle install and npm install the regenerate the things locally and I even have the NPM cash available there's an inter build cache",
    "start": "1461170",
    "end": "1466750"
  },
  {
    "text": "that's separate from the layer cache and then just the new layers that changed are exported out to the registry and the",
    "start": "1466750",
    "end": "1472450"
  },
  {
    "text": "whole thing is kind of stitched together back on the registry really quickly and so if relatively little changes then there's little rebuilding and little",
    "start": "1472450",
    "end": "1479080"
  },
  {
    "text": "data transfer and this means that some application builds on the old model that took 30 seconds go down to like milliseconds in some cases it's pretty",
    "start": "1479080",
    "end": "1485620"
  },
  {
    "text": "impressive and then only that little bit of extra data is transferred all the way to the edge node because the layers stay",
    "start": "1485620",
    "end": "1490780"
  },
  {
    "text": "on each node and that's what I'm I talk that's sort of our talk sorry so if you",
    "start": "1490780",
    "end": "1499180"
  },
  {
    "text": "want to check out cloud native build packs we have a kind of second public beta available you can go to build packs",
    "start": "1499180",
    "end": "1506500"
  },
  {
    "text": "io for more information it's also on github we have real cloud foundry in Heroku build packs available now they're",
    "start": "1506500",
    "end": "1513370"
  },
  {
    "text": "all kind of a boon to bastes or that's those the base images we have available join us on slack also and/or a mailing",
    "start": "1513370",
    "end": "1520060"
  },
  {
    "text": "list and we have a deep dive tomorrow at 1555 so please come to that - we're",
    "start": "1520060",
    "end": "1525310"
  },
  {
    "text": "gonna dive into the you know sort of v3 cloud native cloud foundry and Heroku",
    "start": "1525310",
    "end": "1531400"
  },
  {
    "text": "build packs that they've been working on and how those work and know kind of what the future looks like for the project and stuff so please show up if you're",
    "start": "1531400",
    "end": "1537100"
  },
  {
    "text": "interested yeah if you want to see the decomposition that Steven talked about will be going into that as well so yeah",
    "start": "1537100",
    "end": "1543520"
  },
  {
    "text": "definitely any questions",
    "start": "1543520",
    "end": "1547830"
  },
  {
    "text": "[Music]",
    "start": "1556960",
    "end": "1560169"
  },
  {
    "text": "so I think the question is how does the build process decide which do you mean",
    "start": "1563129",
    "end": "1570970"
  },
  {
    "text": "like run time is going to be chosen like between Ruby and node or do you mean like version of the run time like ruby",
    "start": "1570970",
    "end": "1578559"
  },
  {
    "text": "version oh I see",
    "start": "1578559",
    "end": "1589559"
  },
  {
    "text": "got it so at run time when the image starts what sets the start command right so all the build packs this is like",
    "start": "1590580",
    "end": "1597850"
  },
  {
    "text": "after detection during the build phase all the build packs can contribute process types and the process types are",
    "start": "1597850",
    "end": "1605230"
  },
  {
    "text": "like individual start commands that you can choose between when you start the image we actually hook the launch process there's a thing called launcher",
    "start": "1605230",
    "end": "1611649"
  },
  {
    "text": "it's like a go binary that lives in the container and that's set to the entry point and then you can override the",
    "start": "1611649",
    "end": "1617379"
  },
  {
    "text": "command to set a custom start command or the launcher knows where to find the metadata that the build packs wrote out that have the different process list",
    "start": "1617379",
    "end": "1623710"
  },
  {
    "text": "type lists in them and so you can set your command to something like web and it knows o run the default web process",
    "start": "1623710",
    "end": "1629529"
  },
  {
    "text": "and that gets executed and so generally the last buildpack kind of wins for you",
    "start": "1629529",
    "end": "1635470"
  },
  {
    "text": "know currently that's the GUP sorry currently that's the you know process where if you put like node at the end if",
    "start": "1635470",
    "end": "1642850"
  },
  {
    "text": "you want to start your node process as the primary process that runs but you could also run multiple process types at",
    "start": "1642850",
    "end": "1648129"
  },
  {
    "text": "the same time if they contribute different ones to you if you're running in case and you want to do something with sidecars yeah it's the last pill",
    "start": "1648129",
    "end": "1654009"
  },
  {
    "text": "pack in the build plan I guess as a mmm in the build order but yeah totally",
    "start": "1654009",
    "end": "1660898"
  },
  {
    "text": "yeah so the question is if you have a bunch a few different technologies on a platform like how would you write bill",
    "start": "1687040",
    "end": "1693890"
  },
  {
    "text": "packs for those to work on a particular platform",
    "start": "1693890",
    "end": "1698860"
  },
  {
    "text": "got it so it's two questions first questions like you know how would you",
    "start": "1723660",
    "end": "1730420"
  },
  {
    "text": "plug build packs into a get ops workflow where you do a get push and you get an image out from the other end right and your next question is if you have a",
    "start": "1730420",
    "end": "1740020"
  },
  {
    "text": "custom you know framework or something you want to write how easy is it to write a build pack that supports that hook it in with other build packs nivel",
    "start": "1740020",
    "end": "1745720"
  },
  {
    "text": "process right cool okay so the your first question so the tools we're",
    "start": "1745720",
    "end": "1751420"
  },
  {
    "text": "providing it's part of the project are a CLI that's kind of for local builds called pack that because it you know are",
    "start": "1751420",
    "end": "1757840"
  },
  {
    "text": "the sort of the core part of the project is called the lifecycle and it's a set of binaries that run unprivileged",
    "start": "1757840",
    "end": "1764230"
  },
  {
    "text": "reproducible builds in any containers but if you're on a local machine you need some kind of containers and so it",
    "start": "1764230",
    "end": "1769600"
  },
  {
    "text": "uses the doctor demon to you know run containers in a row to build the image not using docker build those get",
    "start": "1769600",
    "end": "1775210"
  },
  {
    "text": "exported but then there are also these lifecycle binaries for when you're running in a cloud platform that can do",
    "start": "1775210",
    "end": "1781450"
  },
  {
    "text": "the unprivileged reproducible builds and a cloud platform so if you wanted to get ops workflow I think the most common",
    "start": "1781450",
    "end": "1786460"
  },
  {
    "text": "thing people do right now is they use can a to build and there's a template with that that can pull from a git repo and you know use this a lot you know",
    "start": "1786460",
    "end": "1795790"
  },
  {
    "text": "fine run lifecycle binaries to select the right build packs and do a build with them and all of that I think that's the thing I've seen most people do is a",
    "start": "1795790",
    "end": "1802960"
  },
  {
    "text": "concourse resource also if you like concourse the I think you know where",
    "start": "1802960",
    "end": "1808030"
  },
  {
    "text": "we're working on some things to to kind of improve that the infrastructure side and you know that build looks like yeah",
    "start": "1808030",
    "end": "1814390"
  },
  {
    "text": "and then Jason home ported it to Tecton - yeah as well so right kennedy build is no tacked on - yeah and so the next",
    "start": "1814390",
    "end": "1823120"
  },
  {
    "text": "question was how easy is it to write a build pack that kind of plugs in so a lot of what we've done in the new build",
    "start": "1823120",
    "end": "1829060"
  },
  {
    "text": "pack API is because it's like a break from the existing build pack API none of the old build packs work without a shim",
    "start": "1829060",
    "end": "1835930"
  },
  {
    "text": "on top of them right the part of that breaking change was to",
    "start": "1835930",
    "end": "1841810"
  },
  {
    "text": "make it really easy to write new build packs so if you've ever tried to write a Cloud Foundry Heroku build pack right now there are definitely some gotchas in",
    "start": "1841810",
    "end": "1847510"
  },
  {
    "text": "that process because that was made a long time ago and it's been kind of ported across and through containers the",
    "start": "1847510",
    "end": "1853420"
  },
  {
    "text": "you know now like you know we tried to make it as easy as possible to write a",
    "start": "1853420",
    "end": "1858460"
  },
  {
    "text": "new build pack and to make it you know communicate to other build packs over a really clear contractual thing so like",
    "start": "1858460",
    "end": "1865390"
  },
  {
    "text": "in the Cloud Foundry side you know our node build pack is a node engine build pack and MPM build pack and a yarn build",
    "start": "1865390",
    "end": "1872740"
  },
  {
    "text": "pack and if you want to shim in an APM build pack before that or you know your own custom thing to make some changes to",
    "start": "1872740",
    "end": "1878380"
  },
  {
    "text": "the apps you can just like drop that build pack before the group identifier for the rest of it and it usually just",
    "start": "1878380",
    "end": "1884230"
  },
  {
    "text": "works it's you know we've really tried hard to make that workable because both",
    "start": "1884230",
    "end": "1889480"
  },
  {
    "text": "of us really care about strategies and partners and things like that making sure that it's really easy to integrate into the ecosystem",
    "start": "1889480",
    "end": "1895780"
  },
  {
    "text": "ideally easier than it is to integrate into the docker file egos question yeah",
    "start": "1895780",
    "end": "1901870"
  },
  {
    "text": "I mean on the if you go to github.com slash pill pack that's where you can",
    "start": "1901870",
    "end": "1907510"
  },
  {
    "text": "find pack and lifecycle stuff Stephan talked about there's also a spec repo in there that has based this specification",
    "start": "1907510",
    "end": "1915060"
  },
  {
    "text": "it's not quite like a here's the tour how to do it because it is in spec so it's a lot more formal and has kind of a",
    "start": "1915060",
    "end": "1920950"
  },
  {
    "text": "lot of nitty-gritty details that you can do but I think for most build pack",
    "start": "1920950",
    "end": "1926380"
  },
  {
    "text": "authors they don't actually need to understand a lot of the spec to actually write one there's a lot of power and",
    "start": "1926380",
    "end": "1932290"
  },
  {
    "text": "flexibility added to the spec for kind of more advanced use cases at use as you need to kind of do things so like even",
    "start": "1932290",
    "end": "1938440"
  },
  {
    "text": "all the caching layer stuff we talked about here you can't actually just write to this app layer which is the one from",
    "start": "1938440",
    "end": "1945220"
  },
  {
    "text": "the bottom and not like basically it will be like kind of the old Bill pack",
    "start": "1945220",
    "end": "1950350"
  },
  {
    "text": "model where there was not it was not built in the docker image context and so you can't have really simple build packs",
    "start": "1950350",
    "end": "1956200"
  },
  {
    "text": "that don't take advantage of kind of these other primitives if you want to do that so it's like a like a progressive",
    "start": "1956200",
    "end": "1961870"
  },
  {
    "text": "complexity model it's really easy to write a simple one but then you can really take advantage of a lot of the fancy features if you want to there's",
    "start": "1961870",
    "end": "1967180"
  },
  {
    "text": "also we also have Doc's that kind of walk you through writing a simple Ruby they'll pack if you want to kind of understand what the experience is like - yeah we don't",
    "start": "1967180",
    "end": "1988030"
  },
  {
    "text": "use doctor files in any person oh yeah sorry that's a good point the question is the",
    "start": "1988030",
    "end": "1993420"
  },
  {
    "text": "do we generate doctor files do we plan to generate doctor files as part of the project and the answer is no we don't",
    "start": "1993420",
    "end": "1999730"
  },
  {
    "text": "use doctor files anywhere we we manually build OCI images straight from unprivileged capability free containers",
    "start": "1999730",
    "end": "2007320"
  },
  {
    "text": "we do so in a reproducible way which is difficult with a docker Damon and so you",
    "start": "2007320",
    "end": "2012990"
  },
  {
    "text": "don't need something like Conoco or build or whatever we use go libraries go",
    "start": "2012990",
    "end": "2018090"
  },
  {
    "text": "library Google group called go container registry to just write directly to the registry to kind of construct these things kind of as efficiently as",
    "start": "2018090",
    "end": "2024120"
  },
  {
    "text": "possible so we can't really generate docker files because we do that but if you do want to use a docker file to",
    "start": "2024120",
    "end": "2030450"
  },
  {
    "text": "extend your app afterwards you know you can say front you can start a docker file say from the app you had and do",
    "start": "2030450",
    "end": "2035790"
  },
  {
    "text": "whatever you want to afterwards it's not because it's using the OCI image format in just the docker image format it's just as compatible as anything else",
    "start": "2035790",
    "end": "2041610"
  },
  {
    "text": "right cool say again",
    "start": "2041610",
    "end": "2050060"
  },
  {
    "text": "I'm having a little trouble hearing so uh how your questions got it so the",
    "start": "2062740",
    "end": "2076310"
  },
  {
    "text": "question is like if we're not using a docker daemon to do a docker build how do we manage creating containers and",
    "start": "2076310",
    "end": "2082639"
  },
  {
    "text": "running things inside of them times up yeah how do we manage you know running",
    "start": "2082640",
    "end": "2091280"
  },
  {
    "text": "like running the containers in the platform to build the images and the answer is the image where the build happens on has the same or a compatible",
    "start": "2091280",
    "end": "2098330"
  },
  {
    "text": "base image as the image that the layers get exported to and so it all kind of just works together but let's let's chat",
    "start": "2098330",
    "end": "2103370"
  },
  {
    "text": "afterwards we get a we got to wrap it up Thanks yeah thanks everyone",
    "start": "2103370",
    "end": "2109060"
  },
  {
    "text": "[Applause]",
    "start": "2109540",
    "end": "2112020"
  }
]