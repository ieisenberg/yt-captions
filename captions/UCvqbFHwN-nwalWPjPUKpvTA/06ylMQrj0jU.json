[
  {
    "text": "hi everyone I am aan and we would be",
    "start": "80",
    "end": "4120"
  },
  {
    "text": "discussing about onway Gateway an",
    "start": "4120",
    "end": "6240"
  },
  {
    "text": "in-depth guide to its benefits use cases",
    "start": "6240",
    "end": "8840"
  },
  {
    "text": "and features uh I forgot the title sorry",
    "start": "8840",
    "end": "13280"
  },
  {
    "text": "okay um with me uh shivanu was supposed",
    "start": "13280",
    "end": "16480"
  },
  {
    "text": "to be here but US Visa issues so he's",
    "start": "16480",
    "end": "20960"
  },
  {
    "text": "not apart from that um welcome everyone",
    "start": "20960",
    "end": "24279"
  },
  {
    "text": "and I just wanted to know if how many of",
    "start": "24279",
    "end": "26400"
  },
  {
    "text": "you have heard about Envoy Gateway or",
    "start": "26400",
    "end": "28800"
  },
  {
    "text": "used Envoy Gateway",
    "start": "28800",
    "end": "31960"
  },
  {
    "text": "a lot okay so the other half of the room",
    "start": "32320",
    "end": "35800"
  },
  {
    "text": "what do you",
    "start": "35800",
    "end": "37840"
  },
  {
    "text": "use",
    "start": "37840",
    "end": "40600"
  },
  {
    "text": "anyone okay not a problem uh so let's",
    "start": "40600",
    "end": "44559"
  },
  {
    "text": "start with this onward Gateway",
    "start": "44559",
    "end": "46239"
  },
  {
    "text": "introduction so with this we have",
    "start": "46239",
    "end": "50079"
  },
  {
    "text": "introduction to onoy Gateway the agenda",
    "start": "50079",
    "end": "52160"
  },
  {
    "text": "is here with architecture overview we",
    "start": "52160",
    "end": "54440"
  },
  {
    "text": "have a demo by shivanu I'll play a",
    "start": "54440",
    "end": "56840"
  },
  {
    "text": "recording about 8 to 10 minutes and then",
    "start": "56840",
    "end": "60120"
  },
  {
    "text": "we can have a discussion on its features",
    "start": "60120",
    "end": "63160"
  },
  {
    "text": "and what how extensible onway Gateway is",
    "start": "63160",
    "end": "67400"
  },
  {
    "text": "so what is onway Gateway so onway",
    "start": "67400",
    "end": "70400"
  },
  {
    "text": "Gateway is a gateway which manages all",
    "start": "70400",
    "end": "74320"
  },
  {
    "text": "the just a minute it's slightly",
    "start": "74320",
    "end": "78640"
  },
  {
    "text": "confusing",
    "start": "88840",
    "end": "91840"
  },
  {
    "text": "yeah so what is onway gateway onway",
    "start": "96560",
    "end": "99240"
  },
  {
    "text": "gateway is a gateway which is uh",
    "start": "99240",
    "end": "103640"
  },
  {
    "text": "actually managing onway proxies so it is",
    "start": "103640",
    "end": "106520"
  },
  {
    "text": "a native Gateway for",
    "start": "106520",
    "end": "108280"
  },
  {
    "text": "onvo uh it is an XDS control play which",
    "start": "108280",
    "end": "111920"
  },
  {
    "text": "will dynamically manage all the fleet of",
    "start": "111920",
    "end": "113640"
  },
  {
    "text": "onvo wherever however how many ever you",
    "start": "113640",
    "end": "116119"
  },
  {
    "text": "have in the cluster uh it provides a",
    "start": "116119",
    "end": "119479"
  },
  {
    "text": "battery is included uh I would say",
    "start": "119479",
    "end": "122840"
  },
  {
    "text": "experience for Envoy proxy whenever you",
    "start": "122840",
    "end": "125560"
  },
  {
    "text": "install Envoy proxies uh whenever you",
    "start": "125560",
    "end": "128280"
  },
  {
    "text": "work with Envoy proxies always their",
    "start": "128280",
    "end": "131560"
  },
  {
    "text": "Envoy Gateway is natively supported and",
    "start": "131560",
    "end": "134040"
  },
  {
    "text": "we can call it as as a rapper on Envoy",
    "start": "134040",
    "end": "136879"
  },
  {
    "text": "proxies uh batteries included is one of",
    "start": "136879",
    "end": "139920"
  },
  {
    "text": "the most famous phrases for Envoy",
    "start": "139920",
    "end": "142680"
  },
  {
    "text": "Gateway it provides an extensible",
    "start": "142680",
    "end": "144840"
  },
  {
    "text": "support to a multitude of application",
    "start": "144840",
    "end": "146680"
  },
  {
    "text": "Gateway use cases and everything and why",
    "start": "146680",
    "end": "149599"
  },
  {
    "text": "would we use Ono Gateway uh over any",
    "start": "149599",
    "end": "153080"
  },
  {
    "text": "other Gateway so it satisfies most of",
    "start": "153080",
    "end": "156160"
  },
  {
    "text": "the common use cases for any of the",
    "start": "156160",
    "end": "158200"
  },
  {
    "text": "Gateway uh purposes",
    "start": "158200",
    "end": "160920"
  },
  {
    "text": "so I would say it I it's not a",
    "start": "160920",
    "end": "164239"
  },
  {
    "text": "full-fledged service me mesh application",
    "start": "164239",
    "end": "166680"
  },
  {
    "text": "but yes it will support all the other",
    "start": "166680",
    "end": "168680"
  },
  {
    "text": "use cases all common use cases like",
    "start": "168680",
    "end": "170760"
  },
  {
    "text": "traffic routing and uh management apart",
    "start": "170760",
    "end": "174519"
  },
  {
    "text": "from that it is very performant high",
    "start": "174519",
    "end": "177000"
  },
  {
    "text": "efficiency high performance it's very",
    "start": "177000",
    "end": "179360"
  },
  {
    "text": "extensive ible we can have rules we can",
    "start": "179360",
    "end": "181159"
  },
  {
    "text": "have filters we can attach other uh",
    "start": "181159",
    "end": "185440"
  },
  {
    "text": "proxies as well it we have Dynamic",
    "start": "185440",
    "end": "188080"
  },
  {
    "text": "configurations for onway it's very",
    "start": "188080",
    "end": "190720"
  },
  {
    "text": "secure and we have support for all the",
    "start": "190720",
    "end": "194680"
  },
  {
    "text": "protocols available UDP TLS HTTP and uh",
    "start": "194680",
    "end": "200000"
  },
  {
    "text": "what else do we have",
    "start": "200000",
    "end": "202080"
  },
  {
    "text": "grpc and it has a seamless integration",
    "start": "202080",
    "end": "204640"
  },
  {
    "text": "with all the service measures and all",
    "start": "204640",
    "end": "206319"
  },
  {
    "text": "the other orchestration",
    "start": "206319",
    "end": "208319"
  },
  {
    "text": "platforms so this this is a basic",
    "start": "208319",
    "end": "210280"
  },
  {
    "text": "introduction to Envoy Gateway now let's",
    "start": "210280",
    "end": "212640"
  },
  {
    "text": "start with the architecture overview so",
    "start": "212640",
    "end": "215560"
  },
  {
    "text": "we have an Envoy Gateway which listens",
    "start": "215560",
    "end": "217560"
  },
  {
    "text": "to the static configuration and dynamic",
    "start": "217560",
    "end": "219720"
  },
  {
    "text": "configurations and it manages all the",
    "start": "219720",
    "end": "222080"
  },
  {
    "text": "fleet of onway proxies that are there in",
    "start": "222080",
    "end": "224480"
  },
  {
    "text": "your cluster so a traffic request is",
    "start": "224480",
    "end": "227680"
  },
  {
    "text": "coming in to the Gateway it will",
    "start": "227680",
    "end": "229239"
  },
  {
    "text": "redirect it to the proxy and the proxy",
    "start": "229239",
    "end": "231080"
  },
  {
    "text": "will then manage all the traffic and",
    "start": "231080",
    "end": "233720"
  },
  {
    "text": "send it to your user application",
    "start": "233720",
    "end": "236000"
  },
  {
    "text": "wherever it",
    "start": "236000",
    "end": "237680"
  },
  {
    "text": "is uh a high level overview of this",
    "start": "237680",
    "end": "240920"
  },
  {
    "text": "particular diagram we have a provider at",
    "start": "240920",
    "end": "243920"
  },
  {
    "text": "the bottom uh the provider listens to",
    "start": "243920",
    "end": "246680"
  },
  {
    "text": "all the static configuration and the",
    "start": "246680",
    "end": "248159"
  },
  {
    "text": "dynamic configuration that I have told",
    "start": "248159",
    "end": "250079"
  },
  {
    "text": "earlier then it uh goes to all the",
    "start": "250079",
    "end": "254519"
  },
  {
    "text": "translators the translator splits it up",
    "start": "254519",
    "end": "257239"
  },
  {
    "text": "it up to the infra and the XDS ir and",
    "start": "257239",
    "end": "260519"
  },
  {
    "text": "this is done to provide uh like if you",
    "start": "260519",
    "end": "263880"
  },
  {
    "text": "have a cuberes uh resource it will have",
    "start": "263880",
    "end": "266400"
  },
  {
    "text": "a cuberes listener if you have a file",
    "start": "266400",
    "end": "268960"
  },
  {
    "text": "resource probably",
    "start": "268960",
    "end": "270280"
  },
  {
    "text": "uh in the future it will have a file",
    "start": "270280",
    "end": "272320"
  },
  {
    "text": "listener and for this part we have split",
    "start": "272320",
    "end": "275600"
  },
  {
    "text": "it into two parts because we can have",
    "start": "275600",
    "end": "278080"
  },
  {
    "text": "control over public facing apis and we",
    "start": "278080",
    "end": "280560"
  },
  {
    "text": "can have control over all the other",
    "start": "280560",
    "end": "282800"
  },
  {
    "text": "internal apis also",
    "start": "282800",
    "end": "286360"
  },
  {
    "text": "uh we all know that whenever we make a",
    "start": "286360",
    "end": "289759"
  },
  {
    "text": "Gateway resource uh onvoy proxy is uh a",
    "start": "289759",
    "end": "293639"
  },
  {
    "text": "new Envoy proxy instance is already up",
    "start": "293639",
    "end": "295520"
  },
  {
    "text": "and running so we can have a numerous",
    "start": "295520",
    "end": "298320"
  },
  {
    "text": "Envoy proxies with different con",
    "start": "298320",
    "end": "300600"
  },
  {
    "text": "configurations running and which is",
    "start": "300600",
    "end": "302759"
  },
  {
    "text": "being managed by a single onvoy Gateway",
    "start": "302759",
    "end": "305639"
  },
  {
    "text": "uh so n number of Gateway resource with",
    "start": "305639",
    "end": "308400"
  },
  {
    "text": "managed by single onvoy",
    "start": "308400",
    "end": "311800"
  },
  {
    "text": "Gateway so a little bit of extensions so",
    "start": "313440",
    "end": "317320"
  },
  {
    "text": "we can have a lot of extensions to ony G",
    "start": "317320",
    "end": "320840"
  },
  {
    "text": "Gateway natively supported here we have",
    "start": "320840",
    "end": "322880"
  },
  {
    "text": "an example of an o two filter extension",
    "start": "322880",
    "end": "327319"
  },
  {
    "text": "which is uh connected to to our onoy",
    "start": "327319",
    "end": "330560"
  },
  {
    "text": "Gateway right",
    "start": "330560",
    "end": "332440"
  },
  {
    "text": "now coming to a slight demo we will",
    "start": "332440",
    "end": "335440"
  },
  {
    "text": "continue with the features after that",
    "start": "335440",
    "end": "337039"
  },
  {
    "text": "demo it's uh it's the demo is talking",
    "start": "337039",
    "end": "340240"
  },
  {
    "text": "about HTTP routing and uh it's uh like",
    "start": "340240",
    "end": "344960"
  },
  {
    "text": "traffic management and everything and",
    "start": "344960",
    "end": "346759"
  },
  {
    "text": "then we will continue with all the",
    "start": "346759",
    "end": "348160"
  },
  {
    "text": "filters and",
    "start": "348160",
    "end": "350639"
  },
  {
    "text": "rules uh thanks for coming uh today and",
    "start": "358199",
    "end": "361360"
  },
  {
    "text": "let's get it started with the demo so",
    "start": "361360",
    "end": "363240"
  },
  {
    "text": "there are multiple exciting features in",
    "start": "363240",
    "end": "364759"
  },
  {
    "text": "an Gateway and let's see a couple of",
    "start": "364759",
    "end": "366800"
  },
  {
    "text": "them in",
    "start": "366800",
    "end": "369159"
  },
  {
    "text": "action yeah can we increase the volume",
    "start": "373520",
    "end": "376759"
  },
  {
    "text": "can we increase the",
    "start": "376759",
    "end": "379599"
  },
  {
    "text": "volume",
    "start": "388400",
    "end": "391400"
  },
  {
    "text": "thank you and hi everyone this is shanu",
    "start": "394960",
    "end": "397880"
  },
  {
    "text": "uh thanks for coming uh today and let's",
    "start": "397880",
    "end": "400199"
  },
  {
    "text": "get it started with the demo so there",
    "start": "400199",
    "end": "401960"
  },
  {
    "text": "are multiple exciting features in N",
    "start": "401960",
    "end": "403720"
  },
  {
    "text": "Gateway and let's see a couple of them",
    "start": "403720",
    "end": "405599"
  },
  {
    "text": "in action to start with sttp routing so",
    "start": "405599",
    "end": "408400"
  },
  {
    "text": "we need to create a Gateway class which",
    "start": "408400",
    "end": "409599"
  },
  {
    "text": "uses a n proxy Gateway controller and",
    "start": "409599",
    "end": "411720"
  },
  {
    "text": "then we need to create a Gateway which",
    "start": "411720",
    "end": "414319"
  },
  {
    "text": "uh references the Gateway class and",
    "start": "414319",
    "end": "416240"
  },
  {
    "text": "exposes a listener so here we are",
    "start": "416240",
    "end": "417720"
  },
  {
    "text": "exposing an STP listener on board 80 and",
    "start": "417720",
    "end": "420319"
  },
  {
    "text": "then we can configure multiple STP",
    "start": "420319",
    "end": "421800"
  },
  {
    "text": "routes uh which references to different",
    "start": "421800",
    "end": "424479"
  },
  {
    "text": "backend services and attach to uh the",
    "start": "424479",
    "end": "427639"
  },
  {
    "text": "given Gateway here we are attaching it",
    "start": "427639",
    "end": "429080"
  },
  {
    "text": "to the example Gateway so to see this",
    "start": "429080",
    "end": "432160"
  },
  {
    "text": "particular example in action I have",
    "start": "432160",
    "end": "434000"
  },
  {
    "text": "created uh so I've created a multiple",
    "start": "434000",
    "end": "436440"
  },
  {
    "text": "four clusters and everything is set up",
    "start": "436440",
    "end": "438720"
  },
  {
    "text": "in two three and four clusters and let's",
    "start": "438720",
    "end": "441479"
  },
  {
    "text": "set up everything from scratch in the",
    "start": "441479",
    "end": "443199"
  },
  {
    "text": "first",
    "start": "443199",
    "end": "444120"
  },
  {
    "text": "cluster so first of all we need to",
    "start": "444120",
    "end": "446080"
  },
  {
    "text": "install the N gway itself for that I",
    "start": "446080",
    "end": "449039"
  },
  {
    "text": "just need to run this hel install",
    "start": "449039",
    "end": "450400"
  },
  {
    "text": "command which is pretty straightforward",
    "start": "450400",
    "end": "452840"
  },
  {
    "text": "and while it's creating uh installing",
    "start": "452840",
    "end": "455400"
  },
  {
    "text": "and Gateway uh let me show you the",
    "start": "455400",
    "end": "457879"
  },
  {
    "text": "routes that I'm going to configure so",
    "start": "457879",
    "end": "459280"
  },
  {
    "text": "this is the Gateway class this is the",
    "start": "459280",
    "end": "460599"
  },
  {
    "text": "Gateway with the with the listener and",
    "start": "460599",
    "end": "463639"
  },
  {
    "text": "then I'm configuring three STP routes",
    "start": "463639",
    "end": "466240"
  },
  {
    "text": "with uh different services so this route",
    "start": "466240",
    "end": "469400"
  },
  {
    "text": "is using hostname example.com and is",
    "start": "469400",
    "end": "471879"
  },
  {
    "text": "exposing example service on P 880",
    "start": "471879",
    "end": "474639"
  },
  {
    "text": "similarly uh this route is uh using host",
    "start": "474639",
    "end": "477759"
  },
  {
    "text": "name food. example.com",
    "start": "477759",
    "end": "479520"
  },
  {
    "text": "with path prefix SL login and exposing F",
    "start": "479520",
    "end": "482280"
  },
  {
    "text": "service on board",
    "start": "482280",
    "end": "483800"
  },
  {
    "text": "880 another service is bar service and",
    "start": "483800",
    "end": "488039"
  },
  {
    "text": "if the header is Canary the request goes",
    "start": "488039",
    "end": "490720"
  },
  {
    "text": "to Bar Canary service and if the header",
    "start": "490720",
    "end": "492759"
  },
  {
    "text": "if there's no header uh the request goes",
    "start": "492759",
    "end": "494479"
  },
  {
    "text": "to Bar service",
    "start": "494479",
    "end": "495840"
  },
  {
    "text": "itself so let's see if everything is",
    "start": "495840",
    "end": "498080"
  },
  {
    "text": "installed",
    "start": "498080",
    "end": "501000"
  },
  {
    "text": "um uh so NY Gateway is installed and",
    "start": "502360",
    "end": "504759"
  },
  {
    "text": "let's check if the Cs are",
    "start": "504759",
    "end": "508240"
  },
  {
    "text": "installed the required cies like the",
    "start": "508240",
    "end": "510960"
  },
  {
    "text": "routes Gateway class and N proxy patch",
    "start": "510960",
    "end": "515120"
  },
  {
    "text": "policies everything is installed so",
    "start": "515120",
    "end": "517640"
  },
  {
    "text": "let's go back to deploy our sample",
    "start": "517640",
    "end": "521039"
  },
  {
    "text": "applications and uh let's also deploy",
    "start": "521039",
    "end": "524159"
  },
  {
    "text": "the okay I need to be in the right",
    "start": "524160",
    "end": "527680"
  },
  {
    "text": "folder uh deploy the applications and",
    "start": "527680",
    "end": "530640"
  },
  {
    "text": "deploy the route itself let's see if the",
    "start": "530640",
    "end": "533120"
  },
  {
    "text": "routs are",
    "start": "533120",
    "end": "536279"
  },
  {
    "text": "created all the three are created now uh",
    "start": "537640",
    "end": "542320"
  },
  {
    "text": "okay we are using minibe cluster which",
    "start": "542320",
    "end": "544240"
  },
  {
    "text": "means the there's no external IP for the",
    "start": "544240",
    "end": "547720"
  },
  {
    "text": "load Bal service so I need to start the",
    "start": "547720",
    "end": "550440"
  },
  {
    "text": "Min Cube tunnel so that I can uh get a",
    "start": "550440",
    "end": "553120"
  },
  {
    "text": "local IP address for",
    "start": "553120",
    "end": "555320"
  },
  {
    "text": "the for the exal IP for my load B",
    "start": "555320",
    "end": "559440"
  },
  {
    "text": "Services now that the IP is assigned I",
    "start": "559440",
    "end": "561560"
  },
  {
    "text": "can start sending the",
    "start": "561560",
    "end": "563079"
  },
  {
    "text": "traffic so let me first send the traffic",
    "start": "563079",
    "end": "565600"
  },
  {
    "text": "to uh with with host example.com and",
    "start": "565600",
    "end": "568519"
  },
  {
    "text": "let's see",
    "start": "568519",
    "end": "571120"
  },
  {
    "text": "okay I need to give the",
    "start": "571839",
    "end": "577320"
  },
  {
    "text": "password",
    "start": "577440",
    "end": "579720"
  },
  {
    "text": "cool and the request is served by the",
    "start": "579720",
    "end": "582279"
  },
  {
    "text": "example back end which is expected",
    "start": "582279",
    "end": "584360"
  },
  {
    "text": "because my rules",
    "start": "584360",
    "end": "586959"
  },
  {
    "text": "says if the host name is example.com the",
    "start": "586959",
    "end": "591760"
  },
  {
    "text": "request is Ser by example service if I",
    "start": "591760",
    "end": "593760"
  },
  {
    "text": "send a request with header with host",
    "start": "593760",
    "end": "595800"
  },
  {
    "text": "name f. example.com",
    "start": "595800",
    "end": "597680"
  },
  {
    "text": "uh and with with path prefix / login the",
    "start": "597680",
    "end": "601160"
  },
  {
    "text": "request should come from F service which",
    "start": "601160",
    "end": "604079"
  },
  {
    "text": "is correct but if",
    "start": "604079",
    "end": "606519"
  },
  {
    "text": "I remove the path prefix from here the",
    "start": "606519",
    "end": "609720"
  },
  {
    "text": "request should not be served because",
    "start": "609720",
    "end": "611560"
  },
  {
    "text": "there is no rule defined for f Service",
    "start": "611560",
    "end": "615240"
  },
  {
    "text": "uh if there is no file",
    "start": "615240",
    "end": "616839"
  },
  {
    "text": "prefix so this is again working and if I",
    "start": "616839",
    "end": "621320"
  },
  {
    "text": "send the request with the host header",
    "start": "621320",
    "end": "625160"
  },
  {
    "text": "with host uh bar example.com",
    "start": "625160",
    "end": "629600"
  },
  {
    "text": "without any extra header the request is",
    "start": "629600",
    "end": "631920"
  },
  {
    "text": "coming from bar back end and if I send",
    "start": "631920",
    "end": "634279"
  },
  {
    "text": "the request with the canary header the",
    "start": "634279",
    "end": "637360"
  },
  {
    "text": "request should come from the canary",
    "start": "637360",
    "end": "639639"
  },
  {
    "text": "department and this is expected because",
    "start": "639639",
    "end": "641839"
  },
  {
    "text": "I've have added the header match rule",
    "start": "641839",
    "end": "643920"
  },
  {
    "text": "here so so in summary it's just as easy",
    "start": "643920",
    "end": "647079"
  },
  {
    "text": "as creating the STP routes and configure",
    "start": "647079",
    "end": "649000"
  },
  {
    "text": "them properly uh so that you reference",
    "start": "649000",
    "end": "651800"
  },
  {
    "text": "the right pend services and Define the",
    "start": "651800",
    "end": "653680"
  },
  {
    "text": "right tools similarly we can have",
    "start": "653680",
    "end": "655760"
  },
  {
    "text": "request and response header injected to",
    "start": "655760",
    "end": "658720"
  },
  {
    "text": "take a look at this example let me",
    "start": "658720",
    "end": "662079"
  },
  {
    "text": "switch to another",
    "start": "662079",
    "end": "664079"
  },
  {
    "text": "cluster uh the second cluster has",
    "start": "664079",
    "end": "666079"
  },
  {
    "text": "everything preconfigured so that we can",
    "start": "666079",
    "end": "667600"
  },
  {
    "text": "save some time we have the N Gateway and",
    "start": "667600",
    "end": "671880"
  },
  {
    "text": "uh all the routes",
    "start": "671880",
    "end": "674040"
  },
  {
    "text": "configured so if",
    "start": "674040",
    "end": "676200"
  },
  {
    "text": "I go back to the",
    "start": "676200",
    "end": "679560"
  },
  {
    "text": "examples all right so here I'm just uh",
    "start": "679560",
    "end": "682839"
  },
  {
    "text": "uh creating a filter which adds a f",
    "start": "682839",
    "end": "686880"
  },
  {
    "text": "header now if I send the request but",
    "start": "686880",
    "end": "689800"
  },
  {
    "text": "before sending the request we again need",
    "start": "689800",
    "end": "691360"
  },
  {
    "text": "to tel the traic for mini",
    "start": "691360",
    "end": "695519"
  },
  {
    "text": "Cube so that it has the public the",
    "start": "695519",
    "end": "698399"
  },
  {
    "text": "external",
    "start": "698399",
    "end": "700760"
  },
  {
    "text": "IP okay now let me again send the",
    "start": "700800",
    "end": "704680"
  },
  {
    "text": "request but in the second cluster where",
    "start": "704680",
    "end": "706920"
  },
  {
    "text": "everything is configured with sttp",
    "start": "706920",
    "end": "709040"
  },
  {
    "text": "routing and uh header injection is",
    "start": "709040",
    "end": "711800"
  },
  {
    "text": "enabled so I see the F header is there",
    "start": "711800",
    "end": "715120"
  },
  {
    "text": "in my",
    "start": "715120",
    "end": "716079"
  },
  {
    "text": "request I am sending",
    "start": "716079",
    "end": "719920"
  },
  {
    "text": "something but the fo is coming from the",
    "start": "719920",
    "end": "722959"
  },
  {
    "text": "injection so it's again as easy as",
    "start": "722959",
    "end": "725200"
  },
  {
    "text": "applying a filter in the your STP routs",
    "start": "725200",
    "end": "727680"
  },
  {
    "text": "the third example that we are taking",
    "start": "727680",
    "end": "729000"
  },
  {
    "text": "today is J authentication to configure J",
    "start": "729000",
    "end": "731399"
  },
  {
    "text": "authentication we need to create",
    "start": "731399",
    "end": "732760"
  },
  {
    "text": "security policies which attach to",
    "start": "732760",
    "end": "735000"
  },
  {
    "text": "specific HTP route and then we can have",
    "start": "735000",
    "end": "736800"
  },
  {
    "text": "the J Ur configured for that let me go",
    "start": "736800",
    "end": "740519"
  },
  {
    "text": "back to terminal and switch to",
    "start": "740519",
    "end": "744839"
  },
  {
    "text": "my third uh",
    "start": "744839",
    "end": "747600"
  },
  {
    "text": "cluster and uh again chel the",
    "start": "747600",
    "end": "751240"
  },
  {
    "text": "traffic to get the public IP for my",
    "start": "751240",
    "end": "753920"
  },
  {
    "text": "Gateway let's check if we have the",
    "start": "753920",
    "end": "756320"
  },
  {
    "text": "public",
    "start": "756320",
    "end": "757440"
  },
  {
    "text": "IP public as in external IP",
    "start": "757440",
    "end": "761560"
  },
  {
    "text": "yeah okay so for the J",
    "start": "761560",
    "end": "766320"
  },
  {
    "text": "authentication the rules that I'm",
    "start": "766320",
    "end": "768720"
  },
  {
    "text": "configuring this the idea is to create a",
    "start": "768720",
    "end": "771639"
  },
  {
    "text": "security policy and that security policy",
    "start": "771639",
    "end": "774199"
  },
  {
    "text": "is attaching to a given STP route and",
    "start": "774199",
    "end": "778519"
  },
  {
    "text": "then there we can Define the exact job",
    "start": "778519",
    "end": "780800"
  },
  {
    "text": "URI job",
    "start": "780800",
    "end": "782120"
  },
  {
    "text": "token um so I have two routes one is Fu",
    "start": "782120",
    "end": "785800"
  },
  {
    "text": "and one is bar and both are sending",
    "start": "785800",
    "end": "788199"
  },
  {
    "text": "traffic to the backend service with SL",
    "start": "788199",
    "end": "790600"
  },
  {
    "text": "and/ bar uh path",
    "start": "790600",
    "end": "793480"
  },
  {
    "text": "prefix but the security policy is",
    "start": "793480",
    "end": "795760"
  },
  {
    "text": "configured only for the fu STP route",
    "start": "795760",
    "end": "797959"
  },
  {
    "text": "which means if I send the traffic with/",
    "start": "797959",
    "end": "800079"
  },
  {
    "text": "Fu I should provide token otherwise the",
    "start": "800079",
    "end": "802839"
  },
  {
    "text": "request would be rejected and if I'm",
    "start": "802839",
    "end": "804519"
  },
  {
    "text": "sending the traffic to/ bar and it's",
    "start": "804519",
    "end": "807279"
  },
  {
    "text": "okay the token is not required",
    "start": "807279",
    "end": "809399"
  },
  {
    "text": "so let's first try to see if the token",
    "start": "809399",
    "end": "812880"
  },
  {
    "text": "is there okay the token is",
    "start": "812880",
    "end": "814920"
  },
  {
    "text": "exported if I send the request to F",
    "start": "814920",
    "end": "818040"
  },
  {
    "text": "without the",
    "start": "818040",
    "end": "819120"
  },
  {
    "text": "token the it should get unauthorized",
    "start": "819120",
    "end": "821920"
  },
  {
    "text": "access yeah and 41 means it's an",
    "start": "821920",
    "end": "824920"
  },
  {
    "text": "authorized but if I send the traffic to",
    "start": "824920",
    "end": "827839"
  },
  {
    "text": "bar since there is no security policy it",
    "start": "827839",
    "end": "830079"
  },
  {
    "text": "should get 100 okay now if I again send",
    "start": "830079",
    "end": "832519"
  },
  {
    "text": "the traffic but with the",
    "start": "832519",
    "end": "835079"
  },
  {
    "text": "token uh the BR token is in the header",
    "start": "835079",
    "end": "837839"
  },
  {
    "text": "it should be uh 20 okay so uh in summary",
    "start": "837839",
    "end": "842120"
  },
  {
    "text": "we can configure authentication it just",
    "start": "842120",
    "end": "844279"
  },
  {
    "text": "we need to define a security policy",
    "start": "844279",
    "end": "845800"
  },
  {
    "text": "which attach to given um STP route in in",
    "start": "845800",
    "end": "850279"
  },
  {
    "text": "theory like any any route it could bepc",
    "start": "850279",
    "end": "853040"
  },
  {
    "text": "route also",
    "start": "853040",
    "end": "855519"
  },
  {
    "text": "uh but grpc does not use chart so for",
    "start": "855519",
    "end": "858720"
  },
  {
    "text": "STP it makes sense um now the last thing",
    "start": "858720",
    "end": "863600"
  },
  {
    "text": "for today is uh rate limiting so if we",
    "start": "863600",
    "end": "866680"
  },
  {
    "text": "use uh so for for configuring R",
    "start": "866680",
    "end": "868920"
  },
  {
    "text": "limitting all we need to do is configure",
    "start": "868920",
    "end": "870680"
  },
  {
    "text": "this back end traffic policy uh the",
    "start": "870680",
    "end": "872680"
  },
  {
    "text": "backend traffic policy is again",
    "start": "872680",
    "end": "874800"
  },
  {
    "text": "attaching a given route uh and we need",
    "start": "874800",
    "end": "878480"
  },
  {
    "text": "to configure the rate limiting with uh",
    "start": "878480",
    "end": "880600"
  },
  {
    "text": "the given uh request limits and headers",
    "start": "880600",
    "end": "883279"
  },
  {
    "text": "so here I'm configuring the rate limit",
    "start": "883279",
    "end": "886000"
  },
  {
    "text": "uh with limit three request per hour and",
    "start": "886000",
    "end": "889040"
  },
  {
    "text": "the header is X user ID so it means if",
    "start": "889040",
    "end": "891800"
  },
  {
    "text": "this particular header is present then",
    "start": "891800",
    "end": "893120"
  },
  {
    "text": "only the limiting would work now let's",
    "start": "893120",
    "end": "895720"
  },
  {
    "text": "go back to terminal and switch to",
    "start": "895720",
    "end": "899519"
  },
  {
    "text": "uh third sorry fourth uh cluster and",
    "start": "899519",
    "end": "906600"
  },
  {
    "text": "uh let's start the",
    "start": "907320",
    "end": "910800"
  },
  {
    "text": "tunneling so here also everything is",
    "start": "910800",
    "end": "913000"
  },
  {
    "text": "preset up uh I have also this redis",
    "start": "913000",
    "end": "917440"
  },
  {
    "text": "deployment to Cache the rate limiting uh",
    "start": "917440",
    "end": "920320"
  },
  {
    "text": "to enable the global rate limiting in",
    "start": "920320",
    "end": "921680"
  },
  {
    "text": "Eno and cach the the values in",
    "start": "921680",
    "end": "926240"
  },
  {
    "text": "Rus so",
    "start": "926279",
    "end": "929880"
  },
  {
    "text": "the Gateway class is configured and uh",
    "start": "929880",
    "end": "933160"
  },
  {
    "text": "all we need to do is uh first step is",
    "start": "933160",
    "end": "936319"
  },
  {
    "text": "having the redis sensity and then",
    "start": "936319",
    "end": "938279"
  },
  {
    "text": "configuring the Eno gateway to use that",
    "start": "938279",
    "end": "940279"
  },
  {
    "text": "redis",
    "start": "940279",
    "end": "941519"
  },
  {
    "text": "instance and then we need to define the",
    "start": "941519",
    "end": "943839"
  },
  {
    "text": "backend traffic policy so in this given",
    "start": "943839",
    "end": "945720"
  },
  {
    "text": "back and trft policy as I said earlier",
    "start": "945720",
    "end": "947639"
  },
  {
    "text": "I'm just depending if the header is",
    "start": "947639",
    "end": "949480"
  },
  {
    "text": "present I'm requesting I'm limiting the",
    "start": "949480",
    "end": "951199"
  },
  {
    "text": "request to three per",
    "start": "951199",
    "end": "952759"
  },
  {
    "text": "hour so let's try to send the traffic",
    "start": "952759",
    "end": "956399"
  },
  {
    "text": "first uh without the header",
    "start": "956399",
    "end": "960600"
  },
  {
    "text": "and it's all 200 okay and if we send the",
    "start": "962000",
    "end": "964920"
  },
  {
    "text": "traffic with header I'm expecting only",
    "start": "964920",
    "end": "967720"
  },
  {
    "text": "three requests to get accepted because",
    "start": "967720",
    "end": "970199"
  },
  {
    "text": "uh uh because the back traffic policies",
    "start": "970199",
    "end": "975120"
  },
  {
    "text": "says only three requests per hour so if",
    "start": "975120",
    "end": "976759"
  },
  {
    "text": "I send four request in just two uh two",
    "start": "976759",
    "end": "979839"
  },
  {
    "text": "seconds only three should get accepted",
    "start": "979839",
    "end": "982440"
  },
  {
    "text": "let's",
    "start": "982440",
    "end": "984680"
  },
  {
    "text": "see yeah so the fourth one is denied and",
    "start": "984680",
    "end": "987759"
  },
  {
    "text": "because it says X limit rate limit and",
    "start": "987759",
    "end": "991160"
  },
  {
    "text": "uh it's rate limited",
    "start": "991160",
    "end": "993079"
  },
  {
    "text": "true so configuring rate limiting is",
    "start": "993079",
    "end": "996000"
  },
  {
    "text": "very easy just you need to create a",
    "start": "996000",
    "end": "997519"
  },
  {
    "text": "backend traffic policy attach it to the",
    "start": "997519",
    "end": "1000079"
  },
  {
    "text": "STP route and U configure your rate",
    "start": "1000079",
    "end": "1003000"
  },
  {
    "text": "limiting uh in the rate limiting part so",
    "start": "1003000",
    "end": "1006279"
  },
  {
    "text": "I think that's it for the demo I would",
    "start": "1006279",
    "end": "1008360"
  },
  {
    "text": "hand over to to take phone from here",
    "start": "1008360",
    "end": "1010680"
  },
  {
    "text": "thank",
    "start": "1010680",
    "end": "1012880"
  },
  {
    "text": "you yeah so we saw HTTP routing uh",
    "start": "1013000",
    "end": "1018959"
  },
  {
    "text": "header manipulation J authentication and",
    "start": "1018959",
    "end": "1021000"
  },
  {
    "text": "rate limiting now we come back to cross",
    "start": "1021000",
    "end": "1023519"
  },
  {
    "text": "origin resource sharing so for Crossen",
    "start": "1023519",
    "end": "1026839"
  },
  {
    "text": "resource sharing we are attaching a",
    "start": "1026839",
    "end": "1028240"
  },
  {
    "text": "security kind to our onway Gateway here",
    "start": "1028240",
    "end": "1031079"
  },
  {
    "text": "we uh do some filtering over headers and",
    "start": "1031079",
    "end": "1035120"
  },
  {
    "text": "methods if we have X header one or X",
    "start": "1035120",
    "end": "1038000"
  },
  {
    "text": "header 2 in this demo then the traffic",
    "start": "1038000",
    "end": "1040520"
  },
  {
    "text": "will be routed to the service otherwise",
    "start": "1040520",
    "end": "1043079"
  },
  {
    "text": "it will be not so this is about cross",
    "start": "1043079",
    "end": "1045438"
  },
  {
    "text": "origin resource sharing going to grp",
    "start": "1045439",
    "end": "1048640"
  },
  {
    "text": "routing so grpc routing is uh recently",
    "start": "1048640",
    "end": "1052000"
  },
  {
    "text": "supported and it is very similar to http",
    "start": "1052000",
    "end": "1054520"
  },
  {
    "text": "routing we can see here the service is",
    "start": "1054520",
    "end": "1056919"
  },
  {
    "text": "being handled by the port 9000 and uh it",
    "start": "1056919",
    "end": "1060679"
  },
  {
    "text": "is it is not a lot different from HTP",
    "start": "1060679",
    "end": "1064200"
  },
  {
    "text": "routing comes uh coming to http",
    "start": "1064200",
    "end": "1067120"
  },
  {
    "text": "redirects here we are using some rules",
    "start": "1067120",
    "end": "1069360"
  },
  {
    "text": "and filters uh on the basis of our",
    "start": "1069360",
    "end": "1072640"
  },
  {
    "text": "status code in this demo uh the if the",
    "start": "1072640",
    "end": "1075159"
  },
  {
    "text": "status code is 3001 the whole traffic",
    "start": "1075159",
    "end": "1077919"
  },
  {
    "text": "will be read redirected to Port 443 of",
    "start": "1077919",
    "end": "1080200"
  },
  {
    "text": "the hostname example.com of the",
    "start": "1080200",
    "end": "1083520"
  },
  {
    "text": "service uh we can also have a",
    "start": "1083520",
    "end": "1086679"
  },
  {
    "text": "multicluster service routing so in",
    "start": "1086679",
    "end": "1088919"
  },
  {
    "text": "multicluster service routing we are",
    "start": "1088919",
    "end": "1090480"
  },
  {
    "text": "exposing the multicluster service API of",
    "start": "1090480",
    "end": "1092400"
  },
  {
    "text": "the of kubernetes where we can do an",
    "start": "1092400",
    "end": "1095360"
  },
  {
    "text": "export of service a from cluster a and",
    "start": "1095360",
    "end": "1097919"
  },
  {
    "text": "import it into uh cluster B of service B",
    "start": "1097919",
    "end": "1101280"
  },
  {
    "text": "so here if we can see that we have make",
    "start": "1101280",
    "end": "1104720"
  },
  {
    "text": "a rule we have made a rule to http route",
    "start": "1104720",
    "end": "1107760"
  },
  {
    "text": "where we we are using the backend",
    "start": "1107760",
    "end": "1109640"
  },
  {
    "text": "service of cluster a on Port uh 3000",
    "start": "1109640",
    "end": "1112880"
  },
  {
    "text": "with the uh the routing to our cluster",
    "start": "1112880",
    "end": "1117720"
  },
  {
    "text": "B next we do a HTTP route request",
    "start": "1117720",
    "end": "1120880"
  },
  {
    "text": "mirroring uh a request mirroring is",
    "start": "1120880",
    "end": "1123159"
  },
  {
    "text": "nothing a request will come in it it can",
    "start": "1123159",
    "end": "1125559"
  },
  {
    "text": "go to uh two backend services so let's",
    "start": "1125559",
    "end": "1129159"
  },
  {
    "text": "just say we have one request which is",
    "start": "1129159",
    "end": "1130919"
  },
  {
    "text": "coming in and it will be served to port",
    "start": "1130919",
    "end": "1133360"
  },
  {
    "text": "8080 probably and then we have made a",
    "start": "1133360",
    "end": "1135520"
  },
  {
    "text": "new rule which will serve it to 3,000 as",
    "start": "1135520",
    "end": "1138320"
  },
  {
    "text": "as well so a new",
    "start": "1138320",
    "end": "1141320"
  },
  {
    "text": "service uh next we have HTTP Route",
    "start": "1142120",
    "end": "1145240"
  },
  {
    "text": "traffic splitting so we can do a traffic",
    "start": "1145240",
    "end": "1148520"
  },
  {
    "text": "splitting on the basis of uh some rules",
    "start": "1148520",
    "end": "1151000"
  },
  {
    "text": "or filters uh in this part we have uh",
    "start": "1151000",
    "end": "1155080"
  },
  {
    "text": "done we have made a rule that every",
    "start": "1155080",
    "end": "1157200"
  },
  {
    "text": "traffic will be filtered on the basis of",
    "start": "1157200",
    "end": "1159520"
  },
  {
    "text": "like uh 50% of traffic will go to Port",
    "start": "1159520",
    "end": "1162360"
  },
  {
    "text": "3,000 of service of backend one and uh",
    "start": "1162360",
    "end": "1165440"
  },
  {
    "text": "50% of traffic will go to uh P 3,000 of",
    "start": "1165440",
    "end": "1169120"
  },
  {
    "text": "back and two so we can do uh traffic",
    "start": "1169120",
    "end": "1171440"
  },
  {
    "text": "splitting as",
    "start": "1171440",
    "end": "1174000"
  },
  {
    "text": "well this is the most exciting part for",
    "start": "1174240",
    "end": "1177200"
  },
  {
    "text": "me so proxy observability in 0.6.0",
    "start": "1177200",
    "end": "1180400"
  },
  {
    "text": "release of onvoy Gateway we have proxy",
    "start": "1180400",
    "end": "1183000"
  },
  {
    "text": "on observability as well uh we can have",
    "start": "1183000",
    "end": "1186720"
  },
  {
    "text": "uh onvo access logs and we can look into",
    "start": "1186720",
    "end": "1189919"
  },
  {
    "text": "metrics traces on graan Loi so we can",
    "start": "1189919",
    "end": "1193640"
  },
  {
    "text": "have a lot of observability on proxy uh",
    "start": "1193640",
    "end": "1196840"
  },
  {
    "text": "our onvo proxies and it was not",
    "start": "1196840",
    "end": "1198919"
  },
  {
    "text": "available before uh so it's very",
    "start": "1198919",
    "end": "1202080"
  },
  {
    "text": "exciting for me right now uh so that's",
    "start": "1202080",
    "end": "1206320"
  },
  {
    "text": "the end of the presentation we have a",
    "start": "1206320",
    "end": "1207960"
  },
  {
    "text": "couple of minutes I think uh do we have",
    "start": "1207960",
    "end": "1210280"
  },
  {
    "text": "any",
    "start": "1210280",
    "end": "1212520"
  },
  {
    "text": "questions yeah sure so when you were",
    "start": "1217640",
    "end": "1220880"
  },
  {
    "text": "splitting your that last example how are",
    "start": "1220880",
    "end": "1224679"
  },
  {
    "text": "you actually",
    "start": "1224679",
    "end": "1227159"
  },
  {
    "text": "determining",
    "start": "1227159",
    "end": "1228720"
  },
  {
    "text": "service by not",
    "start": "1228720",
    "end": "1232120"
  },
  {
    "text": "anything yeah so uh if I am not giving",
    "start": "1233480",
    "end": "1236280"
  },
  {
    "text": "weights to anything so the splitting",
    "start": "1236280",
    "end": "1238400"
  },
  {
    "text": "will be done on 50 50/50 if I if I",
    "start": "1238400",
    "end": "1242120"
  },
  {
    "text": "maintain weights like 90 10 or something",
    "start": "1242120",
    "end": "1244600"
  },
  {
    "text": "like that then it will do a split on",
    "start": "1244600",
    "end": "1247320"
  },
  {
    "text": "that",
    "start": "1247320",
    "end": "1249519"
  },
  {
    "text": "basis sorry",
    "start": "1257120",
    "end": "1261320"
  },
  {
    "text": "that I have no idea I am very sorry we",
    "start": "1261320",
    "end": "1264440"
  },
  {
    "text": "can get back to you on that I need to",
    "start": "1264440",
    "end": "1266679"
  },
  {
    "text": "check on the docks so theit",
    "start": "1266679",
    "end": "1270679"
  },
  {
    "text": "Bas",
    "start": "1273520",
    "end": "1276520"
  },
  {
    "text": "request different type of",
    "start": "1281200",
    "end": "1284760"
  },
  {
    "text": "spitting so this is weight based",
    "start": "1284760",
    "end": "1288640"
  },
  {
    "text": "yeah it's I think each will",
    "start": "1288640",
    "end": "1293039"
  },
  {
    "text": "getf",
    "start": "1293039",
    "end": "1294840"
  },
  {
    "text": "anded at",
    "start": "1294840",
    "end": "1298000"
  },
  {
    "text": "Le yeah",
    "start": "1298400",
    "end": "1300960"
  },
  {
    "text": "so he told the answer I I did not have",
    "start": "1300960",
    "end": "1303840"
  },
  {
    "text": "an answer for round robin",
    "start": "1303840",
    "end": "1308039"
  },
  {
    "text": "yeah uh anyone",
    "start": "1308760",
    "end": "1312640"
  },
  {
    "text": "else",
    "start": "1312720",
    "end": "1315720"
  },
  {
    "text": "yeah",
    "start": "1317039",
    "end": "1320039"
  },
  {
    "text": "okay uh could you quickly repeat the",
    "start": "1323840",
    "end": "1326480"
  },
  {
    "text": "question sorry just so sorry could you",
    "start": "1326480",
    "end": "1328559"
  },
  {
    "text": "repeat the question Qui sobody can hear",
    "start": "1328559",
    "end": "1330320"
  },
  {
    "text": "so uh can you tell me your name okay",
    "start": "1330320",
    "end": "1333360"
  },
  {
    "text": "yeah so Dave you asked why are we using",
    "start": "1333360",
    "end": "1336480"
  },
  {
    "text": "onway Gateway over any other like stto",
    "start": "1336480",
    "end": "1338919"
  },
  {
    "text": "or uh some other Gateway right yeah so",
    "start": "1338919",
    "end": "1344600"
  },
  {
    "text": "my answer would be that one uh I prefer",
    "start": "1344600",
    "end": "1348400"
  },
  {
    "text": "I use onway Gateway over sto because uh",
    "start": "1348400",
    "end": "1352480"
  },
  {
    "text": "I am not a very big organization where I",
    "start": "1352480",
    "end": "1355279"
  },
  {
    "text": "have to have a whole service mesh",
    "start": "1355279",
    "end": "1357000"
  },
  {
    "text": "configured I can have just a Gateway and",
    "start": "1357000",
    "end": "1359960"
  },
  {
    "text": "the traffic routing or splitting and",
    "start": "1359960",
    "end": "1361720"
  },
  {
    "text": "that will get my work done it is very",
    "start": "1361720",
    "end": "1363279"
  },
  {
    "text": "lightweight it is very extensible and it",
    "start": "1363279",
    "end": "1365279"
  },
  {
    "text": "is uh actually supporting all the major",
    "start": "1365279",
    "end": "1368120"
  },
  {
    "text": "protocols that I'm using so UDP TLS and",
    "start": "1368120",
    "end": "1370679"
  },
  {
    "text": "grpc if I am using and HTTP apart from",
    "start": "1370679",
    "end": "1374640"
  },
  {
    "text": "that uh it is like batteries included it",
    "start": "1374640",
    "end": "1377760"
  },
  {
    "text": "is is uh a r we can say it is a wrapper",
    "start": "1377760",
    "end": "1381080"
  },
  {
    "text": "over onvoy proxies we can like manage",
    "start": "1381080",
    "end": "1384159"
  },
  {
    "text": "all our onvoy proxies with one single",
    "start": "1384159",
    "end": "1386320"
  },
  {
    "text": "Ono Gateway so I would say because of",
    "start": "1386320",
    "end": "1389120"
  },
  {
    "text": "lightweight if I have to go with this",
    "start": "1389120",
    "end": "1391320"
  },
  {
    "text": "whole service mesh I will go with this",
    "start": "1391320",
    "end": "1394960"
  },
  {
    "text": "Ste",
    "start": "1396400",
    "end": "1398520"
  },
  {
    "text": "yeah yeah that",
    "start": "1398520",
    "end": "1402000"
  },
  {
    "text": "way are you us the",
    "start": "1406880",
    "end": "1412039"
  },
  {
    "text": "or for redis yeah so redis was being",
    "start": "1412279",
    "end": "1415919"
  },
  {
    "text": "used for rate limit rate limiting",
    "start": "1415919",
    "end": "1419679"
  },
  {
    "text": "right okay I",
    "start": "1421200",
    "end": "1423880"
  },
  {
    "text": "can okay so you want to know the",
    "start": "1423880",
    "end": "1426480"
  },
  {
    "text": "configuration like how we are",
    "start": "1426480",
    "end": "1428600"
  },
  {
    "text": "maintaining that uh config I mean",
    "start": "1428600",
    "end": "1433000"
  },
  {
    "text": "what",
    "start": "1433000",
    "end": "1436000"
  },
  {
    "text": "were okay",
    "start": "1436520",
    "end": "1438760"
  },
  {
    "text": "you",
    "start": "1438760",
    "end": "1439960"
  },
  {
    "text": "know of doesn't seem very",
    "start": "1439960",
    "end": "1446080"
  },
  {
    "text": "to asking you AI that uh so majorly I",
    "start": "1447279",
    "end": "1452320"
  },
  {
    "text": "also used Lua only but uh I think we",
    "start": "1452320",
    "end": "1455600"
  },
  {
    "text": "have a native support to redis now uh",
    "start": "1455600",
    "end": "1458360"
  },
  {
    "text": "but uh if we have like if you want to",
    "start": "1458360",
    "end": "1461039"
  },
  {
    "text": "discuss we can discuss this afterwards",
    "start": "1461039",
    "end": "1462720"
  },
  {
    "text": "as well thank you",
    "start": "1462720",
    "end": "1464480"
  },
  {
    "text": "yeah yeah sure this might be a Sil",
    "start": "1464480",
    "end": "1467039"
  },
  {
    "text": "question is the difference between using",
    "start": "1467039",
    "end": "1469320"
  },
  {
    "text": "the en Gateway verus cont",
    "start": "1469320",
    "end": "1473919"
  },
  {
    "text": "also uh so I would say uh I would like",
    "start": "1473919",
    "end": "1479399"
  },
  {
    "text": "to reiterate my part about the wrapper",
    "start": "1479399",
    "end": "1481720"
  },
  {
    "text": "part of onvoy Gateway so Ono Gateway is",
    "start": "1481720",
    "end": "1484320"
  },
  {
    "text": "very lightweight and we can consider it",
    "start": "1484320",
    "end": "1485960"
  },
  {
    "text": "as a wrapper over Ono proxy so it's a",
    "start": "1485960",
    "end": "1488120"
  },
  {
    "text": "very uh natural connection to onway",
    "start": "1488120",
    "end": "1490520"
  },
  {
    "text": "Gateway uh all the on Proxes so on",
    "start": "1490520",
    "end": "1493159"
  },
  {
    "text": "Contour or as da mentioned sto I will",
    "start": "1493159",
    "end": "1496039"
  },
  {
    "text": "have to have another set of",
    "start": "1496039",
    "end": "1497240"
  },
  {
    "text": "configuration for onway proxies or side",
    "start": "1497240",
    "end": "1499640"
  },
  {
    "text": "cars so that is why I would use onway",
    "start": "1499640",
    "end": "1502919"
  },
  {
    "text": "Gateway but uh if the use case is more",
    "start": "1502919",
    "end": "1506559"
  },
  {
    "text": "Nuance or more extended then I would use",
    "start": "1506559",
    "end": "1509799"
  },
  {
    "text": "something else okay so is cont just like",
    "start": "1509799",
    "end": "1513799"
  },
  {
    "text": "another yeah yeah exactly uh but Ono",
    "start": "1513799",
    "end": "1517679"
  },
  {
    "text": "Gateway is natively supported and that",
    "start": "1517679",
    "end": "1520360"
  },
  {
    "text": "is why I would use Ono gate yeah I can't",
    "start": "1520360",
    "end": "1523159"
  },
  {
    "text": "speak to any individual project but I",
    "start": "1523159",
    "end": "1524600"
  },
  {
    "text": "know a lot of the folks who've built",
    "start": "1524600",
    "end": "1525919"
  },
  {
    "text": "these kind of things are working",
    "start": "1525919",
    "end": "1527000"
  },
  {
    "text": "together and and there has been talk of",
    "start": "1527000",
    "end": "1530039"
  },
  {
    "text": "a lot of these projects rebasing",
    "start": "1530039",
    "end": "1531480"
  },
  {
    "text": "essentially onto onvoy Gateway as like a",
    "start": "1531480",
    "end": "1533240"
  },
  {
    "text": "sort of commodity layer eventually now",
    "start": "1533240",
    "end": "1535520"
  },
  {
    "text": "obviously you know I can't speak for any",
    "start": "1535520",
    "end": "1536760"
  },
  {
    "text": "company or any other projects road map",
    "start": "1536760",
    "end": "1538480"
  },
  {
    "text": "but that's definitely been discussed",
    "start": "1538480",
    "end": "1539760"
  },
  {
    "text": "right the",
    "start": "1539760",
    "end": "1542240"
  },
  {
    "text": "similarities",
    "start": "1543640",
    "end": "1546640"
  },
  {
    "text": "okay yes please is there a way to",
    "start": "1546799",
    "end": "1551000"
  },
  {
    "text": "expose other on features like that are",
    "start": "1551000",
    "end": "1554440"
  },
  {
    "text": "not explicitly exposed through",
    "start": "1554440",
    "end": "1556679"
  },
  {
    "text": "the",
    "start": "1556679",
    "end": "1559679"
  },
  {
    "text": "fors as much as I know yes yeah there's",
    "start": "1564039",
    "end": "1567520"
  },
  {
    "text": "a resource type where you can",
    "start": "1567520",
    "end": "1568720"
  },
  {
    "text": "essentially punch through the",
    "start": "1568720",
    "end": "1569799"
  },
  {
    "text": "abstraction and give avvo configuration",
    "start": "1569799",
    "end": "1573120"
  },
  {
    "text": "direct yeah yeah maybe maybe",
    "start": "1573120",
    "end": "1576520"
  },
  {
    "text": "stay okay uh anything",
    "start": "1576520",
    "end": "1581919"
  },
  {
    "text": "else cool thank you very much thank",
    "start": "1582919",
    "end": "1586600"
  },
  {
    "text": "you",
    "start": "1586600",
    "end": "1589600"
  }
]