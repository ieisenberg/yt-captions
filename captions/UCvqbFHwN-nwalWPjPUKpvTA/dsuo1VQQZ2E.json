[
  {
    "text": "all right hi everybody and welcome to",
    "start": "880",
    "end": "2560"
  },
  {
    "text": "the serverless working group update",
    "start": "2560",
    "end": "4240"
  },
  {
    "text": "uh tmr and i are going to be talking",
    "start": "4240",
    "end": "5920"
  },
  {
    "text": "about two different projects today",
    "start": "5920",
    "end": "7839"
  },
  {
    "text": "cloud events as well as the workflow",
    "start": "7839",
    "end": "9519"
  },
  {
    "text": "specification so",
    "start": "9519",
    "end": "10960"
  },
  {
    "text": "seymour can you go ahead and share your",
    "start": "10960",
    "end": "12880"
  },
  {
    "text": "screens i think we're going to vanish",
    "start": "12880",
    "end": "14920"
  },
  {
    "text": "now",
    "start": "14920",
    "end": "16480"
  },
  {
    "text": "all right let's go and start the",
    "start": "16480",
    "end": "17680"
  },
  {
    "text": "presentation and here we go so i'm going",
    "start": "17680",
    "end": "19680"
  },
  {
    "text": "to be up first",
    "start": "19680",
    "end": "21600"
  },
  {
    "text": "so let's go to the next slide obviously",
    "start": "21600",
    "end": "23279"
  },
  {
    "text": "as i mentioned we're going to talk about",
    "start": "23279",
    "end": "24240"
  },
  {
    "text": "cloud events give you a quick update",
    "start": "24240",
    "end": "25680"
  },
  {
    "text": "and then the bulk of the talk will be",
    "start": "25680",
    "end": "27439"
  },
  {
    "text": "team we're talking about the serverless",
    "start": "27439",
    "end": "28880"
  },
  {
    "text": "workflow spec",
    "start": "28880",
    "end": "30320"
  },
  {
    "text": "all right so first obviously cloudevents",
    "start": "30320",
    "end": "33200"
  },
  {
    "text": "so",
    "start": "33200",
    "end": "33520"
  },
  {
    "text": "just a quick recap we delivered the",
    "start": "33520",
    "end": "36480"
  },
  {
    "text": "latest version of the spec",
    "start": "36480",
    "end": "37760"
  },
  {
    "text": "which is version 101 back in december of",
    "start": "37760",
    "end": "40559"
  },
  {
    "text": "last year",
    "start": "40559",
    "end": "42320"
  },
  {
    "text": "same deliverables as before and i'm not",
    "start": "42320",
    "end": "44399"
  },
  {
    "text": "going to go into what the spec is i'm",
    "start": "44399",
    "end": "45600"
  },
  {
    "text": "assuming everybody understands what that",
    "start": "45600",
    "end": "46960"
  },
  {
    "text": "is or you can go find it this isn't",
    "start": "46960",
    "end": "48960"
  },
  {
    "text": "that kind of call we're going to go into",
    "start": "48960",
    "end": "50160"
  },
  {
    "text": "deep dive but just so you understand",
    "start": "50160",
    "end": "52079"
  },
  {
    "text": "what the deliverables were it was",
    "start": "52079",
    "end": "53360"
  },
  {
    "text": "obviously the specification itself",
    "start": "53360",
    "end": "55280"
  },
  {
    "text": "the transport bindings the encoding",
    "start": "55280",
    "end": "57199"
  },
  {
    "text": "formats a primer to give you guidance on",
    "start": "57199",
    "end": "59440"
  },
  {
    "text": "why we did what we did how to use the",
    "start": "59440",
    "end": "60960"
  },
  {
    "text": "spec stuff like that",
    "start": "60960",
    "end": "62399"
  },
  {
    "text": "and a whole bunch of sdks to help you",
    "start": "62399",
    "end": "63920"
  },
  {
    "text": "get started with cloud events okay",
    "start": "63920",
    "end": "65920"
  },
  {
    "text": "now in terms of what's coming up next",
    "start": "65920",
    "end": "67520"
  },
  {
    "text": "for the cloud events deck itself",
    "start": "67520",
    "end": "69360"
  },
  {
    "text": "to be honest not a whole lot we are",
    "start": "69360",
    "end": "71439"
  },
  {
    "text": "doing some minor bug fixes that people",
    "start": "71439",
    "end": "73280"
  },
  {
    "text": "find but for the most part we're finding",
    "start": "73280",
    "end": "74880"
  },
  {
    "text": "the spec is pretty much okay",
    "start": "74880",
    "end": "76640"
  },
  {
    "text": "and we're just waiting for more",
    "start": "76640",
    "end": "77680"
  },
  {
    "text": "community feedback to see if there are",
    "start": "77680",
    "end": "79119"
  },
  {
    "text": "things we need to work on in the future",
    "start": "79119",
    "end": "81040"
  },
  {
    "text": "but we're not just toiling our our",
    "start": "81040",
    "end": "82640"
  },
  {
    "text": "fingers we're actually looking at the",
    "start": "82640",
    "end": "84240"
  },
  {
    "text": "next set of pain points",
    "start": "84240",
    "end": "85680"
  },
  {
    "text": "and as you can see here we're going to",
    "start": "85680",
    "end": "87520"
  },
  {
    "text": "start looking at what we call sort of",
    "start": "87520",
    "end": "88799"
  },
  {
    "text": "the life cycle of",
    "start": "88799",
    "end": "90079"
  },
  {
    "text": "event delivery and from from beginning",
    "start": "90079",
    "end": "92159"
  },
  {
    "text": "to end okay",
    "start": "92159",
    "end": "93600"
  },
  {
    "text": "now crown events helps you deliver the",
    "start": "93600",
    "end": "95920"
  },
  {
    "text": "event from the producer to the",
    "start": "95920",
    "end": "97600"
  },
  {
    "text": "to the consumer itself but in order for",
    "start": "97600",
    "end": "99759"
  },
  {
    "text": "that to actually get",
    "start": "99759",
    "end": "100640"
  },
  {
    "text": "started what has to happen is the",
    "start": "100640",
    "end": "102640"
  },
  {
    "text": "consumer first has to discover",
    "start": "102640",
    "end": "105040"
  },
  {
    "text": "what event producers are out there and",
    "start": "105040",
    "end": "106880"
  },
  {
    "text": "what the events are that they actually",
    "start": "106880",
    "end": "108159"
  },
  {
    "text": "do produce",
    "start": "108159",
    "end": "109040"
  },
  {
    "text": "okay so what we're going to be doing is",
    "start": "109040",
    "end": "110799"
  },
  {
    "text": "working on a discovery api spec",
    "start": "110799",
    "end": "113200"
  },
  {
    "text": "and that's going to allow producers to",
    "start": "113200",
    "end": "114960"
  },
  {
    "text": "advertise that they're out there",
    "start": "114960",
    "end": "117040"
  },
  {
    "text": "and what the events are that that people",
    "start": "117040",
    "end": "118880"
  },
  {
    "text": "can't subscribe to",
    "start": "118880",
    "end": "120240"
  },
  {
    "text": "so a consumer will then hit a discovery",
    "start": "120240",
    "end": "122960"
  },
  {
    "text": "endpoint",
    "start": "122960",
    "end": "123759"
  },
  {
    "text": "find out what their what events are out",
    "start": "123759",
    "end": "125439"
  },
  {
    "text": "there who produces them",
    "start": "125439",
    "end": "127600"
  },
  {
    "text": "how they can be delivered you know",
    "start": "127600",
    "end": "128800"
  },
  {
    "text": "different transport protocols what are",
    "start": "128800",
    "end": "130720"
  },
  {
    "text": "different subscription options do they",
    "start": "130720",
    "end": "132319"
  },
  {
    "text": "support filtering stuff like that",
    "start": "132319",
    "end": "134239"
  },
  {
    "text": "and then of course how to actually",
    "start": "134239",
    "end": "135520"
  },
  {
    "text": "subscribe okay",
    "start": "135520",
    "end": "137920"
  },
  {
    "text": "after that then comes the actual",
    "start": "137920",
    "end": "139360"
  },
  {
    "text": "subscription itself",
    "start": "139360",
    "end": "141040"
  },
  {
    "text": "now if the protocol that they chose does",
    "start": "141040",
    "end": "143200"
  },
  {
    "text": "not actually have a native subscription",
    "start": "143200",
    "end": "145120"
  },
  {
    "text": "type mechanism built into it like for",
    "start": "145120",
    "end": "146800"
  },
  {
    "text": "example http does not",
    "start": "146800",
    "end": "149040"
  },
  {
    "text": "we will then this as part of the",
    "start": "149040",
    "end": "150720"
  },
  {
    "text": "subscription api spec to find how the",
    "start": "150720",
    "end": "152800"
  },
  {
    "text": "subscription should happen",
    "start": "152800",
    "end": "153920"
  },
  {
    "text": "right so for example http will define",
    "start": "153920",
    "end": "156319"
  },
  {
    "text": "the rest operation to do the subscribe",
    "start": "156319",
    "end": "158319"
  },
  {
    "text": "okay and inside there you're going to",
    "start": "158319",
    "end": "159519"
  },
  {
    "text": "specify all the things you might expect",
    "start": "159519",
    "end": "161360"
  },
  {
    "text": "right",
    "start": "161360",
    "end": "162000"
  },
  {
    "text": "which events you want to get if there's",
    "start": "162000",
    "end": "163680"
  },
  {
    "text": "filtering how to specify the filters",
    "start": "163680",
    "end": "165920"
  },
  {
    "text": "um how you specify where to deliver the",
    "start": "165920",
    "end": "167920"
  },
  {
    "text": "events to the format of the messages",
    "start": "167920",
    "end": "169519"
  },
  {
    "text": "stuff like that",
    "start": "169519",
    "end": "170640"
  },
  {
    "text": "as well as some apis to actually manage",
    "start": "170640",
    "end": "173200"
  },
  {
    "text": "the subscription right",
    "start": "173200",
    "end": "174319"
  },
  {
    "text": "how do you make updates to it if you can",
    "start": "174319",
    "end": "176080"
  },
  {
    "text": "how do you delete the subscription",
    "start": "176080",
    "end": "177519"
  },
  {
    "text": "very obvious types things and then of",
    "start": "177519",
    "end": "179440"
  },
  {
    "text": "course at the end of the life cycle you",
    "start": "179440",
    "end": "180879"
  },
  {
    "text": "then have the cloud event spec itself",
    "start": "180879",
    "end": "182640"
  },
  {
    "text": "which is going to be used to annotate",
    "start": "182640",
    "end": "184159"
  },
  {
    "text": "your events to figure out",
    "start": "184159",
    "end": "186080"
  },
  {
    "text": "um or how to do proper routing of the",
    "start": "186080",
    "end": "187840"
  },
  {
    "text": "event to the proper destination right",
    "start": "187840",
    "end": "189680"
  },
  {
    "text": "the extra metadata that's part of the",
    "start": "189680",
    "end": "191040"
  },
  {
    "text": "cloud effects spec so that's what we're",
    "start": "191040",
    "end": "192959"
  },
  {
    "text": "going to be looking at next in terms of",
    "start": "192959",
    "end": "194400"
  },
  {
    "text": "life cycle",
    "start": "194400",
    "end": "195120"
  },
  {
    "text": "specifications to complete the to",
    "start": "195120",
    "end": "196840"
  },
  {
    "text": "complete",
    "start": "196840",
    "end": "198159"
  },
  {
    "text": "the complete picture around event",
    "start": "198159",
    "end": "199760"
  },
  {
    "text": "delivery right so",
    "start": "199760",
    "end": "201360"
  },
  {
    "text": "one last little speck i want to talk",
    "start": "201360",
    "end": "202640"
  },
  {
    "text": "about on the next slide",
    "start": "202640",
    "end": "204480"
  },
  {
    "text": "and that's the skimmer registry spec as",
    "start": "204480",
    "end": "207519"
  },
  {
    "text": "one of the little bits of metadata",
    "start": "207519",
    "end": "208720"
  },
  {
    "text": "inside the cloud event spec is",
    "start": "208720",
    "end": "210640"
  },
  {
    "text": "a a url to the schema of the event",
    "start": "210640",
    "end": "213920"
  },
  {
    "text": "that's being transported",
    "start": "213920",
    "end": "215599"
  },
  {
    "text": "and people can host that pretty much",
    "start": "215599",
    "end": "217680"
  },
  {
    "text": "wherever they want",
    "start": "217680",
    "end": "218799"
  },
  {
    "text": "but we realized that there really wasn't",
    "start": "218799",
    "end": "220720"
  },
  {
    "text": "a standardization effort around",
    "start": "220720",
    "end": "223280"
  },
  {
    "text": "the apis of the schema registry itself",
    "start": "223280",
    "end": "225519"
  },
  {
    "text": "meaning how can producers",
    "start": "225519",
    "end": "227519"
  },
  {
    "text": "talk to more than one schema registry to",
    "start": "227519",
    "end": "229280"
  },
  {
    "text": "actually upload their schema",
    "start": "229280",
    "end": "230720"
  },
  {
    "text": "and manage those schemas right version",
    "start": "230720",
    "end": "232480"
  },
  {
    "text": "them and stuff like that",
    "start": "232480",
    "end": "233760"
  },
  {
    "text": "so we thought okay let's see if we can",
    "start": "233760",
    "end": "234959"
  },
  {
    "text": "do some help there so we're defining a",
    "start": "234959",
    "end": "236720"
  },
  {
    "text": "set of apis",
    "start": "236720",
    "end": "237760"
  },
  {
    "text": "mainly for producers to figure out how",
    "start": "237760",
    "end": "240000"
  },
  {
    "text": "to talk to the schemer registry is to",
    "start": "240000",
    "end": "241439"
  },
  {
    "text": "upload their schema itself",
    "start": "241439",
    "end": "243120"
  },
  {
    "text": "okay very simple little crud type apis",
    "start": "243120",
    "end": "246000"
  },
  {
    "text": "nothing earth shattering there",
    "start": "246000",
    "end": "247439"
  },
  {
    "text": "but it will have automatic versioning in",
    "start": "247439",
    "end": "249360"
  },
  {
    "text": "there so that you don't have to worry",
    "start": "249360",
    "end": "251040"
  },
  {
    "text": "about you know",
    "start": "251040",
    "end": "252000"
  },
  {
    "text": "versioning numbers of the urls to access",
    "start": "252000",
    "end": "254159"
  },
  {
    "text": "the different versions of the schema",
    "start": "254159",
    "end": "255280"
  },
  {
    "text": "itself will help you a little bit there",
    "start": "255280",
    "end": "256959"
  },
  {
    "text": "okay but in terms of actually using the",
    "start": "256959",
    "end": "258959"
  },
  {
    "text": "schema itself it's pretty much what",
    "start": "258959",
    "end": "260639"
  },
  {
    "text": "you'd expect",
    "start": "260639",
    "end": "261440"
  },
  {
    "text": "producers will use the schema to",
    "start": "261440",
    "end": "263280"
  },
  {
    "text": "advertise for the consumers to use",
    "start": "263280",
    "end": "266160"
  },
  {
    "text": "and then the schema itself will be used",
    "start": "266160",
    "end": "268080"
  },
  {
    "text": "in the serialization of the event to",
    "start": "268080",
    "end": "269520"
  },
  {
    "text": "make sure it adheres to that particular",
    "start": "269520",
    "end": "271360"
  },
  {
    "text": "format",
    "start": "271360",
    "end": "272400"
  },
  {
    "text": "consumers can then access the schema",
    "start": "272400",
    "end": "274240"
  },
  {
    "text": "registry to use the schema to then",
    "start": "274240",
    "end": "276400"
  },
  {
    "text": "figure out the validation",
    "start": "276400",
    "end": "278000"
  },
  {
    "text": "make sure they understand how to parse",
    "start": "278000",
    "end": "279360"
  },
  {
    "text": "the schema or deserialize i'm sorry not",
    "start": "279360",
    "end": "281120"
  },
  {
    "text": "participating deserialize the event into",
    "start": "281120",
    "end": "282800"
  },
  {
    "text": "the right format",
    "start": "282800",
    "end": "283520"
  },
  {
    "text": "and stuff like that the same thing you'd",
    "start": "283520",
    "end": "285040"
  },
  {
    "text": "expect even without the schema registry",
    "start": "285040",
    "end": "286800"
  },
  {
    "text": "there",
    "start": "286800",
    "end": "287360"
  },
  {
    "text": "but the schema registry helps get the",
    "start": "287360",
    "end": "288800"
  },
  {
    "text": "interop around uh",
    "start": "288800",
    "end": "290639"
  },
  {
    "text": "publishing and sharing of the schemas",
    "start": "290639",
    "end": "292639"
  },
  {
    "text": "themselves and that's",
    "start": "292639",
    "end": "293680"
  },
  {
    "text": "the last bit of new things that we're",
    "start": "293680",
    "end": "295280"
  },
  {
    "text": "working on okay so that's pretty much it",
    "start": "295280",
    "end": "297280"
  },
  {
    "text": "for the cloud event side of the",
    "start": "297280",
    "end": "298960"
  },
  {
    "text": "serverless working work group so let me",
    "start": "298960",
    "end": "300960"
  },
  {
    "text": "now hand it over to tmr to talk about",
    "start": "300960",
    "end": "302479"
  },
  {
    "text": "the workflow stuff",
    "start": "302479",
    "end": "305120"
  },
  {
    "text": "all right thanks doug so serverless",
    "start": "305120",
    "end": "308000"
  },
  {
    "text": "workflow",
    "start": "308000",
    "end": "308720"
  },
  {
    "text": "is basically a workflow language that",
    "start": "308720",
    "end": "310400"
  },
  {
    "text": "allows you to orchestrate microservices",
    "start": "310400",
    "end": "312960"
  },
  {
    "text": "and events we typically",
    "start": "312960",
    "end": "316080"
  },
  {
    "text": "categorize workflow languages in",
    "start": "316080",
    "end": "317759"
  },
  {
    "text": "different buckets going from flowchart",
    "start": "317759",
    "end": "319919"
  },
  {
    "text": "based workflow languages",
    "start": "319919",
    "end": "321199"
  },
  {
    "text": "form based or code base where the actual",
    "start": "321199",
    "end": "324160"
  },
  {
    "text": "workflow language is the underlying",
    "start": "324160",
    "end": "325919"
  },
  {
    "text": "programming language of choice",
    "start": "325919",
    "end": "327840"
  },
  {
    "text": "surveillance workflow falls into the",
    "start": "327840",
    "end": "330320"
  },
  {
    "text": "clarity workflow language character",
    "start": "330320",
    "end": "332720"
  },
  {
    "text": "so with serverless workflow being",
    "start": "332720",
    "end": "334560"
  },
  {
    "text": "declarative we focus on",
    "start": "334560",
    "end": "336720"
  },
  {
    "text": "what to do and not how so the language",
    "start": "336720",
    "end": "339840"
  },
  {
    "text": "itself is dependent on time",
    "start": "339840",
    "end": "341360"
  },
  {
    "text": "implementations to interpret",
    "start": "341360",
    "end": "343680"
  },
  {
    "text": "the what and actually execute uh the",
    "start": "343680",
    "end": "346880"
  },
  {
    "text": "instructions that we put in our workflow",
    "start": "346880",
    "end": "348560"
  },
  {
    "text": "definitions",
    "start": "348560",
    "end": "349759"
  },
  {
    "text": "with serverless workflow you can define",
    "start": "349759",
    "end": "352320"
  },
  {
    "text": "workflows",
    "start": "352320",
    "end": "353039"
  },
  {
    "text": "using json or yaml and the language",
    "start": "353039",
    "end": "355600"
  },
  {
    "text": "itself is completely",
    "start": "355600",
    "end": "357199"
  },
  {
    "text": "defined using json scheme",
    "start": "357199",
    "end": "360960"
  },
  {
    "text": "now we have to look many different",
    "start": "361840",
    "end": "364720"
  },
  {
    "text": "workflow languages exist out there and",
    "start": "364720",
    "end": "366720"
  },
  {
    "text": "we have to look",
    "start": "366720",
    "end": "367680"
  },
  {
    "text": "typically at the target domains of the",
    "start": "367680",
    "end": "369919"
  },
  {
    "text": "workflow language to pick which one we",
    "start": "369919",
    "end": "371840"
  },
  {
    "text": "want to choose",
    "start": "371840",
    "end": "372880"
  },
  {
    "text": "for serverless workflow we of course",
    "start": "372880",
    "end": "374479"
  },
  {
    "text": "focus on the business domain",
    "start": "374479",
    "end": "376160"
  },
  {
    "text": "meaning that you can express your",
    "start": "376160",
    "end": "377600"
  },
  {
    "text": "workflow definitions with terms",
    "start": "377600",
    "end": "379680"
  },
  {
    "text": "and and knowledge that you gave have in",
    "start": "379680",
    "end": "382240"
  },
  {
    "text": "your business",
    "start": "382240",
    "end": "383120"
  },
  {
    "text": "domain but at the same time serious",
    "start": "383120",
    "end": "385520"
  },
  {
    "text": "workflow targets the",
    "start": "385520",
    "end": "386800"
  },
  {
    "text": "serverless uh technology domain meaning",
    "start": "386800",
    "end": "389759"
  },
  {
    "text": "we can also express things like",
    "start": "389759",
    "end": "391520"
  },
  {
    "text": "functions",
    "start": "391520",
    "end": "392240"
  },
  {
    "text": "events retries and things like that are",
    "start": "392240",
    "end": "394720"
  },
  {
    "text": "common in the serverless",
    "start": "394720",
    "end": "396000"
  },
  {
    "text": "microservices applications as well so",
    "start": "396000",
    "end": "398960"
  },
  {
    "text": "serverless workflow tries to",
    "start": "398960",
    "end": "400960"
  },
  {
    "text": "merge and allow you to write workflows",
    "start": "400960",
    "end": "403520"
  },
  {
    "text": "using both your domain",
    "start": "403520",
    "end": "405120"
  },
  {
    "text": "or business logic as well as the domain",
    "start": "405120",
    "end": "408160"
  },
  {
    "text": "of serverless technology as well",
    "start": "408160",
    "end": "411120"
  },
  {
    "text": "now one advantage of serverless",
    "start": "411120",
    "end": "412720"
  },
  {
    "text": "workplace that is completely agnostic",
    "start": "412720",
    "end": "414880"
  },
  {
    "text": "meaning as we as we uh mentioned earlier",
    "start": "414880",
    "end": "417440"
  },
  {
    "text": "the workflow definitions or the",
    "start": "417440",
    "end": "419280"
  },
  {
    "text": "the json or yaml that you write to",
    "start": "419280",
    "end": "421520"
  },
  {
    "text": "express your workflow logic",
    "start": "421520",
    "end": "423840"
  },
  {
    "text": "is not programming language dependent at",
    "start": "423840",
    "end": "426960"
  },
  {
    "text": "the same time the workflow data",
    "start": "426960",
    "end": "428960"
  },
  {
    "text": "that is uh being executed and that you",
    "start": "428960",
    "end": "431599"
  },
  {
    "text": "can update and",
    "start": "431599",
    "end": "432960"
  },
  {
    "text": "and work with during workflow execution",
    "start": "432960",
    "end": "435599"
  },
  {
    "text": "is also",
    "start": "435599",
    "end": "436240"
  },
  {
    "text": "expressed in json format and as such",
    "start": "436240",
    "end": "438560"
  },
  {
    "text": "serverless workflow is a domain specific",
    "start": "438560",
    "end": "440720"
  },
  {
    "text": "um declarative language language",
    "start": "440720",
    "end": "443840"
  },
  {
    "text": "which can be executed on many different",
    "start": "443840",
    "end": "446880"
  },
  {
    "text": "runtimes in different programming",
    "start": "446880",
    "end": "448560"
  },
  {
    "text": "languages at the same",
    "start": "448560",
    "end": "450080"
  },
  {
    "text": "time you can take the particular runtime",
    "start": "450080",
    "end": "453840"
  },
  {
    "text": "in any language and deploy it on",
    "start": "453840",
    "end": "456400"
  },
  {
    "text": "multiple cloud platforms so it's really",
    "start": "456400",
    "end": "458319"
  },
  {
    "text": "agnostic from",
    "start": "458319",
    "end": "459759"
  },
  {
    "text": "any type of technology that is",
    "start": "459759",
    "end": "461919"
  },
  {
    "text": "underlying that is executing",
    "start": "461919",
    "end": "463599"
  },
  {
    "text": "the actual workflows itself",
    "start": "463599",
    "end": "467120"
  },
  {
    "text": "when we talk about serverless workflow",
    "start": "467599",
    "end": "470080"
  },
  {
    "text": "we want to compare it with what's out",
    "start": "470080",
    "end": "472160"
  },
  {
    "text": "there already and the typical comparison",
    "start": "472160",
    "end": "474160"
  },
  {
    "text": "of what it is right now or what service",
    "start": "474160",
    "end": "475919"
  },
  {
    "text": "workflow is is",
    "start": "475919",
    "end": "476879"
  },
  {
    "text": "with things like aws step functions or",
    "start": "476879",
    "end": "478960"
  },
  {
    "text": "google cloud workflow",
    "start": "478960",
    "end": "480639"
  },
  {
    "text": "or even a lot of comparisons to work",
    "start": "480639",
    "end": "482639"
  },
  {
    "text": "towards bpmn",
    "start": "482639",
    "end": "484639"
  },
  {
    "text": "as well and this table kind of shows you",
    "start": "484639",
    "end": "487520"
  },
  {
    "text": "uh",
    "start": "487520",
    "end": "488000"
  },
  {
    "text": "some of the uh features of the languages",
    "start": "488000",
    "end": "492080"
  },
  {
    "text": "and how it compares uh between them",
    "start": "492080",
    "end": "495599"
  },
  {
    "text": "so this there are of course a lot more",
    "start": "495599",
    "end": "499199"
  },
  {
    "text": "features",
    "start": "499199",
    "end": "499840"
  },
  {
    "text": "uh that exist but these are kind of like",
    "start": "499840",
    "end": "502080"
  },
  {
    "text": "the cultures that we",
    "start": "502080",
    "end": "503520"
  },
  {
    "text": "looked at what we look at when we think",
    "start": "503520",
    "end": "505039"
  },
  {
    "text": "about orchestrating microservices as",
    "start": "505039",
    "end": "507199"
  },
  {
    "text": "events",
    "start": "507199",
    "end": "508160"
  },
  {
    "text": "so serverless workflow currently is",
    "start": "508160",
    "end": "510560"
  },
  {
    "text": "somewhat of a superset",
    "start": "510560",
    "end": "512320"
  },
  {
    "text": "of the other declarative being step",
    "start": "512320",
    "end": "514399"
  },
  {
    "text": "functions and",
    "start": "514399",
    "end": "515440"
  },
  {
    "text": "and cloud workflow but is a subset of",
    "start": "515440",
    "end": "518000"
  },
  {
    "text": "bpmn2",
    "start": "518000",
    "end": "519360"
  },
  {
    "text": "but again it focuses on the feature set",
    "start": "519360",
    "end": "522159"
  },
  {
    "text": "specific to its target",
    "start": "522159",
    "end": "524000"
  },
  {
    "text": "domains being a orchestration of",
    "start": "524000",
    "end": "527120"
  },
  {
    "text": "of of microservices as events",
    "start": "527120",
    "end": "530399"
  },
  {
    "text": "now one thing about serverless workflow",
    "start": "530399",
    "end": "532000"
  },
  {
    "text": "that we really try to do is we try to",
    "start": "532000",
    "end": "534080"
  },
  {
    "text": "focus on standards and you can see here",
    "start": "534080",
    "end": "537360"
  },
  {
    "text": "some of the",
    "start": "537360",
    "end": "538160"
  },
  {
    "text": "uh standards and technology-wise that",
    "start": "538160",
    "end": "540240"
  },
  {
    "text": "we're we're really enforcing within",
    "start": "540240",
    "end": "542480"
  },
  {
    "text": "our workflows and of course one being",
    "start": "542480",
    "end": "545120"
  },
  {
    "text": "cloud events",
    "start": "545120",
    "end": "546080"
  },
  {
    "text": "now this is two advantages on the one",
    "start": "546080",
    "end": "549040"
  },
  {
    "text": "hand",
    "start": "549040",
    "end": "549600"
  },
  {
    "text": "when you're writing your workflows you",
    "start": "549600",
    "end": "552240"
  },
  {
    "text": "can utilize these standards and actually",
    "start": "552240",
    "end": "554399"
  },
  {
    "text": "to describe",
    "start": "554399",
    "end": "555760"
  },
  {
    "text": "again if you remember the what or what",
    "start": "555760",
    "end": "558399"
  },
  {
    "text": "your execution orchestration should be",
    "start": "558399",
    "end": "560480"
  },
  {
    "text": "rather than some proprietary or",
    "start": "560480",
    "end": "562720"
  },
  {
    "text": "hard-coded",
    "start": "562720",
    "end": "563839"
  },
  {
    "text": "or pre-defined function functionality",
    "start": "563839",
    "end": "566720"
  },
  {
    "text": "that you might only",
    "start": "566720",
    "end": "568080"
  },
  {
    "text": "have available but at the same time you",
    "start": "568080",
    "end": "570240"
  },
  {
    "text": "know also the runtime implementations to",
    "start": "570240",
    "end": "572959"
  },
  {
    "text": "start thinking about standards and",
    "start": "572959",
    "end": "576080"
  },
  {
    "text": "allow you to to to really be comfortable",
    "start": "576080",
    "end": "579519"
  },
  {
    "text": "with the runtime implementation of",
    "start": "579519",
    "end": "581760"
  },
  {
    "text": "serverless workflow",
    "start": "581760",
    "end": "583120"
  },
  {
    "text": "in terms of longevity and things like",
    "start": "583120",
    "end": "586560"
  },
  {
    "text": "open source and specification things and",
    "start": "586560",
    "end": "589760"
  },
  {
    "text": "and and kind of enforces that side as",
    "start": "589760",
    "end": "592320"
  },
  {
    "text": "well",
    "start": "592320",
    "end": "594240"
  },
  {
    "text": "now and besides the just",
    "start": "594240",
    "end": "597360"
  },
  {
    "text": "of being agnostic and and things like",
    "start": "597360",
    "end": "600080"
  },
  {
    "text": "that",
    "start": "600080",
    "end": "600800"
  },
  {
    "text": "with serverless workflow we also took a",
    "start": "600800",
    "end": "602880"
  },
  {
    "text": "look at the logical structuring of the",
    "start": "602880",
    "end": "605200"
  },
  {
    "text": "workflow definition itself",
    "start": "605200",
    "end": "606959"
  },
  {
    "text": "the workflow definition is composed of",
    "start": "606959",
    "end": "609440"
  },
  {
    "text": "three parts the first one is your",
    "start": "609440",
    "end": "611200"
  },
  {
    "text": "control flow logic block",
    "start": "611200",
    "end": "612959"
  },
  {
    "text": "which includes the language structure",
    "start": "612959",
    "end": "616560"
  },
  {
    "text": "such as",
    "start": "616560",
    "end": "617200"
  },
  {
    "text": "synth async invocations looping",
    "start": "617200",
    "end": "620720"
  },
  {
    "text": "branching parallel execution the typical",
    "start": "620720",
    "end": "623839"
  },
  {
    "text": "stuff that you think of",
    "start": "623839",
    "end": "624959"
  },
  {
    "text": "when you think of workflow language and",
    "start": "624959",
    "end": "627040"
  },
  {
    "text": "using workflows in general",
    "start": "627040",
    "end": "629120"
  },
  {
    "text": "but at the same time we also have event",
    "start": "629120",
    "end": "632160"
  },
  {
    "text": "definitions and event definitions are",
    "start": "632160",
    "end": "634079"
  },
  {
    "text": "completely reusable pieces so you can",
    "start": "634079",
    "end": "636079"
  },
  {
    "text": "define",
    "start": "636079",
    "end": "636880"
  },
  {
    "text": "your events that are supposed to be",
    "start": "636880",
    "end": "638720"
  },
  {
    "text": "consumed or produced by the workflow",
    "start": "638720",
    "end": "640880"
  },
  {
    "text": "either with inside your workflow",
    "start": "640880",
    "end": "642560"
  },
  {
    "text": "definition or you can completely expose",
    "start": "642560",
    "end": "644560"
  },
  {
    "text": "it",
    "start": "644560",
    "end": "645040"
  },
  {
    "text": "as a service or or write it somewhere",
    "start": "645040",
    "end": "647200"
  },
  {
    "text": "else so multiple workflows can actually",
    "start": "647200",
    "end": "649040"
  },
  {
    "text": "access them",
    "start": "649040",
    "end": "649920"
  },
  {
    "text": "and reuse those definitions we for",
    "start": "649920",
    "end": "652720"
  },
  {
    "text": "enforce cloud event specification here",
    "start": "652720",
    "end": "654880"
  },
  {
    "text": "of course",
    "start": "654880",
    "end": "655760"
  },
  {
    "text": "but the source or the actual producers",
    "start": "655760",
    "end": "658160"
  },
  {
    "text": "of those events",
    "start": "658160",
    "end": "659519"
  },
  {
    "text": "could be many different things in the",
    "start": "659519",
    "end": "661839"
  },
  {
    "text": "end",
    "start": "661839",
    "end": "662640"
  },
  {
    "text": "the third part of the workflow",
    "start": "662640",
    "end": "664000"
  },
  {
    "text": "definition is function definitions and",
    "start": "664000",
    "end": "666160"
  },
  {
    "text": "those again just like event definitions",
    "start": "666160",
    "end": "668240"
  },
  {
    "text": "are completely reusable between",
    "start": "668240",
    "end": "669920"
  },
  {
    "text": "workflows they can be defined inline",
    "start": "669920",
    "end": "672079"
  },
  {
    "text": "as well we'll see in the demo later or",
    "start": "672079",
    "end": "673760"
  },
  {
    "text": "you can expose them as a separate file",
    "start": "673760",
    "end": "676079"
  },
  {
    "text": "and and treat them and or allow them to",
    "start": "676079",
    "end": "679120"
  },
  {
    "text": "be used by multiple workflows",
    "start": "679120",
    "end": "681200"
  },
  {
    "text": "definitions if if you wish the function",
    "start": "681200",
    "end": "683920"
  },
  {
    "text": "definitions",
    "start": "683920",
    "end": "684800"
  },
  {
    "text": "define some invocation of a service or",
    "start": "684800",
    "end": "687839"
  },
  {
    "text": "some invocation of a particular",
    "start": "687839",
    "end": "689680"
  },
  {
    "text": "expression",
    "start": "689680",
    "end": "690720"
  },
  {
    "text": "so through function definition you can",
    "start": "690720",
    "end": "692560"
  },
  {
    "text": "easily utilize",
    "start": "692560",
    "end": "694240"
  },
  {
    "text": "things like open api grpc or you can",
    "start": "694240",
    "end": "697279"
  },
  {
    "text": "even define a container that you have",
    "start": "697279",
    "end": "699040"
  },
  {
    "text": "you want to actually execute an image or",
    "start": "699040",
    "end": "701600"
  },
  {
    "text": "something during workflow execution",
    "start": "701600",
    "end": "705279"
  },
  {
    "text": "the service work also defines the",
    "start": "708560",
    "end": "710240"
  },
  {
    "text": "motherboard ecosystem so",
    "start": "710240",
    "end": "712000"
  },
  {
    "text": "not only do we define the core language",
    "start": "712000",
    "end": "714240"
  },
  {
    "text": "and the structure of the language if you",
    "start": "714240",
    "end": "715680"
  },
  {
    "text": "have documentation and things like that",
    "start": "715680",
    "end": "718160"
  },
  {
    "text": "um that describes every little piece",
    "start": "718160",
    "end": "721279"
  },
  {
    "text": "of of of uh the workflow language that",
    "start": "721279",
    "end": "724480"
  },
  {
    "text": "you can use",
    "start": "724480",
    "end": "725360"
  },
  {
    "text": "we also include things like a vs code uh",
    "start": "725360",
    "end": "728160"
  },
  {
    "text": "extension",
    "start": "728160",
    "end": "729279"
  },
  {
    "text": "that helps kind of developers include",
    "start": "729279",
    "end": "732399"
  },
  {
    "text": "set of uh",
    "start": "732399",
    "end": "733279"
  },
  {
    "text": "sdks which currently they they're there",
    "start": "733279",
    "end": "736000"
  },
  {
    "text": "to parse",
    "start": "736000",
    "end": "736880"
  },
  {
    "text": "uh workflow definitions validate them",
    "start": "736880",
    "end": "739040"
  },
  {
    "text": "and things like that we currently have",
    "start": "739040",
    "end": "740480"
  },
  {
    "text": "them in go in java",
    "start": "740480",
    "end": "741680"
  },
  {
    "text": "we just added the net sdk and we're",
    "start": "741680",
    "end": "744480"
  },
  {
    "text": "currently also working on a typescript",
    "start": "744480",
    "end": "746320"
  },
  {
    "text": "sdk",
    "start": "746320",
    "end": "747440"
  },
  {
    "text": "um in addition to that just again to get",
    "start": "747440",
    "end": "749680"
  },
  {
    "text": "started on our website",
    "start": "749680",
    "end": "751200"
  },
  {
    "text": "we have an online editor where you don't",
    "start": "751200",
    "end": "753839"
  },
  {
    "text": "really need a particular",
    "start": "753839",
    "end": "755200"
  },
  {
    "text": "uh like vs code or idea or some sort of",
    "start": "755200",
    "end": "757920"
  },
  {
    "text": "programming",
    "start": "757920",
    "end": "759200"
  },
  {
    "text": "language type of editor to actually",
    "start": "759200",
    "end": "761279"
  },
  {
    "text": "start getting started to define",
    "start": "761279",
    "end": "763440"
  },
  {
    "text": "your workflow definitions and also to",
    "start": "763440",
    "end": "765120"
  },
  {
    "text": "visualize them",
    "start": "765120",
    "end": "766880"
  },
  {
    "text": "via simple uml diagrams as well",
    "start": "766880",
    "end": "772240"
  },
  {
    "text": "now even though serious workflow is",
    "start": "772240",
    "end": "773920"
  },
  {
    "text": "fairly new uh",
    "start": "773920",
    "end": "775360"
  },
  {
    "text": "we have uh received a lot of",
    "start": "775360",
    "end": "778399"
  },
  {
    "text": "interest from different people different",
    "start": "778399",
    "end": "780240"
  },
  {
    "text": "people from the community",
    "start": "780240",
    "end": "781680"
  },
  {
    "text": "and we currently have a small but very",
    "start": "781680",
    "end": "783360"
  },
  {
    "text": "healthy community we have",
    "start": "783360",
    "end": "784720"
  },
  {
    "text": "a couple of partner projects as you can",
    "start": "784720",
    "end": "786800"
  },
  {
    "text": "see here within cncf and it's very",
    "start": "786800",
    "end": "788880"
  },
  {
    "text": "important to us",
    "start": "788880",
    "end": "790000"
  },
  {
    "text": "to grow those relationships and",
    "start": "790000",
    "end": "792000"
  },
  {
    "text": "integrations with them",
    "start": "792000",
    "end": "793519"
  },
  {
    "text": "uh we do uh have currently open source",
    "start": "793519",
    "end": "796000"
  },
  {
    "text": "collaborations with multiple companies",
    "start": "796000",
    "end": "798399"
  },
  {
    "text": "uh as you can see and they're already a",
    "start": "798399",
    "end": "801200"
  },
  {
    "text": "couple of",
    "start": "801200",
    "end": "801839"
  },
  {
    "text": "well java based right now open source",
    "start": "801839",
    "end": "804399"
  },
  {
    "text": "implementations of the service workflow",
    "start": "804399",
    "end": "806240"
  },
  {
    "text": "specification",
    "start": "806240",
    "end": "807440"
  },
  {
    "text": "and more are coming in the future in",
    "start": "807440",
    "end": "810240"
  },
  {
    "text": "different languages like i said",
    "start": "810240",
    "end": "811600"
  },
  {
    "text": "currently we only have",
    "start": "811600",
    "end": "812959"
  },
  {
    "text": "the java guys are predominant in this",
    "start": "812959",
    "end": "814800"
  },
  {
    "text": "basis currently",
    "start": "814800",
    "end": "817519"
  },
  {
    "text": "now as far as the project release",
    "start": "817519",
    "end": "820160"
  },
  {
    "text": "roadmap",
    "start": "820160",
    "end": "820880"
  },
  {
    "text": "um we currently have uh released",
    "start": "820880",
    "end": "823920"
  },
  {
    "text": "just this month uh version 0.6 um",
    "start": "823920",
    "end": "828240"
  },
  {
    "text": "we're planning 0.7 release",
    "start": "828240",
    "end": "831440"
  },
  {
    "text": "this summer and once we do that",
    "start": "831440",
    "end": "834880"
  },
  {
    "text": "hopefully we can start targeting version",
    "start": "834880",
    "end": "837519"
  },
  {
    "text": "1.0 the specification",
    "start": "837519",
    "end": "840000"
  },
  {
    "text": "at least the release candidate won by uh",
    "start": "840000",
    "end": "843279"
  },
  {
    "text": "november of this year that's currently",
    "start": "843279",
    "end": "845360"
  },
  {
    "text": "our plan",
    "start": "845360",
    "end": "846079"
  },
  {
    "text": "and it highly also of course depends on",
    "start": "846079",
    "end": "848000"
  },
  {
    "text": "the community effort and and",
    "start": "848000",
    "end": "849440"
  },
  {
    "text": "contributions as well",
    "start": "849440",
    "end": "852560"
  },
  {
    "text": "all right so now that we've talked about",
    "start": "853519",
    "end": "855040"
  },
  {
    "text": "serverless workflow let's",
    "start": "855040",
    "end": "856959"
  },
  {
    "text": "do a little demo it's just going to be",
    "start": "856959",
    "end": "858560"
  },
  {
    "text": "very simple but it is going to i think",
    "start": "858560",
    "end": "860880"
  },
  {
    "text": "show uh how to get started and kind of",
    "start": "860880",
    "end": "863360"
  },
  {
    "text": "what workflow",
    "start": "863360",
    "end": "864320"
  },
  {
    "text": "and serverless workflow in general can",
    "start": "864320",
    "end": "865920"
  },
  {
    "text": "bring to you",
    "start": "865920",
    "end": "867360"
  },
  {
    "text": "so for that i want to kind of start it",
    "start": "867360",
    "end": "869600"
  },
  {
    "text": "off and say",
    "start": "869600",
    "end": "871920"
  },
  {
    "text": "the demo is going to be three very",
    "start": "871920",
    "end": "873760"
  },
  {
    "text": "simple services written in different",
    "start": "873760",
    "end": "875760"
  },
  {
    "text": "programming languages so first service",
    "start": "875760",
    "end": "878160"
  },
  {
    "text": "here is going to be a node service",
    "start": "878160",
    "end": "881199"
  },
  {
    "text": "node.js",
    "start": "881199",
    "end": "882480"
  },
  {
    "text": "and let's get it started for that we can",
    "start": "882480",
    "end": "884880"
  },
  {
    "text": "say",
    "start": "884880",
    "end": "885760"
  },
  {
    "text": "npm run local so we will run this on",
    "start": "885760",
    "end": "889120"
  },
  {
    "text": "locals",
    "start": "889120",
    "end": "890320"
  },
  {
    "text": "however you can easily you know",
    "start": "890320",
    "end": "893360"
  },
  {
    "text": "imagine this being deployed on any",
    "start": "893360",
    "end": "895920"
  },
  {
    "text": "container or cloud",
    "start": "895920",
    "end": "897279"
  },
  {
    "text": "platform for safe sake for the demo we",
    "start": "897279",
    "end": "899440"
  },
  {
    "text": "will run this locally",
    "start": "899440",
    "end": "901040"
  },
  {
    "text": "so we can actually curl this",
    "start": "901040",
    "end": "905120"
  },
  {
    "text": "service oh and actually let me pipe it",
    "start": "907600",
    "end": "910160"
  },
  {
    "text": "through jq so we get a pretty output",
    "start": "910160",
    "end": "912560"
  },
  {
    "text": "and you can see our node.js service just",
    "start": "912560",
    "end": "914639"
  },
  {
    "text": "gives us a little piece of json saying",
    "start": "914639",
    "end": "917279"
  },
  {
    "text": "invoked node.js function and that's it",
    "start": "917279",
    "end": "920399"
  },
  {
    "text": "our second service that we want to run",
    "start": "920399",
    "end": "922959"
  },
  {
    "text": "is a go",
    "start": "922959",
    "end": "923680"
  },
  {
    "text": "service and we have a",
    "start": "923680",
    "end": "927680"
  },
  {
    "text": "handle that goes so we're just going to",
    "start": "927680",
    "end": "929600"
  },
  {
    "text": "get this started",
    "start": "929600",
    "end": "931519"
  },
  {
    "text": "and this service is going to run",
    "start": "931519",
    "end": "935040"
  },
  {
    "text": "on 8081. oops sorry",
    "start": "935040",
    "end": "938639"
  },
  {
    "text": "and let's test it if it's up and running",
    "start": "938639",
    "end": "941199"
  },
  {
    "text": "we can issue a post to it",
    "start": "941199",
    "end": "943759"
  },
  {
    "text": "and you can see it also returns a little",
    "start": "943759",
    "end": "945600"
  },
  {
    "text": "piece of json called invoked",
    "start": "945600",
    "end": "947600"
  },
  {
    "text": "go function that's it that's really all",
    "start": "947600",
    "end": "950480"
  },
  {
    "text": "the third service that we",
    "start": "950480",
    "end": "951920"
  },
  {
    "text": "have is uh our little java service",
    "start": "951920",
    "end": "957519"
  },
  {
    "text": "which uh currently this is running on",
    "start": "958560",
    "end": "960880"
  },
  {
    "text": "quercus but you can run this on spring",
    "start": "960880",
    "end": "962560"
  },
  {
    "text": "boot or any of the java runtimes or",
    "start": "962560",
    "end": "965199"
  },
  {
    "text": "environments that you want to run it",
    "start": "965199",
    "end": "968800"
  },
  {
    "text": "and let's see this has already started",
    "start": "968800",
    "end": "971759"
  },
  {
    "text": "and our",
    "start": "971759",
    "end": "972560"
  },
  {
    "text": "java service runs on port",
    "start": "972560",
    "end": "976160"
  },
  {
    "text": "82 and it has a little end point of",
    "start": "976160",
    "end": "978880"
  },
  {
    "text": "greed i think",
    "start": "978880",
    "end": "980240"
  },
  {
    "text": "and here we see we have invoked it via",
    "start": "980240",
    "end": "982160"
  },
  {
    "text": "curl and",
    "start": "982160",
    "end": "983680"
  },
  {
    "text": "it says java function invoked or java",
    "start": "983680",
    "end": "985839"
  },
  {
    "text": "functions now the idea behind this",
    "start": "985839",
    "end": "988079"
  },
  {
    "text": "is to really show you that you want we",
    "start": "988079",
    "end": "990720"
  },
  {
    "text": "want to with serverless workflow",
    "start": "990720",
    "end": "992000"
  },
  {
    "text": "orchestrate",
    "start": "992000",
    "end": "992959"
  },
  {
    "text": "microservices and here we have three",
    "start": "992959",
    "end": "994720"
  },
  {
    "text": "different functions they're written in",
    "start": "994720",
    "end": "996399"
  },
  {
    "text": "three different languages",
    "start": "996399",
    "end": "997759"
  },
  {
    "text": "they can be really deployed anywhere you",
    "start": "997759",
    "end": "999680"
  },
  {
    "text": "want or live where",
    "start": "999680",
    "end": "1001199"
  },
  {
    "text": "you know not a localhost of course and",
    "start": "1001199",
    "end": "1004000"
  },
  {
    "text": "now",
    "start": "1004000",
    "end": "1004880"
  },
  {
    "text": "our assignment is to orchestrate it in",
    "start": "1004880",
    "end": "1007360"
  },
  {
    "text": "some way",
    "start": "1007360",
    "end": "1008399"
  },
  {
    "text": "and for that we can start using uh our",
    "start": "1008399",
    "end": "1010959"
  },
  {
    "text": "serverless workflow",
    "start": "1010959",
    "end": "1012320"
  },
  {
    "text": "so for this we're going to use the",
    "start": "1012320",
    "end": "1014959"
  },
  {
    "text": "redhead cogito",
    "start": "1014959",
    "end": "1016079"
  },
  {
    "text": "uh current open source implementation",
    "start": "1016079",
    "end": "1018560"
  },
  {
    "text": "for this they're like we saw others",
    "start": "1018560",
    "end": "1020720"
  },
  {
    "text": "but let's go ahead and look at the",
    "start": "1020720",
    "end": "1024400"
  },
  {
    "text": "little",
    "start": "1024400",
    "end": "1025280"
  },
  {
    "text": "project i've created here",
    "start": "1025280",
    "end": "1028400"
  },
  {
    "text": "and let's do this so i can actually see",
    "start": "1028400",
    "end": "1030959"
  },
  {
    "text": "things oops sorry",
    "start": "1030959",
    "end": "1033280"
  },
  {
    "text": "now this is a very simple java maven",
    "start": "1033280",
    "end": "1035678"
  },
  {
    "text": "project",
    "start": "1035679",
    "end": "1036319"
  },
  {
    "text": "and as you can see there is no java",
    "start": "1036319",
    "end": "1038798"
  },
  {
    "text": "sources there is no particular java",
    "start": "1038799",
    "end": "1041360"
  },
  {
    "text": "based objects a lot of runtimes that you",
    "start": "1041360",
    "end": "1043678"
  },
  {
    "text": "see out there especially workflow",
    "start": "1043679",
    "end": "1045199"
  },
  {
    "text": "runtimes kind of forces you",
    "start": "1045199",
    "end": "1047280"
  },
  {
    "text": "to use a particular programming language",
    "start": "1047280",
    "end": "1049280"
  },
  {
    "text": "especially for the data model serverless",
    "start": "1049280",
    "end": "1051360"
  },
  {
    "text": "workflow using json",
    "start": "1051360",
    "end": "1052880"
  },
  {
    "text": "so even though this is a java project",
    "start": "1052880",
    "end": "1056080"
  },
  {
    "text": "being a java runtime the way we express",
    "start": "1056080",
    "end": "1058720"
  },
  {
    "text": "orchestration is completely",
    "start": "1058720",
    "end": "1060960"
  },
  {
    "text": "agnostic to any programming language",
    "start": "1060960",
    "end": "1062799"
  },
  {
    "text": "itself and",
    "start": "1062799",
    "end": "1064400"
  },
  {
    "text": "another thing that we see here i don't",
    "start": "1064400",
    "end": "1066559"
  },
  {
    "text": "have a workflow yet we will define it",
    "start": "1066559",
    "end": "1068160"
  },
  {
    "text": "together",
    "start": "1068160",
    "end": "1068880"
  },
  {
    "text": "however one thing i've defined is little",
    "start": "1068880",
    "end": "1071840"
  },
  {
    "text": "open api definitions",
    "start": "1071840",
    "end": "1073520"
  },
  {
    "text": "and if you see here we can see",
    "start": "1073520",
    "end": "1077120"
  },
  {
    "text": "in our vs code we can generate a little",
    "start": "1077120",
    "end": "1080000"
  },
  {
    "text": "open api",
    "start": "1080000",
    "end": "1081200"
  },
  {
    "text": "uh and you can see our our in this case",
    "start": "1081200",
    "end": "1083679"
  },
  {
    "text": "our go service which was just invoked",
    "start": "1083679",
    "end": "1085440"
  },
  {
    "text": "during uh",
    "start": "1085440",
    "end": "1086080"
  },
  {
    "text": "curl it has uh one end point and just",
    "start": "1086080",
    "end": "1089760"
  },
  {
    "text": "slash and we can invoke that as well the",
    "start": "1089760",
    "end": "1092160"
  },
  {
    "text": "same thing we have defined here",
    "start": "1092160",
    "end": "1094799"
  },
  {
    "text": "is for java service and our",
    "start": "1094799",
    "end": "1097840"
  },
  {
    "text": "node service that we currently invoke so",
    "start": "1097840",
    "end": "1100320"
  },
  {
    "text": "when i write my workflows or when you",
    "start": "1100320",
    "end": "1102160"
  },
  {
    "text": "write your workflows you don't have to",
    "start": "1102160",
    "end": "1103600"
  },
  {
    "text": "know much about where this service is",
    "start": "1103600",
    "end": "1105919"
  },
  {
    "text": "if it needs a certain authentication you",
    "start": "1105919",
    "end": "1108720"
  },
  {
    "text": "don't have to define it inside your",
    "start": "1108720",
    "end": "1110320"
  },
  {
    "text": "workflow definition",
    "start": "1110320",
    "end": "1111679"
  },
  {
    "text": "you use open api which is a standard for",
    "start": "1111679",
    "end": "1114720"
  },
  {
    "text": "that",
    "start": "1114720",
    "end": "1115360"
  },
  {
    "text": "and you let the runtime engines figure",
    "start": "1115360",
    "end": "1117760"
  },
  {
    "text": "out how to actually",
    "start": "1117760",
    "end": "1119520"
  },
  {
    "text": "invoke uh those services during workflow",
    "start": "1119520",
    "end": "1122720"
  },
  {
    "text": "execution",
    "start": "1122720",
    "end": "1123600"
  },
  {
    "text": "the way you define them with a standard",
    "start": "1123600",
    "end": "1125360"
  },
  {
    "text": "definition rather than",
    "start": "1125360",
    "end": "1127039"
  },
  {
    "text": "something proprietary or custom so now",
    "start": "1127039",
    "end": "1130480"
  },
  {
    "text": "what we have left to do",
    "start": "1130480",
    "end": "1131760"
  },
  {
    "text": "is really start writing our workflow so",
    "start": "1131760",
    "end": "1134400"
  },
  {
    "text": "for this i'm going to create a new file",
    "start": "1134400",
    "end": "1136640"
  },
  {
    "text": "and it's going to be let's say um",
    "start": "1136640",
    "end": "1140160"
  },
  {
    "text": "my workflow and like we said we can",
    "start": "1140160",
    "end": "1143919"
  },
  {
    "text": "define them in json or yaml in this case",
    "start": "1143919",
    "end": "1145760"
  },
  {
    "text": "let's go ahead",
    "start": "1145760",
    "end": "1146720"
  },
  {
    "text": "and define it in jason",
    "start": "1146720",
    "end": "1150080"
  },
  {
    "text": "and now before i get started i want to",
    "start": "1150080",
    "end": "1152160"
  },
  {
    "text": "just show real quick with insert",
    "start": "1152160",
    "end": "1154160"
  },
  {
    "text": "vs code i have the",
    "start": "1154160",
    "end": "1157760"
  },
  {
    "text": "serverless workflow plugin installed",
    "start": "1157760",
    "end": "1160400"
  },
  {
    "text": "already",
    "start": "1160400",
    "end": "1161039"
  },
  {
    "text": "but it if you work with vs code and so",
    "start": "1161039",
    "end": "1163840"
  },
  {
    "text": "it makes a lot of sense to",
    "start": "1163840",
    "end": "1165280"
  },
  {
    "text": "to to install this little extension as",
    "start": "1165280",
    "end": "1167520"
  },
  {
    "text": "well the reason",
    "start": "1167520",
    "end": "1168799"
  },
  {
    "text": "for that it gives you things like code",
    "start": "1168799",
    "end": "1171360"
  },
  {
    "text": "completions and code hints and things",
    "start": "1171360",
    "end": "1173360"
  },
  {
    "text": "like that",
    "start": "1173360",
    "end": "1174400"
  },
  {
    "text": "to allow you to easier uh define your",
    "start": "1174400",
    "end": "1177280"
  },
  {
    "text": "workflow using the serverless workflow",
    "start": "1177280",
    "end": "1178799"
  },
  {
    "text": "link",
    "start": "1178799",
    "end": "1179440"
  },
  {
    "text": "so let's go ahead our id of the workflow",
    "start": "1179440",
    "end": "1182240"
  },
  {
    "text": "it's a",
    "start": "1182240",
    "end": "1182960"
  },
  {
    "text": "unique identifier or let's call it",
    "start": "1182960",
    "end": "1186000"
  },
  {
    "text": "just simple workflow and we'll see what",
    "start": "1186000",
    "end": "1189760"
  },
  {
    "text": "why this is important to define the id",
    "start": "1189760",
    "end": "1191679"
  },
  {
    "text": "later let's give it some sort of version",
    "start": "1191679",
    "end": "1193440"
  },
  {
    "text": "of 1.0",
    "start": "1193440",
    "end": "1196400"
  },
  {
    "text": "and let's give it a some descriptive",
    "start": "1196400",
    "end": "1198480"
  },
  {
    "text": "name our",
    "start": "1198480",
    "end": "1200080"
  },
  {
    "text": "simple orchestration",
    "start": "1200080",
    "end": "1204000"
  },
  {
    "text": "all right so far so good right so now",
    "start": "1204400",
    "end": "1207440"
  },
  {
    "text": "we have to tell the runtime engine",
    "start": "1207440",
    "end": "1209440"
  },
  {
    "text": "through a workflow definition",
    "start": "1209440",
    "end": "1211039"
  },
  {
    "text": "well okay when you start this workflow",
    "start": "1211039",
    "end": "1213280"
  },
  {
    "text": "where do you actually",
    "start": "1213280",
    "end": "1214480"
  },
  {
    "text": "start and let's call our starting point",
    "start": "1214480",
    "end": "1217520"
  },
  {
    "text": "again let's say start",
    "start": "1217520",
    "end": "1220559"
  },
  {
    "text": "or orchestration so this is some",
    "start": "1220559",
    "end": "1223919"
  },
  {
    "text": "starting point",
    "start": "1223919",
    "end": "1225280"
  },
  {
    "text": "you know and the next thing we want to",
    "start": "1225280",
    "end": "1226960"
  },
  {
    "text": "do is actually",
    "start": "1226960",
    "end": "1228400"
  },
  {
    "text": "do the what uh part of the workflow we",
    "start": "1228400",
    "end": "1230960"
  },
  {
    "text": "just define the control for logic for",
    "start": "1230960",
    "end": "1232960"
  },
  {
    "text": "this",
    "start": "1232960",
    "end": "1233440"
  },
  {
    "text": "serious workflow gives you an array",
    "start": "1233440",
    "end": "1235200"
  },
  {
    "text": "called states each state is a single",
    "start": "1235200",
    "end": "1237840"
  },
  {
    "text": "building block",
    "start": "1237840",
    "end": "1239200"
  },
  {
    "text": "that you define the that defines how the",
    "start": "1239200",
    "end": "1242240"
  },
  {
    "text": "control flow logic",
    "start": "1242240",
    "end": "1243520"
  },
  {
    "text": "should uh what what actually the",
    "start": "1243520",
    "end": "1246240"
  },
  {
    "text": "workflow should do",
    "start": "1246240",
    "end": "1247600"
  },
  {
    "text": "so in our case let's define a state and",
    "start": "1247600",
    "end": "1251200"
  },
  {
    "text": "we have a name which kind of has to",
    "start": "1251200",
    "end": "1253600"
  },
  {
    "text": "match here",
    "start": "1253600",
    "end": "1254960"
  },
  {
    "text": "so start matching this state means that",
    "start": "1254960",
    "end": "1258400"
  },
  {
    "text": "this particular workflow state is going",
    "start": "1258400",
    "end": "1260080"
  },
  {
    "text": "to be the first one",
    "start": "1260080",
    "end": "1261039"
  },
  {
    "text": "executed when this workflow execution",
    "start": "1261039",
    "end": "1263360"
  },
  {
    "text": "happens",
    "start": "1263360",
    "end": "1264480"
  },
  {
    "text": "now another thing with serverless",
    "start": "1264480",
    "end": "1265679"
  },
  {
    "text": "workflow that you have we have different",
    "start": "1265679",
    "end": "1268000"
  },
  {
    "text": "types of states and currently we have",
    "start": "1268000",
    "end": "1269760"
  },
  {
    "text": "nine of them",
    "start": "1269760",
    "end": "1270640"
  },
  {
    "text": "so for the one that we want to use which",
    "start": "1270640",
    "end": "1272480"
  },
  {
    "text": "is basically just invoking",
    "start": "1272480",
    "end": "1274640"
  },
  {
    "text": "functions or microservices we have this",
    "start": "1274640",
    "end": "1277280"
  },
  {
    "text": "thing called an",
    "start": "1277280",
    "end": "1277919"
  },
  {
    "text": "operation state and an operation state",
    "start": "1277919",
    "end": "1281120"
  },
  {
    "text": "has actions actions actually define",
    "start": "1281120",
    "end": "1284640"
  },
  {
    "text": "invocations of some services that you",
    "start": "1284640",
    "end": "1287039"
  },
  {
    "text": "want to invoke",
    "start": "1287039",
    "end": "1288080"
  },
  {
    "text": "so in our case let's give our first uh",
    "start": "1288080",
    "end": "1291440"
  },
  {
    "text": "action a name and let's call it",
    "start": "1291440",
    "end": "1294960"
  },
  {
    "text": "invoke go function",
    "start": "1294960",
    "end": "1298159"
  },
  {
    "text": "and we can give it a function ref",
    "start": "1298159",
    "end": "1301360"
  },
  {
    "text": "and our function ref let's just call it",
    "start": "1301360",
    "end": "1305360"
  },
  {
    "text": "uh go function",
    "start": "1305360",
    "end": "1308799"
  },
  {
    "text": "and that's it and we have",
    "start": "1308799",
    "end": "1311919"
  },
  {
    "text": "of course to define two more of those",
    "start": "1311919",
    "end": "1314000"
  },
  {
    "text": "because we want to invoke three services",
    "start": "1314000",
    "end": "1316320"
  },
  {
    "text": "now the default execution of",
    "start": "1316320",
    "end": "1319919"
  },
  {
    "text": "uh the services in actions is uh",
    "start": "1319919",
    "end": "1322640"
  },
  {
    "text": "sequential",
    "start": "1322640",
    "end": "1323600"
  },
  {
    "text": "but you can see you can define an action",
    "start": "1323600",
    "end": "1326159"
  },
  {
    "text": "mode parameter where you can also",
    "start": "1326159",
    "end": "1328320"
  },
  {
    "text": "actually also say that these services or",
    "start": "1328320",
    "end": "1331280"
  },
  {
    "text": "invocations should be",
    "start": "1331280",
    "end": "1332720"
  },
  {
    "text": "completed in parallel so let's hear we",
    "start": "1332720",
    "end": "1334960"
  },
  {
    "text": "want to",
    "start": "1334960",
    "end": "1336080"
  },
  {
    "text": "go and java",
    "start": "1336080",
    "end": "1339600"
  },
  {
    "text": "and that's it and at the end",
    "start": "1339840",
    "end": "1342880"
  },
  {
    "text": "what we have to do is we have to tell a",
    "start": "1342880",
    "end": "1345280"
  },
  {
    "text": "workflow engine",
    "start": "1345280",
    "end": "1346320"
  },
  {
    "text": "that once it has executed those",
    "start": "1346320",
    "end": "1348080"
  },
  {
    "text": "functions yeah uh the last one you said",
    "start": "1348080",
    "end": "1350320"
  },
  {
    "text": "node function should be java function",
    "start": "1350320",
    "end": "1351600"
  },
  {
    "text": "right",
    "start": "1351600",
    "end": "1352640"
  },
  {
    "text": "oh sorry thank you so much uh all right",
    "start": "1352640",
    "end": "1356640"
  },
  {
    "text": "thank you yeah and basically",
    "start": "1356640",
    "end": "1360240"
  },
  {
    "text": "uh to tell a runtime once this state is",
    "start": "1360240",
    "end": "1363440"
  },
  {
    "text": "executed or three",
    "start": "1363440",
    "end": "1364720"
  },
  {
    "text": "uh functions are uh invoked we want to",
    "start": "1364720",
    "end": "1367440"
  },
  {
    "text": "end workflow execution",
    "start": "1367440",
    "end": "1369120"
  },
  {
    "text": "and as you can see so far this is all",
    "start": "1369120",
    "end": "1371760"
  },
  {
    "text": "domain specific we didn't use any",
    "start": "1371760",
    "end": "1373840"
  },
  {
    "text": "programming language we didn't use",
    "start": "1373840",
    "end": "1375840"
  },
  {
    "text": "any weird ways or proprietary ways we",
    "start": "1375840",
    "end": "1379120"
  },
  {
    "text": "basically once you this is human",
    "start": "1379120",
    "end": "1380880"
  },
  {
    "text": "readable",
    "start": "1380880",
    "end": "1382000"
  },
  {
    "text": "and once when you read you can actually",
    "start": "1382000",
    "end": "1384559"
  },
  {
    "text": "figure out what's",
    "start": "1384559",
    "end": "1385679"
  },
  {
    "text": "and you can of course use your domain",
    "start": "1385679",
    "end": "1387280"
  },
  {
    "text": "specific language",
    "start": "1387280",
    "end": "1388720"
  },
  {
    "text": "to define everything within workflow",
    "start": "1388720",
    "end": "1390480"
  },
  {
    "text": "execution now that we have defined our",
    "start": "1390480",
    "end": "1392559"
  },
  {
    "text": "state",
    "start": "1392559",
    "end": "1393360"
  },
  {
    "text": "we do have to tell the runtime a little",
    "start": "1393360",
    "end": "1395440"
  },
  {
    "text": "bit more about the functions that we",
    "start": "1395440",
    "end": "1397120"
  },
  {
    "text": "want",
    "start": "1397120",
    "end": "1397520"
  },
  {
    "text": "to actually invoke so for that service",
    "start": "1397520",
    "end": "1399679"
  },
  {
    "text": "workflow gives you a little functions",
    "start": "1399679",
    "end": "1401039"
  },
  {
    "text": "array",
    "start": "1401039",
    "end": "1402400"
  },
  {
    "text": "and now the name of our function",
    "start": "1402400",
    "end": "1405919"
  },
  {
    "text": "definition let's",
    "start": "1405919",
    "end": "1407679"
  },
  {
    "text": "we have it references the function ref",
    "start": "1407679",
    "end": "1410000"
  },
  {
    "text": "parameter",
    "start": "1410000",
    "end": "1410720"
  },
  {
    "text": "so let's call this a go function",
    "start": "1410720",
    "end": "1413760"
  },
  {
    "text": "and our operation at this point a lot of",
    "start": "1413760",
    "end": "1416799"
  },
  {
    "text": "workflow languages give you some custom",
    "start": "1416799",
    "end": "1418880"
  },
  {
    "text": "parameters proprietary things a set of",
    "start": "1418880",
    "end": "1421520"
  },
  {
    "text": "things that you can do",
    "start": "1421520",
    "end": "1422799"
  },
  {
    "text": "with serverless workflow you basically",
    "start": "1422799",
    "end": "1424480"
  },
  {
    "text": "use open api",
    "start": "1424480",
    "end": "1425840"
  },
  {
    "text": "so for us this means that we want to",
    "start": "1425840",
    "end": "1428080"
  },
  {
    "text": "actually",
    "start": "1428080",
    "end": "1428880"
  },
  {
    "text": "reference our api definition for a go",
    "start": "1428880",
    "end": "1431760"
  },
  {
    "text": "service",
    "start": "1431760",
    "end": "1432559"
  },
  {
    "text": "so we say go service.json",
    "start": "1432559",
    "end": "1436159"
  },
  {
    "text": "and within the go service json we want",
    "start": "1436159",
    "end": "1438880"
  },
  {
    "text": "to",
    "start": "1438880",
    "end": "1439360"
  },
  {
    "text": "uh use its unique operation id for the",
    "start": "1439360",
    "end": "1442320"
  },
  {
    "text": "type of",
    "start": "1442320",
    "end": "1443039"
  },
  {
    "text": "uh service that we want to go use and",
    "start": "1443039",
    "end": "1445679"
  },
  {
    "text": "this operation id here is called",
    "start": "1445679",
    "end": "1447600"
  },
  {
    "text": "go so this is it with this we have told",
    "start": "1447600",
    "end": "1450960"
  },
  {
    "text": "the runtime to use the open ipi",
    "start": "1450960",
    "end": "1452960"
  },
  {
    "text": "definition to learn how to invoke this",
    "start": "1452960",
    "end": "1455200"
  },
  {
    "text": "service",
    "start": "1455200",
    "end": "1456080"
  },
  {
    "text": "and when it evokes it it should use this",
    "start": "1456080",
    "end": "1458400"
  },
  {
    "text": "particular unique operation id",
    "start": "1458400",
    "end": "1460799"
  },
  {
    "text": "telling it exactly what to invoke during",
    "start": "1460799",
    "end": "1463120"
  },
  {
    "text": "workflow execution",
    "start": "1463120",
    "end": "1464320"
  },
  {
    "text": "now same thing we want to use",
    "start": "1464320",
    "end": "1467760"
  },
  {
    "text": "again three times so for this we want to",
    "start": "1467760",
    "end": "1471120"
  },
  {
    "text": "reference",
    "start": "1471120",
    "end": "1472320"
  },
  {
    "text": "this one and we have node",
    "start": "1472320",
    "end": "1475880"
  },
  {
    "text": "service.json here",
    "start": "1475880",
    "end": "1478640"
  },
  {
    "text": "and the unique operation id is node",
    "start": "1478640",
    "end": "1482080"
  },
  {
    "text": "where is my workflow all right and",
    "start": "1482080",
    "end": "1485440"
  },
  {
    "text": "for the java function",
    "start": "1485440",
    "end": "1488480"
  },
  {
    "text": "we have our java service open api",
    "start": "1488480",
    "end": "1491279"
  },
  {
    "text": "definition",
    "start": "1491279",
    "end": "1492480"
  },
  {
    "text": "here and",
    "start": "1492480",
    "end": "1495840"
  },
  {
    "text": "java service and our operation id",
    "start": "1496640",
    "end": "1500080"
  },
  {
    "text": "is simply just java so let's go with",
    "start": "1500080",
    "end": "1502720"
  },
  {
    "text": "that",
    "start": "1502720",
    "end": "1504880"
  },
  {
    "text": "and this is it this is our workflow",
    "start": "1505039",
    "end": "1507360"
  },
  {
    "text": "that's going to",
    "start": "1507360",
    "end": "1508400"
  },
  {
    "text": "first invoke our go function then our",
    "start": "1508400",
    "end": "1511679"
  },
  {
    "text": "node.js function",
    "start": "1511679",
    "end": "1513360"
  },
  {
    "text": "and then our java function now one of",
    "start": "1513360",
    "end": "1515840"
  },
  {
    "text": "the things that's also important here if",
    "start": "1515840",
    "end": "1517760"
  },
  {
    "text": "you look at our for example node service",
    "start": "1517760",
    "end": "1521039"
  },
  {
    "text": "we have for this particular path or",
    "start": "1521039",
    "end": "1523840"
  },
  {
    "text": "service but to invoke we use",
    "start": "1523840",
    "end": "1525600"
  },
  {
    "text": "get now you can change this to post",
    "start": "1525600",
    "end": "1528320"
  },
  {
    "text": "without",
    "start": "1528320",
    "end": "1528880"
  },
  {
    "text": "ever affecting your workflow definition",
    "start": "1528880",
    "end": "1531840"
  },
  {
    "text": "so having this",
    "start": "1531840",
    "end": "1532720"
  },
  {
    "text": "uh open api definitions or we also",
    "start": "1532720",
    "end": "1535120"
  },
  {
    "text": "support grpc",
    "start": "1535120",
    "end": "1536559"
  },
  {
    "text": "where we can invoke some certain",
    "start": "1536559",
    "end": "1538080"
  },
  {
    "text": "reusable expressions",
    "start": "1538080",
    "end": "1539840"
  },
  {
    "text": "having them defined like this really",
    "start": "1539840",
    "end": "1541440"
  },
  {
    "text": "allows you to change things around",
    "start": "1541440",
    "end": "1543120"
  },
  {
    "text": "dynamically",
    "start": "1543120",
    "end": "1544159"
  },
  {
    "text": "depending on what the services or even",
    "start": "1544159",
    "end": "1546720"
  },
  {
    "text": "the services that might host this open",
    "start": "1546720",
    "end": "1548480"
  },
  {
    "text": "id",
    "start": "1548480",
    "end": "1548799"
  },
  {
    "text": "definition they can change and you don't",
    "start": "1548799",
    "end": "1550320"
  },
  {
    "text": "really have to change your underlying",
    "start": "1550320",
    "end": "1552400"
  },
  {
    "text": "workflow definition itself all right so",
    "start": "1552400",
    "end": "1554799"
  },
  {
    "text": "that's it so let's go ahead",
    "start": "1554799",
    "end": "1557360"
  },
  {
    "text": "and start",
    "start": "1557360",
    "end": "1560400"
  },
  {
    "text": "our",
    "start": "1560400",
    "end": "1562640"
  },
  {
    "text": "little workflow um application",
    "start": "1564960",
    "end": "1569039"
  },
  {
    "text": "so what this particular runtime is going",
    "start": "1569039",
    "end": "1570960"
  },
  {
    "text": "to do this java runtime is going to read",
    "start": "1570960",
    "end": "1572799"
  },
  {
    "text": "our workflow definition and our openid",
    "start": "1572799",
    "end": "1575279"
  },
  {
    "text": "definition is going to start generating",
    "start": "1575279",
    "end": "1577440"
  },
  {
    "text": "things for us",
    "start": "1577440",
    "end": "1578480"
  },
  {
    "text": "the first thing that is going to",
    "start": "1578480",
    "end": "1579760"
  },
  {
    "text": "generate is the actual code",
    "start": "1579760",
    "end": "1582320"
  },
  {
    "text": "uh to invoke uh the open api stuff",
    "start": "1582320",
    "end": "1585840"
  },
  {
    "text": "that's using the open api as the case in",
    "start": "1585840",
    "end": "1588559"
  },
  {
    "text": "different languages",
    "start": "1588559",
    "end": "1589760"
  },
  {
    "text": "then it's going to actually parse our",
    "start": "1589760",
    "end": "1591440"
  },
  {
    "text": "workflow definition",
    "start": "1591440",
    "end": "1592960"
  },
  {
    "text": "and generate some particular code that",
    "start": "1592960",
    "end": "1594880"
  },
  {
    "text": "actually is going to expose our workflow",
    "start": "1594880",
    "end": "1596720"
  },
  {
    "text": "as a service",
    "start": "1596720",
    "end": "1598240"
  },
  {
    "text": "and the particular endpoint of",
    "start": "1598240",
    "end": "1601279"
  },
  {
    "text": "the service that is going to expose for",
    "start": "1601279",
    "end": "1603919"
  },
  {
    "text": "us",
    "start": "1603919",
    "end": "1604400"
  },
  {
    "text": "is determined by the id parameter so for",
    "start": "1604400",
    "end": "1607039"
  },
  {
    "text": "example the service that we have right",
    "start": "1607039",
    "end": "1608559"
  },
  {
    "text": "now running and this is running",
    "start": "1608559",
    "end": "1610400"
  },
  {
    "text": "and just to show you in port 8083 just",
    "start": "1610400",
    "end": "1613520"
  },
  {
    "text": "to be different from the other ones",
    "start": "1613520",
    "end": "1615279"
  },
  {
    "text": "it's going to be a localhost 8083",
    "start": "1615279",
    "end": "1618480"
  },
  {
    "text": "and in this case slash simple work all",
    "start": "1618480",
    "end": "1621279"
  },
  {
    "text": "right",
    "start": "1621279",
    "end": "1621760"
  },
  {
    "text": "so let's go ahead and we can actually",
    "start": "1621760",
    "end": "1623440"
  },
  {
    "text": "run this",
    "start": "1623440",
    "end": "1624799"
  },
  {
    "text": "so for that i let's see if i have",
    "start": "1624799",
    "end": "1628320"
  },
  {
    "text": "actually",
    "start": "1628320",
    "end": "1629840"
  },
  {
    "text": "uh if i can actually have the curl for",
    "start": "1629840",
    "end": "1633520"
  },
  {
    "text": "that",
    "start": "1633520",
    "end": "1634720"
  },
  {
    "text": "nope i guess i don't which",
    "start": "1634720",
    "end": "1638240"
  },
  {
    "text": "let's try it one second i have a curl",
    "start": "1638240",
    "end": "1640640"
  },
  {
    "text": "prepared for this",
    "start": "1640640",
    "end": "1642240"
  },
  {
    "text": "and",
    "start": "1642240",
    "end": "1644480"
  },
  {
    "text": "uh cubecon eu2021",
    "start": "1645440",
    "end": "1649279"
  },
  {
    "text": "so i don't have to mess it up there it",
    "start": "1649279",
    "end": "1651919"
  },
  {
    "text": "is",
    "start": "1651919",
    "end": "1652720"
  },
  {
    "text": "and i might have to change it a little",
    "start": "1652720",
    "end": "1654559"
  },
  {
    "text": "bit depending on our",
    "start": "1654559",
    "end": "1657120"
  },
  {
    "text": "definition so let's go ahead and paste",
    "start": "1657120",
    "end": "1659360"
  },
  {
    "text": "this now let's see our",
    "start": "1659360",
    "end": "1661039"
  },
  {
    "text": "endpoint if it is still true this is",
    "start": "1661039",
    "end": "1664399"
  },
  {
    "text": "slash",
    "start": "1664399",
    "end": "1664799"
  },
  {
    "text": "simple but for us our id simple workflow",
    "start": "1664799",
    "end": "1668080"
  },
  {
    "text": "so let's change that around",
    "start": "1668080",
    "end": "1671279"
  },
  {
    "text": "all right so when i do this we're going",
    "start": "1671279",
    "end": "1673039"
  },
  {
    "text": "to should be getting an instance of a",
    "start": "1673039",
    "end": "1675520"
  },
  {
    "text": "workflow our workflow is going to",
    "start": "1675520",
    "end": "1677200"
  },
  {
    "text": "execute",
    "start": "1677200",
    "end": "1677919"
  },
  {
    "text": "our uh little three functions in this",
    "start": "1677919",
    "end": "1680799"
  },
  {
    "text": "particular order",
    "start": "1680799",
    "end": "1682320"
  },
  {
    "text": "so let's go ahead and do that",
    "start": "1682320",
    "end": "1685600"
  },
  {
    "text": "and here is our output which is the",
    "start": "1686080",
    "end": "1688399"
  },
  {
    "text": "output of the workflow its",
    "start": "1688399",
    "end": "1690799"
  },
  {
    "text": "results and includes the",
    "start": "1690799",
    "end": "1693919"
  },
  {
    "text": "three uh outputs of our services so the",
    "start": "1693919",
    "end": "1697919"
  },
  {
    "text": "results of each of the service",
    "start": "1697919",
    "end": "1699679"
  },
  {
    "text": "invocation",
    "start": "1699679",
    "end": "1700640"
  },
  {
    "text": "gets merged with uh these",
    "start": "1700640",
    "end": "1703760"
  },
  {
    "text": "um workflow state data and the final",
    "start": "1703760",
    "end": "1707120"
  },
  {
    "text": "after the three results are merged into",
    "start": "1707120",
    "end": "1709200"
  },
  {
    "text": "the state data the workflow produces",
    "start": "1709200",
    "end": "1711679"
  },
  {
    "text": "this particular result so that's it for",
    "start": "1711679",
    "end": "1714399"
  },
  {
    "text": "the little demo i hope it really helps",
    "start": "1714399",
    "end": "1716480"
  },
  {
    "text": "you guys",
    "start": "1716480",
    "end": "1717360"
  },
  {
    "text": "understand how easy to get started and",
    "start": "1717360",
    "end": "1719279"
  },
  {
    "text": "start orchestrating services",
    "start": "1719279",
    "end": "1721200"
  },
  {
    "text": "no matter where they live and how they",
    "start": "1721200",
    "end": "1723039"
  },
  {
    "text": "are defined using",
    "start": "1723039",
    "end": "1724559"
  },
  {
    "text": "particular standards like open api and",
    "start": "1724559",
    "end": "1726960"
  },
  {
    "text": "jrpc",
    "start": "1726960",
    "end": "1727840"
  },
  {
    "text": "so that's it for the demo and i'm going",
    "start": "1727840",
    "end": "1729279"
  },
  {
    "text": "to start sharing back our",
    "start": "1729279",
    "end": "1731200"
  },
  {
    "text": "presentation",
    "start": "1731200",
    "end": "1733840"
  },
  {
    "text": "all right so uh thank you all for",
    "start": "1735039",
    "end": "1738640"
  },
  {
    "text": "uh joining our talk and and being here",
    "start": "1738640",
    "end": "1741760"
  },
  {
    "text": "uh doug and i would really like to thank",
    "start": "1741760",
    "end": "1743919"
  },
  {
    "text": "you and here you can find some more",
    "start": "1743919",
    "end": "1746240"
  },
  {
    "text": "information about both cloud events and",
    "start": "1746240",
    "end": "1748559"
  },
  {
    "text": "serverless workflow",
    "start": "1748559",
    "end": "1750000"
  },
  {
    "text": "and for cloud events specifically uh",
    "start": "1750000",
    "end": "1752960"
  },
  {
    "text": "they have",
    "start": "1752960",
    "end": "1753600"
  },
  {
    "text": "uh cloud event says weekly calls",
    "start": "1753600",
    "end": "1755919"
  },
  {
    "text": "thursdays as",
    "start": "1755919",
    "end": "1756960"
  },
  {
    "text": "at 12 p.m eastern time and you can find",
    "start": "1756960",
    "end": "1760080"
  },
  {
    "text": "all the information you need to join",
    "start": "1760080",
    "end": "1761919"
  },
  {
    "text": "those calls on the",
    "start": "1761919",
    "end": "1763679"
  },
  {
    "text": "servers workflow github repository i",
    "start": "1763679",
    "end": "1766320"
  },
  {
    "text": "mean cloud events",
    "start": "1766320",
    "end": "1767919"
  },
  {
    "text": "sorry same thing for serverless workflow",
    "start": "1767919",
    "end": "1769840"
  },
  {
    "text": "we uh it has",
    "start": "1769840",
    "end": "1771039"
  },
  {
    "text": "calls on mondays at 1pm eastern uh and",
    "start": "1771039",
    "end": "1774080"
  },
  {
    "text": "you can also find",
    "start": "1774080",
    "end": "1775120"
  },
  {
    "text": "uh that information on on github as well",
    "start": "1775120",
    "end": "1778399"
  },
  {
    "text": "uh on behalf of doug and i would like to",
    "start": "1778399",
    "end": "1780640"
  },
  {
    "text": "thank you all",
    "start": "1780640",
    "end": "1781760"
  },
  {
    "text": "for joining and we will stay around for",
    "start": "1781760",
    "end": "1784399"
  },
  {
    "text": "any questions",
    "start": "1784399",
    "end": "1785279"
  },
  {
    "text": "thank you very much bye",
    "start": "1785279",
    "end": "1789200"
  }
]