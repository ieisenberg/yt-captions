[
  {
    "text": "all right welcome everybody uh today",
    "start": "80",
    "end": "2159"
  },
  {
    "text": "clemens and i are going to be talking to",
    "start": "2159",
    "end": "3520"
  },
  {
    "text": "you about cloud events",
    "start": "3520",
    "end": "4640"
  },
  {
    "text": "in particular the uh the status of the",
    "start": "4640",
    "end": "6799"
  },
  {
    "text": "cloud events project and where we're",
    "start": "6799",
    "end": "7919"
  },
  {
    "text": "headed in the future",
    "start": "7919",
    "end": "9280"
  },
  {
    "text": "um hopefully we'll have time for",
    "start": "9280",
    "end": "10480"
  },
  {
    "text": "questions at the end so let's go ahead",
    "start": "10480",
    "end": "12080"
  },
  {
    "text": "and jump right into it because we have a",
    "start": "12080",
    "end": "13040"
  },
  {
    "text": "lot of material here",
    "start": "13040",
    "end": "14920"
  },
  {
    "text": "so first of all quick agenda give you a",
    "start": "14920",
    "end": "17680"
  },
  {
    "text": "quick update on where we are with cloud",
    "start": "17680",
    "end": "19279"
  },
  {
    "text": "events project and then very quickly",
    "start": "19279",
    "end": "20880"
  },
  {
    "text": "jump over to some of the new work that",
    "start": "20880",
    "end": "22400"
  },
  {
    "text": "we're doing here",
    "start": "22400",
    "end": "23760"
  },
  {
    "text": "so let's start with cloud events itself",
    "start": "23760",
    "end": "25920"
  },
  {
    "text": "so not going to go into too",
    "start": "25920",
    "end": "27199"
  },
  {
    "text": "deep detail here but for those of you",
    "start": "27199",
    "end": "29439"
  },
  {
    "text": "who don't know what cloud events is",
    "start": "29439",
    "end": "30720"
  },
  {
    "text": "it is a specification for defining",
    "start": "30720",
    "end": "32960"
  },
  {
    "text": "common metadata",
    "start": "32960",
    "end": "34640"
  },
  {
    "text": "for events and where that metadata",
    "start": "34640",
    "end": "36800"
  },
  {
    "text": "appears and the messages that are",
    "start": "36800",
    "end": "38160"
  },
  {
    "text": "transporting those events",
    "start": "38160",
    "end": "39840"
  },
  {
    "text": "now it seems very simple they're a very",
    "start": "39840",
    "end": "41600"
  },
  {
    "text": "high level and it is",
    "start": "41600",
    "end": "42879"
  },
  {
    "text": "but we're really doing this mainly to",
    "start": "42879",
    "end": "44640"
  },
  {
    "text": "aid in delivery of events from",
    "start": "44640",
    "end": "46399"
  },
  {
    "text": "point a to point b this is not about",
    "start": "46399",
    "end": "48559"
  },
  {
    "text": "defining yet another common event format",
    "start": "48559",
    "end": "50559"
  },
  {
    "text": "or anything like that i'll show you an",
    "start": "50559",
    "end": "51680"
  },
  {
    "text": "example in a minute",
    "start": "51680",
    "end": "52800"
  },
  {
    "text": "this is simply about aiding in the",
    "start": "52800",
    "end": "54320"
  },
  {
    "text": "delivery of events across middleware to",
    "start": "54320",
    "end": "56960"
  },
  {
    "text": "its final destination",
    "start": "56960",
    "end": "58399"
  },
  {
    "text": "and most importantly to enable people to",
    "start": "58399",
    "end": "60640"
  },
  {
    "text": "do that without having to understand or",
    "start": "60640",
    "end": "62640"
  },
  {
    "text": "parse the business logic of the event",
    "start": "62640",
    "end": "64320"
  },
  {
    "text": "itself okay so let's",
    "start": "64320",
    "end": "66240"
  },
  {
    "text": "jump into a quick example to show you",
    "start": "66240",
    "end": "67520"
  },
  {
    "text": "what that actually means so let's say",
    "start": "67520",
    "end": "69520"
  },
  {
    "text": "you have this event flowing over http",
    "start": "69520",
    "end": "71360"
  },
  {
    "text": "right nothing in here too special looks",
    "start": "71360",
    "end": "72799"
  },
  {
    "text": "like a normal http event",
    "start": "72799",
    "end": "74799"
  },
  {
    "text": "in order to turn this into a cloud event",
    "start": "74799",
    "end": "76320"
  },
  {
    "text": "though you add a couple bit of",
    "start": "76320",
    "end": "78320"
  },
  {
    "text": "extra metadata as http headers in this",
    "start": "78320",
    "end": "80400"
  },
  {
    "text": "case and you can see",
    "start": "80400",
    "end": "81920"
  },
  {
    "text": "just four little bits of metadata and",
    "start": "81920",
    "end": "83360"
  },
  {
    "text": "these are the only four that are",
    "start": "83360",
    "end": "84320"
  },
  {
    "text": "required the spec version to see the",
    "start": "84320",
    "end": "86479"
  },
  {
    "text": "cloud of inspect version that is",
    "start": "86479",
    "end": "88080"
  },
  {
    "text": "uh the type of the event so this tells",
    "start": "88080",
    "end": "89840"
  },
  {
    "text": "you for example whether it's a",
    "start": "89840",
    "end": "92320"
  },
  {
    "text": "crate versus a delete type of event um",
    "start": "92320",
    "end": "94799"
  },
  {
    "text": "where the event came from",
    "start": "94799",
    "end": "96320"
  },
  {
    "text": "you know what is the entity that was",
    "start": "96320",
    "end": "97600"
  },
  {
    "text": "sending out the events and then just",
    "start": "97600",
    "end": "99280"
  },
  {
    "text": "some unique identifier",
    "start": "99280",
    "end": "100640"
  },
  {
    "text": "okay now obviously look at that it",
    "start": "100640",
    "end": "102880"
  },
  {
    "text": "doesn't seem too exciting",
    "start": "102880",
    "end": "104320"
  },
  {
    "text": "but with that basic information",
    "start": "104320",
    "end": "106399"
  },
  {
    "text": "middleware can now",
    "start": "106399",
    "end": "108079"
  },
  {
    "text": "route the message appropriately to make",
    "start": "108079",
    "end": "110960"
  },
  {
    "text": "its way to its final destination",
    "start": "110960",
    "end": "112720"
  },
  {
    "text": "much in the same way you can actually",
    "start": "112720",
    "end": "114159"
  },
  {
    "text": "see the http headers doing that",
    "start": "114159",
    "end": "116399"
  },
  {
    "text": "for the http layer okay and i said it's",
    "start": "116399",
    "end": "118799"
  },
  {
    "text": "actually a very very simple concept",
    "start": "118799",
    "end": "120640"
  },
  {
    "text": "but with that one little extra bit of",
    "start": "120640",
    "end": "122640"
  },
  {
    "text": "information",
    "start": "122640",
    "end": "124000"
  },
  {
    "text": "middleware can now be inventing agnostic",
    "start": "124000",
    "end": "126640"
  },
  {
    "text": "in terms of understanding the business",
    "start": "126640",
    "end": "127840"
  },
  {
    "text": "logic all they need to do is look for",
    "start": "127840",
    "end": "129200"
  },
  {
    "text": "these common bits of metadata",
    "start": "129200",
    "end": "130720"
  },
  {
    "text": "to route the event appropriately okay",
    "start": "130720",
    "end": "132879"
  },
  {
    "text": "very very simple concept but we're",
    "start": "132879",
    "end": "134000"
  },
  {
    "text": "hearing lots of kudos from the community",
    "start": "134000",
    "end": "135920"
  },
  {
    "text": "how this is making life easier because",
    "start": "135920",
    "end": "137440"
  },
  {
    "text": "they no longer have to have specialized",
    "start": "137440",
    "end": "139120"
  },
  {
    "text": "middleware for every type of event",
    "start": "139120",
    "end": "141120"
  },
  {
    "text": "that flows through the system now",
    "start": "141120",
    "end": "142640"
  },
  {
    "text": "obviously the final destination still",
    "start": "142640",
    "end": "144080"
  },
  {
    "text": "needs to understand the event and the",
    "start": "144080",
    "end": "145200"
  },
  {
    "text": "business logic to get its job done",
    "start": "145200",
    "end": "146959"
  },
  {
    "text": "but in terms of routing this is the type",
    "start": "146959",
    "end": "149440"
  },
  {
    "text": "of information that should be the bare",
    "start": "149440",
    "end": "150800"
  },
  {
    "text": "minimum that people need to get their",
    "start": "150800",
    "end": "152000"
  },
  {
    "text": "job done",
    "start": "152000",
    "end": "153040"
  },
  {
    "text": "now this example right here is what we",
    "start": "153040",
    "end": "154800"
  },
  {
    "text": "call the binary format just adds a",
    "start": "154800",
    "end": "156239"
  },
  {
    "text": "couple http headers so your",
    "start": "156239",
    "end": "157840"
  },
  {
    "text": "your original message should remain",
    "start": "157840",
    "end": "159360"
  },
  {
    "text": "basically unchanged however there are",
    "start": "159360",
    "end": "161440"
  },
  {
    "text": "some people who wanted to",
    "start": "161440",
    "end": "162640"
  },
  {
    "text": "have everything encapsulated inside the",
    "start": "162640",
    "end": "164239"
  },
  {
    "text": "body as for those particular cases we",
    "start": "164239",
    "end": "166239"
  },
  {
    "text": "actually define",
    "start": "166239",
    "end": "167200"
  },
  {
    "text": "some syntax for example here in this",
    "start": "167200",
    "end": "168879"
  },
  {
    "text": "json version where we actually put",
    "start": "168879",
    "end": "170720"
  },
  {
    "text": "everything into the body itself but you",
    "start": "170720",
    "end": "172080"
  },
  {
    "text": "can see it's the exact same data right",
    "start": "172080",
    "end": "173599"
  },
  {
    "text": "you got the same four pieces of metadata",
    "start": "173599",
    "end": "175519"
  },
  {
    "text": "the content type of the data attribute",
    "start": "175519",
    "end": "178000"
  },
  {
    "text": "when the data",
    "start": "178000",
    "end": "178720"
  },
  {
    "text": "can hold the business logic right all",
    "start": "178720",
    "end": "180800"
  },
  {
    "text": "the exact same information",
    "start": "180800",
    "end": "182239"
  },
  {
    "text": "now the content type of http header",
    "start": "182239",
    "end": "183920"
  },
  {
    "text": "level obviously tells you that this is",
    "start": "183920",
    "end": "185440"
  },
  {
    "text": "not just a normal json object",
    "start": "185440",
    "end": "186959"
  },
  {
    "text": "or json payload but it's a cloud event",
    "start": "186959",
    "end": "188879"
  },
  {
    "text": "json payload so that's how you can",
    "start": "188879",
    "end": "190239"
  },
  {
    "text": "distinguish between the left-hand side",
    "start": "190239",
    "end": "191920"
  },
  {
    "text": "which is just application json which is",
    "start": "191920",
    "end": "193680"
  },
  {
    "text": "binary",
    "start": "193680",
    "end": "194720"
  },
  {
    "text": "and the structure side on the right-hand",
    "start": "194720",
    "end": "196400"
  },
  {
    "text": "side which is application slash json",
    "start": "196400",
    "end": "198080"
  },
  {
    "text": "or slash cloud events station okay",
    "start": "198080",
    "end": "201680"
  },
  {
    "text": "so that's it at a very very high level",
    "start": "201680",
    "end": "203120"
  },
  {
    "text": "very simple thing we're getting lots of",
    "start": "203120",
    "end": "204480"
  },
  {
    "text": "kudos about it and lots of different",
    "start": "204480",
    "end": "205760"
  },
  {
    "text": "people are picking it up",
    "start": "205760",
    "end": "206959"
  },
  {
    "text": "across the industry um in terms of",
    "start": "206959",
    "end": "209680"
  },
  {
    "text": "deliverables",
    "start": "209680",
    "end": "210400"
  },
  {
    "text": "this is the big news we did go 1.0",
    "start": "210400",
    "end": "212640"
  },
  {
    "text": "fairly recently so yay for that",
    "start": "212640",
    "end": "214799"
  },
  {
    "text": "and in terms of what we're actually",
    "start": "214799",
    "end": "216080"
  },
  {
    "text": "producing we have different",
    "start": "216080",
    "end": "217519"
  },
  {
    "text": "specifications not just the spec itself",
    "start": "217519",
    "end": "219440"
  },
  {
    "text": "in terms of what the metadata is",
    "start": "219440",
    "end": "221280"
  },
  {
    "text": "but also how it appears in different",
    "start": "221280",
    "end": "223280"
  },
  {
    "text": "formats right http versus amqp that kind",
    "start": "223280",
    "end": "225360"
  },
  {
    "text": "of stuff",
    "start": "225360",
    "end": "226319"
  },
  {
    "text": "different encoding right i showed you",
    "start": "226319",
    "end": "228000"
  },
  {
    "text": "the json we also avro",
    "start": "228000",
    "end": "229680"
  },
  {
    "text": "and we also included a primer because",
    "start": "229680",
    "end": "231760"
  },
  {
    "text": "there are a lot of technical decisions",
    "start": "231760",
    "end": "233439"
  },
  {
    "text": "we made",
    "start": "233439",
    "end": "234159"
  },
  {
    "text": "which don't really uh go into a spec",
    "start": "234159",
    "end": "236480"
  },
  {
    "text": "itself",
    "start": "236480",
    "end": "237360"
  },
  {
    "text": "but um we wanted people understand why",
    "start": "237360",
    "end": "239200"
  },
  {
    "text": "we made the decisions we made so we",
    "start": "239200",
    "end": "240319"
  },
  {
    "text": "created a primer as a background for",
    "start": "240319",
    "end": "241760"
  },
  {
    "text": "people to understand",
    "start": "241760",
    "end": "242799"
  },
  {
    "text": "some of the decisions we made and some",
    "start": "242799",
    "end": "244319"
  },
  {
    "text": "of the design choices now we do have",
    "start": "244319",
    "end": "246080"
  },
  {
    "text": "some sdks out there with a whole bunch",
    "start": "246080",
    "end": "247599"
  },
  {
    "text": "of different languages which you can see",
    "start": "247599",
    "end": "248799"
  },
  {
    "text": "on the screen",
    "start": "248799",
    "end": "249840"
  },
  {
    "text": "most of them are very very active um in",
    "start": "249840",
    "end": "252400"
  },
  {
    "text": "particular",
    "start": "252400",
    "end": "252879"
  },
  {
    "text": "the go 1 and the c sharp and javascript",
    "start": "252879",
    "end": "254879"
  },
  {
    "text": "and java are very very active so please",
    "start": "254879",
    "end": "256479"
  },
  {
    "text": "take a look at those and get a chance",
    "start": "256479",
    "end": "258000"
  },
  {
    "text": "they're not that complicated they're",
    "start": "258000",
    "end": "259280"
  },
  {
    "text": "just mainly there helping you to",
    "start": "259280",
    "end": "260479"
  },
  {
    "text": "serialize and deserialize these cloud",
    "start": "260479",
    "end": "262000"
  },
  {
    "text": "events",
    "start": "262000",
    "end": "262720"
  },
  {
    "text": "okay so what's next for us obviously",
    "start": "262720",
    "end": "264800"
  },
  {
    "text": "more customer feedback now that it's out",
    "start": "264800",
    "end": "266240"
  },
  {
    "text": "there",
    "start": "266240",
    "end": "266560"
  },
  {
    "text": "people tend to wait until things go 1.0",
    "start": "266560",
    "end": "268639"
  },
  {
    "text": "before they adopt it",
    "start": "268639",
    "end": "269680"
  },
  {
    "text": "so we're hoping to get more feedback",
    "start": "269680",
    "end": "270880"
  },
  {
    "text": "from there and we have been getting",
    "start": "270880",
    "end": "272720"
  },
  {
    "text": "a lot of kudos so far as i said and",
    "start": "272720",
    "end": "275520"
  },
  {
    "text": "however beyond that though we're not",
    "start": "275520",
    "end": "277120"
  },
  {
    "text": "just you know sitting back and waiting",
    "start": "277120",
    "end": "278320"
  },
  {
    "text": "for that feedback we are",
    "start": "278320",
    "end": "279360"
  },
  {
    "text": "starting to look at what additional pain",
    "start": "279360",
    "end": "281360"
  },
  {
    "text": "points the community has",
    "start": "281360",
    "end": "282639"
  },
  {
    "text": "relative to the eventing space not just",
    "start": "282639",
    "end": "285520"
  },
  {
    "text": "for functions and servers and stuff like",
    "start": "285520",
    "end": "287360"
  },
  {
    "text": "that but in general what are the pain",
    "start": "287360",
    "end": "288880"
  },
  {
    "text": "points",
    "start": "288880",
    "end": "289360"
  },
  {
    "text": "people are experiencing okay and with",
    "start": "289360",
    "end": "291600"
  },
  {
    "text": "that let me then turn it over to",
    "start": "291600",
    "end": "292960"
  },
  {
    "text": "clements just going to talk about some",
    "start": "292960",
    "end": "294000"
  },
  {
    "text": "of these additional work items are doing",
    "start": "294000",
    "end": "295680"
  },
  {
    "text": "specifically aimed at addressing some of",
    "start": "295680",
    "end": "297120"
  },
  {
    "text": "those pain points",
    "start": "297120",
    "end": "298880"
  },
  {
    "text": "yes and for those we have two",
    "start": "298880",
    "end": "301919"
  },
  {
    "text": "areas discovery in the subscription apis",
    "start": "301919",
    "end": "304639"
  },
  {
    "text": "and the schema registry which i'm going",
    "start": "304639",
    "end": "306000"
  },
  {
    "text": "to discuss",
    "start": "306000",
    "end": "307440"
  },
  {
    "text": "both and um what's important to note is",
    "start": "307440",
    "end": "311600"
  },
  {
    "text": "that",
    "start": "311600",
    "end": "312000"
  },
  {
    "text": "we in cloud events we talk in the cloud",
    "start": "312000",
    "end": "314400"
  },
  {
    "text": "event core specification where we",
    "start": "314400",
    "end": "316720"
  },
  {
    "text": "um or set of specifications where we",
    "start": "316720",
    "end": "318400"
  },
  {
    "text": "have transport bindings",
    "start": "318400",
    "end": "320160"
  },
  {
    "text": "um and encodings we're really mostly",
    "start": "320160",
    "end": "322800"
  },
  {
    "text": "focusing on",
    "start": "322800",
    "end": "323680"
  },
  {
    "text": "on delivery of cloud events but that's",
    "start": "323680",
    "end": "326400"
  },
  {
    "text": "just the end of the story because before",
    "start": "326400",
    "end": "328400"
  },
  {
    "text": "you can deliver a cloud event you",
    "start": "328400",
    "end": "329919"
  },
  {
    "text": "obviously have to",
    "start": "329919",
    "end": "331360"
  },
  {
    "text": "um indicate um your interest in that",
    "start": "331360",
    "end": "334880"
  },
  {
    "text": "cloud event and then you also have to",
    "start": "334880",
    "end": "336639"
  },
  {
    "text": "find who's actually publishing that",
    "start": "336639",
    "end": "338320"
  },
  {
    "text": "cloud event and that's",
    "start": "338320",
    "end": "339680"
  },
  {
    "text": "the thing that we're tackling in this",
    "start": "339680",
    "end": "341680"
  },
  {
    "text": "next round of specifications that we're",
    "start": "341680",
    "end": "343280"
  },
  {
    "text": "working on",
    "start": "343280",
    "end": "344960"
  },
  {
    "text": "so the first element is how to",
    "start": "344960",
    "end": "348240"
  },
  {
    "text": "discover which cloud events are",
    "start": "348240",
    "end": "350800"
  },
  {
    "text": "available",
    "start": "350800",
    "end": "351759"
  },
  {
    "text": "for subscription today what you do",
    "start": "351759",
    "end": "355120"
  },
  {
    "text": "is you read read documentation um",
    "start": "355120",
    "end": "357919"
  },
  {
    "text": "typically",
    "start": "357919",
    "end": "358800"
  },
  {
    "text": "so you go on on the website",
    "start": "358800",
    "end": "360160"
  },
  {
    "text": "documentation website and you find a",
    "start": "360160",
    "end": "362000"
  },
  {
    "text": "list of",
    "start": "362000",
    "end": "363039"
  },
  {
    "text": "events that's being raised and for that",
    "start": "363039",
    "end": "365360"
  },
  {
    "text": "to be automatable we need to have a way",
    "start": "365360",
    "end": "367600"
  },
  {
    "text": "to",
    "start": "367600",
    "end": "368070"
  },
  {
    "text": "[Music]",
    "start": "368070",
    "end": "369680"
  },
  {
    "text": "learn about services um be able to",
    "start": "369680",
    "end": "373360"
  },
  {
    "text": "filter those services based on some",
    "start": "373360",
    "end": "375759"
  },
  {
    "text": "criteria",
    "start": "375759",
    "end": "376960"
  },
  {
    "text": "and then learn about which",
    "start": "376960",
    "end": "380240"
  },
  {
    "text": "services exposed with which events or",
    "start": "380240",
    "end": "383120"
  },
  {
    "text": "reversely",
    "start": "383120",
    "end": "384240"
  },
  {
    "text": "um allow a knowing about some events",
    "start": "384240",
    "end": "387680"
  },
  {
    "text": "that you can handle",
    "start": "387680",
    "end": "388479"
  },
  {
    "text": "and then learning which services in your",
    "start": "388479",
    "end": "390880"
  },
  {
    "text": "vicinity",
    "start": "390880",
    "end": "391919"
  },
  {
    "text": "um or you know some other criteria um",
    "start": "391919",
    "end": "394479"
  },
  {
    "text": "are supporting those events",
    "start": "394479",
    "end": "396560"
  },
  {
    "text": "so question is questions that we have is",
    "start": "396560",
    "end": "398880"
  },
  {
    "text": "who produces events",
    "start": "398880",
    "end": "400160"
  },
  {
    "text": "which represent events are produced uh",
    "start": "400160",
    "end": "402560"
  },
  {
    "text": "which subscription options are available",
    "start": "402560",
    "end": "404400"
  },
  {
    "text": "how do i",
    "start": "404400",
    "end": "405120"
  },
  {
    "text": "get the events delivered to to me and",
    "start": "405120",
    "end": "407680"
  },
  {
    "text": "then",
    "start": "407680",
    "end": "408319"
  },
  {
    "text": "where and how do i subscribe",
    "start": "408319",
    "end": "412319"
  },
  {
    "text": "next um so",
    "start": "412319",
    "end": "415360"
  },
  {
    "text": "what we've done here is we're not very",
    "start": "415360",
    "end": "418080"
  },
  {
    "text": "prescriptive and that's a",
    "start": "418080",
    "end": "419680"
  },
  {
    "text": "theme in cloud events overall as a",
    "start": "419680",
    "end": "421840"
  },
  {
    "text": "principle",
    "start": "421840",
    "end": "422720"
  },
  {
    "text": "that we're not prescriptive about how",
    "start": "422720",
    "end": "425199"
  },
  {
    "text": "you really how you should implement your",
    "start": "425199",
    "end": "426880"
  },
  {
    "text": "service",
    "start": "426880",
    "end": "427440"
  },
  {
    "text": "and there's no there may be some",
    "start": "427440",
    "end": "430000"
  },
  {
    "text": "reference implementations of these",
    "start": "430000",
    "end": "431360"
  },
  {
    "text": "things down the road but ultimately what",
    "start": "431360",
    "end": "432960"
  },
  {
    "text": "we're defining here are interfaces",
    "start": "432960",
    "end": "435039"
  },
  {
    "text": "so we are defining this abstractly a",
    "start": "435039",
    "end": "439120"
  },
  {
    "text": "data model that defines um for instance",
    "start": "439120",
    "end": "442240"
  },
  {
    "text": "here in this in this way what a",
    "start": "442240",
    "end": "444560"
  },
  {
    "text": "service is for discovery and also",
    "start": "444560",
    "end": "447440"
  },
  {
    "text": "defines",
    "start": "447440",
    "end": "448400"
  },
  {
    "text": "and that's of obviously leaning on the",
    "start": "448400",
    "end": "450240"
  },
  {
    "text": "core specification that we have",
    "start": "450240",
    "end": "451759"
  },
  {
    "text": "cloud events and that defines what a",
    "start": "451759",
    "end": "454400"
  },
  {
    "text": "type is",
    "start": "454400",
    "end": "455919"
  },
  {
    "text": "and then in based on this",
    "start": "455919",
    "end": "458960"
  },
  {
    "text": "we then define a http",
    "start": "458960",
    "end": "462160"
  },
  {
    "text": "and a grpc api that we have today in the",
    "start": "462160",
    "end": "465199"
  },
  {
    "text": "drafts",
    "start": "465199",
    "end": "466160"
  },
  {
    "text": "and we might have further protocols such",
    "start": "466160",
    "end": "469360"
  },
  {
    "text": "as amqp",
    "start": "469360",
    "end": "471280"
  },
  {
    "text": "later so we define an interface and when",
    "start": "471280",
    "end": "474000"
  },
  {
    "text": "you",
    "start": "474000",
    "end": "474319"
  },
  {
    "text": "implement that interface then you have a",
    "start": "474319",
    "end": "477039"
  },
  {
    "text": "discovery",
    "start": "477039",
    "end": "477759"
  },
  {
    "text": "service the the notion of service that's",
    "start": "477759",
    "end": "481280"
  },
  {
    "text": "the concept inside of the discovery",
    "start": "481280",
    "end": "482960"
  },
  {
    "text": "service",
    "start": "482960",
    "end": "484319"
  },
  {
    "text": "is very simple it's just some software",
    "start": "484319",
    "end": "486080"
  },
  {
    "text": "entity that emits events",
    "start": "486080",
    "end": "487599"
  },
  {
    "text": "so that gets registered in the discovery",
    "start": "487599",
    "end": "489759"
  },
  {
    "text": "service",
    "start": "489759",
    "end": "491440"
  },
  {
    "text": "that service since it emits events uh",
    "start": "491440",
    "end": "494639"
  },
  {
    "text": "maintains a subscription endpoint and",
    "start": "494639",
    "end": "496240"
  },
  {
    "text": "really what the service description here",
    "start": "496240",
    "end": "497840"
  },
  {
    "text": "does",
    "start": "497840",
    "end": "498479"
  },
  {
    "text": "it just enumerates the types of events",
    "start": "498479",
    "end": "500960"
  },
  {
    "text": "um that are available for subscription",
    "start": "500960",
    "end": "503039"
  },
  {
    "text": "with um some further information and",
    "start": "503039",
    "end": "506000"
  },
  {
    "text": "then",
    "start": "506000",
    "end": "506479"
  },
  {
    "text": "we have a type collection type",
    "start": "506479",
    "end": "508000"
  },
  {
    "text": "collections really for the reverse",
    "start": "508000",
    "end": "510080"
  },
  {
    "text": "lookup",
    "start": "510080",
    "end": "510800"
  },
  {
    "text": "of which services um are available and",
    "start": "510800",
    "end": "513839"
  },
  {
    "text": "um this is an interface that can be",
    "start": "513839",
    "end": "516000"
  },
  {
    "text": "implemented in one place or can be",
    "start": "516000",
    "end": "518000"
  },
  {
    "text": "implemented in multiple places",
    "start": "518000",
    "end": "520320"
  },
  {
    "text": "and it's obviously also allowed to",
    "start": "520320",
    "end": "522159"
  },
  {
    "text": "federate those discovery services so you",
    "start": "522159",
    "end": "524080"
  },
  {
    "text": "can really create a",
    "start": "524080",
    "end": "525760"
  },
  {
    "text": "um a catalog of services and you can",
    "start": "525760",
    "end": "528640"
  },
  {
    "text": "make those",
    "start": "528640",
    "end": "529279"
  },
  {
    "text": "that catalog available everywhere with",
    "start": "529279",
    "end": "531120"
  },
  {
    "text": "the same interface you can imagine",
    "start": "531120",
    "end": "532880"
  },
  {
    "text": "having a local cache that exists",
    "start": "532880",
    "end": "536720"
  },
  {
    "text": "somewhere near your consumers and makes",
    "start": "536720",
    "end": "539519"
  },
  {
    "text": "those available and of course",
    "start": "539519",
    "end": "541360"
  },
  {
    "text": "the discovery mechanism will also allow",
    "start": "541360",
    "end": "544560"
  },
  {
    "text": "the the catalog to be adjusted to",
    "start": "544560",
    "end": "547600"
  },
  {
    "text": "the circumstances that you have you know",
    "start": "547600",
    "end": "550160"
  },
  {
    "text": "near your endpoint so if",
    "start": "550160",
    "end": "551839"
  },
  {
    "text": "it's required to subscribe via a",
    "start": "551839",
    "end": "554720"
  },
  {
    "text": "different subscription manager we're",
    "start": "554720",
    "end": "556320"
  },
  {
    "text": "going to get to that in a second",
    "start": "556320",
    "end": "557839"
  },
  {
    "text": "um to be able to deliver those",
    "start": "557839",
    "end": "561120"
  },
  {
    "text": "events into your um into your respective",
    "start": "561120",
    "end": "564320"
  },
  {
    "text": "endpoint that you have",
    "start": "564320",
    "end": "565760"
  },
  {
    "text": "and then that sort of translation can",
    "start": "565760",
    "end": "568720"
  },
  {
    "text": "also be done",
    "start": "568720",
    "end": "569680"
  },
  {
    "text": "um in that discovery model it's not",
    "start": "569680",
    "end": "571279"
  },
  {
    "text": "expressed it's not it's not expressed",
    "start": "571279",
    "end": "574000"
  },
  {
    "text": "explicitly because the interface is kept",
    "start": "574000",
    "end": "576160"
  },
  {
    "text": "very simple",
    "start": "576160",
    "end": "577839"
  },
  {
    "text": "but the flexibility is there to allow",
    "start": "577839",
    "end": "580399"
  },
  {
    "text": "this",
    "start": "580399",
    "end": "581760"
  },
  {
    "text": "next um once you have discovered which",
    "start": "581760",
    "end": "584800"
  },
  {
    "text": "events are available",
    "start": "584800",
    "end": "587040"
  },
  {
    "text": "then you want to be able to subscribe to",
    "start": "587040",
    "end": "589920"
  },
  {
    "text": "them and again today",
    "start": "589920",
    "end": "591440"
  },
  {
    "text": "in cloud events in the base car event",
    "start": "591440",
    "end": "593200"
  },
  {
    "text": "spec it's something that we've made",
    "start": "593200",
    "end": "595519"
  },
  {
    "text": "a matter of um of out of bands",
    "start": "595519",
    "end": "600079"
  },
  {
    "text": "agreements some protocols um for",
    "start": "600480",
    "end": "603680"
  },
  {
    "text": "instance",
    "start": "603680",
    "end": "604000"
  },
  {
    "text": "amqp or mqtt",
    "start": "604000",
    "end": "607360"
  },
  {
    "text": "or kafka",
    "start": "607360",
    "end": "610880"
  },
  {
    "text": "already have built-in facilities to",
    "start": "610880",
    "end": "613360"
  },
  {
    "text": "subscribe so if you are designating a",
    "start": "613360",
    "end": "615839"
  },
  {
    "text": "subscription manager that is a um",
    "start": "615839",
    "end": "619200"
  },
  {
    "text": "a queue or sorry or a topic inside of an",
    "start": "619200",
    "end": "622240"
  },
  {
    "text": "event a message broker then it's implied",
    "start": "622240",
    "end": "625120"
  },
  {
    "text": "effectively what that subscription",
    "start": "625120",
    "end": "627360"
  },
  {
    "text": "protocol is if you're using mqp for",
    "start": "627360",
    "end": "630079"
  },
  {
    "text": "instance",
    "start": "630079",
    "end": "631200"
  },
  {
    "text": "but for other for http for instance http",
    "start": "631200",
    "end": "634160"
  },
  {
    "text": "doesn't have a",
    "start": "634160",
    "end": "635120"
  },
  {
    "text": "built-in subscription notion so",
    "start": "635120",
    "end": "638399"
  },
  {
    "text": "and even though those subscription",
    "start": "638399",
    "end": "640560"
  },
  {
    "text": "services are fairly common or these",
    "start": "640560",
    "end": "642480"
  },
  {
    "text": "construction patterns are fairly common",
    "start": "642480",
    "end": "644320"
  },
  {
    "text": "with",
    "start": "644320",
    "end": "644800"
  },
  {
    "text": "with web hooks um it's something that we",
    "start": "644800",
    "end": "647839"
  },
  {
    "text": "have not",
    "start": "647839",
    "end": "648399"
  },
  {
    "text": "seen uh being sufficiently standardized",
    "start": "648399",
    "end": "651760"
  },
  {
    "text": "so we have to find a way to go and",
    "start": "651760",
    "end": "655519"
  },
  {
    "text": "create a specification that acknowledges",
    "start": "655519",
    "end": "657680"
  },
  {
    "text": "the existence of",
    "start": "657680",
    "end": "659279"
  },
  {
    "text": "these existing protocols like mqp and",
    "start": "659279",
    "end": "663120"
  },
  {
    "text": "mqtt which have built-in subscription",
    "start": "663120",
    "end": "665040"
  },
  {
    "text": "notions",
    "start": "665040",
    "end": "666000"
  },
  {
    "text": "and then at the same time add a ability",
    "start": "666000",
    "end": "668800"
  },
  {
    "text": "for",
    "start": "668800",
    "end": "669680"
  },
  {
    "text": "protocols that don't have that like http",
    "start": "669680",
    "end": "672320"
  },
  {
    "text": "to also",
    "start": "672320",
    "end": "673200"
  },
  {
    "text": "allow you to do a subscription gesture",
    "start": "673200",
    "end": "675200"
  },
  {
    "text": "that's why we wrote the subscription api",
    "start": "675200",
    "end": "677279"
  },
  {
    "text": "the subscription api",
    "start": "677279",
    "end": "678640"
  },
  {
    "text": "specification acknowledges those or",
    "start": "678640",
    "end": "681519"
  },
  {
    "text": "enumerates the",
    "start": "681519",
    "end": "682640"
  },
  {
    "text": "subscription facilities that exist in",
    "start": "682640",
    "end": "685040"
  },
  {
    "text": "those other protocols",
    "start": "685040",
    "end": "687360"
  },
  {
    "text": "supported by cloud events and then",
    "start": "687360",
    "end": "690399"
  },
  {
    "text": "explicitly introduces an api which",
    "start": "690399",
    "end": "693440"
  },
  {
    "text": "can then be implemented using http or",
    "start": "693440",
    "end": "695680"
  },
  {
    "text": "can be implemented using grpc or",
    "start": "695680",
    "end": "697839"
  },
  {
    "text": "implemented any other",
    "start": "697839",
    "end": "699279"
  },
  {
    "text": "protocol that specifically needs this to",
    "start": "699279",
    "end": "702000"
  },
  {
    "text": "go",
    "start": "702000",
    "end": "702320"
  },
  {
    "text": "and effectively manage subscriptions",
    "start": "702320",
    "end": "705440"
  },
  {
    "text": "and for that we've introduced the notion",
    "start": "705440",
    "end": "707680"
  },
  {
    "text": "of a subscription manager",
    "start": "707680",
    "end": "709440"
  },
  {
    "text": "next so the subscription manager",
    "start": "709440",
    "end": "714079"
  },
  {
    "text": "is the one that implements the",
    "start": "714079",
    "end": "715440"
  },
  {
    "text": "subscription api and the subscription",
    "start": "715440",
    "end": "717120"
  },
  {
    "text": "manager might act",
    "start": "717120",
    "end": "718399"
  },
  {
    "text": "on behalf of itself so it may really be",
    "start": "718399",
    "end": "722000"
  },
  {
    "text": "the",
    "start": "722000",
    "end": "722880"
  },
  {
    "text": "the entity that emits those events but",
    "start": "722880",
    "end": "724800"
  },
  {
    "text": "it also made may act on behalf of",
    "start": "724800",
    "end": "727040"
  },
  {
    "text": "others and so you have that very often",
    "start": "727040",
    "end": "729440"
  },
  {
    "text": "in",
    "start": "729440",
    "end": "730320"
  },
  {
    "text": "larger setups where you are you have",
    "start": "730320",
    "end": "732959"
  },
  {
    "text": "very very many producers",
    "start": "732959",
    "end": "734639"
  },
  {
    "text": "and those many producers produce events",
    "start": "734639",
    "end": "736800"
  },
  {
    "text": "into a",
    "start": "736800",
    "end": "737920"
  },
  {
    "text": "middleware of sorts and then if you are",
    "start": "737920",
    "end": "740000"
  },
  {
    "text": "interested in",
    "start": "740000",
    "end": "741680"
  },
  {
    "text": "events from a particular publisher or a",
    "start": "741680",
    "end": "744000"
  },
  {
    "text": "group of publishers then you are",
    "start": "744000",
    "end": "745680"
  },
  {
    "text": "subscribing um on that middleware on",
    "start": "745680",
    "end": "748720"
  },
  {
    "text": "behalf of those producers so",
    "start": "748720",
    "end": "750800"
  },
  {
    "text": "one of the obvious examples here is",
    "start": "750800",
    "end": "753040"
  },
  {
    "text": "versus iot",
    "start": "753040",
    "end": "754320"
  },
  {
    "text": "where you have sometimes thousands and",
    "start": "754320",
    "end": "757120"
  },
  {
    "text": "or hundreds of thousands of devices",
    "start": "757120",
    "end": "758959"
  },
  {
    "text": "switching into a cloud endpoint and if",
    "start": "758959",
    "end": "761519"
  },
  {
    "text": "you're interested in",
    "start": "761519",
    "end": "762639"
  },
  {
    "text": "specific events um emitted by those",
    "start": "762639",
    "end": "766160"
  },
  {
    "text": "devices you would not subscribe to every",
    "start": "766160",
    "end": "767920"
  },
  {
    "text": "single device but you really would go",
    "start": "767920",
    "end": "769600"
  },
  {
    "text": "and go to the subscription manager",
    "start": "769600",
    "end": "771360"
  },
  {
    "text": "which has the pool of events to go and",
    "start": "771360",
    "end": "773440"
  },
  {
    "text": "pull out the events that you need",
    "start": "773440",
    "end": "776240"
  },
  {
    "text": "for those subscription for the",
    "start": "776240",
    "end": "777760"
  },
  {
    "text": "subscription manager",
    "start": "777760",
    "end": "779440"
  },
  {
    "text": "as said we're enumerating the existing",
    "start": "779440",
    "end": "781600"
  },
  {
    "text": "mechanisms of",
    "start": "781600",
    "end": "782560"
  },
  {
    "text": "existing protocols that we have defined",
    "start": "782560",
    "end": "784480"
  },
  {
    "text": "this http api",
    "start": "784480",
    "end": "786240"
  },
  {
    "text": "to help with the cases where more",
    "start": "786240",
    "end": "789360"
  },
  {
    "text": "api and api abstraction to help with the",
    "start": "789360",
    "end": "792079"
  },
  {
    "text": "cases where",
    "start": "792079",
    "end": "793279"
  },
  {
    "text": "that is not available we also have two",
    "start": "793279",
    "end": "796320"
  },
  {
    "text": "delivery styles and that is the push",
    "start": "796320",
    "end": "799680"
  },
  {
    "text": "delivery",
    "start": "799680",
    "end": "800399"
  },
  {
    "text": "and the pull delivery so we're we're",
    "start": "800399",
    "end": "802480"
  },
  {
    "text": "just distinguishing between those two",
    "start": "802480",
    "end": "805120"
  },
  {
    "text": "where typically for cloud events as",
    "start": "805120",
    "end": "807920"
  },
  {
    "text": "we've defined it",
    "start": "807920",
    "end": "809200"
  },
  {
    "text": "uh today most mostly the delivery is",
    "start": "809200",
    "end": "812399"
  },
  {
    "text": "assumed to be push",
    "start": "812399",
    "end": "813519"
  },
  {
    "text": "which means the producer or the",
    "start": "813519",
    "end": "816720"
  },
  {
    "text": "subscription manager acting on its",
    "start": "816720",
    "end": "818399"
  },
  {
    "text": "behalf pushes those events by",
    "start": "818399",
    "end": "820560"
  },
  {
    "text": "establishing connection",
    "start": "820560",
    "end": "822000"
  },
  {
    "text": "and sending the event along or",
    "start": "822000",
    "end": "826000"
  },
  {
    "text": "this can also now the definition here",
    "start": "826000",
    "end": "828720"
  },
  {
    "text": "allows for pull delivery style where you",
    "start": "828720",
    "end": "830560"
  },
  {
    "text": "are",
    "start": "830560",
    "end": "831199"
  },
  {
    "text": "effectively having the subscription",
    "start": "831199",
    "end": "833120"
  },
  {
    "text": "manager uh maintaining",
    "start": "833120",
    "end": "835279"
  },
  {
    "text": "a queue for instance on behalf of the",
    "start": "835279",
    "end": "838160"
  },
  {
    "text": "producer so both of those things are",
    "start": "838160",
    "end": "839760"
  },
  {
    "text": "possible",
    "start": "839760",
    "end": "841600"
  },
  {
    "text": "uh next um so those were effectively",
    "start": "841600",
    "end": "844320"
  },
  {
    "text": "complementing the",
    "start": "844320",
    "end": "845360"
  },
  {
    "text": "the the mechanisms that we have today in",
    "start": "845360",
    "end": "848000"
  },
  {
    "text": "uh cloud events by",
    "start": "848000",
    "end": "849360"
  },
  {
    "text": "you know closing the loop we have",
    "start": "849360",
    "end": "851120"
  },
  {
    "text": "delivery something that's defined now",
    "start": "851120",
    "end": "853279"
  },
  {
    "text": "and now we have discovery and",
    "start": "853279",
    "end": "854399"
  },
  {
    "text": "subscription that we're adding to it",
    "start": "854399",
    "end": "857120"
  },
  {
    "text": "a really important further element is",
    "start": "857120",
    "end": "858880"
  },
  {
    "text": "schema registry next",
    "start": "858880",
    "end": "862240"
  },
  {
    "text": "every cloud event can carry a payload",
    "start": "863839",
    "end": "866399"
  },
  {
    "text": "with event details mostly you form our",
    "start": "866399",
    "end": "868320"
  },
  {
    "text": "structured data",
    "start": "868320",
    "end": "870320"
  },
  {
    "text": "structured data if you're sending it or",
    "start": "870320",
    "end": "872800"
  },
  {
    "text": "sending it",
    "start": "872800",
    "end": "873839"
  },
  {
    "text": "to another party will require often for",
    "start": "873839",
    "end": "876880"
  },
  {
    "text": "that",
    "start": "876880",
    "end": "877279"
  },
  {
    "text": "other party to be able to validate",
    "start": "877279",
    "end": "879040"
  },
  {
    "text": "whether that structured data is correct",
    "start": "879040",
    "end": "881760"
  },
  {
    "text": "based on some syntactic rules that can",
    "start": "881760",
    "end": "885040"
  },
  {
    "text": "be expressed in",
    "start": "885040",
    "end": "886720"
  },
  {
    "text": "a schema and then there's",
    "start": "886720",
    "end": "889760"
  },
  {
    "text": "often also a need for serialization",
    "start": "889760",
    "end": "891920"
  },
  {
    "text": "where you want to have",
    "start": "891920",
    "end": "892959"
  },
  {
    "text": "an in-memory data structure to be",
    "start": "892959",
    "end": "894639"
  },
  {
    "text": "serialized out",
    "start": "894639",
    "end": "896000"
  },
  {
    "text": "using an efficient um format",
    "start": "896000",
    "end": "899519"
  },
  {
    "text": "and those efficient formats often leave",
    "start": "899519",
    "end": "901920"
  },
  {
    "text": "the structural metadata out",
    "start": "901920",
    "end": "904079"
  },
  {
    "text": "like you're familiar with with what json",
    "start": "904079",
    "end": "906480"
  },
  {
    "text": "looks like json is very repetitive",
    "start": "906480",
    "end": "908880"
  },
  {
    "text": "and puts all the metadata elements and",
    "start": "908880",
    "end": "910639"
  },
  {
    "text": "the type information kind of",
    "start": "910639",
    "end": "912320"
  },
  {
    "text": "into the document itself and there's a",
    "start": "912320",
    "end": "914560"
  },
  {
    "text": "number of",
    "start": "914560",
    "end": "915519"
  },
  {
    "text": "far more efficient serialization formats",
    "start": "915519",
    "end": "918160"
  },
  {
    "text": "which don't do that and they keep",
    "start": "918160",
    "end": "919920"
  },
  {
    "text": "that information outside in in schema",
    "start": "919920",
    "end": "922240"
  },
  {
    "text": "documents but then once you use that",
    "start": "922240",
    "end": "924240"
  },
  {
    "text": "the question is where do you put those",
    "start": "924240",
    "end": "926160"
  },
  {
    "text": "documents so the goal",
    "start": "926160",
    "end": "928160"
  },
  {
    "text": "of the schema registry is to allow you",
    "start": "928160",
    "end": "930560"
  },
  {
    "text": "to store these documents and access",
    "start": "930560",
    "end": "932480"
  },
  {
    "text": "access those documents in a consistent",
    "start": "932480",
    "end": "934399"
  },
  {
    "text": "way so that you can go and pro",
    "start": "934399",
    "end": "936320"
  },
  {
    "text": "and build software elements a serializer",
    "start": "936320",
    "end": "940079"
  },
  {
    "text": "and a validator",
    "start": "940079",
    "end": "941360"
  },
  {
    "text": "that can then lean on those schemas and",
    "start": "941360",
    "end": "943279"
  },
  {
    "text": "on hints that come",
    "start": "943279",
    "end": "944480"
  },
  {
    "text": "with the event and then can go and",
    "start": "944480",
    "end": "948000"
  },
  {
    "text": "deserialize that structured data or",
    "start": "948000",
    "end": "949519"
  },
  {
    "text": "serialize that structure data",
    "start": "949519",
    "end": "951120"
  },
  {
    "text": "and the goal is for that to be project",
    "start": "951120",
    "end": "954399"
  },
  {
    "text": "neutral",
    "start": "954399",
    "end": "955040"
  },
  {
    "text": "and vendor neutral so that that works",
    "start": "955040",
    "end": "957519"
  },
  {
    "text": "for",
    "start": "957519",
    "end": "958480"
  },
  {
    "text": "cloud events but that also works for",
    "start": "958480",
    "end": "961120"
  },
  {
    "text": "other messaging and inventing",
    "start": "961120",
    "end": "962320"
  },
  {
    "text": "infrastructures because",
    "start": "962320",
    "end": "963519"
  },
  {
    "text": "we often see that things get boring as",
    "start": "963519",
    "end": "966320"
  },
  {
    "text": "cloud events but then get forwarded",
    "start": "966320",
    "end": "968079"
  },
  {
    "text": "through other messaging infrastructures",
    "start": "968079",
    "end": "969759"
  },
  {
    "text": "as well",
    "start": "969759",
    "end": "970480"
  },
  {
    "text": "and so we don't want to constrain this",
    "start": "970480",
    "end": "972079"
  },
  {
    "text": "to the case of cloud events and cloud",
    "start": "972079",
    "end": "973680"
  },
  {
    "text": "events also",
    "start": "973680",
    "end": "974959"
  },
  {
    "text": "is um just using in",
    "start": "974959",
    "end": "978240"
  },
  {
    "text": "in the binary format is just using a",
    "start": "978240",
    "end": "981120"
  },
  {
    "text": "message payload",
    "start": "981120",
    "end": "982000"
  },
  {
    "text": "like any other message or eventing use",
    "start": "982000",
    "end": "984560"
  },
  {
    "text": "case would",
    "start": "984560",
    "end": "985440"
  },
  {
    "text": "so it would it doesn't simply doesn't",
    "start": "985440",
    "end": "987040"
  },
  {
    "text": "make sense to constrain the registry",
    "start": "987040",
    "end": "989360"
  },
  {
    "text": "just to cloud events uh use cases",
    "start": "989360",
    "end": "992480"
  },
  {
    "text": "next so that's one of the principles",
    "start": "992480",
    "end": "994560"
  },
  {
    "text": "that we have is",
    "start": "994560",
    "end": "995920"
  },
  {
    "text": "at the bottom what i just said that it",
    "start": "995920",
    "end": "997600"
  },
  {
    "text": "should be scenario neutral",
    "start": "997600",
    "end": "999360"
  },
  {
    "text": "it should also be protocol neutral so",
    "start": "999360",
    "end": "1001519"
  },
  {
    "text": "the registry data model is abstractly",
    "start": "1001519",
    "end": "1003600"
  },
  {
    "text": "defined and",
    "start": "1003600",
    "end": "1004399"
  },
  {
    "text": "the http binding that we have so setting",
    "start": "1004399",
    "end": "1007920"
  },
  {
    "text": "and receiving message schemas",
    "start": "1007920",
    "end": "1011199"
  },
  {
    "text": "via http that's well defined right now",
    "start": "1011199",
    "end": "1013440"
  },
  {
    "text": "with an open api document",
    "start": "1013440",
    "end": "1015360"
  },
  {
    "text": "but the the registry per se the the data",
    "start": "1015360",
    "end": "1018399"
  },
  {
    "text": "model is abstract",
    "start": "1018399",
    "end": "1019680"
  },
  {
    "text": "find and we allow it allows protocol",
    "start": "1019680",
    "end": "1023120"
  },
  {
    "text": "bindings and",
    "start": "1023120",
    "end": "1024000"
  },
  {
    "text": "we certainly anticipate to have an amqp",
    "start": "1024000",
    "end": "1025839"
  },
  {
    "text": "binding for this and",
    "start": "1025839",
    "end": "1028000"
  },
  {
    "text": "hopefully more bindings that somewhat",
    "start": "1028000",
    "end": "1030640"
  },
  {
    "text": "depends because it's a request",
    "start": "1030640",
    "end": "1032240"
  },
  {
    "text": "response model and request depends on",
    "start": "1032240",
    "end": "1035038"
  },
  {
    "text": "the capabilities of the respective",
    "start": "1035039",
    "end": "1036558"
  },
  {
    "text": "protocols but grpc is also certainly in",
    "start": "1036559",
    "end": "1038558"
  },
  {
    "text": "the cards",
    "start": "1038559",
    "end": "1040079"
  },
  {
    "text": "um and of course we want to keep this as",
    "start": "1040079",
    "end": "1041839"
  },
  {
    "text": "simple as possible we don't want to turn",
    "start": "1041839",
    "end": "1043520"
  },
  {
    "text": "this into",
    "start": "1043520",
    "end": "1044480"
  },
  {
    "text": "a massive metadata store with um",
    "start": "1044480",
    "end": "1048799"
  },
  {
    "text": "super powerful capabilities so there's",
    "start": "1048799",
    "end": "1050880"
  },
  {
    "text": "no um",
    "start": "1050880",
    "end": "1052320"
  },
  {
    "text": "goal here to rival the capabilities of",
    "start": "1052320",
    "end": "1054880"
  },
  {
    "text": "apache atlas or something like this",
    "start": "1054880",
    "end": "1057039"
  },
  {
    "text": "but really is like you should be able to",
    "start": "1057039",
    "end": "1059520"
  },
  {
    "text": "implement this",
    "start": "1059520",
    "end": "1060480"
  },
  {
    "text": "registry api over a plain file system or",
    "start": "1060480",
    "end": "1063280"
  },
  {
    "text": "a cloud blob store",
    "start": "1063280",
    "end": "1064799"
  },
  {
    "text": "and it's just there to store",
    "start": "1064799",
    "end": "1068400"
  },
  {
    "text": "those store those schemas and manage",
    "start": "1068400",
    "end": "1071200"
  },
  {
    "text": "those schemas in the simplest possible",
    "start": "1071200",
    "end": "1072720"
  },
  {
    "text": "way while",
    "start": "1072720",
    "end": "1073600"
  },
  {
    "text": "while providing the core capabilities we",
    "start": "1073600",
    "end": "1076000"
  },
  {
    "text": "need next",
    "start": "1076000",
    "end": "1078240"
  },
  {
    "text": "so this complements the event delivery",
    "start": "1078240",
    "end": "1080080"
  },
  {
    "text": "model that i just talked about",
    "start": "1080080",
    "end": "1082799"
  },
  {
    "text": "um by allowing you the producers",
    "start": "1082799",
    "end": "1085919"
  },
  {
    "text": "to manage and validate or someone on",
    "start": "1085919",
    "end": "1088480"
  },
  {
    "text": "behalf of the producers to manage the",
    "start": "1088480",
    "end": "1089840"
  },
  {
    "text": "value of the schemas",
    "start": "1089840",
    "end": "1092160"
  },
  {
    "text": "and then really think about the data",
    "start": "1092160",
    "end": "1094720"
  },
  {
    "text": "field in the cloud event and how",
    "start": "1094720",
    "end": "1096559"
  },
  {
    "text": "that can be serialized and deserialized",
    "start": "1096559",
    "end": "1098640"
  },
  {
    "text": "and that model here what's in the green",
    "start": "1098640",
    "end": "1101039"
  },
  {
    "text": "um works for cloud events um as we have",
    "start": "1101039",
    "end": "1104080"
  },
  {
    "text": "defined it but also works for",
    "start": "1104080",
    "end": "1106160"
  },
  {
    "text": "um other uh eventing scenarios",
    "start": "1106160",
    "end": "1109440"
  },
  {
    "text": "as well so this is kind of you for you",
    "start": "1109440",
    "end": "1111760"
  },
  {
    "text": "to to get visualize what this is about",
    "start": "1111760",
    "end": "1114160"
  },
  {
    "text": "it's really for serialization",
    "start": "1114160",
    "end": "1115440"
  },
  {
    "text": "deserializing or validation",
    "start": "1115440",
    "end": "1117280"
  },
  {
    "text": "on either side and it really pertains to",
    "start": "1117280",
    "end": "1119120"
  },
  {
    "text": "the data element",
    "start": "1119120",
    "end": "1120320"
  },
  {
    "text": "that sits inside of the cloud event next",
    "start": "1120320",
    "end": "1124960"
  },
  {
    "text": "um finally the structure of the schemes",
    "start": "1125120",
    "end": "1127600"
  },
  {
    "text": "of this schema registry",
    "start": "1127600",
    "end": "1129440"
  },
  {
    "text": "we've structured this such that there is",
    "start": "1129440",
    "end": "1130960"
  },
  {
    "text": "a notion of groups",
    "start": "1130960",
    "end": "1133120"
  },
  {
    "text": "the group they can group so a schema",
    "start": "1133120",
    "end": "1135600"
  },
  {
    "text": "registry is split up into groups those",
    "start": "1135600",
    "end": "1137600"
  },
  {
    "text": "groups can be",
    "start": "1137600",
    "end": "1138720"
  },
  {
    "text": "by application or by some other criteria",
    "start": "1138720",
    "end": "1141919"
  },
  {
    "text": "they're really also there as an anchor",
    "start": "1141919",
    "end": "1143919"
  },
  {
    "text": "for access control so you may want to go",
    "start": "1143919",
    "end": "1145919"
  },
  {
    "text": "and",
    "start": "1145919",
    "end": "1146480"
  },
  {
    "text": "limit access to schemas by groups",
    "start": "1146480",
    "end": "1149280"
  },
  {
    "text": "because they may carry",
    "start": "1149280",
    "end": "1151200"
  },
  {
    "text": "important secrets so you don't want to",
    "start": "1151200",
    "end": "1153360"
  },
  {
    "text": "you know make them accessible to",
    "start": "1153360",
    "end": "1154559"
  },
  {
    "text": "everybody",
    "start": "1154559",
    "end": "1155440"
  },
  {
    "text": "then within that you have schemas which",
    "start": "1155440",
    "end": "1157200"
  },
  {
    "text": "really are containers for",
    "start": "1157200",
    "end": "1159280"
  },
  {
    "text": "sets of schema documents that represent",
    "start": "1159280",
    "end": "1161039"
  },
  {
    "text": "the same data structures",
    "start": "1161039",
    "end": "1162720"
  },
  {
    "text": "and then of course those those schemas",
    "start": "1162720",
    "end": "1165600"
  },
  {
    "text": "evolve and so the documents are really",
    "start": "1165600",
    "end": "1168400"
  },
  {
    "text": "the leaves of this we have various",
    "start": "1168400",
    "end": "1171039"
  },
  {
    "text": "schema versions starting with",
    "start": "1171039",
    "end": "1172559"
  },
  {
    "text": "schema version one um where if you're",
    "start": "1172559",
    "end": "1175280"
  },
  {
    "text": "adding fields or if you're making feels",
    "start": "1175280",
    "end": "1177679"
  },
  {
    "text": "obsolete but you don't remove them then",
    "start": "1177679",
    "end": "1180080"
  },
  {
    "text": "you're still within the same bad words",
    "start": "1180080",
    "end": "1181919"
  },
  {
    "text": "compatible schema",
    "start": "1181919",
    "end": "1183840"
  },
  {
    "text": "of generate generations line of",
    "start": "1183840",
    "end": "1186720"
  },
  {
    "text": "generations",
    "start": "1186720",
    "end": "1187600"
  },
  {
    "text": "and that's why you simply add schema",
    "start": "1187600",
    "end": "1189280"
  },
  {
    "text": "versions we have some rules for how to",
    "start": "1189280",
    "end": "1191200"
  },
  {
    "text": "add",
    "start": "1191200",
    "end": "1191760"
  },
  {
    "text": "and manage those",
    "start": "1191760",
    "end": "1194799"
  },
  {
    "text": "schemas so it's a very simple structure",
    "start": "1194799",
    "end": "1197280"
  },
  {
    "text": "to manage effectively schema documents",
    "start": "1197280",
    "end": "1199760"
  },
  {
    "text": "next",
    "start": "1199760",
    "end": "1202080"
  },
  {
    "text": "and that's where we are we will",
    "start": "1202799",
    "end": "1206320"
  },
  {
    "text": "take some live questions um in",
    "start": "1206320",
    "end": "1209760"
  },
  {
    "text": "at the end of this presentation",
    "start": "1209760",
    "end": "1211200"
  },
  {
    "text": "following now um if you want to learn",
    "start": "1211200",
    "end": "1213679"
  },
  {
    "text": "more about cloud events go to cloud",
    "start": "1213679",
    "end": "1215120"
  },
  {
    "text": "events io",
    "start": "1215120",
    "end": "1216799"
  },
  {
    "text": "our specification repository is on",
    "start": "1216799",
    "end": "1219520"
  },
  {
    "text": "github",
    "start": "1219520",
    "end": "1220000"
  },
  {
    "text": "on cloudevent spec that's where you also",
    "start": "1220000",
    "end": "1222080"
  },
  {
    "text": "will find the latest versions of all of",
    "start": "1222080",
    "end": "1223679"
  },
  {
    "text": "those things and we also have",
    "start": "1223679",
    "end": "1224880"
  },
  {
    "text": "weekly calls thursdays at 12 p.m",
    "start": "1224880",
    "end": "1228480"
  },
  {
    "text": "eastern time us or 1800",
    "start": "1228480",
    "end": "1231840"
  },
  {
    "text": "central european time and in the repo is",
    "start": "1231840",
    "end": "1235120"
  },
  {
    "text": "also",
    "start": "1235120",
    "end": "1235840"
  },
  {
    "text": "the dial in information and then",
    "start": "1235840",
    "end": "1239360"
  },
  {
    "text": "you can also follow doug and myself on",
    "start": "1239360",
    "end": "1241679"
  },
  {
    "text": "twitter or send us email if you have any",
    "start": "1241679",
    "end": "1243600"
  },
  {
    "text": "further questions",
    "start": "1243600",
    "end": "1246240"
  },
  {
    "text": "all right cool thank you comments all",
    "start": "1246559",
    "end": "1248320"
  },
  {
    "text": "right thank you everybody we'll stop",
    "start": "1248320",
    "end": "1249280"
  },
  {
    "text": "recording here and take questions uh",
    "start": "1249280",
    "end": "1250960"
  },
  {
    "text": "live thank you all",
    "start": "1250960",
    "end": "1255039"
  }
]