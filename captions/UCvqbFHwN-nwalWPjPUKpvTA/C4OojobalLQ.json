[
  {
    "text": "hello everyone my name is wilson well",
    "start": "960",
    "end": "4000"
  },
  {
    "text": "and i'm from biodance infrastructure",
    "start": "4000",
    "end": "5920"
  },
  {
    "text": "computing team",
    "start": "5920",
    "end": "7120"
  },
  {
    "text": "today i'm going to present the",
    "start": "7120",
    "end": "9760"
  },
  {
    "text": "performance improvements",
    "start": "9760",
    "end": "11120"
  },
  {
    "text": "in sd 3.5 release",
    "start": "11120",
    "end": "15360"
  },
  {
    "text": "as we know uh activity 3.5",
    "start": "15360",
    "end": "19039"
  },
  {
    "text": "released in mid-june it has a lot of new",
    "start": "19039",
    "end": "22240"
  },
  {
    "text": "features",
    "start": "22240",
    "end": "23199"
  },
  {
    "text": "and bug fixes and performance",
    "start": "23199",
    "end": "25359"
  },
  {
    "text": "improvements",
    "start": "25359",
    "end": "26960"
  },
  {
    "text": "and today we will cover some of the",
    "start": "26960",
    "end": "29119"
  },
  {
    "text": "important performance improvements",
    "start": "29119",
    "end": "31359"
  },
  {
    "text": "in this new release",
    "start": "31359",
    "end": "35280"
  },
  {
    "text": "before we start let me first cover",
    "start": "35760",
    "end": "38559"
  },
  {
    "text": "today's",
    "start": "38559",
    "end": "39280"
  },
  {
    "text": "agenda the first part is a brief",
    "start": "39280",
    "end": "42320"
  },
  {
    "text": "introduction to",
    "start": "42320",
    "end": "43760"
  },
  {
    "text": "d and the second part is about the poems",
    "start": "43760",
    "end": "47280"
  },
  {
    "text": "and optimizations",
    "start": "47280",
    "end": "49200"
  },
  {
    "text": "in activity 3.5 uh the",
    "start": "49200",
    "end": "53199"
  },
  {
    "text": "today we're just going to cover two of",
    "start": "53199",
    "end": "55199"
  },
  {
    "text": "them the first one is about",
    "start": "55199",
    "end": "56879"
  },
  {
    "text": "concurrent re-transaction the second",
    "start": "56879",
    "end": "58960"
  },
  {
    "text": "part is about inefficient warning log",
    "start": "58960",
    "end": "61840"
  },
  {
    "text": "and after that we will cover the",
    "start": "61840",
    "end": "65119"
  },
  {
    "text": "performance change in",
    "start": "65119",
    "end": "68240"
  },
  {
    "text": "3.5 and then after that we will mention",
    "start": "68240",
    "end": "72159"
  },
  {
    "text": "the new benchmark command that we added",
    "start": "72159",
    "end": "74880"
  },
  {
    "text": "to",
    "start": "74880",
    "end": "75439"
  },
  {
    "text": "activity repository",
    "start": "75439",
    "end": "78720"
  },
  {
    "text": "and finally we will uh talk about the",
    "start": "78720",
    "end": "81439"
  },
  {
    "text": "ongoing and future work",
    "start": "81439",
    "end": "83600"
  },
  {
    "text": "that we are planning to do in the future",
    "start": "83600",
    "end": "89118"
  },
  {
    "text": "now let's begin first a brief",
    "start": "89600",
    "end": "92799"
  },
  {
    "text": "introduction to",
    "start": "92799",
    "end": "93759"
  },
  {
    "text": "activity what is",
    "start": "93759",
    "end": "97119"
  },
  {
    "text": "activity actually was introduced in 2013",
    "start": "97119",
    "end": "102000"
  },
  {
    "text": "by a core rs team",
    "start": "102000",
    "end": "105119"
  },
  {
    "text": "it is a distributed kiwi store",
    "start": "105119",
    "end": "108159"
  },
  {
    "text": "which provides strong consistency",
    "start": "108159",
    "end": "112320"
  },
  {
    "text": "it is using gold language",
    "start": "113119",
    "end": "116719"
  },
  {
    "text": "and the algorithm it uses is",
    "start": "116719",
    "end": "119759"
  },
  {
    "text": "rough consensus algorithm",
    "start": "119759",
    "end": "123439"
  },
  {
    "text": "its best fit scenario is when you",
    "start": "124240",
    "end": "127600"
  },
  {
    "text": "have more reads than writes",
    "start": "127600",
    "end": "130640"
  },
  {
    "text": "in your database environment",
    "start": "130640",
    "end": "134800"
  },
  {
    "text": "here the graph on the right side shows",
    "start": "135200",
    "end": "138480"
  },
  {
    "text": "how activity cluster looks like",
    "start": "138480",
    "end": "142000"
  },
  {
    "text": "the rough particle that is running on",
    "start": "142000",
    "end": "145040"
  },
  {
    "text": "each of the activity cluster node",
    "start": "145040",
    "end": "147680"
  },
  {
    "text": "behaves like a state machine a changes",
    "start": "147680",
    "end": "151280"
  },
  {
    "text": "state",
    "start": "151280",
    "end": "152160"
  },
  {
    "text": "based on the message coming from other",
    "start": "152160",
    "end": "154840"
  },
  {
    "text": "peers",
    "start": "154840",
    "end": "157840"
  },
  {
    "text": "in activity at the thing",
    "start": "158160",
    "end": "161200"
  },
  {
    "text": "using a single raft the rough entries",
    "start": "161200",
    "end": "164720"
  },
  {
    "text": "apply",
    "start": "164720",
    "end": "165840"
  },
  {
    "text": "in first in first out order",
    "start": "165840",
    "end": "170080"
  },
  {
    "text": "also in activity is",
    "start": "170080",
    "end": "173200"
  },
  {
    "text": "support multiversion concurrency control",
    "start": "173200",
    "end": "176480"
  },
  {
    "text": "which is",
    "start": "176480",
    "end": "177360"
  },
  {
    "text": "mvcc there are two important data",
    "start": "177360",
    "end": "180879"
  },
  {
    "text": "structures",
    "start": "180879",
    "end": "183040"
  },
  {
    "text": "for supporting mvcc the first one is",
    "start": "183040",
    "end": "186879"
  },
  {
    "text": "key index key index is a",
    "start": "186879",
    "end": "190560"
  },
  {
    "text": "b3 data structure that has the mapping",
    "start": "190560",
    "end": "194319"
  },
  {
    "text": "from key to versions",
    "start": "194319",
    "end": "198239"
  },
  {
    "text": "and the second data structure is both db",
    "start": "198239",
    "end": "201200"
  },
  {
    "text": "back in",
    "start": "201200",
    "end": "202640"
  },
  {
    "text": "both db is also a simple",
    "start": "202640",
    "end": "205840"
  },
  {
    "text": "b plus 3 data structure",
    "start": "205840",
    "end": "208879"
  },
  {
    "text": "that maps versions",
    "start": "208879",
    "end": "212480"
  },
  {
    "text": "to key value tuple",
    "start": "212480",
    "end": "215920"
  },
  {
    "text": "so that with these two data structures",
    "start": "215920",
    "end": "218560"
  },
  {
    "text": "when you have a key",
    "start": "218560",
    "end": "220159"
  },
  {
    "text": "then the key will be",
    "start": "220159",
    "end": "223440"
  },
  {
    "text": "mapped to a particular version and using",
    "start": "223440",
    "end": "226400"
  },
  {
    "text": "the version",
    "start": "226400",
    "end": "227519"
  },
  {
    "text": "later you can get into both db and find",
    "start": "227519",
    "end": "231200"
  },
  {
    "text": "out the",
    "start": "231200",
    "end": "231760"
  },
  {
    "text": "exactly which value",
    "start": "231760",
    "end": "234879"
  },
  {
    "text": "you are looking for so that in this way",
    "start": "234879",
    "end": "238080"
  },
  {
    "text": "multiversion concurrency control is",
    "start": "238080",
    "end": "240319"
  },
  {
    "text": "supported",
    "start": "240319",
    "end": "242319"
  },
  {
    "text": "finally there's a warlock which is",
    "start": "242319",
    "end": "245360"
  },
  {
    "text": "right ahead log right here log",
    "start": "245360",
    "end": "248480"
  },
  {
    "text": "is mainly used for data recovery",
    "start": "248480",
    "end": "252000"
  },
  {
    "text": "in case of failures",
    "start": "252000",
    "end": "255840"
  },
  {
    "text": "now let's talk about some of the",
    "start": "255840",
    "end": "257359"
  },
  {
    "text": "important activity apis",
    "start": "257359",
    "end": "260239"
  },
  {
    "text": "actually clients talks to activity",
    "start": "260239",
    "end": "263280"
  },
  {
    "text": "server",
    "start": "263280",
    "end": "263840"
  },
  {
    "text": "using grpc there are five",
    "start": "263840",
    "end": "267280"
  },
  {
    "text": "important unity grpc calls we need to",
    "start": "267280",
    "end": "269919"
  },
  {
    "text": "pay attention here",
    "start": "269919",
    "end": "271120"
  },
  {
    "text": "the first one input which basically put",
    "start": "271120",
    "end": "274240"
  },
  {
    "text": "a key",
    "start": "274240",
    "end": "275360"
  },
  {
    "text": "to activity server database",
    "start": "275360",
    "end": "278960"
  },
  {
    "text": "and the second one is range which can be",
    "start": "278960",
    "end": "282400"
  },
  {
    "text": "used to",
    "start": "282400",
    "end": "283360"
  },
  {
    "text": "read one or more keys from",
    "start": "283360",
    "end": "286720"
  },
  {
    "text": "activity server database and so on delay",
    "start": "286720",
    "end": "290080"
  },
  {
    "text": "range",
    "start": "290080",
    "end": "290560"
  },
  {
    "text": "which can be used to delete either",
    "start": "290560",
    "end": "293600"
  },
  {
    "text": "one or more keys from activity",
    "start": "293600",
    "end": "297199"
  },
  {
    "text": "database then the fourth one is",
    "start": "297199",
    "end": "300000"
  },
  {
    "text": "transaction",
    "start": "300000",
    "end": "301199"
  },
  {
    "text": "which is basically a mix of read and",
    "start": "301199",
    "end": "304560"
  },
  {
    "text": "write operations",
    "start": "304560",
    "end": "306400"
  },
  {
    "text": "in one single transaction",
    "start": "306400",
    "end": "310000"
  },
  {
    "text": "and the fifth one is compact which can",
    "start": "310000",
    "end": "313280"
  },
  {
    "text": "be used to compact the",
    "start": "313280",
    "end": "315680"
  },
  {
    "text": "current activity database",
    "start": "315680",
    "end": "319759"
  },
  {
    "text": "the stream grpc call",
    "start": "320479",
    "end": "324720"
  },
  {
    "text": "watch is also very important",
    "start": "324720",
    "end": "328400"
  },
  {
    "text": "xd client use watch",
    "start": "328400",
    "end": "331520"
  },
  {
    "text": "to watch all the key value changes",
    "start": "331520",
    "end": "334880"
  },
  {
    "text": "in activity server database",
    "start": "334880",
    "end": "339840"
  },
  {
    "text": "in binance activity is widely used to",
    "start": "340639",
    "end": "344639"
  },
  {
    "text": "manage",
    "start": "344639",
    "end": "345120"
  },
  {
    "text": "different kubernetes clusters",
    "start": "345120",
    "end": "348479"
  },
  {
    "text": "or xtd cluster sizes continue to",
    "start": "348479",
    "end": "351360"
  },
  {
    "text": "increase beyond 15",
    "start": "351360",
    "end": "353120"
  },
  {
    "text": "000 with an average of 8 000 nodes",
    "start": "353120",
    "end": "356319"
  },
  {
    "text": "among top 20 clusters",
    "start": "356319",
    "end": "359600"
  },
  {
    "text": "the reason we have these huge clusters",
    "start": "359600",
    "end": "363759"
  },
  {
    "text": "is because of the co-location of",
    "start": "363759",
    "end": "366240"
  },
  {
    "text": "kubernetes",
    "start": "366240",
    "end": "367360"
  },
  {
    "text": "and yarn tasks",
    "start": "367360",
    "end": "370639"
  },
  {
    "text": "it is possible that we will have super",
    "start": "370639",
    "end": "373440"
  },
  {
    "text": "large kubernetes cluster with",
    "start": "373440",
    "end": "375840"
  },
  {
    "text": "20 sound or 100",
    "start": "375840",
    "end": "379039"
  },
  {
    "text": "nodes in the near future so",
    "start": "379039",
    "end": "382160"
  },
  {
    "text": "active performance is one of the",
    "start": "382160",
    "end": "384080"
  },
  {
    "text": "important factors",
    "start": "384080",
    "end": "385280"
  },
  {
    "text": "the limits or kubernetes cluster size",
    "start": "385280",
    "end": "389680"
  },
  {
    "text": "to middle ambitious goals with",
    "start": "390639",
    "end": "394319"
  },
  {
    "text": "super large kubernetes cluster",
    "start": "394319",
    "end": "397680"
  },
  {
    "text": "we need to resolve some of the problems",
    "start": "397680",
    "end": "400800"
  },
  {
    "text": "in earlier versions of activity",
    "start": "400800",
    "end": "404880"
  },
  {
    "text": "now let's talk about some of the",
    "start": "404880",
    "end": "406960"
  },
  {
    "text": "optimizations",
    "start": "406960",
    "end": "408000"
  },
  {
    "text": "we have in active d 3.5",
    "start": "408000",
    "end": "411520"
  },
  {
    "text": "to improve the performance",
    "start": "411520",
    "end": "414879"
  },
  {
    "text": "in the first part we will cover",
    "start": "415039",
    "end": "417039"
  },
  {
    "text": "concurrent re-transaction",
    "start": "417039",
    "end": "420639"
  },
  {
    "text": "what is concurrent retransaction",
    "start": "421440",
    "end": "424479"
  },
  {
    "text": "concurrently transaction was introduced",
    "start": "424479",
    "end": "426720"
  },
  {
    "text": "in",
    "start": "426720",
    "end": "427720"
  },
  {
    "text": "d3.4 it",
    "start": "427720",
    "end": "430800"
  },
  {
    "text": "is used to avoid holding",
    "start": "430800",
    "end": "434000"
  },
  {
    "text": "read mutex so that the right",
    "start": "434000",
    "end": "436800"
  },
  {
    "text": "transactions",
    "start": "436800",
    "end": "437680"
  },
  {
    "text": "will not be blocked in this way",
    "start": "437680",
    "end": "440720"
  },
  {
    "text": "the concurrency can be improved",
    "start": "440720",
    "end": "443759"
  },
  {
    "text": "with concurrent re-transaction the",
    "start": "443759",
    "end": "446720"
  },
  {
    "text": "active",
    "start": "446720",
    "end": "447280"
  },
  {
    "text": "d rewrite latency can get significantly",
    "start": "447280",
    "end": "450639"
  },
  {
    "text": "reduced",
    "start": "450639",
    "end": "451919"
  },
  {
    "text": "by around 90 percent",
    "start": "451919",
    "end": "455039"
  },
  {
    "text": "however at the throughput get reduced",
    "start": "455039",
    "end": "459520"
  },
  {
    "text": "due to tx3 buffer deep copy",
    "start": "459520",
    "end": "463280"
  },
  {
    "text": "tx rebuffer is one of the few",
    "start": "463280",
    "end": "467039"
  },
  {
    "text": "in current re-transaction data structure",
    "start": "467039",
    "end": "471599"
  },
  {
    "text": "it holds a list of sorted key value",
    "start": "471599",
    "end": "473840"
  },
  {
    "text": "pairs that",
    "start": "473840",
    "end": "474960"
  },
  {
    "text": "not yet committed to the story",
    "start": "474960",
    "end": "478000"
  },
  {
    "text": "yet we observe that",
    "start": "478000",
    "end": "482080"
  },
  {
    "text": "the kubernetes eps server",
    "start": "482080",
    "end": "485199"
  },
  {
    "text": "throughput in activity 3.3",
    "start": "485199",
    "end": "488639"
  },
  {
    "text": "is actually higher than 3.4 because of",
    "start": "488639",
    "end": "492080"
  },
  {
    "text": "this",
    "start": "492080",
    "end": "493199"
  },
  {
    "text": "tx3 buffer deep copy",
    "start": "493199",
    "end": "496879"
  },
  {
    "text": "in this graph we are showing the super",
    "start": "498000",
    "end": "501120"
  },
  {
    "text": "difference",
    "start": "501120",
    "end": "502000"
  },
  {
    "text": "between activity 3.3 release and",
    "start": "502000",
    "end": "505120"
  },
  {
    "text": "3.4 release",
    "start": "505120",
    "end": "508400"
  },
  {
    "text": "the taskbar we have is a",
    "start": "508400",
    "end": "511759"
  },
  {
    "text": "cluster with 5k nodes",
    "start": "511759",
    "end": "515440"
  },
  {
    "text": "we are running a scheduler",
    "start": "515440",
    "end": "518959"
  },
  {
    "text": "that will schedule 200 key parts",
    "start": "518959",
    "end": "522159"
  },
  {
    "text": "in this cluster as we can observe from",
    "start": "522159",
    "end": "525600"
  },
  {
    "text": "this graph",
    "start": "525600",
    "end": "526560"
  },
  {
    "text": "that the 3.4 release",
    "start": "526560",
    "end": "530000"
  },
  {
    "text": "has much lower throughput than 3.3",
    "start": "530000",
    "end": "534640"
  },
  {
    "text": "although with concurrent re-transaction",
    "start": "534640",
    "end": "537839"
  },
  {
    "text": "the 3.4 release has",
    "start": "537839",
    "end": "541200"
  },
  {
    "text": "a lower latency than 3.3 but",
    "start": "541200",
    "end": "544399"
  },
  {
    "text": "the throughput is much lower",
    "start": "544399",
    "end": "549200"
  },
  {
    "text": "in order to improve the concurrent",
    "start": "549200",
    "end": "551040"
  },
  {
    "text": "retransaction performance",
    "start": "551040",
    "end": "553680"
  },
  {
    "text": "the first thing we did here is do no",
    "start": "553680",
    "end": "556880"
  },
  {
    "text": "tx rebuffer copy in transaction call",
    "start": "556880",
    "end": "560800"
  },
  {
    "text": "transaction call uses concurrent",
    "start": "560800",
    "end": "563360"
  },
  {
    "text": "re-transaction",
    "start": "563360",
    "end": "564640"
  },
  {
    "text": "for re-only operations inside",
    "start": "564640",
    "end": "566880"
  },
  {
    "text": "transaction call",
    "start": "566880",
    "end": "568240"
  },
  {
    "text": "even if the transaction call operations",
    "start": "568240",
    "end": "570720"
  },
  {
    "text": "contain",
    "start": "570720",
    "end": "571600"
  },
  {
    "text": "right operations are read-only",
    "start": "571600",
    "end": "574399"
  },
  {
    "text": "concurrent",
    "start": "574399",
    "end": "575360"
  },
  {
    "text": "transaction is always created each of",
    "start": "575360",
    "end": "578560"
  },
  {
    "text": "the new concurrent",
    "start": "578560",
    "end": "580160"
  },
  {
    "text": "return session gets a private copy",
    "start": "580160",
    "end": "583440"
  },
  {
    "text": "of tx3 buffer this is very costly",
    "start": "583440",
    "end": "587200"
  },
  {
    "text": "so the solution here is as the",
    "start": "587200",
    "end": "590399"
  },
  {
    "text": "read-only operations execution is very",
    "start": "590399",
    "end": "593040"
  },
  {
    "text": "short",
    "start": "593040",
    "end": "593839"
  },
  {
    "text": "we use re-transaction instead of",
    "start": "593839",
    "end": "596160"
  },
  {
    "text": "concurrently transaction",
    "start": "596160",
    "end": "597920"
  },
  {
    "text": "in transaction call",
    "start": "597920",
    "end": "601279"
  },
  {
    "text": "here on this page the right side is a",
    "start": "603680",
    "end": "607839"
  },
  {
    "text": "set of graphs that are showing the",
    "start": "607839",
    "end": "609440"
  },
  {
    "text": "performance improvements",
    "start": "609440",
    "end": "611279"
  },
  {
    "text": "when we're using re-transaction instead",
    "start": "611279",
    "end": "614000"
  },
  {
    "text": "of concurrent re-transaction",
    "start": "614000",
    "end": "618880"
  },
  {
    "text": "the subplots in in the top",
    "start": "618880",
    "end": "622079"
  },
  {
    "text": "is actually mostly rare operations",
    "start": "622079",
    "end": "626880"
  },
  {
    "text": "the subplot in the bottom is mainly",
    "start": "626880",
    "end": "630839"
  },
  {
    "text": "reoperations",
    "start": "630839",
    "end": "633839"
  },
  {
    "text": "as we can see here with different",
    "start": "634320",
    "end": "637440"
  },
  {
    "text": "combinations of read and write",
    "start": "637440",
    "end": "639360"
  },
  {
    "text": "operations",
    "start": "639360",
    "end": "641120"
  },
  {
    "text": "the performance improvements can",
    "start": "641120",
    "end": "644240"
  },
  {
    "text": "be different but generally",
    "start": "644240",
    "end": "647519"
  },
  {
    "text": "from the graph we can see the",
    "start": "647519",
    "end": "650160"
  },
  {
    "text": "transaction call",
    "start": "650160",
    "end": "651200"
  },
  {
    "text": "through pool can get improved to around",
    "start": "651200",
    "end": "655320"
  },
  {
    "text": "2.7 times the original",
    "start": "655320",
    "end": "659200"
  },
  {
    "text": "performance",
    "start": "659200",
    "end": "661839"
  },
  {
    "text": "in each of the subplot the x",
    "start": "663040",
    "end": "666399"
  },
  {
    "text": "axis is the",
    "start": "666399",
    "end": "669440"
  },
  {
    "text": "size of the connections from the kind",
    "start": "669440",
    "end": "673600"
  },
  {
    "text": "while the y-axis is",
    "start": "673600",
    "end": "676800"
  },
  {
    "text": "the size of the values that we are",
    "start": "676800",
    "end": "679360"
  },
  {
    "text": "saving to the database",
    "start": "679360",
    "end": "682800"
  },
  {
    "text": "as we can see from the first one when we",
    "start": "683760",
    "end": "686800"
  },
  {
    "text": "have more clients coming",
    "start": "686800",
    "end": "688959"
  },
  {
    "text": "and also larger values for the",
    "start": "688959",
    "end": "693120"
  },
  {
    "text": "kiwi to store then",
    "start": "693120",
    "end": "696480"
  },
  {
    "text": "we will get higher performance",
    "start": "696480",
    "end": "698480"
  },
  {
    "text": "improvements",
    "start": "698480",
    "end": "701120"
  },
  {
    "text": "now the question is can we further",
    "start": "701680",
    "end": "704720"
  },
  {
    "text": "reduce the overhead",
    "start": "704720",
    "end": "706079"
  },
  {
    "text": "of tx3 buffer deep copy",
    "start": "706079",
    "end": "709600"
  },
  {
    "text": "the answer is yes how do we do that then",
    "start": "709600",
    "end": "714320"
  },
  {
    "text": "well the solution is to",
    "start": "714320",
    "end": "717440"
  },
  {
    "text": "share the tx3 buffer between different",
    "start": "717440",
    "end": "720639"
  },
  {
    "text": "concurrent re-transactions",
    "start": "720639",
    "end": "724000"
  },
  {
    "text": "as we mentioned before concurrent",
    "start": "724240",
    "end": "726959"
  },
  {
    "text": "re-transaction",
    "start": "726959",
    "end": "728320"
  },
  {
    "text": "each has a deep copy of private tx",
    "start": "728320",
    "end": "731839"
  },
  {
    "text": "rebuffer however when there's no",
    "start": "731839",
    "end": "736079"
  },
  {
    "text": "right operations happening between",
    "start": "736079",
    "end": "738399"
  },
  {
    "text": "different concurrent retransactions",
    "start": "738399",
    "end": "741680"
  },
  {
    "text": "the data they are holding is actually",
    "start": "741680",
    "end": "744399"
  },
  {
    "text": "the same",
    "start": "744399",
    "end": "746480"
  },
  {
    "text": "so here",
    "start": "746480",
    "end": "749600"
  },
  {
    "text": "we made the changes so that the",
    "start": "749600",
    "end": "751920"
  },
  {
    "text": "different concurrent retransactions",
    "start": "751920",
    "end": "754880"
  },
  {
    "text": "when there's no right in between they",
    "start": "754880",
    "end": "757760"
  },
  {
    "text": "will",
    "start": "757760",
    "end": "758399"
  },
  {
    "text": "share the single tx3 buffer",
    "start": "758399",
    "end": "762079"
  },
  {
    "text": "so that we don't have to copy",
    "start": "762079",
    "end": "765279"
  },
  {
    "text": "the tx3 buffer each time when you're",
    "start": "765279",
    "end": "768240"
  },
  {
    "text": "creating a new concurrent retransaction",
    "start": "768240",
    "end": "773839"
  },
  {
    "text": "here on this page we are actually",
    "start": "775519",
    "end": "778880"
  },
  {
    "text": "showing the performance improvements",
    "start": "778880",
    "end": "782160"
  },
  {
    "text": "when we were sharing tx3 buffer between",
    "start": "782160",
    "end": "785360"
  },
  {
    "text": "different concurrent retransactions",
    "start": "785360",
    "end": "788560"
  },
  {
    "text": "the graphs shown here is very similar to",
    "start": "788560",
    "end": "792000"
  },
  {
    "text": "the one",
    "start": "792000",
    "end": "793360"
  },
  {
    "text": "before and the subplot on the",
    "start": "793360",
    "end": "796480"
  },
  {
    "text": "top has higher ratio of",
    "start": "796480",
    "end": "800000"
  },
  {
    "text": "right operations while the one at the",
    "start": "800000",
    "end": "802880"
  },
  {
    "text": "bottom",
    "start": "802880",
    "end": "803519"
  },
  {
    "text": "has a higher ratio of rate operations",
    "start": "803519",
    "end": "808560"
  },
  {
    "text": "as we can see with this new change",
    "start": "808560",
    "end": "813279"
  },
  {
    "text": "transaction call support can also get",
    "start": "813279",
    "end": "816079"
  },
  {
    "text": "improved",
    "start": "816079",
    "end": "817519"
  },
  {
    "text": "and the maximum that we can get is",
    "start": "817519",
    "end": "820240"
  },
  {
    "text": "around",
    "start": "820240",
    "end": "820800"
  },
  {
    "text": "2.2 x",
    "start": "820800",
    "end": "824000"
  },
  {
    "text": "now let's talk about the inefficient",
    "start": "825279",
    "end": "828079"
  },
  {
    "text": "warning log problem",
    "start": "828079",
    "end": "831360"
  },
  {
    "text": "activity server needs to bring out the",
    "start": "831839",
    "end": "835120"
  },
  {
    "text": "warning logs",
    "start": "835120",
    "end": "837519"
  },
  {
    "text": "sometimes the warning log needs to",
    "start": "837519",
    "end": "842079"
  },
  {
    "text": "bring out the size of the grpc message",
    "start": "842079",
    "end": "845920"
  },
  {
    "text": "by calling portal.size",
    "start": "845920",
    "end": "850959"
  },
  {
    "text": "however when you are making call to",
    "start": "851600",
    "end": "854160"
  },
  {
    "text": "portal",
    "start": "854160",
    "end": "854880"
  },
  {
    "text": "the size it actually needs to",
    "start": "854880",
    "end": "859199"
  },
  {
    "text": "marshal the whole message",
    "start": "859199",
    "end": "862240"
  },
  {
    "text": "before knowing the actual size this",
    "start": "862240",
    "end": "865440"
  },
  {
    "text": "is very expensive",
    "start": "865440",
    "end": "868959"
  },
  {
    "text": "so the solution here the first one",
    "start": "868959",
    "end": "873360"
  },
  {
    "text": "is to use grpc message types",
    "start": "873360",
    "end": "877519"
  },
  {
    "text": "size instead of the portal.size function",
    "start": "877519",
    "end": "880800"
  },
  {
    "text": "call",
    "start": "880800",
    "end": "882560"
  },
  {
    "text": "so that the it would directly return the",
    "start": "882560",
    "end": "885279"
  },
  {
    "text": "size of the message",
    "start": "885279",
    "end": "886560"
  },
  {
    "text": "instead of marshall and calculate the",
    "start": "886560",
    "end": "890160"
  },
  {
    "text": "size",
    "start": "890160",
    "end": "892480"
  },
  {
    "text": "second if you cannot use",
    "start": "893199",
    "end": "897199"
  },
  {
    "text": "the first solution then avoid calling",
    "start": "897199",
    "end": "900600"
  },
  {
    "text": "portal.size",
    "start": "900600",
    "end": "902160"
  },
  {
    "text": "in warning log function if this log",
    "start": "902160",
    "end": "905680"
  },
  {
    "text": "is not going to print anyway so in this",
    "start": "905680",
    "end": "909279"
  },
  {
    "text": "way",
    "start": "909279",
    "end": "909920"
  },
  {
    "text": "you will not do the",
    "start": "909920",
    "end": "913120"
  },
  {
    "text": "martial call and save cpu time",
    "start": "913120",
    "end": "918240"
  },
  {
    "text": "the first solution is that done by chao",
    "start": "919120",
    "end": "921920"
  },
  {
    "text": "from aws",
    "start": "921920",
    "end": "924399"
  },
  {
    "text": "and uh here is a link",
    "start": "924399",
    "end": "927760"
  },
  {
    "text": "to his pull request",
    "start": "927760",
    "end": "931519"
  },
  {
    "text": "in the description of the pull request",
    "start": "931519",
    "end": "935600"
  },
  {
    "text": "we can see the message uses can reduce",
    "start": "935600",
    "end": "938160"
  },
  {
    "text": "up to",
    "start": "938160",
    "end": "939120"
  },
  {
    "text": "fifty percent this is a great",
    "start": "939120",
    "end": "941759"
  },
  {
    "text": "improvement",
    "start": "941759",
    "end": "943600"
  },
  {
    "text": "and in solution two solution two is done",
    "start": "943600",
    "end": "945680"
  },
  {
    "text": "by us from by dance",
    "start": "945680",
    "end": "948320"
  },
  {
    "text": "and here's also the link to all poll",
    "start": "948320",
    "end": "950800"
  },
  {
    "text": "requests",
    "start": "950800",
    "end": "953040"
  },
  {
    "text": "with all solution xd throughput",
    "start": "953040",
    "end": "956320"
  },
  {
    "text": "can increase another around four percent",
    "start": "956320",
    "end": "961759"
  },
  {
    "text": "okay now let's talk about the new",
    "start": "963759",
    "end": "966399"
  },
  {
    "text": "benchmark command",
    "start": "966399",
    "end": "968480"
  },
  {
    "text": "we contribute to activity repository",
    "start": "968480",
    "end": "973680"
  },
  {
    "text": "active d reports it contains a tool",
    "start": "973680",
    "end": "977839"
  },
  {
    "text": "under the tool directory which is called",
    "start": "977839",
    "end": "979680"
  },
  {
    "text": "benchmark",
    "start": "979680",
    "end": "981600"
  },
  {
    "text": "benchmark tool contains several",
    "start": "981600",
    "end": "984880"
  },
  {
    "text": "commands which can be used to test",
    "start": "984880",
    "end": "987519"
  },
  {
    "text": "different",
    "start": "987519",
    "end": "988240"
  },
  {
    "text": "aspects of activity",
    "start": "988240",
    "end": "992160"
  },
  {
    "text": "it has operations such as put",
    "start": "992160",
    "end": "995440"
  },
  {
    "text": "range transaction pool",
    "start": "995440",
    "end": "998959"
  },
  {
    "text": "watch and so on",
    "start": "998959",
    "end": "1002320"
  },
  {
    "text": "however in activity we don't have a",
    "start": "1003199",
    "end": "1007279"
  },
  {
    "text": "straightforward way to test the mix read",
    "start": "1007279",
    "end": "1010560"
  },
  {
    "text": "and write operations",
    "start": "1010560",
    "end": "1013279"
  },
  {
    "text": "in real world environment it is",
    "start": "1013279",
    "end": "1016880"
  },
  {
    "text": "common to see mixed read and write",
    "start": "1016880",
    "end": "1019519"
  },
  {
    "text": "operations",
    "start": "1019519",
    "end": "1021199"
  },
  {
    "text": "sent to activity so in order",
    "start": "1021199",
    "end": "1024959"
  },
  {
    "text": "to measure the performance",
    "start": "1024959",
    "end": "1028880"
  },
  {
    "text": "in the mixed read and write environment",
    "start": "1028880",
    "end": "1032959"
  },
  {
    "text": "we added a new",
    "start": "1032959",
    "end": "1036720"
  },
  {
    "text": "benchmark command in activity",
    "start": "1036720",
    "end": "1040880"
  },
  {
    "text": "here it is linked to our pull request",
    "start": "1040880",
    "end": "1044558"
  },
  {
    "text": "besides we also added a python script",
    "start": "1044559",
    "end": "1048799"
  },
  {
    "text": "which can be used to compare the two",
    "start": "1048799",
    "end": "1051840"
  },
  {
    "text": "different",
    "start": "1051840",
    "end": "1052559"
  },
  {
    "text": "benchmark results and generate the",
    "start": "1052559",
    "end": "1056320"
  },
  {
    "text": "graph so that from the graph we can see",
    "start": "1056320",
    "end": "1060240"
  },
  {
    "text": "the difference between different",
    "start": "1060240",
    "end": "1062000"
  },
  {
    "text": "branches",
    "start": "1062000",
    "end": "1064559"
  },
  {
    "text": "here on the right side it is a plot of",
    "start": "1065039",
    "end": "1067679"
  },
  {
    "text": "the",
    "start": "1067679",
    "end": "1068160"
  },
  {
    "text": "performance difference between two",
    "start": "1068160",
    "end": "1070799"
  },
  {
    "text": "different",
    "start": "1070799",
    "end": "1071760"
  },
  {
    "text": "activity branches the first column",
    "start": "1071760",
    "end": "1076080"
  },
  {
    "text": "is the performance of the first branch",
    "start": "1076080",
    "end": "1080799"
  },
  {
    "text": "the second column is the performance of",
    "start": "1080799",
    "end": "1083760"
  },
  {
    "text": "the",
    "start": "1083760",
    "end": "1084799"
  },
  {
    "text": "second branch and the third column",
    "start": "1084799",
    "end": "1088000"
  },
  {
    "text": "is actually the difference between the",
    "start": "1088000",
    "end": "1092840"
  },
  {
    "text": "two",
    "start": "1092840",
    "end": "1095039"
  },
  {
    "text": "here the different roles means different",
    "start": "1095039",
    "end": "1098720"
  },
  {
    "text": "read and write ratios",
    "start": "1098720",
    "end": "1103200"
  },
  {
    "text": "now let's talk about the performance",
    "start": "1104880",
    "end": "1109600"
  },
  {
    "text": "here in this page we are showing",
    "start": "1109600",
    "end": "1112640"
  },
  {
    "text": "the graph of comparing the memory and",
    "start": "1112640",
    "end": "1115120"
  },
  {
    "text": "cpu",
    "start": "1115120",
    "end": "1116240"
  },
  {
    "text": "usage of 3.5",
    "start": "1116240",
    "end": "1119919"
  },
  {
    "text": "versus previous versions",
    "start": "1119919",
    "end": "1123840"
  },
  {
    "text": "in the script that we are running we",
    "start": "1125120",
    "end": "1128000"
  },
  {
    "text": "actually",
    "start": "1128000",
    "end": "1129520"
  },
  {
    "text": "running mixed transaction operations",
    "start": "1129520",
    "end": "1134640"
  },
  {
    "text": "and the mixed transaction operations",
    "start": "1134960",
    "end": "1138400"
  },
  {
    "text": "contains different lenses of",
    "start": "1138400",
    "end": "1141520"
  },
  {
    "text": "key and values",
    "start": "1141520",
    "end": "1144880"
  },
  {
    "text": "we can see from the result that with the",
    "start": "1145440",
    "end": "1148480"
  },
  {
    "text": "same script running",
    "start": "1148480",
    "end": "1150400"
  },
  {
    "text": "the cpu usage and memory usage of 3.5",
    "start": "1150400",
    "end": "1154799"
  },
  {
    "text": "is actually lower than previous versions",
    "start": "1154799",
    "end": "1160240"
  },
  {
    "text": "please know that in this graph we don't",
    "start": "1160240",
    "end": "1163360"
  },
  {
    "text": "have the",
    "start": "1163360",
    "end": "1164320"
  },
  {
    "text": "full length of 3.3",
    "start": "1164320",
    "end": "1168400"
  },
  {
    "text": "this the result of 3.3 is very similar",
    "start": "1168400",
    "end": "1172320"
  },
  {
    "text": "to",
    "start": "1172320",
    "end": "1172720"
  },
  {
    "text": "3.4 because we don't have enough",
    "start": "1172720",
    "end": "1177200"
  },
  {
    "text": "site to show them so here we just",
    "start": "1177200",
    "end": "1180880"
  },
  {
    "text": "display part of the 3.3",
    "start": "1180880",
    "end": "1184320"
  },
  {
    "text": "performance",
    "start": "1184320",
    "end": "1186960"
  },
  {
    "text": "in the last part we're going to talk",
    "start": "1187919",
    "end": "1189840"
  },
  {
    "text": "about the ongoing and future work",
    "start": "1189840",
    "end": "1193840"
  },
  {
    "text": "in order to evaluate a 2d cluster",
    "start": "1196320",
    "end": "1199760"
  },
  {
    "text": "we need kubernetes environment",
    "start": "1199760",
    "end": "1203200"
  },
  {
    "text": "however we cannot have a full setup of",
    "start": "1203200",
    "end": "1205919"
  },
  {
    "text": "kubernetes each time",
    "start": "1205919",
    "end": "1207679"
  },
  {
    "text": "when we're doing evaluation so how do we",
    "start": "1207679",
    "end": "1210640"
  },
  {
    "text": "resolve this issue",
    "start": "1210640",
    "end": "1212960"
  },
  {
    "text": "we propose a new document replay feature",
    "start": "1212960",
    "end": "1215200"
  },
  {
    "text": "to the community",
    "start": "1215200",
    "end": "1216480"
  },
  {
    "text": "with this new feature we can dump client",
    "start": "1216480",
    "end": "1219520"
  },
  {
    "text": "grpc request",
    "start": "1219520",
    "end": "1220960"
  },
  {
    "text": "to a file and later replay it on another",
    "start": "1220960",
    "end": "1224960"
  },
  {
    "text": "activity cluster so later we can compare",
    "start": "1224960",
    "end": "1228400"
  },
  {
    "text": "the",
    "start": "1228400",
    "end": "1228880"
  },
  {
    "text": "performance difference between the",
    "start": "1228880",
    "end": "1230880"
  },
  {
    "text": "different clusters",
    "start": "1230880",
    "end": "1234960"
  },
  {
    "text": "we're also working on further",
    "start": "1234960",
    "end": "1236640"
  },
  {
    "text": "improvements in",
    "start": "1236640",
    "end": "1238159"
  },
  {
    "text": "different activity components",
    "start": "1238159",
    "end": "1241679"
  },
  {
    "text": "the first one is watch we know that",
    "start": "1241679",
    "end": "1245280"
  },
  {
    "text": "the watch performance can get",
    "start": "1245280",
    "end": "1246840"
  },
  {
    "text": "significantly affected",
    "start": "1246840",
    "end": "1248720"
  },
  {
    "text": "when we have a large number of clients",
    "start": "1248720",
    "end": "1251840"
  },
  {
    "text": "doing the watch at the same time",
    "start": "1251840",
    "end": "1254880"
  },
  {
    "text": "is there any way we can improve the",
    "start": "1254880",
    "end": "1256320"
  },
  {
    "text": "performance here we are actually working",
    "start": "1256320",
    "end": "1258640"
  },
  {
    "text": "on that",
    "start": "1258640",
    "end": "1260080"
  },
  {
    "text": "the second is marshall and unmarshall",
    "start": "1260080",
    "end": "1263440"
  },
  {
    "text": "clients send messages to server",
    "start": "1263440",
    "end": "1267520"
  },
  {
    "text": "and the server will do a lot of",
    "start": "1267520",
    "end": "1270640"
  },
  {
    "text": "marshalling and arm marshaling on these",
    "start": "1270640",
    "end": "1273120"
  },
  {
    "text": "messages",
    "start": "1273120",
    "end": "1275039"
  },
  {
    "text": "however many times we're actually doing",
    "start": "1275039",
    "end": "1278720"
  },
  {
    "text": "some actual",
    "start": "1278720",
    "end": "1280240"
  },
  {
    "text": "marshalling and unmarking operations",
    "start": "1280240",
    "end": "1282720"
  },
  {
    "text": "these are not",
    "start": "1282720",
    "end": "1283679"
  },
  {
    "text": "needed so we",
    "start": "1283679",
    "end": "1286960"
  },
  {
    "text": "probably can't provide the cash so that",
    "start": "1286960",
    "end": "1289600"
  },
  {
    "text": "so that",
    "start": "1289600",
    "end": "1290240"
  },
  {
    "text": "we don't have to do the marshall and our",
    "start": "1290240",
    "end": "1292720"
  },
  {
    "text": "marginal operations",
    "start": "1292720",
    "end": "1293760"
  },
  {
    "text": "each time we actually had a prototype",
    "start": "1293760",
    "end": "1297760"
  },
  {
    "text": "and we can see that with a caching layer",
    "start": "1297760",
    "end": "1301760"
  },
  {
    "text": "we can improve the activity cluster",
    "start": "1301760",
    "end": "1305440"
  },
  {
    "text": "performance",
    "start": "1305440",
    "end": "1306320"
  },
  {
    "text": "by reducing some of the unnecessary",
    "start": "1306320",
    "end": "1309360"
  },
  {
    "text": "muscling and unmarshaling however we're",
    "start": "1309360",
    "end": "1312640"
  },
  {
    "text": "still working on that right now",
    "start": "1312640",
    "end": "1315039"
  },
  {
    "text": "the last one is multiple db back-end",
    "start": "1315039",
    "end": "1317520"
  },
  {
    "text": "support",
    "start": "1317520",
    "end": "1318720"
  },
  {
    "text": "currently actually d only has one",
    "start": "1318720",
    "end": "1322320"
  },
  {
    "text": "4db backend",
    "start": "1322320",
    "end": "1325600"
  },
  {
    "text": "and people are discussing the",
    "start": "1325600",
    "end": "1327360"
  },
  {
    "text": "possibilities",
    "start": "1327360",
    "end": "1328880"
  },
  {
    "text": "to generalize these database",
    "start": "1328880",
    "end": "1332720"
  },
  {
    "text": "layer so that we can have",
    "start": "1332720",
    "end": "1335919"
  },
  {
    "text": "different backend database support",
    "start": "1335919",
    "end": "1340639"
  },
  {
    "text": "if you have any questions feel free to",
    "start": "1342720",
    "end": "1345440"
  },
  {
    "text": "contact",
    "start": "1345440",
    "end": "1346000"
  },
  {
    "text": "me at my email address shown here",
    "start": "1346000",
    "end": "1350480"
  },
  {
    "text": "here is the list of references we use in",
    "start": "1352480",
    "end": "1355760"
  },
  {
    "text": "our talk today",
    "start": "1355760",
    "end": "1361840"
  },
  {
    "text": "and thank you for everyone",
    "start": "1362159",
    "end": "1365400"
  },
  {
    "text": "bye",
    "start": "1365400",
    "end": "1368400"
  }
]