[
  {
    "text": "it is time to get started so this is the caverno introduction and overview",
    "start": "1260",
    "end": "6720"
  },
  {
    "text": "session if you thought that you were coming to something else I'm sorry to disappoint you but I hope that we're able to",
    "start": "6720",
    "end": "12360"
  },
  {
    "text": "Delight you instead my name is Chip zoller I'm a technical product manager at nermata and I'm joined by my",
    "start": "12360",
    "end": "18300"
  },
  {
    "text": "colleague dala Sharma",
    "start": "18300",
    "end": "21380"
  },
  {
    "text": "and I'm also a caverno maintainer and I do have a couple questions for the audience just by a show of hands if you",
    "start": "26939",
    "end": "33540"
  },
  {
    "text": "can just look up from your laptop from just a second so first question please raise your hand if you're running kubernetes in production at least one",
    "start": "33540",
    "end": "40320"
  },
  {
    "text": "way who is running kubernetes in production all right hands down raise your hands again if you are using",
    "start": "40320",
    "end": "47219"
  },
  {
    "text": "some policy for your production kubernetes cluster who is using some",
    "start": "47219",
    "end": "52260"
  },
  {
    "text": "policy okay cool good to know all right hand it over to Dallas",
    "start": "52260",
    "end": "59280"
  },
  {
    "text": "Okay so",
    "start": "59280",
    "end": "61940"
  },
  {
    "text": "later on dig deeper into types of policies and some interesting use cases",
    "start": "68000",
    "end": "73260"
  },
  {
    "text": "okay so starting with that",
    "start": "73260",
    "end": "77960"
  },
  {
    "text": "wrong direction okay I'm sorry that key okay thank you",
    "start": "79080",
    "end": "85560"
  },
  {
    "text": "cool so let's start with why we need policies today so if I have to give you a general",
    "start": "85560",
    "end": "91020"
  },
  {
    "text": "example that why policy you can look at example that using a single Cube Kettle",
    "start": "91020",
    "end": "96360"
  },
  {
    "text": "command how can an ad how can a user get access to the entire host so he can run",
    "start": "96360",
    "end": "102000"
  },
  {
    "text": "just he or she can run just a single command and they can get access to the entire host there might be different",
    "start": "102000",
    "end": "107759"
  },
  {
    "text": "reason this might be occurring first is that we might not even know that this is a bad part and we are not supposed to",
    "start": "107759",
    "end": "113100"
  },
  {
    "text": "run it there might be other reasons like we don't have any guard rails in this environment so these kinds of requests",
    "start": "113100",
    "end": "118860"
  },
  {
    "text": "are not blocked there are no policies that are running that is actually blocking or auditing these kind of",
    "start": "118860",
    "end": "124079"
  },
  {
    "text": "requests and then as more people get involved they have different backgrounds they have their own travel information",
    "start": "124079",
    "end": "129720"
  },
  {
    "text": "that they come up and they don't know what to do and what not to do and of course kubernetes is hard so someone who",
    "start": "129720",
    "end": "136920"
  },
  {
    "text": "is new to kubernetes will find it difficult to get everything in the first go so yeah we need policies we need",
    "start": "136920",
    "end": "143280"
  },
  {
    "text": "policies to make sure that such kind of incidents our scenario doesn't happen or is blocked or at the least at least",
    "start": "143280",
    "end": "149760"
  },
  {
    "text": "audited so what can policy deliver policy can Define laws and it can Define",
    "start": "149760",
    "end": "155819"
  },
  {
    "text": "some guard rails that can help you to block such kind of request it provides a",
    "start": "155819",
    "end": "161700"
  },
  {
    "text": "proper check and it makes you up it makes you visible to your security posture of your cluster so what you can",
    "start": "161700",
    "end": "167700"
  },
  {
    "text": "do is using policies you can Define some rules you can Define some guardrails and make sure that the policy security",
    "start": "167700",
    "end": "174120"
  },
  {
    "text": "posture of your cluster is good once you have these policies you can centrally control them and when you're applying",
    "start": "174120",
    "end": "180480"
  },
  {
    "text": "them you get consistency so you are applying these policies and you're getting security wise consistency for",
    "start": "180480",
    "end": "186120"
  },
  {
    "text": "across all your environment once you deploy policies you'll get violations you'll get a report you'll",
    "start": "186120",
    "end": "192000"
  },
  {
    "text": "see what's failing what's not working this will give you more visibility into your cluster into your environment and",
    "start": "192000",
    "end": "197879"
  },
  {
    "text": "then policies can or perform automations so policies can do couple of things they can automate couple of things we'll",
    "start": "197879",
    "end": "204000"
  },
  {
    "text": "we'll talk about such use cases deeper in next slides but yes that is one more interesting things policy can do and all",
    "start": "204000",
    "end": "211200"
  },
  {
    "text": "of this actually the important thing is deploying policies what policies can deliver us it sets certain expectations",
    "start": "211200",
    "end": "218519"
  },
  {
    "text": "of others so if such kind of requests are blocked people know that okay these are the expectations and we are not",
    "start": "218519",
    "end": "224220"
  },
  {
    "text": "supposed to deploy something like that which all in everyone saves your time it's reliable and it makes the security",
    "start": "224220",
    "end": "231180"
  },
  {
    "text": "side of the cluster very easy so a little bit about keyword no kivarno",
    "start": "231180",
    "end": "237720"
  },
  {
    "text": "means govern in Greek it's a cncf incubated project it's a policy engine which is a kubernetes admission",
    "start": "237720",
    "end": "244019"
  },
  {
    "text": "controller it's natively built for kubernetes that means it is easily integrated for kubernetes you do not",
    "start": "244019",
    "end": "250080"
  },
  {
    "text": "require any programming language to create a policy or write a policy so if",
    "start": "250080",
    "end": "256139"
  },
  {
    "text": "you know kubernetes if you're good with yaml you understand a yaml the syntax the format of it you're good you can",
    "start": "256139",
    "end": "262019"
  },
  {
    "text": "write your policy there are a lot of policies available but you can start writing our policy from day one and it's",
    "start": "262019",
    "end": "267240"
  },
  {
    "text": "most popular pillar by star in the policy engine and we have the largest policy library of a policy engine so if",
    "start": "267240",
    "end": "273600"
  },
  {
    "text": "you go to keyword.io and if you see the policies we have we have a huge amount of policies therefore maybe every use",
    "start": "273600",
    "end": "280919"
  },
  {
    "text": "case so why what the overview and what are some keyword features on an overview",
    "start": "280919",
    "end": "287580"
  },
  {
    "text": "level so we have validation QR no can provide you validation mutation and",
    "start": "287580",
    "end": "292860"
  },
  {
    "text": "generation with the help of these policies so you can set up some rules and you can validate with the help of",
    "start": "292860",
    "end": "298680"
  },
  {
    "text": "the policies you can validate those rules against with what you're applying so it provides you validation on the",
    "start": "298680",
    "end": "304259"
  },
  {
    "text": "Clusters it provides a mutation to the existing resources so you can say that okay when this happens this is the",
    "start": "304259",
    "end": "310020"
  },
  {
    "text": "trigger it should muted some resources that are existing in kubernetes so it provides mutation it provides generation",
    "start": "310020",
    "end": "316500"
  },
  {
    "text": "so you can create your own trigger in the in the form of policies and it can generate when that trigger happened in",
    "start": "316500",
    "end": "323400"
  },
  {
    "text": "kubernetes cluster we have some image verification that kivano can provide you so it really helps you in verifying your",
    "start": "323400",
    "end": "330300"
  },
  {
    "text": "images and then it generates a report that is that is created centrally when",
    "start": "330300",
    "end": "335400"
  },
  {
    "text": "you deploy keyword node that means it tells you that what is violation What are the violation uh what policies are",
    "start": "335400",
    "end": "342479"
  },
  {
    "text": "are boiling listed with all kind of like what deployments are being violated to What policies so you get more visibility",
    "start": "342479",
    "end": "348419"
  },
  {
    "text": "there and then we have kuberno CLI so kuberno CLI you can easily point it to a",
    "start": "348419",
    "end": "353520"
  },
  {
    "text": "cluster and maybe do a dry run before you are deploying any kind of deployment you can easily integrate it into your CI",
    "start": "353520",
    "end": "358919"
  },
  {
    "text": "CD pipeline so before you do a deployment you can actually verify it whether it's it's security wise good or",
    "start": "358919",
    "end": "364979"
  },
  {
    "text": "should you need you have to do any changes",
    "start": "364979",
    "end": "368840"
  },
  {
    "text": "these are some use cases real life use cases that kuberno can help you with so",
    "start": "370639",
    "end": "376139"
  },
  {
    "text": "we have seen some um some in in the initial slide in the last couple of slides we see that there was this using",
    "start": "376139",
    "end": "382440"
  },
  {
    "text": "Cube cuddle you were able to deploy a bad pod and you can get access to the host and you can do all all sort of",
    "start": "382440",
    "end": "387960"
  },
  {
    "text": "things so keyword who can help you block such kind of requests even who can help you only that but can deploy best",
    "start": "387960",
    "end": "394319"
  },
  {
    "text": "practices policies PSPs in your cluster and you can block such kind of requests or you can at least have a audit that",
    "start": "394319",
    "end": "400680"
  },
  {
    "text": "okay these are some of the pods and these are some security why it's not good parts that are running in your cluster it provides fine grade R back",
    "start": "400680",
    "end": "408000"
  },
  {
    "text": "that means a user with a role May create secret with the label such kind of use cases something that Kevin can help you",
    "start": "408000",
    "end": "414479"
  },
  {
    "text": "with it helps you in your cost control for example use cases like you need to track particular cost uh particular",
    "start": "414479",
    "end": "421979"
  },
  {
    "text": "Cloud resources like your load balancers or maybe your EBS and you have to generate a cost based on the tagging so",
    "start": "421979",
    "end": "428460"
  },
  {
    "text": "keyword helps you in automating QR helps you in tagging those resources running in your kubernetes and also it can help",
    "start": "428460",
    "end": "435600"
  },
  {
    "text": "you with use cases like okay the service type with load balancer should only create a load balance in AWS which helps",
    "start": "435600",
    "end": "441240"
  },
  {
    "text": "you in the cost overall it helps in Ops automation so use cases like seeing the",
    "start": "441240",
    "end": "446880"
  },
  {
    "text": "config map whenever a new certificate is generated it helps you in these kind of automation by generating new Resources",
    "start": "446880",
    "end": "452819"
  },
  {
    "text": "by doing some kind of automations for you and then you might have a use case where you are using a shared cluster",
    "start": "452819",
    "end": "458759"
  },
  {
    "text": "where there are multiple applications running on the cluster so you need multi-tenancy so you might need that okay when I create a namespace five",
    "start": "458759",
    "end": "465360"
  },
  {
    "text": "different things should be created automatically it should be I I don't have to do anything it's just the trigger has been namespace once the",
    "start": "465360",
    "end": "471720"
  },
  {
    "text": "namespace is created we need what we need Network policy we need quotas and",
    "start": "471720",
    "end": "476819"
  },
  {
    "text": "all those multi-tenancy resources and in kubernetes automatically created and set up for the developer kyuno can do that",
    "start": "476819",
    "end": "482880"
  },
  {
    "text": "for you using generate policy and then we have supply chain security use case so how do you make sure that you're",
    "start": "482880",
    "end": "488460"
  },
  {
    "text": "signing your image and then you are validating it with what cluster is consuming so kuberno can help you in",
    "start": "488460",
    "end": "494220"
  },
  {
    "text": "these kind of complicated use cases as well and there are more to that but these are some standard use cases and",
    "start": "494220",
    "end": "500460"
  },
  {
    "text": "top use cases that you can achieve using kivano and here there is a sample policy on the",
    "start": "500460",
    "end": "507240"
  },
  {
    "text": "screen now if you see this policy you'll if if you're familiar with yaml you can",
    "start": "507240",
    "end": "512580"
  },
  {
    "text": "actually read that policy so it's quite simple it's quite easy to read you know that it's it's standard yaml just like a",
    "start": "512580",
    "end": "518820"
  },
  {
    "text": "deployment or a pod yaml so you'll see there's an API version there is cluster I'll not I'll not go entirely maybe but",
    "start": "518820",
    "end": "525180"
  },
  {
    "text": "yeah you'll see that this policy is applied to a pod so you have a rule over there it's applied to a port and then",
    "start": "525180",
    "end": "530820"
  },
  {
    "text": "there is a message that will be thrown whenever the policy is blocking a pod and then there is some kind of patterns",
    "start": "530820",
    "end": "537480"
  },
  {
    "text": "that are its policy is validating so this is a kubernet policy that you can see and all these validate policies are",
    "start": "537480",
    "end": "544260"
  },
  {
    "text": "something similar so they are easy to you can write it there easy to customize",
    "start": "544260",
    "end": "549600"
  },
  {
    "text": "as well so these are very very simple that's that's basic yaml over here and these are this is the application",
    "start": "549600",
    "end": "556200"
  },
  {
    "text": "kuberno component that will be deployed on your cluster so you'll see that there is an API request and keyword no",
    "start": "556200",
    "end": "561600"
  },
  {
    "text": "actually interrupts that API request based on what policies you have applied and it it can validate mutate generate",
    "start": "561600",
    "end": "568019"
  },
  {
    "text": "according to that so there are some validating web hook configurations there are mutating webhook configurations and",
    "start": "568019",
    "end": "573779"
  },
  {
    "text": "then there is cluster role and cluster role binding so if you want to strictly tighten the kubernos application",
    "start": "573779",
    "end": "579720"
  },
  {
    "text": "permission in your cluster you can do that you can change cluster role cluster role binding and you can restrict",
    "start": "579720",
    "end": "585120"
  },
  {
    "text": "keyword knows permission to a particular namespace or if you want to tighten it further there are custom resource",
    "start": "585120",
    "end": "590760"
  },
  {
    "text": "definitions there is config map so you have a lot of features that you can customize using config map and there is",
    "start": "590760",
    "end": "597180"
  },
  {
    "text": "service account secret the standard stuff the kubernet deployments over here comes with their additional Single part",
    "start": "597180",
    "end": "604500"
  },
  {
    "text": "but it comes with h a so if you want to deploy keyword Now using ha you can go with that if you have a standalone cluster and you just want single pod we",
    "start": "604500",
    "end": "612000"
  },
  {
    "text": "have both the flavors of kubernose garment and then there's a service of course so yeah these this is what the",
    "start": "612000",
    "end": "618540"
  },
  {
    "text": "application looks like and that's how the components are deployed on your cluster",
    "start": "618540",
    "end": "624180"
  },
  {
    "text": "and this is a sample policy structure so we have already seen in the last slide that that was a validate policy so it",
    "start": "624180",
    "end": "630779"
  },
  {
    "text": "looks similar that's the standard of how how a policy is going to look like so policy can have one or more rules and it",
    "start": "630779",
    "end": "637440"
  },
  {
    "text": "has a match and exclude condition so a match condition is going to match with",
    "start": "637440",
    "end": "642899"
  },
  {
    "text": "certain kubernetes resources for example there is namespace there is also this",
    "start": "642899",
    "end": "648000"
  },
  {
    "text": "entire group it can match with and in exclude if you have some exceptions like okay my keyboard should should ignore",
    "start": "648000",
    "end": "654240"
  },
  {
    "text": "couple of maybe namespace couple of User Group you can put it in the exclude section and then it have different",
    "start": "654240",
    "end": "660060"
  },
  {
    "text": "Clauses after the rule it can actually it it performs the Clauses and the Clauses it can mutate it can verify it",
    "start": "660060",
    "end": "666959"
  },
  {
    "text": "can validate it can generate so muted is going to mutate existing resources",
    "start": "666959",
    "end": "672240"
  },
  {
    "text": "generate is going to generate you validate is going to validate with that and verify image is going to verify",
    "start": "672240",
    "end": "677279"
  },
  {
    "text": "whether your images are signed and the same images are being consumed by a cluster",
    "start": "677279",
    "end": "684300"
  },
  {
    "text": "okay so I think um before the session will be taken by chip and he'll dig deeper into the type of policies and",
    "start": "684300",
    "end": "690480"
  },
  {
    "text": "some pretty interesting use cases over to YouTube all right thank you Dallas thank you all right so let's take a look",
    "start": "690480",
    "end": "695880"
  },
  {
    "text": "at in a little bit more depth each of these capabilities that caverno has and Dallas kind of laid out from an overview",
    "start": "695880",
    "end": "702120"
  },
  {
    "text": "what they are so validation rules validation this is probably the most popular type of rule",
    "start": "702120",
    "end": "707700"
  },
  {
    "text": "if you're using any policy engine today this is your quintessential yes or no response here's a resource I have a",
    "start": "707700",
    "end": "714180"
  },
  {
    "text": "policy that says it should look like this do you allow it or do you not allow it coverno obviously does that quite",
    "start": "714180",
    "end": "719640"
  },
  {
    "text": "simple this occurs during the validation admission phase so when the API server sends a request to something based on",
    "start": "719640",
    "end": "726360"
  },
  {
    "text": "the definition of a policy it goes through a life cycle or a tube if you will and two phases occur the mutation",
    "start": "726360",
    "end": "732600"
  },
  {
    "text": "phase occurs first and then the validation occurs second all the validate rules occurs surprise",
    "start": "732600",
    "end": "739079"
  },
  {
    "text": "during the validation phase which is the last phase before it's accepted into a cluster this is the most common rule",
    "start": "739079",
    "end": "744839"
  },
  {
    "text": "type so all of your things when you're thinking about pod security making sure that pods and containers therein don't run as root making sure that you don't",
    "start": "744839",
    "end": "751260"
  },
  {
    "text": "run host path that you don't have a user that's number zero all these types of things these are all these all fall",
    "start": "751260",
    "end": "757560"
  },
  {
    "text": "under validate rules there are two failure behaviors that coverino supports today the first type",
    "start": "757560",
    "end": "763740"
  },
  {
    "text": "is called audit this is where we will allow the resource to be created if it's in violation of the policy but",
    "start": "763740",
    "end": "770700"
  },
  {
    "text": "we will tell you about it in a policy report which I'll get to later on policy report is just another standard",
    "start": "770700",
    "end": "776160"
  },
  {
    "text": "kubernetes resource the second action is in force this pod or whatever the resource is custom resources included",
    "start": "776160",
    "end": "783000"
  },
  {
    "text": "fails the definition of the policy we will deny its creation and there are two styles that you can",
    "start": "783000",
    "end": "789240"
  },
  {
    "text": "write validate rules in one is an overlay style expression and that's the example that Dallas showed a few slides",
    "start": "789240",
    "end": "795660"
  },
  {
    "text": "ago this is the mo what most policies in the validate rule or indeed most",
    "start": "795660",
    "end": "802200"
  },
  {
    "text": "policies written in caverno use a simple expression or a simple overlay style this is very similar how customized does",
    "start": "802200",
    "end": "809459"
  },
  {
    "text": "it because we're actually using customize in some cases under the covers where it's where you specify the portion",
    "start": "809459",
    "end": "815279"
  },
  {
    "text": "of the resource in which you're interested in matching not the entire representation of the resource",
    "start": "815279",
    "end": "820800"
  },
  {
    "text": "just a portion of it second way to write validate rules is with a deny condition so conditions in kubernetes we're all",
    "start": "820800",
    "end": "828000"
  },
  {
    "text": "familiar with those key operator value caverno has the same constructs",
    "start": "828000",
    "end": "833399"
  },
  {
    "text": "using a deny statement you can use these Expressions to achieve even more power",
    "start": "833399",
    "end": "838440"
  },
  {
    "text": "by pulling in some other Advanced capabilities which we don't have time to cover but two styles of a validate rule",
    "start": "838440",
    "end": "844200"
  },
  {
    "text": "that you can write with plenty of flexibility to achieve any of those use cases mutation capability caberno is at",
    "start": "844200",
    "end": "851519"
  },
  {
    "text": "mutation capability right out of the gate and it's very very mature this is as you may or may not know be the",
    "start": "851519",
    "end": "859019"
  },
  {
    "text": "ability that defines the modification of a resource so going back to the phases",
    "start": "859019",
    "end": "864480"
  },
  {
    "text": "of admission review this occurs first in the mutation phase so when a resource comes in if there is a policy that says",
    "start": "864480",
    "end": "871260"
  },
  {
    "text": "you should mutate this mutation will occur there then get shunt to the validation phase later on where there",
    "start": "871260",
    "end": "878279"
  },
  {
    "text": "may or may not be a policy to apply additional validations on that mutate rules like validate can be",
    "start": "878279",
    "end": "885540"
  },
  {
    "text": "written with an overlay style that is if you're only interested in applying a specific portion of the resource you can",
    "start": "885540",
    "end": "891480"
  },
  {
    "text": "do that by specifying with with overlays which is the easiest and simplest way to",
    "start": "891480",
    "end": "896699"
  },
  {
    "text": "go about doing it or you can use standard 6902 Json patches and these are non-adulterated Json patches Cabernet",
    "start": "896699",
    "end": "903540"
  },
  {
    "text": "supports those perfectly well and using those json's patches you can do things like remove values or change values in a",
    "start": "903540",
    "end": "913380"
  },
  {
    "text": "lot of different cases and by the way all of these things that we're talking about and this is a common question that",
    "start": "913380",
    "end": "919139"
  },
  {
    "text": "comes up work for custom resources as well as standard kubernetes resources so",
    "start": "919139",
    "end": "924300"
  },
  {
    "text": "it doesn't matter what type of kubernetes resource it is coverno can validate it can mutate it can verify",
    "start": "924300",
    "end": "930540"
  },
  {
    "text": "images stripped away from it can generate it etc etc mutate also supports the ability to",
    "start": "930540",
    "end": "937079"
  },
  {
    "text": "mutate existing resources so you have existing resources that are in the cluster and you need to provide some",
    "start": "937079",
    "end": "942720"
  },
  {
    "text": "sort of retroactive mutation against them rather than performing all new mutation based upon an event on that",
    "start": "942720",
    "end": "948480"
  },
  {
    "text": "would be that a create or an update caverna has the ability to Via a policy definition apply retroactive mutations",
    "start": "948480",
    "end": "955260"
  },
  {
    "text": "based upon your design the generation rule type this is one of",
    "start": "955260",
    "end": "960300"
  },
  {
    "text": "the most popular rule types in caverno and one of the things that really differentiates it from a lot of other policy engines Governor has the ability",
    "start": "960300",
    "end": "967320"
  },
  {
    "text": "to create new resources of any type based upon a trigger that you define",
    "start": "967320",
    "end": "972600"
  },
  {
    "text": "happening in the cluster the source of that can be either a clone here's an",
    "start": "972600",
    "end": "978000"
  },
  {
    "text": "existing resource that's somewhere in the cluster I want you to put it over there in number of times or it can be",
    "start": "978000",
    "end": "983699"
  },
  {
    "text": "defined in the policy in what's called a data structure and in the data structure you define I want my resource to look",
    "start": "983699",
    "end": "989820"
  },
  {
    "text": "like this including things like variable templating and expressions and all sorts of things that can go in there and then",
    "start": "989820",
    "end": "996300"
  },
  {
    "text": "when that trigger occurs it will create that resource upon that definition and",
    "start": "996300",
    "end": "1001459"
  },
  {
    "text": "whatever the the whatever the defined Target is it also supports synchronization so it can watch the",
    "start": "1001459",
    "end": "1007459"
  },
  {
    "text": "source resource be that defined in the policy or the source resource in the case of a clone and if that changes it",
    "start": "1007459",
    "end": "1014600"
  },
  {
    "text": "can immediately synchronize those contents down to the downstream locations this also enables things like tamper",
    "start": "1014600",
    "end": "1021139"
  },
  {
    "text": "resistance if somebody tampers with a downstream resource and synchronization is enabled Governor we'll see that and",
    "start": "1021139",
    "end": "1027079"
  },
  {
    "text": "immediately revert the resource back to its previous state this also works on existing items this",
    "start": "1027079",
    "end": "1032360"
  },
  {
    "text": "is great for if you have Brownfield environments which everybody does you've got existing name spaces and you want to",
    "start": "1032360",
    "end": "1038000"
  },
  {
    "text": "generate resources into existing name spaces without having to manipulate them or even worry about creating new",
    "start": "1038000",
    "end": "1044178"
  },
  {
    "text": "namespaces caverna can do that as well based on the same simple policy definitions this is obviously great for",
    "start": "1044179",
    "end": "1050540"
  },
  {
    "text": "multi-tenancy and indeed this is one of the most popular uses of it where even if you're not using true multi-tenancy",
    "start": "1050540",
    "end": "1057200"
  },
  {
    "text": "you're using soft multi-tenancy for things like applications if you are using multi-tenancy for separate teams",
    "start": "1057200",
    "end": "1063260"
  },
  {
    "text": "or even separate customers caverno can be a full namespace provisioner and generate all the",
    "start": "1063260",
    "end": "1068900"
  },
  {
    "text": "resources that you need in order to get that namespace into production quickly",
    "start": "1068900",
    "end": "1074179"
  },
  {
    "text": "image verification this is caberno's ability to verify the image signatures",
    "start": "1074179",
    "end": "1080480"
  },
  {
    "text": "in an oci registry of the images that are being proposed to be run in the",
    "start": "1080480",
    "end": "1085640"
  },
  {
    "text": "cluster coverno internally uses the cosine project from sigstore anybody heard of Sig store recently yeah it's",
    "start": "1085640",
    "end": "1092120"
  },
  {
    "text": "been been a lot cosine is used to sign the images coverno uses cosine to verify",
    "start": "1092120",
    "end": "1098780"
  },
  {
    "text": "the signature of those images this is integrated all of these things that we're discussing are integrated directly",
    "start": "1098780",
    "end": "1104240"
  },
  {
    "text": "into coverno there's no bolt-ons there's no additional things that you install if you don't want the behavior you don't",
    "start": "1104240",
    "end": "1110059"
  },
  {
    "text": "get it as soon as you want it all you have to do is write a policy it enables the behavior this also supports things like",
    "start": "1110059",
    "end": "1116660"
  },
  {
    "text": "attestation checks anybody here attesting to their images in any way shape or form right now",
    "start": "1116660",
    "end": "1122960"
  },
  {
    "text": "so a couple brave souls all right hopefully at some point in time we get to do more things like provenance but",
    "start": "1122960",
    "end": "1128960"
  },
  {
    "text": "but anyhow we're ready for that it's it's already there and cabernos to force the ability to check at the Stations of",
    "start": "1128960",
    "end": "1136160"
  },
  {
    "text": "any predicate type even custom predicates and you can verify any portion of the attestation payload using",
    "start": "1136160",
    "end": "1142580"
  },
  {
    "text": "any form of expression that caverno supports of which there are many",
    "start": "1142580",
    "end": "1147740"
  },
  {
    "text": "all of this works with any oci registry there's no isolated list of these only specific ones if it's an oci registry",
    "start": "1147740",
    "end": "1154700"
  },
  {
    "text": "and it conforms to the oci spec kubernet will work with it pull those images and look at the image signatures and",
    "start": "1154700",
    "end": "1161120"
  },
  {
    "text": "attestations on them and you can do some complex multi-way checks so any Keys all",
    "start": "1161120",
    "end": "1166400"
  },
  {
    "text": "keys at least one or at least two keys so you can do things like my entire organization is required to sign all",
    "start": "1166400",
    "end": "1172640"
  },
  {
    "text": "images but if they're going into a PCI namespace additionally the security team has to sign off on those images and",
    "start": "1172640",
    "end": "1179900"
  },
  {
    "text": "based upon whatever policy design that you want it can ensure that anything that goes into that namespace maybe gets",
    "start": "1179900",
    "end": "1185840"
  },
  {
    "text": "two signatures that they have to validate otherwise it's just one so policy reports I talked about this on",
    "start": "1185840",
    "end": "1192860"
  },
  {
    "text": "the validate slide but policy reports are a standard Custom kubernetes Custom",
    "start": "1192860",
    "end": "1198320"
  },
  {
    "text": "resource that shows the results of validate rules placed in audit mode",
    "start": "1198320",
    "end": "1204559"
  },
  {
    "text": "so if a validate rule is in audit mode and a resource violates a policy the",
    "start": "1204559",
    "end": "1209600"
  },
  {
    "text": "resource will be allowed to create but it will log that in a policy report this is an open standard from the kubernetes",
    "start": "1209600",
    "end": "1215960"
  },
  {
    "text": "policy working group this isn't some esoteric standard that we created just to give you yet another CR the",
    "start": "1215960",
    "end": "1222440"
  },
  {
    "text": "kubernetes policy working group defines a standard policy report structure",
    "start": "1222440",
    "end": "1227480"
  },
  {
    "text": "that's by the way adopted by several tools that are out there in the ecosystem and what this is what this",
    "start": "1227480",
    "end": "1232580"
  },
  {
    "text": "enables is the separation of those who can write and see policy and those who can write and see policy reports they",
    "start": "1232580",
    "end": "1238940"
  },
  {
    "text": "aren't crushed together in the same thing so somebody has to parse out the results of the policy they're cleanly",
    "start": "1238940",
    "end": "1245780"
  },
  {
    "text": "separated so you can set you the roles that you wish can separate based on whatever desire that you want",
    "start": "1245780",
    "end": "1252320"
  },
  {
    "text": "uh policy report comes in two flavors a namespaced policy report and a cluster-wide policy report things that",
    "start": "1252320",
    "end": "1259220"
  },
  {
    "text": "are namespace scoped appear in a namespace policy report those that are cluster scoped for example node or some",
    "start": "1259220",
    "end": "1264799"
  },
  {
    "text": "other custom resources will appear in the cluster policy report policy reports are written in two modes",
    "start": "1264799",
    "end": "1270260"
  },
  {
    "text": "admission review that's if the policy is in audit mode and also what we call Background",
    "start": "1270260",
    "end": "1275299"
  },
  {
    "text": "processing mode if you create a rule with background processing enabled caverno will on a scheduled basis go and",
    "start": "1275299",
    "end": "1282919"
  },
  {
    "text": "check all of the resources that pertain to that in an existing cluster and if they're in violation we'll write that",
    "start": "1282919",
    "end": "1287960"
  },
  {
    "text": "into a policy report so you can do things like Drop in a policy in audit",
    "start": "1287960",
    "end": "1294020"
  },
  {
    "text": "mode and get an understanding of the disposition of the resources in that cluster without any admission requests",
    "start": "1294020",
    "end": "1300799"
  },
  {
    "text": "having to come into it results are pass fail worn error and Skip again these are all defined in the",
    "start": "1300799",
    "end": "1307280"
  },
  {
    "text": "open standard of the policy of the kubernetes policy WG and coverno supports all of these",
    "start": "1307280",
    "end": "1314419"
  },
  {
    "text": "CLI uh caverno has a CLI it allows you to test policies outside of a cluster",
    "start": "1314419",
    "end": "1321640"
  },
  {
    "text": "the way this works is in two primary Fashions this allows you to check against a Define manifest as in I have",
    "start": "1321640",
    "end": "1329299"
  },
  {
    "text": "this policy I have this or these resources and I expect this result to occur when these are evaluated if that",
    "start": "1329299",
    "end": "1336440"
  },
  {
    "text": "result is not achieved it'll be deemed a failure or you can just YOLO and say here there's a policy here's a resource",
    "start": "1336440",
    "end": "1343880"
  },
  {
    "text": "tell me what happens and it'll give you the output and by the way that works with things like mutate and generate",
    "start": "1343880",
    "end": "1348980"
  },
  {
    "text": "here's a policy here's a resource give it to the CLI it should come out if it's up if it matches to it it'll show you",
    "start": "1348980",
    "end": "1355580"
  },
  {
    "text": "the full representation of the generated or mutated resource this is obviously great in CI CD pipelines because now you",
    "start": "1355580",
    "end": "1362120"
  },
  {
    "text": "can shift left and put in the CLI so that your authoring experience is the",
    "start": "1362120",
    "end": "1367520"
  },
  {
    "text": "same and you're able to reason about that process all the way through to the running in the cluster so whatever the CLI",
    "start": "1367520",
    "end": "1375200"
  },
  {
    "text": "reports you can do things like deny your you can fail your PR and this is a very",
    "start": "1375200",
    "end": "1380840"
  },
  {
    "text": "common use case and in fact in the documentation we have a sample GitHub action that this is all plumbed up for",
    "start": "1380840",
    "end": "1387320"
  },
  {
    "text": "you can go and copy and paste it right now as a way to get started and it's simple enough where you can use it in any project it it's very standard this",
    "start": "1387320",
    "end": "1395179"
  },
  {
    "text": "is a go binary it's available as a q Control Pro plug-in via crew via Homebrew lots of other installation",
    "start": "1395179",
    "end": "1401900"
  },
  {
    "text": "methods very easy to get started uh and to install it this is part of",
    "start": "1401900",
    "end": "1407240"
  },
  {
    "text": "caverno this is not an isolated utility that was sort of whipped up to evaluate",
    "start": "1407240",
    "end": "1413360"
  },
  {
    "text": "caverno's language separately the code that executes in the CLI is the same code that executes in the web hook it's",
    "start": "1413360",
    "end": "1419960"
  },
  {
    "text": "just in CLI form factor all right so some things that are new in",
    "start": "1419960",
    "end": "1426740"
  },
  {
    "text": "caverno 1.8 for those that are not aware we released 1.8 uh technically a couple",
    "start": "1426740",
    "end": "1432320"
  },
  {
    "text": "weeks ago but we had the release blog that we put out there earlier this week there's a new pod security sub rule",
    "start": "1432320",
    "end": "1439340"
  },
  {
    "text": "how many of those here are familiar with the either pod security admission or pod",
    "start": "1439340",
    "end": "1444919"
  },
  {
    "text": "security standards you know what I'd note I do not mean PSPs pod security admission or pod security standards pod",
    "start": "1444919",
    "end": "1451280"
  },
  {
    "text": "security admission being the technology which implements the PSS standards okay so pod security admission is a new",
    "start": "1451280",
    "end": "1456799"
  },
  {
    "text": "feature as of kubernetes 1.23 it reached stability in 1.25 which was the same",
    "start": "1456799",
    "end": "1462320"
  },
  {
    "text": "version in which pod security policies were removed so for those who are not aware pod security policies are gone",
    "start": "1462320",
    "end": "1467900"
  },
  {
    "text": "that is not deprecated gone in 125. the same libraries that Power Pod",
    "start": "1467900",
    "end": "1475340"
  },
  {
    "text": "security admission which is the kubernetes replacement for PSPs we pulled that Library into caverno and",
    "start": "1475340",
    "end": "1481880"
  },
  {
    "text": "made a much simpler abstraction using this pod security sub rule so you can do things like us apply the entire",
    "start": "1481880",
    "end": "1489200"
  },
  {
    "text": "restricted profile of the Pod security standards in one single rule",
    "start": "1489200",
    "end": "1495500"
  },
  {
    "text": "another thing that we added in 1.8 is yaml Manifest signature verification so",
    "start": "1495500",
    "end": "1500960"
  },
  {
    "text": "I talked about the ability to verify image signatures and attestations from",
    "start": "1500960",
    "end": "1506120"
  },
  {
    "text": "the Sig store project using cosine they also have a sub project which is the signature and validation thereof of yaml",
    "start": "1506120",
    "end": "1514100"
  },
  {
    "text": "manifests caverna was brought that feature in and allows you to sign yaml manifest and verify well caverna won't",
    "start": "1514100",
    "end": "1520159"
  },
  {
    "text": "do the sign-in converter will do the validation of those yaml manifests before they're allowed to come into your",
    "start": "1520159",
    "end": "1525200"
  },
  {
    "text": "cluster and also allow you to do things like exclude certain Fields so for example if you want to sign a deployment",
    "start": "1525200",
    "end": "1531440"
  },
  {
    "text": "to prevent ensure that tampering does not occur from the time that that is signed to the time that that's run but",
    "start": "1531440",
    "end": "1538039"
  },
  {
    "text": "you want to allow users to only change replicas you can Define that in a simple gamble-based policy and caverna will",
    "start": "1538039",
    "end": "1544520"
  },
  {
    "text": "validate that signature before allowing it to run none of that involves any programming language on your part",
    "start": "1544520",
    "end": "1551179"
  },
  {
    "text": "uh caverno also now has the ability to clone multiple objects in a generate rule so prior to this feature generate",
    "start": "1551179",
    "end": "1558500"
  },
  {
    "text": "was sort of a one-to-one mapping you triggered on one resource and you got one resource but now this allows",
    "start": "1558500",
    "end": "1564559"
  },
  {
    "text": "something like create a new namespace and in the same rule clone out 10 things for example you can do that in just a",
    "start": "1564559",
    "end": "1570799"
  },
  {
    "text": "single rule definition now uh get Ops friendly pod controller rule autogen I didn't talk about autogen but",
    "start": "1570799",
    "end": "1577580"
  },
  {
    "text": "caverno has an ability whereby you can write a rule for a pod and we will automatically translate that for all of",
    "start": "1577580",
    "end": "1583820"
  },
  {
    "text": "the standard kubernetes pod controllers that means that you don't have to write separate rules for deployments demon set",
    "start": "1583820",
    "end": "1589100"
  },
  {
    "text": "staple sets jobs or cron jobs caverna will automatically do that if it sees that you're only trying to match on a",
    "start": "1589100",
    "end": "1595039"
  },
  {
    "text": "pod in this version we moved that auto generation capability from the spec",
    "start": "1595039",
    "end": "1600320"
  },
  {
    "text": "object up into status so those of you that are using git Ops tools to deploy",
    "start": "1600320",
    "end": "1605539"
  },
  {
    "text": "your coverno policies you can do that very simply without having them go to war",
    "start": "1605539",
    "end": "1611120"
  },
  {
    "text": "or providing any exceptions we overhauled the reporting system uh we completely rewrote the reporting system",
    "start": "1611120",
    "end": "1617179"
  },
  {
    "text": "to be faster and more accurate uh lots more there open Telemetry support for",
    "start": "1617179",
    "end": "1622880"
  },
  {
    "text": "those of you we already had Prometheus support now we added open Telemetry uh grpc is what's supported right now",
    "start": "1622880",
    "end": "1628640"
  },
  {
    "text": "we didn't talk about the James path system those that are familiar with Json path there's a similar system out there",
    "start": "1628640",
    "end": "1635059"
  },
  {
    "text": "called James path and caverno completely brings in the James path system but we",
    "start": "1635059",
    "end": "1640460"
  },
  {
    "text": "also create brand new filters that are only endemic to caverno and in this release we added two more filters random",
    "start": "1640460",
    "end": "1646340"
  },
  {
    "text": "the ability for you to create a randomized string based upon a regex pattern that can be as simple or as",
    "start": "1646340",
    "end": "1651559"
  },
  {
    "text": "complex as you want so for example if you want to generate an API key if you wanted to generate a pod hash caverno",
    "start": "1651559",
    "end": "1657559"
  },
  {
    "text": "can do that internally with no other logic that you need x509 decode the",
    "start": "1657559",
    "end": "1663500"
  },
  {
    "text": "ability to decode an x509 certificate and parse out the yaml in any policy definition so for example you can now do",
    "start": "1663500",
    "end": "1670159"
  },
  {
    "text": "things like I want to know in a policy report perhaps if any of certificates that are in my cluster are going to",
    "start": "1670159",
    "end": "1677419"
  },
  {
    "text": "expire in the next 30 days and",
    "start": "1677419",
    "end": "1684039"
  },
  {
    "text": "I invite you to get involved caberno has over 3 000 Stars uh there is a",
    "start": "1684080",
    "end": "1689659"
  },
  {
    "text": "contributing guide we have good first issues that are labeled and we keep those up to date documentation you can",
    "start": "1689659",
    "end": "1696140"
  },
  {
    "text": "find at carverner.io our policy Library there's over 230 sample policies and",
    "start": "1696140",
    "end": "1702919"
  },
  {
    "text": "that grows and these are for ecosystem tools far beyond just kubernetes itself so istio link or D we've implemented",
    "start": "1702919",
    "end": "1709880"
  },
  {
    "text": "their best practices Argo flux assert manager some AWS I don't even know all",
    "start": "1709880",
    "end": "1717140"
  },
  {
    "text": "of them and it grows all the time also that policy library is Community Driven any of you can write a policy maybe for",
    "start": "1717140",
    "end": "1723440"
  },
  {
    "text": "a tool that you don't see for your own use case we will gladly accept it we will work with you to test it and make",
    "start": "1723440",
    "end": "1728720"
  },
  {
    "text": "sure that it's solid and then we'll add it to the library and make sure that everybody can access it we have a weekly",
    "start": "1728720",
    "end": "1734179"
  },
  {
    "text": "contributors meeting we have a quarterly end users meeting we have two channels that are on slack one uh one is on",
    "start": "1734179",
    "end": "1741380"
  },
  {
    "text": "kubernetes slack with caverno and caverno Dev on caverna there's about 1400 users and on cncf Slack",
    "start": "1741380",
    "end": "1748580"
  },
  {
    "text": "and with that I want to thank everybody for coming and we will be glad to take questions Dallas has the mic please wait",
    "start": "1748580",
    "end": "1754520"
  },
  {
    "text": "for Dallas to bring the mic to you raise your hand if you have a question we'll be glad to take that with the remaining",
    "start": "1754520",
    "end": "1760220"
  },
  {
    "text": "time",
    "start": "1760220",
    "end": "1762580"
  },
  {
    "text": "hi thanks for the talk uh is it possible to write a policy for one resource where",
    "start": "1770179",
    "end": "1776419"
  },
  {
    "text": "it's evaluated against another resource in that same name space absolutely okay",
    "start": "1776419",
    "end": "1782240"
  },
  {
    "text": "caverna has the ability to do API calls to the kubernetes API",
    "start": "1782240",
    "end": "1787279"
  },
  {
    "text": "and um get any resource that you want and it",
    "start": "1787279",
    "end": "1792740"
  },
  {
    "text": "has a rich variable system that allows you to store that as a variable to perform transforms against it and to",
    "start": "1792740",
    "end": "1798320"
  },
  {
    "text": "substitute that variable at basically any point in the policy that you want to",
    "start": "1798320",
    "end": "1805059"
  },
  {
    "text": "any other questions one down here or one over here okay",
    "start": "1805340",
    "end": "1810340"
  },
  {
    "text": "thanks for the talk um can caverno uh as part of his triggers send a web hook to a different",
    "start": "1811940",
    "end": "1817340"
  },
  {
    "text": "service and have that service send back yay or nay no it does not do that today",
    "start": "1817340",
    "end": "1823340"
  },
  {
    "text": "that's an interesting use case I come come and talk to us in the caverno booth I'd like to understand a little bit more about your use case",
    "start": "1823340",
    "end": "1830799"
  },
  {
    "text": "um thank you for the talk uh is there a way to put timeouts when I have too many",
    "start": "1835340",
    "end": "1841460"
  },
  {
    "text": "rules and just takes too long to validate something like that yeah so caverno exposes a field uh on the policy",
    "start": "1841460",
    "end": "1849260"
  },
  {
    "text": "on every policy where you can set the web hook timeout behavior that you want in addition to the failure Behavior so if you want if you'd rather fail open",
    "start": "1849260",
    "end": "1855679"
  },
  {
    "text": "for some reason you can configure that on a policy if you want to change the web hook timeout from the default I",
    "start": "1855679",
    "end": "1862580"
  },
  {
    "text": "think it's like 10 seconds to the maximum which the API server allows us 30 seconds you can easily do that those",
    "start": "1862580",
    "end": "1868039"
  },
  {
    "text": "are just the additional two fields that you define hello thank you for the talk so I have",
    "start": "1868039",
    "end": "1873320"
  },
  {
    "text": "two questions one is I'm new to cover no so first question is how much different it is from Oppa or uh you know we hear",
    "start": "1873320",
    "end": "1882559"
  },
  {
    "text": "about our open policy agent all the time and the second question I had is like can uh",
    "start": "1882559",
    "end": "1888380"
  },
  {
    "text": "Governor create attestations for you know images or any of the other",
    "start": "1888380",
    "end": "1894200"
  },
  {
    "text": "artifacts that you might have yeah so two two different questions very different questions the first is how",
    "start": "1894200",
    "end": "1899539"
  },
  {
    "text": "does it relate or differ from Oppa in Opa with and without gatekeeper um caverna was written from the ground up",
    "start": "1899539",
    "end": "1905179"
  },
  {
    "text": "only for kubernetes caverno is not a general purpose policy engine at this stage and that's a conscious design",
    "start": "1905179",
    "end": "1911960"
  },
  {
    "text": "decision not a mistake or not something that and the reason that we wanted to do that is because we wanted to shift the",
    "start": "1911960",
    "end": "1918919"
  },
  {
    "text": "burden away from users of having to write and maintain a programming language even if you're capable of doing",
    "start": "1918919",
    "end": "1924679"
  },
  {
    "text": "that we want to shift that burden so that that process is easier it's easier to maintain it's easier to reason about",
    "start": "1924679",
    "end": "1930980"
  },
  {
    "text": "maybe you who are capable of writing a programming language can collaborate with your security team who is not and",
    "start": "1930980",
    "end": "1937399"
  },
  {
    "text": "everybody be on the same page you can reason about policies and also you can use your existing tools to manipulate",
    "start": "1937399",
    "end": "1943159"
  },
  {
    "text": "and even write those policies so if you want to use customize to do things like add additional exclusions add additional",
    "start": "1943159",
    "end": "1949580"
  },
  {
    "text": "preconditions which we didn't talk about add additional conditions to a deny statement there's no block scalar with a bunch of",
    "start": "1949580",
    "end": "1956240"
  },
  {
    "text": "yaml underneath it that you have to manipulate you can do that with existing tools and processes that you have today",
    "start": "1956240",
    "end": "1961640"
  },
  {
    "text": "the second question is is Governor capable of creating attestations no Governor does not create attestations",
    "start": "1961640",
    "end": "1968360"
  },
  {
    "text": "nor does it sign images it is in the runtime path of ensuring that the attestations and signatures are present",
    "start": "1968360",
    "end": "1975740"
  },
  {
    "text": "and are valid based upon your definition any other questions oh hi um at what",
    "start": "1975740",
    "end": "1983179"
  },
  {
    "text": "point are we doing too much yaml and we should use a real programming language like is there a",
    "start": "1983179",
    "end": "1989500"
  },
  {
    "text": "a recommended boundary or",
    "start": "1989500",
    "end": "1995419"
  },
  {
    "text": "um uh I don't know that so I I'll I'll start I'll start with one thing",
    "start": "1995419",
    "end": "2001539"
  },
  {
    "text": "anecdotally I'm very involved in the in the caverno community maybe those of you who use caverno have probably seen or",
    "start": "2001539",
    "end": "2008200"
  },
  {
    "text": "maybe received help from me from slack I'm also very involved in the kubernetes community in a number of different ways",
    "start": "2008200",
    "end": "2013360"
  },
  {
    "text": "in the time that I've been I mean at this point in time listening to real",
    "start": "2013360",
    "end": "2018460"
  },
  {
    "text": "world use cases from thousands of people I only know of two use cases that",
    "start": "2018460",
    "end": "2023500"
  },
  {
    "text": "caverno has no way to accomplish both of those are tracking for completion in the next version so at what point what where",
    "start": "2023500",
    "end": "2030220"
  },
  {
    "text": "is the inflection point between trying to Wrangle yaml and having to go to a programming language and the answer is",
    "start": "2030220",
    "end": "2036460"
  },
  {
    "text": "that really depends on you your skill set and what you're trying to achieve if you have highly highly complex policies",
    "start": "2036460",
    "end": "2043200"
  },
  {
    "text": "with a bunch of I I can't even come up with a concrete example a lot of",
    "start": "2043200",
    "end": "2048220"
  },
  {
    "text": "conditional checks that need to just be totally off the wall that might be better purpose served for a policy",
    "start": "2048220",
    "end": "2054520"
  },
  {
    "text": "engine that's capable exposing a program framing language I will also say that we have on the roadmap and we are trying to",
    "start": "2054520",
    "end": "2062080"
  },
  {
    "text": "work towards the ability for caverno to support a language like Q Lang or cell or something like that that's not today",
    "start": "2062080",
    "end": "2068138"
  },
  {
    "text": "but that's we're looking at that for tomorrow",
    "start": "2068139",
    "end": "2072658"
  },
  {
    "text": "thank you you actually touched on something I was uh very interested to see the the cosine implementation there",
    "start": "2073359",
    "end": "2079240"
  },
  {
    "text": "and I can really appreciate that um cosine does have the ability to kind of do some policy evaluation itself",
    "start": "2079240",
    "end": "2086020"
  },
  {
    "text": "how does it overlap with what you're doing kind of like uh you know for a use case uh being able to validate",
    "start": "2086020",
    "end": "2092919"
  },
  {
    "text": "Providence on an image with in Toto attestations yeah so so conferno does",
    "start": "2092919",
    "end": "2098080"
  },
  {
    "text": "support checking the in total attestations but the one of the differences and I I",
    "start": "2098080",
    "end": "2103240"
  },
  {
    "text": "will not pretend to be knowledgeable to a certain extent on on their admission",
    "start": "2103240",
    "end": "2108700"
  },
  {
    "text": "controller but I believe that theirs requires for attestation checks use of Q Lang to be able to validate them caberno",
    "start": "2108700",
    "end": "2115720"
  },
  {
    "text": "does all that without Q Lang today with simple expressions using James path or just simple patterns we have time for",
    "start": "2115720",
    "end": "2122560"
  },
  {
    "text": "one more question and then the moderator is going to kick us out okay the trying to understand uh two parts",
    "start": "2122560",
    "end": "2129040"
  },
  {
    "text": "one is given that you have multiple policy documents that might match a given resource is there any ordering",
    "start": "2129040",
    "end": "2135099"
  },
  {
    "text": "constraints yes applies yes good question so two two important constructs",
    "start": "2135099",
    "end": "2140380"
  },
  {
    "text": "about caverno and this is important to take away there is no possibility in caverno for one rule to usurp or",
    "start": "2140380",
    "end": "2146440"
  },
  {
    "text": "countermand another rules only serve to extend the failure domain but within a policy there is an",
    "start": "2146440",
    "end": "2153040"
  },
  {
    "text": "application order if you want that behavior you can Define I want to start at the top and evaluate down and only",
    "start": "2153040",
    "end": "2159339"
  },
  {
    "text": "one or the first one much Matt must match or all of these must match you can change that behavior you can leave it",
    "start": "2159339",
    "end": "2165640"
  },
  {
    "text": "default it's up to you but no matter what Behavior you choose you can't have one policy countermand",
    "start": "2165640",
    "end": "2171220"
  },
  {
    "text": "another so there's we close that security hole off the related question",
    "start": "2171220",
    "end": "2176380"
  },
  {
    "text": "was given that you can have these generated policies there becomes a kind",
    "start": "2176380",
    "end": "2181540"
  },
  {
    "text": "of a nasty debugging infinite Loop potential in there or something could generate a policy",
    "start": "2181540",
    "end": "2187839"
  },
  {
    "text": "a generator could generate a bunch of other resources which go through Kevin and generate more resources and and on",
    "start": "2187839",
    "end": "2194320"
  },
  {
    "text": "and on it goes how do you debug something like that we have we have internal Protections in logic built in",
    "start": "2194320",
    "end": "2200440"
  },
  {
    "text": "to catch situations like that so it doesn't cause a runaway train I I don't have full details on that but",
    "start": "2200440",
    "end": "2206920"
  },
  {
    "text": "but we we've thought of that problem we've experienced it and we we have some logic that will prevent that loop from",
    "start": "2206920",
    "end": "2211960"
  },
  {
    "text": "occurring all right thank you everybody for coming to this talk will be available here for additional questions",
    "start": "2211960",
    "end": "2218880"
  }
]