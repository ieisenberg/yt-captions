[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "hello everyone thanks for tuning in to",
    "start": "640",
    "end": "2639"
  },
  {
    "text": "the cortex deep dive",
    "start": "2639",
    "end": "4640"
  },
  {
    "text": "i'm super excited to talk to you about",
    "start": "4640",
    "end": "6879"
  },
  {
    "text": "everything that happened since the 1.0",
    "start": "6879",
    "end": "8960"
  },
  {
    "text": "release",
    "start": "8960",
    "end": "9519"
  },
  {
    "text": "and beyond so before we dive into it a",
    "start": "9519",
    "end": "12799"
  },
  {
    "text": "quick introduction about myself",
    "start": "12799",
    "end": "15759"
  },
  {
    "text": "i'm gautam i'm a software engineer at",
    "start": "15759",
    "end": "17680"
  },
  {
    "text": "tefano labs and i'm a prometheus and",
    "start": "17680",
    "end": "20000"
  },
  {
    "text": "cortex maintainer",
    "start": "20000",
    "end": "21359"
  },
  {
    "text": "i've actually been contributing to",
    "start": "21359",
    "end": "23439"
  },
  {
    "text": "prometheus for nearly four years now",
    "start": "23439",
    "end": "26080"
  },
  {
    "text": "and about two and a half years ago i",
    "start": "26080",
    "end": "28960"
  },
  {
    "text": "joined grafana labs",
    "start": "28960",
    "end": "30080"
  },
  {
    "text": "to work on cortex so we use cortex to do",
    "start": "30080",
    "end": "34079"
  },
  {
    "text": "a hosted prometheus service at the",
    "start": "34079",
    "end": "35600"
  },
  {
    "text": "funnel labs and",
    "start": "35600",
    "end": "37040"
  },
  {
    "text": "between prometheus and cortex i've also",
    "start": "37040",
    "end": "39920"
  },
  {
    "text": "worked a little bit on loki",
    "start": "39920",
    "end": "41760"
  },
  {
    "text": "a lot open source log aggregation system",
    "start": "41760",
    "end": "43840"
  },
  {
    "text": "built on top of",
    "start": "43840",
    "end": "44879"
  },
  {
    "text": "cortex inspired by prometheus",
    "start": "44879",
    "end": "48320"
  },
  {
    "text": "anyways so let's see what the talk will",
    "start": "48320",
    "end": "51360"
  },
  {
    "text": "contain",
    "start": "51360",
    "end": "52640"
  },
  {
    "text": "so initially i'm going to give you a",
    "start": "52640",
    "end": "54000"
  },
  {
    "text": "very quick introduction of what cortex",
    "start": "54000",
    "end": "55760"
  },
  {
    "text": "is what use cases does it solve",
    "start": "55760",
    "end": "57760"
  },
  {
    "text": "and then i'm going to talk about the 1.0",
    "start": "57760",
    "end": "59840"
  },
  {
    "text": "release what does it mean for our end",
    "start": "59840",
    "end": "61680"
  },
  {
    "text": "users and community",
    "start": "61680",
    "end": "63199"
  },
  {
    "text": "and then this is uh the next topic the",
    "start": "63199",
    "end": "65680"
  },
  {
    "text": "block search engine is something i'm",
    "start": "65680",
    "end": "67119"
  },
  {
    "text": "super excited about and i would",
    "start": "67119",
    "end": "69119"
  },
  {
    "text": "like i can't wait to talk about it",
    "start": "69119",
    "end": "72159"
  },
  {
    "text": "and finally i'll share some of the other",
    "start": "72159",
    "end": "74240"
  },
  {
    "text": "things that are on the roadmap",
    "start": "74240",
    "end": "75920"
  },
  {
    "text": "and then we can conclude the talk all",
    "start": "75920",
    "end": "78479"
  },
  {
    "text": "right",
    "start": "78479",
    "end": "79200"
  },
  {
    "text": "diving in so an introduction",
    "start": "79200",
    "end": "82880"
  },
  {
    "start": "80000",
    "end": "496000"
  },
  {
    "text": "so this is the cortex deep time uh so i",
    "start": "82880",
    "end": "86080"
  },
  {
    "text": "am assuming most of you are familiar",
    "start": "86080",
    "end": "87920"
  },
  {
    "text": "with prometheus",
    "start": "87920",
    "end": "89680"
  },
  {
    "text": "but for those of you who are not so this",
    "start": "89680",
    "end": "91680"
  },
  {
    "text": "is just a prometheus standard from",
    "start": "91680",
    "end": "93280"
  },
  {
    "text": "ethious setup uh basically prometheus is",
    "start": "93280",
    "end": "95439"
  },
  {
    "text": "collecting metrics from nginx golang",
    "start": "95439",
    "end": "98000"
  },
  {
    "text": "like an application and a database it",
    "start": "98000",
    "end": "100079"
  },
  {
    "text": "can collect a metric from anywhere",
    "start": "100079",
    "end": "102720"
  },
  {
    "text": "and this is like this looks like a",
    "start": "102720",
    "end": "104399"
  },
  {
    "text": "typical application in a company",
    "start": "104399",
    "end": "107200"
  },
  {
    "text": "now you can you can alert on it you can",
    "start": "107200",
    "end": "109119"
  },
  {
    "text": "graph on it uh",
    "start": "109119",
    "end": "110240"
  },
  {
    "text": "on all the metrics that you require and",
    "start": "110240",
    "end": "112079"
  },
  {
    "text": "this works really well",
    "start": "112079",
    "end": "114079"
  },
  {
    "text": "for example if you look at the",
    "start": "114079",
    "end": "115600"
  },
  {
    "text": "dashboards uh this is how the typical",
    "start": "115600",
    "end": "118079"
  },
  {
    "text": "dashboard would look like like you have",
    "start": "118079",
    "end": "119600"
  },
  {
    "text": "the qps and latency for different uh",
    "start": "119600",
    "end": "122079"
  },
  {
    "text": "layers now this works",
    "start": "122079",
    "end": "125119"
  },
  {
    "text": "really really well uh until you have to",
    "start": "125119",
    "end": "127439"
  },
  {
    "text": "scale",
    "start": "127439",
    "end": "128239"
  },
  {
    "text": "and typically uh there are problems if",
    "start": "128239",
    "end": "131360"
  },
  {
    "text": "you scale beyond one prometheus but why",
    "start": "131360",
    "end": "133360"
  },
  {
    "text": "would you need to scale beyond a",
    "start": "133360",
    "end": "134800"
  },
  {
    "text": "prometheus",
    "start": "134800",
    "end": "135680"
  },
  {
    "text": "why can't you use a single prometheus",
    "start": "135680",
    "end": "137040"
  },
  {
    "text": "for everything one",
    "start": "137040",
    "end": "139040"
  },
  {
    "text": "a prometheus is not a horizontally",
    "start": "139040",
    "end": "140560"
  },
  {
    "text": "scalable system but it scales really",
    "start": "140560",
    "end": "142640"
  },
  {
    "text": "really well on a single node",
    "start": "142640",
    "end": "144560"
  },
  {
    "text": "having said that there are other reasons",
    "start": "144560",
    "end": "146239"
  },
  {
    "text": "you might want to use multiple",
    "start": "146239",
    "end": "147440"
  },
  {
    "text": "prometheus",
    "start": "147440",
    "end": "148720"
  },
  {
    "text": "servers for example if you run your",
    "start": "148720",
    "end": "151440"
  },
  {
    "text": "application in different",
    "start": "151440",
    "end": "152959"
  },
  {
    "text": "different data centers or different",
    "start": "152959",
    "end": "154480"
  },
  {
    "text": "network partitions",
    "start": "154480",
    "end": "156080"
  },
  {
    "text": "you need to run a prometheus per data",
    "start": "156080",
    "end": "158000"
  },
  {
    "text": "center this is uh this is just because",
    "start": "158000",
    "end": "159920"
  },
  {
    "text": "prometheus needs to reach all these",
    "start": "159920",
    "end": "161440"
  },
  {
    "text": "applications to collect the metrics",
    "start": "161440",
    "end": "163120"
  },
  {
    "text": "and it's also a best practice to run",
    "start": "163120",
    "end": "165440"
  },
  {
    "text": "prometheus close to the applications",
    "start": "165440",
    "end": "167040"
  },
  {
    "text": "that it's monitoring",
    "start": "167040",
    "end": "168560"
  },
  {
    "text": "so this would mean if you have three",
    "start": "168560",
    "end": "169840"
  },
  {
    "text": "data centers you have three prometheus",
    "start": "169840",
    "end": "171280"
  },
  {
    "text": "servers running and this actually works",
    "start": "171280",
    "end": "173360"
  },
  {
    "text": "really well",
    "start": "173360",
    "end": "175040"
  },
  {
    "text": "uh for example if you get an alert you",
    "start": "175040",
    "end": "176800"
  },
  {
    "text": "can kind of uh in the alert you will",
    "start": "176800",
    "end": "178800"
  },
  {
    "text": "know which prometheus sent it and then",
    "start": "178800",
    "end": "180800"
  },
  {
    "text": "uh you can point your trafana to that",
    "start": "180800",
    "end": "182560"
  },
  {
    "text": "prometheus server",
    "start": "182560",
    "end": "184319"
  },
  {
    "text": "for example if you look at the dashboard",
    "start": "184319",
    "end": "186000"
  },
  {
    "text": "this is how the dashboard will",
    "start": "186000",
    "end": "187360"
  },
  {
    "text": "will evolve so basically there are three",
    "start": "187360",
    "end": "189920"
  },
  {
    "text": "different data centers",
    "start": "189920",
    "end": "191280"
  },
  {
    "text": "and you can just select the data source",
    "start": "191280",
    "end": "193360"
  },
  {
    "text": "and the moment you select the data",
    "start": "193360",
    "end": "194800"
  },
  {
    "text": "source",
    "start": "194800",
    "end": "195519"
  },
  {
    "text": "the metrics and graphs for that",
    "start": "195519",
    "end": "198159"
  },
  {
    "text": "prometheus server are visible to you",
    "start": "198159",
    "end": "200080"
  },
  {
    "text": "so if you get an alert from you west one",
    "start": "200080",
    "end": "202400"
  },
  {
    "text": "you get you just go to your grafana",
    "start": "202400",
    "end": "204319"
  },
  {
    "text": "say hey show me this dashboard for eu",
    "start": "204319",
    "end": "206319"
  },
  {
    "text": "west one and you have your information",
    "start": "206319",
    "end": "209680"
  },
  {
    "text": "now this works really well until you",
    "start": "209680",
    "end": "211519"
  },
  {
    "text": "have to combine the data between",
    "start": "211519",
    "end": "213120"
  },
  {
    "text": "different prometheus servers",
    "start": "213120",
    "end": "215120"
  },
  {
    "text": "what do i mean by combined data for",
    "start": "215120",
    "end": "217840"
  },
  {
    "text": "example",
    "start": "217840",
    "end": "218720"
  },
  {
    "text": "you will be via this solution you will",
    "start": "218720",
    "end": "220720"
  },
  {
    "text": "be able to see the qps per",
    "start": "220720",
    "end": "222319"
  },
  {
    "text": "data center but what if you want to",
    "start": "222319",
    "end": "224000"
  },
  {
    "text": "understand what the globe global",
    "start": "224000",
    "end": "226080"
  },
  {
    "text": "qps across all the prometheus reverses",
    "start": "226080",
    "end": "230319"
  },
  {
    "text": "so that's tricky but it still can be",
    "start": "230319",
    "end": "232720"
  },
  {
    "text": "done with just prometheus",
    "start": "232720",
    "end": "235200"
  },
  {
    "text": "the idea is you run a central prometheus",
    "start": "235200",
    "end": "237360"
  },
  {
    "text": "the federation prometheus which kind of",
    "start": "237360",
    "end": "239760"
  },
  {
    "text": "scrapes data from the leaf prometheus",
    "start": "239760",
    "end": "241680"
  },
  {
    "text": "servers",
    "start": "241680",
    "end": "242799"
  },
  {
    "text": "so this has several challenges the first",
    "start": "242799",
    "end": "244879"
  },
  {
    "text": "one being you need to open up firewalls",
    "start": "244879",
    "end": "247280"
  },
  {
    "text": "and port so that",
    "start": "247280",
    "end": "248480"
  },
  {
    "text": "the central prometheus can reach the",
    "start": "248480",
    "end": "250560"
  },
  {
    "text": "leaf prometheuses",
    "start": "250560",
    "end": "252239"
  },
  {
    "text": "but the bigger problem is uh if you",
    "start": "252239",
    "end": "254239"
  },
  {
    "text": "collect all the data",
    "start": "254239",
    "end": "256000"
  },
  {
    "text": "from all the prometheuses to the central",
    "start": "256000",
    "end": "257680"
  },
  {
    "text": "prometheus this will be putting more and",
    "start": "257680",
    "end": "259840"
  },
  {
    "text": "more loading into the central prometheus",
    "start": "259840",
    "end": "261680"
  },
  {
    "text": "for example if you have three prometheus",
    "start": "261680",
    "end": "263120"
  },
  {
    "text": "servers",
    "start": "263120",
    "end": "264000"
  },
  {
    "text": "all scraping a million time series the",
    "start": "264000",
    "end": "266639"
  },
  {
    "text": "central global federation prometheus",
    "start": "266639",
    "end": "268400"
  },
  {
    "text": "would have to spread three million time",
    "start": "268400",
    "end": "269680"
  },
  {
    "text": "series",
    "start": "269680",
    "end": "270479"
  },
  {
    "text": "and this typically starts breaking down",
    "start": "270479",
    "end": "273440"
  },
  {
    "text": "and it doesn't work that way",
    "start": "273440",
    "end": "275280"
  },
  {
    "text": "to make this scale what people do is",
    "start": "275280",
    "end": "277520"
  },
  {
    "text": "they only",
    "start": "277520",
    "end": "278560"
  },
  {
    "text": "scrape certain metrics or even",
    "start": "278560",
    "end": "280840"
  },
  {
    "text": "pre-aggregated metrics",
    "start": "280840",
    "end": "282720"
  },
  {
    "text": "so in this case you would only expose",
    "start": "282720",
    "end": "286880"
  },
  {
    "text": "the qps for prometheus to the global",
    "start": "286880",
    "end": "290080"
  },
  {
    "text": "federation's",
    "start": "290080",
    "end": "290960"
  },
  {
    "text": "prometheus and then because you have",
    "start": "290960",
    "end": "294080"
  },
  {
    "text": "three different qps servers you just do",
    "start": "294080",
    "end": "295919"
  },
  {
    "text": "qps you just do a sum of all of three",
    "start": "295919",
    "end": "298160"
  },
  {
    "text": "and you get the global prometheus uh",
    "start": "298160",
    "end": "300240"
  },
  {
    "text": "global qps",
    "start": "300240",
    "end": "302800"
  },
  {
    "text": "so this works uh really well if you know",
    "start": "302800",
    "end": "306160"
  },
  {
    "text": "in advance what you want to kind of",
    "start": "306160",
    "end": "308560"
  },
  {
    "text": "aggregate together",
    "start": "308560",
    "end": "310240"
  },
  {
    "text": "if you suddenly want to do an ad hoc",
    "start": "310240",
    "end": "311840"
  },
  {
    "text": "aggregation across prometheus servers",
    "start": "311840",
    "end": "313759"
  },
  {
    "text": "this doesn't uh really work so the",
    "start": "313759",
    "end": "317360"
  },
  {
    "text": "alternate way to solve this global view",
    "start": "317360",
    "end": "319680"
  },
  {
    "text": "problem is to use",
    "start": "319680",
    "end": "321360"
  },
  {
    "text": "cortex this is one of the main use cases",
    "start": "321360",
    "end": "323199"
  },
  {
    "text": "of cortex there are several other use",
    "start": "323199",
    "end": "324880"
  },
  {
    "text": "cases",
    "start": "324880",
    "end": "326240"
  },
  {
    "text": "um in this case uh you run a central",
    "start": "326240",
    "end": "329199"
  },
  {
    "text": "cortex cluster",
    "start": "329199",
    "end": "330400"
  },
  {
    "text": "cortex is horizontally scalable so you",
    "start": "330400",
    "end": "332160"
  },
  {
    "text": "don't need to do any aggregations you",
    "start": "332160",
    "end": "333919"
  },
  {
    "text": "just",
    "start": "333919",
    "end": "334880"
  },
  {
    "text": "send all the samples that prometheus",
    "start": "334880",
    "end": "336800"
  },
  {
    "text": "scraped the central server",
    "start": "336800",
    "end": "338320"
  },
  {
    "text": "and you just point your grafana at it",
    "start": "338320",
    "end": "340479"
  },
  {
    "text": "now because the central cortex server",
    "start": "340479",
    "end": "342960"
  },
  {
    "text": "cortex cluster has all the samples you",
    "start": "342960",
    "end": "345120"
  },
  {
    "text": "can basically write a query that",
    "start": "345120",
    "end": "347039"
  },
  {
    "text": "combines data from all the different",
    "start": "347039",
    "end": "348479"
  },
  {
    "text": "prometheuses",
    "start": "348479",
    "end": "349919"
  },
  {
    "text": "we have a standard uh protocol called",
    "start": "349919",
    "end": "352240"
  },
  {
    "text": "remote right you just add a few lines of",
    "start": "352240",
    "end": "354160"
  },
  {
    "text": "config to your prometheus servers and",
    "start": "354160",
    "end": "356160"
  },
  {
    "text": "all of them will be sending data to a",
    "start": "356160",
    "end": "358160"
  },
  {
    "text": "central cortex cluster",
    "start": "358160",
    "end": "361120"
  },
  {
    "text": "so this is just one use case there are",
    "start": "361120",
    "end": "363039"
  },
  {
    "text": "several other use cases",
    "start": "363039",
    "end": "364400"
  },
  {
    "text": "uh but this is a good introduction to",
    "start": "364400",
    "end": "366479"
  },
  {
    "text": "cortex i think",
    "start": "366479",
    "end": "368560"
  },
  {
    "text": "so to summarize uh",
    "start": "368560",
    "end": "371600"
  },
  {
    "text": "or to give you a high level view cortex",
    "start": "371600",
    "end": "373759"
  },
  {
    "text": "is a horizontally scalable",
    "start": "373759",
    "end": "375680"
  },
  {
    "text": "highly available long-term storage for",
    "start": "375680",
    "end": "377840"
  },
  {
    "text": "prometheus",
    "start": "377840",
    "end": "379199"
  },
  {
    "text": "it gives you a global view like",
    "start": "379199",
    "end": "380960"
  },
  {
    "text": "essentially it combines data from",
    "start": "380960",
    "end": "382639"
  },
  {
    "text": "different prometheus servers um",
    "start": "382639",
    "end": "384880"
  },
  {
    "text": "it you can store data long term as in",
    "start": "384880",
    "end": "387520"
  },
  {
    "text": "people store",
    "start": "387520",
    "end": "388639"
  },
  {
    "text": "terabytes and petabytes of data across",
    "start": "388639",
    "end": "391120"
  },
  {
    "text": "three years or four years now",
    "start": "391120",
    "end": "393520"
  },
  {
    "text": "and one other key fact uh like key",
    "start": "393520",
    "end": "396400"
  },
  {
    "text": "feature of",
    "start": "396400",
    "end": "397280"
  },
  {
    "text": "cortex is that it's multitenant so",
    "start": "397280",
    "end": "399600"
  },
  {
    "text": "essentially we run cortex with",
    "start": "399600",
    "end": "401680"
  },
  {
    "text": "three thousand plus uh tenants uh but",
    "start": "401680",
    "end": "404240"
  },
  {
    "text": "it's a single cluster",
    "start": "404240",
    "end": "405680"
  },
  {
    "text": "that does all of that so that so this is",
    "start": "405680",
    "end": "409039"
  },
  {
    "text": "a high level overview",
    "start": "409039",
    "end": "411520"
  },
  {
    "text": "so just a quick history of what's been",
    "start": "411520",
    "end": "413919"
  },
  {
    "text": "happening so",
    "start": "413919",
    "end": "415520"
  },
  {
    "text": "it was started in 2016",
    "start": "415520",
    "end": "418960"
  },
  {
    "text": "and then about two years ago we started",
    "start": "418960",
    "end": "421599"
  },
  {
    "text": "focusing on query performance and",
    "start": "421599",
    "end": "423199"
  },
  {
    "text": "scalability",
    "start": "423199",
    "end": "424080"
  },
  {
    "text": "and like in this in a span of six months",
    "start": "424080",
    "end": "427120"
  },
  {
    "text": "we made our queries 10x faster we've",
    "start": "427120",
    "end": "429599"
  },
  {
    "text": "done a lot of improvements a lot of",
    "start": "429599",
    "end": "431120"
  },
  {
    "text": "caching",
    "start": "431120",
    "end": "432319"
  },
  {
    "text": "and it was actually working really well",
    "start": "432319",
    "end": "435120"
  },
  {
    "text": "at a",
    "start": "435120",
    "end": "435680"
  },
  {
    "text": "really large scale for like queries that",
    "start": "435680",
    "end": "437680"
  },
  {
    "text": "touch months of data across hundreds of",
    "start": "437680",
    "end": "439680"
  },
  {
    "text": "thousands of cities",
    "start": "439680",
    "end": "441680"
  },
  {
    "text": "but uh and then like later it was",
    "start": "441680",
    "end": "444319"
  },
  {
    "text": "donated to the cncf sandbox and after",
    "start": "444319",
    "end": "446560"
  },
  {
    "text": "that we started focusing on",
    "start": "446560",
    "end": "448160"
  },
  {
    "text": "ease of use and community we started",
    "start": "448160",
    "end": "451120"
  },
  {
    "text": "adding more and more end users we made",
    "start": "451120",
    "end": "453120"
  },
  {
    "text": "sure you can run cortex",
    "start": "453120",
    "end": "454400"
  },
  {
    "text": "as a single binary and other things so",
    "start": "454400",
    "end": "457440"
  },
  {
    "text": "that it's easy to get started and manage",
    "start": "457440",
    "end": "460000"
  },
  {
    "text": "we launched our website and quite",
    "start": "460000",
    "end": "461919"
  },
  {
    "text": "recently about",
    "start": "461919",
    "end": "463120"
  },
  {
    "text": "three months ago we did our cortex one",
    "start": "463120",
    "end": "465520"
  },
  {
    "text": "dot release something that i will talk",
    "start": "465520",
    "end": "466960"
  },
  {
    "text": "to you about",
    "start": "466960",
    "end": "469360"
  },
  {
    "text": "so if you want to know more about the",
    "start": "469360",
    "end": "471599"
  },
  {
    "text": "cortex architecture how it works and why",
    "start": "471599",
    "end": "474000"
  },
  {
    "text": "it was architected that way i would",
    "start": "474000",
    "end": "476000"
  },
  {
    "text": "definitely recommend this uh cortex 101",
    "start": "476000",
    "end": "479199"
  },
  {
    "text": "talk",
    "start": "479199",
    "end": "479599"
  },
  {
    "text": "given uh given uh at kubecon north",
    "start": "479599",
    "end": "482720"
  },
  {
    "text": "america",
    "start": "482720",
    "end": "483280"
  },
  {
    "text": "uh uh last year by chris uh i believe",
    "start": "483280",
    "end": "486720"
  },
  {
    "text": "the talk in the slides i'll share",
    "start": "486720",
    "end": "488080"
  },
  {
    "text": "i'll be sharing these slides so feel",
    "start": "488080",
    "end": "490240"
  },
  {
    "text": "free to watch these uh",
    "start": "490240",
    "end": "492080"
  },
  {
    "text": "watch the talk to understand more about",
    "start": "492080",
    "end": "493919"
  },
  {
    "text": "cortex",
    "start": "493919",
    "end": "495840"
  },
  {
    "text": "cool so we've cut version 1.0 a few",
    "start": "495840",
    "end": "499680"
  },
  {
    "start": "496000",
    "end": "671000"
  },
  {
    "text": "months ago",
    "start": "499680",
    "end": "500479"
  },
  {
    "text": "so what does that mean",
    "start": "500479",
    "end": "503759"
  },
  {
    "text": "so this is the one auto release uh was",
    "start": "503919",
    "end": "506400"
  },
  {
    "text": "there well there are a lot of new",
    "start": "506400",
    "end": "508000"
  },
  {
    "text": "features in this release",
    "start": "508000",
    "end": "509199"
  },
  {
    "text": "actually not so by the time we cut one",
    "start": "509199",
    "end": "512640"
  },
  {
    "text": "dot or release we've been running cortex",
    "start": "512640",
    "end": "514479"
  },
  {
    "text": "in production for",
    "start": "514479",
    "end": "515440"
  },
  {
    "text": "more than three years and we've added a",
    "start": "515440",
    "end": "518800"
  },
  {
    "text": "lot of different flags and config",
    "start": "518800",
    "end": "520719"
  },
  {
    "text": "options",
    "start": "520719",
    "end": "521279"
  },
  {
    "text": "caching options a lot of different",
    "start": "521279",
    "end": "523039"
  },
  {
    "text": "things uh to make things scale",
    "start": "523039",
    "end": "525680"
  },
  {
    "text": "and work and we've gotten really really",
    "start": "525680",
    "end": "528160"
  },
  {
    "text": "good at managing cortex and cortex has",
    "start": "528160",
    "end": "530160"
  },
  {
    "text": "been really really stable",
    "start": "530160",
    "end": "531839"
  },
  {
    "text": "we can still read the data we've written",
    "start": "531839",
    "end": "535040"
  },
  {
    "text": "three years ago in cortex",
    "start": "535040",
    "end": "537839"
  },
  {
    "text": "so at this point we decided okay uh",
    "start": "537839",
    "end": "540000"
  },
  {
    "text": "cortex has been stable has been running",
    "start": "540000",
    "end": "541600"
  },
  {
    "text": "in production",
    "start": "541600",
    "end": "542240"
  },
  {
    "text": "at scale for a long enough time let's",
    "start": "542240",
    "end": "544320"
  },
  {
    "text": "get a 1.0",
    "start": "544320",
    "end": "545680"
  },
  {
    "text": "so as part of 1.0 we went back and",
    "start": "545680",
    "end": "548080"
  },
  {
    "text": "looked at all our config options and we",
    "start": "548080",
    "end": "550160"
  },
  {
    "text": "were like okay we can simplify this we",
    "start": "550160",
    "end": "551680"
  },
  {
    "text": "can rename this for consistency",
    "start": "551680",
    "end": "553600"
  },
  {
    "text": "as uh and we've kind of changed things",
    "start": "553600",
    "end": "556000"
  },
  {
    "text": "added same default so it's easier to",
    "start": "556000",
    "end": "558160"
  },
  {
    "text": "manage",
    "start": "558160",
    "end": "559200"
  },
  {
    "text": "and you get a very solid conflict",
    "start": "559200",
    "end": "562560"
  },
  {
    "text": "just out of the box because the defaults",
    "start": "562560",
    "end": "564399"
  },
  {
    "text": "have been changed",
    "start": "564399",
    "end": "565680"
  },
  {
    "text": "so this meant a lot of breaking changes",
    "start": "565680",
    "end": "567839"
  },
  {
    "text": "in the 1. release",
    "start": "567839",
    "end": "569519"
  },
  {
    "text": "but because we made all of these changes",
    "start": "569519",
    "end": "572320"
  },
  {
    "text": "with all the experience we had",
    "start": "572320",
    "end": "574160"
  },
  {
    "text": "running cortex and production we also",
    "start": "574160",
    "end": "576640"
  },
  {
    "text": "provide stability guarantees",
    "start": "576640",
    "end": "578480"
  },
  {
    "text": "as part of 1.0 so",
    "start": "578480",
    "end": "581760"
  },
  {
    "text": "there's a lot of stability guarantees",
    "start": "581760",
    "end": "583200"
  },
  {
    "text": "but the main thing is flags and config",
    "start": "583200",
    "end": "585440"
  },
  {
    "text": "options uh so essentially if you start",
    "start": "585440",
    "end": "587600"
  },
  {
    "text": "cortex",
    "start": "587600",
    "end": "588080"
  },
  {
    "text": "and if you uh kind of tune context to",
    "start": "588080",
    "end": "590399"
  },
  {
    "text": "your needs",
    "start": "590399",
    "end": "592080"
  },
  {
    "text": "and you should not be afraid to upgrade",
    "start": "592080",
    "end": "594320"
  },
  {
    "text": "to the next version because everything",
    "start": "594320",
    "end": "595839"
  },
  {
    "text": "should just",
    "start": "595839",
    "end": "596560"
  },
  {
    "text": "work uh so that's like well that's the",
    "start": "596560",
    "end": "599519"
  },
  {
    "text": "flag compatibility and config",
    "start": "599519",
    "end": "600959"
  },
  {
    "text": "compatibility is one of the guarantees",
    "start": "600959",
    "end": "602560"
  },
  {
    "text": "that we provide",
    "start": "602560",
    "end": "603600"
  },
  {
    "text": "the other thing is reading old data so",
    "start": "603600",
    "end": "606880"
  },
  {
    "text": "we we will ensure that you can read data",
    "start": "606880",
    "end": "609600"
  },
  {
    "text": "uh",
    "start": "609600",
    "end": "610640"
  },
  {
    "text": "well that is or that has been written",
    "start": "610640",
    "end": "612480"
  },
  {
    "text": "nearly two years or",
    "start": "612480",
    "end": "614160"
  },
  {
    "text": "two years old we you can we can still",
    "start": "614160",
    "end": "616720"
  },
  {
    "text": "read data that's more than three years",
    "start": "616720",
    "end": "618079"
  },
  {
    "text": "or three years old but the guarantee we",
    "start": "618079",
    "end": "619839"
  },
  {
    "text": "are going to provide is",
    "start": "619839",
    "end": "621279"
  },
  {
    "text": "but if you run a cortex version today uh",
    "start": "621279",
    "end": "624560"
  },
  {
    "text": "it should be able to read the data that",
    "start": "624560",
    "end": "626720"
  },
  {
    "text": "was written two years ago",
    "start": "626720",
    "end": "628959"
  },
  {
    "text": "uh the other thing that we strictly",
    "start": "628959",
    "end": "630800"
  },
  {
    "text": "adhere to is the api compatibility so if",
    "start": "630800",
    "end": "633120"
  },
  {
    "text": "you build uis or",
    "start": "633120",
    "end": "635519"
  },
  {
    "text": "tools around cortex just by upgrading we",
    "start": "635519",
    "end": "638000"
  },
  {
    "text": "will not break any of the apis that we",
    "start": "638000",
    "end": "639760"
  },
  {
    "text": "mentioned here so",
    "start": "639760",
    "end": "640959"
  },
  {
    "text": "you can upgrade with ease so this",
    "start": "640959",
    "end": "644160"
  },
  {
    "text": "basically generally means that a lot of",
    "start": "644160",
    "end": "646240"
  },
  {
    "text": "the large users can start using",
    "start": "646240",
    "end": "648959"
  },
  {
    "text": "uh cortex in production uh with all the",
    "start": "648959",
    "end": "651600"
  },
  {
    "text": "stability guarantees that they expect of",
    "start": "651600",
    "end": "653279"
  },
  {
    "text": "a mature product",
    "start": "653279",
    "end": "655200"
  },
  {
    "text": "or a mature service cool so that's about",
    "start": "655200",
    "end": "658320"
  },
  {
    "text": "1.0",
    "start": "658320",
    "end": "660079"
  },
  {
    "text": "you can read more about all the",
    "start": "660079",
    "end": "661440"
  },
  {
    "text": "different things we've added in 1.0 and",
    "start": "661440",
    "end": "663279"
  },
  {
    "text": "the different things we've changed",
    "start": "663279",
    "end": "664800"
  },
  {
    "text": "but more or less it's about stability",
    "start": "664800",
    "end": "667200"
  },
  {
    "text": "and making sure that we designate it as",
    "start": "667200",
    "end": "669279"
  },
  {
    "text": "production ready",
    "start": "669279",
    "end": "671920"
  },
  {
    "start": "671000",
    "end": "895000"
  },
  {
    "text": "cool with that i kind of want to talk to",
    "start": "671920",
    "end": "674880"
  },
  {
    "text": "you about",
    "start": "674880",
    "end": "676000"
  },
  {
    "text": "the block storage engine so this is",
    "start": "676000",
    "end": "678079"
  },
  {
    "text": "something that is",
    "start": "678079",
    "end": "679200"
  },
  {
    "text": "that i'm super excited about uh because",
    "start": "679200",
    "end": "682079"
  },
  {
    "text": "this kind of represents the future of",
    "start": "682079",
    "end": "683760"
  },
  {
    "text": "cortex",
    "start": "683760",
    "end": "686320"
  },
  {
    "text": "so cortex today uh",
    "start": "686880",
    "end": "690000"
  },
  {
    "text": "requires two different storage engines",
    "start": "690000",
    "end": "691839"
  },
  {
    "text": "one is a chunk store and",
    "start": "691839",
    "end": "693279"
  },
  {
    "text": "the other is the index store so the idea",
    "start": "693279",
    "end": "696480"
  },
  {
    "text": "is",
    "start": "696480",
    "end": "696880"
  },
  {
    "text": "uh in cortex when you receive samples",
    "start": "696880",
    "end": "698959"
  },
  {
    "text": "for different time series",
    "start": "698959",
    "end": "700399"
  },
  {
    "text": "we basically chunk these samples up",
    "start": "700399",
    "end": "702320"
  },
  {
    "text": "compress them together into like",
    "start": "702320",
    "end": "704079"
  },
  {
    "text": "a large blobs and then store these blobs",
    "start": "704079",
    "end": "707440"
  },
  {
    "text": "uh we store these blobs in the chunk",
    "start": "707440",
    "end": "709120"
  },
  {
    "text": "store and basically we have an index to",
    "start": "709120",
    "end": "711200"
  },
  {
    "text": "look up these blobs and then decode and",
    "start": "711200",
    "end": "713279"
  },
  {
    "text": "run uh prom ql on top of this",
    "start": "713279",
    "end": "716240"
  },
  {
    "text": "just to give an example if you have a",
    "start": "716240",
    "end": "717760"
  },
  {
    "text": "time series up instance equals a",
    "start": "717760",
    "end": "719839"
  },
  {
    "text": "we basically create 6 to 12 hour chunks",
    "start": "719839",
    "end": "723519"
  },
  {
    "text": "uh of data and then we store these",
    "start": "723519",
    "end": "726079"
  },
  {
    "text": "chunks in gcs",
    "start": "726079",
    "end": "727600"
  },
  {
    "text": "or like an object store and then",
    "start": "727600",
    "end": "731040"
  },
  {
    "text": "for each chunk stored in the object",
    "start": "731040",
    "end": "732800"
  },
  {
    "text": "store we create an index entry in the",
    "start": "732800",
    "end": "734480"
  },
  {
    "text": "index store",
    "start": "734480",
    "end": "736079"
  },
  {
    "text": "for example uh basically this is how the",
    "start": "736079",
    "end": "738560"
  },
  {
    "text": "index looks",
    "start": "738560",
    "end": "739360"
  },
  {
    "text": "for each key value or for each label we",
    "start": "739360",
    "end": "742079"
  },
  {
    "text": "basically",
    "start": "742079",
    "end": "742959"
  },
  {
    "text": "have a list of chunk ids uh that ex",
    "start": "742959",
    "end": "746480"
  },
  {
    "text": "that exist and then because we have the",
    "start": "746480",
    "end": "749760"
  },
  {
    "text": "chunk id we can go to the chunk store",
    "start": "749760",
    "end": "751360"
  },
  {
    "text": "and look up",
    "start": "751360",
    "end": "751920"
  },
  {
    "text": "the actual raw bytes and raw data based",
    "start": "751920",
    "end": "755040"
  },
  {
    "text": "on the chunk id",
    "start": "755040",
    "end": "756560"
  },
  {
    "text": "for example if you're given a query that",
    "start": "756560",
    "end": "758240"
  },
  {
    "text": "says oh give me all the data for",
    "start": "758240",
    "end": "760399"
  },
  {
    "text": "instance equals a you basically look at",
    "start": "760399",
    "end": "762959"
  },
  {
    "text": "the index and say okay",
    "start": "762959",
    "end": "764560"
  },
  {
    "text": "instance equals a belongs to chunk",
    "start": "764560",
    "end": "766720"
  },
  {
    "text": "number one chunk number three and check",
    "start": "766720",
    "end": "768160"
  },
  {
    "text": "number five let me look those up",
    "start": "768160",
    "end": "770399"
  },
  {
    "text": "similarly if you're given a query that",
    "start": "770399",
    "end": "772240"
  },
  {
    "text": "says oh give me all the metrics for",
    "start": "772240",
    "end": "774399"
  },
  {
    "text": "up in for the metric up with instance",
    "start": "774399",
    "end": "777120"
  },
  {
    "text": "equals a",
    "start": "777120",
    "end": "778079"
  },
  {
    "text": "we basically look at the index uh",
    "start": "778079",
    "end": "780320"
  },
  {
    "text": "retrieve all these",
    "start": "780320",
    "end": "781360"
  },
  {
    "text": "uh chunk ids and for instance equal say",
    "start": "781360",
    "end": "784160"
  },
  {
    "text": "we retrieve all these junk ids take the",
    "start": "784160",
    "end": "785760"
  },
  {
    "text": "intersection of these two",
    "start": "785760",
    "end": "787120"
  },
  {
    "text": "to get the actual chunk ids that match",
    "start": "787120",
    "end": "789519"
  },
  {
    "text": "that query",
    "start": "789519",
    "end": "791600"
  },
  {
    "text": "so this is this is over simplification",
    "start": "791600",
    "end": "795120"
  },
  {
    "text": "of the index but this is basically",
    "start": "795120",
    "end": "796480"
  },
  {
    "text": "fundamentally how it works",
    "start": "796480",
    "end": "798800"
  },
  {
    "text": "and we need a nosql store for this",
    "start": "798800",
    "end": "801440"
  },
  {
    "text": "because the",
    "start": "801440",
    "end": "802079"
  },
  {
    "text": "number of entries in the index are super",
    "start": "802079",
    "end": "804000"
  },
  {
    "text": "large and the size of each entry is",
    "start": "804000",
    "end": "805760"
  },
  {
    "text": "super",
    "start": "805760",
    "end": "806240"
  },
  {
    "text": "super low and sometimes the index can",
    "start": "806240",
    "end": "808639"
  },
  {
    "text": "grow to terabytes uh which is why we",
    "start": "808639",
    "end": "810480"
  },
  {
    "text": "were looking for a",
    "start": "810480",
    "end": "811600"
  },
  {
    "text": "nosql store but there are a lot of",
    "start": "811600",
    "end": "814959"
  },
  {
    "text": "challenges",
    "start": "814959",
    "end": "815600"
  },
  {
    "text": "uh with the new x inverse sql store so",
    "start": "815600",
    "end": "817600"
  },
  {
    "text": "we support bigtable dynamodb and",
    "start": "817600",
    "end": "819519"
  },
  {
    "text": "cassandra",
    "start": "819519",
    "end": "820720"
  },
  {
    "text": "bigtable and dynamodb are expensive uh",
    "start": "820720",
    "end": "823440"
  },
  {
    "text": "if you're running on gcp you typically",
    "start": "823440",
    "end": "825120"
  },
  {
    "text": "run with bigtable",
    "start": "825120",
    "end": "826079"
  },
  {
    "text": "and we've noticed that in some of the",
    "start": "826079",
    "end": "828079"
  },
  {
    "text": "clusters",
    "start": "828079",
    "end": "829199"
  },
  {
    "text": "more than 50 percent of the cost of",
    "start": "829199",
    "end": "831120"
  },
  {
    "text": "running cortex was just big table",
    "start": "831120",
    "end": "834079"
  },
  {
    "text": "and if you actually wanted to move to",
    "start": "834079",
    "end": "836079"
  },
  {
    "text": "cassandra",
    "start": "836079",
    "end": "837120"
  },
  {
    "text": "and manage for the nosql store ourselves",
    "start": "837120",
    "end": "839760"
  },
  {
    "text": "cassandra is another distributed system",
    "start": "839760",
    "end": "842079"
  },
  {
    "text": "to manage and it's actually not easy and",
    "start": "842079",
    "end": "844160"
  },
  {
    "text": "there's a lot of failure modes",
    "start": "844160",
    "end": "846320"
  },
  {
    "text": "so there's a lot of challenges with the",
    "start": "846320",
    "end": "847519"
  },
  {
    "text": "nosql store and as we were looking at",
    "start": "847519",
    "end": "849839"
  },
  {
    "text": "how we can improve the cortex experience",
    "start": "849839",
    "end": "851680"
  },
  {
    "text": "you were thinking about",
    "start": "851680",
    "end": "853360"
  },
  {
    "text": "what if we remove the nosql store and",
    "start": "853360",
    "end": "855519"
  },
  {
    "text": "store the index as well",
    "start": "855519",
    "end": "856959"
  },
  {
    "text": "in the object store so as we were",
    "start": "856959",
    "end": "859600"
  },
  {
    "text": "thinking about this",
    "start": "859600",
    "end": "861760"
  },
  {
    "text": "suddenly something amazing happened",
    "start": "861760",
    "end": "865360"
  },
  {
    "text": "somebody from the community just",
    "start": "865360",
    "end": "866800"
  },
  {
    "text": "submitted a large pr uh that",
    "start": "866800",
    "end": "868880"
  },
  {
    "text": "basically added uh a support for the",
    "start": "868880",
    "end": "871920"
  },
  {
    "text": "tsdb",
    "start": "871920",
    "end": "872720"
  },
  {
    "text": "uh prometheus tsdb engine into cortex",
    "start": "872720",
    "end": "876800"
  },
  {
    "text": "so basically this is thor who was",
    "start": "876800",
    "end": "879040"
  },
  {
    "text": "working at distillation",
    "start": "879040",
    "end": "880320"
  },
  {
    "text": "who was like oh i think we can actually",
    "start": "880320",
    "end": "882959"
  },
  {
    "text": "add",
    "start": "882959",
    "end": "883440"
  },
  {
    "text": "just an object store in engine into",
    "start": "883440",
    "end": "885279"
  },
  {
    "text": "cortex",
    "start": "885279",
    "end": "886480"
  },
  {
    "text": "and he submitted a pr we worked with him",
    "start": "886480",
    "end": "888720"
  },
  {
    "text": "to make sure it's merged and we're super",
    "start": "888720",
    "end": "890320"
  },
  {
    "text": "excited because this",
    "start": "890320",
    "end": "891519"
  },
  {
    "text": "this is what we wanted to do and one of",
    "start": "891519",
    "end": "894240"
  },
  {
    "text": "the great things",
    "start": "894240",
    "end": "895360"
  },
  {
    "start": "895000",
    "end": "1168000"
  },
  {
    "text": "is that it's built on top of the piano",
    "start": "895360",
    "end": "897519"
  },
  {
    "text": "storage engine so basically uh",
    "start": "897519",
    "end": "900079"
  },
  {
    "text": "thanos also leverages the object store",
    "start": "900079",
    "end": "902480"
  },
  {
    "text": "for storing the index and data",
    "start": "902480",
    "end": "904560"
  },
  {
    "text": "and we are basically reusing the storage",
    "start": "904560",
    "end": "906480"
  },
  {
    "text": "engine in context",
    "start": "906480",
    "end": "908240"
  },
  {
    "text": "there is an amazing talk by prom con",
    "start": "908240",
    "end": "910720"
  },
  {
    "text": "just google sharing is caring the",
    "start": "910720",
    "end": "912880"
  },
  {
    "text": "talk will be linked in the slides uh as",
    "start": "912880",
    "end": "915279"
  },
  {
    "text": "well",
    "start": "915279",
    "end": "916320"
  },
  {
    "text": "uh of how basically uh",
    "start": "916320",
    "end": "919839"
  },
  {
    "text": "while working on the block storage",
    "start": "919839",
    "end": "921839"
  },
  {
    "text": "engine the",
    "start": "921839",
    "end": "923279"
  },
  {
    "text": "thanos and cortex community collaborated",
    "start": "923279",
    "end": "925360"
  },
  {
    "text": "together to make sure that there are",
    "start": "925360",
    "end": "926800"
  },
  {
    "text": "improvements uh during it",
    "start": "926800",
    "end": "928240"
  },
  {
    "text": "uh like contributed to cortex by the",
    "start": "928240",
    "end": "930000"
  },
  {
    "text": "thanos team and to thanos",
    "start": "930000",
    "end": "932000"
  },
  {
    "text": "by the cortex team this was given uh",
    "start": "932000",
    "end": "935199"
  },
  {
    "text": "again the prom con and i'll link the",
    "start": "935199",
    "end": "937839"
  },
  {
    "text": "talk in the slides",
    "start": "937839",
    "end": "941279"
  },
  {
    "text": "so this is how the cortex block storage",
    "start": "941279",
    "end": "944399"
  },
  {
    "text": "engine looks like",
    "start": "944399",
    "end": "945279"
  },
  {
    "text": "uh so essentially you get all the",
    "start": "945279",
    "end": "946800"
  },
  {
    "text": "samples uh",
    "start": "946800",
    "end": "948959"
  },
  {
    "text": "to the distributors that are then",
    "start": "948959",
    "end": "950560"
  },
  {
    "text": "written to the injustice and once the",
    "start": "950560",
    "end": "952320"
  },
  {
    "text": "investor has a large enough block",
    "start": "952320",
    "end": "954560"
  },
  {
    "text": "it writes the data into an object store",
    "start": "954560",
    "end": "957759"
  },
  {
    "text": "and then we also have a compactor that",
    "start": "957759",
    "end": "960639"
  },
  {
    "text": "takes different blocks and",
    "start": "960639",
    "end": "962399"
  },
  {
    "text": "compacts them together to make even more",
    "start": "962399",
    "end": "964639"
  },
  {
    "text": "efficient blocks",
    "start": "964639",
    "end": "966399"
  },
  {
    "text": "so that's the right path and you can",
    "start": "966399",
    "end": "968560"
  },
  {
    "text": "horizontally scale the right path like",
    "start": "968560",
    "end": "970560"
  },
  {
    "text": "this",
    "start": "970560",
    "end": "971040"
  },
  {
    "text": "there's no limitation there uh where you",
    "start": "971040",
    "end": "973519"
  },
  {
    "text": "can't scale the",
    "start": "973519",
    "end": "975040"
  },
  {
    "text": "right path out and similarly we have a",
    "start": "975040",
    "end": "978079"
  },
  {
    "text": "horizontally scalable read path uh",
    "start": "978079",
    "end": "980399"
  },
  {
    "text": "completely",
    "start": "980399",
    "end": "981680"
  },
  {
    "text": "more or less stateless uh",
    "start": "981680",
    "end": "984800"
  },
  {
    "text": "where we basically have the store",
    "start": "984800",
    "end": "986560"
  },
  {
    "text": "gateways uh",
    "start": "986560",
    "end": "988240"
  },
  {
    "text": "that kind of download a subset of the",
    "start": "988240",
    "end": "989920"
  },
  {
    "text": "index and the query then",
    "start": "989920",
    "end": "991600"
  },
  {
    "text": "uh queries the store gateway to kind of",
    "start": "991600",
    "end": "994320"
  },
  {
    "text": "see which parts of the chunk it",
    "start": "994320",
    "end": "996399"
  },
  {
    "text": "chunks it needs to download from the",
    "start": "996399",
    "end": "997920"
  },
  {
    "text": "object store uh this is similar",
    "start": "997920",
    "end": "1000320"
  },
  {
    "text": "so basically instead of storing uh the",
    "start": "1000320",
    "end": "1003600"
  },
  {
    "text": "index in a nosql store we are basically",
    "start": "1003600",
    "end": "1005600"
  },
  {
    "text": "storing the",
    "start": "1005600",
    "end": "1006320"
  },
  {
    "text": "entire index uh in the object store and",
    "start": "1006320",
    "end": "1008399"
  },
  {
    "text": "the subset of the index in the store",
    "start": "1008399",
    "end": "1009920"
  },
  {
    "text": "gateway here",
    "start": "1009920",
    "end": "1011440"
  },
  {
    "text": "this way we don't need a nosql store and",
    "start": "1011440",
    "end": "1014000"
  },
  {
    "text": "the store gateway is horizontally",
    "start": "1014000",
    "end": "1015600"
  },
  {
    "text": "scalable the object storage is",
    "start": "1015600",
    "end": "1017360"
  },
  {
    "text": "typically horizontally scalable the",
    "start": "1017360",
    "end": "1019279"
  },
  {
    "text": "courier and query front end are more or",
    "start": "1019279",
    "end": "1021120"
  },
  {
    "text": "less stateless so you can also scale",
    "start": "1021120",
    "end": "1022800"
  },
  {
    "text": "them up and down as you wish",
    "start": "1022800",
    "end": "1024880"
  },
  {
    "text": "so we have a horizontally scalable and",
    "start": "1024880",
    "end": "1027120"
  },
  {
    "text": "decoupled read and write paths",
    "start": "1027120",
    "end": "1030400"
  },
  {
    "text": "and the only uh external dependency is",
    "start": "1030400",
    "end": "1033678"
  },
  {
    "text": "the object store and this is working",
    "start": "1033679",
    "end": "1035438"
  },
  {
    "text": "really really well",
    "start": "1035439",
    "end": "1037120"
  },
  {
    "text": "and one other thing that i want to",
    "start": "1037120",
    "end": "1039120"
  },
  {
    "text": "mention again is that we've built this",
    "start": "1039120",
    "end": "1041360"
  },
  {
    "text": "on top of the thanos storage engine with",
    "start": "1041360",
    "end": "1043360"
  },
  {
    "text": "collaboration from the thanos community",
    "start": "1043360",
    "end": "1045600"
  },
  {
    "text": "for example we are using the nano",
    "start": "1045600",
    "end": "1047280"
  },
  {
    "text": "shipper the thanos compactor",
    "start": "1047280",
    "end": "1048960"
  },
  {
    "text": "and the thanos bucket store gateways",
    "start": "1048960",
    "end": "1052000"
  },
  {
    "text": "in cortex to make all of this happen",
    "start": "1052000",
    "end": "1056400"
  },
  {
    "text": "so this is working really really well uh",
    "start": "1057440",
    "end": "1060160"
  },
  {
    "text": "we're seeing massive",
    "start": "1060160",
    "end": "1061440"
  },
  {
    "text": "improvements uh in performance something",
    "start": "1061440",
    "end": "1063600"
  },
  {
    "text": "that i'll share with you today",
    "start": "1063600",
    "end": "1065919"
  },
  {
    "text": "and also a huge decrease in cost like",
    "start": "1065919",
    "end": "1068720"
  },
  {
    "text": "sometimes",
    "start": "1068720",
    "end": "1069280"
  },
  {
    "text": "even three times less",
    "start": "1069280",
    "end": "1072400"
  },
  {
    "text": "cost to run the same to store and query",
    "start": "1072400",
    "end": "1074799"
  },
  {
    "text": "the same amount of data",
    "start": "1074799",
    "end": "1077200"
  },
  {
    "text": "so the status today is basically we have",
    "start": "1077200",
    "end": "1080320"
  },
  {
    "text": "some clusters",
    "start": "1080320",
    "end": "1081200"
  },
  {
    "text": "uh that are running in the cortex trunks",
    "start": "1081200",
    "end": "1083120"
  },
  {
    "text": "engine that are in broad",
    "start": "1083120",
    "end": "1084720"
  },
  {
    "text": "and we've actually started teeing right",
    "start": "1084720",
    "end": "1087200"
  },
  {
    "text": "so we are",
    "start": "1087200",
    "end": "1088080"
  },
  {
    "text": "we started writing to both the chunks",
    "start": "1088080",
    "end": "1089919"
  },
  {
    "text": "and block storage engine",
    "start": "1089919",
    "end": "1091600"
  },
  {
    "text": "uh the two different clusters uh so that",
    "start": "1091600",
    "end": "1094000"
  },
  {
    "text": "we can compare query performance",
    "start": "1094000",
    "end": "1095840"
  },
  {
    "text": "and we build this query t component to",
    "start": "1095840",
    "end": "1098480"
  },
  {
    "text": "uh basically query both and compare",
    "start": "1098480",
    "end": "1100480"
  },
  {
    "text": "performance so but",
    "start": "1100480",
    "end": "1101600"
  },
  {
    "text": "so essentially whenever somebody at",
    "start": "1101600",
    "end": "1103679"
  },
  {
    "text": "grifana queries",
    "start": "1103679",
    "end": "1104720"
  },
  {
    "text": "our internal cortex cluster we're",
    "start": "1104720",
    "end": "1106799"
  },
  {
    "text": "actually querying both the chunks engine",
    "start": "1106799",
    "end": "1108559"
  },
  {
    "text": "and the blocks engine which have the",
    "start": "1108559",
    "end": "1110000"
  },
  {
    "text": "same data",
    "start": "1110000",
    "end": "1111120"
  },
  {
    "text": "and comparing the results as well as",
    "start": "1111120",
    "end": "1113200"
  },
  {
    "text": "performance",
    "start": "1113200",
    "end": "1115120"
  },
  {
    "text": "so just to share something so the green",
    "start": "1115120",
    "end": "1117200"
  },
  {
    "text": "color lines are the block storage engine",
    "start": "1117200",
    "end": "1119600"
  },
  {
    "text": "and the yellow color lines are the chunk",
    "start": "1119600",
    "end": "1121440"
  },
  {
    "text": "storage engine",
    "start": "1121440",
    "end": "1122640"
  },
  {
    "text": "so this graph is not super clear but the",
    "start": "1122640",
    "end": "1125600"
  },
  {
    "text": "block storage engine",
    "start": "1125600",
    "end": "1126640"
  },
  {
    "text": "is typically faster than the",
    "start": "1126640",
    "end": "1129919"
  },
  {
    "text": "chunk storage engine to make this",
    "start": "1129919",
    "end": "1133280"
  },
  {
    "text": "even more clear so we are basically",
    "start": "1133280",
    "end": "1135039"
  },
  {
    "text": "looking at the 99th percentile",
    "start": "1135039",
    "end": "1137200"
  },
  {
    "text": "of the last week of queries here uh in",
    "start": "1137200",
    "end": "1140480"
  },
  {
    "text": "the blocks cluster and in the chunks",
    "start": "1140480",
    "end": "1142480"
  },
  {
    "text": "cluster and in the blocks cluster it was",
    "start": "1142480",
    "end": "1144400"
  },
  {
    "text": "taking 450 milliseconds while in the",
    "start": "1144400",
    "end": "1146080"
  },
  {
    "text": "chunks cluster",
    "start": "1146080",
    "end": "1146960"
  },
  {
    "text": "the 99th percentile was 2.5 seconds",
    "start": "1146960",
    "end": "1150480"
  },
  {
    "text": "so the new storage engine is already",
    "start": "1150480",
    "end": "1153039"
  },
  {
    "text": "five times faster and we are super",
    "start": "1153039",
    "end": "1155039"
  },
  {
    "text": "excited",
    "start": "1155039",
    "end": "1156880"
  },
  {
    "text": "uh about the whole performance thing uh",
    "start": "1156880",
    "end": "1159440"
  },
  {
    "text": "but we also",
    "start": "1159440",
    "end": "1160720"
  },
  {
    "text": "have about two years of data in the",
    "start": "1160720",
    "end": "1163039"
  },
  {
    "text": "chunk storage engine",
    "start": "1163039",
    "end": "1164160"
  },
  {
    "text": "which we need to migrate to the",
    "start": "1164160",
    "end": "1165440"
  },
  {
    "text": "blockchain engine if when we start to",
    "start": "1165440",
    "end": "1167360"
  },
  {
    "text": "use it",
    "start": "1167360",
    "end": "1169760"
  },
  {
    "start": "1168000",
    "end": "1548000"
  },
  {
    "text": "so we've started actually onboarding",
    "start": "1169840",
    "end": "1172400"
  },
  {
    "text": "some of our newer customers onto the",
    "start": "1172400",
    "end": "1174160"
  },
  {
    "text": "block search engine",
    "start": "1174160",
    "end": "1175039"
  },
  {
    "text": "in production and it's it's working",
    "start": "1175039",
    "end": "1177600"
  },
  {
    "text": "really really well",
    "start": "1177600",
    "end": "1178960"
  },
  {
    "text": "we've also put in a migration path so",
    "start": "1178960",
    "end": "1180720"
  },
  {
    "text": "that anybody in the junk storage engine",
    "start": "1180720",
    "end": "1182480"
  },
  {
    "text": "can migrate to the block storage engine",
    "start": "1182480",
    "end": "1184559"
  },
  {
    "text": "if something's wrong they can roll back",
    "start": "1184559",
    "end": "1186080"
  },
  {
    "text": "to the chunk storage engine uh",
    "start": "1186080",
    "end": "1187840"
  },
  {
    "text": "so we've put in that uh and we are",
    "start": "1187840",
    "end": "1189919"
  },
  {
    "text": "starting to test that migration path and",
    "start": "1189919",
    "end": "1192400"
  },
  {
    "text": "starting to move our customers over",
    "start": "1192400",
    "end": "1194240"
  },
  {
    "text": "slowly",
    "start": "1194240",
    "end": "1195679"
  },
  {
    "text": "and that is working also really really",
    "start": "1195679",
    "end": "1197919"
  },
  {
    "text": "well and once we've actually tested",
    "start": "1197919",
    "end": "1200400"
  },
  {
    "text": "the block storage engine at scale uh for",
    "start": "1200400",
    "end": "1202720"
  },
  {
    "text": "a large number of tenants",
    "start": "1202720",
    "end": "1204480"
  },
  {
    "text": "and for a large number of active time",
    "start": "1204480",
    "end": "1206720"
  },
  {
    "text": "series we will be calling it generally",
    "start": "1206720",
    "end": "1208799"
  },
  {
    "text": "available",
    "start": "1208799",
    "end": "1209360"
  },
  {
    "text": "and production ready we are hoping that",
    "start": "1209360",
    "end": "1211760"
  },
  {
    "text": "will happen in the next three months",
    "start": "1211760",
    "end": "1213280"
  },
  {
    "text": "fingers crossed so that",
    "start": "1213280",
    "end": "1216640"
  },
  {
    "text": "that's just a small snapshot of what's",
    "start": "1216640",
    "end": "1218960"
  },
  {
    "text": "coming a completely new storage engine",
    "start": "1218960",
    "end": "1221760"
  },
  {
    "text": "that's",
    "start": "1221760",
    "end": "1222240"
  },
  {
    "text": "much faster and much cheaper to run and",
    "start": "1222240",
    "end": "1226159"
  },
  {
    "text": "this engine is also enabling other",
    "start": "1226159",
    "end": "1228640"
  },
  {
    "text": "things uh",
    "start": "1228640",
    "end": "1229520"
  },
  {
    "text": "in the cortex uh project and i'm gonna",
    "start": "1229520",
    "end": "1232880"
  },
  {
    "text": "give you a brief snapshot of all the",
    "start": "1232880",
    "end": "1235039"
  },
  {
    "text": "other features",
    "start": "1235039",
    "end": "1236000"
  },
  {
    "text": "that we are working on not just the",
    "start": "1236000",
    "end": "1237280"
  },
  {
    "text": "storage engine",
    "start": "1237280",
    "end": "1239520"
  },
  {
    "text": "so the roadmap so",
    "start": "1239520",
    "end": "1242720"
  },
  {
    "text": "this so we have a roadmap page now so",
    "start": "1242720",
    "end": "1245840"
  },
  {
    "text": "if you click on this it will take you to",
    "start": "1245840",
    "end": "1247440"
  },
  {
    "text": "the complete roadmap",
    "start": "1247440",
    "end": "1249200"
  },
  {
    "text": "that we put up on our website if you're",
    "start": "1249200",
    "end": "1251520"
  },
  {
    "text": "interested in the",
    "start": "1251520",
    "end": "1252799"
  },
  {
    "text": "entire details i'm only going to",
    "start": "1252799",
    "end": "1254159"
  },
  {
    "text": "highlight a few things in this talk",
    "start": "1254159",
    "end": "1257280"
  },
  {
    "text": "so first thing is per tenant retention",
    "start": "1257280",
    "end": "1259520"
  },
  {
    "text": "so in the junk store all the data for",
    "start": "1259520",
    "end": "1261520"
  },
  {
    "text": "all the tenants was in a single table",
    "start": "1261520",
    "end": "1263840"
  },
  {
    "text": "and if you wanted to kind of enforce",
    "start": "1263840",
    "end": "1266000"
  },
  {
    "text": "pertinent retention and cortex saying",
    "start": "1266000",
    "end": "1267760"
  },
  {
    "text": "okay tenant a",
    "start": "1267760",
    "end": "1269280"
  },
  {
    "text": "gets three months of retention and",
    "start": "1269280",
    "end": "1272080"
  },
  {
    "text": "tenant b gets 13 months of retention",
    "start": "1272080",
    "end": "1274240"
  },
  {
    "text": "it was not really possible you still had",
    "start": "1274240",
    "end": "1277039"
  },
  {
    "text": "to",
    "start": "1277039",
    "end": "1277440"
  },
  {
    "text": "kind of delete partially the table and",
    "start": "1277440",
    "end": "1279600"
  },
  {
    "text": "that cost a lot of",
    "start": "1279600",
    "end": "1281200"
  },
  {
    "text": "right throughput and a lot of cpu spikes",
    "start": "1281200",
    "end": "1284159"
  },
  {
    "text": "so it was not really possible in the",
    "start": "1284159",
    "end": "1285600"
  },
  {
    "text": "chunk storage engine",
    "start": "1285600",
    "end": "1287200"
  },
  {
    "text": "but in the block storage engine we",
    "start": "1287200",
    "end": "1289600"
  },
  {
    "text": "actually put each tenant under a prefix",
    "start": "1289600",
    "end": "1292240"
  },
  {
    "text": "inside",
    "start": "1292240",
    "end": "1293039"
  },
  {
    "text": "inside the object store so in this case",
    "start": "1293039",
    "end": "1294880"
  },
  {
    "text": "if you look at this this is the tenant",
    "start": "1294880",
    "end": "1296320"
  },
  {
    "text": "id",
    "start": "1296320",
    "end": "1297280"
  },
  {
    "text": "and you can already apply rules",
    "start": "1297280",
    "end": "1301120"
  },
  {
    "text": "at the object store level to kind of",
    "start": "1301120",
    "end": "1302960"
  },
  {
    "text": "delete objects uh",
    "start": "1302960",
    "end": "1305200"
  },
  {
    "text": "based on retention but we also want to",
    "start": "1305200",
    "end": "1308000"
  },
  {
    "text": "uh",
    "start": "1308000",
    "end": "1308400"
  },
  {
    "text": "not leave this to an object store level",
    "start": "1308400",
    "end": "1310159"
  },
  {
    "text": "configuration but would pull it into",
    "start": "1310159",
    "end": "1311919"
  },
  {
    "text": "cortex itself so that the compactor",
    "start": "1311919",
    "end": "1313679"
  },
  {
    "text": "automatically deletes",
    "start": "1313679",
    "end": "1315280"
  },
  {
    "text": "blocks uh when the retention is set and",
    "start": "1315280",
    "end": "1317679"
  },
  {
    "text": "this is super easy to do with the blocks",
    "start": "1317679",
    "end": "1319840"
  },
  {
    "text": "engine",
    "start": "1319840",
    "end": "1320400"
  },
  {
    "text": "so pertinent retention is coming uh",
    "start": "1320400",
    "end": "1323679"
  },
  {
    "text": "we have gotten a lot of feedback that",
    "start": "1323679",
    "end": "1325600"
  },
  {
    "text": "while cortex is great getting started",
    "start": "1325600",
    "end": "1327520"
  },
  {
    "text": "with it is",
    "start": "1327520",
    "end": "1328480"
  },
  {
    "text": "kind of hard because there are not",
    "start": "1328480",
    "end": "1330080"
  },
  {
    "text": "enough film charts another packaging",
    "start": "1330080",
    "end": "1332559"
  },
  {
    "text": "so this is one of our biggest priorities",
    "start": "1332559",
    "end": "1335200"
  },
  {
    "text": "we want to clean up our official helm",
    "start": "1335200",
    "end": "1337280"
  },
  {
    "text": "chart",
    "start": "1337280",
    "end": "1338240"
  },
  {
    "text": "and publish it add support for all the",
    "start": "1338240",
    "end": "1340960"
  },
  {
    "text": "providers gcp",
    "start": "1340960",
    "end": "1342159"
  },
  {
    "text": "aws and on-prem and we also",
    "start": "1342159",
    "end": "1345200"
  },
  {
    "text": "want to focus on rpm and debian",
    "start": "1345200",
    "end": "1347679"
  },
  {
    "text": "packaging",
    "start": "1347679",
    "end": "1348400"
  },
  {
    "text": "uh basically for non-kubernetes",
    "start": "1348400",
    "end": "1350480"
  },
  {
    "text": "environments",
    "start": "1350480",
    "end": "1351760"
  },
  {
    "text": "you don't need kubernetes to run cortex",
    "start": "1351760",
    "end": "1354240"
  },
  {
    "text": "uh if you have communities it becomes",
    "start": "1354240",
    "end": "1356000"
  },
  {
    "text": "easier but you don't need that",
    "start": "1356000",
    "end": "1358000"
  },
  {
    "text": "um and we want to encourage more and",
    "start": "1358000",
    "end": "1359760"
  },
  {
    "text": "more people who don't run",
    "start": "1359760",
    "end": "1361280"
  },
  {
    "text": "who don't yet run uh kubernetes to run",
    "start": "1361280",
    "end": "1363600"
  },
  {
    "text": "context as well for their prometheus",
    "start": "1363600",
    "end": "1365360"
  },
  {
    "text": "monitoring needs",
    "start": "1365360",
    "end": "1368159"
  },
  {
    "text": "we want to add exemplar and metadata",
    "start": "1368159",
    "end": "1370240"
  },
  {
    "text": "support i'm only",
    "start": "1370240",
    "end": "1371280"
  },
  {
    "text": "going to cover metadata here because of",
    "start": "1371280",
    "end": "1373440"
  },
  {
    "text": "the lack of time",
    "start": "1373440",
    "end": "1374880"
  },
  {
    "text": "so metadata as in so essentially if you",
    "start": "1374880",
    "end": "1377919"
  },
  {
    "text": "have a metric you kind of want to",
    "start": "1377919",
    "end": "1379600"
  },
  {
    "text": "understand",
    "start": "1379600",
    "end": "1380159"
  },
  {
    "text": "is it a gauge is it a counter is it a",
    "start": "1380159",
    "end": "1382400"
  },
  {
    "text": "histogram",
    "start": "1382400",
    "end": "1383360"
  },
  {
    "text": "and you also want to understand what it",
    "start": "1383360",
    "end": "1384880"
  },
  {
    "text": "means in most cases",
    "start": "1384880",
    "end": "1386559"
  },
  {
    "text": "it's easy to see easy to guess what that",
    "start": "1386559",
    "end": "1389200"
  },
  {
    "text": "means but sometimes",
    "start": "1389200",
    "end": "1390640"
  },
  {
    "text": "or if the metric is not named properly",
    "start": "1390640",
    "end": "1392559"
  },
  {
    "text": "it's extremely hard",
    "start": "1392559",
    "end": "1394240"
  },
  {
    "text": "but the prometheus exposition format",
    "start": "1394240",
    "end": "1396080"
  },
  {
    "text": "actually exposes this and",
    "start": "1396080",
    "end": "1397760"
  },
  {
    "text": "nowadays prometheus stores this metadata",
    "start": "1397760",
    "end": "1400480"
  },
  {
    "text": "and lets you query it",
    "start": "1400480",
    "end": "1401760"
  },
  {
    "text": "for example if you are in the explore",
    "start": "1401760",
    "end": "1403760"
  },
  {
    "text": "mode with the prometheus data source and",
    "start": "1403760",
    "end": "1405280"
  },
  {
    "text": "you are looking up a",
    "start": "1405280",
    "end": "1406240"
  },
  {
    "text": "metric you will be able to see the type",
    "start": "1406240",
    "end": "1408559"
  },
  {
    "text": "and help information as",
    "start": "1408559",
    "end": "1410000"
  },
  {
    "text": "uh in the autocomplete now this is being",
    "start": "1410000",
    "end": "1413360"
  },
  {
    "text": "done",
    "start": "1413360",
    "end": "1413679"
  },
  {
    "text": "inside prometheus but we also want to",
    "start": "1413679",
    "end": "1415919"
  },
  {
    "text": "take this metadata",
    "start": "1415919",
    "end": "1417200"
  },
  {
    "text": "and write it out to cortex and other",
    "start": "1417200",
    "end": "1419520"
  },
  {
    "text": "remote systems",
    "start": "1419520",
    "end": "1420720"
  },
  {
    "text": "and add the metadata feature into cortex",
    "start": "1420720",
    "end": "1423120"
  },
  {
    "text": "directly",
    "start": "1423120",
    "end": "1424720"
  },
  {
    "text": "similarly exemplars is one",
    "start": "1424720",
    "end": "1428799"
  },
  {
    "text": "one other feature that we are working on",
    "start": "1428799",
    "end": "1430400"
  },
  {
    "text": "i've linked the what what examples are",
    "start": "1430400",
    "end": "1432640"
  },
  {
    "text": "and what the metadata support is in the",
    "start": "1432640",
    "end": "1434320"
  },
  {
    "text": "slides",
    "start": "1434320",
    "end": "1435200"
  },
  {
    "text": "um there this is just a small snapshot",
    "start": "1435200",
    "end": "1439520"
  },
  {
    "text": "of the other features that we",
    "start": "1439520",
    "end": "1441520"
  },
  {
    "text": "are working on and there's a lot more",
    "start": "1441520",
    "end": "1443360"
  },
  {
    "text": "features to come",
    "start": "1443360",
    "end": "1444640"
  },
  {
    "text": "the first thing is the authentication",
    "start": "1444640",
    "end": "1446400"
  },
  {
    "text": "and uh standard authentication building",
    "start": "1446400",
    "end": "1448640"
  },
  {
    "text": "system so that",
    "start": "1448640",
    "end": "1450159"
  },
  {
    "text": "multitenant organizations can get",
    "start": "1450159",
    "end": "1452240"
  },
  {
    "text": "started with cortex much easier",
    "start": "1452240",
    "end": "1455120"
  },
  {
    "text": "soft multi-tenancy so today if you uh",
    "start": "1455120",
    "end": "1458320"
  },
  {
    "text": "if you belong to a tenant day you can",
    "start": "1458320",
    "end": "1460000"
  },
  {
    "text": "look at all your data",
    "start": "1460000",
    "end": "1461760"
  },
  {
    "text": "and you can you cannot look at any other",
    "start": "1461760",
    "end": "1463520"
  },
  {
    "text": "tenants data so it's like",
    "start": "1463520",
    "end": "1465200"
  },
  {
    "text": "you get an all or nothing but",
    "start": "1465200",
    "end": "1468640"
  },
  {
    "text": "so the problem is a lot of these",
    "start": "1468640",
    "end": "1470240"
  },
  {
    "text": "companies a lot of companies want a",
    "start": "1470240",
    "end": "1472159"
  },
  {
    "text": "super user view",
    "start": "1472159",
    "end": "1473360"
  },
  {
    "text": "basically where there's an admin user",
    "start": "1473360",
    "end": "1475919"
  },
  {
    "text": "that can look at data across different",
    "start": "1475919",
    "end": "1477520"
  },
  {
    "text": "tenants uh",
    "start": "1477520",
    "end": "1478400"
  },
  {
    "text": "but if if if there's a team the team can",
    "start": "1478400",
    "end": "1481520"
  },
  {
    "text": "only look at its own data",
    "start": "1481520",
    "end": "1483200"
  },
  {
    "text": "so this is one of the big asks that we",
    "start": "1483200",
    "end": "1485600"
  },
  {
    "text": "have that we are going to",
    "start": "1485600",
    "end": "1486559"
  },
  {
    "text": "uh that we are working on or like that",
    "start": "1486559",
    "end": "1489039"
  },
  {
    "text": "we are going to work on",
    "start": "1489039",
    "end": "1490159"
  },
  {
    "text": "a historical import of data this also is",
    "start": "1490159",
    "end": "1493360"
  },
  {
    "text": "enabled by the",
    "start": "1493360",
    "end": "1494799"
  },
  {
    "text": "block storage engine and we have a lot",
    "start": "1494799",
    "end": "1498000"
  },
  {
    "text": "more scalability improvements in the",
    "start": "1498000",
    "end": "1499919"
  },
  {
    "text": "pipeline",
    "start": "1499919",
    "end": "1502399"
  },
  {
    "text": "so just to quickly recap um so we've",
    "start": "1502559",
    "end": "1505840"
  },
  {
    "text": "talked about",
    "start": "1505840",
    "end": "1506400"
  },
  {
    "text": "cortex uh the 1.0 release the block",
    "start": "1506400",
    "end": "1509520"
  },
  {
    "text": "storage engine",
    "start": "1509520",
    "end": "1510480"
  },
  {
    "text": "and the roadmap so the blockchain engine",
    "start": "1510480",
    "end": "1514000"
  },
  {
    "text": "is completely new storage engine that's",
    "start": "1514000",
    "end": "1516400"
  },
  {
    "text": "much faster",
    "start": "1516400",
    "end": "1517360"
  },
  {
    "text": "uh on much faster and",
    "start": "1517360",
    "end": "1520480"
  },
  {
    "text": "cheaper to run and then we also have not",
    "start": "1520480",
    "end": "1523120"
  },
  {
    "text": "just that but a ton of other things on",
    "start": "1523120",
    "end": "1525039"
  },
  {
    "text": "the roadmap",
    "start": "1525039",
    "end": "1526480"
  },
  {
    "text": "so if you want to scale out your",
    "start": "1526480",
    "end": "1528080"
  },
  {
    "text": "prometheus needs or if you want a",
    "start": "1528080",
    "end": "1529760"
  },
  {
    "text": "multi-tenant prometheus",
    "start": "1529760",
    "end": "1531360"
  },
  {
    "text": "system just look into cortex",
    "start": "1531360",
    "end": "1543840"
  },
  {
    "start": "1548000",
    "end": "1731000"
  },
  {
    "text": "okay okay thank you gotham",
    "start": "1552960",
    "end": "1556000"
  },
  {
    "text": "thank you for your introduction of the",
    "start": "1556000",
    "end": "1558240"
  },
  {
    "text": "context",
    "start": "1558240",
    "end": "1559360"
  },
  {
    "text": "cortex okay i it's time for online q a",
    "start": "1559360",
    "end": "1566240"
  },
  {
    "text": "hi folks uh i already have a question um",
    "start": "1566400",
    "end": "1570640"
  },
  {
    "text": "thanks jerry so the first question is",
    "start": "1570640",
    "end": "1574400"
  },
  {
    "text": "will it be easier for consumption to",
    "start": "1574400",
    "end": "1576400"
  },
  {
    "text": "have cortex or thanos features to be",
    "start": "1576400",
    "end": "1578480"
  },
  {
    "text": "included in prometheus or the other way",
    "start": "1578480",
    "end": "1580400"
  },
  {
    "text": "around",
    "start": "1580400",
    "end": "1581360"
  },
  {
    "text": "so that's a really nice question so the",
    "start": "1581360",
    "end": "1583440"
  },
  {
    "text": "idea for prometheus is",
    "start": "1583440",
    "end": "1585760"
  },
  {
    "text": "that it it's just prometheus you should",
    "start": "1585760",
    "end": "1588480"
  },
  {
    "text": "be able to get your alerts and",
    "start": "1588480",
    "end": "1589919"
  },
  {
    "text": "monitoring and metrics from just",
    "start": "1589919",
    "end": "1591679"
  },
  {
    "text": "prometheus and should not depend on",
    "start": "1591679",
    "end": "1593360"
  },
  {
    "text": "network",
    "start": "1593360",
    "end": "1594240"
  },
  {
    "text": "that way prometheus can be much more",
    "start": "1594240",
    "end": "1596080"
  },
  {
    "text": "stable",
    "start": "1596080",
    "end": "1597360"
  },
  {
    "text": "but if you want to go beyond 15 days or",
    "start": "1597360",
    "end": "1600080"
  },
  {
    "text": "beyond just alerts",
    "start": "1600080",
    "end": "1601279"
  },
  {
    "text": "uh you can look at cortex or thanos to",
    "start": "1601279",
    "end": "1604400"
  },
  {
    "text": "actually help you solve other problems",
    "start": "1604400",
    "end": "1606400"
  },
  {
    "text": "but",
    "start": "1606400",
    "end": "1606960"
  },
  {
    "text": "prometheus in itself should be a super",
    "start": "1606960",
    "end": "1608799"
  },
  {
    "text": "stable system that doesn't depend on",
    "start": "1608799",
    "end": "1610559"
  },
  {
    "text": "network",
    "start": "1610559",
    "end": "1611919"
  },
  {
    "text": "so that even when everything is burning",
    "start": "1611919",
    "end": "1614799"
  },
  {
    "text": "if your network is down you can still",
    "start": "1614799",
    "end": "1616480"
  },
  {
    "text": "access your metrics and look uh get",
    "start": "1616480",
    "end": "1618240"
  },
  {
    "text": "alerted",
    "start": "1618240",
    "end": "1619600"
  },
  {
    "text": "so i hope that answers the question um",
    "start": "1619600",
    "end": "1622960"
  },
  {
    "text": "okay i see another one in the chat box",
    "start": "1622960",
    "end": "1627840"
  },
  {
    "text": "yes uh so this question is any",
    "start": "1627919",
    "end": "1630799"
  },
  {
    "text": "horizontal scalable",
    "start": "1630799",
    "end": "1632159"
  },
  {
    "text": "prometheus implementation with cortex",
    "start": "1632159",
    "end": "1635360"
  },
  {
    "text": "i like so cortex is a horizontally",
    "start": "1635360",
    "end": "1639520"
  },
  {
    "text": "scalable prometheus implementation",
    "start": "1639520",
    "end": "1641200"
  },
  {
    "text": "but to give you a couple of use cases um",
    "start": "1641200",
    "end": "1644320"
  },
  {
    "text": "we have grafana labs and we work who",
    "start": "1644320",
    "end": "1646960"
  },
  {
    "text": "provide a hosted prometheus service",
    "start": "1646960",
    "end": "1648960"
  },
  {
    "text": "where",
    "start": "1648960",
    "end": "1649520"
  },
  {
    "text": "people just sign up and send send us",
    "start": "1649520",
    "end": "1651600"
  },
  {
    "text": "their prometheus metrics",
    "start": "1651600",
    "end": "1652799"
  },
  {
    "text": "and we handle hundreds of millions of",
    "start": "1652799",
    "end": "1655279"
  },
  {
    "text": "active time series",
    "start": "1655279",
    "end": "1656880"
  },
  {
    "text": "uh and like petabytes of data",
    "start": "1656880",
    "end": "1660320"
  },
  {
    "text": "of all our customers and all of them is",
    "start": "1660320",
    "end": "1662399"
  },
  {
    "text": "that is done by cortex",
    "start": "1662399",
    "end": "1664320"
  },
  {
    "text": "but some other use cases are there are",
    "start": "1664320",
    "end": "1667360"
  },
  {
    "text": "companies like gojek",
    "start": "1667360",
    "end": "1668799"
  },
  {
    "text": "and revei i will link you some of the",
    "start": "1668799",
    "end": "1671840"
  },
  {
    "text": "case studies in the q a section",
    "start": "1671840",
    "end": "1674159"
  },
  {
    "text": "uh but these companies uh these are",
    "start": "1674159",
    "end": "1676320"
  },
  {
    "text": "large companies with several teams using",
    "start": "1676320",
    "end": "1678080"
  },
  {
    "text": "prometheus",
    "start": "1678080",
    "end": "1679039"
  },
  {
    "text": "and they want to provide a centralized",
    "start": "1679039",
    "end": "1681600"
  },
  {
    "text": "hosted prometheus service for their",
    "start": "1681600",
    "end": "1683440"
  },
  {
    "text": "internal teams and they're using cortex",
    "start": "1683440",
    "end": "1685200"
  },
  {
    "text": "to do that",
    "start": "1685200",
    "end": "1686000"
  },
  {
    "text": "and because cortex is multi-tenant you",
    "start": "1686000",
    "end": "1687919"
  },
  {
    "text": "just run a single",
    "start": "1687919",
    "end": "1689440"
  },
  {
    "text": "cortex cluster for all your teams but",
    "start": "1689440",
    "end": "1692080"
  },
  {
    "text": "each team gets their own tenants so that",
    "start": "1692080",
    "end": "1693919"
  },
  {
    "text": "the data is secure and one team cannot",
    "start": "1693919",
    "end": "1695919"
  },
  {
    "text": "look at another team's data",
    "start": "1695919",
    "end": "1697679"
  },
  {
    "text": "and you can enforce multi-tenancy and",
    "start": "1697679",
    "end": "1699760"
  },
  {
    "text": "limits",
    "start": "1699760",
    "end": "1700720"
  },
  {
    "text": "so even if one team is sending you a lot",
    "start": "1700720",
    "end": "1702720"
  },
  {
    "text": "of queries you you can put in limit so",
    "start": "1702720",
    "end": "1704799"
  },
  {
    "text": "that this",
    "start": "1704799",
    "end": "1705360"
  },
  {
    "text": "one user doesn't degrade the system for",
    "start": "1705360",
    "end": "1708720"
  },
  {
    "text": "the other users",
    "start": "1708720",
    "end": "1710320"
  },
  {
    "text": "so that is some of the use cases i will",
    "start": "1710320",
    "end": "1713919"
  },
  {
    "text": "also",
    "start": "1713919",
    "end": "1714320"
  },
  {
    "text": "link the case studies section in the",
    "start": "1714320",
    "end": "1718480"
  },
  {
    "text": "in the chat in the q a okay okay",
    "start": "1718480",
    "end": "1722080"
  },
  {
    "text": "thank you thank you so much uh i think",
    "start": "1722080",
    "end": "1725120"
  },
  {
    "text": "it's normal question for you",
    "start": "1725120",
    "end": "1727039"
  },
  {
    "text": "okay thank you gotham thank you so much",
    "start": "1727039",
    "end": "1730640"
  },
  {
    "text": "thank you",
    "start": "1730640",
    "end": "1733520"
  }
]