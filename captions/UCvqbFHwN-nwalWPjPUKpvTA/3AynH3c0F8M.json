[
  {
    "start": "0",
    "end": "475000"
  },
  {
    "text": "all right I think we're at the time now thanks for everybody coming on a Friday",
    "start": "269",
    "end": "5520"
  },
  {
    "text": "afternoon at the end of the conference really appreciate it and I know we're all tired and we've seen a lot of stuff",
    "start": "5520",
    "end": "11099"
  },
  {
    "text": "but this should be a fun talk so this is the container D deep dive I'm Steven day",
    "start": "11099",
    "end": "17250"
  },
  {
    "text": "I work on as a maintainer of container D among other things today so so actually",
    "start": "17250",
    "end": "25980"
  },
  {
    "text": "first of all I want to pull the room and see how many people went to the intro talk okay so that's that's great so",
    "start": "25980",
    "end": "33930"
  },
  {
    "text": "these are the same slides as the intro talk but I'm gonna do an actual deep dive and do some demos and and so I'm",
    "start": "33930",
    "end": "40200"
  },
  {
    "text": "gonna I'm gonna buzz through things if it's confusing we'll also have a little time for questions at the end so we",
    "start": "40200",
    "end": "46500"
  },
  {
    "text": "should hopefully we'll have time for everything so a brief history of container D it",
    "start": "46500",
    "end": "52530"
  },
  {
    "text": "there's a timeline going up to about March 2017 when the container D project became a CN CF project ever since then",
    "start": "52530",
    "end": "59969"
  },
  {
    "text": "we've been working towards we've been working towards one 21.0 which was released in December of this year",
    "start": "59969",
    "end": "65909"
  },
  {
    "text": "and the goal was to actually spin out a lot of dockers internals into a complete",
    "start": "65909",
    "end": "70950"
  },
  {
    "text": "project so that docker could use it and other other things that need container runtimes could use it such as like",
    "start": "70950",
    "end": "76920"
  },
  {
    "text": "kubernetes and in builders and all sorts of stuff if you want to get any",
    "start": "76920",
    "end": "83070"
  },
  {
    "text": "information about this project you can go to the github project its container D slash container D watch out you can end",
    "start": "83070",
    "end": "90270"
  },
  {
    "text": "up if you're googling make sure you go to the container D slash container d12 to file bugs and whatnot so let me so",
    "start": "90270",
    "end": "98970"
  },
  {
    "text": "the the technical goals of this project were to ensure that we had a really clean G RPC based API and client library",
    "start": "98970",
    "end": "106560"
  },
  {
    "text": "we wanted everything to be full o CI support so both image spec and runtime spec and the distribution spec and we",
    "start": "106560",
    "end": "115110"
  },
  {
    "text": "wanted to focus on stability and performance with a really tight core of container functionality we also wanted",
    "start": "115110",
    "end": "121290"
  },
  {
    "text": "things to be very disk coupled decoupled so that the image the filesystem and the runtime could be plugged and reused and",
    "start": "121290",
    "end": "128789"
  },
  {
    "text": "you could kind of use it in an ala carte fashion so we you want to be able to use own",
    "start": "128789",
    "end": "133920"
  },
  {
    "text": "what's required I'll explain a little bit about that later it also has like runtime agility so that we we actually",
    "start": "133920",
    "end": "141300"
  },
  {
    "text": "pass through configurations in container D so like container D doesn't really know anything about run C all it does is",
    "start": "141300",
    "end": "147090"
  },
  {
    "text": "get called a binary and handed a configuration and that's all it knows and so what this means is you can drop",
    "start": "147090",
    "end": "153120"
  },
  {
    "text": "in like run c or c run or rail car or cotta containers or even g visor that",
    "start": "153120",
    "end": "159480"
  },
  {
    "text": "which was announced something like 48 hours ago so that all works because we've we've passed everything through so",
    "start": "159480",
    "end": "168120"
  },
  {
    "text": "some of the use cases for container d our container d or sorry container API implementations so this would be like",
    "start": "168120",
    "end": "174120"
  },
  {
    "text": "docker Mobe kubernetes CRI alibaba pouch in a swarm kit and then also for",
    "start": "174120",
    "end": "181620"
  },
  {
    "text": "building images so build kits are a good example of that so build kit uses container d to implement kind of the",
    "start": "181620",
    "end": "188250"
  },
  {
    "text": "container d the container file systems and runtimes to efficiently build images",
    "start": "188250",
    "end": "193260"
  },
  {
    "text": "and then also like IBM cloud is using container d as well it's also used within Linux kit to build the the system",
    "start": "193260",
    "end": "201150"
  },
  {
    "text": "services inside of the container so you can run a like so basically instead of",
    "start": "201150",
    "end": "207060"
  },
  {
    "text": "having like an like an init you can run everything as a container and and and that that's how it's built if you're",
    "start": "207060",
    "end": "213060"
  },
  {
    "text": "curious about that check out linux kit so a little bit about the architecture the the main interaction goes to the G",
    "start": "213060",
    "end": "220829"
  },
  {
    "text": "RPC API and then we have a Prometheus metrics API which users interact with and then in the middle we have all of",
    "start": "220829",
    "end": "227850"
  },
  {
    "text": "these these services and they and they implement different parts of what makes up containers so on the on the left here",
    "start": "227850",
    "end": "235739"
  },
  {
    "text": "we have the storage engine which consists of a content store which holds things like layers and manifests and",
    "start": "235739",
    "end": "242069"
  },
  {
    "text": "images and in the snapshot store which where the snapshot er which does the like layered file system support and",
    "start": "242069",
    "end": "248940"
  },
  {
    "text": "then there's a diff service which can lets you diff arbitrary snapshots so that you can actually build images from",
    "start": "248940",
    "end": "255180"
  },
  {
    "text": "however you want and then in the middle we have the metadata store which and this pins everything so the objects that",
    "start": "255180",
    "end": "262380"
  },
  {
    "text": "you're probably familiar with from docker or other container solutions this is this is where that is and they kind",
    "start": "262380",
    "end": "267400"
  },
  {
    "text": "reached out across the system and define which so so an image will say oh I used this snapshot in this content and then",
    "start": "267400",
    "end": "274060"
  },
  {
    "text": "containers can be created from images and they'll also reference like the snapshots that are that are doing",
    "start": "274060",
    "end": "279639"
  },
  {
    "text": "dealing with the actual running the actual containers that you run then the",
    "start": "279639",
    "end": "284710"
  },
  {
    "text": "the the tasks service is actually what runs containers so we split this out",
    "start": "284710",
    "end": "291130"
  },
  {
    "text": "from what was in docker into so you have like a metadata thing that says here's my container here's all the resources",
    "start": "291130",
    "end": "297130"
  },
  {
    "text": "that use it and then here's the runtime aspects of it and so it means that you don't have to keep writing state into",
    "start": "297130",
    "end": "302889"
  },
  {
    "text": "your container and removes a lot of locks and so it's capable of much higher performance when when running containers",
    "start": "302889",
    "end": "310389"
  },
  {
    "text": "then all this sits on top of an operating system in runtime we don't really we try not to abstract any of",
    "start": "310389",
    "end": "316630"
  },
  {
    "text": "this so that you can do whatever you want so a little bit more kind of",
    "start": "316630",
    "end": "323590"
  },
  {
    "text": "stepping back this is this is how container D would integrate into a system like mobi or CRI container T is",
    "start": "323590",
    "end": "329440"
  },
  {
    "text": "actually merged with container D now and I'll get into that later and so your API clients what's called like a fat client",
    "start": "329440",
    "end": "335280"
  },
  {
    "text": "and it contains a lot of functionality and this allows you to modify it and change it for four different",
    "start": "335280",
    "end": "340900"
  },
  {
    "text": "applications so then it interacts with the container D API and then also directly with the operating system like",
    "start": "340900",
    "end": "347380"
  },
  {
    "text": "storage file systems networking and then the container D container D will actually control the runtimes so if you",
    "start": "347380",
    "end": "356260"
  },
  {
    "text": "want to so I'm gonna talk I'm gonna show some demos and show a little code from",
    "start": "356260",
    "end": "361840"
  },
  {
    "text": "the getting started guide but here's the link for the getting started guide I highly suggest you go through it it'll",
    "start": "361840",
    "end": "367180"
  },
  {
    "text": "show you how the API works you can run your own containers build your own little tiny container driver and then",
    "start": "367180",
    "end": "373630"
  },
  {
    "text": "you should be able to modify it and maybe use it for something interesting then I also suggest taking a peek at the go doc so so just to show how these",
    "start": "373630",
    "end": "382900"
  },
  {
    "text": "services work together so the goal when you pull an image you're looking to get a container root filesystem now what in",
    "start": "382900",
    "end": "390340"
  },
  {
    "text": "in so what you do is you have this like this set of layers right and you need to turn them into something and and this is",
    "start": "390340",
    "end": "397630"
  },
  {
    "text": "what the services do for you so when you're pulling you actually it's on the bottom here we have",
    "start": "397630",
    "end": "402730"
  },
  {
    "text": "each service that interacts with with the with the pole functionality and so we actually start we fetched from the",
    "start": "402730",
    "end": "408070"
  },
  {
    "text": "remotes and then we register all the content in there and that's that gets securely hashed and then that is then",
    "start": "408070",
    "end": "414870"
  },
  {
    "text": "read then that registers a pointer inside of the image metadata store which",
    "start": "414870",
    "end": "420370"
  },
  {
    "text": "references it by its it's what's called the digester it's actually it's like a shot 256 hash and then the unpacked and",
    "start": "420370",
    "end": "427390"
  },
  {
    "text": "packed phase will pull all the content out of the content store and then will actually unpack it into a snapshot and",
    "start": "427390",
    "end": "433960"
  },
  {
    "text": "and when it when it does the snapshots it'll actually like unpack a layer and then commit it back in and then it'll",
    "start": "433960",
    "end": "440140"
  },
  {
    "text": "start a new transaction and unpack layer and then commit it back in and so on and so forth and then eventually up the",
    "start": "440140",
    "end": "445660"
  },
  {
    "text": "other end you get where called mounts and those are actually taken in by the runtime so so snapchatters are how you",
    "start": "445660",
    "end": "453400"
  },
  {
    "text": "build these container root file systems I'm not going to go too much into this but the the general the general storage",
    "start": "453400",
    "end": "460660"
  },
  {
    "text": "architecture is you have this metadata store which references everything so this is images and containers and then their reference to cost the content",
    "start": "460660",
    "end": "467290"
  },
  {
    "text": "store in the snapshot and then what you can do from this is you can get a config which is like a no CI config and then a",
    "start": "467290",
    "end": "473020"
  },
  {
    "text": "root FS for the mounts so I'm gonna I'm",
    "start": "473020",
    "end": "478600"
  },
  {
    "start": "475000",
    "end": "844000"
  },
  {
    "text": "gonna skip this part of the demo and actually you know what I'm gonna I'm gonna skip ahead cuz I have a really",
    "start": "478600",
    "end": "484150"
  },
  {
    "text": "cool demo that I want to show and I and I'll come back to these slides and just just just it's more it's more there's a",
    "start": "484150",
    "end": "491080"
  },
  {
    "text": "deep dive talk and so I want to get that so so so sitting here I I have a completely fresh version of container D",
    "start": "491080",
    "end": "498490"
  },
  {
    "text": "and so believe I just RM dash RF it and there's nothing in it you can see so so",
    "start": "498490",
    "end": "505960"
  },
  {
    "text": "container D is a namespace so I can list all of the names faces out there's nothing in here you can see that this is",
    "start": "505960",
    "end": "513490"
  },
  {
    "text": "just a completely untouched container D so we're gonna start out and we can just",
    "start": "513490",
    "end": "518650"
  },
  {
    "text": "do normal things with container D so we can like pull an image hopefully I have a pool command here we can just do",
    "start": "518650",
    "end": "526000"
  },
  {
    "text": "Alpine lattice and so this just works very very familiar interface and then",
    "start": "526000",
    "end": "532750"
  },
  {
    "text": "now we have an Alpine image and we can just we can list like anything this is just this is boring stuff this is what is how we want",
    "start": "532750",
    "end": "538330"
  },
  {
    "text": "it to be really boring we can run that so I can I can say you know just CTR run",
    "start": "538330",
    "end": "545860"
  },
  {
    "text": "latest and give it like that and then give it a you know this is a demo this",
    "start": "545860",
    "end": "553210"
  },
  {
    "text": "is not a test you know and then we can you know show a now that that's a bug",
    "start": "553210",
    "end": "558779"
  },
  {
    "text": "that's also a bug so anyway so so we're",
    "start": "558779",
    "end": "565180"
  },
  {
    "text": "running containers here this is very serious stuff right we're running containers it in this is and so we can",
    "start": "565180",
    "end": "572830"
  },
  {
    "text": "we can we can actually see here the - get another tab there we go there there",
    "start": "572830",
    "end": "583600"
  },
  {
    "text": "typos mistakes so so what so what we can see here is is from so I can do containers LS and we can see you know we",
    "start": "583600",
    "end": "591310"
  },
  {
    "text": "can see my o CC containers there we go so we can see the containers that I",
    "start": "591310",
    "end": "597040"
  },
  {
    "text": "created right and these are just metadata objects so I can do container info demo too and I can see like up",
    "start": "597040",
    "end": "604450"
  },
  {
    "text": "here's the snapshot key we're using overlay this is the created at an updated time in here is it'll show you a",
    "start": "604450",
    "end": "611770"
  },
  {
    "text": "second we can see the run see spec so this is this whole blob here is the run see spec and I'll show you how to unpack",
    "start": "611770",
    "end": "616780"
  },
  {
    "text": "that in a second and we can also see like oh look at this it's using this image and it's using this runtime and",
    "start": "616780",
    "end": "624520"
  },
  {
    "text": "you can kind of dive down it gets so we can we can actually pipe this to JQ it's",
    "start": "624520",
    "end": "630640"
  },
  {
    "text": "a really cool little tool here and then pipe this through here and we can unpack",
    "start": "630640",
    "end": "637900"
  },
  {
    "text": "this is all base64 encoded for fun and then we can see here and what we have",
    "start": "637900",
    "end": "645670"
  },
  {
    "text": "here is just a good ol like this is a run see spec right here so container D is not actually abstracting this that",
    "start": "645670",
    "end": "651310"
  },
  {
    "text": "goes right through you can define anything that runs so you can do or in anything anything that's capable with",
    "start": "651310",
    "end": "656680"
  },
  {
    "text": "run C you can do right in container deep and I'll show a little bit more about that now that so we're one thing I will",
    "start": "656680",
    "end": "664900"
  },
  {
    "text": "show you the snapshots before we get into the cooler part of the demo so there's so so the snapshots are like",
    "start": "664900",
    "end": "672460"
  },
  {
    "text": "a filesystem representation so it's a transactional model where you can like make some changes to the file system and",
    "start": "672460",
    "end": "679060"
  },
  {
    "text": "then you can commit them and then you can make changes on top of that and it works just like docker have you ever played with like so when you build it",
    "start": "679060",
    "end": "685240"
  },
  {
    "text": "when you have a docker file it has like run and then it'll have like it'll say make this env and then do that and each",
    "start": "685240",
    "end": "691150"
  },
  {
    "text": "one of those lines is a layer you this one in container D you can just have you",
    "start": "691150",
    "end": "696880"
  },
  {
    "text": "have a transaction you can do a whole bunch of operations and commit that whole thing and they're what's called snapshots so what we can see here is",
    "start": "696880",
    "end": "703420"
  },
  {
    "text": "that I have demo one and it's a an active snapshot and it's parent is this",
    "start": "703420",
    "end": "711550"
  },
  {
    "text": "cd70 blah blah blah blah that right there is the Alpine image and then we can see our demo to as the same thing",
    "start": "711550",
    "end": "717490"
  },
  {
    "text": "it's probably easier to see this in a tree command so we can see both of these two containers descend from the exact",
    "start": "717490",
    "end": "722500"
  },
  {
    "text": "same filesystem cool right yeah all right should be a little bit boring",
    "start": "722500",
    "end": "728470"
  },
  {
    "text": "or like if it's a little confusing that's okay we can ask me questions later and and figure that out but the",
    "start": "728470",
    "end": "735730"
  },
  {
    "text": "real thing I wanted to have so let's let's put out of this container and I want to show you I have I have so so we",
    "start": "735730",
    "end": "742240"
  },
  {
    "text": "recently released container D 1.1 and container D 1.1 has built-in CRI support",
    "start": "742240",
    "end": "749140"
  },
  {
    "text": "so it works directly with kubernetes and I want to show both this with this",
    "start": "749140",
    "end": "754660"
  },
  {
    "text": "working but I also wanted to show you how you can do some of the things that things I just showed you with with",
    "start": "754660",
    "end": "760060"
  },
  {
    "text": "pulling out the Runcie spec you can do that all the way from top to bottom with kubernetes and see actually the pod",
    "start": "760060",
    "end": "765970"
  },
  {
    "text": "manifest working at the container D level this is but first of all we have to get there so actually I'm running on",
    "start": "765970",
    "end": "771640"
  },
  {
    "text": "top of docker right now so and I'm gonna convert from using from running my local",
    "start": "771640",
    "end": "776800"
  },
  {
    "text": "CRI on top of docker to container D so just to show you I have some pods right",
    "start": "776800",
    "end": "783730"
  },
  {
    "text": "here you can see I've I have an engine X deployment I have like calico running",
    "start": "783730",
    "end": "788770"
  },
  {
    "text": "and you know all of the all of the good stuff that you would have running inside of a kubernetes cluster and just to show",
    "start": "788770",
    "end": "794680"
  },
  {
    "text": "you this is this is not fake there's no recordings if I mess this up it's going to be very embarrassing",
    "start": "794680",
    "end": "801880"
  },
  {
    "text": "but hopefully it works so curl it again engine X welcome to engine X this is",
    "start": "801880",
    "end": "807400"
  },
  {
    "text": "this is great stuff so so what we're going to do is I'm gonna go in and so",
    "start": "807400",
    "end": "813360"
  },
  {
    "text": "there's a align inside of the cube a the cubelet service cube ADM file and it",
    "start": "813360",
    "end": "820630"
  },
  {
    "text": "actually configures the the runtime so right now I have it is there's no",
    "start": "820630",
    "end": "826060"
  },
  {
    "text": "arguments and then what we can see here does it need to be bigger or are we is this we all see that probably a little",
    "start": "826060",
    "end": "832960"
  },
  {
    "text": "bit bigger so we can see - - container runtime remote and then we can see there's a request timeout and then we",
    "start": "832960",
    "end": "839350"
  },
  {
    "text": "can see container runtime endpoint and this is pointing at the container D socket so we're going to comment out",
    "start": "839350",
    "end": "844810"
  },
  {
    "start": "844000",
    "end": "919000"
  },
  {
    "text": "that line we're going to comment this line back in and then we're going to do",
    "start": "844810",
    "end": "849940"
  },
  {
    "text": "a daemon reload on system D and then",
    "start": "849940",
    "end": "856080"
  },
  {
    "text": "what we're going to do is we're going to take all these docker containers and we're going to start killing them",
    "start": "856080",
    "end": "861880"
  },
  {
    "text": "because yeah that's what we're going to do we're gonna say",
    "start": "861880",
    "end": "868930"
  },
  {
    "text": "so we'll go X arcs docker stop and so",
    "start": "868930",
    "end": "874960"
  },
  {
    "text": "this is gonna this is completely killing my kubernetes cluster if I started curling right now this is probably gonna",
    "start": "874960",
    "end": "884440"
  },
  {
    "text": "stop this is not going to work anymore right because we're shutting so we basically shut down the whole kubernetes cluster if we do get pods it should",
    "start": "884440",
    "end": "891280"
  },
  {
    "text": "probably it's probably not it's actually started up up on container D alright well no no no oops actually no we need",
    "start": "891280",
    "end": "900370"
  },
  {
    "text": "to do we just stop the cubic because the cubelet is restarting everything yeah so",
    "start": "900370",
    "end": "907960"
  },
  {
    "text": "here we go let's stop everything again don't do this this is not the right way to convert to",
    "start": "907960",
    "end": "914290"
  },
  {
    "text": "it I just wanted to do this in a demo because it's fun got plenty of time",
    "start": "914290",
    "end": "919510"
  },
  {
    "text": "alright so then if we start getting pods we should see things falling apart container DS not doing anything yet we",
    "start": "919510",
    "end": "927640"
  },
  {
    "text": "should see that cubelet services stopped and then let's do one more docker PS and",
    "start": "927640",
    "end": "933070"
  },
  {
    "text": "make sure so we're not running anything so we should be able to we should be able to restart the qubit service now with that new configuration",
    "start": "933070",
    "end": "939470"
  },
  {
    "text": "and if we look at the qubit service you know logs are coming by gets her work in",
    "start": "939470",
    "end": "944959"
  },
  {
    "text": "we can start looking at the Oh yep so",
    "start": "944959",
    "end": "953660"
  },
  {
    "text": "that so that so right now so right now the the API server isn't available yet because it's trying to start up we can",
    "start": "953660",
    "end": "960019"
  },
  {
    "text": "see here when we so this is another tool called cry cuddle and it lets you directly interact with the seat with the",
    "start": "960019",
    "end": "965959"
  },
  {
    "text": "CRI and I'm gonna point this at container DS socket now and so we should start seeing these pods come up in",
    "start": "965959",
    "end": "972350"
  },
  {
    "text": "container D oh there they are and so we can see that like the controller manager and the scheduler and",
    "start": "972350",
    "end": "977899"
  },
  {
    "text": "the API server and SCD have all started to come up and maybe if we are lucky Oh",
    "start": "977899",
    "end": "983139"
  },
  {
    "text": "No yeah that is not working and so we can look at you know we can look at",
    "start": "983139",
    "end": "988189"
  },
  {
    "text": "journal control don't still not work in what aren't we missing maybe that's not",
    "start": "988189",
    "end": "1001990"
  },
  {
    "text": "good let's really get rid of them okay",
    "start": "1001990",
    "end": "1013170"
  },
  {
    "text": "so there we go okay so it's starting to do things okay that's better",
    "start": "1013170",
    "end": "1019870"
  },
  {
    "text": "it looks better see I could have come in and just had it running on container D",
    "start": "1019870",
    "end": "1025750"
  },
  {
    "text": "and then you wouldn't believe you wouldn't believe me but all right",
    "start": "1025750",
    "end": "1033510"
  },
  {
    "text": "okay let's actually look at some more slides while we wait for that to come back up so a little bit about running a",
    "start": "1040020",
    "end": "1048580"
  },
  {
    "text": "container I don't want to share it all right it's a little bit about running a",
    "start": "1048580",
    "end": "1053980"
  },
  {
    "start": "1052000",
    "end": "1148000"
  },
  {
    "text": "container in container D so this is this is a general architecture of container DS runtime system and when I was talking",
    "start": "1053980",
    "end": "1060520"
  },
  {
    "text": "about all a cart earlier so in the so",
    "start": "1060520",
    "end": "1066610"
  },
  {
    "text": "when we when we want so earlier I talked about getting mounts out of the actual",
    "start": "1066610",
    "end": "1071730"
  },
  {
    "text": "snap out of the pole system and I also talked about getting config out of that and these both both of these are what's",
    "start": "1071730",
    "end": "1079210"
  },
  {
    "text": "needed to do the actual runtime and so on the bottom we have our containers metadata service where you actually",
    "start": "1079210",
    "end": "1084940"
  },
  {
    "text": "register the the runtime can figure out when you start up you hand those in to",
    "start": "1084940",
    "end": "1090610"
  },
  {
    "text": "the task service and then note and then that will all be directly passed through to the runtime and then so here we have",
    "start": "1090610",
    "end": "1096460"
  },
  {
    "text": "an example of different kinds of runtimes that could be in use we have like Linux there's windows containers that can be used on Windows and then as",
    "start": "1096460",
    "end": "1103990"
  },
  {
    "text": "well as kata containers and I didn't update the slide for G Weiser but I guess you could use G advisor now to G",
    "start": "1103990",
    "end": "1109480"
  },
  {
    "text": "Weiser so this is very similar to the flow before and so on the bottom we have the",
    "start": "1109480",
    "end": "1117430"
  },
  {
    "text": "services that are going to interact with with with starting a container we have the image service the snapshot service and the container service and the task",
    "start": "1117430",
    "end": "1123640"
  },
  {
    "text": "service and our we have the whole run flow so this would be the equivalent of docker run but this CTR run we start out",
    "start": "1123640",
    "end": "1130930"
  },
  {
    "text": "and we initialize a snapshot so we we pull off a snapshot so I showed you the tree command and then we said set that",
    "start": "1130930",
    "end": "1138370"
  },
  {
    "text": "up by creating a container like a run run see config inside of the container service and then we can start that and",
    "start": "1138370",
    "end": "1144970"
  },
  {
    "text": "then you know out the other side we get running containers because that's the whole goal right back to the demo yes",
    "start": "1144970",
    "end": "1155130"
  },
  {
    "text": "so so this so like ten minutes ago this",
    "start": "1155660",
    "end": "1161420"
  },
  {
    "text": "work this took like 20 seconds and you know don't don't switch this in production yet but so we should see so",
    "start": "1161420",
    "end": "1170180"
  },
  {
    "text": "that so this is starting to come up are these backing off at all see that",
    "start": "1170180",
    "end": "1178130"
  },
  {
    "text": "curl no that's not working okay so it but okay so what it should be so before",
    "start": "1178130",
    "end": "1186140"
  },
  {
    "text": "remember I showed you that the namespaces were empty so we're actually gonna see we're gonna start seeing namespaces so we have the default",
    "start": "1186140",
    "end": "1191900"
  },
  {
    "text": "namespace and that's where I ran the containers before so if I just do CTR container LS right we get that but I can",
    "start": "1191900",
    "end": "1200390"
  },
  {
    "text": "change the name space to kubernetes so like so this lets you like logically",
    "start": "1200390",
    "end": "1205820"
  },
  {
    "text": "separate everything so I can run kubernetes I can run docker I can run build kit I can in docker it will",
    "start": "1205820",
    "end": "1212210"
  },
  {
    "text": "actually run its system containers inside of inside of this and they'll all be separated logically so they can run",
    "start": "1212210",
    "end": "1218810"
  },
  {
    "text": "on the same host without interfering with each other so when we do when we do the container LS command with the",
    "start": "1218810",
    "end": "1224870"
  },
  {
    "text": "kubernetes namespace you can actually see you can see that all the different containers here so we can see like a",
    "start": "1224870",
    "end": "1231230"
  },
  {
    "text": "bunch of pause containers that hold open the name space and we see like cube proxy we can see the engine X",
    "start": "1231230",
    "end": "1238520"
  },
  {
    "text": "application running we can see calico etc etc etc so we can actually the cool",
    "start": "1238520",
    "end": "1244490"
  },
  {
    "text": "thing about container D is like it's completely debuggable from a container perspective Indian so I can take one of",
    "start": "1244490",
    "end": "1250190"
  },
  {
    "text": "these container IDs and I can I can get the same info on it like I showed you before and so before I showed you the",
    "start": "1250190",
    "end": "1256880"
  },
  {
    "text": "runs C spec but now I'm gonna show you how to get the container metadata from the the actual the actual container it's",
    "start": "1256880",
    "end": "1265760"
  },
  {
    "text": "or sorry the pod manifest so this is actually stored directly in container D and you can get to it and you can you",
    "start": "1265760",
    "end": "1274070"
  },
  {
    "text": "know pull it apart in various different ways so we this is called an extension and it's stored under a key that is",
    "start": "1274070",
    "end": "1282620"
  },
  {
    "text": "unique to the CRI implementation so if I had something else another plug in another thing that I wanted to",
    "start": "1282620",
    "end": "1290080"
  },
  {
    "text": "store on there I can you can store all these different things on containers they're a little bit like labels but they're they're designed so that you can",
    "start": "1290080",
    "end": "1296860"
  },
  {
    "text": "store like larger larger pieces of data let's see here thank you",
    "start": "1296860",
    "end": "1304059"
  },
  {
    "text": "whoops and then base64 the code that and",
    "start": "1304059",
    "end": "1314650"
  },
  {
    "text": "then we'll make that nice JQ and you can see here this is a like pod manifest for",
    "start": "1314650",
    "end": "1321669"
  },
  {
    "text": "that thing so now we can we can actually someone to show you in cry cuddle and hopefully this works I can do and",
    "start": "1321669",
    "end": "1328570"
  },
  {
    "text": "inspect on the pod id that'll work inspect P oh yeah your pod and cry",
    "start": "1328570",
    "end": "1340929"
  },
  {
    "text": "cuddle not found mmm let me find it for you all right well that's not working",
    "start": "1340929",
    "end": "1350799"
  },
  {
    "text": "either okay so but but hopefully all of our pods are coming oh my god all our",
    "start": "1350799",
    "end": "1356470"
  },
  {
    "text": "pods are up and guess what so because the way cube ATM sets up the etsy D",
    "start": "1356470",
    "end": "1361630"
  },
  {
    "text": "deployment inside of inside of the it's",
    "start": "1361630",
    "end": "1367179"
  },
  {
    "text": "it's I think it's in it's like a manifest inside of Etsy kubernetes it actually uses a mounted volume so that",
    "start": "1367179",
    "end": "1372549"
  },
  {
    "text": "when you switch runtimes and anything that's like defined outside the runtime not using that's actually inside of the",
    "start": "1372549",
    "end": "1379390"
  },
  {
    "text": "cubelet or in it's not implemented inside of the CR I will get transferred over so notice that like my nginx",
    "start": "1379390",
    "end": "1386740"
  },
  {
    "text": "deployment is working right and I didn't have to do any changes so this is so you",
    "start": "1386740",
    "end": "1391899"
  },
  {
    "text": "can you can actually upgrade nodes you can change them to container D and your applications will still still work",
    "start": "1391899",
    "end": "1397299"
  },
  {
    "text": "obviously test it and heavily if you do that so alright so um from there how",
    "start": "1397299",
    "end": "1404679"
  },
  {
    "start": "1400000",
    "end": "1595000"
  },
  {
    "text": "much time how much time do we have we about 10 minutes do we want to so I can show you some more code or we can take time for",
    "start": "1404679",
    "end": "1411340"
  },
  {
    "text": "questions what any dessert are there any questions at this point now okay let's",
    "start": "1411340",
    "end": "1416860"
  },
  {
    "text": "see code okay so the the code so container D has what's called this like it's a it's it's a it's a it's",
    "start": "1416860",
    "end": "1423460"
  },
  {
    "text": "a client library that does a lot for you and what that means is that you can you can change what the code does we don't",
    "start": "1423460",
    "end": "1429039"
  },
  {
    "text": "do like plugins where you have like hooks that that run at various points we did what we did is said everything that",
    "start": "1429039",
    "end": "1435309"
  },
  {
    "text": "could people would might want to change the behavior of will actually be done in the client code so this first example is",
    "start": "1435309",
    "end": "1443169"
  },
  {
    "text": "how you do pulling an image and all you have to do is import the client connect it to the socket and then define your",
    "start": "1443169",
    "end": "1450039"
  },
  {
    "text": "namespace and then call pull and this will actually just pull the image and",
    "start": "1450039",
    "end": "1455169"
  },
  {
    "text": "you can see here on the left of this slide we can see that we set the namespace we do a CTR pole and then we",
    "start": "1455169",
    "end": "1461980"
  },
  {
    "text": "can actually see what the what the images are and and then here's an example of running a container it's it's",
    "start": "1461980",
    "end": "1467950"
  },
  {
    "text": "very similar we use the same client we declare a new container we're going to call it Redis server and when we define",
    "start": "1467950",
    "end": "1474850"
  },
  {
    "text": "exactly the image that we pulled in the previous slide and we actually say we specify how the specification is created",
    "start": "1474850",
    "end": "1482230"
  },
  {
    "text": "so I can I can make my own Combinator's that that add maybe my own set conch filters or add special environment",
    "start": "1482230",
    "end": "1487929"
  },
  {
    "text": "variables that you need and then we actually can define how to get that that image can figure out so if I have a",
    "start": "1487929",
    "end": "1494139"
  },
  {
    "text": "completely different image format that you know that's newly newly conceived I can I can define how that actually gets",
    "start": "1494139",
    "end": "1500619"
  },
  {
    "text": "converted into a run see specification or a specification for whatever runtime you want so then once we've created the",
    "start": "1500619",
    "end": "1508269"
  },
  {
    "text": "container object we then create a task for that container and then and and",
    "start": "1508269",
    "end": "1515080"
  },
  {
    "text": "that'll start up and then we so then we specify a weight and then once we're waiting on once we have a weight on that",
    "start": "1515080",
    "end": "1521019"
  },
  {
    "text": "task we start it up and that will actually run the container so once you",
    "start": "1521019",
    "end": "1527619"
  },
  {
    "text": "once you're actually running the container so this is an example of killing the task and it'll show a little bit about more more about the weight and",
    "start": "1527619",
    "end": "1534100"
  },
  {
    "text": "exit but you can see we wait and then we can call it kill on that and then then",
    "start": "1534100",
    "end": "1539710"
  },
  {
    "text": "you can wait on this channel to get the status and then you can respond with the status and I have this as an example",
    "start": "1539710",
    "end": "1545019"
  },
  {
    "text": "here that we can just run and it will work directly so so just just like this",
    "start": "1545019",
    "end": "1553929"
  },
  {
    "text": "is very similar to what we had before so like we're connecting to the socket we pull in",
    "start": "1553929",
    "end": "1559870"
  },
  {
    "text": "example namespace we pull Redis Alpine we have this option to unpack it into a snapshot you don't you don't that's not",
    "start": "1559870",
    "end": "1566230"
  },
  {
    "text": "required you can you can not unpack it into a snapshot because maybe you want to add your own layers in between containers or do something completely",
    "start": "1566230",
    "end": "1572620"
  },
  {
    "text": "different we define a new container and then we we could we have a few same",
    "start": "1572620",
    "end": "1581110"
  },
  {
    "text": "thing on the slides before except I think we pull in a new snapshot on top of that and then we'll create a task",
    "start": "1581110",
    "end": "1588300"
  },
  {
    "text": "just like the slides and we will wait and then kill that task and what this so",
    "start": "1588300",
    "end": "1596350"
  },
  {
    "start": "1595000",
    "end": "1742000"
  },
  {
    "text": "running this so I can see it in here and then and we can actually do this build",
    "start": "1596350",
    "end": "1602340"
  },
  {
    "text": "and we can we can run this example and it needs to be run as sudo because it passes off some FIFO into container D",
    "start": "1602340",
    "end": "1608950"
  },
  {
    "text": "and we can see here this so this is I think that's pulling the image right now and then it should run Redis so what's",
    "start": "1608950",
    "end": "1623860"
  },
  {
    "text": "what's that what's happening right now we should be able to use so we should",
    "start": "1623860",
    "end": "1632950"
  },
  {
    "text": "see a new namespace for the example alright so we see that and we can see that there should be a new container in",
    "start": "1632950",
    "end": "1638200"
  },
  {
    "text": "there in that namespace no maybe it's",
    "start": "1638200",
    "end": "1645400"
  },
  {
    "text": "just like hanging on the Wi-Fi yeah it's",
    "start": "1645400",
    "end": "1657400"
  },
  {
    "text": "it's it's pulled the image oh there it goes Redis okay so yeah so I pulled the",
    "start": "1657400",
    "end": "1662950"
  },
  {
    "text": "image ready to start it up it hits some logs and then we waited like three seconds and then we killed it and it it",
    "start": "1662950",
    "end": "1671170"
  },
  {
    "text": "exited with an exit status of zero so it's very very easy to build very small lines of code that's that kind of code",
    "start": "1671170",
    "end": "1677710"
  },
  {
    "text": "is that is the code that you would see in docker or in in CRI so the so that",
    "start": "1677710",
    "end": "1686320"
  },
  {
    "text": "you can actually compose this with the other other things I'll make these slides available but here's an example that would run H top",
    "start": "1686320",
    "end": "1692530"
  },
  {
    "text": "so you could add this add this to your run C spec and it will run H top inside",
    "start": "1692530",
    "end": "1698470"
  },
  {
    "text": "of that same container and you can just you can build these there's things you can do with networking you can do things",
    "start": "1698470",
    "end": "1704170"
  },
  {
    "text": "with file systems mounts TTY etc so with",
    "start": "1704170",
    "end": "1709630"
  },
  {
    "text": "that so are there any questions at this point it's kind of been like I want to get in a lot of demo and stuff like that",
    "start": "1709630",
    "end": "1715840"
  },
  {
    "text": "and I know it's been a bit of a frantic talk but is there because seriously there's time for questions no all right",
    "start": "1715840",
    "end": "1722290"
  },
  {
    "text": "oh yeah go ahead",
    "start": "1722290",
    "end": "1725190"
  },
  {
    "text": "no no this there's no the only thing I did in docker was remove all the containers from it and then run them on",
    "start": "1731070",
    "end": "1737110"
  },
  {
    "text": "container D this is completely without I mean let me see if I can show you so so here's dr. docker was is running nothing",
    "start": "1737110",
    "end": "1743680"
  },
  {
    "start": "1742000",
    "end": "1899000"
  },
  {
    "text": "right and PS - a and then we can actually so show like ps3 maybe that might might be a good way to show it",
    "start": "1743680",
    "end": "1751830"
  },
  {
    "text": "so here we see gnome terminal and we see sudo container D which is running on",
    "start": "1751830",
    "end": "1759100"
  },
  {
    "text": "this terminal right here and then you can see all that can all the container",
    "start": "1759100",
    "end": "1764290"
  },
  {
    "text": "shims so we can see Cuba API server scheduler etc there's no docker running here any other questions",
    "start": "1764290",
    "end": "1773940"
  },
  {
    "text": "I'm sorry what what about it well so the",
    "start": "1774000",
    "end": "1785530"
  },
  {
    "text": "H top is just an example think so so if you want metrics that we actually have a Prometheus endpoint and you can just",
    "start": "1785530",
    "end": "1790870"
  },
  {
    "text": "curl that and so let's see here v1",
    "start": "1790870",
    "end": "1796410"
  },
  {
    "text": "metrics and you can just pull these into Promethea so we have all sorts of containers so like so so here's you can",
    "start": "1796410",
    "end": "1809770"
  },
  {
    "text": "go through and get the G RPC metrics but every single so but you can get all the",
    "start": "1809770",
    "end": "1815650"
  },
  {
    "text": "metrics for like your containers like CPU usage you can get the",
    "start": "1815650",
    "end": "1822610"
  },
  {
    "text": "the memory usage like block IO usage any like network usage disk usage that kind",
    "start": "1822610",
    "end": "1827620"
  },
  {
    "text": "of stuff through Prometheus the HT top example is just a common Eider it's not how you'd normally get metrics for a container no no no no so this the the HT",
    "start": "1827620",
    "end": "1839710"
  },
  {
    "text": "top example has nothing to do with getting metrics in a production system normally it's just an example of how you",
    "start": "1839710",
    "end": "1845200"
  },
  {
    "text": "can do something like silly or non-standard by just adding it into your code and and using that if you want if",
    "start": "1845200",
    "end": "1852160"
  },
  {
    "text": "you want metrics you get you can get them through Prometheus with container D all right any other questions yes I",
    "start": "1852160",
    "end": "1861840"
  },
  {
    "text": "forgot that sorry",
    "start": "1861840",
    "end": "1865320"
  },
  {
    "text": "no III chmod of the socket so yeah",
    "start": "1875370",
    "end": "1882429"
  },
  {
    "text": "here's the here's the cry cuddle pods that you can see yeah there we go",
    "start": "1882429",
    "end": "1889530"
  },
  {
    "text": "inspect pee yeah so this is actually this is the same pod manifest that was",
    "start": "1897570",
    "end": "1902609"
  },
  {
    "start": "1899000",
    "end": "2074000"
  },
  {
    "text": "sitting in container D before right yeah",
    "start": "1902609",
    "end": "1908129"
  },
  {
    "text": "so okay thank you is any other questions",
    "start": "1908129",
    "end": "1916999"
  },
  {
    "text": "so so you so like if you just want like a really simple container API and that",
    "start": "1924710",
    "end": "1930149"
  },
  {
    "text": "works for you docker is great and container D is really built for when the like 20% use",
    "start": "1930149",
    "end": "1936749"
  },
  {
    "text": "case where you need something special like you need special mounts that happen",
    "start": "1936749",
    "end": "1941879"
  },
  {
    "text": "at certain times or you want to integrate with some like wildly different networking system or just",
    "start": "1941879",
    "end": "1948960"
  },
  {
    "text": "something you can't do with docker and isn't gonna get added to docker",
    "start": "1948960",
    "end": "1953929"
  },
  {
    "text": "it's absolutely for production systems yeah yeah if you need special is so so",
    "start": "1957200",
    "end": "1972690"
  },
  {
    "text": "if you're if you're if you're going it with your running kubernetes like container d is a great choice and if you just need a simple run time with the CRI",
    "start": "1972690",
    "end": "1979109"
  },
  {
    "text": "support or if you need something if you want to do something really custom with containers like build an operating system or build some other sort of like",
    "start": "1979109",
    "end": "1986549"
  },
  {
    "text": "a can yeah yeah or or that kind of thing",
    "start": "1986549",
    "end": "1991590"
  },
  {
    "text": "where's like if Dockers model of containers doesn't work for you for some reason like you can go to container D",
    "start": "1991590",
    "end": "1997649"
  },
  {
    "text": "and customize it and make it make it work with with you can still use docker images with it and and then and you know",
    "start": "1997649",
    "end": "2005029"
  },
  {
    "text": "modify how that works in some way let's say every single docker image you wanted to add a file at slash hello and route",
    "start": "2005029",
    "end": "2011179"
  },
  {
    "text": "like you could do that with container d but that'd be very hard to do with docker yeah",
    "start": "2011179",
    "end": "2017859"
  },
  {
    "text": "yeah so like this a it's so like so so for example so you have CRI which is the",
    "start": "2026250",
    "end": "2031330"
  },
  {
    "text": "kubernetes container runtime interface and then you have docker right and those are both at this kind of the same level",
    "start": "2031330",
    "end": "2037390"
  },
  {
    "text": "of abstraction but they think about containers differently but container D is able to fit into both of those models",
    "start": "2037390",
    "end": "2043480"
  },
  {
    "text": "does that make sense because it's flexible enough it doesn't make its own abstractions they get in the way of",
    "start": "2043480",
    "end": "2048908"
  },
  {
    "text": "kubernetes or docker or build kit or or any large list of different systems I",
    "start": "2048909",
    "end": "2074158"
  },
  {
    "start": "2074000",
    "end": "2134000"
  },
  {
    "text": "mean it's it's not meant to be a replacement for docker in that sense so but if I suspect that it's a but if",
    "start": "2074159",
    "end": "2081310"
  },
  {
    "text": "you're if you're doing host mounts if you're doing if you're running things with I mean for the most part if you're just using docker in your development",
    "start": "2081310",
    "end": "2087070"
  },
  {
    "text": "workflow continue using docker it's it's a bit like we're not we're not going to try to compete with docker that would be",
    "start": "2087070",
    "end": "2092108"
  },
  {
    "text": "a silly waste of engineering but yeah",
    "start": "2092109",
    "end": "2097660"
  },
  {
    "text": "you need to know yeah yeah so but yeah in the future we might have that there",
    "start": "2097660",
    "end": "2103660"
  },
  {
    "text": "there might be some some asks for a more a more user friendly command-line client",
    "start": "2103660",
    "end": "2108790"
  },
  {
    "text": "just just the thing the thing is like container D has such a wide surface area that exposing all of that in a",
    "start": "2108790",
    "end": "2114190"
  },
  {
    "text": "command-line client would take away from its capability over time any other",
    "start": "2114190",
    "end": "2121300"
  },
  {
    "text": "questions all right how much time do ya",
    "start": "2121300",
    "end": "2129700"
  },
  {
    "text": "ok all right all right thanks for coming",
    "start": "2129700",
    "end": "2133530"
  }
]