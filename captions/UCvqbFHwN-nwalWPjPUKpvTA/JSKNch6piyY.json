[
  {
    "text": "so please join me in welcoming nanor to",
    "start": "0",
    "end": "2820"
  },
  {
    "text": "the stage yeah",
    "start": "2820",
    "end": "3880"
  },
  {
    "text": "[Applause]",
    "start": "3880",
    "end": "8519"
  },
  {
    "text": "yeah hello everyone I'm Andor kratcher",
    "start": "8519",
    "end": "11519"
  },
  {
    "text": "from Cisco uh basically I'm a",
    "start": "11519",
    "end": "14700"
  },
  {
    "text": "engineering technical leader at Cisco",
    "start": "14700",
    "end": "16680"
  },
  {
    "text": "whatever name it is basically I'm a",
    "start": "16680",
    "end": "18960"
  },
  {
    "text": "software engineer by heart uh",
    "start": "18960",
    "end": "21900"
  },
  {
    "text": "uh I originally",
    "start": "21900",
    "end": "24359"
  },
  {
    "text": "entered Cisco from Bonsai Cloud Bonsai",
    "start": "24359",
    "end": "27359"
  },
  {
    "text": "Cloud was a",
    "start": "27359",
    "end": "28859"
  },
  {
    "text": "Cloud native kubernetes focused startup",
    "start": "28859",
    "end": "31679"
  },
  {
    "text": "I don't know how many of you heard about",
    "start": "31679",
    "end": "33600"
  },
  {
    "text": "it and Cisco acquired it and now I am",
    "start": "33600",
    "end": "37500"
  },
  {
    "text": "part of emerging Technologies and",
    "start": "37500",
    "end": "39899"
  },
  {
    "text": "innovation",
    "start": "39899",
    "end": "41820"
  },
  {
    "text": "of Cisco and we are trying to invent new",
    "start": "41820",
    "end": "45840"
  },
  {
    "text": "things and",
    "start": "45840",
    "end": "48480"
  },
  {
    "text": "experiment with new technologies like",
    "start": "48480",
    "end": "50280"
  },
  {
    "text": "wasn't",
    "start": "50280",
    "end": "52200"
  },
  {
    "text": "Okay so",
    "start": "52200",
    "end": "54660"
  },
  {
    "text": "there is a lot of Buzz around bosom and",
    "start": "54660",
    "end": "57420"
  },
  {
    "text": "also eppf because",
    "start": "57420",
    "end": "60059"
  },
  {
    "text": "you know a lot of networking related",
    "start": "60059",
    "end": "62579"
  },
  {
    "text": "topics can be enhanced by ebpf",
    "start": "62579",
    "end": "66540"
  },
  {
    "text": "a lot of edge based stuff can be",
    "start": "66540",
    "end": "69060"
  },
  {
    "text": "enhanced by wasm and",
    "start": "69060",
    "end": "72180"
  },
  {
    "text": "so you know",
    "start": "72180",
    "end": "74840"
  },
  {
    "text": "ebpf and webassembly whose VM Rings this",
    "start": "74840",
    "end": "79260"
  },
  {
    "text": "title says it depends but rust is the",
    "start": "79260",
    "end": "82200"
  },
  {
    "text": "faith as in the previous talk for wasm",
    "start": "82200",
    "end": "85280"
  },
  {
    "text": "rust is a is a really good language so",
    "start": "85280",
    "end": "88740"
  },
  {
    "text": "the support is the best for wasn't in",
    "start": "88740",
    "end": "91560"
  },
  {
    "text": "Rust",
    "start": "91560",
    "end": "92700"
  },
  {
    "text": "okay so ebpf I would love to see an evpf",
    "start": "92700",
    "end": "96000"
  },
  {
    "text": "and Muslim comparison",
    "start": "96000",
    "end": "98360"
  },
  {
    "text": "ebvf is not a general purpose",
    "start": "98360",
    "end": "100619"
  },
  {
    "text": "computation language it's sophisticated",
    "start": "100619",
    "end": "102960"
  },
  {
    "text": "query language for extracting data from",
    "start": "102960",
    "end": "104700"
  },
  {
    "text": "Network packages and from tracing events",
    "start": "104700",
    "end": "107759"
  },
  {
    "text": "inside inside the kernel but it's not a",
    "start": "107759",
    "end": "110280"
  },
  {
    "text": "general purpose language and what is",
    "start": "110280",
    "end": "112020"
  },
  {
    "text": "wazen",
    "start": "112020",
    "end": "113040"
  },
  {
    "text": "is a target",
    "start": "113040",
    "end": "115020"
  },
  {
    "text": "a bytecode target for general purpose",
    "start": "115020",
    "end": "117659"
  },
  {
    "text": "languages",
    "start": "117659",
    "end": "118860"
  },
  {
    "text": "okay ebpf and version exploring the",
    "start": "118860",
    "end": "121740"
  },
  {
    "text": "future of service mesh",
    "start": "121740",
    "end": "123600"
  },
  {
    "text": "evpf and version where the New Kids on",
    "start": "123600",
    "end": "125759"
  },
  {
    "text": "the Block for the service mesh",
    "start": "125759",
    "end": "126960"
  },
  {
    "text": "applications to achieve high performance",
    "start": "126960",
    "end": "128700"
  },
  {
    "text": "as I mentioned both of them can be",
    "start": "128700",
    "end": "131700"
  },
  {
    "text": "enhancing the network packet flow",
    "start": "131700",
    "end": "134879"
  },
  {
    "text": "one of them on the network cards one of",
    "start": "134879",
    "end": "137040"
  },
  {
    "text": "them on network filters if you know",
    "start": "137040",
    "end": "138599"
  },
  {
    "text": "Envoy a lot of volume filters are",
    "start": "138599",
    "end": "141239"
  },
  {
    "text": "running inside envoy to",
    "start": "141239",
    "end": "144480"
  },
  {
    "text": "uh enhanced service mesh traffic and",
    "start": "144480",
    "end": "148200"
  },
  {
    "text": "that's it",
    "start": "148200",
    "end": "149280"
  },
  {
    "text": "and also evaluations so there are white",
    "start": "149280",
    "end": "151739"
  },
  {
    "text": "papers",
    "start": "151739",
    "end": "152840"
  },
  {
    "text": "around the comparison between",
    "start": "152840",
    "end": "155819"
  },
  {
    "text": "webassembly and ebpf",
    "start": "155819",
    "end": "157920"
  },
  {
    "text": "so basically there is a lot of Buzz",
    "start": "157920",
    "end": "160020"
  },
  {
    "text": "around ebpf and version and how the",
    "start": "160020",
    "end": "163140"
  },
  {
    "text": "they differ how they can work together",
    "start": "163140",
    "end": "166200"
  },
  {
    "text": "let's see how they can work together on",
    "start": "166200",
    "end": "168840"
  },
  {
    "text": "the Kernel level so",
    "start": "168840",
    "end": "171360"
  },
  {
    "text": "since we are trying to call version code",
    "start": "171360",
    "end": "175260"
  },
  {
    "text": "from ebpf we have to be on the Kernel",
    "start": "175260",
    "end": "178560"
  },
  {
    "text": "level since evpf runs inside the kernel",
    "start": "178560",
    "end": "182940"
  },
  {
    "text": "okay let's say what is ebpf closing how",
    "start": "182940",
    "end": "185519"
  },
  {
    "text": "many of you employed or used ebpf before",
    "start": "185519",
    "end": "190800"
  },
  {
    "text": "yeah",
    "start": "190800",
    "end": "192000"
  },
  {
    "text": "okay",
    "start": "192000",
    "end": "193620"
  },
  {
    "text": "pretty good amount so what is ebpf it's",
    "start": "193620",
    "end": "197640"
  },
  {
    "text": "a efficient virtual machine inside the",
    "start": "197640",
    "end": "201480"
  },
  {
    "text": "kernel",
    "start": "201480",
    "end": "202560"
  },
  {
    "text": "which can just compile into native",
    "start": "202560",
    "end": "206099"
  },
  {
    "text": "machine code",
    "start": "206099",
    "end": "207540"
  },
  {
    "text": "it's an alternate to camera modules",
    "start": "207540",
    "end": "210060"
  },
  {
    "text": "Canada modules are hard to write hard to",
    "start": "210060",
    "end": "212640"
  },
  {
    "text": "maintain you have to keep compatibility",
    "start": "212640",
    "end": "214980"
  },
  {
    "text": "between different kernel versions you",
    "start": "214980",
    "end": "218099"
  },
  {
    "text": "have to do a lot of ceremony mumbo jumbo",
    "start": "218099",
    "end": "221700"
  },
  {
    "text": "to set up academic",
    "start": "221700",
    "end": "225299"
  },
  {
    "text": "you have to prepare for extreme amount",
    "start": "225299",
    "end": "228840"
  },
  {
    "text": "of concurrent settings like I am I'm in",
    "start": "228840",
    "end": "231900"
  },
  {
    "text": "an interrupt context am I in a normal",
    "start": "231900",
    "end": "234060"
  },
  {
    "text": "context can I do this locking right now",
    "start": "234060",
    "end": "237420"
  },
  {
    "text": "or if I lock something then the whole",
    "start": "237420",
    "end": "239519"
  },
  {
    "text": "system will freeze",
    "start": "239519",
    "end": "241080"
  },
  {
    "text": "yeah so it's hard to write cannot",
    "start": "241080",
    "end": "243239"
  },
  {
    "text": "modules so ebpf is an alternative method",
    "start": "243239",
    "end": "247200"
  },
  {
    "text": "since it supports low level tracing",
    "start": "247200",
    "end": "250500"
  },
  {
    "text": "insertion points so you can write a",
    "start": "250500",
    "end": "254459"
  },
  {
    "text": "small C snippet insert it to a different",
    "start": "254459",
    "end": "258060"
  },
  {
    "text": "uh",
    "start": "258060",
    "end": "260100"
  },
  {
    "text": "to a system tracing event for example a",
    "start": "260100",
    "end": "262860"
  },
  {
    "text": "file open Event a file close event a",
    "start": "262860",
    "end": "265199"
  },
  {
    "text": "file right event a network so everything",
    "start": "265199",
    "end": "267479"
  },
  {
    "text": "that is a file even a socket is a file",
    "start": "267479",
    "end": "270300"
  },
  {
    "text": "so it is also capable to do Network",
    "start": "270300",
    "end": "272340"
  },
  {
    "text": "packet manually so you can",
    "start": "272340",
    "end": "276419"
  },
  {
    "text": "Parts Network packets redirect Network",
    "start": "276419",
    "end": "279300"
  },
  {
    "text": "packets drop Network packets easily with",
    "start": "279300",
    "end": "281460"
  },
  {
    "text": "eppf and with XDP which is uh special",
    "start": "281460",
    "end": "286020"
  },
  {
    "text": "part of abpf",
    "start": "286020",
    "end": "288600"
  },
  {
    "text": "okay",
    "start": "288600",
    "end": "289979"
  },
  {
    "text": "it communicates through Maps so evpf",
    "start": "289979",
    "end": "292680"
  },
  {
    "text": "programs can communicate with each other",
    "start": "292680",
    "end": "294900"
  },
  {
    "text": "through ebpf maps and also between the",
    "start": "294900",
    "end": "298020"
  },
  {
    "text": "user space and the Canon space",
    "start": "298020",
    "end": "300479"
  },
  {
    "text": "so it's a safe extension mechanism since",
    "start": "300479",
    "end": "302820"
  },
  {
    "text": "it runs inside the VM it's very safe to",
    "start": "302820",
    "end": "306180"
  },
  {
    "text": "uh",
    "start": "306180",
    "end": "307560"
  },
  {
    "text": "write your code there is a really small",
    "start": "307560",
    "end": "310500"
  },
  {
    "text": "chance that you will crash your virtual",
    "start": "310500",
    "end": "312300"
  },
  {
    "text": "machine your Edge device or whatever",
    "start": "312300",
    "end": "314880"
  },
  {
    "text": "since uh",
    "start": "314880",
    "end": "316740"
  },
  {
    "text": "or the instructions that you are",
    "start": "316740",
    "end": "319740"
  },
  {
    "text": "executing are verified by the ebpf",
    "start": "319740",
    "end": "321660"
  },
  {
    "text": "verifier beforehand inserting the ebpf",
    "start": "321660",
    "end": "324600"
  },
  {
    "text": "code into the kernel",
    "start": "324600",
    "end": "326520"
  },
  {
    "text": "how the ebpf",
    "start": "326520",
    "end": "329900"
  },
  {
    "text": "workflow looks like so",
    "start": "329940",
    "end": "332940"
  },
  {
    "text": "the whole ebpf stuff is down inside the",
    "start": "332940",
    "end": "335400"
  },
  {
    "text": "kernel level you can",
    "start": "335400",
    "end": "337940"
  },
  {
    "text": "attach ebpf",
    "start": "337940",
    "end": "340380"
  },
  {
    "text": "programs the sockets network devices and",
    "start": "340380",
    "end": "344639"
  },
  {
    "text": "here are the maps also down on the",
    "start": "344639",
    "end": "346680"
  },
  {
    "text": "Kernel level and there's some process in",
    "start": "346680",
    "end": "348960"
  },
  {
    "text": "the user space are doing system calls",
    "start": "348960",
    "end": "351419"
  },
  {
    "text": "like send message receive machines as I",
    "start": "351419",
    "end": "353520"
  },
  {
    "text": "mentioned previously you can subscribe",
    "start": "353520",
    "end": "355979"
  },
  {
    "text": "to those events and do some tracing",
    "start": "355979",
    "end": "359460"
  },
  {
    "text": "check what is going down",
    "start": "359460",
    "end": "362600"
  },
  {
    "text": "and do decisions based on those",
    "start": "362600",
    "end": "366660"
  },
  {
    "text": "and also user space com applications can",
    "start": "366660",
    "end": "369900"
  },
  {
    "text": "communicate with evpf programs through",
    "start": "369900",
    "end": "371940"
  },
  {
    "text": "those Maps",
    "start": "371940",
    "end": "373139"
  },
  {
    "text": "you can store data inside the maps",
    "start": "373139",
    "end": "377060"
  },
  {
    "text": "you can basically attach each and every",
    "start": "377060",
    "end": "380820"
  },
  {
    "text": "CPU a map to it so you don't have",
    "start": "380820",
    "end": "383220"
  },
  {
    "text": "concurrency issues",
    "start": "383220",
    "end": "384780"
  },
  {
    "text": "okay and what is webassembly how many of",
    "start": "384780",
    "end": "387360"
  },
  {
    "text": "you have re compiled something to",
    "start": "387360",
    "end": "390780"
  },
  {
    "text": "webassembly",
    "start": "390780",
    "end": "392160"
  },
  {
    "text": "yeah a very large amount of people okay",
    "start": "392160",
    "end": "395520"
  },
  {
    "text": "so this one this is a webassembly heavy",
    "start": "395520",
    "end": "399000"
  },
  {
    "text": "audience",
    "start": "399000",
    "end": "401419"
  },
  {
    "text": "so what is webassembly it's an Open",
    "start": "401419",
    "end": "403740"
  },
  {
    "text": "start now a bytecode specification",
    "start": "403740",
    "end": "406199"
  },
  {
    "text": "it's very very close to vbpf from this",
    "start": "406199",
    "end": "409860"
  },
  {
    "text": "first sentence",
    "start": "409860",
    "end": "411419"
  },
  {
    "text": "it's a portable binding format",
    "start": "411419",
    "end": "413759"
  },
  {
    "text": "ebpf is also portable with the query",
    "start": "413759",
    "end": "417600"
  },
  {
    "text": "specification compile ones runs",
    "start": "417600",
    "end": "419880"
  },
  {
    "text": "everywhere but webassembly has pretty",
    "start": "419880",
    "end": "423479"
  },
  {
    "text": "huge advantages compared to ebpf",
    "start": "423479",
    "end": "426419"
  },
  {
    "text": "from the portability point of view",
    "start": "426419",
    "end": "430020"
  },
  {
    "text": "supported by a huge amount of languages",
    "start": "430020",
    "end": "432240"
  },
  {
    "text": "so",
    "start": "432240",
    "end": "433680"
  },
  {
    "text": "basically not awesome that supports",
    "start": "433680",
    "end": "436440"
  },
  {
    "text": "languages but languages are supporting",
    "start": "436440",
    "end": "438900"
  },
  {
    "text": "wasn't so if they have a compiler to",
    "start": "438900",
    "end": "440940"
  },
  {
    "text": "compile to bosom",
    "start": "440940",
    "end": "442740"
  },
  {
    "text": "they can Target wasn't VMS",
    "start": "442740",
    "end": "446780"
  },
  {
    "text": "there are a lot of efficient user space",
    "start": "447000",
    "end": "449280"
  },
  {
    "text": "VMS out there",
    "start": "449280",
    "end": "451880"
  },
  {
    "text": "with different kind of execution",
    "start": "451880",
    "end": "454139"
  },
  {
    "text": "mechanisms so there are interpreters",
    "start": "454139",
    "end": "457319"
  },
  {
    "text": "interpreters are slower but they have",
    "start": "457319",
    "end": "459539"
  },
  {
    "text": "their advantages they are more portable",
    "start": "459539",
    "end": "461940"
  },
  {
    "text": "than jit compiling VMS since you don't",
    "start": "461940",
    "end": "465300"
  },
  {
    "text": "have to",
    "start": "465300",
    "end": "466699"
  },
  {
    "text": "move around a lot of jitting code with",
    "start": "466699",
    "end": "469979"
  },
  {
    "text": "low level assembly and stuff like that",
    "start": "469979",
    "end": "471720"
  },
  {
    "text": "you write your interpreter in C or in",
    "start": "471720",
    "end": "474300"
  },
  {
    "text": "Rust and there you have it in every kind",
    "start": "474300",
    "end": "477599"
  },
  {
    "text": "of",
    "start": "477599",
    "end": "478919"
  },
  {
    "text": "Target architecture and platform",
    "start": "478919",
    "end": "481560"
  },
  {
    "text": "there is ahead of the time compilation",
    "start": "481560",
    "end": "483720"
  },
  {
    "text": "so you can comp compile your version",
    "start": "483720",
    "end": "487560"
  },
  {
    "text": "modules into binary beforehand before",
    "start": "487560",
    "end": "491160"
  },
  {
    "text": "running the actual applications and then",
    "start": "491160",
    "end": "493139"
  },
  {
    "text": "executing it on the with the help of the",
    "start": "493139",
    "end": "494880"
  },
  {
    "text": "VM order on time",
    "start": "494880",
    "end": "496620"
  },
  {
    "text": "and also there is jit when you load the",
    "start": "496620",
    "end": "500340"
  },
  {
    "text": "version byte code into the VM and just",
    "start": "500340",
    "end": "503699"
  },
  {
    "text": "in time compile it when you run it the",
    "start": "503699",
    "end": "506099"
  },
  {
    "text": "methods that you need",
    "start": "506099",
    "end": "507960"
  },
  {
    "text": "all this is handled by the runtime which",
    "start": "507960",
    "end": "510240"
  },
  {
    "text": "is sandboxed so you have all the safety",
    "start": "510240",
    "end": "513659"
  },
  {
    "text": "features of a classic virtual machine",
    "start": "513659",
    "end": "515760"
  },
  {
    "text": "memory safety isolation stuff like that",
    "start": "515760",
    "end": "519240"
  },
  {
    "text": "and also there are different kind of uh",
    "start": "519240",
    "end": "521940"
  },
  {
    "text": "mechanisms out there for this",
    "start": "521940",
    "end": "524700"
  },
  {
    "text": "it wasn't in the camera okay so let's",
    "start": "524700",
    "end": "527399"
  },
  {
    "text": "move down to the piano level but this is",
    "start": "527399",
    "end": "530399"
  },
  {
    "text": "not something that we have invented or I",
    "start": "530399",
    "end": "532440"
  },
  {
    "text": "haven't invented there's some already",
    "start": "532440",
    "end": "534240"
  },
  {
    "text": "existing",
    "start": "534240",
    "end": "535700"
  },
  {
    "text": "literature in this topic",
    "start": "535700",
    "end": "537899"
  },
  {
    "text": "so Ryan Hunter invented wasn't Jeet it",
    "start": "537899",
    "end": "541800"
  },
  {
    "text": "was a low level virtual machine that",
    "start": "541800",
    "end": "543600"
  },
  {
    "text": "could order a digit so jit byte code on",
    "start": "543600",
    "end": "546959"
  },
  {
    "text": "the car in the kernel users in the Canon",
    "start": "546959",
    "end": "549360"
  },
  {
    "text": "space",
    "start": "549360",
    "end": "550260"
  },
  {
    "text": "this report doesn't really exist anymore",
    "start": "550260",
    "end": "552480"
  },
  {
    "text": "but I'm giving Ryan Hunter the credit",
    "start": "552480",
    "end": "554459"
  },
  {
    "text": "because uh he deleted this repo but",
    "start": "554459",
    "end": "557760"
  },
  {
    "text": "there are a lot of forks out there on",
    "start": "557760",
    "end": "559380"
  },
  {
    "text": "GitHub so if you Google it you will find",
    "start": "559380",
    "end": "562560"
  },
  {
    "text": "it",
    "start": "562560",
    "end": "563279"
  },
  {
    "text": "okay",
    "start": "563279",
    "end": "564360"
  },
  {
    "text": "was Mariah okay it's also another",
    "start": "564360",
    "end": "568440"
  },
  {
    "text": "virtual machine down in the kennel by",
    "start": "568440",
    "end": "570600"
  },
  {
    "text": "awesome it was more",
    "start": "570600",
    "end": "572459"
  },
  {
    "text": "and also there is a different uh",
    "start": "572459",
    "end": "576380"
  },
  {
    "text": "project which is really really uh",
    "start": "576380",
    "end": "581640"
  },
  {
    "text": "not a virtual machine done in the camera",
    "start": "581640",
    "end": "584220"
  },
  {
    "text": "but it's a virtual machine in the user",
    "start": "584220",
    "end": "586620"
  },
  {
    "text": "space so",
    "start": "586620",
    "end": "588120"
  },
  {
    "text": "it is happening it was a you know when",
    "start": "588120",
    "end": "590820"
  },
  {
    "text": "BPF was in BPF this is the project name",
    "start": "590820",
    "end": "592980"
  },
  {
    "text": "so it is it is a framework for doing BPF",
    "start": "592980",
    "end": "597480"
  },
  {
    "text": "with the help of volume code so you you",
    "start": "597480",
    "end": "600360"
  },
  {
    "text": "write your ebpf applications with any uh",
    "start": "600360",
    "end": "603660"
  },
  {
    "text": "and insert it in uh with the you know",
    "start": "603660",
    "end": "606360"
  },
  {
    "text": "Mia CLI and the user space part of the",
    "start": "606360",
    "end": "609060"
  },
  {
    "text": "abpf applications will can be written in",
    "start": "609060",
    "end": "612240"
  },
  {
    "text": "any kind of languages since the user",
    "start": "612240",
    "end": "614160"
  },
  {
    "text": "space part will be compiled to bottom",
    "start": "614160",
    "end": "617839"
  },
  {
    "text": "okay so our project is called the wasn't",
    "start": "617880",
    "end": "621360"
  },
  {
    "text": "kernel module so it's somewhere between",
    "start": "621360",
    "end": "623940"
  },
  {
    "text": "a query model and dbpf so as I mentioned",
    "start": "623940",
    "end": "627420"
  },
  {
    "text": "cadmium models are hard to write and",
    "start": "627420",
    "end": "629160"
  },
  {
    "text": "maintain and you have to do a lot of",
    "start": "629160",
    "end": "631080"
  },
  {
    "text": "ceremony ebpf can be inserted into",
    "start": "631080",
    "end": "635399"
  },
  {
    "text": "different kind of tracing points and",
    "start": "635399",
    "end": "637380"
  },
  {
    "text": "network packet extraction points but",
    "start": "637380",
    "end": "639839"
  },
  {
    "text": "it's not that general purpose so what",
    "start": "639839",
    "end": "642720"
  },
  {
    "text": "could we do let's do something that is",
    "start": "642720",
    "end": "645420"
  },
  {
    "text": "more easier to write since we have a",
    "start": "645420",
    "end": "648600"
  },
  {
    "text": "virtual machine done in the kernel so",
    "start": "648600",
    "end": "650339"
  },
  {
    "text": "you can put volume into it",
    "start": "650339",
    "end": "652440"
  },
  {
    "text": "and it has more of kind of a feeling of",
    "start": "652440",
    "end": "656760"
  },
  {
    "text": "a general purpose language since ebpf is",
    "start": "656760",
    "end": "659279"
  },
  {
    "text": "not a general purpose language but if",
    "start": "659279",
    "end": "661260"
  },
  {
    "text": "you expose some methods as a host method",
    "start": "661260",
    "end": "664680"
  },
  {
    "text": "to this VM that we just moved down to",
    "start": "664680",
    "end": "666420"
  },
  {
    "text": "the kernel",
    "start": "666420",
    "end": "667980"
  },
  {
    "text": "you can do general purpose things inside",
    "start": "667980",
    "end": "670560"
  },
  {
    "text": "the VM in in a wasmo VM",
    "start": "670560",
    "end": "675200"
  },
  {
    "text": "so it's something like a Sandbox scanner",
    "start": "675300",
    "end": "677220"
  },
  {
    "text": "modules",
    "start": "677220",
    "end": "678420"
  },
  {
    "text": "since the VM has the features of a",
    "start": "678420",
    "end": "682200"
  },
  {
    "text": "general virtual machine we are sandbox",
    "start": "682200",
    "end": "685200"
  },
  {
    "text": "as I mentioned we have memory safety",
    "start": "685200",
    "end": "686940"
  },
  {
    "text": "isolation and stuff like that",
    "start": "686940",
    "end": "689700"
  },
  {
    "text": "so we can piggyback the content like",
    "start": "689700",
    "end": "691620"
  },
  {
    "text": "it's isolation of wasn't",
    "start": "691620",
    "end": "694920"
  },
  {
    "text": "it allows us to reuse the user space",
    "start": "694920",
    "end": "698579"
  },
  {
    "text": "code that we have in user space and the",
    "start": "698579",
    "end": "700860"
  },
  {
    "text": "the logic basically so you can move down",
    "start": "700860",
    "end": "703079"
  },
  {
    "text": "piano",
    "start": "703079",
    "end": "704720"
  },
  {
    "text": "user space logic into the kernel space",
    "start": "704720",
    "end": "707220"
  },
  {
    "text": "with the help of the button",
    "start": "707220",
    "end": "709640"
  },
  {
    "text": "this whole project is extremely",
    "start": "709640",
    "end": "712079"
  },
  {
    "text": "experimental so please don't employ it",
    "start": "712079",
    "end": "714240"
  },
  {
    "text": "in your production virtual machines",
    "start": "714240",
    "end": "717540"
  },
  {
    "text": "and it only targets version 32 unknown",
    "start": "717540",
    "end": "721019"
  },
  {
    "text": "unknown so there is no Rosy support",
    "start": "721019",
    "end": "722820"
  },
  {
    "text": "inside",
    "start": "722820",
    "end": "724040"
  },
  {
    "text": "or in in our project in the candle level",
    "start": "724040",
    "end": "726779"
  },
  {
    "text": "since it's since was it what is was it",
    "start": "726779",
    "end": "729600"
  },
  {
    "text": "it's basically a standard for exposing",
    "start": "729600",
    "end": "732720"
  },
  {
    "text": "file opens socket rights and stuff like",
    "start": "732720",
    "end": "735540"
  },
  {
    "text": "that so since",
    "start": "735540",
    "end": "738540"
  },
  {
    "text": "uh this is not that straightforward on",
    "start": "738540",
    "end": "740880"
  },
  {
    "text": "the Canada level we are not supporting",
    "start": "740880",
    "end": "742560"
  },
  {
    "text": "was it how it works",
    "start": "742560",
    "end": "744720"
  },
  {
    "text": "how you can call wasn't from evpf code",
    "start": "744720",
    "end": "747720"
  },
  {
    "text": "so on the Kernel level we have the ebpf",
    "start": "747720",
    "end": "750420"
  },
  {
    "text": "VM which is ready to accept ebpf",
    "start": "750420",
    "end": "754380"
  },
  {
    "text": "applications",
    "start": "754380",
    "end": "756079"
  },
  {
    "text": "uh and we have the kernel module which",
    "start": "756079",
    "end": "759540"
  },
  {
    "text": "has a version VM inside it and we expose",
    "start": "759540",
    "end": "764240"
  },
  {
    "text": "a host sorry we expose a module method",
    "start": "764420",
    "end": "768300"
  },
  {
    "text": "as a k func kfunk is a feature of the",
    "start": "768300",
    "end": "770880"
  },
  {
    "text": "KML",
    "start": "770880",
    "end": "772100"
  },
  {
    "text": "which is something like exposing a",
    "start": "772100",
    "end": "775320"
  },
  {
    "text": "function to ebpf so kfunks can be",
    "start": "775320",
    "end": "778200"
  },
  {
    "text": "exposed to ebpf and the and if your",
    "start": "778200",
    "end": "781500"
  },
  {
    "text": "function is marked as a k Funk and you",
    "start": "781500",
    "end": "783899"
  },
  {
    "text": "have to do some C magic there then it",
    "start": "783899",
    "end": "787139"
  },
  {
    "text": "can be found and covered by an ebpf",
    "start": "787139",
    "end": "790320"
  },
  {
    "text": "module",
    "start": "790320",
    "end": "792420"
  },
  {
    "text": "okay how is coming up into the picture",
    "start": "792420",
    "end": "795480"
  },
  {
    "text": "oppa is a standard policy language uh",
    "start": "795480",
    "end": "799380"
  },
  {
    "text": "it's written in regular uh",
    "start": "799380",
    "end": "803160"
  },
  {
    "text": "it it has a there was a previous talk",
    "start": "803160",
    "end": "805620"
  },
  {
    "text": "here in one of the sessions about oppa",
    "start": "805620",
    "end": "808560"
  },
  {
    "text": "they are trying to Target the full text",
    "start": "808560",
    "end": "810600"
  },
  {
    "text": "full stack for policy evaluation so it's",
    "start": "810600",
    "end": "813600"
  },
  {
    "text": "basically a really nice security and",
    "start": "813600",
    "end": "816480"
  },
  {
    "text": "Authority uh",
    "start": "816480",
    "end": "818639"
  },
  {
    "text": "language and framework that you can",
    "start": "818639",
    "end": "821100"
  },
  {
    "text": "employ everywhere in your software stack",
    "start": "821100",
    "end": "824100"
  },
  {
    "text": "what can you do with open in the kennel",
    "start": "824100",
    "end": "827279"
  },
  {
    "text": "let's move it down",
    "start": "827279",
    "end": "830120"
  },
  {
    "text": "Oppo can be compiled sorry Opera can be",
    "start": "830120",
    "end": "833399"
  },
  {
    "text": "compiled towards them since they have a",
    "start": "833399",
    "end": "835740"
  },
  {
    "text": "nice CLI code Oppo and the support that",
    "start": "835740",
    "end": "838260"
  },
  {
    "text": "wasn't built Target so it's possible to",
    "start": "838260",
    "end": "841800"
  },
  {
    "text": "compile and open policy to webassembly",
    "start": "841800",
    "end": "846060"
  },
  {
    "text": "what we will do with this",
    "start": "846060",
    "end": "848000"
  },
  {
    "text": "let's move down some decision making",
    "start": "848000",
    "end": "850200"
  },
  {
    "text": "into the kernel it's really in the POC",
    "start": "850200",
    "end": "852779"
  },
  {
    "text": "levels so don't expect any product or",
    "start": "852779",
    "end": "856920"
  },
  {
    "text": "real world application here",
    "start": "856920",
    "end": "859320"
  },
  {
    "text": "and",
    "start": "859320",
    "end": "861420"
  },
  {
    "text": "this will be your real world user space",
    "start": "861420",
    "end": "864540"
  },
  {
    "text": "application running inside the Canon so",
    "start": "864540",
    "end": "866639"
  },
  {
    "text": "what we will do",
    "start": "866639",
    "end": "868440"
  },
  {
    "text": "we will write some eppf",
    "start": "868440",
    "end": "872420"
  },
  {
    "text": "here we are exposing or upper evaluation",
    "start": "872420",
    "end": "876620"
  },
  {
    "text": "through a kfunk this is a kfunk",
    "start": "876620",
    "end": "879660"
  },
  {
    "text": "basically",
    "start": "879660",
    "end": "881160"
  },
  {
    "text": "and the kfunk will go back to the",
    "start": "881160",
    "end": "884100"
  },
  {
    "text": "virtual machine inside the kernel module",
    "start": "884100",
    "end": "887880"
  },
  {
    "text": "which basically runs or upper policy",
    "start": "887880",
    "end": "890220"
  },
  {
    "text": "which got compared into webassembly",
    "start": "890220",
    "end": "892740"
  },
  {
    "text": "he here with how it goes so",
    "start": "892740",
    "end": "895680"
  },
  {
    "text": "I will move an XDP program into my ebpf",
    "start": "895680",
    "end": "899880"
  },
  {
    "text": "VM",
    "start": "899880",
    "end": "900860"
  },
  {
    "text": "I'm ins I will insert my version kernel",
    "start": "900860",
    "end": "904320"
  },
  {
    "text": "module",
    "start": "904320",
    "end": "905459"
  },
  {
    "text": "into this Linux instance that I'm",
    "start": "905459",
    "end": "907980"
  },
  {
    "text": "running on my laptop",
    "start": "907980",
    "end": "910199"
  },
  {
    "text": "I will",
    "start": "910199",
    "end": "911760"
  },
  {
    "text": "move the upper policy that I created and",
    "start": "911760",
    "end": "915300"
  },
  {
    "text": "load it into this virtual machine the",
    "start": "915300",
    "end": "917459"
  },
  {
    "text": "virtual machine automatically exposes",
    "start": "917459",
    "end": "919380"
  },
  {
    "text": "this module this evaluation module to as",
    "start": "919380",
    "end": "923459"
  },
  {
    "text": "a k-funk so abpf can call it",
    "start": "923459",
    "end": "926639"
  },
  {
    "text": "and what we will do",
    "start": "926639",
    "end": "929579"
  },
  {
    "text": "sorry",
    "start": "929579",
    "end": "932579"
  },
  {
    "text": "sorry the missile okay so I will show",
    "start": "933660",
    "end": "936540"
  },
  {
    "text": "you the Demo First",
    "start": "936540",
    "end": "937920"
  },
  {
    "text": "so what we will do we will do",
    "start": "937920",
    "end": "940579"
  },
  {
    "text": "hdp Network packet counting if the",
    "start": "940579",
    "end": "944160"
  },
  {
    "text": "packets are matching a certain policy uh",
    "start": "944160",
    "end": "948060"
  },
  {
    "text": "that is written in record",
    "start": "948060",
    "end": "951260"
  },
  {
    "text": "okay",
    "start": "957240",
    "end": "959240"
  },
  {
    "text": "here is my small regular policy",
    "start": "959240",
    "end": "962820"
  },
  {
    "text": "can you see it or should I make it",
    "start": "962820",
    "end": "964680"
  },
  {
    "text": "bigger yeah it's much better now it's a",
    "start": "964680",
    "end": "967079"
  },
  {
    "text": "really small regular policy",
    "start": "967079",
    "end": "969240"
  },
  {
    "text": "what I am doing I I have a set of",
    "start": "969240",
    "end": "972300"
  },
  {
    "text": "allowed protocols called",
    "start": "972300",
    "end": "975139"
  },
  {
    "text": "epv4 and ebv6",
    "start": "975139",
    "end": "978000"
  },
  {
    "text": "and if the input Proto matches one of",
    "start": "978000",
    "end": "982920"
  },
  {
    "text": "these protocols I'm letting this packet",
    "start": "982920",
    "end": "986160"
  },
  {
    "text": "to be counted",
    "start": "986160",
    "end": "988879"
  },
  {
    "text": "here is my kernel module that is running",
    "start": "989519",
    "end": "991620"
  },
  {
    "text": "the virtual machine and as you as you",
    "start": "991620",
    "end": "994320"
  },
  {
    "text": "can see I have an upper evaluation K",
    "start": "994320",
    "end": "996480"
  },
  {
    "text": "Funk here and this is basically the",
    "start": "996480",
    "end": "999000"
  },
  {
    "text": "function that will be called by a small",
    "start": "999000",
    "end": "1001519"
  },
  {
    "text": "XDP application",
    "start": "1001519",
    "end": "1004519"
  },
  {
    "text": "which is counting the network packets",
    "start": "1004519",
    "end": "1006620"
  },
  {
    "text": "here so it's extern so it's trying to",
    "start": "1006620",
    "end": "1009680"
  },
  {
    "text": "refer to a kfunk and",
    "start": "1009680",
    "end": "1013279"
  },
  {
    "text": "as well",
    "start": "1013279",
    "end": "1014959"
  },
  {
    "text": "this protocol parse the packet create a",
    "start": "1014959",
    "end": "1017660"
  },
  {
    "text": "small input for Oppo",
    "start": "1017660",
    "end": "1020360"
  },
  {
    "text": "and if the upper evaluation goes to true",
    "start": "1020360",
    "end": "1024199"
  },
  {
    "text": "then we will look up the counters in the",
    "start": "1024199",
    "end": "1027980"
  },
  {
    "text": "map and increase the counters okay",
    "start": "1027980",
    "end": "1031640"
  },
  {
    "text": "I'm using Lima",
    "start": "1031640",
    "end": "1033740"
  },
  {
    "text": "Lima is a really good virtual machine",
    "start": "1033740",
    "end": "1036459"
  },
  {
    "text": "CLI for Mac OS and I'm having arm",
    "start": "1036459",
    "end": "1039798"
  },
  {
    "text": "machines so I had a lot of problems to",
    "start": "1039799",
    "end": "1042140"
  },
  {
    "text": "virtualbox with Robux I can",
    "start": "1042140",
    "end": "1045319"
  },
  {
    "text": "really advise you to use Lima with Lima",
    "start": "1045319",
    "end": "1048380"
  },
  {
    "text": "I'm already uh",
    "start": "1048380",
    "end": "1050600"
  },
  {
    "text": "entering a Linux machine",
    "start": "1050600",
    "end": "1053419"
  },
  {
    "text": "okay I'm building my kernel Mojo quickly",
    "start": "1053419",
    "end": "1056539"
  },
  {
    "text": "it was compiled already you don't have",
    "start": "1056539",
    "end": "1058520"
  },
  {
    "text": "to wait I'm inserting this corner module",
    "start": "1058520",
    "end": "1060919"
  },
  {
    "text": "it has already my version virtual",
    "start": "1060919",
    "end": "1063620"
  },
  {
    "text": "machine inside it let's see how it goes",
    "start": "1063620",
    "end": "1065900"
  },
  {
    "text": "okay",
    "start": "1065900",
    "end": "1068120"
  },
  {
    "text": "I have four CPUs in this virtual machine",
    "start": "1068120",
    "end": "1071660"
  },
  {
    "text": "and since I don't want to mess with",
    "start": "1071660",
    "end": "1073700"
  },
  {
    "text": "concurrency I'm creating a virtual",
    "start": "1073700",
    "end": "1075679"
  },
  {
    "text": "machine for richer and every CPU inside",
    "start": "1075679",
    "end": "1078200"
  },
  {
    "text": "this virtual machine I mean inside this",
    "start": "1078200",
    "end": "1081320"
  },
  {
    "text": "Linux instance sorry there are too many",
    "start": "1081320",
    "end": "1082880"
  },
  {
    "text": "virtual machines inside this story so",
    "start": "1082880",
    "end": "1084919"
  },
  {
    "text": "I'm the Linux virtual machine",
    "start": "1084919",
    "end": "1087799"
  },
  {
    "text": "Okay so",
    "start": "1087799",
    "end": "1090080"
  },
  {
    "text": "that's it okay what should I do now",
    "start": "1090080",
    "end": "1093140"
  },
  {
    "text": "let's build and my upper policy",
    "start": "1093140",
    "end": "1097400"
  },
  {
    "text": "okay the small regular instance with the",
    "start": "1097400",
    "end": "1099679"
  },
  {
    "text": "protocols previously have you seen I",
    "start": "1099679",
    "end": "1102260"
  },
  {
    "text": "just compiled it",
    "start": "1102260",
    "end": "1103840"
  },
  {
    "text": "to policy though it wasn't with the",
    "start": "1103840",
    "end": "1107240"
  },
  {
    "text": "opposite cli2 I have some quick make",
    "start": "1107240",
    "end": "1110179"
  },
  {
    "text": "targets to make this happen much more",
    "start": "1110179",
    "end": "1112160"
  },
  {
    "text": "easier",
    "start": "1112160",
    "end": "1113419"
  },
  {
    "text": "okay load this uh upper policy into the",
    "start": "1113419",
    "end": "1117440"
  },
  {
    "text": "virtual machine so let's check the logs",
    "start": "1117440",
    "end": "1119840"
  },
  {
    "text": "again okay my version module is dumping",
    "start": "1119840",
    "end": "1123860"
  },
  {
    "text": "over the function and globals that is",
    "start": "1123860",
    "end": "1126620"
  },
  {
    "text": "that is in the loaded module so I have a",
    "start": "1126620",
    "end": "1128900"
  },
  {
    "text": "lot of operating functions evaluation",
    "start": "1128900",
    "end": "1131059"
  },
  {
    "text": "stuff and stuff like that so my Opera",
    "start": "1131059",
    "end": "1134780"
  },
  {
    "text": "module is already inside the kernel",
    "start": "1134780",
    "end": "1136760"
  },
  {
    "text": "inside I wasn't virtual machine and it's",
    "start": "1136760",
    "end": "1139460"
  },
  {
    "text": "ready to serve ebpf",
    "start": "1139460",
    "end": "1141740"
  },
  {
    "text": "now let's call the evpf",
    "start": "1141740",
    "end": "1145760"
  },
  {
    "text": "insertion",
    "start": "1145760",
    "end": "1148660"
  },
  {
    "text": "let's build my evpf program oh",
    "start": "1150620",
    "end": "1154700"
  },
  {
    "text": "sorry",
    "start": "1154700",
    "end": "1156020"
  },
  {
    "text": "I have an issue there so I can fix",
    "start": "1156020",
    "end": "1160179"
  },
  {
    "text": "are much better okay",
    "start": "1160820",
    "end": "1164299"
  },
  {
    "text": "now my application is already compiled",
    "start": "1164299",
    "end": "1167240"
  },
  {
    "text": "it's trying to call the famous opera",
    "start": "1167240",
    "end": "1169880"
  },
  {
    "text": "evaluation method that is already",
    "start": "1169880",
    "end": "1171500"
  },
  {
    "text": "waiting inside the virtual machine",
    "start": "1171500",
    "end": "1174559"
  },
  {
    "text": "now let's load the ebpf application",
    "start": "1174559",
    "end": "1178220"
  },
  {
    "text": "and it will try to count network packets",
    "start": "1178220",
    "end": "1182620"
  },
  {
    "text": "everything is fine",
    "start": "1182960",
    "end": "1185240"
  },
  {
    "text": "yeah okay let's see the logs oh I have a",
    "start": "1185240",
    "end": "1189440"
  },
  {
    "text": "lot of Vlogs there since protocol epv4",
    "start": "1189440",
    "end": "1192799"
  },
  {
    "text": "protocol is already floating around my",
    "start": "1192799",
    "end": "1195740"
  },
  {
    "text": "machine it's communicating with the",
    "start": "1195740",
    "end": "1197600"
  },
  {
    "text": "Wi-Fi a lot of services are already",
    "start": "1197600",
    "end": "1199520"
  },
  {
    "text": "running inside the virtual machine so as",
    "start": "1199520",
    "end": "1202580"
  },
  {
    "text": "you can see",
    "start": "1202580",
    "end": "1204500"
  },
  {
    "text": "the evaluation protocol",
    "start": "1204500",
    "end": "1206380"
  },
  {
    "text": "uh met the BPF open ever method is",
    "start": "1206380",
    "end": "1211760"
  },
  {
    "text": "running one million times and with the",
    "start": "1211760",
    "end": "1214760"
  },
  {
    "text": "input protocol",
    "start": "1214760",
    "end": "1216559"
  },
  {
    "text": "this is the ID of the epv4 protocol and",
    "start": "1216559",
    "end": "1220039"
  },
  {
    "text": "the result was one okay let's check the",
    "start": "1220039",
    "end": "1222080"
  },
  {
    "text": "evpf logs",
    "start": "1222080",
    "end": "1224980"
  },
  {
    "text": "it's running there so it's classic ebpf",
    "start": "1226520",
    "end": "1228860"
  },
  {
    "text": "log as you can see",
    "start": "1228860",
    "end": "1231799"
  },
  {
    "text": "hello",
    "start": "1231799",
    "end": "1234280"
  },
  {
    "text": "very large amount of package okay you",
    "start": "1234280",
    "end": "1237679"
  },
  {
    "text": "are allowed by Opera to enter so Opera",
    "start": "1237679",
    "end": "1240860"
  },
  {
    "text": "allowed this epv4 packets to enter and",
    "start": "1240860",
    "end": "1243620"
  },
  {
    "text": "get counted",
    "start": "1243620",
    "end": "1246340"
  },
  {
    "text": "yeah and that's all how you how is it",
    "start": "1250160",
    "end": "1254000"
  },
  {
    "text": "working so",
    "start": "1254000",
    "end": "1256100"
  },
  {
    "text": "we are running the version 3 virtual",
    "start": "1256100",
    "end": "1258440"
  },
  {
    "text": "machine it's a fast webassembly",
    "start": "1258440",
    "end": "1260120"
  },
  {
    "text": "interpreter it's inside the kernel",
    "start": "1260120",
    "end": "1261919"
  },
  {
    "text": "module it's an extremely portable uh",
    "start": "1261919",
    "end": "1265280"
  },
  {
    "text": "virtual machine for bosom as I mentioned",
    "start": "1265280",
    "end": "1267500"
  },
  {
    "text": "interpreters are very easy to move move",
    "start": "1267500",
    "end": "1270200"
  },
  {
    "text": "around you don't have to mess with a lot",
    "start": "1270200",
    "end": "1271940"
  },
  {
    "text": "of assembly and jit compiler Magic",
    "start": "1271940",
    "end": "1275059"
  },
  {
    "text": "we modified it to be able to run it in",
    "start": "1275059",
    "end": "1277280"
  },
  {
    "text": "the piano since it it is a user's based",
    "start": "1277280",
    "end": "1279919"
  },
  {
    "text": "virtual machine and it's capable to run",
    "start": "1279919",
    "end": "1281960"
  },
  {
    "text": "on the edge and stuff like that but",
    "start": "1281960",
    "end": "1284500"
  },
  {
    "text": "not on the Canon space so we have to",
    "start": "1284500",
    "end": "1287240"
  },
  {
    "text": "modify it we maintain a fork",
    "start": "1287240",
    "end": "1289640"
  },
  {
    "text": "it's very written easy to extend it's",
    "start": "1289640",
    "end": "1291740"
  },
  {
    "text": "written in C it's really easy to use",
    "start": "1291740",
    "end": "1294940"
  },
  {
    "text": "it's also employed in crypto",
    "start": "1294940",
    "end": "1297620"
  },
  {
    "text": "cryptocurrency related works",
    "start": "1297620",
    "end": "1301520"
  },
  {
    "text": "has was his support but we don't need it",
    "start": "1301520",
    "end": "1303679"
  },
  {
    "text": "as I mentioned we are just targeting",
    "start": "1303679",
    "end": "1305600"
  },
  {
    "text": "wasn't 32 unknown unknown",
    "start": "1305600",
    "end": "1309559"
  },
  {
    "text": "what we want in the near future employee",
    "start": "1309559",
    "end": "1311960"
  },
  {
    "text": "Ajit capable was in VM since from",
    "start": "1311960",
    "end": "1314539"
  },
  {
    "text": "performance perspective interpreters are",
    "start": "1314539",
    "end": "1317480"
  },
  {
    "text": "not that good was M3 is a really one of",
    "start": "1317480",
    "end": "1320659"
  },
  {
    "text": "the fastest interpreters out there from",
    "start": "1320659",
    "end": "1322340"
  },
  {
    "text": "awesome but it's not the fastest so",
    "start": "1322340",
    "end": "1324380"
  },
  {
    "text": "probably we need to extend it to have a",
    "start": "1324380",
    "end": "1326059"
  },
  {
    "text": "jit inside it or employ another runtime",
    "start": "1326059",
    "end": "1328280"
  },
  {
    "text": "which has it already built in",
    "start": "1328280",
    "end": "1330260"
  },
  {
    "text": "dynamically exposed version methods so",
    "start": "1330260",
    "end": "1332900"
  },
  {
    "text": "as you see my Oppa evaluation method was",
    "start": "1332900",
    "end": "1336140"
  },
  {
    "text": "written hard-coded there in the C code",
    "start": "1336140",
    "end": "1338539"
  },
  {
    "text": "so we need to find out some kind of",
    "start": "1338539",
    "end": "1341299"
  },
  {
    "text": "framework to be able to expose",
    "start": "1341299",
    "end": "1343400"
  },
  {
    "text": "methods uh as wasn't methods as kfunks",
    "start": "1343400",
    "end": "1349400"
  },
  {
    "text": "a lot of security and performance",
    "start": "1349400",
    "end": "1351200"
  },
  {
    "text": "considerations so",
    "start": "1351200",
    "end": "1353419"
  },
  {
    "text": "this stuff needs a real review from a",
    "start": "1353419",
    "end": "1356299"
  },
  {
    "text": "real Canada developer which I am not",
    "start": "1356299",
    "end": "1360080"
  },
  {
    "text": "and probably a ton of more future uh",
    "start": "1360080",
    "end": "1364340"
  },
  {
    "text": "enhancements",
    "start": "1364340",
    "end": "1367340"
  },
  {
    "text": "the whole stuff is open source under",
    "start": "1367640",
    "end": "1370100"
  },
  {
    "text": "Cisco open version model check it out",
    "start": "1370100",
    "end": "1372500"
  },
  {
    "text": "you will find the modifying version 3",
    "start": "1372500",
    "end": "1374960"
  },
  {
    "text": "there as a sub module we have a CLI also",
    "start": "1374960",
    "end": "1378559"
  },
  {
    "text": "which loads the Cana models from user",
    "start": "1378559",
    "end": "1381020"
  },
  {
    "text": "space into Canon space",
    "start": "1381020",
    "end": "1384340"
  },
  {
    "text": "and",
    "start": "1384340",
    "end": "1386000"
  },
  {
    "text": "you can write any kind of issues",
    "start": "1386000",
    "end": "1388039"
  },
  {
    "text": "questions there we are happy to receive",
    "start": "1388039",
    "end": "1391280"
  },
  {
    "text": "those",
    "start": "1391280",
    "end": "1392179"
  },
  {
    "text": "so any questions",
    "start": "1392179",
    "end": "1395799"
  },
  {
    "text": "well hello well first let's give them a",
    "start": "1397100",
    "end": "1400100"
  },
  {
    "text": "round of applause for this talk",
    "start": "1400100",
    "end": "1403179"
  },
  {
    "text": "foreign",
    "start": "1405820",
    "end": "1407720"
  },
  {
    "text": "but I certainly think uh it's incredibly",
    "start": "1407720",
    "end": "1410360"
  },
  {
    "text": "interesting especially uh just thinking",
    "start": "1410360",
    "end": "1412520"
  },
  {
    "text": "how there's always a lower level to go",
    "start": "1412520",
    "end": "1414860"
  },
  {
    "text": "yeah even pushing this all the way down",
    "start": "1414860",
    "end": "1417140"
  },
  {
    "text": "into the kernel but yeah are there any",
    "start": "1417140",
    "end": "1418820"
  },
  {
    "text": "questions from anyone uh on anything",
    "start": "1418820",
    "end": "1421520"
  },
  {
    "text": "that was discussed here",
    "start": "1421520",
    "end": "1424539"
  },
  {
    "text": "I certainly have a question uh which is",
    "start": "1424820",
    "end": "1427100"
  },
  {
    "text": "what's the easiest way for someone to",
    "start": "1427100",
    "end": "1429559"
  },
  {
    "text": "get involved in the project uh what's",
    "start": "1429559",
    "end": "1431419"
  },
  {
    "text": "the easiest way to get in and contribute",
    "start": "1431419",
    "end": "1433580"
  },
  {
    "text": "as I mentioned we have the GitHub repo",
    "start": "1433580",
    "end": "1436400"
  },
  {
    "text": "it was open source at least three days",
    "start": "1436400",
    "end": "1439159"
  },
  {
    "text": "ago so it's quite fresh uh",
    "start": "1439159",
    "end": "1443480"
  },
  {
    "text": "so Jump On It compile it a lot of",
    "start": "1443480",
    "end": "1447740"
  },
  {
    "text": "instructions are in the readme use Lima",
    "start": "1447740",
    "end": "1450020"
  },
  {
    "text": "as I mentioned if you have a Mac or",
    "start": "1450020",
    "end": "1452600"
  },
  {
    "text": "otherwise as well so and we all have",
    "start": "1452600",
    "end": "1456020"
  },
  {
    "text": "also have a slacking stance called",
    "start": "1456020",
    "end": "1459240"
  },
  {
    "text": "[Music]",
    "start": "1459240",
    "end": "1460460"
  },
  {
    "text": "etni",
    "start": "1460460",
    "end": "1461620"
  },
  {
    "text": "Cisco and we will create a awesome",
    "start": "1461620",
    "end": "1464960"
  },
  {
    "text": "related Channel there it will be part of",
    "start": "1464960",
    "end": "1467600"
  },
  {
    "text": "the readme so I will put it into them",
    "start": "1467600",
    "end": "1469580"
  },
  {
    "text": "gotcha",
    "start": "1469580",
    "end": "1472159"
  },
  {
    "text": "and I actually have another question",
    "start": "1472159",
    "end": "1473900"
  },
  {
    "text": "just as a runtime nerd so you mentioned",
    "start": "1473900",
    "end": "1476900"
  },
  {
    "text": "that you wanted to go towards whammer uh",
    "start": "1476900",
    "end": "1479240"
  },
  {
    "text": "potentially as a potential runtime but",
    "start": "1479240",
    "end": "1481580"
  },
  {
    "text": "you mentioned",
    "start": "1481580",
    "end": "1482720"
  },
  {
    "text": "um like some jit stuff being",
    "start": "1482720",
    "end": "1483980"
  },
  {
    "text": "particularly difficult when you're",
    "start": "1483980",
    "end": "1485600"
  },
  {
    "text": "running in the kernel uh with wemmer was",
    "start": "1485600",
    "end": "1487700"
  },
  {
    "text": "the plan to use something like their",
    "start": "1487700",
    "end": "1489440"
  },
  {
    "text": "ahead of time compiler so that way it's",
    "start": "1489440",
    "end": "1491299"
  },
  {
    "text": "just kind of a done show or or why was",
    "start": "1491299",
    "end": "1494120"
  },
  {
    "text": "the reason you were looking at wemmer",
    "start": "1494120",
    "end": "1495500"
  },
  {
    "text": "yeah uh I think the ahead of time stuff",
    "start": "1495500",
    "end": "1498260"
  },
  {
    "text": "would be much much better since uh it's",
    "start": "1498260",
    "end": "1501320"
  },
  {
    "text": "really hard to create executable code",
    "start": "1501320",
    "end": "1503600"
  },
  {
    "text": "inside the kernel and Mark it as a",
    "start": "1503600",
    "end": "1506539"
  },
  {
    "text": "executable memory space so I think this",
    "start": "1506539",
    "end": "1509059"
  },
  {
    "text": "is has some kind of security limitations",
    "start": "1509059",
    "end": "1511400"
  },
  {
    "text": "already",
    "start": "1511400",
    "end": "1512900"
  },
  {
    "text": "and the Vamo is also written in C so it",
    "start": "1512900",
    "end": "1516140"
  },
  {
    "text": "can be easily moved down to the to the",
    "start": "1516140",
    "end": "1518120"
  },
  {
    "text": "kernel level and where everything has a",
    "start": "1518120",
    "end": "1521059"
  },
  {
    "text": "nice quality of code I think so I really",
    "start": "1521059",
    "end": "1523700"
  },
  {
    "text": "like",
    "start": "1523700",
    "end": "1524840"
  },
  {
    "text": "makes a lot of sense any last minute",
    "start": "1524840",
    "end": "1527240"
  },
  {
    "text": "questions from anyone",
    "start": "1527240",
    "end": "1530200"
  },
  {
    "text": "all right give it up again Fernando or",
    "start": "1530360",
    "end": "1532460"
  },
  {
    "text": "yeah thank you",
    "start": "1532460",
    "end": "1535000"
  }
]