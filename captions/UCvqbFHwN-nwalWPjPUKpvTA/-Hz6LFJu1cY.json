[
  {
    "text": "all right 225 let's start on the dot doesn't seem like there are folks",
    "start": "30",
    "end": "6930"
  },
  {
    "text": "waiting to come in or maybe they are hello everybody I'm this is the deep",
    "start": "6930",
    "end": "15150"
  },
  {
    "text": "dive talk for the British open source project and we wrote this talk with the",
    "start": "15150",
    "end": "21840"
  },
  {
    "text": "assumption that people have some background on the tests how many of you",
    "start": "21840",
    "end": "26990"
  },
  {
    "text": "don't know anything about with us a fair",
    "start": "26990",
    "end": "32430"
  },
  {
    "text": "and fair number so okay so I do have some slides where I'm going to talk about the concepts I'll go slow and in",
    "start": "32430",
    "end": "39510"
  },
  {
    "text": "in more detail feel free to stop us and ask questions during the talk we'll try",
    "start": "39510",
    "end": "45570"
  },
  {
    "text": "to answer them as we go what we are",
    "start": "45570",
    "end": "50820"
  },
  {
    "text": "going to talk about today is how to solve gdpr or data like locality issues add the database layer using pitous",
    "start": "50820",
    "end": "57600"
  },
  {
    "text": "right that's what jurisdiction aware databases what we mean by jurisdiction aware databases my name is Lee my name",
    "start": "57600",
    "end": "74970"
  },
  {
    "text": "is jet NVIDIA I am the CEO of planet scale planet scale is a company that sugu and I founded about 18 months ago",
    "start": "74970",
    "end": "83100"
  },
  {
    "text": "for making witness accessible to",
    "start": "83100",
    "end": "88140"
  },
  {
    "text": "companies and enterprises I also used to manage the asari and DBA teams at",
    "start": "88140",
    "end": "94590"
  },
  {
    "text": "YouTube which operated with us at massive scale so here is the problem",
    "start": "94590",
    "end": "101820"
  },
  {
    "text": "right like you guys know that different jurisdiction are passing laws that say",
    "start": "101820",
    "end": "109350"
  },
  {
    "text": "that the data for users which belong to that particular jurisdiction should not",
    "start": "109350",
    "end": "115500"
  },
  {
    "text": "leave the jurisdiction we saw this with in Europe with GDP our California has",
    "start": "115500",
    "end": "120960"
  },
  {
    "text": "now passed a similar legislation will which will go into effect fairly soon",
    "start": "120960",
    "end": "126299"
  },
  {
    "text": "and so many different people are thinking about how to support this and",
    "start": "126299",
    "end": "131870"
  },
  {
    "text": "most of the approach involved basically RER collecting your applications where you introduce the",
    "start": "131870",
    "end": "139440"
  },
  {
    "text": "notion of which jurisdiction a particular users data belongs to at the",
    "start": "139440",
    "end": "144660"
  },
  {
    "text": "application layer what we are proposing is that you and you sort of encapsulate",
    "start": "144660",
    "end": "150630"
  },
  {
    "text": "that logic in Vitesse so that your application doesn't need to be aware of",
    "start": "150630",
    "end": "155640"
  },
  {
    "text": "it and that's what we are going to show you similarly your you have existing",
    "start": "155640",
    "end": "161610"
  },
  {
    "text": "monolithic databases that are sitting somewhere maybe some of them are in the jurisdiction that you want some of them",
    "start": "161610",
    "end": "167160"
  },
  {
    "text": "are not and migrating those databases now and also maybe splitting the data because you might have users which span",
    "start": "167160",
    "end": "174450"
  },
  {
    "text": "multiple multiple jurisdictions so how do you migrating those databases into",
    "start": "174450",
    "end": "180450"
  },
  {
    "text": "jurisdiction aware databases becomes an operational nightmare so how do we solve",
    "start": "180450",
    "end": "185820"
  },
  {
    "text": "that so those are the problems that we are going to talk about today you using",
    "start": "185820",
    "end": "191460"
  },
  {
    "text": "Vitas so the way we have structured the talk is that I'm going to first start out by talking about a little bit about",
    "start": "191460",
    "end": "197100"
  },
  {
    "text": "Vitas different concepts in Vitesse and once you have enough of an understanding of the concepts that we will use to",
    "start": "197100",
    "end": "203640"
  },
  {
    "text": "solve these problems we will talk to you about the solution and then Deepti is",
    "start": "203640",
    "end": "209310"
  },
  {
    "text": "going to do a demo that actually shows you four clusters running in four different kubernetes well a key space",
    "start": "209310",
    "end": "216390"
  },
  {
    "text": "that runs across for kubernetes clusters in four different parts of the world in",
    "start": "216390",
    "end": "221910"
  },
  {
    "text": "which we write the data and you can see it doing the right thing so that's the demo that dipti is going to show you",
    "start": "221910",
    "end": "227100"
  },
  {
    "text": "that's how we have structured the talk so this is the Vitesse architecture diagram that you all know and love most",
    "start": "227100",
    "end": "232980"
  },
  {
    "text": "of you VT gate is the stateless proxy supports my sequel binary protocol has a",
    "start": "232980",
    "end": "240660"
  },
  {
    "text": "full SQL parser gives your application the view that it's talking to a single humungous database when behind it are",
    "start": "240660",
    "end": "248270"
  },
  {
    "text": "multiple shards so what a shard is what a key space is all of that we will be",
    "start": "248270",
    "end": "255330"
  },
  {
    "text": "going all those concepts we'll be talking about in further detail later because all those concepts you need to",
    "start": "255330",
    "end": "260970"
  },
  {
    "text": "understand to understand how to architect these clusters but each shard",
    "start": "260970",
    "end": "266669"
  },
  {
    "text": "is basically a mass cluster with one master multiple replicas replicating using my sickle",
    "start": "266669",
    "end": "272760"
  },
  {
    "text": "binary protocol each my security gets a minder process that's called beauty tablet which protects at my",
    "start": "272760",
    "end": "279660"
  },
  {
    "text": "security and also does many other you know it helps you during the parenting",
    "start": "279660",
    "end": "285450"
  },
  {
    "text": "it helps you during backups a lot of those things topology server stores two",
    "start": "285450",
    "end": "292110"
  },
  {
    "text": "different things one is the the topology in terms of the IP address host IP",
    "start": "292110",
    "end": "298290"
  },
  {
    "text": "address port numbers of the various processes and the second is description",
    "start": "298290",
    "end": "303810"
  },
  {
    "text": "of how each table in a Charlotte key space is charted right so those two that",
    "start": "303810",
    "end": "310830"
  },
  {
    "text": "two two types of information in the topology server VT CTL is the control plane so once again this is the",
    "start": "310830",
    "end": "318810"
  },
  {
    "text": "architecture of the Vitesse keep this diagram in your mind as I talk about the various concepts so the first concept I",
    "start": "318810",
    "end": "325590"
  },
  {
    "text": "am going to talk about itself so this diagram does not show you a cell but each of these shards which has one",
    "start": "325590",
    "end": "332550"
  },
  {
    "text": "master and multiple replicas they need to be residents somewhere right they need to be resident in some bit of",
    "start": "332550",
    "end": "340320"
  },
  {
    "text": "servers and network infrastructure be kubernetes cluster region and",
    "start": "340320",
    "end": "346970"
  },
  {
    "text": "availability zone so basically a cell for wit s is a failure domain isolated",
    "start": "346970",
    "end": "352830"
  },
  {
    "text": "from failures and other cells which is a group of servers and network infrastructure right so an example if",
    "start": "352830",
    "end": "359010"
  },
  {
    "text": "you're running on prem could be a full data center or even a rack in a data center right or it could be an",
    "start": "359010",
    "end": "364770"
  },
  {
    "text": "availability zone in the region it could be a region itself or it could be a kubernetes cluster so anything which is",
    "start": "364770",
    "end": "371580"
  },
  {
    "text": "so what I want to point out is that a cell basically has physical properties",
    "start": "371580",
    "end": "377669"
  },
  {
    "text": "to it so it is resident in some physical location which means that its resident in a jurisdiction and so we are going to",
    "start": "377669",
    "end": "384780"
  },
  {
    "text": "use this property to figure out how to build these clusters now let's talk a",
    "start": "384780",
    "end": "390090"
  },
  {
    "text": "little bit about a key space so in a Charlotte system a data like Vitesse we",
    "start": "390090",
    "end": "395849"
  },
  {
    "text": "call a database key space so if your key space has a single",
    "start": "395849",
    "end": "401520"
  },
  {
    "text": "then a key space is no different from my sequel database if there are multiple shards there are these are multiple",
    "start": "401520",
    "end": "408930"
  },
  {
    "text": "databases but each of them has identical schema right so in either case the key",
    "start": "408930",
    "end": "416850"
  },
  {
    "text": "space appears is a single database from the standpoint of the application now",
    "start": "416850",
    "end": "422190"
  },
  {
    "text": "let's talk about what a key space ID is this is a little bit of an interesting",
    "start": "422190",
    "end": "427230"
  },
  {
    "text": "concept those of you who have worked with key value stores probably know that",
    "start": "427230",
    "end": "432600"
  },
  {
    "text": "a key space ID is what a key value store typically uses for sharding right but in",
    "start": "432600",
    "end": "438720"
  },
  {
    "text": "Vitesse we never actually store a key space ID for every row so a key space is",
    "start": "438720",
    "end": "444450"
  },
  {
    "text": "split up into key space ID ranges which are shards each row is assigned a key",
    "start": "444450",
    "end": "449700"
  },
  {
    "text": "space ID which is sort of the street address of a row so using the key space ID bit as figures out which shard a",
    "start": "449700",
    "end": "456180"
  },
  {
    "text": "particular row should go into right it's internal to witness the application",
    "start": "456180",
    "end": "461820"
  },
  {
    "text": "doesn't need to know about it and it's not stored but computed and that gives",
    "start": "461820",
    "end": "467040"
  },
  {
    "text": "us a lot of flexibility and we'll talk about this a little further now let's",
    "start": "467040",
    "end": "472200"
  },
  {
    "text": "talk about what of indexes of index is how you tell so we have extended the",
    "start": "472200",
    "end": "478740"
  },
  {
    "text": "relational semantics and the way relational databases have schemas Charlotte databases inverters have also",
    "start": "478740",
    "end": "484890"
  },
  {
    "text": "have V schemas and the way a table has an index a table has a Windex in Vitesse",
    "start": "484890",
    "end": "492300"
  },
  {
    "text": "what is appendix a Windex is a way for whit s to compute key space ID for rows",
    "start": "492300",
    "end": "498870"
  },
  {
    "text": "in a particular table there are two elements to have index one is a cada is",
    "start": "498870",
    "end": "503910"
  },
  {
    "text": "the column that you want to use for showering that particular table and the second is the sharding function that you",
    "start": "503910",
    "end": "509820"
  },
  {
    "text": "want to use since we allow you to arbitrarily choose any column to as the",
    "start": "509820",
    "end": "514860"
  },
  {
    "text": "sharding column for a table depending on the type of that column you might want to use different function so if it's a",
    "start": "514860",
    "end": "521430"
  },
  {
    "text": "numeric column you would typically want to use hash if it's a you know you are",
    "start": "521430",
    "end": "526980"
  },
  {
    "text": "care text or something like that you will probably want to use lose md5 hash or something like that",
    "start": "526980",
    "end": "532740"
  },
  {
    "text": "so we allow you to define their index for every table using",
    "start": "532740",
    "end": "538480"
  },
  {
    "text": "a column and a shouting function so the",
    "start": "538480",
    "end": "544660"
  },
  {
    "text": "example that I'm giving you here is that let's say that there is a table called customer and you want to shout it using",
    "start": "544660",
    "end": "551140"
  },
  {
    "text": "ID which happens to be a numeric column and you want to the shouting function that you want to use is hash so for a",
    "start": "551140",
    "end": "558250"
  },
  {
    "text": "row whose ID is 1 2 3 the key space idea would be hash of 1 2 3 pretty",
    "start": "558250",
    "end": "563650"
  },
  {
    "text": "straightforward right again computed not stored what's a char",
    "start": "563650",
    "end": "569410"
  },
  {
    "text": "so a char basically has a begin and an end value for key space IDs so if we're",
    "start": "569410",
    "end": "578350"
  },
  {
    "text": "test wants to figure out whether a particular row belongs in a particular char all that it has to do is to",
    "start": "578350",
    "end": "584320"
  },
  {
    "text": "evaluate that condition begin less than keyspace ID less than equal to n and that that gives you the answer if this",
    "start": "584320",
    "end": "593110"
  },
  {
    "text": "holds true then the row for which it has computed that key space ID belongs in that char otherwise it doesn't right and",
    "start": "593110",
    "end": "600070"
  },
  {
    "text": "a key space is basically a connect collection of shards shards where the",
    "start": "600070",
    "end": "605650"
  },
  {
    "text": "beginning of the loop where the key space idea ranges and the whole key",
    "start": "605650",
    "end": "611110"
  },
  {
    "text": "space right that's why it's called a key space each char has one master multiple",
    "start": "611110",
    "end": "618130"
  },
  {
    "text": "replicas so each shard is a traditional my sequel cluster right and these",
    "start": "618130",
    "end": "626800"
  },
  {
    "text": "masters and replicas can be located in one or multiple cells right so let's",
    "start": "626800",
    "end": "634710"
  },
  {
    "text": "have you keep all this in your head and then now let's talk a little bit about shouting functions so I told you that",
    "start": "634710",
    "end": "641560"
  },
  {
    "text": "depending on the type of the column you can choose different shouting functions right and so these seven functions are",
    "start": "641560",
    "end": "650100"
  },
  {
    "text": "predefined shouting functions in Vitesse and I talked about hash and I talked",
    "start": "650100",
    "end": "656710"
  },
  {
    "text": "about the Unicode loose md5 which could you would want to use for you know text",
    "start": "656710",
    "end": "663250"
  },
  {
    "text": "text columns and so on but you can also add your",
    "start": "663250",
    "end": "668350"
  },
  {
    "text": "custom shouting function and that's that's the coolest thing about witness you can write about 40 lines of go code",
    "start": "668350",
    "end": "674590"
  },
  {
    "text": "and now you have your own way of shouting your databases and once you do",
    "start": "674590",
    "end": "680980"
  },
  {
    "text": "that all the other workflows about that need the information I mean so direct",
    "start": "680980",
    "end": "687970"
  },
  {
    "text": "inquiry to the correct shard using you know using what I talked about in the previous slide of course works but",
    "start": "687970",
    "end": "694390"
  },
  {
    "text": "reshoring works and all other workflows where you need this information they just all of them work correctly as long",
    "start": "694390",
    "end": "703270"
  },
  {
    "text": "as you get your shouting function right so you're you you can create your shouting functions and then you can",
    "start": "703270",
    "end": "709000"
  },
  {
    "text": "expand refer to them in the JSON that you use to tell Vitesse about how you",
    "start": "709000",
    "end": "715840"
  },
  {
    "text": "are shouting defining your v-- indexes so that's those are the shouting functions so now that we have talked",
    "start": "715840",
    "end": "723910"
  },
  {
    "text": "about this concept so before I start talking about the solution how we solve this problem of a jurisdictional",
    "start": "723910",
    "end": "730870"
  },
  {
    "text": "databases let me a spawn here and ask you if you have any questions about what",
    "start": "730870",
    "end": "735880"
  },
  {
    "text": "we have talked so far yes",
    "start": "735880",
    "end": "743190"
  },
  {
    "text": "multiple column primary keys so the V index that we are going to use actually",
    "start": "745639",
    "end": "752009"
  },
  {
    "text": "which is going to use multiple columns but in Vitesse in general your sharding",
    "start": "752009",
    "end": "758519"
  },
  {
    "text": "column and your primary key doesn't need to be the same any other question",
    "start": "758519",
    "end": "767870"
  },
  {
    "text": "all right I will assume that all of you understand this well now and now let's",
    "start": "769009",
    "end": "776459"
  },
  {
    "text": "talk about the solution right so the way we have modeled this problem is sort of",
    "start": "776459",
    "end": "781470"
  },
  {
    "text": "two levels we said that jurisdiction we will make jurisdiction one level and the",
    "start": "781470",
    "end": "789029"
  },
  {
    "text": "actual some marker of where a particular",
    "start": "789029",
    "end": "796110"
  },
  {
    "text": "user or where a particular particular piece of data lives such as a country a",
    "start": "796110",
    "end": "802019"
  },
  {
    "text": "zip code a state or an area code that would be the second level so what we",
    "start": "802019",
    "end": "808410"
  },
  {
    "text": "mean by that here is that examples of jurisdictions are EU NAFTA or California",
    "start": "808410",
    "end": "816720"
  },
  {
    "text": "right so let's say that if we were trying to solve the problem for California's data locality laws the two",
    "start": "816720",
    "end": "824490"
  },
  {
    "text": "jurisdictions that I would have if most of my users are in in in the US would be",
    "start": "824490",
    "end": "830160"
  },
  {
    "text": "California and non California those would be my two jurisdictions and then probably the geographical location which",
    "start": "830160",
    "end": "838050"
  },
  {
    "text": "is represented by a data column can either be an area code or could be a zip code it basically it allows me to locate",
    "start": "838050",
    "end": "846860"
  },
  {
    "text": "that particular piece of data into a particular jurisdiction in our case California or non California in the",
    "start": "846860",
    "end": "854699"
  },
  {
    "text": "example that we have shown here we have four jurisdictions North America South",
    "start": "854699",
    "end": "861000"
  },
  {
    "text": "East Asia East Asia South Asia East Asia and Europe these are sort of you know",
    "start": "861000",
    "end": "866819"
  },
  {
    "text": "they don't correspond to any geopolitical realities but that's what we have used but so two levels level of",
    "start": "866819",
    "end": "876329"
  },
  {
    "text": "jurisdictions that we test doesn't know anything about some column in some table that you want",
    "start": "876329",
    "end": "882720"
  },
  {
    "text": "to shard which can help us locate that",
    "start": "882720",
    "end": "887880"
  },
  {
    "text": "particular piece of data in our jurisdiction is the second level and what we do is we locate different shards",
    "start": "887880",
    "end": "895200"
  },
  {
    "text": "in a Cell bounded by jurisdiction that's that's how we solve this problem all of",
    "start": "895200",
    "end": "902130"
  },
  {
    "text": "this will become clearer when Dupree actually does the demo and shows you how we are splitting this up and so on but",
    "start": "902130",
    "end": "909210"
  },
  {
    "text": "at the high level that's how we're solving this problem so what we have so what we have built here can be used for",
    "start": "909210",
    "end": "915780"
  },
  {
    "text": "solving jurisdictional test clusters fairly generally I'll let deputy take it",
    "start": "915780",
    "end": "927750"
  },
  {
    "text": "away from here before we actually start showing you the demo we want to what the",
    "start": "927750",
    "end": "937140"
  },
  {
    "text": "goals of this demo are and so that we can demonstrate the jurisdiction of a",
    "start": "937140",
    "end": "945240"
  },
  {
    "text": "database that we are trying to show here so for this demo we've created a witters",
    "start": "945240",
    "end": "950910"
  },
  {
    "text": "cluster that stores data for a given country in its jurisdiction the client",
    "start": "950910",
    "end": "956850"
  },
  {
    "text": "application doesn't need to know that data is stored in multiple locations or",
    "start": "956850",
    "end": "962820"
  },
  {
    "text": "where exactly the data is stored so it's completely transparent to the client for",
    "start": "962820",
    "end": "969990"
  },
  {
    "text": "the demo itself we have four made-up jurisdictions and eight countries real countries jurisdictions are Americas",
    "start": "969990",
    "end": "978960"
  },
  {
    "text": "Europe East Asia and South Asia with two countries in each of these jurisdictions",
    "start": "978960",
    "end": "986000"
  },
  {
    "text": "the way we've designed the cluster is that we have created a witness cell for",
    "start": "987320",
    "end": "992760"
  },
  {
    "text": "each of these jurisdictions and we've named them according to the region in",
    "start": "992760",
    "end": "998870"
  },
  {
    "text": "Google Cloud where that cell lives so there's us central one a Europe s",
    "start": "998870",
    "end": "1005540"
  },
  {
    "text": "three a is one a in Asia South to a because we are going to show the demo on GCP or",
    "start": "1005540",
    "end": "1012580"
  },
  {
    "text": "rather gke the key space that we are",
    "start": "1012580",
    "end": "1018280"
  },
  {
    "text": "going to use is a sharded key space called user DB and it has four shots",
    "start": "1018280",
    "end": "1023440"
  },
  {
    "text": "each shard is resident in a different cell the sharding scheme for splitting",
    "start": "1023440",
    "end": "1032770"
  },
  {
    "text": "up the stator base uses custom Windex that we wrote for this demo called",
    "start": "1032770",
    "end": "1038680"
  },
  {
    "text": "region Windex and this Windex is based on the new multi column Windex functionality so everything you heard",
    "start": "1038680",
    "end": "1045699"
  },
  {
    "text": "about Windex us earlier was you choose a column as your sharding column and you",
    "start": "1045699",
    "end": "1052690"
  },
  {
    "text": "use that column to compute your key space ID and the key space ID is never stored so we have actually violated all",
    "start": "1052690",
    "end": "1061090"
  },
  {
    "text": "of those restrictions in order to build this custom Windex so this is a",
    "start": "1061090",
    "end": "1066370"
  },
  {
    "text": "multi-column Windex that uses more than one column so it uses what would have",
    "start": "1066370",
    "end": "1071530"
  },
  {
    "text": "been your sharding key if you didn't have the jurisdictional restrictions and",
    "start": "1071530",
    "end": "1076810"
  },
  {
    "text": "an additional column that represents the geographic location that is restricting",
    "start": "1076810",
    "end": "1083410"
  },
  {
    "text": "you in terms of where you can locate the data and you take the these two columns",
    "start": "1083410",
    "end": "1088420"
  },
  {
    "text": "in this case they are ID and country and you map that tuple to a key space ID",
    "start": "1088420",
    "end": "1093970"
  },
  {
    "text": "which you store in a lookup table people here that are familiar with with us",
    "start": "1093970",
    "end": "1099430"
  },
  {
    "text": "already know what lookup indexes are they are somewhat different from the",
    "start": "1099430",
    "end": "1104500"
  },
  {
    "text": "wind X's you use for your sharding and this is a combination of a lookup index",
    "start": "1104500",
    "end": "1110350"
  },
  {
    "text": "and a sharding function that we are using for doing the jurisdiction aware",
    "start": "1110350",
    "end": "1116050"
  },
  {
    "text": "clusters the region Windex looks up the region byte for a country using a map",
    "start": "1116050",
    "end": "1122830"
  },
  {
    "text": "and the source code for this is available and you can follow the link to",
    "start": "1122830",
    "end": "1129010"
  },
  {
    "text": "look at that I won't go into that now how do we map the key space to",
    "start": "1129010",
    "end": "1135649"
  },
  {
    "text": "jurisdictions we have split the one key space we have user DB into four key",
    "start": "1135649",
    "end": "1141169"
  },
  {
    "text": "ranges key ranges are basically subsets of the entire key space which when",
    "start": "1141169",
    "end": "1149299"
  },
  {
    "text": "combined together span the entire key space so they are disjoint but the Union gives you the full key space",
    "start": "1149299",
    "end": "1156139"
  },
  {
    "text": "so the first shard - 40 corresponds to",
    "start": "1156139",
    "end": "1161209"
  },
  {
    "text": "Americas then we have 40 to 80 these are hex numbers by the way corresponds to",
    "start": "1161209",
    "end": "1167329"
  },
  {
    "text": "Europe 80 - C 0 corresponds to East Asia and C 0 - C 0 to whatever is South Asia",
    "start": "1167329",
    "end": "1174829"
  },
  {
    "text": "and within each of these key ranges we have assigned specific values for the",
    "start": "1174829",
    "end": "1182119"
  },
  {
    "text": "byte that we will use to locate the data based on the country so us is one Canada",
    "start": "1182119",
    "end": "1188029"
  },
  {
    "text": "as - France is 4 0 Germany is 4 1 and so on the thing to note here is that each",
    "start": "1188029",
    "end": "1195289"
  },
  {
    "text": "country has a distinct value so we are treating them as distinct entities and",
    "start": "1195289",
    "end": "1200570"
  },
  {
    "text": "at a future time if you wanted to split by country within a jurisdiction or",
    "start": "1200570",
    "end": "1206619"
  },
  {
    "text": "create a new geo restriction based on country you can do that and that's one",
    "start": "1206619",
    "end": "1211820"
  },
  {
    "text": "of the reasons to make sure that every country has a unique code associated",
    "start": "1211820",
    "end": "1217159"
  },
  {
    "text": "with it the data specification looks like this it's a simple JSON map that",
    "start": "1217159",
    "end": "1223579"
  },
  {
    "text": "map's the country name - its code or byte value we have some sample data that",
    "start": "1223579",
    "end": "1232159"
  },
  {
    "text": "we will insert into the scroll into the database that's resident in the cluster",
    "start": "1232159",
    "end": "1238129"
  },
  {
    "text": "that we've created in the data we have some personally identifying information",
    "start": "1238129",
    "end": "1243700"
  },
  {
    "text": "named national ID these are things that are usually subject to loss that govern",
    "start": "1243700",
    "end": "1249919"
  },
  {
    "text": "data residency and cross-border data transfers and we have the column that",
    "start": "1249919",
    "end": "1255649"
  },
  {
    "text": "tells us where this should live the location of the data",
    "start": "1255649",
    "end": "1263980"
  },
  {
    "text": "this is a quick look at the clusters that we've created we have four clusters",
    "start": "1267040",
    "end": "1272540"
  },
  {
    "text": "in four different regions and you can see from the gke console that each of",
    "start": "1272540",
    "end": "1277730"
  },
  {
    "text": "them is in a different region asia europe us",
    "start": "1277730",
    "end": "1283570"
  },
  {
    "text": "let's first take a look at what we have already deployed this is the witters",
    "start": "1295740",
    "end": "1304030"
  },
  {
    "text": "dashboard and we have two key spaces there is a user key space with four",
    "start": "1304030",
    "end": "1310210"
  },
  {
    "text": "shots that we already talked about and there is a lookup key space which is",
    "start": "1310210",
    "end": "1316030"
  },
  {
    "text": "sort of a special key space or auxilary key space that we are using to enable the sharding of data into the multiple",
    "start": "1316030",
    "end": "1324220"
  },
  {
    "text": "regions if we look at the schema for",
    "start": "1324220",
    "end": "1331570"
  },
  {
    "text": "these key spaces right now there is no schema there is no data there's nothing it's basically empty so we will start",
    "start": "1331570",
    "end": "1338860"
  },
  {
    "text": "with this empty database or key space and then create a schema create a V",
    "start": "1338860",
    "end": "1344770"
  },
  {
    "text": "schema V schema is what tells with us how you would like to shut this key space and then insert some data into the",
    "start": "1344770",
    "end": "1352780"
  },
  {
    "text": "database and see where it goes you might",
    "start": "1352780",
    "end": "1358210"
  },
  {
    "text": "notice that I hope that's more visible you might notice that when I look at",
    "start": "1358210",
    "end": "1365770"
  },
  {
    "text": "shard - 40 it's showing me which cell it belongs to and you can see the name of",
    "start": "1365770",
    "end": "1371650"
  },
  {
    "text": "the cell right there that it's US central 1a and if we look at a different shard that's in GCP Asia is 2a",
    "start": "1371650",
    "end": "1382950"
  },
  {
    "text": "here we have the schema and we schema that we will be deploying into this cluster in the user DB key space we have",
    "start": "1384790",
    "end": "1393010"
  },
  {
    "text": "just one table customer there is an ID which we will Auto Inc we will use an",
    "start": "1393010",
    "end": "1399310"
  },
  {
    "text": "auto increment for populating the ID and the name of the customer or the national",
    "start": "1399310",
    "end": "1405700"
  },
  {
    "text": "ID and the country that we've already decided to use here is the V schema in",
    "start": "1405700",
    "end": "1415450"
  },
  {
    "text": "the V schema we are specifying that this is a sharded key space and that there",
    "start": "1415450",
    "end": "1421270"
  },
  {
    "text": "are certain wind X's we have just one Windex called region v DX and the type",
    "start": "1421270",
    "end": "1427420"
  },
  {
    "text": "of this Windex is region Windex and this region Windex that we have written the custom Windex takes certain parameters",
    "start": "1427420",
    "end": "1434260"
  },
  {
    "text": "there is a map that you use to map unique values for each of the location",
    "start": "1434260",
    "end": "1440440"
  },
  {
    "text": "identify us in our case it's country so we have called it country's dot Jason",
    "start": "1440440",
    "end": "1446370"
  },
  {
    "text": "you also specify how many bytes of the key space ID you would like to use for",
    "start": "1446370",
    "end": "1451810"
  },
  {
    "text": "the region when we use country one bite is sufficient but if you were to do sip",
    "start": "1451810",
    "end": "1457450"
  },
  {
    "text": "code or area code as Jatin mentioned as possibilities then you might need to use more than one byte and this Windex was",
    "start": "1457450",
    "end": "1464380"
  },
  {
    "text": "written to allow you to use one or two bytes that's an implementation time",
    "start": "1464380",
    "end": "1469420"
  },
  {
    "text": "decision and the Windex you use this an auxilary table to store the mapping of",
    "start": "1469420",
    "end": "1476830"
  },
  {
    "text": "the ID and country to the key space ID and this Windex is owned by the customer",
    "start": "1476830",
    "end": "1482860"
  },
  {
    "text": "table now let's look at the customer tables B schema the customer table has a",
    "start": "1482860",
    "end": "1488530"
  },
  {
    "text": "column Windex just one and the columns that the Windex is based on our ID and",
    "start": "1488530",
    "end": "1494680"
  },
  {
    "text": "country and the name of the Windex is region vdx that we defined up here so we are going",
    "start": "1494680",
    "end": "1501040"
  },
  {
    "text": "to use that and the ID column is going",
    "start": "1501040",
    "end": "1506740"
  },
  {
    "text": "to be Auto incremented using a bitter sequence with the sequences give you auto increment across shards which you",
    "start": "1506740",
    "end": "1514060"
  },
  {
    "text": "would not be a to do if you just use the my sequel quarter increment on multiple shots in",
    "start": "1514060",
    "end": "1523360"
  },
  {
    "text": "the lookup key space we have the mapping table which Maps the ID and country to",
    "start": "1523360",
    "end": "1529060"
  },
  {
    "text": "key space ID and then we have the sequence the lookup key space is not",
    "start": "1529060",
    "end": "1534970"
  },
  {
    "text": "sharded and technically you don't even",
    "start": "1534970",
    "end": "1540040"
  },
  {
    "text": "have to specify a V schema when it's an uncharted key space but just for",
    "start": "1540040",
    "end": "1545320"
  },
  {
    "text": "completeness we have included what the V schema should look like for the Uncharted key space that includes the",
    "start": "1545320",
    "end": "1550570"
  },
  {
    "text": "sequence now that we know what our",
    "start": "1550570",
    "end": "1555610"
  },
  {
    "text": "schema and V schema look like let's deploy them",
    "start": "1555610",
    "end": "1560760"
  },
  {
    "text": "okay so we will first apply the schema to our",
    "start": "1566480",
    "end": "1571900"
  },
  {
    "text": "user DB key space and then we will apply",
    "start": "1571900",
    "end": "1579140"
  },
  {
    "text": "the V schema to the user DB key space",
    "start": "1579140",
    "end": "1583720"
  },
  {
    "text": "then we will apply the schema to lookup",
    "start": "1585820",
    "end": "1591800"
  },
  {
    "text": "key space and apply V schema to the",
    "start": "1591800",
    "end": "1600290"
  },
  {
    "text": "lookup key space and once that's all done we can go look at what that looks",
    "start": "1600290",
    "end": "1607040"
  },
  {
    "text": "like so let's refresh this view so now",
    "start": "1607040",
    "end": "1612679"
  },
  {
    "text": "the lookup key space has two tables the sequence table and the mapping table and",
    "start": "1612679",
    "end": "1618200"
  },
  {
    "text": "the mapping table has no data there's zero rows and there are no wind X's in",
    "start": "1618200",
    "end": "1623240"
  },
  {
    "text": "this key space because it's uncharted if we go look at the user DB key space and",
    "start": "1623240",
    "end": "1630380"
  },
  {
    "text": "look at shard - forty it has a customer table and the schema for that is what we",
    "start": "1630380",
    "end": "1637940"
  },
  {
    "text": "just created with the four columns and",
    "start": "1637940",
    "end": "1643030"
  },
  {
    "text": "it has a schema definition but no data and it has one Windex called region vdx",
    "start": "1643030",
    "end": "1651010"
  },
  {
    "text": "we will see that the same schema has been applied to all four shots the apply",
    "start": "1651010",
    "end": "1657380"
  },
  {
    "text": "schema command in witters works cross shard you only have to run it once per key space and it will apply it to all of",
    "start": "1657380",
    "end": "1664370"
  },
  {
    "text": "the shards and it will in fact apply it",
    "start": "1664370",
    "end": "1669740"
  },
  {
    "text": "to all the tablets in each shard so that's what the schema and whisky may",
    "start": "1669740",
    "end": "1677420"
  },
  {
    "text": "look like the next step is to actually create some data so let's look at what",
    "start": "1677420",
    "end": "1686210"
  },
  {
    "text": "our sample data looks like",
    "start": "1686210",
    "end": "1689950"
  },
  {
    "text": "so we will pretend that the simple sequel script is actually our application and all it's doing is it's",
    "start": "1693980",
    "end": "1701400"
  },
  {
    "text": "trying to insert some rows into the customer table with the name national ID",
    "start": "1701400",
    "end": "1706530"
  },
  {
    "text": "and country and that's all yeah and the thing to note is that there is no the",
    "start": "1706530",
    "end": "1711660"
  },
  {
    "text": "application is just inserting as though it's inserting into a single monolithic database doesn't know anything about",
    "start": "1711660",
    "end": "1718440"
  },
  {
    "text": "data locality is completely unaware doesn't know that there is a concept of",
    "start": "1718440",
    "end": "1724500"
  },
  {
    "text": "key space ID you won't see the key space ID column showing up anywhere in the input data",
    "start": "1724500",
    "end": "1731510"
  },
  {
    "text": "so what we have done here is that we are sending this request to the VT gate that",
    "start": "1745190",
    "end": "1750650"
  },
  {
    "text": "we have deployed in the US region and the data is flowing to all four different regions all over the world we",
    "start": "1750650",
    "end": "1757820"
  },
  {
    "text": "in this cluster have actually deployed a VT gate in each region so technically you could have four",
    "start": "1757820",
    "end": "1764840"
  },
  {
    "text": "clients one that represents the data for each region talking to the individual VD",
    "start": "1764840",
    "end": "1771200"
  },
  {
    "text": "gates but this actually shows in much more clearly how you can be inserting",
    "start": "1771200",
    "end": "1779630"
  },
  {
    "text": "the data from one region but it flows to the correct region where it's supposed to go",
    "start": "1779630",
    "end": "1785650"
  },
  {
    "text": "now that we've run our insert script let's see how things change in the",
    "start": "1785650",
    "end": "1791300"
  },
  {
    "text": "dashboard in the lookup key space the mapping table now has 16 rows and if we",
    "start": "1791300",
    "end": "1800690"
  },
  {
    "text": "go look at our data key space the user data shard - 40 has 4 rows 40 to 80 has",
    "start": "1800690",
    "end": "1811670"
  },
  {
    "text": "4 rows 80 to C 0 has 4 rows and so on",
    "start": "1811670",
    "end": "1817430"
  },
  {
    "text": "each of the shards has now now has 4 rows of data in the table one thing to",
    "start": "1817430",
    "end": "1824570"
  },
  {
    "text": "note about this control panel UI is that the number of rows that we show comes from the information schema so it is not",
    "start": "1824570",
    "end": "1832120"
  },
  {
    "text": "always guaranteed to be exact depending on how fast you are writing to the database it's only an approximate number",
    "start": "1832120",
    "end": "1839030"
  },
  {
    "text": "but because here we are writing such a small number of rows and we don't have continuous traffic we've got the right",
    "start": "1839030",
    "end": "1845660"
  },
  {
    "text": "numbers out of it now that we know that",
    "start": "1845660",
    "end": "1851270"
  },
  {
    "text": "data has been inserted into all four cells of witters let's go make sure that",
    "start": "1851270",
    "end": "1857210"
  },
  {
    "text": "the right data has been inserted into each of the cells",
    "start": "1857210",
    "end": "1862240"
  },
  {
    "text": "we have 16 rows in the customer table but where do they live let's examine the data one shot at a",
    "start": "1880220",
    "end": "1888380"
  },
  {
    "text": "time so witness allows you to target your queries to specific key spaces and",
    "start": "1888380",
    "end": "1895150"
  },
  {
    "text": "also to specific shards within a key space so I could say use user DB and I",
    "start": "1895150",
    "end": "1901910"
  },
  {
    "text": "would only see the data which is in this key space I would not be able to see the data that's in the lookup key space and",
    "start": "1901910",
    "end": "1908480"
  },
  {
    "text": "I can also say use user DB a specific shard and this will show me the data",
    "start": "1908480",
    "end": "1915230"
  },
  {
    "text": "that resides in that specific shard we",
    "start": "1915230",
    "end": "1921080"
  },
  {
    "text": "have four rows in the - 40 shard and all of them are from the Americas region",
    "start": "1921080",
    "end": "1926270"
  },
  {
    "text": "which is what we wanted out of this cluster design we can examine each of",
    "start": "1926270",
    "end": "1932450"
  },
  {
    "text": "the other shards in turn the next shard",
    "start": "1932450",
    "end": "1937910"
  },
  {
    "text": "4280 which is our Europe shard has data that belongs to France and Germany",
    "start": "1937910",
    "end": "1945010"
  },
  {
    "text": "and the third chart has data that belongs to China and Japan which were our East Asia jurisdiction and the last",
    "start": "1952710",
    "end": "1966720"
  },
  {
    "text": "shard has data that belongs to the South Asian countries now that we've seen what",
    "start": "1966720",
    "end": "1972899"
  },
  {
    "text": "data we manage to populate into the user DB key space in all of these regions",
    "start": "1972899",
    "end": "1978539"
  },
  {
    "text": "let's take a look at what the lookup key space looks like so in the lookup key",
    "start": "1978539",
    "end": "1986309"
  },
  {
    "text": "space we have the ID - key space map table which is what we are interested in",
    "start": "1986309",
    "end": "1993200"
  },
  {
    "text": "that isn't very readable so let's convert the key space ID to hex",
    "start": "1993200",
    "end": "1999740"
  },
  {
    "text": "Oh",
    "start": "2007590",
    "end": "2009620"
  },
  {
    "text": "Matt yeah",
    "start": "2012610",
    "end": "2016710"
  },
  {
    "text": "just exit out and go back and maybe I should be fine",
    "start": "2021760",
    "end": "2029909"
  },
  {
    "text": "there okay so here we've converted the key space ID into hex and it doesn't",
    "start": "2032560",
    "end": "2042250"
  },
  {
    "text": "really matter to us what this value is except you might notice something interesting about the first byte",
    "start": "2042250",
    "end": "2048760"
  },
  {
    "text": "so let's extract that first bite and see what that looks like",
    "start": "2048760",
    "end": "2055530"
  },
  {
    "text": "did anyone notice that these numbers are exactly the numbers that we assigned in",
    "start": "2072630",
    "end": "2078120"
  },
  {
    "text": "the hex values that we assigned to each country in the country to byte mapping",
    "start": "2078120",
    "end": "2084500"
  },
  {
    "text": "and if there was any doubt let's convert",
    "start": "2084500",
    "end": "2089879"
  },
  {
    "text": "that to integer values and those are the integer values in the mapping file so",
    "start": "2089880",
    "end": "2098600"
  },
  {
    "text": "that brings us to the end of the demo let's go back to the presentation before",
    "start": "2098600",
    "end": "2107640"
  },
  {
    "text": "we go back are there any questions about the demo sure yeah we can take some",
    "start": "2107640",
    "end": "2112650"
  },
  {
    "text": "questions right now yes",
    "start": "2112650",
    "end": "2120529"
  },
  {
    "text": "the question is can you do joints between the regions in general in witters you can do cross shard joints",
    "start": "2122610",
    "end": "2130040"
  },
  {
    "text": "when you when you are trying to achieve data locality then all data that has to",
    "start": "2130040",
    "end": "2136350"
  },
  {
    "text": "reside in that region better stay in that region in the sense that you",
    "start": "2136350",
    "end": "2141720"
  },
  {
    "text": "shouldn't be trying to join that with another region but you might have some",
    "start": "2141720",
    "end": "2147290"
  },
  {
    "text": "some table that is relevant to all regions like maybe the pricing table and",
    "start": "2147290",
    "end": "2154320"
  },
  {
    "text": "yeah you can do a join across charts which means you can do joins or cross regions right so if I may do a little",
    "start": "2154320",
    "end": "2161850"
  },
  {
    "text": "bit of a clarification for example let's say that you had an order stable right",
    "start": "2161850",
    "end": "2166890"
  },
  {
    "text": "the orders table also you would shard it using the ID of if you started using the",
    "start": "2166890",
    "end": "2175440"
  },
  {
    "text": "user ID because in orders also will have a user ID column in it then we will also",
    "start": "2175440",
    "end": "2181830"
  },
  {
    "text": "correctly look at the data in the correct shard and so the users row and",
    "start": "2181830",
    "end": "2186840"
  },
  {
    "text": "users orders will all be in the same shot so the joints will end up happening in",
    "start": "2186840",
    "end": "2192600"
  },
  {
    "text": "the same shot but as the t said if there are some reference tables which you have in a different key space which are not",
    "start": "2192600",
    "end": "2198570"
  },
  {
    "text": "associated with a particular user cross Sharjah you if it as does cross r joints",
    "start": "2198570",
    "end": "2204570"
  },
  {
    "text": "for you after doing multiple queries in the background and there is an advanced",
    "start": "2204570",
    "end": "2210780"
  },
  {
    "text": "feature of witters called we're application that will allow you to replicate your reference tables that are",
    "start": "2210780",
    "end": "2216750"
  },
  {
    "text": "in an uncharted key space into each of your shadowed key spaces so that you do",
    "start": "2216750",
    "end": "2221970"
  },
  {
    "text": "not have to do a cross shot if we had",
    "start": "2221970",
    "end": "2229200"
  },
  {
    "text": "more time we would have liked to show a lot more on what you can do with jurisdiction aware clusters you could",
    "start": "2229200",
    "end": "2236880"
  },
  {
    "text": "start with a monolithic database which already has all of your data and rashard it and push it out into the various",
    "start": "2236880",
    "end": "2243060"
  },
  {
    "text": "regions you might want to move a country from one jurisdiction or cell to another",
    "start": "2243060",
    "end": "2248280"
  },
  {
    "text": "brexit or you might want to break a region into",
    "start": "2248280",
    "end": "2253760"
  },
  {
    "text": "smaller shots just because you have too much data and say the East Asia region",
    "start": "2253760",
    "end": "2258890"
  },
  {
    "text": "or even for a specific country so the way this is done is that because we are using only one byte or two bites at the",
    "start": "2258890",
    "end": "2265730"
  },
  {
    "text": "beginning for specifying a geographical location if you have hundreds of",
    "start": "2265730",
    "end": "2271040"
  },
  {
    "text": "millions of user in a specific country and you want to further split that data all that works before we conclude there",
    "start": "2271040",
    "end": "2280910"
  },
  {
    "text": "are a few people we want to thank for making this demo possible Dan who's our",
    "start": "2280910",
    "end": "2286160"
  },
  {
    "text": "minister of engineering at planet-scale was the one who first suggested the idea for the stock and that was the day after",
    "start": "2286160",
    "end": "2292970"
  },
  {
    "text": "we were done with cube con Europe in Barcelona six months ago and six months",
    "start": "2292970",
    "end": "2298490"
  },
  {
    "text": "later here we are with the demo Anthony was instrumental in bringing up the",
    "start": "2298490",
    "end": "2305870"
  },
  {
    "text": "kubernetes environment that we built this demo on and Shawn created the",
    "start": "2305870",
    "end": "2311240"
  },
  {
    "text": "slides for us I for one would not have been able to come up with this really",
    "start": "2311240",
    "end": "2316580"
  },
  {
    "text": "cool theme for the slides so we are grateful to our friends who enabled us",
    "start": "2316580",
    "end": "2322250"
  },
  {
    "text": "to give the stock and demo here today there are more Witter stocks or rather",
    "start": "2322250",
    "end": "2330110"
  },
  {
    "text": "there is one more better stock at this conference and that's how direct Perkins",
    "start": "2330110",
    "end": "2336080"
  },
  {
    "text": "of nozzle who's sitting right here migrated his 20 terabyte database from",
    "start": "2336080",
    "end": "2341780"
  },
  {
    "text": "Azure to gke in an are with with us and that's happening tomorrow same time 225",
    "start": "2341780",
    "end": "2348970"
  },
  {
    "text": "any more questions yes",
    "start": "2348970",
    "end": "2355180"
  },
  {
    "text": "you will not be able to update the sharding column once it's set its Sept",
    "start": "2359759",
    "end": "2368400"
  },
  {
    "text": "yes",
    "start": "2370440",
    "end": "2373440"
  },
  {
    "text": "authorization in witters is handled separately and country based",
    "start": "2389540",
    "end": "2396020"
  },
  {
    "text": "authorization isn't something that we have really thought about but that is something we could look into I think the",
    "start": "2396020",
    "end": "2405230"
  },
  {
    "text": "way to one way to implement that probably would be that we ticket can be",
    "start": "2405230",
    "end": "2413350"
  },
  {
    "text": "asked to look at specific key spaces but not specific shards right so there is a",
    "start": "2413350",
    "end": "2423770"
  },
  {
    "text": "shards to watch command line parameter to VT gate and you can specify that a",
    "start": "2423770",
    "end": "2429650"
  },
  {
    "text": "particular witta gate only it looks at a particular shard and so some and each of",
    "start": "2429650",
    "end": "2435380"
  },
  {
    "text": "them can have a different authentication username and password configured and so",
    "start": "2435380",
    "end": "2440660"
  },
  {
    "text": "in this somebody who has those you know those credentials can connect to that",
    "start": "2440660",
    "end": "2446540"
  },
  {
    "text": "particular vita gate which can look at the particular shard that could be one way of doing it if that's what you are",
    "start": "2446540",
    "end": "2454670"
  },
  {
    "text": "getting to by your question if all of your data was sharded then you would be",
    "start": "2454670",
    "end": "2460280"
  },
  {
    "text": "able to just make witty gate watch that single cell so that anyone who's connecting in that region is only able",
    "start": "2460280",
    "end": "2467600"
  },
  {
    "text": "to access data that belongs to that region but typically most people have some tables sharded and some tables",
    "start": "2467600",
    "end": "2474020"
  },
  {
    "text": "uncharted which complicates it there was another question right",
    "start": "2474020",
    "end": "2480369"
  },
  {
    "text": "okay so the question is is there a way to audit the queries to make sure that",
    "start": "2490170",
    "end": "2495869"
  },
  {
    "text": "the region based charting is working auditing is not a built-in feature in",
    "start": "2495869",
    "end": "2502019"
  },
  {
    "text": "witters so we haven't thought about this yet but excellent question yes",
    "start": "2502019",
    "end": "2515420"
  },
  {
    "text": "the question is do we support Maria DB or only specific bills of my sequin we support all variants of my sequel",
    "start": "2518940",
    "end": "2526740"
  },
  {
    "text": "community edition percona Enterprise Edition Maria and Amazon RDS",
    "start": "2526740",
    "end": "2532140"
  },
  {
    "text": "my sequel RDS Aurora RDS my sequel and cloud sequel on Google ok one more",
    "start": "2532140",
    "end": "2542790"
  },
  {
    "text": "question so that is a decision that",
    "start": "2542790",
    "end": "2551160"
  },
  {
    "text": "should be repeat the question yeah so the question is what if you chose a",
    "start": "2551160",
    "end": "2557580"
  },
  {
    "text": "column with very low cardinality as your sharding column so the choice of",
    "start": "2557580",
    "end": "2563550"
  },
  {
    "text": "sharding column is important and in the past you were stuck with whatever you choose but we do have experimental",
    "start": "2563550",
    "end": "2571680"
  },
  {
    "text": "support right now for migrating from any sharding scheme to any sharding scheme",
    "start": "2571680",
    "end": "2577080"
  },
  {
    "text": "and the only reason we've called it experimental is because we haven't",
    "start": "2577080",
    "end": "2582680"
  },
  {
    "text": "finalized the command line interface to this functionality but it is already available in the most recent release of",
    "start": "2582680",
    "end": "2589890"
  },
  {
    "text": "witters and people have used it to do rishaad ins so with with the new",
    "start": "2589890",
    "end": "2596670"
  },
  {
    "text": "functionality the migration functionality you should be able to migrate from any sharding scheme to any",
    "start": "2596670",
    "end": "2602310"
  },
  {
    "text": "sharding scheme this is what we call the regret feature yes",
    "start": "2602310",
    "end": "2610880"
  },
  {
    "text": "yes so the question is we haven't talked about performance what if the applications are also located in all of",
    "start": "2631810",
    "end": "2638920"
  },
  {
    "text": "the regions what effect does it have on performance in the even in this demo",
    "start": "2638920",
    "end": "2645790"
  },
  {
    "text": "that we deployed we have Rita gate the stateless proxy deployed into every region so the application can be",
    "start": "2645790",
    "end": "2653940"
  },
  {
    "text": "configured to talk to the VT gate or VT gates behind a load balancer in the same",
    "start": "2653940",
    "end": "2660130"
  },
  {
    "text": "region and that should minimize the latency",
    "start": "2660130",
    "end": "2664770"
  },
  {
    "text": "so the question is is it going to happen locally is all the data going to be written only to the region that's",
    "start": "2677550",
    "end": "2683940"
  },
  {
    "text": "relevant if all of the data is in one region then that minimizes your latency",
    "start": "2683940",
    "end": "2689730"
  },
  {
    "text": "but if you do have some data that you have to access in a different region for whatever reason keeping in mind the",
    "start": "2689730",
    "end": "2696270"
  },
  {
    "text": "cross-border data transfer requirements then that will add latency so in this",
    "start": "2696270",
    "end": "2703230"
  },
  {
    "text": "particular if you were to deploy a cluster like this the the lookup",
    "start": "2703230",
    "end": "2709380"
  },
  {
    "text": "database that is resident only in one of the regions so from three other regions",
    "start": "2709380",
    "end": "2716820"
  },
  {
    "text": "even if all your users are from countries in the other jurisdiction",
    "start": "2716820",
    "end": "2722040"
  },
  {
    "text": "you're still doing a round trip for generating an ID and mapping in one region but even that lookup database can",
    "start": "2722040",
    "end": "2729630"
  },
  {
    "text": "itself be sharded so yeah and you can",
    "start": "2729630",
    "end": "2737040"
  },
  {
    "text": "use the identity built in sharding function to shard it based on the key space ID so that it matches one-to-one",
    "start": "2737040",
    "end": "2744990"
  },
  {
    "text": "with your actual data and it resides in exactly the same way as your real data",
    "start": "2744990",
    "end": "2752300"
  },
  {
    "text": "yes",
    "start": "2752300",
    "end": "2755300"
  },
  {
    "text": "the question is if we have a query that doesn't have the sharding column will it fan out to all the shots yes it will",
    "start": "2758170",
    "end": "2764950"
  },
  {
    "text": "yeah it does a scatter gather",
    "start": "2764950",
    "end": "2768720"
  },
  {
    "text": "so when deep tail ran select star from customer it that actually did a fan out",
    "start": "2771300",
    "end": "2777910"
  },
  {
    "text": "and gather and show you all the rows from all four shots so order by is a",
    "start": "2777910",
    "end": "2789460"
  },
  {
    "text": "simple query so what we do is we send the order by to each my sequel and do a",
    "start": "2789460",
    "end": "2794560"
  },
  {
    "text": "merge sort at the Vedic eight level and show but there may be some complex",
    "start": "2794560",
    "end": "2799870"
  },
  {
    "text": "queries where you are doing group buys and order buys which need all rows in VT gate to satisfy that query correctly and",
    "start": "2799870",
    "end": "2807070"
  },
  {
    "text": "we just don't support it there is a list of queries which we don't suffer bit",
    "start": "2807070",
    "end": "2812860"
  },
  {
    "text": "exactly because of that reason yes",
    "start": "2812860",
    "end": "2819690"
  },
  {
    "text": "the question is what about stored procedures I don't think we support stored procedures well no so the thing",
    "start": "2820380",
    "end": "2826720"
  },
  {
    "text": "is that if you have stored procedures which only work on data that is in a",
    "start": "2826720",
    "end": "2831789"
  },
  {
    "text": "single shard they will continue to work waitis itself doesn't support it but you",
    "start": "2831789",
    "end": "2836890"
  },
  {
    "text": "can create them by connecting to the my security by itself and as long as their",
    "start": "2836890",
    "end": "2842680"
  },
  {
    "text": "it works on the in the context of a single shard they continue to work but",
    "start": "2842680",
    "end": "2848500"
  },
  {
    "text": "we don't have support for stored procedures that work correctly in data across shards so you will still be",
    "start": "2848500",
    "end": "2856329"
  },
  {
    "text": "managing them outside of witters and any jobs that you might have running outside of witters can continue to run",
    "start": "2856329",
    "end": "2864088"
  },
  {
    "text": "we are out of time we'll take any other questions you might have once fear of the stranger thank you all",
    "start": "2874930",
    "end": "2882880"
  },
  {
    "text": "for coming [Applause]",
    "start": "2882880",
    "end": "2887219"
  }
]