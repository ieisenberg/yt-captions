[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "hello kubecon my name is pedro imanais",
    "start": "240",
    "end": "2480"
  },
  {
    "text": "and i am a field engineer at canonico",
    "start": "2480",
    "end": "5040"
  },
  {
    "text": "i will show you the universal operator's",
    "start": "5040",
    "end": "7200"
  },
  {
    "text": "concept and how can we",
    "start": "7200",
    "end": "8639"
  },
  {
    "text": "transform your application operations",
    "start": "8639",
    "end": "11599"
  },
  {
    "text": "let's start with what operators do",
    "start": "11599",
    "end": "13840"
  },
  {
    "text": "they are actually software that drives",
    "start": "13840",
    "end": "15679"
  },
  {
    "text": "software operators can package",
    "start": "15679",
    "end": "17920"
  },
  {
    "text": "run and maintain any app on kubernetes",
    "start": "17920",
    "end": "21039"
  },
  {
    "text": "kubernetes operators are becoming more",
    "start": "21039",
    "end": "23039"
  },
  {
    "text": "and more popular these days",
    "start": "23039",
    "end": "24720"
  },
  {
    "text": "as they abstract complexity and allow to",
    "start": "24720",
    "end": "27119"
  },
  {
    "text": "deploy applications without requiring",
    "start": "27119",
    "end": "29039"
  },
  {
    "text": "domain knowledge",
    "start": "29039",
    "end": "30560"
  },
  {
    "text": "universal operators extrapolate the same",
    "start": "30560",
    "end": "32880"
  },
  {
    "text": "concepts and apply them",
    "start": "32880",
    "end": "34320"
  },
  {
    "text": "on any substrate universal operators",
    "start": "34320",
    "end": "37280"
  },
  {
    "text": "will manage your apps",
    "start": "37280",
    "end": "38640"
  },
  {
    "text": "on any cloud on top of vms bare metal",
    "start": "38640",
    "end": "41920"
  },
  {
    "text": "or containers our goal is to build",
    "start": "41920",
    "end": "45360"
  },
  {
    "start": "43000",
    "end": "148000"
  },
  {
    "text": "small composable operators that do one",
    "start": "45360",
    "end": "47760"
  },
  {
    "text": "thing and do it well",
    "start": "47760",
    "end": "49520"
  },
  {
    "text": "these are then easier to contribute to",
    "start": "49520",
    "end": "51680"
  },
  {
    "text": "they are reusable",
    "start": "51680",
    "end": "52800"
  },
  {
    "text": "and we know that reusability leads to",
    "start": "52800",
    "end": "54800"
  },
  {
    "text": "better software quality",
    "start": "54800",
    "end": "56640"
  },
  {
    "text": "for all these reasons we have created",
    "start": "56640",
    "end": "58399"
  },
  {
    "text": "the python operator framework",
    "start": "58399",
    "end": "62000"
  },
  {
    "text": "these operators are easy to integrate",
    "start": "62079",
    "end": "64158"
  },
  {
    "text": "what does this means",
    "start": "64159",
    "end": "65920"
  },
  {
    "text": "we look at dependencies and",
    "start": "65920",
    "end": "67360"
  },
  {
    "text": "relationships between applications and",
    "start": "67360",
    "end": "69360"
  },
  {
    "text": "allow them to be declared",
    "start": "69360",
    "end": "72960"
  },
  {
    "text": "this allows operators that share the",
    "start": "72960",
    "end": "74560"
  },
  {
    "text": "same relationship type to be easily",
    "start": "74560",
    "end": "76320"
  },
  {
    "text": "integrated",
    "start": "76320",
    "end": "77280"
  },
  {
    "text": "and to break down complex applications",
    "start": "77280",
    "end": "79680"
  },
  {
    "text": "into more manageable components",
    "start": "79680",
    "end": "83439"
  },
  {
    "text": "thanks to the integration concept we can",
    "start": "83759",
    "end": "85840"
  },
  {
    "text": "respond to complexity",
    "start": "85840",
    "end": "87680"
  },
  {
    "text": "with composition take this example of a",
    "start": "87680",
    "end": "90640"
  },
  {
    "text": "cube flow model",
    "start": "90640",
    "end": "92079"
  },
  {
    "text": "a complicated set of applications driven",
    "start": "92079",
    "end": "94799"
  },
  {
    "text": "by individual operators that can be",
    "start": "94799",
    "end": "96720"
  },
  {
    "text": "related",
    "start": "96720",
    "end": "97840"
  },
  {
    "text": "creating a more complete stack and",
    "start": "97840",
    "end": "99759"
  },
  {
    "text": "solving a complex problem",
    "start": "99759",
    "end": "102000"
  },
  {
    "text": "operators can be placed in a model a",
    "start": "102000",
    "end": "104479"
  },
  {
    "text": "model",
    "start": "104479",
    "end": "105200"
  },
  {
    "text": "is a workplace that facilitates",
    "start": "105200",
    "end": "107119"
  },
  {
    "text": "composition",
    "start": "107119",
    "end": "108399"
  },
  {
    "text": "it provides organizational view of all",
    "start": "108399",
    "end": "111040"
  },
  {
    "text": "the operators",
    "start": "111040",
    "end": "112399"
  },
  {
    "text": "abstract view of infrastructure service",
    "start": "112399",
    "end": "115119"
  },
  {
    "text": "isolation",
    "start": "115119",
    "end": "116159"
  },
  {
    "text": "access control universal operators",
    "start": "116159",
    "end": "120479"
  },
  {
    "text": "help create different topologies to",
    "start": "120479",
    "end": "122399"
  },
  {
    "text": "address different scenarios",
    "start": "122399",
    "end": "124479"
  },
  {
    "text": "let's reuse the kubeflow example here",
    "start": "124479",
    "end": "127040"
  },
  {
    "text": "say you want to do an inference at the",
    "start": "127040",
    "end": "129360"
  },
  {
    "text": "edge",
    "start": "129360",
    "end": "130000"
  },
  {
    "text": "a small scale focus cluster is the ideal",
    "start": "130000",
    "end": "132879"
  },
  {
    "text": "approach",
    "start": "132879",
    "end": "134080"
  },
  {
    "text": "meanwhile desktop applications can have",
    "start": "134080",
    "end": "136959"
  },
  {
    "text": "more resources",
    "start": "136959",
    "end": "138080"
  },
  {
    "text": "and focus on a jupiter stack for example",
    "start": "138080",
    "end": "142000"
  },
  {
    "text": "finally the full deployments composed by",
    "start": "142000",
    "end": "144640"
  },
  {
    "text": "the entire service stack deployed on",
    "start": "144640",
    "end": "146560"
  },
  {
    "text": "several nodes in aha",
    "start": "146560",
    "end": "148959"
  },
  {
    "start": "148000",
    "end": "181000"
  },
  {
    "text": "and here is the representation of those",
    "start": "148959",
    "end": "150800"
  },
  {
    "text": "three scenarios in practice",
    "start": "150800",
    "end": "152640"
  },
  {
    "text": "so on the left we do have the edge",
    "start": "152640",
    "end": "154879"
  },
  {
    "text": "scenario with the just the pipelines",
    "start": "154879",
    "end": "157440"
  },
  {
    "text": "and the data science containers related",
    "start": "157440",
    "end": "160160"
  },
  {
    "text": "to tensorflow by torch",
    "start": "160160",
    "end": "161760"
  },
  {
    "text": "etc on the middle we have the desktop",
    "start": "161760",
    "end": "165920"
  },
  {
    "text": "scenario",
    "start": "165920",
    "end": "166560"
  },
  {
    "text": "where we add the jupiter and the",
    "start": "166560",
    "end": "168640"
  },
  {
    "text": "authentication like text",
    "start": "168640",
    "end": "170400"
  },
  {
    "text": "and on the right we have the full",
    "start": "170400",
    "end": "172720"
  },
  {
    "text": "scenario",
    "start": "172720",
    "end": "173440"
  },
  {
    "text": "with all the cube flow that we deploy",
    "start": "173440",
    "end": "175760"
  },
  {
    "text": "cad team",
    "start": "175760",
    "end": "176640"
  },
  {
    "text": "comes in extra metadata related",
    "start": "176640",
    "end": "178959"
  },
  {
    "text": "deployments",
    "start": "178959",
    "end": "179920"
  },
  {
    "text": "ambassador etc good is about how loud",
    "start": "179920",
    "end": "183360"
  },
  {
    "text": "this is possible",
    "start": "183360",
    "end": "184800"
  },
  {
    "text": "the jojo operator lifecycle manager",
    "start": "184800",
    "end": "186800"
  },
  {
    "text": "allows for operators to run on any",
    "start": "186800",
    "end": "188720"
  },
  {
    "text": "substrate",
    "start": "188720",
    "end": "189599"
  },
  {
    "text": "and drive both infrastructure and",
    "start": "189599",
    "end": "191920"
  },
  {
    "text": "application level components",
    "start": "191920",
    "end": "193840"
  },
  {
    "text": "it provides abstraction from the",
    "start": "193840",
    "end": "195519"
  },
  {
    "text": "underlying cloud and manages lifecycle",
    "start": "195519",
    "end": "198239"
  },
  {
    "text": "events for",
    "start": "198239",
    "end": "198879"
  },
  {
    "text": "applications on top of the cloud",
    "start": "198879",
    "end": "202080"
  },
  {
    "text": "and charms charms offer perfect reuse of",
    "start": "202080",
    "end": "205599"
  },
  {
    "text": "operations code",
    "start": "205599",
    "end": "207200"
  },
  {
    "text": "they do so through packages that enable",
    "start": "207200",
    "end": "209680"
  },
  {
    "text": "full lifecycle management out of the box",
    "start": "209680",
    "end": "212480"
  },
  {
    "text": "this includes the ability to readily",
    "start": "212480",
    "end": "214319"
  },
  {
    "text": "manage workflows",
    "start": "214319",
    "end": "215760"
  },
  {
    "text": "operations and actions you already find",
    "start": "215760",
    "end": "218560"
  },
  {
    "text": "this capability readily in operator",
    "start": "218560",
    "end": "220640"
  },
  {
    "text": "pattern",
    "start": "220640",
    "end": "221760"
  },
  {
    "text": "where we have gone a step further is",
    "start": "221760",
    "end": "223840"
  },
  {
    "text": "enhancing an automated integrations",
    "start": "223840",
    "end": "226080"
  },
  {
    "text": "to address life cycle changes across",
    "start": "226080",
    "end": "228080"
  },
  {
    "text": "scenarios",
    "start": "228080",
    "end": "229200"
  },
  {
    "text": "this is made possible through the",
    "start": "229200",
    "end": "230640"
  },
  {
    "text": "combination of juju and charms",
    "start": "230640",
    "end": "234080"
  },
  {
    "text": "what does the charm look like let's",
    "start": "234080",
    "end": "236239"
  },
  {
    "text": "explore the universal operator code",
    "start": "236239",
    "end": "238640"
  },
  {
    "text": "the python operator framework allows you",
    "start": "238640",
    "end": "240480"
  },
  {
    "text": "to approach the infrastructure and",
    "start": "240480",
    "end": "241840"
  },
  {
    "text": "application",
    "start": "241840",
    "end": "242400"
  },
  {
    "text": "management as a code it is an",
    "start": "242400",
    "end": "244159"
  },
  {
    "text": "event-driven framework in which events",
    "start": "244159",
    "end": "246319"
  },
  {
    "text": "are exchanged between your operators",
    "start": "246319",
    "end": "248640"
  },
  {
    "text": "the lifecycle manager and other",
    "start": "248640",
    "end": "250799"
  },
  {
    "text": "neighboring apps",
    "start": "250799",
    "end": "251840"
  },
  {
    "text": "whenever an event happens the",
    "start": "251840",
    "end": "253360"
  },
  {
    "text": "corresponding piece of code is called",
    "start": "253360",
    "end": "256560"
  },
  {
    "text": "you start by narrating from a base class",
    "start": "256560",
    "end": "258959"
  },
  {
    "text": "which contains the primitives you",
    "start": "258959",
    "end": "260560"
  },
  {
    "text": "connect to the universal operator",
    "start": "260560",
    "end": "262800"
  },
  {
    "text": "at init method you will register which",
    "start": "262800",
    "end": "265520"
  },
  {
    "text": "events from the operator do you want to",
    "start": "265520",
    "end": "267440"
  },
  {
    "text": "listen to",
    "start": "267440",
    "end": "268080"
  },
  {
    "text": "for example i have registered here that",
    "start": "268080",
    "end": "271199"
  },
  {
    "text": "i want to listen to configuration",
    "start": "271199",
    "end": "272880"
  },
  {
    "text": "changes",
    "start": "272880",
    "end": "273759"
  },
  {
    "text": "we do it by calling an observe method",
    "start": "273759",
    "end": "277040"
  },
  {
    "text": "whenever an event comes in informing",
    "start": "277040",
    "end": "278960"
  },
  {
    "text": "there was a change of configuration by",
    "start": "278960",
    "end": "280560"
  },
  {
    "text": "the user",
    "start": "280560",
    "end": "281360"
  },
  {
    "text": "the operator framework calls back my",
    "start": "281360",
    "end": "283440"
  },
  {
    "text": "specific function",
    "start": "283440",
    "end": "284639"
  },
  {
    "text": "unconfig changes now let's",
    "start": "284639",
    "end": "287680"
  },
  {
    "text": "zoom in into how integration works the",
    "start": "287680",
    "end": "290720"
  },
  {
    "text": "integration and points are declared on a",
    "start": "290720",
    "end": "292639"
  },
  {
    "text": "special file",
    "start": "292639",
    "end": "293600"
  },
  {
    "text": "called metadata.tml there",
    "start": "293600",
    "end": "296639"
  },
  {
    "text": "you can define which interfaces will",
    "start": "296639",
    "end": "298479"
  },
  {
    "text": "have as endpoints",
    "start": "298479",
    "end": "299919"
  },
  {
    "text": "your app may consume a certain endpoint",
    "start": "299919",
    "end": "303440"
  },
  {
    "text": "in which this case it requires an",
    "start": "303440",
    "end": "305440"
  },
  {
    "text": "endpoint or provided",
    "start": "305440",
    "end": "307840"
  },
  {
    "text": "to other neighboring apps now let's use",
    "start": "307840",
    "end": "310800"
  },
  {
    "start": "309000",
    "end": "398000"
  },
  {
    "text": "the universal operator to solve a real",
    "start": "310800",
    "end": "312560"
  },
  {
    "text": "world problem",
    "start": "312560",
    "end": "314560"
  },
  {
    "text": "the data science problem data science",
    "start": "314560",
    "end": "317280"
  },
  {
    "text": "should focus their time in writing",
    "start": "317280",
    "end": "318880"
  },
  {
    "text": "machine learning algorithms",
    "start": "318880",
    "end": "320479"
  },
  {
    "text": "the little orange box on this picture",
    "start": "320479",
    "end": "322880"
  },
  {
    "text": "however there is a lot of complexity in",
    "start": "322880",
    "end": "325520"
  },
  {
    "text": "a data science stage today that comes",
    "start": "325520",
    "end": "327520"
  },
  {
    "text": "from",
    "start": "327520",
    "end": "328080"
  },
  {
    "text": "infrastructure and data pipeline",
    "start": "328080",
    "end": "330160"
  },
  {
    "text": "operations in production",
    "start": "330160",
    "end": "332479"
  },
  {
    "text": "that adds a lot of manual effort or",
    "start": "332479",
    "end": "335440"
  },
  {
    "text": "extra code",
    "start": "335440",
    "end": "337440"
  },
  {
    "text": "here is an example of a data science",
    "start": "337440",
    "end": "339280"
  },
  {
    "text": "pipeline that predicts what will happen",
    "start": "339280",
    "end": "341280"
  },
  {
    "text": "in the",
    "start": "341280",
    "end": "341759"
  },
  {
    "text": "s p 500 stock market index",
    "start": "341759",
    "end": "345280"
  },
  {
    "text": "the workflow consists of collecting and",
    "start": "345280",
    "end": "347360"
  },
  {
    "text": "storing raw data",
    "start": "347360",
    "end": "348560"
  },
  {
    "text": "using elasticsearch building and",
    "start": "348560",
    "end": "351280"
  },
  {
    "text": "training ai models use",
    "start": "351280",
    "end": "352880"
  },
  {
    "text": "kubeflow storing the results in saf",
    "start": "352880",
    "end": "356479"
  },
  {
    "text": "and distributing ai model with",
    "start": "356479",
    "end": "358560"
  },
  {
    "text": "tensorflow and kafka",
    "start": "358560",
    "end": "361120"
  },
  {
    "text": "juju facilitates the lifecycle",
    "start": "361120",
    "end": "362880"
  },
  {
    "text": "management of both infrastructure and",
    "start": "362880",
    "end": "365039"
  },
  {
    "text": "applications",
    "start": "365039",
    "end": "366720"
  },
  {
    "text": "in this demo we will start by deploying",
    "start": "366720",
    "end": "369120"
  },
  {
    "text": "the operators on top of their metal",
    "start": "369120",
    "end": "371280"
  },
  {
    "text": "and then on top of containers we will",
    "start": "371280",
    "end": "374400"
  },
  {
    "text": "first apply kubernetes and saf using a",
    "start": "374400",
    "end": "376880"
  },
  {
    "text": "single model",
    "start": "376880",
    "end": "378639"
  },
  {
    "text": "this means that kubernetes have will be",
    "start": "378639",
    "end": "380880"
  },
  {
    "text": "co-hosted on the same bare metal nodes",
    "start": "380880",
    "end": "383360"
  },
  {
    "text": "as a hyper-converged approach then",
    "start": "383360",
    "end": "387039"
  },
  {
    "text": "we will deploy a second model for the",
    "start": "387039",
    "end": "388800"
  },
  {
    "text": "elastic surge",
    "start": "388800",
    "end": "390080"
  },
  {
    "text": "in a third one of our kafka",
    "start": "390080",
    "end": "393199"
  },
  {
    "text": "the same juju controller will be used to",
    "start": "393199",
    "end": "395199"
  },
  {
    "text": "deploy kubeflow on top of kubernetes",
    "start": "395199",
    "end": "398800"
  },
  {
    "start": "398000",
    "end": "911000"
  },
  {
    "text": "to kick start the demo i have juju",
    "start": "398800",
    "end": "400960"
  },
  {
    "text": "controller ready running",
    "start": "400960",
    "end": "402639"
  },
  {
    "text": "the very first step is to create the",
    "start": "402639",
    "end": "404319"
  },
  {
    "text": "models i have defined three bundles for",
    "start": "404319",
    "end": "406960"
  },
  {
    "text": "the bare metal parts",
    "start": "406960",
    "end": "408400"
  },
  {
    "text": "gates and seth elastic surge and kafka",
    "start": "408400",
    "end": "412720"
  },
  {
    "text": "i will start by deploying gates and",
    "start": "412720",
    "end": "414479"
  },
  {
    "text": "stuff",
    "start": "414479",
    "end": "416160"
  },
  {
    "text": "first i will leave a watch on kate's and",
    "start": "416160",
    "end": "418720"
  },
  {
    "text": "seth model",
    "start": "418720",
    "end": "420840"
  },
  {
    "text": "watch",
    "start": "420840",
    "end": "423840"
  },
  {
    "text": "there is no model so let's create it",
    "start": "426880",
    "end": "430080"
  },
  {
    "text": "and model",
    "start": "430080",
    "end": "432960"
  },
  {
    "text": "case and set",
    "start": "433680",
    "end": "437840"
  },
  {
    "text": "okay so now we have the model we can",
    "start": "438400",
    "end": "441039"
  },
  {
    "text": "actually",
    "start": "441039",
    "end": "441840"
  },
  {
    "text": "deploy the bundle",
    "start": "441840",
    "end": "451840"
  },
  {
    "text": "my juju client is pushing the bundle",
    "start": "452639",
    "end": "455919"
  },
  {
    "text": "information",
    "start": "455919",
    "end": "456639"
  },
  {
    "text": "to the controller so which charms i'm",
    "start": "456639",
    "end": "458960"
  },
  {
    "text": "going to use",
    "start": "458960",
    "end": "460240"
  },
  {
    "text": "then which machines i need and",
    "start": "460240",
    "end": "463360"
  },
  {
    "text": "mapping applications to machines",
    "start": "463360",
    "end": "468560"
  },
  {
    "text": "and on the right side you can see the",
    "start": "469680",
    "end": "472080"
  },
  {
    "text": "due to status coming up so",
    "start": "472080",
    "end": "474319"
  },
  {
    "text": "how the mod is getting created on the",
    "start": "474319",
    "end": "476840"
  },
  {
    "text": "fly",
    "start": "476840",
    "end": "479840"
  },
  {
    "text": "right now it's deploying the",
    "start": "482479",
    "end": "483520"
  },
  {
    "text": "applications",
    "start": "483520",
    "end": "486160"
  },
  {
    "text": "okay so deployment is finished and we",
    "start": "487199",
    "end": "489599"
  },
  {
    "text": "can see we have an upgrade deployment",
    "start": "489599",
    "end": "492800"
  },
  {
    "text": "let's copy the cube's config file",
    "start": "492800",
    "end": "507840"
  },
  {
    "text": "you can also see we have several running",
    "start": "507919",
    "end": "510720"
  },
  {
    "text": "containers for the controller so",
    "start": "510720",
    "end": "512640"
  },
  {
    "text": "cluster is fine what you're gonna do",
    "start": "512640",
    "end": "516560"
  },
  {
    "text": "now is we're gonna scale this cluster",
    "start": "516560",
    "end": "520320"
  },
  {
    "text": "for three",
    "start": "520320",
    "end": "521039"
  },
  {
    "text": "extra nodes so i wanna scale this",
    "start": "521039",
    "end": "524959"
  },
  {
    "text": "out and add three extra workers",
    "start": "524959",
    "end": "528399"
  },
  {
    "text": "and three extras for sds",
    "start": "528399",
    "end": "532000"
  },
  {
    "text": "i will have a second watch",
    "start": "532000",
    "end": "535279"
  },
  {
    "text": "in due to machines",
    "start": "535279",
    "end": "538320"
  },
  {
    "text": "i will now run the command to add three",
    "start": "539040",
    "end": "541040"
  },
  {
    "text": "extra machines and then i'm gonna map",
    "start": "541040",
    "end": "542880"
  },
  {
    "text": "the",
    "start": "542880",
    "end": "543519"
  },
  {
    "text": "kubernetes workers and set osd units",
    "start": "543519",
    "end": "546240"
  },
  {
    "text": "into that machine",
    "start": "546240",
    "end": "547760"
  },
  {
    "text": "so add machine",
    "start": "547760",
    "end": "551920"
  },
  {
    "text": "i'm gonna set up some constraints",
    "start": "552080",
    "end": "555440"
  },
  {
    "text": "in this case tags",
    "start": "555440",
    "end": "563839"
  },
  {
    "text": "and there we go we can see the machines",
    "start": "567200",
    "end": "568720"
  },
  {
    "text": "coming up they won't have units so far",
    "start": "568720",
    "end": "573279"
  },
  {
    "text": "now i can map extra units",
    "start": "573279",
    "end": "576320"
  },
  {
    "text": "to those machines",
    "start": "576320",
    "end": "579200"
  },
  {
    "text": "so three extra worker nodes",
    "start": "580480",
    "end": "584959"
  },
  {
    "text": "and i'm gonna map them to six seven and",
    "start": "589519",
    "end": "591920"
  },
  {
    "text": "eight which are the new machines",
    "start": "591920",
    "end": "595440"
  },
  {
    "text": "and we can see here kubernetes work is",
    "start": "597040",
    "end": "599440"
  },
  {
    "text": "getting to",
    "start": "599440",
    "end": "600480"
  },
  {
    "text": "weight status and with",
    "start": "600480",
    "end": "604399"
  },
  {
    "text": "three extra new units and i'm gonna also",
    "start": "604399",
    "end": "607040"
  },
  {
    "text": "add",
    "start": "607040",
    "end": "607839"
  },
  {
    "text": "three extra surface these",
    "start": "607839",
    "end": "611279"
  },
  {
    "text": "here",
    "start": "617600",
    "end": "619839"
  },
  {
    "text": "so with three commands i added the",
    "start": "622800",
    "end": "625600"
  },
  {
    "text": "machines",
    "start": "625600",
    "end": "626720"
  },
  {
    "text": "and i deployed two new types of",
    "start": "626720",
    "end": "629680"
  },
  {
    "text": "workloads",
    "start": "629680",
    "end": "630720"
  },
  {
    "text": "directly on those new bare metals",
    "start": "630720",
    "end": "633760"
  },
  {
    "text": "and now we have a nine node cluster for",
    "start": "633760",
    "end": "636320"
  },
  {
    "text": "kubernetes",
    "start": "636320",
    "end": "639040"
  },
  {
    "text": "next step is let's deploy kubeflow on",
    "start": "639279",
    "end": "642000"
  },
  {
    "text": "top of this cluster",
    "start": "642000",
    "end": "643839"
  },
  {
    "text": "to do so i will first switch from",
    "start": "643839",
    "end": "647680"
  },
  {
    "text": "jiu-jitsu status k-sev gates and sef",
    "start": "647680",
    "end": "652240"
  },
  {
    "text": "to the model that we're going to create",
    "start": "652240",
    "end": "654240"
  },
  {
    "text": "called cube flow",
    "start": "654240",
    "end": "657279"
  },
  {
    "text": "here it doesn't exist yet",
    "start": "658839",
    "end": "661600"
  },
  {
    "text": "we're gonna add it and i'm gonna also",
    "start": "661600",
    "end": "663839"
  },
  {
    "text": "leave this",
    "start": "663839",
    "end": "664959"
  },
  {
    "text": "and instead have a watch on",
    "start": "664959",
    "end": "669519"
  },
  {
    "text": "cube ctl get view so there will be a",
    "start": "670720",
    "end": "674000"
  },
  {
    "text": "namespace called cubeflow",
    "start": "674000",
    "end": "676240"
  },
  {
    "text": "once we add the model on youtube and now",
    "start": "676240",
    "end": "679839"
  },
  {
    "text": "i'm gonna deploy cubeflow on top of",
    "start": "679839",
    "end": "682880"
  },
  {
    "text": "kubernetes",
    "start": "682880",
    "end": "683920"
  },
  {
    "text": "for that i first need to add the",
    "start": "683920",
    "end": "686320"
  },
  {
    "text": "kubernetes cluster",
    "start": "686320",
    "end": "687680"
  },
  {
    "text": "that i have right now as a cloud",
    "start": "687680",
    "end": "691920"
  },
  {
    "text": "so add case",
    "start": "691920",
    "end": "696000"
  },
  {
    "text": "that will essentially use the cube",
    "start": "698079",
    "end": "700880"
  },
  {
    "text": "config",
    "start": "700880",
    "end": "701360"
  },
  {
    "text": "that i have on this machine configure it",
    "start": "701360",
    "end": "703680"
  },
  {
    "text": "already to communicate with the",
    "start": "703680",
    "end": "705120"
  },
  {
    "text": "kubernetes",
    "start": "705120",
    "end": "706959"
  },
  {
    "text": "okay and now add a model",
    "start": "706959",
    "end": "710720"
  },
  {
    "text": "for cube flow so juju add model",
    "start": "710720",
    "end": "714480"
  },
  {
    "text": "cube gates",
    "start": "714480",
    "end": "717440"
  },
  {
    "text": "now we can see the model exists and",
    "start": "719360",
    "end": "721600"
  },
  {
    "text": "there is a namespace",
    "start": "721600",
    "end": "724480"
  },
  {
    "text": "now let's deploy the actual cube flow",
    "start": "727519",
    "end": "729600"
  },
  {
    "text": "viano",
    "start": "729600",
    "end": "732000"
  },
  {
    "text": "it is starting to deploy the operators",
    "start": "743760",
    "end": "747600"
  },
  {
    "text": "on youtube likewise on kubernetes",
    "start": "747600",
    "end": "759839"
  },
  {
    "text": "likewise let's create a model for",
    "start": "772639",
    "end": "775040"
  },
  {
    "text": "elasticsearch in kafka",
    "start": "775040",
    "end": "778399"
  },
  {
    "text": "adding the model and kafka",
    "start": "784480",
    "end": "789519"
  },
  {
    "text": "we have on one side kafka being deployed",
    "start": "789680",
    "end": "792880"
  },
  {
    "text": "on the other side we have a watch on the",
    "start": "792880",
    "end": "794639"
  },
  {
    "text": "judges status",
    "start": "794639",
    "end": "796480"
  },
  {
    "text": "keeper flow deployment is finished and",
    "start": "796480",
    "end": "798639"
  },
  {
    "text": "for this demo",
    "start": "798639",
    "end": "799519"
  },
  {
    "text": "i've already set a pipeline for the data",
    "start": "799519",
    "end": "801680"
  },
  {
    "text": "processing",
    "start": "801680",
    "end": "802880"
  },
  {
    "text": "called financial data",
    "start": "802880",
    "end": "806000"
  },
  {
    "text": "the pipeline is divided in",
    "start": "806000",
    "end": "808079"
  },
  {
    "text": "pre-processing phase",
    "start": "808079",
    "end": "809519"
  },
  {
    "text": "which also pulls the data out of",
    "start": "809519",
    "end": "811120"
  },
  {
    "text": "elasticsearch",
    "start": "811120",
    "end": "812959"
  },
  {
    "text": "train the model against that data check",
    "start": "812959",
    "end": "815600"
  },
  {
    "text": "if that",
    "start": "815600",
    "end": "816560"
  },
  {
    "text": "passes or not a validation value finally",
    "start": "816560",
    "end": "820560"
  },
  {
    "text": "the deploy phase which pushes the the",
    "start": "820560",
    "end": "823199"
  },
  {
    "text": "trained",
    "start": "823199",
    "end": "823600"
  },
  {
    "text": "model back to s3 let's give it a run",
    "start": "823600",
    "end": "829839"
  },
  {
    "text": "pipelines are deployed within containers",
    "start": "830320",
    "end": "833120"
  },
  {
    "text": "if we go to the cli",
    "start": "833120",
    "end": "834720"
  },
  {
    "text": "we can see the containers coming up",
    "start": "834720",
    "end": "843360"
  },
  {
    "text": "and we can follow up the logs",
    "start": "843360",
    "end": "847279"
  },
  {
    "text": "of that container now that it's finished",
    "start": "847920",
    "end": "851680"
  },
  {
    "text": "we can see there is a precision of z",
    "start": "851680",
    "end": "854040"
  },
  {
    "text": "0.77 and we can go back to the pipeline",
    "start": "854040",
    "end": "857120"
  },
  {
    "text": "and see it's finished and deployed to",
    "start": "857120",
    "end": "858959"
  },
  {
    "text": "set",
    "start": "858959",
    "end": "860160"
  },
  {
    "text": "the next step is to serve it we have our",
    "start": "860160",
    "end": "862720"
  },
  {
    "text": "model stored on s3",
    "start": "862720",
    "end": "864320"
  },
  {
    "text": "and we will need to run it on tensorflow",
    "start": "864320",
    "end": "867360"
  },
  {
    "text": "for that we run this script that will",
    "start": "867360",
    "end": "870399"
  },
  {
    "text": "deploy a new charm called tf serving on",
    "start": "870399",
    "end": "872880"
  },
  {
    "text": "a container to make it available",
    "start": "872880",
    "end": "875440"
  },
  {
    "text": "now we run the script",
    "start": "875440",
    "end": "878880"
  },
  {
    "text": "and that is deploying the app serving",
    "start": "879120",
    "end": "881199"
  },
  {
    "text": "charm so we can check on youtube status",
    "start": "881199",
    "end": "885839"
  },
  {
    "text": "and the charms coming up also we can",
    "start": "887440",
    "end": "890000"
  },
  {
    "text": "check on cube flow",
    "start": "890000",
    "end": "893120"
  },
  {
    "text": "and there is a serving operator coming",
    "start": "897040",
    "end": "899279"
  },
  {
    "text": "up",
    "start": "899279",
    "end": "900639"
  },
  {
    "text": "now that the serving pod is connected to",
    "start": "900639",
    "end": "902399"
  },
  {
    "text": "kafka we will send some input data",
    "start": "902399",
    "end": "904800"
  },
  {
    "text": "and read its prediction as you can see",
    "start": "904800",
    "end": "907600"
  },
  {
    "text": "this is the prediction of the model had",
    "start": "907600",
    "end": "909199"
  },
  {
    "text": "done for the future stock market",
    "start": "909199",
    "end": "910839"
  },
  {
    "text": "closings",
    "start": "910839",
    "end": "912480"
  },
  {
    "start": "911000",
    "end": "921000"
  },
  {
    "text": "videos about universal operators come to",
    "start": "912480",
    "end": "914720"
  },
  {
    "text": "the ubuntu booth",
    "start": "914720",
    "end": "916160"
  },
  {
    "text": "learn more about universe operates on",
    "start": "916160",
    "end": "917760"
  },
  {
    "text": "twitter.is and channelhub.io",
    "start": "917760",
    "end": "923040"
  }
]