[
  {
    "start": "0",
    "end": "68000"
  },
  {
    "text": "all right um welcome everyone I'd like to thank everyone who's joining us welcome to",
    "start": "1070",
    "end": "7259"
  },
  {
    "text": "today CN CF webinar kubernetes secrets management they'll take your apps faster without secrets I'm Kristy tan I'll be",
    "start": "7259",
    "end": "15000"
  },
  {
    "text": "moderating today's webinar we would like to welcome our presenter today Jody hunt director of DevOps",
    "start": "15000",
    "end": "20550"
  },
  {
    "text": "security at cyber-ark a few housekeeping items before we get started during the",
    "start": "20550",
    "end": "25769"
  },
  {
    "text": "webinar you are not able to talk as an attendee there is a Q&A box at the bottom of your screen please feel free",
    "start": "25769",
    "end": "32160"
  },
  {
    "text": "to drop in your questions and we'll get to as many as we can at the end this is an official webinar of the CNCs",
    "start": "32160",
    "end": "39780"
  },
  {
    "text": "and as such is this subject to the CNC F code of conduct please do not add anything to the chat or questions that",
    "start": "39780",
    "end": "46649"
  },
  {
    "text": "would be in violation of that code of conduct basically please be respectful of your fellow participants and presenters",
    "start": "46649",
    "end": "53480"
  },
  {
    "text": "please also note that the recording and slides will be posted later today to the C and C F webinars page at CMC F dot IO",
    "start": "53480",
    "end": "61140"
  },
  {
    "text": "slash webinars with that I'll hand it over to Jody to kick off today's presentation take it away",
    "start": "61140",
    "end": "68000"
  },
  {
    "text": "thanks Christy thanks everybody thanks for joining I'm gonna be talking about building apps and kubernetes and we've",
    "start": "68000",
    "end": "74700"
  },
  {
    "text": "got a few demos to run through so I'm gonna not try not spend too much time on slides but I think it's important to",
    "start": "74700",
    "end": "81150"
  },
  {
    "text": "acknowledge the importance of keeping credentials safe the the recent Twitter",
    "start": "81150",
    "end": "87750"
  },
  {
    "text": "breach is it just a great example where some folks got access to some to a slack",
    "start": "87750",
    "end": "94590"
  },
  {
    "text": "to an internal slack channel where tool credentials were posted actually pinned",
    "start": "94590",
    "end": "100860"
  },
  {
    "text": "in a slack channel and that gave them the credentials they needed to do the",
    "start": "100860",
    "end": "105950"
  },
  {
    "text": "bit of misters that that they did last week we've seen similar with Tesla where",
    "start": "105950",
    "end": "113009"
  },
  {
    "text": "it was actually a kubernetes console that had been configured to not require any credentials to access and someone",
    "start": "113009",
    "end": "121290"
  },
  {
    "text": "had put any of us access keys in kubernetes and they were able to the hacker was able to access those through",
    "start": "121290",
    "end": "128369"
  },
  {
    "text": "the browser through the kubernetes console and see those secrets and then",
    "start": "128369",
    "end": "133379"
  },
  {
    "text": "cop those secrets and use those so the the point is how do we keep credentials safe we can't actually build applications",
    "start": "133379",
    "end": "139470"
  },
  {
    "start": "135000",
    "end": "176000"
  },
  {
    "text": "without secrets but how do we keep those secrets out of the hands of people who would who would do mischief by them we",
    "start": "139470",
    "end": "147240"
  },
  {
    "text": "often see a lot of tension or at least some tension between the application development teams the DevOps groups the",
    "start": "147240",
    "end": "153360"
  },
  {
    "text": "cloud teams that are trying to move quickly to deliver business value and",
    "start": "153360",
    "end": "158940"
  },
  {
    "text": "the security teams who are trying to keep some controls in place and and you",
    "start": "158940",
    "end": "164310"
  },
  {
    "text": "know this friction sometimes bears out and either development go and often doing their own thing kind of a rehash",
    "start": "164310",
    "end": "170250"
  },
  {
    "text": "of the shadow IT that we've seen recur in different forms over the years or the",
    "start": "170250",
    "end": "177240"
  },
  {
    "start": "176000",
    "end": "235000"
  },
  {
    "text": "security team owns everything it becomes a bottleneck and in neither cases is that a win-win scenario what we really",
    "start": "177240",
    "end": "182400"
  },
  {
    "text": "want to do is enable that DevOps collaboration between the security teams and development teams enable developers",
    "start": "182400",
    "end": "188760"
  },
  {
    "text": "to be secured as transparently as possible relieve them of the reporting",
    "start": "188760",
    "end": "195240"
  },
  {
    "text": "burdens that security is used to dealing with in terms of audit risk compliance these types of things and empower the",
    "start": "195240",
    "end": "203250"
  },
  {
    "text": "security team to deliver a service or deliver a capability that developers",
    "start": "203250",
    "end": "208260"
  },
  {
    "text": "won't find cumbersome and and more importantly we won't find a bottleneck or an impairment to their workflows so",
    "start": "208260",
    "end": "215340"
  },
  {
    "text": "this you know the whole little shift left mentality is is alive and well here",
    "start": "215340",
    "end": "220530"
  },
  {
    "text": "and this is what we're enabling folks to do we want to make development secure",
    "start": "220530",
    "end": "226490"
  },
  {
    "text": "but we want to do it with the oversight of the security team and so it is a",
    "start": "226490",
    "end": "231840"
  },
  {
    "text": "shared responsibility and we have you know sort of itemized these best",
    "start": "231840",
    "end": "237690"
  },
  {
    "text": "practices the first step is absolutely getting hard coded secret's out of your",
    "start": "237690",
    "end": "243060"
  },
  {
    "text": "applications most people have gotten that memo and and have at least taken",
    "start": "243060",
    "end": "248910"
  },
  {
    "text": "steps to do that but of course as soon as you start removing secrets you need a place to put those and so there is a",
    "start": "248910",
    "end": "256170"
  },
  {
    "text": "tendency to put secrets into the most at hand place you know if you're in AWS you",
    "start": "256170",
    "end": "263070"
  },
  {
    "text": "might look at it I'd be a secrets manager if you're an azure might look at as your people here obviously you're gonna look at",
    "start": "263070",
    "end": "269220"
  },
  {
    "text": "kubernetes secrets so we call these security Islands they're little pockets of security and they may be okay in and",
    "start": "269220",
    "end": "276150"
  },
  {
    "text": "of themselves but this this audit risk compliance practice really requires some",
    "start": "276150",
    "end": "282720"
  },
  {
    "text": "insight the security team needs to understand how credentials are being used how they're being secured and it's",
    "start": "282720",
    "end": "287910"
  },
  {
    "text": "very difficult when you have multiple multiples of those islands no in this",
    "start": "287910",
    "end": "293040"
  },
  {
    "text": "time of co vyd and the time of very porous network boundaries it's not been",
    "start": "293040",
    "end": "299940"
  },
  {
    "text": "any more obvious that perimeters don't work anymore so identities really are the only way of securing privilege so we",
    "start": "299940",
    "end": "306570"
  },
  {
    "text": "need to create identities for absolutely everything especially anything is going to be accessing a sensitive system we",
    "start": "306570",
    "end": "313350"
  },
  {
    "text": "need to authenticate it strongly limited scope so it's authorized to access only",
    "start": "313350",
    "end": "319560"
  },
  {
    "text": "what it needs to the principle of least privilege and we want to eliminate this",
    "start": "319560",
    "end": "324720"
  },
  {
    "text": "problem that I'll speak more to you around secret zero how do we secure that bootstrap credential that applications",
    "start": "324720",
    "end": "331800"
  },
  {
    "text": "need to kick this missile off credential rotation is a fundamental best practice",
    "start": "331800",
    "end": "337770"
  },
  {
    "text": "for just ensuring that if a secret gets compromised you have to assume that they",
    "start": "337770",
    "end": "342900"
  },
  {
    "text": "will be you have to assume that credentials will at some point get compromised rotation effectively newt's",
    "start": "342900",
    "end": "348900"
  },
  {
    "text": "that that secret in such a way that whoever has it it's no longer of any use so so aggressive regular rotation of",
    "start": "348900",
    "end": "357510"
  },
  {
    "text": "secrets especially secrets being used by applications is is critical but that",
    "start": "357510",
    "end": "363270"
  },
  {
    "text": "also then says how do we do that in such a way that applications aren't disrupted that applications connectivity and",
    "start": "363270",
    "end": "369840"
  },
  {
    "text": "ability to connect back in systems isn't isn't impaired because the last thing we",
    "start": "369840",
    "end": "375120"
  },
  {
    "text": "want is for application downtime to be triggered by credential you know good",
    "start": "375120",
    "end": "381360"
  },
  {
    "text": "credential management so applications always have to be able to get their secrets they always have to be able to connect back in systems but we want to",
    "start": "381360",
    "end": "387780"
  },
  {
    "start": "383000",
    "end": "441000"
  },
  {
    "text": "do all that securely I've spoken to this issue your security islands but this is the current state we see most",
    "start": "387780",
    "end": "393090"
  },
  {
    "text": "organizations in where they have homegrown solutions or they're using",
    "start": "393090",
    "end": "398180"
  },
  {
    "text": "capabilities of the tools of the platforms that they're running to store secrets we'll talk a fair bit",
    "start": "398180",
    "end": "404289"
  },
  {
    "text": "here today about kubernetes secrets some of the challenges with them some of the things that we can do that we can help",
    "start": "404289",
    "end": "410289"
  },
  {
    "text": "with in terms of mitigating the risk of those but this this is the current state",
    "start": "410289",
    "end": "415809"
  },
  {
    "text": "that we're seeing most organizations in and and where we're coming to market as",
    "start": "415809",
    "end": "421689"
  },
  {
    "text": "a security company and putting security first but providing that so I like to say we're a security company that gets",
    "start": "421689",
    "end": "427509"
  },
  {
    "text": "DevOps and so we're empowering the security team to do that governance risk complying governance risk compliance",
    "start": "427509",
    "end": "434830"
  },
  {
    "text": "reporting but not getting in the way of the development workflows so we want",
    "start": "434830",
    "end": "442059"
  },
  {
    "start": "441000",
    "end": "472000"
  },
  {
    "text": "everything to have an identity whether it's a person or a process we want strong authentication for all of that we",
    "start": "442059",
    "end": "447729"
  },
  {
    "text": "want to authorize with lease privilege so we're only granting access to what D identity needs and no more than that and",
    "start": "447729",
    "end": "455169"
  },
  {
    "text": "then we obviously want to audit everything all activity needs to be audited so that if there is an issue we",
    "start": "455169",
    "end": "462189"
  },
  {
    "text": "are able to detect it as quickly as possible and certainly do that sort of post-mortem analysis to to understand",
    "start": "462189",
    "end": "469029"
  },
  {
    "text": "what what happened or what identity went rogue the secret zero problem is unique",
    "start": "469029",
    "end": "474909"
  },
  {
    "start": "472000",
    "end": "507000"
  },
  {
    "text": "to applications so humans have a built in vault where they can mostly remember",
    "start": "474909",
    "end": "480009"
  },
  {
    "text": "their own passwords or lease answers to security questions but the nonhumans",
    "start": "480009",
    "end": "485039"
  },
  {
    "text": "where does that bootstrap password go or that token or the call to serve or whatever that credential is where do you",
    "start": "485039",
    "end": "491830"
  },
  {
    "text": "store that in such a way that the application can get it but nobody else can how do you secure it but still leave",
    "start": "491830",
    "end": "499089"
  },
  {
    "text": "it accessible to the application we call this the secret zero problem and and",
    "start": "499089",
    "end": "504099"
  },
  {
    "text": "we've devised ways around that so this is often one of the first questions I",
    "start": "504099",
    "end": "509289"
  },
  {
    "start": "507000",
    "end": "638000"
  },
  {
    "text": "get when I'm talking about this face people have wrestled with this and it is",
    "start": "509289",
    "end": "514599"
  },
  {
    "text": "it is a difficult problem there's basically two ways to do authentication",
    "start": "514599",
    "end": "519849"
  },
  {
    "text": "one is credential based and in the human world this is your passport or your driver's license say thing that you have",
    "start": "519849",
    "end": "527079"
  },
  {
    "text": "that vouchers for your identity that says you are who you say you are in the",
    "start": "527079",
    "end": "532779"
  },
  {
    "text": "application world we have API keys we have tokens certs these are all things that have to be stored somewhere and they create that",
    "start": "532779",
    "end": "539530"
  },
  {
    "text": "secret zero problem these these credentials can be stolen and used to impersonate an identity and so a",
    "start": "539530",
    "end": "546340"
  },
  {
    "text": "stronger way of doing authentication is to use attributes that can be validated with a trusted Authority and so if we",
    "start": "546340",
    "end": "553960"
  },
  {
    "text": "think about biometrics in the human world if I have my fingerprints on record or if my retina scan is on record",
    "start": "553960",
    "end": "560200"
  },
  {
    "text": "then when I go to the airport and I go through the clear kiosk and I'll present my fingerprints they can be compared to",
    "start": "560200",
    "end": "565690"
  },
  {
    "text": "my fingerprints on record and that's a much stronger way of authenticating myself it's it's it's much harder to",
    "start": "565690",
    "end": "572500"
  },
  {
    "text": "steal fingerprints and so we want to use this same type of approach with",
    "start": "572500",
    "end": "578290"
  },
  {
    "text": "applications but we need a way to verify these attributes these attributes so the",
    "start": "578290",
    "end": "584410"
  },
  {
    "text": "idea is that we are going to allow lists we are going to pre enroll or predefined identities along with the attributes",
    "start": "584410",
    "end": "591490"
  },
  {
    "text": "that will be used to validate them and then at runtime when that request comes",
    "start": "591490",
    "end": "597340"
  },
  {
    "text": "in we can say is this an identity we know it's not even on the list of allowed identities we can reject that",
    "start": "597340",
    "end": "603310"
  },
  {
    "text": "that request outright it is on the allowed list then we can call back to the platform to validate that identity",
    "start": "603310",
    "end": "611080"
  },
  {
    "text": "and this is the approach that we take in kubernetes as well as on the cloud platforms and even with some tools where",
    "start": "611080",
    "end": "617380"
  },
  {
    "text": "we can look at each of these as a trusted Authority to understand and know what's running in it and we can use the",
    "start": "617380",
    "end": "624430"
  },
  {
    "text": "attributes of a Jenkins job of a I am role in AWS of metadata job tokens and",
    "start": "624430",
    "end": "633040"
  },
  {
    "text": "in Azure use those as platform attributes to validate these these",
    "start": "633040",
    "end": "639490"
  },
  {
    "start": "638000",
    "end": "767000"
  },
  {
    "text": "actors these these pods are these applications so the flow and I'm going",
    "start": "639490",
    "end": "645070"
  },
  {
    "text": "to be specifically talking about the open source solution conjurer so cyber",
    "start": "645070",
    "end": "650410"
  },
  {
    "text": "or conjurer is an open source vault for storing and retrieving secrets it is",
    "start": "650410",
    "end": "657840"
  },
  {
    "text": "available at Condor org there's lots of content here lots of good blog content",
    "start": "657840",
    "end": "664320"
  },
  {
    "text": "talking about the secret zero problem and various aspects of application or secrets management for",
    "start": "664320",
    "end": "671600"
  },
  {
    "text": "applications the api's are well documented here and and we we've got",
    "start": "671600",
    "end": "677240"
  },
  {
    "text": "it's just a ton of content we'll be referring back to that so we're going to be talking about secrets management in",
    "start": "677240",
    "end": "683480"
  },
  {
    "text": "the context of open source Conger the workflow here is that you authenticate",
    "start": "683480",
    "end": "688640"
  },
  {
    "text": "using some strategy so we support multiple different strategies for different platforms and different use",
    "start": "688640",
    "end": "693710"
  },
  {
    "text": "cases however authentication happens successful authentication results in us issuing a short-lived on token this is a",
    "start": "693710",
    "end": "701840"
  },
  {
    "text": "token that has an eight minute time to live basically it's a bearer token that can be used to retrieve secrets the secrets",
    "start": "701840",
    "end": "708680"
  },
  {
    "text": "are retrieved based on authorization per policies so we authenticate to validate",
    "start": "708680",
    "end": "714590"
  },
  {
    "text": "yet the identity the application that identity is constrained to access only the things that it's been allowed to",
    "start": "714590",
    "end": "720440"
  },
  {
    "text": "access and assuming it's it makes a request for a secret that it has access to it can retrieve that secret and use",
    "start": "720440",
    "end": "726740"
  },
  {
    "text": "it and that secret could be a certificate you can be an SSH key could be a password it could be a token and",
    "start": "726740",
    "end": "733790"
  },
  {
    "text": "basically any binary value that we want to use for credentials can be used to",
    "start": "733790",
    "end": "739250"
  },
  {
    "text": "connect to these these target systems these back-end systems at the end of eight minutes though that token will",
    "start": "739250",
    "end": "745130"
  },
  {
    "text": "expire and the application has to reauthorize and this will play into some of the use cases that we'll be demoing",
    "start": "745130",
    "end": "750860"
  },
  {
    "text": "here shortly because that access token when it expires basically you've lost access to secrets and given that we want",
    "start": "750860",
    "end": "758870"
  },
  {
    "text": "applications to always have access to their secrets there's certain certain things that have to be done to to to",
    "start": "758870",
    "end": "766760"
  },
  {
    "text": "address that so to dig into kubernetes authentication in the counter",
    "start": "766760",
    "end": "772700"
  },
  {
    "text": "environment a little bit more this is elaborating on that workflow that I talked through a minute ago basically",
    "start": "772700",
    "end": "778670"
  },
  {
    "text": "the the application identity is allow listed or whitelist and it's define or",
    "start": "778670",
    "end": "784520"
  },
  {
    "text": "its attributes are defined in terms of the cluster and the namespace that it's running in so we effectively give an",
    "start": "784520",
    "end": "790730"
  },
  {
    "text": "identity to the cluster and of course namespaces are native in incriminate",
    "start": "790730",
    "end": "796130"
  },
  {
    "text": "ease and so these would be ways of validating an identity now this this means that application is running the",
    "start": "796130",
    "end": "802430"
  },
  {
    "text": "same namespace which share the same identity and sometimes you want to go more granular than that",
    "start": "802430",
    "end": "807950"
  },
  {
    "text": "so we also give you the ability to add a service account it could burn any service account as an attribute that can",
    "start": "807950",
    "end": "814730"
  },
  {
    "text": "be validated for that identity so the identity is just a friendly name but",
    "start": "814730",
    "end": "819980"
  },
  {
    "text": "these attributes are annotations on that identity that we can use to validate it at runtime so that's the identity gets",
    "start": "819980",
    "end": "827270"
  },
  {
    "text": "defined via policy gets loaded into conger and defines that identity along",
    "start": "827270",
    "end": "832790"
  },
  {
    "text": "with the attributes at runtime a helper",
    "start": "832790",
    "end": "837860"
  },
  {
    "text": "container running either as a sidecar or as an init container will do what what",
    "start": "837860",
    "end": "843770"
  },
  {
    "start": "842000",
    "end": "900000"
  },
  {
    "text": "is effectively a spiffy workflow this is where the Authenticator is going to format a certificate signing request the",
    "start": "843770",
    "end": "851780"
  },
  {
    "text": "ultimate goal is to create a mutual TLS connection with the server with the",
    "start": "851780",
    "end": "857210"
  },
  {
    "text": "condor condor serving the Authenticator submits that certificate signing request with the attributes from the pot",
    "start": "857210",
    "end": "863960"
  },
  {
    "text": "metadata attributes from the pod that can be used to validate that pod with",
    "start": "863960",
    "end": "869000"
  },
  {
    "text": "kubernetes so when that request comes in condor will parse that csr call back to",
    "start": "869000",
    "end": "874940"
  },
  {
    "text": "the kubernetes api to validate those attributes if those attributes are foreign identity that's known and they",
    "start": "874940",
    "end": "880730"
  },
  {
    "text": "check out with with criminalities then we will issue that access token that",
    "start": "880730",
    "end": "885820"
  },
  {
    "text": "access took and then actually we will issue a cert in a private key that can",
    "start": "885820",
    "end": "890870"
  },
  {
    "text": "be used for credentials for authentication using that mutual TLS protocol and then that authentication",
    "start": "890870",
    "end": "897530"
  },
  {
    "text": "gives us the access token if you're familiar with spiffy this is basically",
    "start": "897530",
    "end": "903500"
  },
  {
    "start": "900000",
    "end": "965000"
  },
  {
    "text": "that that same workflow and in fact the certificate that has issued the credentials that are issued here contain",
    "start": "903500",
    "end": "911030"
  },
  {
    "text": "a spiffy estimate so we're very bullish on spiffy and the whole idea of defining",
    "start": "911030",
    "end": "918640"
  },
  {
    "text": "identities for workloads not for infrastructure we want to authenticate workloads not the infrastructure that",
    "start": "918640",
    "end": "925100"
  },
  {
    "text": "they're running on spiffy is part of the CNCs framework under the umbrella of CN",
    "start": "925100",
    "end": "931970"
  },
  {
    "text": "CF and they're doing really great work around how do you - identities strong identities and",
    "start": "931970",
    "end": "939470"
  },
  {
    "text": "strong authentication for applications so we're basically using that workflow where the Authenticator is the client",
    "start": "939470",
    "end": "947829"
  },
  {
    "text": "and the the other party is the conger server and using that spiffing workflow",
    "start": "947829",
    "end": "954800"
  },
  {
    "text": "to create a spiffy s-video sniffing verifiable identity document which is that five on that circuit so so that's",
    "start": "954800",
    "end": "963680"
  },
  {
    "text": "that's a bit about that so we're on to the demo host now which i think is the",
    "start": "963680",
    "end": "969589"
  },
  {
    "start": "965000",
    "end": "1032000"
  },
  {
    "text": "more interesting part of any presentation feel free to ask any",
    "start": "969589",
    "end": "974809"
  },
  {
    "text": "questions you know if anything wasn't clear of anything I went over we're basically going to go through some some",
    "start": "974809",
    "end": "980689"
  },
  {
    "text": "examples of how authentication works in various ways of retrieving secrets we've got several different demos here call",
    "start": "980689",
    "end": "988309"
  },
  {
    "text": "them labs this is actually set up to be a multi-user lab if anyone ever wanted to",
    "start": "988309",
    "end": "994629"
  },
  {
    "text": "run a clinic or attend one of our workshops and we're going to walk",
    "start": "994629",
    "end": "1001059"
  },
  {
    "text": "through several different ways of retrieving secrets that are supported by conjurer so sometimes people just want",
    "start": "1001059",
    "end": "1006670"
  },
  {
    "text": "an API and and a lot of times developers we're just saying where's the documentation for your api's well it's",
    "start": "1006670",
    "end": "1013059"
  },
  {
    "text": "it's here you know the API Doc's are here if you go to the developer box here",
    "start": "1013059",
    "end": "1018939"
  },
  {
    "text": "there's a REST API and here's all the stuff for how to retrieve secrets how to",
    "start": "1018939",
    "end": "1025360"
  },
  {
    "text": "authenticate so it's all right there there's no gate on it and so you can you",
    "start": "1025360",
    "end": "1031058"
  },
  {
    "text": "can go look at this at your leisure so what we're going to show is how to pull",
    "start": "1031059",
    "end": "1036329"
  },
  {
    "start": "1032000",
    "end": "1300000"
  },
  {
    "text": "database credentials via the REST API or they have to connect to a database now I",
    "start": "1036329",
    "end": "1041350"
  },
  {
    "text": "don't actually have a database to connect to except from this last example so we're just going to show retrieval of",
    "start": "1041350",
    "end": "1046688"
  },
  {
    "text": "the secrets and echoing and those secrets in these first three labs but but to get on with that this is my demo",
    "start": "1046689",
    "end": "1054820"
  },
  {
    "text": "environment we do a cute cuddly R I'm just running with docker desktop kubernetes which is is hugely convenient",
    "start": "1054820",
    "end": "1062409"
  },
  {
    "text": "I used to use mini cube a lot but now that kubernetes is in docker desktop I",
    "start": "1062409",
    "end": "1067870"
  },
  {
    "text": "seem to only use that anymore if I do it get pods here in my test apps",
    "start": "1067870",
    "end": "1074470"
  },
  {
    "text": "namespace and what I'm gonna do is just",
    "start": "1074470",
    "end": "1079660"
  },
  {
    "text": "alias that so I don't have to keep typing that so so you guys don't have to watch me type that now I can save KTP",
    "start": "1079660",
    "end": "1089050"
  },
  {
    "text": "and that's much simpler so you can see these applications have been running for a while I'm gonna first walk through",
    "start": "1089050",
    "end": "1095860"
  },
  {
    "text": "where that helper container is running as a sidecar the Authenticator client that initiates that authentication",
    "start": "1095860",
    "end": "1102850"
  },
  {
    "text": "workflow that that's 50 based on authentication workflow where it's",
    "start": "1102850",
    "end": "1108220"
  },
  {
    "text": "running as a sidecar I can exec into the application container using this this handy little script now I'm in the",
    "start": "1108220",
    "end": "1114640"
  },
  {
    "text": "application container and I can run the script which simulates when an",
    "start": "1114640",
    "end": "1119950"
  },
  {
    "text": "application would do using a REST API so here's here's the rest call basically",
    "start": "1119950",
    "end": "1126040"
  },
  {
    "text": "this this call here to get secrets this this notation doesn't include the URL",
    "start": "1126040",
    "end": "1131710"
  },
  {
    "text": "but you can see that here's our URL and the the endpoint for getting a password",
    "start": "1131710",
    "end": "1139020"
  },
  {
    "text": "basically what we're doing that here we are using some environment variables so the the Authenticator will drop that job",
    "start": "1139020",
    "end": "1147520"
  },
  {
    "text": "token in a shared memory volume so this application container has access to that job token at this location we want to",
    "start": "1147520",
    "end": "1155140"
  },
  {
    "text": "look at it it's actually in run conjure access token and so there's there is my",
    "start": "1155140",
    "end": "1161140"
  },
  {
    "text": "jaw token this is running as a sidecar this token will be refreshed every six",
    "start": "1161140",
    "end": "1166540"
  },
  {
    "text": "minutes so the Authenticator stays running and it's continually refreshing this job took in every six minutes so it",
    "start": "1166540",
    "end": "1173320"
  },
  {
    "text": "never goes stale I always have the ability to run my application to retrieve secrets so when I run this",
    "start": "1173320",
    "end": "1179800"
  },
  {
    "text": "application that picks up the job token it basics different codes it trims the control characters out of it Earl",
    "start": "1179800",
    "end": "1186670"
  },
  {
    "text": "encodes the name of the variable because the variable the variable name has slashes in it so basically converting",
    "start": "1186670",
    "end": "1193210"
  },
  {
    "text": "these these slashes 2% to s and then we we make our call to retrieve the secret",
    "start": "1193210",
    "end": "1198700"
  },
  {
    "text": "get the value type of the value so that all that'll happen there I can go back in edit",
    "start": "1198700",
    "end": "1204070"
  },
  {
    "text": "that at my application I'll make an air quotes when I say application because it it really was just a basket but I can",
    "start": "1204070",
    "end": "1209620"
  },
  {
    "text": "say username here will retrieve the username just as easily q so now I've",
    "start": "1209620",
    "end": "1220840"
  },
  {
    "text": "got the username so we'll see this in the next couple of examples oracle DB user is a username here's a good strong",
    "start": "1220840",
    "end": "1228010"
  },
  {
    "text": "password with upper lowercase numerals and special characters so so and this",
    "start": "1228010",
    "end": "1233920"
  },
  {
    "text": "would be the thing that we wouldn't want to rotate but now we're dynamically retrieving it it's not part of the",
    "start": "1233920",
    "end": "1240460"
  },
  {
    "text": "application that's being dynamically retrieved from the service the identity of this pod is being very strongly",
    "start": "1240460",
    "end": "1246310"
  },
  {
    "text": "authenticated using that that's 50 based authentication protocol that we walk",
    "start": "1246310",
    "end": "1252130"
  },
  {
    "text": "through we have the access token here and the application can pick up that access token and use the REST API or use",
    "start": "1252130",
    "end": "1259870"
  },
  {
    "text": "any of the client libraries that we have because there's there there are other ways and so basically we have Java code",
    "start": "1259870",
    "end": "1265630"
  },
  {
    "text": "Ruby and dotnet effectively wrappers for the REST API under the covers everything is the rest of all that these are little",
    "start": "1265630",
    "end": "1272410"
  },
  {
    "text": "higher level bindings for the working of these languages that you may be using",
    "start": "1272410",
    "end": "1277770"
  },
  {
    "text": "provide a little bit higher level interface but that means that your",
    "start": "1277770",
    "end": "1282790"
  },
  {
    "text": "applications can always pull secrets and so given that the sidecar is running there that tokens always going to be",
    "start": "1282790",
    "end": "1288430"
  },
  {
    "text": "there and fresh and be able to use to retrieve secrets so that's that's our",
    "start": "1288430",
    "end": "1293830"
  },
  {
    "text": "first example here where we've got an example an application using the API to",
    "start": "1293830",
    "end": "1299260"
  },
  {
    "text": "retrieve secrets and then would simply use that local database username and password to connect to the database um",
    "start": "1299260",
    "end": "1305220"
  },
  {
    "start": "1300000",
    "end": "1715000"
  },
  {
    "text": "second example now is using another open source project that cyber-ark sponsor is",
    "start": "1305220",
    "end": "1310600"
  },
  {
    "text": "called summin summin is a hugely useful tool it is something that that solves",
    "start": "1310600",
    "end": "1318520"
  },
  {
    "text": "just a ton of problems it is that level of indirection that solves so many problems in computer science so summon",
    "start": "1318520",
    "end": "1325840"
  },
  {
    "text": "will retrieve secrets and then call an application with those secrets populated",
    "start": "1325840",
    "end": "1331240"
  },
  {
    "text": "in environment variables or in memory map files the goal is to keep the secrets ephemeral but not require the",
    "start": "1331240",
    "end": "1337810"
  },
  {
    "text": "application to know how to authenticate or how to how to retrieve secrets in other words the application is is kept",
    "start": "1337810",
    "end": "1344760"
  },
  {
    "text": "blissfully unaware of where these secrets are coming from and so that",
    "start": "1344760",
    "end": "1349780"
  },
  {
    "text": "means that you may be pulling secrets from different places in different environments so the application can stay",
    "start": "1349780",
    "end": "1356920"
  },
  {
    "text": "Amitabh 'l the applications configuration doesn't have to know anything about where it's running the secrets are simply injected into its",
    "start": "1356920",
    "end": "1363580"
  },
  {
    "text": "environment biased by summons so summon will call a provider and it's a plug-in",
    "start": "1363580",
    "end": "1370120"
  },
  {
    "text": "architecture so providers we have four key rings for s3 buckets for for lots of",
    "start": "1370120",
    "end": "1377860"
  },
  {
    "text": "different things different docking systems so this creates that level of",
    "start": "1377860",
    "end": "1383020"
  },
  {
    "text": "abstraction where you can pull secrets from different back-end systems provided for an application the application",
    "start": "1383020",
    "end": "1388510"
  },
  {
    "text": "doesn't have to know how to retrieve it it doesn't know where it's coming from that way the application in dev may be",
    "start": "1388510",
    "end": "1393550"
  },
  {
    "text": "your calling sequence from keyring application and test may be you're pulling it from you know a jerky ball",
    "start": "1393550",
    "end": "1400960"
  },
  {
    "text": "and they in production you could be pulling secrets from a production ball so that's just hugely valuable so we're",
    "start": "1400960",
    "end": "1409090"
  },
  {
    "text": "going to use summon in an application in a kubernetes application where the Authenticator is running as a tan it",
    "start": "1409090",
    "end": "1417520"
  },
  {
    "text": "container now so summon starts up the application and typically someone would be your entry",
    "start": "1417520",
    "end": "1424540"
  },
  {
    "text": "point for the pod where someone would would pull the secrets call the application then the applications often",
    "start": "1424540",
    "end": "1431140"
  },
  {
    "text": "running with a secret so there's never a opportunity for the application to",
    "start": "1431140",
    "end": "1436150"
  },
  {
    "text": "retrieve secrets once it's started so this lends itself to that a NIC container pattern and if we go over here",
    "start": "1436150",
    "end": "1443260"
  },
  {
    "text": "to my environment and look here we've got the inner container here now look it's been running 79 minutes and so",
    "start": "1443260",
    "end": "1451210"
  },
  {
    "text": "given that the Anika nain er is running the Authenticator we may have an issue",
    "start": "1451210",
    "end": "1457230"
  },
  {
    "text": "with our jaw token because we we've already established that only lists for",
    "start": "1457230",
    "end": "1462970"
  },
  {
    "text": "eight minutes so if I go into this this environment here then we can see that",
    "start": "1462970",
    "end": "1468970"
  },
  {
    "text": "I've got a joking over here but that job token is suspect and so",
    "start": "1468970",
    "end": "1477169"
  },
  {
    "text": "when I run someone so just to give you a little bit more example of how summon works summon will look by default in a",
    "start": "1477169",
    "end": "1483860"
  },
  {
    "text": "local for a local file called secrets de Hamel and this describes the names of",
    "start": "1483860",
    "end": "1490039"
  },
  {
    "text": "the secrets to retrieve it doesn't say what provider to use it doesn't say what back-end system these are coming from the contract of a summon provider is it",
    "start": "1490039",
    "end": "1498200"
  },
  {
    "text": "takes a name in and returns the value of that so it's taking the name of a secret returning of the value of the secret in",
    "start": "1498200",
    "end": "1504590"
  },
  {
    "text": "this case I'm using the the conjure summon provider which is going to use",
    "start": "1504590",
    "end": "1510260"
  },
  {
    "text": "that access took in to retrieve secrets with this name and place it in a you know environment variable with this name",
    "start": "1510260",
    "end": "1516770"
  },
  {
    "text": "for the username and this for the password we can see this work if I say summon env and then grep for DB underbar",
    "start": "1516770",
    "end": "1527390"
  },
  {
    "text": "but it's not returning anything if I say summon env without grepping we can see",
    "start": "1527390",
    "end": "1534020"
  },
  {
    "text": "why I've got an invalid accessed okay so what I need to do is just go bounce that",
    "start": "1534020",
    "end": "1540080"
  },
  {
    "text": "so this is this is the upside and the downside of using an init container in this scenario we have we have the",
    "start": "1540080",
    "end": "1548510"
  },
  {
    "text": "potential if the application should ever want to go re retrieve secrets first off",
    "start": "1548510",
    "end": "1553909"
  },
  {
    "text": "we've kind of built in the fact that it doesn't know how to retrieve this but if the application is going to get ever get",
    "start": "1553909",
    "end": "1561710"
  },
  {
    "text": "secrets again it has to be restarted and so this we can see now we've got a new",
    "start": "1561710",
    "end": "1566870"
  },
  {
    "text": "Annette container running here I'm going to executive that and now if I say",
    "start": "1566870",
    "end": "1571909"
  },
  {
    "text": "summon env and grep for things beginning with the underbar we got a little bit",
    "start": "1571909",
    "end": "1577370"
  },
  {
    "text": "happier path we see that same Oracle database user and that same strong password here and now I can use that to",
    "start": "1577370",
    "end": "1584809"
  },
  {
    "text": "call a very simple application which could then connect to a database which that's nothing I want to when I can",
    "start": "1584809",
    "end": "1592010"
  },
  {
    "text": "summon so here now what could be simpler here I'm simply echoing these",
    "start": "1592010",
    "end": "1597409"
  },
  {
    "text": "environment variables if I run this by itself it doesn't have anything to show",
    "start": "1597409",
    "end": "1602470"
  },
  {
    "text": "because there is nothing in the environment that that has the underbar init unless I",
    "start": "1602470",
    "end": "1610130"
  },
  {
    "text": "run something first so I can say summon - what I'm summon and now we've got the",
    "start": "1610130",
    "end": "1617179"
  },
  {
    "text": "app application has access to those credentials but as soon as the application exits those credentials",
    "start": "1617179",
    "end": "1622220"
  },
  {
    "text": "disappear they are completely ephemeral and the cool thing is someone can pull secrets into memory map files so if you",
    "start": "1622220",
    "end": "1629059"
  },
  {
    "text": "have SSH keys or certificates or even configuration files you can store those",
    "start": "1629059",
    "end": "1634130"
  },
  {
    "text": "retrieve those as dynamic in other words non persistent files and what someone",
    "start": "1634130",
    "end": "1641150"
  },
  {
    "text": "will do is is put the secret the environment variable has the path to the",
    "start": "1641150",
    "end": "1647090"
  },
  {
    "text": "memory map file so you still pertain file system semantics and that that's a",
    "start": "1647090",
    "end": "1652250"
  },
  {
    "text": "very cool thing so someone is actually our most active I was told by Jerry who",
    "start": "1652250",
    "end": "1658130"
  },
  {
    "text": "runs our integrations and open source team that something is our most active",
    "start": "1658130",
    "end": "1663429"
  },
  {
    "text": "open source project and so and it's for good reason it's just an enormous lean",
    "start": "1663429",
    "end": "1668840"
  },
  {
    "text": "useful it's especially useful for doing integrations for tools that can consume",
    "start": "1668840",
    "end": "1673850"
  },
  {
    "text": "environment variables and for which it would be very hard to add rest calls into it to pull secrets for itself so we",
    "start": "1673850",
    "end": "1681770"
  },
  {
    "text": "use this a lot where we don't have native integrations with the myriad CI CD tools that are out there many of them",
    "start": "1681770",
    "end": "1688640"
  },
  {
    "text": "can read environment variables or files and we can use summon to populate those and still keep secrets ephemeral so the",
    "start": "1688640",
    "end": "1695690"
  },
  {
    "text": "big advertisement therefore for summon but of course someone has to be baked",
    "start": "1695690",
    "end": "1701750"
  },
  {
    "text": "into the application image and I was doing a POC a while ago and someone said",
    "start": "1701750",
    "end": "1707059"
  },
  {
    "text": "well white why don't you just push him to kubernetes secrets you know our we've got all these applications that are",
    "start": "1707059",
    "end": "1712820"
  },
  {
    "text": "already using kubernetes secrets why don't you give us the option of using kubernetes secrets but just you know",
    "start": "1712820",
    "end": "1719929"
  },
  {
    "start": "1715000",
    "end": "2098000"
  },
  {
    "text": "address some of the concerns that you know some of the issues around community c so this is again where the",
    "start": "1719929",
    "end": "1726799"
  },
  {
    "text": "Authenticator is going to run as an init container but what we're gonna do is dynamically populate a kubernetes secret",
    "start": "1726799",
    "end": "1733100"
  },
  {
    "text": "and this is kind of the the best of both worlds and as has proven to be pretty",
    "start": "1733100",
    "end": "1738260"
  },
  {
    "text": "popular um it addresses some of the acknowledged risks that could burn any secrets Hanna",
    "start": "1738260",
    "end": "1744140"
  },
  {
    "text": "but I don't think you know anybody's I know what hopefully this is this is all you know first-hand knowledge to you you",
    "start": "1744140",
    "end": "1751520"
  },
  {
    "text": "all on the phone but there there are issues here you know so insecurity",
    "start": "1751520",
    "end": "1757760"
  },
  {
    "text": "issues so first off they are encrypted at rest in Bethany only if you set it up that way so you have to enable",
    "start": "1757760",
    "end": "1764060"
  },
  {
    "text": "encryption and in the SE d store for the kubernetes secrets to be encrypted",
    "start": "1764060",
    "end": "1770380"
  },
  {
    "text": "second this and this is this is the thing that that is probably the most egregious version managing use mandatory",
    "start": "1770380",
    "end": "1779330"
  },
  {
    "text": "you always want a version manager your stuff right so that's this version manage everything is kind of DevOps 101",
    "start": "1779330",
    "end": "1785420"
  },
  {
    "text": "but now you've got a manifest that only base64 encode this username and password",
    "start": "1785420",
    "end": "1791990"
  },
  {
    "text": "and you check that into github so now somebody has very easy access to those credentials anybody that can read your",
    "start": "1791990",
    "end": "1798680"
  },
  {
    "text": "github repo can now go through and easily basics before decode your your",
    "start": "1798680",
    "end": "1804440"
  },
  {
    "text": "Oracle database username and password this is the problem that we're most able",
    "start": "1804440",
    "end": "1810410"
  },
  {
    "text": "to address application is protecting the value of the seekers now this is a little bit of foreshadowing for the",
    "start": "1810410",
    "end": "1816770"
  },
  {
    "text": "secret list solution that we're going to show in our fourth example because once applications get the secret you don't",
    "start": "1816770",
    "end": "1822230"
  },
  {
    "text": "know what they're going to do with it they could link it in a log they can they can exfiltrate it for you know",
    "start": "1822230",
    "end": "1827720"
  },
  {
    "text": "nefarious purposes and any user that can access a secret so you know applications",
    "start": "1827720",
    "end": "1834560"
  },
  {
    "text": "we can we can address this users and anyone with root permissions this is",
    "start": "1834560",
    "end": "1839690"
  },
  {
    "text": "something that just your own native security discipline has to address",
    "start": "1839690",
    "end": "1846280"
  },
  {
    "text": "keeping people from being rude you know anybody that has root we're fond of saying once their root it's game over",
    "start": "1846280",
    "end": "1852050"
  },
  {
    "text": "there's really nothing you can do once somebody's root because they can do memory scans they can access keychains",
    "start": "1852050",
    "end": "1857720"
  },
  {
    "text": "there's there's nothing someone can do once they're rude this is this is you know a big part of our core business is",
    "start": "1857720",
    "end": "1863750"
  },
  {
    "text": "just keeping people from being rude on any any system they're not supposed to be rude on and if they are we know who",
    "start": "1863750",
    "end": "1869990"
  },
  {
    "text": "they are and we know what they're doing so but you know the user creating a pod also has the ability to look at that",
    "start": "1869990",
    "end": "1876120"
  },
  {
    "text": "secret so so foreshadowing a little bit we'll come back to this when we talk about secret lists but I want to show",
    "start": "1876120",
    "end": "1882570"
  },
  {
    "text": "how we address this concern because I think this is the most common experience most developers have it is they do the",
    "start": "1882570",
    "end": "1889559"
  },
  {
    "text": "right thing and I'm gonna bet I bet $100 there's at least one person listening to",
    "start": "1889559",
    "end": "1896880"
  },
  {
    "text": "this webinar that has experienced this where they did the right thing they put their credentials in a file",
    "start": "1896880",
    "end": "1903240"
  },
  {
    "text": "they version manage their file suddenly somebody has had access to those secrets and and you know it's it's it's just",
    "start": "1903240",
    "end": "1912020"
  },
  {
    "text": "it's just the way things happened these days fortunately github has started adding",
    "start": "1912020",
    "end": "1918270"
  },
  {
    "text": "hooks where they will alert you to the fact that you may have just checked in some credentials but but kubernetes as",
    "start": "1918270",
    "end": "1925230"
  },
  {
    "text": "far as I know kubernetes secrets manifests are not one because their basics before encoded they're not obviously credentials and so this is",
    "start": "1925230",
    "end": "1933570"
  },
  {
    "text": "something that we want to fix what we want to do is get those basics before encoded values out of the the secret we",
    "start": "1933570",
    "end": "1940380"
  },
  {
    "text": "want to dynamically bind the kubernetes so we want to keep the kubernetes secrets we want the application to use",
    "start": "1940380",
    "end": "1946620"
  },
  {
    "text": "kubernetes Secrets natively but we don't want the application we don't want that",
    "start": "1946620",
    "end": "1952770"
  },
  {
    "text": "that manifest to be to be checked in with those credentials and tax so the",
    "start": "1952770",
    "end": "1959490"
  },
  {
    "text": "way we do this is I'll have to go find my manifest TV credentials",
    "start": "1959490",
    "end": "1970039"
  },
  {
    "text": "is by giving you an ability to",
    "start": "1972550",
    "end": "1977730"
  },
  {
    "text": "my secrets manifest okay here we go",
    "start": "1982330",
    "end": "1991990"
  },
  {
    "text": "okay secret template here so this is the the manifest that we're using and this",
    "start": "1991990",
    "end": "1998390"
  },
  {
    "text": "is what would get checked into github we can see now we've got our Oracle database username and password the name",
    "start": "1998390",
    "end": "2004780"
  },
  {
    "text": "of the secret here and we've got this annotation here basically this is a yamo array and it looks kind of like that",
    "start": "2004780",
    "end": "2011800"
  },
  {
    "text": "secrets to gamify lists that summon use so that the idea is very similar when",
    "start": "2011800",
    "end": "2016840"
  },
  {
    "text": "the secrets provider container so there's the secrets provider container is an init container that will do the",
    "start": "2016840",
    "end": "2023500"
  },
  {
    "text": "authentication do that initial authentication in order to retrieve secrets but it will have a directive to",
    "start": "2023500",
    "end": "2029410"
  },
  {
    "text": "this credential to this secrets miss cribben any secret and it will look for",
    "start": "2029410",
    "end": "2035800"
  },
  {
    "text": "this annotation iterate over this and retrieve the value of this secret and patch the criminate a secret with a",
    "start": "2035800",
    "end": "2044260"
  },
  {
    "text": "basics before encoded value of that username and that password so if I go up",
    "start": "2044260",
    "end": "2050138"
  },
  {
    "text": "to to my environment here and and now you know this this is a great use case",
    "start": "2050139",
    "end": "2055990"
  },
  {
    "text": "for the unit container pattern because it's going to instantiate that kubernetes secret and then exit the",
    "start": "2055990",
    "end": "2061690"
  },
  {
    "text": "application has access to the kubernetes secrets just like native could win any secrets but they're dynamically",
    "start": "2061690",
    "end": "2067929"
  },
  {
    "text": "instantiated when that pod exits or when you delete that appointment then those secrets are so so the point is we're",
    "start": "2067929",
    "end": "2075370"
  },
  {
    "text": "never checking in base64-encoded secrets this value here the name of the database",
    "start": "2075370",
    "end": "2081480"
  },
  {
    "text": "is not a secret presumably if it were we could also store it as a secret but but",
    "start": "2081480",
    "end": "2086888"
  },
  {
    "text": "in this case we're just saying that's not a secret it's really those those access credentials so I'm going to exec",
    "start": "2086889",
    "end": "2092320"
  },
  {
    "text": "into my injector yep and so and I can",
    "start": "2092320",
    "end": "2100750"
  },
  {
    "text": "walk through the manifest if anybody wants to see how this is done but basically I have mounted these the",
    "start": "2100750",
    "end": "2107500"
  },
  {
    "text": "kubernetes secrets as both actually let me do this let me do a cute cuddly edit",
    "start": "2107500",
    "end": "2114120"
  },
  {
    "text": "secret TV credentials this this will I",
    "start": "2114120",
    "end": "2119670"
  },
  {
    "text": "shouldn't test apps this will just kind of show you the effect so so remember",
    "start": "2119670",
    "end": "2124690"
  },
  {
    "text": "our manifest the username and password that there here here is our map down here as an annotation but now we've got",
    "start": "2124690",
    "end": "2132880"
  },
  {
    "text": "the username and password here as base64 encoded values if I take that and echo",
    "start": "2132880",
    "end": "2140920"
  },
  {
    "text": "it and pipe it to base64 decode then and",
    "start": "2140920",
    "end": "2148210"
  },
  {
    "text": "let me just add a here to get a line feed in there I've got my username back so so that was my basics before encoded",
    "start": "2148210",
    "end": "2155890"
  },
  {
    "text": "username but it was dynamically patched that that secret didn't exist it existed",
    "start": "2155890",
    "end": "2161830"
  },
  {
    "text": "only as initially as the value without the base64 encoded values the secrets",
    "start": "2161830",
    "end": "2168100"
  },
  {
    "text": "provider iterated over that contra map and instantiated those so when I go into my environment now they can be mounted",
    "start": "2168100",
    "end": "2175510"
  },
  {
    "text": "as either environment variables or as as volumes so if I do an EMV grep for",
    "start": "2175510",
    "end": "2183750"
  },
  {
    "text": "username actually I'm a Thomas as for",
    "start": "2183750",
    "end": "2189100"
  },
  {
    "text": "consistency I think grab for DB so there's my Oracle DBA username and password mounted as environment",
    "start": "2189100",
    "end": "2195190"
  },
  {
    "text": "variables with the same environment variables that we've been using in the other examples but they're also mounted",
    "start": "2195190",
    "end": "2200560"
  },
  {
    "text": "as as volumes and we would always recommend mounting of us volumes environment variables are much easier to",
    "start": "2200560",
    "end": "2206470"
  },
  {
    "text": "discover from outside so it's it's something that we would always recommend",
    "start": "2206470",
    "end": "2212350"
  },
  {
    "text": "that you you mount them as files and access them as files and that's",
    "start": "2212350",
    "end": "2219100"
  },
  {
    "text": "basically what this this example does for C where did I guess I don't have a",
    "start": "2219100",
    "end": "2230500"
  },
  {
    "text": "great example here",
    "start": "2230500",
    "end": "2233610"
  },
  {
    "text": "oh yeah so my web apps summon now so that's the simple application from that",
    "start": "2237300",
    "end": "2242490"
  },
  {
    "text": "simply uses those environment variables can simply run but now we're using secrets we don't have to use summon to",
    "start": "2242490",
    "end": "2248760"
  },
  {
    "text": "retrieve it we don't have to bake summon into the application image we can simply use that and in another demo I've got a",
    "start": "2248760",
    "end": "2255900"
  },
  {
    "text": "one that actually reads the file and uses the file versions but in this case these environment variables are",
    "start": "2255900",
    "end": "2262020"
  },
  {
    "text": "populated by mounting them from that community secret so this really gets at this this aspect of it we're dynamically",
    "start": "2262020",
    "end": "2269300"
  },
  {
    "text": "binding values retrieved from from conjurer into those criminals sequence patching the security of these secrets",
    "start": "2269300",
    "end": "2275550"
  },
  {
    "text": "the applications perspective it's just a kubernetes secret if you can be used as a criminally secret and then when that",
    "start": "2275550",
    "end": "2282030"
  },
  {
    "text": "pod exits and you delete that combination secret then it's gone the",
    "start": "2282030",
    "end": "2287040"
  },
  {
    "text": "real point is nothing's being checked into into ghetto there's no secrets being checked ending it up in any form",
    "start": "2287040",
    "end": "2293070"
  },
  {
    "text": "whether plain text or in base64 encoding these other issues remain so you know",
    "start": "2293070",
    "end": "2298980"
  },
  {
    "text": "this is this is just good discipline and setting up your your cluster this is just good security discipline but let's",
    "start": "2298980",
    "end": "2307020"
  },
  {
    "text": "talk about these couple of things because we use this example here you",
    "start": "2307020",
    "end": "2312900"
  },
  {
    "text": "know you can vault things in storage you can ball thing you can encrypt things on the wire but as soon as the application",
    "start": "2312900",
    "end": "2318600"
  },
  {
    "text": "gets that plaintext secret you really don't know what it's going to do with it and so we see this as a general issue",
    "start": "2318600",
    "end": "2325740"
  },
  {
    "text": "our best all our efforts may be for not if the application is irresponsible and",
    "start": "2325740",
    "end": "2332130"
  },
  {
    "text": "so what we have devised is a solution",
    "start": "2332130",
    "end": "2337350"
  },
  {
    "text": "called secret las' it's basically using a proxy connection so that the",
    "start": "2337350",
    "end": "2343170"
  },
  {
    "text": "application never gets the secret the application wants a connection to the database or wants a connection to a web",
    "start": "2343170",
    "end": "2348570"
  },
  {
    "text": "service or it needs to run a script on a remote server over SSH well we want to",
    "start": "2348570",
    "end": "2354300"
  },
  {
    "text": "give the application the ability to do that without giving it the keys necessary to do that so we do that with",
    "start": "2354300",
    "end": "2360210"
  },
  {
    "text": "a proxy where the proxy is running as a sidecar and the proxy is the thing that",
    "start": "2360210",
    "end": "2366870"
  },
  {
    "text": "actually retrieves the secret and establish the connection and brokers that connection for the application so the",
    "start": "2366870",
    "end": "2373939"
  },
  {
    "text": "application never gets the secret the application you know it has to do its own authentication for users and things",
    "start": "2373939",
    "end": "2379670"
  },
  {
    "text": "like that but as far as connecting to back-end systems the applications simply get the connection that they're",
    "start": "2379670",
    "end": "2385609"
  },
  {
    "text": "authorized to get and so if they're if the identity that this pod is running as",
    "start": "2385609",
    "end": "2391099"
  },
  {
    "text": "is authorized you know successfully authenticate and is authorized to connect to a database it will get the connection in the",
    "start": "2391099",
    "end": "2397699"
  },
  {
    "text": "database but the application never sees those database credentials they stay within the broker and therefore can't be",
    "start": "2397699",
    "end": "2404779"
  },
  {
    "text": "leaked so no you're still suspect your as we said once your route you can do anything so keeping people off route but",
    "start": "2404779",
    "end": "2411890"
  },
  {
    "text": "barring that then when you've addressed a lot of these issues where the applications don't have access to the",
    "start": "2411890",
    "end": "2419839"
  },
  {
    "text": "secret and can't inadvertently leaked it in a in a potentially irresponsible",
    "start": "2419839",
    "end": "2426709"
  },
  {
    "text": "manner so I'm gonna start up my actually should have done this while I was",
    "start": "2426709",
    "end": "2432589"
  },
  {
    "start": "2428000",
    "end": "2863000"
  },
  {
    "text": "talking I'm gonna start my whole environment here because it deploys multiple back-end systems so the cool",
    "start": "2432589",
    "end": "2439729"
  },
  {
    "text": "thing about secret list is it's multi-protocol it supports HTTP HTTP SSH",
    "start": "2439729",
    "end": "2445449"
  },
  {
    "text": "and then multiple back-end database is a growing list of back in databases so we",
    "start": "2445449",
    "end": "2450829"
  },
  {
    "text": "support post Chris my sequel and sequel server now I'm told Oracle is on its way",
    "start": "2450829",
    "end": "2456410"
  },
  {
    "text": "and you get a lot of questions around that Oracle and sequel server and you know the most deployed databases so what",
    "start": "2456410",
    "end": "2467390"
  },
  {
    "text": "I'm going to do is exact into this so I've set up an environment here where this window is going to be my application so I'm gonna exact into my",
    "start": "2467390",
    "end": "2476380"
  },
  {
    "text": "secret list app",
    "start": "2476380",
    "end": "2479798"
  },
  {
    "text": "well yeah and so we'll do a few things here and in here I've got some",
    "start": "2482940",
    "end": "2489770"
  },
  {
    "text": "predefined connection strings so I can remember because I can never remember",
    "start": "2489770",
    "end": "2495270"
  },
  {
    "text": "the syntax of all these things okay connection strings for HTTP sequel server people Postgres and SSH",
    "start": "2495270",
    "end": "2501420"
  },
  {
    "text": "connections and so what I'm going to do is walk through some of these so this this this window over here on the left",
    "start": "2501420",
    "end": "2508170"
  },
  {
    "text": "is basically my pond this is my application what I'm going to do here is watch the secret let's broker log so",
    "start": "2508170",
    "end": "2516240"
  },
  {
    "text": "this is just the log for that container we can see that it started up listeners on different ports so the way that the",
    "start": "2516240",
    "end": "2522390"
  },
  {
    "text": "broker knows what to connect to is it's Lisi and has service connectors listening in different port 1443 for",
    "start": "2522390",
    "end": "2528990"
  },
  {
    "text": "sequel server 3306 for my sequel 5432 for Postgres 18:1 for HTTP 20 22 22 22",
    "start": "2528990",
    "end": "2536789"
  },
  {
    "text": "for ssh so we've got listeners we've got we've got service connections configured",
    "start": "2536789",
    "end": "2543710"
  },
  {
    "text": "such that when we do this connection we're going to watch the Condor audit",
    "start": "2543710",
    "end": "2553230"
  },
  {
    "text": "log over here we'll see the connector will see the broker authenticate see it",
    "start": "2553230",
    "end": "2559619"
  },
  {
    "text": "retrieved secrets and then what I'm going to do up here this is one of the only ones that really echoes it's it's",
    "start": "2559619",
    "end": "2565740"
  },
  {
    "text": "it's activity my engine X Server I'm gonna just watch the log of my engine X Server so the first one will do is this",
    "start": "2565740",
    "end": "2573319"
  },
  {
    "text": "HTTP connection and I'm just going to say curl I'm just going to paste this in because environment variables don't",
    "start": "2573319",
    "end": "2579240"
  },
  {
    "text": "always work it doesn't work for sequel server so easy so I'm gonna say I'm gonna connect to engine X on 8081 now",
    "start": "2579240",
    "end": "2585720"
  },
  {
    "text": "what's really listening there is a my my broker and so this is basically going",
    "start": "2585720",
    "end": "2593880"
  },
  {
    "text": "through an HTTP proxy for localhost that proxy connection is going to this port",
    "start": "2593880",
    "end": "2599369"
  },
  {
    "text": "where the brokers listening so this happens very quickly so I'm gonna I'm going to talk through it and then I'm",
    "start": "2599369",
    "end": "2605069"
  },
  {
    "text": "going to do it I'm gonna hit return we'll see the the broker wake up and authenticate we'll see it hit conjure to",
    "start": "2605069",
    "end": "2612869"
  },
  {
    "text": "retrieve the secrets for the HTTP connection this is using Agathe this is just using basic off back",
    "start": "2612869",
    "end": "2617969"
  },
  {
    "text": "over here we'll see a hundred message come up here in the engine X log and then we'll see the client echo it's just",
    "start": "2617969",
    "end": "2625499"
  },
  {
    "text": "doing a basic index get on that of that top level entry point and hinge next so",
    "start": "2625499",
    "end": "2631950"
  },
  {
    "text": "so the flow kind of goes like this so it happens quickly so we'll go boink there",
    "start": "2631950",
    "end": "2637200"
  },
  {
    "text": "that happened oh wait I didn't do my",
    "start": "2637200",
    "end": "2644359"
  },
  {
    "text": "life engine X for some reason they do not not seeing",
    "start": "2644380",
    "end": "2652230"
  },
  {
    "text": "engine x over here so we saw successfully authenticate we saw it return the value over here for some",
    "start": "2652230",
    "end": "2658410"
  },
  {
    "text": "reason I'm not tracing engine X engine X log here we saw it authenticate over here we saw",
    "start": "2658410",
    "end": "2663960"
  },
  {
    "text": "it retrieve secrets that it needed to do its work and so this is the workflow",
    "start": "2663960",
    "end": "2674940"
  },
  {
    "text": "that we're looking at to to authenticate dynamically retrieve secrets and then",
    "start": "2674940",
    "end": "2680220"
  },
  {
    "text": "use those secrets to connect to a back-end system now we have other things",
    "start": "2680220",
    "end": "2685500"
  },
  {
    "text": "that we can connect to so let's look at SSH so what I've got here are the",
    "start": "2685500",
    "end": "2690960"
  },
  {
    "text": "credentials the SSH keys to one of my ec2 instances in Amazon in AWS but we",
    "start": "2690960",
    "end": "2702000"
  },
  {
    "text": "can see I'm my connection string is it's going to say foo at localhost this is garbage this is just their butt so that",
    "start": "2702000",
    "end": "2707310"
  },
  {
    "text": "the SSH client works so I'm directing it to port 20 to 22 where the broker is",
    "start": "2707310",
    "end": "2713880"
  },
  {
    "text": "listening that broker is that that is the service connector for SSH so when I",
    "start": "2713880",
    "end": "2719370"
  },
  {
    "text": "hit return here saying am connected to this before you sure you want to connect we saw it hit over here now I'm in AWS",
    "start": "2719370",
    "end": "2727410"
  },
  {
    "text": "so I have connected to AWS without having access to that SSH key the broker",
    "start": "2727410",
    "end": "2732480"
  },
  {
    "text": "had access to it because it retrieved it from conjure it retrieved that SSH key",
    "start": "2732480",
    "end": "2737520"
  },
  {
    "text": "from conjurer and used it to connect to my back in system now I can do stuff up",
    "start": "2737520",
    "end": "2742740"
  },
  {
    "text": "here I can say curl no check to check the status of because this is something",
    "start": "2742740",
    "end": "2748980"
  },
  {
    "text": "I leave running for doing demos up in Amazon no we're in AWS and so there's",
    "start": "2748980",
    "end": "2757350"
  },
  {
    "text": "you know I can check the status of my mitochondria in there so that's that's SH we can do similar things for my",
    "start": "2757350",
    "end": "2764280"
  },
  {
    "text": "sequel so if I look at look at my my sequel connection here here's I've got a",
    "start": "2764280",
    "end": "2770480"
  },
  {
    "text": "test app running over there so I can say my sequel use the mic native my sequel client local host connection but now",
    "start": "2770480",
    "end": "2778290"
  },
  {
    "text": "it's connected to the my sequel database say show databases",
    "start": "2778290",
    "end": "2783710"
  },
  {
    "text": "the databases don't do a really good job of showing you the work their logs aren't very interesting from a",
    "start": "2783710",
    "end": "2789000"
  },
  {
    "text": "connection monitoring standpoint so you have to kind of jump through hoops to make them do that um for the last trick",
    "start": "2789000",
    "end": "2795060"
  },
  {
    "text": "you will just show sequel server because a lot of people are really interested in sequel server what this'll do is just do",
    "start": "2795060",
    "end": "2800430"
  },
  {
    "text": "a real quick sequel Edition so sequel CMD is the client for that paste that when I run",
    "start": "2800430",
    "end": "2807810"
  },
  {
    "text": "that I've got my my sequel server answer here so the if I you know do my occasion",
    "start": "2807810",
    "end": "2816500"
  },
  {
    "text": "in case your p is defined here we look at all the things that are running in",
    "start": "2816500",
    "end": "2822599"
  },
  {
    "text": "here now we can see that there's quite a few or more more pods running in my",
    "start": "2822599",
    "end": "2829710"
  },
  {
    "text": "space here so I've got my Postgres database I've got my pesto app I've got my engine excerpt I got the sequels my",
    "start": "2829710",
    "end": "2836400"
  },
  {
    "text": "sequel server my sequel server then of course the SSH is going through the SSH",
    "start": "2836400",
    "end": "2844109"
  },
  {
    "text": "protocol to to AWS so the point is though in none of these cases did the",
    "start": "2844109",
    "end": "2851490"
  },
  {
    "text": "application in this space get access to those secrets is able to connect at all these back-end systems without using",
    "start": "2851490",
    "end": "2857430"
  },
  {
    "text": "those and if you look at the the way this works this is very similar in fact",
    "start": "2857430",
    "end": "2863460"
  },
  {
    "text": "secret list is and could be very you know very easily positioned as a broker",
    "start": "2863460",
    "end": "2872520"
  },
  {
    "text": "an access control broker for the control plane if you start thinking and service mesh type type situations so hopefully",
    "start": "2872520",
    "end": "2882839"
  },
  {
    "text": "everybody's familiar with the terms control plane and data plane but the control plane basically is where all the complex stuff happens applications we",
    "start": "2882839",
    "end": "2890520"
  },
  {
    "text": "want to stay in the data plane in other words we want them to be working at a business logic level we don't want them",
    "start": "2890520",
    "end": "2897150"
  },
  {
    "text": "directly involved with the mess of running the services and so secrets",
    "start": "2897150",
    "end": "2903810"
  },
  {
    "text": "management kind of kind of has that aspect to it we want to keep applications as blissfully unaware as",
    "start": "2903810",
    "end": "2911190"
  },
  {
    "text": "possible of the mechanics of authentication retrieving secrets of of the effects of secrets rotation we",
    "start": "2911190",
    "end": "2918630"
  },
  {
    "text": "want to actually keep them away from the secrets entirely and secret list gives us the architecture for doing that and",
    "start": "2918630",
    "end": "2924689"
  },
  {
    "text": "so it is it is that proxy for the control plane that applications can avail themselves of and it also gives us",
    "start": "2924689",
    "end": "2931559"
  },
  {
    "text": "a point where we could put telemetry on that we could start monitoring how applications are consuming secrets and",
    "start": "2931559",
    "end": "2938789"
  },
  {
    "text": "that then starts informing a lot of the workflows that security can do in terms of reacting to anomalous situations and",
    "start": "2938789",
    "end": "2946259"
  },
  {
    "text": "and other you know sort of forward-looking type things so this is you know a very much a work in progress",
    "start": "2946259",
    "end": "2952859"
  },
  {
    "text": "but secret list is a big part of the open source initiative that cyber arc is",
    "start": "2952859",
    "end": "2959819"
  },
  {
    "text": "sponsoring around Condor it's all here under secret list pattern so I'm going to fundamentals you can see how it works",
    "start": "2959819",
    "end": "2965999"
  },
  {
    "text": "you can see there currently support its service connectors most of which I exercised here so we see our HTTP our",
    "start": "2965999",
    "end": "2973920"
  },
  {
    "text": "database connectors our ssh connector etc it also has an sdk which is very",
    "start": "2973920",
    "end": "2981539"
  },
  {
    "text": "cool if you know for some reason you have a back-end system we get questions about things like MongoDB and other",
    "start": "2981539",
    "end": "2987059"
  },
  {
    "text": "things you can build your own and that's the beauty of open source is we've given you all the tools to build your own so I",
    "start": "2987059",
    "end": "2995609"
  },
  {
    "text": "think we're just about running out of time I spent most of it talking so",
    "start": "2995609",
    "end": "3000769"
  },
  {
    "text": "Christie let me let me shut up and just see if there were any questions posed in the short time we had left",
    "start": "3000769",
    "end": "3006279"
  },
  {
    "text": "yeah thanks Jody for a great presentation um so we have a question",
    "start": "3006279",
    "end": "3011839"
  },
  {
    "text": "here it says it seems like that it seems that security breach is just unavoidable",
    "start": "3011839",
    "end": "3018709"
  },
  {
    "start": "3013000",
    "end": "3318000"
  },
  {
    "text": "in a sense I'm just curious if there is a way to track down the offender for",
    "start": "3018709",
    "end": "3024140"
  },
  {
    "text": "example source IP of the offender or is that just a bit being too simplistic no",
    "start": "3024140",
    "end": "3030890"
  },
  {
    "text": "that's exactly the idea and and you're exactly right you have to assume that a breach is going to happen and so risk is",
    "start": "3030890",
    "end": "3038869"
  },
  {
    "text": "often defined as probability times impact and so you can and you can focus",
    "start": "3038869",
    "end": "3045589"
  },
  {
    "text": "on those two separately so how do you reduce the probability that something is going to happen well you limit access that's good segregation of",
    "start": "3045589",
    "end": "3052130"
  },
  {
    "text": "duties but the impact is also part of that because the fewer secrets a an",
    "start": "3052130",
    "end": "3058880"
  },
  {
    "text": "application has access to the the smaller the blast radius as we call it so segregation of duty is is something",
    "start": "3058880",
    "end": "3065870"
  },
  {
    "text": "that you hear about a lot being able to very precisely define the credentials",
    "start": "3065870",
    "end": "3074090"
  },
  {
    "text": "that something has access to now in terms of identifying an offender that's where your audit logs come in but in",
    "start": "3074090",
    "end": "3080960"
  },
  {
    "text": "many ways audit logs are our backward-looking in other words they record what happened but they don't give",
    "start": "3080960",
    "end": "3087380"
  },
  {
    "text": "you that proactive ability to do something about it and that's what I think is exciting about secret list is",
    "start": "3087380",
    "end": "3094340"
  },
  {
    "text": "that it does give you that monitoring point where you could if you wanted to",
    "start": "3094340",
    "end": "3099890"
  },
  {
    "text": "and of course there'd be some overhead in this but you could monitor the the actual real-time usage of secrets and",
    "start": "3099890",
    "end": "3106240"
  },
  {
    "text": "see if things were happening in a much more immediate fashion but your audit",
    "start": "3106240",
    "end": "3112580"
  },
  {
    "text": "logs and and in you know we keep audit logs non-repudiation you want you want",
    "start": "3112580",
    "end": "3118100"
  },
  {
    "text": "to be able to prove something did or did not happen and you want to say if something happened no what was the",
    "start": "3118100",
    "end": "3125360"
  },
  {
    "text": "identity responsible for now that identity you know may move around so an",
    "start": "3125360",
    "end": "3131360"
  },
  {
    "text": "IP address may or may not be useful in that context but fundamentally it comes down to what was the identity in",
    "start": "3131360",
    "end": "3137780"
  },
  {
    "text": "question when when we're looking in doing that kind of sort of forensic analysis that's a great question awesome",
    "start": "3137780",
    "end": "3146150"
  },
  {
    "text": "looks like we just had a question come in through the chat and is it common to",
    "start": "3146150",
    "end": "3151160"
  },
  {
    "text": "adopt multiple strategies for secrets management within a single cluster yeah",
    "start": "3151160",
    "end": "3158750"
  },
  {
    "text": "well I don't know if it's common but I would say yes because developers like to do what developers like to do so you",
    "start": "3158750",
    "end": "3165500"
  },
  {
    "text": "know it really I think that comes down to culture and and and coding standards",
    "start": "3165500",
    "end": "3171050"
  },
  {
    "text": "and things like that I don't think there's necessarily anything wrong with it but the more variation that you have",
    "start": "3171050",
    "end": "3177170"
  },
  {
    "text": "obviously the more variation you have so it's it's",
    "start": "3177170",
    "end": "3183010"
  },
  {
    "text": "it's striking that balance between you know being you know mandating a certain",
    "start": "3183010",
    "end": "3188200"
  },
  {
    "text": "coding standard and say everybody will will right this way versus maybe finding that happy medium will say well these",
    "start": "3188200",
    "end": "3193990"
  },
  {
    "text": "three ways are acceptable but this other way is is there's too much risk",
    "start": "3193990",
    "end": "3199930"
  },
  {
    "text": "associated with it so there's no no one right answer that's that's the exciting",
    "start": "3199930",
    "end": "3206740"
  },
  {
    "text": "thing about my job there every every customer we talk to in fact every coding team practically is a little bit",
    "start": "3206740",
    "end": "3212950"
  },
  {
    "text": "different and understanding those differences and then kind of meeting them halfway and providing a solution",
    "start": "3212950",
    "end": "3218140"
  },
  {
    "text": "that works for them is is a big part of my role grades okay well we're just",
    "start": "3218140",
    "end": "3227110"
  },
  {
    "text": "about at the top of the hour here um Jody where can people find more information about some of the things",
    "start": "3227110",
    "end": "3233590"
  },
  {
    "text": "that you talked about today the conscious solution is in the Google",
    "start": "3233590",
    "end": "3241240"
  },
  {
    "text": "marketplace but you can always go to Congress or guy was I was showing a lot of the content that's at condor org",
    "start": "3241240",
    "end": "3247890"
  },
  {
    "text": "there is community based support for the country open source solution as well as",
    "start": "3247890",
    "end": "3254320"
  },
  {
    "text": "for summon and in secret list you can go to discuss sarcomas org and and see some",
    "start": "3254320",
    "end": "3262360"
  },
  {
    "text": "of the back and forth there we do regular workshops we do regular DevOps",
    "start": "3262360",
    "end": "3268030"
  },
  {
    "text": "workshops just kind of walk you through how to secure jenkins workflows and pipelines as well as kubernetes examples",
    "start": "3268030",
    "end": "3274890"
  },
  {
    "text": "the secret sauce broker we saw a good bit off today as well as summon so lots",
    "start": "3274890",
    "end": "3281170"
  },
  {
    "text": "of places to go lots of content conjure or for you to consume and Christy I know",
    "start": "3281170",
    "end": "3286510"
  },
  {
    "text": "you're going to make this presentation available so there's that resource as well yeah awesome well thank you again",
    "start": "3286510",
    "end": "3294910"
  },
  {
    "text": "Jody so much for this great presentation I'd like to thank everybody who joined us today and this is again a great great",
    "start": "3294910",
    "end": "3302110"
  },
  {
    "text": "presentation as Jodi mentioned the recording and the slides will be posted later today to the CN CF webinars page",
    "start": "3302110",
    "end": "3308500"
  },
  {
    "text": "we look forward to seeing you at a future CN CF webinar have a great day everyone",
    "start": "3308500",
    "end": "3313780"
  },
  {
    "text": "Thanks you",
    "start": "3313780",
    "end": "3318119"
  }
]