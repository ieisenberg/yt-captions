[
  {
    "text": "just welcome my colleague shivanshu he's",
    "start": "179",
    "end": "3840"
  },
  {
    "text": "from territory and he's from from India",
    "start": "3840",
    "end": "7919"
  },
  {
    "text": "he's from India and",
    "start": "7919",
    "end": "10920"
  },
  {
    "text": "let's get started",
    "start": "10920",
    "end": "12860"
  },
  {
    "text": "hello everyone",
    "start": "12860",
    "end": "14700"
  },
  {
    "text": "[Applause]",
    "start": "14700",
    "end": "17520"
  },
  {
    "text": "good morning and welcome to the session",
    "start": "17520",
    "end": "19980"
  },
  {
    "text": "so",
    "start": "19980",
    "end": "21119"
  },
  {
    "text": "today I will be covering about how to",
    "start": "21119",
    "end": "23400"
  },
  {
    "text": "extend and customize istio using version",
    "start": "23400",
    "end": "25859"
  },
  {
    "text": "plugins so yeah let's get started",
    "start": "25859",
    "end": "29760"
  },
  {
    "text": "so we'll have a basic introduction of",
    "start": "29760",
    "end": "33059"
  },
  {
    "text": "how version plugin Works in istio and",
    "start": "33059",
    "end": "35579"
  },
  {
    "text": "then we'll see the internals of awesome",
    "start": "35579",
    "end": "38520"
  },
  {
    "text": "plugins how they interact with the NY",
    "start": "38520",
    "end": "41120"
  },
  {
    "text": "this is required so that we can create",
    "start": "41120",
    "end": "43739"
  },
  {
    "text": "uh",
    "start": "43739",
    "end": "45600"
  },
  {
    "text": "Advanced use cases like dynamically",
    "start": "45600",
    "end": "47940"
  },
  {
    "text": "debug request on the Fly",
    "start": "47940",
    "end": "49800"
  },
  {
    "text": "Implement application Firefall use cases",
    "start": "49800",
    "end": "52200"
  },
  {
    "text": "in NY using sqo",
    "start": "52200",
    "end": "55079"
  },
  {
    "text": "uh enforcing Network policies",
    "start": "55079",
    "end": "58020"
  },
  {
    "text": "and some Advanced routing features that",
    "start": "58020",
    "end": "60539"
  },
  {
    "text": "we can have in NY using the water",
    "start": "60539",
    "end": "63120"
  },
  {
    "text": "plugins and we'll have a short demo",
    "start": "63120",
    "end": "65840"
  },
  {
    "text": "to see things in action",
    "start": "65840",
    "end": "68939"
  },
  {
    "text": "so first of all what are wasn't plugins",
    "start": "68939",
    "end": "72540"
  },
  {
    "text": "um so if you go by the definition",
    "start": "72540",
    "end": "73860"
  },
  {
    "text": "they're they're like they provide a",
    "start": "73860",
    "end": "76080"
  },
  {
    "text": "mechanism to extend the functionalities",
    "start": "76080",
    "end": "78840"
  },
  {
    "text": "of NY uh in our case it's still proxy",
    "start": "78840",
    "end": "82740"
  },
  {
    "text": "through webassembly filters",
    "start": "82740",
    "end": "84840"
  },
  {
    "text": "and uh so how exactly it's done let's uh",
    "start": "84840",
    "end": "88619"
  },
  {
    "text": "we need to understand the high level",
    "start": "88619",
    "end": "90119"
  },
  {
    "text": "architecture of NY so we have listeners",
    "start": "90119",
    "end": "92759"
  },
  {
    "text": "filters routes clusters alignment points",
    "start": "92759",
    "end": "95939"
  },
  {
    "text": "what wasn't plugins do they they add a",
    "start": "95939",
    "end": "99000"
  },
  {
    "text": "new filter in the filter chain",
    "start": "99000",
    "end": "101360"
  },
  {
    "text": "so for example if I have multiple",
    "start": "101360",
    "end": "104640"
  },
  {
    "text": "filters in my NY I can extend a new",
    "start": "104640",
    "end": "109500"
  },
  {
    "text": "filter using Amazon plugin and create a",
    "start": "109500",
    "end": "111960"
  },
  {
    "text": "new filter so under the hood what",
    "start": "111960",
    "end": "114000"
  },
  {
    "text": "happens is uh",
    "start": "114000",
    "end": "115380"
  },
  {
    "text": "using NY native apis uh",
    "start": "115380",
    "end": "118320"
  },
  {
    "text": "I create a new version plugin that",
    "start": "118320",
    "end": "120840"
  },
  {
    "text": "wasn't plugin is interacting with the",
    "start": "120840",
    "end": "122579"
  },
  {
    "text": "wasm runtime which is embedded in NY and",
    "start": "122579",
    "end": "125399"
  },
  {
    "text": "it's creating a new filter",
    "start": "125399",
    "end": "127140"
  },
  {
    "text": "but more fundamentally there are",
    "start": "127140",
    "end": "129060"
  },
  {
    "text": "multiple ways to create filters so there",
    "start": "129060",
    "end": "131879"
  },
  {
    "text": "are three types on High level through",
    "start": "131879",
    "end": "134160"
  },
  {
    "text": "which we can create filters in Android",
    "start": "134160",
    "end": "136379"
  },
  {
    "text": "One is using native C plus plus filters",
    "start": "136379",
    "end": "139560"
  },
  {
    "text": "in that what we do we create a enough",
    "start": "139560",
    "end": "143340"
  },
  {
    "text": "work of NY we just write our filters in",
    "start": "143340",
    "end": "146160"
  },
  {
    "text": "the native C plus plus and then",
    "start": "146160",
    "end": "147900"
  },
  {
    "text": "recompile NY and use that new NY binary",
    "start": "147900",
    "end": "151920"
  },
  {
    "text": "you know and create S2 proxy out of it",
    "start": "151920",
    "end": "154319"
  },
  {
    "text": "but this is hard another way that we can",
    "start": "154319",
    "end": "157200"
  },
  {
    "text": "do is we can create a UI Scripts and",
    "start": "157200",
    "end": "160560"
  },
  {
    "text": "this is this is nice we can have our",
    "start": "160560",
    "end": "163019"
  },
  {
    "text": "lower script doing the function but the",
    "start": "163019",
    "end": "165420"
  },
  {
    "text": "problem is we need to write the Lua code",
    "start": "165420",
    "end": "167340"
  },
  {
    "text": "and it's a bit hard to maintain",
    "start": "167340",
    "end": "169500"
  },
  {
    "text": "so this is how a lower script would look",
    "start": "169500",
    "end": "171959"
  },
  {
    "text": "like I would have we need to define the",
    "start": "171959",
    "end": "175200"
  },
  {
    "text": "complete source code in the in the Yaman",
    "start": "175200",
    "end": "177780"
  },
  {
    "text": "itself this is like a high level how it",
    "start": "177780",
    "end": "180060"
  },
  {
    "text": "looks like",
    "start": "180060",
    "end": "181500"
  },
  {
    "text": "and",
    "start": "181500",
    "end": "183660"
  },
  {
    "text": "the other method which is quite simpler",
    "start": "183660",
    "end": "186540"
  },
  {
    "text": "is creating a new version extension in",
    "start": "186540",
    "end": "189239"
  },
  {
    "text": "that we need to program whatever",
    "start": "189239",
    "end": "191819"
  },
  {
    "text": "functionality that we want using the",
    "start": "191819",
    "end": "193980"
  },
  {
    "text": "wasm native apis from the Android and",
    "start": "193980",
    "end": "198300"
  },
  {
    "text": "then using uh whatever language you want",
    "start": "198300",
    "end": "201420"
  },
  {
    "text": "to use maybe go or or C plus plus you",
    "start": "201420",
    "end": "204420"
  },
  {
    "text": "can create the awesome extension and can",
    "start": "204420",
    "end": "206040"
  },
  {
    "text": "create a awesome plugin out of it",
    "start": "206040",
    "end": "209099"
  },
  {
    "text": "so this is how a version plugin industry",
    "start": "209099",
    "end": "211260"
  },
  {
    "text": "looks like you need to Define",
    "start": "211260",
    "end": "213659"
  },
  {
    "text": "the VM configs plugin configs and the",
    "start": "213659",
    "end": "217319"
  },
  {
    "text": "URL of your version plugin it could be",
    "start": "217319",
    "end": "219120"
  },
  {
    "text": "an oci image or you can directly Define",
    "start": "219120",
    "end": "222060"
  },
  {
    "text": "the version model path",
    "start": "222060",
    "end": "225620"
  },
  {
    "text": "so basically these three methods we can",
    "start": "226080",
    "end": "228540"
  },
  {
    "text": "use to create the version plugin and",
    "start": "228540",
    "end": "230580"
  },
  {
    "text": "we'll be talking about how to use",
    "start": "230580",
    "end": "231720"
  },
  {
    "text": "version extensions to achieve",
    "start": "231720",
    "end": "234360"
  },
  {
    "text": "Advanced routing features and network",
    "start": "234360",
    "end": "236040"
  },
  {
    "text": "policies",
    "start": "236040",
    "end": "237599"
  },
  {
    "text": "so how it works",
    "start": "237599",
    "end": "239760"
  },
  {
    "text": "so we'll see internally what is",
    "start": "239760",
    "end": "242340"
  },
  {
    "text": "happening when we are creating this",
    "start": "242340",
    "end": "244200"
  },
  {
    "text": "filters using was implicants in noi",
    "start": "244200",
    "end": "247440"
  },
  {
    "text": "so fundamentally we are using NYS NY",
    "start": "247440",
    "end": "251360"
  },
  {
    "text": "apis and creating a volume extensions",
    "start": "251360",
    "end": "254900"
  },
  {
    "text": "using extensions.wazum API available in",
    "start": "254900",
    "end": "258900"
  },
  {
    "text": "Android and by default NY uses a V8 as a",
    "start": "258900",
    "end": "262680"
  },
  {
    "text": "virtual machine to create the quasim",
    "start": "262680",
    "end": "265560"
  },
  {
    "text": "runtime environment for you",
    "start": "265560",
    "end": "267720"
  },
  {
    "text": "you can change the volume runtime",
    "start": "267720",
    "end": "271400"
  },
  {
    "text": "of your choice by default it's V8 but we",
    "start": "271400",
    "end": "275220"
  },
  {
    "text": "can use V8 VMR",
    "start": "275220",
    "end": "277500"
  },
  {
    "text": "webm and awesome time which are",
    "start": "277500",
    "end": "279600"
  },
  {
    "text": "available in NY and then we can",
    "start": "279600",
    "end": "281540"
  },
  {
    "text": "recompile NY and istio to create a",
    "start": "281540",
    "end": "284759"
  },
  {
    "text": "volume to create a new SD proxy based on",
    "start": "284759",
    "end": "289020"
  },
  {
    "text": "your volume time runtime",
    "start": "289020",
    "end": "291780"
  },
  {
    "text": "but by default it's weird so we'll be",
    "start": "291780",
    "end": "293400"
  },
  {
    "text": "talking about weird",
    "start": "293400",
    "end": "295259"
  },
  {
    "text": "and NY operates on a multi-thread Model",
    "start": "295259",
    "end": "298080"
  },
  {
    "text": "what does it mean is uh the main thread",
    "start": "298080",
    "end": "301259"
  },
  {
    "text": "is taking the responsibility of running",
    "start": "301259",
    "end": "303419"
  },
  {
    "text": "all the global tasks and",
    "start": "303419",
    "end": "306660"
  },
  {
    "text": "in the in the individual threads uh it",
    "start": "306660",
    "end": "309120"
  },
  {
    "text": "creates the individual volume",
    "start": "309120",
    "end": "312259"
  },
  {
    "text": "was a VM which is running for every",
    "start": "312259",
    "end": "315600"
  },
  {
    "text": "request so for example if there are",
    "start": "315600",
    "end": "317400"
  },
  {
    "text": "multiple s2e streams there will be",
    "start": "317400",
    "end": "319620"
  },
  {
    "text": "multiple worker threads and then there",
    "start": "319620",
    "end": "321300"
  },
  {
    "text": "will be multiple wasm VMS created and",
    "start": "321300",
    "end": "325320"
  },
  {
    "text": "those are separate VMS they have their",
    "start": "325320",
    "end": "327660"
  },
  {
    "text": "separate user space and everything",
    "start": "327660",
    "end": "330479"
  },
  {
    "text": "um but if we want we can have a single",
    "start": "330479",
    "end": "332940"
  },
  {
    "text": "VM which is serving multiple requests",
    "start": "332940",
    "end": "336240"
  },
  {
    "text": "and that is required for if you want to",
    "start": "336240",
    "end": "338580"
  },
  {
    "text": "share context between different uh",
    "start": "338580",
    "end": "342000"
  },
  {
    "text": "requests so for example you want to",
    "start": "342000",
    "end": "344039"
  },
  {
    "text": "share so for for an incoming request you",
    "start": "344039",
    "end": "347039"
  },
  {
    "text": "want to share something that with",
    "start": "347039",
    "end": "348240"
  },
  {
    "text": "another request you may want to use the",
    "start": "348240",
    "end": "351120"
  },
  {
    "text": "concept called share data in that what",
    "start": "351120",
    "end": "353940"
  },
  {
    "text": "you want to do is so for example in this",
    "start": "353940",
    "end": "356160"
  },
  {
    "text": "uh first VM which is it has VM ID Foo",
    "start": "356160",
    "end": "360660"
  },
  {
    "text": "and was a model is hello.wasm and in",
    "start": "360660",
    "end": "363900"
  },
  {
    "text": "another VM we have uh VM ID Foo again",
    "start": "363900",
    "end": "366900"
  },
  {
    "text": "this is the same VM ideas of hello.wasm",
    "start": "366900",
    "end": "370560"
  },
  {
    "text": "and it's by dot wasm so the idea is too",
    "start": "370560",
    "end": "374340"
  },
  {
    "text": "I want to share the context between",
    "start": "374340",
    "end": "376800"
  },
  {
    "text": "these two different requests and these",
    "start": "376800",
    "end": "379440"
  },
  {
    "text": "two different VMS I can do that by",
    "start": "379440",
    "end": "382440"
  },
  {
    "text": "having a shared data and the shared data",
    "start": "382440",
    "end": "385860"
  },
  {
    "text": "is uh",
    "start": "385860",
    "end": "387720"
  },
  {
    "text": "like it it knows because the VM ID is",
    "start": "387720",
    "end": "390660"
  },
  {
    "text": "common in between uh this two different",
    "start": "390660",
    "end": "393240"
  },
  {
    "text": "VMS and these two different uh",
    "start": "393240",
    "end": "396180"
  },
  {
    "text": "VMS running for different threads",
    "start": "396180",
    "end": "398819"
  },
  {
    "text": "and using the shared data I can share",
    "start": "398819",
    "end": "400800"
  },
  {
    "text": "the context between this two different",
    "start": "400800",
    "end": "402660"
  },
  {
    "text": "VMS and that's useful if you want to",
    "start": "402660",
    "end": "405180"
  },
  {
    "text": "have uh like complex routing schemes",
    "start": "405180",
    "end": "407460"
  },
  {
    "text": "which we'll talk about in a moment",
    "start": "407460",
    "end": "410880"
  },
  {
    "text": "so let's talk about uh some",
    "start": "410880",
    "end": "413759"
  },
  {
    "text": "use cases one use case could be you want",
    "start": "413759",
    "end": "416819"
  },
  {
    "text": "to dynamically debug your request on the",
    "start": "416819",
    "end": "419280"
  },
  {
    "text": "Fly",
    "start": "419280",
    "end": "420960"
  },
  {
    "text": "so in that case if you are",
    "start": "420960",
    "end": "423419"
  },
  {
    "text": "debugging you want you you may want to",
    "start": "423419",
    "end": "425819"
  },
  {
    "text": "see some STP headers what are the",
    "start": "425819",
    "end": "428100"
  },
  {
    "text": "headers in your request in the the given",
    "start": "428100",
    "end": "430440"
  },
  {
    "text": "moment",
    "start": "430440",
    "end": "431460"
  },
  {
    "text": "maybe the S3 body the remote address uh",
    "start": "431460",
    "end": "435240"
  },
  {
    "text": "header injection and",
    "start": "435240",
    "end": "436800"
  },
  {
    "text": "you may want to inject some header in",
    "start": "436800",
    "end": "438900"
  },
  {
    "text": "the request itself or maybe in the",
    "start": "438900",
    "end": "440460"
  },
  {
    "text": "response basically you are doing header",
    "start": "440460",
    "end": "442080"
  },
  {
    "text": "manipulation",
    "start": "442080",
    "end": "443160"
  },
  {
    "text": "and if you want to do header propagation",
    "start": "443160",
    "end": "445740"
  },
  {
    "text": "in that case you may want to use uh",
    "start": "445740",
    "end": "448500"
  },
  {
    "text": "something like this so in the header",
    "start": "448500",
    "end": "450419"
  },
  {
    "text": "propagation the idea is without",
    "start": "450419",
    "end": "452039"
  },
  {
    "text": "instrumentation you are propagating the",
    "start": "452039",
    "end": "454139"
  },
  {
    "text": "header from the inbound to the outbound",
    "start": "454139",
    "end": "456539"
  },
  {
    "text": "request so if the application is",
    "start": "456539",
    "end": "458520"
  },
  {
    "text": "instrumented uh the header can be",
    "start": "458520",
    "end": "461699"
  },
  {
    "text": "propagated easily but if the application",
    "start": "461699",
    "end": "463800"
  },
  {
    "text": "is not instrumented in that case what",
    "start": "463800",
    "end": "465599"
  },
  {
    "text": "you want to do is you want to create two",
    "start": "465599",
    "end": "468000"
  },
  {
    "text": "different threads uh two different VMS",
    "start": "468000",
    "end": "470940"
  },
  {
    "text": "sharing the same VM ID and then using",
    "start": "470940",
    "end": "474120"
  },
  {
    "text": "the shared data what you can do is uh",
    "start": "474120",
    "end": "477660"
  },
  {
    "text": "you can save that particular header in",
    "start": "477660",
    "end": "481199"
  },
  {
    "text": "the shared data and then use that",
    "start": "481199",
    "end": "482940"
  },
  {
    "text": "information based on the request ID to",
    "start": "482940",
    "end": "485160"
  },
  {
    "text": "propagate the header but it's it but",
    "start": "485160",
    "end": "487620"
  },
  {
    "text": "there are issues in the scale but for a",
    "start": "487620",
    "end": "490020"
  },
  {
    "text": "small scale it may work",
    "start": "490020",
    "end": "492780"
  },
  {
    "text": "so that's why there's a star this is in",
    "start": "492780",
    "end": "495780"
  },
  {
    "text": "theory it's it's possible but uh wire",
    "start": "495780",
    "end": "497940"
  },
  {
    "text": "shared key value uh store there are",
    "start": "497940",
    "end": "500400"
  },
  {
    "text": "multiple caveats involved and which",
    "start": "500400",
    "end": "502080"
  },
  {
    "text": "needs to be taken care of in the",
    "start": "502080",
    "end": "504360"
  },
  {
    "text": "production",
    "start": "504360",
    "end": "505500"
  },
  {
    "text": "so let's talk about some of the use",
    "start": "505500",
    "end": "508379"
  },
  {
    "text": "cases so one use case could be you want",
    "start": "508379",
    "end": "510840"
  },
  {
    "text": "to have a Waf application firewall in",
    "start": "510840",
    "end": "513779"
  },
  {
    "text": "your uh infrastructure and",
    "start": "513779",
    "end": "517500"
  },
  {
    "text": "so the one of the most famous is owass",
    "start": "517500",
    "end": "520200"
  },
  {
    "text": "core rule set",
    "start": "520200",
    "end": "521940"
  },
  {
    "text": "um",
    "start": "521940",
    "end": "522779"
  },
  {
    "text": "so basically what it does is you can",
    "start": "522779",
    "end": "524640"
  },
  {
    "text": "have SQL injection threat protection",
    "start": "524640",
    "end": "527459"
  },
  {
    "text": "against SQL injection cross side",
    "start": "527459",
    "end": "529680"
  },
  {
    "text": "scraping and multiple others uh attacks",
    "start": "529680",
    "end": "534180"
  },
  {
    "text": "some common attacks so to mitigate all",
    "start": "534180",
    "end": "537540"
  },
  {
    "text": "this attacks you can have a Waf",
    "start": "537540",
    "end": "540420"
  },
  {
    "text": "implementation and one way to do it uh",
    "start": "540420",
    "end": "543180"
  },
  {
    "text": "using implementing your own version",
    "start": "543180",
    "end": "545160"
  },
  {
    "text": "plugin which is extending uh",
    "start": "545160",
    "end": "548820"
  },
  {
    "text": "NY apis and then you are programming",
    "start": "548820",
    "end": "551700"
  },
  {
    "text": "your own firewall",
    "start": "551700",
    "end": "554760"
  },
  {
    "text": "another way is to",
    "start": "554760",
    "end": "557300"
  },
  {
    "text": "like you can use some open source",
    "start": "557300",
    "end": "559740"
  },
  {
    "text": "projects so for example",
    "start": "559740",
    "end": "562160"
  },
  {
    "text": "it does that for you what it does is it",
    "start": "562160",
    "end": "564959"
  },
  {
    "text": "extend the proxy awesome API",
    "start": "564959",
    "end": "566880"
  },
  {
    "text": "specifications and embeds The Wharf",
    "start": "566880",
    "end": "571320"
  },
  {
    "text": "functionalities in the coraza project",
    "start": "571320",
    "end": "573360"
  },
  {
    "text": "and then you can just create a awesome",
    "start": "573360",
    "end": "575220"
  },
  {
    "text": "plugin and it would work just out of the",
    "start": "575220",
    "end": "577080"
  },
  {
    "text": "box in your infrastructure",
    "start": "577080",
    "end": "579899"
  },
  {
    "text": "another way is to uh like another use",
    "start": "579899",
    "end": "582420"
  },
  {
    "text": "case would be having a network policies",
    "start": "582420",
    "end": "584160"
  },
  {
    "text": "uh in place in your infrastructure",
    "start": "584160",
    "end": "587600"
  },
  {
    "text": "filter can be configured using the",
    "start": "587600",
    "end": "590820"
  },
  {
    "text": "authorization filter to delegate uh",
    "start": "590820",
    "end": "592680"
  },
  {
    "text": "authorization decision to Opa so",
    "start": "592680",
    "end": "596519"
  },
  {
    "text": "uh Native ways to use the network",
    "start": "596519",
    "end": "599399"
  },
  {
    "text": "policies available in kubernetes and is",
    "start": "599399",
    "end": "601620"
  },
  {
    "text": "to itself another way is to you can use",
    "start": "601620",
    "end": "603959"
  },
  {
    "text": "open policy agent and extend the",
    "start": "603959",
    "end": "607860"
  },
  {
    "text": "functionalities available in open policy",
    "start": "607860",
    "end": "610500"
  },
  {
    "text": "agent and use that in istio for that you",
    "start": "610500",
    "end": "612720"
  },
  {
    "text": "need to",
    "start": "612720",
    "end": "613820"
  },
  {
    "text": "configure NY to use open policy agent as",
    "start": "613820",
    "end": "617160"
  },
  {
    "text": "a network",
    "start": "617160",
    "end": "618600"
  },
  {
    "text": "policy provider so you you need to",
    "start": "618600",
    "end": "621420"
  },
  {
    "text": "install op NY and",
    "start": "621420",
    "end": "624600"
  },
  {
    "text": "then we need to create a sophisticated",
    "start": "624600",
    "end": "627240"
  },
  {
    "text": "version plugin which would delegate the",
    "start": "627240",
    "end": "629700"
  },
  {
    "text": "authorization to Opa",
    "start": "629700",
    "end": "633180"
  },
  {
    "text": "and what we can do is if if the",
    "start": "633180",
    "end": "636360"
  },
  {
    "text": "Network policies available in open",
    "start": "636360",
    "end": "638040"
  },
  {
    "text": "policy policy agents are not enough we",
    "start": "638040",
    "end": "641700"
  },
  {
    "text": "can create a new uh like so Opa uses uh",
    "start": "641700",
    "end": "645839"
  },
  {
    "text": "regular policies we can create our own",
    "start": "645839",
    "end": "647880"
  },
  {
    "text": "version plugin to enhance what what is",
    "start": "647880",
    "end": "651899"
  },
  {
    "text": "available in Opa policy agent itself and",
    "start": "651899",
    "end": "654839"
  },
  {
    "text": "we can like Define our own network",
    "start": "654839",
    "end": "656940"
  },
  {
    "text": "policies on top of it uh using the wasm",
    "start": "656940",
    "end": "660300"
  },
  {
    "text": "support in Opa and then that Opa can",
    "start": "660300",
    "end": "663240"
  },
  {
    "text": "used to be configured the network",
    "start": "663240",
    "end": "664980"
  },
  {
    "text": "policies in history itself",
    "start": "664980",
    "end": "668000"
  },
  {
    "text": "so there are some references",
    "start": "668000",
    "end": "671760"
  },
  {
    "text": "now uh how would I do some Advanced",
    "start": "671760",
    "end": "674940"
  },
  {
    "text": "routing in istio using wasm so consider",
    "start": "674940",
    "end": "679140"
  },
  {
    "text": "use case uh where depending on the",
    "start": "679140",
    "end": "681240"
  },
  {
    "text": "header value you may want to hit a",
    "start": "681240",
    "end": "683160"
  },
  {
    "text": "specific subset of a service so for",
    "start": "683160",
    "end": "685260"
  },
  {
    "text": "example if the initial header is V1 and",
    "start": "685260",
    "end": "689220"
  },
  {
    "text": "so if if there are multiple Services",
    "start": "689220",
    "end": "691620"
  },
  {
    "text": "running and I give the initial header at",
    "start": "691620",
    "end": "694140"
  },
  {
    "text": "my English Gateway as V1 I want all the",
    "start": "694140",
    "end": "696839"
  },
  {
    "text": "subsequent requests to go to uh V1",
    "start": "696839",
    "end": "699959"
  },
  {
    "text": "itself",
    "start": "699959",
    "end": "701880"
  },
  {
    "text": "or I can define predefine a request flow",
    "start": "701880",
    "end": "705480"
  },
  {
    "text": "if I want so for example if I Define a",
    "start": "705480",
    "end": "708480"
  },
  {
    "text": "flow Alpha where the first service a",
    "start": "708480",
    "end": "712140"
  },
  {
    "text": "uses V1 subset the nether service B uses",
    "start": "712140",
    "end": "715860"
  },
  {
    "text": "V2 subset",
    "start": "715860",
    "end": "717180"
  },
  {
    "text": "and then V3 and V2 for service C and",
    "start": "717180",
    "end": "720600"
  },
  {
    "text": "service D so here I am defining a",
    "start": "720600",
    "end": "723240"
  },
  {
    "text": "request flow and I'm giving it it a name",
    "start": "723240",
    "end": "726959"
  },
  {
    "text": "as Alpha and when whenever I give the",
    "start": "726959",
    "end": "729600"
  },
  {
    "text": "request header as Alpha in my Ingress",
    "start": "729600",
    "end": "731880"
  },
  {
    "text": "Gateway this path should be followed",
    "start": "731880",
    "end": "734579"
  },
  {
    "text": "similarly for beta so this is this is",
    "start": "734579",
    "end": "738120"
  },
  {
    "text": "a bit complex and we cannot do this by",
    "start": "738120",
    "end": "740519"
  },
  {
    "text": "configuring virtual Service uh nsto if",
    "start": "740519",
    "end": "743579"
  },
  {
    "text": "you want to do that we want to we need",
    "start": "743579",
    "end": "745620"
  },
  {
    "text": "to hardcore virtual service all the time",
    "start": "745620",
    "end": "747060"
  },
  {
    "text": "but if we want to do this dynamically",
    "start": "747060",
    "end": "748980"
  },
  {
    "text": "there we need to use wasn't plugins",
    "start": "748980",
    "end": "753079"
  },
  {
    "text": "so one easy way is to use",
    "start": "753839",
    "end": "755339"
  },
  {
    "text": "instrumentation if your application is",
    "start": "755339",
    "end": "757260"
  },
  {
    "text": "instrumented uh you can have uh",
    "start": "757260",
    "end": "761040"
  },
  {
    "text": "virtual service created depending on",
    "start": "761040",
    "end": "763200"
  },
  {
    "text": "whatever the request flow is so for",
    "start": "763200",
    "end": "765360"
  },
  {
    "text": "example in in alpha alpha flow I can",
    "start": "765360",
    "end": "769019"
  },
  {
    "text": "create a virtual service which would",
    "start": "769019",
    "end": "771240"
  },
  {
    "text": "instrument so so if the application",
    "start": "771240",
    "end": "774320"
  },
  {
    "text": "instrumented the my header is propagated",
    "start": "774320",
    "end": "776639"
  },
  {
    "text": "throughout the requestion I can use",
    "start": "776639",
    "end": "779519"
  },
  {
    "text": "this propagated header and then create a",
    "start": "779519",
    "end": "782279"
  },
  {
    "text": "virtual service out of it which would do",
    "start": "782279",
    "end": "784800"
  },
  {
    "text": "a header match for V1 and then V1",
    "start": "784800",
    "end": "787800"
  },
  {
    "text": "if if the header is Alpha the request",
    "start": "787800",
    "end": "790079"
  },
  {
    "text": "would be routed to V1 if the header is",
    "start": "790079",
    "end": "791820"
  },
  {
    "text": "uh beta the request would be routed to",
    "start": "791820",
    "end": "794100"
  },
  {
    "text": "V2 but if I want if my application is",
    "start": "794100",
    "end": "797820"
  },
  {
    "text": "not instrumented what I can do is I can",
    "start": "797820",
    "end": "799620"
  },
  {
    "text": "have a possum plugin which would use the",
    "start": "799620",
    "end": "802200"
  },
  {
    "text": "knowledge of shared data between",
    "start": "802200",
    "end": "803880"
  },
  {
    "text": "different VMS and it can do the job but",
    "start": "803880",
    "end": "807300"
  },
  {
    "text": "uh at the moment it's not very efficient",
    "start": "807300",
    "end": "809220"
  },
  {
    "text": "so let's see how it works uh when we use",
    "start": "809220",
    "end": "812160"
  },
  {
    "text": "the volume plug-in",
    "start": "812160",
    "end": "814860"
  },
  {
    "text": "so I'm not sure if it's visible but",
    "start": "814860",
    "end": "817820"
  },
  {
    "text": "let's try to understand",
    "start": "817820",
    "end": "820139"
  },
  {
    "text": "so this is the Ingress Gateway and this",
    "start": "820139",
    "end": "822660"
  },
  {
    "text": "is the inbound request coming from from",
    "start": "822660",
    "end": "825300"
  },
  {
    "text": "the user and the user is defining the",
    "start": "825300",
    "end": "827160"
  },
  {
    "text": "custom header as Alpha",
    "start": "827160",
    "end": "829620"
  },
  {
    "text": "so when the request with Alpha header",
    "start": "829620",
    "end": "832380"
  },
  {
    "text": "comes in",
    "start": "832380",
    "end": "833480"
  },
  {
    "text": "the increased Gateway just propagates",
    "start": "833480",
    "end": "836459"
  },
  {
    "text": "the header and this is product V1",
    "start": "836459",
    "end": "840000"
  },
  {
    "text": "now here we know know that for the",
    "start": "840000",
    "end": "843060"
  },
  {
    "text": "incoming request I have this service",
    "start": "843060",
    "end": "847079"
  },
  {
    "text": "index created which is 0 and for the",
    "start": "847079",
    "end": "850440"
  },
  {
    "text": "outbound request from product V1 the",
    "start": "850440",
    "end": "853500"
  },
  {
    "text": "header is not propagated so what I'm",
    "start": "853500",
    "end": "855899"
  },
  {
    "text": "doing here is I'm sharing the context",
    "start": "855899",
    "end": "857579"
  },
  {
    "text": "between the VM available here and the VM",
    "start": "857579",
    "end": "860519"
  },
  {
    "text": "available here and use using the shared",
    "start": "860519",
    "end": "862980"
  },
  {
    "text": "data I am using the request ID itself to",
    "start": "862980",
    "end": "865860"
  },
  {
    "text": "first store the header uh Alpha in the",
    "start": "865860",
    "end": "871980"
  },
  {
    "text": "VM available in this request path and",
    "start": "871980",
    "end": "874920"
  },
  {
    "text": "then reuse that Alpha to know what the",
    "start": "874920",
    "end": "878700"
  },
  {
    "text": "request ID is and corresponding the",
    "start": "878700",
    "end": "880560"
  },
  {
    "text": "request ID I'm calculating my service",
    "start": "880560",
    "end": "883740"
  },
  {
    "text": "subset which is V2 if the request is",
    "start": "883740",
    "end": "886260"
  },
  {
    "text": "Alpha and then based on that service",
    "start": "886260",
    "end": "889920"
  },
  {
    "text": "subset I'm just routing using my virtual",
    "start": "889920",
    "end": "892260"
  },
  {
    "text": "service to the next subsequent request",
    "start": "892260",
    "end": "894740"
  },
  {
    "text": "similarly here the custom header is",
    "start": "894740",
    "end": "897899"
  },
  {
    "text": "again injected at the at at the response",
    "start": "897899",
    "end": "902579"
  },
  {
    "text": "header and then the response header",
    "start": "902579",
    "end": "905220"
  },
  {
    "text": "Alpha is using the service index one and",
    "start": "905220",
    "end": "908760"
  },
  {
    "text": "again the same thing is happening where",
    "start": "908760",
    "end": "910579"
  },
  {
    "text": "depending on the custom header Alpha I'm",
    "start": "910579",
    "end": "915800"
  },
  {
    "text": "storing request ID and this particular",
    "start": "915800",
    "end": "919500"
  },
  {
    "text": "header and then at the response I'm",
    "start": "919500",
    "end": "921540"
  },
  {
    "text": "using that uh ID request ID",
    "start": "921540",
    "end": "925680"
  },
  {
    "text": "using",
    "start": "925680",
    "end": "927000"
  },
  {
    "text": "the context sharing between different",
    "start": "927000",
    "end": "929339"
  },
  {
    "text": "VMS I'm recalculating what is my service",
    "start": "929339",
    "end": "932220"
  },
  {
    "text": "subset in in this case it's V3 and then",
    "start": "932220",
    "end": "935220"
  },
  {
    "text": "I'm again routing using my virtual",
    "start": "935220",
    "end": "936779"
  },
  {
    "text": "services",
    "start": "936779",
    "end": "938959"
  },
  {
    "text": "so this is kind of a high level flow and",
    "start": "939180",
    "end": "942660"
  },
  {
    "text": "how it works",
    "start": "942660",
    "end": "944579"
  },
  {
    "text": "so let's take a look at a demo",
    "start": "944579",
    "end": "949519"
  },
  {
    "text": "and second trying to connect",
    "start": "955199",
    "end": "957779"
  },
  {
    "text": "so in my cluster",
    "start": "957779",
    "end": "960920"
  },
  {
    "text": "is it visible",
    "start": "978480",
    "end": "981380"
  },
  {
    "text": "um",
    "start": "991260",
    "end": "991800"
  },
  {
    "text": "so this is a single cluster setup where",
    "start": "991800",
    "end": "994620"
  },
  {
    "text": "I have book info running",
    "start": "994620",
    "end": "997259"
  },
  {
    "text": "in the default name space and S2 is set",
    "start": "997259",
    "end": "999540"
  },
  {
    "text": "up now what I want to do is",
    "start": "999540",
    "end": "1003519"
  },
  {
    "text": "I want to demo",
    "start": "1003680",
    "end": "1006320"
  },
  {
    "text": "this setup where I'm using",
    "start": "1006320",
    "end": "1010339"
  },
  {
    "text": "this particular volume plug-in",
    "start": "1010339",
    "end": "1012800"
  },
  {
    "text": "configuration using proxy wasm SDK so",
    "start": "1012800",
    "end": "1016519"
  },
  {
    "text": "what I'm doing is I'm just",
    "start": "1016519",
    "end": "1018940"
  },
  {
    "text": "injecting fewer headers in my response",
    "start": "1018940",
    "end": "1021860"
  },
  {
    "text": "header",
    "start": "1021860",
    "end": "1022759"
  },
  {
    "text": "where",
    "start": "1022759",
    "end": "1024620"
  },
  {
    "text": "if you can see in this particular time",
    "start": "1024620",
    "end": "1026660"
  },
  {
    "text": "103 we have",
    "start": "1026660",
    "end": "1028839"
  },
  {
    "text": "proxy wasm go SDK example injected with",
    "start": "1028839",
    "end": "1033079"
  },
  {
    "text": "with value as HTTP headers",
    "start": "1033079",
    "end": "1035660"
  },
  {
    "text": "and I'm printing all the response",
    "start": "1035660",
    "end": "1038480"
  },
  {
    "text": "headers available in my response",
    "start": "1038480",
    "end": "1041360"
  },
  {
    "text": "so this is how the",
    "start": "1041360",
    "end": "1044600"
  },
  {
    "text": "response would look like I would have",
    "start": "1044600",
    "end": "1046579"
  },
  {
    "text": "all the requests and response headers",
    "start": "1046579",
    "end": "1048380"
  },
  {
    "text": "printed if I run this thing but for some",
    "start": "1048380",
    "end": "1051620"
  },
  {
    "text": "reason this is not working due to the",
    "start": "1051620",
    "end": "1053960"
  },
  {
    "text": "VPN so I'm just listing the output here",
    "start": "1053960",
    "end": "1056900"
  },
  {
    "text": "yeah",
    "start": "1056900",
    "end": "1059179"
  },
  {
    "text": "similarly if we we",
    "start": "1059179",
    "end": "1062260"
  },
  {
    "text": "embed the knowledge of sharing VM",
    "start": "1062260",
    "end": "1066140"
  },
  {
    "text": "sharing",
    "start": "1066140",
    "end": "1069140"
  },
  {
    "text": "sharing information between different",
    "start": "1069260",
    "end": "1071480"
  },
  {
    "text": "VMS using the shared data we can have",
    "start": "1071480",
    "end": "1073400"
  },
  {
    "text": "different uh routing schemes available",
    "start": "1073400",
    "end": "1076039"
  },
  {
    "text": "just like we talked about now",
    "start": "1076039",
    "end": "1078860"
  },
  {
    "text": "so I mean this is it for the short talk",
    "start": "1078860",
    "end": "1082460"
  },
  {
    "text": "uh any questions are welcome",
    "start": "1082460",
    "end": "1086200"
  },
  {
    "text": "uh yeah I have a question about the way",
    "start": "1096559",
    "end": "1099919"
  },
  {
    "text": "I'm sharing data storage in the uh in",
    "start": "1099919",
    "end": "1104120"
  },
  {
    "text": "some somewhere yeah you know if if the",
    "start": "1104120",
    "end": "1108380"
  },
  {
    "text": "VM have the same way I'm ID then the",
    "start": "1108380",
    "end": "1111320"
  },
  {
    "text": "data will be stored in the same uh",
    "start": "1111320",
    "end": "1114559"
  },
  {
    "text": "shared sharing yeah so can you give more",
    "start": "1114559",
    "end": "1119000"
  },
  {
    "text": "details about the data storages it's a",
    "start": "1119000",
    "end": "1123200"
  },
  {
    "text": "volume or something anything where yeah",
    "start": "1123200",
    "end": "1127120"
  },
  {
    "text": "okay so uh the shared data thing works",
    "start": "1127120",
    "end": "1131179"
  },
  {
    "text": "in in the proxy awesome SDK if you are",
    "start": "1131179",
    "end": "1133640"
  },
  {
    "text": "using the shared data it means that you",
    "start": "1133640",
    "end": "1135679"
  },
  {
    "text": "can have your own data store or there's",
    "start": "1135679",
    "end": "1138919"
  },
  {
    "text": "one cache that is available so so that's",
    "start": "1138919",
    "end": "1141860"
  },
  {
    "text": "available in the reference itself uh",
    "start": "1141860",
    "end": "1144200"
  },
  {
    "text": "this one so the idea here is uh like if",
    "start": "1144200",
    "end": "1147799"
  },
  {
    "text": "there are a thousand requests at the",
    "start": "1147799",
    "end": "1150140"
  },
  {
    "text": "same time they would have their own uh",
    "start": "1150140",
    "end": "1152720"
  },
  {
    "text": "VM in in the individual threads so every",
    "start": "1152720",
    "end": "1155539"
  },
  {
    "text": "thread would have its own VM and for",
    "start": "1155539",
    "end": "1158240"
  },
  {
    "text": "inbound and outbound request there is no",
    "start": "1158240",
    "end": "1160400"
  },
  {
    "text": "knowledge sharing there is no context",
    "start": "1160400",
    "end": "1162440"
  },
  {
    "text": "sharing but if what if I want to",
    "start": "1162440",
    "end": "1164780"
  },
  {
    "text": "depending on the request header I want",
    "start": "1164780",
    "end": "1168740"
  },
  {
    "text": "to share that information with the",
    "start": "1168740",
    "end": "1170539"
  },
  {
    "text": "outbound request I need to have some",
    "start": "1170539",
    "end": "1172820"
  },
  {
    "text": "mechanism to share the data between",
    "start": "1172820",
    "end": "1174559"
  },
  {
    "text": "these two uh requests so that's where",
    "start": "1174559",
    "end": "1177200"
  },
  {
    "text": "the shared data comes into picture Okay",
    "start": "1177200",
    "end": "1179539"
  },
  {
    "text": "so another question is about the",
    "start": "1179539",
    "end": "1181520"
  },
  {
    "text": "expiration of the data you know there",
    "start": "1181520",
    "end": "1184100"
  },
  {
    "text": "are so many dators in this sharing data",
    "start": "1184100",
    "end": "1186500"
  },
  {
    "text": "storage but uh how about if there is an",
    "start": "1186500",
    "end": "1190280"
  },
  {
    "text": "rotation or expiration management for",
    "start": "1190280",
    "end": "1194419"
  },
  {
    "text": "the all this theater yeah so this thing",
    "start": "1194419",
    "end": "1197059"
  },
  {
    "text": "is under development so that's why it's",
    "start": "1197059",
    "end": "1198740"
  },
  {
    "text": "not production ID if I get your question",
    "start": "1198740",
    "end": "1201020"
  },
  {
    "text": "correctly what would happen if around",
    "start": "1201020",
    "end": "1203419"
  },
  {
    "text": "after a million request how would I",
    "start": "1203419",
    "end": "1205340"
  },
  {
    "text": "clean up my data store for uh for the",
    "start": "1205340",
    "end": "1207919"
  },
  {
    "text": "given request IDs if it's that's your",
    "start": "1207919",
    "end": "1209960"
  },
  {
    "text": "question someone you can have your own",
    "start": "1209960",
    "end": "1212000"
  },
  {
    "text": "Cron job setup to do that uh but yeah",
    "start": "1212000",
    "end": "1215660"
  },
  {
    "text": "currently it's uh it's not been taken",
    "start": "1215660",
    "end": "1217880"
  },
  {
    "text": "care of",
    "start": "1217880",
    "end": "1219679"
  },
  {
    "text": "yeah got it thank you",
    "start": "1219679",
    "end": "1223059"
  },
  {
    "text": "hi Uma",
    "start": "1223460",
    "end": "1226299"
  },
  {
    "text": "um",
    "start": "1227059",
    "end": "1229059"
  },
  {
    "text": "thank you thank you excellent",
    "start": "1230120",
    "end": "1233290"
  },
  {
    "text": "[Applause]",
    "start": "1233290",
    "end": "1235710"
  }
]