[
  {
    "text": "welcome to it's dangerous to build it alone take this I hope everybody likes Zelda um my name is Jeremy Rickard I'm a",
    "start": "120",
    "end": "6919"
  },
  {
    "text": "co-chair of Sig release in the kubernetes project I'm also a software engineer at Microsoft um my team helps",
    "start": "6919",
    "end": "13639"
  },
  {
    "text": "build and produce the open- source software that's used inside of services like AKs um uh container industry stuff",
    "start": "13639",
    "end": "21560"
  },
  {
    "text": "like that everyone my name is asna and I'm a software engineer at Microsoft and",
    "start": "21560",
    "end": "27720"
  },
  {
    "text": "a Copa maintainer and today today we're going to be talking about some best practices and tools to secure your",
    "start": "27720",
    "end": "34079"
  },
  {
    "text": "supply chain so why are we here and why is this important so just in the past year",
    "start": "34079",
    "end": "40879"
  },
  {
    "text": "there's been a lot of reports of vulnerabilities being exploited and it's important that we know what steps to",
    "start": "40879",
    "end": "47360"
  },
  {
    "text": "take to mitigate this so there's a pretty good chance that at least a majority of the people",
    "start": "47360",
    "end": "54239"
  },
  {
    "text": "in this room are doing some type of vulnerability management and while tools",
    "start": "54239",
    "end": "59519"
  },
  {
    "text": "like Tri can help make you aware of vulnerabilities it's important that we",
    "start": "59519",
    "end": "64799"
  },
  {
    "text": "actually understand and address them so one thing you can try to do is",
    "start": "64799",
    "end": "70360"
  },
  {
    "text": "you can try to go to GitHub and ask for dependency updates and this is an example from the kubernetes release repo",
    "start": "70360",
    "end": "77640"
  },
  {
    "text": "asking to bump the goang version because of a trivia",
    "start": "77640",
    "end": "82680"
  },
  {
    "text": "report but scanners don't have a way to do any real type of analysis so you'll",
    "start": "82680",
    "end": "88400"
  },
  {
    "text": "probably get a response like this saying that we can't do a dependency update just to satisfy a",
    "start": "88400",
    "end": "96320"
  },
  {
    "text": "scanner another problem you can run into is you could be dependent on the",
    "start": "97200",
    "end": "102280"
  },
  {
    "text": "Upstream binaries when they're no longer available so this example is from a older um C this example is from an older",
    "start": "102280",
    "end": "110240"
  },
  {
    "text": "release RPM for kubernetes which is no longer available for",
    "start": "110240",
    "end": "116280"
  },
  {
    "text": "upgrade so what do we do now to take the matter into our own hands and is there",
    "start": "116280",
    "end": "121600"
  },
  {
    "text": "any guidance that we can lean on to figure out the right thing to do so today we're going to start by",
    "start": "121600",
    "end": "128959"
  },
  {
    "text": "going over the secure supply chain consumption framework from the op ssf",
    "start": "128959",
    "end": "134480"
  },
  {
    "text": "and it just outlines a bunch of best practices around consuming and using open- Source",
    "start": "134480",
    "end": "140200"
  },
  {
    "text": "software so there's eight practices um that it outlines and we'll go over them",
    "start": "140200",
    "end": "146200"
  },
  {
    "text": "and highlight some of the important ones and some of the tools you can use and the first practice is ingest it so",
    "start": "146200",
    "end": "153239"
  },
  {
    "text": "this is just how are we going to consume The open- Source components so this",
    "start": "153239",
    "end": "158319"
  },
  {
    "text": "means using public package managers using a open-source um binary repo",
    "start": "158319",
    "end": "164599"
  },
  {
    "text": "manager solution and also mirroring our OSS source code into an internal",
    "start": "164599",
    "end": "171879"
  },
  {
    "text": "location the next practice is scan it which is pretty straightforward it's using the open- source scanning tools",
    "start": "171879",
    "end": "178360"
  },
  {
    "text": "like trivy to help make you you aware of the vulnerabilities and",
    "start": "178360",
    "end": "184080"
  },
  {
    "text": "cves the next practice is inventory and we won't get into this too much today",
    "start": "184080",
    "end": "189319"
  },
  {
    "text": "but it's just a practice to have um awareness of what you're using and a plan to",
    "start": "189319",
    "end": "196159"
  },
  {
    "text": "respond the fourth practice is update so after we scan we want to have a way to",
    "start": "196159",
    "end": "202200"
  },
  {
    "text": "address the vulnerabilities and this could be manual or automated using tools",
    "start": "202200",
    "end": "207400"
  },
  {
    "text": "like dependabot or Copa that we'll talk about today next one me so once we have",
    "start": "207400",
    "end": "214519"
  },
  {
    "text": "started to uh ingest the the open source components we're going to use we started",
    "start": "214519",
    "end": "219840"
  },
  {
    "text": "to scan and to update those uh we also need to start auditing them so we can understand exactly where they're being",
    "start": "219840",
    "end": "226360"
  },
  {
    "text": "used and feed that into our plan to respond to things this could be um you",
    "start": "226360",
    "end": "231879"
  },
  {
    "text": "know knowing what's being deployed it could also be uh actually auditing the components themselves to understand what",
    "start": "231879",
    "end": "237400"
  },
  {
    "text": "the actual dependencies are looking at the s uh things like that next uh enforcing it so once you",
    "start": "237400",
    "end": "244280"
  },
  {
    "text": "have been able to audit things and understand things you can start to enforce things uh this could be done at your cluster it could be done in a",
    "start": "244280",
    "end": "250159"
  },
  {
    "text": "number of different places a solution in your cluster might be something like um kerno or ratify or open policy agent",
    "start": "250159",
    "end": "257440"
  },
  {
    "text": "gatekeeper uh making decisions based off of some of those um uh pieces of information that you've got for your",
    "start": "257440",
    "end": "264479"
  },
  {
    "text": "software and then next we want to talk about actually rebuilding it so we we",
    "start": "264479",
    "end": "269800"
  },
  {
    "text": "can do some things with patching Copa is going to give us a good example of that uh we can rely on Upstream updates but",
    "start": "269800",
    "end": "275680"
  },
  {
    "text": "sometimes those aren't fast enough and to really respond we need to be able to rebuild from Source ourselves that",
    "start": "275680",
    "end": "281039"
  },
  {
    "text": "allows us to fix things that are potentially not fixed Upstream um but also to you know bump dependencies where",
    "start": "281039",
    "end": "287000"
  },
  {
    "text": "they may not actually be needed but we want to have a a more holistic approach to things and then once we're able to do",
    "start": "287000",
    "end": "294080"
  },
  {
    "text": "that rebuild from Source we can go that next step and be able to fix things before um fixes come from Upstream",
    "start": "294080",
    "end": "301160"
  },
  {
    "text": "perhaps we find a bug and we can fix it ourselves before it's even disclosed and then we can responsibly disclose it to",
    "start": "301160",
    "end": "306400"
  },
  {
    "text": "the Upstream project so we talked about those eight practices at a high level there were a",
    "start": "306400",
    "end": "312759"
  },
  {
    "text": "lot of bullet points highlighted uh on the right you can get a lot more information at the um the open soft uh",
    "start": "312759",
    "end": "319360"
  },
  {
    "text": "GitHub repo for this framework we have a link at the end but one thing to know for this is that there's a lot of",
    "start": "319360",
    "end": "325800"
  },
  {
    "text": "individual pieces for that and as you start to look at them um you may not need all of them you may want to take",
    "start": "325800",
    "end": "332240"
  },
  {
    "text": "them in waves so they also provide a maturity model that shows you how to go from really really basic to that more",
    "start": "332240",
    "end": "339800"
  },
  {
    "text": "complex um rebuild from Source kind of model uh we're going to look at a few tools as we go through this they're",
    "start": "339800",
    "end": "345919"
  },
  {
    "text": "going to have a a large focus on cncf projects there are a ton of other things in the ecosystem but we're really going",
    "start": "345919",
    "end": "351639"
  },
  {
    "text": "to focus on cncf related things today okay so now that we've gone",
    "start": "351639",
    "end": "358600"
  },
  {
    "text": "through the model let's get into the practices themselves and we'll start",
    "start": "358600",
    "end": "363919"
  },
  {
    "text": "with ingest it which is consuming the Upstream images so when we have images in a",
    "start": "363919",
    "end": "370599"
  },
  {
    "text": "registry like the kubernetes registry or Docker Hub we want to mirror them into our own registry to provide greater",
    "start": "370599",
    "end": "377800"
  },
  {
    "text": "control so this could be from a cloud provider like ACR or GCR or you could use a tool like Harbor to host it um in",
    "start": "377800",
    "end": "385680"
  },
  {
    "text": "your own private Network another tool that we want to highlight is oras and oras is a cncf",
    "start": "385680",
    "end": "392800"
  },
  {
    "text": "Sandbox project and it provides a CLI and client libraries to distribute the",
    "start": "392800",
    "end": "398919"
  },
  {
    "text": "artifacts across oci compliant Registries so oras allows us to copy",
    "start": "398919",
    "end": "404599"
  },
  {
    "text": "artifacts from one registry to another and also attach artifacts to",
    "start": "404599",
    "end": "410840"
  },
  {
    "text": "images so let's take a look at the oras tool",
    "start": "410840",
    "end": "416800"
  },
  {
    "text": "and normally when you're trying to get a image you would do a Docker pull from",
    "start": "419919",
    "end": "425120"
  },
  {
    "text": "the docker registry and pull directly from the docker Library so we're pulling",
    "start": "425120",
    "end": "431000"
  },
  {
    "text": "the buntu 22.4 image here but a better practice",
    "start": "431000",
    "end": "436440"
  },
  {
    "text": "would be to copy it into your own registry and we can use the ORS copy command to do that so we're copying it",
    "start": "436440",
    "end": "443319"
  },
  {
    "text": "to the cucon buildit Azure container registry and now we can pull directly",
    "start": "443319",
    "end": "449039"
  },
  {
    "text": "from there and use it in Docker file if we need",
    "start": "449039",
    "end": "453720"
  },
  {
    "text": "to all right so we have started to uh ingest that container that Ubuntu",
    "start": "457560",
    "end": "462960"
  },
  {
    "text": "container um let's talk about things we can do to help audit and understand what is in that container um we're going to",
    "start": "462960",
    "end": "469319"
  },
  {
    "text": "start to talk about adding additional context to that image and we're going to look at Orest again in a way to help us",
    "start": "469319",
    "end": "474919"
  },
  {
    "text": "um take some artifacts that we're going to generate from that image and attach them so that they're discoverable and",
    "start": "474919",
    "end": "480840"
  },
  {
    "text": "usable in policy enforcement later on so we've got another quick demo here uh",
    "start": "480840",
    "end": "485919"
  },
  {
    "text": "where you're going to first generate an s bomb for this container these could exist upstream and uh you should consume",
    "start": "485919",
    "end": "491759"
  },
  {
    "text": "those but if you if you don't get those uh one thing you can do is use a tool like CFT to be able to generate an sbom",
    "start": "491759",
    "end": "498319"
  },
  {
    "text": "for that there's a bunch of other tools that will do this as well but we just chose CFT for this example so CFT is running against that container image and",
    "start": "498319",
    "end": "505000"
  },
  {
    "text": "it's going to analyze the layers uh to understand what packages have been installed um we'll let that run for just",
    "start": "505000",
    "end": "510759"
  },
  {
    "text": "a second and once it's done we will end up with in in this case an spdx Json file so specific type of sbom um we can",
    "start": "510759",
    "end": "518399"
  },
  {
    "text": "examine it and see some of the packages that exist inside the container see a whole bunch of them because it's an Ubuntu based image um now that we've",
    "start": "518399",
    "end": "525480"
  },
  {
    "text": "generated that we actually want to attach it so ORS has an attach command uh different than that copy command and",
    "start": "525480",
    "end": "531040"
  },
  {
    "text": "what it allows you to do is use um something called the refers API to store that as an artifact in the registry and",
    "start": "531040",
    "end": "537760"
  },
  {
    "text": "then associate it with a Target artifact so we'll take a look at the Manifest for it really quick so we're going to",
    "start": "537760",
    "end": "543760"
  },
  {
    "text": "discover first and we can see this kind of hierarchical relationship and um we'll look at another one in a second",
    "start": "543760",
    "end": "549800"
  },
  {
    "text": "that has the the full manifest so you can see what that kind of looks like but now we've got the s bomb attached and uh",
    "start": "549800",
    "end": "555000"
  },
  {
    "text": "you could use the RS tool to to pull that as",
    "start": "555000",
    "end": "559600"
  },
  {
    "text": "well okay so now we are going to fast forward a little bit um is this the",
    "start": "561160",
    "end": "567720"
  },
  {
    "text": "right one this is the right one okay we're going to fast forward let's say six months we have that Ubuntu image",
    "start": "567720",
    "end": "574560"
  },
  {
    "text": "in our registry and there's a vulnerability in it we're going to import a new version or perhaps upgrade",
    "start": "574560",
    "end": "579680"
  },
  {
    "text": "to something else but we actually want to say that this thing shouldn't be used anymore so we're going to use uh oci",
    "start": "579680",
    "end": "584760"
  },
  {
    "text": "artifacts again for this and in essence create an empty artifact that just has annotations we can't go add annotations",
    "start": "584760",
    "end": "591160"
  },
  {
    "text": "directly to the image itself because it would result in a brand new image you get a different hash or different digest",
    "start": "591160",
    "end": "596480"
  },
  {
    "text": "for that thing um but this allows you to add new oi artifacts to your registry and Associate them so that you can",
    "start": "596480",
    "end": "603160"
  },
  {
    "text": "discover them in the same process as that es bomb and then you can use that inside of something like kerno or or Opa",
    "start": "603160",
    "end": "610399"
  },
  {
    "text": "to say if this artifact has an attachment with an end of life date we",
    "start": "610399",
    "end": "616160"
  },
  {
    "text": "should reject it from the cluster so the let's pause for one sec this is an",
    "start": "616160",
    "end": "621279"
  },
  {
    "text": "example of what that manifest looks like uh right here you can see the end of life date um and then above it there is",
    "start": "621279",
    "end": "627399"
  },
  {
    "text": "a section called subject and that's where it's going to refer to what you've attached it to so you live a separate",
    "start": "627399",
    "end": "633120"
  },
  {
    "text": "artifacts in the registry just like the s bomb does but it has that kind of U parent child relationship between",
    "start": "633120",
    "end": "640639"
  },
  {
    "text": "them all right okay and then you've got all of",
    "start": "643120",
    "end": "649959"
  },
  {
    "text": "these things so let's resume here um and remember now we've got two different",
    "start": "649959",
    "end": "655160"
  },
  {
    "text": "artifacts right we've got our end of life annotations and we also have our s bomb we really want to make sure that those",
    "start": "655160",
    "end": "661800"
  },
  {
    "text": "things aren't tamper with and we want to make sure that we understand who pushed them and they're not really reputable so",
    "start": "661800",
    "end": "667600"
  },
  {
    "text": "one thing you can do for that is to sign them um you can sign the container image that's another really good practice",
    "start": "667600",
    "end": "672959"
  },
  {
    "text": "signing these artifacts themselves along with that is an even better practice here we're going to use a tool called",
    "start": "672959",
    "end": "678000"
  },
  {
    "text": "notation um there's again multiple things in the space that will support this but uh we're using notation for",
    "start": "678000",
    "end": "683680"
  },
  {
    "text": "this notation allows you to sign any oci artifact in a registry so a container image or the sbom or the end of life",
    "start": "683680",
    "end": "691000"
  },
  {
    "text": "annotation so we're going to sign all of those things and then again with policy enforcement later on we could validate",
    "start": "691000",
    "end": "697800"
  },
  {
    "text": "and ensure that the things we're pulling into the Container or into the cluster are signed and then we're making policy",
    "start": "697800",
    "end": "703200"
  },
  {
    "text": "decisions based off of those things we can ensure that those are also signed and and",
    "start": "703200",
    "end": "709720"
  },
  {
    "text": "verifiable you can see the same kind of hierarchy there all right okay so once we have our",
    "start": "710519",
    "end": "717120"
  },
  {
    "text": "images imported and ingested and we have policies enforced we actually want to be",
    "start": "717120",
    "end": "722440"
  },
  {
    "text": "able to scan and update the images so let's discuss ways we can go about updating images so first option is to",
    "start": "722440",
    "end": "729920"
  },
  {
    "text": "wait for base image updates so we have our Ubuntu image in our own registry but",
    "start": "729920",
    "end": "735760"
  },
  {
    "text": "waiting for a base image update could take a long time sometimes months and that takes away control from you as a",
    "start": "735760",
    "end": "742519"
  },
  {
    "text": "developer or user of the image another option is to rely on the",
    "start": "742519",
    "end": "747680"
  },
  {
    "text": "package managers to do the update dates but this requires you to have a good understanding of the package managers",
    "start": "747680",
    "end": "753839"
  },
  {
    "text": "and also the base image which won't always be the case and this also won't work for distrist images so if the",
    "start": "753839",
    "end": "760600"
  },
  {
    "text": "package manager isn't in the image itself you won't be able to do this so a solution to these update",
    "start": "760600",
    "end": "767800"
  },
  {
    "text": "problems is Copa and Copa is a cncf Sandbox project that patches container",
    "start": "767800",
    "end": "773760"
  },
  {
    "text": "images it's based on buildkit which is docker's default Builder and it allows",
    "start": "773760",
    "end": "779760"
  },
  {
    "text": "you to update vulnerable or outdated packages in your image so you could do a",
    "start": "779760",
    "end": "784920"
  },
  {
    "text": "targeted patching by default using a trivia report and it'll scan that report",
    "start": "784920",
    "end": "790480"
  },
  {
    "text": "and look for vulnerable OS vulnerabilities to update and that's",
    "start": "790480",
    "end": "796120"
  },
  {
    "text": "also pluggable with different scanners or you can decide to update all of the outdated packages to the most recent",
    "start": "796120",
    "end": "803839"
  },
  {
    "text": "version so this is a diagram explaining how Copa works the bottom left is your",
    "start": "803839",
    "end": "810399"
  },
  {
    "text": "image and it's made up of the different layers like the OS language framework and application layers but Copa focuses",
    "start": "810399",
    "end": "817199"
  },
  {
    "text": "on those OS vulnerabilities and using a external tool like trivy you'd create your",
    "start": "817199",
    "end": "823040"
  },
  {
    "text": "vulnerability report and then you could pass that into Copa to parse so Copa",
    "start": "823040",
    "end": "828880"
  },
  {
    "text": "will parse that report for the required updates and then download them and it",
    "start": "828880",
    "end": "834639"
  },
  {
    "text": "creates a diff with the file system to figure out which um updates were",
    "start": "834639",
    "end": "839720"
  },
  {
    "text": "downloaded and then using Bill kits diff and merge operation it creates that",
    "start": "839720",
    "end": "844800"
  },
  {
    "text": "resulting patch layer so let's take a look at the Copa tool and for the demo we'll try to patch",
    "start": "844800",
    "end": "852800"
  },
  {
    "text": "a engine X image with known vulnerabilities so we'll first scan it",
    "start": "852800",
    "end": "858399"
  },
  {
    "text": "with trivy um to see how many vulnerabilities are present and we'll specify that we want OS vulnerabilities",
    "start": "858399",
    "end": "865680"
  },
  {
    "text": "and we'll ignore any unfixable ones so there's 231 vulnerabilities right now in",
    "start": "865680",
    "end": "871399"
  },
  {
    "text": "this image and let's run trivy again but save the output to a Json file this",
    "start": "871399",
    "end": "878720"
  },
  {
    "text": "time so once that's generated we can pass that into Copa to patch so we're",
    "start": "881199",
    "end": "886240"
  },
  {
    "text": "specifying the image and the report that we just generated and by default Copa will",
    "start": "886240",
    "end": "893120"
  },
  {
    "text": "create a new image with the dash patch tag appended to it",
    "start": "893120",
    "end": "899759"
  },
  {
    "text": "and as Copa is running it's installing those specific vulnerable packages using apt since apt is the default package",
    "start": "902680",
    "end": "909360"
  },
  {
    "text": "manager in the engine X",
    "start": "909360",
    "end": "913040"
  },
  {
    "text": "image and once it's exported we can check for that image locally using Docker",
    "start": "916199",
    "end": "923360"
  },
  {
    "text": "images and now we know that there and then we can run trivy with the same parameters that we were checking for",
    "start": "927160",
    "end": "933120"
  },
  {
    "text": "before to see if the vulnerabilities were",
    "start": "933120",
    "end": "937639"
  },
  {
    "text": "patched so now there's zero vulnerabilities and we can also run this",
    "start": "938959",
    "end": "944720"
  },
  {
    "text": "um image as a container to make sure that it still works as we expected it",
    "start": "944720",
    "end": "950399"
  },
  {
    "text": "to it looks like that works so this is an example of what the",
    "start": "950880",
    "end": "958399"
  },
  {
    "text": "resulting image layers would look like so the most recent layer um that we see",
    "start": "958399",
    "end": "963480"
  },
  {
    "text": "is that patch layer that we saw in the diagram before and it's created using",
    "start": "963480",
    "end": "968720"
  },
  {
    "text": "the buildkit exporter and something that we optimized recently is that there's only one patched layer created so you",
    "start": "968720",
    "end": "975639"
  },
  {
    "text": "don't have to worry about the layers um creating a very large image if you patch",
    "start": "975639",
    "end": "980880"
  },
  {
    "text": "with Copa multiple times so some benefits of using",
    "start": "980880",
    "end": "986279"
  },
  {
    "text": "something like Copa to update your images is it's giving control to who's patching the container images so like we",
    "start": "986279",
    "end": "992759"
  },
  {
    "text": "were saying before you don't have to wait for the base image updates it's also a custom patching solution so you",
    "start": "992759",
    "end": "999720"
  },
  {
    "text": "can Target different vulnerabilities from different scan reports or Target all the outdated",
    "start": "999720",
    "end": "1005639"
  },
  {
    "text": "packages um it also reduces the time cost and complexity for patching and",
    "start": "1005639",
    "end": "1011440"
  },
  {
    "text": "since it's a single CLI tool it's easy to integrate into your pipelines so you could do a build time patch where you",
    "start": "1011440",
    "end": "1018399"
  },
  {
    "text": "patch in images before you publish them or you could do a recurring patch to scan and Patch your images weekly Copa",
    "start": "1018399",
    "end": "1026319"
  },
  {
    "text": "can also integrate with dependabot and dependabot is a tool that scans your repositories and updates outdated",
    "start": "1026319",
    "end": "1033520"
  },
  {
    "text": "dependencies through a PR so you could use that with Copa to update tags to the",
    "start": "1033520",
    "end": "1039720"
  },
  {
    "text": "Copa patched version and finally Copa can patch dress images as well so even",
    "start": "1039720",
    "end": "1045798"
  },
  {
    "text": "if the package manager isn't in the image itself Copa can download the",
    "start": "1045799",
    "end": "1050880"
  },
  {
    "text": "updates using an external tooling image some limitations of Copa are that",
    "start": "1050880",
    "end": "1057559"
  },
  {
    "text": "it can't patch app specific vulnerabilities and that's because we can't go into the source code and",
    "start": "1057559",
    "end": "1063320"
  },
  {
    "text": "rebuild our applications we also can't patch Windows images and we're dependent on the",
    "start": "1063320",
    "end": "1069440"
  },
  {
    "text": "package managers themselves so whilea can help us address",
    "start": "1069440",
    "end": "1075679"
  },
  {
    "text": "a lot of issues and vulnerabilities like we were saying before we can't update um",
    "start": "1075679",
    "end": "1081480"
  },
  {
    "text": "app level vulnerabilities and if we look back at the maturity model that's something that we want to be able to do",
    "start": "1081480",
    "end": "1087760"
  },
  {
    "text": "and rebuild from source so let's get into the rebuild it practice and see",
    "start": "1087760",
    "end": "1093120"
  },
  {
    "text": "ways we can rebuild our op source dependencies so the first thing we would",
    "start": "1093120",
    "end": "1098760"
  },
  {
    "text": "do is going back to our ingested practice which was um mirroring our",
    "start": "1098760",
    "end": "1104159"
  },
  {
    "text": "project to a source control that we use and using GitHub this is pretty easy",
    "start": "1104159",
    "end": "1109240"
  },
  {
    "text": "since we can just Fork the repo um but we can run into a problem",
    "start": "1109240",
    "end": "1114480"
  },
  {
    "text": "with this which is keeping our repos in sync so if we look here we didn't keep this repo in sync and it's almost 6,000",
    "start": "1114480",
    "end": "1122360"
  },
  {
    "text": "commits behind master and even if we do figure out a way to keep it in sync",
    "start": "1122360",
    "end": "1128240"
  },
  {
    "text": "using either manually or using the GitHub CLI we actually have to get into",
    "start": "1128240",
    "end": "1133480"
  },
  {
    "text": "building from the source and there's a lot of issues that come up when we try to do this and a lot",
    "start": "1133480",
    "end": "1139799"
  },
  {
    "text": "of questions that we have to answer so how do we know what tools and commands to use how do we know exactly what to",
    "start": "1139799",
    "end": "1147159"
  },
  {
    "text": "build how does this change between versions and how do we go about",
    "start": "1147159",
    "end": "1152559"
  },
  {
    "text": "testing so if we take a look at some of the pipelines that are handling the building we can see how this varies so",
    "start": "1152559",
    "end": "1159679"
  },
  {
    "text": "this is the psyllium Pipeline and in this case it's pretty simple we ran a make Target and we just specified the",
    "start": "1159679",
    "end": "1167440"
  },
  {
    "text": "image and the architecture and it was pretty simple um with the test and publish stages and running the",
    "start": "1167440",
    "end": "1174480"
  },
  {
    "text": "e2e test from Upstream but if we take a look at something like Envoy it could get a lot",
    "start": "1174480",
    "end": "1181159"
  },
  {
    "text": "more complicated um and that's because the build changed between versions so in the 1.25 build versus the 1.26 build we",
    "start": "1181159",
    "end": "1190360"
  },
  {
    "text": "had different requirements um and while it may seem like a simple change in the scripts the complexity can increase as",
    "start": "1190360",
    "end": "1197880"
  },
  {
    "text": "we have to answer handle different conditional logic all right so now we kind of",
    "start": "1197880",
    "end": "1204559"
  },
  {
    "text": "understand how to build things we know there's some complexity there U but we're able to do it right we can build pipelines and get up actions or we could",
    "start": "1204559",
    "end": "1210120"
  },
  {
    "text": "use Azure devops something like that uh what benefit does that give us well it lets us fix things so let's take a look",
    "start": "1210120",
    "end": "1216760"
  },
  {
    "text": "at another example so we've got um CSI Secret store driver this is a a project",
    "start": "1216760",
    "end": "1222440"
  },
  {
    "text": "that uh you've probably used or maybe maybe you've heard of uh we build it uh along with a bunch of other things in",
    "start": "1222440",
    "end": "1228520"
  },
  {
    "text": "this this case uh the Upstream project is using an older version of go so it's using go 121 which is under of Life at",
    "start": "1228520",
    "end": "1235000"
  },
  {
    "text": "this point um there are some cves in that version of go also some dependencies and trivia is going to",
    "start": "1235000",
    "end": "1241600"
  },
  {
    "text": "report that for us so this is a really good example of how we could start to fix these things when we're rebuilding",
    "start": "1241600",
    "end": "1247120"
  },
  {
    "text": "from source so how does this one get built uh well it's pretty simple again um you can",
    "start": "1247120",
    "end": "1253360"
  },
  {
    "text": "just run Docker build and use the docker file that's what the Upstream project does so that Docker file under SL doer",
    "start": "1253360",
    "end": "1259600"
  },
  {
    "text": "is where we probably can find what we need to fix and indeed if we look at",
    "start": "1259600",
    "end": "1264720"
  },
  {
    "text": "this um this Docker file we see exactly uh where the the go um image is used and",
    "start": "1264720",
    "end": "1271440"
  },
  {
    "text": "it's specifically pinned to go 121 uh revision so let's fix it we can do that",
    "start": "1271440",
    "end": "1278640"
  },
  {
    "text": "by generating a patch file so in this case all we're doing is modifying the um",
    "start": "1278640",
    "end": "1283919"
  },
  {
    "text": "the docker file to swap to use uh a newer version of go with no depend with no vulnerabilities once we rebuild using",
    "start": "1283919",
    "end": "1291240"
  },
  {
    "text": "that the exact same build process will work but we we're going to end up with something that resolves those",
    "start": "1291240",
    "end": "1297960"
  },
  {
    "text": "dependencies but doing this for a lot of projects gets complicated pretty quickly because you've got to understand the",
    "start": "1298559",
    "end": "1304440"
  },
  {
    "text": "different base images that are in use you've got to understand the the tooling that's in use you've got to understand",
    "start": "1304440",
    "end": "1309760"
  },
  {
    "text": "all these things and really as you start to build these patches out testing becomes even more important and the more",
    "start": "1309760",
    "end": "1316279"
  },
  {
    "text": "variables we've got in play tends to comp at things and make it harder to sustain that over a long term so what's",
    "start": "1316279",
    "end": "1323760"
  },
  {
    "text": "a better approach a better approach might be to take a more focused more systematic approach where we maybe focus",
    "start": "1323760",
    "end": "1330039"
  },
  {
    "text": "on a reduced set of Base images and that's probably going to require us to make changes to those projects um maybe",
    "start": "1330039",
    "end": "1335600"
  },
  {
    "text": "leveraging packages where they weren't being leveraged before minimizing dependencies maybe analyzing the",
    "start": "1335600",
    "end": "1340880"
  },
  {
    "text": "projects to figure out if there are un needed things in that base image that we can get rid of and then standardizing",
    "start": "1340880",
    "end": "1346200"
  },
  {
    "text": "the container build so we have basically one workflow for that a really good example of this in the ecosystem is what chainu guard has been",
    "start": "1346200",
    "end": "1352120"
  },
  {
    "text": "doing with chuard images if you go to their repos if you look at the the images they've got a really standardized",
    "start": "1352120",
    "end": "1357520"
  },
  {
    "text": "process built around a Linux distribution they've created or UND distribution they've created called Wolfie where they build packages for the",
    "start": "1357520",
    "end": "1363960"
  },
  {
    "text": "open source projects that they're going to produce images for and then they build really small distri list containers with just those things and",
    "start": "1363960",
    "end": "1369240"
  },
  {
    "text": "the needed dependencies and they can rebuild those things really quickly because it's a single workflow so we look we took a look at",
    "start": "1369240",
    "end": "1376159"
  },
  {
    "text": "that but we've got some other constraints that didn't really fit into that one we can't use that kind of Base image we um we need to build an Azure",
    "start": "1376159",
    "end": "1382480"
  },
  {
    "text": "Linux as our requirement but we also need to build Debian and windows things which doesn't fit into that um we have a",
    "start": "1382480",
    "end": "1388440"
  },
  {
    "text": "requirement to use trusted package managers inside we have a requirement to use mirrored sources we also have a",
    "start": "1388440",
    "end": "1394000"
  },
  {
    "text": "requirement to use Microsoft tooling like the Microsoft Fork of go so to handle that we started building",
    "start": "1394000",
    "end": "1400120"
  },
  {
    "text": "a tool again based on bukit uh think bit's pretty great called doll and what doll allows us to do is take approach",
    "start": "1400120",
    "end": "1406679"
  },
  {
    "text": "that's very similar to what chuard is doing by building system packages for those open source applications and then building dis list containers from those",
    "start": "1406679",
    "end": "1413679"
  },
  {
    "text": "things uh we can do that for Azure Linux we can do it for Debian uh we can also build Windows containers out of this as",
    "start": "1413679",
    "end": "1418919"
  },
  {
    "text": "well those are a little different but they they kind of work um this is really cool because it allows us to leverage",
    "start": "1418919",
    "end": "1424240"
  },
  {
    "text": "those uh Azure Linux packages that are internal and built and maintained by other teams so for us it's really beneficial because we can Leverage The",
    "start": "1424240",
    "end": "1431000"
  },
  {
    "text": "expertise they already are are doing because it's buildkit based we don't need any extra tooling doll is really",
    "start": "1431000",
    "end": "1436279"
  },
  {
    "text": "just a front end for buildkit it's a container um you you can basically run Docker build and we'll see that in a second and produce containers or RPMs or",
    "start": "1436279",
    "end": "1443880"
  },
  {
    "text": "Debs or zip files of Windows binaries and because it's using um bkit directly",
    "start": "1443880",
    "end": "1449919"
  },
  {
    "text": "we can get out of the box sbom and Providence generation because that's a feature that just happens to exist in",
    "start": "1449919",
    "end": "1455679"
  },
  {
    "text": "buildkit now so it's pretty cool and we use a single kind of spec file for this that's not a Docker file so we'll take a",
    "start": "1455679",
    "end": "1461679"
  },
  {
    "text": "look at that now so we start off with a declaration at the beginning of the file um this is",
    "start": "1461679",
    "end": "1467080"
  },
  {
    "text": "a syntax you use for specifying uh which build kit front end you want to use if you're building with Docker normally and",
    "start": "1467080",
    "end": "1472799"
  },
  {
    "text": "you're using a Docker file this is implicit and build kit behind the scenes knows what to do but what this does is a",
    "start": "1472799",
    "end": "1478320"
  },
  {
    "text": "struct build kit to use that container image to parse this file and turn it into all of the under the the low-level",
    "start": "1478320",
    "end": "1484559"
  },
  {
    "text": "um build statements that buildkit needs to actually produce the artifacts we have some metadata in here like what's",
    "start": "1484559",
    "end": "1490000"
  },
  {
    "text": "going to be in the package but specifically at the top we have some arguments defined that we're going to reference uh like the commit and the",
    "start": "1490000",
    "end": "1495159"
  },
  {
    "text": "arguments we make one spec file for each version that we're going to build and that allows us to patch things and produce newer visions of the RPMs over",
    "start": "1495159",
    "end": "1501520"
  },
  {
    "text": "time um and have that difference of build steps from from version to",
    "start": "1501520",
    "end": "1507919"
  },
  {
    "text": "version so again specifying the revision in the version for the package then we move into our sources uh we could have",
    "start": "1507919",
    "end": "1514279"
  },
  {
    "text": "get sources HTP sources and local in this case you can see we have a git source for the cords repo and we also",
    "start": "1514279",
    "end": "1520840"
  },
  {
    "text": "have a directory of patch files that we're going to apply then we list the build time and",
    "start": "1520840",
    "end": "1526520"
  },
  {
    "text": "runtime dependencies we build a a build container for this with only the dependencies we need um and we also",
    "start": "1526520",
    "end": "1532679"
  },
  {
    "text": "build a at the runtime just the runtime dependencies because we're using Microsoft go in a a fips kind of way we",
    "start": "1532679",
    "end": "1539080"
  },
  {
    "text": "need open SSL at at the runtime that's the only dependency that CS needs and then also the patches referenced there",
    "start": "1539080",
    "end": "1546440"
  },
  {
    "text": "um and then inside of here we've got the build steps uh you're still going to have to understand that and no matter what solution you use you have to",
    "start": "1546440",
    "end": "1552600"
  },
  {
    "text": "understand how to build the actual project that could be running a make file it could be calling go directly like this um we defined some artifacts",
    "start": "1552600",
    "end": "1559600"
  },
  {
    "text": "uh to specify what's going to be in the RPM because you you know have multiple things from what's cloned but you only want the binary in this case and that's",
    "start": "1559600",
    "end": "1566600"
  },
  {
    "text": "what's going to get installed into the container and we can do things like configure the entry point or any other thing you might see in a Docker file",
    "start": "1566600",
    "end": "1572520"
  },
  {
    "text": "like environment variables things like that and the way this works uh again is",
    "start": "1572520",
    "end": "1578320"
  },
  {
    "text": "by using the docker tooling so we take that spec and we pass it into Docker through a Docker build we specify what",
    "start": "1578320",
    "end": "1584840"
  },
  {
    "text": "file we're using just like - F Docker file whatever and then that gets passed to the buildkit front end because of",
    "start": "1584840",
    "end": "1590799"
  },
  {
    "text": "that first directive in the spec buildkit then goes and fetches the sources does the building produces the",
    "start": "1590799",
    "end": "1596480"
  },
  {
    "text": "artifacts and then you're done so we we get the artifacts back and then it's either a a container uh or pack system",
    "start": "1596480",
    "end": "1603360"
  },
  {
    "text": "package or Windows binaries could also be an RPM spec or um a Debian config",
    "start": "1603360",
    "end": "1608760"
  },
  {
    "text": "file okay so here's the demo of building with doll so we're going to look at CNS again um and again we're going to",
    "start": "1608760",
    "end": "1615159"
  },
  {
    "text": "default back to trivy to kind of kick things off",
    "start": "1615159",
    "end": "1620240"
  },
  {
    "text": "okay so we are going to skip this so we're running trivy and we can see here uh this image has a lot of",
    "start": "1620240",
    "end": "1626279"
  },
  {
    "text": "vulnerabilities in it it's pretty old though this is 194 it's a pretty old version of trivy or sorry of cordian s",
    "start": "1626279",
    "end": "1632279"
  },
  {
    "text": "so let's build it with doll and we have that patch directory and we're going to see here we're going to apply two",
    "start": "1632279",
    "end": "1637880"
  },
  {
    "text": "patches actually so let's look at the the contents of that directory um there the patch files it's going to bump the",
    "start": "1637880",
    "end": "1643240"
  },
  {
    "text": "version of go and also a number of go um dependencies in the go mod file",
    "start": "1643240",
    "end": "1648880"
  },
  {
    "text": "now we will run Docker build and we're going to request a mariner 2 container Mariner 2",
    "start": "1648880",
    "end": "1655760"
  },
  {
    "text": "is the code word for Azure Linux 2 and as that runs we're also going to ask it",
    "start": "1655760",
    "end": "1661760"
  },
  {
    "text": "for the Providence um and the sbom then we're going to tag it and we're going to",
    "start": "1661760",
    "end": "1668000"
  },
  {
    "text": "push it to a registry because it's just Docker behind the scenes so this will run and it's going to first build the",
    "start": "1668000",
    "end": "1673799"
  },
  {
    "text": "RPM and then it's going to build the container itself so we can see it's pushing that now there was a lot of cach",
    "start": "1673799",
    "end": "1679320"
  },
  {
    "text": "there so it went pretty quickly but really we were just raring Docker right so that experience is pretty simple",
    "start": "1679320",
    "end": "1684679"
  },
  {
    "text": "because of uh how we built this asking for the es bomb and the Providence information those are actually in this",
    "start": "1684679",
    "end": "1689960"
  },
  {
    "text": "case embedded into the Manifest themselves that's how Docker or how Bill kit does that instead of having them attached like we saw with AAS you could",
    "start": "1689960",
    "end": "1696640"
  },
  {
    "text": "take them out and then attach them if that's how your workflow is kind of operating now uh but this will show us",
    "start": "1696640",
    "end": "1701720"
  },
  {
    "text": "what that looks like so we see hey we've got our container image here just one architecture and then here is uh the",
    "start": "1701720",
    "end": "1708320"
  },
  {
    "text": "annotations manifest that will have the sbom and the Providence information we can then use docker's um build to the",
    "start": "1708320",
    "end": "1715519"
  },
  {
    "text": "build deex image tools command to be able to actually examine those things and see what's inside of them so here",
    "start": "1715519",
    "end": "1720960"
  },
  {
    "text": "we're going to look at the Providence information and see what materials were used to build this so this is a salsa Providence file and it's going to list",
    "start": "1720960",
    "end": "1727159"
  },
  {
    "text": "out all of the things that were used to deploy this run right there so we see uh",
    "start": "1727159",
    "end": "1732840"
  },
  {
    "text": "hey there's a digest for the doll front end that was used here is the base image that was used um another piece of the",
    "start": "1732840",
    "end": "1739080"
  },
  {
    "text": "container image and then uh the repo along with the commit that was",
    "start": "1739080",
    "end": "1744398"
  },
  {
    "text": "used so we could extract that and attach it like we did with oras um we could leave it like this it really depends on",
    "start": "1744760",
    "end": "1750559"
  },
  {
    "text": "how we want to consume those things in in that",
    "start": "1750559",
    "end": "1754519"
  },
  {
    "text": "workflow okay so what did we learn what we go over today I think we kind of had a whirlwind tour of many tools um but",
    "start": "1756039",
    "end": "1763799"
  },
  {
    "text": "some important things to take away from this uh you should mirror your OSS dependencies I if it's as simple as copying the",
    "start": "1763799",
    "end": "1770640"
  },
  {
    "text": "container images into a registry that you control that will save you trouble whether it's avoiding Docker Hub rate",
    "start": "1770640",
    "end": "1776559"
  },
  {
    "text": "limitations or whether it's uh the kubernetes project migrating from kes. gc. to registry. kes. do the same thing",
    "start": "1776559",
    "end": "1784399"
  },
  {
    "text": "for binaries and packages that will help you out a lot you want to start scanning and signing those things after you're",
    "start": "1784399",
    "end": "1790159"
  },
  {
    "text": "ingesting them because it's going to give you a lot more assurances about what you're using and and a better feeling uh more protection about um you",
    "start": "1790159",
    "end": "1797799"
  },
  {
    "text": "know those things being injected or intercepted or modified Copo will help you with patching but it's only going to",
    "start": "1797799",
    "end": "1804159"
  },
  {
    "text": "really help you with patching open source dependencies building from source is a a much better idea but it's also",
    "start": "1804159",
    "end": "1810600"
  },
  {
    "text": "not free there's a lot of complexity and a lot of steps that come into that so make sure if you're going to go that route that you allocate resources if you",
    "start": "1810600",
    "end": "1818720"
  },
  {
    "text": "want the similar kind of thing and you want to pay for it chain guard is a great place to go for",
    "start": "1818720",
    "end": "1824559"
  },
  {
    "text": "that some links uh if you want to take a look at any of the projects we talked about today you can find them here um",
    "start": "1825320",
    "end": "1831320"
  },
  {
    "text": "they're also on the slides that are uploaded to the session and the last slide has a survey so if you want to",
    "start": "1831320",
    "end": "1836760"
  },
  {
    "text": "give us feedback on the session we'd love to hear it you can use this QR code to access the the survey feedback um and",
    "start": "1836760",
    "end": "1843000"
  },
  {
    "text": "with that we've got like four minutes left anybody has questions we'd love to to answer them uh if not you can step",
    "start": "1843000",
    "end": "1849000"
  },
  {
    "text": "down to the side at the end so there's a microphone if you could go to the mics I think that would be best it'll show up on the",
    "start": "1849000",
    "end": "1855440"
  },
  {
    "text": "recording hi s your presentation so do you have a registry or images built with",
    "start": "1855440",
    "end": "1864519"
  },
  {
    "text": "azur direct yeah we are starting to produce those and they are in um the",
    "start": "1864519",
    "end": "1870639"
  },
  {
    "text": "Microsoft artifact registry or or it's still called MCR microsoft.com um these",
    "start": "1870639",
    "end": "1876320"
  },
  {
    "text": "are the things that are going to be used inside of AKs or other Azure Services um",
    "start": "1876320",
    "end": "1882120"
  },
  {
    "text": "they're available at I think Sloss slv2 and the name of the project name of the",
    "start": "1882120",
    "end": "1887760"
  },
  {
    "text": "IM image um so they're already being published to tomorrow today so uh what kind of images do you have um so so far",
    "start": "1887760",
    "end": "1895200"
  },
  {
    "text": "we've got kuber's images uh cordian S as an example eraser there's a copacetic",
    "start": "1895200",
    "end": "1900320"
  },
  {
    "text": "image um basically our team is responsible for building and Publishing uh anything in the cncf ecosystem that's",
    "start": "1900320",
    "end": "1906880"
  },
  {
    "text": "going to get consumed with inside of azure and they're all going to go through this workflow thanks so I was",
    "start": "1906880",
    "end": "1911960"
  },
  {
    "text": "wondering if uh you interested in distributing uh compil images such as uh",
    "start": "1911960",
    "end": "1919559"
  },
  {
    "text": "gang go or C compus or JD we we don't",
    "start": "1919559",
    "end": "1925080"
  },
  {
    "text": "handle those so those aren't in the cncf ecosystem really um we are building go",
    "start": "1925080",
    "end": "1930200"
  },
  {
    "text": "packages though so we are building Microsoft go uh for Debian and Ubuntu um",
    "start": "1930200",
    "end": "1936240"
  },
  {
    "text": "with with alic for use inside of Asher s yeah uh if somebody was just wanting",
    "start": "1936240",
    "end": "1945039"
  },
  {
    "text": "to get started you know like you have uh you have Docker files in a repo and you know you know how to go and manually",
    "start": "1945039",
    "end": "1952440"
  },
  {
    "text": "change the base image update do you but you want to do the next thing um you know you gave a lot of great options",
    "start": "1952440",
    "end": "1958480"
  },
  {
    "text": "here what would you say to do first I think having the ability to to mirror",
    "start": "1958480",
    "end": "1964519"
  },
  {
    "text": "the source and build from that and publish for your own consumption even if it's just using the Upstream builds is a",
    "start": "1964519",
    "end": "1970760"
  },
  {
    "text": "super good step um the complexity with like switching the base images is going to come down to how do I keep that in",
    "start": "1970760",
    "end": "1976919"
  },
  {
    "text": "sync with the upst screen Fork right um it's it's easy to sync a",
    "start": "1976919",
    "end": "1982000"
  },
  {
    "text": "repo when there are no divergences in the branch but once you start actually making changes to that fork that just",
    "start": "1982000",
    "end": "1987960"
  },
  {
    "text": "builds builds more um more work in for you so starting with being able to build",
    "start": "1987960",
    "end": "1994360"
  },
  {
    "text": "from that Upstream project and understanding how to do that is is a really really great first step um going",
    "start": "1994360",
    "end": "2001039"
  },
  {
    "text": "to that next level uh figuring out a strategy to how to handle when you're",
    "start": "2001039",
    "end": "2006080"
  },
  {
    "text": "deviating from from Upstream is going mute your best next step thank",
    "start": "2006080",
    "end": "2012080"
  },
  {
    "text": "you all right well if anybody has any questions after this we will hang out to the side you can come over and ask us",
    "start": "2015200",
    "end": "2020960"
  },
  {
    "text": "and we'd be happy to chat more thanks thank you",
    "start": "2020960",
    "end": "2026559"
  }
]