[
  {
    "text": "hello folks thank you for attending on",
    "start": "1199",
    "end": "3280"
  },
  {
    "text": "my presentation",
    "start": "3280",
    "end": "4319"
  },
  {
    "text": "called logging operator the cloud native",
    "start": "4319",
    "end": "6720"
  },
  {
    "text": "fluent ecosystem",
    "start": "6720",
    "end": "8320"
  },
  {
    "text": "it's not a big secret we will talk about",
    "start": "8320",
    "end": "10480"
  },
  {
    "text": "fluent bits fluenty",
    "start": "10480",
    "end": "12080"
  },
  {
    "text": "and kubernetes just a couple of thoughts",
    "start": "12080",
    "end": "15040"
  },
  {
    "text": "about me i was working as an",
    "start": "15040",
    "end": "16960"
  },
  {
    "text": "infrastructure engineer at ustream",
    "start": "16960",
    "end": "18880"
  },
  {
    "text": "acquired by ibm and after that we",
    "start": "18880",
    "end": "21600"
  },
  {
    "text": "founded bonsai cloud",
    "start": "21600",
    "end": "23039"
  },
  {
    "text": "with my friends and it's recently",
    "start": "23039",
    "end": "25680"
  },
  {
    "text": "acquired by cisco",
    "start": "25680",
    "end": "27279"
  },
  {
    "text": "i have several years of experience in",
    "start": "27279",
    "end": "29279"
  },
  {
    "text": "the observability field",
    "start": "29279",
    "end": "31199"
  },
  {
    "text": "we've been operating kubernetes cluster",
    "start": "31199",
    "end": "33520"
  },
  {
    "text": "since version 1.4",
    "start": "33520",
    "end": "35680"
  },
  {
    "text": "and i have personally more than 5 years",
    "start": "35680",
    "end": "38640"
  },
  {
    "text": "experience with the fluent ecosystem",
    "start": "38640",
    "end": "41360"
  },
  {
    "text": "at bonsai cloud i wanted to pour all",
    "start": "41360",
    "end": "43600"
  },
  {
    "text": "that experience",
    "start": "43600",
    "end": "44480"
  },
  {
    "text": "into software and that's what i will",
    "start": "44480",
    "end": "46480"
  },
  {
    "text": "talk about today",
    "start": "46480",
    "end": "48239"
  },
  {
    "text": "so let's start at the beginning with the",
    "start": "48239",
    "end": "49760"
  },
  {
    "text": "kubernetes part",
    "start": "49760",
    "end": "51360"
  },
  {
    "text": "kubernetes doesn't have too many options",
    "start": "51360",
    "end": "53760"
  },
  {
    "text": "when it comes to logging",
    "start": "53760",
    "end": "55280"
  },
  {
    "text": "the container runtime stores each port's",
    "start": "55280",
    "end": "57680"
  },
  {
    "text": "standard output",
    "start": "57680",
    "end": "58800"
  },
  {
    "text": "in a file on the host disk when a user",
    "start": "58800",
    "end": "61760"
  },
  {
    "text": "uses the cube ctel logs command",
    "start": "61760",
    "end": "63680"
  },
  {
    "text": "the cubelet service goes to this",
    "start": "63680",
    "end": "65439"
  },
  {
    "text": "well-known path",
    "start": "65439",
    "end": "66799"
  },
  {
    "text": "and reads up the logs from that file",
    "start": "66799",
    "end": "69280"
  },
  {
    "text": "simple as that",
    "start": "69280",
    "end": "71520"
  },
  {
    "text": "and that's it there is nothing much you",
    "start": "71520",
    "end": "73680"
  },
  {
    "text": "can change about that",
    "start": "73680",
    "end": "75280"
  },
  {
    "text": "so what are the problems with this first",
    "start": "75280",
    "end": "77759"
  },
  {
    "text": "logs are stored locally on a host file",
    "start": "77759",
    "end": "79759"
  },
  {
    "text": "system",
    "start": "79759",
    "end": "80720"
  },
  {
    "text": "these logs eventually get rotated or",
    "start": "80720",
    "end": "83119"
  },
  {
    "text": "they refill the node disk",
    "start": "83119",
    "end": "85119"
  },
  {
    "text": "and second be honest the cube cattle",
    "start": "85119",
    "end": "87119"
  },
  {
    "text": "command is not always the way you want",
    "start": "87119",
    "end": "89200"
  },
  {
    "text": "to consume your logs",
    "start": "89200",
    "end": "91360"
  },
  {
    "text": "so eventually you want to ship them to",
    "start": "91360",
    "end": "93680"
  },
  {
    "text": "your preferred location",
    "start": "93680",
    "end": "94960"
  },
  {
    "text": "or service of course this solution raise",
    "start": "94960",
    "end": "97840"
  },
  {
    "text": "several questions",
    "start": "97840",
    "end": "99200"
  },
  {
    "text": "to access the host file system you need",
    "start": "99200",
    "end": "101280"
  },
  {
    "text": "privileged containers",
    "start": "101280",
    "end": "102880"
  },
  {
    "text": "moreover there is no separation this",
    "start": "102880",
    "end": "105759"
  },
  {
    "text": "method doesn't respect the kubernetes",
    "start": "105759",
    "end": "107840"
  },
  {
    "text": "boundaries",
    "start": "107840",
    "end": "108560"
  },
  {
    "text": "like namespaces or airbag",
    "start": "108560",
    "end": "111840"
  },
  {
    "text": "but let's see how this would look like",
    "start": "111840",
    "end": "114079"
  },
  {
    "text": "first you have a kubernetes cluster",
    "start": "114079",
    "end": "116320"
  },
  {
    "text": "after that you deploy a daemon set",
    "start": "116320",
    "end": "118159"
  },
  {
    "text": "collecting and sending locks",
    "start": "118159",
    "end": "119680"
  },
  {
    "text": "individually",
    "start": "119680",
    "end": "120880"
  },
  {
    "text": "but if you realize you want to batch",
    "start": "120880",
    "end": "122719"
  },
  {
    "text": "your logs for performance or other",
    "start": "122719",
    "end": "124640"
  },
  {
    "text": "reasons",
    "start": "124640",
    "end": "125439"
  },
  {
    "text": "you will need an aggregator later you",
    "start": "125439",
    "end": "128399"
  },
  {
    "text": "may want to send a portion of logs to",
    "start": "128399",
    "end": "130479"
  },
  {
    "text": "different endpoints as well",
    "start": "130479",
    "end": "132400"
  },
  {
    "text": "at the end of the day you end up",
    "start": "132400",
    "end": "134160"
  },
  {
    "text": "hundreds of rows of configuration",
    "start": "134160",
    "end": "136560"
  },
  {
    "text": "and a big bunch of them are copy pasted",
    "start": "136560",
    "end": "138800"
  },
  {
    "text": "not mentioned managing secrets and other",
    "start": "138800",
    "end": "141200"
  },
  {
    "text": "variables",
    "start": "141200",
    "end": "142480"
  },
  {
    "text": "this was our first approach as well and",
    "start": "142480",
    "end": "144400"
  },
  {
    "text": "we wanted to simplify the solution",
    "start": "144400",
    "end": "147599"
  },
  {
    "text": "the first version of the logging",
    "start": "147599",
    "end": "149280"
  },
  {
    "text": "operator was born",
    "start": "149280",
    "end": "151360"
  },
  {
    "text": "the goal is to automate configuration",
    "start": "151360",
    "end": "153920"
  },
  {
    "text": "generation",
    "start": "153920",
    "end": "154720"
  },
  {
    "text": "from fluent bit fluently and handle them",
    "start": "154720",
    "end": "157680"
  },
  {
    "text": "as kubernetes resources",
    "start": "157680",
    "end": "159760"
  },
  {
    "text": "with a really simple custom resource you",
    "start": "159760",
    "end": "162239"
  },
  {
    "text": "could save a lot of manual deployment",
    "start": "162239",
    "end": "164400"
  },
  {
    "text": "and configuration",
    "start": "164400",
    "end": "166319"
  },
  {
    "text": "it was watching for resource changes and",
    "start": "166319",
    "end": "168959"
  },
  {
    "text": "pulled credentials",
    "start": "168959",
    "end": "170000"
  },
  {
    "text": "from kubernetes secrets the first",
    "start": "170000",
    "end": "172480"
  },
  {
    "text": "version had some strong resolutions",
    "start": "172480",
    "end": "174879"
  },
  {
    "text": "it utilized fluent tags for routing and",
    "start": "174879",
    "end": "177760"
  },
  {
    "text": "it allowed",
    "start": "177760",
    "end": "178640"
  },
  {
    "text": "using kubernetes pods app labels only as",
    "start": "178640",
    "end": "181680"
  },
  {
    "text": "tag",
    "start": "181680",
    "end": "183599"
  },
  {
    "text": "even with those restrictions it's",
    "start": "183599",
    "end": "185519"
  },
  {
    "text": "already lifted tremendous amount of work",
    "start": "185519",
    "end": "187760"
  },
  {
    "text": "from the operator's shoulder it was a",
    "start": "187760",
    "end": "189920"
  },
  {
    "text": "big success for us",
    "start": "189920",
    "end": "192000"
  },
  {
    "text": "and as more and more community gathered",
    "start": "192000",
    "end": "194480"
  },
  {
    "text": "around",
    "start": "194480",
    "end": "195120"
  },
  {
    "text": "it helped us identify the pain points of",
    "start": "195120",
    "end": "197440"
  },
  {
    "text": "this solution",
    "start": "197440",
    "end": "199599"
  },
  {
    "text": "so after validating the use cases we set",
    "start": "199599",
    "end": "202239"
  },
  {
    "text": "back to the planning table",
    "start": "202239",
    "end": "203920"
  },
  {
    "text": "and drafted the second version of the",
    "start": "203920",
    "end": "206000"
  },
  {
    "text": "logging operator",
    "start": "206000",
    "end": "207519"
  },
  {
    "text": "we had a couple of strong requirements",
    "start": "207519",
    "end": "209440"
  },
  {
    "text": "in mind namespace isolation",
    "start": "209440",
    "end": "212400"
  },
  {
    "text": "kubernetes label selectors the same way",
    "start": "212400",
    "end": "214879"
  },
  {
    "text": "as kubernetes service or cube catalog",
    "start": "214879",
    "end": "217040"
  },
  {
    "text": "command works",
    "start": "217040",
    "end": "218480"
  },
  {
    "text": "and multiple flow and multiple output",
    "start": "218480",
    "end": "220799"
  },
  {
    "text": "support",
    "start": "220799",
    "end": "222799"
  },
  {
    "text": "so roughly a year later in september",
    "start": "222799",
    "end": "225599"
  },
  {
    "text": "2019",
    "start": "225599",
    "end": "226720"
  },
  {
    "text": "we came out with the new custom",
    "start": "226720",
    "end": "228319"
  },
  {
    "text": "resources a new core model",
    "start": "228319",
    "end": "230560"
  },
  {
    "text": "to be more kubernetes like let's see how",
    "start": "230560",
    "end": "233599"
  },
  {
    "text": "this works",
    "start": "233599",
    "end": "234400"
  },
  {
    "text": "in the logging pipeline note that the",
    "start": "234400",
    "end": "237040"
  },
  {
    "text": "following principles",
    "start": "237040",
    "end": "238400"
  },
  {
    "text": "are still the base foundation of version",
    "start": "238400",
    "end": "240720"
  },
  {
    "text": "3 as well",
    "start": "240720",
    "end": "242159"
  },
  {
    "text": "we collect all logs with fluent bit our",
    "start": "242159",
    "end": "245439"
  },
  {
    "text": "labor router plugin",
    "start": "245439",
    "end": "246799"
  },
  {
    "text": "identifies log flows based on kubernetes",
    "start": "246799",
    "end": "250080"
  },
  {
    "text": "metadata",
    "start": "250080",
    "end": "251360"
  },
  {
    "text": "this enables the logging operator to",
    "start": "251360",
    "end": "254000"
  },
  {
    "text": "root logs",
    "start": "254000",
    "end": "254799"
  },
  {
    "text": "based on arbitrary port labels",
    "start": "254799",
    "end": "257840"
  },
  {
    "text": "so how is this represented in the custom",
    "start": "257840",
    "end": "260160"
  },
  {
    "text": "resource",
    "start": "260160",
    "end": "261359"
  },
  {
    "text": "flow defines the login flow you have two",
    "start": "261359",
    "end": "263840"
  },
  {
    "text": "options",
    "start": "263840",
    "end": "264880"
  },
  {
    "text": "use the flow definition in the namespace",
    "start": "264880",
    "end": "267680"
  },
  {
    "text": "or a cluster flow",
    "start": "267680",
    "end": "269040"
  },
  {
    "text": "across namespaces in a flow you can use",
    "start": "269040",
    "end": "272240"
  },
  {
    "text": "kubernetes like label selectors to",
    "start": "272240",
    "end": "274160"
  },
  {
    "text": "select the relevant logs",
    "start": "274160",
    "end": "276080"
  },
  {
    "text": "empty selectors mean all pods within a",
    "start": "276080",
    "end": "278560"
  },
  {
    "text": "namespace",
    "start": "278560",
    "end": "279360"
  },
  {
    "text": "or within a cluster after selecting the",
    "start": "279360",
    "end": "282720"
  },
  {
    "text": "relevant logs",
    "start": "282720",
    "end": "284000"
  },
  {
    "text": "you can apply fluency filters on them",
    "start": "284000",
    "end": "287120"
  },
  {
    "text": "in the custom resource you can define",
    "start": "287120",
    "end": "289120"
  },
  {
    "text": "several individual filter",
    "start": "289120",
    "end": "290960"
  },
  {
    "text": "in order typical examples are",
    "start": "290960",
    "end": "294080"
  },
  {
    "text": "parsers parameters metric exporter",
    "start": "294080",
    "end": "297360"
  },
  {
    "text": "or gel ip filter the last section",
    "start": "297360",
    "end": "300639"
  },
  {
    "text": "of the flow custom resource is the",
    "start": "300639",
    "end": "302880"
  },
  {
    "text": "output reference",
    "start": "302880",
    "end": "304320"
  },
  {
    "text": "you can define local output for outputs",
    "start": "304320",
    "end": "306720"
  },
  {
    "text": "in a namespace",
    "start": "306720",
    "end": "308000"
  },
  {
    "text": "or global outputs for cluster output",
    "start": "308000",
    "end": "310720"
  },
  {
    "text": "resources",
    "start": "310720",
    "end": "312000"
  },
  {
    "text": "it is possible to define more than one",
    "start": "312000",
    "end": "314320"
  },
  {
    "text": "output for a flow",
    "start": "314320",
    "end": "316320"
  },
  {
    "text": "there is one missing piece of the",
    "start": "316320",
    "end": "317840"
  },
  {
    "text": "locking pipeline we need to define the",
    "start": "317840",
    "end": "320320"
  },
  {
    "text": "outputs as well",
    "start": "320320",
    "end": "322479"
  },
  {
    "text": "similarly to flow and class airflow",
    "start": "322479",
    "end": "324880"
  },
  {
    "text": "there is an output",
    "start": "324880",
    "end": "326080"
  },
  {
    "text": "and cluster output when you configure",
    "start": "326080",
    "end": "328639"
  },
  {
    "text": "the output parameters",
    "start": "328639",
    "end": "330240"
  },
  {
    "text": "you can inject sensitive data from",
    "start": "330240",
    "end": "332320"
  },
  {
    "text": "kubernetes secrets",
    "start": "332320",
    "end": "334160"
  },
  {
    "text": "you just need to refer to them like you",
    "start": "334160",
    "end": "336479"
  },
  {
    "text": "would do in a pod definition",
    "start": "336479",
    "end": "339280"
  },
  {
    "text": "after you apply those custom resources",
    "start": "339280",
    "end": "341440"
  },
  {
    "text": "there is one more step",
    "start": "341440",
    "end": "342720"
  },
  {
    "text": "the operator will do it will create a",
    "start": "342720",
    "end": "345520"
  },
  {
    "text": "configuration checkpoint",
    "start": "345520",
    "end": "347520"
  },
  {
    "text": "for the system integrity only open a",
    "start": "347520",
    "end": "350560"
  },
  {
    "text": "successful configuration",
    "start": "350560",
    "end": "352000"
  },
  {
    "text": "check will the operator swap the active",
    "start": "352000",
    "end": "354479"
  },
  {
    "text": "configuration to the new configuration",
    "start": "354479",
    "end": "357199"
  },
  {
    "text": "this check runs on every changes on the",
    "start": "357199",
    "end": "359680"
  },
  {
    "text": "custom resources",
    "start": "359680",
    "end": "361600"
  },
  {
    "text": "we arrived at the last station of the",
    "start": "361600",
    "end": "363520"
  },
  {
    "text": "logging operator",
    "start": "363520",
    "end": "364960"
  },
  {
    "text": "the core concepts remain the same but we",
    "start": "364960",
    "end": "367199"
  },
  {
    "text": "released the version 3 on march 2020",
    "start": "367199",
    "end": "370639"
  },
  {
    "text": "we added several commonly driven new",
    "start": "370639",
    "end": "372560"
  },
  {
    "text": "features like not just selecting",
    "start": "372560",
    "end": "375120"
  },
  {
    "text": "but excluding logs from a flow namespace",
    "start": "375120",
    "end": "377919"
  },
  {
    "text": "filter for cluster flows and default",
    "start": "377919",
    "end": "380479"
  },
  {
    "text": "flow",
    "start": "380479",
    "end": "381120"
  },
  {
    "text": "for the leftover data that haven't",
    "start": "381120",
    "end": "383440"
  },
  {
    "text": "matched any other logging flows",
    "start": "383440",
    "end": "386000"
  },
  {
    "text": "i'm happy that the operator reached more",
    "start": "386000",
    "end": "388400"
  },
  {
    "text": "than 600 github stars",
    "start": "388400",
    "end": "390479"
  },
  {
    "text": "have an active slack community and if",
    "start": "390479",
    "end": "392720"
  },
  {
    "text": "you are using wrencher",
    "start": "392720",
    "end": "394080"
  },
  {
    "text": "from version 2.5 and above you already",
    "start": "394080",
    "end": "397199"
  },
  {
    "text": "using logging operator",
    "start": "397199",
    "end": "398800"
  },
  {
    "text": "as it is the default logging backend for",
    "start": "398800",
    "end": "400639"
  },
  {
    "text": "it",
    "start": "400639",
    "end": "401840"
  },
  {
    "text": "okay so how does this look in practice",
    "start": "401840",
    "end": "404560"
  },
  {
    "text": "let's see a small demo",
    "start": "404560",
    "end": "407600"
  },
  {
    "text": "so as a first step i will install the",
    "start": "407600",
    "end": "409520"
  },
  {
    "text": "logging operator",
    "start": "409520",
    "end": "410720"
  },
  {
    "text": "using the one icli tool vana is actually",
    "start": "410720",
    "end": "414080"
  },
  {
    "text": "not just a cli",
    "start": "414080",
    "end": "415280"
  },
  {
    "text": "but an operator as well it helps us",
    "start": "415280",
    "end": "418080"
  },
  {
    "text": "manage",
    "start": "418080",
    "end": "418639"
  },
  {
    "text": "many observability related tools on",
    "start": "418639",
    "end": "421599"
  },
  {
    "text": "kubernetes",
    "start": "421599",
    "end": "424240"
  },
  {
    "text": "moreover one eye will visualize for us",
    "start": "424240",
    "end": "427360"
  },
  {
    "text": "the resources we create to manage the",
    "start": "427360",
    "end": "429680"
  },
  {
    "text": "logging operator",
    "start": "429680",
    "end": "431120"
  },
  {
    "text": "it's an easy way to keep track of what",
    "start": "431120",
    "end": "433919"
  },
  {
    "text": "do",
    "start": "433919",
    "end": "434479"
  },
  {
    "text": "where and then in the system",
    "start": "434479",
    "end": "438639"
  },
  {
    "text": "the first task after install is to",
    "start": "438639",
    "end": "441039"
  },
  {
    "text": "configure",
    "start": "441039",
    "end": "441759"
  },
  {
    "text": "the logging resource configuring logging",
    "start": "441759",
    "end": "444880"
  },
  {
    "text": "resource is pretty easy",
    "start": "444880",
    "end": "446639"
  },
  {
    "text": "we got a good template for it that we",
    "start": "446639",
    "end": "449520"
  },
  {
    "text": "can decide to edit or not",
    "start": "449520",
    "end": "451360"
  },
  {
    "text": "and after that simply just apply to the",
    "start": "451360",
    "end": "453680"
  },
  {
    "text": "system",
    "start": "453680",
    "end": "456160"
  },
  {
    "text": "so after creating the logging resource",
    "start": "456240",
    "end": "458400"
  },
  {
    "text": "we can create our first",
    "start": "458400",
    "end": "459759"
  },
  {
    "text": "output as well let's create a cluster",
    "start": "459759",
    "end": "463039"
  },
  {
    "text": "output",
    "start": "463039",
    "end": "463759"
  },
  {
    "text": "with type s3 for aws object store",
    "start": "463759",
    "end": "468000"
  },
  {
    "text": "and select the packet name like cubicle",
    "start": "468000",
    "end": "471520"
  },
  {
    "text": "test packet and choose a region",
    "start": "471520",
    "end": "474560"
  },
  {
    "text": "like us1 for this bucket",
    "start": "474560",
    "end": "478080"
  },
  {
    "text": "after that one i will know",
    "start": "478080",
    "end": "481199"
  },
  {
    "text": "that i set my aws credentials in my",
    "start": "481199",
    "end": "484080"
  },
  {
    "text": "environment",
    "start": "484080",
    "end": "484960"
  },
  {
    "text": "and create a kubernetes secret from them",
    "start": "484960",
    "end": "487919"
  },
  {
    "text": "with that secret",
    "start": "487919",
    "end": "489120"
  },
  {
    "text": "it will create my output",
    "start": "489120",
    "end": "492160"
  },
  {
    "text": "after that we have to create a",
    "start": "492160",
    "end": "493759"
  },
  {
    "text": "clusterful resource",
    "start": "493759",
    "end": "495840"
  },
  {
    "text": "the cluster flow resource needed cluster",
    "start": "495840",
    "end": "498879"
  },
  {
    "text": "output",
    "start": "498879",
    "end": "499840"
  },
  {
    "text": "we chose the s3 output that we just",
    "start": "499840",
    "end": "502720"
  },
  {
    "text": "created",
    "start": "502720",
    "end": "503919"
  },
  {
    "text": "and if we accept the template it's just",
    "start": "503919",
    "end": "506560"
  },
  {
    "text": "ready to go",
    "start": "506560",
    "end": "507520"
  },
  {
    "text": "and if you apply to the cluster it",
    "start": "507520",
    "end": "510160"
  },
  {
    "text": "stores the locks",
    "start": "510160",
    "end": "512560"
  },
  {
    "text": "checking the created resources is pretty",
    "start": "512560",
    "end": "515039"
  },
  {
    "text": "easy",
    "start": "515039",
    "end": "515680"
  },
  {
    "text": "you can use the cubed cattle get logging",
    "start": "515680",
    "end": "518080"
  },
  {
    "text": "or command",
    "start": "518080",
    "end": "519200"
  },
  {
    "text": "to print out all the information from",
    "start": "519200",
    "end": "521039"
  },
  {
    "text": "the logging resources",
    "start": "521039",
    "end": "522640"
  },
  {
    "text": "moreover when i provide a one eye",
    "start": "522640",
    "end": "524959"
  },
  {
    "text": "ingress connect command",
    "start": "524959",
    "end": "526560"
  },
  {
    "text": "to connect to the web ui on the web ui",
    "start": "526560",
    "end": "529760"
  },
  {
    "text": "we can visualize the flows outputs that",
    "start": "529760",
    "end": "532880"
  },
  {
    "text": "we just created",
    "start": "532880",
    "end": "534399"
  },
  {
    "text": "and have a brief monitoring information",
    "start": "534399",
    "end": "537200"
  },
  {
    "text": "as well",
    "start": "537200",
    "end": "539040"
  },
  {
    "text": "so let's see a more complex example for",
    "start": "539040",
    "end": "541920"
  },
  {
    "text": "this i will",
    "start": "541920",
    "end": "542720"
  },
  {
    "text": "install the one analog generator tool",
    "start": "542720",
    "end": "545279"
  },
  {
    "text": "which will produce",
    "start": "545279",
    "end": "546399"
  },
  {
    "text": "engine access logs in a controlled way",
    "start": "546399",
    "end": "551200"
  },
  {
    "text": "so now i will set it to 1 request per",
    "start": "551200",
    "end": "554080"
  },
  {
    "text": "second",
    "start": "554080",
    "end": "555440"
  },
  {
    "text": "after that we will create an output",
    "start": "555440",
    "end": "558480"
  },
  {
    "text": "and the flow to count all the requests",
    "start": "558480",
    "end": "561920"
  },
  {
    "text": "with response",
    "start": "561920",
    "end": "562880"
  },
  {
    "text": "codes and expose them as prometheus",
    "start": "562880",
    "end": "566560"
  },
  {
    "text": "metrics",
    "start": "566560",
    "end": "569200"
  },
  {
    "text": "to achieve this first we have to create",
    "start": "569680",
    "end": "572160"
  },
  {
    "text": "an output",
    "start": "572160",
    "end": "573600"
  },
  {
    "text": "for this case we will create a null",
    "start": "573600",
    "end": "575760"
  },
  {
    "text": "output",
    "start": "575760",
    "end": "576800"
  },
  {
    "text": "this is a special case because it",
    "start": "576800",
    "end": "579279"
  },
  {
    "text": "doesn't really",
    "start": "579279",
    "end": "580240"
  },
  {
    "text": "transfer the logs anywhere instead just",
    "start": "580240",
    "end": "583040"
  },
  {
    "text": "drops them",
    "start": "583040",
    "end": "584480"
  },
  {
    "text": "but it's really useful if you have a",
    "start": "584480",
    "end": "586399"
  },
  {
    "text": "filter that produce",
    "start": "586399",
    "end": "588240"
  },
  {
    "text": "output itself and you don't really need",
    "start": "588240",
    "end": "591200"
  },
  {
    "text": "your logs",
    "start": "591200",
    "end": "592480"
  },
  {
    "text": "it also means that we don't have to",
    "start": "592480",
    "end": "594640"
  },
  {
    "text": "specify",
    "start": "594640",
    "end": "595680"
  },
  {
    "text": "any parameter for this output we just",
    "start": "595680",
    "end": "598720"
  },
  {
    "text": "need to",
    "start": "598720",
    "end": "599440"
  },
  {
    "text": "apply to the cluster and it's ready to",
    "start": "599440",
    "end": "602079"
  },
  {
    "text": "use by any of the flow we will create",
    "start": "602079",
    "end": "604640"
  },
  {
    "text": "later",
    "start": "604640",
    "end": "606959"
  },
  {
    "text": "now we have to create the flow resource",
    "start": "610880",
    "end": "614160"
  },
  {
    "text": "the flow resource is really similar to",
    "start": "614160",
    "end": "616800"
  },
  {
    "text": "the output resource",
    "start": "616800",
    "end": "618560"
  },
  {
    "text": "we have the same api group",
    "start": "618560",
    "end": "621680"
  },
  {
    "text": "and we specify the kind flow",
    "start": "621680",
    "end": "625200"
  },
  {
    "text": "and give it a name like this is our",
    "start": "625200",
    "end": "629680"
  },
  {
    "text": "access log flow and after that",
    "start": "629680",
    "end": "633120"
  },
  {
    "text": "we have to specify what filters we want",
    "start": "633120",
    "end": "635920"
  },
  {
    "text": "to apply",
    "start": "635920",
    "end": "637200"
  },
  {
    "text": "as we talked about it's an nginx access",
    "start": "637200",
    "end": "640320"
  },
  {
    "text": "log",
    "start": "640320",
    "end": "640959"
  },
  {
    "text": "and fluentd has a built-in parser for",
    "start": "640959",
    "end": "643360"
  },
  {
    "text": "nginx",
    "start": "643360",
    "end": "644240"
  },
  {
    "text": "so we can use the parse type nginx",
    "start": "644240",
    "end": "647920"
  },
  {
    "text": "for this kind of resource we have two",
    "start": "647920",
    "end": "651440"
  },
  {
    "text": "more",
    "start": "651440",
    "end": "652160"
  },
  {
    "text": "important attributes to add the remove",
    "start": "652160",
    "end": "654959"
  },
  {
    "text": "key",
    "start": "654959",
    "end": "655519"
  },
  {
    "text": "name field is removing the original",
    "start": "655519",
    "end": "659440"
  },
  {
    "text": "message from the log",
    "start": "659440",
    "end": "661200"
  },
  {
    "text": "and the reserve data to",
    "start": "661200",
    "end": "664959"
  },
  {
    "text": "means that we want to keep the",
    "start": "664959",
    "end": "667600"
  },
  {
    "text": "kubernetes metadata",
    "start": "667600",
    "end": "669440"
  },
  {
    "text": "next to our log after that we",
    "start": "669440",
    "end": "673040"
  },
  {
    "text": "specified the match section to select",
    "start": "673040",
    "end": "676320"
  },
  {
    "text": "only the logs that match the labels",
    "start": "676320",
    "end": "679600"
  },
  {
    "text": "app dot kubernetes dot io",
    "start": "679600",
    "end": "682880"
  },
  {
    "text": "per name log generator",
    "start": "682880",
    "end": "686640"
  },
  {
    "text": "this will only fix the log that we",
    "start": "686640",
    "end": "689279"
  },
  {
    "text": "really need",
    "start": "689279",
    "end": "692000"
  },
  {
    "text": "the last thing we have to specify is the",
    "start": "692880",
    "end": "696079"
  },
  {
    "text": "output itself",
    "start": "696079",
    "end": "697600"
  },
  {
    "text": "and we can use our terminal output that",
    "start": "697600",
    "end": "700079"
  },
  {
    "text": "we just created",
    "start": "700079",
    "end": "703440"
  },
  {
    "text": "as we finish creating the resource we",
    "start": "703440",
    "end": "706079"
  },
  {
    "text": "just need to apply it to the cluster",
    "start": "706079",
    "end": "710240"
  },
  {
    "text": "so now we have a valid output and the",
    "start": "712480",
    "end": "714560"
  },
  {
    "text": "volley full as well",
    "start": "714560",
    "end": "716560"
  },
  {
    "text": "but it's not enough to expose metrics to",
    "start": "716560",
    "end": "719600"
  },
  {
    "text": "do that",
    "start": "719600",
    "end": "720480"
  },
  {
    "text": "we have to add another filter called",
    "start": "720480",
    "end": "722959"
  },
  {
    "text": "prometheus",
    "start": "722959",
    "end": "724480"
  },
  {
    "text": "in the parameters filter we have to",
    "start": "724480",
    "end": "726399"
  },
  {
    "text": "define metrics",
    "start": "726399",
    "end": "728079"
  },
  {
    "text": "the matrix should have a name let's have",
    "start": "728079",
    "end": "731360"
  },
  {
    "text": "a name",
    "start": "731360",
    "end": "732040"
  },
  {
    "text": "http response",
    "start": "732040",
    "end": "735279"
  },
  {
    "text": "code total we have to",
    "start": "735279",
    "end": "738399"
  },
  {
    "text": "specify a description for a metric",
    "start": "738399",
    "end": "741680"
  },
  {
    "text": "it's a total number of requests",
    "start": "741680",
    "end": "746399"
  },
  {
    "text": "this is a counter type matrix means that",
    "start": "746399",
    "end": "749279"
  },
  {
    "text": "we count from",
    "start": "749279",
    "end": "750320"
  },
  {
    "text": "zero to infinite the request and we had",
    "start": "750320",
    "end": "753279"
  },
  {
    "text": "labels",
    "start": "753279",
    "end": "754160"
  },
  {
    "text": "code and we add the label",
    "start": "754160",
    "end": "758079"
  },
  {
    "text": "value from the log message code",
    "start": "758079",
    "end": "761120"
  },
  {
    "text": "attribute",
    "start": "761120",
    "end": "762800"
  },
  {
    "text": "we add a static labels the app log",
    "start": "762800",
    "end": "766079"
  },
  {
    "text": "generator",
    "start": "766079",
    "end": "766959"
  },
  {
    "text": "to identify our metrics",
    "start": "766959",
    "end": "770240"
  },
  {
    "text": "after that we just need to update",
    "start": "770240",
    "end": "773440"
  },
  {
    "text": "the resource on the cluster",
    "start": "773440",
    "end": "777040"
  },
  {
    "text": "so we have every configuration in place",
    "start": "780240",
    "end": "783120"
  },
  {
    "text": "let's check if they are working",
    "start": "783120",
    "end": "785200"
  },
  {
    "text": "we can use the metrics service",
    "start": "785200",
    "end": "788480"
  },
  {
    "text": "for the fluendy and check",
    "start": "788480",
    "end": "791760"
  },
  {
    "text": "in the web browser whether the",
    "start": "791760",
    "end": "795120"
  },
  {
    "text": "required metrics are presented",
    "start": "795120",
    "end": "798160"
  },
  {
    "text": "as you can see that",
    "start": "798160",
    "end": "801440"
  },
  {
    "text": "there are already a couple of response",
    "start": "801440",
    "end": "804240"
  },
  {
    "text": "codes available",
    "start": "804240",
    "end": "805600"
  },
  {
    "text": "in the matrix so we have",
    "start": "805600",
    "end": "808959"
  },
  {
    "text": "our metrics in place but it's more",
    "start": "808959",
    "end": "811279"
  },
  {
    "text": "important that we have these metrics in",
    "start": "811279",
    "end": "813200"
  },
  {
    "text": "parameters as well",
    "start": "813200",
    "end": "814800"
  },
  {
    "text": "we can open up graphana go to the",
    "start": "814800",
    "end": "817680"
  },
  {
    "text": "explorer menu",
    "start": "817680",
    "end": "818959"
  },
  {
    "text": "and just put it in the metric name and",
    "start": "818959",
    "end": "821839"
  },
  {
    "text": "hit search",
    "start": "821839",
    "end": "822720"
  },
  {
    "text": "and voila we have all the metrics we can",
    "start": "822720",
    "end": "825760"
  },
  {
    "text": "use the read function",
    "start": "825760",
    "end": "827680"
  },
  {
    "text": "and check how the log generator produces",
    "start": "827680",
    "end": "831440"
  },
  {
    "text": "the random status codes",
    "start": "831440",
    "end": "834480"
  },
  {
    "text": "we have time for one more example as",
    "start": "834480",
    "end": "836480"
  },
  {
    "text": "well so",
    "start": "836480",
    "end": "837760"
  },
  {
    "text": "let's create a namespace called infra",
    "start": "837760",
    "end": "841360"
  },
  {
    "text": "and we create a new resource",
    "start": "841360",
    "end": "844959"
  },
  {
    "text": "called host taylor hosteller",
    "start": "844959",
    "end": "848320"
  },
  {
    "text": "is a custom resource of the loggings",
    "start": "848320",
    "end": "850320"
  },
  {
    "text": "extension another great tool",
    "start": "850320",
    "end": "852560"
  },
  {
    "text": "embedded in one eye with this",
    "start": "852560",
    "end": "855600"
  },
  {
    "text": "we can create pods that can",
    "start": "855600",
    "end": "858639"
  },
  {
    "text": "tell logs from the host file system",
    "start": "858639",
    "end": "862560"
  },
  {
    "text": "let's call this resource a system",
    "start": "862560",
    "end": "864399"
  },
  {
    "text": "decouplet",
    "start": "864399",
    "end": "865920"
  },
  {
    "text": "and put it in the info namespace we just",
    "start": "865920",
    "end": "868839"
  },
  {
    "text": "created",
    "start": "868839",
    "end": "870560"
  },
  {
    "text": "this resource will be a system detailer",
    "start": "870560",
    "end": "874959"
  },
  {
    "text": "that tells the journal log of systemd",
    "start": "874959",
    "end": "878560"
  },
  {
    "text": "we only need to specify a couple of",
    "start": "878560",
    "end": "880959"
  },
  {
    "text": "attributes",
    "start": "880959",
    "end": "882160"
  },
  {
    "text": "like the disabled force the max entries",
    "start": "882160",
    "end": "885760"
  },
  {
    "text": "let's say 100 the name of this tailor",
    "start": "885760",
    "end": "889440"
  },
  {
    "text": "kubelet this will be the container name",
    "start": "889440",
    "end": "892320"
  },
  {
    "text": "and a systemd filter",
    "start": "892320",
    "end": "895839"
  },
  {
    "text": "that narrows down what kind of logs we",
    "start": "895839",
    "end": "898800"
  },
  {
    "text": "want to tear from the systemd",
    "start": "898800",
    "end": "902160"
  },
  {
    "text": "after applying the resources it will",
    "start": "902160",
    "end": "904880"
  },
  {
    "text": "deploy",
    "start": "904880",
    "end": "905519"
  },
  {
    "text": "pods that will tell the locks for us",
    "start": "905519",
    "end": "908560"
  },
  {
    "text": "to the standard output let's create an",
    "start": "908560",
    "end": "912320"
  },
  {
    "text": "output",
    "start": "912320",
    "end": "913120"
  },
  {
    "text": "to store all that kubert lock somewhere",
    "start": "913120",
    "end": "917199"
  },
  {
    "text": "we will name this loki because it will",
    "start": "922399",
    "end": "925279"
  },
  {
    "text": "be a lucky output",
    "start": "925279",
    "end": "927440"
  },
  {
    "text": "and we will put this into the infernal",
    "start": "927440",
    "end": "930079"
  },
  {
    "text": "space",
    "start": "930079",
    "end": "932480"
  },
  {
    "text": "for every output we can define the",
    "start": "932480",
    "end": "934480"
  },
  {
    "text": "buffering mechanism",
    "start": "934480",
    "end": "936720"
  },
  {
    "text": "as a lucky output we will define a time",
    "start": "936720",
    "end": "940079"
  },
  {
    "text": "key output",
    "start": "940079",
    "end": "941199"
  },
  {
    "text": "means that every 10 seconds we will",
    "start": "941199",
    "end": "943279"
  },
  {
    "text": "flash the messages",
    "start": "943279",
    "end": "945519"
  },
  {
    "text": "we want to use the utc time keys in the",
    "start": "945519",
    "end": "949040"
  },
  {
    "text": "messages and we use time cuevate",
    "start": "949040",
    "end": "952720"
  },
  {
    "text": "parameter 2 seconds",
    "start": "952720",
    "end": "954560"
  },
  {
    "text": "to wait and last but not least",
    "start": "954560",
    "end": "957759"
  },
  {
    "text": "we set the configure kubernetes labels",
    "start": "957759",
    "end": "961199"
  },
  {
    "text": "through",
    "start": "961199",
    "end": "962000"
  },
  {
    "text": "that will attach the kubernetes labels",
    "start": "962000",
    "end": "964800"
  },
  {
    "text": "to lucky",
    "start": "964800",
    "end": "965600"
  },
  {
    "text": "metadata the last parameter",
    "start": "965600",
    "end": "969440"
  },
  {
    "text": "is the url is the lucky service url we",
    "start": "969440",
    "end": "972480"
  },
  {
    "text": "will use in the cluster",
    "start": "972480",
    "end": "975839"
  },
  {
    "text": "after finishing the output we just apply",
    "start": "975839",
    "end": "978560"
  },
  {
    "text": "it to the cluster as well",
    "start": "978560",
    "end": "983839"
  },
  {
    "text": "so let's move on and create the",
    "start": "984959",
    "end": "987440"
  },
  {
    "text": "kubernetes flow",
    "start": "987440",
    "end": "989839"
  },
  {
    "text": "it will be familiar we use the same api",
    "start": "989839",
    "end": "992800"
  },
  {
    "text": "groups",
    "start": "992800",
    "end": "993440"
  },
  {
    "text": "the kind flow we have to specify the",
    "start": "993440",
    "end": "996720"
  },
  {
    "text": "metadata",
    "start": "996720",
    "end": "998639"
  },
  {
    "text": "we name the flow kubelet",
    "start": "998639",
    "end": "1001920"
  },
  {
    "text": "and we put it in the infra namespace as",
    "start": "1001920",
    "end": "1004399"
  },
  {
    "text": "well",
    "start": "1004399",
    "end": "1005199"
  },
  {
    "text": "remember that you need to have a same",
    "start": "1005199",
    "end": "1008160"
  },
  {
    "text": "namespace for the output",
    "start": "1008160",
    "end": "1010079"
  },
  {
    "text": "and flow to work together we don't",
    "start": "1010079",
    "end": "1013279"
  },
  {
    "text": "really need any filters",
    "start": "1013279",
    "end": "1014800"
  },
  {
    "text": "but we want to match the logs to",
    "start": "1014800",
    "end": "1017920"
  },
  {
    "text": "select the labels",
    "start": "1017920",
    "end": "1021600"
  },
  {
    "text": "app.kubernetes.com io",
    "start": "1022839",
    "end": "1024880"
  },
  {
    "text": "per name",
    "start": "1024880",
    "end": "1027678"
  },
  {
    "text": "host tailors",
    "start": "1028959",
    "end": "1032079"
  },
  {
    "text": "and we specify an output for this flow",
    "start": "1034640",
    "end": "1039038"
  },
  {
    "text": "but for demonstration purposes",
    "start": "1039039",
    "end": "1042079"
  },
  {
    "text": "i will intentionally tipo this",
    "start": "1042079",
    "end": "1045120"
  },
  {
    "text": "output",
    "start": "1045120",
    "end": "1047600"
  },
  {
    "text": "let's apply this resource to the cluster",
    "start": "1048319",
    "end": "1051200"
  },
  {
    "text": "as well",
    "start": "1051200",
    "end": "1053840"
  },
  {
    "text": "see how logging operator handles this",
    "start": "1056720",
    "end": "1058960"
  },
  {
    "text": "situation",
    "start": "1058960",
    "end": "1060160"
  },
  {
    "text": "you can see two output one with red",
    "start": "1060160",
    "end": "1062320"
  },
  {
    "text": "circle",
    "start": "1062320",
    "end": "1063280"
  },
  {
    "text": "this is the missing the teapot one and",
    "start": "1063280",
    "end": "1065760"
  },
  {
    "text": "one",
    "start": "1065760",
    "end": "1066559"
  },
  {
    "text": "with a normal black circle and",
    "start": "1066559",
    "end": "1069760"
  },
  {
    "text": "this is the orphan output we just didn't",
    "start": "1069760",
    "end": "1072799"
  },
  {
    "text": "connect it to anywhere",
    "start": "1072799",
    "end": "1075280"
  },
  {
    "text": "when we check the configuration of the",
    "start": "1075280",
    "end": "1077280"
  },
  {
    "text": "flow we can see that",
    "start": "1077280",
    "end": "1078880"
  },
  {
    "text": "yes we are triple this output but we",
    "start": "1078880",
    "end": "1082240"
  },
  {
    "text": "don't need no fancy ui",
    "start": "1082240",
    "end": "1084240"
  },
  {
    "text": "to check the problem you can use the",
    "start": "1084240",
    "end": "1086640"
  },
  {
    "text": "command line tools as well",
    "start": "1086640",
    "end": "1088320"
  },
  {
    "text": "the cubecut will get logging or command",
    "start": "1088320",
    "end": "1090960"
  },
  {
    "text": "we print out",
    "start": "1090960",
    "end": "1092080"
  },
  {
    "text": "all the resources and the resources with",
    "start": "1092080",
    "end": "1095200"
  },
  {
    "text": "active force are the problematic ones",
    "start": "1095200",
    "end": "1098480"
  },
  {
    "text": "but what are those problems exactly",
    "start": "1098480",
    "end": "1101760"
  },
  {
    "text": "we have to check the resource status",
    "start": "1101760",
    "end": "1104000"
  },
  {
    "text": "field for it",
    "start": "1104000",
    "end": "1105919"
  },
  {
    "text": "we can write a simple one either cube",
    "start": "1105919",
    "end": "1108480"
  },
  {
    "text": "cattle",
    "start": "1108480",
    "end": "1109039"
  },
  {
    "text": "get flow hyphen infra q blood",
    "start": "1109039",
    "end": "1112640"
  },
  {
    "text": "hyphen o json path and check the dot",
    "start": "1112640",
    "end": "1116160"
  },
  {
    "text": "status dot problems field for them",
    "start": "1116160",
    "end": "1120400"
  },
  {
    "text": "it will print out that we didn't specify",
    "start": "1120400",
    "end": "1124960"
  },
  {
    "text": "the proper output",
    "start": "1124960",
    "end": "1129600"
  },
  {
    "text": "just for fun i will fix this issue on",
    "start": "1129679",
    "end": "1132720"
  },
  {
    "text": "the ui",
    "start": "1132720",
    "end": "1133520"
  },
  {
    "text": "because the ui and the cli tool works",
    "start": "1133520",
    "end": "1136559"
  },
  {
    "text": "from the same",
    "start": "1136559",
    "end": "1137520"
  },
  {
    "text": "resources as well so here i just need to",
    "start": "1137520",
    "end": "1140960"
  },
  {
    "text": "fix this typo",
    "start": "1140960",
    "end": "1142160"
  },
  {
    "text": "in the loki output and everything should",
    "start": "1142160",
    "end": "1145679"
  },
  {
    "text": "work",
    "start": "1145679",
    "end": "1146160"
  },
  {
    "text": "as expected",
    "start": "1146160",
    "end": "1150799"
  },
  {
    "text": "just to be 100 sure we can go back to",
    "start": "1150799",
    "end": "1153919"
  },
  {
    "text": "the cli tool",
    "start": "1153919",
    "end": "1155280"
  },
  {
    "text": "and print out all the login resources",
    "start": "1155280",
    "end": "1158160"
  },
  {
    "text": "and check",
    "start": "1158160",
    "end": "1158799"
  },
  {
    "text": "if everything is fine",
    "start": "1158799",
    "end": "1162240"
  },
  {
    "text": "i know this sounds too good to be true",
    "start": "1163679",
    "end": "1165919"
  },
  {
    "text": "and logging operator is not a silver",
    "start": "1165919",
    "end": "1167600"
  },
  {
    "text": "bullet",
    "start": "1167600",
    "end": "1168320"
  },
  {
    "text": "it highly depends on the underlying",
    "start": "1168320",
    "end": "1170080"
  },
  {
    "text": "components and sometimes it can amplify",
    "start": "1170080",
    "end": "1172559"
  },
  {
    "text": "a small problem into bigger ones",
    "start": "1172559",
    "end": "1174880"
  },
  {
    "text": "for example fluid buffering it can",
    "start": "1174880",
    "end": "1177520"
  },
  {
    "text": "exhaust",
    "start": "1177520",
    "end": "1178000"
  },
  {
    "text": "underlying file system or it can change",
    "start": "1178000",
    "end": "1180480"
  },
  {
    "text": "the message orders",
    "start": "1180480",
    "end": "1181919"
  },
  {
    "text": "which is a problem if you want to ingest",
    "start": "1181919",
    "end": "1184320"
  },
  {
    "text": "locks into locking",
    "start": "1184320",
    "end": "1186240"
  },
  {
    "text": "and another problem that it's hard to",
    "start": "1186240",
    "end": "1188880"
  },
  {
    "text": "see what inside",
    "start": "1188880",
    "end": "1190400"
  },
  {
    "text": "a faulty plugin can exhaust resources",
    "start": "1190400",
    "end": "1193280"
  },
  {
    "text": "and it's a huge task to find which",
    "start": "1193280",
    "end": "1195039"
  },
  {
    "text": "plugin",
    "start": "1195039",
    "end": "1195600"
  },
  {
    "text": "causing the problem fluent bit is a",
    "start": "1195600",
    "end": "1199120"
  },
  {
    "text": "newer modern",
    "start": "1199120",
    "end": "1200400"
  },
  {
    "text": "architecture but it has its own issues",
    "start": "1200400",
    "end": "1203120"
  },
  {
    "text": "as well",
    "start": "1203120",
    "end": "1204080"
  },
  {
    "text": "it can face silently for example",
    "start": "1204080",
    "end": "1206159"
  },
  {
    "text": "attaching kubernetes metadata",
    "start": "1206159",
    "end": "1208320"
  },
  {
    "text": "which will cause labor repair to drop",
    "start": "1208320",
    "end": "1210000"
  },
  {
    "text": "messages and it's a bit harder to",
    "start": "1210000",
    "end": "1212400"
  },
  {
    "text": "prototype",
    "start": "1212400",
    "end": "1213360"
  },
  {
    "text": "because it has only a restrictive way to",
    "start": "1213360",
    "end": "1215679"
  },
  {
    "text": "apply plugins",
    "start": "1215679",
    "end": "1218559"
  },
  {
    "text": "so last but not least talk about the",
    "start": "1218960",
    "end": "1221039"
  },
  {
    "text": "future of the logging operator",
    "start": "1221039",
    "end": "1223120"
  },
  {
    "text": "we have a couple of things in our mind",
    "start": "1223120",
    "end": "1225440"
  },
  {
    "text": "advanced routing",
    "start": "1225440",
    "end": "1226720"
  },
  {
    "text": "based on richer metadata or log content",
    "start": "1226720",
    "end": "1231120"
  },
  {
    "text": "apply airbag rules to different lock",
    "start": "1231120",
    "end": "1233039"
  },
  {
    "text": "streams and provide a logging api",
    "start": "1233039",
    "end": "1235840"
  },
  {
    "text": "to have a unified experience enhanced",
    "start": "1235840",
    "end": "1238159"
  },
  {
    "text": "with authentication and authorization",
    "start": "1238159",
    "end": "1240880"
  },
  {
    "text": "to be easier to use logging operator",
    "start": "1240880",
    "end": "1243919"
  },
  {
    "text": "as a component in a bigger system and we",
    "start": "1243919",
    "end": "1246799"
  },
  {
    "text": "are watching",
    "start": "1246799",
    "end": "1247520"
  },
  {
    "text": "several interesting projects in the",
    "start": "1247520",
    "end": "1249440"
  },
  {
    "text": "cloud native landscape",
    "start": "1249440",
    "end": "1251039"
  },
  {
    "text": "open telemetry collector which speaks",
    "start": "1251039",
    "end": "1253360"
  },
  {
    "text": "the fluent",
    "start": "1253360",
    "end": "1254480"
  },
  {
    "text": "protocol and tremor which is an",
    "start": "1254480",
    "end": "1257360"
  },
  {
    "text": "interesting approach",
    "start": "1257360",
    "end": "1258640"
  },
  {
    "text": "for collecting and transporting logs as",
    "start": "1258640",
    "end": "1261120"
  },
  {
    "text": "well",
    "start": "1261120",
    "end": "1262320"
  },
  {
    "text": "thank you for listening to my",
    "start": "1262320",
    "end": "1263600"
  },
  {
    "text": "presentation have a nice day",
    "start": "1263600",
    "end": "1268480"
  }
]