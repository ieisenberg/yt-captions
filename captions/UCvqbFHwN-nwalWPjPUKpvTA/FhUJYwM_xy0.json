[
  {
    "text": "so for those of you who don't know me my name is Arman Dodd Kat you'll find me all around the internet as just ARMA and",
    "start": "30",
    "end": "6930"
  },
  {
    "text": "I'm one of the co-founders and CTO of Hashi Corp for those of you who don't",
    "start": "6930",
    "end": "12269"
  },
  {
    "text": "know about Hoshi Corp don't worry it's very common people know us much more for our tool names than they know the",
    "start": "12269",
    "end": "17520"
  },
  {
    "text": "company so you know it's part of our regular education campaign that there is",
    "start": "17520",
    "end": "22769"
  },
  {
    "text": "also a company behind it most folks are probably familiar with our vagrant tool",
    "start": "22769",
    "end": "28109"
  },
  {
    "text": "maybe terraform we make a handful of different tools but really our overarching mission is looking at the",
    "start": "28109",
    "end": "34800"
  },
  {
    "text": "challenges around delivering an application whether you're an IT operator trying to figure out how to",
    "start": "34800",
    "end": "40050"
  },
  {
    "text": "provision and manage infrastructure whether you're a security engineer trying to figure out how do we deal with",
    "start": "40050",
    "end": "45390"
  },
  {
    "text": "this brave new world of cloud and zero trust networks or whether you're application developer who just wants a",
    "start": "45390",
    "end": "51059"
  },
  {
    "text": "runtime platform and want to find your upstream services and don't really care about the bits and bytes and how they",
    "start": "51059",
    "end": "56340"
  },
  {
    "text": "all connect together and so because we try and look at so many different problems we have quite a different",
    "start": "56340",
    "end": "62460"
  },
  {
    "text": "handful of tools so not kind of spend a lot of time talking about most of them instead want to specifically spend time",
    "start": "62460",
    "end": "68189"
  },
  {
    "text": "today on vault and the security challenges we face as we go to the cloud",
    "start": "68189",
    "end": "74270"
  },
  {
    "text": "so briefly I'm going to touch on a few different things for folks who are less familiar with vault I'm gonna give a",
    "start": "74270",
    "end": "79979"
  },
  {
    "text": "quick intro there what are some of the use cases how does it work and then from there talk about a new",
    "start": "79979",
    "end": "85500"
  },
  {
    "text": "feature that I'm very excited about that landed in vaults zero nine and then talk about kubernetes integration since we're",
    "start": "85500",
    "end": "90630"
  },
  {
    "text": "all here at coop con so for folks who've never heard about vaults you know the",
    "start": "90630",
    "end": "96479"
  },
  {
    "text": "way we like to describe it is it really solves three different challenges that are all pretty related the first one",
    "start": "96479",
    "end": "103920"
  },
  {
    "text": "which is really why vault exists came out of the need to deliver secrets to",
    "start": "103920",
    "end": "109860"
  },
  {
    "text": "our end applications so as we adopt tools like chef and puppet and kubernetes and get sort of",
    "start": "109860",
    "end": "115380"
  },
  {
    "text": "more rich in our orchestration and deployment and automation we have this interesting challenge which is how do",
    "start": "115380",
    "end": "120990"
  },
  {
    "text": "our applications actually get all the credentials they need whether it's database credentials whether it's cloudy",
    "start": "120990",
    "end": "126899"
  },
  {
    "text": "API tokens whether it's TLS SSL certificates so on and so forth we have all of this privilege",
    "start": "126899",
    "end": "132730"
  },
  {
    "text": "material that our applications need and as we're sort of driving towards this infrastructure as code vision whether",
    "start": "132730",
    "end": "139540"
  },
  {
    "text": "we're you know committing chef code or terraform code or you know our Yambol configurations we're cooper Nettie's",
    "start": "139540",
    "end": "144849"
  },
  {
    "text": "into version control systems we don't want to pollute all of that with sensitive information right because",
    "start": "144849",
    "end": "150489"
  },
  {
    "text": "otherwise it's being stored in plain text most of the version control systems we use are not really designed for",
    "start": "150489",
    "end": "155980"
  },
  {
    "text": "sensitive materials so they don't really have things like access logs and you know fine grain you know capabilities",
    "start": "155980",
    "end": "162849"
  },
  {
    "text": "and so this is the first use cases how do we think about managing this privilege information how do we deliver",
    "start": "162849",
    "end": "169480"
  },
  {
    "text": "it to the applications that need it but then still do it in an automated way so that these systems don't get in our way",
    "start": "169480",
    "end": "174750"
  },
  {
    "text": "another sort of interesting class of challenge is great we're delivering our",
    "start": "174750",
    "end": "180069"
  },
  {
    "text": "database you know credentials to our application and we're giving them you know a 32 by encryption key and saying",
    "start": "180069",
    "end": "185200"
  },
  {
    "text": "you know god be with you get the crypto right this kind of works but what we",
    "start": "185200",
    "end": "191500"
  },
  {
    "text": "find in practice is that cryptography is really really hard and key management even harder so how do we make doing",
    "start": "191500",
    "end": "197590"
  },
  {
    "text": "security right a lot easier and so how do we think about providing higher-level api's things like encryption as a",
    "start": "197590",
    "end": "203260"
  },
  {
    "text": "service so that we're not handing an application 30 to random bytes and saying have fun but instead providing",
    "start": "203260",
    "end": "209590"
  },
  {
    "text": "sort of higher-level api's that are less error-prone and then the last one is as we're doing this what about the people",
    "start": "209590",
    "end": "215650"
  },
  {
    "text": "right we've spent a lot of time talking about machines and automations and applications but there are still people in the loop right so as how do we as",
    "start": "215650",
    "end": "221980"
  },
  {
    "text": "developers and operators and security people get access to the privileged systems that we need right and the last",
    "start": "221980",
    "end": "227500"
  },
  {
    "text": "bit is that bit it's the access management so with that let's jump right into secret management what does this",
    "start": "227500",
    "end": "234430"
  },
  {
    "text": "world really look like you know it's a you know I think it starts first by understanding what a secret actually is",
    "start": "234430",
    "end": "240160"
  },
  {
    "text": "the way we like to think about it is it's any piece of information that you can use for authentication or",
    "start": "240160",
    "end": "245379"
  },
  {
    "text": "authorization so it's something that I can provide to another system that's granting me access to it or proving my",
    "start": "245379",
    "end": "251859"
  },
  {
    "text": "identity or elevating my capability right so here's a few examples of it sensitive information is sort of a",
    "start": "251859",
    "end": "257769"
  },
  {
    "text": "different class it's things we'd like to keep confidential but don't necessarily grant me additional access so maybe you",
    "start": "257769",
    "end": "264159"
  },
  {
    "text": "know things that my customers order I consider that sensitive but it's not a secret piece of information it's",
    "start": "264159",
    "end": "269730"
  },
  {
    "text": "sensitive and so the open questions as we talk about secret management are",
    "start": "269730",
    "end": "274980"
  },
  {
    "text": "really things like okay how do our applications get these secrets how do our human operators get these secrets",
    "start": "274980",
    "end": "280440"
  },
  {
    "text": "how do we update these things what happens if we need to revoke access how do we know who's used what and what are",
    "start": "280440",
    "end": "287490"
  },
  {
    "text": "we doing the event of a compromise these are sort of the hard questions in secret management that we'd like to have an",
    "start": "287490",
    "end": "292980"
  },
  {
    "text": "answer to the standard kind of state of the world I guess in some sense of the",
    "start": "292980",
    "end": "298320"
  },
  {
    "text": "answer we typically see to many of these questions is not great typically it's it's what we would define",
    "start": "298320",
    "end": "304380"
  },
  {
    "text": "a secret sprawl these secrets are defined everywhere whether hard coded in",
    "start": "304380",
    "end": "309450"
  },
  {
    "text": "an application living in plain text in a config file you know strewn about github or you know our puppet servers so on and",
    "start": "309450",
    "end": "316710"
  },
  {
    "text": "so forth and so these things kind of live everywhere as a result of this there's an extreme decentralization",
    "start": "316710",
    "end": "322200"
  },
  {
    "text": "which means we have relatively limited visibility into who's doing what when and where and in the case of a",
    "start": "322200",
    "end": "328950"
  },
  {
    "text": "compromise we have you know minimal if any procedures around how to do break glass how do we recover from this and so",
    "start": "328950",
    "end": "337110"
  },
  {
    "text": "this was really when the kind of problem space that we started thinking about when we started working on the vault was how do we get to a better set of answers",
    "start": "337110",
    "end": "344130"
  },
  {
    "text": "for those questions than secret sprawl and so the kind of driving goal behind",
    "start": "344130",
    "end": "350430"
  },
  {
    "text": "the system was to first and foremost get to a single source of truth right moving away from this decentralisation the sort",
    "start": "350430",
    "end": "356550"
  },
  {
    "text": "of sprawl to a single sort of broker for all of these values and if we do that",
    "start": "356550",
    "end": "361650"
  },
  {
    "text": "then we have to recognize there's two very different audiences for the secrets there's our applications and our",
    "start": "361650",
    "end": "367170"
  },
  {
    "text": "automation tooling and they want automated API driven access and then we have our human operators who want the",
    "start": "367170",
    "end": "373410"
  },
  {
    "text": "exact opposite of that right they want CL is they want you is they want to interact with it in a very different way",
    "start": "373410",
    "end": "379070"
  },
  {
    "text": "and so as we think about these things what's the right place to be on the spectrum between sort of theoretically",
    "start": "379070",
    "end": "385440"
  },
  {
    "text": "perfect security and theoretically you know perfect usability right you know in",
    "start": "385440",
    "end": "390930"
  },
  {
    "text": "some sense I think this is a painful trade-off but it is one that we have to deal with in security land we can create",
    "start": "390930",
    "end": "395940"
  },
  {
    "text": "these you know perfect systems that are so difficult to use that no user uses them right and that's",
    "start": "395940",
    "end": "402290"
  },
  {
    "text": "what we see in practice those organizations who adopt these things and it's so onerous that one app uses it and",
    "start": "402290",
    "end": "407420"
  },
  {
    "text": "everything else just skips it and so you have to find that balance of it being practical enough that applications will",
    "start": "407420",
    "end": "413150"
  },
  {
    "text": "use that even if it's you know not perfect so I'm not letting good be enemy of the perfect or other way around last",
    "start": "413150",
    "end": "420200"
  },
  {
    "text": "one is modern datacenter friendly and what we really mean by that is you know pure software it shouldn't depend on",
    "start": "420200",
    "end": "425690"
  },
  {
    "text": "hardware devices because those things are relatively inaccessible if we're in a cloud environment so as we translate",
    "start": "425690",
    "end": "433190"
  },
  {
    "text": "the sort of top line goals we had what does that mean in terms of the feature of functionality of vault itself right",
    "start": "433190",
    "end": "439160"
  },
  {
    "text": "the sort of table stakes for the system is secure bit storage right bits in bits",
    "start": "439160",
    "end": "444170"
  },
  {
    "text": "out encrypted at rest encrypted in transit and that's sort of table stakes where I think things start getting a",
    "start": "444170",
    "end": "450200"
  },
  {
    "text": "little more interesting is when we start talking about dynamic secrets and I'll get into that and there's a whole notion",
    "start": "450200",
    "end": "455360"
  },
  {
    "text": "around how do we generate these things on demand and what does that mean in terms of tracking their lifespan and",
    "start": "455360",
    "end": "460550"
  },
  {
    "text": "dealing with things like revocation and then we have all of our good you know bread-and-butter security things right",
    "start": "460550",
    "end": "466760"
  },
  {
    "text": "how do we think about auditing how do we think about fine-grained access control how do we think about authentication and",
    "start": "466760",
    "end": "473380"
  },
  {
    "text": "so while we're doing all of this what are the set of principles we want to bring to bear right when we really look",
    "start": "473380",
    "end": "479870"
  },
  {
    "text": "at you know what are the things that you have to care about when you look at security they haven't changed a whole lot right the core bread-and-butter has been",
    "start": "479870",
    "end": "486470"
  },
  {
    "text": "the same for a long time right we want to provide confidentiality of all data that's stored we want to provide",
    "start": "486470",
    "end": "491510"
  },
  {
    "text": "integrity we want to provide high availability but then more so we want to do things like least privilege right",
    "start": "491510",
    "end": "497000"
  },
  {
    "text": "don't give access unnecessarily because when someone inevitably gets compromised right there's a phishing attack and they",
    "start": "497000",
    "end": "502790"
  },
  {
    "text": "push the link right the things that they're allowed to access will be accessed and so minimizing what people",
    "start": "502790",
    "end": "509150"
  },
  {
    "text": "have access to is a prudent thing to do how do we get some element of privilege separation so does everyone need to be",
    "start": "509150",
    "end": "515060"
  },
  {
    "text": "an administrator can some people be read-only users how do we sort of bracket who can do what privilege",
    "start": "515060",
    "end": "520760"
  },
  {
    "text": "bracketing you know how do we time down access to things so access doesn't mean access forever non-repudiation how do we",
    "start": "520760",
    "end": "527210"
  },
  {
    "text": "get to a place where we have sufficient audit logging that we can say with certainty someone did something at",
    "start": "527210",
    "end": "532250"
  },
  {
    "text": "time and then how do we apply defense-in-depth how do we not put all of our eggs in one basket and so as we",
    "start": "532250",
    "end": "540740"
  },
  {
    "text": "go through all these things you know I'll talk about how we kind of weave some of these principles in because the goal is to bring all of these sort of",
    "start": "540740",
    "end": "547070"
  },
  {
    "text": "security best practices into the way Vault works into the workflow but do it in a way that's sort of invisible you're kind of applying best practices without",
    "start": "547070",
    "end": "553580"
  },
  {
    "text": "having to be overly cognizant of it so like I mentioned the table stakes of the system is just secure bit storage you",
    "start": "553580",
    "end": "559820"
  },
  {
    "text": "want to be able to write something to the system and pull it back out and that should be secured as it's going over the network secured as it's at rest and so",
    "start": "559820",
    "end": "566450"
  },
  {
    "text": "of course we do that everything at rest is AES 256-bit everything over the wires TLS one two all this is pure software so",
    "start": "566450",
    "end": "573830"
  },
  {
    "text": "there's no hardware security modules required and the goal here is providing confidentiality and integrity doing it",
    "start": "573830",
    "end": "581690"
  },
  {
    "text": "is actually pretty simple so you know for all that we've mentioned so far this is what it you know writing a secret and",
    "start": "581690",
    "end": "587240"
  },
  {
    "text": "reading it back would look like so here we're just going to write some arbitrary value you know bar is equal to bacon at",
    "start": "587240",
    "end": "592250"
  },
  {
    "text": "path secret foo the system's architected roughly like a hierarchical file system",
    "start": "592250",
    "end": "597350"
  },
  {
    "text": "and as we read it back we get our arbitrary bars bacon back simple so like",
    "start": "597350",
    "end": "603920"
  },
  {
    "text": "I said table stakes the going gets interesting when we start talking about things like dynamic secrets one of the",
    "start": "603920",
    "end": "609650"
  },
  {
    "text": "challenges with something that's just a static bit store I put in bar is equal to bacon is that every client that's",
    "start": "609650",
    "end": "615380"
  },
  {
    "text": "reading that value out sees the same value so to make this concrete if I have 50 web servers that all go in and say",
    "start": "615380",
    "end": "621170"
  },
  {
    "text": "give me the database password all 50 will see the same username and password and so now we have this interesting",
    "start": "621170",
    "end": "626510"
  },
  {
    "text": "challenge was like what if that thing leaks which node was the point of compromised all 50 of the machines were",
    "start": "626510",
    "end": "631820"
  },
  {
    "text": "using the same credential all of our developers who access that had the same credential and so now it's really hard to understand okay where was the source",
    "start": "631820",
    "end": "638510"
  },
  {
    "text": "of the problem so we've lost that non-repudiation we can't say with any certainty which actor was responsible",
    "start": "638510",
    "end": "645610"
  },
  {
    "text": "instead what we'd like to be able to have is a unique credential per client that's generated on demand so when we",
    "start": "645610",
    "end": "652160"
  },
  {
    "text": "see this client this token that gets leaked we actually have a very high level certainty that actually it was Armen who accessed it at 2:45 p.m. and",
    "start": "652160",
    "end": "658910"
  },
  {
    "text": "that credential was unique to him and so how do we do this this mechanism within",
    "start": "658910",
    "end": "664250"
  },
  {
    "text": "volt is called dynamic seek and so there's a few interesting fall outs that come from this and we'll talk",
    "start": "664250",
    "end": "670060"
  },
  {
    "text": "about them at the highest level the way it works is pretty simple a client like myself connects Duvall and says I want a",
    "start": "670060",
    "end": "676330"
  },
  {
    "text": "database credential well ensures that I'm actually authenticated and able to do this and that I should be allowed and that and",
    "start": "676330",
    "end": "682960"
  },
  {
    "text": "then it goes and talks to the database and says create a new dynamic username with you know random user random password restrict the set of things that",
    "start": "682960",
    "end": "690280"
  },
  {
    "text": "username can do so you know scope it down potentially with a grant statement and then audit that Arman has created",
    "start": "690280",
    "end": "696640"
  },
  {
    "text": "this thing with this particular unique username and then hand it back to me so as a user I'm getting back a username",
    "start": "696640",
    "end": "701980"
  },
  {
    "text": "and password I go and connect to the database using you know my normal client driver and I'm off to the races in terms",
    "start": "701980",
    "end": "710470"
  },
  {
    "text": "of the surface area of what vault supports today it's pretty huge almost any real our DBMS system",
    "start": "710470",
    "end": "717340"
  },
  {
    "text": "pick your favorite no sequel systems pick your favorite messaging queues the list sort of goes on and on",
    "start": "717340",
    "end": "722680"
  },
  {
    "text": "and this is made possible because this is a plug-in point so what we've seen is the communities show up and say hey I",
    "start": "722680",
    "end": "728200"
  },
  {
    "text": "need to support the system and then they're like here's the three hundred lines of code that connects MongoDB or Cassandra or RabbitMQ and this plug-in",
    "start": "728200",
    "end": "736720"
  },
  {
    "text": "is split away from the Corp so this is one of the core tenants of the design of volt is how do we minimize the size of",
    "start": "736720",
    "end": "743350"
  },
  {
    "text": "our trusted compute base and have this sort of layered model for defense and death and so these plugins have very",
    "start": "743350",
    "end": "749500"
  },
  {
    "text": "little access to like the innards of vault and aren't really a security sensitive thing and there's a clean",
    "start": "749500",
    "end": "754690"
  },
  {
    "text": "separation of responsibilities what this comes with then is if the secret is",
    "start": "754690",
    "end": "761170"
  },
  {
    "text": "dynamic and unique per client we need some way of tracking it we need some amount of metadata so that we know which",
    "start": "761170",
    "end": "766990"
  },
  {
    "text": "client has access to what and if these things are time bounded when do they expire and so vault rolls all that up",
    "start": "766990",
    "end": "772690"
  },
  {
    "text": "into the concept of Elise so when we generate a dynamic secret the value is returned back with Elise and so this Li",
    "start": "772690",
    "end": "779020"
  },
  {
    "text": "says this is for you Armand it's valid for the next you know two hours this is your username and password and the lease",
    "start": "779020",
    "end": "785050"
  },
  {
    "text": "is something concrete that we can talk about so we can renew a lease we can revoke a lease we can query what are the outstanding leases in the system and so",
    "start": "785050",
    "end": "792250"
  },
  {
    "text": "this actually lets us start defining break loss procedures so as an operator if I know my sequel was compromised but",
    "start": "792250",
    "end": "798310"
  },
  {
    "text": "I don't know who was exactly the source I can go to vault and say you know what just revoke all of the my sequel leases and then we're",
    "start": "798310",
    "end": "804100"
  },
  {
    "text": "gonna do the forensics and figure out the point of compromise later or if you know it was just our Mons lease just go in and revoke my lease and there's no",
    "start": "804100",
    "end": "810549"
  },
  {
    "text": "reason to impact all of the other outstanding leases so why do this this",
    "start": "810549",
    "end": "816160"
  },
  {
    "text": "seems complicated it seems like it adds a lot of new like nuance to the system partly it's because it gives us all four",
    "start": "816160",
    "end": "822369"
  },
  {
    "text": "of these properties it gives us this notion of privilege bracketing so that when I give you a credential for the database it's not a forever credential I",
    "start": "822369",
    "end": "829239"
  },
  {
    "text": "can't I'm bound as a valid four day a week a month and I can have some guarantee that the client is forced to",
    "start": "829239",
    "end": "835540"
  },
  {
    "text": "move on to a new credential otherwise that credential just gets wiped out I get non-repudiation so I know of my 50",
    "start": "835540",
    "end": "841869"
  },
  {
    "text": "web servers this one was the point of compromise I can also update I can bound",
    "start": "841869",
    "end": "847239"
  },
  {
    "text": "the time it takes for a secret to update if I know every client is forced to play ball and respect this lease contract",
    "start": "847239",
    "end": "852730"
  },
  {
    "text": "then I have some certainty that if I change my policy that within the time bound of the leases all of my clients",
    "start": "852730",
    "end": "858670"
  },
  {
    "text": "are gonna get the updated version and then the last one is it enables revocation because now we have this rich metadata on who has what and it's unique",
    "start": "858670",
    "end": "866139"
  },
  {
    "text": "right if it's a shared secret or it's something that's not time bounded it's a lot harder so then we get the sort of",
    "start": "866139",
    "end": "874360"
  },
  {
    "text": "security bread-and-butter the authentication authorization and auditing as far as authors",
    "start": "874360",
    "end": "879720"
  },
  {
    "text": "authentication goes this is kind of an interesting part because here we have the split between what machines want to",
    "start": "879720",
    "end": "885610"
  },
  {
    "text": "use and what applications want to use as an application you're not going to log in with a username and password right",
    "start": "885610",
    "end": "891429"
  },
  {
    "text": "and enter to a fake code you have to be able to use something like mutual TLS bearer tokens you know another mechanism",
    "start": "891429",
    "end": "897459"
  },
  {
    "text": "we have call a perl which is like a username and password for applications and then users are gonna do things like",
    "start": "897459",
    "end": "903610"
  },
  {
    "text": "single sign-on with LDAP or Active Directory maybe you know an OAuth provider like github something like that",
    "start": "903610",
    "end": "909970"
  },
  {
    "text": "a little more human friendly and what we do within vault is basically map down",
    "start": "909970",
    "end": "915339"
  },
  {
    "text": "these different authentication mechanisms into a uniform authorization language so you apply a consistent set",
    "start": "915339",
    "end": "921069"
  },
  {
    "text": "of policy over the different users of the system whether they're an application or a user and so while",
    "start": "921069",
    "end": "926739"
  },
  {
    "text": "there's many many different authentication backends there's one way you handle authorization and the system",
    "start": "926739",
    "end": "932139"
  },
  {
    "text": "models this as a Fulton I sort of system so it's a need-to-know basis and this is really in",
    "start": "932139",
    "end": "937370"
  },
  {
    "text": "keeping with lease privilege unless you really need access to a secret you probably shouldn't have it because that's just an unnecessary surface area",
    "start": "937370",
    "end": "944120"
  },
  {
    "text": "of attack and then with request/response logging everything can flow through a number of audit backends so you can",
    "start": "944120",
    "end": "950810"
  },
  {
    "text": "configure you know one to n audit back ends and the idea behind allowing multiple is it allows us to design the",
    "start": "950810",
    "end": "957200"
  },
  {
    "text": "system in a fail closed way so we can allow you to set up two different auditing backends and then make the",
    "start": "957200",
    "end": "962270"
  },
  {
    "text": "assertion that if none of the backends allow the the request to get logged the system rejects the request so why would",
    "start": "962270",
    "end": "968300"
  },
  {
    "text": "you do this this allows us to protect that non-repudiation property so if I as a malicious operator know how the system",
    "start": "968300",
    "end": "974390"
  },
  {
    "text": "is set up I don't go in and just turn off Splunk for a little while pull out a bunch of secrets and then you know now that it's convenient turns",
    "start": "974390",
    "end": "980480"
  },
  {
    "text": "Splunk back on instead you'd much rather the system say you know what I can't log this so no it's better to have an audit",
    "start": "980480",
    "end": "986570"
  },
  {
    "text": "trail than to be have the sort of gap in the history so one of the interesting",
    "start": "986570",
    "end": "994130"
  },
  {
    "text": "properties of a system like this is that you're pulling secrets out from it for your app to actually be able to function",
    "start": "994130",
    "end": "999440"
  },
  {
    "text": "your app doesn't have the database credential until it talks to vaulting and gets it and so you kind of care",
    "start": "999440",
    "end": "1004900"
  },
  {
    "text": "about availability of a system like this right so from very very beginning volt 0.1 the system was highly available at",
    "start": "1004900",
    "end": "1012040"
  },
  {
    "text": "that time it only supported console now it sports at CD and zookeeper and a few other systems for doing a leader",
    "start": "1012040",
    "end": "1017710"
  },
  {
    "text": "election and so you can appoint fall at these systems and it will automatically do an active standby model so one of the",
    "start": "1017710",
    "end": "1023260"
  },
  {
    "text": "bolts becomes active and services requests the other ones forward things to the active instance and if it fails",
    "start": "1023260",
    "end": "1028420"
  },
  {
    "text": "will automatically flip over to one of the standbys and this is providing high availability one of the challenges of",
    "start": "1028420",
    "end": "1037150"
  },
  {
    "text": "vault is if we're providing this promise where we say data is encrypted in transit and at rest it means we're",
    "start": "1037150",
    "end": "1042370"
  },
  {
    "text": "encrypting vaults own data and so when vault starts it has an interesting problem which is how does it decrypt its",
    "start": "1042370",
    "end": "1048250"
  },
  {
    "text": "own data one of the decisions we made very very early on was to say this key must be provided online you can't",
    "start": "1048250",
    "end": "1054760"
  },
  {
    "text": "provide the unsealed key to vault via a configuration file or a CLI flag because",
    "start": "1054760",
    "end": "1059830"
  },
  {
    "text": "inevitably what would happen is that that config file that gets managed by chef would have the key back in it which",
    "start": "1059830",
    "end": "1065230"
  },
  {
    "text": "then lives back and get and so the entire sort of system becomes defeated so this unseal key the one that",
    "start": "1065230",
    "end": "1073930"
  },
  {
    "text": "allows the system to continue to function in some sense acts as this key to the kingdom because if we had this",
    "start": "1073930",
    "end": "1079060"
  },
  {
    "text": "key we could just bypass all of the rules and access controls that are set up in the system we would just go to the",
    "start": "1079060",
    "end": "1085210"
  },
  {
    "text": "cold storage decrypt whatever we wanted since we have the decryption key and not bother with auditing and access controls",
    "start": "1085210",
    "end": "1090790"
  },
  {
    "text": "and so we have to be very very sensitive with this particular key particularly we have to be worried about insider attack",
    "start": "1090790",
    "end": "1097060"
  },
  {
    "text": "people who do have access to the system and may have access to this key so the approach we take is what's referred to",
    "start": "1097060",
    "end": "1103120"
  },
  {
    "text": "as a multi man rule and the idea behind it is you actually just don't give out",
    "start": "1103120",
    "end": "1108220"
  },
  {
    "text": "the master key to anyone so if all has this notion of a key hierarchy so the sort of most inner keys the keys that",
    "start": "1108220",
    "end": "1114640"
  },
  {
    "text": "protect all of the data vault stores are referred to as encryption keys these can be rotated online all day and night",
    "start": "1114640",
    "end": "1120550"
  },
  {
    "text": "nobody has access to these things there's sort of an internal detail that key that key ring I should say is",
    "start": "1120550",
    "end": "1126940"
  },
  {
    "text": "protected by the master key the master key then allows you to get to the keyring which then allows you to get to all the other things that are stored and",
    "start": "1126940",
    "end": "1133000"
  },
  {
    "text": "so this is really the true sensitive one this key doesn't even get stored anywhere instead what we do is we split",
    "start": "1133000",
    "end": "1139420"
  },
  {
    "text": "it out into a number of key shares so we use this algorithm called Shamir keys keys splitting where we will split this",
    "start": "1139420",
    "end": "1145570"
  },
  {
    "text": "one key until call it five ten fifty parts whatever you want it to be and you need to provide some threshold of them",
    "start": "1145570",
    "end": "1151720"
  },
  {
    "text": "that are then recombined together to rebuild the master key so by default volt says I'm going to take the master",
    "start": "1151720",
    "end": "1157540"
  },
  {
    "text": "and split it into five and you know provide three keys and then what you do is you give these keys out to different",
    "start": "1157540",
    "end": "1162640"
  },
  {
    "text": "key holding officers at the company and when you need an unsealed vault you know it's kind of like the Red October scene",
    "start": "1162640",
    "end": "1167950"
  },
  {
    "text": "right everyone puts in their keys and turns it and once we get to the threshold vault is able to rebuild the master key which is able to get back to",
    "start": "1167950",
    "end": "1174130"
  },
  {
    "text": "the encryption key ring and boom we're in business this can be slightly annoying if we're",
    "start": "1174130",
    "end": "1181180"
  },
  {
    "text": "doing automation and doing things like putting it inside of you know systems that are gonna move us around so there are mechanisms for doing it in an",
    "start": "1181180",
    "end": "1187570"
  },
  {
    "text": "automated way effectively we replace our human key holders with a machine key holder that we trust and so this could",
    "start": "1187570",
    "end": "1193750"
  },
  {
    "text": "either be you know a hardware security module that we're wracking or we say you know what we trust our cloud provider enough to be our key holder",
    "start": "1193750",
    "end": "1200059"
  },
  {
    "text": "and we're gonna delegate this to them so there's ways of automating this but out of the box the sort of Shamir splitting",
    "start": "1200059",
    "end": "1206299"
  },
  {
    "text": "approach is the default so sort of high-level summary what we really set",
    "start": "1206299",
    "end": "1211700"
  },
  {
    "text": "out to solve with volt is the secret sprawl problem is really looking at saying how do we get away from this",
    "start": "1211700",
    "end": "1216799"
  },
  {
    "text": "decentralization the sort of sprawl of definition where we have low access control low visibility bring it all into",
    "start": "1216799",
    "end": "1223580"
  },
  {
    "text": "one place where we can have a uniform policy uniform way of auditing uniform way of authorizing everything and in",
    "start": "1223580",
    "end": "1229879"
  },
  {
    "text": "doing so we're really thinking about two different types of threats the bigger more real one is insider threat it's you",
    "start": "1229879",
    "end": "1236779"
  },
  {
    "text": "know folks that should have some access to the system you know it's people who are inside our org and have access to our private github and all of our keys",
    "start": "1236779",
    "end": "1243469"
  },
  {
    "text": "and passwords are in there right and so how do we think about that that's really about imposing things like ACLs and",
    "start": "1243469",
    "end": "1249830"
  },
  {
    "text": "secret sharing and sort of isolation of the of the secrets and then there's the",
    "start": "1249830",
    "end": "1255559"
  },
  {
    "text": "external threat problem people should have no access to the system at all and that's really where having a strong",
    "start": "1255559",
    "end": "1260899"
  },
  {
    "text": "crypto system comes into play and lastly we really want to do this in a way that applies security principles but without",
    "start": "1260899",
    "end": "1267859"
  },
  {
    "text": "making this painful right like keeping to that practicality so for folks that",
    "start": "1267859",
    "end": "1273859"
  },
  {
    "text": "are familiar with fall and maybe started using it earlier a future that we you know recently announced in vault 0.9",
    "start": "1273859",
    "end": "1279950"
  },
  {
    "text": "which is only a few weeks is the stronger notion of identity and so what",
    "start": "1279950",
    "end": "1285679"
  },
  {
    "text": "at its core what this is really about is saying you know what there's actually entities who are gonna use the system",
    "start": "1285679",
    "end": "1291649"
  },
  {
    "text": "and interact with the system in a sort of a longer-term persistent way like Arman as a user is going to interact",
    "start": "1291649",
    "end": "1297440"
  },
  {
    "text": "with us on a daily weekly monthly basis and so there's a kind of different things you can do different ways of thinking about it when you actually",
    "start": "1297440",
    "end": "1303619"
  },
  {
    "text": "model these entities of the first class thing so an entity could be a single person it could be a single system it",
    "start": "1303619",
    "end": "1309409"
  },
  {
    "text": "could be a single application it's sort of a you know a bit of a flexible concept in that sense and what it lets",
    "start": "1309409",
    "end": "1315109"
  },
  {
    "text": "us do is assign policies and metadata to an entity so we can say hey Arman actually has this other metadata I'm",
    "start": "1315109",
    "end": "1320779"
  },
  {
    "text": "gonna annotate with because I want visibility on that in audit logs or I want to assign you know special or maybe",
    "start": "1320779",
    "end": "1326450"
  },
  {
    "text": "more restricted privileges to this entity and then what vault lets us do is mapped us to multiple different aliases",
    "start": "1326450",
    "end": "1333510"
  },
  {
    "text": "so I might have one persistent entity which is Armen but I might exist in many different ways which was my github",
    "start": "1333510",
    "end": "1339480"
  },
  {
    "text": "username and my you know LDAP sign-on and maybe I have an x.509 certain to me but all these things still represent the",
    "start": "1339480",
    "end": "1346230"
  },
  {
    "text": "same entity so mate whether I'm using a smart card that represents me or I'm typing in my LDAP password it's the same",
    "start": "1346230",
    "end": "1352200"
  },
  {
    "text": "person so I should have potentially the same level of access without having to deal with me in three or four different",
    "start": "1352200",
    "end": "1357300"
  },
  {
    "text": "ways what this lets us do once we start modeling in this more sort of first-class way is start grouping people",
    "start": "1357300",
    "end": "1363900"
  },
  {
    "text": "together so entities can be placed into arbitrary group hierarchies so then you can start building sort of a group",
    "start": "1363900",
    "end": "1369060"
  },
  {
    "text": "notion in a much richer way right and so you know one question is like well why",
    "start": "1369060",
    "end": "1374100"
  },
  {
    "text": "deal with this in volt if I have a notion of groups and something like LDAP the challenge becomes how do you start",
    "start": "1374100",
    "end": "1380550"
  },
  {
    "text": "bridging all this where you have one set of apps where your source of truth your sort of set of trust is Amazon you're",
    "start": "1380550",
    "end": "1386550"
  },
  {
    "text": "using Amazon as a trusted third party to say hey this is a web server and then you have users who are coming in via",
    "start": "1386550",
    "end": "1391740"
  },
  {
    "text": "LDAP and you have a separate set of applications they're authenticating against your kubernetes cluster and gke",
    "start": "1391740",
    "end": "1396990"
  },
  {
    "text": "there's no longer a single identity provider right there's no single source of truth of who's in my web server group",
    "start": "1396990",
    "end": "1404070"
  },
  {
    "text": "right and you know my kubernetes cluster being in my web server group means I'm a pod with a particular tag and Amazon it",
    "start": "1404070",
    "end": "1410790"
  },
  {
    "text": "might mean I have a certain tag on my VM or I'm a certain ami and an LDAP it means I'm in the web dev group and so",
    "start": "1410790",
    "end": "1417000"
  },
  {
    "text": "what this really starts to let us do is sort of take a step back from the platform specific nature of our identity",
    "start": "1417000",
    "end": "1422760"
  },
  {
    "text": "and map all of these things in and to sort of a more cohesive shared set of identity so I can just go in and say you",
    "start": "1422760",
    "end": "1428130"
  },
  {
    "text": "know what my whole web dev group has one set of authorization and it doesn't matter whether they're authenticating against my my kubernetes cluster or as",
    "start": "1428130",
    "end": "1434640"
  },
  {
    "text": "an Amazon ami or they're coming in via LDAP and so that's what it's really about is allowing it to be much simpler",
    "start": "1434640",
    "end": "1439830"
  },
  {
    "text": "to have this consistent way of doing it so you're not sort of repeating the work three or four times I guess I should",
    "start": "1439830",
    "end": "1446910"
  },
  {
    "text": "just gone to this slide but yes the basic idea is based bridging across multiple different sources I have",
    "start": "1446910",
    "end": "1452070"
  },
  {
    "text": "identity as we're sort of losing this single notion of truth so moving on a",
    "start": "1452070",
    "end": "1458580"
  },
  {
    "text": "little bit now is the kubernetes off back-end we released this one with vault zero eight three and we work pretty",
    "start": "1458580",
    "end": "1465540"
  },
  {
    "text": "closely with the folks at Google and other members of the community who have much more expertise in the platform",
    "start": "1465540",
    "end": "1470870"
  },
  {
    "text": "than we do and so the basic idea the very very highest level is how do we",
    "start": "1470870",
    "end": "1477170"
  },
  {
    "text": "bind something in kubernetes that's going to provide a sense of identity for our application our pod to something",
    "start": "1477170",
    "end": "1484790"
  },
  {
    "text": "that vault can actually verify you know in a in a sort of a cryptographically",
    "start": "1484790",
    "end": "1489890"
  },
  {
    "text": "trustable way that that we can assert strongly the identity of the other end",
    "start": "1489890",
    "end": "1494990"
  },
  {
    "text": "basically the caller and so the mechanism that vault really relies on here is the notion of a service account",
    "start": "1494990",
    "end": "1501290"
  },
  {
    "text": "and so what we're doing is binding roles within vault to roles within kubernetes using these shared service accounts the",
    "start": "1501290",
    "end": "1509090"
  },
  {
    "text": "nice thing about doing those is that we have this cryptographic property we can lean on of the JWT s to actually make",
    "start": "1509090",
    "end": "1515510"
  },
  {
    "text": "sure that hey is this just a fabricated thing the pod has come up with or is this actually officially signed by the platform that we're trusting and the",
    "start": "1515510",
    "end": "1522140"
  },
  {
    "text": "nice thing is because these are built into kubernetes already there's no additional moving pieces so for folks",
    "start": "1522140",
    "end": "1527450"
  },
  {
    "text": "have been kind of following the kind of vault and kubernetes you know the the evolution of the integration story for a",
    "start": "1527450",
    "end": "1534320"
  },
  {
    "text": "while there was a few different approaches but they required using different service brokers so there was a few different moving pieces that you had",
    "start": "1534320",
    "end": "1540950"
  },
  {
    "text": "to kind of coordinate and as different api's would break on the two sides you had to kind of you were you were getting",
    "start": "1540950",
    "end": "1546110"
  },
  {
    "text": "of the paper cuts of that so the nice thing here is it's a pure native integration of all it's a pure native integration in kubernetes and there's no",
    "start": "1546110",
    "end": "1552260"
  },
  {
    "text": "additional moving pieces so just to flow through what does it actually look like",
    "start": "1552260",
    "end": "1557360"
  },
  {
    "text": "sort of as as the kind of the bits flow in this sort of starting state we have",
    "start": "1557360",
    "end": "1563210"
  },
  {
    "text": "volt running somewhere maybe within kubernetes maybe the outside of Cooper neighs doesn't matter for this example and then we have a pod that's been",
    "start": "1563210",
    "end": "1569210"
  },
  {
    "text": "scheduled somewhere with a service account token so the first thing that happens is when our container boots it's",
    "start": "1569210",
    "end": "1575720"
  },
  {
    "text": "reading the service accounts jot this might be the app or it might be a sidecar that's doing some of those",
    "start": "1575720",
    "end": "1581000"
  },
  {
    "text": "lifting on behalf of the app but we read the jot then we send it over to vault and say here's a thing that should prove",
    "start": "1581000",
    "end": "1586400"
  },
  {
    "text": "that I am who I say I am I'd like to have access to vault now then what vault",
    "start": "1586400",
    "end": "1591440"
  },
  {
    "text": "does is verified that this shot is actually cryptographically signed and valid this thing says it is who it",
    "start": "1591440",
    "end": "1597020"
  },
  {
    "text": "claims to be and then we go even further and call into kubernetes touken review api and say can you also",
    "start": "1597020",
    "end": "1602360"
  },
  {
    "text": "verify this and return any additional information you might have about you know this entity and then finally once",
    "start": "1602360",
    "end": "1610610"
  },
  {
    "text": "we've checked it out everything is verified and it looks good to go then we return the token back to the container",
    "start": "1610610",
    "end": "1615679"
  },
  {
    "text": "and at this point the container is holding a volt token so the nice thing about this integration as opposed to a",
    "start": "1615679",
    "end": "1622070"
  },
  {
    "text": "few others that were sort of considered is this means the application can make use of any of volts capabilities so not",
    "start": "1622070",
    "end": "1628670"
  },
  {
    "text": "just thinking about full as sort of a back-end for kubernetes secrets where we're going to just do treat it as sort",
    "start": "1628670",
    "end": "1633890"
  },
  {
    "text": "of a BitLocker but we can actually leverage dynamic secrets cryptographic offload dynamic SSL Certificates the",
    "start": "1633890",
    "end": "1640550"
  },
  {
    "text": "whole sort of gamut of vault is available because we have an actual vault token in terms of how we actually",
    "start": "1640550",
    "end": "1647150"
  },
  {
    "text": "configure this thing it's relatively straightforward so the first thing we do in vault land is enable the Cooper naze",
    "start": "1647150",
    "end": "1653420"
  },
  {
    "text": "back-end so everything involves sort of off-white of a default so you have to sort opt-in so we opt in and say ok I'm",
    "start": "1653420",
    "end": "1659179"
  },
  {
    "text": "gonna set up a kubernetes back-end as a system that I trust and then the first thing we have to do is configure it and",
    "start": "1659179",
    "end": "1664760"
  },
  {
    "text": "say you know where is the kubernetes cluster you know what are those you know the CA certificates how do we establish",
    "start": "1664760",
    "end": "1669920"
  },
  {
    "text": "trust of the platform that we want to authenticate against so this is sort of a one-time configuration we set up the",
    "start": "1669920",
    "end": "1676760"
  },
  {
    "text": "the sort of linkage between vault and our cluster then what we do is for each role that we care about this might be on",
    "start": "1676760",
    "end": "1683120"
  },
  {
    "text": "sort of a per service level we define what that mapping is between you know something we trust in kubernetes and the",
    "start": "1683120",
    "end": "1689150"
  },
  {
    "text": "policy definitions within vault so here we're just writing a you know a demo role where we say ok if you see anything",
    "start": "1689150",
    "end": "1695750"
  },
  {
    "text": "that has the vault earth service account in the default namespace map that into vaults kuvasz policy so",
    "start": "1695750",
    "end": "1702920"
  },
  {
    "text": "anything that logs in with that service account will get whatever is granted to it by the crew bath policy within vault",
    "start": "1702920",
    "end": "1708910"
  },
  {
    "text": "and then on the side of the client let's say now we've actually scheduled something that has access to that shot",
    "start": "1708910",
    "end": "1715100"
  },
  {
    "text": "it boots up grabs its shot and it's effectively issuing at the API equivalent of this call probably not",
    "start": "1715100",
    "end": "1721100"
  },
  {
    "text": "using the CLI and providing the shot and saying hey I'm logging in as this demo role and so once of all verifies it you",
    "start": "1721100",
    "end": "1727850"
  },
  {
    "text": "know out comes the token so here we'll see sort of the standard login or we're getting a token back as well as",
    "start": "1727850",
    "end": "1733340"
  },
  {
    "text": "the policy that's associated in this case we can see the default as well as the coup both policies are associated",
    "start": "1733340",
    "end": "1738529"
  },
  {
    "text": "with those token and some amount of metadata so the metadata just helps us with in sort of the audit trail understand what's going on how does this",
    "start": "1738529",
    "end": "1745129"
  },
  {
    "text": "thing tie back to the kubernetes system so briefly just to close out you know",
    "start": "1745129",
    "end": "1751429"
  },
  {
    "text": "when we think about volt there's these three primary kind of things we talked about the first one is really secret",
    "start": "1751429",
    "end": "1757700"
  },
  {
    "text": "management and how we thread through these credentials especially in an automated way right what we don't want",
    "start": "1757700",
    "end": "1763370"
  },
  {
    "text": "to do is boot a machine and then file a ticket against our security team and say by the way this machine is running",
    "start": "1763370",
    "end": "1768710"
  },
  {
    "text": "somewhere you know please go get a database password and put it on on that machine right we'd like to be able to do",
    "start": "1768710",
    "end": "1774169"
  },
  {
    "text": "end-to-end automation and bring our secrets along with us the second use case that we didn't talk about at all as",
    "start": "1774169",
    "end": "1780679"
  },
  {
    "text": "encryption as a service which really is about how do we push the key management out of our applications and up Deauville",
    "start": "1780679",
    "end": "1786889"
  },
  {
    "text": "and let vault handle key versioning key rotation and key decommissioning and then just provide high-level api so say",
    "start": "1786889",
    "end": "1793340"
  },
  {
    "text": "encrypt decrypt sign verify hm a whole nine yards and the final bit is great we've centralized all this we've",
    "start": "1793340",
    "end": "1799549"
  },
  {
    "text": "achieved you know we've defeated secret sprawl everything is in one place how do our human operators access everything",
    "start": "1799549",
    "end": "1805399"
  },
  {
    "text": "right we don't want them to interface just with you know an API that that's sort of painful so instead really",
    "start": "1805399",
    "end": "1810769"
  },
  {
    "text": "thinking about identity and access control and sort of user management as a first-class challenge within volt and so",
    "start": "1810769",
    "end": "1818809"
  },
  {
    "text": "within that we sort of talked on on the secret management bits we talked about the kubernetes integration but there's lots and lots we didn't cover so if this",
    "start": "1818809",
    "end": "1825679"
  },
  {
    "text": "is interesting please check out either bolts website or you know search YouTube there's a bunch of other talks on this or check out the house Schubert blog",
    "start": "1825679",
    "end": "1832360"
  },
  {
    "text": "thank you so much and you know quick there's some stickers up in the front so",
    "start": "1832360",
    "end": "1837769"
  },
  {
    "text": "if you lose any of the hash controls vault included please help yourself thanks so much [Applause]",
    "start": "1837769",
    "end": "1845489"
  }
]