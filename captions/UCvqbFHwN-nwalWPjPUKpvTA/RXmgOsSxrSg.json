[
  {
    "text": "hi everyone i'm sun kuranganath i'm a",
    "start": "480",
    "end": "2480"
  },
  {
    "text": "network software engineer in intel",
    "start": "2480",
    "end": "4400"
  },
  {
    "text": "working on enabling service mesh for 5g",
    "start": "4400",
    "end": "6960"
  },
  {
    "text": "and edge environments",
    "start": "6960",
    "end": "8559"
  },
  {
    "text": "topic today i'm presenting title are you",
    "start": "8559",
    "end": "10800"
  },
  {
    "text": "sure about your mesh performance",
    "start": "10800",
    "end": "12799"
  },
  {
    "text": "details matter along with myrthika and",
    "start": "12799",
    "end": "15679"
  },
  {
    "text": "otto",
    "start": "15679",
    "end": "16560"
  },
  {
    "text": "here's the legal disclaimer high level",
    "start": "16560",
    "end": "19600"
  },
  {
    "text": "agenda we start off looking at some of",
    "start": "19600",
    "end": "21680"
  },
  {
    "text": "the important aspects to keep in mind",
    "start": "21680",
    "end": "23920"
  },
  {
    "text": "while measuring your mesh deployment we",
    "start": "23920",
    "end": "26640"
  },
  {
    "text": "then share",
    "start": "26640",
    "end": "27359"
  },
  {
    "text": "the some of the results and observations",
    "start": "27359",
    "end": "29599"
  },
  {
    "text": "uh with the performance studies we have",
    "start": "29599",
    "end": "31199"
  },
  {
    "text": "done on bare metal and virtualized",
    "start": "31199",
    "end": "32960"
  },
  {
    "text": "environment",
    "start": "32960",
    "end": "34000"
  },
  {
    "text": "otto would then talk about some of the",
    "start": "34000",
    "end": "35680"
  },
  {
    "text": "benchmarking pitfalls around tooling",
    "start": "35680",
    "end": "38079"
  },
  {
    "text": "and test environment and method i would",
    "start": "38079",
    "end": "40399"
  },
  {
    "text": "end the talk",
    "start": "40399",
    "end": "41440"
  },
  {
    "text": "sharing some of the ongoing work so if",
    "start": "41440",
    "end": "44399"
  },
  {
    "text": "you're someone looking to understand",
    "start": "44399",
    "end": "45760"
  },
  {
    "text": "your mesh deployment",
    "start": "45760",
    "end": "47520"
  },
  {
    "text": "you would sort of setting up your",
    "start": "47520",
    "end": "49200"
  },
  {
    "text": "cluster your service mesh application",
    "start": "49200",
    "end": "51120"
  },
  {
    "text": "under test",
    "start": "51120",
    "end": "51760"
  },
  {
    "text": "pick a benchmarking tool configure your",
    "start": "51760",
    "end": "54480"
  },
  {
    "text": "transactions per second",
    "start": "54480",
    "end": "56399"
  },
  {
    "text": "or protocol of interest test duration",
    "start": "56399",
    "end": "59520"
  },
  {
    "text": "connections then run the test and",
    "start": "59520",
    "end": "62160"
  },
  {
    "text": "capture the results",
    "start": "62160",
    "end": "63520"
  },
  {
    "text": "however if you closely look at this",
    "start": "63520",
    "end": "65040"
  },
  {
    "text": "picture what's missing",
    "start": "65040",
    "end": "67200"
  },
  {
    "text": "right so turns out quite a lot for the",
    "start": "67200",
    "end": "69760"
  },
  {
    "text": "purposes of this talk let's assume",
    "start": "69760",
    "end": "72400"
  },
  {
    "text": "east-west traffic is trafficked between",
    "start": "72400",
    "end": "74960"
  },
  {
    "text": "microservices",
    "start": "74960",
    "end": "76080"
  },
  {
    "text": "either in the same pod or across the",
    "start": "76080",
    "end": "78560"
  },
  {
    "text": "pods",
    "start": "78560",
    "end": "79360"
  },
  {
    "text": "either on the same virtual machine or",
    "start": "79360",
    "end": "81119"
  },
  {
    "text": "across different virtual machines",
    "start": "81119",
    "end": "83280"
  },
  {
    "text": "or across different hosts and not so",
    "start": "83280",
    "end": "85840"
  },
  {
    "text": "traffic is something",
    "start": "85840",
    "end": "87360"
  },
  {
    "text": "traffic coming in and out of a specific",
    "start": "87360",
    "end": "89759"
  },
  {
    "text": "host",
    "start": "89759",
    "end": "90880"
  },
  {
    "text": "so depending on how you configure the",
    "start": "90880",
    "end": "93439"
  },
  {
    "text": "number of hops",
    "start": "93439",
    "end": "94400"
  },
  {
    "text": "between your source and destination",
    "start": "94400",
    "end": "97439"
  },
  {
    "text": "that your mesh performance has a huge",
    "start": "97439",
    "end": "99920"
  },
  {
    "text": "impact for example your",
    "start": "99920",
    "end": "101520"
  },
  {
    "text": "load balancer your api gateways ingress",
    "start": "101520",
    "end": "103759"
  },
  {
    "text": "controllers firewall",
    "start": "103759",
    "end": "105280"
  },
  {
    "text": "all of these add a good amount of",
    "start": "105280",
    "end": "107600"
  },
  {
    "text": "latency",
    "start": "107600",
    "end": "108320"
  },
  {
    "text": "uh impacting overall performance of your",
    "start": "108320",
    "end": "110240"
  },
  {
    "text": "mesh not just that",
    "start": "110240",
    "end": "112000"
  },
  {
    "text": "that's your hardware settings related to",
    "start": "112000",
    "end": "113680"
  },
  {
    "text": "your bias settings",
    "start": "113680",
    "end": "115439"
  },
  {
    "text": "power management new awareness type",
    "start": "115439",
    "end": "118000"
  },
  {
    "text": "accelerators",
    "start": "118000",
    "end": "119119"
  },
  {
    "text": "or your operating system settings type",
    "start": "119119",
    "end": "121439"
  },
  {
    "text": "of networking stack you would use kernel",
    "start": "121439",
    "end": "123360"
  },
  {
    "text": "versus user plane stack",
    "start": "123360",
    "end": "124960"
  },
  {
    "text": "all the type of tuning you would do",
    "start": "124960",
    "end": "126719"
  },
  {
    "text": "across your l2 and three layer",
    "start": "126719",
    "end": "129119"
  },
  {
    "text": "right and your load generator settings",
    "start": "129119",
    "end": "131440"
  },
  {
    "text": "all of these have",
    "start": "131440",
    "end": "132560"
  },
  {
    "text": "a good amount of impact on your mesh",
    "start": "132560",
    "end": "134800"
  },
  {
    "text": "performance",
    "start": "134800",
    "end": "136000"
  },
  {
    "text": "so for the ultimately what's important",
    "start": "136000",
    "end": "138879"
  },
  {
    "text": "is to have a",
    "start": "138879",
    "end": "139760"
  },
  {
    "text": "method to have a consistent results",
    "start": "139760",
    "end": "142640"
  },
  {
    "text": "across",
    "start": "142640",
    "end": "143840"
  },
  {
    "text": "a repeated number of uh test cycles",
    "start": "143840",
    "end": "146400"
  },
  {
    "text": "right so that's the crucial part",
    "start": "146400",
    "end": "148720"
  },
  {
    "text": "so we started off looking at performance",
    "start": "148720",
    "end": "151920"
  },
  {
    "text": "of envoy",
    "start": "151920",
    "end": "153200"
  },
  {
    "text": "leveraging the unvoiced friend proxy",
    "start": "153200",
    "end": "155280"
  },
  {
    "text": "sandbox available part of the online",
    "start": "155280",
    "end": "157440"
  },
  {
    "text": "source code",
    "start": "157440",
    "end": "158319"
  },
  {
    "text": "well if you're someone new looking to",
    "start": "158319",
    "end": "159920"
  },
  {
    "text": "understand service mesh with envoy",
    "start": "159920",
    "end": "163040"
  },
  {
    "text": "front pro the sandboxes provided are",
    "start": "163040",
    "end": "166080"
  },
  {
    "text": "really great way to",
    "start": "166080",
    "end": "167280"
  },
  {
    "text": "understand which is where i was uh just",
    "start": "167280",
    "end": "170000"
  },
  {
    "text": "a few short months ago",
    "start": "170000",
    "end": "172080"
  },
  {
    "text": "so in this example front proxy uh",
    "start": "172080",
    "end": "174879"
  },
  {
    "text": "sandbox provides a simple",
    "start": "174879",
    "end": "176560"
  },
  {
    "text": "enviro acting as a load balancer at the",
    "start": "176560",
    "end": "179360"
  },
  {
    "text": "front",
    "start": "179360",
    "end": "179760"
  },
  {
    "text": "uh service saying two services as i was",
    "start": "179760",
    "end": "182000"
  },
  {
    "text": "one service two",
    "start": "182000",
    "end": "183200"
  },
  {
    "text": "each of them having a simple flask app",
    "start": "183200",
    "end": "185920"
  },
  {
    "text": "and",
    "start": "185920",
    "end": "186400"
  },
  {
    "text": "on y has a cycle process in a in a",
    "start": "186400",
    "end": "189200"
  },
  {
    "text": "docker container",
    "start": "189200",
    "end": "190800"
  },
  {
    "text": "so type of test we do is scale the",
    "start": "190800",
    "end": "192959"
  },
  {
    "text": "number of service one end points from",
    "start": "192959",
    "end": "194720"
  },
  {
    "text": "either anywhere from one to 100 uh look",
    "start": "194720",
    "end": "197760"
  },
  {
    "text": "at",
    "start": "197760",
    "end": "198000"
  },
  {
    "text": "the amount of transactions resolved",
    "start": "198000",
    "end": "200879"
  },
  {
    "text": "clear latency",
    "start": "200879",
    "end": "202159"
  },
  {
    "text": "uh change the traffic generator settings",
    "start": "202159",
    "end": "204560"
  },
  {
    "text": "so ultimately",
    "start": "204560",
    "end": "205519"
  },
  {
    "text": "what we're trying to understand is",
    "start": "205519",
    "end": "208720"
  },
  {
    "text": "performance impact with scaling the",
    "start": "208720",
    "end": "210879"
  },
  {
    "text": "number of course",
    "start": "210879",
    "end": "212319"
  },
  {
    "text": "or a number of connections uh along with",
    "start": "212319",
    "end": "215120"
  },
  {
    "text": "uh scaling the number of flasks or",
    "start": "215120",
    "end": "217120"
  },
  {
    "text": "online instances so to give you an idea",
    "start": "217120",
    "end": "220480"
  },
  {
    "text": "of the results",
    "start": "220480",
    "end": "221680"
  },
  {
    "text": "so if you look at here uh on the x-axis",
    "start": "221680",
    "end": "224080"
  },
  {
    "text": "you have a number of on",
    "start": "224080",
    "end": "226000"
  },
  {
    "text": "app or on y uh microservices from",
    "start": "226000",
    "end": "228720"
  },
  {
    "text": "anywhere from two to hundred",
    "start": "228720",
    "end": "230560"
  },
  {
    "text": "and y axis here uh one side you have the",
    "start": "230560",
    "end": "232879"
  },
  {
    "text": "transactions result",
    "start": "232879",
    "end": "234239"
  },
  {
    "text": "other side you have latency you could",
    "start": "234239",
    "end": "236400"
  },
  {
    "text": "see from the bar graphs of",
    "start": "236400",
    "end": "238159"
  },
  {
    "text": "with the one core versus two versus four",
    "start": "238159",
    "end": "240799"
  },
  {
    "text": "course",
    "start": "240799",
    "end": "241680"
  },
  {
    "text": "especially you have when you have a",
    "start": "241680",
    "end": "243599"
  },
  {
    "text": "higher container count",
    "start": "243599",
    "end": "245439"
  },
  {
    "text": "about hundred um at a thousand",
    "start": "245439",
    "end": "248799"
  },
  {
    "text": "dps input i could see with four course",
    "start": "248799",
    "end": "251920"
  },
  {
    "text": "all the thousands have been successfully",
    "start": "251920",
    "end": "253439"
  },
  {
    "text": "resolved versus one core",
    "start": "253439",
    "end": "255200"
  },
  {
    "text": "where not even reached to the 200 dps",
    "start": "255200",
    "end": "258639"
  },
  {
    "text": "and your p99 latency has a huge impact",
    "start": "258639",
    "end": "261519"
  },
  {
    "text": "of 4.5 times",
    "start": "261519",
    "end": "263360"
  },
  {
    "text": "when you have four cores available and",
    "start": "263360",
    "end": "265120"
  },
  {
    "text": "keeping it steady",
    "start": "265120",
    "end": "267199"
  },
  {
    "text": "and when you scale it across the entire",
    "start": "267199",
    "end": "269199"
  },
  {
    "text": "socket with 48 cores",
    "start": "269199",
    "end": "271680"
  },
  {
    "text": "you could see a 10 000 tps input you",
    "start": "271680",
    "end": "274880"
  },
  {
    "text": "could see it could achieve",
    "start": "274880",
    "end": "276400"
  },
  {
    "text": "well over 7000 dps with the whole socket",
    "start": "276400",
    "end": "279759"
  },
  {
    "text": "versus four cores which is about 200 in",
    "start": "279759",
    "end": "283360"
  },
  {
    "text": "this case",
    "start": "283360",
    "end": "284800"
  },
  {
    "text": "at 10 000 dps input and with 64",
    "start": "284800",
    "end": "287280"
  },
  {
    "text": "connections",
    "start": "287280",
    "end": "288800"
  },
  {
    "text": "versus your tail latencies uh where",
    "start": "288800",
    "end": "291840"
  },
  {
    "text": "they've been study",
    "start": "291840",
    "end": "293440"
  },
  {
    "text": "across the 10 000 dps input versus the",
    "start": "293440",
    "end": "296560"
  },
  {
    "text": "four core case where your latency goes",
    "start": "296560",
    "end": "298639"
  },
  {
    "text": "well over",
    "start": "298639",
    "end": "299360"
  },
  {
    "text": "seconds one second uh if you look at the",
    "start": "299360",
    "end": "302880"
  },
  {
    "text": "cpu utilization across the is four cores",
    "start": "302880",
    "end": "306320"
  },
  {
    "text": "and when still cross 1000 tps input rate",
    "start": "306320",
    "end": "310000"
  },
  {
    "text": "your cpu utilization uh for your flask",
    "start": "310000",
    "end": "313280"
  },
  {
    "text": "cap and cycle proxy goes",
    "start": "313280",
    "end": "315680"
  },
  {
    "text": "close to 100 right anything over 1000",
    "start": "315680",
    "end": "319039"
  },
  {
    "text": "right so reaching 100",
    "start": "319039",
    "end": "320560"
  },
  {
    "text": "which is which is a lot so essentially",
    "start": "320560",
    "end": "323360"
  },
  {
    "text": "we found",
    "start": "323360",
    "end": "324000"
  },
  {
    "text": "that number of cores have a significant",
    "start": "324000",
    "end": "327199"
  },
  {
    "text": "impact",
    "start": "327199",
    "end": "327919"
  },
  {
    "text": "on overall mesh performance uh isolated",
    "start": "327919",
    "end": "330880"
  },
  {
    "text": "course and core pinning",
    "start": "330880",
    "end": "332960"
  },
  {
    "text": "are necessarily helpful which is what",
    "start": "332960",
    "end": "334960"
  },
  {
    "text": "some of the telco deployments do",
    "start": "334960",
    "end": "337039"
  },
  {
    "text": "i isolate the cores and open the",
    "start": "337039",
    "end": "339840"
  },
  {
    "text": "microservices",
    "start": "339840",
    "end": "340800"
  },
  {
    "text": "right so it's not necessarily helpful",
    "start": "340800",
    "end": "342400"
  },
  {
    "text": "and we found that we could do a",
    "start": "342400",
    "end": "344240"
  },
  {
    "text": "quite a lot of optimizations to achieve",
    "start": "344240",
    "end": "347199"
  },
  {
    "text": "better performance",
    "start": "347199",
    "end": "348400"
  },
  {
    "text": "even compared to what's here so here's",
    "start": "348400",
    "end": "351120"
  },
  {
    "text": "an example of",
    "start": "351120",
    "end": "352000"
  },
  {
    "text": "a telco deployment where you would have",
    "start": "352000",
    "end": "354880"
  },
  {
    "text": "a kubernetes in a virtual machine",
    "start": "354880",
    "end": "356800"
  },
  {
    "text": "either in a",
    "start": "356800",
    "end": "360000"
  },
  {
    "text": "same host different host right so in",
    "start": "360000",
    "end": "362400"
  },
  {
    "text": "this example we did",
    "start": "362400",
    "end": "363919"
  },
  {
    "text": "uh master uh communities master invert",
    "start": "363919",
    "end": "366720"
  },
  {
    "text": "one",
    "start": "366720",
    "end": "367120"
  },
  {
    "text": "vm and one host and kubernetes work on a",
    "start": "367120",
    "end": "369280"
  },
  {
    "text": "different host",
    "start": "369280",
    "end": "370800"
  },
  {
    "text": "and we look at calico and sto with their",
    "start": "370800",
    "end": "373520"
  },
  {
    "text": "defaults",
    "start": "373520",
    "end": "374639"
  },
  {
    "text": "um and on the worker host um for the",
    "start": "374639",
    "end": "377680"
  },
  {
    "text": "data plane",
    "start": "377680",
    "end": "379360"
  },
  {
    "text": "we'd use obs dpdk right so some of the",
    "start": "379360",
    "end": "381759"
  },
  {
    "text": "top coated plywoods use either obs ppdk",
    "start": "381759",
    "end": "384319"
  },
  {
    "text": "or sioe",
    "start": "384319",
    "end": "385680"
  },
  {
    "text": "uh type of scenarios in this example we",
    "start": "385680",
    "end": "388400"
  },
  {
    "text": "have two polema drivers",
    "start": "388400",
    "end": "389840"
  },
  {
    "text": "um servicing the data plane traffic",
    "start": "389840",
    "end": "393440"
  },
  {
    "text": "and the idea is to understand the impact",
    "start": "393440",
    "end": "396240"
  },
  {
    "text": "of istio in this type of deployment",
    "start": "396240",
    "end": "398479"
  },
  {
    "text": "right and ford io client would",
    "start": "398479",
    "end": "401600"
  },
  {
    "text": "uh talk to nginx web server running in a",
    "start": "401600",
    "end": "404080"
  },
  {
    "text": "pod along with",
    "start": "404080",
    "end": "405680"
  },
  {
    "text": "on voice site called proxy i have two",
    "start": "405680",
    "end": "407759"
  },
  {
    "text": "configurations here",
    "start": "407759",
    "end": "408800"
  },
  {
    "text": "for ford io client running as a",
    "start": "408800",
    "end": "411840"
  },
  {
    "text": "process outside of kubernetes cluster",
    "start": "411840",
    "end": "414479"
  },
  {
    "text": "either within",
    "start": "414479",
    "end": "416160"
  },
  {
    "text": "the kubernetes master vm or on the bare",
    "start": "416160",
    "end": "419120"
  },
  {
    "text": "metal host",
    "start": "419120",
    "end": "420160"
  },
  {
    "text": "and the idea is to understand the knots",
    "start": "420160",
    "end": "422560"
  },
  {
    "text": "of traffic",
    "start": "422560",
    "end": "423199"
  },
  {
    "text": "going in and out of this host",
    "start": "423199",
    "end": "426560"
  },
  {
    "text": "so to give you a brief uh view of the",
    "start": "426560",
    "end": "429440"
  },
  {
    "text": "results",
    "start": "429440",
    "end": "430400"
  },
  {
    "text": "all right so for the vm to vm case where",
    "start": "430400",
    "end": "432960"
  },
  {
    "text": "ford io and vm versus",
    "start": "432960",
    "end": "434800"
  },
  {
    "text": "engine export another vm under two",
    "start": "434800",
    "end": "437120"
  },
  {
    "text": "different hosts you could see",
    "start": "437120",
    "end": "438960"
  },
  {
    "text": "adding istio adds about three times the",
    "start": "438960",
    "end": "442240"
  },
  {
    "text": "latency",
    "start": "442240",
    "end": "442960"
  },
  {
    "text": "across different tps rate and",
    "start": "442960",
    "end": "446080"
  },
  {
    "text": "um at about 10 000 dps where without",
    "start": "446080",
    "end": "449199"
  },
  {
    "text": "steel you could resolve 10 000 dps",
    "start": "449199",
    "end": "451759"
  },
  {
    "text": "it still adds in about 46 performance",
    "start": "451759",
    "end": "455039"
  },
  {
    "text": "degradation",
    "start": "455039",
    "end": "456639"
  },
  {
    "text": "and with respect to the case where",
    "start": "456639",
    "end": "460319"
  },
  {
    "text": "ford io is on the master host reaching",
    "start": "460319",
    "end": "463280"
  },
  {
    "text": "the engine x bar in the vm",
    "start": "463280",
    "end": "465360"
  },
  {
    "text": "istio adds about four times the latency",
    "start": "465360",
    "end": "468319"
  },
  {
    "text": "and about 11 11",
    "start": "468319",
    "end": "470319"
  },
  {
    "text": "performance degradation about 10 000 dps",
    "start": "470319",
    "end": "472879"
  },
  {
    "text": "rate",
    "start": "472879",
    "end": "473680"
  },
  {
    "text": "in hyper traffic you could see uh",
    "start": "473680",
    "end": "475440"
  },
  {
    "text": "anywhere from 32 to 60",
    "start": "475440",
    "end": "478319"
  },
  {
    "text": "depending on the case right um so",
    "start": "478319",
    "end": "481280"
  },
  {
    "text": "essentially what we found",
    "start": "481280",
    "end": "482639"
  },
  {
    "text": "is um there's a good amount of",
    "start": "482639",
    "end": "484560"
  },
  {
    "text": "performance impact",
    "start": "484560",
    "end": "485680"
  },
  {
    "text": "adding istio in a virtualized",
    "start": "485680",
    "end": "487759"
  },
  {
    "text": "environment",
    "start": "487759",
    "end": "488720"
  },
  {
    "text": "and we could see um the",
    "start": "488720",
    "end": "491759"
  },
  {
    "text": "across the stack starting from cpus in",
    "start": "491759",
    "end": "494479"
  },
  {
    "text": "this case we have 10",
    "start": "494479",
    "end": "496240"
  },
  {
    "text": "and of course made available for vm",
    "start": "496240",
    "end": "498639"
  },
  {
    "text": "right so",
    "start": "498639",
    "end": "499440"
  },
  {
    "text": "a cpu number of course type of course",
    "start": "499440",
    "end": "502160"
  },
  {
    "text": "calico config",
    "start": "502160",
    "end": "503280"
  },
  {
    "text": "or respective mtu connection rate",
    "start": "503280",
    "end": "506400"
  },
  {
    "text": "uh right or your on y config with",
    "start": "506400",
    "end": "509199"
  },
  {
    "text": "respect to",
    "start": "509199",
    "end": "510000"
  },
  {
    "text": "number of course versus number of online",
    "start": "510000",
    "end": "511919"
  },
  {
    "text": "worker threats right so there are a lot",
    "start": "511919",
    "end": "513360"
  },
  {
    "text": "of variables",
    "start": "513360",
    "end": "514560"
  },
  {
    "text": "across the stack that we could look into",
    "start": "514560",
    "end": "516240"
  },
  {
    "text": "or tune into",
    "start": "516240",
    "end": "517599"
  },
  {
    "text": "a few observations so hardware tuning",
    "start": "517599",
    "end": "521680"
  },
  {
    "text": "a lot of things could be done for",
    "start": "521680",
    "end": "523360"
  },
  {
    "text": "example for our management policies",
    "start": "523360",
    "end": "525279"
  },
  {
    "text": "uh simple thing to do is turn off all",
    "start": "525279",
    "end": "527279"
  },
  {
    "text": "power management options",
    "start": "527279",
    "end": "528720"
  },
  {
    "text": "however we found and depending on the",
    "start": "528720",
    "end": "531680"
  },
  {
    "text": "peace states and c-state conflict",
    "start": "531680",
    "end": "532800"
  },
  {
    "text": "conflict",
    "start": "532800",
    "end": "533360"
  },
  {
    "text": "have a good impact on dail latencies",
    "start": "533360",
    "end": "535839"
  },
  {
    "text": "enabling hyper threading",
    "start": "535839",
    "end": "537440"
  },
  {
    "text": "improves performance core isolation",
    "start": "537440",
    "end": "540320"
  },
  {
    "text": "isn't necessarily",
    "start": "540320",
    "end": "541519"
  },
  {
    "text": "helpful for example some of the cases we",
    "start": "541519",
    "end": "544000"
  },
  {
    "text": "described earlier",
    "start": "544000",
    "end": "545440"
  },
  {
    "text": "with bare metal tests right impact of",
    "start": "545440",
    "end": "547760"
  },
  {
    "text": "tuning a vm for new",
    "start": "547760",
    "end": "548959"
  },
  {
    "text": "locality or pinning queue threads",
    "start": "548959",
    "end": "552640"
  },
  {
    "text": "on on the isolated course have a as an",
    "start": "552640",
    "end": "555279"
  },
  {
    "text": "impact on tail latencies",
    "start": "555279",
    "end": "557440"
  },
  {
    "text": "you could do save cpu cycles",
    "start": "557440",
    "end": "560640"
  },
  {
    "text": "when your cpu is idling or offload",
    "start": "560640",
    "end": "563279"
  },
  {
    "text": "crypto operations for example leveraging",
    "start": "563279",
    "end": "565360"
  },
  {
    "text": "intel quick assist technology",
    "start": "565360",
    "end": "567360"
  },
  {
    "text": "or add vectorized code as another",
    "start": "567360",
    "end": "569680"
  },
  {
    "text": "solution",
    "start": "569680",
    "end": "570880"
  },
  {
    "text": "on the other side from a load generator",
    "start": "570880",
    "end": "572800"
  },
  {
    "text": "perspective quite a few things too",
    "start": "572800",
    "end": "574640"
  },
  {
    "text": "as it adds its own latency leveraging",
    "start": "574640",
    "end": "577440"
  },
  {
    "text": "kernel networking stack",
    "start": "577440",
    "end": "578880"
  },
  {
    "text": "right so the latency has a huge impact",
    "start": "578880",
    "end": "581839"
  },
  {
    "text": "um",
    "start": "581839",
    "end": "582320"
  },
  {
    "text": "depending on the backup algorithm used",
    "start": "582320",
    "end": "584880"
  },
  {
    "text": "or",
    "start": "584880",
    "end": "585760"
  },
  {
    "text": "and we find that some of the",
    "start": "585760",
    "end": "586800"
  },
  {
    "text": "optimizations could be done as respite",
    "start": "586800",
    "end": "588880"
  },
  {
    "text": "resources",
    "start": "588880",
    "end": "590000"
  },
  {
    "text": "cpu or hardware tuning micro",
    "start": "590000",
    "end": "591839"
  },
  {
    "text": "architectural analysis",
    "start": "591839",
    "end": "593760"
  },
  {
    "text": "metrics paid fee based feedback loop",
    "start": "593760",
    "end": "596160"
  },
  {
    "text": "which is how some of the",
    "start": "596160",
    "end": "597760"
  },
  {
    "text": "hardware traffic generators do otto",
    "start": "597760",
    "end": "600720"
  },
  {
    "text": "would",
    "start": "600720",
    "end": "601279"
  },
  {
    "text": "touch upon some of these in his part",
    "start": "601279",
    "end": "605440"
  },
  {
    "text": "also we found some of the l2 l3",
    "start": "605440",
    "end": "609519"
  },
  {
    "text": "traffic generators leverage rfc 2544",
    "start": "609519",
    "end": "613440"
  },
  {
    "text": "but for l7 benchmarking we haven't found",
    "start": "613440",
    "end": "616480"
  },
  {
    "text": "loads in later leveraging in",
    "start": "616480",
    "end": "618079"
  },
  {
    "text": "standardized way",
    "start": "618079",
    "end": "619600"
  },
  {
    "text": "right so we could see overall um",
    "start": "619600",
    "end": "622079"
  },
  {
    "text": "optimizations could be done",
    "start": "622079",
    "end": "623600"
  },
  {
    "text": "from a load generator perspective across",
    "start": "623600",
    "end": "626160"
  },
  {
    "text": "the stack",
    "start": "626160",
    "end": "626880"
  },
  {
    "text": "etc in fact um we've been discussing a",
    "start": "626880",
    "end": "630480"
  },
  {
    "text": "lot of this work",
    "start": "630480",
    "end": "631440"
  },
  {
    "text": "as part of cncf service mesh",
    "start": "631440",
    "end": "634560"
  },
  {
    "text": "working group which is part of a sig",
    "start": "634560",
    "end": "637040"
  },
  {
    "text": "network",
    "start": "637040",
    "end": "638240"
  },
  {
    "text": "and the the project we've been talking",
    "start": "638240",
    "end": "641360"
  },
  {
    "text": "about",
    "start": "641360",
    "end": "641839"
  },
  {
    "text": "a lot of these aspects is service mesh",
    "start": "641839",
    "end": "643839"
  },
  {
    "text": "performance",
    "start": "643839",
    "end": "644880"
  },
  {
    "text": "in fact this project has been submitted",
    "start": "644880",
    "end": "648079"
  },
  {
    "text": "to cncf",
    "start": "648079",
    "end": "649519"
  },
  {
    "text": "to be considered as a sandbox project",
    "start": "649519",
    "end": "652000"
  },
  {
    "text": "essentially smb provides a standardized",
    "start": "652000",
    "end": "654240"
  },
  {
    "text": "way of",
    "start": "654240",
    "end": "655040"
  },
  {
    "text": "running these mesh performance",
    "start": "655040",
    "end": "657360"
  },
  {
    "text": "measurements",
    "start": "657360",
    "end": "658959"
  },
  {
    "text": "looking at the vendor neutral way of uh",
    "start": "658959",
    "end": "662000"
  },
  {
    "text": "specifying mesh deployment patterns your",
    "start": "662000",
    "end": "664560"
  },
  {
    "text": "environment",
    "start": "664560",
    "end": "665279"
  },
  {
    "text": "infrastructure capturing a test results",
    "start": "665279",
    "end": "667760"
  },
  {
    "text": "essentially in a",
    "start": "667760",
    "end": "668720"
  },
  {
    "text": "automated way for example leveraging",
    "start": "668720",
    "end": "670720"
  },
  {
    "text": "measuring",
    "start": "670720",
    "end": "671920"
  },
  {
    "text": "right and so uh this is where uh",
    "start": "671920",
    "end": "675360"
  },
  {
    "text": "in fact i met otto for the first time",
    "start": "675360",
    "end": "677680"
  },
  {
    "text": "and we had a quite a few",
    "start": "677680",
    "end": "679760"
  },
  {
    "text": "fruit fruitful conversations after that",
    "start": "679760",
    "end": "682720"
  },
  {
    "text": "so with that",
    "start": "682720",
    "end": "683519"
  },
  {
    "text": "uh pass it on to otto",
    "start": "683519",
    "end": "689839"
  },
  {
    "text": "hello my name is otto van der schaff and",
    "start": "692640",
    "end": "695519"
  },
  {
    "text": "i work as a principal envoy engineer at",
    "start": "695519",
    "end": "697839"
  },
  {
    "text": "red hat with a focus on performance",
    "start": "697839",
    "end": "701040"
  },
  {
    "text": "i am an active contributor to n5 proxy",
    "start": "701040",
    "end": "703519"
  },
  {
    "text": "slash nighthawk",
    "start": "703519",
    "end": "704640"
  },
  {
    "text": "a layer 7 performance characterization",
    "start": "704640",
    "end": "706880"
  },
  {
    "text": "tool",
    "start": "706880",
    "end": "708079"
  },
  {
    "text": "in this presentation i will share some",
    "start": "708079",
    "end": "710240"
  },
  {
    "text": "of the pitfalls and observations i have",
    "start": "710240",
    "end": "712160"
  },
  {
    "text": "run into while measuring performance of",
    "start": "712160",
    "end": "714079"
  },
  {
    "text": "proxies and meshes",
    "start": "714079",
    "end": "717839"
  },
  {
    "text": "to start out i will dive into low",
    "start": "718480",
    "end": "720399"
  },
  {
    "text": "generator tooling for a bit",
    "start": "720399",
    "end": "722240"
  },
  {
    "text": "and dig into some of the divergences",
    "start": "722240",
    "end": "724240"
  },
  {
    "text": "between them",
    "start": "724240",
    "end": "725519"
  },
  {
    "text": "to illustrate it is nice to visit the",
    "start": "725519",
    "end": "727440"
  },
  {
    "text": "performance issue that was at some point",
    "start": "727440",
    "end": "729279"
  },
  {
    "text": "reported in the open source",
    "start": "729279",
    "end": "730800"
  },
  {
    "text": "envoy repository which compared nfoi",
    "start": "730800",
    "end": "733200"
  },
  {
    "text": "proxy to aj proxy",
    "start": "733200",
    "end": "736240"
  },
  {
    "text": "in that test wrk2 was used to compare",
    "start": "736240",
    "end": "739600"
  },
  {
    "text": "latencies across the two proxies",
    "start": "739600",
    "end": "741519"
  },
  {
    "text": "and envoy seemed to add two or three",
    "start": "741519",
    "end": "743760"
  },
  {
    "text": "times as much latency",
    "start": "743760",
    "end": "745920"
  },
  {
    "text": "at some point i figured that sanity",
    "start": "745920",
    "end": "748639"
  },
  {
    "text": "checking these lit numbers was where i",
    "start": "748639",
    "end": "750320"
  },
  {
    "text": "warranted",
    "start": "750320",
    "end": "752880"
  },
  {
    "text": "so i set up a reproduction and next to",
    "start": "753120",
    "end": "755440"
  },
  {
    "text": "wrk i used ford io and nighthawk to",
    "start": "755440",
    "end": "757920"
  },
  {
    "text": "measure latencies",
    "start": "757920",
    "end": "760000"
  },
  {
    "text": "while doing so wrk reproduced mean",
    "start": "760000",
    "end": "762399"
  },
  {
    "text": "latencies in the right ballpark",
    "start": "762399",
    "end": "764560"
  },
  {
    "text": "but fortio reported latencies about",
    "start": "764560",
    "end": "767440"
  },
  {
    "text": "twice as high",
    "start": "767440",
    "end": "768639"
  },
  {
    "text": "and nighthawk would in turn report",
    "start": "768639",
    "end": "770639"
  },
  {
    "text": "latencies in order of magnitude lower",
    "start": "770639",
    "end": "773279"
  },
  {
    "text": "they couldn't all possibly be right",
    "start": "773279",
    "end": "776399"
  },
  {
    "text": "in the discussion that fallout we",
    "start": "776399",
    "end": "778079"
  },
  {
    "text": "learned that the reported measurements",
    "start": "778079",
    "end": "779760"
  },
  {
    "text": "had been obtained by executing on a",
    "start": "779760",
    "end": "781440"
  },
  {
    "text": "virtual machine",
    "start": "781440",
    "end": "782720"
  },
  {
    "text": "whereas my reproduction was on a tuned",
    "start": "782720",
    "end": "785040"
  },
  {
    "text": "bare metal machine",
    "start": "785040",
    "end": "786720"
  },
  {
    "text": "still that did not explain the",
    "start": "786720",
    "end": "788720"
  },
  {
    "text": "divergence between nighthawk",
    "start": "788720",
    "end": "790399"
  },
  {
    "text": "and the other tools to understand what",
    "start": "790399",
    "end": "793360"
  },
  {
    "text": "happened there",
    "start": "793360",
    "end": "794639"
  },
  {
    "text": "we need to dig into the subtleties",
    "start": "794639",
    "end": "796480"
  },
  {
    "text": "around request release timings and",
    "start": "796480",
    "end": "798399"
  },
  {
    "text": "connection reuse",
    "start": "798399",
    "end": "801839"
  },
  {
    "text": "let's take a look at different",
    "start": "803440",
    "end": "805040"
  },
  {
    "text": "strategies that a load generator could",
    "start": "805040",
    "end": "806959"
  },
  {
    "text": "use",
    "start": "806959",
    "end": "807360"
  },
  {
    "text": "when releasing requests in terms of",
    "start": "807360",
    "end": "809200"
  },
  {
    "text": "timings and connections",
    "start": "809200",
    "end": "811519"
  },
  {
    "text": "in the display diagram on the vertical",
    "start": "811519",
    "end": "813920"
  },
  {
    "text": "axis",
    "start": "813920",
    "end": "814800"
  },
  {
    "text": "four rows are representing four",
    "start": "814800",
    "end": "816480"
  },
  {
    "text": "connections",
    "start": "816480",
    "end": "817839"
  },
  {
    "text": "the x-axis represents time",
    "start": "817839",
    "end": "821040"
  },
  {
    "text": "we're shooting for four queries per",
    "start": "821040",
    "end": "823199"
  },
  {
    "text": "second",
    "start": "823199",
    "end": "824800"
  },
  {
    "text": "as you can see this diagram shows a",
    "start": "824800",
    "end": "826880"
  },
  {
    "text": "perfectly timed request release each",
    "start": "826880",
    "end": "828880"
  },
  {
    "text": "quarter of a second",
    "start": "828880",
    "end": "830240"
  },
  {
    "text": "balancing over all the connections that",
    "start": "830240",
    "end": "832079"
  },
  {
    "text": "are available",
    "start": "832079",
    "end": "834720"
  },
  {
    "text": "the same connection and queries per",
    "start": "835360",
    "end": "837120"
  },
  {
    "text": "second parameterization can be expressed",
    "start": "837120",
    "end": "839600"
  },
  {
    "text": "in alternative ways",
    "start": "839600",
    "end": "841279"
  },
  {
    "text": "for example a load gen might depend on",
    "start": "841279",
    "end": "843440"
  },
  {
    "text": "internal or external http libraries",
    "start": "843440",
    "end": "845600"
  },
  {
    "text": "which will not prefetch connections",
    "start": "845600",
    "end": "848000"
  },
  {
    "text": "this could in turn mean that only a",
    "start": "848000",
    "end": "849680"
  },
  {
    "text": "single connection is actually involved",
    "start": "849680",
    "end": "851760"
  },
  {
    "text": "where one might not easily think",
    "start": "851760",
    "end": "854560"
  },
  {
    "text": "that four would have been involved the",
    "start": "854560",
    "end": "857120"
  },
  {
    "text": "specified amount of connection",
    "start": "857120",
    "end": "859040"
  },
  {
    "text": "serves as a maximum in this case but not",
    "start": "859040",
    "end": "861600"
  },
  {
    "text": "as a minimum",
    "start": "861600",
    "end": "864240"
  },
  {
    "text": "a load generator may also rely on a pool",
    "start": "864800",
    "end": "867120"
  },
  {
    "text": "with prefetching capabilities",
    "start": "867120",
    "end": "869760"
  },
  {
    "text": "when testing low latency replies four",
    "start": "869760",
    "end": "872079"
  },
  {
    "text": "connections will be created in this",
    "start": "872079",
    "end": "873680"
  },
  {
    "text": "scenario",
    "start": "873680",
    "end": "874480"
  },
  {
    "text": "but only one will be used for sending",
    "start": "874480",
    "end": "876320"
  },
  {
    "text": "requests",
    "start": "876320",
    "end": "878399"
  },
  {
    "text": "connection pools tend to use the most",
    "start": "878399",
    "end": "880160"
  },
  {
    "text": "recently used strategy when picking a",
    "start": "880160",
    "end": "882079"
  },
  {
    "text": "free connection from the available ones",
    "start": "882079",
    "end": "884560"
  },
  {
    "text": "depending on the specifics of what is",
    "start": "884560",
    "end": "886320"
  },
  {
    "text": "being tested a single or a few large",
    "start": "886320",
    "end": "888800"
  },
  {
    "text": "pools behaving like this",
    "start": "888800",
    "end": "890079"
  },
  {
    "text": "may or may not be desirable",
    "start": "890079",
    "end": "893120"
  },
  {
    "text": "when realistically trying to simulate",
    "start": "893120",
    "end": "894880"
  },
  {
    "text": "browsers it is probably better to have",
    "start": "894880",
    "end": "897040"
  },
  {
    "text": "lots of small pool instances that behave",
    "start": "897040",
    "end": "899040"
  },
  {
    "text": "like this",
    "start": "899040",
    "end": "900079"
  },
  {
    "text": "when simulating a downstream proxy one",
    "start": "900079",
    "end": "902880"
  },
  {
    "text": "or only a large few",
    "start": "902880",
    "end": "904560"
  },
  {
    "text": "of these pools may reflect reality",
    "start": "904560",
    "end": "908639"
  },
  {
    "text": "so this diagram visualizes yet another",
    "start": "910880",
    "end": "913600"
  },
  {
    "text": "way of releasing your request",
    "start": "913600",
    "end": "915199"
  },
  {
    "text": "as observed in the wild timing request",
    "start": "915199",
    "end": "918560"
  },
  {
    "text": "releases",
    "start": "918560",
    "end": "919440"
  },
  {
    "text": "would occur in a bit of a synchronized",
    "start": "919440",
    "end": "921279"
  },
  {
    "text": "fashion across connections",
    "start": "921279",
    "end": "923519"
  },
  {
    "text": "note that this still reflects four",
    "start": "923519",
    "end": "925040"
  },
  {
    "text": "queries per second but it may not be",
    "start": "925040",
    "end": "926880"
  },
  {
    "text": "what someone has in mind",
    "start": "926880",
    "end": "930079"
  },
  {
    "text": "now in the previous diagrams we had to",
    "start": "931600",
    "end": "933759"
  },
  {
    "text": "request reply pairs fast enough to never",
    "start": "933759",
    "end": "935920"
  },
  {
    "text": "have connections saturated",
    "start": "935920",
    "end": "937600"
  },
  {
    "text": "when it is time to release a new request",
    "start": "937600",
    "end": "940399"
  },
  {
    "text": "this diagram visualizes a situation",
    "start": "940399",
    "end": "942639"
  },
  {
    "text": "where all connections are busy and it is",
    "start": "942639",
    "end": "944560"
  },
  {
    "text": "time to issue a new request",
    "start": "944560",
    "end": "947120"
  },
  {
    "text": "load generators diverge here and how",
    "start": "947120",
    "end": "948800"
  },
  {
    "text": "they handle this",
    "start": "948800",
    "end": "950720"
  },
  {
    "text": "closed loop load generators may just",
    "start": "950720",
    "end": "952639"
  },
  {
    "text": "block and release when a connection",
    "start": "952639",
    "end": "954639"
  },
  {
    "text": "frees up",
    "start": "954639",
    "end": "956720"
  },
  {
    "text": "some track time being blocked others",
    "start": "956720",
    "end": "959040"
  },
  {
    "text": "will try to use math to correct for",
    "start": "959040",
    "end": "960959"
  },
  {
    "text": "missed requests in histogram output",
    "start": "960959",
    "end": "964160"
  },
  {
    "text": "open loop generators may report",
    "start": "964160",
    "end": "966320"
  },
  {
    "text": "connection and stream overflows",
    "start": "966320",
    "end": "969440"
  },
  {
    "text": "regardless of closed or open loop",
    "start": "969440",
    "end": "971519"
  },
  {
    "text": "methodology",
    "start": "971519",
    "end": "972800"
  },
  {
    "text": "some may allow queuing",
    "start": "972800",
    "end": "976000"
  },
  {
    "text": "what happens with the request release",
    "start": "976160",
    "end": "977920"
  },
  {
    "text": "base in ferris two",
    "start": "977920",
    "end": "979279"
  },
  {
    "text": "a lotion may or may not try to make up",
    "start": "979279",
    "end": "981759"
  },
  {
    "text": "for missed request releases by",
    "start": "981759",
    "end": "983519"
  },
  {
    "text": "increasing the pacing when possible",
    "start": "983519",
    "end": "985440"
  },
  {
    "text": "depending on implementation",
    "start": "985440",
    "end": "988959"
  },
  {
    "text": "here's an example of nighthawk warning",
    "start": "989600",
    "end": "991440"
  },
  {
    "text": "about time spent being blocked on",
    "start": "991440",
    "end": "993120"
  },
  {
    "text": "resources",
    "start": "993120",
    "end": "994160"
  },
  {
    "text": "connections in this case when it ran in",
    "start": "994160",
    "end": "996399"
  },
  {
    "text": "closed loop mode",
    "start": "996399",
    "end": "997920"
  },
  {
    "text": "we advise to consider results as invalid",
    "start": "997920",
    "end": "999920"
  },
  {
    "text": "when significant blocking is observed as",
    "start": "999920",
    "end": "1001920"
  },
  {
    "text": "latency histograms will be useless for",
    "start": "1001920",
    "end": "1003839"
  },
  {
    "text": "most purposes",
    "start": "1003839",
    "end": "1006639"
  },
  {
    "text": "the next slide shows that reporting pool",
    "start": "1006639",
    "end": "1008639"
  },
  {
    "text": "overflows in open loop mode",
    "start": "1008639",
    "end": "1010880"
  },
  {
    "text": "likewise when significant connection or",
    "start": "1010880",
    "end": "1012800"
  },
  {
    "text": "stream overflows are detected",
    "start": "1012800",
    "end": "1014639"
  },
  {
    "text": "those numbers can be checked as part of",
    "start": "1014639",
    "end": "1016560"
  },
  {
    "text": "verifying test expectations through",
    "start": "1016560",
    "end": "1018399"
  },
  {
    "text": "structured output",
    "start": "1018399",
    "end": "1021360"
  },
  {
    "text": "so let's dig into two load generators",
    "start": "1023120",
    "end": "1025199"
  },
  {
    "text": "for a bit",
    "start": "1025199",
    "end": "1026400"
  },
  {
    "text": "um let me try to explain this plot for a",
    "start": "1026400",
    "end": "1028959"
  },
  {
    "text": "bit",
    "start": "1028959",
    "end": "1030558"
  },
  {
    "text": "on the vertical axis bottom to top we",
    "start": "1030559",
    "end": "1033280"
  },
  {
    "text": "have fortio and wrk",
    "start": "1033280",
    "end": "1034959"
  },
  {
    "text": "ramping up from 50 to 4000 qps",
    "start": "1034959",
    "end": "1039199"
  },
  {
    "text": "this execution used a single connection",
    "start": "1039199",
    "end": "1042000"
  },
  {
    "text": "and was assigned a single cpu",
    "start": "1042000",
    "end": "1044400"
  },
  {
    "text": "we plot a series of p50 latency",
    "start": "1044400",
    "end": "1046720"
  },
  {
    "text": "measurements",
    "start": "1046720",
    "end": "1047438"
  },
  {
    "text": "on the horizontal axis to get a sense of",
    "start": "1047439",
    "end": "1049600"
  },
  {
    "text": "the numbers and the spread",
    "start": "1049600",
    "end": "1052000"
  },
  {
    "text": "what stood out here is that wrk",
    "start": "1052000",
    "end": "1054640"
  },
  {
    "text": "generally reports an",
    "start": "1054640",
    "end": "1055840"
  },
  {
    "text": "order of magnitude lower latencies",
    "start": "1055840",
    "end": "1057679"
  },
  {
    "text": "compared to fortio",
    "start": "1057679",
    "end": "1059039"
  },
  {
    "text": "and that its stability across test",
    "start": "1059039",
    "end": "1060720"
  },
  {
    "text": "executions was much tighter",
    "start": "1060720",
    "end": "1064160"
  },
  {
    "text": "the next slide is similar but uses 200",
    "start": "1064160",
    "end": "1066559"
  },
  {
    "text": "connections and 4 cpus",
    "start": "1066559",
    "end": "1068559"
  },
  {
    "text": "and it tracks p99.9 which is a little",
    "start": "1068559",
    "end": "1071039"
  },
  {
    "text": "bit more ambitious",
    "start": "1071039",
    "end": "1073039"
  },
  {
    "text": "what seems to be a quirk in wrk emerges",
    "start": "1073039",
    "end": "1076160"
  },
  {
    "text": "the 50 and 250 qp interference yield no",
    "start": "1076160",
    "end": "1079919"
  },
  {
    "text": "output",
    "start": "1079919",
    "end": "1080960"
  },
  {
    "text": "and the 500 qps one looks pretty weird",
    "start": "1080960",
    "end": "1085520"
  },
  {
    "text": "here we show the same plots but now from",
    "start": "1088160",
    "end": "1090080"
  },
  {
    "text": "envoy's access logs which served as a",
    "start": "1090080",
    "end": "1091760"
  },
  {
    "text": "control measurement in the experiment",
    "start": "1091760",
    "end": "1094480"
  },
  {
    "text": "so wrk was sending traffic where we",
    "start": "1094480",
    "end": "1097200"
  },
  {
    "text": "missed the output",
    "start": "1097200",
    "end": "1098160"
  },
  {
    "text": "and it doesn't look that out of the",
    "start": "1098160",
    "end": "1099520"
  },
  {
    "text": "ordinary",
    "start": "1099520",
    "end": "1102000"
  },
  {
    "text": "manual investigation of request arrival",
    "start": "1102000",
    "end": "1104559"
  },
  {
    "text": "timings at the test subject",
    "start": "1104559",
    "end": "1106000"
  },
  {
    "text": "showed that 4 tile would yield traffic",
    "start": "1106000",
    "end": "1107760"
  },
  {
    "text": "that was bursty in comparison to wrk",
    "start": "1107760",
    "end": "1110880"
  },
  {
    "text": "this turned out to be a dominant factor",
    "start": "1110880",
    "end": "1112799"
  },
  {
    "text": "in the observed divergence in measured",
    "start": "1112799",
    "end": "1114640"
  },
  {
    "text": "latencies",
    "start": "1114640",
    "end": "1116160"
  },
  {
    "text": "later on a jitter flag was added to fort",
    "start": "1116160",
    "end": "1118559"
  },
  {
    "text": "io to desynchronize request release",
    "start": "1118559",
    "end": "1120640"
  },
  {
    "text": "timings which reduce divergence",
    "start": "1120640",
    "end": "1124880"
  },
  {
    "text": "this may suffice until one wants to",
    "start": "1125039",
    "end": "1127360"
  },
  {
    "text": "define tests in terms of random",
    "start": "1127360",
    "end": "1129039"
  },
  {
    "text": "distributions around request release",
    "start": "1129039",
    "end": "1130960"
  },
  {
    "text": "timings",
    "start": "1130960",
    "end": "1132400"
  },
  {
    "text": "anyway the learning here is to know your",
    "start": "1132400",
    "end": "1134559"
  },
  {
    "text": "tools and have well-defined tests",
    "start": "1134559",
    "end": "1137120"
  },
  {
    "text": "different tools come with different",
    "start": "1137120",
    "end": "1138640"
  },
  {
    "text": "weaknesses strengths and implied",
    "start": "1138640",
    "end": "1140240"
  },
  {
    "text": "characteristics",
    "start": "1140240",
    "end": "1143200"
  },
  {
    "text": "some other gotchas observed in the wild",
    "start": "1144000",
    "end": "1147440"
  },
  {
    "text": "latency measurement tooling may diverge",
    "start": "1147440",
    "end": "1149440"
  },
  {
    "text": "when it comes to handling in-flight",
    "start": "1149440",
    "end": "1150960"
  },
  {
    "text": "requests post-execution",
    "start": "1150960",
    "end": "1154240"
  },
  {
    "text": "some tools may include status and oral",
    "start": "1154240",
    "end": "1156640"
  },
  {
    "text": "latency in their reporting",
    "start": "1156640",
    "end": "1159520"
  },
  {
    "text": "also the math around tracking rolling",
    "start": "1159520",
    "end": "1161440"
  },
  {
    "text": "standard deviations and histograms isn't",
    "start": "1161440",
    "end": "1163840"
  },
  {
    "text": "trivial",
    "start": "1163840",
    "end": "1165600"
  },
  {
    "text": "floating point math is used here and it",
    "start": "1165600",
    "end": "1168880"
  },
  {
    "text": "may be subject to a phenomena called",
    "start": "1168880",
    "end": "1170720"
  },
  {
    "text": "catastrophical cancellation when using a",
    "start": "1170720",
    "end": "1172960"
  },
  {
    "text": "naive approach",
    "start": "1172960",
    "end": "1174480"
  },
  {
    "text": "and through that tooling can produce",
    "start": "1174480",
    "end": "1176640"
  },
  {
    "text": "distorted",
    "start": "1176640",
    "end": "1177520"
  },
  {
    "text": "numbers when comparing baselines",
    "start": "1177520",
    "end": "1181760"
  },
  {
    "text": "of different servers and meshes or even",
    "start": "1181760",
    "end": "1183679"
  },
  {
    "text": "across load generators",
    "start": "1183679",
    "end": "1185200"
  },
  {
    "text": "it is good to be aware that diverging",
    "start": "1185200",
    "end": "1187039"
  },
  {
    "text": "tls cipher send or",
    "start": "1187039",
    "end": "1188480"
  },
  {
    "text": "session reuse characteristic",
    "start": "1188480",
    "end": "1190720"
  },
  {
    "text": "characteristics and setups",
    "start": "1190720",
    "end": "1192720"
  },
  {
    "text": "may translate into significant latest",
    "start": "1192720",
    "end": "1194880"
  },
  {
    "text": "latency divergences",
    "start": "1194880",
    "end": "1198240"
  },
  {
    "text": "so when it comes to reporting results it",
    "start": "1202960",
    "end": "1205440"
  },
  {
    "text": "is common for a tooling to produce a",
    "start": "1205440",
    "end": "1207280"
  },
  {
    "text": "single histogram",
    "start": "1207280",
    "end": "1209440"
  },
  {
    "text": "sometimes however being able to dive a",
    "start": "1209440",
    "end": "1211520"
  },
  {
    "text": "bit deeper is useful",
    "start": "1211520",
    "end": "1213360"
  },
  {
    "text": "this example shows a single globally",
    "start": "1213360",
    "end": "1215520"
  },
  {
    "text": "aggregated histogram on the left",
    "start": "1215520",
    "end": "1218240"
  },
  {
    "text": "it is under its underlying data comes",
    "start": "1218240",
    "end": "1220480"
  },
  {
    "text": "from measurements across multiple",
    "start": "1220480",
    "end": "1221919"
  },
  {
    "text": "distinct workers",
    "start": "1221919",
    "end": "1223200"
  },
  {
    "text": "which run on different threads the",
    "start": "1223200",
    "end": "1225520"
  },
  {
    "text": "workers all use their own connection",
    "start": "1225520",
    "end": "1227360"
  },
  {
    "text": "pool",
    "start": "1227360",
    "end": "1229280"
  },
  {
    "text": "the plot shows a broken knee which is",
    "start": "1229280",
    "end": "1231360"
  },
  {
    "text": "kind of odd",
    "start": "1231360",
    "end": "1233120"
  },
  {
    "text": "on the right we visualize the output",
    "start": "1233120",
    "end": "1235120"
  },
  {
    "text": "once more but now we also include the",
    "start": "1235120",
    "end": "1236960"
  },
  {
    "text": "perverter plots",
    "start": "1236960",
    "end": "1239280"
  },
  {
    "text": "those all look as regular latency plots",
    "start": "1239280",
    "end": "1241919"
  },
  {
    "text": "and now it's much easier to see how the",
    "start": "1241919",
    "end": "1243760"
  },
  {
    "text": "aggregated view obtained its odd shape",
    "start": "1243760",
    "end": "1248720"
  },
  {
    "text": "the plots displayed in the previous",
    "start": "1248720",
    "end": "1250640"
  },
  {
    "text": "slide often point to a phenomena called",
    "start": "1250640",
    "end": "1253039"
  },
  {
    "text": "backhand hold spotting",
    "start": "1253039",
    "end": "1254880"
  },
  {
    "text": "this diagram tries to visualize the",
    "start": "1254880",
    "end": "1257039"
  },
  {
    "text": "phenomena",
    "start": "1257039",
    "end": "1258240"
  },
  {
    "text": "the connections from the load generator",
    "start": "1258240",
    "end": "1260080"
  },
  {
    "text": "didn't end up in a balanced way at the",
    "start": "1260080",
    "end": "1261840"
  },
  {
    "text": "test subject's processing capacities",
    "start": "1261840",
    "end": "1264640"
  },
  {
    "text": "one listener has three connections while",
    "start": "1264640",
    "end": "1266799"
  },
  {
    "text": "the other one has just a single one",
    "start": "1266799",
    "end": "1269200"
  },
  {
    "text": "in perfect keeper life tests that may",
    "start": "1269200",
    "end": "1271600"
  },
  {
    "text": "not out this may not automatically",
    "start": "1271600",
    "end": "1273440"
  },
  {
    "text": "rebalance",
    "start": "1273440",
    "end": "1274640"
  },
  {
    "text": "and in setups with chain proxies like",
    "start": "1274640",
    "end": "1276559"
  },
  {
    "text": "meshes this may even cascade through the",
    "start": "1276559",
    "end": "1278799"
  },
  {
    "text": "system",
    "start": "1278799",
    "end": "1280240"
  },
  {
    "text": "fortunately envoy has some mitigations",
    "start": "1280240",
    "end": "1282320"
  },
  {
    "text": "throughout this today",
    "start": "1282320",
    "end": "1283360"
  },
  {
    "text": "but your mileage may vary depending on",
    "start": "1283360",
    "end": "1285280"
  },
  {
    "text": "the technology you are running tests",
    "start": "1285280",
    "end": "1287440"
  },
  {
    "text": "against",
    "start": "1287440",
    "end": "1289200"
  },
  {
    "text": "unless you are specifically testing this",
    "start": "1289200",
    "end": "1291440"
  },
  {
    "text": "aspect of a system",
    "start": "1291440",
    "end": "1293200"
  },
  {
    "text": "it might be good to explicitly limit",
    "start": "1293200",
    "end": "1295120"
  },
  {
    "text": "connection reuse to allow for balancing",
    "start": "1295120",
    "end": "1297280"
  },
  {
    "text": "opportunities",
    "start": "1297280",
    "end": "1298240"
  },
  {
    "text": "when running into this",
    "start": "1298240",
    "end": "1301280"
  },
  {
    "text": "here's a list of things that may",
    "start": "1302320",
    "end": "1303760"
  },
  {
    "text": "complicate reasoning when measuring",
    "start": "1303760",
    "end": "1305520"
  },
  {
    "text": "latency",
    "start": "1305520",
    "end": "1306960"
  },
  {
    "text": "noise enablers in virtualized setups may",
    "start": "1306960",
    "end": "1309200"
  },
  {
    "text": "sometimes cause instability between",
    "start": "1309200",
    "end": "1311200"
  },
  {
    "text": "results of distinct test executions",
    "start": "1311200",
    "end": "1314159"
  },
  {
    "text": "competing processes may introduce",
    "start": "1314159",
    "end": "1316240"
  },
  {
    "text": "introduce noise too",
    "start": "1316240",
    "end": "1318720"
  },
  {
    "text": "if you are after getting things as easy",
    "start": "1318720",
    "end": "1320720"
  },
  {
    "text": "to reason about as possible",
    "start": "1320720",
    "end": "1322159"
  },
  {
    "text": "and obtaining the most predictable",
    "start": "1322159",
    "end": "1323679"
  },
  {
    "text": "results the cpu frequency changes and",
    "start": "1323679",
    "end": "1326240"
  },
  {
    "text": "hyper trading may not be your best",
    "start": "1326240",
    "end": "1327679"
  },
  {
    "text": "friends",
    "start": "1327679",
    "end": "1328640"
  },
  {
    "text": "especially when testing surface meshes",
    "start": "1328640",
    "end": "1331360"
  },
  {
    "text": "in my experience",
    "start": "1331360",
    "end": "1332720"
  },
  {
    "text": "experience it is good to start out small",
    "start": "1332720",
    "end": "1335039"
  },
  {
    "text": "and simple and build from there when",
    "start": "1335039",
    "end": "1336799"
  },
  {
    "text": "trying to load test large and complex",
    "start": "1336799",
    "end": "1338720"
  },
  {
    "text": "meshes",
    "start": "1338720",
    "end": "1341200"
  },
  {
    "text": "load generators aside following the",
    "start": "1341760",
    "end": "1343760"
  },
  {
    "text": "earlier observations it might be good to",
    "start": "1343760",
    "end": "1345840"
  },
  {
    "text": "define load tests a bit more narrowly",
    "start": "1345840",
    "end": "1347760"
  },
  {
    "text": "than just queries per second over a",
    "start": "1347760",
    "end": "1349679"
  },
  {
    "text": "number of connections",
    "start": "1349679",
    "end": "1351440"
  },
  {
    "text": "there seem to be many implicit choices",
    "start": "1351440",
    "end": "1353440"
  },
  {
    "text": "across load generators and from the",
    "start": "1353440",
    "end": "1355120"
  },
  {
    "text": "outside",
    "start": "1355120",
    "end": "1355840"
  },
  {
    "text": "it's not always obvious what those are",
    "start": "1355840",
    "end": "1359679"
  },
  {
    "text": "talking about test definitions google",
    "start": "1359679",
    "end": "1362080"
  },
  {
    "text": "recently contributed an adaptive load",
    "start": "1362080",
    "end": "1364240"
  },
  {
    "text": "controller feature to nighthawk",
    "start": "1364240",
    "end": "1366480"
  },
  {
    "text": "that feature makes it easy to perform",
    "start": "1366480",
    "end": "1368400"
  },
  {
    "text": "sla-based testing to get answers to",
    "start": "1368400",
    "end": "1370559"
  },
  {
    "text": "questions like",
    "start": "1370559",
    "end": "1372400"
  },
  {
    "text": "how many queries per second can my",
    "start": "1372400",
    "end": "1374320"
  },
  {
    "text": "system sustain",
    "start": "1374320",
    "end": "1375440"
  },
  {
    "text": "given these resource constraints under",
    "start": "1375440",
    "end": "1377600"
  },
  {
    "text": "set latency",
    "start": "1377600",
    "end": "1378640"
  },
  {
    "text": "while observing at most x errors the",
    "start": "1378640",
    "end": "1381679"
  },
  {
    "text": "adaptive load controller will then",
    "start": "1381679",
    "end": "1383360"
  },
  {
    "text": "repeatedly re-parameterize test",
    "start": "1383360",
    "end": "1385600"
  },
  {
    "text": "execution to see conversions on the",
    "start": "1385600",
    "end": "1387679"
  },
  {
    "text": "optimum qps that fits this",
    "start": "1387679",
    "end": "1391519"
  },
  {
    "text": "so this concludes my part of the",
    "start": "1392640",
    "end": "1394320"
  },
  {
    "text": "presentation",
    "start": "1394320",
    "end": "1396000"
  },
  {
    "text": "thank you for listening ritika off to",
    "start": "1396000",
    "end": "1400640"
  },
  {
    "text": "you",
    "start": "1400840",
    "end": "1402480"
  },
  {
    "text": "thanks auro as a continuation of the",
    "start": "1402480",
    "end": "1404720"
  },
  {
    "text": "bottleneck analysis we would like to",
    "start": "1404720",
    "end": "1406320"
  },
  {
    "text": "propose some next steps",
    "start": "1406320",
    "end": "1408080"
  },
  {
    "text": "let's look at the ingress connections on",
    "start": "1408080",
    "end": "1410720"
  },
  {
    "text": "the left hand side of the diagram here",
    "start": "1410720",
    "end": "1413200"
  },
  {
    "text": "that can be distributed among multiple",
    "start": "1413200",
    "end": "1415200"
  },
  {
    "text": "worker threats",
    "start": "1415200",
    "end": "1416880"
  },
  {
    "text": "the label one so worker threads",
    "start": "1416880",
    "end": "1420240"
  },
  {
    "text": "that are waiting for traffic versus",
    "start": "1420240",
    "end": "1422400"
  },
  {
    "text": "threads that have",
    "start": "1422400",
    "end": "1423520"
  },
  {
    "text": "a traffic to microservices that are",
    "start": "1423520",
    "end": "1425279"
  },
  {
    "text": "active but disbalanced",
    "start": "1425279",
    "end": "1427840"
  },
  {
    "text": "look at the bypassing of some of the",
    "start": "1427840",
    "end": "1429679"
  },
  {
    "text": "linux scheduling here",
    "start": "1429679",
    "end": "1431039"
  },
  {
    "text": "and instead use score based",
    "start": "1431039",
    "end": "1434240"
  },
  {
    "text": "balancing so multiple cores being used",
    "start": "1434240",
    "end": "1437279"
  },
  {
    "text": "to balance out multiple worker threads",
    "start": "1437279",
    "end": "1439440"
  },
  {
    "text": "being scheduled",
    "start": "1439440",
    "end": "1440640"
  },
  {
    "text": "maybe have a priority among them",
    "start": "1440640",
    "end": "1443679"
  },
  {
    "text": "the other bottleneck to analyze is that",
    "start": "1443679",
    "end": "1445919"
  },
  {
    "text": "associated with memory copies",
    "start": "1445919",
    "end": "1448480"
  },
  {
    "text": "between proxies proxies two micro",
    "start": "1448480",
    "end": "1451200"
  },
  {
    "text": "services labeled as two here",
    "start": "1451200",
    "end": "1453440"
  },
  {
    "text": "and how do we accelerate some of those",
    "start": "1453440",
    "end": "1455760"
  },
  {
    "text": "bottlenecks",
    "start": "1455760",
    "end": "1456960"
  },
  {
    "text": "for example dma copies using vectorized",
    "start": "1456960",
    "end": "1459600"
  },
  {
    "text": "instructions",
    "start": "1459600",
    "end": "1460480"
  },
  {
    "text": "like avx 512 for small memory copies",
    "start": "1460480",
    "end": "1464480"
  },
  {
    "text": "larger copies uh slowing down frame",
    "start": "1464480",
    "end": "1466720"
  },
  {
    "text": "processing or tcp text stacked flows",
    "start": "1466720",
    "end": "1470080"
  },
  {
    "text": "that can be offloaded using dma offload",
    "start": "1470080",
    "end": "1472799"
  },
  {
    "text": "engines in the cpu",
    "start": "1472799",
    "end": "1475120"
  },
  {
    "text": "directly receiving the traffic packet",
    "start": "1475120",
    "end": "1477760"
  },
  {
    "text": "from the nic",
    "start": "1477760",
    "end": "1478559"
  },
  {
    "text": "to a cpu port at the proxy as shown in",
    "start": "1478559",
    "end": "1482080"
  },
  {
    "text": "the right hand side of the file here",
    "start": "1482080",
    "end": "1485440"
  },
  {
    "text": "and then using uh",
    "start": "1485440",
    "end": "1488559"
  },
  {
    "text": "you know bypassing the kernel and then",
    "start": "1488559",
    "end": "1490960"
  },
  {
    "text": "using",
    "start": "1490960",
    "end": "1492000"
  },
  {
    "text": "an acceleration once you receive the",
    "start": "1492000",
    "end": "1494400"
  },
  {
    "text": "packet",
    "start": "1494400",
    "end": "1495440"
  },
  {
    "text": "how do you use dma engine to offload",
    "start": "1495440",
    "end": "1497520"
  },
  {
    "text": "some of the copies that are happening",
    "start": "1497520",
    "end": "1499919"
  },
  {
    "text": "from the proxy to the microservices",
    "start": "1499919",
    "end": "1503200"
  },
  {
    "text": "so in summary um achieving a qps of",
    "start": "1503200",
    "end": "1506320"
  },
  {
    "text": "more than 50k and latency of",
    "start": "1506320",
    "end": "1510080"
  },
  {
    "text": "less than five milliseconds in the",
    "start": "1510080",
    "end": "1511760"
  },
  {
    "text": "current setup is one of our goals",
    "start": "1511760",
    "end": "1514400"
  },
  {
    "text": "this performance within a cni plus proxy",
    "start": "1514400",
    "end": "1517840"
  },
  {
    "text": "in a virtualized environment is a",
    "start": "1517840",
    "end": "1519760"
  },
  {
    "text": "formidable goal we are targeting",
    "start": "1519760",
    "end": "1522320"
  },
  {
    "text": "if you want to join some of our analysis",
    "start": "1522320",
    "end": "1525039"
  },
  {
    "text": "let us know",
    "start": "1525039",
    "end": "1526240"
  },
  {
    "text": "connect with us and we should be able to",
    "start": "1526240",
    "end": "1528240"
  },
  {
    "text": "achieve some of these goals",
    "start": "1528240",
    "end": "1529919"
  },
  {
    "text": "and present in a future session thank",
    "start": "1529919",
    "end": "1534158"
  },
  {
    "text": "you",
    "start": "1535159",
    "end": "1538159"
  }
]