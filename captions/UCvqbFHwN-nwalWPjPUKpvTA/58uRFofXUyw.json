[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "hello I'm Rita and I'm here to introduce",
    "start": "30",
    "end": "4380"
  },
  {
    "text": "our next presenters and also to remind",
    "start": "4380",
    "end": "6779"
  },
  {
    "text": "you to rate your talks on skate comm",
    "start": "6779",
    "end": "10099"
  },
  {
    "text": "after each session so this next honk is",
    "start": "10099",
    "end": "14070"
  },
  {
    "text": "gonna be about one of my favorite topics",
    "start": "14070",
    "end": "15690"
  },
  {
    "text": "cake",
    "start": "15690",
    "end": "16920"
  },
  {
    "text": "just kidding it's actually about a",
    "start": "16920",
    "end": "19859"
  },
  {
    "text": "planned feature that sounds really cool",
    "start": "19859",
    "end": "22710"
  },
  {
    "text": "which is being able to update resource",
    "start": "22710",
    "end": "25680"
  },
  {
    "text": "pod resources without having to restart",
    "start": "25680",
    "end": "28289"
  },
  {
    "text": "pods and containers and here to speak to",
    "start": "28289",
    "end": "32070"
  },
  {
    "text": "us about that as Carroll and beta and",
    "start": "32070",
    "end": "35300"
  },
  {
    "text": "Carroll works on vertical pods get auto",
    "start": "35300",
    "end": "38280"
  },
  {
    "text": "scaling at Google and dayit Oh works on",
    "start": "38280",
    "end": "40680"
  },
  {
    "text": "horizontal pod scaling at Google I wish",
    "start": "40680",
    "end": "44430"
  },
  {
    "text": "I could scale anything diagonally but",
    "start": "44430",
    "end": "46230"
  },
  {
    "text": "I'm gonna let them talk now please",
    "start": "46230",
    "end": "49110"
  },
  {
    "text": "welcome Carol and beta",
    "start": "49110",
    "end": "51440"
  },
  {
    "text": "[Applause]",
    "start": "51440",
    "end": "54240"
  },
  {
    "text": "[Music]",
    "start": "54240",
    "end": "56950"
  },
  {
    "text": "all right so just this thing can you",
    "start": "56950",
    "end": "59410"
  },
  {
    "text": "hear me I think so yes that's perfect so",
    "start": "59410",
    "end": "62680"
  },
  {
    "text": "just a very short correction actually",
    "start": "62680",
    "end": "65979"
  },
  {
    "text": "both work on vertical part of the",
    "start": "65979",
    "end": "67840"
  },
  {
    "text": "scanning but we also did some work both",
    "start": "67840",
    "end": "71290"
  },
  {
    "text": "of us did some work on horizontal put",
    "start": "71290",
    "end": "73150"
  },
  {
    "text": "out of scanning we're both involved with",
    "start": "73150",
    "end": "76060"
  },
  {
    "text": "the kubernetes auto-scaling special",
    "start": "76060",
    "end": "78610"
  },
  {
    "text": "interest group so we would like to talk",
    "start": "78610",
    "end": "81580"
  },
  {
    "text": "to you today about resizing of running",
    "start": "81580",
    "end": "84940"
  },
  {
    "text": "thoughts and this topic involves a quite",
    "start": "84940",
    "end": "89140"
  },
  {
    "text": "important limitation that exists",
    "start": "89140",
    "end": "91720"
  },
  {
    "text": "currently in the kubernetes ecosystem",
    "start": "91720",
    "end": "93640"
  },
  {
    "text": "and we would like to present to you the",
    "start": "93640",
    "end": "96640"
  },
  {
    "text": "initiative in the community to actually",
    "start": "96640",
    "end": "99280"
  },
  {
    "text": "overcome this limitation so we're",
    "start": "99280",
    "end": "102640"
  },
  {
    "start": "102000",
    "end": "102000"
  },
  {
    "text": "starting from the beginning I think",
    "start": "102640",
    "end": "104200"
  },
  {
    "text": "that's a good place to start so you've",
    "start": "104200",
    "end": "106479"
  },
  {
    "text": "probably all seen something like this",
    "start": "106479",
    "end": "108070"
  },
  {
    "text": "this is a very simple deployment and",
    "start": "108070",
    "end": "110500"
  },
  {
    "text": "there is a important section in that",
    "start": "110500",
    "end": "113860"
  },
  {
    "text": "deployment specification where you can",
    "start": "113860",
    "end": "116920"
  },
  {
    "text": "say how much resources your workload",
    "start": "116920",
    "end": "120670"
  },
  {
    "text": "requests and this sort of says how much",
    "start": "120670",
    "end": "123610"
  },
  {
    "text": "how much CPU how much memory your",
    "start": "123610",
    "end": "126700"
  },
  {
    "text": "workload needs to run so the problem is",
    "start": "126700",
    "end": "130899"
  },
  {
    "start": "130000",
    "end": "130000"
  },
  {
    "text": "that this resource demands that you",
    "start": "130899",
    "end": "133269"
  },
  {
    "text": "specify is static we specify it once and",
    "start": "133269",
    "end": "136030"
  },
  {
    "text": "it's there for the whole workloads",
    "start": "136030",
    "end": "138130"
  },
  {
    "text": "timeline timeline so I think this",
    "start": "138130",
    "end": "141850"
  },
  {
    "text": "doesn't really match the real life well",
    "start": "141850",
    "end": "144390"
  },
  {
    "text": "everything keeps changing over time and",
    "start": "144390",
    "end": "146709"
  },
  {
    "text": "with resources this is due to many",
    "start": "146709",
    "end": "149829"
  },
  {
    "text": "reasons so your app may have some",
    "start": "149829",
    "end": "153160"
  },
  {
    "text": "periodic apps and downs that in the",
    "start": "153160",
    "end": "156459"
  },
  {
    "text": "usage that effect the resource demand",
    "start": "156459",
    "end": "160920"
  },
  {
    "text": "it's make it hugely popular right your",
    "start": "160920",
    "end": "164140"
  },
  {
    "text": "user base grows over time so also over",
    "start": "164140",
    "end": "167829"
  },
  {
    "text": "time your resource consumption grows",
    "start": "167829",
    "end": "171180"
  },
  {
    "text": "also what we've seen is that many",
    "start": "171180",
    "end": "173950"
  },
  {
    "text": "applications have varying resource needs",
    "start": "173950",
    "end": "177220"
  },
  {
    "text": "depending on the lifecycle phase that",
    "start": "177220",
    "end": "180519"
  },
  {
    "text": "they are in so one very common pattern",
    "start": "180519",
    "end": "183310"
  },
  {
    "text": "is that during the initialization phase",
    "start": "183310",
    "end": "186300"
  },
  {
    "text": "many apps tend to use more resources",
    "start": "186300",
    "end": "189610"
  },
  {
    "text": "done later during their regular",
    "start": "189610",
    "end": "192190"
  },
  {
    "text": "operations so the important question is",
    "start": "192190",
    "end": "196360"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "why should you care why do you care",
    "start": "196360",
    "end": "198640"
  },
  {
    "text": "that's overtime a resource requests and",
    "start": "198640",
    "end": "201310"
  },
  {
    "text": "your real usage diverge they're",
    "start": "201310",
    "end": "205180"
  },
  {
    "text": "different so to answer that we'll take a",
    "start": "205180",
    "end": "209530"
  },
  {
    "start": "208000",
    "end": "208000"
  },
  {
    "text": "quick recap of how kubernetes scheduling",
    "start": "209530",
    "end": "212560"
  },
  {
    "text": "works to start with the resource request",
    "start": "212560",
    "end": "216310"
  },
  {
    "text": "is actually a contract it's a contract",
    "start": "216310",
    "end": "219160"
  },
  {
    "text": "between the kubernetes scheduler and",
    "start": "219160",
    "end": "220990"
  },
  {
    "text": "your workload and what it says is that",
    "start": "220990",
    "end": "224530"
  },
  {
    "text": "if you request a certain amount for",
    "start": "224530",
    "end": "227440"
  },
  {
    "text": "example request a certain amount of CPU",
    "start": "227440",
    "end": "229360"
  },
  {
    "text": "the kubernetes scheduler guarantees to",
    "start": "229360",
    "end": "232750"
  },
  {
    "text": "reserve those resources in the cluster",
    "start": "232750",
    "end": "234520"
  },
  {
    "text": "if they're available so it will never",
    "start": "234520",
    "end": "239800"
  },
  {
    "text": "put your workload on a node that has",
    "start": "239800",
    "end": "242140"
  },
  {
    "text": "less resources available than that done",
    "start": "242140",
    "end": "245320"
  },
  {
    "text": "dose that you requested okay so resource",
    "start": "245320",
    "end": "248830"
  },
  {
    "start": "248000",
    "end": "248000"
  },
  {
    "text": "request is a contract and contracts is a",
    "start": "248830",
    "end": "250660"
  },
  {
    "text": "very big word so let's see how this",
    "start": "250660",
    "end": "252250"
  },
  {
    "text": "works in practice",
    "start": "252250",
    "end": "253140"
  },
  {
    "text": "we have a simple situation in our",
    "start": "253140",
    "end": "256480"
  },
  {
    "text": "kubernetes cluster we have two notes and",
    "start": "256480",
    "end": "259600"
  },
  {
    "text": "they're currently empty they have now",
    "start": "259600",
    "end": "262030"
  },
  {
    "text": "but they both have 900 mini CPUs space",
    "start": "262030",
    "end": "266220"
  },
  {
    "text": "and there are two pods and they're just",
    "start": "266220",
    "end": "268840"
  },
  {
    "text": "waiting to be scheduled so one pod is",
    "start": "268840",
    "end": "273070"
  },
  {
    "text": "requesting with 250 units EPO another",
    "start": "273070",
    "end": "276010"
  },
  {
    "text": "one is requesting slightly more 600",
    "start": "276010",
    "end": "278140"
  },
  {
    "text": "minutes if you so far so good",
    "start": "278140",
    "end": "281680"
  },
  {
    "text": "this is simple right one pod that goes",
    "start": "281680",
    "end": "283840"
  },
  {
    "text": "to one mount one pot goes to the other",
    "start": "283840",
    "end": "285910"
  },
  {
    "text": "node and let's say at this moment that",
    "start": "285910",
    "end": "289450"
  },
  {
    "text": "we're still in a good place the",
    "start": "289450",
    "end": "291730"
  },
  {
    "text": "workloads use actually the amount of",
    "start": "291730",
    "end": "294820"
  },
  {
    "text": "resources that they request so workloads",
    "start": "294820",
    "end": "298960"
  },
  {
    "text": "are happy they have everything that",
    "start": "298960",
    "end": "301270"
  },
  {
    "text": "should be running is running the",
    "start": "301270",
    "end": "303010"
  },
  {
    "text": "workloads have the resources that they",
    "start": "303010",
    "end": "304570"
  },
  {
    "text": "need to run but as we said in things in",
    "start": "304570",
    "end": "308410"
  },
  {
    "text": "the intern introduction the things keep",
    "start": "308410",
    "end": "310870"
  },
  {
    "text": "changing so of course your app is",
    "start": "310870",
    "end": "314710"
  },
  {
    "text": "getting more popular as I said before",
    "start": "314710",
    "end": "316930"
  },
  {
    "text": "and",
    "start": "316930",
    "end": "317800"
  },
  {
    "text": "it has more work to do so let's assume",
    "start": "317800",
    "end": "320050"
  },
  {
    "text": "that one of the pods grew its usage it",
    "start": "320050",
    "end": "323259"
  },
  {
    "text": "doubled its usage it's now using 500",
    "start": "323259",
    "end": "325599"
  },
  {
    "text": "mini CPUs but it's still requesting that",
    "start": "325599",
    "end": "327940"
  },
  {
    "text": "250 minutes abuse that we said in the",
    "start": "327940",
    "end": "330310"
  },
  {
    "text": "first place so at the moment this is not",
    "start": "330310",
    "end": "335680"
  },
  {
    "text": "so bad I mean there is spare resources",
    "start": "335680",
    "end": "337810"
  },
  {
    "text": "on the note and it makes little sense",
    "start": "337810",
    "end": "340659"
  },
  {
    "text": "for the CPU cycle to seats",
    "start": "340659",
    "end": "343060"
  },
  {
    "text": "cycles to sit idle so what kubernetes",
    "start": "343060",
    "end": "345490"
  },
  {
    "text": "will do it will give you those spare CPU",
    "start": "345490",
    "end": "347680"
  },
  {
    "text": "cycles and your work who will be able to",
    "start": "347680",
    "end": "349840"
  },
  {
    "text": "burst so this looks quite ok but there",
    "start": "349840",
    "end": "353919"
  },
  {
    "text": "is an inherent risk in this situation",
    "start": "353919",
    "end": "356319"
  },
  {
    "text": "that we're going to uncover it just in a",
    "start": "356319",
    "end": "357940"
  },
  {
    "text": "moment in the meantime your application",
    "start": "357940",
    "end": "361569"
  },
  {
    "text": "was busy but you are busy as well you",
    "start": "361569",
    "end": "363669"
  },
  {
    "text": "have a new app that you want to launch",
    "start": "363669",
    "end": "365229"
  },
  {
    "text": "so you just finished and you create a",
    "start": "365229",
    "end": "368919"
  },
  {
    "text": "new pod with your new app and this is in",
    "start": "368919",
    "end": "372219"
  },
  {
    "text": "its requesting 600 may see few so now",
    "start": "372219",
    "end": "376090"
  },
  {
    "text": "the situation is a little bit more",
    "start": "376090",
    "end": "377949"
  },
  {
    "text": "complicated because according to your",
    "start": "377949",
    "end": "380110"
  },
  {
    "text": "contract with the scheduler you only",
    "start": "380110",
    "end": "382000"
  },
  {
    "text": "need 250 mini CPUs from that first node",
    "start": "382000",
    "end": "384880"
  },
  {
    "text": "so there is 650 mini CPUs just waiting",
    "start": "384880",
    "end": "388360"
  },
  {
    "text": "to be used",
    "start": "388360",
    "end": "389009"
  },
  {
    "text": "so what the scheduler will do it will go",
    "start": "389009",
    "end": "392440"
  },
  {
    "text": "ahead and it will schedule the pod on",
    "start": "392440",
    "end": "394479"
  },
  {
    "text": "the first note making your previous pod",
    "start": "394479",
    "end": "397690"
  },
  {
    "text": "unhappy it's we already know that it",
    "start": "397690",
    "end": "401889"
  },
  {
    "text": "needs more than it requests so it will",
    "start": "401889",
    "end": "404080"
  },
  {
    "text": "become throttled and please note that we",
    "start": "404080",
    "end": "408190"
  },
  {
    "text": "are talking about CPU but if we were",
    "start": "408190",
    "end": "412110"
  },
  {
    "text": "talking about memory which is not really",
    "start": "412110",
    "end": "417550"
  },
  {
    "text": "sorry I think I missed most like that's",
    "start": "417550",
    "end": "420099"
  },
  {
    "text": "where I wanted to say that the situation",
    "start": "420099",
    "end": "422110"
  },
  {
    "text": "is worse and the word full is problem so",
    "start": "422110",
    "end": "427020"
  },
  {
    "text": "as I was saying we're talking about CPU",
    "start": "427020",
    "end": "430360"
  },
  {
    "text": "CPU is a bit easier because right right",
    "start": "430360",
    "end": "432159"
  },
  {
    "text": "your work will is prattled it will not",
    "start": "432159",
    "end": "433990"
  },
  {
    "text": "perform as well as you would like but",
    "start": "433990",
    "end": "435880"
  },
  {
    "text": "it's still running however if this was",
    "start": "435880",
    "end": "438430"
  },
  {
    "text": "memory which is not compressible this",
    "start": "438430",
    "end": "441400"
  },
  {
    "text": "would mean that your note would get",
    "start": "441400",
    "end": "443979"
  },
  {
    "text": "memory pressure and in this situation",
    "start": "443979",
    "end": "446219"
  },
  {
    "text": "cubelet will actually start a victim",
    "start": "446219",
    "end": "448630"
  },
  {
    "text": "pods",
    "start": "448630",
    "end": "449660"
  },
  {
    "text": "and the mechanism is that it starts",
    "start": "449660",
    "end": "452120"
  },
  {
    "text": "evicting parts from the ones that are",
    "start": "452120",
    "end": "455090"
  },
  {
    "text": "the most offensive so the ones that use",
    "start": "455090",
    "end": "458110"
  },
  {
    "text": "more resources than they request so now",
    "start": "458110",
    "end": "464780"
  },
  {
    "text": "we know that we don't like out of the",
    "start": "464780",
    "end": "467270"
  },
  {
    "text": "resource requests right there's the",
    "start": "467270",
    "end": "468740"
  },
  {
    "text": "risky like bad things can happen to your",
    "start": "468740",
    "end": "471110"
  },
  {
    "text": "workloads to your clusters luckily for",
    "start": "471110",
    "end": "474920"
  },
  {
    "text": "you there is a thing that can keep them",
    "start": "474920",
    "end": "477230"
  },
  {
    "text": "up to date for you and this is the",
    "start": "477230",
    "end": "479210"
  },
  {
    "text": "vertical part of the scale a what",
    "start": "479210",
    "end": "482090"
  },
  {
    "text": "vertical pod outer scaler does it it",
    "start": "482090",
    "end": "484960"
  },
  {
    "text": "does the thing that scheduler doesn't it",
    "start": "484960",
    "end": "487820"
  },
  {
    "text": "takes into account your actual usage not",
    "start": "487820",
    "end": "491120"
  },
  {
    "text": "only resource requests so it watches the",
    "start": "491120",
    "end": "494090"
  },
  {
    "text": "usage and based on that it recommends",
    "start": "494090",
    "end": "497330"
  },
  {
    "text": "the resources that your workloads should",
    "start": "497330",
    "end": "499100"
  },
  {
    "text": "be requesting and optionally if you",
    "start": "499100",
    "end": "501890"
  },
  {
    "text": "configure it to do so it can update",
    "start": "501890",
    "end": "503840"
  },
  {
    "text": "those resources but this is the tricky",
    "start": "503840",
    "end": "506450"
  },
  {
    "text": "part and this is matched by the",
    "start": "506450",
    "end": "508880"
  },
  {
    "text": "experimental mark that you have here on",
    "start": "508880",
    "end": "511010"
  },
  {
    "text": "the slide and I will explain why that",
    "start": "511010",
    "end": "514640"
  },
  {
    "text": "experimental is there in just a minute",
    "start": "514640",
    "end": "517479"
  },
  {
    "text": "so vpa basically can be configured to",
    "start": "517479",
    "end": "522860"
  },
  {
    "start": "519000",
    "end": "519000"
  },
  {
    "text": "work in three different modes at the",
    "start": "522860",
    "end": "524870"
  },
  {
    "text": "moment it can be configured in an off",
    "start": "524870",
    "end": "527150"
  },
  {
    "text": "mode which is sort of a dry run it gives",
    "start": "527150",
    "end": "529550"
  },
  {
    "text": "you recommendations but it will never",
    "start": "529550",
    "end": "531770"
  },
  {
    "text": "change the requests of your running",
    "start": "531770",
    "end": "533810"
  },
  {
    "text": "parts then we have the initial mode that",
    "start": "533810",
    "end": "537650"
  },
  {
    "text": "updates the requests of the pods but",
    "start": "537650",
    "end": "540680"
  },
  {
    "text": "only on pod creation and the third one",
    "start": "540680",
    "end": "543830"
  },
  {
    "text": "is the it goes one step further and it's",
    "start": "543830",
    "end": "546500"
  },
  {
    "text": "the full thing it will look at your pods",
    "start": "546500",
    "end": "551060"
  },
  {
    "text": "out your running pods and it will update",
    "start": "551060",
    "end": "553550"
  },
  {
    "text": "their resource requests if needed so",
    "start": "553550",
    "end": "557030"
  },
  {
    "text": "there is a graph showing in more detail",
    "start": "557030",
    "end": "560210"
  },
  {
    "text": "how this all works",
    "start": "560210",
    "end": "561610"
  },
  {
    "text": "so there is this there is a dedicated VP",
    "start": "561610",
    "end": "564410"
  },
  {
    "text": "component called VP updater that takes",
    "start": "564410",
    "end": "567380"
  },
  {
    "text": "care of this and when it does it",
    "start": "567380",
    "end": "569440"
  },
  {
    "text": "constantly watches the pods it watches",
    "start": "569440",
    "end": "573560"
  },
  {
    "text": "their resource requests it also watches",
    "start": "573560",
    "end": "576380"
  },
  {
    "text": "the recommendations that VP a produces",
    "start": "576380",
    "end": "578720"
  },
  {
    "text": "for you they",
    "start": "578720",
    "end": "579740"
  },
  {
    "text": "on the actual usage and if those two",
    "start": "579740",
    "end": "582190"
  },
  {
    "text": "things diverge too much it will",
    "start": "582190",
    "end": "585320"
  },
  {
    "text": "gradually evict the pods",
    "start": "585320",
    "end": "588340"
  },
  {
    "text": "let them be recreated by a deployment",
    "start": "588340",
    "end": "591560"
  },
  {
    "text": "and then apply the new recommended",
    "start": "591560",
    "end": "595640"
  },
  {
    "text": "settings so I think you will agree that",
    "start": "595640",
    "end": "599810"
  },
  {
    "text": "this seems a bit complicated for a",
    "start": "599810",
    "end": "601520"
  },
  {
    "text": "simple resize right we have to evict the",
    "start": "601520",
    "end": "603590"
  },
  {
    "text": "pod recreate it and only then we can",
    "start": "603590",
    "end": "606650"
  },
  {
    "text": "apply any resources so the problem is",
    "start": "606650",
    "end": "609290"
  },
  {
    "text": "that the place where you specify your",
    "start": "609290",
    "end": "611470"
  },
  {
    "text": "resource request the pods back is",
    "start": "611470",
    "end": "613880"
  },
  {
    "text": "currently immutable so there is no way",
    "start": "613880",
    "end": "618050"
  },
  {
    "text": "to modify resource requests of running",
    "start": "618050",
    "end": "621740"
  },
  {
    "text": "pod and this problem does not only",
    "start": "621740",
    "end": "623810"
  },
  {
    "text": "concern VP a if you wanted to do this",
    "start": "623810",
    "end": "625940"
  },
  {
    "text": "manually yourself right you create a",
    "start": "625940",
    "end": "628070"
  },
  {
    "text": "patch where you want to update resource",
    "start": "628070",
    "end": "630500"
  },
  {
    "text": "requests of your running pod this patch",
    "start": "630500",
    "end": "633080"
  },
  {
    "text": "will get rejected it's actually not",
    "start": "633080",
    "end": "635860"
  },
  {
    "text": "permitted in the kubernetes so this has",
    "start": "635860",
    "end": "640100"
  },
  {
    "text": "very significant consequences both for",
    "start": "640100",
    "end": "643250"
  },
  {
    "text": "VP a and for any other actors that want",
    "start": "643250",
    "end": "645440"
  },
  {
    "text": "to resize pods for example there are",
    "start": "645440",
    "end": "648980"
  },
  {
    "text": "several types of workloads that it makes",
    "start": "648980",
    "end": "651470"
  },
  {
    "text": "absolutely no sense to resize because",
    "start": "651470",
    "end": "654200"
  },
  {
    "text": "the resize means a restart take for",
    "start": "654200",
    "end": "656570"
  },
  {
    "text": "example long-running bad job that has no",
    "start": "656570",
    "end": "659720"
  },
  {
    "text": "way of snapshotting itself let's say it",
    "start": "659720",
    "end": "662120"
  },
  {
    "text": "run for two hours and then you decide",
    "start": "662120",
    "end": "665000"
  },
  {
    "text": "that it's using a slightly not good",
    "start": "665000",
    "end": "668480"
  },
  {
    "text": "amount of resources it should be",
    "start": "668480",
    "end": "670220"
  },
  {
    "text": "requesting something else should you",
    "start": "670220",
    "end": "672170"
  },
  {
    "text": "restart it and lose the two hours of",
    "start": "672170",
    "end": "673940"
  },
  {
    "text": "work that is already done or just wait",
    "start": "673940",
    "end": "676550"
  },
  {
    "text": "and live with the fact that your",
    "start": "676550",
    "end": "677960"
  },
  {
    "text": "resource requests are out of date",
    "start": "677960",
    "end": "681190"
  },
  {
    "start": "683000",
    "end": "683000"
  },
  {
    "text": "okay so now that the data stated the",
    "start": "684780",
    "end": "687220"
  },
  {
    "text": "problem we'll try to solve it",
    "start": "687220",
    "end": "689170"
  },
  {
    "text": "just to recap our problem is immutable",
    "start": "689170",
    "end": "691270"
  },
  {
    "text": "pot spec so well we search the internet",
    "start": "691270",
    "end": "694270"
  },
  {
    "text": "there is this one which trick that",
    "start": "694270",
    "end": "696040"
  },
  {
    "text": "everyone applies to make other people",
    "start": "696040",
    "end": "698290"
  },
  {
    "text": "scared and we will apply it to so how to",
    "start": "698290",
    "end": "701650"
  },
  {
    "text": "change how to solve the problem of",
    "start": "701650",
    "end": "704830"
  },
  {
    "text": "immutable pot spec well the trick is",
    "start": "704830",
    "end": "706990"
  },
  {
    "text": "really simple we just make it mutable",
    "start": "706990",
    "end": "709380"
  },
  {
    "text": "right exactly",
    "start": "709380",
    "end": "712500"
  },
  {
    "text": "so yeah and this allows us to change the",
    "start": "712500",
    "end": "718600"
  },
  {
    "text": "resources and then apply the changes to",
    "start": "718600",
    "end": "722860"
  },
  {
    "text": "the containers without restarting the",
    "start": "722860",
    "end": "724180"
  },
  {
    "text": "pot so it sounds really simple right",
    "start": "724180",
    "end": "727360"
  },
  {
    "text": "but yeah life isn't always that simple",
    "start": "727360",
    "end": "729840"
  },
  {
    "text": "so there is a caveat that it's a",
    "start": "729840",
    "end": "733570"
  },
  {
    "text": "breaking change and that's actually the",
    "start": "733570",
    "end": "736350"
  },
  {
    "text": "most tricky part of all this and that",
    "start": "736350",
    "end": "740980"
  },
  {
    "text": "the change that we want to introduce",
    "start": "740980",
    "end": "742950"
  },
  {
    "text": "breaks things and just to be clear it's",
    "start": "742950",
    "end": "747520"
  },
  {
    "text": "not about breaking the or changing the",
    "start": "747520",
    "end": "749980"
  },
  {
    "text": "API it doesn't really matter how we",
    "start": "749980",
    "end": "752440"
  },
  {
    "text": "change the api's what we break is the",
    "start": "752440",
    "end": "755140"
  },
  {
    "text": "assumption that the postback is",
    "start": "755140",
    "end": "757450"
  },
  {
    "text": "immutable currently there are many there",
    "start": "757450",
    "end": "760810"
  },
  {
    "text": "is a lot of code in kubernetes which",
    "start": "760810",
    "end": "762460"
  },
  {
    "text": "assumes that once you create a pot the",
    "start": "762460",
    "end": "764980"
  },
  {
    "text": "resources are immutable and that's good",
    "start": "764980",
    "end": "767980"
  },
  {
    "text": "that's going to change so let's see",
    "start": "767980",
    "end": "771820"
  },
  {
    "text": "exactly what's affected so we'll start",
    "start": "771820",
    "end": "775420"
  },
  {
    "start": "774000",
    "end": "774000"
  },
  {
    "text": "with the container like we all love",
    "start": "775420",
    "end": "779710"
  },
  {
    "text": "containers here",
    "start": "779710",
    "end": "780580"
  },
  {
    "text": "so in kubernetes like in real life the",
    "start": "780580",
    "end": "783850"
  },
  {
    "text": "containers are fixed size and again this",
    "start": "783850",
    "end": "787120"
  },
  {
    "text": "assumption as I said is built-in in too",
    "start": "787120",
    "end": "788950"
  },
  {
    "text": "many places including outside kubernetes",
    "start": "788950",
    "end": "791410"
  },
  {
    "text": "so let's have a look at the java",
    "start": "791410",
    "end": "793960"
  },
  {
    "text": "application as you can see here on the",
    "start": "793960",
    "end": "797440"
  },
  {
    "text": "slide it requests one gigabyte of memory",
    "start": "797440",
    "end": "801270"
  },
  {
    "text": "and for quite a while",
    "start": "801270",
    "end": "804490"
  },
  {
    "text": "Java has already support from containers",
    "start": "804490",
    "end": "806460"
  },
  {
    "text": "so the JVM will automatically detect the",
    "start": "806460",
    "end": "811270"
  },
  {
    "text": "amount of memory it has in the container",
    "start": "811270",
    "end": "813880"
  },
  {
    "text": "and it runs in and it will apply these",
    "start": "813880",
    "end": "815770"
  },
  {
    "text": "settings so it will only use",
    "start": "815770",
    "end": "817980"
  },
  {
    "text": "one gigabyte of memory and actually you",
    "start": "817980",
    "end": "820440"
  },
  {
    "text": "don't even have to use the use container",
    "start": "820440",
    "end": "821970"
  },
  {
    "text": "support flag it's turned on by default",
    "start": "821970",
    "end": "824100"
  },
  {
    "text": "it's just shown here for completeness so",
    "start": "824100",
    "end": "827250"
  },
  {
    "text": "it all looks nice but the problem here",
    "start": "827250",
    "end": "829320"
  },
  {
    "text": "is that this all all this fine tuning is",
    "start": "829320",
    "end": "831990"
  },
  {
    "text": "happening only on JVM restart JVM start",
    "start": "831990",
    "end": "834780"
  },
  {
    "text": "so let's consider two scenarios on the",
    "start": "834780",
    "end": "838920"
  },
  {
    "start": "837000",
    "end": "837000"
  },
  {
    "text": "picture the dry area shows the put",
    "start": "838920",
    "end": "842160"
  },
  {
    "text": "request and the blue one shows what's",
    "start": "842160",
    "end": "844920"
  },
  {
    "text": "used by JVM and we only look at the",
    "start": "844920",
    "end": "846780"
  },
  {
    "text": "height here so we start with the perfect",
    "start": "846780",
    "end": "849870"
  },
  {
    "text": "fit right our java application is using",
    "start": "849870",
    "end": "851910"
  },
  {
    "text": "all the memory that is available in the",
    "start": "851910",
    "end": "854970"
  },
  {
    "text": "container all looks fine so now let's",
    "start": "854970",
    "end": "859410"
  },
  {
    "text": "imagine that we will grow the request",
    "start": "859410",
    "end": "861360"
  },
  {
    "text": "and the limit to let's say 2 gigabytes",
    "start": "861360",
    "end": "864140"
  },
  {
    "text": "because well our usage group so what",
    "start": "864140",
    "end": "868620"
  },
  {
    "text": "happens actually nothing like the",
    "start": "868620",
    "end": "871470"
  },
  {
    "text": "container has the more resources but the",
    "start": "871470",
    "end": "874740"
  },
  {
    "text": "java application is not aware of it and",
    "start": "874740",
    "end": "876480"
  },
  {
    "text": "it will just JVM will happily run with 1",
    "start": "876480",
    "end": "879300"
  },
  {
    "text": "gigabyte of memory and the other one was",
    "start": "879300",
    "end": "881420"
  },
  {
    "text": "appear only on your bill from your cloud",
    "start": "881420",
    "end": "884100"
  },
  {
    "text": "provider and it's even worse if we try",
    "start": "884100",
    "end": "888060"
  },
  {
    "text": "to downscale",
    "start": "888060",
    "end": "888690"
  },
  {
    "text": "so if we downstate the container below 1",
    "start": "888690",
    "end": "892650"
  },
  {
    "text": "gigabyte JVM is again not aware of the",
    "start": "892650",
    "end": "896430"
  },
  {
    "text": "change and it will all end up in tears",
    "start": "896430",
    "end": "899280"
  },
  {
    "text": "or in out of memory event to be exact",
    "start": "899280",
    "end": "903680"
  },
  {
    "text": "and if you thought that the problems are",
    "start": "903680",
    "end": "907350"
  },
  {
    "start": "905000",
    "end": "905000"
  },
  {
    "text": "limited only to like old-school fixed",
    "start": "907350",
    "end": "911070"
  },
  {
    "text": "size containers like Java then well you",
    "start": "911070",
    "end": "914130"
  },
  {
    "text": "definitely belong to the glass is",
    "start": "914130",
    "end": "915900"
  },
  {
    "text": "half-full group of people so let's have",
    "start": "915900",
    "end": "920580"
  },
  {
    "text": "a closer look at what happens when we",
    "start": "920580",
    "end": "922650"
  },
  {
    "text": "try to demonstrate the application so on",
    "start": "922650",
    "end": "925620"
  },
  {
    "text": "this picture we have again a container",
    "start": "925620",
    "end": "927810"
  },
  {
    "text": "and the gray area represents the request",
    "start": "927810",
    "end": "931050"
  },
  {
    "text": "and the green represents actual usage",
    "start": "931050",
    "end": "933840"
  },
  {
    "text": "and I guess you would like to lower the",
    "start": "933840",
    "end": "938330"
  },
  {
    "text": "resource consumption or the request",
    "start": "938330",
    "end": "940530"
  },
  {
    "text": "actually to just above the green area",
    "start": "940530",
    "end": "943860"
  },
  {
    "text": "well first of all to minimize the",
    "start": "943860",
    "end": "946620"
  },
  {
    "text": "resource waste but to keep some margin",
    "start": "946620",
    "end": "949870"
  },
  {
    "text": "in case there are some small spikes that",
    "start": "949870",
    "end": "951970"
  },
  {
    "text": "happened before you can react and grow",
    "start": "951970",
    "end": "954130"
  },
  {
    "text": "the resource requests again but if we",
    "start": "954130",
    "end": "958090"
  },
  {
    "text": "look closer it's not as easy simply",
    "start": "958090",
    "end": "963880"
  },
  {
    "text": "because the memory that is actually used",
    "start": "963880",
    "end": "966730"
  },
  {
    "text": "is not what is actually reported by",
    "start": "966730",
    "end": "969460"
  },
  {
    "text": "cubelet and this is due to the fact that",
    "start": "969460",
    "end": "971770"
  },
  {
    "text": "cgroups",
    "start": "971770",
    "end": "973020"
  },
  {
    "text": "implementation is still not perfect and",
    "start": "973020",
    "end": "976110"
  },
  {
    "text": "then we have two possibilities if we",
    "start": "976110",
    "end": "979660"
  },
  {
    "text": "will lower the request here everything",
    "start": "979660",
    "end": "982720"
  },
  {
    "text": "is fine because your margin is weak",
    "start": "982720",
    "end": "986380"
  },
  {
    "text": "enough but if you do it like here then",
    "start": "986380",
    "end": "989590"
  },
  {
    "text": "we have again an out of memory event so",
    "start": "989590",
    "end": "992230"
  },
  {
    "text": "with trying to take away memory from",
    "start": "992230",
    "end": "996010"
  },
  {
    "text": "running applications we have to be",
    "start": "996010",
    "end": "998020"
  },
  {
    "text": "really careful okay so the assumption",
    "start": "998020",
    "end": "1003390"
  },
  {
    "start": "1001000",
    "end": "1001000"
  },
  {
    "text": "about what spec being immutable as you",
    "start": "1003390",
    "end": "1006360"
  },
  {
    "text": "could see it was present in a number of",
    "start": "1006360",
    "end": "1009210"
  },
  {
    "text": "places but that's not all here we have a",
    "start": "1009210",
    "end": "1011910"
  },
  {
    "text": "list of major kubernetes components that",
    "start": "1011910",
    "end": "1015510"
  },
  {
    "text": "have this assumption built into so first",
    "start": "1015510",
    "end": "1018120"
  },
  {
    "text": "of all scheduler at the very least it",
    "start": "1018120",
    "end": "1021960"
  },
  {
    "text": "would have to be a belated to be aware",
    "start": "1021960",
    "end": "1025410"
  },
  {
    "text": "of the changes so it doesn't schedule",
    "start": "1025410",
    "end": "1027439"
  },
  {
    "text": "new pods where there is no resources",
    "start": "1027440",
    "end": "1030870"
  },
  {
    "text": "anymore due to in-place updates but",
    "start": "1030870",
    "end": "1034260"
  },
  {
    "text": "actually for our change to really work",
    "start": "1034260",
    "end": "1037380"
  },
  {
    "text": "the scheduler needs to do more things",
    "start": "1037380",
    "end": "1039689"
  },
  {
    "text": "like maybe evicting lower priority pods",
    "start": "1039690",
    "end": "1042150"
  },
  {
    "text": "before we apply the change the cubelet",
    "start": "1042150",
    "end": "1046920"
  },
  {
    "text": "is another place where works needs to be",
    "start": "1046920",
    "end": "1051000"
  },
  {
    "text": "done and the major part here is actually",
    "start": "1051000",
    "end": "1053330"
  },
  {
    "text": "applying the changes to see groups",
    "start": "1053330",
    "end": "1055260"
  },
  {
    "text": "because well they won't apply by",
    "start": "1055260",
    "end": "1057090"
  },
  {
    "text": "themselves right and the quota",
    "start": "1057090",
    "end": "1059490"
  },
  {
    "text": "controller the story here is a little",
    "start": "1059490",
    "end": "1062070"
  },
  {
    "text": "bit funny like the coder controller is",
    "start": "1062070",
    "end": "1065070"
  },
  {
    "text": "built with with an assumption that the",
    "start": "1065070",
    "end": "1067740"
  },
  {
    "text": "resources that the coder controls change",
    "start": "1067740",
    "end": "1069750"
  },
  {
    "text": "over time so you would expect that",
    "start": "1069750",
    "end": "1072390"
  },
  {
    "text": "actually it should be really transparent",
    "start": "1072390",
    "end": "1075570"
  },
  {
    "text": "and that change should be transparent",
    "start": "1075570",
    "end": "1078090"
  },
  {
    "text": "the proto controller should be ready for",
    "start": "1078090",
    "end": "1080730"
  },
  {
    "text": "our change but there is like one line of",
    "start": "1080730",
    "end": "1083700"
  },
  {
    "text": "with checks that well if it's an update",
    "start": "1083700",
    "end": "1086279"
  },
  {
    "text": "in if it's for the pod then of course",
    "start": "1086279",
    "end": "1089909"
  },
  {
    "text": "nothing changed so even in the component",
    "start": "1089909",
    "end": "1093870"
  },
  {
    "text": "that should really be up to date with",
    "start": "1093870",
    "end": "1097440"
  },
  {
    "text": "this we need to change at all a little",
    "start": "1097440",
    "end": "1100139"
  },
  {
    "text": "bit but still ok so as you have seen we",
    "start": "1100139",
    "end": "1106500"
  },
  {
    "text": "have multiple components involved and",
    "start": "1106500",
    "end": "1108240"
  },
  {
    "text": "that also means that there are multiple",
    "start": "1108240",
    "end": "1111350"
  },
  {
    "text": "special interest groups involved so",
    "start": "1111350",
    "end": "1114230"
  },
  {
    "text": "making all this works requires",
    "start": "1114230",
    "end": "1117090"
  },
  {
    "text": "coordination and so we have started the",
    "start": "1117090",
    "end": "1122190"
  },
  {
    "text": "cap so kubernetes enhancement proposal",
    "start": "1122190",
    "end": "1125029"
  },
  {
    "text": "to coordinate all that change but before",
    "start": "1125029",
    "end": "1129389"
  },
  {
    "text": "we have a look inside I would like to",
    "start": "1129389",
    "end": "1131730"
  },
  {
    "text": "say a very big thank you to all the",
    "start": "1131730",
    "end": "1134070"
  },
  {
    "text": "people who helped help in particular VNA",
    "start": "1134070",
    "end": "1136440"
  },
  {
    "text": "who drove the cap forward and one more",
    "start": "1136440",
    "end": "1142110"
  },
  {
    "text": "thing before we proceed the cap is",
    "start": "1142110",
    "end": "1143669"
  },
  {
    "text": "pending approval so anything you hear is",
    "start": "1143669",
    "end": "1145919"
  },
  {
    "text": "provisional and might change ok so let's",
    "start": "1145919",
    "end": "1150809"
  },
  {
    "text": "start with the changes in the pot object",
    "start": "1150809",
    "end": "1153480"
  },
  {
    "text": "they are all listed here first of all",
    "start": "1153480",
    "end": "1156960"
  },
  {
    "text": "part of pots back namely resource",
    "start": "1156960",
    "end": "1159419"
  },
  {
    "text": "requirements will be made mutable and",
    "start": "1159419",
    "end": "1162260"
  },
  {
    "text": "from now on they only describe the",
    "start": "1162260",
    "end": "1165539"
  },
  {
    "text": "desired state of our cluster of our pot",
    "start": "1165539",
    "end": "1168269"
  },
  {
    "text": "or its containers so it's no longer true",
    "start": "1168269",
    "end": "1171889"
  },
  {
    "text": "that this field describes what the pot",
    "start": "1171889",
    "end": "1176010"
  },
  {
    "text": "actually has reserved by qubit the other",
    "start": "1176010",
    "end": "1181409"
  },
  {
    "text": "field",
    "start": "1181409",
    "end": "1181919"
  },
  {
    "text": "resource allocations is a technical",
    "start": "1181919",
    "end": "1184889"
  },
  {
    "text": "field it says what scheduler allows the",
    "start": "1184889",
    "end": "1188639"
  },
  {
    "text": "party to have so what scheduler vetted",
    "start": "1188639",
    "end": "1190559"
  },
  {
    "text": "this pot can use and the third one",
    "start": "1190559",
    "end": "1193169"
  },
  {
    "text": "resource allocated is the actual state",
    "start": "1193169",
    "end": "1195389"
  },
  {
    "text": "that the cubelet applied to the pot oh",
    "start": "1195389",
    "end": "1197760"
  },
  {
    "text": "so from now on all if you want to look",
    "start": "1197760",
    "end": "1202500"
  },
  {
    "text": "at the current state only the resource",
    "start": "1202500",
    "end": "1204659"
  },
  {
    "text": "allocated show the actual usage and we",
    "start": "1204659",
    "end": "1207600"
  },
  {
    "text": "have two new pot conditions just to show",
    "start": "1207600",
    "end": "1210029"
  },
  {
    "text": "or the invest update process is",
    "start": "1210029",
    "end": "1214789"
  },
  {
    "start": "1216000",
    "end": "1216000"
  },
  {
    "text": "so now let's try a more dynamic approach",
    "start": "1216450",
    "end": "1218250"
  },
  {
    "text": "to make things clear so we have a very",
    "start": "1218250",
    "end": "1221790"
  },
  {
    "text": "very simple cluster it has only one note",
    "start": "1221790",
    "end": "1223980"
  },
  {
    "text": "and three pots and we will try to trace",
    "start": "1223980",
    "end": "1227820"
  },
  {
    "text": "a relatively happy path of a resource",
    "start": "1227820",
    "end": "1230730"
  },
  {
    "text": "increase for the blue pots of the",
    "start": "1230730",
    "end": "1232770"
  },
  {
    "text": "biggest one okay so it all starts with",
    "start": "1232770",
    "end": "1236430"
  },
  {
    "text": "our happy user which submits a patch to",
    "start": "1236430",
    "end": "1239340"
  },
  {
    "text": "increase the resources the particles to",
    "start": "1239340",
    "end": "1242250"
  },
  {
    "text": "API server which does all the validation",
    "start": "1242250",
    "end": "1245220"
  },
  {
    "text": "like normally does that includes our",
    "start": "1245220",
    "end": "1247410"
  },
  {
    "text": "buck check",
    "start": "1247410",
    "end": "1248550"
  },
  {
    "text": "and once that done the admission",
    "start": "1248550",
    "end": "1252510"
  },
  {
    "text": "controllers are called and here in",
    "start": "1252510",
    "end": "1256500"
  },
  {
    "text": "particular quota controller is called",
    "start": "1256500",
    "end": "1258660"
  },
  {
    "text": "and to avoid any communication of this",
    "start": "1258660",
    "end": "1262080"
  },
  {
    "text": "system the quota controller has to look",
    "start": "1262080",
    "end": "1263880"
  },
  {
    "text": "at the maximum of the desired and actual",
    "start": "1263880",
    "end": "1266190"
  },
  {
    "text": "state so you cannot try to game the",
    "start": "1266190",
    "end": "1269760"
  },
  {
    "text": "system and that's in line with how hot",
    "start": "1269760",
    "end": "1272280"
  },
  {
    "text": "the controller works today right because",
    "start": "1272280",
    "end": "1273900"
  },
  {
    "text": "you use up quota before the pot is",
    "start": "1273900",
    "end": "1277020"
  },
  {
    "text": "actually scheduled so you might end up",
    "start": "1277020",
    "end": "1279690"
  },
  {
    "text": "in the situation when you require",
    "start": "1279690",
    "end": "1282270"
  },
  {
    "text": "trigger request at resources and use up",
    "start": "1282270",
    "end": "1285600"
  },
  {
    "text": "the water but what is not running",
    "start": "1285600",
    "end": "1287840"
  },
  {
    "text": "currently and that will say ok so let's",
    "start": "1287840",
    "end": "1291870"
  },
  {
    "text": "assume that all that emissions",
    "start": "1291870",
    "end": "1292950"
  },
  {
    "text": "controllers were fine and so what",
    "start": "1292950",
    "end": "1296010"
  },
  {
    "text": "happens API server stores the state in",
    "start": "1296010",
    "end": "1299310"
  },
  {
    "text": "that city so we have now navigated pot",
    "start": "1299310",
    "end": "1303090"
  },
  {
    "text": "object and at this point the schedule of",
    "start": "1303090",
    "end": "1307650"
  },
  {
    "text": "cells to change violates normal watch",
    "start": "1307650",
    "end": "1310110"
  },
  {
    "text": "and we'll try to act on it and in our",
    "start": "1310110",
    "end": "1314340"
  },
  {
    "text": "example let's assume that there is not",
    "start": "1314340",
    "end": "1317550"
  },
  {
    "text": "enough space on the node to grow the",
    "start": "1317550",
    "end": "1319590"
  },
  {
    "text": "blue pot so what will happen",
    "start": "1319590",
    "end": "1322170"
  },
  {
    "text": "luckily ferocity yellow one had a very",
    "start": "1322170",
    "end": "1325260"
  },
  {
    "text": "low priority so scheduler could evict it",
    "start": "1325260",
    "end": "1327870"
  },
  {
    "text": "so it will simply do that and once that",
    "start": "1327870",
    "end": "1331440"
  },
  {
    "text": "done the scheduler will update the HCD",
    "start": "1331440",
    "end": "1334770"
  },
  {
    "text": "with its vetted state and from now on",
    "start": "1334770",
    "end": "1337650"
  },
  {
    "text": "the cubelet takes on again it watches",
    "start": "1337650",
    "end": "1339990"
  },
  {
    "text": "the pots back by a watch",
    "start": "1339990",
    "end": "1344600"
  },
  {
    "text": "and once the change is vetted by",
    "start": "1344760",
    "end": "1347280"
  },
  {
    "text": "scheduler cubelet can apply new settings",
    "start": "1347280",
    "end": "1350700"
  },
  {
    "text": "to the zebra puto and from now on our",
    "start": "1350700",
    "end": "1353450"
  },
  {
    "text": "blue pod is much bigger even if it",
    "start": "1353450",
    "end": "1355920"
  },
  {
    "text": "doesn't show on the picture ok we have",
    "start": "1355920",
    "end": "1362490"
  },
  {
    "start": "1362000",
    "end": "1362000"
  },
  {
    "text": "also some knobs for those of you who",
    "start": "1362490",
    "end": "1365790"
  },
  {
    "text": "like knobs and tuning the systems so",
    "start": "1365790",
    "end": "1368910"
  },
  {
    "text": "first of all there is the resize policy",
    "start": "1368910",
    "end": "1372270"
  },
  {
    "text": "knob it says what should happen to the",
    "start": "1372270",
    "end": "1375480"
  },
  {
    "text": "container when we apply the input in",
    "start": "1375480",
    "end": "1379980"
  },
  {
    "text": "place request update the default option",
    "start": "1379980",
    "end": "1383310"
  },
  {
    "text": "is no restart it's designed for all",
    "start": "1383310",
    "end": "1385320"
  },
  {
    "text": "these new containers that can handle",
    "start": "1385320",
    "end": "1389990"
  },
  {
    "text": "resources dynamically so we assume that",
    "start": "1390080",
    "end": "1395280"
  },
  {
    "text": "it really been in the default behavior",
    "start": "1395280",
    "end": "1397470"
  },
  {
    "text": "of the containers at least at some point",
    "start": "1397470",
    "end": "1400610"
  },
  {
    "text": "research container option is designed",
    "start": "1400610",
    "end": "1402840"
  },
  {
    "text": "for the old-school containers like our",
    "start": "1402840",
    "end": "1404850"
  },
  {
    "text": "JVM example and it means that to apply",
    "start": "1404850",
    "end": "1409110"
  },
  {
    "text": "new resources you restart the container",
    "start": "1409110",
    "end": "1411120"
  },
  {
    "text": "but you don't restart the pot so the pot",
    "start": "1411120",
    "end": "1413340"
  },
  {
    "text": "stays where it was and only this single",
    "start": "1413340",
    "end": "1416220"
  },
  {
    "text": "container is restarted and restart what",
    "start": "1416220",
    "end": "1420000"
  },
  {
    "text": "basically means that in place update is",
    "start": "1420000",
    "end": "1422940"
  },
  {
    "text": "not supported by this pot that you have",
    "start": "1422940",
    "end": "1426330"
  },
  {
    "text": "to reschedule it so it means that it",
    "start": "1426330",
    "end": "1429150"
  },
  {
    "text": "will be evicted and rescheduled from",
    "start": "1429150",
    "end": "1432240"
  },
  {
    "text": "scratch with new resources so that's for",
    "start": "1432240",
    "end": "1435420"
  },
  {
    "text": "applications that maybe require some in",
    "start": "1435420",
    "end": "1437310"
  },
  {
    "text": "each container to be run on updated",
    "start": "1437310",
    "end": "1440210"
  },
  {
    "text": "resources and we have another knob which",
    "start": "1440210",
    "end": "1445530"
  },
  {
    "text": "is retry policy this one is on pot level",
    "start": "1445530",
    "end": "1449000"
  },
  {
    "text": "so it only describes what happens if the",
    "start": "1449000",
    "end": "1452400"
  },
  {
    "text": "in-place update couldn't be completed",
    "start": "1452400",
    "end": "1456540"
  },
  {
    "text": "successfully first option no retry means",
    "start": "1456540",
    "end": "1459810"
  },
  {
    "text": "that well as it you could expect that",
    "start": "1459810",
    "end": "1463800"
  },
  {
    "text": "it's the end state so the actor that",
    "start": "1463800",
    "end": "1467130"
  },
  {
    "text": "required the change will have to clean",
    "start": "1467130",
    "end": "1469290"
  },
  {
    "text": "up the state of the cluster whether it",
    "start": "1469290",
    "end": "1472590"
  },
  {
    "text": "will be by reverting the change",
    "start": "1472590",
    "end": "1475210"
  },
  {
    "text": "changing the resources or maybe doing",
    "start": "1475210",
    "end": "1477850"
  },
  {
    "text": "something else completely I don't know",
    "start": "1477850",
    "end": "1479440"
  },
  {
    "text": "evicting that very precious job that's",
    "start": "1479440",
    "end": "1482260"
  },
  {
    "text": "fine it can be either our user or human",
    "start": "1482260",
    "end": "1486910"
  },
  {
    "text": "operator it can be an automated actor",
    "start": "1486910",
    "end": "1489160"
  },
  {
    "text": "like vertical pot autoscaler",
    "start": "1489160",
    "end": "1491220"
  },
  {
    "text": "retry update is a usual retry and",
    "start": "1491220",
    "end": "1496240"
  },
  {
    "text": "control loop from the kubernetes so it",
    "start": "1496240",
    "end": "1500500"
  },
  {
    "text": "will periodically we try to apply the",
    "start": "1500500",
    "end": "1504370"
  },
  {
    "text": "change that you requested if it succeeds",
    "start": "1504370",
    "end": "1507310"
  },
  {
    "text": "fine if not well we are not in a hurry",
    "start": "1507310",
    "end": "1510160"
  },
  {
    "text": "like all retry loops in kubernetes it",
    "start": "1510160",
    "end": "1513040"
  },
  {
    "text": "will run indefinitely and reschedule",
    "start": "1513040",
    "end": "1516070"
  },
  {
    "text": "means that the pot will be recreated so",
    "start": "1516070",
    "end": "1519070"
  },
  {
    "text": "it's more or less like restart pot but",
    "start": "1519070",
    "end": "1521500"
  },
  {
    "text": "only for the failure scenarios all right",
    "start": "1521500",
    "end": "1528640"
  },
  {
    "start": "1526000",
    "end": "1526000"
  },
  {
    "text": "so now we come to the part that",
    "start": "1528640",
    "end": "1530860"
  },
  {
    "text": "everybody was waiting for so the cake we",
    "start": "1530860",
    "end": "1533680"
  },
  {
    "text": "don't have actual cake but why this is",
    "start": "1533680",
    "end": "1537040"
  },
  {
    "text": "both having and eating the cake we can",
    "start": "1537040",
    "end": "1540340"
  },
  {
    "text": "have the best of towards on one hand we",
    "start": "1540340",
    "end": "1544180"
  },
  {
    "text": "can minimize the disruptions that we",
    "start": "1544180",
    "end": "1546400"
  },
  {
    "text": "need to do to the pots to keep them",
    "start": "1546400",
    "end": "1548650"
  },
  {
    "text": "updated because no we no longer require",
    "start": "1548650",
    "end": "1552040"
  },
  {
    "text": "a pod restart to apply the new settings",
    "start": "1552040",
    "end": "1555090"
  },
  {
    "text": "on the other hand we can have the better",
    "start": "1555090",
    "end": "1558370"
  },
  {
    "text": "stability that we've seen comes from the",
    "start": "1558370",
    "end": "1561250"
  },
  {
    "text": "fact that our resource requests are up",
    "start": "1561250",
    "end": "1564220"
  },
  {
    "text": "to date with our actual usage so for",
    "start": "1564220",
    "end": "1569530"
  },
  {
    "text": "vertical put out of scaler this stylish",
    "start": "1569530",
    "end": "1571690"
  },
  {
    "text": "solution means that we can introduce new",
    "start": "1571690",
    "end": "1574690"
  },
  {
    "text": "update modes one is in place only and",
    "start": "1574690",
    "end": "1579250"
  },
  {
    "text": "another one is in place preferred and",
    "start": "1579250",
    "end": "1581800"
  },
  {
    "text": "don't get too attached to names they",
    "start": "1581800",
    "end": "1584260"
  },
  {
    "text": "will probably change naming is hard but",
    "start": "1584260",
    "end": "1587170"
  },
  {
    "text": "they basically give the idea about what",
    "start": "1587170",
    "end": "1590410"
  },
  {
    "text": "we intend to do so the in place only",
    "start": "1590410",
    "end": "1593380"
  },
  {
    "text": "mode is for the workloads that we know",
    "start": "1593380",
    "end": "1598390"
  },
  {
    "text": "can't tolerate restarts due to resource",
    "start": "1598390",
    "end": "1602680"
  },
  {
    "text": "due to resizes so the example I gave",
    "start": "1602680",
    "end": "1605650"
  },
  {
    "text": "before we have a long-running bad jobs",
    "start": "1605650",
    "end": "1608200"
  },
  {
    "text": "job that it makes no sense to restart",
    "start": "1608200",
    "end": "1610929"
  },
  {
    "text": "during its lifetime in that mode we will",
    "start": "1610929",
    "end": "1614590"
  },
  {
    "text": "guarantee that if we want to resize the",
    "start": "1614590",
    "end": "1617590"
  },
  {
    "text": "pod it will only be done if it's it's",
    "start": "1617590",
    "end": "1620470"
  },
  {
    "text": "possible to do it in place in place",
    "start": "1620470",
    "end": "1624549"
  },
  {
    "text": "preferred will mean that we will first",
    "start": "1624549",
    "end": "1627700"
  },
  {
    "text": "try an in-place update and only if that",
    "start": "1627700",
    "end": "1630820"
  },
  {
    "text": "fails we will resort to restarting the",
    "start": "1630820",
    "end": "1634149"
  },
  {
    "text": "pod to apply new settings we believe",
    "start": "1634149",
    "end": "1637210"
  },
  {
    "text": "that this can then become the new outer",
    "start": "1637210",
    "end": "1639220"
  },
  {
    "text": "mode the new default because this is",
    "start": "1639220",
    "end": "1641860"
  },
  {
    "text": "what most what we see that most",
    "start": "1641860",
    "end": "1645330"
  },
  {
    "text": "applications can tolerate we minimize",
    "start": "1645330",
    "end": "1648130"
  },
  {
    "text": "the disruption but if it's really needed",
    "start": "1648130",
    "end": "1650049"
  },
  {
    "text": "we can actually restart the pod to apply",
    "start": "1650049",
    "end": "1652539"
  },
  {
    "text": "the settings also just to note if you're",
    "start": "1652539",
    "end": "1657029"
  },
  {
    "text": "interested to hear more about vertical",
    "start": "1657029",
    "end": "1659440"
  },
  {
    "text": "pod of the scalar itself tomorrow at",
    "start": "1659440",
    "end": "1662409"
  },
  {
    "text": "five to four there is a seek",
    "start": "1662409",
    "end": "1664990"
  },
  {
    "text": "auto-scaling deep dive where you can",
    "start": "1664990",
    "end": "1667029"
  },
  {
    "text": "hear all about all the autoscaler of the",
    "start": "1667029",
    "end": "1670179"
  },
  {
    "text": "scalars including the vertical put of",
    "start": "1670179",
    "end": "1672279"
  },
  {
    "text": "the scalar so I really encourage you to",
    "start": "1672279",
    "end": "1674380"
  },
  {
    "text": "go and now for the cap that Carol",
    "start": "1674380",
    "end": "1680019"
  },
  {
    "start": "1677000",
    "end": "1677000"
  },
  {
    "text": "mentioned if you want even more details",
    "start": "1680019",
    "end": "1682450"
  },
  {
    "text": "on the in-place updates or you have",
    "start": "1682450",
    "end": "1685510"
  },
  {
    "text": "feedback that you all would like to",
    "start": "1685510",
    "end": "1687399"
  },
  {
    "text": "comment please review the recap and also",
    "start": "1687399",
    "end": "1692409"
  },
  {
    "text": "feel free to get in touch with us with",
    "start": "1692409",
    "end": "1695049"
  },
  {
    "text": "any feedback or comments that you have",
    "start": "1695049",
    "end": "1697289"
  },
  {
    "text": "and last but not least definitely not",
    "start": "1697289",
    "end": "1700840"
  },
  {
    "text": "least I would like to mention all the",
    "start": "1700840",
    "end": "1702909"
  },
  {
    "text": "people involved in this proposal and",
    "start": "1702909",
    "end": "1705429"
  },
  {
    "text": "this initiative it's really a lot of",
    "start": "1705429",
    "end": "1707919"
  },
  {
    "text": "people it's a lot of reviewers it's a",
    "start": "1707919",
    "end": "1710139"
  },
  {
    "text": "lot of contributors and everyone who is",
    "start": "1710139",
    "end": "1713679"
  },
  {
    "text": "involved a youren problem really is",
    "start": "1713679",
    "end": "1716289"
  },
  {
    "text": "invaluable this is an important and big",
    "start": "1716289",
    "end": "1718120"
  },
  {
    "text": "change and I would really like to use",
    "start": "1718120",
    "end": "1721659"
  },
  {
    "text": "this place to say a huge thank you to",
    "start": "1721659",
    "end": "1726039"
  },
  {
    "text": "everyone involved and this concludes our",
    "start": "1726039",
    "end": "1730090"
  },
  {
    "text": "presentation thank you very much for",
    "start": "1730090",
    "end": "1731860"
  },
  {
    "text": "listening and this is the time for",
    "start": "1731860",
    "end": "1733600"
  },
  {
    "text": "questions",
    "start": "1733600",
    "end": "1736350"
  }
]