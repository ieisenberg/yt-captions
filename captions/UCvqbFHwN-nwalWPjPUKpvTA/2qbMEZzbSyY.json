[
  {
    "text": "um so who are we we are um a small group of envoy developers within Ericson who",
    "start": "1240",
    "end": "7200"
  },
  {
    "text": "customize enoy filters for our custom use cases for 5G Telecom",
    "start": "7200",
    "end": "13040"
  },
  {
    "text": "applications um uh I did this project along with my colleague Saka at ericon",
    "start": "13040",
    "end": "20240"
  },
  {
    "text": "and also Yu from Intel who contributed for the hardware acceleration part of",
    "start": "20240",
    "end": "27400"
  },
  {
    "text": "this um Talk uh of uh today's agenda we are going to look at some of the",
    "start": "27400",
    "end": "32920"
  },
  {
    "text": "background regarding uh the um the problem statement why we had to go for",
    "start": "32920",
    "end": "39920"
  },
  {
    "text": "something like a tapping filter and some overview of the existing tapping syns",
    "start": "39920",
    "end": "45000"
  },
  {
    "text": "that we had in EN why we had to go for this new grpc tabing sync and some um",
    "start": "45000",
    "end": "52320"
  },
  {
    "text": "robustness Machinery that we added for um our tracing mechanism and then",
    "start": "52320",
    "end": "59519"
  },
  {
    "text": "finally uh we would uh discuss a bit about the hardware acceleration part that we needed for memory copies for this uh",
    "start": "59519",
    "end": "67119"
  },
  {
    "text": "tracing Machinery um so just to give you a brief background of uh what we work on and um",
    "start": "67119",
    "end": "74840"
  },
  {
    "text": "uh where this use case exactly fits in so uh the uh latest 5G core uh network",
    "start": "74840",
    "end": "81880"
  },
  {
    "text": "uh looks something like this where there are a lot of distributed Network function each having its own life cycle",
    "start": "81880",
    "end": "89079"
  },
  {
    "text": "and independent policies and management interfaces uh basically they all",
    "start": "89079",
    "end": "94799"
  },
  {
    "text": "communicate to each other via http2 on a service uh on a service",
    "start": "94799",
    "end": "100640"
  },
  {
    "text": "bus and uh me and my colleagues basically work on two of these uh",
    "start": "100640",
    "end": "106520"
  },
  {
    "text": "Network functions that you see which are called service communication proxy and a security Edge protection proxy basically",
    "start": "106520",
    "end": "112719"
  },
  {
    "text": "these two proxies set between the whole traffic that goes through a 5G core",
    "start": "112719",
    "end": "118280"
  },
  {
    "text": "Network and S essentially act as the window into what is the traffic within the 5G code",
    "start": "118280",
    "end": "125640"
  },
  {
    "text": "domain so uh naturally in a multivendor ecosystem like telecommunications you",
    "start": "125640",
    "end": "132400"
  },
  {
    "text": "can expect that um there are multiple of these Network functions each coming from",
    "start": "132400",
    "end": "138319"
  },
  {
    "text": "different vendors and the uh diagram that I show over here is basically one",
    "start": "138319",
    "end": "144800"
  },
  {
    "text": "of the first problems that we faced wherein um one of the uh Network",
    "start": "144800",
    "end": "151319"
  },
  {
    "text": "functions uh coming from one of the vendors was not functioning properly on the Ingress side",
    "start": "151319",
    "end": "158720"
  },
  {
    "text": "so how do we isolate that fault how do we um troubleshoot that so that was the",
    "start": "158720",
    "end": "166959"
  },
  {
    "text": "basic question and so there are some means that um uh a distributed um uh",
    "start": "166959",
    "end": "174640"
  },
  {
    "text": "deployment system like uh NY with kubernetes uh provides use such as uh",
    "start": "174640",
    "end": "181959"
  },
  {
    "text": "Matrix and logs however uh however matric can only",
    "start": "181959",
    "end": "188360"
  },
  {
    "text": "show limited information about certain failure situations such as labels which cannot be fully comprehensive and hence",
    "start": "188360",
    "end": "196319"
  },
  {
    "text": "they cannot give proper header uh query or body parameters regarding the failure",
    "start": "196319",
    "end": "201640"
  },
  {
    "text": "and then raising the log levels is also not an option for uh capacity andet of",
    "start": "201640",
    "end": "207360"
  },
  {
    "text": "um uh use cases then the main two Alternatives that we",
    "start": "207360",
    "end": "213000"
  },
  {
    "text": "went across was um TCP dump and evf TCP dump basically uh what sniff on",
    "start": "213000",
    "end": "220599"
  },
  {
    "text": "the packets on the E interface and basically if you have um encrypted",
    "start": "220599",
    "end": "227159"
  },
  {
    "text": "traffic you wouldn't be getting any useful information out of TCP dump uh ebpf on the other hand is uh",
    "start": "227159",
    "end": "235000"
  },
  {
    "text": "more interesting because it can um attract the TCP level info coming from",
    "start": "235000",
    "end": "241840"
  },
  {
    "text": "Kel itself however the problem again is uh elevated privileges that you have to",
    "start": "241840",
    "end": "247920"
  },
  {
    "text": "give to the uh ebpf program to tap the traffic and um also TLS would again um",
    "start": "247920",
    "end": "257079"
  },
  {
    "text": "give you a problem that you cannot make any uh meaningful uh assessment about what is",
    "start": "257079",
    "end": "262520"
  },
  {
    "text": "the traffic that goes through your system so Envoy uh is a useful candidate",
    "start": "262520",
    "end": "268919"
  },
  {
    "text": "for uh extracting complete request information and providing it in real time for post-processing or",
    "start": "268919",
    "end": "276160"
  },
  {
    "text": "troubleshooting so how would such a architecture basically look like so the",
    "start": "276160",
    "end": "281880"
  },
  {
    "text": "easiest way to visualize it is that we have uh an N some uh sitting in the",
    "start": "281880",
    "end": "287919"
  },
  {
    "text": "Ingress traffic path and we basically provide some form of representation of",
    "start": "287919",
    "end": "294400"
  },
  {
    "text": "the current traffic that Envoy is proxying onto an external process",
    "start": "294400",
    "end": "299520"
  },
  {
    "text": "procing unit and that external Processing Unit can then further do some",
    "start": "299520",
    "end": "304600"
  },
  {
    "text": "postprocessing and give that as a general representation like TCP dump like uh sorry pcap or pcap NG and which",
    "start": "304600",
    "end": "312759"
  },
  {
    "text": "can be used for customers for their analytics or their troubleshooting",
    "start": "312759",
    "end": "318240"
  },
  {
    "text": "guidelines uh so one can go with the easiest approach for this which is to just log whatever traffic that you have",
    "start": "318240",
    "end": "325520"
  },
  {
    "text": "unfortunately you know the uh Pitfall with this namely that you create too",
    "start": "325520",
    "end": "330680"
  },
  {
    "text": "many logs and then you just end up uh killing capacity for the NY",
    "start": "330680",
    "end": "336400"
  },
  {
    "text": "container um eventually we decided to try out the tapping filter within Envoy",
    "start": "336400",
    "end": "342800"
  },
  {
    "text": "just another side note to mention to this would be distributor tracing is not",
    "start": "342800",
    "end": "348039"
  },
  {
    "text": "exactly the same as uh tapping filter uh mainly because distributor tracing works by tracing the traffic",
    "start": "348039",
    "end": "354720"
  },
  {
    "text": "flow by attaching metadata headers which is not exactly the way uh tapping works tapping just gives you whatever is the",
    "start": "354720",
    "end": "361280"
  },
  {
    "text": "raw socket binary information and hence it is protocol agnostic as well although we say here it is for http2 you can",
    "start": "361280",
    "end": "369000"
  },
  {
    "text": "easily extend it for other uh layer 7 protocols as well and we will look at",
    "start": "369000",
    "end": "375639"
  },
  {
    "text": "how Envoy provides some machinery for that so Envoy provides quite some",
    "start": "375639",
    "end": "380680"
  },
  {
    "text": "options for configuring this tapping filter so basically it uh offers two",
    "start": "380680",
    "end": "387240"
  },
  {
    "text": "main um machinery you could say which is a a tapping level and a tapping sync so",
    "start": "387240",
    "end": "394479"
  },
  {
    "text": "the tapping level can be done at TCP or at an HTTP level at an HTTP level you",
    "start": "394479",
    "end": "400800"
  },
  {
    "text": "would introduce um additional overhead because you are tapping at each individual http2 request or response",
    "start": "400800",
    "end": "408199"
  },
  {
    "text": "frame and that introduces um an unnecessary overhead that could easily be overridden if you",
    "start": "408199",
    "end": "416080"
  },
  {
    "text": "just make a simple choice of a TCP level tapping wherein uh you would be tapping",
    "start": "416080",
    "end": "423199"
  },
  {
    "text": "the uh request and response traffic flow basically on the TCP um uh basically on",
    "start": "423199",
    "end": "429680"
  },
  {
    "text": "each TCP event so that is on a connection in it or on a connection read",
    "start": "429680",
    "end": "435160"
  },
  {
    "text": "or right or in a connection close and you can tap that information and use it",
    "start": "435160",
    "end": "440879"
  },
  {
    "text": "for for the postprocessing and the other part is the tapping sync the tapping sync is the",
    "start": "440879",
    "end": "447479"
  },
  {
    "text": "entity which allows you to um stream uh your traffic representations",
    "start": "447479",
    "end": "455120"
  },
  {
    "text": "to and we will first uh have a brief look with the tapping levels and the",
    "start": "455120",
    "end": "461599"
  },
  {
    "text": "filter chains that nway provides to see how we can be creative with um uh TCP",
    "start": "461599",
    "end": "469800"
  },
  {
    "text": "traffic tapping so uh the filter chain within an Envoy is basically layered and",
    "start": "469800",
    "end": "477639"
  },
  {
    "text": "also um C customizable you can reorganize them mostly very",
    "start": "477639",
    "end": "485000"
  },
  {
    "text": "flexibly and therefore even if you have TLS you can still have clear text",
    "start": "485000",
    "end": "490960"
  },
  {
    "text": "representation of your traffic which has been the major problem that TCP dump",
    "start": "490960",
    "end": "496599"
  },
  {
    "text": "couldn't solve simply by sniffing on the E zero of the Pod so what we do is basically have um a",
    "start": "496599",
    "end": "506639"
  },
  {
    "text": "proper layering of our filter chains such that the TLs traffic is um uh first",
    "start": "506639",
    "end": "513279"
  },
  {
    "text": "decrypted on the Ingress path then we buffer it and then we um submit it to",
    "start": "513279",
    "end": "520518"
  },
  {
    "text": "the tapping filter and then we have our own custom http2 filter chains which",
    "start": "520519",
    "end": "526279"
  },
  {
    "text": "does the postprocessing on the filters and then on the ESS path we have the",
    "start": "526279",
    "end": "532040"
  },
  {
    "text": "same um request path that we had for Ingress basically in Reverse wherein",
    "start": "532040",
    "end": "537839"
  },
  {
    "text": "first you would tap and then you would buffer it and submit it for the uh encrypted traffic path out",
    "start": "537839",
    "end": "545600"
  },
  {
    "text": "of envoy and to your target pod now here as well you may have um",
    "start": "545600",
    "end": "553200"
  },
  {
    "text": "more uh granular uh constraints such that on the Ingress side you only tap",
    "start": "553200",
    "end": "560040"
  },
  {
    "text": "from certain sources with a specific IP or an egress that you only uh Trace",
    "start": "560040",
    "end": "567279"
  },
  {
    "text": "traffic towards a a specific IP or towards a specific host um so how do we",
    "start": "567279",
    "end": "574560"
  },
  {
    "text": "deal with this issue and this is also a uh good uh means of constraining this",
    "start": "574560",
    "end": "582240"
  },
  {
    "text": "filter in case uh you have too many workloads and you just don't need to tap",
    "start": "582240",
    "end": "587720"
  },
  {
    "text": "everywhere rather you want to tap selectively at um your pain points",
    "start": "587720",
    "end": "593279"
  },
  {
    "text": "within the cluster and so the way you can do it is with um uh the extension",
    "start": "593279",
    "end": "600240"
  },
  {
    "text": "within the tapping filter which provides you to assign uh tapping only to a given",
    "start": "600240",
    "end": "606720"
  },
  {
    "text": "Source IP address uh keep in mind that this Source IP address is subject to what is the",
    "start": "606720",
    "end": "613040"
  },
  {
    "text": "external traffic policy that you have so it would be IP IP address one if it is",
    "start": "613040",
    "end": "620360"
  },
  {
    "text": "local if it is cluster it would be IP address 2 and so it is sensitive with",
    "start": "620360",
    "end": "625959"
  },
  {
    "text": "that and on the egress side we we use uh something called as a transport",
    "start": "625959",
    "end": "632920"
  },
  {
    "text": "socket filter to ensure that we segregate uh the tapping Only onto those",
    "start": "632920",
    "end": "641320"
  },
  {
    "text": "uh end points which we needs which we need to tap so in this example we only",
    "start": "641320",
    "end": "646920"
  },
  {
    "text": "need to uh trace the traffic that are going from enoy to these endpoints H1",
    "start": "646920",
    "end": "653079"
  },
  {
    "text": "and H3 and I don't need to trace the traffic from H2 and reduce the over head",
    "start": "653079",
    "end": "659440"
  },
  {
    "text": "that is associated with it so I basically don't assign a transport socket or a tapping associated with H2",
    "start": "659440",
    "end": "667440"
  },
  {
    "text": "using uh endpoint metadata and a transport socket matching filter so here",
    "start": "667440",
    "end": "672760"
  },
  {
    "text": "you can see the blue boxes basically have a tapping metadata set to",
    "start": "672760",
    "end": "679120"
  },
  {
    "text": "True uh which would be selectively used by endpoint H1s and",
    "start": "679120",
    "end": "684920"
  },
  {
    "text": "H3 because uh they have the tapping metadata are also set to True meanwhile",
    "start": "684920",
    "end": "691360"
  },
  {
    "text": "the endpoint H2 wouldn't pick up um the tapping filter so you wouldn't get any",
    "start": "691360",
    "end": "697200"
  },
  {
    "text": "traffic uh tracing out of uh The Edge to end",
    "start": "697200",
    "end": "702600"
  },
  {
    "text": "point and then comes the question of um which of the tapping syns to use um so",
    "start": "702600",
    "end": "710399"
  },
  {
    "text": "as I said previously NY offers three basic tapping syns a file based one",
    "start": "710399",
    "end": "716839"
  },
  {
    "text": "admin and a custom one called grpc that we introduced the file based tapping",
    "start": "716839",
    "end": "722920"
  },
  {
    "text": "sync is um mostly unacceptable for critical use cases with security or",
    "start": "722920",
    "end": "728120"
  },
  {
    "text": "privacy concerns because basically enoy writes uh the whole request body or",
    "start": "728120",
    "end": "734560"
  },
  {
    "text": "headers onto a file itself the admin based one seemed very promising until uh",
    "start": "734560",
    "end": "741399"
  },
  {
    "text": "we had a closer look at its performance and so in this diagram you",
    "start": "741399",
    "end": "747399"
  },
  {
    "text": "can see um how basically the admin sync works so",
    "start": "747399",
    "end": "753800"
  },
  {
    "text": "Envoy basically has a silo approach for a rooting traffic so that means that",
    "start": "753800",
    "end": "759480"
  },
  {
    "text": "each worker thread has its own context of filters and filter chains and they",
    "start": "759480",
    "end": "766440"
  },
  {
    "text": "provide the traces onto the main thread which uh is where the tapping interface",
    "start": "766440",
    "end": "773399"
  },
  {
    "text": "leaves and as a result of this you can see in the bottom picture of top top um",
    "start": "773399",
    "end": "781000"
  },
  {
    "text": "uh the main thread has um almost 71% usage simply because we are collecting",
    "start": "781000",
    "end": "788600"
  },
  {
    "text": "the uh traffic traces out of it uh this would be a big problem if you",
    "start": "788600",
    "end": "795600"
  },
  {
    "text": "had XTS or other stats that are running critically on uh on your network mainly",
    "start": "795600",
    "end": "803240"
  },
  {
    "text": "because XDS and DNS and stats collection all reside on the main thread and if",
    "start": "803240",
    "end": "809000"
  },
  {
    "text": "they ever get bottlenecked because of your tapping you may not be able to change the configuration so um it",
    "start": "809000",
    "end": "816680"
  },
  {
    "text": "impacts all sorts of use cases for uh your service mesh or if you're just",
    "start": "816680",
    "end": "822920"
  },
  {
    "text": "having NY as your gateway you cannot modify your configuration which is a big",
    "start": "822920",
    "end": "828040"
  },
  {
    "text": "problem so we try to overcome it by uh extending the tracing interfaces to",
    "start": "828040",
    "end": "835600"
  },
  {
    "text": "accommodate a grpc tapping sync uh the main objective here was to prevent",
    "start": "835600",
    "end": "841800"
  },
  {
    "text": "interference of the main thread as far as possible when we are streaming the uh",
    "start": "841800",
    "end": "847320"
  },
  {
    "text": "traces uh we took inspiration from an earlier discussion on uh the GitHub for",
    "start": "847320",
    "end": "852880"
  },
  {
    "text": "this issue and we decided to implement a version of it ourselves so this diagram",
    "start": "852880",
    "end": "858040"
  },
  {
    "text": "basically represents how uh traces are captured within each worker thread and",
    "start": "858040",
    "end": "863079"
  },
  {
    "text": "then they can be given to a traffic Trace sync which can postprocess it into",
    "start": "863079",
    "end": "868759"
  },
  {
    "text": "to a pcap NG or peap frame um the tapping sub system uh thus",
    "start": "868759",
    "end": "876800"
  },
  {
    "text": "created has basically two parts one which indicates uh the connection",
    "start": "876800",
    "end": "882360"
  },
  {
    "text": "information which comes at the beginning of every TCP event as we are tapping things on TCP level and the other one is",
    "start": "882360",
    "end": "890680"
  },
  {
    "text": "the trace information which would contain all the information about the headers and the body and query",
    "start": "890680",
    "end": "896440"
  },
  {
    "text": "parameters Etc uh the connection information is only sent once and that is a um slight",
    "start": "896440",
    "end": "905519"
  },
  {
    "text": "bit of an uh problem with uh the tapping implementation such that uh only in the",
    "start": "905519",
    "end": "911959"
  },
  {
    "text": "beginning of an http2 connection does it send out this connection information so your traffic uh Sync has to basically",
    "start": "911959",
    "end": "920320"
  },
  {
    "text": "cache this and use that as a reference to uh create your postprocessing of uh",
    "start": "920320",
    "end": "928720"
  },
  {
    "text": "to post-process your Trace information segments um so you can imagine a very",
    "start": "928720",
    "end": "935920"
  },
  {
    "text": "simple problem wherein your uh Trace sync just happens to restart because of",
    "start": "935920",
    "end": "942000"
  },
  {
    "text": "some Network disturbance or process issue that means all your previous um",
    "start": "942000",
    "end": "948519"
  },
  {
    "text": "information regarding the connections that you were holding so far is Lost And as a means to overcome that",
    "start": "948519",
    "end": "956759"
  },
  {
    "text": "particular problem we decided to add a thread local cache within each uh worker",
    "start": "956759",
    "end": "963120"
  },
  {
    "text": "thread for the tapping so uh what it does is basically",
    "start": "963120",
    "end": "968720"
  },
  {
    "text": "um provides a reference-based indexing of all the connection information that",
    "start": "968720",
    "end": "974240"
  },
  {
    "text": "the worker thread is currently processing and it adds it into a cache",
    "start": "974240",
    "end": "980800"
  },
  {
    "text": "and whenever the um um uh whenever the",
    "start": "980800",
    "end": "985880"
  },
  {
    "text": "tracing Sync has a restart it will detect this",
    "start": "985880",
    "end": "991160"
  },
  {
    "text": "via uh TCP Lifetime and other handshake parameters and it will replay the um",
    "start": "991160",
    "end": "998920"
  },
  {
    "text": "address information that was present in the cache uh to the tracing sync all",
    "start": "998920",
    "end": "1004680"
  },
  {
    "text": "over so uh in a practical situation you might have uh",
    "start": "1004680",
    "end": "1013399"
  },
  {
    "text": "few number of connections that are long lift and as a result this cache is not",
    "start": "1013399",
    "end": "1020120"
  },
  {
    "text": "too big it's just um few uh few hundred connections which is not too",
    "start": "1020120",
    "end": "1027520"
  },
  {
    "text": "intensive and you can replay all of those to your sync so that uh any",
    "start": "1027520",
    "end": "1033360"
  },
  {
    "text": "subsequent Trace information uh would have the adequate",
    "start": "1033360",
    "end": "1038558"
  },
  {
    "text": "uh connection information to recreate the whole um traffic frame either in um",
    "start": "1038559",
    "end": "1046199"
  },
  {
    "text": "traffic frame for for the processing um and the and some of the things by",
    "start": "1046199",
    "end": "1054080"
  },
  {
    "text": "which we kind of uh verified it for consistency uh in the field is via",
    "start": "1054080",
    "end": "1060600"
  },
  {
    "text": "counters we just basically added counters onto our extension and also in",
    "start": "1060600",
    "end": "1066320"
  },
  {
    "text": "onto our syns and basically verified um whether the tap tapping",
    "start": "1066320",
    "end": "1071880"
  },
  {
    "text": "socket works as expected this wasn't um uh already given within the current",
    "start": "1071880",
    "end": "1077880"
  },
  {
    "text": "standard and and War so we had to make some extensions for that and yeah it",
    "start": "1077880",
    "end": "1083720"
  },
  {
    "text": "ensures consistency and um going now with how we",
    "start": "1083720",
    "end": "1089559"
  },
  {
    "text": "were um how was the experience with deployments in live traffic overall we",
    "start": "1089559",
    "end": "1096120"
  },
  {
    "text": "were quite happy with the tracing solution that we developed um we had like uh an overhead introduced of about",
    "start": "1096120",
    "end": "1104480"
  },
  {
    "text": "5% into our Max request per capacity for enoy and the end to endend enoy latency",
    "start": "1104480",
    "end": "1111559"
  },
  {
    "text": "um as a result of enabling this traffic tapping onto um multiple listeners and",
    "start": "1111559",
    "end": "1118559"
  },
  {
    "text": "clusters was in the order of um 1 to2 milliseconds which are subject to load",
    "start": "1118559",
    "end": "1124000"
  },
  {
    "text": "conditions and networking setup um but still is a very low overhead compared to",
    "start": "1124000",
    "end": "1129880"
  },
  {
    "text": "any other Machinery that you might have uh and it has been extremely stable in",
    "start": "1129880",
    "end": "1135960"
  },
  {
    "text": "production networks with no elevation of of uh privileges for the containers",
    "start": "1135960",
    "end": "1141039"
  },
  {
    "text": "required and it um Works reliably since they W on several of the live 5G",
    "start": "1141039",
    "end": "1148840"
  },
  {
    "text": "networks that we have running several hundred thousand to a few million requests per",
    "start": "1148840",
    "end": "1155400"
  },
  {
    "text": "second and um with that I would like to",
    "start": "1155400",
    "end": "1161240"
  },
  {
    "text": "um move on to the bit regarding um memory copying and memory acceleration",
    "start": "1161240",
    "end": "1168039"
  },
  {
    "text": "uh that was done by my colleague yuu uh so basically tapping would have a",
    "start": "1168039",
    "end": "1173600"
  },
  {
    "text": "lot of memory copies to mirror it uh to the tapping syns and so uh Intel came up",
    "start": "1173600",
    "end": "1180760"
  },
  {
    "text": "with an approach for faster memory copies with Hardware acceleration and I",
    "start": "1180760",
    "end": "1185919"
  },
  {
    "text": "would like to just play the presentation that um user prepared unfortunately he",
    "start": "1185919",
    "end": "1191240"
  },
  {
    "text": "couldn't be here due to a private issue this Jo from Intel we're glad to",
    "start": "1191240",
    "end": "1199480"
  },
  {
    "text": "share this topic with Davin to you at coupon 23 unfortunately for some reason I can't",
    "start": "1199480",
    "end": "1206520"
  },
  {
    "text": "join you today in Chicago so I got to share my part from",
    "start": "1206520",
    "end": "1211559"
  },
  {
    "text": "video now let me continue our session on Hardware",
    "start": "1211559",
    "end": "1216960"
  },
  {
    "text": "acceleration as you may know for most cases memory copy is not a problem for",
    "start": "1216960",
    "end": "1223280"
  },
  {
    "text": "void requests and response are limited to a few kilobytes in size",
    "start": "1223280",
    "end": "1228880"
  },
  {
    "text": "and won't take much time in the overall process but for some special scenarios",
    "start": "1228880",
    "end": "1235000"
  },
  {
    "text": "and requirements things are different like traffic mirror a feature",
    "start": "1235000",
    "end": "1241559"
  },
  {
    "text": "allows user shattering traffic from one cluster to another this is a very useful feature",
    "start": "1241559",
    "end": "1248280"
  },
  {
    "text": "that allows feature teams to bring changes to production with a little risk as",
    "start": "1248280",
    "end": "1254480"
  },
  {
    "text": "possible and why we make a copy of lab request data to mirror",
    "start": "1254480",
    "end": "1260240"
  },
  {
    "text": "service with their increase in request size the data copied can be quite",
    "start": "1260240",
    "end": "1267960"
  },
  {
    "text": "substantial and another example is TOS memory linearized this is an operation defining",
    "start": "1268000",
    "end": "1275159"
  },
  {
    "text": "in buffer system occurs before T encryption is",
    "start": "1275159",
    "end": "1280440"
  },
  {
    "text": "applied linearize copy and recombine multiple small size buffer into a large",
    "start": "1280440",
    "end": "1286279"
  },
  {
    "text": "one to reduce the frequency of encryption and Associate",
    "start": "1286279",
    "end": "1291679"
  },
  {
    "text": "overhead for large size response theise also come with a significant amount of",
    "start": "1291679",
    "end": "1297559"
  },
  {
    "text": "copy which can up to 10% of overall processing or",
    "start": "1297559",
    "end": "1303320"
  },
  {
    "text": "test as for traffic tapping our topic today memory copy is also a crucial",
    "start": "1303320",
    "end": "1310080"
  },
  {
    "text": "issue that cannot be ignored when it comes to a large request or",
    "start": "1310080",
    "end": "1315640"
  },
  {
    "text": "response tapping filter would make a copy of all traffic to generate Pro bu",
    "start": "1315640",
    "end": "1321320"
  },
  {
    "text": "Fai the save it locally all send to remote service for later",
    "start": "1321320",
    "end": "1326640"
  },
  {
    "text": "analysis this scenario performs more intensive copy compared to previous",
    "start": "1326640",
    "end": "1332640"
  },
  {
    "text": "scenarios based on our observation the proportion of copy up to 20% of entire",
    "start": "1332640",
    "end": "1339400"
  },
  {
    "text": "procise in some cases so we believe it can be a scenario suitable for Hardware",
    "start": "1339400",
    "end": "1346960"
  },
  {
    "text": "acceleration now let's have a brief introduction of",
    "start": "1346960",
    "end": "1353200"
  },
  {
    "text": "the hardware we're using for acceleration Thea sh for data streaming",
    "start": "1353200",
    "end": "1359640"
  },
  {
    "text": "accelerator is PCI device integrating false Generation Z processors as one of",
    "start": "1359640",
    "end": "1366240"
  },
  {
    "text": "the accelerator is already hit the market this",
    "start": "1366240",
    "end": "1371360"
  },
  {
    "text": "year DSA support a series of memory copy operations like move the memory copy du",
    "start": "1371360",
    "end": "1379120"
  },
  {
    "text": "cast copy data from one address to another two addresses at once and so",
    "start": "1379120",
    "end": "1385799"
  },
  {
    "text": "on one thing we should know about the factors that affect memory operation",
    "start": "1385799",
    "end": "1390919"
  },
  {
    "text": "acceleration is the copy size is a key value when the copy site exceed a",
    "start": "1390919",
    "end": "1397720"
  },
  {
    "text": "certain range we can expect benefit from DSA otherwise using CPU is a better idea",
    "start": "1397720",
    "end": "1406320"
  },
  {
    "text": "so there also a issue we taking into consideration in our acceleration",
    "start": "1406320",
    "end": "1413320"
  },
  {
    "text": "test then let's consider the issue of integration the provides two kinds of",
    "start": "1415360",
    "end": "1422000"
  },
  {
    "text": "Library allow us to offload at two levels DML a lbrary works at application",
    "start": "1422000",
    "end": "1430000"
  },
  {
    "text": "Level of using dto shout for DS a transparent offload library at a library",
    "start": "1430000",
    "end": "1436880"
  },
  {
    "text": "level the advantage of using DML is that we",
    "start": "1436880",
    "end": "1442200"
  },
  {
    "text": "can Pressly control every single copy but the drawback is you need very",
    "start": "1442200",
    "end": "1448840"
  },
  {
    "text": "best knowledge on how acceleration can help as we say before in many cases it",
    "start": "1448840",
    "end": "1455960"
  },
  {
    "text": "is not a good idea to upload small side copy and another downside is the",
    "start": "1455960",
    "end": "1463279"
  },
  {
    "text": "modification to the code increase complexity and man M cost that may out",
    "start": "1463279",
    "end": "1469600"
  },
  {
    "text": "of our control so what we want to use is a",
    "start": "1469600",
    "end": "1475919"
  },
  {
    "text": "transparent non intrusive approach we hope that Library works at a",
    "start": "1475919",
    "end": "1482520"
  },
  {
    "text": "low level determine if each copy operation is suitable for",
    "start": "1482520",
    "end": "1488600"
  },
  {
    "text": "acceleration if the copy side above the St hold res set offloaded it otherwise",
    "start": "1488600",
    "end": "1495799"
  },
  {
    "text": "give it back to CPU to do it and that is exactly how Dil",
    "start": "1495799",
    "end": "1503039"
  },
  {
    "text": "works the Dil is preloaded with inv void by environment variable and intercept",
    "start": "1503039",
    "end": "1509880"
  },
  {
    "text": "every memory copy function to GP C all copies are classified into two",
    "start": "1509880",
    "end": "1517200"
  },
  {
    "text": "categories based on size small ones to CPU large one to",
    "start": "1517200",
    "end": "1523200"
  },
  {
    "text": "DSA in the whole process we don't have to mess with the code and recompile it",
    "start": "1523200",
    "end": "1530840"
  },
  {
    "text": "all the offload are transparent to avoid so that's the",
    "start": "1530840",
    "end": "1537720"
  },
  {
    "text": "plan next let's see how we perform our test and what we got from the",
    "start": "1540880",
    "end": "1547880"
  },
  {
    "text": "acceleration we design our test using TCP tapping with HTP 1.1 protocol when s",
    "start": "1547880",
    "end": "1555559"
  },
  {
    "text": "cents connect concurrently Fields requested by CLI which is the",
    "start": "1555559",
    "end": "1561039"
  },
  {
    "text": "body of the response from aoy ranging from 64 kiloby to 1 megabytes in",
    "start": "1561039",
    "end": "1568320"
  },
  {
    "text": "size we also use direct response which means Theo response directly with the",
    "start": "1568320",
    "end": "1574880"
  },
  {
    "text": "prepared fi in the once instead of communicating with Upstream",
    "start": "1574880",
    "end": "1580480"
  },
  {
    "text": "cluster that will significantly increase the proportion of the memory copying overall process",
    "start": "1580480",
    "end": "1588679"
  },
  {
    "text": "we have two groups one for CPU another using dto always",
    "start": "1588679",
    "end": "1595159"
  },
  {
    "text": "DSA the dils r hold is set to 256 kilobytes which means it will only",
    "start": "1595159",
    "end": "1602240"
  },
  {
    "text": "upload for copy side B",
    "start": "1602240",
    "end": "1606520"
  },
  {
    "text": "256 and for the result as shown in the diagram CPU got an advantage initially",
    "start": "1607799",
    "end": "1616240"
  },
  {
    "text": "and the copy size increase trace the running neck and neck at",
    "start": "1616240",
    "end": "1621600"
  },
  {
    "text": "256 following that DSC got better latency and CPU which align with our",
    "start": "1621600",
    "end": "1628919"
  },
  {
    "text": "prediction and understanding on DSA that we got more performance benefit from",
    "start": "1628919",
    "end": "1634399"
  },
  {
    "text": "bigger cop size you might have questions about the performance difference below",
    "start": "1634399",
    "end": "1643080"
  },
  {
    "text": "256 since both CPU based operations while why is such a difference",
    "start": "1643080",
    "end": "1649840"
  },
  {
    "text": "observed I think that may comes from the interception overhead intercept and determine which",
    "start": "1649840",
    "end": "1656679"
  },
  {
    "text": "way to use need to take some CP",
    "start": "1656679",
    "end": "1661158"
  },
  {
    "text": "resource and finally let's look at what would happen for Hardware memory",
    "start": "1662760",
    "end": "1668559"
  },
  {
    "text": "acceleration and what we can expect it first from a hardware perspective DLC",
    "start": "1668559",
    "end": "1678159"
  },
  {
    "text": "is back to a persistent feature in future generation of Z",
    "start": "1678159",
    "end": "1684000"
  },
  {
    "text": "products so it may be faster or support more upload operations that we can",
    "start": "1684000",
    "end": "1690159"
  },
  {
    "text": "introduce into inv acceleration and second for",
    "start": "1690159",
    "end": "1696519"
  },
  {
    "text": "Avo our software level as a community is",
    "start": "1696519",
    "end": "1701919"
  },
  {
    "text": "still exploring the potential of Eno many new scenarios and projects that can",
    "start": "1701919",
    "end": "1708200"
  },
  {
    "text": "V Gateway or something I'm merging so it would be reason to expect",
    "start": "1708200",
    "end": "1714320"
  },
  {
    "text": "there are more suitable cases like CDN or something for void to do",
    "start": "1714320",
    "end": "1721240"
  },
  {
    "text": "acceleration so that's all for my sharing thank you for your",
    "start": "1721240",
    "end": "1727600"
  },
  {
    "text": "listening yeah that's uh what we wanted to present to you and um um regarding",
    "start": "1736080",
    "end": "1744360"
  },
  {
    "text": "further comments about uh the status we haven't been able to Upstream it so far",
    "start": "1744360",
    "end": "1750039"
  },
  {
    "text": "to the nway but we are planning to Upstream the solution soon and um yeah",
    "start": "1750039",
    "end": "1757000"
  },
  {
    "text": "hopefully you would be interested in providing reviews comments and everything would be",
    "start": "1757000",
    "end": "1764200"
  },
  {
    "text": "appreciated yeah thank you",
    "start": "1764200",
    "end": "1769320"
  },
  {
    "text": "thank you um I was just wondering um um when during the design process like did",
    "start": "1795120",
    "end": "1800880"
  },
  {
    "text": "you at all have to take into consideration memory concerns like if you had a really large request and",
    "start": "1800880",
    "end": "1806519"
  },
  {
    "text": "whether that might you know cause large amounts of memory or like perhaps a slow connection to the grpc server that could",
    "start": "1806519",
    "end": "1813559"
  },
  {
    "text": "have caused those sorts of bottlenecks um yes uh so at the moment",
    "start": "1813559",
    "end": "1820880"
  },
  {
    "text": "the way it works is basically by moves so there's no implicit copies within it",
    "start": "1820880",
    "end": "1827080"
  },
  {
    "text": "um so I think we are we have tried to be as optimized as",
    "start": "1827080",
    "end": "1832440"
  },
  {
    "text": "possible uh but yes we do have some upper thresholds on um what traffic we",
    "start": "1832440",
    "end": "1839000"
  },
  {
    "text": "can trace and uh I think we cap it at like something like 64k something like",
    "start": "1839000",
    "end": "1845600"
  },
  {
    "text": "that uh but um and so that is the part where the hardware acceleration really",
    "start": "1845600",
    "end": "1851480"
  },
  {
    "text": "comes into play I think which would enable like faster copies or faster moves if they are requ required and um",
    "start": "1851480",
    "end": "1859440"
  },
  {
    "text": "yeah okay so so are you basically saying that you truncated the messages at 64k yes okay um thank you and I was also",
    "start": "1859440",
    "end": "1868880"
  },
  {
    "text": "in your en boyon talk uh I think you mentioned during that talk that uh possibly mentioned pcap support uh is",
    "start": "1868880",
    "end": "1875559"
  },
  {
    "text": "that something that you implemented as well um yes it's so the solution that we",
    "start": "1875559",
    "end": "1881200"
  },
  {
    "text": "came up with was quite Broad and um what we intend to present it Upstream is just",
    "start": "1881200",
    "end": "1888240"
  },
  {
    "text": "the NY extension um yeah I was just interested",
    "start": "1888240",
    "end": "1893399"
  },
  {
    "text": "to know more about sort of the infrastructure for the pcap playback if if that's something that you're you're able to talk about but um happy to take",
    "start": "1893399",
    "end": "1900679"
  },
  {
    "text": "that offline somewhere um no I don't think I'm allowed to yeah that's fine thank you so much yeah no problem thanks",
    "start": "1900679",
    "end": "1909840"
  }
]