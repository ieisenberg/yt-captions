[
  {
    "start": "0",
    "end": "212000"
  },
  {
    "text": "okay let's start good afternoon first of all I like to introduce myself my name is Saul uhm I",
    "start": "3110",
    "end": "11570"
  },
  {
    "text": "come from Ali Baba I'm the founder of the dragonfly can I ask you a question",
    "start": "11570",
    "end": "19640"
  },
  {
    "text": "have you ever known a dragonfly or have you heard of a dragonfly if you do",
    "start": "19640",
    "end": "26939"
  },
  {
    "text": "please raise your hand okay a few of",
    "start": "26939",
    "end": "32279"
  },
  {
    "text": "them have a hurt off dragonfly I'll give",
    "start": "32279",
    "end": "43590"
  },
  {
    "text": "you a comprehensive introduction of a dragonfly so that you have a better understanding after this project and",
    "start": "43590",
    "end": "50160"
  },
  {
    "text": "today I'd like to talk about four things related to dragonfly",
    "start": "50160",
    "end": "56809"
  },
  {
    "text": "sorry for the technical connection",
    "start": "72909",
    "end": "77468"
  },
  {
    "text": "[Music]",
    "start": "82160",
    "end": "85300"
  },
  {
    "text": "I will talk about a dragonfly history",
    "start": "89520",
    "end": "101070"
  },
  {
    "text": "status adoption and roadmap first I will talk about history of the dragonfly and",
    "start": "101070",
    "end": "106380"
  },
  {
    "text": "the milestones it have achieved and next I like to talk about dragonfly community",
    "start": "106380",
    "end": "114200"
  },
  {
    "text": "it's a current architecture and I will",
    "start": "114200",
    "end": "120390"
  },
  {
    "text": "share with you two cases on how external companies using dragonfly and lastly I",
    "start": "120390",
    "end": "129179"
  },
  {
    "text": "like to talk about our future roadmap it is PGP based highly reliable image",
    "start": "129179",
    "end": "140130"
  },
  {
    "text": "distribution system at larger scale it aims to improve distribution efficiency",
    "start": "140130",
    "end": "146010"
  },
  {
    "text": "and the lower the bandwidth cost and why we've developed a dragonfly now with the",
    "start": "146010",
    "end": "154670"
  },
  {
    "text": "expansion of Alibaba business the deployment",
    "start": "154670",
    "end": "161310"
  },
  {
    "text": "volume increases therefore the software",
    "start": "161310",
    "end": "166650"
  },
  {
    "text": "package to be distributed has increased - and due to the bottlenecks in Puli",
    "start": "166650",
    "end": "176340"
  },
  {
    "text": "images our distribution efficiency is very low so in order to address this",
    "start": "176340",
    "end": "182250"
  },
  {
    "text": "bottleneck we've used a p2p to increase the distribution efficiency of images",
    "start": "182250",
    "end": "191609"
  },
  {
    "text": "and software package with more and more scenarios we have been proving and",
    "start": "191609",
    "end": "198060"
  },
  {
    "text": "adding new features for example dynamic compression etc and we are trying to",
    "start": "198060",
    "end": "206099"
  },
  {
    "text": "build a dragonfly into a comprehensive a file and image distribution system for",
    "start": "206099",
    "end": "213090"
  },
  {
    "start": "212000",
    "end": "453000"
  },
  {
    "text": "all scenarios this is important milestones of dragonfly",
    "start": "213090",
    "end": "220669"
  },
  {
    "text": "dragonfly was born in June 2015",
    "start": "224520",
    "end": "229630"
  },
  {
    "text": "so the first version was released within the group in June 2015 mainly supporting p2p file distribution",
    "start": "229630",
    "end": "237250"
  },
  {
    "text": "and CDN in September 2015 that is the three months later we were able to",
    "start": "237250",
    "end": "243910"
  },
  {
    "text": "support image of distribution we developed a local proxy so we've",
    "start": "243910",
    "end": "249940"
  },
  {
    "text": "downloaded images and put on local client in November 2016 dragonfly cover",
    "start": "249940",
    "end": "258609"
  },
  {
    "text": "the whole Alibaba Group with 1.5 billion",
    "start": "258609",
    "end": "265720"
  },
  {
    "text": "downloads every month we finally became part of the infrastructure of Alibaba in",
    "start": "265720",
    "end": "272560"
  },
  {
    "text": "November 2017 that is one year later in",
    "start": "272560",
    "end": "278350"
  },
  {
    "text": "order to address more problems and further improve distribution efficiency",
    "start": "278350",
    "end": "283960"
  },
  {
    "text": "and lower bandwidth cost we've developed automatic free city memory file systems",
    "start": "283960",
    "end": "292030"
  },
  {
    "text": "and through dynamic compression we have lowered the bandwidth cost especially",
    "start": "292030",
    "end": "298870"
  },
  {
    "text": "cross region and cross country bandwidth cost and we've also became open source",
    "start": "298870",
    "end": "306610"
  },
  {
    "text": "in November 2017 and in November 2017 we",
    "start": "306610",
    "end": "312340"
  },
  {
    "text": "were the first to support cinco's day sales campaign of the",
    "start": "312340",
    "end": "320590"
  },
  {
    "text": "Alibaba Group when we are shopping all",
    "start": "320590",
    "end": "327400"
  },
  {
    "text": "the South data nearly 12:00 p.m. there",
    "start": "327400",
    "end": "338290"
  },
  {
    "text": "will be GB suffer data need to be a poster to tens of thousands of computers",
    "start": "338290",
    "end": "346180"
  },
  {
    "text": "within 30 seconds",
    "start": "346180",
    "end": "350160"
  },
  {
    "text": "we've pushed the brown data or the push pushing failed it will probably like to",
    "start": "355170",
    "end": "362840"
  },
  {
    "text": "the fact that we couldn't shop during the singles day that means the Dragonfly",
    "start": "362840",
    "end": "369330"
  },
  {
    "text": "is a very highly reliable system it can",
    "start": "369330",
    "end": "376740"
  },
  {
    "text": "address various kinds of file and image distribution problems under all",
    "start": "376740",
    "end": "381780"
  },
  {
    "text": "scenarios and in November 2018 dragonfly joined CN CF sandbox project at the same",
    "start": "381780",
    "end": "390330"
  },
  {
    "text": "time we integrated with a hopper I don't know whether you know about hubber it",
    "start": "390330",
    "end": "397980"
  },
  {
    "text": "provides image registration services we are now integrated with a harbor we",
    "start": "397980",
    "end": "407000"
  },
  {
    "text": "developed with the harbour in developing automatic appreciating function we will",
    "start": "407000",
    "end": "415190"
  },
  {
    "text": "sync it up with snob note of dragonfly",
    "start": "415190",
    "end": "421200"
  },
  {
    "text": "currently we've completed refactoring with a golem it's the version was",
    "start": "421200",
    "end": "428700"
  },
  {
    "text": "already released and we also supports HTTP image registry distribution in the",
    "start": "428700",
    "end": "438840"
  },
  {
    "text": "past we could only support GDP and now we have over 50 adopters",
    "start": "438840",
    "end": "445580"
  },
  {
    "text": "so these are important milestones offer",
    "start": "446660",
    "end": "452310"
  },
  {
    "text": "dragonfly next let me talk about status",
    "start": "452310",
    "end": "461069"
  },
  {
    "start": "453000",
    "end": "569000"
  },
  {
    "text": "of a dragonfly and the overall architecture native shows using the",
    "start": "461069",
    "end": "475229"
  },
  {
    "text": "native of a download method that you stock Paul with our using dragonfly on",
    "start": "475229",
    "end": "482490"
  },
  {
    "text": "the Left we have testing conditions",
    "start": "482490",
    "end": "486800"
  },
  {
    "text": "which are dragonfly service 24 and 64g",
    "start": "487940",
    "end": "494490"
  },
  {
    "text": "SSD and a thousand MPs we've tested on 200 VMs as a full and AG 100m being",
    "start": "494490",
    "end": "504169"
  },
  {
    "text": "second and on the right-hand side we have the concurrency downloads and",
    "start": "504169",
    "end": "512300"
  },
  {
    "text": "average costs the green one is native",
    "start": "512300",
    "end": "518430"
  },
  {
    "text": "and orange is dragonfly with the increase in downloads you can see that",
    "start": "518430",
    "end": "526140"
  },
  {
    "text": "the average cost of native has grown exponentially whereas if we use a",
    "start": "526140",
    "end": "532800"
  },
  {
    "text": "dragonfly the average cost remains the flat in",
    "start": "532800",
    "end": "538709"
  },
  {
    "text": "spite of the increase in number of downloads and with the expansion of a",
    "start": "538709",
    "end": "544260"
  },
  {
    "text": "scale dragonflies advantages became more",
    "start": "544260",
    "end": "550860"
  },
  {
    "text": "and more obvious when reaching certain scale using native will probably lead to",
    "start": "550860",
    "end": "558959"
  },
  {
    "text": "explosion of registry that means the image danos would have fail whereas",
    "start": "558959",
    "end": "564480"
  },
  {
    "text": "dragonfly could address all the problems faced by native",
    "start": "564480",
    "end": "571339"
  },
  {
    "start": "569000",
    "end": "805000"
  },
  {
    "text": "this is a dragonfly community we have",
    "start": "574200",
    "end": "583940"
  },
  {
    "text": "3700 stars and over 50 adopters these two indicators Rankine number one in",
    "start": "583940",
    "end": "593190"
  },
  {
    "text": "terms of image of distribution and our adopters come from different background",
    "start": "593190",
    "end": "599190"
  },
  {
    "text": "cloud computing ecommerce financial services telecom operators my",
    "start": "599190",
    "end": "607290"
  },
  {
    "text": "broadcasting performs we have six maintainer to our side of the company",
    "start": "607290",
    "end": "613800"
  },
  {
    "text": "one from eBay one from me to the other for our internal maintenance and we have",
    "start": "613800",
    "end": "621750"
  },
  {
    "text": "32 contributors and I hope that mall of",
    "start": "621750",
    "end": "628709"
  },
  {
    "text": "you could join us to maintain a dragonfly in to help it grow and",
    "start": "628709",
    "end": "634699"
  },
  {
    "text": "currently we have discussion groups on Dean Dean and Nikita we also have which",
    "start": "634699",
    "end": "641820"
  },
  {
    "text": "had discussion groups next let me show you the PGP mechanism has a two main",
    "start": "641820",
    "end": "653220"
  },
  {
    "text": "components super node you can regard it as a p2p chattering Center on every",
    "start": "653220",
    "end": "663529"
  },
  {
    "text": "physical node we will deploy a DF cat which is a client of dragonfly and DF",
    "start": "663529",
    "end": "671190"
  },
  {
    "text": "cats include two small components why is it yellow demon which a smaller version",
    "start": "671190",
    "end": "679110"
  },
  {
    "text": "of the FCAT download images to DF get",
    "start": "679110",
    "end": "692639"
  },
  {
    "text": "and then submit request to super not and see note we all check whether there is some",
    "start": "692639",
    "end": "700889"
  },
  {
    "text": "image file locally otherwise you could",
    "start": "700889",
    "end": "706009"
  },
  {
    "text": "download images from registry to local",
    "start": "706009",
    "end": "711420"
  },
  {
    "text": "to local it is a sync kappa when super",
    "start": "711420",
    "end": "717420"
  },
  {
    "text": "not downloads a block you will package block and generate an overall block and",
    "start": "717420",
    "end": "724589"
  },
  {
    "text": "abroad block will be downloaded by a client one cloud one client I download a",
    "start": "724589",
    "end": "731639"
  },
  {
    "text": "block the block can be shared with other clients so as to achieve p2p",
    "start": "731639",
    "end": "738379"
  },
  {
    "text": "distribution we know that one image has",
    "start": "738379",
    "end": "743639"
  },
  {
    "text": "many layers all packages on the single",
    "start": "743639",
    "end": "749100"
  },
  {
    "text": "layer are downloaded to a container will",
    "start": "749100",
    "end": "755180"
  },
  {
    "text": "copy the file from DF cat to local registry and every layer is downloaded",
    "start": "755180",
    "end": "762540"
  },
  {
    "text": "in this way if all layers of image is downloaded then the the pod download",
    "start": "762540",
    "end": "773759"
  },
  {
    "text": "will be completed for super node super",
    "start": "773759",
    "end": "779040"
  },
  {
    "text": "node also support Remington's storage if",
    "start": "779040",
    "end": "787189"
  },
  {
    "text": "download only proceed 50%",
    "start": "787189",
    "end": "793089"
  },
  {
    "text": "dance when connection is ready supernal",
    "start": "793089",
    "end": "798399"
  },
  {
    "text": "only needs to download the other 50% of the file in this way to improve the",
    "start": "798399",
    "end": "803469"
  },
  {
    "text": "download performance look at let us look",
    "start": "803469",
    "end": "810909"
  },
  {
    "start": "805000",
    "end": "885000"
  },
  {
    "text": "at the super node architecture super node has a several modules on the top we",
    "start": "810909",
    "end": "817329"
  },
  {
    "text": "have an API gateway which should provide a breast-- API the core modules include",
    "start": "817329",
    "end": "824229"
  },
  {
    "text": "p2p scheduler CDN manager transmission control and preheater",
    "start": "824229",
    "end": "830739"
  },
  {
    "text": "and on the bottom we have Storage Manager next I will give you detailed",
    "start": "830739",
    "end": "839429"
  },
  {
    "text": "introduction of every module for p2p you satella it will determine what kind of a",
    "start": "839429",
    "end": "849579"
  },
  {
    "text": "plant should client download which kind",
    "start": "849579",
    "end": "855429"
  },
  {
    "text": "of client you you need to download blocks are from and what about the",
    "start": "855429",
    "end": "860499"
  },
  {
    "text": "download speed first let's look at how",
    "start": "860499",
    "end": "866279"
  },
  {
    "text": "dragonfly determine what kind of blocks",
    "start": "866279",
    "end": "872859"
  },
  {
    "text": "should be downloaded by a client we used two strategies why is this sparseness",
    "start": "872859",
    "end": "879269"
  },
  {
    "text": "the maximum space these principle",
    "start": "879269",
    "end": "885628"
  },
  {
    "start": "885000",
    "end": "1045000"
  },
  {
    "text": "questing client so that different blocks in the p2p Network can balance",
    "start": "895069",
    "end": "901730"
  },
  {
    "text": "dynamically so that we can avoid the scars block or the sparsity so with",
    "start": "901730",
    "end": "911970"
  },
  {
    "text": "dispersity theory we can choose a block choose blocks and then for the different",
    "start": "911970",
    "end": "919589"
  },
  {
    "text": "blocks for example there are a lot but of course every time the upper block is",
    "start": "919589",
    "end": "927149"
  },
  {
    "text": "limited for example we have two blocks and now the client can only download one block so do we choose one from the -",
    "start": "927149",
    "end": "934939"
  },
  {
    "text": "actually we use deep back to pack back to back what do you mean so that means",
    "start": "934939",
    "end": "942540"
  },
  {
    "text": "that when the client downloads the different blocks now we know it's block",
    "start": "942540",
    "end": "950639"
  },
  {
    "text": "8 and 9 and the client can only just one then we would choose 9 because 9 is the",
    "start": "950639",
    "end": "957480"
  },
  {
    "text": "closest to 10 that means when the download when the client downloads it's",
    "start": "957480",
    "end": "963990"
  },
  {
    "text": "like a sequential i/o we can do the driver i/o so then we can have this",
    "start": "963990",
    "end": "969569"
  },
  {
    "text": "sequential reading and writing so that we can improve the i/o efficiency",
    "start": "969569",
    "end": "974670"
  },
  {
    "text": "locally and improve the image",
    "start": "974670",
    "end": "980959"
  },
  {
    "text": "distribution now the client has already chosen the blocks to download so for the",
    "start": "980959",
    "end": "988980"
  },
  {
    "text": "blocks where which clients should we",
    "start": "988980",
    "end": "994350"
  },
  {
    "text": "download them from so we have the proximity that means we should choose",
    "start": "994350",
    "end": "1000999"
  },
  {
    "text": "the closest client that is on the network because the latency is smaller",
    "start": "1000999",
    "end": "1009699"
  },
  {
    "text": "then we can reduce the you download latency and also we can choose different",
    "start": "1009699",
    "end": "1016999"
  },
  {
    "text": "clients then among the target clients we need to",
    "start": "1016999",
    "end": "1023360"
  },
  {
    "text": "do another screening and now we can use affinity we can use affinity to define",
    "start": "1023360",
    "end": "1031569"
  },
  {
    "text": "which clients is has a better affinity to my claim and also we have the work",
    "start": "1031569",
    "end": "1038600"
  },
  {
    "text": "limiter to choose the lowest load client",
    "start": "1038600",
    "end": "1048919"
  },
  {
    "text": "for example now we have to target client a and B for a a is providing three",
    "start": "1048919",
    "end": "1057770"
  },
  {
    "text": "blocks out and two is providing in the two so then would just be because that",
    "start": "1057770",
    "end": "1062840"
  },
  {
    "text": "the load there is the lowest and then the speed to respond to the requesting",
    "start": "1062840",
    "end": "1071510"
  },
  {
    "text": "client is faster so that is the",
    "start": "1071510",
    "end": "1076690"
  },
  {
    "text": "scheduler strategy now we have six strategies of course and they combine",
    "start": "1076690",
    "end": "1085790"
  },
  {
    "text": "with each other so they can also impact each other then for CD and manager that",
    "start": "1085790",
    "end": "1096950"
  },
  {
    "text": "includes the synchronizer synchronizer we have the multi thread continuing so",
    "start": "1096950",
    "end": "1106610"
  },
  {
    "text": "that we can synchronize the image we",
    "start": "1106610",
    "end": "1112340"
  },
  {
    "text": "have the breakpoint in resume so we can generate the seed and then for catcher",
    "start": "1112340",
    "end": "1118659"
  },
  {
    "text": "that is the city in cash so it includes the the cash testing and also the cash",
    "start": "1118659",
    "end": "1129250"
  },
  {
    "text": "dynamic GC and then compressor that is the dynamic compressor and we will",
    "start": "1129250",
    "end": "1136820"
  },
  {
    "text": "dynamically decide whether this vote or this file should be compressed and also",
    "start": "1136820",
    "end": "1143890"
  },
  {
    "text": "the compression strategy is block-level that means for the whole",
    "start": "1143890",
    "end": "1151330"
  },
  {
    "text": "file we want to compress it but we would choose the most worthy part of the file",
    "start": "1151330",
    "end": "1160420"
  },
  {
    "text": "to compress rather than the whole file so with this kind of method the",
    "start": "1160420",
    "end": "1167170"
  },
  {
    "start": "1165000",
    "end": "1285000"
  },
  {
    "text": "compression benefit is the largest and also after the compression it will be",
    "start": "1167170",
    "end": "1173110"
  },
  {
    "text": "cached so we just need to compress once and use multiple times and of course",
    "start": "1173110",
    "end": "1179770"
  },
  {
    "text": "according to the super node load we would decide whether to compress or not then we can avoid the impact on the",
    "start": "1179770",
    "end": "1187000"
  },
  {
    "text": "super node normal scheduling and the",
    "start": "1187000",
    "end": "1192040"
  },
  {
    "text": "compressing is also multi thread and then transmission we have the rate",
    "start": "1192040",
    "end": "1199060"
  },
  {
    "text": "limiter that includes the super node",
    "start": "1199060",
    "end": "1204960"
  },
  {
    "text": "synchronization image and also the client and it's downloading speed for",
    "start": "1204960",
    "end": "1213220"
  },
  {
    "text": "blocks then the size limiter that is the size of the block for different files",
    "start": "1213220",
    "end": "1220620"
  },
  {
    "text": "the size would defer and then data security it means for different block we",
    "start": "1220620",
    "end": "1229780"
  },
  {
    "text": "would use the dragonfly designed format to pack them then we would avoid any",
    "start": "1229780",
    "end": "1239430"
  },
  {
    "text": "manipulation during the transmission the fourth module is the preheater of",
    "start": "1239430",
    "end": "1245590"
  },
  {
    "text": "automation it is not just for container",
    "start": "1245590",
    "end": "1251620"
  },
  {
    "text": "image it's also for a general file and what do we do in PD",
    "start": "1251620",
    "end": "1258750"
  },
  {
    "text": "so when we build the image when we push every layer that we pushed we would have",
    "start": "1258750",
    "end": "1266200"
  },
  {
    "text": "the slap hook request for super node and then that layer of file is synchronized",
    "start": "1266200",
    "end": "1272560"
  },
  {
    "text": "on the CDN local cache so when we push",
    "start": "1272560",
    "end": "1279520"
  },
  {
    "text": "after we pushed the image is synchronized to the local cache of CDN",
    "start": "1279520",
    "end": "1286420"
  },
  {
    "start": "1285000",
    "end": "1405000"
  },
  {
    "text": "and when we apply and deploy when we",
    "start": "1286420",
    "end": "1291460"
  },
  {
    "text": "pull the image then there is a hit in the cache so we don't need to",
    "start": "1291460",
    "end": "1296950"
  },
  {
    "text": "synchronize once again from the from the",
    "start": "1296950",
    "end": "1303040"
  },
  {
    "text": "network so that the image distribution efficiency is bit better so with these",
    "start": "1303040",
    "end": "1310350"
  },
  {
    "text": "strategies dragonfly would try its best to improve the download efficiency and",
    "start": "1310350",
    "end": "1318510"
  },
  {
    "text": "reduce the cost and the bottom layer is the Storage Manager we have different",
    "start": "1318510",
    "end": "1327940"
  },
  {
    "text": "kinds of data to be stored for example with block data and the metadata the",
    "start": "1327940",
    "end": "1334930"
  },
  {
    "text": "metadata for different block and also the MDU code and also the number and the",
    "start": "1334930",
    "end": "1341080"
  },
  {
    "text": "files then for link data this is the soft link or data Y soft because with",
    "start": "1341080",
    "end": "1349900"
  },
  {
    "text": "soft linker we can go cross file system",
    "start": "1349900",
    "end": "1355270"
  },
  {
    "text": "so we can access to different driver on the super node with the soft linker we",
    "start": "1355270",
    "end": "1367000"
  },
  {
    "text": "can access to all of the drivers and the last one is statistics data it includes",
    "start": "1367000",
    "end": "1373020"
  },
  {
    "text": "for example the time of distribution and also the success rate and for each node",
    "start": "1373020",
    "end": "1381960"
  },
  {
    "text": "which client are they downloaded from and so on then it's more convenient for us to",
    "start": "1382110",
    "end": "1390750"
  },
  {
    "text": "analyze the distribution efficiency and also we can provide some data support",
    "start": "1390750",
    "end": "1396810"
  },
  {
    "text": "for the later improvement on the bottom layer that is the memory file system we",
    "start": "1396810",
    "end": "1404340"
  },
  {
    "text": "have the memory file system as well as the disk file system why do we have the",
    "start": "1404340",
    "end": "1409620"
  },
  {
    "text": "memory faster because we want to solve the problem of large file distribution",
    "start": "1409620",
    "end": "1415860"
  },
  {
    "text": "for example 10 G 10 Giga so it will",
    "start": "1415860",
    "end": "1421080"
  },
  {
    "text": "occupy part of the i/o resource then it",
    "start": "1421080",
    "end": "1426960"
  },
  {
    "text": "will cause impact on the downloading of other files so we can use the memory",
    "start": "1426960",
    "end": "1432330"
  },
  {
    "text": "file system to avoid this kind of situation and we can solve the larger",
    "start": "1432330",
    "end": "1437820"
  },
  {
    "text": "file resource issue just now we talked",
    "start": "1437820",
    "end": "1451440"
  },
  {
    "text": "about the allocation or distribution principle and also the architecture I",
    "start": "1451440",
    "end": "1458070"
  },
  {
    "text": "believe that you already have some wholesome view on dragonfly so let me",
    "start": "1458070",
    "end": "1464760"
  },
  {
    "text": "introduce to you the use case first on",
    "start": "1464760",
    "end": "1473510"
  },
  {
    "text": "and not above a cloud you know leave over cloud there is this ACR service",
    "start": "1473510",
    "end": "1479600"
  },
  {
    "text": "yeah other Baba container registry service so let's take a look how they",
    "start": "1479600",
    "end": "1486900"
  },
  {
    "text": "used dragonfly so it deploys the super",
    "start": "1486900",
    "end": "1492870"
  },
  {
    "text": "node config API and that component will maintain the basic configuration of",
    "start": "1492870",
    "end": "1500430"
  },
  {
    "text": "super node for example then list and also the rate control and also the",
    "start": "1500430",
    "end": "1506130"
  },
  {
    "text": "hardware control and so on and then on each note there is this",
    "start": "1506130",
    "end": "1511269"
  },
  {
    "text": "conflict watcher and periodically it",
    "start": "1511269",
    "end": "1517330"
  },
  {
    "text": "would put down the configuration and save it locally under the note and when",
    "start": "1517330",
    "end": "1523809"
  },
  {
    "text": "the container applies pool then the pool is unto the TF demon and then according",
    "start": "1523809",
    "end": "1531999"
  },
  {
    "start": "1525000",
    "end": "1645000"
  },
  {
    "text": "to the config watcher it will pass it on to DF get client then the client",
    "start": "1531999",
    "end": "1538960"
  },
  {
    "text": "according to the config it would request on the relevant super note and then the",
    "start": "1538960",
    "end": "1546700"
  },
  {
    "text": "process will be like described just now",
    "start": "1546700",
    "end": "1553080"
  },
  {
    "text": "now for ACR has this demo version with",
    "start": "1556349",
    "end": "1564429"
  },
  {
    "text": "dragonfly and if you want you can try it [Music]",
    "start": "1564429",
    "end": "1571910"
  },
  {
    "text": "this is another example in Georgia mobile how they use so above there is",
    "start": "1571979",
    "end": "1580679"
  },
  {
    "text": "the ecosystem of judge on mobile they have this client in charge of uploading",
    "start": "1580679",
    "end": "1588429"
  },
  {
    "text": "the image and triggering the image",
    "start": "1588429",
    "end": "1593919"
  },
  {
    "text": "download command and down there the light blue one that is the Dragonfly",
    "start": "1593919",
    "end": "1599159"
  },
  {
    "text": "component so they would upload the image",
    "start": "1599159",
    "end": "1605919"
  },
  {
    "text": "to hover and push it to harbor and this is the back a storage after the push",
    "start": "1605919",
    "end": "1611200"
  },
  {
    "text": "there is just distribute command to the API gateway then the API gateway would call the Conner service kernel service",
    "start": "1611200",
    "end": "1619989"
  },
  {
    "text": "and then it's pushed to the duct server dock server you can't understand it like",
    "start": "1619989",
    "end": "1626789"
  },
  {
    "text": "dark demon the API interface and then",
    "start": "1626789",
    "end": "1632710"
  },
  {
    "text": "the dock demon would push it to DF client the day of client then",
    "start": "1632710",
    "end": "1639020"
  },
  {
    "text": "will interact with the df' master which is the super node and then there is the",
    "start": "1639020",
    "end": "1647270"
  },
  {
    "start": "1645000",
    "end": "1765000"
  },
  {
    "text": "PDB Network and there is a p2p transmission so basically then the",
    "start": "1647270",
    "end": "1655250"
  },
  {
    "text": "process will be just like how I described it and this is their data",
    "start": "1655250",
    "end": "1663490"
  },
  {
    "text": "comparison the blue one is the deployed",
    "start": "1663490",
    "end": "1672650"
  },
  {
    "text": "time average and the red one is after the use of dragonfly clearly you can see",
    "start": "1672650",
    "end": "1679010"
  },
  {
    "text": "that after using dragonfly the application deployment time is largely",
    "start": "1679010",
    "end": "1684020"
  },
  {
    "text": "reduced I think the efficiency improved by three times then let me introduce to you the",
    "start": "1684020",
    "end": "1695990"
  },
  {
    "text": "future planning of dragonfly talked about several things for example the CNF",
    "start": "1695990",
    "end": "1702230"
  },
  {
    "text": "Co system since F ecosystem we would corporate will integrate deeper with",
    "start": "1702230",
    "end": "1708800"
  },
  {
    "text": "harbor and also we want to support the",
    "start": "1708800",
    "end": "1714429"
  },
  {
    "text": "clinic D and that is already being carried out then for security we will",
    "start": "1714429",
    "end": "1722600"
  },
  {
    "text": "support the private container image registry and also that's already done",
    "start": "1722600",
    "end": "1729260"
  },
  {
    "text": "and then in encryption we would introduce different encryption algorithm for the customers to choose we can",
    "start": "1729260",
    "end": "1736550"
  },
  {
    "text": "ensure that the transmission is safer then for efficiency of distribution we",
    "start": "1736550",
    "end": "1743300"
  },
  {
    "text": "also explored a lot especially in the intelligent flow control and also the",
    "start": "1743300",
    "end": "1750590"
  },
  {
    "text": "intelligence scheduling algorithm and then in openness first we use the",
    "start": "1750590",
    "end": "1758780"
  },
  {
    "text": "goaline to refactor super node now it's a better integrated with the CNC F and",
    "start": "1758780",
    "end": "1765280"
  },
  {
    "start": "1765000",
    "end": "1885000"
  },
  {
    "text": "now in the new version we used this kind of plugin",
    "start": "1765280",
    "end": "1770960"
  },
  {
    "text": "based architecture so that it's easier to scale according to the customer",
    "start": "1770960",
    "end": "1776960"
  },
  {
    "text": "demand and then for scalability we would simplify the complexity of scaling of",
    "start": "1776960",
    "end": "1787160"
  },
  {
    "text": "super node so that with the increase of distribution we can automatically",
    "start": "1787160",
    "end": "1794330"
  },
  {
    "text": "flexibly scale it's nothing well migrate",
    "start": "1794330",
    "end": "1820880"
  },
  {
    "text": "to another normal super node for continuous download or so it has high",
    "start": "1820880",
    "end": "1828320"
  },
  {
    "text": "availability otherwise not become infrastructure of course in order to",
    "start": "1828320",
    "end": "1833840"
  },
  {
    "text": "further improve its stability we are exploring a solution that is",
    "start": "1833840",
    "end": "1841030"
  },
  {
    "text": "decentralization is not an entire decentralization we just want to weaken",
    "start": "1841030",
    "end": "1846890"
  },
  {
    "text": "the role of a super node with minimum of",
    "start": "1846890",
    "end": "1854330"
  },
  {
    "text": "further which at least a purpose to minimize when the super node fails in",
    "start": "1854330",
    "end": "1862130"
  },
  {
    "text": "terms of small wheels we support more",
    "start": "1862130",
    "end": "1870400"
  },
  {
    "text": "artists the entire group will move to cloud",
    "start": "1870400",
    "end": "1877100"
  },
  {
    "text": "back-end the storage is via cloud disk therefore",
    "start": "1877100",
    "end": "1882690"
  },
  {
    "text": "we will support more clouds in the",
    "start": "1882690",
    "end": "1888480"
  },
  {
    "start": "1885000",
    "end": "2005000"
  },
  {
    "text": "future we're going to support different repositories which include our lodges",
    "start": "1888480",
    "end": "1895370"
  },
  {
    "text": "mother and kid previewed image you need",
    "start": "1895370",
    "end": "1927360"
  },
  {
    "text": "to push every image registry will",
    "start": "1927360",
    "end": "1934410"
  },
  {
    "text": "generate request to a super node after getting the request super node well sync",
    "start": "1934410",
    "end": "1942360"
  },
  {
    "text": "up image - it's a local - locally therefore super node don't need to sync",
    "start": "1942360",
    "end": "1950910"
  },
  {
    "text": "half image from remote registry it will save time and further lower bandwidth",
    "start": "1950910",
    "end": "1958680"
  },
  {
    "text": "cost for registry recording integration",
    "start": "1958680",
    "end": "1967920"
  },
  {
    "text": "with preheating stage hopper has a",
    "start": "1967920",
    "end": "1973890"
  },
  {
    "text": "registry when you push the image to harbor harbor well notify us the request",
    "start": "1973890",
    "end": "1979530"
  },
  {
    "text": "and we will download the image to local",
    "start": "1979530",
    "end": "1985230"
  },
  {
    "text": "super node and when you push it would you want",
    "start": "1985230",
    "end": "1991010"
  },
  {
    "text": "automatically process yes refactor",
    "start": "1991010",
    "end": "2001929"
  },
  {
    "text": "supernote with Goldman is based on CRT or you did it yourself",
    "start": "2001929",
    "end": "2007470"
  },
  {
    "start": "2005000",
    "end": "2125000"
  },
  {
    "text": "CRT we did ourselves super node was",
    "start": "2007470",
    "end": "2023919"
  },
  {
    "text": "reaching in Java and now we are opening sauce and become a member of a sincere",
    "start": "2023919",
    "end": "2030940"
  },
  {
    "text": "so we refactor super node waiter : yes almost Ossian CFO project where",
    "start": "2030940",
    "end": "2040600"
  },
  {
    "text": "yourself CRT we are different so you say",
    "start": "2040600",
    "end": "2050919"
  },
  {
    "text": "that we're going to use this system so",
    "start": "2050919",
    "end": "2072010"
  },
  {
    "text": "when you deploy you will use the mass transfer system yes",
    "start": "2072010",
    "end": "2078780"
  },
  {
    "text": "you for one super node fails well go to",
    "start": "2081980",
    "end": "2089030"
  },
  {
    "text": "super node for further down the Silvano is a local storage images if one super",
    "start": "2089030",
    "end": "2096618"
  },
  {
    "text": "motor can migrate to other super nice",
    "start": "2096619",
    "end": "2102550"
  },
  {
    "text": "super node fails knows I request a new",
    "start": "2102550",
    "end": "2115220"
  },
  {
    "text": "super gnome I know how many dogs I need to request for what about other is super moves how",
    "start": "2115220",
    "end": "2127369"
  },
  {
    "start": "2125000",
    "end": "2235000"
  },
  {
    "text": "can they sync up to the failed super",
    "start": "2127369",
    "end": "2133220"
  },
  {
    "text": "node your super node fails the entire",
    "start": "2133220",
    "end": "2141859"
  },
  {
    "text": "disk let's assume that this file system fails super knows no they don't need to",
    "start": "2141859",
    "end": "2154480"
  },
  {
    "text": "new super no you need to read register and the super node will chess whether",
    "start": "2156520",
    "end": "2162470"
  },
  {
    "text": "you have local cache otherwise you need to sync up they need to how many bugs",
    "start": "2162470",
    "end": "2174740"
  },
  {
    "text": "they have downloaded they need to report it to a new super node in this way can see Brno knows how to distribute the",
    "start": "2174740",
    "end": "2181520"
  },
  {
    "text": "rest of blocks to the client another question the dragonflies",
    "start": "2181520",
    "end": "2188750"
  },
  {
    "text": "support okay yes yes it's an image",
    "start": "2188750",
    "end": "2193760"
  },
  {
    "text": "container how about a persistent storage",
    "start": "2193760",
    "end": "2201310"
  },
  {
    "text": "it's a file system so use the articles storage system we use the local storage",
    "start": "2201310",
    "end": "2209650"
  },
  {
    "text": "we use the local file system we are planning to use the other clothes and",
    "start": "2209650",
    "end": "2217660"
  },
  {
    "text": "OSS the network file system to do that",
    "start": "2217660",
    "end": "2224109"
  },
  {
    "text": "super node",
    "start": "2226300",
    "end": "2229510"
  }
]