[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "hi everybody thank you for coming to my talk I'm extremely nervous I'm excited",
    "start": "0",
    "end": "6770"
  },
  {
    "text": "so this talk is about MySQL and kubernetes and my name is Patrick",
    "start": "6770",
    "end": "12360"
  },
  {
    "text": "Galbraith something about me I've had a long lasting relationship with MySQL",
    "start": "12360",
    "end": "17670"
  },
  {
    "text": "I've worked on MySQL for MySQL various",
    "start": "17670",
    "end": "22680"
  },
  {
    "text": "other companies working on MySQL I've contributed to MySQL I worked on my",
    "start": "22680",
    "end": "29340"
  },
  {
    "text": "various MySQL project's memcache UDF's DVD - cue all its Perl driver I still am m8 Co maintainer of that federated",
    "start": "29340",
    "end": "36660"
  },
  {
    "text": "storage engine I contributed the original example of running Galera on",
    "start": "36660",
    "end": "41969"
  },
  {
    "text": "kubernetes - in the examples directory for kubernetes so I love learning",
    "start": "41969",
    "end": "48450"
  },
  {
    "text": "languages whether it's programming languages or spoken languages I love being with my family outdoors I love",
    "start": "48450",
    "end": "55170"
  },
  {
    "text": "chili it's the best place I've ever been and as you can see by this page I'm not a designer",
    "start": "55170",
    "end": "61609"
  },
  {
    "text": "so I I started working for this this great company Oracle dine in September",
    "start": "61609",
    "end": "69180"
  },
  {
    "start": "62000",
    "end": "112000"
  },
  {
    "text": "and I'm having a great time what we provide most of you probably already know this is DNS we provide DNS for some",
    "start": "69180",
    "end": "76950"
  },
  {
    "text": "of the world's largest and most admired web properties you know we have the",
    "start": "76950",
    "end": "82290"
  },
  {
    "text": "largest fastest and most resilient DNS networks in the world over 3,500",
    "start": "82290",
    "end": "89070"
  },
  {
    "text": "enterprises new brands like netflix twitter linkedin we also provide email",
    "start": "89070",
    "end": "96570"
  },
  {
    "text": "for organizations with large sending needs we also are building a cloud",
    "start": "96570",
    "end": "101610"
  },
  {
    "text": "Oracle cloud infrastructure and Dyne provides edge services for that cloud and we're hiring this is on the slide so",
    "start": "101610",
    "end": "109020"
  },
  {
    "text": "please do take a look so what is this presentation about well it's about",
    "start": "109020",
    "end": "115200"
  },
  {
    "start": "112000",
    "end": "164000"
  },
  {
    "text": "running MySQL on kubernetes and some of those things with databases are extremely complex pieces of software and",
    "start": "115200",
    "end": "122299"
  },
  {
    "text": "kubernetes actually makes it easier to run databases we're going to talk about",
    "start": "122299",
    "end": "128580"
  },
  {
    "text": "stateful applications which database is a complex stateful application",
    "start": "128580",
    "end": "134020"
  },
  {
    "text": "and in that we're going to talk about stateful sets we're gonna showcase this with Vitesse by talking about the test",
    "start": "134020",
    "end": "139630"
  },
  {
    "text": "and doing a demo we're also going to talk about operators and I'm going to be very excited to talk about the MySQL",
    "start": "139630",
    "end": "146230"
  },
  {
    "text": "operator that Oracle has been developing and give a demo of that with time permitting I have some extra slides I",
    "start": "146230",
    "end": "152680"
  },
  {
    "text": "went crazy I had 60 slides at one point somebody said this is a two-day seminar so that's why I'm speaking you know with",
    "start": "152680",
    "end": "159580"
  },
  {
    "text": "some cadence here and please do save questions to the end so it's a tale of",
    "start": "159580",
    "end": "165550"
  },
  {
    "start": "164000",
    "end": "220000"
  },
  {
    "text": "two open-source projects we have MySQL which has been you know and software year has been around for twenty years",
    "start": "165550",
    "end": "171490"
  },
  {
    "text": "that's quite a while and it certainly is ubiquitous and everywhere and used every so many places and there are a lot of",
    "start": "171490",
    "end": "177730"
  },
  {
    "text": "variations of MySQL permutations I heard even heard somebody was telling me about",
    "start": "177730",
    "end": "183790"
  },
  {
    "text": "the work that Ali Baba's done I know friends at Facebook they've made their customization and then there's",
    "start": "183790",
    "end": "189550"
  },
  {
    "text": "kubernetes the Linux of the cloud as we heard it at this conference it's I got",
    "start": "189550",
    "end": "196060"
  },
  {
    "text": "to say the fastest growing open-source project it's application deployment done right definitely community driven look",
    "start": "196060",
    "end": "202510"
  },
  {
    "text": "at all the people here 4000 people that's fantastic and it's a moving target rapidly developing when I started",
    "start": "202510",
    "end": "209230"
  },
  {
    "text": "this preparing for this talk I had an understanding of when I had put together the original Galera example and things",
    "start": "209230",
    "end": "216850"
  },
  {
    "text": "have changed so I had to do a little bit of catching up so database with",
    "start": "216850",
    "end": "222880"
  },
  {
    "start": "220000",
    "end": "269000"
  },
  {
    "text": "databases it's a question of pets versus cattle a database containers tend to be more pets than cattle that seems obvious",
    "start": "222880",
    "end": "229780"
  },
  {
    "text": "you care greatly about them like your pet a pod of multiple databases or",
    "start": "229780",
    "end": "235300"
  },
  {
    "text": "instances or one a you know you the description of pod is we get to run a bunch of containers on one node well we",
    "start": "235300",
    "end": "242140"
  },
  {
    "text": "don't necessarily want that with databases and the documentation that says with four pods it says kubernetes pods are mortal mortality is not",
    "start": "242140",
    "end": "249489"
  },
  {
    "text": "something we necessarily like to see as an attribute in databases a database is",
    "start": "249489",
    "end": "254590"
  },
  {
    "text": "a complex stateful application we want consistent access we always want the same database to be there safety don't",
    "start": "254590",
    "end": "261850"
  },
  {
    "text": "scale if it's unhealthy that's a bad thing and of course persistent storage which is kind of",
    "start": "261850",
    "end": "267210"
  },
  {
    "text": "an obvious thing for that so here's some ingredients I like this picture of shots",
    "start": "267210",
    "end": "273509"
  },
  {
    "start": "269000",
    "end": "319000"
  },
  {
    "text": "I love shots they're delicious and so we have some delicious ingredients with kubernetes we have services which I'm not going to talk",
    "start": "273509",
    "end": "280680"
  },
  {
    "text": "about what that is everybody knows what that as persistent volumes per citizen volume claims and storage classes and",
    "start": "280680",
    "end": "286440"
  },
  {
    "text": "then of course we have a newer resource on the block stateful sets and then",
    "start": "286440",
    "end": "291660"
  },
  {
    "text": "within that there we can talk about init containers if we have time volume claim templates and then there there are",
    "start": "291660",
    "end": "297750"
  },
  {
    "text": "operators which allow you to extend kubernetes and custom with the utilize",
    "start": "297750",
    "end": "302820"
  },
  {
    "text": "custom resource definition then we have sidecar containers to do some handy tasks for us and node selector I was",
    "start": "302820",
    "end": "310199"
  },
  {
    "text": "going to talk about this I probably won't have time but it's definitely something to know about for databases if",
    "start": "310199",
    "end": "315419"
  },
  {
    "text": "you want to run a database on a particular node so first of all we're",
    "start": "315419",
    "end": "321150"
  },
  {
    "start": "319000",
    "end": "386000"
  },
  {
    "text": "going to talk about stateful sets so stateful sets provide guarantees about ordering and uniqueness of pod resources",
    "start": "321150",
    "end": "328410"
  },
  {
    "text": "and pods themselves and the way that their names they main persist maintain persistent sticky identity for each of",
    "start": "328410",
    "end": "335340"
  },
  {
    "text": "the products rescheduling it also ensures ordinality it's good when it when you run pods within a stateful said",
    "start": "335340",
    "end": "342810"
  },
  {
    "text": "it's going to be zero through whatever number you're going to run and they're gonna be named that way they're also",
    "start": "342810",
    "end": "348720"
  },
  {
    "text": "interchangeable and they won't you won't run it run a pod with the same name you won't have two of the same thing they",
    "start": "348720",
    "end": "354330"
  },
  {
    "text": "have a stable network identity first of all the name of them is whatever the service name is - ordinal of how many",
    "start": "354330",
    "end": "360960"
  },
  {
    "text": "over ever being run and then you create a headless service if we have time we can discuss this and the that is the",
    "start": "360960",
    "end": "368490"
  },
  {
    "text": "domain name for that pod and that's how you would access it they have stable and",
    "start": "368490",
    "end": "373520"
  },
  {
    "text": "stable storage and stateful resources pods remount the same storage through restarts so when there's a restart it's",
    "start": "373520",
    "end": "381270"
  },
  {
    "text": "the same thing as it was before safety we don't scale if it's unhealthy so we",
    "start": "381270",
    "end": "388800"
  },
  {
    "start": "386000",
    "end": "427000"
  },
  {
    "text": "now have a I'm going to show these two two illustrations they're really good and kind of bringing the point home as",
    "start": "388800",
    "end": "396419"
  },
  {
    "text": "to what the differences are so with a deployment replica set you there not start at any specific",
    "start": "396419",
    "end": "402170"
  },
  {
    "text": "order the name is you you have a name and then you have a numeric value of the",
    "start": "402170",
    "end": "409700"
  },
  {
    "text": "the deployment or whatever idea there is and then you have a random alphanumeric and that changes from for each pod",
    "start": "409700",
    "end": "415340"
  },
  {
    "text": "they're all different it's not fun to try to log and figure out what containers are running because you have to look and see what they're called and",
    "start": "415340",
    "end": "421990"
  },
  {
    "text": "it'll still scale if it if there's a crash and it'll replace with another non unique name but with a stateful set what",
    "start": "421990",
    "end": "429320"
  },
  {
    "start": "427000",
    "end": "452000"
  },
  {
    "text": "we get we're started in order you don't have to sit there and say I want to run this one this one this one like I did with my",
    "start": "429320",
    "end": "435860"
  },
  {
    "text": "original example the names are unique and distinct and it must replace if",
    "start": "435860",
    "end": "442670"
  },
  {
    "text": "there's a failed note it's going to replace that same note and it's going to be that same note for all intents and",
    "start": "442670",
    "end": "447680"
  },
  {
    "text": "purposes and you don't scale the cluster when it's unhealthy so then we have",
    "start": "447680",
    "end": "453710"
  },
  {
    "start": "452000",
    "end": "569000"
  },
  {
    "text": "operators it's an application-specific domain controller it encodes",
    "start": "453710",
    "end": "460090"
  },
  {
    "text": "application-specific domain knowledge through extending the kubernetes api what does this mean this means we as",
    "start": "460090",
    "end": "466070"
  },
  {
    "text": "operators we do certain things you know if I run the Galera cluster I do it in a certain order I maintain it in a certain",
    "start": "466070",
    "end": "472550"
  },
  {
    "text": "way with operators you build that into it you build that into the custom resource definition when you create your",
    "start": "472550",
    "end": "477950"
  },
  {
    "text": "operator it enables users to create configure and manage stateful applications that because you can add",
    "start": "477950",
    "end": "484100"
  },
  {
    "text": "that functionality in there and it builds upon resources and controller concepts and it leverages kubernetes",
    "start": "484100",
    "end": "492200"
  },
  {
    "text": "primitives like replica sets stateful sets and services and other resources an",
    "start": "492200",
    "end": "498860"
  },
  {
    "text": "operator executes common application tasks you design it to run whatever you",
    "start": "498860",
    "end": "504920"
  },
  {
    "text": "want within your application and it does it for you and hides all the gory details it's all installed as a",
    "start": "504920",
    "end": "511610"
  },
  {
    "text": "deployment and once it's running you utilize it and you run it with custom resource definition types some of these",
    "start": "511610",
    "end": "517640"
  },
  {
    "text": "here you see at CD cluster Prometheus and MySQL cluster in my school backup which I'm excited to talk about so I",
    "start": "517640",
    "end": "526940"
  },
  {
    "text": "like this graphic this is when I copped from choruses website where they discuss operators but it's really",
    "start": "526940",
    "end": "533450"
  },
  {
    "text": "and I solved this morning in the keynote there was something just like this what",
    "start": "533450",
    "end": "538880"
  },
  {
    "text": "an operator does is it observes the state of what you have running and in this example it shows oh I only have two",
    "start": "538880",
    "end": "545000"
  },
  {
    "text": "running oh and one of them happens to be three point one point one I really want three point two point ten and that's",
    "start": "545000",
    "end": "550820"
  },
  {
    "text": "where the analysis kicks in analyze and it says it should be the version 2.3 point two point ten and there should be",
    "start": "550820",
    "end": "557660"
  },
  {
    "text": "three members so now we're gonna act we're gonna bring up that missing node and we're gonna also upgrade so this",
    "start": "557660",
    "end": "570620"
  },
  {
    "start": "569000",
    "end": "628000"
  },
  {
    "text": "graphic here it was more about me wanting to talk about stateful sets but it works well with operators as well",
    "start": "570620",
    "end": "576440"
  },
  {
    "text": "this is this is an example Anthony a did of a simple MySQL replication and what it utilizes is you have a simple pod",
    "start": "576440",
    "end": "583160"
  },
  {
    "text": "with two init containers the first one is in at MySQL it sets up the configuration file for MySQL whether",
    "start": "583160",
    "end": "590060"
  },
  {
    "text": "it's a master or slave and then there's clone MySQL what it does is it receives a backup from the extra backup if it's a",
    "start": "590060",
    "end": "597110"
  },
  {
    "text": "master it doesn't do that and it does this based off of it being ordinal number zero and then there are the app",
    "start": "597110",
    "end": "602510"
  },
  {
    "text": "containers which - ql obviously and then there's an extra backup container extra",
    "start": "602510",
    "end": "607640"
  },
  {
    "text": "backup and what it does is once mysql is up and running as it starts a backup so that the next subsequent node that's",
    "start": "607640",
    "end": "613310"
  },
  {
    "text": "running can receive the back up through the init container and why do i have",
    "start": "613310",
    "end": "618649"
  },
  {
    "text": "this up here well there's some complexity to this and this is the kind of thing that you would put into your",
    "start": "618649",
    "end": "623990"
  },
  {
    "text": "operator and that's what's really cool about operators so a MySQL operator we",
    "start": "623990",
    "end": "632630"
  },
  {
    "start": "628000",
    "end": "680000"
  },
  {
    "text": "have arrived at this point I always wanted to do this as one of these things that I thought oh I'd be great to do",
    "start": "632630",
    "end": "637880"
  },
  {
    "text": "this well I happen to work at Oracle now and we have a group in bristl who's developed this and it's scheduled for",
    "start": "637880",
    "end": "644209"
  },
  {
    "text": "release early 2018 you can deploy a highly available clustered - ql instance",
    "start": "644209",
    "end": "649699"
  },
  {
    "text": "unto kubernetes with a single command it watches the API server for custom resource definitions related to MySQL",
    "start": "649699",
    "end": "656870"
  },
  {
    "text": "MySQL cluster - cue all backup backup and restore are made simple with a MySQL",
    "start": "656870",
    "end": "663019"
  },
  {
    "text": "backup resource utilizes persistent volumes persistent volume claims",
    "start": "663019",
    "end": "668379"
  },
  {
    "text": "under the hood it utilizes group replication and you can have automated",
    "start": "668379",
    "end": "673519"
  },
  {
    "text": "backup to restore to from different object storage scheduled and on-demand",
    "start": "673519",
    "end": "680649"
  },
  {
    "start": "680000",
    "end": "717000"
  },
  {
    "text": "so MySQL operator some of the features I've already mentioned some of them but I this is a nice graphic you can see the",
    "start": "680649",
    "end": "686899"
  },
  {
    "text": "operator here it's doing all of the tasks with the MySQL cluster you would normally do as an operator and the",
    "start": "686899",
    "end": "693139"
  },
  {
    "text": "kubernetes api is through custom resource definitions has it run those",
    "start": "693139",
    "end": "698449"
  },
  {
    "text": "things it provides configuration for your mysql cluster with simple kubernetes objects like secrets and",
    "start": "698449",
    "end": "705529"
  },
  {
    "text": "config maps and backups you can define what kind of backups you want what the policies are to make sure your data is",
    "start": "705529",
    "end": "712369"
  },
  {
    "text": "always protected on-demand or scheduled as I mentioned here's an example of",
    "start": "712369",
    "end": "721149"
  },
  {
    "start": "717000",
    "end": "794000"
  },
  {
    "text": "trying to see where we are on time so here's an example of creating a cluster",
    "start": "721149",
    "end": "726800"
  },
  {
    "text": "we did we create a we define our persistent volume and it's file here and",
    "start": "726800",
    "end": "731980"
  },
  {
    "text": "then we have the MySQL cluster that we define we say we want three of them we",
    "start": "731980",
    "end": "737149"
  },
  {
    "text": "want to give it a name of example MySQL cluster with volume we specify M claim",
    "start": "737149",
    "end": "744649"
  },
  {
    "text": "template I love these these are great they just happen to work and you say",
    "start": "744649",
    "end": "750199"
  },
  {
    "text": "what storage class name you want and you submit it and it creates a cluster and",
    "start": "750199",
    "end": "755389"
  },
  {
    "text": "then with a backup same simple situation you have your cluster - we build - test",
    "start": "755389",
    "end": "761209"
  },
  {
    "text": "cluster and then you specify that's what cluster you want to backup you say what your credentials are OCI is our object",
    "start": "761209",
    "end": "769519"
  },
  {
    "text": "storage you know just like s3 or and you specified that that's what you want to",
    "start": "769519",
    "end": "774949"
  },
  {
    "text": "backup and it backs it up and the commands are you know you use cube CTL",
    "start": "774949",
    "end": "780499"
  },
  {
    "text": "to create it both your backup and your cluster you can also do cube CTL get",
    "start": "780499",
    "end": "786230"
  },
  {
    "text": "MySQL backups to see what backups you have and then you can get a specific backup you can also describe back if I",
    "start": "786230",
    "end": "792319"
  },
  {
    "text": "don't have that in there but you'll see that in the example so now we're going to run a demo drumroll",
    "start": "792319",
    "end": "800410"
  },
  {
    "start": "794000",
    "end": "1128000"
  },
  {
    "text": "so the initial state nothing is running oh no I can't that's the way it was",
    "start": "805010",
    "end": "815550"
  },
  {
    "text": "recorded and I didn't do that particular recording I getting as big as possible",
    "start": "815550",
    "end": "821390"
  },
  {
    "text": "pardon come on plus plus okay nope",
    "start": "821390",
    "end": "830570"
  },
  {
    "text": "okay so we've created the operator and now I gotta focus on this so now we're",
    "start": "830570",
    "end": "840300"
  },
  {
    "text": "gonna tail the logs we should see that we have the operator running we see that",
    "start": "840300",
    "end": "850200"
  },
  {
    "text": "it's running replica set so at this point we can now you utilize the",
    "start": "850200",
    "end": "856170"
  },
  {
    "text": "operator we're gonna tell the logs of the operator and see what's going on it's kind of I like the way this was",
    "start": "856170",
    "end": "862950"
  },
  {
    "text": "recorded that you can see this now we're going to go into the cluster manifest",
    "start": "862950",
    "end": "869760"
  },
  {
    "text": "file we're going to do three replicas we're gonna call it MySQL test cluster",
    "start": "869760",
    "end": "875420"
  },
  {
    "text": "cube CTL create dash F the name of that",
    "start": "875420",
    "end": "880550"
  },
  {
    "text": "and at that point you can see the logs that it's starting to bring up the",
    "start": "880790",
    "end": "886380"
  },
  {
    "text": "cluster now we're going to watch the pods as they come up observe each of the nodes coming up we",
    "start": "886380",
    "end": "894030"
  },
  {
    "text": "also go in the cube - and watch this as well so we see the first one starting to come up",
    "start": "894030",
    "end": "900920"
  },
  {
    "text": "and also we have a secret in here that's been created this is with how the",
    "start": "904290",
    "end": "910049"
  },
  {
    "text": "database you'll talk to the database once it's up and running we now see that",
    "start": "910049",
    "end": "916410"
  },
  {
    "text": "the first one in the second one are now running you can see the messages the",
    "start": "916410",
    "end": "924989"
  },
  {
    "text": "third one is now starting",
    "start": "924989",
    "end": "928309"
  },
  {
    "text": "you see inside of cube - that is it's almost up the third node is up so at",
    "start": "932359",
    "end": "942720"
  },
  {
    "text": "this point we should have a running cluster so now we're going to go into",
    "start": "942720",
    "end": "949410"
  },
  {
    "text": "the first node and we're going to connect to the database we're going to",
    "start": "949410",
    "end": "957059"
  },
  {
    "text": "find out what the database passed where it is from the environment",
    "start": "957059",
    "end": "961249"
  },
  {
    "text": "we're gonna use the MySQL I know DB cluster made a data schema and then",
    "start": "965740",
    "end": "973480"
  },
  {
    "text": "we're gonna find out what the group membership is from hosts and there we",
    "start": "973480",
    "end": "979690"
  },
  {
    "text": "have a three node cluster that was easy wasn't it so the next thing I'm going to",
    "start": "979690",
    "end": "986320"
  },
  {
    "text": "show you is a backup this is even easier so initially we have nothing in our",
    "start": "986320",
    "end": "993370"
  },
  {
    "text": "object store we have a running cluster",
    "start": "993370",
    "end": "999210"
  },
  {
    "text": "now we have some credentials in a bucket name we're gonna look at the backup",
    "start": "999870",
    "end": "1009030"
  },
  {
    "text": "manifest make sure it's what we want to backup",
    "start": "1009030",
    "end": "1014269"
  },
  {
    "text": "we're going well first thing we're gonna do is we're gonna actually put some data in there and to make sure that you know",
    "start": "1023830",
    "end": "1028870"
  },
  {
    "text": "we have some kind of database to refer to when we back things up create a",
    "start": "1028870",
    "end": "1035319"
  },
  {
    "text": "simple table put a row in there",
    "start": "1035319",
    "end": "1039178"
  },
  {
    "text": "just pretend it has billions of records in there",
    "start": "1043990",
    "end": "1050730"
  },
  {
    "text": "we specifying which database we want to backup and the credentials now we submit that backup to create that backup I",
    "start": "1073770",
    "end": "1082890"
  },
  {
    "text": "should say backup is a scheduled backup",
    "start": "1082890",
    "end": "1088289"
  },
  {
    "text": "created we have a list of backups now this backup is a MySQL dump at this",
    "start": "1088289",
    "end": "1094890"
  },
  {
    "text": "time but we're adding functionality for enterprise backup and extra backup",
    "start": "1094890",
    "end": "1099919"
  },
  {
    "text": "that'll be configurable now we're gonna",
    "start": "1099919",
    "end": "1106919"
  },
  {
    "text": "describe the backup and we see back up",
    "start": "1106919",
    "end": "1112350"
  },
  {
    "text": "that file dot tar.gz and we should see it in our object store yes it's there",
    "start": "1112350",
    "end": "1122970"
  },
  {
    "text": "isn't that great that's exactly what we want to see for ease of backups so now",
    "start": "1122970",
    "end": "1130529"
  },
  {
    "start": "1128000",
    "end": "1218000"
  },
  {
    "text": "we're gonna talk about the test the test is charting on a silver platter I know it's not a silver platter but I love the",
    "start": "1130529",
    "end": "1136620"
  },
  {
    "text": "album I doesn't have anything to do with my age so it's a database solution for",
    "start": "1136620",
    "end": "1142950"
  },
  {
    "text": "deploying and scaling and managing large clusters of MySQL instances it has built-in sharding it's been YouTube's",
    "start": "1142950",
    "end": "1150600"
  },
  {
    "text": "database store since 2011 it's what slack uses it looks like a",
    "start": "1150600",
    "end": "1156960"
  },
  {
    "text": "MySQL database in terms of usage but underneath it can be just sharted in any",
    "start": "1156960",
    "end": "1162210"
  },
  {
    "text": "way that you want it to be it's cloud ready the cloud is coming is sugu would",
    "start": "1162210",
    "end": "1167610"
  },
  {
    "text": "say it helps you scale with transparent dynamic sharding and the ability to",
    "start": "1167610",
    "end": "1173460"
  },
  {
    "text": "continue charting in or out depending on what you want to do it also has cluster management tools for backups shards and",
    "start": "1173460",
    "end": "1180690"
  },
  {
    "text": "schema management it talks MySQL client protocol G RPC and",
    "start": "1180690",
    "end": "1186840"
  },
  {
    "text": "G RPC it provides connection pooling these are go connection pool that talks",
    "start": "1186840",
    "end": "1192870"
  },
  {
    "text": "to a small MySQL connection pool it protects MySQL with MySQL with query deduping rewriting sanitization putting",
    "start": "1192870",
    "end": "1200970"
  },
  {
    "text": "limits on unbounded causes and a number of other things there are monitoring tools that are",
    "start": "1200970",
    "end": "1206490"
  },
  {
    "text": "built into all the the test binaries if you want to migrate your MySQL application to the cloud the",
    "start": "1206490",
    "end": "1212669"
  },
  {
    "text": "tests is an excellent vehicle to use so",
    "start": "1212669",
    "end": "1218940"
  },
  {
    "start": "1218000",
    "end": "1313000"
  },
  {
    "text": "here are the components of the test we have first of all we the theory you talk",
    "start": "1218940",
    "end": "1224070"
  },
  {
    "text": "your application talks to VT gate is a lightweight proxy used for routing queries to the appropriate VT tablet and",
    "start": "1224070",
    "end": "1231210"
  },
  {
    "text": "it also reassembles the result sets from the different shards so VT gate then",
    "start": "1231210",
    "end": "1238080"
  },
  {
    "text": "talks a V T tablet VT tablet pause are comprised of VT tablet itself which itself is a proxy in mysql VT tablet is",
    "start": "1238080",
    "end": "1246210"
  },
  {
    "text": "a proxy that does all of that query sanitization and you know blacklisting",
    "start": "1246210",
    "end": "1252740"
  },
  {
    "text": "deduping putting but putting a limit on unbounded clock where it clauses then",
    "start": "1252740",
    "end": "1260639"
  },
  {
    "text": "next we have the we have the topology server this topology server is",
    "start": "1260639",
    "end": "1266010"
  },
  {
    "text": "essentially a service all ends in front of SED and all of the data the coordination data the key space keep key",
    "start": "1266010",
    "end": "1273299"
  },
  {
    "text": "space graph used to determine where the shards which shards use use it's also used for initial discovery of what's",
    "start": "1273299",
    "end": "1280860"
  },
  {
    "text": "there and then you have VT c TLD that",
    "start": "1280860",
    "end": "1286289"
  },
  {
    "text": "provides a web interface and it does all the cluster management work and then",
    "start": "1286289",
    "end": "1291990"
  },
  {
    "text": "another piece in here that i added that's not on the graphic on the website is Orkut Orchestrator Orchestrator pertains to repairing and it talks a VT",
    "start": "1291990",
    "end": "1299519"
  },
  {
    "text": "c TLD and that's what it through that it does the repair in ting when when that",
    "start": "1299519",
    "end": "1305580"
  },
  {
    "text": "needs to occur and then there's V T CTL that's the command line for interacting with the tests through the through the",
    "start": "1305580",
    "end": "1311399"
  },
  {
    "text": "topology server so charting a shard consists of a set as I mentioned a",
    "start": "1311399",
    "end": "1317700"
  },
  {
    "text": "single master that handles writes and one or more slaves a handle reads you can split horizontally you can splitter",
    "start": "1317700",
    "end": "1324090"
  },
  {
    "text": "merge shards in a sharded key space you can also do vertical sharding moving tables from an uncharted key space to a",
    "start": "1324090",
    "end": "1330059"
  },
  {
    "text": "different key space you can do restarting split merge add new cells and",
    "start": "1330059",
    "end": "1335159"
  },
  {
    "text": "replicas it does this through filtered replication using GT ID",
    "start": "1335159",
    "end": "1340920"
  },
  {
    "text": "which is the key ingredient to ensuring that your data goes where you expect to go there's also the concept of this V",
    "start": "1340920",
    "end": "1348240"
  },
  {
    "text": "schema this is a Vitesse schema this is essentially the schema for how you shard think of it that that way it ties",
    "start": "1348240",
    "end": "1354720"
  },
  {
    "text": "together all the databases simply put it contains information needed to make the",
    "start": "1354720",
    "end": "1360390"
  },
  {
    "text": "tests look like a single database server and then there's V index this is a cross shard index that provides a way to map",
    "start": "1360390",
    "end": "1368250"
  },
  {
    "text": "what in your table what it would call them to your key space ID and I'll show",
    "start": "1368250",
    "end": "1374910"
  },
  {
    "text": "you an example of this so right here we have you know on the Left we have our regular user table schema definition and",
    "start": "1374910",
    "end": "1383220"
  },
  {
    "start": "1375000",
    "end": "1409000"
  },
  {
    "text": "then on the right we have our savvy schema we list what V indexes we have",
    "start": "1383220",
    "end": "1388800"
  },
  {
    "text": "the first one is called hash and it's of type hash then we'd say what tables the",
    "start": "1388800",
    "end": "1394470"
  },
  {
    "text": "user and we say what column we're going to shard by and what the V index name is",
    "start": "1394470",
    "end": "1401550"
  },
  {
    "text": "and it happens to be hash as we just saw up there and this is what you submit to",
    "start": "1401550",
    "end": "1406650"
  },
  {
    "text": "Vitesse and that's how the test knows how to shard your data there's also the concept of repairing we can change or",
    "start": "1406650",
    "end": "1414390"
  },
  {
    "start": "1409000",
    "end": "1443000"
  },
  {
    "text": "shards master tablet to another host we can change a slave tablet to a different master as I mentioned GT IDs the magic",
    "start": "1414390",
    "end": "1422100"
  },
  {
    "text": "in all of this there are different types of parenting there's a planned and emergency it kind of speaks for itself",
    "start": "1422100",
    "end": "1429090"
  },
  {
    "text": "as to what it is it also provides recharging you can split merge or add",
    "start": "1429090",
    "end": "1434160"
  },
  {
    "text": "new cells or replicas and I I've said this several times but filtered replication is the key to this with the",
    "start": "1434160",
    "end": "1440820"
  },
  {
    "text": "GT ID backups backups are really simple",
    "start": "1440820",
    "end": "1445980"
  },
  {
    "start": "1443000",
    "end": "1489000"
  },
  {
    "text": "with Vitesse and their number of plug-ins for different types of objects store or NFS SEF cluster FS I believe",
    "start": "1445980",
    "end": "1454490"
  },
  {
    "text": "and that the thing to know is VT tablet has to have access to where you're backing up to and use VT CTL to run",
    "start": "1454490",
    "end": "1462300"
  },
  {
    "text": "these backup commands and when a backup happens - QL instances stopped and it copies the",
    "start": "1462300",
    "end": "1468330"
  },
  {
    "text": "data that's how it does it and this works just fine because we have the master does still continue rating -",
    "start": "1468330",
    "end": "1474390"
  },
  {
    "text": "we also have restore the VT tablet is started with the arguments of where the the data is in restorers made and then",
    "start": "1474390",
    "end": "1483000"
  },
  {
    "text": "here's an example of some of the commands you can look at in your spare time when you look at my slides so now",
    "start": "1483000",
    "end": "1490260"
  },
  {
    "start": "1489000",
    "end": "1524000"
  },
  {
    "text": "we get to the fun part we're gonna do a demo and what we're gonna do here is we're going to create two shards we're",
    "start": "1490260",
    "end": "1495930"
  },
  {
    "text": "gonna load a database schema and V schema scale one shard from two replicas to three then we're gonna delete the",
    "start": "1495930",
    "end": "1502650"
  },
  {
    "text": "stateful set we're gonna pull the carpet from the rug from under its feet and then delete the master pod and then see",
    "start": "1502650",
    "end": "1507960"
  },
  {
    "text": "the tests do some magic of repair in ting this demo is made possible it's a",
    "start": "1507960",
    "end": "1514470"
  },
  {
    "text": "demo by Anthony a you've heard his wonderful talk this morning's keynote and this is the where you can go play",
    "start": "1514470",
    "end": "1521880"
  },
  {
    "text": "with it yourself so now what we're going",
    "start": "1521880",
    "end": "1530520"
  },
  {
    "start": "1524000",
    "end": "1908000"
  },
  {
    "text": "to do to run the test is we're going to stall the helm chart there should be",
    "start": "1530520",
    "end": "1538440"
  },
  {
    "text": "nothing here with Vth status or vtc TLD helm chart is installed so once this is",
    "start": "1538440",
    "end": "1546390"
  },
  {
    "text": "installed we should start being able to look at our stateful set and then see",
    "start": "1546390",
    "end": "1551400"
  },
  {
    "text": "what pods are coming up the zone one - main those are the two shards should",
    "start": "1551400",
    "end": "1557970"
  },
  {
    "text": "watch them come up there'll be some errors this is a bug I won't go into this this is a known issue it's nothing",
    "start": "1557970",
    "end": "1564540"
  },
  {
    "text": "to worry about",
    "start": "1564540",
    "end": "1566900"
  },
  {
    "text": "so now we're gonna watch things come up",
    "start": "1573120",
    "end": "1577490"
  },
  {
    "text": "the initial state is there's no replication running we have not set that up things are still coming up as you can",
    "start": "1579260",
    "end": "1587640"
  },
  {
    "text": "see in cube - you see the load going up",
    "start": "1587640",
    "end": "1596940"
  },
  {
    "text": "the graphs are showing things happening so now we're going to initialize the",
    "start": "1596940",
    "end": "1602640"
  },
  {
    "text": "shards we initialize both shards we're going to apply a V schema we're going to apply a regular schema and then we're",
    "start": "1602640",
    "end": "1607920"
  },
  {
    "text": "gonna back up both so now you'll see",
    "start": "1607920",
    "end": "1616370"
  },
  {
    "text": "replication get started and a master in a replica setup you can see here it's",
    "start": "1616370",
    "end": "1621720"
  },
  {
    "text": "already happened with the - ad shard and now with the other shard it's coming up",
    "start": "1621720",
    "end": "1627870"
  },
  {
    "text": "as well both shards should be ready at this point we won't see any traffic on",
    "start": "1627870",
    "end": "1634590"
  },
  {
    "text": "it yet we're not running anything against it that's going to change soon no traffic",
    "start": "1634590",
    "end": "1639860"
  },
  {
    "text": "it's nice to have graphs there you won't see anything in the query log either there's a nice query log UI there that's",
    "start": "1639860",
    "end": "1646920"
  },
  {
    "text": "built in to vtc BTC ltd TLD I get that messed up on the tongue-twister here so",
    "start": "1646920",
    "end": "1654030"
  },
  {
    "text": "now we're reloading the script is loaded we now have a master in a replica we're",
    "start": "1654030",
    "end": "1661590"
  },
  {
    "text": "doing a backup right now and it's not serving while we do that and watch the",
    "start": "1661590",
    "end": "1667410"
  },
  {
    "text": "logs a little bit to see what's going on",
    "start": "1667410",
    "end": "1670970"
  },
  {
    "text": "the backups almost complete it's the statuses backup right now that",
    "start": "1676130",
    "end": "1683310"
  },
  {
    "text": "means it's not serving now the backups complete and it is serving it's now",
    "start": "1683310",
    "end": "1693150"
  },
  {
    "text": "ready to use so now the end of script is",
    "start": "1693150",
    "end": "1701010"
  },
  {
    "text": "completed and we're gonna run a load test against it this is really fun to watch because you get to see the graphs",
    "start": "1701010",
    "end": "1707659"
  },
  {
    "text": "load test is now running we now see",
    "start": "1714230",
    "end": "1720679"
  },
  {
    "text": "traffic showing up against both shards",
    "start": "1720679",
    "end": "1724419"
  },
  {
    "text": "we're gonna look at the master traffic and see what what's going on there we see a different various statements",
    "start": "1730179",
    "end": "1736989"
  },
  {
    "text": "running against the database write statements",
    "start": "1736989",
    "end": "1741059"
  },
  {
    "text": "also gonna look that you know we never did do this when we were initializing it but we're gonna look at that the schema",
    "start": "1746830",
    "end": "1752200"
  },
  {
    "text": "is actually there we're gonna look at the query log query log UI you see all",
    "start": "1752200",
    "end": "1757840"
  },
  {
    "text": "the different queries running against the the master at this point all right queries write statements I",
    "start": "1757840",
    "end": "1764740"
  },
  {
    "text": "mean you see a color coded the commits",
    "start": "1764740",
    "end": "1770350"
  },
  {
    "text": "that's really nice we're gonna look at the traffic on the slave all selects as you would expect look at the query log",
    "start": "1770350",
    "end": "1780580"
  },
  {
    "text": "all selects now we're gonna see how many stateful sets we have we're going to",
    "start": "1780580",
    "end": "1788620"
  },
  {
    "text": "scale this one of the shards a DX shard to three we're gonna watch the new replicas come up it's now scaled to",
    "start": "1788620",
    "end": "1800650"
  },
  {
    "text": "three we're gonna look in the UI it now",
    "start": "1800650",
    "end": "1807760"
  },
  {
    "text": "has three replicas they should be ready",
    "start": "1807760",
    "end": "1814170"
  },
  {
    "text": "right now it's doing a restore and the",
    "start": "1817460",
    "end": "1823400"
  },
  {
    "text": "restore is getting completed and now it should be serving traffic and the load test was running so it immediately",
    "start": "1823400",
    "end": "1829310"
  },
  {
    "text": "starts serving traffic and you see in",
    "start": "1829310",
    "end": "1837110"
  },
  {
    "text": "cube - that it's becoming even more busy with the load test running",
    "start": "1837110",
    "end": "1842890"
  },
  {
    "text": "so now we have deleted the stateful set and we have deleted the master so this",
    "start": "1853940",
    "end": "1860720"
  },
  {
    "text": "is where where we get to see the test do some really interesting things here we",
    "start": "1860720",
    "end": "1866930"
  },
  {
    "text": "confirm that the master has been terminated now we're gonna see promotion and now",
    "start": "1866930",
    "end": "1876800"
  },
  {
    "text": "what was once the replica is now the master all without pain now we're going",
    "start": "1876800",
    "end": "1884000"
  },
  {
    "text": "to tear it all down because the demo is gonna be over soon",
    "start": "1884000",
    "end": "1888700"
  },
  {
    "text": "so that's the end of the Vitesse demo what time is it 421 so we have about",
    "start": "1896090",
    "end": "1901720"
  },
  {
    "text": "what is it about four minutes for questions I you know I I have these",
    "start": "1901720",
    "end": "1907220"
  },
  {
    "text": "extra slides please when you look at these slides please look at collect",
    "start": "1907220",
    "end": "1912680"
  },
  {
    "start": "1908000",
    "end": "1923000"
  },
  {
    "text": "beats this is a great thing I wanted to talk about was a friend Vijay Samuel who works for eBay who's written this I",
    "start": "1912680",
    "end": "1919490"
  },
  {
    "text": "wanted to cover it because I wanted to talk more about monitoring and I also have some other MySQL installation",
    "start": "1919490",
    "end": "1925460"
  },
  {
    "text": "examples because I wanted to do simple I wanted to work up from simple to more complex and so I have these in here I",
    "start": "1925460",
    "end": "1930800"
  },
  {
    "text": "have demos recorded for them and I'm be glad to take questions now or later oh",
    "start": "1930800",
    "end": "1938270"
  },
  {
    "start": "1936000",
    "end": "1958000"
  },
  {
    "text": "there's a thank you thank you Anthony a extremely helpful sugu the",
    "start": "1938270",
    "end": "1943970"
  },
  {
    "text": "team I work for it dine o Wayne Lewis who wrote work with his team to write",
    "start": "1943970",
    "end": "1949340"
  },
  {
    "text": "the operator Steve Lerner who's in the audience several 9s who has a great Galera example but anyway questions yes",
    "start": "1949340",
    "end": "1962140"
  },
  {
    "start": "1958000",
    "end": "2083000"
  },
  {
    "text": "unfortunately I don't have much experience and that a lot of what I've done has been kind of I've worked with a",
    "start": "1978340",
    "end": "1983860"
  },
  {
    "text": "lot of teams I worked at HP in the advanced technology group and we did a lot of prototyping and right now I'm",
    "start": "1983860",
    "end": "1990190"
  },
  {
    "text": "kind of in the same kind of role so I don't have experience in that but you know there might be people in the",
    "start": "1990190",
    "end": "1996520"
  },
  {
    "text": "audience who are more than welcome to chime in on that having run it I mean whoever might be",
    "start": "1996520",
    "end": "2002340"
  },
  {
    "text": "running the tests in the audience Anthony a or anybody else but well we'll take another question since I I'm sorry",
    "start": "2002340",
    "end": "2009120"
  },
  {
    "text": "I don't know the answer to that yes well",
    "start": "2009120",
    "end": "2019020"
  },
  {
    "text": "it's group replications so it's not a simple master-slave replication it's a cluster yes yeah the Ivan used a lot of",
    "start": "2019020",
    "end": "2026790"
  },
  {
    "text": "group replication but it really is it you know it's not that simple type of a",
    "start": "2026790",
    "end": "2032700"
  },
  {
    "text": "master-slave replication yes you can you",
    "start": "2032700",
    "end": "2038220"
  },
  {
    "text": "know there's some of the same issues you have with Galera where you know you have to think about you know if you're gonna have cross node locks you know that",
    "start": "2038220",
    "end": "2044100"
  },
  {
    "text": "situation so you know pick one of them out - right - you know yeah",
    "start": "2044100",
    "end": "2052429"
  },
  {
    "text": "I don't know the person sitting next to you can answer that much better than I",
    "start": "2055169",
    "end": "2060388"
  },
  {
    "text": "can probably he liked the operator video",
    "start": "2060389",
    "end": "2066388"
  },
  {
    "text": "when I showed it to him the first time his talk was really cool this morning",
    "start": "2066389",
    "end": "2072799"
  },
  {
    "text": "any other questions thank you very much for coming I really appreciate it",
    "start": "2072799",
    "end": "2079520"
  },
  {
    "text": "[Applause]",
    "start": "2079520",
    "end": "2085158"
  }
]