[
  {
    "text": "okay we're going to get started hello everyone thank you very much for taking",
    "start": "5200",
    "end": "10240"
  },
  {
    "text": "time out of your day for joining us for today's cncf webinar security in the world of service meshes",
    "start": "10240",
    "end": "17199"
  },
  {
    "text": "i'm jerry fallon and i will be moderating today's webinar we would like to welcome our presenter today john a",
    "start": "17199",
    "end": "23600"
  },
  {
    "text": "joyce principal engineer at cisco systems just a few housekeeping items before we",
    "start": "23600",
    "end": "29279"
  },
  {
    "text": "get started during the webinar you are not able to talk as an attendee there is a q a box at the bottom of your",
    "start": "29279",
    "end": "35600"
  },
  {
    "text": "screen so please feel free to drop your questions in there and we'll get to as many as we can at the end this is an official webinar the cncf and",
    "start": "35600",
    "end": "42480"
  },
  {
    "text": "as such is subject to the cncf code of conduct so please do not add anything to the chatter questions that are in violation",
    "start": "42480",
    "end": "48719"
  },
  {
    "text": "of the code of conduct please be respectful of your fellow participants and presenters",
    "start": "48719",
    "end": "54079"
  },
  {
    "text": "please also note that the recording and slides will be posted later today to the cncf webinar page at cncf.ios webinars and with that i",
    "start": "54079",
    "end": "61680"
  },
  {
    "text": "will hand it over to john for today's presentation hi everybody um hope everybody is having",
    "start": "61680",
    "end": "68400"
  },
  {
    "text": "a good day as jerry said my name is john joyce i've been at cisco",
    "start": "68400",
    "end": "73840"
  },
  {
    "text": "for quite a while many many years um in about the last five or six or so i've been working predominantly in",
    "start": "73840",
    "end": "80560"
  },
  {
    "text": "cloud related businesses um a few years on openstack a few years on istio in the last couple",
    "start": "80560",
    "end": "87439"
  },
  {
    "text": "of years i've been spending a bit of time on network service mesh and some other related",
    "start": "87439",
    "end": "92799"
  },
  {
    "text": "projects that i might cover a little bit today so let's with that let me get started",
    "start": "92799",
    "end": "99520"
  },
  {
    "text": "okay here's the agenda so uh the part a little bit of the agenda is going to be more educational um talking about",
    "start": "99520",
    "end": "107920"
  },
  {
    "text": "how mesh security lines up what kind of things are happening in the mesh security world what kind of",
    "start": "107920",
    "end": "112960"
  },
  {
    "text": "features and functions are being used but then we'll move on to some current implementations a little bit on",
    "start": "112960",
    "end": "119360"
  },
  {
    "text": "some of the stuff that is happening um and some of the things we are doing also within those communities to promote",
    "start": "119360",
    "end": "126560"
  },
  {
    "text": "different choices and architectures so the purpose is just the abstract",
    "start": "126560",
    "end": "133440"
  },
  {
    "text": "you've all seen this so i'm not really going to spend any time on it it'll be in slides if you want to look",
    "start": "133440",
    "end": "138560"
  },
  {
    "text": "at it but it's pretty straightforward it's what got you here so let's talk a little bit",
    "start": "138560",
    "end": "144319"
  },
  {
    "text": "about um uh what what security in the service mesh means or what are the key things so let's start",
    "start": "144319",
    "end": "150640"
  },
  {
    "text": "with some definitions so the first the most important thing is we need identity so we need some way of",
    "start": "150640",
    "end": "156800"
  },
  {
    "text": "deciding a thing person process module whatever",
    "start": "156800",
    "end": "162000"
  },
  {
    "text": "you want to call it is who they are and a way to track",
    "start": "162000",
    "end": "167680"
  },
  {
    "text": "and certify that that uh that that thing that element is what it is so",
    "start": "167680",
    "end": "173599"
  },
  {
    "text": "that's that's the first and most important thing that uh uh that kind of triggers all the rest of",
    "start": "173599",
    "end": "179920"
  },
  {
    "text": "this talk so uh once we have um identity then we want",
    "start": "179920",
    "end": "185440"
  },
  {
    "text": "to do something that's often called offend in in this environment or authentication um",
    "start": "185440",
    "end": "192319"
  },
  {
    "text": "it's the verification of the identity we want to make sure that who we're talking to is who they",
    "start": "192319",
    "end": "199280"
  },
  {
    "text": "uh say they are and uh when we start talking about service meshes there's a couple different",
    "start": "199280",
    "end": "204319"
  },
  {
    "text": "forms of that authentication there might there's probably even more that i left here but these are the two ones that i'm",
    "start": "204319",
    "end": "209680"
  },
  {
    "text": "going to really cover a little bit in this talk one is what we might call a transport or peer",
    "start": "209680",
    "end": "215519"
  },
  {
    "text": "authentication and it's sort of the uh the immediate uh",
    "start": "215519",
    "end": "220879"
  },
  {
    "text": "authenticating your immediate peer okay even though the actual flow or request may be",
    "start": "220879",
    "end": "227920"
  },
  {
    "text": "going through intermediaries and of course in a service mesh you're typically going through proxies so you usually have lots of",
    "start": "227920",
    "end": "234080"
  },
  {
    "text": "intermediaries between the uh the ultimate beginning and the ultimate end of",
    "start": "234080",
    "end": "240159"
  },
  {
    "text": "a flow or request there's also something called origin or request off there's a couple different",
    "start": "240159",
    "end": "246159"
  },
  {
    "text": "names for this you might see out there besides even the ones i list here and this is actually trying to make sure",
    "start": "246159",
    "end": "252560"
  },
  {
    "text": "that both the sender the the initial sender and the final receiver have some ability to authenticate each",
    "start": "252560",
    "end": "259840"
  },
  {
    "text": "other or at least authenticate one side of it then we talk a little bit about authorization",
    "start": "259840",
    "end": "265759"
  },
  {
    "text": "which is uh sort of now that we know an identity or assuming we know an identity",
    "start": "265759",
    "end": "270960"
  },
  {
    "text": "you might want to grant different privileges or access levels to that identity so it's a little bit",
    "start": "270960",
    "end": "277600"
  },
  {
    "text": "the next level of choice and it gives you a lot more granularity and control",
    "start": "277600",
    "end": "282720"
  },
  {
    "text": "over how you might want to do things um so how do we want to express that identity",
    "start": "282720",
    "end": "288400"
  },
  {
    "text": "well there's two things definitions here certificates which include a a key and an identity",
    "start": "288400",
    "end": "295680"
  },
  {
    "text": "and typically in this space we're dealing with x509 and in that vid we'll talk about this a little bit more it's a spiffy",
    "start": "295680",
    "end": "304080"
  },
  {
    "text": "document identity document transport layer security is the key uh",
    "start": "304160",
    "end": "310960"
  },
  {
    "text": "sort of protocol we'll be using um when we're talking especially when we're talking about pure or transport",
    "start": "310960",
    "end": "316560"
  },
  {
    "text": "authentication so we'll talk about tls quite a bit um and zero trusts you hear that they're",
    "start": "316560",
    "end": "321600"
  },
  {
    "text": "all over the place these days i chose to put this definition here because i thought it was best there",
    "start": "321600",
    "end": "327840"
  },
  {
    "text": "might be others and it's used in marketing all over the place these days but",
    "start": "327840",
    "end": "332960"
  },
  {
    "text": "it's really trying to say hey you don't assume any peer is trusted regardless of who where what kind of",
    "start": "332960",
    "end": "340160"
  },
  {
    "text": "domain scope network uh whatever you know whether it's in front of a",
    "start": "340160",
    "end": "346080"
  },
  {
    "text": "firewall behind a firewall whether it's in a vpn the idea is that you don't trust anybody",
    "start": "346080",
    "end": "352720"
  },
  {
    "text": "and you want to make sure you go through authentication and even authorization steps with everybody you talk to so um",
    "start": "352720",
    "end": "361280"
  },
  {
    "text": "when we talk about service meshes there's a couple tls flavors that um we should talk about um so i've kind",
    "start": "361280",
    "end": "367840"
  },
  {
    "text": "of listed them here mitchell tls is sort of the gold standard that's what",
    "start": "367840",
    "end": "372960"
  },
  {
    "text": "most meshes surface meshes seem to be trying to get to but not all of them are there yet um",
    "start": "372960",
    "end": "379520"
  },
  {
    "text": "then there's also a server-side tls which is uh where the basically the the server",
    "start": "379520",
    "end": "386160"
  },
  {
    "text": "presents a certificate that the client can authenticate but not the other way around and then sometimes there's uh",
    "start": "386160",
    "end": "394080"
  },
  {
    "text": "and some of the meshes support um even client tls where the client presents a certificate and",
    "start": "394080",
    "end": "401039"
  },
  {
    "text": "the server doesn't um uh present its identity so you only do tls um",
    "start": "401039",
    "end": "408560"
  },
  {
    "text": "the encryption is obviously good but not both both sides aren't authenticated from an",
    "start": "408560",
    "end": "414800"
  },
  {
    "text": "identity perspective so a couple of references here just the only real thing i want to say on this",
    "start": "414800",
    "end": "420000"
  },
  {
    "text": "slide other than that you would have it is that i'm going to talk a little bit about network service",
    "start": "420000",
    "end": "425039"
  },
  {
    "text": "mesh and for those people that are very familiar with what i like to call application service mesh like sdo and",
    "start": "425039",
    "end": "430800"
  },
  {
    "text": "linker d network service mesh is different it's not dealing much with layer seven at all",
    "start": "430800",
    "end": "437360"
  },
  {
    "text": "it's uh dealing more with layer three or four um we like to kid ed warnerkey who",
    "start": "437360",
    "end": "444160"
  },
  {
    "text": "who's one of the big promoters from cisco of that technology that he just hijacked the name and he'll agree",
    "start": "444160",
    "end": "449520"
  },
  {
    "text": "so he kind of took advantage of the service mesh sort of pr and kind of used the name to",
    "start": "449520",
    "end": "457360"
  },
  {
    "text": "um but it does represent some of the same mesh concepts of trying to interconnect",
    "start": "457360",
    "end": "463680"
  },
  {
    "text": "things it just does so more like a layer three and four constructs than the layer seven constructs but i'll",
    "start": "463680",
    "end": "469599"
  },
  {
    "text": "talk about that a little bit here later so um well how do we wanna",
    "start": "469599",
    "end": "477120"
  },
  {
    "text": "establish an identity so when we're talking about service meshes we'll talk about workloads um we'll talk about pods",
    "start": "477120",
    "end": "482560"
  },
  {
    "text": "you know those kind of things but we need to establish an identity and i borrowed",
    "start": "482560",
    "end": "488560"
  },
  {
    "text": "this bullet list from uh one of the istio decks uh i'm not sure it's still there it",
    "start": "488560",
    "end": "494879"
  },
  {
    "text": "might be a little uh antiquated at current times but these are the types of identities that are used within service",
    "start": "494879",
    "end": "501919"
  },
  {
    "text": "meshes uh to kind of keyed to a workload so that we can recognize them i'm not",
    "start": "501919",
    "end": "508479"
  },
  {
    "text": "going to list them all here i think many of you should be familiar with people the one thing i do want to point out and we'll talk about this quite a",
    "start": "508479",
    "end": "514640"
  },
  {
    "text": "bit later on is spiffy and spiffy is a cncf project and it's a",
    "start": "514640",
    "end": "522000"
  },
  {
    "text": "specification of how to represent identity and a little bit of how to do some offend",
    "start": "522000",
    "end": "528080"
  },
  {
    "text": "spire is an implementation of that um which is also cncf projects spire is one",
    "start": "528080",
    "end": "533920"
  },
  {
    "text": "implementation of the spiffy specification i'll talk about these a little bit below",
    "start": "533920",
    "end": "540080"
  },
  {
    "text": "but these are really starting to be some of the key cloud native capabilities to establish",
    "start": "540080",
    "end": "547120"
  },
  {
    "text": "an identity and to be able to validate it that identity although it all sometimes",
    "start": "547120",
    "end": "552959"
  },
  {
    "text": "relies on uh some of the above constructs like kubernetes service account as we'll see later",
    "start": "552959",
    "end": "559760"
  },
  {
    "text": "so well um one of the key things we need to do once we have that identity is uh well we",
    "start": "560000",
    "end": "566800"
  },
  {
    "text": "need to get it into a certificate or we need a way to",
    "start": "566800",
    "end": "572000"
  },
  {
    "text": "uh present that identity to a peer so they can authenticate it so this uh",
    "start": "572000",
    "end": "578720"
  },
  {
    "text": "flow here is a common flow that service meshes use a common way that they handle generating",
    "start": "578720",
    "end": "586240"
  },
  {
    "text": "a certificate with an identity so that it can be all authenticated by a",
    "start": "586240",
    "end": "591440"
  },
  {
    "text": "peer so the the private key um is generated by the workload",
    "start": "591440",
    "end": "597200"
  },
  {
    "text": "um but then uh the a signing request is sent to the control plane",
    "start": "597200",
    "end": "602880"
  },
  {
    "text": "so that they can find that um um uh key and then therefore it's uh",
    "start": "602880",
    "end": "609279"
  },
  {
    "text": "authenticatable by appear um and the the control plane can",
    "start": "609279",
    "end": "614320"
  },
  {
    "text": "self-sign it there's a number of choices here the two i mentioned here is a you know self-signed root certificate",
    "start": "614320",
    "end": "619440"
  },
  {
    "text": "or maybe uh the signing is uh comes from an external source like vault",
    "start": "619440",
    "end": "625519"
  },
  {
    "text": "um then the control plane provides the proxy uh that certificate the scope to the",
    "start": "625519",
    "end": "632720"
  },
  {
    "text": "identity of the pod so in other words the proxy uh can only use that certificate uh when",
    "start": "632720",
    "end": "638160"
  },
  {
    "text": "uh connected within the pod of the associated service account um control plan manages the rotation um",
    "start": "638160",
    "end": "644880"
  },
  {
    "text": "and uh sometimes but quite a few meshes uh support optionally or even um perhaps it's the",
    "start": "644880",
    "end": "651519"
  },
  {
    "text": "only option to uh do this less automatically and just mount them uh via files or whatever",
    "start": "651519",
    "end": "659279"
  },
  {
    "text": "into the pods and proxies directly so let's talk a little bit about",
    "start": "659279",
    "end": "667760"
  },
  {
    "text": "the authentication layers so um this is an example of the two sort of",
    "start": "667760",
    "end": "675120"
  },
  {
    "text": "layers that i talked about before where you know we have a proxy um uh workload",
    "start": "675120",
    "end": "681839"
  },
  {
    "text": "a communicating to workload c um it has to go through a bunch of intermediaries maybe",
    "start": "681839",
    "end": "687040"
  },
  {
    "text": "maybe this middle piece here is just ingresses and egresses perhaps but it's",
    "start": "687040",
    "end": "693040"
  },
  {
    "text": "going to go through some intermediaries to get from the ultimate sender",
    "start": "693040",
    "end": "699360"
  },
  {
    "text": "or from the the original sender to the ultimate server receiver so um what we want to do",
    "start": "699360",
    "end": "707120"
  },
  {
    "text": "is we want to make sure that at each hop along the way um we can do some transport",
    "start": "707120",
    "end": "712320"
  },
  {
    "text": "uh often and and if we can do that via mtls that's best provides for encryption of the",
    "start": "712320",
    "end": "719680"
  },
  {
    "text": "communication um uh whether it's tls or mtls but if it's mtos then",
    "start": "719680",
    "end": "725760"
  },
  {
    "text": "not only does it provide the encryption but it also ensures that that each side is sure who they're",
    "start": "725760",
    "end": "731920"
  },
  {
    "text": "talking to and then independent of these hops",
    "start": "731920",
    "end": "737680"
  },
  {
    "text": "there may be a need for the proxies or desire for the proxies to do some",
    "start": "737680",
    "end": "743040"
  },
  {
    "text": "what what i label here original where the the proxy will actually be able to ensure",
    "start": "743040",
    "end": "750320"
  },
  {
    "text": "that um it's not at the initial sender and the initial receiver do some",
    "start": "750320",
    "end": "757120"
  },
  {
    "text": "communication to make sure they are who they expect they are um now in this case i showed the",
    "start": "757120",
    "end": "764320"
  },
  {
    "text": "original off uh being done between the proxies but of course um that that can also be done by",
    "start": "764320",
    "end": "771440"
  },
  {
    "text": "directly by the workloads in some fashion outside in the scope of the surface mesh itself",
    "start": "771440",
    "end": "777680"
  },
  {
    "text": "so continuing on so here here give the",
    "start": "780000",
    "end": "786560"
  },
  {
    "text": "sequence uh i borrowed this sequence from um a site here um that i list",
    "start": "786560",
    "end": "794240"
  },
  {
    "text": "um it it uh it's just uh i mean there's nothing special about this from the respective service meshes",
    "start": "794240",
    "end": "800800"
  },
  {
    "text": "but i wanted to make sure people who are not familiar with mtls understand sort of the sequence but you'll basically have a",
    "start": "800800",
    "end": "807200"
  },
  {
    "text": "a client with some some client certificate of both who they are and and keys and",
    "start": "807200",
    "end": "814399"
  },
  {
    "text": "whatnot associated with its identity the server will have something similar",
    "start": "814399",
    "end": "819600"
  },
  {
    "text": "the client will request to protect the resources then there'll be a handshake back and forth so that they can present",
    "start": "819600",
    "end": "825519"
  },
  {
    "text": "each other's certificates during that handshake each side will use",
    "start": "825519",
    "end": "830959"
  },
  {
    "text": "some kind of method shown here it's a certificate authority some kind of method to ensure",
    "start": "830959",
    "end": "837519"
  },
  {
    "text": "that the the peer that it's talking to is who they",
    "start": "837519",
    "end": "843199"
  },
  {
    "text": "expect they are um if those certificates are all to a common route then",
    "start": "843199",
    "end": "848240"
  },
  {
    "text": "then it's all within the certificate itself is verifiable but there's other techniques too that",
    "start": "848240",
    "end": "854480"
  },
  {
    "text": "are emerging to go beyond just the common root certification but each side does that and then at the",
    "start": "854480",
    "end": "861600"
  },
  {
    "text": "end the the server the client is able to access the",
    "start": "861600",
    "end": "867120"
  },
  {
    "text": "protected resource so let's talk a little bit about um",
    "start": "867120",
    "end": "873920"
  },
  {
    "text": "single-sided tls versus mtls so um so",
    "start": "873920",
    "end": "880240"
  },
  {
    "text": "mutual i said initial tls is a gold standard but it's not the only option",
    "start": "880240",
    "end": "886000"
  },
  {
    "text": "that can be supported there's a couple reasons for this i list them here i won't necessarily go through all the",
    "start": "886000",
    "end": "892480"
  },
  {
    "text": "bullets here so you can read read ahead a little bit but i mean the main idea is that you you don't you can't assume always",
    "start": "892480",
    "end": "899920"
  },
  {
    "text": "that you have full authentication um with both sides of a connection there",
    "start": "899920",
    "end": "905040"
  },
  {
    "text": "are lots of reasons why you may need to communicate with someone that you can't identify um",
    "start": "905040",
    "end": "911440"
  },
  {
    "text": "but but at least knowing that then you have the capability to take different protections or controls or",
    "start": "911440",
    "end": "917440"
  },
  {
    "text": "whatever to help protect um both yourself and any other peers behind you uh within",
    "start": "917440",
    "end": "924160"
  },
  {
    "text": "the same security networking domain whatever you want to say um and and when when you can't do mtls um",
    "start": "924160",
    "end": "932720"
  },
  {
    "text": "or you know some of the messages may not support it then uh single-sided tls is useful because",
    "start": "932720",
    "end": "938399"
  },
  {
    "text": "it'll provide you the encryption as i talked about before there's both the",
    "start": "938399",
    "end": "943440"
  },
  {
    "text": "server side which is very very common um in most of the service meshes out",
    "start": "943440",
    "end": "948639"
  },
  {
    "text": "there client-side support is available in some cases but",
    "start": "948639",
    "end": "954320"
  },
  {
    "text": "many meshes don't support like a client-side certification and of course many of the meshes also",
    "start": "954320",
    "end": "962000"
  },
  {
    "text": "support clear tux but the expectation is the clear text is more for debugging",
    "start": "962000",
    "end": "968160"
  },
  {
    "text": "or you know trialing or other reasons and wouldn't be a production you'd never",
    "start": "968160",
    "end": "975199"
  },
  {
    "text": "used in production scenario",
    "start": "975199",
    "end": "983839"
  },
  {
    "text": "um so uh once a peer has authenticated well the next step is to",
    "start": "984160",
    "end": "990240"
  },
  {
    "text": "decide it's authorized so uh authorization will determine the you know what the defender",
    "start": "990240",
    "end": "997519"
  },
  {
    "text": "and receiver have the necessary privileges or permissions to talk to one another um it could be the sender um",
    "start": "997519",
    "end": "1004639"
  },
  {
    "text": "may be allowed send but the the receiver they will not want to accept from that sender or",
    "start": "1004639",
    "end": "1010079"
  },
  {
    "text": "or um i mean it could be it's a policy uh decision it can be done a",
    "start": "1010079",
    "end": "1015680"
  },
  {
    "text": "number of different ways and very uh can be very uh expressive",
    "start": "1015680",
    "end": "1020880"
  },
  {
    "text": "and expansive as to how you want to uh perform that authorization but but of",
    "start": "1020880",
    "end": "1026400"
  },
  {
    "text": "course for that to make sense you must at first make sure that you have the identity",
    "start": "1026400",
    "end": "1032400"
  },
  {
    "text": "understood and established um otherwise authorization makes very little sense",
    "start": "1032400",
    "end": "1039839"
  },
  {
    "text": "now the one thing i wanted to point out with authorization is it it's fairly common in many service",
    "start": "1040000",
    "end": "1045760"
  },
  {
    "text": "meshes it's offered in some of the apis some of the apis like smi",
    "start": "1045760",
    "end": "1052400"
  },
  {
    "text": "and stuff like that but not necessarily is it available for all the um of all the",
    "start": "1052400",
    "end": "1059360"
  },
  {
    "text": "meshes uh excuse me one second apologize",
    "start": "1059360",
    "end": "1067840"
  },
  {
    "text": "sorry about that and the authorization may be implemented",
    "start": "1069600",
    "end": "1076960"
  },
  {
    "text": "either by the client side proxy or the server-side proxy or both so the",
    "start": "1076960",
    "end": "1084480"
  },
  {
    "text": "the final point that i wanted to make here is when we talk about authorization uh here in a lot of this talk i'm really",
    "start": "1084480",
    "end": "1092000"
  },
  {
    "text": "talking about authorization from the perspective of the service mesh obviously",
    "start": "1092000",
    "end": "1097200"
  },
  {
    "text": "both with authentication and authorization the the client and the service",
    "start": "1097200",
    "end": "1103360"
  },
  {
    "text": "the client and the server above the proxies may be doing all sorts of",
    "start": "1103360",
    "end": "1109679"
  },
  {
    "text": "capabilities and functions of their own in both of these areas so i'm not covering those kind of details at all",
    "start": "1109679",
    "end": "1117200"
  },
  {
    "text": "so um let's see now i'm going to kind of move away from sort of the the um a little bit less of",
    "start": "1121280",
    "end": "1128320"
  },
  {
    "text": "the educational aspects and a little bit more into who's who's really doing these things",
    "start": "1128320",
    "end": "1134080"
  },
  {
    "text": "and how are they doing it so here i i",
    "start": "1134080",
    "end": "1140320"
  },
  {
    "text": "chose to highlight how linker d does its authentication architecture",
    "start": "1140320",
    "end": "1145440"
  },
  {
    "text": "um and it very if follows fairly similar to that process that i described before so the service",
    "start": "1145440",
    "end": "1151360"
  },
  {
    "text": "account from kubernetes provides the sort of uh",
    "start": "1151360",
    "end": "1157280"
  },
  {
    "text": "provides the workload and an identity and linker d the linker d controller will",
    "start": "1157280",
    "end": "1164080"
  },
  {
    "text": "find a certificate um with that based on that identity and have it",
    "start": "1164080",
    "end": "1170720"
  },
  {
    "text": "uh in a way that we can use pki techniques to validate up here can use",
    "start": "1170720",
    "end": "1176480"
  },
  {
    "text": "pki techniques to validate it and it does that uh via some of the",
    "start": "1176480",
    "end": "1182799"
  },
  {
    "text": "certificate signing requests and trust anchors that it's passing over to the proxies",
    "start": "1182799",
    "end": "1188480"
  },
  {
    "text": "and once that's all done then the mtls handshake can happen at the proxy level and the application",
    "start": "1188480",
    "end": "1195360"
  },
  {
    "text": "is unburdened by the need to perform this handshake nor",
    "start": "1195360",
    "end": "1201600"
  },
  {
    "text": "deal with any of the service accounts signing requests trust anchors any of that so it it sort",
    "start": "1201600",
    "end": "1207120"
  },
  {
    "text": "of frees the application to be a lot more streamlined",
    "start": "1207120",
    "end": "1212559"
  },
  {
    "text": "so authorization architecture is sort of much the same there's typically some",
    "start": "1213520",
    "end": "1218720"
  },
  {
    "text": "kind of policy module in the service mesh controller the policy module will push",
    "start": "1218720",
    "end": "1225039"
  },
  {
    "text": "the config over to the sidecar proxies and when it's expressing that config if",
    "start": "1225039",
    "end": "1231600"
  },
  {
    "text": "it's for these links in the middle um it can express the config both",
    "start": "1231600",
    "end": "1239360"
  },
  {
    "text": "in terms of the identity within the mesh that it's well aware of and has",
    "start": "1239360",
    "end": "1244960"
  },
  {
    "text": "established so it's able to express this in a very clean um",
    "start": "1244960",
    "end": "1250000"
  },
  {
    "text": "non-ambiguous way whereas if it's doing authorization",
    "start": "1250000",
    "end": "1258080"
  },
  {
    "text": "on either the ingress side or the egress side of a if a flow uh it's",
    "start": "1258080",
    "end": "1264720"
  },
  {
    "text": "uh it won't have the same uh uh on a big unambiguous set of information so it has",
    "start": "1264720",
    "end": "1271840"
  },
  {
    "text": "to be expressed a little bit differently because the source identity would be from outside the mesh",
    "start": "1271840",
    "end": "1278720"
  },
  {
    "text": "while the destination identity is within the mesh so there's lots of different",
    "start": "1278720",
    "end": "1285600"
  },
  {
    "text": "sort of capabilities and granularity that come in with respect expressing the authorization so uh",
    "start": "1285600",
    "end": "1292320"
  },
  {
    "text": "what i did to try to show this is um um an example",
    "start": "1292320",
    "end": "1299039"
  },
  {
    "text": "from the fmi uh did the smile api if you will",
    "start": "1299039",
    "end": "1305440"
  },
  {
    "text": "um and what what this particular example very very simple example um shows that you're special specifying",
    "start": "1305440",
    "end": "1313039"
  },
  {
    "text": "a destination identity via service count um you're expressing some ports that are",
    "start": "1313039",
    "end": "1319360"
  },
  {
    "text": "will be used that that will be used in in the destination and name spaces then you're uh preventing",
    "start": "1319360",
    "end": "1327440"
  },
  {
    "text": "specifying a match criteria and in this case you're just referring to another api object but um",
    "start": "1327440",
    "end": "1335520"
  },
  {
    "text": "and that api object in this case um http route group can talk about the",
    "start": "1335520",
    "end": "1341919"
  },
  {
    "text": "different http paths or routes within the layer 7 that are being that should",
    "start": "1341919",
    "end": "1348559"
  },
  {
    "text": "be authorized or prevented so for example you could prevent a certain based on a certain url path",
    "start": "1348559",
    "end": "1355679"
  },
  {
    "text": "prevent certain sources from going there while other sources can get there that kind of thing and then",
    "start": "1355679",
    "end": "1363520"
  },
  {
    "text": "uh on the you also have the option of specifying the source identity in this case",
    "start": "1363520",
    "end": "1371039"
  },
  {
    "text": "this example case that i grabbed it's uh letting sources from the uh",
    "start": "1371039",
    "end": "1377440"
  },
  {
    "text": "uh prometheus service account access um the the the",
    "start": "1377440",
    "end": "1384799"
  },
  {
    "text": "destination so um so now let's talk a little bit about",
    "start": "1384799",
    "end": "1391200"
  },
  {
    "text": "uh spiffy and spire",
    "start": "1391200",
    "end": "1394640"
  },
  {
    "text": "so as i said before i kind of cover the first two bullets a little bit and it's um",
    "start": "1399360",
    "end": "1406960"
  },
  {
    "text": "the the spiky provides a framework to be able to bootstrap and issue identity",
    "start": "1406960",
    "end": "1414840"
  },
  {
    "text": "services across a heterogeneous environment so it's really",
    "start": "1414840",
    "end": "1421280"
  },
  {
    "text": "because of that it's really suitable for today's cloud native applications",
    "start": "1421760",
    "end": "1426960"
  },
  {
    "text": "so it's really in the way i'll show in a demo later the way we kind of use it is because we have",
    "start": "1426960",
    "end": "1433440"
  },
  {
    "text": "very multi we have multi-cluster environments and in fact those uh clusters may not be all",
    "start": "1433440",
    "end": "1438960"
  },
  {
    "text": "from the same uh security domain they may be from different providers so we want to be able to make sure we",
    "start": "1438960",
    "end": "1444720"
  },
  {
    "text": "have a framework that can allow this security identity to still be",
    "start": "1444720",
    "end": "1450000"
  },
  {
    "text": "specified clean and in a clean way and secure way so service meshes",
    "start": "1450000",
    "end": "1457520"
  },
  {
    "text": "um are moving uh very quickly towards spiffy there's a lot of uh you see a lot of sort of uh issues and",
    "start": "1457520",
    "end": "1465600"
  },
  {
    "text": "prs and whatnot moving that way but they're not all uh supporting it in",
    "start": "1465600",
    "end": "1472000"
  },
  {
    "text": "exactly the same way nor are they all necessarily supporting all the",
    "start": "1472000",
    "end": "1477039"
  },
  {
    "text": "aspects of spiffing so there's different um levels of support or different ports or portions of this 50 spec",
    "start": "1477039",
    "end": "1484240"
  },
  {
    "text": "that different meshes will support um and uh uh the the network service mesh as i",
    "start": "1484240",
    "end": "1490240"
  },
  {
    "text": "mentioned network service mesh i'll show in a lot of detail in a little bit",
    "start": "1490240",
    "end": "1495279"
  },
  {
    "text": "how network service meshes using spf inspire um but other um other service meshes",
    "start": "1495279",
    "end": "1502000"
  },
  {
    "text": "that uh support parts of the specific specification call include kuma console",
    "start": "1502000",
    "end": "1507200"
  },
  {
    "text": "connect seo uh there may be more i wasn't trying to be uh fully researched the uh level support",
    "start": "1507200",
    "end": "1515440"
  },
  {
    "text": "here across the universe of surface meshes so when we talk about spiffy the key thing is the next vid",
    "start": "1515440",
    "end": "1522080"
  },
  {
    "text": "i'll refer to that a number of times before and it's based on the next 509 certificate which includes the um spiffy identifier",
    "start": "1522080",
    "end": "1530960"
  },
  {
    "text": "which i've highlighted here",
    "start": "1530960",
    "end": "1534240"
  },
  {
    "text": "i'm not hope i wasn't hiding part of my screen by the new calls i did apologize difficult to",
    "start": "1537279",
    "end": "1544080"
  },
  {
    "text": "get feedback from people who aren't allowed to talk but apologize about that if i was um so here's the uh",
    "start": "1544080",
    "end": "1552799"
  },
  {
    "text": "the the svid format that spiffy specifies uh now we'll talk a little about about",
    "start": "1552799",
    "end": "1559360"
  },
  {
    "text": "the architecture um it has a server architecture and agents um it has a workload api so the workload",
    "start": "1559360",
    "end": "1567600"
  },
  {
    "text": "by the way this is borrowed from the spiffy",
    "start": "1567600",
    "end": "1571840"
  },
  {
    "text": "website so these are all figures coming from the spiffy website so it has a registration api because",
    "start": "1572880",
    "end": "1579440"
  },
  {
    "text": "there's a need to sort of register identity i mean not the identity that register who's",
    "start": "1579440",
    "end": "1586000"
  },
  {
    "text": "who you're going to be able to you know which agents you're",
    "start": "1586000",
    "end": "1591760"
  },
  {
    "text": "going to talk to and how you're going to identify those agents so there's a bit of a bootstrapping that's needed via registration api but",
    "start": "1591760",
    "end": "1599039"
  },
  {
    "text": "once that's done then the server uses the node api to talk to the",
    "start": "1599039",
    "end": "1604799"
  },
  {
    "text": "agent the agent uses the workload api to talk to the workloads so by this means we have a way to",
    "start": "1604799",
    "end": "1612320"
  },
  {
    "text": "both uh ensure that the workloads are who they are and that they're running on nodes uh",
    "start": "1612320",
    "end": "1619200"
  },
  {
    "text": "that we we know of um and it gives a full chain of trust along the um",
    "start": "1619200",
    "end": "1627120"
  },
  {
    "text": "and a full chain of identity um uh along in these sort of cloud native",
    "start": "1627120",
    "end": "1632320"
  },
  {
    "text": "environments so um here's some details on the spire uh design um details uh i mentioned the",
    "start": "1632320",
    "end": "1640159"
  },
  {
    "text": "registration api i mentioned the agents um and there's a bunch of different plugins that they have for",
    "start": "1640159",
    "end": "1646080"
  },
  {
    "text": "um that the server can use uh it can interface with an upstream ca um if it",
    "start": "1646080",
    "end": "1652640"
  },
  {
    "text": "wishes that uh the key manager controls uh how it's going to uh store the keys and what kind of",
    "start": "1652640",
    "end": "1660000"
  },
  {
    "text": "formats it's going to use about the disk um it has some data store plugins for",
    "start": "1660000",
    "end": "1665840"
  },
  {
    "text": "which data stores or databases it's going to store its data in and then has some node a test or no",
    "start": "1665840",
    "end": "1672880"
  },
  {
    "text": "resolver uh plugins to deal with node attached attestation um and also within different",
    "start": "1672880",
    "end": "1681120"
  },
  {
    "text": "environments so a tiny bit on the spider",
    "start": "1681120",
    "end": "1688240"
  },
  {
    "text": "node agent design here so we talked about the workloads the workloads we'll call the api i'll show that a little bit",
    "start": "1688240",
    "end": "1694399"
  },
  {
    "text": "later it has a a noted tester a workload",
    "start": "1694399",
    "end": "1699440"
  },
  {
    "text": "tester a key manager as well similar types of operations as i described on the server",
    "start": "1699440",
    "end": "1706720"
  },
  {
    "text": "there's different paths for k8 versus unix if it's trying to",
    "start": "1706720",
    "end": "1712240"
  },
  {
    "text": "do a workload a temptation on the unix versus ks environment",
    "start": "1712240",
    "end": "1719679"
  },
  {
    "text": "here's an example of the flow the workload will will call the api to",
    "start": "1720159",
    "end": "1727200"
  },
  {
    "text": "request its identity be provided the the the agent will do some at that",
    "start": "1727200",
    "end": "1733120"
  },
  {
    "text": "station to ensure the workload is who they are and there's a i don't",
    "start": "1733120",
    "end": "1738240"
  },
  {
    "text": "want to get into all the details of uh the different adaptation that it can",
    "start": "1738240",
    "end": "1743360"
  },
  {
    "text": "support but uh to keep it simple in the in the case perspective it's typically the service",
    "start": "1743360",
    "end": "1750000"
  },
  {
    "text": "account that we'll use so there's a there's some communication with k-8s and kubelet to get that service account and make",
    "start": "1750000",
    "end": "1756480"
  },
  {
    "text": "sure it's who who they uh make sure the surface account that's applied is",
    "start": "1756480",
    "end": "1761840"
  },
  {
    "text": "as expected and i'll get into that a little bit in the demo here and then back uh provide the uh and",
    "start": "1761840",
    "end": "1768799"
  },
  {
    "text": "that's vid uh to the workload so um that's a little bit on spiffy",
    "start": "1768799",
    "end": "1775600"
  },
  {
    "text": "inspire excuse me now i'm going to talk about uh",
    "start": "1775600",
    "end": "1782559"
  },
  {
    "text": "some of the different identity models that we have within service meshes",
    "start": "1782559",
    "end": "1788960"
  },
  {
    "text": "and uh this is where i'll introduce some some new things that we are working on within some of the",
    "start": "1788960",
    "end": "1795600"
  },
  {
    "text": "communities and also talk a little bit more and show what we're doing",
    "start": "1795600",
    "end": "1800880"
  },
  {
    "text": "specifically with network service mesh so probably most of the audience is",
    "start": "1800880",
    "end": "1808320"
  },
  {
    "text": "familiar with this uh nearly all the sort of service mesh multi-cluster models have examples of the shared root",
    "start": "1808320",
    "end": "1816240"
  },
  {
    "text": "trust uh it's a simple model basically assume every cluster is able to get its um",
    "start": "1816240",
    "end": "1824080"
  },
  {
    "text": "uh certificates from a common common route and all the generations happens through",
    "start": "1824080",
    "end": "1829840"
  },
  {
    "text": "common group uh there might be intermediates along the way but it's the least traceable back to tom root",
    "start": "1829840",
    "end": "1835600"
  },
  {
    "text": "pretty simple model but it sort of assumes that you have that sort of common trust domain that works for all",
    "start": "1835600",
    "end": "1842399"
  },
  {
    "text": "clusters all locations and whatnot and that that that that",
    "start": "1842399",
    "end": "1848320"
  },
  {
    "text": "works in a lot of cases even in geographical uh distributed cases that can work but",
    "start": "1848320",
    "end": "1853679"
  },
  {
    "text": "uh it's not uh it won't work in all scenarios so um one thing that uh we've been working",
    "start": "1853679",
    "end": "1861760"
  },
  {
    "text": "on uh with uh istio and the service mesh community is something that we're gonna show here is uh bridge trust it's",
    "start": "1861760",
    "end": "1868880"
  },
  {
    "text": "something that is just uh coming out in flight now",
    "start": "1868880",
    "end": "1874320"
  },
  {
    "text": "um in real time and what it involves is where we actually try to allow um",
    "start": "1874320",
    "end": "1881440"
  },
  {
    "text": "uh sort of go forward a little bit we basically allow uh this cluster to be entirely its own",
    "start": "1881440",
    "end": "1888880"
  },
  {
    "text": "trust domain and mtls within this cluster will be based on the native",
    "start": "1888880",
    "end": "1894320"
  },
  {
    "text": "service mesh that's over here similarly the native service mesh over here will have a different",
    "start": "1894320",
    "end": "1900720"
  },
  {
    "text": "route different trust domain and be able to do its own thing but we still want mtls in the middle so that's why we'll",
    "start": "1900720",
    "end": "1907200"
  },
  {
    "text": "introduce the ability to provide what i label here",
    "start": "1907200",
    "end": "1912480"
  },
  {
    "text": "as a trust domain between the ingress and egress so the",
    "start": "1912480",
    "end": "1918159"
  },
  {
    "text": "way we do that is that uh i mean now the way the service mesh does it isn't changed",
    "start": "1918159",
    "end": "1924799"
  },
  {
    "text": "that's the each of these service meshes in this in the case that we're we've been trying out at this deal and istio but doesn't",
    "start": "1924799",
    "end": "1931279"
  },
  {
    "text": "necessarily have to be um but they these service meshes control their own",
    "start": "1931279",
    "end": "1937679"
  },
  {
    "text": "certificate and identity management however they want to do it however the the client and the gateways",
    "start": "1937679",
    "end": "1944080"
  },
  {
    "text": "talk or the server and the gateways talk we don't really get involved with",
    "start": "1944080",
    "end": "1949279"
  },
  {
    "text": "but then what we do here in this case i list the fmh or service",
    "start": "1949279",
    "end": "1954720"
  },
  {
    "text": "mesh hub is kind of how we're doing it we basically have our own set of",
    "start": "1954720",
    "end": "1960720"
  },
  {
    "text": "intermediate certificates that we're providing to both the ingress gateway and the egress gateway",
    "start": "1960720",
    "end": "1966240"
  },
  {
    "text": "to be able to provide that bridge trust as i'm labeling here",
    "start": "1966240",
    "end": "1971360"
  },
  {
    "text": "i won't necessarily kind of go through these one by one but the idea here is",
    "start": "1971360",
    "end": "1977440"
  },
  {
    "text": "mtls between these guys based on this meshes um identity frameworks and then",
    "start": "1977440",
    "end": "1984159"
  },
  {
    "text": "certificate frameworks um then mtls uh between these guys",
    "start": "1984159",
    "end": "1989600"
  },
  {
    "text": "based on this intermediary and then mtls over here so you have mtls",
    "start": "1989600",
    "end": "1996880"
  },
  {
    "text": "all the way through but you don't have you're not forcing the client and the",
    "start": "1996880",
    "end": "2003360"
  },
  {
    "text": "server to be uh to the same common um root certificate so uh there's some some",
    "start": "2003360",
    "end": "2010240"
  },
  {
    "text": "scenarios where this can be useful so uh moving on and and i know there's",
    "start": "2010240",
    "end": "2016480"
  },
  {
    "text": "been a number of uh talks and presentations and some work um in various uh in a number of",
    "start": "2016480",
    "end": "2022960"
  },
  {
    "text": "different cases for for this model here where we call we we talk about federated identity",
    "start": "2022960",
    "end": "2028559"
  },
  {
    "text": "um and uh we've we've been spending some time on this although uh we don't necessarily have it all fully",
    "start": "2028559",
    "end": "2034880"
  },
  {
    "text": "working yet uh but the idea here is that you uh have federated identity between",
    "start": "2034880",
    "end": "2041519"
  },
  {
    "text": "um well i show it in this dod here but um if dod or or",
    "start": "2041519",
    "end": "2048158"
  },
  {
    "text": "did the service mesh over here it doesn't necessarily have to deal with it can sort of deal a little",
    "start": "2048159",
    "end": "2055520"
  },
  {
    "text": "bit as its own trust domain and likewise over here but",
    "start": "2055520",
    "end": "2060560"
  },
  {
    "text": "when this guy and this guy or gal want to communicate to each other",
    "start": "2060560",
    "end": "2066320"
  },
  {
    "text": "they have to have a trust bundle that can uh include both a and b so if if this one's",
    "start": "2066320",
    "end": "2074960"
  },
  {
    "text": "communicating over this way this one will have to have both a little bit of a and b so that it",
    "start": "2074960",
    "end": "2080800"
  },
  {
    "text": "can identify this guy and then likewise identify this guy on that side so um",
    "start": "2080800",
    "end": "2088560"
  },
  {
    "text": "the um istio has some capabilities right now to specify uh these uh trust bundles with",
    "start": "2088560",
    "end": "2096079"
  },
  {
    "text": "uh um you know pointing to basically pointing uh to a different spire server based on a",
    "start": "2096079",
    "end": "2104160"
  },
  {
    "text": "domain so based on the domain you point to aspire server this could be multiples of these",
    "start": "2104160",
    "end": "2109760"
  },
  {
    "text": "and that allows istio to provide a more complete trust bundle um",
    "start": "2109760",
    "end": "2116560"
  },
  {
    "text": "for um with both the a and the b uh components",
    "start": "2116560",
    "end": "2123759"
  },
  {
    "text": "so um now shifting a little bit back to nsm or",
    "start": "2125520",
    "end": "2131680"
  },
  {
    "text": "network service mesh uh which as i mentioned before uh is more layer three and four oriented than",
    "start": "2131680",
    "end": "2138079"
  },
  {
    "text": "the application service meshes but um it's been in the forefront of adopting um some of the spiffy spire",
    "start": "2138079",
    "end": "2144640"
  },
  {
    "text": "implementations and it uses the aspire servers",
    "start": "2144640",
    "end": "2151280"
  },
  {
    "text": "to provide the identity for the different network service mesh elements as they're communicating to",
    "start": "2151280",
    "end": "2157440"
  },
  {
    "text": "each other uh uh the uh um so though it's the identity framework",
    "start": "2157440",
    "end": "2163599"
  },
  {
    "text": "they use uh they use they don't uh there's an option if you're playing with network service mesh it's a secure and insecure option so you",
    "start": "2163599",
    "end": "2170400"
  },
  {
    "text": "can sort of do it without this level of security but it's um",
    "start": "2170400",
    "end": "2176560"
  },
  {
    "text": "it's available and it's the security framework they use um so you may not be familiar with uh",
    "start": "2176560",
    "end": "2184000"
  },
  {
    "text": "nsm but the uh some of the key modules i'll talk about um are network service clients network",
    "start": "2184000",
    "end": "2191599"
  },
  {
    "text": "service endpoints network service registers and network service managers um in a way for the perspective of this",
    "start": "2191599",
    "end": "2198240"
  },
  {
    "text": "talk you don't necessarily need to understand too well exactly what these do unless",
    "start": "2198240",
    "end": "2203760"
  },
  {
    "text": "you are really interested or you know nsm but the key point that we're trying to show is how",
    "start": "2203760",
    "end": "2209839"
  },
  {
    "text": "as requests get chained through these guys using the the embedded network service mesh apis for",
    "start": "2209839",
    "end": "2218079"
  },
  {
    "text": "getting services and providing services uh providing getting network services",
    "start": "2218079",
    "end": "2224240"
  },
  {
    "text": "themselves and providing network services that's the key thing in the api uh as those requests flow between these",
    "start": "2224240",
    "end": "2230240"
  },
  {
    "text": "guys i'll show how they use spiffy inspire to sort of make sure they're secure",
    "start": "2230240",
    "end": "2236640"
  },
  {
    "text": "um it has a um the reason the big reason that we oops",
    "start": "2236640",
    "end": "2242079"
  },
  {
    "text": "sorry about that the big reason we're interested in this is because um within nsm if you're familiar with",
    "start": "2242079",
    "end": "2249040"
  },
  {
    "text": "the project or if you want to go look at it there's a they have a what they call a floating inter-domain use case",
    "start": "2249040",
    "end": "2254320"
  },
  {
    "text": "and the the big thing about that use case is those those api communications uh most across",
    "start": "2254320",
    "end": "2261440"
  },
  {
    "text": "multiple cluster boundaries and they might and potentially as i said before as you're talking about crossing",
    "start": "2261440",
    "end": "2266880"
  },
  {
    "text": "multiple cluster boundaries you potentially may have to cross into multiple security domains",
    "start": "2266880",
    "end": "2272960"
  },
  {
    "text": "so that's why i thought it was a great use case to display the spiffy inspire",
    "start": "2272960",
    "end": "2278240"
  },
  {
    "text": "capabilities here for this talk so",
    "start": "2278240",
    "end": "2284160"
  },
  {
    "text": "again if you don't know nsm try not to worry too much about um what the individual modules do here",
    "start": "2284160",
    "end": "2291920"
  },
  {
    "text": "but the um the idea here is you'll have a network service",
    "start": "2291920",
    "end": "2297440"
  },
  {
    "text": "endpoint i haven't shown the workload or the ultimate client yet in this case and it's going to do",
    "start": "2297440",
    "end": "2303680"
  },
  {
    "text": "a network service request to the network service manager and as since we ultimately need to",
    "start": "2303680",
    "end": "2312800"
  },
  {
    "text": "have connection between these two nfes that are on different clusters for this particular network service request",
    "start": "2312800",
    "end": "2319760"
  },
  {
    "text": "there's a whole chain of api requests as a simple api but more nonetheless a chain of api requests that",
    "start": "2319760",
    "end": "2325920"
  },
  {
    "text": "go around and in the use case that i i'll demo later",
    "start": "2325920",
    "end": "2332000"
  },
  {
    "text": "it involves three clusters uh sort of a client cluster and a server cluster if",
    "start": "2332000",
    "end": "2337359"
  },
  {
    "text": "you will and then um control cluster but the details really matter the idea is",
    "start": "2337359",
    "end": "2343119"
  },
  {
    "text": "request request request request request request request now all these",
    "start": "2343119",
    "end": "2349359"
  },
  {
    "text": "need to be authenticated we need to know who each of these elements are whether the element is who",
    "start": "2349359",
    "end": "2356079"
  },
  {
    "text": "they expected to be and we want to use encryption",
    "start": "2356079",
    "end": "2361440"
  },
  {
    "text": "along the way so how does nsm do this so uh here's kind of the",
    "start": "2361440",
    "end": "2369119"
  },
  {
    "text": "architecture um you'll see that there's nothing",
    "start": "2369119",
    "end": "2375680"
  },
  {
    "text": "really outstanding or kind of um",
    "start": "2375680",
    "end": "2380960"
  },
  {
    "text": "really uh novel about this architecture i kind of showed it before but if we superimpose",
    "start": "2380960",
    "end": "2386560"
  },
  {
    "text": "what i showed you just before we have spire servers aspire agents we have some search",
    "start": "2386560",
    "end": "2393680"
  },
  {
    "text": "generation um in the case that i'm showing here where we're going to show a common route",
    "start": "2393680",
    "end": "2398720"
  },
  {
    "text": "i kind of was expounding on how that's a little limiting but nonetheless that's what the demo will currently do",
    "start": "2398720",
    "end": "2405359"
  },
  {
    "text": "um and then i try to show uh my key over here tries to show some of the s-vid propagation that",
    "start": "2405359",
    "end": "2410880"
  },
  {
    "text": "happens and the mtls exchanges that come along the way so",
    "start": "2410880",
    "end": "2417680"
  },
  {
    "text": "now i'm going to try to go into a little bit of a demo on this unfortunately i chose not to do",
    "start": "2417680",
    "end": "2424000"
  },
  {
    "text": "this real time so hopefully this all comes through in a recording",
    "start": "2424000",
    "end": "2431040"
  },
  {
    "text": "let me go back here let me try to start the screen hopefully everybody's",
    "start": "2431119",
    "end": "2437599"
  },
  {
    "text": "able to see this but uh this uh initially shows the current topology that i have",
    "start": "2437599",
    "end": "2444240"
  },
  {
    "text": "and then i'm going to start showing you uh aspects of the topology so first thing i'm going to do is show",
    "start": "2444240",
    "end": "2450240"
  },
  {
    "text": "you uh we have spire server and agents deployed",
    "start": "2450240",
    "end": "2455760"
  },
  {
    "text": "and it's not going to be on three clusters you'll see slightly different naming",
    "start": "2457040",
    "end": "2463200"
  },
  {
    "text": "my cluster this is all based on kind so for those familiar kind you'll see my",
    "start": "2463200",
    "end": "2469359"
  },
  {
    "text": "i'm using the kind api servers and using context so we need to bootstrap the server",
    "start": "2469359",
    "end": "2476319"
  },
  {
    "text": "in this case i do it with i create a secret",
    "start": "2476319",
    "end": "2495520"
  },
  {
    "text": "and you can see that um i named that secret from spire now um because i said we're using the common",
    "start": "2495520",
    "end": "2502319"
  },
  {
    "text": "root i'm showing you here that all the secrets the same i just did a diff of getting the secret and the key parts",
    "start": "2502319",
    "end": "2509119"
  },
  {
    "text": "of the secret are the same and then um via some of the",
    "start": "2509119",
    "end": "2515920"
  },
  {
    "text": "magic within nsm and spider we actually end up",
    "start": "2515920",
    "end": "2521520"
  },
  {
    "text": "getting a config map with a certificate that buyer uses",
    "start": "2521520",
    "end": "2527359"
  },
  {
    "text": "and i also show here that that certificate ends up being the same",
    "start": "2527760",
    "end": "2533359"
  },
  {
    "text": "in all the spire servers",
    "start": "2533359",
    "end": "2538720"
  },
  {
    "text": "so that was a little quick and i'll just go back for a second",
    "start": "2539200",
    "end": "2544480"
  },
  {
    "text": "oops so if we just hold it there you'll see that i'm getting",
    "start": "2548839",
    "end": "2554640"
  },
  {
    "text": "uh the config map from two different clusters and showing that the key parts of that",
    "start": "2554640",
    "end": "2560400"
  },
  {
    "text": "config map the certificate itself is the same",
    "start": "2560400",
    "end": "2565839"
  },
  {
    "text": "i show um aspire server config this is where uh some of the config we put together",
    "start": "2567280",
    "end": "2573520"
  },
  {
    "text": "bootstrap it uh you could see there's the the the secret that i created telling it where they um the name of it",
    "start": "2573520",
    "end": "2582960"
  },
  {
    "text": "and i created a trust domain here i'm going to highlight all the aspects",
    "start": "2583760",
    "end": "2590960"
  },
  {
    "text": "of it and right now i want to show you that we don't initially have",
    "start": "2590960",
    "end": "2596560"
  },
  {
    "text": "the endpoint or neither the client endpoint or",
    "start": "2596560",
    "end": "2602079"
  },
  {
    "text": "the nfcs registered so if i include my um my actual name here",
    "start": "2602079",
    "end": "2610400"
  },
  {
    "text": "of my application is going to be hello so i just grabbed in here so that there's no hello registration in",
    "start": "2610400",
    "end": "2616880"
  },
  {
    "text": "the certificate right now",
    "start": "2616880",
    "end": "2621838"
  },
  {
    "text": "so now i'm going to deploy uh the nses now uh again that the key thing for those",
    "start": "2624079",
    "end": "2629920"
  },
  {
    "text": "not familiar with network network service manager the network service element is",
    "start": "2629920",
    "end": "2635520"
  },
  {
    "text": "is a is a pod typically a pod that provides some kind of network service",
    "start": "2635520",
    "end": "2640560"
  },
  {
    "text": "um or some kind of network function um and then i actually have hello world pod in this",
    "start": "2640560",
    "end": "2647599"
  },
  {
    "text": "case but again all the details are not that important um since we're doing the floating inter",
    "start": "2647599",
    "end": "2653200"
  },
  {
    "text": "domain basically the details are i end up interconnecting these nfc so these guys can talk but i'm not really",
    "start": "2653200",
    "end": "2659760"
  },
  {
    "text": "going to get too much into that detail in this talk",
    "start": "2659760",
    "end": "2664640"
  },
  {
    "text": "so we continue on a little bit",
    "start": "2665200",
    "end": "2668560"
  },
  {
    "text": "let's get the antipods",
    "start": "2670800",
    "end": "2676800"
  },
  {
    "text": "i actually have two network service element pods running here and what i",
    "start": "2676800",
    "end": "2683040"
  },
  {
    "text": "want to show here is that we mount a socket in the nse",
    "start": "2683040",
    "end": "2688079"
  },
  {
    "text": "so that it can talk to the workload api aspire so this is one of the key things to",
    "start": "2688079",
    "end": "2693440"
  },
  {
    "text": "make sure that spire can attest that this network service element is who they",
    "start": "2693440",
    "end": "2699119"
  },
  {
    "text": "are say they are now i just showed the hello pod and as part of this in the background i don't",
    "start": "2699119",
    "end": "2705599"
  },
  {
    "text": "show the actual steps but we've actually registered with uh spire that those",
    "start": "2705599",
    "end": "2713280"
  },
  {
    "text": "workload service accounts may try to connect to them and should be provided a certificate so",
    "start": "2713280",
    "end": "2719200"
  },
  {
    "text": "here's um i show these two here there's the nse and the",
    "start": "2719200",
    "end": "2726880"
  },
  {
    "text": "client itself so now once that was registered then",
    "start": "2726880",
    "end": "2732720"
  },
  {
    "text": "these guys can get an identity from the spider agent on the given node so we're going to show",
    "start": "2732720",
    "end": "2738800"
  },
  {
    "text": "a little bit of that here this is",
    "start": "2738800",
    "end": "2743599"
  },
  {
    "text": "let me just go back a little bit on a little quick so what i am showing here is the spire agent um on on a particular",
    "start": "2744160",
    "end": "2752000"
  },
  {
    "text": "one of the clusters uh oh by the way my clusters are single middle clusters so that's why i don't get into too much of",
    "start": "2752000",
    "end": "2758000"
  },
  {
    "text": "the node um attestation steps but anyway nonetheless",
    "start": "2758000",
    "end": "2763839"
  },
  {
    "text": "and what we show here is that this fire agent did see a request from someone that",
    "start": "2763839",
    "end": "2771040"
  },
  {
    "text": "has the hello client service account and it will go ahead and provide a nest bid",
    "start": "2771040",
    "end": "2776560"
  },
  {
    "text": "to it",
    "start": "2776560",
    "end": "2778880"
  },
  {
    "text": "and then we can look at the server and we can see from the server s bids that it's",
    "start": "2782160",
    "end": "2789040"
  },
  {
    "text": "signed and rotating both because it took me a long time in between doing",
    "start": "2789040",
    "end": "2794720"
  },
  {
    "text": "this and capturing it so you can see some of the rotation that happened in between so now we're going to move on here and",
    "start": "2794720",
    "end": "2801839"
  },
  {
    "text": "i'm going to try to show you it's a little difficult this part's a little tricky to show well",
    "start": "2801839",
    "end": "2808880"
  },
  {
    "text": "in a demo but i'm going to attempt to do it anyway how each request in the chain is using",
    "start": "2808880",
    "end": "2814839"
  },
  {
    "text": "mtls so um i'm going to do that with some",
    "start": "2814839",
    "end": "2822160"
  },
  {
    "text": "code snippets jagger tracing and some logs so the first thing let me just",
    "start": "2822160",
    "end": "2827200"
  },
  {
    "text": "pause this is that uh this is from uh network service mesh itself uh there's a trace point for jaeger uh",
    "start": "2827200",
    "end": "2835359"
  },
  {
    "text": "since a lot of this code is done by libraries uh uh all i wanna really show is that we",
    "start": "2835359",
    "end": "2840640"
  },
  {
    "text": "hit this trace point because you can see that immediately we're going to go and get a tls config",
    "start": "2840640",
    "end": "2847920"
  },
  {
    "text": "for that based on this gopc new server call",
    "start": "2847920",
    "end": "2859838"
  },
  {
    "text": "i think i'm gonna have just enough time",
    "start": "2864319",
    "end": "2868240"
  },
  {
    "text": "here so let's look at some of the logs to try to see this so if we uh if we look at the",
    "start": "2870839",
    "end": "2878559"
  },
  {
    "text": "uh the hello world container log this is uh from from the client or server side if",
    "start": "2878559",
    "end": "2885040"
  },
  {
    "text": "we jump down here we can see here the two key lines i want to show you",
    "start": "2885040",
    "end": "2891520"
  },
  {
    "text": "here is right shortly after the this came up because this is from the init container",
    "start": "2891520",
    "end": "2897680"
  },
  {
    "text": "it actually got a certificate issued from",
    "start": "2897680",
    "end": "2902880"
  },
  {
    "text": "stiffy and then it created the connection so these are like a bang bang right after the initial initialization",
    "start": "2902880",
    "end": "2909760"
  },
  {
    "text": "happens it starts trying to do a communication with the server and it's establishing its identity",
    "start": "2909760",
    "end": "2917599"
  },
  {
    "text": "and so i'm going to try to show that jaeger",
    "start": "2922720",
    "end": "2930480"
  },
  {
    "text": "is actually capturing some of this",
    "start": "2930480",
    "end": "2933920"
  },
  {
    "text": "so jaeger um nsm has some nice ability to install jager",
    "start": "2939280",
    "end": "2948240"
  },
  {
    "text": "on the looks and traces sorry about the six hour delay but it takes a while to",
    "start": "2950960",
    "end": "2956480"
  },
  {
    "text": "make sure everything's running properly and capture thing and go through work distractions in between but you can see here the key thing i was",
    "start": "2956480",
    "end": "2963119"
  },
  {
    "text": "trying to point out before is that get certificate trace point uh was",
    "start": "2963119",
    "end": "2968240"
  },
  {
    "text": "hit by this code",
    "start": "2968240",
    "end": "2971839"
  },
  {
    "text": "oops and with that we've been able to oops",
    "start": "2977280",
    "end": "2985440"
  },
  {
    "text": "sorry back to the slide decks",
    "start": "2985440",
    "end": "2990318"
  },
  {
    "text": "i'm pretty much done the only thing i wanted to say is i got a lot of help from various people",
    "start": "2993280",
    "end": "2999680"
  },
  {
    "text": "to get this done so i wanted to acknowledge them and then that's it except for questions",
    "start": "2999680",
    "end": "3006720"
  },
  {
    "text": "so jerry how do we want to do questions um well thank you john for a great uh presentation",
    "start": "3006720",
    "end": "3012480"
  },
  {
    "text": "um i'll read off the questions to you one by one in the q a box we have about five minutes left so if",
    "start": "3012480",
    "end": "3018880"
  },
  {
    "text": "anyone has any questions that they would like to ask um please uh put them into the q a box",
    "start": "3018880",
    "end": "3024720"
  },
  {
    "text": "and we'll get to as many as we can we do have one here um",
    "start": "3024720",
    "end": "3030079"
  },
  {
    "text": "would similar authorization architecture work for istio and envoy based service mesh",
    "start": "3030079",
    "end": "3038000"
  },
  {
    "text": "implementation uh yeah absolutely svo uh is one of the service meshes that",
    "start": "3038839",
    "end": "3044800"
  },
  {
    "text": "um actually allow authorization um within um as part",
    "start": "3044800",
    "end": "3051119"
  },
  {
    "text": "it has a has authorization capabilities within its api and within its",
    "start": "3051119",
    "end": "3057920"
  },
  {
    "text": "control plane and how it pushes it down to envoy envoy itself definitely has a lot of capabilities in",
    "start": "3057920",
    "end": "3065200"
  },
  {
    "text": "the authorization vein so envoy no matter where it's used has those capabilities",
    "start": "3065200",
    "end": "3071599"
  },
  {
    "text": "but the service mesh that's controlling it some do some don't now i in the example i",
    "start": "3071599",
    "end": "3078000"
  },
  {
    "text": "gave for authorization i used an smi api object i'm pretty sure",
    "start": "3078000",
    "end": "3084400"
  },
  {
    "text": "istio doesn't support the smi api objects themselves they have their own api objects but they all",
    "start": "3084400",
    "end": "3090240"
  },
  {
    "text": "they do support authorization capabilities similar to what i showed",
    "start": "3090240",
    "end": "3098160"
  },
  {
    "text": "okay we have any more questions at all",
    "start": "3098880",
    "end": "3111838"
  },
  {
    "text": "okay great um i guess with that thank thank you all for attending i",
    "start": "3112160",
    "end": "3119920"
  },
  {
    "text": "hope you all enjoyed it and hope it all came out pretty good it was hard for without feedback to see if",
    "start": "3119920",
    "end": "3126319"
  },
  {
    "text": "everybody was able to see everything that i hoped they saw or cure me well enough but i hope it worked",
    "start": "3126319",
    "end": "3131760"
  },
  {
    "text": "out well for everybody uh there's one more question here there",
    "start": "3131760",
    "end": "3137280"
  },
  {
    "text": "is a v wire on one of the slides would it be possible for you to elaborate a bit more",
    "start": "3137280",
    "end": "3142400"
  },
  {
    "text": "on that um oh okay um",
    "start": "3142400",
    "end": "3148720"
  },
  {
    "text": "not sure exactly oh okay on this slide so um yeah uh that's not",
    "start": "3148720",
    "end": "3155680"
  },
  {
    "text": "uh germaine to what i was trying to show here uh but i'll since i have a few minutes i'll i'll",
    "start": "3155680",
    "end": "3161280"
  },
  {
    "text": "talk about it but um network service mesh v-wire is a key construct within network service mesh",
    "start": "3161280",
    "end": "3167680"
  },
  {
    "text": "itself so network service mesh the the main if you're not familiar with it at a macro level what you have is you",
    "start": "3167680",
    "end": "3174400"
  },
  {
    "text": "have network service elements that provide a network service you have clients that i don't show on this page",
    "start": "3174400",
    "end": "3180640"
  },
  {
    "text": "um show on the other thing that might request a network service mesh and then the nsm",
    "start": "3180640",
    "end": "3188240"
  },
  {
    "text": "manager wants to connect those clients to the network service now in this",
    "start": "3188240",
    "end": "3195359"
  },
  {
    "text": "particular example since i'm using uh what's known as a floating inter-domain",
    "start": "3195359",
    "end": "3201040"
  },
  {
    "text": "uh network service the the network service actually has to span across clusters so",
    "start": "3201040",
    "end": "3207040"
  },
  {
    "text": "essentially a better way to show this if i can find my arrows",
    "start": "3207040",
    "end": "3213838"
  },
  {
    "text": "is is maybe maybe i'll stay with this one so a",
    "start": "3214319",
    "end": "3220480"
  },
  {
    "text": "better way to show this is that um for this particular network service i i need a v wire from the nse",
    "start": "3220480",
    "end": "3229119"
  },
  {
    "text": "uh to the client which i don't show but assume it's there and then i'll need v wires from the",
    "start": "3229119",
    "end": "3235119"
  },
  {
    "text": "forward or across the cluster boundaries i'll need a v wire from the forward or to the nfes",
    "start": "3235119",
    "end": "3241280"
  },
  {
    "text": "and then i'll need another v wire from this nsd to the server side so essentially",
    "start": "3241280",
    "end": "3247520"
  },
  {
    "text": "network service mesh is using what they the construct called a v wire a virtual wire is how it's actually",
    "start": "3247520",
    "end": "3254240"
  },
  {
    "text": "uh choosing to interconnect a client's request for a service with what that service entails",
    "start": "3254240",
    "end": "3260400"
  },
  {
    "text": "in this case the service entails crosstalk cluster boundaries",
    "start": "3260400",
    "end": "3265839"
  },
  {
    "text": "okay well that's just about all the time we have for today um i want to thank you again john for a",
    "start": "3266000",
    "end": "3271839"
  },
  {
    "text": "wonderful presentation and i would like to thank everybody for their questions",
    "start": "3271839",
    "end": "3276960"
  },
  {
    "text": "and for participating in today's webinar um that's about all the time that we have um as i said before the recording",
    "start": "3276960",
    "end": "3284160"
  },
  {
    "text": "and slides will be posted later today to the cncf webinar page at cncf dot io slash webinars",
    "start": "3284160",
    "end": "3290000"
  },
  {
    "text": "thank you again everyone for attending everyone take care stay safe and we will see you at the next webinar",
    "start": "3290000",
    "end": "3296720"
  },
  {
    "text": "okay bye",
    "start": "3296720",
    "end": "3301280"
  }
]