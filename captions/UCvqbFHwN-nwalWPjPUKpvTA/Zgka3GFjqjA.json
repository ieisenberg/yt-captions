[
  {
    "text": "welcome to the talk box for developers monitoring your driver applications with",
    "start": "30",
    "end": "5819"
  },
  {
    "text": "Prometheus just a short survey the two usually two kinds of people one who",
    "start": "5819",
    "end": "12000"
  },
  {
    "text": "arrives java application the other one try to run it so who's trying to run",
    "start": "12000",
    "end": "17460"
  },
  {
    "text": "java applications all right who's then developing java application this room",
    "start": "17460",
    "end": "23100"
  },
  {
    "text": "alright so there was a people who do both that's good right good but then",
    "start": "23100",
    "end": "31619"
  },
  {
    "text": "let's see how we can do this and to help premiere these can help with this prometheus well help lots of people",
    "start": "31619",
    "end": "39120"
  },
  {
    "text": "already heard talk about what pro music can do for you then i talk you through the setup optic of today's samples that",
    "start": "39120",
    "end": "47850"
  },
  {
    "text": "i show you and then we see some how to how to monitor java applications central",
    "start": "47850",
    "end": "53610"
  },
  {
    "text": "it's all about for today I'm a I'm an RT consultant I do Java programming also",
    "start": "53610",
    "end": "59430"
  },
  {
    "text": "have a Java t-shirt with all these cool people around here she's a bit strange but I develop IT software for Java",
    "start": "59430",
    "end": "68189"
  },
  {
    "text": "soccer for more than 15 years and on other programming languages like PL sequin or if the databases quite",
    "start": "68189",
    "end": "75540"
  },
  {
    "text": "different and well I've been working in consumer finance doing like online credit applications and online banking",
    "start": "75540",
    "end": "82950"
  },
  {
    "text": "so web applications well it's a second home and well marriage to kids and well",
    "start": "82950",
    "end": "89759"
  },
  {
    "text": "hobby known then what only known so an awful little add breaking again I'm",
    "start": "89759",
    "end": "97049"
  },
  {
    "text": "doing them prometheus monitoring retreat so if you're free on either the 23rd and 24th of true and living near the",
    "start": "97049",
    "end": "103890"
  },
  {
    "text": "Frankfurt area may like pre-register we not yet sure about venue and the date is",
    "start": "103890",
    "end": "111540"
  },
  {
    "text": "going to be either finder and feathering or contact me after the talk",
    "start": "111540",
    "end": "116030"
  },
  {
    "text": "so Prometheus well what we want to do we do we want to monitor some house and",
    "start": "116720",
    "end": "121880"
  },
  {
    "text": "applications and we want to send out some loads and the thing that we use to solve all this at least for today it's",
    "start": "121880",
    "end": "127610"
  },
  {
    "text": "going to be Prometheus and as we all",
    "start": "127610",
    "end": "132950"
  },
  {
    "text": "know prometheus is an opinionated solution Julius gave a great target prompt from",
    "start": "132950",
    "end": "138440"
  },
  {
    "text": "last year and well it can do a lot of things instrumentation collection storage but",
    "start": "138440",
    "end": "144560"
  },
  {
    "text": "well today we are looking at instrumentation how can I get all this information out of my java application",
    "start": "144560",
    "end": "150560"
  },
  {
    "text": "into Prometheus and then maybe do some dashboarding but I'm not very good at dashboards anyway all right so to set up",
    "start": "150560",
    "end": "159680"
  },
  {
    "text": "for today Prometheus the thing in the middle how would you then like any other",
    "start": "159680",
    "end": "167360"
  },
  {
    "text": "application you can do you see advisor to monitor an application when you write it in the container you can see from the",
    "start": "167360",
    "end": "172880"
  },
  {
    "text": "outside of CPU usage the RAM usage but well that's not very much if you want to",
    "start": "172880",
    "end": "178340"
  },
  {
    "text": "kill our virtual machine but it's a start and you probably should continue",
    "start": "178340",
    "end": "183920"
  },
  {
    "text": "doing that if you monitoring the availability of course service if it's",
    "start": "183920",
    "end": "189440"
  },
  {
    "text": "running as your users expected to run like doing probes and probably also do the alerting you can do something use",
    "start": "189440",
    "end": "196940"
  },
  {
    "text": "something like a black box exporter please continue to do so because the",
    "start": "196940",
    "end": "202459"
  },
  {
    "text": "metrics we will see today they're mostly for well analyzing problems and type",
    "start": "202459",
    "end": "208190"
  },
  {
    "text": "people into that but they are not really for alerting other thing use something into end and find out what your thing",
    "start": "208190",
    "end": "214639"
  },
  {
    "text": "are doing there's also dry mix exporter I will not cover that today because well with Java",
    "start": "214639",
    "end": "221000"
  },
  {
    "text": "developers or you at least probably know the Java developer you are running the application for he can put something",
    "start": "221000",
    "end": "227510"
  },
  {
    "text": "into your in the into the application that you're running and there's going to be the simple client well so forget",
    "start": "227510",
    "end": "236060"
  },
  {
    "text": "about the rest of the of the other three for today we will concentrating on the simple client well I've been told it's been called",
    "start": "236060",
    "end": "243230"
  },
  {
    "text": "simple client because it has been a not so temperature before let's see what we can",
    "start": "243230",
    "end": "248590"
  },
  {
    "text": "do with the simple club and well we want to do some cash growth and how things look like if all the demos work really",
    "start": "248590",
    "end": "257579"
  },
  {
    "text": "so well let's start with something well quite familiar I hope start with C",
    "start": "257880",
    "end": "263830"
  },
  {
    "text": "advisor if you want to do some RAM monitoring we have a variable that's being exposed container memory usage and",
    "start": "263830",
    "end": "273100"
  },
  {
    "text": "bytes and then we can do all the namings and find out the right soccer or containers that we want to look at and",
    "start": "273100",
    "end": "279310"
  },
  {
    "text": "we can do all these from cool expressions here we also can do the CPU",
    "start": "279310",
    "end": "284680"
  },
  {
    "text": "use it through container and it's as we all know it's then measuring in seconds",
    "start": "284680",
    "end": "290950"
  },
  {
    "text": "used and yeah that's where we start that's the outside",
    "start": "290950",
    "end": "297300"
  },
  {
    "text": "Java Virtual Machine it's from the outside like any other application as well so let's let's take it some click",
    "start": "297300",
    "end": "304419"
  },
  {
    "text": "again some little deeper s use a simple client so there's like we looked at the",
    "start": "304419",
    "end": "313930"
  },
  {
    "text": "driver at the RAM use it from outside you can have two ram usage invites you can then have a metric wife used and",
    "start": "313930",
    "end": "321840"
  },
  {
    "text": "then it gives you information about all the RAM tools that are within a java virtual machine so the heap space and",
    "start": "321840",
    "end": "330490"
  },
  {
    "text": "the other spaces that are around and it also breaks down for you the CPU usage from the outside you can't we see if",
    "start": "330490",
    "end": "337180"
  },
  {
    "text": "your application is doing something meaningful or if it's just fully doing a",
    "start": "337180",
    "end": "342340"
  },
  {
    "text": "garbage collection we because you're used to wrong Java memory parameters on",
    "start": "342340",
    "end": "349090"
  },
  {
    "text": "that and well let's see how things look for that let's see if microfauna",
    "start": "349090",
    "end": "354789"
  },
  {
    "text": "dashboard works so from the outside yes you have these",
    "start": "354789",
    "end": "360389"
  },
  {
    "text": "containers and give you from the outside but let's look at the RAM usage so what",
    "start": "360389",
    "end": "370499"
  },
  {
    "text": "you see here you have a like you probably know from the go program we've seen it as a talk before you have the",
    "start": "370499",
    "end": "376649"
  },
  {
    "text": "heat used heap space it's always going up and down and if you put some load on",
    "start": "376649",
    "end": "383189"
  },
  {
    "text": "that application like let's use a B for that",
    "start": "383189",
    "end": "389779"
  },
  {
    "text": "you will see that it's going up and down but the cpu use it for for for the",
    "start": "393910",
    "end": "399250"
  },
  {
    "text": "garbage collection is still done quite low put that into the criminal run it",
    "start": "399250",
    "end": "407860"
  },
  {
    "text": "and then we should see it that it's behaving a bit differently",
    "start": "407860",
    "end": "413910"
  },
  {
    "text": "all right and up to now the garbage collection was very idle every time",
    "start": "413910",
    "end": "420580"
  },
  {
    "text": "there was a heap compaction we had a small spike of 0.4 nothing and the",
    "start": "420580",
    "end": "427930"
  },
  {
    "text": "moment we do some proper work we also see that the garbage collection is doing some more work but still we see that",
    "start": "427930",
    "end": "435370"
  },
  {
    "text": "it's doing proper work like delivering responses but our memory cueing is then",
    "start": "435370",
    "end": "441310"
  },
  {
    "text": "probably quite ok so that's the first insight that we can get from here and",
    "start": "441310",
    "end": "447700"
  },
  {
    "text": "what we can do for that we there's another drop library let's assume we're",
    "start": "447700",
    "end": "454240"
  },
  {
    "text": "running in a spinning good environment here we just say default X Falls",
    "start": "454240",
    "end": "460570"
  },
  {
    "text": "initialize that will include a JVM metrics here and we will choose an URL that we want to expose this metrics on I",
    "start": "460570",
    "end": "467890"
  },
  {
    "text": "like it to be after manage because all the spring boot applications behave like",
    "start": "467890",
    "end": "474100"
  },
  {
    "text": "that as it's just a simple servlet you can also use it with any Java EE",
    "start": "474100",
    "end": "480340"
  },
  {
    "text": "application or drop wizard or whatever it trusts the servlets that you put in",
    "start": "480340",
    "end": "486550"
  },
  {
    "text": "there it's runs in the Java Virtual Machine and well it takes a memory takes",
    "start": "486550",
    "end": "491680"
  },
  {
    "text": "in a library that you package into your java application but it gives you the incisor to be seen and",
    "start": "491680",
    "end": "500610"
  },
  {
    "text": "so and then as soon as I browse to that URL with all the metrics we will see in",
    "start": "501190",
    "end": "508910"
  },
  {
    "text": "a minute that there are lots and lots of other metrics as well at least one starting with JVM object diversion info",
    "start": "508910",
    "end": "520370"
  },
  {
    "text": "as well I get tomcat into here because I'm running in a better Tomcats the threads",
    "start": "520370",
    "end": "527000"
  },
  {
    "text": "I'm using so it's getting a lot of information here and it helps me to analyze problems that arise but not it's",
    "start": "527000",
    "end": "535670"
  },
  {
    "text": "not really useful for alerting maybe the garbage collection CPU usage that might be something you could try to do",
    "start": "535670",
    "end": "543260"
  },
  {
    "text": "alerting on what all the rest is just for information and digging down when performance is low so these are the",
    "start": "543260",
    "end": "552440"
  },
  {
    "text": "simple metrics that there are for the java virtual machine but then you",
    "start": "552440",
    "end": "558950"
  },
  {
    "text": "probably also want to go ahead and set some proper business metrics you want to",
    "start": "558950",
    "end": "564740"
  },
  {
    "text": "have you have special rest call or you have a special business function in your code that you want to collect timings on",
    "start": "564740",
    "end": "571910"
  },
  {
    "text": "and how loftiness is it's being called what you can do there you already have",
    "start": "571910",
    "end": "577520"
  },
  {
    "text": "to draw a simple line in there and then you add probably that metric to the screen boot that's quite well integrate",
    "start": "577520",
    "end": "584029"
  },
  {
    "text": "into spring and you can translate a drop Wizard metrics to the Java simple lines",
    "start": "584029",
    "end": "590300"
  },
  {
    "text": "and then all the information flows through committees we still have this one URL understand not only providing a",
    "start": "590300",
    "end": "598100"
  },
  {
    "text": "JVM metrics but also the drop wizard metrics that include your information",
    "start": "598100",
    "end": "605270"
  },
  {
    "text": "here and what I did here there is now",
    "start": "605270",
    "end": "611440"
  },
  {
    "text": "I have to enable metrics so I little bit of tweaking for my spring good",
    "start": "612170",
    "end": "618320"
  },
  {
    "text": "application here it has some more proxies here that you probably have anyway and extend another class okay",
    "start": "618320",
    "end": "627170"
  },
  {
    "text": "that's too much of typing but then at all the very places around your",
    "start": "627170",
    "end": "632180"
  },
  {
    "text": "application where you want to gather some timing to put an annotation here and it gathers the epic timings I give",
    "start": "632180",
    "end": "638780"
  },
  {
    "text": "it a name the counter call example this is doing some proper berkeley and in the",
    "start": "638780",
    "end": "644360"
  },
  {
    "text": "end press returns ok the business code stays the same but at this very point i get now all the timers that are around",
    "start": "644360",
    "end": "650990"
  },
  {
    "text": "and it gives me then a metric that",
    "start": "650990",
    "end": "657650"
  },
  {
    "text": "starts with the name that I put into my driver called the counted call example",
    "start": "657650",
    "end": "663170"
  },
  {
    "text": "it gives me some timings here is 75% percentile and 92 98 percentile so yeah",
    "start": "663170",
    "end": "673460"
  },
  {
    "text": "so I know about how how long this takes on average and so yeah let's do some",
    "start": "673460",
    "end": "680630"
  },
  {
    "text": "load testing on that as well I'm please do ask questions if you want",
    "start": "680630",
    "end": "689080"
  },
  {
    "text": "okay so you you're asking your in Java EE what to recommend while the driver",
    "start": "690700",
    "end": "699920"
  },
  {
    "text": "Dre BM metrics that are easy that they will just come out I thought that I",
    "start": "699920",
    "end": "707330"
  },
  {
    "text": "should look that up yeah a dry mix exporter could help but you want to get",
    "start": "707330",
    "end": "713420"
  },
  {
    "text": "tying some special metrics on special places around that you could do an",
    "start": "713420",
    "end": "720350"
  },
  {
    "text": "intercept well I have to look it up so I'm not prepared for Javy not anymore sorry I used to do some lots of Java",
    "start": "720350",
    "end": "726830"
  },
  {
    "text": "stuff but I'm currently doing spring that's why I'm prepared to spring",
    "start": "726830",
    "end": "731980"
  },
  {
    "text": "[Music] so I run the test here",
    "start": "732880",
    "end": "744459"
  },
  {
    "text": "and I go back to my my dashboard to many browsers in this local area and I now",
    "start": "745810",
    "end": "754149"
  },
  {
    "text": "get the dashboard where I can see the",
    "start": "754149",
    "end": "759579"
  },
  {
    "text": "latency of of the calls and I can get myself a dashboard on that one and also",
    "start": "759579",
    "end": "767410"
  },
  {
    "text": "the number of let's see how many other metrics we get around here counted calls",
    "start": "767410",
    "end": "774300"
  },
  {
    "text": "Oh and this shows you also the",
    "start": "782190",
    "end": "788990"
  },
  {
    "text": "documentation that there is or basically not is because all these metrics are converted from drop wizard we're kind of",
    "start": "788990",
    "end": "794720"
  },
  {
    "text": "losing a documentation that you had their account here from the name Ike I",
    "start": "794720",
    "end": "801649"
  },
  {
    "text": "know what it is but it doesn't give you all the other help information that you usually get from a proper Prometheus",
    "start": "801649",
    "end": "807410"
  },
  {
    "text": "exported so if concept snapshots one",
    "start": "807410",
    "end": "813350"
  },
  {
    "text": "minute rate all the information I can call to my dashboards all right",
    "start": "813350",
    "end": "821170"
  },
  {
    "text": "I don't know if you've ever come across circuit breakers so if you built an",
    "start": "824540",
    "end": "831079"
  },
  {
    "text": "application and you call another service or you want to make sure that if you",
    "start": "831079",
    "end": "836120"
  },
  {
    "text": "call an external interface that you in your own application have a proper time out that it's turns within which the",
    "start": "836120",
    "end": "843199"
  },
  {
    "text": "decor returns within a reasonable time with the timeout if you also have bulkheads orchids meaning that you don't",
    "start": "843199",
    "end": "849620"
  },
  {
    "text": "trigger too many parallel requests and if you limit it to ten the eleventh",
    "start": "849620",
    "end": "854750"
  },
  {
    "text": "request will return with a failure to don't overload the other service if it's just slow what you can do here there's",
    "start": "854750",
    "end": "863300"
  },
  {
    "text": "another driver annotation here called hystrix command so this annotation just",
    "start": "863300",
    "end": "870380"
  },
  {
    "text": "works with spring but-- but if you do it manually without an annotation you can make usage of history in java",
    "start": "870380",
    "end": "877399"
  },
  {
    "text": "environment as well and so it gives you",
    "start": "877399",
    "end": "882829"
  },
  {
    "text": "lots of well information here like how many times get you call that exact external interface how many of these",
    "start": "882829",
    "end": "889639"
  },
  {
    "text": "calls work successful how many exceptions have been thrown what's the latency with all the percentiles that we've just seen and",
    "start": "889639",
    "end": "898300"
  },
  {
    "text": "then you can do this this rate and put it on on dashboard so I haven't have to",
    "start": "898300",
    "end": "908569"
  },
  {
    "text": "pair that as well so let's take this test here",
    "start": "908569",
    "end": "914949"
  },
  {
    "text": "put some dough to my soda",
    "start": "918790",
    "end": "922110"
  },
  {
    "text": "and this now gives a district airport with all with both the counts and the",
    "start": "924750",
    "end": "931440"
  },
  {
    "text": "lighting scenes in one diagram I don't know if it's really useful but it's helpful for this talk is two x's one on",
    "start": "931440",
    "end": "939480"
  },
  {
    "text": "the left one on the right and when you now have this diagram you can either",
    "start": "939480",
    "end": "945350"
  },
  {
    "text": "somebody who is interested how this the case is performing in production you can",
    "start": "945350",
    "end": "950540"
  },
  {
    "text": "find out if your application slow because your peers are slow or are you",
    "start": "950540",
    "end": "957209"
  },
  {
    "text": "slow because well the database is slow or you're just doing too many confusions in Raleigh",
    "start": "957209",
    "end": "962639"
  },
  {
    "text": "so and this gives you a good idea how things are performing with your external",
    "start": "962639",
    "end": "968220"
  },
  {
    "text": "interfaces both in terms of number of calls as also in the number and the",
    "start": "968220",
    "end": "974220"
  },
  {
    "text": "latency that you're getting from that external interface let's see what else we get here so history gives you well",
    "start": "974220",
    "end": "986040"
  },
  {
    "text": "also the information if a circuit breaker is open or closed",
    "start": "986040",
    "end": "990620"
  },
  {
    "text": "so circuit breaker being when too many errors occur it will switch off that interface and then you want to monitor",
    "start": "991250",
    "end": "997769"
  },
  {
    "text": "that and probably alert on that as well that a an external interface has been",
    "start": "997769",
    "end": "1002870"
  },
  {
    "text": "cut off automatically the good thing is that it will we end able the medically after given amount of time yeah it also",
    "start": "1002870",
    "end": "1011750"
  },
  {
    "text": "uses thread pools and semaphore so you can monitor here as well and also the different states of what can go wrong",
    "start": "1011750",
    "end": "1019459"
  },
  {
    "text": "how many how many four legs have been",
    "start": "1019459",
    "end": "1024589"
  },
  {
    "text": "triggered for the various commands that you have they will be visible in here and gives you metrics in your dashboards",
    "start": "1024589",
    "end": "1032288"
  },
  {
    "text": "again well this actually these are now proper Prometheus metrics so they come",
    "start": "1032289",
    "end": "1039890"
  },
  {
    "text": "all with an proper health text and this is the SoundCloud history exporter but",
    "start": "1039890",
    "end": "1047418"
  },
  {
    "text": "there is just it's a pity that has not yet been released on maven central so that but you can just compile it",
    "start": "1047419",
    "end": "1054740"
  },
  {
    "text": "yourself maybe even put it into your project as a module and work with it hopefully we",
    "start": "1054740",
    "end": "1062730"
  },
  {
    "text": "will soon have it in simple exporter as a module that you can put it in and use",
    "start": "1062730",
    "end": "1068820"
  },
  {
    "text": "it like any other exporter as well hopefully our time over the next weekend to do a pull request on on the original",
    "start": "1068820",
    "end": "1075840"
  },
  {
    "text": "project so but there is a one thing in here let's call B where there's no there",
    "start": "1075840",
    "end": "1083730"
  },
  {
    "text": "there are histograms here I can have these % house but there are no Prometheus style histograms who has",
    "start": "1083730",
    "end": "1092040"
  },
  {
    "text": "worked with Prometheus stars histograms before not too many all right the thing",
    "start": "1092040",
    "end": "1098130"
  },
  {
    "text": "is this gives you the latency of one application instance running and at some",
    "start": "1098130",
    "end": "1104820"
  },
  {
    "text": "point you want to aggregate these Layton sees over several instances of your application and you can't really if it's",
    "start": "1104820",
    "end": "1112680"
  },
  {
    "text": "already calculated to these 90% we can't really aggravate that over several nodes",
    "start": "1112680",
    "end": "1118620"
  },
  {
    "text": "and real Prometheus histogram will then",
    "start": "1118620",
    "end": "1126210"
  },
  {
    "text": "deliver the raw data to Prometheus so you can do proper calculations over list",
    "start": "1126210",
    "end": "1135210"
  },
  {
    "text": "of nodes and then detect outliers a bit more about doing so then but then if you",
    "start": "1135210",
    "end": "1140910"
  },
  {
    "text": "just want to have this the metric set of form for a single node you can register",
    "start": "1140910",
    "end": "1147360"
  },
  {
    "text": "the district's Prometheus metrics publisher and put an annotation on every",
    "start": "1147360",
    "end": "1153980"
  },
  {
    "text": "external or every method that is wrapping an external service call and then you have all these timeouts and",
    "start": "1153980",
    "end": "1160410"
  },
  {
    "text": "bulkheads and the metrics that you can export and if you're not using spring you can do a wrapper class for that",
    "start": "1160410",
    "end": "1168120"
  },
  {
    "text": "proper up ourselves and don't need an annotation and we'll do the same for you",
    "start": "1168120",
    "end": "1173720"
  },
  {
    "text": "scripts all right this is going to be",
    "start": "1177480",
    "end": "1184870"
  },
  {
    "text": "the next slide I have a sample for that um hopefully in the next few weeks be a pull request for that because I think",
    "start": "1184870",
    "end": "1190779"
  },
  {
    "text": "they just give it a rough start and just exported metrics that hystrix has inside",
    "start": "1190779",
    "end": "1197380"
  },
  {
    "text": "for deciding about so this race is collecting the metrics inside anyway and",
    "start": "1197380",
    "end": "1203799"
  },
  {
    "text": "did one but we want to run exporting these metrics to Prometheus but they are not not meant to be aggregated like",
    "start": "1203799",
    "end": "1210039"
  },
  {
    "text": "Prometheus once they're to do so if you want to do real histogram here so yes",
    "start": "1210039",
    "end": "1220090"
  },
  {
    "text": "you had this annotation so that history is enabled and this histogram it looks",
    "start": "1220090",
    "end": "1228250"
  },
  {
    "text": "like this line here down here like you do a histogram quintile for 95% and then",
    "start": "1228250",
    "end": "1234250"
  },
  {
    "text": "sum it up over some nodes and force for the commands that you're interested in and that's the real Prometheus histogram",
    "start": "1234250",
    "end": "1241179"
  },
  {
    "text": "that you want to use and the adapter that they called admitting content is missing today and that will there be",
    "start": "1241179",
    "end": "1247120"
  },
  {
    "text": "that will be there in future hopefully you can hook into history and that's the",
    "start": "1247120",
    "end": "1255549"
  },
  {
    "text": "lower part here and hook into the stream",
    "start": "1255549",
    "end": "1263950"
  },
  {
    "text": "that tells you about every executed command of history and with once each of",
    "start": "1263950",
    "end": "1270850"
  },
  {
    "text": "these has completed for various reasons you just update your histogram and then",
    "start": "1270850",
    "end": "1276100"
  },
  {
    "text": "you it will be probably exported like today you have to do it yourself",
    "start": "1276100",
    "end": "1283059"
  },
  {
    "text": "maybe yeah maybe somebody contacts me afterwards and we do it together I don't know I'm happy to share what",
    "start": "1283059",
    "end": "1290120"
  },
  {
    "text": "I've done so far so let's see",
    "start": "1290120",
    "end": "1295720"
  },
  {
    "text": "[Music] and then the proper that the garbage",
    "start": "1295720",
    "end": "1301370"
  },
  {
    "text": "collects and the proper histogram export",
    "start": "1301370",
    "end": "1308630"
  },
  {
    "text": "looks like this where you have like less or equal than that timing in this case",
    "start": "1308630",
    "end": "1314179"
  },
  {
    "text": "you have that number of calls and the longer you get the more calls fall into",
    "start": "1314179",
    "end": "1320120"
  },
  {
    "text": "these there's culminated packet kind of and you have the total number of calls that is usually equal to that course and",
    "start": "1320120",
    "end": "1326320"
  },
  {
    "text": "you have also the the total XE to execution time and this is a real basic",
    "start": "1326320",
    "end": "1333770"
  },
  {
    "text": "gram that you can extract on that then you can aggregate over several commands over several nodes the same command and",
    "start": "1333770",
    "end": "1340520"
  },
  {
    "text": "or compare one node with other nodes how they perform is that external interface and like the things you like to do with",
    "start": "1340520",
    "end": "1347600"
  },
  {
    "text": "Prometheus and also do I have to turn",
    "start": "1347600",
    "end": "1354590"
  },
  {
    "text": "yesterday when the current Java JVM",
    "start": "1354590",
    "end": "1359690"
  },
  {
    "text": "exporter doesn't or only exports the CPU ii issues for garbage collection",
    "start": "1359690",
    "end": "1365720"
  },
  {
    "text": "it doesn't one it doesn't group in that",
    "start": "1365720",
    "end": "1370880"
  },
  {
    "text": "in a histogram like that and i yeah and this this code is also prepared on the",
    "start": "1370880",
    "end": "1376130"
  },
  {
    "text": "laptop locally and there going to be a pull request that you get a histogram for the garbage collection so we can find the outliers and yeah and",
    "start": "1376130",
    "end": "1384270"
  },
  {
    "text": "[Music] you're welcome and so it looks then like this that you see how many garbage",
    "start": "1384270",
    "end": "1390610"
  },
  {
    "text": "collections have been done and then you can do well whatever you're doing with so Prometheus a so right so we are now",
    "start": "1390610",
    "end": "1401980"
  },
  {
    "text": "been diving into how to ride your own collectors and let's see a vm garbage",
    "start": "1401980",
    "end": "1411100"
  },
  {
    "text": "collection metrics this is how that code looks like let's see if it fits on the slide you you extend the class define",
    "start": "1411100",
    "end": "1420549"
  },
  {
    "text": "the labels that you usually want to have on that for example garbage collection that's the X from the course and the garbage",
    "start": "1420549",
    "end": "1426879"
  },
  {
    "text": "collection type you're running on and the buckets that are the default buckets are just put in here for we are to have",
    "start": "1426879",
    "end": "1433929"
  },
  {
    "text": "them ready and read for the buckets are you construct a histogram here and once",
    "start": "1433929",
    "end": "1441730"
  },
  {
    "text": "there is a garbage collection you subscribe to that event like we've seen with hystrix ones and yeah and then you",
    "start": "1441730",
    "end": "1451960"
  },
  {
    "text": "collect them at the very end and you're kind of done and",
    "start": "1451960",
    "end": "1459450"
  },
  {
    "text": "don't so if you not using any",
    "start": "1460350",
    "end": "1466150"
  },
  {
    "text": "annotations and you want to do native Prometheus metrics that's the way you",
    "start": "1466150",
    "end": "1471520"
  },
  {
    "text": "can do that it's simple classes that you had to need to trigger counters now and",
    "start": "1471520",
    "end": "1477520"
  },
  {
    "text": "then interceptors would be nicer but it depends on your environment enlighted memory all right so that's real",
    "start": "1477520",
    "end": "1487210"
  },
  {
    "text": "histograms I was a bit surprised that I didn't get proper statistics for spring",
    "start": "1487210",
    "end": "1494049"
  },
  {
    "text": "but-- regarding databases so i wrote my own tomcod statistics collector for the",
    "start": "1494049",
    "end": "1500399"
  },
  {
    "text": "ftp things than the andy databases so when it comes to Tomcat you want to know",
    "start": "1500399",
    "end": "1509730"
  },
  {
    "text": "how many threads are used how many connections are busy how many",
    "start": "1509730",
    "end": "1514899"
  },
  {
    "text": "connections are open an idle almost the same with the database but then again",
    "start": "1514899",
    "end": "1520630"
  },
  {
    "text": "it's a driver class like we'd like we've seen for the for the whole drive en you",
    "start": "1520630",
    "end": "1527980"
  },
  {
    "text": "extend collector class Rider collecting and then you hand over some metrics from",
    "start": "1527980",
    "end": "1535480"
  },
  {
    "text": "the data source that's the other thing in this case there's a bit different than the Java Virtual Machine garbage",
    "start": "1535480",
    "end": "1542049"
  },
  {
    "text": "collection we've seen before there we had the histogram created early and then",
    "start": "1542049",
    "end": "1548020"
  },
  {
    "text": "we updated that all the time here we taking some values out of all the data",
    "start": "1548020",
    "end": "1553600"
  },
  {
    "text": "so just some counters and housing right so well that's the end of spring",
    "start": "1553600",
    "end": "1562499"
  },
  {
    "text": "boot I'm just wondering who's running vertex right to view right it's fun",
    "start": "1562499",
    "end": "1569429"
  },
  {
    "text": "right sometimes some issues sorry yeah",
    "start": "1569429",
    "end": "1575070"
  },
  {
    "text": "and sometimes you want to just figure out what's going wrong and which way is going so we're take there's an embedded",
    "start": "1575070",
    "end": "1585119"
  },
  {
    "text": "in event bus make you run different verticals on vertex and they have an",
    "start": "1585119",
    "end": "1590759"
  },
  {
    "text": "event loop and they run on different threads and they communicate beta t using in event bus and what you develop",
    "start": "1590759",
    "end": "1598559"
  },
  {
    "text": "is vertex it's it's an HTTP server maybe you can do custom protocols if you want",
    "start": "1598559",
    "end": "1604889"
  },
  {
    "text": "to that's something I'm doing and you just want to know how many sockets are open the usual stuff and again let's do",
    "start": "1604889",
    "end": "1616289"
  },
  {
    "text": "another load testing on this",
    "start": "1616289",
    "end": "1620990"
  },
  {
    "text": "oh yeah here we go so vertex is now getting busy and I want to know all",
    "start": "1633120",
    "end": "1638760"
  },
  {
    "text": "about the HTTP requests so second and the open networking sockets and if I go",
    "start": "1638760",
    "end": "1646140"
  },
  {
    "text": "into editing here I have a request rate is just a request count I can get from",
    "start": "1646140",
    "end": "1652620"
  },
  {
    "text": "the HTTP server that's embedded into vertex and the number of open net sockets yeah just a variable passed on",
    "start": "1652620",
    "end": "1659670"
  },
  {
    "text": "to the export here so right so how do we",
    "start": "1659670",
    "end": "1664710"
  },
  {
    "text": "tell vertex to be that grateful to us to",
    "start": "1664710",
    "end": "1669840"
  },
  {
    "text": "give us all this metrics so on there yeah - - and how things to do during the",
    "start": "1669840",
    "end": "1678480"
  },
  {
    "text": "setup when you start of your vertex instance you're giving some metrics options and the vertex is been",
    "start": "1678480",
    "end": "1684510"
  },
  {
    "text": "originally designed for droplet metrics so you pass on a drop wizard metrics",
    "start": "1684510",
    "end": "1690540"
  },
  {
    "text": "option and registry name and then when",
    "start": "1690540",
    "end": "1696450"
  },
  {
    "text": "you after you get then you initialize the default exports and then you pass onto the driver simple client that is",
    "start": "1696450",
    "end": "1703680"
  },
  {
    "text": "then converting the drop wizard metrics to Prometheus you look up in this shared",
    "start": "1703680",
    "end": "1711660"
  },
  {
    "text": "metrics registry that vertex registry that you just created up here and you",
    "start": "1711660",
    "end": "1717420"
  },
  {
    "text": "don't and while you're done with",
    "start": "1717420",
    "end": "1723030"
  },
  {
    "text": "collecting all the metrics you just have to export them in an HTTP server that's the second step not in the server but a",
    "start": "1723030",
    "end": "1730680"
  },
  {
    "text": "matrix handler as it's called an in the vertex world and then you have your",
    "start": "1730680",
    "end": "1735900"
  },
  {
    "text": "metrics for vertex right so here we sing a sample and yeah",
    "start": "1735900",
    "end": "1749180"
  },
  {
    "text": "other thing as I said all the things that we've counted here are about the problem another metric I forgot about",
    "start": "1749180",
    "end": "1754910"
  },
  {
    "text": "you can measure the number of messages in the vertex eventbus that are",
    "start": "1754910",
    "end": "1760510"
  },
  {
    "text": "lingering around and not have not yet been processed so that gives you a bit of the rate of congestion that you have",
    "start": "1760510",
    "end": "1767060"
  },
  {
    "text": "new vertex running here that might be interesting for some up to that might be",
    "start": "1767060",
    "end": "1772190"
  },
  {
    "text": "useful for alerting and well the other one thing that might be useful for alerting is the CPU usage by word from",
    "start": "1772190",
    "end": "1779480"
  },
  {
    "text": "the shrink if that goes high something is wrong and should we look at only",
    "start": "1779480",
    "end": "1784880"
  },
  {
    "text": "other things we've seen so far today they should be from my perspective not",
    "start": "1784880",
    "end": "1790100"
  },
  {
    "text": "be used for alerting just for metrics to dive in and to optimize the system if",
    "start": "1790100",
    "end": "1795950"
  },
  {
    "text": "you want to contradict them please do now",
    "start": "1795950",
    "end": "1799630"
  },
  {
    "text": "all right so well I'm a developer and I",
    "start": "1801330",
    "end": "1806670"
  },
  {
    "text": "say at least for me that it works for me I do lots of load testing and instrument",
    "start": "1806670",
    "end": "1812730"
  },
  {
    "text": "my applications with Prometheus and then monitor the dashboards during no tests it's team friendly so if you operating",
    "start": "1812730",
    "end": "1820440"
  },
  {
    "text": "infrastructure please give every developer team their own Prometheus so if they can play around this it's also",
    "start": "1820440",
    "end": "1827430"
  },
  {
    "text": "code and developer friendly well I can put all my configuration in a git repository that's really now nice the",
    "start": "1827430",
    "end": "1834720"
  },
  {
    "text": "only thing that I can't put into a grid properly or is a dashboard there's no DSL I can write in my IDE and",
    "start": "1834720",
    "end": "1842160"
  },
  {
    "text": "commit",
    "start": "1842160",
    "end": "1844550"
  },
  {
    "text": "great there's a project I didn't know about okay use the gamma to describe dashboards thank you very much",
    "start": "1851100",
    "end": "1858710"
  },
  {
    "text": "so now we can probably do to properly do",
    "start": "1858710",
    "end": "1863990"
  },
  {
    "text": "grab the yellow",
    "start": "1863990",
    "end": "1867200"
  },
  {
    "text": "okay now we can do everything in the gate and and well and I really really",
    "start": "1876679",
    "end": "1883499"
  },
  {
    "text": "like the simple setup go to mission alert manager that we know thank you very much for the ones who do the go",
    "start": "1883499",
    "end": "1890850"
  },
  {
    "text": "programming here I can't I have to rely on that thanks a lot that's the end thanks for listening",
    "start": "1890850",
    "end": "1896820"
  },
  {
    "text": "something's and the slides are online already [Applause]",
    "start": "1896820",
    "end": "1907160"
  }
]