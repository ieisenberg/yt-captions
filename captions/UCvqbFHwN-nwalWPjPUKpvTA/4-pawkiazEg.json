[
  {
    "start": "0",
    "end": "111000"
  },
  {
    "text": "hello can everyone hear me",
    "start": "949",
    "end": "4100"
  },
  {
    "text": "excellent okay let's get started so I'm",
    "start": "4100",
    "end": "11190"
  },
  {
    "text": "going to speaking to you about how we",
    "start": "11190",
    "end": "13170"
  },
  {
    "text": "did some research and development into",
    "start": "13170",
    "end": "16440"
  },
  {
    "text": "scaling kubernetes to large numbers of",
    "start": "16440",
    "end": "18779"
  },
  {
    "text": "services why we have a fair number of",
    "start": "18779",
    "end": "23100"
  },
  {
    "text": "very large commercial deployments of",
    "start": "23100",
    "end": "25740"
  },
  {
    "text": "kubernetes and before we could do that",
    "start": "25740",
    "end": "27990"
  },
  {
    "text": "for some of our customers we needed to",
    "start": "27990",
    "end": "29699"
  },
  {
    "text": "do fairly extensive scalability testing",
    "start": "29699",
    "end": "33090"
  },
  {
    "text": "and we found a few bottlenecks which we",
    "start": "33090",
    "end": "34980"
  },
  {
    "text": "result so I thought I would talk to you",
    "start": "34980",
    "end": "37320"
  },
  {
    "text": "a little bit about what we did in this",
    "start": "37320",
    "end": "38460"
  },
  {
    "text": "area most of the hard work here I must",
    "start": "38460",
    "end": "41280"
  },
  {
    "text": "point out was not done by myself at all",
    "start": "41280",
    "end": "43140"
  },
  {
    "text": "but by my colleague Michael who is one",
    "start": "43140",
    "end": "46140"
  },
  {
    "text": "of our senior research network research",
    "start": "46140",
    "end": "48930"
  },
  {
    "text": "engineers in Seattle he unfortunately",
    "start": "48930",
    "end": "52230"
  },
  {
    "text": "could not make it today he's sitting in",
    "start": "52230",
    "end": "53940"
  },
  {
    "text": "Seattle without a visa so the task fell",
    "start": "53940",
    "end": "58590"
  },
  {
    "text": "for me to present his good work it's not",
    "start": "58590",
    "end": "62219"
  },
  {
    "text": "a particularly long talk which is",
    "start": "62219",
    "end": "64378"
  },
  {
    "text": "probably a good thing given that I'm the",
    "start": "64379",
    "end": "67080"
  },
  {
    "text": "only thing standing between you and",
    "start": "67080",
    "end": "68280"
  },
  {
    "text": "kobir at this point so I will take that",
    "start": "68280",
    "end": "70799"
  },
  {
    "text": "responsibility very seriously and there",
    "start": "70799",
    "end": "74130"
  },
  {
    "text": "should be significant time at the end",
    "start": "74130",
    "end": "76380"
  },
  {
    "text": "for questions I think maybe it's easier",
    "start": "76380",
    "end": "78509"
  },
  {
    "text": "if we lead them towards the end but",
    "start": "78509",
    "end": "80970"
  },
  {
    "text": "certainly prepare your questions along",
    "start": "80970",
    "end": "83610"
  },
  {
    "text": "the way we should have a good ten",
    "start": "83610",
    "end": "85409"
  },
  {
    "text": "minutes or so at the end all right with",
    "start": "85409",
    "end": "87630"
  },
  {
    "text": "no further ado so what we'll be talking",
    "start": "87630",
    "end": "90540"
  },
  {
    "text": "about as I mentioned before challenges",
    "start": "90540",
    "end": "92850"
  },
  {
    "text": "that we hit while trying to scale",
    "start": "92850",
    "end": "94740"
  },
  {
    "text": "services in particular in the topic of",
    "start": "94740",
    "end": "96479"
  },
  {
    "text": "this talk what solutions we dreamt up",
    "start": "96479",
    "end": "99270"
  },
  {
    "text": "and considered and some of which we",
    "start": "99270",
    "end": "101250"
  },
  {
    "text": "implemented in prototypes to come up",
    "start": "101250",
    "end": "103710"
  },
  {
    "text": "with some analytical data to figure out",
    "start": "103710",
    "end": "107009"
  },
  {
    "text": "what the best solution was and we'll",
    "start": "107009",
    "end": "109560"
  },
  {
    "text": "have some Q&A at the end so first of all",
    "start": "109560",
    "end": "112350"
  },
  {
    "start": "111000",
    "end": "111000"
  },
  {
    "text": "not all of you are necessarily that",
    "start": "112350",
    "end": "114630"
  },
  {
    "text": "familiar with the way kubernetes",
    "start": "114630",
    "end": "117799"
  },
  {
    "text": "internal cluster service load balancing",
    "start": "117799",
    "end": "120869"
  },
  {
    "text": "works so we'll just go over that so",
    "start": "120869",
    "end": "122780"
  },
  {
    "text": "you've probably familiar with having",
    "start": "122780",
    "end": "124680"
  },
  {
    "text": "kubernetes master inside the master we",
    "start": "124680",
    "end": "126990"
  },
  {
    "text": "have an API server",
    "start": "126990",
    "end": "128610"
  },
  {
    "text": "tralala manager scheduler HCD persistent",
    "start": "128610",
    "end": "131400"
  },
  {
    "text": "store etc and then we have the the nodes",
    "start": "131400",
    "end": "133920"
  },
  {
    "text": "each of which have a bunch of agents",
    "start": "133920",
    "end": "137460"
  },
  {
    "text": "running on them one of which is Q proxy",
    "start": "137460",
    "end": "140010"
  },
  {
    "text": "to proxy essentially programs of local",
    "start": "140010",
    "end": "143130"
  },
  {
    "text": "load balancer on each node and that then",
    "start": "143130",
    "end": "146580"
  },
  {
    "text": "load balances to the pods so a couple of",
    "start": "146580",
    "end": "151380"
  },
  {
    "text": "problems first of all all of the control",
    "start": "151380",
    "end": "156330"
  },
  {
    "text": "plane related stuff has potential",
    "start": "156330",
    "end": "158910"
  },
  {
    "text": "bottlenecks involved in it and then once",
    "start": "158910",
    "end": "161040"
  },
  {
    "text": "we have deployed the load balancers that",
    "start": "161040",
    "end": "165330"
  },
  {
    "text": "the traffic obviously needs to flow",
    "start": "165330",
    "end": "166680"
  },
  {
    "text": "through these things and there are",
    "start": "166680",
    "end": "167730"
  },
  {
    "text": "performance issues there too so",
    "start": "167730",
    "end": "170820"
  },
  {
    "text": "deploying services and pods is potential",
    "start": "170820",
    "end": "172830"
  },
  {
    "text": "scalability bottleneck propagating",
    "start": "172830",
    "end": "174900"
  },
  {
    "text": "endpoints so endpoints of the you know",
    "start": "174900",
    "end": "177870"
  },
  {
    "text": "final IP addresses that the traffic ends",
    "start": "177870",
    "end": "180330"
  },
  {
    "text": "up at after load balancing these",
    "start": "180330",
    "end": "182400"
  },
  {
    "text": "obviously change over time when your",
    "start": "182400",
    "end": "183959"
  },
  {
    "text": "pods are deployed or torn down all the",
    "start": "183959",
    "end": "188010"
  },
  {
    "text": "changes to these endpoints need to be",
    "start": "188010",
    "end": "189510"
  },
  {
    "text": "propagated to all nodes in a cluster and",
    "start": "189510",
    "end": "192630"
  },
  {
    "text": "then the actual data plane itself we",
    "start": "192630",
    "end": "196860"
  },
  {
    "text": "need to add and remove services to the",
    "start": "196860",
    "end": "198720"
  },
  {
    "text": "load balancers on each node in some",
    "start": "198720",
    "end": "201750"
  },
  {
    "text": "configurations as IP tables we'll talk a",
    "start": "201750",
    "end": "204180"
  },
  {
    "text": "little bit about exactly what the",
    "start": "204180",
    "end": "205709"
  },
  {
    "text": "challenges are there and then accessing",
    "start": "205709",
    "end": "207989"
  },
  {
    "text": "the services themselves each packet in",
    "start": "207989",
    "end": "210510"
  },
  {
    "text": "your network stream needs to Traverse",
    "start": "210510",
    "end": "213030"
  },
  {
    "text": "some sort of rules which determine where",
    "start": "213030",
    "end": "215730"
  },
  {
    "text": "it gets load balance to and these can",
    "start": "215730",
    "end": "217860"
  },
  {
    "text": "also incur performance problems diving",
    "start": "217860",
    "end": "223980"
  },
  {
    "text": "into the control plane a little bit",
    "start": "223980",
    "end": "225299"
  },
  {
    "text": "further when a service gets deployed it",
    "start": "225299",
    "end": "230310"
  },
  {
    "text": "gets stored in sed by the API server",
    "start": "230310",
    "end": "232500"
  },
  {
    "text": "that then triggers the endpoints",
    "start": "232500",
    "end": "234870"
  },
  {
    "text": "controller which then creates endpoints",
    "start": "234870",
    "end": "237299"
  },
  {
    "text": "are also persisted in sed by the API",
    "start": "237299",
    "end": "240750"
  },
  {
    "text": "server these are then picked up by all",
    "start": "240750",
    "end": "243390"
  },
  {
    "text": "of the nodes which listens the cubelet",
    "start": "243390",
    "end": "247019"
  },
  {
    "text": "on each node X or sorry Q proxy and each",
    "start": "247019",
    "end": "248910"
  },
  {
    "text": "node listens against the endpoint lists",
    "start": "248910",
    "end": "252480"
  },
  {
    "text": "and updates its local load balancer",
    "start": "252480",
    "end": "255360"
  },
  {
    "text": "accordingly",
    "start": "255360",
    "end": "256039"
  },
  {
    "text": "then whenever we schedule pubs we",
    "start": "256039",
    "end": "259890"
  },
  {
    "text": "obviously create a part in the API",
    "start": "259890",
    "end": "262419"
  },
  {
    "text": "this again will trigger a change to the",
    "start": "262419",
    "end": "265689"
  },
  {
    "text": "input where the influence controller",
    "start": "265689",
    "end": "267039"
  },
  {
    "text": "will then pick that up create or remove",
    "start": "267039",
    "end": "269889"
  },
  {
    "text": "whatever endpoints might be necessary",
    "start": "269889",
    "end": "271330"
  },
  {
    "text": "which again same old story gets",
    "start": "271330",
    "end": "273879"
  },
  {
    "text": "propagated down to all of the nodes so",
    "start": "273879",
    "end": "276819"
  },
  {
    "text": "it doesn't take too much complicated",
    "start": "276819",
    "end": "279159"
  },
  {
    "text": "math to work out that if you have n",
    "start": "279159",
    "end": "281379"
  },
  {
    "text": "nodes in every cluster and you are",
    "start": "281379",
    "end": "283689"
  },
  {
    "text": "trying to schedule some number of pods",
    "start": "283689",
    "end": "285849"
  },
  {
    "text": "per second the QPS against the API",
    "start": "285849",
    "end": "289719"
  },
  {
    "text": "server is n times n that's how many",
    "start": "289719",
    "end": "293469"
  },
  {
    "text": "endpoints per sorry yes that's how many",
    "start": "293469",
    "end": "295689"
  },
  {
    "text": "endpoints per second",
    "start": "295689",
    "end": "297069"
  },
  {
    "text": "are created against the API server so",
    "start": "297069",
    "end": "302319"
  },
  {
    "text": "just to make that a little bit more",
    "start": "302319",
    "end": "304120"
  },
  {
    "text": "concrete you create services so many of",
    "start": "304120",
    "end": "307990"
  },
  {
    "text": "you have done this before",
    "start": "307990",
    "end": "309250"
  },
  {
    "text": "the structure on the Left gives you an",
    "start": "309250",
    "end": "311409"
  },
  {
    "text": "idea of what those things look like they",
    "start": "311409",
    "end": "313300"
  },
  {
    "text": "specify things like ports protocols etc",
    "start": "313300",
    "end": "316500"
  },
  {
    "text": "selectors for which pods form part of",
    "start": "316500",
    "end": "320740"
  },
  {
    "text": "this service you get a cluster IP",
    "start": "320740",
    "end": "323499"
  },
  {
    "text": "allocated to your service and then on",
    "start": "323499",
    "end": "326680"
  },
  {
    "text": "the right hand side this generates a set",
    "start": "326680",
    "end": "329740"
  },
  {
    "text": "of endpoints addresses where that",
    "start": "329740",
    "end": "332589"
  },
  {
    "text": "traffic will be load balanced to and",
    "start": "332589",
    "end": "334689"
  },
  {
    "text": "that's the job of the endpoint",
    "start": "334689",
    "end": "335830"
  },
  {
    "text": "controller that we mentioned earlier you",
    "start": "335830",
    "end": "338649"
  },
  {
    "text": "can see that that structure on the right",
    "start": "338649",
    "end": "340750"
  },
  {
    "text": "is not insignificant in size and can",
    "start": "340750",
    "end": "343719"
  },
  {
    "text": "explode pretty quickly if you have very",
    "start": "343719",
    "end": "345399"
  },
  {
    "text": "large numbers of services and very large",
    "start": "345399",
    "end": "347349"
  },
  {
    "text": "numbers of pods in those services and",
    "start": "347349",
    "end": "350020"
  },
  {
    "text": "that that is the thing that gets",
    "start": "350020",
    "end": "351310"
  },
  {
    "text": "propagated down to all of the nodes in",
    "start": "351310",
    "end": "353139"
  },
  {
    "text": "the cluster which you know as per the",
    "start": "353139",
    "end": "355449"
  },
  {
    "text": "announcement day before yesterday I",
    "start": "355449",
    "end": "357580"
  },
  {
    "text": "guess we're scaling to 5,000 clusters",
    "start": "357580",
    "end": "359500"
  },
  {
    "text": "these days 35,000 nodes per cluster so",
    "start": "359500",
    "end": "362139"
  },
  {
    "text": "that can be a pretty significant",
    "start": "362139",
    "end": "364800"
  },
  {
    "text": "performance challenge and then so not",
    "start": "364800",
    "end": "373120"
  },
  {
    "text": "only do you have QPS but the size of",
    "start": "373120",
    "end": "375099"
  },
  {
    "text": "each one of those queries varies",
    "start": "375099",
    "end": "376599"
  },
  {
    "text": "depending on the number of endpoints",
    "start": "376599",
    "end": "377979"
  },
  {
    "text": "that you have and in particular that the",
    "start": "377979",
    "end": "380379"
  },
  {
    "text": "measured load against the API server is",
    "start": "380379",
    "end": "383229"
  },
  {
    "text": "actually the product of the number of",
    "start": "383229",
    "end": "385479"
  },
  {
    "text": "nodes the number of endpoints squared",
    "start": "385479",
    "end": "388800"
  },
  {
    "text": "sorry the number of pods with",
    "start": "388800",
    "end": "390930"
  },
  {
    "text": "essentially so you can see that that can",
    "start": "390930",
    "end": "394180"
  },
  {
    "text": "pretty quickly get out of hand in",
    "start": "394180",
    "end": "395889"
  },
  {
    "start": "395000",
    "end": "395000"
  },
  {
    "text": "clusters with large numbers of services",
    "start": "395889",
    "end": "398889"
  },
  {
    "text": "so we kind of brainstormed a few",
    "start": "398889",
    "end": "401500"
  },
  {
    "text": "different approaches to solving the",
    "start": "401500",
    "end": "402939"
  },
  {
    "text": "control plane alternatives solutions we",
    "start": "402939",
    "end": "406449"
  },
  {
    "text": "can partition the endpoints into",
    "start": "406449",
    "end": "408610"
  },
  {
    "text": "multiple objects this you know fairly",
    "start": "408610",
    "end": "410979"
  },
  {
    "text": "obviously has some pros and cons you",
    "start": "410979",
    "end": "412599"
  },
  {
    "text": "reduce the number of the size of the",
    "start": "412599",
    "end": "414370"
  },
  {
    "text": "endpoints but you increase the number of",
    "start": "414370",
    "end": "416560"
  },
  {
    "text": "objects so the net savings is not very",
    "start": "416560",
    "end": "418620"
  },
  {
    "text": "significant you can also create a",
    "start": "418620",
    "end": "422169"
  },
  {
    "text": "centralized load balancer so instead of",
    "start": "422169",
    "end": "424210"
  },
  {
    "text": "having to propagate these changes to all",
    "start": "424210",
    "end": "426490"
  },
  {
    "text": "of the nodes you could potentially",
    "start": "426490",
    "end": "428800"
  },
  {
    "text": "create one or more load balancers inside",
    "start": "428800",
    "end": "431289"
  },
  {
    "text": "the cluster and then thereby reduce the",
    "start": "431289",
    "end": "433960"
  },
  {
    "text": "number of endpoints that need to be",
    "start": "433960",
    "end": "435900"
  },
  {
    "text": "propagated to the load balancers clearly",
    "start": "435900",
    "end": "440650"
  },
  {
    "text": "this reduces the number of connections",
    "start": "440650",
    "end": "442210"
  },
  {
    "text": "and requests against the API server but",
    "start": "442210",
    "end": "444759"
  },
  {
    "text": "it introduces an extra hop in your",
    "start": "444759",
    "end": "447810"
  },
  {
    "text": "traffic routing you need these things to",
    "start": "447810",
    "end": "451000"
  },
  {
    "text": "be highly available if you only had a",
    "start": "451000",
    "end": "452740"
  },
  {
    "text": "single one of these load balancers",
    "start": "452740",
    "end": "454509"
  },
  {
    "text": "obviously if it went down all of the",
    "start": "454509",
    "end": "455740"
  },
  {
    "text": "services in your cluster would go down",
    "start": "455740",
    "end": "457259"
  },
  {
    "text": "that turns out to be you know non",
    "start": "457259",
    "end": "459789"
  },
  {
    "text": "severely difficult and perhaps most",
    "start": "459789",
    "end": "463509"
  },
  {
    "text": "importantly the scalability of that is",
    "start": "463509",
    "end": "466150"
  },
  {
    "text": "kind of difficult because you know as",
    "start": "466150",
    "end": "468310"
  },
  {
    "text": "you have more services or more service",
    "start": "468310",
    "end": "469900"
  },
  {
    "text": "traffic you need to deploy more of these",
    "start": "469900",
    "end": "472150"
  },
  {
    "text": "load balancers and manage them etc now",
    "start": "472150",
    "end": "474430"
  },
  {
    "text": "kubernetes clearly can make that a lot",
    "start": "474430",
    "end": "476169"
  },
  {
    "text": "easier for you however if you just have",
    "start": "476169",
    "end": "479620"
  },
  {
    "text": "a load balancer on every single node",
    "start": "479620",
    "end": "481089"
  },
  {
    "text": "that kind of scales naturally in",
    "start": "481089",
    "end": "484210"
  },
  {
    "text": "accordance with the amount of activity",
    "start": "484210",
    "end": "486370"
  },
  {
    "text": "going on in your cluster so that seems",
    "start": "486370",
    "end": "488949"
  },
  {
    "text": "like a nicer solution a third option",
    "start": "488949",
    "end": "492849"
  },
  {
    "text": "that we considered was batching the",
    "start": "492849",
    "end": "495219"
  },
  {
    "text": "updates so rather than triggering",
    "start": "495219",
    "end": "496779"
  },
  {
    "text": "updates on every single endpoint change",
    "start": "496779",
    "end": "499300"
  },
  {
    "text": "we could batch those at some periodicity",
    "start": "499300",
    "end": "503129"
  },
  {
    "text": "and therefore you know reduce the total",
    "start": "503129",
    "end": "505629"
  },
  {
    "text": "amount of traffic against the API server",
    "start": "505629",
    "end": "510300"
  },
  {
    "text": "the obvious downside of that is",
    "start": "511320",
    "end": "514060"
  },
  {
    "text": "depending on what you've said the",
    "start": "514060",
    "end": "515649"
  },
  {
    "text": "periodicity of your batching to you can",
    "start": "515649",
    "end": "517599"
  },
  {
    "text": "end up introducing latency into the",
    "start": "517599",
    "end": "520360"
  },
  {
    "text": "updates to the load balancer",
    "start": "520360",
    "end": "523469"
  },
  {
    "text": "see what interesting things we have here",
    "start": "526199",
    "end": "528699"
  },
  {
    "text": "so so in that way we you know we reduce",
    "start": "528699",
    "end": "531220"
  },
  {
    "text": "the load against the API server to no",
    "start": "531220",
    "end": "533589"
  },
  {
    "text": "longer be proportional to the square of",
    "start": "533589",
    "end": "535689"
  },
  {
    "text": "the number of pods but still n times m",
    "start": "535689",
    "end": "538329"
  },
  {
    "text": "and the QPS",
    "start": "538329",
    "end": "541089"
  },
  {
    "text": "similarly gets reduced to end but order",
    "start": "541089",
    "end": "544779"
  },
  {
    "text": "again per second so let's have a look at",
    "start": "544779",
    "end": "548439"
  },
  {
    "start": "546000",
    "end": "546000"
  },
  {
    "text": "some of the data that we gathered and",
    "start": "548439",
    "end": "550449"
  },
  {
    "text": "the process here we had a basic set up",
    "start": "550449",
    "end": "552879"
  },
  {
    "text": "with the master for slaves the details",
    "start": "552879",
    "end": "555910"
  },
  {
    "text": "are they're not particularly interesting",
    "start": "555910",
    "end": "557860"
  },
  {
    "text": "but what we did do by introducing a",
    "start": "557860",
    "end": "560999"
  },
  {
    "text": "half-second batching delay we reduced",
    "start": "560999",
    "end": "564129"
  },
  {
    "text": "the QPS in our tests by 98% so that was",
    "start": "564129",
    "end": "567639"
  },
  {
    "text": "pretty cool and if you look at the graph",
    "start": "567639",
    "end": "570610"
  },
  {
    "text": "at the bottom and that's for a",
    "start": "570610",
    "end": "571899"
  },
  {
    "text": "relatively small number of services you",
    "start": "571899",
    "end": "574689"
  },
  {
    "text": "can see that our optimized system at the",
    "start": "574689",
    "end": "577569"
  },
  {
    "text": "bar bottom the red line is pretty much",
    "start": "577569",
    "end": "579939"
  },
  {
    "text": "flat whereas with the pre batching we",
    "start": "579939",
    "end": "585160"
  },
  {
    "text": "ended up with a you know essentially",
    "start": "585160",
    "end": "586870"
  },
  {
    "text": "approaching exponential growth you can",
    "start": "586870",
    "end": "589319"
  },
  {
    "text": "extrapolate that to the right to 50,000",
    "start": "589319",
    "end": "592290"
  },
  {
    "text": "services and you can see that the number",
    "start": "592290",
    "end": "594309"
  },
  {
    "text": "looks pretty ugly in turned latency so",
    "start": "594309",
    "end": "602680"
  },
  {
    "start": "598000",
    "end": "598000"
  },
  {
    "text": "this is the latency of of updating our",
    "start": "602680",
    "end": "606939"
  },
  {
    "text": "load balances again these are fairly",
    "start": "606939",
    "end": "610059"
  },
  {
    "text": "small numbers of services I'm just",
    "start": "610059",
    "end": "611620"
  },
  {
    "text": "giving you a flavor of some of the stuff",
    "start": "611620",
    "end": "613000"
  },
  {
    "text": "that we tried and they'll get into some",
    "start": "613000",
    "end": "615009"
  },
  {
    "text": "bigger numbers later in the talk to",
    "start": "615009",
    "end": "617410"
  },
  {
    "text": "illustrate how this translates when you",
    "start": "617410",
    "end": "620290"
  },
  {
    "text": "have tens of thousands of services we",
    "start": "620290",
    "end": "624550"
  },
  {
    "text": "I'm not going to go through all the",
    "start": "624550",
    "end": "626079"
  },
  {
    "text": "details here we had a simulation we had",
    "start": "626079",
    "end": "628689"
  },
  {
    "text": "10 pods in each service we had you know",
    "start": "628689",
    "end": "632769"
  },
  {
    "text": "hundreds of services across couple of",
    "start": "632769",
    "end": "634779"
  },
  {
    "text": "points of data there and you can see the",
    "start": "634779",
    "end": "637600"
  },
  {
    "text": "before and after numbers of we managed",
    "start": "637600",
    "end": "639790"
  },
  {
    "text": "to reduce the latency by you know 60",
    "start": "639790",
    "end": "642220"
  },
  {
    "text": "percent which was good so the more",
    "start": "642220",
    "end": "646809"
  },
  {
    "text": "interesting stuff I think is the data",
    "start": "646809",
    "end": "648490"
  },
  {
    "text": "plane so",
    "start": "648490",
    "end": "650260"
  },
  {
    "text": "at the moment the commonly used",
    "start": "650260",
    "end": "653890"
  },
  {
    "text": "configuration of Q proxy is to program",
    "start": "653890",
    "end": "657470"
  },
  {
    "text": "IP tables on each node to perform the",
    "start": "657470",
    "end": "659930"
  },
  {
    "text": "load balancing within the cluster for",
    "start": "659930",
    "end": "663020"
  },
  {
    "text": "those of you may not be intimately",
    "start": "663020",
    "end": "665030"
  },
  {
    "text": "familiar with what exactly I P tables is",
    "start": "665030",
    "end": "667510"
  },
  {
    "text": "it's a user space application that",
    "start": "667510",
    "end": "670040"
  },
  {
    "text": "allows you to configure internal",
    "start": "670040",
    "end": "672650"
  },
  {
    "text": "firewall rules which are implemented on",
    "start": "672650",
    "end": "675050"
  },
  {
    "text": "top of net filter which is a part of the",
    "start": "675050",
    "end": "677450"
  },
  {
    "text": "Linux kernel and these rules are",
    "start": "677450",
    "end": "680540"
  },
  {
    "text": "contained in things called chains which",
    "start": "680540",
    "end": "682670"
  },
  {
    "text": "are essentially tables hence the name IP",
    "start": "682670",
    "end": "684860"
  },
  {
    "text": "tables and netfilter in turn is a",
    "start": "684860",
    "end": "688580"
  },
  {
    "text": "framework provided by the Linux kernel",
    "start": "688580",
    "end": "690080"
  },
  {
    "text": "that allows you to customize things like",
    "start": "690080",
    "end": "693740"
  },
  {
    "text": "packet filtering and network address",
    "start": "693740",
    "end": "695720"
  },
  {
    "text": "translation etc so there are two pretty",
    "start": "695720",
    "end": "701960"
  },
  {
    "text": "major challenges related to IP tables",
    "start": "701960",
    "end": "703880"
  },
  {
    "text": "and they're both kind of fundamentally a",
    "start": "703880",
    "end": "706370"
  },
  {
    "text": "result of the fact that these things are",
    "start": "706370",
    "end": "707900"
  },
  {
    "text": "tables and lists and you probably",
    "start": "707900",
    "end": "710060"
  },
  {
    "text": "remember from your computer science one",
    "start": "710060",
    "end": "712490"
  },
  {
    "text": "courses that inserting and removing from",
    "start": "712490",
    "end": "715010"
  },
  {
    "text": "lists and tables is not the most",
    "start": "715010",
    "end": "716660"
  },
  {
    "text": "efficient of operations so when when",
    "start": "716660",
    "end": "720110"
  },
  {
    "text": "those tables become extremely large",
    "start": "720110",
    "end": "721580"
  },
  {
    "text": "which they do in the case of kubernetes",
    "start": "721580",
    "end": "724540"
  },
  {
    "text": "you can have some pretty serious",
    "start": "724540",
    "end": "726500"
  },
  {
    "text": "problems there the second related issue",
    "start": "726500",
    "end": "729170"
  },
  {
    "text": "is that every packet has to go and you",
    "start": "729170",
    "end": "731300"
  },
  {
    "text": "know match against some rule in that",
    "start": "731300",
    "end": "733130"
  },
  {
    "text": "table before it gets load balanced and",
    "start": "733130",
    "end": "736190"
  },
  {
    "text": "if it does a linear traversal through",
    "start": "736190",
    "end": "738590"
  },
  {
    "text": "the table to find the rule that matches",
    "start": "738590",
    "end": "740060"
  },
  {
    "text": "if that list is 50,000 long each packet",
    "start": "740060",
    "end": "744350"
  },
  {
    "text": "has to incur that latency which",
    "start": "744350",
    "end": "747110"
  },
  {
    "text": "translates into lower throughput etc so",
    "start": "747110",
    "end": "751210"
  },
  {
    "text": "those are the problems here's an example",
    "start": "751210",
    "end": "754700"
  },
  {
    "start": "753000",
    "end": "753000"
  },
  {
    "text": "so this is the actual IP tables rules",
    "start": "754700",
    "end": "757370"
  },
  {
    "text": "that are configured by few proxy and",
    "start": "757370",
    "end": "759920"
  },
  {
    "text": "this particular example we have two",
    "start": "759920",
    "end": "761930"
  },
  {
    "text": "services you can see the green ones over",
    "start": "761930",
    "end": "764030"
  },
  {
    "text": "there and for each service we have a",
    "start": "764030",
    "end": "766010"
  },
  {
    "text": "table which again has a set of rules I",
    "start": "766010",
    "end": "769460"
  },
  {
    "text": "believe that is proportional to the",
    "start": "769460",
    "end": "771770"
  },
  {
    "text": "endpoints now you can imagine if you",
    "start": "771770",
    "end": "774560"
  },
  {
    "text": "scale this up if you create 50,000",
    "start": "774560",
    "end": "776330"
  },
  {
    "text": "services that green block near the",
    "start": "776330",
    "end": "778820"
  },
  {
    "text": "middle of the screen there",
    "start": "778820",
    "end": "780950"
  },
  {
    "text": "comes very large and we've got some more",
    "start": "780950",
    "end": "784010"
  },
  {
    "text": "detailed numbers in the moment so what",
    "start": "784010",
    "end": "787880"
  },
  {
    "start": "786000",
    "end": "786000"
  },
  {
    "text": "does that mean long lists of rules in a",
    "start": "787880",
    "end": "792230"
  },
  {
    "text": "chain produce some pretty horrifying",
    "start": "792230",
    "end": "796280"
  },
  {
    "text": "things in particular if you so not only",
    "start": "796280",
    "end": "800000"
  },
  {
    "text": "do you get poor performance but you also",
    "start": "800000",
    "end": "802010"
  },
  {
    "text": "get variable performance because",
    "start": "802010",
    "end": "803750"
  },
  {
    "text": "depending on where your service landed",
    "start": "803750",
    "end": "806300"
  },
  {
    "text": "in that chain which is probably you know",
    "start": "806300",
    "end": "808790"
  },
  {
    "text": "related to when it was created relative",
    "start": "808790",
    "end": "811070"
  },
  {
    "text": "to the other services the performance",
    "start": "811070",
    "end": "812480"
  },
  {
    "text": "can vary quite dramatically so you can",
    "start": "812480",
    "end": "815240"
  },
  {
    "text": "see in the graph there we've got a bunch",
    "start": "815240",
    "end": "819350"
  },
  {
    "text": "of services of a number of services",
    "start": "819350",
    "end": "821150"
  },
  {
    "text": "scales to the right the first service in",
    "start": "821150",
    "end": "823790"
  },
  {
    "text": "the chain is the blue one and that's the",
    "start": "823790",
    "end": "825440"
  },
  {
    "text": "latency accessing that service when you",
    "start": "825440",
    "end": "828140"
  },
  {
    "text": "have one or a thousand or five thousand",
    "start": "828140",
    "end": "830120"
  },
  {
    "text": "and you can see on the right-hand side",
    "start": "830120",
    "end": "831800"
  },
  {
    "text": "if you're unfortunate enough to be one",
    "start": "831800",
    "end": "835280"
  },
  {
    "text": "of the last services in the chain and",
    "start": "835280",
    "end": "836570"
  },
  {
    "text": "there are large numbers of them your",
    "start": "836570",
    "end": "838610"
  },
  {
    "text": "latency climbs up into the you know",
    "start": "838610",
    "end": "841460"
  },
  {
    "text": "multiple milliseconds range per packet",
    "start": "841460",
    "end": "843620"
  },
  {
    "text": "which is pretty bad inside a cluster",
    "start": "843620",
    "end": "847520"
  },
  {
    "text": "where you would normally be you know",
    "start": "847520",
    "end": "848960"
  },
  {
    "text": "measuring in microseconds I don't think",
    "start": "848960",
    "end": "853040"
  },
  {
    "text": "it's necessary to go into those details",
    "start": "853040",
    "end": "855130"
  },
  {
    "text": "those numbers much more but you can see",
    "start": "855130",
    "end": "857570"
  },
  {
    "text": "clearly by the hockey stick on the right",
    "start": "857570",
    "end": "859130"
  },
  {
    "text": "but that is bad for large numbers of",
    "start": "859130",
    "end": "860720"
  },
  {
    "text": "services so where exactly is this",
    "start": "860720",
    "end": "864560"
  },
  {
    "start": "862000",
    "end": "862000"
  },
  {
    "text": "latency generated and particularly",
    "start": "864560",
    "end": "867320"
  },
  {
    "text": "around manipulating these IP tables",
    "start": "867320",
    "end": "869540"
  },
  {
    "text": "rules so first of all the implementation",
    "start": "869540",
    "end": "871640"
  },
  {
    "text": "and for those of you might have gone to",
    "start": "871640",
    "end": "873560"
  },
  {
    "text": "the excellent talk that came before this",
    "start": "873560",
    "end": "875600"
  },
  {
    "text": "one about IP vs they also touched on",
    "start": "875600",
    "end": "878450"
  },
  {
    "text": "this problem where because of the fact",
    "start": "878450",
    "end": "881330"
  },
  {
    "text": "that every time the tables need to be",
    "start": "881330",
    "end": "883240"
  },
  {
    "text": "manipulated in any way they need to be",
    "start": "883240",
    "end": "885410"
  },
  {
    "text": "locked if you have multiple concurrent",
    "start": "885410",
    "end": "887720"
  },
  {
    "text": "processes trying to manipulate your",
    "start": "887720",
    "end": "889430"
  },
  {
    "text": "tables you look at lock contention and",
    "start": "889430",
    "end": "891830"
  },
  {
    "text": "failures etc so one of the common",
    "start": "891830",
    "end": "895280"
  },
  {
    "text": "solutions to that is not to actually",
    "start": "895280",
    "end": "897110"
  },
  {
    "text": "make incremental updates to the rules",
    "start": "897110",
    "end": "898790"
  },
  {
    "text": "but rather to just update them offline",
    "start": "898790",
    "end": "901220"
  },
  {
    "text": "and then upload a whole new bunch of",
    "start": "901220",
    "end": "903560"
  },
  {
    "text": "rules with a single lock rather than",
    "start": "903560",
    "end": "905060"
  },
  {
    "text": "multiple individual locks so we copy all",
    "start": "905060",
    "end": "907610"
  },
  {
    "text": "the rules we make all the changes and we",
    "start": "907610",
    "end": "909230"
  },
  {
    "text": "save all the rules back again which as",
    "start": "909230",
    "end": "910940"
  },
  {
    "text": "you can imagine has raised conditions",
    "start": "910940",
    "end": "912530"
  },
  {
    "text": "and other",
    "start": "912530",
    "end": "912930"
  },
  {
    "text": "problems associated with it and and I",
    "start": "912930",
    "end": "916260"
  },
  {
    "text": "bedeviled is entirely locked during this",
    "start": "916260",
    "end": "917970"
  },
  {
    "text": "whole process so that you know again",
    "start": "917970",
    "end": "919950"
  },
  {
    "text": "when you have fifty thousand services",
    "start": "919950",
    "end": "921630"
  },
  {
    "text": "and each one of them has pods joining",
    "start": "921630",
    "end": "924089"
  },
  {
    "text": "and leaving the service the rate of",
    "start": "924089",
    "end": "925950"
  },
  {
    "text": "change is pretty high and each one of",
    "start": "925950",
    "end": "928260"
  },
  {
    "text": "those operations requires a lock as well",
    "start": "928260",
    "end": "931440"
  },
  {
    "text": "as traversals of these very long chains",
    "start": "931440",
    "end": "934459"
  },
  {
    "text": "so you can see the numbers they're",
    "start": "934459",
    "end": "936450"
  },
  {
    "text": "adding one rule when we have five",
    "start": "936450",
    "end": "938399"
  },
  {
    "text": "thousand services which results in forty",
    "start": "938399",
    "end": "941220"
  },
  {
    "text": "thousand iptables rules details of which",
    "start": "941220",
    "end": "944370"
  },
  {
    "text": "we aren't going to now but you could see",
    "start": "944370",
    "end": "945779"
  },
  {
    "text": "for the small number of services we had",
    "start": "945779",
    "end": "947880"
  },
  {
    "text": "an example we had more than that number",
    "start": "947880",
    "end": "949440"
  },
  {
    "text": "of rules it takes eleven minutes to add",
    "start": "949440",
    "end": "953399"
  },
  {
    "text": "one rule to the iptables configuration",
    "start": "953399",
    "end": "956370"
  },
  {
    "text": "so clearly this is not tenable if you",
    "start": "956370",
    "end": "959279"
  },
  {
    "text": "have twenty thousand services you have",
    "start": "959279",
    "end": "960570"
  },
  {
    "text": "sixty thousand rules that's five hours",
    "start": "960570",
    "end": "963240"
  },
  {
    "text": "per update obviously not usable so we",
    "start": "963240",
    "end": "969660"
  },
  {
    "start": "968000",
    "end": "968000"
  },
  {
    "text": "considered a couple of different options",
    "start": "969660",
    "end": "971250"
  },
  {
    "text": "we one option which is actually being",
    "start": "971250",
    "end": "973589"
  },
  {
    "text": "discussed I think before is the",
    "start": "973589",
    "end": "975120"
  },
  {
    "text": "possibility to restructure iptables into",
    "start": "975120",
    "end": "977339"
  },
  {
    "text": "a some kind of a search tree that way",
    "start": "977339",
    "end": "979589"
  },
  {
    "text": "you can address both of the issues that",
    "start": "979589",
    "end": "981600"
  },
  {
    "text": "we mentioned one being that the that any",
    "start": "981600",
    "end": "985200"
  },
  {
    "text": "individual chain in iptables will become",
    "start": "985200",
    "end": "987839"
  },
  {
    "text": "much shorter and secondly the traversal",
    "start": "987839",
    "end": "992339"
  },
  {
    "text": "of those chains so the insertions are",
    "start": "992339",
    "end": "994529"
  },
  {
    "text": "done per chain so if you're inserting",
    "start": "994529",
    "end": "996240"
  },
  {
    "text": "into a short chain the insertions are a",
    "start": "996240",
    "end": "998160"
  },
  {
    "text": "lot quicker and similarly the packet",
    "start": "998160",
    "end": "1000680"
  },
  {
    "text": "reversal through those chains are a lot",
    "start": "1000680",
    "end": "1002660"
  },
  {
    "text": "faster the other approach that we",
    "start": "1002660",
    "end": "1006470"
  },
  {
    "text": "considered was replacing IP tables with",
    "start": "1006470",
    "end": "1008510"
  },
  {
    "text": "ipbs",
    "start": "1008510",
    "end": "1009380"
  },
  {
    "text": "at the virtual server this gives a",
    "start": "1009380",
    "end": "1012620"
  },
  {
    "text": "pretty dramatic performance improvement",
    "start": "1012620",
    "end": "1014720"
  },
  {
    "text": "probably and we never actually",
    "start": "1014720",
    "end": "1016390"
  },
  {
    "text": "prototyped the restructuring the IP",
    "start": "1016390",
    "end": "1019130"
  },
  {
    "text": "tables option but but ipbs does at least",
    "start": "1019130",
    "end": "1022490"
  },
  {
    "text": "as well as that in addition to that it",
    "start": "1022490",
    "end": "1024438"
  },
  {
    "text": "has much smarter load balancing options",
    "start": "1024439",
    "end": "1026540"
  },
  {
    "text": "available you can do weighted load",
    "start": "1026540",
    "end": "1027890"
  },
  {
    "text": "balancing you can do retries etc so it",
    "start": "1027890",
    "end": "1030589"
  },
  {
    "text": "has much more sophisticated load",
    "start": "1030589",
    "end": "1032089"
  },
  {
    "text": "balancing IP table rafter always was not",
    "start": "1032089",
    "end": "1034100"
  },
  {
    "text": "really designed for load balancing",
    "start": "1034100",
    "end": "1035720"
  },
  {
    "text": "design firewalls",
    "start": "1035720",
    "end": "1037579"
  },
  {
    "text": "whereas ipbs was designed for load",
    "start": "1037580",
    "end": "1039770"
  },
  {
    "text": "balancing and con firewall so here you",
    "start": "1039770",
    "end": "1044720"
  },
  {
    "start": "1043000",
    "end": "1043000"
  },
  {
    "text": "know just a graphic illustration of what",
    "start": "1044720",
    "end": "1046400"
  },
  {
    "text": "we had in mind for restructuring the",
    "start": "1046400",
    "end": "1048079"
  },
  {
    "text": "tables you essentially create a tree of",
    "start": "1048080",
    "end": "1051440"
  },
  {
    "text": "IP tables chains and my animations are",
    "start": "1051440",
    "end": "1057650"
  },
  {
    "text": "not great here but you can see that the",
    "start": "1057650",
    "end": "1059630"
  },
  {
    "text": "number of chains the number of rules you",
    "start": "1059630",
    "end": "1061160"
  },
  {
    "text": "end up traversing is a lot smaller and",
    "start": "1061160",
    "end": "1063850"
  },
  {
    "text": "the size of each one of those chains for",
    "start": "1063850",
    "end": "1066200"
  },
  {
    "text": "update purposes in particular the the",
    "start": "1066200",
    "end": "1068570"
  },
  {
    "text": "search tree based service routing time",
    "start": "1068570",
    "end": "1070580"
  },
  {
    "text": "complexity is order of square root of n",
    "start": "1070580",
    "end": "1073790"
  },
  {
    "text": "or n root of n for a given tree depth so",
    "start": "1073790",
    "end": "1077570"
  },
  {
    "text": "that's clearly a significant improvement",
    "start": "1077570",
    "end": "1079220"
  },
  {
    "text": "over the numbers that reported earlier a",
    "start": "1079220",
    "end": "1083420"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "little bit of a background to ipbs and",
    "start": "1083420",
    "end": "1085460"
  },
  {
    "text": "this is not a deep dive into ipbs by any",
    "start": "1085460",
    "end": "1088070"
  },
  {
    "text": "means but it's a transport layer load",
    "start": "1088070",
    "end": "1090500"
  },
  {
    "text": "balancer which directs requests it",
    "start": "1090500",
    "end": "1092960"
  },
  {
    "text": "supports TCP UDP and it's very close to",
    "start": "1092960",
    "end": "1096680"
  },
  {
    "text": "real service as part of the Linux",
    "start": "1096680",
    "end": "1098210"
  },
  {
    "text": "virtual server project it's been around",
    "start": "1098210",
    "end": "1100730"
  },
  {
    "text": "for many many many years in the kernel",
    "start": "1100730",
    "end": "1102980"
  },
  {
    "text": "very heavily used considered very stable",
    "start": "1102980",
    "end": "1106450"
  },
  {
    "text": "and so we thought this was kind of worth",
    "start": "1106450",
    "end": "1109990"
  },
  {
    "text": "trying out see what see how it works",
    "start": "1109990",
    "end": "1112850"
  },
  {
    "text": "it's also like IP tables built on top of",
    "start": "1112850",
    "end": "1115250"
  },
  {
    "text": "the net filter constructs in the kernel",
    "start": "1115250",
    "end": "1117520"
  },
  {
    "text": "supports multiple load balancing l2 load",
    "start": "1117520",
    "end": "1121070"
  },
  {
    "text": "balancing which involves Mac rewriting",
    "start": "1121070",
    "end": "1123320"
  },
  {
    "text": "NAT IP tunneling etcetera so just to",
    "start": "1123320",
    "end": "1129680"
  },
  {
    "text": "have a quick look at the comparison so",
    "start": "1129680",
    "end": "1133430"
  },
  {
    "text": "IP tables can manipulate tables provided",
    "start": "1133430",
    "end": "1136160"
  },
  {
    "text": "by the learning side wall it's much more",
    "start": "1136160",
    "end": "1139040"
  },
  {
    "text": "flexible as I mentioned earlier because",
    "start": "1139040",
    "end": "1141190"
  },
  {
    "text": "you can manipulate packets at different",
    "start": "1141190",
    "end": "1144260"
  },
  {
    "text": "stages of the writing process pre",
    "start": "1144260",
    "end": "1146000"
  },
  {
    "text": "routing post routing etc and it has way",
    "start": "1146000",
    "end": "1149300"
  },
  {
    "text": "more operations that can be performed on",
    "start": "1149300",
    "end": "1151130"
  },
  {
    "text": "packets you can do source snap",
    "start": "1151130",
    "end": "1153350"
  },
  {
    "text": "destination mass you can reject things",
    "start": "1153350",
    "end": "1155450"
  },
  {
    "text": "you can do poor translations all sorts",
    "start": "1155450",
    "end": "1157160"
  },
  {
    "text": "of things none of which we actually",
    "start": "1157160",
    "end": "1158960"
  },
  {
    "text": "necessarily need for pure load balancing",
    "start": "1158960",
    "end": "1161530"
  },
  {
    "text": "I think the big plus for ipbs is that",
    "start": "1161530",
    "end": "1166250"
  },
  {
    "text": "it's hash based and rather than list",
    "start": "1166250",
    "end": "1168650"
  },
  {
    "text": "based or chain based",
    "start": "1168650",
    "end": "1170580"
  },
  {
    "text": "and obviously as I mentioned it also has",
    "start": "1170580",
    "end": "1173190"
  },
  {
    "text": "a lot more load balancing algorithms by",
    "start": "1173190",
    "end": "1175710"
  },
  {
    "text": "virtue of the fact that it's designed as",
    "start": "1175710",
    "end": "1177510"
  },
  {
    "text": "a load balancer another firewall so you",
    "start": "1177510",
    "end": "1181410"
  },
  {
    "text": "can do least load East connections",
    "start": "1181410",
    "end": "1183030"
  },
  {
    "text": "locality based Wake based many different",
    "start": "1183030",
    "end": "1186150"
  },
  {
    "text": "load balancing algorithms supports",
    "start": "1186150",
    "end": "1188550"
  },
  {
    "text": "health checks connection retries sticky",
    "start": "1188550",
    "end": "1191310"
  },
  {
    "text": "sessions all of these things of which",
    "start": "1191310",
    "end": "1192870"
  },
  {
    "text": "are very useful in load balancing if you",
    "start": "1192870",
    "end": "1195990"
  },
  {
    "text": "have multiple backends and single",
    "start": "1195990",
    "end": "1198300"
  },
  {
    "text": "front-end you would like ideally to have",
    "start": "1198300",
    "end": "1199890"
  },
  {
    "text": "that client directly to the same server",
    "start": "1199890",
    "end": "1202350"
  },
  {
    "text": "for caching reasons and numerous reasons",
    "start": "1202350",
    "end": "1204600"
  },
  {
    "text": "why that why sticky sessions are useful",
    "start": "1204600",
    "end": "1207060"
  },
  {
    "text": "and we can't do those with IPPs at least",
    "start": "1207060",
    "end": "1209160"
  },
  {
    "text": "with IP tables so we haven't released",
    "start": "1209160",
    "end": "1217080"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "that publicly yet we're more than happy",
    "start": "1217080",
    "end": "1219210"
  },
  {
    "text": "to upstream the work that we did here",
    "start": "1219210",
    "end": "1221570"
  },
  {
    "text": "it's a little bit about what we did and",
    "start": "1221570",
    "end": "1224340"
  },
  {
    "text": "how we did it so they know behavior",
    "start": "1224340",
    "end": "1227850"
  },
  {
    "text": "changes in kubernetes it's fully",
    "start": "1227850",
    "end": "1229530"
  },
  {
    "text": "compatible with the kubernetes service",
    "start": "1229530",
    "end": "1232850"
  },
  {
    "text": "semantics supports all of the normal",
    "start": "1232850",
    "end": "1235830"
  },
  {
    "text": "things you would expect of commedy",
    "start": "1235830",
    "end": "1237300"
  },
  {
    "text": "services what we did was we made changes",
    "start": "1237300",
    "end": "1240330"
  },
  {
    "text": "to the queue proxy agents that runs on",
    "start": "1240330",
    "end": "1244530"
  },
  {
    "text": "the nodes so that agent at the moment",
    "start": "1244530",
    "end": "1247290"
  },
  {
    "text": "already supports two modes a probably",
    "start": "1247290",
    "end": "1249810"
  },
  {
    "text": "familiar with go to user space mode",
    "start": "1249810",
    "end": "1251520"
  },
  {
    "text": "which was historically the first one I",
    "start": "1251520",
    "end": "1253080"
  },
  {
    "text": "think happy the kubernetes version one",
    "start": "1253080",
    "end": "1255450"
  },
  {
    "text": "only supported that there were",
    "start": "1255450",
    "end": "1257190"
  },
  {
    "text": "performance problems with that and",
    "start": "1257190",
    "end": "1258570"
  },
  {
    "text": "various other things later an IP tables",
    "start": "1258570",
    "end": "1261360"
  },
  {
    "text": "mode was added which is what we've been",
    "start": "1261360",
    "end": "1262920"
  },
  {
    "text": "talking about now much faster all in",
    "start": "1262920",
    "end": "1265620"
  },
  {
    "text": "kernel but with all the challenges we",
    "start": "1265620",
    "end": "1267750"
  },
  {
    "text": "mentioned what we did was we added the",
    "start": "1267750",
    "end": "1269550"
  },
  {
    "text": "third mode IP vs the original feed proxy",
    "start": "1269550",
    "end": "1273530"
  },
  {
    "text": "program was about 12,000 lines occurred",
    "start": "1273530",
    "end": "1276810"
  },
  {
    "text": "roughly so we added another 680 lines of",
    "start": "1276810",
    "end": "1280650"
  },
  {
    "text": "code to implement the IPPS",
    "start": "1280650",
    "end": "1282480"
  },
  {
    "text": "logic and it has an external dependency",
    "start": "1282480",
    "end": "1285990"
  },
  {
    "text": "on a seesaw library so let's have a look",
    "start": "1285990",
    "end": "1291150"
  },
  {
    "start": "1289000",
    "end": "1289000"
  },
  {
    "text": "at some of the comparative Layton sees",
    "start": "1291150",
    "end": "1293360"
  },
  {
    "text": "this I guess should be in a graph but we",
    "start": "1293360",
    "end": "1295890"
  },
  {
    "text": "didn't get there but you can see that",
    "start": "1295890",
    "end": "1298380"
  },
  {
    "text": "for even reasonably modest numbers of",
    "start": "1298380",
    "end": "1300450"
  },
  {
    "text": "services if you have 5,000 node cluster",
    "start": "1300450",
    "end": "1304080"
  },
  {
    "text": "it's likely that you're running you know",
    "start": "1304080",
    "end": "1306240"
  },
  {
    "text": "tens of pods per node you can imagine",
    "start": "1306240",
    "end": "1309179"
  },
  {
    "text": "that 5,000 to 10,000 to 50,000 services",
    "start": "1309179",
    "end": "1312929"
  },
  {
    "text": "is not unreasonable on the cluster that",
    "start": "1312929",
    "end": "1314370"
  },
  {
    "text": "size and we do run clusters this big you",
    "start": "1314370",
    "end": "1318240"
  },
  {
    "text": "can see that the IP tables rule update",
    "start": "1318240",
    "end": "1320309"
  },
  {
    "text": "time is like hours per rule and if you",
    "start": "1320309",
    "end": "1323880"
  },
  {
    "text": "look remember the number of rules that",
    "start": "1323880",
    "end": "1325289"
  },
  {
    "text": "have to be updated for a given churn",
    "start": "1325289",
    "end": "1326940"
  },
  {
    "text": "rate in a cluster if you're creating and",
    "start": "1326940",
    "end": "1329070"
  },
  {
    "text": "deleting pods auto-scaling if you using",
    "start": "1329070",
    "end": "1332159"
  },
  {
    "text": "HP a etc you can imagine that that is",
    "start": "1332159",
    "end": "1334860"
  },
  {
    "text": "you know completely untenable ipbs on",
    "start": "1334860",
    "end": "1337679"
  },
  {
    "text": "the other hand irrespective of the",
    "start": "1337679",
    "end": "1339450"
  },
  {
    "text": "number of services that you have has a",
    "start": "1339450",
    "end": "1342960"
  },
  {
    "text": "essentially a linear to millisecond",
    "start": "1342960",
    "end": "1345059"
  },
  {
    "text": "update rate which is by virtue of the",
    "start": "1345059",
    "end": "1348360"
  },
  {
    "text": "fact that it's hash table based and not",
    "start": "1348360",
    "end": "1351049"
  },
  {
    "text": "insertions and deletions from lists what",
    "start": "1351049",
    "end": "1355470"
  },
  {
    "text": "else did I have to say there yes I guess",
    "start": "1355470",
    "end": "1359039"
  },
  {
    "text": "that's that's enough for today",
    "start": "1359039",
    "end": "1361549"
  },
  {
    "start": "1361000",
    "end": "1361000"
  },
  {
    "text": "we then ran some benchmark tests using Q",
    "start": "1361549",
    "end": "1366000"
  },
  {
    "text": "/ f you can see that the we had various",
    "start": "1366000",
    "end": "1370169"
  },
  {
    "text": "QPS Ray's Layton sees throughput etc",
    "start": "1370169",
    "end": "1373200"
  },
  {
    "text": "they all show very similar patterns and",
    "start": "1373200",
    "end": "1378649"
  },
  {
    "text": "you can see the top two lines there are",
    "start": "1378649",
    "end": "1382470"
  },
  {
    "text": "the IPPS based implementation so we",
    "start": "1382470",
    "end": "1385260"
  },
  {
    "text": "managed to scale it up to 50,000",
    "start": "1385260",
    "end": "1387140"
  },
  {
    "text": "services the throughput is you know",
    "start": "1387140",
    "end": "1390000"
  },
  {
    "text": "approximately half of what it would be",
    "start": "1390000",
    "end": "1391679"
  },
  {
    "text": "if you had one service which is still",
    "start": "1391679",
    "end": "1393570"
  },
  {
    "text": "pretty bad and this we could do some",
    "start": "1393570",
    "end": "1395850"
  },
  {
    "text": "more work there I think we can probably",
    "start": "1395850",
    "end": "1397230"
  },
  {
    "text": "get that that red and purple line",
    "start": "1397230",
    "end": "1402320"
  },
  {
    "text": "relatively flat horizontal the other two",
    "start": "1402679",
    "end": "1406409"
  },
  {
    "text": "you can see even at 5,000 services which",
    "start": "1406409",
    "end": "1410220"
  },
  {
    "text": "is not a lot the throughput is pretty",
    "start": "1410220",
    "end": "1414960"
  },
  {
    "text": "bad and basically there is no throughput",
    "start": "1414960",
    "end": "1418860"
  },
  {
    "text": "beyond about 10,000 services so we were",
    "start": "1418860",
    "end": "1422909"
  },
  {
    "text": "pretty happy with that I guess the other",
    "start": "1422909",
    "end": "1425100"
  },
  {
    "text": "important thing to note there is that",
    "start": "1425100",
    "end": "1426480"
  },
  {
    "text": "the first in the last service in the",
    "start": "1426480",
    "end": "1428820"
  },
  {
    "text": "IBBs case are essentially equally",
    "start": "1428820",
    "end": "1431010"
  },
  {
    "text": "performant whereas there's a fairly",
    "start": "1431010",
    "end": "1433380"
  },
  {
    "text": "substantial difference between",
    "start": "1433380",
    "end": "1435640"
  },
  {
    "text": "the services throughputs of different",
    "start": "1435640",
    "end": "1437860"
  },
  {
    "text": "services any iptables case that's about",
    "start": "1437860",
    "end": "1444190"
  },
  {
    "text": "as much as there is interesting to say",
    "start": "1444190",
    "end": "1445780"
  },
  {
    "text": "on that slide I think we've also done a",
    "start": "1445780",
    "end": "1448510"
  },
  {
    "start": "1447000",
    "end": "1447000"
  },
  {
    "text": "bunch of other scalability work we",
    "start": "1448510",
    "end": "1451360"
  },
  {
    "text": "worked on scaling the number of nodes",
    "start": "1451360",
    "end": "1453610"
  },
  {
    "text": "and pods in a single cluster a lot of",
    "start": "1453610",
    "end": "1456190"
  },
  {
    "text": "this work has been sort of paralleled in",
    "start": "1456190",
    "end": "1457900"
  },
  {
    "text": "the open-source community for a variety",
    "start": "1457900",
    "end": "1460570"
  },
  {
    "text": "of historical reasons this was not",
    "start": "1460570",
    "end": "1462970"
  },
  {
    "text": "open-source but we probably should have",
    "start": "1462970",
    "end": "1465450"
  },
  {
    "text": "and will certainly do better in the",
    "start": "1465450",
    "end": "1467860"
  },
  {
    "text": "future with these kinds of things we've",
    "start": "1467860",
    "end": "1470980"
  },
  {
    "text": "reduced various enter and Layton sees we",
    "start": "1470980",
    "end": "1474220"
  },
  {
    "text": "we did quite a lot of work on scheduling",
    "start": "1474220",
    "end": "1477100"
  },
  {
    "text": "performance improvement because we have",
    "start": "1477100",
    "end": "1478690"
  },
  {
    "text": "these very large clusters and pretty",
    "start": "1478690",
    "end": "1480460"
  },
  {
    "text": "high rates of change we've got an",
    "start": "1480460",
    "end": "1483070"
  },
  {
    "text": "optimistic concurrent scheduler which",
    "start": "1483070",
    "end": "1485650"
  },
  {
    "text": "actually is a very small change the",
    "start": "1485650",
    "end": "1487900"
  },
  {
    "text": "existing urban Eddy scheduler again we",
    "start": "1487900",
    "end": "1490419"
  },
  {
    "text": "happy to open-source that and probably",
    "start": "1490419",
    "end": "1492250"
  },
  {
    "text": "will be doing that in the coming months",
    "start": "1492250",
    "end": "1493919"
  },
  {
    "text": "we also have a pretty interesting flow",
    "start": "1493919",
    "end": "1497410"
  },
  {
    "text": "graph based high performance scheduler",
    "start": "1497410",
    "end": "1499510"
  },
  {
    "text": "that we're working on together with the",
    "start": "1499510",
    "end": "1500950"
  },
  {
    "text": "University of Cambridge and that can",
    "start": "1500950",
    "end": "1503230"
  },
  {
    "text": "bring you know very very dramatic",
    "start": "1503230",
    "end": "1505360"
  },
  {
    "text": "improvements the optimistic on parent",
    "start": "1505360",
    "end": "1507070"
  },
  {
    "text": "stuff essentially enables you to",
    "start": "1507070",
    "end": "1508809"
  },
  {
    "text": "schedule multiple pods at the same time",
    "start": "1508809",
    "end": "1510960"
  },
  {
    "text": "and we employ some basic heuristics to",
    "start": "1510960",
    "end": "1514960"
  },
  {
    "text": "reduce the probabilities of collisions",
    "start": "1514960",
    "end": "1518640"
  },
  {
    "text": "multiple concurrent schedulers",
    "start": "1518640",
    "end": "1520570"
  },
  {
    "text": "scheduling the same or different pods",
    "start": "1520570",
    "end": "1522130"
  },
  {
    "text": "onto the same resources underlying",
    "start": "1522130",
    "end": "1524830"
  },
  {
    "text": "resources and that turns out not to be",
    "start": "1524830",
    "end": "1526630"
  },
  {
    "text": "terribly difficult actually if you",
    "start": "1526630",
    "end": "1527950"
  },
  {
    "text": "introduce a little bit of randomization",
    "start": "1527950",
    "end": "1529299"
  },
  {
    "text": "into things the probability of collision",
    "start": "1529299",
    "end": "1531610"
  },
  {
    "text": "is very low and then you just retry and",
    "start": "1531610",
    "end": "1533490"
  },
  {
    "text": "the performance of that was you know an",
    "start": "1533490",
    "end": "1536620"
  },
  {
    "text": "order of magnitude or more better than",
    "start": "1536620",
    "end": "1539380"
  },
  {
    "text": "the existing scheduler flow graph based",
    "start": "1539380",
    "end": "1541780"
  },
  {
    "text": "high performance scheduling is many many",
    "start": "1541780",
    "end": "1543970"
  },
  {
    "text": "orders of magnitude faster than what we",
    "start": "1543970",
    "end": "1545650"
  },
  {
    "text": "have at the moment and has a variety of",
    "start": "1545650",
    "end": "1547510"
  },
  {
    "text": "additional benefits like facilitating",
    "start": "1547510",
    "end": "1551110"
  },
  {
    "text": "rescheduling much better than we do at",
    "start": "1551110",
    "end": "1553540"
  },
  {
    "text": "the moment",
    "start": "1553540",
    "end": "1554350"
  },
  {
    "text": "and we're happy to open-source all of",
    "start": "1554350",
    "end": "1557080"
  },
  {
    "text": "this work in fact we're the University",
    "start": "1557080",
    "end": "1559720"
  },
  {
    "text": "of Cambridge work we're doing is",
    "start": "1559720",
    "end": "1560799"
  },
  {
    "text": "definitely already open sourced and we",
    "start": "1560799",
    "end": "1562990"
  },
  {
    "text": "will continue to work with the community",
    "start": "1562990",
    "end": "1564610"
  },
  {
    "text": "on",
    "start": "1564610",
    "end": "1565460"
  },
  {
    "text": "and with that I leave you with at least",
    "start": "1565460",
    "end": "1570930"
  },
  {
    "text": "nine minutes more of beer drinking time",
    "start": "1570930",
    "end": "1573210"
  },
  {
    "text": "less whatever questions we have anybody",
    "start": "1573210",
    "end": "1577190"
  },
  {
    "text": "questions comments yeah we'd like to",
    "start": "1577190",
    "end": "1582090"
  },
  {
    "text": "grab that microphone there",
    "start": "1582090",
    "end": "1583680"
  },
  {
    "text": "or somebody could positive how many",
    "start": "1583680",
    "end": "1588240"
  },
  {
    "text": "notes you had how many nodes did we have",
    "start": "1588240",
    "end": "1592220"
  },
  {
    "text": "I believe and I'm not a hundred percent",
    "start": "1592220",
    "end": "1596220"
  },
  {
    "text": "in these particular tests that I was",
    "start": "1596220",
    "end": "1598260"
  },
  {
    "text": "these were very small numbers of nodes",
    "start": "1598260",
    "end": "1600030"
  },
  {
    "text": "this was just a test to verify so that",
    "start": "1600030",
    "end": "1604560"
  },
  {
    "text": "the performance we expect to I mean that",
    "start": "1604560",
    "end": "1606960"
  },
  {
    "text": "should be comparable irrespective the",
    "start": "1606960",
    "end": "1609000"
  },
  {
    "text": "number of nodes the point of mentioning",
    "start": "1609000",
    "end": "1611970"
  },
  {
    "text": "the number of nodes was just that when",
    "start": "1611970",
    "end": "1615810"
  },
  {
    "text": "you have large numbers of nodes you",
    "start": "1615810",
    "end": "1616980"
  },
  {
    "text": "likely to have large numbers of services",
    "start": "1616980",
    "end": "1618630"
  },
  {
    "text": "and parts as well but we just simulated",
    "start": "1618630",
    "end": "1620910"
  },
  {
    "text": "that by putting large numbers of very",
    "start": "1620910",
    "end": "1622230"
  },
  {
    "text": "small pods on small numbers of nodes",
    "start": "1622230",
    "end": "1623880"
  },
  {
    "text": "because we didn't have 10,000 nodes to",
    "start": "1623880",
    "end": "1625650"
  },
  {
    "text": "test on but we do have deployments we",
    "start": "1625650",
    "end": "1627810"
  },
  {
    "text": "have tested in other scenarios with",
    "start": "1627810",
    "end": "1629840"
  },
  {
    "text": "thousands of nodes I don't have the",
    "start": "1629840",
    "end": "1632610"
  },
  {
    "text": "exact results I could get them for you",
    "start": "1632610",
    "end": "1634080"
  },
  {
    "text": "if you like but I think they're in the",
    "start": "1634080",
    "end": "1635130"
  },
  {
    "text": "region of 5,000 we had to make quite a",
    "start": "1635130",
    "end": "1638100"
  },
  {
    "text": "few tweaks to get that to work properly",
    "start": "1638100",
    "end": "1640410"
  },
  {
    "text": "and well this was to be clear this is",
    "start": "1640410",
    "end": "1643470"
  },
  {
    "text": "based on 31.6 of course so I'm sure",
    "start": "1643470",
    "end": "1647820"
  },
  {
    "text": "things are improved in 1.6 yeah",
    "start": "1647820",
    "end": "1654049"
  },
  {
    "text": "so I'm not exactly sure if I understand",
    "start": "1654380",
    "end": "1658050"
  },
  {
    "text": "the compatibility of the IP table",
    "start": "1658050",
    "end": "1664980"
  },
  {
    "text": "solution if I'm based in AWS can I use",
    "start": "1664980",
    "end": "1668310"
  },
  {
    "text": "IP vs do I have to have some overlay",
    "start": "1668310",
    "end": "1670980"
  },
  {
    "text": "network to have access to layers too or",
    "start": "1670980",
    "end": "1673440"
  },
  {
    "text": "no no no this doesn't require any",
    "start": "1673440",
    "end": "1676560"
  },
  {
    "text": "network overlays or anything else it's",
    "start": "1676560",
    "end": "1678660"
  },
  {
    "text": "it's compatible I mean you can",
    "start": "1678660",
    "end": "1680580"
  },
  {
    "text": "it's a drop-in replacement for the IP",
    "start": "1680580",
    "end": "1682470"
  },
  {
    "text": "tables implementation thank you",
    "start": "1682470",
    "end": "1687530"
  },
  {
    "text": "anybody else you have seven extra",
    "start": "1688760",
    "end": "1694020"
  },
  {
    "text": "minutes of their drinking time",
    "start": "1694020",
    "end": "1696150"
  },
  {
    "text": "[Applause]",
    "start": "1696150",
    "end": "1700289"
  }
]