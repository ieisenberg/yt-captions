[
  {
    "text": "foreign hey Welcome to our talk on confidential Computing subtitle attestable security this is a collaboration between edgeless",
    "start": "599",
    "end": "7919"
  },
  {
    "text": "systems and liquid reply um edgeless systems has a product called constellation which we'll be presenting",
    "start": "7919",
    "end": "13679"
  },
  {
    "text": "today Moritz will tell you a lot more about that and how called Financial Computing works and how it applies to",
    "start": "13679",
    "end": "19619"
  },
  {
    "text": "kubernetes security I'll hand you over now and I'll see you later for the demo",
    "start": "19619",
    "end": "24900"
  },
  {
    "text": "thank you so now I will give a short introduction into confidential Computing now we can apply it for kubernetes",
    "start": "24900",
    "end": "31260"
  },
  {
    "text": "security so when we talk talk about scopes of security",
    "start": "31260",
    "end": "36840"
  },
  {
    "text": "when we think about the AE threat model for competition Computing we don't think about the usual way where an attacker",
    "start": "36840",
    "end": "43559"
  },
  {
    "text": "gains access wire vulnerabilities in your application or in your dependencies",
    "start": "43559",
    "end": "49160"
  },
  {
    "text": "instead we talk about attacks that come through the infrastructure in a cloud environment that means potentially other",
    "start": "49160",
    "end": "56399"
  },
  {
    "text": "tenants that gain access to your application that could be a cloud admin that has just direct access or Data",
    "start": "56399",
    "end": "63239"
  },
  {
    "text": "Center employee that goes through the actual access to the actual Hardware or a foreign government that has access",
    "start": "63239",
    "end": "70500"
  },
  {
    "text": "to the infrastructure directly or via the supply chain so these are very powerful attackers a",
    "start": "70500",
    "end": "78060"
  },
  {
    "text": "very powerful threat now so the question is is that more theoretical or is that a real threat and what we see lately is a",
    "start": "78060",
    "end": "84780"
  },
  {
    "text": "lot of attacks or potential attacks that come through vulnerabilities in the cloud software",
    "start": "84780",
    "end": "92040"
  },
  {
    "text": "itself in the cloud service provider that are exposed and attacked and allow",
    "start": "92040",
    "end": "98360"
  },
  {
    "text": "attackers to go to gain a vertical privilege escalation and then go horizontally to attack and access other",
    "start": "98360",
    "end": "105180"
  },
  {
    "text": "people's workloads and data so the question is how can we protect against this scope and this is this very",
    "start": "105180",
    "end": "112259"
  },
  {
    "text": "powerful threat model here the solution I like to present in the next couple",
    "start": "112259",
    "end": "118020"
  },
  {
    "text": "minutes is based on the technology called confidential Computing that's a relatively new",
    "start": "118020",
    "end": "123960"
  },
  {
    "text": "Hardware based technology that adds the capabilities of runtime",
    "start": "123960",
    "end": "130140"
  },
  {
    "text": "encryption protecting your workflow and data while they're in use and the capability of remote registered",
    "start": "130140",
    "end": "136980"
  },
  {
    "text": "education verifying the integrity and those capabilities",
    "start": "136980",
    "end": "142099"
  },
  {
    "text": "from the outside from remote before deploying the sensitive information",
    "start": "142099",
    "end": "149040"
  },
  {
    "text": "the question is what does this go what are the things that being runtime encrypted and adjustable and with the",
    "start": "149040",
    "end": "155040"
  },
  {
    "text": "latest generation of this Hardware features these are VMS so this means you",
    "start": "155040",
    "end": "160440"
  },
  {
    "text": "can create completely isolated and runtime encrypted VMS that are protected against the rest of the infrastructure",
    "start": "160440",
    "end": "166200"
  },
  {
    "text": "the hypervisor the host to ask any other VM and tenant inside the cloud stack",
    "start": "166200",
    "end": "172440"
  },
  {
    "text": "and that you can verify so you can obtain a statement from the hardware saying this is the exact memory of your",
    "start": "172440",
    "end": "178920"
  },
  {
    "text": "VM this is what is running there do you trust it is that what you expect to be",
    "start": "178920",
    "end": "183959"
  },
  {
    "text": "running there and this is these features are available with the latest generation of IMD Intel",
    "start": "183959",
    "end": "190200"
  },
  {
    "text": "also soon arm and also risk 5 has something in the pipeline so the question is where's this",
    "start": "190200",
    "end": "196500"
  },
  {
    "text": "available how can I use those confidential VMS and the answer is pretty much everywhere",
    "start": "196500",
    "end": "201780"
  },
  {
    "text": "most top providers now have some form of competition Computing Services and infrastructure available",
    "start": "201780",
    "end": "207900"
  },
  {
    "text": "so you can just use it you can go there today and use it the question is who is who is you who's using that",
    "start": "207900",
    "end": "214200"
  },
  {
    "text": "and as markers in which the Azure CTO said it the first movers will be the highly",
    "start": "214200",
    "end": "221340"
  },
  {
    "text": "regulated and the paranoid that makes a lot of sense think about financial industry public sector Healthcare",
    "start": "221340",
    "end": "227220"
  },
  {
    "text": "but it doesn't need to stop there you can think of use cases in almost any industry when we talk about deploying uh",
    "start": "227220",
    "end": "233760"
  },
  {
    "text": "using Cloud migration right taking stuff from your on-prem environment to the",
    "start": "233760",
    "end": "239280"
  },
  {
    "text": "cloud think of Simply your age application where you just move it to the cloud right what would compliance and the legal say about it think about",
    "start": "239280",
    "end": "245580"
  },
  {
    "text": "deploying stuff in untrusted environments like",
    "start": "245580",
    "end": "250620"
  },
  {
    "text": "a manufacturing plan for example then kubernetes Computing is a game",
    "start": "250620",
    "end": "256859"
  },
  {
    "text": "changer now you can deploy stuff always encrypted almost verifiable and this",
    "start": "256859",
    "end": "263580"
  },
  {
    "text": "means compliance think about gdpr hit power and so forth now things can become more interesting",
    "start": "263580",
    "end": "271020"
  },
  {
    "text": "now you can move all your workloads to the cloud because they are always encrypted now you can for example protect your IP if your IP is software",
    "start": "271020",
    "end": "277860"
  },
  {
    "text": "and you're using usual modern day software development where you consume services like GitHub",
    "start": "277860",
    "end": "284639"
  },
  {
    "text": "Enterprise gitlab and so forth how we can make sure that nobody steals your crown jewels just from the cloud",
    "start": "284639",
    "end": "290460"
  },
  {
    "text": "environment from this context and if you're a SAS provider or SAS customer",
    "start": "290460",
    "end": "295820"
  },
  {
    "text": "confidential Computing could be very interesting since now you can consume that service and somebody can provide",
    "start": "295820",
    "end": "301440"
  },
  {
    "text": "that service without that somebody having access to your data and now you're enabled to consume that",
    "start": "301440",
    "end": "308820"
  },
  {
    "text": "service wherever that service sits because you can verify it so now we know about the use cases",
    "start": "308820",
    "end": "316500"
  },
  {
    "text": "how can we from an application development point of view how can we make use of it how can Cloud native",
    "start": "316500",
    "end": "322500"
  },
  {
    "text": "security consume this new capabilities and you can roughly split applications",
    "start": "322500",
    "end": "329759"
  },
  {
    "text": "of competitive Computing technology in in three levels right the easiest would be to just protect",
    "start": "329759",
    "end": "336720"
  },
  {
    "text": "your keys that's where the first kind of applications we see where we would just replace a hardware dedicated Hardware",
    "start": "336720",
    "end": "342240"
  },
  {
    "text": "like hsms with confidential Computing software Solutions I would say this was",
    "start": "342240",
    "end": "348660"
  },
  {
    "text": "more or less the first generation now with confidential VMS we see",
    "start": "348660",
    "end": "353699"
  },
  {
    "text": "um one less the trend to just protect entire containers entire applications",
    "start": "353699",
    "end": "359900"
  },
  {
    "text": "with this isolated properties but with all modern Cloud native way of",
    "start": "359900",
    "end": "366660"
  },
  {
    "text": "building applications where we have microservice architectures where we have the kubernetes stack where we",
    "start": "366660",
    "end": "372600"
  },
  {
    "text": "orchestrate update scale backup we have all of these devops tasks we",
    "start": "372600",
    "end": "379080"
  },
  {
    "text": "have all of these in between um and the question is how can we then verify it how can all of these",
    "start": "379080",
    "end": "384600"
  },
  {
    "text": "individual components verify each other and making this remote attestation actually usual usable",
    "start": "384600",
    "end": "390840"
  },
  {
    "text": "and keeping those things secure so if you have a single container you'll",
    "start": "390840",
    "end": "396000"
  },
  {
    "text": "probably find but if you think of modern kubernetes departments this is not enough we need to go to the right hand",
    "start": "396000",
    "end": "401520"
  },
  {
    "text": "side where we can create entire confidential deployments where everything is end-to-end encrypted",
    "start": "401520",
    "end": "407720"
  },
  {
    "text": "between those containers inside those containers at runtime and where we can orchestrate that in a",
    "start": "407720",
    "end": "415139"
  },
  {
    "text": "in a secure manner in those powerful thread model to illustrate a bit more what I mean",
    "start": "415139",
    "end": "420840"
  },
  {
    "text": "with that so we're talking about the right hand side here creating confidential deployments in the cloud",
    "start": "420840",
    "end": "427800"
  },
  {
    "text": "to illustrate what that means right if we take the base right the the fundamental",
    "start": "427800",
    "end": "434280"
  },
  {
    "text": "step of moving or confidential or kubernetes node in confidential VMS so",
    "start": "434280",
    "end": "439800"
  },
  {
    "text": "every node is its own confidential VM each of them is its own confidential context the question is how do we verify",
    "start": "439800",
    "end": "446940"
  },
  {
    "text": "those contacts how you verify these VMS how you do you chain them together to kubernetes Cluster how do you protect",
    "start": "446940",
    "end": "453240"
  },
  {
    "text": "the API server protect the in transit so traffic between your containers your",
    "start": "453240",
    "end": "459660"
  },
  {
    "text": "pods how do you protect stuff that's written to storage all of these things",
    "start": "459660",
    "end": "465840"
  },
  {
    "text": "you need to take care of additionally to all the tasks so think about all the stuff you do with kubernetes now you",
    "start": "465840",
    "end": "471720"
  },
  {
    "text": "have to take care of confidential Computing stuff as well this doesn't doesn't scale this doesn't make sense",
    "start": "471720",
    "end": "477240"
  },
  {
    "text": "right so this is not enough what we need is an entire confidential",
    "start": "477240",
    "end": "483300"
  },
  {
    "text": "deployment or confidential cluster with one confidential context and I use this",
    "start": "483300",
    "end": "488639"
  },
  {
    "text": "more or less like a passive word but you get the idea one context that you can",
    "start": "488639",
    "end": "493740"
  },
  {
    "text": "verify in one concise statement and then it needs to be taken care of",
    "start": "493740",
    "end": "499319"
  },
  {
    "text": "that all of these nodes are verified are chained together that the API server is",
    "start": "499319",
    "end": "504660"
  },
  {
    "text": "verifiable that stuff that's written on the network or on the storage is also encrypted",
    "start": "504660",
    "end": "510000"
  },
  {
    "text": "and then you want all of the usual properties like scaling updating",
    "start": "510000",
    "end": "516680"
  },
  {
    "text": "backups recoveries all of this needs to be taken care of and always have in mind",
    "start": "516680",
    "end": "522060"
  },
  {
    "text": "the profile take a model you can trust nothing that's not verified inside a confidential VM context",
    "start": "522060",
    "end": "529820"
  },
  {
    "text": "so a lot of things to wrap your head around and",
    "start": "529920",
    "end": "535620"
  },
  {
    "text": "I can't go into detail of all of these aspects it's just just here to",
    "start": "535620",
    "end": "541380"
  },
  {
    "text": "understand that single confidential VMS are not enough for you to extend this concept to one big confidential",
    "start": "541380",
    "end": "549300"
  },
  {
    "text": "deployment and one project that implements this is constellation",
    "start": "549300",
    "end": "556320"
  },
  {
    "text": "it's a open source kubernetes distribution that is built around the",
    "start": "556320",
    "end": "561779"
  },
  {
    "text": "concept of confidential Computing that means it isolates entire kubernetes clusters from the infrastructure",
    "start": "561779",
    "end": "568200"
  },
  {
    "text": "but inside they're just regular kubernetes there so they are kubernetes certified you can use all of your",
    "start": "568200",
    "end": "574140"
  },
  {
    "text": "regular tooling deploy your applications and you have a CLI tool that allows you to",
    "start": "574140",
    "end": "582600"
  },
  {
    "text": "create such confidential kubernetes clusters on any",
    "start": "582600",
    "end": "587940"
  },
  {
    "text": "of the cloud providers that has the credential VM capabilities already",
    "start": "587940",
    "end": "593040"
  },
  {
    "text": "available and this is open source you can find it",
    "start": "593040",
    "end": "599640"
  },
  {
    "text": "on GitHub it comes with a documentation so you can read more about the concepts I just briefly touched on here but",
    "start": "599640",
    "end": "606180"
  },
  {
    "text": "you'll also see a demo by Sal in a bit so you will see this whole thing in action",
    "start": "606180",
    "end": "614060"
  },
  {
    "text": "so you don't need to understand all of the details and understand fully how this works as of now it's just to",
    "start": "614279",
    "end": "621000"
  },
  {
    "text": "understand the scope you're talking about here is you want to protect ourselves against the infrastructure",
    "start": "621000",
    "end": "626399"
  },
  {
    "text": "protect our kubernetes environment against the infrastructure so we reduce trust to everything that runs inside",
    "start": "626399",
    "end": "633420"
  },
  {
    "text": "kubernetes and everything that's below it is isolated and don't have access to",
    "start": "633420",
    "end": "638519"
  },
  {
    "text": "it so somebody could exploit the cloud but they won't get access to",
    "start": "638519",
    "end": "644339"
  },
  {
    "text": "any of the stuff that you deployed inside such confidential cluster and",
    "start": "644339",
    "end": "650880"
  },
  {
    "text": "with that I like to give back to sound to see how we can bring that together",
    "start": "650880",
    "end": "656459"
  },
  {
    "text": "with the regular kubernetes fat model of protecting the front door and the supply",
    "start": "656459",
    "end": "662399"
  },
  {
    "text": "chain and so forth so that we have a holistic fully protected and isolated",
    "start": "662399",
    "end": "668720"
  },
  {
    "text": "kubernetes environment that you can trust even in a hostile and potentially",
    "start": "668720",
    "end": "674839"
  },
  {
    "text": "malicious environment all right thank you very much foreign",
    "start": "674839",
    "end": "682980"
  },
  {
    "text": "thank you Moritz so now that we know what constellation can um secure against let's look at the part",
    "start": "682980",
    "end": "689700"
  },
  {
    "text": "that isn't secured um so the classical threat model still applies to your application and your",
    "start": "689700",
    "end": "695459"
  },
  {
    "text": "guest OS if an attacker were to explore your supply chain or exploit a vulnerability in your application they",
    "start": "695459",
    "end": "701880"
  },
  {
    "text": "can enter your trusted execution environment and they have lateral movement if they break out of the container so that's always something you",
    "start": "701880",
    "end": "708060"
  },
  {
    "text": "need to understand it's not a blanket safety measure and I had a bit of a hard",
    "start": "708060",
    "end": "714120"
  },
  {
    "text": "time with the demo because I could just you know technically if you're looking at the cncf landscape you could throw a",
    "start": "714120",
    "end": "719820"
  },
  {
    "text": "dartboard or darts at this and then choose a few tools and throw together a demo but I wanted something that could",
    "start": "719820",
    "end": "724880"
  },
  {
    "text": "showcase This Confidential Computing uh attestation feature really",
    "start": "724880",
    "end": "730079"
  },
  {
    "text": "and we'll look at that a bit later what FS station is and how it works but it's",
    "start": "730079",
    "end": "735480"
  },
  {
    "text": "a fairly simple stack in this demo before I start this talk is inspired by a talk I saw last year at the cloud",
    "start": "735480",
    "end": "741899"
  },
  {
    "text": "native security Con in Valencia by an IBM researcher and a cover no maintainer",
    "start": "741899",
    "end": "748759"
  },
  {
    "text": "so really cool talk about securing Supply chains signing Supply chains and",
    "start": "748940",
    "end": "754560"
  },
  {
    "text": "steps in your supply chain and your pipeline so really uh really good talk highly",
    "start": "754560",
    "end": "760740"
  },
  {
    "text": "recommend you check it out and I'll be referencing it throughout this is the stack so obviously constellation uh caverno uh and tecton",
    "start": "760740",
    "end": "768300"
  },
  {
    "text": "I'll explain what those are in a bit and then six store which is used for signing containers but also signing artifacts as",
    "start": "768300",
    "end": "774540"
  },
  {
    "text": "a whole it's a really great open source project uh and gains you a lot of traction yeah quick look at Governor if you don't",
    "start": "774540",
    "end": "780720"
  },
  {
    "text": "know what it is it's a coverno policy sorry it's a kubernetes policy engine uh",
    "start": "780720",
    "end": "786540"
  },
  {
    "text": "it's used to check block and mutate resources as they are created but also throughout their life cycle",
    "start": "786540",
    "end": "792420"
  },
  {
    "text": "um it's tightly coupled so you can create rules and matching rules and and changes",
    "start": "792420",
    "end": "798120"
  },
  {
    "text": "or blocks blocking uh Behavior based on that it's really tightly coupled to",
    "start": "798120",
    "end": "803519"
  },
  {
    "text": "kubernetes as a whole which makes it great because it can manipulate all kinds of resources",
    "start": "803519",
    "end": "809700"
  },
  {
    "text": "not just Primitives but also of other you know uh in this case tecton resources but also whatever else you",
    "start": "809700",
    "end": "816180"
  },
  {
    "text": "might use and it plays well with other yaml tooling like Helm or like rocd so",
    "start": "816180",
    "end": "821639"
  },
  {
    "text": "you can always uh you know it fits in really well the",
    "start": "821639",
    "end": "826680"
  },
  {
    "text": "sky's the limit it's it's a really great tool highly recommend you check out that talk and also just look at the docs the",
    "start": "826680",
    "end": "831779"
  },
  {
    "text": "docs have great examples tecton is a d Cloud native CI CD tool it",
    "start": "831779",
    "end": "838139"
  },
  {
    "text": "runs in your cluster you can think of a GitHub actions but running inside your your kubernetes cluster simply put it's",
    "start": "838139",
    "end": "845160"
  },
  {
    "text": "a collection of resources so you've got steps you've got tasks and you've got a",
    "start": "845160",
    "end": "850380"
  },
  {
    "text": "pipeline uh steps make up tasks and you combine tasks to make it by a pipeline",
    "start": "850380",
    "end": "855959"
  },
  {
    "text": "you can run tasks individually and a little note just each step is kind of a part you can think of it so it runs as a",
    "start": "855959",
    "end": "862680"
  },
  {
    "text": "pod and and you can watch those and see them how they behave this is the constellation quick start",
    "start": "862680",
    "end": "869220"
  },
  {
    "text": "it's I was very pleasant I was pleasantly surprised very pleasantly surprised about how easy it was to",
    "start": "869220",
    "end": "874620"
  },
  {
    "text": "create a cluster so you create you use the CLI under the hood the CLI uses terraform but that's abstracted from",
    "start": "874620",
    "end": "881699"
  },
  {
    "text": "away from you if you want you can also use raw terraform and integrate it in your own repos and",
    "start": "881699",
    "end": "887279"
  },
  {
    "text": "pipelines but you create your service principle you provide your project ID a Zone and a service account name this",
    "start": "887279",
    "end": "894959"
  },
  {
    "text": "works on all three clouds so Azure and gcp are best supported AWS doesn't have Auto scaling yet",
    "start": "894959",
    "end": "901260"
  },
  {
    "text": "um but yeah you create the service principle Which Constellation uses to spin up your cluster you generate a config you define how",
    "start": "901260",
    "end": "908579"
  },
  {
    "text": "many nodes you want in this case I'm just doing one-on-one and you have this constellation nit command which actually",
    "start": "908579",
    "end": "914100"
  },
  {
    "text": "bootstraps your cluster fairly quick um and yeah depending on the size of",
    "start": "914100",
    "end": "919139"
  },
  {
    "text": "your cluster obviously you just export this cubeconfig and you can start working with your cluster",
    "start": "919139",
    "end": "926579"
  },
  {
    "text": "yeah let's get to the demo there's not uh too much point being on the slides for that long so hopefully this works my",
    "start": "926579",
    "end": "933120"
  },
  {
    "text": "capture software is a bit dodgy sometimes these are the commands we saw this is kind of what you get so",
    "start": "933120",
    "end": "939600"
  },
  {
    "text": "you get a admin configuration constellation configuration an ID for your cluster and some Secrets",
    "start": "939600",
    "end": "946860"
  },
  {
    "text": "um obviously terraform state so this is the one that creates your service principle this is the one that creates your cluster",
    "start": "946860",
    "end": "952800"
  },
  {
    "text": "it's not recommended you you know amend these or change them but if you reach",
    "start": "952800",
    "end": "958199"
  },
  {
    "text": "out to the constellation guys or agile systems uh that the whole team is really on the ball and uh experts in our field",
    "start": "958199",
    "end": "965459"
  },
  {
    "text": "so definitely reach out to them I'm sure they'd be happy to talk to you um yeah let's get into it so this whole",
    "start": "965459",
    "end": "972060"
  },
  {
    "text": "talk is about attestation uh checking right so it's it's it's useless if you can just spin up clusters and not prove",
    "start": "972060",
    "end": "978660"
  },
  {
    "text": "that you're in a trusted execution environment and constellation friendly enough provides this great",
    "start": "978660",
    "end": "984959"
  },
  {
    "text": "um verify command that you can just run without any Flags if you want to and",
    "start": "984959",
    "end": "990240"
  },
  {
    "text": "it'll use your the files in your repo so in this case the config and the ID and check your cluster is it",
    "start": "990240",
    "end": "997259"
  },
  {
    "text": "matching what we expect is it is it is it confidential is it a is it um",
    "start": "997259",
    "end": "1003259"
  },
  {
    "text": "in The Enclave you can also provide a cluster ID if you're running multiple clusters but in this case we just have",
    "start": "1003259",
    "end": "1009500"
  },
  {
    "text": "one so we don't need to provide that um yeah a little note on the kind of",
    "start": "1009500",
    "end": "1015620"
  },
  {
    "text": "verification process so it uses these measurements this is your constellation",
    "start": "1015620",
    "end": "1021019"
  },
  {
    "text": "config and you've got measurements measurements are the collection of code and configuration that make up your",
    "start": "1021019",
    "end": "1026540"
  },
  {
    "text": "cluster in a hashed format and these are what is being checked against so that's what this verify command does and this",
    "start": "1026540",
    "end": "1032720"
  },
  {
    "text": "is why this file is required for for that command if you weren't running in this directory then it would fail or you",
    "start": "1032720",
    "end": "1038900"
  },
  {
    "text": "have to pass it somehow um there's a verification service running in your cluster so we can look",
    "start": "1038900",
    "end": "1045020"
  },
  {
    "text": "at that here this is your verification service um it's a not exposed at the moment but the",
    "start": "1045020",
    "end": "1052460"
  },
  {
    "text": "the through the CLI we can we can access it and ask it uh to verify our measurements",
    "start": "1052460",
    "end": "1058760"
  },
  {
    "text": "um the cluster of you know handling enough comes with Hubble and psyllium service mesh so it's a good base to",
    "start": "1058760",
    "end": "1064400"
  },
  {
    "text": "start on moving right along so let's clear that out",
    "start": "1064400",
    "end": "1070580"
  },
  {
    "text": "um yeah the the idea was I didn't want to be verifying myself I didn't want to be an outside verifier I mean that's",
    "start": "1070580",
    "end": "1076880"
  },
  {
    "text": "often good but sometimes you'd want to verify from inside the cluster and that's what I wanted to achieve here and",
    "start": "1076880",
    "end": "1082700"
  },
  {
    "text": "we want to do this in our pipeline to make sure our pipeline itself is aware of its surroundings and kind of tests to",
    "start": "1082700",
    "end": "1088640"
  },
  {
    "text": "the fact that it's in a in a good place so again we do know about this service",
    "start": "1088640",
    "end": "1094340"
  },
  {
    "text": "I'm providing the config and the ID as Secrets through external Secrets uh the",
    "start": "1094340",
    "end": "1100760"
  },
  {
    "text": "operator it's saved in my Secrets manager on Google and they're",
    "start": "1100760",
    "end": "1106580"
  },
  {
    "text": "injected into the cluster that way and then used by our pipeline we've got a Docker registry and registry",
    "start": "1106580",
    "end": "1112100"
  },
  {
    "text": "credentials these are environment variables for our tecton pipelines if we were to push images for instance from",
    "start": "1112100",
    "end": "1118340"
  },
  {
    "text": "that pipeline as we as we build Docker containers or oci containers or an artifacts",
    "start": "1118340",
    "end": "1124820"
  },
  {
    "text": "um yeah let's have a look at the pipeline so pipelines are fairly simple um they're made up of two tasks and then",
    "start": "1124820",
    "end": "1132620"
  },
  {
    "text": "that's what makes up this pipeline so we've got task one um which is our our constellation CLI",
    "start": "1132620",
    "end": "1138500"
  },
  {
    "text": "running our verified command against a local endpoint",
    "start": "1138500",
    "end": "1145039"
  },
  {
    "text": "um we provide our cluster ID and of course because every step is a container we can",
    "start": "1145039",
    "end": "1150919"
  },
  {
    "text": "attach a volume with our constellation config really handy and um nice that you",
    "start": "1150919",
    "end": "1156200"
  },
  {
    "text": "know every step is kind of a container and you can run custom images and whatever you need so this is just the constellation CLI I've got a",
    "start": "1156200",
    "end": "1163340"
  },
  {
    "text": "Docker file here that um builds it let's have a look at the pipeline so",
    "start": "1163340",
    "end": "1168980"
  },
  {
    "text": "yeah we've got our task here and then we've got a second task that just outputs some strings",
    "start": "1168980",
    "end": "1174740"
  },
  {
    "text": "um just to not have it be just a simple one task pipeline we've got our pipeline definition and then our pipeline run",
    "start": "1174740",
    "end": "1180799"
  },
  {
    "text": "these are two different things the pipeline can live in your cluster indefinitely the run is kind of a one",
    "start": "1180799",
    "end": "1186740"
  },
  {
    "text": "instance of or one flow through of that of that pipeline you define the both both the tasks you reference them and",
    "start": "1186740",
    "end": "1193880"
  },
  {
    "text": "then you reference your run um let's have a look at yeah there's no more no pods running in",
    "start": "1193880",
    "end": "1200720"
  },
  {
    "text": "our namespace yet but we've got a handy make file here or we can actually just run the pipeline directly",
    "start": "1200720",
    "end": "1207200"
  },
  {
    "text": "uh it's the wrong folder so here we go",
    "start": "1207200",
    "end": "1214179"
  },
  {
    "text": "create and then it creates our our pipeline um as I said the steps are pods so we",
    "start": "1214940",
    "end": "1221780"
  },
  {
    "text": "can actually see our pods initializing and running our our steps let's take a",
    "start": "1221780",
    "end": "1228200"
  },
  {
    "text": "look at this also in the dashboard hopefully dashboard won't freeze up on",
    "start": "1228200",
    "end": "1235820"
  },
  {
    "text": "me today there we go nice so this is our pipeline run four seconds uh total run time",
    "start": "1235820",
    "end": "1242059"
  },
  {
    "text": "started just now um we see we have this familiar okay thumbs",
    "start": "1242059",
    "end": "1249200"
  },
  {
    "text": "up from the constellation CLI and we have our second build step that outputs some strings",
    "start": "1249200",
    "end": "1254980"
  },
  {
    "text": "and that's it right uh kind of a simple demo but",
    "start": "1254980",
    "end": "1260500"
  },
  {
    "text": "attestation isn't kind of a very sexy thing but it is such a critical and and powerful thing for Auditors or",
    "start": "1260500",
    "end": "1268000"
  },
  {
    "text": "verifiability in general and that's why we have this so tecton won't run as a",
    "start": "1268000",
    "end": "1275179"
  },
  {
    "text": "subsequent step If the previous one had failed uh of course there's you know if statements and you can work around that",
    "start": "1275179",
    "end": "1281480"
  },
  {
    "text": "but in this case our pipeline wouldn't have run if this wasn't uh exit code no",
    "start": "1281480",
    "end": "1286580"
  },
  {
    "text": "the proper exit code and yeah that's the pipeline run so we now have a pipeline that only runs when",
    "start": "1286580",
    "end": "1292700"
  },
  {
    "text": "it is in a trusted execution environment I think that's a very powerful idea and that's what I wanted to show with this",
    "start": "1292700",
    "end": "1298039"
  },
  {
    "text": "uh first part um let's go back to our vs code hopefully it hasn't thrown up on me",
    "start": "1298039",
    "end": "1304159"
  },
  {
    "text": "nice um yeah we can see our pods have completed our our pipeline has run",
    "start": "1304159",
    "end": "1311260"
  },
  {
    "text": "uh it's yeah nice",
    "start": "1311260",
    "end": "1317240"
  },
  {
    "text": "um moving on so this is the second part um tucked on chains tucked on chains is a kind of an add-on to techton itself",
    "start": "1317240",
    "end": "1323960"
  },
  {
    "text": "doesn't come with the whole pipeline functionality you have to install the operator yourself so uh",
    "start": "1323960",
    "end": "1330580"
  },
  {
    "text": "ton chain here we go we've got this controller what tecton chains does it it watches",
    "start": "1330580",
    "end": "1337640"
  },
  {
    "text": "your pipeline and task runs and make sure that you know collect metadata about it saves",
    "start": "1337640",
    "end": "1344720"
  },
  {
    "text": "that metadata and then you can extract metadata you can look at it you can make sure that this task run happened at this",
    "start": "1344720",
    "end": "1351200"
  },
  {
    "text": "time and these were the tasks or the pipeline that ran um and yeah really handy thing and uh",
    "start": "1351200",
    "end": "1357440"
  },
  {
    "text": "the the demo I mentioned earlier that inspired this uh demo uses pipeline",
    "start": "1357440",
    "end": "1363440"
  },
  {
    "text": "bundles which is a tecton experimental feature they seem to be pushing this change thing a bit harder so",
    "start": "1363440",
    "end": "1370820"
  },
  {
    "text": "um yeah that started to go with that instead we can look at our previous task run so using the CLI we don't have to",
    "start": "1370820",
    "end": "1377240"
  },
  {
    "text": "use the dashboard we can also just use the CLI here and we can see our previous task run",
    "start": "1377240",
    "end": "1383120"
  },
  {
    "text": "close this for now um uh we can look at it here we can also use commands to extract our uid so we we",
    "start": "1383120",
    "end": "1392120"
  },
  {
    "text": "take the uid from that output and then we describe it and dump out a base64 signature of of",
    "start": "1392120",
    "end": "1399980"
  },
  {
    "text": "that task run so if I can copy this yeah so we get this signature file here and",
    "start": "1399980",
    "end": "1408860"
  },
  {
    "text": "it's just you Basics D4 encoded a signature of our run and what we want to",
    "start": "1408860",
    "end": "1414200"
  },
  {
    "text": "do now is check it right we want to check that was this run by the right person was this run in the right cluster was this were",
    "start": "1414200",
    "end": "1421340"
  },
  {
    "text": "the correct signing Secrets used and this is where cosine comes in handy um",
    "start": "1421340",
    "end": "1427580"
  },
  {
    "text": "we have this uh salsa provenance so provenance is this I have it here",
    "start": "1427580",
    "end": "1433059"
  },
  {
    "text": "because it's uh this is a nice way of putting it Providence is a claim that some entity or Builder produced one or",
    "start": "1433059",
    "end": "1438620"
  },
  {
    "text": "more software artifacts by executing some recipes so this is what we're doing right that's that's exactly what we're",
    "start": "1438620",
    "end": "1443659"
  },
  {
    "text": "doing and this is what cosine does for us uh in this case and that's why it's part of this demo",
    "start": "1443659",
    "end": "1449299"
  },
  {
    "text": "and the part of the stack and I highly recommend you check out the docs because software signing is going to be abundant and it's just rapidly increasing so we",
    "start": "1449299",
    "end": "1456620"
  },
  {
    "text": "get the thumbs up here we get the verified okay meaning this is uh the overlay matched and uh we",
    "start": "1456620",
    "end": "1463400"
  },
  {
    "text": "can be happy um yeah that's the that's the second part so now we have a pipeline that only runs when it's in a trusted execution",
    "start": "1463400",
    "end": "1470120"
  },
  {
    "text": "environment and we've also signed that Pipeline and checked that it's been it was valid end",
    "start": "1470120",
    "end": "1475640"
  },
  {
    "text": "to end right so double check um just to reference that talk again so",
    "start": "1475640",
    "end": "1481520"
  },
  {
    "text": "what they do in their talk is they go into each step each step and each task and then the pipeline as a whole sign",
    "start": "1481520",
    "end": "1488840"
  },
  {
    "text": "all of those and verify them with cosine using caverno this image extractor",
    "start": "1488840",
    "end": "1494480"
  },
  {
    "text": "feature which was released in 1.7 you can check public keys and hashes of",
    "start": "1494480",
    "end": "1500299"
  },
  {
    "text": "not only container images but any sort of artifact uh and that's what they're doing they're doing this like provable",
    "start": "1500299",
    "end": "1506600"
  },
  {
    "text": "verifiability of each of the steps and and the steps as a as a sum of the some of its parts really really cool things",
    "start": "1506600",
    "end": "1514100"
  },
  {
    "text": "I just wanted to show a fraction of that here um but again check out the talk um so yeah Carver no acrobatics I call",
    "start": "1514100",
    "end": "1521840"
  },
  {
    "text": "it because this thing is just you can do anything with it um we have a cluster policy so you have",
    "start": "1521840",
    "end": "1528260"
  },
  {
    "text": "policies that apply to namespaces only or cluster policy that are cluster-wide this one's called require Von scan so",
    "start": "1528260",
    "end": "1534320"
  },
  {
    "text": "vulnerability scan and what it does is it uses this image extractor feature to",
    "start": "1534320",
    "end": "1540020"
  },
  {
    "text": "go into our task run and see if we can just look at a task run here",
    "start": "1540020",
    "end": "1546880"
  },
  {
    "text": "yeah we can see two tasks right we have our check and then our build it goes in there checks the image checks",
    "start": "1547220",
    "end": "1552919"
  },
  {
    "text": "the image name goes into the reference and checks that that image was actually signed by this public key that we Define",
    "start": "1552919",
    "end": "1559820"
  },
  {
    "text": "and that way we can again have a test a tested verifiability",
    "start": "1559820",
    "end": "1566179"
  },
  {
    "text": "sorry the capture software froze on me there but we were talking about the attestations and the other type of thing you can do",
    "start": "1566179",
    "end": "1572840"
  },
  {
    "text": "here with caverno in the same definition you can attest to the vulnerability score or the impact score using gripe uh",
    "start": "1572840",
    "end": "1580580"
  },
  {
    "text": "vulnerability scanning tool and only you know this would block it this would be",
    "start": "1580580",
    "end": "1585740"
  },
  {
    "text": "you know an enforced Rule and would block any container that this you know",
    "start": "1585740",
    "end": "1590840"
  },
  {
    "text": "this is being applied to if there are vulnerabilities in there you know the value has to be zero you",
    "start": "1590840",
    "end": "1596179"
  },
  {
    "text": "can't have any impact score greater than eight um really cool and we're still using",
    "start": "1596179",
    "end": "1601820"
  },
  {
    "text": "Governor we're not obviously we're using grave here and a bit of you know public key infrastructure but",
    "start": "1601820",
    "end": "1609980"
  },
  {
    "text": "we're still on the covernal and this is the only tool in our stack at the moment so really really powerful stuff I",
    "start": "1609980",
    "end": "1615260"
  },
  {
    "text": "recommend you check out the talk as well as the docs really good example and you can do a lot with this right you apply pod security standards you do some good",
    "start": "1615260",
    "end": "1623240"
  },
  {
    "text": "best practices and then you apply those policies to your cluster and then you can always have this peace of mind that",
    "start": "1623240",
    "end": "1629720"
  },
  {
    "text": "this is being enforced everywhere um always make sure obviously to check not only containers but also init",
    "start": "1629720",
    "end": "1636320"
  },
  {
    "text": "containers and ephemeral containers but the examples are really good on this um",
    "start": "1636320",
    "end": "1641600"
  },
  {
    "text": "yeah so that was the kind of second part uh or yeah oh almost last part um",
    "start": "1641600",
    "end": "1647419"
  },
  {
    "text": "I'll just head back to the slides and then we'll take a look at those",
    "start": "1647419",
    "end": "1653020"
  },
  {
    "text": "freeze on me yes it did I'll be right back",
    "start": "1654440",
    "end": "1660760"
  },
  {
    "text": "there we go we're back so this is a diagram I have from the previous talk I mentioned",
    "start": "1661940",
    "end": "1666980"
  },
  {
    "text": "um it shows how on every level you can perform these sign checks with cosine uh",
    "start": "1666980",
    "end": "1673279"
  },
  {
    "text": "you can check individual tasks steps and then also containers uh this one I'd",
    "start": "1673279",
    "end": "1678919"
  },
  {
    "text": "also like to highlight where you have uh kubernetes misconfigurations right maybe someone's running the default namespace",
    "start": "1678919",
    "end": "1684500"
  },
  {
    "text": "you can block that with coverino you can require security security context you can apply pod security",
    "start": "1684500",
    "end": "1691220"
  },
  {
    "text": "standards as a whole right automatically through um coverno in their talk they're also",
    "start": "1691220",
    "end": "1696799"
  },
  {
    "text": "creating persistent volumes upon creation of the namespace so really",
    "start": "1696799",
    "end": "1701900"
  },
  {
    "text": "really powerful tool that's just one tool and you can do all these things so no need to bloat up your cluster",
    "start": "1701900",
    "end": "1707059"
  },
  {
    "text": "immediately I mean I do recommend you check out all the tools and use what's right for your use case but you can keep",
    "start": "1707059",
    "end": "1714140"
  },
  {
    "text": "it simple and and still be very effective um vulnerability scans uh",
    "start": "1714140",
    "end": "1721159"
  },
  {
    "text": "all the way down um yeah that's that's all I wanted to show with this",
    "start": "1721159",
    "end": "1727159"
  },
  {
    "text": "uh there we go so this is the getting started tutorial that we kind of just",
    "start": "1727159",
    "end": "1732919"
  },
  {
    "text": "ran through with the tecton chains example kind of a redundant diagram here but we",
    "start": "1732919",
    "end": "1739940"
  },
  {
    "text": "have this cosine pair that we generated in the beginning I had pre-generated it we use chains technon chains to look at",
    "start": "1739940",
    "end": "1747260"
  },
  {
    "text": "our pipeline run the pipeline run is here in green it runs and then we get the snapshot we get all the",
    "start": "1747260",
    "end": "1753380"
  },
  {
    "text": "metadata about it and then we test it we check it we we verify the signature up here 0.6 and that's kind of what we're",
    "start": "1753380",
    "end": "1759799"
  },
  {
    "text": "doing so you overlay your signatures and you check that it uh it corresponds to what uh what we need",
    "start": "1759799",
    "end": "1766640"
  },
  {
    "text": "that's it uh thank you so much for your uh attention and uh joining the stream",
    "start": "1766640",
    "end": "1772159"
  },
  {
    "text": "um looking forward to all the other talks and we're open for questions now uh check us out on LinkedIn go um",
    "start": "1772159",
    "end": "1778760"
  },
  {
    "text": "yeah this is a little part I forgot but I think it just summarizes what uh what I was trying to say earlier which is",
    "start": "1778760",
    "end": "1784820"
  },
  {
    "text": "where you can verify everything and now with constellation we can also verify that our pipeline is actually in a in a",
    "start": "1784820",
    "end": "1790399"
  },
  {
    "text": "trusted execution environment running on confidential VMS we can attest to that um as well but yeah check out",
    "start": "1790399",
    "end": "1797059"
  },
  {
    "text": "constellation find us on LinkedIn uh we look forward to talking to you and have a nice day",
    "start": "1797059",
    "end": "1804200"
  },
  {
    "text": "because [Music]",
    "start": "1804200",
    "end": "1817190"
  },
  {
    "text": "[Applause] [Music]",
    "start": "1817190",
    "end": "1829539"
  },
  {
    "text": "laughs [Music]",
    "start": "1830480",
    "end": "1865359"
  },
  {
    "text": "[Music]",
    "start": "1867680",
    "end": "1876919"
  },
  {
    "text": "[Music]",
    "start": "1889870",
    "end": "1896089"
  },
  {
    "text": "foreign",
    "start": "1906380",
    "end": "1908620"
  },
  {
    "text": "[Music] [Applause] [Music]",
    "start": "1926060",
    "end": "1931500"
  },
  {
    "text": "[Applause]",
    "start": "1940770",
    "end": "1945190"
  },
  {
    "text": "[Applause] foreign",
    "start": "1947190",
    "end": "1954278"
  },
  {
    "text": "foreign [Music]",
    "start": "1957440",
    "end": "1967099"
  }
]