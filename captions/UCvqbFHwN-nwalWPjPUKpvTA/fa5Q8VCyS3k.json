[
  {
    "start": "0",
    "end": "59000"
  },
  {
    "text": "all right well good afternoon and",
    "start": "500",
    "end": "2639"
  },
  {
    "text": "welcome everybody thanks for coming to",
    "start": "2639",
    "end": "4380"
  },
  {
    "text": "the session we've got a lot of",
    "start": "4380",
    "end": "7740"
  },
  {
    "text": "interesting stuff to take a look at here",
    "start": "7740",
    "end": "9530"
  },
  {
    "text": "regarding windows and containers from",
    "start": "9530",
    "end": "12030"
  },
  {
    "text": "the experts",
    "start": "12030",
    "end": "14130"
  },
  {
    "text": "you know perhaps the company that",
    "start": "14130",
    "end": "16139"
  },
  {
    "text": "produced the most transformational",
    "start": "16139",
    "end": "18119"
  },
  {
    "text": "DevOps tool that we've seen in the last",
    "start": "18119",
    "end": "20550"
  },
  {
    "text": "decade docker and mer antis I'd like to",
    "start": "20550",
    "end": "23340"
  },
  {
    "text": "introduce deep in John thanks having a",
    "start": "23340",
    "end": "35610"
  },
  {
    "text": "great con so far and welcome to the",
    "start": "35610",
    "end": "40469"
  },
  {
    "text": "afternoon session around super powers",
    "start": "40469",
    "end": "42420"
  },
  {
    "text": "for Windows containers so presenting the",
    "start": "42420",
    "end": "45899"
  },
  {
    "text": "session would be genre which my coworker",
    "start": "45899",
    "end": "48840"
  },
  {
    "text": "from docker he's a very active sig",
    "start": "48840",
    "end": "51120"
  },
  {
    "text": "Windows contributor and I deep Dubrow",
    "start": "51120",
    "end": "53610"
  },
  {
    "text": "I'm an engineering manager at docker and",
    "start": "53610",
    "end": "55620"
  },
  {
    "text": "tech lead over in cig windows so the",
    "start": "55620",
    "end": "60719"
  },
  {
    "start": "59000",
    "end": "59000"
  },
  {
    "text": "agenda for the session roughly we are",
    "start": "60719",
    "end": "62820"
  },
  {
    "text": "going to go over a very quick intro to",
    "start": "62820",
    "end": "64350"
  },
  {
    "text": "the history of support for continued",
    "start": "64350",
    "end": "66299"
  },
  {
    "text": "rise workloads in kubernetes for Windows",
    "start": "66299",
    "end": "69630"
  },
  {
    "text": "and then go over the concept of",
    "start": "69630",
    "end": "72210"
  },
  {
    "text": "privileged operations and the support",
    "start": "72210",
    "end": "74580"
  },
  {
    "text": "for that in Windows containers which",
    "start": "74580",
    "end": "76290"
  },
  {
    "text": "pretty much does not exist at the moment",
    "start": "76290",
    "end": "77960"
  },
  {
    "text": "we'll look at a possible workaround that",
    "start": "77960",
    "end": "80670"
  },
  {
    "text": "the community has sort of agreed upon",
    "start": "80670",
    "end": "82770"
  },
  {
    "text": "which is based on this concept of",
    "start": "82770",
    "end": "84720"
  },
  {
    "text": "privileged proxies we will look at the",
    "start": "84720",
    "end": "86909"
  },
  {
    "text": "specific design of such a privileged",
    "start": "86909",
    "end": "88590"
  },
  {
    "text": "proxy for the area of persistent storage",
    "start": "88590",
    "end": "91140"
  },
  {
    "text": "well look at how privileged proxies can",
    "start": "91140",
    "end": "93509"
  },
  {
    "text": "potentially be used in other areas like",
    "start": "93509",
    "end": "95490"
  },
  {
    "text": "networking diagnostics and so on and so",
    "start": "95490",
    "end": "97829"
  },
  {
    "text": "forth for Windows nodes and finally",
    "start": "97829",
    "end": "100799"
  },
  {
    "text": "conclude with future directions and a",
    "start": "100799",
    "end": "103530"
  },
  {
    "text": "demo so very quick introduction to the",
    "start": "103530",
    "end": "108600"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "history of Windows containers Windows",
    "start": "108600",
    "end": "110490"
  },
  {
    "text": "Server 2016 was the first LTS release",
    "start": "110490",
    "end": "112799"
  },
  {
    "text": "when initial support for containers made",
    "start": "112799",
    "end": "115560"
  },
  {
    "text": "it to Windows a lot of enhancements were",
    "start": "115560",
    "end": "118229"
  },
  {
    "text": "made between 2016 and 2019 through the",
    "start": "118229",
    "end": "121530"
  },
  {
    "text": "rs3 and RS 4 releases and along the same",
    "start": "121530",
    "end": "125040"
  },
  {
    "text": "time a lot of folks from say windows had",
    "start": "125040",
    "end": "126930"
  },
  {
    "text": "been constant has been concentrating on",
    "start": "126930",
    "end": "128610"
  },
  {
    "text": "getting the cubelet and other components",
    "start": "128610",
    "end": "131310"
  },
  {
    "text": "of kubernetes up and ready for Windows",
    "start": "131310",
    "end": "133680"
  },
  {
    "text": "nodes",
    "start": "133680",
    "end": "134580"
  },
  {
    "text": "so finally around kubernetes 114 the",
    "start": "134580",
    "end": "137490"
  },
  {
    "text": "overall kubernetes community and Segway",
    "start": "137490",
    "end": "139410"
  },
  {
    "text": "nose was ready to declare stable G as",
    "start": "139410",
    "end": "141330"
  },
  {
    "text": "support for Windows workloads and as you",
    "start": "141330",
    "end": "145860"
  },
  {
    "start": "144000",
    "end": "144000"
  },
  {
    "text": "guys probably heard in the session right",
    "start": "145860",
    "end": "147510"
  },
  {
    "text": "before introduction to Windows a lot of",
    "start": "147510",
    "end": "149790"
  },
  {
    "text": "work is upcoming to build support for",
    "start": "149790",
    "end": "152730"
  },
  {
    "text": "container D and things around those",
    "start": "152730",
    "end": "154500"
  },
  {
    "text": "lines in 1903 and in future versions of",
    "start": "154500",
    "end": "157200"
  },
  {
    "text": "kubernetes so here's a very quick",
    "start": "157200",
    "end": "159210"
  },
  {
    "text": "overview of how and a very high-level",
    "start": "159210",
    "end": "161280"
  },
  {
    "text": "overview of how a kubernetes clusters",
    "start": "161280",
    "end": "163260"
  },
  {
    "text": "with Windows and Linux nodes looks like",
    "start": "163260",
    "end": "164760"
  },
  {
    "text": "the control plane still runs completely",
    "start": "164760",
    "end": "167370"
  },
  {
    "text": "on Linux masters but for the worker",
    "start": "167370",
    "end": "170730"
  },
  {
    "text": "nodes you can have a mix of Linux and",
    "start": "170730",
    "end": "173070"
  },
  {
    "text": "windows so the windows nodes are going",
    "start": "173070",
    "end": "175350"
  },
  {
    "text": "to run the pods that comprise of",
    "start": "175350",
    "end": "177690"
  },
  {
    "text": "containers whose base images are Windows",
    "start": "177690",
    "end": "180480"
  },
  {
    "text": "based images they would be running your",
    "start": "180480",
    "end": "183930"
  },
  {
    "text": "Windows workloads as well as the cube",
    "start": "183930",
    "end": "186390"
  },
  {
    "text": "led to proxy and plugins necessary for",
    "start": "186390",
    "end": "188790"
  },
  {
    "text": "storage and networking the Linux model",
    "start": "188790",
    "end": "191910"
  },
  {
    "text": "does not change the layin EPS workers",
    "start": "191910",
    "end": "193230"
  },
  {
    "text": "run pretty much the same set of stuff",
    "start": "193230",
    "end": "196640"
  },
  {
    "start": "196000",
    "end": "196000"
  },
  {
    "text": "now one interesting deficiency or",
    "start": "196640",
    "end": "199560"
  },
  {
    "text": "limitation for the container support in",
    "start": "199560",
    "end": "201690"
  },
  {
    "text": "Windows is there's no concept of",
    "start": "201690",
    "end": "203460"
  },
  {
    "text": "capabilities this is something you might",
    "start": "203460",
    "end": "206010"
  },
  {
    "text": "be used to in the Linux world where",
    "start": "206010",
    "end": "207810"
  },
  {
    "text": "every container can be assigned a",
    "start": "207810",
    "end": "209370"
  },
  {
    "text": "specific set of capabilities all the way",
    "start": "209370",
    "end": "211200"
  },
  {
    "text": "up to something called privileged which",
    "start": "211200",
    "end": "213660"
  },
  {
    "text": "allows a container to have full access",
    "start": "213660",
    "end": "215430"
  },
  {
    "text": "to the host and perform a wide variety",
    "start": "215430",
    "end": "217680"
  },
  {
    "text": "of operations on the host that otherwise",
    "start": "217680",
    "end": "220260"
  },
  {
    "text": "a regular container cannot do in case of",
    "start": "220260",
    "end": "223380"
  },
  {
    "text": "Windows that option is not there so as a",
    "start": "223380",
    "end": "226440"
  },
  {
    "text": "result a lot of privileged operations",
    "start": "226440",
    "end": "228270"
  },
  {
    "text": "cannot be easily performed by Windows",
    "start": "228270",
    "end": "230940"
  },
  {
    "text": "containers some of these involve",
    "start": "230940",
    "end": "233010"
  },
  {
    "text": "accessing and managing the host registry",
    "start": "233010",
    "end": "235730"
  },
  {
    "text": "managing host network configuration if",
    "start": "235730",
    "end": "238140"
  },
  {
    "text": "you want a Windows container to be in",
    "start": "238140",
    "end": "240209"
  },
  {
    "text": "charge of networking for the rest of the",
    "start": "240209",
    "end": "242790"
  },
  {
    "text": "other containers in the host it's",
    "start": "242790",
    "end": "244500"
  },
  {
    "text": "typically a case for CNI plugins and the",
    "start": "244500",
    "end": "247650"
  },
  {
    "text": "ability to access and manage storage",
    "start": "247650",
    "end": "250410"
  },
  {
    "text": "devices such as disks volumes and so on",
    "start": "250410",
    "end": "252840"
  },
  {
    "text": "from the host this allows container",
    "start": "252840",
    "end": "256310"
  },
  {
    "text": "encapsulating say CSI node plug-in logic",
    "start": "256310",
    "end": "259049"
  },
  {
    "text": "to be able to provision storage for",
    "start": "259049",
    "end": "262109"
  },
  {
    "text": "other containers running on the host",
    "start": "262109",
    "end": "265370"
  },
  {
    "text": "so given this lack of ability the pretty",
    "start": "265470",
    "end": "269130"
  },
  {
    "text": "much windows containers are a bit",
    "start": "269130",
    "end": "270300"
  },
  {
    "text": "handicapped when it comes to acting as",
    "start": "270300",
    "end": "271860"
  },
  {
    "text": "full-fledged kubernetes daemon sets this",
    "start": "271860",
    "end": "274500"
  },
  {
    "text": "specifically becomes a problem when",
    "start": "274500",
    "end": "276090"
  },
  {
    "text": "you're thinking about CNI and CSI",
    "start": "276090",
    "end": "277770"
  },
  {
    "text": "plugins so the community started",
    "start": "277770",
    "end": "281400"
  },
  {
    "start": "280000",
    "end": "280000"
  },
  {
    "text": "thinking about that we were we we",
    "start": "281400",
    "end": "283800"
  },
  {
    "text": "discussed it quite a bit in sig windows",
    "start": "283800",
    "end": "285300"
  },
  {
    "text": "and storage was one of the areas both",
    "start": "285300",
    "end": "288150"
  },
  {
    "text": "John and I are interested in so we're",
    "start": "288150",
    "end": "289830"
  },
  {
    "text": "looking at looking at it also from the",
    "start": "289830",
    "end": "291540"
  },
  {
    "text": "storage perspective and we came up with",
    "start": "291540",
    "end": "293550"
  },
  {
    "text": "a bunch of different options or",
    "start": "293550",
    "end": "295440"
  },
  {
    "text": "workarounds for this lack of Rivlin",
    "start": "295440",
    "end": "297090"
  },
  {
    "text": "support one is just allowing a container",
    "start": "297090",
    "end": "300210"
  },
  {
    "text": "remote shell access into the host",
    "start": "300210",
    "end": "302280"
  },
  {
    "text": "obviously this sounds very dangerous but",
    "start": "302280",
    "end": "304680"
  },
  {
    "text": "it could be achieved over something like",
    "start": "304680",
    "end": "306060"
  },
  {
    "text": "say secure shell or PowerShell but it's",
    "start": "306060",
    "end": "309720"
  },
  {
    "text": "very challenging to constrain the it's",
    "start": "309720",
    "end": "311520"
  },
  {
    "text": "very challenging to constrain the set of",
    "start": "311520",
    "end": "312900"
  },
  {
    "text": "operations that a container can perform",
    "start": "312900",
    "end": "315990"
  },
  {
    "text": "on the host it's completely unfettered",
    "start": "315990",
    "end": "317700"
  },
  {
    "text": "access so this was too radical thing and",
    "start": "317700",
    "end": "321060"
  },
  {
    "text": "the community decided against it",
    "start": "321060",
    "end": "322890"
  },
  {
    "text": "another process or another approach that",
    "start": "322890",
    "end": "325470"
  },
  {
    "text": "was thought about was how about that the",
    "start": "325470",
    "end": "328860"
  },
  {
    "text": "the base desire was the ability to ship",
    "start": "328860",
    "end": "332250"
  },
  {
    "text": "out logic within containers so what if",
    "start": "332250",
    "end": "335040"
  },
  {
    "text": "there was something called a specialized",
    "start": "335040",
    "end": "337470"
  },
  {
    "text": "runtime class that the windows runtime",
    "start": "337470",
    "end": "341300"
  },
  {
    "text": "surfaces that allows a container image",
    "start": "341300",
    "end": "344430"
  },
  {
    "text": "to come down into the windows node but",
    "start": "344430",
    "end": "346560"
  },
  {
    "text": "the payload be extracted and launched as",
    "start": "346560",
    "end": "348390"
  },
  {
    "text": "a process now this could be achieved",
    "start": "348390",
    "end": "350910"
  },
  {
    "text": "through extensible container runtime",
    "start": "350910",
    "end": "354120"
  },
  {
    "text": "likes a container D which allows you to",
    "start": "354120",
    "end": "356280"
  },
  {
    "text": "write specific shims so you can run",
    "start": "356280",
    "end": "358500"
  },
  {
    "text": "something called a process shim that",
    "start": "358500",
    "end": "361440"
  },
  {
    "text": "needs to be designed that allows you to",
    "start": "361440",
    "end": "363450"
  },
  {
    "text": "extract a payload from windows image and",
    "start": "363450",
    "end": "366240"
  },
  {
    "text": "run it directly as a host process with",
    "start": "366240",
    "end": "369000"
  },
  {
    "text": "all the privileges of say a Windows",
    "start": "369000",
    "end": "371970"
  },
  {
    "text": "service however this is not a container",
    "start": "371970",
    "end": "374430"
  },
  {
    "text": "and this again allows for fairly",
    "start": "374430",
    "end": "376500"
  },
  {
    "text": "unfettered access into the host and was",
    "start": "376500",
    "end": "378419"
  },
  {
    "text": "kind of considered a bit too radical to",
    "start": "378419",
    "end": "380640"
  },
  {
    "text": "start off with so what we eventually",
    "start": "380640",
    "end": "382770"
  },
  {
    "text": "decided on is this mechanism called a",
    "start": "382770",
    "end": "385229"
  },
  {
    "text": "privileged proxy which is basically a",
    "start": "385229",
    "end": "387570"
  },
  {
    "text": "specific logic that's coded into a",
    "start": "387570",
    "end": "390479"
  },
  {
    "text": "binary that needs to be run on the host",
    "start": "390479",
    "end": "392340"
  },
  {
    "text": "and a bunch of different containers can",
    "start": "392340",
    "end": "394710"
  },
  {
    "text": "access the privileged process to",
    "start": "394710",
    "end": "397400"
  },
  {
    "text": "accomplish the set Aubrey",
    "start": "397400",
    "end": "399249"
  },
  {
    "text": "that they need and this is going to be",
    "start": "399249",
    "end": "401289"
  },
  {
    "text": "the focus of this presentation so that",
    "start": "401289",
    "end": "405789"
  },
  {
    "start": "404000",
    "end": "404000"
  },
  {
    "text": "approach basically that's just gonna be",
    "start": "405789",
    "end": "408069"
  },
  {
    "text": "a row binary that's running on the host",
    "start": "408069",
    "end": "409869"
  },
  {
    "text": "itself that's gonna run with admin",
    "start": "409869",
    "end": "413019"
  },
  {
    "text": "access and so it can do whatever it",
    "start": "413019",
    "end": "414729"
  },
  {
    "text": "wants and then exposes the capabilities",
    "start": "414729",
    "end": "417879"
  },
  {
    "text": "that it has through name pipes so that",
    "start": "417879",
    "end": "420009"
  },
  {
    "text": "members can get can then be mounted in",
    "start": "420009",
    "end": "421629"
  },
  {
    "text": "containers and containers can have",
    "start": "421629",
    "end": "423699"
  },
  {
    "text": "privileged access to the hosts that way",
    "start": "423699",
    "end": "425739"
  },
  {
    "text": "so hopefully I mean that this binary",
    "start": "425739",
    "end": "428979"
  },
  {
    "text": "needs to somehow make it to the worker",
    "start": "428979",
    "end": "431189"
  },
  {
    "text": "and somehow be run so there's no good",
    "start": "431189",
    "end": "434379"
  },
  {
    "text": "solution there's no standard solution",
    "start": "434379",
    "end": "435999"
  },
  {
    "text": "for that but that's something that admin",
    "start": "435999",
    "end": "439179"
  },
  {
    "text": "clusters today are used to dealing with",
    "start": "439179",
    "end": "440889"
  },
  {
    "text": "on Windows because they still have to",
    "start": "440889",
    "end": "443229"
  },
  {
    "text": "today they still have to make sure the",
    "start": "443229",
    "end": "445689"
  },
  {
    "text": "cube ladies running the cube proxy is",
    "start": "445689",
    "end": "447399"
  },
  {
    "text": "running that duck ad is running so we",
    "start": "447399",
    "end": "450339"
  },
  {
    "text": "don't have a good solution for that but",
    "start": "450339",
    "end": "451599"
  },
  {
    "text": "it's not it's not really a new problem",
    "start": "451599",
    "end": "454209"
  },
  {
    "text": "either so whatever your dispro uses to",
    "start": "454209",
    "end": "456789"
  },
  {
    "text": "get the cube left on the node and",
    "start": "456789",
    "end": "458439"
  },
  {
    "text": "running you can use for the for a proxy",
    "start": "458439",
    "end": "460689"
  },
  {
    "text": "as well and the good thing one of the",
    "start": "460689",
    "end": "463449"
  },
  {
    "text": "good things about this design is that",
    "start": "463449",
    "end": "465239"
  },
  {
    "text": "the supported operations by the proxy",
    "start": "465239",
    "end": "467889"
  },
  {
    "text": "can beep so it can be scoped to your OS",
    "start": "467889",
    "end": "469839"
  },
  {
    "text": "subsystems and so it's it's really easy",
    "start": "469839",
    "end": "471999"
  },
  {
    "text": "for the proxy to enforce constraints and",
    "start": "471999",
    "end": "474610"
  },
  {
    "text": "restriction as to who has the right to",
    "start": "474610",
    "end": "476409"
  },
  {
    "text": "do what",
    "start": "476409",
    "end": "476949"
  },
  {
    "text": "as opposed to what deep with we're",
    "start": "476949",
    "end": "479409"
  },
  {
    "text": "talking about before having a remote",
    "start": "479409",
    "end": "481419"
  },
  {
    "text": "access to the host this really allows 5n",
    "start": "481419",
    "end": "484360"
  },
  {
    "text": "control and what containers can actually",
    "start": "484360",
    "end": "486399"
  },
  {
    "text": "do through the proxy so the architecture",
    "start": "486399",
    "end": "490149"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "looks something like this so this whole",
    "start": "490149",
    "end": "492819"
  },
  {
    "text": "image is a Windows worker so you have",
    "start": "492819",
    "end": "495129"
  },
  {
    "text": "your cube LED running dr. D and the",
    "start": "495129",
    "end": "497499"
  },
  {
    "text": "cuckoo proxy running so these are what",
    "start": "497499",
    "end": "499599"
  },
  {
    "text": "you need today to have your work your",
    "start": "499599",
    "end": "501999"
  },
  {
    "text": "your Windows worker node in your in your",
    "start": "501999",
    "end": "503829"
  },
  {
    "text": "cluster and so I had adding a proxy is",
    "start": "503829",
    "end": "506259"
  },
  {
    "text": "just adding yet another binary that's",
    "start": "506259",
    "end": "507969"
  },
  {
    "text": "running and that's exposing its",
    "start": "507969",
    "end": "510009"
  },
  {
    "text": "capabilities through an EM pipes and",
    "start": "510009",
    "end": "511839"
  },
  {
    "text": "these named pipes can then be mounted",
    "start": "511839",
    "end": "513758"
  },
  {
    "text": "into your pods so that the manifest file",
    "start": "513759",
    "end": "516399"
  },
  {
    "text": "you have to the right which is using non",
    "start": "516399",
    "end": "519939"
  },
  {
    "text": "pass floating mount allows to run the",
    "start": "519939",
    "end": "522399"
  },
  {
    "text": "pipes in the container that you want to",
    "start": "522399",
    "end": "524078"
  },
  {
    "text": "be able to use these capabilities and",
    "start": "524079",
    "end": "525910"
  },
  {
    "text": "then they can make remote calls into the",
    "start": "525910",
    "end": "527559"
  },
  {
    "text": "proxy and do what they need to do this",
    "start": "527559",
    "end": "529629"
  },
  {
    "text": "way so this",
    "start": "529629",
    "end": "532490"
  },
  {
    "text": "this manifest file sure how easy would",
    "start": "532490",
    "end": "534440"
  },
  {
    "text": "be to use that to have privileged",
    "start": "534440",
    "end": "537830"
  },
  {
    "text": "containers to do what you need to do and",
    "start": "537830",
    "end": "540170"
  },
  {
    "text": "use that for for example CSIS see and I",
    "start": "540170",
    "end": "542420"
  },
  {
    "text": "plugins the same it used to Linux doing",
    "start": "542420",
    "end": "546220"
  },
  {
    "start": "545000",
    "end": "545000"
  },
  {
    "text": "sir considerations for deploying this",
    "start": "546220",
    "end": "548630"
  },
  {
    "text": "proxy that's what one of the things we",
    "start": "548630",
    "end": "551600"
  },
  {
    "text": "brought down before yeah that binary",
    "start": "551600",
    "end": "553070"
  },
  {
    "text": "needs to be somehow run manage not any",
    "start": "553070",
    "end": "555800"
  },
  {
    "text": "problem up to you but one of the good",
    "start": "555800",
    "end": "558920"
  },
  {
    "text": "things about this proxy is its it's",
    "start": "558920",
    "end": "561320"
  },
  {
    "text": "really easy to have control and who does",
    "start": "561320",
    "end": "563990"
  },
  {
    "text": "what and one of the way to do that would",
    "start": "563990",
    "end": "566060"
  },
  {
    "text": "be using pod security policies and when",
    "start": "566060",
    "end": "568060"
  },
  {
    "text": "admission can run web hooks to decide",
    "start": "568060",
    "end": "570710"
  },
  {
    "text": "which parts and which namespaces I",
    "start": "570710",
    "end": "572570"
  },
  {
    "text": "actually have pretty little access to",
    "start": "572570",
    "end": "574040"
  },
  {
    "text": "the hosts so let's look at what that",
    "start": "574040",
    "end": "577310"
  },
  {
    "start": "576000",
    "end": "576000"
  },
  {
    "text": "would look like in practice",
    "start": "577310",
    "end": "578660"
  },
  {
    "text": "so using port security policies you",
    "start": "578660",
    "end": "580850"
  },
  {
    "text": "could have",
    "start": "580850",
    "end": "583149"
  },
  {
    "text": "all that youth that pot security policy",
    "start": "591440",
    "end": "593899"
  },
  {
    "text": "and we bind that cluster role to",
    "start": "593899",
    "end": "596029"
  },
  {
    "text": "everyone so by default once you do that",
    "start": "596029",
    "end": "598160"
  },
  {
    "text": "no one can use volume ants in your",
    "start": "598160",
    "end": "600709"
  },
  {
    "text": "cluster anymore and so that way people",
    "start": "600709",
    "end": "603069"
  },
  {
    "text": "can't use the name pipes that the proxy",
    "start": "603069",
    "end": "605720"
  },
  {
    "text": "exposes for the pods and the services",
    "start": "605720",
    "end": "609259"
  },
  {
    "text": "that you do you want to have using a",
    "start": "609259",
    "end": "611660"
  },
  {
    "text": "proxy then you create a new signal new",
    "start": "611660",
    "end": "613399"
  },
  {
    "text": "pod security policy which has the",
    "start": "613399",
    "end": "615439"
  },
  {
    "text": "house-passed capability in the volume",
    "start": "615439",
    "end": "617000"
  },
  {
    "text": "mount you create a cluster role to use",
    "start": "617000",
    "end": "619519"
  },
  {
    "text": "that security policy and then you bind",
    "start": "619519",
    "end": "621410"
  },
  {
    "text": "that that cluster role to whichever",
    "start": "621410",
    "end": "624170"
  },
  {
    "text": "namespace and service accounts you want",
    "start": "624170",
    "end": "626629"
  },
  {
    "text": "to you know to use the proxy another",
    "start": "626629",
    "end": "630680"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "really big benefit of the of the proxy",
    "start": "630680",
    "end": "633259"
  },
  {
    "text": "the whole philosophy of the proxy idea",
    "start": "633259",
    "end": "635449"
  },
  {
    "text": "is to really expose the Royal cap the",
    "start": "635449",
    "end": "639050"
  },
  {
    "text": "most low level possible capabilities of",
    "start": "639050",
    "end": "641660"
  },
  {
    "text": "the us through the proxy so that we hope",
    "start": "641660",
    "end": "645230"
  },
  {
    "text": "there is that the API should be fairly",
    "start": "645230",
    "end": "646879"
  },
  {
    "text": "stable and and then plug in vendors",
    "start": "646879",
    "end": "651470"
  },
  {
    "text": "flagging authors can rely on somewhat",
    "start": "651470",
    "end": "653540"
  },
  {
    "text": "reliable and somewhat stable API is to",
    "start": "653540",
    "end": "655759"
  },
  {
    "text": "have their own relay cycles on top of",
    "start": "655759",
    "end": "657199"
  },
  {
    "text": "that so for example you can have an API",
    "start": "657199",
    "end": "659660"
  },
  {
    "text": "to create directories or see if one",
    "start": "659660",
    "end": "662300"
  },
  {
    "text": "exists that's unlikely to change much so",
    "start": "662300",
    "end": "665959"
  },
  {
    "text": "having that stability at the API level",
    "start": "665959",
    "end": "667819"
  },
  {
    "text": "allows to allows plug-in vendors to",
    "start": "667819",
    "end": "670220"
  },
  {
    "text": "really have their own really cycles",
    "start": "670220",
    "end": "672380"
  },
  {
    "text": "without relying too much on an",
    "start": "672380",
    "end": "675170"
  },
  {
    "text": "improvement to the proxy so we can have",
    "start": "675170",
    "end": "678829"
  },
  {
    "text": "like really decouple life cycles for",
    "start": "678829",
    "end": "681829"
  },
  {
    "text": "containerize plugins and the proxy",
    "start": "681829",
    "end": "683660"
  },
  {
    "text": "itself and so once you have that you can",
    "start": "683660",
    "end": "686389"
  },
  {
    "text": "use the proxy to to develop containerize",
    "start": "686389",
    "end": "690050"
  },
  {
    "text": "plugins and do the same as people are",
    "start": "690050",
    "end": "692660"
  },
  {
    "text": "used to on the next two days so having",
    "start": "692660",
    "end": "694309"
  },
  {
    "text": "CNI and then CSI plugins come in as cube",
    "start": "694309",
    "end": "698120"
  },
  {
    "text": "workloads demon says and whatnot and",
    "start": "698120",
    "end": "700569"
  },
  {
    "start": "700000",
    "end": "700000"
  },
  {
    "text": "deep is gonna go into how we adapted",
    "start": "700569",
    "end": "703910"
  },
  {
    "text": "this proxy idea to do your storage",
    "start": "703910",
    "end": "706389"
  },
  {
    "text": "thanks Shawn so basically the first use",
    "start": "706389",
    "end": "712879"
  },
  {
    "text": "case that we looked at was storage",
    "start": "712879",
    "end": "714529"
  },
  {
    "text": "CSI was becoming really popular and just",
    "start": "714529",
    "end": "718579"
  },
  {
    "text": "to give you a quick introduction to how",
    "start": "718579",
    "end": "720939"
  },
  {
    "text": "storage support personal storage support",
    "start": "720939",
    "end": "723230"
  },
  {
    "text": "works for Windows today is",
    "start": "723230",
    "end": "724880"
  },
  {
    "text": "it's based on two models that are being",
    "start": "724880",
    "end": "726620"
  },
  {
    "text": "deprecated pretty soon one is the entry",
    "start": "726620",
    "end": "729080"
  },
  {
    "text": "plan model the community does not want",
    "start": "729080",
    "end": "731860"
  },
  {
    "text": "specific cloud provider logic or logic",
    "start": "731860",
    "end": "736010"
  },
  {
    "text": "from specific storage vendors within the",
    "start": "736010",
    "end": "737720"
  },
  {
    "text": "kubernetes codebase so they want to get",
    "start": "737720",
    "end": "740660"
  },
  {
    "text": "rid of entry plugins from inside",
    "start": "740660",
    "end": "742280"
  },
  {
    "text": "kubernetes kubernetes into external",
    "start": "742280",
    "end": "744500"
  },
  {
    "text": "plugins that are in a completely",
    "start": "744500",
    "end": "746930"
  },
  {
    "text": "separate codebase so the entry plugins",
    "start": "746930",
    "end": "749660"
  },
  {
    "text": "that windows depended on are kind of on",
    "start": "749660",
    "end": "752360"
  },
  {
    "text": "a path towards deprecation the other",
    "start": "752360",
    "end": "754250"
  },
  {
    "text": "model is using flex volume plug-in",
    "start": "754250",
    "end": "756530"
  },
  {
    "text": "scripts but flex volume itself is also",
    "start": "756530",
    "end": "758870"
  },
  {
    "text": "considered pretty much deprecated for",
    "start": "758870",
    "end": "760670"
  },
  {
    "text": "linux it's kind of like one of the V's",
    "start": "760670",
    "end": "763490"
  },
  {
    "text": "out for Windows so it's not completely",
    "start": "763490",
    "end": "765350"
  },
  {
    "text": "removed but it's there but it's also",
    "start": "765350",
    "end": "767540"
  },
  {
    "text": "considered essentially deprecated in",
    "start": "767540",
    "end": "769940"
  },
  {
    "text": "both of these approaches you notice that",
    "start": "769940",
    "end": "772360"
  },
  {
    "text": "the cubelet based approach for entry",
    "start": "772360",
    "end": "775340"
  },
  {
    "text": "plugins and the Flex volume there is",
    "start": "775340",
    "end": "777980"
  },
  {
    "text": "direct access to the disk devices and",
    "start": "777980",
    "end": "781280"
  },
  {
    "text": "the volume devices and the host because",
    "start": "781280",
    "end": "783010"
  },
  {
    "text": "everything is running directly on the",
    "start": "783010",
    "end": "785120"
  },
  {
    "text": "host nothing has within a container so",
    "start": "785120",
    "end": "787820"
  },
  {
    "text": "just to kind of put it in a diagram",
    "start": "787820",
    "end": "789770"
  },
  {
    "text": "you know cubelet and the Flex volume",
    "start": "789770",
    "end": "791630"
  },
  {
    "text": "scripts they're running directly on the",
    "start": "791630",
    "end": "792980"
  },
  {
    "text": "host they have direct access to the",
    "start": "792980",
    "end": "795470"
  },
  {
    "text": "device handles for the disks there are",
    "start": "795470",
    "end": "798380"
  },
  {
    "text": "full capabilities to mount the SMB share",
    "start": "798380",
    "end": "800930"
  },
  {
    "text": "remotely and then surface them up to",
    "start": "800930",
    "end": "803570"
  },
  {
    "text": "Windows pod or the containers within the",
    "start": "803570",
    "end": "805730"
  },
  {
    "text": "Windows Phone however the future is",
    "start": "805730",
    "end": "808670"
  },
  {
    "text": "based around the container storage",
    "start": "808670",
    "end": "810530"
  },
  {
    "text": "interface which is CSI now CSI is a very",
    "start": "810530",
    "end": "813710"
  },
  {
    "text": "detailed topic so let's focus mainly on",
    "start": "813710",
    "end": "816380"
  },
  {
    "text": "the aspect of CSI our concerns Windows",
    "start": "816380",
    "end": "818450"
  },
  {
    "text": "there's a concept of CSI node plugins",
    "start": "818450",
    "end": "820970"
  },
  {
    "text": "where the node plugins implement the",
    "start": "820970",
    "end": "822440"
  },
  {
    "text": "logic to identify say a LUN that get",
    "start": "822440",
    "end": "826610"
  },
  {
    "text": "service to a node based on the LAN once",
    "start": "826610",
    "end": "830030"
  },
  {
    "text": "it has identify that it's a land that",
    "start": "830030",
    "end": "831470"
  },
  {
    "text": "belongs to the driver that it implements",
    "start": "831470",
    "end": "833900"
  },
  {
    "text": "it can you know partition at the weight",
    "start": "833900",
    "end": "836150"
  },
  {
    "text": "ones format the file system and service",
    "start": "836150",
    "end": "838370"
  },
  {
    "text": "it up to containers so the node plugins",
    "start": "838370",
    "end": "841190"
  },
  {
    "text": "essentially implement the modern CSI",
    "start": "841190",
    "end": "843350"
  },
  {
    "text": "spec which hid around 113 typically for",
    "start": "843350",
    "end": "847010"
  },
  {
    "text": "linux today the CSI node plugins are",
    "start": "847010",
    "end": "848960"
  },
  {
    "text": "distributed as containerized binaries",
    "start": "848960",
    "end": "851540"
  },
  {
    "text": "and they are deployed through privileged",
    "start": "851540",
    "end": "854690"
  },
  {
    "text": "pods in Linux",
    "start": "854690",
    "end": "855790"
  },
  {
    "text": "so for windows the desires to have a",
    "start": "855790",
    "end": "858399"
  },
  {
    "text": "very similar mechanism and this fits",
    "start": "858399",
    "end": "861250"
  },
  {
    "start": "861000",
    "end": "861000"
  },
  {
    "text": "very nicely with the privileged proxy",
    "start": "861250",
    "end": "862990"
  },
  {
    "text": "concept we won the CSI node plugins to",
    "start": "862990",
    "end": "866170"
  },
  {
    "text": "do a whole bunch of privilege operations",
    "start": "866170",
    "end": "868600"
  },
  {
    "text": "as we went over and the idea with the",
    "start": "868600",
    "end": "872230"
  },
  {
    "text": "CSI proxy is to have a privileged proxy",
    "start": "872230",
    "end": "874779"
  },
  {
    "text": "that surfaces a bunch of API through",
    "start": "874779",
    "end": "877810"
  },
  {
    "text": "name pipes up to the CSI node plug-in",
    "start": "877810",
    "end": "880449"
  },
  {
    "text": "containers so that they can do what if",
    "start": "880449",
    "end": "883149"
  },
  {
    "text": "whatever it is that the desire to do",
    "start": "883149",
    "end": "885100"
  },
  {
    "text": "for example scan the physical disk",
    "start": "885100",
    "end": "887260"
  },
  {
    "text": "objects based on their scuzz scuzz EPG",
    "start": "887260",
    "end": "889630"
  },
  {
    "text": "t3 or PG TR in the first initialize a",
    "start": "889630",
    "end": "891970"
  },
  {
    "text": "disk partition eight format a partition",
    "start": "891970",
    "end": "894279"
  },
  {
    "text": "with the filesystem they want mount",
    "start": "894279",
    "end": "896320"
  },
  {
    "text": "assembly shares interact with Isis",
    "start": "896320",
    "end": "898449"
  },
  {
    "text": "because the targets like logging into a",
    "start": "898449",
    "end": "899980"
  },
  {
    "text": "target logging out exchanging",
    "start": "899980",
    "end": "901839"
  },
  {
    "text": "credentials and so forth so as you see",
    "start": "901839",
    "end": "905260"
  },
  {
    "text": "the model changes from cubelet and a",
    "start": "905260",
    "end": "907720"
  },
  {
    "text": "bunch of flex volume scripts having",
    "start": "907720",
    "end": "909190"
  },
  {
    "text": "direct access to the devices in the host",
    "start": "909190",
    "end": "912399"
  },
  {
    "text": "to actually a CSI node pod which is",
    "start": "912399",
    "end": "915279"
  },
  {
    "text": "essentially comprising of a couple of",
    "start": "915279",
    "end": "917769"
  },
  {
    "text": "containers the CSI no driver registrar",
    "start": "917769",
    "end": "919899"
  },
  {
    "text": "which is used for registering a plug-in",
    "start": "919899",
    "end": "922060"
  },
  {
    "text": "red CSI and the CSI node plug-in core",
    "start": "922060",
    "end": "924819"
  },
  {
    "text": "logic that's shipped by a vendor all",
    "start": "924819",
    "end": "926709"
  },
  {
    "text": "wrapped up within a windows within a",
    "start": "926709",
    "end": "929709"
  },
  {
    "text": "couple of windows containers and shipped",
    "start": "929709",
    "end": "931510"
  },
  {
    "text": "as part of daemon set specification the",
    "start": "931510",
    "end": "935199"
  },
  {
    "text": "the the CSI node part of will mount the",
    "start": "935199",
    "end": "938410"
  },
  {
    "text": "name pipes",
    "start": "938410",
    "end": "939850"
  },
  {
    "text": "exposed by the CSI proxy dot exe and",
    "start": "939850",
    "end": "942660"
  },
  {
    "text": "through the name pipe it can make API",
    "start": "942660",
    "end": "945699"
  },
  {
    "text": "calls down to the proxy to get access to",
    "start": "945699",
    "end": "948519"
  },
  {
    "text": "the devices from the host and finally",
    "start": "948519",
    "end": "951790"
  },
  {
    "text": "once it has formatted the volumes or",
    "start": "951790",
    "end": "954279"
  },
  {
    "text": "identify the volumes that needs to",
    "start": "954279",
    "end": "955690"
  },
  {
    "text": "surface up it can just create the",
    "start": "955690",
    "end": "958329"
  },
  {
    "text": "necessary same links in the file system",
    "start": "958329",
    "end": "960250"
  },
  {
    "text": "of the windows pods to make the volumes",
    "start": "960250",
    "end": "963610"
  },
  {
    "text": "available in the containers so one",
    "start": "963610",
    "end": "967690"
  },
  {
    "start": "966000",
    "end": "966000"
  },
  {
    "text": "problem we that was that surfaced when",
    "start": "967690",
    "end": "970839"
  },
  {
    "text": "we submitted a cap for the proxy for CSI",
    "start": "970839",
    "end": "973660"
  },
  {
    "text": "what people wanted to have a mechanism",
    "start": "973660",
    "end": "975819"
  },
  {
    "text": "that would make it easy for the the",
    "start": "975819",
    "end": "977800"
  },
  {
    "text": "proxy to evolve to add new capabilities",
    "start": "977800",
    "end": "980589"
  },
  {
    "text": "and and modify existing ones that would",
    "start": "980589",
    "end": "983319"
  },
  {
    "text": "be easy for developers working the proxy",
    "start": "983319",
    "end": "985990"
  },
  {
    "text": "and yet ensure",
    "start": "985990",
    "end": "987800"
  },
  {
    "text": "stability for for like in authors and",
    "start": "987800",
    "end": "991100"
  },
  {
    "text": "reduce the API so one one way we came up",
    "start": "991100",
    "end": "994760"
  },
  {
    "text": "to come up with some of that problem is",
    "start": "994760",
    "end": "997100"
  },
  {
    "text": "just reusing the same same thing cube",
    "start": "997100",
    "end": "999380"
  },
  {
    "text": "itself does on its API so we recycle the",
    "start": "999380",
    "end": "1002860"
  },
  {
    "text": "notion of API group and API versions so",
    "start": "1002860",
    "end": "1006010"
  },
  {
    "text": "the capabilities the proxy exposes our",
    "start": "1006010",
    "end": "1008890"
  },
  {
    "text": "group by API groups so typically this is",
    "start": "1008890",
    "end": "1011950"
  },
  {
    "text": "an API group for discont volume",
    "start": "1011950",
    "end": "1013630"
  },
  {
    "text": "operations there's another one for ice",
    "start": "1013630",
    "end": "1015610"
  },
  {
    "text": "CAHSEE operations and so on and so forth",
    "start": "1015610",
    "end": "1018070"
  },
  {
    "text": "and H API group can have in a given",
    "start": "1018070",
    "end": "1022089"
  },
  {
    "text": "version of CC a proxy for each API group",
    "start": "1022089",
    "end": "1024400"
  },
  {
    "text": "you're gonna have one or several",
    "start": "1024400",
    "end": "1025808"
  },
  {
    "text": "versions of the API that are running and",
    "start": "1025809",
    "end": "1028600"
  },
  {
    "text": "then the API versions are maintained and",
    "start": "1028600",
    "end": "1031480"
  },
  {
    "text": "deprecated according to a release",
    "start": "1031480",
    "end": "1033938"
  },
  {
    "text": "schedule that's also pretty similar to",
    "start": "1033939",
    "end": "1035558"
  },
  {
    "text": "what keep does internally though for",
    "start": "1035559",
    "end": "1039160"
  },
  {
    "text": "maintenance of the proxy you don't want",
    "start": "1039160",
    "end": "1041470"
  },
  {
    "text": "people to have to duplicate a bunch of",
    "start": "1041470",
    "end": "1043480"
  },
  {
    "text": "code when they create a new API version",
    "start": "1043480",
    "end": "1045220"
  },
  {
    "text": "you want to be able to reuse most of it",
    "start": "1045220",
    "end": "1046870"
  },
  {
    "text": "because it's just gonna change something",
    "start": "1046870",
    "end": "1049000"
  },
  {
    "text": "for your new version I didn't it",
    "start": "1049000",
    "end": "1050830"
  },
  {
    "text": "capability or changing existing behavior",
    "start": "1050830",
    "end": "1052890"
  },
  {
    "text": "so internally for developers you want to",
    "start": "1052890",
    "end": "1056320"
  },
  {
    "text": "have a single internal representation of",
    "start": "1056320",
    "end": "1058650"
  },
  {
    "text": "what the version API is use so you can",
    "start": "1058650",
    "end": "1061780"
  },
  {
    "text": "have requests and response types for",
    "start": "1061780",
    "end": "1064690"
  },
  {
    "text": "each API endpoint and each version might",
    "start": "1064690",
    "end": "1068230"
  },
  {
    "text": "have slightly different semantics for",
    "start": "1068230",
    "end": "1070540"
  },
  {
    "text": "each of these but internally you can",
    "start": "1070540",
    "end": "1072340"
  },
  {
    "text": "have one only one presentation for each",
    "start": "1072340",
    "end": "1075100"
  },
  {
    "text": "API group for all these types and every",
    "start": "1075100",
    "end": "1077830"
  },
  {
    "text": "single internal representation should be",
    "start": "1077830",
    "end": "1080320"
  },
  {
    "text": "able to contain all the informations the",
    "start": "1080320",
    "end": "1082270"
  },
  {
    "text": "old information containing all the",
    "start": "1082270",
    "end": "1083919"
  },
  {
    "text": "virgin versions of the same type so that",
    "start": "1083919",
    "end": "1088809"
  },
  {
    "text": "of course means that you have to have a",
    "start": "1088809",
    "end": "1090880"
  },
  {
    "text": "bunch of conversion code to take a",
    "start": "1090880",
    "end": "1093640"
  },
  {
    "text": "version request turn it into the",
    "start": "1093640",
    "end": "1096010"
  },
  {
    "text": "internal presentation and then back to",
    "start": "1096010",
    "end": "1098559"
  },
  {
    "text": "the G version response so we also did",
    "start": "1098559",
    "end": "1102190"
  },
  {
    "text": "what cube does internally and we have a",
    "start": "1102190",
    "end": "1104710"
  },
  {
    "text": "bunch of code generation in the CSI",
    "start": "1104710",
    "end": "1107380"
  },
  {
    "text": "proxy so as a developer if you want to",
    "start": "1107380",
    "end": "1110440"
  },
  {
    "text": "add any capabilities to the proxy the",
    "start": "1110440",
    "end": "1113320"
  },
  {
    "text": "source of the source of truth for every",
    "start": "1113320",
    "end": "1115150"
  },
  {
    "text": "single API version is going to be in a",
    "start": "1115150",
    "end": "1116740"
  },
  {
    "text": "proto file so",
    "start": "1116740",
    "end": "1118600"
  },
  {
    "text": "and this in the blue files of the file",
    "start": "1118600",
    "end": "1120970"
  },
  {
    "text": "that needs to be maintained and the",
    "start": "1120970",
    "end": "1122559"
  },
  {
    "text": "green file is the one that also",
    "start": "1122559",
    "end": "1123700"
  },
  {
    "text": "generated so as developer if you want to",
    "start": "1123700",
    "end": "1126130"
  },
  {
    "text": "add a new version you need to create a",
    "start": "1126130",
    "end": "1127480"
  },
  {
    "text": "profile that defend that defines what",
    "start": "1127480",
    "end": "1129460"
  },
  {
    "text": "your API version looks like and then you",
    "start": "1129460",
    "end": "1132039"
  },
  {
    "text": "need to add the right types to to the",
    "start": "1132039",
    "end": "1134169"
  },
  {
    "text": "internal types that go and of course you",
    "start": "1134169",
    "end": "1137169"
  },
  {
    "text": "need to write the the server's logic for",
    "start": "1137169",
    "end": "1139419"
  },
  {
    "text": "it so how do you take a request and turn",
    "start": "1139419",
    "end": "1141700"
  },
  {
    "text": "into a response and all the rest is it",
    "start": "1141700",
    "end": "1144370"
  },
  {
    "text": "generated so we generate a conversion",
    "start": "1144370",
    "end": "1146230"
  },
  {
    "text": "code to to convert from version types to",
    "start": "1146230",
    "end": "1150700"
  },
  {
    "text": "internal representations and then we",
    "start": "1150700",
    "end": "1153220"
  },
  {
    "text": "also ought to generate code to create",
    "start": "1153220",
    "end": "1155200"
  },
  {
    "text": "the right main pipe to expose your new",
    "start": "1155200",
    "end": "1157720"
  },
  {
    "text": "capability and we also to generate",
    "start": "1157720",
    "end": "1159850"
  },
  {
    "text": "client code that can be imported into",
    "start": "1159850",
    "end": "1161740"
  },
  {
    "text": "into a project that use the proxy as a",
    "start": "1161740",
    "end": "1165190"
  },
  {
    "text": "library so the idea here is to make it",
    "start": "1165190",
    "end": "1168789"
  },
  {
    "text": "easy for developers to contribute to the",
    "start": "1168789",
    "end": "1170830"
  },
  {
    "text": "project of course conversion",
    "start": "1170830",
    "end": "1173950"
  },
  {
    "text": "auto-generated conversion only only",
    "start": "1173950",
    "end": "1175600"
  },
  {
    "text": "works if you have one-to-one mapping",
    "start": "1175600",
    "end": "1177159"
  },
  {
    "text": "from the version types to the entire",
    "start": "1177159",
    "end": "1179289"
  },
  {
    "text": "presentation so that's where that's",
    "start": "1179289",
    "end": "1182500"
  },
  {
    "text": "where you might have to do some manual",
    "start": "1182500",
    "end": "1184809"
  },
  {
    "text": "code to to say ok like this version type",
    "start": "1184809",
    "end": "1187030"
  },
  {
    "text": "that's how we turn it into the internal",
    "start": "1187030",
    "end": "1188919"
  },
  {
    "text": "presentation but hopefully the goal here",
    "start": "1188919",
    "end": "1190780"
  },
  {
    "text": "that you only have to do that when it's",
    "start": "1190780",
    "end": "1192760"
  },
  {
    "text": "not trivial to deploy proxy versions to",
    "start": "1192760",
    "end": "1199530"
  },
  {
    "start": "1195000",
    "end": "1195000"
  },
  {
    "text": "cluster that's what plus your admin",
    "start": "1199530",
    "end": "1201580"
  },
  {
    "text": "instant a cluster admins need to know so",
    "start": "1201580",
    "end": "1204070"
  },
  {
    "text": "basically when you mr. Windows cluster",
    "start": "1204070",
    "end": "1205990"
  },
  {
    "text": "and you want to use the CSI proxy you",
    "start": "1205990",
    "end": "1207970"
  },
  {
    "text": "need to understand which API group",
    "start": "1207970",
    "end": "1210789"
  },
  {
    "text": "inversions matter to the plugins you",
    "start": "1210789",
    "end": "1212530"
  },
  {
    "text": "want to use and you want to ensure that",
    "start": "1212530",
    "end": "1214990"
  },
  {
    "text": "the version of the CSI proxy running",
    "start": "1214990",
    "end": "1217299"
  },
  {
    "text": "actually caters to the to the plugins",
    "start": "1217299",
    "end": "1222880"
  },
  {
    "text": "that you care about",
    "start": "1222880",
    "end": "1223960"
  },
  {
    "text": "so hopefully plugins should stay roughly",
    "start": "1223960",
    "end": "1227770"
  },
  {
    "text": "in sync with the latest version or see a",
    "start": "1227770",
    "end": "1229480"
  },
  {
    "text": "proxy if they don't and you need to run",
    "start": "1229480",
    "end": "1231880"
  },
  {
    "text": "a very old API group inversion that's",
    "start": "1231880",
    "end": "1234909"
  },
  {
    "text": "possible it's possible to run several",
    "start": "1234909",
    "end": "1237010"
  },
  {
    "text": "versions of the CSI proxy at the same",
    "start": "1237010",
    "end": "1238630"
  },
  {
    "text": "time to be able to support everything",
    "start": "1238630",
    "end": "1241150"
  },
  {
    "text": "you need and that's a deep is going to",
    "start": "1241150",
    "end": "1244870"
  },
  {
    "start": "1244000",
    "end": "1244000"
  },
  {
    "text": "do a little DEMA for us",
    "start": "1244870",
    "end": "1248010"
  },
  {
    "text": "all right so here we have a Windows node",
    "start": "1252720",
    "end": "1256810"
  },
  {
    "text": "that's running our CSI proxy or Exe",
    "start": "1256810",
    "end": "1259560"
  },
  {
    "text": "let's get this started and what you see",
    "start": "1259560",
    "end": "1263140"
  },
  {
    "text": "here in the good old disk management UI",
    "start": "1263140",
    "end": "1265720"
  },
  {
    "text": "is freshly formatted VHD that we would",
    "start": "1265720",
    "end": "1268900"
  },
  {
    "text": "like to create some partitions in from",
    "start": "1268900",
    "end": "1270700"
  },
  {
    "text": "inside a container this is something you",
    "start": "1270700",
    "end": "1272890"
  },
  {
    "text": "cannot do from a regular Windows",
    "start": "1272890",
    "end": "1274630"
  },
  {
    "text": "container but what we did is we created",
    "start": "1274630",
    "end": "1277600"
  },
  {
    "text": "a container called partition demo we",
    "start": "1277600",
    "end": "1281200"
  },
  {
    "text": "made it mount the proxy pipe as Sean",
    "start": "1281200",
    "end": "1284920"
  },
  {
    "text": "just described and we are passing at a",
    "start": "1284920",
    "end": "1287680"
  },
  {
    "text": "parameter of disk id of 4 which is the",
    "start": "1287680",
    "end": "1290440"
  },
  {
    "text": "disk ID here and before we get started",
    "start": "1290440",
    "end": "1293070"
  },
  {
    "text": "let's look at this part so we see decal",
    "start": "1293070",
    "end": "1300220"
  },
  {
    "text": "disk there are no volumes in there so",
    "start": "1300220",
    "end": "1303790"
  },
  {
    "text": "let's run the container",
    "start": "1303790",
    "end": "1308070"
  },
  {
    "text": "Hawaii maybe it's a difference of",
    "start": "1313940",
    "end": "1316380"
  },
  {
    "text": "approximately every one second there",
    "start": "1316380",
    "end": "1319890"
  },
  {
    "text": "it's probably sorry about that",
    "start": "1319890",
    "end": "1332240"
  },
  {
    "text": "let me try to increase the font real",
    "start": "1333800",
    "end": "1336270"
  },
  {
    "text": "quick",
    "start": "1336270",
    "end": "1338600"
  },
  {
    "text": "Oh",
    "start": "1343309",
    "end": "1345340"
  },
  {
    "text": "so it's kind of the same setup what we",
    "start": "1362720",
    "end": "1367460"
  },
  {
    "text": "saw here is essentially sorry server",
    "start": "1367460",
    "end": "1377600"
  },
  {
    "text": "that so yeah we ran the container over",
    "start": "1377600",
    "end": "1379940"
  },
  {
    "text": "here we are running the CSI proxy and",
    "start": "1379940",
    "end": "1383230"
  },
  {
    "text": "what we did is we had disk number two",
    "start": "1383230",
    "end": "1386900"
  },
  {
    "text": "which was there as a unpartitioned disk",
    "start": "1386900",
    "end": "1390380"
  },
  {
    "text": "initially and from inside the container",
    "start": "1390380",
    "end": "1392840"
  },
  {
    "text": "it mounted the v1 alpha one pipe with",
    "start": "1392840",
    "end": "1395630"
  },
  {
    "text": "the disk API set and invoked the",
    "start": "1395630",
    "end": "1398870"
  },
  {
    "text": "necessary commands to first check",
    "start": "1398870",
    "end": "1401030"
  },
  {
    "text": "whether disk is initialized if it was",
    "start": "1401030",
    "end": "1403520"
  },
  {
    "text": "not it initialized it with say the MBR",
    "start": "1403520",
    "end": "1406970"
  },
  {
    "text": "partition format or you could do a GPT",
    "start": "1406970",
    "end": "1408830"
  },
  {
    "text": "and then check if the disk was",
    "start": "1408830",
    "end": "1410900"
  },
  {
    "text": "partitioned and says it was not it",
    "start": "1410900",
    "end": "1413060"
  },
  {
    "text": "created partitions on a created or raw",
    "start": "1413060",
    "end": "1415550"
  },
  {
    "text": "partition on this so again the gist of",
    "start": "1415550",
    "end": "1418880"
  },
  {
    "text": "this is this could not have been",
    "start": "1418880",
    "end": "1419990"
  },
  {
    "text": "possible from a regular container but",
    "start": "1419990",
    "end": "1421790"
  },
  {
    "text": "because it's mounting the name pipe",
    "start": "1421790",
    "end": "1423440"
  },
  {
    "text": "exposed by CSI proxy it talked over an",
    "start": "1423440",
    "end": "1426710"
  },
  {
    "text": "API with CSI proxy to make these",
    "start": "1426710",
    "end": "1428420"
  },
  {
    "text": "operations happen yeah that's pretty",
    "start": "1428420",
    "end": "1433220"
  },
  {
    "text": "much the demo",
    "start": "1433220",
    "end": "1435909"
  },
  {
    "start": "1448000",
    "end": "1448000"
  },
  {
    "text": "so storage is not the only use case for",
    "start": "1449340",
    "end": "1452220"
  },
  {
    "text": "the first use case we decided to look at",
    "start": "1452220",
    "end": "1453809"
  },
  {
    "text": "the same model could be applied to",
    "start": "1453809",
    "end": "1456269"
  },
  {
    "text": "networking CNI plugins are an obvious",
    "start": "1456269",
    "end": "1458879"
  },
  {
    "text": "candidate for the same model if there",
    "start": "1458879",
    "end": "1462059"
  },
  {
    "text": "are folks interested in working on",
    "start": "1462059",
    "end": "1464100"
  },
  {
    "text": "community managed proxy for H and s API",
    "start": "1464100",
    "end": "1467460"
  },
  {
    "text": "calls that would be great to have to",
    "start": "1467460",
    "end": "1469200"
  },
  {
    "text": "kind of get the community moving in that",
    "start": "1469200",
    "end": "1471330"
  },
  {
    "text": "direction node monitoring back and",
    "start": "1471330",
    "end": "1474570"
  },
  {
    "text": "diagnostics tools could be another",
    "start": "1474570",
    "end": "1476070"
  },
  {
    "text": "interesting use case where you have a",
    "start": "1476070",
    "end": "1478200"
  },
  {
    "text": "community maintain proxy that collects",
    "start": "1478200",
    "end": "1480289"
  },
  {
    "text": "event logs etw log traces that etc from",
    "start": "1480289",
    "end": "1483899"
  },
  {
    "text": "the host and transmits it over an API to",
    "start": "1483899",
    "end": "1487850"
  },
  {
    "text": "containers that you deploy as daemon",
    "start": "1487850",
    "end": "1490139"
  },
  {
    "text": "sets there are various avenues through",
    "start": "1490139",
    "end": "1494460"
  },
  {
    "start": "1492000",
    "end": "1492000"
  },
  {
    "text": "which you can get involved if you're",
    "start": "1494460",
    "end": "1496019"
  },
  {
    "text": "interested in contributing to the CSI",
    "start": "1496019",
    "end": "1498119"
  },
  {
    "text": "proxy project here are some of the",
    "start": "1498119",
    "end": "1499769"
  },
  {
    "text": "details overall you can just stop by sig",
    "start": "1499769",
    "end": "1503460"
  },
  {
    "text": "windows and you know talk about an idea",
    "start": "1503460",
    "end": "1505950"
  },
  {
    "text": "and we can help you get maybe kept",
    "start": "1505950",
    "end": "1508559"
  },
  {
    "text": "started that's what we did with CSI",
    "start": "1508559",
    "end": "1510899"
  },
  {
    "text": "proxy kind of got it reviewed with",
    "start": "1510899",
    "end": "1513350"
  },
  {
    "text": "architecture security and storage",
    "start": "1513350",
    "end": "1515820"
  },
  {
    "text": "besides Windows itself so we can do the",
    "start": "1515820",
    "end": "1518249"
  },
  {
    "text": "same for you know other areas like",
    "start": "1518249",
    "end": "1519990"
  },
  {
    "text": "networking diagnostics and so forth",
    "start": "1519990",
    "end": "1521840"
  },
  {
    "text": "there are the slack channels and",
    "start": "1521840",
    "end": "1523950"
  },
  {
    "text": "especially around CSI windows we have",
    "start": "1523950",
    "end": "1528019"
  },
  {
    "text": "weekly sync up right now we have Jean",
    "start": "1528019",
    "end": "1532350"
  },
  {
    "text": "myself KK from I sure over there and",
    "start": "1532350",
    "end": "1536029"
  },
  {
    "text": "Jing Zhu from AK from Google who",
    "start": "1536029",
    "end": "1539279"
  },
  {
    "text": "contributes to the project pretty",
    "start": "1539279",
    "end": "1540990"
  },
  {
    "text": "actively so thank you that's all we had",
    "start": "1540990",
    "end": "1544799"
  },
  {
    "text": "any questions",
    "start": "1544799",
    "end": "1547110"
  },
  {
    "text": "[Applause]",
    "start": "1547110",
    "end": "1550350"
  }
]