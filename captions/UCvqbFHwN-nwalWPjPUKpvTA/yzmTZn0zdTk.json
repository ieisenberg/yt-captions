[
  {
    "start": "0",
    "end": "97000"
  },
  {
    "text": "I guess a lot of people are still at",
    "start": "30",
    "end": "1709"
  },
  {
    "text": "lunch but we'll get started",
    "start": "1709",
    "end": "5270"
  },
  {
    "text": "today we will be talking about",
    "start": "5270",
    "end": "7410"
  },
  {
    "text": "jurisdiction aware databases with with",
    "start": "7410",
    "end": "10080"
  },
  {
    "text": "us when we propose the stock for the",
    "start": "10080",
    "end": "13950"
  },
  {
    "text": "conference the way we titled it was geo",
    "start": "13950",
    "end": "18180"
  },
  {
    "text": "partitioning and the answer to geo",
    "start": "18180",
    "end": "21270"
  },
  {
    "text": "partitioning your data we are claiming",
    "start": "21270",
    "end": "23070"
  },
  {
    "text": "is with us and in this talk we will talk",
    "start": "23070",
    "end": "26070"
  },
  {
    "text": "about how you can use wit us to geo",
    "start": "26070",
    "end": "28199"
  },
  {
    "text": "partition and also show a demo of it",
    "start": "28199",
    "end": "31579"
  },
  {
    "text": "working my name is Leticia Grady I'm a",
    "start": "31579",
    "end": "36780"
  },
  {
    "text": "software engineer at Planet scale and",
    "start": "36780",
    "end": "38910"
  },
  {
    "text": "I'm a maintainer of witters which is an",
    "start": "38910",
    "end": "41370"
  },
  {
    "text": "open source C and C F project witters",
    "start": "41370",
    "end": "44040"
  },
  {
    "text": "graduated from CN CF in November and",
    "start": "44040",
    "end": "47039"
  },
  {
    "text": "it's only the eighth project to have",
    "start": "47039",
    "end": "49079"
  },
  {
    "text": "graduated from the CN CF my name is a",
    "start": "49079",
    "end": "53760"
  },
  {
    "text": "Jitendra short Japan why they're the",
    "start": "53760",
    "end": "57600"
  },
  {
    "text": "best way to pronounce my name is a",
    "start": "57600",
    "end": "59850"
  },
  {
    "text": "letter in gene number 10 I used to",
    "start": "59850",
    "end": "63530"
  },
  {
    "text": "manage the asari and DBA teams at",
    "start": "63530",
    "end": "66570"
  },
  {
    "text": "YouTube back in 2010 when the Vitesse",
    "start": "66570",
    "end": "69960"
  },
  {
    "text": "project was started there by my",
    "start": "69960",
    "end": "71640"
  },
  {
    "text": "co-founder subbu sukumaran and another",
    "start": "71640",
    "end": "74070"
  },
  {
    "text": "early engineer at YouTube for scaling",
    "start": "74070",
    "end": "76530"
  },
  {
    "text": "YouTube's databases and for the last two",
    "start": "76530",
    "end": "79770"
  },
  {
    "text": "years I have been the co-founder and CEO",
    "start": "79770",
    "end": "81750"
  },
  {
    "text": "of planet-scale",
    "start": "81750",
    "end": "83520"
  },
  {
    "text": "which is a company that we founded for",
    "start": "83520",
    "end": "86360"
  },
  {
    "text": "making giving commercial support for",
    "start": "86360",
    "end": "89579"
  },
  {
    "text": "Vitesse and making whitter successful",
    "start": "89579",
    "end": "91500"
  },
  {
    "text": "commercially what I'm going to do is",
    "start": "91500",
    "end": "96650"
  },
  {
    "text": "first start talking about the problem",
    "start": "96650",
    "end": "99689"
  },
  {
    "start": "97000",
    "end": "227000"
  },
  {
    "text": "that we are solving but before I do that",
    "start": "99689",
    "end": "103829"
  },
  {
    "text": "thank you everybody for coming here this",
    "start": "103829",
    "end": "106229"
  },
  {
    "text": "afternoon and thank you Sydney it's a",
    "start": "106229",
    "end": "109200"
  },
  {
    "text": "lovely city this is the first time that",
    "start": "109200",
    "end": "110970"
  },
  {
    "text": "I have been here and it totally lives up",
    "start": "110970",
    "end": "114210"
  },
  {
    "text": "to its billing so far so thank you so",
    "start": "114210",
    "end": "118170"
  },
  {
    "text": "what problem are we trying to solve",
    "start": "118170",
    "end": "119670"
  },
  {
    "text": "right you all are probably familiar with",
    "start": "119670",
    "end": "123060"
  },
  {
    "text": "the GDP regulation that you passed a few",
    "start": "123060",
    "end": "129720"
  },
  {
    "text": "years ago",
    "start": "129720",
    "end": "131110"
  },
  {
    "text": "there are many different aspects to gdpr",
    "start": "131110",
    "end": "134770"
  },
  {
    "text": "but one of the aspects it's data",
    "start": "134770",
    "end": "136720"
  },
  {
    "text": "locality and what it roughly translates",
    "start": "136720",
    "end": "139870"
  },
  {
    "text": "to is that if you have a particular",
    "start": "139870",
    "end": "142680"
  },
  {
    "text": "belonging to a particular political",
    "start": "142680",
    "end": "144940"
  },
  {
    "text": "entity the data associated with that",
    "start": "144940",
    "end": "147520"
  },
  {
    "text": "user needs to live in physical",
    "start": "147520",
    "end": "149950"
  },
  {
    "text": "infrastructure which is bounded by the",
    "start": "149950",
    "end": "152490"
  },
  {
    "text": "boundaries of that jurisdiction right",
    "start": "152490",
    "end": "155710"
  },
  {
    "text": "and basically that's the problem that we",
    "start": "155710",
    "end": "159100"
  },
  {
    "text": "are trying to solve and many times to",
    "start": "159100",
    "end": "165310"
  },
  {
    "text": "support this kind of requirement you",
    "start": "165310",
    "end": "168220"
  },
  {
    "text": "need to reallocate actual applications",
    "start": "168220",
    "end": "170230"
  },
  {
    "text": "which means that all layers of your",
    "start": "170230",
    "end": "172630"
  },
  {
    "text": "application need to be aware about the",
    "start": "172630",
    "end": "175209"
  },
  {
    "text": "geographical location of a particular",
    "start": "175209",
    "end": "176680"
  },
  {
    "text": "data and then take appropriate actions",
    "start": "176680",
    "end": "180370"
  },
  {
    "text": "for saving that data in appropriate",
    "start": "180370",
    "end": "182230"
  },
  {
    "text": "places and this is a daunting task I",
    "start": "182230",
    "end": "185350"
  },
  {
    "text": "mean you don't want to really collect",
    "start": "185350",
    "end": "186880"
  },
  {
    "text": "your existing applications or suffusing",
    "start": "186880",
    "end": "190180"
  },
  {
    "text": "this logic throughout your application",
    "start": "190180",
    "end": "191850"
  },
  {
    "text": "makes the velocity with which you can",
    "start": "191850",
    "end": "194770"
  },
  {
    "text": "deliver new features go down right also",
    "start": "194770",
    "end": "199540"
  },
  {
    "text": "if you have an existing monolithic",
    "start": "199540",
    "end": "201790"
  },
  {
    "text": "database that you want to make compliant",
    "start": "201790",
    "end": "204450"
  },
  {
    "text": "migrating the data from this existing",
    "start": "204450",
    "end": "206739"
  },
  {
    "text": "database into multiple database clusters",
    "start": "206739",
    "end": "209440"
  },
  {
    "text": "which are resident in multiple",
    "start": "209440",
    "end": "211390"
  },
  {
    "text": "jurisdictions is a pretty daunting",
    "start": "211390",
    "end": "213610"
  },
  {
    "text": "operational challenge and especially",
    "start": "213610",
    "end": "215350"
  },
  {
    "text": "without taking in a doubt downtime right",
    "start": "215350",
    "end": "217720"
  },
  {
    "text": "so these are the problems that we show a",
    "start": "217720",
    "end": "223000"
  },
  {
    "text": "plan to show you a solution for today",
    "start": "223000",
    "end": "224890"
  },
  {
    "text": "using the test so let's start out by",
    "start": "224890",
    "end": "228280"
  },
  {
    "start": "227000",
    "end": "548000"
  },
  {
    "text": "talking a little bit about witters how",
    "start": "228280",
    "end": "230950"
  },
  {
    "text": "many of you are familiar with what Metis",
    "start": "230950",
    "end": "233830"
  },
  {
    "text": "is okay so roughly about 25% 30% folks",
    "start": "233830",
    "end": "241900"
  },
  {
    "text": "so let me tell you what what witness",
    "start": "241900",
    "end": "243760"
  },
  {
    "text": "basically does how many of you are",
    "start": "243760",
    "end": "246310"
  },
  {
    "text": "familiar with that terminal is that the",
    "start": "246310",
    "end": "248769"
  },
  {
    "text": "term shard okay almost everybody knows",
    "start": "248769",
    "end": "252760"
  },
  {
    "text": "what a shard is right so witness is a",
    "start": "252760",
    "end": "255970"
  },
  {
    "text": "sharding middleware that sits between",
    "start": "255970",
    "end": "258070"
  },
  {
    "text": "your applications and multiple shards of",
    "start": "258070",
    "end": "260799"
  },
  {
    "text": "my sequel databases it gives your",
    "start": "260799",
    "end": "263110"
  },
  {
    "text": "application the view",
    "start": "263110",
    "end": "264530"
  },
  {
    "text": "it's talking to a single monolithic",
    "start": "264530",
    "end": "266120"
  },
  {
    "text": "database so that and your application",
    "start": "266120",
    "end": "268460"
  },
  {
    "text": "doesn't have to be aware that it's",
    "start": "268460",
    "end": "270290"
  },
  {
    "text": "talking to a Charlotte database the way",
    "start": "270290",
    "end": "272450"
  },
  {
    "text": "it does it is because of two things one",
    "start": "272450",
    "end": "275060"
  },
  {
    "text": "is that it has a full my sequel parser",
    "start": "275060",
    "end": "277250"
  },
  {
    "text": "built into it and second is it supports",
    "start": "277250",
    "end": "280640"
  },
  {
    "text": "the my sequel binary protocol so it",
    "start": "280640",
    "end": "282770"
  },
  {
    "text": "presents itself as my sequel database to",
    "start": "282770",
    "end": "287750"
  },
  {
    "text": "your application so let's take a quick",
    "start": "287750",
    "end": "291670"
  },
  {
    "text": "walkthrough through this architecture",
    "start": "291670",
    "end": "294920"
  },
  {
    "text": "diagram right so everything on the",
    "start": "294920",
    "end": "298370"
  },
  {
    "text": "left-hand side of the horizontal dashed",
    "start": "298370",
    "end": "300169"
  },
  {
    "text": "line is your application there are app",
    "start": "300169",
    "end": "303710"
  },
  {
    "text": "app servers maybe there are bad jobs etc",
    "start": "303710",
    "end": "307660"
  },
  {
    "text": "accessing your database everything to",
    "start": "307660",
    "end": "310490"
  },
  {
    "text": "the right hand side is with us and my",
    "start": "310490",
    "end": "312980"
  },
  {
    "text": "sequel Questers VT gate is the first",
    "start": "312980",
    "end": "315680"
  },
  {
    "text": "component that your application connects",
    "start": "315680",
    "end": "317570"
  },
  {
    "text": "with VT gate is a stateless proxy has a",
    "start": "317570",
    "end": "320570"
  },
  {
    "text": "full SQL parts are built into it and",
    "start": "320570",
    "end": "322840"
  },
  {
    "text": "also supports the SQL binary protocol so",
    "start": "322840",
    "end": "327320"
  },
  {
    "text": "presents itself as a as a my sequel",
    "start": "327320",
    "end": "329900"
  },
  {
    "text": "server to your application VD gate gets",
    "start": "329900",
    "end": "332510"
  },
  {
    "text": "the query parses it looks at the where",
    "start": "332510",
    "end": "334490"
  },
  {
    "text": "clause and figures out which of the",
    "start": "334490",
    "end": "337040"
  },
  {
    "text": "shards the query should go to write a we",
    "start": "337040",
    "end": "341330"
  },
  {
    "text": "test cluster can support multiple key",
    "start": "341330",
    "end": "343460"
  },
  {
    "text": "spaces a key space is basically",
    "start": "343460",
    "end": "345770"
  },
  {
    "text": "equivalent to a database what is shown",
    "start": "345770",
    "end": "347990"
  },
  {
    "text": "here is an N sharded key space each",
    "start": "347990",
    "end": "350810"
  },
  {
    "text": "shall at its heart is basically my",
    "start": "350810",
    "end": "354530"
  },
  {
    "text": "sequel cholesterol that you know and",
    "start": "354530",
    "end": "355970"
  },
  {
    "text": "love with one master and multiple",
    "start": "355970",
    "end": "358040"
  },
  {
    "text": "replicas witness makes the distinction",
    "start": "358040",
    "end": "360320"
  },
  {
    "text": "between replicas and what we call",
    "start": "360320",
    "end": "362810"
  },
  {
    "text": "analytics replicas analytics replicas we",
    "start": "362810",
    "end": "365510"
  },
  {
    "text": "don't care about the replication lag",
    "start": "365510",
    "end": "366970"
  },
  {
    "text": "members of the analytics replicas are",
    "start": "366970",
    "end": "369530"
  },
  {
    "text": "not candidates for becoming a master for",
    "start": "369530",
    "end": "372020"
  },
  {
    "text": "high availability so one master multiple",
    "start": "372020",
    "end": "375950"
  },
  {
    "text": "replicas with standard my sequel binary",
    "start": "375950",
    "end": "379130"
  },
  {
    "text": "replication turned on that's what a",
    "start": "379130",
    "end": "381320"
  },
  {
    "text": "shard is but with one difference every",
    "start": "381320",
    "end": "384410"
  },
  {
    "text": "my sequel D in that child has a VT",
    "start": "384410",
    "end": "386750"
  },
  {
    "text": "tablet process that sits next to it",
    "start": "386750",
    "end": "388970"
  },
  {
    "text": "typically on the same host or the same",
    "start": "388970",
    "end": "391100"
  },
  {
    "text": "part that your my C quality is running",
    "start": "391100",
    "end": "393440"
  },
  {
    "text": "on talking to it through a unique storm",
    "start": "393440",
    "end": "396229"
  },
  {
    "text": "a domain socket",
    "start": "396229",
    "end": "398110"
  },
  {
    "text": "it doesn't have to be on the same host",
    "start": "398110",
    "end": "399729"
  },
  {
    "text": "it can talk tcp/ip sockets also but you",
    "start": "399729",
    "end": "403449"
  },
  {
    "text": "typically run both of them adjacent to",
    "start": "403449",
    "end": "405699"
  },
  {
    "text": "each other so VT gate looks that it gets",
    "start": "405699",
    "end": "408520"
  },
  {
    "text": "a query sends it to a parses it figures",
    "start": "408520",
    "end": "412060"
  },
  {
    "text": "out which char sends it through via T",
    "start": "412060",
    "end": "413800"
  },
  {
    "text": "tablet via tablet parses the query again",
    "start": "413800",
    "end": "416080"
  },
  {
    "text": "and there's a whole bunch of things to",
    "start": "416080",
    "end": "418240"
  },
  {
    "text": "protect the underlying my security for",
    "start": "418240",
    "end": "420849"
  },
  {
    "text": "example",
    "start": "420849",
    "end": "421569"
  },
  {
    "text": "it adds limit clauses on your my sequel",
    "start": "421569",
    "end": "425080"
  },
  {
    "text": "query if it thinks that this query is",
    "start": "425080",
    "end": "427419"
  },
  {
    "text": "going to return more than 10,000 rows",
    "start": "427419",
    "end": "430590"
  },
  {
    "text": "10,000 is of course configurable but",
    "start": "430590",
    "end": "433330"
  },
  {
    "text": "basically if it's it's pretty easy for",
    "start": "433330",
    "end": "436780"
  },
  {
    "text": "somebody to take down your database by",
    "start": "436780",
    "end": "438400"
  },
  {
    "text": "writing a query of death that pretty",
    "start": "438400",
    "end": "440319"
  },
  {
    "text": "much becomes impossible under the test",
    "start": "440319",
    "end": "441940"
  },
  {
    "text": "because of all these protections it also",
    "start": "441940",
    "end": "444130"
  },
  {
    "text": "puts gives a timeout for every",
    "start": "444130",
    "end": "446680"
  },
  {
    "text": "transaction timeout for every query it",
    "start": "446680",
    "end": "449560"
  },
  {
    "text": "does connection pooling between the",
    "start": "449560",
    "end": "451330"
  },
  {
    "text": "witty tablet and my security it also",
    "start": "451330",
    "end": "453610"
  },
  {
    "text": "does some other cool things like hot row",
    "start": "453610",
    "end": "456639"
  },
  {
    "text": "protection for raids and for rights so",
    "start": "456639",
    "end": "459039"
  },
  {
    "text": "as I said you're my sequel reruns a lot",
    "start": "459039",
    "end": "461680"
  },
  {
    "text": "better under the care of witty tablet",
    "start": "461680",
    "end": "464319"
  },
  {
    "text": "then it would otherwise the topology",
    "start": "464319",
    "end": "466630"
  },
  {
    "text": "server can either be an HDD cluster a",
    "start": "466630",
    "end": "468940"
  },
  {
    "text": "zookeeper cluster or a cow or a console",
    "start": "468940",
    "end": "471340"
  },
  {
    "text": "cluster that's where all the cluster",
    "start": "471340",
    "end": "473919"
  },
  {
    "text": "topology is is saved so how many key",
    "start": "473919",
    "end": "477490"
  },
  {
    "text": "space are there how many chargin is each",
    "start": "477490",
    "end": "480370"
  },
  {
    "text": "key space how many mark how many",
    "start": "480370",
    "end": "482289"
  },
  {
    "text": "replicas in each char and what are the",
    "start": "482289",
    "end": "485650"
  },
  {
    "text": "IP addresses and port numbers for each",
    "start": "485650",
    "end": "489039"
  },
  {
    "text": "of those components so cluster",
    "start": "489039",
    "end": "491110"
  },
  {
    "text": "topologies same there and a second and",
    "start": "491110",
    "end": "493779"
  },
  {
    "text": "more interesting information that is",
    "start": "493779",
    "end": "495520"
  },
  {
    "text": "saved there save there is how a",
    "start": "495520",
    "end": "497770"
  },
  {
    "text": "particular key space is Charlotte so",
    "start": "497770",
    "end": "500529"
  },
  {
    "text": "that's the two type of information",
    "start": "500529",
    "end": "502000"
  },
  {
    "text": "that's saved in topology server VTC TLD",
    "start": "502000",
    "end": "505060"
  },
  {
    "text": "is the control plane for Vitesse so this",
    "start": "505060",
    "end": "507759"
  },
  {
    "text": "is sort of the high-level architecture",
    "start": "507759",
    "end": "509020"
  },
  {
    "text": "of Vitesse what this does just to give",
    "start": "509020",
    "end": "512500"
  },
  {
    "text": "you the context one thing that is not",
    "start": "512500",
    "end": "515680"
  },
  {
    "text": "shown here ourselves we will talk a lot",
    "start": "515680",
    "end": "517539"
  },
  {
    "text": "more in a lot more detail about cells at",
    "start": "517539",
    "end": "520169"
  },
  {
    "text": "YouTube the biggest key space that we",
    "start": "520169",
    "end": "522370"
  },
  {
    "text": "had had 256 shards each shard had one",
    "start": "522370",
    "end": "525550"
  },
  {
    "text": "master master of course and between 80",
    "start": "525550",
    "end": "527589"
  },
  {
    "text": "to 100 replicas distributed across 20",
    "start": "527589",
    "end": "530829"
  },
  {
    "text": "data centers",
    "start": "530829",
    "end": "531770"
  },
  {
    "text": "so between 25,000 and 13 nodes as part",
    "start": "531770",
    "end": "535279"
  },
  {
    "text": "of a single key space application with",
    "start": "535279",
    "end": "539690"
  },
  {
    "text": "giving the application review that is",
    "start": "539690",
    "end": "541160"
  },
  {
    "text": "talking to one humongous database so all",
    "start": "541160",
    "end": "543260"
  },
  {
    "text": "of you YouTube's user and video metadata",
    "start": "543260",
    "end": "545210"
  },
  {
    "text": "lived in in there so I'm going to now",
    "start": "545210",
    "end": "549830"
  },
  {
    "start": "548000",
    "end": "1021000"
  },
  {
    "text": "drill down and talk about various other",
    "start": "549830",
    "end": "552230"
  },
  {
    "text": "concepts that we need specifically for",
    "start": "552230",
    "end": "555290"
  },
  {
    "text": "putting together a cluster that helps",
    "start": "555290",
    "end": "557690"
  },
  {
    "text": "you but that helps us solve the gdpr",
    "start": "557690",
    "end": "560060"
  },
  {
    "text": "data locality problem right so the first",
    "start": "560060",
    "end": "562520"
  },
  {
    "text": "concept that Vitas supports for this is",
    "start": "562520",
    "end": "565459"
  },
  {
    "text": "cell so a cell is basically a failure",
    "start": "565459",
    "end": "568130"
  },
  {
    "text": "domain isolated from failures and other",
    "start": "568130",
    "end": "570260"
  },
  {
    "text": "cells it's a group of servers and",
    "start": "570260",
    "end": "572060"
  },
  {
    "text": "network infrastructure example it could",
    "start": "572060",
    "end": "574670"
  },
  {
    "text": "be a full data center it could be a rack",
    "start": "574670",
    "end": "576620"
  },
  {
    "text": "in a data center it could be an",
    "start": "576620",
    "end": "579200"
  },
  {
    "text": "availability zone in a region it could",
    "start": "579200",
    "end": "582140"
  },
  {
    "text": "be a kubernetes cluster any of these",
    "start": "582140",
    "end": "584149"
  },
  {
    "text": "things basically a collection of group",
    "start": "584149",
    "end": "586100"
  },
  {
    "text": "servers and network infrastructure which",
    "start": "586100",
    "end": "589070"
  },
  {
    "text": "is which can be treated as a failure",
    "start": "589070",
    "end": "590450"
  },
  {
    "text": "domain and as you can see these are",
    "start": "590450",
    "end": "596209"
  },
  {
    "text": "physical things that can have physical",
    "start": "596209",
    "end": "598370"
  },
  {
    "text": "boundaries which means that they can be",
    "start": "598370",
    "end": "599870"
  },
  {
    "text": "located in in jurisdictions where you",
    "start": "599870",
    "end": "603890"
  },
  {
    "text": "want them to be so that's what we are",
    "start": "603890",
    "end": "605330"
  },
  {
    "text": "going to use the cell for now let's talk",
    "start": "605330",
    "end": "608060"
  },
  {
    "text": "about what a key space is so key space",
    "start": "608060",
    "end": "610040"
  },
  {
    "text": "is a logical database in Vitesse if you",
    "start": "610040",
    "end": "612080"
  },
  {
    "text": "have a single shared key space that's",
    "start": "612080",
    "end": "613640"
  },
  {
    "text": "identical to a MySQL database no",
    "start": "613640",
    "end": "615920"
  },
  {
    "text": "different but if there are multiple",
    "start": "615920",
    "end": "618010"
  },
  {
    "text": "shards in a key space multiple multiple",
    "start": "618010",
    "end": "622820"
  },
  {
    "text": "bicycle clusters multiple masters each",
    "start": "622820",
    "end": "625250"
  },
  {
    "text": "with identical schema right that's what",
    "start": "625250",
    "end": "628130"
  },
  {
    "text": "a key spaces and in either case a key",
    "start": "628130",
    "end": "632360"
  },
  {
    "text": "space whether it's single shadow or",
    "start": "632360",
    "end": "633800"
  },
  {
    "text": "multiple chartres it appears as a single",
    "start": "633800",
    "end": "636260"
  },
  {
    "text": "monolithic database to the application",
    "start": "636260",
    "end": "638990"
  },
  {
    "text": "the application can treat it that way",
    "start": "638990",
    "end": "641110"
  },
  {
    "text": "now what's the key space ID are those of",
    "start": "641110",
    "end": "644779"
  },
  {
    "text": "you who are familiar with key value",
    "start": "644779",
    "end": "646700"
  },
  {
    "text": "databases probably have some way of",
    "start": "646700",
    "end": "650899"
  },
  {
    "text": "thinking about a key space ID basically",
    "start": "650899",
    "end": "653180"
  },
  {
    "text": "a key space ID you can think of it as a",
    "start": "653180",
    "end": "654920"
  },
  {
    "text": "street address of a row it decides where",
    "start": "654920",
    "end": "657709"
  },
  {
    "text": "a particular row lives and the way in",
    "start": "657709",
    "end": "659870"
  },
  {
    "text": "which Vitesse key space ID is different",
    "start": "659870",
    "end": "662959"
  },
  {
    "text": "from the key",
    "start": "662959",
    "end": "665100"
  },
  {
    "text": "used by key value stores is that it's a",
    "start": "665100",
    "end": "667470"
  },
  {
    "text": "completely internal witness concept it's",
    "start": "667470",
    "end": "670020"
  },
  {
    "text": "not stored it's calculated right and the",
    "start": "670020",
    "end": "676320"
  },
  {
    "text": "application doesn't need to know about",
    "start": "676320",
    "end": "677550"
  },
  {
    "text": "the key space idea at all and it's the",
    "start": "677550",
    "end": "682050"
  },
  {
    "text": "key space idea for a given row is used",
    "start": "682050",
    "end": "683820"
  },
  {
    "text": "to decide which shard a particular row",
    "start": "683820",
    "end": "686340"
  },
  {
    "text": "should live live on so let's jump in and",
    "start": "686340",
    "end": "688830"
  },
  {
    "text": "see how this is actualized this is",
    "start": "688830",
    "end": "692010"
  },
  {
    "text": "actualized using what something that we",
    "start": "692010",
    "end": "694320"
  },
  {
    "text": "call V index so we have extended the",
    "start": "694320",
    "end": "697140"
  },
  {
    "text": "relational semantics urate relational",
    "start": "697140",
    "end": "699450"
  },
  {
    "text": "databases have schemas a shadow database",
    "start": "699450",
    "end": "704190"
  },
  {
    "text": "that runs under Vitesse has a V schema",
    "start": "704190",
    "end": "707220"
  },
  {
    "text": "the V schema basically is a collection",
    "start": "707220",
    "end": "709500"
  },
  {
    "text": "of V index definitions what is a V index",
    "start": "709500",
    "end": "713670"
  },
  {
    "text": "a V index tells with us how a particular",
    "start": "713670",
    "end": "717750"
  },
  {
    "text": "table in your key space is charted ok",
    "start": "717750",
    "end": "720750"
  },
  {
    "text": "and it needs two pieces of information",
    "start": "720750",
    "end": "723980"
  },
  {
    "text": "too it needs to define two pieces of",
    "start": "723980",
    "end": "728400"
  },
  {
    "text": "information first what column in that",
    "start": "728400",
    "end": "731010"
  },
  {
    "text": "table should be used for sharding the",
    "start": "731010",
    "end": "732600"
  },
  {
    "text": "data in that cab table and second",
    "start": "732600",
    "end": "735000"
  },
  {
    "text": "depending on the data type typically of",
    "start": "735000",
    "end": "737330"
  },
  {
    "text": "that column",
    "start": "737330",
    "end": "738960"
  },
  {
    "text": "what sharding function should be used to",
    "start": "738960",
    "end": "742350"
  },
  {
    "text": "calculate the key space ID which will",
    "start": "742350",
    "end": "744780"
  },
  {
    "text": "allow us to decide where that role that",
    "start": "744780",
    "end": "748080"
  },
  {
    "text": "row goes so two pieces of information",
    "start": "748080",
    "end": "750140"
  },
  {
    "text": "column and a shouting function right so",
    "start": "750140",
    "end": "753030"
  },
  {
    "text": "here is a quick example that let's say",
    "start": "753030",
    "end": "756270"
  },
  {
    "text": "that there is a table called customer it",
    "start": "756270",
    "end": "757920"
  },
  {
    "text": "has a column named ID this is a numeric",
    "start": "757920",
    "end": "761220"
  },
  {
    "text": "column and we want to use a shouting",
    "start": "761220",
    "end": "764010"
  },
  {
    "text": "function hash and so for a row where the",
    "start": "764010",
    "end": "766950"
  },
  {
    "text": "ID value is 123 the key space item it",
    "start": "766950",
    "end": "769860"
  },
  {
    "text": "would be equal to the two hash of 123",
    "start": "769860",
    "end": "772500"
  },
  {
    "text": "ready straightforward now let's talk a",
    "start": "772500",
    "end": "777150"
  },
  {
    "text": "little bit about what a shard is",
    "start": "777150",
    "end": "778410"
  },
  {
    "text": "conceptually so a shard is basically",
    "start": "778410",
    "end": "780510"
  },
  {
    "text": "just it has a begin and an end value for",
    "start": "780510",
    "end": "784250"
  },
  {
    "text": "the key space range that that particular",
    "start": "784250",
    "end": "787830"
  },
  {
    "text": "shard serves so for a single shattered",
    "start": "787830",
    "end": "791040"
  },
  {
    "text": "system the begin the beguine value would",
    "start": "791040",
    "end": "793380"
  },
  {
    "text": "be 0 0 the end value would be FF FF FF",
    "start": "793380",
    "end": "796280"
  },
  {
    "text": "basically what that means is",
    "start": "796280",
    "end": "798720"
  },
  {
    "text": "any keyspace ID is always going to live",
    "start": "798720",
    "end": "800730"
  },
  {
    "text": "in that shot right so there is a big in",
    "start": "800730",
    "end": "804660"
  },
  {
    "text": "value there is an end value and for a",
    "start": "804660",
    "end": "806430"
  },
  {
    "text": "given row when you calculate key space",
    "start": "806430",
    "end": "808170"
  },
  {
    "text": "ID if begin is less than or equal to key",
    "start": "808170",
    "end": "810300"
  },
  {
    "text": "space ID less than and if that condition",
    "start": "810300",
    "end": "812129"
  },
  {
    "text": "is true then that particular row belongs",
    "start": "812129",
    "end": "815100"
  },
  {
    "text": "in that shark each shard physically has",
    "start": "815100",
    "end": "818129"
  },
  {
    "text": "one master has multiple replicas and",
    "start": "818129",
    "end": "820050"
  },
  {
    "text": "those replicas can live across multiple",
    "start": "820050",
    "end": "823019"
  },
  {
    "text": "cells if you want or they can be in a",
    "start": "823019",
    "end": "824699"
  },
  {
    "text": "single cell shouting functions which we",
    "start": "824699",
    "end": "829620"
  },
  {
    "text": "talked about a little bit when I talked",
    "start": "829620",
    "end": "831120"
  },
  {
    "text": "about windex those there are we give you",
    "start": "831120",
    "end": "835050"
  },
  {
    "text": "six predefined shouting functions which",
    "start": "835050",
    "end": "837120"
  },
  {
    "text": "are described here but one of the",
    "start": "837120",
    "end": "839069"
  },
  {
    "text": "coolest things about Vitesse is that you",
    "start": "839069",
    "end": "842040"
  },
  {
    "text": "can write about 40 to 50 lines of go",
    "start": "842040",
    "end": "844290"
  },
  {
    "text": "code and write a shouting function of",
    "start": "844290",
    "end": "848310"
  },
  {
    "text": "your own which satisfies the interface",
    "start": "848310",
    "end": "850709"
  },
  {
    "text": "for for shouting functions and then you",
    "start": "850709",
    "end": "854250"
  },
  {
    "text": "have you have complete control over how",
    "start": "854250",
    "end": "857040"
  },
  {
    "text": "your data is distributed right and in",
    "start": "857040",
    "end": "859709"
  },
  {
    "text": "today's demo to satisfy the GDP or",
    "start": "859709",
    "end": "862500"
  },
  {
    "text": "locality what we have done is we have",
    "start": "862500",
    "end": "864420"
  },
  {
    "text": "written a custom V index that allows us",
    "start": "864420",
    "end": "867509"
  },
  {
    "text": "to do this typically you end up using",
    "start": "867509",
    "end": "872610"
  },
  {
    "text": "either hash which is a 3 - null key hash",
    "start": "872610",
    "end": "874980"
  },
  {
    "text": "of numeric columns or you end up using",
    "start": "874980",
    "end": "877800"
  },
  {
    "text": "the unicode lose md5 and on on basically",
    "start": "877800",
    "end": "883439"
  },
  {
    "text": "vark air or water binary columns right",
    "start": "883439",
    "end": "886470"
  },
  {
    "text": "that that's what you typically end up",
    "start": "886470",
    "end": "887759"
  },
  {
    "text": "using but people have used you know I",
    "start": "887759",
    "end": "891420"
  },
  {
    "text": "mean you can even just have a JSON map",
    "start": "891420",
    "end": "894389"
  },
  {
    "text": "that maps a value or the column value to",
    "start": "894389",
    "end": "899519"
  },
  {
    "text": "a to a key space ID for satisfying",
    "start": "899519",
    "end": "903589"
  },
  {
    "text": "typically when people migrate if they",
    "start": "903589",
    "end": "905759"
  },
  {
    "text": "have their own way of shouting that can",
    "start": "905759",
    "end": "908519"
  },
  {
    "text": "be expressed through a JSON table and so",
    "start": "908519",
    "end": "910709"
  },
  {
    "text": "on so yes many different ways of doing",
    "start": "910709",
    "end": "916529"
  },
  {
    "text": "this so that's the numeric static map so",
    "start": "916529",
    "end": "920129"
  },
  {
    "text": "here we are going to use a custom",
    "start": "920129",
    "end": "922379"
  },
  {
    "text": "shouting function so in general this the",
    "start": "922379",
    "end": "925230"
  },
  {
    "text": "solution is going to look like this what",
    "start": "925230",
    "end": "926939"
  },
  {
    "text": "we are going to going to do is that we",
    "start": "926939",
    "end": "929639"
  },
  {
    "text": "are going to specify the column in our",
    "start": "929639",
    "end": "931870"
  },
  {
    "text": "a table that we will use for specifying",
    "start": "931870",
    "end": "935850"
  },
  {
    "text": "which is a marker of a location in this",
    "start": "935850",
    "end": "938680"
  },
  {
    "text": "case we will use a country column but",
    "start": "938680",
    "end": "941440"
  },
  {
    "text": "the the V index or the solution that we",
    "start": "941440",
    "end": "943990"
  },
  {
    "text": "have come up with sort of things of the",
    "start": "943990",
    "end": "945610"
  },
  {
    "text": "problem in two different at two",
    "start": "945610",
    "end": "947140"
  },
  {
    "text": "different levels",
    "start": "947140",
    "end": "947920"
  },
  {
    "text": "one is jurisdictions like NAFTA or EU",
    "start": "947920",
    "end": "951610"
  },
  {
    "text": "or a country could be jurisdictions and",
    "start": "951610",
    "end": "955089"
  },
  {
    "text": "the second is some marker of location or",
    "start": "955089",
    "end": "957670"
  },
  {
    "text": "for a particular user or a particular",
    "start": "957670",
    "end": "959350"
  },
  {
    "text": "piece of data right and a mapping",
    "start": "959350",
    "end": "962320"
  },
  {
    "text": "between the jurisdiction and various the",
    "start": "962320",
    "end": "965980"
  },
  {
    "text": "lower-level values so the lower value",
    "start": "965980",
    "end": "967620"
  },
  {
    "text": "value that we will use here is a country",
    "start": "967620",
    "end": "970350"
  },
  {
    "text": "but it could be a zip code it could be",
    "start": "970350",
    "end": "972790"
  },
  {
    "text": "an area code it could be a country code",
    "start": "972790",
    "end": "975460"
  },
  {
    "text": "for phone numbers it could be any of",
    "start": "975460",
    "end": "978070"
  },
  {
    "text": "those things right and what we are the",
    "start": "978070",
    "end": "982390"
  },
  {
    "text": "way we are going to physically make sure",
    "start": "982390",
    "end": "983980"
  },
  {
    "text": "that a piece of data lives in a",
    "start": "983980",
    "end": "985300"
  },
  {
    "text": "particular bounded location is that we",
    "start": "985300",
    "end": "989320"
  },
  {
    "text": "are going to start cells in different",
    "start": "989320",
    "end": "992080"
  },
  {
    "text": "jurisdictions and then we are going to",
    "start": "992080",
    "end": "994210"
  },
  {
    "text": "make sure that a char lives in a",
    "start": "994210",
    "end": "996010"
  },
  {
    "text": "particular cell and then our V index and",
    "start": "996010",
    "end": "998709"
  },
  {
    "text": "shouting function will make sure that",
    "start": "998709",
    "end": "1000270"
  },
  {
    "text": "data for a pervy Long's to a particular",
    "start": "1000270",
    "end": "1003029"
  },
  {
    "text": "country gets saved in that shard and",
    "start": "1003029",
    "end": "1005940"
  },
  {
    "text": "thus in in in in that particular",
    "start": "1005940",
    "end": "1009260"
  },
  {
    "text": "jurisdiction so that's that's the shape",
    "start": "1009260",
    "end": "1011430"
  },
  {
    "text": "of the solution and with that I am going",
    "start": "1011430",
    "end": "1014700"
  },
  {
    "text": "to hand it over to dipti all right so",
    "start": "1014700",
    "end": "1020570"
  },
  {
    "text": "the way we have said this demo up is",
    "start": "1020959",
    "end": "1023730"
  },
  {
    "start": "1021000",
    "end": "1053000"
  },
  {
    "text": "that we built a cluster already in gke",
    "start": "1023730",
    "end": "1026990"
  },
  {
    "text": "where we will store the data that we",
    "start": "1026990",
    "end": "1030209"
  },
  {
    "text": "want to store and we have written a",
    "start": "1030209",
    "end": "1033688"
  },
  {
    "text": "custom windex",
    "start": "1033689",
    "end": "1034740"
  },
  {
    "text": "which will route the data appropriately",
    "start": "1034740",
    "end": "1036660"
  },
  {
    "text": "to the region and this cluster has",
    "start": "1036660",
    "end": "1039449"
  },
  {
    "text": "multiple cells and multiple regions and",
    "start": "1039449",
    "end": "1042270"
  },
  {
    "text": "countries here is some sample data that",
    "start": "1042270",
    "end": "1045750"
  },
  {
    "text": "we will insert into our sharded database",
    "start": "1045750",
    "end": "1048480"
  },
  {
    "text": "and we'll see where it goes so this is",
    "start": "1048480",
    "end": "1054240"
  },
  {
    "text": "the cluster that we have pre created in",
    "start": "1054240",
    "end": "1056429"
  },
  {
    "text": "the in GCP gke there are four kubernetes",
    "start": "1056429",
    "end": "1062280"
  },
  {
    "text": "clusters one in each",
    "start": "1062280",
    "end": "1064090"
  },
  {
    "text": "we have Asia Australia Europe and the",
    "start": "1064090",
    "end": "1067210"
  },
  {
    "text": "United States and using those clusters",
    "start": "1067210",
    "end": "1073840"
  },
  {
    "text": "we are already running with us with",
    "start": "1073840",
    "end": "1076990"
  },
  {
    "text": "these two key spaces we have a user DB",
    "start": "1076990",
    "end": "1079510"
  },
  {
    "text": "key space which is sharded and it has",
    "start": "1079510",
    "end": "1081610"
  },
  {
    "text": "four shots and we have an auxilary key",
    "start": "1081610",
    "end": "1084100"
  },
  {
    "text": "space called look up which is uncharted",
    "start": "1084100",
    "end": "1086200"
  },
  {
    "text": "which is what we will use to do the",
    "start": "1086200",
    "end": "1088090"
  },
  {
    "text": "routing of the data let's take a look at",
    "start": "1088090",
    "end": "1091299"
  },
  {
    "text": "what our schema looks like so in the",
    "start": "1091299",
    "end": "1095350"
  },
  {
    "text": "user DB key space we have a single table",
    "start": "1095350",
    "end": "1099549"
  },
  {
    "text": "called customer and the customer table",
    "start": "1099549",
    "end": "1101710"
  },
  {
    "text": "has an ID a name national ID and a",
    "start": "1101710",
    "end": "1105610"
  },
  {
    "text": "country so national ID is our sample",
    "start": "1105610",
    "end": "1108549"
  },
  {
    "text": "column for representing data that's",
    "start": "1108549",
    "end": "1111580"
  },
  {
    "text": "personally identifiable and that is",
    "start": "1111580",
    "end": "1113649"
  },
  {
    "text": "subject to the various data locality",
    "start": "1113649",
    "end": "1115510"
  },
  {
    "text": "loss and country is the field that we",
    "start": "1115510",
    "end": "1118390"
  },
  {
    "text": "are going to use to decide how the data",
    "start": "1118390",
    "end": "1121000"
  },
  {
    "text": "should be stored this doesn't",
    "start": "1121000",
    "end": "1122950"
  },
  {
    "text": "necessarily have to be country it could",
    "start": "1122950",
    "end": "1124750"
  },
  {
    "text": "be anything that pins the data to a",
    "start": "1124750",
    "end": "1127840"
  },
  {
    "text": "particular location either a geographic",
    "start": "1127840",
    "end": "1130450"
  },
  {
    "text": "location or a legal jurisdiction so",
    "start": "1130450",
    "end": "1134980"
  },
  {
    "start": "1134000",
    "end": "1253000"
  },
  {
    "text": "that's what our schema looks like and",
    "start": "1134980",
    "end": "1136990"
  },
  {
    "text": "now let's look at the V schema so we've",
    "start": "1136990",
    "end": "1140799"
  },
  {
    "text": "defined a V schema for this key space",
    "start": "1140799",
    "end": "1142990"
  },
  {
    "text": "and first of all it's a shard and key",
    "start": "1142990",
    "end": "1146169"
  },
  {
    "text": "space and it has a Windex called Region",
    "start": "1146169",
    "end": "1149529"
  },
  {
    "text": "V DX and this Windex takes a map which",
    "start": "1149529",
    "end": "1153100"
  },
  {
    "text": "tells the code which country belongs to",
    "start": "1153100",
    "end": "1157120"
  },
  {
    "text": "which region and it will use the ID and",
    "start": "1157120",
    "end": "1161440"
  },
  {
    "text": "the country fields to compute a key",
    "start": "1161440",
    "end": "1163809"
  },
  {
    "text": "space ID and store that in a mapping",
    "start": "1163809",
    "end": "1166840"
  },
  {
    "text": "table and we've then said that our",
    "start": "1166840",
    "end": "1170980"
  },
  {
    "text": "customer table will be using this region",
    "start": "1170980",
    "end": "1174100"
  },
  {
    "text": "vidi-vidi x Windex and the columns that",
    "start": "1174100",
    "end": "1176620"
  },
  {
    "text": "it uses our ID and country now let's",
    "start": "1176620",
    "end": "1183190"
  },
  {
    "text": "actually go try and insert this data and",
    "start": "1183190",
    "end": "1187950"
  },
  {
    "text": "see what happens and could you please",
    "start": "1187950",
    "end": "1193059"
  },
  {
    "text": "show everybody the insert customer",
    "start": "1193059",
    "end": "1194740"
  },
  {
    "text": "sequel also chef",
    "start": "1194740",
    "end": "1196290"
  },
  {
    "text": "Oh",
    "start": "1196290",
    "end": "1198320"
  },
  {
    "text": "so while that's happening let's take a",
    "start": "1211389",
    "end": "1213950"
  },
  {
    "text": "look at what the data looks like that we",
    "start": "1213950",
    "end": "1218360"
  },
  {
    "text": "are inserting so the point that I want",
    "start": "1218360",
    "end": "1224090"
  },
  {
    "text": "to make is that these are simple insert",
    "start": "1224090",
    "end": "1225889"
  },
  {
    "text": "statements with no regard to there is no",
    "start": "1225889",
    "end": "1228799"
  },
  {
    "text": "hint there about where the data should",
    "start": "1228799",
    "end": "1231230"
  },
  {
    "text": "leave your application hasn't changed at",
    "start": "1231230",
    "end": "1232940"
  },
  {
    "text": "all",
    "start": "1232940",
    "end": "1233389"
  },
  {
    "text": "your application does not need to",
    "start": "1233389",
    "end": "1235399"
  },
  {
    "text": "concern itself with regions it does not",
    "start": "1235399",
    "end": "1237350"
  },
  {
    "text": "need to concern itself with where these",
    "start": "1237350",
    "end": "1239779"
  },
  {
    "text": "cells are located etc these are simples",
    "start": "1239779",
    "end": "1242929"
  },
  {
    "text": "insert statements that there are",
    "start": "1242929",
    "end": "1244639"
  },
  {
    "text": "inserting data and all we are inserting",
    "start": "1244639",
    "end": "1247940"
  },
  {
    "text": "here into the table are the name and the",
    "start": "1247940",
    "end": "1250009"
  },
  {
    "text": "national ID and the country now that",
    "start": "1250009",
    "end": "1253940"
  },
  {
    "start": "1253000",
    "end": "1292000"
  },
  {
    "text": "we've inserted the data let's go and",
    "start": "1253940",
    "end": "1256669"
  },
  {
    "text": "look at what our witters control panel",
    "start": "1256669",
    "end": "1259129"
  },
  {
    "text": "tells us so earlier we had 0 rows in",
    "start": "1259129",
    "end": "1262789"
  },
  {
    "text": "this key space now that we have inserted",
    "start": "1262789",
    "end": "1266210"
  },
  {
    "text": "the data let's go and look at what that",
    "start": "1266210",
    "end": "1268730"
  },
  {
    "text": "looks like so we want to look at the",
    "start": "1268730",
    "end": "1271999"
  },
  {
    "text": "user DB key space and in shard 40 which",
    "start": "1271999",
    "end": "1275629"
  },
  {
    "text": "is located in East Asia we have four",
    "start": "1275629",
    "end": "1278330"
  },
  {
    "text": "rows now and if we look at shard 42 ad",
    "start": "1278330",
    "end": "1282789"
  },
  {
    "text": "which is located in Australia we also",
    "start": "1282789",
    "end": "1286789"
  },
  {
    "text": "have four rows of data and we could do",
    "start": "1286789",
    "end": "1288980"
  },
  {
    "text": "this for the remaining two shards and we",
    "start": "1288980",
    "end": "1290840"
  },
  {
    "text": "will see the same thing but let's now",
    "start": "1290840",
    "end": "1293450"
  },
  {
    "start": "1292000",
    "end": "1409000"
  },
  {
    "text": "take a look at this data in the database",
    "start": "1293450",
    "end": "1295519"
  },
  {
    "text": "directly instead of going through a UI",
    "start": "1295519",
    "end": "1299379"
  },
  {
    "text": "so I'm going to connect to the key space",
    "start": "1299379",
    "end": "1302629"
  },
  {
    "text": "or the database using VT gate and this",
    "start": "1302629",
    "end": "1306649"
  },
  {
    "text": "is giving me a unified view of the four",
    "start": "1306649",
    "end": "1309409"
  },
  {
    "text": "different shards for different physical",
    "start": "1309409",
    "end": "1311869"
  },
  {
    "text": "databases that we have so I'm just going",
    "start": "1311869",
    "end": "1315080"
  },
  {
    "text": "to say show me everything from the",
    "start": "1315080",
    "end": "1317179"
  },
  {
    "text": "customer table and what I get here is a",
    "start": "1317179",
    "end": "1320299"
  },
  {
    "text": "scatter gathered query the query was",
    "start": "1320299",
    "end": "1322429"
  },
  {
    "text": "routed to all four shards and the",
    "start": "1322429",
    "end": "1324289"
  },
  {
    "text": "results were gathered back together by",
    "start": "1324289",
    "end": "1326059"
  },
  {
    "text": "VT gate and presented here and this is a",
    "start": "1326059",
    "end": "1329809"
  },
  {
    "text": "regular my sequel client that I'm using",
    "start": "1329809",
    "end": "1332149"
  },
  {
    "text": "because VT gate implements the binary",
    "start": "1332149",
    "end": "1334340"
  },
  {
    "text": "protocol now let's look at the",
    "start": "1334340",
    "end": "1337429"
  },
  {
    "text": "individual shards so the syntax for that",
    "start": "1337429",
    "end": "1341330"
  },
  {
    "text": "would be I",
    "start": "1341330",
    "end": "1342440"
  },
  {
    "text": "would say use this database and then",
    "start": "1342440",
    "end": "1350570"
  },
  {
    "text": "select the data from this shard - 40 and",
    "start": "1350570",
    "end": "1354610"
  },
  {
    "text": "there are four records now let's go to",
    "start": "1354610",
    "end": "1359049"
  },
  {
    "text": "40 - 80 which is our Australian shard",
    "start": "1359049",
    "end": "1363980"
  },
  {
    "text": "and sorry",
    "start": "1363980",
    "end": "1369039"
  },
  {
    "text": "and let's see what we have in that",
    "start": "1374240",
    "end": "1378050"
  },
  {
    "text": "database so shard 4280 which is our",
    "start": "1378050",
    "end": "1383510"
  },
  {
    "text": "australian shard only has data that",
    "start": "1383510",
    "end": "1385640"
  },
  {
    "text": "belongs to Australia and New Zealand it",
    "start": "1385640",
    "end": "1387650"
  },
  {
    "text": "doesn't have data from any other",
    "start": "1387650",
    "end": "1389540"
  },
  {
    "text": "countries which don't belong to the",
    "start": "1389540",
    "end": "1391130"
  },
  {
    "text": "region the other thing I want to show",
    "start": "1391130",
    "end": "1394010"
  },
  {
    "text": "you is what is present in the mapping",
    "start": "1394010",
    "end": "1397700"
  },
  {
    "text": "table so how did we actually do the",
    "start": "1397700",
    "end": "1399710"
  },
  {
    "text": "mapping of the data from a country to a",
    "start": "1399710",
    "end": "1402260"
  },
  {
    "text": "region so let's look at the mapping",
    "start": "1402260",
    "end": "1407809"
  },
  {
    "text": "table and the mapping table has one",
    "start": "1407809",
    "end": "1410780"
  },
  {
    "start": "1409000",
    "end": "1482000"
  },
  {
    "text": "record for each row that we inserted",
    "start": "1410780",
    "end": "1413150"
  },
  {
    "text": "into the main database and it has an ID",
    "start": "1413150",
    "end": "1415520"
  },
  {
    "text": "country and a key space ID which is not",
    "start": "1415520",
    "end": "1417620"
  },
  {
    "text": "very readable so let's make that",
    "start": "1417620",
    "end": "1419900"
  },
  {
    "text": "readable so if we look at the hex value",
    "start": "1419900",
    "end": "1428420"
  },
  {
    "text": "of that key space ID we see that this is",
    "start": "1428420",
    "end": "1433340"
  },
  {
    "text": "some computed value that doesn't really",
    "start": "1433340",
    "end": "1435830"
  },
  {
    "text": "make any sense but it doesn't matter we",
    "start": "1435830",
    "end": "1438980"
  },
  {
    "text": "don't need to know because the data is",
    "start": "1438980",
    "end": "1440960"
  },
  {
    "text": "still getting routed to the correct",
    "start": "1440960",
    "end": "1442309"
  },
  {
    "text": "place let's take a closer look at that",
    "start": "1442309",
    "end": "1445910"
  },
  {
    "text": "hex value and maybe it will make a",
    "start": "1445910",
    "end": "1449420"
  },
  {
    "text": "little more sense so now we can see that",
    "start": "1449420",
    "end": "1454160"
  },
  {
    "text": "when the country is Australia the hex",
    "start": "1454160",
    "end": "1456740"
  },
  {
    "text": "value is always 40 and when the country",
    "start": "1456740",
    "end": "1458990"
  },
  {
    "text": "is New Zealand the hex value is always",
    "start": "1458990",
    "end": "1460670"
  },
  {
    "text": "41 and so on this is the first byte of",
    "start": "1460670",
    "end": "1463400"
  },
  {
    "text": "that right takes value so this is",
    "start": "1463400",
    "end": "1466850"
  },
  {
    "text": "actually I extracted the first byte of",
    "start": "1466850",
    "end": "1469490"
  },
  {
    "text": "the hex value and for each country we",
    "start": "1469490",
    "end": "1472910"
  },
  {
    "text": "have defined a specific value that will",
    "start": "1472910",
    "end": "1476540"
  },
  {
    "text": "then determine how the data gets routed",
    "start": "1476540",
    "end": "1479300"
  },
  {
    "text": "and that brings us to the end of the",
    "start": "1479300",
    "end": "1482990"
  },
  {
    "start": "1482000",
    "end": "1745000"
  },
  {
    "text": "demo now we can take questions",
    "start": "1482990",
    "end": "1487390"
  },
  {
    "text": "one thing that I would like okay we have",
    "start": "1491420",
    "end": "1494840"
  },
  {
    "text": "a question here we have if you could",
    "start": "1494840",
    "end": "1499910"
  },
  {
    "text": "come up here we have so my question is",
    "start": "1499910",
    "end": "1510250"
  },
  {
    "text": "so you have this cluster with data that",
    "start": "1510250",
    "end": "1513770"
  },
  {
    "text": "is distributed according to region what",
    "start": "1513770",
    "end": "1516500"
  },
  {
    "text": "if I issue an update statement that",
    "start": "1516500",
    "end": "1519200"
  },
  {
    "text": "would change the region and the second",
    "start": "1519200",
    "end": "1521780"
  },
  {
    "text": "question would be does it has support",
    "start": "1521780",
    "end": "1525710"
  },
  {
    "text": "transactions and like how does that work",
    "start": "1525710",
    "end": "1527840"
  },
  {
    "text": "institution where multiple charts are",
    "start": "1527840",
    "end": "1531010"
  },
  {
    "text": "used in general you cannot change the",
    "start": "1531010",
    "end": "1538940"
  },
  {
    "text": "columns based on which you have done the",
    "start": "1538940",
    "end": "1540860"
  },
  {
    "text": "sharding but recently we have built a",
    "start": "1540860",
    "end": "1544670"
  },
  {
    "text": "new feature a new framework in witters",
    "start": "1544670",
    "end": "1547490"
  },
  {
    "text": "called read application using which you",
    "start": "1547490",
    "end": "1549830"
  },
  {
    "text": "can change the value of the sharding",
    "start": "1549830",
    "end": "1551990"
  },
  {
    "text": "column but you are effectively doing a",
    "start": "1551990",
    "end": "1554720"
  },
  {
    "text": "reading so it is not a simple update",
    "start": "1554720",
    "end": "1558170"
  },
  {
    "text": "it's a more complex workflow but you can",
    "start": "1558170",
    "end": "1560720"
  },
  {
    "text": "relocate the data from one region to",
    "start": "1560720",
    "end": "1563420"
  },
  {
    "text": "another",
    "start": "1563420",
    "end": "1563870"
  },
  {
    "text": "you can think and the second question",
    "start": "1563870",
    "end": "1567560"
  },
  {
    "text": "was transactions transactions right so",
    "start": "1567560",
    "end": "1571850"
  },
  {
    "text": "what witness is really good at is",
    "start": "1571850",
    "end": "1575140"
  },
  {
    "text": "co-locating data that needs to be",
    "start": "1575140",
    "end": "1578120"
  },
  {
    "text": "together in a single shard",
    "start": "1578120",
    "end": "1579920"
  },
  {
    "text": "so for example we have that the customer",
    "start": "1579920",
    "end": "1582470"
  },
  {
    "text": "table which is charted using ID let's",
    "start": "1582470",
    "end": "1584570"
  },
  {
    "text": "say that you have orders table that has",
    "start": "1584570",
    "end": "1586730"
  },
  {
    "text": "its own ID column but it also probably",
    "start": "1586730",
    "end": "1589280"
  },
  {
    "text": "has a another column called customer ID",
    "start": "1589280",
    "end": "1591400"
  },
  {
    "text": "identifying the customer who is placing",
    "start": "1591400",
    "end": "1593420"
  },
  {
    "text": "that order so we witness allows you to",
    "start": "1593420",
    "end": "1596810"
  },
  {
    "text": "say shard my cus my orders table not",
    "start": "1596810",
    "end": "1599780"
  },
  {
    "text": "using its ID column but using its",
    "start": "1599780",
    "end": "1601580"
  },
  {
    "text": "customer ID column so that way the order",
    "start": "1601580",
    "end": "1603920"
  },
  {
    "text": "is associated with a given customer live",
    "start": "1603920",
    "end": "1606410"
  },
  {
    "text": "in the same chart that the customer row",
    "start": "1606410",
    "end": "1608210"
  },
  {
    "text": "is what the effect that this has is that",
    "start": "1608210",
    "end": "1611060"
  },
  {
    "text": "most of your queries and transactions",
    "start": "1611060",
    "end": "1614390"
  },
  {
    "text": "all end up being single Charlotte",
    "start": "1614390",
    "end": "1616430"
  },
  {
    "text": "they're being sent finally to a my",
    "start": "1616430",
    "end": "1618380"
  },
  {
    "text": "sequel database and which is fully acyl",
    "start": "1618380",
    "end": "1621830"
  },
  {
    "text": "compliant right as far as cross",
    "start": "1621830",
    "end": "1624830"
  },
  {
    "text": "transactions are concerned so the",
    "start": "1624830",
    "end": "1627529"
  },
  {
    "text": "typical example that I give is that you",
    "start": "1627529",
    "end": "1629179"
  },
  {
    "text": "have a payment app and you have your",
    "start": "1629179",
    "end": "1631700"
  },
  {
    "text": "shower and using users and one user give",
    "start": "1631700",
    "end": "1633620"
  },
  {
    "text": "gives other user money created from one",
    "start": "1633620",
    "end": "1636440"
  },
  {
    "text": "road day between two another row as a",
    "start": "1636440",
    "end": "1638149"
  },
  {
    "text": "part of single transaction those two",
    "start": "1638149",
    "end": "1640250"
  },
  {
    "text": "users can either be in the same shard or",
    "start": "1640250",
    "end": "1641899"
  },
  {
    "text": "can be in two different shots let's take",
    "start": "1641899",
    "end": "1643909"
  },
  {
    "text": "the example when they're in two",
    "start": "1643909",
    "end": "1644899"
  },
  {
    "text": "different shots right so what we allow",
    "start": "1644899",
    "end": "1647720"
  },
  {
    "text": "you to do is we allow you to use two PC",
    "start": "1647720",
    "end": "1651019"
  },
  {
    "text": "transactions we have implemented",
    "start": "1651019",
    "end": "1653179"
  },
  {
    "text": "two-phase protocol in witness where do",
    "start": "1653179",
    "end": "1656630"
  },
  {
    "text": "we do a prepare and charmin preparing",
    "start": "1656630",
    "end": "1659210"
  },
  {
    "text": "shot to commit in Charlotte one convert",
    "start": "1659210",
    "end": "1661250"
  },
  {
    "text": "in shark two and we write the redo logs",
    "start": "1661250",
    "end": "1664909"
  },
  {
    "text": "in a sidecar database so that before the",
    "start": "1664909",
    "end": "1669740"
  },
  {
    "text": "after let's say that between commit and",
    "start": "1669740",
    "end": "1672139"
  },
  {
    "text": "chard one and commit in shard",
    "start": "1672139",
    "end": "1673610"
  },
  {
    "text": "- if shark two goes down and you need to",
    "start": "1673610",
    "end": "1676730"
  },
  {
    "text": "fail over to another replica the redo",
    "start": "1676730",
    "end": "1680210"
  },
  {
    "text": "logs are in the sidecar database which",
    "start": "1680210",
    "end": "1682070"
  },
  {
    "text": "have been replicated into the replicas",
    "start": "1682070",
    "end": "1683600"
  },
  {
    "text": "and then after the new master comes up",
    "start": "1683600",
    "end": "1685909"
  },
  {
    "text": "we can decide either to rollback that",
    "start": "1685909",
    "end": "1687649"
  },
  {
    "text": "transaction or to let it succeed you",
    "start": "1687649",
    "end": "1690740"
  },
  {
    "text": "have to keep in mind though that we",
    "start": "1690740",
    "end": "1692480"
  },
  {
    "text": "don't provide isolation while Kroshka",
    "start": "1692480",
    "end": "1695210"
  },
  {
    "text": "transaction is going on so in the wrong",
    "start": "1695210",
    "end": "1697580"
  },
  {
    "text": "millisecond if you end up reading from",
    "start": "1697580",
    "end": "1700250"
  },
  {
    "text": "two different shots you might see an",
    "start": "1700250",
    "end": "1702590"
  },
  {
    "text": "inconsistent view of the data okay thank",
    "start": "1702590",
    "end": "1705649"
  },
  {
    "text": "you I think we are actually out of",
    "start": "1705649",
    "end": "1709820"
  },
  {
    "text": "sowing so I think we have a few",
    "start": "1709820",
    "end": "1711380"
  },
  {
    "text": "questions it's a quick one",
    "start": "1711380",
    "end": "1716269"
  },
  {
    "text": "thanks for the representation what does",
    "start": "1716269",
    "end": "1718580"
  },
  {
    "text": "the charting function used was it a",
    "start": "1718580",
    "end": "1720590"
  },
  {
    "text": "custom function that you used for",
    "start": "1720590",
    "end": "1722649"
  },
  {
    "text": "determining which shard each road go",
    "start": "1722649",
    "end": "1725690"
  },
  {
    "text": "into so the way we implemented the",
    "start": "1725690",
    "end": "1728389"
  },
  {
    "text": "sharding function it's a custom sharding",
    "start": "1728389",
    "end": "1730490"
  },
  {
    "text": "function and in the slides that are",
    "start": "1730490",
    "end": "1732620"
  },
  {
    "text": "published on the website there's a link",
    "start": "1732620",
    "end": "1733970"
  },
  {
    "text": "to the source code yeah so what that",
    "start": "1733970",
    "end": "1736700"
  },
  {
    "text": "does is you can choose how many bytes of",
    "start": "1736700",
    "end": "1739580"
  },
  {
    "text": "the key space ID you want to allocate to",
    "start": "1739580",
    "end": "1741830"
  },
  {
    "text": "the region and",
    "start": "1741830",
    "end": "1744980"
  },
  {
    "text": "for each country we've given a bite",
    "start": "1744980",
    "end": "1747960"
  },
  {
    "text": "value and the number of bytes that were",
    "start": "1747960",
    "end": "1750300"
  },
  {
    "text": "chosen in this case one byte for the",
    "start": "1750300",
    "end": "1752340"
  },
  {
    "text": "region we basically write this value",
    "start": "1752340",
    "end": "1754980"
  },
  {
    "text": "into that byte of the key space ID and",
    "start": "1754980",
    "end": "1757500"
  },
  {
    "text": "the key space rank the key range the",
    "start": "1757500",
    "end": "1760440"
  },
  {
    "text": "full key range from 0 to FF is divided",
    "start": "1760440",
    "end": "1763260"
  },
  {
    "text": "into four equal parts so this byte value",
    "start": "1763260",
    "end": "1766230"
  },
  {
    "text": "then determines which fourth it belongs",
    "start": "1766230",
    "end": "1770070"
  },
  {
    "text": "to and the way we chose the values was",
    "start": "1770070",
    "end": "1772890"
  },
  {
    "text": "such that Australia New Zealand 64 65",
    "start": "1772890",
    "end": "1776850"
  },
  {
    "text": "are exactly hex 80 and 81 so they go",
    "start": "1776850",
    "end": "1779550"
  },
  {
    "text": "into shard two and China and Korea hex",
    "start": "1779550",
    "end": "1783270"
  },
  {
    "text": "one and two exactly go into shard 1 so",
    "start": "1783270",
    "end": "1785970"
  },
  {
    "text": "we chose the values for the country in",
    "start": "1785970",
    "end": "1788280"
  },
  {
    "text": "that way thank you very much and these",
    "start": "1788280",
    "end": "1791640"
  },
  {
    "text": "are our handles please ask questions if",
    "start": "1791640",
    "end": "1795330"
  },
  {
    "text": "you have or we will be available outside",
    "start": "1795330",
    "end": "1798040"
  },
  {
    "text": "[Applause]",
    "start": "1798040",
    "end": "1801650"
  }
]