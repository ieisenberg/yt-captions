[
  {
    "text": "so welcome to our talk can I be heard yeah I think so I hear it Echo um so welcome to our talk",
    "start": "1040",
    "end": "8559"
  },
  {
    "text": "about generic control plans and uh kcp um my name is Stefan shimansky I'm",
    "start": "8559",
    "end": "14320"
  },
  {
    "text": "working at upbound on control plans so on kubernetes API Machinery API server",
    "start": "14320",
    "end": "19800"
  },
  {
    "text": "stuff so hey I'm MJ I work at CTI we we're trying to look into control planes",
    "start": "19800",
    "end": "26359"
  },
  {
    "text": "so to so before we jump in question how many of you heard about",
    "start": "26359",
    "end": "32558"
  },
  {
    "text": "kcp right hand how many of you used kcp okay we need to change the second",
    "start": "32559",
    "end": "39000"
  },
  {
    "text": "part so this is why we're here cool all right so we we uh I tweeted recently",
    "start": "39000",
    "end": "45879"
  },
  {
    "text": "that this is a deep dive and we mean it so don't be afraid um you will learn",
    "start": "45879",
    "end": "51640"
  },
  {
    "text": "something either way so we have basically two topics generic control plane and kcp they are highly related",
    "start": "51640",
    "end": "58760"
  },
  {
    "text": "basically generic control plane is a foundational work to enable kcp eventually but you don't need to to do",
    "start": "58760",
    "end": "66320"
  },
  {
    "text": "the Second Step you can use generic control plane also on its own so we start with generic control plane and um",
    "start": "66320",
    "end": "73080"
  },
  {
    "text": "there was a cap 4080 um one a half years ago and it was about allowing this um",
    "start": "73080",
    "end": "81119"
  },
  {
    "text": "yeah the construction easy construction of API servers which are Cube like and",
    "start": "81119",
    "end": "86920"
  },
  {
    "text": "they should inherit certain apis from kubernetes for example airb permissions",
    "start": "86920",
    "end": "93280"
  },
  {
    "text": "roles and role binding similar things config Maps so they are like coup API server but without all the compute stuff",
    "start": "93280",
    "end": "100399"
  },
  {
    "text": "so a partial API server C API server basically and the cap is still not closed uh but um since 131 so the",
    "start": "100399",
    "end": "109040"
  },
  {
    "text": "previous release We have basically done the heavy lifting and I guess even if you followed uh the pr flow in the API",
    "start": "109040",
    "end": "116719"
  },
  {
    "text": "server you might not have noticed that this actually happened the reason is that um the heavy lifting",
    "start": "116719",
    "end": "122200"
  },
  {
    "text": "has been done but we didn't do any renaming any package movement so there are those um packages here if you look",
    "start": "122200",
    "end": "129440"
  },
  {
    "text": "into the code basically the first one is the essential one for for the work of generic control plans this is a generic",
    "start": "129440",
    "end": "135959"
  },
  {
    "text": "API server which is able to use apis from kubernetes like conf map Secrets",
    "start": "135959",
    "end": "141519"
  },
  {
    "text": "similar things the second one if you read the code package control plane um don't be",
    "start": "141519",
    "end": "147400"
  },
  {
    "text": "confused it sounds like generic control plane it's not this is Cube API server so the renaming um the cleanup all of",
    "start": "147400",
    "end": "155400"
  },
  {
    "text": "that will happen but the heavy lifting has been done like the split has been done um there's a second part in in the",
    "start": "155400",
    "end": "161760"
  },
  {
    "text": "cap about a staging repository hasn't been done either so um this is basically the movement so every everything you see",
    "start": "161760",
    "end": "168680"
  },
  {
    "text": "in the first line the control pain API server will likely move into such a staging repository eventually it's",
    "start": "168680",
    "end": "174800"
  },
  {
    "text": "working progress there are discussions but uh yeah nothing has merged yet anyway the important step is the first",
    "start": "174800",
    "end": "181640"
  },
  {
    "text": "one because this enables basically everything already and yeah don't be afraid if you don't uh know where",
    "start": "181640",
    "end": "188920"
  },
  {
    "text": "everything is in the code we will explain big parts of that so you're in the right talk if you want to learn how",
    "start": "188920",
    "end": "194959"
  },
  {
    "text": "to construct a generic control plan so cool so before we go in deeper switch next gear so what is control control",
    "start": "194959",
    "end": "202000"
  },
  {
    "text": "planes in general so most of you use control planes on a daily basis if you interact with Azure you act interact",
    "start": "202000",
    "end": "208920"
  },
  {
    "text": "with r it's a Azure control plane AWS has the same so it's a certain API",
    "start": "208920",
    "end": "215040"
  },
  {
    "text": "surface which enables you to do to achieve certain goal for your business to create something and it could look",
    "start": "215040",
    "end": "220720"
  },
  {
    "text": "like this like simplest one would be just config Maps Secrets service",
    "start": "220720",
    "end": "225959"
  },
  {
    "text": "accounts very simple one which enables you to do something or it could look like something like this with all the",
    "start": "225959",
    "end": "231720"
  },
  {
    "text": "belts and whistles from kubernetes ecosystem but the idea is it should be non opiniated where you choose and pick",
    "start": "231720",
    "end": "239519"
  },
  {
    "text": "what you want to do because everybody who built an API built some kind of",
    "start": "239519",
    "end": "244799"
  },
  {
    "text": "audit capability logging service accounts like we did that stuff multiple times invented this stuff so many times",
    "start": "244799",
    "end": "251040"
  },
  {
    "text": "like we should not be doing this stuff so in general what it means in this",
    "start": "251040",
    "end": "256199"
  },
  {
    "text": "context it's a new code path in KK repository where you can instantiate a control plane with a specific apis you",
    "start": "256199",
    "end": "264160"
  },
  {
    "text": "can cherry pick choose apis you want to use and you can get an AP kubernetes",
    "start": "264160",
    "end": "269759"
  },
  {
    "text": "this looks like API server which does what you need to do in addition to that",
    "start": "269759",
    "end": "275240"
  },
  {
    "text": "to make things simpler because renames didn't happen yet we have a additional wrapper Builder under kcp Dev generic",
    "start": "275240",
    "end": "282800"
  },
  {
    "text": "control plane which helps you to start it now helps to connect the dots now basically and understand how it",
    "start": "282800",
    "end": "290560"
  },
  {
    "text": "is so before we jump in before we go into code bit of API server",
    "start": "290560",
    "end": "297080"
  },
  {
    "text": "internals so I personally Miss on this one in other presentations out there so",
    "start": "297080",
    "end": "302680"
  },
  {
    "text": "this is why it's kind of here so everything in kubernetes is built around this pattern of like three stages where",
    "start": "302680",
    "end": "308800"
  },
  {
    "text": "you have options you have configs and you have a server so when once you instantiate an options you tweak",
    "start": "308800",
    "end": "315320"
  },
  {
    "text": "something you take the options object and you instantiate config you tweak config you take the config and you",
    "start": "315320",
    "end": "323000"
  },
  {
    "text": "instantiate a server so that's usual pattern in QBE and every component in C",
    "start": "323000",
    "end": "330960"
  },
  {
    "text": "most components in kubernetes uses this pattern so when it comes to qbp server you have these three blocks so few full",
    "start": "330960",
    "end": "339600"
  },
  {
    "text": "generic control plane server consists of uh same as in Cube server consist of aggregator API server generic control",
    "start": "339600",
    "end": "346319"
  },
  {
    "text": "plane server and API extension server and all of them they follow the same pattern you have options for all of",
    "start": "346319",
    "end": "353000"
  },
  {
    "text": "three you have config for all of them and at the end the server basically delegation chain so we will go back back",
    "start": "353000",
    "end": "359840"
  },
  {
    "text": "to this again but the idea is usually this ones are your flags your bind ports",
    "start": "359840",
    "end": "365479"
  },
  {
    "text": "your feature Gates these ones are your clients informers authorizers in a code where you tweak some round Trippers and",
    "start": "365479",
    "end": "372080"
  },
  {
    "text": "things like that and at end you instantiate a server and basically also the cube API",
    "start": "372080",
    "end": "379319"
  },
  {
    "text": "server if you look in cators 131 is built like that but this hasn't been the",
    "start": "379319",
    "end": "384639"
  },
  {
    "text": "case so a large chunk of the work in generic control plan in this cap basically was to also take the API",
    "start": "384639",
    "end": "390840"
  },
  {
    "text": "server and follow the pattern of options config server because this enables",
    "start": "390840",
    "end": "396160"
  },
  {
    "text": "composition so you can TW get um I work long time on open shift open shift is just possible because of this pattern",
    "start": "396160",
    "end": "402440"
  },
  {
    "text": "because we we have to tweak a lot in in in redheads open shift and um before 131",
    "start": "402440",
    "end": "407800"
  },
  {
    "text": "it was just not like like that Cube Ser was always very messy and um yeah was",
    "start": "407800",
    "end": "413160"
  },
  {
    "text": "years behind things like the API extension API server which is serving CS for example so it's about that tweaking",
    "start": "413160",
    "end": "420560"
  },
  {
    "text": "opportunities to tweak and comp compose components cool so code show me the code",
    "start": "420560",
    "end": "428319"
  },
  {
    "text": "this is how the generic control plane would look like like don't get scary like we'll get a bit explain it so this",
    "start": "428319",
    "end": "434319"
  },
  {
    "text": "is part taken from generic control plane repository so what this is on the screen",
    "start": "434319",
    "end": "440479"
  },
  {
    "text": "is this basically where we take a uh we construct this all the chain of",
    "start": "440479",
    "end": "446520"
  },
  {
    "text": "Delegation in a Tak an API code so we take an extension server which serves your crds we take generic control plane",
    "start": "446520",
    "end": "453639"
  },
  {
    "text": "server the one which got split out we instantiate it we take aggregator server and we use that and before that there is",
    "start": "453639",
    "end": "460520"
  },
  {
    "text": "a filters chains authorization authentication basically in front of that so this is how it looks like to map",
    "start": "460520",
    "end": "468360"
  },
  {
    "text": "it back to that picture so you have on top not found Handler you have a",
    "start": "468360",
    "end": "473720"
  },
  {
    "text": "extension server basically which serves your crds you have Cube API config map",
    "start": "473720",
    "end": "478840"
  },
  {
    "text": "secrets are back and you have aggregator API Services open API things like that",
    "start": "478840",
    "end": "485639"
  },
  {
    "text": "so you construct this chain if you notice you pass control plane gets passed back in into the next one chain",
    "start": "485639",
    "end": "492319"
  },
  {
    "text": "so it's kind of it builds like this so you build this delegation chain it's a",
    "start": "492319",
    "end": "498639"
  },
  {
    "text": "first in last out so you instantiate the not found hand first it gets called last",
    "start": "498639",
    "end": "504639"
  },
  {
    "text": "so all in all this chaining of the code gives you a generic control plane server",
    "start": "504639",
    "end": "512640"
  },
  {
    "text": "so we had this idea like okay how to make it more pluggable let's look to the code in Cube and see what it would take",
    "start": "512640",
    "end": "519320"
  },
  {
    "text": "to make it uh switchable so we use the same pattern we use in kcp batteries and",
    "start": "519320",
    "end": "525560"
  },
  {
    "text": "we started looking how we can identify like example if you want API Services it's a cube aggregator component if you",
    "start": "525560",
    "end": "532320"
  },
  {
    "text": "want crds that's API extension server and we kind of played with this it's still very much prototype some things",
    "start": "532320",
    "end": "538920"
  },
  {
    "text": "are broken not yet but you can already feel the how it is so what you get you",
    "start": "538920",
    "end": "544240"
  },
  {
    "text": "get pluggable do it yourself kubernetes like API server out of the",
    "start": "544240",
    "end": "550000"
  },
  {
    "text": "box so first demo we have two of them and uh I was told to use this fancy",
    "start": "550000",
    "end": "557000"
  },
  {
    "text": "fake shell stuff but let's not do that so what I do in this case I start same",
    "start": "557000",
    "end": "564079"
  },
  {
    "text": "gcp start from the generic control plane Repository",
    "start": "564079",
    "end": "569720"
  },
  {
    "text": "and it's ready you saw how fast was this basically it's faster than any mini cubes or mini shifts out there so if we",
    "start": "569720",
    "end": "576600"
  },
  {
    "text": "explore this instance now like Cube API resources this API is available gives",
    "start": "576600",
    "end": "582680"
  },
  {
    "text": "you this you have very small API surface so if you're building a SAS or something",
    "start": "582680",
    "end": "588160"
  },
  {
    "text": "or some internal configuration management system it's enough to achieve most of your goals if you try to build",
    "start": "588160",
    "end": "595120"
  },
  {
    "text": "get crds says like no there's not such a thing you install it says like yeah know",
    "start": "595120",
    "end": "600839"
  },
  {
    "text": "go away or namespaces works like that this means",
    "start": "600839",
    "end": "606480"
  },
  {
    "text": "it it's in this case API extension server which serves here this is not",
    "start": "606480",
    "end": "611680"
  },
  {
    "text": "even included in a chain we kind of skipped it all together another example would be full flow so in this case start",
    "start": "611680",
    "end": "619720"
  },
  {
    "text": "and list of batteries saying like I want everything so start it",
    "start": "619720",
    "end": "627480"
  },
  {
    "text": "again five so if we do the same thing exploration now we see full-blown API",
    "start": "627480",
    "end": "633079"
  },
  {
    "text": "server so this means it enables you to take an opinion choose what you want to",
    "start": "633079",
    "end": "638880"
  },
  {
    "text": "have from the binary and just create your own and in this case already exist",
    "start": "638880",
    "end": "645760"
  },
  {
    "text": "because I didn't clean it before demo so if you get crds you can see it's there so you can add crds and basically do",
    "start": "645760",
    "end": "653040"
  },
  {
    "text": "what you want so that's a simp simple way how you can use a generic control",
    "start": "653040",
    "end": "658959"
  },
  {
    "text": "plane and compose compose your own basically",
    "start": "658959",
    "end": "664000"
  },
  {
    "text": "apis all right so we have seen one generic control plane and obviously the next step is if we can have one maybe we",
    "start": "664160",
    "end": "671240"
  },
  {
    "text": "can have many and those of you have looked into kcp kcp is about that right many control ples and um basically this",
    "start": "671240",
    "end": "678680"
  },
  {
    "text": "whole block we have seen before the chain there a dedication chain um we now",
    "start": "678680",
    "end": "683959"
  },
  {
    "text": "yeah we we just draw it as a small generic control plan box here and um we have one that's what we have seen kcp is",
    "start": "683959",
    "end": "690880"
  },
  {
    "text": "about many many in one binary so we don't run many of the gcps but kcp is",
    "start": "690880",
    "end": "696240"
  },
  {
    "text": "just one binary in the simplest case but it can host many control PS like a 100 or a thousand or something like that so",
    "start": "696240",
    "end": "703040"
  },
  {
    "text": "that's the simplest case for kcp so you can basically check out kcp a repository say kcp start and you get that I mean in",
    "start": "703040",
    "end": "711120"
  },
  {
    "text": "the beginning there's just one generic control plane um but you can create many if you if you like to and very important",
    "start": "711120",
    "end": "717920"
  },
  {
    "text": "there's just one ET CD so everything is hosted in this one binary but you still have many control plans and you can use",
    "start": "717920",
    "end": "724079"
  },
  {
    "text": "them for multi tendency for example all of them are isolated all of them have their own CDs for example completely",
    "start": "724079",
    "end": "730839"
  },
  {
    "text": "independent um in kcp we don't call them generate control ples it's a long word so um we call them clusters I mean",
    "start": "730839",
    "end": "737600"
  },
  {
    "text": "everything here every of those control plans you can point your Cube uh Cube cutle against or any other Cube client",
    "start": "737600",
    "end": "744480"
  },
  {
    "text": "there's a special URL of the server and you just talk to one of those control plans and it looks like a cluster I mean",
    "start": "744480",
    "end": "751120"
  },
  {
    "text": "there are no pots but still it's a cluster with garbage collection and and qua and similar things but of course",
    "start": "751120",
    "end": "756600"
  },
  {
    "text": "they are logical I mean it's it's similar like virtual machines right VMS are not machines they are virtual and",
    "start": "756600",
    "end": "762120"
  },
  {
    "text": "here they are logical clusters similar thing um we have many logical clusters in the system and all of them store the",
    "start": "762120",
    "end": "769120"
  },
  {
    "text": "data in in one ETD and every of those control pens they basically get their slice in ETD so we slice ETD and we have",
    "start": "769120",
    "end": "777120"
  },
  {
    "text": "a prefix for every control plane and then that's where the data like the conflict maps and secrets and everything",
    "start": "777120",
    "end": "782560"
  },
  {
    "text": "else is stored for one control plan but they don't interact in the beginning at least and um yeah more control plans we",
    "start": "782560",
    "end": "790000"
  },
  {
    "text": "can even start multiple instances of that ETD of course is limited um there's",
    "start": "790000",
    "end": "795639"
  },
  {
    "text": "a certain size you can maximally have so um if you want to horizontally scale and you want to use that for a back end for",
    "start": "795639",
    "end": "802519"
  },
  {
    "text": "a yeah some kind of cloud service you need much more than one ETD right obviously so what we can do we can start",
    "start": "802519",
    "end": "810079"
  },
  {
    "text": "another one so you could run many kcps this is fine as long as you don't want",
    "start": "810079",
    "end": "815320"
  },
  {
    "text": "cross logic cluster logic kcp brings some of that we will see in a second so this is actually not what you want so",
    "start": "815320",
    "end": "822560"
  },
  {
    "text": "kcp has a mode um which can have arbitrary many sharts so we have sharting in kcp every shart is an",
    "start": "822560",
    "end": "830160"
  },
  {
    "text": "instance which has its own storage back end which is normally LD but can also be something like kind based also in theory",
    "start": "830160",
    "end": "838040"
  },
  {
    "text": "but the whole control plane xs1 control plane so basically you have um yeah here",
    "start": "838040",
    "end": "844040"
  },
  {
    "text": "URL path SL clusters and then some logical cluster name so logical cluster",
    "start": "844040",
    "end": "849800"
  },
  {
    "text": "name normally is just some cryptic random I know 12 character um string or",
    "start": "849800",
    "end": "855720"
  },
  {
    "text": "something like that we see that in some examples later but basically there is one endpoint you can talk to and if you",
    "start": "855720",
    "end": "863199"
  },
  {
    "text": "the right path you get the right doj cluster and the redirection we we go into that into details later",
    "start": "863199",
    "end": "869720"
  },
  {
    "text": "um this is automatic basically so you reach the right chart where the logic cluster is",
    "start": "869720",
    "end": "875560"
  },
  {
    "text": "stored this is all nice um we have many logical clusters but we want certain",
    "start": "875560",
    "end": "881480"
  },
  {
    "text": "logic which makes logic clusters to interact so we want to fill this void",
    "start": "881480",
    "end": "886800"
  },
  {
    "text": "with certain Primitives um which kubernetes doesn't need but here they they make a lot of",
    "start": "886800",
    "end": "892839"
  },
  {
    "text": "sense there there are two two major ones one are workspaces and we show them",
    "start": "892839",
    "end": "898079"
  },
  {
    "text": "later on the they're optional you don't have to use them so you can use kcp just with logical clusters it's all fine but",
    "start": "898079",
    "end": "904639"
  },
  {
    "text": "workspaces are very convenient and we show uh it in a second how this works and there's a second bucket it's about",
    "start": "904639",
    "end": "910320"
  },
  {
    "text": "apis so we support cads but we also have a concept of API exports API bindings",
    "start": "910320",
    "end": "916720"
  },
  {
    "text": "more powerful it's multi logical cluster so you can basically um export something from one one cluster and bind from other",
    "start": "916720",
    "end": "924480"
  },
  {
    "text": "clusters to that API this is not the topic of today there are some Talks on YouTube you can um Google for them um we",
    "start": "924480",
    "end": "931160"
  },
  {
    "text": "will more focus on the workspace part and some other components of kubernetes today all right so um workspaces and the",
    "start": "931160",
    "end": "939560"
  },
  {
    "text": "inspiration of workspaces um more or less comes from yeah file systems um",
    "start": "939560",
    "end": "945120"
  },
  {
    "text": "everybody will know Linux file systems you can use your shell and you can walk around some hierarchy of directories",
    "start": "945120",
    "end": "950720"
  },
  {
    "text": "right and um behind the scenes the Lin kernel has a concept of an iode an iode",
    "start": "950720",
    "end": "956440"
  },
  {
    "text": "is something it's a data structure which is stored uh in the in the hard disk or",
    "start": "956440",
    "end": "962120"
  },
  {
    "text": "SSD or something and it tells the cluster uh it tells the kernel that there is real data right can be a",
    "start": "962120",
    "end": "968399"
  },
  {
    "text": "directory it can be a file and I not this metadata basically to describe what the actual data is which is stored",
    "start": "968399",
    "end": "974040"
  },
  {
    "text": "behind it and the same idea we have in kcp basically we have a logical cluster",
    "start": "974040",
    "end": "980399"
  },
  {
    "text": "object so it's a kind logical cluster and in the moment you put that at the",
    "start": "980399",
    "end": "986519"
  },
  {
    "text": "right slice of ETD with right prefix this slice exists as logic cluster",
    "start": "986519",
    "end": "993560"
  },
  {
    "text": "logically through kcp so it will start things like garbage collection and quter in the moment the logic cluster object",
    "start": "993560",
    "end": "999680"
  },
  {
    "text": "exists so it's very similar to an i note right it gives the kernel the kcp kernel",
    "start": "999680",
    "end": "1004959"
  },
  {
    "text": "this information here is something which is a cluster okay so um that's a cluster it's",
    "start": "1004959",
    "end": "1011040"
  },
  {
    "text": "an i note and the second concept is a workspace so you can put workspaces into",
    "start": "1011040",
    "end": "1018399"
  },
  {
    "text": "such a L cluster and with that you basically connect uh yeah those log clusters so",
    "start": "1018399",
    "end": "1025079"
  },
  {
    "text": "you say for example so we start at root there's one cluster called root and we put a workspace a object into that and",
    "start": "1025079",
    "end": "1032720"
  },
  {
    "text": "it's very similar to a directory ENT entry basically and this one points to another virtual uh logical cluster here",
    "start": "1032720",
    "end": "1040438"
  },
  {
    "text": "so basically we have now a hierarchy of of workspaces so it's root and we use a colon um to um separate those components",
    "start": "1040439",
    "end": "1048960"
  },
  {
    "text": "so root colon a is another logic cluster and you can askest them you can have root colon a colon c so basically we",
    "start": "1048960",
    "end": "1056880"
  },
  {
    "text": "replicate what Linux or any any other operating system what operating system does with with f systems and um what you",
    "start": "1056880",
    "end": "1065160"
  },
  {
    "text": "also see here on the left you have a path which you can use to access a logical cluster so you can use this",
    "start": "1065160",
    "end": "1071360"
  },
  {
    "text": "logical thing called root colon a colon c in your Cube uh cutle in your Cube",
    "start": "1071360",
    "end": "1077000"
  },
  {
    "text": "config and talk to that but you can also use the logical cluster name it's the same thing the system knows both um",
    "start": "1077000",
    "end": "1083360"
  },
  {
    "text": "identifiers basically to access it and every ly cluster again this comes",
    "start": "1083360",
    "end": "1089440"
  },
  {
    "text": "back now to the generic control plan can have objects like config Maps cluster roads but they only act by default in",
    "start": "1089440",
    "end": "1096840"
  },
  {
    "text": "one of those cluster um buckets or in those",
    "start": "1096840",
    "end": "1101120"
  },
  {
    "text": "boxes all right um how does it look like I mean this is not really kcp core but it's it's a convenient extension there's",
    "start": "1102280",
    "end": "1108520"
  },
  {
    "text": "a um a plugin for cube cutle ws and here's a higher key we have seen there",
    "start": "1108520",
    "end": "1113559"
  },
  {
    "text": "are some more workspaces which we use for demo later and you can look at the L",
    "start": "1113559",
    "end": "1119080"
  },
  {
    "text": "cluster object it's always called cluster so it always the same name but um the the prefix at CD is different and",
    "start": "1119080",
    "end": "1125880"
  },
  {
    "text": "you can go into a and you can again look on this object it always exists and um",
    "start": "1125880",
    "end": "1131520"
  },
  {
    "text": "yeah basically yeah you see the reference what how they are connected all right so wait a minute if",
    "start": "1131520",
    "end": "1138400"
  },
  {
    "text": "we took this from the Linux file system one thing which I really like in Linux",
    "start": "1138400",
    "end": "1143600"
  },
  {
    "text": "is ability to mount things like fuse fs and Fs like basically create this links",
    "start": "1143600",
    "end": "1149880"
  },
  {
    "text": "like does how does does this work in KP anyway yeah it's it works we have a",
    "start": "1149880",
    "end": "1155559"
  },
  {
    "text": "prototype for that and it looks pretty pretty nice so the idea is um what can you",
    "start": "1155559",
    "end": "1161720"
  },
  {
    "text": "mount I mean um you can mount clusters right you can mount other workspaces but",
    "start": "1161720",
    "end": "1167000"
  },
  {
    "text": "maybe also kubernetes clusters so imagine you have this hierarchy and people work in that and then they can m",
    "start": "1167000",
    "end": "1172400"
  },
  {
    "text": "in their communi cluster and when they use this shell like Cube cutle WS like a",
    "start": "1172400",
    "end": "1179080"
  },
  {
    "text": "CD in in the Shell basically and move around the hierarchy they can enter a cube cluster and they can say Cube cutle",
    "start": "1179080",
    "end": "1185400"
  },
  {
    "text": "WS dot dot to leave it again to be the hierarchy in the parent again so Cube",
    "start": "1185400",
    "end": "1190679"
  },
  {
    "text": "clusters are a thing but what about V clusters you could maybe Mount V clusters you could build a v cluster",
    "start": "1190679",
    "end": "1197360"
  },
  {
    "text": "service so imagine um there's a command Cube cutle create V cluster you call it",
    "start": "1197360",
    "end": "1203760"
  },
  {
    "text": "B and then you just say basically WSB like you enter it uh it's part of the",
    "start": "1203760",
    "end": "1210240"
  },
  {
    "text": "hierarchy when it deleted again it's gone right but in the moment you enter it you can deploy components you can",
    "start": "1210240",
    "end": "1217080"
  },
  {
    "text": "deploy um any Cube workloads because it's a cluster and it doesn't matter for CU CLE what it is it's in a high key but",
    "start": "1217080",
    "end": "1223760"
  },
  {
    "text": "actually it's a a real commun cluster or a virtual one in this case",
    "start": "1223760",
    "end": "1230000"
  },
  {
    "text": "yeah how does this work um I mentioned before there is a redirection from this SL cluster URL with either an ID or a",
    "start": "1232440",
    "end": "1240400"
  },
  {
    "text": "path to the right chart right and what we did we basically added support for",
    "start": "1240400",
    "end": "1246000"
  },
  {
    "text": "mounts so um it doesn't have to be a chart which serves the data of a br space it can be something else can be a",
    "start": "1246000",
    "end": "1252919"
  },
  {
    "text": "proxy which serves or redirects basically requests into a cube cluster or into a v cluster or any else there",
    "start": "1252919",
    "end": "1259159"
  },
  {
    "text": "can be many many use cases for that and that's how it looks like so we",
    "start": "1259159",
    "end": "1264400"
  },
  {
    "text": "have a workspace object in in in Casp and we have that for quite some time and as an experiment we added um a type so",
    "start": "1264400",
    "end": "1272039"
  },
  {
    "text": "the old um only type was logical cluster but now we add a mount and if you choose",
    "start": "1272039",
    "end": "1277600"
  },
  {
    "text": "the mount type you can specify another resource the V cluster resource and the V cluster resource is served by a",
    "start": "1277600",
    "end": "1284279"
  },
  {
    "text": "controller so this is an extension Point basically for any kind of mounts it's not hardcoded kcp doesn't know anything",
    "start": "1284279",
    "end": "1290679"
  },
  {
    "text": "about V clusters it just knows about mounts like the lus kernel knows about mounts and um in Linux you have fuse as",
    "start": "1290679",
    "end": "1299000"
  },
  {
    "text": "a um user mode mounting mechanism and this is basically very similar you have",
    "start": "1299000",
    "end": "1304159"
  },
  {
    "text": "a controller which um publishes a URL where this V cluster actually lives and the front proxy is a proxy component in",
    "start": "1304159",
    "end": "1311200"
  },
  {
    "text": "front of kcp which is deployed anyway um and every installation of kcp this forward then to this URL",
    "start": "1311200",
    "end": "1319760"
  },
  {
    "text": "cool so we have 13 minutes left so let's speed up a bit if it was not fast enough already so how does it look like in",
    "start": "1319760",
    "end": "1327559"
  },
  {
    "text": "experience way so same structure we had before just in this case b is a mounted",
    "start": "1327559",
    "end": "1333279"
  },
  {
    "text": "cluster so if I go CD into that I check API resources now I'm in the cluster in",
    "start": "1333279",
    "end": "1340000"
  },
  {
    "text": "remote cluster so experience it's a seamless you just CD somewhere and you get out if you go back and in this case",
    "start": "1340000",
    "end": "1348240"
  },
  {
    "text": "you get get Cube cluster Cube cluster is where V cluster was in a previous example basically crd implementing them",
    "start": "1348240",
    "end": "1355039"
  },
  {
    "text": "out it's like a fuse for the for the implementation and if you try to get a",
    "start": "1355039",
    "end": "1361440"
  },
  {
    "text": "workspace object for now it's in annotations an experimental annotation",
    "start": "1361440",
    "end": "1366799"
  },
  {
    "text": "where you specify kind and after that kcp will handle all the machinery and",
    "start": "1366799",
    "end": "1372520"
  },
  {
    "text": "mount things where it needs to mount and just thought experiment what",
    "start": "1372520",
    "end": "1378720"
  },
  {
    "text": "if you can just do K CU C create V cluster create cluster and it will",
    "start": "1378720",
    "end": "1384440"
  },
  {
    "text": "handle everything for you so we're just going to leave this hanging here so",
    "start": "1384440",
    "end": "1389919"
  },
  {
    "text": "recap we basically created this extension point to the existing system basically where you can hook up your",
    "start": "1389919",
    "end": "1396400"
  },
  {
    "text": "existing compute infrastructure into kcp and start playing with",
    "start": "1396400",
    "end": "1401520"
  },
  {
    "text": "apis so now we're going to jump a bit into the deep dive the specific components and one of the first ones",
    "start": "1401520",
    "end": "1407840"
  },
  {
    "text": "we're going to do is a front proxy so front proxy for those who thinker with engine X control an example in",
    "start": "1407840",
    "end": "1414120"
  },
  {
    "text": "kubernetes they know that if you go into the Pod the Pod knows every the engine x",
    "start": "1414120",
    "end": "1419640"
  },
  {
    "text": "controller knows every pod which needs to send traffic it needs a it knows the IP address it know where the Pod is so",
    "start": "1419640",
    "end": "1426120"
  },
  {
    "text": "it can root the traffic there so if the Pod moves the nodes and jyx controller gets updated information so front proxy",
    "start": "1426120",
    "end": "1433200"
  },
  {
    "text": "in kcp is there something similar for for basically kcp so what it has it has",
    "start": "1433200",
    "end": "1439240"
  },
  {
    "text": "this indexes graphs of every Shard workspace uh logical cluster or mounts",
    "start": "1439240",
    "end": "1447360"
  },
  {
    "text": "available in the system so when the request hits with a request path which already covered like cluster logical",
    "start": "1447360",
    "end": "1454159"
  },
  {
    "text": "name or something it goes through this index as like okay where this workspace sits this workspace sits in kcp2 and it",
    "start": "1454159",
    "end": "1462080"
  },
  {
    "text": "forwards the request where it needs to go and if it's a mount Point mounted somewhere it can send it somewhere",
    "start": "1462080",
    "end": "1469000"
  },
  {
    "text": "so it's very simple simply elegantly implemented it basically does same same thing what engine does in your CU",
    "start": "1469000",
    "end": "1475440"
  },
  {
    "text": "cluster but for for basically kcp yeah another component is uh yeah",
    "start": "1475440",
    "end": "1484000"
  },
  {
    "text": "it's a cash server we call that so there's a cach involved and it sits in the middle of charts um there can be",
    "start": "1484000",
    "end": "1489919"
  },
  {
    "text": "many of them doesn't matter here we we have drawn one um if those charts share",
    "start": "1489919",
    "end": "1495799"
  },
  {
    "text": "information or they have apis which somehow inter act between two different charts so I mentioned exports and",
    "start": "1495799",
    "end": "1501399"
  },
  {
    "text": "bindings right you could export from one chart and bind from another then The Binding chart has to know about the",
    "start": "1501399",
    "end": "1506520"
  },
  {
    "text": "export right but it doesn't know it usually because it cannot access the other chart it doesn't even know about it maybe so the C server is basically",
    "start": "1506520",
    "end": "1513840"
  },
  {
    "text": "this intermediate thing where the exporting chart exports publishes basically this object here is an API",
    "start": "1513840",
    "end": "1520600"
  },
  {
    "text": "export the world should know about it and The Binding sees that and The",
    "start": "1520600",
    "end": "1525880"
  },
  {
    "text": "Binding controller can basically consume this API export and this caching server",
    "start": "1525880",
    "end": "1531080"
  },
  {
    "text": "um yeah basically has a has a complete picture about those objects which are important for cross chart um logic so",
    "start": "1531080",
    "end": "1539240"
  },
  {
    "text": "it's eventually consistent it's publishing right So eventually the state will change and it will be published and",
    "start": "1539240",
    "end": "1544399"
  },
  {
    "text": "seen by another chart and um yeah it's eventually consistent it has limited size so what",
    "start": "1544399",
    "end": "1551520"
  },
  {
    "text": "we have implemented today this um this caching server is based on ETD but it doesn't really have to be one could imag",
    "start": "1551520",
    "end": "1558320"
  },
  {
    "text": "imagine some distributed database behind doesn't really matter um we make use of the informa interface so we use watches",
    "start": "1558320",
    "end": "1564880"
  },
  {
    "text": "and this the normal infrastructure from kubernetes to ask the cach server whether it knows about an object so we",
    "start": "1564880",
    "end": "1571440"
  },
  {
    "text": "yeah it's convenient basically to make it an API server itself but technically it doesn't have to be and um they're not",
    "start": "1571440",
    "end": "1578799"
  },
  {
    "text": "only exports when you want to buy to an apia you have to authorize yourself right so for example certain airb",
    "start": "1578799",
    "end": "1585200"
  },
  {
    "text": "objects like roles whole bindings are important to authorized and The Binding chart should do the authorization not",
    "start": "1585200",
    "end": "1591880"
  },
  {
    "text": "the other one so we also export or publish some of the airb objects for example but super sparely so we we",
    "start": "1591880",
    "end": "1599240"
  },
  {
    "text": "basically take the subset of objects airb objects to allow authorization and there can be more like",
    "start": "1599240",
    "end": "1605960"
  },
  {
    "text": "admission for example admission vook definitions these kind of things so it's eventually consistent what does it mean",
    "start": "1605960",
    "end": "1612360"
  },
  {
    "text": "eventually consistent yeah we can go one step further with this architecture The Binding Bing chart does",
    "start": "1612360",
    "end": "1618960"
  },
  {
    "text": "not talk to the exporting chart so this means if the exporting chart goes down I don't care right The Binding chart can",
    "start": "1618960",
    "end": "1624840"
  },
  {
    "text": "do its work as long as a cach server has the data it needs and what we can do we",
    "start": "1624840",
    "end": "1630120"
  },
  {
    "text": "can basically deploy kcp um in different regions without um breaking the",
    "start": "1630120",
    "end": "1636399"
  },
  {
    "text": "resilience of the system so we could have one um yeah one region in the US for example have a couple of front boxes",
    "start": "1636399",
    "end": "1643080"
  },
  {
    "text": "couple of shards and another one in Europe in Germany in frankurt or um same thing and um there will be two cash",
    "start": "1643080",
    "end": "1649200"
  },
  {
    "text": "servers and they replicate This Global State eventually consistent and if",
    "start": "1649200",
    "end": "1654440"
  },
  {
    "text": "there's Network split because Us West one goes down or something or network doesn't work the European side can still",
    "start": "1654440",
    "end": "1660679"
  },
  {
    "text": "work and um conversely so this is not an anti pattern to deploy kcp globally so it's",
    "start": "1660679",
    "end": "1667880"
  },
  {
    "text": "different than kubernetes this is really Built For This use case cool so one of the last things we cover now is a bit",
    "start": "1667880",
    "end": "1675120"
  },
  {
    "text": "how do you program against it how do you interact with these things so most of you know controller R time",
    "start": "1675120",
    "end": "1681440"
  },
  {
    "text": "it's a well-known FR framewor pattern to write controllers and nothing different",
    "start": "1681440",
    "end": "1686880"
  },
  {
    "text": "we have a a own Branch a own for for that because it's a cluster aware but so",
    "start": "1686880",
    "end": "1692519"
  },
  {
    "text": "what you do you instantiate cluster aware manager you point to the global kcp end point and the only difference is",
    "start": "1692519",
    "end": "1699960"
  },
  {
    "text": "that in the request we usually get name and name space identifying the object you get additional field cluster name",
    "start": "1699960",
    "end": "1707000"
  },
  {
    "text": "which is a logical cluster name you set it as a context with a Helper and you",
    "start": "1707000",
    "end": "1712279"
  },
  {
    "text": "pass it to dami client and everything else will be sorted under hood by the Machinery means if you already have a",
    "start": "1712279",
    "end": "1718799"
  },
  {
    "text": "control controller operator written with controller runtime it's very easy to convert it to Cluster aware pattern",
    "start": "1718799",
    "end": "1727000"
  },
  {
    "text": "basically and but of course you can always run any controller against a",
    "start": "1727000",
    "end": "1732080"
  },
  {
    "text": "signal cluster it's cute it's compatible this is really just for the case you want one controller for all logic",
    "start": "1732080",
    "end": "1738640"
  },
  {
    "text": "clusters on the chart cool yeah so this was one chart um",
    "start": "1738640",
    "end": "1744320"
  },
  {
    "text": "what about mve charts uh the solution is simple first of all you might need the",
    "start": "1744320",
    "end": "1751720"
  },
  {
    "text": "cash server right I I showed the cash server as a component many apis many controllers don't need that so for most",
    "start": "1751720",
    "end": "1757960"
  },
  {
    "text": "of them this is just not needed but in case you need that like the API binding controller in kcp itself this has to",
    "start": "1757960",
    "end": "1764159"
  },
  {
    "text": "know about the exports and what it does it has another cach basically a cach in",
    "start": "1764159",
    "end": "1769679"
  },
  {
    "text": "the sense of controller runtime so it's a cach object so it talks to another endpoint the cach server so and um",
    "start": "1769679",
    "end": "1776720"
  },
  {
    "text": "behind the c are informers Cube informers nothing special and they know about those globally known objects like",
    "start": "1776720",
    "end": "1784240"
  },
  {
    "text": "in this case the exports so imagine this is the export The Binding controller then The Binding controller will first",
    "start": "1784240",
    "end": "1790039"
  },
  {
    "text": "check the local manager do you know this export which The Binding points to and",
    "start": "1790039",
    "end": "1795440"
  },
  {
    "text": "if the export is local on the same chart then this just succeeds right and everything proceeds but if it's not not",
    "start": "1795440",
    "end": "1801880"
  },
  {
    "text": "found error then um you have a second chance you look into the cach server in formers check whether there is an export",
    "start": "1801880",
    "end": "1808120"
  },
  {
    "text": "and if if it is you proceed if it's not then it's just not known and you have to set some condition or so in a in a an",
    "start": "1808120",
    "end": "1814200"
  },
  {
    "text": "API Bing that's a pattern so it's not super complex but it allows basically multi sharding multi sharded",
    "start": "1814200",
    "end": "1822600"
  },
  {
    "text": "controllers if you have multiple charts it's typical and this is a restriction of our controller runtime variant at the",
    "start": "1823279",
    "end": "1829919"
  },
  {
    "text": "moment that you run one manager per shot and the manager handles all Lo clusters",
    "start": "1829919",
    "end": "1836440"
  },
  {
    "text": "but you have multiple of them and there are URLs you have to talk to in the example of the export you get those in a",
    "start": "1836440",
    "end": "1841880"
  },
  {
    "text": "list and you have two cues two managers and um they do the work in the moment",
    "start": "1841880",
    "end": "1847000"
  },
  {
    "text": "there's a new shot coming up you start a new one but this is a restriction of um",
    "start": "1847000",
    "end": "1852240"
  },
  {
    "text": "of controller R time so what's important here is if you now writing a controller",
    "start": "1852240",
    "end": "1857639"
  },
  {
    "text": "r operator and you want to talk to five clusters because you don't want to run five instances of controller and time",
    "start": "1857639",
    "end": "1863840"
  },
  {
    "text": "you have the same problem so there is a Upstream effort controller runtime to make it generic so controller runtime",
    "start": "1863840",
    "end": "1870399"
  },
  {
    "text": "knows how to talk to multiple clusters so we resuming this work now and basically this this is not a new problem",
    "start": "1870399",
    "end": "1877440"
  },
  {
    "text": "basically here cool second 3 minutes to go and second demo let's see how it goes",
    "start": "1877440",
    "end": "1882720"
  },
  {
    "text": "now so let me cancel existing Demo First",
    "start": "1882720",
    "end": "1888519"
  },
  {
    "text": "so I'm starting here a kcp instance it's a vanilla kcp instance which is now",
    "start": "1888519",
    "end": "1897120"
  },
  {
    "text": "failing this is why you prepare a recording for this stuff if we would have more time I would",
    "start": "1901399",
    "end": "1909919"
  },
  {
    "text": "try to fix it but now no so what we have here is like on the",
    "start": "1909919",
    "end": "1915320"
  },
  {
    "text": "bottom I have a kind cluster Simple Kind cluster nothing",
    "start": "1915320",
    "end": "1921080"
  },
  {
    "text": "more nothing else and I have a workspace kind cluster that",
    "start": "1921080",
    "end": "1926679"
  },
  {
    "text": "that workspace is a mounted it's a mount so let's check the global",
    "start": "1926679",
    "end": "1932480"
  },
  {
    "text": "structure of all tree so let's go to this consumer workspace check again",
    "start": "1932480",
    "end": "1939880"
  },
  {
    "text": "workspaces kind cluster use it and if we",
    "start": "1939880",
    "end": "1945240"
  },
  {
    "text": "check what's inside it's the same cluster as in a bottom I'm just interacting it through the kcp through",
    "start": "1945240",
    "end": "1950919"
  },
  {
    "text": "the mount point and we can see there is a as shown in the pictures before it's a",
    "start": "1950919",
    "end": "1957200"
  },
  {
    "text": "representation of Mount point a cube cluster but what if we can do something more so I'm in a top window I'm creating",
    "start": "1957200",
    "end": "1964760"
  },
  {
    "text": "a b cluster object so it's a SE different implementation let's say Cube cluster is",
    "start": "1964760",
    "end": "1971399"
  },
  {
    "text": "NFS I'm creating B cluster which is fuse basically so what happens now in the",
    "start": "1971399",
    "end": "1978679"
  },
  {
    "text": "bottom you would see that once I created that object the B cluster is being",
    "start": "1978679",
    "end": "1984600"
  },
  {
    "text": "provisioned in the kind cluster the important not is there is no operator running in a cluster which manages V",
    "start": "1984600",
    "end": "1991000"
  },
  {
    "text": "clusters it's a operator lless cluster so basically what we have we have",
    "start": "1991000",
    "end": "1997200"
  },
  {
    "text": "operator runs pointing to the kcp and goes and Provisions components into the",
    "start": "1997200",
    "end": "2002919"
  },
  {
    "text": "multiple potential multiple clusters so in this case once it gets",
    "start": "2002919",
    "end": "2009000"
  },
  {
    "text": "provisioned I created like workspace here you go into the workspace you can",
    "start": "2009000",
    "end": "2014600"
  },
  {
    "text": "get logical cluster logical cluster is there because at this point it acts as a normal workspace so what we need to do",
    "start": "2014600",
    "end": "2022039"
  },
  {
    "text": "we need to like not uh I think at that point I was thinking",
    "start": "2022039",
    "end": "2028120"
  },
  {
    "text": "I'm being smart leaving comments in the demo recording but yeah so yeah it's a it's a not a cluster",
    "start": "2028120",
    "end": "2034840"
  },
  {
    "text": "it acts as an empty directory in Linux file system which you want to mount something on top so now we mounting so we annotating",
    "start": "2034840",
    "end": "2043279"
  },
  {
    "text": "that workspace telling you hey workspace this is a b cluster object which mounts",
    "start": "2043279",
    "end": "2048280"
  },
  {
    "text": "it so now if I go into the same teams one workspace I see now it's a basically",
    "start": "2048280",
    "end": "2054599"
  },
  {
    "text": "a v cluster inside of our cluster so it shows that you can mix and",
    "start": "2054599",
    "end": "2060720"
  },
  {
    "text": "match different ways of mounting components like one kind cluster mounts",
    "start": "2060720",
    "end": "2065839"
  },
  {
    "text": "whole cluster another not only mounts but goes and Provisions something and",
    "start": "2065839",
    "end": "2070960"
  },
  {
    "text": "mounts it too so we can create this as a service itself and you can create the",
    "start": "2070960",
    "end": "2076480"
  },
  {
    "text": "name spaces like do whatever you want to do as you would do in a normal",
    "start": "2076480",
    "end": "2082078"
  },
  {
    "text": "cluster cool and if you delete those basically that's get deleted so thinking",
    "start": "2083720",
    "end": "2089158"
  },
  {
    "text": "ahead one could create a system where the developers could request B clusters",
    "start": "2089159",
    "end": "2094800"
  },
  {
    "text": "dynamically from the existing pool of compute and things like that so live",
    "start": "2094800",
    "end": "2100200"
  },
  {
    "text": "demo failed some expected sometimes yeah very very quickly so this is one way to",
    "start": "2100200",
    "end": "2106720"
  },
  {
    "text": "add compute back into uh kcp there was something called TMC transpar multicluster don't confuse that if you",
    "start": "2106720",
    "end": "2113839"
  },
  {
    "text": "watch old YouTube recordings there might be TMC and it's often shown as part of",
    "start": "2113839",
    "end": "2119119"
  },
  {
    "text": "kcp we moved it out um moved it into its own repository in the kcp def orc TMC is",
    "start": "2119119",
    "end": "2125800"
  },
  {
    "text": "not part of that those are ways to re compute different services on top so",
    "start": "2125800",
    "end": "2131640"
  },
  {
    "text": "compute in kcp is always something on top it's never in the core kcp core does not compute like it's always about apis",
    "start": "2131640",
    "end": "2138640"
  },
  {
    "text": "it's a framework to build something some service if you want compute choose either mounts continue TMC build your",
    "start": "2138640",
    "end": "2145920"
  },
  {
    "text": "own thing doesn't matter and of course there can be more things in V cluster Cube gardeners one example namespace as",
    "start": "2145920",
    "end": "2152640"
  },
  {
    "text": "a service could be built obviously many many things all right thank you",
    "start": "2152640",
    "end": "2159640"
  },
  {
    "text": "Co just a uh short out there two more talks um James uh from from Apple uh",
    "start": "2162800",
    "end": "2169319"
  },
  {
    "text": "shows work which is related in thisp and the last thing is uh yeah on Friday",
    "start": "2169319",
    "end": "2175839"
  },
  {
    "text": "Nvidia showing an integration with slurm so AI area also kcp and Q based um",
    "start": "2175839",
    "end": "2182640"
  },
  {
    "text": "yeah so I don't think we have a time for questions so if you want to talk with us",
    "start": "2182640",
    "end": "2187960"
  },
  {
    "text": "just after this we will be at a project Pavilion CK 2A so we will be hanging out",
    "start": "2187960",
    "end": "2194240"
  },
  {
    "text": "there until evening so if you bring soft drinks hard drinks bring one for us too",
    "start": "2194240",
    "end": "2200280"
  },
  {
    "text": "and let's have a chat and you can find us on Twitter GitHub",
    "start": "2200280",
    "end": "2206200"
  }
]