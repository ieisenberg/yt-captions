[
  {
    "text": "so welcome everyone I know we are kind of at towards the end of cucon so I hope",
    "start": "80",
    "end": "5160"
  },
  {
    "text": "everyone had a great cubec con uh super excited to be presenting at my first ever like in-person cubec con outside of",
    "start": "5160",
    "end": "12960"
  },
  {
    "text": "the collocated event so uh super excited for that and super also excited to introduce the webm working group to the",
    "start": "12960",
    "end": "19720"
  },
  {
    "text": "masses um for today's talk so if all of you are interested in learning more",
    "start": "19720",
    "end": "25359"
  },
  {
    "text": "about web assembly or are working in a cloud native uh startup or in a project",
    "start": "25359",
    "end": "31199"
  },
  {
    "text": "and are looking at ways in which you could in like you know introduce web assembly uh or just curious about",
    "start": "31199",
    "end": "36960"
  },
  {
    "text": "webassembly in general uh this talk will be cated for all of you and will be helpful and hopefully by the end uh",
    "start": "36960",
    "end": "43480"
  },
  {
    "text": "you'll be motivated enough to join the working group and like just help you",
    "start": "43480",
    "end": "49199"
  },
  {
    "text": "know increase the adoption of web assembly so I'm Shai I'm a developer relations in at M search and with me we",
    "start": "49199",
    "end": "55280"
  },
  {
    "text": "have Kevin who is a director of engineering at s India over to you sure all right so",
    "start": "55280",
    "end": "62359"
  },
  {
    "text": "let's it's uh last day of cubec con 2:00 in the afternoon everybody's in a food",
    "start": "62359",
    "end": "69040"
  },
  {
    "text": "coma so uh who wants to see some really cool demos yeah we have none of those so",
    "start": "69040",
    "end": "76159"
  },
  {
    "text": "uh the agenda here basically what I want to do is cover what web assembly is why",
    "start": "76159",
    "end": "81960"
  },
  {
    "text": "we should care about it um what it has to do with the cloud and then we'll get into the cncf uh web",
    "start": "81960",
    "end": "90479"
  },
  {
    "text": "assembly working group and you know some of the things that we'd like you to do to help out and",
    "start": "90479",
    "end": "97560"
  },
  {
    "text": "contribute so actually before I get into there did did anybody attend the",
    "start": "97560",
    "end": "103360"
  },
  {
    "text": "collocated web assembly event earlier this week okay uh who here has deployed web",
    "start": "103360",
    "end": "111200"
  },
  {
    "text": "assembly somewhere not on a browser okay well you don't",
    "start": "111200",
    "end": "118119"
  },
  {
    "text": "count all right so uh not too many so web assembly is a stack-based virtual",
    "start": "118119",
    "end": "126200"
  },
  {
    "text": "machine it is designed to be portable secure small and fast and uh",
    "start": "126200",
    "end": "134120"
  },
  {
    "text": "coincidentally those are pretty much the main criteria we have for deploying uh",
    "start": "134120",
    "end": "139360"
  },
  {
    "text": "applications in the cloud so when we say portable that means",
    "start": "139360",
    "end": "145440"
  },
  {
    "text": "that web assembly is CPU and Os agnostic it can't access the operating system the",
    "start": "145440",
    "end": "152480"
  },
  {
    "text": "kernel file system I'll explain the little red asterisk there later um you",
    "start": "152480",
    "end": "158280"
  },
  {
    "text": "can interpret the web assembly code or you can uh jit compile it into native",
    "start": "158280",
    "end": "164400"
  },
  {
    "text": "code it all depends on your needs uh web assembly modules are not supposed to be",
    "start": "164400",
    "end": "171519"
  },
  {
    "text": "used as uh shared libraries they're not a replacement for dlls Orso",
    "start": "171519",
    "end": "178440"
  },
  {
    "text": "files and uh at least for when you're building on Rust there are two different",
    "start": "178440",
    "end": "184000"
  },
  {
    "text": "uh Target types one for regular web assembly and one for wzy and I'll get into what wazzy is in a",
    "start": "184000",
    "end": "192599"
  },
  {
    "text": "minute so uh as far as security as I said that has no access to system",
    "start": "193000",
    "end": "199400"
  },
  {
    "text": "resources uh can't make CIS calls can't access files uh Colonel instructions IO",
    "start": "199400",
    "end": "205799"
  },
  {
    "text": "and again there's a little bit of an asterisk but um I'll cover that",
    "start": "205799",
    "end": "211439"
  },
  {
    "text": "you can't do things like uh create a buffer overrun inside a web assemly",
    "start": "211439",
    "end": "217959"
  },
  {
    "text": "module it's physically impossible based on the instruction set to tell a piece of code to jump to uh a non-code",
    "start": "217959",
    "end": "226799"
  },
  {
    "text": "instruction somewhere else and uh for those who've never had to try and",
    "start": "226799",
    "end": "232879"
  },
  {
    "text": "troubleshoot those things uh that that being something that isn't physically",
    "start": "232879",
    "end": "238200"
  },
  {
    "text": "possible uh is uh a tremendous weight off the shoulders you can use custom sections",
    "start": "238200",
    "end": "245840"
  },
  {
    "text": "inside the web assembly modules U basically they're just arbitrary piles of bites um but a number of the run",
    "start": "245840",
    "end": "253760"
  },
  {
    "text": "times including a couple that you'll that you'll see here at the cncf uh use those custom sections for",
    "start": "253760",
    "end": "260320"
  },
  {
    "text": "things like signatures and security metadata and the the host in a is the",
    "start": "260320",
    "end": "268800"
  },
  {
    "text": "thing that runs web assembly module so you probably know that the the browser",
    "start": "268800",
    "end": "273960"
  },
  {
    "text": "is a web assembly host but what we're here to talk about is uh Cloud native",
    "start": "273960",
    "end": "279639"
  },
  {
    "text": "runtimes being the hosts and those are the things that get to tell uh whether a",
    "start": "279639",
    "end": "287160"
  },
  {
    "text": "web assembly module has access to something or not and by default it has access to pretty much",
    "start": "287160",
    "end": "295240"
  },
  {
    "text": "nothing web assembly modules are tiny uh depending on the language that you're",
    "start": "295759",
    "end": "301400"
  },
  {
    "text": "using and what exactly you are doing inside that function uh some of them are",
    "start": "301400",
    "end": "309080"
  },
  {
    "text": "uh you know less than 64k uh wasm cloud is a uh one of the",
    "start": "309080",
    "end": "315080"
  },
  {
    "text": "cncf web assembly run times and you can generally deploy a service in under two",
    "start": "315080",
    "end": "320840"
  },
  {
    "text": "Megs uh using that framework and one of the interesting side effects of web assembly being small",
    "start": "320840",
    "end": "328400"
  },
  {
    "text": "is that the act of deploying it is no longer a",
    "start": "328400",
    "end": "333919"
  },
  {
    "text": "uh a big huge thing that happens once and then never again because they're so tiny you can deploy and redeploy them",
    "start": "333919",
    "end": "341319"
  },
  {
    "text": "over and over again and you can take them and move them from one place to another in order to optimize for compute",
    "start": "341319",
    "end": "349759"
  },
  {
    "text": "or uh proximity to data um anything anything you want",
    "start": "349759",
    "end": "356600"
  },
  {
    "text": "really uh the other thing that uh that workload size or lack of workload",
    "start": "356600",
    "end": "362919"
  },
  {
    "text": "size gives us is that you can cram a whole bunch of compute into a really",
    "start": "362919",
    "end": "368319"
  },
  {
    "text": "tiny space that makes web assembly modules ideal for running in embedded",
    "start": "368319",
    "end": "374919"
  },
  {
    "text": "environments on iot devices as Cloud functions or Edge",
    "start": "374919",
    "end": "381120"
  },
  {
    "text": "functions uh but you also can save a ton of money in terms of utilization when",
    "start": "381120",
    "end": "387800"
  },
  {
    "text": "you're deploying everything I realize this is a kubernetes conference but when you deploy",
    "start": "387800",
    "end": "393000"
  },
  {
    "text": "everything in kubernetes there's a you know a utilization penalty that",
    "start": "393000",
    "end": "399120"
  },
  {
    "text": "you pay for pushing everything out as Docker images there's always that you know some unused bit of that Docker",
    "start": "399120",
    "end": "406199"
  },
  {
    "text": "image and I've seen systems where that's upwards of 90%",
    "start": "406199",
    "end": "411360"
  },
  {
    "text": "unused U but with these web assembly modules uh you",
    "start": "411360",
    "end": "416440"
  },
  {
    "text": "can pack them in as densely as you want want and um try and maximize or optimize",
    "start": "416440",
    "end": "422840"
  },
  {
    "text": "for utilization so as I mentioned it's a",
    "start": "422840",
    "end": "428639"
  },
  {
    "text": "stack based virtual machine I'm not sure if that phrase actually means anything to anybody but uh in short what it",
    "start": "428639",
    "end": "436479"
  },
  {
    "text": "means is that it doesn't need to make as",
    "start": "436479",
    "end": "442319"
  },
  {
    "text": "many stops while it's interpreting the the code and one of the additional side",
    "start": "442319",
    "end": "448400"
  },
  {
    "text": "effects of the way that this particular stack-based virtual machine is written",
    "start": "448400",
    "end": "453479"
  },
  {
    "text": "is that it can start executing at the top of the module while the back of the module is still streaming in so uh in a",
    "start": "453479",
    "end": "463720"
  },
  {
    "text": "lot of coding environments you need the entire executable in order to start working on it but with web assembly you",
    "start": "463720",
    "end": "470280"
  },
  {
    "text": "can start at the first instruction and start moving forward while you're still streaming the rest of the file so that",
    "start": "470280",
    "end": "477159"
  },
  {
    "text": "uh is a a really interesting way to uh optimize your startup",
    "start": "477159",
    "end": "484599"
  },
  {
    "text": "speed uh like I said you can pause and resume these modules easily because",
    "start": "485319",
    "end": "491759"
  },
  {
    "text": "their their active memory is just a pile of bites so if you want to pause it",
    "start": "491759",
    "end": "497159"
  },
  {
    "text": "capture the bites resume it and just shove the bites back in so there are three main kinds of web",
    "start": "497159",
    "end": "507080"
  },
  {
    "text": "assembly that people are actively using today and it falls into three different",
    "start": "507080",
    "end": "513279"
  },
  {
    "text": "categories the first one is freestanding web assembly the other one the next one is",
    "start": "513279",
    "end": "519080"
  },
  {
    "text": "wazzy and the third one is components and freestanding web assembly",
    "start": "519080",
    "end": "525519"
  },
  {
    "text": "basically means that you have a web assembly module that has no",
    "start": "525519",
    "end": "531600"
  },
  {
    "text": "dependencies and doesn't import anything um you know anything esoteric that",
    "start": "531600",
    "end": "538120"
  },
  {
    "text": "requires things like uh JavaScript shims there are a pile of",
    "start": "538120",
    "end": "543399"
  },
  {
    "text": "demos out there showing web assembly doing all kinds of interesting things like running doom and all of",
    "start": "543399",
    "end": "551320"
  },
  {
    "text": "that those are tricks smok and mirrors done with JavaScript uh web assembly on its own",
    "start": "551320",
    "end": "558000"
  },
  {
    "text": "can't actually do those things but it's perfect for running workloads in the cloud Wazi and this is",
    "start": "558000",
    "end": "566040"
  },
  {
    "text": "where that red asteris comes in is a standardized set of imports that your",
    "start": "566040",
    "end": "573200"
  },
  {
    "text": "web assembly module can take and if the host runtime supports it uh it'll it",
    "start": "573200",
    "end": "580959"
  },
  {
    "text": "will provide an implementation for those Imports and uh Wazi gives you things",
    "start": "580959",
    "end": "587480"
  },
  {
    "text": "like being able to write to a file descriptor read from uh an environment",
    "start": "587480",
    "end": "593240"
  },
  {
    "text": "it's not the actual operating system environment it's a simulated one uh read and write to uh file system but again",
    "start": "593240",
    "end": "600640"
  },
  {
    "text": "it's an isolated sandboxed file system a lot one of the big mistakes",
    "start": "600640",
    "end": "606200"
  },
  {
    "text": "people make is thinking that well I can just take my existing application compile it as wazzy and then uh",
    "start": "606200",
    "end": "613079"
  },
  {
    "text": "everything will just magically work and sadly that's not actually the case um at",
    "start": "613079",
    "end": "620160"
  },
  {
    "text": "some point in the future that may be a more reasonable statement but right now even if you're using Wy the code",
    "start": "620160",
    "end": "628279"
  },
  {
    "text": "that you write needs to know that that's actually what you're doing you can't just sort of uh blindly write to the",
    "start": "628279",
    "end": "634640"
  },
  {
    "text": "network and hope that your wazzy module work will work properly and the third is",
    "start": "634640",
    "end": "642120"
  },
  {
    "text": "components and components um has anybody actually heard about web assembly",
    "start": "642120",
    "end": "647440"
  },
  {
    "text": "components I see you in the back um okay so the idea behind web",
    "start": "647440",
    "end": "652839"
  },
  {
    "text": "assembly components is that you already have these tiny little pieces of compute",
    "start": "652839",
    "end": "658639"
  },
  {
    "text": "that you put put your business logic in and they are secure and fast and uh you",
    "start": "658639",
    "end": "665480"
  },
  {
    "text": "want to be able to deploy those but if you can Define uh a the interface",
    "start": "665480",
    "end": "672959"
  },
  {
    "text": "between any two components with a standard schema language or description",
    "start": "672959",
    "end": "680680"
  },
  {
    "text": "language then you don't actually have to have these tightly coupled inter U these",
    "start": "680680",
    "end": "689040"
  },
  {
    "text": "tightly coupled dependencies between web assembly modules or even between the host so for example one of the things",
    "start": "689040",
    "end": "696120"
  },
  {
    "text": "that that we're trying to do with components is Define standards like uh",
    "start": "696120",
    "end": "701600"
  },
  {
    "text": "web server uh messaging or message broker key Value Store Object Store if",
    "start": "701600",
    "end": "708000"
  },
  {
    "text": "you build your web assembly component to those well- defined standards then in",
    "start": "708000",
    "end": "713240"
  },
  {
    "text": "theory you should just be able to pick up your web assembly component put it in one environment and it runs take it from",
    "start": "713240",
    "end": "719320"
  },
  {
    "text": "there and put it under another runtime and it still runs uh one of the demos that uh Bailey Hayes did during the web",
    "start": "719320",
    "end": "726440"
  },
  {
    "text": "assembly conference uh earlier this week showed just that it was a wasm cloud um",
    "start": "726440",
    "end": "733320"
  },
  {
    "text": "runtime and a firon run time and I think just running WM time from the command",
    "start": "733320",
    "end": "739680"
  },
  {
    "text": "line so all three of those worked and it was the same component that hadn't changed across all three of those",
    "start": "739680",
    "end": "746519"
  },
  {
    "text": "environments and it's the it it May finally be that right once Run Anywhere",
    "start": "746519",
    "end": "752519"
  },
  {
    "text": "promise that we were we were promised but uh not delivered on by you know that other",
    "start": "752519",
    "end": "761240"
  },
  {
    "text": "language so the web assembly landscape has grown quite a bit uh over the last I",
    "start": "761839",
    "end": "770240"
  },
  {
    "text": "don't even know how long the this thing has been uh tracking but I remember when",
    "start": "770240",
    "end": "775920"
  },
  {
    "text": "the there there was no landscape and uh people would laugh at me when I said",
    "start": "775920",
    "end": "781480"
  },
  {
    "text": "that web assembly was ideal for the cloud and so now we have a bunch of",
    "start": "781480",
    "end": "788760"
  },
  {
    "text": "different languages that support web assembly a bunch of different runtimes everything",
    "start": "788760",
    "end": "794040"
  },
  {
    "text": "from U like I said wasm Cloud uh there's feron runtime there's a bunch of",
    "start": "794040",
    "end": "799880"
  },
  {
    "text": "lowlevel runtimes there are ones that are optimized for being run on embedded",
    "start": "799880",
    "end": "805399"
  },
  {
    "text": "devices um the idea there is that as long as you're writing to these well-known standards you should just be",
    "start": "805399",
    "end": "811360"
  },
  {
    "text": "able to shop around and pick what whatever runtime is best suited to uh",
    "start": "811360",
    "end": "817279"
  },
  {
    "text": "your application needs and so what we want to do with this landscape is hopefully encourage",
    "start": "817279",
    "end": "824160"
  },
  {
    "text": "people to get involved and contribute and to help us reach uh that point in",
    "start": "824160",
    "end": "831759"
  },
  {
    "text": "the future where web assembly isn't uh this big heavy technology thing",
    "start": "831759",
    "end": "838800"
  },
  {
    "text": "thing that everybody needs to worry about it's an implementation detail it's a checkbox in the compiler and nobody",
    "start": "838800",
    "end": "844480"
  },
  {
    "text": "has to worry about it again so what I want to show real quick",
    "start": "844480",
    "end": "850639"
  },
  {
    "text": "I know I said I didn't have any good demos but I do actually have a demo so",
    "start": "850639",
    "end": "857360"
  },
  {
    "text": "um the first type of web assembly module that I talked about was this thing",
    "start": "857360",
    "end": "862759"
  },
  {
    "text": "called freestanding and I have a single function",
    "start": "862759",
    "end": "869800"
  },
  {
    "text": "um this is in Rust does anybody have does this uh syntax conf confusing",
    "start": "869800",
    "end": "877040"
  },
  {
    "text": "anybody or is it fairly straightforward it's it's just an add function I add two",
    "start": "877040",
    "end": "882079"
  },
  {
    "text": "numbers and return them and there's a little tag on here called No mangle all that really does is",
    "start": "882079",
    "end": "890680"
  },
  {
    "text": "tell the compiler to export the this function so theoretically if I do",
    "start": "890680",
    "end": "900680"
  },
  {
    "text": "uh I'm going to do this without a cheat sheet we'll see how well that",
    "start": "901440",
    "end": "906120"
  },
  {
    "text": "works did I do that in wrong",
    "start": "914639",
    "end": "918440"
  },
  {
    "text": "order there we go so WM time's going to yell at me because I'm doing something that",
    "start": "927600",
    "end": "933720"
  },
  {
    "text": "they don't plan on supporting but way down at the bottom you can see that I've exercised this machine's massive compute",
    "start": "933720",
    "end": "940040"
  },
  {
    "text": "capacity to return 2 plus two but the interesting part isn't that",
    "start": "940040",
    "end": "945839"
  },
  {
    "text": "I'm I have a simple function the interesting part is that whatever this function did it's",
    "start": "945839",
    "end": "955279"
  },
  {
    "text": "portable and uh fast and efficient and I can take that module with no",
    "start": "955279",
    "end": "962040"
  },
  {
    "text": "dependencies no node modules directory nothing like that and it'll run anywhere",
    "start": "962040",
    "end": "968360"
  },
  {
    "text": "there's a suitable runtime uh let me see if I can show",
    "start": "968360",
    "end": "975160"
  },
  {
    "text": "the so if I were to strip all of the unused stuff off of this it comes in at",
    "start": "977800",
    "end": "985279"
  },
  {
    "text": "about 300K so there's",
    "start": "985279",
    "end": "990360"
  },
  {
    "text": "another um there's another type of web assembly",
    "start": "990360",
    "end": "996880"
  },
  {
    "text": "module where instead of exporting individual functions in what typically is called the library pattern you run",
    "start": "996880",
    "end": "1004880"
  },
  {
    "text": "your web assembly module as if it were U an executable so you just you run the",
    "start": "1004880",
    "end": "1012199"
  },
  {
    "text": "module and it invokes the start function in that module and then it runs to completion and",
    "start": "1012199",
    "end": "1019279"
  },
  {
    "text": "this is a pretty common pattern for things like web servers where you run the module in response to one",
    "start": "1019279",
    "end": "1026480"
  },
  {
    "text": "request um but there are countless other uses for it the main thing to remember",
    "start": "1026480",
    "end": "1032959"
  },
  {
    "text": "with these is that they are limited entirely by the host so if I run it and",
    "start": "1032959",
    "end": "1040400"
  },
  {
    "text": "tell and the host doesn't enable standard IO my application will have no Io if it doesn't enable file system",
    "start": "1040400",
    "end": "1046959"
  },
  {
    "text": "access my app has no file system",
    "start": "1046959",
    "end": "1051000"
  },
  {
    "text": "access so again this is an incredible demo that I'm sure you've never seen",
    "start": "1065280",
    "end": "1071039"
  },
  {
    "text": "anywhere before but what's interesting here is",
    "start": "1071039",
    "end": "1076280"
  },
  {
    "text": "that I've taken this web assembly module that that technically does not have operating system access or file access",
    "start": "1076280",
    "end": "1084480"
  },
  {
    "text": "or anything else and the runtime has granted it secure access to uh standard",
    "start": "1084480",
    "end": "1090760"
  },
  {
    "text": "iio pipe and so that allows me to do things like uh display",
    "start": "1090760",
    "end": "1096039"
  },
  {
    "text": "text um I had originally planned on showing a component demo but uh the",
    "start": "1096039",
    "end": "1104520"
  },
  {
    "text": "component model right now is in a pretty heavy state of flux uh there are breaking changes to the",
    "start": "1104520",
    "end": "1111919"
  },
  {
    "text": "contracts the code generators and the runtime almost on a weekly basis so",
    "start": "1111919",
    "end": "1119760"
  },
  {
    "text": "um long story short is I couldn't get the demo working so yeah I think that's pretty",
    "start": "1119760",
    "end": "1127000"
  },
  {
    "text": "much what I wanted to cover was just the basic introduction to what web assembly is and uh what it looks like to",
    "start": "1127000",
    "end": "1136120"
  },
  {
    "text": "use all right uh thanks Kevin for that amazing demo uh I know like what Kevin",
    "start": "1136320",
    "end": "1142200"
  },
  {
    "text": "mentioned is that uh we not we could not like make the curin model uh demo work but if you're interested just type",
    "start": "1142200",
    "end": "1148919"
  },
  {
    "text": "Bailey Haze uh we have had some amazing demos done by her she works at cosonic with qum Cloud as well uh so you can",
    "start": "1148919",
    "end": "1155840"
  },
  {
    "text": "look at some of the cosonic uh based or some of the web component component based model demos at cloud and vum conon",
    "start": "1155840",
    "end": "1162799"
  },
  {
    "text": "and vum IO uh but of course uh today we are kind of speaking about what exactly is the text for uh webs in Cloud so we",
    "start": "1162799",
    "end": "1170679"
  },
  {
    "text": "of course uh you probably might have heard this term that webs kind of started off as a browser technology but",
    "start": "1170679",
    "end": "1176280"
  },
  {
    "text": "we soon realized this entire idea of being able to this just run this web module anywhere in the cloud uh without",
    "start": "1176280",
    "end": "1183440"
  },
  {
    "text": "having to worry too much about system dependencies uh that meant that uh you can basically take care or you can",
    "start": "1183440",
    "end": "1189919"
  },
  {
    "text": "essentially use these webs models very efficiently in server side and the cloud ecosystem as well and according to a lot",
    "start": "1189919",
    "end": "1196480"
  },
  {
    "text": "of the recent surveys uh you'll actually see a lot of usage of web assembly outside the browser in server and",
    "start": "1196480",
    "end": "1203000"
  },
  {
    "text": "serverless and Cloud ecosystem and I think some of the biggest uh reasons where you'll actually see a lot of aom",
    "start": "1203000",
    "end": "1209600"
  },
  {
    "text": "usage is primarily on edge uh virtual machines communities so being able to",
    "start": "1209600",
    "end": "1214640"
  },
  {
    "text": "directly run uh web assembly modules uh in communities we'll be talking more about how that is being implemented and",
    "start": "1214640",
    "end": "1221240"
  },
  {
    "text": "of course if you are coming in from a traditional Cuban background being at cucon uh how you can leverage uh webs Le",
    "start": "1221240",
    "end": "1228559"
  },
  {
    "text": "and also of like talking about uh workload orchestrators as well uh so of course like we'll like to officially",
    "start": "1228559",
    "end": "1234559"
  },
  {
    "text": "introduce the web simly working group uh at so of course uh there is there has",
    "start": "1234559",
    "end": "1239679"
  },
  {
    "text": "been this web simly working group that comes as part of the w3c so if you're not aware it primary deals with the",
    "start": "1239679",
    "end": "1246360"
  },
  {
    "text": "standards of the web because of course web assembly started off as a browser technology back in 2018 uh with MOA",
    "start": "1246360",
    "end": "1252840"
  },
  {
    "text": "folks uh so there is a dedicated webs working group but that kind of deals more in general with the web assembly",
    "start": "1252840",
    "end": "1259000"
  },
  {
    "text": "standards and how it's like kind of operates in the web uh but of course uh this web assembly working group within",
    "start": "1259000",
    "end": "1264640"
  },
  {
    "text": "the cncf is more dedicated towards uh web assembly and its adoption in cloud",
    "start": "1264640",
    "end": "1270240"
  },
  {
    "text": "and in the cloud cloud native ecosystem uh so it comes under the tag runtime so",
    "start": "1270240",
    "end": "1275320"
  },
  {
    "text": "if you're not aware uh the technical Advisory Group for runtime kind of deals with the different type of run times that we kind of see in the cncf um and I",
    "start": "1275320",
    "end": "1283559"
  },
  {
    "text": "think we started off back in June and so we had our first ever working group meeting back in June and uh I and a few",
    "start": "1283559",
    "end": "1291080"
  },
  {
    "text": "other the folks were part of the initial chter where we kind of were defining what is the mission and how the web",
    "start": "1291080",
    "end": "1298159"
  },
  {
    "text": "assembly working group uh you know will be utilized so this talk is Prim dedicated towards understanding like",
    "start": "1298159",
    "end": "1303679"
  },
  {
    "text": "what are the main missions for this working group and how all of you can also join in case you are interested in",
    "start": "1303679",
    "end": "1309640"
  },
  {
    "text": "uh you know whether you are uh end users of cities or you're contributing to web",
    "start": "1309640",
    "end": "1314760"
  },
  {
    "text": "assmbly uh you're contributing to web assmbly or even to Cloud native ecosystems or Cloud native projects and",
    "start": "1314760",
    "end": "1320640"
  },
  {
    "text": "how you can leverage web asmbly support in these projects so uh the primary uh mission",
    "start": "1320640",
    "end": "1328880"
  },
  {
    "text": "for the web assembly working group is just to help enable web assembly uh to",
    "start": "1328880",
    "end": "1334000"
  },
  {
    "text": "be able to run workloads uh related to communities Edge Computing and other Cloud native ecosystems so the idea is",
    "start": "1334000",
    "end": "1341440"
  },
  {
    "text": "to help uh different Cloud native projects that come under the cncf to",
    "start": "1341440",
    "end": "1346799"
  },
  {
    "text": "help adopt web as a potential runtime uh in comparison to your standard containers of course uh you might have",
    "start": "1346799",
    "end": "1353840"
  },
  {
    "text": "heard hey like can webs replace containers uh that's not true but idea is to help kind of run them side by side",
    "start": "1353840",
    "end": "1361200"
  },
  {
    "text": "or identify those particular use cases where containers might be a bit too slow because as Kevin kind of pointed out",
    "start": "1361200",
    "end": "1368080"
  },
  {
    "text": "that these web Sim modules are very small they are not going ahead and you",
    "start": "1368080",
    "end": "1373440"
  },
  {
    "text": "know being deployed with any dependencies and of course the cold start time for these we modules is",
    "start": "1373440",
    "end": "1378799"
  },
  {
    "text": "pretty quick so if you're especially like running any workloads in Edge compute where you're limited by the",
    "start": "1378799",
    "end": "1385400"
  },
  {
    "text": "amount of compute uh as well and of course uh you you don't want to probably wait for you know uh your standard",
    "start": "1385400",
    "end": "1392279"
  },
  {
    "text": "containers to spin up which can take more than you know a few seconds to do that like that's where you you'll be",
    "start": "1392279",
    "end": "1399039"
  },
  {
    "text": "getting a lot of benefit of running web assembly uh so uh the other point is of",
    "start": "1399039",
    "end": "1404440"
  },
  {
    "text": "course like we have already started to see a lot of web assembly being integrated in different type of cncf",
    "start": "1404440",
    "end": "1410400"
  },
  {
    "text": "projects so of course the landscape and you can just go to wasm landscape for cncf uh we've already seen uh a lot of",
    "start": "1410400",
    "end": "1417279"
  },
  {
    "text": "different ad option so whether it's with open policy agent being able to use web assembly to basically uh decrypt and be",
    "start": "1417279",
    "end": "1424480"
  },
  {
    "text": "able to you know work with these policies and address them directly in in the client side or it's with Dapper uh",
    "start": "1424480",
    "end": "1431919"
  },
  {
    "text": "where you able to directly get support for webs um or of course it's being used in Envoy and you you know different type",
    "start": "1431919",
    "end": "1438559"
  },
  {
    "text": "of service measures where it you can essentially use web assembly uh to create operators and just have this one",
    "start": "1438559",
    "end": "1445400"
  },
  {
    "text": "single binary that can now serve across multiple languages uh so we're seeing a",
    "start": "1445400",
    "end": "1450840"
  },
  {
    "text": "lot of usage uh in already in the ecosystem but of course the one of the main missions is to help further",
    "start": "1450840",
    "end": "1457799"
  },
  {
    "text": "adoption for those projects who might be looking at web but they are kind of in",
    "start": "1457799",
    "end": "1463520"
  },
  {
    "text": "in a you know cast 50 like whether they should adopt it or what are the use cases so really just helping Define",
    "start": "1463520",
    "end": "1469640"
  },
  {
    "text": "clear use cases where web simly will work and where it will not be working uh",
    "start": "1469640",
    "end": "1474679"
  },
  {
    "text": "so that is why all of you can join the web simly working group if you are kind of in that spot or you are looking to at",
    "start": "1474679",
    "end": "1480960"
  },
  {
    "text": "least look at web simly in the future so uh the web working group will be working very closely to help Define use cases",
    "start": "1480960",
    "end": "1487880"
  },
  {
    "text": "for different type of uh Cloud native projects um of course uh with any",
    "start": "1487880",
    "end": "1494559"
  },
  {
    "text": "working group there's you know the entire folks who help kind of Define and run it so of course since it uh is part",
    "start": "1494559",
    "end": "1501880"
  },
  {
    "text": "of the tag run time uh the leoon is are recardo and he so they are the folks who kind of started off uh and you can",
    "start": "1501880",
    "end": "1508200"
  },
  {
    "text": "actually reach out to these folks uh in case you ever want to get involved with the working group or you want to",
    "start": "1508200",
    "end": "1513720"
  },
  {
    "text": "actually collaborate with the working group right so the TOC lien is Nikita um and the working group chairs are David",
    "start": "1513720",
    "end": "1520039"
  },
  {
    "text": "Justice and Daniel and of course the technical leaders are Angel Kevin Uh Kevin with us and Sven so you can reach",
    "start": "1520039",
    "end": "1526600"
  },
  {
    "text": "out to these folks on the uh cncf slack if you want to like you know have deeper discussions around how",
    "start": "1526600",
    "end": "1532880"
  },
  {
    "text": "you could you know Leverage The working group uh so yeah feel free to reach out to these folks um of course as I",
    "start": "1532880",
    "end": "1539640"
  },
  {
    "text": "mentioned some of the deliverables is primarily just uh helping document and",
    "start": "1539640",
    "end": "1544919"
  },
  {
    "text": "Implement uh a lot of the cloud native web assembly use cases so I think like one of the most important points to kind",
    "start": "1544919",
    "end": "1550600"
  },
  {
    "text": "of note over here is that as we are you know whenever we are talking about any new technology right uh there's always",
    "start": "1550600",
    "end": "1557960"
  },
  {
    "text": "uh this question of how do we implement it right and I think like one thing that like we'll probably agree is that the",
    "start": "1557960",
    "end": "1564760"
  },
  {
    "text": "use cases are something that are still not very much defined because of course we are still kind of evolving as a",
    "start": "1564760",
    "end": "1570360"
  },
  {
    "text": "technology in the cncf landscape so one of the dbls would be to create",
    "start": "1570360",
    "end": "1575559"
  },
  {
    "text": "documentation and use cases on how people can actually adopt web assembly for their workloads if you are in the",
    "start": "1575559",
    "end": "1581640"
  },
  {
    "text": "cncf landscape uh and of course like providing continuous updates uh that's what we are doing over here at C on but",
    "start": "1581640",
    "end": "1588080"
  },
  {
    "text": "also you'll find a lot of like web assembly conferences including the cloud native web assembly day we have uh",
    "start": "1588080",
    "end": "1593919"
  },
  {
    "text": "recently introduced the vomc con which is int which was at you know by Linux",
    "start": "1593919",
    "end": "1599480"
  },
  {
    "text": "Foundation it took place just a couple of months back feel free to take a look at a lot of the videos because that",
    "start": "1599480",
    "end": "1604960"
  },
  {
    "text": "particular conference actually captured uh webly not just from the clown space",
    "start": "1604960",
    "end": "1610240"
  },
  {
    "text": "but also actually captured a lot of use cases so if you're interested to know how it's being used in Social good or in",
    "start": "1610240",
    "end": "1616200"
  },
  {
    "text": "certain companies then uh definitely like you know check check that out um and of course like providing a lot of",
    "start": "1616200",
    "end": "1621960"
  },
  {
    "text": "proposals so as web sbly and VY are kind of expanding so there lot of different",
    "start": "1621960",
    "end": "1627919"
  },
  {
    "text": "um you know proposals being written so very recently we had the uh proposal for",
    "start": "1627919",
    "end": "1634120"
  },
  {
    "text": "the garbage collection coming into picture there's still like lot of other proposals for debugging for networking",
    "start": "1634120",
    "end": "1640399"
  },
  {
    "text": "capability in web that are still like you know kind of maturing right now as you speak so coming up with new uh you",
    "start": "1640399",
    "end": "1647000"
  },
  {
    "text": "know new proposals like we are in talks of like having potentially a tracing proposal that might come in the future",
    "start": "1647000",
    "end": "1653559"
  },
  {
    "text": "so if you're interested in all of that as well that's what you know the working group will be working towards uh and of",
    "start": "1653559",
    "end": "1658880"
  },
  {
    "text": "course uh primly the agenda that you know uh so we kind of meet every two weeks um on Tuesdays uh one of the major",
    "start": "1658880",
    "end": "1666240"
  },
  {
    "text": "agendas for all for the working group is to introduce the different cncf uh wasm",
    "start": "1666240",
    "end": "1671679"
  },
  {
    "text": "projects so of course uh if you might again go back to the landscape there are a lot of different open Source web",
    "start": "1671679",
    "end": "1678000"
  },
  {
    "text": "assembly projects that are now currently being incubated into the web assembly uh you know the entire web assembly",
    "start": "1678000",
    "end": "1683880"
  },
  {
    "text": "ecosystem under the cncf uh so I have been a long time contributed to the webly runtime called Wasa meds that that",
    "start": "1683880",
    "end": "1690919"
  },
  {
    "text": "was incubated just a few you know months back um so the ENT of these meetings is",
    "start": "1690919",
    "end": "1698679"
  },
  {
    "text": "really to just introduce new web assembly uh related projects that can be beneficial for you know the cncf E",
    "start": "1698679",
    "end": "1706039"
  },
  {
    "text": "ecosystem and of was uh develop specific workloads for communities so I think",
    "start": "1706039",
    "end": "1711480"
  },
  {
    "text": "like one thing that we didn't specify until now was that now you can actually run webm workloads directly in uh",
    "start": "1711480",
    "end": "1718880"
  },
  {
    "text": "kubernetes itself natively with the help of the webm Run uh shim right so earlier",
    "start": "1718880",
    "end": "1724080"
  },
  {
    "text": "we had the container shim but now we have the container containery wasum shim that allows you to run your webs",
    "start": "1724080",
    "end": "1730159"
  },
  {
    "text": "workloads side by side with your standard container workloads and again you can uh feel free to take a look at",
    "start": "1730159",
    "end": "1735679"
  },
  {
    "text": "the projects such as runi with which allow actually allow you to actually do that so some you know AKs and some of",
    "start": "1735679",
    "end": "1742600"
  },
  {
    "text": "these providers natively now support you to be able to run wasm workloads directly in uh the communities as well",
    "start": "1742600",
    "end": "1750200"
  },
  {
    "text": "uh so yeah primly just talking more about like how interoperability uh in terms of like Cloud n ecosystem whether",
    "start": "1750200",
    "end": "1756919"
  },
  {
    "text": "you're talking about like uh web assembly support in service mesh in Dapper in you know the standard kuber",
    "start": "1756919",
    "end": "1763279"
  },
  {
    "text": "scheduler uh so core kuties or you know any of the ecosystem changes and how web",
    "start": "1763279",
    "end": "1768799"
  },
  {
    "text": "Sly will be supported that's what we're Prim covering and in the few months you know since the working group has gone",
    "start": "1768799",
    "end": "1776039"
  },
  {
    "text": "live uh we have been able to actually cover a lot of like major accomplishments within the cncf landscape so of course we kind of",
    "start": "1776039",
    "end": "1782360"
  },
  {
    "text": "started off with standardizing the web assembly landscape uh that you see right now so of course earlier it was kind of",
    "start": "1782360",
    "end": "1788760"
  },
  {
    "text": "hit hit or miss but we have spent a lot of time and the cncf itself has really invested a lot of time Chris from you",
    "start": "1788760",
    "end": "1795519"
  },
  {
    "text": "know the CD at cncf has Ally invested a lot of time uh we had the vom con as well uh but but outside of that uh if",
    "start": "1795519",
    "end": "1802240"
  },
  {
    "text": "you talk about core communities uh we have been working a lot of course outside of the uh run VY project that",
    "start": "1802240",
    "end": "1808120"
  },
  {
    "text": "allows you to run wasm workloads uh a lot of work is also going on into the community shedu extensions uh so that",
    "start": "1808120",
    "end": "1815000"
  },
  {
    "text": "vom can be directly supported over there but also a lot of work is going in in the underlying architecture for uh being",
    "start": "1815000",
    "end": "1821679"
  },
  {
    "text": "supported like the con con vum shim but also how you can basically have native",
    "start": "1821679",
    "end": "1827840"
  },
  {
    "text": "support with ocis uh and with container D itself uh and like you know have uh",
    "start": "1827840",
    "end": "1834320"
  },
  {
    "text": "basically support for projects like project Yuki uh so that those can also support web workloads natively um and",
    "start": "1834320",
    "end": "1841360"
  },
  {
    "text": "that's some of the things that you know are there of course uh with machine learning a lot of work is going on uh to",
    "start": "1841360",
    "end": "1847720"
  },
  {
    "text": "help make advancements in uh being able to run machine learning workloads either as servess functions with spin uh or",
    "start": "1847720",
    "end": "1855039"
  },
  {
    "text": "even like being able to run like large langage models directly on edge applications with projects like vum Edge",
    "start": "1855039",
    "end": "1861159"
  },
  {
    "text": "so a lot of like machine learning stuff is also happening within you know the ecosystem so if you interested in like",
    "start": "1861159",
    "end": "1867840"
  },
  {
    "text": "machine learning workloads running them with web assembly that's also some of the things that we have covered so far",
    "start": "1867840",
    "end": "1873600"
  },
  {
    "text": "and of course uh the biggest question is how can all of you get involved that's what you know the main agenda for today's talk was so you can join the web",
    "start": "1873600",
    "end": "1880919"
  },
  {
    "text": "working group slack Channel and again uh feel free to take a uh you know click off this of this particular slide uh so",
    "start": "1880919",
    "end": "1887639"
  },
  {
    "text": "we are mostly having discussions around that but of course there is uh within the cncf slack we have the web assembly",
    "start": "1887639",
    "end": "1893639"
  },
  {
    "text": "Channel as well and the runi so if you are more interested towards like General web Sly uh you can join that but of",
    "start": "1893639",
    "end": "1899960"
  },
  {
    "text": "course if you are interested in understanding more use cases and how you can adopt web simly in your uh own",
    "start": "1899960",
    "end": "1906600"
  },
  {
    "text": "project under the cncf feel free to join that we have weekly calls on Tuesdays uh",
    "start": "1906600",
    "end": "1912039"
  },
  {
    "text": "all of these calls are also of course published on YouTube so you can take a look at some of the existing ones and",
    "start": "1912039",
    "end": "1917679"
  },
  {
    "text": "you can join the mailing list that comes under the tag around time and of course you can always contribute to the",
    "start": "1917679",
    "end": "1922960"
  },
  {
    "text": "different uh cncf ven Centric projects as well um and these are some resources",
    "start": "1922960",
    "end": "1928159"
  },
  {
    "text": "so the first one is just the U you know the official uh working group uh you",
    "start": "1928159",
    "end": "1933320"
  },
  {
    "text": "know uh basically the mission and the objectives that we kind of want to cover uh the next one is just some meeting",
    "start": "1933320",
    "end": "1939679"
  },
  {
    "text": "notes that we have had from the previous working group meetings and uh of course the landscape itself and the recordings",
    "start": "1939679",
    "end": "1946240"
  },
  {
    "text": "of some of the previous meetings uh but yeah like I know we are uh running out of time but we'll be more than happy to",
    "start": "1946240",
    "end": "1952639"
  },
  {
    "text": "take up any questions now uh and of course you can reach out to me or Kevin on the working group slack uh but yeah",
    "start": "1952639",
    "end": "1958240"
  },
  {
    "text": "you can scan this QR code to give any feedback yeah and we'll be open to questions now I think we have time for one or two",
    "start": "1958240",
    "end": "1965278"
  },
  {
    "text": "questions um does web assembly offer a good alternative to um scale to zero um",
    "start": "1965799",
    "end": "1974559"
  },
  {
    "text": "function Solutions like AWS Lambda so I guess it the classic answer is it",
    "start": "1974559",
    "end": "1982120"
  },
  {
    "text": "depends right um it really depends on how you specifically Define scale to",
    "start": "1982120",
    "end": "1988639"
  },
  {
    "text": "zero but because of the the tiny size of",
    "start": "1988639",
    "end": "1993679"
  },
  {
    "text": "these modules uh in some cases they don't consume any resources while they're",
    "start": "1993679",
    "end": "1999519"
  },
  {
    "text": "actually up and running anyway so if your definition of scale to zero is",
    "start": "1999519",
    "end": "2005200"
  },
  {
    "text": "consume nothing then in some cases they can actually consume nothing while also",
    "start": "2005200",
    "end": "2010519"
  },
  {
    "text": "being ready to take requests um depends on the runtime and how that's all configured but um",
    "start": "2010519",
    "end": "2018600"
  },
  {
    "text": "yes the scale to zero stuff is easier and faster with web assembly",
    "start": "2018600",
    "end": "2024840"
  },
  {
    "text": "than it is with trying to dispose of a full Docker image and for this I think you can",
    "start": "2024840",
    "end": "2030639"
  },
  {
    "text": "definitely check out spin by formon I think they are kind of uh in this space so I'll definitely recommend you to",
    "start": "2030639",
    "end": "2036679"
  },
  {
    "text": "check out spin project yeah Wim Cloud does it as well it has scale to zero in",
    "start": "2036679",
    "end": "2044159"
  },
  {
    "text": "it in the context of using web assembly as a runtime executable I was wondering",
    "start": "2045480",
    "end": "2052079"
  },
  {
    "text": "if there's in been any talks on building a GUI toolkit or some kind of interface to an existing GUI toolkit to be able to",
    "start": "2052079",
    "end": "2058440"
  },
  {
    "text": "run desktop applications in the runtime yeah that's a they're tackling",
    "start": "2058440",
    "end": "2064839"
  },
  {
    "text": "the easier U contract like the the various Cloud dependency",
    "start": "2064839",
    "end": "2070118"
  },
  {
    "text": "ones so key value message broker all of those things the hard part with trying",
    "start": "2070119",
    "end": "2075480"
  },
  {
    "text": "to get a web assembly module to control a user interface over an abstract",
    "start": "2075480",
    "end": "2081158"
  },
  {
    "text": "contract is defining that contract right we've been we've been doing that wrong for",
    "start": "2081159",
    "end": "2087320"
  },
  {
    "text": "decades so uh it is possible I've seen some people try um there are some things",
    "start": "2087320",
    "end": "2094118"
  },
  {
    "text": "where it's there are a couple of Frameworks uh Su in Rust",
    "start": "2094119",
    "end": "2099200"
  },
  {
    "text": "that uh give you the ability to have these declarative UI Frameworks and when you compile your web assembly module it",
    "start": "2099200",
    "end": "2106640"
  },
  {
    "text": "can then you know manipulate the the browser Dom things like that uh i' there's also uh and I'm",
    "start": "2106640",
    "end": "2115480"
  },
  {
    "text": "blanking on the name but there's another contract that uses a frame buffer so",
    "start": "2115480",
    "end": "2120720"
  },
  {
    "text": "it's basically your your web assembly module is asked for you know essentially",
    "start": "2120720",
    "end": "2125760"
  },
  {
    "text": "a bit map every 60th of a second or so but there's",
    "start": "2125760",
    "end": "2131599"
  },
  {
    "text": "no there there's no one good solution for user interface with web",
    "start": "2131599",
    "end": "2137640"
  },
  {
    "text": "assembly thank you hi um so let's say we've got some",
    "start": "2137640",
    "end": "2146040"
  },
  {
    "text": "application code that needs to use calendars date time type information we",
    "start": "2146040",
    "end": "2151200"
  },
  {
    "text": "have ICU which of course the data type or data tables alone are like 30 plus megabytes",
    "start": "2151200",
    "end": "2157400"
  },
  {
    "text": "how does does web assembly and the web assembly runtime have any way of Plumbing information like that in so we",
    "start": "2157400",
    "end": "2163400"
  },
  {
    "text": "don't end up with 30 megabyte Lain files I'm sorry I had a lot of trouble",
    "start": "2163400",
    "end": "2169200"
  },
  {
    "text": "hearing some of so you're trying to were you asking about time or yeah like date",
    "start": "2169200",
    "end": "2174839"
  },
  {
    "text": "time so we've got business logic that uses date time information uh that of",
    "start": "2174839",
    "end": "2180440"
  },
  {
    "text": "course uses ICU data tables and ICU to do things like um daylight savings time",
    "start": "2180440",
    "end": "2188520"
  },
  {
    "text": "and and and yeah generally uh with web assembly and again it depends on the",
    "start": "2188520",
    "end": "2194480"
  },
  {
    "text": "language too because some of them do some of them do fancier things uh",
    "start": "2194480",
    "end": "2200079"
  },
  {
    "text": "there's a bunch of things in Russ that that are designed specifically around that problem but the short answer is the",
    "start": "2200079",
    "end": "2207240"
  },
  {
    "text": "web assembly module has to ask the host for the time because the module itself",
    "start": "2207240",
    "end": "2213079"
  },
  {
    "text": "cannot ask the operating system for the time all right so that'd be through like",
    "start": "2213079",
    "end": "2218319"
  },
  {
    "text": "wazzy and then that would could do the W the wazy has a standard for supplying",
    "start": "2218319",
    "end": "2225680"
  },
  {
    "text": "time to web assembly modules and again depending on which language you're using",
    "start": "2225680",
    "end": "2231400"
  },
  {
    "text": "like if I if I built a like that little hello world I probably should have done that a little hello world uh demo that I",
    "start": "2231400",
    "end": "2238760"
  },
  {
    "text": "showed that was compiled to Wazi if I had printed the current time rust would",
    "start": "2238760",
    "end": "2244319"
  },
  {
    "text": "have translated that code into something that asked Wy for the host",
    "start": "2244319",
    "end": "2250520"
  },
  {
    "text": "time all right thank you right thank you",
    "start": "2250520",
    "end": "2257599"
  },
  {
    "text": "everyone",
    "start": "2263000",
    "end": "2266000"
  }
]