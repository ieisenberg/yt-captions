[
  {
    "text": "so hi everyone welcome to my talk",
    "start": "160",
    "end": "2720"
  },
  {
    "text": "evasive",
    "start": "2720",
    "end": "3720"
  },
  {
    "text": "maneuvers um my name is Amit I work at",
    "start": "3720",
    "end": "7640"
  },
  {
    "text": "armo we are the makers of Cub Escape",
    "start": "7640",
    "end": "10840"
  },
  {
    "text": "which is an open source cncf uh sandbox",
    "start": "10840",
    "end": "13839"
  },
  {
    "text": "Tool uh I'm a cub scape maintainer",
    "start": "13839",
    "end": "16080"
  },
  {
    "text": "myself and in my space time I like to",
    "start": "16080",
    "end": "18840"
  },
  {
    "text": "play",
    "start": "18840",
    "end": "20439"
  },
  {
    "text": "volleyball so the agenda for this talk",
    "start": "20439",
    "end": "23320"
  },
  {
    "text": "we're going to first see how does a",
    "start": "23320",
    "end": "26240"
  },
  {
    "text": "runtime detection tools work then we're",
    "start": "26240",
    "end": "28720"
  },
  {
    "text": "going to see some ways to bypass them",
    "start": "28720",
    "end": "31080"
  },
  {
    "text": "and finally we're going to talk a bit",
    "start": "31080",
    "end": "32320"
  },
  {
    "text": "about the gaps in runtime detection",
    "start": "32320",
    "end": "34520"
  },
  {
    "text": "tools and uh the way I see uh uh this",
    "start": "34520",
    "end": "39399"
  },
  {
    "text": "Gap in the specific ways of",
    "start": "39399",
    "end": "42719"
  },
  {
    "text": "implementation so how does runtime",
    "start": "42719",
    "end": "45520"
  },
  {
    "text": "detection tools even work well most of",
    "start": "45520",
    "end": "47920"
  },
  {
    "text": "them work in a similar way of um",
    "start": "47920",
    "end": "51680"
  },
  {
    "text": "basically collecting a lot of uh basic",
    "start": "51680",
    "end": "55399"
  },
  {
    "text": "data from the system whether it's",
    "start": "55399",
    "end": "57359"
  },
  {
    "text": "processes system calls files or",
    "start": "57359",
    "end": "60680"
  },
  {
    "text": "activity and then the question is uh",
    "start": "60680",
    "end": "63760"
  },
  {
    "text": "what they they do with this",
    "start": "63760",
    "end": "65760"
  },
  {
    "text": "information so each tool has its own way",
    "start": "65760",
    "end": "69720"
  },
  {
    "text": "of uh acting and when talking in Cloud",
    "start": "69720",
    "end": "73720"
  },
  {
    "text": "native environments uh the more common",
    "start": "73720",
    "end": "76600"
  },
  {
    "text": "way are uh anomaly detection and custom",
    "start": "76600",
    "end": "80079"
  },
  {
    "text": "rules so anomaly detection can be for",
    "start": "80079",
    "end": "83079"
  },
  {
    "text": "example collecting all those metrics uh",
    "start": "83079",
    "end": "86400"
  },
  {
    "text": "creating a baseline behavior of an",
    "start": "86400",
    "end": "88840"
  },
  {
    "text": "application let's say you have an engine",
    "start": "88840",
    "end": "90920"
  },
  {
    "text": "X workload in your kubernetes",
    "start": "90920",
    "end": "92640"
  },
  {
    "text": "environment you can trace all that",
    "start": "92640",
    "end": "94920"
  },
  {
    "text": "information create like a baseline",
    "start": "94920",
    "end": "97000"
  },
  {
    "text": "behavior of that application and then",
    "start": "97000",
    "end": "99960"
  },
  {
    "text": "enforce uh anomaly detection rules above",
    "start": "99960",
    "end": "103320"
  },
  {
    "text": "that and the second way is custom rules",
    "start": "103320",
    "end": "107159"
  },
  {
    "text": "so uh uh for example detecting a reverse",
    "start": "107159",
    "end": "111520"
  },
  {
    "text": "shells or Fess execution in memory which",
    "start": "111520",
    "end": "114759"
  },
  {
    "text": "is more like a a signature way of",
    "start": "114759",
    "end": "116960"
  },
  {
    "text": "detection uh and it doesn't rely on an",
    "start": "116960",
    "end": "121680"
  },
  {
    "text": "and the third the the third bullet is",
    "start": "121680",
    "end": "124680"
  },
  {
    "text": "that uh more traditional tools like",
    "start": "124680",
    "end": "128039"
  },
  {
    "text": "antiviruses and edrs for example they",
    "start": "128039",
    "end": "130840"
  },
  {
    "text": "use uh uh other methods than what we see",
    "start": "130840",
    "end": "134640"
  },
  {
    "text": "in Cloud today and and it is more like a",
    "start": "134640",
    "end": "138239"
  },
  {
    "text": "hash or signature scanning and using Y",
    "start": "138239",
    "end": "140680"
  },
  {
    "text": "rules and we're going to see why it's",
    "start": "140680",
    "end": "143160"
  },
  {
    "text": "missing in today's",
    "start": "143160",
    "end": "145760"
  },
  {
    "text": "world so there are a lot of different",
    "start": "145760",
    "end": "148440"
  },
  {
    "text": "ways to achieve the same goal",
    "start": "148440",
    "end": "150360"
  },
  {
    "text": "uh of tracing the information we want uh",
    "start": "150360",
    "end": "154080"
  },
  {
    "text": "you have uh for example odd or up armor",
    "start": "154080",
    "end": "157319"
  },
  {
    "text": "and that's a Lino you can use Kel",
    "start": "157319",
    "end": "159640"
  },
  {
    "text": "modules and of course you can use",
    "start": "159640",
    "end": "162599"
  },
  {
    "text": "ebpf and we all know that today uh ebpf",
    "start": "162599",
    "end": "167560"
  },
  {
    "text": "is winning the race and it's mainly",
    "start": "167560",
    "end": "171000"
  },
  {
    "text": "because of those uh four bullets um and",
    "start": "171000",
    "end": "175120"
  },
  {
    "text": "so it's it is relatively low footprint",
    "start": "175120",
    "end": "178200"
  },
  {
    "text": "right memory in CPU wise",
    "start": "178200",
    "end": "180360"
  },
  {
    "text": "uh so it's very convenient to use in",
    "start": "180360",
    "end": "182640"
  },
  {
    "text": "Cloud environments where you don't have",
    "start": "182640",
    "end": "184159"
  },
  {
    "text": "a lot of",
    "start": "184159",
    "end": "185599"
  },
  {
    "text": "resources and more importantly it's safe",
    "start": "185599",
    "end": "189080"
  },
  {
    "text": "right so ebpf has uh before loading ebpf",
    "start": "189080",
    "end": "191959"
  },
  {
    "text": "into the kernel you need to pass the",
    "start": "191959",
    "end": "194519"
  },
  {
    "text": "verifier which is a very long piece of",
    "start": "194519",
    "end": "196680"
  },
  {
    "text": "code complicated code that validates uh",
    "start": "196680",
    "end": "200159"
  },
  {
    "text": "uh a lot of things uh in your ebpf code",
    "start": "200159",
    "end": "203400"
  },
  {
    "text": "and prevent you from loading code that",
    "start": "203400",
    "end": "206040"
  },
  {
    "text": "uh can crash or that is not safe",
    "start": "206040",
    "end": "210120"
  },
  {
    "text": "and the turbolet is it's fairly easy to",
    "start": "210120",
    "end": "212920"
  },
  {
    "text": "write uh but it's marked with a line",
    "start": "212920",
    "end": "215760"
  },
  {
    "text": "because if any of you wrote ebpf you",
    "start": "215760",
    "end": "218080"
  },
  {
    "text": "know that sometimes because of the",
    "start": "218080",
    "end": "219599"
  },
  {
    "text": "verifier it can be uh very hard you have",
    "start": "219599",
    "end": "222560"
  },
  {
    "text": "a lot of limitations like stock size or",
    "start": "222560",
    "end": "224840"
  },
  {
    "text": "the number of",
    "start": "224840",
    "end": "226000"
  },
  {
    "text": "instructions but uh like the steep climb",
    "start": "226000",
    "end": "229640"
  },
  {
    "text": "you need in order to start writing ebpf",
    "start": "229640",
    "end": "231720"
  },
  {
    "text": "is lower than uh for example writing",
    "start": "231720",
    "end": "234159"
  },
  {
    "text": "kernel modules and uh usually the the",
    "start": "234159",
    "end": "238000"
  },
  {
    "text": "amount of code you will write in your",
    "start": "238000",
    "end": "240239"
  },
  {
    "text": "ebpf program is going to be relatively",
    "start": "240239",
    "end": "242799"
  },
  {
    "text": "short like a function a hook and then a",
    "start": "242799",
    "end": "246120"
  },
  {
    "text": "simple logic and the last bullet is",
    "start": "246120",
    "end": "249920"
  },
  {
    "text": "observability right so ebpf allows you",
    "start": "249920",
    "end": "252319"
  },
  {
    "text": "to hook in many subsystems of Linux",
    "start": "252319",
    "end": "255280"
  },
  {
    "text": "whether it's a file system or scheduling",
    "start": "255280",
    "end": "258040"
  },
  {
    "text": "and processes and it basically allows",
    "start": "258040",
    "end": "261560"
  },
  {
    "text": "you to see everything you want so this",
    "start": "261560",
    "end": "264360"
  },
  {
    "text": "is why I think ebpf today uh is the most",
    "start": "264360",
    "end": "267720"
  },
  {
    "text": "common use technology",
    "start": "267720",
    "end": "271160"
  },
  {
    "text": "and so let's just see uh how we can",
    "start": "271160",
    "end": "273400"
  },
  {
    "text": "bypass those runtime detection",
    "start": "273400",
    "end": "276160"
  },
  {
    "text": "tools so the first trick uh very simple",
    "start": "276160",
    "end": "279840"
  },
  {
    "text": "one is that uh many of the tools are",
    "start": "279840",
    "end": "283440"
  },
  {
    "text": "open source right so we have a a cube",
    "start": "283440",
    "end": "285440"
  },
  {
    "text": "scape and Falco and tetragon and the",
    "start": "285440",
    "end": "288639"
  },
  {
    "text": "thing about open source we all like it",
    "start": "288639",
    "end": "291400"
  },
  {
    "text": "CS in cncf but uh for attackers it's uh",
    "start": "291400",
    "end": "296560"
  },
  {
    "text": "very convenient to just look in the code",
    "start": "296560",
    "end": "298919"
  },
  {
    "text": "look on the C rules and then see what",
    "start": "298919",
    "end": "302120"
  },
  {
    "text": "the tools are being monitored on and the",
    "start": "302120",
    "end": "305440"
  },
  {
    "text": "the nice thing is that uh if you as a",
    "start": "305440",
    "end": "308720"
  },
  {
    "text": "company install one of those tools in",
    "start": "308720",
    "end": "310840"
  },
  {
    "text": "the open source version and you don't do",
    "start": "310840",
    "end": "313400"
  },
  {
    "text": "any customization by yourself uh a lot",
    "start": "313400",
    "end": "316479"
  },
  {
    "text": "of the predefined rules are not uh",
    "start": "316479",
    "end": "319479"
  },
  {
    "text": "strict enough so you can just easily",
    "start": "319479",
    "end": "321840"
  },
  {
    "text": "bypass them as an",
    "start": "321840",
    "end": "323240"
  },
  {
    "text": "attacker so for example uh many of those",
    "start": "323240",
    "end": "327039"
  },
  {
    "text": "tools monitor when you access a",
    "start": "327039",
    "end": "329199"
  },
  {
    "text": "sensitive file let's say as an attacker",
    "start": "329199",
    "end": "331680"
  },
  {
    "text": "you want to access a AWD or an SSH key",
    "start": "331680",
    "end": "335680"
  },
  {
    "text": "on the machine so those tools will will",
    "start": "335680",
    "end": "338600"
  },
  {
    "text": "detect that and you can see in the",
    "start": "338600",
    "end": "340319"
  },
  {
    "text": "configuration files of those tools uh",
    "start": "340319",
    "end": "343039"
  },
  {
    "text": "which files exactly are being monitored",
    "start": "343039",
    "end": "344800"
  },
  {
    "text": "and avoid accessing those",
    "start": "344800",
    "end": "347240"
  },
  {
    "text": "files and the second trick is Sim links",
    "start": "347240",
    "end": "351720"
  },
  {
    "text": "and uh the thing is that with all BPF",
    "start": "351720",
    "end": "356600"
  },
  {
    "text": "limitations uh it's not that easy to to",
    "start": "356600",
    "end": "359720"
  },
  {
    "text": "resolve Sim links in ebpf so if you as",
    "start": "359720",
    "end": "362680"
  },
  {
    "text": "an attacker for example want to uh",
    "start": "362680",
    "end": "365319"
  },
  {
    "text": "access",
    "start": "365319",
    "end": "366800"
  },
  {
    "text": "etwd and you know that the uh the tool",
    "start": "366800",
    "end": "369919"
  },
  {
    "text": "is monitoring accessing",
    "start": "369919",
    "end": "372280"
  },
  {
    "text": "towd what you can do is Create a Sim",
    "start": "372280",
    "end": "374759"
  },
  {
    "text": "link uh like here in the picture on uh",
    "start": "374759",
    "end": "378800"
  },
  {
    "text": "on etwd to any path of your choice and",
    "start": "378800",
    "end": "382160"
  },
  {
    "text": "then read it from the uh the Sim link",
    "start": "382160",
    "end": "385599"
  },
  {
    "text": "and not all of the tools resolve Sim",
    "start": "385599",
    "end": "387960"
  },
  {
    "text": "links but runtime detection tools are",
    "start": "387960",
    "end": "391919"
  },
  {
    "text": "usually hooks on system calls and they",
    "start": "391919",
    "end": "394880"
  },
  {
    "text": "also monitor when you create a Sim link",
    "start": "394880",
    "end": "397199"
  },
  {
    "text": "over a sensitive file so I would call",
    "start": "397199",
    "end": "399599"
  },
  {
    "text": "that",
    "start": "399599",
    "end": "401199"
  },
  {
    "text": "even and this leads me to the next trick",
    "start": "401199",
    "end": "403720"
  },
  {
    "text": "which is iur ring and this mechanism is",
    "start": "403720",
    "end": "407520"
  },
  {
    "text": "fairly new in Linux and it basically",
    "start": "407520",
    "end": "409960"
  },
  {
    "text": "allows you to do iio operations as",
    "start": "409960",
    "end": "412919"
  },
  {
    "text": "synchronically and the way it works is",
    "start": "412919",
    "end": "416199"
  },
  {
    "text": "by uh using two shared memory cues",
    "start": "416199",
    "end": "420280"
  },
  {
    "text": "one is the submission queue where your",
    "start": "420280",
    "end": "421960"
  },
  {
    "text": "application can submit a job for example",
    "start": "421960",
    "end": "425639"
  },
  {
    "text": "uh Create a Sim link and then the kernel",
    "start": "425639",
    "end": "428400"
  },
  {
    "text": "read from that shared memory queue",
    "start": "428400",
    "end": "430680"
  },
  {
    "text": "performs the action and then put the uh",
    "start": "430680",
    "end": "434599"
  },
  {
    "text": "response and the output uh in the",
    "start": "434599",
    "end": "437360"
  },
  {
    "text": "completion queue then your application",
    "start": "437360",
    "end": "439120"
  },
  {
    "text": "reads from the completion queue and then",
    "start": "439120",
    "end": "441160"
  },
  {
    "text": "you can use the",
    "start": "441160",
    "end": "443240"
  },
  {
    "text": "data so here is an example of a piece of",
    "start": "443240",
    "end": "446919"
  },
  {
    "text": "code in uh without uring which basically",
    "start": "446919",
    "end": "450520"
  },
  {
    "text": "creates the Sim link that we saw in the",
    "start": "450520",
    "end": "452599"
  },
  {
    "text": "previous",
    "start": "452599",
    "end": "453599"
  },
  {
    "text": "slide uh over",
    "start": "453599",
    "end": "455960"
  },
  {
    "text": "etwd and the nice thing about iing is",
    "start": "455960",
    "end": "459879"
  },
  {
    "text": "because it's as synchronically it's not",
    "start": "459879",
    "end": "461960"
  },
  {
    "text": "going to go through the regular flow of",
    "start": "461960",
    "end": "463879"
  },
  {
    "text": "system calls and that way uh when",
    "start": "463879",
    "end": "466720"
  },
  {
    "text": "runtime detection tools that rely on EF",
    "start": "466720",
    "end": "469360"
  },
  {
    "text": "and hooking system calls they're not",
    "start": "469360",
    "end": "471360"
  },
  {
    "text": "going to catch uh uh the the the Sim",
    "start": "471360",
    "end": "475199"
  },
  {
    "text": "link uh system call so let's see a demo",
    "start": "475199",
    "end": "479199"
  },
  {
    "text": "of that",
    "start": "479199",
    "end": "481440"
  },
  {
    "text": "here I have tetragon running on the top",
    "start": "482319",
    "end": "486680"
  },
  {
    "text": "Pane and on the bottom we're going to",
    "start": "486680",
    "end": "490840"
  },
  {
    "text": "first uh Create a Sim Link in the",
    "start": "490840",
    "end": "493240"
  },
  {
    "text": "regular way uh as you create a Sim link",
    "start": "493240",
    "end": "497280"
  },
  {
    "text": "on etwd and we're going to see how",
    "start": "497280",
    "end": "499759"
  },
  {
    "text": "tetragon detects that system",
    "start": "499759",
    "end": "503360"
  },
  {
    "text": "call okay so we can see",
    "start": "504960",
    "end": "508159"
  },
  {
    "text": "tetragon uh detected",
    "start": "508159",
    "end": "511039"
  },
  {
    "text": "CIS uh Sim Link at uh and you can see",
    "start": "511039",
    "end": "515839"
  },
  {
    "text": "like they triggered this alert when you",
    "start": "515839",
    "end": "517959"
  },
  {
    "text": "access a sensitive file so now let's use",
    "start": "517959",
    "end": "521800"
  },
  {
    "text": "the custom program I wrote uh using I",
    "start": "521800",
    "end": "524120"
  },
  {
    "text": "ring which",
    "start": "524120",
    "end": "526120"
  },
  {
    "text": "basically uh create the Sim link and",
    "start": "526120",
    "end": "529000"
  },
  {
    "text": "read the",
    "start": "529000",
    "end": "531800"
  },
  {
    "text": "+wd oops what's",
    "start": "531800",
    "end": "535880"
  },
  {
    "text": "up done",
    "start": "535880",
    "end": "539880"
  },
  {
    "text": "okay so let's go",
    "start": "551839",
    "end": "555279"
  },
  {
    "text": "back okay so uh using iing we",
    "start": "555279",
    "end": "559680"
  },
  {
    "text": "successfully uh read etwd again without",
    "start": "559680",
    "end": "563920"
  },
  {
    "text": "uh triggering that same alert over uh",
    "start": "563920",
    "end": "566720"
  },
  {
    "text": "the system call you can see that he",
    "start": "566720",
    "end": "568600"
  },
  {
    "text": "detected the process the exit but not",
    "start": "568600",
    "end": "570519"
  },
  {
    "text": "the system code itself so and iing is",
    "start": "570519",
    "end": "573560"
  },
  {
    "text": "interesting because it allows you to do",
    "start": "573560",
    "end": "575920"
  },
  {
    "text": "a lot of things not only create Sim",
    "start": "575920",
    "end": "577839"
  },
  {
    "text": "links but also to execute new processes",
    "start": "577839",
    "end": "580640"
  },
  {
    "text": "read and",
    "start": "580640",
    "end": "581920"
  },
  {
    "text": "write to files or sockets so you can",
    "start": "581920",
    "end": "585120"
  },
  {
    "text": "basically create an entire tool that",
    "start": "585120",
    "end": "587440"
  },
  {
    "text": "communicates over let's say to a CNC",
    "start": "587440",
    "end": "589440"
  },
  {
    "text": "server without triggering any system",
    "start": "589440",
    "end": "592040"
  },
  {
    "text": "calls at all uh so it's really",
    "start": "592040",
    "end": "595240"
  },
  {
    "text": "interesting and the next trick is",
    "start": "595240",
    "end": "598079"
  },
  {
    "text": "relatively easy and simple just use",
    "start": "598079",
    "end": "601160"
  },
  {
    "text": "alternative system calls so the way the",
    "start": "601160",
    "end": "603839"
  },
  {
    "text": "runtime detection tools work is usually",
    "start": "603839",
    "end": "606680"
  },
  {
    "text": "hooking hooking system calls but the",
    "start": "606680",
    "end": "609040"
  },
  {
    "text": "thing is that they usually hook the",
    "start": "609040",
    "end": "611680"
  },
  {
    "text": "common system calls uh for example this",
    "start": "611680",
    "end": "613959"
  },
  {
    "text": "is uh from a BPF open Snoop uh which is",
    "start": "613959",
    "end": "619320"
  },
  {
    "text": "uh they hook open and open at which is",
    "start": "619320",
    "end": "622040"
  },
  {
    "text": "the common system calls for opening",
    "start": "622040",
    "end": "623920"
  },
  {
    "text": "files but they don't hook open by handle",
    "start": "623920",
    "end": "627120"
  },
  {
    "text": "at and many of the famous tools also",
    "start": "627120",
    "end": "630399"
  },
  {
    "text": "don't hook that system call so you can",
    "start": "630399",
    "end": "632519"
  },
  {
    "text": "open files using that system call and",
    "start": "632519",
    "end": "634600"
  },
  {
    "text": "not the other system call and stay off",
    "start": "634600",
    "end": "637120"
  },
  {
    "text": "the",
    "start": "637120",
    "end": "639279"
  },
  {
    "text": "red the next trick this is like not",
    "start": "640920",
    "end": "643880"
  },
  {
    "text": "really usable uh too much but it's also",
    "start": "643880",
    "end": "646279"
  },
  {
    "text": "showcasing a bit of the the problem of",
    "start": "646279",
    "end": "649079"
  },
  {
    "text": "hooking just system calls is that you",
    "start": "649079",
    "end": "652120"
  },
  {
    "text": "can Implement your own uh uh system call",
    "start": "652120",
    "end": "655360"
  },
  {
    "text": "without doing the system call so for",
    "start": "655360",
    "end": "656920"
  },
  {
    "text": "example if you want to implement exit V",
    "start": "656920",
    "end": "659560"
  },
  {
    "text": "and there are a lot of PCS in a GitHub",
    "start": "659560",
    "end": "662120"
  },
  {
    "text": "for that so you can just allocate the",
    "start": "662120",
    "end": "665320"
  },
  {
    "text": "memory yourself load the dynamic Linker",
    "start": "665320",
    "end": "667680"
  },
  {
    "text": "or compile statically if you don't want",
    "start": "667680",
    "end": "669639"
  },
  {
    "text": "to then you need to map the executable",
    "start": "669639",
    "end": "671839"
  },
  {
    "text": "sections into memory set up the stack",
    "start": "671839",
    "end": "674959"
  },
  {
    "text": "and uh start your uh thread on the entry",
    "start": "674959",
    "end": "677519"
  },
  {
    "text": "point of the process and basically this",
    "start": "677519",
    "end": "680240"
  },
  {
    "text": "is uh the way to bypass execv system",
    "start": "680240",
    "end": "683920"
  },
  {
    "text": "call if you don't want to execute",
    "start": "683920",
    "end": "687320"
  },
  {
    "text": "it and the next week this is for me like",
    "start": "688079",
    "end": "691440"
  },
  {
    "text": "the biggest uh caveat with",
    "start": "691440",
    "end": "693959"
  },
  {
    "text": "ebpf and so in ebpf maps are are being",
    "start": "693959",
    "end": "699399"
  },
  {
    "text": "used uh for mainly like for a lot of",
    "start": "699399",
    "end": "702639"
  },
  {
    "text": "things the first one being that ebpf",
    "start": "702639",
    "end": "706079"
  },
  {
    "text": "stock size is limited to 512 bytes and",
    "start": "706079",
    "end": "709519"
  },
  {
    "text": "it's really small so a lot of the time",
    "start": "709519",
    "end": "712079"
  },
  {
    "text": "when you write",
    "start": "712079",
    "end": "713480"
  },
  {
    "text": "ebpf code you store your uh data inside",
    "start": "713480",
    "end": "717519"
  },
  {
    "text": "the maps and M maps are just Global Kel",
    "start": "717519",
    "end": "720920"
  },
  {
    "text": "objects so everyone with sufficient",
    "start": "720920",
    "end": "723880"
  },
  {
    "text": "permissions can access those maps and",
    "start": "723880",
    "end": "726839"
  },
  {
    "text": "those maps in runtime detection tools uh",
    "start": "726839",
    "end": "729399"
  },
  {
    "text": "usually are being used for communication",
    "start": "729399",
    "end": "732680"
  },
  {
    "text": "between the user mode controller and the",
    "start": "732680",
    "end": "735800"
  },
  {
    "text": "abpf program so for example if you think",
    "start": "735800",
    "end": "738320"
  },
  {
    "text": "about it uh how would you implement a",
    "start": "738320",
    "end": "741519"
  },
  {
    "text": "runtime detection tool let's say in",
    "start": "741519",
    "end": "743480"
  },
  {
    "text": "cuetes so you probably hold a map which",
    "start": "743480",
    "end": "748000"
  },
  {
    "text": "Maps like which containers are you",
    "start": "748000",
    "end": "750279"
  },
  {
    "text": "monitoring and which",
    "start": "750279",
    "end": "752720"
  },
  {
    "text": "processes and uh an attacker with",
    "start": "752720",
    "end": "755959"
  },
  {
    "text": "sufficient permissions can tamper tamper",
    "start": "755959",
    "end": "758399"
  },
  {
    "text": "with those maps and basically uh uh",
    "start": "758399",
    "end": "761920"
  },
  {
    "text": "cause the tool to not function but in a",
    "start": "761920",
    "end": "765760"
  },
  {
    "text": "relatively uh quiet way",
    "start": "765760",
    "end": "768600"
  },
  {
    "text": "because uh as we're going to see uh",
    "start": "768600",
    "end": "771399"
  },
  {
    "text": "you're not killing the agent you're not",
    "start": "771399",
    "end": "773959"
  },
  {
    "text": "doing anything uh disruptive but you're",
    "start": "773959",
    "end": "776600"
  },
  {
    "text": "just changing the data that the tool",
    "start": "776600",
    "end": "778760"
  },
  {
    "text": "relies",
    "start": "778760",
    "end": "780880"
  },
  {
    "text": "so if you want to see uh the maps you",
    "start": "780880",
    "end": "783160"
  },
  {
    "text": "can use for example BPF tool or you can",
    "start": "783160",
    "end": "785920"
  },
  {
    "text": "write your own code to iterate the maps",
    "start": "785920",
    "end": "787959"
  },
  {
    "text": "again they are Global Kel objects and",
    "start": "787959",
    "end": "789639"
  },
  {
    "text": "it's really really easy to access",
    "start": "789639",
    "end": "792560"
  },
  {
    "text": "them so let's see demo of tampering with",
    "start": "792560",
    "end": "796160"
  },
  {
    "text": "the",
    "start": "796160",
    "end": "798279"
  },
  {
    "text": "maps see if I can prove the",
    "start": "801920",
    "end": "806240"
  },
  {
    "text": "quality Okay so so again I have tetragon",
    "start": "806959",
    "end": "811279"
  },
  {
    "text": "in the above Pane and in the bottom I",
    "start": "811279",
    "end": "814360"
  },
  {
    "text": "have my",
    "start": "814360",
    "end": "815600"
  },
  {
    "text": "terminal and here I just did a cat on",
    "start": "815600",
    "end": "819120"
  },
  {
    "text": "Etsy Shadow and we can see tetragon",
    "start": "819120",
    "end": "821160"
  },
  {
    "text": "detected the read system call on a",
    "start": "821160",
    "end": "823519"
  },
  {
    "text": "sensitive",
    "start": "823519",
    "end": "824639"
  },
  {
    "text": "file but",
    "start": "824639",
    "end": "826800"
  },
  {
    "text": "now um I have I wrote a custom program",
    "start": "826800",
    "end": "831560"
  },
  {
    "text": "that",
    "start": "831560",
    "end": "833120"
  },
  {
    "text": "uh uh deletes all the keys from the",
    "start": "833120",
    "end": "837000"
  },
  {
    "text": "tetron map okay so the way they work",
    "start": "837000",
    "end": "840600"
  },
  {
    "text": "like commonly like the same as Tracy and",
    "start": "840600",
    "end": "843279"
  },
  {
    "text": "Falco and even cubc so they have the map",
    "start": "843279",
    "end": "847560"
  },
  {
    "text": "that holds a mapping between which",
    "start": "847560",
    "end": "849240"
  },
  {
    "text": "processes are being",
    "start": "849240",
    "end": "850600"
  },
  {
    "text": "monitored uh and then in the inside the",
    "start": "850600",
    "end": "853680"
  },
  {
    "text": "ebpf they have like a function that",
    "start": "853680",
    "end": "855880"
  },
  {
    "text": "filters out the processes that uh uh",
    "start": "855880",
    "end": "859680"
  },
  {
    "text": "like like events from processes they're",
    "start": "859680",
    "end": "861120"
  },
  {
    "text": "not monitoring so if I empty those Maps",
    "start": "861120",
    "end": "865120"
  },
  {
    "text": "uh basically the tool is not doing",
    "start": "865120",
    "end": "866680"
  },
  {
    "text": "anything you just installed there",
    "start": "866680",
    "end": "869600"
  },
  {
    "text": "so here I I took a uh a tool that",
    "start": "869600",
    "end": "874399"
  },
  {
    "text": "someone from a valley cyber company",
    "start": "874399",
    "end": "876160"
  },
  {
    "text": "wrote which uh empty the maps of Falco",
    "start": "876160",
    "end": "879560"
  },
  {
    "text": "and Tracy and basically disabled them",
    "start": "879560",
    "end": "882399"
  },
  {
    "text": "that way and I've added support for a",
    "start": "882399",
    "end": "885079"
  },
  {
    "text": "disabling tetragon so here I just",
    "start": "885079",
    "end": "888440"
  },
  {
    "text": "deleted the maps of tetragon and Cat the",
    "start": "888440",
    "end": "892759"
  },
  {
    "text": "shadow again and we can see uh no",
    "start": "892759",
    "end": "896279"
  },
  {
    "text": "monitoring uh on that",
    "start": "896279",
    "end": "901040"
  },
  {
    "text": "cool",
    "start": "905759",
    "end": "908759"
  },
  {
    "text": "again okay so the next triak really easy",
    "start": "911880",
    "end": "916040"
  },
  {
    "text": "but also in ebpf you need to know how to",
    "start": "916040",
    "end": "917880"
  },
  {
    "text": "protect yourself from that and it's just",
    "start": "917880",
    "end": "920800"
  },
  {
    "text": "killing the agent right at the end of",
    "start": "920800",
    "end": "922320"
  },
  {
    "text": "the day it's just a process if you're in",
    "start": "922320",
    "end": "924480"
  },
  {
    "text": "the same pit name space and you have",
    "start": "924480",
    "end": "925959"
  },
  {
    "text": "permissions you can just skill that",
    "start": "925959",
    "end": "927759"
  },
  {
    "text": "process and and uh in ebpf there are two",
    "start": "927759",
    "end": "931199"
  },
  {
    "text": "ways runtime detection tools can protect",
    "start": "931199",
    "end": "934440"
  },
  {
    "text": "themselves the first one being uh BPF",
    "start": "934440",
    "end": "937120"
  },
  {
    "text": "override return which is a function that",
    "start": "937120",
    "end": "939240"
  },
  {
    "text": "allows you to override the return",
    "start": "939240",
    "end": "940839"
  },
  {
    "text": "address of the function you're",
    "start": "940839",
    "end": "942600"
  },
  {
    "text": "hooking and but but the the thing is it",
    "start": "942600",
    "end": "945440"
  },
  {
    "text": "applies only for x86 you don't have it",
    "start": "945440",
    "end": "947839"
  },
  {
    "text": "in arm for",
    "start": "947839",
    "end": "949199"
  },
  {
    "text": "example and it's not always enabled so",
    "start": "949199",
    "end": "953160"
  },
  {
    "text": "uh here like the grap so you can see if",
    "start": "953160",
    "end": "955480"
  },
  {
    "text": "it's enabled and the second mechanism",
    "start": "955480",
    "end": "957839"
  },
  {
    "text": "which is more interesting is KSI which",
    "start": "957839",
    "end": "960319"
  },
  {
    "text": "basically allows you to play cbpf hooks",
    "start": "960319",
    "end": "963480"
  },
  {
    "text": "over uh LSM uh LSM Hooks and this is",
    "start": "963480",
    "end": "969160"
  },
  {
    "text": "interesting",
    "start": "969160",
    "end": "970399"
  },
  {
    "text": "because uh in in in difference from uh",
    "start": "970399",
    "end": "974160"
  },
  {
    "text": "Trace point and K probes for example uh",
    "start": "974160",
    "end": "977680"
  },
  {
    "text": "you can really modify the data and",
    "start": "977680",
    "end": "980240"
  },
  {
    "text": "control the return code of of those",
    "start": "980240",
    "end": "982399"
  },
  {
    "text": "functions and you can place them before",
    "start": "982399",
    "end": "985199"
  },
  {
    "text": "system calls and after system calls so",
    "start": "985199",
    "end": "988399"
  },
  {
    "text": "uh you have different functionality",
    "start": "988399",
    "end": "990199"
  },
  {
    "text": "using this mechanism uh so this is like",
    "start": "990199",
    "end": "993199"
  },
  {
    "text": "a more reliable way to stop this uh sort",
    "start": "993199",
    "end": "996759"
  },
  {
    "text": "of tampering and this can also uh help",
    "start": "996759",
    "end": "1001319"
  },
  {
    "text": "you prevent from the tampering with the",
    "start": "1001319",
    "end": "1003480"
  },
  {
    "text": "maps for example so what you can do if",
    "start": "1003480",
    "end": "1006720"
  },
  {
    "text": "we're going back for the previous trick",
    "start": "1006720",
    "end": "1008959"
  },
  {
    "text": "is placing those hooks detect when",
    "start": "1008959",
    "end": "1011360"
  },
  {
    "text": "someone is using the BPF system calls",
    "start": "1011360",
    "end": "1013199"
  },
  {
    "text": "for example and is's using it for",
    "start": "1013199",
    "end": "1015880"
  },
  {
    "text": "communication with maps and you can uh",
    "start": "1015880",
    "end": "1018920"
  },
  {
    "text": "check that it's not for example your",
    "start": "1018920",
    "end": "1020639"
  },
  {
    "text": "process that is communicating with the",
    "start": "1020639",
    "end": "1022199"
  },
  {
    "text": "map and uh detect uh the tempering that",
    "start": "1022199",
    "end": "1027480"
  },
  {
    "text": "way the next trick is event",
    "start": "1028199",
    "end": "1031640"
  },
  {
    "text": "exhaustion uh so as before again you can",
    "start": "1031640",
    "end": "1034720"
  },
  {
    "text": "use uh abuse the uh ebpf Maps because uh",
    "start": "1034720",
    "end": "1040678"
  },
  {
    "text": "for example the way let's say I want to",
    "start": "1040679",
    "end": "1043079"
  },
  {
    "text": "monitor um I don't know uh processes in",
    "start": "1043079",
    "end": "1046520"
  },
  {
    "text": "in a system so or or files let's go with",
    "start": "1046520",
    "end": "1049120"
  },
  {
    "text": "files so I want to monitor files I'm",
    "start": "1049120",
    "end": "1051160"
  },
  {
    "text": "going to save uh like the files I'm",
    "start": "1051160",
    "end": "1053240"
  },
  {
    "text": "monitoring in the",
    "start": "1053240",
    "end": "1054600"
  },
  {
    "text": "map and the thing is",
    "start": "1054600",
    "end": "1057440"
  },
  {
    "text": "that like an attacker can just uh create",
    "start": "1057440",
    "end": "1060880"
  },
  {
    "text": "a lot of fake requests let's say I want",
    "start": "1060880",
    "end": "1063280"
  },
  {
    "text": "to read Etsy Shadow so I'll just",
    "start": "1063280",
    "end": "1065720"
  },
  {
    "text": "generate uh thousands of events reading",
    "start": "1065720",
    "end": "1068880"
  },
  {
    "text": "uh I don't know like a slash temp",
    "start": "1068880",
    "end": "1071000"
  },
  {
    "text": "directory the the ebpf program is going",
    "start": "1071000",
    "end": "1074280"
  },
  {
    "text": "to be filled with events and once it's",
    "start": "1074280",
    "end": "1077000"
  },
  {
    "text": "filled with event because it's as",
    "start": "1077000",
    "end": "1078159"
  },
  {
    "text": "synchronically in it's not going to",
    "start": "1078159",
    "end": "1079480"
  },
  {
    "text": "block the the flow of the system call uh",
    "start": "1079480",
    "end": "1082919"
  },
  {
    "text": "so nothing is going to be saved into the",
    "start": "1082919",
    "end": "1085000"
  },
  {
    "text": "queue or to the maps and then there is",
    "start": "1085000",
    "end": "1087799"
  },
  {
    "text": "this uh thing called event drop so",
    "start": "1087799",
    "end": "1091039"
  },
  {
    "text": "basically uh like after bombing the the",
    "start": "1091039",
    "end": "1093840"
  },
  {
    "text": "ebpf program with fake data I can open",
    "start": "1093840",
    "end": "1097200"
  },
  {
    "text": "the file that I want and then uh I get",
    "start": "1097200",
    "end": "1100919"
  },
  {
    "text": "an undetected malicious activity that",
    "start": "1100919",
    "end": "1102600"
  },
  {
    "text": "way and I've put a link down here to the",
    "start": "1102600",
    "end": "1105679"
  },
  {
    "text": "repo uh so you can mess with it yourself",
    "start": "1105679",
    "end": "1110760"
  },
  {
    "text": "the next trick which is uh common when",
    "start": "1111080",
    "end": "1113320"
  },
  {
    "text": "coping buffering around is time of check",
    "start": "1113320",
    "end": "1116320"
  },
  {
    "text": "time fuse right so at the end of the day",
    "start": "1116320",
    "end": "1118840"
  },
  {
    "text": "ebpf uh runs in uh chal context most of",
    "start": "1118840",
    "end": "1122120"
  },
  {
    "text": "the time so uh when you copy the buffers",
    "start": "1122120",
    "end": "1125720"
  },
  {
    "text": "from user mode uh uh to Kel there is a",
    "start": "1125720",
    "end": "1129320"
  },
  {
    "text": "different uh uh uh like there is a",
    "start": "1129320",
    "end": "1131760"
  },
  {
    "text": "problem between the time of you checking",
    "start": "1131760",
    "end": "1133360"
  },
  {
    "text": "the data and the time of using the data",
    "start": "1133360",
    "end": "1136679"
  },
  {
    "text": "so uh it's really easy to create this",
    "start": "1136679",
    "end": "1139320"
  },
  {
    "text": "type of attack right so let's say again",
    "start": "1139320",
    "end": "1142159"
  },
  {
    "text": "I want to read the sensitive file inside",
    "start": "1142159",
    "end": "1143919"
  },
  {
    "text": "a a container so what I can do is write",
    "start": "1143919",
    "end": "1147679"
  },
  {
    "text": "a program with two threads and a Char",
    "start": "1147679",
    "end": "1151240"
  },
  {
    "text": "buffer which is the file that I want to",
    "start": "1151240",
    "end": "1153360"
  },
  {
    "text": "read and basically uh each like one of",
    "start": "1153360",
    "end": "1157000"
  },
  {
    "text": "the threads write the uh sensitive file",
    "start": "1157000",
    "end": "1160400"
  },
  {
    "text": "uh path that I want at the Shadow and",
    "start": "1160400",
    "end": "1162600"
  },
  {
    "text": "the other thread writes uh random string",
    "start": "1162600",
    "end": "1166559"
  },
  {
    "text": "for example and they can run together",
    "start": "1166559",
    "end": "1169840"
  },
  {
    "text": "and of course it's a race condition",
    "start": "1169840",
    "end": "1172280"
  },
  {
    "text": "right",
    "start": "1172280",
    "end": "1173440"
  },
  {
    "text": "because uh you might check it exactly",
    "start": "1173440",
    "end": "1176600"
  },
  {
    "text": "the the time you place the the sensitive",
    "start": "1176600",
    "end": "1179039"
  },
  {
    "text": "string but it can work so let's see a",
    "start": "1179039",
    "end": "1182640"
  },
  {
    "text": "demo of that as",
    "start": "1182640",
    "end": "1184640"
  },
  {
    "text": "well so again I'm abusing tetragon a lot",
    "start": "1184640",
    "end": "1188200"
  },
  {
    "text": "today but it also works on Falcon and",
    "start": "1188200",
    "end": "1190159"
  },
  {
    "text": "other tools uh so here I create a Sim",
    "start": "1190159",
    "end": "1193039"
  },
  {
    "text": "Link in the normal way we can see it",
    "start": "1193039",
    "end": "1196360"
  },
  {
    "text": "monitors it right you can see the Cisco",
    "start": "1196360",
    "end": "1199600"
  },
  {
    "text": "uh in the above pane it's a bit of",
    "start": "1199600",
    "end": "1203039"
  },
  {
    "text": "small and now I'm going to run the",
    "start": "1203039",
    "end": "1205240"
  },
  {
    "text": "custom program with the two threads we",
    "start": "1205240",
    "end": "1208360"
  },
  {
    "text": "can see we read the tpwd again uh but no",
    "start": "1208360",
    "end": "1214159"
  },
  {
    "text": "CIS was triggered in",
    "start": "1214159",
    "end": "1218240"
  },
  {
    "text": "tetron so the next rck uh is not really",
    "start": "1225440",
    "end": "1230919"
  },
  {
    "text": "uh too much related to ebpf but it's",
    "start": "1230919",
    "end": "1233000"
  },
  {
    "text": "more like a general trick for uh so it's",
    "start": "1233000",
    "end": "1236440"
  },
  {
    "text": "good to know so the way uh file system",
    "start": "1236440",
    "end": "1239799"
  },
  {
    "text": "in containers work is uh usually Union",
    "start": "1239799",
    "end": "1243640"
  },
  {
    "text": "uh uh file systems it's not like in",
    "start": "1243640",
    "end": "1246640"
  },
  {
    "text": "regular uh linuxes where you run xt4 for",
    "start": "1246640",
    "end": "1250240"
  },
  {
    "text": "example and the way this file system",
    "start": "1250240",
    "end": "1252440"
  },
  {
    "text": "work is having uh layers because if you",
    "start": "1252440",
    "end": "1256039"
  },
  {
    "text": "think about let's say you download uh",
    "start": "1256039",
    "end": "1257799"
  },
  {
    "text": "two images into your machine right and",
    "start": "1257799",
    "end": "1260320"
  },
  {
    "text": "both of them rely on obuntu as the base",
    "start": "1260320",
    "end": "1262120"
  },
  {
    "text": "image so there is no reason to hold two",
    "start": "1262120",
    "end": "1264799"
  },
  {
    "text": "times the entire obuntu file system uh",
    "start": "1264799",
    "end": "1267760"
  },
  {
    "text": "on the Node so uh the SM thing about",
    "start": "1267760",
    "end": "1271320"
  },
  {
    "text": "this type of file system is that uh they",
    "start": "1271320",
    "end": "1274480"
  },
  {
    "text": "divided into three layers and for",
    "start": "1274480",
    "end": "1277600"
  },
  {
    "text": "example if you take overlay FS which is",
    "start": "1277600",
    "end": "1279320"
  },
  {
    "text": "very common in containers so we have the",
    "start": "1279320",
    "end": "1281919"
  },
  {
    "text": "lower layer which is the root fs and",
    "start": "1281919",
    "end": "1284320"
  },
  {
    "text": "always mounted as read only and then you",
    "start": "1284320",
    "end": "1287880"
  },
  {
    "text": "have the upper layer which is new files",
    "start": "1287880",
    "end": "1289919"
  },
  {
    "text": "being created in the system or if you",
    "start": "1289919",
    "end": "1292520"
  },
  {
    "text": "write to any of the files in the lower",
    "start": "1292520",
    "end": "1295039"
  },
  {
    "text": "layer then uh copy and write is being",
    "start": "1295039",
    "end": "1298039"
  },
  {
    "text": "performed and you basically copy the uh",
    "start": "1298039",
    "end": "1301240"
  },
  {
    "text": "uh or create the new file into the upper",
    "start": "1301240",
    "end": "1304640"
  },
  {
    "text": "layer and eventually what you what you",
    "start": "1304640",
    "end": "1306960"
  },
  {
    "text": "get is the merge layer which is both the",
    "start": "1306960",
    "end": "1310279"
  },
  {
    "text": "lower layer and the upper layer",
    "start": "1310279",
    "end": "1312640"
  },
  {
    "text": "together and runtime detection tools can",
    "start": "1312640",
    "end": "1316679"
  },
  {
    "text": "really uh rely on this file system uh uh",
    "start": "1316679",
    "end": "1321159"
  },
  {
    "text": "structure and detected uh and detect",
    "start": "1321159",
    "end": "1323960"
  },
  {
    "text": "drifted binaries okay so if you think",
    "start": "1323960",
    "end": "1326559"
  },
  {
    "text": "about it when you write your application",
    "start": "1326559",
    "end": "1328120"
  },
  {
    "text": "as a developer and then you build it so",
    "start": "1328120",
    "end": "1331240"
  },
  {
    "text": "you buil the the application into an",
    "start": "1331240",
    "end": "1333919"
  },
  {
    "text": "image everything that is going to run or",
    "start": "1333919",
    "end": "1336679"
  },
  {
    "text": "at least the entry point if you uh",
    "start": "1336679",
    "end": "1339000"
  },
  {
    "text": "followed the right uh uh uh good",
    "start": "1339000",
    "end": "1342840"
  },
  {
    "text": "practices is going to be inside that",
    "start": "1342840",
    "end": "1346159"
  },
  {
    "text": "image right like you're not going to",
    "start": "1346159",
    "end": "1348840"
  },
  {
    "text": "download new binaries from third parties",
    "start": "1348840",
    "end": "1351200"
  },
  {
    "text": "so everything is going to be in the",
    "start": "1351200",
    "end": "1353880"
  },
  {
    "text": "lower layer and so new attackers when",
    "start": "1353880",
    "end": "1356720"
  },
  {
    "text": "coming to",
    "start": "1356720",
    "end": "1357720"
  },
  {
    "text": "machines uh if they download tools from",
    "start": "1357720",
    "end": "1361159"
  },
  {
    "text": "the outside let's say I'm I'm",
    "start": "1361159",
    "end": "1362720"
  },
  {
    "text": "downloading an agent I'm downloading",
    "start": "1362720",
    "end": "1364720"
  },
  {
    "text": "something so it's going to be in the",
    "start": "1364720",
    "end": "1366679"
  },
  {
    "text": "upper layer and runtime detection tools",
    "start": "1366679",
    "end": "1369600"
  },
  {
    "text": "uh can detect what's called drifted",
    "start": "1369600",
    "end": "1371840"
  },
  {
    "text": "processes or dri drifted binaries right",
    "start": "1371840",
    "end": "1374440"
  },
  {
    "text": "so they can detect when a process is",
    "start": "1374440",
    "end": "1376440"
  },
  {
    "text": "being executed from the upper l and not",
    "start": "1376440",
    "end": "1378919"
  },
  {
    "text": "from the lower layer and this is like",
    "start": "1378919",
    "end": "1381480"
  },
  {
    "text": "very easy to detect and uh an attacker",
    "start": "1381480",
    "end": "1384559"
  },
  {
    "text": "can easily avoid that by just using uh",
    "start": "1384559",
    "end": "1387320"
  },
  {
    "text": "stuff that in images right so you have",
    "start": "1387320",
    "end": "1390360"
  },
  {
    "text": "uh for example if you have curl or bash",
    "start": "1390360",
    "end": "1393880"
  },
  {
    "text": "okay so you don't need to download Cube",
    "start": "1393880",
    "end": "1395919"
  },
  {
    "text": "C in order to talk to the API server to",
    "start": "1395919",
    "end": "1398400"
  },
  {
    "text": "extract information you can use the Cur",
    "start": "1398400",
    "end": "1400720"
  },
  {
    "text": "that is on the machine and that way",
    "start": "1400720",
    "end": "1403360"
  },
  {
    "text": "prevent the that fingerprint so uh and",
    "start": "1403360",
    "end": "1407799"
  },
  {
    "text": "another meting ation is that if you as a",
    "start": "1407799",
    "end": "1411600"
  },
  {
    "text": "developer or as a company want to detect",
    "start": "1411600",
    "end": "1414200"
  },
  {
    "text": "your images and containers better try to",
    "start": "1414200",
    "end": "1417279"
  },
  {
    "text": "use uh minimal images or dist images",
    "start": "1417279",
    "end": "1421039"
  },
  {
    "text": "which basically uh will force the",
    "start": "1421039",
    "end": "1424240"
  },
  {
    "text": "attacker to download tools from the",
    "start": "1424240",
    "end": "1426200"
  },
  {
    "text": "outside and then you can detect them",
    "start": "1426200",
    "end": "1428520"
  },
  {
    "text": "that",
    "start": "1428520",
    "end": "1430679"
  },
  {
    "text": "way and here are some uh simple more",
    "start": "1431320",
    "end": "1435240"
  },
  {
    "text": "cool tricks uh so let's say you're",
    "start": "1435240",
    "end": "1438000"
  },
  {
    "text": "attacking",
    "start": "1438000",
    "end": "1439039"
  },
  {
    "text": "kubernetes and uh in kubernetes it's",
    "start": "1439039",
    "end": "1442440"
  },
  {
    "text": "very easy to detect when an attacker is",
    "start": "1442440",
    "end": "1444320"
  },
  {
    "text": "talking to an API server right so uh you",
    "start": "1444320",
    "end": "1448400"
  },
  {
    "text": "as an attacker instead of downloading",
    "start": "1448400",
    "end": "1450360"
  },
  {
    "text": "cctl and Performing cctl exac and then",
    "start": "1450360",
    "end": "1453760"
  },
  {
    "text": "basically what happens is that you talk",
    "start": "1453760",
    "end": "1455200"
  },
  {
    "text": "to the API server so if you're on the",
    "start": "1455200",
    "end": "1458279"
  },
  {
    "text": "same node already what you can do is to",
    "start": "1458279",
    "end": "1460640"
  },
  {
    "text": "use n center right so NS enter basically",
    "start": "1460640",
    "end": "1463559"
  },
  {
    "text": "allows you to enter the same namespace",
    "start": "1463559",
    "end": "1466039"
  },
  {
    "text": "as the",
    "start": "1466039",
    "end": "1467039"
  },
  {
    "text": "containers uh running in that node right",
    "start": "1467039",
    "end": "1470240"
  },
  {
    "text": "so a container is basically a process",
    "start": "1470240",
    "end": "1472159"
  },
  {
    "text": "with different name spaces C group maybe",
    "start": "1472159",
    "end": "1474360"
  },
  {
    "text": "C comp so what you can do is us an A",
    "start": "1474360",
    "end": "1477320"
  },
  {
    "text": "Center and then you uh save yourself the",
    "start": "1477320",
    "end": "1480919"
  },
  {
    "text": "communication with the API server and",
    "start": "1480919",
    "end": "1483399"
  },
  {
    "text": "that way execute uh and extract",
    "start": "1483399",
    "end": "1485799"
  },
  {
    "text": "information from that",
    "start": "1485799",
    "end": "1488159"
  },
  {
    "text": "container uh the second point is init",
    "start": "1488159",
    "end": "1490640"
  },
  {
    "text": "containers and ephemeral containers and",
    "start": "1490640",
    "end": "1493960"
  },
  {
    "text": "so basically in kubernetes you have",
    "start": "1493960",
    "end": "1496360"
  },
  {
    "text": "different types of containers you have",
    "start": "1496360",
    "end": "1498399"
  },
  {
    "text": "regular containers and in containers and",
    "start": "1498399",
    "end": "1500520"
  },
  {
    "text": "Emeral containers and then attacker if",
    "start": "1500520",
    "end": "1503480"
  },
  {
    "text": "you want to uh deploy a container let's",
    "start": "1503480",
    "end": "1505799"
  },
  {
    "text": "say I want to deploy my crypto Miner in",
    "start": "1505799",
    "end": "1508000"
  },
  {
    "text": "a kubernetes environment so uh sometimes",
    "start": "1508000",
    "end": "1513399"
  },
  {
    "text": "runtime detection tools and even",
    "start": "1513399",
    "end": "1515080"
  },
  {
    "text": "kubernetes itself had two CVS about",
    "start": "1515080",
    "end": "1518679"
  },
  {
    "text": "exactly that that they forget to monitor",
    "start": "1518679",
    "end": "1522480"
  },
  {
    "text": "uh init containers and Emeral containers",
    "start": "1522480",
    "end": "1524880"
  },
  {
    "text": "and they're just monitoring uh regular",
    "start": "1524880",
    "end": "1527320"
  },
  {
    "text": "containers so uh this is might be a good",
    "start": "1527320",
    "end": "1530880"
  },
  {
    "text": "shot to try those",
    "start": "1530880",
    "end": "1532600"
  },
  {
    "text": "containers and the last point is uh ebpf",
    "start": "1532600",
    "end": "1535480"
  },
  {
    "text": "root kits so kernel modules uh are very",
    "start": "1535480",
    "end": "1540200"
  },
  {
    "text": "easy to detect and all of the rtime",
    "start": "1540200",
    "end": "1542240"
  },
  {
    "text": "tools basically detect when you load a",
    "start": "1542240",
    "end": "1544279"
  },
  {
    "text": "kernel module and sometimes it's even",
    "start": "1544279",
    "end": "1546520"
  },
  {
    "text": "impossible to load the kernel module for",
    "start": "1546520",
    "end": "1548039"
  },
  {
    "text": "example if you if you use a Docker as",
    "start": "1548039",
    "end": "1550559"
  },
  {
    "text": "your run time uh Which is less common",
    "start": "1550559",
    "end": "1553080"
  },
  {
    "text": "today in kubis but Docker by default",
    "start": "1553080",
    "end": "1555559"
  },
  {
    "text": "come with the second profile that uh",
    "start": "1555559",
    "end": "1558520"
  },
  {
    "text": "prevents uh the system call of in it",
    "start": "1558520",
    "end": "1561760"
  },
  {
    "text": "module for loading kernel modules so",
    "start": "1561760",
    "end": "1564600"
  },
  {
    "text": "what you can do is basically abuse ebpf",
    "start": "1564600",
    "end": "1567200"
  },
  {
    "text": "for root kits as well and there are a",
    "start": "1567200",
    "end": "1569240"
  },
  {
    "text": "lot of examples for that and dbf today",
    "start": "1569240",
    "end": "1572880"
  },
  {
    "text": "can uh like there are amazing examples",
    "start": "1572880",
    "end": "1575600"
  },
  {
    "text": "in GitHub open source that you can just",
    "start": "1575600",
    "end": "1577840"
  },
  {
    "text": "download and play with uh whether it's",
    "start": "1577840",
    "end": "1580600"
  },
  {
    "text": "uh uh stealing Secrets or um even",
    "start": "1580600",
    "end": "1586840"
  },
  {
    "text": "creating like a socket so it's really",
    "start": "1586840",
    "end": "1591039"
  },
  {
    "text": "cool and basically that's it if you have",
    "start": "1591039",
    "end": "1594919"
  },
  {
    "text": "any",
    "start": "1594919",
    "end": "1597240"
  },
  {
    "text": "[Applause]",
    "start": "1597750",
    "end": "1604869"
  },
  {
    "text": "questions yeah",
    "start": "1605559",
    "end": "1609559"
  },
  {
    "text": "okay so we ask how we can tell that if",
    "start": "1619880",
    "end": "1622039"
  },
  {
    "text": "an evf program is being loaded uh into",
    "start": "1622039",
    "end": "1624720"
  },
  {
    "text": "the Cel so basically to load an ebpf",
    "start": "1624720",
    "end": "1628640"
  },
  {
    "text": "program you use the BPF system call so",
    "start": "1628640",
    "end": "1632799"
  },
  {
    "text": "uh as a runtime detection tool you can",
    "start": "1632799",
    "end": "1635640"
  },
  {
    "text": "just see if that system call is being",
    "start": "1635640",
    "end": "1637440"
  },
  {
    "text": "executed and then you can look on the",
    "start": "1637440",
    "end": "1639640"
  },
  {
    "text": "arguments see what exactly is being",
    "start": "1639640",
    "end": "1641200"
  },
  {
    "text": "loaded and that way uh tell if an abpf",
    "start": "1641200",
    "end": "1644600"
  },
  {
    "text": "program is being loaded",
    "start": "1644600",
    "end": "1648559"
  },
  {
    "text": "so uh when you load EF program you have",
    "start": "1652039",
    "end": "1654080"
  },
  {
    "text": "a slash C FS BPF usually uh and then",
    "start": "1654080",
    "end": "1659360"
  },
  {
    "text": "when ebpf program attaches you can look",
    "start": "1659360",
    "end": "1661600"
  },
  {
    "text": "there as",
    "start": "1661600",
    "end": "1664120"
  },
  {
    "text": "well",
    "start": "1665320",
    "end": "1668320"
  },
  {
    "text": "yeah yeah so if I'll go back back to it",
    "start": "1675480",
    "end": "1679799"
  },
  {
    "text": "for the iing so basically uh I uring",
    "start": "1679799",
    "end": "1684039"
  },
  {
    "text": "also relies on some system calls right",
    "start": "1684039",
    "end": "1686000"
  },
  {
    "text": "those three system calls U so you can",
    "start": "1686000",
    "end": "1689159"
  },
  {
    "text": "just detect those but it's a bit harder",
    "start": "1689159",
    "end": "1691919"
  },
  {
    "text": "to detect iing because uh",
    "start": "1691919",
    "end": "1696320"
  },
  {
    "text": "uh like there is also legitimate use of",
    "start": "1696320",
    "end": "1700240"
  },
  {
    "text": "iing uh so it's harder to detect that",
    "start": "1700240",
    "end": "1702880"
  },
  {
    "text": "you will need to other things uh from",
    "start": "1702880",
    "end": "1705600"
  },
  {
    "text": "those system calls",
    "start": "1705600",
    "end": "1709360"
  },
  {
    "text": "yes",
    "start": "1721840",
    "end": "1724840"
  },
  {
    "text": "okay",
    "start": "1726519",
    "end": "1727620"
  },
  {
    "text": "[Music]",
    "start": "1727620",
    "end": "1730740"
  },
  {
    "text": "so so if you do okay so we have ask if",
    "start": "1735039",
    "end": "1740639"
  },
  {
    "text": "Rob yeah so we ask if Rob can help in",
    "start": "1741279",
    "end": "1744600"
  },
  {
    "text": "avoiding detection",
    "start": "1744600",
    "end": "1747559"
  },
  {
    "text": "so",
    "start": "1747559",
    "end": "1749120"
  },
  {
    "text": "like if I think about it you know if you",
    "start": "1749120",
    "end": "1752080"
  },
  {
    "text": "perform a stack trace for example from",
    "start": "1752080",
    "end": "1754440"
  },
  {
    "text": "ebpf in order to get the call stock of",
    "start": "1754440",
    "end": "1757159"
  },
  {
    "text": "the of the system call and use R so",
    "start": "1757159",
    "end": "1760320"
  },
  {
    "text": "maybe like you can distr that but uh I",
    "start": "1760320",
    "end": "1764159"
  },
  {
    "text": "don't have any other good answer for",
    "start": "1764159",
    "end": "1766039"
  },
  {
    "text": "that now",
    "start": "1766039",
    "end": "1769240"
  },
  {
    "text": "yeah",
    "start": "1770679",
    "end": "1773679"
  },
  {
    "text": "and okay thank you",
    "start": "1774720",
    "end": "1779880"
  }
]