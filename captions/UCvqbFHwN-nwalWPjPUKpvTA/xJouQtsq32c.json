[
  {
    "text": "hello thank you for coming this is the container D deep dive session I'm in",
    "start": "4270",
    "end": "12429"
  },
  {
    "text": "which McGowan and myself will try to elucidate you know how container D works",
    "start": "12429",
    "end": "19270"
  },
  {
    "text": "a little bit we'd like to do it in a semi relaxed kind of mode we know it's",
    "start": "19270",
    "end": "24400"
  },
  {
    "text": "late in the conference and we're sure that you guys may have lots of questions so we're certainly here to answer any",
    "start": "24400",
    "end": "30279"
  },
  {
    "text": "questions Derek we'll go through all the decks and give you a nice nice demo Derek is a",
    "start": "30279",
    "end": "36280"
  },
  {
    "text": "maintainer from docker he's been keep closer is that louder is that better",
    "start": "36280",
    "end": "45580"
  },
  {
    "text": "well I'm sure the translators can probably hear me better too since they were in the room right so on to repeat",
    "start": "45580",
    "end": "53379"
  },
  {
    "text": "just a bit introducing Derek McGowan of docker he is a maintainer on container D he works",
    "start": "53379",
    "end": "60519"
  },
  {
    "text": "on all elements of it but you know focuses on a lot of the file system",
    "start": "60519",
    "end": "65710"
  },
  {
    "text": "components he's worked on docker distribution the docker registry been",
    "start": "65710",
    "end": "71140"
  },
  {
    "text": "around for a long time and he's got a lot to share okay I'm turning it over to",
    "start": "71140",
    "end": "76329"
  },
  {
    "text": "Derek all right huh buzz you guys hear me okay",
    "start": "76329",
    "end": "82549"
  },
  {
    "text": "good translators okay perfect so I'm gonna kind of start off with where we",
    "start": "82549",
    "end": "88770"
  },
  {
    "text": "left off in the intro I mean this is this was the architecture diagram that we were going through so before we kind",
    "start": "88770",
    "end": "97110"
  },
  {
    "text": "of had talked about some of the different use users of communities so",
    "start": "97110",
    "end": "102630"
  },
  {
    "text": "like the cubelet the different platforms Prometheus and this talk we're going to",
    "start": "102630",
    "end": "108270"
  },
  {
    "text": "focus more on the components inside so the different services that we have",
    "start": "108270",
    "end": "114780"
  },
  {
    "text": "available as well as the plug-in model that we're using in container D so to",
    "start": "114780",
    "end": "123869"
  },
  {
    "text": "start off container DS essentially it's a client-server model we have a smart",
    "start": "123869",
    "end": "129149"
  },
  {
    "text": "client the client implements all of the high-level interfaces so when you do",
    "start": "129149",
    "end": "134819"
  },
  {
    "text": "for example a pole operation the pole operation is actually implemented inside the client any sort of new functionality",
    "start": "134819",
    "end": "142709"
  },
  {
    "text": "that users are asking for most of those functionalities can actually be implemented in the client rather than on",
    "start": "142709",
    "end": "150000"
  },
  {
    "text": "the container d server the interfaces on the client they may change somewhat",
    "start": "150000",
    "end": "158370"
  },
  {
    "text": "rarely but well what we really focus on for stability with container D is our G",
    "start": "158370",
    "end": "165359"
  },
  {
    "text": "RPC interface so the G RPC interface gives you access to all the low-level components all our low-level interfaces",
    "start": "165359",
    "end": "172049"
  },
  {
    "text": "and we consider it to be stable anyone dot X container D client should be able",
    "start": "172049",
    "end": "178019"
  },
  {
    "text": "to use any any server",
    "start": "178019",
    "end": "183120"
  },
  {
    "text": "so sitting underneath inside the server we have we have our service layer so",
    "start": "183120",
    "end": "190430"
  },
  {
    "text": "container DS service interfaces these are what provide interfaces such as to",
    "start": "190430",
    "end": "198420"
  },
  {
    "text": "the content store to our snapshot or so we actually have a service layer that",
    "start": "198420",
    "end": "204720"
  },
  {
    "text": "can be used directly by plugins it can be used by the G RPC service it provides",
    "start": "204720",
    "end": "212670"
  },
  {
    "text": "access to each of the components and then we have a metadata store that sits",
    "start": "212670",
    "end": "219329"
  },
  {
    "text": "right underneath it so our metadata store is what will actually provide all the namespace scene inside of container",
    "start": "219329",
    "end": "224790"
  },
  {
    "text": "D it's what adds all of the labels and it is actually sitting on top of the",
    "start": "224790",
    "end": "232590"
  },
  {
    "text": "snapshot ER and content store which talked to the which actually store data on disk so that you could have data",
    "start": "232590",
    "end": "239879"
  },
  {
    "text": "that's on disk for one user and another user potentially using the same data or",
    "start": "239879",
    "end": "246269"
  },
  {
    "text": "different data on disk but all that's going to be managed by the metadata store so think of the metadata stores",
    "start": "246269",
    "end": "254850"
  },
  {
    "text": "it's it's just it's just a bolt database in container D it is top level key is",
    "start": "254850",
    "end": "261720"
  },
  {
    "text": "the actual namespace it was designed this way in order to support multiple clients so if your the CRI plug-in your",
    "start": "261720",
    "end": "269160"
  },
  {
    "text": "recent a namespace called Katie's i/o if your docker you're using the namespace",
    "start": "269160",
    "end": "275220"
  },
  {
    "text": "called Moby when you're using CTR the namespaces just called default but you",
    "start": "275220",
    "end": "282300"
  },
  {
    "text": "can set your namespace to anything and under that namespace we you have your",
    "start": "282300",
    "end": "289950"
  },
  {
    "text": "images you have your containers and each of those are only for that given",
    "start": "289950",
    "end": "295020"
  },
  {
    "text": "namespace so the images that you pull such as through CRI you won't",
    "start": "295020",
    "end": "301289"
  },
  {
    "text": "necessarily see those with docker or or if you go through CTR unless you actually specify those specific",
    "start": "301289",
    "end": "306990"
  },
  {
    "text": "namespaces and also allows us to have",
    "start": "306990",
    "end": "312580"
  },
  {
    "text": "our labeling system namespace just that we also store our pod configuration and",
    "start": "312580",
    "end": "319270"
  },
  {
    "text": "container configuration in the metadata and labels yeah so the labeling system is just a",
    "start": "319270",
    "end": "326860"
  },
  {
    "text": "it's fairly robust it's just key value stores every object and container D can",
    "start": "326860",
    "end": "333099"
  },
  {
    "text": "have a label and",
    "start": "333099",
    "end": "337319"
  },
  {
    "text": "of how that data is structured so we have data types for images we have data",
    "start": "338800",
    "end": "344590"
  },
  {
    "text": "types for containers content which think of content is just a blob of data",
    "start": "344590",
    "end": "350580"
  },
  {
    "text": "referenced by a hash so if you're familiar with the registry API at all there's like a blobs endpoint which just",
    "start": "350580",
    "end": "357879"
  },
  {
    "text": "is referenced by hash OCI images descriptors they always point to a",
    "start": "357879",
    "end": "364659"
  },
  {
    "text": "specific hash so the content store is just what actually stores those blobs of",
    "start": "364659",
    "end": "370690"
  },
  {
    "text": "data so in container D we decided we need a we need a way to track all of",
    "start": "370690",
    "end": "376659"
  },
  {
    "text": "this data which could potentially get kind of large a problem that people",
    "start": "376659",
    "end": "382419"
  },
  {
    "text": "often have with docker is after they've been using docker for a while there just starts to fill up and we've added some",
    "start": "382419",
    "end": "390610"
  },
  {
    "text": "stuff within docker like pruning that can actually help reduce some of that usage but in the end it's it's kind of",
    "start": "390610",
    "end": "398949"
  },
  {
    "text": "harder at least in the data model that docker has to clean up data so for",
    "start": "398949",
    "end": "406360"
  },
  {
    "text": "container D we decided to build that in from the beginning by having actually",
    "start": "406360",
    "end": "411400"
  },
  {
    "text": "references between the data and having top-level references that users would be",
    "start": "411400",
    "end": "416889"
  },
  {
    "text": "more familiar with such as images and containers so when you go to pull an",
    "start": "416889",
    "end": "422289"
  },
  {
    "text": "image it's going to pull down all the content and then it's going to create an image that's going to point at that",
    "start": "422289",
    "end": "427690"
  },
  {
    "text": "content so in this chart I tried to demonstrate what what your what the",
    "start": "427690",
    "end": "436300"
  },
  {
    "text": "container deed meditative store might look like if you had two images and you had a running container so the Redis",
    "start": "436300",
    "end": "443110"
  },
  {
    "text": "container will be based off the Redis image that was pulled from the registry and all these arrows in between in",
    "start": "443110",
    "end": "452669"
  },
  {
    "text": "container D these are actually just labels but to the garbage collector",
    "start": "452669",
    "end": "459370"
  },
  {
    "text": "they look like references so that we know what what can actually be kept and what can be removed",
    "start": "459370",
    "end": "466680"
  },
  {
    "text": "so if we were to come in and now say delete the Redis container even with a",
    "start": "466680",
    "end": "472410"
  },
  {
    "text": "or delete the Redis image even with the Redis container running the immediate",
    "start": "472410",
    "end": "477720"
  },
  {
    "text": "result would just be this the image is gone there's no longer a link between",
    "start": "477720",
    "end": "483240"
  },
  {
    "text": "that image and the content that is reference that's being referenced by",
    "start": "483240",
    "end": "488699"
  },
  {
    "text": "that image the garbage collector is going to come along it's going to see that there's content here that is no",
    "start": "488699",
    "end": "495690"
  },
  {
    "text": "longer referenced by a root and it's going to go ahead and and delete delete",
    "start": "495690",
    "end": "502169"
  },
  {
    "text": "that content and as you can see when as soon as that content gets deleted the",
    "start": "502169",
    "end": "507240"
  },
  {
    "text": "links go away what I said before how each of the each of the pieces of data",
    "start": "507240",
    "end": "515640"
  },
  {
    "text": "in container D can have labels and those links are just part of those labels so",
    "start": "515640",
    "end": "521190"
  },
  {
    "text": "once the content is gone or all the links so the end result is just going to",
    "start": "521190",
    "end": "527250"
  },
  {
    "text": "look like this we still have a Redis container running the Redis image is",
    "start": "527250",
    "end": "532740"
  },
  {
    "text": "completely gone notice here in this in this the snapshots is still going to",
    "start": "532740",
    "end": "538950"
  },
  {
    "text": "have that that Redis unpacked layer but there's no more image associated with it",
    "start": "538950",
    "end": "547260"
  },
  {
    "text": "so if now we're to come in and delete that container normally when we delete a",
    "start": "547260",
    "end": "555060"
  },
  {
    "text": "container we also delete the root snapshot",
    "start": "555060",
    "end": "560240"
  },
  {
    "text": "the results going to be the same where this link is going to disappear the",
    "start": "561190",
    "end": "567460"
  },
  {
    "text": "garbage collector is going to come along and it's actually going to delete that Redis layer as it's no longer referenced",
    "start": "567460",
    "end": "575100"
  },
  {
    "text": "and in the end you're just going to end up with I think what you'd expect which",
    "start": "575100",
    "end": "580660"
  },
  {
    "text": "is we still have that Alpine image the content and the the unpacked layer on",
    "start": "580660",
    "end": "587530"
  },
  {
    "text": "disk so let me switch over to talk to talk",
    "start": "587530",
    "end": "595019"
  },
  {
    "text": "about plugins for the snapshot er if anyone has any questions as Mike was",
    "start": "595019",
    "end": "601410"
  },
  {
    "text": "saying we can answer some of them along the way it's kind of a kind of a big room but if you have questions a lot",
    "start": "601410",
    "end": "609600"
  },
  {
    "text": "about some of the data model go ahead and ask them so there's not too many at the end",
    "start": "609600",
    "end": "616200"
  },
  {
    "text": "okay so for the what a snapshot are looks like the snap shutter is a fairly",
    "start": "616200",
    "end": "623459"
  },
  {
    "text": "simple interface if you're familiar with kind of the graph drivers that we have",
    "start": "623459",
    "end": "630510"
  },
  {
    "text": "in docker there's there's a lot more operations you'd expect whereas for the snapshot er there's no data operations",
    "start": "630510",
    "end": "637860"
  },
  {
    "text": "there's no mounting operations we have immutability for snapshots as in once",
    "start": "637860",
    "end": "645690"
  },
  {
    "text": "you create a new snapshot and you commit it that snapshot is immutable there's no",
    "start": "645690",
    "end": "652260"
  },
  {
    "text": "way through the API to mutate that that snapshot anymore snapshots themselves",
    "start": "652260",
    "end": "659519"
  },
  {
    "text": "can be labeled as you saw in the previous diagram some of those links",
    "start": "659519",
    "end": "665550"
  },
  {
    "text": "although the garbage collector doesn't need to use labels to create those links since snapshots actually have a natural",
    "start": "665550",
    "end": "674399"
  },
  {
    "text": "hierarchy when you prepare a snapshot you always give it the parent of which you're creating a snapshot from",
    "start": "674399",
    "end": "682279"
  },
  {
    "text": "you so we also have the ability to enumerate",
    "start": "682840",
    "end": "688950"
  },
  {
    "text": "all the snapshot set you have on disk so this is implemented through the walk functionality so you can use the walk to",
    "start": "688950",
    "end": "696600"
  },
  {
    "text": "to see all the snapshots that you have and CTR and tool you can make use of",
    "start": "696600",
    "end": "702000"
  },
  {
    "text": "that so in 1.2 we added a feature called a",
    "start": "702000",
    "end": "708050"
  },
  {
    "text": "proxy snapshot err so today we have three proc or C we have three snapshot",
    "start": "708050",
    "end": "715950"
  },
  {
    "text": "eyes that are built-in maybe for three or four snap shutters built in the main",
    "start": "715950",
    "end": "722010"
  },
  {
    "text": "ones being overlay FS and then and yes the most popular one and the native",
    "start": "722010",
    "end": "728910"
  },
  {
    "text": "driver which is just a flat which is every layer is just the full flat",
    "start": "728910",
    "end": "735870"
  },
  {
    "text": "structure kind of like the naive driver and docker so",
    "start": "735870",
    "end": "743750"
  },
  {
    "text": "what a proxy snapchatter allows is you can actually use in a configuration you",
    "start": "743750",
    "end": "751200"
  },
  {
    "text": "can configure a UNIX socket to actually",
    "start": "751200",
    "end": "757160"
  },
  {
    "text": "represent a snapshot ur and in that unit socket serve a gr PC API of our snapshot",
    "start": "757160",
    "end": "765149"
  },
  {
    "text": "or interface so if you have this implemented we have AG RPC interface set",
    "start": "765149",
    "end": "771990"
  },
  {
    "text": "mirrors this and can actually be made",
    "start": "771990",
    "end": "777149"
  },
  {
    "text": "available through G RPC so to configure",
    "start": "777149",
    "end": "782190"
  },
  {
    "text": "it today you would update the Etsy container D config tamil there's a line",
    "start": "782190",
    "end": "788610"
  },
  {
    "text": "in there called proxy plugins let's type snapshot and you just give it a UNIX",
    "start": "788610",
    "end": "793620"
  },
  {
    "text": "socket so this is an example of how you would create one so the second line in",
    "start": "793620",
    "end": "799560"
  },
  {
    "text": "the main function a custom snapshot er all that is is an implementation of the",
    "start": "799560",
    "end": "804779"
  },
  {
    "text": "previous interface that I showed register that with a G RPC service start",
    "start": "804779",
    "end": "810720"
  },
  {
    "text": "listening and then container D to make use of it now one of the one of the reasons why",
    "start": "810720",
    "end": "817380"
  },
  {
    "text": "this is somewhat practical with snapshots and the way we designed it is the same since since there is no",
    "start": "817380",
    "end": "824100"
  },
  {
    "text": "mounting and there is no data operations the API is pretty light that what",
    "start": "824100",
    "end": "830490"
  },
  {
    "text": "actually gets requested of the snapshot err and what gets returned by the snapshot err is is mostly metadata in",
    "start": "830490",
    "end": "837270"
  },
  {
    "text": "nature there's not a lot of transactional operations that need to happen between different runs of the",
    "start": "837270",
    "end": "844920"
  },
  {
    "text": "snapshot or so it can act fairly stateless",
    "start": "844920",
    "end": "849529"
  },
  {
    "text": "so we also added in 1.2 but we didn't add but we stabilized this API so this",
    "start": "851279",
    "end": "858430"
  },
  {
    "text": "is our our sim API essentially what it",
    "start": "858430",
    "end": "863829"
  },
  {
    "text": "allows is when you go to run a container you can specify what your runtime is and",
    "start": "863829",
    "end": "869879"
  },
  {
    "text": "1.2 we added a feature where in addition to just specifying a runtime by name",
    "start": "869879",
    "end": "877779"
  },
  {
    "text": "that name can actually represent a binary and that binary as long as it",
    "start": "877779",
    "end": "883209"
  },
  {
    "text": "serves up when it runs they can bind to a port and serve up this interface and",
    "start": "883209",
    "end": "890370"
  },
  {
    "text": "act as the shim for your container that's running so today you have to have",
    "start": "890370",
    "end": "898350"
  },
  {
    "text": "there's always a there's at most one shim per container but now we have the",
    "start": "898350",
    "end": "904240"
  },
  {
    "text": "ability to actually share the shims between multiple containers so this is",
    "start": "904240",
    "end": "909490"
  },
  {
    "text": "really practical for use cases such as Kotik containers where it's more",
    "start": "909490",
    "end": "915459"
  },
  {
    "text": "desirable to have a single shim process that maps to a VM rather than map into",
    "start": "915459",
    "end": "921970"
  },
  {
    "text": "the containers that get started through the container dapi so the main feature",
    "start": "921970",
    "end": "928720"
  },
  {
    "text": "here stabilization but we also added a stats API here whereas previously and",
    "start": "928720",
    "end": "936309"
  },
  {
    "text": "container t10 and 1.1 to get stats you would have to actually talk to see",
    "start": "936309",
    "end": "941439"
  },
  {
    "text": "groups on the hosts which as you can imagine is problematic when you're",
    "start": "941439",
    "end": "947589"
  },
  {
    "text": "running inside of a VM you can't make use of those stats so this allows any",
    "start": "947589",
    "end": "954279"
  },
  {
    "text": "runtime to to fully implement this interface and be much more",
    "start": "954279",
    "end": "961449"
  },
  {
    "text": "much more useful to a broader range of runtimes",
    "start": "961449",
    "end": "966029"
  },
  {
    "text": "you",
    "start": "966480",
    "end": "968540"
  },
  {
    "text": "so those are the two of the main extension points inside the Damon",
    "start": "972830",
    "end": "978980"
  },
  {
    "text": "the other way to kind of extend container D today is in the client so",
    "start": "979320",
    "end": "988490"
  },
  {
    "text": "the client extensibility is mostly through our go interfaces so we chose to",
    "start": "988490",
    "end": "994350"
  },
  {
    "text": "take an approach in our go client where pretty much anything can be swapped out",
    "start": "994350",
    "end": "999410"
  },
  {
    "text": "so I gave an example of when you actually estancia taken a nerdy client",
    "start": "999410",
    "end": "1005300"
  },
  {
    "text": "we have this service object which is responsible for actually connecting to",
    "start": "1005300",
    "end": "1010760"
  },
  {
    "text": "these services that would be served by the G RBC API and when you'e Stan she",
    "start": "1010760",
    "end": "1019130"
  },
  {
    "text": "ate that service you can overwrite any of the individual services with any",
    "start": "1019130",
    "end": "1024230"
  },
  {
    "text": "implementation so the arguments to all of these are mostly just the interfaces",
    "start": "1024230",
    "end": "1030589"
  },
  {
    "text": "that container D itself has defined and uses all over the place such as with",
    "start": "1030590",
    "end": "1037189"
  },
  {
    "text": "snapchatters this snapchatter interface is that same interface I showed before you could actually add your own custom",
    "start": "1037190",
    "end": "1043699"
  },
  {
    "text": "snap shutters directly on the client if you wanted which would completely bypass",
    "start": "1043700",
    "end": "1049250"
  },
  {
    "text": "the going to the going to the daemon",
    "start": "1049250",
    "end": "1055490"
  },
  {
    "text": "this is used by the CRI plug-in as well so the CRI plug-in even though it's",
    "start": "1055490",
    "end": "1061040"
  },
  {
    "text": "running inside the daemon it actually uses the container D client and it",
    "start": "1061040",
    "end": "1067730"
  },
  {
    "text": "justice Stan sheets all of these services with a local service so it can",
    "start": "1067730",
    "end": "1073309"
  },
  {
    "text": "be run both externally or internally without having any changes in the way",
    "start": "1073309",
    "end": "1079040"
  },
  {
    "text": "it's designed I also wanted to highlight it's it's not absolutely obvious at",
    "start": "1079040",
    "end": "1088340"
  },
  {
    "text": "first what the what a resolver means but the with resolver is an option that you",
    "start": "1088340",
    "end": "1093800"
  },
  {
    "text": "can give on any push and pull operation think of the resolver as a way to take a",
    "start": "1093800",
    "end": "1099050"
  },
  {
    "text": "name and resolve it to a method for getting bytes or getting the blobs for",
    "start": "1099050",
    "end": "1105410"
  },
  {
    "text": "for that image so in a pull flow that",
    "start": "1105410",
    "end": "1110420"
  },
  {
    "text": "would look like a process of resolving a name to a manifest and then just having",
    "start": "1110420",
    "end": "1115700"
  },
  {
    "text": "a way to pull down the blobs further for that manifest so it's it's somewhat OCI",
    "start": "1115700",
    "end": "1123500"
  },
  {
    "text": "specific in that it assumes that you have OCI manifests and and tar blobs but",
    "start": "1123500",
    "end": "1130850"
  },
  {
    "text": "using this functionality you could actually completely overwrite how you do",
    "start": "1130850",
    "end": "1136520"
  },
  {
    "text": "distribution in container d you can have it something that's completely customized if you don't want to use the",
    "start": "1136520",
    "end": "1144880"
  },
  {
    "text": "the to find docker base implementation that's now the OCI distribution spec",
    "start": "1144880",
    "end": "1154070"
  },
  {
    "text": "so pull flow ends up looking like this in container D this is completely orchestrated by the client when a pull",
    "start": "1154080",
    "end": "1160980"
  },
  {
    "text": "operation runs that can be broken down into a fetch operation the fetch gets",
    "start": "1160980",
    "end": "1167580"
  },
  {
    "text": "all the content from the remote it puts it inside the content store once all",
    "start": "1167580",
    "end": "1173190"
  },
  {
    "text": "that content is fetched the pol will create an image that points to the manifests after that image is created",
    "start": "1173190",
    "end": "1181280"
  },
  {
    "text": "that's when we actually do the unpack which will read the content that has been pulled and verified inside of the",
    "start": "1181280",
    "end": "1189000"
  },
  {
    "text": "container D content store and it will unpack it into a snapshot er",
    "start": "1189000",
    "end": "1194990"
  },
  {
    "text": "so the end result here is that you have an image that both has the content and",
    "start": "1195230",
    "end": "1201139"
  },
  {
    "text": "you're unpacked snapshot on disk",
    "start": "1201139",
    "end": "1205870"
  },
  {
    "text": "so the push flow is very simplified as well in container D since we have the",
    "start": "1213900",
    "end": "1222310"
  },
  {
    "text": "content container D defines no method of",
    "start": "1222310",
    "end": "1227359"
  },
  {
    "text": "creation of that content we defer that to tools like don't get so from",
    "start": "1227359",
    "end": "1235639"
  },
  {
    "text": "container DS perspective that has images in s content and when you go to do a push operation it just takes that",
    "start": "1235639",
    "end": "1242239"
  },
  {
    "text": "content and it pushes it directly to the remote in a docker flow there would be",
    "start": "1242239",
    "end": "1248690"
  },
  {
    "text": "an extra step here that would be reading from a graph driver in order to to recreate the content recreate all the",
    "start": "1248690",
    "end": "1255019"
  },
  {
    "text": "manifests none of that is done in this flow here",
    "start": "1255019",
    "end": "1260320"
  },
  {
    "text": "you so then the flow that we have today for running for actually right in the",
    "start": "1263130",
    "end": "1269539"
  },
  {
    "text": "container so once we have these images and snapshots on disk the first step is",
    "start": "1269539",
    "end": "1275059"
  },
  {
    "text": "always we're going to initialize the container by reading reading that image",
    "start": "1275059",
    "end": "1281620"
  },
  {
    "text": "pull or looking at the OCI image specification creating the snapshot or",
    "start": "1281620",
    "end": "1290240"
  },
  {
    "text": "that's going to be used so it can either create a new snapshot or it can use a snapshot or any any route on disk that",
    "start": "1290240",
    "end": "1299750"
  },
  {
    "text": "you give it it's going to set up the container so it actually creates a",
    "start": "1299750",
    "end": "1304850"
  },
  {
    "text": "container object which is going to have a reference to now in OCI configuration as well as a snapshot ur and then once",
    "start": "1304850",
    "end": "1311929"
  },
  {
    "text": "that container is created it's going to actually start the task and what the task when that task starts is going to",
    "start": "1311929",
    "end": "1318289"
  },
  {
    "text": "mount that snapshot and then actually call out to run C to start the container",
    "start": "1318289",
    "end": "1324520"
  },
  {
    "text": "remember earlier when I was talking about it snapshot are not having the responsibility to mounts we move that",
    "start": "1324520",
    "end": "1331730"
  },
  {
    "text": "responsibility to the running container step so by having the running containers",
    "start": "1331730",
    "end": "1339020"
  },
  {
    "text": "actually deal with the mounts we no longer have to worry about inside the snapshot ur various issues around mount",
    "start": "1339020",
    "end": "1347690"
  },
  {
    "text": "namespacing and cleaning up some of those mounts and how many times those",
    "start": "1347690",
    "end": "1353210"
  },
  {
    "text": "snapshots had actually been mounted and Mike you want to talk about anybody have",
    "start": "1353210",
    "end": "1361580"
  },
  {
    "text": "any more questions or any questions everybody tired after lunch",
    "start": "1361580",
    "end": "1367730"
  },
  {
    "text": "sungeum thanks Mac hi Dirk you have done a great job I have a little confusion",
    "start": "1373620",
    "end": "1382000"
  },
  {
    "text": "about the GC connect to the copy's connector yeah if we delete an image",
    "start": "1382000",
    "end": "1390270"
  },
  {
    "text": "then the word image information help it elated even though the the container is",
    "start": "1390270",
    "end": "1397870"
  },
  {
    "text": "running so I have Cochin is that if the upper Sitton want to know the containers",
    "start": "1397870",
    "end": "1405039"
  },
  {
    "text": "image information how do we do that oh thanks yes so in that case it's it's",
    "start": "1405039",
    "end": "1412450"
  },
  {
    "text": "really the responsibility of the the client to determine whether or not it's",
    "start": "1412450",
    "end": "1417520"
  },
  {
    "text": "okay to go and delete that image so in the kubernetes case it's it would be the",
    "start": "1417520",
    "end": "1423760"
  },
  {
    "text": "CRI plug-in that would first check to see whether or not this image is used if",
    "start": "1423760",
    "end": "1429510"
  },
  {
    "text": "the client can implement this in different ways it could also set a label on the container that says what the",
    "start": "1429510",
    "end": "1434980"
  },
  {
    "text": "image name is but at least from dock or from the data model that we have in here",
    "start": "1434980",
    "end": "1444299"
  },
  {
    "text": "or we're not opinionated about whether or not whether or not that container",
    "start": "1444299",
    "end": "1451000"
  },
  {
    "text": "should be linked to that name after it is created at least from from",
    "start": "1451000",
    "end": "1457210"
  },
  {
    "text": "here we don't have a bunch of checks that would go in and try to kind of define these policies so this policy",
    "start": "1457210",
    "end": "1464649"
  },
  {
    "text": "start up to see how I plug-in or pouch to to do so that was a very good",
    "start": "1464649",
    "end": "1471460"
  },
  {
    "text": "question take take me along basically what we do is we when we receive a",
    "start": "1471460",
    "end": "1478029"
  },
  {
    "text": "request to create a pot or a container okay then we store it using their metadata feature all right and then when",
    "start": "1478029",
    "end": "1485380"
  },
  {
    "text": "we need to find it again for any purpose for example we want to do an update at the container image then what we would",
    "start": "1485380",
    "end": "1491830"
  },
  {
    "text": "do is go look at our our cache copy in the metadata we don't go looking at the original image okay but when we decide",
    "start": "1491830",
    "end": "1500110"
  },
  {
    "text": "okay yeah he's gotta move this as you know check for updated images then",
    "start": "1500110",
    "end": "1505240"
  },
  {
    "text": "what we'll do is we'll go back to energy and we'll see if we can get you know an updated image and then he'll go copy it",
    "start": "1505240",
    "end": "1513120"
  },
  {
    "text": "so he he sort of forgets that he deleted it or he doesn't really care because we're asking for the latest right might",
    "start": "1513120",
    "end": "1519070"
  },
  {
    "text": "be calling lateness and and then we get the new image and we you know refresh the container then we tell kubernetes",
    "start": "1519070",
    "end": "1525700"
  },
  {
    "text": "yep we said we updated it for you right and then we update the metadata again",
    "start": "1525700",
    "end": "1531340"
  },
  {
    "text": "flat container okay good question",
    "start": "1531340",
    "end": "1536940"
  },
  {
    "text": "my question is well something about money tenancy and because for a we want",
    "start": "1542130",
    "end": "1550770"
  },
  {
    "text": "to run the pod you need the images proportion and a I already put an image",
    "start": "1550770",
    "end": "1558660"
  },
  {
    "text": "to this note but henan be supposed to not have access to this image but he can",
    "start": "1558660",
    "end": "1563820"
  },
  {
    "text": "guess and try and maybe he is successful run a Latinas image because the image",
    "start": "1563820",
    "end": "1569190"
  },
  {
    "text": "already on a note and he he just get the process is there any kind of this",
    "start": "1569190",
    "end": "1575340"
  },
  {
    "text": "roadmap to prohibit this kind of situation happened so there's there's",
    "start": "1575340",
    "end": "1582390"
  },
  {
    "text": "two features that we have and community to both support that and disallow it so",
    "start": "1582390",
    "end": "1589140"
  },
  {
    "text": "the default behavior is that when when you have content that's pulled between",
    "start": "1589140",
    "end": "1596070"
  },
  {
    "text": "two namespaces when it goes to create the content in the second namespace it it sees that that content is there it'll",
    "start": "1596070",
    "end": "1603150"
  },
  {
    "text": "actually be able to copy that but we do have a feature in container D",
    "start": "1603150",
    "end": "1609960"
  },
  {
    "text": "where you can disallow that so it's it's like a strict mode where every single namespace is responsible for repo lling",
    "start": "1609960",
    "end": "1617460"
  },
  {
    "text": "that content verifying it and after it has verified it it goes to commit that",
    "start": "1617460",
    "end": "1622710"
  },
  {
    "text": "content on the on the back end it will share the content but it first has to go",
    "start": "1622710",
    "end": "1628980"
  },
  {
    "text": "through the verification step before it will add it into the new namespace so",
    "start": "1628980",
    "end": "1634080"
  },
  {
    "text": "that's that's similar to how the registry works today whereas the registry you can't just tell it you're",
    "start": "1634080",
    "end": "1640309"
  },
  {
    "text": "you're creating content you are you already have it you actually have to prove that you have it so we both have a",
    "start": "1640309",
    "end": "1646200"
  },
  {
    "text": "a mode where you have to prove it but by default we don't have that since we",
    "start": "1646200",
    "end": "1653460"
  },
  {
    "text": "don't really we haven't really defined how the security model on top of container D should work it's really up",
    "start": "1653460",
    "end": "1659130"
  },
  {
    "text": "to the clients to define but yeah that that is a that is something that we thought about and made",
    "start": "1659130",
    "end": "1665510"
  },
  {
    "text": "sure that at least from Canadia spective we have that ability to support that",
    "start": "1665510",
    "end": "1672460"
  },
  {
    "text": "bill did you want to talk about multi-tenancy at all or yeah all right",
    "start": "1672460",
    "end": "1679150"
  },
  {
    "text": "here shape these couple slides so I can get to the demo you",
    "start": "1679150",
    "end": "1686110"
  },
  {
    "text": "okay so we're gonna show an example demonstrate how the Krait plugin works for the case when couplet it has created",
    "start": "1693230",
    "end": "1700250"
  },
  {
    "text": "a single container pot so you're gonna have one if you went to the intro",
    "start": "1700250",
    "end": "1707870"
  },
  {
    "text": "section you probably understand that we we do some namespace isolation around",
    "start": "1707870",
    "end": "1713780"
  },
  {
    "text": "the pod it's basically we it's applied namespace for networking and user namespaces",
    "start": "1713780",
    "end": "1719810"
  },
  {
    "text": "things like that we also have C groups that get attached permissions and they're all shared across the across the",
    "start": "1719810",
    "end": "1724970"
  },
  {
    "text": "entire pod alright this represents all the resources that are going to use for your pot and it",
    "start": "1724970",
    "end": "1732020"
  },
  {
    "text": "represents the the container that you're going to generate you'll you'll note here that we're using CI for you know",
    "start": "1732020",
    "end": "1738290"
  },
  {
    "text": "all networking okay on the on the far left it says daemon container D is a",
    "start": "1738290",
    "end": "1745370"
  },
  {
    "text": "process that runs you can you can watch it with system D or whatnot if you're on",
    "start": "1745370",
    "end": "1752150"
  },
  {
    "text": "the right operating system and it just serves up via a RPC the requests that",
    "start": "1752150",
    "end": "1757970"
  },
  {
    "text": "come from creddies okay to our container runtime",
    "start": "1757970",
    "end": "1764620"
  },
  {
    "text": "so this is a quick flow we're just we're just going to create apply it's pretty",
    "start": "1766870",
    "end": "1772059"
  },
  {
    "text": "you'll notice it's very similar to creating a detainer because the pod is actually in our implementation actually",
    "start": "1772059",
    "end": "1779080"
  },
  {
    "text": "includes creating a container called the pause container we pull that image down",
    "start": "1779080",
    "end": "1784450"
  },
  {
    "text": "it's really small we run it we get it get it going and we attach a network",
    "start": "1784450",
    "end": "1790390"
  },
  {
    "text": "namespace to it I'm gonna go quick cuz he's got a good",
    "start": "1790390",
    "end": "1795820"
  },
  {
    "text": "demo he wants to show you hear what we were showing is",
    "start": "1795820",
    "end": "1803789"
  },
  {
    "text": "actually now running the container in the pod kulit request to launch the",
    "start": "1803789",
    "end": "1809860"
  },
  {
    "text": "container we go get the image create a snapshot using the tools you talked",
    "start": "1809860",
    "end": "1815620"
  },
  {
    "text": "about before we set up our container we store our metadata that best sort of thing and",
    "start": "1815620",
    "end": "1821880"
  },
  {
    "text": "then when we start a task and you don't running",
    "start": "1821880",
    "end": "1826910"
  },
  {
    "text": "that's what you're a real quick loose quit yeah you can also ask questions",
    "start": "1828260",
    "end": "1833390"
  },
  {
    "text": "after the after the meeting or you can continue to talk that well this sets up your certainly okay anybody have any",
    "start": "1833390",
    "end": "1839930"
  },
  {
    "text": "questions about how kubernetes works with connecting to cry if you didn't",
    "start": "1839930",
    "end": "1845510"
  },
  {
    "text": "come to the intro session",
    "start": "1845510",
    "end": "1848560"
  },
  {
    "text": "you what",
    "start": "1852230",
    "end": "1857780"
  },
  {
    "text": "well yeah so the question was cryo versus container D this is the container",
    "start": "1862809",
    "end": "1870259"
  },
  {
    "text": "D cryo is an interesting product you can do pretty much the same things",
    "start": "1870259",
    "end": "1876799"
  },
  {
    "text": "it does work differently we had different code sets okay we had different goals in mind we were",
    "start": "1876799",
    "end": "1883309"
  },
  {
    "text": "developing it container D was built specifically to be a flexible modifiable",
    "start": "1883309",
    "end": "1892509"
  },
  {
    "text": "configurable infrastructure specifically for programs like kubernetes like docker",
    "start": "1892509",
    "end": "1900999"
  },
  {
    "text": "okay like pouch who's who's using it it",
    "start": "1900999",
    "end": "1906399"
  },
  {
    "text": "alright we couldn't that afterwards I think that's a long there's no so yeah I",
    "start": "1906399",
    "end": "1912889"
  },
  {
    "text": "just want to I just wanted to quickly show kind of a an example proxy plugin so this is similar to what I showed",
    "start": "1912889",
    "end": "1919759"
  },
  {
    "text": "earlier but I kind of want to show it working so we have a simple app here I'm",
    "start": "1919759",
    "end": "1928789"
  },
  {
    "text": "just going to run a proxy plugin which uses the native snapshot ur so it's",
    "start": "1928789",
    "end": "1934759"
  },
  {
    "text": "basically gonna take the native snapshot ur which obviously implements the snapshot or interface it's going to",
    "start": "1934759",
    "end": "1940539"
  },
  {
    "text": "register it as a gr PC plugin so there's",
    "start": "1940539",
    "end": "1947389"
  },
  {
    "text": "this there's a contribute an import and it will actually convert the snapshot or",
    "start": "1947389",
    "end": "1955699"
  },
  {
    "text": "API to a G RPC service and then register",
    "start": "1955699",
    "end": "1961129"
  },
  {
    "text": "that service listen and then then you're",
    "start": "1961129",
    "end": "1966199"
  },
  {
    "text": "good to go you let me show my",
    "start": "1966199",
    "end": "1974278"
  },
  {
    "text": "the configuration that I've sucked out on container D so this is just basically",
    "start": "1974600",
    "end": "1981750"
  },
  {
    "text": "a default configuration you can see I have a proxy plug-in section I call this",
    "start": "1981750",
    "end": "1990600"
  },
  {
    "text": "test SS for test snapshot the address is",
    "start": "1990600",
    "end": "1996440"
  },
  {
    "text": "in this directory here",
    "start": "1996440",
    "end": "2001269"
  },
  {
    "text": "let me go ahead and run that",
    "start": "2006040",
    "end": "2010030"
  },
  {
    "text": "perfect",
    "start": "2011160",
    "end": "2014090"
  },
  {
    "text": "all right so",
    "start": "2016480",
    "end": "2019860"
  },
  {
    "text": "I'm going to pull down an image so now when this image gets pulled down",
    "start": "2024710",
    "end": "2032419"
  },
  {
    "text": "you'll see we have defined a couple environment variables up here",
    "start": "2035870",
    "end": "2042730"
  },
  {
    "text": "the first one defines a namespace just a demo namespace the snapshot our test SS",
    "start": "2042820",
    "end": "2049030"
  },
  {
    "text": "and then it's just CTR images poll that's pulling from a local registry so it's going to be really really fast so",
    "start": "2049030",
    "end": "2057580"
  },
  {
    "text": "the last step at the bottoms always unpack so the unpack actually was able to make",
    "start": "2057580",
    "end": "2064250"
  },
  {
    "text": "use of that proxy plugin which I had",
    "start": "2064250",
    "end": "2070158"
  },
  {
    "text": "here so there's this root directory here so",
    "start": "2070159",
    "end": "2076889"
  },
  {
    "text": "this is just the standard native snapshot er there's a metadata DB",
    "start": "2076890",
    "end": "2084169"
  },
  {
    "text": "there's a snapshot directory underneath that snapshots directory you'll see",
    "start": "2084170",
    "end": "2090750"
  },
  {
    "text": "actually all the individual snapshots so 6 is probably going to be the latest one it's all going to be flat",
    "start": "2090750",
    "end": "2098990"
  },
  {
    "text": "want to show real quick we're at the end here let me go ahead and show how the",
    "start": "2103880",
    "end": "2110829"
  },
  {
    "text": "taken view these with CTR so we have a tree command under CTR that's pretty",
    "start": "2110829",
    "end": "2119690"
  },
  {
    "text": "useful it actually shows the relationships between the different snapshot airs so this one here is",
    "start": "2119690",
    "end": "2125900"
  },
  {
    "text": "actually going to be the the leaf so this would be the parent most layer",
    "start": "2125900",
    "end": "2134740"
  },
  {
    "text": "so I can actually take that layer I can",
    "start": "2140730",
    "end": "2145920"
  },
  {
    "text": "create a new snapshot so this is creating a new snapshot called upper one CTR snapshots prepare using",
    "start": "2145920",
    "end": "2154560"
  },
  {
    "text": "this so this is the same operation you'd expect to be done when you launch a",
    "start": "2154560",
    "end": "2159599"
  },
  {
    "text": "container that's actually going to prepare a brand new snapshot for you",
    "start": "2159599",
    "end": "2165078"
  },
  {
    "text": "we also have a neat command never said snapshots don't mount but CTR will",
    "start": "2166240",
    "end": "2171999"
  },
  {
    "text": "output a mount for you so this is this is a mount command you could just give",
    "start": "2171999",
    "end": "2178569"
  },
  {
    "text": "to Linux and it will run it and mount it wherever you want but as you can see",
    "start": "2178569",
    "end": "2185170"
  },
  {
    "text": "since it's the native snapshot ur a mount is just a bind and it's binding to the directory 7 which has the full",
    "start": "2185170",
    "end": "2193839"
  },
  {
    "text": "root filesystem for that image so let me",
    "start": "2193839",
    "end": "2199749"
  },
  {
    "text": "just go ahead and clean that up and show you what happens when we remove this",
    "start": "2199749",
    "end": "2206710"
  },
  {
    "text": "so this these are the garbage collection logs not super interesting you can see",
    "start": "2206710",
    "end": "2213280"
  },
  {
    "text": "that a garbage collection happened garbage collection and container D runs pretty fast in this case the content",
    "start": "2213280",
    "end": "2223360"
  },
  {
    "text": "garbage collection was six milliseconds this is actually all the content that",
    "start": "2223360",
    "end": "2229390"
  },
  {
    "text": "got removed from disk so this scheduling of the content cleanup this is actually",
    "start": "2229390",
    "end": "2236140"
  },
  {
    "text": "what removes data from disk since it's pretty small it was didn't take that long only six milliseconds of the four",
    "start": "2236140",
    "end": "2244870"
  },
  {
    "text": "point nine milliseconds is the amount of time that we actually had the metadata store locked so we made sure to put that",
    "start": "2244870",
    "end": "2251050"
  },
  {
    "text": "as the statistics all right yeah that's what I'm gonna",
    "start": "2251050",
    "end": "2258010"
  },
  {
    "text": "show about that but we're gonna be around afterwards so come and ask more questions about container tea",
    "start": "2258010",
    "end": "2265339"
  },
  {
    "text": "all right thank you everybody [Applause]",
    "start": "2265339",
    "end": "2272159"
  }
]