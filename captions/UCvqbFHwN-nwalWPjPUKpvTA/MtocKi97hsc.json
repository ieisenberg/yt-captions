[
  {
    "text": "hello everyone my name is Katie gamanji and currently I am a senior field engineer at Apple I joined Apple last",
    "start": "420",
    "end": "7200"
  },
  {
    "text": "year and in this role I am trying to bring kubernetes and Cloud native expertise to different products and",
    "start": "7200",
    "end": "13080"
  },
  {
    "text": "services within apple as well I am one of the TOC or technical oversight Committee Member for cncf or Cloud",
    "start": "13080",
    "end": "19980"
  },
  {
    "text": "native Computing foundation in this role I am joining 10 other Champions within the industry and we try to provide a",
    "start": "19980",
    "end": "26760"
  },
  {
    "text": "technical vision for the cncf landscape I have many other roles in the community one of them being on The Advisory board",
    "start": "26760",
    "end": "33239"
  },
  {
    "text": "for Captain which currently is an incubating cncf project and I am the creator of the cloud native fundamentals",
    "start": "33239",
    "end": "39420"
  },
  {
    "text": "course so this is actually a free course that you can find on Udacity but if you have anyone interested in pursuing a",
    "start": "39420",
    "end": "47040"
  },
  {
    "text": "cloud native job I definitely recommend looking at this course as well today however I would like to talk about",
    "start": "47040",
    "end": "53340"
  },
  {
    "text": "bare metal Chronicles and more specifically the intertwinement between cluster API Tinkerbell and gitups",
    "start": "53340",
    "end": "60719"
  },
  {
    "text": "and to do so firstly I would like to introduce cluster API and this is pretty much we're going to look into a tool",
    "start": "60719",
    "end": "66479"
  },
  {
    "text": "that provides a set of interfaces and standards to provision our infrastructure to different Cloud",
    "start": "66479",
    "end": "71520"
  },
  {
    "text": "providers next I'm going to focus on bare metal provisioning and here I'm going to",
    "start": "71520",
    "end": "76619"
  },
  {
    "text": "introduce a tool which is called Tinkerbell now more importantly I'm going to focus on the combination",
    "start": "76619",
    "end": "82020"
  },
  {
    "text": "between cluster API and Tinkerbell and this is going to be the kpt or a cluster API provider for Tinkerbell",
    "start": "82020",
    "end": "88799"
  },
  {
    "text": "and lastly to introduce some Automation in all of this architecture I would like to look into tools such as githubs such",
    "start": "88799",
    "end": "96360"
  },
  {
    "text": "as argosidium flux and where we can further introduce Automation and parametrization in our infrastructure",
    "start": "96360",
    "end": "104040"
  },
  {
    "text": "now before I move forward how many of you here are familiar with cluster API have you heard about it using it in",
    "start": "104040",
    "end": "110939"
  },
  {
    "text": "production maybe okay some hints how many of you have heard about Tinkerbell and not the character",
    "start": "110939",
    "end": "118500"
  },
  {
    "text": "okay one ahead and how many of you have heard about github's Argo City flux using it in production okay that's",
    "start": "118500",
    "end": "125280"
  },
  {
    "text": "really good awesome and how many of you are actually using bare metal or have on-prem data centers that you have to",
    "start": "125280",
    "end": "131400"
  },
  {
    "text": "manage okay some of you I hope by the end of this talk you're going to be more inspired to actually look into bird",
    "start": "131400",
    "end": "137640"
  },
  {
    "text": "metal provisioning because it's not that scary as it might seem now there is a reason why I'm getting this stock at",
    "start": "137640",
    "end": "143940"
  },
  {
    "text": "this moment now actually just kind of a tail Dr I'm not ldr um um kind of a note I do realize that the screens might not",
    "start": "143940",
    "end": "150900"
  },
  {
    "text": "be very visible so I will just try to go for everything very slowly to ensure that everyone has an understanding of what's going on so if if you don't",
    "start": "150900",
    "end": "157500"
  },
  {
    "text": "understand something please let me know and I will go for it one more time now going back to the thread of the",
    "start": "157500",
    "end": "163319"
  },
  {
    "text": "story there is a reason why I'm giving this stock at this moment because within the cloud native landscape we had",
    "start": "163319",
    "end": "169379"
  },
  {
    "text": "multiple tools that cross the chasm now crossing the chasm means that we're going to have late adopters and these",
    "start": "169379",
    "end": "174900"
  },
  {
    "text": "late adopters are described by the fact that they're very restricted and they should have a full ownership of their",
    "start": "174900",
    "end": "180840"
  },
  {
    "text": "infrastructure as such they look into you solutionizing how they can deploy and manage kubernetes on bare metal",
    "start": "180840",
    "end": "189239"
  },
  {
    "text": "however the story was a bit different at the beginning to actually reach the point where we need to solve this this",
    "start": "189239",
    "end": "194640"
  },
  {
    "text": "problem we need to look a bit uh into the past more exactly nine years ago now",
    "start": "194640",
    "end": "200519"
  },
  {
    "text": "if you look nine years ago the container orchestrator framework space was very heavily Diversified we had tools such as",
    "start": "200519",
    "end": "205980"
  },
  {
    "text": "docusworm Apache mesos corowa's Fleet kubernetes and all of them provided a viable solution to run containers of",
    "start": "205980",
    "end": "212580"
  },
  {
    "text": "scale however communities it took the lead in defining the principles of how to run containerized workloads nowadays",
    "start": "212580",
    "end": "219540"
  },
  {
    "text": "kubernetes is known for its portability and adaptability but more importantly for its approach towards declarative",
    "start": "219540",
    "end": "225239"
  },
  {
    "text": "configuration and automation and we can see this in numbers as well based on the VMware tons report state of",
    "start": "225239",
    "end": "232260"
  },
  {
    "text": "kubernetes 99 of the organizations see a clear benefit of using kubernetes the",
    "start": "232260",
    "end": "237720"
  },
  {
    "text": "first one being a better resource utilization so CPU and memory and the second one being an East application",
    "start": "237720",
    "end": "244019"
  },
  {
    "text": "management especially when you want to upgrade your application in the cluster now in metric which is going to be very",
    "start": "244019",
    "end": "250200"
  },
  {
    "text": "important for this stock is that 52 of the organization still have a need to deploy the infrastructure on-prem",
    "start": "250200",
    "end": "256979"
  },
  {
    "text": "very important this number is actually declining from last year last year it was 55 this year's 52 so we see a slow",
    "start": "256979",
    "end": "264540"
  },
  {
    "text": "decline in the need for bare metal but that does not dismisses the fact that half of this organization still need to",
    "start": "264540",
    "end": "271080"
  },
  {
    "text": "deploy on-premes so they need a solution for that and another metric I would like to draw your attention towards is that 88 of the",
    "start": "271080",
    "end": "278220"
  },
  {
    "text": "organizations manage more than six clusters now the story here is that it's very complicated and difficult to",
    "start": "278220",
    "end": "285180"
  },
  {
    "text": "actually provision one cluster but once you do it one time you can easily replicate that across different",
    "start": "285180",
    "end": "290699"
  },
  {
    "text": "environments so you can have for example QA staging production and many more and",
    "start": "290699",
    "end": "296400"
  },
  {
    "text": "this actually grows exponentially if you need to deploy to different availability zones so you replicate your Stacks",
    "start": "296400",
    "end": "301560"
  },
  {
    "text": "across the world however the community and the adoption",
    "start": "301560",
    "end": "306660"
  },
  {
    "text": "rate for kubernetes increased and this was very beneficial for it because over time multiple tools were built around it",
    "start": "306660",
    "end": "312840"
  },
  {
    "text": "to extend its functionalities and we actually saw some of these interfaces that we talked in the morning such as",
    "start": "312840",
    "end": "318419"
  },
  {
    "text": "support for different networking runtime storage and many more and this created what today we know as",
    "start": "318419",
    "end": "324300"
  },
  {
    "text": "the cloud native landscape which resides under the cncf umbrella and this is the landscape that we the TOC provide a",
    "start": "324300",
    "end": "330960"
  },
  {
    "text": "technical vision for so we will try to pretty much accept projects within the sandbox level and we will pretty much",
    "start": "330960",
    "end": "337199"
  },
  {
    "text": "help them to go through incubation and graduation status so the aim is for all of these projects to reach a maturity",
    "start": "337199",
    "end": "343620"
  },
  {
    "text": "and the graduation stage now at this stage we know that",
    "start": "343620",
    "end": "348720"
  },
  {
    "text": "kubernetes is pluggable it is extensible however at the moment when we had interoperability of the basis we had",
    "start": "348720",
    "end": "355620"
  },
  {
    "text": "multiple tools that were built to bootstrap a cluster as well so you might be familiar with tools such as cube ADM",
    "start": "355620",
    "end": "361800"
  },
  {
    "text": "cup spray tectonic installer if you go back to the corevis house and many more actually however if you look at all of",
    "start": "361800",
    "end": "368699"
  },
  {
    "text": "these tools it's difficult to find a common denominator what it means is that if I use one tool to deploy my",
    "start": "368699",
    "end": "374759"
  },
  {
    "text": "infrastructure to Azure it's going to be very difficult for me to use the same tool to deploy my infrastructure to gcp",
    "start": "374759",
    "end": "380400"
  },
  {
    "text": "usually I have to introduce a new tool and this is not sustainable especially if you have a multi-flate strategy for",
    "start": "380400",
    "end": "387120"
  },
  {
    "text": "your clusters as such it was clear that we need standardization and interfaces and this",
    "start": "387120",
    "end": "393060"
  },
  {
    "text": "is where cluster API was introduced so cluster API is a set of declarative apis",
    "start": "393060",
    "end": "398400"
  },
  {
    "text": "for cluster creation management and deletion but more importantly it does so in a unified manner across multiple",
    "start": "398400",
    "end": "405180"
  },
  {
    "text": "Cloud providers now when we refer to Cluster API we refer to c-cluster lifecycle which had",
    "start": "405180",
    "end": "412020"
  },
  {
    "text": "its first initial release in April 2019. since then it had multiple releases and",
    "start": "412020",
    "end": "417360"
  },
  {
    "text": "this year it reached the view on beta1 endpoint a very big milestone for the cluster API team and as I mentioned it",
    "start": "417360",
    "end": "423960"
  },
  {
    "text": "actually integrates actively with multiple Cloud providers so we're going to have support for major Cloud providers such as AWS gcp and Azure",
    "start": "423960",
    "end": "431940"
  },
  {
    "text": "we're going to have support for Chinese providers as well such as Alibaba Cloud Baidu and tencent and if you deploy the",
    "start": "431940",
    "end": "438360"
  },
  {
    "text": "infrastructure to China you would know it's quite challenging because usually you cannot lift and shift you actually",
    "start": "438360",
    "end": "443460"
  },
  {
    "text": "have to use tooling inside that region well with cluster API at least the way you deploy your infrastructure is going",
    "start": "443460",
    "end": "449460"
  },
  {
    "text": "to be similar and standardized and lately we have new initiatives to bootstrap our clusters on bare metal and",
    "start": "449460",
    "end": "456360"
  },
  {
    "text": "these initiatives is led by packet metal free and Tinkerbell",
    "start": "456360",
    "end": "461400"
  },
  {
    "text": "now I've seen a lot of people being new to Cluster API so what I'm going to do I'll just try to introduce it to make",
    "start": "461400",
    "end": "466919"
  },
  {
    "text": "sure that we have the base understanding and fundamental knowledge to know how it works so let's suppose we would like to deploy",
    "start": "466919",
    "end": "473880"
  },
  {
    "text": "multiple clusters in different different Cloud providers in different regions the first thing we're going to need is a",
    "start": "473880",
    "end": "480419"
  },
  {
    "text": "kubernetes cluster so we need a key printers cluster to deploy multiple kubernetes clusters this is something",
    "start": "480419",
    "end": "485520"
  },
  {
    "text": "that I call cubeception now for testing purposes you can use kind which is pretty much a dockerized version for",
    "start": "485520",
    "end": "491639"
  },
  {
    "text": "your for kubernetes to create this management cluster if you want to use cluster repair in production I do",
    "start": "491639",
    "end": "497880"
  },
  {
    "text": "recommend using a fully fledged cluster and this is because it comes with a more sophisticated failing over strategy",
    "start": "497880",
    "end": "503759"
  },
  {
    "text": "now once we have our management cluster up and running will require the dependencies or the controller managers",
    "start": "503759",
    "end": "509280"
  },
  {
    "text": "on installed on top of it and currently there are three types of control managers we need to look into",
    "start": "509280",
    "end": "515039"
  },
  {
    "text": "the cluster API crds or customer service definition controller the bootstrap",
    "start": "515039",
    "end": "520080"
  },
  {
    "text": "provider controller and the infrastructure provider controller let's go back to the first one cluster",
    "start": "520080",
    "end": "525839"
  },
  {
    "text": "API introduces five new custom resource definition and we need a controller to make sure that we can create delete or",
    "start": "525839",
    "end": "531600"
  },
  {
    "text": "reconcile any changes we have to these resources the second one is going to be the",
    "start": "531600",
    "end": "536640"
  },
  {
    "text": "bootstrap provider and this is the component that translates the yaml in it yaml script into cloudiness script and",
    "start": "536640",
    "end": "542880"
  },
  {
    "text": "it will make sure to attach an instance from a cloud provider to the cluster as a node and this capability currently is",
    "start": "542880",
    "end": "548700"
  },
  {
    "text": "provisioned by cubadium Talus and eks and the last component we're going to",
    "start": "548700",
    "end": "553860"
  },
  {
    "text": "need is the infrastructure provider and this is going to be the component that talks with the provider apis and",
    "start": "553860",
    "end": "559860"
  },
  {
    "text": "produces the actual resources think about instances ppcs subnets security groups and so forth so the actual actual",
    "start": "559860",
    "end": "567360"
  },
  {
    "text": "resources now here with the infrastructure provider is that the relationship is one",
    "start": "567360",
    "end": "573000"
  },
  {
    "text": "to many you need at least one provider so if you deploy your infrastructure to gcp you will need the infrastructure",
    "start": "573000",
    "end": "578339"
  },
  {
    "text": "provider for gcp if you want to deploy the Tinkerbell you'll need a Tinkerbell provider and so forth so it depends on",
    "start": "578339",
    "end": "583920"
  },
  {
    "text": "what kind of providers you want to deploy your infrastructure so once we have our controllers",
    "start": "583920",
    "end": "589620"
  },
  {
    "text": "installed we will be able to provision the target clusters and the target clusters are the one we will be",
    "start": "589620",
    "end": "595440"
  },
  {
    "text": "delivering to our application teams so they can put their up their services on top of and these are going to be the",
    "start": "595440",
    "end": "601200"
  },
  {
    "text": "Clusters that your customers will interact with while consuming your services",
    "start": "601200",
    "end": "606800"
  },
  {
    "text": "now a very important concept that cluster API introduces is cluster as a",
    "start": "607380",
    "end": "612779"
  },
  {
    "text": "resource pretty much we'll be able to use yaml manifest to Define our infrastructure's code and this can be",
    "start": "612779",
    "end": "618779"
  },
  {
    "text": "done for the five craft custom resource definitions or crds that I mentioned and I'm going to introduce them shortly",
    "start": "618779",
    "end": "624720"
  },
  {
    "text": "because they're going to be quite relevant throughout the demo hopefully them is going to work as well now the",
    "start": "624720",
    "end": "630000"
  },
  {
    "text": "First Resource we're going to look into is a cluster resource and this takes care of the main networking components",
    "start": "630000",
    "end": "635580"
  },
  {
    "text": "for a cluster so think about the subnets for your pilots and services or DNS suffix and so forth",
    "start": "635580",
    "end": "641880"
  },
  {
    "text": "Now by default in cluster API you're going to have a control plane associated with every single cluster so control",
    "start": "641880",
    "end": "648899"
  },
  {
    "text": "blend resource pretty much allows you to programmatically manage multiple machines with the control plane label",
    "start": "648899",
    "end": "654360"
  },
  {
    "text": "label which is going to have all of the control plane components installed on top of it machine here you can think this is a",
    "start": "654360",
    "end": "660899"
  },
  {
    "text": "resource that's very similar to instance so here you can actually check or actually specify the version of",
    "start": "660899",
    "end": "667200"
  },
  {
    "text": "kubernetes the instance type any security groups networking and so forth so this is going to be the vanilla",
    "start": "667200",
    "end": "673680"
  },
  {
    "text": "provisioning for cluster API you're just going to have a couple of control planes that's it control plane machines",
    "start": "673680",
    "end": "679560"
  },
  {
    "text": "now if you'd like to deploy any workloads you need a data plane and in cluster API this is managed through a",
    "start": "679560",
    "end": "686279"
  },
  {
    "text": "machine deployment so I'm hoping that you're familiar with kubernetes so machine deployment is very",
    "start": "686279",
    "end": "692100"
  },
  {
    "text": "similar to deployment it will roll out strategies between different machine set resources machine set very similar to",
    "start": "692100",
    "end": "698040"
  },
  {
    "text": "replica set it will ensure that we have an amount of machine resources up and running at all time and machine again",
    "start": "698040",
    "end": "704399"
  },
  {
    "text": "this is just an instance we can specify the version of kubernetes instance type and so forth however the label",
    "start": "704399",
    "end": "711240"
  },
  {
    "text": "on this particular instances are going to be working out now these five customer service",
    "start": "711240",
    "end": "716279"
  },
  {
    "text": "definitions we can use to specify our infrastructure's code so we don't need to use ansible or terraform we can use",
    "start": "716279",
    "end": "723240"
  },
  {
    "text": "our yaml we like yaml within Cloud native so here's where we can say that I want a cluster with 10 nodes",
    "start": "723240",
    "end": "729660"
  },
  {
    "text": "three of them being the control plane seven of them being in the data plane I would like this cluster to be deployed",
    "start": "729660",
    "end": "735000"
  },
  {
    "text": "in gcp for example in this particular region with this particular security groups attached to it so here's where we",
    "start": "735000",
    "end": "740700"
  },
  {
    "text": "Define what we want for our infrastructure and to kind of provide more of a visual",
    "start": "740700",
    "end": "746519"
  },
  {
    "text": "aid of how exactly cluster resourcing looks like here I have a cluster resource for AWS and I'm going to",
    "start": "746519",
    "end": "752700"
  },
  {
    "text": "Showcase it for gcp and Tinkerbell as well now what I have here is a cluster",
    "start": "752700",
    "end": "758459"
  },
  {
    "text": "resource with the name demo cluster in the V1 beta1 endpoint in the specs section I'm choosing a slash 16 for all",
    "start": "758459",
    "end": "765360"
  },
  {
    "text": "pods and towards the end you can see that we have a control plane reference attached to it so this is going to be by",
    "start": "765360",
    "end": "770700"
  },
  {
    "text": "default with every single cluster resource however I would like to draw your attention towards the infrastructure",
    "start": "770700",
    "end": "776459"
  },
  {
    "text": "reference here is where we say that we want this cluster to be deployed in AWS",
    "start": "776459",
    "end": "782100"
  },
  {
    "text": "and what's going to happen underneath it's going to pull configuration that's very specific to AWS and we defined",
    "start": "782100",
    "end": "788220"
  },
  {
    "text": "actually so here we say that we want the cluster to be deployed in your central one as a region and you want to attach",
    "start": "788220",
    "end": "794519"
  },
  {
    "text": "an SSH key name with the name default to our instances this is not a declarative list of variables you have a full",
    "start": "794519",
    "end": "800760"
  },
  {
    "text": "flexibility of what you can configure but these are just for demo purposes here now very important pay attention if we",
    "start": "800760",
    "end": "807720"
  },
  {
    "text": "want to deploy the same cluster to gcp these are going to be the changes required so on the cluster side we just",
    "start": "807720",
    "end": "814320"
  },
  {
    "text": "change our infrastructure reference that's the only thing we need to do and underneath is going to pull all of the",
    "start": "814320",
    "end": "819600"
  },
  {
    "text": "configuration that we defined for gcp as such the region naming convention is very different we deploy it to Europe",
    "start": "819600",
    "end": "825240"
  },
  {
    "text": "West free we have the concept of a project within gcp so we attach our cluster to a project called C API and we",
    "start": "825240",
    "end": "832980"
  },
  {
    "text": "can specify the network in this case with the name defaults API but more importantly what you can see here we",
    "start": "832980",
    "end": "839519"
  },
  {
    "text": "have standardization we can use and reuse our manifest we have the building blocks what's going to be different is",
    "start": "839519",
    "end": "845279"
  },
  {
    "text": "the configuration for the cloud provider and if you'd like to deploy our clustering wheel using Tinkerbell again",
    "start": "845279",
    "end": "852240"
  },
  {
    "text": "infrastructure reference is going to point to a think of a cluster however the configuration is going to be very",
    "start": "852240",
    "end": "857880"
  },
  {
    "text": "specific for Tinkerbell and here I'm just specifying the base registry where we'd like to pull our infrastructure or",
    "start": "857880",
    "end": "863459"
  },
  {
    "text": "images to be installed on our bare metal now so far with cluster API we know that",
    "start": "863459",
    "end": "872519"
  },
  {
    "text": "we can deploy our infrastructure anywhere and we can do so in a standardized manner so we have building",
    "start": "872519",
    "end": "877740"
  },
  {
    "text": "blocks and interfaces open spec now what happens if a second organization you do not want to use a",
    "start": "877740",
    "end": "884040"
  },
  {
    "text": "cloud provider what happens if you want to fully manage your infrastructure on bare metal well in this case we have",
    "start": "884040",
    "end": "890399"
  },
  {
    "text": "Tinkerbell that saves the day Tinkerbell is an engine for bare metal provisioning anywhere kubernetes is just a subset of",
    "start": "890399",
    "end": "897959"
  },
  {
    "text": "it it pretty much Provisions bare metal anywhere it was built by the equinix metal team in 2019 and it was donated to",
    "start": "897959",
    "end": "905760"
  },
  {
    "text": "cncf as a Sandbox project in November 2020. now being a Sandbox project means",
    "start": "905760",
    "end": "911880"
  },
  {
    "text": "it's a still Greenfield project it still requires a lot of enhancements when it comes to functionalities so it's null",
    "start": "911880",
    "end": "918240"
  },
  {
    "text": "not at the production level or at the scale that every single organization needs but this is where I would like to invite you to contribute and actually",
    "start": "918240",
    "end": "924540"
  },
  {
    "text": "look into the tool especially if you have a need for bare metal and of course Tinkerbell aims to",
    "start": "924540",
    "end": "930899"
  },
  {
    "text": "minimize the time for provisioning bare metal anywhere so it can be pretty much data centers public cloud or even Edge",
    "start": "930899",
    "end": "936660"
  },
  {
    "text": "devices so now let's look at how Tinkerbell works so to manage any bare metal using",
    "start": "936660",
    "end": "944100"
  },
  {
    "text": "Tinkerbell you need free sense of configurations let me try to show that free sets of configuration Hardware",
    "start": "944100",
    "end": "950339"
  },
  {
    "text": "template and workflow the hardware is going to be your inventory so for example I have 10",
    "start": "950339",
    "end": "956699"
  },
  {
    "text": "Raspberry Pi machines or I have this amount of servers available you need to declaratively actually specify that and",
    "start": "956699",
    "end": "963420"
  },
  {
    "text": "you can uniquely identify every single Hardware machine using the MAC address and the AP address",
    "start": "963420",
    "end": "969000"
  },
  {
    "text": "after the inventory specification we need a template and the template is pretty much a set of actions that we",
    "start": "969000",
    "end": "975300"
  },
  {
    "text": "want to perform on top of the bare metal so think about this you want to install an operating system you want to install",
    "start": "975300",
    "end": "980639"
  },
  {
    "text": "dependencies any middleware any application so by the end of it you have a server in the state that you want it",
    "start": "980639",
    "end": "986880"
  },
  {
    "text": "in production and workflow is pretty much attaching a hardware to a template and this is very",
    "start": "986880",
    "end": "993600"
  },
  {
    "text": "useful especially if you have a multi-flat strategy so you can say I want five machines to be installed with",
    "start": "993600",
    "end": "998940"
  },
  {
    "text": "Linux and their respective dependencies and the other five machines to have Windows and their respective",
    "start": "998940",
    "end": "1003980"
  },
  {
    "text": "dependencies so you can have the strategy of how you want to provision your bare metal",
    "start": "1003980",
    "end": "1009139"
  },
  {
    "text": "now once we have all of this configuration available we can use the tingcli and send all of this",
    "start": "1009139",
    "end": "1014660"
  },
  {
    "text": "configuration to The Ting server the think server pretty much can be running anywhere within your environment or",
    "start": "1014660",
    "end": "1019759"
  },
  {
    "text": "local machine if you're doing a demo and what is it actually going to do if you have a hardware and a template it's",
    "start": "1019759",
    "end": "1026540"
  },
  {
    "text": "going to take a machine run all the actions in the template so by the end you should have a server in the desired",
    "start": "1026540",
    "end": "1032418"
  },
  {
    "text": "state that you wanted now as I mentioned Tinkerbell focuses on",
    "start": "1032419",
    "end": "1038600"
  },
  {
    "text": "bare metal provisioning anywhere what happens if I want to provision kubernetes on bare metal what happens if",
    "start": "1038600",
    "end": "1044418"
  },
  {
    "text": "I want a machine or a bare metal machine to be attached to the cluster as a node in this case we have the combination",
    "start": "1044419",
    "end": "1051080"
  },
  {
    "text": "between cluster API and Tinkerbell coming together and this is going to be crowned by kpt",
    "start": "1051080",
    "end": "1057080"
  },
  {
    "text": "or cluster API provider for Tinkerbell and this is actually how it's going to look like quite overwhelming but I'm",
    "start": "1057080",
    "end": "1063799"
  },
  {
    "text": "going to take it step by step we need to look at three sets of configuration what we need from the Tinkerbell side what we",
    "start": "1063799",
    "end": "1069260"
  },
  {
    "text": "need from the management cluster on the cluster API and what's going to result the result is going to be the target",
    "start": "1069260",
    "end": "1074299"
  },
  {
    "text": "cluster so going back to Tinkerbell's side here is where we need all of our",
    "start": "1074299",
    "end": "1079400"
  },
  {
    "text": "configuration like as I mentioned we need free set of configuration workflow templates actual Hardware templates and",
    "start": "1079400",
    "end": "1085940"
  },
  {
    "text": "workflow you can actually see them already in this diagram so on Tinkerbell side we need our inventory we need to say that we have 10",
    "start": "1085940",
    "end": "1092600"
  },
  {
    "text": "Raspberry Pi machines and we need to make think server aware of them from the management cluster side this is",
    "start": "1092600",
    "end": "1098720"
  },
  {
    "text": "going to be cluster API a mini recap what we need is all of our controllers soil dependencies we need the",
    "start": "1098720",
    "end": "1104960"
  },
  {
    "text": "infrastructure provider for Tinkerbell so kpt is going to be installed by default another thing we're going to need here",
    "start": "1104960",
    "end": "1111679"
  },
  {
    "text": "is the yaml configuration for our infrastructure so as I mentioned we use yaml or crds to Define our",
    "start": "1111679",
    "end": "1117559"
  },
  {
    "text": "infrastructure's code we need that we need to Define that we want the cluster with five nodes and so forth and another",
    "start": "1117559",
    "end": "1123440"
  },
  {
    "text": "thing we're going to have is a hardware yaml now this is the important distinction because if we have 10",
    "start": "1123440",
    "end": "1128900"
  },
  {
    "text": "Raspberry Pi machines you might want only five of them to be part of the cluster so you need to make cluster API",
    "start": "1128900",
    "end": "1134360"
  },
  {
    "text": "aware of what it actually can use throughout the bootstrapping process so the hardware yaml is going to contain",
    "start": "1134360",
    "end": "1139880"
  },
  {
    "text": "for example five or six machines that you want to dedicate for your infrastructure",
    "start": "1139880",
    "end": "1145220"
  },
  {
    "text": "now the very important thing about cluster or Tinkerbell and the Tinkerbell provider for cluster API it actually",
    "start": "1145220",
    "end": "1151220"
  },
  {
    "text": "comes with a set of templates and workflows available so you don't have to rewrite them they're already available out there so what's actually going to do",
    "start": "1151220",
    "end": "1158179"
  },
  {
    "text": "is if you want to provision a new machine a bare metal machine using kpt the template is going to have the",
    "start": "1158179",
    "end": "1164179"
  },
  {
    "text": "actions to install all the kubernetes kubernetes binaries so you're going to have the cubelet you're going to have the source installed you're going to",
    "start": "1164179",
    "end": "1170120"
  },
  {
    "text": "have q proxy networking attached so by the end of it you should have an instance with all the kubernetes",
    "start": "1170120",
    "end": "1175400"
  },
  {
    "text": "binaries that will be able to be attached to the control plane and actually be part of the cluster in the",
    "start": "1175400",
    "end": "1181280"
  },
  {
    "text": "Target cluster cool it's a bit packed but let's take a",
    "start": "1181280",
    "end": "1187520"
  },
  {
    "text": "breather now I would like to take you back to the beginning of the presentation where we've seen that 88 of the organization",
    "start": "1187520",
    "end": "1194480"
  },
  {
    "text": "manage more than six clusters it is impossible to manage these clusters individually at least sustainably so",
    "start": "1194480",
    "end": "1201260"
  },
  {
    "text": "what you need to do is you need to introduce Automation and parametrization if possible and here's where we can",
    "start": "1201260",
    "end": "1207679"
  },
  {
    "text": "actually use the power of get Ops now most of you are familiar with githubs just kind of a very quick recap",
    "start": "1207679",
    "end": "1213500"
  },
  {
    "text": "the Guido's principle has the gate repositories as the source of Truth for defining the state of your application",
    "start": "1213500",
    "end": "1219080"
  },
  {
    "text": "and in our case our infrastructure now what is actually going to mean is by",
    "start": "1219080",
    "end": "1224539"
  },
  {
    "text": "default we're going to have a PR based rollout that means that the Delta between our local environment and",
    "start": "1224539",
    "end": "1229700"
  },
  {
    "text": "production is just one PR away githubs actually bring automatic reconciliation as a very important",
    "start": "1229700",
    "end": "1236059"
  },
  {
    "text": "capability and what it actually means is that we're going to have a GitHub store that's going to watch a repository and if new changes are identified these are",
    "start": "1236059",
    "end": "1242960"
  },
  {
    "text": "going to be extrapolated and applied to the cluster straight away but more importantly with ketops we're",
    "start": "1242960",
    "end": "1248179"
  },
  {
    "text": "going to have a version state of our cluster this means we have different historical data points of our",
    "start": "1248179",
    "end": "1253340"
  },
  {
    "text": "infrastructure so if you are in a red state for example you can very easily revert to a known and green State using",
    "start": "1253340",
    "end": "1259760"
  },
  {
    "text": "just a couple of Kit commands now this is actually a very nice announcement I think everyone is aware",
    "start": "1259760",
    "end": "1266299"
  },
  {
    "text": "but the gitos principle is very well represented by argosidium flux and both of which graduated within the last week",
    "start": "1266299",
    "end": "1272720"
  },
  {
    "text": "so this is a very important milestone for the cloud native Community Argo City actually announced the graduation",
    "start": "1272720",
    "end": "1278419"
  },
  {
    "text": "yesterday and flags announced their graduation I think a couple of days ago but meaning actually being a graduate",
    "start": "1278419",
    "end": "1285799"
  },
  {
    "text": "project means that you have a big um a very mature project that has a lot of adoptions and contributions from",
    "start": "1285799",
    "end": "1292159"
  },
  {
    "text": "different organizations but more importantly it has a sustainable roadmap with functionalities that actually can",
    "start": "1292159",
    "end": "1297620"
  },
  {
    "text": "solve the problems that the tools will need to solve in the future",
    "start": "1297620",
    "end": "1302659"
  },
  {
    "text": "and with that let's actually see where we can use or where you can introduce automation within our infrastructure",
    "start": "1302659",
    "end": "1309200"
  },
  {
    "text": "provisioning now what I've done for now is I've completely removed Tinkerbell from the scenario because cluster API",
    "start": "1309200",
    "end": "1317380"
  },
  {
    "text": "pretty much standardizes the way we deploy our infrastructure anywhere even using Tinkerbell or even on bare metal",
    "start": "1317380",
    "end": "1324440"
  },
  {
    "text": "so what I'm actually going to focus here is how can we automate our infrastructure provisioning using cluster API and Argo CD so going back to",
    "start": "1324440",
    "end": "1332120"
  },
  {
    "text": "the fundamentals we're going to look at everything Google can have or should have on the management cluster and the",
    "start": "1332120",
    "end": "1338179"
  },
  {
    "text": "result is going to be applied to the Target cluster now on the management cluster we're going to have again mini recap we're",
    "start": "1338179",
    "end": "1344960"
  },
  {
    "text": "going to have all the file controllers up and running as well we're going to have our infrastructures code so what",
    "start": "1344960",
    "end": "1350120"
  },
  {
    "text": "kind of infrastructure cluster we would like to deploy now all of this yaml manifest by default",
    "start": "1350120",
    "end": "1355640"
  },
  {
    "text": "they can be stored in git and by default we can use a tool such as argocd to watch this manifests so if you introduce",
    "start": "1355640",
    "end": "1361940"
  },
  {
    "text": "any new changes to your GitHub to actual manifest in Git You Can merge your PR",
    "start": "1361940",
    "end": "1367100"
  },
  {
    "text": "Argo City is going to pick up the changes from the pr and apply them to the Target cluster straight away",
    "start": "1367100",
    "end": "1373460"
  },
  {
    "text": "very optional however I I want to see a kind of outline this you can use a",
    "start": "1373460",
    "end": "1379100"
  },
  {
    "text": "template manager because we have multiple clusters we want to parameterize or we want to reuse as much",
    "start": "1379100",
    "end": "1384380"
  },
  {
    "text": "of our infrastructure as possible so here for example I'm introducing help you can use customize as well",
    "start": "1384380",
    "end": "1390380"
  },
  {
    "text": "to parameterize the version of kubernetes to 1.24 to parametrize the amount of replica for the control plane",
    "start": "1390380",
    "end": "1397400"
  },
  {
    "text": "in this case to free and the replicas for the worker nodes in this case is going to be one so here we have pretty",
    "start": "1397400",
    "end": "1403100"
  },
  {
    "text": "much a cluster with four nodes in version 1.4 at 124.0 now any changes now I need to introduce",
    "start": "1403100",
    "end": "1410299"
  },
  {
    "text": "are going to be to the helm chart because Argos today is going to watch the helm chart if I'm putting any changes to this chart",
    "start": "1410299",
    "end": "1416720"
  },
  {
    "text": "for example putting a different version for kubernetes from 2.25 for example these changes are going to be picked up",
    "start": "1416720",
    "end": "1422659"
  },
  {
    "text": "by Argo City and applied to the Target cluster straight away and this is something that I would like",
    "start": "1422659",
    "end": "1428179"
  },
  {
    "text": "to demo as well if I'm not mistaken so going here what I'm going to showcase the setup I'm having at the moment",
    "start": "1428179",
    "end": "1434360"
  },
  {
    "text": "I have the management cluster deployed on my local machine using kind on this cluster I have all of the",
    "start": "1434360",
    "end": "1439760"
  },
  {
    "text": "controllers installed actually I'm going to use AWS a very important remark here I would love to do the demo on bare",
    "start": "1439760",
    "end": "1445400"
  },
  {
    "text": "metal however to travel with a bit of Raspberry Pi's across the world it's more challenging so I'm going to use AWS",
    "start": "1445400",
    "end": "1452240"
  },
  {
    "text": "because it's more convenient for me to Showcase how it can automate our infrastructure provisioning but it",
    "start": "1452240",
    "end": "1458120"
  },
  {
    "text": "doesn't matter because with cluster API the functionality is going to be similar so ideally you should have a digestible",
    "start": "1458120",
    "end": "1463760"
  },
  {
    "text": "understanding of how we can automate and provision our infrastructure so in this case the controllers that I'm",
    "start": "1463760",
    "end": "1470240"
  },
  {
    "text": "going to have is going to be for AWS as well Argo City is going to be installed and I'm going to have a Helm chair that's",
    "start": "1470240",
    "end": "1475940"
  },
  {
    "text": "going to manage my infrastructure and the idea is that I'm going to increase the amount of replica notes for actually",
    "start": "1475940",
    "end": "1482480"
  },
  {
    "text": "the work nodes and ideally they should be applied to the Target cluster without me doing anything",
    "start": "1482480",
    "end": "1488299"
  },
  {
    "text": "so without any further video let's just make sure that everything",
    "start": "1488299",
    "end": "1493700"
  },
  {
    "text": "works now this is a bit overwhelming I know",
    "start": "1493700",
    "end": "1499340"
  },
  {
    "text": "these screens are a bit small so not it's not very readable all the way through however I'm going to take you",
    "start": "1499340",
    "end": "1504799"
  },
  {
    "text": "all the way step by step to Showcase what I actually have happening on the screens",
    "start": "1504799",
    "end": "1510320"
  },
  {
    "text": "so that's not it either",
    "start": "1510320",
    "end": "1518120"
  },
  {
    "text": "cool what I'm actually going to do this is my management cluster I'm going to get all of my pots so I would like to",
    "start": "1518120",
    "end": "1523400"
  },
  {
    "text": "Showcase all of the controllers that I have installed so this is a bit overwhelming I don't like the viewing it's a bit trained but",
    "start": "1523400",
    "end": "1529400"
  },
  {
    "text": "if I make it smaller no one can see it either so I'm going to point your attention towards the",
    "start": "1529400",
    "end": "1536020"
  },
  {
    "text": "cluster API this is going to be the bootstrap provider so in this case I'm using cubeadm to bootstrap my cluster",
    "start": "1536020",
    "end": "1543580"
  },
  {
    "text": "the yeah and this is going to be for the control plane we needed a a control controller for our",
    "start": "1543580",
    "end": "1550220"
  },
  {
    "text": "crds and this is going to be installed in the Kappa system so this is going to take care of our crd reconciliation and",
    "start": "1550220",
    "end": "1556760"
  },
  {
    "text": "as I mentioned uh we're going to have an infrastructure provider and in this case it's going to be called Kappa we know",
    "start": "1556760",
    "end": "1562580"
  },
  {
    "text": "about kpt which is provider for Tinkerbell Kappa is provider for AWS so cluster API provider for AWS because I'm",
    "start": "1562580",
    "end": "1569480"
  },
  {
    "text": "using AWS I have that controller installed and as well you can see that I have argosity already installed over",
    "start": "1569480",
    "end": "1575360"
  },
  {
    "text": "here so pretty much we'll be able to connect cargo city as well now",
    "start": "1575360",
    "end": "1581120"
  },
  {
    "text": "here is where I would like to Showcase how we have the management cluster versus Target cluster so on the top I",
    "start": "1581120",
    "end": "1588260"
  },
  {
    "text": "have the management cluster on the bottom I have the target cluster so this is a cluster you're actually going to",
    "start": "1588260",
    "end": "1593659"
  },
  {
    "text": "provision now because in AWS the VPC provisioning takes around five minutes I've already",
    "start": "1593659",
    "end": "1599600"
  },
  {
    "text": "provisioned the target cluster it's just kind of be more resourceful with the time",
    "start": "1599600",
    "end": "1605360"
  },
  {
    "text": "but what I have here I'm actually getting all the machines so the machines are our crds these are all our instances",
    "start": "1605360",
    "end": "1610940"
  },
  {
    "text": "and we can see we have currently I'm just going to try to highlight them you see here control plane control plane",
    "start": "1610940",
    "end": "1617659"
  },
  {
    "text": "control plane we have three control plane machines and you can actually see in our Target",
    "start": "1617659",
    "end": "1623120"
  },
  {
    "text": "clustering that we have free control plane machines as well and here on the",
    "start": "1623120",
    "end": "1628700"
  },
  {
    "text": "mind management cluster side we can see that we have one worker node this is well this is like Insider knowledge but",
    "start": "1628700",
    "end": "1636020"
  },
  {
    "text": "MD here stands for machine deployment which is pretty much our data plane and we can see that here we have one worker",
    "start": "1636020",
    "end": "1642380"
  },
  {
    "text": "node as well so pretty much what we have in our machines matches the target cluster as well",
    "start": "1642380",
    "end": "1647480"
  },
  {
    "text": "the change I would like to introduce is pretty much increased amount of replicants that we",
    "start": "1647480",
    "end": "1652700"
  },
  {
    "text": "have for our cluster now before I do that some people might be new to the helm",
    "start": "1652700",
    "end": "1659000"
  },
  {
    "text": "chart or actually how we parametrize some of our variables so here is the helm chart or the input file for the",
    "start": "1659000",
    "end": "1664520"
  },
  {
    "text": "helm chart that I've actually showcased on the slides so pretty much is similar again we parametrize the version of let",
    "start": "1664520",
    "end": "1671360"
  },
  {
    "text": "me make this bigger a bit we parameterize the version of kubernetes to 124 free replica nodes for our",
    "start": "1671360",
    "end": "1676760"
  },
  {
    "text": "control plane and one replica node for our worker worker plane or data plane so everything matches that we have in our",
    "start": "1676760",
    "end": "1683120"
  },
  {
    "text": "terminal now to Showcase actually to Showcase how",
    "start": "1683120",
    "end": "1688640"
  },
  {
    "text": "Helm chart works I would like to showcase let's see the template",
    "start": "1688640",
    "end": "1694940"
  },
  {
    "text": "I'm going to go to the cluster template and here again everything we've seen on the",
    "start": "1694940",
    "end": "1700700"
  },
  {
    "text": "slides pretty much is the same so we have a cluster resource we choose this live 16 for all pods and our",
    "start": "1700700",
    "end": "1707240"
  },
  {
    "text": "infrastructure reference is AWS so here is where we pretty much say that we want this cluster to be deployed in AWS",
    "start": "1707240",
    "end": "1713539"
  },
  {
    "text": "to see where the template like where the helm chargeable input variables let's go to machine deployment",
    "start": "1713539",
    "end": "1720380"
  },
  {
    "text": "and here is actually where you're going to pick up the amount of replicas for our work nodes and here's how we're",
    "start": "1720380",
    "end": "1726440"
  },
  {
    "text": "going to pick up the version of kubernetes so this is just a way for Helm to pretty much pull up the values that we have in in the input file and",
    "start": "1726440",
    "end": "1733100"
  },
  {
    "text": "recreate the Manifest with the desired state that we want actually one more minute hopefully if you give me maybe",
    "start": "1733100",
    "end": "1738440"
  },
  {
    "text": "two more minutes I'm gonna showcase the demo if everyone is patient enough um but I'll try to go through this as",
    "start": "1738440",
    "end": "1743960"
  },
  {
    "text": "quickly as possible so what I'm actually going to do the only thing I'm going to do is change our",
    "start": "1743960",
    "end": "1749659"
  },
  {
    "text": "values that demo file that we send on the slides and I'm going to increase the amount of replicas from one to let's put",
    "start": "1749659",
    "end": "1756320"
  },
  {
    "text": "five because it's get UPS all I need to do is to use git commands to submit my changes",
    "start": "1756320",
    "end": "1762440"
  },
  {
    "text": "so I'm going to use a git commit with a very meaningful",
    "start": "1762440",
    "end": "1769399"
  },
  {
    "text": "demo message I'm going to speed all my files and I'm going to do a git push",
    "start": "1769399",
    "end": "1775880"
  },
  {
    "text": "straight away I know over time but I really want to showcase this and how it's actually",
    "start": "1775880",
    "end": "1781340"
  },
  {
    "text": "going to work cool now what we actually can do we can look in the Argo City this is going to",
    "start": "1781340",
    "end": "1787520"
  },
  {
    "text": "be very overwhelming but this is how we can see a visualization of all of our parameters and customer service definitions so what I'm going to do it's",
    "start": "1787520",
    "end": "1795020"
  },
  {
    "text": "actually we're going to look for the repository every single couple of minutes but I can reinforce to look for new changes so if I hit a refresh and",
    "start": "1795020",
    "end": "1802340"
  },
  {
    "text": "hopefully my internet is not going to fail me oh goodness mine this is peer",
    "start": "1802340",
    "end": "1808700"
  },
  {
    "text": "pressure let's see am I actually",
    "start": "1808700",
    "end": "1814000"
  },
  {
    "text": "okay let me just do the word forward again local demos cool okay refresh",
    "start": "1815020",
    "end": "1823580"
  },
  {
    "text": "refreshing awesome and we can see that we are out",
    "start": "1823580",
    "end": "1828980"
  },
  {
    "text": "of sync ideally we should see our change here we increase the amount of replicas from one to five now with Argo CD you",
    "start": "1828980",
    "end": "1835700"
  },
  {
    "text": "can do automatic reconciliation I chose to do manual reconciliation just because I would like to kick off the demo so",
    "start": "1835700",
    "end": "1841460"
  },
  {
    "text": "what I'm going to do I'm going to synchronize manually but this can be fully automated with Argo City and ideally we can see that we have some",
    "start": "1841460",
    "end": "1847820"
  },
  {
    "text": "resources showing up here but more importantly we should be able to see them here on the management cluster we",
    "start": "1847820",
    "end": "1854059"
  },
  {
    "text": "can already provision some of our machines and ideally by the end of it hopefully we're not going to have time",
    "start": "1854059",
    "end": "1860299"
  },
  {
    "text": "to see this but within a minute or so we'll be able to see new machines added to the cluster so I can come back to",
    "start": "1860299",
    "end": "1866659"
  },
  {
    "text": "this after I'm introducing one of the last slides oh dear pressure",
    "start": "1866659",
    "end": "1874299"
  },
  {
    "text": "cool I'll come back to that I really want to showcase how that's going to happen it's usually around the minute so shall I actually stop now",
    "start": "1874460",
    "end": "1881179"
  },
  {
    "text": "is that it I don't have time cool now unfortunately we don't have",
    "start": "1881179",
    "end": "1886520"
  },
  {
    "text": "time to actually showcase the demo or another slide I wanted to Showcase is how we can combine all of these tools",
    "start": "1886520",
    "end": "1891679"
  },
  {
    "text": "together so how we can use Tinkerbell cluster API and Argo CD to deploy our infrastructure in an automatic way now",
    "start": "1891679",
    "end": "1899360"
  },
  {
    "text": "I don't have any more slides this is the overlap between the tools but more importantly I would like to thank you",
    "start": "1899360",
    "end": "1904820"
  },
  {
    "text": "very much if you have any questions and if you like to see the demo there it's actually a recording of it so you'll be able to see it I'm more than happy to",
    "start": "1904820",
    "end": "1911840"
  },
  {
    "text": "show it after the talk as well so like if you want to real estate I'm happy to showcase the Showcase it after if you",
    "start": "1911840",
    "end": "1917960"
  },
  {
    "text": "have any questions reach out to me on social media such as Twitter and Linkedin and this is a QR code towards",
    "start": "1917960",
    "end": "1923120"
  },
  {
    "text": "the cloud native fundamentals course so if everyone would like to start their Korean Cloud native I recommend taking",
    "start": "1923120",
    "end": "1928220"
  },
  {
    "text": "this course now this is Katie gomanji and I look forward to seeing how you can shape the cloud native ecosystem thank",
    "start": "1928220",
    "end": "1933860"
  },
  {
    "text": "you and enjoy the rest of the conference",
    "start": "1933860",
    "end": "1937299"
  },
  {
    "text": "and we have we have new machines here 49 seconds ago here it is the demo worked",
    "start": "1943000",
    "end": "1948740"
  },
  {
    "text": "actually but not in time",
    "start": "1948740",
    "end": "1952120"
  }
]