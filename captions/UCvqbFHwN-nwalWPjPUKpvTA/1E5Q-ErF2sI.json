[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "welcome to our kubecon north america",
    "start": "719",
    "end": "3560"
  },
  {
    "text": "2021 presentation it is our pleasure to",
    "start": "3560",
    "end": "7359"
  },
  {
    "text": "meet you virtually in this event",
    "start": "7359",
    "end": "10160"
  },
  {
    "text": "in this talk",
    "start": "10160",
    "end": "11599"
  },
  {
    "text": "we will walk you through our service",
    "start": "11599",
    "end": "14400"
  },
  {
    "text": "architecture",
    "start": "14400",
    "end": "15759"
  },
  {
    "text": "to anonymize personal sensitive data to",
    "start": "15759",
    "end": "19279"
  },
  {
    "text": "preserve data privacy",
    "start": "19279",
    "end": "22560"
  },
  {
    "start": "21000",
    "end": "73000"
  },
  {
    "text": "here is the agenda for today",
    "start": "22560",
    "end": "25119"
  },
  {
    "text": "first let's look at the global",
    "start": "25119",
    "end": "27680"
  },
  {
    "text": "legislation",
    "start": "27680",
    "end": "29119"
  },
  {
    "text": "landscapes on data protection and",
    "start": "29119",
    "end": "31840"
  },
  {
    "text": "privacy preservation",
    "start": "31840",
    "end": "33840"
  },
  {
    "text": "what's their impacts on our industry and",
    "start": "33840",
    "end": "37280"
  },
  {
    "text": "how should we address",
    "start": "37280",
    "end": "39040"
  },
  {
    "text": "to these challenges",
    "start": "39040",
    "end": "40879"
  },
  {
    "text": "next",
    "start": "40879",
    "end": "41760"
  },
  {
    "text": "we present to you the solution",
    "start": "41760",
    "end": "43840"
  },
  {
    "text": "architecture",
    "start": "43840",
    "end": "45120"
  },
  {
    "text": "through our target's use case that is to",
    "start": "45120",
    "end": "48320"
  },
  {
    "text": "anonymize personal and sensitive data",
    "start": "48320",
    "end": "52079"
  },
  {
    "text": "from images that are in a hosted storage",
    "start": "52079",
    "end": "56000"
  },
  {
    "text": "environment",
    "start": "56000",
    "end": "57840"
  },
  {
    "text": "rest of the talk will deep dive into",
    "start": "57840",
    "end": "60399"
  },
  {
    "text": "each of the building blocks",
    "start": "60399",
    "end": "62960"
  },
  {
    "text": "we will show to you",
    "start": "62960",
    "end": "64640"
  },
  {
    "text": "how we use",
    "start": "64640",
    "end": "66640"
  },
  {
    "text": "adapt and fine-tune these technologies",
    "start": "66640",
    "end": "69760"
  },
  {
    "text": "to meet our scalability and security",
    "start": "69760",
    "end": "72400"
  },
  {
    "text": "goals",
    "start": "72400",
    "end": "74240"
  },
  {
    "start": "73000",
    "end": "217000"
  },
  {
    "text": "data protection and privacy is an",
    "start": "74240",
    "end": "77200"
  },
  {
    "text": "increasingly important issue for global",
    "start": "77200",
    "end": "79759"
  },
  {
    "text": "data controllers",
    "start": "79759",
    "end": "81360"
  },
  {
    "text": "care must be taken to process exchange",
    "start": "81360",
    "end": "84400"
  },
  {
    "text": "or store sensitive personal identifiable",
    "start": "84400",
    "end": "88000"
  },
  {
    "text": "information and honor privacy",
    "start": "88000",
    "end": "90720"
  },
  {
    "text": "preferences",
    "start": "90720",
    "end": "92799"
  },
  {
    "text": "so here we have a diagram",
    "start": "92799",
    "end": "95280"
  },
  {
    "text": "from the united nations",
    "start": "95280",
    "end": "98240"
  },
  {
    "text": "dated year 2020 about 66",
    "start": "98240",
    "end": "101840"
  },
  {
    "text": "of the countries in the world have data",
    "start": "101840",
    "end": "104000"
  },
  {
    "text": "protection laws",
    "start": "104000",
    "end": "105439"
  },
  {
    "text": "for reference just a couple of years",
    "start": "105439",
    "end": "108000"
  },
  {
    "text": "before that the number is about 50",
    "start": "108000",
    "end": "111119"
  },
  {
    "text": "so we anticipate more and more countries",
    "start": "111119",
    "end": "113439"
  },
  {
    "text": "in the world",
    "start": "113439",
    "end": "114479"
  },
  {
    "text": "will have data production laws in the",
    "start": "114479",
    "end": "116240"
  },
  {
    "text": "future",
    "start": "116240",
    "end": "118320"
  },
  {
    "text": "the it industry addressed to such",
    "start": "118320",
    "end": "120479"
  },
  {
    "text": "requirements by using two techniques",
    "start": "120479",
    "end": "123600"
  },
  {
    "text": "pseudonymization and",
    "start": "123600",
    "end": "125880"
  },
  {
    "text": "anonymization the difference is whether",
    "start": "125880",
    "end": "129039"
  },
  {
    "text": "the transformed data can be switched",
    "start": "129039",
    "end": "131599"
  },
  {
    "text": "back to their original forms",
    "start": "131599",
    "end": "134319"
  },
  {
    "text": "through another process",
    "start": "134319",
    "end": "136319"
  },
  {
    "text": "for example",
    "start": "136319",
    "end": "137760"
  },
  {
    "text": "data encryption and decryption is a form",
    "start": "137760",
    "end": "140640"
  },
  {
    "text": "of pseudonymization",
    "start": "140640",
    "end": "143040"
  },
  {
    "text": "once encrypted the data can be used in",
    "start": "143040",
    "end": "145520"
  },
  {
    "text": "computation",
    "start": "145520",
    "end": "147520"
  },
  {
    "text": "transmission and persistent",
    "start": "147520",
    "end": "150560"
  },
  {
    "text": "in fact",
    "start": "150560",
    "end": "151760"
  },
  {
    "text": "data protection laws such as gdpr",
    "start": "151760",
    "end": "154080"
  },
  {
    "text": "recommends",
    "start": "154080",
    "end": "155640"
  },
  {
    "text": "pseudonymization because it protects",
    "start": "155640",
    "end": "158160"
  },
  {
    "text": "data privacy",
    "start": "158160",
    "end": "160720"
  },
  {
    "text": "but",
    "start": "160720",
    "end": "161599"
  },
  {
    "text": "data encryption and decryption often",
    "start": "161599",
    "end": "164239"
  },
  {
    "text": "incurs computational",
    "start": "164239",
    "end": "166640"
  },
  {
    "text": "and operational or sometimes even",
    "start": "166640",
    "end": "168560"
  },
  {
    "text": "financial overheads so this is a mass",
    "start": "168560",
    "end": "171599"
  },
  {
    "text": "solution for all use cases",
    "start": "171599",
    "end": "174000"
  },
  {
    "text": "in fact in many use cases especially",
    "start": "174000",
    "end": "176319"
  },
  {
    "text": "machine learning",
    "start": "176319",
    "end": "177680"
  },
  {
    "text": "the privacy of the private",
    "start": "177680",
    "end": "179920"
  },
  {
    "text": "personal",
    "start": "179920",
    "end": "181200"
  },
  {
    "text": "privacy privacy information",
    "start": "181200",
    "end": "184159"
  },
  {
    "text": "are not used at all so they can be",
    "start": "184159",
    "end": "186720"
  },
  {
    "text": "completely removed from the original",
    "start": "186720",
    "end": "189440"
  },
  {
    "text": "data form",
    "start": "189440",
    "end": "190720"
  },
  {
    "text": "and this is the process called data on",
    "start": "190720",
    "end": "193120"
  },
  {
    "text": "monetization",
    "start": "193120",
    "end": "195599"
  },
  {
    "text": "according to",
    "start": "195599",
    "end": "197120"
  },
  {
    "text": "eu gdpr recital 26 data anonymization",
    "start": "197120",
    "end": "201360"
  },
  {
    "text": "does not fall into the scope of the law",
    "start": "201360",
    "end": "205120"
  },
  {
    "text": "and in the rest of the presentation",
    "start": "205120",
    "end": "208080"
  },
  {
    "text": "our use case is to anonymize",
    "start": "208080",
    "end": "211599"
  },
  {
    "text": "data",
    "start": "211599",
    "end": "212799"
  },
  {
    "text": "this is the hosted",
    "start": "212799",
    "end": "215200"
  },
  {
    "text": "storage environment",
    "start": "215200",
    "end": "218319"
  },
  {
    "start": "217000",
    "end": "363000"
  },
  {
    "text": "here is the high level overview of our",
    "start": "218799",
    "end": "221760"
  },
  {
    "text": "solution architecture",
    "start": "221760",
    "end": "223519"
  },
  {
    "text": "as you can see here we use mostly cncf",
    "start": "223519",
    "end": "227040"
  },
  {
    "text": "project namely rook and kera",
    "start": "227040",
    "end": "230239"
  },
  {
    "text": "rook is the infrastructure orchestrator",
    "start": "230239",
    "end": "233760"
  },
  {
    "text": "we use rook to create self cluster and",
    "start": "233760",
    "end": "237200"
  },
  {
    "text": "creates a self idw bucket",
    "start": "237200",
    "end": "239760"
  },
  {
    "text": "and also enables bucket notification",
    "start": "239760",
    "end": "242560"
  },
  {
    "text": "mechanism",
    "start": "242560",
    "end": "243920"
  },
  {
    "text": "so activities within buckets are pushed",
    "start": "243920",
    "end": "247120"
  },
  {
    "text": "to the message queue endpoint",
    "start": "247120",
    "end": "250080"
  },
  {
    "text": "we use cada for service as a service",
    "start": "250080",
    "end": "252840"
  },
  {
    "text": "framework for our execution engine so",
    "start": "252840",
    "end": "256079"
  },
  {
    "text": "cata or",
    "start": "256079",
    "end": "257359"
  },
  {
    "text": "kubernetes event driven",
    "start": "257359",
    "end": "259919"
  },
  {
    "text": "architecture",
    "start": "259919",
    "end": "261359"
  },
  {
    "text": "is lightweight and the service provider",
    "start": "261359",
    "end": "264080"
  },
  {
    "text": "oriented",
    "start": "264080",
    "end": "265199"
  },
  {
    "text": "is very suitable for our use case here",
    "start": "265199",
    "end": "268240"
  },
  {
    "text": "so the camera service functions use the",
    "start": "268240",
    "end": "271199"
  },
  {
    "text": "machine learning algorithms to detect",
    "start": "271199",
    "end": "274160"
  },
  {
    "text": "objects",
    "start": "274160",
    "end": "275520"
  },
  {
    "text": "of mostly personal and sensitive",
    "start": "275520",
    "end": "278160"
  },
  {
    "text": "information in within the image",
    "start": "278160",
    "end": "280639"
  },
  {
    "text": "as there were so many uh mechanisms",
    "start": "280639",
    "end": "283360"
  },
  {
    "text": "around we use a hard feature classifier",
    "start": "283360",
    "end": "287199"
  },
  {
    "text": "from opencv",
    "start": "287199",
    "end": "288880"
  },
  {
    "text": "and deep neural network from tensorflow",
    "start": "288880",
    "end": "291520"
  },
  {
    "text": "with us lots of generality",
    "start": "291520",
    "end": "294240"
  },
  {
    "text": "so the whole workflow is like this",
    "start": "294240",
    "end": "297280"
  },
  {
    "text": "when images are uploaded to the self-igw",
    "start": "297280",
    "end": "300320"
  },
  {
    "text": "bucket",
    "start": "300320",
    "end": "301919"
  },
  {
    "text": "the activities are pushed into the",
    "start": "301919",
    "end": "304400"
  },
  {
    "text": "message queues the service that",
    "start": "304400",
    "end": "307039"
  },
  {
    "text": "subscribes to the queues rhythm events",
    "start": "307039",
    "end": "310800"
  },
  {
    "text": "and downloads the images from the bucket",
    "start": "310800",
    "end": "314160"
  },
  {
    "text": "using",
    "start": "314160",
    "end": "315680"
  },
  {
    "text": "objects detection algorithms define the",
    "start": "315680",
    "end": "318400"
  },
  {
    "text": "region of interest",
    "start": "318400",
    "end": "320080"
  },
  {
    "text": "and anonymize the personal and sensitive",
    "start": "320080",
    "end": "323600"
  },
  {
    "text": "the anonymized image are then replaced",
    "start": "323600",
    "end": "326400"
  },
  {
    "text": "original images in a bucket",
    "start": "326400",
    "end": "330160"
  },
  {
    "text": "the whole workload",
    "start": "330160",
    "end": "331919"
  },
  {
    "text": "is running on the microchip's cluster",
    "start": "331919",
    "end": "335360"
  },
  {
    "text": "microchips is our last way with",
    "start": "335360",
    "end": "337440"
  },
  {
    "text": "implementation of open shifts and",
    "start": "337440",
    "end": "339360"
  },
  {
    "text": "kubernetes",
    "start": "339360",
    "end": "340960"
  },
  {
    "text": "it's very fast to start usually in",
    "start": "340960",
    "end": "342960"
  },
  {
    "text": "seconds versus minutes in regular",
    "start": "342960",
    "end": "345759"
  },
  {
    "text": "kubernetes and openshift clusters this",
    "start": "345759",
    "end": "348000"
  },
  {
    "text": "consumes very little this resource",
    "start": "348000",
    "end": "350639"
  },
  {
    "text": "ice can run on the small single node",
    "start": "350639",
    "end": "353039"
  },
  {
    "text": "cluster with only two cpu cores and 2gig",
    "start": "353039",
    "end": "355919"
  },
  {
    "text": "of memory",
    "start": "355919",
    "end": "357440"
  },
  {
    "text": "we will spend more time on these",
    "start": "357440",
    "end": "359840"
  },
  {
    "text": "components in the deep dive sections",
    "start": "359840",
    "end": "363840"
  },
  {
    "start": "363000",
    "end": "453000"
  },
  {
    "text": "so now that we've seen a use case for",
    "start": "364720",
    "end": "366400"
  },
  {
    "text": "bug notification",
    "start": "366400",
    "end": "368240"
  },
  {
    "text": "let's look deeper into the details so",
    "start": "368240",
    "end": "371039"
  },
  {
    "text": "bucket notifications are built from",
    "start": "371039",
    "end": "372639"
  },
  {
    "text": "several building blocks the first one is",
    "start": "372639",
    "end": "375120"
  },
  {
    "text": "a topic the topic tells us where to send",
    "start": "375120",
    "end": "377759"
  },
  {
    "text": "a notification",
    "start": "377759",
    "end": "379600"
  },
  {
    "text": "a topic can aggregate different",
    "start": "379600",
    "end": "381360"
  },
  {
    "text": "notifications from different sources to",
    "start": "381360",
    "end": "383840"
  },
  {
    "text": "a specific endpoint",
    "start": "383840",
    "end": "385840"
  },
  {
    "text": "the endpoint could be a kafka message",
    "start": "385840",
    "end": "387759"
  },
  {
    "text": "bus or more precisely a topic inside a",
    "start": "387759",
    "end": "390240"
  },
  {
    "text": "kafka message bus",
    "start": "390240",
    "end": "391840"
  },
  {
    "text": "a topic inside a rabbitmq server",
    "start": "391840",
    "end": "394720"
  },
  {
    "text": "an http server",
    "start": "394720",
    "end": "396479"
  },
  {
    "text": "and we're going to add more like this",
    "start": "396479",
    "end": "398639"
  },
  {
    "text": "we're going to add aws sns slamda",
    "start": "398639",
    "end": "402080"
  },
  {
    "text": "nkp10",
    "start": "402080",
    "end": "403600"
  },
  {
    "text": "and using some scripting and",
    "start": "403600",
    "end": "405680"
  },
  {
    "text": "customization you can add even",
    "start": "405680",
    "end": "408880"
  },
  {
    "text": "a nats message broker as an endpoint for",
    "start": "408880",
    "end": "412720"
  },
  {
    "text": "notifications the second building block",
    "start": "412720",
    "end": "416639"
  },
  {
    "text": "is the notification itself",
    "start": "416639",
    "end": "418080"
  },
  {
    "text": "identification itself is what ties",
    "start": "418080",
    "end": "419759"
  },
  {
    "text": "together the topic with a bucket",
    "start": "419759",
    "end": "422400"
  },
  {
    "text": "it ties them in a way that tells us",
    "start": "422400",
    "end": "424880"
  },
  {
    "text": "which notifications we're interested at",
    "start": "424880",
    "end": "426880"
  },
  {
    "text": "which kind of events creations or",
    "start": "426880",
    "end": "428800"
  },
  {
    "text": "deletions or both",
    "start": "428800",
    "end": "430479"
  },
  {
    "text": "and we can also add",
    "start": "430479",
    "end": "432400"
  },
  {
    "text": "filters that can filter out",
    "start": "432400",
    "end": "436080"
  },
  {
    "text": "different objects from being sent or not",
    "start": "436080",
    "end": "438639"
  },
  {
    "text": "sent as",
    "start": "438639",
    "end": "439759"
  },
  {
    "text": "notifications to the end point",
    "start": "439759",
    "end": "442479"
  },
  {
    "text": "the last building block is the event",
    "start": "442479",
    "end": "444880"
  },
  {
    "text": "itself and this is the information that",
    "start": "444880",
    "end": "447120"
  },
  {
    "text": "we're sending to the topic based on the",
    "start": "447120",
    "end": "449599"
  },
  {
    "text": "configuration in the notification",
    "start": "449599",
    "end": "453360"
  },
  {
    "start": "453000",
    "end": "703000"
  },
  {
    "text": "so if you feel like",
    "start": "453759",
    "end": "455280"
  },
  {
    "text": "setting up the system with the bug",
    "start": "455280",
    "end": "456880"
  },
  {
    "text": "notifications and the endpoints is",
    "start": "456880",
    "end": "458720"
  },
  {
    "text": "complex you're probably right but here",
    "start": "458720",
    "end": "460960"
  },
  {
    "text": "we have something that should help us",
    "start": "460960",
    "end": "462240"
  },
  {
    "text": "and this is rook",
    "start": "462240",
    "end": "463599"
  },
  {
    "text": "rook is a storage operator for",
    "start": "463599",
    "end": "464960"
  },
  {
    "text": "kubernetes it's a graduated cncf project",
    "start": "464960",
    "end": "468160"
  },
  {
    "text": "that provides different storage",
    "start": "468160",
    "end": "470080"
  },
  {
    "text": "providers for kubernetes and has both",
    "start": "470080",
    "end": "472479"
  },
  {
    "text": "file",
    "start": "472479",
    "end": "474160"
  },
  {
    "text": "block and object storage we're going to",
    "start": "474160",
    "end": "476319"
  },
  {
    "text": "focus on the object storage now what do",
    "start": "476319",
    "end": "478479"
  },
  {
    "text": "you get in look you get kind of tuned",
    "start": "478479",
    "end": "480319"
  },
  {
    "text": "the price of one first of all",
    "start": "480319",
    "end": "482960"
  },
  {
    "text": "your storage solution is actually hosted",
    "start": "482960",
    "end": "485360"
  },
  {
    "text": "inside kubernetes with all the value of",
    "start": "485360",
    "end": "487440"
  },
  {
    "text": "orchestration and managements that come",
    "start": "487440",
    "end": "489759"
  },
  {
    "text": "with it the second thing is that it",
    "start": "489759",
    "end": "492160"
  },
  {
    "text": "gives you storage for your kubernetes",
    "start": "492160",
    "end": "494319"
  },
  {
    "text": "applications",
    "start": "494319",
    "end": "496560"
  },
  {
    "text": "now i'm going to show how in five simple",
    "start": "496560",
    "end": "498800"
  },
  {
    "text": "steps using five simple yamls you can",
    "start": "498800",
    "end": "501199"
  },
  {
    "text": "actually build the entire system that we",
    "start": "501199",
    "end": "503759"
  },
  {
    "text": "described before",
    "start": "503759",
    "end": "506479"
  },
  {
    "text": "the first thing that you have to do",
    "start": "506479",
    "end": "508160"
  },
  {
    "text": "you'll have to define the self object",
    "start": "508160",
    "end": "510000"
  },
  {
    "text": "store when you define the cipher object",
    "start": "510000",
    "end": "512159"
  },
  {
    "text": "story ammo you give it a couple of",
    "start": "512159",
    "end": "513760"
  },
  {
    "text": "parameters saying what is the size of",
    "start": "513760",
    "end": "516240"
  },
  {
    "text": "the replica set and how replication is",
    "start": "516240",
    "end": "518800"
  },
  {
    "text": "done different pools that you have and",
    "start": "518800",
    "end": "521120"
  },
  {
    "text": "what's your object gateway",
    "start": "521120",
    "end": "523760"
  },
  {
    "text": "once you have that set up you need to",
    "start": "523760",
    "end": "525600"
  },
  {
    "text": "define the storage class storage sites",
    "start": "525600",
    "end": "527360"
  },
  {
    "text": "are the type of storage that you have",
    "start": "527360",
    "end": "528800"
  },
  {
    "text": "you can have multiple storage classes in",
    "start": "528800",
    "end": "530560"
  },
  {
    "text": "your system",
    "start": "530560",
    "end": "531839"
  },
  {
    "text": "but",
    "start": "531839",
    "end": "532640"
  },
  {
    "text": "each",
    "start": "532640",
    "end": "533760"
  },
  {
    "text": "bucket that you're using has to belong",
    "start": "533760",
    "end": "535279"
  },
  {
    "text": "to a specific storage class",
    "start": "535279",
    "end": "538399"
  },
  {
    "text": "storage trust has something like uh",
    "start": "538399",
    "end": "540240"
  },
  {
    "text": "reclaimed policy and other parameters",
    "start": "540240",
    "end": "542880"
  },
  {
    "text": "that distinguish the different",
    "start": "542880",
    "end": "545040"
  },
  {
    "text": "the way the storage should be handled by",
    "start": "545040",
    "end": "546800"
  },
  {
    "text": "those buckets belonging to the storage",
    "start": "546800",
    "end": "548480"
  },
  {
    "text": "class",
    "start": "548480",
    "end": "550399"
  },
  {
    "text": "now that we have the object store and",
    "start": "550399",
    "end": "552560"
  },
  {
    "text": "the storage class we can define an",
    "start": "552560",
    "end": "554959"
  },
  {
    "text": "object bucket claim an object buckling",
    "start": "554959",
    "end": "556959"
  },
  {
    "text": "is what eventually generate those",
    "start": "556959",
    "end": "558640"
  },
  {
    "text": "buckets",
    "start": "558640",
    "end": "560080"
  },
  {
    "text": "when you define the object bucket claim",
    "start": "560080",
    "end": "562000"
  },
  {
    "text": "you can give it a couple of parameters",
    "start": "562000",
    "end": "564240"
  },
  {
    "text": "very important one is the storage class",
    "start": "564240",
    "end": "566000"
  },
  {
    "text": "that it references um you can have give",
    "start": "566000",
    "end": "569279"
  },
  {
    "text": "it a name or a name generator",
    "start": "569279",
    "end": "571920"
  },
  {
    "text": "and an extra bit of information that we",
    "start": "571920",
    "end": "574080"
  },
  {
    "text": "can give here and this is related to",
    "start": "574080",
    "end": "575600"
  },
  {
    "text": "what we're trying to achieve",
    "start": "575600",
    "end": "577519"
  },
  {
    "text": "you can define as labels",
    "start": "577519",
    "end": "579920"
  },
  {
    "text": "that notifications that we want on this",
    "start": "579920",
    "end": "583440"
  },
  {
    "text": "bucket",
    "start": "583440",
    "end": "584560"
  },
  {
    "text": "so the only extra piece of information",
    "start": "584560",
    "end": "586800"
  },
  {
    "text": "that is needed at the bucket level to",
    "start": "586800",
    "end": "589120"
  },
  {
    "text": "enable block notifications is to",
    "start": "589120",
    "end": "590720"
  },
  {
    "text": "reference notification via label",
    "start": "590720",
    "end": "593680"
  },
  {
    "text": "labels are very useful here like in the",
    "start": "593680",
    "end": "595440"
  },
  {
    "text": "side note just saying that whenever you",
    "start": "595440",
    "end": "597360"
  },
  {
    "text": "want to let's say look for all the",
    "start": "597360",
    "end": "599440"
  },
  {
    "text": "buckets that use specific notifications",
    "start": "599440",
    "end": "601600"
  },
  {
    "text": "searches are becoming much much easier",
    "start": "601600",
    "end": "603360"
  },
  {
    "text": "and also this is not very intrusive into",
    "start": "603360",
    "end": "605680"
  },
  {
    "text": "the actual",
    "start": "605680",
    "end": "606720"
  },
  {
    "text": "ammo of the object bucket claim",
    "start": "606720",
    "end": "609200"
  },
  {
    "text": "so now that we have the object bucket",
    "start": "609200",
    "end": "610800"
  },
  {
    "text": "claim",
    "start": "610800",
    "end": "613120"
  },
  {
    "text": "we actually need to define the topics",
    "start": "613279",
    "end": "615200"
  },
  {
    "text": "and notifications",
    "start": "615200",
    "end": "617519"
  },
  {
    "text": "you probably know everything here is",
    "start": "617519",
    "end": "618959"
  },
  {
    "text": "declarative so you can define the bucket",
    "start": "618959",
    "end": "621600"
  },
  {
    "text": "before the notifications after it",
    "start": "621600",
    "end": "623120"
  },
  {
    "text": "doesn't matter everything eventually",
    "start": "623120",
    "end": "624800"
  },
  {
    "text": "will fall into place where all the",
    "start": "624800",
    "end": "626079"
  },
  {
    "text": "information will be available to our",
    "start": "626079",
    "end": "628320"
  },
  {
    "text": "operator",
    "start": "628320",
    "end": "629519"
  },
  {
    "text": "so another step that we take here is",
    "start": "629519",
    "end": "631440"
  },
  {
    "text": "define the topic as we said before the",
    "start": "631440",
    "end": "633760"
  },
  {
    "text": "topic is the endpoint here we define the",
    "start": "633760",
    "end": "635680"
  },
  {
    "text": "rabbit q server as the endpoint and",
    "start": "635680",
    "end": "638959"
  },
  {
    "text": "we're giving a couple more details of",
    "start": "638959",
    "end": "641120"
  },
  {
    "text": "information some of them are related to",
    "start": "641120",
    "end": "644800"
  },
  {
    "text": "the actual topic like the exchange we're",
    "start": "644800",
    "end": "647040"
  },
  {
    "text": "going to use or what is the",
    "start": "647040",
    "end": "648880"
  },
  {
    "text": "acknowledgement level that we're",
    "start": "648880",
    "end": "650320"
  },
  {
    "text": "expecting from from them the others are",
    "start": "650320",
    "end": "652800"
  },
  {
    "text": "more generic like whether we're using",
    "start": "652800",
    "end": "654880"
  },
  {
    "text": "business notifications or we can pass",
    "start": "654880",
    "end": "657040"
  },
  {
    "text": "opic data and so on and so forth so now",
    "start": "657040",
    "end": "659279"
  },
  {
    "text": "that we have the topic the last bit that",
    "start": "659279",
    "end": "661200"
  },
  {
    "text": "ties everything together is the actual",
    "start": "661200",
    "end": "662720"
  },
  {
    "text": "notification",
    "start": "662720",
    "end": "664399"
  },
  {
    "text": "notification",
    "start": "664399",
    "end": "666079"
  },
  {
    "text": "here just declares",
    "start": "666079",
    "end": "667760"
  },
  {
    "text": "the",
    "start": "667760",
    "end": "668560"
  },
  {
    "text": "association between",
    "start": "668560",
    "end": "670399"
  },
  {
    "text": "the topic that we just defined and what",
    "start": "670399",
    "end": "672800"
  },
  {
    "text": "kind of filters and events are",
    "start": "672800",
    "end": "674640"
  },
  {
    "text": "interesting for our notifications the",
    "start": "674640",
    "end": "676640"
  },
  {
    "text": "association with the bucket doesn't",
    "start": "676640",
    "end": "678320"
  },
  {
    "text": "exist in the area of the notification",
    "start": "678320",
    "end": "680399"
  },
  {
    "text": "instead this is just here in the label",
    "start": "680399",
    "end": "682720"
  },
  {
    "text": "below as part of the object bucket claim",
    "start": "682720",
    "end": "685600"
  },
  {
    "text": "you can see here that we have to",
    "start": "685600",
    "end": "686959"
  },
  {
    "text": "reference the topic",
    "start": "686959",
    "end": "688880"
  },
  {
    "text": "and give some extra information about",
    "start": "688880",
    "end": "690880"
  },
  {
    "text": "what kind of objects we're interested at",
    "start": "690880",
    "end": "692720"
  },
  {
    "text": "we can filter on the keys of the objects",
    "start": "692720",
    "end": "695279"
  },
  {
    "text": "or we can filter on metadata we can",
    "start": "695279",
    "end": "697120"
  },
  {
    "text": "filter on tags there are many many",
    "start": "697120",
    "end": "698640"
  },
  {
    "text": "options here and we also say what kind",
    "start": "698640",
    "end": "700640"
  },
  {
    "text": "of events we're interested at",
    "start": "700640",
    "end": "704240"
  },
  {
    "text": "now let's see what it actually means to",
    "start": "706560",
    "end": "708240"
  },
  {
    "text": "send identification to the servers",
    "start": "708240",
    "end": "709920"
  },
  {
    "text": "function",
    "start": "709920",
    "end": "711440"
  },
  {
    "text": "the notification based on the",
    "start": "711440",
    "end": "713120"
  },
  {
    "text": "configuration similar to what we",
    "start": "713120",
    "end": "715120"
  },
  {
    "text": "described before",
    "start": "715120",
    "end": "716399"
  },
  {
    "text": "is sent outside with a ceph cluster",
    "start": "716399",
    "end": "719200"
  },
  {
    "text": "into in this case the kafka k native bus",
    "start": "719200",
    "end": "723760"
  },
  {
    "text": "now we have a service function that is",
    "start": "723760",
    "end": "725680"
  },
  {
    "text": "subscribed to the topic that we publish",
    "start": "725680",
    "end": "727680"
  },
  {
    "text": "to kafka and is getting identification",
    "start": "727680",
    "end": "729920"
  },
  {
    "text": "on the other side",
    "start": "729920",
    "end": "731279"
  },
  {
    "text": "this is an end-to-end solution it is",
    "start": "731279",
    "end": "733040"
  },
  {
    "text": "reliable because sef is going to store",
    "start": "733040",
    "end": "736320"
  },
  {
    "text": "the notification",
    "start": "736320",
    "end": "738320"
  },
  {
    "text": "using radius until it gets the act from",
    "start": "738320",
    "end": "741200"
  },
  {
    "text": "kafka kafka is going to store",
    "start": "741200",
    "end": "743120"
  },
  {
    "text": "identification until the identification",
    "start": "743120",
    "end": "745519"
  },
  {
    "text": "is being read by the serverless function",
    "start": "745519",
    "end": "748160"
  },
  {
    "text": "and the solution is also scalable",
    "start": "748160",
    "end": "750240"
  },
  {
    "text": "because kafka is scalable safe is",
    "start": "750240",
    "end": "752320"
  },
  {
    "text": "scalable and the serverless function is",
    "start": "752320",
    "end": "754480"
  },
  {
    "text": "going to spin more functions as more",
    "start": "754480",
    "end": "756480"
  },
  {
    "text": "messages are coming",
    "start": "756480",
    "end": "758399"
  },
  {
    "text": "on the topic that they're interested at",
    "start": "758399",
    "end": "760560"
  },
  {
    "text": "so this is the whole solution which is",
    "start": "760560",
    "end": "762160"
  },
  {
    "text": "reliable and scalable",
    "start": "762160",
    "end": "765440"
  },
  {
    "start": "765000",
    "end": "849000"
  },
  {
    "text": "so if we have a solution which is both",
    "start": "766560",
    "end": "768240"
  },
  {
    "text": "reliable and scalable",
    "start": "768240",
    "end": "770399"
  },
  {
    "text": "why isn't that enough why do we need",
    "start": "770399",
    "end": "772000"
  },
  {
    "text": "something else well this works very well",
    "start": "772000",
    "end": "775120"
  },
  {
    "text": "if the processing",
    "start": "775120",
    "end": "776959"
  },
  {
    "text": "done by the service function is simple",
    "start": "776959",
    "end": "779440"
  },
  {
    "text": "sometimes this is not the case",
    "start": "779440",
    "end": "781440"
  },
  {
    "text": "those servers function can have",
    "start": "781440",
    "end": "783200"
  },
  {
    "text": "processing that takes a very long time",
    "start": "783200",
    "end": "785760"
  },
  {
    "text": "and may fail midway",
    "start": "785760",
    "end": "787600"
  },
  {
    "text": "they can have processing that involves",
    "start": "787600",
    "end": "789360"
  },
  {
    "text": "multiple steps that involve multiple",
    "start": "789360",
    "end": "791839"
  },
  {
    "text": "functions that invoke one another and",
    "start": "791839",
    "end": "794240"
  },
  {
    "text": "each one of them can fail in the middle",
    "start": "794240",
    "end": "796160"
  },
  {
    "text": "or just go stale or crash or not be",
    "start": "796160",
    "end": "798399"
  },
  {
    "text": "responsive anymore for those complex",
    "start": "798399",
    "end": "801440"
  },
  {
    "text": "cases we need something else we need the",
    "start": "801440",
    "end": "804240"
  },
  {
    "text": "ability to know that something or some",
    "start": "804240",
    "end": "807279"
  },
  {
    "text": "piece of work is never going to be",
    "start": "807279",
    "end": "809440"
  },
  {
    "text": "processed in the end even if it was",
    "start": "809440",
    "end": "811920"
  },
  {
    "text": "fetched from the queue and",
    "start": "811920",
    "end": "814959"
  },
  {
    "text": "we need a way to",
    "start": "814959",
    "end": "816560"
  },
  {
    "text": "make sure that this piece of work is",
    "start": "816560",
    "end": "818399"
  },
  {
    "text": "being processed later on by some other",
    "start": "818399",
    "end": "821839"
  },
  {
    "text": "consumer that is able to process it",
    "start": "821839",
    "end": "825040"
  },
  {
    "text": "and we want to do that without ideally",
    "start": "825040",
    "end": "828480"
  },
  {
    "text": "introducing a whole set of complexity",
    "start": "828480",
    "end": "830639"
  },
  {
    "text": "into the system as another message",
    "start": "830639",
    "end": "833279"
  },
  {
    "text": "broker or another system that allows",
    "start": "833279",
    "end": "835519"
  },
  {
    "text": "that",
    "start": "835519",
    "end": "837360"
  },
  {
    "text": "given those requirements for those cases",
    "start": "837360",
    "end": "839839"
  },
  {
    "text": "we would like to introduce a native",
    "start": "839839",
    "end": "841680"
  },
  {
    "text": "message q api where the actual message",
    "start": "841680",
    "end": "844480"
  },
  {
    "text": "queue is embedded inside ceph",
    "start": "844480",
    "end": "849120"
  },
  {
    "start": "849000",
    "end": "931000"
  },
  {
    "text": "so let's try and summarize the two",
    "start": "850160",
    "end": "851760"
  },
  {
    "text": "different words in which we can operate",
    "start": "851760",
    "end": "853920"
  },
  {
    "text": "the existing push mode the messages are",
    "start": "853920",
    "end": "856720"
  },
  {
    "text": "sent to an external message broker",
    "start": "856720",
    "end": "859199"
  },
  {
    "text": "the service function programming model",
    "start": "859199",
    "end": "861279"
  },
  {
    "text": "is that it's based on the queue that",
    "start": "861279",
    "end": "864240"
  },
  {
    "text": "stores the messages",
    "start": "864240",
    "end": "866480"
  },
  {
    "text": "scaling is based on the utilization of",
    "start": "866480",
    "end": "869120"
  },
  {
    "text": "the serverless function",
    "start": "869120",
    "end": "871199"
  },
  {
    "text": "the reliability of the producer which is",
    "start": "871199",
    "end": "873120"
  },
  {
    "text": "ceph is the fact that we're storing",
    "start": "873120",
    "end": "874800"
  },
  {
    "text": "everything in radius until it's being",
    "start": "874800",
    "end": "876560"
  },
  {
    "text": "act by the message broker and the",
    "start": "876560",
    "end": "879519"
  },
  {
    "text": "reliability of the consumer is based on",
    "start": "879519",
    "end": "882320"
  },
  {
    "text": "whatever reliability the message bus",
    "start": "882320",
    "end": "884560"
  },
  {
    "text": "gives them",
    "start": "884560",
    "end": "886079"
  },
  {
    "text": "now in the new mode in the pull mode the",
    "start": "886079",
    "end": "888320"
  },
  {
    "text": "notifications are stored inside raiders",
    "start": "888320",
    "end": "890959"
  },
  {
    "text": "itself so not an external system",
    "start": "890959",
    "end": "894480"
  },
  {
    "text": "whatever reads the messages",
    "start": "894480",
    "end": "897120"
  },
  {
    "text": "is based on an outscaling trigger which",
    "start": "897120",
    "end": "899680"
  },
  {
    "text": "sees",
    "start": "899680",
    "end": "900639"
  },
  {
    "text": "what is the size of the queue",
    "start": "900639",
    "end": "902480"
  },
  {
    "text": "approximate that and",
    "start": "902480",
    "end": "905199"
  },
  {
    "text": "spins as much consumers as needed based",
    "start": "905199",
    "end": "908320"
  },
  {
    "text": "on the size of the queue the reliability",
    "start": "908320",
    "end": "910480"
  },
  {
    "text": "of the producer is just radius",
    "start": "910480",
    "end": "912560"
  },
  {
    "text": "and the consumer's reliability is is",
    "start": "912560",
    "end": "914800"
  },
  {
    "text": "based on the fact that we have a",
    "start": "914800",
    "end": "916880"
  },
  {
    "text": "mechanism where if somebody doesn't act",
    "start": "916880",
    "end": "919760"
  },
  {
    "text": "the",
    "start": "919760",
    "end": "920639"
  },
  {
    "text": "the end of their processing",
    "start": "920639",
    "end": "923279"
  },
  {
    "text": "within some given timeout then we're",
    "start": "923279",
    "end": "925519"
  },
  {
    "text": "making those notifications available for",
    "start": "925519",
    "end": "927600"
  },
  {
    "text": "another consumer to consume them",
    "start": "927600",
    "end": "931279"
  },
  {
    "start": "931000",
    "end": "1045000"
  },
  {
    "text": "we've chosen to model our message view",
    "start": "931440",
    "end": "933839"
  },
  {
    "text": "based on the aws sqs api",
    "start": "933839",
    "end": "936639"
  },
  {
    "text": "the reason is that it fits very well",
    "start": "936639",
    "end": "938320"
  },
  {
    "text": "with our requirements first of all it",
    "start": "938320",
    "end": "940480"
  },
  {
    "text": "has an at least once guarantee",
    "start": "940480",
    "end": "942480"
  },
  {
    "text": "which means that",
    "start": "942480",
    "end": "944000"
  },
  {
    "text": "whenever a consumer reads a notification",
    "start": "944000",
    "end": "946240"
  },
  {
    "text": "from the queue the notification is",
    "start": "946240",
    "end": "948160"
  },
  {
    "text": "becoming invisible so other consumers",
    "start": "948160",
    "end": "950399"
  },
  {
    "text": "can keep on consuming other",
    "start": "950399",
    "end": "951839"
  },
  {
    "text": "notifications this guarantees the",
    "start": "951839",
    "end": "954000"
  },
  {
    "text": "scalability of the solution",
    "start": "954000",
    "end": "956000"
  },
  {
    "text": "however as we said",
    "start": "956000",
    "end": "957759"
  },
  {
    "text": "processing could be complex and",
    "start": "957759",
    "end": "960240"
  },
  {
    "text": "therefore we have a visibility timeout",
    "start": "960240",
    "end": "962720"
  },
  {
    "text": "so after this timeout expires if we",
    "start": "962720",
    "end": "965279"
  },
  {
    "text": "didn't get an ack from the consumer",
    "start": "965279",
    "end": "967440"
  },
  {
    "text": "telling us that the processing actually",
    "start": "967440",
    "end": "969600"
  },
  {
    "text": "ended for this notification notification",
    "start": "969600",
    "end": "972240"
  },
  {
    "text": "is becoming visible again",
    "start": "972240",
    "end": "974399"
  },
  {
    "text": "so any other consumer can pick up on",
    "start": "974399",
    "end": "976079"
  },
  {
    "text": "that and this allows for reliability in",
    "start": "976079",
    "end": "978160"
  },
  {
    "text": "case of client failures",
    "start": "978160",
    "end": "980399"
  },
  {
    "text": "we also have a retention period which",
    "start": "980399",
    "end": "982000"
  },
  {
    "text": "means that stale or obsolete",
    "start": "982000",
    "end": "983920"
  },
  {
    "text": "notifications are being deleted",
    "start": "983920",
    "end": "985360"
  },
  {
    "text": "automatically from the queue and we're",
    "start": "985360",
    "end": "987759"
  },
  {
    "text": "making sure that they're not consumed by",
    "start": "987759",
    "end": "989759"
  },
  {
    "text": "any client",
    "start": "989759",
    "end": "991040"
  },
  {
    "text": "another reason for",
    "start": "991040",
    "end": "992480"
  },
  {
    "text": "selecting the aws sqs api is because",
    "start": "992480",
    "end": "995440"
  },
  {
    "text": "anyone which is already a user of ceph",
    "start": "995440",
    "end": "998240"
  },
  {
    "text": "probably have some kind of a client sdk",
    "start": "998240",
    "end": "1000800"
  },
  {
    "text": "that support all the aws api because we",
    "start": "1000800",
    "end": "1003600"
  },
  {
    "text": "are aws compliant for s3 and other",
    "start": "1003600",
    "end": "1005759"
  },
  {
    "text": "things",
    "start": "1005759",
    "end": "1007279"
  },
  {
    "text": "so",
    "start": "1007279",
    "end": "1008000"
  },
  {
    "text": "by using the cpi we're making sure that",
    "start": "1008000",
    "end": "1010880"
  },
  {
    "text": "the solution is",
    "start": "1010880",
    "end": "1012560"
  },
  {
    "text": "simpler to integrate and",
    "start": "1012560",
    "end": "1015600"
  },
  {
    "text": "doesn't require any special additional",
    "start": "1015600",
    "end": "1017680"
  },
  {
    "text": "sdks or clients",
    "start": "1017680",
    "end": "1020079"
  },
  {
    "text": "we're using raiders for this scalability",
    "start": "1020079",
    "end": "1022399"
  },
  {
    "text": "and the availability of the solution",
    "start": "1022399",
    "end": "1025918"
  },
  {
    "text": "and",
    "start": "1025919",
    "end": "1028000"
  },
  {
    "text": "we're based on the aws sqs but we're not",
    "start": "1028000",
    "end": "1031360"
  },
  {
    "text": "a general purpose message queue",
    "start": "1031360",
    "end": "1033678"
  },
  {
    "text": "we implemented that only for the sake of",
    "start": "1033679",
    "end": "1035520"
  },
  {
    "text": "notifications however in the future we",
    "start": "1035520",
    "end": "1037760"
  },
  {
    "text": "may expose more apis to make it a more",
    "start": "1037760",
    "end": "1041038"
  },
  {
    "text": "general purpose",
    "start": "1041039",
    "end": "1042720"
  },
  {
    "text": "message to solution",
    "start": "1042720",
    "end": "1045760"
  },
  {
    "start": "1045000",
    "end": "1092000"
  },
  {
    "text": "now i know that i've said we don't want",
    "start": "1046000",
    "end": "1047918"
  },
  {
    "text": "to add more complexity to the solution",
    "start": "1047919",
    "end": "1049679"
  },
  {
    "text": "this is why we want the",
    "start": "1049679",
    "end": "1052160"
  },
  {
    "text": "internal message or the native message",
    "start": "1052160",
    "end": "1054400"
  },
  {
    "text": "but sometimes",
    "start": "1054400",
    "end": "1055760"
  },
  {
    "text": "you would like to use an external one",
    "start": "1055760",
    "end": "1057919"
  },
  {
    "text": "this could be for the reason that this",
    "start": "1057919",
    "end": "1059679"
  },
  {
    "text": "external solution is already there or",
    "start": "1059679",
    "end": "1061760"
  },
  {
    "text": "could be for other reason",
    "start": "1061760",
    "end": "1063600"
  },
  {
    "text": "for example your serverless function",
    "start": "1063600",
    "end": "1066480"
  },
  {
    "text": "or your scalar in the case of cada",
    "start": "1066480",
    "end": "1068640"
  },
  {
    "text": "already want to support a certain type",
    "start": "1068640",
    "end": "1071200"
  },
  {
    "text": "of message queue",
    "start": "1071200",
    "end": "1072720"
  },
  {
    "text": "you can use kafka and this would be for",
    "start": "1072720",
    "end": "1074240"
  },
  {
    "text": "a scalable cloud solution you can use",
    "start": "1074240",
    "end": "1076400"
  },
  {
    "text": "the wrapped mq for a more lightweight",
    "start": "1076400",
    "end": "1078559"
  },
  {
    "text": "compact solution both of them are coming",
    "start": "1078559",
    "end": "1081120"
  },
  {
    "text": "with",
    "start": "1081120",
    "end": "1082480"
  },
  {
    "text": "operators that makes deployment and",
    "start": "1082480",
    "end": "1084320"
  },
  {
    "text": "kubernetes much much easier kafka has",
    "start": "1084320",
    "end": "1086880"
  },
  {
    "text": "stream g and webmq has the built-in",
    "start": "1086880",
    "end": "1089360"
  },
  {
    "text": "kubernetes operator",
    "start": "1089360",
    "end": "1092640"
  },
  {
    "start": "1092000",
    "end": "1250000"
  },
  {
    "text": "so currently there are two cncf service",
    "start": "1093600",
    "end": "1096880"
  },
  {
    "text": "frameworks canadian and acada kubernetes",
    "start": "1096880",
    "end": "1100000"
  },
  {
    "text": "events driven architecture",
    "start": "1100000",
    "end": "1102640"
  },
  {
    "text": "both",
    "start": "1102640",
    "end": "1103520"
  },
  {
    "text": "supports",
    "start": "1103520",
    "end": "1104799"
  },
  {
    "text": "scale down to zero through auto scaling",
    "start": "1104799",
    "end": "1108400"
  },
  {
    "text": "the difference between the two is that",
    "start": "1108400",
    "end": "1110000"
  },
  {
    "text": "the k-native is more natural currently",
    "start": "1110000",
    "end": "1112559"
  },
  {
    "text": "and categorize more service oriented so",
    "start": "1112559",
    "end": "1114880"
  },
  {
    "text": "here we have the two diagrams from the",
    "start": "1114880",
    "end": "1116640"
  },
  {
    "text": "architecture picture",
    "start": "1116640",
    "end": "1119039"
  },
  {
    "text": "on the canadian side you see as the",
    "start": "1119039",
    "end": "1121679"
  },
  {
    "text": "service function defined as a creative",
    "start": "1121679",
    "end": "1124160"
  },
  {
    "text": "service",
    "start": "1124160",
    "end": "1125280"
  },
  {
    "text": "which will manage two different concepts",
    "start": "1125280",
    "end": "1127600"
  },
  {
    "text": "called routes on the configuration",
    "start": "1127600",
    "end": "1129840"
  },
  {
    "text": "the routes will split the traffic into",
    "start": "1129840",
    "end": "1131840"
  },
  {
    "text": "different revisions and revisions will",
    "start": "1131840",
    "end": "1134880"
  },
  {
    "text": "go much different endpoint ingress",
    "start": "1134880",
    "end": "1137919"
  },
  {
    "text": "endpoints implemented in the networking",
    "start": "1137919",
    "end": "1141120"
  },
  {
    "text": "stack",
    "start": "1141120",
    "end": "1143039"
  },
  {
    "text": "one canadian starts it's using ucl for",
    "start": "1143039",
    "end": "1146559"
  },
  {
    "text": "its is defaults not working stack but it",
    "start": "1146559",
    "end": "1151760"
  },
  {
    "text": "is expand beyond that and supports the",
    "start": "1151760",
    "end": "1153760"
  },
  {
    "text": "logical plugin model that is currently",
    "start": "1153760",
    "end": "1156559"
  },
  {
    "text": "you can use",
    "start": "1156559",
    "end": "1157760"
  },
  {
    "text": "steel groove solo and choreo and",
    "start": "1157760",
    "end": "1161039"
  },
  {
    "text": "probably even more",
    "start": "1161039",
    "end": "1163039"
  },
  {
    "text": "the nice thing with the canadian is that",
    "start": "1163039",
    "end": "1165039"
  },
  {
    "text": "the service functions is http triggers",
    "start": "1165039",
    "end": "1168640"
  },
  {
    "text": "you only to focus on your business logic",
    "start": "1168640",
    "end": "1171679"
  },
  {
    "text": "how to decode those cloud events and",
    "start": "1171679",
    "end": "1174080"
  },
  {
    "text": "handle the events",
    "start": "1174080",
    "end": "1176000"
  },
  {
    "text": "we do not have to worry about how the",
    "start": "1176000",
    "end": "1178480"
  },
  {
    "text": "events is sent to the service functions",
    "start": "1178480",
    "end": "1182160"
  },
  {
    "text": "or the different routing is happens in",
    "start": "1182160",
    "end": "1185120"
  },
  {
    "text": "the background",
    "start": "1185120",
    "end": "1187440"
  },
  {
    "text": "on the other hand",
    "start": "1187440",
    "end": "1188640"
  },
  {
    "text": "cata is very service provider oriented",
    "start": "1188640",
    "end": "1192320"
  },
  {
    "text": "it deals with the service providers such",
    "start": "1192320",
    "end": "1194720"
  },
  {
    "text": "as apache kafka or some other queuing",
    "start": "1194720",
    "end": "1197840"
  },
  {
    "text": "mechanisms",
    "start": "1197840",
    "end": "1199520"
  },
  {
    "text": "it will use metrics as the heuristics",
    "start": "1199520",
    "end": "1203120"
  },
  {
    "text": "for scale up and scale down",
    "start": "1203120",
    "end": "1205280"
  },
  {
    "text": "it's also have this con its own",
    "start": "1205280",
    "end": "1207200"
  },
  {
    "text": "implementation of scalar",
    "start": "1207200",
    "end": "1209760"
  },
  {
    "text": "thus we are just as a bridge between",
    "start": "1209760",
    "end": "1212400"
  },
  {
    "text": "the",
    "start": "1212400",
    "end": "1213200"
  },
  {
    "text": "current detection and service function",
    "start": "1213200",
    "end": "1215200"
  },
  {
    "text": "invocation",
    "start": "1215200",
    "end": "1216720"
  },
  {
    "text": "in the catalog service functions",
    "start": "1216720",
    "end": "1218960"
  },
  {
    "text": "it is more complicated you have to deal",
    "start": "1218960",
    "end": "1221679"
  },
  {
    "text": "with the events and you have to decode",
    "start": "1221679",
    "end": "1224880"
  },
  {
    "text": "any type of um receivers but some",
    "start": "1224880",
    "end": "1227919"
  },
  {
    "text": "certain cases you have to remove it once",
    "start": "1227919",
    "end": "1230240"
  },
  {
    "text": "the event is already handled",
    "start": "1230240",
    "end": "1232880"
  },
  {
    "text": "but scatter is very lightweight its",
    "start": "1232880",
    "end": "1235280"
  },
  {
    "text": "personality requires a lot of",
    "start": "1235280",
    "end": "1236880"
  },
  {
    "text": "dependencies and we will see in the next",
    "start": "1236880",
    "end": "1239520"
  },
  {
    "text": "slide that is very suitable for our use",
    "start": "1239520",
    "end": "1242240"
  },
  {
    "text": "case as a standalone single",
    "start": "1242240",
    "end": "1245280"
  },
  {
    "text": "purpose",
    "start": "1245280",
    "end": "1246880"
  },
  {
    "text": "service deployment",
    "start": "1246880",
    "end": "1250480"
  },
  {
    "start": "1250000",
    "end": "1338000"
  },
  {
    "text": "we choose cata",
    "start": "1250880",
    "end": "1252559"
  },
  {
    "text": "for our service framework in this",
    "start": "1252559",
    "end": "1254880"
  },
  {
    "text": "solution because it has the following",
    "start": "1254880",
    "end": "1257039"
  },
  {
    "text": "features",
    "start": "1257039",
    "end": "1258080"
  },
  {
    "text": "first of all the service functions to",
    "start": "1258080",
    "end": "1260559"
  },
  {
    "text": "process images have to be long-standing",
    "start": "1260559",
    "end": "1264000"
  },
  {
    "text": "because as long as they are our image",
    "start": "1264000",
    "end": "1266000"
  },
  {
    "text": "upload to the rgw buckets the service",
    "start": "1266000",
    "end": "1268559"
  },
  {
    "text": "function have to stay alive otherwise",
    "start": "1268559",
    "end": "1270880"
  },
  {
    "text": "getting up and scaling down could cause",
    "start": "1270880",
    "end": "1273120"
  },
  {
    "text": "overhead and it is not quite efficient",
    "start": "1273120",
    "end": "1277120"
  },
  {
    "text": "long-running service functions will",
    "start": "1277120",
    "end": "1279039"
  },
  {
    "text": "become an issue for auto scanners this",
    "start": "1279039",
    "end": "1281919"
  },
  {
    "text": "could mess up with all the scalars um",
    "start": "1281919",
    "end": "1284559"
  },
  {
    "text": "calculation and prediction",
    "start": "1284559",
    "end": "1286880"
  },
  {
    "text": "but this is another issue for canada",
    "start": "1286880",
    "end": "1288640"
  },
  {
    "text": "because cata does not require external",
    "start": "1288640",
    "end": "1291280"
  },
  {
    "text": "water scanners",
    "start": "1291280",
    "end": "1292799"
  },
  {
    "text": "second cut is very lightweight it does",
    "start": "1292799",
    "end": "1295679"
  },
  {
    "text": "not need",
    "start": "1295679",
    "end": "1296799"
  },
  {
    "text": "any uh dependent networking components",
    "start": "1296799",
    "end": "1299840"
  },
  {
    "text": "this is very suitable for edge computing",
    "start": "1299840",
    "end": "1302159"
  },
  {
    "text": "or",
    "start": "1302159",
    "end": "1303280"
  },
  {
    "text": "single purpose applications",
    "start": "1303280",
    "end": "1306960"
  },
  {
    "text": "third",
    "start": "1306960",
    "end": "1308799"
  },
  {
    "text": "because camera",
    "start": "1308799",
    "end": "1310559"
  },
  {
    "text": "is not http triggered the service",
    "start": "1310559",
    "end": "1312960"
  },
  {
    "text": "functions do not need to have external",
    "start": "1312960",
    "end": "1315600"
  },
  {
    "text": "endpoints",
    "start": "1315600",
    "end": "1317039"
  },
  {
    "text": "external endpoints are not always",
    "start": "1317039",
    "end": "1318960"
  },
  {
    "text": "available",
    "start": "1318960",
    "end": "1320080"
  },
  {
    "text": "because of the next connectivity issues",
    "start": "1320080",
    "end": "1322400"
  },
  {
    "text": "or security issues",
    "start": "1322400",
    "end": "1325520"
  },
  {
    "text": "and last",
    "start": "1325520",
    "end": "1326720"
  },
  {
    "text": "cannot preemptively auto-scale surface",
    "start": "1326720",
    "end": "1329280"
  },
  {
    "text": "functions to miss incoming requests so",
    "start": "1329280",
    "end": "1332720"
  },
  {
    "text": "this can make the real-time processing a",
    "start": "1332720",
    "end": "1335760"
  },
  {
    "text": "possibility",
    "start": "1335760",
    "end": "1338480"
  },
  {
    "start": "1338000",
    "end": "1448000"
  },
  {
    "text": "now let's look at anonymization service",
    "start": "1338559",
    "end": "1341360"
  },
  {
    "text": "function",
    "start": "1341360",
    "end": "1342559"
  },
  {
    "text": "the service function first",
    "start": "1342559",
    "end": "1344720"
  },
  {
    "text": "read the message from the message queue",
    "start": "1344720",
    "end": "1346960"
  },
  {
    "text": "and find the location of the such",
    "start": "1346960",
    "end": "1349200"
  },
  {
    "text": "self-igw",
    "start": "1349200",
    "end": "1350720"
  },
  {
    "text": "bucket",
    "start": "1350720",
    "end": "1351919"
  },
  {
    "text": "it downloads the image from the bucket",
    "start": "1351919",
    "end": "1354480"
  },
  {
    "text": "and detects if that if there are any",
    "start": "1354480",
    "end": "1356320"
  },
  {
    "text": "personal and sensitive information such",
    "start": "1356320",
    "end": "1359280"
  },
  {
    "text": "as faces and license plates and blurs",
    "start": "1359280",
    "end": "1362240"
  },
  {
    "text": "the region of interest using rectangular",
    "start": "1362240",
    "end": "1365120"
  },
  {
    "text": "box",
    "start": "1365120",
    "end": "1366320"
  },
  {
    "text": "and then replacing the original image in",
    "start": "1366320",
    "end": "1368400"
  },
  {
    "text": "the bucket",
    "start": "1368400",
    "end": "1370480"
  },
  {
    "text": "as you know there are many object",
    "start": "1370480",
    "end": "1372080"
  },
  {
    "text": "detection algorithms around",
    "start": "1372080",
    "end": "1374720"
  },
  {
    "text": "such as har cascade classifier and",
    "start": "1374720",
    "end": "1378080"
  },
  {
    "text": "different learning neural networks",
    "start": "1378080",
    "end": "1380400"
  },
  {
    "text": "all these algorithms have similar",
    "start": "1380400",
    "end": "1382640"
  },
  {
    "text": "features",
    "start": "1382640",
    "end": "1383679"
  },
  {
    "text": "they both detect well-defined features",
    "start": "1383679",
    "end": "1386799"
  },
  {
    "text": "as different scales",
    "start": "1386799",
    "end": "1388559"
  },
  {
    "text": "and they match up to the predefined",
    "start": "1388559",
    "end": "1390640"
  },
  {
    "text": "objects",
    "start": "1390640",
    "end": "1393039"
  },
  {
    "text": "the half feature cascade classifier is",
    "start": "1393840",
    "end": "1396880"
  },
  {
    "text": "very fast but can only do one detection",
    "start": "1396880",
    "end": "1399280"
  },
  {
    "text": "at a time it can only detect one class",
    "start": "1399280",
    "end": "1402080"
  },
  {
    "text": "if you have multiple class then you have",
    "start": "1402080",
    "end": "1404559"
  },
  {
    "text": "to have multiple classifiers and this is",
    "start": "1404559",
    "end": "1407200"
  },
  {
    "text": "obviously not quite convenient",
    "start": "1407200",
    "end": "1409760"
  },
  {
    "text": "dna models on the other hand can detect",
    "start": "1409760",
    "end": "1412400"
  },
  {
    "text": "multiple classes but they are more",
    "start": "1412400",
    "end": "1414840"
  },
  {
    "text": "complicated and often require high",
    "start": "1414840",
    "end": "1416799"
  },
  {
    "text": "performance hardwares like gpu and isaac",
    "start": "1416799",
    "end": "1420480"
  },
  {
    "text": "so without loss of a generality this",
    "start": "1420480",
    "end": "1422960"
  },
  {
    "text": "solution uses the harm feature cascade",
    "start": "1422960",
    "end": "1425760"
  },
  {
    "text": "classifier from opencv to detect faces",
    "start": "1425760",
    "end": "1429039"
  },
  {
    "text": "because faces have well-defined",
    "start": "1429039",
    "end": "1431600"
  },
  {
    "text": "landscape",
    "start": "1431600",
    "end": "1432880"
  },
  {
    "text": "and also use the pre-strained tensorflow",
    "start": "1432880",
    "end": "1434880"
  },
  {
    "text": "model for license plates destruction",
    "start": "1434880",
    "end": "1437200"
  },
  {
    "text": "because license phrases have different",
    "start": "1437200",
    "end": "1439360"
  },
  {
    "text": "forms and not our forms are the same so",
    "start": "1439360",
    "end": "1442960"
  },
  {
    "text": "uh deep learning models",
    "start": "1442960",
    "end": "1445120"
  },
  {
    "text": "is the better choice in this case",
    "start": "1445120",
    "end": "1448240"
  },
  {
    "start": "1448000",
    "end": "1516000"
  },
  {
    "text": "and the last",
    "start": "1448240",
    "end": "1449600"
  },
  {
    "text": "let's look at the cluster orchestration",
    "start": "1449600",
    "end": "1452159"
  },
  {
    "text": "system called microshift",
    "start": "1452159",
    "end": "1454159"
  },
  {
    "text": "so microchips",
    "start": "1454159",
    "end": "1455679"
  },
  {
    "text": "is a",
    "start": "1455679",
    "end": "1456960"
  },
  {
    "text": "lightweight implementation of our",
    "start": "1456960",
    "end": "1458640"
  },
  {
    "text": "openshifts and kubernetes it is",
    "start": "1458640",
    "end": "1460799"
  },
  {
    "text": "optimized for large computing use case",
    "start": "1460799",
    "end": "1464080"
  },
  {
    "text": "that has small factory devices with",
    "start": "1464080",
    "end": "1466080"
  },
  {
    "text": "resource constraints or for environments",
    "start": "1466080",
    "end": "1469200"
  },
  {
    "text": "that only serve single purpose workloads",
    "start": "1469200",
    "end": "1472000"
  },
  {
    "text": "as this one",
    "start": "1472000",
    "end": "1473600"
  },
  {
    "text": "it provides a minimal yet customizable",
    "start": "1473600",
    "end": "1476720"
  },
  {
    "text": "openshift experience",
    "start": "1476720",
    "end": "1478720"
  },
  {
    "text": "when it gets booted up it's only startup",
    "start": "1478720",
    "end": "1481600"
  },
  {
    "text": "very minimal openshift components but",
    "start": "1481600",
    "end": "1484320"
  },
  {
    "text": "you can add more and customize it with",
    "start": "1484320",
    "end": "1487600"
  },
  {
    "text": "ease",
    "start": "1487600",
    "end": "1489520"
  },
  {
    "text": "it is a single binary with both the data",
    "start": "1489520",
    "end": "1492240"
  },
  {
    "text": "in the control plane so you can deploy",
    "start": "1492240",
    "end": "1494640"
  },
  {
    "text": "it either as rpm or as a",
    "start": "1494640",
    "end": "1497679"
  },
  {
    "text": "container",
    "start": "1497679",
    "end": "1499039"
  },
  {
    "text": "it's runs on linux mac os or even",
    "start": "1499039",
    "end": "1502080"
  },
  {
    "text": "windows",
    "start": "1502080",
    "end": "1503440"
  },
  {
    "text": "currently it supports both amd 64 and",
    "start": "1503440",
    "end": "1506559"
  },
  {
    "text": "r64",
    "start": "1506559",
    "end": "1508080"
  },
  {
    "text": "thus the community have already derived",
    "start": "1508080",
    "end": "1510080"
  },
  {
    "text": "the binaries to deploy on risk 5 and",
    "start": "1510080",
    "end": "1513360"
  },
  {
    "text": "power systems",
    "start": "1513360",
    "end": "1516760"
  }
]