[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "first of all hello Barcelona thank you very much for being here I know that I'm in between the UN lunch",
    "start": "30",
    "end": "6410"
  },
  {
    "text": "and I'm pretty sure you're pretty much talked out so I'll make it good okay",
    "start": "6410",
    "end": "15080"
  },
  {
    "text": "we've all heard of fear of missing out or FOMO right",
    "start": "15080",
    "end": "20539"
  },
  {
    "text": "here's the thing about a few years ago when I started working with containers",
    "start": "20539",
    "end": "27090"
  },
  {
    "start": "26000",
    "end": "164000"
  },
  {
    "text": "and kubernetes when we are talking about containers we really meant docker and it",
    "start": "27090",
    "end": "35280"
  },
  {
    "text": "worked and it was simple to use and we didn't have to worry at all about what",
    "start": "35280",
    "end": "40890"
  },
  {
    "text": "was happening at a low level then a couple of years ago I started hearing",
    "start": "40890",
    "end": "47550"
  },
  {
    "text": "all of this new terminology like CRI the container runtime interface or OCI the",
    "start": "47550",
    "end": "54870"
  },
  {
    "text": "open container initiative and container D and run C and add another peps",
    "start": "54870",
    "end": "60180"
  },
  {
    "text": "technologies and that's when a massive fear of missing out overcame me",
    "start": "60180",
    "end": "65670"
  },
  {
    "text": "I didn't want to be left behind but I didn't have time to think about it so fast forward to November 2018 when I",
    "start": "65670",
    "end": "73409"
  },
  {
    "text": "get an email from Google cloud telling me hey now you can run your GK clusters",
    "start": "73409",
    "end": "80790"
  },
  {
    "text": "on using the container D runtime and that was the moment when I decided I",
    "start": "80790",
    "end": "87030"
  },
  {
    "text": "really need to play with this so what better way of doing that than migrating your workloads from kubernetes cluster",
    "start": "87030",
    "end": "95119"
  },
  {
    "text": "running on docker engine look beneath this class the running on container D so",
    "start": "95119",
    "end": "101000"
  },
  {
    "text": "for the last well docker brought containers to mainstream and it was",
    "start": "101000",
    "end": "109350"
  },
  {
    "text": "working great and then and this is what everyone's using docker and that's what",
    "start": "109350",
    "end": "116670"
  },
  {
    "text": "we've been using for the last five years so this brings me to today and I'm gonna",
    "start": "116670",
    "end": "122759"
  },
  {
    "text": "talk to you about what is a container run time because the whole landscape is",
    "start": "122759",
    "end": "129330"
  },
  {
    "text": "very very confusing in fact again I used a lot of your",
    "start": "129330",
    "end": "134560"
  },
  {
    "text": "resources they are very very useful and then I'm gonna talk about the different",
    "start": "134560",
    "end": "140000"
  },
  {
    "text": "container runtimes and making sense of them then about the container D and",
    "start": "140000",
    "end": "146799"
  },
  {
    "text": "migrating to container team and as a user who administers bananas clusters",
    "start": "146799",
    "end": "153530"
  },
  {
    "text": "why should you care but before we do that I'm pretty sure you're all dying to",
    "start": "153530",
    "end": "159260"
  },
  {
    "text": "know me I mean I'm already been introduced so this isn't working anymore but let me introduce myself again so I'm",
    "start": "159260",
    "end": "166849"
  },
  {
    "start": "164000",
    "end": "188000"
  },
  {
    "text": "Anna Karine I'm a systems engineer I work on infrastructure site reliability and",
    "start": "166849",
    "end": "172940"
  },
  {
    "text": "securing applications I work for pay base which are the most flexible a pay",
    "start": "172940",
    "end": "179269"
  },
  {
    "text": "driven solution for for compliance risk and payment and you can find me on",
    "start": "179269",
    "end": "186349"
  },
  {
    "text": "social media we're going to cover the definition of a container runtime work",
    "start": "186349",
    "end": "191810"
  },
  {
    "start": "188000",
    "end": "208000"
  },
  {
    "text": "on a couple of papers contain a long x a quick comparison between docker",
    "start": "191810",
    "end": "196819"
  },
  {
    "text": "container d and cryo an architectural overview migration and user performance",
    "start": "196819",
    "end": "205329"
  },
  {
    "text": "so what is a container runtime according for definition I found a",
    "start": "205329",
    "end": "211489"
  },
  {
    "start": "208000",
    "end": "224000"
  },
  {
    "text": "container runtime is responsible for all the parts of running a container that",
    "start": "211489",
    "end": "217130"
  },
  {
    "text": "isn't actually running the program itself now please raise your hand if you",
    "start": "217130",
    "end": "222980"
  },
  {
    "text": "understand what the container runtime is based on this definition okay so and",
    "start": "222980",
    "end": "231019"
  },
  {
    "start": "224000",
    "end": "237000"
  },
  {
    "text": "okay you're doing than me when I first read this I didn't quite understand it so I did my own research so the way I",
    "start": "231019",
    "end": "239989"
  },
  {
    "start": "237000",
    "end": "268000"
  },
  {
    "text": "used to think about containers at the very beginning and the way you might think about containers as well is a bit",
    "start": "239989",
    "end": "248299"
  },
  {
    "text": "similar to how we used to think of in",
    "start": "248299",
    "end": "253340"
  },
  {
    "text": "the VM world so you have the kernel then you have another layer which is the time and then you have another layer",
    "start": "253340",
    "end": "260049"
  },
  {
    "text": "which is the container itself exactly like the in the VMware world now this is",
    "start": "260049",
    "end": "268450"
  },
  {
    "start": "268000",
    "end": "279000"
  },
  {
    "text": "wrong because a container really an isolated process on the kernel what",
    "start": "268450",
    "end": "278020"
  },
  {
    "text": "gives us and more realistically based on that the way to look like is you have",
    "start": "278020",
    "end": "285730"
  },
  {
    "start": "279000",
    "end": "305000"
  },
  {
    "text": "the kernel then so you have a client that talks to a runtime that tells the",
    "start": "285730",
    "end": "291700"
  },
  {
    "text": "kernel okay give me all of these processes that I need to create in order to run containers and the kernel creates",
    "start": "291700",
    "end": "299890"
  },
  {
    "text": "those for those processes that we call containers so the processes isolation",
    "start": "299890",
    "end": "308669"
  },
  {
    "start": "305000",
    "end": "450000"
  },
  {
    "text": "that we we need for containers is given by a few features in the Linux kernel",
    "start": "308669",
    "end": "315730"
  },
  {
    "text": "and I wanted to very quickly recap for those of you that might not be familiar so first of all we have the concept of a",
    "start": "315730",
    "end": "323680"
  },
  {
    "text": "namespace not open apis namespace a Linux kernel namespace and what that",
    "start": "323680",
    "end": "329229"
  },
  {
    "text": "does is it partitions different kernel resources in through in in a way in",
    "start": "329229",
    "end": "337660"
  },
  {
    "text": "which the resources in the same namespace she's see the same things but",
    "start": "337660",
    "end": "342850"
  },
  {
    "text": "that is related from each other to namespace level and then we have three different namespaces that are relevant",
    "start": "342850",
    "end": "350229"
  },
  {
    "text": "here we have the PID which is the process the process ID namespace that",
    "start": "350229",
    "end": "357490"
  },
  {
    "text": "gives us the numbering of processes in such a way that at the namespace level",
    "start": "357490",
    "end": "365190"
  },
  {
    "text": "you you you can use in different namespaces you can use the same PID",
    "start": "365190",
    "end": "370870"
  },
  {
    "text": "without being aware other without interacting with each other then we have",
    "start": "370870",
    "end": "376900"
  },
  {
    "text": "the networking namespace and what this does is it it makes sure that the port's",
    "start": "376900",
    "end": "386800"
  },
  {
    "text": "that you are using in containers our separate and don't interfere with",
    "start": "386800",
    "end": "392610"
  },
  {
    "text": "the ports that are already open on the kernel itself then we have the mountain",
    "start": "392610",
    "end": "398129"
  },
  {
    "text": "named space and that allows us to mount and unmount file systems on containers",
    "start": "398129",
    "end": "406650"
  },
  {
    "text": "without conflicting with the host file system and then we're talking about",
    "start": "406650",
    "end": "412770"
  },
  {
    "text": "cgroups or control control groups and they allow us they give us resource limitations so",
    "start": "412770",
    "end": "422000"
  },
  {
    "text": "when we give CPU limitations and limitations in kubernetes that",
    "start": "422000",
    "end": "427800"
  },
  {
    "text": "translates down to a runtime level and then the last one is second PPF I hope I",
    "start": "427800",
    "end": "434430"
  },
  {
    "text": "said that correctly but what this does is it allows us to filter what kind of",
    "start": "434430",
    "end": "442080"
  },
  {
    "text": "system calls certain processes can and cannot do so that's a security feature",
    "start": "442080",
    "end": "449569"
  },
  {
    "text": "so I like this picture and I think that you could say that this might be a good",
    "start": "451129",
    "end": "457139"
  },
  {
    "text": "analogy of how runtimes and the kernel and containers sort of are so my ok port",
    "start": "457139",
    "end": "465240"
  },
  {
    "text": "so if we imagine that this is the kernel and then you know the wrong x gives",
    "start": "465240",
    "end": "472229"
  },
  {
    "text": "commands to the kernel and then each one of these it's a namespace that runs the",
    "start": "472229",
    "end": "478560"
  },
  {
    "text": "containers and their functionalities that's the best way I would picture this",
    "start": "478560",
    "end": "485330"
  },
  {
    "start": "486000",
    "end": "492000"
  },
  {
    "text": "so let's look at the different types of container long x so we have low-level",
    "start": "486080",
    "end": "496740"
  },
  {
    "start": "492000",
    "end": "582000"
  },
  {
    "text": "runtimes and we have high-level runtimes and then we have docker which is which",
    "start": "496740",
    "end": "502979"
  },
  {
    "text": "does low-level high-level and additional functionality when we say low-level like",
    "start": "502979",
    "end": "508800"
  },
  {
    "text": "a runtimes women LX c 1c and LMC pfy and",
    "start": "508800",
    "end": "515310"
  },
  {
    "text": "I'm not going to go into this but all you need to know about them in this context is that they are the the",
    "start": "515310",
    "end": "522719"
  },
  {
    "text": "runtimes that take care of creating them those namespaces and that process has",
    "start": "522719",
    "end": "528660"
  },
  {
    "text": "isolation the kernel point of it then we have the high level one times like cryo",
    "start": "528660",
    "end": "535410"
  },
  {
    "text": "and container D and there are a few others now the reason why we have",
    "start": "535410",
    "end": "540720"
  },
  {
    "text": "high-level as well is because just creating namespaces and isolating",
    "start": "540720",
    "end": "546209"
  },
  {
    "text": "processes that's not enough to run a container you need a API API you need",
    "start": "546209",
    "end": "551220"
  },
  {
    "text": "additional functionality you need the ability to pull and push images and",
    "start": "551220",
    "end": "556760"
  },
  {
    "text": "unpack them and then pass them all to the local level long time so when I'm",
    "start": "556760",
    "end": "563760"
  },
  {
    "text": "saying we're gonna talk about container D and I'm gonna migrate to a container D",
    "start": "563760",
    "end": "569010"
  },
  {
    "text": "runtime what I'm really saying is yes container D I'm gonna use container D",
    "start": "569010",
    "end": "575100"
  },
  {
    "text": "but container D cannot work on its own without the low-level one time okay so a",
    "start": "575100",
    "end": "584670"
  },
  {
    "start": "582000",
    "end": "601000"
  },
  {
    "text": "better definition how I understand container long times in a very simplified right is a container one time",
    "start": "584670",
    "end": "591720"
  },
  {
    "text": "is responsible for setting up namespaces and C groups and then running command",
    "start": "591720",
    "end": "597329"
  },
  {
    "text": "inside those namespaces plus additional things and I feel like this is a really",
    "start": "597329",
    "end": "603930"
  },
  {
    "text": "good time to add a bit more terminology so that we can use it so the CRI the",
    "start": "603930",
    "end": "610350"
  },
  {
    "text": "container runtime interface is a plug-in interface which enables the cubelet to",
    "start": "610350",
    "end": "616560"
  },
  {
    "text": "use a wide variety of container runtimes without the need to recompile the OCI is",
    "start": "616560",
    "end": "623490"
  },
  {
    "text": "the open container initiative which is a linux foundation project that allows us",
    "start": "623490",
    "end": "629010"
  },
  {
    "text": "to design open source standards for operating system-level virtualization",
    "start": "629010",
    "end": "634110"
  },
  {
    "text": "and for Linux containers and then we have the CR i/o which is contain a long",
    "start": "634110",
    "end": "641339"
  },
  {
    "text": "time that I'll tell you about in a bit so let's go okay so this is the full feature set of",
    "start": "641339",
    "end": "650540"
  },
  {
    "text": "docker engine and as you can see it does a lot of things now docker was the first",
    "start": "650540",
    "end": "659730"
  },
  {
    "text": "open source container run time you want to call it that way that was taking care",
    "start": "659730",
    "end": "666720"
  },
  {
    "text": "of the whole lifecycle of building containers building images and pushing",
    "start": "666720",
    "end": "674579"
  },
  {
    "text": "them pulling them then containing then creating run-up containers out of them",
    "start": "674579",
    "end": "680670"
  },
  {
    "text": "and so on so it was taking care of the whole lifecycle of containers but then",
    "start": "680670",
    "end": "685769"
  },
  {
    "text": "some time ago I'm not a historian so I don't know the exact time but some time",
    "start": "685769",
    "end": "690990"
  },
  {
    "text": "ago docker decided to split its monolith daemon functionality into different",
    "start": "690990",
    "end": "697279"
  },
  {
    "text": "features different components and it looks a bit like this so you have the",
    "start": "697279",
    "end": "703079"
  },
  {
    "start": "700000",
    "end": "742000"
  },
  {
    "text": "docker CLI then you have the docker beam which is the piece of functionality that",
    "start": "703079",
    "end": "708629"
  },
  {
    "text": "does all of the additional functionality in terms of building images and",
    "start": "708629",
    "end": "714269"
  },
  {
    "text": "packaging bang esophagram then you have docker container d which is a vanilla",
    "start": "714269",
    "end": "720119"
  },
  {
    "text": "version of created by docker of container theme that we'll talk about in",
    "start": "720119",
    "end": "726299"
  },
  {
    "text": "a second and then dr. Wong C which is the low-level that creates those",
    "start": "726299",
    "end": "733319"
  },
  {
    "text": "namespaces we've talked about",
    "start": "733319",
    "end": "736670"
  },
  {
    "start": "742000",
    "end": "820000"
  },
  {
    "text": "okay so in a kubernetes cluster when",
    "start": "743100",
    "end": "751830"
  },
  {
    "text": "when we want to run kubernetes we really need this",
    "start": "751830",
    "end": "759530"
  },
  {
    "text": "so we need the low-level functionality and we need the high-level functionality and the rest to talk to kubernetes now",
    "start": "759530",
    "end": "766770"
  },
  {
    "text": "when I first saw this and was thinking about this my first thought was wait so",
    "start": "766770",
    "end": "772980"
  },
  {
    "text": "you're telling me that I don't need networking to run in a kubernetes cluster or I don't need persistent",
    "start": "772980",
    "end": "780480"
  },
  {
    "text": "storage you do but that's something that kubernetes giving it gives you so you",
    "start": "780480",
    "end": "786750"
  },
  {
    "text": "have the services resources that kubernetes uses to take care of networking you have the storage classes",
    "start": "786750",
    "end": "794460"
  },
  {
    "text": "and the persistent volumes that you use for persistent storage so purely from a",
    "start": "794460",
    "end": "799620"
  },
  {
    "text": "kubernetes point of view you don't need all of the additional functionality of docker and it's really not fair to",
    "start": "799620",
    "end": "807300"
  },
  {
    "text": "compare docker to container deep because because docker has container D and",
    "start": "807300",
    "end": "814580"
  },
  {
    "text": "relies on it so it's more of more or less features in",
    "start": "814580",
    "end": "822690"
  },
  {
    "start": "820000",
    "end": "886000"
  },
  {
    "text": "terms of how it looks in terms of interaction with kubernetes a docker",
    "start": "822690",
    "end": "828960"
  },
  {
    "text": "versus container team so the cubelet talks to the docker shrimp which is the sierra",
    "start": "828960",
    "end": "836330"
  },
  {
    "text": "implementation for docker and the Bocage team talks to the docker server that",
    "start": "836330",
    "end": "844280"
  },
  {
    "text": "takes care of building images and so on and docker server hands over commands",
    "start": "844280",
    "end": "851280"
  },
  {
    "text": "container d and container didn't talks to run C and then then crates containers",
    "start": "851280",
    "end": "858030"
  },
  {
    "text": "now in the container D world it's slightly more simplified you still have",
    "start": "858030",
    "end": "863220"
  },
  {
    "text": "the cube lot and that talks with the component called Sierra container D",
    "start": "863220",
    "end": "869790"
  },
  {
    "text": "which takes C a request from kubernetes and cubelet and then it directly talk talks to",
    "start": "869790",
    "end": "876970"
  },
  {
    "text": "container D so there's one feature removed from the container",
    "start": "876970",
    "end": "885570"
  },
  {
    "start": "886000",
    "end": "915000"
  },
  {
    "text": "now I think it's worth comparing really fast container D version one versus",
    "start": "886560",
    "end": "892420"
  },
  {
    "text": "version 1.1 because in version 1.2 they",
    "start": "892420",
    "end": "897850"
  },
  {
    "text": "took the CRI container this feature and they made it into a plugin which meant",
    "start": "897850",
    "end": "903970"
  },
  {
    "text": "that you you have a lot of user better",
    "start": "903970",
    "end": "909850"
  },
  {
    "text": "user performance better for the latency startup and things like that",
    "start": "909850",
    "end": "915780"
  },
  {
    "start": "915000",
    "end": "975000"
  },
  {
    "text": "so in terms of limitations between container D and docker docker engine if",
    "start": "915780",
    "end": "922540"
  },
  {
    "text": "we are to take it feature by feature it sort of looks like container D is losing",
    "start": "922540",
    "end": "929860"
  },
  {
    "text": "right well it's not because it's meant to be more lightweight and because from",
    "start": "929860",
    "end": "937090"
  },
  {
    "text": "a kubernetes point of view you still get to do all of the same things that you don't really use you know kubernetes",
    "start": "937090",
    "end": "944260"
  },
  {
    "text": "cluster when you when you use docker and then there's another limitation more",
    "start": "944260",
    "end": "950260"
  },
  {
    "text": "like could potentially be a security flaw with docker engine the fact that if",
    "start": "950260",
    "end": "955750"
  },
  {
    "text": "an attacker gets into a kubernetes cluster into a node and having the",
    "start": "955750",
    "end": "962980"
  },
  {
    "text": "courage in then they can build images locally into the node and then they can",
    "start": "962980",
    "end": "968140"
  },
  {
    "text": "deploy it into your cluster but if you have just a paddy you don't have that",
    "start": "968140",
    "end": "973270"
  },
  {
    "text": "ability okay so cryo is a lightweight see a long",
    "start": "973270",
    "end": "981550"
  },
  {
    "start": "975000",
    "end": "1014000"
  },
  {
    "text": "time that was made specifically for kubernetes at the high level runtime it",
    "start": "981550",
    "end": "988330"
  },
  {
    "text": "supports the management of OCI compatible images and it supports also",
    "start": "988330",
    "end": "993880"
  },
  {
    "text": "run C as a low-level and clear containers and in theory it supports",
    "start": "993880",
    "end": "999910"
  },
  {
    "text": "other OCIE contain compatible low-level runtimes I say in theory because",
    "start": "999910",
    "end": "1007080"
  },
  {
    "text": "when supporting other low-level runtimes it still depends on some of the features",
    "start": "1007080",
    "end": "1012420"
  },
  {
    "text": "of Ramsey let's quickly have a look at",
    "start": "1012420",
    "end": "1017670"
  },
  {
    "start": "1014000",
    "end": "1121000"
  },
  {
    "text": "the container the architecture so it's a",
    "start": "1017670",
    "end": "1023850"
  },
  {
    "text": "bit crowded but we need all of these fixed features and they're all very good",
    "start": "1023850",
    "end": "1029270"
  },
  {
    "text": "so at the top here you can see all of the clients that can be used with or by",
    "start": "1029270",
    "end": "1036089"
  },
  {
    "text": "container d so we have the Q blood we have pouch implemented container the",
    "start": "1036089",
    "end": "1042030"
  },
  {
    "text": "docker is using it you have the docker container the client and the container",
    "start": "1042030",
    "end": "1047938"
  },
  {
    "text": "the CLI lets you interact directly with",
    "start": "1047939",
    "end": "1054179"
  },
  {
    "text": "container the runtime then we have the G",
    "start": "1054179",
    "end": "1059280"
  },
  {
    "text": "RPC container the API that allows you to",
    "start": "1059280",
    "end": "1064880"
  },
  {
    "text": "directly communicate with the container B without using client if you want to or",
    "start": "1064880",
    "end": "1072630"
  },
  {
    "text": "for applicants to communicate with it then there's a mate matrix API and the",
    "start": "1072630",
    "end": "1080640"
  },
  {
    "text": "kind of metrics that are exposed our container D process-specific might",
    "start": "1080640",
    "end": "1087150"
  },
  {
    "text": "matrix as well as container specific matrix which are very useful for",
    "start": "1087150",
    "end": "1093270"
  },
  {
    "text": "premedia and a really really neat feature is the runtime manager or the",
    "start": "1093270",
    "end": "1099630"
  },
  {
    "text": "runtime handler that in version 1.2 will let you switch from r and c to any to",
    "start": "1099630",
    "end": "1108679"
  },
  {
    "text": "low-level runtimes so now let's get",
    "start": "1108679",
    "end": "1116340"
  },
  {
    "text": "serious let's talk about what it takes to migrate actually quite easy it",
    "start": "1116340",
    "end": "1121760"
  },
  {
    "text": "depends on your setup so AWS eks doesn't",
    "start": "1121760",
    "end": "1128730"
  },
  {
    "text": "currently support container the runtime as your a",
    "start": "1128730",
    "end": "1134419"
  },
  {
    "text": "uses mobi which is a version of flavor",
    "start": "1134419",
    "end": "1139470"
  },
  {
    "text": "of docker and uses that as a container runtime and with aks customer can deploy",
    "start": "1139470",
    "end": "1147539"
  },
  {
    "text": "their own kubernetes clusters with a different runtime using the AKS engine",
    "start": "1147539",
    "end": "1153389"
  },
  {
    "text": "and then there's GK and they support it and the way you'd go about creating a",
    "start": "1153389",
    "end": "1160230"
  },
  {
    "text": "cluster with container at the wrong time it would be just a matter of selecting",
    "start": "1160230",
    "end": "1166649"
  },
  {
    "text": "the cost container deep image of your cluster or just creating a new node pool",
    "start": "1166649",
    "end": "1173700"
  },
  {
    "text": "in an existing cluster and then migrating the workloads now one thing",
    "start": "1173700",
    "end": "1179669"
  },
  {
    "text": "that I want to be clear on this initially before I started looking into",
    "start": "1179669",
    "end": "1185250"
  },
  {
    "text": "any of this I was a bit worried of the kind of effort to detect migrate because",
    "start": "1185250",
    "end": "1191429"
  },
  {
    "text": "without knowing much about anything I thought oh well all of my images were built with docker does that mean that I",
    "start": "1191429",
    "end": "1198600"
  },
  {
    "text": "have to recreate all of my images I hope it's clear now that no you don't because",
    "start": "1198600",
    "end": "1204649"
  },
  {
    "text": "because container B is part of docker and all of that so image the images that",
    "start": "1204649",
    "end": "1210179"
  },
  {
    "text": "you already have are completely compatible with continuity as well so",
    "start": "1210179",
    "end": "1216539"
  },
  {
    "start": "1215000",
    "end": "1249000"
  },
  {
    "text": "steps to migrate to container d1 gke so you'd first create a node pool into your",
    "start": "1216539",
    "end": "1222899"
  },
  {
    "text": "cluster using cost container d then you'd cordon those old node pools using",
    "start": "1222899",
    "end": "1230029"
  },
  {
    "text": "that command there and you'll have access to the slides later then you'd",
    "start": "1230029",
    "end": "1236820"
  },
  {
    "text": "drain the existing pods and wait for them to be recreating recreated on your",
    "start": "1236820",
    "end": "1242970"
  },
  {
    "text": "new node pools that are running container D so it's quite",
    "start": "1242970",
    "end": "1248190"
  },
  {
    "text": "straightforward in terms of user observation and why should you care or",
    "start": "1248190",
    "end": "1255620"
  },
  {
    "start": "1249000",
    "end": "1258000"
  },
  {
    "text": "what should means you can I try to",
    "start": "1255620",
    "end": "1260659"
  },
  {
    "start": "1258000",
    "end": "1314000"
  },
  {
    "text": "picture this as a user from my different responsibilities and my different roles",
    "start": "1260659",
    "end": "1266200"
  },
  {
    "text": "so as an SRE with the service level agreements in my mind I really care",
    "start": "1266200",
    "end": "1273010"
  },
  {
    "text": "about being able to troubleshoot fast and what I get with container game is",
    "start": "1273010",
    "end": "1280360"
  },
  {
    "text": "the cry city l which is the client that allows me to talk directly to the cry",
    "start": "1280360",
    "end": "1287250"
  },
  {
    "text": "implementation and it allows me to troubleshoot containers and pods or",
    "start": "1287250",
    "end": "1292330"
  },
  {
    "text": "nodes in my cluster in the event of an emergency then there's CTR which is the client",
    "start": "1292330",
    "end": "1300760"
  },
  {
    "text": "container the tool that allows me to create and manage containers and install",
    "start": "1300760",
    "end": "1308230"
  },
  {
    "text": "plugins and switch between low level runtimes",
    "start": "1308230",
    "end": "1314250"
  },
  {
    "start": "1314000",
    "end": "1367000"
  },
  {
    "text": "in terms of performance I am a systems engineer and I do have to deploy new",
    "start": "1321549",
    "end": "1328299"
  },
  {
    "text": "features usually yesterday and because of that I really care about performance",
    "start": "1328299",
    "end": "1334529"
  },
  {
    "text": "so container beam performs better in terms of pod startup",
    "start": "1334529",
    "end": "1341860"
  },
  {
    "text": "latency compared to docker engine version 18 there's about 20 seconds",
    "start": "1341860",
    "end": "1350820"
  },
  {
    "text": "latency that container be container T is 20 seconds faster than on docker and",
    "start": "1350820",
    "end": "1360419"
  },
  {
    "text": "this is something that I haven't created so I wanted to make sure that that's the case so I sort of the amount so I spun",
    "start": "1360419",
    "end": "1369549"
  },
  {
    "text": "up two different clusters GK clusters one running docker engine one running",
    "start": "1369549",
    "end": "1374620"
  },
  {
    "text": "container D on the exact same version of GK and then I've installed with helm the",
    "start": "1374620",
    "end": "1382360"
  },
  {
    "text": "nginx ingress stable home child and I",
    "start": "1382360",
    "end": "1387760"
  },
  {
    "text": "took one of the pods and I looked at how long it took between the pod being",
    "start": "1387760",
    "end": "1395110"
  },
  {
    "text": "initialized and the port thing Marcus ready so you can see that this is on the",
    "start": "1395110",
    "end": "1401289"
  },
  {
    "text": "docker one time and you can see here the timestamp the time it was initialized",
    "start": "1401289",
    "end": "1412210"
  },
  {
    "text": "and then you can see the time its type in and and yeah it's about 20 minutes in",
    "start": "1412210",
    "end": "1421179"
  },
  {
    "text": "between on container D doing the same thing with the same child picking the",
    "start": "1421179",
    "end": "1427570"
  },
  {
    "text": "exact same pod you can see that the time it was initialized the time that passed",
    "start": "1427570",
    "end": "1435070"
  },
  {
    "text": "it in when it was initialized and when the pod was masters ready it's exactly",
    "start": "1435070",
    "end": "1440590"
  },
  {
    "text": "two seconds now I know that that that",
    "start": "1440590",
    "end": "1445690"
  },
  {
    "text": "won't be the case for all of the pods but in general it seems that container D in terms of pod startup latency performs",
    "start": "1445690",
    "end": "1452559"
  },
  {
    "text": "better from a performance point of view as an",
    "start": "1452559",
    "end": "1458140"
  },
  {
    "start": "1454000",
    "end": "1501000"
  },
  {
    "text": "infrastructure engineer I care about resource optimization and resource",
    "start": "1458140",
    "end": "1464920"
  },
  {
    "text": "utilization and here we're talking about usage and and the to blood CPU which",
    "start": "1464920",
    "end": "1477550"
  },
  {
    "text": "container theme has 30 point 89% uses 30 point 89% CPU and the runtime",
    "start": "1477550",
    "end": "1487900"
  },
  {
    "text": "CPU is about 68 point 13 percent more expense a more effective week on the",
    "start": "1487900",
    "end": "1494320"
  },
  {
    "text": "energy and they're very similar matrix in terms of memory usage from a security",
    "start": "1494320",
    "end": "1503200"
  },
  {
    "start": "1501000",
    "end": "1567000"
  },
  {
    "text": "point of view well I'm also an engineer with PCI DSS compliance in my mind and",
    "start": "1503200",
    "end": "1508630"
  },
  {
    "text": "if you don't know what this idss is you're very very lucky because it's a very horrible standard that the payment",
    "start": "1508630",
    "end": "1515560"
  },
  {
    "text": "institutions have to comply with and it talks about a lot of security and a lot",
    "start": "1515560",
    "end": "1520780"
  },
  {
    "text": "of really ridiculous requirements so from that point of view container VIII",
    "start": "1520780",
    "end": "1527020"
  },
  {
    "text": "has a smaller attack surface than docker simply because it has less less feature",
    "start": "1527020",
    "end": "1534360"
  },
  {
    "text": "when container be graduated from CN CF they published their full security audit",
    "start": "1534360",
    "end": "1541480"
  },
  {
    "text": "and it looks quite good and in the event that my auditor comes to me and says can",
    "start": "1541480",
    "end": "1547900"
  },
  {
    "text": "you prove to me that your contain a long time is secure enough I know that that's",
    "start": "1547900",
    "end": "1553120"
  },
  {
    "text": "not gonna happen but I can say yes I can here's the security audit and what I mentioned",
    "start": "1553120",
    "end": "1559870"
  },
  {
    "text": "before with docker an attacker with access to my nodes can build images locally and install them into my cluster",
    "start": "1559870",
    "end": "1567690"
  },
  {
    "start": "1567000",
    "end": "1623000"
  },
  {
    "text": "so that brings me to summary my",
    "start": "1567690",
    "end": "1575580"
  },
  {
    "text": "conclusion is that docker scope is too large for what you need an occupant is classpath container beam",
    "start": "1575580",
    "end": "1583790"
  },
  {
    "text": "between docker and CRI Oh container B is more more flexible and much more lighter",
    "start": "1583790",
    "end": "1590570"
  },
  {
    "text": "than docker and that's a good advantage and container D runs on top of low-level",
    "start": "1590570",
    "end": "1599660"
  },
  {
    "text": "runtimes such as run C and you can plug them in and out and it performs better",
    "start": "1599660",
    "end": "1604790"
  },
  {
    "text": "and it's more secure than docker it's fairly easy to migrate and in case",
    "start": "1604790",
    "end": "1611360"
  },
  {
    "text": "you're wondering what step we are with on migration we're not yet in production because I'm",
    "start": "1611360",
    "end": "1617000"
  },
  {
    "text": "still testing and yeah that's my summary",
    "start": "1617000",
    "end": "1622390"
  },
  {
    "text": "I have added some resources if anyone is interested in reading more about the",
    "start": "1622390",
    "end": "1628010"
  },
  {
    "start": "1623000",
    "end": "1630000"
  },
  {
    "text": "subject and I'd like to leave you with the fact that we're hiring so if any of",
    "start": "1628010",
    "end": "1634520"
  },
  {
    "start": "1630000",
    "end": "1647000"
  },
  {
    "text": "these things that I've been talking about sounds interesting to you please come and talk to me or email launch",
    "start": "1634520",
    "end": "1640310"
  },
  {
    "text": "party in August last year and thank you very much",
    "start": "1640310",
    "end": "1646990"
  },
  {
    "start": "1647000",
    "end": "1996000"
  },
  {
    "text": "Thank You Ana we have a good amount of time left for for questions if you have",
    "start": "1655229",
    "end": "1660279"
  },
  {
    "text": "any questions okay if you want to like",
    "start": "1660279",
    "end": "1666309"
  },
  {
    "text": "actually come up to the front like that would be actually a really helpful and I'll just give you the mic and we can",
    "start": "1666309",
    "end": "1672580"
  },
  {
    "text": "kind of go from there how's that working yeah yeah just maybe",
    "start": "1672580",
    "end": "1677619"
  },
  {
    "text": "like kind of line up here is if that's what works Allen I'm gonna take you",
    "start": "1677619",
    "end": "1683950"
  },
  {
    "text": "first if you don't mind I think I was",
    "start": "1683950",
    "end": "1689349"
  },
  {
    "text": "wondering if you could speak a little bit about what you might miss out on by moving the way from docker to a thinner",
    "start": "1689349",
    "end": "1696099"
  },
  {
    "text": "container on time that was in my talk I completely forgot to mention it so don't",
    "start": "1696099",
    "end": "1702309"
  },
  {
    "text": "miss on anything from a from a kubernetes point of view from a cluster point of view and you would still use",
    "start": "1702309",
    "end": "1708789"
  },
  {
    "text": "docker locally to build your images and play around and you know all of that really nice functionality that you don't",
    "start": "1708789",
    "end": "1715450"
  },
  {
    "text": "want testing locally but from a kubernetes point of view you're not missing on anything you just you just",
    "start": "1715450",
    "end": "1721869"
  },
  {
    "text": "have less features that you don't normally use I don't know about you but I never really log into my kubernetes",
    "start": "1721869",
    "end": "1728169"
  },
  {
    "text": "node and start playing with docker in fact we have SSH disabled in our cluster",
    "start": "1728169",
    "end": "1735460"
  },
  {
    "text": "so that just doesn't happen yeah does that respond to your question yeah",
    "start": "1735460",
    "end": "1741849"
  },
  {
    "text": "thanks I we built that manage kubernetes offering and we actually don't let our users SSH in any way so that's what I was wondering whether there was anything",
    "start": "1741849",
    "end": "1747669"
  },
  {
    "text": "yeah yeah LC is a great fix my stock",
    "start": "1747669",
    "end": "1752830"
  },
  {
    "text": "Thanks any insights into where their performance differences come from so one",
    "start": "1752830",
    "end": "1760359"
  },
  {
    "text": "of them is in version 1.1 they they made that container the try container big",
    "start": "1760359",
    "end": "1766749"
  },
  {
    "text": "feature into a plugin so that reduced latency between between different",
    "start": "1766749",
    "end": "1773019"
  },
  {
    "text": "components and then the fact that docker has that additional feature that the",
    "start": "1773019",
    "end": "1778299"
  },
  {
    "text": "docker server component so it's a bigger chain of elements I could",
    "start": "1778299",
    "end": "1785970"
  },
  {
    "text": "go through that's one of them in terms of how it was how it was measured it was",
    "start": "1785970",
    "end": "1794610"
  },
  {
    "text": "it was an average over a hundred five pots in a in a cluster in a in a stable",
    "start": "1794610",
    "end": "1802860"
  },
  {
    "text": "state and that 105 is I think it's the maximum we can have enough in a class that respond to a question yeah oh hi",
    "start": "1802860",
    "end": "1814980"
  },
  {
    "text": "I'm Jenna Ellie and thank you for the great talk and introducing me with the opportunity I have a question so as you",
    "start": "1814980",
    "end": "1822630"
  },
  {
    "text": "mentioned that we cannot build container images with catenary right yeah so it",
    "start": "1822630",
    "end": "1829050"
  },
  {
    "text": "means that we cannot use any CI that depends on building and pushing images",
    "start": "1829050",
    "end": "1836550"
  },
  {
    "text": "for example we talked her and usually in enterprises they have CI and they use",
    "start": "1836550",
    "end": "1842310"
  },
  {
    "text": "talking in docker or they just mount the docker proxy Dakka Dakka socket with",
    "start": "1842310",
    "end": "1848220"
  },
  {
    "text": "limited access for a fort near CI a moment so it is not possible with",
    "start": "1848220",
    "end": "1854430"
  },
  {
    "text": "continually right are there any workarounds on you it is it's not possible with container people",
    "start": "1854430",
    "end": "1859530"
  },
  {
    "text": "who actually have the same the same sort of implementation we run all of our images through CI before that get pushed",
    "start": "1859530",
    "end": "1866610"
  },
  {
    "text": "into a Google repository and then we still use docker but in the actual Burnett is cluster so we don't don't run",
    "start": "1866610",
    "end": "1874470"
  },
  {
    "text": "the CI functionality within the kubernetes cluster that would would probably impact our applique in more",
    "start": "1874470",
    "end": "1879900"
  },
  {
    "text": "more sense most centrally impact our application so so we still have docker",
    "start": "1879900",
    "end": "1886290"
  },
  {
    "text": "in our you know CI process great talk",
    "start": "1886290",
    "end": "1892560"
  },
  {
    "text": "thank you just curious if you've run any performance test with cryo or if you plan to no I have I haven't looked at",
    "start": "1892560",
    "end": "1899940"
  },
  {
    "text": "all Oh like I've done very little researching fire it was more about how",
    "start": "1899940",
    "end": "1905790"
  },
  {
    "text": "it compares and it just seems that is less flexible and a bit more lightweight and container but the part of um that I can tell you",
    "start": "1905790",
    "end": "1912880"
  },
  {
    "text": "much and have you looked at any other built tools like build uh or anything and said and just get away from docker",
    "start": "1912880",
    "end": "1918250"
  },
  {
    "text": "altogether and it was a personal project that I started so by the time I got",
    "start": "1918250",
    "end": "1924700"
  },
  {
    "text": "there allocate a is no longer supported as far as I know I'm sure ii rkp is no",
    "start": "1924700",
    "end": "1931090"
  },
  {
    "text": "longer supported no I was talking about builder just to make OCI eight images instead of docker images I know I",
    "start": "1931090",
    "end": "1937810"
  },
  {
    "text": "haven't either",
    "start": "1937810",
    "end": "1941430"
  },
  {
    "text": "hi nice talk I don't know if you have come across the situation when you have your application",
    "start": "1943050",
    "end": "1948550"
  },
  {
    "text": "team in open areas where they use taco in docker so if we migrate to container D how do you handle the situation of",
    "start": "1948550",
    "end": "1954490"
  },
  {
    "text": "talker and docker and you know I haven't come across the situation how how does that work why would you use the ocarina",
    "start": "1954490",
    "end": "1961030"
  },
  {
    "text": "docker for various application needs this is our application teams who need",
    "start": "1961030",
    "end": "1966190"
  },
  {
    "text": "it for their applications to be running on the cluster they need to mount or go on the talk Assaf currently when we run",
    "start": "1966190",
    "end": "1972160"
  },
  {
    "text": "docker they just mounted on docker yeah so how would that work I'm not sure um if if you stay around",
    "start": "1972160",
    "end": "1980290"
  },
  {
    "text": "maybe we can discuss so I can understand better but yeah I know I'm not no worse than anybody else have any questions",
    "start": "1980290",
    "end": "1988980"
  },
  {
    "text": "okay great thank you very much Anna [Applause]",
    "start": "1988980",
    "end": "1998559"
  }
]