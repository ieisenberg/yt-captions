[
  {
    "text": "hello and welcome to kubernetes misconfigurations uh what they are",
    "start": "3679",
    "end": "9599"
  },
  {
    "text": "how to identify them with fairwinds if you're here for a different talk",
    "start": "9599",
    "end": "15120"
  },
  {
    "text": "that's not what we're doing this is what we're doing i'm excited to have you and ivan do you want to say your greeting",
    "start": "15120",
    "end": "20640"
  },
  {
    "text": "sure we were joking about this when we were getting started so uh good morning good",
    "start": "20640",
    "end": "25760"
  },
  {
    "text": "afternoon good evening wherever you are thank you for joining this webinar yes thank you i like that so much okay let's",
    "start": "25760",
    "end": "33120"
  },
  {
    "text": "dive in um so before we begin let's introduce each other so um robert why don't you",
    "start": "33120",
    "end": "39760"
  },
  {
    "text": "introduce yourself yeah my name is robert brennan i'm vp of product development here at fairwinds i",
    "start": "39760",
    "end": "45039"
  },
  {
    "text": "head up all of our engineering efforts on fairwinds insights which is our platform for detecting kubernetes",
    "start": "45039",
    "end": "50960"
  },
  {
    "text": "misconfiguration from a security perspective reliability perspective and efficiency perspective",
    "start": "50960",
    "end": "57039"
  },
  {
    "text": "great and uh you also have your hands in the open source things as well which we're going to be talking a lot about",
    "start": "57039",
    "end": "62719"
  },
  {
    "text": "today um ivan do you want to introduce yourself yeah my name is ivan fetch i'm a software developer here at fairwinds",
    "start": "62719",
    "end": "69680"
  },
  {
    "text": "working on the team that's part of insights all right and my name is kendall miller",
    "start": "69680",
    "end": "76080"
  },
  {
    "text": "i am technically an evangelist here at fairwinds and uh excited to be with you all um we're going to be diving into a",
    "start": "76080",
    "end": "83200"
  },
  {
    "text": "number of different things related to misconfigurations but first tell you why we're the ones talking about it so uh",
    "start": "83200",
    "end": "89200"
  },
  {
    "text": "this is not a hard fair wins pitch but to give you background on why we're here talking about this fair winds has been",
    "start": "89200",
    "end": "94560"
  },
  {
    "text": "in the kubernetes space for a long time we've been in business seven years over seven years uh seven and a half ish wow",
    "start": "94560",
    "end": "101040"
  },
  {
    "text": "it's been a long time and um working with kubernetes almost the entirety of that time helping organizations use",
    "start": "101040",
    "end": "107520"
  },
  {
    "text": "kubernetes correctly uh get over the the hurdles of using what is for most people",
    "start": "107520",
    "end": "113280"
  },
  {
    "text": "a new paradigm and it's complicated to learn um today we developed open source",
    "start": "113280",
    "end": "118399"
  },
  {
    "text": "software as well as a sas product that specifically addresses misconfigurations",
    "start": "118399",
    "end": "123600"
  },
  {
    "text": "organizations out there are worried when i move to kubernetes am i going to mess everything up how do i do this correctly",
    "start": "123600",
    "end": "130399"
  },
  {
    "text": "it's a new paradigm i know how to think about the old paradigms how do i get used to this new one and that's what",
    "start": "130399",
    "end": "136160"
  },
  {
    "text": "fairwinds does so we build open source in that space we're going to be talking a lot about some of that open source today we also build a sas platform that",
    "start": "136160",
    "end": "142800"
  },
  {
    "text": "addresses this so misconfigurations is literally the water we swim in uh it's what we do all day long at fairwinds and",
    "start": "142800",
    "end": "149200"
  },
  {
    "text": "that's why we're addressing this topic today for for y'all so",
    "start": "149200",
    "end": "154560"
  },
  {
    "text": "proper configuration counts uh and let's dive into",
    "start": "154560",
    "end": "160080"
  },
  {
    "text": "some of the why about this um first of all what's what's different well well",
    "start": "160080",
    "end": "166640"
  },
  {
    "text": "before we do that um let's talk about",
    "start": "166640",
    "end": "172080"
  },
  {
    "text": "some of the common misconfigurations that we see and uh one of the first things here we have is only 35",
    "start": "172080",
    "end": "179760"
  },
  {
    "text": "of organizations have correctly configured 90 of their workloads with liveness and",
    "start": "179760",
    "end": "185680"
  },
  {
    "text": "readiness probes now we can dig into this specifically here in just a second but i want to begin with um",
    "start": "185680",
    "end": "191840"
  },
  {
    "text": "huge percentages of organizations leave things off partly because kubernetes is",
    "start": "191840",
    "end": "197280"
  },
  {
    "text": "just a fundamentally different paradigm right liveness and readiness probes in kubernetes is a different way of",
    "start": "197280",
    "end": "202959"
  },
  {
    "text": "thinking about things than previously where you know there was a time in your uh career where you could tell a machine",
    "start": "202959",
    "end": "208720"
  },
  {
    "text": "went off because it was um you know in your closet in the server room in the back or something you might",
    "start": "208720",
    "end": "214799"
  },
  {
    "text": "have had liveness and readiness probes for that kind of thing too but uh it's a whole new paradigm so let's start with",
    "start": "214799",
    "end": "220159"
  },
  {
    "text": "what's just fundamentally different about kubernetes and then let's get into some of the specifics of this particular",
    "start": "220159",
    "end": "226319"
  },
  {
    "text": "common misconfiguration and um ivan you want to kick us off why is kubernetes so fundamentally different",
    "start": "226319",
    "end": "232480"
  },
  {
    "text": "i think what relates to to this is that with kubernetes things are",
    "start": "232480",
    "end": "237680"
  },
  {
    "text": "typically a lot more ephemeral than your server room back of the closet under the",
    "start": "237680",
    "end": "243599"
  },
  {
    "text": "desk scenario so even though we've always had some kind of monitoring some",
    "start": "243599",
    "end": "249120"
  },
  {
    "text": "kind of thing that in the kubernetes world we're calling liveness and readiness probes what i think is",
    "start": "249120",
    "end": "256000"
  },
  {
    "text": "uh appreciable difference here is that containers are coming and going and scaling and moving around a lot more",
    "start": "256000",
    "end": "264320"
  },
  {
    "text": "than applications tended to move around and so it sort of exacerbates uh makes",
    "start": "264320",
    "end": "269680"
  },
  {
    "text": "much more important the proper configuration of all of these things",
    "start": "269680",
    "end": "275199"
  },
  {
    "text": "and in kubernetes world aren't we declaring the state that we want",
    "start": "275199",
    "end": "280720"
  },
  {
    "text": "in a way that's different from previous models of actually writing code to go create the state that we want i mean",
    "start": "280720",
    "end": "287199"
  },
  {
    "text": "isn't that one of the big fundamental shifts here is we're just uh we're just defining what the end state is and",
    "start": "287199",
    "end": "292960"
  },
  {
    "text": "letting kubernetes figure out all the configuration to get us there rather than having to like say hey go out and build me a box build",
    "start": "292960",
    "end": "300400"
  },
  {
    "text": "me a box this way build it like that build it this way and scan it this way and grow it that way and scale when you",
    "start": "300400",
    "end": "306080"
  },
  {
    "text": "hit this like with kubernetes we just set some parameters and it does everything for us right we are and and",
    "start": "306080",
    "end": "312000"
  },
  {
    "text": "while it happens often very quickly and it feels very similar to that uh scripted or configuration managed way of",
    "start": "312000",
    "end": "320320"
  },
  {
    "text": "implementing something that was more imperative it is that declarative control loop that happens in kubernetes",
    "start": "320320",
    "end": "325919"
  },
  {
    "text": "that keeps things as close to the desired state as it's possible for kubernetes to",
    "start": "325919",
    "end": "332560"
  },
  {
    "text": "do and that's what helps things heal when you have things break in your app or you lose a kubernetes node et cetera",
    "start": "332560",
    "end": "338880"
  },
  {
    "text": "kubernetes sees that there's that difference now between desired and actual state and works to fix it",
    "start": "338880",
    "end": "345120"
  },
  {
    "text": "great so with that in mind and and i i like to use the analogy that moving the",
    "start": "345120",
    "end": "350479"
  },
  {
    "text": "kubernetes is like moving from windows to linux it's not that linux is really really hard to use it's that if you've",
    "start": "350479",
    "end": "356319"
  },
  {
    "text": "never used linux it's a whole new paradigm once you get used to it you will adjust it will start to feel normal",
    "start": "356319",
    "end": "362560"
  },
  {
    "text": "but if all you've ever used is this other thing this new thing feels very different and so uh that's part of why",
    "start": "362560",
    "end": "369199"
  },
  {
    "text": "people are so afraid of misconfigurations is they just know i'm gonna mess things up so how do i avoid",
    "start": "369199",
    "end": "374479"
  },
  {
    "text": "that so um now talk i mean ivan you touched on this kind of you know almost",
    "start": "374479",
    "end": "379840"
  },
  {
    "text": "in passing but let's talk let's talk specifically about the liveness and readiness probes like um how does that relate to what you were",
    "start": "379840",
    "end": "386080"
  },
  {
    "text": "just talking about in the new world of kubernetes yeah so um loudness and readiness probes",
    "start": "386080",
    "end": "392400"
  },
  {
    "text": "are two kinds of probes that kubernetes can make connections that kubernetes can",
    "start": "392400",
    "end": "398319"
  },
  {
    "text": "make to your application and it uses them to either restart containers or pods that have been hung",
    "start": "398319",
    "end": "404880"
  },
  {
    "text": "or that have stopped responding or also in the in the case of readiness probes",
    "start": "404880",
    "end": "410560"
  },
  {
    "text": "kubernetes will stop sending traffic to a pod that is determined and not be healthy so that that helps avoid things",
    "start": "410560",
    "end": "417759"
  },
  {
    "text": "like you know bad gateway http 502 errors that might come from a upstream",
    "start": "417759",
    "end": "423199"
  },
  {
    "text": "load balancer or an ingress in kubernetes to some application pods that are less healthy",
    "start": "423199",
    "end": "429840"
  },
  {
    "text": "so when we're defining these we also need something for kubernetes to talk to",
    "start": "429840",
    "end": "435440"
  },
  {
    "text": "on an application and if your application doesn't listen on some http",
    "start": "435440",
    "end": "440479"
  },
  {
    "text": "port for example you can also exec a command in the container but one one important aspect of this is",
    "start": "440479",
    "end": "447039"
  },
  {
    "text": "is that whatever you are querying for these probes you want it to be relatively efficient these get queried",
    "start": "447039",
    "end": "453280"
  },
  {
    "text": "pretty often potentially once a second for a single pod and you're probably",
    "start": "453280",
    "end": "458720"
  },
  {
    "text": "running hopefully running more than one pod for your application so if you have a probe that does a bunch of",
    "start": "458720",
    "end": "465919"
  },
  {
    "text": "analysis inside your application or a database query to find out if the application's healthy",
    "start": "465919",
    "end": "472639"
  },
  {
    "text": "you don't want that to cause an outage because the probe is being queried for your app so often",
    "start": "472639",
    "end": "478960"
  },
  {
    "text": "yeah so um this falls into just one of those this",
    "start": "478960",
    "end": "484560"
  },
  {
    "text": "is a new kind of uh paradigm this is one of those configurations that people do get wrong",
    "start": "484560",
    "end": "490879"
  },
  {
    "text": "uh correctly configured you are going to have liveness and readiness probes on more than 90 of your workloads there",
    "start": "490879",
    "end": "497440"
  },
  {
    "text": "might be a situation where you don't care but correctly configured by our definition here is the vast majority of",
    "start": "497440",
    "end": "502960"
  },
  {
    "text": "your workloads should probably have liveness and readiness probes if the workload matters you want to know that it's running uh anything that i'm",
    "start": "502960",
    "end": "509759"
  },
  {
    "text": "missing there robert before i move on no i would just say like the big thing to keep in mind is that um you know the",
    "start": "509759",
    "end": "515680"
  },
  {
    "text": "reason most organizations uh or a lot of organizations have not configured a lot of these is that it is optional so",
    "start": "515680",
    "end": "522640"
  },
  {
    "text": "um you know your development teams will be able to successfully you know for some value of successful uh be able to",
    "start": "522640",
    "end": "528800"
  },
  {
    "text": "successfully deploy a workload without these things set but that workload is likely to experience downtime uh if if",
    "start": "528800",
    "end": "535839"
  },
  {
    "text": "it's not set um it's likely to you know have have issues that don't get caught um",
    "start": "535839",
    "end": "541839"
  },
  {
    "text": "if they're not setting them so you really need do need some kind of proactive approach to check for these things and make sure every individual",
    "start": "541839",
    "end": "548080"
  },
  {
    "text": "team is doing it yeah and so uh i mean we have a couple more slides like this and we're going to",
    "start": "548080",
    "end": "554480"
  },
  {
    "text": "get into some more specifics here in a little bit but uh just to give you a feeling like the reason we have these",
    "start": "554480",
    "end": "560080"
  },
  {
    "text": "statistics in here is to show you organizations struggle with this so only 42 percent of organizations today manage",
    "start": "560080",
    "end": "565519"
  },
  {
    "text": "to lock down most of their workloads uh and 54 are leaving over half of their",
    "start": "565519",
    "end": "570880"
  },
  {
    "text": "workloads open to privilege escalation and thus security holes so um",
    "start": "570880",
    "end": "576560"
  },
  {
    "text": "there it's these kinds of statistics that just show us that people struggle with",
    "start": "576560",
    "end": "581680"
  },
  {
    "text": "configuration in kubernetes because it's so different and it's vital for your",
    "start": "581680",
    "end": "587440"
  },
  {
    "text": "organization if you're using kubernetes to get it right i i feel like that's that's that sounds obvious but uh you",
    "start": "587440",
    "end": "594720"
  },
  {
    "text": "know in the same way that i've seen people move to the cloud and never implement things like auto scaling which like the whole promise of the cloud is",
    "start": "594720",
    "end": "601360"
  },
  {
    "text": "that you can scale up and scale down uh and so if you're using the cloud and you're not using something simple like",
    "start": "601360",
    "end": "606560"
  },
  {
    "text": "auto scaling okay simple is hand wavy it can be complicated but you're not using one of the greatest promises of the",
    "start": "606560",
    "end": "611920"
  },
  {
    "text": "cloud you're getting it wrong uh or you're you know you're you're messing up probably um",
    "start": "611920",
    "end": "617360"
  },
  {
    "text": "similarly when you're using kubernetes and it's in it just is different because it's cloud",
    "start": "617360",
    "end": "622959"
  },
  {
    "text": "native at scale in whatever cloud you're running it in um it's very easy to",
    "start": "622959",
    "end": "628480"
  },
  {
    "text": "mess up these common things and it's just not worth doing when kubernetes is",
    "start": "628480",
    "end": "633600"
  },
  {
    "text": "a different paradigm you can get it right we're going to show you tools to help you get it right but uh kubernetes is a different world okay",
    "start": "633600",
    "end": "640320"
  },
  {
    "text": "i've i think i've belabored that point long enough are we ready to dive into some specifics around security",
    "start": "640320",
    "end": "645600"
  },
  {
    "text": "reliability and cost yeah let's do it totally okay here we go security uh so there are",
    "start": "645600",
    "end": "653040"
  },
  {
    "text": "a number of common misconfigurations that we see in security let's talk about over-permissioned containers and then",
    "start": "653040",
    "end": "659440"
  },
  {
    "text": "we'll dig into some some broader other things that we talk about but we'll go deep on this one to start we'll go deep on on one specific issue with with each",
    "start": "659440",
    "end": "666880"
  },
  {
    "text": "of these and then talk about the broader common kinds of things that we see um but uh robert you want to start with",
    "start": "666880",
    "end": "672959"
  },
  {
    "text": "over permissioned containers what what is an over push permission container what is the problem with that uh and and",
    "start": "672959",
    "end": "679920"
  },
  {
    "text": "then go from there yeah so again uh the defaults for kubernetes um",
    "start": "679920",
    "end": "685839"
  },
  {
    "text": "are not always the most secure way to run a container there are a lot of things that kubernetes will allow you to do by default that you don't necessarily need",
    "start": "685839",
    "end": "692240"
  },
  {
    "text": "to do for instance running a container as root kubernetes by default will allow a",
    "start": "692240",
    "end": "697279"
  },
  {
    "text": "container that runs as root but you can specify in your configuration i never want this container to run as root",
    "start": "697279",
    "end": "704000"
  },
  {
    "text": "and that's a great um you know way to tighten the security of that workload because for the most part it probably",
    "start": "704000",
    "end": "709920"
  },
  {
    "text": "doesn't need to run as root unless it's doing something very specific or it's um you know designed in a very specific way",
    "start": "709920",
    "end": "716000"
  },
  {
    "text": "to need uh root access um most likely you can you can run your application perfectly fine without root",
    "start": "716000",
    "end": "722320"
  },
  {
    "text": "uh this goes for several other different configuration options that are available in the kubernetes security context",
    "start": "722320",
    "end": "728800"
  },
  {
    "text": "so whether that container runs is privileged uh what capabilities have been added to that uh added to that",
    "start": "728800",
    "end": "734160"
  },
  {
    "text": "container um these are all things that basically uh a workload that is misbehaving or",
    "start": "734160",
    "end": "740399"
  },
  {
    "text": "that gets compromised by an attacker these permissions could be used to basically escalate um to get access to",
    "start": "740399",
    "end": "747279"
  },
  {
    "text": "the to the root node to get extra permissions on that root node and potentially uh you know basically spread the attack",
    "start": "747279",
    "end": "753279"
  },
  {
    "text": "throughout the cluster instead of being restricted to that one single container so it's it's super important to as much",
    "start": "753279",
    "end": "759279"
  },
  {
    "text": "as possible tighten the security of a workload uh to make sure it's adhering to that principle of least privilege to",
    "start": "759279",
    "end": "764320"
  },
  {
    "text": "make sure it doesn't have permissions to do things that it doesn't need to do yeah and uh i mean",
    "start": "764320",
    "end": "771200"
  },
  {
    "text": "i've i've said before in in other webinars i feel like the",
    "start": "771200",
    "end": "776240"
  },
  {
    "text": "the average response from a person who's not tuned into this is to think like nobody's gonna break out of a container",
    "start": "776240",
    "end": "783040"
  },
  {
    "text": "and get access to other things right like like that just it sounds far-fetched except in the world we live",
    "start": "783040",
    "end": "788399"
  },
  {
    "text": "in we know of lots of people who make a career out of breaking out of containers like that is that is a thing that people",
    "start": "788399",
    "end": "793600"
  },
  {
    "text": "are like hey i escaped a container in this situation i escaped a container in that situation i mean one of the ones",
    "start": "793600",
    "end": "799680"
  },
  {
    "text": "that i saw was um i think it was i escaped a container",
    "start": "799680",
    "end": "804880"
  },
  {
    "text": "running on a cluster in a mainframe or something you know it was just like yeah that's uh that was more just for street",
    "start": "804880",
    "end": "810959"
  },
  {
    "text": "cred because that's not gonna be a thing that we're going to run into a whole lot in regular life um i have anything to to",
    "start": "810959",
    "end": "817360"
  },
  {
    "text": "to add specifically over permission containers just a bit of an underscore robert robert covered it all but uh",
    "start": "817360",
    "end": "824399"
  },
  {
    "text": "this is harder i think to put time and effort",
    "start": "824399",
    "end": "829680"
  },
  {
    "text": "into implementing correctly than for example the thing we just talked about readiness and liveness probes so if you",
    "start": "829680",
    "end": "836639"
  },
  {
    "text": "want to limit the linux capabilities which is essentially",
    "start": "836639",
    "end": "842079"
  },
  {
    "text": "what colonel calls is it possible for your container to make that takes effort to",
    "start": "842079",
    "end": "847839"
  },
  {
    "text": "minimize those and then run your application through its typical qa testing if you want to make sure that",
    "start": "847839",
    "end": "854480"
  },
  {
    "text": "all the things your app needs to do are still possible for it to do while it's running so",
    "start": "854480",
    "end": "859839"
  },
  {
    "text": "this is an easy one to ignore because it's hard to do and you've got to set that time aside so",
    "start": "859839",
    "end": "866240"
  },
  {
    "text": "it's it's a a bigger gap for sure that we see and when you take the time to do the first",
    "start": "866240",
    "end": "872800"
  },
  {
    "text": "few like don't run as root have your file system be read only in your container those type of things that's an",
    "start": "872800",
    "end": "879120"
  },
  {
    "text": "awesome start please please start there and then move on to the other stuff uh when you",
    "start": "879120",
    "end": "884480"
  },
  {
    "text": "can make time for it well and so so let's spend a minute talking about other security issues that",
    "start": "884480",
    "end": "889519"
  },
  {
    "text": "we see commonly made in kubernetes so um it's not unique to kubernetes but",
    "start": "889519",
    "end": "894639"
  },
  {
    "text": "something that people forget about like there's there's some amount of i can deploy",
    "start": "894639",
    "end": "900720"
  },
  {
    "text": "a workload with a known vulnerability it's in a container it's going to be fine it's not going to have access to",
    "start": "900720",
    "end": "906959"
  },
  {
    "text": "anything you know i think of the the famous log 4j example from recently you",
    "start": "906959",
    "end": "912480"
  },
  {
    "text": "know first of all you want to stop known cves that are running in your workloads or running in your containers",
    "start": "912480",
    "end": "919199"
  },
  {
    "text": "from being deployed into a production environment you want to stop that from happening period if that's going to happen and you've at",
    "start": "919199",
    "end": "927120"
  },
  {
    "text": "least kept your container pretty locked down that does limit some of the attack radius that it can have right uh so so",
    "start": "927120",
    "end": "934800"
  },
  {
    "text": "when it when we when we think about security there's the big picture things and you work down to the granular level and everything in security and",
    "start": "934800",
    "end": "940880"
  },
  {
    "text": "operations is a trade-off but uh there's there's huge trade-offs to be made it",
    "start": "940880",
    "end": "946079"
  },
  {
    "text": "like there's huge mistakes to be made and this may be more complicated to do but really limits the attack or the the",
    "start": "946079",
    "end": "953040"
  },
  {
    "text": "blast radius of an attack if you do it well um but let's just just broadly talk",
    "start": "953040",
    "end": "958079"
  },
  {
    "text": "about some of the common security issues that we see over permission containers we've mentioned i",
    "start": "958079",
    "end": "963199"
  },
  {
    "text": "just mentioned um you know deploying known cvs or or vulnerabilities into your cluster what",
    "start": "963199",
    "end": "969279"
  },
  {
    "text": "are some other common misconfigurations uh that are that we see regularly",
    "start": "969279",
    "end": "974320"
  },
  {
    "text": "they're probably still broadly in this space but uh you know allowing access to things like host path",
    "start": "974320",
    "end": "981600"
  },
  {
    "text": "mounts from your container so now your container is mounting a directory that's on the node itself",
    "start": "981600",
    "end": "987759"
  },
  {
    "text": "depending on what you allow access to that can be a risk uh similarly access to the host network it's pretty common",
    "start": "987759",
    "end": "994560"
  },
  {
    "text": "that we see containers being allowed to access the host network instead of isolated network space in the",
    "start": "994560",
    "end": "1001839"
  },
  {
    "text": "container and that means that everything that the host can see on the network",
    "start": "1001839",
    "end": "1006880"
  },
  {
    "text": "traffic wise you that container can see which can be handy for certain there's",
    "start": "1006880",
    "end": "1011920"
  },
  {
    "text": "certain things that that we won't mention that that need to run that way uh but it also is a risk um",
    "start": "1011920",
    "end": "1019279"
  },
  {
    "text": "similar similarly host ipc having access to that inter-process communication",
    "start": "1019279",
    "end": "1024480"
  },
  {
    "text": "or host pid as well means the container can see processes that are running on the host not limited",
    "start": "1024480",
    "end": "1030959"
  },
  {
    "text": "to the processes that only run in the container so that gives you even if the container is not running as root gives",
    "start": "1030959",
    "end": "1036720"
  },
  {
    "text": "you some visibility into what else is running on the host which is you know intel for some attacker for example",
    "start": "1036720",
    "end": "1043199"
  },
  {
    "text": "yeah ivan brings up a really good point there the the reason you know these security options are available is that",
    "start": "1043199",
    "end": "1049039"
  },
  {
    "text": "sometimes they are necessary if you're you know running a workload that does like uh you know network telemetry it",
    "start": "1049039",
    "end": "1055360"
  },
  {
    "text": "probably does need access to that host network um to be able to do its job um and so that's an example where you would",
    "start": "1055360",
    "end": "1062320"
  },
  {
    "text": "want to create an exemption for some of these rules and say okay this particular workload does get access to this particular",
    "start": "1062320",
    "end": "1068400"
  },
  {
    "text": "security feature um the the issue is that the vast majority of workloads especially the ones that you're building",
    "start": "1068400",
    "end": "1074880"
  },
  {
    "text": "internally at your company don't need access to these things they're probably just api servers they're serving a",
    "start": "1074880",
    "end": "1080400"
  },
  {
    "text": "website something like that they don't need you know deep telemetry into you know the network operations going on",
    "start": "1080400",
    "end": "1086559"
  },
  {
    "text": "inside the cluster um so i think uh i think it's important to note that sometimes these options are appropriate",
    "start": "1086559",
    "end": "1093360"
  },
  {
    "text": "but it's in very rare and isolated cases yeah yeah",
    "start": "1093360",
    "end": "1098400"
  },
  {
    "text": "so um well anything else to add just in the broad bucket of security",
    "start": "1098400",
    "end": "1103440"
  },
  {
    "text": "misconfigurations that we see commonly robert what are the other ones that come top to mind the other like broad",
    "start": "1103440",
    "end": "1109120"
  },
  {
    "text": "category that we haven't really mentioned is uh something like the control plane level um so that would include things like if",
    "start": "1109120",
    "end": "1115120"
  },
  {
    "text": "you're if you're managing your own control plane you're not on like eks or gke making sure that that's not you know a",
    "start": "1115120",
    "end": "1121120"
  },
  {
    "text": "publicly available control plane so that you know anybody from the internet can just you know log in and start messing",
    "start": "1121120",
    "end": "1126799"
  },
  {
    "text": "with your kubernetes cluster um you know making sure that it's using ssl that cd",
    "start": "1126799",
    "end": "1131919"
  },
  {
    "text": "is encrypted there's a whole bunch of stuff you need to do to have a really solid secure control",
    "start": "1131919",
    "end": "1138240"
  },
  {
    "text": "plane environment the easiest thing to do is to go with a managed service like eks or gke where",
    "start": "1138240",
    "end": "1143679"
  },
  {
    "text": "they manage the control plane for you they do it well so if you can go with one of those providers but if you're managing it",
    "start": "1143679",
    "end": "1149520"
  },
  {
    "text": "yourself there's a lot you need to do to make sure you're doing it right there's also kind of analogous to the",
    "start": "1149520",
    "end": "1154559"
  },
  {
    "text": "control plane um a lot of topics are on roll rate role-based access control",
    "start": "1154559",
    "end": "1159679"
  },
  {
    "text": "making sure that you're using the principle of least privilege to ensure that you know different personas",
    "start": "1159679",
    "end": "1165840"
  },
  {
    "text": "at your company have the right level of access to your cluster you know maybe the sres need to be able to",
    "start": "1165840",
    "end": "1171679"
  },
  {
    "text": "delete and modify things on the fly but the developers only need read-only access that kind of thing",
    "start": "1171679",
    "end": "1177120"
  },
  {
    "text": "and also the individual workloads in your cluster the service accounts that are doing some automated operations those those two should adhere the print",
    "start": "1177120",
    "end": "1183520"
  },
  {
    "text": "to the principle of least privilege they should only get permissions to do the things they need to do in order to get their job done",
    "start": "1183520",
    "end": "1190240"
  },
  {
    "text": "and it's worth uh making a plug there for one of our open source projects it's called our back manager so rbac",
    "start": "1190240",
    "end": "1197200"
  },
  {
    "text": "role-based access control that robert just mentioned uh is for managing um",
    "start": "1197200",
    "end": "1202320"
  },
  {
    "text": "role-based access control which uh part of the reason that that project exists is we see people struggle with it more",
    "start": "1202320",
    "end": "1208000"
  },
  {
    "text": "than uh than we would like them to so we've tried to ease some of that process um",
    "start": "1208000",
    "end": "1213520"
  },
  {
    "text": "there's a lot of ways to manage uh our back but uh one of one of them is our open source project so check out uh our",
    "start": "1213520",
    "end": "1219840"
  },
  {
    "text": "back manager if uh that's something that you're you're not feeling confident in today it will help",
    "start": "1219840",
    "end": "1226000"
  },
  {
    "text": "you uh make that a little bit easier um i have anything to add before i move on",
    "start": "1226000",
    "end": "1232080"
  },
  {
    "text": "no that's awesome we'll see the next one okay so uh i'm i'm i want to wrap up security with",
    "start": "1232080",
    "end": "1238960"
  },
  {
    "text": "just a there are a lot of misconfigurations that you can you can",
    "start": "1238960",
    "end": "1244799"
  },
  {
    "text": "how do i explain this uh reliability costs you something immediately oh this this is slow this",
    "start": "1244799",
    "end": "1251039"
  },
  {
    "text": "isn't up uh user tried to get on my website i cost me you know i think of how much money it has to cost amazon if",
    "start": "1251039",
    "end": "1258240"
  },
  {
    "text": "they have two minutes of downtime right that's why you basically never ever see amazon's website down because it's",
    "start": "1258240",
    "end": "1264000"
  },
  {
    "text": "probably millions of dollars for you know a minute if if not more than that",
    "start": "1264000",
    "end": "1269520"
  },
  {
    "text": "your website is similarly affected by reliability misconfigurations which we're going to get into in just a second",
    "start": "1269520",
    "end": "1274799"
  },
  {
    "text": "but security misconfigurations you can get away with until you can't it's free",
    "start": "1274799",
    "end": "1281360"
  },
  {
    "text": "until it's so expensive it puts you out of business it can do damage to your brand it can do damage to your user base",
    "start": "1281360",
    "end": "1287360"
  },
  {
    "text": "it can do damage to everything and so having a correct security posture i guess anybody who's been in this space",
    "start": "1287360",
    "end": "1293919"
  },
  {
    "text": "knows this but i feel like it's worth it uh reiterating it matters to get this right in fact",
    "start": "1293919",
    "end": "1300640"
  },
  {
    "text": "security is like one of the number one reasons we see people interact with our software both open source and",
    "start": "1300640",
    "end": "1307280"
  },
  {
    "text": "our sas software is because they want a security posture in kubernetes that they have confidence in so it's not a it's",
    "start": "1307280",
    "end": "1314320"
  },
  {
    "text": "not a minimal thing um okay now we're gonna do something similar here talk about reliability",
    "start": "1314320",
    "end": "1320400"
  },
  {
    "text": "let's talk about health probes um ivan you can start and we'll we'll talk about you know what are health probes what's",
    "start": "1320400",
    "end": "1327120"
  },
  {
    "text": "the problem that they're they're they're trying to solve what's the impact of getting it wrong uh and then we'll go",
    "start": "1327120",
    "end": "1332720"
  },
  {
    "text": "broader on some of the other reliability issues that we see people struggle with yeah so um i don't i won't explain uh",
    "start": "1332720",
    "end": "1339280"
  },
  {
    "text": "these probes because it we actually kind of talked about them earlier when we were uh starting with kind of the",
    "start": "1339280",
    "end": "1345039"
  },
  {
    "text": "overall overview of these topics but i'll say a little bit more about the what happens if you get it wrong part so",
    "start": "1345039",
    "end": "1352240"
  },
  {
    "text": "if you don't have readiness and liveness probes defined for your application then kubernetes doesn't have any way of",
    "start": "1352240",
    "end": "1358720"
  },
  {
    "text": "knowing what the health of your pods containers are and the impact of that",
    "start": "1358720",
    "end": "1365360"
  },
  {
    "text": "apologize for the fire engine in the background the impact of that is that if you have a container that hangs or",
    "start": "1365360",
    "end": "1372720"
  },
  {
    "text": "becomes unhealthy stalls in some kind of way kubernetes won't know that it can go",
    "start": "1372720",
    "end": "1379679"
  },
  {
    "text": "ahead and restart or that it should restart that container without a probe kubernetes definition of",
    "start": "1379679",
    "end": "1385280"
  },
  {
    "text": "a healthy container is that the process you ran for the container to start is still",
    "start": "1385280",
    "end": "1391280"
  },
  {
    "text": "running and as we know that process could be quote unquote running but it could be deadlocked for some reason the",
    "start": "1391280",
    "end": "1396960"
  },
  {
    "text": "readiness probes without those kubernetes won't know whether it should send traffic to that pod so if you have",
    "start": "1396960",
    "end": "1403600"
  },
  {
    "text": "a service defined in kubernetes that could either be used internally for",
    "start": "1403600",
    "end": "1408720"
  },
  {
    "text": "other applications to talk to your application like a microservice architecture or a service that is",
    "start": "1408720",
    "end": "1414480"
  },
  {
    "text": "leveraged by your ingress controller or directly attached to a load balancer you're getting traffic in to your",
    "start": "1414480",
    "end": "1421039"
  },
  {
    "text": "application through that service and without a readiness probe if you have that similarly unhealthy or unresponsive",
    "start": "1421039",
    "end": "1427919"
  },
  {
    "text": "pod kubernetes will otherwise then continue to send traffic to that and so now that means that your users and your",
    "start": "1427919",
    "end": "1434320"
  },
  {
    "text": "customers are accessing an application pod that isn't able to do",
    "start": "1434320",
    "end": "1440159"
  },
  {
    "text": "work so that means tongue connections or http errors and those kind of things so those are the ramifications of not",
    "start": "1440159",
    "end": "1447039"
  },
  {
    "text": "setting these these probes that we've talked about earlier in the webinar yeah making sure that things are working",
    "start": "1447039",
    "end": "1453200"
  },
  {
    "text": "the way they should be working go ahead robert a good like symptom that you've got an issue here either they haven't been set",
    "start": "1453200",
    "end": "1459279"
  },
  {
    "text": "or they're misconfigured is if you see you know every time you deploy there's a big spike in 500 errors or some other",
    "start": "1459279",
    "end": "1466080"
  },
  {
    "text": "type of error message in your logs that's like there's a good chance that you know you're seeing this kind of downtime as",
    "start": "1466080",
    "end": "1472720"
  },
  {
    "text": "you know a new pod spins up it starts getting served traffic before it's actually ready for that traffic um so",
    "start": "1472720",
    "end": "1478159"
  },
  {
    "text": "keep an eye out for those kinds of uh you know spikes and errors every time you deploy",
    "start": "1478159",
    "end": "1483279"
  },
  {
    "text": "yeah um i'm trying to think of a an analogy there but it's it's you know basically",
    "start": "1483279",
    "end": "1489200"
  },
  {
    "text": "um think of a think of a new person coming into your organization and uh on day one",
    "start": "1489200",
    "end": "1494880"
  },
  {
    "text": "you you know hand them uh a mountain of paperwork and ask them to file your company's taxes like there's no way they",
    "start": "1494880",
    "end": "1501279"
  },
  {
    "text": "have the context to be able to do that they're not going to be able to do that they're not going to do it well and they're going to stare at you with a",
    "start": "1501279",
    "end": "1507279"
  },
  {
    "text": "very blank face the same way a workload is going to respond with uh not yet uh not yet not yet except it's not smart",
    "start": "1507279",
    "end": "1514080"
  },
  {
    "text": "enough to say not yet so it just says no um anyways uh what are some other common",
    "start": "1514080",
    "end": "1519279"
  },
  {
    "text": "reliability issues that we see i mean you know building yes i need to build my",
    "start": "1519279",
    "end": "1524400"
  },
  {
    "text": "cluster so it's secure i just covered that but uh building a cluster so that it's going to be reliable and up and you",
    "start": "1524400",
    "end": "1530080"
  },
  {
    "text": "know what are the what are the common misconfigurations that we see what do people get wrong often",
    "start": "1530080",
    "end": "1535919"
  },
  {
    "text": "another one might be you know the presence of a horizontal pod auto scaler or a pod disruption budget for each of",
    "start": "1535919",
    "end": "1540960"
  },
  {
    "text": "your workloads um so the horizontal pod auto scaler for instance uh you can tell",
    "start": "1540960",
    "end": "1546000"
  },
  {
    "text": "kubernetes uh when to scale your workload up when to scale it down how you know what the maximum level of",
    "start": "1546000",
    "end": "1552400"
  },
  {
    "text": "concurrency you want like how many pods you want at once uh what's the minimum number of pods you want at once like you",
    "start": "1552400",
    "end": "1558320"
  },
  {
    "text": "probably always want at least two running at any given time um for any kind of high availability",
    "start": "1558320",
    "end": "1563520"
  },
  {
    "text": "scenario uh so making sure that that hpa that horizontal pod autoscaler definition is",
    "start": "1563520",
    "end": "1569520"
  },
  {
    "text": "present is a huge part of reliability yeah that i mean to to add to that very simply um",
    "start": "1569520",
    "end": "1577360"
  },
  {
    "text": "you know there's there's a big difference between how much traffic you serve as a e-commerce website on a tuesday in",
    "start": "1577360",
    "end": "1584799"
  },
  {
    "text": "february uh than there is what you what you're serving um on black friday and if you don't have",
    "start": "1584799",
    "end": "1591039"
  },
  {
    "text": "the ability to scale uh you know if you're trying to serve uh ten thousand times the customers with the same amount",
    "start": "1591039",
    "end": "1597600"
  },
  {
    "text": "of computing power you're not going to have a reliable experience",
    "start": "1597600",
    "end": "1604400"
  },
  {
    "text": "that is good for your users uh ivan anything to add to that no",
    "start": "1604400",
    "end": "1609520"
  },
  {
    "text": "other other reliability issues that come to mind right off the top of your head i mean we're gonna some of these bleed into one another and we're gonna talk",
    "start": "1609520",
    "end": "1615919"
  },
  {
    "text": "about cost in a second and some ways to get cost right and some of the effects of getting cost uh and and settings",
    "start": "1615919",
    "end": "1622159"
  },
  {
    "text": "around cost wrong and some of that let's yeah let's move on to let's move on to cost because i think there's uh some",
    "start": "1622159",
    "end": "1627919"
  },
  {
    "text": "some good natural overlap coming up here so okay okay cost uh inappropriate",
    "start": "1627919",
    "end": "1632960"
  },
  {
    "text": "resource requests and limits so so ivan i know that you were worried that i had we had these separated and you you",
    "start": "1632960",
    "end": "1638960"
  },
  {
    "text": "weren't going to be able to talk about them separate so now i'm going to let you talk about uh resource requests and limits how it affects both your cost and",
    "start": "1638960",
    "end": "1645520"
  },
  {
    "text": "your reliability so dive dive in yeah uh not not really worried but definitely i think that a lot of these",
    "start": "1645520",
    "end": "1651600"
  },
  {
    "text": "categories are um of course relate to each other like you said about you were you were worried i remember the voice",
    "start": "1651600",
    "end": "1660159"
  },
  {
    "text": "keep keep going like you said about the uh you know efficiency and reliability and how they",
    "start": "1660159",
    "end": "1666960"
  },
  {
    "text": "kind of overlap um and security and so does this so",
    "start": "1666960",
    "end": "1672480"
  },
  {
    "text": "um so as far as cost cost goes we've got",
    "start": "1672480",
    "end": "1677520"
  },
  {
    "text": "two big key things here around resource requests and resource limits um and the",
    "start": "1677520",
    "end": "1686480"
  },
  {
    "text": "the cost no pun intended of getting these incorrect is that",
    "start": "1686480",
    "end": "1691679"
  },
  {
    "text": "uh you end up having a noisy neighbor problem among other things in your kubernetes cluster so um if you've got",
    "start": "1691679",
    "end": "1698960"
  },
  {
    "text": "over provisioning of your nodes so you've got nodes that are too large or",
    "start": "1698960",
    "end": "1704799"
  },
  {
    "text": "too many nodes then now you've got cost overruns happening uh if you have under",
    "start": "1704799",
    "end": "1710559"
  },
  {
    "text": "provisioning on the other side of that coin then now you've got instability so",
    "start": "1710559",
    "end": "1715760"
  },
  {
    "text": "um an instability is its own thing uh the overlap but also",
    "start": "1715760",
    "end": "1720880"
  },
  {
    "text": "you know there's a cost to instability which is downtime and impact your business and your data and your",
    "start": "1720880",
    "end": "1726480"
  },
  {
    "text": "customers so developers uh or folks that are deploying your apps need to be",
    "start": "1726480",
    "end": "1731679"
  },
  {
    "text": "specifying uh cpu and memory requests and limits",
    "start": "1731679",
    "end": "1737440"
  },
  {
    "text": "and requests are essentially what are the resources that you think your app is going to need that that's a",
    "start": "1737440",
    "end": "1744000"
  },
  {
    "text": "baseline and then limits is how much should your application use as a maximum",
    "start": "1744000",
    "end": "1749440"
  },
  {
    "text": "as a cap of sorts and there's a lot of technical detail that i think we'll avoid uh for now about what happens when",
    "start": "1749440",
    "end": "1755360"
  },
  {
    "text": "you reach those but this relates to all kinds of other functions in",
    "start": "1755360",
    "end": "1760640"
  },
  {
    "text": "kubernetes depending on how you have these requests and limits set they get you used for",
    "start": "1760640",
    "end": "1766640"
  },
  {
    "text": "scaling new nodes into your cluster and uh putting the workloads on the correct",
    "start": "1766640",
    "end": "1771840"
  },
  {
    "text": "nodes yeah so uh these do bleed together",
    "start": "1771840",
    "end": "1777760"
  },
  {
    "text": "i you know i just think of um the reason that we have",
    "start": "1777760",
    "end": "1784399"
  },
  {
    "text": "cost problems around inappropriate resource requests and limits is tied to reliability uh i'm an engineer deploying",
    "start": "1784399",
    "end": "1790960"
  },
  {
    "text": "my workload it works on my machine i literally click the apple in the top corner see how big my machine is and",
    "start": "1790960",
    "end": "1796080"
  },
  {
    "text": "make sure i provision a container that's the same size uh that's probably overkill for what i'm probably doing in",
    "start": "1796080",
    "end": "1801760"
  },
  {
    "text": "that container probably in huge huge quotes you never know i can write a really inefficient workload if i want to",
    "start": "1801760",
    "end": "1807279"
  },
  {
    "text": "um just make sure that that you know there's memory leaks everywhere but um that you know",
    "start": "1807279",
    "end": "1812559"
  },
  {
    "text": "as a developer i just want that thing to work one thing i definitely don't want if i if there's a culture of service",
    "start": "1812559",
    "end": "1818880"
  },
  {
    "text": "ownership is for my app to ping me in the middle of the night because i underprovisioned it so i'm likely going to wildly over provision it so that",
    "start": "1818880",
    "end": "1825600"
  },
  {
    "text": "that's never a problem and so that's where the business use case ends up in",
    "start": "1825600",
    "end": "1830640"
  },
  {
    "text": "conflict with the individual's use case you know the business wants to make sure that that workload is up but also that",
    "start": "1830640",
    "end": "1836640"
  },
  {
    "text": "it's not costing a fortune and even understanding quality of service levels is really important here um",
    "start": "1836640",
    "end": "1843039"
  },
  {
    "text": "and uh uh it's easy to to mess those things up but uh",
    "start": "1843039",
    "end": "1848240"
  },
  {
    "text": "yeah robert anything to add uh no just that you know there there is like you said there's a natural tension",
    "start": "1848240",
    "end": "1853919"
  },
  {
    "text": "here between uh the folks who are charged with making sure this application is up and running",
    "start": "1853919",
    "end": "1859840"
  },
  {
    "text": "all the time so namely you know the developers uh who are gonna want to over provision and say give me all the cpus",
    "start": "1859840",
    "end": "1865200"
  },
  {
    "text": "give me all the memory uh versus you know finance and ops who are you know ultimately responsible for that aws",
    "start": "1865200",
    "end": "1871279"
  },
  {
    "text": "budget that's getting a portion to these containers you know sometimes incorrectly so it's just it's super important",
    "start": "1871279",
    "end": "1877360"
  },
  {
    "text": "to have those discussions and make sure you're making those trade-offs correctly and you know making sure that they're",
    "start": "1877360",
    "end": "1882960"
  },
  {
    "text": "also data data fueled conversations right you need to make sure you're watching these workloads in production",
    "start": "1882960",
    "end": "1888080"
  },
  {
    "text": "so you know okay you can come to the table and say you know this workload has never used more than half of a cpu at",
    "start": "1888080",
    "end": "1894399"
  },
  {
    "text": "any given time and we've got four cpus provisioned like we definitely need to take that down uh to at least like one",
    "start": "1894399",
    "end": "1900960"
  },
  {
    "text": "cpu which would still be way over provision but save us you know 75 percent of our bill um so so having data",
    "start": "1900960",
    "end": "1907600"
  },
  {
    "text": "for those discussions is super super helpful and it's one thing when your organization's very small and you have",
    "start": "1907600",
    "end": "1912960"
  },
  {
    "text": "one or two pods running it's another thing when your organization is very large and you have thousands of pods running and all of them are even a",
    "start": "1912960",
    "end": "1919600"
  },
  {
    "text": "little bit over provisioned that just spirals out of control really really quickly so um",
    "start": "1919600",
    "end": "1924880"
  },
  {
    "text": "okay so we've given you lots of examples of ways to mess things up uh and now we",
    "start": "1924880",
    "end": "1930240"
  },
  {
    "text": "want to talk you know a little bit about open source tooling to actually identify those misconfigurations so we play a",
    "start": "1930240",
    "end": "1936960"
  },
  {
    "text": "bunch in this space we're going to talk about some fairwinds open source tools and then we're going to talk about a few other open source tools that are",
    "start": "1936960",
    "end": "1943039"
  },
  {
    "text": "non-fairwinds and and go from there so let's let's dive in first with uh",
    "start": "1943039",
    "end": "1949679"
  },
  {
    "text": "polaris so um a back story for polaris today today fairwinds is a um",
    "start": "1949679",
    "end": "1955519"
  },
  {
    "text": "software company all we do is build software for organizations to to help them succeed with kubernetes but our",
    "start": "1955519",
    "end": "1961440"
  },
  {
    "text": "genesis as an organization was in services where we were building and maintaining kubernetes infrastructure for customers and at some point we",
    "start": "1961440",
    "end": "1967840"
  },
  {
    "text": "realized it doesn't matter how great of an infrastructure we build for people if everything that's deployed into it is",
    "start": "1967840",
    "end": "1973200"
  },
  {
    "text": "fundamentally broken and we saw the same mistakes that people were making over and over and over again and so we went",
    "start": "1973200",
    "end": "1979679"
  },
  {
    "text": "and built players so polaris exists because people mess the same things up",
    "start": "1979679",
    "end": "1986080"
  },
  {
    "text": "everybody makes the same mistakes and i imagine some of it is related to you know if you come from windows over to",
    "start": "1986080",
    "end": "1991600"
  },
  {
    "text": "linux you're looking for the start button right that's the paradigm you know you're going to make mistakes and you're going to click around hoping you",
    "start": "1991600",
    "end": "1997279"
  },
  {
    "text": "find something that looks familiar and you're going to make the same mistakes over and over again every single person that's making that transition is going",
    "start": "1997279",
    "end": "2003440"
  },
  {
    "text": "to struggle with some of the same things and so that's part of why we see these same issues but um",
    "start": "2003440",
    "end": "2009440"
  },
  {
    "text": "robert give a little bit more of an overview for polaris than i'm i'm giving right now yeah i mean so polaris checks for pretty",
    "start": "2009440",
    "end": "2015360"
  },
  {
    "text": "much everything we've talked about today all the misconfigurations we've talked about from cpu limits missing to",
    "start": "2015360",
    "end": "2021519"
  },
  {
    "text": "security context issues to liveness and readiness probes we have built-in checks for that i think",
    "start": "2021519",
    "end": "2027200"
  },
  {
    "text": "the the really important thing to note about polaris is that you know it's not just going to look inside your cluster and tell you here are all the things",
    "start": "2027200",
    "end": "2032960"
  },
  {
    "text": "you're doing wrong it actually can be implemented you know not just as a dashboard looking at you know what's",
    "start": "2032960",
    "end": "2038320"
  },
  {
    "text": "inside your cluster already can also be implemented as an admission controller so it can block things from getting into your cluster if they don't meet a",
    "start": "2038320",
    "end": "2044320"
  },
  {
    "text": "certain level of configuration and it can also run in ci cd so it can look at your input infrastructure as",
    "start": "2044320",
    "end": "2049919"
  },
  {
    "text": "code changes as somebody's making a pr and say hey you know you added this new deployment that doesn't have a liveness",
    "start": "2049919",
    "end": "2055440"
  },
  {
    "text": "probe specified uh you know i'm gonna block you block you for merging this pr until you specify that liveness probe or",
    "start": "2055440",
    "end": "2061358"
  },
  {
    "text": "until you you know add cpu requests and limits things like that um so the fact that it can run the same checks in all",
    "start": "2061359",
    "end": "2067280"
  },
  {
    "text": "three contacts you know infrastructures code admission control and you know inside of a live cluster makes it a",
    "start": "2067280",
    "end": "2073040"
  },
  {
    "text": "really powerful tool and you can also write custom checks using a json schema which is important",
    "start": "2073040",
    "end": "2078560"
  },
  {
    "text": "because there are other tools out there that do custom uh policy enforcement and we're going to",
    "start": "2078560",
    "end": "2083919"
  },
  {
    "text": "talk about opa in a second and you know but there's some people struggle with rego uh the language that you need for",
    "start": "2083919",
    "end": "2090000"
  },
  {
    "text": "oppa and so if uh using a json schema that you're familiar with is an easier way to approach that hilarious can make",
    "start": "2090000",
    "end": "2096320"
  },
  {
    "text": "that easy for you to implement that way um and this is what a dashboard for polaris",
    "start": "2096320",
    "end": "2101599"
  },
  {
    "text": "looks like so it gives you an overview of the cluster gives you a grade a health score talks about all the things that it's",
    "start": "2101599",
    "end": "2107280"
  },
  {
    "text": "checking what's passing and what's failing this is great to deploy across one or",
    "start": "2107280",
    "end": "2112320"
  },
  {
    "text": "two clusters it's really difficult to deploy across an organization and check everything and make sure it's all",
    "start": "2112320",
    "end": "2118160"
  },
  {
    "text": "implemented in the right way across lots and lots of clusters and you know if you want to operationalize any of these",
    "start": "2118160",
    "end": "2123839"
  },
  {
    "text": "tools at scale check out fairwinds insights that's our sas platform i'll probably mention that a few more times",
    "start": "2123839",
    "end": "2129680"
  },
  {
    "text": "but what insights does is adds a few things proprietary above and beyond this",
    "start": "2129680",
    "end": "2134720"
  },
  {
    "text": "to add value but also makes it really easy to operationalize at scale write the policy once enforce it across all",
    "start": "2134720",
    "end": "2140960"
  },
  {
    "text": "your clusters in your organization so um if you want something similar check that out uh goldilocks and ivan you want to",
    "start": "2140960",
    "end": "2147920"
  },
  {
    "text": "give a high level overview of goldilocks sure so goldilocks uh is the theme of",
    "start": "2147920",
    "end": "2154240"
  },
  {
    "text": "get your resource requests and limits just right and what it does is watches your",
    "start": "2154240",
    "end": "2160000"
  },
  {
    "text": "workloads running in your cluster and then makes a recommendation for what you should be setting those to",
    "start": "2160000",
    "end": "2166640"
  },
  {
    "text": "um and we do have some extension uh beyond that in our and our other",
    "start": "2166640",
    "end": "2172240"
  },
  {
    "text": "products as well but um that helps you for scenarios where you have very",
    "start": "2172240",
    "end": "2177760"
  },
  {
    "text": "spiky workloads at certain times of your life uh sort of like kendall's black friday example earlier but uh goldilocks",
    "start": "2177760",
    "end": "2185119"
  },
  {
    "text": "is awesome because it helps you avoid having to like dig into a monitoring dashboard and look and",
    "start": "2185119",
    "end": "2191680"
  },
  {
    "text": "look for the the peaks in the graph and try to do the guesswork of what should i be",
    "start": "2191680",
    "end": "2197119"
  },
  {
    "text": "setting my requests to now that i know that they're important and i should set them to something and what the cost of",
    "start": "2197119",
    "end": "2202880"
  },
  {
    "text": "me not doing so is how do i figure out what those numbers should be and goldilocks helped you do",
    "start": "2202880",
    "end": "2208240"
  },
  {
    "text": "that yeah it's called goldilocks so you can get it just right and also you know just",
    "start": "2208240",
    "end": "2214000"
  },
  {
    "text": "just to add on and we do got to speed up the wrap up here in time but uh",
    "start": "2214000",
    "end": "2219280"
  },
  {
    "text": "everyone struggles with the resource requests and limits you you tell an engineer get that right they don't have any clue how to get that right",
    "start": "2219280",
    "end": "2225280"
  },
  {
    "text": "goldilocks makes that easy finally go no go robert do you want to give a quick pitch on this",
    "start": "2225280",
    "end": "2231599"
  },
  {
    "text": "yeah so this is actually our newest project it's um it's a really cool uh way to basically validate whether or",
    "start": "2231599",
    "end": "2237920"
  },
  {
    "text": "not you're ready to upgrade to a new version of a home chart uh so often for home charts like for",
    "start": "2237920",
    "end": "2243920"
  },
  {
    "text": "instance cert manager is very popular one for managing certificates uh they will make breaking changes from you know",
    "start": "2243920",
    "end": "2249200"
  },
  {
    "text": "one version to another you'll have to update some crds and the way you're doing things in order to be",
    "start": "2249200",
    "end": "2255119"
  },
  {
    "text": "compliant with the new version go no go will look inside your cluster and tell you whether you've implemented",
    "start": "2255119",
    "end": "2260240"
  },
  {
    "text": "all the changes you need to make in order to safely upgrade to the new version",
    "start": "2260240",
    "end": "2265440"
  },
  {
    "text": "great and uh let's talk about a few third-party tools here um tribi opa",
    "start": "2265440",
    "end": "2272079"
  },
  {
    "text": "coupe bench you want to give the quick rundown of that robert yeah so trevi's a great tool for",
    "start": "2272079",
    "end": "2277520"
  },
  {
    "text": "container scanning it can look inside of containers and understand if there are",
    "start": "2277520",
    "end": "2284560"
  },
  {
    "text": "any known vulnerabilities inside of those containers by cross-checking them with a very large database of known",
    "start": "2284560",
    "end": "2290640"
  },
  {
    "text": "vulnerabilities uh so very powerful tool for container scanning um oppa is the next one in line here",
    "start": "2290640",
    "end": "2297520"
  },
  {
    "text": "uh oppa allows you to implement custom checks um so similar to polaris but even",
    "start": "2297520",
    "end": "2302720"
  },
  {
    "text": "a little bit more powerful it's it's really like a um not quite turing complete but a full-fledged programming",
    "start": "2302720",
    "end": "2308000"
  },
  {
    "text": "language for doing these kinds of checks um and this is great for uh if you have you know very special",
    "start": "2308000",
    "end": "2314079"
  },
  {
    "text": "uh custom needs in terms of uh you know making sure that every workload has a particular label set like maybe you want",
    "start": "2314079",
    "end": "2319920"
  },
  {
    "text": "a cost center code label on everything you know things that are very specific to your organization can be implemented",
    "start": "2319920",
    "end": "2325040"
  },
  {
    "text": "as opa checks and then last we have cube bench here which will look inside of a cluster and",
    "start": "2325040",
    "end": "2331680"
  },
  {
    "text": "help you understand how well it conforms to the sysbenchmark for kubernetes which is a set of guidelines for how to",
    "start": "2331680",
    "end": "2338160"
  },
  {
    "text": "configure particularly the control plane of a kubernetes cluster so if you're managing your own control plane coupe bench is a",
    "start": "2338160",
    "end": "2344640"
  },
  {
    "text": "great way to understand how secure that configuration is and what you might need to do to really get that security",
    "start": "2344640",
    "end": "2350640"
  },
  {
    "text": "profile tightened up great and finally uh we do just want to give a quick plug",
    "start": "2350640",
    "end": "2356640"
  },
  {
    "text": "i mentioned in passing fairwinds insights but um this is for kubernetes governance putting guard rails around",
    "start": "2356640",
    "end": "2362960"
  },
  {
    "text": "the ways that people are deploying things into kubernetes from ci cd through to production write policy once",
    "start": "2362960",
    "end": "2368079"
  },
  {
    "text": "enforce it everywhere we cover security cost optimization policy and guard rails it includes",
    "start": "2368079",
    "end": "2374960"
  },
  {
    "text": "polaris goldilocks trivia coop bench oppa and a few more as well so if you need an",
    "start": "2374960",
    "end": "2381359"
  },
  {
    "text": "all-in-one solution that's going to make it easy to operationalize policy enforcement in kubernetes across your organization check out fairwinds",
    "start": "2381359",
    "end": "2387599"
  },
  {
    "text": "insights and finally we're going to wrap up with go check out a white paper we have for common kubernetes",
    "start": "2387599",
    "end": "2393520"
  },
  {
    "text": "misconfigurations where we cover these topics um kubernetes the good the bad and the",
    "start": "2393520",
    "end": "2398560"
  },
  {
    "text": "misconfigured so we have a white paper on that and probably uh where",
    "start": "2398560",
    "end": "2404160"
  },
  {
    "text": "this is published so thanks so much for being with us we're gonna wrap up to hit that 40 minute time and",
    "start": "2404160",
    "end": "2410400"
  },
  {
    "text": "we will hopefully see you another time thanks",
    "start": "2410400",
    "end": "2415200"
  },
  {
    "text": "and [Music]",
    "start": "2416480",
    "end": "2420499"
  }
]