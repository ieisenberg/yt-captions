[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "hello and welcome to the cortex",
    "start": "160",
    "end": "3360"
  },
  {
    "text": "maintainer session let's",
    "start": "3360",
    "end": "6560"
  },
  {
    "text": "introduce ourselves first of all uh you",
    "start": "6560",
    "end": "9280"
  },
  {
    "text": "got",
    "start": "9280",
    "end": "10000"
  },
  {
    "text": "myself brian borum i work for weaveworks",
    "start": "10000",
    "end": "14400"
  },
  {
    "text": "i'm a maintainer of two cncf projects",
    "start": "14400",
    "end": "17840"
  },
  {
    "text": "cortex and cni and work on a bunch of",
    "start": "17840",
    "end": "20160"
  },
  {
    "text": "other ones weave net etc",
    "start": "20160",
    "end": "22880"
  },
  {
    "text": "uh one of my hobbies flying and i",
    "start": "22880",
    "end": "26560"
  },
  {
    "text": "i put dislikes out of memory errors i",
    "start": "26560",
    "end": "29519"
  },
  {
    "text": "hate those",
    "start": "29519",
    "end": "30720"
  },
  {
    "text": "jacob hi i'm jacob leacy i'm a software",
    "start": "30720",
    "end": "33920"
  },
  {
    "text": "engineer at grafana labs i'm just a",
    "start": "33920",
    "end": "35440"
  },
  {
    "text": "beginner on the",
    "start": "35440",
    "end": "36160"
  },
  {
    "text": "cortex project my main",
    "start": "36160",
    "end": "39520"
  },
  {
    "text": "likes is low latency and i dislike",
    "start": "39520",
    "end": "42840"
  },
  {
    "text": "cardinality",
    "start": "42840",
    "end": "44960"
  },
  {
    "text": "um so we're gonna uh give you",
    "start": "44960",
    "end": "48160"
  },
  {
    "start": "45000",
    "end": "287000"
  },
  {
    "text": "a little overview of the cortex project",
    "start": "48160",
    "end": "51520"
  },
  {
    "text": "uh some news bring us up to date gonna",
    "start": "51520",
    "end": "54239"
  },
  {
    "text": "do a demo",
    "start": "54239",
    "end": "55039"
  },
  {
    "text": "of a recent feature and talk about the",
    "start": "55039",
    "end": "57440"
  },
  {
    "text": "roadmap forward",
    "start": "57440",
    "end": "59039"
  },
  {
    "text": "and we've left plenty of time for",
    "start": "59039",
    "end": "60800"
  },
  {
    "text": "questions so if you're watching this",
    "start": "60800",
    "end": "62079"
  },
  {
    "text": "live",
    "start": "62079",
    "end": "64320"
  },
  {
    "text": "type them in to the box on your screen",
    "start": "64320",
    "end": "66799"
  },
  {
    "text": "and we'll get to them",
    "start": "66799",
    "end": "68080"
  },
  {
    "text": "at the end of the video",
    "start": "68080",
    "end": "73840"
  },
  {
    "text": "okay what is cortex uh it is a store for",
    "start": "75439",
    "end": "79360"
  },
  {
    "text": "metrics by which we mean some quantity",
    "start": "79360",
    "end": "82240"
  },
  {
    "text": "that changes over time",
    "start": "82240",
    "end": "84479"
  },
  {
    "text": "cortex is scalable to",
    "start": "84479",
    "end": "88240"
  },
  {
    "text": "millions tens of millions of metrics",
    "start": "88240",
    "end": "91600"
  },
  {
    "text": "highly available and durable it'll store",
    "start": "91600",
    "end": "94159"
  },
  {
    "text": "your data",
    "start": "94159",
    "end": "94880"
  },
  {
    "text": "for a long time it's a centralized",
    "start": "94880",
    "end": "98159"
  },
  {
    "text": "system can be used by many teams or",
    "start": "98159",
    "end": "100320"
  },
  {
    "text": "users",
    "start": "100320",
    "end": "101119"
  },
  {
    "text": "we call this a multi-tenant system",
    "start": "101119",
    "end": "104320"
  },
  {
    "text": "um and it does take quite a bit of work",
    "start": "104320",
    "end": "107840"
  },
  {
    "text": "to set up and configure",
    "start": "107840",
    "end": "109600"
  },
  {
    "text": "so if you don't really need the scale",
    "start": "109600",
    "end": "112000"
  },
  {
    "text": "you don't need the multi-tenant",
    "start": "112000",
    "end": "114000"
  },
  {
    "text": "setup then it might be that something",
    "start": "114000",
    "end": "116960"
  },
  {
    "text": "like prometheus which cortex is based on",
    "start": "116960",
    "end": "119680"
  },
  {
    "text": "is a more suitable tool but um",
    "start": "119680",
    "end": "123040"
  },
  {
    "text": "listen along and you'll see how it works",
    "start": "123040",
    "end": "124880"
  },
  {
    "text": "and you'll be able to see whether it",
    "start": "124880",
    "end": "126640"
  },
  {
    "text": "might be good for you",
    "start": "126640",
    "end": "129840"
  },
  {
    "text": "so this is the big picture um we have",
    "start": "130319",
    "end": "133520"
  },
  {
    "text": "prometheus",
    "start": "133520",
    "end": "134560"
  },
  {
    "text": "on here on the left three just",
    "start": "134560",
    "end": "137360"
  },
  {
    "text": "illustrating",
    "start": "137360",
    "end": "138560"
  },
  {
    "text": "uh like you could have three different",
    "start": "138560",
    "end": "140800"
  },
  {
    "text": "teams or three different",
    "start": "140800",
    "end": "142000"
  },
  {
    "text": "customers of a system",
    "start": "142000",
    "end": "145120"
  },
  {
    "text": "prometheus is gathering data from",
    "start": "145120",
    "end": "148080"
  },
  {
    "text": "different sources",
    "start": "148080",
    "end": "150319"
  },
  {
    "text": "so those are your application programs",
    "start": "150319",
    "end": "153280"
  },
  {
    "text": "or",
    "start": "153280",
    "end": "153760"
  },
  {
    "text": "exporters from the os things like that",
    "start": "153760",
    "end": "156800"
  },
  {
    "text": "gathers the data and it sends it up to",
    "start": "156800",
    "end": "159280"
  },
  {
    "text": "cortex",
    "start": "159280",
    "end": "161040"
  },
  {
    "text": "cortex then stores the data and makes it",
    "start": "161040",
    "end": "163200"
  },
  {
    "text": "available for querying",
    "start": "163200",
    "end": "164959"
  },
  {
    "text": "for instance in dashboards",
    "start": "164959",
    "end": "168239"
  },
  {
    "text": "let's drill into that a little bit more",
    "start": "169519",
    "end": "172480"
  },
  {
    "text": "um",
    "start": "172480",
    "end": "173120"
  },
  {
    "text": "the data arrives at cortex and goes",
    "start": "173120",
    "end": "175200"
  },
  {
    "text": "through a process called the distributor",
    "start": "175200",
    "end": "177840"
  },
  {
    "text": "and the function of that is so that we",
    "start": "177840",
    "end": "179680"
  },
  {
    "text": "can scale",
    "start": "179680",
    "end": "181599"
  },
  {
    "text": "we will distribute the incoming data",
    "start": "181599",
    "end": "184319"
  },
  {
    "text": "across",
    "start": "184319",
    "end": "185040"
  },
  {
    "text": "as many ingestor processes as you need",
    "start": "185040",
    "end": "188879"
  },
  {
    "text": "so you can run a handful of these you",
    "start": "188879",
    "end": "191840"
  },
  {
    "text": "could run",
    "start": "191840",
    "end": "193040"
  },
  {
    "text": "20 you could run 100 and",
    "start": "193040",
    "end": "196720"
  },
  {
    "text": "each one can store a few million",
    "start": "196720",
    "end": "199760"
  },
  {
    "text": "series depending on how big your",
    "start": "199760",
    "end": "201519"
  },
  {
    "text": "machines are",
    "start": "201519",
    "end": "203360"
  },
  {
    "text": "and what the ingester does is it it",
    "start": "203360",
    "end": "205920"
  },
  {
    "text": "captures the",
    "start": "205920",
    "end": "206720"
  },
  {
    "text": "the metrics that are coming in",
    "start": "206720",
    "end": "208480"
  },
  {
    "text": "compresses them",
    "start": "208480",
    "end": "209920"
  },
  {
    "text": "and eventually sends them off to the",
    "start": "209920",
    "end": "211360"
  },
  {
    "text": "store",
    "start": "211360",
    "end": "213519"
  },
  {
    "text": "from the store we have a querier process",
    "start": "213519",
    "end": "216000"
  },
  {
    "text": "and again that can be scaled",
    "start": "216000",
    "end": "218159"
  },
  {
    "text": "every single part of cortex can be",
    "start": "218159",
    "end": "220000"
  },
  {
    "text": "scaled horizontally",
    "start": "220000",
    "end": "221519"
  },
  {
    "text": "to cope with more data more users",
    "start": "221519",
    "end": "224720"
  },
  {
    "text": "and the querier is what makes the data",
    "start": "224720",
    "end": "227519"
  },
  {
    "text": "available to",
    "start": "227519",
    "end": "229120"
  },
  {
    "text": "dashboards and so forth",
    "start": "229120",
    "end": "232480"
  },
  {
    "text": "cortex is multi-tenant and by that",
    "start": "234080",
    "end": "237280"
  },
  {
    "text": "what we mean is the data all the way",
    "start": "237280",
    "end": "240239"
  },
  {
    "text": "through the system is",
    "start": "240239",
    "end": "241200"
  },
  {
    "text": "is tagged with who it belongs to where",
    "start": "241200",
    "end": "243599"
  },
  {
    "text": "it came from",
    "start": "243599",
    "end": "245040"
  },
  {
    "text": "so if these three prometheus on the left",
    "start": "245040",
    "end": "247840"
  },
  {
    "text": "are three different customers",
    "start": "247840",
    "end": "250400"
  },
  {
    "text": "then we tag the data as it comes in",
    "start": "250400",
    "end": "254239"
  },
  {
    "text": "we spread it out across different",
    "start": "254239",
    "end": "256400"
  },
  {
    "text": "ingestors",
    "start": "256400",
    "end": "257359"
  },
  {
    "text": "depending on where it came from and we",
    "start": "257359",
    "end": "260160"
  },
  {
    "text": "hold it",
    "start": "260160",
    "end": "260880"
  },
  {
    "text": "tagged with that identity in the store",
    "start": "260880",
    "end": "263440"
  },
  {
    "text": "so it always has",
    "start": "263440",
    "end": "264880"
  },
  {
    "text": "its identity it's its tenant id",
    "start": "264880",
    "end": "268400"
  },
  {
    "text": "and that means when you come to query it",
    "start": "268400",
    "end": "271199"
  },
  {
    "text": "you will get the data just for that one",
    "start": "271199",
    "end": "273280"
  },
  {
    "text": "tenant that's",
    "start": "273280",
    "end": "274320"
  },
  {
    "text": "why we we stress um it's really good for",
    "start": "274320",
    "end": "277360"
  },
  {
    "text": "those situations where the the data is",
    "start": "277360",
    "end": "279440"
  },
  {
    "text": "separate",
    "start": "279440",
    "end": "280320"
  },
  {
    "text": "amongst different customers different",
    "start": "280320",
    "end": "281840"
  },
  {
    "text": "teams they just want to see their own",
    "start": "281840",
    "end": "283759"
  },
  {
    "text": "data",
    "start": "283759",
    "end": "286160"
  },
  {
    "start": "287000",
    "end": "598000"
  },
  {
    "text": "okay and that's cortex in a nutshell i'm",
    "start": "288240",
    "end": "291520"
  },
  {
    "text": "going to hand over to jacob now for",
    "start": "291520",
    "end": "293759"
  },
  {
    "text": "an update hey everybody",
    "start": "293759",
    "end": "297520"
  },
  {
    "text": "so let's go over some updates on the",
    "start": "297520",
    "end": "299040"
  },
  {
    "text": "project in just a basic timeline of the",
    "start": "299040",
    "end": "301120"
  },
  {
    "text": "project since when it started",
    "start": "301120",
    "end": "303039"
  },
  {
    "text": "it was originally founded in june 2016",
    "start": "303039",
    "end": "305120"
  },
  {
    "text": "at weaveworks by tom wilke and julius",
    "start": "305120",
    "end": "306800"
  },
  {
    "text": "falls",
    "start": "306800",
    "end": "307680"
  },
  {
    "text": "it became a cncf sandbox project in",
    "start": "307680",
    "end": "309680"
  },
  {
    "text": "september of 2018",
    "start": "309680",
    "end": "311280"
  },
  {
    "text": "then as of last april released our 1.0",
    "start": "311280",
    "end": "313280"
  },
  {
    "text": "version and then later",
    "start": "313280",
    "end": "314880"
  },
  {
    "text": "last august we became a cncf incubation",
    "start": "314880",
    "end": "317199"
  },
  {
    "text": "project",
    "start": "317199",
    "end": "318240"
  },
  {
    "text": "so there are a number of organizations",
    "start": "318240",
    "end": "319600"
  },
  {
    "text": "that are adopting or have adopted cortex",
    "start": "319600",
    "end": "322080"
  },
  {
    "text": "you can see from this list you may",
    "start": "322080",
    "end": "323280"
  },
  {
    "text": "recognize some of these names of current",
    "start": "323280",
    "end": "325199"
  },
  {
    "text": "or",
    "start": "325199",
    "end": "325520"
  },
  {
    "text": "past cortex users the ones highlighted",
    "start": "325520",
    "end": "327600"
  },
  {
    "text": "in yellow are new users since the",
    "start": "327600",
    "end": "329199"
  },
  {
    "text": "previous kubecon",
    "start": "329199",
    "end": "331520"
  },
  {
    "text": "in terms of contributing to cortex we",
    "start": "331520",
    "end": "332880"
  },
  {
    "text": "have a hundred people who have",
    "start": "332880",
    "end": "333840"
  },
  {
    "text": "contributed in the past hopefully we can",
    "start": "333840",
    "end": "335600"
  },
  {
    "text": "get that a bit higher so we can say we",
    "start": "335600",
    "end": "337039"
  },
  {
    "text": "have hundreds of contributors",
    "start": "337039",
    "end": "338880"
  },
  {
    "text": "we have seven maintainers across three",
    "start": "338880",
    "end": "340639"
  },
  {
    "text": "different companies and our workflow is",
    "start": "340639",
    "end": "342400"
  },
  {
    "text": "mainly driven through github",
    "start": "342400",
    "end": "343840"
  },
  {
    "text": "specifically github issues github prs",
    "start": "343840",
    "end": "345919"
  },
  {
    "text": "pretty standard there",
    "start": "345919",
    "end": "347120"
  },
  {
    "text": "in terms of larger features we do have a",
    "start": "347120",
    "end": "350160"
  },
  {
    "text": "proposal system where you create a",
    "start": "350160",
    "end": "352160"
  },
  {
    "text": "proposal using a markdown document and",
    "start": "352160",
    "end": "353840"
  },
  {
    "text": "then do a pr against the main github",
    "start": "353840",
    "end": "356160"
  },
  {
    "text": "cortex repository we do a community call",
    "start": "356160",
    "end": "359039"
  },
  {
    "text": "once every three weeks and",
    "start": "359039",
    "end": "360560"
  },
  {
    "text": "on the same cadence we also do a bug",
    "start": "360560",
    "end": "362240"
  },
  {
    "text": "scrub call usually among the maintainers",
    "start": "362240",
    "end": "363919"
  },
  {
    "text": "to help",
    "start": "363919",
    "end": "364479"
  },
  {
    "text": "keep the issue backlog manageable",
    "start": "364479",
    "end": "367840"
  },
  {
    "text": "we are looking to grow our community",
    "start": "367840",
    "end": "370080"
  },
  {
    "text": "please if you are interested join our",
    "start": "370080",
    "end": "371919"
  },
  {
    "text": "the cncf slack go to the cortex channel",
    "start": "371919",
    "end": "373840"
  },
  {
    "text": "say hi",
    "start": "373840",
    "end": "374560"
  },
  {
    "text": "if you want to contribute you don't",
    "start": "374560",
    "end": "376160"
  },
  {
    "text": "necessarily have to start with",
    "start": "376160",
    "end": "377759"
  },
  {
    "text": "go code you can start with docs or the",
    "start": "377759",
    "end": "380479"
  },
  {
    "text": "helm chart for instance if you want to",
    "start": "380479",
    "end": "382000"
  },
  {
    "text": "work on the go",
    "start": "382000",
    "end": "382639"
  },
  {
    "text": "code also feel free we're looking for",
    "start": "382639",
    "end": "384160"
  },
  {
    "text": "contributors there as well",
    "start": "384160",
    "end": "386479"
  },
  {
    "text": "if you're interested in learning more",
    "start": "386479",
    "end": "387759"
  },
  {
    "text": "about the cortex community i highly",
    "start": "387759",
    "end": "389039"
  },
  {
    "text": "recommend you go see gotham's talk this",
    "start": "389039",
    "end": "390639"
  },
  {
    "text": "thursday on the cortex community story",
    "start": "390639",
    "end": "394240"
  },
  {
    "text": "in terms of project news so we've",
    "start": "394240",
    "end": "395759"
  },
  {
    "text": "implemented a number of items on our",
    "start": "395759",
    "end": "397199"
  },
  {
    "text": "roadmap",
    "start": "397199",
    "end": "397919"
  },
  {
    "text": "specifically per tenant retention so",
    "start": "397919",
    "end": "399600"
  },
  {
    "text": "this is basically deciding",
    "start": "399600",
    "end": "401520"
  },
  {
    "text": "how long you want to keep data points",
    "start": "401520",
    "end": "403360"
  },
  {
    "text": "for each specific tenant",
    "start": "403360",
    "end": "405039"
  },
  {
    "text": "queries over multiple tenants which i'm",
    "start": "405039",
    "end": "406639"
  },
  {
    "text": "going to show you a demo of a bit later",
    "start": "406639",
    "end": "408560"
  },
  {
    "text": "bulk loading data from prometheus so",
    "start": "408560",
    "end": "410240"
  },
  {
    "text": "taking your blocks from your prometheus",
    "start": "410240",
    "end": "411840"
  },
  {
    "text": "node and uploading them to an object",
    "start": "411840",
    "end": "413120"
  },
  {
    "text": "storage system for cortex to use",
    "start": "413120",
    "end": "415280"
  },
  {
    "text": "and then horizontally scalable alert",
    "start": "415280",
    "end": "417280"
  },
  {
    "text": "manager so this is basically the alert",
    "start": "417280",
    "end": "418800"
  },
  {
    "text": "manager",
    "start": "418800",
    "end": "420560"
  },
  {
    "text": "component of cortex is now scalable in a",
    "start": "420560",
    "end": "422560"
  },
  {
    "text": "horizontal manner whereas previously",
    "start": "422560",
    "end": "424479"
  },
  {
    "text": "horizontally scaling it didn't actually",
    "start": "424479",
    "end": "426000"
  },
  {
    "text": "have that much of an effect it was",
    "start": "426000",
    "end": "427199"
  },
  {
    "text": "mainly just for h.a",
    "start": "427199",
    "end": "429360"
  },
  {
    "text": "some items that we implemented that",
    "start": "429360",
    "end": "430639"
  },
  {
    "text": "weren't on the roadmap i should note",
    "start": "430639",
    "end": "432000"
  },
  {
    "text": "shuffle sharing and if you want to learn",
    "start": "432000",
    "end": "433440"
  },
  {
    "text": "more about that you should go see",
    "start": "433440",
    "end": "434560"
  },
  {
    "text": "tomstock on friday but it's a really",
    "start": "434560",
    "end": "436160"
  },
  {
    "text": "powerful way of distributing load and",
    "start": "436160",
    "end": "437919"
  },
  {
    "text": "distributed system and",
    "start": "437919",
    "end": "439280"
  },
  {
    "text": "basically managing capacity and noisy",
    "start": "439280",
    "end": "441280"
  },
  {
    "text": "neighbor problems",
    "start": "441280",
    "end": "442639"
  },
  {
    "text": "the other thing we also implemented is",
    "start": "442639",
    "end": "444080"
  },
  {
    "text": "pertain query statistics so you have a",
    "start": "444080",
    "end": "445599"
  },
  {
    "text": "better idea of which one of your tenants",
    "start": "445599",
    "end": "447520"
  },
  {
    "text": "is",
    "start": "447520",
    "end": "448080"
  },
  {
    "text": "driving those really heavy queries and",
    "start": "448080",
    "end": "449759"
  },
  {
    "text": "putting a lot of pressure on the system",
    "start": "449759",
    "end": "453039"
  },
  {
    "text": "so block storage is now live this has",
    "start": "453039",
    "end": "455280"
  },
  {
    "text": "been going on for a while now on the",
    "start": "455280",
    "end": "456479"
  },
  {
    "text": "cortex project where we've basically",
    "start": "456479",
    "end": "458319"
  },
  {
    "text": "migrated the way you store data from",
    "start": "458319",
    "end": "460160"
  },
  {
    "text": "using a nosql backend to an object",
    "start": "460160",
    "end": "462400"
  },
  {
    "text": "storage backend",
    "start": "462400",
    "end": "464080"
  },
  {
    "text": "so as a project we do we now recommend",
    "start": "464080",
    "end": "466639"
  },
  {
    "text": "block storage as the primary way of",
    "start": "466639",
    "end": "468479"
  },
  {
    "text": "using cortex we no longer recommend the",
    "start": "468479",
    "end": "470160"
  },
  {
    "text": "chunks back end",
    "start": "470160",
    "end": "471520"
  },
  {
    "text": "why well it uses the prometheus native",
    "start": "471520",
    "end": "474000"
  },
  {
    "text": "tsd code format so it standardizes",
    "start": "474000",
    "end": "476080"
  },
  {
    "text": "across the ecosystem and allows us to",
    "start": "476080",
    "end": "477840"
  },
  {
    "text": "reuse code from prometheus and thanos",
    "start": "477840",
    "end": "480479"
  },
  {
    "text": "also object storage is generally cheaper",
    "start": "480479",
    "end": "483120"
  },
  {
    "text": "or easier to use than nosql",
    "start": "483120",
    "end": "485280"
  },
  {
    "text": "it's definitely cheaper from commodity",
    "start": "485280",
    "end": "487120"
  },
  {
    "text": "offerings in terms of running on prem",
    "start": "487120",
    "end": "489280"
  },
  {
    "text": "that you would have to run your own tco",
    "start": "489280",
    "end": "490960"
  },
  {
    "text": "calculations but we found it to be",
    "start": "490960",
    "end": "492639"
  },
  {
    "text": "more cost effective broadly and then",
    "start": "492639",
    "end": "495759"
  },
  {
    "text": "the third thing we should mention is",
    "start": "495759",
    "end": "496960"
  },
  {
    "text": "that it is a bit faster on the read path",
    "start": "496960",
    "end": "498720"
  },
  {
    "text": "especially for",
    "start": "498720",
    "end": "500000"
  },
  {
    "text": "pretty standard rate queries it also is",
    "start": "500000",
    "end": "501919"
  },
  {
    "text": "a bit more expansive in terms of",
    "start": "501919",
    "end": "503680"
  },
  {
    "text": "its prompt ql compatibility because you",
    "start": "503680",
    "end": "505440"
  },
  {
    "text": "can now do anonymous name queries",
    "start": "505440",
    "end": "507680"
  },
  {
    "text": "so some next steps there are some limits",
    "start": "507680",
    "end": "509599"
  },
  {
    "text": "that we had in chunks that we haven't",
    "start": "509599",
    "end": "510800"
  },
  {
    "text": "ported over to blocks yet",
    "start": "510800",
    "end": "512719"
  },
  {
    "text": "the main thing i'm thinking of is the",
    "start": "512719",
    "end": "513919"
  },
  {
    "text": "number of actual discrete samples per",
    "start": "513919",
    "end": "515919"
  },
  {
    "text": "quarry",
    "start": "515919",
    "end": "516640"
  },
  {
    "text": "being able to limit that on a per tenant",
    "start": "516640",
    "end": "518080"
  },
  {
    "text": "basis was pretty useful in chunks we",
    "start": "518080",
    "end": "519919"
  },
  {
    "text": "can't do that currently in blocks but we",
    "start": "519919",
    "end": "521440"
  },
  {
    "text": "are going to look",
    "start": "521440",
    "end": "522080"
  },
  {
    "text": "to implementing that in the near term",
    "start": "522080",
    "end": "524560"
  },
  {
    "text": "the other",
    "start": "524560",
    "end": "525360"
  },
  {
    "text": "major limitation with blocks is that it",
    "start": "525360",
    "end": "527760"
  },
  {
    "text": "isn't as good at",
    "start": "527760",
    "end": "529040"
  },
  {
    "text": "retain at ingesting data that's old",
    "start": "529040",
    "end": "532320"
  },
  {
    "text": "so blocks are caught on a two-hour time",
    "start": "532320",
    "end": "534640"
  },
  {
    "text": "frame and",
    "start": "534640",
    "end": "535360"
  },
  {
    "text": "if you go beyond that it's a bit",
    "start": "535360",
    "end": "537040"
  },
  {
    "text": "wishy-washy but after a certain point",
    "start": "537040",
    "end": "538880"
  },
  {
    "text": "it's very difficult to actually write",
    "start": "538880",
    "end": "540320"
  },
  {
    "text": "data to blocks you have to upload it",
    "start": "540320",
    "end": "542160"
  },
  {
    "text": "using a backfill mechanism if you don't",
    "start": "542160",
    "end": "544320"
  },
  {
    "text": "get it we did in within",
    "start": "544320",
    "end": "546399"
  },
  {
    "text": "about an hour and a half of when it was",
    "start": "546399",
    "end": "548160"
  },
  {
    "text": "first created",
    "start": "548160",
    "end": "551519"
  },
  {
    "text": "so let's talk about multi-tenant queries",
    "start": "551839",
    "end": "554880"
  },
  {
    "text": "this feature landed in 1.70 cortex it",
    "start": "554880",
    "end": "557440"
  },
  {
    "text": "was implemented by",
    "start": "557440",
    "end": "558959"
  },
  {
    "text": "a co-worker of mine christian christian",
    "start": "558959",
    "end": "561120"
  },
  {
    "text": "simon so",
    "start": "561120",
    "end": "562640"
  },
  {
    "text": "if you are interested in this feature be",
    "start": "562640",
    "end": "564480"
  },
  {
    "text": "sure to thank him",
    "start": "564480",
    "end": "566000"
  },
  {
    "text": "so the way this works is we've talked",
    "start": "566000",
    "end": "568320"
  },
  {
    "text": "about how",
    "start": "568320",
    "end": "569120"
  },
  {
    "text": "tenants are basically isolated",
    "start": "569120",
    "end": "572320"
  },
  {
    "text": "databases within cortex so you can have",
    "start": "572320",
    "end": "575200"
  },
  {
    "text": "a prom ql",
    "start": "575200",
    "end": "576000"
  },
  {
    "text": "database for multiple tenants and the",
    "start": "576000",
    "end": "578399"
  },
  {
    "text": "data between those tenants is isolated",
    "start": "578399",
    "end": "579839"
  },
  {
    "text": "from one another this allows you to have",
    "start": "579839",
    "end": "581440"
  },
  {
    "text": "different users in your organization",
    "start": "581440",
    "end": "583040"
  },
  {
    "text": "have different sets of data that are",
    "start": "583040",
    "end": "584240"
  },
  {
    "text": "relevant to them",
    "start": "584240",
    "end": "585600"
  },
  {
    "text": "however there's times where you want to",
    "start": "585600",
    "end": "587040"
  },
  {
    "text": "get a global view of data within",
    "start": "587040",
    "end": "588640"
  },
  {
    "text": "multiple tenants",
    "start": "588640",
    "end": "590000"
  },
  {
    "text": "this is what multi-tenant queries let",
    "start": "590000",
    "end": "591440"
  },
  {
    "text": "you do essentially query multiple",
    "start": "591440",
    "end": "593360"
  },
  {
    "text": "tenants as if they were a single",
    "start": "593360",
    "end": "594560"
  },
  {
    "text": "promptql data source",
    "start": "594560",
    "end": "597680"
  },
  {
    "start": "598000",
    "end": "859000"
  },
  {
    "text": "so let's actually see what this looks",
    "start": "598080",
    "end": "599600"
  },
  {
    "text": "like in practice",
    "start": "599600",
    "end": "605839"
  },
  {
    "text": "so this is my grafana instance let's",
    "start": "606160",
    "end": "608720"
  },
  {
    "text": "take a look at some of the data sources",
    "start": "608720",
    "end": "610160"
  },
  {
    "text": "currently configured to it",
    "start": "610160",
    "end": "611839"
  },
  {
    "text": "so we have three data sources team brian",
    "start": "611839",
    "end": "613920"
  },
  {
    "text": "team jacob and then team brian plus team",
    "start": "613920",
    "end": "616000"
  },
  {
    "text": "jacob",
    "start": "616000",
    "end": "617040"
  },
  {
    "text": "underneath the hood team brian is",
    "start": "617040",
    "end": "619600"
  },
  {
    "text": "basically just",
    "start": "619600",
    "end": "620640"
  },
  {
    "text": "a grafana data source pointing at a",
    "start": "620640",
    "end": "622560"
  },
  {
    "text": "cortex instance running on my local",
    "start": "622560",
    "end": "624640"
  },
  {
    "text": "the slash prometheus endpoint so this",
    "start": "624640",
    "end": "627279"
  },
  {
    "text": "denotes a prometheus",
    "start": "627279",
    "end": "628640"
  },
  {
    "text": "api is underneath this endpoint and a",
    "start": "628640",
    "end": "631360"
  },
  {
    "text": "custom header",
    "start": "631360",
    "end": "632079"
  },
  {
    "text": "set x scope or d this is how a tenant is",
    "start": "632079",
    "end": "634399"
  },
  {
    "text": "referred to in cortex",
    "start": "634399",
    "end": "635760"
  },
  {
    "text": "the value for this is obfuscated by",
    "start": "635760",
    "end": "637440"
  },
  {
    "text": "default in grafana but",
    "start": "637440",
    "end": "639040"
  },
  {
    "text": "it's essentially set to team brian so if",
    "start": "639040",
    "end": "641120"
  },
  {
    "text": "i copy and paste this",
    "start": "641120",
    "end": "642480"
  },
  {
    "text": "it should be the same value",
    "start": "642480",
    "end": "645519"
  },
  {
    "text": "team jacob is set up pretty much the",
    "start": "645680",
    "end": "647360"
  },
  {
    "text": "same",
    "start": "647360",
    "end": "649040"
  },
  {
    "text": "so let's take a look at what those data",
    "start": "649040",
    "end": "651040"
  },
  {
    "text": "sources look like",
    "start": "651040",
    "end": "653839"
  },
  {
    "text": "check out the up metric which you may be",
    "start": "654560",
    "end": "656560"
  },
  {
    "text": "familiar with if you use prometheus",
    "start": "656560",
    "end": "660480"
  },
  {
    "text": "so we have three series in the team",
    "start": "660480",
    "end": "663519"
  },
  {
    "text": "brian data source we have",
    "start": "663519",
    "end": "665120"
  },
  {
    "text": "an up metric for the prometheus job the",
    "start": "665120",
    "end": "668160"
  },
  {
    "text": "cortex job and the minion job",
    "start": "668160",
    "end": "669680"
  },
  {
    "text": "looks like they're all doing fine let's",
    "start": "669680",
    "end": "671120"
  },
  {
    "text": "check out team jacob for the same query",
    "start": "671120",
    "end": "674000"
  },
  {
    "text": "so we have two series one for grafana",
    "start": "674000",
    "end": "676240"
  },
  {
    "text": "and one for agent which",
    "start": "676240",
    "end": "677360"
  },
  {
    "text": "is the grafana cloud agent basically",
    "start": "677360",
    "end": "679440"
  },
  {
    "text": "just a",
    "start": "679440",
    "end": "680560"
  },
  {
    "text": "scrape and right version of prometheus",
    "start": "680560",
    "end": "682959"
  },
  {
    "text": "without the time series database built",
    "start": "682959",
    "end": "684560"
  },
  {
    "text": "then",
    "start": "684560",
    "end": "685600"
  },
  {
    "text": "so let's take a look at this team brian",
    "start": "685600",
    "end": "688079"
  },
  {
    "text": "plus team jacob data source",
    "start": "688079",
    "end": "690480"
  },
  {
    "text": "again the header is obfuscated but let's",
    "start": "690480",
    "end": "693120"
  },
  {
    "text": "just",
    "start": "693120",
    "end": "693680"
  },
  {
    "text": "show you what this would look like so",
    "start": "693680",
    "end": "695920"
  },
  {
    "text": "it's the same as before team brian",
    "start": "695920",
    "end": "698240"
  },
  {
    "text": "and team jacob but they're separated",
    "start": "698240",
    "end": "699920"
  },
  {
    "text": "with a pipe operator",
    "start": "699920",
    "end": "703839"
  },
  {
    "text": "so we set that header value there and",
    "start": "704720",
    "end": "707040"
  },
  {
    "text": "let's go take a look at the team brian",
    "start": "707040",
    "end": "708640"
  },
  {
    "text": "plus team jacob instance",
    "start": "708640",
    "end": "711600"
  },
  {
    "text": "same metric up as before and now you can",
    "start": "711600",
    "end": "713839"
  },
  {
    "text": "see all of the up series between the two",
    "start": "713839",
    "end": "716480"
  },
  {
    "text": "instances you see the team brian",
    "start": "716480",
    "end": "720079"
  },
  {
    "text": "series here and the team jacob series",
    "start": "720079",
    "end": "721600"
  },
  {
    "text": "here so these are stored in separate",
    "start": "721600",
    "end": "723360"
  },
  {
    "text": "tenants but we're able to view them as",
    "start": "723360",
    "end": "724800"
  },
  {
    "text": "one consolidated query",
    "start": "724800",
    "end": "727200"
  },
  {
    "text": "again the way one of the ways this works",
    "start": "727200",
    "end": "728720"
  },
  {
    "text": "is we basically take",
    "start": "728720",
    "end": "730560"
  },
  {
    "text": "the tenant id and turn it into its own",
    "start": "730560",
    "end": "732880"
  },
  {
    "text": "label selector and you can actually use",
    "start": "732880",
    "end": "734560"
  },
  {
    "text": "this",
    "start": "734560",
    "end": "734880"
  },
  {
    "text": "label selector in your query so if we",
    "start": "734880",
    "end": "736480"
  },
  {
    "text": "were to do count up",
    "start": "736480",
    "end": "738880"
  },
  {
    "text": "i send an id we would see that",
    "start": "738880",
    "end": "743040"
  },
  {
    "text": "team brian has three series for up and",
    "start": "743040",
    "end": "746160"
  },
  {
    "text": "team jacob has two",
    "start": "746160",
    "end": "748240"
  },
  {
    "text": "as you can see this is just a really",
    "start": "748240",
    "end": "749680"
  },
  {
    "text": "powerful way of courting across multiple",
    "start": "749680",
    "end": "751680"
  },
  {
    "text": "tenants",
    "start": "751680",
    "end": "752959"
  },
  {
    "text": "and if you want to expose tenants as a",
    "start": "752959",
    "end": "755600"
  },
  {
    "text": "way of",
    "start": "755600",
    "end": "756480"
  },
  {
    "text": "delivering a prometheus database by",
    "start": "756480",
    "end": "758480"
  },
  {
    "text": "isolating data for your users",
    "start": "758480",
    "end": "760320"
  },
  {
    "text": "but then still have that global view",
    "start": "760320",
    "end": "762000"
  },
  {
    "text": "this lets you do that in a really",
    "start": "762000",
    "end": "763680"
  },
  {
    "text": "seamless way",
    "start": "763680",
    "end": "766480"
  },
  {
    "text": "so that was a bit of a contrived example",
    "start": "767760",
    "end": "769680"
  },
  {
    "text": "in the explore tab",
    "start": "769680",
    "end": "770800"
  },
  {
    "text": "let's see what this would look like in a",
    "start": "770800",
    "end": "772160"
  },
  {
    "text": "dashboard",
    "start": "772160",
    "end": "774720"
  },
  {
    "text": "so i have this go processes dashboard it",
    "start": "775839",
    "end": "778639"
  },
  {
    "text": "has two variables up at the top",
    "start": "778639",
    "end": "780560"
  },
  {
    "text": "tenant you can see team brian and team",
    "start": "780560",
    "end": "782320"
  },
  {
    "text": "jacob and job so we can see all of the",
    "start": "782320",
    "end": "784639"
  },
  {
    "text": "applications",
    "start": "784639",
    "end": "785360"
  },
  {
    "text": "we saw on the previous screen this is a",
    "start": "785360",
    "end": "787440"
  },
  {
    "text": "bit of a contrived example each of these",
    "start": "787440",
    "end": "789360"
  },
  {
    "text": "dashboards is an aggregation of all of",
    "start": "789360",
    "end": "791120"
  },
  {
    "text": "the jobs",
    "start": "791120",
    "end": "792240"
  },
  {
    "text": "and if we change some of these drop-down",
    "start": "792240",
    "end": "793839"
  },
  {
    "text": "values we'll start to see some of these",
    "start": "793839",
    "end": "795360"
  },
  {
    "text": "graphs change a bit",
    "start": "795360",
    "end": "796880"
  },
  {
    "text": "so if we just select prometheus you can",
    "start": "796880",
    "end": "799120"
  },
  {
    "text": "see the graphs changed a bit and this is",
    "start": "799120",
    "end": "801279"
  },
  {
    "text": "the",
    "start": "801279",
    "end": "801600"
  },
  {
    "text": "memory usage of prometheus and the mems",
    "start": "801600",
    "end": "804240"
  },
  {
    "text": "that's a prometheus generally",
    "start": "804240",
    "end": "806079"
  },
  {
    "text": "if we were to change it back to cortex",
    "start": "806079",
    "end": "809760"
  },
  {
    "text": "we see just the cortex values so what",
    "start": "810399",
    "end": "812399"
  },
  {
    "text": "happens if we change",
    "start": "812399",
    "end": "813760"
  },
  {
    "text": "the tenant value in the drop down to",
    "start": "813760",
    "end": "815440"
  },
  {
    "text": "team jacob",
    "start": "815440",
    "end": "818160"
  },
  {
    "text": "so now we're left with the selection of",
    "start": "818320",
    "end": "820720"
  },
  {
    "text": "agent and grafana",
    "start": "820720",
    "end": "823680"
  },
  {
    "text": "and you can see here if we just select",
    "start": "824399",
    "end": "826839"
  },
  {
    "text": "rafana",
    "start": "826839",
    "end": "828720"
  },
  {
    "text": "the variables change you can already get",
    "start": "828720",
    "end": "831199"
  },
  {
    "text": "a sense that",
    "start": "831199",
    "end": "832160"
  },
  {
    "text": "what multi-tenant queries allow you to",
    "start": "832160",
    "end": "834240"
  },
  {
    "text": "do is have",
    "start": "834240",
    "end": "835199"
  },
  {
    "text": "dashboards that are specific to specific",
    "start": "835199",
    "end": "837120"
  },
  {
    "text": "teams and data sources that are useful",
    "start": "837120",
    "end": "838800"
  },
  {
    "text": "for specific teams",
    "start": "838800",
    "end": "840160"
  },
  {
    "text": "but then still get that global view",
    "start": "840160",
    "end": "843120"
  },
  {
    "text": "across the board if you need it",
    "start": "843120",
    "end": "845440"
  },
  {
    "text": "again it's it's definitely an",
    "start": "845440",
    "end": "846800"
  },
  {
    "text": "organizational tool that you can use if",
    "start": "846800",
    "end": "848480"
  },
  {
    "text": "you're interested with cortex",
    "start": "848480",
    "end": "851440"
  },
  {
    "text": "so at this point let's jump back to our",
    "start": "851440",
    "end": "853120"
  },
  {
    "text": "slides and see if",
    "start": "853120",
    "end": "854639"
  },
  {
    "text": "there's a few more things we can touch",
    "start": "854639",
    "end": "856000"
  },
  {
    "text": "up on before we end the presentation",
    "start": "856000",
    "end": "858959"
  },
  {
    "text": "so now that we've seen this demo let's",
    "start": "858959",
    "end": "860800"
  },
  {
    "text": "talk about some challenges to the future",
    "start": "860800",
    "end": "862240"
  },
  {
    "text": "of the project",
    "start": "862240",
    "end": "863360"
  },
  {
    "text": "so cortex has multiple interconnected",
    "start": "863360",
    "end": "865680"
  },
  {
    "text": "services it requires a significant",
    "start": "865680",
    "end": "867519"
  },
  {
    "text": "amount of tuning and balancing and",
    "start": "867519",
    "end": "869279"
  },
  {
    "text": "the tooling is a bit early stage or",
    "start": "869279",
    "end": "870959"
  },
  {
    "text": "focused on specific use cases for",
    "start": "870959",
    "end": "872720"
  },
  {
    "text": "instance the jsonnet library is very",
    "start": "872720",
    "end": "874399"
  },
  {
    "text": "mature but it focuses on the",
    "start": "874399",
    "end": "875600"
  },
  {
    "text": "microservices use case",
    "start": "875600",
    "end": "878000"
  },
  {
    "text": "we are looking to improve the usability",
    "start": "878000",
    "end": "880240"
  },
  {
    "text": "of cortex from this perspective and make",
    "start": "880240",
    "end": "881760"
  },
  {
    "text": "it easier to use simpler deployments",
    "start": "881760",
    "end": "884639"
  },
  {
    "text": "as a new user not have to move straight",
    "start": "884639",
    "end": "886480"
  },
  {
    "text": "to a deployment that",
    "start": "886480",
    "end": "888079"
  },
  {
    "text": "checks all the boxes and dots all the",
    "start": "888079",
    "end": "889760"
  },
  {
    "text": "eyes once you have this in place there's",
    "start": "889760",
    "end": "892240"
  },
  {
    "text": "nothing stopping you from scaling",
    "start": "892240",
    "end": "893839"
  },
  {
    "text": "further moving towards a more complex",
    "start": "893839",
    "end": "895440"
  },
  {
    "text": "deployment but it's just getting to that",
    "start": "895440",
    "end": "897040"
  },
  {
    "text": "initial easy deployment",
    "start": "897040",
    "end": "898720"
  },
  {
    "text": "something we're going to focus on in the",
    "start": "898720",
    "end": "899839"
  },
  {
    "text": "near future in terms of",
    "start": "899839",
    "end": "901839"
  },
  {
    "text": "feature development some things on the",
    "start": "901839",
    "end": "903600"
  },
  {
    "text": "roadmap include exemplars",
    "start": "903600",
    "end": "905519"
  },
  {
    "text": "so this is being worked on in upstream",
    "start": "905519",
    "end": "907360"
  },
  {
    "text": "prometheus it's essentially a way of",
    "start": "907360",
    "end": "909040"
  },
  {
    "text": "taking",
    "start": "909040",
    "end": "910079"
  },
  {
    "text": "observations or data points recorded by",
    "start": "910079",
    "end": "912959"
  },
  {
    "text": "your prometheus instrumentation and",
    "start": "912959",
    "end": "914320"
  },
  {
    "text": "associating them with trace ids",
    "start": "914320",
    "end": "915920"
  },
  {
    "text": "so if you have a high latency query",
    "start": "915920",
    "end": "917760"
  },
  {
    "text": "request that's instrumented in logs in",
    "start": "917760",
    "end": "920000"
  },
  {
    "text": "prometheus",
    "start": "920000",
    "end": "921120"
  },
  {
    "text": "you can later take that metric and then",
    "start": "921120",
    "end": "923440"
  },
  {
    "text": "look up an actual trace id of a high",
    "start": "923440",
    "end": "925199"
  },
  {
    "text": "latency request",
    "start": "925199",
    "end": "926880"
  },
  {
    "text": "the other thing working on is improved",
    "start": "926880",
    "end": "928160"
  },
  {
    "text": "scalability this is going to be pretty",
    "start": "928160",
    "end": "929920"
  },
  {
    "text": "much a constant with the project we",
    "start": "929920",
    "end": "931360"
  },
  {
    "text": "always want to push more active series",
    "start": "931360",
    "end": "933199"
  },
  {
    "text": "higher ingestion rate higher quarters",
    "start": "933199",
    "end": "934880"
  },
  {
    "text": "per second",
    "start": "934880",
    "end": "935680"
  },
  {
    "text": "it's just something we want to do as a",
    "start": "935680",
    "end": "936959"
  },
  {
    "text": "distributed time series database",
    "start": "936959",
    "end": "940000"
  },
  {
    "text": "then in terms of tooling and packaging",
    "start": "940000",
    "end": "941839"
  },
  {
    "text": "we have a helm chart we have a jsonnet",
    "start": "941839",
    "end": "943759"
  },
  {
    "text": "library",
    "start": "943759",
    "end": "944959"
  },
  {
    "text": "fleshing those out making them a bit",
    "start": "944959",
    "end": "946480"
  },
  {
    "text": "more powerful and expansive",
    "start": "946480",
    "end": "948079"
  },
  {
    "text": "and encompassing the single binary use",
    "start": "948079",
    "end": "949920"
  },
  {
    "text": "case for instance that's something we're",
    "start": "949920",
    "end": "951680"
  },
  {
    "text": "looking to do",
    "start": "951680",
    "end": "952560"
  },
  {
    "text": "just make those those libraries a bit",
    "start": "952560",
    "end": "954320"
  },
  {
    "text": "more consumable so that new users can",
    "start": "954320",
    "end": "955920"
  },
  {
    "text": "get started with the project more easily",
    "start": "955920",
    "end": "958160"
  },
  {
    "text": "so if anyone has any questions feel free",
    "start": "958160",
    "end": "960240"
  },
  {
    "text": "to ask me and brian would be happy to",
    "start": "960240",
    "end": "962079"
  },
  {
    "text": "answer",
    "start": "962079",
    "end": "962880"
  },
  {
    "text": "you may also be interested in joining",
    "start": "962880",
    "end": "964399"
  },
  {
    "text": "the cortex office hours this",
    "start": "964399",
    "end": "966000"
  },
  {
    "text": "tomorrow at 11 15 or the community story",
    "start": "966000",
    "end": "969680"
  },
  {
    "text": "session by gotham or the shuffle sharing",
    "start": "969680",
    "end": "971279"
  },
  {
    "text": "session by tom",
    "start": "971279",
    "end": "972560"
  },
  {
    "text": "but uh hope you guys enjoyed the talk",
    "start": "972560",
    "end": "975199"
  },
  {
    "text": "and",
    "start": "975199",
    "end": "975759"
  },
  {
    "text": "happy to hear any questions you might",
    "start": "975759",
    "end": "977079"
  },
  {
    "text": "have",
    "start": "977079",
    "end": "980079"
  }
]