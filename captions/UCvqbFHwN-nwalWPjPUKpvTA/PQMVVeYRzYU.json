[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "off we go i want to thank everyone for joining us welcome to today's cncf live webinar",
    "start": "960",
    "end": "7680"
  },
  {
    "text": "how we manage thousands of clusters with minimal efforts using gardner i'm libby schultz and i'll be moderating",
    "start": "7680",
    "end": "13920"
  },
  {
    "text": "today's webinar i want to introduce our speakers today smarth a software engineer and hardik a",
    "start": "13920",
    "end": "19439"
  },
  {
    "text": "software developer both at sap a few housekeeping items before we get started during the webinar",
    "start": "19439",
    "end": "25599"
  },
  {
    "text": "you're not able to speak as an attendee there is a chat box on the right hand side of your screen",
    "start": "25599",
    "end": "31199"
  },
  {
    "text": "please feel free to drop your questions there and we'll get to as many as we can at the end or throughout just depending on our flow",
    "start": "31199",
    "end": "38879"
  },
  {
    "text": "in addition please join our cncf public slack channel hashtag cncf",
    "start": "38879",
    "end": "44280"
  },
  {
    "text": "cncf-online-programs to continue the conversation later and address any questions you had we didn't get to",
    "start": "44280",
    "end": "50239"
  },
  {
    "text": "this is an official webinar of the cncf and as such is subject to the cncf code of conduct",
    "start": "50239",
    "end": "55920"
  },
  {
    "text": "please do not add any questions that would be in violation of that code of conduct and please be",
    "start": "55920",
    "end": "61280"
  },
  {
    "text": "respectful to all of your fellow participants and presenters please also note that the recording and",
    "start": "61280",
    "end": "66960"
  },
  {
    "text": "slides will be posted later today to the cncf online programs page",
    "start": "66960",
    "end": "72000"
  },
  {
    "text": "at community.cncf.io under under online programs they're also available",
    "start": "72000",
    "end": "78159"
  },
  {
    "text": "via your registration link and the recording will also be available on our online programs youtube playlist",
    "start": "78159",
    "end": "84880"
  },
  {
    "text": "on the cncf channel with that i will hand it over to our speakers to kick off today's presentation",
    "start": "84880",
    "end": "91280"
  },
  {
    "text": "thanks so much",
    "start": "91280",
    "end": "94079"
  },
  {
    "text": "thank you libby so um thanks a lot everyone first of all",
    "start": "97920",
    "end": "105840"
  },
  {
    "start": "100000",
    "end": "140000"
  },
  {
    "text": "joining and um let me first of all introduce myself so um i'm hardik i'm a software",
    "start": "105840",
    "end": "111920"
  },
  {
    "text": "developer developer on gardener on metal um previously i was working on gardner mainly the machine management and auto",
    "start": "111920",
    "end": "118240"
  },
  {
    "text": "scaling of corner and otherwise i am also once in a while active in the cluster api community and",
    "start": "118240",
    "end": "124960"
  },
  {
    "text": "the auto scaling community in general hello everyone thanks for tuning in this",
    "start": "124960",
    "end": "130479"
  },
  {
    "text": "is samartha deyeganda i am a developer at gardener and i primarily work on a component called",
    "start": "130479",
    "end": "136319"
  },
  {
    "text": "machine controller manager okay so let's get started first of all",
    "start": "136319",
    "end": "143680"
  },
  {
    "start": "140000",
    "end": "230000"
  },
  {
    "text": "the first thing first what's the motivation so um the webinar is actually of course about card uh and a",
    "start": "143680",
    "end": "152560"
  },
  {
    "text": "brief about it so it's basically an open source initiative by sap it's basically a fully managed control",
    "start": "152560",
    "end": "159040"
  },
  {
    "text": "plane as a service that offers homogeneous clusters potentially on any cloud provider and is fully",
    "start": "159040",
    "end": "164879"
  },
  {
    "text": "customizable and scalable and we have been thousands of clusters for real since recently",
    "start": "164879",
    "end": "170400"
  },
  {
    "text": "and this webinar is about giving a glimpse around what and why and how and we will",
    "start": "170400",
    "end": "177280"
  },
  {
    "text": "basically be doing something interesting yes so managing thousands of kubernetes",
    "start": "177280",
    "end": "183040"
  },
  {
    "text": "clusters at scale is not a cakewalk and over these three to four years",
    "start": "183040",
    "end": "188480"
  },
  {
    "text": "gardener has evolved to be so robust and scalable that we have actually made managing thousands",
    "start": "188480",
    "end": "194879"
  },
  {
    "text": "of clusters a cakewalk so gardener primarily runs everywhere it runs on our own",
    "start": "194879",
    "end": "200800"
  },
  {
    "text": "infrastructure it also runs on other cloud providers and the experience that it gives",
    "start": "200800",
    "end": "206560"
  },
  {
    "text": "with respect to the versions or the features offered is pretty homogeneous even though the support is for various",
    "start": "206560",
    "end": "212560"
  },
  {
    "text": "cloud and even our own infrastructure it is also fully automated and fully managed",
    "start": "212560",
    "end": "217920"
  },
  {
    "text": "practically with zero manual ops and it is highly scalable even beyond a single cluster and it is",
    "start": "217920",
    "end": "225200"
  },
  {
    "text": "highly customizable that is we have given all the configuration knobs for your conveniences",
    "start": "225200",
    "end": "232560"
  },
  {
    "start": "230000",
    "end": "295000"
  },
  {
    "text": "yes and um to communicate the idea a bit more effectively this is what we are going to do so we",
    "start": "233599",
    "end": "239120"
  },
  {
    "text": "are going to host um a hypothetical highly consumable once in a minute instead of an application",
    "start": "239120",
    "end": "245760"
  },
  {
    "text": "it's going we are going to call it the botanist waste on a platform which would really need something as",
    "start": "245760",
    "end": "252239"
  },
  {
    "text": "droppost is called so we will be assuming kind of our roles",
    "start": "252239",
    "end": "257280"
  },
  {
    "text": "and we will do the role play where hardik will be the founder of this application he spoke about",
    "start": "257280",
    "end": "262960"
  },
  {
    "text": "the botanist quest which is hypothetical and i will be the product manager for this",
    "start": "262960",
    "end": "268000"
  },
  {
    "text": "modernist quest and this webinar is basically going to be you know a set of arguments and",
    "start": "268000",
    "end": "274240"
  },
  {
    "text": "brainstorming between us to design this gardener from scratch",
    "start": "274240",
    "end": "279520"
  },
  {
    "text": "and convince you that such a robust platform is practically possible to exist for",
    "start": "279520",
    "end": "285440"
  },
  {
    "text": "applications like botanist quest and or for also other critical applications of yours that needs such a platform with",
    "start": "285440",
    "end": "293120"
  },
  {
    "text": "the foresight features let's get started then thank you so",
    "start": "293120",
    "end": "299040"
  },
  {
    "start": "295000",
    "end": "365000"
  },
  {
    "text": "hey summer um shall we then start planning on taking photonic squeeze to the new heights already",
    "start": "299040",
    "end": "305440"
  },
  {
    "text": "hello hardik yes that's why i'm here what do you have so far so this is what i have i have i have got",
    "start": "305440",
    "end": "312560"
  },
  {
    "text": "one very nice kubernetes cluster with three dedicated control plane machines",
    "start": "312560",
    "end": "318080"
  },
  {
    "text": "and it's basically serving a bunch of beta users and i have got a really good feedback already for the application",
    "start": "318080",
    "end": "324000"
  },
  {
    "text": "and we are going to launch the jungle release very soon and then our initial set of or the",
    "start": "324000",
    "end": "329759"
  },
  {
    "text": "target new users would be around 500 or so pretty good and how does the platform",
    "start": "329759",
    "end": "337199"
  },
  {
    "text": "look like today so on essay we have a beta app and",
    "start": "337199",
    "end": "342800"
  },
  {
    "text": "that's hosted on one cluster and the plan is that we simply scale this cluster",
    "start": "342800",
    "end": "348400"
  },
  {
    "text": "to file so we would have basically five clusters with dedicated control plane machines and all of them would basically be",
    "start": "348400",
    "end": "355360"
  },
  {
    "text": "hosting the pattern is quest in high india hybrid model they would also be running on different cloud",
    "start": "355360",
    "end": "360639"
  },
  {
    "text": "providers and yeah that's the situation at the moment that is",
    "start": "360639",
    "end": "367759"
  },
  {
    "start": "365000",
    "end": "465000"
  },
  {
    "text": "good but five dedicated clusters might not be enough scaling because as",
    "start": "367759",
    "end": "374560"
  },
  {
    "text": "per my research botanist quest is having a lot of traction in the market and",
    "start": "374560",
    "end": "379759"
  },
  {
    "text": "i see something similar to pokemon go might potentially happen with botanist quest too that is",
    "start": "379759",
    "end": "386479"
  },
  {
    "text": "you might have planned for an expected influx of a 5x in the worst case but your traffic",
    "start": "386479",
    "end": "392080"
  },
  {
    "text": "might hit 250x which happened with the pokemon go right so you might have to have the scaling",
    "start": "392080",
    "end": "397600"
  },
  {
    "text": "done massively and across geographical locations um you said about multi-cloud so are you",
    "start": "397600",
    "end": "404639"
  },
  {
    "text": "planning to take the managed clusters across different cloud providers",
    "start": "404639",
    "end": "410080"
  },
  {
    "text": "because if you are doing so probably there won't be a homogeneous experience",
    "start": "410080",
    "end": "416960"
  },
  {
    "text": "when it comes to managing the clusters and also the transparency of the control plane i doubt if we would get that",
    "start": "416960",
    "end": "423199"
  },
  {
    "text": "and also i want you to employ our own infrastructure that we have at different locations so",
    "start": "423199",
    "end": "428960"
  },
  {
    "text": "can you align the strategy something in this regard yeah yeah i get it i get",
    "start": "428960",
    "end": "434800"
  },
  {
    "text": "it so basically i my team is then going to replicate the installation we would have",
    "start": "434800",
    "end": "441440"
  },
  {
    "text": "30 kubernetes clusters we'll use this awesome foo bar tool that we have been using it will be multi cloud yes and all of",
    "start": "441440",
    "end": "448080"
  },
  {
    "text": "them will also have three dedicated control plane machines again so it will be super reliable",
    "start": "448080",
    "end": "453120"
  },
  {
    "text": "and i think it should work like a charm i said um what i would also do is basically put",
    "start": "453120",
    "end": "458160"
  },
  {
    "text": "each of or divide the clusters across different regions so that the customers in different regions are better served",
    "start": "458160",
    "end": "465199"
  },
  {
    "text": "and that should i think be good enough yeah that does look good but 30 clusters with",
    "start": "465199",
    "end": "473360"
  },
  {
    "text": "three dedicated control plane nodes for each cluster doesn't really is as cool as it appears",
    "start": "473360",
    "end": "480160"
  },
  {
    "text": "to be you know why the first reason is that the control plane nodes are never fully",
    "start": "480160",
    "end": "486400"
  },
  {
    "text": "utilized they are always under utilized so let's say for 30 clusters you will end up having 90 control plane",
    "start": "486400",
    "end": "492720"
  },
  {
    "text": "nodes and these will only incur your cost faster than your team scaling up your clusters and",
    "start": "492720",
    "end": "499280"
  },
  {
    "text": "not just that have you even considered about the operational complexities that your team might face what if some",
    "start": "499280",
    "end": "505840"
  },
  {
    "text": "cluster goes into volume mount issues some cluster has an api unreachable issue and some other cluster has some other",
    "start": "505840",
    "end": "512240"
  },
  {
    "text": "issue and if these things start happening simultaneously then the team will go heavier",
    "start": "512240",
    "end": "517440"
  },
  {
    "text": "and more than that how have you planned to manage the tracking of these clusters for their config files and cloud",
    "start": "517440",
    "end": "524080"
  },
  {
    "text": "credentials etc manually managing 30 plus clusters that with a dedicated control plane nodes",
    "start": "524080",
    "end": "531040"
  },
  {
    "text": "is probably not how a cloud provider or a software as a service should operate so to summarize what i",
    "start": "531040",
    "end": "538720"
  },
  {
    "text": "just said with the proposed solution of having 30 clusters with dedicated control nodes",
    "start": "538720",
    "end": "543839"
  },
  {
    "text": "for each cluster the excessive under utilized control machines will only incur cost",
    "start": "543839",
    "end": "549360"
  },
  {
    "text": "there will be operational complexities as well as cluster management complexities",
    "start": "549360",
    "end": "555600"
  },
  {
    "start": "555000",
    "end": "680000"
  },
  {
    "text": "um yeah those are actually good points and let's take a first look i would say",
    "start": "556160",
    "end": "563200"
  },
  {
    "text": "the kubernetes or let's let's let's ponder upon what we already know so first of all we know that the",
    "start": "563200",
    "end": "569920"
  },
  {
    "text": "dedicated control plane machines are usually underutilized in most of the setups as you see um second point that is very well known",
    "start": "569920",
    "end": "577760"
  },
  {
    "text": "also the beauty of the kubernetes is that the both the control plane and the workload are somehow decoupled so they can they",
    "start": "577760",
    "end": "584800"
  },
  {
    "text": "don't really necessarily has to run always together and the third and the more important point is basically the control plane",
    "start": "584800",
    "end": "590959"
  },
  {
    "text": "components themselves are actually a full-fledged workload applications they are",
    "start": "590959",
    "end": "597440"
  },
  {
    "text": "they can be probably be treated as the workload themselves um okay so what can we actually infer",
    "start": "597440",
    "end": "604800"
  },
  {
    "text": "from this information and maybe innovate to address your concerns",
    "start": "604800",
    "end": "610800"
  },
  {
    "text": "maybe we can experiment treating the control plane of the kubernetes yet another",
    "start": "610800",
    "end": "616240"
  },
  {
    "text": "workload or or maybe we actually host the workload we maybe we actually host this workload",
    "start": "616240",
    "end": "623040"
  },
  {
    "text": "on some other kubernetes cluster so we basically do kubernetes inside the kubernetes what do you think about that wow so so",
    "start": "623040",
    "end": "629680"
  },
  {
    "text": "you basically want to migrate the control plane of these clusters as workload onto another cluster though",
    "start": "629680",
    "end": "635680"
  },
  {
    "text": "this essentially is kubernetes inside kubernetes isn't this like cubeception",
    "start": "635680",
    "end": "641920"
  },
  {
    "text": "um yes it is the chip section and and so in order to improve the resource",
    "start": "641920",
    "end": "647120"
  },
  {
    "text": "utilization of the controller plane nodes i think we will spawn one kubernetes cluster manually and then we'll call it",
    "start": "647120",
    "end": "652480"
  },
  {
    "text": "a management cluster and then we do we basically use that management cluster to host",
    "start": "652480",
    "end": "658000"
  },
  {
    "text": "the control plane of other clusters so for the visualization this is what is what you see on the screen is uh is what",
    "start": "658000",
    "end": "664959"
  },
  {
    "text": "i would like to propose so we have clusters across different locations and we simply move the contour planes as a",
    "start": "664959",
    "end": "670000"
  },
  {
    "text": "containerized applications into a single nice management cluster and uh yeah that's what",
    "start": "670000",
    "end": "678000"
  },
  {
    "text": "is sounds like a good idea to me as of now and this looks good maybe i want to take",
    "start": "678000",
    "end": "684480"
  },
  {
    "start": "680000",
    "end": "750000"
  },
  {
    "text": "a closer look into the management cluster can you take me around it yeah sure so let's take a let's double",
    "start": "684480",
    "end": "691920"
  },
  {
    "text": "down and let's take a bit closer look so essentially the control plane of each let's call",
    "start": "691920",
    "end": "698560"
  },
  {
    "text": "them child cluster would basically have their own dedicated name species so that's first level of",
    "start": "698560",
    "end": "703839"
  },
  {
    "text": "isolation of course we don't want them to mess up with each other so we can also isolate them using the network policies",
    "start": "703839",
    "end": "710720"
  },
  {
    "text": "so that would be the baseline idea and then another thing which i would really want",
    "start": "710720",
    "end": "716800"
  },
  {
    "text": "to consider is that we really use kubernetes here and not invent the pre-inventor bill so i",
    "start": "716800",
    "end": "723440"
  },
  {
    "text": "would use deployments and stateful sets and such battle tested inbuilt controllers to deploy the api",
    "start": "723440",
    "end": "730560"
  },
  {
    "text": "server lcd cube scheduler and and components like that and this",
    "start": "730560",
    "end": "735600"
  },
  {
    "text": "this essentially should actually reduce the blast radius by effectively having to manage only one",
    "start": "735600",
    "end": "742160"
  },
  {
    "text": "management cluster against 30 clusters as it was in the previous case oh that's that appears to be pretty",
    "start": "742160",
    "end": "750720"
  },
  {
    "text": "efficient but uh but i think it only addresses the cost issue right where the excessive under",
    "start": "750720",
    "end": "757839"
  },
  {
    "text": "utilized control plane machines were rather migrated as workload onto",
    "start": "757839",
    "end": "763279"
  },
  {
    "text": "one single management cluster as workload but when it comes to life cycle of these control planes",
    "start": "763279",
    "end": "769120"
  },
  {
    "text": "and the life cycle of the underlying machines i think we are back to square one in my opinion uh you must take care of",
    "start": "769120",
    "end": "776000"
  },
  {
    "text": "the life cycle of these hosted control planes and the workload machines of the child cluster more efficiently because",
    "start": "776000",
    "end": "782720"
  },
  {
    "text": "uh the the traditional kubernetes is not having the domain knowledge which it might want to have to manage",
    "start": "782720",
    "end": "789680"
  },
  {
    "text": "these betters right um well agreed on that",
    "start": "789680",
    "end": "796800"
  },
  {
    "text": "um i think we are we are circling back to the main issue so let's again",
    "start": "796800",
    "end": "803200"
  },
  {
    "text": "step back and and look at it again so first of all um it rather actually looks like a",
    "start": "803200",
    "end": "810000"
  },
  {
    "text": "natural candidate for the controller or operator pattern so just to just to reiterate or remind so what an",
    "start": "810000",
    "end": "817680"
  },
  {
    "text": "operator is basically a go controller or tribunalist controller which also comes with",
    "start": "817680",
    "end": "823040"
  },
  {
    "text": "additional domain knowledge to manage its own resources and what we have here is basically abstracted control plane",
    "start": "823040",
    "end": "829600"
  },
  {
    "text": "as a pod as parts and what we could do is basically represent this control plane with the",
    "start": "829600",
    "end": "836160"
  },
  {
    "text": "dedicated crds so ins in essence",
    "start": "836160",
    "end": "841199"
  },
  {
    "text": "um let's let's do it this way so we have our control plane parts and then we we basically represent them",
    "start": "841199",
    "end": "848240"
  },
  {
    "text": "using the cluster crd this cluster crd would have all the knobs and necessary configuration",
    "start": "848240",
    "end": "854240"
  },
  {
    "text": "options that decides the whole life cycle of a given cluster and in a similar way this will help me",
    "start": "854240",
    "end": "860480"
  },
  {
    "text": "trigger the cluster of creations rollouts updates patching hypernation deletion and whatnot and",
    "start": "860480",
    "end": "866480"
  },
  {
    "text": "then but this should not be it in my opinion so on top of the cluster crt",
    "start": "866480",
    "end": "871920"
  },
  {
    "text": "we would also need to take care of another very important and very dynamic infrastructure component which is",
    "start": "871920",
    "end": "877120"
  },
  {
    "text": "basically workload machines so we can also introduce a crd for",
    "start": "877120",
    "end": "883680"
  },
  {
    "text": "machines and then it could look like a machine deployment machine set and",
    "start": "883680",
    "end": "890240"
  },
  {
    "text": "machines in a similar way there are deployment replica set and parts so the way a deployment controller",
    "start": "890240",
    "end": "898560"
  },
  {
    "text": "somehow always ensures that a certain number of replicas of the pod are always running and it does a very fine-grained",
    "start": "898560",
    "end": "905600"
  },
  {
    "text": "rolling updates of the pod we could also implement the similar similar functionalities for the machines",
    "start": "905600",
    "end": "911040"
  },
  {
    "text": "so we have machine deployment which would basically help us do the right kind of rolling updates and so on and and",
    "start": "911040",
    "end": "917120"
  },
  {
    "text": "yes with this kind of abstraction if you call it the machine api we get seamless auto scaling as well",
    "start": "917120",
    "end": "923680"
  },
  {
    "text": "because with such abstracted dedicated crts then the higher level um functionalities",
    "start": "923680",
    "end": "930639"
  },
  {
    "text": "or the higher level automations becomes really easy so just imagine cluster autoscaler making use of this",
    "start": "930639",
    "end": "935920"
  },
  {
    "text": "and we get free auto scaling for all cloud providers even parameters and so on",
    "start": "935920",
    "end": "940959"
  },
  {
    "text": "so this is me a lot that is that is that is really good so",
    "start": "940959",
    "end": "946000"
  },
  {
    "text": "so essentially you are telling that uh the machines and the clusters that we are trying to deal with will now be",
    "start": "946000",
    "end": "951519"
  },
  {
    "text": "treated as the first class citizens of kubernetes along with the cluster controller manager in place",
    "start": "951519",
    "end": "957680"
  },
  {
    "text": "yeah so and and here is also detailed visualization so so essentially uh we would also have the",
    "start": "957680",
    "end": "965120"
  },
  {
    "text": "cluster controller manager of course we would have a controller which would take care of both kinds of crts",
    "start": "965120",
    "end": "970480"
  },
  {
    "text": "and this controller would be running in the management controller management cluster and upon creation of",
    "start": "970480",
    "end": "975839"
  },
  {
    "text": "the cluster crd the control plane of the child cluster should be deployed first by the controller and then in turn the same",
    "start": "975839",
    "end": "981519"
  },
  {
    "text": "controller also deploys the machine crds so it basically pulls the information from the cluster's worker section and then",
    "start": "981519",
    "end": "988160"
  },
  {
    "text": "rest of the things are would basically be taken care of with the machine deployment nice enlightening so this design",
    "start": "988160",
    "end": "995519"
  },
  {
    "start": "995000",
    "end": "1370000"
  },
  {
    "text": "proposal looks good to me so shall we prototype it and maybe you can showcase a demo for me",
    "start": "995519",
    "end": "1002000"
  },
  {
    "text": "josh sure cool then let's move to the demo",
    "start": "1002000",
    "end": "1008079"
  },
  {
    "text": "okay you might be surprised but i already already prepared it i think i'm just too fast so um",
    "start": "1008079",
    "end": "1014320"
  },
  {
    "text": "let's look at the demo uh we have three terminals here two management clusters and one to my uh load cluster i wanna quickly see the",
    "start": "1014320",
    "end": "1020720"
  },
  {
    "text": "shoot so i'm gonna i'm going to call it a shoot because it's my cluster it's my bottomless twist so for the key",
    "start": "1020720",
    "end": "1027600"
  },
  {
    "text": "one shoot cluster which is called bqtemocncf i have i should have a dedicated",
    "start": "1027600",
    "end": "1034079"
  },
  {
    "text": "namespace the namespace which designates this",
    "start": "1034079",
    "end": "1040959"
  },
  {
    "text": "particular shoot cluster and i would expect that this name space hosts all of the control plane components that are necessary",
    "start": "1040959",
    "end": "1049120"
  },
  {
    "text": "got it let's take a look into it and we already see that here i have on top of the essential control plane",
    "start": "1049200",
    "end": "1055520"
  },
  {
    "text": "components like api server scheduler controller manager i also have few other controllers i have introduced something also for the",
    "start": "1055520",
    "end": "1062000"
  },
  {
    "text": "machine api a separate controller which we call machine controller manager and then also auto scaler as a separate controller on",
    "start": "1062000",
    "end": "1067760"
  },
  {
    "text": "top so autoscaler already talks to our machine api now and",
    "start": "1067760",
    "end": "1073840"
  },
  {
    "text": "let's also take a very quick look inside our cluster or shoot and it's let's take",
    "start": "1073840",
    "end": "1080720"
  },
  {
    "text": "a look at its spec so here um it's a glimpse uh",
    "start": "1080720",
    "end": "1087760"
  },
  {
    "text": "where we see that in the spec section we can already see there are multiple sections hibernation is one of my",
    "start": "1087760",
    "end": "1094000"
  },
  {
    "text": "favorite it saves so much cost for us we can also kind of configure all kind of cooperative related stuff",
    "start": "1094000",
    "end": "1099360"
  },
  {
    "text": "fully transparently via the spec and here we go and we see the worker section the worker",
    "start": "1099360",
    "end": "1106000"
  },
  {
    "text": "section is basically what we just discussed so based on the information that i gave here",
    "start": "1106000",
    "end": "1111120"
  },
  {
    "text": "i tell minimum is high three maximum is five i give a very fine grained um",
    "start": "1111120",
    "end": "1116880"
  },
  {
    "text": "information like max unavailable and max search which should be respected during rolling update and then this controller",
    "start": "1116880",
    "end": "1124320"
  },
  {
    "text": "basically fetches this information and prepares the right kind of machine deployments",
    "start": "1124320",
    "end": "1129600"
  },
  {
    "text": "let's take a look at what we have in terms of machine deployment machine set and machines",
    "start": "1129600",
    "end": "1135679"
  },
  {
    "text": "sure so um we see that we have a machine deployment with",
    "start": "1135679",
    "end": "1140720"
  },
  {
    "text": "three replicas and then representing one machine set with three replicas and then three actual machine objects okay nice",
    "start": "1140720",
    "end": "1148320"
  },
  {
    "text": "um let's also take a quick look inside the machine deployment spec and see what the api actually contains",
    "start": "1148320",
    "end": "1155760"
  },
  {
    "text": "here we see again for the consistency through replicas",
    "start": "1157120",
    "end": "1163840"
  },
  {
    "text": "this allows us to the rolling update it's also allows us to do the recreate strategy in case of rolling update it would",
    "start": "1163840",
    "end": "1168880"
  },
  {
    "text": "really delete the machines one by one the way the deployment controller does and we have a reference to the machine class and the node template",
    "start": "1168880",
    "end": "1175120"
  },
  {
    "text": "to sync to sync the labels and other metadata back to the node object back and forth node object and the",
    "start": "1175120",
    "end": "1180720"
  },
  {
    "text": "machine objects because essentially the machines are really dynamic",
    "start": "1180720",
    "end": "1186000"
  },
  {
    "text": "all right and um yeah what we could do more i think we",
    "start": "1186000",
    "end": "1191280"
  },
  {
    "text": "could quickly change because i claimed it should take",
    "start": "1191280",
    "end": "1197120"
  },
  {
    "text": "care of the life cycle let me actually make make a very small change",
    "start": "1197120",
    "end": "1203600"
  },
  {
    "text": "in the shoot so before that i would i would watch the machine deployments and i would also watch the nodes of my workload cluster so",
    "start": "1203600",
    "end": "1211200"
  },
  {
    "text": "three nodes designate the three machine objects that are there in my management cluster",
    "start": "1211200",
    "end": "1218240"
  },
  {
    "text": "and let's edit our shoot object or the cluster object and",
    "start": "1218840",
    "end": "1223919"
  },
  {
    "text": "here um i would make a small change what i would do is that i would change the machine types from",
    "start": "1223919",
    "end": "1230480"
  },
  {
    "text": "let's say x large to 2x large and",
    "start": "1230480",
    "end": "1235840"
  },
  {
    "text": "with with a minimal change and this is actually the power of the declarative approach with",
    "start": "1236559",
    "end": "1242559"
  },
  {
    "text": "once i make this change my controller which is running in the backend is going to reconcile this particular",
    "start": "1242559",
    "end": "1248720"
  },
  {
    "text": "chain form or it's going to update during the reconciliation it's going to update the",
    "start": "1248720",
    "end": "1254799"
  },
  {
    "text": "machine deployments machine sets and so on that there is a change in the worker section",
    "start": "1254799",
    "end": "1260159"
  },
  {
    "text": "where the promotions previously running were x large now they should be running on 2x large but the uh the catch or the magic is",
    "start": "1260159",
    "end": "1267360"
  },
  {
    "text": "that it should not be done abruptly because um we actually don't want to",
    "start": "1267360",
    "end": "1273440"
  },
  {
    "text": "handle only infrastructure here we also want to take care of the pods running on them so because i said makes unavailable was",
    "start": "1273440",
    "end": "1279840"
  },
  {
    "text": "zero and max search was one it created a new machine and it will actually wait for the new machine to",
    "start": "1279840",
    "end": "1286080"
  },
  {
    "text": "join until then it would not delete the machine from the previous",
    "start": "1286080",
    "end": "1291440"
  },
  {
    "text": "previous set of machines so one machine is in the pending state and it would wait till this new machine",
    "start": "1291440",
    "end": "1297520"
  },
  {
    "text": "joins and only after this new machine joins it would go ahead and delete one of the old machines",
    "start": "1297520",
    "end": "1303600"
  },
  {
    "text": "okay this this looks good so essentially every machine is backing the node object that is",
    "start": "1303600",
    "end": "1309760"
  },
  {
    "text": "actually uh attached or registered to the cluster correct yes that's true and the internal node",
    "start": "1309760",
    "end": "1316320"
  },
  {
    "text": "object is basically the virtual machine or the real machine and also one thing is that this this what we are",
    "start": "1316320",
    "end": "1322400"
  },
  {
    "text": "what we see here is infrastructure related stuff but if you would have a pod running on one of the machine and if",
    "start": "1322400",
    "end": "1328320"
  },
  {
    "text": "that part says um i have xyz pod sls that this",
    "start": "1328320",
    "end": "1333600"
  },
  {
    "text": "particular machine i am running on should not be deleted unless there is another replica or there are enough replicas then this",
    "start": "1333600",
    "end": "1339440"
  },
  {
    "text": "controller is smart enough or i would say this controller uses the drain feature in such a way",
    "start": "1339440",
    "end": "1344640"
  },
  {
    "text": "that such pod slas and disruption widgets are also very properly taken care of",
    "start": "1344640",
    "end": "1350159"
  },
  {
    "text": "and achieve with a bit of a fast forwarding in between we already have all the three brand new",
    "start": "1350159",
    "end": "1357840"
  },
  {
    "text": "nodes available placed one by one so that's what i have as a very at a very initial stage to",
    "start": "1357840",
    "end": "1365600"
  },
  {
    "text": "show you how do you like it this this already looks good to me so it is honoring the infrastructure sls as",
    "start": "1365600",
    "end": "1371919"
  },
  {
    "start": "1370000",
    "end": "1475000"
  },
  {
    "text": "well as it is also honoring the slas for the applications that are running as spots",
    "start": "1371919",
    "end": "1377360"
  },
  {
    "text": "within that infrastructure and this looks pretty good to me to see the infras being handled as uh custom",
    "start": "1377360",
    "end": "1384320"
  },
  {
    "text": "resource objects in a particular atp this this is really nice",
    "start": "1384320",
    "end": "1389840"
  },
  {
    "text": "okay uh this is all good but i see that all the control planes of these shoot that you call because you",
    "start": "1389840",
    "end": "1396320"
  },
  {
    "text": "are botanist quest all these shoot clusters control plane are sort of hosted on a single",
    "start": "1396320",
    "end": "1401360"
  },
  {
    "text": "management cluster as workload but the shoots are distributed across regions so i see a potential issue of",
    "start": "1401360",
    "end": "1408559"
  },
  {
    "text": "cross region latency here alongside this if i'm having one",
    "start": "1408559",
    "end": "1413840"
  },
  {
    "text": "management cluster let's say and this guy is hosting several control planes of several shoot",
    "start": "1413840",
    "end": "1420000"
  },
  {
    "text": "it should hit an upper limit correct that after certain number of clusters whole control planes hosted there",
    "start": "1420000",
    "end": "1426320"
  },
  {
    "text": "maybe it cannot accommodate more so you might want to scale the management cluster right so can you just explain me how",
    "start": "1426320",
    "end": "1432159"
  },
  {
    "text": "you're handling these two aspects um those are again good points and",
    "start": "1432159",
    "end": "1439600"
  },
  {
    "text": "honestly i see a very straightforward solution to this so um see we have one management cluster",
    "start": "1439600",
    "end": "1445919"
  },
  {
    "text": "and if if the latency is the problem then um we could simply replicate this",
    "start": "1445919",
    "end": "1452799"
  },
  {
    "text": "management cluster to the regions and that should basically solve the problem although it looks that we are having",
    "start": "1452799",
    "end": "1458240"
  },
  {
    "text": "instead of one management cluster we are having more management clusters but um uh all of them would basically be",
    "start": "1458240",
    "end": "1464080"
  },
  {
    "text": "auto scaled so each management cluster has the cluster or scalar which will make sure that they do not have excess number of",
    "start": "1464080",
    "end": "1469520"
  },
  {
    "text": "replicas excess number of worker machines with time okay okay uh if i have to rephrase what",
    "start": "1469520",
    "end": "1476640"
  },
  {
    "start": "1475000",
    "end": "1670000"
  },
  {
    "text": "you just told then we are going to replicate the management clusters and host the control planes of those",
    "start": "1476640",
    "end": "1482400"
  },
  {
    "text": "shoot in the geographic vicinity of the distributed management clusters correct",
    "start": "1482400",
    "end": "1488240"
  },
  {
    "text": "yes that's true good so this idea is nice so probably the cross",
    "start": "1488240",
    "end": "1494240"
  },
  {
    "text": "latence cross region latency is kind of handled here but with time you see with increasing",
    "start": "1494240",
    "end": "1501200"
  },
  {
    "text": "workloads with increasing number of shoot the density of shoot will increase and we might have to",
    "start": "1501200",
    "end": "1507679"
  },
  {
    "text": "scale the management clusters also in a pretty large number so how do you plan to",
    "start": "1507679",
    "end": "1514240"
  },
  {
    "text": "manage these management clusters so is there an elegant mechanism that you have already thought about",
    "start": "1514240",
    "end": "1521440"
  },
  {
    "text": "okay yeah that's also a valid argument and you already got me through entangled into it um i would say",
    "start": "1521440",
    "end": "1528960"
  },
  {
    "text": "i feel we are i don't want to pack i don't want to fall back to the square one so",
    "start": "1528960",
    "end": "1534320"
  },
  {
    "text": "let's take a look at it again from what we have discussed so far so what we had um you know phase one we",
    "start": "1534320",
    "end": "1542159"
  },
  {
    "text": "had a plenty of clusters with a dedicated control plane in one location and then we saw the problem that uh we",
    "start": "1542159",
    "end": "1549679"
  },
  {
    "text": "have a lot of resource being underutilized so we decided that we move a few clusters few of the clusters",
    "start": "1549679",
    "end": "1556799"
  },
  {
    "text": "different locations in different regions and this worked pretty well but again",
    "start": "1556799",
    "end": "1562080"
  },
  {
    "text": "um this this situation has its own um set of problems that again we have",
    "start": "1562080",
    "end": "1568320"
  },
  {
    "text": "plenty of control planes running at plenty of locations so we then um",
    "start": "1568320",
    "end": "1573360"
  },
  {
    "text": "say let's go to the phase two and introduce a management cluster so we said okay having plenty of",
    "start": "1573360",
    "end": "1579200"
  },
  {
    "text": "clusters is fine but let's move the control planes from them to one single management cluster and that solved the problem at certain",
    "start": "1579200",
    "end": "1585600"
  },
  {
    "text": "extent for us um but this again introduced the issue of the",
    "start": "1585600",
    "end": "1593200"
  },
  {
    "text": "latency so the latency is again a bit of a trouble so we replicate the",
    "start": "1593200",
    "end": "1598240"
  },
  {
    "text": "management clusters to the geographic vicinity so we moved all of the clusters to their",
    "start": "1598240",
    "end": "1603520"
  },
  {
    "text": "different regions this worked well but again we fell into the same problem that we have we could have actually possibly plenty",
    "start": "1603520",
    "end": "1610400"
  },
  {
    "text": "of management clusters so the way we had to manage plenty of shoot clusters we now also have to manage plenty of management clusters",
    "start": "1610400",
    "end": "1617039"
  },
  {
    "text": "um to be honest what um looking at the perception and you can looking at the",
    "start": "1617039",
    "end": "1622400"
  },
  {
    "text": "recursive approach i would go bold and introduce another cluster",
    "start": "1622400",
    "end": "1628159"
  },
  {
    "text": "let's call it a super management cluster and i would migrate the control plane of",
    "start": "1628159",
    "end": "1634720"
  },
  {
    "text": "these management clusters to this super management as the super management clusters workload",
    "start": "1634720",
    "end": "1640480"
  },
  {
    "text": "and to make our lives a bit more easier i would introduce another crd and let me",
    "start": "1640480",
    "end": "1646000"
  },
  {
    "text": "i'll call it a management cluster crt so essentially now i have a management cluster crd which takes care of my",
    "start": "1646000",
    "end": "1652320"
  },
  {
    "text": "management clusters and then i also have to shoot crds and machine crds so the machine crs can also be used for the management clusters in",
    "start": "1652320",
    "end": "1658880"
  },
  {
    "text": "general with because it's completely recursive and um our cluster controller manager runs at the top label at the super",
    "start": "1658880",
    "end": "1665600"
  },
  {
    "text": "management cluster okay okay i think this proposal is also",
    "start": "1665600",
    "end": "1671120"
  },
  {
    "start": "1670000",
    "end": "2042000"
  },
  {
    "text": "pretty good so uh if i understand this correctly then the cluster crd and the machine crd that",
    "start": "1671120",
    "end": "1676799"
  },
  {
    "text": "we were speaking about in the before slide so that cluster crd will now be a part of or it will be applied or created",
    "start": "1676799",
    "end": "1684320"
  },
  {
    "text": "in the super management cluster because the cluster controller manager is also running there and even",
    "start": "1684320",
    "end": "1690240"
  },
  {
    "text": "these super management clusters even these management clusters will be represent as management cluster",
    "start": "1690240",
    "end": "1695679"
  },
  {
    "text": "crd in our super management cluster correct yes that should i think solve the race",
    "start": "1695679",
    "end": "1701440"
  },
  {
    "text": "issue hopefully yes yep uh i think this looks like a sophisticated design",
    "start": "1701440",
    "end": "1707679"
  },
  {
    "text": "that kind of convinces me that we can now manage thousands of clusters so",
    "start": "1707679",
    "end": "1713120"
  },
  {
    "text": "to actually answer this question can we now already manage thousands of clusters probably we want to look at the flow of",
    "start": "1713120",
    "end": "1720320"
  },
  {
    "text": "adding one new cluster to this ecosystem and see if there are any unknown unknowns right",
    "start": "1720320",
    "end": "1726559"
  },
  {
    "text": "yeah certainly i would not be so quick to judge um let's let's take a quick look let's",
    "start": "1726559",
    "end": "1732399"
  },
  {
    "text": "let's see what we have so far and what we can do so currently we create a cluster object in a super management",
    "start": "1732399",
    "end": "1738960"
  },
  {
    "text": "cluster okay and that will be processed by the cluster controller manager then um we are manually assigning this",
    "start": "1738960",
    "end": "1744960"
  },
  {
    "text": "cluster to one of the management clusters okay that sounds fuzzy then the third step is basically",
    "start": "1744960",
    "end": "1750799"
  },
  {
    "text": "the cluster controller manager reconciles this cluster object and then it creates the control plane and in the dedicated name space that's",
    "start": "1750799",
    "end": "1757520"
  },
  {
    "text": "good and at the end the cluster controller manager of course takes care of the rest of the lifecycle of this control plane",
    "start": "1757520",
    "end": "1763600"
  },
  {
    "text": "in maintaining it um looking at this flow",
    "start": "1763600",
    "end": "1768880"
  },
  {
    "text": "do you also see what i see um here yeah so this there seems to be a",
    "start": "1768880",
    "end": "1775520"
  },
  {
    "text": "similarity between um what we do with the control plane i think kubernetes",
    "start": "1775520",
    "end": "1781279"
  },
  {
    "text": "actually does something very similar at a fundamental level with parts i would say",
    "start": "1781279",
    "end": "1787760"
  },
  {
    "text": "so then let's compare and find the design parity maybe we are yes i would actually",
    "start": "1787760",
    "end": "1796000"
  },
  {
    "text": "think that let's take a step back and let's let's look at the kubernetes what kubernetes does with the pods",
    "start": "1796000",
    "end": "1801200"
  },
  {
    "text": "so essentially we have a cube api server yes and then we have scheduler controller manager so",
    "start": "1801200",
    "end": "1807440"
  },
  {
    "text": "scheduler's job is actually although it's it's really important it's job in sense is to assign a node so it",
    "start": "1807440",
    "end": "1813760"
  },
  {
    "text": "would just update the node name field on the pod and that's job q controller manager of course takes care",
    "start": "1813760",
    "end": "1819200"
  },
  {
    "text": "of certain other life cycle aspects um i also know that there is cubelet on each of",
    "start": "1819200",
    "end": "1824880"
  },
  {
    "text": "the nodes so the so when a pod is introduced it's assigned to a node and then the cube but the",
    "start": "1824880",
    "end": "1829960"
  },
  {
    "text": "respective cubelet will basically fetch the definition create the pod or container",
    "start": "1829960",
    "end": "1835520"
  },
  {
    "text": "um that's actually a deja vu moment so let's see what we have",
    "start": "1835520",
    "end": "1842640"
  },
  {
    "text": "we have a cluster aggregation server or let's say a standard server which which is going to host our cluster crts or some securities um we",
    "start": "1842640",
    "end": "1850000"
  },
  {
    "text": "already have the first cluster controller manager which and this controller manager is creating control planes",
    "start": "1850000",
    "end": "1856480"
  },
  {
    "text": "um okay that's something that could be improved on the other hand i also see that we have um we already have the",
    "start": "1856480",
    "end": "1861600"
  },
  {
    "text": "control planes running on the management cluster so what's actually missing here",
    "start": "1861600",
    "end": "1867360"
  },
  {
    "text": "i think there are um mainly two components which are really at the core of",
    "start": "1867360",
    "end": "1873440"
  },
  {
    "text": "kubernetes and could really also be helpful to us so i can already think of a cluster",
    "start": "1873440",
    "end": "1879440"
  },
  {
    "text": "scheduler so a cluster scheduler which assigns a cluster to a particular management cluster the way",
    "start": "1879440",
    "end": "1885519"
  },
  {
    "text": "a cube scheduler does and a cluster delete where a respective cluster lit will basically fetch the definition of the",
    "start": "1885519",
    "end": "1891519"
  },
  {
    "text": "cluster object and then spawn up the control plane and then do the rest of the business or the business logic that we",
    "start": "1891519",
    "end": "1897840"
  },
  {
    "text": "need to do and um i think the the interesting uh phenomenon something or something that i",
    "start": "1897840",
    "end": "1904880"
  },
  {
    "text": "would really like to put out explicitly is that",
    "start": "1904880",
    "end": "1910000"
  },
  {
    "text": "with the introduction of the cluster elite we are actually separating the whole the business logic out of the cluster",
    "start": "1910000",
    "end": "1915600"
  },
  {
    "text": "controller manager of which which was related to deploying the control planes and this really really helps us scaling",
    "start": "1915600",
    "end": "1921679"
  },
  {
    "text": "so i can think of plenty of management clusters now and plenty of cluster it's doing their job independently",
    "start": "1921679",
    "end": "1928720"
  },
  {
    "text": "that is nice and um now let's",
    "start": "1928880",
    "end": "1934960"
  },
  {
    "text": "let me stretch a bit and name it so for the bottom his quest let's name or whatever small design that",
    "start": "1934960",
    "end": "1940880"
  },
  {
    "text": "we have prepared and let's name it a gardener and i would introduce gardner here and i",
    "start": "1940880",
    "end": "1946480"
  },
  {
    "text": "would say what's the design of the gardener so the gardener's design is exactly similar to what we saw",
    "start": "1946480",
    "end": "1953279"
  },
  {
    "text": "previously in the previous slide that we have a partner api server then we have a corner scheduler gardener controller manager",
    "start": "1953279",
    "end": "1959440"
  },
  {
    "text": "which does the same as what we just discussed and then the gardener garden elite which is sense of high scale and then",
    "start": "1959440",
    "end": "1967279"
  },
  {
    "text": "on each of the seed cluster we have one gardener cuddling hosted which is responsible for",
    "start": "1967279",
    "end": "1972320"
  },
  {
    "text": "managing the control planes which are going to run on those particular seed clusters so if you look at the mapping then this",
    "start": "1972320",
    "end": "1978480"
  },
  {
    "text": "gardner scheduler becomes a chip scheduler coordinator ps4 becomes a kubernetes api server corner controller manager becomes the cube controller",
    "start": "1978480",
    "end": "1985039"
  },
  {
    "text": "manager the seed cluster becomes the management cluster or the seed cluster becomes the",
    "start": "1985039",
    "end": "1990480"
  },
  {
    "text": "node objects in the kubernetes currently it is of course the cube plate and the control should control plane is",
    "start": "1990480",
    "end": "1996240"
  },
  {
    "text": "the part wow this this looks fascinating and you know what just just to add so this",
    "start": "1996240",
    "end": "2002399"
  },
  {
    "text": "is the core of the cotton design it maps to the design pattern of kubernetes as we see",
    "start": "2002399",
    "end": "2007440"
  },
  {
    "text": "so we can really actually reuse the skills in effect in effect a cubeception model of turtles",
    "start": "2007440",
    "end": "2014640"
  },
  {
    "text": "all the way down along with the requirement of delivering a fully managed kubernetes as a service step by step",
    "start": "2014640",
    "end": "2020960"
  },
  {
    "text": "actually lead us to this architecture now initially our requirements are for running",
    "start": "2020960",
    "end": "2026080"
  },
  {
    "text": "the bottom squeeze application on kubernetes motivated the whole platform but now it seems um this platform is not",
    "start": "2026080",
    "end": "2032799"
  },
  {
    "text": "only this platform is really for everyone for",
    "start": "2032799",
    "end": "2038159"
  },
  {
    "text": "to build applications on top as well that is good that is good so what we",
    "start": "2038159",
    "end": "2044320"
  },
  {
    "start": "2042000",
    "end": "2232000"
  },
  {
    "text": "started for ourselves looks like it has become a novel for all other potential users too",
    "start": "2044320",
    "end": "2050878"
  },
  {
    "text": "this is this is good so going forward uh i really like the the design already",
    "start": "2050879",
    "end": "2056720"
  },
  {
    "text": "uh but you know we don't want to miss one important aspect because now we are making it available for",
    "start": "2056720",
    "end": "2062000"
  },
  {
    "text": "majority of the customers that might find potential usage for this so with increasing adoption we might",
    "start": "2062000",
    "end": "2067919"
  },
  {
    "text": "want to support even more cloud providers and this may force us to switch to different",
    "start": "2067919",
    "end": "2073358"
  },
  {
    "text": "operating systems and to different network plugins and to different other aspects of the cluster",
    "start": "2073359",
    "end": "2079358"
  },
  {
    "text": "management so with ever evolving cloud native ecosystem our systems",
    "start": "2079359",
    "end": "2084720"
  },
  {
    "text": "also have to be completely extensible so some system where you know the batteries are",
    "start": "2084720",
    "end": "2090158"
  },
  {
    "text": "included but they are swappable so in essence i just want to bring in a thorough extensibility",
    "start": "2090159",
    "end": "2096240"
  },
  {
    "text": "to this gardener that you have built support that's really a great point and",
    "start": "2096240",
    "end": "2102640"
  },
  {
    "text": "i can't agree more with you i would say the extensibility should be at the very very core of any good design",
    "start": "2102640",
    "end": "2109599"
  },
  {
    "text": "and gardner supports a very neat and kubernetes native extension model so each extension point is essentially a",
    "start": "2109599",
    "end": "2115280"
  },
  {
    "text": "provider specific controller very similar to how extensivity is designed for cloud controller manager for example in kubernetes",
    "start": "2115280",
    "end": "2121839"
  },
  {
    "text": "and a very simple example would be actually for the cloud providers themselves where you can see that corner gardner would",
    "start": "2121839",
    "end": "2128480"
  },
  {
    "text": "basically declare a neat coolant interface for a provider and then the provider would have to",
    "start": "2128480",
    "end": "2133680"
  },
  {
    "text": "implement that particular interface the interface content would be a bare minimum functions which would be needed for",
    "start": "2133680",
    "end": "2141440"
  },
  {
    "text": "a gardener to support or which would be needed for a full refrigerated kubernetes to run on a particular provider",
    "start": "2141440",
    "end": "2146640"
  },
  {
    "text": "one of the one of the simple example would be the gardener extension provider aws which is targeted for",
    "start": "2146640",
    "end": "2151680"
  },
  {
    "text": "aws and this of course this report this approach recursively builds on kubernetes support",
    "start": "2151680",
    "end": "2157359"
  },
  {
    "text": "for various other providers as well um so this was that that's theory but let's",
    "start": "2157359",
    "end": "2163920"
  },
  {
    "text": "actually look at a beautiful outcome of of of a well-defined extension model",
    "start": "2163920",
    "end": "2169359"
  },
  {
    "text": "or i would say the power of well-defined extension models so we just this is basically a one",
    "start": "2169359",
    "end": "2174800"
  },
  {
    "text": "a simple single gardener installation where there are large number of clusters",
    "start": "2174800",
    "end": "2180079"
  },
  {
    "text": "being managed on different cloud providers um basically gardener is the support",
    "start": "2180079",
    "end": "2185200"
  },
  {
    "text": "management cluster it runs inside the super management cluster that can host the control plane of seat clusters which are the green",
    "start": "2185200",
    "end": "2191119"
  },
  {
    "text": "dots in the super management cluster then the workload machines are basically",
    "start": "2191119",
    "end": "2196400"
  },
  {
    "text": "the seed clusters the workload machine of this seed clusters are basically deployed on different cloud providers in different regions",
    "start": "2196400",
    "end": "2203119"
  },
  {
    "text": "is the case fits based and then um to maintain the to have the list resource latency the",
    "start": "2203119",
    "end": "2209359"
  },
  {
    "text": "workload machines of the actual end user clusters or let's call in the shoot clusters so those are deployed in the same region",
    "start": "2209359",
    "end": "2216079"
  },
  {
    "text": "and they have the control being hosted on the management clusters workload and this is what i have and this",
    "start": "2216079",
    "end": "2223200"
  },
  {
    "text": "looks uh as if it can actually handle a large number of clusters if this actually works also and",
    "start": "2223200",
    "end": "2228960"
  },
  {
    "text": "not only on the paper yes and this picture of this ecosystem of gardner looks so beautiful i'm",
    "start": "2228960",
    "end": "2235599"
  },
  {
    "start": "2232000",
    "end": "2607000"
  },
  {
    "text": "actually not able to take my eyes off but i'm forcing myself to do so because i want to see this in action",
    "start": "2235599",
    "end": "2240880"
  },
  {
    "text": "so let's go to a demo okay so let me um show you the demo of what i",
    "start": "2240880",
    "end": "2247359"
  },
  {
    "text": "just talked about what we see on the screen is a garter dashboard to have a better user",
    "start": "2247359",
    "end": "2253760"
  },
  {
    "text": "experience of course everything can also be done from the terminal um on what we see is basically cluster",
    "start": "2253760",
    "end": "2259920"
  },
  {
    "text": "secret members some utilities and then we already saw a demo of the pq demo cncf cluster",
    "start": "2259920",
    "end": "2267040"
  },
  {
    "text": "where there are few fields different sections that can be configured in a given q1 cluster and you have you have a",
    "start": "2267040",
    "end": "2274320"
  },
  {
    "text": "chance to directly fall into the terminal from there so what you just saw in the overview of course everything",
    "start": "2274320",
    "end": "2280240"
  },
  {
    "text": "there the essence of them is basically also in the dml file here so you basically change the cml files or you",
    "start": "2280240",
    "end": "2286720"
  },
  {
    "text": "you can declare everything in the ml files as well and let's actually try to create a new cluster and see how the flow looks like",
    "start": "2286720",
    "end": "2293040"
  },
  {
    "text": "so i'm going to create a cluster on aws i'm going to call it bottomist here",
    "start": "2293040",
    "end": "2300320"
  },
  {
    "text": "um the version is 1.20 i can set different purposes let's call it evaluation purpose",
    "start": "2300320",
    "end": "2306800"
  },
  {
    "text": "um i'm going to use standard aws secret for that just access key and so on for the worker",
    "start": "2306800",
    "end": "2312800"
  },
  {
    "text": "pools um i would basically use m5.large i can choose other worker sizes let's use m5.large i",
    "start": "2312800",
    "end": "2321440"
  },
  {
    "text": "could use carbon linux operating system docker um i would keep min and max is",
    "start": "2321440",
    "end": "2326720"
  },
  {
    "text": "one and two uh maintenance so i would keep it as it is so only in this maintenance window",
    "start": "2326720",
    "end": "2332960"
  },
  {
    "text": "the cluster would be rolled out and not in any random time and then of course my personal favorite is hibernation where",
    "start": "2332960",
    "end": "2339599"
  },
  {
    "text": "that i would say every day at 5 pm my cluster should be hibernated because this is just evaluation clusters i would",
    "start": "2339599",
    "end": "2344720"
  },
  {
    "text": "actually save a lot of cost by bringing down all the machine and control planes every day at 5 pm",
    "start": "2344720",
    "end": "2350240"
  },
  {
    "text": "um of course same can be done with the yml's and let's not wait long and go ahead create a cluster",
    "start": "2350240",
    "end": "2357440"
  },
  {
    "text": "what i also see is a tracker basically it says create processing so the tracker keeps me up to date in terms of what's",
    "start": "2358240",
    "end": "2364640"
  },
  {
    "text": "what's going to what's happening right now with some of the detailed messages",
    "start": "2364640",
    "end": "2370640"
  },
  {
    "text": "and um it says it's deploying the external domain and let's now look at the back end so at",
    "start": "2370640",
    "end": "2378160"
  },
  {
    "text": "the gardner api server i would expect to see another shoot cluster which we just created by the dashboard i already see a bottomist as a",
    "start": "2378160",
    "end": "2384960"
  },
  {
    "text": "new shoot cluster and now um it says the creation is",
    "start": "2384960",
    "end": "2390480"
  },
  {
    "text": "processing i would also like to see a seat clusters specifically the aws seed cluster because we created",
    "start": "2390480",
    "end": "2396400"
  },
  {
    "text": "the cluster on the aws so i have one seed object which says it's ready and it is in the eu east one",
    "start": "2396400",
    "end": "2404319"
  },
  {
    "text": "now i am going to watch my shoot clusters to see how the progress is going on",
    "start": "2404319",
    "end": "2412640"
  },
  {
    "text": "the next terminal let's relate our let's look at our terminals to our actual diagrams so",
    "start": "2412800",
    "end": "2419599"
  },
  {
    "text": "we have a corner scheduler which maps to the carbon scheduler here and i would expect it should have already done something with my with the",
    "start": "2419599",
    "end": "2425280"
  },
  {
    "text": "shoot object that i just registered let's see",
    "start": "2425280",
    "end": "2429838"
  },
  {
    "text": "yeah i see a message which clearly states that um it has been scheduled to the",
    "start": "2433920",
    "end": "2440480"
  },
  {
    "text": "seat which is aws it has a difference it can also be plugged with different kinds of scheduling strategies if you want the way we do with cube scheduler",
    "start": "2440480",
    "end": "2447839"
  },
  {
    "text": "and um perfect let's if it's assigned to the aws then this is",
    "start": "2447839",
    "end": "2453119"
  },
  {
    "text": "the carton lid which is running on the aws seed cluster or the aws management cluster and here",
    "start": "2453119",
    "end": "2458960"
  },
  {
    "text": "i would expect this cotton lid should have at least started doing something",
    "start": "2458960",
    "end": "2466079"
  },
  {
    "text": "at least it should have fetched the definition and start to create the uh control plane parts and i already see",
    "start": "2466079",
    "end": "2471839"
  },
  {
    "text": "that there are there are demo pro bottom is less bottom is which basically refers to our cluster and it has already started processing",
    "start": "2471839",
    "end": "2478160"
  },
  {
    "text": "that cluster i think it's doing something in the background we'll get to know that the next next terminal then i",
    "start": "2478160",
    "end": "2484480"
  },
  {
    "text": "can also take a quick look at the gardner controller manager now so we have from the diagram i know that",
    "start": "2484480",
    "end": "2490160"
  },
  {
    "text": "controller manager is responsible to take care of other life cycle aspects of my shoot cluster",
    "start": "2490160",
    "end": "2496079"
  },
  {
    "text": "and i see that the hibernation and maintenance are basically the subcontroller of it and they are also already taking care of",
    "start": "2496079",
    "end": "2502079"
  },
  {
    "text": "those aspects of my cluster and now the most important or the most interesting uh",
    "start": "2502079",
    "end": "2508160"
  },
  {
    "text": "aspect of the whole system that we just just we get it right so the control plane is what we are",
    "start": "2508160",
    "end": "2514400"
  },
  {
    "text": "going to look at now that which is running in one of the seed or the management cluster which is aws in our",
    "start": "2514400",
    "end": "2520319"
  },
  {
    "text": "case and let me zoom in",
    "start": "2520319",
    "end": "2524318"
  },
  {
    "text": "let's search for the namespace which is dedicated for our cluster i already see one",
    "start": "2528720",
    "end": "2536720"
  },
  {
    "text": "namespace let's get inside it and see what's what's already deployed or what's",
    "start": "2536720",
    "end": "2542720"
  },
  {
    "text": "happening okay so i see that it's already api",
    "start": "2542720",
    "end": "2548560"
  },
  {
    "text": "server and lcd i think more parts are coming we also have a nice logging and monitoring setup with loki",
    "start": "2548560",
    "end": "2556640"
  },
  {
    "text": "and um on the other hand um i would also be later on be",
    "start": "2556640",
    "end": "2562640"
  },
  {
    "text": "interested in looking at the workload cluster but essentially um if we if you try to recall what we just learned in",
    "start": "2562640",
    "end": "2568880"
  },
  {
    "text": "the diagram so from the api server it has reached to the cotton scheduler from scheduler to carton leaked from carbon",
    "start": "2568880",
    "end": "2574640"
  },
  {
    "text": "lead to in parallel to corner controller manager and now on the management cluster we see something happening",
    "start": "2574640",
    "end": "2580640"
  },
  {
    "text": "and the dashboard says it shows clearly that the creation is ongoing um i think it should take place in the",
    "start": "2580640",
    "end": "2587280"
  },
  {
    "text": "infrastructure for five to seven minutes or so um i would suggest let let's take a look at",
    "start": "2587280",
    "end": "2594319"
  },
  {
    "text": "another key other key features summers meanwhile while the cluster is being created sure sounds good",
    "start": "2594319",
    "end": "2607359"
  },
  {
    "start": "2607000",
    "end": "2782000"
  },
  {
    "text": "so um to add to the whole thing um what we saw was the day one in",
    "start": "2607359",
    "end": "2613680"
  },
  {
    "text": "general so creating a cluster even creating thousands of clusters still is okay but what really happens",
    "start": "2613680",
    "end": "2621200"
  },
  {
    "text": "and what's really more fascinating is what what's gonna happen on day two or day three and so on so we are",
    "start": "2621200",
    "end": "2626560"
  },
  {
    "text": "we are going to have or we already have the customers or the people who would generally create lots of lots of workloads on",
    "start": "2626560",
    "end": "2633359"
  },
  {
    "text": "their cluster and in such cases we don't want our api server to die we don't want our other control plane components to be exhausted",
    "start": "2633359",
    "end": "2639920"
  },
  {
    "text": "so what what's there to save us is basically the horizontal vertical part autoscaler",
    "start": "2639920",
    "end": "2645200"
  },
  {
    "text": "so what it does is really fascinating it auto scales the pods control print parts",
    "start": "2645200",
    "end": "2650400"
  },
  {
    "text": "both vertically and horizontally as situation demands and then",
    "start": "2650400",
    "end": "2655680"
  },
  {
    "text": "we have fcd backup and restore so this is this is our savior for the disaster and",
    "start": "2655680",
    "end": "2661119"
  },
  {
    "text": "recovery where um this sidecar container basically keeps on taking the snapshots of the lcd",
    "start": "2661119",
    "end": "2668000"
  },
  {
    "text": "let's say every one over this is perfectly configurable so it takes full snapshot every one over and then it takes delta snapshots",
    "start": "2668000",
    "end": "2674640"
  },
  {
    "text": "every few seconds and then um at any point in time if things go south it would basically restore the entire",
    "start": "2674640",
    "end": "2681760"
  },
  {
    "text": "cluster using the snapshot taken previously and it would give us kind of a point in time recovery of loss of only a few seconds",
    "start": "2681760",
    "end": "2688000"
  },
  {
    "text": "of the data the next next one is also my favorite where gardner goes one step beyond and it",
    "start": "2688000",
    "end": "2694240"
  },
  {
    "text": "actually does the automatic seed provisioning now we if you look at the design we saw",
    "start": "2694240",
    "end": "2699520"
  },
  {
    "text": "that we assumed that there are always x number of management clusters available but what",
    "start": "2699520",
    "end": "2705040"
  },
  {
    "text": "if uh we have a certain increase in the cluster number of clusters and someone just creates",
    "start": "2705040",
    "end": "2710079"
  },
  {
    "text": "1000 more clusters and then we don't have enough capacity in the existing management clusters so gardner also offers such features",
    "start": "2710079",
    "end": "2715839"
  },
  {
    "text": "where the new cluster is automatically new management cluster is automatically added and it actually load balances the whole",
    "start": "2715839",
    "end": "2722000"
  },
  {
    "text": "control pin across different management clusters and that is very thoughtful",
    "start": "2722000",
    "end": "2728240"
  },
  {
    "text": "yes that comes with the experience with the hard way of learning things and then the last one is",
    "start": "2728240",
    "end": "2735119"
  },
  {
    "text": "of course the auto scaling of all all of the clusters at all of the layers that we just talked about and this auto scaling is",
    "start": "2735119",
    "end": "2741040"
  },
  {
    "text": "the key uh key feature of enormous amount of resource savings i would say because this cluster",
    "start": "2741040",
    "end": "2747119"
  },
  {
    "text": "our scalar basically always scales our super management cluster management cluster and the actual",
    "start": "2747119",
    "end": "2752800"
  },
  {
    "text": "shoot clusters and it works in a cloud agnostic fashion as as we discussed that",
    "start": "2752800",
    "end": "2757839"
  },
  {
    "text": "because it supports the machine api which is gardner's machine api if it's",
    "start": "2757839",
    "end": "2762880"
  },
  {
    "text": "it basically only has a common denominator requirement that if a private if a cloud",
    "start": "2762880",
    "end": "2768079"
  },
  {
    "text": "provider has a create machine and delete machine api is implemented which is like a bad bitimum",
    "start": "2768079",
    "end": "2773200"
  },
  {
    "text": "then the auto scaler would be able to do its job of auto scaling all the machines as per the requirement that that is",
    "start": "2773200",
    "end": "2780960"
  },
  {
    "text": "pretty cool uh probably we want to re-look at the cluster creation state here",
    "start": "2780960",
    "end": "2788079"
  },
  {
    "text": "looks like it is done that's beautiful yeah it's already created and it takes only a few minutes okay",
    "start": "2788079",
    "end": "2794960"
  },
  {
    "text": "perfect wow that was really good and so we i",
    "start": "2794960",
    "end": "2800240"
  },
  {
    "text": "already see that we have a set of adopters who are running gardener",
    "start": "2800240",
    "end": "2805520"
  },
  {
    "text": "and managing thousands of clusters at ease so obviously at sap we use gardener",
    "start": "2805520",
    "end": "2812240"
  },
  {
    "text": "internally for development purposes and also for production workloads and it is utilized",
    "start": "2812240",
    "end": "2819119"
  },
  {
    "text": "by software developers and all the line of businesses across the globe gardiner creates hibernates scales",
    "start": "2819119",
    "end": "2826640"
  },
  {
    "text": "deletes hundreds of clusters on a daily basis gardener is operated by a central platform team",
    "start": "2826640",
    "end": "2833760"
  },
  {
    "text": "and its premier usage within sap leads to synergies on total cost of development",
    "start": "2833760",
    "end": "2840079"
  },
  {
    "text": "and reduced cost of operations in multi-cloud environment gardener is also in use by other cloud",
    "start": "2840079",
    "end": "2847920"
  },
  {
    "text": "providers such as fits who have extended gardener into their metal stack",
    "start": "2847920",
    "end": "2853520"
  },
  {
    "text": "and stack i t t systems 23 technologies applies gardner's multi-provider feature",
    "start": "2853520",
    "end": "2860559"
  },
  {
    "text": "for its gaia x a federated european sovereign cloud initiative ping cap the makers of ti kv and tidb",
    "start": "2860559",
    "end": "2868800"
  },
  {
    "text": "run their commercial database as service offering on top of gardener landscapes and many of the",
    "start": "2868800",
    "end": "2874400"
  },
  {
    "text": "same reasons apply running critical applications and critical systems off record",
    "start": "2874400",
    "end": "2879520"
  },
  {
    "text": "requires you to have complete access on your control plane and",
    "start": "2879520",
    "end": "2887119"
  },
  {
    "text": "each component of gardener is completely independently consumable right which is",
    "start": "2887119",
    "end": "2893359"
  },
  {
    "text": "why it has also witnessed uh some of the nice innovations wherein they have powered raspberry pi with",
    "start": "2893359",
    "end": "2900480"
  },
  {
    "text": "kubernetes using gardner's machine api implementation and gardner also often sees some of the",
    "start": "2900480",
    "end": "2906559"
  },
  {
    "text": "external contributions from adopters to support next generation use cases uh such as spot instances of kubernetes",
    "start": "2906559",
    "end": "2914319"
  },
  {
    "text": "nodes and interestingly the innovation does not stop in the infrastructure domain",
    "start": "2914319",
    "end": "2919440"
  },
  {
    "text": "peculiarly gardener managed seed clusters around globe can be thought of standard",
    "start": "2919440",
    "end": "2925520"
  },
  {
    "text": "kubernetes infrastructure that can host a platform service outside the end cluster but",
    "start": "2925520",
    "end": "2930640"
  },
  {
    "text": "near to control plane right and gardner also ships with multi-tenant multi-cluster capabilities",
    "start": "2930640",
    "end": "2938079"
  },
  {
    "text": "of dns and the certificate service as a user you just need to annotate or apply a",
    "start": "2938079",
    "end": "2945200"
  },
  {
    "text": "custom resource in your cluster to consume these value added but managed services",
    "start": "2945200",
    "end": "2950880"
  },
  {
    "text": "so think about it gardener has the minimum architecture that is needed to provide all types of",
    "start": "2950880",
    "end": "2956720"
  },
  {
    "text": "related services thank you stu linker d or think cross plane",
    "start": "2956720",
    "end": "2961839"
  },
  {
    "text": "in a managed way so for us and our community gardener is more than just a kubernetes",
    "start": "2961839",
    "end": "2968319"
  },
  {
    "text": "cluster as a service hey and yeah of course towards the end um",
    "start": "2968319",
    "end": "2975520"
  },
  {
    "start": "2972000",
    "end": "3037000"
  },
  {
    "text": "bullseye question or a million dollar equation what's the relation with the cluster api we know what's clustering api it's it's",
    "start": "2975520",
    "end": "2981119"
  },
  {
    "text": "it's a great community project which has a very similar purpose and we are often asked about it",
    "start": "2981119",
    "end": "2986480"
  },
  {
    "text": "so um in general with the latest cluster api specification um it is possible to delegate the",
    "start": "2986480",
    "end": "2993040"
  },
  {
    "text": "specifics of cluster management to a separate controller plane provider so it's the extension model of the",
    "start": "2993040",
    "end": "2998800"
  },
  {
    "text": "cluster api so there is already a battery included which is cube adm control plane provider",
    "start": "2998800",
    "end": "3004559"
  },
  {
    "text": "and that works pretty cool with the dedicated control plane machines but then with the whole concept of control plane",
    "start": "3004559",
    "end": "3010240"
  },
  {
    "text": "controllers being an extension what is the possibility or what we are planning to do is basically to have",
    "start": "3010240",
    "end": "3015839"
  },
  {
    "text": "another control plane provider provider which is going to be the gardener control control plane provider",
    "start": "3015839",
    "end": "3021119"
  },
  {
    "text": "of course it is not yet implemented it would be it would be implemented and we would be really really interested",
    "start": "3021119",
    "end": "3026160"
  },
  {
    "text": "if there is any traction for externally from anyone who would be who would be helping would be willing to",
    "start": "3026160",
    "end": "3031280"
  },
  {
    "text": "help us or would be willing to consume or have a feedback on this wow so great things in place and great",
    "start": "3031280",
    "end": "3038640"
  },
  {
    "start": "3037000",
    "end": "3238000"
  },
  {
    "text": "things on the way nice so and i just wanted to show a funny",
    "start": "3038640",
    "end": "3043839"
  },
  {
    "text": "funny meme which one of our fellow developers have created because he could not really resist",
    "start": "3043839",
    "end": "3048880"
  },
  {
    "text": "when the whole team was creating thousands of clusters and gardner managed it nicely",
    "start": "3048880",
    "end": "3055838"
  },
  {
    "text": "thanks to team for that",
    "start": "3060000",
    "end": "3063040"
  },
  {
    "text": "yes so yep that is it",
    "start": "3066839",
    "end": "3072240"
  },
  {
    "text": "yeah guys so gardner already has actually a significant community in the social media please do join us we",
    "start": "3072240",
    "end": "3078160"
  },
  {
    "text": "would love to hear your feedback suggestions contributions complaints or otherwise just to say hello",
    "start": "3078160",
    "end": "3085359"
  },
  {
    "text": "is there any other questions from anyone",
    "start": "3085680",
    "end": "3089599"
  },
  {
    "text": "sounds like you did a good job i see one question from um through",
    "start": "3094079",
    "end": "3099680"
  },
  {
    "text": "tucker i can probably answer that question so his question is that doesn't replication of management clusters across regions",
    "start": "3099680",
    "end": "3105520"
  },
  {
    "text": "again increase the cost factor just certainly and um i think in the flow",
    "start": "3105520",
    "end": "3110960"
  },
  {
    "text": "we answered that already so increasing having more management clusters has basically two effects one is the",
    "start": "3110960",
    "end": "3116960"
  },
  {
    "text": "complexity of manage managing more clusters one and the other one is the costs the first one is of course targeted",
    "start": "3116960",
    "end": "3122800"
  },
  {
    "text": "by the super management cluster and the second one is targeted by having a very well defined auto scaling of the management clusters",
    "start": "3122800",
    "end": "3128960"
  },
  {
    "text": "themselves so if you have a one management cluster with large number of machines that would not be very different",
    "start": "3128960",
    "end": "3134800"
  },
  {
    "text": "if i have a few management clusters but their machines are basically divided across different regions",
    "start": "3134800",
    "end": "3141440"
  },
  {
    "text": "all right last chance anyone have anything else",
    "start": "3144720",
    "end": "3151440"
  },
  {
    "text": "there you go thank you oh i think there was one more",
    "start": "3151599",
    "end": "3160240"
  },
  {
    "text": "question there's one more question from mandal does gardner facilitate git ops",
    "start": "3160240",
    "end": "3167040"
  },
  {
    "text": "and deployment of workloads to the cluster um this is a very very interesting question",
    "start": "3167040",
    "end": "3172720"
  },
  {
    "text": "so this this question falls um slightly outside of the bucket of the gardener but we do",
    "start": "3172720",
    "end": "3177839"
  },
  {
    "text": "have the um we do have the ecosystem where we want to basically not only take care",
    "start": "3177839",
    "end": "3184960"
  },
  {
    "text": "of the cluster management but also take care of the life cycle of the applications which are going to run on top of the cluster",
    "start": "3184960",
    "end": "3190480"
  },
  {
    "text": "and that you can probably find under the gardener or i could share it later with the flying",
    "start": "3190480",
    "end": "3197520"
  },
  {
    "text": "and just follow the name of that but we do we do have the whole facility",
    "start": "3197520",
    "end": "3202559"
  },
  {
    "text": "which is which is basically going to take care of the whole ecosystem of the applications themselves as well",
    "start": "3202559",
    "end": "3209838"
  },
  {
    "text": "hey thank you all very much everyone thanks for joining us um this again the recording and slides",
    "start": "3212960",
    "end": "3220559"
  },
  {
    "text": "will be up later today on the website and thank you again for attending",
    "start": "3220559",
    "end": "3226319"
  },
  {
    "text": "another cncf live webinar thank you to our presenters and everyone",
    "start": "3226319",
    "end": "3231520"
  },
  {
    "text": "have a great day and we'll see you next time thanks everyone thank you everyone have a nice",
    "start": "3231520",
    "end": "3240000"
  }
]