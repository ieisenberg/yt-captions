[
  {
    "text": "hello everyone I am Ricardo and I'm a",
    "start": "240",
    "end": "3000"
  },
  {
    "text": "software engineering intern here at",
    "start": "3000",
    "end": "4319"
  },
  {
    "text": "Google I'll be presenting today with",
    "start": "4319",
    "end": "6399"
  },
  {
    "text": "ishwor some work that has been going on",
    "start": "6399",
    "end": "8320"
  },
  {
    "text": "in grpc",
    "start": "8320",
    "end": "9960"
  },
  {
    "text": "go in essence this presentation is how",
    "start": "9960",
    "end": "13280"
  },
  {
    "text": "we can maximize the memor usage inside",
    "start": "13280",
    "end": "15080"
  },
  {
    "text": "of grpc",
    "start": "15080",
    "end": "16400"
  },
  {
    "text": "go but first before we can actually talk",
    "start": "16400",
    "end": "19279"
  },
  {
    "text": "about the work that we've been doing I",
    "start": "19279",
    "end": "20760"
  },
  {
    "text": "want to go through some concepts related",
    "start": "20760",
    "end": "22160"
  },
  {
    "text": "to grpc",
    "start": "22160",
    "end": "24119"
  },
  {
    "text": "go so for first grpc and protops are as",
    "start": "24119",
    "end": "28359"
  },
  {
    "text": "thick as theves right in proto is where",
    "start": "28359",
    "end": "30920"
  },
  {
    "text": "you define how your service is going to",
    "start": "30920",
    "end": "32320"
  },
  {
    "text": "look what sort of messages you're going",
    "start": "32320",
    "end": "33719"
  },
  {
    "text": "to send and what are the rpcs that",
    "start": "33719",
    "end": "35320"
  },
  {
    "text": "you're going to",
    "start": "35320",
    "end": "36520"
  },
  {
    "text": "support in the case of grpc go http2 is",
    "start": "36520",
    "end": "39879"
  },
  {
    "text": "a protocol that we use for the basis of",
    "start": "39879",
    "end": "42800"
  },
  {
    "text": "networking so everything in grpc goes",
    "start": "42800",
    "end": "45320"
  },
  {
    "text": "through http2 in the wire finally it is",
    "start": "45320",
    "end": "49199"
  },
  {
    "text": "worth mentioning that there are multiple",
    "start": "49199",
    "end": "50520"
  },
  {
    "text": "components involved in the in every",
    "start": "50520",
    "end": "52239"
  },
  {
    "text": "message inside of grpc go and today",
    "start": "52239",
    "end": "54199"
  },
  {
    "text": "we're going to talk about some of",
    "start": "54199",
    "end": "56160"
  },
  {
    "text": "them but before we can deep dive into",
    "start": "56160",
    "end": "58760"
  },
  {
    "text": "these components I want to go through",
    "start": "58760",
    "end": "60199"
  },
  {
    "text": "some of the motivations that were behind",
    "start": "60199",
    "end": "61920"
  },
  {
    "text": "the work that we've done so far and so",
    "start": "61920",
    "end": "64960"
  },
  {
    "text": "the main motivation for this effort was",
    "start": "64960",
    "end": "67119"
  },
  {
    "text": "a a performance issue on huge Proto",
    "start": "67119",
    "end": "69119"
  },
  {
    "text": "messages so we were when we were sending",
    "start": "69119",
    "end": "72040"
  },
  {
    "text": "uh huge Proto messages we were seeing a",
    "start": "72040",
    "end": "73799"
  },
  {
    "text": "lot of memory consumption and so we did",
    "start": "73799",
    "end": "75400"
  },
  {
    "text": "some profiling and some benchmarks on",
    "start": "75400",
    "end": "77080"
  },
  {
    "text": "grpc go to try to figure out why this",
    "start": "77080",
    "end": "79560"
  },
  {
    "text": "was happening and we basically figured",
    "start": "79560",
    "end": "82560"
  },
  {
    "text": "out that there were two main problems",
    "start": "82560",
    "end": "84720"
  },
  {
    "text": "with grpc go the number of copies and",
    "start": "84720",
    "end": "86600"
  },
  {
    "text": "the number of allocations that were",
    "start": "86600",
    "end": "87720"
  },
  {
    "text": "being made inside of the of the",
    "start": "87720",
    "end": "91439"
  },
  {
    "text": "application and so now that we",
    "start": "91439",
    "end": "94600"
  },
  {
    "text": "investigated all of this we came up with",
    "start": "94600",
    "end": "96000"
  },
  {
    "text": "a plan to solve this it is basically a",
    "start": "96000",
    "end": "98200"
  },
  {
    "text": "two-part plan firstly we would we would",
    "start": "98200",
    "end": "101000"
  },
  {
    "text": "need to rethink the encoding API and",
    "start": "101000",
    "end": "103520"
  },
  {
    "text": "secondly we would need to rework the",
    "start": "103520",
    "end": "105719"
  },
  {
    "text": "transfer and so you might be thinking",
    "start": "105719",
    "end": "108880"
  },
  {
    "text": "what are these components what are they",
    "start": "108880",
    "end": "110079"
  },
  {
    "text": "use for and how do we make them better",
    "start": "110079",
    "end": "113079"
  },
  {
    "text": "and so firstly I'm going to give the",
    "start": "113079",
    "end": "115079"
  },
  {
    "text": "Stitch to isord so he can talk about the",
    "start": "115079",
    "end": "117840"
  },
  {
    "text": "encoding API",
    "start": "117840",
    "end": "121320"
  },
  {
    "text": "thanks",
    "start": "122680",
    "end": "123520"
  },
  {
    "text": "Ricardo um so what is encoding so",
    "start": "123520",
    "end": "128800"
  },
  {
    "text": "basically at a very high level encoding",
    "start": "128800",
    "end": "131239"
  },
  {
    "text": "is converting your request or response",
    "start": "131239",
    "end": "134040"
  },
  {
    "text": "messages which are usually Proto",
    "start": "134040",
    "end": "135959"
  },
  {
    "text": "messages into bytes that can be sent on",
    "start": "135959",
    "end": "138680"
  },
  {
    "text": "the wire and decoding is basically the",
    "start": "138680",
    "end": "141640"
  },
  {
    "text": "opposite of that where you get bytes",
    "start": "141640",
    "end": "143680"
  },
  {
    "text": "from The Wire and you have to convert",
    "start": "143680",
    "end": "145599"
  },
  {
    "text": "them back into your Proto",
    "start": "145599",
    "end": "148720"
  },
  {
    "text": "messages uh um so at a very high level",
    "start": "148720",
    "end": "152560"
  },
  {
    "text": "let's see where encoding happens in JPC",
    "start": "152560",
    "end": "156080"
  },
  {
    "text": "so you have your client application and",
    "start": "156080",
    "end": "158080"
  },
  {
    "text": "that's making an",
    "start": "158080",
    "end": "159319"
  },
  {
    "text": "RPC uh so this message is now given to",
    "start": "159319",
    "end": "163080"
  },
  {
    "text": "the encoder and the encoder comes",
    "start": "163080",
    "end": "166760"
  },
  {
    "text": "back with a bunch of bites and they go",
    "start": "166760",
    "end": "171319"
  },
  {
    "text": "through a lot of other JPC stuff before",
    "start": "171319",
    "end": "174680"
  },
  {
    "text": "they get put on the wire and the same",
    "start": "174680",
    "end": "177040"
  },
  {
    "text": "thing happens on the other side uh",
    "start": "177040",
    "end": "179519"
  },
  {
    "text": "basically basically you get btes on the",
    "start": "179519",
    "end": "181159"
  },
  {
    "text": "wire it goes through a bunch of grpc",
    "start": "181159",
    "end": "184000"
  },
  {
    "text": "stuff and then it goes through the",
    "start": "184000",
    "end": "186200"
  },
  {
    "text": "decoder which gives you back the Proto",
    "start": "186200",
    "end": "189560"
  },
  {
    "text": "message that can be passed to the server",
    "start": "189560",
    "end": "193000"
  },
  {
    "text": "application so the key takeaways here",
    "start": "193000",
    "end": "195799"
  },
  {
    "text": "are that encoding is the first thing",
    "start": "195799",
    "end": "198120"
  },
  {
    "text": "that happens on the send path and",
    "start": "198120",
    "end": "201000"
  },
  {
    "text": "decoding is probably the last thing that",
    "start": "201000",
    "end": "203000"
  },
  {
    "text": "happens on the receive path and the most",
    "start": "203000",
    "end": "206040"
  },
  {
    "text": "commonly used encoding in GPC is the",
    "start": "206040",
    "end": "208799"
  },
  {
    "text": "Proto of encoding",
    "start": "208799",
    "end": "210439"
  },
  {
    "text": "uh in fact in GPC go especially if you",
    "start": "210439",
    "end": "213680"
  },
  {
    "text": "don't specify an encoding which is",
    "start": "213680",
    "end": "216000"
  },
  {
    "text": "default to the Proto",
    "start": "216000",
    "end": "218840"
  },
  {
    "text": "encoding and um so http2 is basically",
    "start": "218840",
    "end": "224000"
  },
  {
    "text": "the transport uh that is used by default",
    "start": "224000",
    "end": "226879"
  },
  {
    "text": "and it supports a header called content",
    "start": "226879",
    "end": "230400"
  },
  {
    "text": "type uh which basically specifies the",
    "start": "230400",
    "end": "234040"
  },
  {
    "text": "nature of the data that's being sent in",
    "start": "234040",
    "end": "236640"
  },
  {
    "text": "the request or the response message um",
    "start": "236640",
    "end": "239840"
  },
  {
    "text": "so the value for that in grpc requests",
    "start": "239840",
    "end": "242400"
  },
  {
    "text": "and responses uh usually have this",
    "start": "242400",
    "end": "245720"
  },
  {
    "text": "application grpc prefix and it's",
    "start": "245720",
    "end": "249360"
  },
  {
    "text": "suffixed by the actual encoding being",
    "start": "249360",
    "end": "251920"
  },
  {
    "text": "used so if you're using the protom of",
    "start": "251920",
    "end": "253879"
  },
  {
    "text": "encoding then um on The Wire the value",
    "start": "253879",
    "end": "256680"
  },
  {
    "text": "for this uh header will be application",
    "start": "256680",
    "end": "259959"
  },
  {
    "text": "grpc plus",
    "start": "259959",
    "end": "263000"
  },
  {
    "text": "Proto now um let's get to some caveats",
    "start": "263320",
    "end": "267440"
  },
  {
    "text": "of the protoo encoding so up there you",
    "start": "267440",
    "end": "270320"
  },
  {
    "text": "see the unmarshal function um which is",
    "start": "270320",
    "end": "273240"
  },
  {
    "text": "provided by the protuff um goang library",
    "start": "273240",
    "end": "277400"
  },
  {
    "text": "and this has actually two major problems",
    "start": "277400",
    "end": "281440"
  },
  {
    "text": "the first one is that it takes a bite",
    "start": "281440",
    "end": "283560"
  },
  {
    "text": "slice as input uh it's a single flat",
    "start": "283560",
    "end": "287000"
  },
  {
    "text": "bite slice and um it requires that the",
    "start": "287000",
    "end": "291560"
  },
  {
    "text": "whole data that you want to deserialize",
    "start": "291560",
    "end": "293840"
  },
  {
    "text": "is in a single continuous buffer uh for",
    "start": "293840",
    "end": "297240"
  },
  {
    "text": "grpc where um the actual request or",
    "start": "297240",
    "end": "300880"
  },
  {
    "text": "response message goes as HTTP frames it",
    "start": "300880",
    "end": "304280"
  },
  {
    "text": "gets chunked into much smaller frames",
    "start": "304280",
    "end": "307120"
  },
  {
    "text": "than your actual message size uh so this",
    "start": "307120",
    "end": "309800"
  },
  {
    "text": "means that grpc needs to allocate a",
    "start": "309800",
    "end": "311520"
  },
  {
    "text": "single buffer put everything into that",
    "start": "311520",
    "end": "313479"
  },
  {
    "text": "buffer and then pass it to the UNM",
    "start": "313479",
    "end": "315000"
  },
  {
    "text": "marial function and this causes a lot of",
    "start": "315000",
    "end": "317479"
  },
  {
    "text": "garbage uh the second one is that um it",
    "start": "317479",
    "end": "321639"
  },
  {
    "text": "does not assume ownership of the input",
    "start": "321639",
    "end": "323479"
  },
  {
    "text": "data so basically what this means is",
    "start": "323479",
    "end": "326440"
  },
  {
    "text": "let's say that you have a big bite slice",
    "start": "326440",
    "end": "328960"
  },
  {
    "text": "in your uh message uh in in your Proto",
    "start": "328960",
    "end": "332919"
  },
  {
    "text": "Proto message um like the unmar actually",
    "start": "332919",
    "end": "337440"
  },
  {
    "text": "ends up like allocating a new bite slice",
    "start": "337440",
    "end": "340600"
  },
  {
    "text": "for it and copying over the data instead",
    "start": "340600",
    "end": "342759"
  },
  {
    "text": "of like just pointing to",
    "start": "342759",
    "end": "345400"
  },
  {
    "text": "it uh like both of these actually result",
    "start": "345400",
    "end": "348440"
  },
  {
    "text": "in a lot of unwanted allocations and",
    "start": "348440",
    "end": "351800"
  },
  {
    "text": "copies so if you look at gpc's encoding",
    "start": "351800",
    "end": "354960"
  },
  {
    "text": "API this very much resembles Proto",
    "start": "354960",
    "end": "358039"
  },
  {
    "text": "Marshal and unmarshal and therefore four",
    "start": "358039",
    "end": "360000"
  },
  {
    "text": "it has the same problems of Proto",
    "start": "360000",
    "end": "361840"
  },
  {
    "text": "Marshal and",
    "start": "361840",
    "end": "363639"
  },
  {
    "text": "Marshall now let's actually go through",
    "start": "363639",
    "end": "367960"
  },
  {
    "text": "uh the send and receive paths uh of an",
    "start": "367960",
    "end": "372080"
  },
  {
    "text": "RPC message and see where we're",
    "start": "372080",
    "end": "374039"
  },
  {
    "text": "incurring copies and allocations so we",
    "start": "374039",
    "end": "376880"
  },
  {
    "text": "start off with the application um",
    "start": "376880",
    "end": "379240"
  },
  {
    "text": "sending a message to grpc and grpc gives",
    "start": "379240",
    "end": "382759"
  },
  {
    "text": "that message to the codc the codec comes",
    "start": "382759",
    "end": "384680"
  },
  {
    "text": "back with btes so here we have a copy um",
    "start": "384680",
    "end": "388560"
  },
  {
    "text": "because the codec has to create that",
    "start": "388560",
    "end": "390120"
  },
  {
    "text": "bite slice and put uh the serialized",
    "start": "390120",
    "end": "392280"
  },
  {
    "text": "bites into it next grpc hands off these",
    "start": "392280",
    "end": "396599"
  },
  {
    "text": "bites to the",
    "start": "396599",
    "end": "397919"
  },
  {
    "text": "transport and the transport uh has to",
    "start": "397919",
    "end": "402240"
  },
  {
    "text": "hand off these bites to the http2 framer",
    "start": "402240",
    "end": "405080"
  },
  {
    "text": "which actually converts the bytes into",
    "start": "405080",
    "end": "406680"
  },
  {
    "text": "http2 frames but before it does that it",
    "start": "406680",
    "end": "409599"
  },
  {
    "text": "has to allocate um a small header which",
    "start": "409599",
    "end": "412840"
  },
  {
    "text": "is not the http2 header but it's a grpc",
    "start": "412840",
    "end": "415599"
  },
  {
    "text": "header it's a 5 byte header which is",
    "start": "415599",
    "end": "417639"
  },
  {
    "text": "basically 1 byte say whether the message",
    "start": "417639",
    "end": "420599"
  },
  {
    "text": "is compressed or not and 4 bytes",
    "start": "420599",
    "end": "422479"
  },
  {
    "text": "indicating the length of the message and",
    "start": "422479",
    "end": "425280"
  },
  {
    "text": "because the framer API is such that uh",
    "start": "425280",
    "end": "428240"
  },
  {
    "text": "it expects the whole data in a single",
    "start": "428240",
    "end": "431319"
  },
  {
    "text": "bite slice grpc again has to make a copy",
    "start": "431319",
    "end": "434800"
  },
  {
    "text": "and put the whole thing like the header",
    "start": "434800",
    "end": "436960"
  },
  {
    "text": "and uh the btes into one bite",
    "start": "436960",
    "end": "440599"
  },
  {
    "text": "slice uh next we have the framer passing",
    "start": "440720",
    "end": "444639"
  },
  {
    "text": "it uh like copying whatever bytes it",
    "start": "444639",
    "end": "448479"
  },
  {
    "text": "gets into",
    "start": "448479",
    "end": "450080"
  },
  {
    "text": "its own buffer we'll see more about the",
    "start": "450080",
    "end": "452560"
  },
  {
    "text": "problems in the framer like Ricardo will",
    "start": "452560",
    "end": "454319"
  },
  {
    "text": "talk about uh that in more",
    "start": "454319",
    "end": "457759"
  },
  {
    "text": "detail but all we need to know here is",
    "start": "457759",
    "end": "460120"
  },
  {
    "text": "there's another copy there and then the",
    "start": "460120",
    "end": "462720"
  },
  {
    "text": "framer writes it to the network and",
    "start": "462720",
    "end": "464960"
  },
  {
    "text": "there's another copy there uh so we have",
    "start": "464960",
    "end": "468400"
  },
  {
    "text": "four copies on the send path similarly",
    "start": "468400",
    "end": "471039"
  },
  {
    "text": "on the received path you get bytes from",
    "start": "471039",
    "end": "473479"
  },
  {
    "text": "the network uh so this copy star is",
    "start": "473479",
    "end": "476879"
  },
  {
    "text": "unavoidable because you need to copy",
    "start": "476879",
    "end": "479120"
  },
  {
    "text": "Byes out of the network into your",
    "start": "479120",
    "end": "481360"
  },
  {
    "text": "application space and then uh it gets",
    "start": "481360",
    "end": "484879"
  },
  {
    "text": "passed to the framer and the framer has",
    "start": "484879",
    "end": "486759"
  },
  {
    "text": "a buffer so there's a copy there and the",
    "start": "486759",
    "end": "489240"
  },
  {
    "text": "framer gives it to the transport and at",
    "start": "489240",
    "end": "492400"
  },
  {
    "text": "this point uh the transport has to make",
    "start": "492400",
    "end": "494400"
  },
  {
    "text": "a copy because the framer has a single",
    "start": "494400",
    "end": "497159"
  },
  {
    "text": "buffer and",
    "start": "497159",
    "end": "500280"
  },
  {
    "text": "um like if the transport uh doesn't make",
    "start": "500280",
    "end": "503520"
  },
  {
    "text": "a copy the next call to the framer will",
    "start": "503520",
    "end": "506919"
  },
  {
    "text": "actually override those bites uh again",
    "start": "506919",
    "end": "509800"
  },
  {
    "text": "Ricardo will talk more about this",
    "start": "509800",
    "end": "513200"
  },
  {
    "text": "um and then eventually GPC gives it to",
    "start": "513200",
    "end": "515919"
  },
  {
    "text": "the codec there's another copy and then",
    "start": "515919",
    "end": "519360"
  },
  {
    "text": "finally we get to the application so",
    "start": "519360",
    "end": "522680"
  },
  {
    "text": "here we've seen both the send and",
    "start": "522680",
    "end": "524880"
  },
  {
    "text": "receive paths with a lot of unwanted",
    "start": "524880",
    "end": "528000"
  },
  {
    "text": "copies um so at this point um we'll see",
    "start": "528000",
    "end": "532640"
  },
  {
    "text": "how we addressed uh this issue and we",
    "start": "532640",
    "end": "535839"
  },
  {
    "text": "actually have Paul here from LinkedIn",
    "start": "535839",
    "end": "537920"
  },
  {
    "text": "who did a bunch of work work uh in this",
    "start": "537920",
    "end": "541079"
  },
  {
    "text": "area and a big thanks to him uh so this",
    "start": "541079",
    "end": "545279"
  },
  {
    "text": "is the package that Paul added uh so",
    "start": "545279",
    "end": "548320"
  },
  {
    "text": "we've called it the M package and it",
    "start": "548320",
    "end": "550000"
  },
  {
    "text": "provides three major uh functionalities",
    "start": "550000",
    "end": "553640"
  },
  {
    "text": "uh the first one is the buffer it's",
    "start": "553640",
    "end": "555040"
  },
  {
    "text": "basically like a wrapped R counted bite",
    "start": "555040",
    "end": "558440"
  },
  {
    "text": "slice um and it provides uh ways to get",
    "start": "558440",
    "end": "563920"
  },
  {
    "text": "a reference free uh a reference and pass",
    "start": "563920",
    "end": "567440"
  },
  {
    "text": "around uh the buffer without copies and",
    "start": "567440",
    "end": "570399"
  },
  {
    "text": "also it can be returned to a pool",
    "start": "570399",
    "end": "572600"
  },
  {
    "text": "instead of just being garbage collected",
    "start": "572600",
    "end": "575240"
  },
  {
    "text": "the next one is a buffer slice which is",
    "start": "575240",
    "end": "577959"
  },
  {
    "text": "basically a slice of buffer uh buffers",
    "start": "577959",
    "end": "580959"
  },
  {
    "text": "or a collection of buffers uh because",
    "start": "580959",
    "end": "583640"
  },
  {
    "text": "grpc deals with a lot of Chunk data like",
    "start": "583640",
    "end": "586519"
  },
  {
    "text": "buffer slices make a lot of sense and",
    "start": "586519",
    "end": "589320"
  },
  {
    "text": "this is basically the type that is",
    "start": "589320",
    "end": "591480"
  },
  {
    "text": "passed around uh between",
    "start": "591480",
    "end": "594440"
  },
  {
    "text": "components and last but not the least is",
    "start": "594440",
    "end": "597120"
  },
  {
    "text": "the buffer pool uh it's basically",
    "start": "597120",
    "end": "599440"
  },
  {
    "text": "reusable pool of buffers so instead of",
    "start": "599440",
    "end": "602320"
  },
  {
    "text": "uh getting garbage collected we put it",
    "start": "602320",
    "end": "604440"
  },
  {
    "text": "back into the pool and uh reuse",
    "start": "604440",
    "end": "607200"
  },
  {
    "text": "it so this is how the encoding API V2",
    "start": "607200",
    "end": "611480"
  },
  {
    "text": "looks like so basically we have the same",
    "start": "611480",
    "end": "614000"
  },
  {
    "text": "Marshal and UNM marial functions but",
    "start": "614000",
    "end": "615680"
  },
  {
    "text": "instead of them taking a flat bite slice",
    "start": "615680",
    "end": "618920"
  },
  {
    "text": "they're now taking a mem buffer slice",
    "start": "618920",
    "end": "623519"
  },
  {
    "text": "um and uh we'll see some benchmarks um",
    "start": "623519",
    "end": "629040"
  },
  {
    "text": "to I have them here uh yeah I introduced",
    "start": "629040",
    "end": "632320"
  },
  {
    "text": "Paul before uh but uh Paul will be happy",
    "start": "632320",
    "end": "636240"
  },
  {
    "text": "to answer any questions um at the end of",
    "start": "636240",
    "end": "638279"
  },
  {
    "text": "the",
    "start": "638279",
    "end": "639000"
  },
  {
    "text": "talk um so current status here is that",
    "start": "639000",
    "end": "643839"
  },
  {
    "text": "uh Paul's PR has been merged and it's",
    "start": "643839",
    "end": "646240"
  },
  {
    "text": "been running for a while now in uh",
    "start": "646240",
    "end": "648920"
  },
  {
    "text": "production in LinkedIn and we are seeing",
    "start": "648920",
    "end": "652000"
  },
  {
    "text": "like huge gains for large messages we're",
    "start": "652000",
    "end": "655040"
  },
  {
    "text": "also seeing a little bit of reduction",
    "start": "655040",
    "end": "657360"
  },
  {
    "text": "for smaller messages we still investing",
    "start": "657360",
    "end": "659279"
  },
  {
    "text": "vestigating on ways to overcome that um",
    "start": "659279",
    "end": "663040"
  },
  {
    "text": "and Ricardo has been doing a bunch of",
    "start": "663040",
    "end": "665880"
  },
  {
    "text": "work which once that gets merged we hope",
    "start": "665880",
    "end": "669279"
  },
  {
    "text": "to see even better",
    "start": "669279",
    "end": "672200"
  },
  {
    "text": "performance um this",
    "start": "672200",
    "end": "674959"
  },
  {
    "text": "is not very viewable from out there but",
    "start": "674959",
    "end": "679160"
  },
  {
    "text": "uh basically a before and after that we",
    "start": "679160",
    "end": "681760"
  },
  {
    "text": "sort of tried to put in at the last",
    "start": "681760",
    "end": "683560"
  },
  {
    "text": "moment uh but uh we're happy to answer",
    "start": "683560",
    "end": "686959"
  },
  {
    "text": "questions on it uh towards the end of",
    "start": "686959",
    "end": "689160"
  },
  {
    "text": "the",
    "start": "689160",
    "end": "690000"
  },
  {
    "text": "talk um that's mostly it from me so I'll",
    "start": "690000",
    "end": "692959"
  },
  {
    "text": "hand it back to Ricardo to talk about",
    "start": "692959",
    "end": "695600"
  },
  {
    "text": "the work that he's been doing in the",
    "start": "695600",
    "end": "696880"
  },
  {
    "text": "transport",
    "start": "696880",
    "end": "699320"
  },
  {
    "text": "ler thank you sure and so we're back to",
    "start": "699320",
    "end": "702760"
  },
  {
    "text": "the transport so first I want to go",
    "start": "702760",
    "end": "704600"
  },
  {
    "text": "through what is a transfer right and so",
    "start": "704600",
    "end": "707480"
  },
  {
    "text": "the transfer is an abstraction that",
    "start": "707480",
    "end": "709360"
  },
  {
    "text": "quoting what isber once told me when I",
    "start": "709360",
    "end": "710920"
  },
  {
    "text": "was getting to learn all of this stuff",
    "start": "710920",
    "end": "712600"
  },
  {
    "text": "is what turns rpcs into a reality right",
    "start": "712600",
    "end": "715680"
  },
  {
    "text": "and to me it is what sits in between the",
    "start": "715680",
    "end": "717480"
  },
  {
    "text": "wire and grpc",
    "start": "717480",
    "end": "720160"
  },
  {
    "text": "so basically the transfer is in charge",
    "start": "720160",
    "end": "722079"
  },
  {
    "text": "of managing all the http2 semantics so",
    "start": "722079",
    "end": "724480"
  },
  {
    "text": "the rest of the application need not to",
    "start": "724480",
    "end": "726160"
  },
  {
    "text": "know what is an http2 stream or what is",
    "start": "726160",
    "end": "728560"
  },
  {
    "text": "an http2 frame right so the application",
    "start": "728560",
    "end": "730839"
  },
  {
    "text": "can just send the message and the",
    "start": "730839",
    "end": "732399"
  },
  {
    "text": "transfer will be in charge of encoding",
    "start": "732399",
    "end": "734320"
  },
  {
    "text": "all the HTTP to spec things that might",
    "start": "734320",
    "end": "736639"
  },
  {
    "text": "be needed for you to properly go in the",
    "start": "736639",
    "end": "738959"
  },
  {
    "text": "network and so talking about the",
    "start": "738959",
    "end": "741320"
  },
  {
    "text": "specifics of the transport uh we're",
    "start": "741320",
    "end": "743320"
  },
  {
    "text": "going to look at the http2 framer and so",
    "start": "743320",
    "end": "746240"
  },
  {
    "text": "the transfer has multiple components in",
    "start": "746240",
    "end": "747760"
  },
  {
    "text": "charge of different things like Focus",
    "start": "747760",
    "end": "749199"
  },
  {
    "text": "Control stream management uh amongst",
    "start": "749199",
    "end": "752000"
  },
  {
    "text": "other things however my project revolved",
    "start": "752000",
    "end": "753959"
  },
  {
    "text": "around the http2 framework and so the",
    "start": "753959",
    "end": "756440"
  },
  {
    "text": "http2 spec works by sending what we call",
    "start": "756440",
    "end": "759160"
  },
  {
    "text": "frames which are like the unit like the",
    "start": "759160",
    "end": "761880"
  },
  {
    "text": "most basic unit of communication in the",
    "start": "761880",
    "end": "763600"
  },
  {
    "text": "http2 spec and so we call the piece of",
    "start": "763600",
    "end": "765639"
  },
  {
    "text": "code that's in charge of making these",
    "start": "765639",
    "end": "767040"
  },
  {
    "text": "frames the",
    "start": "767040",
    "end": "768440"
  },
  {
    "text": "framer and so these frames can convey",
    "start": "768440",
    "end": "770880"
  },
  {
    "text": "information about the connection about",
    "start": "770880",
    "end": "772639"
  },
  {
    "text": "the sare or the client but it's but",
    "start": "772639",
    "end": "774480"
  },
  {
    "text": "mainly they're used for sending the data",
    "start": "774480",
    "end": "776160"
  },
  {
    "text": "that we actually want to transmit",
    "start": "776160",
    "end": "777360"
  },
  {
    "text": "through the network and so we currently",
    "start": "777360",
    "end": "779560"
  },
  {
    "text": "use the the the standard Library that's",
    "start": "779560",
    "end": "782120"
  },
  {
    "text": "provided by the go http2 experimental",
    "start": "782120",
    "end": "784399"
  },
  {
    "text": "Library however this work consisted in",
    "start": "784399",
    "end": "786199"
  },
  {
    "text": "replacing this implementation with a",
    "start": "786199",
    "end": "788480"
  },
  {
    "text": "custom one that fits our needs in",
    "start": "788480",
    "end": "791880"
  },
  {
    "text": "grpc and so what were the main pain",
    "start": "792160",
    "end": "795000"
  },
  {
    "text": "points that we had on the on the",
    "start": "795000",
    "end": "796519"
  },
  {
    "text": "standard implementation of the framer",
    "start": "796519",
    "end": "798560"
  },
  {
    "text": "the first one was as uh is word",
    "start": "798560",
    "end": "800920"
  },
  {
    "text": "mentioned the needed to materialize and",
    "start": "800920",
    "end": "802639"
  },
  {
    "text": "so what do I mean by this if we look at",
    "start": "802639",
    "end": "804519"
  },
  {
    "text": "the function signature that was provided",
    "start": "804519",
    "end": "806519"
  },
  {
    "text": "by the http2 framer we see that it takes",
    "start": "806519",
    "end": "809240"
  },
  {
    "text": "a single data slice and so this meant",
    "start": "809240",
    "end": "811440"
  },
  {
    "text": "that whenever we had like little pieces",
    "start": "811440",
    "end": "813160"
  },
  {
    "text": "of the RPC message in different bite",
    "start": "813160",
    "end": "815320"
  },
  {
    "text": "slices we would need to create a buffer",
    "start": "815320",
    "end": "817320"
  },
  {
    "text": "that was big enough to hold them both",
    "start": "817320",
    "end": "818639"
  },
  {
    "text": "and then copy that data into a single",
    "start": "818639",
    "end": "820440"
  },
  {
    "text": "contiguous buffer so that we can",
    "start": "820440",
    "end": "821680"
  },
  {
    "text": "actually call the API in this in the",
    "start": "821680",
    "end": "823560"
  },
  {
    "text": "current",
    "start": "823560",
    "end": "824399"
  },
  {
    "text": "framer another problem that we had was",
    "start": "824399",
    "end": "826639"
  },
  {
    "text": "when reading data from the network is we",
    "start": "826639",
    "end": "828600"
  },
  {
    "text": "talk about it briefly but basically it's",
    "start": "828600",
    "end": "831440"
  },
  {
    "text": "uh the framer has this thing called",
    "start": "831440",
    "end": "832759"
  },
  {
    "text": "framing validation and so basically it",
    "start": "832759",
    "end": "835000"
  },
  {
    "text": "would read bites from the network and",
    "start": "835000",
    "end": "836399"
  },
  {
    "text": "then store them in a buffer inside of",
    "start": "836399",
    "end": "837720"
  },
  {
    "text": "the framer and we get access to that",
    "start": "837720",
    "end": "840000"
  },
  {
    "text": "data through a pointer to that buffer so",
    "start": "840000",
    "end": "842399"
  },
  {
    "text": "whenever the read frame happened again",
    "start": "842399",
    "end": "844759"
  },
  {
    "text": "those that same buffer will be reused",
    "start": "844759",
    "end": "846680"
  },
  {
    "text": "and so the the data will be Rewritten",
    "start": "846680",
    "end": "848959"
  },
  {
    "text": "and this meant that the that the pointer",
    "start": "848959",
    "end": "850399"
  },
  {
    "text": "that we had to the previous frame will",
    "start": "850399",
    "end": "851720"
  },
  {
    "text": "be invalidated and so the problem with",
    "start": "851720",
    "end": "853959"
  },
  {
    "text": "this is that the time that we read the",
    "start": "853959",
    "end": "855800"
  },
  {
    "text": "bytes from the transport is not the same",
    "start": "855800",
    "end": "857839"
  },
  {
    "text": "that when we read the bytes into the",
    "start": "857839",
    "end": "859199"
  },
  {
    "text": "framer and so we needed to guarantee",
    "start": "859199",
    "end": "861759"
  },
  {
    "text": "that the data will leave long enough for",
    "start": "861759",
    "end": "863279"
  },
  {
    "text": "to be processed by other parts of the",
    "start": "863279",
    "end": "864680"
  },
  {
    "text": "application and so what ended up",
    "start": "864680",
    "end": "866160"
  },
  {
    "text": "happening is that we needed to copy the",
    "start": "866160",
    "end": "867600"
  },
  {
    "text": "data from the framer into a buffer that",
    "start": "867600",
    "end": "869880"
  },
  {
    "text": "we can guarantee will leave long",
    "start": "869880",
    "end": "872199"
  },
  {
    "text": "enough and finally the other problem",
    "start": "872199",
    "end": "874320"
  },
  {
    "text": "that the current implementation had was",
    "start": "874320",
    "end": "876600"
  },
  {
    "text": "that uh we had this was on the writing",
    "start": "876600",
    "end": "879079"
  },
  {
    "text": "path we have this optimization and in in",
    "start": "879079",
    "end": "881680"
  },
  {
    "text": "the transport which is called the buffer",
    "start": "881680",
    "end": "883480"
  },
  {
    "text": "Rider so essentially we don't want to do",
    "start": "883480",
    "end": "886720"
  },
  {
    "text": "a lot of rides for small messages",
    "start": "886720",
    "end": "888600"
  },
  {
    "text": "because doing a right into a connection",
    "start": "888600",
    "end": "889959"
  },
  {
    "text": "implies a cisal and that can be",
    "start": "889959",
    "end": "891320"
  },
  {
    "text": "expensive so we have this buffer Rider",
    "start": "891320",
    "end": "893759"
  },
  {
    "text": "that basically batches up those small",
    "start": "893759",
    "end": "895600"
  },
  {
    "text": "wres whenever and whenever we heat a",
    "start": "895600",
    "end": "897320"
  },
  {
    "text": "certain quot we then just flush that",
    "start": "897320",
    "end": "899240"
  },
  {
    "text": "whole buffer however the way the framer",
    "start": "899240",
    "end": "902320"
  },
  {
    "text": "works is by copying the data that you",
    "start": "902320",
    "end": "904560"
  },
  {
    "text": "pass into it into its own buffer and",
    "start": "904560",
    "end": "906399"
  },
  {
    "text": "then writing that data so we were",
    "start": "906399",
    "end": "908000"
  },
  {
    "text": "essentially having like redundant copies",
    "start": "908000",
    "end": "909800"
  },
  {
    "text": "because we would have the data that we",
    "start": "909800",
    "end": "910920"
  },
  {
    "text": "want to send through the network we were",
    "start": "910920",
    "end": "912600"
  },
  {
    "text": "copying it into the framer and then the",
    "start": "912600",
    "end": "914240"
  },
  {
    "text": "frameware will be copying it again into",
    "start": "914240",
    "end": "916000"
  },
  {
    "text": "our buffer provider so we can avoid that",
    "start": "916000",
    "end": "918079"
  },
  {
    "text": "copy thanks to our uh optimization there",
    "start": "918079",
    "end": "921639"
  },
  {
    "text": "and so that's uh I'm going to talk about",
    "start": "921639",
    "end": "924360"
  },
  {
    "text": "how I solve each one of these",
    "start": "924360",
    "end": "926920"
  },
  {
    "text": "problems so first we will take a scatter",
    "start": "926920",
    "end": "929519"
  },
  {
    "text": "gather approach for the API and what do",
    "start": "929519",
    "end": "931199"
  },
  {
    "text": "I mean by this so we can leverage the",
    "start": "931199",
    "end": "933240"
  },
  {
    "text": "new types introduced by the man package",
    "start": "933240",
    "end": "935120"
  },
  {
    "text": "and so the new API instead of taking a",
    "start": "935120",
    "end": "936959"
  },
  {
    "text": "flat bite slice you can take a buffer",
    "start": "936959",
    "end": "938519"
  },
  {
    "text": "slice that has all these pointers to",
    "start": "938519",
    "end": "940360"
  },
  {
    "text": "different buffers and then we only",
    "start": "940360",
    "end": "942519"
  },
  {
    "text": "actually write them to the buffer",
    "start": "942519",
    "end": "945040"
  },
  {
    "text": "writer on the other hand for the reading",
    "start": "945040",
    "end": "948040"
  },
  {
    "text": "validation we will essentially now have",
    "start": "948040",
    "end": "951079"
  },
  {
    "text": "a buffer pool so that we can read btes",
    "start": "951079",
    "end": "953519"
  },
  {
    "text": "from the network into the buffer from",
    "start": "953519",
    "end": "955040"
  },
  {
    "text": "the buffer pool and then give ownership",
    "start": "955040",
    "end": "956959"
  },
  {
    "text": "of that buffer into the rest of the",
    "start": "956959",
    "end": "958399"
  },
  {
    "text": "application that way the application can",
    "start": "958399",
    "end": "960560"
  },
  {
    "text": "keep that buffer for as long as it needs",
    "start": "960560",
    "end": "962519"
  },
  {
    "text": "and whenever it's done using it it can",
    "start": "962519",
    "end": "964000"
  },
  {
    "text": "return it to the pool for it to be",
    "start": "964000",
    "end": "965120"
  },
  {
    "text": "reused by the framer again and finally",
    "start": "965120",
    "end": "968360"
  },
  {
    "text": "the way we solve the last problem is by",
    "start": "968360",
    "end": "970519"
  },
  {
    "text": "removing the buffering inside of the",
    "start": "970519",
    "end": "972040"
  },
  {
    "text": "framer so essentially when we writing",
    "start": "972040",
    "end": "974279"
  },
  {
    "text": "data frame instead of copying the data",
    "start": "974279",
    "end": "976519"
  },
  {
    "text": "into a buffer that leaves inside of the",
    "start": "976519",
    "end": "977920"
  },
  {
    "text": "framer we will just write that same data",
    "start": "977920",
    "end": "980160"
  },
  {
    "text": "directly into our buffer writer so that",
    "start": "980160",
    "end": "982040"
  },
  {
    "text": "way we don't have like that redundancy",
    "start": "982040",
    "end": "983920"
  },
  {
    "text": "in",
    "start": "983920",
    "end": "985120"
  },
  {
    "text": "copies and so for the execution of this",
    "start": "985120",
    "end": "988079"
  },
  {
    "text": "uh project uh we expect wins on CPU",
    "start": "988079",
    "end": "990639"
  },
  {
    "text": "usage as we are going to be mainly",
    "start": "990639",
    "end": "992839"
  },
  {
    "text": "reducing the number of copies happening",
    "start": "992839",
    "end": "994360"
  },
  {
    "text": "inside of grpc we will be able to give",
    "start": "994360",
    "end": "997759"
  },
  {
    "text": "an option to opt out so if we found any",
    "start": "997759",
    "end": "999680"
  },
  {
    "text": "major bugs while the API stabilizes we",
    "start": "999680",
    "end": "1001920"
  },
  {
    "text": "can switch back to the old framer and",
    "start": "1001920",
    "end": "1004639"
  },
  {
    "text": "finally uh we still have Benchmark",
    "start": "1004639",
    "end": "1006440"
  },
  {
    "text": "spending as this work is ongoing I still",
    "start": "1006440",
    "end": "1008319"
  },
  {
    "text": "have a little bit more time left here at",
    "start": "1008319",
    "end": "1009920"
  },
  {
    "text": "Google uh and I'll be I'll be hopeful I",
    "start": "1009920",
    "end": "1013120"
  },
  {
    "text": "can finish it before I I",
    "start": "1013120",
    "end": "1014800"
  },
  {
    "text": "leave and so finally if we take all that",
    "start": "1014800",
    "end": "1017440"
  },
  {
    "text": "we've talked about today and put it",
    "start": "1017440",
    "end": "1019319"
  },
  {
    "text": "together in a single diagram we can take",
    "start": "1019319",
    "end": "1020920"
  },
  {
    "text": "back uh what iser was talking about in",
    "start": "1020920",
    "end": "1023800"
  },
  {
    "text": "when the sending path and as we can see",
    "start": "1023800",
    "end": "1025918"
  },
  {
    "text": "we've reduced all the copies as now we",
    "start": "1025919",
    "end": "1028438"
  },
  {
    "text": "don't need to copy into the codec we",
    "start": "1028439",
    "end": "1030280"
  },
  {
    "text": "don't need to copy out of the codec",
    "start": "1030280",
    "end": "1031640"
  },
  {
    "text": "since we have the the new uh M package",
    "start": "1031640",
    "end": "1034000"
  },
  {
    "text": "we don't need to copy for it for for we",
    "start": "1034000",
    "end": "1036678"
  },
  {
    "text": "to pass the data into the framer and the",
    "start": "1036679",
    "end": "1038678"
  },
  {
    "text": "only copy that remains is on the buffer",
    "start": "1038679",
    "end": "1040240"
  },
  {
    "text": "writer which is this like optimizations",
    "start": "1040240",
    "end": "1042480"
  },
  {
    "text": "that we have for batching up uh rights",
    "start": "1042480",
    "end": "1044798"
  },
  {
    "text": "into the network so that one we still",
    "start": "1044799",
    "end": "1047400"
  },
  {
    "text": "have and it's the same for the receive",
    "start": "1047400",
    "end": "1050480"
  },
  {
    "text": "path in which now we don't have to copy",
    "start": "1050480",
    "end": "1052400"
  },
  {
    "text": "except from when reading from the",
    "start": "1052400",
    "end": "1054480"
  },
  {
    "text": "network as we can now just use all these",
    "start": "1054480",
    "end": "1056559"
  },
  {
    "text": "new data types that we've introduced to",
    "start": "1056559",
    "end": "1058200"
  },
  {
    "text": "handle the ref counting and the pointers",
    "start": "1058200",
    "end": "1060720"
  },
  {
    "text": "to the",
    "start": "1060720",
    "end": "1062120"
  },
  {
    "text": "buffers and so that's pretty much",
    "start": "1062120",
    "end": "1063919"
  },
  {
    "text": "everything on our side thank you for",
    "start": "1063919",
    "end": "1065480"
  },
  {
    "text": "listening to me does anybody have any",
    "start": "1065480",
    "end": "1067480"
  },
  {
    "text": "questions yeah um first of all it was a",
    "start": "1067480",
    "end": "1070360"
  },
  {
    "text": "great talk thank you very much thank",
    "start": "1070360",
    "end": "1074000"
  },
  {
    "text": "you hi so if you use used the buffer",
    "start": "1075200",
    "end": "1079440"
  },
  {
    "text": "slice didn't you like um you had loose",
    "start": "1079440",
    "end": "1082640"
  },
  {
    "text": "coupling before that between the framing",
    "start": "1082640",
    "end": "1085320"
  },
  {
    "text": "and the the higher level buffers and now",
    "start": "1085320",
    "end": "1088799"
  },
  {
    "text": "to me it looks like we we lump together",
    "start": "1088799",
    "end": "1090799"
  },
  {
    "text": "a bunch of stuff um so we're like mixing",
    "start": "1090799",
    "end": "1093919"
  },
  {
    "text": "different levels of obstruction within",
    "start": "1093919",
    "end": "1095720"
  },
  {
    "text": "the buffer I'm wondering if you could",
    "start": "1095720",
    "end": "1098200"
  },
  {
    "text": "expand on that like how is it",
    "start": "1098200",
    "end": "1100360"
  },
  {
    "text": "implemented under the hood and how do",
    "start": "1100360",
    "end": "1102039"
  },
  {
    "text": "you maintain the pointers and make it",
    "start": "1102039",
    "end": "1104200"
  },
  {
    "text": "efficient yet Loosely coupled in terms",
    "start": "1104200",
    "end": "1106200"
  },
  {
    "text": "of software",
    "start": "1106200",
    "end": "1107600"
  },
  {
    "text": "design uh um do you want M",
    "start": "1107600",
    "end": "1111000"
  },
  {
    "text": "sense that yeah uh can we have one of",
    "start": "1111000",
    "end": "1114600"
  },
  {
    "text": "the other mics blue",
    "start": "1114600",
    "end": "1117880"
  },
  {
    "text": "one yeah so basically the way that the",
    "start": "1120760",
    "end": "1124400"
  },
  {
    "text": "buffer slice itself works is that it",
    "start": "1124400",
    "end": "1126760"
  },
  {
    "text": "exposes a bunch of apis that make it",
    "start": "1126760",
    "end": "1128799"
  },
  {
    "text": "look contiguous so you used to get just",
    "start": "1128799",
    "end": "1132520"
  },
  {
    "text": "a bite slice now you get a buffer slice",
    "start": "1132520",
    "end": "1135200"
  },
  {
    "text": "but as far as the way that you interact",
    "start": "1135200",
    "end": "1137120"
  },
  {
    "text": "with it it behaves functionally just",
    "start": "1137120",
    "end": "1139440"
  },
  {
    "text": "like a normal buffer SLI U number bite",
    "start": "1139440",
    "end": "1141360"
  },
  {
    "text": "slice so the only thing that you I mean",
    "start": "1141360",
    "end": "1145159"
  },
  {
    "text": "in most cases most applications won't",
    "start": "1145159",
    "end": "1147760"
  },
  {
    "text": "manually like ref them or free them",
    "start": "1147760",
    "end": "1150080"
  },
  {
    "text": "right it's only if you've got like",
    "start": "1150080",
    "end": "1151200"
  },
  {
    "text": "really high performance setups uh and",
    "start": "1151200",
    "end": "1154320"
  },
  {
    "text": "the default like protuff encoder will be",
    "start": "1154320",
    "end": "1157559"
  },
  {
    "text": "taking care of that for you but so in in",
    "start": "1157559",
    "end": "1160600"
  },
  {
    "text": "a scenario where you really have a",
    "start": "1160600",
    "end": "1161960"
  },
  {
    "text": "custom use case where you want to make",
    "start": "1161960",
    "end": "1163240"
  },
  {
    "text": "sure that you're reusing the memory as",
    "start": "1163240",
    "end": "1164640"
  },
  {
    "text": "much as possible or basically your",
    "start": "1164640",
    "end": "1167280"
  },
  {
    "text": "message type is is often like",
    "start": "1167280",
    "end": "1169520"
  },
  {
    "text": "referencing big underlying bite slices",
    "start": "1169520",
    "end": "1173240"
  },
  {
    "text": "you really just going to use the buffer",
    "start": "1173240",
    "end": "1174559"
  },
  {
    "text": "slice API pretty much itself directly",
    "start": "1174559",
    "end": "1177159"
  },
  {
    "text": "like you're not going to be managing",
    "start": "1177159",
    "end": "1178679"
  },
  {
    "text": "that so under the hood it does itself",
    "start": "1178679",
    "end": "1182400"
  },
  {
    "text": "try to like keep all the references",
    "start": "1182400",
    "end": "1184280"
  },
  {
    "text": "together like it's going to make sure",
    "start": "1184280",
    "end": "1186520"
  },
  {
    "text": "that you it's going to try to make it so",
    "start": "1186520",
    "end": "1188679"
  },
  {
    "text": "that you can't really shoot yourself in",
    "start": "1188679",
    "end": "1189919"
  },
  {
    "text": "the foot but it is something that you",
    "start": "1189919",
    "end": "1190919"
  },
  {
    "text": "have to be really careful with right if",
    "start": "1190919",
    "end": "1193120"
  },
  {
    "text": "you every time you take a reference for",
    "start": "1193120",
    "end": "1194960"
  },
  {
    "text": "example to the slice it makes a copy of",
    "start": "1194960",
    "end": "1197280"
  },
  {
    "text": "the slice without copying the underlying",
    "start": "1197280",
    "end": "1199480"
  },
  {
    "text": "bite buffers you're still taking an",
    "start": "1199480",
    "end": "1202720"
  },
  {
    "text": "extra allocation right so there's a",
    "start": "1202720",
    "end": "1204039"
  },
  {
    "text": "bunch of optimizations that are there to",
    "start": "1204039",
    "end": "1205480"
  },
  {
    "text": "make sure that there's as few",
    "start": "1205480",
    "end": "1207159"
  },
  {
    "text": "allocations as possible which make it",
    "start": "1207159",
    "end": "1209799"
  },
  {
    "text": "difficult to use but that's the cost of",
    "start": "1209799",
    "end": "1212039"
  },
  {
    "text": "performance I think at this point thank",
    "start": "1212039",
    "end": "1213919"
  },
  {
    "text": "you very",
    "start": "1213919",
    "end": "1216279"
  },
  {
    "text": "much uh there's a question",
    "start": "1216480",
    "end": "1220320"
  },
  {
    "text": "here all right nice presentation um is",
    "start": "1222240",
    "end": "1224720"
  },
  {
    "text": "this an issue one L go um how about Java",
    "start": "1224720",
    "end": "1227320"
  },
  {
    "text": "and python other G implement",
    "start": "1227320",
    "end": "1229159"
  },
  {
    "text": "or do you plan to address them in other",
    "start": "1229159",
    "end": "1231600"
  },
  {
    "text": "um so I know that Java did a bunch of",
    "start": "1231600",
    "end": "1234720"
  },
  {
    "text": "work I think a year ago something like",
    "start": "1234720",
    "end": "1237280"
  },
  {
    "text": "that where",
    "start": "1237280",
    "end": "1239000"
  },
  {
    "text": "um they made a lot of improvements for",
    "start": "1239000",
    "end": "1241960"
  },
  {
    "text": "performance and I I don't know the",
    "start": "1241960",
    "end": "1245520"
  },
  {
    "text": "details but they did something similar",
    "start": "1245520",
    "end": "1248000"
  },
  {
    "text": "uh wherein they were ref counting the",
    "start": "1248000",
    "end": "1249760"
  },
  {
    "text": "buffers and ensuring that um copies are",
    "start": "1249760",
    "end": "1252720"
  },
  {
    "text": "limited um with C++ I'm pretty sure like",
    "start": "1252720",
    "end": "1257559"
  },
  {
    "text": "performance has been been",
    "start": "1257559",
    "end": "1260280"
  },
  {
    "text": "like very critical for them from very",
    "start": "1260280",
    "end": "1263200"
  },
  {
    "text": "early on so I don't know what uh like",
    "start": "1263200",
    "end": "1267000"
  },
  {
    "text": "Frameworks or like what utilities they",
    "start": "1267000",
    "end": "1269520"
  },
  {
    "text": "have but I'm pretty sure um they have",
    "start": "1269520",
    "end": "1271880"
  },
  {
    "text": "something in there um this stock is very",
    "start": "1271880",
    "end": "1275440"
  },
  {
    "text": "specific about the problems that we had",
    "start": "1275440",
    "end": "1277240"
  },
  {
    "text": "in go and the solutions that we have for",
    "start": "1277240",
    "end": "1279720"
  },
  {
    "text": "them now okay I have um a couple of",
    "start": "1279720",
    "end": "1281679"
  },
  {
    "text": "other questions I'll see if anyone else",
    "start": "1281679",
    "end": "1283520"
  },
  {
    "text": "want to ask any",
    "start": "1283520",
    "end": "1285440"
  },
  {
    "text": "questions okay I have a a very",
    "start": "1285440",
    "end": "1287840"
  },
  {
    "text": "fundamental question the network so",
    "start": "1287840",
    "end": "1289360"
  },
  {
    "text": "before you guys write into the network",
    "start": "1289360",
    "end": "1292480"
  },
  {
    "text": "buffer U before it leaves uh for over",
    "start": "1292480",
    "end": "1295840"
  },
  {
    "text": "the network or on the wire um how does",
    "start": "1295840",
    "end": "1299000"
  },
  {
    "text": "it actually ensure that the network is",
    "start": "1299000",
    "end": "1301880"
  },
  {
    "text": "actually live um because uh the problem",
    "start": "1301880",
    "end": "1307159"
  },
  {
    "text": "that we are facing right now is between",
    "start": "1307159",
    "end": "1309640"
  },
  {
    "text": "the client and the server we have a",
    "start": "1309640",
    "end": "1311080"
  },
  {
    "text": "proxy engine and sometimes it doesn't",
    "start": "1311080",
    "end": "1315000"
  },
  {
    "text": "know if the underlying network is",
    "start": "1315000",
    "end": "1316159"
  },
  {
    "text": "actually broken it wouldn't tell the",
    "start": "1316159",
    "end": "1319320"
  },
  {
    "text": "client immediately that the connection",
    "start": "1319320",
    "end": "1320919"
  },
  {
    "text": "is broken so it actually holds on to it",
    "start": "1320919",
    "end": "1323080"
  },
  {
    "text": "so there are a bunch of settings that",
    "start": "1323080",
    "end": "1324279"
  },
  {
    "text": "goes on the um engine X to relay that",
    "start": "1324279",
    "end": "1328080"
  },
  {
    "text": "information that the cine connection is",
    "start": "1328080",
    "end": "1329960"
  },
  {
    "text": "broken to the server so um I was",
    "start": "1329960",
    "end": "1333440"
  },
  {
    "text": "wondering what controls we have or",
    "start": "1333440",
    "end": "1335799"
  },
  {
    "text": "options we have in place before we can",
    "start": "1335799",
    "end": "1338080"
  },
  {
    "text": "write into the network a network buffer",
    "start": "1338080",
    "end": "1340600"
  },
  {
    "text": "that you know theine connection is",
    "start": "1340600",
    "end": "1342080"
  },
  {
    "text": "actually broken and that there's no",
    "start": "1342080",
    "end": "1344039"
  },
  {
    "text": "point in shooting in the",
    "start": "1344039",
    "end": "1346360"
  },
  {
    "text": "dark so",
    "start": "1346360",
    "end": "1349640"
  },
  {
    "text": "JPC supports keep Al lives uh so you can",
    "start": "1349640",
    "end": "1352760"
  },
  {
    "text": "configure those keep alive uh parameters",
    "start": "1352760",
    "end": "1355600"
  },
  {
    "text": "on your client and the server and that",
    "start": "1355600",
    "end": "1357120"
  },
  {
    "text": "will help you detect broken connection",
    "start": "1357120",
    "end": "1359159"
  },
  {
    "text": "yeah so if I may so the keep live pings",
    "start": "1359159",
    "end": "1361159"
  },
  {
    "text": "are actually not carried forward",
    "start": "1361159",
    "end": "1365159"
  },
  {
    "text": "to uh server we have a problem with the",
    "start": "1365159",
    "end": "1368880"
  },
  {
    "text": "selection I think it's probably",
    "start": "1368880",
    "end": "1370039"
  },
  {
    "text": "limitation on the proxy selection engx",
    "start": "1370039",
    "end": "1372880"
  },
  {
    "text": "fundamentally I see so I'm not sure what",
    "start": "1372880",
    "end": "1375120"
  },
  {
    "text": "others I haven't actually tried them",
    "start": "1375120",
    "end": "1376400"
  },
  {
    "text": "like Eno or any other proxies so we have",
    "start": "1376400",
    "end": "1378640"
  },
  {
    "text": "a fundamental problem with that too okay",
    "start": "1378640",
    "end": "1381000"
  },
  {
    "text": "um looks like we're running out of time",
    "start": "1381000",
    "end": "1383600"
  },
  {
    "text": "uh but we can we can chat offline um and",
    "start": "1383600",
    "end": "1386520"
  },
  {
    "text": "follow up uh any other",
    "start": "1386520",
    "end": "1389960"
  },
  {
    "text": "questions um thanks this is probably the",
    "start": "1391400",
    "end": "1394159"
  },
  {
    "text": "biggest most important feature from grpc",
    "start": "1394159",
    "end": "1397360"
  },
  {
    "text": "like that I've wanted in a super long",
    "start": "1397360",
    "end": "1399279"
  },
  {
    "text": "time so um thank you for that work have",
    "start": "1399279",
    "end": "1401640"
  },
  {
    "text": "you considered you were mentioning kind",
    "start": "1401640",
    "end": "1403400"
  },
  {
    "text": "of like marshalling and UNM marshing uh",
    "start": "1403400",
    "end": "1407520"
  },
  {
    "text": "taking on any of the kind of work that",
    "start": "1407520",
    "end": "1409760"
  },
  {
    "text": "the VT protuff folks have done in order",
    "start": "1409760",
    "end": "1413039"
  },
  {
    "text": "to basically help with allocations on",
    "start": "1413039",
    "end": "1414840"
  },
  {
    "text": "the serialization front I think I can",
    "start": "1414840",
    "end": "1417720"
  },
  {
    "text": "probably speak to that a little bit um",
    "start": "1417720",
    "end": "1419919"
  },
  {
    "text": "we've been having a couple conversations",
    "start": "1419919",
    "end": "1421360"
  },
  {
    "text": "with them on the GitHub issues ETC uh",
    "start": "1421360",
    "end": "1424520"
  },
  {
    "text": "they're probably the best place to so",
    "start": "1424520",
    "end": "1426600"
  },
  {
    "text": "the way that it works today",
    "start": "1426600",
    "end": "1428600"
  },
  {
    "text": "unfortunately the Proto API which is you",
    "start": "1428600",
    "end": "1431520"
  },
  {
    "text": "know below the JPC apis takes in one",
    "start": "1431520",
    "end": "1434080"
  },
  {
    "text": "contiguous bite slice so the way that",
    "start": "1434080",
    "end": "1435840"
  },
  {
    "text": "the current encoding works is that it",
    "start": "1435840",
    "end": "1437919"
  },
  {
    "text": "actually will create a a buffer of the",
    "start": "1437919",
    "end": "1440480"
  },
  {
    "text": "corresponding size fully materialize the",
    "start": "1440480",
    "end": "1442400"
  },
  {
    "text": "buffer slice completely getting rid of",
    "start": "1442400",
    "end": "1444640"
  },
  {
    "text": "the advantage of it h of having it at",
    "start": "1444640",
    "end": "1446440"
  },
  {
    "text": "all pass it to the Proto encoder and",
    "start": "1446440",
    "end": "1449080"
  },
  {
    "text": "then do the reverse right um the VT",
    "start": "1449080",
    "end": "1453559"
  },
  {
    "text": "Proto team is probably the best place to",
    "start": "1453559",
    "end": "1454960"
  },
  {
    "text": "start making progress in that direction",
    "start": "1454960",
    "end": "1457400"
  },
  {
    "text": "and so we're I know that they have some",
    "start": "1457400",
    "end": "1459720"
  },
  {
    "text": "initial sort of thoughts on how it",
    "start": "1459720",
    "end": "1462520"
  },
  {
    "text": "should work but yeah we're keeping them",
    "start": "1462520",
    "end": "1464120"
  },
  {
    "text": "in the loop for",
    "start": "1464120",
    "end": "1465960"
  },
  {
    "text": "sure right yeah thank you everyone for",
    "start": "1465960",
    "end": "1468960"
  },
  {
    "text": "coming uh we're losing the room I guess",
    "start": "1468960",
    "end": "1471080"
  },
  {
    "text": "and thanks once again to",
    "start": "1471080",
    "end": "1472919"
  },
  {
    "text": "Paul thank you all",
    "start": "1472919",
    "end": "1477240"
  }
]