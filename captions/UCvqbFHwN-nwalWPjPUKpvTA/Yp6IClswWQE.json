[
  {
    "text": "okay so uh my name is david davinski and",
    "start": "399",
    "end": "4000"
  },
  {
    "text": "i'm from erlogix a small security",
    "start": "4000",
    "end": "5759"
  },
  {
    "text": "company in the uk and today i will be",
    "start": "5759",
    "end": "8320"
  },
  {
    "text": "talking about uh securing fluent bit by",
    "start": "8320",
    "end": "10880"
  },
  {
    "text": "way of buzzing",
    "start": "10880",
    "end": "12320"
  },
  {
    "text": "and i would like to thank both the",
    "start": "12320",
    "end": "14000"
  },
  {
    "text": "flimping maintainers calypso and also",
    "start": "14000",
    "end": "16240"
  },
  {
    "text": "the",
    "start": "16240",
    "end": "17840"
  },
  {
    "text": "cncf",
    "start": "17840",
    "end": "19039"
  },
  {
    "text": "for making this work possible which",
    "start": "19039",
    "end": "20480"
  },
  {
    "text": "means that they potentially funded this",
    "start": "20480",
    "end": "22240"
  },
  {
    "text": "work",
    "start": "22240",
    "end": "23439"
  },
  {
    "text": "so thank you very much for that and",
    "start": "23439",
    "end": "24960"
  },
  {
    "text": "obviously also developed the tools such",
    "start": "24960",
    "end": "26880"
  },
  {
    "text": "that we could do this work in the first",
    "start": "26880",
    "end": "28160"
  },
  {
    "text": "place",
    "start": "28160",
    "end": "29359"
  },
  {
    "text": "um",
    "start": "29359",
    "end": "31119"
  },
  {
    "text": "so i know a quick overview of what i",
    "start": "31119",
    "end": "32800"
  },
  {
    "text": "will talk about today is",
    "start": "32800",
    "end": "35120"
  },
  {
    "text": "i'm going to first give a brief",
    "start": "35120",
    "end": "36480"
  },
  {
    "text": "introduction to what is fussing",
    "start": "36480",
    "end": "38320"
  },
  {
    "text": "kind of like from a developer's",
    "start": "38320",
    "end": "40160"
  },
  {
    "text": "perspective",
    "start": "40160",
    "end": "41280"
  },
  {
    "text": "and then i'm going to talk about",
    "start": "41280",
    "end": "43360"
  },
  {
    "text": "how we first flew a bit and what the",
    "start": "43360",
    "end": "45120"
  },
  {
    "text": "results were that we found and then also",
    "start": "45120",
    "end": "47600"
  },
  {
    "text": "discuss what future work we have",
    "start": "47600",
    "end": "51760"
  },
  {
    "text": "so",
    "start": "51840",
    "end": "52960"
  },
  {
    "text": "in brief",
    "start": "52960",
    "end": "54320"
  },
  {
    "text": "how many he has",
    "start": "54320",
    "end": "56079"
  },
  {
    "text": "heard about fussing before",
    "start": "56079",
    "end": "58960"
  },
  {
    "text": "no one",
    "start": "58960",
    "end": "60000"
  },
  {
    "text": "oh one i think there was two two people",
    "start": "60000",
    "end": "62079"
  },
  {
    "text": "three people how how it keeps going okay",
    "start": "62079",
    "end": "64640"
  },
  {
    "text": "so essentially uh fussing is a way to",
    "start": "64640",
    "end": "66720"
  },
  {
    "text": "automate test case generation and test",
    "start": "66720",
    "end": "68880"
  },
  {
    "text": "case generation in this sentence means",
    "start": "68880",
    "end": "71600"
  },
  {
    "text": "input",
    "start": "71600",
    "end": "72400"
  },
  {
    "text": "to kind of like a proxy test that will",
    "start": "72400",
    "end": "74960"
  },
  {
    "text": "explore code coverage",
    "start": "74960",
    "end": "76799"
  },
  {
    "text": "in many different ways",
    "start": "76799",
    "end": "79439"
  },
  {
    "text": "and",
    "start": "79439",
    "end": "80240"
  },
  {
    "text": "the idea here is that fluent bit is",
    "start": "80240",
    "end": "81840"
  },
  {
    "text": "written in c",
    "start": "81840",
    "end": "83200"
  },
  {
    "text": "which makes it susceptible to memory",
    "start": "83200",
    "end": "85119"
  },
  {
    "text": "corruption issues and",
    "start": "85119",
    "end": "87360"
  },
  {
    "text": "the problem at hand that i will be",
    "start": "87360",
    "end": "89040"
  },
  {
    "text": "talking about in this case is how we can",
    "start": "89040",
    "end": "90320"
  },
  {
    "text": "use fussing",
    "start": "90320",
    "end": "91600"
  },
  {
    "text": "to generate test cases for fluent bit",
    "start": "91600",
    "end": "94400"
  },
  {
    "text": "and then find bugs in that way",
    "start": "94400",
    "end": "97439"
  },
  {
    "text": "and in short the solution is to",
    "start": "97439",
    "end": "99600"
  },
  {
    "text": "implement a lot of fusses",
    "start": "99600",
    "end": "101680"
  },
  {
    "text": "and running them continuously with a",
    "start": "101680",
    "end": "104240"
  },
  {
    "text": "project called oss first that i will",
    "start": "104240",
    "end": "105920"
  },
  {
    "text": "also get in depth with in this talk",
    "start": "105920",
    "end": "108399"
  },
  {
    "text": "so",
    "start": "108399",
    "end": "109119"
  },
  {
    "text": "this talk is about essentially finding",
    "start": "109119",
    "end": "111280"
  },
  {
    "text": "bugs in fluent bit using various",
    "start": "111280",
    "end": "114320"
  },
  {
    "text": "automatic test case generation",
    "start": "114320",
    "end": "115920"
  },
  {
    "text": "approaches and in this case fussing",
    "start": "115920",
    "end": "118960"
  },
  {
    "text": "so in short it is",
    "start": "118960",
    "end": "120880"
  },
  {
    "text": "this talk is about fussing fluent bit to",
    "start": "120880",
    "end": "122719"
  },
  {
    "text": "find bugs continuously with oss first",
    "start": "122719",
    "end": "125520"
  },
  {
    "text": "and the idea here is not just we're not",
    "start": "125520",
    "end": "128000"
  },
  {
    "text": "just looking to find bugs for the sake",
    "start": "128000",
    "end": "129840"
  },
  {
    "text": "of finding bugs but the idea is if you",
    "start": "129840",
    "end": "131840"
  },
  {
    "text": "keep finding bugs",
    "start": "131840",
    "end": "133360"
  },
  {
    "text": "eventually you will stop finding bugs",
    "start": "133360",
    "end": "135200"
  },
  {
    "text": "because you have found all the bugs that",
    "start": "135200",
    "end": "136480"
  },
  {
    "text": "are present",
    "start": "136480",
    "end": "138959"
  },
  {
    "text": "so",
    "start": "139120",
    "end": "140080"
  },
  {
    "text": "fasting introduction",
    "start": "140080",
    "end": "141680"
  },
  {
    "text": "fussing is essentially",
    "start": "141680",
    "end": "143360"
  },
  {
    "text": "a way to",
    "start": "143360",
    "end": "144959"
  },
  {
    "text": "generalize",
    "start": "144959",
    "end": "146319"
  },
  {
    "text": "unit tests in many ways this is",
    "start": "146319",
    "end": "148720"
  },
  {
    "text": "certainly not the whole truth but i",
    "start": "148720",
    "end": "150400"
  },
  {
    "text": "think that this is the way we have done",
    "start": "150400",
    "end": "152319"
  },
  {
    "text": "it for for fluent bit",
    "start": "152319",
    "end": "154160"
  },
  {
    "text": "and on the left you have uh",
    "start": "154160",
    "end": "157120"
  },
  {
    "text": "an example of if you were to test",
    "start": "157120",
    "end": "159680"
  },
  {
    "text": "uh api",
    "start": "159680",
    "end": "161519"
  },
  {
    "text": "with many different inputs you would",
    "start": "161519",
    "end": "162959"
  },
  {
    "text": "just have a sequential set of statements",
    "start": "162959",
    "end": "165599"
  },
  {
    "text": "testing the given api with input one",
    "start": "165599",
    "end": "167760"
  },
  {
    "text": "input two input three and so on and the",
    "start": "167760",
    "end": "170560"
  },
  {
    "text": "way you would kind of extrapolate this",
    "start": "170560",
    "end": "172319"
  },
  {
    "text": "into a fossa",
    "start": "172319",
    "end": "173840"
  },
  {
    "text": "is to",
    "start": "173840",
    "end": "174959"
  },
  {
    "text": "have a loop that calls into my api",
    "start": "174959",
    "end": "178000"
  },
  {
    "text": "and then instead of using fixed inputs",
    "start": "178000",
    "end": "179599"
  },
  {
    "text": "you will just ask the first give me some",
    "start": "179599",
    "end": "181760"
  },
  {
    "text": "input",
    "start": "181760",
    "end": "183440"
  },
  {
    "text": "and there is then a lot of underlying",
    "start": "183440",
    "end": "185440"
  },
  {
    "text": "technologies that means the input the",
    "start": "185440",
    "end": "187599"
  },
  {
    "text": "foster will give you",
    "start": "187599",
    "end": "189840"
  },
  {
    "text": "this kind of reason about it come up",
    "start": "189840",
    "end": "191840"
  },
  {
    "text": "with in a semi-random way",
    "start": "191840",
    "end": "194640"
  },
  {
    "text": "that makes sense in this context i'll",
    "start": "194640",
    "end": "196720"
  },
  {
    "text": "get into what makes sense means in",
    "start": "196720",
    "end": "199280"
  },
  {
    "text": "the next few slides",
    "start": "199280",
    "end": "201599"
  },
  {
    "text": "and the way it actually looks in code is",
    "start": "201599",
    "end": "204879"
  },
  {
    "text": "we have a very simple fossil down here",
    "start": "204879",
    "end": "206480"
  },
  {
    "text": "in the lower right corner",
    "start": "206480",
    "end": "208239"
  },
  {
    "text": "there's a fussing stop and that gives",
    "start": "208239",
    "end": "210640"
  },
  {
    "text": "you a buffer of data and this is the",
    "start": "210640",
    "end": "213760"
  },
  {
    "text": "kind of like random data that is given",
    "start": "213760",
    "end": "216080"
  },
  {
    "text": "to you by the fuzzer which you will then",
    "start": "216080",
    "end": "217920"
  },
  {
    "text": "have to propagate into the target code",
    "start": "217920",
    "end": "220080"
  },
  {
    "text": "that you are analyzing",
    "start": "220080",
    "end": "222879"
  },
  {
    "text": "so here's an example of a fossa that has",
    "start": "222879",
    "end": "225920"
  },
  {
    "text": "for the",
    "start": "225920",
    "end": "227120"
  },
  {
    "text": "it's a library called jason c",
    "start": "227120",
    "end": "229200"
  },
  {
    "text": "and the example fossa here essentially",
    "start": "229200",
    "end": "231120"
  },
  {
    "text": "explores all of the passing code",
    "start": "231120",
    "end": "234560"
  },
  {
    "text": "in this given json library and you can",
    "start": "234560",
    "end": "237519"
  },
  {
    "text": "see that the only thing it does is it",
    "start": "237519",
    "end": "239360"
  },
  {
    "text": "takes the",
    "start": "239360",
    "end": "240720"
  },
  {
    "text": "buffer of onsite integer 8 buffer it",
    "start": "240720",
    "end": "244159"
  },
  {
    "text": "interprets into a char pointer",
    "start": "244159",
    "end": "247200"
  },
  {
    "text": "so just typecast it and then it creates",
    "start": "247200",
    "end": "249439"
  },
  {
    "text": "a some type of struct here from the json",
    "start": "249439",
    "end": "252000"
  },
  {
    "text": "library and then it calls this json",
    "start": "252000",
    "end": "254959"
  },
  {
    "text": "tokenpar cx",
    "start": "254959",
    "end": "256880"
  },
  {
    "text": "and that will essentially",
    "start": "256880",
    "end": "259199"
  },
  {
    "text": "after a while",
    "start": "259199",
    "end": "261280"
  },
  {
    "text": "generate data such that all the data",
    "start": "261280",
    "end": "263840"
  },
  {
    "text": "passed to this function will explore all",
    "start": "263840",
    "end": "265840"
  },
  {
    "text": "this like code in this json token parse",
    "start": "265840",
    "end": "269600"
  },
  {
    "text": "function",
    "start": "269600",
    "end": "271360"
  },
  {
    "text": "and this is essentially what we are",
    "start": "271360",
    "end": "272880"
  },
  {
    "text": "looking to do for for fluent bit",
    "start": "272880",
    "end": "275919"
  },
  {
    "text": "so one of the myths that i would like to",
    "start": "275919",
    "end": "278000"
  },
  {
    "text": "debunk is that fasting is just random",
    "start": "278000",
    "end": "280400"
  },
  {
    "text": "testing and it's not going to work for",
    "start": "280400",
    "end": "282639"
  },
  {
    "text": "our project",
    "start": "282639",
    "end": "284080"
  },
  {
    "text": "because we have complex data structures",
    "start": "284080",
    "end": "286560"
  },
  {
    "text": "and so on",
    "start": "286560",
    "end": "288000"
  },
  {
    "text": "we have just gave a talk a few minutes",
    "start": "288000",
    "end": "289520"
  },
  {
    "text": "ago about fostering a lot of cncf",
    "start": "289520",
    "end": "291280"
  },
  {
    "text": "projects and this is something we often",
    "start": "291280",
    "end": "293360"
  },
  {
    "text": "hear from cncf maintainers that random",
    "start": "293360",
    "end": "296240"
  },
  {
    "text": "testing is not going to work in our",
    "start": "296240",
    "end": "297840"
  },
  {
    "text": "example",
    "start": "297840",
    "end": "299440"
  },
  {
    "text": "the truth is that fussing did start as",
    "start": "299440",
    "end": "301840"
  },
  {
    "text": "random testing that's how it started 30",
    "start": "301840",
    "end": "303840"
  },
  {
    "text": "years ago but since then there has been",
    "start": "303840",
    "end": "305919"
  },
  {
    "text": "a lot of academic work a lot of",
    "start": "305919",
    "end": "308240"
  },
  {
    "text": "practitioners and so on really trying to",
    "start": "308240",
    "end": "310639"
  },
  {
    "text": "optimize this strategy",
    "start": "310639",
    "end": "312400"
  },
  {
    "text": "or this technique and modern days",
    "start": "312400",
    "end": "314160"
  },
  {
    "text": "fosters are not really random testers",
    "start": "314160",
    "end": "315840"
  },
  {
    "text": "anymore it's more accurate to call them",
    "start": "315840",
    "end": "318080"
  },
  {
    "text": "generic genetic mutational algorithms",
    "start": "318080",
    "end": "321280"
  },
  {
    "text": "so it's essentially ways to",
    "start": "321280",
    "end": "323520"
  },
  {
    "text": "and also here it should say that modern",
    "start": "323520",
    "end": "326080"
  },
  {
    "text": "days fusses",
    "start": "326080",
    "end": "327199"
  },
  {
    "text": "refer to coverage guided forces",
    "start": "327199",
    "end": "329600"
  },
  {
    "text": "and there are hundreds of academic",
    "start": "329600",
    "end": "331280"
  },
  {
    "text": "papers",
    "start": "331280",
    "end": "332400"
  },
  {
    "text": "on how to improve fussing in the last",
    "start": "332400",
    "end": "334320"
  },
  {
    "text": "decade or so",
    "start": "334320",
    "end": "335919"
  },
  {
    "text": "so",
    "start": "335919",
    "end": "336800"
  },
  {
    "text": "this uh just a little heads up if if you",
    "start": "336800",
    "end": "339440"
  },
  {
    "text": "have this kind of view or have heard",
    "start": "339440",
    "end": "341440"
  },
  {
    "text": "that it's random testing it's a lot more",
    "start": "341440",
    "end": "343120"
  },
  {
    "text": "than that as well",
    "start": "343120",
    "end": "344880"
  },
  {
    "text": "and i'm going to try and argue a little",
    "start": "344880",
    "end": "346560"
  },
  {
    "text": "bit",
    "start": "346560",
    "end": "347280"
  },
  {
    "text": "about this so the way a faucet works is",
    "start": "347280",
    "end": "349520"
  },
  {
    "text": "that",
    "start": "349520",
    "end": "351039"
  },
  {
    "text": "it has this",
    "start": "351039",
    "end": "352479"
  },
  {
    "text": "corpus set we call it which is uh just a",
    "start": "352479",
    "end": "355199"
  },
  {
    "text": "lot of inputs which corresponds to the",
    "start": "355199",
    "end": "358240"
  },
  {
    "text": "buffers that you will get as input to",
    "start": "358240",
    "end": "359840"
  },
  {
    "text": "this function data buffer here",
    "start": "359840",
    "end": "362160"
  },
  {
    "text": "you have a lot of inputs in this corpus",
    "start": "362160",
    "end": "363759"
  },
  {
    "text": "set and then the fuzzer will over and",
    "start": "363759",
    "end": "366160"
  },
  {
    "text": "over again",
    "start": "366160",
    "end": "367280"
  },
  {
    "text": "take",
    "start": "367280",
    "end": "368160"
  },
  {
    "text": "a seed from this corpus",
    "start": "368160",
    "end": "371280"
  },
  {
    "text": "mutate it a little bit and the mutation",
    "start": "371280",
    "end": "373280"
  },
  {
    "text": "here will have a random element and then",
    "start": "373280",
    "end": "375120"
  },
  {
    "text": "it will execute your target program with",
    "start": "375120",
    "end": "377280"
  },
  {
    "text": "that given uh input",
    "start": "377280",
    "end": "379520"
  },
  {
    "text": "the program will then have been built or",
    "start": "379520",
    "end": "381520"
  },
  {
    "text": "compiled in a certain way that includes",
    "start": "381520",
    "end": "383520"
  },
  {
    "text": "a lot of instrumentation",
    "start": "383520",
    "end": "385600"
  },
  {
    "text": "that the foster will use to determine",
    "start": "385600",
    "end": "387520"
  },
  {
    "text": "what was essentially the code coverage",
    "start": "387520",
    "end": "389840"
  },
  {
    "text": "of the program when you execute it with",
    "start": "389840",
    "end": "391680"
  },
  {
    "text": "a given input",
    "start": "391680",
    "end": "393280"
  },
  {
    "text": "and the idea is then whenever you",
    "start": "393280",
    "end": "395039"
  },
  {
    "text": "execute a program",
    "start": "395039",
    "end": "396720"
  },
  {
    "text": "you track the coverage",
    "start": "396720",
    "end": "399120"
  },
  {
    "text": "if it found garbage that the fafsa had",
    "start": "399120",
    "end": "400960"
  },
  {
    "text": "not previously seen it takes this",
    "start": "400960",
    "end": "403039"
  },
  {
    "text": "mutated input back into the core bus",
    "start": "403039",
    "end": "406400"
  },
  {
    "text": "and",
    "start": "406400",
    "end": "407680"
  },
  {
    "text": "if it had already seen this coverage it",
    "start": "407680",
    "end": "409680"
  },
  {
    "text": "just discards the input so so it's like",
    "start": "409680",
    "end": "412479"
  },
  {
    "text": "keeps going generating it has this copy",
    "start": "412479",
    "end": "414880"
  },
  {
    "text": "set takes an input mutates it a little",
    "start": "414880",
    "end": "417280"
  },
  {
    "text": "bit executes the program sees what the",
    "start": "417280",
    "end": "419520"
  },
  {
    "text": "coverage is if it was new",
    "start": "419520",
    "end": "421919"
  },
  {
    "text": "save that input into the copa set if not",
    "start": "421919",
    "end": "424560"
  },
  {
    "text": "further away",
    "start": "424560",
    "end": "426000"
  },
  {
    "text": "and this will drastically reduce the",
    "start": "426000",
    "end": "428240"
  },
  {
    "text": "complexity it takes to find inputs that",
    "start": "428240",
    "end": "430960"
  },
  {
    "text": "explore the code on the analysis",
    "start": "430960",
    "end": "433599"
  },
  {
    "text": "so say for example if you have this",
    "start": "433599",
    "end": "435520"
  },
  {
    "text": "symbol c program on the right",
    "start": "435520",
    "end": "437759"
  },
  {
    "text": "composed of four if statements",
    "start": "437759",
    "end": "440960"
  },
  {
    "text": "it has it will check the first four",
    "start": "440960",
    "end": "442880"
  },
  {
    "text": "bytes of a given buffer if they're equal",
    "start": "442880",
    "end": "444720"
  },
  {
    "text": "to a b c d",
    "start": "444720",
    "end": "446319"
  },
  {
    "text": "and if we just were to do random testing",
    "start": "446319",
    "end": "448720"
  },
  {
    "text": "we essentially had one",
    "start": "448720",
    "end": "450479"
  },
  {
    "text": "in two to 32 chance of guessing this",
    "start": "450479",
    "end": "452960"
  },
  {
    "text": "right because we would have to guess",
    "start": "452960",
    "end": "454880"
  },
  {
    "text": "four buffers sorry for four bytes which",
    "start": "454880",
    "end": "457280"
  },
  {
    "text": "is 32 bits",
    "start": "457280",
    "end": "459039"
  },
  {
    "text": "but in code coverage sorry using fussing",
    "start": "459039",
    "end": "461520"
  },
  {
    "text": "code coverage coverage guided fussing",
    "start": "461520",
    "end": "463440"
  },
  {
    "text": "sorry this will be reduced to",
    "start": "463440",
    "end": "467360"
  },
  {
    "text": "two lifted to the eight so we have to",
    "start": "467360",
    "end": "469280"
  },
  {
    "text": "guess each byte one at the time",
    "start": "469280",
    "end": "471919"
  },
  {
    "text": "which will be one and two to the 56",
    "start": "471919",
    "end": "474639"
  },
  {
    "text": "chance of guessing each byte times four",
    "start": "474639",
    "end": "477759"
  },
  {
    "text": "so let me show you what this means in",
    "start": "477759",
    "end": "479120"
  },
  {
    "text": "practice so at the first we start with",
    "start": "479120",
    "end": "480960"
  },
  {
    "text": "no seed and we have to just guess the",
    "start": "480960",
    "end": "482639"
  },
  {
    "text": "first byte okay we have a one out of 256",
    "start": "482639",
    "end": "486240"
  },
  {
    "text": "chance of guessing it right so let's say",
    "start": "486240",
    "end": "487599"
  },
  {
    "text": "we get it right after 256.",
    "start": "487599",
    "end": "489919"
  },
  {
    "text": "then we save that input the a and put it",
    "start": "489919",
    "end": "492400"
  },
  {
    "text": "in our core bus",
    "start": "492400",
    "end": "493919"
  },
  {
    "text": "and now we will just start guessing the",
    "start": "493919",
    "end": "495840"
  },
  {
    "text": "next byte because we have already",
    "start": "495840",
    "end": "497120"
  },
  {
    "text": "advanced through the first if statement",
    "start": "497120",
    "end": "499280"
  },
  {
    "text": "here",
    "start": "499280",
    "end": "500319"
  },
  {
    "text": "and again",
    "start": "500319",
    "end": "501360"
  },
  {
    "text": "it will take 256 chance of getting it",
    "start": "501360",
    "end": "504080"
  },
  {
    "text": "and that just keeps going and eventually",
    "start": "504080",
    "end": "506240"
  },
  {
    "text": "we have guessed all four bites",
    "start": "506240",
    "end": "508639"
  },
  {
    "text": "in a thousand 24 times",
    "start": "508639",
    "end": "511599"
  },
  {
    "text": "and this is really where so like the",
    "start": "511599",
    "end": "513200"
  },
  {
    "text": "coverage guiding element of frosting",
    "start": "513200",
    "end": "514959"
  },
  {
    "text": "which kind of became a thing around 10",
    "start": "514959",
    "end": "516640"
  },
  {
    "text": "years ago kind of changed the whole way",
    "start": "516640",
    "end": "519360"
  },
  {
    "text": "and",
    "start": "519360",
    "end": "521279"
  },
  {
    "text": "change the whole way of fossiling and",
    "start": "521279",
    "end": "522959"
  },
  {
    "text": "there are even examples online where you",
    "start": "522959",
    "end": "525120"
  },
  {
    "text": "can generate for example if you were to",
    "start": "525120",
    "end": "526800"
  },
  {
    "text": "fuss a",
    "start": "526800",
    "end": "528320"
  },
  {
    "text": "image parser",
    "start": "528320",
    "end": "529920"
  },
  {
    "text": "the first will start to generate",
    "start": "529920",
    "end": "531920"
  },
  {
    "text": "so like valid images of you know",
    "start": "531920",
    "end": "534480"
  },
  {
    "text": "arbitrary looking and they're like",
    "start": "534480",
    "end": "536480"
  },
  {
    "text": "examples of where you just have a corpus",
    "start": "536480",
    "end": "538000"
  },
  {
    "text": "of random pngs generated by coverage",
    "start": "538000",
    "end": "540640"
  },
  {
    "text": "guided flossing",
    "start": "540640",
    "end": "542640"
  },
  {
    "text": "so in this sense this is like why it",
    "start": "542640",
    "end": "544560"
  },
  {
    "text": "reduces the complexity of",
    "start": "544560",
    "end": "546720"
  },
  {
    "text": "guessing inputs",
    "start": "546720",
    "end": "548720"
  },
  {
    "text": "okay",
    "start": "548720",
    "end": "549760"
  },
  {
    "text": "so when we are to do",
    "start": "549760",
    "end": "553120"
  },
  {
    "text": "fussing requires a lot of management",
    "start": "554399",
    "end": "556160"
  },
  {
    "text": "because we need to save the core bus we",
    "start": "556160",
    "end": "558399"
  },
  {
    "text": "need to like keep track of all the box",
    "start": "558399",
    "end": "560800"
  },
  {
    "text": "we need to make sure whether box are",
    "start": "560800",
    "end": "562399"
  },
  {
    "text": "found are reported and all this stuff",
    "start": "562399",
    "end": "564959"
  },
  {
    "text": "and this takes a a lot of management to",
    "start": "564959",
    "end": "567200"
  },
  {
    "text": "do",
    "start": "567200",
    "end": "568240"
  },
  {
    "text": "so when we when we integrated fasting",
    "start": "568240",
    "end": "569839"
  },
  {
    "text": "into fluent bit we need we needed to",
    "start": "569839",
    "end": "571200"
  },
  {
    "text": "have some way of",
    "start": "571200",
    "end": "572720"
  },
  {
    "text": "doing this at a infrastructure level",
    "start": "572720",
    "end": "574880"
  },
  {
    "text": "rather than just running our fusses a",
    "start": "574880",
    "end": "577200"
  },
  {
    "text": "little bit every monday or so we need to",
    "start": "577200",
    "end": "579360"
  },
  {
    "text": "have a like big infrastructure that will",
    "start": "579360",
    "end": "581839"
  },
  {
    "text": "take care of all of this for us and we",
    "start": "581839",
    "end": "584080"
  },
  {
    "text": "just write a few fusses",
    "start": "584080",
    "end": "586399"
  },
  {
    "text": "and then the",
    "start": "586399",
    "end": "587600"
  },
  {
    "text": "infrastructure will take care of the",
    "start": "587600",
    "end": "588720"
  },
  {
    "text": "rest",
    "start": "588720",
    "end": "589760"
  },
  {
    "text": "and all of these things so like running",
    "start": "589760",
    "end": "592080"
  },
  {
    "text": "the fusses continuously de-duplicating",
    "start": "592080",
    "end": "594640"
  },
  {
    "text": "any bugs found",
    "start": "594640",
    "end": "596399"
  },
  {
    "text": "managing running of the fossils",
    "start": "596399",
    "end": "598080"
  },
  {
    "text": "themselves and also all the others like",
    "start": "598080",
    "end": "600640"
  },
  {
    "text": "resource management related",
    "start": "600640",
    "end": "602880"
  },
  {
    "text": "we have this tool called oss to do this",
    "start": "602880",
    "end": "607040"
  },
  {
    "text": "and oss first is a service which",
    "start": "607040",
    "end": "610160"
  },
  {
    "text": "comes in the form of a github repository",
    "start": "610160",
    "end": "612800"
  },
  {
    "text": "that is run by google and the only thing",
    "start": "612800",
    "end": "615360"
  },
  {
    "text": "you do there is you essentially",
    "start": "615360",
    "end": "616959"
  },
  {
    "text": "integrate your project into oss first by",
    "start": "616959",
    "end": "620240"
  },
  {
    "text": "implementing a bunch of fusses writing a",
    "start": "620240",
    "end": "622320"
  },
  {
    "text": "simple docker file and some build",
    "start": "622320",
    "end": "623920"
  },
  {
    "text": "scripts to be put in the in the in the",
    "start": "623920",
    "end": "626399"
  },
  {
    "text": "github repository and then google will",
    "start": "626399",
    "end": "628640"
  },
  {
    "text": "start running all of your firsts",
    "start": "628640",
    "end": "630480"
  },
  {
    "text": "continuously over time",
    "start": "630480",
    "end": "632800"
  },
  {
    "text": "so you integrate and then they will just",
    "start": "632800",
    "end": "634480"
  },
  {
    "text": "run your fosters indefinitely whenever",
    "start": "634480",
    "end": "636880"
  },
  {
    "text": "the first find bugs it will report it to",
    "start": "636880",
    "end": "638720"
  },
  {
    "text": "you",
    "start": "638720",
    "end": "639839"
  },
  {
    "text": "and",
    "start": "639839",
    "end": "641120"
  },
  {
    "text": "they will also deduplicate remove any",
    "start": "641120",
    "end": "643200"
  },
  {
    "text": "like false positives and so on some",
    "start": "643200",
    "end": "645040"
  },
  {
    "text": "false concepts",
    "start": "645040",
    "end": "646399"
  },
  {
    "text": "um",
    "start": "646399",
    "end": "647760"
  },
  {
    "text": "okay",
    "start": "647760",
    "end": "648560"
  },
  {
    "text": "and so google will take care of building",
    "start": "648560",
    "end": "650720"
  },
  {
    "text": "and running the fossils reporting when",
    "start": "650720",
    "end": "652560"
  },
  {
    "text": "bugs are found",
    "start": "652560",
    "end": "653839"
  },
  {
    "text": "verifying when fixes are found so",
    "start": "653839",
    "end": "655600"
  },
  {
    "text": "whenever we get a bug in fluid bit we",
    "start": "655600",
    "end": "657920"
  },
  {
    "text": "get like a stack trace uh reducing input",
    "start": "657920",
    "end": "661519"
  },
  {
    "text": "and what we will then do is we will fix",
    "start": "661519",
    "end": "663920"
  },
  {
    "text": "the bug on the fluid side and then",
    "start": "663920",
    "end": "666079"
  },
  {
    "text": "google will also verify it for us that",
    "start": "666079",
    "end": "668160"
  },
  {
    "text": "our bugs have been found sorry our bugs",
    "start": "668160",
    "end": "670160"
  },
  {
    "text": "have been fixed so they simply take care",
    "start": "670160",
    "end": "672160"
  },
  {
    "text": "of all of the management and we only",
    "start": "672160",
    "end": "674079"
  },
  {
    "text": "have to write the actual code that tests",
    "start": "674079",
    "end": "676480"
  },
  {
    "text": "fluent bit and also do the fixes",
    "start": "676480",
    "end": "678320"
  },
  {
    "text": "themselves",
    "start": "678320",
    "end": "680720"
  },
  {
    "text": "so",
    "start": "680720",
    "end": "681519"
  },
  {
    "text": "in terms of fuzzing fluent bit",
    "start": "681519",
    "end": "683839"
  },
  {
    "text": "the workflow the whole kind of like",
    "start": "683839",
    "end": "685519"
  },
  {
    "text": "procedure that we have had over the last",
    "start": "685519",
    "end": "687680"
  },
  {
    "text": "two years approximately the first step",
    "start": "687680",
    "end": "690000"
  },
  {
    "text": "was to integrate fluent bit into oss",
    "start": "690000",
    "end": "692560"
  },
  {
    "text": "first",
    "start": "692560",
    "end": "693760"
  },
  {
    "text": "implement a bunch of fusses that hit the",
    "start": "693760",
    "end": "695760"
  },
  {
    "text": "fluent bit code",
    "start": "695760",
    "end": "697680"
  },
  {
    "text": "then allow oss first to run this these",
    "start": "697680",
    "end": "700399"
  },
  {
    "text": "fosters for a while then we would see",
    "start": "700399",
    "end": "702560"
  },
  {
    "text": "bugs start to appear",
    "start": "702560",
    "end": "705120"
  },
  {
    "text": "we would then fix the bugs and then we",
    "start": "705120",
    "end": "706720"
  },
  {
    "text": "would simply rinse and repeat write more",
    "start": "706720",
    "end": "708560"
  },
  {
    "text": "fasters to explore more code",
    "start": "708560",
    "end": "710560"
  },
  {
    "text": "and fix all the the box that they",
    "start": "710560",
    "end": "713360"
  },
  {
    "text": "report",
    "start": "713360",
    "end": "716320"
  },
  {
    "text": "so here's an example of a faster for the",
    "start": "716320",
    "end": "718399"
  },
  {
    "text": "fluency code it's",
    "start": "718399",
    "end": "720399"
  },
  {
    "text": "essentially all of the fusses that we",
    "start": "720399",
    "end": "722079"
  },
  {
    "text": "have written are very similar to the",
    "start": "722079",
    "end": "724000"
  },
  {
    "text": "unit tests that you will find in the",
    "start": "724000",
    "end": "725519"
  },
  {
    "text": "fluent bit repository",
    "start": "725519",
    "end": "727440"
  },
  {
    "text": "and you can see that so this is the full",
    "start": "727440",
    "end": "729600"
  },
  {
    "text": "source code of the code by the way",
    "start": "729600",
    "end": "731680"
  },
  {
    "text": "and this will essentially explore all of",
    "start": "731680",
    "end": "734000"
  },
  {
    "text": "the code inside of the flb",
    "start": "734000",
    "end": "736399"
  },
  {
    "text": "serpee time function so we take the data",
    "start": "736399",
    "end": "739839"
  },
  {
    "text": "given to us by the fossa which is this",
    "start": "739839",
    "end": "741760"
  },
  {
    "text": "argument up",
    "start": "741760",
    "end": "742839"
  },
  {
    "text": "here we then convert this data into two",
    "start": "742839",
    "end": "746959"
  },
  {
    "text": "null terminated strings because it will",
    "start": "746959",
    "end": "748639"
  },
  {
    "text": "just be a complete binary blob the data",
    "start": "748639",
    "end": "750959"
  },
  {
    "text": "that we originally get and fluent bit",
    "start": "750959",
    "end": "753680"
  },
  {
    "text": "functions use null terminated strings so",
    "start": "753680",
    "end": "756079"
  },
  {
    "text": "we kind of have to wrap it into data",
    "start": "756079",
    "end": "757680"
  },
  {
    "text": "that that fluent bit understands",
    "start": "757680",
    "end": "760720"
  },
  {
    "text": "and then it will call into the",
    "start": "760720",
    "end": "762639"
  },
  {
    "text": "serpee time function",
    "start": "762639",
    "end": "764880"
  },
  {
    "text": "you can see the link here to the fuzzer",
    "start": "764880",
    "end": "767040"
  },
  {
    "text": "another example is a phosphate we have",
    "start": "767040",
    "end": "769680"
  },
  {
    "text": "for the json passing logic in fluent bit",
    "start": "769680",
    "end": "772880"
  },
  {
    "text": "and again it's a very small stop 10",
    "start": "772880",
    "end": "775200"
  },
  {
    "text": "lines of code where essentially only two",
    "start": "775200",
    "end": "777279"
  },
  {
    "text": "of the lines are the important ones",
    "start": "777279",
    "end": "779279"
  },
  {
    "text": "we create a parser",
    "start": "779279",
    "end": "781519"
  },
  {
    "text": "and in this case it's a json parser",
    "start": "781519",
    "end": "784720"
  },
  {
    "text": "and then we and then we simply pass the",
    "start": "784720",
    "end": "786800"
  },
  {
    "text": "data",
    "start": "786800",
    "end": "788240"
  },
  {
    "text": "data and size here",
    "start": "788240",
    "end": "789920"
  },
  {
    "text": "that is given to us by uh the fossa we",
    "start": "789920",
    "end": "792320"
  },
  {
    "text": "simply like use that as input to the",
    "start": "792320",
    "end": "794560"
  },
  {
    "text": "passing routines and this will explore",
    "start": "794560",
    "end": "798160"
  },
  {
    "text": "almost all i believe of the code under",
    "start": "798160",
    "end": "800399"
  },
  {
    "text": "the in the flb underscore pass",
    "start": "800399",
    "end": "802560"
  },
  {
    "text": "underscore dual routine there a few",
    "start": "802560",
    "end": "804079"
  },
  {
    "text": "caveats of some code it won't be",
    "start": "804079",
    "end": "805519"
  },
  {
    "text": "exploring i'll get into that later but",
    "start": "805519",
    "end": "808399"
  },
  {
    "text": "those are like the small stops that we",
    "start": "808399",
    "end": "810880"
  },
  {
    "text": "write in order to fuss the fluent big",
    "start": "810880",
    "end": "812839"
  },
  {
    "text": "code so very simple very much like unit",
    "start": "812839",
    "end": "816000"
  },
  {
    "text": "tests the only difference is that we",
    "start": "816000",
    "end": "818480"
  },
  {
    "text": "don't have specific data here we kind of",
    "start": "818480",
    "end": "820480"
  },
  {
    "text": "have data provided by the fossil",
    "start": "820480",
    "end": "824240"
  },
  {
    "text": "so all of this code is available all of",
    "start": "824240",
    "end": "826240"
  },
  {
    "text": "the fusses for bit are available in test",
    "start": "826240",
    "end": "829120"
  },
  {
    "text": "slash internal slash fossus and there's",
    "start": "829120",
    "end": "831839"
  },
  {
    "text": "also a pdf report in the film bit",
    "start": "831839",
    "end": "834000"
  },
  {
    "text": "repository uh i think from a year ago or",
    "start": "834000",
    "end": "836800"
  },
  {
    "text": "so where we document a lot of the",
    "start": "836800",
    "end": "838240"
  },
  {
    "text": "findings at that stage and the the",
    "start": "838240",
    "end": "840800"
  },
  {
    "text": "fuzzes that we wrote",
    "start": "840800",
    "end": "843120"
  },
  {
    "text": "and the focus so far in terms of forcing",
    "start": "843120",
    "end": "844880"
  },
  {
    "text": "fluid has been on first of the code in",
    "start": "844880",
    "end": "846560"
  },
  {
    "text": "the src repository",
    "start": "846560",
    "end": "849519"
  },
  {
    "text": "so",
    "start": "849519",
    "end": "850399"
  },
  {
    "text": "the",
    "start": "850399",
    "end": "851360"
  },
  {
    "text": "code coverage has visualized achieved by",
    "start": "851360",
    "end": "853440"
  },
  {
    "text": "the current first i think that there are",
    "start": "853440",
    "end": "854800"
  },
  {
    "text": "around 15 verses",
    "start": "854800",
    "end": "856959"
  },
  {
    "text": "and the code coverage we have so far",
    "start": "856959",
    "end": "859279"
  },
  {
    "text": "is just about 40 44 of the code in src",
    "start": "859279",
    "end": "863680"
  },
  {
    "text": "and",
    "start": "863680",
    "end": "864880"
  },
  {
    "text": "this is you can see it's like a snippet",
    "start": "864880",
    "end": "867279"
  },
  {
    "text": "of some of the code here that is being",
    "start": "867279",
    "end": "869040"
  },
  {
    "text": "like the some of the the",
    "start": "869040",
    "end": "870399"
  },
  {
    "text": "the functions sorry the files that are",
    "start": "870399",
    "end": "872240"
  },
  {
    "text": "being targeted",
    "start": "872240",
    "end": "873440"
  },
  {
    "text": "and",
    "start": "873440",
    "end": "874800"
  },
  {
    "text": "you can see for example the uh this pick",
    "start": "874800",
    "end": "877440"
  },
  {
    "text": "one file let's say the flb underscore",
    "start": "877440",
    "end": "879600"
  },
  {
    "text": "parser",
    "start": "879600",
    "end": "880880"
  },
  {
    "text": "we have achieved 91 code coverage in",
    "start": "880880",
    "end": "883120"
  },
  {
    "text": "that",
    "start": "883120",
    "end": "885120"
  },
  {
    "text": "file which is achieved by i think",
    "start": "885120",
    "end": "887920"
  },
  {
    "text": "three or four fusses together",
    "start": "887920",
    "end": "890480"
  },
  {
    "text": "and this essentially just shows that we",
    "start": "890480",
    "end": "892639"
  },
  {
    "text": "write few stops of code and it will",
    "start": "892639",
    "end": "894560"
  },
  {
    "text": "explore a lot of so like the underlying",
    "start": "894560",
    "end": "896720"
  },
  {
    "text": "code",
    "start": "896720",
    "end": "898320"
  },
  {
    "text": "now",
    "start": "898320",
    "end": "899120"
  },
  {
    "text": "why do we not get necessarily 100 code",
    "start": "899120",
    "end": "901839"
  },
  {
    "text": "coverage on some of these and this is",
    "start": "901839",
    "end": "903440"
  },
  {
    "text": "simply because we can't if we don't do a",
    "start": "903440",
    "end": "905760"
  },
  {
    "text": "bunch of tricks",
    "start": "905760",
    "end": "907120"
  },
  {
    "text": "and",
    "start": "907120",
    "end": "908000"
  },
  {
    "text": "there will be a lot of error routines",
    "start": "908000",
    "end": "909680"
  },
  {
    "text": "that checks if malloc failed which it",
    "start": "909680",
    "end": "911760"
  },
  {
    "text": "never really does",
    "start": "911760",
    "end": "913519"
  },
  {
    "text": "but for example that coke we will",
    "start": "913519",
    "end": "915519"
  },
  {
    "text": "essentially never explore unless we do",
    "start": "915519",
    "end": "917839"
  },
  {
    "text": "some very triggery stuff to to to make",
    "start": "917839",
    "end": "919760"
  },
  {
    "text": "malloc fail eventually",
    "start": "919760",
    "end": "921680"
  },
  {
    "text": "and there's a lot of these kind of cases",
    "start": "921680",
    "end": "923199"
  },
  {
    "text": "in fluent bit a lot of error checking",
    "start": "923199",
    "end": "924959"
  },
  {
    "text": "where we necessarily don't come into the",
    "start": "924959",
    "end": "926560"
  },
  {
    "text": "case where a",
    "start": "926560",
    "end": "928639"
  },
  {
    "text": "system function should fail",
    "start": "928639",
    "end": "931040"
  },
  {
    "text": "and this is the reason why some of these",
    "start": "931040",
    "end": "932480"
  },
  {
    "text": "code",
    "start": "932480",
    "end": "933519"
  },
  {
    "text": "some of these kind of files do not have",
    "start": "933519",
    "end": "935120"
  },
  {
    "text": "100 code coverage because all of the",
    "start": "935120",
    "end": "937120"
  },
  {
    "text": "code",
    "start": "937120",
    "end": "938000"
  },
  {
    "text": "that is it's like",
    "start": "938000",
    "end": "939839"
  },
  {
    "text": "actually handling on the on the data and",
    "start": "939839",
    "end": "942160"
  },
  {
    "text": "not just",
    "start": "942160",
    "end": "943199"
  },
  {
    "text": "the logic of failed system routines all",
    "start": "943199",
    "end": "945519"
  },
  {
    "text": "that code we essentially explore in the",
    "start": "945519",
    "end": "948079"
  },
  {
    "text": "so like these",
    "start": "948079",
    "end": "949519"
  },
  {
    "text": "various files i showed",
    "start": "949519",
    "end": "953040"
  },
  {
    "text": "so what are the results that we have got",
    "start": "953040",
    "end": "954560"
  },
  {
    "text": "so far and the results in this case so i",
    "start": "954560",
    "end": "957120"
  },
  {
    "text": "have shown essentially the code coverage",
    "start": "957120",
    "end": "959040"
  },
  {
    "text": "is also a result in itself but in terms",
    "start": "959040",
    "end": "961120"
  },
  {
    "text": "of bugs that we have found",
    "start": "961120",
    "end": "963920"
  },
  {
    "text": "first and foremost what box are we",
    "start": "963920",
    "end": "965519"
  },
  {
    "text": "finding and in this case we will find",
    "start": "965519",
    "end": "968000"
  },
  {
    "text": "all the box that",
    "start": "968000",
    "end": "969759"
  },
  {
    "text": "sanitizers essentially give us so",
    "start": "969759",
    "end": "971839"
  },
  {
    "text": "sanitizers are these kind of block",
    "start": "971839",
    "end": "973600"
  },
  {
    "text": "oracles",
    "start": "973600",
    "end": "974880"
  },
  {
    "text": "that will be compiled into a program in",
    "start": "974880",
    "end": "978240"
  },
  {
    "text": "this case c and we'll sort of do",
    "start": "978240",
    "end": "980240"
  },
  {
    "text": "heuristics on whether you find buffer",
    "start": "980240",
    "end": "982000"
  },
  {
    "text": "overflows where they find null",
    "start": "982000",
    "end": "984000"
  },
  {
    "text": "dereferences we will detect that in any",
    "start": "984000",
    "end": "986160"
  },
  {
    "text": "way and also memory leaks and all this",
    "start": "986160",
    "end": "988000"
  },
  {
    "text": "kind of stuff so heap of overflows stack",
    "start": "988000",
    "end": "991040"
  },
  {
    "text": "base buffer overflows nulli references",
    "start": "991040",
    "end": "992800"
  },
  {
    "text": "memory leaks and",
    "start": "992800",
    "end": "994079"
  },
  {
    "text": "integer arithmetics",
    "start": "994079",
    "end": "995759"
  },
  {
    "text": "those are the majority of the box that",
    "start": "995759",
    "end": "997440"
  },
  {
    "text": "we find",
    "start": "997440",
    "end": "998880"
  },
  {
    "text": "and",
    "start": "998880",
    "end": "1000800"
  },
  {
    "text": "a quick note on this before i show the",
    "start": "1000800",
    "end": "1002480"
  },
  {
    "text": "numbers is that not all box are",
    "start": "1002480",
    "end": "1004160"
  },
  {
    "text": "necessarily true bugs and what i mean by",
    "start": "1004160",
    "end": "1006160"
  },
  {
    "text": "this is that um",
    "start": "1006160",
    "end": "1008320"
  },
  {
    "text": "memory corruption issues are often",
    "start": "1008320",
    "end": "1009839"
  },
  {
    "text": "thought of as major issues these are",
    "start": "1009839",
    "end": "1011920"
  },
  {
    "text": "exploitable box that we can you know",
    "start": "1011920",
    "end": "1014480"
  },
  {
    "text": "use to circumvent the application of",
    "start": "1014480",
    "end": "1016000"
  },
  {
    "text": "fluid but because of the way fusses work",
    "start": "1016000",
    "end": "1018560"
  },
  {
    "text": "they will often be they will often have",
    "start": "1018560",
    "end": "1020160"
  },
  {
    "text": "some level of",
    "start": "1020160",
    "end": "1021360"
  },
  {
    "text": "over approximation on the target code",
    "start": "1021360",
    "end": "1024079"
  },
  {
    "text": "because we might the data that the",
    "start": "1024079",
    "end": "1025839"
  },
  {
    "text": "faucet generate might not be constrained",
    "start": "1025839",
    "end": "1028160"
  },
  {
    "text": "in a way",
    "start": "1028160",
    "end": "1029280"
  },
  {
    "text": "when calling into a given api that",
    "start": "1029280",
    "end": "1030880"
  },
  {
    "text": "fluent bit only",
    "start": "1030880",
    "end": "1032400"
  },
  {
    "text": "so fluent will do some manipulation on",
    "start": "1032400",
    "end": "1034480"
  },
  {
    "text": "its data and may not be able to call",
    "start": "1034480",
    "end": "1036079"
  },
  {
    "text": "into certain apis with arbitrary input",
    "start": "1036079",
    "end": "1038880"
  },
  {
    "text": "so in this sense some of the fusses that",
    "start": "1038880",
    "end": "1040480"
  },
  {
    "text": "we have are over approximations in terms",
    "start": "1040480",
    "end": "1042558"
  },
  {
    "text": "of what fluent bit actually",
    "start": "1042559",
    "end": "1044798"
  },
  {
    "text": "will use that given routine for",
    "start": "1044799",
    "end": "1047760"
  },
  {
    "text": "which is good from a security",
    "start": "1047760",
    "end": "1048799"
  },
  {
    "text": "perspective because we kind of over",
    "start": "1048799",
    "end": "1050160"
  },
  {
    "text": "approximate our security analysis but it",
    "start": "1050160",
    "end": "1052559"
  },
  {
    "text": "might also give a little bit more box",
    "start": "1052559",
    "end": "1054160"
  },
  {
    "text": "that than what is actually real when you",
    "start": "1054160",
    "end": "1056000"
  },
  {
    "text": "deploy your your flow bit",
    "start": "1056000",
    "end": "1058400"
  },
  {
    "text": "also i should say here that fasters",
    "start": "1058400",
    "end": "1059919"
  },
  {
    "text": "themselves kind of bugs and in the",
    "start": "1059919",
    "end": "1061280"
  },
  {
    "text": "numbers that i'm going to show you that",
    "start": "1061280",
    "end": "1062960"
  },
  {
    "text": "also includes like they are also",
    "start": "1062960",
    "end": "1065039"
  },
  {
    "text": "included because they're a little bit",
    "start": "1065039",
    "end": "1066320"
  },
  {
    "text": "difficult to filter out",
    "start": "1066320",
    "end": "1068160"
  },
  {
    "text": "and even the underlying fussing engines",
    "start": "1068160",
    "end": "1070080"
  },
  {
    "text": "can also have bugs",
    "start": "1070080",
    "end": "1072720"
  },
  {
    "text": "so",
    "start": "1072720",
    "end": "1074000"
  },
  {
    "text": "the box that we found so far",
    "start": "1074000",
    "end": "1077120"
  },
  {
    "text": "security relevant box from",
    "start": "1077120",
    "end": "1079520"
  },
  {
    "text": "this at the end of this slide are a",
    "start": "1079520",
    "end": "1081360"
  },
  {
    "text": "bunch of links and you can select reduce",
    "start": "1081360",
    "end": "1083600"
  },
  {
    "text": "these results they include 30 32 heat",
    "start": "1083600",
    "end": "1086480"
  },
  {
    "text": "buffer overflows",
    "start": "1086480",
    "end": "1088000"
  },
  {
    "text": "and the majority of these overflows will",
    "start": "1088000",
    "end": "1090480"
  },
  {
    "text": "just be off by ones that are essentially",
    "start": "1090480",
    "end": "1093039"
  },
  {
    "text": "not going to have a major impact or in",
    "start": "1093039",
    "end": "1095440"
  },
  {
    "text": "in essence any impact when you deploy a",
    "start": "1095440",
    "end": "1097039"
  },
  {
    "text": "fluent bit",
    "start": "1097039",
    "end": "1098160"
  },
  {
    "text": "there will be some stack there are seven",
    "start": "1098160",
    "end": "1099679"
  },
  {
    "text": "stack base buffer overflows",
    "start": "1099679",
    "end": "1101919"
  },
  {
    "text": "uh a bunch of heat double freeze and",
    "start": "1101919",
    "end": "1104000"
  },
  {
    "text": "also use after freeze and then also uh",
    "start": "1104000",
    "end": "1106080"
  },
  {
    "text": "22 nulli references",
    "start": "1106080",
    "end": "1108400"
  },
  {
    "text": "so this graph",
    "start": "1108400",
    "end": "1110320"
  },
  {
    "text": "shows all the issues that we have found",
    "start": "1110320",
    "end": "1112160"
  },
  {
    "text": "with fluenbit in terms of closed issues",
    "start": "1112160",
    "end": "1114880"
  },
  {
    "text": "and open issues what i mean by that is",
    "start": "1114880",
    "end": "1116480"
  },
  {
    "text": "when oss first finds an issue",
    "start": "1116480",
    "end": "1118720"
  },
  {
    "text": "it will put it up on a database in this",
    "start": "1118720",
    "end": "1121440"
  },
  {
    "text": "case monorail",
    "start": "1121440",
    "end": "1122880"
  },
  {
    "text": "and they will then what we have then",
    "start": "1122880",
    "end": "1124240"
  },
  {
    "text": "tracked here is the number of closed",
    "start": "1124240",
    "end": "1126080"
  },
  {
    "text": "issues",
    "start": "1126080",
    "end": "1127200"
  },
  {
    "text": "and issues get closed when they get",
    "start": "1127200",
    "end": "1128880"
  },
  {
    "text": "fixed and number of open issues",
    "start": "1128880",
    "end": "1131760"
  },
  {
    "text": "so you can see that it often goes such",
    "start": "1131760",
    "end": "1133760"
  },
  {
    "text": "that whenever",
    "start": "1133760",
    "end": "1135039"
  },
  {
    "text": "new open issues happen",
    "start": "1135039",
    "end": "1136960"
  },
  {
    "text": "closed issues slowly are right after",
    "start": "1136960",
    "end": "1139840"
  },
  {
    "text": "increase and that's because whenever bug",
    "start": "1139840",
    "end": "1141360"
  },
  {
    "text": "happens we fix it",
    "start": "1141360",
    "end": "1143919"
  },
  {
    "text": "and the reason that the",
    "start": "1143919",
    "end": "1146559"
  },
  {
    "text": "red line will keep going up is",
    "start": "1146559",
    "end": "1148240"
  },
  {
    "text": "essentially because closed issues will",
    "start": "1148240",
    "end": "1150160"
  },
  {
    "text": "accumulate whenever a box whenever a bug",
    "start": "1150160",
    "end": "1152480"
  },
  {
    "text": "is fixed and",
    "start": "1152480",
    "end": "1155039"
  },
  {
    "text": "you can also see whenever",
    "start": "1155039",
    "end": "1157600"
  },
  {
    "text": "the blue graph here remains fairly low",
    "start": "1157600",
    "end": "1160320"
  },
  {
    "text": "whereas the red one will keep increasing",
    "start": "1160320",
    "end": "1162880"
  },
  {
    "text": "and that's because whenever",
    "start": "1162880",
    "end": "1164400"
  },
  {
    "text": "fossa finds a bug",
    "start": "1164400",
    "end": "1166320"
  },
  {
    "text": "it will keep running into the same bug",
    "start": "1166320",
    "end": "1168000"
  },
  {
    "text": "over time",
    "start": "1168000",
    "end": "1169120"
  },
  {
    "text": "so we fix that bug and then it will",
    "start": "1169120",
    "end": "1171039"
  },
  {
    "text": "start to advance further and thus it",
    "start": "1171039",
    "end": "1173120"
  },
  {
    "text": "will find a new bug so therefore the",
    "start": "1173120",
    "end": "1174880"
  },
  {
    "text": "blue line can somewhat be constant",
    "start": "1174880",
    "end": "1176880"
  },
  {
    "text": "whereas the red line will keep",
    "start": "1176880",
    "end": "1178240"
  },
  {
    "text": "increasing as we fix bugs",
    "start": "1178240",
    "end": "1181919"
  },
  {
    "text": "let me give you a few examples of bugs",
    "start": "1183679",
    "end": "1185280"
  },
  {
    "text": "that it finds because some of them are",
    "start": "1185280",
    "end": "1186559"
  },
  {
    "text": "pretty interesting so in this piece of",
    "start": "1186559",
    "end": "1188960"
  },
  {
    "text": "code",
    "start": "1188960",
    "end": "1189919"
  },
  {
    "text": "it found an issue and it was an",
    "start": "1189919",
    "end": "1192160"
  },
  {
    "text": "interesting one because i couldn't see",
    "start": "1192160",
    "end": "1193840"
  },
  {
    "text": "it when i just",
    "start": "1193840",
    "end": "1194960"
  },
  {
    "text": "audited the code",
    "start": "1194960",
    "end": "1196320"
  },
  {
    "text": "and",
    "start": "1196320",
    "end": "1197520"
  },
  {
    "text": "can everybody see what the bug is here",
    "start": "1197520",
    "end": "1200240"
  },
  {
    "text": "more or less",
    "start": "1200240",
    "end": "1202720"
  },
  {
    "text": "so sn printf will",
    "start": "1204400",
    "end": "1207200"
  },
  {
    "text": "take a format string and copy all that",
    "start": "1207200",
    "end": "1208880"
  },
  {
    "text": "content into a buffer",
    "start": "1208880",
    "end": "1211039"
  },
  {
    "text": "now the point is here that we use this",
    "start": "1211039",
    "end": "1213919"
  },
  {
    "text": "val len",
    "start": "1213919",
    "end": "1215039"
  },
  {
    "text": "argument to routine later on this flb",
    "start": "1215039",
    "end": "1218320"
  },
  {
    "text": "message pack guelph value we use that as",
    "start": "1218320",
    "end": "1221120"
  },
  {
    "text": "an argument",
    "start": "1221120",
    "end": "1222880"
  },
  {
    "text": "next to its",
    "start": "1222880",
    "end": "1224640"
  },
  {
    "text": "val buffer and val here will hold the",
    "start": "1224640",
    "end": "1226720"
  },
  {
    "text": "content of temp which is at the",
    "start": "1226720",
    "end": "1228559"
  },
  {
    "text": "destination end of the",
    "start": "1228559",
    "end": "1230559"
  },
  {
    "text": "sm printf function okay",
    "start": "1230559",
    "end": "1233120"
  },
  {
    "text": "now the point is here that sn printf",
    "start": "1233120",
    "end": "1236400"
  },
  {
    "text": "it returns",
    "start": "1236400",
    "end": "1239039"
  },
  {
    "text": "so upon successful return these",
    "start": "1239039",
    "end": "1240960"
  },
  {
    "text": "functions return the number of",
    "start": "1240960",
    "end": "1242400"
  },
  {
    "text": "characters printed to this nation",
    "start": "1242400",
    "end": "1245600"
  },
  {
    "text": "however",
    "start": "1245600",
    "end": "1246720"
  },
  {
    "text": "it says down here in the second",
    "start": "1246720",
    "end": "1248080"
  },
  {
    "text": "paragraph if the output was truncated",
    "start": "1248080",
    "end": "1250960"
  },
  {
    "text": "due to this limit some limit then the",
    "start": "1250960",
    "end": "1253200"
  },
  {
    "text": "return value is the number of characters",
    "start": "1253200",
    "end": "1255760"
  },
  {
    "text": "which would have been written",
    "start": "1255760",
    "end": "1258000"
  },
  {
    "text": "meaning sn printf can actually return a",
    "start": "1258000",
    "end": "1259919"
  },
  {
    "text": "value that is higher than the buffer",
    "start": "1259919",
    "end": "1262400"
  },
  {
    "text": "holds and it will just return a number",
    "start": "1262400",
    "end": "1265280"
  },
  {
    "text": "so like a high number and you will",
    "start": "1265280",
    "end": "1267039"
  },
  {
    "text": "assume that's the if you're not aware",
    "start": "1267039",
    "end": "1268799"
  },
  {
    "text": "that if the value is higher than the",
    "start": "1268799",
    "end": "1270720"
  },
  {
    "text": "size of your buffer",
    "start": "1270720",
    "end": "1272559"
  },
  {
    "text": "if you're not aware that that's an error",
    "start": "1272559",
    "end": "1274000"
  },
  {
    "text": "case",
    "start": "1274000",
    "end": "1275679"
  },
  {
    "text": "then",
    "start": "1275679",
    "end": "1276559"
  },
  {
    "text": "you know you will pass that so like you",
    "start": "1276559",
    "end": "1278240"
  },
  {
    "text": "will use this val lin will be a size",
    "start": "1278240",
    "end": "1280480"
  },
  {
    "text": "indicating what was copied but it's",
    "start": "1280480",
    "end": "1282000"
  },
  {
    "text": "actually larger than the buffer itself",
    "start": "1282000",
    "end": "1284480"
  },
  {
    "text": "and this is a was a pretty tricky one",
    "start": "1284480",
    "end": "1286880"
  },
  {
    "text": "because",
    "start": "1286880",
    "end": "1288000"
  },
  {
    "text": "it's easy to assume that the value",
    "start": "1288000",
    "end": "1289679"
  },
  {
    "text": "returned is just the values copied and",
    "start": "1289679",
    "end": "1291520"
  },
  {
    "text": "that's all fine",
    "start": "1291520",
    "end": "1292960"
  },
  {
    "text": "so the essential check point here was",
    "start": "1292960",
    "end": "1295679"
  },
  {
    "text": "that then can be",
    "start": "1295679",
    "end": "1297440"
  },
  {
    "text": "should be checked for whether it's",
    "start": "1297440",
    "end": "1299440"
  },
  {
    "text": "larger than the size of temp",
    "start": "1299440",
    "end": "1301840"
  },
  {
    "text": "and that was essentially the fix",
    "start": "1301840",
    "end": "1304320"
  },
  {
    "text": "and this essentially returned in a stack",
    "start": "1304320",
    "end": "1306559"
  },
  {
    "text": "base buffer overflow because valve",
    "start": "1306559",
    "end": "1308080"
  },
  {
    "text": "length would be passed down in the code",
    "start": "1308080",
    "end": "1309919"
  },
  {
    "text": "with a size larger than temp",
    "start": "1309919",
    "end": "1312080"
  },
  {
    "text": "and in the code it would be passed down",
    "start": "1312080",
    "end": "1314240"
  },
  {
    "text": "to it would indicate the size of the",
    "start": "1314240",
    "end": "1315919"
  },
  {
    "text": "given buffer",
    "start": "1315919",
    "end": "1317120"
  },
  {
    "text": "which was larger than the size of the",
    "start": "1317120",
    "end": "1318960"
  },
  {
    "text": "buffer",
    "start": "1318960",
    "end": "1321039"
  },
  {
    "text": "another example of a bug it found was",
    "start": "1321039",
    "end": "1325360"
  },
  {
    "text": "in some of the sign before",
    "start": "1325360",
    "end": "1328000"
  },
  {
    "text": "code which is i think related to some",
    "start": "1328000",
    "end": "1329520"
  },
  {
    "text": "amazon",
    "start": "1329520",
    "end": "1330840"
  },
  {
    "text": "logic had this",
    "start": "1330840",
    "end": "1332960"
  },
  {
    "text": "routine that would compare key key value",
    "start": "1332960",
    "end": "1335520"
  },
  {
    "text": "pairs",
    "start": "1335520",
    "end": "1336640"
  },
  {
    "text": "and",
    "start": "1336640",
    "end": "1337760"
  },
  {
    "text": "in this case what actually happened was",
    "start": "1337760",
    "end": "1341200"
  },
  {
    "text": "that values could have the null value",
    "start": "1341200",
    "end": "1344159"
  },
  {
    "text": "and therefore we would have a null point",
    "start": "1344159",
    "end": "1345919"
  },
  {
    "text": "of the reference",
    "start": "1345919",
    "end": "1347360"
  },
  {
    "text": "at the second string compare here so the",
    "start": "1347360",
    "end": "1349679"
  },
  {
    "text": "fix was really just to check for null",
    "start": "1349679",
    "end": "1351600"
  },
  {
    "text": "values",
    "start": "1351600",
    "end": "1352640"
  },
  {
    "text": "those are kind of the issues that it",
    "start": "1352640",
    "end": "1354000"
  },
  {
    "text": "will find and a final one here what's",
    "start": "1354000",
    "end": "1356720"
  },
  {
    "text": "the bug",
    "start": "1356720",
    "end": "1357840"
  },
  {
    "text": "in this case the bug is here that",
    "start": "1357840",
    "end": "1362320"
  },
  {
    "text": "so here we have the um the logic of flb",
    "start": "1362320",
    "end": "1366400"
  },
  {
    "text": "stir and dock",
    "start": "1366400",
    "end": "1369120"
  },
  {
    "text": "and",
    "start": "1369120",
    "end": "1370720"
  },
  {
    "text": "well this is also a null pointer d",
    "start": "1370720",
    "end": "1372799"
  },
  {
    "text": "reference because if malloc fails it",
    "start": "1372799",
    "end": "1375440"
  },
  {
    "text": "returns null",
    "start": "1375440",
    "end": "1377120"
  },
  {
    "text": "flb underscore stir and dop will return",
    "start": "1377120",
    "end": "1379840"
  },
  {
    "text": "null and essentially there is no check",
    "start": "1379840",
    "end": "1382000"
  },
  {
    "text": "on that in the code which resulted in",
    "start": "1382000",
    "end": "1385280"
  },
  {
    "text": "a lot of null point of view references",
    "start": "1385280",
    "end": "1387039"
  },
  {
    "text": "in the very rare event that malloc would",
    "start": "1387039",
    "end": "1389520"
  },
  {
    "text": "return now but we have implemented some",
    "start": "1389520",
    "end": "1391440"
  },
  {
    "text": "heuristics that actually can force",
    "start": "1391440",
    "end": "1393120"
  },
  {
    "text": "malloc to return null",
    "start": "1393120",
    "end": "1396320"
  },
  {
    "text": "which is uh",
    "start": "1396320",
    "end": "1397679"
  },
  {
    "text": "which is good from the perspective of we",
    "start": "1397679",
    "end": "1399440"
  },
  {
    "text": "have gotten to a stage where we need to",
    "start": "1399440",
    "end": "1401280"
  },
  {
    "text": "really force",
    "start": "1401280",
    "end": "1402400"
  },
  {
    "text": "random behavior and forcing malloc to",
    "start": "1402400",
    "end": "1404559"
  },
  {
    "text": "return all in order to find bugs because",
    "start": "1404559",
    "end": "1406159"
  },
  {
    "text": "we have like eradicated box",
    "start": "1406159",
    "end": "1408480"
  },
  {
    "text": "in in all the other parts of the code",
    "start": "1408480",
    "end": "1411520"
  },
  {
    "text": "so what's future work",
    "start": "1411520",
    "end": "1413440"
  },
  {
    "text": "the future work is to essentially",
    "start": "1413440",
    "end": "1415280"
  },
  {
    "text": "increase to a lot more code coverage",
    "start": "1415280",
    "end": "1417600"
  },
  {
    "text": "we're aiming to have 90 code coverage uh",
    "start": "1417600",
    "end": "1420880"
  },
  {
    "text": "the forces to have 90 code coverage",
    "start": "1420880",
    "end": "1422480"
  },
  {
    "text": "throughout the the the code uh by this",
    "start": "1422480",
    "end": "1424720"
  },
  {
    "text": "year",
    "start": "1424720",
    "end": "1425919"
  },
  {
    "text": "and we have to do some a little bit",
    "start": "1425919",
    "end": "1428640"
  },
  {
    "text": "exotic techniques to actually reach that",
    "start": "1428640",
    "end": "1430880"
  },
  {
    "text": "which is for example to force malloc to",
    "start": "1430880",
    "end": "1433039"
  },
  {
    "text": "to fail uh",
    "start": "1433039",
    "end": "1434960"
  },
  {
    "text": "and that kind of stuff",
    "start": "1434960",
    "end": "1436720"
  },
  {
    "text": "and then we have also mainly focused on",
    "start": "1436720",
    "end": "1439039"
  },
  {
    "text": "the the code in the slash src folder and",
    "start": "1439039",
    "end": "1441919"
  },
  {
    "text": "the next goal now is also to target a",
    "start": "1441919",
    "end": "1443760"
  },
  {
    "text": "lot of the plugins",
    "start": "1443760",
    "end": "1445679"
  },
  {
    "text": "and then also come with a little bit",
    "start": "1445679",
    "end": "1447120"
  },
  {
    "text": "more uh fossils that are not just like",
    "start": "1447120",
    "end": "1449279"
  },
  {
    "text": "unit test like but more",
    "start": "1449279",
    "end": "1451279"
  },
  {
    "text": "integration end-to-end type of testing",
    "start": "1451279",
    "end": "1453919"
  },
  {
    "text": "and then essentially we will continue in",
    "start": "1453919",
    "end": "1455840"
  },
  {
    "text": "the current process of",
    "start": "1455840",
    "end": "1457679"
  },
  {
    "text": "find box and sorry find",
    "start": "1457679",
    "end": "1460400"
  },
  {
    "text": "gaps in the code that are not being hit",
    "start": "1460400",
    "end": "1462240"
  },
  {
    "text": "by the existing fusses develop fusses",
    "start": "1462240",
    "end": "1464720"
  },
  {
    "text": "that target that code",
    "start": "1464720",
    "end": "1466320"
  },
  {
    "text": "fix the box that may come up and then",
    "start": "1466320",
    "end": "1468320"
  },
  {
    "text": "just rinse and repeat",
    "start": "1468320",
    "end": "1471279"
  },
  {
    "text": "so that's it for my talk um",
    "start": "1471279",
    "end": "1475679"
  },
  {
    "text": "if you have any questions i'll be happy",
    "start": "1475679",
    "end": "1477120"
  },
  {
    "text": "to answer them",
    "start": "1477120",
    "end": "1480080"
  },
  {
    "text": "[Laughter]",
    "start": "1482860",
    "end": "1484400"
  },
  {
    "text": "thank you",
    "start": "1484400",
    "end": "1487640"
  }
]