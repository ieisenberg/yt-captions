[
  {
    "text": "hi welcome everybody",
    "start": "880",
    "end": "3199"
  },
  {
    "text": "to cloud events looking beyond event",
    "start": "3199",
    "end": "5359"
  },
  {
    "text": "delivery",
    "start": "5359",
    "end": "6640"
  },
  {
    "text": "i'm remi caccio and i work for nixo",
    "start": "6640",
    "end": "9120"
  },
  {
    "text": "where i'm responsible for the security",
    "start": "9120",
    "end": "11200"
  },
  {
    "text": "and compliance program",
    "start": "11200",
    "end": "14320"
  },
  {
    "text": "like every security person i like to",
    "start": "14320",
    "end": "16400"
  },
  {
    "text": "collect events",
    "start": "16400",
    "end": "17680"
  },
  {
    "text": "from all systems github for commits",
    "start": "17680",
    "end": "22320"
  },
  {
    "text": "single sign-ons vpns and",
    "start": "22320",
    "end": "25439"
  },
  {
    "text": "all those events are always",
    "start": "25439",
    "end": "28640"
  },
  {
    "text": "from different formats and different",
    "start": "28640",
    "end": "32238"
  },
  {
    "text": "methods to retrieve them",
    "start": "32239",
    "end": "35600"
  },
  {
    "text": "so while working on this project i was",
    "start": "35600",
    "end": "38079"
  },
  {
    "text": "searching for",
    "start": "38079",
    "end": "39120"
  },
  {
    "text": "a group who normalized events",
    "start": "39120",
    "end": "42320"
  },
  {
    "text": "and i found one here in cncf",
    "start": "42320",
    "end": "45360"
  },
  {
    "text": "with the cloud events groups",
    "start": "45360",
    "end": "48399"
  },
  {
    "text": "and even better they were all nice and",
    "start": "48399",
    "end": "50640"
  },
  {
    "text": "welcoming",
    "start": "50640",
    "end": "52399"
  },
  {
    "text": "so what is cloud events let's have a",
    "start": "52399",
    "end": "54640"
  },
  {
    "text": "closer look",
    "start": "54640",
    "end": "57039"
  },
  {
    "text": "as you will find in our repository there",
    "start": "57039",
    "end": "59120"
  },
  {
    "text": "is a nice quote in the redmi",
    "start": "59120",
    "end": "60879"
  },
  {
    "text": "events are everywhere however even",
    "start": "60879",
    "end": "63840"
  },
  {
    "text": "producers tend to describe",
    "start": "63840",
    "end": "65439"
  },
  {
    "text": "events differently so cloud events",
    "start": "65439",
    "end": "68560"
  },
  {
    "text": "define a common set of metadata for",
    "start": "68560",
    "end": "71200"
  },
  {
    "text": "events",
    "start": "71200",
    "end": "72640"
  },
  {
    "text": "and where to find those metadata inside",
    "start": "72640",
    "end": "75439"
  },
  {
    "text": "the messages",
    "start": "75439",
    "end": "78000"
  },
  {
    "text": "it also defines different type of",
    "start": "78000",
    "end": "79920"
  },
  {
    "text": "transport like http or kafka",
    "start": "79920",
    "end": "82880"
  },
  {
    "text": "so you can basically compare",
    "start": "82880",
    "end": "86159"
  },
  {
    "text": "cloud events to high p while",
    "start": "86159",
    "end": "89520"
  },
  {
    "text": "the tcp and udp is for us",
    "start": "89520",
    "end": "93200"
  },
  {
    "text": "the transport like http or kafka",
    "start": "93200",
    "end": "97920"
  },
  {
    "text": "in this session we will see cloud events",
    "start": "97920",
    "end": "101520"
  },
  {
    "text": "and how it looks in detail what the",
    "start": "101520",
    "end": "104159"
  },
  {
    "text": "community provides to you",
    "start": "104159",
    "end": "105600"
  },
  {
    "text": "and a little bit of history on the",
    "start": "105600",
    "end": "107439"
  },
  {
    "text": "project",
    "start": "107439",
    "end": "108799"
  },
  {
    "text": "then we will focus on interoperability",
    "start": "108799",
    "end": "112000"
  },
  {
    "text": "with the discovery the subscription api",
    "start": "112000",
    "end": "115280"
  },
  {
    "text": "and the schema registry",
    "start": "115280",
    "end": "118560"
  },
  {
    "text": "so let's see what does it looks like",
    "start": "118960",
    "end": "123200"
  },
  {
    "text": "here on the left we have the htcp",
    "start": "123200",
    "end": "125759"
  },
  {
    "text": "structured",
    "start": "125759",
    "end": "126840"
  },
  {
    "text": "event with everything in",
    "start": "126840",
    "end": "129840"
  },
  {
    "text": "blue is basically the context",
    "start": "129840",
    "end": "133040"
  },
  {
    "text": "and the metadata defined by cloud events",
    "start": "133040",
    "end": "137040"
  },
  {
    "text": "so we see the spec version as 1.0",
    "start": "137040",
    "end": "140400"
  },
  {
    "text": "as we don't put the patch version",
    "start": "140400",
    "end": "143840"
  },
  {
    "text": "in this attribute the type of events",
    "start": "143840",
    "end": "147120"
  },
  {
    "text": "the source the id which are",
    "start": "147120",
    "end": "150879"
  },
  {
    "text": "the the one in bold are the four",
    "start": "150879",
    "end": "152959"
  },
  {
    "text": "required attributes",
    "start": "152959",
    "end": "155120"
  },
  {
    "text": "and then a data content type and finally",
    "start": "155120",
    "end": "158160"
  },
  {
    "text": "inside data",
    "start": "158160",
    "end": "159599"
  },
  {
    "text": "you'll find the correct events",
    "start": "159599",
    "end": "163680"
  },
  {
    "text": "sent by the system with all its specific",
    "start": "163680",
    "end": "168840"
  },
  {
    "text": "attributes as we manage different",
    "start": "168840",
    "end": "171360"
  },
  {
    "text": "transports you we can also have a look",
    "start": "171360",
    "end": "173760"
  },
  {
    "text": "on http binaries transport",
    "start": "173760",
    "end": "175760"
  },
  {
    "text": "where you will see that all the metadata",
    "start": "175760",
    "end": "178319"
  },
  {
    "text": "are basically",
    "start": "178319",
    "end": "179280"
  },
  {
    "text": "transferred inside the header of the",
    "start": "179280",
    "end": "182319"
  },
  {
    "text": "http request",
    "start": "182319",
    "end": "183519"
  },
  {
    "text": "and the payload contains only",
    "start": "183519",
    "end": "187040"
  },
  {
    "text": "the content of the event",
    "start": "187040",
    "end": "190239"
  },
  {
    "text": "so let's have a look on the metadata",
    "start": "190800",
    "end": "192800"
  },
  {
    "text": "four attributes are required",
    "start": "192800",
    "end": "195120"
  },
  {
    "text": "and four attributes are optional in the",
    "start": "195120",
    "end": "197519"
  },
  {
    "text": "four required attributes we have",
    "start": "197519",
    "end": "199360"
  },
  {
    "text": "the id which is a unique id",
    "start": "199360",
    "end": "203440"
  },
  {
    "text": "per source the source is",
    "start": "203440",
    "end": "207680"
  },
  {
    "text": "a reference to the system it can have",
    "start": "207680",
    "end": "210319"
  },
  {
    "text": "one or several producers behind",
    "start": "210319",
    "end": "212560"
  },
  {
    "text": "a source but if there is several",
    "start": "212560",
    "end": "214799"
  },
  {
    "text": "producer",
    "start": "214799",
    "end": "215920"
  },
  {
    "text": "as the source plus id must be unique",
    "start": "215920",
    "end": "219200"
  },
  {
    "text": "that means they need to have a way to",
    "start": "219200",
    "end": "222480"
  },
  {
    "text": "ensure the id is unique between them",
    "start": "222480",
    "end": "225760"
  },
  {
    "text": "the spark version without the patch",
    "start": "225760",
    "end": "228799"
  },
  {
    "text": "version the type of the event",
    "start": "228799",
    "end": "232879"
  },
  {
    "text": "are the four required attributes",
    "start": "232879",
    "end": "236480"
  },
  {
    "text": "the optional attributes are the data",
    "start": "236480",
    "end": "238720"
  },
  {
    "text": "content type which is basically the mind",
    "start": "238720",
    "end": "241120"
  },
  {
    "text": "type",
    "start": "241120",
    "end": "241519"
  },
  {
    "text": "of the data the data schema",
    "start": "241519",
    "end": "245280"
  },
  {
    "text": "which define the structure of the",
    "start": "245280",
    "end": "247040"
  },
  {
    "text": "content",
    "start": "247040",
    "end": "248400"
  },
  {
    "text": "the subject where you will find",
    "start": "248400",
    "end": "251920"
  },
  {
    "text": "whatever you want to put as the even",
    "start": "251920",
    "end": "255200"
  },
  {
    "text": "producer",
    "start": "255200",
    "end": "256560"
  },
  {
    "text": "and the time let's have a look",
    "start": "256560",
    "end": "260320"
  },
  {
    "text": "on what it can look like if it was a",
    "start": "260320",
    "end": "262560"
  },
  {
    "text": "github event",
    "start": "262560",
    "end": "265120"
  },
  {
    "text": "so in our case the spec version will be",
    "start": "265120",
    "end": "267199"
  },
  {
    "text": "1.0",
    "start": "267199",
    "end": "268560"
  },
  {
    "text": "the type if we create a branch will be",
    "start": "268560",
    "end": "272800"
  },
  {
    "text": "com.github.create.branch",
    "start": "272840",
    "end": "274880"
  },
  {
    "text": "the source will be the url of our",
    "start": "274880",
    "end": "278160"
  },
  {
    "text": "repository",
    "start": "278160",
    "end": "279120"
  },
  {
    "text": "in our case cloud event spec",
    "start": "279120",
    "end": "282479"
  },
  {
    "text": "the id is a unique id generated by",
    "start": "282479",
    "end": "285280"
  },
  {
    "text": "github",
    "start": "285280",
    "end": "287120"
  },
  {
    "text": "in this case it's just a normal uuid",
    "start": "287120",
    "end": "290479"
  },
  {
    "text": "and the data content type will be",
    "start": "290479",
    "end": "292400"
  },
  {
    "text": "application",
    "start": "292400",
    "end": "293520"
  },
  {
    "text": "json the subject is",
    "start": "293520",
    "end": "296720"
  },
  {
    "text": "the commit reference and finally in data",
    "start": "296720",
    "end": "300960"
  },
  {
    "text": "you will find all the attributes that",
    "start": "300960",
    "end": "302720"
  },
  {
    "text": "you will have",
    "start": "302720",
    "end": "303440"
  },
  {
    "text": "found in any github events",
    "start": "303440",
    "end": "310479"
  },
  {
    "text": "so what's in the box what is provided to",
    "start": "310479",
    "end": "313039"
  },
  {
    "text": "you by the community",
    "start": "313039",
    "end": "315199"
  },
  {
    "text": "the sdks include all",
    "start": "315199",
    "end": "318320"
  },
  {
    "text": "serializer initializer of the cloud",
    "start": "318320",
    "end": "320639"
  },
  {
    "text": "event",
    "start": "320639",
    "end": "321600"
  },
  {
    "text": "and at least the http transport",
    "start": "321600",
    "end": "324880"
  },
  {
    "text": "there is several languages c-sharp go",
    "start": "324880",
    "end": "328160"
  },
  {
    "text": "java javascript php python",
    "start": "328160",
    "end": "331520"
  },
  {
    "text": "ruby rust",
    "start": "331520",
    "end": "334720"
  },
  {
    "text": "and we also manage several transports",
    "start": "334880",
    "end": "337840"
  },
  {
    "text": "like http",
    "start": "337840",
    "end": "339039"
  },
  {
    "text": "mqp mqtt kafka nuts",
    "start": "339039",
    "end": "343680"
  },
  {
    "text": "and you will find all the definitions",
    "start": "343680",
    "end": "345759"
  },
  {
    "text": "like avro definitions and others",
    "start": "345759",
    "end": "348160"
  },
  {
    "text": "inside our repository",
    "start": "348160",
    "end": "351600"
  },
  {
    "text": "a little bit of history the project",
    "start": "351600",
    "end": "353280"
  },
  {
    "text": "started in february 2018",
    "start": "353280",
    "end": "356400"
  },
  {
    "text": "and the first version in april the v 0.1",
    "start": "356400",
    "end": "360880"
  },
  {
    "text": "in may we got accepted as a cncf sandbox",
    "start": "360880",
    "end": "364240"
  },
  {
    "text": "project",
    "start": "364240",
    "end": "365360"
  },
  {
    "text": "in december the v02 was released",
    "start": "365360",
    "end": "368960"
  },
  {
    "text": "followed in 2019 by the v03",
    "start": "368960",
    "end": "372080"
  },
  {
    "text": "in june and finally the 1.0",
    "start": "372080",
    "end": "375680"
  },
  {
    "text": "in october 2019 since then",
    "start": "375680",
    "end": "380960"
  },
  {
    "text": "we worked on the interoperability",
    "start": "380960",
    "end": "383880"
  },
  {
    "text": "specifications",
    "start": "383880",
    "end": "385440"
  },
  {
    "text": "including discovery subscription",
    "start": "385440",
    "end": "388479"
  },
  {
    "text": "and schema registry so the",
    "start": "388479",
    "end": "391639"
  },
  {
    "text": "interoperability is basically",
    "start": "391639",
    "end": "393520"
  },
  {
    "text": "how to consume the events we already",
    "start": "393520",
    "end": "396000"
  },
  {
    "text": "define",
    "start": "396000",
    "end": "396880"
  },
  {
    "text": "what the event looks like and what the",
    "start": "396880",
    "end": "399199"
  },
  {
    "text": "contents",
    "start": "399199",
    "end": "400960"
  },
  {
    "text": "but we still need to discover the events",
    "start": "400960",
    "end": "404400"
  },
  {
    "text": "that are emitted by our systems",
    "start": "404400",
    "end": "406880"
  },
  {
    "text": "we need a way to be able to subscribe to",
    "start": "406880",
    "end": "409680"
  },
  {
    "text": "those",
    "start": "409680",
    "end": "410160"
  },
  {
    "text": "events and then ideally to have",
    "start": "410160",
    "end": "414000"
  },
  {
    "text": "one place where to publish",
    "start": "414000",
    "end": "417199"
  },
  {
    "text": "the schema that defines our events",
    "start": "417199",
    "end": "420800"
  },
  {
    "text": "so what is the discovery api the",
    "start": "420800",
    "end": "423680"
  },
  {
    "text": "discovery api",
    "start": "423680",
    "end": "425599"
  },
  {
    "text": "allows you to understand who produced",
    "start": "425599",
    "end": "428800"
  },
  {
    "text": "the event of interest",
    "start": "428800",
    "end": "432080"
  },
  {
    "text": "and what type of events they produce",
    "start": "432319",
    "end": "435919"
  },
  {
    "text": "also what different subscription",
    "start": "435919",
    "end": "438960"
  },
  {
    "text": "they do and all and how",
    "start": "438960",
    "end": "442319"
  },
  {
    "text": "you will be able to subscribe to those",
    "start": "442319",
    "end": "444080"
  },
  {
    "text": "events",
    "start": "444080",
    "end": "445680"
  },
  {
    "text": "so you can dynamically query the",
    "start": "445680",
    "end": "448720"
  },
  {
    "text": "producer",
    "start": "448720",
    "end": "449599"
  },
  {
    "text": "and the source to understand the events",
    "start": "449599",
    "end": "452479"
  },
  {
    "text": "emitted",
    "start": "452479",
    "end": "454160"
  },
  {
    "text": "so why because there was a lack of",
    "start": "454160",
    "end": "457199"
  },
  {
    "text": "standardization on that",
    "start": "457199",
    "end": "458560"
  },
  {
    "text": "there is like webhooks and other but",
    "start": "458560",
    "end": "462319"
  },
  {
    "text": "each provider is basically implementing",
    "start": "462319",
    "end": "465199"
  },
  {
    "text": "its own methodology",
    "start": "465199",
    "end": "467039"
  },
  {
    "text": "so you always find yourself digging into",
    "start": "467039",
    "end": "469280"
  },
  {
    "text": "their documentation",
    "start": "469280",
    "end": "470400"
  },
  {
    "text": "and for each new system you have to dig",
    "start": "470400",
    "end": "472319"
  },
  {
    "text": "into the documentation",
    "start": "472319",
    "end": "474000"
  },
  {
    "text": "the discovery api of cloud events aim to",
    "start": "474000",
    "end": "477199"
  },
  {
    "text": "solve this by having one way",
    "start": "477199",
    "end": "480319"
  },
  {
    "text": "of questioning the different events",
    "start": "480319",
    "end": "484000"
  },
  {
    "text": "and get the result and how to subscribe",
    "start": "484000",
    "end": "486800"
  },
  {
    "text": "to them so",
    "start": "486800",
    "end": "487520"
  },
  {
    "text": "no more documentation browsing where",
    "start": "487520",
    "end": "491280"
  },
  {
    "text": "you spend hours and hours because each",
    "start": "491280",
    "end": "494720"
  },
  {
    "text": "system are clearly different",
    "start": "494720",
    "end": "497759"
  },
  {
    "text": "the deliverable as the specification",
    "start": "497759",
    "end": "501280"
  },
  {
    "text": "group are the discovery api",
    "start": "501280",
    "end": "503599"
  },
  {
    "text": "specification which is the",
    "start": "503599",
    "end": "505199"
  },
  {
    "text": "open api and the http",
    "start": "505199",
    "end": "508319"
  },
  {
    "text": "json mapping to understand",
    "start": "508319",
    "end": "511440"
  },
  {
    "text": "how to subscribe",
    "start": "511440",
    "end": "514880"
  },
  {
    "text": "as we discussed in the discovery api the",
    "start": "515839",
    "end": "519120"
  },
  {
    "text": "logical following is the subscription",
    "start": "519120",
    "end": "521839"
  },
  {
    "text": "api",
    "start": "521839",
    "end": "522640"
  },
  {
    "text": "once you discover which events you want",
    "start": "522640",
    "end": "524399"
  },
  {
    "text": "to subscribe you want",
    "start": "524399",
    "end": "526000"
  },
  {
    "text": "you need to be able to subscribe to it",
    "start": "526000",
    "end": "529600"
  },
  {
    "text": "so the subscription api is basically an",
    "start": "529600",
    "end": "531839"
  },
  {
    "text": "open api definition",
    "start": "531839",
    "end": "533839"
  },
  {
    "text": "on how to manage subscription to events",
    "start": "533839",
    "end": "538399"
  },
  {
    "text": "in this subscription object as we see on",
    "start": "538399",
    "end": "540880"
  },
  {
    "text": "the right side",
    "start": "540880",
    "end": "542480"
  },
  {
    "text": "you can define the different types that",
    "start": "542480",
    "end": "545040"
  },
  {
    "text": "you want to subscribe to",
    "start": "545040",
    "end": "547600"
  },
  {
    "text": "and you can also filter through",
    "start": "547600",
    "end": "550160"
  },
  {
    "text": "different dialects",
    "start": "550160",
    "end": "551440"
  },
  {
    "text": "that are defining the norms then the",
    "start": "551440",
    "end": "554399"
  },
  {
    "text": "sink",
    "start": "554399",
    "end": "554880"
  },
  {
    "text": "is basically where you want the events",
    "start": "554880",
    "end": "557040"
  },
  {
    "text": "to be pushed",
    "start": "557040",
    "end": "559120"
  },
  {
    "text": "and with which protocol and the settings",
    "start": "559120",
    "end": "562560"
  },
  {
    "text": "that goes along with it it",
    "start": "562560",
    "end": "566000"
  },
  {
    "text": "basically enables the automation of the",
    "start": "566000",
    "end": "568160"
  },
  {
    "text": "subscription",
    "start": "568160",
    "end": "569920"
  },
  {
    "text": "so combine with the discovery api you",
    "start": "569920",
    "end": "572560"
  },
  {
    "text": "can completely automate",
    "start": "572560",
    "end": "574720"
  },
  {
    "text": "the discovery and subscription to an",
    "start": "574720",
    "end": "576640"
  },
  {
    "text": "event and have",
    "start": "576640",
    "end": "578240"
  },
  {
    "text": "more automated systems",
    "start": "578240",
    "end": "581760"
  },
  {
    "text": "finally the schema registry",
    "start": "583760",
    "end": "586959"
  },
  {
    "text": "so as we see here in a",
    "start": "586959",
    "end": "590800"
  },
  {
    "text": "sample of an event there is a data",
    "start": "590800",
    "end": "593040"
  },
  {
    "text": "schema the data schema basically defines",
    "start": "593040",
    "end": "595519"
  },
  {
    "text": "the structure",
    "start": "595519",
    "end": "596399"
  },
  {
    "text": "of what's inside the data",
    "start": "596399",
    "end": "600160"
  },
  {
    "text": "but that means we will probably need to",
    "start": "600240",
    "end": "603360"
  },
  {
    "text": "be able to publish",
    "start": "603360",
    "end": "604560"
  },
  {
    "text": "schemas in different formats and",
    "start": "604560",
    "end": "606560"
  },
  {
    "text": "different versions",
    "start": "606560",
    "end": "608079"
  },
  {
    "text": "so the schema registry basically aimed",
    "start": "608079",
    "end": "610240"
  },
  {
    "text": "to define",
    "start": "610240",
    "end": "611200"
  },
  {
    "text": "how you consume and publish schema",
    "start": "611200",
    "end": "615519"
  },
  {
    "text": "publicly or privately through a schema",
    "start": "615519",
    "end": "618480"
  },
  {
    "text": "registry",
    "start": "618480",
    "end": "619920"
  },
  {
    "text": "finally let's go back to the",
    "start": "619920",
    "end": "622279"
  },
  {
    "text": "interoperability",
    "start": "622279",
    "end": "624399"
  },
  {
    "text": "with what we saw we can definitely have",
    "start": "624399",
    "end": "627519"
  },
  {
    "text": "different type of topologies one pretty",
    "start": "627519",
    "end": "630480"
  },
  {
    "text": "simple",
    "start": "630480",
    "end": "631440"
  },
  {
    "text": "basically the consumer is sitting next",
    "start": "631440",
    "end": "634640"
  },
  {
    "text": "to the producer",
    "start": "634640",
    "end": "635680"
  },
  {
    "text": "and the producer expose both discovery",
    "start": "635680",
    "end": "638560"
  },
  {
    "text": "and subscription api",
    "start": "638560",
    "end": "640800"
  },
  {
    "text": "and then the consumer just use those",
    "start": "640800",
    "end": "642959"
  },
  {
    "text": "apis",
    "start": "642959",
    "end": "643920"
  },
  {
    "text": "and retrieve the cloud events through",
    "start": "643920",
    "end": "646480"
  },
  {
    "text": "the normal network",
    "start": "646480",
    "end": "649839"
  },
  {
    "text": "then there is the aggregator one",
    "start": "650240",
    "end": "653519"
  },
  {
    "text": "so we can have a system",
    "start": "653519",
    "end": "656560"
  },
  {
    "text": "that will aggregate different cloud",
    "start": "656560",
    "end": "659920"
  },
  {
    "text": "events",
    "start": "659920",
    "end": "660800"
  },
  {
    "text": "from different producer and will expose",
    "start": "660800",
    "end": "664399"
  },
  {
    "text": "the same discovery api and",
    "start": "664399",
    "end": "667839"
  },
  {
    "text": "subscription api so as a consumer",
    "start": "667839",
    "end": "671120"
  },
  {
    "text": "you can just go through your aggregator",
    "start": "671120",
    "end": "673920"
  },
  {
    "text": "and retrieve",
    "start": "673920",
    "end": "674959"
  },
  {
    "text": "any events known by this aggregator",
    "start": "674959",
    "end": "680079"
  },
  {
    "text": "that's a simple use case of an",
    "start": "680640",
    "end": "682720"
  },
  {
    "text": "aggregator you can still sit on",
    "start": "682720",
    "end": "684880"
  },
  {
    "text": "all the same network",
    "start": "684880",
    "end": "688399"
  },
  {
    "text": "the more complex one is the aggregator",
    "start": "688399",
    "end": "690880"
  },
  {
    "text": "chain",
    "start": "690880",
    "end": "692079"
  },
  {
    "text": "so in that case we can have",
    "start": "692079",
    "end": "696560"
  },
  {
    "text": "a aggregator two who basically know two",
    "start": "696560",
    "end": "699519"
  },
  {
    "text": "producers",
    "start": "699519",
    "end": "701519"
  },
  {
    "text": "and expose a subscription and",
    "start": "701519",
    "end": "705040"
  },
  {
    "text": "a discovery api the aggregator one can",
    "start": "705040",
    "end": "708399"
  },
  {
    "text": "just use the aggregator too",
    "start": "708399",
    "end": "711839"
  },
  {
    "text": "and even do some",
    "start": "711839",
    "end": "713810"
  },
  {
    "text": "[Music]",
    "start": "713810",
    "end": "715040"
  },
  {
    "text": "change in the transport going from http",
    "start": "715040",
    "end": "717680"
  },
  {
    "text": "to kafka",
    "start": "717680",
    "end": "719839"
  },
  {
    "text": "and also expose",
    "start": "719839",
    "end": "722880"
  },
  {
    "text": "one subscription and one discovery api",
    "start": "722880",
    "end": "726720"
  },
  {
    "text": "so the consumer can talk to the",
    "start": "726720",
    "end": "728240"
  },
  {
    "text": "aggregator 1 and see",
    "start": "728240",
    "end": "730399"
  },
  {
    "text": "everything that is below from the",
    "start": "730399",
    "end": "732240"
  },
  {
    "text": "aggregator one",
    "start": "732240",
    "end": "734000"
  },
  {
    "text": "and it can be even nicer if we consider",
    "start": "734000",
    "end": "737200"
  },
  {
    "text": "that the aggregator 2",
    "start": "737200",
    "end": "738880"
  },
  {
    "text": "is in fact in company b",
    "start": "738880",
    "end": "742800"
  },
  {
    "text": "and the producer 1 and 2 as well",
    "start": "742800",
    "end": "746320"
  },
  {
    "text": "while in the company a we have one",
    "start": "746320",
    "end": "748959"
  },
  {
    "text": "aggregator",
    "start": "748959",
    "end": "750160"
  },
  {
    "text": "that link automatically",
    "start": "750160",
    "end": "754240"
  },
  {
    "text": "all the events from the company b so you",
    "start": "754240",
    "end": "756480"
  },
  {
    "text": "can expose to your internal",
    "start": "756480",
    "end": "758959"
  },
  {
    "text": "consumer of company a some events from",
    "start": "758959",
    "end": "762240"
  },
  {
    "text": "the company b",
    "start": "762240",
    "end": "763519"
  },
  {
    "text": "without them even having to know about",
    "start": "763519",
    "end": "766480"
  },
  {
    "text": "how the company b",
    "start": "766480",
    "end": "768399"
  },
  {
    "text": "is managed or even the connection",
    "start": "768399",
    "end": "771200"
  },
  {
    "text": "between aggregator 1 and aggregator 2.",
    "start": "771200",
    "end": "775760"
  },
  {
    "text": "so this is a little bit more complex but",
    "start": "775920",
    "end": "777920"
  },
  {
    "text": "i think it's a good proof",
    "start": "777920",
    "end": "779519"
  },
  {
    "text": "of the power behind cloud events and",
    "start": "779519",
    "end": "782320"
  },
  {
    "text": "normalization",
    "start": "782320",
    "end": "783839"
  },
  {
    "text": "as it has a high potential to simplify",
    "start": "783839",
    "end": "787519"
  },
  {
    "text": "communication between systems and",
    "start": "787519",
    "end": "789920"
  },
  {
    "text": "companies",
    "start": "789920",
    "end": "791120"
  },
  {
    "text": "with a common way of subscribing to",
    "start": "791120",
    "end": "793839"
  },
  {
    "text": "events",
    "start": "793839",
    "end": "795279"
  },
  {
    "text": "so this is it for our global overview of",
    "start": "795279",
    "end": "799040"
  },
  {
    "text": "what is cloud events",
    "start": "799040",
    "end": "800959"
  },
  {
    "text": "we meet every first day at",
    "start": "800959",
    "end": "804240"
  },
  {
    "text": "6 00 pm european time 12 pm",
    "start": "804240",
    "end": "808000"
  },
  {
    "text": "new york time and 9 a.m california time",
    "start": "808000",
    "end": "812160"
  },
  {
    "text": "i'm in california so on the 9am",
    "start": "812160",
    "end": "815440"
  },
  {
    "text": "is important for me the you can find",
    "start": "815440",
    "end": "818639"
  },
  {
    "text": "more information on our website",
    "start": "818639",
    "end": "820880"
  },
  {
    "text": "and the spec repository is uh with the",
    "start": "820880",
    "end": "823920"
  },
  {
    "text": "link below",
    "start": "823920",
    "end": "825839"
  },
  {
    "text": "don't hesitate at all to join everybody",
    "start": "825839",
    "end": "828959"
  },
  {
    "text": "is really nice",
    "start": "828959",
    "end": "830160"
  },
  {
    "text": "and welcoming so i've been with",
    "start": "830160",
    "end": "833440"
  },
  {
    "text": "the group for a year and i really enjoy",
    "start": "833440",
    "end": "837279"
  },
  {
    "text": "all the talks and the knowledge that",
    "start": "837279",
    "end": "840079"
  },
  {
    "text": "this whole group share",
    "start": "840079",
    "end": "841440"
  },
  {
    "text": "so thank you very much for having me",
    "start": "841440",
    "end": "843760"
  },
  {
    "text": "listening",
    "start": "843760",
    "end": "844560"
  },
  {
    "text": "until the end and don't hesitate to ask",
    "start": "844560",
    "end": "847839"
  },
  {
    "text": "any question",
    "start": "847839",
    "end": "848560"
  },
  {
    "text": "thank you",
    "start": "848560",
    "end": "852320"
  }
]