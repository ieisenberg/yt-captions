[
  {
    "text": "all right i guess i'm gonna get started since the room is full here and hopefully those of you that are",
    "start": "1360",
    "end": "8080"
  },
  {
    "text": "online and couldn't get in or online and can at least listen or catch the replay",
    "start": "8080",
    "end": "14400"
  },
  {
    "text": "um yeah i think there was about 700 people that registered for the event and when i",
    "start": "14400",
    "end": "19760"
  },
  {
    "text": "saw the room i said this is going to be a lot of unhappy people but it's fine",
    "start": "19760",
    "end": "24800"
  },
  {
    "text": "um yeah so thanks everyone for joining and coming in person they gave me lots",
    "start": "24800",
    "end": "30320"
  },
  {
    "text": "of room but you guys are pretty crammed in out there so",
    "start": "30320",
    "end": "35840"
  },
  {
    "text": "there's only one person here i'll explain a little bit about why pavel's not here and uh and introduce him he also was",
    "start": "39680",
    "end": "46960"
  },
  {
    "text": "able to pre-record a few sections of the presentation so you'll hear directly",
    "start": "46960",
    "end": "52480"
  },
  {
    "text": "from pavel my name's mccowell i work on yeager",
    "start": "52480",
    "end": "58800"
  },
  {
    "text": "i'm the cto at logs i o work",
    "start": "58800",
    "end": "62878"
  },
  {
    "text": "let's put them together service one of the tools that we offer",
    "start": "66799",
    "end": "73200"
  },
  {
    "text": "is jaeger along with prometheus and open search and so i",
    "start": "73200",
    "end": "79119"
  },
  {
    "text": "spend a lot of time working but when i'm not working i try to be underwater some photos i've taken recently",
    "start": "79119",
    "end": "86240"
  },
  {
    "text": "spend a lot of time diving i live near miami florida and",
    "start": "86240",
    "end": "92720"
  },
  {
    "text": "yeah a lot of work i have povel's bio that's why i'm pulling it up and so pavel",
    "start": "92720",
    "end": "100280"
  },
  {
    "text": "here so hopefully pavel's colleagues he's a senior software",
    "start": "106479",
    "end": "114200"
  },
  {
    "text": "okay for you sorry",
    "start": "126240",
    "end": "132479"
  },
  {
    "text": "all right lots of bikes okay",
    "start": "132800",
    "end": "138640"
  },
  {
    "text": "uh so pavel is uh is a senior software engineer red hat",
    "start": "138640",
    "end": "143840"
  },
  {
    "text": "working on distributed tracing and observability for modern cloud native applications pavel contributes to",
    "start": "143840",
    "end": "150879"
  },
  {
    "text": "several cm cncf projects including open telemetry and jager and",
    "start": "150879",
    "end": "156720"
  },
  {
    "text": "pavel spends a lot of time in the mountains which is why you see these awesome pictures he's always sending me photos of him",
    "start": "156720",
    "end": "163599"
  },
  {
    "text": "skiing and climbing and making his dog do uncomfortable things in the mountains so it's always",
    "start": "163599",
    "end": "169680"
  },
  {
    "text": "enjoyable pavel is great to work with he's definitely part of the team",
    "start": "169680",
    "end": "175280"
  },
  {
    "text": "working on jaeger and great to work with him there and on open telemetry so you'll hear from pavel",
    "start": "175280",
    "end": "181680"
  },
  {
    "text": "a bit and i'll also talk a little bit uh through the presentation um today we're going to cover a few",
    "start": "181680",
    "end": "187840"
  },
  {
    "text": "different things i'm going to talk about some of the basics i'm not going to go into a whole tutorial about distributed",
    "start": "187840",
    "end": "194159"
  },
  {
    "text": "tracing because you're going to get that in many of the open telemetry talks going on this week",
    "start": "194159",
    "end": "200879"
  },
  {
    "text": "i know my colleague dotan is speaking tomorrow about open telemetry but i'm going to go into a few basics",
    "start": "200879",
    "end": "207599"
  },
  {
    "text": "just for context because i'm sure many of you aren't tracing people and you're just trying to see what jaeger can do",
    "start": "207599",
    "end": "214720"
  },
  {
    "text": "for you and what this tracing thing is all about and then pavel is going to go a little",
    "start": "214720",
    "end": "220879"
  },
  {
    "text": "bit more deep into jaeger and open telemetry and how they work together",
    "start": "220879",
    "end": "226720"
  },
  {
    "text": "i'm going to talk about a really cool feature probably the biggest jaeger feature that's been built in the last",
    "start": "226720",
    "end": "232560"
  },
  {
    "text": "couple of years is how we've integrated prometheus into jaeger and you can now do application",
    "start": "232560",
    "end": "239280"
  },
  {
    "text": "performance monitoring inside of jaeger and it's nice to have the compatibility",
    "start": "239280",
    "end": "244720"
  },
  {
    "text": "with the prometheus ecosystem so i'm going to talk about that and then pavel will discuss the operator",
    "start": "244720",
    "end": "252319"
  },
  {
    "text": "he spends a lot of time and obviously it's super important for those running on kubernetes or openshift",
    "start": "252319",
    "end": "259199"
  },
  {
    "text": "to use the operator and so he's going to talk about that and then i'll touch on",
    "start": "259199",
    "end": "264400"
  },
  {
    "text": "the roadmap and where jaeger's going for those of you that are using it and want to see kind of what the vision is and",
    "start": "264400",
    "end": "270639"
  },
  {
    "text": "then we'll do some q a so without further ado i'm going to jump in here",
    "start": "270639",
    "end": "277120"
  },
  {
    "text": "um so a few semantics one jaeger was created and it was a project created by",
    "start": "277120",
    "end": "283199"
  },
  {
    "text": "uber and then donated to the cncf it's one of the few graduated projects of the",
    "start": "283199",
    "end": "288880"
  },
  {
    "text": "cncf so it's considered mature it's been around for a while it was actually built",
    "start": "288880",
    "end": "294720"
  },
  {
    "text": "around open tracing which is the predecessor to open telemetry so some of",
    "start": "294720",
    "end": "300479"
  },
  {
    "text": "the things in the ui and some of the semantics might use slightly different terminology but i'm going to talk in",
    "start": "300479",
    "end": "306800"
  },
  {
    "text": "open telemetry words because that's what you're going to instrument your applications with and",
    "start": "306800",
    "end": "313039"
  },
  {
    "text": "it's by and large very similar to open tracing so the trace is basically think about an",
    "start": "313039",
    "end": "319280"
  },
  {
    "text": "end-to-end transaction that's going through a bunch of different microservices",
    "start": "319280",
    "end": "324320"
  },
  {
    "text": "and that's what the trace is each of those microservices and the pieces they're executing is a span",
    "start": "324320",
    "end": "331120"
  },
  {
    "text": "so even if you're not in a microservices architecture anytime you're calling a service which is calling a service which",
    "start": "331120",
    "end": "338080"
  },
  {
    "text": "is calling a service you're going to get trace data and the span itself is basically the",
    "start": "338080",
    "end": "344160"
  },
  {
    "text": "work that one component is doing in your application and then inside of the span you can have",
    "start": "344160",
    "end": "351280"
  },
  {
    "text": "a bunch of different types of data but tags are extremely useful so if you're running on kubernetes",
    "start": "351280",
    "end": "358240"
  },
  {
    "text": "you can auto populate the data about your kubernetes infrastructure inside the span so that when you're",
    "start": "358240",
    "end": "364720"
  },
  {
    "text": "troubleshooting a problem you might say that a particular pod is having an issue because",
    "start": "364720",
    "end": "370720"
  },
  {
    "text": "all of the transactions with that tag are showing an issue with that pod name",
    "start": "370720",
    "end": "376400"
  },
  {
    "text": "um so that's what the tags are used for and people stuff all kinds of things into",
    "start": "376400",
    "end": "381600"
  },
  {
    "text": "tags you can even like stick a whole log message into a tag it's not always the best idea but",
    "start": "381600",
    "end": "388080"
  },
  {
    "text": "i've seen some crazy stuff and people also will create a lot of different types of span data",
    "start": "388080",
    "end": "395919"
  },
  {
    "text": "related to a trace because it's your code you can essentially instrument and build out that visibility",
    "start": "395919",
    "end": "403360"
  },
  {
    "text": "in any way that you want so open telemetry supports a lot of different types of",
    "start": "403360",
    "end": "409039"
  },
  {
    "text": "instrumentation from sdks to apis to auto instrumentation and you'll hear",
    "start": "409039",
    "end": "414639"
  },
  {
    "text": "about that in hotel discussions and logs so like another way to look at this",
    "start": "414639",
    "end": "420720"
  },
  {
    "text": "visually and i'll show you how it looks in jager is basically we call this the root span that's the",
    "start": "420720",
    "end": "427360"
  },
  {
    "text": "first part of the transaction up at the top and then essentially can cascade through",
    "start": "427360",
    "end": "432680"
  },
  {
    "text": "asynchronously or synchronously and as these things execute you basically build",
    "start": "432680",
    "end": "439599"
  },
  {
    "text": "you know a tree of what the trace looks like and then another way to look at this is over time",
    "start": "439599",
    "end": "446000"
  },
  {
    "text": "so as i progress from left to right what are the things that are executing what things",
    "start": "446000",
    "end": "451840"
  },
  {
    "text": "are executing at the same time where is there potentially blockers that's really",
    "start": "451840",
    "end": "456880"
  },
  {
    "text": "what tracing is useful for and to see where errors latency or other problems are",
    "start": "456880",
    "end": "464639"
  },
  {
    "text": "within the trace itself so in the jaeger ui",
    "start": "464639",
    "end": "469840"
  },
  {
    "text": "here we're basically just visualizing over time this is a relatively short transaction",
    "start": "469840",
    "end": "475599"
  },
  {
    "text": "700 milliseconds and then you can see where the time is spent but a good example of you know",
    "start": "475599",
    "end": "482639"
  },
  {
    "text": "potentially some issues is when you see things that are stacked up like this",
    "start": "482639",
    "end": "487680"
  },
  {
    "text": "that shows that there's potentially ways that you could improve this by threading it or changing your application",
    "start": "487680",
    "end": "494160"
  },
  {
    "text": "and then things like errors show up and you can actually drill inside the ui",
    "start": "494160",
    "end": "499599"
  },
  {
    "text": "so that's basically how jaeger visualizes traces and then obviously in this case we're",
    "start": "499599",
    "end": "506000"
  },
  {
    "text": "looking at you know front end service and then you can watch as it goes through the back end services",
    "start": "506000",
    "end": "511599"
  },
  {
    "text": "so it's just kind of an example um so pavel is going to explain a little",
    "start": "511599",
    "end": "517039"
  },
  {
    "text": "bit about jaeger and open telemetry for a few minutes here in the video and i",
    "start": "517039",
    "end": "522719"
  },
  {
    "text": "will uh touch on that a little bit later because it is an important part of our road map",
    "start": "522719",
    "end": "528640"
  },
  {
    "text": "so here is pavel hello everyone my name is paul and in this part i will talk about jaeger in",
    "start": "528640",
    "end": "536000"
  },
  {
    "text": "open terminology first of all i want to explain the differences between these two projects",
    "start": "536000",
    "end": "541760"
  },
  {
    "text": "and ecosystem and then i want a bit more kind of explain",
    "start": "541760",
    "end": "548800"
  },
  {
    "text": "or introduce to open telemetry and last but not least i want to talk about",
    "start": "548800",
    "end": "555920"
  },
  {
    "text": "integrations between these two projects so what is the difference between",
    "start": "555920",
    "end": "562800"
  },
  {
    "text": "open telemetry or hotel how we call it and jager so",
    "start": "562800",
    "end": "568080"
  },
  {
    "text": "open telemetry is all about data collection it provides capabilities to",
    "start": "568080",
    "end": "573839"
  },
  {
    "text": "together telemetry data from our applications",
    "start": "573839",
    "end": "580000"
  },
  {
    "text": "process it and then send it to to any kind of vendor of our choice",
    "start": "580000",
    "end": "587600"
  },
  {
    "text": "on the other hand jaeger is just a platform it's a kind of a server that you can run on your machine or in the",
    "start": "587600",
    "end": "594240"
  },
  {
    "text": "cloud and it has api to ingest but as well query and visualize",
    "start": "594240",
    "end": "602000"
  },
  {
    "text": "tracing data and uh you know before",
    "start": "602000",
    "end": "608640"
  },
  {
    "text": "i think 2021 jaeger ecosystem as well provided",
    "start": "608640",
    "end": "614560"
  },
  {
    "text": "the client libraries that we could use to instrument our applications but this you know part of the ecosystem",
    "start": "614560",
    "end": "622640"
  },
  {
    "text": "is now deprecated and the main purpose of jaeger is just the platform",
    "start": "622640",
    "end": "628720"
  },
  {
    "text": "right now so a server that you can actually deploy somewhere",
    "start": "628720",
    "end": "634640"
  },
  {
    "text": "so let's talk about a bit more about open telemetry i'm pretty sure there is a different",
    "start": "635040",
    "end": "641120"
  },
  {
    "text": "open telemetry presentation at this conference but",
    "start": "641120",
    "end": "646640"
  },
  {
    "text": "just for the context of this talk i want to",
    "start": "646640",
    "end": "651920"
  },
  {
    "text": "introduce you to open telemetry and as i mentioned open telemetry is all",
    "start": "651920",
    "end": "657120"
  },
  {
    "text": "about the data collection and data collection is very complex and difficult",
    "start": "657120",
    "end": "666160"
  },
  {
    "text": "problem because if you want to deploy you know if you want to do",
    "start": "667040",
    "end": "676079"
  },
  {
    "text": "observability right then we need to collect as much telemetry data as possible",
    "start": "676079",
    "end": "682480"
  },
  {
    "text": "and the problem is that there is too many or not too many but there is many",
    "start": "682480",
    "end": "687680"
  },
  {
    "text": "programming languages and uh there is still there's too many or",
    "start": "687680",
    "end": "692959"
  },
  {
    "text": "many uh frameworks in all of those languages and if you want to do",
    "start": "692959",
    "end": "698560"
  },
  {
    "text": "if you want to understand what is happening you know in our applications we really need to instrument all those",
    "start": "698560",
    "end": "705600"
  },
  {
    "text": "frameworks and this is a huge kind of job to to",
    "start": "705600",
    "end": "711519"
  },
  {
    "text": "to do right because there is just too many of those frameworks and and for example like database clients and",
    "start": "711519",
    "end": "718560"
  },
  {
    "text": "whatnot so this is kind of the first part of the open telemetry ecosystem is the",
    "start": "718560",
    "end": "724240"
  },
  {
    "text": "instrumentation libraries for you know various rpc or database clients",
    "start": "724240",
    "end": "731279"
  },
  {
    "text": "or for different languages the second part of the ecosystem is the",
    "start": "731279",
    "end": "737680"
  },
  {
    "text": "open thermos collector which is able to receive data from those instrumentations",
    "start": "737680",
    "end": "744720"
  },
  {
    "text": "the process the data and then send it to to observability platform",
    "start": "744720",
    "end": "751519"
  },
  {
    "text": "and last part of the ecosystem is a specification that basically",
    "start": "751519",
    "end": "756839"
  },
  {
    "text": "standardizes what telemetry data should be collected",
    "start": "756839",
    "end": "762720"
  },
  {
    "text": "to be kind of consistent across languages and frameworks",
    "start": "763279",
    "end": "768320"
  },
  {
    "text": "so let's uh now take a look at the kind of reference architecture",
    "start": "769440",
    "end": "776320"
  },
  {
    "text": "when instrumenting the the application",
    "start": "776320",
    "end": "782880"
  },
  {
    "text": "so on this slide what we see on the upper part it's user application process",
    "start": "782880",
    "end": "789360"
  },
  {
    "text": "so it's our application in other words and it is instrumented with",
    "start": "789360",
    "end": "795600"
  },
  {
    "text": "some instrumentation api to collect tracing data and then",
    "start": "795600",
    "end": "801279"
  },
  {
    "text": "this you know instrumentation code is then sending this data to the",
    "start": "801279",
    "end": "807040"
  },
  {
    "text": "agent and collector and finally data which is the platform",
    "start": "807040",
    "end": "812320"
  },
  {
    "text": "so for the instrumentation api we used to use the open tracing api",
    "start": "812320",
    "end": "818240"
  },
  {
    "text": "uh which jaeger clients used to implement",
    "start": "818240",
    "end": "823680"
  },
  {
    "text": "uh but this is not deprecated and we encourage our users to use open telemetry api and sdk to instrument the",
    "start": "823680",
    "end": "831760"
  },
  {
    "text": "applications and then for the agent and collector uh you can",
    "start": "831760",
    "end": "837839"
  },
  {
    "text": "still use jager agent and jager collector but you have as well choice to use open",
    "start": "837839",
    "end": "845040"
  },
  {
    "text": "thermometric collector as a replacement especially for the jager agent",
    "start": "845040",
    "end": "852079"
  },
  {
    "text": "for the jager collector you still have to use jager collector if you want to use",
    "start": "852079",
    "end": "857680"
  },
  {
    "text": "jaeger but in some scenarios you can use",
    "start": "857680",
    "end": "863120"
  },
  {
    "text": "open telemetry collector and then send data to jaeger collector which will",
    "start": "863120",
    "end": "868959"
  },
  {
    "text": "you know store the data to persistent storage so let's",
    "start": "868959",
    "end": "874720"
  },
  {
    "text": "talk a bit more about open theometric collector because now maybe you are confused what is the",
    "start": "874720",
    "end": "880079"
  },
  {
    "text": "difference between jaeger and open parametrical data so older collector is essentially a",
    "start": "880079",
    "end": "885760"
  },
  {
    "text": "pipeline that can receive data in multiple formats process it and then export the same data",
    "start": "885760",
    "end": "892480"
  },
  {
    "text": "to to a different system and the jaeger collector is is",
    "start": "892480",
    "end": "900480"
  },
  {
    "text": "is a lot different because it can only receive data in jaeger or zipkit format",
    "start": "900480",
    "end": "905920"
  },
  {
    "text": "and then store it to to persistent storage supported by the jager",
    "start": "905920",
    "end": "911120"
  },
  {
    "text": "platform which is you know cassandra elasticsearch badger or kafka",
    "start": "911120",
    "end": "916880"
  },
  {
    "text": "an open television corrector doesn't provide any storage or query capabilities it just receives data",
    "start": "916880",
    "end": "923680"
  },
  {
    "text": "processes and then you know sends these to to platform which in our",
    "start": "923680",
    "end": "929600"
  },
  {
    "text": "case is easier so in the hotel collector there is it's",
    "start": "929600",
    "end": "934639"
  },
  {
    "text": "kind of the functionality is divided into three main components which is the receiver",
    "start": "934639",
    "end": "940320"
  },
  {
    "text": "the processor to process the data so for example do pii filtering data normalization",
    "start": "940320",
    "end": "947120"
  },
  {
    "text": "or even export or kind of extract metrics from traces and jonah will talk",
    "start": "947120",
    "end": "954320"
  },
  {
    "text": "about it uh in more detail and last but not least export data to a",
    "start": "954320",
    "end": "960639"
  },
  {
    "text": "different system so it's kind of like pipeline very flexible one that allows you to you know",
    "start": "960639",
    "end": "966480"
  },
  {
    "text": "process the data what is super cool is that you know a single stream of data you can process it",
    "start": "966480",
    "end": "972800"
  },
  {
    "text": "and then export to for example to multiple systems so you can keep some data",
    "start": "972800",
    "end": "979360"
  },
  {
    "text": "in or export it to jager that you have deployed locally in your",
    "start": "979360",
    "end": "985440"
  },
  {
    "text": "in your environment but as well export the same data to",
    "start": "985440",
    "end": "991519"
  },
  {
    "text": "to an observability vendor right so this is the collector and now",
    "start": "991519",
    "end": "998000"
  },
  {
    "text": "let's talk about the integrations between jaeger and",
    "start": "998000",
    "end": "1004800"
  },
  {
    "text": "open telemetry so first set of integrations is done in",
    "start": "1005040",
    "end": "1010079"
  },
  {
    "text": "the instrumentations so especially in the open telemetry sdks",
    "start": "1010079",
    "end": "1015120"
  },
  {
    "text": "so as i mentioned before the jaeger client or jager ecosystem used to provide eager clients that we could use",
    "start": "1015120",
    "end": "1021839"
  },
  {
    "text": "to instrument our applications however those clients are deprecated",
    "start": "1021839",
    "end": "1027120"
  },
  {
    "text": "right now and we encourage users to use open telemetry sdks and apis",
    "start": "1027120",
    "end": "1032720"
  },
  {
    "text": "and to better kind of support migration to open telemetry we have done bunch of",
    "start": "1032720",
    "end": "1038000"
  },
  {
    "text": "work on the open telemetry sdks uh and so the hotel sdk supports",
    "start": "1038000",
    "end": "1044959"
  },
  {
    "text": "the jager context propagation header or format so [Music] if you are already using gaming clients",
    "start": "1044959",
    "end": "1052240"
  },
  {
    "text": "and you are using jager context propagation you should be able to deploy new service instrumentally to open telemetry and",
    "start": "1052240",
    "end": "1059200"
  },
  {
    "text": "kind of make and use this piece of code that will make sure that the traces are not broken and the",
    "start": "1059200",
    "end": "1065280"
  },
  {
    "text": "context propagation works across the old and new services",
    "start": "1065280",
    "end": "1071280"
  },
  {
    "text": "and the second integration in the hotel sdk is that",
    "start": "1072000",
    "end": "1077919"
  },
  {
    "text": "there is jaeger remote center implementation so if you are using jaeger's sampler",
    "start": "1077919",
    "end": "1083600"
  },
  {
    "text": "jager email sampler you should be able to use it with open telemetry sdks as well",
    "start": "1083600",
    "end": "1089760"
  },
  {
    "text": "now let's talk about open telemetry collector and jager integrations",
    "start": "1090400",
    "end": "1096240"
  },
  {
    "text": "so in the hotel collector there is jaeger receiver that can receive bigger data in pretty much all supported",
    "start": "1096240",
    "end": "1102880"
  },
  {
    "text": "formats then",
    "start": "1102880",
    "end": "1107960"
  },
  {
    "text": "then there is jaeger exporter that can export data to jaeger",
    "start": "1108480",
    "end": "1114480"
  },
  {
    "text": "there is as well jaegerino sampler extension so essentially you can just grab your sampling configuration from",
    "start": "1114480",
    "end": "1122080"
  },
  {
    "text": "eager collector and use it in open telemetry collector and last but not least",
    "start": "1122080",
    "end": "1128960"
  },
  {
    "text": "open telemetry collector integrates with kafka and you can configure it to use jaeger",
    "start": "1128960",
    "end": "1137280"
  },
  {
    "text": "as a payload type and the last integration is in jaeger",
    "start": "1137280",
    "end": "1145520"
  },
  {
    "text": "query component or eager query so we have edit jaeger v3 query api",
    "start": "1145520",
    "end": "1151919"
  },
  {
    "text": "which is very similar to jager v2 with one major difference is that the",
    "start": "1151919",
    "end": "1157440"
  },
  {
    "text": "payload is not jaeger type but is it comes from open telemetry and it is",
    "start": "1157440",
    "end": "1164960"
  },
  {
    "text": "open telemetry resource spans i highly encourage you to take a look at",
    "start": "1164960",
    "end": "1171440"
  },
  {
    "text": "this query api if you want to",
    "start": "1171440",
    "end": "1176840"
  },
  {
    "text": "query open telemetry data from jaeger platform",
    "start": "1176840",
    "end": "1183200"
  },
  {
    "text": "okay thank you very much and this is everything from the jaeger and open telemetry integrations",
    "start": "1183200",
    "end": "1190080"
  },
  {
    "text": "art cool thanks pablo hopefully he's listening",
    "start": "1190080",
    "end": "1196320"
  },
  {
    "text": "but he has one other section you can hold the applause until he's actually done um but yeah i mean uh pavel's done a lot",
    "start": "1196320",
    "end": "1203520"
  },
  {
    "text": "of work and i'll also talk about uh where things are going between jaeger and open telemetry because",
    "start": "1203520",
    "end": "1209679"
  },
  {
    "text": "there's definitely overlap the sampling implementation for those that are really into tracing that yeager",
    "start": "1209679",
    "end": "1216159"
  },
  {
    "text": "allows for is a head-based sampling but it's it can be dynamic and it was built at uber specifically",
    "start": "1216159",
    "end": "1222880"
  },
  {
    "text": "for them to change uh instrumentation dynamically based on",
    "start": "1222880",
    "end": "1227919"
  },
  {
    "text": "load or other types of characteristics but it's predetermined at the beginning of the transaction not at the end like a",
    "start": "1227919",
    "end": "1235679"
  },
  {
    "text": "tail-based sampler so there's actually better sampling methods and open telemetry but that's",
    "start": "1235679",
    "end": "1241520"
  },
  {
    "text": "a whole nother talk to have so i wanted to talk a little bit about jaeger and prometheus in the new",
    "start": "1241520",
    "end": "1248480"
  },
  {
    "text": "monitoring tab that's part of jaeger we're we're always refining it but it's been out for uh many months now so if",
    "start": "1248480",
    "end": "1255760"
  },
  {
    "text": "you grab the newest version of jager uh it's in there and what it is is it's",
    "start": "1255760",
    "end": "1260960"
  },
  {
    "text": "basically this moves jaeger from a distributed tracing or debugging ui into",
    "start": "1260960",
    "end": "1267520"
  },
  {
    "text": "a bit more of a monitoring ui and allows you to actually see operationally what's happening with your",
    "start": "1267520",
    "end": "1273760"
  },
  {
    "text": "service and apm is typically a combination of tracing and metrics together so that you",
    "start": "1273760",
    "end": "1281440"
  },
  {
    "text": "can understand when your service is starting to show uh errors going up or latency going up",
    "start": "1281440",
    "end": "1287760"
  },
  {
    "text": "or some other characteristic that's showing it's unhealthy or having an issue and this opens use cases for monitoring",
    "start": "1287760",
    "end": "1295760"
  },
  {
    "text": "alerting and things like capacity planning as well",
    "start": "1295760",
    "end": "1300880"
  },
  {
    "text": "whether we're going to implement alerting in jager still tbd we'll see",
    "start": "1301919",
    "end": "1307760"
  },
  {
    "text": "there's also a new uh capability that we built it's actually this is the old name",
    "start": "1307760",
    "end": "1313200"
  },
  {
    "text": "is aggregated trace metrics that we called it now it's called service performance monitoring spm",
    "start": "1313200",
    "end": "1320240"
  },
  {
    "text": "in the jager documentation we renamed it a little while ago but the",
    "start": "1320240",
    "end": "1325280"
  },
  {
    "text": "idea is how do we integrate these two things together instead of building metrics in jager we just said everyone's",
    "start": "1325280",
    "end": "1331919"
  },
  {
    "text": "using prometheus let's make this uh part of the way that people uh",
    "start": "1331919",
    "end": "1337600"
  },
  {
    "text": "already work and then once it's in prometheus not only can you visualize it in jaeger but you can use whatever front",
    "start": "1337600",
    "end": "1344559"
  },
  {
    "text": "end you're you're used to using probably grafana for the ui um so the thing that we tried to solve",
    "start": "1344559",
    "end": "1352240"
  },
  {
    "text": "is how do we generate the metrics from the traces this is where otel comes in",
    "start": "1352240",
    "end": "1358799"
  },
  {
    "text": "so what we built is a processor when pavo was talking about the pipeline",
    "start": "1358799",
    "end": "1364159"
  },
  {
    "text": "your trace data comes in from the application and then we built a processor which is called the span",
    "start": "1364159",
    "end": "1370480"
  },
  {
    "text": "metrics processor and i'll i'll have a link to that and then the idea is you",
    "start": "1370480",
    "end": "1376320"
  },
  {
    "text": "export the metrics from open telemetry into any format that you want even if it's not a",
    "start": "1376320",
    "end": "1382799"
  },
  {
    "text": "prometheus backend you can export it but in jager we only support prometheus",
    "start": "1382799",
    "end": "1388000"
  },
  {
    "text": "based back ends for the query side and so this means in our case at my",
    "start": "1388000",
    "end": "1394720"
  },
  {
    "text": "company we use m3 db but if you're using thanos or cortex or",
    "start": "1394720",
    "end": "1400720"
  },
  {
    "text": "victoria metrics or whatever kind of prometheus back end as long as it supports prom ql",
    "start": "1400720",
    "end": "1407520"
  },
  {
    "text": "uh in remote right uh it'll work seamlessly um and then the idea is we derive the",
    "start": "1407520",
    "end": "1414320"
  },
  {
    "text": "metrics from the traces automatically and then we're actually able to store",
    "start": "1414320",
    "end": "1419520"
  },
  {
    "text": "them and visualize them so i'm going to show you how this works in configuration this is a",
    "start": "1419520",
    "end": "1427039"
  },
  {
    "text": "open telemetry collector sample config and basically in here",
    "start": "1427039",
    "end": "1433840"
  },
  {
    "text": "you're we're talking about that span metrics processor the up at the top you can actually define",
    "start": "1433840",
    "end": "1440400"
  },
  {
    "text": "what kind of buckets you want and so when you're looking at a histogram uh",
    "start": "1440400",
    "end": "1445440"
  },
  {
    "text": "depending on how you want to segment the data and how you want to store it uh that's totally configurable based on uh",
    "start": "1445440",
    "end": "1452559"
  },
  {
    "text": "what makes sense for you this is kind of the default buckets for histograms that we've set up",
    "start": "1452559",
    "end": "1458640"
  },
  {
    "text": "and then down towards the bottom is the pipeline where you would listen for jaeger traces in this case",
    "start": "1458640",
    "end": "1466320"
  },
  {
    "text": "you would process it and create the metrics and then in the",
    "start": "1466320",
    "end": "1471360"
  },
  {
    "text": "case of uh and then you would basically define the exporter now down here on the bottom we",
    "start": "1471360",
    "end": "1477919"
  },
  {
    "text": "can send it to prometheus you can send it to whatever back end you want and this essentially uh will create that",
    "start": "1477919",
    "end": "1485440"
  },
  {
    "text": "and there's a link uh the presentation and pdf is in the sched the scheduling app so you can",
    "start": "1485440",
    "end": "1491760"
  },
  {
    "text": "always download it and the link will work that actually goes to the collector uh code base",
    "start": "1491760",
    "end": "1499120"
  },
  {
    "text": "but this is part of the contrib collector distribution uh if you're using open telemetry",
    "start": "1499120",
    "end": "1507279"
  },
  {
    "text": "and so you can visualize it a couple of different ways in this case as an example we visualized it inside of",
    "start": "1507279",
    "end": "1514320"
  },
  {
    "text": "grafana just to show you how you can use the histograms and then inside jaeger we created a new",
    "start": "1514320",
    "end": "1521840"
  },
  {
    "text": "service called the metric query service and that will query any prom ql uh back",
    "start": "1521840",
    "end": "1528640"
  },
  {
    "text": "end that that understands the prom ql query language and uh today it supports you know",
    "start": "1528640",
    "end": "1535679"
  },
  {
    "text": "whatever kind of back end i put a few examples and others can add so if you let's say",
    "start": "1535679",
    "end": "1542720"
  },
  {
    "text": "use influx db or a proprietary metric solution from a",
    "start": "1542720",
    "end": "1548080"
  },
  {
    "text": "vendor you could actually modify the metric query service to the vendor that you're using or the",
    "start": "1548080",
    "end": "1554720"
  },
  {
    "text": "solution that you're using and and it would still work in the jaeger ui",
    "start": "1554720",
    "end": "1559760"
  },
  {
    "text": "so in the monitoring tab there's basically a new little tabs that says monitor and then basically we're",
    "start": "1559760",
    "end": "1566880"
  },
  {
    "text": "visualizing um you know the top services uh and then there's a few out of the box",
    "start": "1566880",
    "end": "1573919"
  },
  {
    "text": "uh kind of columns that we're looking at here uh that we've defined it's relatively basic but at least it starts",
    "start": "1573919",
    "end": "1580880"
  },
  {
    "text": "to get people thinking about how you can operationalize trace data which um",
    "start": "1580880",
    "end": "1587120"
  },
  {
    "text": "not a lot of open source tools uh can do so uh this makes it a bit more useful",
    "start": "1587120",
    "end": "1593200"
  },
  {
    "text": "and we hear great things from users a lot of people have actually taken that",
    "start": "1593200",
    "end": "1598559"
  },
  {
    "text": "open telemetry piece that we built and they're using it for all kinds of other use cases because there's a lot of",
    "start": "1598559",
    "end": "1605679"
  },
  {
    "text": "useful data when you create metrics uh from traces",
    "start": "1605679",
    "end": "1611279"
  },
  {
    "text": "um cool and i'm gonna pass it back to pavel to talk about the operator he's done a",
    "start": "1611279",
    "end": "1617520"
  },
  {
    "text": "ton of work on this over the last few years and it's uh it's definitely one of the",
    "start": "1617520",
    "end": "1622640"
  },
  {
    "text": "main ways that people are deploying jager and deploying other parts around the jaeger ecosystem",
    "start": "1622640",
    "end": "1629520"
  },
  {
    "text": "so pavel's going to explain a short bit about the operator hello everyone it's",
    "start": "1629520",
    "end": "1635600"
  },
  {
    "text": "paul again and in this section i will talk about jaeger kubernetes operator",
    "start": "1635600",
    "end": "1640720"
  },
  {
    "text": "so jaeger operator is essentially a kubernetes operator that you can deploy in your cluster",
    "start": "1640720",
    "end": "1646320"
  },
  {
    "text": "and it will take care of jager configuration",
    "start": "1646320",
    "end": "1652640"
  },
  {
    "text": "and installation on your behalf",
    "start": "1652640",
    "end": "1657360"
  },
  {
    "text": "if you are interested in the operator you can find a source code on giga tracing slash jaeger",
    "start": "1657679",
    "end": "1664399"
  },
  {
    "text": "operator or this as well good documentation on the yiga tracing that io",
    "start": "1664399",
    "end": "1671440"
  },
  {
    "text": "so first of all like why you should be using the operator instead of plain kubernetes manifest files",
    "start": "1672000",
    "end": "1679760"
  },
  {
    "text": "and the the answer is the operator is kind of more sophisticated",
    "start": "1679760",
    "end": "1686320"
  },
  {
    "text": "and is kind of smarter on on how the jaeger deployment should look",
    "start": "1686320",
    "end": "1692000"
  },
  {
    "text": "like and probably the biggest advantage for the operator is",
    "start": "1692000",
    "end": "1699520"
  },
  {
    "text": "that it will help you with day two activities like upgrades",
    "start": "1699520",
    "end": "1706320"
  },
  {
    "text": "scaling and monitoring of jaeger deployments",
    "start": "1706320",
    "end": "1712399"
  },
  {
    "text": "uh it's as well the operator kind of as well automatically recognizes what you",
    "start": "1713440",
    "end": "1719840"
  },
  {
    "text": "have installed in your kubernetes cluster and as well like which distribution of kubernetes cluster",
    "start": "1719840",
    "end": "1726640"
  },
  {
    "text": "you are using and based on that it will kind of",
    "start": "1726640",
    "end": "1732080"
  },
  {
    "text": "unlock features that are specific to that api platform",
    "start": "1732080",
    "end": "1739840"
  },
  {
    "text": "if you are for some reason cannot use the operator then the jaeger operator you can use it",
    "start": "1740559",
    "end": "1745840"
  },
  {
    "text": "as a binary to to generate plain kubernetes manifest files",
    "start": "1745840",
    "end": "1753679"
  },
  {
    "text": "from the givencr which brings us to the cr and",
    "start": "1753679",
    "end": "1758960"
  },
  {
    "text": "i'm pretty sure that almost everybody here is familiar with the term custom resource definition",
    "start": "1758960",
    "end": "1764640"
  },
  {
    "text": "and on this slide we see the custom resource definition for the jaeger uh and it is essentially a yaml file",
    "start": "1764640",
    "end": "1772159"
  },
  {
    "text": "where you can kind of describe uh how the",
    "start": "1772159",
    "end": "1777360"
  },
  {
    "text": "jaeger deployment or jager cluster should look",
    "start": "1777360",
    "end": "1782399"
  },
  {
    "text": "like and we will take a look at you know",
    "start": "1782399",
    "end": "1787679"
  },
  {
    "text": "parts of this crd to explain the operator features",
    "start": "1787679",
    "end": "1793520"
  },
  {
    "text": "and the first part that we will explain is the strategy",
    "start": "1793520",
    "end": "1798799"
  },
  {
    "text": "and uh there are three strategies right now the first one is all in one in all in one",
    "start": "1798799",
    "end": "1805520"
  },
  {
    "text": "strategy the jager operator will deploy jaeger as a single binary",
    "start": "1805520",
    "end": "1812320"
  },
  {
    "text": "and this single binary will then you know talk to persistent storage or you can",
    "start": "1812320",
    "end": "1818320"
  },
  {
    "text": "even skip the persistent storage if you will use the in-memory option with",
    "start": "1818320",
    "end": "1823679"
  },
  {
    "text": "jagger the second strategy is production the production strategy essentially",
    "start": "1823679",
    "end": "1829840"
  },
  {
    "text": "splits jaeger collector and query into two separate deployments that you can scale",
    "start": "1829840",
    "end": "1835279"
  },
  {
    "text": "independently if you will hit scalability limits with this you know deployment",
    "start": "1835279",
    "end": "1844240"
  },
  {
    "text": "strategy then you can switch to streaming that essentially splits or decouples",
    "start": "1844240",
    "end": "1851200"
  },
  {
    "text": "jaeger collector from the persistent storage by putting kafka in between",
    "start": "1851200",
    "end": "1858398"
  },
  {
    "text": "uh and this is by far the most scalable jager deployment that you can achieve",
    "start": "1858480",
    "end": "1864480"
  },
  {
    "text": "with jager operator so now let's take a look how we",
    "start": "1864480",
    "end": "1870080"
  },
  {
    "text": "configure the storage uh in the cr",
    "start": "1870080",
    "end": "1876080"
  },
  {
    "text": "the storage uh you know you can configure it in under",
    "start": "1876080",
    "end": "1881679"
  },
  {
    "text": "in the crd under spec dot storage node and there are two",
    "start": "1881679",
    "end": "1888159"
  },
  {
    "text": "most important kind of configuration fields first one is type where you can define which",
    "start": "1888159",
    "end": "1895120"
  },
  {
    "text": "storage type you want to use there is in memory elasticsearch cassandra pager even grpc plugin and",
    "start": "1895120",
    "end": "1903120"
  },
  {
    "text": "kafka and the second option is the options that is",
    "start": "1903120",
    "end": "1909440"
  },
  {
    "text": "loosely coupled and here we put the",
    "start": "1909440",
    "end": "1914960"
  },
  {
    "text": "the storage related flux for the given storage that we want to",
    "start": "1915200",
    "end": "1921519"
  },
  {
    "text": "use and you may ask the question how do we find out which flags the jaeger supports",
    "start": "1921519",
    "end": "1927440"
  },
  {
    "text": "right um there are kind of two ways that i can think of uh you can either go to our documentation",
    "start": "1927440",
    "end": "1934640"
  },
  {
    "text": "on egotracing.io or you can run the jaeger collector or the query docker",
    "start": "1934640",
    "end": "1941200"
  },
  {
    "text": "commands or the binaries with the spam storage type set for your",
    "start": "1941200",
    "end": "1947840"
  },
  {
    "text": "storage of choice and use the health flag and it will print you all the supportive flags",
    "start": "1947840",
    "end": "1954559"
  },
  {
    "text": "so for example in this cr we are configuring the collector",
    "start": "1954559",
    "end": "1960000"
  },
  {
    "text": "options and here under the option node we can put the",
    "start": "1960000",
    "end": "1965679"
  },
  {
    "text": "all the supported collector options",
    "start": "1965679",
    "end": "1970000"
  },
  {
    "text": "okay let's take a look at another jaeger operator feature that is",
    "start": "1972240",
    "end": "1977840"
  },
  {
    "text": "related to jaeger agent and",
    "start": "1977840",
    "end": "1983679"
  },
  {
    "text": "the operator allows you to inject jaeger agent into",
    "start": "1983679",
    "end": "1989279"
  },
  {
    "text": "your workloads uh and for this you have to in the cr you have",
    "start": "1989279",
    "end": "1996880"
  },
  {
    "text": "to set the agent strategy to sidecar which is default by which is by default so you can even skip",
    "start": "1996880",
    "end": "2003440"
  },
  {
    "text": "it and then if you want to inject the decide card then",
    "start": "2003440",
    "end": "2009519"
  },
  {
    "text": "on the deployment annotations you have to provide this annotation with value",
    "start": "2009519",
    "end": "2015200"
  },
  {
    "text": "either true that will you know choose the right jaeger instance",
    "start": "2015200",
    "end": "2021679"
  },
  {
    "text": "where the data will be going or you can set it to false to disable the injection or you can here specify the jaeger name",
    "start": "2021679",
    "end": "2030720"
  },
  {
    "text": "that and then the jaeger instance with this name will",
    "start": "2030720",
    "end": "2037519"
  },
  {
    "text": "be used to send data to the other",
    "start": "2037519",
    "end": "2043440"
  },
  {
    "text": "agent strategy is demon set and in this strategy jaeger operator will deploy",
    "start": "2043440",
    "end": "2050000"
  },
  {
    "text": "agent as demon set on every kubernetes node in your cluster",
    "start": "2050000",
    "end": "2057359"
  },
  {
    "text": "last but not least the jaeger operator integrates with uh",
    "start": "2058720",
    "end": "2065200"
  },
  {
    "text": "two operators the first one is kafka which comes from strimzy operator",
    "start": "2065200",
    "end": "2072079"
  },
  {
    "text": "and the second one is elasticsearch which comes from openshift cluster logging operator",
    "start": "2072079",
    "end": "2077358"
  },
  {
    "text": "and if you have this or let's say elasticsearch operator installed in your cluster",
    "start": "2077359",
    "end": "2083280"
  },
  {
    "text": "then jager operator kind of will recognize that and it will",
    "start": "2083280",
    "end": "2090079"
  },
  {
    "text": "it's able to provision elasticsearch instance for you uh when you will be you know creating",
    "start": "2090079",
    "end": "2096079"
  },
  {
    "text": "new jager instance and the same for kafka and the second integration is is",
    "start": "2096079",
    "end": "2103760"
  },
  {
    "text": "monitoring of jaeger operator so jager operator itself is instrumented with",
    "start": "2103760",
    "end": "2108880"
  },
  {
    "text": "prometheus uh for metrics and open telemetry for traces so it's able to you know emit telemetry",
    "start": "2108880",
    "end": "2115599"
  },
  {
    "text": "data kind of that will give you visibility how the [Music]",
    "start": "2115599",
    "end": "2121839"
  },
  {
    "text": "jaeger operator behaves and what it does",
    "start": "2121839",
    "end": "2126880"
  },
  {
    "text": "so thank you very much and this is everything from the jaeger operator part",
    "start": "2126880",
    "end": "2133119"
  },
  {
    "text": "so uh thank you for that appreciate it uh",
    "start": "2133200",
    "end": "2138850"
  },
  {
    "text": "[Applause] cool and so i did want to touch on the",
    "start": "2138850",
    "end": "2144160"
  },
  {
    "text": "road map i know i'm running up on time but uh this is quite brief so uh i mentioned adaptive sampling um",
    "start": "2144160",
    "end": "2153119"
  },
  {
    "text": "where there's this new sampling type uh we recently were still working on",
    "start": "2153119",
    "end": "2158320"
  },
  {
    "text": "this but we're making some good progress and it allows for dynamic sampling control",
    "start": "2158320",
    "end": "2163599"
  },
  {
    "text": "this is something that that we came out with recently in open telemetry which pavel touched on",
    "start": "2163599",
    "end": "2170480"
  },
  {
    "text": "the service performance monitoring which i touched on that's also a new feature that's key",
    "start": "2170480",
    "end": "2176560"
  },
  {
    "text": "and then we've actually decided as a project to really move towards open telemetry we've gone",
    "start": "2176560",
    "end": "2183280"
  },
  {
    "text": "through deprecation of the jaeger clients and the sdk and that leads me to where we're going",
    "start": "2183280",
    "end": "2190800"
  },
  {
    "text": "from there which obviously has a lot to do with with open telemetry in the second part here but",
    "start": "2190800",
    "end": "2197200"
  },
  {
    "text": "uh we're we're doing some work on the dependency graph so those of you that are using jager there's kind of three",
    "start": "2197200",
    "end": "2203680"
  },
  {
    "text": "different dependency graphs in jager they're all kind of mediocre or let's",
    "start": "2203680",
    "end": "2209040"
  },
  {
    "text": "say not that useful so we're actually going to be normalizing these together and really",
    "start": "2209040",
    "end": "2214079"
  },
  {
    "text": "creating a nice service topology view that's interactive has metrics overlaid",
    "start": "2214079",
    "end": "2220079"
  },
  {
    "text": "on it so we're going to really you know improve the way that the the",
    "start": "2220079",
    "end": "2225280"
  },
  {
    "text": "service graph the topology view looks and what it does and we also",
    "start": "2225280",
    "end": "2231200"
  },
  {
    "text": "are thinking about moving the calculation of that dependency graph which today actually requires that you",
    "start": "2231200",
    "end": "2237280"
  },
  {
    "text": "deploy spark or kafka streams potentially into the open telemetry",
    "start": "2237280",
    "end": "2243119"
  },
  {
    "text": "collector so there's some work going on there of how to calculate these topology",
    "start": "2243119",
    "end": "2248560"
  },
  {
    "text": "graphs and we're hoping we can do that in open telemetry and reduce a component",
    "start": "2248560",
    "end": "2253839"
  },
  {
    "text": "in the aeger architecture and then secondarily which is the bigger one is we're actually moving and pavel's",
    "start": "2253839",
    "end": "2261200"
  },
  {
    "text": "actually already built a poc of this but we're going to basically implement the jager storage",
    "start": "2261200",
    "end": "2267839"
  },
  {
    "text": "exporters inside open telemetry and create a distribution of open telemetry that's",
    "start": "2267839",
    "end": "2274720"
  },
  {
    "text": "basically a jaeger collector so the history of jaeger's of open telemetry is that actually was a fork of",
    "start": "2274720",
    "end": "2281440"
  },
  {
    "text": "the jaeger collector that then had the stuff built around it and now we're going to actually bring it back in",
    "start": "2281440",
    "end": "2287520"
  },
  {
    "text": "and make uh jaeger collector distribution and then another piece where there's",
    "start": "2287520",
    "end": "2293920"
  },
  {
    "text": "active work going on as native support for open telemetry line protocol",
    "start": "2293920",
    "end": "2299040"
  },
  {
    "text": "so that'll allow you to write directly uh to open telemetry from any uh",
    "start": "2299040",
    "end": "2304960"
  },
  {
    "text": "anything that supports otlp and we can take it into jager natively so it's definitely more coming",
    "start": "2304960",
    "end": "2312160"
  },
  {
    "text": "um and i would offer questions but i don't know if i have time for it",
    "start": "2312160",
    "end": "2318880"
  },
  {
    "text": "um and i'm going to put up a few links do i have time to take a couple questions i think i do",
    "start": "2318880",
    "end": "2325040"
  },
  {
    "text": "so um does anyone have a question and i will bring a mic",
    "start": "2325040",
    "end": "2330960"
  },
  {
    "text": "over to you",
    "start": "2330960",
    "end": "2333599"
  },
  {
    "text": "hopefully this works yeah good here's a question about the service performance monitoring would it also",
    "start": "2337440",
    "end": "2344720"
  },
  {
    "text": "expose those metrics as prometheus metrics to be scraped instead of being forwarded",
    "start": "2344720",
    "end": "2351280"
  },
  {
    "text": "um just for simplicity because it's because it's calculated inside open telemetry uh",
    "start": "2351280",
    "end": "2359280"
  },
  {
    "text": "i don't believe you can scrape a collector but maybe you can so if you can it would work the same way",
    "start": "2359280",
    "end": "2367240"
  },
  {
    "text": "it's working another question",
    "start": "2370880",
    "end": "2374960"
  },
  {
    "text": "thanks is that a strategy for handling uh long-running background tasks as part of a trace or how do you",
    "start": "2380800",
    "end": "2388560"
  },
  {
    "text": "handle that usually uh it can cause you can do it but the problem is that",
    "start": "2388560",
    "end": "2395520"
  },
  {
    "text": "sometimes it won't visualize properly so it's actually more of a ui problem",
    "start": "2395520",
    "end": "2400880"
  },
  {
    "text": "not a problem with the actual storage of long running traces and part of it is",
    "start": "2400880",
    "end": "2406640"
  },
  {
    "text": "the ui starts to look weird when you have something running for a week it's like what do you it's going to be like",
    "start": "2406640",
    "end": "2412079"
  },
  {
    "text": "these little teeny things happening so the ui is not really built to visualize traces that run over like days or many",
    "start": "2412079",
    "end": "2419760"
  },
  {
    "text": "hours but the data in the back end storage is there so you could write your own",
    "start": "2419760",
    "end": "2426720"
  },
  {
    "text": "visualization and use it totally so there's no plan like to add some kind of linking between traces or",
    "start": "2426720",
    "end": "2433440"
  },
  {
    "text": "uh it is in the data it's just not in the ui so there's no plan to make the ui",
    "start": "2433440",
    "end": "2439280"
  },
  {
    "text": "work with that okay if you're using something like open",
    "start": "2439280",
    "end": "2444960"
  },
  {
    "text": "search or elasticsearch you could do something in cabana or open search dashboards to visualize it and i know",
    "start": "2444960",
    "end": "2451760"
  },
  {
    "text": "the open search team which is open source they're building some",
    "start": "2451760",
    "end": "2456800"
  },
  {
    "text": "trace analytics capabilities that we're going to be that are going to be compatible with jager where it might",
    "start": "2456800",
    "end": "2463040"
  },
  {
    "text": "actually solve that so i would check out open search they have a trace analytics plugin",
    "start": "2463040",
    "end": "2469680"
  },
  {
    "text": "that might do a good job and you can use it together with jaeger soon not quite yet",
    "start": "2469680",
    "end": "2475680"
  },
  {
    "text": "right now there are two formats in the storage but they are going to support jaeger format um",
    "start": "2475680",
    "end": "2482800"
  },
  {
    "text": "it's part of the plan there so yeah sure thanks uh",
    "start": "2482800",
    "end": "2488319"
  },
  {
    "text": "guess one more until they kick me out i'm gonna keep taking questions so i'm i'm working on a rather",
    "start": "2488319",
    "end": "2496079"
  },
  {
    "text": "unusual use case i'm instrumenting a cli app that has grpc plugins",
    "start": "2496079",
    "end": "2501359"
  },
  {
    "text": "and i want to visualize the interaction between the cli tool and its plugins",
    "start": "2501359",
    "end": "2507599"
  },
  {
    "text": "what would be the minimal amount of open telemetry and jager components that i need to ask the users",
    "start": "2507599",
    "end": "2514240"
  },
  {
    "text": "to have available when they run this thing so they can ship me um spans for debugging for example like do i need to",
    "start": "2514240",
    "end": "2521680"
  },
  {
    "text": "so you you when you build your tool which is a cli tool you would instrument",
    "start": "2521680",
    "end": "2527520"
  },
  {
    "text": "with an sdk in the tool yeah and that would emit the span data yeah but the user is off to have something to collect",
    "start": "2527520",
    "end": "2534960"
  },
  {
    "text": "it what would be the least amount of yeah so you i would probably that's",
    "start": "2534960",
    "end": "2540400"
  },
  {
    "text": "going to be tricky because the user might not be connected to the network essentially right but they could they",
    "start": "2540400",
    "end": "2546079"
  },
  {
    "text": "collect locally and then ship me some sort of like storage file you could do something like",
    "start": "2546079",
    "end": "2552480"
  },
  {
    "text": "that so when pavel was explaining the all-in-one you can there's actually a back end called badger that's an open",
    "start": "2552480",
    "end": "2558800"
  },
  {
    "text": "source database essentially that jager is compatible with and that actually is stored in a file",
    "start": "2558800",
    "end": "2565280"
  },
  {
    "text": "so you could potentially store it as a badger database locally and then they can send you the file and you should be",
    "start": "2565280",
    "end": "2571680"
  },
  {
    "text": "able to visualize it with the jager uh query and the ui so that's that might",
    "start": "2571680",
    "end": "2576960"
  },
  {
    "text": "work for you yeah with jaeger sure yeah sounds like a fun project i guess i'll",
    "start": "2576960",
    "end": "2583440"
  },
  {
    "text": "take uh one more do you mind passing this back so i don't thanks",
    "start": "2583440",
    "end": "2590400"
  },
  {
    "text": "regarding tracing and matrix integration do you have exemplar integration on into",
    "start": "2590560",
    "end": "2598880"
  },
  {
    "text": "your roadmap um so",
    "start": "2598880",
    "end": "2604480"
  },
  {
    "text": "it kind of depends on your back end uh and that's more of an open telemetry",
    "start": "2604480",
    "end": "2609680"
  },
  {
    "text": "thing uh we're not going to visualize exemplars inside jaeger ui but you might get those",
    "start": "2609680",
    "end": "2616560"
  },
  {
    "text": "inside you know grafana ui for example so we're not planning on implementing it",
    "start": "2616560",
    "end": "2622160"
  },
  {
    "text": "in jaeger ui but it's it's supported as long as the",
    "start": "2622160",
    "end": "2627280"
  },
  {
    "text": "exporter you're using supports it within open telemetry but we're not gonna visualize it so",
    "start": "2627280",
    "end": "2634640"
  },
  {
    "text": "um and i think yes",
    "start": "2634640",
    "end": "2639240"
  },
  {
    "text": "yeah so there there's a hyperlink in that monitoring tab that allows you to move from",
    "start": "2652800",
    "end": "2658720"
  },
  {
    "text": "the service into an example trace of the service so it's similar to an exemplar",
    "start": "2658720",
    "end": "2664240"
  },
  {
    "text": "but it doesn't use it from the metric data it's inside the jaeger ui because",
    "start": "2664240",
    "end": "2669280"
  },
  {
    "text": "it knows that those things are linked together i think that's all the time i have for",
    "start": "2669280",
    "end": "2675359"
  },
  {
    "text": "but i'll be up here or tweet message and i'll try to answer the q a that was sent",
    "start": "2675359",
    "end": "2681920"
  },
  {
    "text": "in online through our slack channel but thanks everyone for joining",
    "start": "2681920",
    "end": "2689000"
  },
  {
    "text": "[Applause] you",
    "start": "2690830",
    "end": "2697680"
  }
]