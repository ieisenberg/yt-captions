[
  {
    "text": "thank you all for coming out here before we get started just a brief disclaimer",
    "start": "60",
    "end": "7049"
  },
  {
    "text": "so there's a couple of spots in this presentation where we stripped the license text off the top of some blocks",
    "start": "7049",
    "end": "13380"
  },
  {
    "text": "of code to make it easier to read the code on the slide in all those cases unless there's an explicit license text",
    "start": "13380",
    "end": "19050"
  },
  {
    "text": "at the top of the file it's all Apache to copyright the kubernetes authors all",
    "start": "19050",
    "end": "25920"
  },
  {
    "text": "right so I'm Solly Ross and this is Phil Whitlock and we want to do a quick survey so how many of you have written",
    "start": "25920",
    "end": "34110"
  },
  {
    "text": "your own controller or operator all right keep your hands up",
    "start": "34110",
    "end": "39570"
  },
  {
    "text": "only put them down if you have not copied and pasted from an existing",
    "start": "39570",
    "end": "44760"
  },
  {
    "text": "controller to get started ah an impressive number of you but there's",
    "start": "44760",
    "end": "50610"
  },
  {
    "text": "still a lot of you with your hands up so we were wondering Phil and I at one",
    "start": "50610",
    "end": "59309"
  },
  {
    "text": "point why are we copying and pasting so much so for those of you who are not as",
    "start": "59309",
    "end": "65850"
  },
  {
    "text": "familiar controllers are the one of the basic building blocks of kubernetes so",
    "start": "65850",
    "end": "73610"
  },
  {
    "text": "kubernetes api is are not imperative they're decorative they just store state",
    "start": "73610",
    "end": "79770"
  },
  {
    "text": "very simple the controllers are the loops that actually check the chain for",
    "start": "79770",
    "end": "86159"
  },
  {
    "text": "changes to those objects that state and and check the real world and figure out",
    "start": "86159",
    "end": "92040"
  },
  {
    "text": "the difference in fix it so hypothetically a controller should be pretty simple we watch some resources we",
    "start": "92040",
    "end": "100200"
  },
  {
    "text": "do some business logic we reconcile the differences between the real world and",
    "start": "100200",
    "end": "105570"
  },
  {
    "text": "the desired state and we'd have a little bit of plumbing to wire things together right how complicated could it be so as",
    "start": "105570",
    "end": "114479"
  },
  {
    "text": "developers probably one of the first things that we do when we start in a new environment if we say we want to write a controller is we look for a sample right",
    "start": "114479",
    "end": "121710"
  },
  {
    "text": "and there is a sample controller for kubernetes Kate's thought is live sample controller so let's take a look at that",
    "start": "121710",
    "end": "127970"
  },
  {
    "text": "so if we look at the main file of the sample controller controller",
    "start": "127970",
    "end": "133860"
  },
  {
    "text": "we can see that it's 429 lines long and if we take a look at the rest of sample",
    "start": "133860",
    "end": "140550"
  },
  {
    "text": "controller not even including the vendor directory we can see that there's 28 directories and 52 files which seems",
    "start": "140550",
    "end": "147780"
  },
  {
    "text": "rather large and cumbersome for a sample but you know maybe it's all just",
    "start": "147780",
    "end": "153300"
  },
  {
    "text": "comments so let's take a look maybe if",
    "start": "153300",
    "end": "159210"
  },
  {
    "text": "we just rotate that a little bit perfect so that's simple right you guys can all",
    "start": "159210",
    "end": "167430"
  },
  {
    "text": "read and understand that perfectly so I'm another serve quick survey Cheryl",
    "start": "167430",
    "end": "174390"
  },
  {
    "text": "fans how much do you think this is boilerplate plumbing raise your hands if",
    "start": "174390",
    "end": "181860"
  },
  {
    "text": "you think it's like a quarter plumbing raise your hands if you think it's half plumbing all right let's take a look",
    "start": "181860",
    "end": "191240"
  },
  {
    "text": "everything in red is boilerplate",
    "start": "191240",
    "end": "196400"
  },
  {
    "text": "everything Lisa has good comments though that are clearly understandable if",
    "start": "197540",
    "end": "204600"
  },
  {
    "text": "you've never written a controller before uh so you guys couldn't read that and I",
    "start": "204600",
    "end": "210780"
  },
  {
    "text": "couldn't read that but thankfully Phil went and did some work ahead of time and he has prepared an overview of what that",
    "start": "210780",
    "end": "218190"
  },
  {
    "text": "sample controller does for us so let's let's take a look at it so the first thing we do is we copy clients into a",
    "start": "218190",
    "end": "224520"
  },
  {
    "text": "reconciler struct then we create a queue for reconcile requests and then we add",
    "start": "224520",
    "end": "229860"
  },
  {
    "text": "event handlers for all the object types like our CR custom resources and our deployments that we're interested in but",
    "start": "229860",
    "end": "237330"
  },
  {
    "text": "we don't in queue deletion events in the reconcile type well unless you're doing finalized errs cuz then you need them I",
    "start": "237330",
    "end": "243540"
  },
  {
    "text": "forgot about that all right so so unless we have a finalizer but we do in queue deletion events for own types but you",
    "start": "243540",
    "end": "250260"
  },
  {
    "text": "gotta walk the ownership relationship on that one that's right let's let's look at the owner references walk them up to",
    "start": "250260",
    "end": "257040"
  },
  {
    "text": "find the parents and we need to be sure to handle tombstones which is what happens when we think we miss a deletion",
    "start": "257040",
    "end": "262470"
  },
  {
    "text": "event I don't think we actually do that anymore that must have changed so then we once we have all that we have",
    "start": "262470",
    "end": "269650"
  },
  {
    "text": "to write logic to turn our objects into keys that we can add to the queue and typecast those requests into a string",
    "start": "269650",
    "end": "276039"
  },
  {
    "text": "and do error handling and for some reason we can't typecast those requests into a string and then we start some",
    "start": "276039",
    "end": "282699"
  },
  {
    "text": "worker threads but not too many worker threads and then we start some informers",
    "start": "282699",
    "end": "288880"
  },
  {
    "text": "and we wait for a caches to sync and I think we probably should be done at that point it's just there's just a couple",
    "start": "288880",
    "end": "295539"
  },
  {
    "text": "more items actually there's of course you got to do management of the queue",
    "start": "295539",
    "end": "301539"
  },
  {
    "text": "popping items and a Lazarus daughter you got to do error handling for that mm-hm",
    "start": "301539",
    "end": "306940"
  },
  {
    "text": "you have to use rate limiting obviously and then don't forget to forget the",
    "start": "306940",
    "end": "313090"
  },
  {
    "text": "thing we like that don't do it for transient errors this is correct then",
    "start": "313090",
    "end": "319840"
  },
  {
    "text": "you got to go ahead reconcile the object hmm so when you do that you got to take that string and split out the name namespace and error handling whatnot for",
    "start": "319840",
    "end": "326889"
  },
  {
    "text": "that you gotta send up the signal handlers for the binary right we're about done right that's about done as",
    "start": "326889",
    "end": "333190"
  },
  {
    "text": "long as you got unix and windows and everything else all right we're done now though yeah after you generate the",
    "start": "333190",
    "end": "339729"
  },
  {
    "text": "clients you're done except with Lister's okay cool so I'm clearly very very very",
    "start": "339729",
    "end": "349090"
  },
  {
    "text": "simple and unless you all think that this is just limited to the sample",
    "start": "349090",
    "end": "356770"
  },
  {
    "text": "controller another quick quiz for you guys for you all to think about in your",
    "start": "356770",
    "end": "361960"
  },
  {
    "text": "heads one of these is a sample controller one of them is a built-in kubernetes controller and one of them is",
    "start": "361960",
    "end": "368830"
  },
  {
    "text": "a third-party operator for what for a popular database and all that read",
    "start": "368830",
    "end": "373990"
  },
  {
    "text": "that's all boilerplate so as you can see they all have a lot of boilerplate so",
    "start": "373990",
    "end": "380500"
  },
  {
    "text": "let's break that down into numbers I like numbers 65% of that code is",
    "start": "380500",
    "end": "386370"
  },
  {
    "text": "boilerplate so that's copy and pasted functions basic wiring with some weird",
    "start": "386370",
    "end": "391659"
  },
  {
    "text": "nitty-gritty details an initialization of",
    "start": "391659",
    "end": "397050"
  },
  {
    "text": "tendencies so what what do we do when we",
    "start": "397050",
    "end": "402479"
  },
  {
    "text": "have a bunch of code that we're repeating over and over again we put in a library and when that code is used",
    "start": "402479",
    "end": "410159"
  },
  {
    "text": "across all of our projects and becomes the de-facto library we call it a standard library so we talked to the NGO",
    "start": "410159",
    "end": "418650"
  },
  {
    "text": "core maintainer z-- and we got them to put a standard library for controllers",
    "start": "418650",
    "end": "424110"
  },
  {
    "text": "and go 1.12 which you can just import as controllers just kidding but seriously",
    "start": "424110",
    "end": "432270"
  },
  {
    "text": "though we we wrote we wrote a library a standard library even for writing",
    "start": "432270",
    "end": "437879"
  },
  {
    "text": "controllers and it's called controller runtime so let's take a look at how controller runtime has captured some of",
    "start": "437879",
    "end": "444900"
  },
  {
    "text": "this boilerplate some of these patterns and has refactored it out into reusable chunks that can make it easier for you",
    "start": "444900",
    "end": "451500"
  },
  {
    "text": "to build a controller yeah so the first",
    "start": "451500",
    "end": "457800"
  },
  {
    "text": "thing you're gonna want to do when you credit when you're creating controller is create a controller and so over on",
    "start": "457800",
    "end": "464819"
  },
  {
    "text": "the right what you see is the controller runtime version of creating a controller which basically says just set one up for",
    "start": "464819",
    "end": "470430"
  },
  {
    "text": "me and start it here's the signal handler to use on the left you have the sample controller in version of the same",
    "start": "470430",
    "end": "477870"
  },
  {
    "text": "thing which is manually the Stan shading cues in setting up various machinery to",
    "start": "477870",
    "end": "484860"
  },
  {
    "text": "get started the next thing you're going to want to do is declare that you are",
    "start": "484860",
    "end": "491009"
  },
  {
    "text": "interested in a particular object to reconcile and that means that you need to be triggered when there are changes",
    "start": "491009",
    "end": "497669"
  },
  {
    "text": "for that object and so here on the right side what we have is highlighted in",
    "start": "497669",
    "end": "504180"
  },
  {
    "text": "yellow the additional code to say I want to reconcile for changes to type foo and",
    "start": "504180",
    "end": "510810"
  },
  {
    "text": "you'll notice one part on the top has a nice little function to inject a client and what this allows us to do is do some",
    "start": "510810",
    "end": "517768"
  },
  {
    "text": "very very lightweight dependency injection for controllers to declare the sort of dependencies they need and let",
    "start": "517769",
    "end": "524519"
  },
  {
    "text": "those common pieces be provided to the controllers and on the left do soft",
    "start": "524519",
    "end": "531210"
  },
  {
    "text": "the alternate ok so here what we have is the next thing you probably want to do is if you're writing a troller",
    "start": "531210",
    "end": "536940"
  },
  {
    "text": "oftentimes you are creating new objects and you need to be notified when there are events on those objects such as they",
    "start": "536940",
    "end": "542790"
  },
  {
    "text": "are deleted or something happens to them and so you say I want to reconcile my foo when the things it creates or",
    "start": "542790",
    "end": "549120"
  },
  {
    "text": "manages change and so on the right we have you declare a I own these sorts of",
    "start": "549120",
    "end": "556200"
  },
  {
    "text": "things and so go ahead and trigger the owner when they change and on the left",
    "start": "556200",
    "end": "561900"
  },
  {
    "text": "hand side you have the bespoke way of coupling all that together with event",
    "start": "561900",
    "end": "567270"
  },
  {
    "text": "handlers and whatnot so this looks all great and awesome Phil and it looks like",
    "start": "567270",
    "end": "572520"
  },
  {
    "text": "it's really easy to get started but I'm a problem with libraries sometimes and that is I sometimes like to do crazy",
    "start": "572520",
    "end": "579620"
  },
  {
    "text": "complicated stuff and sometimes I get to a library and it's great for getting started and then I go to do my crazy",
    "start": "579620",
    "end": "586230"
  },
  {
    "text": "complicated stuff and the library won't let me do it the abstractions it provides don't allow me to do the things",
    "start": "586230",
    "end": "592980"
  },
  {
    "text": "I want to do and I have to rip all that nice easy stuff out and just go back to the raw underlying cumbersome stuff",
    "start": "592980",
    "end": "600390"
  },
  {
    "text": "so how does how does this handle that yes that problem makes me cry Solly this",
    "start": "600390",
    "end": "609570"
  },
  {
    "text": "is the third iteration of us trying to solve this problem the first iteration we started two years ago was something",
    "start": "609570",
    "end": "615390"
  },
  {
    "text": "called API server builder and there we looked at all the boilerplate code when you say you don't need to hand copy that",
    "start": "615390",
    "end": "622800"
  },
  {
    "text": "and write it we'll just code generator for you because we're generating so much code anyway and so we did that for a",
    "start": "622800",
    "end": "629790"
  },
  {
    "text": "while and then we looked at it again kind of sideways we're like why are we generating that why don't we just make",
    "start": "629790",
    "end": "635730"
  },
  {
    "text": "it a library so that's what we did in the first iteration of coop builder I think a pretty one not oh when you put",
    "start": "635730",
    "end": "643470"
  },
  {
    "text": "together a library that show would look very similar to the Builder pattern that we demonstrated earlier but the problem",
    "start": "643470",
    "end": "651210"
  },
  {
    "text": "was that library called directly the underlying API machinery and so as soon as you wanted to do something that the",
    "start": "651210",
    "end": "656730"
  },
  {
    "text": "builder didn't support you were back to the bad old days of cobbling it together",
    "start": "656730",
    "end": "663300"
  },
  {
    "text": "yourself so when we redesigned for the controller runtime library and cupola window oh we",
    "start": "663300",
    "end": "672750"
  },
  {
    "text": "thought this and said you know what we really need is layers and you should be able to break through these layers and",
    "start": "672750",
    "end": "678180"
  },
  {
    "text": "do more and more complex things while still having abstractions on top of some of the stuff API machinery is provided",
    "start": "678180",
    "end": "684420"
  },
  {
    "text": "and so we start out at the top of the pyramid with a very simple pattern that",
    "start": "684420",
    "end": "689730"
  },
  {
    "text": "satisfies what most people want to do especially in their first few weeks of work right which is listening to a",
    "start": "689730",
    "end": "696210"
  },
  {
    "text": "couple different resources create resources and reconcile them and as you",
    "start": "696210",
    "end": "702540"
  },
  {
    "text": "do more complex things we provide a set of built-in more flexible components",
    "start": "702540",
    "end": "708930"
  },
  {
    "text": "that you can use instead of these and provide a little more details and compose together and underneath that we",
    "start": "708930",
    "end": "715860"
  },
  {
    "text": "have an extension layer where you can go and implement your own versions of interfaces to really extend the platform",
    "start": "715860",
    "end": "721830"
  },
  {
    "text": "to do new things and then underneath",
    "start": "721830",
    "end": "727050"
  },
  {
    "text": "that we have API machinery and our hope is that if we done our job well API",
    "start": "727050",
    "end": "732720"
  },
  {
    "text": "machinery is really only for arcane sorts of actions such as transmutation",
    "start": "732720",
    "end": "737880"
  },
  {
    "text": "or something like that and you never have to actually go use it so what I'm",
    "start": "737880",
    "end": "746340"
  },
  {
    "text": "showing here is that second layer underneath the pinnacle of the pyramid what happens when you break out this is",
    "start": "746340",
    "end": "753450"
  },
  {
    "text": "an example of that in the four type function when in this case what we're",
    "start": "753450",
    "end": "758670"
  },
  {
    "text": "doing is we're providing a source and we're saying the source for a set of events is a look at this pod and the",
    "start": "758670",
    "end": "766320"
  },
  {
    "text": "action to trigger for those events is to go ahead and a cue that particular object here at that same layer is the",
    "start": "766320",
    "end": "776270"
  },
  {
    "text": "owns relationship represented and this",
    "start": "776270",
    "end": "781740"
  },
  {
    "text": "one actually allows a little more functionality you can say control whether do I care if it's a controller",
    "start": "781740",
    "end": "789000"
  },
  {
    "text": "or not and then compose these pieces together to use again that same source",
    "start": "789000",
    "end": "794160"
  },
  {
    "text": "on a different type with a different event this one you",
    "start": "794160",
    "end": "800649"
  },
  {
    "text": "haven't seen yet because this is not so simple it belongs in the simplest use case but it's still relatively common",
    "start": "800649",
    "end": "807879"
  },
  {
    "text": "right and and frequently we'll have people come to us with scenarios such as hey I wrote this thing that needs to",
    "start": "807879",
    "end": "816959"
  },
  {
    "text": "trigger an event when a when a config map changes for some pots right",
    "start": "816959",
    "end": "822519"
  },
  {
    "text": "the deployment has a reference to a config map config Mac gets updated now I",
    "start": "822519",
    "end": "827829"
  },
  {
    "text": "want to do something that's not a knowns relationship that's this bespoke relationship that the user kind of defines even though that one is actual",
    "start": "827829",
    "end": "834249"
  },
  {
    "text": "it'll more common and so we can allow you to provide a mapping function to say given this object map it to another set",
    "start": "834249",
    "end": "841209"
  },
  {
    "text": "of objects and this has access to a client so you can even look up from the cache particular indexes or various",
    "start": "841209",
    "end": "848379"
  },
  {
    "text": "things like that another common use case is actually we have something that needs to be triggered whenever a note is added",
    "start": "848379",
    "end": "854529"
  },
  {
    "text": "or removed to a cluster and scaled or something like that so we do see these arbitrary relationships happen but we still don't",
    "start": "854529",
    "end": "863709"
  },
  {
    "text": "want to make you go all the way back to API machinery if you're like you know what I do have something a little more bespoke than that and so those pieces we",
    "start": "863709",
    "end": "872470"
  },
  {
    "text": "pass in or actually interfaces there's a source that's an interface and then there is an event handler that's an",
    "start": "872470",
    "end": "877809"
  },
  {
    "text": "interface and so you can swap out the source to be something like a pub sub",
    "start": "877809",
    "end": "883419"
  },
  {
    "text": "event source or a web hook event source if you were to implement that or maybe",
    "start": "883419",
    "end": "889329"
  },
  {
    "text": "even listening from slack yeah things on note on slack commands perfect I mean",
    "start": "889329",
    "end": "897669"
  },
  {
    "text": "you can also implement your own event handlers and say okay I got this event now what do I do with it for the cue in",
    "start": "897669",
    "end": "906339"
  },
  {
    "text": "theory you shouldn't need to actually write your own event handler the mapping function is actually pretty flexible but",
    "start": "906339",
    "end": "912429"
  },
  {
    "text": "we designed it this way because we know that we're not going to know ahead of time all these cases people are going to",
    "start": "912429",
    "end": "917980"
  },
  {
    "text": "encounter and so we want to provide that flexibility so I'm going to say don't use this the common cases should be easy",
    "start": "917980",
    "end": "924789"
  },
  {
    "text": "and the uncommon cases should be possible so what is that what does this get us",
    "start": "924789",
    "end": "931529"
  },
  {
    "text": "right so it makes it really easy to get started it makes it easy for us to build",
    "start": "931529",
    "end": "937350"
  },
  {
    "text": "what we want but what does it get us in the long term well for developers in",
    "start": "937350",
    "end": "943230"
  },
  {
    "text": "addition to getting started easily we get the ability to pull in new features",
    "start": "943230",
    "end": "949100"
  },
  {
    "text": "performance improvements without having to rewrite all of our code so here you",
    "start": "949100",
    "end": "955649"
  },
  {
    "text": "see APR that actually introduced some performance improvements through shared",
    "start": "955649",
    "end": "962339"
  },
  {
    "text": "caches to the core kubernetes controllers and this was a Herculean effort that ended up touching 151 files",
    "start": "962339",
    "end": "970700"
  },
  {
    "text": "across the kubernetes codebase and had to be a bunch of them were just changes",
    "start": "970700",
    "end": "976440"
  },
  {
    "text": "by hand and we don't want that to happen and was something like controller runtime that doesn't have to happen",
    "start": "976440",
    "end": "981450"
  },
  {
    "text": "because none of these changes were changes to the business logic of the controllers they were all changes to",
    "start": "981450",
    "end": "988170"
  },
  {
    "text": "underlying implementation details but once we moved beyond kind of the getting",
    "start": "988170",
    "end": "993450"
  },
  {
    "text": "started adding new features move to like day two operations things get even more interesting for ops and sre we get",
    "start": "993450",
    "end": "1001970"
  },
  {
    "text": "standard observability and behavior so we can monitor all of our controllers in",
    "start": "1001970",
    "end": "1010100"
  },
  {
    "text": "similar ways we can write a baseline set of dashboards and alerting we can look at logs for any controller and have a",
    "start": "1010100",
    "end": "1017180"
  },
  {
    "text": "general idea of what's going on and when we need to do maintenance because we found a bug again it's just an update of",
    "start": "1017180",
    "end": "1023209"
  },
  {
    "text": "a dependency as opposed to a rewiring of all of our code beyond that we get a",
    "start": "1023209",
    "end": "1029750"
  },
  {
    "text": "stable base layer for people to build on top of instead of reinventing the wheel people can build up on controller run",
    "start": "1029750",
    "end": "1037490"
  },
  {
    "text": "time so you get projects like queue builder and operator SDK which helps you get started writing your operators and",
    "start": "1037490",
    "end": "1044600"
  },
  {
    "text": "controllers and they didn't have to reinvent everything from scratch and they we can both focus on writing the",
    "start": "1044600",
    "end": "1052400"
  },
  {
    "text": "best possible abstractions over API machinery and one thing that we didn't plan for",
    "start": "1052400",
    "end": "1059180"
  },
  {
    "text": "but we've actually found is that different folks discovering mmm the",
    "start": "1059180",
    "end": "1064910"
  },
  {
    "text": "controller runtime and COO builder say hey this is pretty cool and we like the top end of this pyramid but for this",
    "start": "1064910",
    "end": "1071510"
  },
  {
    "text": "specific domain we could actually build even a higher layer on top of that pyramid right so for instance if it's",
    "start": "1071510",
    "end": "1078410"
  },
  {
    "text": "stateful applications they may have some setup lifecycle hooks that an operator would every operator should implement",
    "start": "1078410",
    "end": "1085340"
  },
  {
    "text": "right or if it's kubernetes control plane operators for instance and manage",
    "start": "1085340",
    "end": "1090950"
  },
  {
    "text": "the control plane itself there's a set of hooks there and so we're seeing because we're seeing another of",
    "start": "1090950",
    "end": "1097490"
  },
  {
    "text": "different domains with people interested in this what we're planning on doing",
    "start": "1097490",
    "end": "1102740"
  },
  {
    "text": "moving forward is to actually work with these folks to develop the higher level",
    "start": "1102740",
    "end": "1108800"
  },
  {
    "text": "on the pyramid right and then that way we make sure that across different platforms that get built on top of qu",
    "start": "1108800",
    "end": "1114140"
  },
  {
    "text": "builder there's still a nice standard mechanism for breaking glass out of that top of the pyramid into lower level",
    "start": "1114140",
    "end": "1121370"
  },
  {
    "text": "pyramids and standard ways of approaching and building domain-specific operator platforms and those folks get",
    "start": "1121370",
    "end": "1128570"
  },
  {
    "text": "to focus on building awesome stuff and they don't have to deal with the nitty gritty arcane API machinery so let's tie",
    "start": "1128570",
    "end": "1137330"
  },
  {
    "text": "this all back together you remember this one before this our sample controller I lied a",
    "start": "1137330",
    "end": "1142370"
  },
  {
    "text": "little bit I actually forgot to tell you about this piece too that's the main funk it uh wires up",
    "start": "1142370",
    "end": "1150500"
  },
  {
    "text": "clients and pulls in flags and and loads tokens for talking to the cluster so",
    "start": "1150500",
    "end": "1157580"
  },
  {
    "text": "there was more so if we look at what this looks like a controller runtime",
    "start": "1157580",
    "end": "1163720"
  },
  {
    "text": "it's actually it fits on the slide it's almost readable at this size so",
    "start": "1163720",
    "end": "1170060"
  },
  {
    "text": "there's three parts here the first part is is basically the entirety of that main file it just loads up and declares",
    "start": "1170060",
    "end": "1176780"
  },
  {
    "text": "what we want to do second part is our business logic and that third part over",
    "start": "1176780",
    "end": "1181850"
  },
  {
    "text": "there on the edge is just the structure for our deployment that we wanted to create that's what the sample controller does",
    "start": "1181850",
    "end": "1187279"
  },
  {
    "text": "it creates deployments so in conclusion controllers can be simple and we don't",
    "start": "1187279",
    "end": "1194570"
  },
  {
    "text": "need to copy and paste as much if we think about when we find ourselves copying and pasting what our",
    "start": "1194570",
    "end": "1201380"
  },
  {
    "text": "abstractions should be and we think about how we can refactor those out into reusable building blocks that are",
    "start": "1201380",
    "end": "1207769"
  },
  {
    "text": "flexible enough to let us get our work done but simple enough so that we can understand them easily any questions",
    "start": "1207769",
    "end": "1219518"
  },
  {
    "text": "[Applause] that was actually a joke I put on there",
    "start": "1219690",
    "end": "1228850"
  },
  {
    "text": "all right so okay so cute builder and",
    "start": "1229179",
    "end": "1239330"
  },
  {
    "text": "operator SDK are kind of two sides of the same coin they have a little bit of",
    "start": "1239330",
    "end": "1246649"
  },
  {
    "text": "a different focus but they still use the same underlying libraries so they",
    "start": "1246649",
    "end": "1251899"
  },
  {
    "text": "scaffold out your initial project differently but they use the same underlying mechanics they both use",
    "start": "1251899",
    "end": "1257630"
  },
  {
    "text": "controller run time yeah I can add a little bit that to that too so originally these were built",
    "start": "1257630",
    "end": "1263080"
  },
  {
    "text": "independently COO builder pre-blended oh and the operator SDK and they both did",
    "start": "1263080",
    "end": "1269570"
  },
  {
    "text": "not neither one looked like that pyramid we showed you right it was like just API machinery and then one layer on top of",
    "start": "1269570",
    "end": "1275419"
  },
  {
    "text": "it and both of us looked at both projects looked at what the other project had done and said hey there's",
    "start": "1275419",
    "end": "1281779"
  },
  {
    "text": "actually some cool stuff in there I hadn't thought about and I would like to copy that and then my project will look",
    "start": "1281779",
    "end": "1287899"
  },
  {
    "text": "just like doors with a couple more features but they'll copy mine and then our project will look the same but",
    "start": "1287899",
    "end": "1293899"
  },
  {
    "text": "having compatible interfaces right and so we got together and we said hey what if we just thought about this a little",
    "start": "1293899",
    "end": "1300200"
  },
  {
    "text": "more and came together and built out a shared library and that is where controller runtime came from and so both",
    "start": "1300200",
    "end": "1306740"
  },
  {
    "text": "operator SDK and COO builder use controller runtime as their base and so",
    "start": "1306740",
    "end": "1311870"
  },
  {
    "text": "that means if you end up going down the road with one you actually are not",
    "start": "1311870",
    "end": "1318380"
  },
  {
    "text": "totally locked in to it if you are mainly interacting with controller runtime library and it also",
    "start": "1318380",
    "end": "1324350"
  },
  {
    "text": "means that if we get libraries that are designed to provide additional functionality that are dealt on top of",
    "start": "1324350",
    "end": "1329929"
  },
  {
    "text": "those control runtime primitives they work in both operator SDK projects and queue builder projects and they differ",
    "start": "1329929",
    "end": "1336200"
  },
  {
    "text": "and the project's differ in certain ways such as opinions about hey what is the default project structure look like or",
    "start": "1336200",
    "end": "1341720"
  },
  {
    "text": "how should we scaffold out files for you right that's scripting that's an",
    "start": "1341720",
    "end": "1354260"
  },
  {
    "text": "excellent question we should probably touch base I don't think we've done that recently sorry the question was the",
    "start": "1354260",
    "end": "1364279"
  },
  {
    "text": "difference is around scaffolding in the way the projects are different is that enough to justify the end user confusion",
    "start": "1364279",
    "end": "1372080"
  },
  {
    "text": "and every time we give a talk about Google there's someone asking us what the difference between that and operator",
    "start": "1372080",
    "end": "1377390"
  },
  {
    "text": "SDK is",
    "start": "1377390",
    "end": "1379899"
  },
  {
    "text": "yes",
    "start": "1398120",
    "end": "1400870"
  },
  {
    "text": "maybe the so one way of doing this is",
    "start": "1422070",
    "end": "1427869"
  },
  {
    "text": "not to generate controller runtime for every language and it's to expose a web",
    "start": "1427869",
    "end": "1434919"
  },
  {
    "text": "hook based approach for instance and so there's a project called meta controller that takes that approach that is",
    "start": "1434919",
    "end": "1441309"
  },
  {
    "text": "probably the more likely direction I see the language agnostic approach taking",
    "start": "1441309",
    "end": "1448450"
  },
  {
    "text": "and kind of is in theme with the as you have more and more specific things you",
    "start": "1448450",
    "end": "1454570"
  },
  {
    "text": "actually have give funneled into a more specific route and so if you're doing something where that's good enough for",
    "start": "1454570",
    "end": "1461590"
  },
  {
    "text": "you with the web what the web hook model supports go for it",
    "start": "1461590",
    "end": "1466749"
  },
  {
    "text": "then when you actually find out you need some piece that happens to be written only and go go do that I'd be also",
    "start": "1466749",
    "end": "1474159"
  },
  {
    "text": "interested in seeing other folks maybe copying our API is our approach in",
    "start": "1474159",
    "end": "1479200"
  },
  {
    "text": "porting it to other languages that would be interesting to me as well it turns out maintaining a bunch of libraries across all the languages that everybody",
    "start": "1479200",
    "end": "1486940"
  },
  {
    "text": "wants to use is a big problem like takes a lot of people and it takes a lot of",
    "start": "1486940",
    "end": "1492159"
  },
  {
    "text": "people who are good at the individual languages right one of the things that's",
    "start": "1492159",
    "end": "1498549"
  },
  {
    "text": "important in any project like this is that the code should feel idiomatic",
    "start": "1498549",
    "end": "1503830"
  },
  {
    "text": "so if you just you know if you try to have someone who didn't say no Python",
    "start": "1503830",
    "end": "1508989"
  },
  {
    "text": "very well just knew the surface kind of right controller runtime and Python it might come out more cumbersome so it's",
    "start": "1508989",
    "end": "1515679"
  },
  {
    "text": "also a maintenance problem and the question was can we have this novel",
    "start": "1515679",
    "end": "1521499"
  },
  {
    "text": "languages I think",
    "start": "1521499",
    "end": "1524489"
  },
  {
    "text": "so the question is to what extent are the test fakes and and common test",
    "start": "1533590",
    "end": "1540170"
  },
  {
    "text": "harnesses for common use cases supported by queue builder so we do have some",
    "start": "1540170",
    "end": "1545300"
  },
  {
    "text": "fakes for a lot of our stuff one of the things that we've found out during",
    "start": "1545300",
    "end": "1550490"
  },
  {
    "text": "testing cubular itself and kind of the the queue builder maintainer is when we",
    "start": "1550490",
    "end": "1556580"
  },
  {
    "text": "when we wrote controllers ourself before we wrote Q builder is that it turns out",
    "start": "1556580",
    "end": "1562030"
  },
  {
    "text": "eventually you end up with a test fake that just kind of looks like the API server but like missing a bunch of",
    "start": "1562030",
    "end": "1568490"
  },
  {
    "text": "features and maybe with some more bugs in it and so the approach that we encourage instead is we make it really",
    "start": "1568490",
    "end": "1575780"
  },
  {
    "text": "really really easy to just have your test harness run just the kubernetes api",
    "start": "1575780",
    "end": "1581060"
  },
  {
    "text": "server in that CD and at CD of course because you need at CD and so like all",
    "start": "1581060",
    "end": "1586760"
  },
  {
    "text": "of the all of the controller runtime internal tests almost all of them do this and all this stuff scaffold it out",
    "start": "1586760",
    "end": "1593630"
  },
  {
    "text": "with queue builder does this as well you just call setup my test environment and you're kind of before sweet and it",
    "start": "1593630",
    "end": "1600710"
  },
  {
    "text": "stands up an API server that you can talk to and this we found out where it's really well because you get a real API",
    "start": "1600710",
    "end": "1606620"
  },
  {
    "text": "server that behaves exactly like the real API server would and it makes it",
    "start": "1606620",
    "end": "1611780"
  },
  {
    "text": "really easy for you to actually focus on writing your tests as opposed to writing many many lines of boilerplate I'm gonna",
    "start": "1611780",
    "end": "1618500"
  },
  {
    "text": "pretend to be an API server code and we are interested in making this actively",
    "start": "1618500",
    "end": "1623750"
  },
  {
    "text": "better the different things that are on the list are looking more closely at été",
    "start": "1623750",
    "end": "1629300"
  },
  {
    "text": "tests and how do we make you to each s easier and more guidance around what",
    "start": "1629300",
    "end": "1634640"
  },
  {
    "text": "should go in an A to D test what should go into like a local PD test if you will or integration tests or whatever you",
    "start": "1634640",
    "end": "1640700"
  },
  {
    "text": "want to call it making those local tests that spin up the API server to be a",
    "start": "1640700",
    "end": "1646790"
  },
  {
    "text": "little more user friendly and like for instance possibly vendor vendor API",
    "start": "1646790",
    "end": "1654470"
  },
  {
    "text": "server has libraries instead of as binaries so there's a lot of stuff that generates to work on in that area any other",
    "start": "1654470",
    "end": "1664980"
  },
  {
    "text": "questions I think there's a few folks behind the pillar but I can't tell if they're raising their hands so just like shout if you're raising your hand we",
    "start": "1664980",
    "end": "1680970"
  },
  {
    "text": "have not we have not done super extensive performance testing but we",
    "start": "1680970",
    "end": "1686730"
  },
  {
    "text": "have written a number of kind of real-world controllers that have been using controller runtime pretty",
    "start": "1686730",
    "end": "1694140"
  },
  {
    "text": "successfully it is one of the things on our list kind of things that we would like to do going through and and doing",
    "start": "1694140",
    "end": "1701070"
  },
  {
    "text": "more extensive performance profiling but we expect that the impact should not be",
    "start": "1701070",
    "end": "1706620"
  },
  {
    "text": "terrible and then we've thought about that a bit as we're designing it of course there are always trade-offs pr's",
    "start": "1706620",
    "end": "1713310"
  },
  {
    "text": "welcome um but yeah I mean and we we have looked at it like one thing we've",
    "start": "1713310",
    "end": "1718950"
  },
  {
    "text": "done is if you take the long code you saw originally that was read with the",
    "start": "1718950",
    "end": "1725190"
  },
  {
    "text": "with the spiky stuff um like we refactor that and massaged it like we didn't just start over and say we're gonna write",
    "start": "1725190",
    "end": "1730860"
  },
  {
    "text": "something else it's like okay how do we pull that into a lie or how would he pull that in the library so in most",
    "start": "1730860",
    "end": "1736950"
  },
  {
    "text": "areas we don't expect there to be huge performance changes because all we did is like factors stuff out into a library",
    "start": "1736950",
    "end": "1743190"
  },
  {
    "text": "there are a couple places where we did do stuff that was kind of novel which is in the client and we do some a bit of",
    "start": "1743190",
    "end": "1751050"
  },
  {
    "text": "reflection in there in a couple places so that would be probably one area to look at one possible performance",
    "start": "1751050",
    "end": "1758460"
  },
  {
    "text": "improvement that we would see is the client is very friendly towards reading",
    "start": "1758460",
    "end": "1763470"
  },
  {
    "text": "from the cache in the old sample controller way you have a Lister and you have which is separate from from your",
    "start": "1763470",
    "end": "1770040"
  },
  {
    "text": "client and so engineers have to make sure they get the programming right to read from the cache separately from the",
    "start": "1770040",
    "end": "1778070"
  },
  {
    "text": "from the API server and so by getting that sort of simple integration you might save yourself a bug that would",
    "start": "1778070",
    "end": "1785190"
  },
  {
    "text": "cause force performance",
    "start": "1785190",
    "end": "1788179"
  },
  {
    "text": "I quickly I so the question was if I do things this way how much of my code is",
    "start": "1791260",
    "end": "1797080"
  },
  {
    "text": "typecasting and the answer is ideally none we have attempted to write things",
    "start": "1797080",
    "end": "1804280"
  },
  {
    "text": "in a way that either do not require typecasting or we abstract away the",
    "start": "1804280",
    "end": "1811270"
  },
  {
    "text": "typecasting from you in in a way that we attempt to actually do some checks so",
    "start": "1811270",
    "end": "1816820"
  },
  {
    "text": "like the way our client works we have what's closer to a dynamic client except",
    "start": "1816820",
    "end": "1822190"
  },
  {
    "text": "that you pass in a concrete struct and we use the type of that struct to look",
    "start": "1822190",
    "end": "1827230"
  },
  {
    "text": "up what we're supposed to fetch right so your if you pass in a pot object you're guaranteed to get a populated pot object",
    "start": "1827230",
    "end": "1833380"
  },
  {
    "text": "same thing with if you look at the reconcile key so in traditional",
    "start": "1833380",
    "end": "1838900"
  },
  {
    "text": "handwritten controllers especially those in Korakuen eddie's they take a key in",
    "start": "1838900",
    "end": "1845200"
  },
  {
    "text": "as a string and then you have to manually split that into namespace and name and you hope you do it right",
    "start": "1845200",
    "end": "1850840"
  },
  {
    "text": "otherwise you'll get errors in controller runtime we pass you in a priest get split key in a struct so that",
    "start": "1850840",
    "end": "1857440"
  },
  {
    "text": "you just have a struct with namespace and name and you don't have to typecast",
    "start": "1857440",
    "end": "1862950"
  },
  {
    "text": "see there we are we are using some reflection",
    "start": "1867930",
    "end": "1873170"
  },
  {
    "text": "under the hood especially in the client a lot of the kubernetes api machinery",
    "start": "1873170",
    "end": "1878240"
  },
  {
    "text": "actually uses reflect we did not like totally just introduced reflection where there was like no reflection before we",
    "start": "1878240",
    "end": "1886430"
  },
  {
    "text": "we used the same sort of reflection that already existed actually in the libraries but maybe applied it in a",
    "start": "1886430",
    "end": "1893720"
  },
  {
    "text": "couple additional places or a little bit differently so none of the core cube",
    "start": "1893720",
    "end": "1902780"
  },
  {
    "text": "controllers are using the controller runtime right now for various probably",
    "start": "1902780",
    "end": "1909560"
  },
  {
    "text": "mostly non technical reasons it would be super awesome if eventually we could get this to the",
    "start": "1909560",
    "end": "1916430"
  },
  {
    "text": "point where the cork and controllers were also using controller runtime but",
    "start": "1916430",
    "end": "1922610"
  },
  {
    "text": "for the moment we are looking at mostly just third-party controllers and also",
    "start": "1922610",
    "end": "1929870"
  },
  {
    "text": "kind of supporting gradual refactoring so if you want to do stuff like you're",
    "start": "1929870",
    "end": "1935510"
  },
  {
    "text": "writing a new cloud controller and you want to run some of the cloud controllers from core kubernetes plus some of the stuff you wrote your own",
    "start": "1935510",
    "end": "1941420"
  },
  {
    "text": "self with controller runtime you can do that and run them in the same controller",
    "start": "1941420",
    "end": "1946580"
  },
  {
    "text": "manager binary I'd like to add something to that but just like part of your question might be like is the project",
    "start": "1946580",
    "end": "1953120"
  },
  {
    "text": "being built with this right to what extent is it and like the kubernetes as",
    "start": "1953120",
    "end": "1959120"
  },
  {
    "text": "a project is probably moving towards a direction of more components or",
    "start": "1959120",
    "end": "1964660"
  },
  {
    "text": "independence of these components and so as that happens we see those projects",
    "start": "1964660",
    "end": "1971720"
  },
  {
    "text": "running on controller runtime so one example is the cluster API uses",
    "start": "1971720",
    "end": "1977180"
  },
  {
    "text": "controller runtime and that's because it was started outside of kubernetes kubernetes repo and had a fresh start",
    "start": "1977180",
    "end": "1984040"
  },
  {
    "text": "taking right for instance these very complicated deployment controller right",
    "start": "1984040",
    "end": "1991040"
  },
  {
    "text": "each of which was copy and pasted and changed a little bit here and there that would be like a pretty big endeavor I",
    "start": "1991040",
    "end": "1998030"
  },
  {
    "text": "think and and not clear that we you would see not clear that it's the best",
    "start": "1998030",
    "end": "2003400"
  },
  {
    "text": "investment of our time right now it's it's doable and it may happen eventually but right now we're focused on making",
    "start": "2003400",
    "end": "2011590"
  },
  {
    "text": "the path awesome for stuff that kind of lives outside of the controller core",
    "start": "2011590",
    "end": "2017650"
  },
  {
    "text": "kubernetes controller manager binary",
    "start": "2017650",
    "end": "2021300"
  },
  {
    "text": "right it's two more minutes",
    "start": "2023100",
    "end": "2027150"
  },
  {
    "text": "so your your custom it uses like your custom resources are defined in terms of",
    "start": "2035500",
    "end": "2041770"
  },
  {
    "text": "throwing types and you can also like cue builder is is designed from the perspective like the scaffold that it",
    "start": "2041770",
    "end": "2047650"
  },
  {
    "text": "sets up is I have some going types I want to turn those into a custom resource definition so I can use them as",
    "start": "2047650",
    "end": "2052990"
  },
  {
    "text": "custom resources on the cluster and I want to reconcile them but you can also use built-in types as well with control",
    "start": "2052990",
    "end": "2060490"
  },
  {
    "text": "or runtime like deployment and so those types are see are these that's how they're reflected on the kubernetes",
    "start": "2060490",
    "end": "2065560"
  },
  {
    "text": "cluster is CRTs are generated for from the go types yeah I mean if it's working",
    "start": "2065560",
    "end": "2080169"
  },
  {
    "text": "what's uh let's talk a little bit after",
    "start": "2080169",
    "end": "2084839"
  },
  {
    "text": "all right I think we're out of time but thank you all for coming and hope you",
    "start": "2085379",
    "end": "2090760"
  },
  {
    "text": "had a good time",
    "start": "2090760",
    "end": "2093148"
  }
]