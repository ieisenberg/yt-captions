[
  {
    "text": "so my name is Si I work for Microsoft in",
    "start": "40",
    "end": "2679"
  },
  {
    "text": "the observability platform team and in",
    "start": "2679",
    "end": "5359"
  },
  {
    "text": "open Elementary I work mostly or I used",
    "start": "5359",
    "end": "7600"
  },
  {
    "text": "to work mostly in net and recently I",
    "start": "7600",
    "end": "9480"
  },
  {
    "text": "moved to work on uh open Elementary rest",
    "start": "9480",
    "end": "12240"
  },
  {
    "text": "uh my colleague was supposed to join me",
    "start": "12240",
    "end": "13799"
  },
  {
    "text": "but he got sick so I'm going to do end a",
    "start": "13799",
    "end": "16358"
  },
  {
    "text": "presentation myself so today we'll talk",
    "start": "16359",
    "end": "19359"
  },
  {
    "text": "about uh some of the design decisions or",
    "start": "19359",
    "end": "21760"
  },
  {
    "text": "some of the challenges we faced while",
    "start": "21760",
    "end": "24039"
  },
  {
    "text": "implementing metrics SDK in open",
    "start": "24039",
    "end": "25960"
  },
  {
    "text": "elementary. net so we'll cover the",
    "start": "25960",
    "end": "28080"
  },
  {
    "text": "challenges and how we or come that and",
    "start": "28080",
    "end": "30640"
  },
  {
    "text": "what are the design choices we made so",
    "start": "30640",
    "end": "33360"
  },
  {
    "text": "let's start with the problem statement",
    "start": "33360",
    "end": "35360"
  },
  {
    "text": "what is the task be uh before you if you",
    "start": "35360",
    "end": "38040"
  },
  {
    "text": "were to implement open Elementary",
    "start": "38040",
    "end": "39640"
  },
  {
    "text": "matrics so on the my screen it's left so",
    "start": "39640",
    "end": "43760"
  },
  {
    "text": "you have a bunch of raw measurements",
    "start": "43760",
    "end": "45800"
  },
  {
    "text": "where I'm just making it extremely",
    "start": "45800",
    "end": "47600"
  },
  {
    "text": "simple so here uh someone is using open",
    "start": "47600",
    "end": "50199"
  },
  {
    "text": "Elementary to count the number of fruits",
    "start": "50199",
    "end": "52920"
  },
  {
    "text": "they have sold so it could be like apple",
    "start": "52920",
    "end": "54960"
  },
  {
    "text": "in red color or bananas in yellow and",
    "start": "54960",
    "end": "57399"
  },
  {
    "text": "things like that uh so the real output",
    "start": "57399",
    "end": "59600"
  },
  {
    "text": "the out which is expected from a metric",
    "start": "59600",
    "end": "61719"
  },
  {
    "text": "system is the summarized data so how",
    "start": "61719",
    "end": "64000"
  },
  {
    "text": "many red apples you sold how many yellow",
    "start": "64000",
    "end": "65960"
  },
  {
    "text": "bananas you sold and things like that uh",
    "start": "65960",
    "end": "68240"
  },
  {
    "text": "so that's the like very simplified",
    "start": "68240",
    "end": "70040"
  },
  {
    "text": "version of the problem which an SDK is",
    "start": "70040",
    "end": "71759"
  },
  {
    "text": "supposed to solve so you get raw",
    "start": "71759",
    "end": "73240"
  },
  {
    "text": "measurements you produce a compressed or",
    "start": "73240",
    "end": "75640"
  },
  {
    "text": "aggregated metrics uh one interesting",
    "start": "75640",
    "end": "79000"
  },
  {
    "text": "thing to note here is it doesn't matter",
    "start": "79000",
    "end": "81079"
  },
  {
    "text": "how many fruits you sell or it doesn't",
    "start": "81079",
    "end": "82960"
  },
  {
    "text": "matter how many raw measurements you get",
    "start": "82960",
    "end": "85360"
  },
  {
    "text": "you have a predictable output because",
    "start": "85360",
    "end": "87200"
  },
  {
    "text": "you are going to compress them and",
    "start": "87200",
    "end": "88520"
  },
  {
    "text": "aggregate them you have a reasonably uh",
    "start": "88520",
    "end": "90680"
  },
  {
    "text": "upper bound on the amount of uh",
    "start": "90680",
    "end": "92759"
  },
  {
    "text": "aggregated data you have of course I'm",
    "start": "92759",
    "end": "94920"
  },
  {
    "text": "not uh like going to detail about the",
    "start": "94920",
    "end": "97399"
  },
  {
    "text": "cardinality explosion all but this is",
    "start": "97399",
    "end": "99079"
  },
  {
    "text": "just the very simplified version of the",
    "start": "99079",
    "end": "101399"
  },
  {
    "text": "problem statement uh before solving the",
    "start": "101399",
    "end": "104000"
  },
  {
    "text": "problem I just want to State like these",
    "start": "104000",
    "end": "105399"
  },
  {
    "text": "are the goals and principles which we've",
    "start": "105399",
    "end": "107479"
  },
  {
    "text": "been keeping in mind because in case of",
    "start": "107479",
    "end": "109200"
  },
  {
    "text": "conflicts what criteria we would use to",
    "start": "109200",
    "end": "111320"
  },
  {
    "text": "resolve them so we want the metrics to",
    "start": "111320",
    "end": "113119"
  },
  {
    "text": "be trustworthy uh so what I really mean",
    "start": "113119",
    "end": "115479"
  },
  {
    "text": "by that is like the Red Apple should not",
    "start": "115479",
    "end": "117200"
  },
  {
    "text": "be counted against yellow banana things",
    "start": "117200",
    "end": "119159"
  },
  {
    "text": "like that but there are many places",
    "start": "119159",
    "end": "121600"
  },
  {
    "text": "within the metrics where you can uh",
    "start": "121600",
    "end": "123560"
  },
  {
    "text": "afford to like cheat a little bit to get",
    "start": "123560",
    "end": "126039"
  },
  {
    "text": "better performance uh but I won't uh",
    "start": "126039",
    "end": "128440"
  },
  {
    "text": "cover that in details here but mostly we",
    "start": "128440",
    "end": "130280"
  },
  {
    "text": "just expect the uh SDK to be doing a",
    "start": "130280",
    "end": "132879"
  },
  {
    "text": "trustable job you need like Fidelity you",
    "start": "132879",
    "end": "134879"
  },
  {
    "text": "cannot uh randomly uh make like one",
    "start": "134879",
    "end": "137680"
  },
  {
    "text": "metric which is supposed to be of let's",
    "start": "137680",
    "end": "139519"
  },
  {
    "text": "say red banana or Red Apple going into a",
    "start": "139519",
    "end": "142080"
  },
  {
    "text": "different uh category so that's why I",
    "start": "142080",
    "end": "144360"
  },
  {
    "text": "really mean by like trustworthiness",
    "start": "144360",
    "end": "146440"
  },
  {
    "text": "performance is uh most critical for uh",
    "start": "146440",
    "end": "149000"
  },
  {
    "text": "metrics as compared to like tracers or",
    "start": "149000",
    "end": "151879"
  },
  {
    "text": "logs because in tracers you can like",
    "start": "151879",
    "end": "153519"
  },
  {
    "text": "tune up the sampling and for logs you",
    "start": "153519",
    "end": "155599"
  },
  {
    "text": "can also do some sort of like filtering",
    "start": "155599",
    "end": "157760"
  },
  {
    "text": "like log level adjustment but for",
    "start": "157760",
    "end": "159560"
  },
  {
    "text": "metrics it's almost like always on like",
    "start": "159560",
    "end": "161519"
  },
  {
    "text": "you cannot really adjust so you need the",
    "start": "161519",
    "end": "163480"
  },
  {
    "text": "performance to be extreme so we usually",
    "start": "163480",
    "end": "165720"
  },
  {
    "text": "measure that in Nan not not like more",
    "start": "165720",
    "end": "168920"
  },
  {
    "text": "than a few hundred Nan and no Heap",
    "start": "168920",
    "end": "171640"
  },
  {
    "text": "allocation um I mean net being a GC",
    "start": "171640",
    "end": "174040"
  },
  {
    "text": "language we expect there would be there",
    "start": "174040",
    "end": "175920"
  },
  {
    "text": "should be like zero Heap allocation and",
    "start": "175920",
    "end": "178040"
  },
  {
    "text": "no logs uh like we don't want like",
    "start": "178040",
    "end": "180080"
  },
  {
    "text": "threats to try to compete for acquiring",
    "start": "180080",
    "end": "182159"
  },
  {
    "text": "a log and reduce the throw so these are",
    "start": "182159",
    "end": "184680"
  },
  {
    "text": "like some of the performance score we",
    "start": "184680",
    "end": "186200"
  },
  {
    "text": "have and lastly but very importantly we",
    "start": "186200",
    "end": "188519"
  },
  {
    "text": "want the memory conception or the",
    "start": "188519",
    "end": "190319"
  },
  {
    "text": "resource construction to be kept so this",
    "start": "190319",
    "end": "192640"
  },
  {
    "text": "is very important like no matter what",
    "start": "192640",
    "end": "194440"
  },
  {
    "text": "the input is so even if a really",
    "start": "194440",
    "end": "196440"
  },
  {
    "text": "malicious uh input is fed into the",
    "start": "196440",
    "end": "198640"
  },
  {
    "text": "system you want the output to be kept",
    "start": "198640",
    "end": "200720"
  },
  {
    "text": "one example is uh many people use uh",
    "start": "200720",
    "end": "203599"
  },
  {
    "text": "metrics to figure out like you like are",
    "start": "203599",
    "end": "206400"
  },
  {
    "text": "you under a Dos attack so let's say",
    "start": "206400",
    "end": "208280"
  },
  {
    "text": "someone is making a DS attack you don't",
    "start": "208280",
    "end": "210560"
  },
  {
    "text": "want the app to go down just because of",
    "start": "210560",
    "end": "212680"
  },
  {
    "text": "open dmetry itself because you're going",
    "start": "212680",
    "end": "214400"
  },
  {
    "text": "to rely on open dmetry to know that to",
    "start": "214400",
    "end": "216480"
  },
  {
    "text": "detect that you are under an attack so",
    "start": "216480",
    "end": "218480"
  },
  {
    "text": "the last thing you want is the app to",
    "start": "218480",
    "end": "220360"
  },
  {
    "text": "crash because your open elimary is going",
    "start": "220360",
    "end": "222120"
  },
  {
    "text": "to take indefinite amount of memory so",
    "start": "222120",
    "end": "224720"
  },
  {
    "text": "these are some of the design goals which",
    "start": "224720",
    "end": "226720"
  },
  {
    "text": "we were keeping in mind now the entire",
    "start": "226720",
    "end": "229720"
  },
  {
    "text": "problem is like split into like the API",
    "start": "229720",
    "end": "231360"
  },
  {
    "text": "side of things open elimary Matrix API",
    "start": "231360",
    "end": "233400"
  },
  {
    "text": "and then SDK so let's start with the API",
    "start": "233400",
    "end": "237319"
  },
  {
    "text": "so API has one single job which is to",
    "start": "237319",
    "end": "240000"
  },
  {
    "text": "accept the raw measurements the raow",
    "start": "240000",
    "end": "242120"
  },
  {
    "text": "measurement would involve a numerical",
    "start": "242120",
    "end": "243879"
  },
  {
    "text": "value like one two some number or could",
    "start": "243879",
    "end": "245959"
  },
  {
    "text": "be floating along with zero or more",
    "start": "245959",
    "end": "248720"
  },
  {
    "text": "attributes so in case of the example",
    "start": "248720",
    "end": "250439"
  },
  {
    "text": "which I'm using it's the name and color",
    "start": "250439",
    "end": "252879"
  },
  {
    "text": "those are the two attributes now the",
    "start": "252879",
    "end": "254879"
  },
  {
    "text": "very fact that the number of attributes",
    "start": "254879",
    "end": "257320"
  },
  {
    "text": "are variable like it could be zero it",
    "start": "257320",
    "end": "258919"
  },
  {
    "text": "could be one or any that means like the",
    "start": "258919",
    "end": "261079"
  },
  {
    "text": "APA has to accept like some sort of like",
    "start": "261079",
    "end": "263400"
  },
  {
    "text": "variable number of arguments now the",
    "start": "263400",
    "end": "265479"
  },
  {
    "text": "most simple way of doing that is uh",
    "start": "265479",
    "end": "267800"
  },
  {
    "text": "prams in net or list or array or",
    "start": "267800",
    "end": "270840"
  },
  {
    "text": "dictionary or if you want to be like",
    "start": "270840",
    "end": "272720"
  },
  {
    "text": "more abstract something like I numerable",
    "start": "272720",
    "end": "275039"
  },
  {
    "text": "in language like.net the problem with",
    "start": "275039",
    "end": "277320"
  },
  {
    "text": "any of these option is it does allocate",
    "start": "277320",
    "end": "279759"
  },
  {
    "text": "so either it's a data structure on the",
    "start": "279759",
    "end": "281759"
  },
  {
    "text": "Heap or it has to box something in so it",
    "start": "281759",
    "end": "284080"
  },
  {
    "text": "has to allocate so that's not acceptable",
    "start": "284080",
    "end": "286080"
  },
  {
    "text": "because we want the API to be like zero",
    "start": "286080",
    "end": "288840"
  },
  {
    "text": "allocation uh so here's what we did to",
    "start": "288840",
    "end": "291759"
  },
  {
    "text": "prevent the allocations uh so what we",
    "start": "291759",
    "end": "294400"
  },
  {
    "text": "found that was in most common cases",
    "start": "294400",
    "end": "296639"
  },
  {
    "text": "people need like up to three attributes",
    "start": "296639",
    "end": "298840"
  },
  {
    "text": "which is the most common case so we",
    "start": "298840",
    "end": "300680"
  },
  {
    "text": "provide like dedicated over I'm using",
    "start": "300680",
    "end": "302720"
  },
  {
    "text": "counter throughout but pretty much",
    "start": "302720",
    "end": "304320"
  },
  {
    "text": "everything is applicable to other",
    "start": "304320",
    "end": "306039"
  },
  {
    "text": "instruments but for Simplicity I'm only",
    "start": "306039",
    "end": "307919"
  },
  {
    "text": "using counter so here like for the",
    "start": "307919",
    "end": "309800"
  },
  {
    "text": "counter. add we provide dedicated",
    "start": "309800",
    "end": "312919"
  },
  {
    "text": "overloads for one two or three so as you",
    "start": "312919",
    "end": "315039"
  },
  {
    "text": "can see like the first three uh there is",
    "start": "315039",
    "end": "317080"
  },
  {
    "text": "no need of allocation no list no array",
    "start": "317080",
    "end": "319039"
  },
  {
    "text": "nothing and for more than three uh we",
    "start": "319039",
    "end": "322120"
  },
  {
    "text": "create a custom data structure called",
    "start": "322120",
    "end": "323919"
  },
  {
    "text": "tag list uh so it's a stag data",
    "start": "323919",
    "end": "326360"
  },
  {
    "text": "structure or right it's called like",
    "start": "326360",
    "end": "327800"
  },
  {
    "text": "structure in net so it's not allocated",
    "start": "327800",
    "end": "329720"
  },
  {
    "text": "in the Heap and it's internally special",
    "start": "329720",
    "end": "332319"
  },
  {
    "text": "cased for up to eight attributes so if",
    "start": "332319",
    "end": "334199"
  },
  {
    "text": "you have eight key value pairs it's",
    "start": "334199",
    "end": "336000"
  },
  {
    "text": "internally going to store it in a top",
    "start": "336000",
    "end": "337680"
  },
  {
    "text": "level field and anything more than eight",
    "start": "337680",
    "end": "339880"
  },
  {
    "text": "uh we'll start allocating so up to eight",
    "start": "339880",
    "end": "341880"
  },
  {
    "text": "we are like zero allocation uh so that's",
    "start": "341880",
    "end": "344479"
  },
  {
    "text": "all I would mention about API uh even",
    "start": "344479",
    "end": "346720"
  },
  {
    "text": "though the the bulk of the work is",
    "start": "346720",
    "end": "348400"
  },
  {
    "text": "occurring in the SDK it's important to",
    "start": "348400",
    "end": "350680"
  },
  {
    "text": "get the API side correct because if the",
    "start": "350680",
    "end": "353080"
  },
  {
    "text": "API is going to allocate and no matter",
    "start": "353080",
    "end": "355280"
  },
  {
    "text": "how many how much optimization you do in",
    "start": "355280",
    "end": "357479"
  },
  {
    "text": "the SDK you still still have a",
    "start": "357479",
    "end": "359600"
  },
  {
    "text": "nonperforming SDK uh now let's talk",
    "start": "359600",
    "end": "362520"
  },
  {
    "text": "about the SDK side of things so this is",
    "start": "362520",
    "end": "364800"
  },
  {
    "text": "the meat this is the core of the uh",
    "start": "364800",
    "end": "367240"
  },
  {
    "text": "entire uh problem uh so conceptually",
    "start": "367240",
    "end": "370680"
  },
  {
    "text": "what an SDK is supposed to do is it's",
    "start": "370680",
    "end": "372160"
  },
  {
    "text": "very much similar to what I showed in",
    "start": "372160",
    "end": "373400"
  },
  {
    "text": "the beginning you get a bunch of raw",
    "start": "373400",
    "end": "375280"
  },
  {
    "text": "measurements you aggregate that and",
    "start": "375280",
    "end": "376759"
  },
  {
    "text": "produce a something conceptually what",
    "start": "376759",
    "end": "378520"
  },
  {
    "text": "I'm showing in the right side uh so the",
    "start": "378520",
    "end": "381280"
  },
  {
    "text": "entire problem within the SDK can be or",
    "start": "381280",
    "end": "383479"
  },
  {
    "text": "the the operation which the SDK has to",
    "start": "383479",
    "end": "385479"
  },
  {
    "text": "do when it receives a raw measurement",
    "start": "385479",
    "end": "387960"
  },
  {
    "text": "can be thought of as two steps",
    "start": "387960",
    "end": "390120"
  },
  {
    "text": "one is when once you get a measurement",
    "start": "390120",
    "end": "393440"
  },
  {
    "text": "figure out which metric point or which",
    "start": "393440",
    "end": "395560"
  },
  {
    "text": "time series this is going to accumulate",
    "start": "395560",
    "end": "397039"
  },
  {
    "text": "into so that's usually done by like some",
    "start": "397039",
    "end": "399440"
  },
  {
    "text": "sort of lookup of all the keys and",
    "start": "399440",
    "end": "401440"
  },
  {
    "text": "values that's the first half of the",
    "start": "401440",
    "end": "403199"
  },
  {
    "text": "problem and second is you have to do the",
    "start": "403199",
    "end": "404759"
  },
  {
    "text": "actual aggregation and it could be in",
    "start": "404759",
    "end": "406919"
  },
  {
    "text": "case of counter it's very simple you",
    "start": "406919",
    "end": "408360"
  },
  {
    "text": "just do the mathematical sum but for",
    "start": "408360",
    "end": "411120"
  },
  {
    "text": "complex instruments like histogram it's",
    "start": "411120",
    "end": "413440"
  },
  {
    "text": "more involved like you had to do like",
    "start": "413440",
    "end": "415400"
  },
  {
    "text": "min max count some and also optionally",
    "start": "415400",
    "end": "417759"
  },
  {
    "text": "the histogram buckets uh but anyway",
    "start": "417759",
    "end": "420080"
  },
  {
    "text": "there are two aspects of the problem",
    "start": "420080",
    "end": "422039"
  },
  {
    "text": "first one figure out given an incoming",
    "start": "422039",
    "end": "424160"
  },
  {
    "text": "measurement figure out which time series",
    "start": "424160",
    "end": "425879"
  },
  {
    "text": "it belongs to and second do the actual",
    "start": "425879",
    "end": "428120"
  },
  {
    "text": "math now with this simple conceptual",
    "start": "428120",
    "end": "430840"
  },
  {
    "text": "overview uh we can translate that into",
    "start": "430840",
    "end": "432639"
  },
  {
    "text": "code uh and I'll call it as a very name",
    "start": "432639",
    "end": "435560"
  },
  {
    "text": "implementation or the most simplistic",
    "start": "435560",
    "end": "438000"
  },
  {
    "text": "implementation we just use a dictionary",
    "start": "438000",
    "end": "440199"
  },
  {
    "text": "or hashmap in certain languages you",
    "start": "440199",
    "end": "442840"
  },
  {
    "text": "create the hashmap where the key is the",
    "start": "442840",
    "end": "445280"
  },
  {
    "text": "key value pair collection and the value",
    "start": "445280",
    "end": "447240"
  },
  {
    "text": "is the actual number itself so whenever",
    "start": "447240",
    "end": "449639"
  },
  {
    "text": "you get a measurement all you need to do",
    "start": "449639",
    "end": "451280"
  },
  {
    "text": "is you take a lookup you acire a log",
    "start": "451280",
    "end": "453960"
  },
  {
    "text": "because you want it to be threat safe do",
    "start": "453960",
    "end": "455879"
  },
  {
    "text": "a lookup in the dictionary and find out",
    "start": "455879",
    "end": "457639"
  },
  {
    "text": "which where this measurement belongs and",
    "start": "457639",
    "end": "460360"
  },
  {
    "text": "then then do the increment uh that's",
    "start": "460360",
    "end": "462720"
  },
  {
    "text": "very simple and it works mostly however",
    "start": "462720",
    "end": "465120"
  },
  {
    "text": "it must be obvious that if you're going",
    "start": "465120",
    "end": "466560"
  },
  {
    "text": "to take if you're going to do a",
    "start": "466560",
    "end": "468039"
  },
  {
    "text": "continuous update of the dictionary",
    "start": "468039",
    "end": "469879"
  },
  {
    "text": "under a loog it won't scale very well",
    "start": "469879",
    "end": "472280"
  },
  {
    "text": "like if you throw more CPU at it we",
    "start": "472280",
    "end": "474479"
  },
  {
    "text": "expect it to scale but it won't so let's",
    "start": "474479",
    "end": "477000"
  },
  {
    "text": "look at the actual performance number so",
    "start": "477000",
    "end": "478680"
  },
  {
    "text": "here on the hor Al axis you have the",
    "start": "478680",
    "end": "481159"
  },
  {
    "text": "number of CPU cores and on the vertical",
    "start": "481159",
    "end": "483879"
  },
  {
    "text": "axis it's a throughput so how many",
    "start": "483879",
    "end": "486199"
  },
  {
    "text": "measurements can you do per second",
    "start": "486199",
    "end": "487800"
  },
  {
    "text": "that's the uh uh Y axis so as you can",
    "start": "487800",
    "end": "491199"
  },
  {
    "text": "see like when we went from like one to",
    "start": "491199",
    "end": "493199"
  },
  {
    "text": "two to three cores we started like",
    "start": "493199",
    "end": "495120"
  },
  {
    "text": "increasing the throughput from 4 million",
    "start": "495120",
    "end": "497120"
  },
  {
    "text": "to roughly like 8 million per second",
    "start": "497120",
    "end": "499280"
  },
  {
    "text": "which is very respectable but after that",
    "start": "499280",
    "end": "501599"
  },
  {
    "text": "we started seeing the convension effect",
    "start": "501599",
    "end": "503759"
  },
  {
    "text": "where the threats were just competing to",
    "start": "503759",
    "end": "505319"
  },
  {
    "text": "Ure the log so the performance just",
    "start": "505319",
    "end": "507680"
  },
  {
    "text": "started dropping and no matter how much",
    "start": "507680",
    "end": "509479"
  },
  {
    "text": "CP I throw it in it won't uh it won't",
    "start": "509479",
    "end": "511879"
  },
  {
    "text": "get any better in fact it's it started",
    "start": "511879",
    "end": "513839"
  },
  {
    "text": "dropping I didn't have a 32 core machine",
    "start": "513839",
    "end": "516080"
  },
  {
    "text": "otherwise uh I mean I could have shown",
    "start": "516080",
    "end": "517640"
  },
  {
    "text": "more numbers where it's actually going",
    "start": "517640",
    "end": "519360"
  },
  {
    "text": "to get worse and worse and worse uh so",
    "start": "519360",
    "end": "522039"
  },
  {
    "text": "that's not acceptable because one of our",
    "start": "522039",
    "end": "523640"
  },
  {
    "text": "goal was no contention we wanted to",
    "start": "523640",
    "end": "525680"
  },
  {
    "text": "nicely scale with the hardware uh so",
    "start": "525680",
    "end": "528120"
  },
  {
    "text": "let's see how how how we can solve this",
    "start": "528120",
    "end": "529959"
  },
  {
    "text": "problem I know that many languages have",
    "start": "529959",
    "end": "531640"
  },
  {
    "text": "already solved it so I'm just going to",
    "start": "531640",
    "end": "532920"
  },
  {
    "text": "explain how net Sol it pretty good",
    "start": "532920",
    "end": "535560"
  },
  {
    "text": "chance that other languages followed the",
    "start": "535560",
    "end": "537560"
  },
  {
    "text": "similar approach uh so if you look at at",
    "start": "537560",
    "end": "539680"
  },
  {
    "text": "the metrics uh SDK I say like from",
    "start": "539680",
    "end": "542240"
  },
  {
    "text": "conceptual point the most common",
    "start": "542240",
    "end": "544560"
  },
  {
    "text": "operation is not adding or removing",
    "start": "544560",
    "end": "546640"
  },
  {
    "text": "something from the dictionary it is just",
    "start": "546640",
    "end": "548399"
  },
  {
    "text": "doing a lookup and updating an existing",
    "start": "548399",
    "end": "551040"
  },
  {
    "text": "Point uh because we don't expect people",
    "start": "551040",
    "end": "553240"
  },
  {
    "text": "to like keep uh randomly producing more",
    "start": "553240",
    "end": "556680"
  },
  {
    "text": "and more attributes it's it's always a",
    "start": "556680",
    "end": "558440"
  },
  {
    "text": "fixed set so once you saturate that",
    "start": "558440",
    "end": "560839"
  },
  {
    "text": "limit or once you hit the once you like",
    "start": "560839",
    "end": "562880"
  },
  {
    "text": "hydrate your dictionary with all the key",
    "start": "562880",
    "end": "564480"
  },
  {
    "text": "value pairs it's mostly look up you",
    "start": "564480",
    "end": "566320"
  },
  {
    "text": "don't really need to like remove or add",
    "start": "566320",
    "end": "568320"
  },
  {
    "text": "anything new so with that knowledge uh",
    "start": "568320",
    "end": "570519"
  },
  {
    "text": "what we are trying what we uh what we",
    "start": "570519",
    "end": "572320"
  },
  {
    "text": "did was instead of storing the actual",
    "start": "572320",
    "end": "575079"
  },
  {
    "text": "value in the dictionary we store the",
    "start": "575079",
    "end": "577360"
  },
  {
    "text": "actual metric in a different location in",
    "start": "577360",
    "end": "579440"
  },
  {
    "text": "a memory location separate from the",
    "start": "579440",
    "end": "581160"
  },
  {
    "text": "dictionary and have the dictionary point",
    "start": "581160",
    "end": "583200"
  },
  {
    "text": "at it now what this gives us is once you",
    "start": "583200",
    "end": "587120"
  },
  {
    "text": "do the lookup uh you you're not going to",
    "start": "587120",
    "end": "589560"
  },
  {
    "text": "update the dictionary itself you update",
    "start": "589560",
    "end": "592240"
  },
  {
    "text": "in you you update the metric value which",
    "start": "592240",
    "end": "594200"
  },
  {
    "text": "is resing in a different point so by",
    "start": "594200",
    "end": "596399"
  },
  {
    "text": "doing this you effectively make this a",
    "start": "596399",
    "end": "598560"
  },
  {
    "text": "read heavy dictionary you're not going",
    "start": "598560",
    "end": "600440"
  },
  {
    "text": "to like uh write anything or you're not",
    "start": "600440",
    "end": "602600"
  },
  {
    "text": "going to update anything because once",
    "start": "602600",
    "end": "604480"
  },
  {
    "text": "you do the lookup you just know which",
    "start": "604480",
    "end": "606279"
  },
  {
    "text": "memory location you are supposed to uh",
    "start": "606279",
    "end": "608120"
  },
  {
    "text": "update and the updates will be done in",
    "start": "608120",
    "end": "610360"
  },
  {
    "text": "the metric points and they are like done",
    "start": "610360",
    "end": "612560"
  },
  {
    "text": "independent of the dictionary so from",
    "start": "612560",
    "end": "614680"
  },
  {
    "text": "the dictionary or a hashtable standpoint",
    "start": "614680",
    "end": "616519"
  },
  {
    "text": "it's mostly just reads with that uh we",
    "start": "616519",
    "end": "619440"
  },
  {
    "text": "use concurrent dictionary in. net which",
    "start": "619440",
    "end": "621160"
  },
  {
    "text": "has a nice property that reads do not",
    "start": "621160",
    "end": "623680"
  },
  {
    "text": "require any logs so that means as long",
    "start": "623680",
    "end": "626399"
  },
  {
    "text": "as we are doing log I mean as long as we",
    "start": "626399",
    "end": "628000"
  },
  {
    "text": "are doing reads we we not going to face",
    "start": "628000",
    "end": "630079"
  },
  {
    "text": "the contention problem which means we",
    "start": "630079",
    "end": "631640"
  },
  {
    "text": "would be able to scale very nicely and",
    "start": "631640",
    "end": "634200"
  },
  {
    "text": "also like the individual updates of the",
    "start": "634200",
    "end": "636440"
  },
  {
    "text": "the metric points they have to still be",
    "start": "636440",
    "end": "638040"
  },
  {
    "text": "done like in a threat safe way but that",
    "start": "638040",
    "end": "640160"
  },
  {
    "text": "can be done in a very localized way like",
    "start": "640160",
    "end": "642399"
  },
  {
    "text": "most often we use the interlogs so the",
    "start": "642399",
    "end": "644880"
  },
  {
    "text": "native Atomic instruction so there won't",
    "start": "644880",
    "end": "646800"
  },
  {
    "text": "be any contentions there as well so with",
    "start": "646800",
    "end": "649000"
  },
  {
    "text": "this uh the the performance numbers are",
    "start": "649000",
    "end": "651680"
  },
  {
    "text": "here this is the same stress test the",
    "start": "651680",
    "end": "653519"
  },
  {
    "text": "blue one is the updated version which",
    "start": "653519",
    "end": "655440"
  },
  {
    "text": "uses a modified version where the",
    "start": "655440",
    "end": "657760"
  },
  {
    "text": "dictionary is designed to be like read",
    "start": "657760",
    "end": "659480"
  },
  {
    "text": "optimized and we we convert the metric",
    "start": "659480",
    "end": "661600"
  },
  {
    "text": "problem into a read heavy problem you",
    "start": "661600",
    "end": "663600"
  },
  {
    "text": "can see it kind of scales very nicely",
    "start": "663600",
    "end": "665920"
  },
  {
    "text": "with the number of CPUs so we went from",
    "start": "665920",
    "end": "668560"
  },
  {
    "text": "approximately like 5 million at the 16",
    "start": "668560",
    "end": "670480"
  },
  {
    "text": "core machine to almost like 20 25",
    "start": "670480",
    "end": "673160"
  },
  {
    "text": "million so by removing contention we are",
    "start": "673160",
    "end": "675320"
  },
  {
    "text": "able to like extract a lot more juice",
    "start": "675320",
    "end": "676920"
  },
  {
    "text": "out of the metric SDK uh but that's not",
    "start": "676920",
    "end": "679920"
  },
  {
    "text": "the end of it it's still like we still",
    "start": "679920",
    "end": "681720"
  },
  {
    "text": "not done so there are plenty of other",
    "start": "681720",
    "end": "683880"
  },
  {
    "text": "optimization which which we have done so",
    "start": "683880",
    "end": "686560"
  },
  {
    "text": "I'll talk about uh two more just to save",
    "start": "686560",
    "end": "689079"
  },
  {
    "text": "time",
    "start": "689079",
    "end": "689800"
  },
  {
    "text": "so first one is how do we avoid the",
    "start": "689800",
    "end": "693279"
  },
  {
    "text": "attribute sorting problem uh so what is",
    "start": "693279",
    "end": "696000"
  },
  {
    "text": "the attribute sorting problem so I'll",
    "start": "696000",
    "end": "698240"
  },
  {
    "text": "just use this example to explain so here",
    "start": "698240",
    "end": "700320"
  },
  {
    "text": "the user is uh reporting measurement for",
    "start": "700320",
    "end": "703680"
  },
  {
    "text": "uh fruits again so here it the user can",
    "start": "703680",
    "end": "706560"
  },
  {
    "text": "provide either the name first and then",
    "start": "706560",
    "end": "709200"
  },
  {
    "text": "followed by color or they can do color",
    "start": "709200",
    "end": "711320"
  },
  {
    "text": "first and then the name of the fruit",
    "start": "711320",
    "end": "713079"
  },
  {
    "text": "itself so it doesn't matter what order",
    "start": "713079",
    "end": "715120"
  },
  {
    "text": "they provide the attributes ultimately",
    "start": "715120",
    "end": "717519"
  },
  {
    "text": "they are all TR appled so they should",
    "start": "717519",
    "end": "718800"
  },
  {
    "text": "aggregate together so if you if you look",
    "start": "718800",
    "end": "721079"
  },
  {
    "text": "at if you uh do a lookup and you if you",
    "start": "721079",
    "end": "723880"
  },
  {
    "text": "want to make sure that they go to the",
    "start": "723880",
    "end": "725320"
  },
  {
    "text": "same metric point you have to do",
    "start": "725320",
    "end": "726920"
  },
  {
    "text": "something to make sure like red apple",
    "start": "726920",
    "end": "728480"
  },
  {
    "text": "and apple red they both are the same in",
    "start": "728480",
    "end": "730839"
  },
  {
    "text": "Nave a simple way which most many",
    "start": "730839",
    "end": "732760"
  },
  {
    "text": "languages including ourselves we're",
    "start": "732760",
    "end": "734240"
  },
  {
    "text": "doing was just sort the attributes using",
    "start": "734240",
    "end": "736800"
  },
  {
    "text": "key so you'll ensure that irrespective",
    "start": "736800",
    "end": "739120"
  },
  {
    "text": "of the user provided order we'll always",
    "start": "739120",
    "end": "741959"
  },
  {
    "text": "look up in the sorted way so we'll",
    "start": "741959",
    "end": "743360"
  },
  {
    "text": "accumulate into the same one but turns",
    "start": "743360",
    "end": "745279"
  },
  {
    "text": "out sorting is a very costly operation",
    "start": "745279",
    "end": "748040"
  },
  {
    "text": "uh when I say costly it's on a relative",
    "start": "748040",
    "end": "750320"
  },
  {
    "text": "basis because like I said in the",
    "start": "750320",
    "end": "751600"
  },
  {
    "text": "beginning I expect the the latency of",
    "start": "751600",
    "end": "753720"
  },
  {
    "text": "measurements to be uh like somewhere in",
    "start": "753720",
    "end": "755959"
  },
  {
    "text": "the nanc range and here I'm showing the",
    "start": "755959",
    "end": "759279"
  },
  {
    "text": "cost of sorting just three attributes is",
    "start": "759279",
    "end": "761399"
  },
  {
    "text": "like around",
    "start": "761399",
    "end": "763240"
  },
  {
    "text": "130 and the more attributes you have the",
    "start": "763240",
    "end": "766160"
  },
  {
    "text": "cost is keeping going up so how do we",
    "start": "766160",
    "end": "768839"
  },
  {
    "text": "solve that problem because it is",
    "start": "768839",
    "end": "770279"
  },
  {
    "text": "sometimes like 30 to 50% of the entire",
    "start": "770279",
    "end": "772360"
  },
  {
    "text": "cost is just sorting the attributes so",
    "start": "772360",
    "end": "775079"
  },
  {
    "text": "we again liiz the knowledge we have",
    "start": "775079",
    "end": "777160"
  },
  {
    "text": "about the metric space where people",
    "start": "777160",
    "end": "779199"
  },
  {
    "text": "usually don't change their order",
    "start": "779199",
    "end": "780760"
  },
  {
    "text": "intentionally so if they if they always",
    "start": "780760",
    "end": "782720"
  },
  {
    "text": "specify like name followed by color they",
    "start": "782720",
    "end": "785040"
  },
  {
    "text": "tend to keep with the same order they",
    "start": "785040",
    "end": "787199"
  },
  {
    "text": "don't like intentionally change it so we",
    "start": "787199",
    "end": "789000"
  },
  {
    "text": "liage that information and we instead of",
    "start": "789000",
    "end": "791720"
  },
  {
    "text": "storing just the sorted order we also",
    "start": "791720",
    "end": "793880"
  },
  {
    "text": "store the uh we also cach the very first",
    "start": "793880",
    "end": "797519"
  },
  {
    "text": "order the user has used so what that",
    "start": "797519",
    "end": "800360"
  },
  {
    "text": "gives us is the when a measurement comes",
    "start": "800360",
    "end": "803240"
  },
  {
    "text": "we don't sort the attributes we simply",
    "start": "803240",
    "end": "805120"
  },
  {
    "text": "do a lookup in the dictionary and as",
    "start": "805120",
    "end": "807720"
  },
  {
    "text": "long as the user is not changing the",
    "start": "807720",
    "end": "809160"
  },
  {
    "text": "their order we'll always succeed and",
    "start": "809160",
    "end": "811160"
  },
  {
    "text": "then we don't we completely avoid the",
    "start": "811160",
    "end": "812639"
  },
  {
    "text": "sorting and of course if you fail to",
    "start": "812639",
    "end": "814760"
  },
  {
    "text": "find then we have to sort it so that",
    "start": "814760",
    "end": "816720"
  },
  {
    "text": "we'll still be accurate uh so we don't",
    "start": "816720",
    "end": "818760"
  },
  {
    "text": "punish the normal usage but if someone",
    "start": "818760",
    "end": "820560"
  },
  {
    "text": "intentionally changes their order of",
    "start": "820560",
    "end": "822279"
  },
  {
    "text": "course then we have to pay the Sorting",
    "start": "822279",
    "end": "823839"
  },
  {
    "text": "cost uh so that's one optimization uh",
    "start": "823839",
    "end": "826720"
  },
  {
    "text": "this is the last one I'll talk about uh",
    "start": "826720",
    "end": "829000"
  },
  {
    "text": "so I already mentioned that API itself",
    "start": "829000",
    "end": "831519"
  },
  {
    "text": "is designed to be like zero allocation",
    "start": "831519",
    "end": "833399"
  },
  {
    "text": "and we don't have any particular data",
    "start": "833399",
    "end": "835399"
  },
  {
    "text": "structure which needs to be Heap",
    "start": "835399",
    "end": "837000"
  },
  {
    "text": "allocated uh but one thing to notice",
    "start": "837000",
    "end": "839160"
  },
  {
    "text": "that API does not do the aggregation the",
    "start": "839160",
    "end": "840720"
  },
  {
    "text": "aggregation is done by a different",
    "start": "840720",
    "end": "842320"
  },
  {
    "text": "component in open elmary called SDK but",
    "start": "842320",
    "end": "845240"
  },
  {
    "text": "then there has to be a way for the API",
    "start": "845240",
    "end": "847120"
  },
  {
    "text": "to hand over the measurements into SDK",
    "start": "847120",
    "end": "850320"
  },
  {
    "text": "so for that uh we use a data structure",
    "start": "850320",
    "end": "852360"
  },
  {
    "text": "in net called readly span uh nothing to",
    "start": "852360",
    "end": "854720"
  },
  {
    "text": "do with the Span in hotel it just it's a",
    "start": "854720",
    "end": "857839"
  },
  {
    "text": "special data structure which can never",
    "start": "857839",
    "end": "859199"
  },
  {
    "text": "leave the stack they're always going to",
    "start": "859199",
    "end": "860759"
  },
  {
    "text": "be allocated on the stack so that's one",
    "start": "860759",
    "end": "862600"
  },
  {
    "text": "way we ensure that even for interprocess",
    "start": "862600",
    "end": "865839"
  },
  {
    "text": "communications So within the process we",
    "start": "865839",
    "end": "867839"
  },
  {
    "text": "not going to do any allocation",
    "start": "867839",
    "end": "870839"
  },
  {
    "text": "however uh like to do the lookup like",
    "start": "870839",
    "end": "873399"
  },
  {
    "text": "you got something on the stack but",
    "start": "873399",
    "end": "875000"
  },
  {
    "text": "innite the dictionary cannot be looked",
    "start": "875000",
    "end": "877240"
  },
  {
    "text": "up with something on the stack there is",
    "start": "877240",
    "end": "879440"
  },
  {
    "text": "no API in.net to look up a dictionary",
    "start": "879440",
    "end": "881680"
  },
  {
    "text": "with just the data on the stack it has",
    "start": "881680",
    "end": "883560"
  },
  {
    "text": "to be on a heap or it has to be on some",
    "start": "883560",
    "end": "886440"
  },
  {
    "text": "some place other than the stack so for",
    "start": "886440",
    "end": "888600"
  },
  {
    "text": "that we need like some temporary data",
    "start": "888600",
    "end": "890199"
  },
  {
    "text": "structure so we mostly use thread local",
    "start": "890199",
    "end": "893519"
  },
  {
    "text": "um so that we don't need to like consult",
    "start": "893519",
    "end": "895560"
  },
  {
    "text": "the Heap and allocate something and",
    "start": "895560",
    "end": "896880"
  },
  {
    "text": "later clean it up so with that like we",
    "start": "896880",
    "end": "898600"
  },
  {
    "text": "were able to to keep the allocations to",
    "start": "898600",
    "end": "900000"
  },
  {
    "text": "be like zero so when I say zero it's",
    "start": "900000",
    "end": "902320"
  },
  {
    "text": "literally zero uh so I'll show the final",
    "start": "902320",
    "end": "905199"
  },
  {
    "text": "numbers this is the numbers from the",
    "start": "905199",
    "end": "907040"
  },
  {
    "text": "current stable version of net SDK uh the",
    "start": "907040",
    "end": "910079"
  },
  {
    "text": "blue one again here shows that we like",
    "start": "910079",
    "end": "912000"
  },
  {
    "text": "way way above the original nav design",
    "start": "912000",
    "end": "915120"
  },
  {
    "text": "and even after the optimization we were",
    "start": "915120",
    "end": "917240"
  },
  {
    "text": "able to extract like more ju by doing",
    "start": "917240",
    "end": "919720"
  },
  {
    "text": "lots of minor optimization so we are",
    "start": "919720",
    "end": "921240"
  },
  {
    "text": "like hitting around 50 million",
    "start": "921240",
    "end": "923240"
  },
  {
    "text": "measurements per second uh in a like 16",
    "start": "923240",
    "end": "925800"
  },
  {
    "text": "core machine and you can see it is",
    "start": "925800",
    "end": "927560"
  },
  {
    "text": "scaling very nicely uh but most people",
    "start": "927560",
    "end": "930480"
  },
  {
    "text": "are also interested in knowing like",
    "start": "930480",
    "end": "932079"
  },
  {
    "text": "what's the Benchmark result like how",
    "start": "932079",
    "end": "934519"
  },
  {
    "text": "much time it takes for a thread to do a",
    "start": "934519",
    "end": "936040"
  },
  {
    "text": "measurement uh so again see the numbers",
    "start": "936040",
    "end": "938360"
  },
  {
    "text": "are like in the low uh 100 NCS for up to",
    "start": "938360",
    "end": "941680"
  },
  {
    "text": "like seven attributes and like really",
    "start": "941680",
    "end": "943600"
  },
  {
    "text": "close to like 10 uh if you have zero so",
    "start": "943600",
    "end": "946120"
  },
  {
    "text": "this again meets our original goal like",
    "start": "946120",
    "end": "948120"
  },
  {
    "text": "metric it takes like very few Nan",
    "start": "948120",
    "end": "949839"
  },
  {
    "text": "seconds to do it we scale nicely and uh",
    "start": "949839",
    "end": "953079"
  },
  {
    "text": "I didn't show it here but all of them",
    "start": "953079",
    "end": "954920"
  },
  {
    "text": "has zero allocation it like literally",
    "start": "954920",
    "end": "957040"
  },
  {
    "text": "zero allocation for up to seven",
    "start": "957040",
    "end": "960040"
  },
  {
    "text": "attributes uh I'll give a brief mention",
    "start": "960040",
    "end": "962800"
  },
  {
    "text": "about like how do we test because one of",
    "start": "962800",
    "end": "964720"
  },
  {
    "text": "the goal is to be like trustworthy so we",
    "start": "964720",
    "end": "966959"
  },
  {
    "text": "do a lot of units where we spin up",
    "start": "966959",
    "end": "969959"
  },
  {
    "text": "multiple threads and every thread",
    "start": "969959",
    "end": "971800"
  },
  {
    "text": "attempts to update metric points and we",
    "start": "971800",
    "end": "974120"
  },
  {
    "text": "ensure that at the end like uh like all",
    "start": "974120",
    "end": "976360"
  },
  {
    "text": "the expected output is there",
    "start": "976360",
    "end": "978480"
  },
  {
    "text": "irrespective of all the threading",
    "start": "978480",
    "end": "980079"
  },
  {
    "text": "optimizations and on top of that we also",
    "start": "980079",
    "end": "982360"
  },
  {
    "text": "run what we called thrusters which is uh",
    "start": "982360",
    "end": "985160"
  },
  {
    "text": "like we use the entire machine all the",
    "start": "985160",
    "end": "987240"
  },
  {
    "text": "CPU to pump uh like like raw",
    "start": "987240",
    "end": "989279"
  },
  {
    "text": "measurements and we just measure like",
    "start": "989279",
    "end": "991600"
  },
  {
    "text": "how we do how we how are we doing in",
    "start": "991600",
    "end": "993399"
  },
  {
    "text": "terms of memory CPU and we usually let",
    "start": "993399",
    "end": "996040"
  },
  {
    "text": "it run for like not just like seconds it",
    "start": "996040",
    "end": "998079"
  },
  {
    "text": "usually run for like days sometimes over",
    "start": "998079",
    "end": "1000399"
  },
  {
    "text": "the weekend or over weeks just to make",
    "start": "1000399",
    "end": "1002560"
  },
  {
    "text": "sure that even after like prolonged use",
    "start": "1002560",
    "end": "1004399"
  },
  {
    "text": "we not leaking any memory we're not",
    "start": "1004399",
    "end": "1006440"
  },
  {
    "text": "degrading the expected we're not",
    "start": "1006440",
    "end": "1008800"
  },
  {
    "text": "degrading our latency and things like",
    "start": "1008800",
    "end": "1010639"
  },
  {
    "text": "that",
    "start": "1010639",
    "end": "1012319"
  },
  {
    "text": "um anyway that's I mean I talked all",
    "start": "1012319",
    "end": "1015279"
  },
  {
    "text": "about internal so if you are an inducer",
    "start": "1015279",
    "end": "1017759"
  },
  {
    "text": "here are like few teams for tips for you",
    "start": "1017759",
    "end": "1019639"
  },
  {
    "text": "to make the best out of the SDK so the",
    "start": "1019639",
    "end": "1023519"
  },
  {
    "text": "biggest tip I want to give is if you are",
    "start": "1023519",
    "end": "1025880"
  },
  {
    "text": "using uh open.net like use the provided",
    "start": "1025880",
    "end": "1028720"
  },
  {
    "text": "overloads to pass the attributes like",
    "start": "1028720",
    "end": "1030480"
  },
  {
    "text": "don't try to create uh a wrapper uh very",
    "start": "1030480",
    "end": "1034438"
  },
  {
    "text": "very commonly have seen people like",
    "start": "1034439",
    "end": "1035918"
  },
  {
    "text": "they'll try to be try to create some",
    "start": "1035919",
    "end": "1037760"
  },
  {
    "text": "helper methods like my metrix helper",
    "start": "1037760",
    "end": "1039760"
  },
  {
    "text": "here which kind of defeats the whole",
    "start": "1039760",
    "end": "1042199"
  },
  {
    "text": "point of a zero allocation API because",
    "start": "1042199",
    "end": "1044839"
  },
  {
    "text": "it does create a list on the Heap and",
    "start": "1044839",
    "end": "1046918"
  },
  {
    "text": "then pass it over so it doesn't matter",
    "start": "1046919",
    "end": "1048919"
  },
  {
    "text": "matter how much performing the AP and",
    "start": "1048919",
    "end": "1050440"
  },
  {
    "text": "SDK is because if your helper method is",
    "start": "1050440",
    "end": "1052760"
  },
  {
    "text": "going to allocate it's all like",
    "start": "1052760",
    "end": "1054240"
  },
  {
    "text": "nullified there are extreme cases I have",
    "start": "1054240",
    "end": "1056559"
  },
  {
    "text": "seen where people use uh like an object",
    "start": "1056559",
    "end": "1058919"
  },
  {
    "text": "to accept the value because the value",
    "start": "1058919",
    "end": "1060480"
  },
  {
    "text": "can be integer float double and if some",
    "start": "1060480",
    "end": "1063760"
  },
  {
    "text": "people like create this kind of helpers",
    "start": "1063760",
    "end": "1065919"
  },
  {
    "text": "accept like object of course it causes",
    "start": "1065919",
    "end": "1067919"
  },
  {
    "text": "boxing so again we'll we'll be back into",
    "start": "1067919",
    "end": "1070799"
  },
  {
    "text": "the allocation world uh so anyway if you",
    "start": "1070799",
    "end": "1073120"
  },
  {
    "text": "ever want to uh write a rapper please do",
    "start": "1073120",
    "end": "1075600"
  },
  {
    "text": "so but make sure you follow some of the",
    "start": "1075600",
    "end": "1077960"
  },
  {
    "text": "principle which you have been following",
    "start": "1077960",
    "end": "1079280"
  },
  {
    "text": "so that you get the best and don't",
    "start": "1079280",
    "end": "1081720"
  },
  {
    "text": "change the order of the attributes if",
    "start": "1081720",
    "end": "1083240"
  },
  {
    "text": "you start with one order just stick with",
    "start": "1083240",
    "end": "1084960"
  },
  {
    "text": "that so you can really benefit from the",
    "start": "1084960",
    "end": "1087480"
  },
  {
    "text": "optimizations which we have done",
    "start": "1087480",
    "end": "1088960"
  },
  {
    "text": "internally uh so that's the end of the",
    "start": "1088960",
    "end": "1091320"
  },
  {
    "text": "presentation but definitely not the end",
    "start": "1091320",
    "end": "1093159"
  },
  {
    "text": "of the journey because there are many",
    "start": "1093159",
    "end": "1094880"
  },
  {
    "text": "challenges still remain in net uh we're",
    "start": "1094880",
    "end": "1097200"
  },
  {
    "text": "not very good at reclaiming memory it's",
    "start": "1097200",
    "end": "1099320"
  },
  {
    "text": "still an experimental feature uh the",
    "start": "1099320",
    "end": "1101559"
  },
  {
    "text": "histograms are not as performing as",
    "start": "1101559",
    "end": "1103559"
  },
  {
    "text": "counters we are still working on it uh",
    "start": "1103559",
    "end": "1105799"
  },
  {
    "text": "we don't have the notion of bound",
    "start": "1105799",
    "end": "1107520"
  },
  {
    "text": "instruments which couple of mentioned",
    "start": "1107520",
    "end": "1109400"
  },
  {
    "text": "earlier and we still like irrespective",
    "start": "1109400",
    "end": "1111640"
  },
  {
    "text": "of all the optimization it's still like",
    "start": "1111640",
    "end": "1113520"
  },
  {
    "text": "we have some contention because",
    "start": "1113520",
    "end": "1115280"
  },
  {
    "text": "ultimately if you have a 100 core",
    "start": "1115280",
    "end": "1116640"
  },
  {
    "text": "machine and there is a single point",
    "start": "1116640",
    "end": "1118760"
  },
  {
    "text": "where you are aggregating there is going",
    "start": "1118760",
    "end": "1120120"
  },
  {
    "text": "to be some contention so we want to move",
    "start": "1120120",
    "end": "1122120"
  },
  {
    "text": "away from uh that to like thread Locker",
    "start": "1122120",
    "end": "1124400"
  },
  {
    "text": "like lockl agregation and harvesting it",
    "start": "1124400",
    "end": "1126919"
  },
  {
    "text": "uh together at the background thread or",
    "start": "1126919",
    "end": "1129080"
  },
  {
    "text": "at the collection cycle none of this is",
    "start": "1129080",
    "end": "1131200"
  },
  {
    "text": "done yet so it's still an ongoing",
    "start": "1131200",
    "end": "1132760"
  },
  {
    "text": "Journey uh so if if you have like ideas",
    "start": "1132760",
    "end": "1135440"
  },
  {
    "text": "or you want to discuss more please find",
    "start": "1135440",
    "end": "1137520"
  },
  {
    "text": "us on the net or more likely you'll find",
    "start": "1137520",
    "end": "1140320"
  },
  {
    "text": "me on the rust repo because net is like",
    "start": "1140320",
    "end": "1142799"
  },
  {
    "text": "reasonably stable so we are not heavily",
    "start": "1142799",
    "end": "1144960"
  },
  {
    "text": "working on things but rust is still",
    "start": "1144960",
    "end": "1146919"
  },
  {
    "text": "Alpha so most of the things which I",
    "start": "1146919",
    "end": "1149120"
  },
  {
    "text": "talked about here all the numbers and",
    "start": "1149120",
    "end": "1150720"
  },
  {
    "text": "slides uh the charts they're like real",
    "start": "1150720",
    "end": "1153200"
  },
  {
    "text": "things from the rust implementation the",
    "start": "1153200",
    "end": "1154559"
  },
  {
    "text": "very first chart I showed is from the",
    "start": "1154559",
    "end": "1157000"
  },
  {
    "text": "current uh release version of open",
    "start": "1157000",
    "end": "1159159"
  },
  {
    "text": "Elementary rest and we just improved it",
    "start": "1159159",
    "end": "1160919"
  },
  {
    "text": "to match the second version and I'm",
    "start": "1160919",
    "end": "1162919"
  },
  {
    "text": "actively working to improve it to the",
    "start": "1162919",
    "end": "1164480"
  },
  {
    "text": "final version again like with thrust I",
    "start": "1164480",
    "end": "1166520"
  },
  {
    "text": "expect it to be like much more",
    "start": "1166520",
    "end": "1168039"
  },
  {
    "text": "performant than net but feel free to",
    "start": "1168039",
    "end": "1170320"
  },
  {
    "text": "reach out to me or in GitHub or slack uh",
    "start": "1170320",
    "end": "1173159"
  },
  {
    "text": "if you want to discuss more about the",
    "start": "1173159",
    "end": "1174600"
  },
  {
    "text": "space thank you",
    "start": "1174600",
    "end": "1177390"
  },
  {
    "text": "[Applause]",
    "start": "1177390",
    "end": "1181459"
  }
]