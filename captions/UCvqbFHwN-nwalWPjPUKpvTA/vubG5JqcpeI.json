[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "I'd like to thank everyone who's joining us today welcome to CNCs webinar today storage landscape for containerized",
    "start": "1730",
    "end": "9059"
  },
  {
    "text": "stateful applications my name is Sheila savvy cmcs ambassador and open source program manager at Comcast and I'll be",
    "start": "9059",
    "end": "15960"
  },
  {
    "text": "moderating today's webinar we'd like to welcome our presenters today Alex Kirk ops founder and CTO of storage",
    "start": "15960",
    "end": "22380"
  },
  {
    "text": "OS Lewis pabulum MTS engineer at port work and she yang",
    "start": "22380",
    "end": "27869"
  },
  {
    "text": "lead architect at Open SDS a few housekeeping items before we get started",
    "start": "27869",
    "end": "33510"
  },
  {
    "text": "during the webinar you're not able to talk as an attendee there is a Q&A box at the bottom of your screen please feel",
    "start": "33510",
    "end": "40710"
  },
  {
    "text": "free to drop your questions in there and we'll get to as many as we can at the end of the presentation with that I'll",
    "start": "40710",
    "end": "47129"
  },
  {
    "text": "go ahead and hand it over to Alex Lewis and Shing and to kick off today's presentation so I guess good morning",
    "start": "47129",
    "end": "58109"
  },
  {
    "text": "good afternoon good evening depending on where you are we'd like to talk to you today about a",
    "start": "58109",
    "end": "65040"
  },
  {
    "text": "white paper we've written to discuss the storage landscape in cloud native",
    "start": "65040",
    "end": "72689"
  },
  {
    "text": "storage environments the three of us are members of the CN CF storage sake and",
    "start": "72689",
    "end": "81630"
  },
  {
    "text": "further details facts the storage sigar available on the CN CF websites so we we",
    "start": "81630",
    "end": "91560"
  },
  {
    "start": "89000",
    "end": "104000"
  },
  {
    "text": "wrote we originally started putting together the content for for this storage landscape white paper around",
    "start": "91560",
    "end": "100560"
  },
  {
    "text": "this time last year and what we wanted to do was to capture to capture",
    "start": "100560",
    "end": "107970"
  },
  {
    "start": "104000",
    "end": "236000"
  },
  {
    "text": "information that would provide the the tools that are necessary and the understanding that's necessary for",
    "start": "107970",
    "end": "114619"
  },
  {
    "text": "developers and devops teams and infrastructure teams that are working in",
    "start": "114619",
    "end": "120090"
  },
  {
    "text": "climb a different environments to fully utilize cloud native storage I think and",
    "start": "120090",
    "end": "126060"
  },
  {
    "text": "why is you know ultimately why is storage important so the the bottom line is we don't have",
    "start": "126060",
    "end": "134189"
  },
  {
    "text": "that there's no such thing as a stateless architecture every application needs to store some sort of state",
    "start": "134189",
    "end": "141900"
  },
  {
    "text": "somewhere and that can be that that's that applicate that that system that",
    "start": "141900",
    "end": "148620"
  },
  {
    "text": "stores the states can be something that's running in your cloud negative environment or it could be an external",
    "start": "148620",
    "end": "154859"
  },
  {
    "text": "an external component of your infrastructure or indeed a service that's running in the cloud one of the",
    "start": "154859",
    "end": "162810"
  },
  {
    "text": "things that we wants to focus on is that there's a lot of efforts to containerize",
    "start": "162810",
    "end": "170069"
  },
  {
    "text": "applications and container izing applications does enable portability of",
    "start": "170069",
    "end": "176280"
  },
  {
    "text": "the application but it doesn't necessarily enable the application to be completely portable because as we said",
    "start": "176280",
    "end": "183000"
  },
  {
    "text": "all of those applications need to store state and the state and the portability needs to move with the applications so",
    "start": "183000",
    "end": "189120"
  },
  {
    "text": "kind of moving away in the cloud native storage environment we're moving away from storage systems that are presenting",
    "start": "189120",
    "end": "198620"
  },
  {
    "text": "storage or utilizing storage in VMs and operating systems and hypervisors and",
    "start": "198620",
    "end": "206220"
  },
  {
    "text": "we're moving more to an application centric view of storage where storage is",
    "start": "206220",
    "end": "211250"
  },
  {
    "text": "consumed and presented and and utilized by the applications which in themselves",
    "start": "211250",
    "end": "216689"
  },
  {
    "text": "are portable and of course interoperating with storage increases",
    "start": "216689",
    "end": "222590"
  },
  {
    "text": "the ability to deploy more complex client native applications and allows",
    "start": "222590",
    "end": "229199"
  },
  {
    "text": "better portability across different environments whether it's on-premise or",
    "start": "229199",
    "end": "234599"
  },
  {
    "text": "in the client so the storage landscape white paper there's a link to it there",
    "start": "234599",
    "end": "241769"
  },
  {
    "start": "236000",
    "end": "334000"
  },
  {
    "text": "and it's also listed in in a PDF form in the in the storage sake a github page",
    "start": "241769",
    "end": "250759"
  },
  {
    "text": "allows us to define what makes up a storage system so it effectively gives",
    "start": "250759",
    "end": "257099"
  },
  {
    "text": "us some basic working tools to say this is what a storage system is made of and",
    "start": "257099",
    "end": "263099"
  },
  {
    "text": "these are the term oh gee the different terminologies as I used when defining or or utilizing",
    "start": "263099",
    "end": "270110"
  },
  {
    "text": "different components in a storage system so this includes the different layers",
    "start": "270110",
    "end": "275419"
  },
  {
    "text": "for the storage solution the way you can access a storage solution as well as the",
    "start": "275419",
    "end": "282500"
  },
  {
    "text": "different management interfaces that are used when when orchestrating cloud",
    "start": "282500",
    "end": "287509"
  },
  {
    "text": "native storage solutions and the reason why we put this paper together is to to",
    "start": "287509",
    "end": "295129"
  },
  {
    "text": "give to give users who may not have a lot of storage expertise the ability to",
    "start": "295129",
    "end": "301639"
  },
  {
    "text": "choose the right type of storage system for themselves so for the longest time storage used to",
    "start": "301639",
    "end": "308780"
  },
  {
    "text": "be one of those things where you just used whatever it was available in your organization but with cloud native",
    "start": "308780",
    "end": "315349"
  },
  {
    "text": "environments developers now often have a much richer choice of applications of",
    "start": "315349",
    "end": "322460"
  },
  {
    "text": "storage solutions which which means that they can now choose storage solutions",
    "start": "322460",
    "end": "328240"
  },
  {
    "text": "that fits the application rather than trying to fit the application around the",
    "start": "328240",
    "end": "333500"
  },
  {
    "text": "storage system so inside the storage solution that we already discussed there",
    "start": "333500",
    "end": "339800"
  },
  {
    "text": "are a number of different interfaces and each of those interfaces are probably better optimized for specific use cases",
    "start": "339800",
    "end": "347620"
  },
  {
    "text": "and often we have we have a number of",
    "start": "347620",
    "end": "352699"
  },
  {
    "text": "different layers of functionality which which will be utilized in the different",
    "start": "352699",
    "end": "360680"
  },
  {
    "text": "storage systems and those enough functionality provides the different",
    "start": "360680",
    "end": "366050"
  },
  {
    "text": "attributes that we measure a storage system by so things like availability scalability performance consistency and",
    "start": "366050",
    "end": "373219"
  },
  {
    "text": "durability we'll be talking about we'll be talking about the white paper and",
    "start": "373219",
    "end": "379129"
  },
  {
    "text": "also some of the the ways that we interact with clinics of storage in the",
    "start": "379129",
    "end": "384620"
  },
  {
    "text": "criminales environments today these different storage attributes can",
    "start": "384620",
    "end": "391490"
  },
  {
    "text": "be measured across a number of different accesses so when we talk about",
    "start": "391490",
    "end": "397630"
  },
  {
    "text": "availability sometimes we're talking about the failover or the redundancy",
    "start": "397630",
    "end": "404150"
  },
  {
    "text": "capability of a storage system but it can also mean it can also refer to the",
    "start": "404150",
    "end": "411050"
  },
  {
    "text": "different ways of protecting your data on a storage system or the ability of moving the data between nodes when when",
    "start": "411050",
    "end": "417920"
  },
  {
    "text": "nodes fail for example similarly scalability can be measured in a number of different in a number of different",
    "start": "417920",
    "end": "425330"
  },
  {
    "text": "ways sometimes it's simply about the number of clients that it can support or",
    "start": "425330",
    "end": "431420"
  },
  {
    "text": "indeed the number of storage operations per second or the throughput but sometimes it's also about the ability to",
    "start": "431420",
    "end": "437990"
  },
  {
    "text": "add scale to their storage system by adding components in a horizontally distributed fashion",
    "start": "437990",
    "end": "444370"
  },
  {
    "text": "similarly performance can have can have different meanings we can have we can",
    "start": "444370",
    "end": "452060"
  },
  {
    "text": "have performance measures in terms of latency for example which might be really important in terms of a",
    "start": "452060",
    "end": "460100"
  },
  {
    "text": "transactional system but it can also be measured in terms of throughput for example when you're when if if we're",
    "start": "460100",
    "end": "466790"
  },
  {
    "text": "dealing with things like data analytics or or or large large quantities of data that need to be processed one of the",
    "start": "466790",
    "end": "474980"
  },
  {
    "text": "things that is is a topic which often comes up in native storage solutions is",
    "start": "474980",
    "end": "481910"
  },
  {
    "text": "the concept of consistency so consistency is is a factor that that",
    "start": "481910",
    "end": "488690"
  },
  {
    "text": "arises by virtue of the fact that's a lot of clinics of storage systems are",
    "start": "488690",
    "end": "493880"
  },
  {
    "text": "distributed in some form and have some sort of scale and therefore needs to",
    "start": "493880",
    "end": "499280"
  },
  {
    "text": "need to consider how data is made consistent across a number of different nodes",
    "start": "499280",
    "end": "504410"
  },
  {
    "text": "so effectively consistency can be measured in two ways one in terms of the amount of time it takes before the data",
    "start": "504410",
    "end": "511700"
  },
  {
    "text": "that you sent the storage system is actually stored on physical storage but",
    "start": "511700",
    "end": "517940"
  },
  {
    "text": "it's also the amount of time that it takes for data to be queried by another and another",
    "start": "517940",
    "end": "524960"
  },
  {
    "text": "another system once the theta has been committed and then finally there's a",
    "start": "524960",
    "end": "530420"
  },
  {
    "text": "concept of durability so durability is different to availability because what",
    "start": "530420",
    "end": "536660"
  },
  {
    "text": "we're looking at here is the the concept of how how many or how many failures can",
    "start": "536660",
    "end": "542810"
  },
  {
    "text": "happen and what what what type of physical parameters are in place that",
    "start": "542810",
    "end": "548630"
  },
  {
    "text": "actually protect your data so things like data protection have some level of commonality between availability and",
    "start": "548630",
    "end": "554600"
  },
  {
    "text": "durability but it's also more things like the number of for example different",
    "start": "554600",
    "end": "562250"
  },
  {
    "text": "regions or different locations where your where your data are stored so the ability to tolerate to tolerate failures",
    "start": "562250",
    "end": "569030"
  },
  {
    "text": "and still retain and restore the data of course as we mentioned climbing for",
    "start": "569030",
    "end": "576860"
  },
  {
    "start": "572000",
    "end": "647000"
  },
  {
    "text": "storage systems can take a number of different forms and apart from the attributes we just discussed the way you",
    "start": "576860",
    "end": "583040"
  },
  {
    "text": "instantiate and deploy a storage system has a large portion it plays a large",
    "start": "583040",
    "end": "588310"
  },
  {
    "text": "portion of handles attributes are affected so you obviously have hardware",
    "start": "588310",
    "end": "594800"
  },
  {
    "text": "solutions which are installed in in data centers and and probably what what a lot",
    "start": "594800",
    "end": "600710"
  },
  {
    "text": "of people are familiar with today there are also software solutions which go a",
    "start": "600710",
    "end": "606230"
  },
  {
    "text": "long way to to making the storage system more portable because it means that the",
    "start": "606230",
    "end": "611840"
  },
  {
    "text": "software can be deployed in a variety of different platforms some storage systems",
    "start": "611840",
    "end": "618440"
  },
  {
    "text": "that are software-defined can also be deployed as a container and therefore can be better automated by by an",
    "start": "618440",
    "end": "625730"
  },
  {
    "text": "Orchestrator and of course finally all of the different storage systems and and",
    "start": "625730",
    "end": "632390"
  },
  {
    "text": "solutions that we're talking about today can typically be consumed from public",
    "start": "632390",
    "end": "637490"
  },
  {
    "text": "cloud providers too so the the storage services can be consumed without",
    "start": "637490",
    "end": "642530"
  },
  {
    "text": "actually deploying your own storage system if that's where you want to go",
    "start": "642530",
    "end": "649120"
  },
  {
    "start": "647000",
    "end": "744000"
  },
  {
    "text": "we looked at the different types of storage environments and we kind of",
    "start": "649230",
    "end": "655750"
  },
  {
    "text": "grouped the storage systems based on data access interfaces into two main",
    "start": "655750",
    "end": "663069"
  },
  {
    "text": "buckets the first buckets being volumes which is which is possibly what what",
    "start": "663069",
    "end": "668199"
  },
  {
    "text": "most people are more familiar with when talking about storage so things like file systems and shared file systems and",
    "start": "668199",
    "end": "674589"
  },
  {
    "text": "unblocked devices and volume interfaces are what's very often consumed and an",
    "start": "674589",
    "end": "682569"
  },
  {
    "text": "orchestrated by by an Orchestrator so it's probably fair to say that a lot of",
    "start": "682569",
    "end": "687910"
  },
  {
    "text": "the development in orchestrators has been around providing the capabilities",
    "start": "687910",
    "end": "694600"
  },
  {
    "text": "for automating volumes in another bucket we have what we've called API driven",
    "start": "694600",
    "end": "701470"
  },
  {
    "text": "storage so this covers all the other types of storage like object stores or",
    "start": "701470",
    "end": "706480"
  },
  {
    "text": "key value stores or even databases where you can obviously store States and you",
    "start": "706480",
    "end": "712089"
  },
  {
    "text": "can run and you can and you can use those systems to as the backends for for",
    "start": "712089",
    "end": "717339"
  },
  {
    "text": "your applications are obviously they tend to be accessed over over an API now",
    "start": "717339",
    "end": "723750"
  },
  {
    "text": "again they're had there is some work ongoing in in a number of different",
    "start": "723750",
    "end": "729670"
  },
  {
    "text": "projects that are providing some capabilities to orchestrate abstractions",
    "start": "729670",
    "end": "734829"
  },
  {
    "text": "around some of these api systems but it's probably fair to say that think you know volumes are are more mature solutions",
    "start": "734829",
    "end": "743230"
  },
  {
    "text": "today so when source systems are",
    "start": "743230",
    "end": "750220"
  },
  {
    "start": "744000",
    "end": "889000"
  },
  {
    "text": "compared very often the data access interface is defying a set of attributes",
    "start": "750220",
    "end": "756310"
  },
  {
    "text": "for that storage system that actually actually provides the capabilities for",
    "start": "756310",
    "end": "763110"
  },
  {
    "text": "the for this that actually define the capabilities of a storage system and",
    "start": "763110",
    "end": "768730"
  },
  {
    "text": "this is often because the way you access the data affects things like",
    "start": "768730",
    "end": "774089"
  },
  {
    "text": "availability or the ability to failover or perhaps performance or or latency",
    "start": "774089",
    "end": "779199"
  },
  {
    "text": "capabilities one of the things one of the things that",
    "start": "779199",
    "end": "785290"
  },
  {
    "text": "that we discuss further in the document however and and this kind of provides a",
    "start": "785290",
    "end": "790420"
  },
  {
    "text": "segue to to the next section of our presentation which witch-king will cover is that nowadays storage systems often",
    "start": "790420",
    "end": "798910"
  },
  {
    "text": "have a number of different layers and it's probably no longer fair to define",
    "start": "798910",
    "end": "804640"
  },
  {
    "text": "the attributes of a storage system just by the data access interfaces so for",
    "start": "804640",
    "end": "810880"
  },
  {
    "text": "example there are many file systems which are built on top of an underlying",
    "start": "810880",
    "end": "817630"
  },
  {
    "text": "object store so for example that would mean that it could have file sharing",
    "start": "817630",
    "end": "824490"
  },
  {
    "text": "capabilities across multiple workloads because it's being accessed as a file system but it might have throughput or",
    "start": "824490",
    "end": "832330"
  },
  {
    "text": "latency or or or scalability attributes",
    "start": "832330",
    "end": "837370"
  },
  {
    "text": "of the other line object store and with that I'll pass the baton to Titian who",
    "start": "837370",
    "end": "844330"
  },
  {
    "text": "can talk about the storage layers in a storage system thanks Alex so there are",
    "start": "844330",
    "end": "851410"
  },
  {
    "text": "several storage layers list here that can have impact on attributes of storage",
    "start": "851410",
    "end": "856780"
  },
  {
    "text": "systems next slide please there are layers or later the data",
    "start": "856780",
    "end": "864790"
  },
  {
    "text": "access interfaces as part of oxidation that could also affect availability",
    "start": "864790",
    "end": "870240"
  },
  {
    "text": "scalability and performance for example rather than directly access resources a",
    "start": "870240",
    "end": "876310"
  },
  {
    "text": "hypervisor can provide access to resources by performing functionalities such as mapping pooling resource",
    "start": "876310",
    "end": "883570"
  },
  {
    "text": "management and so on and that could add access overhead next slide please",
    "start": "883570",
    "end": "890760"
  },
  {
    "start": "889000",
    "end": "1116000"
  },
  {
    "text": "story topology describes the arrangement of storage and compute resources and a",
    "start": "891210",
    "end": "897280"
  },
  {
    "text": "data link between them this can affect availability scalability performance and",
    "start": "897280",
    "end": "902980"
  },
  {
    "text": "consistency in centralized a topology there are your way a few nodes that are",
    "start": "902980",
    "end": "908650"
  },
  {
    "text": "tightly coupled with each other this is yoli used in vendors",
    "start": "908650",
    "end": "913930"
  },
  {
    "text": "so big a hardware based storage solutions it supports scale-up it is",
    "start": "913930",
    "end": "919540"
  },
  {
    "text": "more consistent with the low latency compared to distributed storage systems",
    "start": "919540",
    "end": "924880"
  },
  {
    "text": "this is used in many block-based storage systems such systems using distributed a",
    "start": "924880",
    "end": "932500"
  },
  {
    "text": "topology array has focus software solutions it uses a software solution on",
    "start": "932500",
    "end": "939810"
  },
  {
    "text": "commodity hardware it's eally implemented using the chef nothing",
    "start": "939810",
    "end": "945040"
  },
  {
    "text": "architecture and this you synchronize across multiple nodes through network",
    "start": "945040",
    "end": "950560"
  },
  {
    "text": "connections it can scale horizontally with more nodes and more clients it is",
    "start": "950560",
    "end": "956770"
  },
  {
    "text": "also more complex to operate shardene is your way used in database",
    "start": "956770",
    "end": "963490"
  },
  {
    "text": "applications where data cells are partitioned it can scale horizontally",
    "start": "963490",
    "end": "968700"
  },
  {
    "text": "but it can also add operation complexity in hyper-converged apology",
    "start": "968700",
    "end": "977070"
  },
  {
    "text": "storage and computing resources are deployed together on same load multiple",
    "start": "977070",
    "end": "983080"
  },
  {
    "text": "nodes clustered together chief amongst was poor in astrology we only have a",
    "start": "983080",
    "end": "989100"
  },
  {
    "text": "software solution software storage solution on commodity computers so this",
    "start": "989100",
    "end": "995770"
  },
  {
    "text": "is similar to many distributed systems in this case storage nodes can grow",
    "start": "995770",
    "end": "1002550"
  },
  {
    "text": "together with computes but I was also downside was a tight coupling between",
    "start": "1002550",
    "end": "1008900"
  },
  {
    "text": "compute and storage so failure on computers also means failure on storage",
    "start": "1008900",
    "end": "1015150"
  },
  {
    "text": "systems next slide so this table shows",
    "start": "1015150",
    "end": "1021959"
  },
  {
    "text": "the comparison between local remote and distributed systems so for local systems",
    "start": "1021959",
    "end": "1029300"
  },
  {
    "text": "availability is limited by components locally and scalability is",
    "start": "1029300",
    "end": "1036688"
  },
  {
    "text": "limited by local architecture it can achieve a consistency easily and the",
    "start": "1036689",
    "end": "1043949"
  },
  {
    "text": "durability and performance are both limited by components some applications may benefit",
    "start": "1043949",
    "end": "1050610"
  },
  {
    "text": "from the low latency of local systems in",
    "start": "1050610",
    "end": "1055920"
  },
  {
    "text": "remote systems availability may be limited by single point of failure and",
    "start": "1055920",
    "end": "1062330"
  },
  {
    "text": "scalability and durability are limited by monolithic architecture and we can",
    "start": "1062330",
    "end": "1070860"
  },
  {
    "text": "also have consistency but it is harder to implement compared to local systems",
    "start": "1070860",
    "end": "1076700"
  },
  {
    "text": "performance is similar to local but it was also depends on network in",
    "start": "1076700",
    "end": "1083130"
  },
  {
    "text": "distributed assistance we can have a high availability because clients may",
    "start": "1083130",
    "end": "1089100"
  },
  {
    "text": "have access to numerous nodes and we can have a scalability by adding additional",
    "start": "1089100",
    "end": "1096030"
  },
  {
    "text": "systems and durability and performance can also be increased by adding",
    "start": "1096030",
    "end": "1102570"
  },
  {
    "text": "additional systems we can achieve consistency but the implication of",
    "start": "1102570",
    "end": "1108500"
  },
  {
    "text": "consistency is the hardest among the three different assistance next slide",
    "start": "1108500",
    "end": "1115710"
  },
  {
    "text": "please soil systems you may have data",
    "start": "1115710",
    "end": "1121800"
  },
  {
    "start": "1116000",
    "end": "1246000"
  },
  {
    "text": "protection layer which is redundancy this refers to raid eurasia coding and",
    "start": "1121800",
    "end": "1128220"
  },
  {
    "text": "replicas raid uses the different combinations of striping Mirian and",
    "start": "1128220",
    "end": "1134210"
  },
  {
    "text": "parity techniques striking means the data distributed evenly across two or",
    "start": "1134210",
    "end": "1141480"
  },
  {
    "text": "more disks for improved performance in Orion Emira maintains identical copies",
    "start": "1141480",
    "end": "1149880"
  },
  {
    "text": "of datasets across two disks so that requires more space in parity a dataset",
    "start": "1149880",
    "end": "1156930"
  },
  {
    "text": "is distributed across a number of disks that are grouped together for each unit",
    "start": "1156930",
    "end": "1162780"
  },
  {
    "text": "that slows data typically a block and algorithm is used to generate another",
    "start": "1162780",
    "end": "1168330"
  },
  {
    "text": "set of parity so that will add more down NC and also that saves the disk space",
    "start": "1168330",
    "end": "1174840"
  },
  {
    "text": "compared to Miron the raid is newly used in the same No",
    "start": "1174840",
    "end": "1181210"
  },
  {
    "text": "but it is also used in distributed systems across notes for eurasia coding",
    "start": "1181210",
    "end": "1189520"
  },
  {
    "text": "a dataset is split into multiple fragments and each fragment is encoded",
    "start": "1189520",
    "end": "1197200"
  },
  {
    "text": "and then stored with a configurable number of redundant percocets",
    "start": "1197200",
    "end": "1202360"
  },
  {
    "text": "so that is used to optimize capacity durability and redundancy but that will",
    "start": "1202360",
    "end": "1209920"
  },
  {
    "text": "also add computational overhead and it will add latency this technically is",
    "start": "1209920",
    "end": "1217180"
  },
  {
    "text": "used in distributed systems and also it is the main building block of many",
    "start": "1217180",
    "end": "1223900"
  },
  {
    "text": "object stores replicas referred to you",
    "start": "1223900",
    "end": "1229000"
  },
  {
    "text": "marauder datasets distributed across multiple nodes a replica is a full copy",
    "start": "1229000",
    "end": "1234690"
  },
  {
    "text": "so it is very fast to recover from failure it has a lower computational",
    "start": "1234690",
    "end": "1240610"
  },
  {
    "text": "overhead and lower latency next slide",
    "start": "1240610",
    "end": "1247500"
  },
  {
    "start": "1246000",
    "end": "1358000"
  },
  {
    "text": "sorry systems really provide the data services in addition to storage",
    "start": "1249260",
    "end": "1254670"
  },
  {
    "text": "functions so that refers to your application snapshots and clones and encryption replication you most primary",
    "start": "1254670",
    "end": "1263429"
  },
  {
    "text": "and secondary storage it can have two or more sites it can support sink or a sync",
    "start": "1263429",
    "end": "1271740"
  },
  {
    "text": "mode in sync mode we can have stronger consistency but it is limited by a",
    "start": "1271740",
    "end": "1276990"
  },
  {
    "text": "distance for the async mode it can support longer distance but we need to",
    "start": "1276990",
    "end": "1283140"
  },
  {
    "text": "have a bandwidth that is guaranteed so that data can be transferred in the acceptable amount of time replication",
    "start": "1283140",
    "end": "1291059"
  },
  {
    "text": "eally has requirements for RTO and RPO RTO refers to how soon you can access to",
    "start": "1291059",
    "end": "1298679"
  },
  {
    "text": "an alternative replica when failure occurs and RPO first year the duration",
    "start": "1298679",
    "end": "1305490"
  },
  {
    "text": "of the amount of source data that can be lost on failure snapshot is a point in",
    "start": "1305490",
    "end": "1313230"
  },
  {
    "text": "time copy of the data set a snapshot can use to t restore the original data set",
    "start": "1313230",
    "end": "1318480"
  },
  {
    "text": "when needed snapshot may or may not be dependent on the source after it is",
    "start": "1318480",
    "end": "1323669"
  },
  {
    "text": "taken this depends on the underlying storage systems it uni uses",
    "start": "1323669",
    "end": "1329160"
  },
  {
    "text": "copy-on-write technology which is a space efficient clone is a full copy of the data set not",
    "start": "1329160",
    "end": "1336480"
  },
  {
    "text": "dependent on source snapshot is URI read-only and clone is newly rewrite",
    "start": "1336480",
    "end": "1344390"
  },
  {
    "text": "encryption can also be applied to ensure data security it can be implemented on",
    "start": "1344390",
    "end": "1351660"
  },
  {
    "text": "data in transit or data the rest next slide",
    "start": "1351660",
    "end": "1358820"
  },
  {
    "start": "1358000",
    "end": "1407000"
  },
  {
    "text": "30 systems ultimately means to persist data somewhere our physical layer which",
    "start": "1360350",
    "end": "1367049"
  },
  {
    "text": "is yulie non-volatile this has an impact on overall performance and the long-term",
    "start": "1367049",
    "end": "1373289"
  },
  {
    "text": "durability there are traditional spinning discs that are knowing cost",
    "start": "1373289",
    "end": "1379110"
  },
  {
    "text": "with regard to capacity there is SSD with the traditional interfaces so that",
    "start": "1379110",
    "end": "1387389"
  },
  {
    "text": "can provide a lower latency but throughput is limited by the transport",
    "start": "1387389",
    "end": "1393019"
  },
  {
    "text": "MV and E is a new transport that is very fast and designed for flash and that can",
    "start": "1393019",
    "end": "1400559"
  },
  {
    "text": "be used to to achieve a lower latency and much higher throughput next slide",
    "start": "1400559",
    "end": "1409070"
  },
  {
    "start": "1407000",
    "end": "1576000"
  },
  {
    "text": "now let's take a look of the oxidation and management interfaces this diagram",
    "start": "1409730",
    "end": "1416039"
  },
  {
    "text": "shows workloads consume storage through data access interfaces there are two",
    "start": "1416039",
    "end": "1422850"
  },
  {
    "text": "ways for storage systems to interact with the container abstraction systems the darker green box here control plane",
    "start": "1422850",
    "end": "1430470"
  },
  {
    "text": "interfaces refer to storage interface directly supported by contain oxygen",
    "start": "1430470",
    "end": "1436260"
  },
  {
    "text": "systems that includes CSI a DVD iFlex volume and Native communities drivers",
    "start": "1436260",
    "end": "1444529"
  },
  {
    "text": "this interface is focusing on storage provisioning such as dynamic or static",
    "start": "1444529",
    "end": "1450269"
  },
  {
    "text": "provisioning this orange box here called a frameworks and tools is actually an",
    "start": "1450269",
    "end": "1457289"
  },
  {
    "text": "extension of control plane interfaces in addition to provisioning this interface",
    "start": "1457289",
    "end": "1463409"
  },
  {
    "text": "could also provide functionalities such as discovery automation data services",
    "start": "1463409",
    "end": "1469289"
  },
  {
    "text": "such as a data protection disaster recovery data migration and data lexical management also monitoring analytics",
    "start": "1469289",
    "end": "1476909"
  },
  {
    "text": "tokens to name and so on we will be focusing on the control playing a face",
    "start": "1476909",
    "end": "1482909"
  },
  {
    "text": "here in this darker green box there are kubernetes entry warning drivers that's",
    "start": "1482909",
    "end": "1490260"
  },
  {
    "text": "for blog and file systems darker boring driver interface that",
    "start": "1490260",
    "end": "1495759"
  },
  {
    "text": "supports foreign conditioning flex Lauren is an out of tree plug-in for",
    "start": "1495759",
    "end": "1501370"
  },
  {
    "text": "kubernetes because kubernetes six storage is moving towards a CSI",
    "start": "1501370",
    "end": "1506919"
  },
  {
    "text": "container storage interface so new features will only be added to CSI not",
    "start": "1506919",
    "end": "1512860"
  },
  {
    "text": "to flex volume not to you the entry drivers The Container Store interface",
    "start": "1512860",
    "end": "1520149"
  },
  {
    "text": "CSI is an industry standard to define a set of storage interfaces so that a",
    "start": "1520149",
    "end": "1526299"
  },
  {
    "text": "vendor can write one plug-in and happy to work across a range of container extraction systems cxeh has three GPC",
    "start": "1526299",
    "end": "1534999"
  },
  {
    "text": "services controller node and identity services identity service provides",
    "start": "1534999",
    "end": "1541389"
  },
  {
    "text": "information and capabilities of a plug-in controller service supports",
    "start": "1541389",
    "end": "1546850"
  },
  {
    "text": "create and delete volume create and delete snapshot and attach and detach",
    "start": "1546850",
    "end": "1552730"
  },
  {
    "text": "volume note Surratt's supports month and almond volume extend volume support is",
    "start": "1552730",
    "end": "1559480"
  },
  {
    "text": "also added to you both controller and node services so that's an overview of",
    "start": "1559480",
    "end": "1567159"
  },
  {
    "text": "oxidation and management interfaces now I will hand it over to Louise who talked",
    "start": "1567159",
    "end": "1573730"
  },
  {
    "text": "talk about storage for stateful applications thank you very much Singh",
    "start": "1573730",
    "end": "1580269"
  },
  {
    "start": "1576000",
    "end": "1579000"
  },
  {
    "text": "and thank you very much to Alex also for the great introduction so as we've learned we've learned how storage is",
    "start": "1580269",
    "end": "1588399"
  },
  {
    "text": "defined and we have learned about volumes and block and file specifically",
    "start": "1588399",
    "end": "1595289"
  },
  {
    "text": "also we have learned how these set of storage systems interact and are defined",
    "start": "1595289",
    "end": "1602169"
  },
  {
    "text": "with the with the container orchestration system so I will be diving into exactly how it works in kubernetes",
    "start": "1602169",
    "end": "1608159"
  },
  {
    "text": "so normally what we have here is before I jump into containers I want to talk a",
    "start": "1608159",
    "end": "1613809"
  },
  {
    "text": "little bit about virtual machines and in virtual machines what we have if you're coming from there then we have a system",
    "start": "1613809",
    "end": "1619330"
  },
  {
    "text": "where we have a hypervisor being run on some host and the hypervisor is the one",
    "start": "1619330",
    "end": "1625570"
  },
  {
    "text": "that's managing the story system so I just want to keep that in mind that the the host itself",
    "start": "1625570",
    "end": "1630970"
  },
  {
    "text": "may not be able to may not have the interaction with the storage but normally is the hypervisor who's",
    "start": "1630970",
    "end": "1636909"
  },
  {
    "text": "providing these services to applications unlike that in hypervisors containers",
    "start": "1636909",
    "end": "1642250"
  },
  {
    "text": "work a little bit differently and I'll be diving into that so the way it works in kubernetes is that first an",
    "start": "1642250",
    "end": "1648070"
  },
  {
    "text": "administrator is managing the storage system they don't and they understand why storage systems they have they have",
    "start": "1648070",
    "end": "1653830"
  },
  {
    "text": "a they have connected to it they have made it available and now they want to make it usable for their users what they",
    "start": "1653830",
    "end": "1661299"
  },
  {
    "text": "do first is that they find a set of stores classes these stores classes have",
    "start": "1661299",
    "end": "1667330"
  },
  {
    "text": "a set of definitions for specifically for their storage system and then they D they named these stores classes whatever",
    "start": "1667330",
    "end": "1674289"
  },
  {
    "text": "they want to for example in this example we have a fast storage class which may",
    "start": "1674289",
    "end": "1680980"
  },
  {
    "text": "have parameters that be sent to the storage system to create fast storage may be using nbme and then we have a",
    "start": "1680980",
    "end": "1688750"
  },
  {
    "text": "slow named storage class which may have parameters that are be sent to a storage",
    "start": "1688750",
    "end": "1693820"
  },
  {
    "text": "system to create maybe storage instead of the nvme but from slower storage devices like spinning media so the next",
    "start": "1693820",
    "end": "1701259"
  },
  {
    "text": "slide shows a user being able to then request storage requesting storage in",
    "start": "1701259",
    "end": "1708820"
  },
  {
    "start": "1702000",
    "end": "1725000"
  },
  {
    "text": "kubernetes is called a persist a persistent volume claim okay",
    "start": "1708820",
    "end": "1714100"
  },
  {
    "text": "the so the developer says I want a persistent volume claim which is going",
    "start": "1714100",
    "end": "1721360"
  },
  {
    "text": "to consume storage from the fast storage class once this is then submitted into",
    "start": "1721360",
    "end": "1728350"
  },
  {
    "start": "1725000",
    "end": "1800000"
  },
  {
    "text": "kubernetes and kubernetes then goes through a set of services first trying",
    "start": "1728350",
    "end": "1734110"
  },
  {
    "text": "to define where what storage class do you mean oh this stores class go fast this stores called uses fast uses this",
    "start": "1734110",
    "end": "1741909"
  },
  {
    "text": "specific storage system and it sends a command to that storage system either",
    "start": "1741909",
    "end": "1747100"
  },
  {
    "text": "through the entry the older model or through CSI which is a new model to then go ahead and create that volume to",
    "start": "1747100",
    "end": "1753309"
  },
  {
    "text": "satisfy the requirements from the persistent volume claim when that happens",
    "start": "1753309",
    "end": "1758730"
  },
  {
    "text": "the storage system then goes ahead creates a volume for that if that volume then is the volume ID or the volume",
    "start": "1758730",
    "end": "1766440"
  },
  {
    "text": "informations then return to kubernetes and says here kubernetes here is the volume you asked me to create and here's",
    "start": "1766440",
    "end": "1772980"
  },
  {
    "text": "the ID for it that ID is then taken and saved in what's called a persistent",
    "start": "1772980",
    "end": "1779220"
  },
  {
    "text": "volume in a different object which is cluster wide that persistent volume",
    "start": "1779220",
    "end": "1784410"
  },
  {
    "text": "objects are in other words as some metadata that describes information about where the volume ID and which",
    "start": "1784410",
    "end": "1791550"
  },
  {
    "text": "volume actually services that volume ID while the persistent boolean claim is",
    "start": "1791550",
    "end": "1796590"
  },
  {
    "text": "the request from the user next slide so once we have both the",
    "start": "1796590",
    "end": "1802950"
  },
  {
    "start": "1800000",
    "end": "1980000"
  },
  {
    "text": "persistent volume claim which is again from the user request but which points",
    "start": "1802950",
    "end": "1808680"
  },
  {
    "text": "to a storage class and the persistent volume object which describes the volume",
    "start": "1808680",
    "end": "1814860"
  },
  {
    "text": "the ID and the driver that it uses to to manage this volume a binding occurs the",
    "start": "1814860",
    "end": "1822360"
  },
  {
    "text": "binding occurs and in kubernetes when you look at for example you say cube",
    "start": "1822360",
    "end": "1827370"
  },
  {
    "text": "code will get PVCs what you're looking at it's your PVC is being bound to a",
    "start": "1827370",
    "end": "1832740"
  },
  {
    "text": "persistent volume again that's a one-to-one correlation you cannot have",
    "start": "1832740",
    "end": "1838320"
  },
  {
    "text": "purchased one persistent bond into many PVC TVs you can only have one PVC",
    "start": "1838320",
    "end": "1843720"
  },
  {
    "text": "meaning a persistent volume cling to one persistent volume so why is it that you",
    "start": "1843720",
    "end": "1849480"
  },
  {
    "text": "have this type of binding and let's go to the next line and that is because the",
    "start": "1849480",
    "end": "1857130"
  },
  {
    "text": "life cycle of the your volume that's requested so now with that information",
    "start": "1857130",
    "end": "1862380"
  },
  {
    "text": "when a application refers to a persistent boolean claim that claim",
    "start": "1862380",
    "end": "1869280"
  },
  {
    "text": "points automatically twist the actual volume that that services it with with",
    "start": "1869280",
    "end": "1874500"
  },
  {
    "text": "this information kubernetes has now a life cycle for this volume when an",
    "start": "1874500",
    "end": "1880020"
  },
  {
    "text": "application is placed on a node it first has to look at the application persistent boolean claim which then",
    "start": "1880020",
    "end": "1886860"
  },
  {
    "text": "points the persistent volume and then it says oh this is for this specific storage system here",
    "start": "1886860",
    "end": "1892260"
  },
  {
    "text": "the idea of this volume I want you to do the following for example if I'm if the",
    "start": "1892260",
    "end": "1897360"
  },
  {
    "text": "kubernetes is deploying an application on the principle on a specific node it will first want to attach that volume to",
    "start": "1897360",
    "end": "1905190"
  },
  {
    "text": "the node so that the application can get access to it once it's attached meaning",
    "start": "1905190",
    "end": "1912360"
  },
  {
    "text": "that the volume it has a if you know Linux it now has a device note on that",
    "start": "1912360",
    "end": "1919380"
  },
  {
    "text": "on the host it is then asked to mount it to a specific location will go into",
    "start": "1919380",
    "end": "1925530"
  },
  {
    "text": "mounting and attaching in a second but the the life cycle is that kubernetes",
    "start": "1925530",
    "end": "1930540"
  },
  {
    "text": "when it deploys an application it first wants to attach it and then mount it and",
    "start": "1930540",
    "end": "1936000"
  },
  {
    "text": "then at that point is then consumable by the application once the application gets either evicted or gets moved for",
    "start": "1936000",
    "end": "1943590"
  },
  {
    "text": "some other reason to another node it will get then unmounted and then detached from that host and then it will",
    "start": "1943590",
    "end": "1949740"
  },
  {
    "text": "get reattached to another node where then the application is moving to or in",
    "start": "1949740",
    "end": "1956040"
  },
  {
    "text": "a situation where the the applications been deleted and the PVC is being",
    "start": "1956040",
    "end": "1962010"
  },
  {
    "text": "deleted the application is removed the volumes detached are monta first and",
    "start": "1962010",
    "end": "1967800"
  },
  {
    "text": "then detached and then a command is sent to the storage system with the ID in the",
    "start": "1967800",
    "end": "1973980"
  },
  {
    "text": "pv saying delete this volume okay all right let's go to the next line so now",
    "start": "1973980",
    "end": "1981750"
  },
  {
    "start": "1980000",
    "end": "2035000"
  },
  {
    "text": "let's go through a little slide demo of exactly how is it that storage gets",
    "start": "1981750",
    "end": "1988080"
  },
  {
    "text": "mounted into the system the very first thing that happens when applications chosen to go into a node sorry that",
    "start": "1988080",
    "end": "1994770"
  },
  {
    "text": "because just first we have to somehow go into the scheduler has to define where in which one of the nodes that many",
    "start": "1994770",
    "end": "2001850"
  },
  {
    "text": "nodes that kubernetes has is the application going to there's multiple ways of doing that we have if the",
    "start": "2001850",
    "end": "2008930"
  },
  {
    "text": "kubernetes method is one way there's other methods to extend the scheduler of",
    "start": "2008930",
    "end": "2014180"
  },
  {
    "text": "kubernetes to be able to have a more smarter way to determine which know to put the application on them but in one",
    "start": "2014180",
    "end": "2021380"
  },
  {
    "text": "way in another the unknown needs to be chosen somewhere on the cluster to place the container to run the application",
    "start": "2021380",
    "end": "2027769"
  },
  {
    "text": "once it has been chosen before the application gets placed on there the next light please",
    "start": "2027769",
    "end": "2033409"
  },
  {
    "text": "the yeah next like the controller tells",
    "start": "2033409",
    "end": "2038419"
  },
  {
    "start": "2035000",
    "end": "2102000"
  },
  {
    "text": "the storage system to attach the volume to that specific node once that happens",
    "start": "2038419",
    "end": "2044809"
  },
  {
    "text": "a device note gets created on that note and here's wasted a little bit different than 10 virtual machines in virtual",
    "start": "2044809",
    "end": "2051618"
  },
  {
    "text": "machines you have the ability in liquid in the hypervisor itself think of it I",
    "start": "2051619",
    "end": "2058339"
  },
  {
    "text": "in ql k vm style that it has the drivers to be able to talk to your storage",
    "start": "2058339",
    "end": "2064669"
  },
  {
    "text": "system but in container world it is very important to note and remember that it",
    "start": "2064669",
    "end": "2071059"
  },
  {
    "text": "is the host system that needs all the drivers and the ability to attach to",
    "start": "2071059",
    "end": "2076460"
  },
  {
    "text": "your storage system so if you're asking for I scuzzy or fiber channel or some",
    "start": "2076460",
    "end": "2081769"
  },
  {
    "text": "other custom model all that information needs to be part of the host either you",
    "start": "2081769",
    "end": "2087499"
  },
  {
    "text": "know a privileged container or part of the host itself either way a device no",
    "start": "2087499",
    "end": "2093019"
  },
  {
    "text": "needs to be created on the host itself so that the kernel of the host knows knows about this device second step is",
    "start": "2093019",
    "end": "2100430"
  },
  {
    "text": "next slide is that now that the host has that attachment the cubelet running on",
    "start": "2100430",
    "end": "2107960"
  },
  {
    "start": "2102000",
    "end": "2137000"
  },
  {
    "text": "that node needs to send a message to the storage system saying ok now that the",
    "start": "2107960",
    "end": "2114079"
  },
  {
    "text": "the the host has the attached device we",
    "start": "2114079",
    "end": "2119779"
  },
  {
    "text": "need to mount that to a specific location and it gives the location to the storage system driver and says I",
    "start": "2119779",
    "end": "2125660"
  },
  {
    "text": "want you to mount it here so the storage system driver then mounts that location on their VAR Lib cubelet and some other",
    "start": "2125660",
    "end": "2132049"
  },
  {
    "text": "hashes and things like that for that node so next slide once it is",
    "start": "2132049",
    "end": "2138910"
  },
  {
    "start": "2137000",
    "end": "2215000"
  },
  {
    "text": "Mountain and in that location it is on the it is mounted on the host so if you",
    "start": "2138910",
    "end": "2144789"
  },
  {
    "text": "think about it before we even get to the container before we get to the application the host itself has the",
    "start": "2144789",
    "end": "2151240"
  },
  {
    "text": "information it has the volume attached and it has the volume mounted but to run",
    "start": "2151240",
    "end": "2158619"
  },
  {
    "text": "that inside a container we need a third step container runtime systems have a",
    "start": "2158619",
    "end": "2164079"
  },
  {
    "text": "metal a model of taking a whole directory and mapping it inside a",
    "start": "2164079",
    "end": "2169210"
  },
  {
    "text": "container and that's called binding you do that through a mountain binder so in",
    "start": "2169210",
    "end": "2174970"
  },
  {
    "text": "this model what we have here in this example on our slides is that we have that the cubelet has the mount point",
    "start": "2174970",
    "end": "2181710"
  },
  {
    "text": "servicing the storage system because it was attached to this node but there now",
    "start": "2181710",
    "end": "2186849"
  },
  {
    "text": "the container runtime system docker rocket something else can then take that mount point and map it inside to the",
    "start": "2186849",
    "end": "2194950"
  },
  {
    "text": "container meaning like if you want slash data on your you specify that on your",
    "start": "2194950",
    "end": "2200049"
  },
  {
    "text": "llamo inside the container so they Rock that's doll done by the container",
    "start": "2200049",
    "end": "2206890"
  },
  {
    "text": "runtime system which in itself it's communicating with the Linux kernel to be able to to be able to do all this",
    "start": "2206890",
    "end": "2213420"
  },
  {
    "text": "okay next slide so in summary where I just described can",
    "start": "2213420",
    "end": "2221710"
  },
  {
    "start": "2215000",
    "end": "2326000"
  },
  {
    "text": "be done for block devices meaning right now if you put in the PVC that's called",
    "start": "2221710",
    "end": "2228400"
  },
  {
    "text": "readwrite once and that's an exclusive access to that volume but sometimes you",
    "start": "2228400",
    "end": "2234160"
  },
  {
    "text": "may want multiple access meaning many nodes or many applications are being",
    "start": "2234160",
    "end": "2239200"
  },
  {
    "text": "able to access that storage so for those models we use the readwrite mini which",
    "start": "2239200",
    "end": "2244720"
  },
  {
    "text": "creates a filesystem and with that model you go through the same process but now you can mount it and attach it and mount",
    "start": "2244720",
    "end": "2251740"
  },
  {
    "text": "it on many nodes and also you also have the models where these applications can",
    "start": "2251740",
    "end": "2257770"
  },
  {
    "text": "come up instead of accessing through the cubelet through the host you accesses through",
    "start": "2257770",
    "end": "2264210"
  },
  {
    "text": "API since this is what we said before Alec said before and so the Ching that you can actually object stores or",
    "start": "2264210",
    "end": "2270330"
  },
  {
    "text": "databases through their own API schools Network next like so now that we have",
    "start": "2270330",
    "end": "2278520"
  },
  {
    "text": "all this explanation now that we described pal storage works how it is",
    "start": "2278520",
    "end": "2284400"
  },
  {
    "text": "defined how it is divided into different sections how it is consumed by container",
    "start": "2284400",
    "end": "2291120"
  },
  {
    "text": "christian systems we have we're asking for the community to give feedback on",
    "start": "2291120",
    "end": "2296310"
  },
  {
    "text": "how is it that they use it we this information would be very necessary for",
    "start": "2296310",
    "end": "2302430"
  },
  {
    "text": "the what we call the CNC f6 sourcing we're to provide better presentations",
    "start": "2302430",
    "end": "2308940"
  },
  {
    "text": "more focused presentations prioritize our work so that we can provide even more documents on how is it that stories",
    "start": "2308940",
    "end": "2317490"
  },
  {
    "text": "is consumed on stores is is used in the container orchestration system next",
    "start": "2317490",
    "end": "2324000"
  },
  {
    "text": "slide and sure alright awesome thank you",
    "start": "2324000",
    "end": "2330240"
  },
  {
    "start": "2326000",
    "end": "2376000"
  },
  {
    "text": "for a great presentation we do have some time for questions so if you have questions you'd like to ask please drop",
    "start": "2330240",
    "end": "2336540"
  },
  {
    "text": "them in the Q&A tab at the bottom of your screen and we'll get to as many as we have time for and while I give you a",
    "start": "2336540",
    "end": "2343290"
  },
  {
    "text": "minute to do that I will plug in here that cube cone and cloud native con North America it's the NCS flagship",
    "start": "2343290",
    "end": "2350160"
  },
  {
    "text": "event and it'll be here before you know it this year is being held in San Diego which should still be sunny and lovely",
    "start": "2350160",
    "end": "2356730"
  },
  {
    "text": "in November this is the time for the community to come together to further education and to advance cloud native",
    "start": "2356730",
    "end": "2362880"
  },
  {
    "text": "computing please go to cube con got io for more info and lock in your tickets",
    "start": "2362880",
    "end": "2368280"
  },
  {
    "text": "before it sells out so with that I'll pass the bike over back over to you for",
    "start": "2368280",
    "end": "2373290"
  },
  {
    "text": "the question",
    "start": "2373290",
    "end": "2375950"
  },
  {
    "text": "one of the questions about the slides and the slides will be available with",
    "start": "2383800",
    "end": "2389260"
  },
  {
    "text": "the presentation where would the slides be available exactly",
    "start": "2389260",
    "end": "2394200"
  },
  {
    "text": "they hi this is Ken they will get posted to the CN CF website this afternoon and",
    "start": "2394380",
    "end": "2399820"
  },
  {
    "text": "both the video and the slides and then the video is also on our YouTube channel the CN CF YouTube channel in the webinar",
    "start": "2399820",
    "end": "2406480"
  },
  {
    "text": "playlist excellent well we have",
    "start": "2406480",
    "end": "2413280"
  },
  {
    "text": "other question on pod is putting cluster a using pv from NFS or AWS ZFS for some",
    "start": "2413280",
    "end": "2421560"
  },
  {
    "text": "reason we are moving the party block to luster B I'm guessing clusters are",
    "start": "2421560",
    "end": "2427700"
  },
  {
    "text": "kubernetes clusters and the NFS remains the same do pod gets on PV and attached",
    "start": "2427700",
    "end": "2434850"
  },
  {
    "text": "automatically ok so in this situation",
    "start": "2434850",
    "end": "2439950"
  },
  {
    "text": "where you're going from one cluster to another cluster you may need to manually",
    "start": "2439950",
    "end": "2445590"
  },
  {
    "text": "create a PV to disk to describe that NFS mount point location so then that way",
    "start": "2445590",
    "end": "2453300"
  },
  {
    "text": "your NFS PBC can then mount it you can also I know if I remember if it's still",
    "start": "2453300",
    "end": "2460920"
  },
  {
    "text": "available but you can do what's called inline access to storage systems and kubernetes where your pot itself has a section in",
    "start": "2460920",
    "end": "2469020"
  },
  {
    "text": "it where you can describe the storage the storage system you want to use exactly so your pot can have the NFS and",
    "start": "2469020",
    "end": "2476490"
  },
  {
    "text": "the NFS mount point that is trying to use directly in it and that'll probably be the simplest model if you're gonna go",
    "start": "2476490",
    "end": "2481860"
  },
  {
    "text": "from cluster and cluster B because that way your information travels with the",
    "start": "2481860",
    "end": "2487380"
  },
  {
    "text": "with the pots back instead of being in a PVC storage class style yeah it's it's",
    "start": "2487380",
    "end": "2495990"
  },
  {
    "text": "probably worth pointing out that things like things like that sort of activity",
    "start": "2495990",
    "end": "2502950"
  },
  {
    "text": "where where TVs or storage resources need to be shared across different",
    "start": "2502950",
    "end": "2510000"
  },
  {
    "text": "clusters is is probably something that will be is being worked on as part of",
    "start": "2510000",
    "end": "2516440"
  },
  {
    "text": "communities Federation projects but but it it's very embryonic at this stage so",
    "start": "2516440",
    "end": "2524430"
  },
  {
    "text": "you know some of the some of the options like Louise just described are probably your best that's right now we also have",
    "start": "2524430",
    "end": "2532440"
  },
  {
    "text": "another question it was mentioned that encryption is possible is that for the application to do and what about",
    "start": "2532440",
    "end": "2539400"
  },
  {
    "text": "authentication of storage how to avoid unauthorized people read at the data that's excellent questions there's",
    "start": "2539400",
    "end": "2545400"
  },
  {
    "text": "actually two questions in it excellent I'll try to answer it and others can join in after first is",
    "start": "2545400",
    "end": "2552650"
  },
  {
    "text": "encryption encryption is can be done at the storage system the application",
    "start": "2552650",
    "end": "2558080"
  },
  {
    "text": "doesn't have to do that many storage systems have encrypted stores in",
    "start": "2558080",
    "end": "2563750"
  },
  {
    "text": "scripted volumes and some of them even have the ability to have your own keys",
    "start": "2563750",
    "end": "2569360"
  },
  {
    "text": "so you provide your own key model and they can then encrypt it with those models so then you are completely",
    "start": "2569360",
    "end": "2576650"
  },
  {
    "text": "protected by providing you you know your application is the only one that can access that data the second part is on",
    "start": "2576650",
    "end": "2585100"
  },
  {
    "text": "who can access and authentication authorization that is done by some",
    "start": "2585100",
    "end": "2591290"
  },
  {
    "text": "storage systems and again that is done by models where you can for example in",
    "start": "2591290",
    "end": "2598670"
  },
  {
    "text": "kubernetes you would place your token or your authentication model into a secret",
    "start": "2598670",
    "end": "2604070"
  },
  {
    "text": "and then the driver for CSI and so it",
    "start": "2604070",
    "end": "2609260"
  },
  {
    "text": "would take that secret information and pass it over to the storage system to authenticate the caller who's trying to",
    "start": "2609260",
    "end": "2615610"
  },
  {
    "text": "use the day the volume or deleted or create and so on so kubernetes does on",
    "start": "2615610",
    "end": "2623420"
  },
  {
    "text": "itself stop you from doing that it is definitely a storage systems use the",
    "start": "2623420",
    "end": "2630350"
  },
  {
    "text": "primitives or kubernetes like secrets to be able to achieve that just just adding",
    "start": "2630350",
    "end": "2637910"
  },
  {
    "text": "on a little bit to that so so obviously features like encryption can be employed at different layers in",
    "start": "2637910",
    "end": "2646190"
  },
  {
    "text": "the in the stack it can obviously be done at the application level but as Louie said most like most storage",
    "start": "2646190",
    "end": "2651440"
  },
  {
    "text": "systems will will support a level of encryption and this could be done sort",
    "start": "2651440",
    "end": "2657410"
  },
  {
    "text": "of for data that's in transit as well as they do that's at rest one of the key things with all encryption on storage",
    "start": "2657410",
    "end": "2664430"
  },
  {
    "text": "systems is to you know you need to have a good understanding of how the keys are",
    "start": "2664430",
    "end": "2669740"
  },
  {
    "text": "managed because because ultimately a lot of a lot of the security is going to",
    "start": "2669740",
    "end": "2675440"
  },
  {
    "text": "come down to you know where the keys reside and and who has access to the keys so so that is something to look out for",
    "start": "2675440",
    "end": "2682039"
  },
  {
    "text": "especially if you're if you're using you know different service providers that are managing the keys for you",
    "start": "2682039",
    "end": "2688729"
  },
  {
    "text": "in terms of the in terms of the access models this is where some of the some of",
    "start": "2688729",
    "end": "2694159"
  },
  {
    "text": "the difference the difference is between you know a different client negative storage systems come into play",
    "start": "2694159",
    "end": "2700009"
  },
  {
    "text": "especially when they integrate into into orchestration environments so you know",
    "start": "2700009",
    "end": "2707059"
  },
  {
    "text": "if if a storage system is has been designed to to present you know storage",
    "start": "2707059",
    "end": "2712999"
  },
  {
    "text": "to individual hosts or or or or VMs for example then a lot of the access model",
    "start": "2712999",
    "end": "2719929"
  },
  {
    "text": "will be will be down to you know which hosts can access that data but in in",
    "start": "2719929",
    "end": "2725119"
  },
  {
    "text": "some of the newer systems you have functionality where access models can be",
    "start": "2725119",
    "end": "2730519"
  },
  {
    "text": "can be integrated into the the orchestrator model so you know concepts",
    "start": "2730519",
    "end": "2736729"
  },
  {
    "text": "like the communities namespaces for example and and the users and groups",
    "start": "2736729",
    "end": "2743799"
  },
  {
    "text": "model and and policy model in kubernetes can cannot can be translated into the",
    "start": "2743799",
    "end": "2750799"
  },
  {
    "text": "security model for the storage system tomb so that's one of the things that that's worth looking out for okay",
    "start": "2750799",
    "end": "2762049"
  },
  {
    "text": "excellent the question is there an argument that a",
    "start": "2762049",
    "end": "2769190"
  },
  {
    "text": "stateful application is a bad use case for containers let me take that one yeah",
    "start": "2769190",
    "end": "2780280"
  },
  {
    "text": "so so there are as with anything there are pros and cons I think it's a you",
    "start": "2780280",
    "end": "2787400"
  },
  {
    "text": "know it's fair to say that the starting assumption point is that every application needs to store state",
    "start": "2787400",
    "end": "2793100"
  },
  {
    "text": "somewhere and then what we need to what we need to work out for yourself is",
    "start": "2793100",
    "end": "2799520"
  },
  {
    "text": "whether you want to store the states in the cluster or you want to store the state outside the cluster and by outside",
    "start": "2799520",
    "end": "2807950"
  },
  {
    "text": "the cluster I mean you know using external services or external components which aren't managed by the cluster and",
    "start": "2807950",
    "end": "2815540"
  },
  {
    "text": "and if you look at this you know in a sort of in US in a step through process",
    "start": "2815540",
    "end": "2820630"
  },
  {
    "text": "if you look at containers as the way of making your application portable and",
    "start": "2820630",
    "end": "2826520"
  },
  {
    "text": "giving you the ability to to run your your application in more than one environment because you kind of package",
    "start": "2826520",
    "end": "2832010"
  },
  {
    "text": "all of the dependencies that your application needs into that container into that container format and then you",
    "start": "2832010",
    "end": "2839390"
  },
  {
    "text": "look at kubernetes as as your way of boats abstracting away your",
    "start": "2839390",
    "end": "2845000"
  },
  {
    "text": "infrastructure by giving you a declarative way of describing how your application should run and letting the",
    "start": "2845000",
    "end": "2851000"
  },
  {
    "text": "orchestrator figure out where your application should be positioned well then you know you're effectively solving",
    "start": "2851000",
    "end": "2857960"
  },
  {
    "text": "a whole bunch of scalability and composability and an automation for your application by putting that into",
    "start": "2857960",
    "end": "2863810"
  },
  {
    "text": "kubernetes and the question you need to ask yourself is do you want your stateful requirements to have that same",
    "start": "2863810",
    "end": "2870290"
  },
  {
    "text": "automation and that same scalability and that same composability so in much the same way that you declare in communities",
    "start": "2870290",
    "end": "2879380"
  },
  {
    "text": "what your application needs in terms of network ports and CPU and memory you",
    "start": "2879380",
    "end": "2885200"
  },
  {
    "text": "probably also want you should be able to declare it just like all the other resources what's your storage",
    "start": "2885200",
    "end": "2891380"
  },
  {
    "text": "requirements are in form of storage classes like like like Larry's mentioned",
    "start": "2891380",
    "end": "2897680"
  },
  {
    "text": "and effectively you now have a way of picking up your application and running",
    "start": "2897680",
    "end": "2903349"
  },
  {
    "text": "this across different platforms whether it's different cloud providers or you know different on-premise clusters etc",
    "start": "2903349",
    "end": "2910029"
  },
  {
    "text": "so if you want to really use the full potential of kubernetes and take advantage of all of those composability",
    "start": "2910029",
    "end": "2917980"
  },
  {
    "text": "scalability and automation capabilities then I'd say the answer is yes of course",
    "start": "2917980",
    "end": "2923390"
  },
  {
    "text": "I'm slightly biased but it's still true yes and actually I'd like to add to that",
    "start": "2923390",
    "end": "2928999"
  },
  {
    "text": "a little bit and that question comes a lot because of a little bit of history",
    "start": "2928999",
    "end": "2936759"
  },
  {
    "text": "containers and darker when it first started it was mainly focused on stateless or applications who didn't",
    "start": "2936759",
    "end": "2944059"
  },
  {
    "text": "have the state attached to it so much so because of that model that idea has",
    "start": "2944059",
    "end": "2949490"
  },
  {
    "text": "continued or tries to continue through but the reality is that the kubernetes",
    "start": "2949490",
    "end": "2955359"
  },
  {
    "text": "DCOs and other orchestration systems have a very good model of managing state",
    "start": "2955359",
    "end": "2961759"
  },
  {
    "text": "and because of that it's quite mature actually or at the moment when I",
    "start": "2961759",
    "end": "2967489"
  },
  {
    "text": "remember when I think it was version 1.4 1.3 or kubernetes had just started with",
    "start": "2967489",
    "end": "2973210"
  },
  {
    "text": "dynamic provisioning now we are version 113 we have CSI state is quite mature",
    "start": "2973210",
    "end": "2980509"
  },
  {
    "text": "model now to be able to be managed by communities so I would say absolutely",
    "start": "2980509",
    "end": "2985539"
  },
  {
    "text": "that it is we are in the H now where a state is can be definitely managed by communities all right let's take another",
    "start": "2985539",
    "end": "2995180"
  },
  {
    "text": "question can we same provision storage for containers the answer for that is",
    "start": "2995180",
    "end": "3003099"
  },
  {
    "text": "yes that all depends on your storage system when you create a volume the",
    "start": "3003099",
    "end": "3009910"
  },
  {
    "text": "storage system may have may have thick provisioning or thin provisioning that",
    "start": "3009910",
    "end": "3016269"
  },
  {
    "text": "is all managed by the storage class which has these parameters that may be",
    "start": "3016269",
    "end": "3022390"
  },
  {
    "text": "defining what type of storage is you know in this storage class so in other",
    "start": "3022390",
    "end": "3027489"
  },
  {
    "text": "words the administrator had creates a storage class with a set of honors and names that stories class and",
    "start": "3027489",
    "end": "3033530"
  },
  {
    "text": "that sort of defines how the volumes can be created and in there the parameters would be to either same provision or",
    "start": "3033530",
    "end": "3040130"
  },
  {
    "text": "thick probation again that's all for the dependent on the store system and",
    "start": "3040130",
    "end": "3048710"
  },
  {
    "text": "anybody want to add to that no I think it comes with us",
    "start": "3048710",
    "end": "3054050"
  },
  {
    "text": "excellent all right let's get another one what will be good if we want to",
    "start": "3054050",
    "end": "3062109"
  },
  {
    "text": "mount same volume in pod PV or storage",
    "start": "3062109",
    "end": "3067190"
  },
  {
    "text": "Colonus if we're using different clusters okay again this is again that",
    "start": "3067190",
    "end": "3073849"
  },
  {
    "text": "different cluster question so let's say for again that we have two kubernetes clusters we have two parts in each",
    "start": "3073849",
    "end": "3081920"
  },
  {
    "text": "kubernetes cluster and they want to mount the same volume I'm guessing in",
    "start": "3081920",
    "end": "3088010"
  },
  {
    "text": "that model you would almost need to manage that yourself because the",
    "start": "3088010",
    "end": "3093320"
  },
  {
    "text": "kubernetes systems again are not being I'm not talking to each other unless we like just like Alex said we talked about",
    "start": "3093320",
    "end": "3099470"
  },
  {
    "text": "Federation which is something in the future but you will need to mount probably over some type of file system",
    "start": "3099470",
    "end": "3106640"
  },
  {
    "text": "because you're mounting the volume in two different places and then you would need to manage it",
    "start": "3106640",
    "end": "3112130"
  },
  {
    "text": "yourself there may be a storage system where you can mount it you know through",
    "start": "3112130",
    "end": "3117410"
  },
  {
    "text": "distortion by you creating your own api's to it and then telling the story",
    "start": "3117410",
    "end": "3122690"
  },
  {
    "text": "system to do you know attach it on both ends you may have to create your own controller and we didn't talk about",
    "start": "3122690",
    "end": "3128570"
  },
  {
    "text": "operators but you may create your own operator to be able to manage this and attach it to two different clusters but",
    "start": "3128570",
    "end": "3134930"
  },
  {
    "text": "that is something that is not done by kubernetes at the moment okay all right",
    "start": "3134930",
    "end": "3143840"
  },
  {
    "text": "anybody want to after that okay let's",
    "start": "3143840",
    "end": "3148850"
  },
  {
    "text": "take another question these great questions guys please keep them coming who is responsible to erase or delete",
    "start": "3148850",
    "end": "3155870"
  },
  {
    "text": "the content of a volume or delete the volume in case the volume and the data",
    "start": "3155870",
    "end": "3160910"
  },
  {
    "text": "is no longer didn't need it is that in CSI function okay so yeah",
    "start": "3160910",
    "end": "3169700"
  },
  {
    "text": "definitely okay sure so it was actually a was a",
    "start": "3169700",
    "end": "3176060"
  },
  {
    "text": "deletion policy that you can set so when you delete a PV C if the if the policy",
    "start": "3176060",
    "end": "3184310"
  },
  {
    "text": "is delete and then the the content it will be deleted with it and then the the",
    "start": "3184310",
    "end": "3190520"
  },
  {
    "text": "the volume associated with it on the system will also be removed but if it's",
    "start": "3190520",
    "end": "3197390"
  },
  {
    "text": "a retain then the content and the the volume will be will be kept and then",
    "start": "3197390",
    "end": "3203300"
  },
  {
    "text": "it's up to you the admin to handle that afterwards so if you are doing dynamic",
    "start": "3203300",
    "end": "3210350"
  },
  {
    "text": "provisioning and by default the palace will be deletion thank you all right",
    "start": "3210350",
    "end": "3221920"
  },
  {
    "text": "anyone for that no not really I mean",
    "start": "3221920",
    "end": "3229250"
  },
  {
    "text": "it's in in summary the there is a there",
    "start": "3229250",
    "end": "3234290"
  },
  {
    "text": "is a delete policy which can be applied but ultimately it's the either the admin",
    "start": "3234290",
    "end": "3241880"
  },
  {
    "text": "or the deletion policy will will trigger the the storage system to do the actual",
    "start": "3241880",
    "end": "3248120"
  },
  {
    "text": "delete process and it's kind of storage system specific in terms of you know how",
    "start": "3248120",
    "end": "3253250"
  },
  {
    "text": "the content is erased as part of that deletion process new question can the",
    "start": "3253250",
    "end": "3261530"
  },
  {
    "text": "service in different namespace can it be accessed by the same TV so I think you",
    "start": "3261530",
    "end": "3268760"
  },
  {
    "text": "want to answer this one you'll be yeah this is this the screen keeps the movie",
    "start": "3268760",
    "end": "3275480"
  },
  {
    "text": "yeah so well so once the you know the PV and PBC is bound to each other so basically then you are",
    "start": "3275480",
    "end": "3283819"
  },
  {
    "text": "basically as a Lewis pointed out earlier it says like one of our leadership play you can't really have a different name",
    "start": "3283819",
    "end": "3290720"
  },
  {
    "text": "space that is associated not chilly anymore because it's about who is this one PVC that is in the sequence this",
    "start": "3290720",
    "end": "3299440"
  },
  {
    "text": "unless if you unbind it you know you can use it later about a different in space",
    "start": "3299440",
    "end": "3304660"
  },
  {
    "text": "there is actually some work going on like the recording well the cologne is",
    "start": "3304660",
    "end": "3312559"
  },
  {
    "text": "not the chrony still that's still limited to the same names is better as a also for I forgot what's the what's the",
    "start": "3312559",
    "end": "3318650"
  },
  {
    "text": "cordon was it was a feature that actually right now is being designed that allow you to transfer the namespace",
    "start": "3318650",
    "end": "3324170"
  },
  {
    "text": "from one to another but it's still not share that but basically you have to say transfer and then when the the the",
    "start": "3324170",
    "end": "3332720"
  },
  {
    "text": "reception side say asserted then it's gone it's going to be translated still not be shared so I think this party is",
    "start": "3332720",
    "end": "3339170"
  },
  {
    "text": "something that could be have some something going on in the future maybe not be it could be possibly in the",
    "start": "3339170",
    "end": "3347000"
  },
  {
    "text": "future but right now it is not so it you can only have like one namespace okay I",
    "start": "3347000",
    "end": "3353089"
  },
  {
    "text": "know yeah okay excellent here's another question is it necessary to create a PV",
    "start": "3353089",
    "end": "3360109"
  },
  {
    "text": "before creating a PVC I like to don't take that one so it's probably just word",
    "start": "3360109",
    "end": "3368240"
  },
  {
    "text": "clarifying the terminology so PV is is the actual volume itself whereas the the",
    "start": "3368240",
    "end": "3374569"
  },
  {
    "text": "PVC is is the link that's used during the dynamic provisioning process to to",
    "start": "3374569",
    "end": "3380000"
  },
  {
    "text": "link and it's the reference that the application or the pod is using to refer",
    "start": "3380000",
    "end": "3386150"
  },
  {
    "text": "to to the PV so the PVCs creates a PV as",
    "start": "3386150",
    "end": "3391940"
  },
  {
    "text": "part of the dynamic provisioning process yeah so so actually for static provision",
    "start": "3391940",
    "end": "3399410"
  },
  {
    "text": "you can actually have a PV first and that is associated the or the volume that is already created on your solar",
    "start": "3399410",
    "end": "3406910"
  },
  {
    "text": "system and then you can do a static binding to create a PVC that's possible yeah way back in in I",
    "start": "3406910",
    "end": "3415910"
  },
  {
    "text": "think was before one point four when dynamic provisioning came in the only way to get storage was to pre allocate a",
    "start": "3415910",
    "end": "3423109"
  },
  {
    "text": "pool of PBS and the PVC will find the best fit in that logic is still there",
    "start": "3423109",
    "end": "3430219"
  },
  {
    "text": "today so that's without dynamic provisioning so but normally today when we talk about",
    "start": "3430219",
    "end": "3439039"
  },
  {
    "text": "storage and kubernetes we always mean dynamic provisioning to be a dynamic",
    "start": "3439039",
    "end": "3444650"
  },
  {
    "text": "system where we storage gets consumed and released on demand so and for that",
    "start": "3444650",
    "end": "3451819"
  },
  {
    "text": "PVC is coming first great well thanks",
    "start": "3451819",
    "end": "3457130"
  },
  {
    "start": "3454000",
    "end": "3475000"
  },
  {
    "text": "everyone for a great presentation that is all the time we have for questions today thank you for joining us the",
    "start": "3457130",
    "end": "3464449"
  },
  {
    "text": "webinar recording and slides will be online later today and we're looking forward to seeing you at a future CNCs",
    "start": "3464449",
    "end": "3470749"
  },
  {
    "text": "webinar have a good one",
    "start": "3470749",
    "end": "3473979"
  }
]