[
  {
    "text": "yeah awesome thanks for coming everyone uh we're just going to run through some introductions my name is Andrew stoichus",
    "start": "1199",
    "end": "7140"
  },
  {
    "text": "I'm a member of the office of the CTO at red hat and currently maintain the Sig",
    "start": "7140",
    "end": "12360"
  },
  {
    "text": "Network policy API repo housing the new admin Network policy API",
    "start": "12360",
    "end": "19160"
  },
  {
    "text": "hi I'm Bowie I've been contributing Sig Network for the past five years working",
    "start": "19380",
    "end": "25080"
  },
  {
    "text": "at Google and I'm Rob and I've also been working",
    "start": "25080",
    "end": "30240"
  },
  {
    "text": "at Google contributing to Sig Network for a few years not quite as long and I",
    "start": "30240",
    "end": "35700"
  },
  {
    "text": "you can blame or thank me for endpoint slice Ingress getting to GA and some topology stuff but more recently I've",
    "start": "35700",
    "end": "42780"
  },
  {
    "text": "been doing a lot of Gateway API work so I'm one of the maintainers of the Gateway API project",
    "start": "42780",
    "end": "48840"
  },
  {
    "text": "hey everyone I'm Surya I work at Red Hat on the openshift networking team I'm relatively new to Sig Network and",
    "start": "48840",
    "end": "55379"
  },
  {
    "text": "kubernet is not the Veterans as these folks here are but I am trying to get involved in admin Network policy I know",
    "start": "55379",
    "end": "61860"
  },
  {
    "text": "a bit of keep proxy so yeah hit me or if you want to know anything about these things yeah",
    "start": "61860",
    "end": "67080"
  },
  {
    "text": "cool uh well I am going to be going through the first part of this and that's going to be an overview of the",
    "start": "67080",
    "end": "72900"
  },
  {
    "text": "API so we have not much time I think we've got a 35 minute slot and we're",
    "start": "72900",
    "end": "78780"
  },
  {
    "text": "going to try and do both an intro and deep dive which means we really can't get that deep in any one area but to",
    "start": "78780",
    "end": "84720"
  },
  {
    "text": "start we're going to go through an overview of the apis that networking Sig Network owns and to start with let's",
    "start": "84720",
    "end": "92520"
  },
  {
    "text": "talk about service how many of you have a service in your cluster okay that",
    "start": "92520",
    "end": "97560"
  },
  {
    "text": "should be all great great okay so service is really the foundation I think the central thing inside uh Sig network",
    "start": "97560",
    "end": "104400"
  },
  {
    "text": "resources they enable uh you know basically grouping pods together uh",
    "start": "104400",
    "end": "110880"
  },
  {
    "text": "behind some kind of network concept and you can see here that that's done with a service selector so in that case pods",
    "start": "110880",
    "end": "118259"
  },
  {
    "text": "labeled app equals store are going to be selected by this service services are",
    "start": "118259",
    "end": "123600"
  },
  {
    "text": "usually assigned IP addresses that they can be reached on and request of those addresses will be routed to one of the",
    "start": "123600",
    "end": "131760"
  },
  {
    "text": "associated pots now most of you may have may be familiar with the concept of a",
    "start": "131760",
    "end": "137400"
  },
  {
    "text": "service type and there's really four service types here and three of them are",
    "start": "137400",
    "end": "144120"
  },
  {
    "text": "very closely related uh you know if you've got a cluster IP service type which is a subset of a node Port service",
    "start": "144120",
    "end": "150180"
  },
  {
    "text": "type which is a subset of a load balancer service type and then way over here on the other side you've got",
    "start": "150180",
    "end": "155819"
  },
  {
    "text": "external name which is just it's completely out of thing it's basically a c name that does some DNS resolution for",
    "start": "155819",
    "end": "162060"
  },
  {
    "text": "you now reaching a service is fairly",
    "start": "162060",
    "end": "167099"
  },
  {
    "text": "straightforward each service is assigned one or more cluster IPS depending on if",
    "start": "167099",
    "end": "172379"
  },
  {
    "text": "you're using multiple IP families so in this case you can take that cluster IP",
    "start": "172379",
    "end": "177599"
  },
  {
    "text": "and make a request to it and you'll be routed to one of the pods backing that service",
    "start": "177599",
    "end": "183140"
  },
  {
    "text": "now we also have a DNS specification in kubernetes that allows you to instead of",
    "start": "183140",
    "end": "189300"
  },
  {
    "text": "knowing the IP of the service just know the server the name of that service and",
    "start": "189300",
    "end": "194400"
  },
  {
    "text": "make a curl request using that name so store dot the namespace it's in and then",
    "start": "194400",
    "end": "200280"
  },
  {
    "text": "service cluster local now within kubernetes we go one step further and we do some automatic lookups",
    "start": "200280",
    "end": "207360"
  },
  {
    "text": "for you so instead of typing all that out if you're making a request from within the same name space you can just",
    "start": "207360",
    "end": "213300"
  },
  {
    "text": "curl store and we'll do a few lookups and eventually translate that to store",
    "start": "213300",
    "end": "219060"
  },
  {
    "text": "prod service cluster local now endpoints and endpoint slices are",
    "start": "219060",
    "end": "225239"
  },
  {
    "text": "really how this works behind the scenes so remember that service is the thing that selects pods but we need something",
    "start": "225239",
    "end": "232200"
  },
  {
    "text": "behind the scenes to actually track all the IPS and ports associated with those pods and make them make sense so the",
    "start": "232200",
    "end": "239340"
  },
  {
    "text": "endpoints resources the one that's existed since very very early on in kubernetes and it's just one big",
    "start": "239340",
    "end": "246120"
  },
  {
    "text": "kubernetes resource that tracks all the IPS and ports for the pods in your",
    "start": "246120",
    "end": "252599"
  },
  {
    "text": "service with endpoint slices that's a newer resource and that basically is sharded",
    "start": "252599",
    "end": "258120"
  },
  {
    "text": "endpoints so there became a time where services start to get really big we saw services with say 10 000 endpoints and",
    "start": "258120",
    "end": "265919"
  },
  {
    "text": "that just didn't work very well trying to shove all that information into a single kubernetes resource so instead to",
    "start": "265919",
    "end": "272100"
  },
  {
    "text": "try and address that kind of scale we split it out into several endpoint slices per Service uh",
    "start": "272100",
    "end": "279840"
  },
  {
    "text": "most new features in kubernetes are going to endpoint slices so although the",
    "start": "279840",
    "end": "285000"
  },
  {
    "text": "endpoints API is stable and will continue to exist forever as far as I know the endpoint slice API has new",
    "start": "285000",
    "end": "292620"
  },
  {
    "text": "features and is more broadly used at this point so things like dual stack topology aware routing and terminating",
    "start": "292620",
    "end": "299820"
  },
  {
    "text": "endpoints have all been unique to endpoint slices now Gateway and Ingress uh something",
    "start": "299820",
    "end": "306360"
  },
  {
    "text": "that I'm very familiar with uh is and you know first Ingress is an API that",
    "start": "306360",
    "end": "312600"
  },
  {
    "text": "many of you may be familiar with just quickly how many of you have used the Ingress API",
    "start": "312600",
    "end": "318060"
  },
  {
    "text": "okay that's a lot great okay so the Ingress API is really L7 load balancing",
    "start": "318060",
    "end": "323340"
  },
  {
    "text": "configuration inside your kubernetes cluster it's existed for nearly five years maybe more than five years",
    "start": "323340",
    "end": "330419"
  },
  {
    "text": "that's forever in kubernetes Era at least from my perspective and it allows",
    "start": "330419",
    "end": "336419"
  },
  {
    "text": "you to forward to a service uh configure path matching and do some very very",
    "start": "336419",
    "end": "342060"
  },
  {
    "text": "basic TLS configuration it's been stable for a long time and it's great but it",
    "start": "342060",
    "end": "347220"
  },
  {
    "text": "has a very small feature set with Gateway API we're trying to do the",
    "start": "347220",
    "end": "352800"
  },
  {
    "text": "Next Generation to enable you know much more expressive and portable configuration in this API",
    "start": "352800",
    "end": "359699"
  },
  {
    "text": "and much much more I don't there's there's been several talks on Gateway API here I can't go into everything here",
    "start": "359699",
    "end": "366479"
  },
  {
    "text": "but really Gateway API represents the next generation of kubernetes load balancing and routing apis it's designed",
    "start": "366479",
    "end": "373680"
  },
  {
    "text": "to be extensive and expressive and really one of the key things here was a",
    "start": "373680",
    "end": "379500"
  },
  {
    "text": "role oriented resource model if you're familiar with Ingress there's a single Ingress resource and that just didn't",
    "start": "379500",
    "end": "385860"
  },
  {
    "text": "scale to every workload in the cluster some organizations may want to configure",
    "start": "385860",
    "end": "391979"
  },
  {
    "text": "their load balancing infrastructure separately from their routing infrastructure or their applications and",
    "start": "391979",
    "end": "397500"
  },
  {
    "text": "this is designed with that in mind to split those up into different resources so the Gateway class if you're familiar",
    "start": "397500",
    "end": "403740"
  },
  {
    "text": "with Ingress class the storage class is nearly identical to that H3 route is",
    "start": "403740",
    "end": "409199"
  },
  {
    "text": "nearly identical to the Ingress resource and Gateway is really a new resource A",
    "start": "409199",
    "end": "414300"
  },
  {
    "text": "New Concept in kubernetes that represents you know the entry point to your system a cloud load balancer a",
    "start": "414300",
    "end": "421440"
  },
  {
    "text": "instance of a proxy in your cluster and again lots more that we don't have time",
    "start": "421440",
    "end": "426539"
  },
  {
    "text": "to get into right now but I'll just show you really quickly the difference between an Ingress resource and an HP",
    "start": "426539",
    "end": "432600"
  },
  {
    "text": "route resource now if you start at the very top here you're going to see that an Ingress class name an Ingress meant",
    "start": "432600",
    "end": "439259"
  },
  {
    "text": "that the nginx Ingress should Implement that Ingress resource in HP route it's a",
    "start": "439259",
    "end": "445979"
  },
  {
    "text": "similar concept but we have a parent refs field and that points up to a Gateway and that Gateway says that I'm",
    "start": "445979",
    "end": "454440"
  },
  {
    "text": "going to attach this HP route to the Gateway named nginx and you could attach to any number of gateways and they'd all",
    "start": "454440",
    "end": "461220"
  },
  {
    "text": "implement the same HTTP route uh both of these do exactly the same thing they do a prefix match on slash",
    "start": "461220",
    "end": "468599"
  },
  {
    "text": "login and they forward traffic to the auth service on Port 8080.",
    "start": "468599",
    "end": "475139"
  },
  {
    "text": "uh there's a ton of work going in get going on in Gateway API it's a Sig Network sub project I'm always always",
    "start": "475139",
    "end": "482460"
  },
  {
    "text": "looking for more people to get involved we have so many things going on we actually have two meetings every week so",
    "start": "482460",
    "end": "488759"
  },
  {
    "text": "there is no shortage of opportunities to get involved and help us out focus areas right now this API is right now most",
    "start": "488759",
    "end": "496800"
  },
  {
    "text": "stable with Ingress but we're taking the same concept and applying it to mesh we have lots of exciting work going on",
    "start": "496800",
    "end": "502740"
  },
  {
    "text": "there there was a talk earlier this morning showing how this it's called gamma the sub project within Gateway API",
    "start": "502740",
    "end": "509220"
  },
  {
    "text": "that's focused on mesh and that's really moving forward quickly so that's meeting every Tuesday then the main project as a",
    "start": "509220",
    "end": "516959"
  },
  {
    "text": "whole that focuses on Ingress and everything else meets every Monday and we have so much work to get to whether",
    "start": "516959",
    "end": "524399"
  },
  {
    "text": "it's mesh L4 routing L7 moving that up to GA from beta we're working a lot on",
    "start": "524399",
    "end": "531360"
  },
  {
    "text": "conformance tests there's so much to get involved with just this week week we introduced a new tool called Ingress to",
    "start": "531360",
    "end": "537540"
  },
  {
    "text": "Gateway that allows you to take Ingress resources in your cluster and convert them to Gateway API resources lots of",
    "start": "537540",
    "end": "543959"
  },
  {
    "text": "places to jump in and help out if you're interested and as always we appreciate contributors",
    "start": "543959",
    "end": "549060"
  },
  {
    "text": "from all backgrounds you can find us on our website that's what the QR code goes to or or on slack or on GitHub",
    "start": "549060",
    "end": "558140"
  },
  {
    "text": "if you're a user we really appreciate you showing up to the meeting so not just the maintainers",
    "start": "558660",
    "end": "565519"
  },
  {
    "text": "so next up we have Network policies how many of you have used Network policies or known as well yeah that's expected",
    "start": "568980",
    "end": "575519"
  },
  {
    "text": "because it's been around for a really long time five years I think it's a stable core V1 policy and it's a",
    "start": "575519",
    "end": "581820"
  },
  {
    "text": "powerful API that actually allows app owners to be able to regulate their",
    "start": "581820",
    "end": "587940"
  },
  {
    "text": "Network traffic so you can specify constructs like I want my backend pods",
    "start": "587940",
    "end": "594839"
  },
  {
    "text": "to be reachable only for my front-end pods or I want my databases to be reachable only for my backend pods so it",
    "start": "594839",
    "end": "602100"
  },
  {
    "text": "it really allows the app owners to be able to Define how they want their",
    "start": "602100",
    "end": "607200"
  },
  {
    "text": "multi-tiered apps communication to look like can also be for security reasons can also be for different infosing",
    "start": "607200",
    "end": "613740"
  },
  {
    "text": "different levels of policies on your apps so it's mainly developed for app owners and as you can see at the example",
    "start": "613740",
    "end": "621839"
  },
  {
    "text": "over here so you can express such kinds of constructs in an easy way using the network policy API and a sample yaml for",
    "start": "621839",
    "end": "628920"
  },
  {
    "text": "or a network policy object would look like this with kind Network policy they are namespace scoped so you have to",
    "start": "628920",
    "end": "635700"
  },
  {
    "text": "define the namespace in which you wanted to find the policy in and in the specification you can specify",
    "start": "635700",
    "end": "641339"
  },
  {
    "text": "a pod selector which is a mandatory field and using match labels you can say which pods in a specific name space you",
    "start": "641339",
    "end": "648360"
  },
  {
    "text": "want the policy to be applied to and usually you can see Ingress or egress types as the type for a policy and they",
    "start": "648360",
    "end": "656279"
  },
  {
    "text": "are independent of each other so in our case we wanted to define a rule that says my backends should only receive",
    "start": "656279",
    "end": "663360"
  },
  {
    "text": "traffic from my front ends right so you can express that saying oh I'm going to apply the policy on my back end and if",
    "start": "663360",
    "end": "669660"
  },
  {
    "text": "the Ingress traffic is coming from my front end which I've expressed using match labels and namespace selectors I",
    "start": "669660",
    "end": "675000"
  },
  {
    "text": "allow it looks simple but one catch here is that they're implicit the API is",
    "start": "675000",
    "end": "680940"
  },
  {
    "text": "quite implicit in nature so you have a baseline default deny so everything works until you create that policy and",
    "start": "680940",
    "end": "687060"
  },
  {
    "text": "then nothing works right you have that default deny rule that gets created and the allow rule that you're specifying here create gets created on top of that",
    "start": "687060",
    "end": "693779"
  },
  {
    "text": "so it's an allow list mechanism something to be careful about if you're using network policies for the first",
    "start": "693779",
    "end": "699120"
  },
  {
    "text": "time and like I said the Ingress and egress are separate so if you have an object",
    "start": "699120",
    "end": "704220"
  },
  {
    "text": "that defines only Ingress rules egress is unrestricted so the default deny only applies to the type of rules that you",
    "start": "704220",
    "end": "710640"
  },
  {
    "text": "have in your object over here so this is namespace scope it's defined for namespace owners app owners so you",
    "start": "710640",
    "end": "717600"
  },
  {
    "text": "might be wondering as a cluster admin how can I enforce policies on a more cluster scoped level or cluster-wide",
    "start": "717600",
    "end": "723480"
  },
  {
    "text": "level and that's where admin Network policies come into play it's a relatively new API that's under active",
    "start": "723480",
    "end": "729360"
  },
  {
    "text": "development and this is defined for cluster admins it's on a cluster scope so you might",
    "start": "729360",
    "end": "735540"
  },
  {
    "text": "have use cases like what I've shown in the diagram here you have a security sensitive namespace you want to be able",
    "start": "735540",
    "end": "740579"
  },
  {
    "text": "to express that all other name spaces in the cluster should not be able to talk to this namespace",
    "start": "740579",
    "end": "746279"
  },
  {
    "text": "and that can be achieved using ANP um here's how a typical amp object would look like kind admin Network policy in",
    "start": "746279",
    "end": "754260"
  },
  {
    "text": "the spec you can define a priority field this is a bit different from Network policy so every object has a priority",
    "start": "754260",
    "end": "760079"
  },
  {
    "text": "and all the rules inside the object will get the same priority you can have more than one role in the object that's",
    "start": "760079",
    "end": "766620"
  },
  {
    "text": "similar to network policies and a subject here is the objects on which you want to apply the policy on so it can be",
    "start": "766620",
    "end": "772740"
  },
  {
    "text": "namespaces it can be pods and they're expressed using match labels because it's the same and you must be familiar with this because of retro policies",
    "start": "772740",
    "end": "780139"
  },
  {
    "text": "what's really unique here when compared to network policies is that they're explicit in nature so if you look at the",
    "start": "780139",
    "end": "786120"
  },
  {
    "text": "Ingress rule we are defining the action deny so we are explicitly saying that I",
    "start": "786120",
    "end": "791220"
  },
  {
    "text": "want to deny or drop traffic that's coming from namespaces that are not myself so in this case the sensitive NS",
    "start": "791220",
    "end": "798420"
  },
  {
    "text": "namespace any namespace that's not from sensitive namespace all that traffic will get dropped and it's not any",
    "start": "798420",
    "end": "803880"
  },
  {
    "text": "implicit thing that's happening behind the scene it's more we are defining it",
    "start": "803880",
    "end": "808980"
  },
  {
    "text": "in the actions so it's helpful for the admins because it's like a traditional firewall you literally get what you are",
    "start": "808980",
    "end": "816000"
  },
  {
    "text": "you know what you're asking for uh the API has two kinds of objects admin Network policy which you saw over",
    "start": "816000",
    "end": "822420"
  },
  {
    "text": "here and there's a new one called Baseline adminator policy which is a bit unique I will not go into the details of",
    "start": "822420",
    "end": "828120"
  },
  {
    "text": "that but please do check out our documentation for more details",
    "start": "828120",
    "end": "832940"
  },
  {
    "text": "um so yeah let me end this section of policies by just saying that it's a new API it's V1 alpha one right now and we",
    "start": "833880",
    "end": "841800"
  },
  {
    "text": "are supporting East-West traffic for this version of the API the North South traffic is very much in play it's a work",
    "start": "841800",
    "end": "848279"
  },
  {
    "text": "in progress um and if you have use cases for example you want all the namespaces in your",
    "start": "848279",
    "end": "855360"
  },
  {
    "text": "cluster to be able to receive traffic coming from the monitoring namespace because you have metric parts that want",
    "start": "855360",
    "end": "860519"
  },
  {
    "text": "to scrape everything right and you don't want the namespace owners in the cluster to be able to override these rules",
    "start": "860519",
    "end": "866279"
  },
  {
    "text": "that's when you have to use a and PS because anps are the top in the chain when you evaluate them and none of the",
    "start": "866279",
    "end": "872700"
  },
  {
    "text": "namespace owners are um or app owners they cannot override these rules or you",
    "start": "872700",
    "end": "878279"
  },
  {
    "text": "want to do tenant isolation for example or maybe you want to just be an admin and say if my traffic is matching a",
    "start": "878279",
    "end": "884760"
  },
  {
    "text": "specific set of PODS I don't know what to do with them so in that case I'm going to just pass that over to network",
    "start": "884760",
    "end": "890100"
  },
  {
    "text": "policy so you can also Express that in ANP it's an interesting use case so ANP",
    "start": "890100",
    "end": "895440"
  },
  {
    "text": "interacts with NP in that manner you can just delegate the power to the to the app owners in in some scenarios if",
    "start": "895440",
    "end": "901800"
  },
  {
    "text": "that's what you like so what are the next steps here implementations so that's where we're at",
    "start": "901800",
    "end": "908100"
  },
  {
    "text": "we are trying to get some initial implementations out of this API that's where we need your help we have a Sig",
    "start": "908100",
    "end": "914339"
  },
  {
    "text": "Network policy API slack Channel we also have by weekly Community meetings happening so please join them we need",
    "start": "914339",
    "end": "921480"
  },
  {
    "text": "feedback from all of you so if that's something new that you'd like to see in addition to what we already have or",
    "start": "921480",
    "end": "926639"
  },
  {
    "text": "there's some use case that we have not considered that you might want to see please reach out to us and we would love to include that in our V2 Alpha One of",
    "start": "926639",
    "end": "933720"
  },
  {
    "text": "the API V1 Alpha 2 of the API so the next area multi-network I get to",
    "start": "933720",
    "end": "940680"
  },
  {
    "text": "present all the cool new things I guess because this is a really new area we have a new Sig as well",
    "start": "940680",
    "end": "947519"
  },
  {
    "text": "um what so this effort is mainly just focused on trying to be able to express more complex networks than the",
    "start": "947519",
    "end": "954360"
  },
  {
    "text": "traditional pod networking that we have in kubernetes like you might want to be able to express things like I want my",
    "start": "954360",
    "end": "959820"
  },
  {
    "text": "workloads to be able to connect to isolated secondary networks through performance efficient interfaces like",
    "start": "959820",
    "end": "965399"
  },
  {
    "text": "sriov or you might want to say I want my apps to be able to talk to on-prem networks so in order to express these we",
    "start": "965399",
    "end": "972839"
  },
  {
    "text": "are trying to come up with an API it's very much in the design phase it's a completely new area so",
    "start": "972839",
    "end": "978839"
  },
  {
    "text": "I have a QR code here which points to the design dock that is in play right",
    "start": "978839",
    "end": "984120"
  },
  {
    "text": "now and we also have a Sig Network multi-network there's a lot of networks but I think that's the goal of this",
    "start": "984120",
    "end": "989339"
  },
  {
    "text": "effort a slack channel so please go join there um we also have bi-weekly community community meetings here",
    "start": "989339",
    "end": "996240"
  },
  {
    "text": "um so yeah welcome we are we would love to have contributions from all fields",
    "start": "996240",
    "end": "1002240"
  },
  {
    "text": "I'll hand it over to Andrew sweet thanks Surya",
    "start": "1002240",
    "end": "1008420"
  },
  {
    "text": "so we've talked a lot about apis like we love apis it's a lot of fun to develop",
    "start": "1008420",
    "end": "1014180"
  },
  {
    "text": "an API but it can get a little bit exhausting for developers uh past a certain point so let's talk about some",
    "start": "1014180",
    "end": "1020660"
  },
  {
    "text": "of the actual networking components that Sig Network owns currently",
    "start": "1020660",
    "end": "1025880"
  },
  {
    "text": "so the first one is Cube proxy who here uses Cube proxy",
    "start": "1025880",
    "end": "1030980"
  },
  {
    "text": "awesome a lot of people so we'd like to see so most folks might know this but Cube",
    "start": "1030980",
    "end": "1037100"
  },
  {
    "text": "proxy is basically a entry controller that essentially allows us to take the",
    "start": "1037100",
    "end": "1043640"
  },
  {
    "text": "services and endpoints API that Rob talked about earlier and convert that into per node data path networking rules",
    "start": "1043640",
    "end": "1051620"
  },
  {
    "text": "so it is a per node agent and it basically allows us to just direct traffic on a",
    "start": "1051620",
    "end": "1059419"
  },
  {
    "text": "node basis it is pretty stable it's been in tree for a long time and we have a",
    "start": "1059419",
    "end": "1065840"
  },
  {
    "text": "pretty dedicated group of maintainers who make sure it stays up and running so let's talk a little bit more about it",
    "start": "1065840",
    "end": "1073039"
  },
  {
    "text": "so like I said before it's implemented in core kubernetes and we have well we had three different",
    "start": "1073039",
    "end": "1079520"
  },
  {
    "text": "modes we had IP tables ipvs and user space user space has been deprecated and",
    "start": "1079520",
    "end": "1085940"
  },
  {
    "text": "we are currently only maintaining iptables and ipvs so this diagram kind",
    "start": "1085940",
    "end": "1091460"
  },
  {
    "text": "of shows a typical workflow that Q proxy handles as you can see a user comes in",
    "start": "1091460",
    "end": "1097220"
  },
  {
    "text": "and creates a service awesome so what does qproxy do it sees that service and",
    "start": "1097220",
    "end": "1103100"
  },
  {
    "text": "it makes sure that it sets up the in this case correct iptables rules to direct the cluster IP of the service all",
    "start": "1103100",
    "end": "1111440"
  },
  {
    "text": "the way to the back end of the Pod and these are kind of a really abbreviated",
    "start": "1111440",
    "end": "1116660"
  },
  {
    "text": "list of a really complicated iptables list that Q proxy is maintaining on",
    "start": "1116660",
    "end": "1122720"
  },
  {
    "text": "every single node and obviously it's really important because we have a lot of people using it so super stable we",
    "start": "1122720",
    "end": "1129080"
  },
  {
    "text": "want to keep it that way but at the same time we also want to keep an eye on the future and so we've been really thinking",
    "start": "1129080",
    "end": "1135380"
  },
  {
    "text": "what's next right how do we Implement new back ends how do we do some exciting new things",
    "start": "1135380",
    "end": "1142220"
  },
  {
    "text": "so enter kaping kpng Q proxy Next Generation whatever you want to call it",
    "start": "1142220",
    "end": "1148600"
  },
  {
    "text": "we like a ping just because it sounds like we're pinging off something it's kind of where we're going next",
    "start": "1148600",
    "end": "1156580"
  },
  {
    "text": "so basically kaping provides two major value ads today it's very early in its",
    "start": "1156679",
    "end": "1162440"
  },
  {
    "text": "iteration cycle it's being done outside of core kubernetes in the kubernetes",
    "start": "1162440",
    "end": "1167780"
  },
  {
    "text": "sigs organization and it provides a fundamental separation between the kubernetes API and back-end",
    "start": "1167780",
    "end": "1174799"
  },
  {
    "text": "implementations so this allows new contributors to come in and write these back ends really easily and really",
    "start": "1174799",
    "end": "1180140"
  },
  {
    "text": "quickly which is really exciting and I know a bunch of folks have wanted to do that for a while today it also provides",
    "start": "1180140",
    "end": "1187039"
  },
  {
    "text": "an extremely flexible deployment model so as you can see in this diagram in",
    "start": "1187039",
    "end": "1192140"
  },
  {
    "text": "this specific deployment model rather than having a per node agent we have a single kpng Daemon that basically serves",
    "start": "1192140",
    "end": "1199760"
  },
  {
    "text": "an API that the back backends Implement and then can write whatever networking",
    "start": "1199760",
    "end": "1205039"
  },
  {
    "text": "networking rules they want to so as I said before this is still all kind of",
    "start": "1205039",
    "end": "1210500"
  },
  {
    "text": "out of tree so development's really fast pace and we're still having figuring out exactly what's going to fit back entry",
    "start": "1210500",
    "end": "1217820"
  },
  {
    "text": "and if we want it to fit back in tree but we know that the next generation of back ends are",
    "start": "1217820",
    "end": "1223940"
  },
  {
    "text": "going to be done via kaping and not really in the standard Q proxy methodology that we had been following before",
    "start": "1223940",
    "end": "1231400"
  },
  {
    "text": "so these are some of the current backends that are already available super exciting super new as I said",
    "start": "1232400",
    "end": "1238460"
  },
  {
    "text": "before user space was deprecated from the entry Cube proxy but we've picked it",
    "start": "1238460",
    "end": "1243679"
  },
  {
    "text": "up here and coping can be used as kind of an A Drop in replacement like we have",
    "start": "1243679",
    "end": "1249080"
  },
  {
    "text": "no inclination that we're going to remove Cube proxy anytime soon or ever kind of like endpoints right but we want",
    "start": "1249080",
    "end": "1255980"
  },
  {
    "text": "to allow folks to kind of move forward as well so this is where we've come to so today we have an iptables back end",
    "start": "1255980",
    "end": "1263120"
  },
  {
    "text": "nft ipvs user space as I mentioned Windows Sig Windows is actually helping",
    "start": "1263120",
    "end": "1269600"
  },
  {
    "text": "train maintainers to maintain the windows back end for kaping at the moment I also have a really basic ebpf",
    "start": "1269600",
    "end": "1277280"
  },
  {
    "text": "POC kind of going off some psyllium principles so huge shout out to psyllium for",
    "start": "1277280",
    "end": "1282799"
  },
  {
    "text": "um giving us some ideas there and way more to come from everyone here right we",
    "start": "1282799",
    "end": "1288620"
  },
  {
    "text": "want to hear what kind of back ends y'all are looking for and we want to see what you think is going to happen next",
    "start": "1288620",
    "end": "1295039"
  },
  {
    "text": "that's kind of the goal another thing I really want to talk about with kaping that has been really fun for me personally is",
    "start": "1295039",
    "end": "1302120"
  },
  {
    "text": "it's a extremely new project so contribution is not weighed down by a",
    "start": "1302120",
    "end": "1308480"
  },
  {
    "text": "ton of core kubernetes bureaucracy and stuff it's moving fast we have a lot of",
    "start": "1308480",
    "end": "1314299"
  },
  {
    "text": "contributors who maybe have never pushed any code before and they're getting to kind of work into this ecosystem and the",
    "start": "1314299",
    "end": "1320900"
  },
  {
    "text": "community has been amazing so please please please get involved let's hear",
    "start": "1320900",
    "end": "1325940"
  },
  {
    "text": "from you these slides are going to be attached to our sched link so you can definitely find these links there but I",
    "start": "1325940",
    "end": "1332840"
  },
  {
    "text": "attached three just to get started Dan Winship who's in the crowd wrote a really good document on service proxy in",
    "start": "1332840",
    "end": "1340340"
  },
  {
    "text": "general I would start there it's a great place to start and then you can also get involved in both Cube proxy which is a",
    "start": "1340340",
    "end": "1347299"
  },
  {
    "text": "little more stable so there's less good first issues but dive in let's get involved we can all work there together",
    "start": "1347299",
    "end": "1352940"
  },
  {
    "text": "and then kaping there is a lot of good first issues um so check those out get involved reach",
    "start": "1352940",
    "end": "1361400"
  },
  {
    "text": "out and yeah let's have fun and build together",
    "start": "1361400",
    "end": "1365980"
  },
  {
    "text": "all right okay now last but not least we have some features that have been in development",
    "start": "1368120",
    "end": "1373640"
  },
  {
    "text": "and are reaching either the beta or the ga stage so first we have topology aware",
    "start": "1373640",
    "end": "1378860"
  },
  {
    "text": "hints I think everyone probably if you are on a cloud provider has experienced this problem where you have a deployment",
    "start": "1378860",
    "end": "1385280"
  },
  {
    "text": "that spans multiple zones and then when you create a service from them all of those endpoints kind of get swizzled",
    "start": "1385280",
    "end": "1391039"
  },
  {
    "text": "into just a single endpoint or a bunch of endpoint slices what topology aware hints does is actually use the topology",
    "start": "1391039",
    "end": "1398840"
  },
  {
    "text": "which is like the Zone information to kind of separate these so you can control where your traffic is going I",
    "start": "1398840",
    "end": "1404120"
  },
  {
    "text": "know that in a lot of cloud providers there's a charge when you send traffic across zones so this feature lets you",
    "start": "1404120",
    "end": "1410179"
  },
  {
    "text": "keep your traffic within zones as much as possible one thing you might be wondering is why",
    "start": "1410179",
    "end": "1415580"
  },
  {
    "text": "is it called hints it's that you know there is a trade-off between reliability and sort of localizing your traffic and",
    "start": "1415580",
    "end": "1422960"
  },
  {
    "text": "in in some ways the hints gives the system a bit of flexibility in terms of how to make that trade-off for you and",
    "start": "1422960",
    "end": "1429440"
  },
  {
    "text": "Rob what is the status it's currently beta but GAA",
    "start": "1429440",
    "end": "1436580"
  },
  {
    "text": "okay so you should be able to use it because it's a beta feature but hopefully you'll graduate to GA soon and",
    "start": "1436580",
    "end": "1442760"
  },
  {
    "text": "you'll be able to use it in all of your distributions um the next feature I think is like a pretty critical one so originally uh the",
    "start": "1442760",
    "end": "1450919"
  },
  {
    "text": "behavior of kubernetes and Cube proxy is that if you have external traffic policy local when the Pod turns into a",
    "start": "1450919",
    "end": "1458659"
  },
  {
    "text": "terminating State the Q proxy will basically treat the Pod because the Pod disappears from the endpoint so we'll",
    "start": "1458659",
    "end": "1463760"
  },
  {
    "text": "say hey the Pod is not there and then you may end up receiving traffic during this interval before the Pod actually",
    "start": "1463760",
    "end": "1469340"
  },
  {
    "text": "disappears that the traffic is dropped we notice that well if the pot is still",
    "start": "1469340",
    "end": "1475220"
  },
  {
    "text": "running on the Node it we should probably still send it traffic if we're receiving traffic to it so we should add",
    "start": "1475220",
    "end": "1481580"
  },
  {
    "text": "an extra State called terminating so that the Pod has some amount of time while it's still running to serve",
    "start": "1481580",
    "end": "1487820"
  },
  {
    "text": "traffic you might as well give it to the Pod you know if it rejects it then it'll be dropped anyways so this is what this",
    "start": "1487820",
    "end": "1494059"
  },
  {
    "text": "this proposal does it adds this terminating state which means that while your pods are shutting down if some",
    "start": "1494059",
    "end": "1501620"
  },
  {
    "text": "traffic lands on the Node we will deliver it instead of simply just dropping it we give the Pod just an",
    "start": "1501620",
    "end": "1507200"
  },
  {
    "text": "extra you know chance to kind of serve the traffic before dropping it and I think a lot of people who have used",
    "start": "1507200",
    "end": "1512900"
  },
  {
    "text": "external traffic policy local have experienced sort of this black hole state for example if they have like a",
    "start": "1512900",
    "end": "1518059"
  },
  {
    "text": "long quiescence time between the Pod going away and the endpoints getting updated",
    "start": "1518059",
    "end": "1524440"
  },
  {
    "text": "another feature that's coming is Network policy status so Network policy up until recently did not have a status field and",
    "start": "1524600",
    "end": "1532159"
  },
  {
    "text": "what we're finding is that as we're adding features to network policy that some providers may not actually Implement",
    "start": "1532159",
    "end": "1538580"
  },
  {
    "text": "everything some features are optional so what this does is it allows you to indicate for example your implementation",
    "start": "1538580",
    "end": "1544400"
  },
  {
    "text": "to indicate that hey you're using a feature that I may not necessarily support or I can give you more",
    "start": "1544400",
    "end": "1550279"
  },
  {
    "text": "information about what's going on with your network policy I think the primary driver of this with the port",
    "start": "1550279",
    "end": "1557000"
  },
  {
    "text": "range feature which may or may not be supported right now with all the implementations unless this lets you",
    "start": "1557000",
    "end": "1563000"
  },
  {
    "text": "when you you know use a configuration that uses poor ranges to say hey I actually don't support this just be",
    "start": "1563000",
    "end": "1569360"
  },
  {
    "text": "aware finally the last feature that is reaching the next stage of graduation is",
    "start": "1569360",
    "end": "1575600"
  },
  {
    "text": "internal traffic policy so I think that's a very very typical use case where you have a Daemon set",
    "start": "1575600",
    "end": "1582679"
  },
  {
    "text": "that you deployed everywhere and you want it to receive the local traffic from the node",
    "start": "1582679",
    "end": "1587840"
  },
  {
    "text": "internal traffic policy lets you basically say hey for this service send it to this no local Daemon rather",
    "start": "1587840",
    "end": "1595340"
  },
  {
    "text": "than spraying it across your cluster um I as you may know if you've been around for a while that originally this",
    "start": "1595340",
    "end": "1602120"
  },
  {
    "text": "was covered by the first version of the topology API proposal but since then",
    "start": "1602120",
    "end": "1608360"
  },
  {
    "text": "we've kind of said hey this is a very distinct use case we should kind of targeted with a targeted API versus just",
    "start": "1608360",
    "end": "1615200"
  },
  {
    "text": "like a super generic one finally I think this is the end of our presentation so thank you so much for",
    "start": "1615200",
    "end": "1621559"
  },
  {
    "text": "coming and I think if you take away one thing so if if all the slides suddenly disappear in your mind we we really",
    "start": "1621559",
    "end": "1627919"
  },
  {
    "text": "really appreciate feedback from the users and participation in the Sig it really helps us kind of shape what we're",
    "start": "1627919",
    "end": "1633620"
  },
  {
    "text": "looking at are we looking at the right thing are we looking at the wrong things so all of those QR codes you know you",
    "start": "1633620",
    "end": "1639320"
  },
  {
    "text": "can you should visit them if you're interested in any of the apis or features show up on the slack show up at",
    "start": "1639320",
    "end": "1645440"
  },
  {
    "text": "the Sig meeting make your voice heard thank you and thanks to all my presenters foreign",
    "start": "1645440",
    "end": "1653200"
  },
  {
    "text": "so we will be running with microphones for questions",
    "start": "1657279",
    "end": "1662480"
  },
  {
    "text": "here oh Tim wants it the bikes two mics",
    "start": "1662480",
    "end": "1669500"
  },
  {
    "text": "whoa sorry and to conclude I will drop them",
    "start": "1669500",
    "end": "1675700"
  },
  {
    "text": "any questions bring it on people",
    "start": "1675700",
    "end": "1680740"
  },
  {
    "text": "hi uh so uh I have a question about topology aware hints so since it was",
    "start": "1684140",
    "end": "1692299"
  },
  {
    "text": "introduced it replace the previous feature uh but right now it's it's really in a completely unusable state in",
    "start": "1692299",
    "end": "1699080"
  },
  {
    "text": "some topologies uh because it actually decides for the user what an imbalance",
    "start": "1699080",
    "end": "1705080"
  },
  {
    "text": "is within the cluster and does not have the user an opportunity to say whether that's okay or not so let's say for",
    "start": "1705080",
    "end": "1711500"
  },
  {
    "text": "example that I have a workload in my cluster I have an instance group or node",
    "start": "1711500",
    "end": "1716539"
  },
  {
    "text": "group that's running on spot and I don't have many control about the zones where it runs but I don't care because the the",
    "start": "1716539",
    "end": "1724100"
  },
  {
    "text": "load balance the services that I want to load balance are not affected by those",
    "start": "1724100",
    "end": "1729799"
  },
  {
    "text": "asgs so the the the feature will simply never put hints on my services",
    "start": "1729799",
    "end": "1734840"
  },
  {
    "text": "regardless of whether they are running there or not there was some change in",
    "start": "1734840",
    "end": "1741320"
  },
  {
    "text": "134 to actually exclude the control plane notes by placing you can filter on the label but there's no way that I can",
    "start": "1741320",
    "end": "1747980"
  },
  {
    "text": "configure a label in any other nodes to actually exclude it from from that as well so are you planning to make that a",
    "start": "1747980",
    "end": "1754820"
  },
  {
    "text": "little bit more configurable for when it reaches the the stable release because",
    "start": "1754820",
    "end": "1760820"
  },
  {
    "text": "right now in most of the Clusters that I do have in production it just cannot be used unless I scale the the pods serving",
    "start": "1760820",
    "end": "1768320"
  },
  {
    "text": "the service like by a factor of 30 or 40 so that the the calculation on the",
    "start": "1768320",
    "end": "1775340"
  },
  {
    "text": "hard-coded value is good yeah that's a that's a really good question uh we're we've had lots and",
    "start": "1775340",
    "end": "1782059"
  },
  {
    "text": "lots of conversations about topology we've gone back and forth with a few different approaches uh it's really hard",
    "start": "1782059",
    "end": "1788539"
  },
  {
    "text": "to get right uh and I appreciate your feedback we're we're seeing a lot that the the current approach really",
    "start": "1788539",
    "end": "1794779"
  },
  {
    "text": "struggles without a large number of endpoints like like you're showing right uh and we've you know one of the common",
    "start": "1794779",
    "end": "1801080"
  },
  {
    "text": "feature requests we've had is can you just you know prefer the same Zone if there's any endpoints in that same Zone",
    "start": "1801080",
    "end": "1807440"
  },
  {
    "text": "can you route it there that seems to work for a number of use cases but the reason the default the default approach",
    "start": "1807440",
    "end": "1813919"
  },
  {
    "text": "doesn't do that is because it's very scary right the the idea that you can overload traffic to a specific Zone you",
    "start": "1813919",
    "end": "1820880"
  },
  {
    "text": "know if there's you know all your traffic is originating from one zone you only have one endpoint there and your other zones are where all the new",
    "start": "1820880",
    "end": "1826820"
  },
  {
    "text": "endpoints are getting scheduled you know this is this is really a cross Sig problem where we we also need to work",
    "start": "1826820",
    "end": "1834020"
  },
  {
    "text": "with auto scaling scheduling Etc to to help make this a little bit easier so that if all your traffic is coming from",
    "start": "1834020",
    "end": "1840799"
  },
  {
    "text": "one place it also you know new pods spin up in that place uh it's a complex thing",
    "start": "1840799",
    "end": "1846399"
  },
  {
    "text": "we are working on improvements and really really value additional use cases",
    "start": "1846399",
    "end": "1852620"
  },
  {
    "text": "and and if if their things are not working like this like I'm trying to gather all the use cases that we're",
    "start": "1852620",
    "end": "1857779"
  },
  {
    "text": "missing right now and figure out how we represent that how we solve those problems so just a a quick thing to add",
    "start": "1857779",
    "end": "1865520"
  },
  {
    "text": "that the defaults are are perfectly sensible so it makes sense all the decisions they can actually put them in",
    "start": "1865520",
    "end": "1871700"
  },
  {
    "text": "place I think the only thing that's lacking is that it's not a default it's a hard requirement because there's no",
    "start": "1871700",
    "end": "1878059"
  },
  {
    "text": "way to configure it or to change the behavior if we need to yeah no you're right it's always this balance of trying",
    "start": "1878059",
    "end": "1884779"
  },
  {
    "text": "to give you know trying to do what's best for many use cases and not give too",
    "start": "1884779",
    "end": "1890059"
  },
  {
    "text": "many knobs we were hoping oh we can do this without any knobs and I think we probably need some but trying to limit",
    "start": "1890059",
    "end": "1896480"
  },
  {
    "text": "the number we provide you know we're trying to make this as you know as need as minimal configuration as possible",
    "start": "1896480",
    "end": "1902539"
  },
  {
    "text": "while still working for most use cases that's a tough balance but understanding those use cases helps a lot so do you",
    "start": "1902539",
    "end": "1908840"
  },
  {
    "text": "have a GitHub issue that tracks what you're looking for probably okay yeah okay that would be",
    "start": "1908840",
    "end": "1915919"
  },
  {
    "text": "great more questions who who's got some",
    "start": "1915919",
    "end": "1923440"
  },
  {
    "text": "hello when I create a load balancer and my backend for this load balancer inside",
    "start": "1927399",
    "end": "1932899"
  },
  {
    "text": "the same cluster there will be a shortcut traffic but I want to go through the load",
    "start": "1932899",
    "end": "1939020"
  },
  {
    "text": "balancer how can I do it I think this depends on the cni and",
    "start": "1939020",
    "end": "1945320"
  },
  {
    "text": "environment as I recall or yeah go ahead Antonio",
    "start": "1945320",
    "end": "1950919"
  },
  {
    "text": "that implementation specific in Q proxy you get that behavior so the traffic",
    "start": "1952039",
    "end": "1957620"
  },
  {
    "text": "shortcuts because [Music] I mean is when a part in a cluster want to",
    "start": "1957620",
    "end": "1965000"
  },
  {
    "text": "reach the service you can decide or I send it back and the load balances send it again to the",
    "start": "1965000",
    "end": "1971659"
  },
  {
    "text": "cluster or you can say I know that the service is in the cluster and I send it directly the problem is that there is no",
    "start": "1971659",
    "end": "1977779"
  },
  {
    "text": "solution to fit or you know there are some load balances that doesn't work and this was a decision for people's",
    "start": "1977779",
    "end": "1984559"
  },
  {
    "text": "happy table right yeah I was just gonna say what why do you want that behavior because Q proxy",
    "start": "1984559",
    "end": "1989659"
  },
  {
    "text": "will load balance it itself so example we should be extermination",
    "start": "1989659",
    "end": "1994880"
  },
  {
    "text": "for example I want to terminate https on load bouncer I don't want shortcut to my",
    "start": "1994880",
    "end": "2000640"
  },
  {
    "text": "service which has no termination okay so that there is a a cap or",
    "start": "2000640",
    "end": "2007840"
  },
  {
    "text": "something that was open that started this work and then got sort of abandoned I picked it up but I've been a little",
    "start": "2007840",
    "end": "2014080"
  },
  {
    "text": "busy to finish it so it is sort of something in progress where the way we've described it is uh IP mode for",
    "start": "2014080",
    "end": "2021159"
  },
  {
    "text": "load balancers so you can say this IP mode is a virtual IP which means you you really do have to Short Circuit it or",
    "start": "2021159",
    "end": "2026500"
  },
  {
    "text": "this mode is a proxy which you don't want to Short Circuit it so work in progress but not done",
    "start": "2026500",
    "end": "2035340"
  },
  {
    "text": "um with the network policy stuff I'm really excited to see the kind of like cluster-wide Network policies because this has been a real pain point for us",
    "start": "2038980",
    "end": "2044799"
  },
  {
    "text": "I'm kind of coming from a more network security background one of the things that I've really struggled with with the",
    "start": "2044799",
    "end": "2050560"
  },
  {
    "text": "API generally is like getting a complete understanding about all the policies that apply to something and like trying",
    "start": "2050560",
    "end": "2057460"
  },
  {
    "text": "to understand and I feel like that's only going to get more complicated now that I've got different tiers of policy and you were talking about how like the",
    "start": "2057460",
    "end": "2063820"
  },
  {
    "text": "cluster ones rank first which I guess makes sense but then you need like exceptions for specific things and it's going to become a mess so like do you",
    "start": "2063820",
    "end": "2071378"
  },
  {
    "text": "guys kind of expect that to be something that like external tools try to solve is",
    "start": "2071379",
    "end": "2076419"
  },
  {
    "text": "that something that you guys think about kind of like what's your thinking about that that's a really really great question so we actually did a talk fully",
    "start": "2076419",
    "end": "2083740"
  },
  {
    "text": "on admin Network policy as part of the contributor Summit so please go check that out it'll answer some of those",
    "start": "2083740",
    "end": "2088898"
  },
  {
    "text": "questions the short gist of it is yeah we're making it really complicated right we're going to have less users with the",
    "start": "2088899",
    "end": "2096700"
  },
  {
    "text": "these admin policies so that'll be easier but how they interact with existing Network policy and how those",
    "start": "2096700",
    "end": "2102880"
  },
  {
    "text": "two new objects admin our policy and Baseline Network policy interact with each other is complicated so as part of",
    "start": "2102880",
    "end": "2109900"
  },
  {
    "text": "our cap and as part of our Charter we've put in we are going to be be building developer tooling like it is key we are",
    "start": "2109900",
    "end": "2115359"
  },
  {
    "text": "going to be building conformance testing and developer tooling like we don't want this to roll out and just be confusing",
    "start": "2115359",
    "end": "2120820"
  },
  {
    "text": "for everyone because that was one of our main problems with network policy in the first place no hate it was an amazing API for developers but admins need more",
    "start": "2120820",
    "end": "2128200"
  },
  {
    "text": "so it's it's definitely on the roadmap please come and help we need help",
    "start": "2128200",
    "end": "2134079"
  },
  {
    "text": "hello related to ANP currently we have some applications or operators which are",
    "start": "2134079",
    "end": "2140220"
  },
  {
    "text": "cluster scoped namespace scoped right cluster scoped can listen to like",
    "start": "2140220",
    "end": "2147640"
  },
  {
    "text": "all the namespaces it can talk to all the namespaces and the ANP policies you",
    "start": "2147640",
    "end": "2153460"
  },
  {
    "text": "are saying namespace like they can talk to each other right",
    "start": "2153460",
    "end": "2158500"
  },
  {
    "text": "are we so it'll allow you it's very flexible so adminar policy is a new object that will",
    "start": "2158500",
    "end": "2165220"
  },
  {
    "text": "allow you to select everything in the cluster as a whole or pods in a namespace and you also be still be able",
    "start": "2165220",
    "end": "2173440"
  },
  {
    "text": "to use Network policy like you always have you'll just be able to define unique levels of enforcement right so",
    "start": "2173440",
    "end": "2181619"
  },
  {
    "text": "for those applications we can no need of a cluster scope then just a regular we",
    "start": "2181619",
    "end": "2188320"
  },
  {
    "text": "can just deploy and then apply these a and PS so that the operator running on",
    "start": "2188320",
    "end": "2194079"
  },
  {
    "text": "namespace yake can reach out to all the namespaces yes you should be able to",
    "start": "2194079",
    "end": "2199599"
  },
  {
    "text": "express something that can that will be slowly going away then yep and we have a list of use cases on our website which",
    "start": "2199599",
    "end": "2206020"
  },
  {
    "text": "the QR code was for and in our talk from contributor summit we're looking to",
    "start": "2206020",
    "end": "2211660"
  },
  {
    "text": "expand on those lists of use cases for V1 Alpha 2 so get involved again we need",
    "start": "2211660",
    "end": "2217000"
  },
  {
    "text": "to hear from you just just to be clear it's not making Network policy go away it's answering a different question so",
    "start": "2217000",
    "end": "2224500"
  },
  {
    "text": "the example that I like to use the best I have a cluster and I have two tenants there's Coke and there's Pepsi right",
    "start": "2224500",
    "end": "2231880"
  },
  {
    "text": "Coke has a bunch of namespaces Pepsi has a bunch of namespaces admin Network policy lets me say all the namespaces",
    "start": "2231880",
    "end": "2238780"
  },
  {
    "text": "for tenant Coke can talk to themselves and all the namespaces pretended Pepsi can talk to themselves but they can",
    "start": "2238780",
    "end": "2244900"
  },
  {
    "text": "never talk to each other no matter what the user does and then within those namespaces they can use Network policy",
    "start": "2244900",
    "end": "2251200"
  },
  {
    "text": "to define the correct behavior of their applications so there's a two different questions two",
    "start": "2251200",
    "end": "2256960"
  },
  {
    "text": "different roles",
    "start": "2256960",
    "end": "2259560"
  },
  {
    "text": "hi um so I have a quick question on Coupe proxy and uh Coupe proxy NG",
    "start": "2271119",
    "end": "2278560"
  },
  {
    "text": "um and just basically about the improvements that come with it so from my understanding uh it looks really promising in terms of you know new back",
    "start": "2278560",
    "end": "2285880"
  },
  {
    "text": "ends that can happen but what about existing back-ends so let's Samurai and kubrocs see with iptables I'm happy with iptables is there any reason for me to",
    "start": "2285880",
    "end": "2292900"
  },
  {
    "text": "run kooproxy NG right now with iptables it provides a more flexible deployment",
    "start": "2292900",
    "end": "2298780"
  },
  {
    "text": "model today if you want so acute proxy is a Daemon set right there's a burnout",
    "start": "2298780",
    "end": "2304420"
  },
  {
    "text": "agent and in compaying today you can run it and not like that you can run one",
    "start": "2304420",
    "end": "2309520"
  },
  {
    "text": "Central ping agent that talks to many nodes so it allows you in really high scale scenarios to take some pressure",
    "start": "2309520",
    "end": "2315940"
  },
  {
    "text": "off the API server that would be the main selling point I would say okay thank you",
    "start": "2315940",
    "end": "2321780"
  },
  {
    "text": "have all of the cube proxies you won't have all of the Q products is actually connecting to the API server as well and",
    "start": "2323560",
    "end": "2329619"
  },
  {
    "text": "watching all of the eight points and the endpoint slides is even if the endpoint slices they solve this problem right so",
    "start": "2329619",
    "end": "2334960"
  },
  {
    "text": "you have just one control plane and that's all yep I also had a question about uh keeping",
    "start": "2334960",
    "end": "2343060"
  },
  {
    "text": "um whatever you want to call it yeah we're in process I like kaping",
    "start": "2343060",
    "end": "2349359"
  },
  {
    "text": "yes the new qctl discussion um how does it relate to or is there any",
    "start": "2349359",
    "end": "2355660"
  },
  {
    "text": "relation between like say supporting ebpf and then maybe Network policy getting some enhancements out of that",
    "start": "2355660",
    "end": "2362140"
  },
  {
    "text": "like being able to write layer 7 policies or something um I don't think that kaping",
    "start": "2362140",
    "end": "2369099"
  },
  {
    "text": "architecture necessarily relates to like a new type of network policy that is another thing if you want to work on a",
    "start": "2369099",
    "end": "2374920"
  },
  {
    "text": "new network policy come talk to us again we need help um it's more about making back ends",
    "start": "2374920",
    "end": "2380740"
  },
  {
    "text": "easier to write so one day it could apply to network policy back-ends maybe but not necessarily about like new",
    "start": "2380740",
    "end": "2386320"
  },
  {
    "text": "policy types okay cool hi um I don't have a use case for this but does Gateway class support arbitrary",
    "start": "2386320",
    "end": "2394060"
  },
  {
    "text": "layer 4 protocols Rob go ahead sure uh so yeah",
    "start": "2394060",
    "end": "2400839"
  },
  {
    "text": "so Gateway for L4 is very much still an alpha and experimental but by by",
    "start": "2400839",
    "end": "2406599"
  },
  {
    "text": "definition we support TCP and UDP today uh one of the key things with this API",
    "start": "2406599",
    "end": "2411700"
  },
  {
    "text": "you may have noticed that we had a few different route types by default but",
    "start": "2411700",
    "end": "2417520"
  },
  {
    "text": "anyone can plug and play their entirely own custom protocol as a different route type using the same pattern in the rest",
    "start": "2417520",
    "end": "2424420"
  },
  {
    "text": "of the API just plugs in perfectly so if you want entirely new route types and protocols that would work uh",
    "start": "2424420",
    "end": "2432099"
  },
  {
    "text": "what kind of L4 protocols were you thinking of I don't know like oh I really don't have",
    "start": "2432099",
    "end": "2438760"
  },
  {
    "text": "a use case for this yet but there isn't there some stuff with um like something to do with HTTP HTTP 3",
    "start": "2438760",
    "end": "2445359"
  },
  {
    "text": "where you can even replace the layer four I don't know there's something that I'm",
    "start": "2445359",
    "end": "2451000"
  },
  {
    "text": "that yeah there are a number of tunneling protocols so right now in terms of the Upstream project we have",
    "start": "2451000",
    "end": "2458200"
  },
  {
    "text": "TLS UDP and TCP on The L4 and actually we're trying hard to kind of get",
    "start": "2458200",
    "end": "2464320"
  },
  {
    "text": "experience on those so we can graduate them uh you know into like the from experimental to like beta",
    "start": "2464320",
    "end": "2471640"
  },
  {
    "text": "um and then of course HTTP is like a like the most common one so that's that's the one we know the most about so",
    "start": "2471640",
    "end": "2476859"
  },
  {
    "text": "that's the one that's kind of moved the furthest along but if you have like",
    "start": "2476859",
    "end": "2482200"
  },
  {
    "text": "I'm trying to think of mqtt like you're free to kind of implement sctp oh SMTP",
    "start": "2482200",
    "end": "2488920"
  },
  {
    "text": "okay tpsp",
    "start": "2488920",
    "end": "2492460"
  },
  {
    "text": "purely selfishly I'm hoping The L4 gateways make this service API less",
    "start": "2496180",
    "end": "2501460"
  },
  {
    "text": "important because a lot of the service API Is Crafty and old and broken",
    "start": "2501460",
    "end": "2509680"
  },
  {
    "text": "and should be taken out and shot love it yeah and now we're done with questions",
    "start": "2509680",
    "end": "2515440"
  },
  {
    "text": "actually so we're out of time sorry if you want to stick around then you know come talk stick around all",
    "start": "2515440",
    "end": "2523000"
  },
  {
    "text": "this up front there's a lot of Cygnet folks here we'll hang out for a little while if people want to talk thanks for everybody [Applause]",
    "start": "2523000",
    "end": "2531539"
  }
]