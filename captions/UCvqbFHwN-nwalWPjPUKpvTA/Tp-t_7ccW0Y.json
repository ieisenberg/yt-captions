[
  {
    "text": "hello Salu welcome and thanks to coming our session securing the supply chain with",
    "start": "520",
    "end": "7640"
  },
  {
    "text": "six store artifact signatures at scale I'm Dimitri sain an engineer at",
    "start": "7640",
    "end": "14879"
  },
  {
    "text": "Yahoo security team working on the companywide security infrastructure uh I'm Yung I also work",
    "start": "14879",
    "end": "21680"
  },
  {
    "text": "for the Yahoo security team our security team is known as the paranoid and as the",
    "start": "21680",
    "end": "27920"
  },
  {
    "text": "top of the slices are uh logo uh we are very excited to be",
    "start": "27920",
    "end": "36040"
  },
  {
    "text": "here the topic we are going to talk about is something that concerns all the kubernetes users kubernetes has lots of",
    "start": "36520",
    "end": "43920"
  },
  {
    "text": "moving parts and infrastructure but in the end it's about Parts running containers that do the useful work and",
    "start": "43920",
    "end": "50559"
  },
  {
    "text": "these containers are started off oci or DOA images the big question is how do we",
    "start": "50559",
    "end": "56440"
  },
  {
    "text": "know how can we be sure and how to verify that those images are really the ones that we intend to run and not some",
    "start": "56440",
    "end": "63640"
  },
  {
    "text": "malicious falsification and also how to do such verification for all of possibly",
    "start": "63640",
    "end": "68920"
  },
  {
    "text": "millions of images we are deploying in this talk we want to share",
    "start": "68920",
    "end": "74960"
  },
  {
    "text": "what we have done trying to answer those questions and here's the",
    "start": "74960",
    "end": "80920"
  },
  {
    "text": "agenda supply chain security is about tracing the things we use from their",
    "start": "83280",
    "end": "88759"
  },
  {
    "text": "region and throughout their existence it may be best to illustrate the dangers",
    "start": "88759",
    "end": "94880"
  },
  {
    "text": "and risks with a couple of horror stories how things can go terribly wrong",
    "start": "94880",
    "end": "100159"
  },
  {
    "text": "in this area supply chain security concerns not",
    "start": "100159",
    "end": "105439"
  },
  {
    "text": "only software a literally deadly example is the case with stylenl poisonings when",
    "start": "105439",
    "end": "112000"
  },
  {
    "text": "the capsules laced with C were placed on the store shelves as a reaction to this",
    "start": "112000",
    "end": "118200"
  },
  {
    "text": "the company Johnson and Johnson introduced temper evident packaging for all its over-the-counter medications and",
    "start": "118200",
    "end": "125920"
  },
  {
    "text": "they were able to overcome the crisis and win back the users",
    "start": "125920",
    "end": "131480"
  },
  {
    "text": "trust in the software area the solar winds attack isn't famous hackers",
    "start": "131480",
    "end": "137080"
  },
  {
    "text": "compromised the software update mechanism and new versions of the popular oron Network management software",
    "start": "137080",
    "end": "144200"
  },
  {
    "text": "brought militia code to government agencies and major corporations one more",
    "start": "144200",
    "end": "149400"
  },
  {
    "text": "example the Cod cough incident Intruders were able to modify the bash uploader",
    "start": "149400",
    "end": "155239"
  },
  {
    "text": "script and that resulted in compromise of code and credentials of code cough users in their C CI setup and that went",
    "start": "155239",
    "end": "163440"
  },
  {
    "text": "undetected for a couple of months the software supply chain attacks",
    "start": "163440",
    "end": "169440"
  },
  {
    "text": "exploit the time gap between the generation of software artifact and its usage the generation can be for example",
    "start": "169440",
    "end": "176879"
  },
  {
    "text": "an oci image built in a CI pipeline which is then stored in a registry",
    "start": "176879",
    "end": "181959"
  },
  {
    "text": "potentially for a very long time and its consumption would be deployment in a kubernetes clusters this time the",
    "start": "181959",
    "end": "189680"
  },
  {
    "text": "intermediate time of storage can be between seconds and multiple years and",
    "start": "189680",
    "end": "194959"
  },
  {
    "text": "there is a nonzero risk of modification of malicious in sub substitution",
    "start": "194959",
    "end": "202799"
  },
  {
    "text": "intrusion so the started effects may be modified with some other version so even",
    "start": "202799",
    "end": "209319"
  },
  {
    "text": "if you make consider this risk small we must do our best to prevent such attacks",
    "start": "209319",
    "end": "215480"
  },
  {
    "text": "cryptographic digital signatures are classical mitigation for them so let's explore them in more",
    "start": "215480",
    "end": "221200"
  },
  {
    "text": "detail typically the public key cryptography is used for digital signatures you sign theact with the",
    "start": "221200",
    "end": "227560"
  },
  {
    "text": "public with the private key and verify using the public one you need to provide the public key to all the points where",
    "start": "227560",
    "end": "234319"
  },
  {
    "text": "the signatures are verified for example to all the kubernetes Clusters and",
    "start": "234319",
    "end": "239799"
  },
  {
    "text": "critically important you need to ensure that the private key is never ever",
    "start": "239799",
    "end": "245239"
  },
  {
    "text": "compromised otherwise attackers can use the stolen key to sign maliciously falsified artifacts and those signatures",
    "start": "245239",
    "end": "252360"
  },
  {
    "text": "will be as good as the real ones the private Key Management is a hard problem",
    "start": "252360",
    "end": "257639"
  },
  {
    "text": "especially when you need to use it at Large Scale before we talk about what we have",
    "start": "257639",
    "end": "263240"
  },
  {
    "text": "done with digital signature and oci images a few words about our world and our environment T we have several",
    "start": "263240",
    "end": "270120"
  },
  {
    "text": "thousand developers over 60,000 daily builds more than 700 kubernetes clusters",
    "start": "270120",
    "end": "276800"
  },
  {
    "text": "and over 100,000 pots and about half of them are getting deployed or redeployed",
    "start": "276800",
    "end": "282960"
  },
  {
    "text": "every 24 hours and every deployment is a verification event we are using different public",
    "start": "282960",
    "end": "290479"
  },
  {
    "text": "Cloud providers AWS and gcp plus have on premise clusters the oci images are",
    "start": "290479",
    "end": "297880"
  },
  {
    "text": "produced by do podman and Builder Each of which has some differences in the way they sign the images our build system is",
    "start": "297880",
    "end": "306919"
  },
  {
    "text": "screwdriver which is a cicd platform built and open sourced by Yahoo but we",
    "start": "306919",
    "end": "312880"
  },
  {
    "text": "also have some sprinkles of yankin and GitHub actions there are lots of",
    "start": "312880",
    "end": "318080"
  },
  {
    "text": "different software artifacts produced and used but like in our project we want to concentrate here primarily on the",
    "start": "318080",
    "end": "324639"
  },
  {
    "text": "digital signatures of the oci or doer images",
    "start": "324639",
    "end": "330360"
  },
  {
    "text": "we did have an existing image signing system but it was far from ideal it used",
    "start": "330360",
    "end": "336720"
  },
  {
    "text": "public private key signing and verification but dependent on a long LIF static pgp key even with the maximal",
    "start": "336720",
    "end": "344560"
  },
  {
    "text": "security around it having such a uber key is not the best for security and",
    "start": "344560",
    "end": "350280"
  },
  {
    "text": "also makes it difficult to rotate or roke also we have a big custom database",
    "start": "350280",
    "end": "356240"
  },
  {
    "text": "and an API server to accept store and provide on request those signatures",
    "start": "356240",
    "end": "361960"
  },
  {
    "text": "almost a custom registry for image signatures plus some custom tooling to make it all work I wouldn't be surprised",
    "start": "361960",
    "end": "369199"
  },
  {
    "text": "if some of you have similar setups at your workplaces it works but has",
    "start": "369199",
    "end": "374400"
  },
  {
    "text": "security deficiencies is cumbersome and far from ideal so we started to look for",
    "start": "374400",
    "end": "380319"
  },
  {
    "text": "Alternatives and Industry best practices we have found a Sixto project",
    "start": "380319",
    "end": "386000"
  },
  {
    "text": "also through cncf security conts the six store is a project specifically focused",
    "start": "386000",
    "end": "391960"
  },
  {
    "text": "on digital signatures and their verifications it's an open source supported by the open source security",
    "start": "391960",
    "end": "398680"
  },
  {
    "text": "Foundation it's V neutral works with different clouds and is widely accepted",
    "start": "398680",
    "end": "404280"
  },
  {
    "text": "in the industry six store stands out for its innovative use of fmal keys enabling",
    "start": "404280",
    "end": "411120"
  },
  {
    "text": "so-called keyless signing we chose to use this new technique because it helped",
    "start": "411120",
    "end": "416360"
  },
  {
    "text": "to solve the security gaps and reduce the cost of our existing signing",
    "start": "416360",
    "end": "422840"
  },
  {
    "text": "system first instead of signing all images with one static key this method",
    "start": "422840",
    "end": "428800"
  },
  {
    "text": "enables to sign each image with a unique fmrl private key so there are no key",
    "start": "428800",
    "end": "434120"
  },
  {
    "text": "rotations or evocations necessary second there are no need for a dedicated database to store signatures",
    "start": "434120",
    "end": "441400"
  },
  {
    "text": "anymore because they are saved directly in the registry and finally we can use",
    "start": "441400",
    "end": "446800"
  },
  {
    "text": "widely accepted battle tested tools supported by a large community with all",
    "start": "446800",
    "end": "452080"
  },
  {
    "text": "the benefits of the open source I'll hand over to yonga to explain the keyless signing and what you have done",
    "start": "452080",
    "end": "458319"
  },
  {
    "text": "with it in more detail thanks demitry so how does kless signing work",
    "start": "458319",
    "end": "465159"
  },
  {
    "text": "it is not hard to be understood actually it just involve five different entities",
    "start": "465159",
    "end": "471120"
  },
  {
    "text": "signer oide registry or provider certificate authority and timetime",
    "start": "471120",
    "end": "477240"
  },
  {
    "text": "authority let's say you are the signer Alis and you have a image in the OSI",
    "start": "477240",
    "end": "483080"
  },
  {
    "text": "registry to start signing you need something called oidc ID",
    "start": "483080",
    "end": "488159"
  },
  {
    "text": "token this token basic basically proves that you are Lis getting this token may involve",
    "start": "488159",
    "end": "495879"
  },
  {
    "text": "different steps depending on the IDC provider you are using you might ask you",
    "start": "495879",
    "end": "501360"
  },
  {
    "text": "for your username and password or require you to use multifactor authentication but no matter what once",
    "start": "501360",
    "end": "508599"
  },
  {
    "text": "you go through this process you will have the IDC ID token in",
    "start": "508599",
    "end": "515719"
  },
  {
    "text": "hand the next step is to generate a keare locally then you send the certificate",
    "start": "516360",
    "end": "523680"
  },
  {
    "text": "signing request with public key along with the O IDC ID token to the",
    "start": "523680",
    "end": "529279"
  },
  {
    "text": "certificate Authority in return you receive a image",
    "start": "529279",
    "end": "534440"
  },
  {
    "text": "signing certificate this certificate not only proves that you you Alis possess the",
    "start": "534440",
    "end": "541200"
  },
  {
    "text": "corresponding key pair but also has a short validity there's no standard regarding",
    "start": "541200",
    "end": "548959"
  },
  {
    "text": "the length of the validity validity period typically the shorter the better",
    "start": "548959",
    "end": "554519"
  },
  {
    "text": "to be spe to be specific in this presentation let's assume it is 15",
    "start": "554519",
    "end": "561959"
  },
  {
    "text": "minutes and you have to sign the image right away within this time frame",
    "start": "561959",
    "end": "568200"
  },
  {
    "text": "because all image signatures generated after this 15 minutes will be considered",
    "start": "568200",
    "end": "575399"
  },
  {
    "text": "invalid this is a great security Improvement because even if an C even if",
    "start": "575399",
    "end": "581279"
  },
  {
    "text": "an attacker somehow gots your private key it doesn't have too much time to do anything",
    "start": "581279",
    "end": "588200"
  },
  {
    "text": "bad and after this step we no longer need this private key we can safely discard",
    "start": "588200",
    "end": "594640"
  },
  {
    "text": "it this is why this whole process is called keyless signing it doesn't means",
    "start": "594640",
    "end": "600720"
  },
  {
    "text": "signing without private Keys it means signing with shortlived private keys and",
    "start": "600720",
    "end": "605839"
  },
  {
    "text": "you do not need to need to worry about ke measurements and now you might be",
    "start": "605839",
    "end": "612720"
  },
  {
    "text": "wondering how do we know when the signature was generated like why we know",
    "start": "612720",
    "end": "619920"
  },
  {
    "text": "the signature was generated well the CT was still valid well that is achieved by the temp",
    "start": "619920",
    "end": "626200"
  },
  {
    "text": "stem Authority we send this signature to the",
    "start": "626200",
    "end": "631240"
  },
  {
    "text": "time stamp Authority and in return it provides you a cryptographically signed time stamp this time stamp directly",
    "start": "631240",
    "end": "639160"
  },
  {
    "text": "proves that this signature existed at the current time",
    "start": "639160",
    "end": "644200"
  },
  {
    "text": "T this plays a crucial role during the verification process because only with",
    "start": "644200",
    "end": "649560"
  },
  {
    "text": "this time stamp can we know when the signature is generated if we find the generation time",
    "start": "649560",
    "end": "655920"
  },
  {
    "text": "T is outside the certificate validity you should not accept the",
    "start": "655920",
    "end": "662680"
  },
  {
    "text": "signature okay now you are holding three things on your hand first is image",
    "start": "663240",
    "end": "668839"
  },
  {
    "text": "signing t uh signing thir and the signature and the time",
    "start": "668839",
    "end": "675079"
  },
  {
    "text": "stamp finally what you need to do is to WRA the three things into a new image",
    "start": "675079",
    "end": "680519"
  },
  {
    "text": "and upload it to the oide registry this is how six stor",
    "start": "680519",
    "end": "686880"
  },
  {
    "text": "saves signatures to o Registries I know it looks big on the",
    "start": "686880",
    "end": "693720"
  },
  {
    "text": "slid but actually it's just hundred of bites which is",
    "start": "693720",
    "end": "698800"
  },
  {
    "text": "small also the signature image is taged following a naming convention so that",
    "start": "698800",
    "end": "704040"
  },
  {
    "text": "the verifier can easily link between an image and this uh signature",
    "start": "704040",
    "end": "710560"
  },
  {
    "text": "image during the verification process apart from the image that got signed and",
    "start": "711880",
    "end": "718279"
  },
  {
    "text": "its signature image we also need two certificate chain the first one is called",
    "start": "718279",
    "end": "724920"
  },
  {
    "text": "certificate Authority say third chain it is a chain that starts from the",
    "start": "724920",
    "end": "731240"
  },
  {
    "text": "immediate say that issue the uh image sign insert all the way up to the",
    "start": "731240",
    "end": "737519"
  },
  {
    "text": "trusted root say it helps us verify if the uh image",
    "start": "737519",
    "end": "743839"
  },
  {
    "text": "sign inert is trusted similarly we also need the temp",
    "start": "743839",
    "end": "750360"
  },
  {
    "text": "stamp Authority TSA search CH which is used to verify the temp",
    "start": "750360",
    "end": "756680"
  },
  {
    "text": "stamp if everything checks out we can confirm that the image was actually",
    "start": "757360",
    "end": "762440"
  },
  {
    "text": "signed by Alice when the SE was still",
    "start": "762440",
    "end": "767720"
  },
  {
    "text": "valid however there are cases where verification might fail for example if we only accept",
    "start": "767800",
    "end": "775560"
  },
  {
    "text": "images signed by Bob but not Alis it will be con a",
    "start": "775560",
    "end": "780839"
  },
  {
    "text": "failure or if you find the image was signed when the thir was expired",
    "start": "780839",
    "end": "787519"
  },
  {
    "text": "verification would fail too we will have a demo about those",
    "start": "787519",
    "end": "792600"
  },
  {
    "text": "cases later but regardless success or failure this is how K signing and",
    "start": "792600",
    "end": "798440"
  },
  {
    "text": "verification work it provides us with enhanced",
    "start": "798440",
    "end": "804560"
  },
  {
    "text": "security let's go back to this diagram so if you if you want to set up a private keyless signing",
    "start": "805519",
    "end": "812040"
  },
  {
    "text": "system you just need to figure out who is going to be your signer oride registry or this provider sa and",
    "start": "812040",
    "end": "821360"
  },
  {
    "text": "TSA in the standard setup of course the signer is cosign and for show serves as",
    "start": "821360",
    "end": "827560"
  },
  {
    "text": "certificate Authority and as a record or temp t uh six door TSA ACC As Time",
    "start": "827560",
    "end": "835959"
  },
  {
    "text": "Authority however you are not limited to those options think of this architecture like uh Lego",
    "start": "835959",
    "end": "843759"
  },
  {
    "text": "building blocks you can swp out any components according to your needs and",
    "start": "843759",
    "end": "850320"
  },
  {
    "text": "preference for example at Yahoo we have our established authentication system",
    "start": "850320",
    "end": "857839"
  },
  {
    "text": "Essence which is a CNF sandbox project you can check it out on the",
    "start": "857839",
    "end": "863639"
  },
  {
    "text": "GitHub uh Essence can be both o ID provider and andc",
    "start": "863639",
    "end": "870920"
  },
  {
    "text": "and subber is our signer Alice in the picture as dimitry mentioned it is our",
    "start": "870920",
    "end": "877560"
  },
  {
    "text": "CI system and producer of OI images like Ence it is also open source",
    "start": "877560",
    "end": "883880"
  },
  {
    "text": "and you can find it on the CF Cloud native landscape",
    "start": "883880",
    "end": "890000"
  },
  {
    "text": "website uh and yes we run cosign on the uh",
    "start": "890000",
    "end": "895959"
  },
  {
    "text": "screwdriver the only missing part for us is uh the Tamm Authority so we launch",
    "start": "896519",
    "end": "903279"
  },
  {
    "text": "the six door TSA internally compared to rord which",
    "start": "903279",
    "end": "909600"
  },
  {
    "text": "contains my circle radius and web services 6 TS is a much simpler State",
    "start": "909600",
    "end": "917600"
  },
  {
    "text": "stateless service it allows us to launch the internal skill signing system as the",
    "start": "917600",
    "end": "924959"
  },
  {
    "text": "lowest cost but record as a transpar log indeed provides us more security features so we",
    "start": "924959",
    "end": "932800"
  },
  {
    "text": "are considering adding it into our system in the future for the verific verification of",
    "start": "932800",
    "end": "940199"
  },
  {
    "text": "course you can use the command line to cosign verify but in terms of signature",
    "start": "940199",
    "end": "946000"
  },
  {
    "text": "verification in kubernetes which is more common we can utilize the admission web",
    "start": "946000",
    "end": "952079"
  },
  {
    "text": "hook it allows you to intercept and check in the images before they are",
    "start": "952079",
    "end": "957920"
  },
  {
    "text": "deployed as far as we know you can use uh six door policy controller and kerno to",
    "start": "957920",
    "end": "966040"
  },
  {
    "text": "check the cosign signature they are all open sourced but we for now wrote our own",
    "start": "966040",
    "end": "972959"
  },
  {
    "text": "admission controller to support the Legacy signature check once we faed out the Legacy",
    "start": "972959",
    "end": "980519"
  },
  {
    "text": "signing mechanism in our company we will explore switching to one of those uh",
    "start": "980519",
    "end": "985800"
  },
  {
    "text": "open source options great now we have some screenshots to",
    "start": "985800",
    "end": "992560"
  },
  {
    "text": "demonstrate what we have discussed actually works at Yahoo uh before we start uh just",
    "start": "992560",
    "end": "998759"
  },
  {
    "text": "remember we have sanitized all sensitive data for security purpose okay let's get",
    "start": "998759",
    "end": "1006600"
  },
  {
    "text": "started what you can see now is our sici system screwdriver is signing an",
    "start": "1006600",
    "end": "1013319"
  },
  {
    "text": "image firstly it uses a command CTS ID token to generate the",
    "start": "1013319",
    "end": "1019839"
  },
  {
    "text": "or ID say ID token from Ence secondly after getting after",
    "start": "1019839",
    "end": "1028079"
  },
  {
    "text": "generating key pair locally using open SSL we use the CT service search command",
    "start": "1028079",
    "end": "1034760"
  },
  {
    "text": "to GA the image sign insert from Essence this certificate is valid for",
    "start": "1034760",
    "end": "1040918"
  },
  {
    "text": "only 15 minutes the thir validity here seems to",
    "start": "1040919",
    "end": "1046839"
  },
  {
    "text": "be 75 minutes but it is because Ence sets the start time one hour before the",
    "start": "1046839",
    "end": "1052679"
  },
  {
    "text": "current time as a margin of safety against potential clock skill the actual actual not before time",
    "start": "1052679",
    "end": "1061080"
  },
  {
    "text": "should be one hour later align with the current time which is 15 minutes before",
    "start": "1061080",
    "end": "1067000"
  },
  {
    "text": "the certificate got expired finally we sign the image",
    "start": "1067000",
    "end": "1074760"
  },
  {
    "text": "request a time stamp and push the signature image image to the",
    "start": "1074760",
    "end": "1081720"
  },
  {
    "text": "registry and we can successfully sign this uh successfully verify the",
    "start": "1081799",
    "end": "1088880"
  },
  {
    "text": "signature however if you only accept image signed by Bob but not others the",
    "start": "1091400",
    "end": "1097039"
  },
  {
    "text": "verification would fail the error method goes n of the",
    "start": "1097039",
    "end": "1102320"
  },
  {
    "text": "expected identities matched what was in the",
    "start": "1102320",
    "end": "1106919"
  },
  {
    "text": "certificate the last case is when someone signs the image after the image Sig inert has",
    "start": "1107760",
    "end": "1116799"
  },
  {
    "text": "expired even though you can successfully sign the image and push the signature to",
    "start": "1117080",
    "end": "1122400"
  },
  {
    "text": "the registry you cannot get a time stamp within the SE",
    "start": "1122400",
    "end": "1128440"
  },
  {
    "text": "validity that leads to a failure verification the expiration time of of",
    "start": "1129520",
    "end": "1136679"
  },
  {
    "text": "certificate is before the time time that the image was signed okay that's uh the demo I will",
    "start": "1136679",
    "end": "1144720"
  },
  {
    "text": "hand over back to the imagry so where are we currently in our",
    "start": "1144720",
    "end": "1152080"
  },
  {
    "text": "six store Adventure have now integrated cign signatures into the docka sign step",
    "start": "1152080",
    "end": "1158080"
  },
  {
    "text": "of our seci which this step is used for building all the docka images and we are",
    "start": "1158080",
    "end": "1164080"
  },
  {
    "text": "currently doing bucketed roll out one thing that we have to be careful and Duke is coordinated with the docker",
    "start": "1164080",
    "end": "1170960"
  },
  {
    "text": "registry Ops Team regarding the load monitoring because during cign signatures approximately doubles the",
    "start": "1170960",
    "end": "1178000"
  },
  {
    "text": "number of API request for every generated image we now produce and appload two images where previously it",
    "start": "1178000",
    "end": "1185520"
  },
  {
    "text": "was just one we are running the TSA service in AWS and since the TSA just",
    "start": "1185520",
    "end": "1192320"
  },
  {
    "text": "its own digital signatures it needs its own private key so we use a multi- region KMS key",
    "start": "1192320",
    "end": "1199240"
  },
  {
    "text": "and the TSA certificate is signed by our Athens our Central certificate Authority",
    "start": "1199240",
    "end": "1204919"
  },
  {
    "text": "so everything gets rooted in Athens we have contributed a feature to the six",
    "start": "1204919",
    "end": "1210360"
  },
  {
    "text": "stock assign GitHub project to allow mtls connections from cign so from CI to",
    "start": "1210360",
    "end": "1216120"
  },
  {
    "text": "the TSA which was a must have requirements for us we have also integrated the Sixto",
    "start": "1216120",
    "end": "1223480"
  },
  {
    "text": "signature verification in all their kubernetes deployment so it's 100% using and admission controller web hook",
    "start": "1223480",
    "end": "1230960"
  },
  {
    "text": "similarly to the signing code it's implemented and go based on the Sixto assigned",
    "start": "1230960",
    "end": "1236400"
  },
  {
    "text": "Library we use a custom web hook as I said since we need to do several",
    "start": "1236400",
    "end": "1242280"
  },
  {
    "text": "security related checks but there is similar open source six store policy",
    "start": "1242280",
    "end": "1247640"
  },
  {
    "text": "control web hook that Yong mentioned and had a link in his previous slides in the current transition phase",
    "start": "1247640",
    "end": "1253960"
  },
  {
    "text": "we do both the Legacy and cign signature verification as we said before the six",
    "start": "1253960",
    "end": "1259840"
  },
  {
    "text": "store verification has less operational overhead so there's no additional signature store or custom verification",
    "start": "1259840",
    "end": "1266640"
  },
  {
    "text": "extension required and we are really looking forward to the day when we can fully switch to the six store",
    "start": "1266640",
    "end": "1273440"
  },
  {
    "text": "verification the best thing is that we get a security Improvement but our developers and devops do not have to do",
    "start": "1273440",
    "end": "1280039"
  },
  {
    "text": "anything extra the process is fully transparent to them there a saying",
    "start": "1280039",
    "end": "1285880"
  },
  {
    "text": "security is always inconvenience but in this case there's no inconvenience or extra work for our users I love the",
    "start": "1285880",
    "end": "1294240"
  },
  {
    "text": "title of the previous talk safety or security why not boss why not boss so",
    "start": "1294240",
    "end": "1300440"
  },
  {
    "text": "it's the same case we proved boss security along with usability which we",
    "start": "1300440",
    "end": "1305600"
  },
  {
    "text": "absolutely love and strive for it's like having your cake and eating it",
    "start": "1305600",
    "end": "1311919"
  },
  {
    "text": "too we have published a blog post about implementing Sixt image signing please",
    "start": "1311919",
    "end": "1317960"
  },
  {
    "text": "check it out for additional details and code examples especially if you plan to",
    "start": "1317960",
    "end": "1323159"
  },
  {
    "text": "adopt Sixto your company it also details uh least details our",
    "start": "1323159",
    "end": "1328919"
  },
  {
    "text": "contributions in more detail yeah but so that's what we have done but",
    "start": "1328919",
    "end": "1338360"
  },
  {
    "text": "now how you can get started with six store and cign digital signatures the we of course goes through",
    "start": "1338360",
    "end": "1346640"
  },
  {
    "text": "lots of test and proof of concept you can start in minutes using the standard flow and Sixt public server",
    "start": "1346640",
    "end": "1355200"
  },
  {
    "text": "fure and record cosign to get the initial feel for how it works and what",
    "start": "1355200",
    "end": "1360799"
  },
  {
    "text": "it does and then well it's a Shameless plug I would recommend to check out this",
    "start": "1360799",
    "end": "1366720"
  },
  {
    "text": "repository we made for our initial testing and also testing some of their contributions uh cign keyless in the",
    "start": "1366720",
    "end": "1374159"
  },
  {
    "text": "Dimitri GitHub repository it runs keyless signing using",
    "start": "1374159",
    "end": "1379440"
  },
  {
    "text": "the temporary Anonymous image registry TTL which is great for testing and also",
    "start": "1379440",
    "end": "1385760"
  },
  {
    "text": "the public TSA server fsa.org once you have this you can expand in the",
    "start": "1385760",
    "end": "1391880"
  },
  {
    "text": "direction of your requirements and infrastructure for example if you like us need to run your own TSA and have M",
    "start": "1391880",
    "end": "1399679"
  },
  {
    "text": "TLS collection you can try this run TSA mtls script in the same directory and it",
    "start": "1399679",
    "end": "1408679"
  },
  {
    "text": "needs some parameters configured like for location of your secrets and the URL and the name for TSA but it shouldn't be",
    "start": "1408679",
    "end": "1416159"
  },
  {
    "text": "too difficult and finally you can grow and expand the solution for your",
    "start": "1416159",
    "end": "1421880"
  },
  {
    "text": "requirements and for uh to MH with your infrastructure and as you grow the",
    "start": "1421880",
    "end": "1428440"
  },
  {
    "text": "solution don't hesitate to ask questions you can find us on the Sixt slack in the",
    "start": "1428440",
    "end": "1433799"
  },
  {
    "text": "private Sixt users Channel and we'll be happy to help if you can",
    "start": "1433799",
    "end": "1439840"
  },
  {
    "text": "at the next steps beside finishing out the all out we plan to work on adding an internal instance of record to the",
    "start": "1439840",
    "end": "1446720"
  },
  {
    "text": "system to keep the record of all the signatures made the oci images were the",
    "start": "1446720",
    "end": "1452600"
  },
  {
    "text": "starting point but we would also like to sign and verify all the artifacts such",
    "start": "1452600",
    "end": "1458919"
  },
  {
    "text": "as RPM and Debian packages or install bundles One Challenge there is where to",
    "start": "1458919",
    "end": "1464960"
  },
  {
    "text": "put the signatures with oi images they can be uploaded to the image register",
    "start": "1464960",
    "end": "1470279"
  },
  {
    "text": "alongside the images they sign but for other artifacts some other solution is",
    "start": "1470279",
    "end": "1475919"
  },
  {
    "text": "necessary and to make the signature verification really user friendly and transparent for users it needs to be",
    "start": "1475919",
    "end": "1483080"
  },
  {
    "text": "integrated with the standard tools such as dnf and podman imagine how awesome it",
    "start": "1483080",
    "end": "1488559"
  },
  {
    "text": "would be if you could run podman pool or podman run and it would do the six store",
    "start": "1488559",
    "end": "1495960"
  },
  {
    "text": "verification um six store verification and ab the operation if the appication",
    "start": "1495960",
    "end": "1502320"
  },
  {
    "text": "fails so uh please check out this issue 6 stock assign issue",
    "start": "1502320",
    "end": "1508240"
  },
  {
    "text": "3523 on the IPM integration and maybe you could also help to lobby for these",
    "start": "1508240",
    "end": "1514919"
  },
  {
    "text": "or participate or contribute to summarize in about a year",
    "start": "1514919",
    "end": "1520520"
  },
  {
    "text": "long project we were able to implement the Sixto Killers signing and verification of the oci images produced",
    "start": "1520520",
    "end": "1527799"
  },
  {
    "text": "in the C and consumed in kubernetes we found the six store being flexible",
    "start": "1527799",
    "end": "1533039"
  },
  {
    "text": "enough and Powerful uh and meeting our requirements and able to mash together",
    "start": "1533039",
    "end": "1538840"
  },
  {
    "text": "with the internal components namely Athens which is our oidc identity provider and Central certificate",
    "start": "1538840",
    "end": "1545760"
  },
  {
    "text": "Authority we complemented a few B and pieces that we required with our contributions to the Sixt Project based",
    "start": "1545760",
    "end": "1553120"
  },
  {
    "text": "on the standard use cases and documentation it's easy to think of six store as being a monolist where all the",
    "start": "1553120",
    "end": "1559320"
  },
  {
    "text": "pieces fure Rec or cosign I must have our experience highlights an alternative",
    "start": "1559320",
    "end": "1566600"
  },
  {
    "text": "approach to Sixto as a set of legol like building blocks that can be mixed and match as needed and combined with the",
    "start": "1566600",
    "end": "1573840"
  },
  {
    "text": "internal pieces such as identity provider or public key infrastructure we would like to encourage other companies",
    "start": "1573840",
    "end": "1580120"
  },
  {
    "text": "even the big ones to consider adopting six store to improve the software supply",
    "start": "1580120",
    "end": "1585880"
  },
  {
    "text": "chain security if you remember just one thing from this talk please remember to always",
    "start": "1585880",
    "end": "1591880"
  },
  {
    "text": "sign and verify all your oci images and if possible other artifacts as",
    "start": "1591880",
    "end": "1597760"
  },
  {
    "text": "well we would like to thank many people who really helped us with this project",
    "start": "1597760",
    "end": "1603440"
  },
  {
    "text": "and with people in the Sixto project the Sixto Community was greatly helpful and",
    "start": "1603440",
    "end": "1609120"
  },
  {
    "text": "pleasure to work with particular thank you heyen Nathan Zachary and everyone who reviewed our pool request and",
    "start": "1609120",
    "end": "1616480"
  },
  {
    "text": "answers our many questions we're also grateful to our teammates at yaho listed",
    "start": "1616480",
    "end": "1622200"
  },
  {
    "text": "here for their support advice and encouragement thank you",
    "start": "1622200",
    "end": "1630600"
  },
  {
    "text": "meru we have a few minutes left and we'll be happy to answer your questions",
    "start": "1636200",
    "end": "1641559"
  },
  {
    "text": "and also please scan the QR code and leave feedback for this session there are a couple of microphones in here",
    "start": "1641559",
    "end": "1650159"
  },
  {
    "text": "yeah go",
    "start": "1652360",
    "end": "1655640"
  },
  {
    "text": "it",
    "start": "1677120",
    "end": "1680120"
  },
  {
    "text": "so the question is why we haven't used the transparency Lo of record and what",
    "start": "1686679",
    "end": "1692279"
  },
  {
    "text": "about the benefits it it provides right um so we wanted to start somewhere the",
    "start": "1692279",
    "end": "1698600"
  },
  {
    "text": "record is great it's append only lock so it shows and it it cannot be",
    "start": "1698600",
    "end": "1704760"
  },
  {
    "text": "modified um we think that record is especially important when you have",
    "start": "1704760",
    "end": "1710640"
  },
  {
    "text": "multiple patches that patches like that are not necessarily trust each other an",
    "start": "1710640",
    "end": "1716559"
  },
  {
    "text": "open source world so it might be less applicable inside of one Corporation but",
    "start": "1716559",
    "end": "1723559"
  },
  {
    "text": "I we I know we we plan to adopt ra Rea",
    "start": "1723559",
    "end": "1728919"
  },
  {
    "text": "so we will we will be adding this to the mix so it just we starting with the with",
    "start": "1728919",
    "end": "1734440"
  },
  {
    "text": "the pieces that we have the TSA assertions and and and the our certificate Authority so it's kind of",
    "start": "1734440",
    "end": "1740799"
  },
  {
    "text": "the each an elephant piece by piece so starting with some piece and then adding",
    "start": "1740799",
    "end": "1746760"
  },
  {
    "text": "and expanding this I think for re so one thing for example that need to check if",
    "start": "1746760",
    "end": "1752240"
  },
  {
    "text": "it supports the mtls connection from cosign to reca so possibly that it would",
    "start": "1752240",
    "end": "1757679"
  },
  {
    "text": "also need to be extended so we we're going to look into this next and uh to",
    "start": "1757679",
    "end": "1762840"
  },
  {
    "text": "add on that uh is just record is not the required",
    "start": "1762840",
    "end": "1768559"
  },
  {
    "text": "block for keyless signing the time stamp Authority is and the record is uh what",
    "start": "1768559",
    "end": "1774559"
  },
  {
    "text": "you can do is to add this add a as a security enhancement to uh add after",
    "start": "1774559",
    "end": "1781880"
  },
  {
    "text": "everything is set up and I know six store uh official Blog has",
    "start": "1781880",
    "end": "1788760"
  },
  {
    "text": "a Blog on maybe uh last year about this",
    "start": "1788760",
    "end": "1794159"
  },
  {
    "text": "writing about yeah you can have a Time some Authority stand along and push those those entire record like temp",
    "start": "1794159",
    "end": "1801559"
  },
  {
    "text": "stamp and every other information to the record again so without record does",
    "start": "1801559",
    "end": "1808640"
  },
  {
    "text": "doesn't uh means you cannot have KY signing but without time St Authority it",
    "start": "1808640",
    "end": "1815279"
  },
  {
    "text": "can totally destroy the whole system other question maybe one more",
    "start": "1815279",
    "end": "1822679"
  },
  {
    "text": "yeah go ahead yeah I I I don't think this is the same quite the same issue but it it might overlap um are you have",
    "start": "1822679",
    "end": "1829000"
  },
  {
    "text": "you thought about um audit logging for the ca that's issuing that short-lived",
    "start": "1829000",
    "end": "1835120"
  },
  {
    "text": "um certificate to the act of that's actually doing the signature I know that when we do uh CA certificate issuance",
    "start": "1835120",
    "end": "1842960"
  },
  {
    "text": "more generally in like the web pki they've done a lot of work for like certificate transparency so you have",
    "start": "1842960",
    "end": "1848880"
  },
  {
    "text": "effectively a immutable audit log of all the certificates that have been issued um does the sixo stuff integrate with",
    "start": "1848880",
    "end": "1856240"
  },
  {
    "text": "any type of thing like that so I can then see a record of which certificates have been issued to which actors to then",
    "start": "1856240",
    "end": "1862679"
  },
  {
    "text": "go off and do signing",
    "start": "1862679",
    "end": "1869120"
  },
  {
    "text": "um so so currently we don't have a like a",
    "start": "1869120",
    "end": "1875360"
  },
  {
    "text": "recol like or a pend lock of all the all the certificates issued by ath so Athan",
    "start": "1875360",
    "end": "1881919"
  },
  {
    "text": "uh Athens is issuing those short lift so the CI V VM machine generates its",
    "start": "1881919",
    "end": "1890080"
  },
  {
    "text": "private key and then it sends a request to the Athens so that it would issue the this short lft certificate and it's also",
    "start": "1890080",
    "end": "1898320"
  },
  {
    "text": "tied to the specific like a screw specific build project so and also",
    "start": "1898320",
    "end": "1903960"
  },
  {
    "text": "access this you cannot just like from developer station I I could not connect",
    "start": "1903960",
    "end": "1909559"
  },
  {
    "text": "to the eth and get a signing certificate yonga had to do like a some uh actually",
    "start": "1909559",
    "end": "1916080"
  },
  {
    "text": "run it in screwdriver so that he would be able to to do this uh this this screenshot so it's tightly controlled",
    "start": "1916080",
    "end": "1922480"
  },
  {
    "text": "but we currently don't have this append lock of all the certificates issued so this could be something that we cons we",
    "start": "1922480",
    "end": "1929639"
  },
  {
    "text": "can consider thank you okay last question okay you had to",
    "start": "1929639",
    "end": "1936279"
  },
  {
    "text": "run on two yes thanks very much for sharing your experience um you said uh so the",
    "start": "1936279",
    "end": "1943360"
  },
  {
    "text": "the part that makes the Kila signing work is basically that you're delegating the identity",
    "start": "1943360",
    "end": "1948440"
  },
  {
    "text": "identity verification to your idac provider um can you share how you do",
    "start": "1948440",
    "end": "1954039"
  },
  {
    "text": "that in your pipelines I think you walk briefly through that in the demo oh yes",
    "start": "1954039",
    "end": "1959559"
  },
  {
    "text": "your question is how do we get the O token from aens right this stab yeah",
    "start": "1959559",
    "end": "1965799"
  },
  {
    "text": "basically how how do you how do how do you identify this specific pipeline that",
    "start": "1965799",
    "end": "1970919"
  },
  {
    "text": "it actually has the permission to sign uh yeah I think it's more would be more",
    "start": "1970919",
    "end": "1976519"
  },
  {
    "text": "of Ence uh kind of question but there is a bit of magic set up so that when the",
    "start": "1976519",
    "end": "1982519"
  },
  {
    "text": "CI build is started um there's a like a private private key or the key",
    "start": "1982519",
    "end": "1987760"
  },
  {
    "text": "identifying this build is placed so that it can identify itself to the essence",
    "start": "1987760",
    "end": "1993399"
  },
  {
    "text": "the the same way as like where VMS in AWS or gcp when they started there's",
    "start": "1993399",
    "end": "1999360"
  },
  {
    "text": "also I would say magic but there's a mechanisms that allows it to get a",
    "start": "1999360",
    "end": "2004760"
  },
  {
    "text": "private key and like a assertion uh that that also that enables this",
    "start": "2004760",
    "end": "2011679"
  },
  {
    "text": "authentication yeah so yeah you can see this is uh command line two we are using",
    "start": "2011679",
    "end": "2017880"
  },
  {
    "text": "and you can see we have service sech file and service key file yeah this is",
    "start": "2017880",
    "end": "2024279"
  },
  {
    "text": "uh how we use to get all ideas Tok or prove imls to Ence so is this part of",
    "start": "2024279",
    "end": "2031639"
  },
  {
    "text": "screwdriver or part of your general infrastructure I think it's the part of the screwdriver who with a and saw that",
    "start": "2031639",
    "end": "2039279"
  },
  {
    "text": "like on bth the on bth the VM received a piece of their identity that it can",
    "start": "2039279",
    "end": "2045440"
  },
  {
    "text": "present for those transactions so thanks very much so if you have a blog post on that as well that would be nice okay",
    "start": "2045440",
    "end": "2052480"
  },
  {
    "text": "yeah we'll talk to our AR col thank you very much thanks for your",
    "start": "2052480",
    "end": "2057839"
  },
  {
    "text": "time and have a great the rest of the conference thanks",
    "start": "2057839",
    "end": "2064240"
  }
]