[
  {
    "text": "all right um good evening everyone",
    "start": "880",
    "end": "3600"
  },
  {
    "text": "welcome to the talk uh it's great to be",
    "start": "3600",
    "end": "6200"
  },
  {
    "text": "here at cubec con and especially since",
    "start": "6200",
    "end": "9120"
  },
  {
    "text": "it's the first time this event is",
    "start": "9120",
    "end": "10679"
  },
  {
    "text": "happening in India I'm really excited to",
    "start": "10679",
    "end": "13120"
  },
  {
    "text": "be part of this amazing",
    "start": "13120",
    "end": "15039"
  },
  {
    "text": "event and um today we're going to talk",
    "start": "15039",
    "end": "18439"
  },
  {
    "text": "about something that might just change",
    "start": "18439",
    "end": "20240"
  },
  {
    "text": "the way you think about kubernetes",
    "start": "20240",
    "end": "21760"
  },
  {
    "text": "sports so before I delve into the actual",
    "start": "21760",
    "end": "25439"
  },
  {
    "text": "content let me introduce myself I'm soan",
    "start": "25439",
    "end": "28400"
  },
  {
    "text": "Kar I work at redard as a Senor software",
    "start": "28400",
    "end": "30519"
  },
  {
    "text": "engineer I'm one of the cryo maintainers",
    "start": "30519",
    "end": "33079"
  },
  {
    "text": "it's a CNC project uh for uh container",
    "start": "33079",
    "end": "35920"
  },
  {
    "text": "runtime interface and and part of the",
    "start": "35920",
    "end": "38680"
  },
  {
    "text": "Sig node Community which predominantly",
    "start": "38680",
    "end": "40399"
  },
  {
    "text": "works on qblade node specific projects",
    "start": "40399",
    "end": "43719"
  },
  {
    "text": "if I'm not working I'll be either",
    "start": "43719",
    "end": "45079"
  },
  {
    "text": "playing flute or doing tracking or other",
    "start": "45079",
    "end": "48000"
  },
  {
    "text": "outdoor",
    "start": "48000",
    "end": "50280"
  },
  {
    "text": "activities so here is the agenda for",
    "start": "50280",
    "end": "52280"
  },
  {
    "text": "today's talk we'll be quickly covering",
    "start": "52280",
    "end": "54719"
  },
  {
    "text": "the introduction to pods then understand",
    "start": "54719",
    "end": "57399"
  },
  {
    "text": "the real world demands and aspiration",
    "start": "57399",
    "end": "59559"
  },
  {
    "text": "for the pods then we'll understand how",
    "start": "59559",
    "end": "62600"
  },
  {
    "text": "nested containers will satisfy some of",
    "start": "62600",
    "end": "64799"
  },
  {
    "text": "the demands from the users then we'll",
    "start": "64799",
    "end": "67439"
  },
  {
    "text": "see some of the examples followed by the",
    "start": "67439",
    "end": "70680"
  },
  {
    "text": "limitation in the current pod model then",
    "start": "70680",
    "end": "73439"
  },
  {
    "text": "we'll also see some of the upam",
    "start": "73439",
    "end": "74720"
  },
  {
    "text": "kubernetes efforts that we are doing to",
    "start": "74720",
    "end": "76360"
  },
  {
    "text": "make nested containers truly a native",
    "start": "76360",
    "end": "78840"
  },
  {
    "text": "container uh kubernetes solution and",
    "start": "78840",
    "end": "82200"
  },
  {
    "text": "then uh towards the end I'll open for",
    "start": "82200",
    "end": "84439"
  },
  {
    "text": "questions",
    "start": "84439",
    "end": "86880"
  },
  {
    "text": "answer all right so",
    "start": "86920",
    "end": "90520"
  },
  {
    "text": "many of you are already aware about",
    "start": "90520",
    "end": "91799"
  },
  {
    "text": "kubernetes pod so I'm not going to spend",
    "start": "91799",
    "end": "93520"
  },
  {
    "text": "much time on it it's it's going to be",
    "start": "93520",
    "end": "95439"
  },
  {
    "text": "brief so pods are nothing but it's a",
    "start": "95439",
    "end": "97960"
  },
  {
    "text": "smallest Deployable unit in kubernetes",
    "start": "97960",
    "end": "100520"
  },
  {
    "text": "and a basic building block for deploying",
    "start": "100520",
    "end": "103399"
  },
  {
    "text": "applications so you can think of p as a",
    "start": "103399",
    "end": "105479"
  },
  {
    "text": "logical host which has multiple",
    "start": "105479",
    "end": "107759"
  },
  {
    "text": "containers which shares the same network",
    "start": "107759",
    "end": "109880"
  },
  {
    "text": "space and storage volumes so this makes",
    "start": "109880",
    "end": "112920"
  },
  {
    "text": "a perfect use case for hosting",
    "start": "112920",
    "end": "115719"
  },
  {
    "text": "microservices architecture and side card",
    "start": "115719",
    "end": "118600"
  },
  {
    "text": "pattern for excels in tightly",
    "start": "118600",
    "end": "121240"
  },
  {
    "text": "communication and storage volumes for",
    "start": "121240",
    "end": "123680"
  },
  {
    "text": "containerized",
    "start": "123680",
    "end": "124840"
  },
  {
    "text": "apps when it comes to security and",
    "start": "124840",
    "end": "127840"
  },
  {
    "text": "isolation POD isolates workloads at a",
    "start": "127840",
    "end": "131280"
  },
  {
    "text": "little higher level enable uh resource",
    "start": "131280",
    "end": "133760"
  },
  {
    "text": "sharing for containers within the Pod",
    "start": "133760",
    "end": "137000"
  },
  {
    "text": "now while while pod is versatile enough",
    "start": "137000",
    "end": "140480"
  },
  {
    "text": "the modern uh demands are actually",
    "start": "140480",
    "end": "142599"
  },
  {
    "text": "pushing the boundaries for what they can",
    "start": "142599",
    "end": "144440"
  },
  {
    "text": "achieve today so developers operators",
    "start": "144440",
    "end": "147360"
  },
  {
    "text": "need more",
    "start": "147360",
    "end": "148440"
  },
  {
    "text": "flexibility tight security and more",
    "start": "148440",
    "end": "151920"
  },
  {
    "text": "capabilities so let's understand some of",
    "start": "151920",
    "end": "154239"
  },
  {
    "text": "the use cases that uh users are",
    "start": "154239",
    "end": "156680"
  },
  {
    "text": "demanding from the",
    "start": "156680",
    "end": "159280"
  },
  {
    "text": "pods one of the best and uh frequent use",
    "start": "159280",
    "end": "163159"
  },
  {
    "text": "cases for user is running containerized",
    "start": "163159",
    "end": "165319"
  },
  {
    "text": "tools like pman builda cryo um Builder",
    "start": "165319",
    "end": "169760"
  },
  {
    "text": "inside inside the Pod so think of it as",
    "start": "169760",
    "end": "172879"
  },
  {
    "text": "cicd or the local deployment where they",
    "start": "172879",
    "end": "175959"
  },
  {
    "text": "want to integrate these tools very",
    "start": "175959",
    "end": "178640"
  },
  {
    "text": "natively within the C",
    "start": "178640",
    "end": "181080"
  },
  {
    "text": "ecosystem there's also need to um behave",
    "start": "181080",
    "end": "184920"
  },
  {
    "text": "certain workloads in a virtual machine",
    "start": "184920",
    "end": "186920"
  },
  {
    "text": "like way where users want the isolation",
    "start": "186920",
    "end": "190040"
  },
  {
    "text": "of virtual machine at the same time they",
    "start": "190040",
    "end": "191799"
  },
  {
    "text": "want to retain the flexibility for the",
    "start": "191799",
    "end": "193879"
  },
  {
    "text": "Pod there are few users who want to",
    "start": "193879",
    "end": "196720"
  },
  {
    "text": "actually build certain um nested",
    "start": "196720",
    "end": "199920"
  },
  {
    "text": "environments like the Pod within pod and",
    "start": "199920",
    "end": "202720"
  },
  {
    "text": "for in order to do those kind of stuff",
    "start": "202720",
    "end": "205040"
  },
  {
    "text": "they want to really mimic the",
    "start": "205040",
    "end": "206640"
  },
  {
    "text": "application inside the Pod and last but",
    "start": "206640",
    "end": "209400"
  },
  {
    "text": "not the least least but very important",
    "start": "209400",
    "end": "210920"
  },
  {
    "text": "factor is the",
    "start": "210920",
    "end": "212920"
  },
  {
    "text": "security privilege workloads are risky",
    "start": "212920",
    "end": "216319"
  },
  {
    "text": "so there's a need for secure rootless",
    "start": "216319",
    "end": "218920"
  },
  {
    "text": "containers with uh privilege escalation",
    "start": "218920",
    "end": "222799"
  },
  {
    "text": "taken into",
    "start": "222799",
    "end": "224360"
  },
  {
    "text": "consideration now you can see here the",
    "start": "224360",
    "end": "226319"
  },
  {
    "text": "demand like you know uh what parts can",
    "start": "226319",
    "end": "228159"
  },
  {
    "text": "achieve today and what modern workloads",
    "start": "228159",
    "end": "230560"
  },
  {
    "text": "are required so there's a huge gap there",
    "start": "230560",
    "end": "233000"
  },
  {
    "text": "so nested contain containers is one of",
    "start": "233000",
    "end": "235200"
  },
  {
    "text": "the solution that we are going to see",
    "start": "235200",
    "end": "237319"
  },
  {
    "text": "today that will definitely bridge the",
    "start": "237319",
    "end": "239400"
  },
  {
    "text": "gap between what pods are there and what",
    "start": "239400",
    "end": "242879"
  },
  {
    "text": "uh we need in",
    "start": "242879",
    "end": "245720"
  },
  {
    "text": "general all right so",
    "start": "246439",
    "end": "249000"
  },
  {
    "text": "uh there are few benefits and let's",
    "start": "249000",
    "end": "251879"
  },
  {
    "text": "understand first how what it resolves",
    "start": "251879",
    "end": "253640"
  },
  {
    "text": "and then we'll go towards the benefits",
    "start": "253640",
    "end": "256120"
  },
  {
    "text": "the first is pods share name spaces and",
    "start": "256120",
    "end": "258600"
  },
  {
    "text": "c groups um by Design so which can",
    "start": "258600",
    "end": "262120"
  },
  {
    "text": "sometimes eliminates the um de isolation",
    "start": "262120",
    "end": "266040"
  },
  {
    "text": "so with nested containers we can",
    "start": "266040",
    "end": "268120"
  },
  {
    "text": "actually add an additional layer",
    "start": "268120",
    "end": "270240"
  },
  {
    "text": "which segregates or you can say isolates",
    "start": "270240",
    "end": "272520"
  },
  {
    "text": "workloads at different",
    "start": "272520",
    "end": "274160"
  },
  {
    "text": "layer when it comes to secure work uh",
    "start": "274160",
    "end": "276880"
  },
  {
    "text": "when it comes to secure work workload",
    "start": "276880",
    "end": "279520"
  },
  {
    "text": "flexibility uh running pod man Builder",
    "start": "279520",
    "end": "282280"
  },
  {
    "text": "inside the Pod requires higher",
    "start": "282280",
    "end": "284199"
  },
  {
    "text": "privileges but with Nest containers you",
    "start": "284199",
    "end": "286759"
  },
  {
    "text": "can do that without required any",
    "start": "286759",
    "end": "288680"
  },
  {
    "text": "privilege",
    "start": "288680",
    "end": "290400"
  },
  {
    "text": "escalations there are cases where user",
    "start": "290400",
    "end": "292560"
  },
  {
    "text": "wants to actually run VM like Behavior",
    "start": "292560",
    "end": "295360"
  },
  {
    "text": "but with nested containers you can do",
    "start": "295360",
    "end": "297080"
  },
  {
    "text": "that by where they can emulate that",
    "start": "297080",
    "end": "299880"
  },
  {
    "text": "behavior within the kues",
    "start": "299880",
    "end": "301840"
  },
  {
    "text": "ecosystem let's understand some of the",
    "start": "301840",
    "end": "303960"
  },
  {
    "text": "benefits of nested containers it",
    "start": "303960",
    "end": "306520"
  },
  {
    "text": "provides the granular npace management",
    "start": "306520",
    "end": "309639"
  },
  {
    "text": "where the Nam space can be handled very",
    "start": "309639",
    "end": "312560"
  },
  {
    "text": "precisely offering better control over",
    "start": "312560",
    "end": "314720"
  },
  {
    "text": "the isolation and resource sharing",
    "start": "314720",
    "end": "316919"
  },
  {
    "text": "there's also it also reduces the need",
    "start": "316919",
    "end": "318919"
  },
  {
    "text": "for privilege escalation making",
    "start": "318919",
    "end": "321080"
  },
  {
    "text": "workloads inherently more um safer and",
    "start": "321080",
    "end": "324600"
  },
  {
    "text": "last but not the least but very",
    "start": "324600",
    "end": "325880"
  },
  {
    "text": "important multi- tency requirement where",
    "start": "325880",
    "end": "328720"
  },
  {
    "text": "nested containers pay the way for",
    "start": "328720",
    "end": "331240"
  },
  {
    "text": "benefits of the multi-end",
    "start": "331240",
    "end": "333440"
  },
  {
    "text": "environments by offering secure",
    "start": "333440",
    "end": "335759"
  },
  {
    "text": "isolation at fine",
    "start": "335759",
    "end": "337960"
  },
  {
    "text": "granularity now we discuss about",
    "start": "337960",
    "end": "339880"
  },
  {
    "text": "theoretical part of what nested",
    "start": "339880",
    "end": "341240"
  },
  {
    "text": "containers do let's understand some P",
    "start": "341240",
    "end": "343720"
  },
  {
    "text": "picks where uh we see the implication of",
    "start": "343720",
    "end": "347080"
  },
  {
    "text": "nested containers in general so there",
    "start": "347080",
    "end": "348639"
  },
  {
    "text": "are three ppcs here and let's go uh one",
    "start": "348639",
    "end": "352759"
  },
  {
    "text": "by one the first is about privilege p",
    "start": "352759",
    "end": "355639"
  },
  {
    "text": "with root full container so what we are",
    "start": "355639",
    "end": "358080"
  },
  {
    "text": "trying to do is like we are trying to",
    "start": "358080",
    "end": "359360"
  },
  {
    "text": "run pod man it's a container engine",
    "start": "359360",
    "end": "361120"
  },
  {
    "text": "inside a pod so with the first pod we",
    "start": "361120",
    "end": "364160"
  },
  {
    "text": "are trying to use security cortex as",
    "start": "364160",
    "end": "366240"
  },
  {
    "text": "privilege to so this setup works as is",
    "start": "366240",
    "end": "369440"
  },
  {
    "text": "but there's a catch here there's a risk",
    "start": "369440",
    "end": "372000"
  },
  {
    "text": "here where you are trying to make",
    "start": "372000",
    "end": "373639"
  },
  {
    "text": "privilege as true which might expose",
    "start": "373639",
    "end": "375880"
  },
  {
    "text": "host level name spaces and",
    "start": "375880",
    "end": "378160"
  },
  {
    "text": "devices when you go to the next spot",
    "start": "378160",
    "end": "380880"
  },
  {
    "text": "spec which is much better compared to",
    "start": "380880",
    "end": "383080"
  },
  {
    "text": "the previous one where we are using",
    "start": "383080",
    "end": "385199"
  },
  {
    "text": "rootless containers but we are still",
    "start": "385199",
    "end": "387319"
  },
  {
    "text": "sticking to privilege to which which is",
    "start": "387319",
    "end": "390440"
  },
  {
    "text": "against the security policies if you're",
    "start": "390440",
    "end": "392080"
  },
  {
    "text": "going with uh mod part security",
    "start": "392080",
    "end": "395479"
  },
  {
    "text": "context and last but not the least but",
    "start": "395479",
    "end": "398000"
  },
  {
    "text": "very important where we are running",
    "start": "398000",
    "end": "399319"
  },
  {
    "text": "rootless containers in unprivileged pod",
    "start": "399319",
    "end": "402479"
  },
  {
    "text": "so in this case we are not at all",
    "start": "402479",
    "end": "404240"
  },
  {
    "text": "running privileged pod we are using",
    "start": "404240",
    "end": "406080"
  },
  {
    "text": "rootless containers we are using",
    "start": "406080",
    "end": "408000"
  },
  {
    "text": "annotation and um there's a security ux",
    "start": "408000",
    "end": "412919"
  },
  {
    "text": "security uh label that is created",
    "start": "412919",
    "end": "414880"
  },
  {
    "text": "especially for running nested containers",
    "start": "414880",
    "end": "417039"
  },
  {
    "text": "you can find that label in container as",
    "start": "417039",
    "end": "419000"
  },
  {
    "text": "an inux that is available mostly for Red",
    "start": "419000",
    "end": "421280"
  },
  {
    "text": "Hat systems red hat and Fedora",
    "start": "421280",
    "end": "423720"
  },
  {
    "text": "systems so there's one thing that is",
    "start": "423720",
    "end": "426240"
  },
  {
    "text": "common across all these part",
    "start": "426240",
    "end": "428240"
  },
  {
    "text": "SP do you guess what like do you want to",
    "start": "428240",
    "end": "430800"
  },
  {
    "text": "guess",
    "start": "430800",
    "end": "433039"
  },
  {
    "text": "anything so they are actually trying to",
    "start": "433400",
    "end": "435919"
  },
  {
    "text": "solve the nested",
    "start": "435919",
    "end": "437960"
  },
  {
    "text": "conizations basic principle that is",
    "start": "437960",
    "end": "440479"
  },
  {
    "text": "secure isolation Nam space separation",
    "start": "440479",
    "end": "443199"
  },
  {
    "text": "and resource control without uh",
    "start": "443199",
    "end": "444879"
  },
  {
    "text": "privilege escalation but these Port",
    "start": "444879",
    "end": "447560"
  },
  {
    "text": "picks are actually these are like the",
    "start": "447560",
    "end": "450199"
  },
  {
    "text": "workarounds but this actually expose a",
    "start": "450199",
    "end": "452919"
  },
  {
    "text": "certain uh limitation with the current",
    "start": "452919",
    "end": "455080"
  },
  {
    "text": "power model so we can discuss this in",
    "start": "455080",
    "end": "456599"
  },
  {
    "text": "the next",
    "start": "456599",
    "end": "458879"
  },
  {
    "text": "slide so uh in",
    "start": "459440",
    "end": "462759"
  },
  {
    "text": "kubernetes containers within pod share D",
    "start": "462759",
    "end": "466120"
  },
  {
    "text": "spaces like CIS and prog and these limit",
    "start": "466120",
    "end": "469680"
  },
  {
    "text": "workloads requiring distinct name spaces",
    "start": "469680",
    "end": "472560"
  },
  {
    "text": "like there's no per container username",
    "start": "472560",
    "end": "475159"
  },
  {
    "text": "space for better",
    "start": "475159",
    "end": "478039"
  },
  {
    "text": "isolation sometimes you try to run",
    "start": "478039",
    "end": "480199"
  },
  {
    "text": "privilege containers that might POS some",
    "start": "480199",
    "end": "482759"
  },
  {
    "text": "kind of security uh issues where you are",
    "start": "482759",
    "end": "485440"
  },
  {
    "text": "trying to expose P environments while",
    "start": "485440",
    "end": "488319"
  },
  {
    "text": "rootless containers does work in this",
    "start": "488319",
    "end": "489960"
  },
  {
    "text": "case but you still end up uh you know",
    "start": "489960",
    "end": "493560"
  },
  {
    "text": "bound to P level resource and security",
    "start": "493560",
    "end": "496599"
  },
  {
    "text": "boundaries and last but not the least",
    "start": "496599",
    "end": "498680"
  },
  {
    "text": "need for flexibility where um there",
    "start": "498680",
    "end": "501599"
  },
  {
    "text": "there's an increasing need for more uh",
    "start": "501599",
    "end": "504080"
  },
  {
    "text": "complex tools or build system inside the",
    "start": "504080",
    "end": "505840"
  },
  {
    "text": "Pod but that requires better isolation",
    "start": "505840",
    "end": "509720"
  },
  {
    "text": "for multi- workloads and needing uh",
    "start": "509720",
    "end": "512518"
  },
  {
    "text": "secure nested",
    "start": "512519",
    "end": "513800"
  },
  {
    "text": "environments you can see the picture",
    "start": "513800",
    "end": "515839"
  },
  {
    "text": "here uh for p security model it contains",
    "start": "515839",
    "end": "519200"
  },
  {
    "text": "three security features Port security",
    "start": "519200",
    "end": "522039"
  },
  {
    "text": "standards Port security context and Port",
    "start": "522039",
    "end": "525040"
  },
  {
    "text": "security admission so Port security",
    "start": "525040",
    "end": "527560"
  },
  {
    "text": "standard and p security admission are",
    "start": "527560",
    "end": "530160"
  },
  {
    "text": "policy based mechanism that govern at",
    "start": "530160",
    "end": "532200"
  },
  {
    "text": "the P level so it does not involve any",
    "start": "532200",
    "end": "535839"
  },
  {
    "text": "is process isolation between containers",
    "start": "535839",
    "end": "538360"
  },
  {
    "text": "and the host if you talk about p",
    "start": "538360",
    "end": "540800"
  },
  {
    "text": "security context with that you can Twix",
    "start": "540800",
    "end": "543519"
  },
  {
    "text": "certain um security context at the P",
    "start": "543519",
    "end": "545800"
  },
  {
    "text": "level but it doesn't provide the deeper",
    "start": "545800",
    "end": "548320"
  },
  {
    "text": "isolation of uid and GID mapping that",
    "start": "548320",
    "end": "550839"
  },
  {
    "text": "the username spaces provide and that is",
    "start": "550839",
    "end": "553600"
  },
  {
    "text": "where username spaces comes into picture",
    "start": "553600",
    "end": "556000"
  },
  {
    "text": "that that offers a way of",
    "start": "556000",
    "end": "558800"
  },
  {
    "text": "security where you can run container",
    "start": "558800",
    "end": "561399"
  },
  {
    "text": "process inside the container as a route",
    "start": "561399",
    "end": "564680"
  },
  {
    "text": "and you can isolate from the host which",
    "start": "564680",
    "end": "567560"
  },
  {
    "text": "doesn't I mean uh if you see the other",
    "start": "567560",
    "end": "569519"
  },
  {
    "text": "mechanisms they don't offer that kind of",
    "start": "569519",
    "end": "571480"
  },
  {
    "text": "flexibility so username space provide a",
    "start": "571480",
    "end": "574800"
  },
  {
    "text": "functionality that complement at the",
    "start": "574800",
    "end": "578040"
  },
  {
    "text": "same time enhances the current security",
    "start": "578040",
    "end": "579959"
  },
  {
    "text": "pod model that we talked",
    "start": "579959",
    "end": "583200"
  },
  {
    "text": "about all right so now we know the exact",
    "start": "584959",
    "end": "588320"
  },
  {
    "text": "limitations with current P model let's",
    "start": "588320",
    "end": "590880"
  },
  {
    "text": "shift our gears and talk about some",
    "start": "590880",
    "end": "592440"
  },
  {
    "text": "Upstream initiatives that we are taking",
    "start": "592440",
    "end": "594600"
  },
  {
    "text": "into consideration which not only adds",
    "start": "594600",
    "end": "597160"
  },
  {
    "text": "an extra layer of security it also",
    "start": "597160",
    "end": "600920"
  },
  {
    "text": "provides a better solution for nested",
    "start": "600920",
    "end": "604000"
  },
  {
    "text": "containerization uh which can make it",
    "start": "604000",
    "end": "606320"
  },
  {
    "text": "native to",
    "start": "606320",
    "end": "607560"
  },
  {
    "text": "kubernetes the first one is username",
    "start": "607560",
    "end": "609720"
  },
  {
    "text": "space",
    "start": "609720",
    "end": "610760"
  },
  {
    "text": "support So this cape we are handling uh",
    "start": "610760",
    "end": "614200"
  },
  {
    "text": "since long time and currently it's in",
    "start": "614200",
    "end": "616519"
  },
  {
    "text": "beta in 1.31 and there's a plan to make",
    "start": "616519",
    "end": "619480"
  },
  {
    "text": "it uh GA in the future release so one of",
    "start": "619480",
    "end": "622480"
  },
  {
    "text": "my colleague uh Peter Hunt is working on",
    "start": "622480",
    "end": "624360"
  },
  {
    "text": "this",
    "start": "624360",
    "end": "625560"
  },
  {
    "text": "actively so what it does like it",
    "start": "625560",
    "end": "627600"
  },
  {
    "text": "basically Alli kubernetes with Linux",
    "start": "627600",
    "end": "629760"
  },
  {
    "text": "Kel's ability to run or map container",
    "start": "629760",
    "end": "632920"
  },
  {
    "text": "rout ID into um non-root host ID on the",
    "start": "632920",
    "end": "638560"
  },
  {
    "text": "host so with with this what we are",
    "start": "638560",
    "end": "640920"
  },
  {
    "text": "trying to with this we are trying to",
    "start": "640920",
    "end": "643399"
  },
  {
    "text": "isolate user IDs which are running on",
    "start": "643399",
    "end": "645920"
  },
  {
    "text": "the container against the host IDs so",
    "start": "645920",
    "end": "648920"
  },
  {
    "text": "for example with username spaces uh you",
    "start": "648920",
    "end": "651839"
  },
  {
    "text": "can run processes inside the container",
    "start": "651839",
    "end": "654240"
  },
  {
    "text": "those processes um can be seen as non",
    "start": "654240",
    "end": "657200"
  },
  {
    "text": "nonroot on the host and that",
    "start": "657200",
    "end": "659480"
  },
  {
    "text": "significantly reduces the risk if",
    "start": "659480",
    "end": "661320"
  },
  {
    "text": "container breaks out for any reason so",
    "start": "661320",
    "end": "663399"
  },
  {
    "text": "if you see here um if you go through",
    "start": "663399",
    "end": "666160"
  },
  {
    "text": "that enhancement there are a couple of",
    "start": "666160",
    "end": "667920"
  },
  {
    "text": "um things that are mentioned where IT",
    "start": "667920",
    "end": "670639"
  },
  {
    "text": "addresses some of the cves if you enable",
    "start": "670639",
    "end": "673279"
  },
  {
    "text": "username spaces at P level and um that",
    "start": "673279",
    "end": "677240"
  },
  {
    "text": "is one of the case why we uh why we are",
    "start": "677240",
    "end": "679480"
  },
  {
    "text": "pushing for username spaces uh in",
    "start": "679480",
    "end": "681320"
  },
  {
    "text": "Upstream sign node U meeting and",
    "start": "681320",
    "end": "683600"
  },
  {
    "text": "probably in the",
    "start": "683600",
    "end": "686079"
  },
  {
    "text": "community all right here here is the",
    "start": "686800",
    "end": "689600"
  },
  {
    "text": "second feature username spaces Port",
    "start": "689600",
    "end": "692160"
  },
  {
    "text": "security standard so while username",
    "start": "692160",
    "end": "694839"
  },
  {
    "text": "spaces bring significant Security",
    "start": "694839",
    "end": "697200"
  },
  {
    "text": "benefits especially in the multi- tener",
    "start": "697200",
    "end": "699360"
  },
  {
    "text": "environments and um but their adoption",
    "start": "699360",
    "end": "701880"
  },
  {
    "text": "needs careful regulation and that is",
    "start": "701880",
    "end": "704399"
  },
  {
    "text": "where username space port security",
    "start": "704399",
    "end": "706440"
  },
  {
    "text": "standard comes into",
    "start": "706440",
    "end": "707959"
  },
  {
    "text": "picture it's currently in Alpha but in",
    "start": "707959",
    "end": "710760"
  },
  {
    "text": "the later releases we are going to get",
    "start": "710760",
    "end": "712120"
  },
  {
    "text": "rid of it once username space becomes GA",
    "start": "712120",
    "end": "715480"
  },
  {
    "text": "in",
    "start": "715480",
    "end": "716720"
  },
  {
    "text": "kubernetes and one of the push for this",
    "start": "716720",
    "end": "719320"
  },
  {
    "text": "particular feature is to uh regulate and",
    "start": "719320",
    "end": "722519"
  },
  {
    "text": "standardize the use of username space",
    "start": "722519",
    "end": "724800"
  },
  {
    "text": "username space feature in uh",
    "start": "724800",
    "end": "727600"
  },
  {
    "text": "kubernetes so it provides a framework",
    "start": "727600",
    "end": "730079"
  },
  {
    "text": "that ensures only compliant workloads",
    "start": "730079",
    "end": "732360"
  },
  {
    "text": "can leverage its",
    "start": "732360",
    "end": "734440"
  },
  {
    "text": "capability so you can use this feature",
    "start": "734440",
    "end": "736839"
  },
  {
    "text": "by setting this feature gate and at the",
    "start": "736839",
    "end": "739000"
  },
  {
    "text": "same time you need to ensure that",
    "start": "739000",
    "end": "742240"
  },
  {
    "text": "there's a node",
    "start": "742240",
    "end": "743320"
  },
  {
    "text": "compatibility so what happens in the",
    "start": "743320",
    "end": "745320"
  },
  {
    "text": "downstream uh kubernetes there's an",
    "start": "745320",
    "end": "747480"
  },
  {
    "text": "effort going on to have minimum cuate",
    "start": "747480",
    "end": "750199"
  },
  {
    "text": "version so um as an admin if you're",
    "start": "750199",
    "end": "753360"
  },
  {
    "text": "trying to set this particular flag with",
    "start": "753360",
    "end": "755920"
  },
  {
    "text": "part username spaces flag you are you're",
    "start": "755920",
    "end": "758920"
  },
  {
    "text": "actually instructing kubernetes API",
    "start": "758920",
    "end": "760680"
  },
  {
    "text": "server to to relax Port security context",
    "start": "760680",
    "end": "763839"
  },
  {
    "text": "for that particular",
    "start": "763839",
    "end": "766680"
  },
  {
    "text": "workload all right last but not the",
    "start": "768480",
    "end": "771600"
  },
  {
    "text": "least but very important feature for",
    "start": "771600",
    "end": "774199"
  },
  {
    "text": "actually enable nested conization within",
    "start": "774199",
    "end": "776800"
  },
  {
    "text": "kubernetes is adding procm mod option",
    "start": "776800",
    "end": "780279"
  },
  {
    "text": "before 1.29 kubernetes release it was a",
    "start": "780279",
    "end": "783839"
  },
  {
    "text": "standard feature but after 1.29 there's",
    "start": "783839",
    "end": "787639"
  },
  {
    "text": "a Upstream consensus around making this",
    "start": "787639",
    "end": "789880"
  },
  {
    "text": "enable only when username spaces is",
    "start": "789880",
    "end": "791600"
  },
  {
    "text": "enabled within your kubernetes cluster",
    "start": "791600",
    "end": "795079"
  },
  {
    "text": "so username space and procmon goes hand",
    "start": "795079",
    "end": "797560"
  },
  {
    "text": "in that but Y is not true like if you're",
    "start": "797560",
    "end": "800440"
  },
  {
    "text": "enabling username space that doesn't",
    "start": "800440",
    "end": "801680"
  },
  {
    "text": "mean you have to enable procon option so",
    "start": "801680",
    "end": "804920"
  },
  {
    "text": "this feature is beta in 1.29 uh 1.31 and",
    "start": "804920",
    "end": "809880"
  },
  {
    "text": "once username space feature goes GA this",
    "start": "809880",
    "end": "813160"
  },
  {
    "text": "will also go ga along with that so idea",
    "start": "813160",
    "end": "816639"
  },
  {
    "text": "behind that is by default there are",
    "start": "816639",
    "end": "818880"
  },
  {
    "text": "certain proc paths that are uh Mass from",
    "start": "818880",
    "end": "821959"
  },
  {
    "text": "the containers perspective because it",
    "start": "821959",
    "end": "824360"
  },
  {
    "text": "might expose host level and kernel level",
    "start": "824360",
    "end": "827800"
  },
  {
    "text": "configuration so with this particular",
    "start": "827800",
    "end": "830519"
  },
  {
    "text": "feature what we are trying to do like if",
    "start": "830519",
    "end": "832800"
  },
  {
    "text": "you want to run pod or some some uh root",
    "start": "832800",
    "end": "835519"
  },
  {
    "text": "full things inside the container you can",
    "start": "835519",
    "end": "837800"
  },
  {
    "text": "unmas certain block paths inside the",
    "start": "837800",
    "end": "839839"
  },
  {
    "text": "container while maintaining other file",
    "start": "839839",
    "end": "841720"
  },
  {
    "text": "sensive intact on the system and this is",
    "start": "841720",
    "end": "844720"
  },
  {
    "text": "really important which not only improves",
    "start": "844720",
    "end": "846920"
  },
  {
    "text": "the security but also helps in um",
    "start": "846920",
    "end": "849759"
  },
  {
    "text": "certain higher use cases like nested",
    "start": "849759",
    "end": "852320"
  },
  {
    "text": "containerization and so on so",
    "start": "852320",
    "end": "856120"
  },
  {
    "text": "forth all right so here is the username",
    "start": "857360",
    "end": "861120"
  },
  {
    "text": "pod where on the left left hand side you",
    "start": "861120",
    "end": "863519"
  },
  {
    "text": "can see the P",
    "start": "863519",
    "end": "865079"
  },
  {
    "text": "spec where we kept The annotation what",
    "start": "865079",
    "end": "868560"
  },
  {
    "text": "devices want to allow then we are going",
    "start": "868560",
    "end": "871079"
  },
  {
    "text": "to run rootless container with uh run as",
    "start": "871079",
    "end": "874079"
  },
  {
    "text": "user we are going to unmas procm mod so",
    "start": "874079",
    "end": "876600"
  },
  {
    "text": "that we can U Mount certain proc parts",
    "start": "876600",
    "end": "879480"
  },
  {
    "text": "inside the container we are going to use",
    "start": "879480",
    "end": "882399"
  },
  {
    "text": "container engine Tre that's the special",
    "start": "882399",
    "end": "884320"
  },
  {
    "text": "special ux type that is made especially",
    "start": "884320",
    "end": "887079"
  },
  {
    "text": "for uh nested containers that is",
    "start": "887079",
    "end": "889000"
  },
  {
    "text": "available for available in container s",
    "start": "889000",
    "end": "891800"
  },
  {
    "text": "Linux and last but not the least but",
    "start": "891800",
    "end": "894600"
  },
  {
    "text": "very important you need to set host",
    "start": "894600",
    "end": "896199"
  },
  {
    "text": "users as false so that you can enable",
    "start": "896199",
    "end": "898680"
  },
  {
    "text": "pod LEL usern m",
    "start": "898680",
    "end": "900320"
  },
  {
    "text": "space on the right hand side we need to",
    "start": "900320",
    "end": "902639"
  },
  {
    "text": "configure cryo in order to make sure it",
    "start": "902639",
    "end": "904759"
  },
  {
    "text": "works fine so uh you to set the default",
    "start": "904759",
    "end": "908160"
  },
  {
    "text": "run time and the allow devices which you",
    "start": "908160",
    "end": "910800"
  },
  {
    "text": "already covered in The annotation and",
    "start": "910800",
    "end": "913040"
  },
  {
    "text": "The annotation that we want to cover in",
    "start": "913040",
    "end": "914720"
  },
  {
    "text": "the",
    "start": "914720",
    "end": "915639"
  },
  {
    "text": "P well this this thing works but there",
    "start": "915639",
    "end": "918399"
  },
  {
    "text": "is a requirement for",
    "start": "918399",
    "end": "920199"
  },
  {
    "text": "that for kubernetes you need to use",
    "start": "920199",
    "end": "922839"
  },
  {
    "text": "something which is 1.30 plus and since",
    "start": "922839",
    "end": "925680"
  },
  {
    "text": "cryo goes hand in hand with kubernetes",
    "start": "925680",
    "end": "927880"
  },
  {
    "text": "releases so you need to use something",
    "start": "927880",
    "end": "929759"
  },
  {
    "text": "1.30 plus for cryo as",
    "start": "929759",
    "end": "932040"
  },
  {
    "text": "well as we talked about uh container SL",
    "start": "932040",
    "end": "934839"
  },
  {
    "text": "indux you need to use 2.",
    "start": "934839",
    "end": "938600"
  },
  {
    "text": "2341 and last but not the least Linux",
    "start": "938600",
    "end": "941079"
  },
  {
    "text": "kernel which is 5.12 which has username",
    "start": "941079",
    "end": "943480"
  },
  {
    "text": "space support",
    "start": "943480",
    "end": "945120"
  },
  {
    "text": "it so with that in",
    "start": "945120",
    "end": "947440"
  },
  {
    "text": "mind let's let's uh go to demo and see",
    "start": "947440",
    "end": "951279"
  },
  {
    "text": "whether that username space pod really",
    "start": "951279",
    "end": "955160"
  },
  {
    "text": "works all right so what I'm going to do",
    "start": "956880",
    "end": "960240"
  },
  {
    "text": "here is like I'm going to create a local",
    "start": "960240",
    "end": "961880"
  },
  {
    "text": "up cluster using the kubernetes script",
    "start": "961880",
    "end": "965040"
  },
  {
    "text": "and the C I'm using is cryo I'll be",
    "start": "965040",
    "end": "968319"
  },
  {
    "text": "using the same configuration and let's",
    "start": "968319",
    "end": "970360"
  },
  {
    "text": "see whether it works or",
    "start": "970360",
    "end": "973759"
  },
  {
    "text": "not it got",
    "start": "974880",
    "end": "977360"
  },
  {
    "text": "freeze",
    "start": "977360",
    "end": "980360"
  },
  {
    "text": "okay all right so uh first of all let's",
    "start": "984079",
    "end": "988319"
  },
  {
    "text": "see the cry",
    "start": "988319",
    "end": "990920"
  },
  {
    "text": "configuration I'm using the same cry",
    "start": "991759",
    "end": "995440"
  },
  {
    "text": "configuration let's go ahead and create",
    "start": "995440",
    "end": "998040"
  },
  {
    "text": "a cryo",
    "start": "998040",
    "end": "1000600"
  },
  {
    "text": "instance perfect so cry has SP up let's",
    "start": "1007839",
    "end": "1011680"
  },
  {
    "text": "go ahead and",
    "start": "1011680",
    "end": "1014240"
  },
  {
    "text": "create yeah let's go ahead and create",
    "start": "1015160",
    "end": "1017839"
  },
  {
    "text": "kubernetes cluster using local up",
    "start": "1017839",
    "end": "1021120"
  },
  {
    "text": "cluster",
    "start": "1021120",
    "end": "1023280"
  },
  {
    "text": "script so I tweak that script a bit to",
    "start": "1023280",
    "end": "1026600"
  },
  {
    "text": "make sure it works with",
    "start": "1026600",
    "end": "1029720"
  },
  {
    "text": "cryo it will take some",
    "start": "1031520",
    "end": "1035280"
  },
  {
    "text": "time so here the idea is to uh create a",
    "start": "1037720",
    "end": "1041600"
  },
  {
    "text": "pod with that user npace pod and once",
    "start": "1041600",
    "end": "1044520"
  },
  {
    "text": "that is done then probably we'll go",
    "start": "1044520",
    "end": "1045918"
  },
  {
    "text": "inside the Pod see how podman works and",
    "start": "1045919",
    "end": "1049000"
  },
  {
    "text": "and then we'll see a dummy application",
    "start": "1049000",
    "end": "1051400"
  },
  {
    "text": "running which will basically uh prints",
    "start": "1051400",
    "end": "1054840"
  },
  {
    "text": "out the podman logo",
    "start": "1054840",
    "end": "1058360"
  },
  {
    "text": "afterwards yeah API server is coming up",
    "start": "1063480",
    "end": "1066799"
  },
  {
    "text": "it takes some",
    "start": "1066799",
    "end": "1069440"
  },
  {
    "text": "time yeah sometimes you can use this uh",
    "start": "1073600",
    "end": "1076159"
  },
  {
    "text": "script to create single node and for",
    "start": "1076159",
    "end": "1078520"
  },
  {
    "text": "your development as well all right so",
    "start": "1078520",
    "end": "1081039"
  },
  {
    "text": "the cluster is up and running let's go",
    "start": "1081039",
    "end": "1082760"
  },
  {
    "text": "ahead and uh export Cube config and see",
    "start": "1082760",
    "end": "1086880"
  },
  {
    "text": "if node is working looks",
    "start": "1086880",
    "end": "1091679"
  },
  {
    "text": "good let's see the yaml file I'm going",
    "start": "1093039",
    "end": "1095799"
  },
  {
    "text": "to keep the same yaml",
    "start": "1095799",
    "end": "1098880"
  },
  {
    "text": "file let me go ahead and apply that P pi",
    "start": "1100360",
    "end": "1106158"
  },
  {
    "text": "all right the part is up and",
    "start": "1112600",
    "end": "1115799"
  },
  {
    "text": "running looks",
    "start": "1115799",
    "end": "1118240"
  },
  {
    "text": "good let's go ahead and uh exit into",
    "start": "1118240",
    "end": "1121080"
  },
  {
    "text": "that",
    "start": "1121080",
    "end": "1123279"
  },
  {
    "text": "part let's see if pman is there pman got",
    "start": "1131880",
    "end": "1135640"
  },
  {
    "text": "in okay",
    "start": "1135640",
    "end": "1139360"
  },
  {
    "text": "it looks",
    "start": "1141240",
    "end": "1143720"
  },
  {
    "text": "fine let's go ahead and run web",
    "start": "1144120",
    "end": "1148440"
  },
  {
    "text": "server it's",
    "start": "1153120",
    "end": "1155240"
  },
  {
    "text": "almost so we are going to uh spin up",
    "start": "1155240",
    "end": "1158120"
  },
  {
    "text": "this web server with that particular",
    "start": "1158120",
    "end": "1161960"
  },
  {
    "text": "image and I'm going to call",
    "start": "1166720",
    "end": "1170120"
  },
  {
    "text": "for Local Host to see if that",
    "start": "1170120",
    "end": "1172679"
  },
  {
    "text": "application",
    "start": "1172679",
    "end": "1175200"
  },
  {
    "text": "works that's how it",
    "start": "1175400",
    "end": "1177760"
  },
  {
    "text": "is all right do you want to see one more",
    "start": "1177760",
    "end": "1181400"
  },
  {
    "text": "demo all right so in in this next demo",
    "start": "1181400",
    "end": "1185480"
  },
  {
    "text": "I'm going to keep the same setup but in",
    "start": "1185480",
    "end": "1188120"
  },
  {
    "text": "this case I'm going to spin up one more",
    "start": "1188120",
    "end": "1189679"
  },
  {
    "text": "pod that would be my application pod and",
    "start": "1189679",
    "end": "1192400"
  },
  {
    "text": "inside the podman I'll be doing a couple",
    "start": "1192400",
    "end": "1194320"
  },
  {
    "text": "of things and once it is done then",
    "start": "1194320",
    "end": "1196120"
  },
  {
    "text": "probably we'll see the output on the",
    "start": "1196120",
    "end": "1197600"
  },
  {
    "text": "second pod the application",
    "start": "1197600",
    "end": "1200640"
  },
  {
    "text": "part all",
    "start": "1205480",
    "end": "1208600"
  },
  {
    "text": "right yeah",
    "start": "1224159",
    "end": "1228159"
  },
  {
    "text": "so the setup remains same we have this",
    "start": "1229480",
    "end": "1232480"
  },
  {
    "text": "pod can you see can you see like from",
    "start": "1232480",
    "end": "1235200"
  },
  {
    "text": "from behind can you see the",
    "start": "1235200",
    "end": "1238440"
  },
  {
    "text": "screen how about now looks better all",
    "start": "1240960",
    "end": "1244120"
  },
  {
    "text": "right so the setup is same until um Us",
    "start": "1244120",
    "end": "1247640"
  },
  {
    "text": "in his",
    "start": "1247640",
    "end": "1250080"
  },
  {
    "text": "SP all right so",
    "start": "1254240",
    "end": "1258600"
  },
  {
    "text": "okay so what I'm going to do here is",
    "start": "1262919",
    "end": "1264960"
  },
  {
    "text": "like I'm going to spin up one more pod",
    "start": "1264960",
    "end": "1267039"
  },
  {
    "text": "that's like an application pod where",
    "start": "1267039",
    "end": "1269240"
  },
  {
    "text": "I'll be hosting one application like the",
    "start": "1269240",
    "end": "1271240"
  },
  {
    "text": "dummy application and through user NS",
    "start": "1271240",
    "end": "1274320"
  },
  {
    "text": "pod I'm going to change few things for",
    "start": "1274320",
    "end": "1276760"
  },
  {
    "text": "this part and I'm going to roll out a",
    "start": "1276760",
    "end": "1278120"
  },
  {
    "text": "different uh uh new deployment and see",
    "start": "1278120",
    "end": "1281559"
  },
  {
    "text": "if it works",
    "start": "1281559",
    "end": "1284919"
  },
  {
    "text": "so here is the P yl that I'm going to",
    "start": "1292559",
    "end": "1294799"
  },
  {
    "text": "use I'll go ahead and apply that P",
    "start": "1294799",
    "end": "1299440"
  },
  {
    "text": "spec in pending State let me for all",
    "start": "1304159",
    "end": "1310400"
  },
  {
    "text": "right here is the engine servers to",
    "start": "1311679",
    "end": "1314760"
  },
  {
    "text": "expose that application I'll go ahead",
    "start": "1314760",
    "end": "1318679"
  },
  {
    "text": "apply that as",
    "start": "1318679",
    "end": "1319919"
  },
  {
    "text": "well now I'm going to curl node",
    "start": "1319919",
    "end": "1324880"
  },
  {
    "text": "IP",
    "start": "1335159",
    "end": "1338159"
  },
  {
    "text": "yeah can you see here this is pretty uh",
    "start": "1338400",
    "end": "1341520"
  },
  {
    "text": "simple application where I'm saying",
    "start": "1341520",
    "end": "1344159"
  },
  {
    "text": "hello kcon na now what I'm going to do",
    "start": "1344159",
    "end": "1346919"
  },
  {
    "text": "I'm going to change this string to to uh",
    "start": "1346919",
    "end": "1349320"
  },
  {
    "text": "cubec con India and see if it",
    "start": "1349320",
    "end": "1352000"
  },
  {
    "text": "works so I'll go to different user",
    "start": "1352000",
    "end": "1357080"
  },
  {
    "text": "SP I'm going to clone that",
    "start": "1367400",
    "end": "1371400"
  },
  {
    "text": "application let's do this a little",
    "start": "1375440",
    "end": "1377480"
  },
  {
    "text": "faster",
    "start": "1377480",
    "end": "1378960"
  },
  {
    "text": "all right the application got clone I'm",
    "start": "1378960",
    "end": "1380679"
  },
  {
    "text": "going to see the current content I'm",
    "start": "1380679",
    "end": "1382960"
  },
  {
    "text": "going to replace that with",
    "start": "1382960",
    "end": "1386320"
  },
  {
    "text": "said and with podman I'm going to first",
    "start": "1389039",
    "end": "1392039"
  },
  {
    "text": "login to qu where that image is",
    "start": "1392039",
    "end": "1396120"
  },
  {
    "text": "hosted all right so I'm going to build",
    "start": "1399600",
    "end": "1401919"
  },
  {
    "text": "that image because I've made few changes",
    "start": "1401919",
    "end": "1404600"
  },
  {
    "text": "to index.html",
    "start": "1404600",
    "end": "1408039"
  },
  {
    "text": "and I'm going to push that to my qu",
    "start": "1409640",
    "end": "1414039"
  },
  {
    "text": "registry all right so this is",
    "start": "1426120",
    "end": "1429400"
  },
  {
    "text": "done let's see and I'm going to roll out",
    "start": "1429400",
    "end": "1433440"
  },
  {
    "text": "a new deployment for engine",
    "start": "1433440",
    "end": "1435200"
  },
  {
    "text": "X1 and I'll wait for it to complete",
    "start": "1435200",
    "end": "1440278"
  },
  {
    "text": "and let's see if we get that one",
    "start": "1440440",
    "end": "1445960"
  },
  {
    "text": "there and you get so idea behind this",
    "start": "1447279",
    "end": "1451000"
  },
  {
    "text": "demo is to show you how you can",
    "start": "1451000",
    "end": "1453600"
  },
  {
    "text": "use um this local setup to to improve",
    "start": "1453600",
    "end": "1457440"
  },
  {
    "text": "your code debug compile cycle instead of",
    "start": "1457440",
    "end": "1461080"
  },
  {
    "text": "so this is something which you can use",
    "start": "1461080",
    "end": "1463080"
  },
  {
    "text": "in integrated Cloud environment where",
    "start": "1463080",
    "end": "1465120"
  },
  {
    "text": "you have V code and you are trying to",
    "start": "1465120",
    "end": "1467480"
  },
  {
    "text": "kind of play around with certain things",
    "start": "1467480",
    "end": "1469480"
  },
  {
    "text": "you can you can actually use this pod",
    "start": "1469480",
    "end": "1472039"
  },
  {
    "text": "and play around with",
    "start": "1472039",
    "end": "1474480"
  },
  {
    "text": "that all",
    "start": "1474480",
    "end": "1477640"
  },
  {
    "text": "right",
    "start": "1480799",
    "end": "1482880"
  },
  {
    "text": "perfect so uh so we have seen the",
    "start": "1482880",
    "end": "1487240"
  },
  {
    "text": "evolution of kubernetes PODS and how the",
    "start": "1487240",
    "end": "1489919"
  },
  {
    "text": "introduction of nested containers open",
    "start": "1489919",
    "end": "1492360"
  },
  {
    "text": "up for some exciting",
    "start": "1492360",
    "end": "1494520"
  },
  {
    "text": "capabilities so uh in the future",
    "start": "1494520",
    "end": "1496600"
  },
  {
    "text": "direction we are planning to stabilize",
    "start": "1496600",
    "end": "1498960"
  },
  {
    "text": "some of the features that we discussed",
    "start": "1498960",
    "end": "1500640"
  },
  {
    "text": "the Upstream ones so this can be offered",
    "start": "1500640",
    "end": "1504039"
  },
  {
    "text": "uh in standard kubernetes offering and",
    "start": "1504039",
    "end": "1507000"
  },
  {
    "text": "apart from that we're also looking at",
    "start": "1507000",
    "end": "1508679"
  },
  {
    "text": "enhancing the security and isolation so",
    "start": "1508679",
    "end": "1511559"
  },
  {
    "text": "it depends on the user feedback and how",
    "start": "1511559",
    "end": "1513679"
  },
  {
    "text": "well they using that in their",
    "start": "1513679",
    "end": "1515320"
  },
  {
    "text": "development",
    "start": "1515320",
    "end": "1517159"
  },
  {
    "text": "environment and in on that note in that",
    "start": "1517159",
    "end": "1521399"
  },
  {
    "text": "essense the future of kubernetes p is",
    "start": "1521399",
    "end": "1523559"
  },
  {
    "text": "all about making more flexible tighter",
    "start": "1523559",
    "end": "1526399"
  },
  {
    "text": "security and actually using",
    "start": "1526399",
    "end": "1529760"
  },
  {
    "text": "uh or supporting capable uh next",
    "start": "1529760",
    "end": "1532080"
  },
  {
    "text": "generation of workloads and you as the",
    "start": "1532080",
    "end": "1534559"
  },
  {
    "text": "users are the pivotal role in shaping",
    "start": "1534559",
    "end": "1537159"
  },
  {
    "text": "the Journey of it so with that I want to",
    "start": "1537159",
    "end": "1539919"
  },
  {
    "text": "thank you all and I'm open for",
    "start": "1539919",
    "end": "1543720"
  },
  {
    "text": "questions",
    "start": "1545640",
    "end": "1548640"
  },
  {
    "text": "yeah",
    "start": "1548880",
    "end": "1551880"
  },
  {
    "text": "uh-huh pod it's a pod level yeah you",
    "start": "1553080",
    "end": "1556240"
  },
  {
    "text": "apply to your pod yeah",
    "start": "1556240",
    "end": "1559960"
  },
  {
    "text": "yes yeah that's why you that that's",
    "start": "1559960",
    "end": "1562440"
  },
  {
    "text": "there for p level resource like when you",
    "start": "1562440",
    "end": "1564200"
  },
  {
    "text": "mention host users that's your that",
    "start": "1564200",
    "end": "1566360"
  },
  {
    "text": "you're defining for the pods not inside",
    "start": "1566360",
    "end": "1568240"
  },
  {
    "text": "the container so you are running pod",
    "start": "1568240",
    "end": "1571200"
  },
  {
    "text": "under that particular username",
    "start": "1571200",
    "end": "1574519"
  },
  {
    "text": "space so that is the one like you you",
    "start": "1580679",
    "end": "1584000"
  },
  {
    "text": "have certain features with username",
    "start": "1584000",
    "end": "1586039"
  },
  {
    "text": "space you adding additional layer like",
    "start": "1586039",
    "end": "1588440"
  },
  {
    "text": "you are actually isolating uid G thing",
    "start": "1588440",
    "end": "1591840"
  },
  {
    "text": "and that is the that is like the",
    "start": "1591840",
    "end": "1593720"
  },
  {
    "text": "additional layer on top of",
    "start": "1593720",
    "end": "1597000"
  },
  {
    "text": "that",
    "start": "1598640",
    "end": "1601640"
  },
  {
    "text": "okay",
    "start": "1602000",
    "end": "1605000"
  },
  {
    "text": "M that's why you need to use procm as",
    "start": "1606480",
    "end": "1609480"
  },
  {
    "text": "well yeah that's why procm mod is so uh",
    "start": "1609480",
    "end": "1612840"
  },
  {
    "text": "earlier it was only username space but",
    "start": "1612840",
    "end": "1614600"
  },
  {
    "text": "they decided like uh there are a couple",
    "start": "1614600",
    "end": "1616679"
  },
  {
    "text": "of process that you know certain other",
    "start": "1616679",
    "end": "1618840"
  },
  {
    "text": "things need to access and that's where",
    "start": "1618840",
    "end": "1620399"
  },
  {
    "text": "prop option comes into picture where you",
    "start": "1620399",
    "end": "1622240"
  },
  {
    "text": "can actually you know um use that to",
    "start": "1622240",
    "end": "1625240"
  },
  {
    "text": "unmas certain prop part",
    "start": "1625240",
    "end": "1629240"
  },
  {
    "text": "us yeah so username user name spaces",
    "start": "1643039",
    "end": "1646799"
  },
  {
    "text": "work only on the process level it",
    "start": "1646799",
    "end": "1648640"
  },
  {
    "text": "doesn't impact your networking and stuff",
    "start": "1648640",
    "end": "1651279"
  },
  {
    "text": "that is only specific to process that's",
    "start": "1651279",
    "end": "1654159"
  },
  {
    "text": "why it isolates process from your host",
    "start": "1654159",
    "end": "1656520"
  },
  {
    "text": "so it will not impact your network stuff",
    "start": "1656520",
    "end": "1658080"
  },
  {
    "text": "networking stack will remain as",
    "start": "1658080",
    "end": "1661360"
  },
  {
    "text": "is it's only for the process not for",
    "start": "1663279",
    "end": "1665960"
  },
  {
    "text": "networking and other",
    "start": "1665960",
    "end": "1668840"
  },
  {
    "text": "stuff any other questions",
    "start": "1670320",
    "end": "1674759"
  },
  {
    "text": "you can use Docker you can use Builder",
    "start": "1680279",
    "end": "1682440"
  },
  {
    "text": "other tools as well you just need to",
    "start": "1682440",
    "end": "1684000"
  },
  {
    "text": "configure your uh container file like",
    "start": "1684000",
    "end": "1686320"
  },
  {
    "text": "the docker",
    "start": "1686320",
    "end": "1688799"
  },
  {
    "text": "file so um for this container Linux that",
    "start": "1691360",
    "end": "1695519"
  },
  {
    "text": "works only in Red Hat systems uh",
    "start": "1695519",
    "end": "1698320"
  },
  {
    "text": "container s Linux so we developed this",
    "start": "1698320",
    "end": "1700640"
  },
  {
    "text": "uh Linux type so that works only with",
    "start": "1700640",
    "end": "1703360"
  },
  {
    "text": "red hat Fedora ands I'm not sure about",
    "start": "1703360",
    "end": "1705799"
  },
  {
    "text": "other systems but to kind of figure out",
    "start": "1705799",
    "end": "1708000"
  },
  {
    "text": "that that part that's the only missing",
    "start": "1708000",
    "end": "1709720"
  },
  {
    "text": "puzzle but apart from that if you use",
    "start": "1709720",
    "end": "1711960"
  },
  {
    "text": "that part SP it will work as",
    "start": "1711960",
    "end": "1715240"
  },
  {
    "text": "is",
    "start": "1720919",
    "end": "1723159"
  },
  {
    "text": "yeah right",
    "start": "1723159",
    "end": "1727159"
  },
  {
    "text": "right yeah absolutely but that will be",
    "start": "1755760",
    "end": "1757960"
  },
  {
    "text": "non non",
    "start": "1757960",
    "end": "1759559"
  },
  {
    "text": "root yeah that will be mapped in",
    "start": "1759559",
    "end": "1764039"
  },
  {
    "text": "yeah any other questions",
    "start": "1764440",
    "end": "1768879"
  },
  {
    "text": "all right thank you all",
    "start": "1769240",
    "end": "1771680"
  },
  {
    "text": "[Applause]",
    "start": "1771680",
    "end": "1775869"
  }
]