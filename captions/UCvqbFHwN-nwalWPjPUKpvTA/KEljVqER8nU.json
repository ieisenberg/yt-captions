[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": "cool all right we're at time so we're gonna kick this off not to talk about putting our database as a service",
    "start": "0",
    "end": "6180"
  },
  {
    "text": "platform on kubernetes so quick intros I'm Steve Croce I'm the product manager",
    "start": "6180",
    "end": "11309"
  },
  {
    "text": "at object rocket for our hosted elasticsearch product and with me what's the ashkenazi I am the",
    "start": "11309",
    "end": "16859"
  },
  {
    "text": "engineering lead and development lead for the elasticsearch product so just a",
    "start": "16859",
    "end": "22470"
  },
  {
    "text": "quick intro if you're not familiar with object rocket we are a database as a service company we currently host MongoDB elasticsearch with cabana and",
    "start": "22470",
    "end": "29519"
  },
  {
    "text": "Redis our real focus is on support so we attach you know 24 by 7 by 365 support",
    "start": "29519",
    "end": "34950"
  },
  {
    "text": "for pretty much every customer there's you know no upsell there and really our goal is to provide free migrations free",
    "start": "34950",
    "end": "40379"
  },
  {
    "text": "upgrades all that stuff to basically be your database ops team so just a quick intro on who we are ok so what we're",
    "start": "40379",
    "end": "48149"
  },
  {
    "text": "gonna go through is we recently made the decision to move our platform to kubernetes so we're gonna talk quickly",
    "start": "48149",
    "end": "53219"
  },
  {
    "text": "about why we did that and kind of what was driving us to do that before we dive into getting the platform under",
    "start": "53219",
    "end": "58530"
  },
  {
    "text": "kubernetes what challenges we ran into and how we solved them and then where we're going next so current platform",
    "start": "58530",
    "end": "66900"
  },
  {
    "text": "that most of our customers are on today was built about six years ago built in 2012 mainly we used open BC as our",
    "start": "66900",
    "end": "74460"
  },
  {
    "text": "container technology at the time when it was built that was probably the you know the best game in town for us and",
    "start": "74460",
    "end": "79500"
  },
  {
    "text": "everything was custom when we built this we had a goal at the beginning in the very beginning the company to be kind of",
    "start": "79500",
    "end": "84780"
  },
  {
    "text": "the absolute fastest hosted MongoDB MongoDB was the lead product and so",
    "start": "84780",
    "end": "89790"
  },
  {
    "text": "everything was custom built it all runs on our own bare metal bare metal environment but since then you know six",
    "start": "89790",
    "end": "96180"
  },
  {
    "start": "95000",
    "end": "95000"
  },
  {
    "text": "years is a long time in technology a lot to change there's a lot more available to us docker has now become the de-facto",
    "start": "96180",
    "end": "101700"
  },
  {
    "text": "container formats there's a lot of opportunity for us to move off what we had and then also custom orchestration",
    "start": "101700",
    "end": "107369"
  },
  {
    "text": "just there's no reason for us anymore to do it things like Cooper net kubernetes have gotten you know really capable",
    "start": "107369",
    "end": "112920"
  },
  {
    "text": "enough that there's nothing we could do ourselves that would you know be able to be what what we get from the community today and then the final piece and this",
    "start": "112920",
    "end": "119880"
  },
  {
    "text": "is the you know one of the real drivers is we needed to be able to stamp out our environment in any cloud we wanted to",
    "start": "119880",
    "end": "125430"
  },
  {
    "text": "the bare metal environment we're in it's great for the customers we had today that want you know the the absolute fastest thing but for everybody else we",
    "start": "125430",
    "end": "132569"
  },
  {
    "text": "get a lot of requests to you know once again move our databases closer to the application so that's the",
    "start": "132569",
    "end": "138000"
  },
  {
    "text": "quick you know kind of outline of why we're moving everything and kind of building a brand new platform and so",
    "start": "138000",
    "end": "144810"
  },
  {
    "text": "this is kind of a little nod to the rest of the you know rest of the presentation and we'll go through this learning curve",
    "start": "144810",
    "end": "150060"
  },
  {
    "text": "we had where and I'll talk will talk about when you know when kubernetes was easy when kubernetes wasn't easy and how",
    "start": "150060",
    "end": "155459"
  },
  {
    "text": "it's getting easy again and you'll see on the top right we'll have some of these little gauges and so the green they're the areas where kubernetes",
    "start": "155459",
    "end": "161459"
  },
  {
    "text": "actually solved our problem really easily there's the Reds where you know we had to kind of invent something to solve a",
    "start": "161459",
    "end": "166650"
  },
  {
    "text": "problem but yeah you will go through this you know kind of this journey in this path throughout the rest of the conversation right so little context",
    "start": "166650",
    "end": "175920"
  },
  {
    "text": "when you're looking at kubernetes and these orchestration platforms for hosting stateless services Web Apps",
    "start": "175920",
    "end": "182069"
  },
  {
    "text": "workers things like that we were all excited when we're talking about putting stateful applications on there a lot of",
    "start": "182069",
    "end": "188250"
  },
  {
    "text": "red flags hid from the dev team a year or two ago a lot of these platforms weren't really designed or up to snuff",
    "start": "188250",
    "end": "194310"
  },
  {
    "text": "yet to run stateful applications we all know databases don't really tolerate failure that easily some better than",
    "start": "194310",
    "end": "200639"
  },
  {
    "text": "others and operators really we're still just becoming a thing to work with and",
    "start": "200639",
    "end": "208370"
  },
  {
    "start": "207000",
    "end": "207000"
  },
  {
    "text": "just for some context about what our platform kind of looks like today we're gonna have an infrastructure API we've",
    "start": "208370",
    "end": "215129"
  },
  {
    "text": "centralized logging monitoring and use on boy frickin grass we've got some fluency some weave works",
    "start": "215129",
    "end": "221639"
  },
  {
    "text": "we have clusters in multiple regions in our alpha program and with all of that we're just focusing on this kind of",
    "start": "221639",
    "end": "227819"
  },
  {
    "text": "small bucket today and how we manage a stateful database in our platform the",
    "start": "227819",
    "end": "234180"
  },
  {
    "text": "presentation is gonna follow a flow so we're gonna start with all of these combined are the table stakes to really",
    "start": "234180",
    "end": "239609"
  },
  {
    "text": "host a database as a service we've got the basics which is kind of how we create and manage clusters there's",
    "start": "239609",
    "end": "246480"
  },
  {
    "text": "security for those clusters database administration and automated tasks that our database needs and then really the",
    "start": "246480",
    "end": "252690"
  },
  {
    "text": "service features that take it above just managing a database for somebody all",
    "start": "252690",
    "end": "258630"
  },
  {
    "text": "right so the basics when you are launching a database is that you know as the database the service or even just a",
    "start": "258630",
    "end": "263669"
  },
  {
    "text": "database in general like the operator that we're gonna talk about throughout this presentation and like the most basic thing you need to do",
    "start": "263669",
    "end": "269520"
  },
  {
    "text": "is create a cluster make sure that cluster stays alive and then get rid of the cluster when you're done with it so",
    "start": "269520",
    "end": "274699"
  },
  {
    "text": "without getting into too many specifics once again given that we work on the elasticsearch product team I'm gonna",
    "start": "274699",
    "end": "280590"
  },
  {
    "start": "276000",
    "end": "276000"
  },
  {
    "text": "talk about some elasticsearch specific pieces so just I want to show you what one of our clusters look like looks like",
    "start": "280590",
    "end": "286259"
  },
  {
    "text": "just so you have a little bit more context about why we're doing the things we're doing so just at a very basic level our smallest cluster three nodes",
    "start": "286259",
    "end": "293100"
  },
  {
    "text": "three nodes that operate and all the roles elasticsearch does have the capability of being specific about node",
    "start": "293100",
    "end": "298860"
  },
  {
    "text": "roles but in the smallest cluster we're just gonna have all three perform all the roles we have some endpoint that we offer that load balances between those",
    "start": "298860",
    "end": "305760"
  },
  {
    "text": "three nodes but then off to the side we also host cabana which is a visualization package it's part of the",
    "start": "305760",
    "end": "310919"
  },
  {
    "text": "elastic stack we've got some other dashboards that are available as site plugins which also need external access",
    "start": "310919",
    "end": "317280"
  },
  {
    "text": "but then we also have some other tools that we run internally so curators in an index management tool and a last alert",
    "start": "317280",
    "end": "323729"
  },
  {
    "text": "as an open source alerting tool so that's kind of the base cluster when you create a cluster and when we you know kind of we host something this is kind",
    "start": "323729",
    "end": "329970"
  },
  {
    "text": "of the default stamp but then you can add on to that you can add more nodes you can add more specific nodes and",
    "start": "329970",
    "end": "336000"
  },
  {
    "text": "specific roles you can also add other tools like log stash which are things that will all support once we you know",
    "start": "336000",
    "end": "341070"
  },
  {
    "text": "kind of once we're fully live with the platform so the thing that makes all of this you know kind of possible is",
    "start": "341070",
    "end": "347340"
  },
  {
    "text": "operators and you know anybody if you've all been here the last couple of days and watch the talks this morning there's",
    "start": "347340",
    "end": "353370"
  },
  {
    "start": "349000",
    "end": "349000"
  },
  {
    "text": "plenty of overviews about operators and so I'm not going to go into too much details a detail about an operator but",
    "start": "353370",
    "end": "358979"
  },
  {
    "text": "just from a high-level overview you know not a deep dive anybody who's not familiar operator gives us the ability",
    "start": "358979",
    "end": "365280"
  },
  {
    "text": "to basically create custom objects within within kubernetes there's two main components that we refer to there's",
    "start": "365280",
    "end": "371580"
  },
  {
    "text": "the custom resource definition which is basically defines what your resource is going to look like and then there's the",
    "start": "371580",
    "end": "377250"
  },
  {
    "text": "controller since kubernetes doesn't natively understand this custom resource we created what the controller does is",
    "start": "377250",
    "end": "382979"
  },
  {
    "text": "intercepts any actions against that resource performs whatever logic we want to and translates parts of it into",
    "start": "382979",
    "end": "388740"
  },
  {
    "text": "things that kubernetes can understand and work with natively basic example of",
    "start": "388740",
    "end": "394409"
  },
  {
    "start": "394000",
    "end": "394000"
  },
  {
    "text": "that if you look at the left side you know this is just an example of what our custom resource looks like it's got a",
    "start": "394409",
    "end": "400110"
  },
  {
    "text": "you know to search multi-role kind which kubernetes doesn't know what an elasticsearch multi-role is so we have",
    "start": "400110",
    "end": "406449"
  },
  {
    "text": "to tell it we create a custom resource definition that kind of defines what fields and what how that how that a",
    "start": "406449",
    "end": "412240"
  },
  {
    "text": "manifest is going to look but then also our controller can then take that manifest and turn it into things once",
    "start": "412240",
    "end": "417850"
  },
  {
    "text": "again the kubernetes understands so turns it into some stateful sets some services some secrets some cron jobs and",
    "start": "417850",
    "end": "424240"
  },
  {
    "text": "lots of other things and then also perform some custom tasks along the way so once again not a huge you know deep",
    "start": "424240",
    "end": "430449"
  },
  {
    "text": "dive on operators but hopefully enough of a groundwork that if you're not familiar you know you can kind of keep up through the rest of the conversation",
    "start": "430449",
    "end": "436810"
  },
  {
    "text": "so when we set out to write this operator there was kind of three you",
    "start": "436810",
    "end": "441880"
  },
  {
    "start": "437000",
    "end": "437000"
  },
  {
    "text": "know kind of three paths we had or the three paths that kind of made the most sense to us we could use an off-the-shelf kind of open source",
    "start": "441880",
    "end": "447639"
  },
  {
    "text": "operator there are a couple of good elasticsearch options out there we could use a library a utility library there's",
    "start": "447639",
    "end": "455139"
  },
  {
    "text": "one out there called Cooper that looked interesting to us that would allow us to standardize across all the different products because once again we also have",
    "start": "455139",
    "end": "461800"
  },
  {
    "text": "you know a MongoDB team we have a Redis team we have other teams so that was an option the third option was to just build from",
    "start": "461800",
    "end": "468130"
  },
  {
    "text": "scratch just go and build our own operator now given that we you know we were a lot of the people at the company",
    "start": "468130",
    "end": "474010"
  },
  {
    "text": "were new to kubernetes when we kicked this project off earlier this year we went with off-the-shelf operator for the",
    "start": "474010",
    "end": "479560"
  },
  {
    "text": "POC so we took the most capable operator that we could find in the community and used that for our POC and learned a lot",
    "start": "479560",
    "end": "486099"
  },
  {
    "text": "and what we really found was it did some of the things we want it needed a little bit more functionality but the real",
    "start": "486099",
    "end": "491440"
  },
  {
    "text": "problem and the reason that we couldn't use it to go into production or we decided to kind of make a break going into production was it was developed a",
    "start": "491440",
    "end": "498550"
  },
  {
    "text": "couple of versions of kubernetes back and so kind of refactoring the whole operator to get it you know get it up to",
    "start": "498550",
    "end": "503949"
  },
  {
    "text": "speed and using the latest things ended up being a pretty big burden and we would have to fundamentally change the way of that operator work so it kind of",
    "start": "503949",
    "end": "510669"
  },
  {
    "text": "made more sense to us at the time to really just start from start from scratch and for production build our own",
    "start": "510669",
    "end": "516219"
  },
  {
    "text": "build our own operator gave us a little bit more control gave us a little bit more freedom and it just seemed like it",
    "start": "516219",
    "end": "521800"
  },
  {
    "text": "was a better opportunity than to have to go once again take somebody else's operator and completely fundamentally change it the one thing I will say is",
    "start": "521800",
    "end": "528279"
  },
  {
    "text": "that knowing what we know now the core OS kubernetes frame operator framework would have been really useful",
    "start": "528279",
    "end": "534940"
  },
  {
    "text": "to us at the time like if we were starting from scratch today we probably would have used the SDK to kind of",
    "start": "534940",
    "end": "540520"
  },
  {
    "text": "bootstrap all of our operators but you know once again this is a common theme in kubernetes that we're gonna find you",
    "start": "540520",
    "end": "545530"
  },
  {
    "text": "make a decision then somebody releases something that's not you know solves it better and you have to kind of make the call as to whether you go back and every",
    "start": "545530",
    "end": "552070"
  },
  {
    "text": "factor or you just move on and then the final piece another piece that's just",
    "start": "552070",
    "end": "557410"
  },
  {
    "text": "gonna be super high level since everybody else has done deep dives on it for you know a long time now you know we",
    "start": "557410",
    "end": "562990"
  },
  {
    "start": "562000",
    "end": "562000"
  },
  {
    "text": "couldn't do what we do without stateful sets it's you know we need you know persistent storage with all of our with",
    "start": "562990",
    "end": "569290"
  },
  {
    "text": "all of our pods so obviously stateful sets provide that but also stateful set to provide a whole bunch of utilities",
    "start": "569290",
    "end": "574840"
  },
  {
    "text": "about how you deploy how you scale and how you restart your resources so once",
    "start": "574840",
    "end": "580690"
  },
  {
    "text": "again I'm not gonna you know that's what we'll leave it that and spend a little bit more time digging into the things that are not not haven't been covered as",
    "start": "580690",
    "end": "587470"
  },
  {
    "text": "well but you know going back to the easy meter you know kind of calling that out making the operator decision was a",
    "start": "587470",
    "end": "594400"
  },
  {
    "text": "little bit of a harder problem stateful sets you know kind of landed in the middle because as you'll see there are some things we had to go kind of do our",
    "start": "594400",
    "end": "601090"
  },
  {
    "text": "own work to make stateful sets do exactly what we needed for a database but it's getting a little bit easier ziz",
    "start": "601090",
    "end": "606310"
  },
  {
    "text": "pretty much the story here so I'll turn it over to Wes for security right so now we have a basic cluster out there it's",
    "start": "606310",
    "end": "612160"
  },
  {
    "text": "built it's running but we need to find ways to run authentication we needed to",
    "start": "612160",
    "end": "617260"
  },
  {
    "text": "secure that traffic with certificates and a couple other things and we also needed to worry about isolation since",
    "start": "617260",
    "end": "622540"
  },
  {
    "text": "we're hosting it for a company here's some grumpy cat so I'm gonna go with",
    "start": "622540",
    "end": "628480"
  },
  {
    "text": "namespaces first so namespaces a hole in kubernetes are kind of really easy intro",
    "start": "628480",
    "end": "634240"
  },
  {
    "text": "concept it isolates your components from other components within it and you're able to apply some security some",
    "start": "634240",
    "end": "639520"
  },
  {
    "text": "restrictions and things like that people might not really use them when you're running your own plot when you're running your own tool set your own apps",
    "start": "639520",
    "end": "645790"
  },
  {
    "start": "643000",
    "end": "643000"
  },
  {
    "text": "and things like that because you don't need isolation as much unless you have a whole lot coming for us though we need",
    "start": "645790",
    "end": "652450"
  },
  {
    "text": "to be able to isolate every customer from every other customer and customers staging environments from customers dev",
    "start": "652450",
    "end": "658660"
  },
  {
    "text": "environments or production environments so we're leveraging namespaces along with a little bit of an overlay from",
    "start": "658660",
    "end": "664390"
  },
  {
    "text": "we've now to allow us to restrict all access within to a namespace except from our",
    "start": "664390",
    "end": "670570"
  },
  {
    "text": "ingress layer our ingress layer is how customers access it's also how we run our admin tools against then once inside",
    "start": "670570",
    "end": "676480"
  },
  {
    "text": "that nothing is gonna get in or out no other customer is gonna impact someone else and it gave us a really easy way to",
    "start": "676480",
    "end": "682180"
  },
  {
    "text": "just check a box and now everyone's secure from each other on top of that namespaces are also gonna give us a",
    "start": "682180",
    "end": "688900"
  },
  {
    "text": "really strong isolation with secrets and config maps those are isolated to a namespace so when we create unique",
    "start": "688900",
    "end": "695020"
  },
  {
    "text": "certificate for a cluster to encrypt communication isolated from that namespace it's hard for us to",
    "start": "695020",
    "end": "700860"
  },
  {
    "text": "accidentally dump that certificate somewhere else or give someone access to it leading into that and why part of",
    "start": "700860",
    "end": "708040"
  },
  {
    "text": "these certificates are important is how we manage authentication to the cluster",
    "start": "708040",
    "end": "713230"
  },
  {
    "start": "710000",
    "end": "710000"
  },
  {
    "text": "now so we've isolated it now we have to make sure people can securely connect to it elasticsearch on its own does not",
    "start": "713230",
    "end": "719740"
  },
  {
    "text": "give you an authentication mechanism without a license there are a couple open source projects remote search guard",
    "start": "719740",
    "end": "725910"
  },
  {
    "text": "they're great to work with if you're looking at things they're kind of cool they've got a good product but what's",
    "start": "725910",
    "end": "732070"
  },
  {
    "text": "important for this part of this toy back is they have an admin tool that you need to run in order to apply configuration",
    "start": "732070",
    "end": "738100"
  },
  {
    "text": "changes there's no API there's nothing like that it's run a command applies and manifest to your cluster and use the",
    "start": "738100",
    "end": "744190"
  },
  {
    "text": "certificates to authenticate for us to do that at scale we needed to we looked",
    "start": "744190",
    "end": "749380"
  },
  {
    "text": "at a couple different options there is a centralized service oh it's a very common practice you distribute workload",
    "start": "749380",
    "end": "755530"
  },
  {
    "text": "you connect to a remote machine you run off the queue pretty standard then we looked at what kubernetes has and",
    "start": "755530",
    "end": "761440"
  },
  {
    "text": "there's a job workflow it's really great we can dictate where this container turns on it gets access to these",
    "start": "761440",
    "end": "766750"
  },
  {
    "text": "isolated resources but you have to wait for resources to spin up and you have to clean up your old jobs it's not really a",
    "start": "766750",
    "end": "772839"
  },
  {
    "text": "repeatable run then the next part was remote command it's essentially just us",
    "start": "772839",
    "end": "777940"
  },
  {
    "text": "a teaching it's like running a remote exec command with SSH in your container of VM and moving along we ended up going",
    "start": "777940",
    "end": "785350"
  },
  {
    "start": "784000",
    "end": "784000"
  },
  {
    "text": "with remote commands because it allows it to not have to wait for resources to spin up we direct we directly connect to",
    "start": "785350",
    "end": "791410"
  },
  {
    "text": "the container where the tool is to run the import of the new user lists and update it's secure we're just connecting",
    "start": "791410",
    "end": "797770"
  },
  {
    "text": "over the Krupa AP is it's simple it's lightweight and it really helps solve this problem the",
    "start": "797770",
    "end": "803890"
  },
  {
    "text": "only cons were is you know in my opinion you really never want to run more than one process in a container for an",
    "start": "803890",
    "end": "809260"
  },
  {
    "text": "extended period of time here we're kind of breaking that rule which is okay it's a 30 second run and it buys us so much",
    "start": "809260",
    "end": "815920"
  },
  {
    "text": "more and it was kind of hard to kind of stack overflow our way around how to get",
    "start": "815920",
    "end": "822370"
  },
  {
    "text": "examples for remote come in not a lot of people are really using it so hopefully when we eventually get our stuff out",
    "start": "822370",
    "end": "828280"
  },
  {
    "text": "there it'll be a good reference for folks and then kicking to the next piece we have database administration all",
    "start": "828280",
    "end": "834910"
  },
  {
    "text": "right so the first couple pieces are once again it's you know they're the bare minimum when you're spinning up a",
    "start": "834910",
    "end": "840040"
  },
  {
    "text": "new cluster but that's you know a lot more applicable to you know kind of any database not necessarily a database as a",
    "start": "840040",
    "end": "846160"
  },
  {
    "text": "service and so automating the administrative tasks that's really where you know kind of the",
    "start": "846160",
    "end": "851220"
  },
  {
    "text": "database-as-a-service kind of pieces start to click in as well as the service features that Wes will talk about in a",
    "start": "851220",
    "end": "856450"
  },
  {
    "text": "little bit so some of the things we need to think about are you know recurring tasks things like backups things that",
    "start": "856450",
    "end": "862870"
  },
  {
    "text": "are you know custom configurations things you know anything that usual you know database administrator would do we",
    "start": "862870",
    "end": "868780"
  },
  {
    "text": "have once again we're very support heavy but we need to automate this when you're talking about hundreds or thousands of",
    "start": "868780",
    "end": "873910"
  },
  {
    "text": "clusters you can't be having people performing manual tasks all the time so that's really the goal of all of these",
    "start": "873910",
    "end": "879040"
  },
  {
    "start": "877000",
    "end": "877000"
  },
  {
    "text": "pieces is to find the things that are the right things for us to go automate make them part of the platform make our",
    "start": "879040",
    "end": "884380"
  },
  {
    "text": "so you know make our support folks lives better but also make a product that just works when once again when we're",
    "start": "884380",
    "end": "890470"
  },
  {
    "text": "offering it as a service so the first thing that you know really you know made",
    "start": "890470",
    "end": "896770"
  },
  {
    "text": "this easy for us and is one of those things you know once again on the easy meter we're really getting into the green zone now is is config Maps config",
    "start": "896770",
    "end": "903820"
  },
  {
    "start": "900000",
    "end": "900000"
  },
  {
    "text": "Maps solved a couple of really interesting scenarios for us so the first of those is custom configurations you know by",
    "start": "903820",
    "end": "910570"
  },
  {
    "text": "default we can figure all of our clusters in the image using just the standard settings and those settings are",
    "start": "910570",
    "end": "915670"
  },
  {
    "text": "generally good enough for you know 90 plus percent of our customers but there are you know there is a subset that need",
    "start": "915670",
    "end": "922120"
  },
  {
    "text": "either a specific setting or need a custom plugin or need some other things well config Maps and their ability to be",
    "start": "922120",
    "end": "928990"
  },
  {
    "text": "mounted as a volume in the container solve this problem like super easy super easily so first example",
    "start": "928990",
    "end": "935140"
  },
  {
    "text": "is elasticsearch is configured via you know llamo file that goes into config directory for most of the common there",
    "start": "935140",
    "end": "943120"
  },
  {
    "text": "you know common values we're able to either use environment variables or other things to tune some of those settings but for things that are brand",
    "start": "943120",
    "end": "948730"
  },
  {
    "text": "new things that we hadn't baked into the image we can actually just overwrite that entire file using a config map",
    "start": "948730",
    "end": "954760"
  },
  {
    "text": "volume so what we do in our case is we mount that file in its own directory and",
    "start": "954760",
    "end": "960730"
  },
  {
    "text": "then use the docker entry point to kind of move that file into the right space now you know anybody who's done this",
    "start": "960730",
    "end": "966100"
  },
  {
    "text": "before knows you can go overwrite it you know a single file in a directory with it with a config map volume but there",
    "start": "966100",
    "end": "971920"
  },
  {
    "text": "are some downsides to that and so we wanted the flexibility of being able to control when and how those files get",
    "start": "971920",
    "end": "976930"
  },
  {
    "text": "moved around and it kind of we wanted to use it as a little bit more of a general-purpose way to put files in place so we decided to use a script to",
    "start": "976930",
    "end": "983320"
  },
  {
    "text": "move things in to the right place the other option that we have and this is for things where we wanted to just drop",
    "start": "983320",
    "end": "988660"
  },
  {
    "text": "an entire directory into the container is the second option here is to just take a config map take the files in the",
    "start": "988660",
    "end": "995080"
  },
  {
    "text": "config map mount a create a volume that has all those files and then just mount that volume as a new directory somewhere",
    "start": "995080",
    "end": "1000390"
  },
  {
    "text": "in the container there's a couple of examples once again specific to elasticsearch where this helps but the",
    "start": "1000390",
    "end": "1006570"
  },
  {
    "text": "overall idea is you can take any file you want you can drop it into a directory in the container and then basically that file will update you know",
    "start": "1006570",
    "end": "1013680"
  },
  {
    "text": "kind of automatically as you update the config map so it works out it works out pretty well we don't have to go roll containers for every single update to",
    "start": "1013680",
    "end": "1020250"
  },
  {
    "text": "some of these - some of these files extremely useful once again super easy it was something that was a little bit",
    "start": "1020250",
    "end": "1027240"
  },
  {
    "text": "harder on our older platform that kubernetes just does really well the other piece that's key you know and core",
    "start": "1027240",
    "end": "1033060"
  },
  {
    "start": "1033000",
    "end": "1033000"
  },
  {
    "text": "to database administration is the recurring tasks and so two examples we had we're backups right every day at a",
    "start": "1033060",
    "end": "1039870"
  },
  {
    "text": "certain time or some range of times you're gonna take it back up and you're gonna retain some number of backups",
    "start": "1039870",
    "end": "1045060"
  },
  {
    "text": "rather than having to you know pick a job scheduler or pick some kind of task management system kubernetes has really",
    "start": "1045060",
    "end": "1051390"
  },
  {
    "text": "great tools built in with respect to the the cron job system so it works like a cron job works you pick a time you pick",
    "start": "1051390",
    "end": "1057750"
  },
  {
    "text": "an action and it does that you know it does what you what you tell it to do but it also includes some nice you know kind",
    "start": "1057750",
    "end": "1063750"
  },
  {
    "text": "of some nice settings around well what have if the job fails what happens if the container fails that's running that job and so in the first example on in the",
    "start": "1063750",
    "end": "1070910"
  },
  {
    "text": "case of a backup when we create the cluster we submit our CR and what our controller does one of the things that",
    "start": "1070910",
    "end": "1077210"
  },
  {
    "text": "is an output of that initial create call is a cron job that runs at a certain time and takes a regular backup we just",
    "start": "1077210",
    "end": "1084380"
  },
  {
    "text": "use a curator which is a tool I've talked about a couple of times to do our snapshots on the new platform but that",
    "start": "1084380",
    "end": "1090830"
  },
  {
    "text": "one was pretty straightforward and pretty easy however we wanted a more programmable way of kind of creating",
    "start": "1090830",
    "end": "1097640"
  },
  {
    "text": "arbitrary curator tasks because snapshots are pretty standard you take them at a regular time every day it's",
    "start": "1097640",
    "end": "1103340"
  },
  {
    "text": "not going to deviate much from custard customer to customer but the way curator works it's very specific to how you're",
    "start": "1103340",
    "end": "1109309"
  },
  {
    "text": "using your data you might have your own retention policy you might have aliases that you want to manage there's a lot of",
    "start": "1109309",
    "end": "1114860"
  },
  {
    "text": "different things curator can do and so this was an area where we actually created a new customer resource",
    "start": "1114860",
    "end": "1120890"
  },
  {
    "text": "definition and basically by specified by submitting a custom resource we're able to create arbitrary curator jobs and",
    "start": "1120890",
    "end": "1128090"
  },
  {
    "text": "basically using the cron job system what we do is provide the configuration in the spec of the CR and what that turns",
    "start": "1128090",
    "end": "1134000"
  },
  {
    "text": "into is a cron job with a config map mounted as a volume that has that configuration file that's specified in",
    "start": "1134000",
    "end": "1140780"
  },
  {
    "text": "the original CR so once again it gave us a nice way to specify these arbitrary curator jobs and just specify the action",
    "start": "1140780",
    "end": "1148760"
  },
  {
    "text": "file and the configuration for that for that run of right in the matinee know the initial manifester and the CR so at",
    "start": "1148760",
    "end": "1156080"
  },
  {
    "text": "this point we really hit our stride you know it's it's kubernetes it's just super you know it's delivering really",
    "start": "1156080",
    "end": "1161179"
  },
  {
    "text": "well and making things really easy for us so I'll kick it over to West for service features now sorry oh that's fine so",
    "start": "1161179",
    "end": "1167510"
  },
  {
    "text": "service features so now we have a very basic cluster deployed for people they can access it they can secure it we're",
    "start": "1167510",
    "end": "1173390"
  },
  {
    "text": "giving them backups there's some resiliency but as everyone knows when you're running a database at some point you need to scale it you need to head",
    "start": "1173390",
    "end": "1179300"
  },
  {
    "text": "storage you need to add more members you want to do more replica sets you need to update it to get over security fixes and",
    "start": "1179300",
    "end": "1185150"
  },
  {
    "text": "this is really where it gets to the next level and we end up having a whole lot of conversations with product of he",
    "start": "1185150",
    "end": "1191090"
  },
  {
    "text": "actually picked the slide I'm just kind of fantastic very self-aware but we need",
    "start": "1191090",
    "end": "1197630"
  },
  {
    "text": "to update things and every database has their own update mechanism how you update each member so we're gonna circle a little bit a back",
    "start": "1197630",
    "end": "1204500"
  },
  {
    "text": "around to staple sets as Steven mentioned earlier how it gives you a rolling update mechanism but before just",
    "start": "1204500",
    "end": "1211520"
  },
  {
    "start": "1211000",
    "end": "1211000"
  },
  {
    "text": "gonna bring people up to speed a little bit of how elasticsearch updates need to work elastic search has a datastore you",
    "start": "1211520",
    "end": "1216559"
  },
  {
    "text": "shoot a note in the head or turn it off or restart it it's gonna try to self-heal it's gonna take things that",
    "start": "1216559",
    "end": "1222410"
  },
  {
    "text": "we're not primaries it's gonna turn them into primaries it's gonna move data around and it's usually not too",
    "start": "1222410",
    "end": "1228500"
  },
  {
    "text": "impactful on performance unless you have a large cluster a busy cluster you start moving a lot of data you're gonna have failed rights you're gonna slow reads",
    "start": "1228500",
    "end": "1234890"
  },
  {
    "text": "it's a problem but they do have a way to mitigate that and it's just disabling",
    "start": "1234890",
    "end": "1241190"
  },
  {
    "text": "allocation you turn off its ability to self-heal you do what you need to do turn a node back on say try to heal and",
    "start": "1241190",
    "end": "1247130"
  },
  {
    "text": "it's gonna see everything's there and we're okay but if you're gonna go ahead and run through a rolling update set",
    "start": "1247130",
    "end": "1253549"
  },
  {
    "start": "1252000",
    "end": "1252000"
  },
  {
    "text": "with stateful sets it's just gonna try to hammer down every node and you're turning off a node applying the new",
    "start": "1253549",
    "end": "1259190"
  },
  {
    "text": "change shuffling data the node comes back it's shuffling data again and you're gonna do that within five minutes your cluster",
    "start": "1259190",
    "end": "1265910"
  },
  {
    "text": "dies it just crashes we tested it a bunch and it was kind of fun so stateful",
    "start": "1265910",
    "end": "1272600"
  },
  {
    "text": "sets actually do give you an ability to control that flow though and it's called partition rolling updates and this is",
    "start": "1272600",
    "end": "1278570"
  },
  {
    "start": "1273000",
    "end": "1273000"
  },
  {
    "text": "the thing where it took a little bit of digging it wasn't really documented at the time it was kind of a newer feature but it allows you to just set a value of",
    "start": "1278570",
    "end": "1285590"
  },
  {
    "text": "an ordinal and it works backwards so you can say my stateful set to the five I'm gonna start at five and only that ones",
    "start": "1285590",
    "end": "1292100"
  },
  {
    "text": "getting updated then you're gonna move to four and it's gonna get updated so now you're at least controlling the flow",
    "start": "1292100",
    "end": "1297290"
  },
  {
    "text": "of when a resource is impacted and it's a little less detrimental than kubernetes just running down the list",
    "start": "1297290",
    "end": "1303230"
  },
  {
    "text": "immediately the problem though is it's still just moving down and we needed a",
    "start": "1303230",
    "end": "1308510"
  },
  {
    "text": "way to take an action of disabling allocation enabling cluster health verifying cluster health and ensuring",
    "start": "1308510",
    "end": "1315049"
  },
  {
    "text": "that the data is not moving around too much which is kind of where we get to the harder flows of complex updates and",
    "start": "1315049",
    "end": "1322100"
  },
  {
    "text": "state management it's give you a little bit of context of what a more complex",
    "start": "1322100",
    "end": "1327710"
  },
  {
    "text": "flow is than just restarting a cluster sometimes you want to update the cluster so if you're updating and elastic has",
    "start": "1327710",
    "end": "1334760"
  },
  {
    "text": "gotten better at this and later versions where minor and patch levels it's pretty safe to do a live update we're actually",
    "start": "1334760",
    "end": "1340400"
  },
  {
    "text": "able to we need to be able to update that member verify that things are in a good state maybe run some analysis tools",
    "start": "1340400",
    "end": "1346280"
  },
  {
    "text": "against indexes as we move through each member of the cluster there are times that we're gonna want to remove a node",
    "start": "1346280",
    "end": "1352070"
  },
  {
    "text": "from the cluster when you change the size of a stateful set kubernetes just sees it as an update it would just",
    "start": "1352070",
    "end": "1357410"
  },
  {
    "text": "delete the member of the node and then all that data is going to shuffle around elasticsearch we have to say evacuate",
    "start": "1357410",
    "end": "1363200"
  },
  {
    "text": "this node and monitor that and then when the note is empty we can actually reduce the size of the state we'll set a couple",
    "start": "1363200",
    "end": "1370760"
  },
  {
    "text": "other things that I was going to run through it just don't remember them right now so over here on the right you",
    "start": "1370760",
    "end": "1376250"
  },
  {
    "text": "just see kind of a flow of what I'm talking about where we're disabling allocation letting the update run it's",
    "start": "1376250",
    "end": "1381320"
  },
  {
    "text": "gonna update one member of the pod of the set and then we'll enable allocation verify health increase the size",
    "start": "1381320",
    "end": "1387580"
  },
  {
    "text": "kubernetes is only applying it to the newest member and we're good but we",
    "start": "1387580",
    "end": "1393560"
  },
  {
    "text": "needed to manage that steam so when you're interrupting the flow and running these tasks the kubernetes has an event",
    "start": "1393560",
    "end": "1400400"
  },
  {
    "text": "bus that you can query on really busy clusters though that becomes an expensive query you can the operator can",
    "start": "1400400",
    "end": "1407990"
  },
  {
    "text": "fail we write all of these updates back to our control plane that we can query out see what's happening and where we",
    "start": "1407990",
    "end": "1414410"
  },
  {
    "text": "are but that becomes expensive that every time the operator turns on it's gonna clear every single cluster that's",
    "start": "1414410",
    "end": "1419450"
  },
  {
    "text": "in that's deployed hit our main API and then see what the state it's in and things like that we ended up going with",
    "start": "1419450",
    "end": "1425780"
  },
  {
    "text": "something kind of simple really and we just set a label on our stateful set with the actual with the event that is",
    "start": "1425780",
    "end": "1432500"
  },
  {
    "text": "currently running so when we're running an update we're gonna do a rolling update label for the state and then",
    "start": "1432500",
    "end": "1438980"
  },
  {
    "text": "we're gonna set the ordinal we're gonna let it run through and then when we do allocation we set the label to",
    "start": "1438980",
    "end": "1444410"
  },
  {
    "text": "allocation and then we perform another action we set with that action is so if at any point this process fails the",
    "start": "1444410",
    "end": "1452330"
  },
  {
    "text": "controller is going to come online we're gonna see we're in an update set we're gonna see what ordinal we've hit but then our controller is also going to",
    "start": "1452330",
    "end": "1458420"
  },
  {
    "text": "know what we've done to the cluster and then we do that by building a giant state map",
    "start": "1458420",
    "end": "1463670"
  },
  {
    "text": "the state map is kind of an is just it's annoying it's big but it was the best way we could solve the problem and it",
    "start": "1463670",
    "end": "1471260"
  },
  {
    "text": "was challenging as you can see this a little bit more on the run um and a state map is gonna look like this every",
    "start": "1471260",
    "end": "1477470"
  },
  {
    "start": "1473000",
    "end": "1473000"
  },
  {
    "text": "time we're gonna run an update on a member of a stateful set we're gonna look at what that label is we're gonna",
    "start": "1477470",
    "end": "1483380"
  },
  {
    "text": "run that label against an entire set of switch statements based on what that is we're gonna call a function perform an",
    "start": "1483380",
    "end": "1488780"
  },
  {
    "text": "action and then update the label I'm just gonna keep iterating down the list this specific flow is just the first",
    "start": "1488780",
    "end": "1496460"
  },
  {
    "text": "part which says I'm in an update state and I need to disable allocation and then it's going to go ahead and do a",
    "start": "1496460",
    "end": "1503300"
  },
  {
    "text": "very similar flow and a similar flow in a similar flow we actually mapped out all of our states and we were about this",
    "start": "1503300",
    "end": "1510770"
  },
  {
    "text": "tall this wide down to there and we're",
    "start": "1510770",
    "end": "1516590"
  },
  {
    "text": "gonna end up having to revisit how to do this but it's been working for now I just think we're gonna hit a problem so might not be the takeaway here is don't",
    "start": "1516590",
    "end": "1522800"
  },
  {
    "text": "do this maybe we're actually looking at sub resources which have come out which are giving us a little bit more",
    "start": "1522800",
    "end": "1528380"
  },
  {
    "text": "granularity on specific resources of states of stateful sets and things like that yeah this was kind of challenging",
    "start": "1528380",
    "end": "1534980"
  },
  {
    "text": "it's kind of hard to keep in our head and with that we're gonna move on to things we've learned and talked a little",
    "start": "1534980",
    "end": "1540740"
  },
  {
    "text": "bit about that learning curve that Steve alluded to earlier yeah and so now that we have the labels on it you know we had",
    "start": "1540740",
    "end": "1547100"
  },
  {
    "start": "1543000",
    "end": "1543000"
  },
  {
    "text": "the idea you know the all the things guys come out of the woodwork and it's gonna be super easy and it's just gonna work and you know kubernetes does",
    "start": "1547100",
    "end": "1553220"
  },
  {
    "text": "everything and obviously once we dug in you know we didn't know we didn't know and so you got that first dip right but",
    "start": "1553220",
    "end": "1560150"
  },
  {
    "text": "then you know once you start to learn all the facilities and all the tools that are baked into you know baked into kubernetes and you're keeping up with",
    "start": "1560150",
    "end": "1565640"
  },
  {
    "text": "all the new releases there's a lot of options and so it got easy again right we hit the basics it got really easy and",
    "start": "1565640",
    "end": "1571040"
  },
  {
    "text": "so we hit our stride but then you know to west's point with the state management you kind of hit that you know you start to hit the things that maybe",
    "start": "1571040",
    "end": "1578270"
  },
  {
    "text": "there just isn't a tool available to solve it for you or maybe you just have to go write your own code or your own workaround to do it that's when things",
    "start": "1578270",
    "end": "1584450"
  },
  {
    "text": "got difficult again but now what we're starting to see is now that we've been through that we've learned a lot you know we're kind of hitting the upswing",
    "start": "1584450",
    "end": "1589730"
  },
  {
    "text": "but one of the things we'll talk about in a second is also it's like you know you blink your eye there's a new feature that's out now out with how quick the",
    "start": "1589730",
    "end": "1596000"
  },
  {
    "text": "release like you know really cadance is on kubernetes we're finding it actually makes sense to you know the",
    "start": "1596000",
    "end": "1601030"
  },
  {
    "text": "longer you stay in the game the easier things are gonna get just by the strength of the tools the other piece",
    "start": "1601030",
    "end": "1607540"
  },
  {
    "start": "1606000",
    "end": "1606000"
  },
  {
    "text": "that's been kind of interesting to us throughout this is you know we tried not to repeat ourselves so we tried to be",
    "start": "1607540",
    "end": "1612730"
  },
  {
    "text": "super dry when we when we created the you know the first CRD and our first you",
    "start": "1612730",
    "end": "1617770"
  },
  {
    "text": "know and we're submitting our first CRS to create our resources the idea was let's just create this massive CR that",
    "start": "1617770",
    "end": "1623950"
  },
  {
    "text": "does all the things and then basically depending on all the different things we want to do in our cluster we just you",
    "start": "1623950",
    "end": "1629860"
  },
  {
    "text": "know provide different you know different versions or not different versions different different settings in the in the CR what we found though is it",
    "start": "1629860",
    "end": "1635740"
  },
  {
    "text": "made the code really dry but it was super complex and we had to handle a bunch of different conditions a bunch of different states that made just the code",
    "start": "1635740",
    "end": "1642010"
  },
  {
    "text": "harder to read harder to manage it made life a little bit harder however then you know about halfway through this",
    "start": "1642010",
    "end": "1647530"
  },
  {
    "text": "process we started looking into just you know just create a new CRD or just create a new CR for you know for all the",
    "start": "1647530",
    "end": "1653050"
  },
  {
    "text": "different things now the downside of that is we do have to duplicate some code there are some things that you know",
    "start": "1653050",
    "end": "1658780"
  },
  {
    "text": "we could be more dry about but the code has become a lot a lot simpler it's a lot easier to learn it's a lot of",
    "start": "1658780",
    "end": "1663910"
  },
  {
    "text": "usually to ramp on and it's actually a lot easier to you know kind of debug and work through so it's a trade-off we made",
    "start": "1663910",
    "end": "1669100"
  },
  {
    "text": "that you know might bite us later but it's it's worked out so far and Wes you know you probably ya know I'm like a",
    "start": "1669100",
    "end": "1674710"
  },
  {
    "text": "Steven mentioned so we Eddie curator to our alpha just recently and that was not",
    "start": "1674710",
    "end": "1680920"
  },
  {
    "text": "on my quarter plan originally so he just came is like we have a health a customer we need to manage their instance their",
    "start": "1680920",
    "end": "1686350"
  },
  {
    "text": "indexes let's get curator out there simple so it was an afternoon's to two days of work to just spin up another",
    "start": "1686350",
    "end": "1692590"
  },
  {
    "text": "quick CR we already have a bunch of CRS that do this and just make it a little more specific tune it a bit more to just",
    "start": "1692590",
    "end": "1698170"
  },
  {
    "text": "manage a cron job and it take a config map and it's lettuce really iterate very quickly on new features and respond to",
    "start": "1698170",
    "end": "1705070"
  },
  {
    "text": "help or criticisms and actually requests but like Steve said it's gonna bite us any ask quite a bit because now we have",
    "start": "1705070",
    "end": "1712120"
  },
  {
    "text": "I think six see ours and four of them are really similar so we're looking at some refactoring uh as some holiday",
    "start": "1712120",
    "end": "1718870"
  },
  {
    "text": "homework across the team and then we tie in to the velocity of kubernetes and",
    "start": "1718870",
    "end": "1723970"
  },
  {
    "start": "1721000",
    "end": "1721000"
  },
  {
    "text": "it's touched a few points where massive state machine great idea nine twelve months ago probably not a great idea now",
    "start": "1723970",
    "end": "1731049"
  },
  {
    "text": "we've had that complexity another great example so from the beginning and I alluded to it before and how we update",
    "start": "1731049",
    "end": "1737019"
  },
  {
    "text": "resources we need a way to expand the storage on these EBS volumes that were attaching to these pods a year ago there",
    "start": "1737019",
    "end": "1745600"
  },
  {
    "text": "was no automatic magic way to do that Krupa teddies even though you could do that with Amazon so Steve and I are in a room we're figuring out cost what if we",
    "start": "1745600",
    "end": "1752049"
  },
  {
    "text": "attached two volumes to it what if we do these massive data swings and we looked at the complexity and then looked at the",
    "start": "1752049",
    "end": "1757840"
  },
  {
    "text": "roadmap or like let's just punt on it by the time when 11 comes out Krupa 10 you solved that for us so really pay",
    "start": "1757840",
    "end": "1765190"
  },
  {
    "text": "attention on the roadmap when you're building on it and really evaluate the roadmap to really what you need to implement just as they think I was role",
    "start": "1765190",
    "end": "1773200"
  },
  {
    "text": "noticing as we go to more of these conferences and talks people are solving the problems as fast as you can in kubernetes is integrating it as fast as",
    "start": "1773200",
    "end": "1780220"
  },
  {
    "text": "they can a little bit of closing yeah so you you know you all can try it there we",
    "start": "1780220",
    "end": "1787179"
  },
  {
    "text": "have an evaluation program right now we're kind of right between the alpha and beta it's not yet an open beta but you know by contacting us we can give",
    "start": "1787179",
    "end": "1793299"
  },
  {
    "text": "you some free resources to check out the the new service you know kick the tires provide us with feedback give us some",
    "start": "1793299",
    "end": "1799330"
  },
  {
    "text": "you know give us some ideas on how you think we can make the product better there's that link there I also have some",
    "start": "1799330",
    "end": "1804879"
  },
  {
    "text": "cards in the front here with a QR code so you don't have to write it you know write that down or type like 70 shirts",
    "start": "1804879",
    "end": "1810460"
  },
  {
    "text": "yeah that's all we could fit in the luggage time okay and then the other piece is you can look at our code we are",
    "start": "1810460",
    "end": "1817629"
  },
  {
    "start": "1814000",
    "end": "1814000"
  },
  {
    "text": "not yet oh yeah so we started the project very much we want to be open-source we're using all these",
    "start": "1817629",
    "end": "1823269"
  },
  {
    "text": "open-source tools and then we had to start making decisions oh well we need this component to send messages to this",
    "start": "1823269",
    "end": "1828639"
  },
  {
    "text": "part of our control plan they're like well it's a hundred lines of code here or it's a brand-new service here so we",
    "start": "1828639",
    "end": "1834820"
  },
  {
    "text": "started just getting lazy what we do we are committing to in q1 we are going to",
    "start": "1834820",
    "end": "1841179"
  },
  {
    "text": "try to get more of our more of the tooling that we're using out there and visible to the community we've had pain",
    "start": "1841179",
    "end": "1846820"
  },
  {
    "text": "points we've learned a lot and we've learned a lot from other people's projects so we want to get that out there and one of the reoccurring themes",
    "start": "1846820",
    "end": "1853210"
  },
  {
    "text": "in the next quarter is decoupling some of our business logic decoupling some of our control plain logic and being able",
    "start": "1853210",
    "end": "1860259"
  },
  {
    "text": "to open source this sometime next year early next year so we can get feedback and make it a better product",
    "start": "1860259",
    "end": "1865450"
  },
  {
    "text": "everybody and then we're hiring engineering sales full-stack des GUI",
    "start": "1865450",
    "end": "1871419"
  },
  {
    "text": "devs if you know kubernetes go any of those things if you think this is interesting or we're mildly interesting",
    "start": "1871419",
    "end": "1878200"
  },
  {
    "text": "come and talk to us we've got a couple more guys from York down here in the front row I'm sure you could ask them some questions too yeah that's it I've got a",
    "start": "1878200",
    "end": "1886840"
  },
  {
    "text": "couple minutes left anyone have any questions you want to be vocal anyone want to come up here thank you yeah so",
    "start": "1886840",
    "end": "1903519"
  },
  {
    "text": "we're not using any local storage and we're not on Prem right now we're doing EBS volumes in Amazon and we're looking",
    "start": "1903519",
    "end": "1909549"
  },
  {
    "text": "at a shirred you know remote disks in Azure when we get there and Google we're still researching though after seeing",
    "start": "1909549",
    "end": "1917049"
  },
  {
    "text": "what Hoover talked about today with their storage we're gonna start investigating that for our really high",
    "start": "1917049",
    "end": "1922240"
  },
  {
    "text": "performance customers it's just harder to move resources around when you lose a node and like you saw like I said",
    "start": "1922240",
    "end": "1928570"
  },
  {
    "text": "elastic does not handle that very well on a big cluster especially busy ones anyone else great thanks guys",
    "start": "1928570",
    "end": "1936970"
  },
  {
    "text": "we really appreciate it",
    "start": "1936970",
    "end": "1939898"
  }
]