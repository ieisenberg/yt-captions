[
  {
    "start": "0",
    "end": "175000"
  },
  {
    "text": "hello everyone I'm shelja Agarwal and",
    "start": "560",
    "end": "3480"
  },
  {
    "text": "with me is Mahesh Pai we are staff",
    "start": "3480",
    "end": "5600"
  },
  {
    "text": "software engineers at int and today we",
    "start": "5600",
    "end": "7879"
  },
  {
    "text": "are going to talk about uh the approach",
    "start": "7879",
    "end": "10320"
  },
  {
    "text": "that we took to minimize cost for",
    "start": "10320",
    "end": "12840"
  },
  {
    "text": "distributed tracing storage",
    "start": "12840",
    "end": "15840"
  },
  {
    "text": "architecture before we begin we are from",
    "start": "15840",
    "end": "18160"
  },
  {
    "text": "int and we believe in open source and",
    "start": "18160",
    "end": "20480"
  },
  {
    "text": "open collaboration we are active",
    "start": "20480",
    "end": "22720"
  },
  {
    "text": "consumers and we have also contributed",
    "start": "22720",
    "end": "24920"
  },
  {
    "text": "to multiple open- Source projects in the",
    "start": "24920",
    "end": "27480"
  },
  {
    "text": "cncf",
    "start": "27480",
    "end": "28960"
  },
  {
    "text": "space",
    "start": "28960",
    "end": "31119"
  },
  {
    "text": "this is the scale that we deal with at",
    "start": "31119",
    "end": "32960"
  },
  {
    "text": "in we have more than 2,000 Services",
    "start": "32960",
    "end": "36040"
  },
  {
    "text": "hosted across uh more than 300",
    "start": "36040",
    "end": "38200"
  },
  {
    "text": "kubernetes cluster and 16,000 name",
    "start": "38200",
    "end": "42800"
  },
  {
    "text": "spaces the agenda of today's talk is we",
    "start": "43719",
    "end": "46559"
  },
  {
    "text": "will start with a brief overview on what",
    "start": "46559",
    "end": "49039"
  },
  {
    "text": "is distributor tracing and its benefits",
    "start": "49039",
    "end": "51600"
  },
  {
    "text": "followed by the user Journey with",
    "start": "51600",
    "end": "53280"
  },
  {
    "text": "distributor tracing at end to it we will",
    "start": "53280",
    "end": "55440"
  },
  {
    "text": "also touch upon the initial architecture",
    "start": "55440",
    "end": "57600"
  },
  {
    "text": "and its challenges and we will move on",
    "start": "57600",
    "end": "60359"
  },
  {
    "text": "to the new cost optimized architecture",
    "start": "60359",
    "end": "62960"
  },
  {
    "text": "we will also deep dive into the trace",
    "start": "62960",
    "end": "64799"
  },
  {
    "text": "data inje and query details and we will",
    "start": "64799",
    "end": "67720"
  },
  {
    "text": "be wrapping up the talk with benefits",
    "start": "67720",
    "end": "69640"
  },
  {
    "text": "and next",
    "start": "69640",
    "end": "72080"
  },
  {
    "text": "steps so let's begin what is distributed",
    "start": "72799",
    "end": "76320"
  },
  {
    "text": "tracing so uh as many of us here might",
    "start": "76320",
    "end": "78799"
  },
  {
    "text": "already know distributor tracing is a",
    "start": "78799",
    "end": "80680"
  },
  {
    "text": "powerful technique that helps us to",
    "start": "80680",
    "end": "82600"
  },
  {
    "text": "track the flow and timing of request as",
    "start": "82600",
    "end": "85520"
  },
  {
    "text": "it moves through multiple systems",
    "start": "85520",
    "end": "87200"
  },
  {
    "text": "especially in a microservice",
    "start": "87200",
    "end": "88720"
  },
  {
    "text": "architecture so so uh it provides us",
    "start": "88720",
    "end": "91240"
  },
  {
    "text": "with the performance insights and helps",
    "start": "91240",
    "end": "93119"
  },
  {
    "text": "us to identify any bottlenecks it will",
    "start": "93119",
    "end": "95880"
  },
  {
    "text": "also help us to pinpoint the failure",
    "start": "95880",
    "end": "98280"
  },
  {
    "text": "service in a typical workflow scenario",
    "start": "98280",
    "end": "100880"
  },
  {
    "text": "so these are some of the terminologies",
    "start": "100880",
    "end": "102720"
  },
  {
    "text": "of distributor tracing starting from",
    "start": "102720",
    "end": "104759"
  },
  {
    "text": "span span represents the most",
    "start": "104759",
    "end": "107079"
  },
  {
    "text": "fundamental unit of a trace it contains",
    "start": "107079",
    "end": "109719"
  },
  {
    "text": "information about the operation the",
    "start": "109719",
    "end": "112040"
  },
  {
    "text": "start time end time and the context that",
    "start": "112040",
    "end": "114640"
  },
  {
    "text": "needs to be propagated across the system",
    "start": "114640",
    "end": "117399"
  },
  {
    "text": "events are the structured log messages",
    "start": "117399",
    "end": "119439"
  },
  {
    "text": "on a span attributes are the key value",
    "start": "119439",
    "end": "122439"
  },
  {
    "text": "pair that contain metadata about the",
    "start": "122439",
    "end": "124840"
  },
  {
    "text": "operation that we are tracking and Trace",
    "start": "124840",
    "end": "127360"
  },
  {
    "text": "is a collection of spans in a certain",
    "start": "127360",
    "end": "129360"
  },
  {
    "text": "hierarchy as the",
    "start": "129360",
    "end": "132280"
  },
  {
    "text": "request let's look into some of the",
    "start": "132840",
    "end": "135040"
  },
  {
    "text": "benefits of distributed tracing so Inuit",
    "start": "135040",
    "end": "137680"
  },
  {
    "text": "is a microservice company and each",
    "start": "137680",
    "end": "139680"
  },
  {
    "text": "request flows through multiple Services",
    "start": "139680",
    "end": "142239"
  },
  {
    "text": "each of the service has its own log end",
    "start": "142239",
    "end": "144560"
  },
  {
    "text": "point and although logs help us identify",
    "start": "144560",
    "end": "147400"
  },
  {
    "text": "what the error is during an incident TR",
    "start": "147400",
    "end": "150080"
  },
  {
    "text": "in it becomes difficult to identify",
    "start": "150080",
    "end": "152200"
  },
  {
    "text": "which service to look into that's why",
    "start": "152200",
    "end": "154360"
  },
  {
    "text": "distributor tracing helps it helps to",
    "start": "154360",
    "end": "156760"
  },
  {
    "text": "isolate issues uh it also provides us",
    "start": "156760",
    "end": "159560"
  },
  {
    "text": "with the top level view of the end to",
    "start": "159560",
    "end": "161680"
  },
  {
    "text": "end transactional flow and it helps us",
    "start": "161680",
    "end": "164560"
  },
  {
    "text": "integrate Logs with metrics so overall",
    "start": "164560",
    "end": "167800"
  },
  {
    "text": "it not only reduces the meantime to",
    "start": "167800",
    "end": "170040"
  },
  {
    "text": "isolate it further accelerates the",
    "start": "170040",
    "end": "172200"
  },
  {
    "text": "meantime to",
    "start": "172200",
    "end": "174879"
  },
  {
    "start": "175000",
    "end": "332000"
  },
  {
    "text": "repair now let us look into a user",
    "start": "175599",
    "end": "178040"
  },
  {
    "text": "Journey powered by distributor tracing",
    "start": "178040",
    "end": "179959"
  },
  {
    "text": "at into",
    "start": "179959",
    "end": "181480"
  },
  {
    "text": "it let us assume I an on call engineer",
    "start": "181480",
    "end": "184400"
  },
  {
    "text": "and I get an alert this is one such",
    "start": "184400",
    "end": "186840"
  },
  {
    "text": "sample alert from a frontend application",
    "start": "186840",
    "end": "189400"
  },
  {
    "text": "it has details about the plug-in name",
    "start": "189400",
    "end": "191920"
  },
  {
    "text": "the web app name uh the percentage of",
    "start": "191920",
    "end": "194440"
  },
  {
    "text": "user impacted and the failed",
    "start": "194440",
    "end": "197360"
  },
  {
    "text": "interactions so if we follow this alert",
    "start": "197360",
    "end": "200920"
  },
  {
    "text": "it takes us to the Exemplar traces that",
    "start": "200920",
    "end": "203239"
  },
  {
    "text": "are currently degraded or failing during",
    "start": "203239",
    "end": "205840"
  },
  {
    "text": "that particular alert",
    "start": "205840",
    "end": "208000"
  },
  {
    "text": "window if we double click on any of",
    "start": "208000",
    "end": "210360"
  },
  {
    "text": "these traces it takes us to the full",
    "start": "210360",
    "end": "212280"
  },
  {
    "text": "Trace view which shows the collection of",
    "start": "212280",
    "end": "214319"
  },
  {
    "text": "all the spans and also highlights the",
    "start": "214319",
    "end": "216799"
  },
  {
    "text": "error span that is currently failing for",
    "start": "216799",
    "end": "218959"
  },
  {
    "text": "that particular time window so basically",
    "start": "218959",
    "end": "221280"
  },
  {
    "text": "it helps us to identify the service that",
    "start": "221280",
    "end": "223480"
  },
  {
    "text": "is failing we have also integrated this",
    "start": "223480",
    "end": "226280"
  },
  {
    "text": "with logs so if we click on the logs",
    "start": "226280",
    "end": "228680"
  },
  {
    "text": "option it takes us to the log end point",
    "start": "228680",
    "end": "230920"
  },
  {
    "text": "which shows what the error message is",
    "start": "230920",
    "end": "232760"
  },
  {
    "text": "for that particular",
    "start": "232760",
    "end": "234920"
  },
  {
    "text": "incident we have also used traces to",
    "start": "234920",
    "end": "237680"
  },
  {
    "text": "build the service dependency graph so as",
    "start": "237680",
    "end": "240280"
  },
  {
    "text": "you can see during the alert time period",
    "start": "240280",
    "end": "242920"
  },
  {
    "text": "it clearly shows what services are",
    "start": "242920",
    "end": "244840"
  },
  {
    "text": "failing so in this particular image we",
    "start": "244840",
    "end": "247599"
  },
  {
    "text": "can imagine that there would have been",
    "start": "247599",
    "end": "249599"
  },
  {
    "text": "multiple alerts across multiple services",
    "start": "249599",
    "end": "252239"
  },
  {
    "text": "but service dependency graph helps us to",
    "start": "252239",
    "end": "254360"
  },
  {
    "text": "pinpoint what exactly is the root cause",
    "start": "254360",
    "end": "256639"
  },
  {
    "text": "of",
    "start": "256639",
    "end": "257720"
  },
  {
    "text": "failure along with this user Journey we",
    "start": "257720",
    "end": "260799"
  },
  {
    "text": "have also allowed users to be able to",
    "start": "260799",
    "end": "263320"
  },
  {
    "text": "filter their Exemplar traces with",
    "start": "263320",
    "end": "265240"
  },
  {
    "text": "service attributes so this gives them",
    "start": "265240",
    "end": "267479"
  },
  {
    "text": "with the flexibility of identifying",
    "start": "267479",
    "end": "269759"
  },
  {
    "text": "different anomalous patterns in their",
    "start": "269759",
    "end": "271520"
  },
  {
    "text": "service based on their service",
    "start": "271520",
    "end": "273400"
  },
  {
    "text": "attributes and other application",
    "start": "273400",
    "end": "277039"
  },
  {
    "text": "metrics now let's move on to some",
    "start": "278560",
    "end": "281479"
  },
  {
    "text": "challenges at uh inid for distributed",
    "start": "281479",
    "end": "284320"
  },
  {
    "text": "tracing so we have already mentioned",
    "start": "284320",
    "end": "286479"
  },
  {
    "text": "that we have more than 2,000 services",
    "start": "286479",
    "end": "288400"
  },
  {
    "text": "and each of these Services can have",
    "start": "288400",
    "end": "290440"
  },
  {
    "text": "different attributes so overall we have",
    "start": "290440",
    "end": "292919"
  },
  {
    "text": "more than 1,000 distinct attributes the",
    "start": "292919",
    "end": "295479"
  },
  {
    "text": "traffic can also Peak up to 8 million",
    "start": "295479",
    "end": "297600"
  },
  {
    "text": "spans per second so index ing these",
    "start": "297600",
    "end": "300280"
  },
  {
    "text": "attributes can have huge implications on",
    "start": "300280",
    "end": "302880"
  },
  {
    "text": "cost also due to the statefulness of",
    "start": "302880",
    "end": "305639"
  },
  {
    "text": "data the backend storage has to be",
    "start": "305639",
    "end": "307840"
  },
  {
    "text": "pre-scaled for maximum throughput at all",
    "start": "307840",
    "end": "310240"
  },
  {
    "text": "times also the cost attribution",
    "start": "310240",
    "end": "312800"
  },
  {
    "text": "predictability becomes a little",
    "start": "312800",
    "end": "314560"
  },
  {
    "text": "difficult so we are from platform team",
    "start": "314560",
    "end": "316759"
  },
  {
    "text": "and we have to attribute the cost back",
    "start": "316759",
    "end": "318639"
  },
  {
    "text": "to service owners so increase and",
    "start": "318639",
    "end": "320880"
  },
  {
    "text": "decrease in traffic on any one service",
    "start": "320880",
    "end": "323360"
  },
  {
    "text": "can have huge implications on cost",
    "start": "323360",
    "end": "325560"
  },
  {
    "text": "across all the services Mahesh will be",
    "start": "325560",
    "end": "328080"
  },
  {
    "text": "talking about the architect details now",
    "start": "328080",
    "end": "331160"
  },
  {
    "text": "thank",
    "start": "331160",
    "end": "332319"
  },
  {
    "start": "332000",
    "end": "573000"
  },
  {
    "text": "you thank you Shela so um what I'll do",
    "start": "332319",
    "end": "335880"
  },
  {
    "text": "is I'll first go over the current",
    "start": "335880",
    "end": "337160"
  },
  {
    "text": "initial architecture that we had and",
    "start": "337160",
    "end": "339000"
  },
  {
    "text": "talk about the problem that we faced and",
    "start": "339000",
    "end": "340479"
  },
  {
    "text": "then we'll go into how we went about",
    "start": "340479",
    "end": "342919"
  },
  {
    "text": "fixing the problem so uh this is a",
    "start": "342919",
    "end": "345360"
  },
  {
    "text": "typical architecture that you'll",
    "start": "345360",
    "end": "346479"
  },
  {
    "text": "generally see in any of your tracing",
    "start": "346479",
    "end": "348680"
  },
  {
    "text": "back end so you get traces from",
    "start": "348680",
    "end": "351400"
  },
  {
    "text": "different sources uh if you look at the",
    "start": "351400",
    "end": "353160"
  },
  {
    "text": "left side of the uh of the architecture",
    "start": "353160",
    "end": "355319"
  },
  {
    "text": "diagram you'll see the sources there are",
    "start": "355319",
    "end": "357440"
  },
  {
    "text": "uh traces coming from VM based system",
    "start": "357440",
    "end": "359759"
  },
  {
    "text": "there are traces coming from kubernetes",
    "start": "359759",
    "end": "361240"
  },
  {
    "text": "systems and there are also traces coming",
    "start": "361240",
    "end": "363400"
  },
  {
    "text": "from U from your front end as well so",
    "start": "363400",
    "end": "365880"
  },
  {
    "text": "all these spans and traces go into a",
    "start": "365880",
    "end": "367680"
  },
  {
    "text": "common back end where the traces get",
    "start": "367680",
    "end": "369400"
  },
  {
    "text": "stitched together uh we deploy a set of",
    "start": "369400",
    "end": "372479"
  },
  {
    "text": "Hotel agents or hotel collectors which",
    "start": "372479",
    "end": "374280"
  },
  {
    "text": "are used to collate all this information",
    "start": "374280",
    "end": "376800"
  },
  {
    "text": "and then are stream to a back end",
    "start": "376800",
    "end": "378319"
  },
  {
    "text": "pipeline using S3 and Kafka uh most of",
    "start": "378319",
    "end": "381400"
  },
  {
    "text": "our services are primarily deployed on",
    "start": "381400",
    "end": "383720"
  },
  {
    "text": "AWS infrastructure so that's why we",
    "start": "383720",
    "end": "385840"
  },
  {
    "text": "using S3 as a storage mechanism and we",
    "start": "385840",
    "end": "389319"
  },
  {
    "text": "use S3 plus Kafka so that we can replay",
    "start": "389319",
    "end": "393400"
  },
  {
    "text": "uh the tracers back in case we run into",
    "start": "393400",
    "end": "395680"
  },
  {
    "text": "issues on the backend pipeline so once",
    "start": "395680",
    "end": "397960"
  },
  {
    "text": "the data is pushed to S3 we we deploy a",
    "start": "397960",
    "end": "401560"
  },
  {
    "text": "a component called as Trace ingestor so",
    "start": "401560",
    "end": "403639"
  },
  {
    "text": "Trace inors goes through all the spans",
    "start": "403639",
    "end": "406160"
  },
  {
    "text": "and uh traces that are there in the S3",
    "start": "406160",
    "end": "408880"
  },
  {
    "text": "perform some uh uh massaging and then",
    "start": "408880",
    "end": "411360"
  },
  {
    "text": "stores them in two different stores so",
    "start": "411360",
    "end": "414000"
  },
  {
    "text": "if you look at that there are two stores",
    "start": "414000",
    "end": "415440"
  },
  {
    "text": "one is a tray store the other is the",
    "start": "415440",
    "end": "417280"
  },
  {
    "text": "indexing store uh so indexing store is",
    "start": "417280",
    "end": "419680"
  },
  {
    "text": "required because like sha mentioned we",
    "start": "419680",
    "end": "421319"
  },
  {
    "text": "should be able to search traces based on",
    "start": "421319",
    "end": "422919"
  },
  {
    "text": "different attributes uh our user journey",
    "start": "422919",
    "end": "425800"
  },
  {
    "text": "is not primarily based on only on Trace",
    "start": "425800",
    "end": "428039"
  },
  {
    "text": "ID where you get an Exemplar Trace ID",
    "start": "428039",
    "end": "430319"
  },
  {
    "text": "and then try to you know look at that",
    "start": "430319",
    "end": "431840"
  },
  {
    "text": "Trace to see what has gone wrong uh we",
    "start": "431840",
    "end": "434120"
  },
  {
    "text": "also provide the capability of users to",
    "start": "434120",
    "end": "436160"
  },
  {
    "text": "be able to search their traces based on",
    "start": "436160",
    "end": "437879"
  },
  {
    "text": "different attributes for example uh a",
    "start": "437879",
    "end": "440240"
  },
  {
    "text": "transaction ID that has failed or it",
    "start": "440240",
    "end": "442039"
  },
  {
    "text": "could be that give me a trace which has",
    "start": "442039",
    "end": "444560"
  },
  {
    "text": "high latency and so on so for that",
    "start": "444560",
    "end": "447319"
  },
  {
    "text": "feature to be available we need some",
    "start": "447319",
    "end": "448840"
  },
  {
    "text": "kind of we need as a index indexing",
    "start": "448840",
    "end": "451240"
  },
  {
    "text": "engine so that's why we started storing",
    "start": "451240",
    "end": "453479"
  },
  {
    "text": "data in an indexing engine and then you",
    "start": "453479",
    "end": "455479"
  },
  {
    "text": "have the final Trace store where which",
    "start": "455479",
    "end": "456960"
  },
  {
    "text": "is used to pull up the completely",
    "start": "456960",
    "end": "458680"
  },
  {
    "text": "stitched Trace so when you have when you",
    "start": "458680",
    "end": "460639"
  },
  {
    "text": "identified a trace ID you give that",
    "start": "460639",
    "end": "462680"
  },
  {
    "text": "Trace ID and then pull the entire set of",
    "start": "462680",
    "end": "464639"
  },
  {
    "text": "spans associated with the trace ID using",
    "start": "464639",
    "end": "466599"
  },
  {
    "text": "this this Trace tool then we have a a",
    "start": "466599",
    "end": "469479"
  },
  {
    "text": "layer of Trace search API which is",
    "start": "469479",
    "end": "471159"
  },
  {
    "text": "nothing but a query layer which",
    "start": "471159",
    "end": "472599"
  },
  {
    "text": "abstracts it from the user uh with this",
    "start": "472599",
    "end": "475879"
  },
  {
    "text": "architecture when we started looking at",
    "start": "475879",
    "end": "477879"
  },
  {
    "text": "the cost aspect of it uh we quickly",
    "start": "477879",
    "end": "480280"
  },
  {
    "text": "realized that majority of our cost was",
    "start": "480280",
    "end": "482759"
  },
  {
    "text": "coming from the two two components that",
    "start": "482759",
    "end": "484680"
  },
  {
    "text": "I talked about which is the trade store",
    "start": "484680",
    "end": "485960"
  },
  {
    "text": "and the indexing store this was",
    "start": "485960",
    "end": "487879"
  },
  {
    "text": "contributing almost 70% or 75% of our",
    "start": "487879",
    "end": "490800"
  },
  {
    "text": "overall backend cost so we wanted to",
    "start": "490800",
    "end": "494039"
  },
  {
    "text": "tackle this and figure out a way if to",
    "start": "494039",
    "end": "496840"
  },
  {
    "text": "how to optimize this or probably even",
    "start": "496840",
    "end": "498840"
  },
  {
    "text": "replace it or whatever so and given the",
    "start": "498840",
    "end": "501639"
  },
  {
    "text": "fact that our load volume is pretty high",
    "start": "501639",
    "end": "504080"
  },
  {
    "text": "I mean we get a peak volume of almost 8",
    "start": "504080",
    "end": "506159"
  },
  {
    "text": "million spans per second and that is in",
    "start": "506159",
    "end": "508759"
  },
  {
    "text": "spite of uh uh doing head sampling and",
    "start": "508759",
    "end": "511960"
  },
  {
    "text": "given the fact that it's going to grow",
    "start": "511960",
    "end": "513440"
  },
  {
    "text": "year on year we wanted to do this at the",
    "start": "513440",
    "end": "515599"
  },
  {
    "text": "earliest possible time so we we started",
    "start": "515599",
    "end": "517399"
  },
  {
    "text": "looking at how do we go about attacking",
    "start": "517399",
    "end": "519839"
  },
  {
    "text": "this problem uh and one of the main",
    "start": "519839",
    "end": "522560"
  },
  {
    "text": "reason why the cost is high is because",
    "start": "522560",
    "end": "524680"
  },
  {
    "text": "the backend store is stateful in nature",
    "start": "524680",
    "end": "527240"
  },
  {
    "text": "and when they are stateful in nature it",
    "start": "527240",
    "end": "528760"
  },
  {
    "text": "becomes difficult to manage the uh",
    "start": "528760",
    "end": "530680"
  },
  {
    "text": "scaling aspect of it uh the bottom the",
    "start": "530680",
    "end": "534160"
  },
  {
    "text": "bottom uh uh chart that you see is a",
    "start": "534160",
    "end": "536880"
  },
  {
    "text": "typical uh trend of the",
    "start": "536880",
    "end": "539959"
  },
  {
    "text": "uh tracing traffic uh throughout the day",
    "start": "539959",
    "end": "542880"
  },
  {
    "text": "so it it's always either increasing or",
    "start": "542880",
    "end": "545040"
  },
  {
    "text": "or always decreasing which means your",
    "start": "545040",
    "end": "546680"
  },
  {
    "text": "back end has to be continuously scaling",
    "start": "546680",
    "end": "549399"
  },
  {
    "text": "out or scaling in which makes it very",
    "start": "549399",
    "end": "551480"
  },
  {
    "text": "difficult to maintain so what eventually",
    "start": "551480",
    "end": "553480"
  },
  {
    "text": "happens is we end up uh scaling your",
    "start": "553480",
    "end": "556360"
  },
  {
    "text": "backend to the Max Capacity that we are",
    "start": "556360",
    "end": "558320"
  },
  {
    "text": "expecting in a day which is around 3",
    "start": "558320",
    "end": "559720"
  },
  {
    "text": "million TPS per second which means",
    "start": "559720",
    "end": "562200"
  },
  {
    "text": "during the low peak time you're wasting",
    "start": "562200",
    "end": "564279"
  },
  {
    "text": "resource you're wasting which means",
    "start": "564279",
    "end": "565839"
  },
  {
    "text": "you're incurring higher cost so that was",
    "start": "565839",
    "end": "568320"
  },
  {
    "text": "one of the primary reason we incurring",
    "start": "568320",
    "end": "570560"
  },
  {
    "text": "higher cost so when we started looking",
    "start": "570560",
    "end": "572560"
  },
  {
    "text": "at the new",
    "start": "572560",
    "end": "573760"
  },
  {
    "start": "573000",
    "end": "703000"
  },
  {
    "text": "architecture we decided on what what are",
    "start": "573760",
    "end": "576240"
  },
  {
    "text": "we what do we want out of the the",
    "start": "576240",
    "end": "577519"
  },
  {
    "text": "architecture first thing is we are a",
    "start": "577519",
    "end": "580079"
  },
  {
    "text": "system which ingests high volume we",
    "start": "580079",
    "end": "581880"
  },
  {
    "text": "ingest like I said our inest can go up",
    "start": "581880",
    "end": "583760"
  },
  {
    "text": "to even 8 million spans per second but",
    "start": "583760",
    "end": "586040"
  },
  {
    "text": "the actual query load would be uh would",
    "start": "586040",
    "end": "588680"
  },
  {
    "text": "be very small for example even if let's",
    "start": "588680",
    "end": "590399"
  },
  {
    "text": "say there are 1,000 to 2,000 uh",
    "start": "590399",
    "end": "593120"
  },
  {
    "text": "developers logged into your Dev portal",
    "start": "593120",
    "end": "595000"
  },
  {
    "text": "or your UI the actual query load that it",
    "start": "595000",
    "end": "597399"
  },
  {
    "text": "translates into would be very minimal",
    "start": "597399",
    "end": "598880"
  },
  {
    "text": "because these queries are triggered",
    "start": "598880",
    "end": "600120"
  },
  {
    "text": "manually which means your query load",
    "start": "600120",
    "end": "602079"
  },
  {
    "text": "would be uh 10 to 20 QPS at Max is what",
    "start": "602079",
    "end": "605399"
  },
  {
    "text": "we have seen even when there are",
    "start": "605399",
    "end": "606920"
  },
  {
    "text": "thousands of users using it",
    "start": "606920",
    "end": "608519"
  },
  {
    "text": "simultaneously so we we were okay with",
    "start": "608519",
    "end": "611240"
  },
  {
    "text": "having a system which could cater to",
    "start": "611240",
    "end": "613040"
  },
  {
    "text": "let's say 50 QPS or 100 QPS system so",
    "start": "613040",
    "end": "616040"
  },
  {
    "text": "that was the first uh first uh criteria",
    "start": "616040",
    "end": "618399"
  },
  {
    "text": "that we looked at the other one was uh",
    "start": "618399",
    "end": "621079"
  },
  {
    "text": "the number of attributes sha mentioned",
    "start": "621079",
    "end": "623000"
  },
  {
    "text": "we have 2,000 Services which means each",
    "start": "623000",
    "end": "625560"
  },
  {
    "text": "service can send different set of",
    "start": "625560",
    "end": "627040"
  },
  {
    "text": "attributes which means there are more",
    "start": "627040",
    "end": "628800"
  },
  {
    "text": "than th000 2,500 different attributes",
    "start": "628800",
    "end": "630920"
  },
  {
    "text": "that are part of the system but when a",
    "start": "630920",
    "end": "633360"
  },
  {
    "text": "user is searching for data he or she",
    "start": "633360",
    "end": "635519"
  },
  {
    "text": "would look at only a couple of",
    "start": "635519",
    "end": "636839"
  },
  {
    "text": "attributes like the like the example I",
    "start": "636839",
    "end": "638480"
  },
  {
    "text": "mentioned you could be looking for a",
    "start": "638480",
    "end": "640079"
  },
  {
    "text": "transaction ID you could be looking out",
    "start": "640079",
    "end": "641600"
  },
  {
    "text": "for a let's say latency or an operation",
    "start": "641600",
    "end": "644320"
  },
  {
    "text": "name and so on so the amount of data is",
    "start": "644320",
    "end": "646560"
  },
  {
    "text": "high but the actual data that you're",
    "start": "646560",
    "end": "648079"
  },
  {
    "text": "querying is very minimal uh so that's",
    "start": "648079",
    "end": "650440"
  },
  {
    "text": "the other criteria that we looking at or",
    "start": "650440",
    "end": "652600"
  },
  {
    "text": "characteristics of the data that we were",
    "start": "652600",
    "end": "653959"
  },
  {
    "text": "looking at the next thing was we were",
    "start": "653959",
    "end": "656279"
  },
  {
    "text": "okay to compromise on the response time",
    "start": "656279",
    "end": "658519"
  },
  {
    "text": "the current system gives us subsec query",
    "start": "658519",
    "end": "661160"
  },
  {
    "text": "latency uh but we were okay even if if",
    "start": "661160",
    "end": "663800"
  },
  {
    "text": "we are able to build a system with with",
    "start": "663800",
    "end": "665480"
  },
  {
    "text": "the response time going up to a let's",
    "start": "665480",
    "end": "667040"
  },
  {
    "text": "say a second or two if we can bring down",
    "start": "667040",
    "end": "669480"
  },
  {
    "text": "the cost drastically because from a user",
    "start": "669480",
    "end": "671519"
  },
  {
    "text": "standpoint it doesn't make too much of a",
    "start": "671519",
    "end": "673480"
  },
  {
    "text": "difference I mean when if if it's a",
    "start": "673480",
    "end": "675279"
  },
  {
    "text": "subsecond or a second or two because we",
    "start": "675279",
    "end": "677360"
  },
  {
    "text": "not this is not a system where you're",
    "start": "677360",
    "end": "678519"
  },
  {
    "text": "running automated queries and so",
    "start": "678519",
    "end": "680639"
  },
  {
    "text": "on and then the other thing that we also",
    "start": "680639",
    "end": "683000"
  },
  {
    "text": "wanted to build was a analytical",
    "start": "683000",
    "end": "684480"
  },
  {
    "text": "capability on the data that we uh that",
    "start": "684480",
    "end": "686440"
  },
  {
    "text": "we were injesting so having looked at",
    "start": "686440",
    "end": "688399"
  },
  {
    "text": "all this characteristics",
    "start": "688399",
    "end": "689839"
  },
  {
    "text": "what made what what was clear to us was",
    "start": "689839",
    "end": "692360"
  },
  {
    "text": "that probably we should look at",
    "start": "692360",
    "end": "693440"
  },
  {
    "text": "something called as a columnar data",
    "start": "693440",
    "end": "695560"
  },
  {
    "text": "storage for our data wherein uh the data",
    "start": "695560",
    "end": "698959"
  },
  {
    "text": "are stored in a columna format I'll come",
    "start": "698959",
    "end": "700519"
  },
  {
    "text": "to what is the columna format",
    "start": "700519",
    "end": "703360"
  },
  {
    "start": "703000",
    "end": "820000"
  },
  {
    "text": "here so this is this uh this slide",
    "start": "703360",
    "end": "706839"
  },
  {
    "text": "explains briefly what uh what's the",
    "start": "706839",
    "end": "709000"
  },
  {
    "text": "difference between a row based storage",
    "start": "709000",
    "end": "710959"
  },
  {
    "text": "versus a column based storage so let's",
    "start": "710959",
    "end": "713040"
  },
  {
    "text": "take if you look at the example there's",
    "start": "713040",
    "end": "714240"
  },
  {
    "text": "a table with three columns in a typical",
    "start": "714240",
    "end": "717040"
  },
  {
    "text": "storage based layout the rows are stored",
    "start": "717040",
    "end": "719639"
  },
  {
    "text": "in a contiguous fashion which means if",
    "start": "719639",
    "end": "721440"
  },
  {
    "text": "you're looking for a subset of data",
    "start": "721440",
    "end": "722920"
  },
  {
    "text": "let's say in this case you're looking uh",
    "start": "722920",
    "end": "724920"
  },
  {
    "text": "trying to search a data within column",
    "start": "724920",
    "end": "726639"
  },
  {
    "text": "one you would have you you would end up",
    "start": "726639",
    "end": "729959"
  },
  {
    "text": "scanning the entire data because a B and",
    "start": "729959",
    "end": "732560"
  },
  {
    "text": "C are like spread across the data",
    "start": "732560",
    "end": "734440"
  },
  {
    "text": "they're not in a contous fashion so this",
    "start": "734440",
    "end": "736160"
  },
  {
    "text": "is how a row based system works but on",
    "start": "736160",
    "end": "739480"
  },
  {
    "text": "the flip side if if you look at a column",
    "start": "739480",
    "end": "740920"
  },
  {
    "text": "based systems what what generally",
    "start": "740920",
    "end": "742760"
  },
  {
    "text": "happens is all the data within a column",
    "start": "742760",
    "end": "744680"
  },
  {
    "text": "are grouped together and stored",
    "start": "744680",
    "end": "746279"
  },
  {
    "text": "continuously so when you're searching",
    "start": "746279",
    "end": "747839"
  },
  {
    "text": "for uh let's say column a in this case",
    "start": "747839",
    "end": "749839"
  },
  {
    "text": "or the first column in this case with a",
    "start": "749839",
    "end": "752000"
  },
  {
    "text": "minimal data scan you are able to",
    "start": "752000",
    "end": "753320"
  },
  {
    "text": "retrieve the data which is a b and c and",
    "start": "753320",
    "end": "755639"
  },
  {
    "text": "that is what typically happens in a",
    "start": "755639",
    "end": "757320"
  },
  {
    "text": "distributed query as well you have",
    "start": "757320",
    "end": "759480"
  },
  {
    "text": "thousands of queries which means there",
    "start": "759480",
    "end": "761000"
  },
  {
    "text": "are thousands of fields but you're only",
    "start": "761000",
    "end": "762880"
  },
  {
    "text": "looking at one or two of those",
    "start": "762880",
    "end": "764120"
  },
  {
    "text": "attributes which means you're looking at",
    "start": "764120",
    "end": "765279"
  },
  {
    "text": "only one or two columns from that from",
    "start": "765279",
    "end": "767480"
  },
  {
    "text": "from your entire row so that's why we we",
    "start": "767480",
    "end": "769920"
  },
  {
    "text": "we went ahead with you know using",
    "start": "769920",
    "end": "771519"
  },
  {
    "text": "columnar database columnar storage as a",
    "start": "771519",
    "end": "773720"
  },
  {
    "text": "format for our uh for our",
    "start": "773720",
    "end": "776079"
  },
  {
    "text": "data and the and the format that we uh",
    "start": "776079",
    "end": "779720"
  },
  {
    "text": "chose was Apachi Pary it's an open",
    "start": "779720",
    "end": "781920"
  },
  {
    "text": "source storage format and you you write",
    "start": "781920",
    "end": "784839"
  },
  {
    "text": "data in a Parky format and store it in a",
    "start": "784839",
    "end": "786720"
  },
  {
    "text": "file in our case we store it in S3 uh so",
    "start": "786720",
    "end": "789800"
  },
  {
    "text": "when you look at a park file it has a",
    "start": "789800",
    "end": "792000"
  },
  {
    "text": "self-describing schema so when you open",
    "start": "792000",
    "end": "794279"
  },
  {
    "text": "up a park file it has metadata which",
    "start": "794279",
    "end": "796040"
  },
  {
    "text": "explains to you what is the schema that",
    "start": "796040",
    "end": "797839"
  },
  {
    "text": "is stored within the file what are the",
    "start": "797839",
    "end": "800000"
  },
  {
    "text": "different columns what are the different",
    "start": "800000",
    "end": "802120"
  },
  {
    "text": "uh what are the different uh uh types of",
    "start": "802120",
    "end": "804560"
  },
  {
    "text": "the column and so on so it it it clearly",
    "start": "804560",
    "end": "807079"
  },
  {
    "text": "tells you what is the data that is",
    "start": "807079",
    "end": "808279"
  },
  {
    "text": "residing within the",
    "start": "808279",
    "end": "809680"
  },
  {
    "text": "within the within the file and given",
    "start": "809680",
    "end": "812279"
  },
  {
    "text": "that this is a columnar store it is",
    "start": "812279",
    "end": "814560"
  },
  {
    "text": "faster when you are querying data on a",
    "start": "814560",
    "end": "816399"
  },
  {
    "text": "subset of your",
    "start": "816399",
    "end": "819320"
  },
  {
    "text": "attributes so coming to uh the park",
    "start": "819720",
    "end": "822760"
  },
  {
    "start": "820000",
    "end": "1033000"
  },
  {
    "text": "injection so what happens is typically",
    "start": "822760",
    "end": "825360"
  },
  {
    "text": "in case of distributed tracing each span",
    "start": "825360",
    "end": "827320"
  },
  {
    "text": "would translate into a record which",
    "start": "827320",
    "end": "828839"
  },
  {
    "text": "means we have to define a schema for a",
    "start": "828839",
    "end": "831160"
  },
  {
    "text": "span and span generally has some",
    "start": "831160",
    "end": "833440"
  },
  {
    "text": "mandatory Fields like the trace ID the",
    "start": "833440",
    "end": "835240"
  },
  {
    "text": "span ID the start time end time and so",
    "start": "835240",
    "end": "837600"
  },
  {
    "text": "on so they they become the mandatory",
    "start": "837600",
    "end": "839759"
  },
  {
    "text": "Fields within your par Park schema and",
    "start": "839759",
    "end": "843160"
  },
  {
    "text": "then you have optional attributes which",
    "start": "843160",
    "end": "845279"
  },
  {
    "text": "are nothing but your span level",
    "start": "845279",
    "end": "846480"
  },
  {
    "text": "attributes or your resource level",
    "start": "846480",
    "end": "847680"
  },
  {
    "text": "attributes so all these different fields",
    "start": "847680",
    "end": "850399"
  },
  {
    "text": "are described as as as Fields within",
    "start": "850399",
    "end": "853480"
  },
  {
    "text": "your Park schema so how how how do we",
    "start": "853480",
    "end": "856959"
  },
  {
    "text": "Define a schema so we started looking at",
    "start": "856959",
    "end": "858959"
  },
  {
    "text": "defining a global schema first what that",
    "start": "858959",
    "end": "861839"
  },
  {
    "text": "means is uh there's one schema that is",
    "start": "861839",
    "end": "864800"
  },
  {
    "text": "used across the across the pipeline so",
    "start": "864800",
    "end": "868639"
  },
  {
    "text": "there are 2,000 or th000 or 2,000",
    "start": "868639",
    "end": "870920"
  },
  {
    "text": "Services which emit in totality more",
    "start": "870920",
    "end": "874279"
  },
  {
    "text": "than 1,500 attributes which means you",
    "start": "874279",
    "end": "876399"
  },
  {
    "text": "define each of those attributes as a",
    "start": "876399",
    "end": "878480"
  },
  {
    "text": "field in your schema that's the simplest",
    "start": "878480",
    "end": "880680"
  },
  {
    "text": "way to go about it so the schema there's",
    "start": "880680",
    "end": "882120"
  },
  {
    "text": "only one schema that you have to work",
    "start": "882120",
    "end": "883440"
  },
  {
    "text": "with uh everything gets ined using that",
    "start": "883440",
    "end": "885560"
  },
  {
    "text": "one single schema but we quickly realize",
    "start": "885560",
    "end": "887680"
  },
  {
    "text": "that this is not going to scale or this",
    "start": "887680",
    "end": "888880"
  },
  {
    "text": "is not going to work uh the reason being",
    "start": "888880",
    "end": "891959"
  },
  {
    "text": "when you when you look at a span you a",
    "start": "891959",
    "end": "894040"
  },
  {
    "text": "span will typically have probably 5 to",
    "start": "894040",
    "end": "896440"
  },
  {
    "text": "10 attributes but in your schema you",
    "start": "896440",
    "end": "898600"
  },
  {
    "text": "have different th000 attributes which",
    "start": "898600",
    "end": "899880"
  },
  {
    "text": "means the rest of the attributes have to",
    "start": "899880",
    "end": "902040"
  },
  {
    "text": "be marked rest of the fields have to be",
    "start": "902040",
    "end": "903600"
  },
  {
    "text": "marked as null and we realized that",
    "start": "903600",
    "end": "906600"
  },
  {
    "text": "almost 42% of the uh CPU Cycles was",
    "start": "906600",
    "end": "909959"
  },
  {
    "text": "being spent in writing this null values",
    "start": "909959",
    "end": "912720"
  },
  {
    "text": "so it was very clear to us this is not",
    "start": "912720",
    "end": "914399"
  },
  {
    "text": "going to scale and is not going to work",
    "start": "914399",
    "end": "915759"
  },
  {
    "text": "and we uh we moved to a different uh we",
    "start": "915759",
    "end": "919720"
  },
  {
    "text": "moved to a different uh uh evaluation so",
    "start": "919720",
    "end": "922279"
  },
  {
    "text": "then we started looking at another",
    "start": "922279",
    "end": "923920"
  },
  {
    "text": "possibility of defining schema wherein",
    "start": "923920",
    "end": "926360"
  },
  {
    "text": "we group different services within a",
    "start": "926360",
    "end": "929079"
  },
  {
    "text": "within bu figure out what are the",
    "start": "929079",
    "end": "932519"
  },
  {
    "text": "attributes being emitted by those",
    "start": "932519",
    "end": "933959"
  },
  {
    "text": "services and Define that Define the",
    "start": "933959",
    "end": "936600"
  },
  {
    "text": "schema using those attributes this was",
    "start": "936600",
    "end": "938560"
  },
  {
    "text": "much more efficient the number of null",
    "start": "938560",
    "end": "940639"
  },
  {
    "text": "columns were much much much more smaller",
    "start": "940639",
    "end": "943600"
  },
  {
    "text": "and you could partition the data um uh",
    "start": "943600",
    "end": "946000"
  },
  {
    "text": "in addition to time you could partition",
    "start": "946000",
    "end": "947399"
  },
  {
    "text": "the data using buus as well uh but we",
    "start": "947399",
    "end": "949880"
  },
  {
    "text": "wanted to go a step further and we tried",
    "start": "949880",
    "end": "952240"
  },
  {
    "text": "using schema per service which means you",
    "start": "952240",
    "end": "954839"
  },
  {
    "text": "you have one schema per service so there",
    "start": "954839",
    "end": "956399"
  },
  {
    "text": "are th000 or 2,000 Services there are 2",
    "start": "956399",
    "end": "959199"
  },
  {
    "text": "services but this is very efficient",
    "start": "959199",
    "end": "961319"
  },
  {
    "text": "because you are defining the explicit",
    "start": "961319",
    "end": "963040"
  },
  {
    "text": "set of attributes that each service is",
    "start": "963040",
    "end": "964720"
  },
  {
    "text": "going to generate and so the number of",
    "start": "964720",
    "end": "966680"
  },
  {
    "text": "null null fields or null columns are",
    "start": "966680",
    "end": "969800"
  },
  {
    "text": "going to be very very minimal and you",
    "start": "969800",
    "end": "971759"
  },
  {
    "text": "could partition the data based on time",
    "start": "971759",
    "end": "973440"
  },
  {
    "text": "bu and uh Service as well which means",
    "start": "973440",
    "end": "975759"
  },
  {
    "text": "when you're querying for the data uh the",
    "start": "975759",
    "end": "978199"
  },
  {
    "text": "amount of data scan will be very very",
    "start": "978199",
    "end": "979839"
  },
  {
    "text": "minimal because you can query the data",
    "start": "979839",
    "end": "982199"
  },
  {
    "text": "that you are interested and you don't",
    "start": "982199",
    "end": "983480"
  },
  {
    "text": "have to worry about uh any of the other",
    "start": "983480",
    "end": "986000"
  },
  {
    "text": "uh uh any of the other data for example",
    "start": "986000",
    "end": "988000"
  },
  {
    "text": "if you're looking for a trace of service",
    "start": "988000",
    "end": "990079"
  },
  {
    "text": "a you will be specifically looking at",
    "start": "990079",
    "end": "992000"
  },
  {
    "text": "that data alone and not none of the none",
    "start": "992000",
    "end": "993759"
  },
  {
    "text": "of the other data uh but the flip side",
    "start": "993759",
    "end": "996880"
  },
  {
    "text": "of this is managing multiple schemas",
    "start": "996880",
    "end": "999120"
  },
  {
    "text": "like I said there are 2,000 Services",
    "start": "999120",
    "end": "1000440"
  },
  {
    "text": "which means there are 2,000 different",
    "start": "1000440",
    "end": "1002160"
  },
  {
    "text": "schemas that you have to manage and this",
    "start": "1002160",
    "end": "1004000"
  },
  {
    "text": "cannot be managed um uh manually so we",
    "start": "1004000",
    "end": "1007800"
  },
  {
    "text": "came up with a automation system to",
    "start": "1007800",
    "end": "1009480"
  },
  {
    "text": "manage that but uh eventually we went",
    "start": "1009480",
    "end": "1012000"
  },
  {
    "text": "with ahead with this uh schema and this",
    "start": "1012000",
    "end": "1014480"
  },
  {
    "text": "is a this is just an example of what the",
    "start": "1014480",
    "end": "1016440"
  },
  {
    "text": "schema would look like the schema would",
    "start": "1016440",
    "end": "1017800"
  },
  {
    "text": "have some required Fields like Trace ID",
    "start": "1017800",
    "end": "1020360"
  },
  {
    "text": "uh asset ID asset elas and so on and",
    "start": "1020360",
    "end": "1022880"
  },
  {
    "text": "then the optional fields which are",
    "start": "1022880",
    "end": "1024079"
  },
  {
    "text": "nothing but the span attributes so every",
    "start": "1024079",
    "end": "1026400"
  },
  {
    "text": "span that is emitted from the system we",
    "start": "1026400",
    "end": "1029079"
  },
  {
    "text": "create a record in this particular",
    "start": "1029079",
    "end": "1032720"
  },
  {
    "start": "1033000",
    "end": "1129000"
  },
  {
    "text": "schema so this is the final architecture",
    "start": "1033480",
    "end": "1036000"
  },
  {
    "text": "that uh we ended up with so if you have",
    "start": "1036000",
    "end": "1037880"
  },
  {
    "text": "noticed the change is only in the trace",
    "start": "1037880",
    "end": "1039918"
  },
  {
    "text": "ingestor the trace inor writes data in",
    "start": "1039919",
    "end": "1042798"
  },
  {
    "text": "uh into par files and is stored in S3",
    "start": "1042799",
    "end": "1045600"
  },
  {
    "text": "there are three different uh buckets of",
    "start": "1045600",
    "end": "1047760"
  },
  {
    "text": "data that we write one is what I",
    "start": "1047760",
    "end": "1049960"
  },
  {
    "text": "currently explain where each pan is",
    "start": "1049960",
    "end": "1051640"
  },
  {
    "text": "written as a record which can be used to",
    "start": "1051640",
    "end": "1053799"
  },
  {
    "text": "run our power our queries so any any",
    "start": "1053799",
    "end": "1056320"
  },
  {
    "text": "examplar query that we execute would be",
    "start": "1056320",
    "end": "1058799"
  },
  {
    "text": "against this data then there is one set",
    "start": "1058799",
    "end": "1060840"
  },
  {
    "text": "of data which is the traces which is",
    "start": "1060840",
    "end": "1062520"
  },
  {
    "text": "which is the replacement of the trace",
    "start": "1062520",
    "end": "1063720"
  },
  {
    "text": "tool so here what you do is you collate",
    "start": "1063720",
    "end": "1066160"
  },
  {
    "text": "uh all the spans for a given Trace ID",
    "start": "1066160",
    "end": "1068720"
  },
  {
    "text": "and store it as a Parky data the third",
    "start": "1068720",
    "end": "1070919"
  },
  {
    "text": "one is the metad data uh and metadata is",
    "start": "1070919",
    "end": "1073720"
  },
  {
    "text": "what is what is used to derive the",
    "start": "1073720",
    "end": "1076120"
  },
  {
    "text": "schema so metadata will contain uh the",
    "start": "1076120",
    "end": "1078520"
  },
  {
    "text": "entire list of services that we are",
    "start": "1078520",
    "end": "1080440"
  },
  {
    "text": "ingesting for for given asset what are",
    "start": "1080440",
    "end": "1082880"
  },
  {
    "text": "the different attributes for a given",
    "start": "1082880",
    "end": "1084280"
  },
  {
    "text": "attribute what the different values the",
    "start": "1084280",
    "end": "1085880"
  },
  {
    "text": "cardinality and so on so it is a very",
    "start": "1085880",
    "end": "1087760"
  },
  {
    "text": "rich metadata that we generate and this",
    "start": "1087760",
    "end": "1090000"
  },
  {
    "text": "metadata is collated by metadata manager",
    "start": "1090000",
    "end": "1092840"
  },
  {
    "text": "and then used by the trace in to derive",
    "start": "1092840",
    "end": "1095400"
  },
  {
    "text": "the parking schema dynamically so as in",
    "start": "1095400",
    "end": "1098280"
  },
  {
    "text": "when the data is being ingested into the",
    "start": "1098280",
    "end": "1099919"
  },
  {
    "text": "system the trace ingestor can figure out",
    "start": "1099919",
    "end": "1102120"
  },
  {
    "text": "what is a schema to be used for that",
    "start": "1102120",
    "end": "1103559"
  },
  {
    "text": "particular uh span and use that uh use",
    "start": "1103559",
    "end": "1106280"
  },
  {
    "text": "that so and this becomes very very",
    "start": "1106280",
    "end": "1107799"
  },
  {
    "text": "efficient",
    "start": "1107799",
    "end": "1109280"
  },
  {
    "text": "when it comes to inje as well as when it",
    "start": "1109280",
    "end": "1111039"
  },
  {
    "text": "comes to query and so the only change",
    "start": "1111039",
    "end": "1113200"
  },
  {
    "text": "that was required was on the ingestor",
    "start": "1113200",
    "end": "1114799"
  },
  {
    "text": "and the query engine for us to replace",
    "start": "1114799",
    "end": "1117120"
  },
  {
    "text": "this and so there was no uh impact to",
    "start": "1117120",
    "end": "1119000"
  },
  {
    "text": "the end user as such so the end user did",
    "start": "1119000",
    "end": "1121280"
  },
  {
    "text": "not see any impact to the to their",
    "start": "1121280",
    "end": "1123360"
  },
  {
    "text": "operation we were able to replace this",
    "start": "1123360",
    "end": "1126039"
  },
  {
    "text": "with without any uh",
    "start": "1126039",
    "end": "1129200"
  },
  {
    "start": "1129000",
    "end": "1311000"
  },
  {
    "text": "downtime so let's quickly look at uh uh",
    "start": "1129600",
    "end": "1132360"
  },
  {
    "text": "how data injection is done so uh this is",
    "start": "1132360",
    "end": "1136640"
  },
  {
    "text": "uh so this is how it is done for example",
    "start": "1136640",
    "end": "1138880"
  },
  {
    "text": "if you look at Trace inor Trace Trace",
    "start": "1138880",
    "end": "1141280"
  },
  {
    "text": "inor is a set of stateless stateless",
    "start": "1141280",
    "end": "1143640"
  },
  {
    "text": "spots so they scale in and scale out",
    "start": "1143640",
    "end": "1145679"
  },
  {
    "text": "based on traffic that is being received",
    "start": "1145679",
    "end": "1147760"
  },
  {
    "text": "and each and the trace Trace inor would",
    "start": "1147760",
    "end": "1150480"
  },
  {
    "text": "group the data based on the service name",
    "start": "1150480",
    "end": "1153000"
  },
  {
    "text": "and then write one file into the S3 so",
    "start": "1153000",
    "end": "1155600"
  },
  {
    "text": "for each service a file would be",
    "start": "1155600",
    "end": "1157480"
  },
  {
    "text": "generated by each of the trace in Port",
    "start": "1157480",
    "end": "1160360"
  },
  {
    "text": "then we deploy a set of compactors a",
    "start": "1160360",
    "end": "1163240"
  },
  {
    "text": "compactor manager would go through this",
    "start": "1163240",
    "end": "1165000"
  },
  {
    "text": "set of files uh create a compaction",
    "start": "1165000",
    "end": "1168280"
  },
  {
    "text": "record basically what it will do is give",
    "start": "1168280",
    "end": "1170600"
  },
  {
    "text": "me all the files that was created for",
    "start": "1170600",
    "end": "1172520"
  },
  {
    "text": "service a and create one file so it",
    "start": "1172520",
    "end": "1175679"
  },
  {
    "text": "compacts uh thousands of files into",
    "start": "1175679",
    "end": "1177919"
  },
  {
    "text": "let's say a handful of 10 or 15 files so",
    "start": "1177919",
    "end": "1180320"
  },
  {
    "text": "what eventually for a given 5 minute",
    "start": "1180320",
    "end": "1182840"
  },
  {
    "text": "window we have one file P service so",
    "start": "1182840",
    "end": "1185559"
  },
  {
    "text": "when you're searching for a let's say a",
    "start": "1185559",
    "end": "1187679"
  },
  {
    "text": "60-minute window the query will have to",
    "start": "1187679",
    "end": "1190080"
  },
  {
    "text": "only look up probably 12 files to uh",
    "start": "1190080",
    "end": "1193679"
  },
  {
    "text": "retrieve data and which is very very",
    "start": "1193679",
    "end": "1195320"
  },
  {
    "text": "efficient so this is this is the",
    "start": "1195320",
    "end": "1197200"
  },
  {
    "text": "Exemplar data and the data is stored in",
    "start": "1197200",
    "end": "1199200"
  },
  {
    "text": "the partition format that is listed down",
    "start": "1199200",
    "end": "1200840"
  },
  {
    "text": "here so you have we partition data by",
    "start": "1200840",
    "end": "1202840"
  },
  {
    "text": "year month day hour minute and finally",
    "start": "1202840",
    "end": "1206240"
  },
  {
    "text": "the service so when you are searching",
    "start": "1206240",
    "end": "1208120"
  },
  {
    "text": "for data for searching for an examplar",
    "start": "1208120",
    "end": "1210559"
  },
  {
    "text": "you know the exact path to which you",
    "start": "1210559",
    "end": "1212200"
  },
  {
    "text": "need to go into and search search for",
    "start": "1212200",
    "end": "1213919"
  },
  {
    "text": "the data so this is the examplar data",
    "start": "1213919",
    "end": "1216640"
  },
  {
    "text": "injection the similar method is followed",
    "start": "1216640",
    "end": "1218960"
  },
  {
    "text": "for the trace by ID uh uh uh Trace by ID",
    "start": "1218960",
    "end": "1222280"
  },
  {
    "text": "data as Wells wherein we group we run a",
    "start": "1222280",
    "end": "1224679"
  },
  {
    "text": "hash on the trace idid based on the",
    "start": "1224679",
    "end": "1226720"
  },
  {
    "text": "trace ID hash we group group the data",
    "start": "1226720",
    "end": "1229400"
  },
  {
    "text": "and write into a file and the compactor",
    "start": "1229400",
    "end": "1231559"
  },
  {
    "text": "would do its job of compacting multiple",
    "start": "1231559",
    "end": "1233120"
  },
  {
    "text": "files into the same file and when when",
    "start": "1233120",
    "end": "1234960"
  },
  {
    "text": "the query is being triggered we do the",
    "start": "1234960",
    "end": "1236640"
  },
  {
    "text": "same thing on the trace ID we run a we",
    "start": "1236640",
    "end": "1238960"
  },
  {
    "text": "run a hash you know the hash code",
    "start": "1238960",
    "end": "1241080"
  },
  {
    "text": "associated with that so you know which",
    "start": "1241080",
    "end": "1243120"
  },
  {
    "text": "path to go to retrieve your data so if",
    "start": "1243120",
    "end": "1245320"
  },
  {
    "text": "you look at the partition format the",
    "start": "1245320",
    "end": "1247360"
  },
  {
    "text": "more or less the same the only change is",
    "start": "1247360",
    "end": "1248720"
  },
  {
    "text": "the partition ID or the trace ID hash",
    "start": "1248720",
    "end": "1251440"
  },
  {
    "text": "becomes one of your partition key so",
    "start": "1251440",
    "end": "1253720"
  },
  {
    "text": "with this approach the uh the amount of",
    "start": "1253720",
    "end": "1256480"
  },
  {
    "text": "data scan that is required when we run",
    "start": "1256480",
    "end": "1258640"
  },
  {
    "text": "Exemplar query or the or",
    "start": "1258640",
    "end": "1261600"
  },
  {
    "text": "the uh Trace by ID query is very very",
    "start": "1261600",
    "end": "1264400"
  },
  {
    "text": "minimal and coming to um coming to the",
    "start": "1264400",
    "end": "1267400"
  },
  {
    "text": "query part of it uh what we have done is",
    "start": "1267400",
    "end": "1269679"
  },
  {
    "text": "we have uh we have used uh couple of uh",
    "start": "1269679",
    "end": "1273360"
  },
  {
    "text": "uh stateless query engines SQL query",
    "start": "1273360",
    "end": "1275080"
  },
  {
    "text": "engines we played with aw satina we",
    "start": "1275080",
    "end": "1277919"
  },
  {
    "text": "played with click house we played with",
    "start": "1277919",
    "end": "1279679"
  },
  {
    "text": "trino and so on and we deploys a couple",
    "start": "1279679",
    "end": "1282080"
  },
  {
    "text": "of these query engines to uh uh Power",
    "start": "1282080",
    "end": "1286240"
  },
  {
    "text": "our queries so Trace search would run",
    "start": "1286240",
    "end": "1289000"
  },
  {
    "text": "some SQL queries and they would",
    "start": "1289000",
    "end": "1291400"
  },
  {
    "text": "internally go fetch the data from par",
    "start": "1291400",
    "end": "1293840"
  },
  {
    "text": "since like I said they are columna based",
    "start": "1293840",
    "end": "1295840"
  },
  {
    "text": "the amount of data scan is very very",
    "start": "1295840",
    "end": "1297320"
  },
  {
    "text": "minimal and given the fact that the data",
    "start": "1297320",
    "end": "1299520"
  },
  {
    "text": "scan is minimal the response time is",
    "start": "1299520",
    "end": "1301320"
  },
  {
    "text": "also comparatively manageable so we see",
    "start": "1301320",
    "end": "1303840"
  },
  {
    "text": "a response time of around 1 to 2 seconds",
    "start": "1303840",
    "end": "1305559"
  },
  {
    "text": "for every search that we do and which is",
    "start": "1305559",
    "end": "1308120"
  },
  {
    "text": "manageable from a user",
    "start": "1308120",
    "end": "1311200"
  },
  {
    "start": "1311000",
    "end": "1444000"
  },
  {
    "text": "standpoint so finally coming to the",
    "start": "1311200",
    "end": "1313080"
  },
  {
    "text": "summary so key takeway and benefits like",
    "start": "1313080",
    "end": "1315520"
  },
  {
    "text": "I said managing State full sets it's",
    "start": "1315520",
    "end": "1317120"
  },
  {
    "text": "very very difficult given the volume",
    "start": "1317120",
    "end": "1318640"
  },
  {
    "text": "that we have and given the fact that",
    "start": "1318640",
    "end": "1320279"
  },
  {
    "text": "there is continuous flux in your traffic",
    "start": "1320279",
    "end": "1322400"
  },
  {
    "text": "which makes the operational aspect of",
    "start": "1322400",
    "end": "1324720"
  },
  {
    "text": "stateful services very very difficult",
    "start": "1324720",
    "end": "1327279"
  },
  {
    "text": "columna storage makes it makes the data",
    "start": "1327279",
    "end": "1330039"
  },
  {
    "text": "scan minimal and with this we've been",
    "start": "1330039",
    "end": "1333400"
  },
  {
    "text": "able to reduce the cost by 6 69% we have",
    "start": "1333400",
    "end": "1336720"
  },
  {
    "text": "deployed this in our production and it's",
    "start": "1336720",
    "end": "1338320"
  },
  {
    "text": "been running for the last couple of",
    "start": "1338320",
    "end": "1339480"
  },
  {
    "text": "quarters and we do actually see a",
    "start": "1339480",
    "end": "1341279"
  },
  {
    "text": "deduction in 69% this is not a",
    "start": "1341279",
    "end": "1343159"
  },
  {
    "text": "theoretical number that we are quoting",
    "start": "1343159",
    "end": "1344720"
  },
  {
    "text": "here it's actual savings that we have",
    "start": "1344720",
    "end": "1346799"
  },
  {
    "text": "done in the last quarter and and we have",
    "start": "1346799",
    "end": "1348799"
  },
  {
    "text": "been able to successfully scale from uh",
    "start": "1348799",
    "end": "1351480"
  },
  {
    "text": "500k TPS to 8 million TPS without any",
    "start": "1351480",
    "end": "1353960"
  },
  {
    "text": "manual intervention without any",
    "start": "1353960",
    "end": "1355320"
  },
  {
    "text": "prescaling of any of our systems so the",
    "start": "1355320",
    "end": "1357600"
  },
  {
    "text": "system is able to automatically scale",
    "start": "1357600",
    "end": "1359400"
  },
  {
    "text": "out and scale in when the traffic grows",
    "start": "1359400",
    "end": "1361240"
  },
  {
    "text": "and you know traffic comes down and",
    "start": "1361240",
    "end": "1363840"
  },
  {
    "text": "introduction of new Services is",
    "start": "1363840",
    "end": "1365919"
  },
  {
    "text": "straightforward service owners have",
    "start": "1365919",
    "end": "1367799"
  },
  {
    "text": "better control over their cost and so on",
    "start": "1367799",
    "end": "1370039"
  },
  {
    "text": "and the next steps we are looking at",
    "start": "1370039",
    "end": "1372000"
  },
  {
    "text": "Apache Iceberg Apache Iceberg Iceberg",
    "start": "1372000",
    "end": "1374960"
  },
  {
    "text": "can be used to manage your metadata",
    "start": "1374960",
    "end": "1376520"
  },
  {
    "text": "currently we are doing it manually or in",
    "start": "1376520",
    "end": "1378039"
  },
  {
    "text": "a autom f using the metadata manager but",
    "start": "1378039",
    "end": "1380760"
  },
  {
    "text": "we want to explore Apache Iceberg as",
    "start": "1380760",
    "end": "1383240"
  },
  {
    "text": "well to see how it can help us in our",
    "start": "1383240",
    "end": "1384840"
  },
  {
    "text": "metadata management and we also want to",
    "start": "1384840",
    "end": "1386919"
  },
  {
    "text": "build a query layer uh which can",
    "start": "1386919",
    "end": "1389279"
  },
  {
    "text": "probably replace the stateful service uh",
    "start": "1389279",
    "end": "1392400"
  },
  {
    "text": "stateless query engines that we're using",
    "start": "1392400",
    "end": "1394240"
  },
  {
    "text": "we are looking at Duck DB data fusion",
    "start": "1394240",
    "end": "1396120"
  },
  {
    "text": "and other sdks to achieve this and the",
    "start": "1396120",
    "end": "1398600"
  },
  {
    "text": "last and the most uh uh important thing",
    "start": "1398600",
    "end": "1401120"
  },
  {
    "text": "that we looking at is tail sampling uh",
    "start": "1401120",
    "end": "1403279"
  },
  {
    "text": "we are looking at a very efficient tail",
    "start": "1403279",
    "end": "1405039"
  },
  {
    "text": "sampling approach which can hopefully",
    "start": "1405039",
    "end": "1407039"
  },
  {
    "text": "help us reduce overall volume currently",
    "start": "1407039",
    "end": "1409440"
  },
  {
    "text": "even though we have a head sampling at",
    "start": "1409440",
    "end": "1411840"
  },
  {
    "text": "35% we end up ingesting almost 8 million",
    "start": "1411840",
    "end": "1414320"
  },
  {
    "text": "spans per second uh and typically most",
    "start": "1414320",
    "end": "1417960"
  },
  {
    "text": "of the most of the traces are actually",
    "start": "1417960",
    "end": "1420760"
  },
  {
    "text": "successful traces and you may not be",
    "start": "1420760",
    "end": "1422000"
  },
  {
    "text": "interested in it so we are trying to see",
    "start": "1422000",
    "end": "1423919"
  },
  {
    "text": "how we can efficiently deploy tail",
    "start": "1423919",
    "end": "1426000"
  },
  {
    "text": "sampling so that only the interesting or",
    "start": "1426000",
    "end": "1427720"
  },
  {
    "text": "the errored or what we want is stored in",
    "start": "1427720",
    "end": "1430720"
  },
  {
    "text": "the back end which would which would",
    "start": "1430720",
    "end": "1432000"
  },
  {
    "text": "bring down your uh uh bring down your uh",
    "start": "1432000",
    "end": "1435200"
  },
  {
    "text": "overall volume",
    "start": "1435200",
    "end": "1436440"
  },
  {
    "text": "drastically I think that's all for our",
    "start": "1436440",
    "end": "1438279"
  },
  {
    "text": "talk talk any",
    "start": "1438279",
    "end": "1441039"
  },
  {
    "text": "[Applause]",
    "start": "1441700",
    "end": "1443440"
  },
  {
    "text": "questions",
    "start": "1443440",
    "end": "1446440"
  }
]