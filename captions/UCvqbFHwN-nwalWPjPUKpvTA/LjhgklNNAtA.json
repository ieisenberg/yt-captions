[
  {
    "text": "good morning Amsterdam good morning cubecon I hope you are energetic today after",
    "start": "60",
    "end": "6420"
  },
  {
    "text": "working out sessions and uh today we are one of our first sessions and we are",
    "start": "6420",
    "end": "12179"
  },
  {
    "text": "starting as a panel discussion and as you might assume the panel is uh",
    "start": "12179",
    "end": "17820"
  },
  {
    "text": "something what should be interactive and we as a panelists on this session we are",
    "start": "17820",
    "end": "22859"
  },
  {
    "text": "expecting what audiences asking questions so as soon as you have questions you want to ask something",
    "start": "22859",
    "end": "28680"
  },
  {
    "text": "please raise your hand and our helper in the room will bring your",
    "start": "28680",
    "end": "34860"
  },
  {
    "text": "microphone feel free to ask anything in my area and today we got panelists",
    "start": "34860",
    "end": "42739"
  },
  {
    "text": "many of us from different companies working on different areas",
    "start": "42739",
    "end": "48180"
  },
  {
    "text": "um a lot of new topics a lot of new changes in the past year in our area so",
    "start": "48180",
    "end": "55559"
  },
  {
    "text": "let me first introduce myself and when all my colleagues here on stage I am",
    "start": "55559",
    "end": "61199"
  },
  {
    "text": "Alexander kanevsky I work for Intel I am part of a team who is working on",
    "start": "61199",
    "end": "66299"
  },
  {
    "text": "Resource Management topics mostly so runtime Google it and related projects",
    "start": "66299",
    "end": "71880"
  },
  {
    "text": "like node feature discovering hi everyone I am Swati sehgal I am",
    "start": "71880",
    "end": "78299"
  },
  {
    "text": "working as a principal software engineer in the ecosystem Engineering Group at Red Hat I've been involved in the",
    "start": "78299",
    "end": "84119"
  },
  {
    "text": "resource management space as well for a while just like Sasha and my focus has been Numa awareness and Resource",
    "start": "84119",
    "end": "90659"
  },
  {
    "text": "Management capability especially the cubital resource managers and looking forward to having questions from you",
    "start": "90659",
    "end": "97320"
  },
  {
    "text": "guys hi good morning I'm Ivan Lazar I'm with Nvidia a part of the cloud native group",
    "start": "97320",
    "end": "104280"
  },
  {
    "text": "group there well I just try to get gpus and other funky devices to work in containerized",
    "start": "104280",
    "end": "110220"
  },
  {
    "text": "environments so that's why I'm here hello everyone thanks for coming my name",
    "start": "110220",
    "end": "116280"
  },
  {
    "text": "is David Porter I'm from the Google kubernetes engine team I work on node I also work in Upstream cignode Community",
    "start": "116280",
    "end": "123119"
  },
  {
    "text": "I'm the maintainer of a seat advisor which does research management monitoring and I focus a lot in the",
    "start": "123119",
    "end": "128280"
  },
  {
    "text": "research management space so really excited for this panel hey folks I'm Zasha I'm considering",
    "start": "128280",
    "end": "134520"
  },
  {
    "text": "myself as an upstream contributor to kubernetes so I'm working in sick node and also sick release I'm also one of",
    "start": "134520",
    "end": "139920"
  },
  {
    "text": "the maintenance of cryo the container runtime you may know it and I really enjoy I really hope that you enjoyed",
    "start": "139920",
    "end": "146400"
  },
  {
    "text": "this coupon and it's great to see all of you",
    "start": "146400",
    "end": "150379"
  },
  {
    "text": "all right to start with discussion uh a big picture",
    "start": "151760",
    "end": "157440"
  },
  {
    "text": "uh the features What in in the area are present in kubernetes for quite some",
    "start": "157440",
    "end": "163920"
  },
  {
    "text": "years so we all know where distribution of a functionality between the control plane like a scheduler pickups we know",
    "start": "163920",
    "end": "170940"
  },
  {
    "text": "and keep struggling for resources on the nodes and when we have kublet uh with",
    "start": "170940",
    "end": "176519"
  },
  {
    "text": "set of managers who are doing great decision on the Node level plus we have",
    "start": "176519",
    "end": "181680"
  },
  {
    "text": "run times and different flavors of runtimes like everyone knows so a continually project cryo project and low",
    "start": "181680",
    "end": "188040"
  },
  {
    "text": "level components like ransi Sierra and Kata and so on so something what was known and existing",
    "start": "188040",
    "end": "195780"
  },
  {
    "text": "for years and recently it was some some of the good",
    "start": "195780",
    "end": "201180"
  },
  {
    "text": "improvements were and I would ask swaiti to cover Wheels",
    "start": "201180",
    "end": "206700"
  },
  {
    "text": "so that's just Sasha just mentioned that we've we have some of these components",
    "start": "206700",
    "end": "212120"
  },
  {
    "text": "in cubelet we have a bunch of resource managers CPU manager device manager",
    "start": "212120",
    "end": "217560"
  },
  {
    "text": "memory manager and topology manager these are components that have been existing for a while essentially to",
    "start": "217560",
    "end": "224459"
  },
  {
    "text": "allocate exclusive CPU allocate memory exclusively for aligning resources",
    "start": "224459",
    "end": "230040"
  },
  {
    "text": "device assignment and they've been existing for a while the goal has the",
    "start": "230040",
    "end": "235500"
  },
  {
    "text": "recently there was there was in the committee it was mentioned that we should avoid permabata features so we",
    "start": "235500",
    "end": "242640"
  },
  {
    "text": "started an effort to graduate some of these capabilities to GA and in the past couple of releases we graduated CPU",
    "start": "242640",
    "end": "250260"
  },
  {
    "text": "manager device manager as well as topology manager to ga",
    "start": "250260",
    "end": "255320"
  },
  {
    "text": "so if you want more information on these components I'd recommend you check out some of our blog posts we have two blog",
    "start": "255320",
    "end": "263160"
  },
  {
    "text": "posts on CPU manager and Device Manager as well as one anthropology manager that talks about its internal details",
    "start": "263160",
    "end": "271259"
  },
  {
    "text": "next slide so as Sasha just mentioned the world has",
    "start": "271259",
    "end": "277139"
  },
  {
    "text": "been with with some of these components for a while but recently there have been a bunch of additions we've seen dra",
    "start": "277139",
    "end": "284940"
  },
  {
    "text": "which is dynamic resource allocation that was introduced in kubernetes 126",
    "start": "284940",
    "end": "290220"
  },
  {
    "text": "and then we have topology aware scheduling this was a feature that was",
    "start": "290220",
    "end": "295259"
  },
  {
    "text": "introduced to enable topology aware scheduling in kubernetes because there's a disconnect between how cubelet handles",
    "start": "295259",
    "end": "301979"
  },
  {
    "text": "resource allocation and the how default scheduler views components and resources",
    "start": "301979",
    "end": "307639"
  },
  {
    "text": "in order to do that we had introduced an API called nrt API and that allows us to",
    "start": "307639",
    "end": "314100"
  },
  {
    "text": "enable topology aware scheduling in addition to that as we interacted with the community we realized that there are",
    "start": "314100",
    "end": "320460"
  },
  {
    "text": "other use cases and we came across NRI plugins that are using nrt API that was",
    "start": "320460",
    "end": "326400"
  },
  {
    "text": "previously introduced for topology where scheduling and then we made additional changes to",
    "start": "326400",
    "end": "332940"
  },
  {
    "text": "NFD as well to enabled quality aware scheduling so I think the world is changing and we",
    "start": "332940",
    "end": "340680"
  },
  {
    "text": "are constantly evolving based on the feedback that we're getting from the community as well as the use cases that",
    "start": "340680",
    "end": "347039"
  },
  {
    "text": "we have from our customers and partners next slide",
    "start": "347039",
    "end": "353039"
  },
  {
    "text": "so I'd pass it on to Evan uh yeah so as I said my my thing is getting devices",
    "start": "353039",
    "end": "359220"
  },
  {
    "text": "funky devices to work in in containerized environments one of the features that we're quite excited about is dynamic resource allocation and that",
    "start": "359220",
    "end": "367020"
  },
  {
    "text": "goes from a model where you have just integer accountable sort of resources like Nvidia gpus in this case trying to",
    "start": "367020",
    "end": "374220"
  },
  {
    "text": "plug our products a little bit um to to something that's a bit more expressive now obviously it's a lot more",
    "start": "374220",
    "end": "380880"
  },
  {
    "text": "verbose but you you we introduced this concept of a resource claim which is associated with the resource class",
    "start": "380880",
    "end": "386520"
  },
  {
    "text": "that's defined by a cluster admin or whatever and it allows users to third-party developers to actually",
    "start": "386520",
    "end": "393259"
  },
  {
    "text": "expose resources and Define an API that suits those types of resources so uh my",
    "start": "393259",
    "end": "399479"
  },
  {
    "text": "colleague from Nvidia Kevin Clues and uh Alexa will be presenting a little bit of",
    "start": "399479",
    "end": "404699"
  },
  {
    "text": "a deeper dive on the dra in room g104 uh just after this session so if anyone's",
    "start": "404699",
    "end": "409919"
  },
  {
    "text": "interested please go check that out I think it's about a five minute Dash if you want to um maybe the next slide there so as we",
    "start": "409919",
    "end": "417240"
  },
  {
    "text": "said it's more verbose but um like why would we do that like isn't the integer uh sort of use case enough and um it's",
    "start": "417240",
    "end": "424560"
  },
  {
    "text": "not right like uh these these devices have developed and and become more complex and how a user is expecting to",
    "start": "424560",
    "end": "432300"
  },
  {
    "text": "interact with them has also become more complex so um the fact that we're now exposing a",
    "start": "432300",
    "end": "437400"
  },
  {
    "text": "more Rich API allows us to do a lot a lot more interesting things with them um so on the slide you see that you know",
    "start": "437400",
    "end": "443099"
  },
  {
    "text": "currently you're able to assign uh one container a device to one container and",
    "start": "443099",
    "end": "448740"
  },
  {
    "text": "there's sort of no sharing I know people in the community and ourselves have like weird workarounds and hacks in place",
    "start": "448740",
    "end": "455880"
  },
  {
    "text": "um but with dra you're able to actually uh you know Define you're allowed to",
    "start": "455880",
    "end": "460919"
  },
  {
    "text": "able to share gpus or devices across different containers in the same pod across different pods as well and you're",
    "start": "460919",
    "end": "467819"
  },
  {
    "text": "also able to handle devices that require some kind of parameters to set up so you're able to dynamically partition",
    "start": "467819",
    "end": "473660"
  },
  {
    "text": "devices and share them and sort of mix and match as you choose",
    "start": "473660",
    "end": "479520"
  },
  {
    "text": "so yeah and what this actually uses behind the scenes is something called the container device interface or CDI as",
    "start": "479520",
    "end": "485759"
  },
  {
    "text": "a as a common spec uh cncf thundered funded project with suspect that defines how devices or resources actually look",
    "start": "485759",
    "end": "492419"
  },
  {
    "text": "from a um well this dra node plugin perspective all the way down to the",
    "start": "492419",
    "end": "498300"
  },
  {
    "text": "runtime such as containerdy and cryo and so I think I'll hand over to to Sasha since uh he's a",
    "start": "498300",
    "end": "504479"
  },
  {
    "text": "oh okay he wants to stand up setting makes me nervous too",
    "start": "504479",
    "end": "510259"
  },
  {
    "text": "is this microphone on can you hear me yeah all right so giving this a bit more Dynamic approach right so",
    "start": "511020",
    "end": "518039"
  },
  {
    "text": "all right so I would like to jump over the slide if that's really possible no",
    "start": "518039",
    "end": "523620"
  },
  {
    "text": "just want to head directly to this slide so if you look at container um at features in kubernetes then we mostly",
    "start": "523620",
    "end": "530459"
  },
  {
    "text": "see them from the perspective of the node or the cubelet but we also can drive features in in",
    "start": "530459",
    "end": "537180"
  },
  {
    "text": "kubernetes from the container runtime perspective so for example if we speak about our recent",
    "start": "537180",
    "end": "544140"
  },
  {
    "text": "enhancements to open Telemetry tracing which enable us to get collect the logs",
    "start": "544140",
    "end": "549360"
  },
  {
    "text": "together with metrics and correlate them together and find out what is wrong on the Node how the resource usage actually",
    "start": "549360",
    "end": "554700"
  },
  {
    "text": "is then having this feature only on the container runtime side like in cryo then",
    "start": "554700",
    "end": "560580"
  },
  {
    "text": "this wouldn't bring us much at all I mean we are working on uh bringing a",
    "start": "560580",
    "end": "565740"
  },
  {
    "text": "more enhanced open Telemetry tracing but we also need it on the cubeletal cubelet side for example and for that we have a",
    "start": "565740",
    "end": "571680"
  },
  {
    "text": "dedicated enhancement and Upstream kubernetes where we are working on so on 127 we enhanced the created their own",
    "start": "571680",
    "end": "577980"
  },
  {
    "text": "Telemetry cubelet tracing to uh beta so we enhance the spans we now have more",
    "start": "577980",
    "end": "583380"
  },
  {
    "text": "information about the pot life cycle and about garbage collectors in the cubelet and all of this information bundled",
    "start": "583380",
    "end": "590640"
  },
  {
    "text": "together on a single node helps us to understand how resource use that usage gets applied on the Node",
    "start": "590640",
    "end": "596640"
  },
  {
    "text": "the same applies to features for example like the event at black so the port lifecycle event generator is usually the",
    "start": "596640",
    "end": "602519"
  },
  {
    "text": "the source of Truth when it comes to a synchronizing State between workloads",
    "start": "602519",
    "end": "607680"
  },
  {
    "text": "and they are actually container and this feature doesn't bring us anything",
    "start": "607680",
    "end": "614760"
  },
  {
    "text": "at all if you don't take the container on time into account so we have to add some dedicated support for the event",
    "start": "614760",
    "end": "619980"
  },
  {
    "text": "that black and the container runtime we also have to extend the container runtime interface for that and this is",
    "start": "619980",
    "end": "625980"
  },
  {
    "text": "the end-to-end delivery we need in in the whole cluster setup for each node to",
    "start": "625980",
    "end": "632339"
  },
  {
    "text": "let the feature actually work as intended I would also like to uh some somehow",
    "start": "632339",
    "end": "638640"
  },
  {
    "text": "related features or username spaces for example and also swap support so we kind",
    "start": "638640",
    "end": "643740"
  },
  {
    "text": "of plan to continue our work on Swap and Upstream kubernetes so that we can have dedicated swap support for the cubelete",
    "start": "643740",
    "end": "649980"
  },
  {
    "text": "as well um and there are also some some features which are more dedicated to The Container runtime then so for example we",
    "start": "649980",
    "end": "656760"
  },
  {
    "text": "have support for the ni and cryo 127 we have some experimental second Notifier supports or second so this calls have",
    "start": "656760",
    "end": "664500"
  },
  {
    "text": "influence on resources on the Node as we already know and we can then try out a",
    "start": "664500",
    "end": "670200"
  },
  {
    "text": "second Notifier to get informed about negative impacts of Cisco's on a single",
    "start": "670200",
    "end": "676260"
  },
  {
    "text": "node and we also feature now vertical pod Auto scaling but that's just that's just",
    "start": "676260",
    "end": "683519"
  },
  {
    "text": "cryo and we also have containerd which kind of also drives features in a different direction as well so maybe",
    "start": "683519",
    "end": "688620"
  },
  {
    "text": "David can you tell us a bit more about the new stuff and containerdy yeah sure so containerd17 was just released and uh",
    "start": "688620",
    "end": "695760"
  },
  {
    "text": "there's a bunch of new features in containerd17 there's a new Sandbox API to better manage kind of containers as a",
    "start": "695760",
    "end": "701640"
  },
  {
    "text": "unit and there's also some additional features around transfer service um it's one of the big new things as",
    "start": "701640",
    "end": "707100"
  },
  {
    "text": "well in Cross kind of the container ecosystem is NRI which we'll talk about in a second as well",
    "start": "707100",
    "end": "712939"
  },
  {
    "text": "yeah so NRI well one of the new acronyms with three letters ones it stands for",
    "start": "717120",
    "end": "724079"
  },
  {
    "text": "node resource interface it's new common plugin interface for runtimes both",
    "start": "724079",
    "end": "729600"
  },
  {
    "text": "implemented in container D 1.7 and cryo 126. it started as a project as a well",
    "start": "729600",
    "end": "737220"
  },
  {
    "text": "sub-project of containerdy but over last year it was evolved as a cross runtime",
    "start": "737220",
    "end": "745040"
  },
  {
    "text": "interface to to plug your custom uh logic into your cluster so we keep think",
    "start": "745040",
    "end": "752940"
  },
  {
    "text": "about NRI is what uh what plugins what you have it have we have all the",
    "start": "752940",
    "end": "759180"
  },
  {
    "text": "internal knowledge of your container from runtime and some of those properties you can adjust on the fly so",
    "start": "759180",
    "end": "767040"
  },
  {
    "text": "like resource limits with CPU memory pinning was swapness a couple of our flags which provides you",
    "start": "767040",
    "end": "775079"
  },
  {
    "text": "a lot more flexibility out with out of three components compared to what you",
    "start": "775079",
    "end": "780720"
  },
  {
    "text": "can do nowadays with kublet or this current functionality entry",
    "start": "780720",
    "end": "786600"
  },
  {
    "text": "so if you want to have a bit more details about NRI I recommend to watch a",
    "start": "786600",
    "end": "792540"
  },
  {
    "text": "presentation what my colleague did in Detroit last Autumn uh where protocol",
    "start": "792540",
    "end": "798180"
  },
  {
    "text": "description is present in container dnri repository and example of plugins which",
    "start": "798180",
    "end": "804600"
  },
  {
    "text": "implements several resource policies I will publish it a couple of weeks ago",
    "start": "804600",
    "end": "809639"
  },
  {
    "text": "into a common container tools sorry container tools project like alongside",
    "start": "809639",
    "end": "815579"
  },
  {
    "text": "with podman conman and a few other things so this thing is one of the building",
    "start": "815579",
    "end": "823680"
  },
  {
    "text": "blocks which can integrate between multiple features so like aswati",
    "start": "823680",
    "end": "829500"
  },
  {
    "text": "mentioned like we have scheduler extension we have run time we have kublet we have Dynamic resource",
    "start": "829500",
    "end": "836639"
  },
  {
    "text": "allocations all of these components where you can plug your",
    "start": "836639",
    "end": "843060"
  },
  {
    "text": "custom logic either for vendor for the hardware vendor or as a like cloud service provider or as a user who",
    "start": "843060",
    "end": "850320"
  },
  {
    "text": "optimize some of the things and obviously there is a need of sharing the",
    "start": "850320",
    "end": "855420"
  },
  {
    "text": "information between those components and peace or like set of data how to share",
    "start": "855420",
    "end": "862740"
  },
  {
    "text": "with what is another three letter acronym what's what I've already mentioned is called node resource",
    "start": "862740",
    "end": "869040"
  },
  {
    "text": "topology API so we have no resource topology API this",
    "start": "869040",
    "end": "875459"
  },
  {
    "text": "is an API that is crd based and it was introduced to enable topology awareness",
    "start": "875459",
    "end": "880860"
  },
  {
    "text": "in kubernetes for to enable this solution we had to enable it as an out of pre-component we",
    "start": "880860",
    "end": "888779"
  },
  {
    "text": "have two components as part of this one is a component that exposes Hardware topology and the other component that",
    "start": "888779",
    "end": "895800"
  },
  {
    "text": "utilizes it which is the scheduler plugin which uses this information and",
    "start": "895800",
    "end": "900839"
  },
  {
    "text": "makes topology aware scheduling decision so the API itself was designed to have",
    "start": "900839",
    "end": "906240"
  },
  {
    "text": "more granular information of the resources so you in in terms of",
    "start": "906240",
    "end": "911279"
  },
  {
    "text": "topology aware scheduling we have we can have it distributed across Numa and we have information on how much resources",
    "start": "911279",
    "end": "918120"
  },
  {
    "text": "available allocatable and what is the capacity as we started engaging more in",
    "start": "918120",
    "end": "923579"
  },
  {
    "text": "the community we realized that topology aware scheduling is not the only use case and NRI plugins can use it as well",
    "start": "923579",
    "end": "930180"
  },
  {
    "text": "so that's when Sasha and other folks in the community interacted and provided us",
    "start": "930180",
    "end": "936720"
  },
  {
    "text": "feedback on additional things that we can do you know introducing top level attributes as opposed to specific field",
    "start": "936720",
    "end": "943980"
  },
  {
    "text": "for topology manager policies which can be used for other capabilities as well",
    "start": "943980",
    "end": "950339"
  },
  {
    "text": "so I have the link here on slides for the API and I've also plugged in a talk",
    "start": "950339",
    "end": "957839"
  },
  {
    "text": "that I'm going to have later today on topology about scheduling if you're interested to learn more about it",
    "start": "957839",
    "end": "964880"
  },
  {
    "text": "so one one more thing which was also happening in the last year",
    "start": "971760",
    "end": "978320"
  },
  {
    "text": "and continuous in this year quite quite interesting active discussion is support",
    "start": "978320",
    "end": "984540"
  },
  {
    "text": "for c groups version 2. it was graduated to GE recently uh and",
    "start": "984540",
    "end": "992100"
  },
  {
    "text": "it enables a lot of new functionality and I would like ask to David for cover it oh",
    "start": "992100",
    "end": "999000"
  },
  {
    "text": "cool yeah so to kind of step back for a",
    "start": "999000",
    "end": "1005480"
  },
  {
    "text": "second you know whether you're using devices whether you're not every single container out there is probably using",
    "start": "1005480",
    "end": "1011779"
  },
  {
    "text": "CPU and memory which are the core kind of kubernetes resources right and so underpinning pods and container",
    "start": "1011779",
    "end": "1017959"
  },
  {
    "text": "resources uh with CPU and memory are c groups so c groups are the Linux kernel feature that provides kind of a couple",
    "start": "1017959",
    "end": "1024558"
  },
  {
    "text": "things one is being able to kind of group a pro group a set of processes together and be able to limit the",
    "start": "1024559",
    "end": "1030199"
  },
  {
    "text": "resource usage so be able to limit how much CPU and memory those resources have able to so uh secret V1 was kind of the",
    "start": "1030199",
    "end": "1038058"
  },
  {
    "text": "first iteration of the C group API and it's what everybody was using and so very recently in the ecosystem secret V2",
    "start": "1038059",
    "end": "1044540"
  },
  {
    "text": "has been starting out and we're really happy to announce it was G8 and kubernetes 125. so secret V2 is a new",
    "start": "1044540",
    "end": "1051679"
  },
  {
    "text": "kind of platform and so it has many new Resource Management capabilities that we're kind of hoping to take advantage",
    "start": "1051679",
    "end": "1056900"
  },
  {
    "text": "in kubernetes to provide more enhanced Resource Management capabilities so some of the example I want to highlight kind",
    "start": "1056900",
    "end": "1062780"
  },
  {
    "text": "of the few projects that we're working on in the signode community that are kind of built on top of the secret V2 platform one of them is memory qos this",
    "start": "1062780",
    "end": "1069980"
  },
  {
    "text": "is Alpha in kubernetes 127 so this basically provides memory guarantees for",
    "start": "1069980",
    "end": "1075620"
  },
  {
    "text": "pods so you know before you didn't actually have guarantees around the minimum amount of memory your application can have with memory qos we",
    "start": "1075620",
    "end": "1082520"
  },
  {
    "text": "actually provide minimum guarantees so your pod will always have this amount of memory and also we can kind of prevent",
    "start": "1082520",
    "end": "1087860"
  },
  {
    "text": "uh or help prevent booms and other kind of out of memory situations some of the",
    "start": "1087860",
    "end": "1093260"
  },
  {
    "text": "other things we're looking into is PSI metrics so PS symmetrics is a new C group V2 feature that basically provides",
    "start": "1093260",
    "end": "1098860"
  },
  {
    "text": "metrics around resource shortages so you can see things like hey there's CPU",
    "start": "1098860",
    "end": "1103880"
  },
  {
    "text": "pressure memory pressure and the kernel will provide us metrics about that we're hoping to take advantage of these",
    "start": "1103880",
    "end": "1109160"
  },
  {
    "text": "metrics in kublet and be able to make more informed smart decisions around for example which pods to evict or how to",
    "start": "1109160",
    "end": "1115160"
  },
  {
    "text": "prioritize different pods when they access different resources and then kind of the longer term roadmap is you know",
    "start": "1115160",
    "end": "1120440"
  },
  {
    "text": "we have pretty good support today for CPU and memory but that's not the only resources that pods and containers use",
    "start": "1120440",
    "end": "1125660"
  },
  {
    "text": "some of the other things we're thinking about is i o isolation we want to make sure that if multiple pods are competing",
    "start": "1125660",
    "end": "1130820"
  },
  {
    "text": "trying to use the shared i o resources on a node we can provide some guarantees around that Sasha mentioned swap is something that",
    "start": "1130820",
    "end": "1137179"
  },
  {
    "text": "we're looking into swap is already Alpha and there's more work to be done there but many applications for example need",
    "start": "1137179",
    "end": "1142700"
  },
  {
    "text": "to allocate large amounts of memory and you know can all fit in fit in main Rams",
    "start": "1142700",
    "end": "1148100"
  },
  {
    "text": "so we need to swap for that and then there's other resources as well that we haven't really explored too much around isolation but there's more and more use",
    "start": "1148100",
    "end": "1154340"
  },
  {
    "text": "cases around for example Network we guaranteed the different pods we'll be able to access the network and be able",
    "start": "1154340",
    "end": "1159799"
  },
  {
    "text": "to provide kind of Qs guarantees so in general we're really excited to hear from you what type of kind of resource",
    "start": "1159799",
    "end": "1165320"
  },
  {
    "text": "management challenges are you having and what features are you kind of looking forward to and what issues do you have I",
    "start": "1165320",
    "end": "1171380"
  },
  {
    "text": "did a talk actually in last kubecon security V2 is coming soon to a cluster near you in Detroit that provides more",
    "start": "1171380",
    "end": "1176960"
  },
  {
    "text": "details around kind of the C group V2 platform so if you're curious that's a good resource to check out uh so with that I think uh we want to",
    "start": "1176960",
    "end": "1184220"
  },
  {
    "text": "kind of open it up for questions we'd love to understand kind of what resource management issues you have how what you",
    "start": "1184220",
    "end": "1189380"
  },
  {
    "text": "think about these features what use cases you have and kind of we'd love to hear from you",
    "start": "1189380",
    "end": "1194919"
  },
  {
    "text": "what is the question here",
    "start": "1201500",
    "end": "1204880"
  },
  {
    "text": "can I switch around the microphone",
    "start": "1219460",
    "end": "1223720"
  },
  {
    "text": "well",
    "start": "1249200",
    "end": "1251740"
  },
  {
    "text": "hello yes excellent um so first question is about these Dynamic allocation of resources does",
    "start": "1255140",
    "end": "1262039"
  },
  {
    "text": "this also allow me to like underfly dynamically allocate a GPU on a node because from what I understand right now",
    "start": "1262039",
    "end": "1267740"
  },
  {
    "text": "if I want a container that have access to a GPU I need to actually allocate a node type that has GPU attached all the",
    "start": "1267740",
    "end": "1274640"
  },
  {
    "text": "time um I mean it might not even make sense to do but I'm not that familiar with all",
    "start": "1274640",
    "end": "1280880"
  },
  {
    "text": "these things so you're saying that you so the GPU well in order to access the GPU one is a",
    "start": "1280880",
    "end": "1288020"
  },
  {
    "text": "GPU present right so I suppose it depends on your infrastructure there and",
    "start": "1288020",
    "end": "1293059"
  },
  {
    "text": "so dra in in general allows you if there is a way to do it it allows you to",
    "start": "1293059",
    "end": "1299179"
  },
  {
    "text": "define the API so that users can access it um Kevin over here might have more",
    "start": "1299179",
    "end": "1304760"
  },
  {
    "text": "context and he might be able to give you some more information there yeah I think what you might be asking is",
    "start": "1304760",
    "end": "1311360"
  },
  {
    "text": "that today if you if you if you want to access a GPU on a node and you want to access a",
    "start": "1311360",
    "end": "1318200"
  },
  {
    "text": "specific type of GPU you can only put us one type of GPU on any individual node",
    "start": "1318200",
    "end": "1324320"
  },
  {
    "text": "in your cluster and you have to use node selectors to direct your pod to a node that has that GPU type on it and with",
    "start": "1324320",
    "end": "1330140"
  },
  {
    "text": "dra we'll be able to have a mix and match of gpus on a specific node because the API that we are now defining to",
    "start": "1330140",
    "end": "1338000"
  },
  {
    "text": "access gpus using dra will allow you to select on a specific GPU type a certain amount of memory you might want to have",
    "start": "1338000",
    "end": "1344539"
  },
  {
    "text": "access to Independent of the GPU type and so on so a dra really gives you is the flexibility to Define whatever API",
    "start": "1344539",
    "end": "1352159"
  },
  {
    "text": "you want for the resources that your dra driver is advertising",
    "start": "1352159",
    "end": "1357500"
  },
  {
    "text": "um to for you to be able to to allocate and we are defining that API for our",
    "start": "1357500",
    "end": "1364280"
  },
  {
    "text": "gpus so that you have a lot more flexibility in how you can request access to them and the way that I've",
    "start": "1364280",
    "end": "1370820"
  },
  {
    "text": "been talking about at least internally in Nvidia is that with the capabilities we're adding to our dra resource driver",
    "start": "1370820",
    "end": "1376159"
  },
  {
    "text": "for gpus you're basically going to have a similar user experience for being able to get access to a GPU and run a",
    "start": "1376159",
    "end": "1382280"
  },
  {
    "text": "workload on it now inside kubernetes that you would have if you were running",
    "start": "1382280",
    "end": "1388100"
  },
  {
    "text": "on a bare metal machine and just wanted to launch a Cuda job you can have the same kind of user experience in that way",
    "start": "1388100",
    "end": "1394640"
  },
  {
    "text": "yep",
    "start": "1394640",
    "end": "1397240"
  },
  {
    "text": "no well no yes no",
    "start": "1403120",
    "end": "1408620"
  },
  {
    "text": "any other questions",
    "start": "1408620",
    "end": "1411460"
  },
  {
    "text": "hi uh will the PSI metrics include something for identifying CPU contention",
    "start": "1420740",
    "end": "1427720"
  },
  {
    "text": "from the Pod side because we're trying to pack more workloads to the nodes and",
    "start": "1427720",
    "end": "1433460"
  },
  {
    "text": "we think we found that it's very hard to know when the recipient contention",
    "start": "1433460",
    "end": "1438860"
  },
  {
    "text": "especially like for short best that wouldn't show up in CPU usage on the Node level",
    "start": "1438860",
    "end": "1444919"
  },
  {
    "text": "yeah so I think that's a great question and I think more and more folks are you know we're cost conscious trying to impact their their nodes as much as",
    "start": "1444919",
    "end": "1450860"
  },
  {
    "text": "possible and so being able to monitor those resources is really critical like we have a few things in in the pipeline",
    "start": "1450860",
    "end": "1456260"
  },
  {
    "text": "so one of them is what I mentioned earlier the PSI metrics we hope those will be able to be exposed and we'll be",
    "start": "1456260",
    "end": "1461360"
  },
  {
    "text": "able to kind of provide more fine-grained kind of up-to-date um uh metrics around CPU contention",
    "start": "1461360",
    "end": "1468440"
  },
  {
    "text": "um I also want to plug kind of there's essentially a session later today uh I'm doing with my colleague Peter uh we're",
    "start": "1468440",
    "end": "1474440"
  },
  {
    "text": "actually going to be talking specifically around uh pod and container workload metrics and some of the work we're doing in this space and we hope to",
    "start": "1474440",
    "end": "1480200"
  },
  {
    "text": "kind of cover some of those areas there so thank you hey what's the name of the talk",
    "start": "1480200",
    "end": "1485480"
  },
  {
    "text": "it's right there thank you thank you I know I would also",
    "start": "1485480",
    "end": "1491059"
  },
  {
    "text": "like to add to that question so detection of a contention or resource jamming is one piece of of a puzzle but",
    "start": "1491059",
    "end": "1498980"
  },
  {
    "text": "the second piece is you need to change somehow or like affect running containers like squeeze them or like",
    "start": "1498980",
    "end": "1506600"
  },
  {
    "text": "regroup them or peanut to some other places and this is where the piece like NRI can help you so you can plug your",
    "start": "1506600",
    "end": "1513880"
  },
  {
    "text": "Dynamic policy which based on detection settings",
    "start": "1513880",
    "end": "1518900"
  },
  {
    "text": "tweak where existing running containers like in transparent mode",
    "start": "1518900",
    "end": "1524600"
  },
  {
    "text": "and one other thing I wanted to add there one another feature that we're really excited about that we hadn't mentioned in 127 is dynamically updating",
    "start": "1524600",
    "end": "1531440"
  },
  {
    "text": "resources on containers so today you can this is a new feature that's Alpha you can update how much CPU memory your",
    "start": "1531440",
    "end": "1537740"
  },
  {
    "text": "application requests without actually recreating your pod so we hope kind of long term we can integrate some of these",
    "start": "1537740",
    "end": "1544100"
  },
  {
    "text": "new monitoring kind of intelligence around detecting these resource shortages and then actually being able to update the resource requirements",
    "start": "1544100",
    "end": "1550520"
  },
  {
    "text": "there and in addition to it it's it's more like a broader topic about how to make",
    "start": "1550520",
    "end": "1557539"
  },
  {
    "text": "the whole resource management and kubernetes more Dynamic so right now is resources are detected once for couplet",
    "start": "1557539",
    "end": "1564740"
  },
  {
    "text": "starts and that's considered to be static and the world has changed it so the devices can be hot plugged uh uh",
    "start": "1564740",
    "end": "1572840"
  },
  {
    "text": "well something goes offline something goes online uh it might be like new",
    "start": "1572840",
    "end": "1578179"
  },
  {
    "text": "resources popping up so we have a lot of areas in in the stock",
    "start": "1578179",
    "end": "1584720"
  },
  {
    "text": "where we can improve it's it comes to like everywhere like the cool blood like",
    "start": "1584720",
    "end": "1589880"
  },
  {
    "text": "we see advisor part where Discovery where like dynamic",
    "start": "1589880",
    "end": "1595400"
  },
  {
    "text": "status update of offer node when the CRI protocol like how the things are",
    "start": "1595400",
    "end": "1600620"
  },
  {
    "text": "communicated like like when one of our common examples well it means configuration of C group",
    "start": "1600620",
    "end": "1607279"
  },
  {
    "text": "driver between the couplet and runtime so now with Docker shrim is gone we have",
    "start": "1607279",
    "end": "1613640"
  },
  {
    "text": "a lot of flexibility of how to improve the communications between kublet and runtimes and how to make it more",
    "start": "1613640",
    "end": "1620299"
  },
  {
    "text": "flexible more Dynamic more advanced like Network stop both level events a",
    "start": "1620299",
    "end": "1627799"
  },
  {
    "text": "lot of other things",
    "start": "1627799",
    "end": "1630519"
  },
  {
    "text": "the desire for flexibility um CPU manager for example has two",
    "start": "1635240",
    "end": "1641179"
  },
  {
    "text": "policies one is none and static and there was this initiative we wanted to modify the existing CPU manager static",
    "start": "1641179",
    "end": "1647900"
  },
  {
    "text": "policy and in order for in order to do that rather than introducing a new",
    "start": "1647900",
    "end": "1653059"
  },
  {
    "text": "policy we introduced a construct called CP manager policy option to add additional policy options to change the",
    "start": "1653059",
    "end": "1661279"
  },
  {
    "text": "behavior of static policy so we have a pcpu policy we have aligned by socket",
    "start": "1661279",
    "end": "1667400"
  },
  {
    "text": "policy and many others so this this clearly shows that there's a desire for flexibility and on the similar way and",
    "start": "1667400",
    "end": "1674299"
  },
  {
    "text": "we have in topology manager topology manager policy options where we want to",
    "start": "1674299",
    "end": "1679720"
  },
  {
    "text": "modify the behavior how how alignment happens in scenarios where it's not",
    "start": "1679720",
    "end": "1685340"
  },
  {
    "text": "possible to align CPUs or resources in general from a single Luma node we want",
    "start": "1685340",
    "end": "1690860"
  },
  {
    "text": "to minimize the number of pneuma nodes from which they can be allocated and and and just like Sasha mentioned there's a",
    "start": "1690860",
    "end": "1697940"
  },
  {
    "text": "desire to actually move in the direction that we have additional flexibility in Resource Management capabilities with",
    "start": "1697940",
    "end": "1704179"
  },
  {
    "text": "external components so similar to device plugins and dra we can we can have a",
    "start": "1704179",
    "end": "1711080"
  },
  {
    "text": "mechanism to introduce more fancy ways of representing resources be it CPUs",
    "start": "1711080",
    "end": "1717799"
  },
  {
    "text": "devices and memory in general",
    "start": "1717799",
    "end": "1721960"
  },
  {
    "text": "any other questions",
    "start": "1723140",
    "end": "1726039"
  },
  {
    "text": "hi my question is mostly related to running real-time applications on kubernetes and uh can you close a bit to",
    "start": "1741860",
    "end": "1749299"
  },
  {
    "text": "microphone yeah so uh my questions are mostly related to running real-time applications on kubernetes so we have",
    "start": "1749299",
    "end": "1757820"
  },
  {
    "text": "two specific use cases like uh we would want to partition the cache for uh for",
    "start": "1757820",
    "end": "1765080"
  },
  {
    "text": "for real-time pods and the second question is uh",
    "start": "1765080",
    "end": "1771580"
  },
  {
    "text": "uh so uh Linux has the concept of isolated and non-isolated CPUs uh so can",
    "start": "1771740",
    "end": "1780080"
  },
  {
    "text": "we use nrm to solve these two uh cases",
    "start": "1780080",
    "end": "1785899"
  },
  {
    "text": "short answer yes there are some capabilities already existing kind of Upstream components",
    "start": "1785899",
    "end": "1791899"
  },
  {
    "text": "so for example for forward cache uh and actually initial implementation for",
    "start": "1791899",
    "end": "1797659"
  },
  {
    "text": "Block i o separation uh the feature was implemented in container runtime I think",
    "start": "1797659",
    "end": "1803419"
  },
  {
    "text": "in container D1 1 7 and for cryo I think",
    "start": "1803419",
    "end": "1808460"
  },
  {
    "text": "it was in 125 uh it's controlled by annotations so you",
    "start": "1808460",
    "end": "1814640"
  },
  {
    "text": "can specify like which workload belongs to which partition of the cache or which partition of uh block IO",
    "start": "1814640",
    "end": "1821620"
  },
  {
    "text": "priorities uh what is currently were kept on the discussion",
    "start": "1821620",
    "end": "1828140"
  },
  {
    "text": "it's called qos class resources so this thing will provide you a kind of",
    "start": "1828140",
    "end": "1835820"
  },
  {
    "text": "like first class citizen functionality in report spec so for each container you can define a class",
    "start": "1835820",
    "end": "1843460"
  },
  {
    "text": "when it will be uh it is this cap also includes a dynamic discovery of voice",
    "start": "1843460",
    "end": "1849380"
  },
  {
    "text": "class based resources so like something like like why",
    "start": "1849380",
    "end": "1854539"
  },
  {
    "text": "like cash or something like classifiable resources can be discovered on the",
    "start": "1854539",
    "end": "1861080"
  },
  {
    "text": "cluster it has functionality about the quarters so you can Define what like which namespace or which containers are",
    "start": "1861080",
    "end": "1868460"
  },
  {
    "text": "able to use particular class so for example like like low priority applications are not being able to use",
    "start": "1868460",
    "end": "1875360"
  },
  {
    "text": "uh like uh higher class range and and so on so working work is going on some of",
    "start": "1875360",
    "end": "1883640"
  },
  {
    "text": "the features you can use already now some of the features are coming a follow-up question is would it be",
    "start": "1883640",
    "end": "1889520"
  },
  {
    "text": "possible to even create Dynamic class Qs classes uh yes we're careful what I mentioned",
    "start": "1889520",
    "end": "1896659"
  },
  {
    "text": "where QRS class resources it's built on top of a idea of it's dynamically discovered and discover uh like",
    "start": "1896659",
    "end": "1903860"
  },
  {
    "text": "dynamically provisional cluster so it's not hard-coded values not like current",
    "start": "1903860",
    "end": "1909220"
  },
  {
    "text": "uh like native resources so it's not not like CPU memory huge Pages you will get",
    "start": "1909220",
    "end": "1915559"
  },
  {
    "text": "a flexibility so like your cluster your rules it will be mechanism to plug you",
    "start": "1915559",
    "end": "1920720"
  },
  {
    "text": "in uh to discover your classes and you will have a control what Wheels classes",
    "start": "1920720",
    "end": "1925820"
  },
  {
    "text": "means like would it be cash block IO or any other things what you might fit into",
    "start": "1925820",
    "end": "1931220"
  },
  {
    "text": "is like philosophy of for resources okay and uh regarding the second question uh",
    "start": "1931220",
    "end": "1937760"
  },
  {
    "text": "so the CPU results could be isolated and non-isolated so are there some policies",
    "start": "1937760",
    "end": "1943700"
  },
  {
    "text": "with which we can specifically uh select uh whether I I want an isolated CPU or a",
    "start": "1943700",
    "end": "1950000"
  },
  {
    "text": "non-insulated CPU so with current Upstream topology manager",
    "start": "1950000",
    "end": "1957020"
  },
  {
    "text": "plus CPU manager you can get to exclusive CPU cores for uh guaranteed Qs",
    "start": "1957020",
    "end": "1963799"
  },
  {
    "text": "resource uh guaranteed qos board classes with NRI plugins nowadays you can get",
    "start": "1963799",
    "end": "1971899"
  },
  {
    "text": "more flexible thing for like isolated CPUs based on our properties of",
    "start": "1971899",
    "end": "1978020"
  },
  {
    "text": "overclose so the cubelet doesn't look at the the",
    "start": "1978020",
    "end": "1984440"
  },
  {
    "text": "uh the uh kernel settings it doesn't look at uh and identify whether a CPU is",
    "start": "1984440",
    "end": "1991279"
  },
  {
    "text": "isolated or non-isolated so I mean how do we uh how can I specify that I need",
    "start": "1991279",
    "end": "1998600"
  },
  {
    "text": "an isolated CPU on the system and not a nice little CPU So based on the quality",
    "start": "1998600",
    "end": "2004659"
  },
  {
    "text": "of service of your pod you can determine if the if the Pod is allocated exclusive",
    "start": "2004659",
    "end": "2010720"
  },
  {
    "text": "CPU so if your pod was guaranteed means request is equal to limit yeah I I",
    "start": "2010720",
    "end": "2017140"
  },
  {
    "text": "understand that part guaranteed and best effort are already available but uh at",
    "start": "2017140",
    "end": "2022240"
  },
  {
    "text": "the kernel level you have a property saying the CPU is isolated that means nothing runs yeah I think yeah at this",
    "start": "2022240",
    "end": "2029440"
  },
  {
    "text": "point in time there's no support for isolated CPUs in kubernetes you'd have to manually manage it yourself to",
    "start": "2029440",
    "end": "2036940"
  },
  {
    "text": "separate those CPS from that particular pool yeah yeah but can be allocated to",
    "start": "2036940",
    "end": "2041980"
  },
  {
    "text": "your uh your system but how do we get get that",
    "start": "2041980",
    "end": "2047039"
  },
  {
    "text": "visible in in the kubernetes resources you don't need to make it visible into kubernetes so Kublai is not going to",
    "start": "2047520",
    "end": "2054280"
  },
  {
    "text": "support way isolated CPUs but different plug-in mechanism what we mentioned uh",
    "start": "2054280",
    "end": "2060940"
  },
  {
    "text": "it it provides you flexibility to do it okay so like one one of the links what I",
    "start": "2060940",
    "end": "2066820"
  },
  {
    "text": "was showing on the slides uh web plugin it has a support for detecting gasoline CPU and giving it to a container when",
    "start": "2066820",
    "end": "2074560"
  },
  {
    "text": "it's requested thank you if you would like come to me",
    "start": "2074560",
    "end": "2079780"
  },
  {
    "text": "after the session I will show more direct examples sure thanks",
    "start": "2079780",
    "end": "2085379"
  },
  {
    "text": "I think we have like yeah one one minute we can take one more question",
    "start": "2085659",
    "end": "2092520"
  },
  {
    "text": "sorry if yeah so about the tracing integration what kind of configuration",
    "start": "2100300",
    "end": "2106060"
  },
  {
    "text": "is needed for integrating those additional traces from nodes with open",
    "start": "2106060",
    "end": "2111400"
  },
  {
    "text": "telemetic for example and is it possible to associate them with anything that application is doing",
    "start": "2111400",
    "end": "2116800"
  },
  {
    "text": "with traces from applications thanks so right now the focus was more",
    "start": "2116800",
    "end": "2122740"
  },
  {
    "text": "on implementing or getting more information from the cubelet and the container runtime and correlating",
    "start": "2122740",
    "end": "2128380"
  },
  {
    "text": "together so passing the trace bands over the container runtime interface and also integrating more traces into libraries",
    "start": "2128380",
    "end": "2134800"
  },
  {
    "text": "we already use in kubernetes like klog and stuff like that but later on we would like to get more information on",
    "start": "2134800",
    "end": "2141220"
  },
  {
    "text": "the actual workload yeah but that's for future for future plans thanks all right we ran out of time so thank",
    "start": "2141220",
    "end": "2149020"
  },
  {
    "text": "you very much for coming to our sessions we will be available uh either on conference halls or in corresponding",
    "start": "2149020",
    "end": "2155980"
  },
  {
    "text": "booths of our companies so if you have questions please visit our our talks or",
    "start": "2155980",
    "end": "2161820"
  },
  {
    "text": "cash us up we will be happy to talk on on all of those areas",
    "start": "2161820",
    "end": "2168480"
  },
  {
    "text": "thank you",
    "start": "2168579",
    "end": "2171180"
  }
]