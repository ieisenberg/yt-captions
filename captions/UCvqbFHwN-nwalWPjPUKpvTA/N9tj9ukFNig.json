[
  {
    "text": "all right well thank you for attending from napkin to the cloud a",
    "start": "1680",
    "end": "6799"
  },
  {
    "text": "webassembly journey",
    "start": "6799",
    "end": "9839"
  },
  {
    "text": "now first i want to take a quick detour and explain a little bit of who i am and",
    "start": "13519",
    "end": "19199"
  },
  {
    "text": "why i'm doing this i created the open source project wasmcloud",
    "start": "19199",
    "end": "24240"
  },
  {
    "text": "and i'm also the author of programming webassembly and rust",
    "start": "24240",
    "end": "30400"
  },
  {
    "text": "so what i want to talk about today is a journey from",
    "start": "30400",
    "end": "36480"
  },
  {
    "text": "design to production and i want to comment on how that's",
    "start": "36480",
    "end": "42000"
  },
  {
    "text": "different when using webassembly as the underlying technology to do that first i want to start off",
    "start": "42000",
    "end": "48800"
  },
  {
    "text": "with a real quick two-minute tour of what webassembly is and what asmcloud is",
    "start": "48800",
    "end": "54960"
  },
  {
    "text": "and i'll talk about the application that we're going to build and that i have built for this demo",
    "start": "54960",
    "end": "60960"
  },
  {
    "text": "what the conceptual design is and then we'll talk about the actual building and in this case i'll show some",
    "start": "60960",
    "end": "67920"
  },
  {
    "text": "code and i'll compare and contrast the difference between what i designed and what we ended up",
    "start": "67920",
    "end": "74320"
  },
  {
    "text": "building and the point there is to see if if there is a",
    "start": "74320",
    "end": "79680"
  },
  {
    "text": "noticeable gap between the two and then i'll take you through a demo of the",
    "start": "79680",
    "end": "85439"
  },
  {
    "text": "application that we built and then finally there is a q a period",
    "start": "85439",
    "end": "91680"
  },
  {
    "text": "at the end of the session so quick tour of webassembly in the",
    "start": "91680",
    "end": "98840"
  },
  {
    "text": "cloud there's a couple things that we typically want in our cloud native workloads whether we've been using",
    "start": "98840",
    "end": "105200"
  },
  {
    "text": "docker or we've been just straight up running processes there are a number of things that are",
    "start": "105200",
    "end": "110880"
  },
  {
    "text": "fairly common needs that we have such as security predictability speed",
    "start": "110880",
    "end": "116880"
  },
  {
    "text": "and size and by size i mean lack of size we want small workloads",
    "start": "116880",
    "end": "125360"
  },
  {
    "text": "and coincidentally what we get from webassembly is a number of those things so",
    "start": "126840",
    "end": "132000"
  },
  {
    "text": "webassembly is secure it's predictable it's fast webassembly modules are small and i'll",
    "start": "132000",
    "end": "138319"
  },
  {
    "text": "show during the demo just how small that can be it's portable webassembly can",
    "start": "138319",
    "end": "144800"
  },
  {
    "text": "free us from dependency hell and it has what i like to refer to as beneficial limitations which means",
    "start": "144800",
    "end": "152239"
  },
  {
    "text": "there are things that you can't do in webassembly that you can do freely in other environments and i think that's",
    "start": "152239",
    "end": "158480"
  },
  {
    "text": "actually a good thing so if we get all these things from",
    "start": "158480",
    "end": "164080"
  },
  {
    "text": "webassembly and there is this great overlap between what webassembly gives us and what we want in our cloud native",
    "start": "164080",
    "end": "171200"
  },
  {
    "text": "workloads then maybe we should explore using webassembly for",
    "start": "171200",
    "end": "176319"
  },
  {
    "text": "cloud native workloads so web assembly is a stack based virtual",
    "start": "176319",
    "end": "182159"
  },
  {
    "text": "machine and without going into too much details that just refers to",
    "start": "182159",
    "end": "187360"
  },
  {
    "text": "how that virtual machine processes its instructions the important point though is that it is",
    "start": "187360",
    "end": "193680"
  },
  {
    "text": "a virtual machine it's a binary file format that has",
    "start": "193680",
    "end": "198720"
  },
  {
    "text": "a text representation as well webassembly is cpu agnostic",
    "start": "198720",
    "end": "205599"
  },
  {
    "text": "it's operating system agnostic the modules are fast small efficient and",
    "start": "205599",
    "end": "212959"
  },
  {
    "text": "this is probably the the key point here which is that they're entirely dependent on the host runtime",
    "start": "212959",
    "end": "218319"
  },
  {
    "text": "so in the case of a web browser the host runtime is some kind of javascript engine so in",
    "start": "218319",
    "end": "225599"
  },
  {
    "text": "chrome it might be v8 and so on but in the browser your host runtime",
    "start": "225599",
    "end": "231680"
  },
  {
    "text": "is done through javascript when you're outside the browser there",
    "start": "231680",
    "end": "237360"
  },
  {
    "text": "are a number of different web assembly host runtimes available to us we have wasmtime",
    "start": "237360",
    "end": "243280"
  },
  {
    "text": "from the vitacone alliance we have wasmer wasm 3 which is a popular sea based library that also has",
    "start": "243280",
    "end": "250319"
  },
  {
    "text": "rust bindings and then we have a higher level libraries that build on top of engines",
    "start": "250319",
    "end": "255599"
  },
  {
    "text": "like that specifically wasn't cloud and this may be a controversial bullet point",
    "start": "255599",
    "end": "263120"
  },
  {
    "text": "here but i firmly believe that web assembly is the future of distributed computing",
    "start": "263120",
    "end": "269840"
  },
  {
    "text": "so wisem cloud ryzen cloud is an open source project that i started probably a little over a",
    "start": "270800",
    "end": "277680"
  },
  {
    "text": "year and a half ago based on these assumptions here which is",
    "start": "277680",
    "end": "283280"
  },
  {
    "text": "if we want all of these things from our cloud native workloads and webassembly can give them",
    "start": "283280",
    "end": "288880"
  },
  {
    "text": "to us then maybe there's an open source project that can create the",
    "start": "288880",
    "end": "293919"
  },
  {
    "text": "tooling and host runtimes to bridging that gap and to give us what we need so wisely cloud is an actor runtime",
    "start": "293919",
    "end": "301840"
  },
  {
    "text": "and for those that are familiar with it that just means that it it treats webassembly workloads as",
    "start": "301840",
    "end": "308240"
  },
  {
    "text": "though they're actors as part of the actor pattern wasmcloud is it makes it so that your",
    "start": "308240",
    "end": "316400"
  },
  {
    "text": "portable business logic runs anywhere so that could be at the edge",
    "start": "316400",
    "end": "321520"
  },
  {
    "text": "in the cloud on iot devices and also in the browser asm cloud is secure",
    "start": "321520",
    "end": "328240"
  },
  {
    "text": "by default and in the demo i'll show a little bit of how that security works",
    "start": "328240",
    "end": "333360"
  },
  {
    "text": "it eliminates boilerplate we want to strip off all of the code that we write",
    "start": "333360",
    "end": "340960"
  },
  {
    "text": "day in and day out in service of boilerplate that really has nothing to do with our business logic",
    "start": "340960",
    "end": "346400"
  },
  {
    "text": "and our true functional requirements wisemcloud supports a rapid feedback",
    "start": "346400",
    "end": "352479"
  },
  {
    "text": "loop we have a rebel in one of our command line tools uh wasmcloud also provides a",
    "start": "352479",
    "end": "359440"
  },
  {
    "text": "self-healing self-forming mesh called the lattice that connects",
    "start": "359440",
    "end": "365199"
  },
  {
    "text": "your host runtimes in clouds iot devices edges and more it",
    "start": "365199",
    "end": "371280"
  },
  {
    "text": "provides a single flat topology network that you can use to manage and observe your active workloads",
    "start": "371280",
    "end": "380560"
  },
  {
    "text": "so let's take a look at the combination of webassembly and wasm cloud and we saw earlier that",
    "start": "380560",
    "end": "387360"
  },
  {
    "text": "webassembly provides security uh most of the security from webassembly",
    "start": "387360",
    "end": "393440"
  },
  {
    "text": "at the core comes from just the fact that it contains no bytecode operations for interacting",
    "start": "393440",
    "end": "400960"
  },
  {
    "text": "with the operating system it can't do things that the host runtime doesn't allow it to do",
    "start": "400960",
    "end": "406080"
  },
  {
    "text": "it's portable all the instructions in webassembly are cpu and os agnostic webassembly is",
    "start": "406080",
    "end": "413199"
  },
  {
    "text": "fast it has a small size and then wisemancloud builds on top of this",
    "start": "413199",
    "end": "420000"
  },
  {
    "text": "by giving us access to loosely coupled capabilities and those capabilities",
    "start": "420000",
    "end": "425840"
  },
  {
    "text": "might be web servers database clients message brokers",
    "start": "425840",
    "end": "430960"
  },
  {
    "text": "those types of things blob stores seamless distributed compute that runs",
    "start": "430960",
    "end": "436479"
  },
  {
    "text": "anywhere is a feature that we add through wisem cloud you can horizontally scale",
    "start": "436479",
    "end": "441919"
  },
  {
    "text": "your actors and your capability providers again i mentioned the actor model earlier and we also do",
    "start": "441919",
    "end": "448960"
  },
  {
    "text": "contract driven design so when you build a wisdom cloud actor you're writing against an abstract",
    "start": "448960",
    "end": "455680"
  },
  {
    "text": "contract so you might be writing against the key value contract or abstraction",
    "start": "455680",
    "end": "461440"
  },
  {
    "text": "or the web server abstraction or some database client abstraction and not",
    "start": "461440",
    "end": "468400"
  },
  {
    "text": "the actual database itself which means all of those things can change at runtime without you having to",
    "start": "468400",
    "end": "474560"
  },
  {
    "text": "rebuild or redeploy your code so let's take a look at the sample",
    "start": "474560",
    "end": "481520"
  },
  {
    "text": "application that we that we built and the idea here was to",
    "start": "481520",
    "end": "487759"
  },
  {
    "text": "to track the and document the journey of that starts with having an idea and",
    "start": "487759",
    "end": "494160"
  },
  {
    "text": "finishes with that idea running in production and [Music] to take note on how that changes or how",
    "start": "494160",
    "end": "501599"
  },
  {
    "text": "that experience might change using small composable webassembly modules",
    "start": "501599",
    "end": "507120"
  },
  {
    "text": "rather than our traditional uh throw a microservice into a docker image",
    "start": "507120",
    "end": "513360"
  },
  {
    "text": "approach so the application that we're building is called wisem cloud chat",
    "start": "513360",
    "end": "519200"
  },
  {
    "text": "and it's a multi-channel real-time messaging application so instead of a simple hello world app this",
    "start": "519200",
    "end": "525760"
  },
  {
    "text": "chat application has a full backend it records all of the messages that go through it",
    "start": "525760",
    "end": "532880"
  },
  {
    "text": "and it has multiple inbound and outbound channels including message broker and uh for",
    "start": "532880",
    "end": "539519"
  },
  {
    "text": "our demo we're going to use telnet",
    "start": "539519",
    "end": "543680"
  },
  {
    "text": "so this is essentially the napkin sketch or the blueprint for what we wanted to build for the sample",
    "start": "544959",
    "end": "550560"
  },
  {
    "text": "application and so you can see that we have some users coming into the",
    "start": "550560",
    "end": "556240"
  },
  {
    "text": "back end through the telnet channel and someone coming in through the broker channel and in the back in the the true back end",
    "start": "556240",
    "end": "563680"
  },
  {
    "text": "we have functionality lumped together",
    "start": "563680",
    "end": "568959"
  },
  {
    "text": "in categories called presence which is who's online and how long have",
    "start": "568959",
    "end": "574240"
  },
  {
    "text": "they been on line for messages which is essentially the",
    "start": "574240",
    "end": "580480"
  },
  {
    "text": "message processing and storage rooms so that's the chat rooms think of those",
    "start": "580560",
    "end": "586720"
  },
  {
    "text": "as channels in slack and uh authentication and authorization",
    "start": "586720",
    "end": "592800"
  },
  {
    "text": "and again this is a completely abstract concept here this is to represent the idea that we had before",
    "start": "593200",
    "end": "599760"
  },
  {
    "text": "we started started to implement it",
    "start": "599760",
    "end": "605040"
  },
  {
    "text": "and probably uh i sort of knew what to expect before i",
    "start": "605040",
    "end": "611279"
  },
  {
    "text": "went down this road of trying to build out this application which was that i i've",
    "start": "611279",
    "end": "617120"
  },
  {
    "text": "in the past my my plans",
    "start": "617120",
    "end": "622560"
  },
  {
    "text": "immediately go or i'm bad as soon as i try and turn them into an implementation and whether that's because of tooling or",
    "start": "622560",
    "end": "629680"
  },
  {
    "text": "technology or something else there is always a very large gap between my original idea",
    "start": "629680",
    "end": "636000"
  },
  {
    "text": "and what i'm forced to build in the end",
    "start": "636000",
    "end": "641120"
  },
  {
    "text": "so let's take a look at the journey of how we generally go about converting our",
    "start": "641360",
    "end": "647839"
  },
  {
    "text": "ideas into something that runs in production so we start off with this amazing idea",
    "start": "647839",
    "end": "653120"
  },
  {
    "text": "and we're inspired and that inspiration gives us just enough energy to get over and around that next curve",
    "start": "653120",
    "end": "660560"
  },
  {
    "text": "and so we have this idea that we then convert into a design and the design is that abstract design",
    "start": "660560",
    "end": "668160"
  },
  {
    "text": "that has very little to do with the actual implementation and it's just a rough sketch of what it",
    "start": "668160",
    "end": "673600"
  },
  {
    "text": "is we're trying to build we then do some early experimentation on this idea",
    "start": "673600",
    "end": "680800"
  },
  {
    "text": "and then that early experimentation invariably results in us having to throw away everything that we've done",
    "start": "680800",
    "end": "686640"
  },
  {
    "text": "including some of our original uh ideas and redo what we were building and",
    "start": "686640",
    "end": "692800"
  },
  {
    "text": "that's maybe because we we learned some valuable lessons or we got some technical things incorrect but this",
    "start": "692800",
    "end": "700560"
  },
  {
    "text": "iteration of experimentation and redesign is pretty common including another",
    "start": "700560",
    "end": "707839"
  },
  {
    "text": "round of refactoring and redesign and during that process we might actually get something out into",
    "start": "707839",
    "end": "714000"
  },
  {
    "text": "production and deployed but it's certainly in many cases nothing like",
    "start": "714000",
    "end": "721120"
  },
  {
    "text": "what we wanted to to build back when we had our amazing idea and this of course leads to despair",
    "start": "721120",
    "end": "730240"
  },
  {
    "text": "and so what i'm hoping is that through the combination of webassembly and other cloud tooling",
    "start": "730240",
    "end": "736639"
  },
  {
    "text": "we might be able to change this journey for the better so we start off again with our amazing",
    "start": "736639",
    "end": "741839"
  },
  {
    "text": "idea and then we get to an initial design our napkin drawing which",
    "start": "741839",
    "end": "747440"
  },
  {
    "text": "i drew on a slide earlier and then again we go to early experimentation and i",
    "start": "747440",
    "end": "753839"
  },
  {
    "text": "think this is where the paths diverge the results of the early experimentation",
    "start": "753839",
    "end": "759120"
  },
  {
    "text": "is going to be different this time and that's where we're able to quickly and easily deploy and test our",
    "start": "759120",
    "end": "765839"
  },
  {
    "text": "experiments in different environments including production and production simulated",
    "start": "765839",
    "end": "771040"
  },
  {
    "text": "environments and then the iterative process after",
    "start": "771040",
    "end": "776160"
  },
  {
    "text": "these successfully deployed experiments is now instead of complete refactors and",
    "start": "776160",
    "end": "781200"
  },
  {
    "text": "redesigns we're just able to tweak things change the knobs on our scaling and deployments",
    "start": "781200",
    "end": "786800"
  },
  {
    "text": "and the shape of our final production environment to deal with scale and expected volume and load",
    "start": "786800",
    "end": "796160"
  },
  {
    "text": "and we haven't had to throw away any of our initial conceptions this way",
    "start": "796160",
    "end": "801519"
  },
  {
    "text": "and this hopefully leads to joy",
    "start": "801519",
    "end": "805760"
  },
  {
    "text": "so back on the original journey path of microservices when we build our",
    "start": "807360",
    "end": "813120"
  },
  {
    "text": "services with hard service boundaries uh i think work if you've built any",
    "start": "813120",
    "end": "818480"
  },
  {
    "text": "microservices this pattern should look pretty familiar each one of these represents one of the",
    "start": "818480",
    "end": "824079"
  },
  {
    "text": "potential units of deployment that we might want to build and if we're building this as regular microservices a small",
    "start": "824079",
    "end": "832320"
  },
  {
    "text": "fraction of each one of these services on the screen is our business logic",
    "start": "832320",
    "end": "837839"
  },
  {
    "text": "but then we now have all of these embedded dependencies each one of these has an rpc client in",
    "start": "837839",
    "end": "844399"
  },
  {
    "text": "it some of them have message broker clients there's a telnet server and one of them",
    "start": "844399",
    "end": "849760"
  },
  {
    "text": "there are database clients and in others there's caches all of these non-functional requirements",
    "start": "849760",
    "end": "856480"
  },
  {
    "text": "and as alluded to earlier the problem with these is that these are now",
    "start": "856480",
    "end": "863199"
  },
  {
    "text": "dependencies that we own and they are tightly coupled dependencies and even if we've managed",
    "start": "863199",
    "end": "869600"
  },
  {
    "text": "to compile these we're still in a form of dependency hell because if we want to change how we get our",
    "start": "869600",
    "end": "876959"
  },
  {
    "text": "telnet services from one approach to another we have to refactor and rebuild and",
    "start": "876959",
    "end": "883360"
  },
  {
    "text": "redeploy if we want to change one of our database clients from redis to cassandra we have to refactor",
    "start": "883360",
    "end": "890480"
  },
  {
    "text": "and rebuild and redeploy and that entire cycle happens",
    "start": "890480",
    "end": "896240"
  },
  {
    "text": "a lot more often than we expect and so these hard service boundaries are",
    "start": "896240",
    "end": "901839"
  },
  {
    "text": "very much like uh containment walls and not in a good way",
    "start": "901839",
    "end": "908560"
  },
  {
    "text": "and so hopefully we can do better and so with webassembly and using wisem cloud",
    "start": "908560",
    "end": "916000"
  },
  {
    "text": "actors and a bunch of beneficial open source runtimes",
    "start": "916000",
    "end": "921680"
  },
  {
    "text": "we can get flexible service boundaries so one deployment option here would be to",
    "start": "921680",
    "end": "927199"
  },
  {
    "text": "have a single runtime process that has all of our actors in it so we can choose on our laptop",
    "start": "927199",
    "end": "934399"
  },
  {
    "text": "during early development to have a monolith because it's the most convenient and",
    "start": "934399",
    "end": "939519"
  },
  {
    "text": "it's the easiest to work with for that time and then as we experiment and we start",
    "start": "939519",
    "end": "946959"
  },
  {
    "text": "needing different shapes to handle different loads we can split that we could split it into two runtime hosts and now we have our",
    "start": "946959",
    "end": "954560"
  },
  {
    "text": "actors spread in different ways across the different hosts and we can pick and choose which ones go where",
    "start": "954560",
    "end": "961600"
  },
  {
    "text": "we're not locked into any binding between an actor and a host at compile",
    "start": "961600",
    "end": "968160"
  },
  {
    "text": "time and finally we could also choose the the super micro",
    "start": "968160",
    "end": "973759"
  },
  {
    "text": "micro service where one of our hosts is hosting one actor and we could choose that for a number of",
    "start": "973759",
    "end": "980320"
  },
  {
    "text": "reasons but the important point is that this choice is now at least in the world of web",
    "start": "980320",
    "end": "988240"
  },
  {
    "text": "assembly a runtime an operational choice and not a",
    "start": "988240",
    "end": "994639"
  },
  {
    "text": "an architectural design choice that is baked into the overall implementation of the system",
    "start": "994639",
    "end": "1001360"
  },
  {
    "text": "so let's take a look at how we built it",
    "start": "1001360",
    "end": "1004880"
  },
  {
    "text": "and i'm going to go through some rust fairly quickly but the main thing that i want to show that",
    "start": "1006800",
    "end": "1012720"
  },
  {
    "text": "i want you to keep in mind as i go through this code is not what the code looks like but what's missing from the code",
    "start": "1012720",
    "end": "1019519"
  },
  {
    "text": "and so in this one the first thing that an actor does is it righteous areas the message",
    "start": "1019519",
    "end": "1025038"
  },
  {
    "text": "handlers actors are reactive and they they receive messages and they emit",
    "start": "1025039",
    "end": "1031120"
  },
  {
    "text": "a reply to those messages and so in this case uh one of these",
    "start": "1031120",
    "end": "1036640"
  },
  {
    "text": "actors is simply registering a handler to process messages",
    "start": "1036640",
    "end": "1043280"
  },
  {
    "text": "and again let's take a look at the code more with an eye towards what's missing in this",
    "start": "1044319",
    "end": "1049679"
  },
  {
    "text": "snippet we can see that it's publishing a message to the backend and this this code is",
    "start": "1049679",
    "end": "1057120"
  },
  {
    "text": "actually from the message broker channel which acts as a proxy between the outside message broker",
    "start": "1057120",
    "end": "1064880"
  },
  {
    "text": "and the the back end inside our chat system which is far more complicated than a hello world",
    "start": "1064880",
    "end": "1072559"
  },
  {
    "text": "sample but what's missing is actual communication with a tightly",
    "start": "1072559",
    "end": "1079280"
  },
  {
    "text": "coupled broker that publish function just takes the topic",
    "start": "1079280",
    "end": "1084480"
  },
  {
    "text": "a reply topic and the payload to publish the choice of which broker is doing the",
    "start": "1084480",
    "end": "1092240"
  },
  {
    "text": "publishing how that broker does the publishing and what configuration we use",
    "start": "1092240",
    "end": "1097360"
  },
  {
    "text": "in order to enable that publisher that broker to publish that's all done at runtime we could",
    "start": "1097360",
    "end": "1104240"
  },
  {
    "text": "completely swap out rabbitmq for kafka for gnats without having to recompile this actor",
    "start": "1104240",
    "end": "1111679"
  },
  {
    "text": "or even redeploy we could swap those at runtime",
    "start": "1111679",
    "end": "1116399"
  },
  {
    "text": "similar scenario here with data services so in this one we",
    "start": "1117760",
    "end": "1124559"
  },
  {
    "text": "are adding a room to the chat back end and in order to do that we need to",
    "start": "1124559",
    "end": "1131360"
  },
  {
    "text": "communicate with a database and in this case we're communicating with a key value store but the again what's missing from here",
    "start": "1131360",
    "end": "1139679"
  },
  {
    "text": "is that the key value store isn't actually defined here we're",
    "start": "1139679",
    "end": "1145600"
  },
  {
    "text": "referring to the key value abstraction but we're not talking explicitly to",
    "start": "1145600",
    "end": "1151039"
  },
  {
    "text": "redis or to cassandra or memcached or etcd we're simply saying set this key to this",
    "start": "1151039",
    "end": "1157760"
  },
  {
    "text": "value and add this value to a a set with this key",
    "start": "1157760",
    "end": "1165039"
  },
  {
    "text": "and again the binding of the provider is done at runtime",
    "start": "1165039",
    "end": "1172640"
  },
  {
    "text": "all right so now i'm going to take through a quick demo of the chat application that we built",
    "start": "1173120",
    "end": "1179200"
  },
  {
    "text": "and i'll show all of this code in action and more importantly i'll show this the incredibly small",
    "start": "1179200",
    "end": "1187600"
  },
  {
    "text": "size of the of our unit of distribution and our unit of compute and how flexible",
    "start": "1187600",
    "end": "1194000"
  },
  {
    "text": "it is and the options that we have without needing to recompile anything",
    "start": "1194000",
    "end": "1201360"
  },
  {
    "text": "and again before i get into the demo i just want to have this slide up here real quick",
    "start": "1201360",
    "end": "1206400"
  },
  {
    "text": "as a brief reminder of the architecture that we're building everything with a gear and in one case a",
    "start": "1206400",
    "end": "1212799"
  },
  {
    "text": "padlock is an actor written in wasmcloud",
    "start": "1212799",
    "end": "1218080"
  },
  {
    "text": "for the system and i'll go through that in a second",
    "start": "1218080",
    "end": "1223360"
  },
  {
    "text": "all right so let's get started with the demo i've got a couple of terminal windows open here",
    "start": "1225600",
    "end": "1230720"
  },
  {
    "text": "because uh in general my demos are i'm pretty devoid of graphics i'm going to be going through",
    "start": "1230720",
    "end": "1237280"
  },
  {
    "text": "some console stuff and we'll be using the telnet channel on the chat example so the first thing i",
    "start": "1237280",
    "end": "1245039"
  },
  {
    "text": "want to go through is looking at some of the actors uh you saw some of the source code for the",
    "start": "1245039",
    "end": "1250640"
  },
  {
    "text": "actors in the slide deck that i went through earlier and i just want to",
    "start": "1250640",
    "end": "1258000"
  },
  {
    "text": "show you uh what that what that sort of looks like in the shell here so what i want to look at",
    "start": "1258000",
    "end": "1265760"
  },
  {
    "text": "is first how small these things are so [Music]",
    "start": "1265760",
    "end": "1272349"
  },
  {
    "text": "if i take a look at the signed uh version of",
    "start": "1272480",
    "end": "1279360"
  },
  {
    "text": "our actor which is just a wasm file you'll see that it's actually only 702k and when you think about",
    "start": "1279360",
    "end": "1287520"
  },
  {
    "text": "the unit of deployment for most microservices even if we're using a language that's",
    "start": "1287520",
    "end": "1293200"
  },
  {
    "text": "known for fairly small self-contained binaries nothing produces binaries as small as",
    "start": "1293200",
    "end": "1299280"
  },
  {
    "text": "700k and we're able to embed them with a cryptographic signature",
    "start": "1299280",
    "end": "1305360"
  },
  {
    "text": "that tells the runtime what these modules are allowed to do so if i inspect the claims",
    "start": "1305360",
    "end": "1313760"
  },
  {
    "text": "on this module you'll see that uh what i've got here is the name",
    "start": "1313760",
    "end": "1320000"
  },
  {
    "text": "of the actor which is called a telnet channel and the actor has an account a module",
    "start": "1320000",
    "end": "1326400"
  },
  {
    "text": "expires can be used and so on and if you're paying close attention and you've seen",
    "start": "1326400",
    "end": "1331679"
  },
  {
    "text": "jason webb token before you'll recognize that these are similar fields where we have an issuer a",
    "start": "1331679",
    "end": "1338000"
  },
  {
    "text": "subject and then some other fields for how that certificate or how that token can be used but more importantly",
    "start": "1338000",
    "end": "1345840"
  },
  {
    "text": "this telnet channel is capable of using the key value store messaging broker logging extras for",
    "start": "1345840",
    "end": "1354000"
  },
  {
    "text": "random number generation and the telnet capability and uh it's it's worth pointing out",
    "start": "1354000",
    "end": "1362080"
  },
  {
    "text": "that nowhere in that list of capabilities is there a specific mention of",
    "start": "1362080",
    "end": "1368720"
  },
  {
    "text": "a vendor project so we don't mention redis we say that you can use the a key value store and so on so that was",
    "start": "1368720",
    "end": "1376080"
  },
  {
    "text": "that's the telnet channel and we also have in the",
    "start": "1376080",
    "end": "1381679"
  },
  {
    "text": "actor list we have authorization a broker channel so anything that is",
    "start": "1381679",
    "end": "1388240"
  },
  {
    "text": "using let's say gnats can use gnats as a gateway into the chat system",
    "start": "1388240",
    "end": "1395039"
  },
  {
    "text": "we have the messages actor a presence actor for determining who's online rooms and then again the telnet channel",
    "start": "1395039",
    "end": "1402720"
  },
  {
    "text": "so what i'd like to do next is start up a",
    "start": "1402720",
    "end": "1409039"
  },
  {
    "text": "wisdom cloud host and i want to start all of the important actors",
    "start": "1409039",
    "end": "1414400"
  },
  {
    "text": "i want to start all of the capability providers and then i want to configure those and",
    "start": "1414400",
    "end": "1419679"
  },
  {
    "text": "we do that through a manifest file and first looking at this manifest file",
    "start": "1419679",
    "end": "1425840"
  },
  {
    "text": "may seem a little bit overwhelming i'm only using yaml here for an example you can also use json",
    "start": "1425840",
    "end": "1434559"
  },
  {
    "text": "there's no no requirement there so the first thing we have on lines five",
    "start": "1434559",
    "end": "1440080"
  },
  {
    "text": "through seven is a list of actors that we want to start up in the asm cloud host and then on lines 9",
    "start": "1440080",
    "end": "1447840"
  },
  {
    "text": "11 13 15 and 17 you'll see we're actually using a",
    "start": "1447840",
    "end": "1453760"
  },
  {
    "text": "thing called an image ref for a capability and what that means is we're actually able to load a capability provider",
    "start": "1453760",
    "end": "1460400"
  },
  {
    "text": "from an oci uh registry that means that we can store",
    "start": "1460400",
    "end": "1465760"
  },
  {
    "text": "them the same way you store document niches and we can retrieve them the same way you you retrieve docker images and so we",
    "start": "1465760",
    "end": "1473440"
  },
  {
    "text": "have a number of our first party capability providers sitting in our wasm cloud",
    "start": "1473440",
    "end": "1479039"
  },
  {
    "text": "oci registry in azure and then starting on line 18 we have links and",
    "start": "1479039",
    "end": "1485600"
  },
  {
    "text": "link definitions uh essentially consists of the actor",
    "start": "1485600",
    "end": "1490640"
  },
  {
    "text": "the provider that we're linking to and then the name of the link and then a",
    "start": "1490640",
    "end": "1497120"
  },
  {
    "text": "set of parameters so we think environment variables and so if you see here we've got the",
    "start": "1497120",
    "end": "1503120"
  },
  {
    "text": "broker channel actor is being linked to the front-end version of",
    "start": "1503120",
    "end": "1510400"
  },
  {
    "text": "the broker the wasmcloud messaging and so by using these two different link names",
    "start": "1510400",
    "end": "1516799"
  },
  {
    "text": "we can actually have two different instances of the same capability provider",
    "start": "1516799",
    "end": "1522320"
  },
  {
    "text": "but with different configuration parameters and so in this case we have a mats broker configured",
    "start": "1522320",
    "end": "1529520"
  },
  {
    "text": "with a front end connection string and one configured with the back end connection string",
    "start": "1529520",
    "end": "1536480"
  },
  {
    "text": "so as we go through here you'll see there's telnet we configure the telnet actor by allowing it by configuring it",
    "start": "1536480",
    "end": "1543520"
  },
  {
    "text": "with logging extras access to the telnet provider and access to a key value store and",
    "start": "1543520",
    "end": "1551200"
  },
  {
    "text": "[Music] you'll see that that key value store is configured to communicate with redis so if i start",
    "start": "1551200",
    "end": "1559919"
  },
  {
    "text": "wasmcloud with this manifest file you'll see a whole bunch of",
    "start": "1559919",
    "end": "1567600"
  },
  {
    "text": "log spam that should look fairly familiar to anybody who has spent time looking at",
    "start": "1567600",
    "end": "1573279"
  },
  {
    "text": "microservices standard outlooks in kubernetes or any other cloud environment",
    "start": "1573279",
    "end": "1579200"
  },
  {
    "text": "most of this is informational not really worth going into too much detail but you can see how we have a",
    "start": "1579200",
    "end": "1587600"
  },
  {
    "text": "discrete log of all of the actors all of the providers that are running if an actor stops and starts we'll see",
    "start": "1587600",
    "end": "1593919"
  },
  {
    "text": "that here if one if a capability provider stops and starts we'll see that there as well",
    "start": "1593919",
    "end": "1600640"
  },
  {
    "text": "so the first thing we now have is we we know that we have a telnet provider",
    "start": "1600640",
    "end": "1605760"
  },
  {
    "text": "running and because we configured it we know it's running on port 8500",
    "start": "1605760",
    "end": "1612159"
  },
  {
    "text": "and we got a fancy ascii art welcome message so we'll log in here i",
    "start": "1612159",
    "end": "1619520"
  },
  {
    "text": "shall those are the list of the commands that we support and i mentioned earlier the back-end system deals with things",
    "start": "1619520",
    "end": "1626799"
  },
  {
    "text": "like storing and retrieving messages as a stream uh creating and deleting",
    "start": "1626799",
    "end": "1632320"
  },
  {
    "text": "rooms joining rooms and all of that sort of thing and then the channels",
    "start": "1632320",
    "end": "1637440"
  },
  {
    "text": "are responsible for the actual communication so right now i'm using the telnet channel",
    "start": "1637440",
    "end": "1643600"
  },
  {
    "text": "and i typed a message there and since there was no one listening if there's no",
    "start": "1646000",
    "end": "1653039"
  },
  {
    "text": "one listening to a real-time chat message in the forest uh did it actually happen and",
    "start": "1653039",
    "end": "1661360"
  },
  {
    "text": "if we go into our redis cli we'll see that in it indeed did still happen so i'll take a look at",
    "start": "1661360",
    "end": "1668240"
  },
  {
    "text": "the stream for the general room and don't worry if the rate of syntax",
    "start": "1668240",
    "end": "1674320"
  },
  {
    "text": "isn't familiar it's not all that important right now but you can see what's what's what happened here is",
    "start": "1674320",
    "end": "1680399"
  },
  {
    "text": "i have a stream of messages that has been going through the different rooms in my in my",
    "start": "1680399",
    "end": "1685760"
  },
  {
    "text": "chat back end and this most recent one we have a each message has a unique id",
    "start": "1685760",
    "end": "1691279"
  },
  {
    "text": "the text was hello from kubecon we can see the origin user is",
    "start": "1691279",
    "end": "1696480"
  },
  {
    "text": "a wasn't cloud chat url there's a timestamp on it and the origin channel is the telnet",
    "start": "1696480",
    "end": "1702480"
  },
  {
    "text": "broker now assuming that we have other channels running we might have",
    "start": "1702480",
    "end": "1707919"
  },
  {
    "text": "as an origin channel you might see the the nats broker or you might see an irc",
    "start": "1707919",
    "end": "1715200"
  },
  {
    "text": "broker or even a slack broker or a slack channel depending on the integrations that we",
    "start": "1715200",
    "end": "1721120"
  },
  {
    "text": "support it's designed to support any number of integrations written",
    "start": "1721120",
    "end": "1726559"
  },
  {
    "text": "using wisem cloud actors so but in any case the the moral of this story isn't",
    "start": "1726559",
    "end": "1732960"
  },
  {
    "text": "that i've been able to build a chat application the moral of the story",
    "start": "1732960",
    "end": "1739360"
  },
  {
    "text": "is that we've been able to build the chat application by composing tiny units of compute and distribution",
    "start": "1739360",
    "end": "1747840"
  },
  {
    "text": "that literally consume no more than one meg each that are cryptographically signed that",
    "start": "1747840",
    "end": "1755279"
  },
  {
    "text": "have a verifiable secure prominence that can be deployed anywhere and can connect to",
    "start": "1755279",
    "end": "1760880"
  },
  {
    "text": "capabilities that are also deployed anywhere i can choose to run this entire thing",
    "start": "1760880",
    "end": "1766720"
  },
  {
    "text": "as a monolith which is what i'm doing in this one terminal window or i could choose to run it as any",
    "start": "1766720",
    "end": "1772080"
  },
  {
    "text": "number of processes as i want i could run 30 copies of one actor and 12 copies",
    "start": "1772080",
    "end": "1778240"
  },
  {
    "text": "of the capability provider that it speaks to and the wasn't quad runtime takes care of",
    "start": "1778240",
    "end": "1784480"
  },
  {
    "text": "distributing the function columns between those and makes it all seamless for you so",
    "start": "1784480",
    "end": "1793440"
  },
  {
    "text": "the the end result of the experiment that we did to build this chat application",
    "start": "1793440",
    "end": "1798640"
  },
  {
    "text": "was that thinking about the the problem that we were trying to",
    "start": "1798640",
    "end": "1805039"
  },
  {
    "text": "solve was uh almost directly in line with how",
    "start": "1805039",
    "end": "1810960"
  },
  {
    "text": "we solved it when we went with building actors and connecting them to capabilities",
    "start": "1810960",
    "end": "1817679"
  },
  {
    "text": "versus other avenues that might have been higher friction had we decided to go",
    "start": "1817679",
    "end": "1823120"
  },
  {
    "text": "with the traditional microservices route so if i could ask one thing it would just be to",
    "start": "1823120",
    "end": "1828720"
  },
  {
    "text": "take a look at the tutorials and kick the tires and see if",
    "start": "1828720",
    "end": "1836159"
  },
  {
    "text": "you know your next microservice project might be something that you might want to",
    "start": "1836159",
    "end": "1841440"
  },
  {
    "text": "make as your first webassembly in the cloud project thanks",
    "start": "1841440",
    "end": "1850720"
  }
]