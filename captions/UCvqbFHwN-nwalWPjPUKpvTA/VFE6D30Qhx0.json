[
  {
    "start": "0",
    "end": "112000"
  },
  {
    "text": "before we start i would like to thank",
    "start": "1920",
    "end": "4080"
  },
  {
    "text": "all of the kubecon organizers for giving",
    "start": "4080",
    "end": "6319"
  },
  {
    "text": "us the opportunity to share our story",
    "start": "6319",
    "end": "8160"
  },
  {
    "text": "with you all",
    "start": "8160",
    "end": "9440"
  },
  {
    "text": "let's get started",
    "start": "9440",
    "end": "12320"
  },
  {
    "text": "quentin and i work on the security team",
    "start": "12320",
    "end": "14320"
  },
  {
    "text": "at yap today we are going to talk about",
    "start": "14320",
    "end": "16720"
  },
  {
    "text": "how we utilize the open policy agent and",
    "start": "16720",
    "end": "19039"
  },
  {
    "text": "active directory to provide fine-grained",
    "start": "19039",
    "end": "21039"
  },
  {
    "text": "role-based access control to the",
    "start": "21039",
    "end": "22480"
  },
  {
    "text": "kubernetes infrastructure at the app",
    "start": "22480",
    "end": "26160"
  },
  {
    "text": "and let's start with the motivation for",
    "start": "26160",
    "end": "27920"
  },
  {
    "text": "this work",
    "start": "27920",
    "end": "29679"
  },
  {
    "text": "if you are not familiar with yelp it's a",
    "start": "29679",
    "end": "31840"
  },
  {
    "text": "company that connects people with great",
    "start": "31840",
    "end": "33680"
  },
  {
    "text": "local businesses",
    "start": "33680",
    "end": "36320"
  },
  {
    "text": "as of at the end of 2020 yelpers have",
    "start": "36320",
    "end": "39360"
  },
  {
    "text": "contributed to 224 million reviews on",
    "start": "39360",
    "end": "42320"
  },
  {
    "text": "our platform approximately 31 million",
    "start": "42320",
    "end": "45920"
  },
  {
    "text": "unique devices access yap every month on",
    "start": "45920",
    "end": "48480"
  },
  {
    "text": "average",
    "start": "48480",
    "end": "49920"
  },
  {
    "text": "and more than half a million business",
    "start": "49920",
    "end": "51680"
  },
  {
    "text": "locations spend money on yelp ads every",
    "start": "51680",
    "end": "54399"
  },
  {
    "text": "month to promote their businesses",
    "start": "54399",
    "end": "58519"
  },
  {
    "text": "and as you can imagine it takes a lot of",
    "start": "59039",
    "end": "60800"
  },
  {
    "text": "infrastructure to support an application",
    "start": "60800",
    "end": "63120"
  },
  {
    "text": "of that scale",
    "start": "63120",
    "end": "64960"
  },
  {
    "text": "today we have more than 1000",
    "start": "64960",
    "end": "67200"
  },
  {
    "text": "geographically distributed software",
    "start": "67200",
    "end": "68960"
  },
  {
    "text": "engineers across hundreds of different",
    "start": "68960",
    "end": "70960"
  },
  {
    "text": "teams we have a containerized",
    "start": "70960",
    "end": "73280"
  },
  {
    "text": "microservice architecture managed by an",
    "start": "73280",
    "end": "75759"
  },
  {
    "text": "in-house build open source platform as a",
    "start": "75759",
    "end": "78000"
  },
  {
    "text": "service framework called pasta",
    "start": "78000",
    "end": "81200"
  },
  {
    "text": "under the hood pasta uses kubernetes as",
    "start": "81200",
    "end": "83600"
  },
  {
    "text": "the container orchestration framework to",
    "start": "83600",
    "end": "85600"
  },
  {
    "text": "manage thousands of workloads",
    "start": "85600",
    "end": "89040"
  },
  {
    "text": "and we have a dozen of kubernetes",
    "start": "89040",
    "end": "91439"
  },
  {
    "text": "clusters that we run on ec2 instances",
    "start": "91439",
    "end": "94079"
  },
  {
    "text": "with several custom name spaces where we",
    "start": "94079",
    "end": "97119"
  },
  {
    "text": "run",
    "start": "97119",
    "end": "98240"
  },
  {
    "text": "our web microservices and patch ups and",
    "start": "98240",
    "end": "101360"
  },
  {
    "text": "other types of statement workloads like",
    "start": "101360",
    "end": "103520"
  },
  {
    "text": "cassandra clusters kafka filling spark",
    "start": "103520",
    "end": "105920"
  },
  {
    "text": "and other many various use cases",
    "start": "105920",
    "end": "110320"
  },
  {
    "text": "but we weren't always using kubernetes",
    "start": "111119",
    "end": "113680"
  },
  {
    "start": "112000",
    "end": "112000"
  },
  {
    "text": "in fact it's a relatively new technology",
    "start": "113680",
    "end": "115920"
  },
  {
    "text": "for us at yap",
    "start": "115920",
    "end": "118159"
  },
  {
    "text": "as early adapters to the whole",
    "start": "118159",
    "end": "119759"
  },
  {
    "text": "containerized work",
    "start": "119759",
    "end": "121600"
  },
  {
    "text": "workload system we had been using mesos",
    "start": "121600",
    "end": "124560"
  },
  {
    "text": "as their container orchestration",
    "start": "124560",
    "end": "126159"
  },
  {
    "text": "framework since 2014.",
    "start": "126159",
    "end": "128879"
  },
  {
    "text": "our mesos infrastructure was primarily",
    "start": "128879",
    "end": "131200"
  },
  {
    "text": "used for running services and bench",
    "start": "131200",
    "end": "133280"
  },
  {
    "text": "workloads in containers",
    "start": "133280",
    "end": "135599"
  },
  {
    "text": "and we didn't really have a strong need",
    "start": "135599",
    "end": "138000"
  },
  {
    "text": "for fine-grained access control on the",
    "start": "138000",
    "end": "140319"
  },
  {
    "text": "mesa's clusters because",
    "start": "140319",
    "end": "142480"
  },
  {
    "text": "only the infrastructure team needed to",
    "start": "142480",
    "end": "144720"
  },
  {
    "text": "interact with the mesos directly",
    "start": "144720",
    "end": "147440"
  },
  {
    "text": "and they",
    "start": "147440",
    "end": "148879"
  },
  {
    "text": "literally use only shared secrets with",
    "start": "148879",
    "end": "150879"
  },
  {
    "text": "administrative privileges for that",
    "start": "150879",
    "end": "153040"
  },
  {
    "text": "access",
    "start": "153040",
    "end": "154560"
  },
  {
    "text": "workload developers use an abstraction",
    "start": "154560",
    "end": "156879"
  },
  {
    "text": "layer provided by the infrastructure",
    "start": "156879",
    "end": "158879"
  },
  {
    "text": "team and they really didn't need to",
    "start": "158879",
    "end": "160879"
  },
  {
    "text": "direct access and to be honest they",
    "start": "160879",
    "end": "163519"
  },
  {
    "text": "didn't even need to worry about the",
    "start": "163519",
    "end": "164879"
  },
  {
    "text": "underlying technology at all",
    "start": "164879",
    "end": "168319"
  },
  {
    "text": "and but over time kubernetes gained a",
    "start": "168560",
    "end": "171040"
  },
  {
    "text": "lot of popularity in the community and",
    "start": "171040",
    "end": "173120"
  },
  {
    "text": "we eventually decided as a company that",
    "start": "173120",
    "end": "175280"
  },
  {
    "text": "we should migrate over to kubernetes for",
    "start": "175280",
    "end": "177599"
  },
  {
    "text": "its plugable components extensibility",
    "start": "177599",
    "end": "180560"
  },
  {
    "text": "and its wide community support",
    "start": "180560",
    "end": "184319"
  },
  {
    "text": "the migration of kubernetes unlike a lot",
    "start": "184319",
    "end": "186480"
  },
  {
    "text": "of new use cases for us beyond just",
    "start": "186480",
    "end": "188879"
  },
  {
    "text": "services and batch workloads",
    "start": "188879",
    "end": "192560"
  },
  {
    "text": "and with this came a lot of interest",
    "start": "192640",
    "end": "195040"
  },
  {
    "text": "from the uh",
    "start": "195040",
    "end": "198560"
  },
  {
    "text": "this came a lot of interest from the",
    "start": "198560",
    "end": "200000"
  },
  {
    "text": "other development teams with yelp that",
    "start": "200000",
    "end": "202159"
  },
  {
    "text": "wanted to leverage the kubernetes",
    "start": "202159",
    "end": "203840"
  },
  {
    "text": "infrastructure support like other types",
    "start": "203840",
    "end": "206000"
  },
  {
    "text": "of workloads such as kafka cassandra",
    "start": "206000",
    "end": "209519"
  },
  {
    "text": "and various other use cases these",
    "start": "209519",
    "end": "212400"
  },
  {
    "text": "developers would need to interact with",
    "start": "212400",
    "end": "214159"
  },
  {
    "text": "different namespaces and resources",
    "start": "214159",
    "end": "216000"
  },
  {
    "text": "depending on their use case",
    "start": "216000",
    "end": "219280"
  },
  {
    "start": "218000",
    "end": "218000"
  },
  {
    "text": "unfortunately the security model that we",
    "start": "220720",
    "end": "223200"
  },
  {
    "text": "use in the basis word was carried over",
    "start": "223200",
    "end": "225280"
  },
  {
    "text": "to kubernetes world",
    "start": "225280",
    "end": "227360"
  },
  {
    "text": "in which in hindsight like doesn't",
    "start": "227360",
    "end": "229840"
  },
  {
    "text": "really make a lot of sense because given",
    "start": "229840",
    "end": "232080"
  },
  {
    "text": "all the new use cases and participants",
    "start": "232080",
    "end": "234159"
  },
  {
    "text": "in the new ecosystem",
    "start": "234159",
    "end": "236959"
  },
  {
    "text": "and as you can can imagine this part of",
    "start": "236959",
    "end": "239040"
  },
  {
    "text": "a major problem because it meant that",
    "start": "239040",
    "end": "242319"
  },
  {
    "text": "all kubernetes users got administrative",
    "start": "242319",
    "end": "245040"
  },
  {
    "text": "access to all kubernetes clusters via",
    "start": "245040",
    "end": "247840"
  },
  {
    "text": "shared client certificate for the client",
    "start": "247840",
    "end": "250159"
  },
  {
    "text": "admin role",
    "start": "250159",
    "end": "251680"
  },
  {
    "text": "and it didn't really matter how much",
    "start": "251680",
    "end": "254400"
  },
  {
    "text": "permission they actually needed they had",
    "start": "254400",
    "end": "256799"
  },
  {
    "text": "the admin privilege and",
    "start": "256799",
    "end": "259919"
  },
  {
    "text": "to the all clusters",
    "start": "259919",
    "end": "262079"
  },
  {
    "text": "and even worse to access to the client",
    "start": "262079",
    "end": "264320"
  },
  {
    "text": "certificate these users had to be given",
    "start": "264320",
    "end": "266639"
  },
  {
    "text": "pseudo access to the sensitive control",
    "start": "266639",
    "end": "268639"
  },
  {
    "text": "plane nodes",
    "start": "268639",
    "end": "270479"
  },
  {
    "text": "as you can imagine this has obvious",
    "start": "270479",
    "end": "272479"
  },
  {
    "text": "disadvantages",
    "start": "272479",
    "end": "274160"
  },
  {
    "text": "since everyone is using a shared set of",
    "start": "274160",
    "end": "276240"
  },
  {
    "text": "credentials it was more difficult to",
    "start": "276240",
    "end": "278400"
  },
  {
    "text": "understand who did what in that cluster",
    "start": "278400",
    "end": "281520"
  },
  {
    "text": "and since every actions appear to come",
    "start": "281520",
    "end": "283360"
  },
  {
    "text": "from the same user",
    "start": "283360",
    "end": "285520"
  },
  {
    "text": "and as a related one",
    "start": "285520",
    "end": "288000"
  },
  {
    "text": "anyone could easily make a mistake and",
    "start": "288000",
    "end": "290160"
  },
  {
    "text": "accidentally modify or delete resources",
    "start": "290160",
    "end": "292320"
  },
  {
    "text": "in namespaces",
    "start": "292320",
    "end": "294400"
  },
  {
    "text": "additionally this complicated are",
    "start": "294400",
    "end": "296240"
  },
  {
    "text": "compliance narratives and we had to do",
    "start": "296240",
    "end": "298400"
  },
  {
    "text": "strange things to overcompensate like",
    "start": "298400",
    "end": "300720"
  },
  {
    "text": "creating completely separate b-spot",
    "start": "300720",
    "end": "303360"
  },
  {
    "text": "kubernetes clusters for sensitive",
    "start": "303360",
    "end": "305120"
  },
  {
    "text": "workloads",
    "start": "305120",
    "end": "306240"
  },
  {
    "text": "which obviously doesn't scale",
    "start": "306240",
    "end": "309680"
  },
  {
    "text": "so",
    "start": "309759",
    "end": "310639"
  },
  {
    "text": "with that picture",
    "start": "310639",
    "end": "312080"
  },
  {
    "text": "it was very clear for us that we needed",
    "start": "312080",
    "end": "314479"
  },
  {
    "text": "to introduce fine-grained role-based",
    "start": "314479",
    "end": "316320"
  },
  {
    "text": "access control",
    "start": "316320",
    "end": "317759"
  },
  {
    "text": "so let's go over our requirements and",
    "start": "317759",
    "end": "319919"
  },
  {
    "text": "what we really needed to solve this",
    "start": "319919",
    "end": "323039"
  },
  {
    "text": "access control problem in our large",
    "start": "323039",
    "end": "325360"
  },
  {
    "text": "kubernetes infrastructure",
    "start": "325360",
    "end": "328000"
  },
  {
    "text": "first we wanted to authenticate",
    "start": "328000",
    "end": "330160"
  },
  {
    "text": "individual users using an identity",
    "start": "330160",
    "end": "332320"
  },
  {
    "text": "provider",
    "start": "332320",
    "end": "334000"
  },
  {
    "text": "then we would like to define",
    "start": "334000",
    "end": "336000"
  },
  {
    "text": "authorization rules for kubernetes",
    "start": "336000",
    "end": "337840"
  },
  {
    "text": "objects based on the team ownership",
    "start": "337840",
    "end": "340240"
  },
  {
    "text": "resource sensitivity action sensitivity",
    "start": "340240",
    "end": "343360"
  },
  {
    "text": "and infinitely many other combinations",
    "start": "343360",
    "end": "345360"
  },
  {
    "text": "of the custom taxonomies that exist in",
    "start": "345360",
    "end": "347919"
  },
  {
    "text": "our infrastructure",
    "start": "347919",
    "end": "350160"
  },
  {
    "text": "finally we needed to maintain a formal",
    "start": "350160",
    "end": "352720"
  },
  {
    "text": "paper trail for all changes to the",
    "start": "352720",
    "end": "354800"
  },
  {
    "text": "authorization policies and all group",
    "start": "354800",
    "end": "356960"
  },
  {
    "text": "memberships",
    "start": "356960",
    "end": "358479"
  },
  {
    "text": "for this project we prioritize human",
    "start": "358479",
    "end": "361039"
  },
  {
    "text": "users since there's a lot of them with",
    "start": "361039",
    "end": "363759"
  },
  {
    "text": "lots of use cases",
    "start": "363759",
    "end": "365600"
  },
  {
    "text": "and thankfully we only had a handful of",
    "start": "365600",
    "end": "367919"
  },
  {
    "text": "service users and they each had their",
    "start": "367919",
    "end": "370560"
  },
  {
    "text": "own client certificates and nonsense the",
    "start": "370560",
    "end": "373039"
  },
  {
    "text": "role bindings and our back",
    "start": "373039",
    "end": "374240"
  },
  {
    "text": "configurations therefore the starting",
    "start": "374240",
    "end": "376479"
  },
  {
    "text": "with the human users made a lot of sense",
    "start": "376479",
    "end": "378319"
  },
  {
    "text": "for us",
    "start": "378319",
    "end": "381120"
  },
  {
    "text": "so now we covered the motivation of this",
    "start": "381120",
    "end": "383600"
  },
  {
    "text": "project",
    "start": "383600",
    "end": "384479"
  },
  {
    "text": "and i'm at this point i will hand over",
    "start": "384479",
    "end": "386319"
  },
  {
    "text": "this presentation to the question to",
    "start": "386319",
    "end": "388639"
  },
  {
    "text": "deep dive into the technical details",
    "start": "388639",
    "end": "392240"
  },
  {
    "text": "thank you charlie at a high level we",
    "start": "392240",
    "end": "395600"
  },
  {
    "text": "have human users authenticate using",
    "start": "395600",
    "end": "397759"
  },
  {
    "text": "their octa credentials",
    "start": "397759",
    "end": "399600"
  },
  {
    "text": "kubernetes supports this basically out",
    "start": "399600",
    "end": "401919"
  },
  {
    "text": "of the box",
    "start": "401919",
    "end": "403600"
  },
  {
    "text": "a human user runs a command like cube",
    "start": "403600",
    "end": "405759"
  },
  {
    "text": "ctl get pods",
    "start": "405759",
    "end": "407600"
  },
  {
    "text": "we provide a wrapper script that first",
    "start": "407600",
    "end": "409840"
  },
  {
    "text": "prompts the user for their octa",
    "start": "409840",
    "end": "411440"
  },
  {
    "text": "authentication",
    "start": "411440",
    "end": "412720"
  },
  {
    "text": "which consists of their active directory",
    "start": "412720",
    "end": "414479"
  },
  {
    "text": "credentials and a second factor like",
    "start": "414479",
    "end": "416800"
  },
  {
    "text": "yubikey or an authenticator app",
    "start": "416800",
    "end": "419680"
  },
  {
    "text": "upon success they receive a jwt token",
    "start": "419680",
    "end": "422479"
  },
  {
    "text": "from octa",
    "start": "422479",
    "end": "423680"
  },
  {
    "text": "valid for one hour which is then sent to",
    "start": "423680",
    "end": "426240"
  },
  {
    "text": "the cluster via cubectl's dash token",
    "start": "426240",
    "end": "429440"
  },
  {
    "text": "parameter",
    "start": "429440",
    "end": "431360"
  },
  {
    "text": "the kubernetes api server verifies the",
    "start": "431360",
    "end": "434319"
  },
  {
    "text": "authenticity of the jwt token by",
    "start": "434319",
    "end": "437039"
  },
  {
    "text": "verifying the signature using octa's",
    "start": "437039",
    "end": "439039"
  },
  {
    "text": "public key server",
    "start": "439039",
    "end": "440880"
  },
  {
    "text": "the human user's identity from the token",
    "start": "440880",
    "end": "443360"
  },
  {
    "text": "is then propagated downstream for",
    "start": "443360",
    "end": "445520"
  },
  {
    "text": "authorization considerations",
    "start": "445520",
    "end": "448800"
  },
  {
    "text": "the benefits of using octa for",
    "start": "448800",
    "end": "450400"
  },
  {
    "text": "authentication are pretty",
    "start": "450400",
    "end": "451440"
  },
  {
    "text": "straightforward",
    "start": "451440",
    "end": "453039"
  },
  {
    "text": "root access is no longer needed to",
    "start": "453039",
    "end": "455039"
  },
  {
    "text": "interact with the kubernetes clusters",
    "start": "455039",
    "end": "457599"
  },
  {
    "text": "each action can be tied back to a",
    "start": "457599",
    "end": "459520"
  },
  {
    "text": "specific user rather than a generic",
    "start": "459520",
    "end": "462160"
  },
  {
    "text": "administrative user and credentials",
    "start": "462160",
    "end": "465120"
  },
  {
    "text": "obtained from octa are temporary and",
    "start": "465120",
    "end": "467520"
  },
  {
    "text": "behind the second factor this mitigates",
    "start": "467520",
    "end": "470000"
  },
  {
    "text": "the risk of credential theft and replay",
    "start": "470000",
    "end": "472000"
  },
  {
    "text": "attacks",
    "start": "472000",
    "end": "474400"
  },
  {
    "text": "now let's talk about",
    "start": "474400",
    "end": "476840"
  },
  {
    "text": "authorization here's an overview of the",
    "start": "476840",
    "end": "479039"
  },
  {
    "start": "478000",
    "end": "478000"
  },
  {
    "text": "architecture",
    "start": "479039",
    "end": "480240"
  },
  {
    "text": "first of all on the top you've got the",
    "start": "480240",
    "end": "482319"
  },
  {
    "text": "user who interacts with kubernetes using",
    "start": "482319",
    "end": "484560"
  },
  {
    "text": "cube ctl",
    "start": "484560",
    "end": "486160"
  },
  {
    "text": "kubernetes sends a request to open",
    "start": "486160",
    "end": "488080"
  },
  {
    "text": "policy agent which makes the",
    "start": "488080",
    "end": "489680"
  },
  {
    "text": "authorization decision",
    "start": "489680",
    "end": "491759"
  },
  {
    "text": "and on the bottom we've got the data",
    "start": "491759",
    "end": "493759"
  },
  {
    "text": "that feeds into that decision we collect",
    "start": "493759",
    "end": "496240"
  },
  {
    "text": "data from git and from active directory",
    "start": "496240",
    "end": "499280"
  },
  {
    "text": "and then we put that data into an s3",
    "start": "499280",
    "end": "501360"
  },
  {
    "text": "bucket for open policy agent to read",
    "start": "501360",
    "end": "504080"
  },
  {
    "text": "let's talk about that data first",
    "start": "504080",
    "end": "506560"
  },
  {
    "start": "506000",
    "end": "506000"
  },
  {
    "text": "here's a summary of all the data that",
    "start": "506560",
    "end": "508240"
  },
  {
    "text": "feeds into opa in order for it to make",
    "start": "508240",
    "end": "510560"
  },
  {
    "text": "authorization decisions",
    "start": "510560",
    "end": "512719"
  },
  {
    "text": "first the access control capabilities",
    "start": "512719",
    "end": "515120"
  },
  {
    "text": "are stored in an access restricted git",
    "start": "515120",
    "end": "517360"
  },
  {
    "text": "repository",
    "start": "517360",
    "end": "518959"
  },
  {
    "text": "these are the roles that we can give to",
    "start": "518959",
    "end": "520640"
  },
  {
    "text": "a user to allow them to perform certain",
    "start": "520640",
    "end": "522800"
  },
  {
    "text": "actions",
    "start": "522800",
    "end": "524240"
  },
  {
    "text": "we then use active directory to store",
    "start": "524240",
    "end": "526320"
  },
  {
    "text": "group membership which tells oppa which",
    "start": "526320",
    "end": "528720"
  },
  {
    "text": "users are able to use which capabilities",
    "start": "528720",
    "end": "531920"
  },
  {
    "text": "and then finally we have service",
    "start": "531920",
    "end": "533440"
  },
  {
    "text": "metadata",
    "start": "533440",
    "end": "534399"
  },
  {
    "text": "that contains various information about",
    "start": "534399",
    "end": "536240"
  },
  {
    "text": "the services that we run that we may",
    "start": "536240",
    "end": "538399"
  },
  {
    "text": "want to use for authorization",
    "start": "538399",
    "end": "541839"
  },
  {
    "text": "next let's talk about the policy",
    "start": "541839",
    "end": "544399"
  },
  {
    "text": "the opa policy is the logic that oppa",
    "start": "544399",
    "end": "546720"
  },
  {
    "text": "uses to take all of the data provided",
    "start": "546720",
    "end": "548800"
  },
  {
    "text": "and make a decision",
    "start": "548800",
    "end": "550320"
  },
  {
    "text": "it is written in rego which is a",
    "start": "550320",
    "end": "552399"
  },
  {
    "text": "language based on data log",
    "start": "552399",
    "end": "554560"
  },
  {
    "text": "i won't cover the details of the rego",
    "start": "554560",
    "end": "556320"
  },
  {
    "text": "policy but i'll cover specific examples",
    "start": "556320",
    "end": "558959"
  },
  {
    "text": "of what the input looks like",
    "start": "558959",
    "end": "561600"
  },
  {
    "text": "the capability format contains a number",
    "start": "561600",
    "end": "564000"
  },
  {
    "text": "of different ways in which you can limit",
    "start": "564000",
    "end": "565680"
  },
  {
    "text": "access",
    "start": "565680",
    "end": "566800"
  },
  {
    "text": "it currently contains clusters",
    "start": "566800",
    "end": "568720"
  },
  {
    "text": "namespaces resources sub-resources",
    "start": "568720",
    "end": "571920"
  },
  {
    "text": "resource names verbs pod metadata and",
    "start": "571920",
    "end": "574560"
  },
  {
    "text": "service metadata these are all native",
    "start": "574560",
    "end": "577120"
  },
  {
    "text": "kubernetes attributes except for the",
    "start": "577120",
    "end": "579519"
  },
  {
    "text": "service metadata",
    "start": "579519",
    "end": "581440"
  },
  {
    "text": "a capability can have any number of",
    "start": "581440",
    "end": "583440"
  },
  {
    "text": "sub-capabilities",
    "start": "583440",
    "end": "584959"
  },
  {
    "text": "like in this example we only have one",
    "start": "584959",
    "end": "587120"
  },
  {
    "text": "called admin",
    "start": "587120",
    "end": "588880"
  },
  {
    "text": "these attributes are all structured as",
    "start": "588880",
    "end": "590720"
  },
  {
    "text": "allow lists where if you match any value",
    "start": "590720",
    "end": "593920"
  },
  {
    "text": "you are allowed",
    "start": "593920",
    "end": "595200"
  },
  {
    "text": "which means that an empty list means",
    "start": "595200",
    "end": "597040"
  },
  {
    "text": "allow all",
    "start": "597040",
    "end": "599360"
  },
  {
    "text": "here's an example capability with two",
    "start": "599360",
    "end": "601279"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "sub-capabilities",
    "start": "601279",
    "end": "603360"
  },
  {
    "text": "the first allows you to run any command",
    "start": "603360",
    "end": "605680"
  },
  {
    "text": "as long as the cluster is one of these",
    "start": "605680",
    "end": "607519"
  },
  {
    "text": "two listed",
    "start": "607519",
    "end": "609440"
  },
  {
    "text": "and you can also run the list command",
    "start": "609440",
    "end": "612000"
  },
  {
    "text": "which sometimes looks like a git in qtl",
    "start": "612000",
    "end": "615279"
  },
  {
    "text": "in any cluster",
    "start": "615279",
    "end": "616959"
  },
  {
    "text": "therefore these two sub capabilities",
    "start": "616959",
    "end": "618800"
  },
  {
    "text": "combine to create an unprivileged",
    "start": "618800",
    "end": "620640"
  },
  {
    "text": "capability",
    "start": "620640",
    "end": "622800"
  },
  {
    "text": "in this example we're using pod metadata",
    "start": "622800",
    "end": "625360"
  },
  {
    "text": "to filter",
    "start": "625360",
    "end": "626800"
  },
  {
    "text": "yelp.com service name is just our custom",
    "start": "626800",
    "end": "629920"
  },
  {
    "text": "metadata attribute that we use to",
    "start": "629920",
    "end": "632079"
  },
  {
    "text": "represent the name of the service that a",
    "start": "632079",
    "end": "634240"
  },
  {
    "text": "pod is a part of",
    "start": "634240",
    "end": "636160"
  },
  {
    "text": "this will work if either of the two",
    "start": "636160",
    "end": "637839"
  },
  {
    "text": "values match",
    "start": "637839",
    "end": "640560"
  },
  {
    "text": "here's another example we're using a",
    "start": "640560",
    "end": "642720"
  },
  {
    "text": "team attribute to limit actions to only",
    "start": "642720",
    "end": "645040"
  },
  {
    "text": "those where we can match the action to a",
    "start": "645040",
    "end": "647360"
  },
  {
    "text": "service owned by the infrasec team",
    "start": "647360",
    "end": "651760"
  },
  {
    "text": "you can also use a custom variable in",
    "start": "651920",
    "end": "653680"
  },
  {
    "text": "the capabilities to represent the user's",
    "start": "653680",
    "end": "655680"
  },
  {
    "text": "team rather than a static value",
    "start": "655680",
    "end": "658640"
  },
  {
    "text": "here's a capability to let someone run",
    "start": "658640",
    "end": "660640"
  },
  {
    "text": "read-only commands for any service that",
    "start": "660640",
    "end": "663040"
  },
  {
    "text": "their team owns",
    "start": "663040",
    "end": "665360"
  },
  {
    "text": "and here's the same capability but",
    "start": "665360",
    "end": "667600"
  },
  {
    "text": "without the read-only requirement",
    "start": "667600",
    "end": "671199"
  },
  {
    "text": "next i'll cover the opa policy manager",
    "start": "671360",
    "end": "674320"
  },
  {
    "start": "672000",
    "end": "672000"
  },
  {
    "text": "this is a service that we use to compile",
    "start": "674320",
    "end": "676399"
  },
  {
    "text": "all of the input data the open needs",
    "start": "676399",
    "end": "678800"
  },
  {
    "text": "bundle it up into a format that it can",
    "start": "678800",
    "end": "680800"
  },
  {
    "text": "read and push it to s3",
    "start": "680800",
    "end": "683760"
  },
  {
    "text": "it runs continuously and only updates",
    "start": "683760",
    "end": "686160"
  },
  {
    "text": "the bundle when anything has changed",
    "start": "686160",
    "end": "690399"
  },
  {
    "text": "now i'll cover the components that run",
    "start": "690880",
    "end": "693279"
  },
  {
    "start": "691000",
    "end": "691000"
  },
  {
    "text": "on each kubernetes host",
    "start": "693279",
    "end": "695680"
  },
  {
    "text": "open runs as a service on each host and",
    "start": "695680",
    "end": "698240"
  },
  {
    "text": "is configured to pull from s3 to",
    "start": "698240",
    "end": "700640"
  },
  {
    "text": "configure itself as well as to listen on",
    "start": "700640",
    "end": "703120"
  },
  {
    "text": "a websocket for any requests that come",
    "start": "703120",
    "end": "705040"
  },
  {
    "text": "from kubernetes",
    "start": "705040",
    "end": "707440"
  },
  {
    "text": "the input it gets from kubernetes takes",
    "start": "707440",
    "end": "709200"
  },
  {
    "text": "the form of a subject access review",
    "start": "709200",
    "end": "711839"
  },
  {
    "text": "and that contains all the information",
    "start": "711839",
    "end": "713519"
  },
  {
    "text": "about the user's request",
    "start": "713519",
    "end": "715360"
  },
  {
    "text": "and then combines that with the data",
    "start": "715360",
    "end": "717200"
  },
  {
    "text": "from the s3 bundle to make a decision",
    "start": "717200",
    "end": "720560"
  },
  {
    "text": "these decisions are then logged and",
    "start": "720560",
    "end": "722399"
  },
  {
    "text": "written into splunk",
    "start": "722399",
    "end": "724959"
  },
  {
    "text": "now we'll go over just a couple of",
    "start": "724959",
    "end": "726480"
  },
  {
    "text": "end-to-end examples of how this can be",
    "start": "726480",
    "end": "728839"
  },
  {
    "text": "used first we'll cover a basic example",
    "start": "728839",
    "end": "732079"
  },
  {
    "start": "731000",
    "end": "731000"
  },
  {
    "text": "in the top one a user is trying to list",
    "start": "732079",
    "end": "734399"
  },
  {
    "text": "pods in the default namespace",
    "start": "734399",
    "end": "736880"
  },
  {
    "text": "the list verb matches the specified verb",
    "start": "736880",
    "end": "739279"
  },
  {
    "text": "in the capability",
    "start": "739279",
    "end": "740959"
  },
  {
    "text": "the namespace and the resource don't",
    "start": "740959",
    "end": "742800"
  },
  {
    "text": "have any restrictions in the capability",
    "start": "742800",
    "end": "745279"
  },
  {
    "text": "and the user is a member of the opa",
    "start": "745279",
    "end": "747839"
  },
  {
    "text": "kubernetes dev unprivileged group so",
    "start": "747839",
    "end": "750560"
  },
  {
    "text": "this request is allowed",
    "start": "750560",
    "end": "753120"
  },
  {
    "text": "in the bottom example the verb doesn't",
    "start": "753120",
    "end": "754959"
  },
  {
    "text": "match and the request is denied",
    "start": "754959",
    "end": "758399"
  },
  {
    "text": "in these next two examples we are using",
    "start": "758399",
    "end": "760720"
  },
  {
    "start": "759000",
    "end": "759000"
  },
  {
    "text": "a team based capability which depends on",
    "start": "760720",
    "end": "763120"
  },
  {
    "text": "the request matching with our service",
    "start": "763120",
    "end": "764720"
  },
  {
    "text": "metadata",
    "start": "764720",
    "end": "766079"
  },
  {
    "text": "the subject access review only contains",
    "start": "766079",
    "end": "768240"
  },
  {
    "text": "the name of the pod",
    "start": "768240",
    "end": "769920"
  },
  {
    "text": "and so the first step is actually for",
    "start": "769920",
    "end": "771760"
  },
  {
    "text": "oppa to request the pod metadata from",
    "start": "771760",
    "end": "774399"
  },
  {
    "text": "kubernetes",
    "start": "774399",
    "end": "776000"
  },
  {
    "text": "this pod metadata then contains the name",
    "start": "776000",
    "end": "778320"
  },
  {
    "text": "of the service",
    "start": "778320",
    "end": "779680"
  },
  {
    "text": "and that service can be matched against",
    "start": "779680",
    "end": "781519"
  },
  {
    "text": "our service metadata",
    "start": "781519",
    "end": "783279"
  },
  {
    "text": "in this case the service is owned by",
    "start": "783279",
    "end": "785360"
  },
  {
    "text": "intersect team",
    "start": "785360",
    "end": "786959"
  },
  {
    "text": "and the user making the request is also",
    "start": "786959",
    "end": "789040"
  },
  {
    "text": "a member of that team so the request is",
    "start": "789040",
    "end": "791200"
  },
  {
    "text": "allowed",
    "start": "791200",
    "end": "792959"
  },
  {
    "text": "in the bottom example the service name",
    "start": "792959",
    "end": "795279"
  },
  {
    "text": "is now pe service",
    "start": "795279",
    "end": "797360"
  },
  {
    "text": "and so the own the owner no longer",
    "start": "797360",
    "end": "799519"
  },
  {
    "text": "matches with the user's team and the",
    "start": "799519",
    "end": "801040"
  },
  {
    "text": "request is denied",
    "start": "801040",
    "end": "803440"
  },
  {
    "text": "note that we could still add a static",
    "start": "803440",
    "end": "805680"
  },
  {
    "text": "value into the capability if we added pe",
    "start": "805680",
    "end": "808959"
  },
  {
    "text": "there",
    "start": "808959",
    "end": "809760"
  },
  {
    "text": "then the team would match again and the",
    "start": "809760",
    "end": "812000"
  },
  {
    "text": "request would become allowed",
    "start": "812000",
    "end": "815120"
  },
  {
    "text": "finally i'm going to talk about the",
    "start": "815120",
    "end": "816480"
  },
  {
    "text": "decision logs briefly",
    "start": "816480",
    "end": "818480"
  },
  {
    "text": "each authorization request",
    "start": "818480",
    "end": "821360"
  },
  {
    "text": "ends up with a log being recorded",
    "start": "821360",
    "end": "824320"
  },
  {
    "text": "this has of course the basic information",
    "start": "824320",
    "end": "826560"
  },
  {
    "text": "like whether or not the result was",
    "start": "826560",
    "end": "828000"
  },
  {
    "text": "allowed or denied",
    "start": "828000",
    "end": "829920"
  },
  {
    "text": "and also the various input in the",
    "start": "829920",
    "end": "832079"
  },
  {
    "text": "subject access review that kubernetes",
    "start": "832079",
    "end": "834079"
  },
  {
    "text": "sent to oppa",
    "start": "834079",
    "end": "835600"
  },
  {
    "text": "what was really neat about it is that it",
    "start": "835600",
    "end": "837360"
  },
  {
    "text": "shows you which groups would have been",
    "start": "837360",
    "end": "839600"
  },
  {
    "text": "allowed versus which groups the user had",
    "start": "839600",
    "end": "842639"
  },
  {
    "text": "this makes it very easy for us to debug",
    "start": "842639",
    "end": "844800"
  },
  {
    "text": "requests",
    "start": "844800",
    "end": "845920"
  },
  {
    "text": "and to figure out what capabilities we",
    "start": "845920",
    "end": "847920"
  },
  {
    "text": "should add to someone who needs to do",
    "start": "847920",
    "end": "849600"
  },
  {
    "text": "something",
    "start": "849600",
    "end": "851279"
  },
  {
    "text": "next i'm going to hand it over to",
    "start": "851279",
    "end": "852639"
  },
  {
    "text": "charlie to talk about rollout strategy",
    "start": "852639",
    "end": "854959"
  },
  {
    "text": "and system reliability",
    "start": "854959",
    "end": "858320"
  },
  {
    "text": "thanks quantum for the great technical",
    "start": "858480",
    "end": "860079"
  },
  {
    "text": "deep dive",
    "start": "860079",
    "end": "861120"
  },
  {
    "text": "let's talk about our rollout strategy",
    "start": "861120",
    "end": "865040"
  },
  {
    "start": "865000",
    "end": "865000"
  },
  {
    "text": "our major challenge was switching to a",
    "start": "865040",
    "end": "866800"
  },
  {
    "text": "new authorization system under heavy",
    "start": "866800",
    "end": "868880"
  },
  {
    "text": "usage to avoid any system or user",
    "start": "868880",
    "end": "872320"
  },
  {
    "text": "disruption we came up with the following",
    "start": "872320",
    "end": "874639"
  },
  {
    "text": "approach",
    "start": "874639",
    "end": "875760"
  },
  {
    "text": "first we ensure that all of the changes",
    "start": "875760",
    "end": "878240"
  },
  {
    "text": "are rollback safe",
    "start": "878240",
    "end": "880000"
  },
  {
    "text": "then we configured our infrastructure to",
    "start": "880000",
    "end": "882399"
  },
  {
    "text": "support a dry run mode",
    "start": "882399",
    "end": "884639"
  },
  {
    "text": "then we rolled out the dryer mode",
    "start": "884639",
    "end": "886639"
  },
  {
    "text": "incrementally cluster by cluster",
    "start": "886639",
    "end": "889680"
  },
  {
    "text": "in this way we were able to observe the",
    "start": "889680",
    "end": "892000"
  },
  {
    "text": "actual usage patterns",
    "start": "892000",
    "end": "894399"
  },
  {
    "text": "once we collected enough data we",
    "start": "894399",
    "end": "896560"
  },
  {
    "text": "provisioned lease privilege",
    "start": "896560",
    "end": "897920"
  },
  {
    "text": "authorization capabilities",
    "start": "897920",
    "end": "900240"
  },
  {
    "text": "finally we incrementally roll out the",
    "start": "900240",
    "end": "902720"
  },
  {
    "text": "enforcement mode that enforces the lease",
    "start": "902720",
    "end": "904560"
  },
  {
    "text": "privilege authorization",
    "start": "904560",
    "end": "907279"
  },
  {
    "text": "one thing that i would like to emphasize",
    "start": "907279",
    "end": "908800"
  },
  {
    "text": "here is that on every step we overly",
    "start": "908800",
    "end": "912000"
  },
  {
    "text": "communicated the rollout",
    "start": "912000",
    "end": "913839"
  },
  {
    "text": "for infrastructure changes we let the",
    "start": "913839",
    "end": "916079"
  },
  {
    "text": "sra teams know on each step for",
    "start": "916079",
    "end": "918560"
  },
  {
    "text": "authorization provisioning we",
    "start": "918560",
    "end": "920480"
  },
  {
    "text": "communicated with the stakeholders",
    "start": "920480",
    "end": "922880"
  },
  {
    "text": "in this way we were able to smoothly",
    "start": "922880",
    "end": "924880"
  },
  {
    "text": "roll out are a major authorization",
    "start": "924880",
    "end": "927279"
  },
  {
    "text": "system in our infrastructure",
    "start": "927279",
    "end": "931040"
  },
  {
    "start": "931000",
    "end": "931000"
  },
  {
    "text": "now let's talk about several challenges",
    "start": "931279",
    "end": "933600"
  },
  {
    "text": "that we encountered throughout this",
    "start": "933600",
    "end": "935360"
  },
  {
    "text": "project",
    "start": "935360",
    "end": "936800"
  },
  {
    "text": "one of the major challenges was that the",
    "start": "936800",
    "end": "939279"
  },
  {
    "text": "subject access review did not contain",
    "start": "939279",
    "end": "942000"
  },
  {
    "text": "enough information for us to make least",
    "start": "942000",
    "end": "943920"
  },
  {
    "text": "privileged decisions",
    "start": "943920",
    "end": "945839"
  },
  {
    "text": "for example we didn't have the service",
    "start": "945839",
    "end": "948079"
  },
  {
    "text": "name that we use for the team-based",
    "start": "948079",
    "end": "949920"
  },
  {
    "text": "authorization",
    "start": "949920",
    "end": "951759"
  },
  {
    "text": "as a solution for each authorization",
    "start": "951759",
    "end": "954720"
  },
  {
    "text": "request oppa reaches out to cube api",
    "start": "954720",
    "end": "957519"
  },
  {
    "text": "server with the resource name and gets",
    "start": "957519",
    "end": "960320"
  },
  {
    "text": "the resource tables including the",
    "start": "960320",
    "end": "962079"
  },
  {
    "text": "service name",
    "start": "962079",
    "end": "964399"
  },
  {
    "text": "oppa also reads the",
    "start": "964399",
    "end": "966399"
  },
  {
    "text": "environment variables from the host to",
    "start": "966399",
    "end": "968399"
  },
  {
    "text": "make authorization decisions based on",
    "start": "968399",
    "end": "970240"
  },
  {
    "text": "the kubernetes cluster or yap ecosystem",
    "start": "970240",
    "end": "974880"
  },
  {
    "text": "next problem was that unprivileged",
    "start": "974959",
    "end": "977519"
  },
  {
    "text": "engineers who has network access can",
    "start": "977519",
    "end": "980240"
  },
  {
    "text": "curl to open api and modify the",
    "start": "980240",
    "end": "982639"
  },
  {
    "text": "authorization policies",
    "start": "982639",
    "end": "984959"
  },
  {
    "text": "in this way any unprivileged user could",
    "start": "984959",
    "end": "987040"
  },
  {
    "text": "entirely bypass the authorization system",
    "start": "987040",
    "end": "990000"
  },
  {
    "text": "and this is really bad for our security",
    "start": "990000",
    "end": "992000"
  },
  {
    "text": "departure",
    "start": "992000",
    "end": "993120"
  },
  {
    "text": "as a solution we set up mtls between",
    "start": "993120",
    "end": "995759"
  },
  {
    "text": "kubernetes and oppa",
    "start": "995759",
    "end": "997839"
  },
  {
    "text": "additionally we created an arbite policy",
    "start": "997839",
    "end": "1000560"
  },
  {
    "text": "for oppa to only run get commands in",
    "start": "1000560",
    "end": "1002880"
  },
  {
    "text": "kubernetes clusters",
    "start": "1002880",
    "end": "1005040"
  },
  {
    "text": "in this way we aim to mitigate",
    "start": "1005040",
    "end": "1006959"
  },
  {
    "text": "privileged escalation attacks through",
    "start": "1006959",
    "end": "1008560"
  },
  {
    "text": "oppa",
    "start": "1008560",
    "end": "1010800"
  },
  {
    "text": "the next problem was that we encountered",
    "start": "1010800",
    "end": "1013199"
  },
  {
    "text": "during the design process",
    "start": "1013199",
    "end": "1015360"
  },
  {
    "text": "which was that multiple teams owning",
    "start": "1015360",
    "end": "1017680"
  },
  {
    "text": "services in a single namespace",
    "start": "1017680",
    "end": "1020720"
  },
  {
    "text": "in fact one of our namesp",
    "start": "1020720",
    "end": "1023279"
  },
  {
    "text": "namespaces contained hundreds of",
    "start": "1023279",
    "end": "1025600"
  },
  {
    "text": "services owned more than hundreds of",
    "start": "1025600",
    "end": "1027520"
  },
  {
    "text": "teams",
    "start": "1027520",
    "end": "1028720"
  },
  {
    "text": "so like we could have created a",
    "start": "1028720",
    "end": "1030640"
  },
  {
    "text": "capability for each of these teams but",
    "start": "1030640",
    "end": "1032720"
  },
  {
    "text": "then we could have",
    "start": "1032720",
    "end": "1034000"
  },
  {
    "text": "have like hundreds of different",
    "start": "1034000",
    "end": "1035360"
  },
  {
    "text": "capabilities",
    "start": "1035360",
    "end": "1037038"
  },
  {
    "text": "instead we came up with a special",
    "start": "1037039",
    "end": "1039038"
  },
  {
    "text": "keyword called my team and created a",
    "start": "1039039",
    "end": "1041199"
  },
  {
    "text": "single team-based policy",
    "start": "1041199",
    "end": "1043520"
  },
  {
    "text": "in this way everyone who has the same",
    "start": "1043520",
    "end": "1045760"
  },
  {
    "text": "team as team-based policy can only",
    "start": "1045760",
    "end": "1048400"
  },
  {
    "text": "access their own services",
    "start": "1048400",
    "end": "1052000"
  },
  {
    "text": "one thing i would like to mention in",
    "start": "1052000",
    "end": "1053840"
  },
  {
    "text": "that here is that this couldn't be",
    "start": "1053840",
    "end": "1056480"
  },
  {
    "text": "possible with the default kubernetes",
    "start": "1056480",
    "end": "1058640"
  },
  {
    "text": "arbec policies because arabic policies",
    "start": "1058640",
    "end": "1060880"
  },
  {
    "text": "do not provide such granularity",
    "start": "1060880",
    "end": "1065520"
  },
  {
    "text": "the next problem that i would like to",
    "start": "1065679",
    "end": "1067440"
  },
  {
    "text": "talk about is",
    "start": "1067440",
    "end": "1069679"
  },
  {
    "text": "how do we associate the team with",
    "start": "1069679",
    "end": "1072640"
  },
  {
    "text": "non-port resources with metadata",
    "start": "1072640",
    "end": "1075600"
  },
  {
    "text": "so we previously talked about how we use",
    "start": "1075600",
    "end": "1077919"
  },
  {
    "text": "part metadata to associate a request",
    "start": "1077919",
    "end": "1080240"
  },
  {
    "text": "with our own method",
    "start": "1080240",
    "end": "1082240"
  },
  {
    "text": "service metadata to make team-based",
    "start": "1082240",
    "end": "1084240"
  },
  {
    "text": "access",
    "start": "1084240",
    "end": "1085200"
  },
  {
    "text": "but some non-part resources require",
    "start": "1085200",
    "end": "1087600"
  },
  {
    "text": "special treatment",
    "start": "1087600",
    "end": "1089440"
  },
  {
    "text": "for example secrets that are bound to",
    "start": "1089440",
    "end": "1091360"
  },
  {
    "text": "the services that they do not have team",
    "start": "1091360",
    "end": "1093840"
  },
  {
    "text": "membership associated with them",
    "start": "1093840",
    "end": "1096880"
  },
  {
    "text": "to enforce least privileged team-based",
    "start": "1096880",
    "end": "1099120"
  },
  {
    "text": "access to the secrets we came up with a",
    "start": "1099120",
    "end": "1101360"
  },
  {
    "text": "special case handling in the regula",
    "start": "1101360",
    "end": "1103200"
  },
  {
    "text": "policy",
    "start": "1103200",
    "end": "1104799"
  },
  {
    "text": "literally we say in our policy that",
    "start": "1104799",
    "end": "1108960"
  },
  {
    "text": "our policy only allows team-based access",
    "start": "1108960",
    "end": "1111360"
  },
  {
    "text": "for the secrets under the following",
    "start": "1111360",
    "end": "1113520"
  },
  {
    "text": "conditions",
    "start": "1113520",
    "end": "1115520"
  },
  {
    "text": "the service should belong to the user's",
    "start": "1115520",
    "end": "1117360"
  },
  {
    "text": "team and all of the services instances",
    "start": "1117360",
    "end": "1120559"
  },
  {
    "text": "should also belong to the user's team",
    "start": "1120559",
    "end": "1123440"
  },
  {
    "text": "in this way we can enforce team-based",
    "start": "1123440",
    "end": "1125679"
  },
  {
    "text": "access for all types of resources",
    "start": "1125679",
    "end": "1128559"
  },
  {
    "text": "but as you can imagine this came with a",
    "start": "1128559",
    "end": "1130880"
  },
  {
    "text": "price",
    "start": "1130880",
    "end": "1131919"
  },
  {
    "text": "this approach made the regular policy",
    "start": "1131919",
    "end": "1134400"
  },
  {
    "text": "long and overly complicated",
    "start": "1134400",
    "end": "1136880"
  },
  {
    "text": "and this brings us to our next problem",
    "start": "1136880",
    "end": "1139679"
  },
  {
    "text": "which uh that",
    "start": "1139679",
    "end": "1141679"
  },
  {
    "text": "our regular policy become overly",
    "start": "1141679",
    "end": "1143679"
  },
  {
    "text": "complicated and hard to test and debug",
    "start": "1143679",
    "end": "1146799"
  },
  {
    "text": "so to to make sure that",
    "start": "1146799",
    "end": "1149280"
  },
  {
    "text": "we have enough coverage we wrote",
    "start": "1149280",
    "end": "1151600"
  },
  {
    "text": "extensive test cases",
    "start": "1151600",
    "end": "1153679"
  },
  {
    "text": "unit test coverage uh like in fact we",
    "start": "1153679",
    "end": "1156480"
  },
  {
    "text": "had unit test coverage more than two",
    "start": "1156480",
    "end": "1158080"
  },
  {
    "text": "thousand lines of code",
    "start": "1158080",
    "end": "1161039"
  },
  {
    "text": "so this was overall problems and",
    "start": "1161039",
    "end": "1163200"
  },
  {
    "text": "challenges that we encountered",
    "start": "1163200",
    "end": "1165039"
  },
  {
    "text": "encountered throughout this pro project",
    "start": "1165039",
    "end": "1168480"
  },
  {
    "text": "let's talk about a little bit on the",
    "start": "1168480",
    "end": "1170160"
  },
  {
    "text": "system reliability",
    "start": "1170160",
    "end": "1173280"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "as you have seen from the new",
    "start": "1173280",
    "end": "1174960"
  },
  {
    "text": "architecture presentation we actually",
    "start": "1174960",
    "end": "1177280"
  },
  {
    "text": "added more complexity under the hood",
    "start": "1177280",
    "end": "1179280"
  },
  {
    "text": "than in this status quo",
    "start": "1179280",
    "end": "1181840"
  },
  {
    "text": "as such it was very important for us for",
    "start": "1181840",
    "end": "1184640"
  },
  {
    "text": "our",
    "start": "1184640",
    "end": "1185520"
  },
  {
    "text": "design and our role our strategy to",
    "start": "1185520",
    "end": "1187679"
  },
  {
    "text": "ensure that the system was faltering to",
    "start": "1187679",
    "end": "1190000"
  },
  {
    "text": "any failure scenarios",
    "start": "1190000",
    "end": "1193720"
  },
  {
    "text": "so let's go through some of these",
    "start": "1194320",
    "end": "1196080"
  },
  {
    "text": "scenarios first one is that what if we",
    "start": "1196080",
    "end": "1199600"
  },
  {
    "text": "push a bad policy that has a",
    "start": "1199600",
    "end": "1201280"
  },
  {
    "text": "catastrophic side effects like blocking",
    "start": "1201280",
    "end": "1203360"
  },
  {
    "text": "access from old users",
    "start": "1203360",
    "end": "1206159"
  },
  {
    "text": "we do enforce a strict code review",
    "start": "1206159",
    "end": "1208159"
  },
  {
    "text": "process but nobody is perfect after all",
    "start": "1208159",
    "end": "1210960"
  },
  {
    "text": "like",
    "start": "1210960",
    "end": "1212000"
  },
  {
    "text": "some bad thing might slip through",
    "start": "1212000",
    "end": "1214640"
  },
  {
    "text": "in case this happens we have automated",
    "start": "1214640",
    "end": "1216960"
  },
  {
    "text": "checks in our ci cd pipeline that will",
    "start": "1216960",
    "end": "1219360"
  },
  {
    "text": "prevent uploading the bad policy bundle",
    "start": "1219360",
    "end": "1222240"
  },
  {
    "text": "into the s3 bucket",
    "start": "1222240",
    "end": "1225360"
  },
  {
    "text": "the next",
    "start": "1226080",
    "end": "1227919"
  },
  {
    "text": "case that even with the automated tests",
    "start": "1227919",
    "end": "1230880"
  },
  {
    "text": "it is still possible that a bad pulse",
    "start": "1230880",
    "end": "1232880"
  },
  {
    "text": "might still true",
    "start": "1232880",
    "end": "1234640"
  },
  {
    "text": "this or any other kind of issue with the",
    "start": "1234640",
    "end": "1237600"
  },
  {
    "text": "open policy agent service could cause it",
    "start": "1237600",
    "end": "1240240"
  },
  {
    "text": "not to respond and",
    "start": "1240240",
    "end": "1242080"
  },
  {
    "text": "block people's authorized into the",
    "start": "1242080",
    "end": "1243919"
  },
  {
    "text": "kubernetes clusters",
    "start": "1243919",
    "end": "1246000"
  },
  {
    "text": "to mitigate that risk we distribute um",
    "start": "1246000",
    "end": "1249440"
  },
  {
    "text": "administration keys to kubernetes hots",
    "start": "1249440",
    "end": "1251919"
  },
  {
    "text": "and check cubes created cube ctl admin",
    "start": "1251919",
    "end": "1255200"
  },
  {
    "text": "reports that only the system",
    "start": "1255200",
    "end": "1257039"
  },
  {
    "text": "administrators can use",
    "start": "1257039",
    "end": "1259679"
  },
  {
    "text": "in the case of emergency a handful of",
    "start": "1259679",
    "end": "1262080"
  },
  {
    "text": "admins will still be able to access the",
    "start": "1262080",
    "end": "1264080"
  },
  {
    "text": "kubernetes clusters using these admin",
    "start": "1264080",
    "end": "1266240"
  },
  {
    "text": "keys",
    "start": "1266240",
    "end": "1268559"
  },
  {
    "text": "in our architecture we rely on many",
    "start": "1269840",
    "end": "1271919"
  },
  {
    "text": "different systems and we implemented our",
    "start": "1271919",
    "end": "1274080"
  },
  {
    "text": "architecture in a fault tolerant way",
    "start": "1274080",
    "end": "1277600"
  },
  {
    "text": "for example if for any reason github or",
    "start": "1277600",
    "end": "1280799"
  },
  {
    "text": "active directory does not respond we",
    "start": "1280799",
    "end": "1283200"
  },
  {
    "text": "have the last frozen state of the world",
    "start": "1283200",
    "end": "1285200"
  },
  {
    "text": "in the s3 bucket",
    "start": "1285200",
    "end": "1287120"
  },
  {
    "text": "and system will continue to work and if",
    "start": "1287120",
    "end": "1290559"
  },
  {
    "text": "any reason s3 stops responding we still",
    "start": "1290559",
    "end": "1293600"
  },
  {
    "text": "have the last frozen state of the world",
    "start": "1293600",
    "end": "1295360"
  },
  {
    "text": "cache in the oppa at the kubernetes",
    "start": "1295360",
    "end": "1297679"
  },
  {
    "text": "clusters and users still continue to",
    "start": "1297679",
    "end": "1300159"
  },
  {
    "text": "work",
    "start": "1300159",
    "end": "1301120"
  },
  {
    "text": "continue to access kubernetes clusters",
    "start": "1301120",
    "end": "1305840"
  },
  {
    "text": "so to conclude this talk first i would",
    "start": "1307200",
    "end": "1309520"
  },
  {
    "text": "like to talk about our shortcomings of",
    "start": "1309520",
    "end": "1311600"
  },
  {
    "text": "the system after all nobody is perfect",
    "start": "1311600",
    "end": "1313919"
  },
  {
    "text": "right",
    "start": "1313919",
    "end": "1316158"
  },
  {
    "start": "1316000",
    "end": "1316000"
  },
  {
    "text": "first shortcoming is that unfortunately",
    "start": "1317120",
    "end": "1319840"
  },
  {
    "text": "not every resource has meaningful",
    "start": "1319840",
    "end": "1321840"
  },
  {
    "text": "metadata in our infrastructure",
    "start": "1321840",
    "end": "1324799"
  },
  {
    "text": "so for that reason we cannot make a",
    "start": "1324799",
    "end": "1326960"
  },
  {
    "text": "team-based access decision on every",
    "start": "1326960",
    "end": "1328880"
  },
  {
    "text": "resources",
    "start": "1328880",
    "end": "1330480"
  },
  {
    "text": "although these cases are rare",
    "start": "1330480",
    "end": "1332799"
  },
  {
    "text": "uh",
    "start": "1332799",
    "end": "1333520"
  },
  {
    "text": "and",
    "start": "1333520",
    "end": "1334320"
  },
  {
    "text": "but still in the future we want to give",
    "start": "1334320",
    "end": "1336240"
  },
  {
    "text": "ownership-based access to all resources",
    "start": "1336240",
    "end": "1338480"
  },
  {
    "text": "to be uh like to",
    "start": "1338480",
    "end": "1341280"
  },
  {
    "text": "to go all the way with the least",
    "start": "1341280",
    "end": "1342640"
  },
  {
    "text": "privilege",
    "start": "1342640",
    "end": "1344320"
  },
  {
    "text": "to enforce all resources to have",
    "start": "1344320",
    "end": "1346640"
  },
  {
    "text": "meaningful metadata we are planning to",
    "start": "1346640",
    "end": "1348880"
  },
  {
    "text": "use the admission controller",
    "start": "1348880",
    "end": "1351840"
  },
  {
    "text": "another shortcoming is that the",
    "start": "1351840",
    "end": "1353480"
  },
  {
    "text": "inconsistency in the authorized actors",
    "start": "1353480",
    "end": "1357200"
  },
  {
    "text": "we use oppa for",
    "start": "1357200",
    "end": "1359120"
  },
  {
    "text": "human resources which are the majority",
    "start": "1359120",
    "end": "1361360"
  },
  {
    "text": "of our users but we use rbac for the",
    "start": "1361360",
    "end": "1364240"
  },
  {
    "text": "service users",
    "start": "1364240",
    "end": "1365760"
  },
  {
    "text": "so in our roadmap we are planning to",
    "start": "1365760",
    "end": "1368240"
  },
  {
    "text": "migrate service users to open base",
    "start": "1368240",
    "end": "1370480"
  },
  {
    "text": "authorization",
    "start": "1370480",
    "end": "1373200"
  },
  {
    "text": "the next one is that the octa",
    "start": "1373360",
    "end": "1375120"
  },
  {
    "text": "authentication has one hour ttl",
    "start": "1375120",
    "end": "1378000"
  },
  {
    "text": "and to be honest we do not consider this",
    "start": "1378000",
    "end": "1380320"
  },
  {
    "text": "is a shortcoming and in fact from a",
    "start": "1380320",
    "end": "1382640"
  },
  {
    "text": "security engineering perspective this is",
    "start": "1382640",
    "end": "1384799"
  },
  {
    "text": "actually good for our security posture",
    "start": "1384799",
    "end": "1387440"
  },
  {
    "text": "but we receive some complaints from the",
    "start": "1387440",
    "end": "1389200"
  },
  {
    "text": "users that they have to enter their",
    "start": "1389200",
    "end": "1390720"
  },
  {
    "text": "password every hour",
    "start": "1390720",
    "end": "1393440"
  },
  {
    "text": "the next two shortcomings that i like to",
    "start": "1393440",
    "end": "1395919"
  },
  {
    "text": "talk about here is that related to",
    "start": "1395919",
    "end": "1398159"
  },
  {
    "text": "keeping the system leaves privilege",
    "start": "1398159",
    "end": "1399760"
  },
  {
    "text": "compliant",
    "start": "1399760",
    "end": "1401679"
  },
  {
    "text": "so after we implemented the new",
    "start": "1401679",
    "end": "1403600"
  },
  {
    "text": "authorization architecture we spent a",
    "start": "1403600",
    "end": "1405520"
  },
  {
    "text": "lot of time to come up with least",
    "start": "1405520",
    "end": "1407120"
  },
  {
    "text": "privileged complaint capabilities and we",
    "start": "1407120",
    "end": "1409520"
  },
  {
    "text": "believe we did a good chapter",
    "start": "1409520",
    "end": "1411520"
  },
  {
    "text": "but unfortunately we do not have a",
    "start": "1411520",
    "end": "1414000"
  },
  {
    "text": "system that would constantly monitor the",
    "start": "1414000",
    "end": "1416080"
  },
  {
    "text": "unused permissions and drop them from",
    "start": "1416080",
    "end": "1418320"
  },
  {
    "text": "the users",
    "start": "1418320",
    "end": "1420000"
  },
  {
    "text": "additionally yap is an extremely dynamic",
    "start": "1420000",
    "end": "1422080"
  },
  {
    "text": "environment and people always get new",
    "start": "1422080",
    "end": "1424880"
  },
  {
    "text": "they need access to",
    "start": "1424880",
    "end": "1426720"
  },
  {
    "text": "new clusters all the time",
    "start": "1426720",
    "end": "1428799"
  },
  {
    "text": "and we do not have time limited access",
    "start": "1428799",
    "end": "1430880"
  },
  {
    "text": "controls once the users get the",
    "start": "1430880",
    "end": "1432880"
  },
  {
    "text": "permission they keep it anyways",
    "start": "1432880",
    "end": "1435600"
  },
  {
    "text": "and addressing these issues are already",
    "start": "1435600",
    "end": "1438159"
  },
  {
    "text": "in our roadmap",
    "start": "1438159",
    "end": "1440960"
  },
  {
    "text": "so",
    "start": "1441520",
    "end": "1442240"
  },
  {
    "text": "to conclude this talk",
    "start": "1442240",
    "end": "1444799"
  },
  {
    "start": "1443000",
    "end": "1443000"
  },
  {
    "text": "with some of our learnings",
    "start": "1444799",
    "end": "1447120"
  },
  {
    "text": "i would like to first say that if you",
    "start": "1447120",
    "end": "1448799"
  },
  {
    "text": "are making a fundamental shift with how",
    "start": "1448799",
    "end": "1450960"
  },
  {
    "text": "you interact with a platform such as",
    "start": "1450960",
    "end": "1453440"
  },
  {
    "text": "exposing more levels to people or",
    "start": "1453440",
    "end": "1455520"
  },
  {
    "text": "expanding the surface area do not just",
    "start": "1455520",
    "end": "1457919"
  },
  {
    "text": "bluntly carry over the security model",
    "start": "1457919",
    "end": "1460320"
  },
  {
    "text": "it's important to re-evaluate the",
    "start": "1460320",
    "end": "1461760"
  },
  {
    "text": "security model at the major system",
    "start": "1461760",
    "end": "1463600"
  },
  {
    "text": "changes like this",
    "start": "1463600",
    "end": "1465919"
  },
  {
    "text": "another thing that we learned was having",
    "start": "1465919",
    "end": "1468240"
  },
  {
    "text": "a well-told through system design can",
    "start": "1468240",
    "end": "1470559"
  },
  {
    "text": "make smooth reviewing process for",
    "start": "1470559",
    "end": "1472640"
  },
  {
    "text": "security teams to get shippers from the",
    "start": "1472640",
    "end": "1474480"
  },
  {
    "text": "sre teams",
    "start": "1474480",
    "end": "1476080"
  },
  {
    "text": "in fact",
    "start": "1476080",
    "end": "1477279"
  },
  {
    "text": "during our project we had a very smooth",
    "start": "1477279",
    "end": "1479039"
  },
  {
    "text": "reviewing process to implement such a",
    "start": "1479039",
    "end": "1480799"
  },
  {
    "text": "large project",
    "start": "1480799",
    "end": "1482000"
  },
  {
    "text": "and since its inception the server the",
    "start": "1482000",
    "end": "1484799"
  },
  {
    "text": "system never malfunctioned to prevent",
    "start": "1484799",
    "end": "1486720"
  },
  {
    "text": "people to access",
    "start": "1486720",
    "end": "1489360"
  },
  {
    "text": "next is that it is totally okay the",
    "start": "1489360",
    "end": "1491600"
  },
  {
    "text": "first view the tools tools that can",
    "start": "1491600",
    "end": "1493760"
  },
  {
    "text": "support the least privilege access",
    "start": "1493760",
    "end": "1495760"
  },
  {
    "text": "without actually doing the least",
    "start": "1495760",
    "end": "1497200"
  },
  {
    "text": "privilege rules because doing both can",
    "start": "1497200",
    "end": "1499279"
  },
  {
    "text": "be really",
    "start": "1499279",
    "end": "1500640"
  },
  {
    "text": "challenging",
    "start": "1500640",
    "end": "1502240"
  },
  {
    "text": "and after some time you can actually do",
    "start": "1502240",
    "end": "1504240"
  },
  {
    "text": "the least privileged setup as a",
    "start": "1504240",
    "end": "1505520"
  },
  {
    "text": "follow-up",
    "start": "1505520",
    "end": "1507360"
  },
  {
    "text": "at the end of this project",
    "start": "1507360",
    "end": "1509120"
  },
  {
    "text": "we obtain the ability to give least",
    "start": "1509120",
    "end": "1511279"
  },
  {
    "text": "privilege access to kubernetes clusters",
    "start": "1511279",
    "end": "1513279"
  },
  {
    "text": "based on the many parameters need and",
    "start": "1513279",
    "end": "1515520"
  },
  {
    "text": "ownership",
    "start": "1515520",
    "end": "1516960"
  },
  {
    "text": "and as a result we now have a stronger",
    "start": "1516960",
    "end": "1519600"
  },
  {
    "text": "security posture by enforcing lease",
    "start": "1519600",
    "end": "1521919"
  },
  {
    "text": "privilege access for hundreds of teams",
    "start": "1521919",
    "end": "1523919"
  },
  {
    "text": "to thousands of different kubernetes",
    "start": "1523919",
    "end": "1525840"
  },
  {
    "text": "resources",
    "start": "1525840",
    "end": "1528000"
  },
  {
    "text": "and this concludes our talk and i would",
    "start": "1528000",
    "end": "1530320"
  },
  {
    "text": "like to thank all of you for joining us",
    "start": "1530320",
    "end": "1532799"
  },
  {
    "text": "today and we'll be happy to answer any",
    "start": "1532799",
    "end": "1534960"
  },
  {
    "text": "questions thank you",
    "start": "1534960",
    "end": "1538799"
  }
]