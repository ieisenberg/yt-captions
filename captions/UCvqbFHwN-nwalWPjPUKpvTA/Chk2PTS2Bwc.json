[
  {
    "text": "all right good morning everyone let's",
    "start": "719",
    "end": "3540"
  },
  {
    "text": "get started",
    "start": "3540",
    "end": "5400"
  },
  {
    "text": "um welcome on this session about",
    "start": "5400",
    "end": "7080"
  },
  {
    "text": "psyllium classic mesh and also a bit",
    "start": "7080",
    "end": "9960"
  },
  {
    "text": "service mesh and how you could use them",
    "start": "9960",
    "end": "12240"
  },
  {
    "text": "across your kubernetes clusters and on",
    "start": "12240",
    "end": "14400"
  },
  {
    "text": "the edge",
    "start": "14400",
    "end": "16320"
  },
  {
    "text": "um how many of you know about ebpf or",
    "start": "16320",
    "end": "19440"
  },
  {
    "text": "psyllium",
    "start": "19440",
    "end": "21240"
  },
  {
    "text": "good cool that's great for those who",
    "start": "21240",
    "end": "24359"
  },
  {
    "text": "don't I will introduce the technology",
    "start": "24359",
    "end": "27060"
  },
  {
    "text": "before we get started with psyllium plus",
    "start": "27060",
    "end": "29760"
  },
  {
    "text": "the mesh my name is Raymond Dion I'm a",
    "start": "29760",
    "end": "32398"
  },
  {
    "text": "Solutions architect working at I",
    "start": "32399",
    "end": "33899"
  },
  {
    "text": "surveillance and I surveillance is the",
    "start": "33899",
    "end": "36540"
  },
  {
    "text": "company behind psyllium and also in the",
    "start": "36540",
    "end": "39360"
  },
  {
    "text": "foundation contributing to ebpf so",
    "start": "39360",
    "end": "42000"
  },
  {
    "text": "isofilence founded psyllium and open",
    "start": "42000",
    "end": "44520"
  },
  {
    "text": "source psyllium donated it to the",
    "start": "44520",
    "end": "46680"
  },
  {
    "text": "community",
    "start": "46680",
    "end": "48059"
  },
  {
    "text": "um where the incubating project so today",
    "start": "48059",
    "end": "52260"
  },
  {
    "text": "we're focused on psyllium cluster mesh",
    "start": "52260",
    "end": "56039"
  },
  {
    "text": "but for before we get started",
    "start": "56039",
    "end": "58680"
  },
  {
    "text": "um to explain about ebpf what ebpf is we",
    "start": "58680",
    "end": "62640"
  },
  {
    "text": "like to say what JavaScript is to the",
    "start": "62640",
    "end": "65338"
  },
  {
    "text": "browser ebpf is to the kernel it makes",
    "start": "65339",
    "end": "68640"
  },
  {
    "text": "the kernel programmable in a very",
    "start": "68640",
    "end": "70320"
  },
  {
    "text": "efficient way without changing the",
    "start": "70320",
    "end": "73140"
  },
  {
    "text": "actual kernel",
    "start": "73140",
    "end": "75119"
  },
  {
    "text": "what it allows us to do is to based on",
    "start": "75119",
    "end": "78479"
  },
  {
    "text": "kernel events attached ebpf programs to",
    "start": "78479",
    "end": "81960"
  },
  {
    "text": "it today we focus on networking but it",
    "start": "81960",
    "end": "85080"
  },
  {
    "text": "can also happen on things like files",
    "start": "85080",
    "end": "87659"
  },
  {
    "text": "processes and such",
    "start": "87659",
    "end": "89340"
  },
  {
    "text": "so current event can be something like a",
    "start": "89340",
    "end": "92640"
  },
  {
    "text": "process opening a socket or a network",
    "start": "92640",
    "end": "94740"
  },
  {
    "text": "interfacing sending a packet on The Wire",
    "start": "94740",
    "end": "97700"
  },
  {
    "text": "all those events trick could trigger an",
    "start": "97700",
    "end": "101040"
  },
  {
    "text": "ebpf program and psyllium is built on",
    "start": "101040",
    "end": "103860"
  },
  {
    "text": "that technology",
    "start": "103860",
    "end": "105360"
  },
  {
    "text": "the good thing is is that you don't have",
    "start": "105360",
    "end": "107340"
  },
  {
    "text": "to know everything about ebpf to work",
    "start": "107340",
    "end": "109799"
  },
  {
    "text": "with psyllium psyllium abstracts that",
    "start": "109799",
    "end": "112380"
  },
  {
    "text": "technology for you and depending on the",
    "start": "112380",
    "end": "114659"
  },
  {
    "text": "flags you set in your Helm values file",
    "start": "114659",
    "end": "116460"
  },
  {
    "text": "for example it will trigger and mount",
    "start": "116460",
    "end": "118560"
  },
  {
    "text": "the right eppf programs to work for you",
    "start": "118560",
    "end": "122280"
  },
  {
    "text": "so psyllium is built on ebpf and it",
    "start": "122280",
    "end": "124320"
  },
  {
    "text": "provides Advanced networking",
    "start": "124320",
    "end": "126119"
  },
  {
    "text": "capabilities for the cloud native H",
    "start": "126119",
    "end": "127740"
  },
  {
    "text": "especially for kubernetes clusters but",
    "start": "127740",
    "end": "129899"
  },
  {
    "text": "also Beyond today I will focus on the",
    "start": "129899",
    "end": "132959"
  },
  {
    "text": "networking piece which is mainly about",
    "start": "132959",
    "end": "135540"
  },
  {
    "text": "load balancing across multiple clusters",
    "start": "135540",
    "end": "138660"
  },
  {
    "text": "and a bit in combination of surface mesh",
    "start": "138660",
    "end": "140879"
  },
  {
    "text": "provided with psyllium as well",
    "start": "140879",
    "end": "144060"
  },
  {
    "text": "on top of silium we also have",
    "start": "144060",
    "end": "145440"
  },
  {
    "text": "observability platform which is also",
    "start": "145440",
    "end": "147720"
  },
  {
    "text": "useful for tracking workloads across",
    "start": "147720",
    "end": "150180"
  },
  {
    "text": "clusters and being able to observe flows",
    "start": "150180",
    "end": "152760"
  },
  {
    "text": "between surfaces within your cluster and",
    "start": "152760",
    "end": "155160"
  },
  {
    "text": "across clusters and being able to make",
    "start": "155160",
    "end": "156780"
  },
  {
    "text": "informed decisions about network",
    "start": "156780",
    "end": "158760"
  },
  {
    "text": "security for example for these workloads",
    "start": "158760",
    "end": "163220"
  },
  {
    "text": "so overview of cluster mesh first of all",
    "start": "163319",
    "end": "165780"
  },
  {
    "text": "cluster mesh provides for multiple",
    "start": "165780",
    "end": "168660"
  },
  {
    "text": "clusters the ability to connect clusters",
    "start": "168660",
    "end": "170760"
  },
  {
    "text": "together to provide a unified data plane",
    "start": "170760",
    "end": "173760"
  },
  {
    "text": "to be able to route and connect and load",
    "start": "173760",
    "end": "176400"
  },
  {
    "text": "balance workloads across clusters",
    "start": "176400",
    "end": "178620"
  },
  {
    "text": "on top of that we provide observability",
    "start": "178620",
    "end": "180720"
  },
  {
    "text": "for those clusters using our identity",
    "start": "180720",
    "end": "183360"
  },
  {
    "text": "aware solution instead of tracking IPS",
    "start": "183360",
    "end": "185879"
  },
  {
    "text": "we are able to create identities and",
    "start": "185879",
    "end": "188459"
  },
  {
    "text": "attach identities to the workloads and",
    "start": "188459",
    "end": "190800"
  },
  {
    "text": "being able to follow and observe",
    "start": "190800",
    "end": "192360"
  },
  {
    "text": "identities across clusters",
    "start": "192360",
    "end": "194480"
  },
  {
    "text": "provide that we have released surface",
    "start": "194480",
    "end": "196920"
  },
  {
    "text": "mesh you can also use service mesh",
    "start": "196920",
    "end": "198959"
  },
  {
    "text": "across clusters",
    "start": "198959",
    "end": "200340"
  },
  {
    "text": "and also encryption and pod IP routing",
    "start": "200340",
    "end": "203760"
  },
  {
    "text": "are are available",
    "start": "203760",
    "end": "206640"
  },
  {
    "text": "to get started you have to have at the",
    "start": "206640",
    "end": "209280"
  },
  {
    "text": "moment at least non-overlapping IP",
    "start": "209280",
    "end": "211200"
  },
  {
    "text": "ranges in your clusters you need to be",
    "start": "211200",
    "end": "213420"
  },
  {
    "text": "able to connect the Clusters together",
    "start": "213420",
    "end": "214800"
  },
  {
    "text": "using for example a VPN or or some kind",
    "start": "214800",
    "end": "218340"
  },
  {
    "text": "of physical wire depending on your",
    "start": "218340",
    "end": "220440"
  },
  {
    "text": "topology",
    "start": "220440",
    "end": "221459"
  },
  {
    "text": "and it doesn't matter if you run on",
    "start": "221459",
    "end": "223080"
  },
  {
    "text": "clouds or hybrids or on-prem it can run",
    "start": "223080",
    "end": "227159"
  },
  {
    "text": "an open shift but also on gke and if you",
    "start": "227159",
    "end": "230220"
  },
  {
    "text": "want you can also run it on Bring Your",
    "start": "230220",
    "end": "232260"
  },
  {
    "text": "Own let's say DB and release as long as",
    "start": "232260",
    "end": "234599"
  },
  {
    "text": "you have a recent fairly recent kernel",
    "start": "234599",
    "end": "236580"
  },
  {
    "text": "for the eppf programs to work",
    "start": "236580",
    "end": "240360"
  },
  {
    "text": "a little bit more about the architecture",
    "start": "240360",
    "end": "242159"
  },
  {
    "text": "it works in such a way that each cluster",
    "start": "242159",
    "end": "245000"
  },
  {
    "text": "has a cluster-based API server which",
    "start": "245000",
    "end": "247739"
  },
  {
    "text": "keeps track of its identities and",
    "start": "247739",
    "end": "250140"
  },
  {
    "text": "exposes those identities to remote",
    "start": "250140",
    "end": "251879"
  },
  {
    "text": "clusters and each cluster has only read",
    "start": "251879",
    "end": "254760"
  },
  {
    "text": "only access to another cluster and that",
    "start": "254760",
    "end": "257639"
  },
  {
    "text": "means that agents in each cluster are",
    "start": "257639",
    "end": "260760"
  },
  {
    "text": "able to read and know about identities",
    "start": "260760",
    "end": "263639"
  },
  {
    "text": "in other clusters and that provides all",
    "start": "263639",
    "end": "266520"
  },
  {
    "text": "the security and connectivity and",
    "start": "266520",
    "end": "268199"
  },
  {
    "text": "observability across clusters",
    "start": "268199",
    "end": "270900"
  },
  {
    "text": "so the best practice is to expose an API",
    "start": "270900",
    "end": "274080"
  },
  {
    "text": "server through a load balancer because",
    "start": "274080",
    "end": "275580"
  },
  {
    "text": "obviously that's high available but if",
    "start": "275580",
    "end": "277740"
  },
  {
    "text": "not available you can also expose it",
    "start": "277740",
    "end": "279479"
  },
  {
    "text": "through a noteboard",
    "start": "279479",
    "end": "281759"
  },
  {
    "text": "so let's go through some of the use",
    "start": "281759",
    "end": "284100"
  },
  {
    "text": "cases the main use case is obviously",
    "start": "284100",
    "end": "286259"
  },
  {
    "text": "High availability where you want to",
    "start": "286259",
    "end": "289199"
  },
  {
    "text": "expose or low balance traffic to a given",
    "start": "289199",
    "end": "292979"
  },
  {
    "text": "service across clusters",
    "start": "292979",
    "end": "295979"
  },
  {
    "text": "so the cluster mesh technology works",
    "start": "295979",
    "end": "298020"
  },
  {
    "text": "with the concept of a global Service",
    "start": "298020",
    "end": "300180"
  },
  {
    "text": "which means is that in each cluster you",
    "start": "300180",
    "end": "303720"
  },
  {
    "text": "create a namespace with the same name",
    "start": "303720",
    "end": "306199"
  },
  {
    "text": "you just create a service in each",
    "start": "306199",
    "end": "309000"
  },
  {
    "text": "cluster a simple cluster IP service and",
    "start": "309000",
    "end": "312000"
  },
  {
    "text": "you annotate it with a special",
    "start": "312000",
    "end": "313500"
  },
  {
    "text": "annotation which I will show later and",
    "start": "313500",
    "end": "315780"
  },
  {
    "text": "that will trigger psyllium to learn",
    "start": "315780",
    "end": "317940"
  },
  {
    "text": "about or advertise it and phones across",
    "start": "317940",
    "end": "320820"
  },
  {
    "text": "clusters and that will depending on the",
    "start": "320820",
    "end": "323880"
  },
  {
    "text": "configuration you will set will load",
    "start": "323880",
    "end": "325620"
  },
  {
    "text": "balance by default traffic across",
    "start": "325620",
    "end": "327539"
  },
  {
    "text": "clusters and that means that if you have",
    "start": "327539",
    "end": "329940"
  },
  {
    "text": "endpoints failing in a given cluster",
    "start": "329940",
    "end": "332520"
  },
  {
    "text": "traffic and low balance across cluster",
    "start": "332520",
    "end": "335160"
  },
  {
    "text": "to the remaining endpoints in your",
    "start": "335160",
    "end": "337740"
  },
  {
    "text": "clusters",
    "start": "337740",
    "end": "340020"
  },
  {
    "text": "another very useful use case for cluster",
    "start": "340020",
    "end": "342900"
  },
  {
    "text": "mesh is that of shared surfaces",
    "start": "342900",
    "end": "346139"
  },
  {
    "text": "we see more and more and also on edge",
    "start": "346139",
    "end": "348479"
  },
  {
    "text": "clusters smaller clusters or",
    "start": "348479",
    "end": "350940"
  },
  {
    "text": "multi-tenant clusters for which you",
    "start": "350940",
    "end": "354240"
  },
  {
    "text": "don't want to necessarily set up shared",
    "start": "354240",
    "end": "356940"
  },
  {
    "text": "services in each individual cluster",
    "start": "356940",
    "end": "359639"
  },
  {
    "text": "using cluster mesh you can create a",
    "start": "359639",
    "end": "361979"
  },
  {
    "text": "centralized surfaces cluster for things",
    "start": "361979",
    "end": "364740"
  },
  {
    "text": "like monitoring things like Secrets",
    "start": "364740",
    "end": "367139"
  },
  {
    "text": "things like DNS and then expose that",
    "start": "367139",
    "end": "370800"
  },
  {
    "text": "surface through a global Service and",
    "start": "370800",
    "end": "373320"
  },
  {
    "text": "connect that surface to remote clusters",
    "start": "373320",
    "end": "375300"
  },
  {
    "text": "for them to consume or to connect to",
    "start": "375300",
    "end": "377400"
  },
  {
    "text": "those services in your Central Services",
    "start": "377400",
    "end": "379740"
  },
  {
    "text": "cluster and this obviously allows you to",
    "start": "379740",
    "end": "382740"
  },
  {
    "text": "be more agile with your tenant clusters",
    "start": "382740",
    "end": "385979"
  },
  {
    "text": "or Edge clusters in such a way",
    "start": "385979",
    "end": "389419"
  },
  {
    "text": "another use case is splitting services",
    "start": "390000",
    "end": "392400"
  },
  {
    "text": "and this is about stateful versus State",
    "start": "392400",
    "end": "394800"
  },
  {
    "text": "less so similar to shared services in",
    "start": "394800",
    "end": "398639"
  },
  {
    "text": "this case you would have a centralized",
    "start": "398639",
    "end": "400560"
  },
  {
    "text": "cluster which you want to store data you",
    "start": "400560",
    "end": "403139"
  },
  {
    "text": "need to know the state but you want to",
    "start": "403139",
    "end": "405180"
  },
  {
    "text": "keep your Edge clusters or your remote",
    "start": "405180",
    "end": "406740"
  },
  {
    "text": "clusters Nimble agile and small as you",
    "start": "406740",
    "end": "409500"
  },
  {
    "text": "can because you want to be able to life",
    "start": "409500",
    "end": "411720"
  },
  {
    "text": "cycle them more easily as such",
    "start": "411720",
    "end": "415020"
  },
  {
    "text": "again the same principle exposing a",
    "start": "415020",
    "end": "417539"
  },
  {
    "text": "surface in this case a data store",
    "start": "417539",
    "end": "419160"
  },
  {
    "text": "service for example as a global Service",
    "start": "419160",
    "end": "421520"
  },
  {
    "text": "and exposing that service across",
    "start": "421520",
    "end": "424020"
  },
  {
    "text": "clusters for them to be able to connect",
    "start": "424020",
    "end": "426060"
  },
  {
    "text": "and be routed to that cluster",
    "start": "426060",
    "end": "429740"
  },
  {
    "text": "then a bit of a little bit more about",
    "start": "429740",
    "end": "432000"
  },
  {
    "text": "the actual core of this session that's",
    "start": "432000",
    "end": "433800"
  },
  {
    "text": "the local and remote service affinity",
    "start": "433800",
    "end": "435900"
  },
  {
    "text": "and we like to call it topology error",
    "start": "435900",
    "end": "438180"
  },
  {
    "text": "routing",
    "start": "438180",
    "end": "439319"
  },
  {
    "text": "what this helps a lot with with the",
    "start": "439319",
    "end": "442020"
  },
  {
    "text": "previous use case is that you can",
    "start": "442020",
    "end": "443520"
  },
  {
    "text": "engineer",
    "start": "443520",
    "end": "445020"
  },
  {
    "text": "the preferred way of routing to your",
    "start": "445020",
    "end": "447660"
  },
  {
    "text": "endpoints across a cluster mesh topology",
    "start": "447660",
    "end": "450539"
  },
  {
    "text": "so in this simple example we again have",
    "start": "450539",
    "end": "453120"
  },
  {
    "text": "a backend service and in this case we",
    "start": "453120",
    "end": "456120"
  },
  {
    "text": "want to prefer obviously local endpoints",
    "start": "456120",
    "end": "458819"
  },
  {
    "text": "above remote endpoints what this allows",
    "start": "458819",
    "end": "461940"
  },
  {
    "text": "you to do is to obviously create high",
    "start": "461940",
    "end": "464160"
  },
  {
    "text": "availability across clusters but only",
    "start": "464160",
    "end": "465960"
  },
  {
    "text": "when you need it only when all end",
    "start": "465960",
    "end": "468300"
  },
  {
    "text": "points in a given cluster are failing",
    "start": "468300",
    "end": "472259"
  },
  {
    "text": "and this also obviously is very useful",
    "start": "472259",
    "end": "474300"
  },
  {
    "text": "in multi-cluster uh topologies you want",
    "start": "474300",
    "end": "477419"
  },
  {
    "text": "to avoid cross-cluster traffic because",
    "start": "477419",
    "end": "479280"
  },
  {
    "text": "that induces latency and such or cost",
    "start": "479280",
    "end": "481520"
  },
  {
    "text": "using a local service Affinity",
    "start": "481520",
    "end": "484819"
  },
  {
    "text": "effect makes step more effective and",
    "start": "484819",
    "end": "487319"
  },
  {
    "text": "reduces latency",
    "start": "487319",
    "end": "490099"
  },
  {
    "text": "the other way around is the remote",
    "start": "490620",
    "end": "492240"
  },
  {
    "text": "service Affinity the most useful use",
    "start": "492240",
    "end": "495539"
  },
  {
    "text": "case here is to temporarily annotate a",
    "start": "495539",
    "end": "498419"
  },
  {
    "text": "given service to prefer remote endpoints",
    "start": "498419",
    "end": "501360"
  },
  {
    "text": "instead what this will trigger is that",
    "start": "501360",
    "end": "503520"
  },
  {
    "text": "all traffic by default will be forwarded",
    "start": "503520",
    "end": "505259"
  },
  {
    "text": "to the remote endpoints and this is very",
    "start": "505259",
    "end": "507780"
  },
  {
    "text": "useful in Rolling updates or upgrades or",
    "start": "507780",
    "end": "510060"
  },
  {
    "text": "restarts of workloads in a given cluster",
    "start": "510060",
    "end": "514339"
  },
  {
    "text": "and this is how it looks like so this is",
    "start": "515700",
    "end": "517620"
  },
  {
    "text": "a simple example of a surface of type",
    "start": "517620",
    "end": "520020"
  },
  {
    "text": "cluster IP and you can see that it's a",
    "start": "520020",
    "end": "523080"
  },
  {
    "text": "back-end surface and you can see two",
    "start": "523080",
    "end": "524820"
  },
  {
    "text": "annotations the first annotation uh that",
    "start": "524820",
    "end": "528540"
  },
  {
    "text": "one of global servers equals true that",
    "start": "528540",
    "end": "530760"
  },
  {
    "text": "triggers that given surface in that",
    "start": "530760",
    "end": "533279"
  },
  {
    "text": "cluster with its endpoints to be",
    "start": "533279",
    "end": "535320"
  },
  {
    "text": "advertised across clusters so you have",
    "start": "535320",
    "end": "537360"
  },
  {
    "text": "to do this for each cluster you want to",
    "start": "537360",
    "end": "538860"
  },
  {
    "text": "expose endpoints for",
    "start": "538860",
    "end": "540839"
  },
  {
    "text": "and the second annotation for service",
    "start": "540839",
    "end": "542700"
  },
  {
    "text": "Affinity local triggers the local",
    "start": "542700",
    "end": "545279"
  },
  {
    "text": "preferred endpoints service affinity",
    "start": "545279",
    "end": "549380"
  },
  {
    "text": "the other way around is the remote",
    "start": "550140",
    "end": "551760"
  },
  {
    "text": "service Affinity looks very simpler",
    "start": "551760",
    "end": "553500"
  },
  {
    "text": "simply very similar sorry and in this",
    "start": "553500",
    "end": "556740"
  },
  {
    "text": "case you would annotate it with service",
    "start": "556740",
    "end": "559200"
  },
  {
    "text": "Affinity remote to prefer remote",
    "start": "559200",
    "end": "562140"
  },
  {
    "text": "endpoints instead of local endpoints",
    "start": "562140",
    "end": "565140"
  },
  {
    "text": "so if you don't have a service Affinity",
    "start": "565140",
    "end": "567959"
  },
  {
    "text": "endpoint it will load balance across",
    "start": "567959",
    "end": "569640"
  },
  {
    "text": "close suspect defaults",
    "start": "569640",
    "end": "572700"
  },
  {
    "text": "and now a little bit more about how you",
    "start": "572700",
    "end": "574680"
  },
  {
    "text": "can leverage psyllium cluster mesh in",
    "start": "574680",
    "end": "577800"
  },
  {
    "text": "combination with psyllium surface mesh",
    "start": "577800",
    "end": "579600"
  },
  {
    "text": "to do more advanced things",
    "start": "579600",
    "end": "581339"
  },
  {
    "text": "celium service mesh is being released in",
    "start": "581339",
    "end": "583260"
  },
  {
    "text": "psyllium 1.12 and last spring early",
    "start": "583260",
    "end": "585839"
  },
  {
    "text": "summer",
    "start": "585839",
    "end": "586800"
  },
  {
    "text": "and this allows you to create for",
    "start": "586800",
    "end": "588720"
  },
  {
    "text": "example resources such as Ingress",
    "start": "588720",
    "end": "591000"
  },
  {
    "text": "layer 7 path based routing",
    "start": "591000",
    "end": "592980"
  },
  {
    "text": "percentage-based routing Canary rollouts",
    "start": "592980",
    "end": "596040"
  },
  {
    "text": "things like retries and such so in this",
    "start": "596040",
    "end": "599160"
  },
  {
    "text": "example you can use for example an",
    "start": "599160",
    "end": "601740"
  },
  {
    "text": "Ingress resource to attract traffic into",
    "start": "601740",
    "end": "605279"
  },
  {
    "text": "your cluster to do some kind of layer 7",
    "start": "605279",
    "end": "607500"
  },
  {
    "text": "routing in this case percentage page",
    "start": "607500",
    "end": "610019"
  },
  {
    "text": "routing but you can also",
    "start": "610019",
    "end": "612240"
  },
  {
    "text": "those surfaces which is being forward",
    "start": "612240",
    "end": "614700"
  },
  {
    "text": "traffic being forwarded to can also be",
    "start": "614700",
    "end": "617180"
  },
  {
    "text": "uh Global Services and you can do the",
    "start": "617180",
    "end": "620760"
  },
  {
    "text": "same traffic engineering with those",
    "start": "620760",
    "end": "622200"
  },
  {
    "text": "Services as well",
    "start": "622200",
    "end": "624980"
  },
  {
    "text": "this is another example where",
    "start": "625320",
    "end": "627899"
  },
  {
    "text": "um we have the topology array routing",
    "start": "627899",
    "end": "630000"
  },
  {
    "text": "the service Affinity across clusters",
    "start": "630000",
    "end": "631740"
  },
  {
    "text": "where each front-end server service",
    "start": "631740",
    "end": "634200"
  },
  {
    "text": "prefers obviously local endpoints and",
    "start": "634200",
    "end": "636839"
  },
  {
    "text": "its back-end surface prefers local",
    "start": "636839",
    "end": "639660"
  },
  {
    "text": "endpoints but again in case of failures",
    "start": "639660",
    "end": "643260"
  },
  {
    "text": "um",
    "start": "643260",
    "end": "643980"
  },
  {
    "text": "traffic is being forwarded to the",
    "start": "643980",
    "end": "645779"
  },
  {
    "text": "remaining endpoints in other clusters",
    "start": "645779",
    "end": "649339"
  },
  {
    "text": "another example is that you can even use",
    "start": "650760",
    "end": "653180"
  },
  {
    "text": "cluster mesh in combination with surface",
    "start": "653180",
    "end": "655740"
  },
  {
    "text": "mesh to spin up new clusters and to do",
    "start": "655740",
    "end": "659220"
  },
  {
    "text": "for example Cannery rollouts to that new",
    "start": "659220",
    "end": "661260"
  },
  {
    "text": "cluster there may be reasons why you",
    "start": "661260",
    "end": "663480"
  },
  {
    "text": "want to migrate to a new cluster perhaps",
    "start": "663480",
    "end": "665820"
  },
  {
    "text": "it's a new cloud provider or you want to",
    "start": "665820",
    "end": "667560"
  },
  {
    "text": "move from on-prem onto Cloud your",
    "start": "667560",
    "end": "670680"
  },
  {
    "text": "applications are already are already",
    "start": "670680",
    "end": "672540"
  },
  {
    "text": "running and you might want may want to",
    "start": "672540",
    "end": "675420"
  },
  {
    "text": "migrate them in a in a step-by-step way",
    "start": "675420",
    "end": "678420"
  },
  {
    "text": "slowly introducing more traffic or you",
    "start": "678420",
    "end": "681180"
  },
  {
    "text": "even deploy a new version of your",
    "start": "681180",
    "end": "683100"
  },
  {
    "text": "application on a new cluster and then",
    "start": "683100",
    "end": "685500"
  },
  {
    "text": "slowly introducing traffic into that new",
    "start": "685500",
    "end": "687600"
  },
  {
    "text": "cluster using both psyllium service mesh",
    "start": "687600",
    "end": "690240"
  },
  {
    "text": "and cluster mesh so this this is just",
    "start": "690240",
    "end": "693600"
  },
  {
    "text": "one example it's super flexible in terms",
    "start": "693600",
    "end": "696120"
  },
  {
    "text": "of how you architect it",
    "start": "696120",
    "end": "698160"
  },
  {
    "text": "and also without sidecar psyllium",
    "start": "698160",
    "end": "701160"
  },
  {
    "text": "doesn't",
    "start": "701160",
    "end": "702200"
  },
  {
    "text": "introduce sidecars in the service mesh",
    "start": "702200",
    "end": "704579"
  },
  {
    "text": "solution so that means that on node",
    "start": "704579",
    "end": "706620"
  },
  {
    "text": "level if endpoints are in the cluster",
    "start": "706620",
    "end": "708959"
  },
  {
    "text": "already we reduce latency like three to",
    "start": "708959",
    "end": "712380"
  },
  {
    "text": "four times compared to a sidecar",
    "start": "712380",
    "end": "714180"
  },
  {
    "text": "implementation",
    "start": "714180",
    "end": "716779"
  },
  {
    "text": "this concludes my lightning talk about",
    "start": "717180",
    "end": "720120"
  },
  {
    "text": "Gloucester mesh",
    "start": "720120",
    "end": "722519"
  },
  {
    "text": "first of all if you want to know more",
    "start": "722519",
    "end": "724260"
  },
  {
    "text": "how it actually works if you want to try",
    "start": "724260",
    "end": "726360"
  },
  {
    "text": "it in a lab",
    "start": "726360",
    "end": "727519"
  },
  {
    "text": "isofelion.com forward slash Labs is a",
    "start": "727519",
    "end": "729899"
  },
  {
    "text": "great resource for learning more also",
    "start": "729899",
    "end": "732360"
  },
  {
    "text": "diving a bit on how you can for example",
    "start": "732360",
    "end": "735300"
  },
  {
    "text": "use Network policies across clusters",
    "start": "735300",
    "end": "738000"
  },
  {
    "text": "using celium cluster mesh",
    "start": "738000",
    "end": "739920"
  },
  {
    "text": "on the open source side we have the",
    "start": "739920",
    "end": "742140"
  },
  {
    "text": "sodium.io website with also getting",
    "start": "742140",
    "end": "744240"
  },
  {
    "text": "started Guides of cluster mesh also with",
    "start": "744240",
    "end": "747420"
  },
  {
    "text": "surface mesh",
    "start": "747420",
    "end": "748920"
  },
  {
    "text": "and our slack channel is open where we",
    "start": "748920",
    "end": "751200"
  },
  {
    "text": "are able to support the community people",
    "start": "751200",
    "end": "752940"
  },
  {
    "text": "are happy to answer questions as such",
    "start": "752940",
    "end": "755220"
  },
  {
    "text": "we also have a booth both silly and",
    "start": "755220",
    "end": "758100"
  },
  {
    "text": "booth and isovalent Booth if you want to",
    "start": "758100",
    "end": "760620"
  },
  {
    "text": "visit us please feel free to do so we",
    "start": "760620",
    "end": "762600"
  },
  {
    "text": "also have Liz rice with us who's signing",
    "start": "762600",
    "end": "765240"
  },
  {
    "text": "uh the the ebpf book so you can get a",
    "start": "765240",
    "end": "768180"
  },
  {
    "text": "copy signed copy from us a very good",
    "start": "768180",
    "end": "770760"
  },
  {
    "text": "book to learn more about how eppf works",
    "start": "770760",
    "end": "774180"
  },
  {
    "text": "and with that I'm happy to take any",
    "start": "774180",
    "end": "776100"
  },
  {
    "text": "questions thank you",
    "start": "776100",
    "end": "779420"
  }
]