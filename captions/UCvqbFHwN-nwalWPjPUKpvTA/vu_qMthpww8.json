[
  {
    "text": "good afternoon everybody and welcome",
    "start": "920",
    "end": "6240"
  },
  {
    "text": "thank you preemptively for your attention welcome to untrusted execution",
    "start": "6240",
    "end": "11400"
  },
  {
    "text": "at attacking the cloud native supply chain so hot right now and I hope to give you",
    "start": "11400",
    "end": "18480"
  },
  {
    "text": "an attack driven defensive perspective I'm Andy I'm CEO at control plane uh",
    "start": "18480",
    "end": "26640"
  },
  {
    "text": "very lucky to have a number of my excellent colleagues here today we have a booth please do stop by we've got all",
    "start": "26640",
    "end": "32398"
  },
  {
    "text": "sorts of good stuff including the supply chain security best practices flash",
    "start": "32399",
    "end": "37680"
  },
  {
    "text": "cards including such interesting things as ebpf for observability content",
    "start": "37680",
    "end": "45059"
  },
  {
    "text": "addressability for immutable artifacts everything from Vex through to Frisco",
    "start": "45059",
    "end": "50820"
  },
  {
    "text": "and we'll talk about some of those Concepts I am also the author of hacking kubernetes along with my esteemed friend",
    "start": "50820",
    "end": "57899"
  },
  {
    "text": "Mr Michael hasenblass we'll do a book signing at half past four so that is all",
    "start": "57899",
    "end": "63300"
  },
  {
    "text": "the advertising briefly out of the way I'm lucky to be involved with the cncf's",
    "start": "63300",
    "end": "68939"
  },
  {
    "text": "technical Advisory Group on security where we assure the open source cncf",
    "start": "68939",
    "end": "74880"
  },
  {
    "text": "projects that look to achieve sandbox incubation the goal there is to provide a safe",
    "start": "74880",
    "end": "81119"
  },
  {
    "text": "space to collaborate with maintainers and some of the things that we'll talk about today involving threat modeling",
    "start": "81119",
    "end": "87540"
  },
  {
    "text": "and best practice are how we interface with those projects coming through I'm",
    "start": "87540",
    "end": "93180"
  },
  {
    "text": "also in my spare time CSO at open UK open UK is an open source advocacy group",
    "start": "93180",
    "end": "99900"
  },
  {
    "text": "we are a charity that asks UK governments and the private sector to",
    "start": "99900",
    "end": "106020"
  },
  {
    "text": "remunerate open source maintainers for their time for shipping security fixes and helping to advise the UK government",
    "start": "106020",
    "end": "112920"
  },
  {
    "text": "on policy my background is Development I've I've",
    "start": "112920",
    "end": "118200"
  },
  {
    "text": "also got a deep of course security interest but also these things have to be usable there's no point shipping a",
    "start": "118200",
    "end": "124380"
  },
  {
    "text": "security control that is constrictive that has no quantifiable benefits and",
    "start": "124380",
    "end": "129479"
  },
  {
    "text": "ultimately that has a long-term maintenance burden on the users of the system developer retention is important",
    "start": "129479",
    "end": "135120"
  },
  {
    "text": "and needless security controls are diametrically opposed to that",
    "start": "135120",
    "end": "142560"
  },
  {
    "text": "the book is also available as a PDF for download I lied when I said I was done Shilling for myself that is the end of",
    "start": "142560",
    "end": "149400"
  },
  {
    "text": "it I assure you uh control plane we are security specialists and open source Cloud native",
    "start": "149400",
    "end": "156500"
  },
  {
    "text": "Advocates we have just opened an office in North America we're about to open an",
    "start": "156500",
    "end": "162060"
  },
  {
    "text": "office in Asia Pacific in New Zealand if Cloud native security challenges nice",
    "start": "162060",
    "end": "167400"
  },
  {
    "text": "people and interesting work are your bag please do come have a word with all my colleagues to understand what we do",
    "start": "167400",
    "end": "174900"
  },
  {
    "text": "okay will we talk about the supply chain problem what is it why is it a problem",
    "start": "174900",
    "end": "180900"
  },
  {
    "text": "how is it directly exploitable generally the problem space then we go",
    "start": "180900",
    "end": "186239"
  },
  {
    "text": "into the threat model of the thing how we quantify the controls and then we look at the tooling that we can use to",
    "start": "186239",
    "end": "192599"
  },
  {
    "text": "help secure ourselves this is uh this is how hackers operates",
    "start": "192599",
    "end": "198840"
  },
  {
    "text": "be very afraid okay so what is the supply chain problem a",
    "start": "198840",
    "end": "205560"
  },
  {
    "text": "supply chain is anything we depend upon we know this we have producers and",
    "start": "205560",
    "end": "210599"
  },
  {
    "text": "consumers any point that we publish code on GitHub we become producers we end up",
    "start": "210599",
    "end": "216540"
  },
  {
    "text": "as part of the supply chain problem Supply chains along they are transitive they can be difficult to reason about",
    "start": "216540",
    "end": "223920"
  },
  {
    "text": "and they exist in all assets of life from as we see here",
    "start": "223920",
    "end": "229200"
  },
  {
    "text": "pharmaceutical and Military through to the things that we care about today open source technology so what is",
    "start": "229200",
    "end": "238140"
  },
  {
    "text": "a supply chain attack for shipping open source code here we have first of all our trusted",
    "start": "238140",
    "end": "244140"
  },
  {
    "text": "producers this is anybody who publishes code to GitHub look for a trust perspective of course",
    "start": "244140",
    "end": "250980"
  },
  {
    "text": "we trust root Cas We Trust our operating system Distributors We Trust our Hardware manufacturers we actually trust",
    "start": "250980",
    "end": "257280"
  },
  {
    "text": "the Postal Service that ships laptops to us plenty of interception potential there from a software perspective though",
    "start": "257280",
    "end": "263160"
  },
  {
    "text": "we're just talking about the software dependencies if we can intercept that",
    "start": "263160",
    "end": "268560"
  },
  {
    "text": "code in transit or we can push malicious update or we can compromise the",
    "start": "268560",
    "end": "275040"
  },
  {
    "text": "SSH keys or the gpg keys of somebody who's shipping software then this supply",
    "start": "275040",
    "end": "280680"
  },
  {
    "text": "chain ends up looking like this that is the nefarious dread pirate Captain hash",
    "start": "280680",
    "end": "285900"
  },
  {
    "text": "Jack and his primary goal in life is to run his malicious code his implants in",
    "start": "285900",
    "end": "292740"
  },
  {
    "text": "our production systems what could he possibly ship that would",
    "start": "292740",
    "end": "299220"
  },
  {
    "text": "be a problem classically it has been something like a crypto mining uh crypto Miner",
    "start": "299220",
    "end": "305639"
  },
  {
    "text": "that is slightly less appealing these days a lot of cloud providers have detection for these things and they will",
    "start": "305639",
    "end": "313020"
  },
  {
    "text": "shut down a crypto mining instance so actually a reverse shell just getting command and control within somebody",
    "start": "313020",
    "end": "319320"
  },
  {
    "text": "else's infrastructure is a perfectly reasonable thing to do with the supply chain attack",
    "start": "319320",
    "end": "324600"
  },
  {
    "text": "what is a reverse shell well it's what happened with the interpolation of check for log for shell",
    "start": "324600",
    "end": "331199"
  },
  {
    "text": "it is running malicious code on a victim's device that is then able",
    "start": "331199",
    "end": "337500"
  },
  {
    "text": "to connect back to a public endpoint that we as an attacker control from that perspective we then gain",
    "start": "337500",
    "end": "342900"
  },
  {
    "text": "command and control why shouldn't this happen well we should be dealing with",
    "start": "342900",
    "end": "348660"
  },
  {
    "text": "correct firewalling for egress but of course it is expensive for a security",
    "start": "348660",
    "end": "354660"
  },
  {
    "text": "team to maintain outbound firewalls so as we saw from log for Shell as soon as you are able to execute code out of",
    "start": "354660",
    "end": "361440"
  },
  {
    "text": "context which in that case was an interpolation attack you can do this kind of thing you can",
    "start": "361440",
    "end": "367199"
  },
  {
    "text": "fire a TCP connection to somewhere that the attacker controls and then they have a shell running inside your",
    "start": "367199",
    "end": "373259"
  },
  {
    "text": "infrastructure there are multiple layers of control that can help to detect and prevent this especially in Cloud native",
    "start": "373259",
    "end": "378960"
  },
  {
    "text": "kubernetes flavored systems but this is the fundamental desire for an attacker if they're",
    "start": "378960",
    "end": "385440"
  },
  {
    "text": "looking to persist and then pivot and escalate their access",
    "start": "385440",
    "end": "391139"
  },
  {
    "text": "how could that work in a kubernetes system well as we see here we have got a cicd",
    "start": "391139",
    "end": "397380"
  },
  {
    "text": "pipeline in pink on the left hand side of this diagram",
    "start": "397380",
    "end": "403100"
  },
  {
    "text": "what happens well first of all this malicious code in the supply chain either gets built into an image or into",
    "start": "403199",
    "end": "409680"
  },
  {
    "text": "a dependency just pulling and running something from Docker Hub is a classic version of this because ultimately as",
    "start": "409680",
    "end": "417060"
  },
  {
    "text": "the packager and distributor they don't necessarily look at what's in that",
    "start": "417060",
    "end": "422400"
  },
  {
    "text": "image in this case the malicious dependency goes into the cicd pipeline and is built",
    "start": "422400",
    "end": "429539"
  },
  {
    "text": "and trusted that then runs in a production system this is our reverse shell firing back",
    "start": "429539",
    "end": "436620"
  },
  {
    "text": "with the payload and what has happened here a malicious update to a software package has resulted in a compromise of",
    "start": "436620",
    "end": "443759"
  },
  {
    "text": "a production system as I say we should have multiple layers of control that prevent this kind of thing but this is exactly the log four",
    "start": "443759",
    "end": "450660"
  },
  {
    "text": "shelf pattern except for the fact that that was actually in the in the software for a long time",
    "start": "450660",
    "end": "457139"
  },
  {
    "text": "we could still see a supply chain attack um a replay attack where somebody",
    "start": "457139",
    "end": "462660"
  },
  {
    "text": "forces a victim to install an old version of log4j and the exact same",
    "start": "462660",
    "end": "469680"
  },
  {
    "text": "dependency attack is in play so",
    "start": "469680",
    "end": "475740"
  },
  {
    "text": "how do we actually attack a supply chain what can we do we can affect a trusted supplier this is",
    "start": "475740",
    "end": "482460"
  },
  {
    "text": "somebody who has commit access or or pushed access to a package repository or",
    "start": "482460",
    "end": "487860"
  },
  {
    "text": "to GitHub or some Version Control System that's either infecting the dependency",
    "start": "487860",
    "end": "493919"
  },
  {
    "text": "or the package itself of course we have this question of transitive dependencies which means",
    "start": "493919",
    "end": "499979"
  },
  {
    "text": "um we get into s-bomb and the CTE scanning we have to understand exactly what we have installed because the",
    "start": "499979",
    "end": "507120"
  },
  {
    "text": "attack surface is the size of every dependency running in that package",
    "start": "507120",
    "end": "513440"
  },
  {
    "text": "we can in fact the source code itself so it's not attacking the dependency it is",
    "start": "513599",
    "end": "519240"
  },
  {
    "text": "attacking the uh the the program or the say the web server or the application",
    "start": "519240",
    "end": "524700"
  },
  {
    "text": "that we're shipping uh we can play with the build infrastructure as an attacker this is the solarwinds Sunburst style attack",
    "start": "524700",
    "end": "532100"
  },
  {
    "text": "where attackers were able to infect and then find the presence in the",
    "start": "532100",
    "end": "539580"
  },
  {
    "text": "cicd infrastructure and tamper with a build in Flight in a difficult to detect",
    "start": "539580",
    "end": "544680"
  },
  {
    "text": "way Cloud native Community has responded with tools like witness that we'll talk about briefly later",
    "start": "544680",
    "end": "550680"
  },
  {
    "text": "that can now detect this kind of thing but it is a nuanced and difficult attack to detect",
    "start": "550680",
    "end": "556800"
  },
  {
    "text": "without some form of consciousness of it or finally affecting the runtime",
    "start": "556800",
    "end": "562200"
  },
  {
    "text": "environment why worry about a package when you could in fact or persist on the",
    "start": "562200",
    "end": "567660"
  },
  {
    "text": "underlying host so what then happens if we're compromised well all the negative",
    "start": "567660",
    "end": "573899"
  },
  {
    "text": "outcomes ultimately apt advanced persistent threats are the worst",
    "start": "573899",
    "end": "579240"
  },
  {
    "text": "nightmare for an organization because that results in probably a slow drain of your IP or your key material or",
    "start": "579240",
    "end": "587640"
  },
  {
    "text": "potentially allows a compromised or that allows the attacker to attack somewhere",
    "start": "587640",
    "end": "594120"
  },
  {
    "text": "that that producer is being consumed so for example seeing things like the OCTA",
    "start": "594120",
    "end": "600540"
  },
  {
    "text": "breach that was a support company who were breached that would then be access",
    "start": "600540",
    "end": "605700"
  },
  {
    "text": "to the OCTA systems themselves um crypto jacking and extortion well",
    "start": "605700",
    "end": "610800"
  },
  {
    "text": "crypto mining is no longer the jour but encrypting all of an organization's uh",
    "start": "610800",
    "end": "617220"
  },
  {
    "text": "assets and also leaking them is uh is a pretty bad day it means that",
    "start": "617220",
    "end": "622500"
  },
  {
    "text": "even with restore from backup there is potential IP loss and then they have of course further supply chain attacks Downstream of the",
    "start": "622500",
    "end": "630180"
  },
  {
    "text": "producer tank security maintains a list a catalog of different types of supply chain",
    "start": "630180",
    "end": "636360"
  },
  {
    "text": "compromise it is interesting to peruse this it is kept up to date and gives a view on the",
    "start": "636360",
    "end": "644279"
  },
  {
    "text": "different categories it's not an exhaustive list but it is a categorical exposition of",
    "start": "644279",
    "end": "651660"
  },
  {
    "text": "the types of compromises okay that's the abstract background",
    "start": "651660",
    "end": "658440"
  },
  {
    "text": "let's have a look at the problem space why is this a difficult thing well the",
    "start": "658440",
    "end": "663720"
  },
  {
    "text": "problem space is very large software Supply chains can be super complex multi-dimensional and not just in terms",
    "start": "663720",
    "end": "670620"
  },
  {
    "text": "of Technology there are also people involved and generally people are the biggest",
    "start": "670620",
    "end": "676440"
  },
  {
    "text": "threat technology is rarely the most complex part of the problem",
    "start": "676440",
    "end": "681480"
  },
  {
    "text": "the flexibility and adaptability of Supply chains is also a threat",
    "start": "681480",
    "end": "686519"
  },
  {
    "text": "we potentially introduce more deterministic behavior and that is something that we need to manage so how",
    "start": "686519",
    "end": "692640"
  },
  {
    "text": "do we navigate this problem space through these dark Waters without being hijacked by nefarious Pirates",
    "start": "692640",
    "end": "699860"
  },
  {
    "text": "threat modeling this is the process of quantifiably building a map of our systems applying",
    "start": "700200",
    "end": "707820"
  },
  {
    "text": "security controls we might use different forms of diagram like an attack tree to look at the the kill chain or the",
    "start": "707820",
    "end": "715200"
  },
  {
    "text": "specific versions uh the specific steps by which we compromise the system",
    "start": "715200",
    "end": "722720"
  },
  {
    "text": "on the back of these we have a quantifiable model that we can then use to apply controls again this concept of",
    "start": "723180",
    "end": "728700"
  },
  {
    "text": "developer retention and not making a system constrictive or overly restrictive to use is really important",
    "start": "728700",
    "end": "735240"
  },
  {
    "text": "to maintain and develop the trust between security and development part of",
    "start": "735240",
    "end": "741120"
  },
  {
    "text": "an organization so",
    "start": "741120",
    "end": "746399"
  },
  {
    "text": "how do we go about threat modeling well there are some differences uh for the sake of this presentation and",
    "start": "746399",
    "end": "751980"
  },
  {
    "text": "the next steps we'll look at a high level reference architecture here purely as an example so artifact storage",
    "start": "751980",
    "end": "758940"
  },
  {
    "text": "may include binaries and images metadata depends on the stage but may include our test reports vulnerability",
    "start": "758940",
    "end": "766019"
  },
  {
    "text": "reports pipeline execution s-bombs build might have a local runtime temporary",
    "start": "766019",
    "end": "771720"
  },
  {
    "text": "storage for artifacts before being pushed to the main and we're looking at work node workload",
    "start": "771720",
    "end": "777600"
  },
  {
    "text": "pipeline testers and observers which are capturing verifiable metadata from the pipeline processes and finally an",
    "start": "777600",
    "end": "784800"
  },
  {
    "text": "admission controller both when the pipeline is instantiated or when workloads are deployed to production",
    "start": "784800",
    "end": "791959"
  },
  {
    "text": "so we will come back to that what is threat modeling then a systematic approach that democratizes the Gathering",
    "start": "792779",
    "end": "800579"
  },
  {
    "text": "of information and the surfacing of threats development teams test teams product",
    "start": "800579",
    "end": "807300"
  },
  {
    "text": "owners actual security people different individuals in that group know",
    "start": "807300",
    "end": "812940"
  },
  {
    "text": "where different bodies are buried and bringing everybody together again democratizing the information",
    "start": "812940",
    "end": "820019"
  },
  {
    "text": "gathering process leads to a far significant or significantly better result than security working in",
    "start": "820019",
    "end": "826860"
  },
  {
    "text": "isolation for example okay so threat modeling in destroyed",
    "start": "826860",
    "end": "832320"
  },
  {
    "text": "model popularized by Microsoft what are we building what could possibly go wrong an exercise in extreme catastrophization",
    "start": "832320",
    "end": "841500"
  },
  {
    "text": "how can we reduce the risk of catastrophe occurring and then finally are we ever finished well no threat",
    "start": "841500",
    "end": "848519"
  },
  {
    "text": "models are as big as the or expand into the time allocated so we scoped them in",
    "start": "848519",
    "end": "854279"
  },
  {
    "text": "order to have a reasonable chance of completing things and rinse and repeats so what are we",
    "start": "854279",
    "end": "860639"
  },
  {
    "text": "building well we're looking at supply chain and the flows of data within it use cases as well anything that is",
    "start": "860639",
    "end": "867720"
  },
  {
    "text": "supplied or produced the business impacts we've got confidentiality integrity and",
    "start": "867720",
    "end": "873480"
  },
  {
    "text": "availability the the classic CIA Triad and the operating model the consumption",
    "start": "873480",
    "end": "879540"
  },
  {
    "text": "and use of that thing by teams so a quick shout out to my colleague Nick Simpson from the control plane",
    "start": "879540",
    "end": "886079"
  },
  {
    "text": "security team uh we have toxic combinations here and we",
    "start": "886079",
    "end": "891120"
  },
  {
    "text": "can reference individual threat models for each specific piece",
    "start": "891120",
    "end": "896399"
  },
  {
    "text": "the point here is the coupling downscoping making sure that we have an",
    "start": "896399",
    "end": "902100"
  },
  {
    "text": "attainable problem space in which to work because as I say work expands to build the time threat models will easily",
    "start": "902100",
    "end": "908720"
  },
  {
    "text": "expand into the available space that we give them so what's the worst that could happen",
    "start": "908720",
    "end": "915240"
  },
  {
    "text": "the way that I personally enjoy doing this most is to operate in a completely open",
    "start": "915240",
    "end": "921120"
  },
  {
    "text": "free-for-all people just throw threats out and you basically invent the very worst things",
    "start": "921120",
    "end": "926339"
  },
  {
    "text": "you could imagine occurring to A system that can go anywhere through from",
    "start": "926339",
    "end": "931980"
  },
  {
    "text": "Cipher is cracked and someone was recording the information we looked back to previous TLS revisions it has",
    "start": "931980",
    "end": "939180"
  },
  {
    "text": "happened but what's the actual probability of it happening what's the impact well the probability is probably",
    "start": "939180",
    "end": "944399"
  },
  {
    "text": "quite low but the impact would be reasonably High we can multiply those two numbers together and get a",
    "start": "944399",
    "end": "949440"
  },
  {
    "text": "probability of abstract risk score and then we can order those threats by",
    "start": "949440",
    "end": "955560"
  },
  {
    "text": "our abstract view of risk that doesn't necessarily mean that we Implement controls in that order but it gives us",
    "start": "955560",
    "end": "962279"
  },
  {
    "text": "some precedence this is a very abstract exercise and bringing some sort of quantifiability and reason to it is just",
    "start": "962279",
    "end": "969720"
  },
  {
    "text": "useful to allow us to have a conversation starting with that very abstract",
    "start": "969720",
    "end": "974760"
  },
  {
    "text": "catastrophization we get those threats we can then cross-reference them against something",
    "start": "974760",
    "end": "979800"
  },
  {
    "text": "like stride which is where we're saying well what happens if we spoof this particular thing or we impersonate or we",
    "start": "979800",
    "end": "987180"
  },
  {
    "text": "tamper with it by having the very uh loose diffuse",
    "start": "987180",
    "end": "992579"
  },
  {
    "text": "thought exercise to begin with that gives space for a lot of creativity let's say but then by going through the",
    "start": "992579",
    "end": "999600"
  },
  {
    "text": "stride process we apply a little bit of rigor we make sure that we've exhausted the potential",
    "start": "999600",
    "end": "1004940"
  },
  {
    "text": "permutations of those different threats we can then go through and look at a standards documents",
    "start": "1004940",
    "end": "1011120"
  },
  {
    "text": "um there's nist CIS produce governance things for whatever it is specifically we're talking about",
    "start": "1011120",
    "end": "1017000"
  },
  {
    "text": "for a cloud native system there are CIS benchmarks for how to secure kubernetes for example they exist for your cloud",
    "start": "1017000",
    "end": "1022639"
  },
  {
    "text": "provider they exist for your operating system and then finally once we've exhausted and again this is a",
    "start": "1022639",
    "end": "1029600"
  },
  {
    "text": "question of time what I've just described could be two hours it could be two weeks it depends upon your",
    "start": "1029600",
    "end": "1035600"
  },
  {
    "text": "availability really and your organization's desire to pay for it then we get to a place where we can",
    "start": "1035600",
    "end": "1041418"
  },
  {
    "text": "start charting the attack paths which different problems do we have to chain together to actually get a uh to end up",
    "start": "1041419",
    "end": "1049460"
  },
  {
    "text": "in a problematic situation we saw on that uh that compromise document earlier",
    "start": "1049460",
    "end": "1055520"
  },
  {
    "text": "if we start from exploiting an open source library and we get into a cicd build and then we run that thing in",
    "start": "1055520",
    "end": "1061160"
  },
  {
    "text": "production well we shouldn't have the ability to open arbitrary shells or",
    "start": "1061160",
    "end": "1066440"
  },
  {
    "text": "attach a reverse shell to A bash process that should be detected by intrusion detection we shouldn't be able to punch",
    "start": "1066440",
    "end": "1072559"
  },
  {
    "text": "outbound to the internet through our egress controlled firewall so we look at the paths and we say",
    "start": "1072559",
    "end": "1079340"
  },
  {
    "text": "what's the most simple control we could apply to cover as many cases as possible and to ensure that the threats we've",
    "start": "1079340",
    "end": "1085940"
  },
  {
    "text": "identified are not actually executable or exploitable in our environment",
    "start": "1085940",
    "end": "1092260"
  },
  {
    "text": "we've also got those uh we can we can use our synths and various other",
    "start": "1092260",
    "end": "1099700"
  },
  {
    "text": "guidance produced by sigs and various are the standards bodies",
    "start": "1099700",
    "end": "1106160"
  },
  {
    "text": "micro attack of course yes strident Pastor both as types of",
    "start": "1106160",
    "end": "1112640"
  },
  {
    "text": "enumeration of threats um Frameworks let's say so threats are",
    "start": "1112640",
    "end": "1117740"
  },
  {
    "text": "against the security properties we want and must Preserve in our supply chain but instance Integrity Integrity of the",
    "start": "1117740",
    "end": "1123620"
  },
  {
    "text": "source Integrity of the build and integrity of our runtime let's see how Integrity can be",
    "start": "1123620",
    "end": "1129320"
  },
  {
    "text": "compromised so threads by themselves can be useful but actually the",
    "start": "1129320",
    "end": "1136039"
  },
  {
    "text": "exploitation is much more useful I've publish all these slides on Twitter",
    "start": "1136039",
    "end": "1141620"
  },
  {
    "text": "because there's a number of diagrams coming up here after we've identified those threats we",
    "start": "1141620",
    "end": "1147860"
  },
  {
    "text": "can build something like this and a tax tree is a view of exploitability chaining together those individual",
    "start": "1147860",
    "end": "1153980"
  },
  {
    "text": "points of compromise they're A visual representation of an attack and that likelihood and impact is",
    "start": "1153980",
    "end": "1160039"
  },
  {
    "text": "what we can multiply together to give this again abstract risk score",
    "start": "1160039",
    "end": "1165740"
  },
  {
    "text": "so step three what can we do about the threats that we have identified",
    "start": "1165740",
    "end": "1172600"
  },
  {
    "text": "it is rarely possible to implement all these controls generally we wouldn't even want to again",
    "start": "1172640",
    "end": "1179059"
  },
  {
    "text": "this question of allowing developers the freedom to do what the business needs which is ship features and ultimately",
    "start": "1179059",
    "end": "1185480"
  },
  {
    "text": "there's no point having a secure system if we're beating to markets or our feature set is reduced by a developer",
    "start": "1185480",
    "end": "1191600"
  },
  {
    "text": "ability to ship breaking the attack chain is where we layer our controls across the branches",
    "start": "1191600",
    "end": "1198140"
  },
  {
    "text": "of the attack Tree in order to get the minimum viable set of security configurations",
    "start": "1198140",
    "end": "1204140"
  },
  {
    "text": "again with that view on developer productivity and finally did we do a",
    "start": "1204140",
    "end": "1209539"
  },
  {
    "text": "good job looping back to the beginning of the process",
    "start": "1209539",
    "end": "1215480"
  },
  {
    "text": "um an artist is actually as good as when they started their last piece of work and conceived the final piece and then",
    "start": "1215480",
    "end": "1220940"
  },
  {
    "text": "filled in the gaps and again we get to the end and think okay we've now completed one iteration what did we",
    "start": "1220940",
    "end": "1227000"
  },
  {
    "text": "learn what specifics of the system may we have the scoped that we want to bring into scope or where did we not have",
    "start": "1227000",
    "end": "1233780"
  },
  {
    "text": "enough time to spend that maybe we want to go back and look at and this cycle of threat modeling is then either on a",
    "start": "1233780",
    "end": "1240440"
  },
  {
    "text": "temporal Cadence we do it every six or twelve months maybe it's on a feature triggered Cadence we're about to change",
    "start": "1240440",
    "end": "1246140"
  },
  {
    "text": "or substantially alter a piece of functionality that is",
    "start": "1246140",
    "end": "1252200"
  },
  {
    "text": "either it's seeing exploits the scene of vulnerabilities before or it's business",
    "start": "1252200",
    "end": "1258860"
  },
  {
    "text": "critical or it's going to be refactored and so there's a lot of code change",
    "start": "1258860",
    "end": "1264100"
  },
  {
    "text": "it's a constant observational Loop cycling through",
    "start": "1264440",
    "end": "1271039"
  },
  {
    "text": "we can also go through at that point we can test these things dynamically we can apply security testing in case of a",
    "start": "1271039",
    "end": "1278000"
  },
  {
    "text": "penetration test and then as we see to revise the model going back and reviewing",
    "start": "1278000",
    "end": "1284919"
  },
  {
    "text": "so at this point we understand with threat modeling we have a way to identify threats",
    "start": "1288080",
    "end": "1294020"
  },
  {
    "text": "somewhat less than and assess how much damage they can make prioritizing the order of controls to",
    "start": "1294020",
    "end": "1300679"
  },
  {
    "text": "apply we also understand the controls can break attack chains or very least slow",
    "start": "1300679",
    "end": "1306440"
  },
  {
    "text": "down our adversaries but historically not many people have been focused on Supply chains we did not",
    "start": "1306440",
    "end": "1312980"
  },
  {
    "text": "see this come into stock relief until the Advent of the Sunburst attacks this has changed dramatically with",
    "start": "1312980",
    "end": "1319100"
  },
  {
    "text": "various bits of Ordnance from the US government so let's have a look what's available to us in terms of Frameworks architectural",
    "start": "1319100",
    "end": "1325340"
  },
  {
    "text": "recommendations best practices and controls for supply chain and security",
    "start": "1325340",
    "end": "1331780"
  },
  {
    "text": "you start with Salter salsa is a framework to quantify the",
    "start": "1332600",
    "end": "1338059"
  },
  {
    "text": "defensive posture of an organization's supply chain activities",
    "start": "1338059",
    "end": "1343100"
  },
  {
    "text": "they recommend code signing artifact signing build distribution policies code",
    "start": "1343100",
    "end": "1349940"
  },
  {
    "text": "provenance is just a claim that some entity generally the Builder produced software artifacts or two executed a",
    "start": "1349940",
    "end": "1358039"
  },
  {
    "text": "recipe with some artifacts as inputs and then we stamped the output with a",
    "start": "1358039",
    "end": "1363080"
  },
  {
    "text": "signature to say the person in control of this key at this time liked this sufficiently",
    "start": "1363080",
    "end": "1368539"
  },
  {
    "text": "to give you some cryptographic metadata about it",
    "start": "1368539",
    "end": "1373000"
  },
  {
    "text": "the cloud native security supply chain white paper is a tag security effort",
    "start": "1375799",
    "end": "1380960"
  },
  {
    "text": "that involves detailing these controls and is a reference guide I strongly",
    "start": "1380960",
    "end": "1386240"
  },
  {
    "text": "recommend that you have a look there is not only a supply chain security white paper but also secondarily a cloud",
    "start": "1386240",
    "end": "1392720"
  },
  {
    "text": "native security white paper in general huge props to friends and colleagues with tax security for putting that",
    "start": "1392720",
    "end": "1399020"
  },
  {
    "text": "together so",
    "start": "1399020",
    "end": "1404120"
  },
  {
    "text": "the guidance is we take these five stages and protect first of all our source code",
    "start": "1404120",
    "end": "1409640"
  },
  {
    "text": "third party artifacts and dependencies the build infrastructure itself the artifacts that we build on that",
    "start": "1409640",
    "end": "1416179"
  },
  {
    "text": "infrastructure and finally the runtime environment into which we are deploying",
    "start": "1416179",
    "end": "1422059"
  },
  {
    "text": "so this is a full list of controls for each of the principles this will show you broadly how the controls and",
    "start": "1422059",
    "end": "1428000"
  },
  {
    "text": "practices are always hinged on those set out principles",
    "start": "1428000",
    "end": "1433280"
  },
  {
    "text": "again a lot of information density here these will be up on Twitter very shortly",
    "start": "1433280",
    "end": "1439840"
  },
  {
    "text": "and this is mapping each of the individual recommendations from the supply chain security white paper to our",
    "start": "1444080",
    "end": "1449480"
  },
  {
    "text": "abstract infrastructure and as you can see there are a great",
    "start": "1449480",
    "end": "1456080"
  },
  {
    "text": "number of different things to be aware of here once we've been through all of that",
    "start": "1456080",
    "end": "1461960"
  },
  {
    "text": "process we still need to secure the runtime environment and that's not covered by",
    "start": "1461960",
    "end": "1468500"
  },
  {
    "text": "by these uh by the supply chain attacks it is an effective remediation point",
    "start": "1468500",
    "end": "1473960"
  },
  {
    "text": "but yes is uh especially complex so yeah back to Salter this is an open",
    "start": "1473960",
    "end": "1479299"
  },
  {
    "text": "ssf the open source um security Foundation of course",
    "start": "1479299",
    "end": "1486320"
  },
  {
    "text": "and it's a set of standards and Technical principles that we can adopt to improve artifact integrity and build",
    "start": "1486320",
    "end": "1492140"
  },
  {
    "text": "towards more resilient systems not a single tool but a number of different",
    "start": "1492140",
    "end": "1497299"
  },
  {
    "text": "steps that we can take to achieve a hardened more hardened deployments",
    "start": "1497299",
    "end": "1506200"
  },
  {
    "text": "and steps are meant to address more and more sophisticated threats as we advance to social level four",
    "start": "1506480",
    "end": "1513620"
  },
  {
    "text": "um what we're looking at here is a list of potential compromise points for um the build of the system from this",
    "start": "1513620",
    "end": "1521000"
  },
  {
    "text": "consumer producer perspective there are broadly four stages",
    "start": "1521000",
    "end": "1527120"
  },
  {
    "text": "um it's supposed to be easy to adopt giving you visibility into your supply chain and the ability to generate provenance",
    "start": "1527120",
    "end": "1533120"
  },
  {
    "text": "that is metadata about where this thing came from in the event of compromise that allows us to backtrack and at least",
    "start": "1533120",
    "end": "1539659"
  },
  {
    "text": "get some visibility into what's happening then we start to protect against software tampering adding minimal build",
    "start": "1539659",
    "end": "1545779"
  },
  {
    "text": "Integrity guarantees salsa level three is hardening the infrastructure against attacks integrating more Trust",
    "start": "1545779",
    "end": "1552320"
  },
  {
    "text": "and then finally stage four requires a two-person reviewable changes and a hermetic reproducible build process that",
    "start": "1552320",
    "end": "1560179"
  },
  {
    "text": "reproducibility is important because it allows us to do geographically dispersed builds this is how Debian this is how",
    "start": "1560179",
    "end": "1567679"
  },
  {
    "text": "Arch Linux various other operating systems build in the events of a",
    "start": "1567679",
    "end": "1573200"
  },
  {
    "text": "compromised build infrastructure the ability to run duplicate builds in geographically redundant locations and",
    "start": "1573200",
    "end": "1580159"
  },
  {
    "text": "compare the cryptographic hashes of the outcomes gives us a way to detect if there has",
    "start": "1580159",
    "end": "1585260"
  },
  {
    "text": "been tampering with the build infrastructure any non-determinism which includes time stamps or for example",
    "start": "1585260",
    "end": "1592640"
  },
  {
    "text": "Locale changes that alter The Ordering of um text sourcing",
    "start": "1592640",
    "end": "1598640"
  },
  {
    "text": "these will fundamentally by definition alter the hash the content address of the data and so we have to strive for",
    "start": "1598640",
    "end": "1605240"
  },
  {
    "text": "reproducibility as the foundation for that approach so Salter asked us to protect the source",
    "start": "1605240",
    "end": "1612380"
  },
  {
    "text": "code obviously a lot of these things are just best practice salsa comes from Google's",
    "start": "1612380",
    "end": "1620059"
  },
  {
    "text": "practices since 2013 and is ultimately a view on how they have looked to respond",
    "start": "1620059",
    "end": "1627020"
  },
  {
    "text": "to an advanced persistent threat that took over their systems and resulted in a loss of IP",
    "start": "1627020",
    "end": "1636159"
  },
  {
    "text": "there's an interesting point here about protecting the build that I'll get to with the concept of salsa minus one",
    "start": "1636559",
    "end": "1642820"
  },
  {
    "text": "and finally yeah protecting the provenance which is once we've generated this metadata ensuring it's not tampered",
    "start": "1644299",
    "end": "1649520"
  },
  {
    "text": "with the thing missing from the social specification is the concept of the",
    "start": "1649520",
    "end": "1656419"
  },
  {
    "text": "Integrity or the sanctity of the infrastructure that things are being built on if we are a Google sized",
    "start": "1656419",
    "end": "1662059"
  },
  {
    "text": "organization we're going to be relatively confident that our build infrastructure is already resistant that there's good access",
    "start": "1662059",
    "end": "1668539"
  },
  {
    "text": "control that we can detect tampering as it occurs for the rest of us this plays",
    "start": "1668539",
    "end": "1674419"
  },
  {
    "text": "into the shared responsibility model and we have to be cognizant that even if we get to salsa level four if somebody has",
    "start": "1674419",
    "end": "1681500"
  },
  {
    "text": "compromised our build infrastructure we will still have a bad day so this concept of salsa minus one is looking to",
    "start": "1681500",
    "end": "1689059"
  },
  {
    "text": "address that for the rest of us preventing tampering with the build systems controls by ensuring the build",
    "start": "1689059",
    "end": "1695120"
  },
  {
    "text": "is only accessible to authorized users which is a difficult problem in and of itself when cicd is nothing more than",
    "start": "1695120",
    "end": "1702020"
  },
  {
    "text": "remote code execution as a service but intentionally so",
    "start": "1702020",
    "end": "1707559"
  },
  {
    "text": "this is basically the state of the ecosystem as we see it today again",
    "start": "1709279",
    "end": "1715159"
  },
  {
    "text": "duplicated in our supply chain security best practices flash cards should you be so inclined",
    "start": "1715159",
    "end": "1722240"
  },
  {
    "text": "looking at the base image I mean we know these things we want to ship minimal dependencies and have hardened base",
    "start": "1722240",
    "end": "1729080"
  },
  {
    "text": "images for some organizations if we can just drop statically compiled applications into a essentially scratch",
    "start": "1729080",
    "end": "1735260"
  },
  {
    "text": "container just with our local information and our root public certificates in there then we're in a really nice place",
    "start": "1735260",
    "end": "1741860"
  },
  {
    "text": "because in the event of remote code execution and let's go back to back to",
    "start": "1741860",
    "end": "1747020"
  },
  {
    "text": "log the shell for example actually that's not a good example if they didn't spawn a bash shell specifically but something",
    "start": "1747020",
    "end": "1753799"
  },
  {
    "text": "um like shellshock let's say which does spawn a reverse shell to get that TCP connection back out well if we don't",
    "start": "1753799",
    "end": "1760520"
  },
  {
    "text": "have bash in our base image it can't be compromised if someone's able to run uh code remotely generally",
    "start": "1760520",
    "end": "1769520"
  },
  {
    "text": "they'll try and tap out to a bash shell and use that to establish persistence if we don't have the things for the",
    "start": "1769520",
    "end": "1775880"
  },
  {
    "text": "attacker to exploit we're in a more hardened position this is one of the original Promises of containers so we",
    "start": "1775880",
    "end": "1782120"
  },
  {
    "text": "know that it's nice and simple many organizations require a lot more than that to go into base images to do with",
    "start": "1782120",
    "end": "1788360"
  },
  {
    "text": "compliance or their own routes of trust so at least making sure that we have minimal operating system dependencies",
    "start": "1788360",
    "end": "1794360"
  },
  {
    "text": "gives us that reduced attack surface we are just running a microcosm of Linux",
    "start": "1794360",
    "end": "1800600"
  },
  {
    "text": "within a container and so we apply our standard best practices",
    "start": "1800600",
    "end": "1806679"
  },
  {
    "text": "making sure developers can debug images is useful there are now excellent ways",
    "start": "1807020",
    "end": "1812779"
  },
  {
    "text": "to do this um thankfully kubernetes has introduced ephemeral containers so we can actually run a debug container as well",
    "start": "1812779",
    "end": "1819200"
  },
  {
    "text": "more interestingly perhaps into the code commit signing itself this is really contentious certainly the Linux kernel",
    "start": "1819200",
    "end": "1827059"
  },
  {
    "text": "suggests that only a merge commit needs to be signed more broadly I think actually it makes",
    "start": "1827059",
    "end": "1834440"
  },
  {
    "text": "sense to sign everything why is that well because again a signature says the person in",
    "start": "1834440",
    "end": "1841039"
  },
  {
    "text": "control of this key at this time liked this enough to do a thing if we have a password on our SSH key that makes it a",
    "start": "1841039",
    "end": "1848000"
  },
  {
    "text": "lot more difficult for a compromised key to be used to push code to GitHub",
    "start": "1848000",
    "end": "1853580"
  },
  {
    "text": "if we have local device compromise we can we can still",
    "start": "1853580",
    "end": "1858640"
  },
  {
    "text": "sniff the keystrokes and we can still exfiltrate that key push code if we have",
    "start": "1858640",
    "end": "1864500"
  },
  {
    "text": "a gpg key we need a physical second Factor stuck in the side of the machine for a period",
    "start": "1864500",
    "end": "1870500"
  },
  {
    "text": "of time to actually perform the the signature and the push if we also",
    "start": "1870500",
    "end": "1876500"
  },
  {
    "text": "enforce Branch protection that requires that in my opinion that is significantly more hardened than just requiring",
    "start": "1876500",
    "end": "1884419"
  },
  {
    "text": "single um the single control of a S8 key static analysis reachability analysis",
    "start": "1884419",
    "end": "1891679"
  },
  {
    "text": "ties into something called Vex the vulnerability exploitability exchange format I gave a talk about at the open",
    "start": "1891679",
    "end": "1898399"
  },
  {
    "text": "source Summit in Dublin on this which is which at this point if we have a CV in a project that we",
    "start": "1898399",
    "end": "1906200"
  },
  {
    "text": "depend upon so we have maybe a web server and the cves in one of its dependencies if there is no call graph",
    "start": "1906200",
    "end": "1912260"
  },
  {
    "text": "there's no code reachability to exploit that cve our vulnerability assessment teams should not have to worry about it",
    "start": "1912260",
    "end": "1918860"
  },
  {
    "text": "Vex is a way for the producer to say this is not vulnerable it's not",
    "start": "1918860",
    "end": "1925100"
  },
  {
    "text": "compromisable reachability analysis and AST observation abstract syntax tree walking",
    "start": "1925100",
    "end": "1931220"
  },
  {
    "text": "is how we can get some way to doing that there's also a symbolic execution mechanism for doing that it's a little",
    "start": "1931220",
    "end": "1938559"
  },
  {
    "text": "beyond the scope of this talk but certainly things that we're interested in contributing to",
    "start": "1938559",
    "end": "1944779"
  },
  {
    "text": "dependability sorry dependency analysis this is a minimum viable security",
    "start": "1944779",
    "end": "1949940"
  },
  {
    "text": "scanning for cpes but we do have to respond to them s-bomb generation so s-bombs are great",
    "start": "1949940",
    "end": "1957260"
  },
  {
    "text": "as long as they're correct generally s-spons are not correct and people don't ship them that's because",
    "start": "1957260",
    "end": "1963440"
  },
  {
    "text": "like cve scanning they just look at package manifests if you've got a",
    "start": "1963440",
    "end": "1969080"
  },
  {
    "text": "pom.xml or a package.json that's what generates your s-bomb that's not really",
    "start": "1969080",
    "end": "1975080"
  },
  {
    "text": "that useful if people are also downloading stuff straight from the Internet or dropping binary blobs in",
    "start": "1975080",
    "end": "1981380"
  },
  {
    "text": "um there is some support for this in recall which is public uh sort of signature registry",
    "start": "1981380",
    "end": "1986840"
  },
  {
    "text": "attached to the six door project which says you can push multiple versions of something attached to a specific hash",
    "start": "1986840",
    "end": "1992000"
  },
  {
    "text": "and then it's about the recency and your trust in the producer of those",
    "start": "1992000",
    "end": "1997100"
  },
  {
    "text": "but yes open and developing uh area of security interest CI scorecard",
    "start": "1997100",
    "end": "2003100"
  },
  {
    "text": "moving on to the build build tracing that's a tool called witness which will run as your paid one essentially and",
    "start": "2003100",
    "end": "2010179"
  },
  {
    "text": "Trace all your build Behavior to help derive what you actually do and how that is built",
    "start": "2010179",
    "end": "2016299"
  },
  {
    "text": "pipeline metadata collecting we've got in Toto and tough this is ensuring that our builds are",
    "start": "2016299",
    "end": "2022360"
  },
  {
    "text": "actually what we think they are and that we sign the inputs and outputs so that we know exactly where they came from",
    "start": "2022360",
    "end": "2027460"
  },
  {
    "text": "where they go the software Factory with frisker these are Advanced orchestrators that are doing a lot of this collection",
    "start": "2027460",
    "end": "2033640"
  },
  {
    "text": "of metadata and signing for us evidence leaks and Ledges whack just got",
    "start": "2033640",
    "end": "2038679"
  },
  {
    "text": "um the most popular projects on GitHub yesterday is a graph for the understanding of artifact composition it",
    "start": "2038679",
    "end": "2044679"
  },
  {
    "text": "essentially allows you to query your supply chain incredible piece of work really strong recommend recore is The",
    "start": "2044679",
    "end": "2050618"
  },
  {
    "text": "Ledger of course on the back of six store and artifact signing cosine notation it's like gpg signing to",
    "start": "2050619",
    "end": "2058118"
  },
  {
    "text": "Binary blobs and then we know most of the rest of these from application images and emission control I am almost",
    "start": "2058119",
    "end": "2066580"
  },
  {
    "text": "at time so moving a little bit quicker to the end pipeline metadata is the only way that we can piece things back",
    "start": "2066580",
    "end": "2072220"
  },
  {
    "text": "together it also gives us a different type of observation that is it time to wrap up the problem",
    "start": "2072220",
    "end": "2077440"
  },
  {
    "text": "space is significant threat modeling gives us a view on how we can actually",
    "start": "2077440",
    "end": "2084179"
  },
  {
    "text": "quantifiably defend ourselves plenty things plenty of things available to defend with",
    "start": "2084179",
    "end": "2089858"
  },
  {
    "text": "retrofit and slowly mature your supply chain and you are not alone tag security and the open ssf welcome all",
    "start": "2089859",
    "end": "2097060"
  },
  {
    "text": "contributors thank you very much for your attention [Applause]",
    "start": "2097060",
    "end": "2110430"
  },
  {
    "text": "we have time for just a question okay",
    "start": "2111220",
    "end": "2116280"
  },
  {
    "text": "Andy um have you seen a lot of companies actually start measuring their salsa level and is it reasonable to start",
    "start": "2123040",
    "end": "2130180"
  },
  {
    "text": "tasking one's vendors about their salsa level I think we should absolutely ask vendors it's probably a long time from",
    "start": "2130180",
    "end": "2138300"
  },
  {
    "text": "being something that will be externalized I think asking for s-bombs is probably a closer first step",
    "start": "2138300",
    "end": "2146380"
  },
  {
    "text": "um the existence of a vendor performing salsa work I think is a useful indicator",
    "start": "2146380",
    "end": "2152140"
  },
  {
    "text": "of the maturity but actually there's a lot of other things that are not covered like mean time to remediation if you're",
    "start": "2152140",
    "end": "2157420"
  },
  {
    "text": "being shipped to Binary artifacts how long do the vendors take before they actually patch it so salt is good for",
    "start": "2157420",
    "end": "2163540"
  },
  {
    "text": "that specific Sunburst supply chain attack I personally would like to see s-bombs",
    "start": "2163540",
    "end": "2169180"
  },
  {
    "text": "um distributed and also externalized by for example SAS providers and Cloud providers but I think the meantime's",
    "start": "2169180",
    "end": "2175480"
  },
  {
    "text": "remediation is actually the interesting sort of meta data I suppose",
    "start": "2175480",
    "end": "2181540"
  },
  {
    "text": "and it's difficult to do as well is the point it's computationally expensive and takes developer time",
    "start": "2181540",
    "end": "2188040"
  },
  {
    "text": "I have a few of these supply chain security best practices if anyone would like a flash card and I think I've got a",
    "start": "2190060",
    "end": "2195880"
  },
  {
    "text": "book signing in half an hour at the booth if you would like that too",
    "start": "2195880",
    "end": "2200940"
  }
]